uint64_t sub_1C07BF688(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 64) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ContactRelationshipSignal.ContactRelationshipType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF6)
  {
    if (a2 + 10 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 10) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 11;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xB;
  v5 = v6 - 11;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t type metadata accessor for ViewUpdate.ViewInProcessRunner()
{
  uint64_t result;

  result = qword_1ED7552C0;
  if (!qword_1ED7552C0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C07BF7B8()
{
  sub_1C07BF850();
  sub_1C07BF814();
  return sub_1C106C244();
}

unint64_t sub_1C07BF814()
{
  unint64_t result;

  result = qword_1ED758FB0;
  if (!qword_1ED758FB0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10CD2C0, &unk_1E7A41AF8);
    atomic_store(result, (unint64_t *)&qword_1ED758FB0);
  }
  return result;
}

unint64_t sub_1C07BF850()
{
  unint64_t result;

  result = qword_1ED7557F0;
  if (!qword_1ED7557F0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10CD298, &unk_1E7A41AF8);
    atomic_store(result, (unint64_t *)&qword_1ED7557F0);
  }
  return result;
}

uint64_t sub_1C07BF890(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1C0EBE6A0(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

void sub_1C07BF8D4(uint64_t a1)
{
  sub_1C0783638(*(void **)a1, *(_BYTE *)(a1 + 8));
}

__n128 initializeWithCopy for AmbientLightContent(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

_QWORD *initializeWithTake for BiomeStreamStoreCache.Key(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for BiomeStreamStoreCache.Key(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 8))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s9ViewStateVwet(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 64))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 32);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s9ViewStateVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 64) = 0;
    if (a2)
      *(_QWORD *)(result + 32) = a2;
  }
  return result;
}

uint64_t sub_1C07BFA28()
{
  unsigned __int8 *v0;

  return sub_1C07BFA30(*v0);
}

uint64_t sub_1C07BFA30(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C07BFA70 + 4 * byte_1C10BE530[a1]))(0x6564724F77656976, 0xED00006449646572);
}

uint64_t sub_1C07BFA70()
{
  return 0x5364656C62616E65;
}

uint64_t sub_1C07BFA94()
{
  return 0x4374706D65747461;
}

uint64_t sub_1C07BFAB4()
{
  return 0x73654D726F727265;
}

uint64_t sub_1C07BFAD4()
{
  return 0x7641737961776C61;
}

uint64_t sub_1C07BFAF8()
{
  return 0x724373656C626174;
}

uint64_t sub_1C07BFB1C()
{
  return 0x6570795466666964;
}

uint64_t sub_1C07BFB34()
{
  return 0x6B72616D6B6F6F62;
}

uint64_t destroy for DeviceBluetoothContent()
{
  return swift_bridgeObjectRelease();
}

__n128 initializeWithTake for StoredLocationVisit(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_1C07BFB6C()
{
  sub_1C07BFB94();
  return sub_1C1070D68();
}

unint64_t sub_1C07BFB94()
{
  unint64_t result;

  result = qword_1ED7597D8;
  if (!qword_1ED7597D8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10CDA78, &type metadata for ViewXPC.AccessError);
    atomic_store(result, (unint64_t *)&qword_1ED7597D8);
  }
  return result;
}

unint64_t sub_1C07BFBD0()
{
  return 0xD00000000000004BLL;
}

unint64_t sub_1C07BFBEC()
{
  sub_1C07BFBD0();
  return 0xD00000000000004BLL;
}

__n128 _s11SourceStateVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_1C07BFC28()
{
  return type metadata accessor for Source();
}

void sub_1C07BFC38(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_1C0BE8F84(a1, v3, a3);
}

uint64_t sub_1C07BFC40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 256) + 8))(v2, v1);
}

uint64_t sub_1C07BFC54()
{
  uint64_t v0;

  return v0 - 72;
}

uint64_t sub_1C07BFC78()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 352);
}

uint64_t sub_1C07BFC8C()
{
  return sub_1C106E518();
}

void sub_1C07BFC94(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_1C0784B6C(*(_QWORD *)(v2 - 160), a2);
}

uint64_t sub_1C07BFC9C()
{
  return sub_1C106B908();
}

uint64_t sub_1C07BFCA4()
{
  uint64_t (*v0)(BOOL);
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)(v1 - 104) + 16);
  sub_1C0A3A208(v2, v0);
  return v2;
}

uint64_t sub_1C07BFCC8@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 96) = a1;
  return v1 - 96;
}

uint64_t sub_1C07BFCDC()
{
  return sub_1C106F2F8();
}

void sub_1C07BFCE8()
{
  uint64_t v0;

}

uint64_t sub_1C07BFCF4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 - 216))();
}

void sub_1C07BFCFC()
{
  sub_1C07EB0C4();
}

uint64_t sub_1C07BFD08()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1C07B0E28(v1, v0);
}

uint64_t sub_1C07BFD14()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 200);
}

uint64_t sub_1C07BFD30()
{
  return sub_1C0DD9724();
}

uint64_t sub_1C07BFD3C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

void sub_1C07BFD44()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = v0;
}

uint64_t sub_1C07BFD5C()
{
  return sub_1C106D090();
}

void sub_1C07BFD64()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 72) = 9;
}

uint64_t sub_1C07BFD70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1C0A53D64(a1, *(_QWORD *)(v2 - 256) + a2);
}

uint64_t sub_1C07BFD94()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1C0788DAC(*(_QWORD *)(v1 - 192), v0, (uint64_t *)(v1 - 168));
}

uint64_t sub_1C07BFDA4()
{
  return sub_1C106DA50();
}

void sub_1C07BFDB0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;

  sub_1C0A06890(v2 + a1, v1, v3);
}

uint64_t sub_1C07BFDE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(v2 + a2) = a1;
  return sub_1C0884620();
}

uint64_t sub_1C07BFE28()
{
  return sub_1C106FC94();
}

_QWORD *sub_1C07BFE30()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C07A9480((_QWORD *)(v1 - 144), v0);
}

uint64_t sub_1C07BFE3C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1C0788DAC(a1, a2, (uint64_t *)(v2 - 72));
}

uint64_t sub_1C07BFE48()
{
  return sub_1C106AF9C();
}

uint64_t sub_1C07BFE6C()
{
  uint64_t v0;

  return v0;
}

void sub_1C07BFE78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 136) = (char *)&a9 - v9;
}

uint64_t sub_1C07BFE8C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1C07BFE9C@<X0>(uint64_t (*a1)(void)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 - 256) = v2;
  return a1();
}

uint64_t sub_1C07BFEA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

float sub_1C07BFEAC()
{
  float result;

  sub_1C0851BEC();
  return result;
}

uint64_t sub_1C07BFEB4(uint64_t (*a1)(uint64_t, _QWORD))
{
  uint64_t v1;

  return a1(v1 - 160, 0);
}

void sub_1C07BFEC8(_QWORD *a1)
{
  uint64_t *v1;

  sub_1C07BB218(a1, v1);
}

id sub_1C07BFED0(id a1)
{
  return a1;
}

uint64_t sub_1C07BFEE4()
{
  return 0x5464616F6C796170;
}

uint64_t sub_1C07BFF04(_QWORD *a1)
{
  uint64_t v1;

  sub_1C07A9480(a1, v1);
  return type metadata accessor for PartOfDayBehaviorHistogram(0);
}

uint64_t sub_1C07BFF20()
{
  return sub_1C106F97C();
}

uint64_t sub_1C07BFF28()
{
  uint64_t v0;

  return v0;
}

void sub_1C07BFF38()
{
  JUMPOUT(0x1C3BA79F4);
}

uint64_t sub_1C07BFF44()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C07B2D80(v0, 1, v1);
}

uint64_t sub_1C07BFF54()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C0B5AC50(v0, v1);
}

uint64_t sub_1C07BFF60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 + *(int *)(v0 + 28)) = *(_BYTE *)(v1 + *(int *)(v0 + 28));
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

uint64_t sub_1C07BFF84()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1C07BFF90()
{
  return sub_1C10705AC();
}

void sub_1C07BFF9C(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_1C087C414(a1, a2, v2);
}

uint64_t sub_1C07BFFB8(_WORD *a1)
{
  *a1 = 0;
  return sub_1C106F4A8();
}

uint64_t sub_1C07BFFC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 368))(a1, a2, v2);
}

uint64_t sub_1C07BFFD4()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 376))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176));
}

void sub_1C07BFFFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  sub_1C078A650(v0, v1, v2);
}

uint64_t sub_1C07C000C()
{
  return sub_1C10705AC();
}

uint64_t sub_1C07C0018()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 200);
}

uint64_t sub_1C07C002C()
{
  return sub_1C106FF04();
}

uint64_t sub_1C07C0038()
{
  return sub_1C106FAF0();
}

uint64_t sub_1C07C0040()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1C07B33B8(v1, v0);
}

int8x8_t sub_1C07C004C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int16x8_t a23,uint64_t a24)
{
  uint64_t v24;
  int8x8_t result;

  result = vmovn_s16(a23);
  *(_DWORD *)(a1 + 56) = result.i32[0];
  *(_QWORD *)(v24 + 16) = a24;
  return result;
}

uint64_t sub_1C07C0068(uint64_t a1)
{
  uint64_t v1;

  return sub_1C07D6D1C(a1, v1);
}

uint64_t sub_1C07C0070()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C07D6D1C(v1, v0);
}

uint64_t sub_1C07C007C@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 88) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_1C07C009C()
{
  return sub_1C1070AE0();
}

uint64_t sub_1C07C00BC()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 152) + 8))(v0, *(_QWORD *)(v1 - 144));
}

void sub_1C07C00D4(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 288) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1C07C00F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 176) + 16))(*(_QWORD *)(v2 - 184), v1, v0);
}

_OWORD *sub_1C07C010C(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1C07C011C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C07ACF80(&qword_1ED760400);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C07C015C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1ED760400);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C07C01A4(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;

  sub_1C0776EB8(a1, *(void (**)(_QWORD *__return_ptr, uint64_t, __int128 *))(v2 + 16), a2);
}

double sub_1C07C01BC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v3;

  return sub_1C0776E54(a1, a2, *(_QWORD *)(v3 + 16), a3);
}

uint64_t sub_1C07C01C4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  sub_1C07A9790();
  v1 = (_QWORD *)sub_1C07789BC();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1C0791334(v1, (uint64_t)sub_1C0776FE4);
  return sub_1C07930CC(v2, v3, v4, v5, v6);
}

uint64_t sub_1C07C020C()
{
  uint64_t v0;

  sub_1C078A114();
  sub_1C07767BC();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C07C0244(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;

  sub_1C0789E98();
  sub_1C0780AE0(v5);
  *(_QWORD *)(v2 + 96) = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_1C077862C();
    return sub_1C077F6CC();
  }
  else
  {
    sub_1C078A114();
    sub_1C07767BC();
    return (*(uint64_t (**)(uint64_t))(v3 + 8))(a1);
  }
}

uint64_t ViewXPC.Server.accessToken(viewName:isSandboxed:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 56) = a2;
  *(_QWORD *)(v4 + 64) = v3;
  *(_BYTE *)(v4 + 104) = a3;
  *(_QWORD *)(v4 + 48) = a1;
  *(_QWORD *)(v4 + 72) = sub_1C07ACF80(&qword_1ED75E630);
  *(_QWORD *)(v4 + 80) = sub_1C0779644();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t destroy for ViewXPC.AccessError(uint64_t a1)
{
  return sub_1C07C034C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
}

uint64_t sub_1C07C0324()
{
  sub_1C07BFB94();
  return sub_1C1070D5C();
}

uint64_t sub_1C07C034C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t result;

  result = a2;
  switch(a7)
  {
    case 0:
    case 3:
      goto LABEL_4;
    case 1:
    case 4:
      goto LABEL_3;
    case 2:
      swift_bridgeObjectRelease();
LABEL_3:
      swift_bridgeObjectRelease();
LABEL_4:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C07C03B4(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  *(_BYTE *)(a2 + 48) = *((_BYTE *)a1 + 48);
  *(_OWORD *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 32) = v4;
  *(_OWORD *)a2 = v2;
  return a2;
}

unint64_t sub_1C07C03D4()
{
  unint64_t result;

  result = qword_1ED7558E8;
  if (!qword_1ED7558E8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10CDAE0, &type metadata for ViewXPC.AccessError);
    atomic_store(result, (unint64_t *)&qword_1ED7558E8);
  }
  return result;
}

void sub_1C07C0410()
{
  __int128 *v0;
  _BYTE v1[56];

  sub_1C07C03B4(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_1C07C0448()
{
  return 2;
}

void sub_1C07C04A4()
{
  __int128 *v0;
  _BYTE v1[56];

  sub_1C07C03B4(v0, (uint64_t)v1);
  sub_1C07C0410();
}

uint64_t sub_1C07C04D8()
{
  __int128 *v0;
  _BYTE v2[56];

  sub_1C07C03B4(v0, (uint64_t)v2);
  return sub_1C07752BC();
}

void sub_1C07C050C(uint64_t a1, uint64_t a2)
{
  sub_1C077FF60(a1, a2, sub_1C0777284);
}

uint64_t sub_1C07C051C(uint64_t a1, uint64_t a2)
{
  return sub_1C07A6F2C(a1, a2, (uint64_t (*)(void))sub_1C07C0958);
}

uint64_t sub_1C07C0528(uint64_t a1)
{
  uint64_t v1;

  return sub_1C0778BB8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1C07C0540()
{
  uint64_t result;
  unint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char v19[16];
  uint64_t *v20;
  uint64_t *v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24[3];
  int64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;

  v28 = 0;
  v29 = 1;
  v26 = 0;
  v27 = 1;
  v20 = &v28;
  v21 = &v26;
  sub_1C07C050C((uint64_t)sub_1C07C0528, (uint64_t)v19);
  result = 0;
  if ((v29 & 1) != 0)
    return result;
  v1 = v28;
  if (v28 < 1)
    return result;
  result = 0;
  if ((v27 & 1) != 0 || v26 < 1)
    return result;
  v2 = v26 - v28;
  v3 = (double)(v26 - v28) / (double)v26;
  if ((unint64_t)v28 <= 0x400 && v3 >= 0.85)
    return 0;
  if (qword_1ED762B20 != -1)
    swift_once();
  v4 = sub_1C106F544();
  sub_1C079E000(v4, (uint64_t)qword_1ED78D9F8);
  sub_1C079AA10();
  v5 = sub_1C106F538();
  v6 = sub_1C1070384();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = sub_1C0775854();
    v24[0] = sub_1C0775854();
    *(_DWORD *)v7 = 136315394;
    swift_retain();
    v8 = sub_1C09BC1B8();
    v10 = v9;
    swift_release();
    v23 = sub_1C0788DAC(v8, v10, v24);
    sub_1C10705AC();
    sub_1C077971C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2048;
    v23 = *(_QWORD *)&v3;
    sub_1C10705AC();
    _os_log_impl(&dword_1C0771000, v5, v6, "%s: load factor = %f", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    sub_1C0776778();
  }

  result = sub_1C077971C();
  if (v3 >= 0.4)
    goto LABEL_16;
  v11 = v1 - v2;
  if (__OFSUB__(v1, v2))
  {
    __break(1u);
LABEL_16:
    if ((uint64_t)(v1 + 0x4000000000000000) < 0)
    {
      __break(1u);
      return result;
    }
    v11 = v1 / 5;
  }
  if (v11 >= 250)
    v11 = 250;
  v25 = v11;
  sub_1C079AA10();
  v12 = sub_1C106F538();
  v13 = sub_1C1070384();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = sub_1C0775854();
    v24[0] = sub_1C0775854();
    *(_DWORD *)v14 = 136315394;
    swift_retain();
    v15 = sub_1C09BC1B8();
    v17 = v16;
    swift_release();
    v23 = sub_1C0788DAC(v15, v17, v24);
    sub_1C10705AC();
    sub_1C077971C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2048;
    sub_1C0775864();
    v22 = v25;
    sub_1C10705AC();
    _os_log_impl(&dword_1C0771000, v12, v13, "%s: will vacuum %ld pages.", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    sub_1C0776778();
  }

  v18 = sub_1C077971C();
  MEMORY[0x1E0C80A78](v18);
  sub_1C09BACCC();
  sub_1C0775864();
  return v25;
}

void sub_1C07C0958()
{
  sub_1C0A1A568();
}

uint64_t storeEnumTagSinglePayload for BiomeStreamStoreCache.Key(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 8) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void sub_1C07C09B0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  sub_1C07ACF80(a3);
  v4 = sub_1C0797310();
  v5(v4, a1);
  sub_1C0778534();
}

uint64_t sub_1C07C09E4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t);

  sub_1C07ACF80(a3);
  v4 = sub_1C077CEF4();
  v5(v4);
  return a2;
}

void sub_1C07C0A24(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  sub_1C07776A4(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t _s9ViewStateVwxx(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  result = swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(a1 + 56);
  if (v3 >> 60 != 15)
    return sub_1C07B3374(*(_QWORD *)(a1 + 48), v3);
  return result;
}

uint64_t sub_1C07C0A80(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  swift_bridgeObjectRelease();
  sub_1C07B33B8(v2, v3);
  return a1;
}

double sub_1C07C0AC0@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  double result;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  sub_1C0777010();
  if (!v1)
  {
    *a1 = v4;
    a1[1] = v5;
    result = *(double *)&v6;
    a1[2] = v6;
    a1[3] = v7;
  }
  return result;
}

unint64_t sub_1C07C0B00()
{
  unint64_t result;

  result = qword_1ED761368[0];
  if (!qword_1ED761368[0])
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BE6C0, &_s9ViewStateVN);
    atomic_store(result, qword_1ED761368);
  }
  return result;
}

unint64_t sub_1C07C0B3C()
{
  unint64_t result;

  result = qword_1ED761360;
  if (!qword_1ED761360)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BE6E8, &_s9ViewStateVN);
    atomic_store(result, (unint64_t *)&qword_1ED761360);
  }
  return result;
}

uint64_t sub_1C07C0B78()
{
  sub_1C07C0B00();
  return sub_1C106BDDC();
}

unint64_t sub_1C07C0BCC()
{
  unint64_t result;

  result = qword_1ED761A90;
  if (!qword_1ED761A90)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BE81C, &_s9ViewStateV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED761A90);
  }
  return result;
}

uint64_t sub_1C07C0C08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a2;
  return swift_task_switch();
}

uint64_t sub_1C07C0C24()
{
  sub_1C07C0CE4();
  return sub_1C106FE98();
}

unint64_t sub_1C07C0C80@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1C07C0D20(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_1C07C0CA8()
{
  unint64_t result;

  result = qword_1ED7619A8[0];
  if (!qword_1ED7619A8[0])
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10CA504, &unk_1E7A3FD08);
    atomic_store(result, qword_1ED7619A8);
  }
  return result;
}

unint64_t sub_1C07C0CE4()
{
  unint64_t result;

  result = qword_1ED7619A0;
  if (!qword_1ED7619A0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10CA52C, &unk_1E7A3FD08);
    atomic_store(result, (unint64_t *)&qword_1ED7619A0);
  }
  return result;
}

unint64_t sub_1C07C0D20(unint64_t result)
{
  if (result >= 5)
    return 5;
  return result;
}

uint64_t sub_1C07C0D34()
{
  sub_1C07CAFF4();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C0D5C()
{
  sub_1C07CAFF4();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C0D84(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;
  BOOL v21;
  BOOL v22;
  BOOL v23;
  BOOL v24;
  char v26;

  v2 = a1 == 0x6C61436F69647561 && a2 == 0xE90000000000006CLL;
  if (v2 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6C69616D65 && a2 == 0xE500000000000000;
    if (v6 || (sub_1C1070CB4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 7564659 && a2 == 0xE300000000000000;
      if (v7 || (sub_1C1070CB4() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 7564653 && a2 == 0xE300000000000000;
        if (v8 || (sub_1C1070CB4() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x4D746E6174736E69 && a2 == 0xEE00656761737365;
          if (v9 || (sub_1C1070CB4() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0xD000000000000010 && a2 == 0x80000001C10E1F70 || (sub_1C1070CB4() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            v10 = a1 == 0x706F7244726961 && a2 == 0xE700000000000000;
            if (v10 || (sub_1C1070CB4() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              v11 = a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000;
              if (v11 || (sub_1C1070CB4() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 7;
              }
              else
              {
                v12 = a1 == 0x6D6F74737563 && a2 == 0xE600000000000000;
                if (v12 || (sub_1C1070CB4() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 8;
                }
                else
                {
                  v13 = a1 == 1885958006 && a2 == 0xE400000000000000;
                  if (v13 || (sub_1C1070CB4() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 9;
                  }
                  else
                  {
                    v14 = a1 == 0x69616D6563696F76 && a2 == 0xE90000000000006CLL;
                    if (v14 || (sub_1C1070CB4() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 10;
                    }
                    else
                    {
                      v15 = a1 == 0x656D695465636166 && a2 == 0xE800000000000000;
                      if (v15 || (sub_1C1070CB4() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 11;
                      }
                      else
                      {
                        v16 = a1 == 0x656D695465636166 && a2 == 0xED00006F69647541;
                        if (v16 || (sub_1C1070CB4() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 12;
                        }
                        else
                        {
                          v17 = a1 == 0x6C61436F65646976 && a2 == 0xE90000000000006CLL;
                          if (v17 || (sub_1C1070CB4() & 1) != 0)
                          {
                            swift_bridgeObjectRelease();
                            return 13;
                          }
                          else
                          {
                            v18 = a1 == 0x6568536572616873 && a2 == 0xEA00000000007465;
                            if (v18 || (sub_1C1070CB4() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 14;
                            }
                            else
                            {
                              v19 = a1 == 0x74696D69786F7270 && a2 == 0xE900000000000079;
                              if (v19 || (sub_1C1070CB4() & 1) != 0)
                              {
                                swift_bridgeObjectRelease();
                                return 15;
                              }
                              else
                              {
                                v20 = a1 == 0x6761546F746F6870 && a2 == 0xE800000000000000;
                                if (v20 || (sub_1C1070CB4() & 1) != 0)
                                {
                                  swift_bridgeObjectRelease();
                                  return 16;
                                }
                                else
                                {
                                  v21 = a1 == 0x656E6F6870 && a2 == 0xE500000000000000;
                                  if (v21 || (sub_1C1070CB4() & 1) != 0)
                                  {
                                    swift_bridgeObjectRelease();
                                    return 17;
                                  }
                                  else
                                  {
                                    v22 = a1 == 0x656D695465636166 && a2 == 0xED00006F65646956;
                                    if (v22 || (sub_1C1070CB4() & 1) != 0)
                                    {
                                      swift_bridgeObjectRelease();
                                      return 18;
                                    }
                                    else
                                    {
                                      v23 = a1 == 0x6867696C68676968 && a2 == 0xE900000000000074;
                                      if (v23 || (sub_1C1070CB4() & 1) != 0)
                                      {
                                        swift_bridgeObjectRelease();
                                        return 19;
                                      }
                                      else
                                      {
                                        v24 = a1 == 0x616C506572616873 && a2 == 0xE900000000000079;
                                        if (v24 || (sub_1C1070CB4() & 1) != 0)
                                        {
                                          swift_bridgeObjectRelease();
                                          return 20;
                                        }
                                        else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001C10E1F90
                                               || (sub_1C1070CB4() & 1) != 0)
                                        {
                                          swift_bridgeObjectRelease();
                                          return 21;
                                        }
                                        else if (a1 == 0x746E756F63 && a2 == 0xE500000000000000)
                                        {
                                          swift_bridgeObjectRelease();
                                          return 22;
                                        }
                                        else
                                        {
                                          v26 = sub_1C1070CB4();
                                          swift_bridgeObjectRelease();
                                          if ((v26 & 1) != 0)
                                            return 22;
                                          else
                                            return 23;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1C07C166C()
{
  return 23;
}

uint64_t sub_1C07C1674(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C07C16AC + 4 * byte_1C1073330[a1]))(0x6C61436F69647561, 0xE90000000000006CLL);
}

uint64_t sub_1C07C16AC()
{
  return 0x6C69616D65;
}

uint64_t sub_1C07C16C0()
{
  return 7564659;
}

uint64_t sub_1C07C16D4()
{
  return 7564653;
}

uint64_t sub_1C07C16E4()
{
  return 0x4D746E6174736E69;
}

unint64_t sub_1C07C1708()
{
  return 0xD000000000000010;
}

uint64_t sub_1C07C1724()
{
  return 0x706F7244726961;
}

uint64_t sub_1C07C173C()
{
  return 0x6E776F6E6B6E75;
}

uint64_t sub_1C07C1754()
{
  return 0x6D6F74737563;
}

uint64_t sub_1C07C1768()
{
  return 1885958006;
}

uint64_t sub_1C07C1778()
{
  return 0x69616D6563696F76;
}

uint64_t sub_1C07C178C()
{
  return 0x656D695465636166;
}

uint64_t sub_1C07C1838()
{
  return 0x616C506572616873;
}

unint64_t sub_1C07C1850()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1C07C1874()
{
  return 0x746E756F63;
}

uint64_t sub_1C07C1888()
{
  return 0x6867696C68676968;
}

uint64_t sub_1C07C18A0()
{
  sub_1C07CB15C();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C18C8()
{
  sub_1C07CB15C();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C18F4()
{
  unsigned __int8 *v0;

  return sub_1C07C1674(*v0);
}

uint64_t sub_1C07C18FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C07C0D84(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C07C1920@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C07C166C();
  *a1 = result;
  return result;
}

uint64_t sub_1C07C1944()
{
  sub_1C07CABF8();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C196C()
{
  sub_1C07CABF8();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C1994()
{
  sub_1C07CAC34();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C19BC()
{
  sub_1C07CAC34();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C19E4()
{
  sub_1C07CAF7C();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C1A0C()
{
  sub_1C07CAF7C();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C1A34()
{
  sub_1C07CB120();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C1A5C()
{
  sub_1C07CB120();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C1A84()
{
  sub_1C07CAE8C();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C1AAC()
{
  sub_1C07CAE8C();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C1AD4()
{
  sub_1C07CAEC8();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C1AFC()
{
  sub_1C07CAEC8();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C1B24()
{
  sub_1C07CAD24();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C1B4C()
{
  sub_1C07CAD24();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C1B74()
{
  sub_1C07CACE8();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C1B9C()
{
  sub_1C07CACE8();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C1BC4()
{
  sub_1C07CB06C();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C1BEC()
{
  sub_1C07CB06C();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C1C14()
{
  sub_1C07CB0A8();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C1C3C()
{
  sub_1C07CB0A8();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C1C64()
{
  sub_1C07CAD60();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C1C8C()
{
  sub_1C07CAD60();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C1CB4()
{
  sub_1C07CAD9C();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C1CDC()
{
  sub_1C07CAD9C();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C1D04()
{
  sub_1C07CADD8();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C1D2C()
{
  sub_1C07CADD8();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C1D54()
{
  sub_1C07CB030();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C1D7C()
{
  sub_1C07CB030();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C1DA4()
{
  sub_1C07CACAC();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C1DCC()
{
  sub_1C07CACAC();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C1DF4()
{
  sub_1C07CAE14();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C1E1C()
{
  sub_1C07CAE14();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C1E44()
{
  sub_1C07CAC70();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C1E6C()
{
  sub_1C07CAC70();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C1E94()
{
  sub_1C07CB0E4();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C1EBC()
{
  sub_1C07CB0E4();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C1EE4()
{
  sub_1C07CAFB8();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C1F0C()
{
  sub_1C07CAFB8();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C1F34()
{
  sub_1C07CAE50();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C1F5C()
{
  sub_1C07CAE50();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C1F84()
{
  sub_1C07CAF04();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C1FAC()
{
  sub_1C07CAF04();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C1FD4()
{
  sub_1C07CAF40();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C1FFC()
{
  sub_1C07CAF40();
  return sub_1C1070EF4();
}

void CommunicationMechanism.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83[2];
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD v99[15];
  uint64_t v100;
  uint64_t v101;

  sub_1C077AE5C();
  a19 = v21;
  a20 = v22;
  v24 = v23;
  v25 = sub_1C07ACF80(&qword_1EF62E400);
  v99[12] = *(_QWORD *)(v25 - 8);
  v99[13] = v25;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v26);
  sub_1C0782928(v27, v83[0]);
  v28 = sub_1C07ACF80(&qword_1EF62E408);
  v99[9] = *(_QWORD *)(v28 - 8);
  v99[10] = v28;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v29);
  sub_1C079C230(v30, v83[0]);
  v31 = sub_1C07ACF80(&qword_1EF62E410);
  v99[6] = *(_QWORD *)(v31 - 8);
  v99[7] = v31;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v32);
  sub_1C0784DB8(v33, v83[0]);
  v84 = sub_1C07ACF80(&qword_1EF62E418);
  sub_1C0787718(*(_QWORD *)(v84 - 8));
  MEMORY[0x1E0C80A78](v34);
  sub_1C077AE40();
  sub_1C0784DAC(v35);
  v36 = sub_1C07ACF80(&qword_1EF62E420);
  v99[3] = *(_QWORD *)(v36 - 8);
  v99[4] = v36;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v37);
  sub_1C078258C(v38, v83[0]);
  v39 = sub_1C07ACF80(&qword_1EF62E428);
  v99[0] = *(_QWORD *)(v39 - 8);
  v99[1] = v39;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v40);
  sub_1C07757E8(v41, v83[0]);
  v42 = sub_1C07ACF80(&qword_1EF62E430);
  v97 = *(_QWORD *)(v42 - 8);
  v98 = v42;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v43);
  sub_1C0784DAC((uint64_t)v83 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0));
  v96 = sub_1C07ACF80(&qword_1EF62E438);
  sub_1C0787718(*(_QWORD *)(v96 - 8));
  MEMORY[0x1E0C80A78](v45);
  sub_1C0784DAC((uint64_t)v83 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0));
  v95 = sub_1C07ACF80(&qword_1EF62E440);
  sub_1C0787718(*(_QWORD *)(v95 - 8));
  MEMORY[0x1E0C80A78](v47);
  sub_1C0784DAC((uint64_t)v83 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0));
  v49 = sub_1C07ACF80(&qword_1EF62E448);
  sub_1C077B58C(v49, (uint64_t)&a11);
  sub_1C0787718(v50);
  MEMORY[0x1E0C80A78](v51);
  sub_1C0784DAC((uint64_t)v83 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0));
  v94 = sub_1C07ACF80(&qword_1EF62E450);
  sub_1C0787718(*(_QWORD *)(v94 - 8));
  MEMORY[0x1E0C80A78](v53);
  sub_1C0784DAC((uint64_t)v83 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0));
  v55 = sub_1C07ACF80(&qword_1EF62E458);
  sub_1C077B58C(v55, (uint64_t)&v100);
  sub_1C0787718(v56);
  MEMORY[0x1E0C80A78](v57);
  sub_1C0784DAC((uint64_t)v83 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0));
  v93 = sub_1C07ACF80(&qword_1EF62E460);
  sub_1C0787718(*(_QWORD *)(v93 - 8));
  MEMORY[0x1E0C80A78](v59);
  sub_1C077AE40();
  sub_1C0784DAC(v60);
  v92 = sub_1C07ACF80(&qword_1EF62E468);
  sub_1C0787718(*(_QWORD *)(v92 - 8));
  MEMORY[0x1E0C80A78](v61);
  sub_1C077AE40();
  sub_1C0784DAC(v62);
  v91 = sub_1C07ACF80(&qword_1EF62E470);
  sub_1C0787718(*(_QWORD *)(v91 - 8));
  MEMORY[0x1E0C80A78](v63);
  sub_1C077AE40();
  sub_1C0784DAC(v64);
  v90 = sub_1C07ACF80(&qword_1EF62E478);
  sub_1C0787718(*(_QWORD *)(v90 - 8));
  MEMORY[0x1E0C80A78](v65);
  sub_1C077AE40();
  sub_1C0784DAC(v66);
  v67 = sub_1C07ACF80(&qword_1EF62E480);
  sub_1C077B58C(v67, (uint64_t)v99);
  sub_1C0787718(v68);
  MEMORY[0x1E0C80A78](v69);
  sub_1C077AE40();
  sub_1C0784DAC(v70);
  v89 = sub_1C07ACF80(&qword_1EF62E488);
  sub_1C0787718(*(_QWORD *)(v89 - 8));
  MEMORY[0x1E0C80A78](v71);
  sub_1C077AE40();
  sub_1C0784DAC(v72);
  v88 = sub_1C07ACF80(&qword_1EF62E490);
  sub_1C0787718(*(_QWORD *)(v88 - 8));
  MEMORY[0x1E0C80A78](v73);
  sub_1C077AE40();
  sub_1C0784DAC(v74);
  v87 = sub_1C07ACF80(&qword_1EF62E498);
  sub_1C0787718(*(_QWORD *)(v87 - 8));
  MEMORY[0x1E0C80A78](v75);
  sub_1C077AE40();
  sub_1C0784DAC(v76);
  v86 = sub_1C07ACF80(&qword_1EF62E4A0);
  sub_1C0787718(*(_QWORD *)(v86 - 8));
  MEMORY[0x1E0C80A78](v77);
  sub_1C077AE40();
  sub_1C0784DAC(v78);
  v85 = sub_1C07ACF80(&qword_1EF62E4A8);
  sub_1C0787718(*(_QWORD *)(v85 - 8));
  MEMORY[0x1E0C80A78](v79);
  sub_1C0779614();
  sub_1C07ACF80(&qword_1EF62E4B0);
  sub_1C0795FD4();
  MEMORY[0x1E0C80A78](v80);
  sub_1C0778564();
  v101 = sub_1C07ACF80(&qword_1EF62E4B8);
  v99[14] = *(_QWORD *)(v101 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v81);
  sub_1C0778544();
  v82 = *v20;
  sub_1C07A9480(v24, v24[3]);
  sub_1C07CABF8();
  sub_1C1070EB8();
  __asm { BR              X9 }
}

void sub_1C07C25A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v3 - 65) = 0;
  sub_1C07CB15C();
  v4 = *(_QWORD *)(v3 - 112);
  v5 = *(_QWORD *)(v3 - 104);
  sub_1C1070B1C();
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 120) + 8))(v4, v5);
  sub_1C07757D0();
}

void CommunicationMechanism.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109[5];
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  uint64_t v129;

  sub_1C077AE5C();
  a19 = v25;
  a20 = v26;
  sub_1C07795F4(v27);
  v124 = sub_1C07ACF80(&qword_1EF62E580);
  sub_1C0787718(*(_QWORD *)(v124 - 8));
  MEMORY[0x1E0C80A78](v28);
  sub_1C0782928(v29, v109[0]);
  v30 = sub_1C07ACF80(&qword_1EF62E588);
  sub_1C077B58C(v30, (uint64_t)&a12);
  sub_1C0787718(v31);
  MEMORY[0x1E0C80A78](v32);
  sub_1C078BC74(v33, v109[0]);
  v123 = sub_1C07ACF80(&qword_1EF62E590);
  sub_1C0787718(*(_QWORD *)(v123 - 8));
  MEMORY[0x1E0C80A78](v34);
  sub_1C078C6C0(v35, v109[0]);
  v122 = sub_1C07ACF80(&qword_1EF62E598);
  sub_1C0787718(*(_QWORD *)(v122 - 8));
  MEMORY[0x1E0C80A78](v36);
  sub_1C079C230(v37, v109[0]);
  v38 = sub_1C07ACF80(&qword_1EF62E5A0);
  sub_1C077B58C(v38, (uint64_t)&v128);
  sub_1C0787718(v39);
  MEMORY[0x1E0C80A78](v40);
  sub_1C079571C(v41, v109[0]);
  v121 = sub_1C07ACF80(&qword_1EF62E5A8);
  sub_1C0787718(*(_QWORD *)(v121 - 8));
  MEMORY[0x1E0C80A78](v42);
  sub_1C07B464C(v43, v109[0]);
  v120 = sub_1C07ACF80(&qword_1EF62E5B0);
  sub_1C0787718(*(_QWORD *)(v120 - 8));
  MEMORY[0x1E0C80A78](v44);
  sub_1C0784DB8(v45, v109[0]);
  v46 = sub_1C07ACF80(&qword_1EF62E5B8);
  sub_1C077B58C(v46, (uint64_t)&v127);
  sub_1C0787718(v47);
  MEMORY[0x1E0C80A78](v48);
  sub_1C0789AAC(v49, v109[0]);
  v119 = sub_1C07ACF80(&qword_1EF62E5C0);
  sub_1C0787718(*(_QWORD *)(v119 - 8));
  MEMORY[0x1E0C80A78](v50);
  sub_1C07A9CE4(v51, v109[0]);
  v118 = sub_1C07ACF80(&qword_1EF62E5C8);
  sub_1C0787718(*(_QWORD *)(v118 - 8));
  MEMORY[0x1E0C80A78](v52);
  sub_1C078258C(v53, v109[0]);
  v54 = sub_1C07ACF80(&qword_1EF62E5D0);
  sub_1C077B58C(v54, (uint64_t)&v126);
  sub_1C0787718(v55);
  MEMORY[0x1E0C80A78](v56);
  sub_1C07809AC(v57, v109[0]);
  v117 = sub_1C07ACF80(&qword_1EF62E5D8);
  sub_1C0787718(*(_QWORD *)(v117 - 8));
  MEMORY[0x1E0C80A78](v58);
  sub_1C078A2B4(v59, v109[0]);
  v60 = sub_1C07ACF80(&qword_1EF62E5E0);
  sub_1C077B58C(v60, (uint64_t)&v125);
  sub_1C0787718(v61);
  MEMORY[0x1E0C80A78](v62);
  sub_1C07AA618(v63, v109[0]);
  v116 = sub_1C07ACF80(&qword_1EF62E5E8);
  sub_1C0787718(*(_QWORD *)(v116 - 8));
  MEMORY[0x1E0C80A78](v64);
  sub_1C07820E4(v65, v109[0]);
  v115 = sub_1C07ACF80(&qword_1EF62E5F0);
  sub_1C0787718(*(_QWORD *)(v115 - 8));
  MEMORY[0x1E0C80A78](v66);
  sub_1C079BC7C(v67, v109[0]);
  v114 = sub_1C07ACF80(&qword_1EF62E5F8);
  sub_1C0787718(*(_QWORD *)(v114 - 8));
  MEMORY[0x1E0C80A78](v68);
  sub_1C07757E8(v69, v109[0]);
  v70 = sub_1C07ACF80(&qword_1EF62E600);
  sub_1C077B58C(v70, (uint64_t)&v124);
  sub_1C0787718(v71);
  MEMORY[0x1E0C80A78](v72);
  sub_1C0782B00(v73, v109[0]);
  v113 = sub_1C07ACF80(&qword_1EF62E608);
  sub_1C0787718(*(_QWORD *)(v113 - 8));
  MEMORY[0x1E0C80A78](v74);
  sub_1C07AD018(v75, v109[0]);
  v112 = sub_1C07ACF80(&qword_1EF62E610);
  sub_1C0787718(*(_QWORD *)(v112 - 8));
  MEMORY[0x1E0C80A78](v76);
  sub_1C0784DAC((uint64_t)v109 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0));
  v78 = sub_1C07ACF80(&qword_1EF62E618);
  sub_1C077B58C(v78, (uint64_t)&v122);
  sub_1C0787718(v79);
  MEMORY[0x1E0C80A78](v80);
  sub_1C0784DAC((uint64_t)v109 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0));
  v111 = sub_1C07ACF80(&qword_1EF62E620);
  sub_1C0787718(*(_QWORD *)(v111 - 8));
  MEMORY[0x1E0C80A78](v82);
  sub_1C0784DAC((uint64_t)v109 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0));
  v84 = sub_1C07ACF80(&qword_1EF62E628);
  sub_1C077B58C(v84, (uint64_t)&v121);
  sub_1C0787718(v85);
  MEMORY[0x1E0C80A78](v86);
  sub_1C0784DAC((uint64_t)v109 - ((v87 + 15) & 0xFFFFFFFFFFFFFFF0));
  v88 = sub_1C07ACF80(&qword_1EF62E630);
  sub_1C0795FD4();
  MEMORY[0x1E0C80A78](v89);
  sub_1C0778544();
  v90 = sub_1C07ACF80((uint64_t *)&unk_1EF62E638);
  sub_1C0779CC0();
  MEMORY[0x1E0C80A78](v91);
  sub_1C07766EC();
  v92 = v21[3];
  v128 = v21;
  sub_1C07A9480(v21, v92);
  sub_1C07CABF8();
  v93 = v129;
  sub_1C1070E94();
  if (v93)
  {
    v94 = (uint64_t)v128;
  }
  else
  {
    v109[4] = v22;
    v109[2] = v20;
    v109[3] = v88;
    v110 = v23;
    v129 = v24;
    v95 = sub_1C1070AF8();
    v97 = *(_QWORD *)(v95 + 16);
    v98 = v90;
    if (v97)
    {
      v109[1] = 0;
      v99 = *(unsigned __int8 *)(v95 + 32);
      sub_1C077855C(1, v97, v95, v95 + 32, v96, (2 * v97) | 1);
      v101 = v100;
      v103 = v102;
      swift_bridgeObjectRelease();
      if (v101 == v103 >> 1)
        __asm { BR              X9 }
      v94 = (uint64_t)v128;
      v98 = v90;
    }
    else
    {
      v94 = (uint64_t)v128;
    }
    v104 = v129;
    v105 = v110;
    sub_1C07809C8();
    sub_1C0775810();
    v107 = v106;
    sub_1C07ACF80(&qword_1ED752E80);
    sub_1C0782FF4();
    *v107 = &type metadata for CommunicationMechanism;
    sub_1C1070A44();
    v108 = sub_1C0792C74();
    sub_1C0796F00(v108, *MEMORY[0x1E0DEC450]);
    swift_willThrow();
    sub_1C077E6B4();
    (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v104, v98);
  }
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v94);
  sub_1C07757D0();
}

void sub_1C07C30A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, _QWORD);

  sub_1C07D0AC0();
  sub_1C0787728();
  if (!v0)
  {
    v2 = sub_1C0790C90();
    sub_1C077AE54(v2, v3);
    sub_1C0795FE4();
    sub_1C07AACAC(*(_QWORD *)(v1 - 648));
    JUMPOUT(0x1C07C3520);
  }
  sub_1C0795FE4();
  sub_1C07AACAC(*(_QWORD *)(v1 - 648));
  JUMPOUT(0x1C07C2EE0);
}

void sub_1C07C30DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, _QWORD);

  sub_1C07D0A90();
  sub_1C0787728();
  if (!v0)
  {
    v2 = sub_1C0790C90();
    sub_1C077AE54(v2, v3);
    sub_1C0795FE4();
    sub_1C07AACAC(*(_QWORD *)(v1 - 648));
    JUMPOUT(0x1C07C3520);
  }
  sub_1C0795FE4();
  sub_1C07AACAC(*(_QWORD *)(v1 - 648));
  JUMPOUT(0x1C07C2EE0);
}

void sub_1C07C3114()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, _QWORD);

  sub_1C0781ACC();
  sub_1C0787728();
  if (!v0)
  {
    v2 = sub_1C0790C90();
    sub_1C077AE54(v2, v3);
    sub_1C0795FE4();
    sub_1C07AACAC(*(_QWORD *)(v1 - 648));
    JUMPOUT(0x1C07C3520);
  }
  sub_1C0795FE4();
  sub_1C07AACAC(*(_QWORD *)(v1 - 648));
  JUMPOUT(0x1C07C2EE0);
}

void sub_1C07C314C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, _QWORD);

  sub_1C0782B1C();
  sub_1C0787728();
  if (!v0)
  {
    v2 = sub_1C07D0944();
    sub_1C077AE54(v2, v3);
    sub_1C0795FE4();
    sub_1C07AACAC(*(_QWORD *)(v1 - 648));
    JUMPOUT(0x1C07C3520);
  }
  sub_1C0795FE4();
  sub_1C07AACAC(*(_QWORD *)(v1 - 648));
  JUMPOUT(0x1C07C2EE0);
}

void sub_1C07C317C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, _QWORD);

  sub_1C0788B84();
  sub_1C0787728();
  if (!v0)
  {
    v2 = sub_1C0790C90();
    sub_1C077AE54(v2, v3);
    sub_1C0795FE4();
    sub_1C07AACAC(*(_QWORD *)(v1 - 648));
    JUMPOUT(0x1C07C3520);
  }
  sub_1C0795FE4();
  sub_1C07AACAC(*(_QWORD *)(v1 - 648));
  JUMPOUT(0x1C07C2EE0);
}

void sub_1C07C31B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, _QWORD);

  sub_1C07BB24C();
  sub_1C0787728();
  if (!v0)
  {
    v2 = sub_1C0790C90();
    sub_1C077AE54(v2, v3);
    sub_1C0795FE4();
    sub_1C07AACAC(*(_QWORD *)(v1 - 648));
    JUMPOUT(0x1C07C3520);
  }
  sub_1C0795FE4();
  sub_1C07AACAC(*(_QWORD *)(v1 - 648));
  JUMPOUT(0x1C07C2EE0);
}

void sub_1C07C31E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, _QWORD);

  sub_1C07B689C();
  sub_1C0787728();
  if (!v0)
  {
    v2 = sub_1C07AA334();
    sub_1C077AE54(v2, v3);
    sub_1C0795FE4();
    sub_1C07AACAC(*(_QWORD *)(v1 - 648));
    JUMPOUT(0x1C07C3520);
  }
  sub_1C0795FE4();
  sub_1C07AACAC(*(_QWORD *)(v1 - 648));
  JUMPOUT(0x1C07C2EE0);
}

void sub_1C07C3210()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, _QWORD);

  sub_1C07B5BDC();
  sub_1C0787728();
  if (!v0)
  {
    v2 = sub_1C0790C90();
    sub_1C077AE54(v2, v3);
    sub_1C0795FE4();
    sub_1C07AACAC(*(_QWORD *)(v1 - 648));
    JUMPOUT(0x1C07C3520);
  }
  sub_1C0795FE4();
  sub_1C07AACAC(*(_QWORD *)(v1 - 648));
  JUMPOUT(0x1C07C2EE0);
}

void sub_1C07C3244()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, _QWORD);

  sub_1C07D09F4();
  sub_1C079E130();
  if (!v0)
  {
    sub_1C077B5A8();
    sub_1C077AE54(v1, v3);
    sub_1C0795FE4();
    sub_1C07AACAC(*(_QWORD *)(v2 - 648));
    JUMPOUT(0x1C07C3520);
  }
  sub_1C0795FE4();
  sub_1C07AACAC(*(_QWORD *)(v2 - 648));
  JUMPOUT(0x1C07C2EE0);
}

void sub_1C07C327C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, _QWORD);

  sub_1C07D09D0();
  sub_1C0787728();
  if (!v0)
  {
    v2 = sub_1C079FC04();
    sub_1C077AE54(v2, v3);
    sub_1C0795FE4();
    sub_1C07AACAC(*(_QWORD *)(v1 - 648));
    JUMPOUT(0x1C07C3520);
  }
  sub_1C0795FE4();
  sub_1C07AACAC(*(_QWORD *)(v1 - 648));
  JUMPOUT(0x1C07C2EE0);
}

void sub_1C07C32B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, _QWORD);

  sub_1C07B59BC();
  sub_1C079E130();
  if (!v0)
  {
    v2 = sub_1C07B5E84();
    sub_1C077AE54(v2, v3);
    sub_1C0795FE4();
    sub_1C07AACAC(*(_QWORD *)(v1 - 648));
    JUMPOUT(0x1C07C3520);
  }
  sub_1C0795FE4();
  sub_1C07AACAC(*(_QWORD *)(v1 - 648));
  JUMPOUT(0x1C07C2EE0);
}

void sub_1C07C32DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, _QWORD);

  sub_1C07D09AC();
  sub_1C0787728();
  if (!v0)
  {
    v2 = sub_1C0790C90();
    sub_1C077AE54(v2, v3);
    sub_1C0795FE4();
    sub_1C07AACAC(*(_QWORD *)(v1 - 648));
    JUMPOUT(0x1C07C3520);
  }
  sub_1C0795FE4();
  sub_1C07AACAC(*(_QWORD *)(v1 - 648));
  JUMPOUT(0x1C07C2EE0);
}

void sub_1C07C3310()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, _QWORD);

  sub_1C078928C();
  sub_1C0787728();
  if (!v0)
  {
    v2 = sub_1C07A989C();
    sub_1C077AE54(v2, v3);
    sub_1C0795FE4();
    sub_1C07AACAC(*(_QWORD *)(v1 - 648));
    JUMPOUT(0x1C07C3520);
  }
  sub_1C0795FE4();
  sub_1C07AACAC(*(_QWORD *)(v1 - 648));
  JUMPOUT(0x1C07C2EE0);
}

void sub_1C07C333C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, _QWORD);

  sub_1C0782330();
  sub_1C0787728();
  if (!v0)
  {
    v2 = sub_1C0790C90();
    sub_1C077AE54(v2, v3);
    sub_1C0795FE4();
    sub_1C07AACAC(*(_QWORD *)(v1 - 648));
    JUMPOUT(0x1C07C3520);
  }
  sub_1C0795FE4();
  sub_1C07AACAC(*(_QWORD *)(v1 - 648));
  JUMPOUT(0x1C07C2EE0);
}

void sub_1C07C3370()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, _QWORD);

  sub_1C0782CCC();
  sub_1C0787728();
  if (!v0)
  {
    v2 = sub_1C0790C90();
    sub_1C077AE54(v2, v3);
    sub_1C0795FE4();
    sub_1C07AACAC(*(_QWORD *)(v1 - 648));
    JUMPOUT(0x1C07C3520);
  }
  sub_1C0795FE4();
  sub_1C07AACAC(*(_QWORD *)(v1 - 648));
  JUMPOUT(0x1C07C2EE0);
}

void sub_1C07C33A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, _QWORD);

  sub_1C07BAD6C();
  sub_1C0787728();
  if (!v0)
  {
    v2 = sub_1C07B7F0C();
    sub_1C077AE54(v2, v3);
    sub_1C0795FE4();
    sub_1C07AACAC(*(_QWORD *)(v1 - 648));
    JUMPOUT(0x1C07C3520);
  }
  sub_1C0795FE4();
  sub_1C07AACAC(*(_QWORD *)(v1 - 648));
  JUMPOUT(0x1C07C2EE0);
}

void sub_1C07C33D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, _QWORD);

  sub_1C07D097C();
  sub_1C0787728();
  if (!v0)
  {
    v2 = sub_1C0790C90();
    sub_1C077AE54(v2, v3);
    sub_1C0795FE4();
    sub_1C07AACAC(*(_QWORD *)(v1 - 648));
    JUMPOUT(0x1C07C3520);
  }
  sub_1C0795FE4();
  sub_1C07AACAC(*(_QWORD *)(v1 - 648));
  JUMPOUT(0x1C07C2EE0);
}

void sub_1C07C3404()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, _QWORD);

  sub_1C07B6A64();
  sub_1C0787728();
  if (!v0)
  {
    v2 = sub_1C0790C90();
    sub_1C077AE54(v2, v3);
    sub_1C0795FE4();
    sub_1C07AACAC(*(_QWORD *)(v1 - 648));
    JUMPOUT(0x1C07C3520);
  }
  sub_1C0795FE4();
  sub_1C07AACAC(*(_QWORD *)(v1 - 648));
  JUMPOUT(0x1C07C2EE0);
}

void sub_1C07C3438()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, _QWORD);

  sub_1C07AF924();
  sub_1C0787728();
  if (!v0)
  {
    v2 = sub_1C0788868();
    sub_1C077AE54(v2, v3);
    sub_1C0795FE4();
    sub_1C07AACAC(*(_QWORD *)(v1 - 648));
    JUMPOUT(0x1C07C3520);
  }
  sub_1C0795FE4();
  sub_1C07AACAC(*(_QWORD *)(v1 - 648));
  JUMPOUT(0x1C07C2EE0);
}

void sub_1C07C3464()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, _QWORD);

  sub_1C077E6BC();
  sub_1C0787728();
  if (!v0)
  {
    v2 = sub_1C0790C90();
    sub_1C077AE54(v2, v3);
    sub_1C0795FE4();
    sub_1C07AACAC(*(_QWORD *)(v1 - 648));
    JUMPOUT(0x1C07C3520);
  }
  sub_1C0795FE4();
  sub_1C07AACAC(*(_QWORD *)(v1 - 648));
  JUMPOUT(0x1C07C2EE0);
}

void sub_1C07C3498()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, _QWORD);

  sub_1C07BA680();
  sub_1C0787728();
  if (!v0)
  {
    v2 = sub_1C0790C90();
    sub_1C077AE54(v2, v3);
    sub_1C0795FE4();
    sub_1C07AACAC(*(_QWORD *)(v1 - 648));
    JUMPOUT(0x1C07C3520);
  }
  sub_1C0795FE4();
  sub_1C07AACAC(*(_QWORD *)(v1 - 648));
  JUMPOUT(0x1C07C2EE0);
}

void sub_1C07C34CC()
{
  uint64_t v0;

  sub_1C07AF7FC();
  sub_1C0787728();
  if (v0)
    JUMPOUT(0x1C07C34F0);
  sub_1C0776704();
  JUMPOUT(0x1C07C3508);
}

#error "1C07C353C: call analysis failed (funcsize=5)"

#error "1C07C3550: call analysis failed (funcsize=5)"

uint64_t ObservedBehaviorType.value.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C07C358C + 4 * byte_1C107338C[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

unint64_t sub_1C07C358C()
{
  return 0xD000000000000011;
}

uint64_t sub_1C07C35B4()
{
  return 0x6565705368676968;
}

uint64_t sub_1C07C35D0()
{
  return 0x686372756CLL;
}

uint64_t sub_1C07C35E4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000;
  if (v2 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C10E1D60 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C10E1D40 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = a1 == 0x6565705368676968 && a2 == 0xE900000000000064;
    if (v6 || (sub_1C1070CB4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else if (a1 == 0x686372756CLL && a2 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else
    {
      v8 = sub_1C1070CB4();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 4;
      else
        return 5;
    }
  }
}

uint64_t sub_1C07C37EC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C07C3820 + 4 * byte_1C1073391[a1]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

unint64_t sub_1C07C3820()
{
  return 0xD000000000000011;
}

uint64_t sub_1C07C3848()
{
  return 0x6565705368676968;
}

uint64_t sub_1C07C3864()
{
  return 0x686372756CLL;
}

uint64_t sub_1C07C3878()
{
  unsigned __int8 *v0;

  return sub_1C07C37EC(*v0);
}

uint64_t sub_1C07C3880@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C07C35E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C07C38A4()
{
  sub_1C07CB988();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C38CC()
{
  sub_1C07CB988();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C38F4()
{
  sub_1C07CBA00();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C391C()
{
  sub_1C07CBA00();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C3944()
{
  sub_1C07CB9C4();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C396C()
{
  sub_1C07CB9C4();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C3994()
{
  sub_1C07CBA78();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C39BC()
{
  sub_1C07CBA78();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C39E4()
{
  sub_1C07CBA3C();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C3A0C()
{
  sub_1C07CBA3C();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C3A34()
{
  sub_1C07CBAB4();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C3A5C()
{
  sub_1C07CBAB4();
  return sub_1C1070EF4();
}

void ObservedBehaviorType.encode(to:)()
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1C077AE5C();
  sub_1C07ACF80(&qword_1EF62E648);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v1);
  sub_1C07820E4(v2, v11);
  sub_1C07ACF80(&qword_1EF62E650);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v3);
  sub_1C078BC74(v4, v12);
  sub_1C07ACF80(&qword_1EF62E658);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v5);
  sub_1C079571C(v6, v13);
  sub_1C07ACF80(&qword_1EF62E660);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v7);
  sub_1C0789AAC(v8, v14);
  sub_1C07ACF80(&qword_1EF62E668);
  sub_1C0779CC0();
  MEMORY[0x1E0C80A78](v9);
  sub_1C07766EC();
  sub_1C07ACF80(&qword_1EF62E670);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v10);
  sub_1C077FCFC();
  sub_1C07CB988();
  sub_1C07814B0();
  __asm { BR              X9 }
}

void sub_1C07C3BD0()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);

  *(_BYTE *)(v0 - 69) = 0;
  sub_1C07CBAB4();
  sub_1C0795FC8();
  sub_1C07B619C();
  v1 = sub_1C07A9528();
  v2(v1);
  sub_1C07757D0();
}

void ObservedBehaviorType.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1C077AE5C();
  sub_1C07795F4(v2);
  v3 = sub_1C07ACF80(&qword_1EF62E6A8);
  v23 = *(_QWORD *)(v3 - 8);
  v24 = v3;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v4);
  sub_1C0782928(v5, v21[0]);
  v22 = sub_1C07ACF80(&qword_1EF62E6B0);
  v21[10] = *(_QWORD *)(v22 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C078BC74(v7, v21[0]);
  v8 = sub_1C07ACF80(&qword_1EF62E6B8);
  v21[8] = *(_QWORD *)(v8 - 8);
  v21[9] = v8;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v9);
  sub_1C078C6C0(v10, v21[0]);
  v11 = sub_1C07ACF80(&qword_1EF62E6C0);
  v21[6] = *(_QWORD *)(v11 - 8);
  v21[7] = v11;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v12);
  sub_1C079C230(v13, v21[0]);
  sub_1C07ACF80(&qword_1EF62E6C8);
  sub_1C077AE7C();
  MEMORY[0x1E0C80A78](v14);
  sub_1C07795DC();
  sub_1C07ACF80(&qword_1EF62E6D0);
  sub_1C07D0AE4();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0780448();
  sub_1C07CB988();
  sub_1C077CEDC();
  if (!v0)
  {
    v18 = sub_1C077C050();
    v19 = *(_QWORD *)(v18 + 16);
    if (v19)
    {
      sub_1C07B159C(v18, v19);
      sub_1C07AFFB4();
      if (!v1)
      {
        v21[1] = (uint64_t)v17;
        __asm { BR              X9 }
      }
    }
    sub_1C07809C8();
    sub_1C0775810();
    sub_1C07ACF80(&qword_1ED752E80);
    sub_1C0782FF4();
    sub_1C07D0ACC((uint64_t)&type metadata for ObservedBehaviorType);
    v20 = sub_1C0792C74();
    sub_1C0796F00(v20, *MEMORY[0x1E0DEC450]);
    sub_1C07A42CC();
    sub_1C077E6B4();
    sub_1C07AACAC(v26);
  }
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v25);
  sub_1C07757D0();
}

void sub_1C07C3F04()
{
  uint64_t v0;

  sub_1C07D0AA8();
  sub_1C0797AC0();
  if (!v0)
  {
    sub_1C07BC538();
    JUMPOUT(0x1C07C3FCCLL);
  }
  JUMPOUT(0x1C07C3EE0);
}

void sub_1C07C3F34()
{
  uint64_t v0;

  sub_1C0781974();
  sub_1C0797AC0();
  if (!v0)
    JUMPOUT(0x1C07C3F60);
  JUMPOUT(0x1C07C3EE0);
}

void sub_1C07C3F68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);

  sub_1C077EE34();
  sub_1C0797AC0();
  if (!v0)
  {
    v2 = sub_1C07BA8FC();
    v3(v2);
    sub_1C077E6B4();
    sub_1C07AACAC(*(_QWORD *)(v1 - 96));
    **(_BYTE **)(v1 - 136) = *(_QWORD *)(v1 - 248);
    JUMPOUT(0x1C07C3EECLL);
  }
  JUMPOUT(0x1C07C3EE0);
}

void sub_1C07C3F98()
{
  uint64_t v0;

  sub_1C07BA188();
  sub_1C0797AC0();
  if (!v0)
    JUMPOUT(0x1C07C3FCCLL);
  JUMPOUT(0x1C07C3EE0);
}

void sub_1C07C3FEC()
{
  ObservedBehaviorType.init(from:)();
}

void sub_1C07C4000()
{
  ObservedBehaviorType.encode(to:)();
}

uint64_t TransportationType.value.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C07C4044 + 4 * byte_1C10733A0[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1C07C4044()
{
  return 0x746F6F466E6FLL;
}

uint64_t sub_1C07C4058()
{
  return sub_1C07AFC50();
}

uint64_t sub_1C07C4064()
{
  return 0x656E616C70;
}

uint64_t sub_1C07C4078()
{
  return 0x656C6379636962;
}

uint64_t sub_1C07C408C()
{
  return 1885956211;
}

uint64_t sub_1C07C409C()
{
  return 7566690;
}

uint64_t sub_1C07C40AC()
{
  return 0x6E69617274;
}

uint64_t sub_1C07C40C0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  char v13;

  v2 = a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000;
  if (v2 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x746F6F466E6FLL && a2 == 0xE600000000000000;
    if (v6 || (sub_1C1070CB4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x69746F6D6F747561 && a2 == 0xEA00000000006576;
      if (v7 || (sub_1C1070CB4() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x656E616C70 && a2 == 0xE500000000000000;
        if (v8 || (sub_1C1070CB4() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x656C6379636962 && a2 == 0xE700000000000000;
          if (v9 || (sub_1C1070CB4() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 1885956211 && a2 == 0xE400000000000000;
            if (v10 || (sub_1C1070CB4() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              v11 = a1 == 7566690 && a2 == 0xE300000000000000;
              if (v11 || (sub_1C1070CB4() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else if (a1 == 0x6E69617274 && a2 == 0xE500000000000000)
              {
                swift_bridgeObjectRelease();
                return 7;
              }
              else
              {
                v13 = sub_1C1070CB4();
                swift_bridgeObjectRelease();
                if ((v13 & 1) != 0)
                  return 7;
                else
                  return 8;
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1C07C43C0()
{
  return 8;
}

uint64_t sub_1C07C43C8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C07C43FC + 4 * byte_1C10733A8[a1]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1C07C43FC()
{
  return 0x746F6F466E6FLL;
}

uint64_t sub_1C07C4410()
{
  return 0x69746F6D6F747561;
}

uint64_t sub_1C07C442C()
{
  return 0x656E616C70;
}

uint64_t sub_1C07C4440()
{
  return 0x656C6379636962;
}

uint64_t sub_1C07C4454()
{
  return 1885956211;
}

uint64_t sub_1C07C4464()
{
  return 7566690;
}

uint64_t sub_1C07C4474()
{
  return 0x6E69617274;
}

uint64_t sub_1C07C4488()
{
  sub_1C07CBC58();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C44B0()
{
  sub_1C07CBC58();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C44D8()
{
  sub_1C07CBBE0();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C4500()
{
  sub_1C07CBBE0();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C4528()
{
  sub_1C07CBB68();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C4550()
{
  sub_1C07CBB68();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C4578()
{
  unsigned __int8 *v0;

  return sub_1C07C43C8(*v0);
}

uint64_t sub_1C07C4580@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C07C40C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C07C45A4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C07C43C0();
  *a1 = result;
  return result;
}

uint64_t sub_1C07C45C8()
{
  sub_1C07CBAF0();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C45F0()
{
  sub_1C07CBAF0();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C4618()
{
  sub_1C07CBC94();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C4640()
{
  sub_1C07CBC94();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C4668()
{
  sub_1C07CBC1C();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C4690()
{
  sub_1C07CBC1C();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C46B8()
{
  sub_1C07CBBA4();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C46E0()
{
  sub_1C07CBBA4();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C4708()
{
  sub_1C07CBB2C();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C4730()
{
  sub_1C07CBB2C();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C4758()
{
  sub_1C07CBCD0();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C4780()
{
  sub_1C07CBCD0();
  return sub_1C1070EF4();
}

void TransportationType.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  sub_1C077AE5C();
  a19 = v21;
  a20 = v22;
  v24 = v23;
  sub_1C07ACF80(&qword_1EF62E6D8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v25);
  sub_1C0779CD0(v26, v43);
  sub_1C07ACF80(&qword_1EF62E6E0);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v27);
  sub_1C078C6C0(v28, v44);
  sub_1C07ACF80(&qword_1EF62E6E8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v29);
  sub_1C07B464C(v30, v45);
  sub_1C07ACF80(&qword_1EF62E6F0);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v31);
  sub_1C07A9CE4(v32, v46);
  sub_1C07ACF80(&qword_1EF62E6F8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v33);
  sub_1C079BC7C(v34, v47);
  sub_1C07ACF80(&qword_1EF62E700);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v35);
  sub_1C07AD018(v36, v48);
  v37 = sub_1C07ACF80(&qword_1EF62E708);
  sub_1C077B58C(v37, (uint64_t)&a18);
  sub_1C0787718(v38);
  MEMORY[0x1E0C80A78](v39);
  sub_1C0778564();
  sub_1C07ACF80(&qword_1EF62E710);
  sub_1C0779CC0();
  MEMORY[0x1E0C80A78](v40);
  sub_1C0778544();
  sub_1C07ACF80(&qword_1EF62E718);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v41);
  sub_1C077AE40();
  v42 = *v20;
  sub_1C07A9480(v24, v24[3]);
  sub_1C07CBAF0();
  sub_1C1070EB8();
  __asm { BR              X9 }
}

void sub_1C07C4994()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);

  *(_BYTE *)(v3 - 72) = 0;
  sub_1C07CBCD0();
  sub_1C078A9EC();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
  v4 = sub_1C078BC90();
  v5(v4);
  sub_1C07757D0();
}

void TransportationType.init(from:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  sub_1C077AE5C();
  sub_1C07795F4(v2);
  sub_1C07ACF80(&qword_1EF62E768);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v3);
  sub_1C07AA618(v4, v32);
  v41 = sub_1C07ACF80(&qword_1EF62E770);
  sub_1C0787718(*(_QWORD *)(v41 - 8));
  MEMORY[0x1E0C80A78](v5);
  sub_1C07820E4(v6, v33);
  sub_1C07ACF80(&qword_1EF62E778);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v7);
  sub_1C0782928(v8, v34);
  sub_1C07ACF80(&qword_1EF62E780);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v9);
  sub_1C078BC74(v10, v35);
  sub_1C07ACF80(&qword_1EF62E788);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v11);
  sub_1C078C6C0(v12, v36);
  sub_1C07ACF80(&qword_1EF62E790);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v13);
  sub_1C079C230(v14, v37);
  v42 = sub_1C07ACF80(&qword_1EF62E798);
  sub_1C0787718(*(_QWORD *)(v42 - 8));
  MEMORY[0x1E0C80A78](v15);
  sub_1C079571C(v16, v38);
  sub_1C07ACF80(&qword_1EF62E7A0);
  sub_1C077AE7C();
  MEMORY[0x1E0C80A78](v17);
  sub_1C07766EC();
  v18 = sub_1C07ACF80(&qword_1EF62E7A8);
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  sub_1C077962C();
  sub_1C07A9480(v0, v0[3]);
  sub_1C07CBAF0();
  sub_1C1070E94();
  if (v43)
  {
    v20 = (uint64_t)v0;
  }
  else
  {
    v21 = sub_1C1070AF8();
    v23 = *(_QWORD *)(v21 + 16);
    v40 = v18;
    v39 = v1;
    if (v23)
    {
      v24 = *(unsigned __int8 *)(v21 + 32);
      sub_1C077855C(1, v23, v21, v21 + 32, v22, (2 * v23) | 1);
      v26 = v25;
      v28 = v27;
      swift_bridgeObjectRelease();
      if (v26 == v28 >> 1)
        __asm { BR              X9 }
    }
    v20 = (uint64_t)v0;
    v29 = sub_1C07809C8();
    sub_1C0775810();
    v31 = v30;
    sub_1C07ACF80(&qword_1ED752E80);
    sub_1C0782FF4();
    *v31 = &type metadata for TransportationType;
    sub_1C1070A44();
    sub_1C0792C74();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v31, *MEMORY[0x1E0DEC450], v29);
    sub_1C07A42CC();
    sub_1C077E6B4();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v39, v40);
  }
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v20);
  sub_1C07757D0();
}

void sub_1C07C4EC4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);

  sub_1C07BAB58();
  sub_1C07A1A58();
  if (!v0)
  {
    v3 = sub_1C0781CC0();
    v4(v3);
    swift_unknownObjectRelease();
    sub_1C0780FB4();
    **(_BYTE **)(v2 - 136) = v1;
    JUMPOUT(0x1C07C4EB0);
  }
  swift_unknownObjectRelease();
  sub_1C0780FB4();
  JUMPOUT(0x1C07C4D10);
}

void sub_1C07C4EF0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);

  sub_1C07D0A78();
  sub_1C07A1A58();
  if (!v0)
  {
    v3 = sub_1C07BC538();
    v4(v3);
    swift_unknownObjectRelease();
    sub_1C0780FB4();
    **(_BYTE **)(v2 - 136) = v1;
    JUMPOUT(0x1C07C4EB0);
  }
  swift_unknownObjectRelease();
  sub_1C0780FB4();
  JUMPOUT(0x1C07C4D10);
}

void sub_1C07C4FA4()
{
  uint64_t v0;

  sub_1C0786D3C();
  sub_1C07A1A58();
  if (!v0)
  {
    sub_1C079FC04();
    JUMPOUT(0x1C07C4FD0);
  }
  swift_unknownObjectRelease();
  sub_1C0780FB4();
  JUMPOUT(0x1C07C4D10);
}

void sub_1C07C4FD8()
{
  uint64_t v0;

  sub_1C077E350();
  sub_1C1070A38();
  if (v0)
    JUMPOUT(0x1C07C5010);
  JUMPOUT(0x1C07C5030);
}

void sub_1C07C5050()
{
  TransportationType.init(from:)();
}

#error "1C07C506C: call analysis failed (funcsize=5)"

void WorkoutType.hash(into:)()
{
  sub_1C1070E04();
  sub_1C0778534();
}

BOOL static WorkoutType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

BOOL sub_1C07C50B0(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_1C07C50C0()
{
  return sub_1C1070E04();
}

uint64_t sub_1C07C50E4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v10;

  v2 = a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000;
  if (v2 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x676E696B6C6177 && a2 == 0xE700000000000000;
    if (v6 || (sub_1C1070CB4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x676E696E6E7572 && a2 == 0xE700000000000000;
      if (v7 || (sub_1C1070CB4() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x676E696C637963 && a2 == 0xE700000000000000;
        if (v8 || (sub_1C1070CB4() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0x676E696B6968 && a2 == 0xE600000000000000)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v10 = sub_1C1070CB4();
          swift_bridgeObjectRelease();
          if ((v10 & 1) != 0)
            return 4;
          else
            return 5;
        }
      }
    }
  }
}

uint64_t sub_1C07C52E8()
{
  return 5;
}

uint64_t sub_1C07C52F0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C07C5324 + 4 * byte_1C10733C0[a1]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1C07C5324()
{
  return 0x676E696B6C6177;
}

uint64_t sub_1C07C5350()
{
  return 0x676E696B6968;
}

uint64_t sub_1C07C5364()
{
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1C07C5380()
{
  return 0;
}

BOOL sub_1C07C538C(char *a1, char *a2)
{
  return sub_1C07C50B0(*a1, *a2);
}

void sub_1C07C5398()
{
  sub_1C07C75B4();
}

uint64_t sub_1C07C53B0()
{
  return sub_1C07C50C0();
}

uint64_t sub_1C07C53B8()
{
  unsigned __int8 *v0;

  return sub_1C07C52F0(*v0);
}

uint64_t sub_1C07C53C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C07C50E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C07C53E4()
{
  return sub_1C0782AF4();
}

uint64_t sub_1C07C5400@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C07C52E8();
  *a1 = result;
  return result;
}

uint64_t sub_1C07C5424()
{
  sub_1C07CBD0C();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C544C()
{
  sub_1C07CBD0C();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C5474()
{
  sub_1C07CBD84();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C549C()
{
  sub_1C07CBD84();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C54C4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C07C5364();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1C07C54EC()
{
  return sub_1C0782AF4();
}

uint64_t sub_1C07C5504@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C0798424();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1C07C552C()
{
  sub_1C07CBD48();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C5554()
{
  sub_1C07CBD48();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C557C()
{
  sub_1C07CBDC0();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C55A4()
{
  sub_1C07CBDC0();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C55CC()
{
  sub_1C07CBE38();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C55F4()
{
  sub_1C07CBE38();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C561C()
{
  sub_1C07CBDFC();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C5644()
{
  sub_1C07CBDFC();
  return sub_1C1070EF4();
}

void WorkoutType.encode(to:)()
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1C077AE5C();
  sub_1C07ACF80(&qword_1EF62E7B0);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v1);
  sub_1C07820E4(v2, v11);
  sub_1C07ACF80(&qword_1EF62E7B8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v3);
  sub_1C078BC74(v4, v12);
  sub_1C07ACF80(&qword_1EF62E7C0);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v5);
  sub_1C079571C(v6, v13);
  sub_1C07ACF80(&qword_1EF62E7C8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v7);
  sub_1C0789AAC(v8, v14);
  sub_1C07ACF80(&qword_1EF62E7D0);
  sub_1C0779CC0();
  MEMORY[0x1E0C80A78](v9);
  sub_1C07766EC();
  sub_1C07ACF80(&qword_1EF62E7D8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v10);
  sub_1C077FCFC();
  sub_1C07CBD0C();
  sub_1C07814B0();
  __asm { BR              X9 }
}

void sub_1C07C57B8()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);

  *(_BYTE *)(v0 - 69) = 0;
  sub_1C07CBE38();
  sub_1C0795FC8();
  sub_1C07B619C();
  v1 = sub_1C07A9528();
  v2(v1);
  sub_1C07757D0();
}

void _s24IntelligencePlatformCore22CommunicationMechanismO9hashValueSivg_0()
{
  sub_1C077C06C();
  sub_1C0778574();
  sub_1C077AE74();
  sub_1C0775804();
}

void WorkoutType.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1C077AE5C();
  sub_1C07795F4(v2);
  v3 = sub_1C07ACF80(&qword_1EF62E810);
  v23 = *(_QWORD *)(v3 - 8);
  v24 = v3;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v4);
  sub_1C0782928(v5, v21[0]);
  v22 = sub_1C07ACF80(&qword_1EF62E818);
  v21[10] = *(_QWORD *)(v22 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C078BC74(v7, v21[0]);
  v8 = sub_1C07ACF80(&qword_1EF62E820);
  v21[8] = *(_QWORD *)(v8 - 8);
  v21[9] = v8;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v9);
  sub_1C078C6C0(v10, v21[0]);
  v11 = sub_1C07ACF80(&qword_1EF62E828);
  v21[6] = *(_QWORD *)(v11 - 8);
  v21[7] = v11;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v12);
  sub_1C079C230(v13, v21[0]);
  sub_1C07ACF80(&qword_1EF62E830);
  sub_1C077AE7C();
  MEMORY[0x1E0C80A78](v14);
  sub_1C07795DC();
  sub_1C07ACF80(&qword_1EF62E838);
  sub_1C07D0AE4();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0780448();
  sub_1C07CBD0C();
  sub_1C077CEDC();
  if (!v0)
  {
    v18 = sub_1C077C050();
    v19 = *(_QWORD *)(v18 + 16);
    if (v19)
    {
      sub_1C07B159C(v18, v19);
      sub_1C07AFFB4();
      if (!v1)
      {
        v21[1] = (uint64_t)v17;
        __asm { BR              X9 }
      }
    }
    sub_1C07809C8();
    sub_1C0775810();
    sub_1C07ACF80(&qword_1ED752E80);
    sub_1C0782FF4();
    sub_1C07D0ACC((uint64_t)&type metadata for WorkoutType);
    v20 = sub_1C0792C74();
    sub_1C0796F00(v20, *MEMORY[0x1E0DEC450]);
    sub_1C07A42CC();
    sub_1C077E6B4();
    sub_1C07AACAC(v26);
  }
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v25);
  sub_1C07757D0();
}

void sub_1C07C5B14()
{
  uint64_t v0;

  sub_1C07D0AB4();
  sub_1C0797AC0();
  if (!v0)
  {
    sub_1C07BC538();
    JUMPOUT(0x1C07C5BDCLL);
  }
  JUMPOUT(0x1C07C5AF0);
}

void sub_1C07C5B44()
{
  uint64_t v0;

  sub_1C07D0A84();
  sub_1C0797AC0();
  if (!v0)
    JUMPOUT(0x1C07C5B70);
  JUMPOUT(0x1C07C5AF0);
}

void sub_1C07C5B78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);

  sub_1C07D0A60();
  sub_1C0797AC0();
  if (!v0)
  {
    v2 = sub_1C07BA8FC();
    v3(v2);
    sub_1C077E6B4();
    sub_1C07AACAC(*(_QWORD *)(v1 - 96));
    **(_BYTE **)(v1 - 136) = *(_QWORD *)(v1 - 248);
    JUMPOUT(0x1C07C5AFCLL);
  }
  JUMPOUT(0x1C07C5AF0);
}

void sub_1C07C5BA8()
{
  uint64_t v0;

  sub_1C07D0A48();
  sub_1C0797AC0();
  if (!v0)
    JUMPOUT(0x1C07C5BDCLL);
  JUMPOUT(0x1C07C5AF0);
}

void sub_1C07C5BFC()
{
  WorkoutType.init(from:)();
}

void sub_1C07C5C10()
{
  WorkoutType.encode(to:)();
}

uint64_t ActivityType.entityClass.getter@<X0>(uint64_t a1@<X8>)
{
  unsigned __int8 *v1;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *v1;
  switch(v3 >> 5)
  {
    case 0u:
      v4 = 1;
      switch(v3)
      {
        case 0xBu:
        case 0xCu:
        case 0x12u:
          sub_1C106CEBC();
          goto LABEL_31;
        case 0xDu:
        case 0xEu:
        case 0xFu:
        case 0x10u:
          goto LABEL_32;
        case 0x11u:
          goto LABEL_12;
        default:
          if (v3 == 5)
            goto LABEL_13;
          if (v3)
            goto LABEL_32;
LABEL_12:
          sub_1C106CF34();
          break;
      }
      goto LABEL_31;
    case 1u:
      __asm { BR              X10 }
      return result;
    case 2u:
LABEL_9:
      sub_1C106CFD0();
      goto LABEL_31;
    case 3u:
      sub_1C106CEB0();
LABEL_31:
      v4 = 0;
      break;
    case 4u:
      v4 = 1;
      switch(v3)
      {
        case 0x81u:
          sub_1C106CEA4();
          goto LABEL_31;
        case 0x82u:
LABEL_13:
          sub_1C106CE68();
          goto LABEL_31;
        case 0x83u:
          sub_1C106CE20();
          goto LABEL_31;
        case 0x84u:
          sub_1C106CF4C();
          goto LABEL_31;
        case 0x85u:
          sub_1C106CEC8();
          goto LABEL_31;
        case 0x86u:
          sub_1C106CF64();
          goto LABEL_31;
        case 0x87u:
          sub_1C106CED4();
          goto LABEL_31;
        case 0x88u:
        case 0x99u:
          sub_1C106CF10();
          goto LABEL_31;
        case 0x89u:
          sub_1C106CE74();
          goto LABEL_31;
        case 0x8Au:
          sub_1C106CF7C();
          goto LABEL_31;
        case 0x8Bu:
          sub_1C106CE2C();
          goto LABEL_31;
        case 0x8Cu:
          sub_1C106CF70();
          goto LABEL_31;
        case 0x8Du:
          sub_1C106CEE0();
          goto LABEL_31;
        case 0x8Eu:
          sub_1C106CF28();
          goto LABEL_31;
        case 0x95u:
          sub_1C106CF40();
          goto LABEL_31;
        case 0x98u:
          goto LABEL_9;
        case 0x9Au:
          sub_1C106CE5C();
          goto LABEL_31;
        case 0x9Bu:
          sub_1C106D054();
          goto LABEL_31;
        case 0x9Cu:
          sub_1C106CE14();
          goto LABEL_31;
        case 0x9Du:
          sub_1C106CFB8();
          goto LABEL_31;
        default:
          goto LABEL_32;
      }
    default:
      v4 = 1;
      break;
  }
LABEL_32:
  v5 = sub_1C106D1F8();
  return sub_1C07B2D8C(a1, v4, 1, v5);
}

uint64_t ActivityType.titleCase.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v10 = sub_1C106A7E0();
  sub_1C0795FD4();
  MEMORY[0x1E0C80A78](v2);
  sub_1C0778564();
  v5 = v4 - v3;
  sub_1C07ACF80(&qword_1ED762590);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0779614();
  ActivityType.value.getter();
  v7 = sub_1C106AEF4();
  sub_1C07B2D8C(v1, 1, 1, v7);
  sub_1C07B1280();
  sub_1C107060C();
  sub_1C07CBE74(v1);
  sub_1C10705F4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C106A7BC();
  sub_1C10705E8();
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v5, v10);
  swift_bridgeObjectRelease();
  v8 = sub_1C10705DC();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t ActivityType.value.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1C07C607C + 4 * byte_1C10733FE[*v0 >> 5]))();
}

unint64_t sub_1C07C607C@<X0>(int a1@<W8>)
{
  unint64_t result;

  result = 0x6C61436F69647561;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 0x6C69616D65;
      break;
    case 5:
      result = 0xD000000000000010;
      break;
    case 9:
      result = 1885958006;
      break;
    case 11:
    case 12:
    case 18:
      result = 0x656D695465636166;
      break;
    case 13:
      result = 0x6C61436F65646976;
      break;
    case 17:
      result = 0x656E6F6870;
      break;
    default:
      result = 0x63696E756D6D6F63;
      break;
  }
  return result;
}

uint64_t sub_1C07C60CC@<X0>(char a1@<W8>)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C07C60FC + 4 * byte_1C107344D[a1 & 0x1F]))(0x676E696B6C6177, 0xE700000000000000);
}

uint64_t sub_1C07C60FC()
{
  return 0x6973696372657865;
}

uint64_t sub_1C07C6118@<X0>(char a1@<W8>)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1C07C6150
                                                                     + 4 * byte_1C1073445[a1 & 0x1F]))(0xD000000000000019, 0x80000001C10E1F50);
}

uint64_t sub_1C07C6150()
{
  uint64_t v0;

  return v0 - 2;
}

uint64_t sub_1C07C6160@<X0>(char a1@<W8>)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1C07C6198
                                                                     + 4 * byte_1C1073440[a1 & 0x1F]))(0xD000000000000028, 0x80000001C10E1E60);
}

unint64_t sub_1C07C6198()
{
  return 0xD000000000000018;
}

uint64_t sub_1C07C61A4@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C07C61D4 + 4 * word_1C1073404[a1 - 128]))(0x676E696B726F77, 0xE700000000000000);
}

uint64_t sub_1C07C61E8()
{
  return 0x676E696E6E7572;
}

uint64_t sub_1C07C6208()
{
  return 0x676E696B6968;
}

uint64_t sub_1C07C621C()
{
  uint64_t v0;

  return v0 + 16;
}

uint64_t sub_1C07C622C()
{
  uint64_t v0;

  return v0 + 8;
}

uint64_t sub_1C07C623C()
{
  uint64_t v0;

  return v0 + 3;
}

uint64_t sub_1C07C624C()
{
  uint64_t v0;

  return v0 + 5;
}

unint64_t sub_1C07C625C()
{
  return 0xD000000000000018;
}

uint64_t sub_1C07C6268()
{
  uint64_t v0;

  return v0 + 2;
}

uint64_t sub_1C07C6278()
{
  uint64_t v0;

  return v0 - 1;
}

uint64_t sub_1C07C6288()
{
  uint64_t v0;

  return v0 - 2;
}

void sub_1C07C6368()
{
  JUMPOUT(0x1C07C61FCLL);
}

void sub_1C07C6374()
{
  JUMPOUT(0x1C07C6214);
}

uint64_t sub_1C07C6384()
{
  return 0x676E696863746177;
}

uint64_t sub_1C07C63A0()
{
  return 0x676E6970706F6873;
}

uint64_t sub_1C07C6488()
{
  return 0x6E696D6165727473;
}

uint64_t sub_1C07C6498()
{
  return 0x4463697373616C63;
}

uint64_t sub_1C07C64B4()
{
  return 0x65526E6565726373;
}

uint64_t sub_1C07C64D8()
{
  return 0x68536E6565726373;
}

unint64_t sub_1C07C64F8()
{
  return 0xD000000000000010;
}

uint64_t sub_1C07C6510()
{
  return 0x616E6F6974617473;
}

uint64_t sub_1C07C652C()
{
  return sub_1C07AFC50();
}

void sub_1C07C653C()
{
  JUMPOUT(0x1C07C6550);
}

uint64_t sub_1C07C655C()
{
  return 0x746867696C66;
}

uint64_t sub_1C07C6570()
{
  return 1885958772;
}

uint64_t sub_1C07C65A0()
{
  return 0x6E69646E65747461;
}

uint64_t sub_1C07C65C4()
{
  return 0x754F676E696E6964;
}

void sub_1C07C65E4()
{
  JUMPOUT(0x1C07C6604);
}

uint64_t static ActivityType.== infix(_:_:)(unsigned __int8 *a1)
{
  return ((uint64_t (*)(void))((char *)sub_1C07C6630 + 4 * byte_1C1073465[*a1 >> 5]))();
}

BOOL sub_1C07C6630@<W0>(unsigned int a1@<W8>)
{
  int v1;

  return a1 <= 0x1F && v1 == a1;
}

uint64_t sub_1C07C6808(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;
  BOOL v21;
  BOOL v22;
  BOOL v23;
  BOOL v24;
  BOOL v25;
  BOOL v26;
  BOOL v27;
  BOOL v28;
  BOOL v29;
  BOOL v30;
  BOOL v31;
  BOOL v32;
  BOOL v33;
  char v35;

  v2 = a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000;
  if (v2 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x63696E756D6D6F63 && a2 == 0xED0000676E697461;
    if (v6 || (sub_1C1070CB4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6973696372657865 && a2 == 0xEA0000000000676ELL;
      if (v7 || (sub_1C1070CB4() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000016 && a2 == 0x80000001C10DE970 || (sub_1C1070CB4() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000018 && a2 == 0x80000001C10E1DC0 || (sub_1C1070CB4() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        v8 = a1 == 0x676E696B726F77 && a2 == 0xE700000000000000;
        if (v8 || (sub_1C1070CB4() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          v9 = a1 == 0x676E697465656DLL && a2 == 0xE700000000000000;
          if (v9 || (sub_1C1070CB4() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else
          {
            v10 = a1 == 0x676E69746165 && a2 == 0xE600000000000000;
            if (v10 || (sub_1C1070CB4() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 7;
            }
            else
            {
              v11 = a1 == 0x676E696863746177 && a2 == 0xEA00000000005654;
              if (v11 || (sub_1C1070CB4() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 8;
              }
              else
              {
                v12 = a1 == 0x676E6970706F6873 && a2 == 0xE800000000000000;
                if (v12 || (sub_1C1070CB4() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 9;
                }
                else
                {
                  v13 = a1 == 0x6E6C7566646E696DLL && a2 == 0xEB00000000737365;
                  if (v13 || (sub_1C1070CB4() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 10;
                  }
                  else
                  {
                    v14 = a1 == 0x676E697065656C73 && a2 == 0xE800000000000000;
                    if (v14 || (sub_1C1070CB4() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 11;
                    }
                    else
                    {
                      v15 = a1 == 0x6E696C6576617274 && a2 == 0xE900000000000067;
                      if (v15 || (sub_1C1070CB4() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 12;
                      }
                      else
                      {
                        v16 = a1 == 0x676E6964616572 && a2 == 0xE700000000000000;
                        if (v16 || (sub_1C1070CB4() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 13;
                        }
                        else
                        {
                          v17 = a1 == 0x6E6F697461636176 && a2 == 0xEB00000000676E69;
                          if (v17 || (sub_1C1070CB4() & 1) != 0)
                          {
                            swift_bridgeObjectRelease();
                            return 14;
                          }
                          else
                          {
                            v18 = a1 == 0x676E696D6167 && a2 == 0xE600000000000000;
                            if (v18 || (sub_1C1070CB4() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 15;
                            }
                            else
                            {
                              v19 = a1 == 0x7A696C6169636F73 && a2 == 0xEB00000000676E69;
                              if (v19 || (sub_1C1070CB4() & 1) != 0)
                              {
                                swift_bridgeObjectRelease();
                                return 16;
                              }
                              else
                              {
                                v20 = a1 == 0x7055676E696B6177 && a2 == 0xE800000000000000;
                                if (v20 || (sub_1C1070CB4() & 1) != 0)
                                {
                                  swift_bridgeObjectRelease();
                                  return 17;
                                }
                                else
                                {
                                  v21 = a1 == 0x656D6974646562 && a2 == 0xE700000000000000;
                                  if (v21 || (sub_1C1070CB4() & 1) != 0)
                                  {
                                    swift_bridgeObjectRelease();
                                    return 18;
                                  }
                                  else
                                  {
                                    v22 = a1 == 0x676E696E7261656CLL && a2 == 0xE800000000000000;
                                    if (v22 || (sub_1C1070CB4() & 1) != 0)
                                    {
                                      swift_bridgeObjectRelease();
                                      return 19;
                                    }
                                    else
                                    {
                                      v23 = a1 == 0x6E696D6165727473 && a2 == 0xE900000000000067;
                                      if (v23 || (sub_1C1070CB4() & 1) != 0)
                                      {
                                        swift_bridgeObjectRelease();
                                        return 20;
                                      }
                                      else
                                      {
                                        v24 = a1 == 0x4463697373616C63 && a2 == 0xEA0000000000444ELL;
                                        if (v24 || (sub_1C1070CB4() & 1) != 0)
                                        {
                                          swift_bridgeObjectRelease();
                                          return 21;
                                        }
                                        else
                                        {
                                          v25 = a1 == 0x65526E6565726373 && a2 == 0xEF676E6964726F63;
                                          if (v25 || (sub_1C1070CB4() & 1) != 0)
                                          {
                                            swift_bridgeObjectRelease();
                                            return 22;
                                          }
                                          else
                                          {
                                            v26 = a1 == 0x68536E6565726373 && a2 == 0xED0000676E697261;
                                            if (v26 || (sub_1C1070CB4() & 1) != 0)
                                            {
                                              swift_bridgeObjectRelease();
                                              return 23;
                                            }
                                            else if (a1 == 0xD000000000000010 && a2 == 0x80000001C10E1DA0
                                                   || (sub_1C1070CB4() & 1) != 0)
                                            {
                                              swift_bridgeObjectRelease();
                                              return 24;
                                            }
                                            else
                                            {
                                              v27 = a1 == 0x616E6F6974617473 && a2 == 0xEA00000000007972;
                                              if (v27 || (sub_1C1070CB4() & 1) != 0)
                                              {
                                                swift_bridgeObjectRelease();
                                                return 25;
                                              }
                                              else
                                              {
                                                v28 = a1 == 0x69746F6D6F747561 && a2 == 0xEA00000000006576;
                                                if (v28 || (sub_1C1070CB4() & 1) != 0)
                                                {
                                                  swift_bridgeObjectRelease();
                                                  return 26;
                                                }
                                                else if (a1 == 0xD000000000000014 && a2 == 0x80000001C10E1D80
                                                       || (sub_1C1070CB4() & 1) != 0)
                                                {
                                                  swift_bridgeObjectRelease();
                                                  return 27;
                                                }
                                                else
                                                {
                                                  v29 = a1 == 0x746867696C66 && a2 == 0xE600000000000000;
                                                  if (v29 || (sub_1C1070CB4() & 1) != 0)
                                                  {
                                                    swift_bridgeObjectRelease();
                                                    return 28;
                                                  }
                                                  else
                                                  {
                                                    v30 = a1 == 1885958772 && a2 == 0xE400000000000000;
                                                    if (v30 || (sub_1C1070CB4() & 1) != 0)
                                                    {
                                                      swift_bridgeObjectRelease();
                                                      return 29;
                                                    }
                                                    else
                                                    {
                                                      v31 = a1 == 0x6E6974756D6D6F63 && a2 == 0xE900000000000067;
                                                      if (v31 || (sub_1C1070CB4() & 1) != 0)
                                                      {
                                                        swift_bridgeObjectRelease();
                                                        return 30;
                                                      }
                                                      else
                                                      {
                                                        v32 = a1 == 0x6E69646E65747461 && a2 == 0xEE00746E65764567;
                                                        if (v32 || (sub_1C1070CB4() & 1) != 0)
                                                        {
                                                          swift_bridgeObjectRelease();
                                                          return 31;
                                                        }
                                                        else
                                                        {
                                                          v33 = a1 == 0x754F676E696E6964 && a2 == 0xE900000000000074;
                                                          if (v33 || (sub_1C1070CB4() & 1) != 0)
                                                          {
                                                            swift_bridgeObjectRelease();
                                                            return 32;
                                                          }
                                                          else if (a1 == 0x6E6F697461636F6CLL
                                                                 && a2 == 0xED00007469736956)
                                                          {
                                                            swift_bridgeObjectRelease();
                                                            return 33;
                                                          }
                                                          else
                                                          {
                                                            v35 = sub_1C1070CB4();
                                                            swift_bridgeObjectRelease();
                                                            if ((v35 & 1) != 0)
                                                              return 33;
                                                            else
                                                              return 34;
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1C07C75AC()
{
  return 34;
}

void sub_1C07C75B4()
{
  sub_1C077C06C();
  sub_1C1070E04();
  sub_1C077AE74();
  sub_1C0775804();
}

uint64_t sub_1C07C75E4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C07C7618 + 4 * byte_1C1073488[a1]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1C07C7618()
{
  return 0x63696E756D6D6F63;
}

uint64_t sub_1C07C7640()
{
  return 0x6973696372657865;
}

unint64_t sub_1C07C765C()
{
  return 0xD000000000000016;
}

uint64_t sub_1C07C78B0()
{
  return 0x746867696C66;
}

uint64_t sub_1C07C78C4()
{
  return 1885958772;
}

uint64_t sub_1C07C78F0()
{
  return 0x6E69646E65747461;
}

uint64_t sub_1C07C7914()
{
  return 0x754F676E696E6964;
}

uint64_t sub_1C07C7934()
{
  return 0x6E6F697461636F6CLL;
}

uint64_t sub_1C07C795C(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000016 && a2 == 0x80000001C10DDA70)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1C1070CB4();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_1C07C79E0()
{
  return 0xD000000000000016;
}

uint64_t sub_1C07C79FC(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x5474756F6B726F77 && a2 == 0xEB00000000657079)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1C1070CB4();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1C07C7A98()
{
  return 0x5474756F6B726F77;
}

uint64_t sub_1C07C7AB8(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000014 && a2 == 0x80000001C10E1FB0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1C1070CB4();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_1C07C7B3C()
{
  return 0xD000000000000014;
}

uint64_t sub_1C07C7B58()
{
  return sub_1C1070E04();
}

uint64_t sub_1C07C7B7C(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000012 && a2 == 0x80000001C10E1FD0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1C1070CB4();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

void sub_1C07C7C00()
{
  sub_1C077C06C();
  sub_1C07809D0();
  sub_1C077AE74();
  sub_1C0775804();
}

unint64_t sub_1C07C7C24()
{
  return 0xD000000000000012;
}

uint64_t sub_1C07C7C40()
{
  sub_1C07CC10C();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C7C68()
{
  sub_1C07CC10C();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C7C90()
{
  sub_1C07CBF68();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C7CB8()
{
  sub_1C07CBF68();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C7CE0()
{
  sub_1C07CC094();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C7D08()
{
  sub_1C07CC094();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C7D30()
{
  sub_1C07CC274();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C7D58()
{
  sub_1C07CC274();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C7D80()
{
  sub_1C07CC1C0();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C7DA8()
{
  sub_1C07CC1C0();
  return sub_1C1070EF4();
}

void sub_1C07C7DD0()
{
  sub_1C1070DF8();
  sub_1C0778574();
  sub_1C077AE74();
  sub_1C0775804();
}

uint64_t sub_1C07C7DFC()
{
  unsigned __int8 *v0;

  return sub_1C07C75E4(*v0);
}

uint64_t sub_1C07C7E04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C07C6808(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C07C7E28@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C07C75AC();
  *a1 = result;
  return result;
}

uint64_t sub_1C07C7E4C()
{
  sub_1C07CBEB4();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C7E74()
{
  sub_1C07CBEB4();
  return sub_1C1070EF4();
}

void sub_1C07C7EA0()
{
  sub_1C07C7C00();
}

uint64_t sub_1C07C7EC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C07C795C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1C07C7EE8()
{
  sub_1C07CC724();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C7F10()
{
  sub_1C07CC724();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C7F38()
{
  sub_1C07CBFA4();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C7F60()
{
  sub_1C07CBFA4();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C7F88()
{
  sub_1C07CBF2C();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C7FB0()
{
  sub_1C07CBF2C();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C7FD8()
{
  sub_1C07CC508();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C8000()
{
  sub_1C07CC508();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C802C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C07C79FC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1C07C8054()
{
  sub_1C07CC6AC();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C807C()
{
  sub_1C07CC6AC();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C80A4()
{
  sub_1C07CC01C();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C80CC()
{
  sub_1C07CC01C();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C80F4()
{
  sub_1C07CC328();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C811C()
{
  sub_1C07CC328();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C8144()
{
  sub_1C07CC238();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C816C()
{
  sub_1C07CC238();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C8194()
{
  sub_1C07CBEF0();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C81BC()
{
  sub_1C07CBEF0();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C81E4()
{
  sub_1C07CC544();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C820C()
{
  sub_1C07CC544();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C8234()
{
  sub_1C07CC454();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C825C()
{
  sub_1C07CC454();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C8288@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C07C7AB8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1C07C82B0()
{
  sub_1C07CC5BC();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C82D8()
{
  sub_1C07CC5BC();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C8300()
{
  sub_1C07CC3A0();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C8328()
{
  sub_1C07CC3A0();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C8350()
{
  sub_1C07CC184();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C8378()
{
  sub_1C07CC184();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C83A0()
{
  sub_1C07CC148();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C83C8()
{
  sub_1C07CC148();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C83F0()
{
  sub_1C07CC490();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C8418()
{
  sub_1C07CC490();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C8440()
{
  sub_1C07CC418();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C8468()
{
  sub_1C07CC418();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C8490()
{
  sub_1C07CC2EC();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C84B8()
{
  sub_1C07CC2EC();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C84E0()
{
  sub_1C07CC058();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C8508()
{
  sub_1C07CC058();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C8530()
{
  sub_1C07CC0D0();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C8558()
{
  sub_1C07CC0D0();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C8580()
{
  sub_1C07CC1FC();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C85A8()
{
  sub_1C07CC1FC();
  return sub_1C1070EF4();
}

void sub_1C07C85D0()
{
  sub_1C1070DF8();
  sub_1C07809D0();
  sub_1C077AE74();
  sub_1C0775804();
}

uint64_t sub_1C07C85FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C07C7B7C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1C07C8624()
{
  sub_1C07CC634();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C864C()
{
  sub_1C07CC634();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C8674()
{
  sub_1C07CC3DC();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C869C()
{
  sub_1C07CC3DC();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C86C4()
{
  sub_1C07CBFE0();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C86EC()
{
  sub_1C07CBFE0();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C8714()
{
  sub_1C07CC79C();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C873C()
{
  sub_1C07CC79C();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C8764()
{
  sub_1C07CC364();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C878C()
{
  sub_1C07CC364();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C87B4()
{
  sub_1C07CC2B0();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C87DC()
{
  sub_1C07CC2B0();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C8804()
{
  sub_1C07CC4CC();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C882C()
{
  sub_1C07CC4CC();
  return sub_1C1070EF4();
}

uint64_t sub_1C07C8854()
{
  sub_1C07CC580();
  return sub_1C1070EE8();
}

uint64_t sub_1C07C887C()
{
  sub_1C07CC580();
  return sub_1C1070EF4();
}

void ActivityType.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  uint64_t v113[4];
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;

  sub_1C077AE5C();
  a19 = v21;
  a20 = v22;
  v24 = v23;
  v25 = sub_1C07ACF80(&qword_1EF62E840);
  v140 = *(_QWORD *)(v25 - 8);
  v141 = v25;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v26);
  sub_1C07809AC(v27, v113[0]);
  v28 = sub_1C07ACF80(&qword_1EF62E848);
  v138 = *(_QWORD *)(v28 - 8);
  v139 = v28;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v29);
  sub_1C0782B00(v30, v113[0]);
  v137 = sub_1C07ACF80(&qword_1EF62E850);
  sub_1C0787718(*(_QWORD *)(v137 - 8));
  MEMORY[0x1E0C80A78](v31);
  sub_1C0784DAC((uint64_t)v113 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  v33 = sub_1C07ACF80(&qword_1EF62E858);
  sub_1C077B58C(v33, (uint64_t)&a16);
  sub_1C0787718(v34);
  MEMORY[0x1E0C80A78](v35);
  sub_1C0784DAC((uint64_t)v113 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  v37 = sub_1C07ACF80(&qword_1EF62E860);
  sub_1C077B58C(v37, (uint64_t)&a13);
  sub_1C0787718(v38);
  MEMORY[0x1E0C80A78](v39);
  sub_1C0784DAC((uint64_t)v113 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
  v136 = sub_1C07ACF80(&qword_1EF62E868);
  sub_1C0787718(*(_QWORD *)(v136 - 8));
  MEMORY[0x1E0C80A78](v41);
  sub_1C0784DAC((uint64_t)v113 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
  v43 = sub_1C07ACF80(&qword_1EF62E870);
  sub_1C077B58C(v43, (uint64_t)&v151);
  sub_1C0787718(v44);
  MEMORY[0x1E0C80A78](v45);
  sub_1C0784DAC((uint64_t)v113 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0));
  v135 = sub_1C07ACF80(&qword_1EF62E878);
  sub_1C0787718(*(_QWORD *)(v135 - 8));
  MEMORY[0x1E0C80A78](v47);
  sub_1C077AE40();
  sub_1C0784DAC(v48);
  v134 = sub_1C07ACF80(&qword_1EF62E880);
  sub_1C0787718(*(_QWORD *)(v134 - 8));
  MEMORY[0x1E0C80A78](v49);
  sub_1C077AE40();
  sub_1C0784DAC(v50);
  v132 = sub_1C07ACF80(&qword_1EF62E888);
  sub_1C0787718(*(_QWORD *)(v132 - 8));
  MEMORY[0x1E0C80A78](v51);
  sub_1C077AE40();
  sub_1C0784DAC(v52);
  v131 = sub_1C07ACF80(&qword_1EF62E890);
  sub_1C0787718(*(_QWORD *)(v131 - 8));
  MEMORY[0x1E0C80A78](v53);
  sub_1C077AE40();
  sub_1C0784DAC(v54);
  v130 = sub_1C07ACF80(&qword_1EF62E898);
  sub_1C0787718(*(_QWORD *)(v130 - 8));
  MEMORY[0x1E0C80A78](v55);
  sub_1C077AE40();
  sub_1C0784DAC(v56);
  v129 = sub_1C07ACF80(&qword_1EF62E8A0);
  sub_1C0787718(*(_QWORD *)(v129 - 8));
  MEMORY[0x1E0C80A78](v57);
  sub_1C077AE40();
  sub_1C0784DAC(v58);
  v127 = sub_1C07ACF80(&qword_1EF62E8A8);
  sub_1C0787718(*(_QWORD *)(v127 - 8));
  MEMORY[0x1E0C80A78](v59);
  sub_1C077AE40();
  sub_1C0784DAC(v60);
  v126 = sub_1C07ACF80(&qword_1EF62E8B0);
  sub_1C0787718(*(_QWORD *)(v126 - 8));
  MEMORY[0x1E0C80A78](v61);
  sub_1C077AE40();
  sub_1C0784DAC(v62);
  v124 = sub_1C07ACF80(&qword_1EF62E8B8);
  sub_1C0787718(*(_QWORD *)(v124 - 8));
  MEMORY[0x1E0C80A78](v63);
  sub_1C077AE40();
  sub_1C0784DAC(v64);
  v123 = sub_1C07ACF80(&qword_1EF62E8C0);
  sub_1C0787718(*(_QWORD *)(v123 - 8));
  MEMORY[0x1E0C80A78](v65);
  sub_1C077AE40();
  sub_1C0784DAC(v66);
  v121 = sub_1C07ACF80(&qword_1EF62E8C8);
  sub_1C0787718(*(_QWORD *)(v121 - 8));
  MEMORY[0x1E0C80A78](v67);
  sub_1C077AE40();
  sub_1C0784DAC(v68);
  v120 = sub_1C07ACF80(&qword_1EF62E8D0);
  sub_1C0787718(*(_QWORD *)(v120 - 8));
  MEMORY[0x1E0C80A78](v69);
  sub_1C077AE40();
  sub_1C0784DAC(v70);
  v71 = sub_1C07ACF80(&qword_1EF62E8D8);
  sub_1C077B58C(v71, (uint64_t)&v133);
  sub_1C0787718(v72);
  MEMORY[0x1E0C80A78](v73);
  sub_1C077AE40();
  sub_1C0784DAC(v74);
  v119 = sub_1C07ACF80(&qword_1EF62E8E0);
  sub_1C0787718(*(_QWORD *)(v119 - 8));
  MEMORY[0x1E0C80A78](v75);
  sub_1C077AE40();
  sub_1C0784DAC(v76);
  v118 = sub_1C07ACF80(&qword_1EF62E8E8);
  sub_1C0787718(*(_QWORD *)(v118 - 8));
  MEMORY[0x1E0C80A78](v77);
  sub_1C077AE40();
  sub_1C0784DAC(v78);
  v117 = sub_1C07ACF80(&qword_1EF62E8F0);
  sub_1C0787718(*(_QWORD *)(v117 - 8));
  MEMORY[0x1E0C80A78](v79);
  sub_1C077AE40();
  sub_1C0784DAC(v80);
  v81 = sub_1C07ACF80(&qword_1EF62E8F8);
  sub_1C077B58C(v81, (uint64_t)&v128);
  sub_1C0787718(v82);
  MEMORY[0x1E0C80A78](v83);
  sub_1C077AE40();
  sub_1C0784DAC(v84);
  v116 = sub_1C07ACF80(&qword_1EF62E900);
  sub_1C0787718(*(_QWORD *)(v116 - 8));
  MEMORY[0x1E0C80A78](v85);
  sub_1C077AE40();
  sub_1C0784DAC(v86);
  v87 = sub_1C07ACF80(&qword_1EF62E908);
  sub_1C077B58C(v87, (uint64_t)&v125);
  sub_1C0787718(v88);
  MEMORY[0x1E0C80A78](v89);
  sub_1C077AE40();
  sub_1C0784DAC(v90);
  v115 = sub_1C07ACF80(&qword_1EF62E910);
  sub_1C0787718(*(_QWORD *)(v115 - 8));
  MEMORY[0x1E0C80A78](v91);
  sub_1C077AE40();
  sub_1C0784DAC(v92);
  v93 = sub_1C07ACF80(&qword_1EF62E918);
  sub_1C077B58C(v93, (uint64_t)&v122);
  sub_1C0787718(v94);
  MEMORY[0x1E0C80A78](v95);
  sub_1C077AE40();
  sub_1C0784DAC(v96);
  v114 = sub_1C07ACF80(&qword_1EF62E920);
  sub_1C0787718(*(_QWORD *)(v114 - 8));
  MEMORY[0x1E0C80A78](v97);
  sub_1C077AE40();
  sub_1C0784DAC(v98);
  v99 = sub_1C07ACF80(&qword_1EF62E928);
  v148 = *(_QWORD *)(v99 - 8);
  v149 = v99;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v100);
  sub_1C0779CD0(v101, v113[0]);
  v102 = sub_1C07ACF80(&qword_1EF62E930);
  v146 = *(_QWORD *)(v102 - 8);
  v147 = v102;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v103);
  sub_1C078C6C0(v104, v113[0]);
  v105 = sub_1C07ACF80(&qword_1EF62E938);
  v144 = *(_QWORD *)(v105 - 8);
  v145 = v105;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v106);
  sub_1C07B464C(v107, v113[0]);
  v108 = sub_1C07ACF80(&qword_1EF62E940);
  v142 = *(_QWORD *)(v108 - 8);
  v143 = v108;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v109);
  sub_1C07766EC();
  v113[1] = sub_1C07ACF80(&qword_1EF62E948);
  sub_1C0795FD4();
  MEMORY[0x1E0C80A78](v110);
  sub_1C07795DC();
  v151 = sub_1C07ACF80(&qword_1EF62E950);
  v150 = *(_QWORD *)(v151 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v111);
  sub_1C077962C();
  v112 = *v20;
  sub_1C07A9480(v24, v24[3]);
  sub_1C07CBEB4();
  sub_1C1070EB8();
  __asm { BR              X10 }
}

void sub_1C07C9068()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1C0782944();
  sub_1C079A694();
  *(_BYTE *)(v2 - 65) = v0;
  sub_1C07CC760();
  v3 = *(_QWORD *)(v2 - 192);
  sub_1C1070BB8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 200) + 8))(v1, v3);
  sub_1C077F5F8();
  sub_1C07757D0();
}

uint64_t sub_1C07C91E8()
{
  int v0;

  return ((uint64_t (*)(void))((char *)sub_1C07C9208 + 4 * word_1C10734B0[v0 - 128]))();
}

void sub_1C07C9208()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 - 65) = 0;
  sub_1C07CC79C();
  sub_1C079A694();
  (*(void (**)(uint64_t, _QWORD))(v0 + 8))(v1, *(_QWORD *)(v2 - 904));
  sub_1C077F5F8();
  JUMPOUT(0x1C07C91D8);
}

void sub_1C07C96B0()
{
  sub_1C0782100();
  sub_1C07AD9A4();
  sub_1C0781CC0();
  JUMPOUT(0x1C07C96A0);
}

void sub_1C07C96D4()
{
  sub_1C07D09DC();
  sub_1C078F034();
  sub_1C07BC538();
  JUMPOUT(0x1C07C96A0);
}

void ActivityType.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118[4];
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD v142[5];
  uint64_t v143;
  _QWORD *v144;
  uint64_t v145;

  sub_1C077AE5C();
  v145 = v0;
  v4 = v3;
  v142[4] = v5;
  v143 = sub_1C07ACF80(&qword_1EF62EA90);
  sub_1C0787718(*(_QWORD *)(v143 - 8));
  MEMORY[0x1E0C80A78](v6);
  sub_1C078BC74(v7, v118[0]);
  v138 = sub_1C07ACF80(&qword_1EF62EA98);
  sub_1C0787718(*(_QWORD *)(v138 - 8));
  MEMORY[0x1E0C80A78](v8);
  sub_1C078C6C0(v9, v118[0]);
  v137 = sub_1C07ACF80(&qword_1EF62EAA0);
  sub_1C0787718(*(_QWORD *)(v137 - 8));
  MEMORY[0x1E0C80A78](v10);
  sub_1C079C230(v11, v118[0]);
  v12 = sub_1C07ACF80(&qword_1EF62EAA8);
  sub_1C077B58C(v12, (uint64_t)v142);
  sub_1C0787718(v13);
  MEMORY[0x1E0C80A78](v14);
  sub_1C079571C(v15, v118[0]);
  v136 = sub_1C07ACF80(&qword_1EF62EAB0);
  sub_1C0787718(*(_QWORD *)(v136 - 8));
  MEMORY[0x1E0C80A78](v16);
  sub_1C07B464C(v17, v118[0]);
  v135 = sub_1C07ACF80(&qword_1EF62EAB8);
  sub_1C0787718(*(_QWORD *)(v135 - 8));
  MEMORY[0x1E0C80A78](v18);
  sub_1C0784DB8(v19, v118[0]);
  v20 = sub_1C07ACF80(&qword_1EF62EAC0);
  sub_1C077B58C(v20, (uint64_t)&v141);
  sub_1C0787718(v21);
  MEMORY[0x1E0C80A78](v22);
  sub_1C0789AAC(v23, v118[0]);
  v133 = sub_1C07ACF80(&qword_1EF62EAC8);
  sub_1C0787718(*(_QWORD *)(v133 - 8));
  MEMORY[0x1E0C80A78](v24);
  sub_1C07A9CE4(v25, v118[0]);
  v132 = sub_1C07ACF80(&qword_1EF62EAD0);
  sub_1C0787718(*(_QWORD *)(v132 - 8));
  MEMORY[0x1E0C80A78](v26);
  sub_1C078258C(v27, v118[0]);
  v28 = sub_1C07ACF80(&qword_1EF62EAD8);
  sub_1C077B58C(v28, (uint64_t)&v140);
  sub_1C0787718(v29);
  MEMORY[0x1E0C80A78](v30);
  sub_1C07809AC(v31, v118[0]);
  v131 = sub_1C07ACF80(&qword_1EF62EAE0);
  sub_1C0787718(*(_QWORD *)(v131 - 8));
  MEMORY[0x1E0C80A78](v32);
  sub_1C079BC7C(v33, v118[0]);
  v130 = sub_1C07ACF80(&qword_1EF62EAE8);
  sub_1C0787718(*(_QWORD *)(v130 - 8));
  MEMORY[0x1E0C80A78](v34);
  sub_1C07757E8(v35, v118[0]);
  v36 = sub_1C07ACF80(&qword_1EF62EAF0);
  sub_1C077B58C(v36, (uint64_t)&v139);
  sub_1C0787718(v37);
  MEMORY[0x1E0C80A78](v38);
  sub_1C0782B00(v39, v118[0]);
  v129 = sub_1C07ACF80(&qword_1EF62EAF8);
  sub_1C0787718(*(_QWORD *)(v129 - 8));
  MEMORY[0x1E0C80A78](v40);
  sub_1C07AD018(v41, v118[0]);
  v128 = sub_1C07ACF80(&qword_1EF62EB00);
  sub_1C0787718(*(_QWORD *)(v128 - 8));
  MEMORY[0x1E0C80A78](v42);
  sub_1C0784DAC((uint64_t)v118 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0));
  v127 = sub_1C07ACF80(&qword_1EF62EB08);
  sub_1C0787718(*(_QWORD *)(v127 - 8));
  MEMORY[0x1E0C80A78](v44);
  sub_1C0784DAC((uint64_t)v118 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0));
  v126 = sub_1C07ACF80(&qword_1EF62EB10);
  sub_1C0787718(*(_QWORD *)(v126 - 8));
  MEMORY[0x1E0C80A78](v46);
  sub_1C0784DAC((uint64_t)v118 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0));
  v48 = sub_1C07ACF80(&qword_1EF62EB18);
  sub_1C077B58C(v48, (uint64_t)&v138);
  sub_1C0787718(v49);
  MEMORY[0x1E0C80A78](v50);
  sub_1C0784DAC((uint64_t)v118 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0));
  v52 = sub_1C07ACF80(&qword_1EF62EB20);
  sub_1C077B58C(v52, (uint64_t)&v137);
  sub_1C0787718(v53);
  MEMORY[0x1E0C80A78](v54);
  sub_1C0784DAC((uint64_t)v118 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0));
  v125 = sub_1C07ACF80(&qword_1EF62EB28);
  sub_1C0787718(*(_QWORD *)(v125 - 8));
  MEMORY[0x1E0C80A78](v56);
  sub_1C077AE40();
  sub_1C0784DAC(v57);
  v124 = sub_1C07ACF80(&qword_1EF62EB30);
  sub_1C0787718(*(_QWORD *)(v124 - 8));
  MEMORY[0x1E0C80A78](v58);
  sub_1C078A2B4(v59, v118[0]);
  v123 = sub_1C07ACF80(&qword_1EF62EB38);
  sub_1C0787718(*(_QWORD *)(v123 - 8));
  MEMORY[0x1E0C80A78](v60);
  sub_1C0784DAC((uint64_t)v118 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0));
  v62 = sub_1C07ACF80(&qword_1EF62EB40);
  sub_1C077B58C(v62, (uint64_t)&v134);
  sub_1C0787718(v63);
  MEMORY[0x1E0C80A78](v64);
  sub_1C07AA618(v65, v118[0]);
  v66 = sub_1C07ACF80(&qword_1EF62EB48);
  sub_1C077B58C(v66, (uint64_t)&v133);
  sub_1C0787718(v67);
  MEMORY[0x1E0C80A78](v68);
  sub_1C0784DAC((uint64_t)v118 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0));
  v70 = sub_1C07ACF80(&qword_1EF62EB50);
  sub_1C077B58C(v70, (uint64_t)&v132);
  sub_1C0787718(v71);
  MEMORY[0x1E0C80A78](v72);
  sub_1C07820E4(v73, v118[0]);
  v122 = sub_1C07ACF80(&qword_1EF62EB58);
  sub_1C0787718(*(_QWORD *)(v122 - 8));
  MEMORY[0x1E0C80A78](v74);
  sub_1C077AE40();
  sub_1C0784DAC(v75);
  v76 = sub_1C07ACF80(&qword_1EF62EB60);
  sub_1C077B58C(v76, (uint64_t)&v131);
  sub_1C0787718(v77);
  MEMORY[0x1E0C80A78](v78);
  sub_1C0784DAC((uint64_t)v118 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0));
  v80 = sub_1C07ACF80(&qword_1EF62EB68);
  sub_1C077B58C(v80, (uint64_t)&v130);
  sub_1C0787718(v81);
  MEMORY[0x1E0C80A78](v82);
  sub_1C0784DAC((uint64_t)v118 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0));
  v84 = sub_1C07ACF80(&qword_1EF62EB70);
  sub_1C077B58C(v84, (uint64_t)&v129);
  sub_1C0787718(v85);
  MEMORY[0x1E0C80A78](v86);
  sub_1C0784DAC((uint64_t)v118 - ((v87 + 15) & 0xFFFFFFFFFFFFFFF0));
  v121 = sub_1C07ACF80(&qword_1EF62EB78);
  sub_1C0787718(*(_QWORD *)(v121 - 8));
  MEMORY[0x1E0C80A78](v88);
  sub_1C077AE40();
  sub_1C0784DAC(v89);
  v90 = sub_1C07ACF80(&qword_1EF62EB80);
  sub_1C077B58C(v90, (uint64_t)&v128);
  sub_1C0787718(v91);
  MEMORY[0x1E0C80A78](v92);
  sub_1C0784DAC((uint64_t)v118 - ((v93 + 15) & 0xFFFFFFFFFFFFFFF0));
  v120 = sub_1C07ACF80(&qword_1EF62EB88);
  sub_1C0787718(*(_QWORD *)(v120 - 8));
  MEMORY[0x1E0C80A78](v94);
  sub_1C077AE40();
  sub_1C0784DAC(v95);
  v96 = sub_1C07ACF80(&qword_1EF62EB90);
  sub_1C077B58C(v96, (uint64_t)&v126);
  sub_1C0787718(v97);
  MEMORY[0x1E0C80A78](v98);
  sub_1C0784DAC((uint64_t)v118 - ((v99 + 15) & 0xFFFFFFFFFFFFFFF0));
  v100 = sub_1C07ACF80(&qword_1EF62EB98);
  v101 = *(_QWORD *)(v100 - 8);
  MEMORY[0x1E0C80A78](v100);
  sub_1C07795DC();
  v102 = sub_1C07ACF80(&qword_1EF62EBA0);
  v103 = *(_QWORD *)(v102 - 8);
  MEMORY[0x1E0C80A78](v102);
  sub_1C07766EC();
  v104 = v4[3];
  v144 = v4;
  sub_1C07A9480(v4, v104);
  sub_1C07CBEB4();
  v105 = v145;
  sub_1C1070E94();
  if (!v105)
  {
    v118[3] = v1;
    v118[1] = v101;
    v118[2] = v100;
    v119 = v103;
    v145 = v102;
    v106 = sub_1C1070AF8();
    v108 = *(_QWORD *)(v106 + 16);
    if (v108)
    {
      v118[0] = 0;
      v109 = *(unsigned __int8 *)(v106 + 32);
      sub_1C077855C(1, v108, v106, v106 + 32, v107, (2 * v108) | 1);
      v111 = v110;
      v113 = v112;
      swift_bridgeObjectRelease();
      if (v111 == v113 >> 1)
        __asm { BR              X9 }
    }
    v114 = sub_1C07809C8();
    sub_1C0775810();
    v116 = v115;
    sub_1C07ACF80(&qword_1ED752E80);
    sub_1C0782FF4();
    *v116 = &type metadata for ActivityType;
    v117 = v145;
    sub_1C1070A44();
    sub_1C0792C74();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v114 - 8) + 104))(v116, *MEMORY[0x1E0DEC450], v114);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v2, v117);
  }
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v144);
  sub_1C07757D0();
}

void sub_1C07CAA80()
{
  ActivityType.init(from:)();
}

#error "1C07CAA9C: call analysis failed (funcsize=5)"

uint64_t sub_1C07CAAA8(uint64_t result)
{
  return (unsigned __int16)result;
}

void sub_1C07CAAB8(uint64_t a1)
{
  double *v1;
  double v2;
  double v3;

  v2 = sub_1C07D0934(a1);
  *v1 = sub_1C0E082B4(v2, v3);
  sub_1C0778534();
}

void sub_1C07CAAD8(uint64_t a1)
{
  double *v1;
  double v2;
  double v3;

  v2 = sub_1C07D0934(a1);
  *v1 = sub_1C0E082BC(v2, v3);
  sub_1C0778534();
}

void sub_1C07CAAF8(uint64_t a1)
{
  double *v1;
  double v2;
  double v3;

  v2 = sub_1C07D0934(a1);
  *v1 = sub_1C0E082C4(v2, v3);
  sub_1C0778534();
}

void sub_1C07CAB18(uint64_t a1)
{
  float *v1;
  float v2;
  float v3;

  v2 = sub_1C07B9A58(a1);
  *v1 = sub_1C0E0839C(v2, v3);
  sub_1C0778534();
}

void sub_1C07CAB38(uint64_t a1)
{
  float *v1;
  float v2;
  float v3;

  v2 = sub_1C07B9A58(a1);
  *v1 = sub_1C0E083A4(v2, v3);
  sub_1C0778534();
}

void sub_1C07CAB58(uint64_t a1)
{
  float *v1;
  float v2;
  float v3;

  v2 = sub_1C07B9A58(a1);
  *v1 = sub_1C0E083AC(v2, v3);
  sub_1C0778534();
}

void sub_1C07CAB78(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1C07AEDB0(a1);
  *v1 = sub_1C0E08488(v2, v3);
  sub_1C0778534();
}

void sub_1C07CAB98(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1C07AEDB0(a1);
  *v1 = sub_1C0E08498(v2, v3);
  sub_1C0778534();
}

void sub_1C07CABB8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1C07AEDB0(a1);
  *v1 = sub_1C0E084B4(v2, v3);
  sub_1C0778534();
}

void sub_1C07CABD8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1C07AEDB0(a1);
  *v1 = sub_1C0E084D8(v2, v3);
  sub_1C0778534();
}

unint64_t sub_1C07CABF8()
{
  unint64_t result;

  result = qword_1EF62E4C0;
  if (!qword_1EF62E4C0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1077CF8, &type metadata for CommunicationMechanism.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E4C0);
  }
  return result;
}

unint64_t sub_1C07CAC34()
{
  unint64_t result;

  result = qword_1EF62E4C8;
  if (!qword_1EF62E4C8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1077CA8, &type metadata for CommunicationMechanism.CountCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E4C8);
  }
  return result;
}

unint64_t sub_1C07CAC70()
{
  unint64_t result;

  result = qword_1EF62E4D0;
  if (!qword_1EF62E4D0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1077C58, &type metadata for CommunicationMechanism.ShareSheetSuggestionEngagedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E4D0);
  }
  return result;
}

unint64_t sub_1C07CACAC()
{
  unint64_t result;

  result = qword_1EF62E4D8;
  if (!qword_1EF62E4D8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1077C08, &type metadata for CommunicationMechanism.SharePlayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E4D8);
  }
  return result;
}

unint64_t sub_1C07CACE8()
{
  unint64_t result;

  result = qword_1EF62E4E0;
  if (!qword_1EF62E4E0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1077BB8, &type metadata for CommunicationMechanism.HighlightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E4E0);
  }
  return result;
}

unint64_t sub_1C07CAD24()
{
  unint64_t result;

  result = qword_1EF62E4E8;
  if (!qword_1EF62E4E8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1077B68, &type metadata for CommunicationMechanism.FaceTimeVideoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E4E8);
  }
  return result;
}

unint64_t sub_1C07CAD60()
{
  unint64_t result;

  result = qword_1EF62E4F0;
  if (!qword_1EF62E4F0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1077B18, &type metadata for CommunicationMechanism.PhoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E4F0);
  }
  return result;
}

unint64_t sub_1C07CAD9C()
{
  unint64_t result;

  result = qword_1EF62E4F8;
  if (!qword_1EF62E4F8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1077AC8, &type metadata for CommunicationMechanism.PhotoTagCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E4F8);
  }
  return result;
}

unint64_t sub_1C07CADD8()
{
  unint64_t result;

  result = qword_1EF62E500;
  if (!qword_1EF62E500)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1077A78, &type metadata for CommunicationMechanism.ProximityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E500);
  }
  return result;
}

unint64_t sub_1C07CAE14()
{
  unint64_t result;

  result = qword_1EF62E508;
  if (!qword_1EF62E508)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1077A28, &type metadata for CommunicationMechanism.ShareSheetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E508);
  }
  return result;
}

unint64_t sub_1C07CAE50()
{
  unint64_t result;

  result = qword_1EF62E510;
  if (!qword_1EF62E510)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10779D8, &type metadata for CommunicationMechanism.VideoCallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E510);
  }
  return result;
}

unint64_t sub_1C07CAE8C()
{
  unint64_t result;

  result = qword_1EF62E518;
  if (!qword_1EF62E518)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1077988, &type metadata for CommunicationMechanism.FaceTimeAudioCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E518);
  }
  return result;
}

unint64_t sub_1C07CAEC8()
{
  unint64_t result;

  result = qword_1EF62E520;
  if (!qword_1EF62E520)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1077938, &type metadata for CommunicationMechanism.FaceTimeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E520);
  }
  return result;
}

unint64_t sub_1C07CAF04()
{
  unint64_t result;

  result = qword_1EF62E528;
  if (!qword_1EF62E528)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10778E8, &type metadata for CommunicationMechanism.VoicemailCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E528);
  }
  return result;
}

unint64_t sub_1C07CAF40()
{
  unint64_t result;

  result = qword_1EF62E530;
  if (!qword_1EF62E530)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1077898, &type metadata for CommunicationMechanism.VoipCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E530);
  }
  return result;
}

unint64_t sub_1C07CAF7C()
{
  unint64_t result;

  result = qword_1EF62E538;
  if (!qword_1EF62E538)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1077848, &type metadata for CommunicationMechanism.CustomCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E538);
  }
  return result;
}

unint64_t sub_1C07CAFB8()
{
  unint64_t result;

  result = qword_1EF62E540;
  if (!qword_1EF62E540)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10777F8, &type metadata for CommunicationMechanism.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E540);
  }
  return result;
}

unint64_t sub_1C07CAFF4()
{
  unint64_t result;

  result = qword_1EF62E548;
  if (!qword_1EF62E548)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10777A8, &type metadata for CommunicationMechanism.AirDropCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E548);
  }
  return result;
}

unint64_t sub_1C07CB030()
{
  unint64_t result;

  result = qword_1EF62E550;
  if (!qword_1EF62E550)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1077758, &type metadata for CommunicationMechanism.ScheduledMeetingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E550);
  }
  return result;
}

unint64_t sub_1C07CB06C()
{
  unint64_t result;

  result = qword_1EF62E558;
  if (!qword_1EF62E558)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1077708, &type metadata for CommunicationMechanism.InstantMessageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E558);
  }
  return result;
}

unint64_t sub_1C07CB0A8()
{
  unint64_t result;

  result = qword_1EF62E560;
  if (!qword_1EF62E560)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10776B8, &type metadata for CommunicationMechanism.MmsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E560);
  }
  return result;
}

unint64_t sub_1C07CB0E4()
{
  unint64_t result;

  result = qword_1EF62E568;
  if (!qword_1EF62E568)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1077668, &type metadata for CommunicationMechanism.SmsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E568);
  }
  return result;
}

unint64_t sub_1C07CB120()
{
  unint64_t result;

  result = qword_1EF62E570;
  if (!qword_1EF62E570)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1077618, &type metadata for CommunicationMechanism.EmailCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E570);
  }
  return result;
}

unint64_t sub_1C07CB15C()
{
  unint64_t result;

  result = qword_1EF62E578;
  if (!qword_1EF62E578)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10775C8, &type metadata for CommunicationMechanism.AudioCallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E578);
  }
  return result;
}

uint64_t sub_1C07CB198(uint64_t a1, id *a2)
{
  return sub_1C07D0338(a1, a2);
}

uint64_t sub_1C07CB1AC(uint64_t a1, id *a2)
{
  return sub_1C07CB85C(a1, a2) & 1;
}

void sub_1C07CB1C4()
{
  sub_1C0A54330();
}

void sub_1C07CB1CC()
{
  sub_1C08C8E64();
}

void sub_1C07CB1D4()
{
  sub_1C0A54434();
}

void sub_1C07CB1DC()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = sub_1C078D300();
  *v0 = nullsub_1(v1);
  sub_1C0778534();
}

BOOL sub_1C07CB1FC(__int16 *a1, __int16 *a2)
{
  return sub_1C08C5494(*a1, *a2);
}

uint64_t sub_1C07CB208@<X0>(unsigned __int16 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  result = sub_1C07CAAA8(*a1);
  *(_WORD *)a2 = result;
  *(_BYTE *)(a2 + 2) = BYTE2(result) & 1;
  return result;
}

void sub_1C07CB238(_WORD *a1@<X8>)
{
  unsigned __int16 *v1;

  *a1 = nullsub_1(*v1);
  sub_1C0778534();
}

BOOL sub_1C07CB25C(uint64_t *a1, uint64_t *a2)
{
  return sub_1C08C439C(*a1, *a2);
}

uint64_t sub_1C07CB268()
{
  unsigned int *v0;

  return sub_1C0A54358(*v0);
}

void sub_1C07CB270()
{
  sub_1C08C8B90();
}

uint64_t sub_1C07CB278(uint64_t a1)
{
  unsigned int *v1;

  return sub_1C0A543B0(a1, *v1);
}

void sub_1C07CB280()
{
  _DWORD *v0;
  uint64_t v1;

  v1 = sub_1C07862E0();
  *v0 = nullsub_1(v1);
  sub_1C0778534();
}

void sub_1C07CB2A0()
{
  uint64_t *v0;

  sub_1C07CB304(*v0, (void (*)(uint64_t))MEMORY[0x1E0CB1940]);
}

void sub_1C07CB2C0(_QWORD *a1@<X8>)
{
  uint64_t v2;

  sub_1C07D039C();
  *a1 = v2;
}

void sub_1C07CB2E4()
{
  uint64_t *v0;

  sub_1C07CB304(*v0, MEMORY[0x1E0DEA950]);
}

void sub_1C07CB304(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3;

  v3 = sub_1C106FB14();
  a2(v3);
  sub_1C077960C();
  sub_1C0778534();
}

uint64_t sub_1C07CB334()
{
  return sub_1C0883CE8();
}

uint64_t sub_1C07CB33C(uint64_t a1)
{
  _QWORD *v1;

  return sub_1C07E0520(a1, *v1);
}

void sub_1C07CB344()
{
  sub_1C077581C();
  sub_1C07B1C90();
  sub_1C07D095C();
  sub_1C077AE74();
  sub_1C07D0AD8();
  sub_1C077E868();
}

void sub_1C07CB378()
{
  sub_1C0BFE940();
}

uint64_t sub_1C07CB384()
{
  return sub_1C07CB950();
}

void sub_1C07CB39C()
{
  sub_1C07CB344();
}

uint64_t sub_1C07CB3B4()
{
  _QWORD *v0;

  return sub_1C0A53DB8(*v0);
}

void sub_1C07CB3BC()
{
  sub_1C08C8B78();
}

uint64_t sub_1C07CB3C4(uint64_t a1)
{
  _QWORD *v1;

  return sub_1C0A543AC(a1, *v1);
}

void sub_1C07CB3CC(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;

  sub_1C07CB3FC();
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3 & 1;
}

uint64_t sub_1C07CB404@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t result;

  result = nullsub_1(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_1C07CB430(uint64_t a1)
{
  _QWORD *v1;

  return sub_1C0883CE4(a1, *v1);
}

void sub_1C07CB43C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_1C078D300();
  *v0 = sub_1C07CB7C8(v1);
  v0[1] = v2;
  sub_1C0778534();
}

BOOL sub_1C07CB45C(int *a1, int *a2)
{
  return sub_1C08C4390(*a1, *a2);
}

uint64_t sub_1C07CB468(_QWORD *a1, _QWORD *a2)
{
  return sub_1C07E04A4(*a1, *a2);
}

uint64_t sub_1C07CB474@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1C07CB7C8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C07CB49C@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  result = sub_1C07CB4CC(*a1);
  *(_DWORD *)a2 = result;
  *(_BYTE *)(a2 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t sub_1C07CB4CC(uint64_t result)
{
  return result;
}

uint64_t sub_1C07CB4E8(_QWORD *a1, _QWORD *a2)
{
  return sub_1C08C43A8(*a1, *a2);
}

uint64_t sub_1C07CB4F4()
{
  sub_1C0794BAC(&qword_1EF62F390, (uint64_t (*)(uint64_t))type metadata accessor for BMUseCaseIdentifier, (uint64_t)&unk_1C1076398);
  sub_1C0794BAC(&qword_1EF62F398, (uint64_t (*)(uint64_t))type metadata accessor for BMUseCaseIdentifier, (uint64_t)&unk_1C1076340);
  return sub_1C1070A20();
}

uint64_t sub_1C07CB578()
{
  sub_1C0794BAC(&qword_1EF62F578, (uint64_t (*)(uint64_t))type metadata accessor for BMStreamIdentifier, (uint64_t)&unk_1C10785BC);
  sub_1C0794BAC((unint64_t *)&unk_1EF62F580, (uint64_t (*)(uint64_t))type metadata accessor for BMStreamIdentifier, (uint64_t)&unk_1C107855C);
  return sub_1C1070A20();
}

uint64_t sub_1C07CB5FC()
{
  sub_1C0794BAC(&qword_1EF62F598, (uint64_t (*)(uint64_t))type metadata accessor for GEOPOICategory, (uint64_t)&unk_1C107801C);
  sub_1C0794BAC((unint64_t *)&unk_1EF62F5A0, (uint64_t (*)(uint64_t))type metadata accessor for GEOPOICategory, (uint64_t)&unk_1C1077FC4);
  return sub_1C1070A20();
}

uint64_t sub_1C07CB680()
{
  sub_1C0794BAC((unint64_t *)&unk_1ED754B78, (uint64_t (*)(uint64_t))type metadata accessor for NLLanguage, (uint64_t)&unk_1C1078990);
  sub_1C0794BAC(&qword_1EF62F590, (uint64_t (*)(uint64_t))type metadata accessor for NLLanguage, (uint64_t)&unk_1C1078354);
  return sub_1C1070A20();
}

uint64_t sub_1C07CB704()
{
  sub_1C0794BAC((unint64_t *)&unk_1ED7512B8, (uint64_t (*)(uint64_t))type metadata accessor for NSTextCheckingKey, (uint64_t)&unk_1C1078880);
  sub_1C0794BAC((unint64_t *)&unk_1EF62F560, (uint64_t (*)(uint64_t))type metadata accessor for NSTextCheckingKey, (uint64_t)&unk_1C10787D4);
  return sub_1C1070A20();
}

uint64_t sub_1C07CB788@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1C106FAF0();
  result = sub_1C077960C();
  *a1 = v2;
  return result;
}

uint64_t sub_1C07CB7CC()
{
  sub_1C0794BAC(&qword_1ED759878, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1C10788C4);
  sub_1C0794BAC(&qword_1EF62F570, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1C10786C0);
  return sub_1C1070A20();
}

uint64_t sub_1C07CB850()
{
  return sub_1C07CB8CC();
}

uint64_t sub_1C07CB85C(uint64_t a1, id *a2)
{
  _QWORD *v2;
  char v3;

  sub_1C07AF530(a1, a2);
  v3 = sub_1C106FB08();
  *v2 = 0;
  return v3 & 1;
}

uint64_t sub_1C07CB8CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_1C106FB14();
  v2 = v1;
  if (v0 == sub_1C106FB14() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1C1070CB4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1C07CB950()
{
  sub_1C077581C();
  sub_1C106FC28();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1C07CB988()
{
  unint64_t result;

  result = qword_1EF62E678;
  if (!qword_1EF62E678)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1077578, &type metadata for ObservedBehaviorType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E678);
  }
  return result;
}

unint64_t sub_1C07CB9C4()
{
  unint64_t result;

  result = qword_1EF62E680;
  if (!qword_1EF62E680)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1077528, &type metadata for ObservedBehaviorType.LurchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E680);
  }
  return result;
}

unint64_t sub_1C07CBA00()
{
  unint64_t result;

  result = qword_1EF62E688;
  if (!qword_1EF62E688)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10774D8, &type metadata for ObservedBehaviorType.HighSpeedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E688);
  }
  return result;
}

unint64_t sub_1C07CBA3C()
{
  unint64_t result;

  result = qword_1EF62E690;
  if (!qword_1EF62E690)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1077488, &type metadata for ObservedBehaviorType.SharpDecelerationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E690);
  }
  return result;
}

unint64_t sub_1C07CBA78()
{
  unint64_t result;

  result = qword_1EF62E698;
  if (!qword_1EF62E698)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1077438, &type metadata for ObservedBehaviorType.SharpAccelerationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E698);
  }
  return result;
}

unint64_t sub_1C07CBAB4()
{
  unint64_t result;

  result = qword_1EF62E6A0;
  if (!qword_1EF62E6A0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10773E8, &type metadata for ObservedBehaviorType.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E6A0);
  }
  return result;
}

unint64_t sub_1C07CBAF0()
{
  unint64_t result;

  result = qword_1EF62E720;
  if (!qword_1EF62E720)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1077398, &type metadata for TransportationType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E720);
  }
  return result;
}

unint64_t sub_1C07CBB2C()
{
  unint64_t result;

  result = qword_1EF62E728;
  if (!qword_1EF62E728)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1077348, &type metadata for TransportationType.TrainCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E728);
  }
  return result;
}

unint64_t sub_1C07CBB68()
{
  unint64_t result;

  result = qword_1EF62E730;
  if (!qword_1EF62E730)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10772F8, &type metadata for TransportationType.BusCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E730);
  }
  return result;
}

unint64_t sub_1C07CBBA4()
{
  unint64_t result;

  result = qword_1EF62E738;
  if (!qword_1EF62E738)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10772A8, &type metadata for TransportationType.ShipCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E738);
  }
  return result;
}

unint64_t sub_1C07CBBE0()
{
  unint64_t result;

  result = qword_1EF62E740;
  if (!qword_1EF62E740)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1077258, &type metadata for TransportationType.BicycleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E740);
  }
  return result;
}

unint64_t sub_1C07CBC1C()
{
  unint64_t result;

  result = qword_1EF62E748;
  if (!qword_1EF62E748)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1077208, &type metadata for TransportationType.PlaneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E748);
  }
  return result;
}

unint64_t sub_1C07CBC58()
{
  unint64_t result;

  result = qword_1EF62E750;
  if (!qword_1EF62E750)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10771B8, &type metadata for TransportationType.AutomotiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E750);
  }
  return result;
}

unint64_t sub_1C07CBC94()
{
  unint64_t result;

  result = qword_1EF62E758;
  if (!qword_1EF62E758)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1077168, &type metadata for TransportationType.OnFootCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E758);
  }
  return result;
}

unint64_t sub_1C07CBCD0()
{
  unint64_t result;

  result = qword_1EF62E760;
  if (!qword_1EF62E760)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1077118, &type metadata for TransportationType.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E760);
  }
  return result;
}

unint64_t sub_1C07CBD0C()
{
  unint64_t result;

  result = qword_1EF62E7E0;
  if (!qword_1EF62E7E0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10770C8, &type metadata for WorkoutType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E7E0);
  }
  return result;
}

unint64_t sub_1C07CBD48()
{
  unint64_t result;

  result = qword_1EF62E7E8;
  if (!qword_1EF62E7E8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1077078, &type metadata for WorkoutType.HikingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E7E8);
  }
  return result;
}

unint64_t sub_1C07CBD84()
{
  unint64_t result;

  result = qword_1EF62E7F0;
  if (!qword_1EF62E7F0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1077028, &type metadata for WorkoutType.CyclingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E7F0);
  }
  return result;
}

unint64_t sub_1C07CBDC0()
{
  unint64_t result;

  result = qword_1EF62E7F8;
  if (!qword_1EF62E7F8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1076FD8, &type metadata for WorkoutType.RunningCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E7F8);
  }
  return result;
}

unint64_t sub_1C07CBDFC()
{
  unint64_t result;

  result = qword_1EF62E800;
  if (!qword_1EF62E800)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1076F88, &type metadata for WorkoutType.WalkingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E800);
  }
  return result;
}

unint64_t sub_1C07CBE38()
{
  unint64_t result;

  result = qword_1EF62E808;
  if (!qword_1EF62E808)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1076F38, &type metadata for WorkoutType.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E808);
  }
  return result;
}

uint64_t sub_1C07CBE74(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C07ACF80(&qword_1ED762590);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1C07CBEB4()
{
  unint64_t result;

  result = qword_1EF62E958;
  if (!qword_1EF62E958)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1076EE8, &type metadata for ActivityType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E958);
  }
  return result;
}

unint64_t sub_1C07CBEF0()
{
  unint64_t result;

  result = qword_1EF62E960;
  if (!qword_1EF62E960)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1076E98, &type metadata for ActivityType.LocationVisitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E960);
  }
  return result;
}

unint64_t sub_1C07CBF2C()
{
  unint64_t result;

  result = qword_1EF62E968;
  if (!qword_1EF62E968)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1076E48, &type metadata for ActivityType.DiningOutCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E968);
  }
  return result;
}

unint64_t sub_1C07CBF68()
{
  unint64_t result;

  result = qword_1EF62E970;
  if (!qword_1EF62E970)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1076DF8, &type metadata for ActivityType.AttendingEventCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E970);
  }
  return result;
}

unint64_t sub_1C07CBFA4()
{
  unint64_t result;

  result = qword_1EF62E978;
  if (!qword_1EF62E978)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1076DA8, &type metadata for ActivityType.CommutingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E978);
  }
  return result;
}

unint64_t sub_1C07CBFE0()
{
  unint64_t result;

  result = qword_1EF62E980;
  if (!qword_1EF62E980)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1076D58, &type metadata for ActivityType.TripCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E980);
  }
  return result;
}

unint64_t sub_1C07CC01C()
{
  unint64_t result;

  result = qword_1EF62E988;
  if (!qword_1EF62E988)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1076D08, &type metadata for ActivityType.FlightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E988);
  }
  return result;
}

unint64_t sub_1C07CC058()
{
  unint64_t result;

  result = qword_1EF62E990;
  if (!qword_1EF62E990)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1076CB8, &type metadata for ActivityType.StationaryAutomotiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E990);
  }
  return result;
}

unint64_t sub_1C07CC094()
{
  unint64_t result;

  result = qword_1EF62E998;
  if (!qword_1EF62E998)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1076C68, &type metadata for ActivityType.AutomotiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E998);
  }
  return result;
}

unint64_t sub_1C07CC0D0()
{
  unint64_t result;

  result = qword_1EF62E9A0;
  if (!qword_1EF62E9A0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1076C18, &type metadata for ActivityType.StationaryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E9A0);
  }
  return result;
}

unint64_t sub_1C07CC10C()
{
  unint64_t result;

  result = qword_1EF62E9A8;
  if (!qword_1EF62E9A8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1076BC8, &type metadata for ActivityType.AirPlayMirroringCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E9A8);
  }
  return result;
}

unint64_t sub_1C07CC148()
{
  unint64_t result;

  result = qword_1EF62E9B0;
  if (!qword_1EF62E9B0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1076B78, &type metadata for ActivityType.ScreenSharingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E9B0);
  }
  return result;
}

unint64_t sub_1C07CC184()
{
  unint64_t result;

  result = qword_1EF62E9B8;
  if (!qword_1EF62E9B8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1076B28, &type metadata for ActivityType.ScreenRecordingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E9B8);
  }
  return result;
}

unint64_t sub_1C07CC1C0()
{
  unint64_t result;

  result = qword_1EF62E9C0;
  if (!qword_1EF62E9C0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1076AD8, &type metadata for ActivityType.ClassicDNDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E9C0);
  }
  return result;
}

unint64_t sub_1C07CC1FC()
{
  unint64_t result;

  result = qword_1EF62E9C8;
  if (!qword_1EF62E9C8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1076A88, &type metadata for ActivityType.StreamingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E9C8);
  }
  return result;
}

unint64_t sub_1C07CC238()
{
  unint64_t result;

  result = qword_1EF62E9D0;
  if (!qword_1EF62E9D0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1076A38, &type metadata for ActivityType.LearningCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E9D0);
  }
  return result;
}

unint64_t sub_1C07CC274()
{
  unint64_t result;

  result = qword_1EF62E9D8;
  if (!qword_1EF62E9D8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10769E8, &type metadata for ActivityType.BedtimeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E9D8);
  }
  return result;
}

unint64_t sub_1C07CC2B0()
{
  unint64_t result;

  result = qword_1EF62E9E0;
  if (!qword_1EF62E9E0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1076998, &type metadata for ActivityType.WakingUpCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E9E0);
  }
  return result;
}

unint64_t sub_1C07CC2EC()
{
  unint64_t result;

  result = qword_1EF62E9E8;
  if (!qword_1EF62E9E8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1076948, &type metadata for ActivityType.SocializingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E9E8);
  }
  return result;
}

unint64_t sub_1C07CC328()
{
  unint64_t result;

  result = qword_1EF62E9F0;
  if (!qword_1EF62E9F0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10768F8, &type metadata for ActivityType.GamingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E9F0);
  }
  return result;
}

unint64_t sub_1C07CC364()
{
  unint64_t result;

  result = qword_1EF62E9F8;
  if (!qword_1EF62E9F8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10768A8, &type metadata for ActivityType.VacationingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62E9F8);
  }
  return result;
}

unint64_t sub_1C07CC3A0()
{
  unint64_t result;

  result = qword_1EF62EA00;
  if (!qword_1EF62EA00)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1076858, &type metadata for ActivityType.ReadingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EA00);
  }
  return result;
}

unint64_t sub_1C07CC3DC()
{
  unint64_t result;

  result = qword_1EF62EA08;
  if (!qword_1EF62EA08)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1076808, &type metadata for ActivityType.TravelingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EA08);
  }
  return result;
}

unint64_t sub_1C07CC418()
{
  unint64_t result;

  result = qword_1EF62EA10;
  if (!qword_1EF62EA10)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10767B8, &type metadata for ActivityType.SleepingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EA10);
  }
  return result;
}

unint64_t sub_1C07CC454()
{
  unint64_t result;

  result = qword_1EF62EA18;
  if (!qword_1EF62EA18)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1076768, &type metadata for ActivityType.MindfulnessCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EA18);
  }
  return result;
}

unint64_t sub_1C07CC490()
{
  unint64_t result;

  result = qword_1EF62EA20;
  if (!qword_1EF62EA20)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1076718, &type metadata for ActivityType.ShoppingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EA20);
  }
  return result;
}

unint64_t sub_1C07CC4CC()
{
  unint64_t result;

  result = qword_1EF62EA28;
  if (!qword_1EF62EA28)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10766C8, &type metadata for ActivityType.WatchingTVCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EA28);
  }
  return result;
}

unint64_t sub_1C07CC508()
{
  unint64_t result;

  result = qword_1EF62EA30;
  if (!qword_1EF62EA30)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1076678, &type metadata for ActivityType.EatingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EA30);
  }
  return result;
}

unint64_t sub_1C07CC544()
{
  unint64_t result;

  result = qword_1EF62EA38;
  if (!qword_1EF62EA38)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1076628, &type metadata for ActivityType.MeetingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EA38);
  }
  return result;
}

unint64_t sub_1C07CC580()
{
  unint64_t result;

  result = qword_1EF62EA40;
  if (!qword_1EF62EA40)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10765D8, &type metadata for ActivityType.WorkingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EA40);
  }
  return result;
}

unint64_t sub_1C07CC5BC()
{
  unint64_t result;

  result = qword_1EF62EA48;
  if (!qword_1EF62EA48)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1076588, &type metadata for ActivityType.ObservedBehaviorActivityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EA48);
  }
  return result;
}

unint64_t sub_1C07CC5F8()
{
  unint64_t result;

  result = qword_1EF62EA50;
  if (!qword_1EF62EA50)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for ObservedBehaviorType, &type metadata for ObservedBehaviorType);
    atomic_store(result, (unint64_t *)&qword_1EF62EA50);
  }
  return result;
}

unint64_t sub_1C07CC634()
{
  unint64_t result;

  result = qword_1EF62EA58;
  if (!qword_1EF62EA58)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1076538, &type metadata for ActivityType.TransportationActivityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EA58);
  }
  return result;
}

unint64_t sub_1C07CC670()
{
  unint64_t result;

  result = qword_1EF62EA60;
  if (!qword_1EF62EA60)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for TransportationType, &type metadata for TransportationType);
    atomic_store(result, (unint64_t *)&qword_1EF62EA60);
  }
  return result;
}

unint64_t sub_1C07CC6AC()
{
  unint64_t result;

  result = qword_1EF62EA68;
  if (!qword_1EF62EA68)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10764E8, &type metadata for ActivityType.ExercisingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EA68);
  }
  return result;
}

unint64_t sub_1C07CC6E8()
{
  unint64_t result;

  result = qword_1EF62EA70;
  if (!qword_1EF62EA70)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for WorkoutType, &type metadata for WorkoutType);
    atomic_store(result, (unint64_t *)&qword_1EF62EA70);
  }
  return result;
}

unint64_t sub_1C07CC724()
{
  unint64_t result;

  result = qword_1EF62EA78;
  if (!qword_1EF62EA78)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1076498, &type metadata for ActivityType.CommunicatingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EA78);
  }
  return result;
}

unint64_t sub_1C07CC760()
{
  unint64_t result;

  result = qword_1EF62EA80;
  if (!qword_1EF62EA80)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for CommunicationMechanism, &type metadata for CommunicationMechanism);
    atomic_store(result, (unint64_t *)&qword_1EF62EA80);
  }
  return result;
}

unint64_t sub_1C07CC79C()
{
  unint64_t result;

  result = qword_1EF62EA88;
  if (!qword_1EF62EA88)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1076448, &type metadata for ActivityType.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EA88);
  }
  return result;
}

unint64_t sub_1C07CC7D8()
{
  unint64_t result;

  result = qword_1EF62EBA8;
  if (!qword_1EF62EBA8)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for ObservedBehaviorType, &type metadata for ObservedBehaviorType);
    atomic_store(result, (unint64_t *)&qword_1EF62EBA8);
  }
  return result;
}

unint64_t sub_1C07CC814()
{
  unint64_t result;

  result = qword_1EF62EBB0;
  if (!qword_1EF62EBB0)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for TransportationType, &type metadata for TransportationType);
    atomic_store(result, (unint64_t *)&qword_1EF62EBB0);
  }
  return result;
}

unint64_t sub_1C07CC850()
{
  unint64_t result;

  result = qword_1EF62EBB8;
  if (!qword_1EF62EBB8)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for WorkoutType, &type metadata for WorkoutType);
    atomic_store(result, (unint64_t *)&qword_1EF62EBB8);
  }
  return result;
}

unint64_t sub_1C07CC88C()
{
  unint64_t result;

  result = qword_1EF62EBC0;
  if (!qword_1EF62EBC0)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for CommunicationMechanism, &type metadata for CommunicationMechanism);
    atomic_store(result, (unint64_t *)&qword_1EF62EBC0);
  }
  return result;
}

unint64_t sub_1C07CC8CC()
{
  unint64_t result;

  result = qword_1EF62EBC8;
  if (!qword_1EF62EBC8)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for CommunicationMechanism, &type metadata for CommunicationMechanism);
    atomic_store(result, (unint64_t *)&qword_1EF62EBC8);
  }
  return result;
}

unint64_t sub_1C07CC90C()
{
  unint64_t result;

  result = qword_1EF62EBD0;
  if (!qword_1EF62EBD0)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for ObservedBehaviorType, &type metadata for ObservedBehaviorType);
    atomic_store(result, (unint64_t *)&qword_1EF62EBD0);
  }
  return result;
}

unint64_t sub_1C07CC94C()
{
  unint64_t result;

  result = qword_1EF62EBD8;
  if (!qword_1EF62EBD8)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for TransportationType, &type metadata for TransportationType);
    atomic_store(result, (unint64_t *)&qword_1EF62EBD8);
  }
  return result;
}

unint64_t sub_1C07CC98C()
{
  unint64_t result;

  result = qword_1EF62EBE0;
  if (!qword_1EF62EBE0)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for WorkoutType, &type metadata for WorkoutType);
    atomic_store(result, (unint64_t *)&qword_1EF62EBE0);
  }
  return result;
}

void type metadata accessor for CommunicationMechanism()
{
  sub_1C0779604();
}

void type metadata accessor for ObservedBehaviorType()
{
  sub_1C0779604();
}

void type metadata accessor for TransportationType()
{
  sub_1C0779604();
}

void type metadata accessor for WorkoutType()
{
  sub_1C0779604();
}

uint64_t getEnumTagSinglePayload for ActivityType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v5;
  unsigned int v6;

  if (!a2)
  {
    v5 = -1;
    return v5 + 1;
  }
  if (a2 >= 4)
  {
    if (a2 + 252 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 252) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 253;
    return v5 + 1;
  }
LABEL_17:
  v6 = *a1;
  if (v6 <= 0x9F)
    v5 = -1;
  else
    v5 = (v6 ^ 0xE0) >> 5;
  return v5 + 1;
}

uint64_t storeEnumTagSinglePayload for ActivityType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 252 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 252) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 3)
    return ((uint64_t (*)(void))((char *)&loc_1C07CCAE4 + 4 * byte_1C1073535[v4]))();
  *a1 = a2 - 4;
  return ((uint64_t (*)(void))((char *)sub_1C07CCB18 + 4 * byte_1C1073530[v4]))();
}

uint64_t sub_1C07CCB18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C07CCB20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C07CCB28);
  return result;
}

uint64_t sub_1C07CCB34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C07CCB3CLL);
  *(_BYTE *)result = -32 * a2;
  return result;
}

uint64_t sub_1C07CCB40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C07CCB48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C07CCB54(_BYTE *a1)
{
  int v1;

  v1 = (char)*a1;
  if (v1 >= 0)
    return *a1 >> 5;
  else
    return (v1 & 0x1Fu) + 4;
}

_BYTE *sub_1C07CCB70(_BYTE *result)
{
  *result &= 0x1Fu;
  return result;
}

_BYTE *sub_1C07CCB80(_BYTE *result, unsigned int a2)
{
  char v2;

  if (a2 < 4)
    v2 = *result & 0x1F | (32 * a2);
  else
    v2 = (a2 + 28) & 0x1F | 0x80;
  *result = v2;
  return result;
}

void type metadata accessor for ActivityType()
{
  sub_1C0779604();
}

__n128 sub_1C07CCBB4(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C07CCBC0(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1C07CCBE0(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for audit_token_t(uint64_t a1)
{
  sub_1C07D0520(a1, &qword_1ED752E38);
}

void type metadata accessor for BMUseCaseIdentifier(uint64_t a1)
{
  sub_1C07D0520(a1, &qword_1EF62ED10);
}

void type metadata accessor for GDMeetingParticipantStatus(uint64_t a1)
{
  sub_1C07D0520(a1, &qword_1EF62ED18);
}

void type metadata accessor for GDContactType(uint64_t a1)
{
  sub_1C07D0520(a1, &qword_1EF62ED20);
}

void type metadata accessor for GDInteractionDirection(uint64_t a1)
{
  sub_1C07D0520(a1, &qword_1EF62ED28);
}

void type metadata accessor for BMDevicePlatform(uint64_t a1)
{
  sub_1C07D0520(a1, (unint64_t *)&unk_1EF62ED30);
}

void type metadata accessor for GDInteractionMechanism(uint64_t a1)
{
  sub_1C07D0520(a1, &qword_1ED7447F8);
}

void type metadata accessor for RTPlaceInferenceUserSpecificPlaceType(uint64_t a1)
{
  sub_1C07D0520(a1, &qword_1EF62ED40);
}

void type metadata accessor for RTLocationOfInterestType(uint64_t a1)
{
  sub_1C07D0520(a1, (unint64_t *)&unk_1EF62ED48);
}

void type metadata accessor for PHPersonAgeType(uint64_t a1)
{
  sub_1C07D0520(a1, &qword_1ED7447E0);
}

uint64_t getEnumTagSinglePayload for ActivityType.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xDF)
  {
    if (a2 + 33 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 33) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 34;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x22;
  v5 = v6 - 34;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityType.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 33 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 33) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xDF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xDE)
    return ((uint64_t (*)(void))((char *)&loc_1C07CCDA8 + 4 * byte_1C107353F[v4]))();
  *a1 = a2 + 33;
  return ((uint64_t (*)(void))((char *)sub_1C07CCDDC + 4 * byte_1C107353A[v4]))();
}

uint64_t sub_1C07CCDDC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C07CCDE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C07CCDECLL);
  return result;
}

uint64_t sub_1C07CCDF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C07CCE00);
  *(_BYTE *)result = a2 + 33;
  return result;
}

uint64_t sub_1C07CCE04(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C07CCE0C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityType.CodingKeys()
{
  return &type metadata for ActivityType.CodingKeys;
}

ValueMetadata *type metadata accessor for ActivityType.UnknownCodingKeys()
{
  return &type metadata for ActivityType.UnknownCodingKeys;
}

uint64_t sub_1C07CCE44()
{
  return 0;
}

ValueMetadata *type metadata accessor for ActivityType.CommunicatingCodingKeys()
{
  return &type metadata for ActivityType.CommunicatingCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityType.ExercisingCodingKeys()
{
  return &type metadata for ActivityType.ExercisingCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityType.TransportationActivityCodingKeys()
{
  return &type metadata for ActivityType.TransportationActivityCodingKeys;
}

uint64_t getEnumTagSinglePayload for ConfigData.CodingKeys(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s24IntelligencePlatformCore12ActivityTypeO23CommunicatingCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1C07CCF0C + 4 * byte_1C1073544[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1C07CCF2C + 4 * byte_1C1073549[v4]))();
}

_BYTE *sub_1C07CCF0C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1C07CCF2C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C07CCF34(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C07CCF3C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C07CCF44(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C07CCF4C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ActivityType.ObservedBehaviorActivityCodingKeys()
{
  return &type metadata for ActivityType.ObservedBehaviorActivityCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityType.WorkingCodingKeys()
{
  return &type metadata for ActivityType.WorkingCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityType.MeetingCodingKeys()
{
  return &type metadata for ActivityType.MeetingCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityType.EatingCodingKeys()
{
  return &type metadata for ActivityType.EatingCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityType.WatchingTVCodingKeys()
{
  return &type metadata for ActivityType.WatchingTVCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityType.ShoppingCodingKeys()
{
  return &type metadata for ActivityType.ShoppingCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityType.MindfulnessCodingKeys()
{
  return &type metadata for ActivityType.MindfulnessCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityType.SleepingCodingKeys()
{
  return &type metadata for ActivityType.SleepingCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityType.TravelingCodingKeys()
{
  return &type metadata for ActivityType.TravelingCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityType.ReadingCodingKeys()
{
  return &type metadata for ActivityType.ReadingCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityType.VacationingCodingKeys()
{
  return &type metadata for ActivityType.VacationingCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityType.GamingCodingKeys()
{
  return &type metadata for ActivityType.GamingCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityType.SocializingCodingKeys()
{
  return &type metadata for ActivityType.SocializingCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityType.WakingUpCodingKeys()
{
  return &type metadata for ActivityType.WakingUpCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityType.BedtimeCodingKeys()
{
  return &type metadata for ActivityType.BedtimeCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityType.LearningCodingKeys()
{
  return &type metadata for ActivityType.LearningCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityType.StreamingCodingKeys()
{
  return &type metadata for ActivityType.StreamingCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityType.ClassicDNDCodingKeys()
{
  return &type metadata for ActivityType.ClassicDNDCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityType.ScreenRecordingCodingKeys()
{
  return &type metadata for ActivityType.ScreenRecordingCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityType.ScreenSharingCodingKeys()
{
  return &type metadata for ActivityType.ScreenSharingCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityType.AirPlayMirroringCodingKeys()
{
  return &type metadata for ActivityType.AirPlayMirroringCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityType.StationaryCodingKeys()
{
  return &type metadata for ActivityType.StationaryCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityType.AutomotiveCodingKeys()
{
  return &type metadata for ActivityType.AutomotiveCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityType.StationaryAutomotiveCodingKeys()
{
  return &type metadata for ActivityType.StationaryAutomotiveCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityType.FlightCodingKeys()
{
  return &type metadata for ActivityType.FlightCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityType.TripCodingKeys()
{
  return &type metadata for ActivityType.TripCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityType.CommutingCodingKeys()
{
  return &type metadata for ActivityType.CommutingCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityType.AttendingEventCodingKeys()
{
  return &type metadata for ActivityType.AttendingEventCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityType.DiningOutCodingKeys()
{
  return &type metadata for ActivityType.DiningOutCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityType.LocationVisitCodingKeys()
{
  return &type metadata for ActivityType.LocationVisitCodingKeys;
}

_BYTE *sub_1C07CD138(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutType.CodingKeys()
{
  return &type metadata for WorkoutType.CodingKeys;
}

ValueMetadata *type metadata accessor for WorkoutType.UnknownCodingKeys()
{
  return &type metadata for WorkoutType.UnknownCodingKeys;
}

ValueMetadata *type metadata accessor for WorkoutType.WalkingCodingKeys()
{
  return &type metadata for WorkoutType.WalkingCodingKeys;
}

ValueMetadata *type metadata accessor for WorkoutType.RunningCodingKeys()
{
  return &type metadata for WorkoutType.RunningCodingKeys;
}

ValueMetadata *type metadata accessor for WorkoutType.CyclingCodingKeys()
{
  return &type metadata for WorkoutType.CyclingCodingKeys;
}

ValueMetadata *type metadata accessor for WorkoutType.HikingCodingKeys()
{
  return &type metadata for WorkoutType.HikingCodingKeys;
}

uint64_t _s24IntelligencePlatformCore18TransportationTypeOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return sub_1C078BFF0(-1);
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return sub_1C078BFF0((*a1 | (v4 << 8)) - 8);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return sub_1C078BFF0((*a1 | (v4 << 8)) - 8);
    }
    v4 = a1[1];
    if (a1[1])
      return sub_1C078BFF0((*a1 | (v4 << 8)) - 8);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return sub_1C078BFF0(v8);
}

uint64_t _s24IntelligencePlatformCore18TransportationTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1C07CD270 + 4 * byte_1C1073553[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1C07CD2A4 + 4 * byte_1C107354E[v4]))();
}

uint64_t sub_1C07CD2A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C07CD2B0);
  return result;
}

_BYTE *sub_1C07CD2B8(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C07CD2C0);
  return sub_1C078BFE8((_BYTE *)a1, a2 + 7);
}

ValueMetadata *type metadata accessor for TransportationType.CodingKeys()
{
  return &type metadata for TransportationType.CodingKeys;
}

ValueMetadata *type metadata accessor for TransportationType.UnknownCodingKeys()
{
  return &type metadata for TransportationType.UnknownCodingKeys;
}

ValueMetadata *type metadata accessor for TransportationType.OnFootCodingKeys()
{
  return &type metadata for TransportationType.OnFootCodingKeys;
}

ValueMetadata *type metadata accessor for TransportationType.AutomotiveCodingKeys()
{
  return &type metadata for TransportationType.AutomotiveCodingKeys;
}

ValueMetadata *type metadata accessor for TransportationType.PlaneCodingKeys()
{
  return &type metadata for TransportationType.PlaneCodingKeys;
}

ValueMetadata *type metadata accessor for TransportationType.BicycleCodingKeys()
{
  return &type metadata for TransportationType.BicycleCodingKeys;
}

ValueMetadata *type metadata accessor for TransportationType.ShipCodingKeys()
{
  return &type metadata for TransportationType.ShipCodingKeys;
}

ValueMetadata *type metadata accessor for TransportationType.BusCodingKeys()
{
  return &type metadata for TransportationType.BusCodingKeys;
}

ValueMetadata *type metadata accessor for TransportationType.TrainCodingKeys()
{
  return &type metadata for TransportationType.TrainCodingKeys;
}

uint64_t _s24IntelligencePlatformCore20ObservedBehaviorTypeOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return sub_1C078BFF0(-1);
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return sub_1C078BFF0((*a1 | (v4 << 8)) - 5);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return sub_1C078BFF0((*a1 | (v4 << 8)) - 5);
    }
    v4 = a1[1];
    if (a1[1])
      return sub_1C078BFF0((*a1 | (v4 << 8)) - 5);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return sub_1C078BFF0(v8);
}

uint64_t _s24IntelligencePlatformCore20ObservedBehaviorTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1C07CD430 + 4 * byte_1C107355D[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1C07CD464 + 4 * byte_1C1073558[v4]))();
}

uint64_t sub_1C07CD468(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C07CD470);
  return result;
}

_BYTE *sub_1C07CD478(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C07CD480);
  return sub_1C078BFE8((_BYTE *)a1, a2 + 4);
}

ValueMetadata *type metadata accessor for ObservedBehaviorType.CodingKeys()
{
  return &type metadata for ObservedBehaviorType.CodingKeys;
}

ValueMetadata *type metadata accessor for ObservedBehaviorType.UnknownCodingKeys()
{
  return &type metadata for ObservedBehaviorType.UnknownCodingKeys;
}

ValueMetadata *type metadata accessor for ObservedBehaviorType.SharpAccelerationCodingKeys()
{
  return &type metadata for ObservedBehaviorType.SharpAccelerationCodingKeys;
}

ValueMetadata *type metadata accessor for ObservedBehaviorType.SharpDecelerationCodingKeys()
{
  return &type metadata for ObservedBehaviorType.SharpDecelerationCodingKeys;
}

ValueMetadata *type metadata accessor for ObservedBehaviorType.HighSpeedCodingKeys()
{
  return &type metadata for ObservedBehaviorType.HighSpeedCodingKeys;
}

ValueMetadata *type metadata accessor for ObservedBehaviorType.LurchCodingKeys()
{
  return &type metadata for ObservedBehaviorType.LurchCodingKeys;
}

uint64_t _s24IntelligencePlatformCore22CommunicationMechanismOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return sub_1C078BFF0(-1);
  if (a2 < 0xEA)
    goto LABEL_17;
  if (a2 + 22 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 22) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return sub_1C078BFF0((*a1 | (v4 << 8)) - 23);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return sub_1C078BFF0((*a1 | (v4 << 8)) - 23);
    }
    v4 = a1[1];
    if (a1[1])
      return sub_1C078BFF0((*a1 | (v4 << 8)) - 23);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x17;
  v8 = v6 - 23;
  if (!v7)
    v8 = -1;
  return sub_1C078BFF0(v8);
}

uint64_t _s24IntelligencePlatformCore22CommunicationMechanismOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 22 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 22) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE9)
    return ((uint64_t (*)(void))((char *)&loc_1C07CD5C0 + 4 * byte_1C1073567[v4]))();
  *a1 = a2 + 22;
  return ((uint64_t (*)(void))((char *)sub_1C07CD5F4 + 4 * byte_1C1073562[v4]))();
}

uint64_t sub_1C07CD5F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C07CD600);
  return result;
}

_BYTE *sub_1C07CD608(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C07CD610);
  return sub_1C078BFE8((_BYTE *)a1, a2 + 22);
}

ValueMetadata *type metadata accessor for CommunicationMechanism.CodingKeys()
{
  return &type metadata for CommunicationMechanism.CodingKeys;
}

ValueMetadata *type metadata accessor for CommunicationMechanism.AudioCallCodingKeys()
{
  return &type metadata for CommunicationMechanism.AudioCallCodingKeys;
}

ValueMetadata *type metadata accessor for CommunicationMechanism.EmailCodingKeys()
{
  return &type metadata for CommunicationMechanism.EmailCodingKeys;
}

ValueMetadata *type metadata accessor for CommunicationMechanism.SmsCodingKeys()
{
  return &type metadata for CommunicationMechanism.SmsCodingKeys;
}

ValueMetadata *type metadata accessor for CommunicationMechanism.MmsCodingKeys()
{
  return &type metadata for CommunicationMechanism.MmsCodingKeys;
}

ValueMetadata *type metadata accessor for CommunicationMechanism.InstantMessageCodingKeys()
{
  return &type metadata for CommunicationMechanism.InstantMessageCodingKeys;
}

ValueMetadata *type metadata accessor for CommunicationMechanism.ScheduledMeetingCodingKeys()
{
  return &type metadata for CommunicationMechanism.ScheduledMeetingCodingKeys;
}

ValueMetadata *type metadata accessor for CommunicationMechanism.AirDropCodingKeys()
{
  return &type metadata for CommunicationMechanism.AirDropCodingKeys;
}

ValueMetadata *type metadata accessor for CommunicationMechanism.UnknownCodingKeys()
{
  return &type metadata for CommunicationMechanism.UnknownCodingKeys;
}

ValueMetadata *type metadata accessor for CommunicationMechanism.CustomCodingKeys()
{
  return &type metadata for CommunicationMechanism.CustomCodingKeys;
}

ValueMetadata *type metadata accessor for CommunicationMechanism.VoipCodingKeys()
{
  return &type metadata for CommunicationMechanism.VoipCodingKeys;
}

ValueMetadata *type metadata accessor for CommunicationMechanism.VoicemailCodingKeys()
{
  return &type metadata for CommunicationMechanism.VoicemailCodingKeys;
}

ValueMetadata *type metadata accessor for CommunicationMechanism.FaceTimeCodingKeys()
{
  return &type metadata for CommunicationMechanism.FaceTimeCodingKeys;
}

ValueMetadata *type metadata accessor for CommunicationMechanism.FaceTimeAudioCodingKeys()
{
  return &type metadata for CommunicationMechanism.FaceTimeAudioCodingKeys;
}

ValueMetadata *type metadata accessor for CommunicationMechanism.VideoCallCodingKeys()
{
  return &type metadata for CommunicationMechanism.VideoCallCodingKeys;
}

ValueMetadata *type metadata accessor for CommunicationMechanism.ShareSheetCodingKeys()
{
  return &type metadata for CommunicationMechanism.ShareSheetCodingKeys;
}

ValueMetadata *type metadata accessor for CommunicationMechanism.ProximityCodingKeys()
{
  return &type metadata for CommunicationMechanism.ProximityCodingKeys;
}

ValueMetadata *type metadata accessor for CommunicationMechanism.PhotoTagCodingKeys()
{
  return &type metadata for CommunicationMechanism.PhotoTagCodingKeys;
}

ValueMetadata *type metadata accessor for CommunicationMechanism.PhoneCodingKeys()
{
  return &type metadata for CommunicationMechanism.PhoneCodingKeys;
}

ValueMetadata *type metadata accessor for CommunicationMechanism.FaceTimeVideoCodingKeys()
{
  return &type metadata for CommunicationMechanism.FaceTimeVideoCodingKeys;
}

ValueMetadata *type metadata accessor for CommunicationMechanism.HighlightCodingKeys()
{
  return &type metadata for CommunicationMechanism.HighlightCodingKeys;
}

ValueMetadata *type metadata accessor for CommunicationMechanism.SharePlayCodingKeys()
{
  return &type metadata for CommunicationMechanism.SharePlayCodingKeys;
}

ValueMetadata *type metadata accessor for CommunicationMechanism.ShareSheetSuggestionEngagedCodingKeys()
{
  return &type metadata for CommunicationMechanism.ShareSheetSuggestionEngagedCodingKeys;
}

ValueMetadata *type metadata accessor for CommunicationMechanism.CountCodingKeys()
{
  return &type metadata for CommunicationMechanism.CountCodingKeys;
}

unint64_t sub_1C07CD7A4()
{
  unint64_t result;

  result = qword_1EF62ED58;
  if (!qword_1EF62ED58)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074B78, &type metadata for CommunicationMechanism.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62ED58);
  }
  return result;
}

unint64_t sub_1C07CD7E4()
{
  unint64_t result;

  result = qword_1EF62ED60;
  if (!qword_1EF62ED60)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074DC0, &type metadata for ObservedBehaviorType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62ED60);
  }
  return result;
}

unint64_t sub_1C07CD824()
{
  unint64_t result;

  result = qword_1EF62ED68;
  if (!qword_1EF62ED68)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10750F8, &type metadata for TransportationType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62ED68);
  }
  return result;
}

unint64_t sub_1C07CD864()
{
  unint64_t result;

  result = qword_1EF62ED70;
  if (!qword_1EF62ED70)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075340, &type metadata for WorkoutType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62ED70);
  }
  return result;
}

unint64_t sub_1C07CD8A4()
{
  unint64_t result;

  result = qword_1EF62ED78;
  if (!qword_1EF62ED78)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075D08, &type metadata for ActivityType.ObservedBehaviorActivityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62ED78);
  }
  return result;
}

unint64_t sub_1C07CD8E4()
{
  unint64_t result;

  result = qword_1EF62ED80;
  if (!qword_1EF62ED80)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075DC0, &type metadata for ActivityType.TransportationActivityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62ED80);
  }
  return result;
}

unint64_t sub_1C07CD924()
{
  unint64_t result;

  result = qword_1EF62ED88;
  if (!qword_1EF62ED88)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075E78, &type metadata for ActivityType.ExercisingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62ED88);
  }
  return result;
}

unint64_t sub_1C07CD964()
{
  unint64_t result;

  result = qword_1EF62ED90;
  if (!qword_1EF62ED90)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075F30, &type metadata for ActivityType.CommunicatingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62ED90);
  }
  return result;
}

unint64_t sub_1C07CD9A4()
{
  unint64_t result;

  result = qword_1EF62ED98;
  if (!qword_1EF62ED98)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1076038, &type metadata for ActivityType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62ED98);
  }
  return result;
}

void sub_1C07CD9E0()
{
  sub_1C0794BAC((unint64_t *)&unk_1ED7447D0, (uint64_t (*)(uint64_t))type metadata accessor for PHPersonAgeType, (uint64_t)&unk_1C10760A0);
}

void sub_1C07CDA0C()
{
  sub_1C0794BAC(&qword_1EF62EDA8, (uint64_t (*)(uint64_t))type metadata accessor for BMDevicePlatform, (uint64_t)&unk_1C10761D8);
}

void sub_1C07CDA38()
{
  sub_1C0794BAC(&qword_1EF62EDB0, (uint64_t (*)(uint64_t))type metadata accessor for BMUseCaseIdentifier, (uint64_t)&unk_1C1076308);
}

void sub_1C07CDA64()
{
  sub_1C0794BAC(&qword_1EF62EDB8, (uint64_t (*)(uint64_t))type metadata accessor for BMUseCaseIdentifier, (uint64_t)&unk_1C10762E0);
}

void sub_1C07CDA90()
{
  sub_1C0794BAC(&qword_1EF62EDC0, (uint64_t (*)(uint64_t))type metadata accessor for BMUseCaseIdentifier, (uint64_t)&unk_1C1076370);
}

unint64_t sub_1C07CDAC0()
{
  unint64_t result;

  result = qword_1EF62EDC8;
  if (!qword_1EF62EDC8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075F58, &type metadata for ActivityType.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EDC8);
  }
  return result;
}

unint64_t sub_1C07CDB00()
{
  unint64_t result;

  result = qword_1EF62EDD0;
  if (!qword_1EF62EDD0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075F80, &type metadata for ActivityType.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EDD0);
  }
  return result;
}

unint64_t sub_1C07CDB40()
{
  unint64_t result;

  result = qword_1EF62EDD8;
  if (!qword_1EF62EDD8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075EA0, &type metadata for ActivityType.CommunicatingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EDD8);
  }
  return result;
}

unint64_t sub_1C07CDB80()
{
  unint64_t result;

  result = qword_1EF62EDE0;
  if (!qword_1EF62EDE0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075EC8, &type metadata for ActivityType.CommunicatingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EDE0);
  }
  return result;
}

unint64_t sub_1C07CDBC0()
{
  unint64_t result;

  result = qword_1EF62EDE8;
  if (!qword_1EF62EDE8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075DE8, &type metadata for ActivityType.ExercisingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EDE8);
  }
  return result;
}

unint64_t sub_1C07CDC00()
{
  unint64_t result;

  result = qword_1EF62EDF0;
  if (!qword_1EF62EDF0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075E10, &type metadata for ActivityType.ExercisingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EDF0);
  }
  return result;
}

unint64_t sub_1C07CDC40()
{
  unint64_t result;

  result = qword_1EF62EDF8;
  if (!qword_1EF62EDF8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075D30, &type metadata for ActivityType.TransportationActivityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EDF8);
  }
  return result;
}

unint64_t sub_1C07CDC80()
{
  unint64_t result;

  result = qword_1EF62EE00;
  if (!qword_1EF62EE00)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075D58, &type metadata for ActivityType.TransportationActivityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EE00);
  }
  return result;
}

unint64_t sub_1C07CDCC0()
{
  unint64_t result;

  result = qword_1EF62EE08;
  if (!qword_1EF62EE08)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075C78, &type metadata for ActivityType.ObservedBehaviorActivityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EE08);
  }
  return result;
}

unint64_t sub_1C07CDD00()
{
  unint64_t result;

  result = qword_1EF62EE10;
  if (!qword_1EF62EE10)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075CA0, &type metadata for ActivityType.ObservedBehaviorActivityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EE10);
  }
  return result;
}

unint64_t sub_1C07CDD40()
{
  unint64_t result;

  result = qword_1EF62EE18;
  if (!qword_1EF62EE18)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075C28, &type metadata for ActivityType.WorkingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EE18);
  }
  return result;
}

unint64_t sub_1C07CDD80()
{
  unint64_t result;

  result = qword_1EF62EE20;
  if (!qword_1EF62EE20)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075C50, &type metadata for ActivityType.WorkingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EE20);
  }
  return result;
}

unint64_t sub_1C07CDDC0()
{
  unint64_t result;

  result = qword_1EF62EE28;
  if (!qword_1EF62EE28)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075BD8, &type metadata for ActivityType.MeetingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EE28);
  }
  return result;
}

unint64_t sub_1C07CDE00()
{
  unint64_t result;

  result = qword_1EF62EE30;
  if (!qword_1EF62EE30)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075C00, &type metadata for ActivityType.MeetingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EE30);
  }
  return result;
}

unint64_t sub_1C07CDE40()
{
  unint64_t result;

  result = qword_1EF62EE38;
  if (!qword_1EF62EE38)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075B88, &type metadata for ActivityType.EatingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EE38);
  }
  return result;
}

unint64_t sub_1C07CDE80()
{
  unint64_t result;

  result = qword_1EF62EE40;
  if (!qword_1EF62EE40)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075BB0, &type metadata for ActivityType.EatingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EE40);
  }
  return result;
}

unint64_t sub_1C07CDEC0()
{
  unint64_t result;

  result = qword_1EF62EE48;
  if (!qword_1EF62EE48)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075B38, &type metadata for ActivityType.WatchingTVCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EE48);
  }
  return result;
}

unint64_t sub_1C07CDF00()
{
  unint64_t result;

  result = qword_1EF62EE50;
  if (!qword_1EF62EE50)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075B60, &type metadata for ActivityType.WatchingTVCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EE50);
  }
  return result;
}

unint64_t sub_1C07CDF40()
{
  unint64_t result;

  result = qword_1EF62EE58;
  if (!qword_1EF62EE58)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075AE8, &type metadata for ActivityType.ShoppingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EE58);
  }
  return result;
}

unint64_t sub_1C07CDF80()
{
  unint64_t result;

  result = qword_1EF62EE60;
  if (!qword_1EF62EE60)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075B10, &type metadata for ActivityType.ShoppingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EE60);
  }
  return result;
}

unint64_t sub_1C07CDFC0()
{
  unint64_t result;

  result = qword_1EF62EE68;
  if (!qword_1EF62EE68)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075A98, &type metadata for ActivityType.MindfulnessCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EE68);
  }
  return result;
}

unint64_t sub_1C07CE000()
{
  unint64_t result;

  result = qword_1EF62EE70;
  if (!qword_1EF62EE70)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075AC0, &type metadata for ActivityType.MindfulnessCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EE70);
  }
  return result;
}

unint64_t sub_1C07CE040()
{
  unint64_t result;

  result = qword_1EF62EE78;
  if (!qword_1EF62EE78)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075A48, &type metadata for ActivityType.SleepingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EE78);
  }
  return result;
}

unint64_t sub_1C07CE080()
{
  unint64_t result;

  result = qword_1EF62EE80;
  if (!qword_1EF62EE80)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075A70, &type metadata for ActivityType.SleepingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EE80);
  }
  return result;
}

unint64_t sub_1C07CE0C0()
{
  unint64_t result;

  result = qword_1EF62EE88;
  if (!qword_1EF62EE88)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10759F8, &type metadata for ActivityType.TravelingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EE88);
  }
  return result;
}

unint64_t sub_1C07CE100()
{
  unint64_t result;

  result = qword_1EF62EE90;
  if (!qword_1EF62EE90)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075A20, &type metadata for ActivityType.TravelingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EE90);
  }
  return result;
}

unint64_t sub_1C07CE140()
{
  unint64_t result;

  result = qword_1EF62EE98;
  if (!qword_1EF62EE98)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10759A8, &type metadata for ActivityType.ReadingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EE98);
  }
  return result;
}

unint64_t sub_1C07CE180()
{
  unint64_t result;

  result = qword_1EF62EEA0;
  if (!qword_1EF62EEA0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10759D0, &type metadata for ActivityType.ReadingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EEA0);
  }
  return result;
}

unint64_t sub_1C07CE1C0()
{
  unint64_t result;

  result = qword_1EF62EEA8;
  if (!qword_1EF62EEA8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075958, &type metadata for ActivityType.VacationingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EEA8);
  }
  return result;
}

unint64_t sub_1C07CE200()
{
  unint64_t result;

  result = qword_1EF62EEB0;
  if (!qword_1EF62EEB0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075980, &type metadata for ActivityType.VacationingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EEB0);
  }
  return result;
}

unint64_t sub_1C07CE240()
{
  unint64_t result;

  result = qword_1EF62EEB8;
  if (!qword_1EF62EEB8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075908, &type metadata for ActivityType.GamingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EEB8);
  }
  return result;
}

unint64_t sub_1C07CE280()
{
  unint64_t result;

  result = qword_1EF62EEC0;
  if (!qword_1EF62EEC0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075930, &type metadata for ActivityType.GamingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EEC0);
  }
  return result;
}

unint64_t sub_1C07CE2C0()
{
  unint64_t result;

  result = qword_1EF62EEC8;
  if (!qword_1EF62EEC8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10758B8, &type metadata for ActivityType.SocializingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EEC8);
  }
  return result;
}

unint64_t sub_1C07CE300()
{
  unint64_t result;

  result = qword_1EF62EED0;
  if (!qword_1EF62EED0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10758E0, &type metadata for ActivityType.SocializingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EED0);
  }
  return result;
}

unint64_t sub_1C07CE340()
{
  unint64_t result;

  result = qword_1EF62EED8;
  if (!qword_1EF62EED8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075868, &type metadata for ActivityType.WakingUpCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EED8);
  }
  return result;
}

unint64_t sub_1C07CE380()
{
  unint64_t result;

  result = qword_1EF62EEE0;
  if (!qword_1EF62EEE0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075890, &type metadata for ActivityType.WakingUpCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EEE0);
  }
  return result;
}

unint64_t sub_1C07CE3C0()
{
  unint64_t result;

  result = qword_1EF62EEE8;
  if (!qword_1EF62EEE8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075818, &type metadata for ActivityType.BedtimeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EEE8);
  }
  return result;
}

unint64_t sub_1C07CE400()
{
  unint64_t result;

  result = qword_1EF62EEF0;
  if (!qword_1EF62EEF0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075840, &type metadata for ActivityType.BedtimeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EEF0);
  }
  return result;
}

unint64_t sub_1C07CE440()
{
  unint64_t result;

  result = qword_1EF62EEF8;
  if (!qword_1EF62EEF8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10757C8, &type metadata for ActivityType.LearningCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EEF8);
  }
  return result;
}

unint64_t sub_1C07CE480()
{
  unint64_t result;

  result = qword_1EF62EF00;
  if (!qword_1EF62EF00)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10757F0, &type metadata for ActivityType.LearningCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EF00);
  }
  return result;
}

unint64_t sub_1C07CE4C0()
{
  unint64_t result;

  result = qword_1EF62EF08;
  if (!qword_1EF62EF08)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075778, &type metadata for ActivityType.StreamingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EF08);
  }
  return result;
}

unint64_t sub_1C07CE500()
{
  unint64_t result;

  result = qword_1EF62EF10;
  if (!qword_1EF62EF10)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10757A0, &type metadata for ActivityType.StreamingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EF10);
  }
  return result;
}

unint64_t sub_1C07CE540()
{
  unint64_t result;

  result = qword_1EF62EF18;
  if (!qword_1EF62EF18)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075728, &type metadata for ActivityType.ClassicDNDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EF18);
  }
  return result;
}

unint64_t sub_1C07CE580()
{
  unint64_t result;

  result = qword_1EF62EF20;
  if (!qword_1EF62EF20)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075750, &type metadata for ActivityType.ClassicDNDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EF20);
  }
  return result;
}

unint64_t sub_1C07CE5C0()
{
  unint64_t result;

  result = qword_1EF62EF28;
  if (!qword_1EF62EF28)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10756D8, &type metadata for ActivityType.ScreenRecordingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EF28);
  }
  return result;
}

unint64_t sub_1C07CE600()
{
  unint64_t result;

  result = qword_1EF62EF30;
  if (!qword_1EF62EF30)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075700, &type metadata for ActivityType.ScreenRecordingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EF30);
  }
  return result;
}

unint64_t sub_1C07CE640()
{
  unint64_t result;

  result = qword_1EF62EF38;
  if (!qword_1EF62EF38)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075688, &type metadata for ActivityType.ScreenSharingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EF38);
  }
  return result;
}

unint64_t sub_1C07CE680()
{
  unint64_t result;

  result = qword_1EF62EF40;
  if (!qword_1EF62EF40)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10756B0, &type metadata for ActivityType.ScreenSharingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EF40);
  }
  return result;
}

unint64_t sub_1C07CE6C0()
{
  unint64_t result;

  result = qword_1EF62EF48;
  if (!qword_1EF62EF48)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075638, &type metadata for ActivityType.AirPlayMirroringCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EF48);
  }
  return result;
}

unint64_t sub_1C07CE700()
{
  unint64_t result;

  result = qword_1EF62EF50;
  if (!qword_1EF62EF50)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075660, &type metadata for ActivityType.AirPlayMirroringCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EF50);
  }
  return result;
}

unint64_t sub_1C07CE740()
{
  unint64_t result;

  result = qword_1EF62EF58;
  if (!qword_1EF62EF58)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10755E8, &type metadata for ActivityType.StationaryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EF58);
  }
  return result;
}

unint64_t sub_1C07CE780()
{
  unint64_t result;

  result = qword_1EF62EF60;
  if (!qword_1EF62EF60)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075610, &type metadata for ActivityType.StationaryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EF60);
  }
  return result;
}

unint64_t sub_1C07CE7C0()
{
  unint64_t result;

  result = qword_1EF62EF68;
  if (!qword_1EF62EF68)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075598, &type metadata for ActivityType.AutomotiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EF68);
  }
  return result;
}

unint64_t sub_1C07CE800()
{
  unint64_t result;

  result = qword_1EF62EF70;
  if (!qword_1EF62EF70)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10755C0, &type metadata for ActivityType.AutomotiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EF70);
  }
  return result;
}

unint64_t sub_1C07CE840()
{
  unint64_t result;

  result = qword_1EF62EF78;
  if (!qword_1EF62EF78)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075548, &type metadata for ActivityType.StationaryAutomotiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EF78);
  }
  return result;
}

unint64_t sub_1C07CE880()
{
  unint64_t result;

  result = qword_1EF62EF80;
  if (!qword_1EF62EF80)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075570, &type metadata for ActivityType.StationaryAutomotiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EF80);
  }
  return result;
}

unint64_t sub_1C07CE8C0()
{
  unint64_t result;

  result = qword_1EF62EF88;
  if (!qword_1EF62EF88)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10754F8, &type metadata for ActivityType.FlightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EF88);
  }
  return result;
}

unint64_t sub_1C07CE900()
{
  unint64_t result;

  result = qword_1EF62EF90;
  if (!qword_1EF62EF90)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075520, &type metadata for ActivityType.FlightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EF90);
  }
  return result;
}

unint64_t sub_1C07CE940()
{
  unint64_t result;

  result = qword_1EF62EF98;
  if (!qword_1EF62EF98)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10754A8, &type metadata for ActivityType.TripCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EF98);
  }
  return result;
}

unint64_t sub_1C07CE980()
{
  unint64_t result;

  result = qword_1EF62EFA0;
  if (!qword_1EF62EFA0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10754D0, &type metadata for ActivityType.TripCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EFA0);
  }
  return result;
}

unint64_t sub_1C07CE9C0()
{
  unint64_t result;

  result = qword_1EF62EFA8;
  if (!qword_1EF62EFA8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075458, &type metadata for ActivityType.CommutingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EFA8);
  }
  return result;
}

unint64_t sub_1C07CEA00()
{
  unint64_t result;

  result = qword_1EF62EFB0;
  if (!qword_1EF62EFB0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075480, &type metadata for ActivityType.CommutingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EFB0);
  }
  return result;
}

unint64_t sub_1C07CEA40()
{
  unint64_t result;

  result = qword_1EF62EFB8;
  if (!qword_1EF62EFB8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075408, &type metadata for ActivityType.AttendingEventCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EFB8);
  }
  return result;
}

unint64_t sub_1C07CEA80()
{
  unint64_t result;

  result = qword_1EF62EFC0;
  if (!qword_1EF62EFC0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075430, &type metadata for ActivityType.AttendingEventCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EFC0);
  }
  return result;
}

unint64_t sub_1C07CEAC0()
{
  unint64_t result;

  result = qword_1EF62EFC8;
  if (!qword_1EF62EFC8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10753B8, &type metadata for ActivityType.DiningOutCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EFC8);
  }
  return result;
}

unint64_t sub_1C07CEB00()
{
  unint64_t result;

  result = qword_1EF62EFD0;
  if (!qword_1EF62EFD0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10753E0, &type metadata for ActivityType.DiningOutCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EFD0);
  }
  return result;
}

unint64_t sub_1C07CEB40()
{
  unint64_t result;

  result = qword_1EF62EFD8;
  if (!qword_1EF62EFD8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075368, &type metadata for ActivityType.LocationVisitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EFD8);
  }
  return result;
}

unint64_t sub_1C07CEB80()
{
  unint64_t result;

  result = qword_1EF62EFE0;
  if (!qword_1EF62EFE0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075390, &type metadata for ActivityType.LocationVisitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EFE0);
  }
  return result;
}

unint64_t sub_1C07CEBC0()
{
  unint64_t result;

  result = qword_1EF62EFE8;
  if (!qword_1EF62EFE8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075FA8, &type metadata for ActivityType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EFE8);
  }
  return result;
}

unint64_t sub_1C07CEC00()
{
  unint64_t result;

  result = qword_1EF62EFF0;
  if (!qword_1EF62EFF0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075FD0, &type metadata for ActivityType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EFF0);
  }
  return result;
}

unint64_t sub_1C07CEC40()
{
  unint64_t result;

  result = qword_1EF62EFF8;
  if (!qword_1EF62EFF8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075260, &type metadata for WorkoutType.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62EFF8);
  }
  return result;
}

unint64_t sub_1C07CEC80()
{
  unint64_t result;

  result = qword_1EF62F000;
  if (!qword_1EF62F000)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075288, &type metadata for WorkoutType.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F000);
  }
  return result;
}

unint64_t sub_1C07CECC0()
{
  unint64_t result;

  result = qword_1EF62F008;
  if (!qword_1EF62F008)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075210, &type metadata for WorkoutType.WalkingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F008);
  }
  return result;
}

unint64_t sub_1C07CED00()
{
  unint64_t result;

  result = qword_1EF62F010;
  if (!qword_1EF62F010)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075238, &type metadata for WorkoutType.WalkingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F010);
  }
  return result;
}

unint64_t sub_1C07CED40()
{
  unint64_t result;

  result = qword_1EF62F018;
  if (!qword_1EF62F018)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10751C0, &type metadata for WorkoutType.RunningCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F018);
  }
  return result;
}

unint64_t sub_1C07CED80()
{
  unint64_t result;

  result = qword_1EF62F020;
  if (!qword_1EF62F020)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10751E8, &type metadata for WorkoutType.RunningCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F020);
  }
  return result;
}

unint64_t sub_1C07CEDC0()
{
  unint64_t result;

  result = qword_1EF62F028;
  if (!qword_1EF62F028)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075170, &type metadata for WorkoutType.CyclingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F028);
  }
  return result;
}

unint64_t sub_1C07CEE00()
{
  unint64_t result;

  result = qword_1EF62F030;
  if (!qword_1EF62F030)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075198, &type metadata for WorkoutType.CyclingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F030);
  }
  return result;
}

unint64_t sub_1C07CEE40()
{
  unint64_t result;

  result = qword_1EF62F038;
  if (!qword_1EF62F038)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075120, &type metadata for WorkoutType.HikingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F038);
  }
  return result;
}

unint64_t sub_1C07CEE80()
{
  unint64_t result;

  result = qword_1EF62F040;
  if (!qword_1EF62F040)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075148, &type metadata for WorkoutType.HikingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F040);
  }
  return result;
}

unint64_t sub_1C07CEEC0()
{
  unint64_t result;

  result = qword_1EF62F048;
  if (!qword_1EF62F048)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10752B0, &type metadata for WorkoutType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F048);
  }
  return result;
}

unint64_t sub_1C07CEF00()
{
  unint64_t result;

  result = qword_1EF62F050;
  if (!qword_1EF62F050)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10752D8, &type metadata for WorkoutType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F050);
  }
  return result;
}

unint64_t sub_1C07CEF40()
{
  unint64_t result;

  result = qword_1EF62F058;
  if (!qword_1EF62F058)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075018, &type metadata for TransportationType.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F058);
  }
  return result;
}

unint64_t sub_1C07CEF80()
{
  unint64_t result;

  result = qword_1EF62F060;
  if (!qword_1EF62F060)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075040, &type metadata for TransportationType.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F060);
  }
  return result;
}

unint64_t sub_1C07CEFC0()
{
  unint64_t result;

  result = qword_1EF62F068;
  if (!qword_1EF62F068)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074FC8, &type metadata for TransportationType.OnFootCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F068);
  }
  return result;
}

unint64_t sub_1C07CF000()
{
  unint64_t result;

  result = qword_1EF62F070;
  if (!qword_1EF62F070)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074FF0, &type metadata for TransportationType.OnFootCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F070);
  }
  return result;
}

unint64_t sub_1C07CF040()
{
  unint64_t result;

  result = qword_1EF62F078;
  if (!qword_1EF62F078)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074F78, &type metadata for TransportationType.AutomotiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F078);
  }
  return result;
}

unint64_t sub_1C07CF080()
{
  unint64_t result;

  result = qword_1EF62F080;
  if (!qword_1EF62F080)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074FA0, &type metadata for TransportationType.AutomotiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F080);
  }
  return result;
}

unint64_t sub_1C07CF0C0()
{
  unint64_t result;

  result = qword_1EF62F088;
  if (!qword_1EF62F088)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074F28, &type metadata for TransportationType.PlaneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F088);
  }
  return result;
}

unint64_t sub_1C07CF100()
{
  unint64_t result;

  result = qword_1EF62F090;
  if (!qword_1EF62F090)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074F50, &type metadata for TransportationType.PlaneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F090);
  }
  return result;
}

unint64_t sub_1C07CF140()
{
  unint64_t result;

  result = qword_1EF62F098;
  if (!qword_1EF62F098)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074ED8, &type metadata for TransportationType.BicycleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F098);
  }
  return result;
}

unint64_t sub_1C07CF180()
{
  unint64_t result;

  result = qword_1EF62F0A0;
  if (!qword_1EF62F0A0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074F00, &type metadata for TransportationType.BicycleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F0A0);
  }
  return result;
}

unint64_t sub_1C07CF1C0()
{
  unint64_t result;

  result = qword_1EF62F0A8;
  if (!qword_1EF62F0A8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074E88, &type metadata for TransportationType.ShipCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F0A8);
  }
  return result;
}

unint64_t sub_1C07CF200()
{
  unint64_t result;

  result = qword_1EF62F0B0;
  if (!qword_1EF62F0B0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074EB0, &type metadata for TransportationType.ShipCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F0B0);
  }
  return result;
}

unint64_t sub_1C07CF240()
{
  unint64_t result;

  result = qword_1EF62F0B8;
  if (!qword_1EF62F0B8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074E38, &type metadata for TransportationType.BusCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F0B8);
  }
  return result;
}

unint64_t sub_1C07CF280()
{
  unint64_t result;

  result = qword_1EF62F0C0;
  if (!qword_1EF62F0C0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074E60, &type metadata for TransportationType.BusCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F0C0);
  }
  return result;
}

unint64_t sub_1C07CF2C0()
{
  unint64_t result;

  result = qword_1EF62F0C8;
  if (!qword_1EF62F0C8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074DE8, &type metadata for TransportationType.TrainCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F0C8);
  }
  return result;
}

unint64_t sub_1C07CF300()
{
  unint64_t result;

  result = qword_1EF62F0D0;
  if (!qword_1EF62F0D0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074E10, &type metadata for TransportationType.TrainCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F0D0);
  }
  return result;
}

unint64_t sub_1C07CF340()
{
  unint64_t result;

  result = qword_1EF62F0D8;
  if (!qword_1EF62F0D8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075068, &type metadata for TransportationType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F0D8);
  }
  return result;
}

unint64_t sub_1C07CF380()
{
  unint64_t result;

  result = qword_1EF62F0E0;
  if (!qword_1EF62F0E0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1075090, &type metadata for TransportationType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F0E0);
  }
  return result;
}

unint64_t sub_1C07CF3C0()
{
  unint64_t result;

  result = qword_1EF62F0E8;
  if (!qword_1EF62F0E8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074CE0, &type metadata for ObservedBehaviorType.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F0E8);
  }
  return result;
}

unint64_t sub_1C07CF400()
{
  unint64_t result;

  result = qword_1EF62F0F0;
  if (!qword_1EF62F0F0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074D08, &type metadata for ObservedBehaviorType.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F0F0);
  }
  return result;
}

unint64_t sub_1C07CF440()
{
  unint64_t result;

  result = qword_1EF62F0F8;
  if (!qword_1EF62F0F8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074C90, &type metadata for ObservedBehaviorType.SharpAccelerationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F0F8);
  }
  return result;
}

unint64_t sub_1C07CF480()
{
  unint64_t result;

  result = qword_1EF62F100;
  if (!qword_1EF62F100)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074CB8, &type metadata for ObservedBehaviorType.SharpAccelerationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F100);
  }
  return result;
}

unint64_t sub_1C07CF4C0()
{
  unint64_t result;

  result = qword_1EF62F108;
  if (!qword_1EF62F108)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074C40, &type metadata for ObservedBehaviorType.SharpDecelerationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F108);
  }
  return result;
}

unint64_t sub_1C07CF500()
{
  unint64_t result;

  result = qword_1EF62F110;
  if (!qword_1EF62F110)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074C68, &type metadata for ObservedBehaviorType.SharpDecelerationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F110);
  }
  return result;
}

unint64_t sub_1C07CF540()
{
  unint64_t result;

  result = qword_1EF62F118;
  if (!qword_1EF62F118)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074BF0, &type metadata for ObservedBehaviorType.HighSpeedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F118);
  }
  return result;
}

unint64_t sub_1C07CF580()
{
  unint64_t result;

  result = qword_1EF62F120;
  if (!qword_1EF62F120)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074C18, &type metadata for ObservedBehaviorType.HighSpeedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F120);
  }
  return result;
}

unint64_t sub_1C07CF5C0()
{
  unint64_t result;

  result = qword_1EF62F128;
  if (!qword_1EF62F128)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074BA0, &type metadata for ObservedBehaviorType.LurchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F128);
  }
  return result;
}

unint64_t sub_1C07CF600()
{
  unint64_t result;

  result = qword_1EF62F130;
  if (!qword_1EF62F130)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074BC8, &type metadata for ObservedBehaviorType.LurchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F130);
  }
  return result;
}

unint64_t sub_1C07CF640()
{
  unint64_t result;

  result = qword_1EF62F138;
  if (!qword_1EF62F138)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074D30, &type metadata for ObservedBehaviorType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F138);
  }
  return result;
}

unint64_t sub_1C07CF680()
{
  unint64_t result;

  result = qword_1EF62F140;
  if (!qword_1EF62F140)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074D58, &type metadata for ObservedBehaviorType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F140);
  }
  return result;
}

unint64_t sub_1C07CF6C0()
{
  unint64_t result;

  result = qword_1EF62F148;
  if (!qword_1EF62F148)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074A98, &type metadata for CommunicationMechanism.AudioCallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F148);
  }
  return result;
}

unint64_t sub_1C07CF700()
{
  unint64_t result;

  result = qword_1EF62F150;
  if (!qword_1EF62F150)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074AC0, &type metadata for CommunicationMechanism.AudioCallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F150);
  }
  return result;
}

unint64_t sub_1C07CF740()
{
  unint64_t result;

  result = qword_1EF62F158;
  if (!qword_1EF62F158)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074A48, &type metadata for CommunicationMechanism.EmailCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F158);
  }
  return result;
}

unint64_t sub_1C07CF780()
{
  unint64_t result;

  result = qword_1EF62F160;
  if (!qword_1EF62F160)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074A70, &type metadata for CommunicationMechanism.EmailCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F160);
  }
  return result;
}

unint64_t sub_1C07CF7C0()
{
  unint64_t result;

  result = qword_1EF62F168;
  if (!qword_1EF62F168)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10749F8, &type metadata for CommunicationMechanism.SmsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F168);
  }
  return result;
}

unint64_t sub_1C07CF800()
{
  unint64_t result;

  result = qword_1EF62F170;
  if (!qword_1EF62F170)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074A20, &type metadata for CommunicationMechanism.SmsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F170);
  }
  return result;
}

unint64_t sub_1C07CF840()
{
  unint64_t result;

  result = qword_1EF62F178;
  if (!qword_1EF62F178)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10749A8, &type metadata for CommunicationMechanism.MmsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F178);
  }
  return result;
}

unint64_t sub_1C07CF880()
{
  unint64_t result;

  result = qword_1EF62F180;
  if (!qword_1EF62F180)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10749D0, &type metadata for CommunicationMechanism.MmsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F180);
  }
  return result;
}

unint64_t sub_1C07CF8C0()
{
  unint64_t result;

  result = qword_1EF62F188;
  if (!qword_1EF62F188)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074958, &type metadata for CommunicationMechanism.InstantMessageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F188);
  }
  return result;
}

unint64_t sub_1C07CF900()
{
  unint64_t result;

  result = qword_1EF62F190;
  if (!qword_1EF62F190)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074980, &type metadata for CommunicationMechanism.InstantMessageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F190);
  }
  return result;
}

unint64_t sub_1C07CF940()
{
  unint64_t result;

  result = qword_1EF62F198;
  if (!qword_1EF62F198)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074908, &type metadata for CommunicationMechanism.ScheduledMeetingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F198);
  }
  return result;
}

unint64_t sub_1C07CF980()
{
  unint64_t result;

  result = qword_1EF62F1A0;
  if (!qword_1EF62F1A0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074930, &type metadata for CommunicationMechanism.ScheduledMeetingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F1A0);
  }
  return result;
}

unint64_t sub_1C07CF9C0()
{
  unint64_t result;

  result = qword_1EF62F1A8;
  if (!qword_1EF62F1A8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10748B8, &type metadata for CommunicationMechanism.AirDropCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F1A8);
  }
  return result;
}

unint64_t sub_1C07CFA00()
{
  unint64_t result;

  result = qword_1EF62F1B0;
  if (!qword_1EF62F1B0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10748E0, &type metadata for CommunicationMechanism.AirDropCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F1B0);
  }
  return result;
}

unint64_t sub_1C07CFA40()
{
  unint64_t result;

  result = qword_1EF62F1B8;
  if (!qword_1EF62F1B8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074868, &type metadata for CommunicationMechanism.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F1B8);
  }
  return result;
}

unint64_t sub_1C07CFA80()
{
  unint64_t result;

  result = qword_1EF62F1C0;
  if (!qword_1EF62F1C0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074890, &type metadata for CommunicationMechanism.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F1C0);
  }
  return result;
}

unint64_t sub_1C07CFAC0()
{
  unint64_t result;

  result = qword_1EF62F1C8;
  if (!qword_1EF62F1C8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074818, &type metadata for CommunicationMechanism.CustomCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F1C8);
  }
  return result;
}

unint64_t sub_1C07CFB00()
{
  unint64_t result;

  result = qword_1EF62F1D0;
  if (!qword_1EF62F1D0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074840, &type metadata for CommunicationMechanism.CustomCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F1D0);
  }
  return result;
}

unint64_t sub_1C07CFB40()
{
  unint64_t result;

  result = qword_1EF62F1D8;
  if (!qword_1EF62F1D8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10747C8, &type metadata for CommunicationMechanism.VoipCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F1D8);
  }
  return result;
}

unint64_t sub_1C07CFB80()
{
  unint64_t result;

  result = qword_1EF62F1E0;
  if (!qword_1EF62F1E0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10747F0, &type metadata for CommunicationMechanism.VoipCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F1E0);
  }
  return result;
}

unint64_t sub_1C07CFBC0()
{
  unint64_t result;

  result = qword_1EF62F1E8;
  if (!qword_1EF62F1E8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074778, &type metadata for CommunicationMechanism.VoicemailCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F1E8);
  }
  return result;
}

unint64_t sub_1C07CFC00()
{
  unint64_t result;

  result = qword_1EF62F1F0;
  if (!qword_1EF62F1F0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10747A0, &type metadata for CommunicationMechanism.VoicemailCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F1F0);
  }
  return result;
}

unint64_t sub_1C07CFC40()
{
  unint64_t result;

  result = qword_1EF62F1F8;
  if (!qword_1EF62F1F8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074728, &type metadata for CommunicationMechanism.FaceTimeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F1F8);
  }
  return result;
}

unint64_t sub_1C07CFC80()
{
  unint64_t result;

  result = qword_1EF62F200;
  if (!qword_1EF62F200)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074750, &type metadata for CommunicationMechanism.FaceTimeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F200);
  }
  return result;
}

unint64_t sub_1C07CFCC0()
{
  unint64_t result;

  result = qword_1EF62F208;
  if (!qword_1EF62F208)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10746D8, &type metadata for CommunicationMechanism.FaceTimeAudioCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F208);
  }
  return result;
}

unint64_t sub_1C07CFD00()
{
  unint64_t result;

  result = qword_1EF62F210;
  if (!qword_1EF62F210)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074700, &type metadata for CommunicationMechanism.FaceTimeAudioCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F210);
  }
  return result;
}

unint64_t sub_1C07CFD40()
{
  unint64_t result;

  result = qword_1EF62F218;
  if (!qword_1EF62F218)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074688, &type metadata for CommunicationMechanism.VideoCallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F218);
  }
  return result;
}

unint64_t sub_1C07CFD80()
{
  unint64_t result;

  result = qword_1EF62F220;
  if (!qword_1EF62F220)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10746B0, &type metadata for CommunicationMechanism.VideoCallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F220);
  }
  return result;
}

unint64_t sub_1C07CFDC0()
{
  unint64_t result;

  result = qword_1EF62F228;
  if (!qword_1EF62F228)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074638, &type metadata for CommunicationMechanism.ShareSheetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F228);
  }
  return result;
}

unint64_t sub_1C07CFE00()
{
  unint64_t result;

  result = qword_1EF62F230;
  if (!qword_1EF62F230)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074660, &type metadata for CommunicationMechanism.ShareSheetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F230);
  }
  return result;
}

unint64_t sub_1C07CFE40()
{
  unint64_t result;

  result = qword_1EF62F238;
  if (!qword_1EF62F238)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10745E8, &type metadata for CommunicationMechanism.ProximityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F238);
  }
  return result;
}

unint64_t sub_1C07CFE80()
{
  unint64_t result;

  result = qword_1EF62F240;
  if (!qword_1EF62F240)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074610, &type metadata for CommunicationMechanism.ProximityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F240);
  }
  return result;
}

unint64_t sub_1C07CFEC0()
{
  unint64_t result;

  result = qword_1EF62F248;
  if (!qword_1EF62F248)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074598, &type metadata for CommunicationMechanism.PhotoTagCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F248);
  }
  return result;
}

unint64_t sub_1C07CFF00()
{
  unint64_t result;

  result = qword_1EF62F250;
  if (!qword_1EF62F250)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10745C0, &type metadata for CommunicationMechanism.PhotoTagCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F250);
  }
  return result;
}

unint64_t sub_1C07CFF40()
{
  unint64_t result;

  result = qword_1EF62F258;
  if (!qword_1EF62F258)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074548, &type metadata for CommunicationMechanism.PhoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F258);
  }
  return result;
}

unint64_t sub_1C07CFF80()
{
  unint64_t result;

  result = qword_1EF62F260;
  if (!qword_1EF62F260)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074570, &type metadata for CommunicationMechanism.PhoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F260);
  }
  return result;
}

unint64_t sub_1C07CFFC0()
{
  unint64_t result;

  result = qword_1EF62F268;
  if (!qword_1EF62F268)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10744F8, &type metadata for CommunicationMechanism.FaceTimeVideoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F268);
  }
  return result;
}

unint64_t sub_1C07D0000()
{
  unint64_t result;

  result = qword_1EF62F270;
  if (!qword_1EF62F270)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074520, &type metadata for CommunicationMechanism.FaceTimeVideoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F270);
  }
  return result;
}

unint64_t sub_1C07D0040()
{
  unint64_t result;

  result = qword_1EF62F278;
  if (!qword_1EF62F278)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10744A8, &type metadata for CommunicationMechanism.HighlightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F278);
  }
  return result;
}

unint64_t sub_1C07D0080()
{
  unint64_t result;

  result = qword_1EF62F280;
  if (!qword_1EF62F280)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10744D0, &type metadata for CommunicationMechanism.HighlightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F280);
  }
  return result;
}

unint64_t sub_1C07D00C0()
{
  unint64_t result;

  result = qword_1EF62F288;
  if (!qword_1EF62F288)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074458, &type metadata for CommunicationMechanism.SharePlayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F288);
  }
  return result;
}

unint64_t sub_1C07D0100()
{
  unint64_t result;

  result = qword_1EF62F290;
  if (!qword_1EF62F290)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074480, &type metadata for CommunicationMechanism.SharePlayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F290);
  }
  return result;
}

unint64_t sub_1C07D0140()
{
  unint64_t result;

  result = qword_1EF62F298;
  if (!qword_1EF62F298)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074408, &type metadata for CommunicationMechanism.ShareSheetSuggestionEngagedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F298);
  }
  return result;
}

unint64_t sub_1C07D0180()
{
  unint64_t result;

  result = qword_1EF62F2A0;
  if (!qword_1EF62F2A0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074430, &type metadata for CommunicationMechanism.ShareSheetSuggestionEngagedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F2A0);
  }
  return result;
}

unint64_t sub_1C07D01C0()
{
  unint64_t result;

  result = qword_1EF62F2A8;
  if (!qword_1EF62F2A8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10743B8, &type metadata for CommunicationMechanism.CountCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F2A8);
  }
  return result;
}

unint64_t sub_1C07D0200()
{
  unint64_t result;

  result = qword_1EF62F2B0;
  if (!qword_1EF62F2B0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10743E0, &type metadata for CommunicationMechanism.CountCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F2B0);
  }
  return result;
}

unint64_t sub_1C07D0240()
{
  unint64_t result;

  result = qword_1EF62F2B8;
  if (!qword_1EF62F2B8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074AE8, &type metadata for CommunicationMechanism.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F2B8);
  }
  return result;
}

unint64_t sub_1C07D0280()
{
  unint64_t result;

  result = qword_1EF62F2C0;
  if (!qword_1EF62F2C0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1074B10, &type metadata for CommunicationMechanism.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F2C0);
  }
  return result;
}

uint64_t sub_1C07D02C0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (result < a5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((uint64_t)(a6 >> 1) < result || (uint64_t)(a6 >> 1) < a2)
    goto LABEL_10;
  if (a2 < a5)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if ((a2 & 0x8000000000000000) == 0)
    return swift_unknownObjectRetain();
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_1C07D0338(uint64_t a1, id *a2)
{
  _QWORD *v2;
  uint64_t result;

  sub_1C07AF530(a1, a2);
  result = sub_1C106FAFC();
  *v2 = 0;
  return result;
}

void sub_1C07D039C()
{
  sub_1C106FB14();
  sub_1C106FAF0();
  swift_bridgeObjectRelease();
  sub_1C0778534();
}

void type metadata accessor for NSTextCheckingKey(uint64_t a1)
{
  sub_1C07D0520(a1, &qword_1ED7512D0);
}

void type metadata accessor for FileAttributeKey(uint64_t a1)
{
  sub_1C07D0520(a1, &qword_1ED755928);
}

void type metadata accessor for BMStreamIdentifier(uint64_t a1)
{
  sub_1C07D0520(a1, &qword_1EF62F460);
}

void type metadata accessor for GDEntityResolutionMode(uint64_t a1)
{
  sub_1C07D0520(a1, &qword_1EF62F468);
}

void type metadata accessor for PipelineRunningReason(uint64_t a1)
{
  sub_1C07D0520(a1, &qword_1EF62F470);
}

void type metadata accessor for CCPhotosPetType(uint64_t a1)
{
  sub_1C07D0520(a1, &qword_1EF62F478);
}

void type metadata accessor for PHFaceAgeType(uint64_t a1)
{
  sub_1C07D0520(a1, (unint64_t *)&unk_1EF62F480);
}

void type metadata accessor for NLLanguage(uint64_t a1)
{
  sub_1C07D0520(a1, &qword_1ED754B98);
}

void type metadata accessor for BMMediaNowPlayingMediaSubtype(uint64_t a1)
{
  sub_1C07D0520(a1, &qword_1EF62F490);
}

void type metadata accessor for BMMediaNowPlayingPlaybackState(uint64_t a1)
{
  sub_1C07D0520(a1, &qword_1EF62F498);
}

void type metadata accessor for MLMultiArrayDataType(uint64_t a1)
{
  sub_1C07D0520(a1, &qword_1EF62F4A0);
}

void type metadata accessor for GDGeoHashLevel(uint64_t a1)
{
  sub_1C07D0520(a1, &qword_1EF62F4A8);
}

void type metadata accessor for BMCarPlayConnectedReason(uint64_t a1)
{
  sub_1C07D0520(a1, &qword_1EF62F4B0);
}

void type metadata accessor for BMUserFocusModeComputedSemanticType(uint64_t a1)
{
  sub_1C07D0520(a1, (unint64_t *)&unk_1EF62F4B8);
}

void type metadata accessor for BMLocationSemanticUserSpecificPlaceType(uint64_t a1)
{
  sub_1C07D0520(a1, &qword_1ED744810);
}

void type metadata accessor for BMLocationSemanticPlaceType(uint64_t a1)
{
  sub_1C07D0520(a1, &qword_1EF62F4C8);
}

void type metadata accessor for GEOPOICategory(uint64_t a1)
{
  sub_1C07D0520(a1, &qword_1EF62F4D0);
}

void sub_1C07D0520(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

void sub_1C07D0564()
{
  sub_1C0794BAC(&qword_1EF62F4D8, (uint64_t (*)(uint64_t))type metadata accessor for GEOPOICategory, (uint64_t)&unk_1C1077F8C);
}

void sub_1C07D0590()
{
  sub_1C0794BAC(&qword_1EF62F4E0, (uint64_t (*)(uint64_t))type metadata accessor for GEOPOICategory, (uint64_t)&unk_1C1077F64);
}

void sub_1C07D05BC()
{
  sub_1C0794BAC(&qword_1EF62F4E8, (uint64_t (*)(uint64_t))type metadata accessor for GEOPOICategory, (uint64_t)&unk_1C1077FF4);
}

void sub_1C07D05E8()
{
  sub_1C0794BAC(&qword_1EF62F4F0, (uint64_t (*)(uint64_t))type metadata accessor for BMLocationSemanticPlaceType, (uint64_t)&unk_1C10780F8);
}

void sub_1C07D0614()
{
  sub_1C0794BAC(&qword_1EF62F4F8, (uint64_t (*)(uint64_t))type metadata accessor for BMCarPlayConnectedReason, (uint64_t)&unk_1C1078274);
}

void sub_1C07D0640()
{
  sub_1C0794BAC(&qword_1EF62F500, (uint64_t (*)(uint64_t))type metadata accessor for NLLanguage, (uint64_t)&unk_1C1078318);
}

void sub_1C07D066C()
{
  sub_1C0794BAC(&qword_1EF62F508, (uint64_t (*)(uint64_t))type metadata accessor for NLLanguage, (uint64_t)&unk_1C10782EC);
}

void sub_1C07D0698()
{
  sub_1C0794BAC(&qword_1EF62F510, (uint64_t (*)(uint64_t))type metadata accessor for BMStreamIdentifier, (uint64_t)&unk_1C1078520);
}

void sub_1C07D06C4()
{
  sub_1C0794BAC(&qword_1EF62F518, (uint64_t (*)(uint64_t))type metadata accessor for BMStreamIdentifier, (uint64_t)&unk_1C10784F4);
}

void sub_1C07D06F0()
{
  sub_1C0794BAC(&qword_1EF62F520, (uint64_t (*)(uint64_t))type metadata accessor for BMStreamIdentifier, (uint64_t)&unk_1C1078590);
}

void sub_1C07D071C()
{
  sub_1C0794BAC(&qword_1EF62F528, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1C1078684);
}

void sub_1C07D0748()
{
  sub_1C0794BAC(&qword_1EF62F530, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1C1078658);
}

void sub_1C07D0774()
{
  sub_1C0794BAC(&qword_1EF62F538, (uint64_t (*)(uint64_t))type metadata accessor for NSTextCheckingKey, (uint64_t)&unk_1C1078798);
}

void sub_1C07D07A0()
{
  sub_1C0794BAC(&qword_1EF62F540, (uint64_t (*)(uint64_t))type metadata accessor for NSTextCheckingKey, (uint64_t)&unk_1C107876C);
}

void sub_1C07D07CC()
{
  sub_1C0794BAC(&qword_1ED7512C8, (uint64_t (*)(uint64_t))type metadata accessor for NSTextCheckingKey, (uint64_t)&unk_1C1078808);
}

void sub_1C07D07F8()
{
  sub_1C0794BAC(&qword_1ED759880, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1C10786F4);
}

void sub_1C07D0824()
{
  sub_1C0794BAC(&qword_1EF62F548, (uint64_t (*)(uint64_t))type metadata accessor for CCPhotosPetType, (uint64_t)&unk_1C107841C);
}

void sub_1C07D0850()
{
  sub_1C0794BAC((unint64_t *)&unk_1ED744800, (uint64_t (*)(uint64_t))type metadata accessor for BMLocationSemanticUserSpecificPlaceType, (uint64_t)&unk_1C1078160);
}

void sub_1C07D087C()
{
  sub_1C0794BAC((unint64_t *)&unk_1ED754B88, (uint64_t (*)(uint64_t))type metadata accessor for NLLanguage, (uint64_t)&unk_1C1078388);
}

void sub_1C07D08A8()
{
  sub_1C0794BAC((unint64_t *)&unk_1EF62F550, (uint64_t (*)(uint64_t))type metadata accessor for BMUserFocusModeComputedSemanticType, (uint64_t)&unk_1C10781C8);
}

double sub_1C07D0934(uint64_t a1)
{
  return *(double *)a1;
}

uint64_t sub_1C07D0944()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1C07D095C()
{
  return sub_1C106FC28();
}

unint64_t sub_1C07D097C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 17;
  return sub_1C07CAD60();
}

unint64_t sub_1C07D0988()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 16;
  return sub_1C07CC2EC();
}

unint64_t sub_1C07D0994()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 14;
  return sub_1C07CC364();
}

unint64_t sub_1C07D09A0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 13;
  return sub_1C07CC3A0();
}

unint64_t sub_1C07D09AC()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 12;
  return sub_1C07CAE8C();
}

unint64_t sub_1C07D09B8()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 11;
  return sub_1C07CC418();
}

unint64_t sub_1C07D09C4()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 33;
  return sub_1C07CBEF0();
}

unint64_t sub_1C07D09D0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 10;
  return sub_1C07CAF04();
}

unint64_t sub_1C07D09DC()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 32;
  return sub_1C07CBF2C();
}

unint64_t sub_1C07D09E8()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 30;
  return sub_1C07CBFA4();
}

unint64_t sub_1C07D09F4()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 9;
  return sub_1C07CAF40();
}

unint64_t sub_1C07D0A00()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 9;
  return sub_1C07CC490();
}

unint64_t sub_1C07D0A0C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 29;
  return sub_1C07CBFE0();
}

unint64_t sub_1C07D0A18()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 27;
  return sub_1C07CC058();
}

unint64_t sub_1C07D0A24()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 26;
  return sub_1C07CC094();
}

unint64_t sub_1C07D0A30()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 6;
  return sub_1C07CC544();
}

unint64_t sub_1C07D0A3C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 68) = 4;
  return sub_1C07CBBE0();
}

unint64_t sub_1C07D0A48()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 4;
  return sub_1C07CBD48();
}

unint64_t sub_1C07D0A54()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 4;
  return sub_1C07CC5BC();
}

unint64_t sub_1C07D0A60()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 3;
  return sub_1C07CBD84();
}

unint64_t sub_1C07D0A6C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 3;
  return sub_1C07CC634();
}

unint64_t sub_1C07D0A78()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 70) = 2;
  return sub_1C07CBC58();
}

unint64_t sub_1C07D0A84()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 2;
  return sub_1C07CBDC0();
}

unint64_t sub_1C07D0A90()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 2;
  return sub_1C07CB0E4();
}

unint64_t sub_1C07D0A9C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 2;
  return sub_1C07CC6AC();
}

unint64_t sub_1C07D0AA8()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 68) = 1;
  return sub_1C07CBA78();
}

unint64_t sub_1C07D0AB4()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 68) = 1;
  return sub_1C07CBDFC();
}

unint64_t sub_1C07D0AC0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_1C07CB120();
}

uint64_t sub_1C07D0ACC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  *v1 = a1;
  return sub_1C1070A44();
}

uint64_t sub_1C07D0AD8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C07D0AF8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_1C07D0B00()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 19;
  return sub_1C07CC238();
}

unint64_t sub_1C07D0B0C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 22;
  return sub_1C07CC184();
}

Swift::String_optional __swiftcall ActivityEventContent.setConfidence()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  Swift::String_optional result;

  if ((*(_BYTE *)(v0 + 16) & 1) != 0)
  {
    v1 = 0;
    v2 = 0;
  }
  else
  {
    v1 = sub_1C1070180();
  }
  result.value._object = v2;
  result.value._countAndFlagsBits = v1;
  return result;
}

uint64_t sub_1C07D0B44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];

  v2 = v0;
  type metadata accessor for LifeEventStructs.ParticipationRelationshipType(0);
  swift_allocObject();
  sub_1C0FE93D8();
  v4 = v3;
  if (qword_1ED749BF8 != -1)
    swift_once();
  v5 = type metadata accessor for SourceIdPrefix();
  v6 = sub_1C079E000(v5, (uint64_t)&unk_1ED78C378);
  v7 = *(_QWORD *)(v2 + 56);
  MEMORY[0x1E0C80A78](v6);
  v11[2] = v8;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v9 = sub_1C0828584((uint64_t)sub_1C07D0E8C, (uint64_t)v11, v7);
  swift_bridgeObjectRelease();
  if (v1)
    swift_release();
  else
    sub_1C0FDDDFC(v9);
  return v4;
}

uint64_t sub_1C07D0C54@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v42;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v4 = a1[2];
  v3 = a1[3];
  v5 = a1[4];
  v6 = a1[5];
  v7 = a1[6];
  v8 = a1[7];
  sub_1C07ACF80(&qword_1ED744990);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C1078A20;
  v10 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
  v11 = sub_1C07D0EA8();
  if (v6)
    v12 = v5;
  else
    v12 = 0;
  v13 = 0xE000000000000000;
  if (v6)
    v14 = v6;
  else
    v14 = 0xE000000000000000;
  *(_QWORD *)(v9 + 32) = v12;
  *(_QWORD *)(v9 + 40) = v14;
  *(_QWORD *)(v9 + 96) = v10;
  *(_QWORD *)(v9 + 104) = v11;
  v39 = v4;
  if (v3)
    v15 = v4;
  else
    v15 = 0;
  if (v3)
    v16 = v3;
  else
    v16 = 0xE000000000000000;
  *(_QWORD *)(v9 + 64) = v11;
  *(_QWORD *)(v9 + 72) = v15;
  *(_QWORD *)(v9 + 80) = v16;
  *(_QWORD *)(v9 + 136) = v10;
  *(_QWORD *)(v9 + 144) = v11;
  if (v8)
    v17 = v7;
  else
    v17 = 0;
  if (v8)
    v13 = v8;
  *(_QWORD *)(v9 + 112) = v17;
  *(_QWORD *)(v9 + 120) = v13;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FB38();
  String.base64EncodedSHA(withPrefix:)();
  v19 = v18;
  v21 = v20;
  swift_bridgeObjectRelease();
  type metadata accessor for LifeEventStructs.AddressRelationshipType(0);
  swift_allocObject();
  sub_1C0FE49B4();
  v23 = v22;
  v24 = (_QWORD *)(v22
                 + OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs23AddressRelationshipType_emailAddress);
  *v24 = v5;
  v24[1] = v6;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  v25 = (_QWORD *)(v23
                 + OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs23AddressRelationshipType_phoneNumber);
  *v25 = v7;
  v25[1] = v8;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  type metadata accessor for LifeEventStructs.Person(0);
  swift_allocObject();
  v26 = v46;
  sub_1C0FE6FF4(v19, v21, v27, v28, v29, v30, v31, v32, v38, v39, a3, a2, v45, v46, v47, v48, v49, v50, v51, v52);
  if (v26)
  {
    result = swift_release();
    *v44 = v26;
  }
  else
  {
    v35 = v33;
    v36 = (_QWORD *)(v33 + OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs6Person_name);
    *v36 = v40;
    v36[1] = v3;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_bridgeObjectRelease();
    v37 = swift_retain();
    sub_1C0FDDDE0(v37);
    result = swift_release();
    *v42 = v35;
  }
  return result;
}

uint64_t sub_1C07D0E8C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C07D0C54(a1, a2, a3);
}

unint64_t sub_1C07D0EA8()
{
  unint64_t result;

  result = qword_1EF62F6D0;
  if (!qword_1EF62F6D0)
  {
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0CB1A70], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1EF62F6D0);
  }
  return result;
}

void ActivityEventContent.activityType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *ActivityEventContent.activityType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*ActivityEventContent.activityType.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ActivityEventContent.confidence.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t ActivityEventContent.confidence.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 8) = result;
  *(_BYTE *)(v2 + 16) = a2 & 1;
  return result;
}

uint64_t (*ActivityEventContent.confidence.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ActivityEventContent.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1C07D1B40(v1 + 24, a1, &qword_1ED760400);
}

uint64_t ActivityEventContent.metadata.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1C07D1BA0(a1, v1 + 24, &qword_1ED760400);
}

uint64_t (*ActivityEventContent.metadata.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ActivityEventContent.members.getter()
{
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

void ActivityEventContent.members.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 56) = a1;
  sub_1C0778534();
}

uint64_t (*ActivityEventContent.members.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ActivityEventContent.sourceIdPrefix.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1C079C24C();
  return sub_1C07A7C00(v1 + v3, a1);
}

uint64_t type metadata accessor for ActivityEventContent(uint64_t a1)
{
  return sub_1C0784B00(a1, qword_1ED74AB40);
}

uint64_t sub_1C07D1000(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SourceIdPrefix();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ActivityEventContent.sourceIdPrefix.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ActivityEventContent(0);
  return sub_1C07B3E98(a1, v1 + *(int *)(v3 + 32));
}

uint64_t sub_1C07D1070(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SourceIdPrefix();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*ActivityEventContent.sourceIdPrefix.modify())(_QWORD)
{
  type metadata accessor for ActivityEventContent(0);
  return nullsub_1;
}

uint64_t ActivityEventContent.init(activityType:sourceIdPrefix:confidence:metadata:members:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  char v13;
  uint64_t v14;
  uint64_t result;

  v13 = *a1;
  *(_OWORD *)(a7 + 40) = 0u;
  *(_OWORD *)(a7 + 24) = 0u;
  *(_BYTE *)a7 = v13;
  sub_1C079C24C();
  sub_1C07D1170(a2, a7 + v14);
  *(_QWORD *)(a7 + 8) = a3;
  *(_BYTE *)(a7 + 16) = a4 & 1;
  result = sub_1C07D1BA0(a5, a7 + 24, &qword_1ED760400);
  *(_QWORD *)(a7 + 56) = a6;
  return result;
}

uint64_t sub_1C07D1170(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SourceIdPrefix();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C07D11B4()
{
  qword_1ED78C338 = (uint64_t)&unk_1E79FB918;
}

void ActivityEventPerson.contactID.getter()
{
  sub_1C077AE90();
  sub_1C077CEF4();
  sub_1C0778534();
}

void ActivityEventPerson.contactID.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_1C0794BE8();
  *v1 = v2;
  v1[1] = v0;
  sub_1C077671C();
}

uint64_t (*ActivityEventPerson.contactID.modify())(_QWORD)
{
  return nullsub_1;
}

void ActivityEventPerson.name.getter()
{
  sub_1C077AE90();
  sub_1C077CEF4();
  sub_1C0778534();
}

void ActivityEventPerson.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  sub_1C077671C();
}

uint64_t (*ActivityEventPerson.name.modify())(_QWORD)
{
  return nullsub_1;
}

void ActivityEventPerson.email.getter()
{
  sub_1C077AE90();
  sub_1C077CEF4();
  sub_1C0778534();
}

void ActivityEventPerson.email.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  sub_1C077671C();
}

uint64_t (*ActivityEventPerson.email.modify())(_QWORD)
{
  return nullsub_1;
}

void ActivityEventPerson.phoneNumber.getter()
{
  sub_1C077AE90();
  sub_1C077CEF4();
  sub_1C0778534();
}

void ActivityEventPerson.phoneNumber.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  sub_1C077671C();
}

uint64_t (*ActivityEventPerson.phoneNumber.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1C07D132C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x49746361746E6F63 && a2 == 0xE900000000000044;
  if (v2 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 1701667182 && a2 == 0xE400000000000000;
    if (v6 || (sub_1C1070CB4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6C69616D65 && a2 == 0xE500000000000000;
      if (v7 || (sub_1C1070CB4() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x6D754E656E6F6870 && a2 == 0xEB00000000726562)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_1C1070CB4();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_1C07D14E4()
{
  return 4;
}

uint64_t sub_1C07D14EC()
{
  sub_1C1070DF8();
  sub_1C1070E04();
  return sub_1C1070E4C();
}

uint64_t sub_1C07D1530(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C07D1568 + 4 * byte_1C1078A50[a1]))(0x49746361746E6F63, 0xE900000000000044);
}

uint64_t sub_1C07D1568()
{
  return 1701667182;
}

uint64_t sub_1C07D1578()
{
  return 0x6C69616D65;
}

uint64_t sub_1C07D158C()
{
  return 0x6D754E656E6F6870;
}

uint64_t sub_1C07D15AC()
{
  return sub_1C07D14EC();
}

uint64_t sub_1C07D15B4()
{
  sub_1C1070DF8();
  sub_1C1070E04();
  return sub_1C1070E4C();
}

uint64_t sub_1C07D15F4()
{
  unsigned __int8 *v0;

  return sub_1C07D1530(*v0);
}

uint64_t sub_1C07D15FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C07D132C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C07D1620@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C07D14E4();
  *a1 = result;
  return result;
}

uint64_t sub_1C07D1644()
{
  sub_1C07D1804();
  return sub_1C1070EE8();
}

uint64_t sub_1C07D166C()
{
  sub_1C07D1804();
  return sub_1C1070EF4();
}

void ActivityEventPerson.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[8];
  char v12;
  char v13;
  char v14;
  char v15;

  v3 = sub_1C07ACF80(&qword_1EF62F6D8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[2];
  v11[5] = v1[3];
  v11[6] = v7;
  v8 = v1[4];
  v11[3] = v1[5];
  v11[4] = v8;
  v9 = v1[6];
  v11[1] = v1[7];
  v11[2] = v9;
  sub_1C07A9480(a1, a1[3]);
  sub_1C07D1804();
  sub_1C1070EB8();
  v15 = 0;
  v10 = v11[7];
  sub_1C1070B34();
  if (!v10)
  {
    v14 = 1;
    sub_1C07A42D4();
    v13 = 2;
    sub_1C07A42D4();
    v12 = 3;
    sub_1C07A42D4();
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1C07757D0();
}

unint64_t sub_1C07D1804()
{
  unint64_t result;

  result = qword_1EF62F6E0;
  if (!qword_1EF62F6E0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1078C90, &type metadata for ActivityEventPerson.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F6E0);
  }
  return result;
}

void ActivityEventPerson.init(from:)(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  char v28;
  char v29;
  char v30;
  char v31;

  v5 = sub_1C07ACF80(&qword_1EF62F6E8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07A9480(a1, a1[3]);
  sub_1C07D1804();
  sub_1C1070E94();
  if (v2)
  {
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    sub_1C077E584();
    sub_1C077B5B4();
  }
  else
  {
    v31 = 0;
    v9 = sub_1C079A6A4();
    v11 = v10;
    v27 = v9;
    v30 = 1;
    sub_1C077EB44();
    v12 = sub_1C079A6A4();
    v14 = v13;
    v25 = v12;
    v26 = a2;
    v29 = 2;
    sub_1C077EB44();
    v15 = sub_1C079A6A4();
    v17 = v16;
    v24 = v15;
    v28 = 3;
    sub_1C077EB44();
    v18 = sub_1C079A6A4();
    v20 = v19;
    v21 = *(void (**)(char *, uint64_t))(v6 + 8);
    v22 = v18;
    v21(v8, v5);
    sub_1C077AE90();
    swift_bridgeObjectRelease();
    v23 = v26;
    *v26 = v27;
    v23[1] = v11;
    v23[2] = v25;
    v23[3] = v14;
    v23[4] = v24;
    v23[5] = v17;
    v23[6] = v22;
    v23[7] = v20;
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    sub_1C077E584();
    sub_1C0775834();
  }
  swift_bridgeObjectRelease();
  sub_1C07757D0();
}

void sub_1C07D1A48(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  ActivityEventPerson.init(from:)(a1, a2);
}

void sub_1C07D1A5C(_QWORD *a1)
{
  ActivityEventPerson.encode(to:)(a1);
}

void ActivityEventWithBehaviors.id.getter()
{
  sub_1C077AE90();
  sub_1C077CEF4();
  sub_1C0778534();
}

void ActivityEventWithBehaviors.id.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_1C0794BE8();
  *v1 = v2;
  v1[1] = v0;
  sub_1C077671C();
}

uint64_t (*ActivityEventWithBehaviors.id.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ActivityEventWithBehaviors.behaviorEvents.getter()
{
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

void ActivityEventWithBehaviors.behaviorEvents.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  sub_1C0778534();
}

uint64_t (*ActivityEventWithBehaviors.behaviorEvents.modify())(_QWORD)
{
  return nullsub_1;
}

void ActivityEventWithBehaviors.activityEvent.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1C0790650();
  sub_1C07D1B40(v1 + *(int *)(v2 + 24), v0, &qword_1ED74AF90);
  sub_1C0778534();
}

uint64_t type metadata accessor for ActivityEventWithBehaviors(uint64_t a1)
{
  return sub_1C0784B00(a1, qword_1EF62F748);
}

uint64_t sub_1C07D1B40(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  v4 = sub_1C0778588(a1, a2, a3);
  sub_1C0775828(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16));
  return v3;
}

void ActivityEventWithBehaviors.activityEvent.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1C07B9578();
  sub_1C07D1BA0(v0, v1 + *(int *)(v2 + 24), &qword_1ED74AF90);
  sub_1C0778534();
}

uint64_t sub_1C07D1BA0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  v4 = sub_1C0778588(a1, a2, a3);
  sub_1C0775828(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40));
  return v3;
}

uint64_t (*ActivityEventWithBehaviors.activityEvent.modify())(_QWORD)
{
  type metadata accessor for ActivityEventWithBehaviors(0);
  return nullsub_1;
}

uint64_t ActivityEventWithBehaviors.sourceIdPrefix.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1C0790650();
  return sub_1C07A7C00(v1 + *(int *)(v2 + 28), v0);
}

uint64_t ActivityEventWithBehaviors.sourceIdPrefix.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1C07B9578();
  return sub_1C07B3E98(v0, v1 + *(int *)(v2 + 28));
}

uint64_t (*ActivityEventWithBehaviors.sourceIdPrefix.modify())(_QWORD)
{
  type metadata accessor for ActivityEventWithBehaviors(0);
  return nullsub_1;
}

uint64_t ActivityEventWithBehaviors.init(id:behaviorEvents:activityEvent:sourceIdPrefix:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v6;
  uint64_t v10;

  *a6 = a1;
  a6[1] = a2;
  a6[2] = a3;
  type metadata accessor for ActivityEventWithBehaviors(0);
  sub_1C07B885C();
  sub_1C07D1CC0(a4, (uint64_t)a6 + v10);
  return sub_1C07D1170(a5, (uint64_t)a6 + *(int *)(v6 + 28));
}

uint64_t sub_1C07D1CC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1ED74AF90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t initializeBufferWithCopyOfBuffer for ActivityEventContent(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  char *v27;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v7 = (_OWORD *)(a1 + 24);
    v8 = a2 + 3;
    v9 = a2[6];
    if (v9)
    {
      *(_QWORD *)(v4 + 48) = v9;
      (**(void (***)(_OWORD *, _OWORD *))(v9 - 8))(v7, v8);
    }
    else
    {
      v11 = *(_OWORD *)(a2 + 5);
      *v7 = *v8;
      *(_OWORD *)(v4 + 40) = v11;
    }
    *(_QWORD *)(v4 + 56) = a2[7];
    v12 = *(int *)(a3 + 32);
    v13 = (_QWORD *)(v4 + v12);
    v14 = (uint64_t)a2 + v12;
    v15 = *(uint64_t *)((char *)a2 + v12);
    v16 = *(_QWORD *)(v14 + 8);
    *v13 = v15;
    v13[1] = v16;
    v17 = *(int *)(type metadata accessor for SourceIdPrefix() + 20);
    v18 = (_QWORD *)((char *)v13 + v17);
    v19 = v14 + v17;
    v20 = *(_QWORD *)(v14 + v17 + 8);
    *v18 = *(_QWORD *)(v14 + v17);
    v18[1] = v20;
    v18[2] = *(_QWORD *)(v14 + v17 + 16);
    v21 = type metadata accessor for Source();
    v22 = *(int *)(v21 + 24);
    v27 = (char *)v18 + v22;
    v23 = v19 + v22;
    v24 = sub_1C106D1F8();
    v25 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v25(v27, v23, v24);
    *((_BYTE *)v18 + *(int *)(v21 + 28)) = *(_BYTE *)(v19 + *(int *)(v21 + 28));
  }
  return v4;
}

uint64_t destroy for ActivityEventContent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (*(_QWORD *)(a1 + 48))
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(a1 + 24);
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 32);
  swift_bridgeObjectRelease();
  v5 = v4 + *(int *)(type metadata accessor for SourceIdPrefix() + 20);
  swift_bridgeObjectRelease();
  v6 = v5 + *(int *)(type metadata accessor for Source() + 24);
  v7 = sub_1C106D1F8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

uint64_t initializeWithCopy for ActivityEventContent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v6;
  _OWORD *v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  char *v25;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = (_OWORD *)(a1 + 24);
  v7 = (_OWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 48);
  if (v8)
  {
    *(_QWORD *)(a1 + 48) = v8;
    (**(void (***)(_OWORD *, _OWORD *))(v8 - 8))(v6, v7);
  }
  else
  {
    v9 = v7[1];
    *v6 = *v7;
    v6[1] = v9;
  }
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v10 = *(int *)(a3 + 32);
  v11 = (_QWORD *)(a1 + v10);
  v12 = a2 + v10;
  v13 = *(_QWORD *)(a2 + v10);
  v14 = *(_QWORD *)(v12 + 8);
  *v11 = v13;
  v11[1] = v14;
  v15 = *(int *)(type metadata accessor for SourceIdPrefix() + 20);
  v16 = (_QWORD *)((char *)v11 + v15);
  v17 = v12 + v15;
  v18 = *(_QWORD *)(v12 + v15 + 8);
  *v16 = *(_QWORD *)(v12 + v15);
  v16[1] = v18;
  v16[2] = *(_QWORD *)(v12 + v15 + 16);
  v19 = type metadata accessor for Source();
  v20 = *(int *)(v19 + 24);
  v25 = (char *)v16 + v20;
  v21 = v17 + v20;
  v22 = sub_1C106D1F8();
  v23 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v23(v25, v21, v22);
  *((_BYTE *)v16 + *(int *)(v19 + 28)) = *(_BYTE *)(v17 + *(int *)(v19 + 28));
  return a1;
}

uint64_t assignWithCopy for ActivityEventContent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v6;
  v7 = (_OWORD *)(a1 + 24);
  v8 = (_OWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 48);
  if (!*(_QWORD *)(a1 + 48))
  {
    if (v9)
    {
      *(_QWORD *)(a1 + 48) = v9;
      (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 24, a2 + 24);
      goto LABEL_8;
    }
LABEL_7:
    v10 = v8[1];
    *v7 = *v8;
    v7[1] = v10;
    goto LABEL_8;
  }
  if (!v9)
  {
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(a1 + 24);
    goto LABEL_7;
  }
  sub_1C07D2198((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
LABEL_8:
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  v11 = *(int *)(a3 + 32);
  v12 = (_QWORD *)(a1 + v11);
  v13 = a2 + v11;
  *v12 = *(_QWORD *)(a2 + v11);
  v12[1] = *(_QWORD *)(a2 + v11 + 8);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  v14 = *(int *)(type metadata accessor for SourceIdPrefix() + 20);
  v15 = (_QWORD *)((char *)v12 + v14);
  v16 = v13 + v14;
  *v15 = *(_QWORD *)(v13 + v14);
  v15[1] = *(_QWORD *)(v13 + v14 + 8);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  v15[2] = *(_QWORD *)(v16 + 16);
  v17 = type metadata accessor for Source();
  v18 = *(int *)(v17 + 24);
  v19 = (char *)v15 + v18;
  v20 = v16 + v18;
  v21 = sub_1C106D1F8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v19, v20, v21);
  *((_BYTE *)v15 + *(int *)(v17 + 28)) = *(_BYTE *)(v16 + *(int *)(v17 + 28));
  return a1;
}

uint64_t *sub_1C07D2198(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

uint64_t initializeWithTake for ActivityEventContent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v4 = *(int *)(a3 + 32);
  v5 = a1 + v4;
  v6 = a2 + v4;
  *(_OWORD *)(a1 + v4) = *(_OWORD *)(a2 + v4);
  v7 = *(int *)(type metadata accessor for SourceIdPrefix() + 20);
  v8 = v5 + v7;
  v9 = v6 + v7;
  *(_OWORD *)v8 = *(_OWORD *)(v6 + v7);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + v7 + 16);
  v10 = type metadata accessor for Source();
  v11 = *(int *)(v10 + 24);
  v12 = v8 + v11;
  v13 = v9 + v11;
  v14 = sub_1C106D1F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  *(_BYTE *)(v8 + *(int *)(v10 + 28)) = *(_BYTE *)(v9 + *(int *)(v10 + 28));
  return a1;
}

uint64_t assignWithTake for ActivityEventContent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v6;
  __int128 v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = (_OWORD *)(a1 + 24);
  if (*(_QWORD *)(a1 + 48))
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(a1 + 24);
  v7 = *(_OWORD *)(a2 + 40);
  *v6 = *(_OWORD *)(a2 + 24);
  v6[1] = v7;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 32);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  v12 = *(int *)(type metadata accessor for SourceIdPrefix() + 20);
  v13 = (_QWORD *)((char *)v9 + v12);
  v14 = (char *)v10 + v12;
  v15 = *(_QWORD *)((char *)v10 + v12 + 8);
  *v13 = *(_QWORD *)((char *)v10 + v12);
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v13[2] = *((_QWORD *)v14 + 2);
  v16 = type metadata accessor for Source();
  v17 = *(int *)(v16 + 24);
  v18 = (char *)v13 + v17;
  v19 = &v14[v17];
  v20 = sub_1C106D1F8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v18, v19, v20);
  *((_BYTE *)v13 + *(int *)(v16 + 28)) = v14[*(int *)(v16 + 28)];
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityEventContent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1C07D24EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_1C077F018(*(_QWORD *)(a1 + 56));
    sub_1C077671C();
  }
  else
  {
    v6 = sub_1C078DE84();
    sub_1C0776754(a1 + *(int *)(a3 + 32), a2, v6);
  }
}

uint64_t storeEnumTagSinglePayload for ActivityEventContent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1C07D254C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  sub_1C078DE8C();
  if (v3)
  {
    *(_QWORD *)(v1 + 56) = (v0 - 1);
    sub_1C077671C();
  }
  else
  {
    v4 = v2;
    v5 = sub_1C078DE84();
    sub_1C077F00C(v1 + *(int *)(v4 + 32), v0, v0, v5);
  }
}

uint64_t sub_1C07D2598()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SourceIdPrefix();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for ActivityEventPerson()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ActivityEventPerson(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

_QWORD *assignWithCopy for ActivityEventPerson(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for ActivityEventPerson(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

_QWORD *assignWithTake for ActivityEventPerson(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityEventPerson(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 64))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityEventPerson(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 64) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityEventPerson()
{
  return &type metadata for ActivityEventPerson;
}

uint64_t getEnumTagSinglePayload for ActivityEventWithBehaviors()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ActivityEventWithBehaviors()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1C07D28F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1ED74AF98)
  {
    v2 = type metadata accessor for ActivityEventContent(255);
    v5 = type metadata accessor for SessionDataComplying(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1ED74AF98);
  }
}

void _s24IntelligencePlatformCore26ActivityEventWithBehaviorsVwCP_0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;

  sub_1C0797AD4();
  if ((*(_DWORD *)(*(_QWORD *)(v3 - 8) + 80) & 0x20000) != 0)
  {
    *v0 = *v1;
    swift_retain();
  }
  else
  {
    v4 = v1[1];
    *v0 = *v1;
    v0[1] = v4;
    v0[2] = v1[2];
    v38 = v3;
    v5 = *(int *)(v3 + 24);
    v6 = (char *)v0 + v5;
    v7 = (char *)v1 + v5;
    sub_1C077AE98();
    sub_1C07BC544();
    sub_1C077AEBC();
    sub_1C07A66B4();
    v8 = sub_1C07ACF80(&qword_1ED74AF90);
    sub_1C0795FEC((uint64_t)&v6[*(int *)(v8 + 28)], (uint64_t)&v7[*(int *)(v8 + 28)]);
    v9 = (_OWORD *)sub_1C07995DC();
    if (v11)
    {
      sub_1C079F2A0((uint64_t)v9, (uint64_t)v10, v11);
    }
    else
    {
      v12 = v10[1];
      *v9 = *v10;
      v9[1] = v12;
    }
    *(_QWORD *)(v2 + 56) = *(_QWORD *)(v8 + 56);
    v13 = *(int *)(type metadata accessor for ActivityEventContent(0) + 32);
    v14 = (_QWORD *)(v2 + v13);
    v15 = v8 + v13;
    v16 = *(_QWORD *)(v15 + 8);
    *v14 = *(_QWORD *)v15;
    v14[1] = v16;
    v37 = sub_1C078DE84();
    v17 = *(int *)(v37 + 20);
    v18 = (_QWORD *)((char *)v14 + v17);
    v19 = v15 + v17;
    v20 = *(_QWORD *)(v15 + v17 + 8);
    *v18 = *(_QWORD *)(v15 + v17);
    v18[1] = v20;
    v18[2] = *(_QWORD *)(v15 + v17 + 16);
    sub_1C077674C();
    sub_1C07B885C();
    v35 = v19 + v21;
    v36 = (char *)v18 + v21;
    v22 = sub_1C0776744();
    v23 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
    sub_1C077AEBC();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v23(v36, v35, v22);
    *((_BYTE *)v18 + *(int *)(v15 + 28)) = *(_BYTE *)(v19 + *(int *)(v15 + 28));
    v24 = *(int *)(v38 + 28);
    v25 = (_QWORD *)((char *)v0 + v24);
    v26 = (_QWORD *)((char *)v1 + v24);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    v28 = *(int *)(v37 + 20);
    v29 = (_QWORD *)((char *)v25 + v28);
    v30 = (char *)v26 + v28;
    v31 = *(_QWORD *)((char *)v26 + v28 + 8);
    *v29 = *(_QWORD *)((char *)v26 + v28);
    v29[1] = v31;
    v29[2] = *(_QWORD *)((char *)v26 + v28 + 16);
    v32 = *(int *)(v15 + 24);
    v33 = (char *)v25 + v28 + v32;
    v34 = &v30[v32];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C077AE90();
    v23(v33, (uint64_t)v34, v22);
    *((_BYTE *)v29 + *(int *)(v15 + 28)) = v30[*(int *)(v15 + 28)];
  }
  sub_1C0781AD8();
}

uint64_t _s24IntelligencePlatformCore26ActivityEventWithBehaviorsVwxx_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v14)(uint64_t, _QWORD);

  sub_1C0797AD4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = v0 + *(int *)(v1 + 24);
  v3 = sub_1C077AE98();
  v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
  v4(v2, v3);
  v5 = sub_1C07ACF80(&qword_1ED74AF90);
  v4(v2 + *(int *)(v5 + 28), v3);
  v6 = v2 + *(int *)(v5 + 32);
  if (*(_QWORD *)(v6 + 48))
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v6 + 24);
  swift_bridgeObjectRelease();
  sub_1C079C24C();
  v8 = v6 + v7;
  swift_bridgeObjectRelease();
  v9 = v8 + *(int *)(sub_1C078DE84() + 20);
  swift_bridgeObjectRelease();
  sub_1C077674C();
  sub_1C07B885C();
  v11 = v9 + v10;
  sub_1C0776744();
  sub_1C07BCD00();
  v14 = *(void (**)(uint64_t, _QWORD))(v12 + 8);
  v14(v11, v4);
  sub_1C07A9D00();
  sub_1C07A9D00();
  return ((uint64_t (*)(uint64_t, _QWORD))v14)(v0 + *(int *)(v8 + 24), v4);
}

void _s24IntelligencePlatformCore26ActivityEventWithBehaviorsVwcp_0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  sub_1C077AE98();
  sub_1C07BC544();
  sub_1C077AEBC();
  sub_1C07A66B4();
  v8 = sub_1C07ACF80(&qword_1ED74AF90);
  sub_1C0795FEC((uint64_t)&v6[*(int *)(v8 + 28)], (uint64_t)&v7[*(int *)(v8 + 28)]);
  v9 = (_OWORD *)sub_1C07995DC();
  if (v11)
  {
    sub_1C079F2A0((uint64_t)v9, (uint64_t)v10, v11);
  }
  else
  {
    v12 = v10[1];
    *v9 = *v10;
    v9[1] = v12;
  }
  *(_QWORD *)(v3 + 56) = *(_QWORD *)(v8 + 56);
  v13 = *(int *)(type metadata accessor for ActivityEventContent(0) + 32);
  v14 = (_QWORD *)(v3 + v13);
  v15 = v8 + v13;
  v16 = *(_QWORD *)(v15 + 8);
  *v14 = *(_QWORD *)v15;
  v14[1] = v16;
  v38 = sub_1C078DE84();
  v17 = *(int *)(v38 + 20);
  v18 = (_QWORD *)((char *)v14 + v17);
  v19 = v15 + v17;
  v20 = *(_QWORD *)(v15 + v17 + 8);
  *v18 = *(_QWORD *)(v15 + v17);
  v18[1] = v20;
  v18[2] = *(_QWORD *)(v15 + v17 + 16);
  sub_1C077674C();
  sub_1C07B885C();
  v22 = (char *)v18 + v21;
  v23 = v19 + v21;
  v24 = sub_1C0776744();
  v25 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
  sub_1C077AEBC();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v25(v22, v23, v24);
  v26 = (void (*)(char *, char *, uint64_t))v25;
  *((_BYTE *)v18 + *(int *)(v15 + 28)) = *(_BYTE *)(v19 + *(int *)(v15 + 28));
  v27 = *(int *)(a3 + 28);
  v28 = (_QWORD *)((char *)a1 + v27);
  v29 = (_QWORD *)((char *)a2 + v27);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  v31 = *(int *)(v38 + 20);
  v32 = (_QWORD *)((char *)v28 + v31);
  v33 = (char *)v29 + v31;
  v34 = *(_QWORD *)((char *)v29 + v31 + 8);
  *v32 = *(_QWORD *)((char *)v29 + v31);
  v32[1] = v34;
  v32[2] = *(_QWORD *)((char *)v29 + v31 + 16);
  v35 = *(int *)(v15 + 24);
  v36 = (char *)v28 + v31 + v35;
  v37 = &v33[v35];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C077AE90();
  v26(v36, v37, v24);
  *((_BYTE *)v32 + *(int *)(v15 + 28)) = v33[*(int *)(v15 + 28)];
  sub_1C0781AD8();
}

void _s24IntelligencePlatformCore26ActivityEventWithBehaviorsVwca_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;

  sub_1C077AEA0();
  v4 = v3;
  sub_1C0797AD4();
  *v6 = *v5;
  *(_QWORD *)(v0 + 8) = v5[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0778580();
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0778580();
  v7 = *(int *)(v4 + 24);
  v8 = v0 + v7;
  v9 = v1 + v7;
  sub_1C077AE98();
  sub_1C07BCD00();
  sub_1C0790CA0();
  v10 = sub_1C07ACF80(&qword_1ED74AF90);
  sub_1C07A365C(v10);
  v11 = *(int *)(v2 + 32);
  v12 = v8 + v11;
  v13 = v9 + v11;
  *(_BYTE *)v12 = *(_BYTE *)(v9 + v11);
  v14 = *(_QWORD *)(v9 + v11 + 8);
  *(_BYTE *)(v12 + 16) = *(_BYTE *)(v13 + 16);
  *(_QWORD *)(v12 + 8) = v14;
  v15 = *(_QWORD *)(v13 + 48);
  if (!*(_QWORD *)(v12 + 48))
  {
    if (v15)
    {
      *(_QWORD *)(v12 + 48) = v15;
      (**(void (***)(uint64_t, uint64_t))(v15 - 8))(v12 + 24, v13 + 24);
      goto LABEL_8;
    }
LABEL_7:
    v16 = *(_OWORD *)(v13 + 40);
    *(_OWORD *)(v12 + 24) = *(_OWORD *)(v13 + 24);
    *(_OWORD *)(v12 + 40) = v16;
    goto LABEL_8;
  }
  if (!v15)
  {
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v12 + 24);
    goto LABEL_7;
  }
  sub_1C07D2198((uint64_t *)(v12 + 24), (uint64_t *)(v13 + 24));
LABEL_8:
  *(_QWORD *)(v12 + 56) = *(_QWORD *)(v13 + 56);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0778580();
  v17 = *(int *)(type metadata accessor for ActivityEventContent(0) + 32);
  v18 = (_QWORD *)(v12 + v17);
  v19 = (_QWORD *)(v13 + v17);
  *v18 = *v19;
  v18[1] = v19[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0778580();
  v20 = sub_1C078DE84();
  v21 = *(int *)(v20 + 20);
  v22 = (_QWORD *)((char *)v18 + v21);
  *v22 = *(_QWORD *)((char *)v19 + v21);
  v22[1] = *(_QWORD *)((char *)v19 + v21 + 8);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0778580();
  v23 = sub_1C0796F14();
  sub_1C0787740();
  sub_1C07A66B4();
  sub_1C079191C(*(int *)(v23 + 28));
  v25 = v1 + v24;
  *v18 = *(_QWORD *)(v1 + v24);
  v18[1] = *(_QWORD *)(v1 + v24 + 8);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  v26 = *(int *)(v20 + 20);
  v27 = (_QWORD *)((char *)v18 + v26);
  v28 = v25 + v26;
  *v27 = *(_QWORD *)(v25 + v26);
  v27[1] = *(_QWORD *)(v25 + v26 + 8);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  v27[2] = *(_QWORD *)(v28 + 16);
  sub_1C0795FEC((uint64_t)v27 + *(int *)(v23 + 24), v28 + *(int *)(v23 + 24));
  *((_BYTE *)v27 + *(int *)(v23 + 28)) = *(_BYTE *)(v28 + *(int *)(v23 + 28));
  sub_1C0776728();
}

void _s24IntelligencePlatformCore26ActivityEventWithBehaviorsVwtk_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _OWORD *v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;

  sub_1C077AEA0();
  v24 = v5;
  sub_1C0797AD4();
  *(_OWORD *)v7 = *(_OWORD *)v6;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v6 + 16);
  v9 = *(int *)(v8 + 24);
  v10 = v7 + v9;
  v11 = v6 + v9;
  sub_1C077AE98();
  sub_1C07BCD00();
  sub_1C0790CA0();
  v12 = sub_1C07ACF80(&qword_1ED74AF90);
  sub_1C07A365C(v12);
  v13 = *(int *)(v2 + 32);
  v14 = v10 + v13;
  v15 = v11 + v13;
  *(_BYTE *)v14 = *(_BYTE *)v15;
  *(_BYTE *)(v14 + 16) = *(_BYTE *)(v15 + 16);
  *(_QWORD *)(v14 + 8) = *(_QWORD *)(v15 + 8);
  *(_OWORD *)(v14 + 40) = *(_OWORD *)(v15 + 40);
  *(_OWORD *)(v14 + 24) = *(_OWORD *)(v15 + 24);
  *(_QWORD *)(v14 + 56) = *(_QWORD *)(v15 + 56);
  sub_1C079C24C();
  *(_OWORD *)(v14 + v16) = *(_OWORD *)(v15 + v16);
  sub_1C078DE84();
  sub_1C079BC98();
  *v3 = *v4;
  v17 = sub_1C0796F14();
  sub_1C0787740();
  sub_1C07A66B4();
  *((_BYTE *)v3 + *(int *)(v17 + 28)) = *((_BYTE *)v4 + *(int *)(v17 + 28));
  v18 = *(int *)(v24 + 28);
  v19 = (_OWORD *)(v0 + v18);
  v20 = (_OWORD *)(v1 + v18);
  *v19 = *v20;
  v21 = *(int *)(v14 + 20);
  v22 = (char *)v19 + v21;
  v23 = (char *)v20 + v21;
  *(_OWORD *)v22 = *(_OWORD *)((char *)v20 + v21);
  *((_QWORD *)v22 + 2) = *(_QWORD *)((char *)v20 + v21 + 16);
  sub_1C0795FEC((uint64_t)v19 + v21 + *(int *)(v17 + 24), (uint64_t)v20 + v21 + *(int *)(v17 + 24));
  v22[*(int *)(v17 + 28)] = v23[*(int *)(v17 + 28)];
  sub_1C0776728();
}

void _s24IntelligencePlatformCore26ActivityEventWithBehaviorsVwta_0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  char *v25;
  _QWORD *v26;
  uint64_t v27;

  sub_1C077AEA0();
  v6 = v5;
  sub_1C0797AD4();
  v8 = v7[1];
  *v0 = *v7;
  v0[1] = v8;
  swift_bridgeObjectRelease();
  v0[2] = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRelease();
  v9 = *(int *)(v6 + 24);
  v10 = (char *)v0 + v9;
  v11 = v1 + v9;
  sub_1C077AE98();
  sub_1C07BCD00();
  sub_1C0790CA0();
  v12 = sub_1C07ACF80(&qword_1ED74AF90);
  sub_1C07A365C(v12);
  v13 = *(int *)(v2 + 32);
  v14 = &v10[v13];
  v15 = v11 + v13;
  *v14 = *(_BYTE *)v15;
  v14[16] = *(_BYTE *)(v15 + 16);
  *((_QWORD *)v14 + 1) = *(_QWORD *)(v15 + 8);
  v16 = (uint64_t)&v10[v13 + 24];
  if (*((_QWORD *)v14 + 6))
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v16);
  v17 = *(_OWORD *)(v15 + 40);
  *(_OWORD *)v16 = *(_OWORD *)(v15 + 24);
  *(_OWORD *)(v16 + 16) = v17;
  *((_QWORD *)v14 + 7) = *(_QWORD *)(v15 + 56);
  swift_bridgeObjectRelease();
  v18 = *(int *)(type metadata accessor for ActivityEventContent(0) + 32);
  v19 = &v14[v18];
  sub_1C07AD034(*(_QWORD *)(v15 + v18));
  sub_1C078DE84();
  sub_1C079BC98();
  v20 = v4[1];
  *v3 = *v4;
  v3[1] = v20;
  swift_bridgeObjectRelease();
  v21 = sub_1C0796F14();
  sub_1C0787740();
  sub_1C07A66B4();
  sub_1C079191C(*(int *)(v21 + 28));
  v23 = (uint64_t *)(v1 + v22);
  sub_1C07AD034(*v23);
  v24 = *(int *)(v16 + 20);
  v25 = &v19[v24];
  v26 = (uint64_t *)((char *)v23 + v24);
  v27 = v26[1];
  *(_QWORD *)v25 = *v26;
  *((_QWORD *)v25 + 1) = v27;
  swift_bridgeObjectRelease();
  *((_QWORD *)v25 + 2) = v26[2];
  sub_1C0795FEC((uint64_t)&v25[*(int *)(v21 + 24)], (uint64_t)v26 + *(int *)(v21 + 24));
  v25[*(int *)(v21 + 28)] = *((_BYTE *)v26 + *(int *)(v21 + 28));
  sub_1C0776728();
}

uint64_t sub_1C07D3280()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C07D3290()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for ActivityEventWithLocations(uint64_t a1)
{
  return sub_1C0784B00(a1, qword_1ED74C290);
}

uint64_t getEnumTagSinglePayload for ActivityEventPerson.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 3) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v5 = v6 - 4;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityEventPerson.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1C07D3388 + 4 * byte_1C1078A59[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1C07D33BC + 4 * byte_1C1078A54[v4]))();
}

uint64_t sub_1C07D33BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C07D33C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C07D33CCLL);
  return result;
}

uint64_t sub_1C07D33D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C07D33E0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1C07D33E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C07D33EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityEventPerson.CodingKeys()
{
  return &type metadata for ActivityEventPerson.CodingKeys;
}

unint64_t sub_1C07D340C()
{
  unint64_t result;

  result = qword_1EF62F788;
  if (!qword_1EF62F788)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1078C68, &type metadata for ActivityEventPerson.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F788);
  }
  return result;
}

unint64_t sub_1C07D344C()
{
  unint64_t result;

  result = qword_1EF62F790;
  if (!qword_1EF62F790)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1078BD8, &type metadata for ActivityEventPerson.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F790);
  }
  return result;
}

unint64_t sub_1C07D348C()
{
  unint64_t result;

  result = qword_1EF62F798;
  if (!qword_1EF62F798)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1078C00, &type metadata for ActivityEventPerson.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F798);
  }
  return result;
}

uint64_t sub_1C07D34C8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1C07D34D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_1C077F018(*(_QWORD *)(a1 + 8));
    sub_1C077671C();
  }
  else
  {
    v6 = sub_1C07ACF80(&qword_1ED74AF90);
    if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    {
      v7 = v6;
      v8 = *(int *)(a3 + 24);
    }
    else
    {
      v7 = sub_1C078DE84();
      v8 = *(int *)(a3 + 28);
    }
    sub_1C0776754(a1 + v8, a2, v7);
  }
}

uint64_t sub_1C07D3554()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1C07D3564()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1C078DE8C();
  if (v4)
  {
    *(_QWORD *)(v1 + 8) = (v0 - 1);
    sub_1C077671C();
  }
  else
  {
    v5 = v3;
    v6 = v2;
    v7 = sub_1C07ACF80(&qword_1ED74AF90);
    if (*(_DWORD *)(*(_QWORD *)(v7 - 8) + 84) == v6)
    {
      v8 = v7;
      v9 = *(int *)(v5 + 24);
    }
    else
    {
      v8 = sub_1C078DE84();
      v9 = *(int *)(v5 + 28);
    }
    sub_1C077F00C(v1 + v9, v0, v0, v8);
  }
}

uint64_t type metadata accessor for FutureActivityEventWithLocations(uint64_t a1)
{
  return sub_1C0784B00(a1, qword_1ED751EC0);
}

void sub_1C07D35F0()
{
  unint64_t v0;
  unint64_t v1;

  sub_1C07D28F0(319);
  if (v0 <= 0x3F)
  {
    type metadata accessor for SourceIdPrefix();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for ActivityInterval(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1C106ADE0();
    v8 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((_QWORD *)((char *)a1 + *(int *)(a3 + 20)), (_QWORD *)((char *)a2 + *(int *)(a3 + 20)), v7);
    *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t destroy for ActivityInterval(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t);

  v4 = sub_1C106ADE0();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(a1, v4);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + *(int *)(a2 + 20), v4);
}

uint64_t initializeWithCopy for ActivityInterval(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1C106ADE0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithCopy for ActivityInterval(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1C106ADE0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for ActivityInterval(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1C106ADE0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for ActivityInterval(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1C106ADE0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityInterval()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C07D3998(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unsigned int v8;

  v6 = sub_1C106ADE0();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return sub_1C07B2D80(a1, a2, v6);
  v8 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  if (v8 >= 3)
    return v8 - 2;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ActivityInterval()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C07D3A18(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = sub_1C106ADE0();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return sub_1C07B2D8C(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 2;
  return result;
}

uint64_t type metadata accessor for ActivityInterval()
{
  uint64_t result;

  result = qword_1EF62F7F8;
  if (!qword_1EF62F7F8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C07D3AC4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C106ADE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ActivityIntervalType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 2) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v5 = v6 - 3;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityIntervalType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C07D3C0C + 4 * byte_1C1078D15[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C07D3C40 + 4 * asc_1C1078D10[v4]))();
}

uint64_t sub_1C07D3C40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C07D3C48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C07D3C50);
  return result;
}

uint64_t sub_1C07D3C5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C07D3C64);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C07D3C68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C07D3C70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityIntervalType()
{
  return &type metadata for ActivityIntervalType;
}

uint64_t sub_1C07D3C8C()
{
  unint64_t v0;

  v0 = sub_1C1070A2C();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

unint64_t sub_1C07D3CD4(char a1)
{
  if (!a1)
    return 0xD000000000000014;
  if (a1 == 1)
    return 0xD000000000000017;
  return 0xD000000000000013;
}

void sub_1C07D3D30(unsigned __int8 *a1, char *a2)
{
  sub_1C08C62C0(*a1, *a2);
}

void sub_1C07D3D3C()
{
  sub_1C0A53DBC();
}

uint64_t sub_1C07D3D44(uint64_t a1)
{
  char *v1;

  return sub_1C08C9B10(a1, *v1);
}

void sub_1C07D3D4C()
{
  sub_1C0A54788();
}

uint64_t sub_1C07D3D54@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C07D3C8C();
  *a1 = result;
  return result;
}

unint64_t sub_1C07D3D80@<X0>(unint64_t *a1@<X8>)
{
  char *v1;
  unint64_t result;
  unint64_t v4;

  result = sub_1C07D3CD4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1C07D3DAC()
{
  unint64_t result;

  result = qword_1EF62F838;
  if (!qword_1EF62F838)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1078DE0, &type metadata for ActivityIntervalType);
    atomic_store(result, (unint64_t *)&qword_1EF62F838);
  }
  return result;
}

void sub_1C07D3E40()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v6 = MEMORY[0x1E0DEE9D8];
  sub_1C09D30E0();
  v0 = v6;
  v1 = *(_QWORD *)(v6 + 16);
  v2 = *(_QWORD *)(v6 + 24) >> 1;
  v3 = v1 + 1;
  if (v2 <= v1)
  {
    sub_1C09D30E0();
    v0 = v6;
    v2 = *(_QWORD *)(v6 + 24) >> 1;
  }
  *(_QWORD *)(v0 + 16) = v3;
  v4 = v0 + 16 * v1;
  *(_QWORD *)(v4 + 32) = 0xD000000000000022;
  *(_QWORD *)(v4 + 40) = 0x80000001C10E2090;
  if (v2 <= v3)
  {
    sub_1C09D30E0();
    v0 = v6;
  }
  *(_QWORD *)(v0 + 16) = v1 + 2;
  v5 = v0 + 16 * v3;
  *(_QWORD *)(v5 + 32) = 0xD000000000000016;
  *(_QWORD *)(v5 + 40) = 0x80000001C10E20C0;
  sub_1C0898D28(v0);
}

uint64_t sub_1C07D3F7C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  type metadata accessor for MotionStateDistributionProvider();
  v0 = sub_1C0778598();
  *(_QWORD *)(v0 + 16) = 0x404E000000000000;
  type metadata accessor for MotionStateActivityIntervalProvider();
  sub_1C0778598();
  v1 = MotionStateActivityIntervalProvider.init(motionStateDistributionProvider:)(v0);
  v2 = sub_1C0778598();
  sub_1C07D4008((uint64_t)v1, (uint64_t)sub_1C07D4004, 0);
  return v2;
}

_QWORD *sub_1C07D4008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;

  v4 = sub_1C1070420();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1C0778564();
  v8 = v7 - v6;
  v9 = sub_1C10703FC();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v9);
  sub_1C0778564();
  v11 = sub_1C106F838();
  MEMORY[0x1E0C80A78](v11);
  sub_1C0778564();
  v3[5] = 0x404E000000000000;
  sub_1C077583C(v12, (unint64_t *)&qword_1ED760180);
  sub_1C106F82C();
  sub_1C0780378((unint64_t *)&qword_1ED758DB0, 255, v10, MEMORY[0x1E0DEF828]);
  sub_1C07ACF80((uint64_t *)&unk_1ED758CF0);
  sub_1C07D4BA8();
  sub_1C1070660();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v8, *MEMORY[0x1E0DEF8D0], v4);
  v3[6] = sub_1C1070444();
  v3[2] = a2;
  v3[3] = a3;
  v3[4] = a1;
  return v3;
}

uint64_t sub_1C07D41D4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = v1;
  v2[4] = type metadata accessor for ActivityInterval();
  v2[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C07D4230()
{
  uint64_t *v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  v0[6] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_1C07D4288;
  return sub_1C0C3BA2C(v0[5], v0[2]);
}

uint64_t sub_1C07D4288()
{
  sub_1C07862EC();
  return swift_task_switch();
}

uint64_t sub_1C07D42D0()
{
  uint64_t v0;
  uint64_t result;
  double v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1C106F97C();
  result = sub_1C106ACD8();
  v3 = v2 / 60.0;
  if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v3 < 9.22337204e18)
  {
    sub_1C07A66C4(result, 0xD000000000000022);
    v4 = *(_QWORD *)(v0 + 40);
    sub_1C07A66C4(v5, 0xD000000000000016);
    v6 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v7 = sub_1C07D48DC(v6);
    swift_bridgeObjectRelease_n();
    sub_1C07D4B34(v4);
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v7);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1C07D446C@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = sub_1C0780378(&qword_1EF62F950, a1, (uint64_t (*)(uint64_t))type metadata accessor for ActivityIntervalSignal, (uint64_t)&unk_1C1078ED0);
  *a2 = a1;
  a2[1] = v2;
  a2[2] = v5;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return swift_retain();
}

uint64_t sub_1C07D44D0(uint64_t a1)
{
  sub_1C077583C(a1, (unint64_t *)&qword_1ED758D30);
  return sub_1C106F97C();
}

uint64_t sub_1C07D4510(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C07D455C;
  return sub_1C07D41D4(a1);
}

uint64_t sub_1C07D455C(uint64_t a1)
{
  uint64_t v1;

  sub_1C07862EC();
  return (*(uint64_t (**)(uint64_t))(v1 + 8))(a1);
}

id sub_1C07D45A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077583C(a1, (unint64_t *)&qword_1ED758D30);
  v4 = sub_1C106F97C();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v5 = sub_1C089A990(a1, a2, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v5)
  {
    if (a1 == 0xD000000000000022 && a2 == 0x80000001C10E2090)
      return objc_msgSend((id)objc_opt_self(), sel_featureValueWithDouble_, 0.0);
    sub_1C07AD9BC();
    if ((sub_1C1070CB4() & 1) != 0)
      return objc_msgSend((id)objc_opt_self(), sel_featureValueWithDouble_, 0.0);
    if (a1 != 0xD000000000000016 || a2 != 0x80000001C10E20C0)
    {
      sub_1C07AD9BC();
      if ((sub_1C1070CB4() & 1) == 0)
        return 0;
    }
    sub_1C07F5FD8();
    return (id)v6;
  }
  return (id)v5;
}

uint64_t sub_1C07D4754()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return v0;
}

uint64_t sub_1C07D4780()
{
  sub_1C07D4754();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ActivityIntervalSignal()
{
  return objc_opt_self();
}

uint64_t sub_1C07D47C0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C07D4C70;
  return sub_1C07D4510(a1);
}

uint64_t sub_1C07D480C(uint64_t a1)
{
  return sub_1C07D44D0(a1);
}

uint64_t sub_1C07D4820@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  return sub_1C07D446C(a1, a2);
}

void sub_1C07D4840()
{
  sub_1C07D3E40();
}

uint64_t sub_1C07D4854()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C07D4864(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1C0780378((unint64_t *)&unk_1EF62F920, a2, (uint64_t (*)(uint64_t))type metadata accessor for ActivityIntervalSignal, (uint64_t)&unk_1C1078E88);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1C07D48A0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1C0780378(&qword_1EF62F930, a2, (uint64_t (*)(uint64_t))type metadata accessor for ActivityIntervalSignal, (uint64_t)&unk_1C1078EB4);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C07D48DC(uint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t i;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  _QWORD *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[32];
  _BYTE v26[32];
  int64_t v27;

  sub_1C07ACF80(&qword_1EF62F948);
  result = sub_1C10709CC();
  v3 = (_QWORD *)result;
  v4 = 0;
  v5 = *(_QWORD *)(a1 + 64);
  v24 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v5;
  v27 = (unint64_t)(v6 + 63) >> 6;
  v9 = result + 64;
  if ((v7 & v5) == 0)
    goto LABEL_5;
LABEL_4:
  v10 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v10 | (v4 << 6); ; i = __clz(__rbit64(v13)) + (v4 << 6))
  {
    v15 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v17 = *v15;
    v16 = v15[1];
    sub_1C0788E98(*(_QWORD *)(a1 + 56) + 32 * i, (uint64_t)v26);
    sub_1C07D4B70(0, (unint64_t *)&qword_1ED758D30);
    sub_1C0788E98((uint64_t)v26, (uint64_t)v25);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v18 = sub_1C0E0CF50((uint64_t)v25);
    if (!v18)
      v18 = objc_msgSend((id)objc_opt_self(), sel_undefinedFeatureValueWithType_, 0);
    v19 = v18;
    result = _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v26);
    *(_QWORD *)(v9 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v20 = (_QWORD *)(v3[6] + 16 * i);
    *v20 = v17;
    v20[1] = v16;
    *(_QWORD *)(v3[7] + 8 * i) = v19;
    v21 = v3[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
    {
      __break(1u);
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v3[2] = v23;
    if (v8)
      goto LABEL_4;
LABEL_5:
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_26;
    if (v12 >= v27)
      return (uint64_t)v3;
    v13 = *(_QWORD *)(v24 + 8 * v12);
    ++v4;
    if (!v13)
    {
      v4 = v12 + 1;
      if (v12 + 1 >= v27)
        return (uint64_t)v3;
      v13 = *(_QWORD *)(v24 + 8 * v4);
      if (!v13)
      {
        v4 = v12 + 2;
        if (v12 + 2 >= v27)
          return (uint64_t)v3;
        v13 = *(_QWORD *)(v24 + 8 * v4);
        if (!v13)
          break;
      }
    }
LABEL_18:
    v8 = (v13 - 1) & v13;
  }
  v14 = v12 + 3;
  if (v14 >= v27)
    return (uint64_t)v3;
  v13 = *(_QWORD *)(v24 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v27)
      return (uint64_t)v3;
    v13 = *(_QWORD *)(v24 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_18;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1C07D4B34(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ActivityInterval();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C07D4B70(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_1C07D4BA8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED758D00;
  if (!qword_1ED758D00)
  {
    v1 = sub_1C07D4BEC((uint64_t *)&unk_1ED758CF0);
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED758D00);
  }
  return result;
}

uint64_t sub_1C07D4BEC(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1C3BA8168](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_1C07D4C34()
{
  unint64_t result;

  result = qword_1EF62F958;
  if (!qword_1EF62F958)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1096D30, &type metadata for FeatureSnapshotAsyncSequence);
    atomic_store(result, (unint64_t *)&qword_1EF62F958);
  }
  return result;
}

void sub_1C07D4C74()
{
  uint64_t v0;

  if (!*(_QWORD *)(v0 + 16))
  {
    *(_QWORD *)(v0 + 16) = sub_1C07D4CC0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0775844();
  }
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C077671C();
}

uint64_t sub_1C07D4CC0()
{
  _QWORD *v0;
  void *v1;
  uint64_t v3;

  v1 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C07D5964(v0, &v3);
  objc_autoreleasePoolPop(v1);
  return v3;
}

void sub_1C07D4D0C()
{
  uint64_t v0;

  if (!*(_QWORD *)(v0 + 24))
  {
    *(_QWORD *)(v0 + 24) = sub_1C07D4D5C(v0);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0775844();
  }
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C077671C();
}

uint64_t sub_1C07D4D5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;

  v2 = sub_1C106F544();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC24IntelligencePlatformCore23ActivityModelDataSource_ekEventSourceAllowed) == 1)
    return sub_1C07D4E70();
  sub_1C106F190();
  v7 = sub_1C106F538();
  v8 = sub_1C10703A8();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_1C0771000, v7, v8, "Siri Toggle: Pipeline is blocked from sourcing EKEvents for activity inference", v9, 2u);
    MEMORY[0x1C3BA8270](v9, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1C07D4E70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_1C106F544();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106F190();
  v6 = sub_1C106F538();
  v7 = sub_1C10703A8();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)sub_1C0780FC8();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_1C0771000, v6, v7, "Query for events from EKEventStore", v8, 2u);
    sub_1C0776778();
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = MEMORY[0x1E0DEE9D8];
  v10 = *(void **)(v1 + 120);
  v11 = (void *)sub_1C106AD38();
  v12 = (void *)sub_1C106AD38();
  v13 = objc_msgSend(v10, sel_predicateForEventsWithStartDate_endDate_calendars_, v11, v12, 0);

  v14 = (void *)MEMORY[0x1C3BA79F4]();
  swift_retain();
  objc_autoreleasePoolPop(v14);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_1C07D6C04;
  *(_QWORD *)(v15 + 24) = v9;
  aBlock[4] = sub_1C07D6C30;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C07D6350;
  aBlock[3] = &unk_1E7A0AFA8;
  v16 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v10, sel_enumerateEventsMatchingPredicate_usingBlock_, v13, v16);

  _Block_release(v16);
  swift_beginAccess();
  v17 = *(_QWORD *)(v9 + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_release();
  return v17;
}

uint64_t sub_1C07D50B0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_1C07D50C8()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v4)(void);

  if (*(_QWORD *)(v0[2] + 32))
  {
    v4 = (uint64_t (*)(void))v0[1];
    v1 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    return sub_1C0798434(v1, v4);
  }
  else
  {
    v3 = (_QWORD *)swift_task_alloc();
    v0[3] = v3;
    *v3 = v0;
    v3[1] = sub_1C07D5134;
    return sub_1C07D51C8();
  }
}

uint64_t sub_1C07D5134(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 32) = a1;
  swift_task_dealloc();
  return sub_1C077AEC4();
}

uint64_t sub_1C07D5188()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 16) + 32) = *(_QWORD *)(v0 + 32);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  return sub_1C0798434(*(_QWORD *)(v0 + 32), *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C07D51C8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[7] = v0;
  v2 = sub_1C106F544();
  v1[8] = v2;
  v1[9] = *(_QWORD *)(v2 - 8);
  v1[10] = sub_1C0779644();
  return sub_1C077AEC4();
}

uint64_t sub_1C07D5214()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;

  sub_1C07D4C74();
  v2 = MEMORY[0x1E0DEE9D8];
  v23 = MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    v4 = v1 + 32;
    do
    {
      sub_1C07D6D1C(v4, (uint64_t)(v0 + 2));
      v5 = v0[5];
      v6 = v0[6];
      v7 = (_QWORD *)sub_1C0796F24();
      sub_1C07A9480(v7, v8);
      v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 72))(v5, v6);
      v10 = _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)(v0 + 2));
      if (v9)
      {
        MEMORY[0x1C3BA6800](v10);
        if (*(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1C106FF58();
        sub_1C106FFC4();
        sub_1C106FF28();
      }
      v4 += 40;
      --v3;
    }
    while (v3);
    v2 = v23;
  }
  v0[11] = v2;
  sub_1C0775844();
  sub_1C106F190();
  v11 = sub_1C106F538();
  v12 = sub_1C10703A8();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)sub_1C0780FC8();
    *(_WORD *)v13 = 0;
    _os_log_impl(&dword_1C0771000, v11, v12, "Query for transactions from payment service", v13, 2u);
    sub_1C0776778();
  }
  v15 = v0[9];
  v14 = v0[10];
  v17 = (_QWORD *)v0[7];
  v16 = v0[8];

  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  v18 = v17[14];
  sub_1C07A9480(v17 + 10, v17[13]);
  v22 = (uint64_t (*)(uint64_t))(**(int **)(v18 + 8) + *(_QWORD *)(v18 + 8));
  v19 = (_QWORD *)swift_task_alloc();
  v0[12] = v19;
  *v19 = v0;
  v19[1] = sub_1C07D540C;
  v20 = sub_1C0796F24();
  return v22(v20);
}

uint64_t sub_1C07D540C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!a1)
    a1 = MEMORY[0x1E0DEE9D8];
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v3 + 8))(a1);
}

void sub_1C07D5488(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, __int128 *a5, char a6)
{
  char *v6;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);

  *((_QWORD *)v6 + 2) = 0;
  *((_QWORD *)v6 + 3) = 0;
  *((_QWORD *)v6 + 4) = 0;
  v13 = &v6[OBJC_IVAR____TtC24IntelligencePlatformCore23ActivityModelDataSource_startDate];
  v14 = sub_1C077AE98();
  v15 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32);
  v15(v13, a1, v14);
  v15(&v6[OBJC_IVAR____TtC24IntelligencePlatformCore23ActivityModelDataSource_endDate], a2, v14);
  sub_1C077DD60(a4, (uint64_t)(v6 + 40));
  sub_1C077DD60(a5, (uint64_t)(v6 + 80));
  *((_QWORD *)v6 + 15) = a3;
  v6[OBJC_IVAR____TtC24IntelligencePlatformCore23ActivityModelDataSource_ekEventSourceAllowed] = a6;
  sub_1C0776760();
}

void sub_1C07D553C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t, uint64_t);
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void (*v22)(uint64_t, uint64_t);
  id v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  _UNKNOWN **v33;
  __int128 v34;
  uint64_t v35;
  _UNKNOWN **v36;

  v27 = a6;
  v28 = a4;
  v11 = sub_1C077AE98();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  sub_1C078D30C();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v25 - v14;
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v26 = a1;
  v16((char *)&v25 - v14, a1, v11);
  v25 = a2;
  v16((char *)v6, a2, v11);
  if (a3)
    v17 = a3;
  else
    v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CAA078]), sel_init);
  sub_1C07D6CD8(v28, (uint64_t)&v31, &qword_1ED74B790);
  if (v32)
  {
    sub_1C077DD60(&v31, (uint64_t)&v34);
    v18 = a3;
  }
  else
  {
    v19 = objc_allocWithZone(MEMORY[0x1E0D66F08]);
    v20 = a3;
    v21 = objc_msgSend(v19, sel_init);
    v35 = sub_1C07D4B70(0, &qword_1ED74D328);
    v36 = &off_1E7A27C58;
    *(_QWORD *)&v34 = v21;
    sub_1C0784B30((uint64_t)&v31, &qword_1ED74B790);
  }
  sub_1C07D6CD8(a5, (uint64_t)&v29, &qword_1ED74C150);
  if (v30)
  {

    sub_1C0784B30(a5, &qword_1ED74C150);
    sub_1C0784B30(v28, &qword_1ED74B790);
    v22 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v22(v25, v11);
    v22(v26, v11);
    sub_1C077DD60(&v29, (uint64_t)&v31);
  }
  else
  {
    v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D672B0]), sel_init);
    v32 = sub_1C07D4B70(0, &qword_1ED74D388);
    v33 = &off_1E7A27CD0;

    *(_QWORD *)&v31 = v23;
    sub_1C0784B30(a5, &qword_1ED74C150);
    sub_1C0784B30(v28, &qword_1ED74B790);
    v24 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v24(v25, v11);
    v24(v26, v11);
    sub_1C0784B30((uint64_t)&v29, &qword_1ED74C150);
  }
  swift_allocObject();
  sub_1C07D5488((uint64_t)v15, v6, (uint64_t)v17, &v34, &v31, v27 & 1);
  sub_1C0776760();
}

void sub_1C07D57D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 40);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 80);

  v1 = v0 + OBJC_IVAR____TtC24IntelligencePlatformCore23ActivityModelDataSource_startDate;
  v2 = sub_1C077AE98();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore23ActivityModelDataSource_endDate, v2);
  sub_1C077671C();
}

uint64_t sub_1C07D5860()
{
  sub_1C07D57D8();
  return swift_deallocClassInstance();
}

uint64_t sub_1C07D5884()
{
  return type metadata accessor for ActivityModelDataSource();
}

uint64_t type metadata accessor for ActivityModelDataSource()
{
  uint64_t result;

  result = qword_1ED74B848;
  if (!qword_1ED74B848)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C07D58C4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C106ADE0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_1C07D5964(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;

  v4 = sub_1C106F544();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106F190();
  v8 = sub_1C106F538();
  v9 = sub_1C10703A8();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_1C0771000, v8, v9, "Query for wallet passes from PassKit", v10, 2u);
    MEMORY[0x1C3BA8270](v10, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v11 = a1 + 5;
  v13 = a1[8];
  v12 = a1[9];
  sub_1C07A9480(v11, v13);
  v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v13, v12);
  v17 = v14;
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D66DB8]), sel_init);
  if (v15)
  {
    if (sub_1C07D6C64(v15))
    {
      sub_1C0A56218();
      swift_bridgeObjectRelease();
      sub_1C0BD9CE8();
      v14 = v17;
    }
    *a2 = v14;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1C07D5AE8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  _OWORD *v21;
  uint64_t v22;
  char v23;
  void (*v24)(char *, char *, uint64_t);
  void (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  char v28;
  void (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31[2];
  char *v32;
  _OWORD *v33;

  v31[1] = a2;
  v32 = a3;
  v33 = a4;
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C106ADE0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)v31 - v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)v31 - v16;
  v19 = a1[3];
  v18 = a1[4];
  v31[0] = (uint64_t)a1;
  sub_1C07A9480(a1, v19);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v19, v18);
  if (sub_1C07B2D80((uint64_t)v7, 1, v8) == 1)
  {
    result = sub_1C0784B30((uint64_t)v7, (uint64_t *)&unk_1ED762690);
    v21 = v33;
    *v33 = 0u;
    v21[1] = 0u;
    *((_QWORD *)v21 + 4) = 0;
    return result;
  }
  v22 = (uint64_t)v33;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v17, v7, v8);
  v23 = sub_1C106AD50();
  v24 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v24(v15, v17, v8);
  v24(v12, v32, v8);
  if ((v23 & 1) != 0)
  {
    v25 = *(void (**)(uint64_t))(v9 + 8);
    v26 = sub_1C0796F24();
    v25(v26);
    ((void (*)(char *, uint64_t))v25)(v15, v8);
    result = ((uint64_t (*)(char *, uint64_t))v25)(v17, v8);
    v27 = v22;
LABEL_6:
    *(_QWORD *)(v27 + 32) = 0;
    *(_OWORD *)v27 = 0u;
    *(_OWORD *)(v27 + 16) = 0u;
    return result;
  }
  v28 = sub_1C106AD44();
  v29 = *(void (**)(uint64_t))(v9 + 8);
  v30 = sub_1C0796F24();
  v29(v30);
  ((void (*)(char *, uint64_t))v29)(v15, v8);
  result = ((uint64_t (*)(char *, uint64_t))v29)(v17, v8);
  v27 = v22;
  if ((v28 & 1) != 0)
    goto LABEL_6;
  return sub_1C07D6D1C(v31[0], v22);
}

uint64_t sub_1C07D5D14(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;

  v2[2] = a1;
  v2[3] = a2;
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  v2[4] = sub_1C0779644();
  v3 = sub_1C077AE98();
  v2[5] = v3;
  v2[6] = *(_QWORD *)(v3 - 8);
  v2[7] = sub_1C0793600();
  v2[8] = sub_1C0793600();
  v2[9] = sub_1C0793600();
  v2[10] = sub_1C0793600();
  v2[11] = sub_1C0793600();
  v2[12] = sub_1C0793600();
  v4 = (_QWORD *)swift_task_alloc();
  v2[13] = v4;
  *v4 = v2;
  v4[1] = sub_1C07D5DC0;
  return sub_1C07D50B0();
}

uint64_t sub_1C07D5DC0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = a1;
  swift_task_dealloc();
  return sub_1C077AEC4();
}

void sub_1C07D5E14()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;

  v1 = *(_QWORD *)(v0 + 112);
  v40 = MEMORY[0x1E0DEE9D8];
  if (v1 >> 62)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v2 = sub_1C10709B4();
    swift_bridgeObjectRelease();
    if (v2)
      goto LABEL_3;
LABEL_25:
    swift_bridgeObjectRelease();
    v33 = MEMORY[0x1E0DEE9D8];
LABEL_26:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    (*(void (**)(uint64_t))(v0 + 8))(v33);
    return;
  }
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v2)
    goto LABEL_25;
LABEL_3:
  if (v2 >= 1)
  {
    v3 = 0;
    v39 = *(_QWORD *)(v0 + 48);
    v4 = v1 & 0xC000000000000001;
    v34 = v2;
    v35 = *(_QWORD *)(v0 + 112) + 32;
    v36 = v1 & 0xC000000000000001;
    while (1)
    {
      v5 = v4 ? (id)MEMORY[0x1C3BA70DC](v3, *(_QWORD *)(v0 + 112)) : *(id *)(v35 + 8 * v3);
      v6 = v5;
      v7 = objc_msgSend(v5, sel_transactionDate, v34);
      if (!v7)
        break;
      v8 = v7;
      v9 = *(_QWORD *)(v0 + 88);
      v11 = *(_QWORD *)(v0 + 32);
      v10 = *(_QWORD *)(v0 + 40);
      sub_1C106AD98();

      (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 32))(v11, v9, v10);
      sub_1C07B2D8C(v11, 0, 1, v10);
      if (sub_1C07B2D80(v11, 1, v10) == 1)
        goto LABEL_13;
      v12 = *(_QWORD *)(v0 + 96);
      v14 = *(_QWORD *)(v0 + 72);
      v13 = *(_QWORD *)(v0 + 80);
      v15 = *(_QWORD *)(v0 + 16);
      sub_1C07A42E4(v12, *(_QWORD *)(v0 + 32));
      v16 = objc_msgSend(v6, sel_merchant);

      v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16);
      sub_1C07A42E4(v13, v12);
      sub_1C07A42E4(v14, v15);
      v38 = v6;
      if (v16)
        v37 = sub_1C106AD44();
      else
        v37 = 0;
      v20 = *(_QWORD *)(v0 + 96);
      v21 = *(_QWORD *)(v0 + 80);
      v23 = *(_QWORD *)(v0 + 56);
      v22 = *(_QWORD *)(v0 + 64);
      v24 = *(_QWORD *)(v0 + 40);
      v25 = *(_QWORD *)(v0 + 24);
      v26 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
      v26(*(_QWORD *)(v0 + 72), v24);
      v26(v21, v24);
      v17(v22, v20, v24);
      v17(v23, v25, v24);
      v28 = *(_QWORD *)(v0 + 56);
      v27 = *(_QWORD *)(v0 + 64);
      if ((v37 & 1) != 0)
      {
        v29 = sub_1C106AD50();
        sub_1C079E144(v28);
        sub_1C079E144(v27);
        v2 = v34;
        v4 = v36;
        if ((v29 & 1) != 0)
        {
          v30 = v38;
          MEMORY[0x1C3BA6800]();
          if (*(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1C106FF58();
          v31 = *(_QWORD *)(v0 + 96);
          v32 = *(_QWORD *)(v0 + 40);
          sub_1C106FFC4();
          sub_1C106FF28();

          v26(v31, v32);
          v4 = v36;
          goto LABEL_22;
        }
      }
      else
      {
        sub_1C079E144(*(_QWORD *)(v0 + 56));
        sub_1C079E144(v27);
        v2 = v34;
        v4 = v36;
      }
      v26(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 40));

LABEL_22:
      if (v2 == ++v3)
      {
        swift_bridgeObjectRelease();
        v33 = v40;
        goto LABEL_26;
      }
    }
    sub_1C07B2D8C(*(_QWORD *)(v0 + 32), 1, 1, *(_QWORD *)(v0 + 40));
LABEL_13:
    v18 = v6;
    v19 = *(_QWORD *)(v0 + 32);

    sub_1C0784B30(v19, (uint64_t *)&unk_1ED762690);
    goto LABEL_22;
  }
  __break(1u);
}

void sub_1C07D61C0(void **a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;

  v4 = *a1;
  v5 = sub_1C106FB14();
  if (sub_1C09E9710(v5, v6, v4)
    && (sub_1C07ACF80((uint64_t *)&unk_1EF62F960), sub_1C07ACF80(&qword_1ED758CC0), (swift_dynamicCast() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    swift_beginAccess();
    MEMORY[0x1C3BA6800](v4);
    sub_1C078442C(*(_QWORD *)((*(_QWORD *)(a3 + 16) & 0xFFFFFFFFFFFFF8) + 0x10));
    sub_1C106FFC4();
    sub_1C106FF28();
    swift_endAccess();
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v7 = sub_1C106F544();
    sub_1C079E000(v7, (uint64_t)qword_1ED762AF8);
    v8 = sub_1C106F538();
    v9 = sub_1C10703A8();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_1C0771000, v8, v9, "Could not get suggested event meta data from event object", v10, 2u);
      MEMORY[0x1C3BA8270](v10, -1, -1);
    }

  }
}

void sub_1C07D6350(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

void sub_1C07D63AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v5 = sub_1C07ACF80(&qword_1ED759DF0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v6);
  sub_1C078D30C();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v27 - v8;
  v10 = sub_1C07ACF80(&qword_1ED75D0B8);
  sub_1C077C078();
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v27 - v15;
  sub_1C07D4D0C();
  v18 = v17;
  v19 = sub_1C077AE98();
  sub_1C07D65AC();
  if ((sub_1C106FA84() & 1) != 0)
  {
    v20 = *(int *)(v5 + 48);
    v28 = v10;
    v29 = v18;
    v21 = (uint64_t)&v9[v20];
    v22 = *(_QWORD *)(v19 - 8);
    sub_1C079842C((uint64_t)v9, a1);
    sub_1C079842C(v21, a2);
    v23 = v2 + *(int *)(v5 + 48);
    sub_1C079842C(v2, (uint64_t)v9);
    sub_1C079842C(v23, v21);
    sub_1C079842C((uint64_t)v14, v2);
    v24 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    v24(v23, v19);
    v25 = v2 + *(int *)(v5 + 48);
    sub_1C079842C(v2, (uint64_t)v9);
    sub_1C079842C(v25, v21);
    sub_1C079842C((uint64_t)&v14[*(int *)(v28 + 36)], v25);
    v24(v2, v19);
    v26 = sub_1C07D65EC((uint64_t)v14, (uint64_t)v16);
    MEMORY[0x1E0C80A78](v26);
    *(&v27 - 2) = (uint64_t)v16;
    sub_1C0D2ED38(sub_1C07D6A84);
    sub_1C0784B30((uint64_t)v16, &qword_1ED75D0B8);
    sub_1C0776760();
  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_1C07D65AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED755A40;
  if (!qword_1ED755A40)
  {
    v1 = sub_1C106ADE0();
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0CB08B0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED755A40);
  }
  return result;
}

uint64_t sub_1C07D65EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1ED75D0B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C07D6634(id *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  void *v24;
  void (*v25)(char *, char *, uint64_t);
  id v26;
  void *v27;
  uint64_t result;
  char *v29;
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;

  v53 = a2;
  v51 = sub_1C07ACF80(&qword_1ED759DF0);
  v3 = MEMORY[0x1E0C80A78](v51);
  v52 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v50 = (char *)&v43 - v5;
  v6 = sub_1C106ADE0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v43 - v11;
  v13 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v43 - v17;
  v47 = sub_1C07ACF80(&qword_1ED75D0B8);
  v19 = MEMORY[0x1E0C80A78](v47);
  v48 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v49 = (uint64_t)&v43 - v21;
  v22 = *a1;
  v23 = objc_msgSend(*a1, sel_startDate);
  if (!v23)
  {
LABEL_8:
    sub_1C07B2D8C((uint64_t)v18, 1, 1, v6);
    goto LABEL_9;
  }
  v24 = v23;
  sub_1C106AD98();

  v54 = v7;
  v25 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v25(v18, v12, v6);
  sub_1C07B2D8C((uint64_t)v18, 0, 1, v6);
  if (sub_1C07B2D80((uint64_t)v18, 1, v6) == 1)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v26 = objc_msgSend(v22, sel_endDate);
  if (!v26)
  {
LABEL_10:
    result = sub_1C07B2D8C((uint64_t)v16, 1, 1, v6);
    goto LABEL_11;
  }
  v27 = v26;
  sub_1C106AD98();

  v46 = v25;
  v25(v16, v12, v6);
  sub_1C07B2D8C((uint64_t)v16, 0, 1, v6);
  result = sub_1C07B2D80((uint64_t)v16, 1, v6);
  if ((_DWORD)result != 1)
  {
    v29 = v18;
    v30 = v54;
    v18 = *(char **)(v54 + 16);
    ((void (*)(char *, char *, uint64_t))v18)(v12, v29, v6);
    ((void (*)(char *, char *, uint64_t))v18)(v10, v16, v6);
    sub_1C07D65AC();
    v31 = sub_1C106FA84();
    v32 = *(void (**)(char *, uint64_t))(v30 + 8);
    v32(v10, v6);
    v32(v12, v6);
    if ((v31 & 1) != 0)
    {
      v33 = v16;
      v44 = v16;
      v45 = v29;
      v35 = v50;
      v34 = v51;
      v36 = &v50[*(int *)(v51 + 48)];
      ((void (*)(char *, char *, uint64_t))v18)(v50, v29, v6);
      ((void (*)(char *, char *, uint64_t))v18)(v36, v33, v6);
      v37 = v52;
      v38 = &v52[*(int *)(v34 + 48)];
      ((void (*)(char *, char *, uint64_t))v18)(v52, v35, v6);
      ((void (*)(char *, char *, uint64_t))v18)(v38, v36, v6);
      v39 = (uint64_t)v48;
      v40 = v46;
      v46(v48, v37, v6);
      v32(v38, v6);
      v41 = &v37[*(int *)(v34 + 48)];
      v40(v37, v35, v6);
      v40(v41, v36, v6);
      v40((char *)(v39 + *(int *)(v47 + 36)), v41, v6);
      v32(v37, v6);
      v42 = v49;
      sub_1C07D65EC(v39, v49);
      v32(v44, v6);
      v32(v45, v6);
      LOBYTE(v36) = sub_1C07D6AA0(v53);
      sub_1C0784B30(v42, &qword_1ED75D0B8);
      return v36 & 1;
    }
    __break(1u);
    goto LABEL_8;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1C07D6A84(id *a1)
{
  uint64_t v1;

  return sub_1C07D6634(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_1C07D6AA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  char v9;
  char v10;
  uint64_t v12;

  v3 = sub_1C07ACF80(&qword_1ED75D0B8);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v12 - v7;
  sub_1C106ADE0();
  sub_1C07D65AC();
  v9 = sub_1C106FA6C();
  sub_1C07D6CD8(v1, (uint64_t)v8, &qword_1ED75D0B8);
  sub_1C07D6CD8(a1, (uint64_t)v6, &qword_1ED75D0B8);
  if ((v9 & 1) != 0)
    v10 = 0;
  else
    v10 = sub_1C106FA6C() ^ 1;
  sub_1C0784B30((uint64_t)v6, &qword_1ED75D0B8);
  sub_1C0784B30((uint64_t)v8, &qword_1ED75D0B8);
  return v10 & 1;
}

uint64_t sub_1C07D6BE0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1C07D6C04(void **a1, uint64_t a2)
{
  uint64_t v2;

  sub_1C07D61C0(a1, a2, v2);
}

uint64_t sub_1C07D6C0C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C07D6C30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t *, uint64_t *);
  uint64_t v5;
  uint64_t v6;

  v3 = *(uint64_t (**)(uint64_t *, uint64_t *))(v2 + 16);
  v5 = a2;
  v6 = a1;
  return v3(&v6, &v5);
}

uint64_t sub_1C07D6C64(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_expiredSectionPasses);

  if (!v2)
    return 0;
  sub_1C07D4B70(0, &qword_1ED74D3D8);
  v3 = sub_1C106FF04();

  return v3;
}

uint64_t sub_1C07D6CD8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_1C07ACF80(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C07D6D1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1C07D6D60(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6574656D61726170 && a2 == 0xEA00000000007372)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1C1070CB4();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1C07D6DF0()
{
  sub_1C1070DF8();
  sub_1C1070E04();
  return sub_1C1070E4C();
}

uint64_t sub_1C07D6E30()
{
  return 0x6574656D61726170;
}

uint64_t sub_1C07D6E4C(_QWORD *a1)
{
  uint64_t v2;

  sub_1C07ACF80(&qword_1EF62F9C0);
  sub_1C0798440();
  MEMORY[0x1E0C80A78](v2);
  sub_1C07795DC();
  sub_1C07A9480(a1, a1[3]);
  sub_1C07D9024();
  sub_1C1070EB8();
  sub_1C07ACF80(&qword_1ED762410);
  sub_1C07D9060(&qword_1ED75D0A8);
  sub_1C1070BB8();
  return sub_1C0787764();
}

_QWORD *sub_1C07D6F40(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v6;

  sub_1C07ACF80(&qword_1ED751328);
  sub_1C0798440();
  MEMORY[0x1E0C80A78](v3);
  sub_1C07795DC();
  v4 = sub_1C07A9480(a1, a1[3]);
  sub_1C07D9024();
  sub_1C1070E94();
  if (v1)
  {
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_1C07ACF80(&qword_1ED762410);
    sub_1C07D9060(&qword_1ED762418);
    sub_1C1070AE0();
    sub_1C0787764();
    v4 = v6;
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)a1);
  }
  return v4;
}

uint64_t sub_1C07D7060()
{
  sub_1C1070DF8();
  sub_1C1070E04();
  return sub_1C1070E4C();
}

uint64_t sub_1C07D70A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C07D6D60(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1C07D70C8()
{
  sub_1C07D9024();
  return sub_1C1070EE8();
}

uint64_t sub_1C07D70F0()
{
  sub_1C07D9024();
  return sub_1C1070EF4();
}

_QWORD *sub_1C07D7118@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1C07D6F40(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1C07D7140(_QWORD *a1)
{
  return sub_1C07D6E4C(a1);
}

uint64_t sub_1C07D7158(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v4 = sub_1C106AB28();
  v5 = *(_QWORD *)(v4 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_1C106F544();
  v9 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  sub_1C0776794();
  sub_1C106AB58();
  if (v2)
  {
    sub_1C106F160();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
    v11 = v2;
    v12 = v2;
    v13 = v1;
    v14 = sub_1C106F538();
    v15 = sub_1C1070390();
    v16 = v15;
    if (os_log_type_enabled(v14, v15))
    {
      v17 = sub_1C0775854();
      v29 = v9;
      v18 = v17;
      v26 = sub_1C0775854();
      v32 = v26;
      *(_DWORD *)v18 = 136315394;
      v27 = 0;
      sub_1C07D8F9C(&qword_1ED762678, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      v25 = v16;
      v19 = sub_1C1070C0C();
      v31 = sub_1C079065C(v19, v20);
      v28 = v13;
      sub_1C10705AC();
      sub_1C077960C();
      sub_1C079C264();
      *(_WORD *)(v18 + 12) = 2080;
      swift_getErrorValue();
      v21 = sub_1C1070D74();
      v31 = sub_1C079065C(v21, v22);
      sub_1C10705AC();
      sub_1C077960C();
      sub_1C0779654();
      sub_1C0779654();
      _os_log_impl(&dword_1C0771000, v14, (os_log_type_t)v25, "Error: Unable to read file %s with error %s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      sub_1C0776778();
    }
    sub_1C0779654();
    sub_1C079C264();
    sub_1C0779654();
    sub_1C0779654();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v13, v30);
    return 0;
  }
  else
  {
    v28 = v1;
    v29 = v9;
    sub_1C106A708();
    sub_1C077B5BC();
    sub_1C106A6FC();
    v10 = (void *)MEMORY[0x1C3BA79F4]();
    sub_1C07D8FD8();
    sub_1C106A6F0();
    objc_autoreleasePoolPop(v10);
    sub_1C07785A8();
    sub_1C0786308();
    return v32;
  }
}

uint64_t sub_1C07D7474(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t Strong;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30[3];
  _BYTE v31[8];

  v4 = sub_1C106F544();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v25 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v25 - v10;
  swift_beginAccess();
  sub_1C077584C();
  sub_1C089A9D4();
  swift_bridgeObjectRelease();
  v27 = v5;
  if (v29 == 1)
  {
    sub_1C0784B30((uint64_t)&v28, &qword_1ED750B00);
    sub_1C0797AE0();
LABEL_7:
    type metadata accessor for AddressLinkingModel();
    v13 = swift_allocObject();
    sub_1C077584C();
    sub_1C07D7A7C(a1, a2);
    swift_weakInit();
    v29 = 0;
    swift_beginAccess();
    sub_1C077584C();
    sub_1C077AEE4();
    sub_1C0D9965C((uint64_t)&v28);
    sub_1C0797AE0();
    sub_1C106F160();
    sub_1C079430C();
    sub_1C0790CC4();
    v19 = sub_1C106F538();
    v20 = sub_1C1070384();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = sub_1C0775854();
      v25 = sub_1C0775854();
      v30[0] = v25;
      *(_DWORD *)v21 = 136315394;
      v26 = v4;
      v28 = v13;
      sub_1C077AEE4();
      v22 = sub_1C106FB5C();
      v28 = sub_1C0788DAC(v22, v23, v30);
      sub_1C07A42EC();
      sub_1C078DAA8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2080;
      sub_1C077584C();
      v28 = sub_1C079E14C();
      sub_1C07A42EC();
      sub_1C0791934();
      _os_log_impl(&dword_1C0771000, v19, v20, "AddressLinkingModel: caching model %s for %s", (uint8_t *)v21, 0x16u);
      sub_1C07A7C08();
      sub_1C0776778();
    }

    sub_1C078AA18();
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v4);
    return v13;
  }
  sub_1C07D8ED0();
  sub_1C0797AE0();
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    sub_1C07D8EE0((uint64_t)v31);
    goto LABEL_7;
  }
  v13 = Strong;
  sub_1C106F160();
  sub_1C079430C();
  sub_1C0790CC4();
  v14 = sub_1C106F538();
  v15 = sub_1C1070384();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = sub_1C0775854();
    v25 = sub_1C0775854();
    v30[0] = v25;
    *(_DWORD *)v16 = 136315394;
    v28 = v13;
    type metadata accessor for AddressLinkingModel();
    v26 = v4;
    sub_1C077AEE4();
    v17 = sub_1C106FB5C();
    v28 = sub_1C0788DAC(v17, v18, v30);
    sub_1C10705AC();
    sub_1C078DAA8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2080;
    sub_1C077584C();
    v28 = sub_1C079E14C();
    sub_1C07A42EC();
    sub_1C0791934();
    _os_log_impl(&dword_1C0771000, v14, v15, "AddressLinkingModel: using cached model %s for %s", (uint8_t *)v16, 0x16u);
    sub_1C07A7C08();
    sub_1C0776778();
  }
  sub_1C078DAA8();
  sub_1C078AA18();

  (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v4);
  sub_1C07D8EE0((uint64_t)v31);
  return v13;
}

uint64_t sub_1C07D79FC()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C07D7A20()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for AddressLinkingModel.AddressLinkingModelCache();
  v0 = swift_allocObject();
  result = sub_1C106F97C();
  *(_QWORD *)(v0 + 16) = result;
  qword_1ED78C430 = v0;
  return result;
}

uint64_t sub_1C07D7A7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjCClassFromMetadata;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t inited;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  unsigned int *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;

  v5 = v2;
  v101 = sub_1C106AB28();
  MEMORY[0x1E0C80A78](v101);
  sub_1C07795DC();
  *(_QWORD *)(v5 + 112) = a1;
  *(_QWORD *)(v5 + 120) = a2;
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v9 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C077AE90();
  v10 = (void *)sub_1C106FAF0();
  sub_1C077960C();
  sub_1C07D8F04((uint64_t)v10, 1852797802, 0xE400000000000000, v9);
  v12 = v11;

  if (!v12)
  {
    sub_1C07B3EA0();
    sub_1C07D8F9C(&qword_1EF62F9B8, (void (*)(uint64_t))MEMORY[0x1E0D3B7F8]);
    v18 = sub_1C0790CB0();
    v20 = sub_1C07A5B24(v18, v19);
    sub_1C0787754(v20, *MEMORY[0x1E0D3B7E0]);
    sub_1C07B8264();

    goto LABEL_7;
  }
  sub_1C106AA8C();
  sub_1C077960C();
  v13 = sub_1C07D7158(v4);
  if (!v3)
  {
    v22 = v13;
    if (!v13)
      goto LABEL_4;
    if (!*(_QWORD *)(v13 + 16))
    {
      sub_1C077960C();
      goto LABEL_4;
    }
    sub_1C077AE90();
    v23 = sub_1C0793608();
    sub_1C077D774(v23, v24);
    v26 = v25;
    sub_1C077960C();
    if ((v26 & 1) != 0)
    {
      v27 = sub_1C0793608();
      sub_1C07AD9D0(v27, v28);
      if (!v29)
        goto LABEL_37;
      v30 = (void *)sub_1C0784DD4();
      sub_1C07785A0();
      v31 = objc_msgSend(v30, sel_integerValue);

      *(_QWORD *)(v5 + 32) = v31;
      if (*(_QWORD *)(v22 + 16))
      {
        sub_1C077AE90();
        v32 = sub_1C07B7090();
        sub_1C077D774(v32, v33);
        v35 = v34;
        sub_1C077960C();
        if ((v35 & 1) != 0)
        {
          v36 = sub_1C07B7090();
          sub_1C07AD9D0(v36, v37);
          if (!v38)
            goto LABEL_37;
          v39 = (void *)sub_1C0784DD4();
          sub_1C07785A0();
          v40 = objc_msgSend(v39, sel_integerValue);

          *(_QWORD *)(v5 + 40) = v40;
          if (*(_QWORD *)(v22 + 16))
          {
            sub_1C077AE90();
            v41 = sub_1C07B4668();
            sub_1C077D774(v41, v42);
            v44 = v43;
            sub_1C077960C();
            if ((v44 & 1) != 0)
            {
              v45 = sub_1C07B4668();
              sub_1C07AD9D0(v45, v46);
              if (!v47)
                goto LABEL_37;
              v48 = (void *)sub_1C0784DD4();
              sub_1C07785A0();
              objc_msgSend(v48, sel_floatValue);
              v50 = v49;

              *(_DWORD *)(v5 + 48) = v50;
              if (*(_QWORD *)(v22 + 16))
              {
                sub_1C077AE90();
                v51 = sub_1C078D328();
                sub_1C077D774(v51, v52);
                v54 = v53;
                sub_1C077960C();
                if ((v54 & 1) != 0)
                {
                  v55 = sub_1C078D328();
                  sub_1C07AD9D0(v55, v56);
                  if (v58)
                  {
                    *(_QWORD *)(v5 + 56) = v57;
                    *(_QWORD *)(v5 + 64) = v58;
                    if (*(_QWORD *)(v22 + 16)
                      && (sub_1C077AE90(),
                          sub_1C077D774(1701667182, 0xE400000000000000),
                          v60 = v59,
                          sub_1C077960C(),
                          (v60 & 1) != 0))
                    {
                      sub_1C07AD9D0(1701667182, 0xE400000000000000);
                      if (!v62)
                      {
                        sub_1C077960C();
                        LODWORD(v100) = 0;
                        v94 = 0;
LABEL_46:
                        v95 = (unsigned int *)MEMORY[0x1E0D3B7E8];
                        goto LABEL_40;
                      }
                      *(_QWORD *)(v5 + 72) = v61;
                      *(_QWORD *)(v5 + 80) = v62;
                      if (*(_QWORD *)(v22 + 16))
                      {
                        sub_1C077AE90();
                        v63 = sub_1C0795738();
                        sub_1C077D774(v63, v64);
                        v66 = v65;
                        sub_1C077960C();
                        if ((v66 & 1) != 0)
                        {
                          v67 = sub_1C0795738();
                          sub_1C07AD9D0(v67, v68);
                          if (v70)
                          {
                            *(_QWORD *)(v5 + 88) = v69;
                            *(_QWORD *)(v5 + 96) = v70;
                            if (*(_QWORD *)(v22 + 16))
                            {
                              sub_1C077AE90();
                              v71 = sub_1C07A505C();
                              sub_1C077D774(v71, v72);
                              v74 = v73;
                              sub_1C077960C();
                              if ((v74 & 1) != 0)
                              {
                                v75 = sub_1C07A505C();
                                sub_1C07AD9D0(v75, v76);
                                v100 = v78;
                                if (!v77)
                                {
LABEL_51:
                                  swift_bridgeObjectRelease();
                                  sub_1C07B8868();
                                  v95 = (unsigned int *)MEMORY[0x1E0D3B7E0];
                                  goto LABEL_50;
                                }
                                v79 = v77;
                                if (*(_QWORD *)(v22 + 16))
                                {
                                  sub_1C077AE90();
                                  v80 = sub_1C078A9FC();
                                  sub_1C077D774(v80, v81);
                                  v83 = v82;
                                  sub_1C077960C();
                                  if ((v83 & 1) != 0)
                                  {
                                    v84 = sub_1C078A9FC();
                                    sub_1C07AD9D0(v84, v85);
                                    v99 = v86;
                                    v88 = v87;
                                    sub_1C077960C();
                                    if (v88)
                                    {
                                      sub_1C07ACF80(&qword_1ED75E840);
                                      inited = swift_initStackObject();
                                      *(_OWORD *)(inited + 16) = xmmword_1C1078FC0;
                                      *(_QWORD *)(inited + 32) = 0x636F765F72616863;
                                      *(_QWORD *)(inited + 40) = 0xEA00000000006261;
                                      *(_QWORD *)(inited + 48) = v100;
                                      *(_QWORD *)(inited + 56) = v79;
                                      *(_QWORD *)(inited + 64) = 0x61636F765F657062;
                                      *(_QWORD *)(inited + 72) = 0xE900000000000062;
                                      *(_QWORD *)(inited + 80) = v99;
                                      *(_QWORD *)(inited + 88) = v88;
                                      sub_1C106F97C();
                                      sub_1C106DCA8();
                                      sub_1C077B5BC();
                                      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
                                      *(_QWORD *)(v5 + 104) = sub_1C106DC9C();
                                      v102 = *(_QWORD *)(v5 + 112);
                                      v103 = *(_QWORD *)(v5 + 120);
                                      swift_retain();
                                      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
                                      sub_1C106FC94();
                                      swift_release();

                                      sub_1C079A6B4();
                                      *(_QWORD *)(v5 + 16) = v102;
                                      *(_QWORD *)(v5 + 24) = v103;
                                      return v5;
                                    }
                                    goto LABEL_51;
                                  }
                                }
                                sub_1C07785A0();
                              }
                            }
                            sub_1C077960C();
                            sub_1C07B8868();
                            v95 = (unsigned int *)MEMORY[0x1E0D3B7F0];
LABEL_50:
                            v94 = 1;
                            goto LABEL_40;
                          }
                          sub_1C077960C();
                          v94 = 0;
                          sub_1C07B8868();
                          goto LABEL_46;
                        }
                      }
                      sub_1C077960C();
                      v94 = 0;
                      sub_1C07B8868();
                    }
                    else
                    {
                      sub_1C077960C();
                      LODWORD(v100) = 0;
                      v94 = 0;
                    }
                    v95 = (unsigned int *)MEMORY[0x1E0D3B7F0];
LABEL_40:
                    sub_1C07B3EA0();
                    sub_1C07D8F9C(&qword_1EF62F9B8, (void (*)(uint64_t))MEMORY[0x1E0D3B7F8]);
                    v96 = sub_1C0790CB0();
                    v98 = sub_1C07A5B24(v96, v97);
                    sub_1C0787754(v98, *v95);
                    sub_1C07B8264();

                    sub_1C079A6B4();
                    swift_bridgeObjectRelease();
                    if ((_DWORD)v100)
                      swift_bridgeObjectRelease();
                    if (v94)
                      swift_bridgeObjectRelease();
                    goto LABEL_7;
                  }
LABEL_37:
                  sub_1C077960C();
                  sub_1C07B3EA0();
                  sub_1C07D8F9C(&qword_1EF62F9B8, (void (*)(uint64_t))MEMORY[0x1E0D3B7F8]);
                  v92 = sub_1C0790CB0();
                  v16 = sub_1C07A5B24(v92, v93);
                  v17 = (unsigned int *)MEMORY[0x1E0D3B7E8];
                  goto LABEL_5;
                }
              }
            }
          }
        }
      }
    }
    sub_1C077960C();
    sub_1C07B3EA0();
    sub_1C07D8F9C(&qword_1EF62F9B8, (void (*)(uint64_t))MEMORY[0x1E0D3B7F8]);
    v90 = sub_1C0790CB0();
    v16 = sub_1C07A5B24(v90, v91);
    v17 = (unsigned int *)MEMORY[0x1E0D3B7F0];
    goto LABEL_5;
  }

LABEL_4:
  sub_1C07B3EA0();
  sub_1C07D8F9C(&qword_1EF62F9B8, (void (*)(uint64_t))MEMORY[0x1E0D3B7F8]);
  v14 = sub_1C0790CB0();
  v16 = sub_1C07A5B24(v14, v15);
  v17 = (unsigned int *)MEMORY[0x1E0D3B7D8];
LABEL_5:
  sub_1C0787754(v16, *v17);
  sub_1C07B8264();

  sub_1C079A6B4();
LABEL_7:
  swift_bridgeObjectRelease();
  swift_deallocPartialClassInstance();
  return v5;
}

void sub_1C07D8128(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = v5;
  sub_1C07ACF80(&qword_1EF62F990);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v11);
  sub_1C0776794();
  v28 = sub_1C07ACF80(&qword_1EF62F988);
  MEMORY[0x1E0C80A78](v28);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v24 - v15;
  v27 = v17;
  if (a3)
  {
    v26 = a4;
    v18 = *(_QWORD *)(v4 + 16);
    v19 = *(_QWORD *)(v4 + 24);
    v20 = swift_retain();
    v24 = a1;
    v25 = a2;
    sub_1C07D8350(v20, a1, a2, v18, v19, v4);
    if (v6)
    {

      swift_release();
      sub_1C07B2D8C(v4, 1, 1, v28);
      v6 = 0;
      a4 = v26;
    }
    else
    {
      swift_release();
      v21 = v28;
      v22 = sub_1C07B2D80(v4, 1, v28);
      a4 = v26;
      if (v22 != 1)
      {
        v23 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 32);
        v23(v16, v4, v21);
        v23((char *)a4, (uint64_t)v16, v21);
        goto LABEL_9;
      }
    }
    sub_1C0784B30(v4, &qword_1EF62F990);
    a1 = v24;
    a2 = v25;
  }
  sub_1C106DC90();
  if (!v6)
  {
    sub_1C07D84A8((uint64_t)v13, a1, a2, a3);
    v21 = v28;
    (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(a4, v13, v28);
LABEL_9:
    sub_1C07B2D8C(a4, 0, 1, v21);
  }
  sub_1C07757D0();
}

void sub_1C07D8350(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  _OWORD v18[3];
  char v19[8];
  uint64_t v20;
  uint64_t v21;

  v21 = a6;
  v13 = sub_1C07ACF80(&qword_1EF62F988);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  sub_1C07795DC();
  sub_1C0AAD904(a4, a5, a2, a3, a1, v18);
  if (!v6)
  {
    sub_1C07D8D7C((uint64_t)v18, (uint64_t)v19);
    if (v20)
    {
      sub_1C106A978();
      sub_1C077B5BC();
      sub_1C106A96C();
      sub_1C07D8E44(&qword_1EF62F9A0);
      sub_1C106A960();
      sub_1C07D8DC4((uint64_t)v18);
      sub_1C07785A8();
      v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32);
      v16 = v21;
      v15(v21, v7, v13);
      v17 = 0;
    }
    else
    {
      v17 = 1;
      v16 = v21;
    }
    sub_1C07B2D8C(v16, v17, 1, v13);
  }
  sub_1C07757D0();
}

void sub_1C07D84A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;

  if (a4)
  {
    sub_1C106A9A8();
    sub_1C077B5BC();
    swift_retain();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C106A99C();
    sub_1C07ACF80(&qword_1EF62F988);
    sub_1C07D8E44(&qword_1EF62F9A8);
    v5 = sub_1C106A990();
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      v7 = v5;
      v8 = v6;
      sub_1C07785A8();
      sub_1C07D8E94();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C106BFC8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C07B3374(v7, v8);
    }
    swift_release();
  }
}

float sub_1C07D85FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  float v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v64;
  os_log_type_t v65;
  _BOOL4 v66;
  uint64_t v67;
  uint8_t *v68;
  uint8_t *v69;
  void (*v70)(uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t, uint64_t);
  double v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;

  v6 = v5;
  v82 = a5;
  v7 = sub_1C106F544();
  v72 = *(_QWORD *)(v7 - 8);
  v73 = v7;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v8);
  v75 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_1C07ACF80(&qword_1EF62F988);
  v77 = *(_QWORD *)(v80 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v10);
  sub_1C077AED0();
  v74 = v11;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v12);
  v79 = (char *)&v72 - v13;
  sub_1C07ACF80(&qword_1EF62F990);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v14);
  sub_1C077AED0();
  v76 = v15;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v16);
  v78 = (char *)&v72 - v17;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v18);
  v81 = (uint64_t)&v72 - v19;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v72 - v21;
  v23 = sub_1C106FB68();
  v25 = v24;
  v26 = sub_1C106FB68();
  v28 = v27;
  v29 = 0xE000000000000000;
  v88 = 0;
  v89 = 0xE000000000000000;
  v30 = HIBYTE(v25) & 0xF;
  if ((v25 & 0x2000000000000000) == 0)
    v30 = v23 & 0xFFFFFFFFFFFFLL;
  v84 = *(double *)&v23;
  v85 = v25;
  v86 = 0;
  v87 = v30;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v31 = sub_1C07B15C8();
  if (v32)
  {
    v33 = v31;
    v34 = v32;
    do
    {
      sub_1C07862FC();
      if ((sub_1C106FA18() & 1) == 0)
      {
        sub_1C07862FC();
        if ((sub_1C106FA24() & 1) != 0
          || (v33 == 32 ? (v35 = v34 == 0xE100000000000000) : (v35 = 0),
              v35 || (sub_1C07862FC(), (sub_1C07A1A6C() & 1) != 0) || (sub_1C07862FC(), (sub_1C106FA30() & 1) != 0)))
        {
          v36 = sub_1C07862FC();
          MEMORY[0x1C3BA65A8](v36);
        }
      }
      sub_1C07767AC();
      v33 = sub_1C07B15C8();
      v34 = v37;
    }
    while (v37);
    v39 = v88;
    v38 = v89;
    v6 = v5;
    v29 = 0xE000000000000000;
  }
  else
  {
    v39 = 0;
    v38 = 0xE000000000000000;
  }
  sub_1C07785A0();
  sub_1C077960C();
  v88 = 0;
  v89 = 0xE000000000000000;
  v40 = HIBYTE(v28) & 0xF;
  if ((v28 & 0x2000000000000000) == 0)
    v40 = v26 & 0xFFFFFFFFFFFFLL;
  v84 = *(double *)&v26;
  v85 = v28;
  v86 = 0;
  v87 = v40;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v41 = sub_1C07B15C8();
  v43 = v42;
  if (v42)
  {
    v44 = v41;
    do
    {
      sub_1C078C6DC();
      if ((sub_1C106FA18() & 1) == 0)
      {
        sub_1C078C6DC();
        if ((sub_1C106FA24() & 1) != 0
          || (v44 == 32 ? (v45 = v43 == 0xE100000000000000) : (v45 = 0),
              v45 || (sub_1C078C6DC(), (sub_1C07A1A6C() & 1) != 0) || (sub_1C078C6DC(), (sub_1C106FA30() & 1) != 0)))
        {
          v46 = sub_1C078C6DC();
          MEMORY[0x1C3BA65A8](v46);
        }
      }
      sub_1C07785A0();
      v44 = sub_1C07B15C8();
      v43 = v47;
    }
    while (v47);
    v43 = v88;
    v29 = v89;
  }
  swift_bridgeObjectRelease();
  sub_1C077960C();
  if (v39 == v43 && v38 == v29)
  {
    swift_bridgeObjectRelease_n();
    return 1.0;
  }
  sub_1C07862FC();
  if ((sub_1C1070CB4() & 1) != 0)
  {
    sub_1C07767AC();
    sub_1C0778580();
    return 1.0;
  }
  v50 = HIBYTE(v38) & 0xF;
  if ((v38 & 0x2000000000000000) == 0)
    v50 = v39 & 0xFFFFFFFFFFFFLL;
  if (!v50)
    goto LABEL_53;
  v51 = HIBYTE(v29) & 0xF;
  if ((v29 & 0x2000000000000000) == 0)
    v51 = v43 & 0xFFFFFFFFFFFFLL;
  if (!v51)
  {
LABEL_53:
    sub_1C07767AC();
    sub_1C0778580();
    return 0.0;
  }
  v52 = (void *)MEMORY[0x1C3BA79F4]();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v53 = sub_1C07862FC();
  sub_1C07D8128(v53, v54, v82, v55);
  swift_bridgeObjectRelease();
  if (v6)
  {

    sub_1C07B2D8C((uint64_t)v22, 1, 1, v80);
  }
  objc_autoreleasePoolPop(v52);
  v56 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C077584C();
  v57 = v81;
  sub_1C07D8128(v43, v29, v82, v81);
  swift_bridgeObjectRelease();
  v58 = v80;
  v60 = (uint64_t)v78;
  v59 = v79;
  objc_autoreleasePoolPop(v56);
  sub_1C07D8D34((uint64_t)v22, v60);
  if (sub_1C07B2D80(v60, 1, v58) == 1)
  {
    v61 = v57;
LABEL_52:
    sub_1C079D1C8(v61);
    sub_1C079D1C8((uint64_t)v22);
    sub_1C079D1C8(v60);
    goto LABEL_53;
  }
  v62 = v77;
  v83 = *(void (**)(char *, uint64_t, uint64_t))(v77 + 32);
  v83(v59, v60, v58);
  v60 = v76;
  sub_1C07D8D34(v57, v76);
  if (sub_1C07B2D80(v60, 1, v58) == 1)
  {
    (*(void (**)(char *, uint64_t))(v62 + 8))(v59, v58);
    v61 = v81;
    goto LABEL_52;
  }
  v83(v74, v60, v58);
  v49 = sub_1C0C89454();
  sub_1C106F160();
  v64 = sub_1C106F538();
  v65 = sub_1C1070384();
  v66 = os_log_type_enabled(v64, v65);
  v67 = v81;
  if (v66)
  {
    v68 = (uint8_t *)sub_1C0775854();
    v83 = (void (*)(char *, uint64_t, uint64_t))v29;
    v69 = v68;
    *(_DWORD *)v68 = 134217984;
    v84 = v49;
    sub_1C10705AC();
    _os_log_impl(&dword_1C0771000, v64, v65, "ALM - cosine similarity: %f", v69, 0xCu);
    sub_1C0776778();
  }

  (*(void (**)(char *, uint64_t))(v72 + 8))(v75, v73);
  v70 = *(void (**)(uint64_t, uint64_t))(v77 + 8);
  v70((uint64_t)v74, v58);
  v71 = sub_1C078C6DC();
  ((void (*)(uint64_t))v70)(v71);
  sub_1C079D1C8(v67);
  sub_1C079D1C8((uint64_t)v22);
  sub_1C07767AC();
  sub_1C0778580();
  return v49;
}

uint64_t sub_1C07D8C24()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C07D8C68()
{
  sub_1C07D8C24();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AddressLinkingModel()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for AddressLinkingModel.AddressLinkingModelCache()
{
  return objc_opt_self();
}

uint64_t getEnumTagSinglePayload for AddressLinkingModel.AddressLinkingModelCache.CachedAddressLinkingModel(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AddressLinkingModel.AddressLinkingModelCache.CachedAddressLinkingModel(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 8) = v3;
  return result;
}

ValueMetadata *type metadata accessor for AddressLinkingModel.AddressLinkingModelCache.CachedAddressLinkingModel()
{
  return &type metadata for AddressLinkingModel.AddressLinkingModelCache.CachedAddressLinkingModel;
}

uint64_t sub_1C07D8D34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1EF62F990);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C07D8D7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1EF62F998);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C07D8DC4(uint64_t a1)
{
  sub_1C07D8DF8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
  return a1;
}

uint64_t sub_1C07D8DF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_1C07B3374(a5, a6);
  }
  return result;
}

void sub_1C07D8E44(_QWORD *a1)
{
  if (!*a1)
  {
    sub_1C07D4BEC(&qword_1EF62F988);
    sub_1C079CB7C();
  }
  sub_1C0776784();
}

unint64_t sub_1C07D8E94()
{
  unint64_t result;

  result = qword_1EF62F9B0;
  if (!qword_1EF62F9B0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109E994, &unk_1E7A1DCA8);
    atomic_store(result, (unint64_t *)&qword_1EF62F9B0);
  }
  return result;
}

uint64_t sub_1C07D8ED0()
{
  return swift_weakTakeInit();
}

uint64_t sub_1C07D8EE0(uint64_t a1)
{
  swift_weakDestroy();
  return a1;
}

uint64_t sub_1C07D8F04(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  void *v6;
  id v7;
  uint64_t v8;

  v6 = (void *)sub_1C106FAF0();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(a4, sel_pathForResource_ofType_, a1, v6);

  if (!v7)
    return 0;
  v8 = sub_1C106FB14();

  return v8;
}

uint64_t sub_1C07D8F9C(uint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result;

  result = *a1;
  if (!result)
  {
    a2(255);
    sub_1C079CB7C();
  }
  return result;
}

unint64_t sub_1C07D8FD8()
{
  unint64_t result;

  result = qword_1ED7506C8;
  if (!qword_1ED7506C8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10790D0, &type metadata for ConfigData);
    atomic_store(result, (unint64_t *)&qword_1ED7506C8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ConfigData()
{
  return &type metadata for ConfigData;
}

unint64_t sub_1C07D9024()
{
  unint64_t result;

  result = qword_1ED7506B0;
  if (!qword_1ED7506B0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10791BC, &type metadata for ConfigData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED7506B0);
  }
  return result;
}

void sub_1C07D9060(_QWORD *a1)
{
  if (!*a1)
  {
    sub_1C07D4BEC(&qword_1ED762410);
    sub_1C079CB7C();
  }
  sub_1C0776784();
}

uint64_t storeEnumTagSinglePayload for ConfigData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1C07D90F0 + 4 * byte_1C1078FD0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1C07D9110 + 4 * byte_1C1078FD5[v4]))();
}

_BYTE *sub_1C07D90F0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1C07D9110(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C07D9118(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C07D9120(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C07D9128(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C07D9130(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ConfigData.CodingKeys()
{
  return &type metadata for ConfigData.CodingKeys;
}

unint64_t sub_1C07D9150()
{
  unint64_t result;

  result = qword_1EF62F9C8;
  if (!qword_1EF62F9C8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1079194, &type metadata for ConfigData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62F9C8);
  }
  return result;
}

unint64_t sub_1C07D9190()
{
  unint64_t result;

  result = qword_1ED7506C0;
  if (!qword_1ED7506C0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1079104, &type metadata for ConfigData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED7506C0);
  }
  return result;
}

unint64_t sub_1C07D91D0()
{
  unint64_t result;

  result = qword_1ED7506B8;
  if (!qword_1ED7506B8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107912C, &type metadata for ConfigData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED7506B8);
  }
  return result;
}

void type metadata accessor for AlarmDataProvider()
{
  sub_1C0779604();
}

uint64_t sub_1C07D9218()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C07D9228(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  v1 = a1;
  if (a1 >= 7)
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v2 = sub_1C106F544();
    sub_1C079E000(v2, (uint64_t)qword_1ED762AF8);
    v3 = sub_1C106F538();
    v4 = sub_1C107039C();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v5 = 67109120;
      sub_1C10705AC();
      _os_log_impl(&dword_1C0771000, v3, v4, "Unknown event type found in BMClockAlarmEventType - %d", v5, 8u);
      MEMORY[0x1C3BA8270](v5, -1, -1);
    }

    return 0;
  }
  return v1;
}

unint64_t sub_1C07D9340(unint64_t result)
{
  if (result >= 7)
    return 7;
  return result;
}

uint64_t sub_1C07D9350(uint64_t result)
{
  return result;
}

void sub_1C07D9358()
{
  sub_1C0A53DC8();
}

uint64_t sub_1C07D9360(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1C08CBB68(a1, *v1);
}

void sub_1C07D9368()
{
  sub_1C0A54488();
}

unint64_t sub_1C07D9370@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1C07D9340(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1C07D9398@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;

  result = sub_1C07D9350(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_1C07D93C0(unsigned __int8 a1)
{
  uint64_t inited;

  sub_1C07ACF80(&qword_1ED755050);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1079220;
  *(_QWORD *)(inited + 32) = 0x7079546D72616C61;
  *(_QWORD *)(inited + 40) = 0xE900000000000065;
  *(_QWORD *)(inited + 48) = objc_msgSend((id)objc_opt_self(), sel_featureValueWithInt64_, a1);
  sub_1C07D97D4();
  return sub_1C106F97C();
}

uint64_t sub_1C07D9478()
{
  unsigned __int8 *v0;

  return sub_1C07D93C0(*v0);
}

uint64_t sub_1C07D9480()
{
  unsigned __int8 *v0;

  return sub_1C07D9474(*v0);
}

uint64_t sub_1C07D9488@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1C106ADE0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_1C07D94C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 20);
  v5 = sub_1C106ADE0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1C07D9500@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  *a2 = *(_BYTE *)(v2 + *(int *)(result + 24));
  return result;
}

void sub_1C07D9510()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)BiomeLibrary(), sel_Clock);
  swift_unknownObjectRelease();
  v1 = objc_msgSend(v0, sel_Alarm);
  swift_unknownObjectRelease();
  sub_1C07E1618();

}

void sub_1C07D95B8()
{
  sub_1C07D9510();
}

uint64_t sub_1C07D95CC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C07D95D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unsigned int v8;

  v6 = sub_1C106ADE0();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return sub_1C07B2D80(a1, a2, v6);
  v8 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  if (v8 >= 7)
    return v8 - 6;
  else
    return 0;
}

uint64_t sub_1C07D964C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C07D9658(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = sub_1C106ADE0();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return sub_1C07B2D8C(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 6;
  return result;
}

uint64_t type metadata accessor for AlarmEvent()
{
  uint64_t result;

  result = qword_1ED7492C0;
  if (!qword_1ED7492C0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C07D9704()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C106ADE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1C07D977C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED74CC58;
  if (!qword_1ED74CC58)
  {
    v1 = sub_1C07D4BEC(&qword_1ED74CC40);
    result = MEMORY[0x1C3BA8174](&unk_1C10B5B14, v1);
    atomic_store(result, (unint64_t *)&qword_1ED74CC58);
  }
  return result;
}

void type metadata accessor for AlarmContent()
{
  sub_1C0779604();
}

unint64_t sub_1C07D97D4()
{
  unint64_t result;

  result = qword_1ED758D30;
  if (!qword_1ED758D30)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED758D30);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FeedbackLogDatabase.FeedbackLogDatabaseEntry.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFA)
  {
    if (a2 + 6 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 6) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 7;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v5 = v6 - 7;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_1C07D9898(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1C07D98E4 + 4 * byte_1C1079235[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1C07D9918 + 4 * byte_1C1079230[v4]))();
}

uint64_t sub_1C07D9918(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C07D9920(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C07D9928);
  return result;
}

uint64_t sub_1C07D9934(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C07D993CLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1C07D9940(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C07D9948(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for AlarmType()
{
  sub_1C0779604();
}

unint64_t sub_1C07D9964()
{
  unint64_t result;

  result = qword_1EF62FA18;
  if (!qword_1EF62FA18)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107936C, &unk_1E7A0B330);
    atomic_store(result, (unint64_t *)&qword_1EF62FA18);
  }
  return result;
}

uint64_t sub_1C07D99A0(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[2];
  uint64_t v17;

  result = MEMORY[0x1E0DEE9E8];
  v17 = MEMORY[0x1E0DEE9E8];
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = a1 + 32;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    for (i = 0; i != v3; ++i)
    {
      v6 = (uint64_t *)(v4 + 16 * i);
      v7 = *v6;
      v8 = v6[1];
      v9 = sub_1C077E6D0();
      v10 = (void *)MEMORY[0x1C3BA79F4](v9);
      v16[0] = v7;
      v16[1] = v8;
      sub_1C07B1280();
      v11 = sub_1C10705D0();
      objc_autoreleasePoolPop(v10);
      swift_bridgeObjectRelease();
      v12 = *(_QWORD *)(v11 + 16);
      if (v12)
      {
        v13 = (uint64_t *)(v11 + 40);
        do
        {
          v14 = *(v13 - 1);
          v15 = *v13;
          sub_1C077E6D0();
          sub_1C0A7D28C((uint64_t)v16, v14, v15);
          swift_bridgeObjectRelease();
          v13 += 2;
          --v12;
        }
        while (v12);
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    return v17;
  }
  return result;
}

void sub_1C07D9AD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  os_log_type_t v16;
  _WORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t inited;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v50;
  BOOL v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  BOOL v74;
  BOOL v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;

  sub_1C0779670();
  v2 = v1;
  v4 = v3;
  v5 = type metadata accessor for CNContactStructs.AgentAffiliationRelationshipType(0);
  v91 = *(_QWORD *)(v5 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C077AE40();
  v90 = v7;
  sub_1C07ACF80(&qword_1ED759C40);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1C079D1D0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  sub_1C0778564();
  v13 = v12 - v11;
  sub_1C07DBC30(v2, v0);
  v14 = sub_1C077AEEC(v0, 1, v9);
  if (v24)
  {
    sub_1C077C790(v14, &qword_1ED759C40);
    if (qword_1ED761458 != -1)
      goto LABEL_91;
    goto LABEL_4;
  }
  v93 = v13;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v13, v0, v9);
  v94 = MEMORY[0x1E0DEE9D8];
  sub_1C07ACF80(&qword_1ED762CB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1078A20;
  *(_QWORD *)(inited + 32) = 25965;
  *(_QWORD *)(inited + 40) = 0xE200000000000000;
  *(_QWORD *)(inited + 48) = 105;
  *(_QWORD *)(inited + 56) = 0xE100000000000000;
  *(_QWORD *)(inited + 64) = 0x666C6573796DLL;
  *(_QWORD *)(inited + 72) = 0xE600000000000000;
  v21 = type metadata accessor for CNContactStructs.Person(0);
  v85 = v21;
  v22 = &v4[*(int *)(v21 + 44)];
  v23 = *((_QWORD *)v22 + 1);
  if (v23
    && (*(_QWORD *)v22 == 1702195828 ? (v24 = v23 == 0xE400000000000000) : (v24 = 0),
        v24 || (sub_1C07785B0() & 1) != 0))
  {
    sub_1C07DA284();
    v26 = v25;
    swift_setDeallocating();
    sub_1C0BE8D64();
    if (v26)
      sub_1C07BC558();
  }
  else
  {
    swift_setDeallocating();
    sub_1C0BE8D64();
  }
  sub_1C07AACBC();
  if (*(_QWORD *)&v4[*(int *)(v27 + 232)])
    v28 = *(_QWORD *)&v4[*(int *)(v27 + 232)];
  else
    v28 = MEMORY[0x1E0DEE9D8];
  v89 = *(_QWORD *)(v28 + 16);
  if (!v89)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0778580();
    goto LABEL_47;
  }
  v83 = v10;
  v84 = v9;
  v92 = v4;
  v87 = v28 + ((*(unsigned __int8 *)(v91 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80));
  v88 = *(int *)(v5 + 56);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v29 = 0;
  v86 = v28;
  while (1)
  {
    if (v29 >= *(_QWORD *)(v28 + 16))
      goto LABEL_90;
    sub_1C07DBC78(v87 + *(_QWORD *)(v91 + 72) * v29, v90, type metadata accessor for CNContactStructs.AgentAffiliationRelationshipType);
    v30 = *(_QWORD *)(v90 + v88);
    sub_1C07767B4();
    sub_1C07B1F90(v90, type metadata accessor for CNContactStructs.AgentAffiliationRelationshipType);
    v31 = MEMORY[0x1E0DEE9D8];
    if (v30)
      v31 = v30;
    v4 = *(char **)(v31 + 16);
    if (v4)
      break;
LABEL_44:
    ++v29;
    swift_bridgeObjectRelease();
    v28 = v86;
    if (v29 == v89)
    {
      sub_1C0778580();
      v4 = v92;
      v9 = v84;
      v10 = v83;
LABEL_47:
      sub_1C07AACBC();
      v54 = &v4[*(int *)(v53 + 36)];
      v55 = *(_QWORD *)v54;
      v56 = *((_QWORD *)v54 + 1);
      if (v56)
      {
        v57 = HIBYTE(v56) & 0xF;
        if ((v56 & 0x2000000000000000) == 0)
          v57 = v55 & 0xFFFFFFFFFFFFLL;
        if (v57)
        {
          sub_1C106E608();
          sub_1C106E614();
          sub_1C0778580();
          sub_1C07AB678();
          sub_1C07A21D4();
          v59 = v58;
          sub_1C077960C();
          if (v59)
            sub_1C07BC558();
        }
      }
      if (*(_QWORD *)&v4[*(int *)(v85 + 60) + 8])
      {
        sub_1C0794318();
        if (v60)
        {
          sub_1C106E608();
          sub_1C0795FF4();
          sub_1C0778580();
          sub_1C0794BF8();
          v62 = v61;
          sub_1C077960C();
          if (v62)
            sub_1C07BC558();
        }
      }
      sub_1C07AACBC();
      v64 = &v4[*(int *)(v63 + 68)];
      v65 = *(_QWORD *)v64;
      v66 = *((_QWORD *)v64 + 1);
      if (v66)
      {
        v67 = HIBYTE(v66) & 0xF;
        if ((v66 & 0x2000000000000000) == 0)
          v67 = v65 & 0xFFFFFFFFFFFFLL;
        if (v67)
        {
          sub_1C106E608();
          sub_1C106E614();
          sub_1C0775834();
          sub_1C0794BF8();
          v69 = v68;
          sub_1C077960C();
          if (v69)
            sub_1C0BD9CFC();
        }
      }
      sub_1C07AACBC();
      v71 = &v4[*(int *)(v70 + 204)];
      v72 = *((_QWORD *)v71 + 1);
      if (v72)
      {
        v73 = *(_QWORD *)v71;
        if (!v56 || (v73 == v55 ? (v74 = v72 == v56) : (v74 = 0), !v74 && (sub_1C07785B0() & 1) == 0))
        {
          if (!v66 || (v73 == v65 ? (v75 = v72 == v66) : (v75 = 0), !v75 && (sub_1C07785B0() & 1) == 0))
          {
            sub_1C0794318();
            if (v76)
            {
              sub_1C106E608();
              sub_1C0795FF4();
LABEL_80:
              sub_1C0778580();
              sub_1C07AB678();
              sub_1C07A21D4();
              v78 = v77;
              sub_1C077960C();
              if (v78)
                sub_1C07BC558();
            }
          }
        }
      }
      sub_1C07AACBC();
      if (*(_QWORD *)&v4[*(int *)(v79 + 84) + 8])
      {
        sub_1C0794318();
        if (v80)
        {
          sub_1C106E608();
          sub_1C0795FF4();
          sub_1C0778580();
          sub_1C07AB678();
          sub_1C07A21D4();
          v82 = v81;
          sub_1C077960C();
          if (v82)
            sub_1C0BD9CFC();
        }
      }
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v93, v9);
      goto LABEL_87;
    }
  }
  v32 = v31 + 40;
  while (1)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C106E608();
    sub_1C106E614();
    sub_1C07785A0();
    sub_1C0775834();
    sub_1C07AB678();
    sub_1C07DA284();
    v10 = v33;
    swift_bridgeObjectRelease();
    if (v10)
      break;
LABEL_43:
    v32 += 16;
    if (!--v4)
      goto LABEL_44;
  }
  v34 = *(_QWORD *)(v10 + 16);
  v35 = v94;
  v36 = *(_QWORD *)(v94 + 16);
  v9 = v36 + v34;
  if (__OFADD__(v36, v34))
  {
    __break(1u);
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || (v37 = *(_QWORD *)(v94 + 24) >> 1, v37 < v9))
  {
    sub_1C07B70A8();
    v35 = v38;
    v37 = *(_QWORD *)(v38 + 24) >> 1;
  }
  if (!*(_QWORD *)(v10 + 16))
  {
    if (v34)
      goto LABEL_79;
    goto LABEL_42;
  }
  v39 = *(_QWORD *)(v35 + 16);
  v40 = v37 - v39;
  type metadata accessor for CNContactStructs.EntityAliasRelationshipType(0);
  if (v40 >= v34)
  {
    sub_1C07785D0();
    v43 = *(_QWORD *)(v42 + 72);
    v44 = v35 + v41 + v43 * v39;
    v45 = v10 + v41;
    v46 = v43 * v34;
    v47 = v44 + v46;
    v48 = v45 + v46;
    if (v45 < v47 && v44 < v48)
    {
      sub_1C07B645C();
      sub_1C0786314();
      __break(1u);
      return;
    }
    swift_arrayInitWithCopy();
    if (v34)
    {
      v50 = *(_QWORD *)(v35 + 16);
      v51 = __OFADD__(v50, v34);
      v52 = v50 + v34;
      if (v51)
        goto LABEL_89;
      *(_QWORD *)(v35 + 16) = v52;
    }
LABEL_42:
    sub_1C077E584();
    v94 = v35;
    goto LABEL_43;
  }
  __break(1u);
LABEL_89:
  __break(1u);
LABEL_90:
  __break(1u);
LABEL_91:
  swift_once();
LABEL_4:
  v15 = sub_1C077585C();
  sub_1C077965C(v15, (uint64_t)qword_1ED78D818);
  v16 = sub_1C077CF00();
  if (sub_1C077F60C(v16))
  {
    v17 = (_WORD *)sub_1C0780FC8();
    sub_1C078C17C(v17);
    sub_1C0796F30(&dword_1C0771000, v18, v19, "Tokenizer was not intialized for current system locale. Not emitting aliases.");
    sub_1C0787774();
  }

LABEL_87:
  sub_1C0776760();
}

void sub_1C07DA284()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  os_log_type_t v18;
  _WORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39[2];
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  sub_1C0779670();
  v44 = v1;
  v45 = v2;
  v4 = v3;
  v5 = type metadata accessor for CNContactStructs.EntityAliasRelationshipType(0);
  v43 = *(_QWORD *)(v5 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C07A1A7C(v7, v39[0]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v39 - v9;
  sub_1C07ACF80(&qword_1ED7618D0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v11);
  sub_1C0778564();
  v14 = (void *)(v13 - v12);
  sub_1C106E524();
  v15 = sub_1C0776744();
  sub_1C077AEEC((uint64_t)v14, 1, v15);
  if (v16)
  {
    sub_1C0784B6C((uint64_t)v14, &qword_1ED7618D0);
    if (qword_1ED761458 != -1)
      swift_once();
    v17 = sub_1C077585C();
    sub_1C077965C(v17, (uint64_t)qword_1ED78D818);
    v18 = sub_1C077CF00();
    if (sub_1C077F60C(v18))
    {
      v19 = (_WORD *)sub_1C0780FC8();
      sub_1C078C17C(v19);
      sub_1C0796F30(&dword_1C0771000, v20, v21, "Entity Identifier did not encode type. Not emitting entity alias.");
      sub_1C0787774();
    }

  }
  else
  {
    v41 = sub_1C106D090();
    v23 = v22;
    (*(void (**)(void *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
    v24 = *(_QWORD *)(v4 + 16);
    if (v24)
    {
      v42 = v23;
      v46 = sub_1C0779688();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v39[1] = v4;
      v25 = (unint64_t *)(v4 + 40);
      v26 = MEMORY[0x1E0DEE9D8];
      v40 = xmmword_1C10793A0;
      do
      {
        v47 = v26;
        v28 = *(v25 - 1);
        v27 = *v25;
        sub_1C078C6E8();
        sub_1C106D03C();
        v29 = (_QWORD *)*(int *)(v5 + 24);
        if (qword_1ED761438 != -1)
          swift_once();
        v30 = sub_1C0784DDC();
        v31 = sub_1C079E000(v30, (uint64_t)byte_1ED761420);
        sub_1C07DBC78(v31, (uint64_t)v0, (uint64_t (*)(_QWORD))type metadata accessor for Source);
        sub_1C079CB84();
        sub_1C0792C90();
        sub_1C0797AE8();
        sub_1C07A5B30();
        v32 = &v10[*(int *)(v5 + 56)];
        v33 = HIBYTE(v27) & 0xF;
        if ((v27 & 0x2000000000000000) == 0)
          v33 = v28 & 0xFFFFFFFFFFFFLL;
        *(_QWORD *)v32 = 0;
        *((_QWORD *)v32 + 1) = 0;
        if (v33)
        {
          *v0 = v28;
          v0[1] = v27;
          v34 = v45;
          *v29 = v44;
          v29[1] = v34;
          sub_1C07A7C1C(v32);
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          sub_1C07767B4();
          v26 = v47;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C07B70A8();
            v26 = v37;
          }
          v35 = *(_QWORD *)(v26 + 16);
          if (v35 >= *(_QWORD *)(v26 + 24) >> 1)
          {
            sub_1C07B70A8();
            v26 = v38;
          }
          *(_QWORD *)(v26 + 16) = v35 + 1;
          sub_1C078233C();
          sub_1C07BCD0C(v26 + v36);
        }
        else
        {
          sub_1C0778580();
          v26 = v47;
        }
        v25 += 2;
        sub_1C077CF08();
        --v24;
      }
      while (v24);
      sub_1C078632C();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C077960C();
    }
  }
  sub_1C0776760();
}

void sub_1C07DA578()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  os_log_type_t v11;
  _WORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t inited;
  BOOL v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;

  sub_1C0779670();
  v3 = v2;
  v5 = v4;
  sub_1C07ACF80(&qword_1ED759C40);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v6);
  v7 = (_QWORD *)sub_1C079D1D0();
  v8 = *(v7 - 1);
  MEMORY[0x1E0C80A78](v7);
  sub_1C07785B8();
  sub_1C07DBC30(v3, v0);
  v9 = sub_1C077AEEC(v0, 1, (uint64_t)v7);
  if (!v29)
  {
    v34 = v8;
    v35 = v7;
    (*(void (**)(uint64_t, uint64_t, _QWORD *))(v8 + 32))(v1, v0, v7);
    v15 = MEMORY[0x1E0DEE9D8];
    v16 = sub_1C07B7A18();
    v33 = v16;
    v17 = *(_QWORD *)(v5 + *(int *)(v16 + 36));
    if (v17)
      v15 = v17;
    v18 = *(_QWORD *)(v15 + 16);
    if (v18)
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v19 = v15 + 40;
      do
      {
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        sub_1C106E608();
        v20 = (_QWORD *)sub_1C106E614();
        sub_1C0775834();
        sub_1C077E584();
        sub_1C07DA970();
        if (v21)
        {
          sub_1C0BD9D18();
          sub_1C106E608();
          v22 = sub_1C07D99A0((uint64_t)v20);
          sub_1C077960C();
          sub_1C07DBCD0(v22, v20);
          sub_1C08A2E2C();
          swift_release();
          sub_1C07DA970();
          v24 = v23;
          swift_release();
          if (v24)
            sub_1C0BD9D18();
        }
        else
        {
          sub_1C07785A0();
        }
        v19 += 16;
        --v18;
      }
      while (v18);
    }
    else
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    }
    swift_bridgeObjectRelease();
    v25 = (uint64_t *)(v5 + *(int *)(v33 + 60));
    v26 = v25[1];
    if (!v26)
      goto LABEL_28;
    v27 = *v25;
    v28 = 7627107;
    v29 = *v25 == 7627107 && v26 == 0xE300000000000000;
    if (!v29 && (sub_1C079FC14() & 1) == 0)
    {
      v31 = v27 == 6778724 && v26 == 0xE300000000000000;
      if (v31 || (sub_1C079FC14() & 1) != 0)
      {
        v28 = 6778724;
      }
      else
      {
        v28 = 7628144;
        v32 = v27 == 7628144 && v26 == 0xE300000000000000;
        if (!v32 && (sub_1C079FC14() & 1) == 0)
          goto LABEL_28;
      }
    }
    sub_1C07ACF80(&qword_1ED762CB0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1079220;
    *(_QWORD *)(inited + 32) = v28;
    *(_QWORD *)(inited + 40) = 0xE300000000000000;
    sub_1C07DA970();
    swift_setDeallocating();
    sub_1C0BE8D64();
    sub_1C0BD9D18();
LABEL_28:
    (*(void (**)(uint64_t, _QWORD *))(v34 + 8))(v1, v35);
    goto LABEL_29;
  }
  sub_1C077C790(v9, &qword_1ED759C40);
  if (qword_1ED761458 != -1)
    swift_once();
  v10 = sub_1C077585C();
  sub_1C077965C(v10, (uint64_t)qword_1ED78D818);
  v11 = sub_1C077CF00();
  if (sub_1C077F60C(v11))
  {
    v12 = (_WORD *)sub_1C0780FC8();
    sub_1C078C17C(v12);
    sub_1C0796F30(&dword_1C0771000, v13, v14, "Tokenizer was not intialized for current system locale. Not emitting aliases.");
    sub_1C0787774();
  }

LABEL_29:
  sub_1C0776760();
}

void sub_1C07DA970()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  BOOL v25;
  BOOL v26;
  uint64_t v27;
  os_log_type_t v28;
  _WORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t *v35;
  _QWORD *v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49[2];
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;

  sub_1C0779670();
  v53 = v0;
  v54 = v1;
  v3 = v2;
  v5 = v4;
  v6 = sub_1C077C088();
  v52 = *(_QWORD *)(v6 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v7);
  sub_1C07A1A7C(v8, v49[0]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v49 - v10;
  sub_1C07ACF80(&qword_1ED7618D0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v12);
  sub_1C0778564();
  v15 = v14 - v13;
  v16 = (_QWORD *)sub_1C0776744();
  v17 = *(v16 - 1);
  MEMORY[0x1E0C80A78](v16);
  sub_1C0778564();
  v20 = v19 - v18;
  v21 = (uint64_t *)(v5 + *(int *)(sub_1C07B7A18() + 60));
  v22 = v21[1];
  if (v22)
  {
    v23 = *v21;
    v24 = *v21 == 7627107 && v22 == 0xE300000000000000;
    if (v24 || (sub_1C0790CD0() & 1) != 0)
    {
      sub_1C106D0B4();
      goto LABEL_27;
    }
    v25 = v23 == 6778724 && v22 == 0xE300000000000000;
    if (v25 || (sub_1C0790CD0() & 1) != 0)
    {
      sub_1C106D0C0();
      goto LABEL_27;
    }
    v26 = v23 == 7628144 && v22 == 0xE300000000000000;
    if (v26 || (sub_1C0790CD0() & 1) != 0)
    {
      sub_1C106D0D8();
      goto LABEL_27;
    }
  }
  sub_1C106E524();
  sub_1C077AEEC(v15, 1, (uint64_t)v16);
  if (!v24)
  {
    v20 = v15;
LABEL_27:
    v51 = sub_1C106D090();
    v33 = v32;
    (*(void (**)(uint64_t, _QWORD *))(v17 + 8))(v20, v16);
    v34 = *(_QWORD *)(v3 + 16);
    if (v34)
    {
      v55 = v33;
      v56 = sub_1C0779688();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v49[1] = v3;
      v35 = (unint64_t *)(v3 + 40);
      v36 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v50 = xmmword_1C10793A0;
      do
      {
        v57 = v36;
        v38 = *(v35 - 1);
        v37 = *v35;
        sub_1C078C6E8();
        sub_1C106D03C();
        v39 = (_QWORD *)*(int *)(v6 + 24);
        if (qword_1ED7623A8 != -1)
          swift_once();
        v40 = sub_1C0784DDC();
        v41 = sub_1C079E000(v40, (uint64_t)&unk_1ED762388);
        sub_1C07DBC78(v41, (uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for Source);
        sub_1C079CB84();
        sub_1C0792C90();
        sub_1C0797AE8();
        sub_1C07A5B30();
        v42 = &v11[*(int *)(v6 + 56)];
        v43 = HIBYTE(v37) & 0xF;
        if ((v37 & 0x2000000000000000) == 0)
          v43 = v38 & 0xFFFFFFFFFFFFLL;
        *(_QWORD *)v42 = 0;
        *((_QWORD *)v42 + 1) = 0;
        if (v43)
        {
          *v36 = v38;
          v36[1] = v37;
          v44 = v54;
          *v39 = v53;
          v39[1] = v44;
          sub_1C07A7C1C(v42);
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          sub_1C07767B4();
          v36 = v57;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C07AEDC0();
            v36 = v47;
          }
          v45 = v36[2];
          if (v45 >= v36[3] >> 1)
          {
            sub_1C07AEDC0();
            v36 = v48;
          }
          v36[2] = v45 + 1;
          sub_1C078233C();
          sub_1C07BCD0C((uint64_t)v36 + v46);
        }
        else
        {
          sub_1C0778580();
          v36 = v57;
        }
        v35 += 2;
        sub_1C077CF08();
        --v34;
      }
      while (v34);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C077960C();
    }
    goto LABEL_43;
  }
  sub_1C0784B6C(v15, &qword_1ED7618D0);
  if (qword_1ED761458 != -1)
    swift_once();
  v27 = sub_1C077585C();
  sub_1C077965C(v27, (uint64_t)qword_1ED78D818);
  v28 = sub_1C077CF00();
  if (sub_1C077F60C(v28))
  {
    v29 = (_WORD *)sub_1C0780FC8();
    sub_1C078C17C(v29);
    sub_1C0796F30(&dword_1C0771000, v30, v31, "Entity Identifier did not encode type. Not emitting entity alias.");
    sub_1C0787774();
  }

LABEL_43:
  sub_1C0776760();
}

void sub_1C07DAD3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int8 *a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  os_log_type_t v61;
  _WORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v94;
  BOOL v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int *v102;
  int *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(uint64_t, uint64_t);
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void (*v111)(uint64_t, uint64_t, uint64_t);
  uint64_t v112;
  uint64_t (*v113)(uint64_t, uint64_t);
  uint64_t *v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  int *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  uint64_t v153;

  sub_1C0779670();
  v24 = v23;
  v136 = v25;
  v137 = v26;
  v28 = v27;
  v134 = v29;
  v135 = v30;
  v140 = v31;
  v149 = type metadata accessor for EntityTriple(0);
  v139 = *(_QWORD *)(v149 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v32);
  sub_1C077AED0();
  v144 = v33;
  MEMORY[0x1E0C80A78](v34);
  v148 = (uint64_t)&v130 - v35;
  v36 = type metadata accessor for TranslatedEntityTriple(0);
  v146 = *(_QWORD *)(v36 - 8);
  v147 = (int *)v36;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v37);
  sub_1C077AED0();
  v145 = v38;
  MEMORY[0x1E0C80A78](v39);
  v41 = (char *)&v130 - v40;
  sub_1C07ACF80(&qword_1EF62FA20);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v42);
  v44 = (char *)&v130 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_1C07B7A18();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v46);
  sub_1C077AE40();
  v138 = v47;
  sub_1C07ACF80(&qword_1ED759C40);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v48);
  sub_1C0778564();
  v51 = v50 - v49;
  v52 = sub_1C106E638();
  v53 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  sub_1C0778564();
  v56 = v55 - v54;
  LODWORD(v150) = *a23;
  v58 = v57;
  sub_1C07DBC30(v24, v51);
  sub_1C077AEEC(v51, 1, v58);
  if (v59)
  {
    sub_1C0784B6C(v51, &qword_1ED759C40);
    if (qword_1ED761458 == -1)
    {
LABEL_4:
      v60 = sub_1C077585C();
      sub_1C077965C(v60, (uint64_t)qword_1ED78D818);
      v61 = sub_1C077CF00();
      if (sub_1C077F60C(v61))
      {
        v62 = (_WORD *)sub_1C0780FC8();
        sub_1C078C17C(v62);
        sub_1C0796F30(&dword_1C0771000, v63, v64, "Tokenizer was not intialized for current system locale. Not emitting aliases.");
        sub_1C0787774();
      }

LABEL_7:
      sub_1C0776760();
      return;
    }
LABEL_43:
    swift_once();
    goto LABEL_4;
  }
  v133 = v28;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 32))(v56, v51, v58);
  sub_1C07767B4();
  v142 = a21;
  v143 = a22;
  sub_1C102E5C0(a21, a22, v65, v66, v67, v68, v69, v70, v130, v131, v132, v133, v134, v135, v136, v137, v138, v139, v140,
    (uint64_t)v141);
  v132 = v53;
  v71 = MEMORY[0x1E0DEE9D8];
  sub_1C077B5DC((uint64_t)v44, 0);
  sub_1C07DBCA0((uint64_t)v44, v138, type metadata accessor for PHPersonStructs.Person);
  v153 = v71;
  sub_1C106E608();
  v131 = v56;
  sub_1C106E614();
  swift_bridgeObjectRelease();
  v151 = 0x696D616E6F747561;
  v152 = 0xEB000000005F676ELL;
  sub_1C106FC94();
  sub_1C07DB694();
  v73 = v72;
  sub_1C077960C();
  sub_1C077E584();
  if (v73)
    sub_1C0BD9D18();
  v136 = v58;
  v74 = v153;
  v75 = *(int *)(v45 + 68);
  v76 = v138;
  sub_1C07767B4();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v76 + v75) = v74;
  sub_1C1033334();
  v77 = *(_QWORD *)(v76 + v75);
  if (v77)
  {
    v78 = *(_QWORD *)(v77 + 16);
    if (!v78)
    {
      v97 = MEMORY[0x1E0DEE9D8];
LABEL_31:
      v98 = *(_QWORD *)(v97 + 16);
      v142 = v97;
      if (v98)
      {
        v151 = MEMORY[0x1E0DEE9D8];
        sub_1C09D317C();
        sub_1C078233C();
        v100 = v97 + v99;
        v143 = *(_QWORD *)(v101 + 72);
        v141 = v41;
        v102 = (int *)v149;
        v103 = v147;
        do
        {
          v150 = v98;
          v104 = v148;
          sub_1C07DBC78(v100, v148, type metadata accessor for EntityTriple);
          v105 = v144;
          sub_1C07DBC78(v104, v144, type metadata accessor for EntityTriple);
          sub_1C106E590();
          sub_1C078C714();
          v106 = v145;
          v107(v145, v105);
          v108 = v105 + v102[5];
          v109 = v106 + v103[5];
          v110 = sub_1C0779688();
          v111 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v110 - 8) + 16);
          v111(v109, v108, v110);
          v112 = v106 + v103[6];
          sub_1C106EB24();
          sub_1C078C714();
          sub_1C0793628(v112, v113);
          v111(v106 + v103[7], v105 + v102[7], v110);
          v114 = (uint64_t *)(v105 + v102[8]);
          v115 = *v114;
          v116 = v114[1];
          v117 = (_QWORD *)(v106 + v103[8]);
          *v117 = v115;
          v117[1] = v116;
          sub_1C07DBC78(v105 + v102[9], v106 + v103[9], (uint64_t (*)(_QWORD))type metadata accessor for Source);
          v118 = (uint64_t *)(v105 + v102[10]);
          v119 = *v118;
          v120 = v118[1];
          v121 = (_QWORD *)(v106 + v103[10]);
          *v121 = v119;
          v121[1] = v120;
          *(_QWORD *)(v106 + v103[11]) = *(_QWORD *)(v105 + v102[11]);
          LOBYTE(v111) = *(_BYTE *)(v105 + v102[12]);
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          sub_1C07B1F90(v105, type metadata accessor for EntityTriple);
          *(_BYTE *)(v106 + v103[12]) = (_BYTE)v111;
          v122 = v106;
          v123 = (uint64_t)v141;
          sub_1C07DBCA0(v122, (uint64_t)v141, type metadata accessor for TranslatedEntityTriple);
          sub_1C07B1F90(v104, type metadata accessor for EntityTriple);
          v124 = v151;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C09D317C();
            v124 = v151;
          }
          v125 = *(_QWORD *)(v124 + 16);
          v126 = v150;
          if (v125 >= *(_QWORD *)(v124 + 24) >> 1)
          {
            sub_1C09D317C();
            v124 = v151;
          }
          *(_QWORD *)(v124 + 16) = v125 + 1;
          sub_1C078233C();
          sub_1C07DBCA0(v123, v124 + v127 + *(_QWORD *)(v128 + 72) * v125, type metadata accessor for TranslatedEntityTriple);
          v100 += v143;
          v98 = v126 - 1;
        }
        while (v98);
      }
      swift_bridgeObjectRelease();
      sub_1C07B1F90(v138, type metadata accessor for PHPersonStructs.Person);
      sub_1C07AACBC();
      (*(void (**)(uint64_t, uint64_t))(v129 + 8))(v131, v136);
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    sub_1C077C088();
    sub_1C07785D0();
    v80 = v77 + v79;
    v140 = *(_QWORD *)(v81 + 72);
    v135 = v77;
    swift_bridgeObjectRetain_n();
    v82 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      LOBYTE(v151) = v150;
      sub_1C102EF94();
      v84 = v83;
      v24 = *(_QWORD *)(v83 + 16);
      v85 = *(_QWORD *)(v82 + 16);
      if (__OFADD__(v85, v24))
        break;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v87 = v82;
      if (!isUniquelyReferenced_nonNull_native || v85 + v24 > *(_QWORD *)(v82 + 24) >> 1)
      {
        sub_1C07EACCC();
        v87 = v88;
      }
      if (*(_QWORD *)(v84 + 16))
      {
        v89 = *(_QWORD *)(v87 + 16);
        if ((*(_QWORD *)(v87 + 24) >> 1) - v89 < v24)
          goto LABEL_41;
        v90 = (*(unsigned __int8 *)(v139 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v139 + 80);
        v91 = *(_QWORD *)(v139 + 72);
        v92 = v87 + v90 + v91 * v89;
        if (v84 + v90 < v92 + v91 * v24 && v92 < v84 + v90 + v91 * v24)
          goto LABEL_45;
        v82 = v87;
        swift_arrayInitWithCopy();
        if (v24)
        {
          v94 = *(_QWORD *)(v82 + 16);
          v95 = __OFADD__(v94, v24);
          v96 = v94 + v24;
          if (v95)
            goto LABEL_42;
          *(_QWORD *)(v82 + 16) = v96;
        }
      }
      else
      {
        v82 = v87;
        if (v24)
          goto LABEL_40;
      }
      sub_1C077E584();
      v80 += v140;
      if (!--v78)
      {
        swift_bridgeObjectRelease_n();
        v97 = v82;
        goto LABEL_31;
      }
    }
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  __break(1u);
LABEL_45:
  sub_1C07B645C();
  sub_1C0786314();
  __break(1u);
}

void sub_1C07DB694()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  os_log_type_t v16;
  _WORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t i;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  sub_1C0779670();
  v63 = v1;
  v64 = v2;
  v61 = v3;
  v62 = v4;
  v5 = (int *)sub_1C077C088();
  v60 = *((_QWORD *)v5 - 1);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  v8 = (unint64_t)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v54 - v10;
  sub_1C07ACF80(&qword_1ED7618D0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v12);
  sub_1C07785B8();
  sub_1C106E524();
  v13 = sub_1C0776744();
  sub_1C077AEEC(v0, 1, v13);
  if (v14)
  {
    sub_1C0784B6C(v0, &qword_1ED7618D0);
    if (qword_1ED761458 != -1)
      goto LABEL_41;
    goto LABEL_4;
  }
  v57 = sub_1C106D090();
  v59 = v20;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v0, v13);
  v21 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0898D28(v21);
  v23 = 0;
  v24 = *(_QWORD *)(v22 + 56);
  v55 = v22 + 56;
  v65 = v22;
  v25 = 1 << *(_BYTE *)(v22 + 32);
  v26 = -1;
  if (v25 < 64)
    v26 = ~(-1 << v25);
  v27 = v26 & v24;
  v28 = MEMORY[0x1E0DEE9D8];
  v56 = (unint64_t)(v25 + 63) >> 6;
  v58 = v8;
  if ((v26 & v24) == 0)
    goto LABEL_11;
LABEL_10:
  v29 = __clz(__rbit64(v27));
  v27 &= v27 - 1;
  for (i = v29 | (v23 << 6); ; i = __clz(__rbit64(v32)) + (v23 << 6))
  {
    v34 = (uint64_t *)(*(_QWORD *)(v65 + 48) + 16 * i);
    v35 = *v34;
    v36 = v34[1];
    v37 = sub_1C0779688();
    sub_1C07B2D8C((uint64_t)v11, 1, 1, v37);
    sub_1C077E6D0();
    sub_1C106D03C();
    v38 = v5[6];
    if (qword_1ED7623A8 != -1)
      swift_once();
    v39 = type metadata accessor for Source();
    v40 = sub_1C079E000(v39, (uint64_t)&unk_1ED762388);
    sub_1C07DBC78(v40, (uint64_t)&v11[v38], (uint64_t (*)(_QWORD))type metadata accessor for Source);
    sub_1C106DD74();
    v41 = &v11[v5[8]];
    *(_QWORD *)v41 = 0;
    *((_QWORD *)v41 + 1) = 0;
    sub_1C106DE10();
    v42 = &v11[v5[10]];
    *(_QWORD *)v42 = 0;
    *((_QWORD *)v42 + 1) = 0;
    sub_1C106DF00();
    v43 = (uint64_t *)&v11[v5[12]];
    *v43 = 0;
    v43[1] = 0;
    sub_1C106E164();
    v44 = &v11[v5[14]];
    v45 = HIBYTE(v36) & 0xF;
    if ((v36 & 0x2000000000000000) == 0)
      v45 = v35 & 0xFFFFFFFFFFFFLL;
    *(_QWORD *)v44 = 0;
    *((_QWORD *)v44 + 1) = 0;
    if (!v45)
    {
      swift_bridgeObjectRelease();
      swift_release();
      sub_1C078632C();
      sub_1C07785A0();
      sub_1C07B1F90((uint64_t)v11, type metadata accessor for PHPersonStructs.EntityAliasRelationshipType);
      goto LABEL_38;
    }
    *(_QWORD *)v41 = v35;
    *((_QWORD *)v41 + 1) = v36;
    v46 = v62;
    *(_QWORD *)v42 = v61;
    *((_QWORD *)v42 + 1) = v46;
    v47 = v59;
    *v43 = v57;
    v43[1] = v47;
    v48 = v64;
    *(_QWORD *)v44 = v63;
    *((_QWORD *)v44 + 1) = v48;
    v49 = v58;
    sub_1C07DBC78((uint64_t)v11, v58, type metadata accessor for PHPersonStructs.EntityAliasRelationshipType);
    sub_1C077E6D0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C07767B4();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C078DEA0();
      v28 = v52;
    }
    v8 = *(_QWORD *)(v28 + 16);
    if (v8 >= *(_QWORD *)(v28 + 24) >> 1)
    {
      sub_1C078DEA0();
      v28 = v53;
    }
    *(_QWORD *)(v28 + 16) = v8 + 1;
    sub_1C078233C();
    sub_1C07DBCA0(v49, v28 + v50 + *(_QWORD *)(v51 + 72) * v8, type metadata accessor for PHPersonStructs.EntityAliasRelationshipType);
    sub_1C07B1F90((uint64_t)v11, type metadata accessor for PHPersonStructs.EntityAliasRelationshipType);
    if (v27)
      goto LABEL_10;
LABEL_11:
    v31 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v31 >= v56)
      goto LABEL_37;
    v32 = *(_QWORD *)(v55 + 8 * v31);
    ++v23;
    if (!v32)
    {
      v23 = v31 + 1;
      if (v31 + 1 >= v56)
        goto LABEL_37;
      v32 = *(_QWORD *)(v55 + 8 * v23);
      if (!v32)
      {
        v23 = v31 + 2;
        if (v31 + 2 >= v56)
          goto LABEL_37;
        v32 = *(_QWORD *)(v55 + 8 * v23);
        if (!v32)
          break;
      }
    }
LABEL_24:
    v27 = (v32 - 1) & v32;
  }
  v33 = v31 + 3;
  if (v33 >= v56)
  {
LABEL_37:
    sub_1C078632C();
    swift_release();
    goto LABEL_38;
  }
  v32 = *(_QWORD *)(v55 + 8 * v33);
  if (v32)
  {
    v23 = v33;
    goto LABEL_24;
  }
  while (1)
  {
    v23 = v33 + 1;
    if (__OFADD__(v33, 1))
      break;
    if (v23 >= v56)
      goto LABEL_37;
    v32 = *(_QWORD *)(v55 + 8 * v23);
    ++v33;
    if (v32)
      goto LABEL_24;
  }
LABEL_40:
  __break(1u);
LABEL_41:
  swift_once();
LABEL_4:
  v15 = sub_1C077585C();
  sub_1C077965C(v15, (uint64_t)qword_1ED78D818);
  v16 = sub_1C077CF00();
  if (sub_1C077F60C(v16))
  {
    v17 = (_WORD *)sub_1C0780FC8();
    sub_1C078C17C(v17);
    sub_1C0796F30(&dword_1C0771000, v18, v19, "Entity Identifier did not encode type. Not emitting entity alias.");
    sub_1C0787774();
  }

LABEL_38:
  sub_1C0776760();
}

uint64_t sub_1C07DBB44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  type metadata accessor for PhaseStores();
  swift_retain();
  sub_1C07F7CA4();
  v2 = v1;
  result = swift_release();
  if (!v0)
  {
    if (v2)
    {
      swift_retain();
      v4 = sub_1C07F7D20();
      swift_release();
      swift_bridgeObjectRelease();
      if (v4)
        v5 = v4;
      else
        v5 = MEMORY[0x1E0DEE9D8];
      if (v4 == 1)
        return MEMORY[0x1E0DEE9D8];
      else
        return v5;
    }
    else
    {
      return MEMORY[0x1E0DEE9D8];
    }
  }
  return result;
}

uint64_t sub_1C07DBC30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1ED759C40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C07DBC78(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  sub_1C0779690(a1, a2, a3);
  sub_1C078C714();
  sub_1C0793628(v3, v4);
  sub_1C0778534();
}

void sub_1C07DBCA0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  v4 = sub_1C0779690(a1, a2, a3);
  sub_1C0793628(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32));
  sub_1C0778534();
}

uint64_t sub_1C07DBCD0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  char v5;
  unsigned int v6;
  unint64_t v7;
  uint64_t isStackAllocationSafe;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD v13[2];

  v13[1] = *MEMORY[0x1E0C80C00];
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v7 = (unint64_t)((1 << v5) + 63) >> 6;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    v9 = (_QWORD *)((char *)v13 - ((8 * v7 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_1C07E7D20(0, v7, v9);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v10 = sub_1C07DBE9C((uint64_t)v9, v7, a1, a2);
    swift_release();
    if (v2)
      swift_willThrow();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v11 = (_QWORD *)swift_slowAlloc();
    sub_1C07E7D20(0, v7, v11);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v10 = sub_1C07DBE9C((uint64_t)v11, v7, a1, a2);
    swift_release();
    MEMORY[0x1C3BA8270](v11, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1C07DBE9C(uint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;

  v4 = 0;
  v29 = 0;
  v30 = a3 + 56;
  v5 = 1 << *(_BYTE *)(a3 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a3 + 56);
  v31 = (unint64_t)(v5 + 63) >> 6;
  v27 = (uint64_t *)result;
  v28 = a4 + 7;
  while (1)
  {
    while (1)
    {
LABEL_4:
      if (v7)
      {
        v8 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v9 = v8 | (v4 << 6);
      }
      else
      {
        v10 = v4 + 1;
        if (__OFADD__(v4, 1))
          goto LABEL_40;
        if (v10 >= v31)
          goto LABEL_38;
        v11 = *(_QWORD *)(v30 + 8 * v10);
        ++v4;
        if (!v11)
        {
          v4 = v10 + 1;
          if (v10 + 1 >= v31)
            goto LABEL_38;
          v11 = *(_QWORD *)(v30 + 8 * v4);
          if (!v11)
          {
            v4 = v10 + 2;
            if (v10 + 2 >= v31)
              goto LABEL_38;
            v11 = *(_QWORD *)(v30 + 8 * v4);
            if (!v11)
            {
              v12 = v10 + 3;
              if (v12 >= v31)
                goto LABEL_38;
              v11 = *(_QWORD *)(v30 + 8 * v12);
              if (!v11)
              {
                while (1)
                {
                  v4 = v12 + 1;
                  if (__OFADD__(v12, 1))
                    goto LABEL_41;
                  if (v4 >= v31)
                    goto LABEL_38;
                  v11 = *(_QWORD *)(v30 + 8 * v4);
                  ++v12;
                  if (v11)
                    goto LABEL_19;
                }
              }
              v4 = v12;
            }
          }
        }
LABEL_19:
        v7 = (v11 - 1) & v11;
        v9 = __clz(__rbit64(v11)) + (v4 << 6);
      }
      v13 = a4[2];
      if (v13)
        break;
LABEL_35:
      *(uint64_t *)((char *)v27 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
      if (__OFADD__(v29++, 1))
      {
        __break(1u);
LABEL_38:
        swift_retain();
        sub_1C0C87FA0(v27, a2, v29, a3);
        v25 = v24;
        swift_bridgeObjectRelease();
        return v25;
      }
    }
    v14 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * v9);
    v15 = *v14;
    v16 = v14[1];
    result = a4[4];
    if (result != *v14 || a4[5] != v16)
    {
      result = sub_1C1070CB4();
      if ((result & 1) == 0)
        break;
    }
  }
  if (v13 == 1)
    goto LABEL_35;
  v18 = v28;
  v19 = 1;
  while (1)
  {
    v20 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    result = *(v18 - 1);
    v21 = *v18;
    v18 += 2;
    if (result == v15 && v21 == v16)
      goto LABEL_4;
    result = sub_1C1070CB4();
    if ((result & 1) != 0)
      goto LABEL_4;
    ++v19;
    if (v20 == v13)
      goto LABEL_35;
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

void AmbientLightDistributionProvider.__allocating_init()()
{
  sub_1C0778598();
  AmbientLightDistributionProvider.init()();
  sub_1C0778534();
}

uint64_t AmbientLightDistributionProvider.init()()
{
  uint64_t v0;
  id v1;
  id v2;

  v1 = objc_msgSend((id)BiomeLibrary(), sel_ContextualUnderstanding);
  swift_unknownObjectRelease();
  v2 = objc_msgSend(v1, sel_AmbientLight);
  swift_unknownObjectRelease();
  *(_QWORD *)(v0 + 16) = v2;
  *(_QWORD *)(v0 + 24) = 0x404E000000000000;
  return v0;
}

uint64_t sub_1C07DC1A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  _QWORD *v23;
  void *v24;
  id v25;
  void (*v26)(_QWORD *@<X8>);
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  double v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t result;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(void *);
  _QWORD *v53;

  v5 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v45 - v9;
  v46 = v2;
  v11 = *(void **)(v2 + 16);
  v12 = sub_1C106ADE0();
  v13 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  v13(v10, a1, v12);
  sub_1C079ED38((uint64_t)v10);
  v45 = a2;
  v13(v8, a2, v12);
  sub_1C079ED38((uint64_t)v8);
  v14 = objc_allocWithZone(MEMORY[0x1E0D026F0]);
  v15 = sub_1C07DC9F8((uint64_t)v10, (uint64_t)v8, 0, 0, 0);
  v16 = objc_msgSend(v11, sel_publisherWithOptions_, v15);

  v17 = sub_1C0778598();
  *(_QWORD *)(v17 + 16) = sub_1C106F97C();
  v18 = (uint64_t *)(v17 + 16);
  v19 = sub_1C0778598();
  *(_BYTE *)(v19 + 16) = 8;
  v20 = sub_1C0778598();
  *(_QWORD *)(v20 + 16) = 0;
  *(_BYTE *)(v20 + 24) = 1;
  v52 = (void (*)(void *))nullsub_1;
  v53 = 0;
  v21 = MEMORY[0x1E0C809B0];
  v50 = MEMORY[0x1E0C809B0];
  v51 = 1107296256;
  v22 = sub_1C079FC44((uint64_t)sub_1C07BF90C);
  v23 = (_QWORD *)sub_1C0778598();
  v23[2] = v19;
  v23[3] = v20;
  v23[4] = v17;
  v52 = sub_1C07DCB58;
  v53 = v23;
  v50 = v21;
  v51 = 1107296256;
  v24 = sub_1C079FC44((uint64_t)sub_1C07BF90C);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  v47 = v16;
  v25 = objc_msgSend(v16, sel_sinkWithCompletion_receiveInput_, v22, v24);
  _Block_release(v24);
  _Block_release(v22);

  sub_1C0775864();
  v26 = 0;
  v27 = *(unsigned __int8 *)(v19 + 16);
  if (v27 == 8 || (sub_1C0775864(), v26 = 0, (*(_BYTE *)(v20 + 24) & 1) != 0))
  {
LABEL_10:
    sub_1C0775864();
    swift_retain();
    v42 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v43 = sub_1C07DF7A4(v42);

    swift_release();
    swift_release();
    swift_release();
    sub_1C077960C();
    sub_1C077AB58((uint64_t)v26);
    return v43;
  }
  v28 = *(double *)(v20 + 16);
  v49 = v27;
  v29 = sub_1C1070C0C();
  v31 = v30;
  sub_1C106AC60();
  v33 = v32;
  swift_beginAccess();
  swift_isUniquelyReferenced_nonNull_native();
  v48 = *v18;
  v34 = v48;
  *v18 = 0x8000000000000000;
  v45 = v29;
  v35 = sub_1C077D774(v29, v31);
  if (__OFADD__(*(_QWORD *)(v34 + 16), (v36 & 1) == 0))
  {
    __break(1u);
  }
  else
  {
    v37 = v35;
    v38 = v36;
    sub_1C07ACF80(&qword_1ED760850);
    if ((sub_1C107090C() & 1) == 0)
    {
LABEL_7:
      *v18 = v48;
      swift_bridgeObjectRelease();
      v41 = *v18;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      if ((v38 & 1) == 0)
      {
        sub_1C07DF97C(v37, v45, v31, v41);
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      }
      *(double *)(*(_QWORD *)(v41 + 56) + 8 * v37) = v33 - v28 + *(double *)(*(_QWORD *)(v41 + 56) + 8 * v37);
      swift_endAccess();
      sub_1C07767AC();
      sub_1C077960C();
      v26 = sub_1C07DC9B0;
      goto LABEL_10;
    }
    v39 = sub_1C077D774(v45, v31);
    if ((v38 & 1) == (v40 & 1))
    {
      v37 = v39;
      goto LABEL_7;
    }
  }
  result = sub_1C1070D44();
  __break(1u);
  return result;
}

void sub_1C07DC644(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8;
  void *v9;
  char v10;
  void (*v11)(_QWORD *@<X8>);
  uint64_t *v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  char oslog;
  NSObject *osloga;
  uint64_t v35;

  v8 = objc_msgSend(a1, sel_eventBody);
  if (v8)
  {
    v9 = v8;
    v10 = sub_1C07E716C(v8);
    swift_beginAccess();
    v11 = 0;
    if (*(_BYTE *)(a2 + 16) == 8 || (swift_beginAccess(), v11 = 0, (*(_BYTE *)(a3 + 24) & 1) != 0))
    {
LABEL_11:
      swift_beginAccess();
      *(_BYTE *)(a2 + 16) = v10;
      objc_msgSend(a1, sel_timestamp);
      v28 = v27;

      swift_beginAccess();
      *(_QWORD *)(a3 + 16) = v28;
      *(_BYTE *)(a3 + 24) = 0;
      sub_1C077AB58((uint64_t)v11);
      return;
    }
    oslog = v10;
    v12 = (uint64_t *)(a4 + 16);
    v13 = *(double *)(a3 + 16);
    v14 = sub_1C1070C0C();
    v16 = v15;
    objc_msgSend(a1, sel_timestamp);
    v18 = v17;
    swift_beginAccess();
    swift_isUniquelyReferenced_nonNull_native();
    v19 = *v12;
    v35 = *v12;
    *v12 = 0x8000000000000000;
    v32 = v14;
    v20 = sub_1C077D774(v14, v16);
    if (__OFADD__(*(_QWORD *)(v19 + 16), (v21 & 1) == 0))
    {
      __break(1u);
    }
    else
    {
      v22 = v20;
      v23 = v21;
      sub_1C07ACF80(&qword_1ED760850);
      if ((sub_1C107090C() & 1) == 0)
      {
LABEL_8:
        *v12 = v35;
        swift_bridgeObjectRelease();
        v26 = *v12;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        if ((v23 & 1) == 0)
        {
          sub_1C07DF97C(v22, v32, v16, v26);
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        }
        *(double *)(*(_QWORD *)(v26 + 56) + 8 * v22) = v18 - v13 + *(double *)(*(_QWORD *)(v26 + 56) + 8 * v22);
        swift_endAccess();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v11 = sub_1C07DC9B0;
        v10 = oslog;
        goto LABEL_11;
      }
      v24 = sub_1C077D774(v32, v16);
      if ((v23 & 1) == (v25 & 1))
      {
        v22 = v24;
        goto LABEL_8;
      }
    }
    sub_1C1070D44();
    __break(1u);
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v29 = sub_1C106F544();
    sub_1C079E000(v29, (uint64_t)qword_1ED762AF8);
    osloga = sub_1C106F538();
    v30 = sub_1C10703A8();
    if (os_log_type_enabled(osloga, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v31 = 0;
      _os_log_impl(&dword_1C0771000, osloga, v30, "Unable to parse eventBody from read event in ambient light distribution provider", v31, 2u);
      MEMORY[0x1C3BA8270](v31, -1, -1);
    }

  }
}

void sub_1C07DC9B0(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t AmbientLightDistributionProvider.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t AmbientLightDistributionProvider.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

id sub_1C07DC9F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  void *v5;
  void *v6;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;

  v6 = v5;
  v12 = sub_1C106ADE0();
  v13 = 0;
  if (sub_1C078DEAC(a1) != 1)
  {
    v13 = (void *)sub_1C106AD38();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a1, v12);
  }
  if (sub_1C078DEAC(a2) == 1)
  {
    v14 = 0;
  }
  else
  {
    v14 = (void *)sub_1C106AD38();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a2, v12);
  }
  v15 = objc_msgSend(v6, sel_initWithStartDate_endDate_maxEvents_lastN_reversed_, v13, v14, a3, a4, a5 & 1);

  return v15;
}

uint64_t sub_1C07DCAE8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C07DCB0C()
{
  return sub_1C078F06C();
}

uint64_t sub_1C07DCB18()
{
  return sub_1C078F06C();
}

uint64_t sub_1C07DCB24()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1C07DCB58(void *a1)
{
  uint64_t *v1;

  sub_1C07DC644(a1, v1[2], v1[3], v1[4]);
}

unint64_t sub_1C07DCB68()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  v0 = sub_1C07B9584();
  sub_1C0A54430(v0, v1);
  v2 = sub_1C07B7A20();
  return sub_1C07DD7C8(v2, v3);
}

unint64_t sub_1C07DCB8C()
{
  char v0;
  uint64_t v1;

  sub_1C07B9584();
  sub_1C0A543CC();
  v0 = sub_1C07B7A20();
  return sub_1C07DD68C(v0, v1);
}

unint64_t sub_1C07DCBB0()
{
  char v0;
  uint64_t v1;

  sub_1C0A54788();
  v0 = sub_1C07B7A20();
  return sub_1C07DD90C(v0, v1);
}

unint64_t sub_1C07DCBDC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C10706E4();
  return sub_1C07DDA98(a1, v2);
}

void sub_1C07DCC0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C078F058();
  sub_1C106D6FC();
  sub_1C079B3BC((unint64_t *)&qword_1ED747AA0, v0, MEMORY[0x1E0D3C198]);
  v1 = sub_1C0799610();
  sub_1C07AD9D8(v1, v1, v2, &qword_1EF62FAF0, MEMORY[0x1E0D3C1A0]);
  sub_1C07785E4();
}

void sub_1C07DCC70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C078F058();
  sub_1C106E41C();
  sub_1C079B3BC(&qword_1ED75EA28, v0, MEMORY[0x1E0D3CC68]);
  v1 = sub_1C0799610();
  sub_1C07AD9D8(v1, v1, v2, (unint64_t *)&qword_1ED75EA30, MEMORY[0x1E0D3CC78]);
  sub_1C07785E4();
}

unint64_t sub_1C07DCCD4(unsigned __int8 a1)
{
  uint64_t v2;

  sub_1C0796010();
  sub_1C1070E04();
  v2 = sub_1C077AE74();
  return sub_1C07DDB5C(a1, v2);
}

void sub_1C07DCD20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C078F058();
  sub_1C106EB24();
  sub_1C079B3BC(&qword_1ED761910, v0, MEMORY[0x1E0D3D468]);
  v1 = sub_1C0799610();
  sub_1C07AD9D8(v1, v1, v2, qword_1ED75EA50, MEMORY[0x1E0D3D478]);
  sub_1C07785E4();
}

void sub_1C07DCD84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C078F058();
  sub_1C106E590();
  sub_1C079B3BC((unint64_t *)&qword_1ED7618F0, v0, MEMORY[0x1E0D3CE40]);
  v1 = sub_1C0799610();
  sub_1C07AD9D8(v1, v1, v2, &qword_1ED75EA38, MEMORY[0x1E0D3CE50]);
  sub_1C07785E4();
}

void sub_1C07DCDE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C078F058();
  sub_1C106D6CC();
  sub_1C079B3BC((unint64_t *)&qword_1ED744A48, v0, MEMORY[0x1E0D3C148]);
  v1 = sub_1C0799610();
  sub_1C07AD9D8(v1, v1, v2, (unint64_t *)&unk_1ED744A50, MEMORY[0x1E0D3C150]);
  sub_1C07785E4();
}

uint64_t sub_1C07DCE4C(uint64_t a1)
{
  return sub_1C077D9B0(a1, (void (*)(uint64_t))sub_1C084AE10, (uint64_t (*)(void))sub_1C07DDBFC);
}

unint64_t sub_1C07DCE60(unsigned __int16 a1)
{
  uint64_t v2;

  sub_1C0796010();
  sub_1C1070E1C();
  v2 = sub_1C077AE74();
  return sub_1C07DDFF0(a1, v2);
}

unint64_t sub_1C07DCEAC()
{
  unsigned __int8 *v0;
  uint64_t v1;

  sub_1C0796010();
  sub_1C1070E04();
  type metadata accessor for CachedBehaviorDatabaseHistogramManager.BehaviorHistogramCacheKey(0);
  sub_1C106D6CC();
  sub_1C0794BAC((unint64_t *)&qword_1ED744A48, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C130], MEMORY[0x1E0D3C148]);
  sub_1C106FA0C();
  sub_1C077AE74();
  v0 = (unsigned __int8 *)sub_1C077C090();
  return sub_1C07DE090(v0, v1);
}

unint64_t sub_1C07DCF3C(unsigned __int16 a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = MEMORY[0x1C3BA7700](*(_QWORD *)(v1 + 40), a1, 2);
  return sub_1C07DDFF0(a1, v3);
}

unint64_t sub_1C07DCF70()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[72];

  sub_1C0796010();
  sub_1C0825418((uint64_t)v3);
  sub_1C077AE74();
  v0 = sub_1C077C090();
  return sub_1C07DE238(v0, v1);
}

void sub_1C07DCFB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C078F058();
  sub_1C106E4AC();
  sub_1C079B3BC((unint64_t *)&qword_1ED7531C0, v0, MEMORY[0x1E0D3CD58]);
  v1 = sub_1C0799610();
  sub_1C07AD9D8(v1, v1, v2, qword_1ED753180, MEMORY[0x1E0D3CD60]);
  sub_1C07785E4();
}

unint64_t sub_1C07DD01C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1C0796010();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C078C724();
  sub_1C0775844();
  v4 = sub_1C077AE74();
  return sub_1C077D7C0(a1, a2, v4);
}

uint64_t sub_1C07DD074(uint64_t a1)
{
  return sub_1C07DD168(a1, (void (*)(_BYTE *, uint64_t))sub_1C0A11374, (uint64_t (*)(uint64_t, uint64_t))sub_1C07DE32C);
}

void sub_1C07DD08C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C078F058();
  sub_1C106E800();
  sub_1C079B3BC(&qword_1ED754928, v0, MEMORY[0x1E0D3D0B0]);
  v1 = sub_1C0799610();
  sub_1C07AD9D8(v1, v1, v2, &qword_1EF62FAE8, MEMORY[0x1E0D3D0B8]);
  sub_1C07785E4();
}

void sub_1C07DD0F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C078F058();
  sub_1C106C8A4();
  sub_1C079B3BC(&qword_1ED743E20, v0, MEMORY[0x1E0DC67A8]);
  v1 = sub_1C0799610();
  sub_1C07AD9D8(v1, v1, v2, &qword_1EF62FAD8, MEMORY[0x1E0DC67B0]);
  sub_1C07785E4();
}

uint64_t sub_1C07DD154(uint64_t a1)
{
  return sub_1C07DD168(a1, (void (*)(_BYTE *, uint64_t))sub_1C0BF4CE4, (uint64_t (*)(uint64_t, uint64_t))sub_1C07DE42C);
}

uint64_t sub_1C07DD168(uint64_t a1, void (*a2)(_BYTE *, uint64_t), uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5;
  _BYTE v8[72];

  sub_1C0796010();
  a2(v8, a1);
  v5 = sub_1C077AE74();
  return a3(a1, v5);
}

void sub_1C07DD1C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  sub_1C0796010();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C07B70B4();
  sub_1C077B5B4();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C078C724();
  sub_1C0775844();
  v8 = sub_1C077AE74();
  sub_1C07DE588(a1, a2, a3, a4, v8);
  sub_1C07877C0();
}

void sub_1C07DD240()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C078F058();
  sub_1C106ED70();
  sub_1C079B3BC(&qword_1ED759FD0, v0, MEMORY[0x1E0D3D7C0]);
  v1 = sub_1C0799610();
  sub_1C07AD9D8(v1, v1, v2, &qword_1ED759FD8, MEMORY[0x1E0D3D7C8]);
  sub_1C07785E4();
}

unint64_t sub_1C07DD2A4()
{
  uint64_t *v0;
  uint64_t v1;

  sub_1C0796010();
  sub_1C077584C();
  sub_1C07BC564();
  sub_1C0778580();
  sub_1C077584C();
  sub_1C07BC564();
  sub_1C0778580();
  sub_1C077584C();
  sub_1C07BC564();
  sub_1C0778580();
  sub_1C077AE74();
  v0 = (uint64_t *)sub_1C077C090();
  return sub_1C07DE664(v0, v1);
}

uint64_t sub_1C07DD310(uint64_t a1)
{
  return sub_1C07DD35C(a1, (void (*)(_BYTE *, uint64_t))sub_1C08CA668, (uint64_t (*)(void))sub_1C07DE790);
}

unint64_t sub_1C07DD324()
{
  char v0;
  uint64_t v1;

  sub_1C07B9584();
  sub_1C0A54D28();
  v0 = sub_1C07B7A20();
  return sub_1C07DE984(v0, v1);
}

uint64_t sub_1C07DD348(uint64_t a1)
{
  return sub_1C07DD35C(a1, (void (*)(_BYTE *, uint64_t))sub_1C08C9FBC, (uint64_t (*)(void))sub_1C07DEAD8);
}

uint64_t sub_1C07DD35C(uint64_t a1, void (*a2)(_BYTE *, uint64_t), uint64_t (*a3)(void))
{
  uint64_t v5;
  _BYTE v8[72];

  sub_1C0796010();
  a2(v8, a1);
  v5 = sub_1C077AE74();
  return sub_1C07A7C38(a1, v5, a3);
}

void sub_1C07DD3A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C078F058();
  sub_1C106D1F8();
  sub_1C079B3BC(&qword_1ED759F58, v0, MEMORY[0x1E0D3BB20]);
  v1 = sub_1C0799610();
  sub_1C07AD9D8(v1, v1, v2, &qword_1ED75E7D8, MEMORY[0x1E0D3BB28]);
  sub_1C07785E4();
}

unint64_t sub_1C07DD40C(int a1)
{
  uint64_t v2;

  sub_1C0796010();
  sub_1C1070E28();
  v2 = sub_1C077AE74();
  return sub_1C07DECE4(a1, v2);
}

void sub_1C07DD464(uint64_t a1)
{
  uint64_t v2;

  sub_1C106FB14();
  sub_1C1070DF8();
  sub_1C106FC28();
  v2 = sub_1C077AE74();
  sub_1C077B5B4();
  sub_1C07DED80(a1, v2);
  sub_1C07877C0();
}

uint64_t sub_1C07DD4D8(uint64_t a1)
{
  return sub_1C077D9B0(a1, (void (*)(uint64_t))sub_1C0E69450, (uint64_t (*)(void))sub_1C07DEE8C);
}

void sub_1C07DD4EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = sub_1C106E590();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C07ACF80((uint64_t *)&unk_1ED75EA40);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1070DF8();
  sub_1C0794BAC((unint64_t *)&qword_1ED7618F0, v3, MEMORY[0x1E0D3CE40]);
  sub_1C079BCAC();
  v10 = type metadata accessor for EntityEdge();
  sub_1C07E0238(a1 + *(int *)(v10 + 20), (uint64_t)v9);
  if (sub_1C07B2D80((uint64_t)v9, 1, v2) == 1)
  {
    sub_1C1070E10();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v9, v2);
    sub_1C1070E10();
    sub_1C079BCAC();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
  }
  sub_1C1070E4C();
  v11 = sub_1C077C090();
  sub_1C07DF2C8(v11, v12);
  sub_1C077C798();
}

unint64_t sub_1C07DD65C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C1070510();
  return sub_1C07DF69C(a1, v2);
}

unint64_t sub_1C07DD68C(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v11;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v5 = ~v3;
    if ((a1 & 1) != 0)
      v6 = 0xD000000000000015;
    else
      v6 = 0x7461636964657270;
    if ((a1 & 1) != 0)
      v7 = 0x80000001C10DE890;
    else
      v7 = 0xE900000000000065;
    while (1)
    {
      v8 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? 0xD000000000000015 : 0x7461636964657270;
      v9 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? 0x80000001C10DE890 : 0xE900000000000065;
      if (v8 == v6 && v9 == v7)
        break;
      v11 = sub_1C1070CB4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        v4 = (v4 + 1) & v5;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_1C07DD7C8(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v11;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v5 = ~v3;
    if ((a1 & 1) != 0)
      v6 = 0x617247746E657665;
    else
      v6 = 0x7247656C62617473;
    if ((a1 & 1) != 0)
      v7 = 0xEA00000000006870;
    else
      v7 = 0xEB00000000687061;
    while (1)
    {
      v8 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? 0x617247746E657665 : 0x7247656C62617473;
      v9 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? 0xEA00000000006870 : 0xEB00000000687061;
      if (v8 == v6 && v9 == v7)
        break;
      v11 = sub_1C1070CB4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        v4 = (v4 + 1) & v5;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_1C07DD90C(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v12;
  uint64_t v14;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v14 = ~v3;
    while (1)
    {
      v5 = 0xD000000000000014;
      v6 = 0xD000000000000017;
      if (*(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) == 1)
      {
        v7 = 0x80000001C10DD980;
      }
      else
      {
        v6 = 0xD000000000000013;
        v7 = 0x80000001C10DD9A0;
      }
      v8 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? v6 : 0xD000000000000014;
      v9 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? v7 : 0x80000001C10DD960;
      if (a1)
      {
        v5 = a1 == 1 ? 0xD000000000000017 : 0xD000000000000013;
        v10 = a1 == 1 ? 0x80000001C10DD980 : 0x80000001C10DD9A0;
      }
      else
      {
        v10 = 0x80000001C10DD960;
      }
      if (v8 == v5 && v9 == v10)
        break;
      v12 = sub_1C1070CB4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        v4 = (v4 + 1) & v14;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_1C07DDA98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_1C07DFA54(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x1C3BA7010](v9, a1);
      sub_1C07DFA90((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1C07DDB5C(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1)
          break;
      }
    }
  }
  return result;
}

uint64_t sub_1C07DDBFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_1C07DDFF0(unsigned __int16 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int16 *)(v7 + 2 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int16 *)(v7 + 2 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1C07DE090(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v16 = type metadata accessor for CachedBehaviorDatabaseHistogramManager.BehaviorHistogramCacheKey(0);
  MEMORY[0x1E0C80A78](v16);
  v7 = (unsigned __int8 *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = -1 << *(_BYTE *)(v2 + 32);
  v9 = a2 & ~v8;
  if (((*(_QWORD *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0)
  {
    v10 = ~v8;
    v11 = *(_QWORD *)(v5 + 72);
    v14 = ~v8;
    v15 = v11;
    while (1)
    {
      sub_1C07E05C8(*(_QWORD *)(v2 + 48) + v11 * v9, (uint64_t)v7, type metadata accessor for CachedBehaviorDatabaseHistogramManager.BehaviorHistogramCacheKey);
      if (*v7 == *a1)
      {
        sub_1C106D6CC();
        sub_1C0794BAC((unint64_t *)&qword_1ED744A60, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C130], MEMORY[0x1E0D3C158]);
        sub_1C106FE44();
        sub_1C106FE44();
        v10 = v14;
        v11 = v15;
        if (v18 == v17)
          break;
      }
      sub_1C07B1F90((uint64_t)v7, type metadata accessor for CachedBehaviorDatabaseHistogramManager.BehaviorHistogramCacheKey);
      v9 = (v9 + 1) & v10;
      if (((*(_QWORD *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        return v9;
    }
    sub_1C07B1F90((uint64_t)v7, type metadata accessor for CachedBehaviorDatabaseHistogramManager.BehaviorHistogramCacheKey);
  }
  return v9;
}

unint64_t sub_1C07DE238(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  _BYTE v11[48];
  _BYTE v12[48];

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v6 = *(_QWORD *)(v2 + 48);
    sub_1C07DFF44(v6 + 48 * i, (uint64_t)v12);
    sub_1C0824F64((uint64_t)v12);
    if ((v7 & 1) == 0)
    {
      v8 = ~v4;
      for (i = (i + 1) & v8; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v8)
      {
        sub_1C07DFF44(v6 + 48 * i, (uint64_t)v11);
        sub_1C0824F64((uint64_t)v11);
        if ((v9 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_1C07DE32C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  char v6;
  char v7;
  uint64_t v8;
  char v9;
  char v10;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0A0EF44();
    v7 = v6;
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
    {
      v8 = ~v4;
      for (i = (i + 1) & v8; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v8)
      {
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        sub_1C0A0EF44();
        v10 = v9;
        swift_bridgeObjectRelease();
        if ((v10 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

uint64_t sub_1C07DE42C(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  _QWORD *v15;
  _QWORD *v16;
  unint64_t v17;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
    return v5;
  v7 = ~v4;
  v8 = a1[2];
  v9 = *(_QWORD *)(v2 + 48);
  v10 = a1 + 9;
  while (1)
  {
    v11 = *(_QWORD **)(v9 + 8 * v5);
    if (v11[2] == v8)
    {
      if (!v8 || v11 == a1)
        return v5;
      v12 = v11[4] == a1[4] && v11[5] == a1[5];
      if (v12 || (sub_1C1070CB4() & 1) != 0)
      {
        if (v8 == 1)
          return v5;
        result = v11[6];
        if (result == a1[6] && v11[7] == a1[7])
          break;
        result = sub_1C1070CB4();
        if ((result & 1) != 0)
          break;
      }
    }
LABEL_27:
    v5 = (v5 + 1) & v7;
    if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
      return v5;
  }
  if (v8 == 2)
    return v5;
  v15 = v11 + 9;
  v16 = v10;
  v17 = 2;
  while (v17 < v8)
  {
    result = *(v15 - 1);
    if (result != *(v16 - 1) || *v15 != *v16)
    {
      result = sub_1C1070CB4();
      if ((result & 1) == 0)
        goto LABEL_27;
    }
    ++v17;
    v16 += 2;
    v15 += 2;
    if (v8 == v17)
      return v5;
  }
  __break(1u);
  return result;
}

void sub_1C07DE588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  BOOL v19;

  v6 = v5 + 64;
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = a5 & ~v7;
  if (((*(_QWORD *)(v5 + 64 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
  {
    v13 = ~v7;
    v14 = *(_QWORD *)(v5 + 48);
    do
    {
      v15 = (_QWORD *)(v14 + 32 * v8);
      v16 = v15[2];
      v17 = v15[3];
      v18 = *v15 == a1 && v15[1] == a2;
      if (v18 || (sub_1C07785B0() & 1) != 0)
      {
        v19 = v16 == a3 && v17 == a4;
        if (v19 || (sub_1C07785B0() & 1) != 0)
          break;
      }
      v8 = (v8 + 1) & v13;
    }
    while (((*(_QWORD *)(v6 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  sub_1C0776760();
}

unint64_t sub_1C07DE664(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  uint64_t v19;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v19 = ~v4;
    v7 = *(_QWORD *)(v2 + 48);
    v8 = *a1;
    v9 = a1[1];
    do
    {
      v10 = (_QWORD *)(v7 + 48 * v5);
      v11 = v10[2];
      v12 = v10[3];
      v13 = v10[4];
      v14 = v10[5];
      v15 = *v10 == v8 && v10[1] == v9;
      if (v15 || (sub_1C1070CB4() & 1) != 0)
      {
        v16 = v11 == a1[2] && v12 == a1[3];
        if (v16 || (sub_1C1070CB4() & 1) != 0)
        {
          v17 = v13 == a1[4] && v14 == a1[5];
          if (v17 || (sub_1C1070CB4() & 1) != 0)
            break;
        }
      }
      v5 = (v5 + 1) & v19;
    }
    while (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

uint64_t sub_1C07DE790(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_1C07DE984(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v11;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v5 = ~v3;
    if ((a1 & 1) != 0)
      v6 = 0x4F64657461647075;
    else
      v6 = 0x6E61684377656976;
    if ((a1 & 1) != 0)
      v7 = 0xED00007463656A62;
    else
      v7 = 0xEB00000000646567;
    while (1)
    {
      v8 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? 0x4F64657461647075 : 0x6E61684377656976;
      v9 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? 0xED00007463656A62 : 0xEB00000000646567;
      if (v8 == v6 && v9 == v7)
        break;
      v11 = sub_1C1070CB4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        v4 = (v4 + 1) & v5;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

uint64_t sub_1C07DEAD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_1C07DECE4(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_DWORD *)(v7 + 4 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_DWORD *)(v7 + 4 * result) == a1)
          break;
      }
    }
  }
  return result;
}

void sub_1C07DED80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  char v18;

  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  sub_1C0792CA8();
  if ((v6 & 1) != 0)
  {
    v7 = sub_1C07A84EC();
    if (v7 == sub_1C079CB90() && v3 == v8)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      goto LABEL_17;
    }
    v10 = sub_1C07785B0();
    sub_1C0778580();
    sub_1C077B5B4();
    if ((v10 & 1) == 0)
    {
      v11 = ~v4;
      v12 = (v5 + 1) & v11;
      sub_1C0792CA8();
      if ((v13 & 1) != 0)
      {
        while (1)
        {
          v14 = sub_1C07A84EC();
          if (v14 == sub_1C079CB90() && v3 == v15)
            goto LABEL_16;
          v17 = sub_1C07785B0();
          sub_1C0778580();
          swift_bridgeObjectRelease();
          if ((v17 & 1) == 0)
          {
            v12 = (v12 + 1) & v11;
            sub_1C0792CA8();
            if ((v18 & 1) != 0)
              continue;
          }
          break;
        }
      }
    }
  }
LABEL_17:
  sub_1C077C798();
}

uint64_t sub_1C07DEE8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_1C07DF2C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  char *v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v45 = a1;
  v4 = sub_1C106E590();
  v39 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v36 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_1C07ACF80(&qword_1EF62FAE0);
  MEMORY[0x1E0C80A78](v44);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C07ACF80((uint64_t *)&unk_1ED75EA40);
  MEMORY[0x1E0C80A78](v8);
  v38 = (uint64_t)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v36 - v11;
  v43 = type metadata accessor for EntityEdge();
  MEMORY[0x1E0C80A78](v43);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = v2 + 64;
  v17 = -1 << *(_BYTE *)(v2 + 32);
  v18 = a2 & ~v17;
  if (((*(_QWORD *)(v2 + 64 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
    return v18;
  v19 = ~v17;
  v20 = *(_QWORD *)(v13 + 72);
  v41 = ~v17;
  v42 = v2 + 64;
  v40 = v20;
  while (1)
  {
    sub_1C07E05C8(*(_QWORD *)(v2 + 48) + v20 * v18, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for EntityEdge);
    if ((sub_1C106E560() & 1) == 0)
      goto LABEL_11;
    v21 = v2;
    v22 = *(int *)(v43 + 20);
    v23 = v4;
    v24 = &v15[v22];
    sub_1C07E0238(v45 + v22, (uint64_t)v12);
    v25 = (uint64_t)&v7[*(int *)(v44 + 48)];
    v26 = (uint64_t)v24;
    v4 = v23;
    sub_1C07E0238(v26, (uint64_t)v7);
    sub_1C07E0238((uint64_t)v12, v25);
    if (sub_1C07B2D80((uint64_t)v7, 1, v23) == 1)
      break;
    v28 = (uint64_t)v12;
    v29 = v38;
    sub_1C07E0238((uint64_t)v7, v38);
    if (sub_1C07B2D80(v25, 1, v23) == 1)
    {
      sub_1C0784B6C(v28, (uint64_t *)&unk_1ED75EA40);
      v30 = v29;
      v12 = (char *)v28;
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v30, v23);
      v2 = v21;
      goto LABEL_9;
    }
    v31 = v39;
    v32 = v36;
    (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(v36, v25, v23);
    sub_1C0794BAC(&qword_1ED75EA38, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE50]);
    v33 = v29;
    v37 = sub_1C106FAA8();
    v34 = *(void (**)(char *, uint64_t))(v31 + 8);
    v34(v32, v23);
    v12 = (char *)v28;
    sub_1C0784B6C(v28, (uint64_t *)&unk_1ED75EA40);
    v34((char *)v33, v23);
    v4 = v23;
    sub_1C0784B6C((uint64_t)v7, (uint64_t *)&unk_1ED75EA40);
    v2 = v21;
    v19 = v41;
    v16 = v42;
    v20 = v40;
    if ((v37 & 1) != 0)
      goto LABEL_13;
LABEL_11:
    sub_1C07B1F90((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for EntityEdge);
    v18 = (v18 + 1) & v19;
    if (((*(_QWORD *)(v16 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      return v18;
  }
  sub_1C0784B6C((uint64_t)v12, (uint64_t *)&unk_1ED75EA40);
  v27 = sub_1C07B2D80(v25, 1, v23);
  v2 = v21;
  if (v27 != 1)
  {
LABEL_9:
    sub_1C0784B6C((uint64_t)v7, &qword_1EF62FAE0);
    v19 = v41;
    v16 = v42;
    v20 = v40;
    goto LABEL_11;
  }
  sub_1C0784B6C((uint64_t)v7, (uint64_t *)&unk_1ED75EA40);
LABEL_13:
  sub_1C07B1F90((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for EntityEdge);
  return v18;
}

unint64_t sub_1C07DF69C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  id v6;
  char v7;
  uint64_t v8;
  id v9;
  char v10;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_1C07E058C();
    v6 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
    v7 = sub_1C107051C();

    if ((v7 & 1) == 0)
    {
      v8 = ~v4;
      for (i = (i + 1) & v8; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v8)
      {
        v9 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v10 = sub_1C107051C();

        if ((v10 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

uint64_t sub_1C07DF7A4(uint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  double v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  sub_1C07ACF80(&qword_1EF62FAF8);
  result = sub_1C10709CC();
  v3 = (_QWORD *)result;
  v4 = 0;
  v5 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = result + 64;
  if (!v8)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v11 | (v4 << 6); ; i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v17 = *v16;
    result = v16[1];
    v18 = round(*(double *)(*(_QWORD *)(a1 + 56) + 8 * i) / 60.0 * 100.0) / 100.0;
    *(_QWORD *)(v10 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v19 = (_QWORD *)(v3[6] + 16 * i);
    *v19 = v17;
    v19[1] = result;
    *(double *)(v3[7] + 8 * i) = v18;
    v20 = v3[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v22;
    result = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    if (v8)
      goto LABEL_4;
LABEL_5:
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_24;
    if (v13 >= v9)
      goto LABEL_22;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v4;
    if (!v14)
    {
      v4 = v13 + 1;
      if (v13 + 1 >= v9)
        goto LABEL_22;
      v14 = *(_QWORD *)(v5 + 8 * v4);
      if (!v14)
      {
        v4 = v13 + 2;
        if (v13 + 2 >= v9)
          goto LABEL_22;
        v14 = *(_QWORD *)(v5 + 8 * v4);
        if (!v14)
          break;
      }
    }
LABEL_18:
    v8 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v9)
  {
LABEL_22:
    swift_release();
    return (uint64_t)v3;
  }
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
  {
    v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v4 >= v9)
      goto LABEL_22;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    ++v15;
    if (v14)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_1C07DF97C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  v4 = sub_1C0794C14(a1, a2, a3, a4);
  v7 = (_QWORD *)(v6 + 16 * v4);
  *v7 = v8;
  v7[1] = v9;
  *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v4) = v10;
  v11 = *(_QWORD *)(v5 + 16);
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    sub_1C078AA24(v5, v13);
}

uint64_t type metadata accessor for AmbientLightDistributionProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for AmbientLightDistributionProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AmbientLightDistributionProvider.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of AmbientLightDistributionProvider.distribution(from:to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

void sub_1C07DF9EC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  char v10;

  v6 = sub_1C079A6C4(a1, a2, a3, a4, a5);
  sub_1C07C010C(v8, (_OWORD *)(v7 + 32 * v6));
  sub_1C07A42FC();
  if (v10)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v5 + 16) = v9;
    sub_1C0778534();
  }
}

void sub_1C07DFA20(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  char v7;

  sub_1C079A6C4(a1, a2, a3, a4, a5);
  sub_1C07D8ED0();
  sub_1C07A42FC();
  if (v7)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v5 + 16) = v6;
    sub_1C0778534();
  }
}

uint64_t sub_1C07DFA54(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_1C07DFA90(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 8))();
  return a1;
}

void sub_1C07DFAC4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C07E0464(a1, a2, a3, a4);
}

unint64_t sub_1C07DFAD4(unint64_t result, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a7[(result >> 6) + 8] |= 1 << result;
  *(_BYTE *)(a7[6] + result) = a2;
  v7 = (_QWORD *)(a7[7] + 32 * result);
  *v7 = a3;
  v7[1] = a4;
  v7[2] = a5;
  v7[3] = a6;
  v8 = a7[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a7[2] = v10;
  return result;
}

void sub_1C07DFB24(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  sub_1C07A0694(a1, a2, a3, a4);
  v7 = sub_1C106D6CC();
  sub_1C07A66D8(v7);
  sub_1C07DFB7C(v5, *(_QWORD *)(v4 + 56) + 48 * v6);
  sub_1C07A42FC();
  if (v9)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v4 + 16) = v8;
    sub_1C07785E4();
  }
}

void sub_1C07DFB70(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C07E0464(a1, a2, a3, a4);
}

uint64_t sub_1C07DFB7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1ED758C90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C07DFBC4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  __int128 *v8;
  uint64_t v9;
  char v10;

  v6 = sub_1C079A6C4(a1, a2, a3, a4, a5);
  sub_1C077DD60(v8, v7 + 40 * v6);
  sub_1C07A42FC();
  if (v10)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v5 + 16) = v9;
    sub_1C0778534();
  }
}

void sub_1C07DFBFC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  __int16 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v4 = sub_1C0794C14(a1, a2, a3, a4);
  *(_WORD *)(v7 + 2 * v4) = v6;
  *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v4) = v8;
  v9 = *(_QWORD *)(v5 + 16);
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
    __break(1u);
  else
    sub_1C078AA24(v5, v11);
}

void sub_1C07DFC28(unint64_t a1, uint64_t a2, uint64_t a3, __int16 a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v5 = (_QWORD *)(a5[6] + 16 * a1);
  *v5 = a2;
  v5[1] = a3;
  *(_WORD *)(a5[7] + 2 * a1) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    sub_1C07A1A9C((uint64_t)a5, v8);
}

void sub_1C07DFC6C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C07E0464(a1, a2, a3, a4);
}

void sub_1C07DFC78(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1C07E00D4(a1, a2, a3, a4, a5);
}

uint64_t sub_1C07DFC84(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  result = sub_1C0793630(a1, a6 + 8 * (a1 >> 6));
  v8 = (_QWORD *)(v7[6] + 16 * result);
  *v8 = v9;
  v8[1] = v10;
  v11 = (_QWORD *)(v7[7] + 16 * result);
  *v11 = v12;
  v11[1] = v13;
  v14 = v7[2];
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    v7[2] = v16;
  return result;
}

void sub_1C07DFCC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1C07DFE58(a1, a2, a3, a4, a5);
}

void sub_1C07DFCD8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char v7;

  *(_QWORD *)(a4 + 8 * (a1 >> 6) + 64) |= 1 << a1;
  *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * a1) = a2;
  v5 = sub_1C106AEA0();
  sub_1C079FC28(v5);
  sub_1C07A42FC();
  if (v7)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a4 + 16) = v6;
    sub_1C077671C();
  }
}

void sub_1C07DFD40(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char v6;

  sub_1C079E15C(a1, a2, a3, a4);
  if (v6)
    __break(1u);
  else
    sub_1C078AA24(v4, v5);
}

uint64_t sub_1C07DFD58(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  result = sub_1C0793630(a1, a8 + 8 * (a1 >> 6));
  v10 = (_QWORD *)(v9[6] + 16 * result);
  *v10 = v11;
  v10[1] = v12;
  v13 = (_QWORD *)(v9[7] + 32 * result);
  *v13 = v14;
  v13[1] = v15;
  v13[2] = v16;
  v13[3] = v17;
  v18 = v9[2];
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
    __break(1u);
  else
    v9[2] = v20;
  return result;
}

void sub_1C07DFDA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C07DFFDC(a1, a2, a3, a4, (uint64_t)MEMORY[0x1E0D3D0A0], (uint64_t (*)(_QWORD))MEMORY[0x1E0D3CE28]);
}

uint64_t sub_1C07DFDB4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  result = sub_1C0793630(a1, a3 + 8 * (a1 >> 6));
  *(_QWORD *)(v4[6] + 8 * result) = v5;
  *(_QWORD *)(v4[7] + 8 * result) = v6;
  v7 = v4[2];
  v8 = __OFADD__(v7, 1);
  v9 = v7 + 1;
  if (v8)
    __break(1u);
  else
    v4[2] = v9;
  return result;
}

void sub_1C07DFDF0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v7 = sub_1C07A21E8(a1, a2, a3, a4);
  sub_1C07A66D8(v7);
  v8 = *(_QWORD *)(v4 + 56);
  v9 = type metadata accessor for EntityMatch(0);
  sub_1C07E05F4(v5, v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v6, type metadata accessor for EntityMatch);
  sub_1C07A42FC();
  if (v11)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v4 + 16) = v10;
    sub_1C07785E4();
  }
}

void sub_1C07DFE4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1C07DFE58(a1, a2, a3, a4, a5);
}

void sub_1C07DFE58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(_QWORD);
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  char v21;

  sub_1C077B5E8();
  v12 = sub_1C0793630(v11, v9 + 8 * v10);
  v18 = sub_1C079DAC4(v12, v13, v14, v15, v16, v17);
  sub_1C0791940(v18);
  v19 = (_QWORD *)(*(_QWORD *)(a5 + 56) + 16 * v6);
  *v19 = v5;
  v19[1] = a4;
  sub_1C07A42FC();
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a5 + 16) = v20;
    sub_1C07785E4();
  }
}

void sub_1C07DFEB0(unint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  sub_1C07E02D8(a1, a2, a3, a4);
}

void sub_1C07DFEBC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  _QWORD *v11;
  uint64_t v12;
  char v13;

  a6[(a1 >> 6) + 8] |= 1 << a1;
  sub_1C07DFF44(a2, a6[6] + 48 * a1);
  v11 = (_QWORD *)(a6[7] + 24 * a1);
  *v11 = a3;
  v11[1] = a4;
  v11[2] = a5;
  sub_1C07A42FC();
  if (v13)
  {
    __break(1u);
  }
  else
  {
    a6[2] = v12;
    sub_1C07785E4();
  }
}

uint64_t sub_1C07DFF44(uint64_t a1, uint64_t a2)
{
  initializeWithTake for Behavior(a2, a1);
  return a2;
}

void sub_1C07DFF80(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  sub_1C07A0694(a1, a2, a3, a4);
  v7 = sub_1C106E41C();
  sub_1C07A66D8(v7);
  sub_1C07C010C(v5, (_OWORD *)(*(_QWORD *)(v4 + 56) + 32 * v6));
  sub_1C07A42FC();
  if (v9)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v4 + 16) = v8;
    sub_1C07785E4();
  }
}

void sub_1C07DFFC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C07DFFDC(a1, a2, a3, a4, (uint64_t)MEMORY[0x1E0D3CE28], (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0998]);
}

void sub_1C07DFFDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  sub_1C077B5E8();
  sub_1C0793630(v12, v10 + 8 * v11);
  v14 = v13(0);
  sub_1C0791940(v14);
  v15 = *(_QWORD *)(a4 + 56);
  v16 = a6(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v15 + *(_QWORD *)(*(_QWORD *)(v16 - 8) + 72) * v7, v6, v16);
  sub_1C07A42FC();
  if (v18)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a4 + 16) = v17;
    sub_1C07785E4();
  }
}

void sub_1C07E0054(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  char v10;

  sub_1C07B3EA8(a1, a2, a3, a4, a5, a6, a7);
  v8 = sub_1C106EB24();
  sub_1C079FC28(v8);
  sub_1C07A42FC();
  if (v10)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a7 + 16) = v9;
    sub_1C077671C();
  }
}

unint64_t sub_1C07E009C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  result = sub_1C07B3EA8(a1, a2, a3, a4, a5, a6, a7);
  *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * result) = v9;
  v10 = *(_QWORD *)(v8 + 16);
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    *(_QWORD *)(v8 + 16) = v12;
  return result;
}

void sub_1C07E00C8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1C07E00D4(a1, a2, a3, a4, a5);
}

void sub_1C07E00D4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t v13;
  char v14;

  v6 = sub_1C07A5078(a1, a2, a3, a4, a5);
  v12 = sub_1C079DAC4(v6, v7, v8, v9, v10, v11);
  sub_1C079FC28(v12);
  sub_1C07A42FC();
  if (v14)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a5 + 16) = v13;
    sub_1C077671C();
  }
}

void sub_1C07E0118(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  v4 = sub_1C0794C14(a1, a2, a3, a4);
  v7 = (_OWORD *)(v6 + 48 * v4);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  v7[2] = v8[2];
  *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v4) = v10;
  v11 = *(_QWORD *)(v5 + 16);
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    sub_1C078AA24(v5, v13);
}

void sub_1C07E0158(unint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char v6;

  sub_1C079D1EC(a1, a2, a3, a4);
  if (v6)
    __break(1u);
  else
    sub_1C078AA24(v4, v5);
}

void sub_1C07E0170(unint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  v4 = sub_1C0797B00(a1, a2, a3, a4);
  *(_DWORD *)(v7 + 4 * v4) = v6;
  v8 = *(_QWORD *)(v5 + 16);
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    sub_1C078AA24(v5, v10);
}

void sub_1C07E0194(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v5 = (_QWORD *)(a5[6] + 16 * a1);
  *v5 = a2;
  v5[1] = a3;
  v6 = a5[7] + 40 * a1;
  v7 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)v6 = *(_OWORD *)a4;
  *(_OWORD *)(v6 + 16) = v7;
  *(_QWORD *)(v6 + 32) = *(_QWORD *)(a4 + 32);
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    sub_1C07A1A9C((uint64_t)a5, v10);
}

void sub_1C07E01EC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  char v11;

  sub_1C07A0694(a1, a2, a3, a4);
  type metadata accessor for EntityEdge();
  v7 = sub_1C07A9D0C();
  sub_1C07E05F4(v7, v8, v9);
  *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v6) = v5;
  sub_1C07A42FC();
  if (v11)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v4 + 16) = v10;
    sub_1C07785E4();
  }
}

uint64_t sub_1C07E0238(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80((uint64_t *)&unk_1ED75EA40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C07E0280(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1C07E03A4(a1, a2, a3, a4, a5, (uint64_t (*)(_QWORD))_s14ViewConfigInfoVMa);
}

void sub_1C07E028C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v7 = sub_1C07A21E8(a1, a2, a3, a4);
  sub_1C07A66D8(v7);
  memcpy((void *)(*(_QWORD *)(v4 + 56) + 96 * v6), v5, 0x60uLL);
  sub_1C07A42FC();
  if (v9)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v4 + 16) = v8;
    sub_1C07785E4();
  }
}

void sub_1C07E02D8(unint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, unint64_t);
  uint64_t v9;
  char v10;

  v5 = sub_1C0797B00(a1, a2, a3, a4);
  v8(v7, v6 + 40 * v5);
  sub_1C07A42FC();
  if (v10)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a4 + 16) = v9;
    sub_1C0778534();
  }
}

void sub_1C07E0314(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v7 = sub_1C0790CE4(a1, a2, a3, a4);
  sub_1C07A66D8(v7);
  *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v6) = v5;
  sub_1C07A42FC();
  if (v9)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v4 + 16) = v8;
    sub_1C07785E4();
  }
}

void sub_1C07E0350(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  __int128 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v7 = sub_1C0790CE4(a1, a2, a3, a4);
  sub_1C07A66D8(v7);
  sub_1C077DD60(v5, *(_QWORD *)(v4 + 56) + 40 * v6);
  sub_1C07A42FC();
  if (v9)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v4 + 16) = v8;
    sub_1C07785E4();
  }
}

void sub_1C07E0398(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1C07E03A4(a1, a2, a3, a4, a5, (uint64_t (*)(_QWORD))_s14descr1E7A41B59O15NameAndRequestsVMa);
}

void sub_1C07E03A4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v8 = sub_1C07A5078(a1, a2, a3, a4, a5);
  sub_1C079DAC4(v8, v9, v10, v11, v12, v13);
  v14 = sub_1C07A9D0C();
  sub_1C07E05F4(v14, v15, a6);
  sub_1C07A42FC();
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a5 + 16) = v16;
    sub_1C07785E4();
  }
}

void sub_1C07E03F8(unint64_t a1, uint64_t a2, uint64_t a3, int a4, _QWORD *a5, double a6)
{
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a5[6] + 8 * a1) = a2;
  v6 = a5[7] + 24 * a1;
  *(_QWORD *)v6 = a3;
  *(double *)(v6 + 8) = a6;
  *(_WORD *)(v6 + 16) = a4;
  *(_BYTE *)(v6 + 18) = BYTE2(a4);
  v7 = a5[2];
  v8 = __OFADD__(v7, 1);
  v9 = v7 + 1;
  if (v8)
    __break(1u);
  else
    sub_1C07A1A9C((uint64_t)a5, v9);
}

void sub_1C07E0458(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C07E0464(a1, a2, a3, a4);
}

void sub_1C07E0464(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  char v11;

  v7 = sub_1C07A0694(a1, a2, a3, a4);
  v9 = v8(v7);
  sub_1C07A66D8(v9);
  *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v6) = v5;
  sub_1C07A42FC();
  if (v11)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v4 + 16) = v10;
    sub_1C07785E4();
  }
}

uint64_t sub_1C07E04A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_1C106FB14();
  v2 = v1;
  if (v0 == sub_1C106FB14() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1C07785B0();
  sub_1C07767AC();
  sub_1C077960C();
  return v5 & 1;
}

uint64_t sub_1C07E0524()
{
  uint64_t v0;

  sub_1C106FB14();
  sub_1C1070DF8();
  sub_1C106FC28();
  v0 = sub_1C077AE74();
  sub_1C0775844();
  return v0;
}

unint64_t sub_1C07E058C()
{
  unint64_t result;

  result = qword_1ED7537B0;
  if (!qword_1ED7537B0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED7537B0);
  }
  return result;
}

void sub_1C07E05C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = sub_1C0779690(a1, a2, a3);
  sub_1C0775828(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  sub_1C0778534();
}

void sub_1C07E05F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = sub_1C0779690(a1, a2, a3);
  sub_1C0775828(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  sub_1C0778534();
}

void sub_1C07E0680()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  int v3;
  int v4;
  BOOL v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v0 = 3;
  v12 = MEMORY[0x1E0DEE9D8];
  sub_1C09D30E0();
  v1 = &byte_1E79FBEE8;
  v2 = v12;
  do
  {
    v4 = *v1++;
    v3 = v4;
    v5 = v4 == 1;
    if (v4 == 1)
      v6 = 0xD00000000000002DLL;
    else
      v6 = 0xD00000000000002CLL;
    if (v5)
      v7 = 0x80000001C10E25A0;
    else
      v7 = 0x80000001C10E25D0;
    if (v3)
      v8 = v6;
    else
      v8 = 0xD00000000000002FLL;
    if (v3)
      v9 = v7;
    else
      v9 = 0x80000001C10E2570;
    v13 = v2;
    v10 = *(_QWORD *)(v2 + 16);
    if (v10 >= *(_QWORD *)(v2 + 24) >> 1)
    {
      sub_1C09D30E0();
      v2 = v13;
    }
    *(_QWORD *)(v2 + 16) = v10 + 1;
    v11 = v2 + 16 * v10;
    *(_QWORD *)(v11 + 32) = v8;
    *(_QWORD *)(v11 + 40) = v9;
    --v0;
  }
  while (v0);
  sub_1C0898D28(v2);
}

double sub_1C07E07A4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  double result;

  type metadata accessor for MotionStateDistributionProvider();
  v0 = sub_1C0778598();
  *(_QWORD *)(v0 + 16) = 0x404E000000000000;
  type metadata accessor for MotionStateActivityIntervalProvider();
  sub_1C0778598();
  v1 = MotionStateActivityIntervalProvider.init(motionStateDistributionProvider:)(v0);
  type metadata accessor for AmbientLightDistributionProvider();
  sub_1C0778598();
  v2 = AmbientLightDistributionProvider.init()();
  v3 = sub_1C0778598();
  result = 1800.0;
  *(_OWORD *)(v3 + 48) = xmmword_1C10794B0;
  *(_QWORD *)(v3 + 32) = v1;
  *(_QWORD *)(v3 + 40) = v2;
  *(_QWORD *)(v3 + 16) = sub_1C07D4004;
  *(_QWORD *)(v3 + 24) = 0;
  return result;
}

uint64_t sub_1C07E084C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_1C106ADE0();
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = swift_task_alloc();
  v2[7] = type metadata accessor for ActivityInterval();
  v2[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C07E08D0()
{
  uint64_t *v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  v0[9] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_1C07E0928;
  return sub_1C0C3BA2C(v0[8], v0[2]);
}

uint64_t sub_1C07E0928()
{
  sub_1C07862EC();
  return swift_task_switch();
}

uint64_t sub_1C07E0970()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = sub_1C07DC1A8(v1, v1 + *(int *)(*(_QWORD *)(v0 + 56) + 20));
  sub_1C079A6F8();
  v3 = sub_1C07A3674();
  sub_1C079601C();
  sub_1C079A6F8();
  v4 = sub_1C07A3674();
  sub_1C079601C();
  sub_1C07ACF80(&qword_1EF62FC10);
  sub_1C106F97C();
  sub_1C07E13E8(v2);
  swift_bridgeObjectRelease();
  sub_1C077C09C();
  sub_1C0798454();
  sub_1C08A079C();
  sub_1C0799620();
  sub_1C07E13E8(v3);
  swift_bridgeObjectRelease();
  sub_1C077C09C();
  sub_1C0798454();
  sub_1C08A079C();
  sub_1C0799620();
  sub_1C07E13E8(v4);
  swift_bridgeObjectRelease();
  sub_1C077C09C();
  sub_1C0798454();
  sub_1C08A079C();
  sub_1C0799620();
  v5 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v6 = sub_1C07E10B0(v5);
  swift_bridgeObjectRelease_n();
  sub_1C07D4B34(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v6);
}

id sub_1C07E0B44()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v5[2];

  v5[1] = *(id *)MEMORY[0x1E0C80C00];
  sub_1C07D4B70(0, (unint64_t *)&qword_1ED762C00);
  v0 = (void *)sub_1C106F934();
  swift_bridgeObjectRelease();
  v5[0] = 0;
  v1 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_featureValueWithDictionary_error_, v0, v5);

  if (v1)
  {
    v2 = v5[0];
  }
  else
  {
    v3 = v5[0];
    sub_1C106AA14();

    swift_willThrow();
  }
  return v1;
}

uint64_t sub_1C07E0C48@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = sub_1C07E15CC(qword_1EF62FC20, (uint64_t)&unk_1C1079578);
  *a2 = a1;
  a2[1] = v2;
  a2[2] = v5;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return swift_retain();
}

uint64_t sub_1C07E0CA4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C07D455C;
  return sub_1C07E084C(a1);
}

id sub_1C07E0CF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;

  sub_1C077583C(a1, (unint64_t *)&qword_1ED758D30);
  v4 = sub_1C106F97C();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v5 = sub_1C089A990(a1, a2, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v5)
  {
    sub_1C07E0680();
    sub_1C0A791CC(a1, a2, v6);
    v8 = v7;
    v9 = swift_bridgeObjectRelease();
    if ((v8 & 1) != 0)
    {
      sub_1C077583C(v9, (unint64_t *)&qword_1ED762C00);
      sub_1C106F97C();
      return sub_1C07E0B44();
    }
    else
    {
      return 0;
    }
  }
  return (id)v5;
}

uint64_t sub_1C07E0F4C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1C07E0F78()
{
  sub_1C07E0F4C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AmbientLightDistributionSignal()
{
  return objc_opt_self();
}

uint64_t sub_1C07E0FB8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C07D4C70;
  return sub_1C07E0CA4(a1);
}

uint64_t sub_1C07E1004@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_1C07E0C48(a1, a2);
}

void sub_1C07E1024()
{
  sub_1C07E0680();
}

uint64_t sub_1C07E1038()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C07E1048(uint64_t a1)
{
  uint64_t result;

  result = sub_1C07E15CC((unint64_t *)&unk_1EF62FBE8, (uint64_t)&unk_1C1079530);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1C07E107C(uint64_t a1)
{
  uint64_t result;

  result = sub_1C07E15CC(&qword_1EF62FBF8, (uint64_t)&unk_1C107955C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C07E10B0(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t result;
  _QWORD *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t i;
  BOOL v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  _QWORD *v22;
  uint8_t *v23;
  uint8_t *v24;
  id v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;

  v2 = v1;
  sub_1C07ACF80(&qword_1EF62F948);
  result = sub_1C10709CC();
  v5 = (_QWORD *)result;
  v6 = 0;
  v7 = a1 + 64;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a1 + 64);
  v29 = (unint64_t)(v8 + 63) >> 6;
  v30 = result + 64;
  if (!v10)
    goto LABEL_5;
LABEL_4:
  v32 = (v10 - 1) & v10;
  for (i = __clz(__rbit64(v10)) | (v6 << 6); ; i = __clz(__rbit64(v13)) + (v6 << 6))
  {
    v15 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v16 = v15[1];
    v33 = *v15;
    sub_1C07D4B70(0, (unint64_t *)&qword_1ED758D30);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C089B5B4();
    v17 = v2;
    v18 = sub_1C07E0B44();
    if (v2)
    {
      v31 = v6;
      if (qword_1ED762B18 != -1)
        swift_once();
      v19 = sub_1C106F544();
      sub_1C079E000(v19, (uint64_t)qword_1ED762AF8);
      v20 = sub_1C106F538();
      v21 = sub_1C10703A8();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = v5;
        v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v23 = 0;
        _os_log_impl(&dword_1C0771000, v20, v21, "Could not return MLFeatureValue for dictionary", v23, 2u);
        v24 = v23;
        v5 = v22;
        v2 = v17;
        v7 = a1 + 64;
        MEMORY[0x1C3BA8270](v24, -1, -1);
      }

      v25 = objc_msgSend((id)objc_opt_self(), sel_undefinedFeatureValueWithType_, 6);
      v2 = 0;
      v6 = v31;
    }
    else
    {
      v25 = v18;
    }
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(v30 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v26 = (_QWORD *)(v5[6] + 16 * i);
    *v26 = v33;
    v26[1] = v16;
    *(_QWORD *)(v5[7] + 8 * i) = v25;
    v27 = v5[2];
    v12 = __OFADD__(v27, 1);
    v28 = v27 + 1;
    if (v12)
    {
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    v5[2] = v28;
    v10 = v32;
    if (v32)
      goto LABEL_4;
LABEL_5:
    v12 = __OFADD__(v6++, 1);
    if (v12)
      goto LABEL_32;
    if (v6 >= v29)
      return (uint64_t)v5;
    v13 = *(_QWORD *)(v7 + 8 * v6);
    if (!v13)
      break;
LABEL_15:
    v32 = (v13 - 1) & v13;
  }
  v14 = v6 + 1;
  if (v6 + 1 >= v29)
    return (uint64_t)v5;
  v13 = *(_QWORD *)(v7 + 8 * v14);
  if (v13)
    goto LABEL_14;
  v14 = v6 + 2;
  if (v6 + 2 >= v29)
    return (uint64_t)v5;
  v13 = *(_QWORD *)(v7 + 8 * v14);
  if (v13)
    goto LABEL_14;
  v14 = v6 + 3;
  if (v6 + 3 >= v29)
    return (uint64_t)v5;
  v13 = *(_QWORD *)(v7 + 8 * v14);
  if (v13)
  {
LABEL_14:
    v6 = v14;
    goto LABEL_15;
  }
  while (1)
  {
    v6 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v6 >= v29)
      return (uint64_t)v5;
    v13 = *(_QWORD *)(v7 + 8 * v6);
    ++v14;
    if (v13)
      goto LABEL_15;
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1C07E13E8(uint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;

  sub_1C07ACF80(&qword_1EF62FC18);
  result = sub_1C10709CC();
  v3 = (_QWORD *)result;
  v4 = 0;
  v5 = *(_QWORD *)(a1 + 64);
  v23 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v5;
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = result + 64;
  if ((v7 & v5) == 0)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v11 | (v4 << 6); ; i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v18 = *v16;
    v17 = v16[1];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    result = sub_1C1070168();
    *(_QWORD *)(v10 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v19 = (_QWORD *)(v3[6] + 16 * i);
    *v19 = v18;
    v19[1] = v17;
    *(_QWORD *)(v3[7] + 8 * i) = result;
    v20 = v3[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v22;
    if (v8)
      goto LABEL_4;
LABEL_5:
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_24;
    if (v13 >= v9)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v23 + 8 * v13);
    ++v4;
    if (!v14)
    {
      v4 = v13 + 1;
      if (v13 + 1 >= v9)
        return (uint64_t)v3;
      v14 = *(_QWORD *)(v23 + 8 * v4);
      if (!v14)
      {
        v4 = v13 + 2;
        if (v13 + 2 >= v9)
          return (uint64_t)v3;
        v14 = *(_QWORD *)(v23 + 8 * v4);
        if (!v14)
          break;
      }
    }
LABEL_18:
    v8 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v9)
    return (uint64_t)v3;
  v14 = *(_QWORD *)(v23 + 8 * v15);
  if (v14)
  {
    v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v4 >= v9)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v23 + 8 * v4);
    ++v15;
    if (v14)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1C07E15CC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for AmbientLightDistributionSignal();
    result = MEMORY[0x1C3BA8174](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C07E1608()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1C07E1618()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;

  sub_1C077AE5C();
  sub_1C0797B3C(v4);
  sub_1C07ACF80(&qword_1ED7482B0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  sub_1C077962C();
  sub_1C07ACF80(&qword_1ED74D4F8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0779614();
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  sub_1C077FD28();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1C079365C();
  sub_1C0796028(v9);
  sub_1C079962C(v0);
  v10 = sub_1C07ACF80(&qword_1ED75D0B8);
  sub_1C078AA40(v10);
  sub_1C079962C(v3);
  v11 = objc_allocWithZone(MEMORY[0x1E0D026F0]);
  v12 = sub_1C078F090();
  v13 = sub_1C07A5B48((uint64_t)v12, sel_publisherWithOptions_);
  sub_1C077F038();
  v14 = v1;
  sub_1C07ACF80((uint64_t *)&unk_1ED74D318);
  sub_1C07877D4();
  if (v2)
  {

  }
  else
  {
    v15 = sub_1C0780678();
    sub_1C07B826C(v15);
    type metadata accessor for AlarmEvent();
    sub_1C07E6EDC(&qword_1ED7482D0, &qword_1ED7482B0, MEMORY[0x1E0D3D840]);
    sub_1C077C0B0();
    sub_1C077E884();
    sub_1C078F074();
    sub_1C077AF1C();

    sub_1C078AA2C();
  }
  sub_1C077CF1C();
  sub_1C07757D0();
}

void sub_1C07E1788(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v27 = a3;
  v26 = sub_1C07ACF80(&qword_1ED7482B0);
  MEMORY[0x1E0C80A78](v26);
  v6 = sub_1C07ACF80(&qword_1ED74D4B0);
  v24 = *(_QWORD *)(v6 - 8);
  v25 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v23 - v13;
  v15 = sub_1C106ADE0();
  v16 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  v16(v14, a2, v15);
  sub_1C07B2D8C((uint64_t)v14, 0, 1, v15);
  v17 = sub_1C07ACF80(&qword_1ED75D0B8);
  v16(v12, a2 + *(int *)(v17 + 36), v15);
  sub_1C07B2D8C((uint64_t)v12, 0, 1, v15);
  v18 = objc_allocWithZone(MEMORY[0x1E0D026F0]);
  v19 = sub_1C07DC9F8((uint64_t)v14, (uint64_t)v12, 0, 0, 0);
  v20 = objc_msgSend(a1, sel_publisherWithOptions_, v19);

  v21 = v20;
  sub_1C07ACF80((uint64_t *)&unk_1ED74D318);
  sub_1C106ED88();
  if (v3)
  {

  }
  else
  {
    *(_QWORD *)(swift_allocObject() + 16) = a1;
    type metadata accessor for AmbientLightEvent(0);
    sub_1C07E6EDC(&qword_1ED748338, &qword_1ED7482B0, MEMORY[0x1E0D3D840]);
    v22 = a1;
    swift_retain();
    sub_1C1070C00();
    swift_release();

    (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v27, v8, v25);
  }
}

void sub_1C07E1A38()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;

  sub_1C077AE5C();
  sub_1C0797B3C(v4);
  sub_1C07ACF80(&qword_1ED7482B0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  sub_1C077962C();
  sub_1C07ACF80(&qword_1EF62FD58);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0779614();
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  sub_1C077FD28();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1C079365C();
  sub_1C0796028(v9);
  sub_1C079962C(v0);
  v10 = sub_1C07ACF80(&qword_1ED75D0B8);
  sub_1C078AA40(v10);
  sub_1C079962C(v3);
  v11 = objc_allocWithZone(MEMORY[0x1E0D026F0]);
  v12 = sub_1C078F090();
  v13 = sub_1C07A5B48((uint64_t)v12, sel_publisherWithOptions_);
  sub_1C077F038();
  v14 = v1;
  sub_1C07ACF80((uint64_t *)&unk_1ED74D318);
  sub_1C07877D4();
  if (v2)
  {

  }
  else
  {
    v15 = sub_1C0780678();
    sub_1C07B826C(v15);
    type metadata accessor for AppIntentEvent();
    sub_1C07E6EDC(&qword_1EF62FD70, &qword_1ED7482B0, MEMORY[0x1E0D3D840]);
    sub_1C077C0B0();
    sub_1C077E884();
    sub_1C078F074();
    sub_1C077AF1C();

    sub_1C078AA2C();
  }
  sub_1C077CF1C();
  sub_1C07757D0();
}

void sub_1C07E1BA8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;

  sub_1C077AE5C();
  sub_1C0797B3C(v4);
  sub_1C07ACF80(&qword_1ED7482B0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  sub_1C077962C();
  sub_1C07ACF80(&qword_1ED74D4A0);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0779614();
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  sub_1C077FD28();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1C079365C();
  sub_1C0796028(v9);
  sub_1C079962C(v0);
  v10 = sub_1C07ACF80(&qword_1ED75D0B8);
  sub_1C078AA40(v10);
  sub_1C079962C(v3);
  v11 = objc_allocWithZone(MEMORY[0x1E0D026F0]);
  v12 = sub_1C078F090();
  v13 = sub_1C07A5B48((uint64_t)v12, sel_publisherWithOptions_);
  sub_1C077F038();
  v14 = v1;
  sub_1C07ACF80((uint64_t *)&unk_1ED74D318);
  sub_1C07877D4();
  if (v2)
  {

  }
  else
  {
    v15 = sub_1C0780678();
    v16 = sub_1C07B826C(v15);
    type metadata accessor for NowPlayingEvent(v16);
    sub_1C07E6EDC(&qword_1ED748300, &qword_1ED7482B0, MEMORY[0x1E0D3D840]);
    sub_1C077C0B0();
    sub_1C077E884();
    sub_1C078F074();
    sub_1C077AF1C();

    sub_1C078AA2C();
  }
  sub_1C077CF1C();
  sub_1C07757D0();
}

void sub_1C07E1D18()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;

  sub_1C077AE5C();
  sub_1C0797B3C(v4);
  sub_1C07ACF80(&qword_1ED7482B0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  sub_1C077962C();
  sub_1C07ACF80(&qword_1ED74D4A8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0779614();
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  sub_1C077FD28();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1C079365C();
  sub_1C0796028(v9);
  sub_1C079962C(v0);
  v10 = sub_1C07ACF80(&qword_1ED75D0B8);
  sub_1C078AA40(v10);
  sub_1C079962C(v3);
  v11 = objc_allocWithZone(MEMORY[0x1E0D026F0]);
  v12 = sub_1C078F090();
  v13 = sub_1C07A5B48((uint64_t)v12, sel_publisherWithOptions_);
  sub_1C077F038();
  v14 = v1;
  sub_1C07ACF80((uint64_t *)&unk_1ED74D318);
  sub_1C07877D4();
  if (v2)
  {

  }
  else
  {
    v15 = sub_1C0780678();
    sub_1C07B826C(v15);
    type metadata accessor for PoiCategoryEvent();
    sub_1C07E6EDC(&qword_1ED748330, &qword_1ED7482B0, MEMORY[0x1E0D3D840]);
    sub_1C077C0B0();
    sub_1C077E884();
    sub_1C078F074();
    sub_1C077AF1C();

    sub_1C078AA2C();
  }
  sub_1C077CF1C();
  sub_1C07757D0();
}

void sub_1C07E1E88()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;

  sub_1C077AE5C();
  sub_1C0797B3C(v4);
  sub_1C07ACF80(&qword_1ED7482B0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  sub_1C077962C();
  sub_1C07ACF80(&qword_1EF62FD80);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0779614();
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  sub_1C077FD28();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1C079365C();
  sub_1C0796028(v9);
  sub_1C079962C(v0);
  v10 = sub_1C07ACF80(&qword_1ED75D0B8);
  sub_1C078AA40(v10);
  sub_1C079962C(v3);
  v11 = objc_allocWithZone(MEMORY[0x1E0D026F0]);
  v12 = sub_1C078F090();
  v13 = sub_1C07A5B48((uint64_t)v12, sel_publisherWithOptions_);
  sub_1C077F038();
  v14 = v1;
  sub_1C07ACF80((uint64_t *)&unk_1ED74D318);
  sub_1C07877D4();
  if (v2)
  {

  }
  else
  {
    v15 = sub_1C0780678();
    sub_1C07B826C(v15);
    type metadata accessor for HomeKitEvent();
    sub_1C07E6EDC(&qword_1EF62FD98, &qword_1ED7482B0, MEMORY[0x1E0D3D840]);
    sub_1C077C0B0();
    sub_1C077E884();
    sub_1C078F074();
    sub_1C077AF1C();

    sub_1C078AA2C();
  }
  sub_1C077CF1C();
  sub_1C07757D0();
}

void sub_1C07E1FF8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;

  sub_1C077AE5C();
  sub_1C0797B3C(v4);
  sub_1C07ACF80(&qword_1ED7482B0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  sub_1C077962C();
  sub_1C07ACF80(&qword_1ED74D498);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0779614();
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  sub_1C077FD28();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1C079365C();
  sub_1C0796028(v9);
  sub_1C079962C(v0);
  v10 = sub_1C07ACF80(&qword_1ED75D0B8);
  sub_1C078AA40(v10);
  sub_1C079962C(v3);
  v11 = objc_allocWithZone(MEMORY[0x1E0D026F0]);
  v12 = sub_1C078F090();
  v13 = sub_1C07A5B48((uint64_t)v12, sel_publisherWithOptions_);
  sub_1C077F038();
  v14 = v1;
  sub_1C07ACF80((uint64_t *)&unk_1ED74D318);
  sub_1C07877D4();
  if (v2)
  {

  }
  else
  {
    v15 = sub_1C0780678();
    sub_1C07B826C(v15);
    type metadata accessor for EnergyModeEvent();
    sub_1C07E6EDC(&qword_1ED7482E0, &qword_1ED7482B0, MEMORY[0x1E0D3D840]);
    sub_1C077C0B0();
    sub_1C077E884();
    sub_1C078F074();
    sub_1C077AF1C();

    sub_1C078AA2C();
  }
  sub_1C077CF1C();
  sub_1C07757D0();
}

void sub_1C07E2168()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;

  sub_1C077AE5C();
  sub_1C0797B3C(v4);
  sub_1C07ACF80(&qword_1ED7482B0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  sub_1C077962C();
  sub_1C07ACF80(&qword_1EF62FC60);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0779614();
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  sub_1C077FD28();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1C079365C();
  sub_1C0796028(v9);
  sub_1C079962C(v0);
  v10 = sub_1C07ACF80(&qword_1ED75D0B8);
  sub_1C078AA40(v10);
  sub_1C079962C(v3);
  v11 = objc_allocWithZone(MEMORY[0x1E0D026F0]);
  v12 = sub_1C078F090();
  v13 = sub_1C07A5B48((uint64_t)v12, sel_publisherWithOptions_);
  sub_1C077F038();
  v14 = v1;
  sub_1C07ACF80((uint64_t *)&unk_1ED74D318);
  sub_1C07877D4();
  if (v2)
  {

  }
  else
  {
    v15 = sub_1C0780678();
    sub_1C07B826C(v15);
    type metadata accessor for LocationMetadataEvent();
    sub_1C07E6EDC(&qword_1EF62FC78, &qword_1ED7482B0, MEMORY[0x1E0D3D840]);
    sub_1C077C0B0();
    sub_1C077E884();
    sub_1C078F074();
    sub_1C077AF1C();

    sub_1C078AA2C();
  }
  sub_1C077CF1C();
  sub_1C07757D0();
}

void sub_1C07E22D8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;

  sub_1C077AE5C();
  sub_1C0797B3C(v4);
  sub_1C07ACF80(&qword_1ED7482B0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  sub_1C077962C();
  sub_1C07ACF80(&qword_1ED74D4B8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0779614();
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  sub_1C077FD28();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1C079365C();
  sub_1C0796028(v9);
  sub_1C079962C(v0);
  v10 = sub_1C07ACF80(&qword_1ED75D0B8);
  sub_1C078AA40(v10);
  sub_1C079962C(v3);
  v11 = objc_allocWithZone(MEMORY[0x1E0D026F0]);
  v12 = sub_1C078F090();
  v13 = sub_1C07A5B48((uint64_t)v12, sel_publisherWithOptions_);
  sub_1C077F038();
  v14 = v1;
  sub_1C07ACF80((uint64_t *)&unk_1ED74D318);
  sub_1C07877D4();
  if (v2)
  {

  }
  else
  {
    v15 = sub_1C0780678();
    sub_1C07B826C(v15);
    type metadata accessor for DeviceBacklightEvent();
    sub_1C07E6EDC(&qword_1ED7482E8, &qword_1ED7482B0, MEMORY[0x1E0D3D840]);
    sub_1C077C0B0();
    sub_1C077E884();
    sub_1C078F074();
    sub_1C077AF1C();

    sub_1C078AA2C();
  }
  sub_1C077CF1C();
  sub_1C07757D0();
}

uint64_t sub_1C07E2448(unsigned __int8 a1, double a2, double a3, double a4)
{
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1C07ACF80(&qword_1ED755050);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C10795A0;
  sub_1C077C7B4();
  *(_QWORD *)(v9 + 32) = 0xD00000000000001BLL;
  *(_QWORD *)(v9 + 40) = v10;
  v11 = (void *)objc_opt_self();
  *(_QWORD *)(inited + 48) = objc_msgSend(v11, sel_featureValueWithDouble_, a2);
  *(_QWORD *)(inited + 56) = 0xD00000000000001BLL;
  sub_1C077C7B4();
  *(_QWORD *)(inited + 64) = v12;
  *(_QWORD *)(inited + 72) = objc_msgSend(v11, sel_featureValueWithDouble_, a3);
  *(_QWORD *)(inited + 80) = 0xD00000000000001BLL;
  sub_1C077C7B4();
  *(_QWORD *)(inited + 88) = v13;
  *(_QWORD *)(inited + 96) = objc_msgSend(v11, sel_featureValueWithDouble_, a4);
  *(_QWORD *)(inited + 104) = 0xD000000000000010;
  sub_1C077C7B4();
  *(_QWORD *)(inited + 112) = v14;
  *(_QWORD *)(inited + 120) = objc_msgSend(v11, sel_featureValueWithInt64_, a1);
  sub_1C07D97D4();
  return sub_1C106F97C();
}

uint64_t sub_1C07E25B4()
{
  uint64_t v0;

  return sub_1C07E2448(*(_BYTE *)(v0 + 24), *(double *)v0, *(double *)(v0 + 8), *(double *)(v0 + 16));
}

uint64_t sub_1C07E25C4()
{
  uint64_t v0;

  return sub_1C07E25B0(*(unsigned __int8 *)(v0 + 24), *(double *)v0, *(double *)(v0 + 8), *(double *)(v0 + 16));
}

double sub_1C07E25D4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  double result;
  char v5;

  v3 = v2 + *(int *)(a1 + 24);
  result = *(double *)(v3 + 16);
  v5 = *(_BYTE *)(v3 + 24);
  *(_OWORD *)a2 = *(_OWORD *)v3;
  *(double *)(a2 + 16) = result;
  *(_BYTE *)(a2 + 24) = v5;
  return result;
}

void sub_1C07E25F8()
{
  id v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v0 = objc_msgSend((id)BiomeLibrary(), sel_ContextualUnderstanding);
  swift_unknownObjectRelease();
  v1 = objc_msgSend(v0, sel_AmbientLight);
  swift_unknownObjectRelease();
  v2 = (void *)sub_1C078046C();
  sub_1C07E1788(v2, v3, v4);

}

void sub_1C07E269C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;

  sub_1C077AE5C();
  v3 = v2;
  v4 = sub_1C07ACF80(&qword_1ED74D4B0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07ACF80(&qword_1ED74CC30);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v8);
  sub_1C077962C();
  type metadata accessor for AmbientLightSmoothedSequence(0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07E25F8();
  if (!v0)
  {
    v17 = sub_1C07ACF80(&qword_1ED747FE8);
    sub_1C07E6EDC(&qword_1ED747FE0, &qword_1ED747FD8, (uint64_t)&unk_1C10B5B30);
    v18 = v12;
    sub_1C07B3E30((uint64_t *)&v16);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v1, v4);
    sub_1C07E6EDC(&qword_1ED748190, &qword_1ED74D4B0, MEMORY[0x1E0DF0DB8]);
    sub_1C1070150();
    sub_1C0784B6C(v1, &qword_1ED74CC30);
    v13 = sub_1C106ADE0();
    sub_1C078F0AC(v13);
    v14 = type metadata accessor for AmbientLightEvent(0);
    sub_1C078F0AC(v14);
    sub_1C077DD60(&v16, (uint64_t)v11);
    *((_QWORD *)v11 + 5) = &unk_1E79FBEF0;
    *((_QWORD *)v11 + 6) = 0;
    sub_1C07E563C((uint64_t)v11, v3, type metadata accessor for AmbientLightSmoothedSequence);
  }
  sub_1C07757D0();
}

void sub_1C07E2854()
{
  sub_1C07E269C();
}

uint64_t type metadata accessor for AmbientLightSmoothedSequence(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1ED747ED8);
}

uint64_t type metadata accessor for AmbientLightEvent(uint64_t a1)
{
  return sub_1C0784B00(a1, qword_1ED74A088);
}

void sub_1C07E2890(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  double *v4;
  double v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = type metadata accessor for AmbientLightEvent(0);
  v4 = (double *)(a1 + *(int *)(v3 + 24));
  v5 = *v4;
  v6 = *(_QWORD *)(v1 + 40);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1C0C6EDFC();
    v6 = v14;
  }
  v7 = *(_QWORD *)(v6 + 16);
  if (!v7)
  {
    __break(1u);
    goto LABEL_9;
  }
  *(double *)(v6 + 32) = v5 + *(double *)(v6 + 32);
  if (v7 == 1)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  *(double *)(v6 + 40) = v4[1] + *(double *)(v6 + 40);
  if (v7 < 3)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  *(double *)(v6 + 48) = v4[2] + *(double *)(v6 + 48);
  *(_QWORD *)(v1 + 40) = v6;
  v8 = *(_QWORD *)(v1 + 48);
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (!v9)
  {
    *(_QWORD *)(v1 + 48) = v10;
    v11 = v1 + *(int *)(type metadata accessor for AmbientLightSmoothedSequence(0) + 28);
    sub_1C0784B6C(v11, (uint64_t *)&unk_1ED762690);
    v12 = a1 + *(int *)(v3 + 20);
    v13 = sub_1C077AE98();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
    sub_1C07B2D8C(v11, 0, 1, v13);
    return;
  }
LABEL_11:
  __break(1u);
}

uint64_t sub_1C07E29BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 40) = &unk_1E79FBF28;
  *(_QWORD *)(v0 + 48) = 0;
  v1 = type metadata accessor for AmbientLightSmoothedSequence(0);
  v2 = v0 + *(int *)(v1 + 28);
  sub_1C077C7AC(v1, (uint64_t *)&unk_1ED762690);
  v3 = sub_1C077AE98();
  return sub_1C07B2D8C(v2, 1, 1, v3);
}

uint64_t sub_1C07E2A18(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[11] = a1;
  v2[12] = v1;
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  v2[13] = swift_task_alloc();
  v3 = sub_1C077AE98();
  v2[14] = v3;
  v2[15] = *(_QWORD *)(v3 - 8);
  v2[16] = sub_1C0775870();
  v2[17] = sub_1C0775870();
  sub_1C07ACF80(&qword_1ED747DE0);
  v2[18] = sub_1C0775870();
  v2[19] = sub_1C0775870();
  v2[20] = sub_1C0775870();
  v2[21] = sub_1C0775870();
  v2[22] = type metadata accessor for AmbientLightEvent(0);
  v2[23] = sub_1C0775870();
  v2[24] = sub_1C0775870();
  v2[25] = sub_1C0775870();
  v2[26] = sub_1C0775870();
  v2[27] = sub_1C0775870();
  return sub_1C077AEC4();
}

uint64_t sub_1C07E2B18()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;

  v1 = v0[12];
  v2 = *(_QWORD *)(v1 + 40);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1C0C6EDFC();
    v2 = v7;
  }
  *(_QWORD *)(v1 + 40) = v2;
  sub_1C078C188();
  v3 = sub_1C078DEC0();
  v4 = sub_1C07AC6FC(v3);
  v0[31] = sub_1C07814C4(v4);
  v5 = (_QWORD *)swift_task_alloc();
  v0[32] = v5;
  sub_1C077F61C(v5);
  return sub_1C1070078();
}

uint64_t sub_1C07E2BBC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 264) = v0;
  swift_task_dealloc();
  return sub_1C077AEC4();
}

void sub_1C07E2C18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t);
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  double v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  double v53;
  char v54;
  double v55;
  void (*v56)(uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  float64x2_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;

  sub_1C0782CD8();
  v1 = *(_QWORD *)(v0 + 248);
  v2 = *(_QWORD *)(v0 + 224);
  if (sub_1C077CF34(v1) == 1)
  {
    v4 = *(_QWORD *)(v0 + 168);
    v3 = *(_QWORD *)(v0 + 176);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 240) + 8))(v1, *(_QWORD *)(v0 + 232));
    sub_1C07767BC();
    sub_1C07B2D8C(v4, 1, 1, v3);
    goto LABEL_4;
  }
  v6 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 176);
  *(_QWORD *)(v0 + 40) = v2;
  sub_1C07B3E30((uint64_t *)(v0 + 16));
  (*(void (**)(void))(*(_QWORD *)(v2 - 8) + 32))();
  sub_1C07767BC();
  v7 = swift_dynamicCast();
  sub_1C07B2D8C(v6, v7 ^ 1u, 1, v5);
  if (sub_1C07B2D80(v6, 1, v5) == 1)
  {
LABEL_4:
    v8 = *(_QWORD *)(v0 + 152);
    v9 = *(_QWORD *)(v0 + 96);
    sub_1C0784B6C(*(_QWORD *)(v0 + 168), &qword_1ED747DE0);
    v10 = type metadata accessor for AmbientLightSmoothedSequence(0);
    v11 = v9 + *(int *)(v10 + 32);
    sub_1C078A8CC(v11, v8, &qword_1ED747DE0);
    if (sub_1C078BCA0() == 1)
    {
      sub_1C0784B6C(*(_QWORD *)(v0 + 152), &qword_1ED747DE0);
LABEL_21:
      v59 = sub_1C07E6F3C();
      sub_1C07B2D8C(v59, v60, 1, v61);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      sub_1C07767BC();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      sub_1C0784DE8(*(uint64_t (**)(void))(v0 + 8));
      return;
    }
    v13 = *(_QWORD *)(v0 + 192);
    v93 = *(_QWORD *)(v0 + 184);
    v14 = *(_QWORD *)(v0 + 136);
    v15 = *(_QWORD *)(v0 + 112);
    v16 = *(_QWORD *)(v0 + 120);
    v17 = *(_QWORD *)(v0 + 96);
    v18 = *(_QWORD *)(v0 + 104);
    sub_1C07E6F58(*(_QWORD *)(v0 + 152), v12, type metadata accessor for AmbientLightEvent);
    sub_1C077C7AC(v19, &qword_1ED747DE0);
    sub_1C077CF40(v11, 1);
    v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
    v20(v14, v13, v15);
    sub_1C078A8CC(v17 + *(int *)(v10 + 28), v18, (uint64_t *)&unk_1ED762690);
    sub_1C07E6C80(v13, v93, type metadata accessor for AmbientLightEvent);
    v21 = sub_1C07B2D80(v18, 1, v15);
    v22 = *(_QWORD *)(v0 + 184);
    v24 = *(_QWORD *)(v0 + 104);
    v23 = *(_QWORD *)(v0 + 112);
    if (v21 == 1)
    {
      v20(*(_QWORD *)(v0 + 128), v22 + *(int *)(*(_QWORD *)(v0 + 176) + 20), *(_QWORD *)(v0 + 112));
      sub_1C07B1F90(v22, type metadata accessor for AmbientLightEvent);
      sub_1C0784B6C(v24, (uint64_t *)&unk_1ED762690);
    }
    else
    {
      v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 120);
      sub_1C07B1F90(*(_QWORD *)(v0 + 184), type metadata accessor for AmbientLightEvent);
      v40 = sub_1C078046C();
      v41(v40);
    }
    v42 = *(_QWORD *)(v0 + 96);
    v43 = *(_QWORD *)(v42 + 40);
    v44 = *(_QWORD *)(v43 + 16);
    if (v44)
    {
      if (v44 != 1)
      {
        if (v44 >= 3)
        {
          v45 = (double)*(uint64_t *)(v42 + 48);
          v46 = *(double *)(v43 + 32) / v45;
          v47 = *(_QWORD *)(v0 + 192);
          v48 = *(_QWORD *)(v0 + 176);
          v49 = *(_QWORD *)(v0 + 128);
          v50 = *(_QWORD *)(v0 + 112);
          v51 = *(_QWORD *)(v0 + 120);
          v52 = *(_QWORD *)(v0 + 88);
          v53 = *(double *)(v43 + 40) / v45;
          v54 = *(_BYTE *)(v47 + *(int *)(v48 + 24) + 24);
          v55 = *(double *)(v43 + 48) / v45;
          sub_1C07B1F90(v47, type metadata accessor for AmbientLightEvent);
          v56 = *(void (**)(uint64_t))(v51 + 32);
          v57 = sub_1C078046C();
          v56(v57);
          ((void (*)(uint64_t, uint64_t, uint64_t))v56)(v52 + *(int *)(v48 + 20), v49, v50);
          v58 = v52 + *(int *)(v48 + 24);
          *(double *)v58 = v46;
          *(double *)(v58 + 8) = v53;
          *(double *)(v58 + 16) = v55;
          *(_BYTE *)(v58 + 24) = v54;
          goto LABEL_21;
        }
        goto LABEL_38;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    sub_1C0C6EDFC();
    v30 = v91;
LABEL_10:
    if (*(_QWORD *)(v30 + 16))
    {
      sub_1C07E6F60();
      if (!v31)
      {
        sub_1C07A9538();
        if (v32)
        {
          sub_1C07809DC();
          if (!v34)
          {
            v35 = *(_QWORD *)(v0 + 216);
            v36 = *(_QWORD *)(v0 + 176);
            v37 = *(_QWORD *)(v0 + 112);
            v38 = *(_QWORD *)(v0 + 120);
            sub_1C0780684(v33);
            sub_1C077C7AC(v39, (uint64_t *)&unk_1ED762690);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16))(v23, v35 + *(int *)(v36 + 20), v37);
            sub_1C0780FD4(v23);
            goto LABEL_30;
          }
          goto LABEL_43;
        }
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        sub_1C0C6EDFC();
        v66 = v92;
        goto LABEL_24;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_42;
  }
  v25 = *(_QWORD *)(v0 + 160);
  v26 = *(_QWORD *)(v0 + 96);
  sub_1C07E563C(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 216), type metadata accessor for AmbientLightEvent);
  v23 = type metadata accessor for AmbientLightSmoothedSequence(0);
  v20 = (void (*)(uint64_t, uint64_t, uint64_t))(v26 + *(int *)(v23 + 32));
  sub_1C078A8CC((uint64_t)v20, v25, &qword_1ED747DE0);
  v27 = sub_1C078BCA0();
  v28 = *(_QWORD *)(v0 + 216);
  if (v27 == 1)
  {
    v29 = *(_QWORD *)(v0 + 96);
    sub_1C07877EC(*(_QWORD *)(v0 + 160));
    sub_1C07877EC((uint64_t)v20);
    sub_1C07E6C80(v28, (uint64_t)v20, type metadata accessor for AmbientLightEvent);
    sub_1C0780FD4((uint64_t)v20);
    v30 = *(_QWORD *)(v29 + 40);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      goto LABEL_10;
    goto LABEL_39;
  }
  v62 = *(_QWORD *)(v0 + 208);
  v63 = *(_QWORD *)(v0 + 176);
  sub_1C07E563C(*(_QWORD *)(v0 + 160), v62, type metadata accessor for AmbientLightEvent);
  v64 = *(int *)(v63 + 24);
  v65 = *(unsigned __int8 *)(v62 + v64 + 24);
  if (*(unsigned __int8 *)(v28 + v64 + 24) != v65)
  {
    v79 = *(_QWORD *)(v0 + 200);
    v80 = *(_QWORD *)(v0 + 176);
    v81 = *(_QWORD *)(v0 + 96);
    (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 16))(v79, *(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 112));
    sub_1C077C0A4(v79 + *(int *)(v80 + 20));
    v82 = *(_QWORD *)(v81 + 40);
    v83 = *(_QWORD *)(v82 + 16);
    if (v83)
    {
      if (v83 != 1)
      {
        if (v83 >= 3)
        {
          v84 = *(_QWORD *)(v0 + 88);
          *(double *)&v85 = (double)*(uint64_t *)(*(_QWORD *)(v0 + 96) + 48);
          v87 = *(_QWORD *)(v0 + 208);
          v86 = *(_QWORD *)(v0 + 216);
          v88 = *(_QWORD *)(v0 + 200);
          v89 = v88 + *(int *)(*(_QWORD *)(v0 + 176) + 24);
          v90 = *(float64x2_t *)(v82 + 40);
          *(double *)v89 = *(double *)(v82 + 32) / *(double *)&v85;
          *(float64x2_t *)(v89 + 8) = vdivq_f64(v90, (float64x2_t)vdupq_lane_s64(v85, 0));
          *(_BYTE *)(v89 + 24) = v65;
          sub_1C0784B6C((uint64_t)v20, &qword_1ED747DE0);
          sub_1C07E6C80(v86, (uint64_t)v20, type metadata accessor for AmbientLightEvent);
          sub_1C078F0C0((uint64_t)v20);
          sub_1C07E29BC();
          sub_1C07E2890(v86);
          sub_1C07B1F90(v87, type metadata accessor for AmbientLightEvent);
          sub_1C07B1F90(v86, type metadata accessor for AmbientLightEvent);
          sub_1C07E563C(v88, v84, type metadata accessor for AmbientLightEvent);
          goto LABEL_21;
        }
        goto LABEL_51;
      }
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
      return;
    }
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  v66 = *(_QWORD *)(*(_QWORD *)(v0 + 96) + 40);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    goto LABEL_44;
LABEL_24:
  if (!*(_QWORD *)(v66 + 16))
  {
    __break(1u);
    goto LABEL_46;
  }
  sub_1C07E6F60();
  if (v31)
  {
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  sub_1C07A9538();
  if (!v32)
    goto LABEL_47;
  sub_1C07809DC();
  if (v34)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  v68 = *(_QWORD *)(v0 + 208);
  v69 = *(_QWORD *)(v0 + 216);
  v70 = *(_QWORD *)(v0 + 176);
  v71 = *(_QWORD *)(v0 + 112);
  v72 = *(_QWORD *)(v0 + 120);
  sub_1C0780684(v67);
  sub_1C077C7AC(v73, (uint64_t *)&unk_1ED762690);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v72 + 16))(v23, v69 + *(int *)(v70 + 20), v71);
  sub_1C07B2D8C(v23, 0, 1, v71);
  sub_1C07B1F90(v68, type metadata accessor for AmbientLightEvent);
LABEL_30:
  v74 = *(_QWORD *)(v0 + 144);
  sub_1C07B1F90(*(_QWORD *)(v0 + 216), type metadata accessor for AmbientLightEvent);
  sub_1C078A8CC((uint64_t)v20, v74, &qword_1ED747DE0);
  v75 = sub_1C077CF34(v74);
  sub_1C07877EC(*(_QWORD *)(v0 + 144));
  if (v75 == 1)
    goto LABEL_21;
  sub_1C078C188();
  v76 = sub_1C078DEC0();
  v77 = sub_1C07AC6FC(v76);
  *(_QWORD *)(v0 + 248) = sub_1C07814C4(v77);
  v78 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 256) = v78;
  sub_1C077F61C(v78);
  sub_1C1070078();
}

uint64_t sub_1C07E336C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  id v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  sub_1C07796A0();
  a23 = v25;
  a24 = v26;
  a22 = v24;
  swift_task_dealloc();
  if (qword_1ED762B18 != -1)
    swift_once();
  v27 = *(void **)(v24 + 264);
  v28 = sub_1C077585C();
  sub_1C079E000(v28, (uint64_t)qword_1ED762AF8);
  v29 = v27;
  v30 = v27;
  v31 = sub_1C106F538();
  v32 = sub_1C1070390();
  if (os_log_type_enabled(v31, v32))
  {
    v33 = (uint8_t *)sub_1C0775854();
    a13 = sub_1C0775854();
    *(_DWORD *)v33 = 136315138;
    swift_getErrorValue();
    v34 = sub_1C1070D74();
    *(_QWORD *)(v24 + 80) = sub_1C0788DAC(v34, v35, &a13);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    sub_1C077E6C8();
    sub_1C077E6C8();
    _os_log_impl(&dword_1C0771000, v31, v32, "Error when reading the ambient light events - %s", v33, 0xCu);
    sub_1C0778610();
    sub_1C0776778();
  }
  sub_1C077E6C8();
  sub_1C077E6C8();
  sub_1C077E6C8();

  v36 = sub_1C07E6F3C();
  sub_1C077A2C4(v36, v37, v38, v39);
  sub_1C07767BC();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return sub_1C07785F4(*(uint64_t (**)(void))(v24 + 8));
}

void sub_1C07E3580(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1C07E6C80(v1, a1, type metadata accessor for AmbientLightSmoothedSequence);
}

void sub_1C07E35A4(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1C07E3580(a1);
  sub_1C07B1F90(v1, type metadata accessor for AmbientLightSmoothedSequence);
}

uint64_t sub_1C07E35C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;

  v3 = swift_task_alloc();
  v4 = (_QWORD *)sub_1C0794C48(v3);
  *v4 = v1;
  v4[1] = sub_1C07E3614;
  return sub_1C07E2A18(a1);
}

uint64_t sub_1C07E3614()
{
  uint64_t v0;

  sub_1C077B5FC();
  return sub_1C077CF28(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C07E363C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_1EF6411D8 + dword_1EF6411D8);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  *v1 = v0;
  v1[1] = sub_1C07E36C8;
  return v3();
}

uint64_t sub_1C07E36C8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return sub_1C077CF28(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_1C07E3710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[5] = a2;
  v3[6] = a3;
  v3[4] = a1;
  v3[7] = type metadata accessor for AlarmEvent();
  v3[8] = swift_task_alloc();
  v4 = sub_1C106ADE0();
  v3[9] = v4;
  v3[10] = *(_QWORD *)(v4 - 8);
  v3[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C07E3798()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  os_log_type_t v15;
  BOOL v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  os_log_type_t v22;
  char v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t);

  sub_1C07796A0();
  v6 = objc_msgSend((id)sub_1C07B5E9C(), sel_eventBody);
  if (v6)
  {
    v7 = sub_1C07A9D20(v6);
    sub_1C077CF14((uint64_t)v7, sel_timestamp);
    sub_1C07AD55C();
    objc_opt_self();
    if (sub_1C07B70C4())
    {
      sub_1C07B8874();
      v8 = sub_1C077AF10(v3 + *(int *)(v4 + 20));
      v9 = sub_1C0780FE4(v8, sel_eventType);
      v10 = sub_1C07D9228((uint64_t)v9);

      v11 = sub_1C07AFFC8();
      *(_BYTE *)(v3 + *(int *)(v4 + 24)) = v10;
      sub_1C0778618(v11, v12, (uint64_t (*)(_QWORD))type metadata accessor for AlarmEvent);
      sub_1C0790668();
    }
    else
    {
      if (qword_1ED762B18 != -1)
        swift_once();
      v20 = sub_1C077585C();
      v21 = sub_1C079BCB8(v20, (uint64_t)qword_1ED762AF8);
      sub_1C079ED48();
      v22 = sub_1C077A2D0();
      sub_1C0790D48(v22);
      sub_1C07B61AC();
      if ((v23 & 1) != 0)
      {
        sub_1C0775854();
        sub_1C0775854();
        sub_1C078A2D0();
        sub_1C07BC574(4.8149e-34);
        v24 = sub_1C07796BC();
        v30 = sub_1C079F2B0(v24, v25, v26, v27, v28, v29);
        sub_1C0790D1C(v30);
        sub_1C0775834();

        sub_1C07A50A4(&dword_1C0771000, v31, v32, "Could not convert event of type %s to BMClockAlarm");
        sub_1C0797B2C();
        sub_1C0776778();
      }

      v33 = sub_1C0786334();
      v34(v33);
      sub_1C07B3ED8();
    }
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v13 = sub_1C077585C();
    v14 = sub_1C078D340(v13, (uint64_t)qword_1ED762AF8);
    sub_1C106F538();
    v15 = sub_1C0784E0C();
    v16 = sub_1C077AF00(v15);
    v17 = *(void **)(v2 + 48);
    if (v16)
    {
      sub_1C0775854();
      sub_1C0775854();
      sub_1C0793648(5.7779e-34);
      sub_1C079FC50();
      sub_1C0775878();

      sub_1C0790D34(&dword_1C0771000, v18, v19, "Unable to parse eventBody from %@");
      sub_1C07ACF80(&qword_1ED7614A0);
      sub_1C0794C38();
      sub_1C0776778();
    }

    sub_1C079195C();
  }
  sub_1C079963C();
  sub_1C07767BC();
  return sub_1C07785F4(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_1C07E3A24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[5] = a2;
  v3[6] = a3;
  v3[4] = a1;
  v3[7] = type metadata accessor for AmbientLightEvent(0);
  v3[8] = swift_task_alloc();
  v4 = sub_1C106ADE0();
  v3[9] = v4;
  v3[10] = *(_QWORD *)(v4 - 8);
  v3[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C07E3AAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  os_log_type_t v53;
  BOOL v54;
  void *v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  os_log_type_t v61;
  BOOL v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _DWORD *v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v73;

  sub_1C0782CD8();
  a25 = v29;
  a26 = v30;
  a24 = v28;
  v31 = objc_msgSend(*(id *)(v28 + 40), sel_eventBody);
  if (v31)
  {
    v32 = sub_1C07A9D20(v31);
    sub_1C077CF14((uint64_t)v32, sel_timestamp);
    sub_1C07AD55C();
    objc_opt_self();
    v33 = sub_1C07B70C4();
    if (v33)
    {
      v34 = (void *)v33;
      v36 = *(_QWORD *)(v28 + 80);
      v35 = *(_QWORD *)(v28 + 88);
      v37 = *(_QWORD *)(v28 + 64);
      v38 = *(_QWORD *)(v28 + 72);
      v39 = *(_QWORD *)(v28 + 56);
      sub_1C07BBED0(v37);
      v40 = sub_1C07BBED0(v37 + *(int *)(v39 + 20));
      v41 = sub_1C07877F4(v40, sel_ambientLightColorComponent0);
      v43 = v42;
      v44 = sub_1C07877F4((uint64_t)v41, sel_ambientLightColorComponent1);
      v46 = v45;
      sub_1C07877F4((uint64_t)v44, sel_ambientLightColorComponent2);
      v48 = v47;
      LOBYTE(v34) = sub_1C07E716C(v34);

      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v38);
      v49 = v37 + *(int *)(v39 + 24);
      *(_QWORD *)v49 = v43;
      *(_QWORD *)(v49 + 8) = v46;
      *(_QWORD *)(v49 + 16) = v48;
      *(_BYTE *)(v49 + 24) = (_BYTE)v34;
      sub_1C07E6F58(v37, v50, type metadata accessor for AmbientLightEvent);
      sub_1C0783000();
    }
    else
    {
      if (qword_1ED762B18 != -1)
        swift_once();
      v59 = sub_1C077585C();
      v60 = sub_1C079BCB8(v59, (uint64_t)qword_1ED762AF8);
      sub_1C079ED48();
      v61 = sub_1C077A2D0();
      v62 = sub_1C0790D48(v61);
      v64 = *(_QWORD *)(v28 + 80);
      v63 = *(_QWORD *)(v28 + 88);
      v65 = *(_QWORD *)(v28 + 72);
      if (v62)
      {
        v66 = (_DWORD *)sub_1C0775854();
        a12 = sub_1C0775854();
        *v66 = 136315138;
        sub_1C07AA634();
        v67 = sub_1C07796BC();
        v69 = sub_1C0788DAC(v67, v68, &a12);
        sub_1C0790D1C(v69);
        sub_1C0775834();

        sub_1C07A50A4(&dword_1C0771000, v70, v71, "Could not convert event of type %s to BMContextualUnderstandingAmbientLight");
        sub_1C0797B2C();
        sub_1C0776778();
      }

      (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v63, v65);
      sub_1C07B3ED8();
    }
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v51 = sub_1C077585C();
    v52 = sub_1C078D340(v51, (uint64_t)qword_1ED762AF8);
    sub_1C106F538();
    v53 = sub_1C0784E0C();
    v54 = sub_1C077AF00(v53);
    v55 = *(void **)(v28 + 48);
    if (v54)
    {
      sub_1C0775854();
      v73 = (_QWORD *)sub_1C0775854();
      v56 = sub_1C0793648(5.7779e-34);
      sub_1C10705AC();
      *v73 = v55;

      sub_1C0790D34(&dword_1C0771000, v57, v58, "Unable to parse eventBody from %@");
      sub_1C07ACF80(&qword_1ED7614A0);
      sub_1C0778610();
      sub_1C0776778();
    }

    sub_1C079195C();
  }
  sub_1C079963C();
  sub_1C07767BC();
  return sub_1C0784DE8(*(uint64_t (**)(void))(v28 + 8));
}

uint64_t sub_1C07E3DF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[5] = a2;
  v3[6] = a3;
  v3[4] = a1;
  v3[7] = type metadata accessor for AppIntentEvent();
  v3[8] = swift_task_alloc();
  v4 = sub_1C106ADE0();
  v3[9] = v4;
  v3[10] = *(_QWORD *)(v4 - 8);
  v3[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C07E3E7C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  os_log_type_t v20;
  BOOL v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  os_log_type_t v27;
  char v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  void (*v43)(uint64_t);

  sub_1C07796A0();
  v4 = objc_msgSend((id)sub_1C07B5E9C(), sel_eventBody);
  if (v4)
  {
    v5 = sub_1C07A9D20(v4);
    sub_1C077CF14((uint64_t)v5, sel_timestamp);
    sub_1C07AD55C();
    objc_opt_self();
    v6 = sub_1C07B70C4();
    if (v6)
    {
      v7 = (void *)v6;
      v8 = *(_QWORD *)(v2 + 64);
      v9 = *(_QWORD *)(v2 + 56);
      sub_1C07B65FC(v8);
      sub_1C07B65FC(v8 + *(int *)(v9 + 20));
      v10 = sub_1C0877010(v7);
      v12 = v11;
      v13 = objc_msgSend(v7, sel_intentClass);
      if (v13)
      {
        v14 = v13;
        v15 = sub_1C106FB14();
        v17 = v16;

      }
      else
      {

        v15 = 0;
        v17 = 0;
      }
      v38 = *(_QWORD *)(v2 + 64);
      v39 = *(_QWORD *)(v2 + 56);
      v40 = *(_QWORD *)(v2 + 32);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 + 80) + 8))(*(_QWORD *)(v2 + 88), *(_QWORD *)(v2 + 72));
      v41 = (uint64_t *)(v38 + *(int *)(v39 + 24));
      *v41 = v10;
      v41[1] = v12;
      v41[2] = v15;
      v41[3] = v17;
      sub_1C07E563C(v38, v40, (uint64_t (*)(_QWORD))type metadata accessor for AppIntentEvent);
      sub_1C078F0C0(v40);

    }
    else
    {
      if (qword_1ED762B18 != -1)
        swift_once();
      v25 = sub_1C077585C();
      v26 = sub_1C079BCB8(v25, (uint64_t)qword_1ED762AF8);
      sub_1C079ED48();
      v27 = sub_1C077A2D0();
      sub_1C0790D48(v27);
      sub_1C07B61AC();
      if ((v28 & 1) != 0)
      {
        sub_1C0775854();
        sub_1C0775854();
        sub_1C078A2D0();
        sub_1C07BC574(4.8149e-34);
        v29 = sub_1C07796BC();
        v35 = sub_1C079F2B0(v29, v30, v31, v32, v33, v34);
        sub_1C0790D1C(v35);
        sub_1C0775834();

        sub_1C07A50A4(&dword_1C0771000, v36, v37, "Could not convert event of type %s to BMAppIntent");
        sub_1C0797B2C();
        sub_1C0776778();
      }

      v42 = sub_1C0786334();
      v43(v42);
      sub_1C07B3ED8();
    }
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v18 = sub_1C077585C();
    v19 = sub_1C078D340(v18, (uint64_t)qword_1ED762AF8);
    sub_1C106F538();
    v20 = sub_1C0784E0C();
    v21 = sub_1C077AF00(v20);
    v22 = *(void **)(v2 + 48);
    if (v21)
    {
      sub_1C0775854();
      sub_1C0775854();
      sub_1C0793648(5.7779e-34);
      sub_1C079FC50();
      sub_1C0775878();

      sub_1C0790D34(&dword_1C0771000, v23, v24, "Unable to parse eventBody from %@");
      sub_1C07ACF80(&qword_1ED7614A0);
      sub_1C0794C38();
      sub_1C0776778();
    }

    sub_1C079195C();
  }
  sub_1C079963C();
  sub_1C07767BC();
  return sub_1C07785F4(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_1C07E4188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[15] = a2;
  v3[16] = a3;
  v3[14] = a1;
  v3[17] = type metadata accessor for NowPlayingEvent(0);
  v3[18] = swift_task_alloc();
  v4 = sub_1C106ADE0();
  v3[19] = v4;
  v3[20] = *(_QWORD *)(v4 - 8);
  v3[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C07E4210()
{
  void *v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  os_log_type_t v22;
  BOOL v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  os_log_type_t v29;
  _DWORD *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t);

  sub_1C07796A0();
  v3 = objc_msgSend(*(id *)(v1 + 120), sel_eventBody);
  if (v3)
  {
    v4 = *(void **)(v1 + 168);
    v5 = v3;
    sub_1C077CF14((uint64_t)v5, sel_timestamp);
    sub_1C07AD55C();
    objc_opt_self();
    v6 = sub_1C07B70C4();
    if (v6)
    {
      v7 = (void *)v6;
      v8 = *(_QWORD *)(v1 + 160);
      v9 = *(_QWORD *)(v1 + 168);
      v10 = *(_QWORD *)(v1 + 144);
      v11 = *(_QWORD *)(v1 + 152);
      v12 = *(_QWORD *)(v1 + 136);
      sub_1C0789298(v10);
      sub_1C0789298(v10 + *(int *)(v12 + 20));
      sub_1C07ACF80(&qword_1EF62FCA0);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C1079220;
      *(_DWORD *)(inited + 32) = objc_msgSend(v7, sel_playbackState);
      sub_1C07ACF80(&qword_1EF62FCA8);
      v14 = swift_initStackObject();
      *(_OWORD *)(v14 + 16) = xmmword_1C1079220;
      *(_DWORD *)(v14 + 32) = objc_msgSend(v7, sel_itemMediaSubtype);
      v15 = sub_1C0C4462C(inited, v14);
      v17 = v16;

      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v9, v11);
      v18 = (uint64_t *)(v10 + *(int *)(v12 + 24));
      *v18 = v15;
      v18[1] = v17;
      sub_1C07E6F58(v10, v19, type metadata accessor for NowPlayingEvent);
      sub_1C0783000();
    }
    else
    {
      if (qword_1ED762B18 != -1)
        swift_once();
      v27 = sub_1C077585C();
      v28 = sub_1C079BCB8(v27, (uint64_t)qword_1ED762AF8);
      sub_1C079ED48();
      v29 = sub_1C077A2D0();
      if (sub_1C0790D48(v29))
      {
        v30 = (_DWORD *)sub_1C0775854();
        sub_1C0775854();
        sub_1C078A2D0();
        *v30 = 136315138;
        sub_1C07AA634();
        v31 = sub_1C07796BC();
        *(_QWORD *)(v1 + 104) = sub_1C079F2B0(v31, v32, v33, v34, v35, v36);
        sub_1C10705AC();
        sub_1C0775834();

        sub_1C07A50A4(&dword_1C0771000, v37, v38, "Could not create a BMMediaNowPlaying event from the provided event - %s");
        sub_1C0797B2C();
        sub_1C0776778();
      }

      v41 = sub_1C0786334();
      v42(v41);
      sub_1C07B2D8C(*(_QWORD *)(v1 + 112), 1, 1, *(_QWORD *)(v1 + 136));

    }
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v20 = sub_1C077585C();
    v21 = sub_1C078D340(v20, (uint64_t)qword_1ED762AF8);
    sub_1C106F538();
    v22 = sub_1C0784E0C();
    v23 = sub_1C077AF00(v22);
    v24 = *(void **)(v1 + 128);
    if (v23)
    {
      sub_1C0775854();
      sub_1C0775854();
      sub_1C0793648(5.7779e-34);
      sub_1C079FC50();
      sub_1C0775878();

      sub_1C0790D34(&dword_1C0771000, v25, v26, "Unable to parse eventBody from %@");
      sub_1C07ACF80(&qword_1ED7614A0);
      sub_1C0794C38();
      sub_1C0776778();
    }

    sub_1C077A2C4(*(_QWORD *)(v1 + 112), v39, v40, *(_QWORD *)(v1 + 136));
  }
  swift_task_dealloc();
  sub_1C07767BC();
  return sub_1C07785F4(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1C07E45A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[5] = a2;
  v3[6] = a3;
  v3[4] = a1;
  v3[7] = type metadata accessor for PoiCategoryEvent();
  v3[8] = swift_task_alloc();
  v4 = sub_1C106ADE0();
  v3[9] = v4;
  v3[10] = *(_QWORD *)(v4 - 8);
  v3[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C07E4630()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  NSObject *v12;
  unint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  id v17;
  os_log_type_t v18;
  BOOL v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  os_log_type_t v25;
  char v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t);

  sub_1C07796A0();
  v4 = objc_msgSend((id)sub_1C07B5E9C(), sel_eventBody);
  if (v4)
  {
    v5 = sub_1C07A9D20(v4);
    sub_1C077CF14((uint64_t)v5, sel_timestamp);
    sub_1C07AD55C();
    objc_opt_self();
    v6 = sub_1C07B70C4();
    if (v6)
    {
      v7 = (void *)v6;
      v8 = *(_QWORD *)(v2 + 64);
      v9 = *(_QWORD *)(v2 + 56);
      sub_1C077C0A4(v8);
      v10 = sub_1C077C0A4(v8 + *(int *)(v9 + 20));
      v11 = sub_1C0780FE4(v10, sel_rank);
      v12 = sub_1C0877034(v7);
      v14 = v11;
      if (v13)
        v15 = sub_1C0CD6870(v12, v13);
      else
        v15 = 61;
      v37 = *(_QWORD *)(v2 + 80);
      v36 = *(_QWORD *)(v2 + 88);
      v39 = *(_QWORD *)(v2 + 64);
      v38 = *(_QWORD *)(v2 + 72);
      v40 = *(_QWORD *)(v2 + 56);

      v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 8))(v36, v38);
      v42 = v39 + *(int *)(v40 + 24);
      *(_QWORD *)v42 = v14;
      *(_BYTE *)(v42 + 8) = v15;
      sub_1C0778618(v41, v43, (uint64_t (*)(_QWORD))type metadata accessor for PoiCategoryEvent);
      sub_1C0790668();
    }
    else
    {
      if (qword_1ED762B18 != -1)
        swift_once();
      v23 = sub_1C077585C();
      v24 = sub_1C079BCB8(v23, (uint64_t)qword_1ED762AF8);
      sub_1C079ED48();
      v25 = sub_1C077A2D0();
      sub_1C0790D48(v25);
      sub_1C07B61AC();
      if ((v26 & 1) != 0)
      {
        sub_1C0775854();
        sub_1C0775854();
        sub_1C078A2D0();
        sub_1C07BC574(4.8149e-34);
        v27 = sub_1C07796BC();
        v33 = sub_1C079F2B0(v27, v28, v29, v30, v31, v32);
        sub_1C0790D1C(v33);
        sub_1C0775834();

        sub_1C07A50A4(&dword_1C0771000, v34, v35, "Could not convert event of type %s to BMLocationPointOfInterestCategory");
        sub_1C0797B2C();
        sub_1C0776778();
      }

      v44 = sub_1C0786334();
      v45(v44);
      sub_1C07B3ED8();
    }
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v16 = sub_1C077585C();
    v17 = sub_1C078D340(v16, (uint64_t)qword_1ED762AF8);
    sub_1C106F538();
    v18 = sub_1C0784E0C();
    v19 = sub_1C077AF00(v18);
    v20 = *(void **)(v2 + 48);
    if (v19)
    {
      sub_1C0775854();
      sub_1C0775854();
      sub_1C0793648(5.7779e-34);
      sub_1C079FC50();
      sub_1C0775878();

      sub_1C0790D34(&dword_1C0771000, v21, v22, "Unable to parse eventBody from %@");
      sub_1C07ACF80(&qword_1ED7614A0);
      sub_1C0794C38();
      sub_1C0776778();
    }

    sub_1C079195C();
  }
  sub_1C079963C();
  sub_1C07767BC();
  return sub_1C07785F4(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_1C07E4914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[5] = a2;
  v3[6] = a3;
  v3[4] = a1;
  v3[7] = type metadata accessor for HomeKitEvent();
  v3[8] = swift_task_alloc();
  v4 = sub_1C106ADE0();
  v3[9] = v4;
  v3[10] = *(_QWORD *)(v4 - 8);
  v3[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C07E499C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  os_log_type_t v17;
  BOOL v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  os_log_type_t v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  void (*v40)(uint64_t);

  sub_1C07796A0();
  v4 = objc_msgSend((id)sub_1C07B5E9C(), sel_eventBody);
  if (v4)
  {
    v5 = sub_1C07A9D20(v4);
    sub_1C077CF14((uint64_t)v5, sel_timestamp);
    sub_1C07AD55C();
    objc_opt_self();
    v6 = sub_1C07B70C4();
    if (v6)
    {
      v7 = (void *)v6;
      v8 = *(_QWORD *)(v2 + 64);
      v9 = *(_QWORD *)(v2 + 56);
      sub_1C077C0A4(v8);
      sub_1C077C0A4(v8 + *(int *)(v9 + 20));
      v10 = objc_msgSend(v7, sel_accessoryUniqueIdentifier);
      if (v10)
      {
        v11 = v10;
        v12 = sub_1C106FB14();
        v14 = v13;

      }
      else
      {

        v12 = 0;
        v14 = 0;
      }
      v35 = *(_QWORD *)(v2 + 64);
      v36 = *(_QWORD *)(v2 + 56);
      v37 = *(_QWORD *)(v2 + 32);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 + 80) + 8))(*(_QWORD *)(v2 + 88), *(_QWORD *)(v2 + 72));
      v38 = (uint64_t *)(v35 + *(int *)(v36 + 24));
      *v38 = v12;
      v38[1] = v14;
      sub_1C07E563C(v35, v37, (uint64_t (*)(_QWORD))type metadata accessor for HomeKitEvent);
      sub_1C077CF40(v37, 0);

    }
    else
    {
      if (qword_1ED762B18 != -1)
        swift_once();
      v22 = sub_1C077585C();
      v23 = sub_1C079BCB8(v22, (uint64_t)qword_1ED762AF8);
      sub_1C079ED48();
      v24 = sub_1C077A2D0();
      sub_1C0790D48(v24);
      sub_1C07B61AC();
      if ((v25 & 1) != 0)
      {
        sub_1C0775854();
        sub_1C0775854();
        sub_1C078A2D0();
        sub_1C07BC574(4.8149e-34);
        v26 = sub_1C07796BC();
        v32 = sub_1C079F2B0(v26, v27, v28, v29, v30, v31);
        sub_1C0790D1C(v32);
        sub_1C0775834();

        sub_1C07A50A4(&dword_1C0771000, v33, v34, "Could not convert event of type %s to BMHomeKitClientAccessoryControl");
        sub_1C0797B2C();
        sub_1C0776778();
      }

      v39 = sub_1C0786334();
      v40(v39);
      sub_1C07B3ED8();
    }
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v15 = sub_1C077585C();
    v16 = sub_1C078D340(v15, (uint64_t)qword_1ED762AF8);
    sub_1C106F538();
    v17 = sub_1C0784E0C();
    v18 = sub_1C077AF00(v17);
    v19 = *(void **)(v2 + 48);
    if (v18)
    {
      sub_1C0775854();
      sub_1C0775854();
      sub_1C0793648(5.7779e-34);
      sub_1C079FC50();
      sub_1C0775878();

      sub_1C0790D34(&dword_1C0771000, v20, v21, "Unable to parse eventBody from %@");
      sub_1C07ACF80(&qword_1ED7614A0);
      sub_1C0794C38();
      sub_1C0776778();
    }

    sub_1C079195C();
  }
  sub_1C079963C();
  sub_1C07767BC();
  return sub_1C07785F4(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_1C07E4C98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[5] = a2;
  v3[6] = a3;
  v3[4] = a1;
  v3[7] = type metadata accessor for EnergyModeEvent();
  v3[8] = swift_task_alloc();
  v4 = sub_1C106ADE0();
  v3[9] = v4;
  v3[10] = *(_QWORD *)(v4 - 8);
  v3[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C07E4D20()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  unsigned int v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  os_log_type_t v15;
  BOOL v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  os_log_type_t v22;
  char v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t);

  sub_1C07796A0();
  v6 = objc_msgSend((id)sub_1C07B5E9C(), sel_eventBody);
  if (v6)
  {
    v7 = sub_1C07A9D20(v6);
    sub_1C077CF14((uint64_t)v7, sel_timestamp);
    sub_1C07AD55C();
    objc_opt_self();
    if (sub_1C07B70C4())
    {
      sub_1C07B8874();
      v8 = sub_1C077AF10(v3 + *(int *)(v4 + 20));
      v9 = sub_1C0780FE4(v8, sel_mode);
      v10 = sub_1C0920140(v9);

      v11 = sub_1C07AFFC8();
      *(_BYTE *)(v3 + *(int *)(v4 + 24)) = v10;
      sub_1C0778618(v11, v12, (uint64_t (*)(_QWORD))type metadata accessor for EnergyModeEvent);
      sub_1C0790668();
    }
    else
    {
      if (qword_1ED762B18 != -1)
        swift_once();
      v20 = sub_1C077585C();
      v21 = sub_1C079BCB8(v20, (uint64_t)qword_1ED762AF8);
      sub_1C079ED48();
      v22 = sub_1C077A2D0();
      sub_1C0790D48(v22);
      sub_1C07B61AC();
      if ((v23 & 1) != 0)
      {
        sub_1C0775854();
        sub_1C0775854();
        sub_1C078A2D0();
        sub_1C07BC574(4.8149e-34);
        v24 = sub_1C07796BC();
        v30 = sub_1C079F2B0(v24, v25, v26, v27, v28, v29);
        sub_1C0790D1C(v30);
        sub_1C0775834();

        sub_1C07A50A4(&dword_1C0771000, v31, v32, "Could not convert event of type %s to BMEnergyMode");
        sub_1C0797B2C();
        sub_1C0776778();
      }

      v33 = sub_1C0786334();
      v34(v33);
      sub_1C07B3ED8();
    }
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v13 = sub_1C077585C();
    v14 = sub_1C078D340(v13, (uint64_t)qword_1ED762AF8);
    sub_1C106F538();
    v15 = sub_1C0784E0C();
    v16 = sub_1C077AF00(v15);
    v17 = *(void **)(v2 + 48);
    if (v16)
    {
      sub_1C0775854();
      sub_1C0775854();
      sub_1C0793648(5.7779e-34);
      sub_1C079FC50();
      sub_1C0775878();

      sub_1C0790D34(&dword_1C0771000, v18, v19, "Unable to parse eventBody from %@");
      sub_1C07ACF80(&qword_1ED7614A0);
      sub_1C0794C38();
      sub_1C0776778();
    }

    sub_1C079195C();
  }
  sub_1C079963C();
  sub_1C07767BC();
  return sub_1C07785F4(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_1C07E4FAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  sub_1C106ADE0();
  v3[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C07E5008()
{
  NSObject *v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  os_log_type_t v10;
  BOOL v11;
  void *v12;
  uint8_t *v13;
  _QWORD *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = objc_msgSend(*(id *)(v1 + 32), sel_eventBody);
  if (v2)
  {
    v3 = *(void **)(v1 + 32);
    v4 = v2;
    objc_msgSend(v3, sel_timestamp);
    sub_1C106AC54();
    v5 = (void *)sub_1C078046C();
    sub_1C0BFED0C(v5, v6, v7);

  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v8 = sub_1C077585C();
    v9 = sub_1C078D340(v8, (uint64_t)qword_1ED762AF8);
    sub_1C106F538();
    v10 = sub_1C0784E0C();
    v11 = os_log_type_enabled(v0, v10);
    v12 = *(void **)(v1 + 40);
    if (v11)
    {
      v13 = (uint8_t *)sub_1C0775854();
      v14 = (_QWORD *)sub_1C0775854();
      *(_DWORD *)v13 = 138412290;
      *(_QWORD *)(v1 + 16) = v12;
      v15 = v12;
      sub_1C10705AC();
      *v14 = v12;

      _os_log_impl(&dword_1C0771000, v0, v10, "Unable to parse eventBody from %@", v13, 0xCu);
      sub_1C07ACF80(&qword_1ED7614A0);
      sub_1C0778610();
      sub_1C0776778();
    }

    v16 = *(_QWORD *)(v1 + 24);
    v17 = type metadata accessor for LocationMetadataEvent();
    sub_1C077A2C4(v16, v18, v19, v17);
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1C07E51EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[5] = a2;
  v3[6] = a3;
  v3[4] = a1;
  v3[7] = type metadata accessor for DeviceBacklightEvent();
  v3[8] = swift_task_alloc();
  v4 = sub_1C106ADE0();
  v3[9] = v4;
  v3[10] = *(_QWORD *)(v4 - 8);
  v3[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C07E5274()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  os_log_type_t v13;
  BOOL v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  os_log_type_t v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t);

  sub_1C07796A0();
  v6 = objc_msgSend((id)sub_1C07B5E9C(), sel_eventBody);
  if (v6)
  {
    v7 = sub_1C07A9D20(v6);
    sub_1C077CF14((uint64_t)v7, sel_timestamp);
    sub_1C07AD55C();
    objc_opt_self();
    if (sub_1C07B70C4())
    {
      sub_1C07B8874();
      sub_1C077AF10(v3 + *(int *)(v4 + 20));
      v8 = objc_msgSend(v1, sel_backlightLevel);

      v9 = sub_1C07AFFC8();
      *(_BYTE *)(v3 + *(int *)(v4 + 24)) = v8 != 0;
      sub_1C0778618(v9, v10, (uint64_t (*)(_QWORD))type metadata accessor for DeviceBacklightEvent);
      sub_1C0790668();
    }
    else
    {
      if (qword_1ED762B18 != -1)
        swift_once();
      v18 = sub_1C077585C();
      v19 = sub_1C079BCB8(v18, (uint64_t)qword_1ED762AF8);
      sub_1C079ED48();
      v20 = sub_1C077A2D0();
      sub_1C0790D48(v20);
      sub_1C07B61AC();
      if ((v21 & 1) != 0)
      {
        sub_1C0775854();
        sub_1C0775854();
        sub_1C078A2D0();
        sub_1C07BC574(4.8149e-34);
        v22 = sub_1C07796BC();
        v28 = sub_1C079F2B0(v22, v23, v24, v25, v26, v27);
        sub_1C0790D1C(v28);
        sub_1C0775834();

        sub_1C07A50A4(&dword_1C0771000, v29, v30, "Could not convert event of type %s to BMDeviceBacklight");
        sub_1C0797B2C();
        sub_1C0776778();
      }

      v31 = sub_1C0786334();
      v32(v31);
      sub_1C07B3ED8();
    }
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v11 = sub_1C077585C();
    v12 = sub_1C078D340(v11, (uint64_t)qword_1ED762AF8);
    sub_1C106F538();
    v13 = sub_1C0784E0C();
    v14 = sub_1C077AF00(v13);
    v15 = *(void **)(v2 + 48);
    if (v14)
    {
      sub_1C0775854();
      sub_1C0775854();
      sub_1C0793648(5.7779e-34);
      sub_1C079FC50();
      sub_1C0775878();

      sub_1C0790D34(&dword_1C0771000, v16, v17, "Unable to parse eventBody from %@");
      sub_1C07ACF80(&qword_1ED7614A0);
      sub_1C0794C38();
      sub_1C0776778();
    }

    sub_1C079195C();
  }
  sub_1C079963C();
  sub_1C07767BC();
  return sub_1C07785F4(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_1C07E5508(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *a2;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1C07E6F18;
  return sub_1C07E3710(a1, v6, a3);
}

uint64_t sub_1C07E5570(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *a2;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1C07E6F18;
  return sub_1C07E3A24(a1, v6, a3);
}

uint64_t sub_1C07E55D8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1C07E55FC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1C079432C();
  v0 = sub_1C078DEB8();
  v1 = (_QWORD *)sub_1C0794C48(v0);
  v2 = sub_1C0798464(v1);
  return sub_1C078C734(v2, v3, v4, v5);
}

void sub_1C07E563C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = sub_1C0779690(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v3, v4, v5);
  sub_1C0778534();
}

uint64_t sub_1C07E5670(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *a2;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1C07E6F18;
  return sub_1C07E3DF4(a1, v6, a3);
}

uint64_t sub_1C07E56D8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *a2;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1C07E6F18;
  return sub_1C07E4188(a1, v6, a3);
}

uint64_t sub_1C07E5740(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *a2;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1C07E6F18;
  return sub_1C07E45A8(a1, v6, a3);
}

uint64_t sub_1C07E57A8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *a2;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1C07E6F18;
  return sub_1C07E4914(a1, v6, a3);
}

uint64_t sub_1C07E5810(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *a2;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1C07E6F18;
  return sub_1C07E4C98(a1, v6, a3);
}

uint64_t sub_1C07E5878(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *a2;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1C07E6F18;
  return sub_1C07E4FAC(a1, v6, a3);
}

uint64_t sub_1C07E58E0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1C079432C();
  v0 = sub_1C078DEB8();
  v1 = (_QWORD *)sub_1C0794C48(v0);
  v2 = sub_1C0798464(v1);
  return sub_1C078C734(v2, v3, v4, v5);
}

uint64_t sub_1C07E5920()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1C079432C();
  v0 = sub_1C078DEB8();
  v1 = (_QWORD *)sub_1C0794C48(v0);
  v2 = sub_1C0798464(v1);
  return sub_1C078C734(v2, v3, v4, v5);
}

uint64_t sub_1C07E5960()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1C079432C();
  v0 = sub_1C078DEB8();
  v1 = (_QWORD *)sub_1C0794C48(v0);
  v2 = sub_1C0798464(v1);
  return sub_1C078C734(v2, v3, v4, v5);
}

uint64_t *sub_1C07E59A0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1C106ADE0();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    v9 = *(int *)(a3 + 24);
    v10 = (_OWORD *)((char *)a1 + v9);
    v11 = (_OWORD *)((char *)a2 + v9);
    *v10 = *v11;
    *(_OWORD *)((char *)v10 + 9) = *(_OWORD *)((char *)v11 + 9);
  }
  return a1;
}

uint64_t sub_1C07E5A58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;

  v6 = sub_1C106ADE0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = (_OWORD *)(a1 + v8);
  v10 = (_OWORD *)(a2 + v8);
  *v9 = *v10;
  *(_OWORD *)((char *)v9 + 9) = *(_OWORD *)((char *)v10 + 9);
  return a1;
}

uint64_t sub_1C07E5AE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1C106ADE0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  *(_BYTE *)(v9 + 24) = *(_BYTE *)(v10 + 24);
  return a1;
}

uint64_t sub_1C07E5B80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;

  v6 = sub_1C106ADE0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = (_OWORD *)(a1 + v8);
  v10 = (_OWORD *)(a2 + v8);
  *v9 = *v10;
  *(_OWORD *)((char *)v9 + 9) = *(_OWORD *)((char *)v10 + 9);
  return a1;
}

uint64_t sub_1C07E5C0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1C106ADE0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  *(_BYTE *)(v9 + 24) = *(_BYTE *)(v10 + 24);
  return a1;
}

uint64_t sub_1C07E5CA0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1C07E5CAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C077AE98();
  if (*(_DWORD *)(*(_QWORD *)(v4 - 8) + 84) == (_DWORD)a2)
    sub_1C0776754(a1, a2, v4);
  else
    sub_1C077671C();
}

uint64_t sub_1C07E5D10()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1C07E5D1C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = sub_1C077AE98();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    sub_1C077F00C(a1, a2, a2, v8);
  }
  else
  {
    *(_BYTE *)(a1 + *(int *)(a4 + 24) + 24) = a2 + 7;
    sub_1C077671C();
  }
}

uint64_t sub_1C07E5D80()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C106ADE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_1C07E5DF4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = a2[6];
    v4[5] = a2[5];
    v4[6] = v8;
    v9 = *(int *)(a3 + 28);
    v10 = (char *)v4 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_1C106ADE0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    if (sub_1C07B2D80((uint64_t)v11, 1, v12))
    {
      v13 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
      sub_1C07B2D8C((uint64_t)v10, 0, 1, v12);
    }
    v15 = *(int *)(a3 + 32);
    v16 = (char *)v4 + v15;
    v17 = (char *)a2 + v15;
    v18 = type metadata accessor for AmbientLightEvent(0);
    if (sub_1C07B2D80((uint64_t)v17, 1, v18))
    {
      v19 = sub_1C07ACF80(&qword_1ED747DE0);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
      v20(v16, v17, v12);
      v20(&v16[*(int *)(v18 + 20)], &v17[*(int *)(v18 + 20)], v12);
      v21 = *(int *)(v18 + 24);
      v22 = &v16[v21];
      v23 = &v17[v21];
      *(_OWORD *)v22 = *(_OWORD *)v23;
      *(_OWORD *)(v22 + 9) = *(_OWORD *)(v23 + 9);
      sub_1C07B2D8C((uint64_t)v16, 0, 1, v18);
    }
  }
  return v4;
}

uint64_t sub_1C07E5FB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  void (*v9)(uint64_t, uint64_t);

  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(a1);
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_1C106ADE0();
  if (!sub_1C07B2D80(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 32);
  v7 = type metadata accessor for AmbientLightEvent(0);
  result = sub_1C07B2D80(v6, 1, v7);
  if (!(_DWORD)result)
  {
    v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
    v9(v6, v5);
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v6 + *(int *)(v7 + 20), v5);
  }
  return result;
}

uint64_t sub_1C07E6098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  v8 = *(int *)(a3 + 28);
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = sub_1C106ADE0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  if (sub_1C07B2D80((uint64_t)v10, 1, v11))
  {
    v12 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    sub_1C07B2D8C((uint64_t)v9, 0, 1, v11);
  }
  v13 = *(int *)(a3 + 32);
  v14 = (char *)(a1 + v13);
  v15 = (char *)(a2 + v13);
  v16 = type metadata accessor for AmbientLightEvent(0);
  if (sub_1C07B2D80((uint64_t)v15, 1, v16))
  {
    v17 = sub_1C07ACF80(&qword_1ED747DE0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v18(v14, v15, v11);
    v18(&v14[*(int *)(v16 + 20)], &v15[*(int *)(v16 + 20)], v11);
    v19 = *(int *)(v16 + 24);
    v20 = &v14[v19];
    v21 = &v15[v19];
    *(_OWORD *)v20 = *(_OWORD *)v21;
    *(_OWORD *)(v20 + 9) = *(_OWORD *)(v21 + 9);
    sub_1C07B2D8C((uint64_t)v14, 0, 1, v16);
  }
  return a1;
}

uint64_t *sub_1C07E6228(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int v18;
  int v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  __int128 v24;
  uint64_t v25;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  char *v29;
  char *v30;

  sub_1C07E6484(a1, a2);
  a1[5] = a2[5];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C106ADE0();
  v10 = sub_1C07B2D80((uint64_t)v7, 1, v9);
  v11 = sub_1C07B2D80((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
      sub_1C07B2D8C((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v12 = *(_QWORD *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    v13 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  v14 = *(int *)(a3 + 32);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = type metadata accessor for AmbientLightEvent(0);
  v18 = sub_1C07B2D80((uint64_t)v15, 1, v17);
  v19 = sub_1C07B2D80((uint64_t)v16, 1, v17);
  if (!v18)
  {
    if (!v19)
    {
      v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
      v27(v15, v16, v9);
      v27(&v15[*(int *)(v17 + 20)], &v16[*(int *)(v17 + 20)], v9);
      v28 = *(int *)(v17 + 24);
      v29 = &v15[v28];
      v30 = &v16[v28];
      *(_QWORD *)v29 = *(_QWORD *)v30;
      *((_QWORD *)v29 + 1) = *((_QWORD *)v30 + 1);
      *((_QWORD *)v29 + 2) = *((_QWORD *)v30 + 2);
      v29[24] = v30[24];
      return a1;
    }
    sub_1C07B1F90((uint64_t)v15, type metadata accessor for AmbientLightEvent);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    v25 = sub_1C07ACF80(&qword_1ED747DE0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    return a1;
  }
  v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v20(v15, v16, v9);
  v20(&v15[*(int *)(v17 + 20)], &v16[*(int *)(v17 + 20)], v9);
  v21 = *(int *)(v17 + 24);
  v22 = &v15[v21];
  v23 = &v16[v21];
  v24 = *(_OWORD *)(v23 + 9);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *(_OWORD *)(v22 + 9) = v24;
  sub_1C07B2D8C((uint64_t)v15, 0, 1, v17);
  return a1;
}

uint64_t *sub_1C07E6484(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

uint64_t sub_1C07E65EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v7 = *(int *)(a3 + 28);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1C106ADE0();
  if (sub_1C07B2D80((uint64_t)v9, 1, v10))
  {
    v11 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    sub_1C07B2D8C((uint64_t)v8, 0, 1, v10);
  }
  v12 = *(int *)(a3 + 32);
  v13 = (char *)(a1 + v12);
  v14 = (char *)(a2 + v12);
  v15 = type metadata accessor for AmbientLightEvent(0);
  if (sub_1C07B2D80((uint64_t)v14, 1, v15))
  {
    v16 = sub_1C07ACF80(&qword_1ED747DE0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
    v17(v13, v14, v10);
    v17(&v13[*(int *)(v15 + 20)], &v14[*(int *)(v15 + 20)], v10);
    v18 = *(int *)(v15 + 24);
    v19 = &v13[v18];
    v20 = &v14[v18];
    *(_OWORD *)v19 = *(_OWORD *)v20;
    *(_OWORD *)(v19 + 9) = *(_OWORD *)(v20 + 9);
    sub_1C07B2D8C((uint64_t)v13, 0, 1, v15);
  }
  return a1;
}

uint64_t sub_1C07E6764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  int v20;
  int v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  char *v30;
  char *v31;

  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v8 = *(int *)(a3 + 28);
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = sub_1C106ADE0();
  v12 = sub_1C07B2D80((uint64_t)v9, 1, v11);
  v13 = sub_1C07B2D80((uint64_t)v10, 1, v11);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      sub_1C07B2D8C((uint64_t)v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v14 = *(_QWORD *)(v11 - 8);
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v14 + 8))(v9, v11);
LABEL_6:
    v15 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v14 + 40))(v9, v10, v11);
LABEL_7:
  v16 = *(int *)(a3 + 32);
  v17 = (char *)(a1 + v16);
  v18 = (char *)(a2 + v16);
  v19 = type metadata accessor for AmbientLightEvent(0);
  v20 = sub_1C07B2D80((uint64_t)v17, 1, v19);
  v21 = sub_1C07B2D80((uint64_t)v18, 1, v19);
  if (!v20)
  {
    if (!v21)
    {
      v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40);
      v28(v17, v18, v11);
      v28(&v17[*(int *)(v19 + 20)], &v18[*(int *)(v19 + 20)], v11);
      v29 = *(int *)(v19 + 24);
      v30 = &v17[v29];
      v31 = &v18[v29];
      *(_OWORD *)v30 = *(_OWORD *)v31;
      *((_QWORD *)v30 + 2) = *((_QWORD *)v31 + 2);
      v30[24] = v31[24];
      return a1;
    }
    sub_1C07B1F90((uint64_t)v17, type metadata accessor for AmbientLightEvent);
    goto LABEL_12;
  }
  if (v21)
  {
LABEL_12:
    v26 = sub_1C07ACF80(&qword_1ED747DE0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    return a1;
  }
  v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
  v22(v17, v18, v11);
  v22(&v17[*(int *)(v19 + 20)], &v18[*(int *)(v19 + 20)], v11);
  v23 = *(int *)(v19 + 24);
  v24 = &v17[v23];
  v25 = &v18[v23];
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *(_OWORD *)(v24 + 9) = *(_OWORD *)(v25 + 9);
  sub_1C07B2D8C((uint64_t)v17, 0, 1, v19);
  return a1;
}

uint64_t sub_1C07E69B8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1C07E69C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_1C077671C();
  }
  else
  {
    v6 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
    if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    {
      v7 = v6;
      v8 = *(int *)(a3 + 28);
    }
    else
    {
      v7 = sub_1C07ACF80(&qword_1ED747DE0);
      v8 = *(int *)(a3 + 32);
    }
    sub_1C0776754(a1 + v8, a2, v7);
  }
}

uint64_t sub_1C07E6A54()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1C07E6A60(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(a1 + 24) = (a2 - 1);
    sub_1C077671C();
  }
  else
  {
    v8 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = *(int *)(a4 + 28);
    }
    else
    {
      v9 = sub_1C07ACF80(&qword_1ED747DE0);
      v10 = *(int *)(a4 + 32);
    }
    sub_1C077F00C(a1 + v10, a2, a2, v9);
  }
}

void sub_1C07E6AEC()
{
  unint64_t v0;
  unint64_t v1;

  sub_1C07E6BB8(319, (unint64_t *)&qword_1ED75E4E0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  if (v0 <= 0x3F)
  {
    sub_1C07E6BB8(319, &qword_1ED747DE8, (void (*)(uint64_t))type metadata accessor for AmbientLightEvent);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_1C07E6BB8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1C1070564();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1C07E6C04()
{
  sub_1C07E6EDC(&qword_1ED748000, &qword_1ED748008, (uint64_t)&unk_1C10B5B14);
}

uint64_t sub_1C07E6C30()
{
  return MEMORY[0x1E0DEDD18];
}

unint64_t sub_1C07E6C40()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF62FCD8;
  if (!qword_1EF62FCD8)
  {
    v1 = type metadata accessor for AmbientLightSmoothedSequence(255);
    result = MEMORY[0x1C3BA8174](&unk_1C1079648, v1);
    atomic_store(result, (unint64_t *)&qword_1EF62FCD8);
  }
  return result;
}

void sub_1C07E6C80(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = sub_1C0779690(a1, a2, a3);
  sub_1C077AF24(v3);
  sub_1C0778534();
}

uint64_t getEnumTagSinglePayload for AmbientLightContent(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xF9 && *(_BYTE *)(a1 + 25))
    {
      v2 = *(_DWORD *)a1 + 248;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 24);
      v4 = v3 >= 8;
      v2 = v3 - 8;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AmbientLightContent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF8)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 249;
    if (a3 >= 0xF9)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xF9)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = a2 + 7;
  }
  return result;
}

ValueMetadata *type metadata accessor for AmbientLightContent()
{
  return &type metadata for AmbientLightContent;
}

uint64_t sub_1C07E6D34()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1C079432C();
  v0 = sub_1C078DEB8();
  v1 = (_QWORD *)sub_1C0794C48(v0);
  v2 = sub_1C0798464(v1);
  return sub_1C078C734(v2, v3, v4, v5);
}

uint64_t sub_1C07E6D74()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1C079432C();
  v0 = sub_1C078DEB8();
  v1 = (_QWORD *)sub_1C0794C48(v0);
  v2 = sub_1C0798464(v1);
  return sub_1C078C734(v2, v3, v4, v5);
}

uint64_t sub_1C07E6DB4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *a2;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1C07E6F18;
  return sub_1C07E51EC(a1, v6, a3);
}

uint64_t sub_1C07E6E1C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1C079432C();
  v0 = sub_1C078DEB8();
  v1 = (_QWORD *)sub_1C0794C48(v0);
  v2 = sub_1C0798464(v1);
  return sub_1C078C734(v2, v3, v4, v5);
}

uint64_t sub_1C07E6E5C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1C079432C();
  v0 = sub_1C078DEB8();
  v1 = (_QWORD *)sub_1C0794C48(v0);
  v2 = sub_1C0798464(v1);
  return sub_1C078C734(v2, v3, v4, v5);
}

uint64_t sub_1C07E6E9C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1C079432C();
  v0 = sub_1C078DEB8();
  v1 = (_QWORD *)sub_1C0794C48(v0);
  v2 = sub_1C0798464(v1);
  return sub_1C078C734(v2, v3, v4, v5);
}

void sub_1C07E6EDC(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;

  if (!*a1)
  {
    v5 = sub_1C07D4BEC(a2);
    atomic_store(MEMORY[0x1C3BA8174](a3, v5), a1);
  }
  sub_1C0778534();
}

uint64_t sub_1C07E6F3C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 88);
}

void sub_1C07E6F58(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_1C07E563C(a1, v3, a3);
}

double sub_1C07E6F60()
{
  uint64_t v0;
  double v1;
  double result;

  result = v1 + *(double *)(v0 + 32);
  *(double *)(v0 + 32) = result;
  return result;
}

uint64_t sub_1C07E6F74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = v3;
  v27 = a3;
  v6 = type metadata accessor for FeatureProviderSnapshot(0);
  v25 = *(_QWORD *)(v6 - 8);
  v26 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    v28 = MEMORY[0x1E0DEE9D8];
    sub_1C09D3218();
    v10 = v28;
    v11 = sub_1C106ADE0();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v23 = *(_QWORD *)(v12 + 72);
    v24 = v11;
    v22 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    do
    {
      v22(v8, v13, v24);
      v14 = sub_1C07E77DC(v13);
      v15 = v27;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v16 = v15;
      v17 = v4;
      sub_1C07E7D3C(v14, v16);
      swift_bridgeObjectRelease();
      sub_1C089B840();
      v19 = v18;
      swift_release();
      *(_QWORD *)&v8[*(int *)(v26 + 20)] = v19;
      v28 = v10;
      v20 = *(_QWORD *)(v10 + 16);
      if (v20 >= *(_QWORD *)(v10 + 24) >> 1)
      {
        sub_1C09D3218();
        v10 = v28;
      }
      *(_QWORD *)(v10 + 16) = v20 + 1;
      sub_1C07E7EF8((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(_QWORD *)(v25 + 72) * v20);
      v13 += v23;
      --v9;
      v4 = v17;
    }
    while (v9);
    swift_release();
  }
  else
  {
    swift_release();
    v10 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1C07E716C(void *a1)
{
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v10;

  objc_msgSend(a1, sel_ambientLightColorComponent0);
  v3 = v2;
  objc_msgSend(a1, sel_ambientLightColorComponent1);
  v5 = v4;
  objc_msgSend(a1, sel_ambientLightColorComponent2);
  if (v5 < 4.0)
    return 0;
  if (v5 < 100.0 && v6 < v3 && v6 < v5)
    return 1;
  v10 = v3 * 0.8;
  if (v5 < 200.0 && v10 <= v6)
    return 2;
  if (v5 < 1000.0 && v6 < v10)
    return 3;
  if (v5 < 30000.0 && v6 < v10)
    return 4;
  if (v5 >= 10000.0)
    return 6;
  return 5;
}

unint64_t sub_1C07E7270(unint64_t result)
{
  if (result >= 8)
    return 8;
  return result;
}

unint64_t sub_1C07E7280@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1C07E7270(*a1);
  *a2 = result;
  return result;
}

void sub_1C07E72A8()
{
  uint64_t v0;
  id v1;
  id v2;

  v1 = objc_msgSend((id)BiomeLibrary(), sel_ContextualUnderstanding);
  swift_unknownObjectRelease();
  v2 = objc_msgSend(v1, sel_AmbientLight);
  swift_unknownObjectRelease();
  *(_QWORD *)(v0 + 16) = v2;
  sub_1C077671C();
}

void sub_1C07E7374()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = MEMORY[0x1E0DEE9D8];
  sub_1C09D30E0();
  v0 = v3;
  v1 = *(_QWORD *)(v3 + 16);
  if (v1 >= *(_QWORD *)(v3 + 24) >> 1)
  {
    sub_1C09D30E0();
    v0 = v3;
  }
  *(_QWORD *)(v0 + 16) = v1 + 1;
  v2 = v0 + 16 * v1;
  *(_QWORD *)(v2 + 32) = 0xD000000000000012;
  *(_QWORD *)(v2 + 40) = 0x80000001C10E26C0;
  sub_1C0898D28(v0);
}

uint64_t sub_1C07E7414(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v5;

  v3 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C07E7468(v1, a1, &v5);
  objc_autoreleasePoolPop(v3);
  return v5;
}

uint64_t sub_1C07E7468@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  uint64_t aBlock;
  uint64_t v26;
  uint64_t (*v27)();
  void *v28;
  void (*v29)(void *);
  uint64_t v30;

  v6 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&aBlock - v10;
  v12 = *(void **)(a1 + 16);
  v13 = sub_1C106ADE0();
  sub_1C07B2D8C((uint64_t)v11, 1, 1, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v9, a2, v13);
  sub_1C07B2D8C((uint64_t)v9, 0, 1, v13);
  v14 = objc_allocWithZone(MEMORY[0x1E0D026F0]);
  v15 = sub_1C07DC9F8((uint64_t)v11, (uint64_t)v9, 1, 1, 0);
  v16 = objc_msgSend(v12, sel_publisherWithOptions_, v15);

  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = 0;
  v29 = (void (*)(void *))nullsub_1;
  v30 = 0;
  v18 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v26 = 1107296256;
  v27 = sub_1C07BF90C;
  v28 = &unk_1E7A0B870;
  v19 = _Block_copy(&aBlock);
  v29 = sub_1C07E7D18;
  v30 = v17;
  aBlock = v18;
  v26 = 1107296256;
  v27 = sub_1C07BF90C;
  v28 = &unk_1E7A0B898;
  v20 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v21 = objc_msgSend(v16, sel_sinkWithCompletion_receiveInput_, v19, v20);

  _Block_release(v20);
  _Block_release(v19);

  swift_beginAccess();
  v22 = *(void **)(v17 + 16);
  *a3 = v22;
  v23 = v22;
  return swift_release();
}

void sub_1C07E76C0(void *a1, uint64_t a2)
{
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  NSObject *oslog;

  v3 = objc_msgSend(a1, sel_eventBody);
  if (v3)
  {
    v4 = v3;
    swift_beginAccess();
    v5 = *(void **)(a2 + 16);
    *(_QWORD *)(a2 + 16) = v4;

  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v6 = sub_1C106F544();
    sub_1C079E000(v6, (uint64_t)qword_1ED762AF8);
    oslog = sub_1C106F538();
    v7 = sub_1C10703A8();
    if (os_log_type_enabled(oslog, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_1C0771000, oslog, v7, "Unable to parse eventBody from read event in physical social stream", v8, 2u);
      MEMORY[0x1C3BA8270](v8, -1, -1);
    }

  }
}

uint64_t sub_1C07E77DC(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;

  v1 = sub_1C07E7414(a1);
  if (v1)
  {
    v2 = (void *)v1;
    sub_1C07ACF80(&qword_1ED755050);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1079220;
    *(_QWORD *)(inited + 32) = 0xD000000000000012;
    *(_QWORD *)(inited + 40) = 0x80000001C10E26C0;
    v4 = sub_1C07E716C(v2);
    *(_QWORD *)(inited + 48) = objc_msgSend((id)objc_opt_self(), sel_featureValueWithInt64_, v4);
    sub_1C07D97D4();
    v5 = sub_1C106F97C();

    return v5;
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v7 = sub_1C106F544();
    sub_1C079E000(v7, (uint64_t)qword_1ED762AF8);
    v8 = sub_1C106F538();
    v9 = sub_1C10703A8();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_1C0771000, v8, v9, "AmbientLightEvent is nil", v10, 2u);
      MEMORY[0x1C3BA8270](v10, -1, -1);
    }

    sub_1C07D97D4();
    return sub_1C106F97C();
  }
}

void sub_1C07E7998()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v0 = sub_1C106ADE0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106ADA4();
  sub_1C07E77DC((uint64_t)v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1C077671C();
}

uint64_t sub_1C07E7A14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  swift_retain();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  result = sub_1C07E6F74(a2, v3, a1);
  *a3 = result;
  return result;
}

id sub_1C07E7A68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v14;

  v4 = sub_1C106ADE0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106ADA4();
  v8 = sub_1C07E77DC((uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v9 = sub_1C089A990(a1, a2, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v9)
  {
    sub_1C07E7374();
    sub_1C0A791CC(a1, a2, v10);
    v12 = v11;
    swift_bridgeObjectRelease();
    if ((v12 & 1) != 0)
      return objc_msgSend((id)objc_opt_self(), sel_featureValueWithInt64_, 0);
    else
      return 0;
  }
  return (id)v9;
}

uint64_t sub_1C07E7BEC()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AmbientLightSignal()
{
  return objc_opt_self();
}

void sub_1C07E7C30()
{
  sub_1C07E7998();
}

uint64_t sub_1C07E7C50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C07E7A14(a1, a2, a3);
}

void sub_1C07E7C70()
{
  sub_1C07E7374();
}

uint64_t sub_1C07E7C84()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1C07E7C94(uint64_t a1)
{
  unint64_t result;

  result = sub_1C07E7CB8();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C07E7CB8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF62FDD0;
  if (!qword_1EF62FDD0)
  {
    v1 = type metadata accessor for AmbientLightSignal();
    result = MEMORY[0x1C3BA8174](&unk_1C10797C4, v1);
    atomic_store(result, (unint64_t *)&qword_1EF62FDD0);
  }
  return result;
}

uint64_t sub_1C07E7CF4()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1C07E7D18(void *a1)
{
  uint64_t v1;

  sub_1C07E76C0(a1, v1);
}

uint64_t sub_1C07E7D20(uint64_t result, uint64_t a2, _QWORD *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }
  return result;
}

uint64_t sub_1C07E7D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  unsigned int v6;
  unint64_t v7;
  uint64_t isStackAllocationSafe;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD v14[2];

  v4 = a1;
  v14[1] = *MEMORY[0x1E0C80C00];
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v7 = (unint64_t)((1 << v5) + 63) >> 6;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    v9 = (_QWORD *)((char *)v14 - ((8 * v7 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_1C07E7D20(0, v7, v9);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C07E7F3C((uint64_t)v9, v7, v4, a2);
    if (v2)
      swift_willThrow();
    else
      v4 = v10;
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v11 = (_QWORD *)swift_slowAlloc();
    sub_1C07E7D20(0, v7, v11);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C07E7F3C((uint64_t)v11, v7, v4, a2);
    v4 = v12;
    MEMORY[0x1C3BA8270](v11, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1C07E7EF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeatureProviderSnapshot(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C07E7F3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  char v21;
  uint64_t v24;
  uint64_t v25;

  v6 = 0;
  v25 = a3 + 64;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v12 = v11 | (v6 << 6);
      goto LABEL_20;
    }
    v13 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v13 >= v10)
      goto LABEL_24;
    v14 = *(_QWORD *)(v25 + 8 * v13);
    ++v6;
    if (!v14)
    {
      v6 = v13 + 1;
      if (v13 + 1 >= v10)
        goto LABEL_24;
      v14 = *(_QWORD *)(v25 + 8 * v6);
      if (!v14)
      {
        v6 = v13 + 2;
        if (v13 + 2 >= v10)
          goto LABEL_24;
        v14 = *(_QWORD *)(v25 + 8 * v6);
        if (!v14)
          break;
      }
    }
LABEL_19:
    v9 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v6 << 6);
LABEL_20:
    v16 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * v12);
    v17 = *v16;
    v18 = v16[1];
    v19 = *(void **)(*(_QWORD *)(a3 + 56) + 8 * v12);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v20 = v19;
    sub_1C0A791CC(v17, v18, a4);
    LOBYTE(v17) = v21;
    swift_bridgeObjectRelease();

    if ((v17 & 1) != 0)
    {
      *(_QWORD *)(a1 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v24++, 1))
      {
        __break(1u);
LABEL_24:
        sub_1C07E8128();
        swift_bridgeObjectRelease();
        return;
      }
    }
  }
  v15 = v13 + 3;
  if (v15 >= v10)
    goto LABEL_24;
  v14 = *(_QWORD *)(v25 + 8 * v15);
  if (v14)
  {
    v6 = v15;
    goto LABEL_19;
  }
  while (1)
  {
    v6 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v6 >= v10)
      goto LABEL_24;
    v14 = *(_QWORD *)(v25 + 8 * v6);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
}

void sub_1C07E8128()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  unint64_t v22;
  char v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;

  sub_1C078C1B4();
  if (!v5)
    goto LABEL_37;
  sub_1C07AD9E8();
  if (v6)
  {
    sub_1C077E884();
LABEL_37:
    sub_1C078C198();
    return;
  }
  sub_1C07A1AA4();
  sub_1C07ACF80(&qword_1EF62F948);
  v7 = sub_1C0796044();
  v8 = v7;
  v25 = v2;
  v26 = v1;
  if (v1 < 1)
    v9 = 0;
  else
    v9 = *v2;
  v10 = 0;
  v11 = v7 + 64;
  while (1)
  {
    if (v9)
    {
      sub_1C07A7C48();
      goto LABEL_27;
    }
    v12 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_40;
    if (v12 >= v26)
      goto LABEL_37;
    ++v10;
    if (!v25[v12])
    {
      v10 = v12 + 1;
      if (v12 + 1 >= v26)
        goto LABEL_37;
      if (!v25[v10])
      {
        v10 = v12 + 2;
        if (v12 + 2 >= v26)
          goto LABEL_37;
        if (!v25[v10])
          break;
      }
    }
LABEL_26:
    sub_1C07B3EF8();
LABEL_27:
    sub_1C079B3C4();
    v20 = *(void **)(v19 + 8 * v18);
    sub_1C0790D58();
    sub_1C077C0B8();
    v21 = v20;
    sub_1C078D354();
    sub_1C078C744();
    sub_1C078F0D0();
    if (v6)
    {
      sub_1C0797B50();
      while (1)
      {
        sub_1C0793670();
        if (v6)
        {
          if ((v23 & 1) != 0)
            break;
        }
        sub_1C07BC58C();
        if (!v6)
        {
          sub_1C0791970();
          goto LABEL_35;
        }
      }
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    sub_1C0792CBC();
LABEL_35:
    *(_QWORD *)(v11 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    v24 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v22);
    *v24 = v4;
    v24[1] = v3;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v22) = v21;
    sub_1C07A06CC();
    if (v17)
      goto LABEL_39;
    if (!v0)
      goto LABEL_37;
  }
  sub_1C078AA54();
  if (v16 == v17)
    goto LABEL_37;
  if (*(_QWORD *)(v15 + 8 * v13))
  {
    v10 = v13;
    goto LABEL_26;
  }
  while (1)
  {
    v10 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v10 >= v14)
      goto LABEL_37;
    ++v13;
    if (*(_QWORD *)(v15 + 8 * v10))
      goto LABEL_26;
  }
LABEL_41:
  __break(1u);
}

void sub_1C07E82DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  sub_1C078C1B4();
  if (!v4)
    goto LABEL_37;
  sub_1C07AD9E8();
  if (v5)
  {
    sub_1C077E884();
LABEL_37:
    sub_1C078C198();
    return;
  }
  sub_1C07A1AA4();
  sub_1C07ACF80(&qword_1EF62FDE0);
  sub_1C0796044();
  v20 = v3;
  v21 = v2;
  if (v2 < 1)
    v6 = 0;
  else
    v6 = *v3;
  v7 = 0;
  while (1)
  {
    if (v6)
    {
      sub_1C07A7C48();
      goto LABEL_27;
    }
    v9 = v7 + 1;
    if (__OFADD__(v7, 1))
      goto LABEL_40;
    if (v9 >= v21)
      goto LABEL_37;
    ++v7;
    if (!v20[v9])
    {
      v7 = v9 + 1;
      if (v9 + 1 >= v21)
        goto LABEL_37;
      if (!v20[v7])
      {
        v7 = v9 + 2;
        if (v9 + 2 >= v21)
          goto LABEL_37;
        if (!v20[v7])
          break;
      }
    }
LABEL_26:
    sub_1C07B3EF8();
LABEL_27:
    v15 = *(_QWORD *)(*(_QWORD *)(v0 + 56) + 8 * v8);
    sub_1C0790D58();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C077C0B8();
    sub_1C079D224();
    sub_1C078C744();
    sub_1C078F0D0();
    if (v5)
    {
      sub_1C0797B50();
      while (1)
      {
        sub_1C0793670();
        if (v5)
        {
          if ((v17 & 1) != 0)
            break;
        }
        sub_1C07BC58C();
        if (!v5)
        {
          sub_1C0791970();
          goto LABEL_35;
        }
      }
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    sub_1C0792CBC();
LABEL_35:
    sub_1C07877FC(v16);
    *(_QWORD *)(v19 + 8 * v18) = v15;
    sub_1C07A06CC();
    if (v14)
      goto LABEL_39;
    if (!v1)
      goto LABEL_37;
  }
  sub_1C078AA54();
  if (v13 == v14)
    goto LABEL_37;
  if (*(_QWORD *)(v12 + 8 * v10))
  {
    v7 = v10;
    goto LABEL_26;
  }
  while (1)
  {
    v7 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v7 >= v11)
      goto LABEL_37;
    ++v10;
    if (*(_QWORD *)(v12 + 8 * v7))
      goto LABEL_26;
  }
LABEL_41:
  __break(1u);
}

void sub_1C07E846C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  char v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  unint64_t *v27;
  uint64_t v28;
  uint64_t v29;

  sub_1C078C1B4();
  if (!v4)
    goto LABEL_37;
  sub_1C07AD9E8();
  if (v5)
  {
    sub_1C077E884();
LABEL_37:
    sub_1C078C198();
    return;
  }
  sub_1C07A1AA4();
  sub_1C07ACF80(&qword_1ED761580);
  sub_1C0796044();
  v27 = v3;
  v28 = v2;
  if (v2 < 1)
    v6 = 0;
  else
    v6 = *v3;
  v7 = 0;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v29 = v7;
      v9 = v8 | (v7 << 6);
      goto LABEL_27;
    }
    v10 = v7 + 1;
    if (__OFADD__(v7, 1))
      goto LABEL_40;
    if (v10 >= v28)
      goto LABEL_37;
    v11 = v27[v10];
    v12 = v7 + 1;
    if (!v11)
    {
      v12 = v7 + 2;
      if (v7 + 2 >= v28)
        goto LABEL_37;
      v11 = v27[v12];
      if (!v11)
      {
        v12 = v7 + 3;
        if (v7 + 3 >= v28)
          goto LABEL_37;
        v11 = v27[v12];
        if (!v11)
          break;
      }
    }
LABEL_26:
    v6 = (v11 - 1) & v11;
    v29 = v12;
    v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_27:
    v18 = v0;
    v19 = (uint64_t *)(*(_QWORD *)(v0 + 56) + 16 * v9);
    v20 = *v19;
    v21 = v19[1];
    sub_1C0790D58();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C077C0B8();
    sub_1C079D224();
    sub_1C078C744();
    sub_1C078F0D0();
    if (v5)
    {
      sub_1C0797B50();
      while (1)
      {
        sub_1C0793670();
        if (v5)
        {
          if ((v23 & 1) != 0)
            break;
        }
        sub_1C07BC58C();
        if (!v5)
        {
          sub_1C0791970();
          goto LABEL_35;
        }
      }
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    sub_1C0792CBC();
LABEL_35:
    sub_1C07877FC(v22);
    v26 = (_QWORD *)(v25 + 16 * v24);
    *v26 = v20;
    v26[1] = v21;
    sub_1C07A06CC();
    if (v17)
      goto LABEL_39;
    v0 = v18;
    v7 = v29;
    if (!v1)
      goto LABEL_37;
  }
  sub_1C078AA54();
  if (v16 == v17)
    goto LABEL_37;
  v11 = *(_QWORD *)(v15 + 8 * v13);
  if (v11)
  {
    v12 = v13;
    goto LABEL_26;
  }
  while (1)
  {
    v12 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v12 >= v14)
      goto LABEL_37;
    v11 = *(_QWORD *)(v15 + 8 * v12);
    ++v13;
    if (v11)
      goto LABEL_26;
  }
LABEL_41:
  __break(1u);
}

void sub_1C07E8638(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (!a3)
    return;
  sub_1C07AD9E8();
  if (v5)
  {
    sub_1C077E884();
    return;
  }
  v6 = v4;
  sub_1C07ACF80(&qword_1EF62FAF8);
  sub_1C0796044();
  v21 = v6;
  if (v6 < 1)
    v7 = 0;
  else
    v7 = *a1;
  v8 = 0;
  while (1)
  {
    if (v7)
    {
      sub_1C07A4308();
      goto LABEL_27;
    }
    v9 = v8 + 1;
    if (__OFADD__(v8, 1))
      goto LABEL_40;
    if (v9 >= v21)
      return;
    ++v8;
    if (!a1[v9])
    {
      v8 = v9 + 1;
      if (v9 + 1 >= v21)
        return;
      if (!a1[v8])
      {
        v8 = v9 + 2;
        if (v9 + 2 >= v21)
          return;
        if (!a1[v8])
          break;
      }
    }
LABEL_26:
    sub_1C079E194();
LABEL_27:
    sub_1C079B3C4();
    v16 = *(_QWORD *)(v15 + 8 * v14);
    sub_1C0790D58();
    sub_1C077C0B8();
    sub_1C078D354();
    sub_1C078C744();
    sub_1C0794C54();
    if (v5)
    {
      sub_1C0797B50();
      while (1)
      {
        sub_1C0793670();
        if (v5)
        {
          if ((v18 & 1) != 0)
            break;
        }
        sub_1C07A50B8();
        if (!v5)
        {
          sub_1C0791970();
          goto LABEL_35;
        }
      }
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    sub_1C0792CBC();
LABEL_35:
    sub_1C07A66F4(v17);
    *(_QWORD *)(v20 + 8 * v19) = v16;
    sub_1C07A06CC();
    if (v13)
      goto LABEL_39;
    if (!v3)
      return;
  }
  sub_1C078AA54();
  if (v12 == v13)
    return;
  if (a1[v10])
  {
    v8 = v10;
    goto LABEL_26;
  }
  while (1)
  {
    v8 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v8 >= v11)
      return;
    ++v10;
    if (a1[v8])
      goto LABEL_26;
  }
LABEL_41:
  __break(1u);
}

uint64_t sub_1C07E8804(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  if (!a3)
    return MEMORY[0x1E0DEE9E0];
  sub_1C07AD9E8();
  if (!v5)
  {
    v6 = v4;
    sub_1C07ACF80(&qword_1EF62FDD8);
    v7 = sub_1C0796044();
    v17 = v6;
    if (v6 < 1)
      v8 = 0;
    else
      v8 = *a1;
    if (v8)
    {
      sub_1C07A4308();
      goto LABEL_24;
    }
    if (v17 <= 1)
      return v7;
    if (!a1[1])
    {
      if (v17 <= 2)
        return v7;
      if (a1[2])
        goto LABEL_23;
      if (v17 <= 3)
        return v7;
      if (!a1[3])
      {
        sub_1C078AA54();
        if (v12 == v13)
          return v7;
        if (!a1[v10])
        {
          do
          {
            v14 = v10 + 1;
            if (__OFADD__(v10, 1))
            {
              __break(1u);
              JUMPOUT(0x1C07E8B38);
            }
            if (v14 >= v11)
              return v7;
            ++v10;
          }
          while (!a1[v14]);
        }
      }
    }
LABEL_23:
    sub_1C079E194();
LABEL_24:
    v15 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v9);
    sub_1C1070DF8();
    __asm { BR              X8 }
  }
  sub_1C077E884();
  return v3;
}

void sub_1C07E8B64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27[2];
  __int128 v28[3];

  if (!a3)
    return;
  sub_1C07AD9E8();
  if (v6)
  {
    sub_1C077E884();
    return;
  }
  sub_1C07A1AA4();
  sub_1C07ACF80(&qword_1ED7448B8);
  v7 = sub_1C0796044();
  v8 = v7;
  v26 = v4;
  if (v4 < 1)
    v9 = 0;
  else
    v9 = *v5;
  v10 = 0;
  v11 = v7 + 64;
  while (1)
  {
    if (v9)
    {
      v9 &= v9 - 1;
      goto LABEL_27;
    }
    v12 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_40;
    if (v12 >= v26)
      return;
    v13 = v5[v12];
    ++v10;
    if (!v13)
    {
      v10 = v12 + 1;
      if (v12 + 1 >= v26)
        return;
      v13 = v5[v10];
      if (!v13)
      {
        v10 = v12 + 2;
        if (v12 + 2 >= v26)
          return;
        v13 = v5[v10];
        if (!v13)
          break;
      }
    }
LABEL_26:
    v9 = (v13 - 1) & v13;
LABEL_27:
    sub_1C079B3C4();
    sub_1C07D6D1C(v20 + 40 * v19, (uint64_t)v28);
    sub_1C077DD60(v28, (uint64_t)v27);
    sub_1C0797B64();
    sub_1C077C0B8();
    sub_1C078D354();
    v21 = sub_1C1070E4C() & ~(-1 << *(_BYTE *)(v8 + 32));
    if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) == 0)
    {
      sub_1C0797B50();
      while (1)
      {
        sub_1C0793670();
        if (v6)
        {
          if ((v23 & 1) != 0)
            break;
        }
        sub_1C07A50B8();
        if (!v6)
        {
          sub_1C0791970();
          goto LABEL_35;
        }
      }
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    sub_1C0792CBC();
LABEL_35:
    sub_1C07A66F4(v22);
    sub_1C077DD60(v27, v25 + 40 * v24);
    sub_1C07A06CC();
    if (v18)
      goto LABEL_39;
    if (!v3)
      return;
  }
  sub_1C078AA54();
  if (v17 == v18)
    return;
  v13 = *(_QWORD *)(v16 + 8 * v14);
  if (v13)
  {
    v10 = v14;
    goto LABEL_26;
  }
  while (1)
  {
    v10 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v10 >= v15)
      return;
    v13 = *(_QWORD *)(v16 + 8 * v10);
    ++v14;
    if (v13)
      goto LABEL_26;
  }
LABEL_41:
  __break(1u);
}

void sub_1C07E8D74(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD v22[2];
  _OWORD v23[2];

  if (!a3)
    return;
  sub_1C07AD9E8();
  if (v5)
  {
    sub_1C077E884();
    return;
  }
  v6 = v4;
  sub_1C07ACF80(&qword_1ED758E48);
  sub_1C0796044();
  v20 = v6;
  if (v6 < 1)
    v7 = 0;
  else
    v7 = *a1;
  v8 = 0;
  while (1)
  {
    if (v7)
    {
      sub_1C07A4308();
      goto LABEL_27;
    }
    v9 = v8 + 1;
    if (__OFADD__(v8, 1))
      goto LABEL_40;
    if (v9 >= v20)
      return;
    ++v8;
    if (!a1[v9])
    {
      v8 = v9 + 1;
      if (v9 + 1 >= v20)
        return;
      if (!a1[v8])
      {
        v8 = v9 + 2;
        if (v9 + 2 >= v20)
          return;
        if (!a1[v8])
          break;
      }
    }
LABEL_26:
    sub_1C079E194();
LABEL_27:
    sub_1C079B3C4();
    sub_1C0788E98(v15 + 32 * v14, (uint64_t)v23);
    sub_1C07C010C(v23, v22);
    sub_1C0797B64();
    sub_1C077C0B8();
    sub_1C078D354();
    sub_1C1070E4C();
    sub_1C0794C54();
    if (v5)
    {
      sub_1C0797B50();
      while (1)
      {
        sub_1C0793670();
        if (v5)
        {
          if ((v17 & 1) != 0)
            break;
        }
        sub_1C07A50B8();
        if (!v5)
        {
          sub_1C0791970();
          goto LABEL_35;
        }
      }
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    sub_1C0792CBC();
LABEL_35:
    sub_1C07A66F4(v16);
    sub_1C07C010C(v22, (_OWORD *)(v19 + 32 * v18));
    sub_1C07A06CC();
    if (v13)
      goto LABEL_39;
    if (!v3)
      return;
  }
  sub_1C078AA54();
  if (v12 == v13)
    return;
  if (a1[v10])
  {
    v8 = v10;
    goto LABEL_26;
  }
  while (1)
  {
    v8 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v8 >= v11)
      return;
    ++v10;
    if (a1[v8])
      goto LABEL_26;
  }
LABEL_41:
  __break(1u);
}

unint64_t sub_1C07E8F5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF62FDE8;
  if (!qword_1EF62FDE8)
  {
    v1 = sub_1C07D4BEC(&qword_1EF62FDF0);
    result = MEMORY[0x1C3BA8174](&unk_1C10C25AC, v1);
    atomic_store(result, (unint64_t *)&qword_1EF62FDE8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AmbientLightType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF9)
  {
    if (a2 + 7 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 7) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 8;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v5 = v6 - 8;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for AmbientLightType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1C07E9074 + 4 * byte_1C1079765[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1C07E90A8 + 4 * byte_1C1079760[v4]))();
}

uint64_t sub_1C07E90A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C07E90B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C07E90B8);
  return result;
}

uint64_t sub_1C07E90C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C07E90CCLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1C07E90D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C07E90D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AmbientLightType()
{
  return &type metadata for AmbientLightType;
}

unint64_t sub_1C07E90F8()
{
  unint64_t result;

  result = qword_1EF62FDF8;
  if (!qword_1EF62FDF8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1079884, &type metadata for AmbientLightType);
    atomic_store(result, (unint64_t *)&qword_1EF62FDF8);
  }
  return result;
}

void App.mapLocation.getter()
{
  sub_1C077AE90();
  sub_1C0778534();
}

void App.mapLocation.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  sub_1C077671C();
}

uint64_t (*App.mapLocation.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1C07E919C()
{
  if (qword_1EF62E310 != -1)
    swift_once();
  qword_1EF62FE00 = qword_1EF648308;
  *(_OWORD *)&qword_1EF62FE08 = *(_OWORD *)&qword_1EF648310;
  qword_1EF62FE18 = qword_1EF648320;
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

uint64_t static App.type.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  if (qword_1EF62DA90 != -1)
    swift_once();
  sub_1C077F040();
  v2 = qword_1EF62FE18;
  *(_QWORD *)a1 = qword_1EF62FE00;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)&qword_1EF62FE08;
  *(_QWORD *)(a1 + 24) = v2;
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

uint64_t static App.type.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v4;

  v1 = *(_QWORD *)a1;
  v4 = *(_OWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 24);
  if (qword_1EF62DA90 != -1)
    swift_once();
  sub_1C077F040();
  qword_1EF62FE00 = v1;
  *(_OWORD *)&qword_1EF62FE08 = v4;
  qword_1EF62FE18 = v2;
  return swift_bridgeObjectRelease();
}

void static App.type.modify()
{
  if (qword_1EF62DA90 != -1)
    swift_once();
  sub_1C077F040();
  sub_1C0778534();
}

void App.identifier.getter()
{
  sub_1C077AE90();
  sub_1C0778534();
}

void App.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  sub_1C077671C();
}

uint64_t (*App.identifier.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t App.basicProperties.getter()
{
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

void __swiftcall App.init(mapLocation:identifier:bundleID:conversationIdentifier:parentBundleId:extensionHostId:shortVersion:exactVersion:)(IntelligencePlatformCore::App *__return_ptr retstr, Swift::String mapLocation, Swift::String identifier, Swift::String bundleID, Swift::String_optional conversationIdentifier, Swift::String_optional parentBundleId, Swift::String_optional extensionHostId, Swift::String_optional shortVersion, Swift::String_optional exactVersion)
{
  void *object;
  uint64_t countAndFlagsBits;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  Swift::String_optional *v25;
  unint64_t v26;
  unint64_t v27;
  Swift::String_optional *v28;
  unint64_t v29;
  unint64_t v30;
  Swift::String_optional *v31;
  uint64_t v32;

  object = conversationIdentifier.value._object;
  countAndFlagsBits = conversationIdentifier.value._countAndFlagsBits;
  v11 = bundleID._object;
  v12 = bundleID._countAndFlagsBits;
  v13 = identifier._object;
  v14 = identifier._countAndFlagsBits;
  v15 = mapLocation._object;
  v32 = mapLocation._countAndFlagsBits;
  sub_1C07ACF80(&qword_1EF62FE20);
  v17 = sub_1C0778598();
  *(_OWORD *)(v17 + 16) = xmmword_1C1078FC0;
  *(_QWORD *)(v17 + 32) = 0x4449656C646E7562;
  *(_QWORD *)(v17 + 40) = 0xE800000000000000;
  *(_QWORD *)(v17 + 48) = v12;
  *(_QWORD *)(v17 + 56) = v11;
  *(_QWORD *)(v17 + 72) = 0;
  *(_QWORD *)(v17 + 80) = 0;
  *(_QWORD *)(v17 + 64) = 0;
  *(_BYTE *)(v17 + 88) = 1;
  *(_QWORD *)(v17 + 96) = 0x696669746E656469;
  *(_QWORD *)(v17 + 104) = 0xEA00000000007265;
  *(_QWORD *)(v17 + 112) = v14;
  *(_QWORD *)(v17 + 120) = v13;
  *(_QWORD *)(v17 + 136) = 0;
  *(_QWORD *)(v17 + 144) = 0;
  *(_QWORD *)(v17 + 128) = 0;
  *(_BYTE *)(v17 + 152) = 1;
  if (object)
  {
    sub_1C0775888();
    sub_1C077584C();
    v18 = 3;
    sub_1C07ECF40();
    v17 = v19;
    *(_QWORD *)(v19 + 16) = 3;
    *(_QWORD *)(v19 + 160) = 0xD000000000000016;
    *(_QWORD *)(v19 + 168) = 0x80000001C10E2720;
    *(_QWORD *)(v19 + 176) = countAndFlagsBits;
    *(_QWORD *)(v19 + 184) = object;
    *(_QWORD *)(v19 + 200) = 0;
    *(_QWORD *)(v19 + 208) = 0;
    *(_QWORD *)(v19 + 192) = 0;
    *(_BYTE *)(v19 + 216) = 1;
  }
  else
  {
    v18 = 2;
    sub_1C0775888();
    sub_1C077584C();
  }
  v20 = 0xD000000000000012;
  if (parentBundleId.value._object)
  {
    v21 = *(_QWORD *)(v17 + 24);
    if (v18 >= v21 >> 1)
    {
      sub_1C0779D04(v21);
      sub_1C07A1AB0();
      sub_1C07B15D0();
    }
    *(_QWORD *)(v17 + 16) = v18 + 1;
    v22 = v17 + (v18 << 6);
    strcpy((char *)(v22 + 32), "parentBundleID");
    *(_BYTE *)(v22 + 47) = -18;
    *(Swift::String_optional *)(v22 + 48) = parentBundleId;
    sub_1C077B630(v22);
  }
  if (extensionHostId.value._object)
  {
    v24 = *(_QWORD *)(v17 + 16);
    v23 = *(_QWORD *)(v17 + 24);
    if (v24 >= v23 >> 1)
    {
      sub_1C0779D04(v23);
      sub_1C07A1AB0();
      sub_1C07B15D0();
    }
    *(_QWORD *)(v17 + 16) = v24 + 1;
    v25 = (Swift::String_optional *)(v17 + (v24 << 6));
    v25[2].value._countAndFlagsBits = 0x6F69736E65747865;
    v25[2].value._object = (void *)0xEF444974736F486ELL;
    v25[3] = extensionHostId;
    sub_1C077B630((uint64_t)v25);
  }
  if (shortVersion.value._object)
  {
    v27 = *(_QWORD *)(v17 + 16);
    v26 = *(_QWORD *)(v17 + 24);
    if (v27 >= v26 >> 1)
    {
      sub_1C0779D04(v26);
      sub_1C07A1AB0();
      sub_1C07B15D0();
    }
    *(_QWORD *)(v17 + 16) = v27 + 1;
    v28 = (Swift::String_optional *)(v17 + (v27 << 6));
    v28[2].value._countAndFlagsBits = v20;
    v28[2].value._object = (void *)0x80000001C10E2700;
    v28[3] = shortVersion;
    sub_1C07AD564();
  }
  if (exactVersion.value._object)
  {
    v30 = *(_QWORD *)(v17 + 16);
    v29 = *(_QWORD *)(v17 + 24);
    if (v30 >= v29 >> 1)
    {
      sub_1C0779D04(v29);
      sub_1C07A1AB0();
      sub_1C07B15D0();
    }
    *(_QWORD *)(v17 + 16) = v30 + 1;
    v31 = (Swift::String_optional *)(v17 + (v30 << 6));
    v31[2].value._countAndFlagsBits = v20;
    v31[2].value._object = (void *)0x80000001C10E26E0;
    v31[3] = exactVersion;
    sub_1C07AD564();
  }
  sub_1C077584C();
  sub_1C07767AC();
  swift_bridgeObjectRelease_n();
  retstr->mapLocation._countAndFlagsBits = v32;
  retstr->mapLocation._object = v15;
  retstr->identifier.value._countAndFlagsBits = v14;
  retstr->identifier.value._object = v13;
  retstr->basicProperties._rawValue = (void *)v17;
}

uint64_t sub_1C07E9738(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x7461636F4C70616DLL && a2 == 0xEB000000006E6F69;
  if (v2 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
    if (v6 || (sub_1C1070CB4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6F72506369736162 && a2 == 0xEF73656974726570)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1C1070CB4();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1C07E98CC()
{
  return 3;
}

uint64_t sub_1C07E98D4(char a1)
{
  if (!a1)
    return 0x7461636F4C70616DLL;
  if (a1 == 1)
    return 0x696669746E656469;
  return 0x6F72506369736162;
}

uint64_t sub_1C07E9944()
{
  char *v0;

  return sub_1C07E98D4(*v0);
}

uint64_t sub_1C07E994C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C07E9738(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C07E9970@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C07E98CC();
  *a1 = result;
  return result;
}

uint64_t sub_1C07E9994()
{
  sub_1C07EB0E0();
  return sub_1C1070EE8();
}

uint64_t sub_1C07E99BC()
{
  sub_1C07EB0E0();
  return sub_1C1070EF4();
}

void App.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;

  v3 = sub_1C07ACF80(&qword_1EF62FE28);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[2];
  v12 = v1[3];
  v13 = v7;
  v11 = v1[4];
  sub_1C07A9480(a1, a1[3]);
  sub_1C07EB0E0();
  sub_1C1070EB8();
  v18 = 0;
  v8 = v14;
  sub_1C1070B7C();
  if (!v8)
  {
    v9 = v11;
    v17 = 1;
    sub_1C1070B34();
    v15 = v9;
    v16 = 2;
    sub_1C07ACF80(&qword_1EF62FE38);
    sub_1C07EB158(&qword_1EF62FE40, (uint64_t (*)(void))sub_1C07EB11C, MEMORY[0x1E0DEAF10]);
    sub_1C1070BB8();
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1C07757D0();
}

void App.init(from:)(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = sub_1C07ACF80(&qword_1EF62FE50);
  MEMORY[0x1E0C80A78](v5);
  sub_1C07A9480(a1, a1[3]);
  sub_1C07EB0E0();
  sub_1C1070E94();
  if (v2)
  {
    sub_1C0775880();
  }
  else
  {
    v6 = sub_1C1070AA4();
    v8 = v7;
    v13 = v6;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v9 = sub_1C1070A5C();
    v11 = v10;
    v12 = v9;
    sub_1C07ACF80(&qword_1EF62FE38);
    sub_1C07EB158(&qword_1EF62FE58, (uint64_t (*)(void))sub_1C07EB1C0, MEMORY[0x1E0DEAF40]);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C1070AE0();
    sub_1C0790688();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C077AE90();
    sub_1C0775834();
    *a2 = v13;
    a2[1] = v8;
    a2[2] = v12;
    a2[3] = v11;
    a2[4] = v14;
    sub_1C0775880();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_1C07757D0();
}

void sub_1C07E9D88(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  App.init(from:)(a1, a2);
}

void sub_1C07E9D9C(_QWORD *a1)
{
  App.encode(to:)(a1);
}

void sub_1C07E9DB0()
{
  sub_1C07E9E90();
}

void sub_1C07E9DD4()
{
  sub_1C07E9E90();
}

void sub_1C07E9DF8()
{
  sub_1C07E9E90();
}

void sub_1C07E9E1C()
{
  uint64_t v0;
  _QWORD *v1;
  int v2;
  uint64_t v3;

  v2 = sub_1C077CF4C();
  *v1 = v0;
  if (!v2)
  {
    sub_1C0795F24();
    *v1 = v3;
  }
}

void sub_1C07E9E6C()
{
  sub_1C07E9E90();
}

void sub_1C07E9E90()
{
  uint64_t (*v0)(void);
  _QWORD *v1;
  uint64_t v2;
  int v3;

  v3 = sub_1C07BCD20();
  *v1 = v2;
  if (!v3)
  {
    sub_1C0786344();
    *v1 = v0();
  }
  sub_1C07785E4();
}

void sub_1C07E9EC8()
{
  sub_1C07E9E90();
}

void sub_1C07E9EEC()
{
  sub_1C07E9E90();
}

void sub_1C07E9F10()
{
  sub_1C07EA388();
}

void sub_1C07E9F34()
{
  sub_1C07E9E90();
}

void sub_1C07E9F58()
{
  sub_1C07E9E90();
}

void sub_1C07E9F7C()
{
  sub_1C07E9E90();
}

void sub_1C07E9FA0()
{
  sub_1C07E9E90();
}

void sub_1C07E9FC4()
{
  sub_1C07E9E90();
}

void sub_1C07E9FE8()
{
  sub_1C07E9E90();
}

void sub_1C07EA00C()
{
  sub_1C07E9E90();
}

void sub_1C07EA030()
{
  sub_1C07E9E90();
}

void sub_1C07EA054()
{
  sub_1C07E9E90();
}

void sub_1C07EA078()
{
  sub_1C07EA388();
}

void sub_1C07EA09C()
{
  sub_1C07E9E90();
}

void sub_1C07EA0C0()
{
  sub_1C07EA388();
}

void sub_1C07EA0E4()
{
  sub_1C07E9E90();
}

void sub_1C07EA108()
{
  sub_1C07EA388();
}

void sub_1C07EA12C()
{
  sub_1C07E9E90();
}

void sub_1C07EA150()
{
  sub_1C07E9E90();
}

void sub_1C07EA174()
{
  sub_1C07E9E90();
}

void sub_1C07EA198()
{
  sub_1C07E9E90();
}

void sub_1C07EA1BC()
{
  sub_1C07E9E90();
}

void sub_1C07EA1E0()
{
  sub_1C07EA21C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C07EC850);
}

void sub_1C07EA1EC()
{
  sub_1C07E9E90();
}

void sub_1C07EA210()
{
  sub_1C07EA21C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C07EC938);
}

void sub_1C07EA21C(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t isUniquelyReferenced_nonNull_native;

  v3 = *v1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v3;
  if (!(_DWORD)isUniquelyReferenced_nonNull_native)
    *v1 = a1(isUniquelyReferenced_nonNull_native, *(_QWORD *)(v3 + 16) + 1, 1, v3);
  sub_1C077671C();
}

void sub_1C07EA268()
{
  sub_1C07E9E90();
}

void sub_1C07EA28C()
{
  sub_1C07E9E90();
}

void sub_1C07EA2B0()
{
  sub_1C07E9E90();
}

void sub_1C07EA2D4()
{
  sub_1C07E9E90();
}

void sub_1C07EA2F8()
{
  sub_1C07E9E90();
}

void sub_1C07EA31C()
{
  sub_1C07E9E90();
}

void sub_1C07EA340()
{
  sub_1C07E9E90();
}

void sub_1C07EA364()
{
  sub_1C07EA388();
}

void sub_1C07EA388()
{
  _QWORD *v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  v2 = sub_1C07BCD20();
  *v0 = v1;
  if (!v2)
  {
    sub_1C0786344();
    sub_1C0798398();
    *v0 = v3;
  }
  sub_1C07785E4();
}

void sub_1C07EA3C4()
{
  sub_1C07E9E90();
}

void sub_1C07EA3E8()
{
  uint64_t v0;
  _QWORD *v1;
  int v2;
  uint64_t v3;

  v2 = sub_1C077CF4C();
  *v1 = v0;
  if (!v2)
  {
    sub_1C07EC5AC();
    *v1 = v3;
  }
}

void sub_1C07EA448()
{
  sub_1C07E9E90();
}

void sub_1C07EA46C()
{
  sub_1C07E9E90();
}

void sub_1C07EA490()
{
  sub_1C07EA560();
}

void sub_1C07EA4B4()
{
  sub_1C07EA560();
}

void sub_1C07EA4D8()
{
  sub_1C07EA560();
}

void sub_1C07EA4FC()
{
  _QWORD *v0;
  char v1;
  char v2;
  char v3;
  uint64_t v4;

  sub_1C0795750();
  if (!(v2 ^ v3 | v1))
  {
    sub_1C0795F24();
    *v0 = v4;
  }
}

void sub_1C07EA53C()
{
  sub_1C07EA560();
}

void sub_1C07EA560()
{
  _QWORD *v0;
  uint64_t (*v1)(BOOL);
  unint64_t v2;
  char v3;
  char v4;
  char v5;

  sub_1C07796C4();
  if (!(v4 ^ v5 | v3))
    *v0 = v1(v2 > 1);
}

void sub_1C07EA5A0()
{
  sub_1C07EA560();
}

void sub_1C07EA5C4()
{
  sub_1C07EA560();
}

void sub_1C07EA5E8()
{
  sub_1C07EA804();
}

void sub_1C07EA60C()
{
  sub_1C07EA560();
}

void sub_1C07EA630()
{
  sub_1C07EA560();
}

void sub_1C07EA654()
{
  sub_1C07EA560();
}

void sub_1C07EA678()
{
  sub_1C07EA560();
}

void sub_1C07EA69C()
{
  sub_1C07EA560();
}

void sub_1C07EA6C0()
{
  sub_1C07EA560();
}

void sub_1C07EA6E4()
{
  sub_1C07EA560();
}

void sub_1C07EA708()
{
  sub_1C07EA560();
}

void sub_1C07EA72C()
{
  sub_1C07EA560();
}

void sub_1C07EA750()
{
  sub_1C07EA804();
}

void sub_1C07EA774()
{
  sub_1C07EA560();
}

void sub_1C07EA798()
{
  sub_1C07EA804();
}

void sub_1C07EA7BC()
{
  sub_1C07EA560();
}

void sub_1C07EA7E0()
{
  sub_1C07EA804();
}

void sub_1C07EA804()
{
  _QWORD *v0;
  unint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;

  sub_1C0795750();
  if (!(v3 ^ v4 | v2))
  {
    sub_1C0779D04(v1);
    sub_1C0798398();
    *v0 = v5;
  }
}

void sub_1C07EA840()
{
  sub_1C07EA560();
}

void sub_1C07EA864()
{
  sub_1C07EA560();
}

void sub_1C07EA888()
{
  sub_1C07EA560();
}

void sub_1C07EA8AC()
{
  sub_1C07EA560();
}

void sub_1C07EA8D0()
{
  sub_1C07EA560();
}

void sub_1C07EA8F4()
{
  sub_1C07EA930();
}

void sub_1C07EA900()
{
  sub_1C07EA560();
}

void sub_1C07EA924()
{
  sub_1C07EA930();
}

void sub_1C07EA930()
{
  _QWORD *v0;
  uint64_t (*v1)(BOOL);
  unint64_t v2;
  char v3;
  char v4;
  char v5;

  sub_1C07796C4();
  if (!(v4 ^ v5 | v3))
    *v0 = v1(v2 > 1);
}

void sub_1C07EA964()
{
  sub_1C07EA560();
}

void sub_1C07EA988()
{
  sub_1C07EA560();
}

void sub_1C07EA9AC()
{
  sub_1C07EA560();
}

void sub_1C07EA9D0()
{
  sub_1C07EA560();
}

void sub_1C07EA9F4()
{
  sub_1C07EA560();
}

void sub_1C07EAA18()
{
  sub_1C07EA560();
}

void sub_1C07EAA3C()
{
  sub_1C07EA560();
}

void sub_1C07EAA60()
{
  _QWORD *v0;
  char v1;
  char v2;
  char v3;
  uint64_t v4;

  sub_1C0795750();
  if (!(v2 ^ v3 | v1))
  {
    sub_1C07EC5AC();
    *v0 = v4;
  }
}

void sub_1C07EAAB0()
{
  _QWORD *v0;
  char v1;
  char v2;
  char v3;
  uint64_t v4;

  sub_1C0795750();
  if (!(v2 ^ v3 | v1))
  {
    sub_1C0798398();
    *v0 = v4;
  }
}

void sub_1C07EAB00()
{
  sub_1C07EA560();
}

void sub_1C07EAB24()
{
  sub_1C07EA560();
}

void sub_1C07EAB48()
{
  sub_1C07EA560();
}

void sub_1C07EAB6C()
{
  sub_1C0784BCC();
}

void sub_1C07EAB88()
{
  sub_1C07EBA24();
}

void sub_1C07EABAC()
{
  sub_1C0795F24();
}

void sub_1C07EABC0()
{
  sub_1C07EABDC();
}

void sub_1C07EABDC()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  const void *v10;
  uint64_t v11;

  sub_1C078F0F4();
  if ((v2 & 1) != 0)
  {
    sub_1C0799648();
    if (v3 != v4)
    {
      sub_1C0796F44();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1C0798484();
    }
  }
  sub_1C078783C();
  if (v1)
  {
    sub_1C07A2220(v5, v6, v7, v8, v9);
    v10 = (const void *)sub_1C0778598();
    sub_1C07A2F3C(v10);
    sub_1C079367C(v11 / 16);
  }
  else
  {
    v1 = MEMORY[0x1E0DEE9D8];
  }
  if ((v0 & 1) != 0)
  {
    sub_1C079B3D4();
    sub_1C07A06E0();
  }
  else
  {
    sub_1C0790D64(v5, v6, v1 + 32);
  }
  sub_1C07785E4();
}

void sub_1C07EAC70()
{
  sub_1C0798398();
}

void sub_1C07EAC94()
{
  sub_1C0784BCC();
}

void sub_1C07EACB0()
{
  sub_1C0784BCC();
}

void sub_1C07EACCC()
{
  sub_1C0784BCC();
}

void sub_1C07EACE8()
{
  sub_1C07EAD04();
}

void sub_1C07EAD04()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  _QWORD *v10;

  sub_1C077B61C();
  sub_1C078F0F4();
  if ((v2 & 1) != 0)
  {
    sub_1C0799648();
    if (v3 != v4)
    {
      sub_1C0796F44();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1C0798484();
    }
  }
  sub_1C078783C();
  if (v1)
  {
    sub_1C07A2220(v5, v6, v7, v8, v9);
    v10 = (_QWORD *)sub_1C0778598();
    v5 = sub_1C0794C74(v10);
  }
  else
  {
    v1 = MEMORY[0x1E0DEE9D8];
  }
  if ((v0 & 1) != 0)
  {
    sub_1C079B3D4();
    sub_1C07A06E0();
  }
  else
  {
    sub_1C0790D64(v5, v6, v1 + 32);
  }
  sub_1C077C798();
}

void sub_1C07EAD90()
{
  sub_1C07EADAC();
}

void sub_1C07EADAC()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  const void *v10;
  size_t v11;

  sub_1C078F0F4();
  if ((v2 & 1) != 0)
  {
    sub_1C0799648();
    if (v3 != v4)
    {
      sub_1C0796F44();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1C0798484();
    }
  }
  sub_1C078783C();
  if (v1)
  {
    sub_1C07A2220(v5, v6, v7, v8, v9);
    v10 = (const void *)sub_1C0778598();
    v11 = j__malloc_size(v10);
    sub_1C079367C((uint64_t)(v11 - 32) / 8);
  }
  else
  {
    v10 = (const void *)MEMORY[0x1E0DEE9D8];
  }
  if ((v0 & 1) != 0)
  {
    sub_1C079B3D4();
    sub_1C07A06E0();
  }
  else
  {
    sub_1C0790D64(v5, v6, (uint64_t)v10 + 32);
  }
  sub_1C07785E4();
}

void sub_1C07EAE48()
{
  sub_1C07EBC50();
}

void sub_1C07EAE64()
{
  sub_1C0795F24();
}

void sub_1C07EAE78()
{
  sub_1C07EAD04();
}

void sub_1C07EAE94()
{
  sub_1C07EAECC();
}

void sub_1C07EAEB0()
{
  sub_1C07EAECC();
}

void sub_1C07EAECC()
{
  uint64_t v0;
  uint64_t *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  const void *v14;
  size_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t *v22;

  sub_1C078F0F4();
  if ((v7 & 1) != 0)
  {
    sub_1C0799648();
    if (v11 != v12)
    {
      sub_1C0796F44();
      if (v11)
      {
        __break(1u);
        goto LABEL_22;
      }
      sub_1C0798484();
    }
  }
  else
  {
    v10 = v6;
  }
  if (v10 <= *(_QWORD *)(v0 + 16))
    v13 = *(_QWORD *)(v0 + 16);
  else
    v13 = v10;
  if (!v13)
    goto LABEL_17;
  sub_1C07A2220(v5, v6, v7, v8, v9);
  sub_1C07ACF80(v1);
  v14 = (const void *)sub_1C079433C();
  v15 = j__malloc_size(v14);
  if (!v3 || (v15 - v4 == 0x8000000000000000 ? (v16 = v3 == -1) : (v16 = 0), v16))
  {
LABEL_22:
    sub_1C07A3684();
    sub_1C07AFFD8();
    __break(1u);
    return;
  }
  sub_1C079367C((uint64_t)(v15 - v4) / v3);
LABEL_17:
  sub_1C07ACF80(v1);
  sub_1C077C0C0();
  if ((v2 & 1) != 0)
  {
    sub_1C07AB684(v17);
    sub_1C07A06E0();
  }
  else
  {
    v18 = sub_1C0792CD0();
    sub_1C07F0400(v18, v19, v20, v21, v22);
  }
  sub_1C0781AD8();
}

void sub_1C07EB000()
{
  sub_1C0784BCC();
}

void sub_1C07EB01C()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  _QWORD *v6;
  size_t v7;
  char *v8;
  size_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;

  sub_1C079ED54();
  if ((v3 & 1) != 0)
  {
    sub_1C0799648();
    if (v4 != v5)
    {
      sub_1C0796F44();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_1C0798484();
    }
  }
  sub_1C078C74C();
  if (v2)
  {
    sub_1C07ACF80(&qword_1ED7603F8);
    v6 = (_QWORD *)sub_1C0778598();
    v7 = j__malloc_size(v6);
    v6[2] = v1;
    v6[3] = 2 * v7 - 64;
  }
  if ((v0 & 1) != 0)
  {
    v8 = (char *)sub_1C07A9D2C();
    sub_1C09D2168(v8, v9, v10);
    sub_1C07A06E0();
  }
  else
  {
    v11 = sub_1C0797B70();
    sub_1C07EDB64(v11, v12, v13, v14);
  }
}

void sub_1C07EB0C4()
{
  sub_1C07ECF40();
}

unint64_t sub_1C07EB0E0()
{
  unint64_t result;

  result = qword_1EF62FE30;
  if (!qword_1EF62FE30)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1079A20, &type metadata for App.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62FE30);
  }
  return result;
}

unint64_t sub_1C07EB11C()
{
  unint64_t result;

  result = qword_1EF62FE48;
  if (!qword_1EF62FE48)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for BasicProperty, &type metadata for BasicProperty);
    atomic_store(result, (unint64_t *)&qword_1EF62FE48);
  }
  return result;
}

uint64_t sub_1C07EB158(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = sub_1C07D4BEC(&qword_1EF62FE38);
    v8 = a2();
    result = MEMORY[0x1C3BA8174](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C07EB1C0()
{
  unint64_t result;

  result = qword_1EF62FE60;
  if (!qword_1EF62FE60)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for BasicProperty, &type metadata for BasicProperty);
    atomic_store(result, (unint64_t *)&qword_1EF62FE60);
  }
  return result;
}

unint64_t sub_1C07EB1FC(uint64_t a1)
{
  unint64_t result;

  result = sub_1C07EB220();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C07EB220()
{
  unint64_t result;

  result = qword_1EF62FE68;
  if (!qword_1EF62FE68)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for App, &type metadata for App);
    atomic_store(result, (unint64_t *)&qword_1EF62FE68);
  }
  return result;
}

unint64_t sub_1C07EB25C(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1C07EB288();
  result = sub_1C07EB2C4();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C07EB288()
{
  unint64_t result;

  result = qword_1EF62FE70;
  if (!qword_1EF62FE70)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for App, &type metadata for App);
    atomic_store(result, (unint64_t *)&qword_1EF62FE70);
  }
  return result;
}

unint64_t sub_1C07EB2C4()
{
  unint64_t result;

  result = qword_1EF62FE78;
  if (!qword_1EF62FE78)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for App, &type metadata for App);
    atomic_store(result, (unint64_t *)&qword_1EF62FE78);
  }
  return result;
}

uint64_t destroy for App()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for App(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

_QWORD *assignWithCopy for App(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for App(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for App(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for App(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for App()
{
  return &type metadata for App;
}

uint64_t storeEnumTagSinglePayload for App.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C07EB540 + 4 * byte_1C10798B5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C07EB574 + 4 * byte_1C10798B0[v4]))();
}

uint64_t sub_1C07EB574(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C07EB57C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C07EB584);
  return result;
}

uint64_t sub_1C07EB590(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C07EB598);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C07EB59C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C07EB5A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for App.CodingKeys()
{
  return &type metadata for App.CodingKeys;
}

unint64_t sub_1C07EB5C4()
{
  unint64_t result;

  result = qword_1EF62FE80;
  if (!qword_1EF62FE80)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10799F8, &type metadata for App.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62FE80);
  }
  return result;
}

unint64_t sub_1C07EB604()
{
  unint64_t result;

  result = qword_1EF62FE88;
  if (!qword_1EF62FE88)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1079968, &type metadata for App.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62FE88);
  }
  return result;
}

unint64_t sub_1C07EB644()
{
  unint64_t result;

  result = qword_1EF62FE90;
  if (!qword_1EF62FE90)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1079990, &type metadata for App.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF62FE90);
  }
  return result;
}

void sub_1C07EB680()
{
  sub_1C07EAECC();
}

void sub_1C07EB69C()
{
  sub_1C0784BCC();
}

void sub_1C07EB6B8()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  _QWORD *v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;

  sub_1C07AD040();
  if ((v3 & 1) != 0)
  {
    sub_1C0799648();
    if (v4 != v5)
    {
      sub_1C0796F44();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_1C0798484();
    }
  }
  sub_1C079BCCC();
  if (v2)
  {
    sub_1C07A2220(v6, v7, v8, v9, v10);
    v11 = (_QWORD *)sub_1C0778598();
    v12 = j__malloc_size(v11);
    v11[2] = v1;
    v11[3] = 2 * v12 - 64;
  }
  if ((v0 & 1) != 0)
  {
    sub_1C07AA640();
    sub_1C07A06E0();
  }
  else
  {
    v13 = sub_1C079BCDC();
    sub_1C07EF33C(v13, v14, v15, v16);
  }
  sub_1C07785E4();
}

void sub_1C07EB750()
{
  sub_1C07EC5AC();
}

void sub_1C07EB774()
{
  sub_1C0784BCC();
}

void sub_1C07EB790()
{
  sub_1C07EB7AC();
}

void sub_1C07EB7AC()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  sub_1C077B61C();
  sub_1C078F0F4();
  if ((v2 & 1) != 0)
  {
    sub_1C0799648();
    if (v3 != v4)
    {
      sub_1C0796F44();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1C0798484();
    }
  }
  sub_1C078783C();
  if (v1)
  {
    sub_1C07A2220(v5, v6, v7, v8, v9);
    v10 = (_QWORD *)sub_1C0778598();
    sub_1C0794C74(v10);
  }
  if ((v0 & 1) != 0)
  {
    sub_1C079B3D4();
    sub_1C07A06E0();
  }
  else
  {
    v11 = sub_1C0792CD0();
    sub_1C07F0240(v11, v12);
  }
  sub_1C077C798();
}

void sub_1C07EB83C()
{
  sub_1C07EB850();
}

void sub_1C07EB850()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;

  sub_1C07AD040();
  if ((v3 & 1) != 0)
  {
    sub_1C0799648();
    if (v4 != v5)
    {
      sub_1C0796F44();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_1C0798484();
    }
  }
  sub_1C079BCCC();
  if (v2)
  {
    sub_1C07A2220(v6, v7, v8, v9, v10);
    v11 = (_QWORD *)sub_1C0778598();
    j__malloc_size(v11);
    sub_1C079CB9C();
    v11[2] = v1;
    v11[3] = v12;
  }
  if ((v0 & 1) != 0)
  {
    sub_1C07AA640();
    sub_1C07A06E0();
  }
  else
  {
    v13 = sub_1C079BCDC();
    sub_1C07EEC3C(v13, v14, v15, v16);
  }
  sub_1C07785E4();
}

void sub_1C07EB8E8()
{
  sub_1C07EAECC();
}

void sub_1C07EB904()
{
  sub_1C07ED078();
}

void sub_1C07EB928()
{
  sub_1C07EAECC();
}

void sub_1C07EB944()
{
  sub_1C0784BCC();
}

void sub_1C07EB960()
{
  sub_1C07EC080();
}

void sub_1C07EB97C()
{
  sub_1C0784BCC();
}

void sub_1C07EB998()
{
  sub_1C07EAECC();
}

void sub_1C07EB9B4()
{
  sub_1C07ED54C();
}

void sub_1C07EB9D0()
{
  sub_1C0784BCC();
}

void sub_1C07EB9EC()
{
  sub_1C07EB6B8();
}

void sub_1C07EBA00()
{
  sub_1C07EBA24();
}

void sub_1C07EBA24()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  _QWORD *v11;
  uint64_t v12;

  sub_1C077B61C();
  sub_1C0791984();
  if ((v3 & 1) != 0)
  {
    sub_1C0799648();
    if (v4 != v5)
    {
      sub_1C0796F44();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_1C0798484();
    }
  }
  sub_1C07B9594();
  if (v2)
  {
    sub_1C07A2220(v6, v7, v8, v9, v10);
    v11 = (_QWORD *)sub_1C0778598();
    j__malloc_size(v11);
    sub_1C079CB9C();
    v11[2] = v1;
    v11[3] = v12;
  }
  else
  {
    v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  if ((v0 & 1) != 0)
  {
    sub_1C07B4680();
    sub_1C07A06E0();
  }
  else
  {
    sub_1C07A7C60(v6, v7, (uint64_t)(v11 + 4));
  }
  sub_1C077C798();
}

void sub_1C07EBAB8()
{
  sub_1C07EC64C();
}

void sub_1C07EBAD4()
{
  sub_1C0784BCC();
}

void sub_1C07EBAF0()
{
  sub_1C07EBB0C();
}

void sub_1C07EBB0C()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  const void *v10;
  uint64_t v11;

  sub_1C078F0F4();
  if ((v2 & 1) != 0)
  {
    sub_1C0799648();
    if (v3 != v4)
    {
      sub_1C0796F44();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1C0798484();
    }
  }
  sub_1C078783C();
  if (v1)
  {
    sub_1C07A2220(v5, v6, v7, v8, v9);
    v10 = (const void *)sub_1C0778598();
    sub_1C07A2F3C(v10);
    sub_1C079367C(v11 / 32);
  }
  else
  {
    v1 = MEMORY[0x1E0DEE9D8];
  }
  if ((v0 & 1) != 0)
  {
    sub_1C079B3D4();
    sub_1C07A06E0();
  }
  else
  {
    sub_1C0790D64(v5, v6, v1 + 32);
  }
  sub_1C07785E4();
}

void sub_1C07EBBA0()
{
  sub_1C07EABDC();
}

void sub_1C07EBBBC()
{
  sub_1C0784BCC();
}

void sub_1C07EBBD8()
{
  sub_1C0784BCC();
}

void sub_1C07EBBF4()
{
  sub_1C07EAD04();
}

void sub_1C07EBC10()
{
  sub_1C0798398();
}

void sub_1C07EBC34()
{
  sub_1C07EBC50();
}

void sub_1C07EBC50()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  _QWORD *v10;

  sub_1C077B61C();
  sub_1C078F0F4();
  if ((v2 & 1) != 0)
  {
    sub_1C0799648();
    if (v3 != v4)
    {
      sub_1C0796F44();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1C0798484();
    }
  }
  sub_1C078783C();
  if (v1)
  {
    sub_1C07A2220(v5, v6, v7, v8, v9);
    v10 = (_QWORD *)sub_1C0778598();
    v5 = sub_1C0794C74(v10);
  }
  else
  {
    v1 = MEMORY[0x1E0DEE9D8];
  }
  if ((v0 & 1) != 0)
  {
    sub_1C079B3D4();
    sub_1C07A06E0();
  }
  else
  {
    sub_1C0790D64(v5, v6, v1 + 32);
  }
  sub_1C077C798();
}

void sub_1C07EBCDC()
{
  sub_1C07EBC50();
}

void sub_1C07EBCF8()
{
  sub_1C07EABDC();
}

void sub_1C07EBD14()
{
  sub_1C07EBB0C();
}

void sub_1C07EBD30()
{
  sub_1C07EBD4C();
}

void sub_1C07EBD4C()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  const void *v10;
  size_t v11;

  sub_1C078F0F4();
  if ((v2 & 1) != 0)
  {
    sub_1C0799648();
    if (v3 != v4)
    {
      sub_1C0796F44();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1C0798484();
    }
  }
  sub_1C078783C();
  if (v1)
  {
    sub_1C07A2220(v5, v6, v7, v8, v9);
    v10 = (const void *)sub_1C0778598();
    v11 = j__malloc_size(v10);
    sub_1C079367C((uint64_t)(v11 - 32) / 8);
  }
  if ((v0 & 1) != 0)
  {
    sub_1C079B3D4();
    sub_1C07A06E0();
  }
  else
  {
    sub_1C0792CD0();
    sub_1C07F0090();
  }
  sub_1C07785E4();
}

void sub_1C07EBDEC()
{
  sub_1C0798398();
}

void sub_1C07EBE10()
{
  sub_1C07EBD4C();
}

void sub_1C07EBE2C()
{
  sub_1C0784BCC();
}

void sub_1C07EBE48()
{
  sub_1C0784BCC();
}

void sub_1C07EBE64()
{
  sub_1C0784BCC();
}

void sub_1C07EBE80()
{
  sub_1C0784BCC();
}

void sub_1C07EBE9C()
{
  sub_1C0784BCC();
}

void sub_1C07EBEB8()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  _QWORD *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  sub_1C079ED54();
  if ((v2 & 1) != 0)
  {
    sub_1C0799648();
    if (v3 != v4)
    {
      sub_1C0796F44();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1C0798484();
    }
  }
  sub_1C078C74C();
  if (v1)
  {
    sub_1C07ACF80(&qword_1EF62FED0);
    v5 = (_QWORD *)sub_1C0778598();
    sub_1C079FC68(v5);
  }
  if ((v0 & 1) != 0)
  {
    v6 = (char *)sub_1C07A9D2C();
    sub_1C09D256C(v6, v7, v8);
    sub_1C07A06E0();
  }
  else
  {
    v9 = sub_1C0797B70();
    sub_1C07EE768(v9, v10, v11, v12);
  }
  sub_1C07785E4();
}

void sub_1C07EBF54()
{
  sub_1C0784BCC();
}

void sub_1C07EBF70()
{
  sub_1C07EABDC();
}

void sub_1C07EBF8C()
{
  sub_1C0784BCC();
}

void sub_1C07EBFA8()
{
  sub_1C0784BCC();
}

void sub_1C07EBFC4()
{
  sub_1C0784BCC();
}

void sub_1C07EBFE0()
{
  sub_1C07EAD04();
}

void sub_1C07EBFFC()
{
  sub_1C07EADAC();
}

void sub_1C07EC018()
{
  sub_1C07EBC50();
}

void sub_1C07EC034()
{
  sub_1C0784BCC();
}

void sub_1C07EC050()
{
  sub_1C0795F24();
}

void sub_1C07EC064()
{
  sub_1C07EC080();
}

void sub_1C07EC080()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  const void *v10;
  uint64_t v11;

  sub_1C078F0F4();
  if ((v2 & 1) != 0)
  {
    sub_1C0799648();
    if (v3 != v4)
    {
      sub_1C0796F44();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1C0798484();
    }
  }
  sub_1C078783C();
  if (v1)
  {
    sub_1C07A2220(v5, v6, v7, v8, v9);
    v10 = (const void *)sub_1C0778598();
    sub_1C07A2F3C(v10);
    sub_1C079367C(v11 / 4);
  }
  else
  {
    v1 = MEMORY[0x1E0DEE9D8];
  }
  if ((v0 & 1) != 0)
  {
    sub_1C079B3D4();
    sub_1C07A06E0();
  }
  else
  {
    sub_1C0790D64(v5, v6, v1 + 32);
  }
  sub_1C07785E4();
}

void sub_1C07EC114()
{
  sub_1C0784BCC();
}

void sub_1C07EC130()
{
  sub_1C0798398();
}

void sub_1C07EC154()
{
  sub_1C0784BCC();
}

void sub_1C07EC170()
{
  sub_1C0784BCC();
}

void sub_1C07EC18C()
{
  sub_1C0798398();
}

void sub_1C07EC1B0()
{
  sub_1C0784BCC();
}

void sub_1C07EC1CC()
{
  sub_1C0784BCC();
}

void sub_1C07EC1E8()
{
  sub_1C0784BCC();
}

void sub_1C07EC204()
{
  sub_1C0798398();
}

void sub_1C07EC228()
{
  sub_1C07EB6B8();
}

void sub_1C07EC23C()
{
  sub_1C07EBA24();
}

void sub_1C07EC260()
{
  sub_1C07EAECC();
}

void sub_1C07EC27C()
{
  sub_1C0798398();
}

void sub_1C07EC2A0()
{
  sub_1C07EAECC();
}

void sub_1C07EC2BC()
{
  sub_1C0784BCC();
}

void sub_1C07EC2D8()
{
  sub_1C0784BCC();
}

void sub_1C07EC2F4()
{
  sub_1C0784BCC();
}

void sub_1C07EC310()
{
  sub_1C07EAECC();
}

void sub_1C07EC32C()
{
  sub_1C07EC340();
}

void sub_1C07EC340()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  _QWORD *v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1C07AD040();
  if ((v3 & 1) != 0)
  {
    sub_1C0799648();
    if (v4 != v5)
    {
      sub_1C0796F44();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_1C0798484();
    }
  }
  sub_1C079BCCC();
  if (v2)
  {
    sub_1C07A2220(v6, v7, v8, v9, v10);
    v11 = (_QWORD *)sub_1C0778598();
    v12 = j__malloc_size(v11);
    v11[2] = v1;
    v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
  }
  if ((v0 & 1) != 0)
  {
    sub_1C07AA640();
    sub_1C07A06E0();
  }
  else
  {
    v13 = sub_1C079BCDC();
    sub_1C07EECE8(v13, v14);
  }
  sub_1C07785E4();
}

void sub_1C07EC3E4()
{
  sub_1C07EBD4C();
}

void sub_1C07EC400()
{
  sub_1C07EB850();
}

void sub_1C07EC414()
{
  sub_1C07EC340();
}

void sub_1C07EC428()
{
  sub_1C0784BCC();
}

void sub_1C07EC444()
{
  sub_1C0784BCC();
}

void sub_1C07EC460()
{
  sub_1C0784BCC();
}

void sub_1C07EC47C()
{
  sub_1C0784BCC();
}

void sub_1C07EC498()
{
  sub_1C0784BCC();
}

void sub_1C07EC4B4()
{
  sub_1C0784BCC();
}

void sub_1C07EC4D0()
{
  sub_1C07EAECC();
}

void sub_1C07EC4EC()
{
  sub_1C07EBB0C();
}

void sub_1C07EC508()
{
  sub_1C0784BCC();
}

void sub_1C07EC524()
{
  sub_1C0784BCC();
}

void sub_1C07EC540()
{
  sub_1C0798398();
}

void sub_1C07EC564()
{
  sub_1C07EBA24();
}

void sub_1C07EC588()
{
  sub_1C07EC5AC();
}

void sub_1C07EC5AC()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  size_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  _QWORD *v11;

  sub_1C077B61C();
  sub_1C0791984();
  if ((v3 & 1) != 0)
  {
    sub_1C0799648();
    if (v4 != v5)
    {
      sub_1C0796F44();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_1C0798484();
    }
  }
  sub_1C07B9594();
  if (v2)
  {
    sub_1C07A2220(v6, v7, v8, v9, v10);
    v11 = (_QWORD *)sub_1C0778598();
    v6 = j__malloc_size(v11);
    v11[2] = v1;
    v11[3] = 2 * ((uint64_t)(v6 - 32) / 32);
  }
  else
  {
    v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  if ((v0 & 1) != 0)
  {
    sub_1C07B4680();
    sub_1C07A06E0();
  }
  else
  {
    sub_1C07A7C60(v6, v7, (uint64_t)(v11 + 4));
  }
  sub_1C077C798();
}

void sub_1C07EC64C()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  const void *v10;
  uint64_t v11;

  sub_1C078F0F4();
  if ((v2 & 1) != 0)
  {
    sub_1C0799648();
    if (v3 != v4)
    {
      sub_1C0796F44();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1C0798484();
    }
  }
  sub_1C078783C();
  if (v1)
  {
    sub_1C07A2220(v5, v6, v7, v8, v9);
    v10 = (const void *)sub_1C0778598();
    sub_1C07A2F3C(v10);
    sub_1C079367C(v11 / 2);
  }
  else
  {
    v1 = MEMORY[0x1E0DEE9D8];
  }
  if ((v0 & 1) != 0)
  {
    sub_1C079B3D4();
    sub_1C07A06E0();
  }
  else
  {
    sub_1C0790D64(v5, v6, v1 + 32);
  }
  sub_1C07785E4();
}

void sub_1C07EC6E0()
{
  sub_1C0784BCC();
}

void sub_1C07EC6FC()
{
  sub_1C0784BCC();
}

void sub_1C07EC718()
{
  sub_1C0784BCC();
}

void sub_1C07EC734()
{
  sub_1C07EBB0C();
}

void sub_1C07EC750()
{
  sub_1C07EAECC();
}

void sub_1C07EC76C()
{
  sub_1C07EAECC();
}

void sub_1C07EC788()
{
  sub_1C07EAECC();
}

void sub_1C07EC7A4()
{
  sub_1C0798398();
}

void sub_1C07EC7C8()
{
  sub_1C0798398();
}

void sub_1C07EC7EC()
{
  sub_1C07EBC50();
}

void sub_1C07EC808()
{
  sub_1C0798398();
}

void sub_1C07EC82C()
{
  sub_1C07EBA24();
}

void sub_1C07EC850()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  _QWORD *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  sub_1C079ED54();
  if ((v2 & 1) != 0)
  {
    sub_1C0799648();
    if (v3 != v4)
    {
      sub_1C0796F44();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1C0798484();
    }
  }
  sub_1C078C74C();
  if (v1)
  {
    sub_1C07ACF80(&qword_1ED7481C0);
    v5 = (_QWORD *)sub_1C0778598();
    sub_1C079FC68(v5);
  }
  if ((v0 & 1) != 0)
  {
    v6 = (char *)sub_1C07A9D2C();
    sub_1C09D2968(v6, v7, v8);
    sub_1C07A06E0();
  }
  else
  {
    v9 = sub_1C0797B70();
    sub_1C07EF240(v9, v10, v11, v12);
  }
  sub_1C07785E4();
}

void sub_1C07EC8EC()
{
  sub_1C0784BCC();
}

void sub_1C07EC908()
{
  sub_1C07EBD4C();
}

void sub_1C07EC924()
{
  sub_1C07EB6B8();
}

char *sub_1C07EC938(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_1C07ACF80(&qword_1ED755780);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 152);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  if ((v5 & 1) != 0)
  {
    sub_1C09D25AC((char *)(a4 + 32), v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C07EF3E4(0, v8, (unint64_t)v12, a4);
  }
  return v10;
}

void sub_1C07ECA2C()
{
  sub_1C07EBD4C();
}

void sub_1C07ECA48()
{
  sub_1C0798398();
}

void sub_1C07ECA6C()
{
  sub_1C0798398();
}

void sub_1C07ECA90()
{
  sub_1C0784BCC();
}

void sub_1C07ECAAC()
{
  sub_1C0784BCC();
}

void sub_1C07ECAC8()
{
  sub_1C0784BCC();
}

void sub_1C07ECAE4()
{
  sub_1C07EBC50();
}

void sub_1C07ECB00()
{
  sub_1C07ECB1C();
}

void sub_1C07ECB1C()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  sub_1C077B61C();
  sub_1C078F0F4();
  if ((v2 & 1) != 0)
  {
    sub_1C0799648();
    if (v3 != v4)
    {
      sub_1C0796F44();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1C0798484();
    }
  }
  sub_1C078783C();
  if (v1)
  {
    sub_1C07A2220(v5, v6, v7, v8, v9);
    v10 = (_QWORD *)sub_1C0778598();
    sub_1C0794C74(v10);
  }
  if ((v0 & 1) != 0)
  {
    sub_1C079B3D4();
    sub_1C07A06E0();
  }
  else
  {
    v11 = sub_1C0792CD0();
    sub_1C07EF5DC(v11, v12, v13, v14);
  }
  sub_1C077C798();
}

void sub_1C07ECBAC()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  _QWORD *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  sub_1C079ED54();
  if ((v2 & 1) != 0)
  {
    sub_1C0799648();
    if (v3 != v4)
    {
      sub_1C0796F44();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1C0798484();
    }
  }
  sub_1C078C74C();
  if (v1)
  {
    sub_1C07ACF80(&qword_1EF62FF48);
    v5 = (_QWORD *)sub_1C0778598();
    sub_1C079FC68(v5);
  }
  if ((v0 & 1) != 0)
  {
    v6 = (char *)sub_1C07A9D2C();
    sub_1C09D2ABC(v6, v7, v8);
    sub_1C07A06E0();
  }
  else
  {
    v9 = sub_1C0797B70();
    sub_1C07EF690(v9, v10, v11, v12);
  }
  sub_1C07785E4();
}

void sub_1C07ECC48()
{
  sub_1C0784BCC();
}

void sub_1C07ECC64()
{
  sub_1C0784BCC();
}

void sub_1C07ECC80()
{
  sub_1C0798398();
}

void sub_1C07ECCA4()
{
  sub_1C07EBD4C();
}

void sub_1C07ECCC0()
{
  sub_1C0784BCC();
}

void sub_1C07ECCDC()
{
  sub_1C07EAECC();
}

void sub_1C07ECCF8()
{
  sub_1C07EAECC();
}

void sub_1C07ECD14()
{
  sub_1C07EAECC();
}

void sub_1C07ECD30()
{
  sub_1C07EAECC();
}

void sub_1C07ECD4C()
{
  sub_1C07EAECC();
}

void sub_1C07ECD68()
{
  sub_1C07EAECC();
}

void sub_1C07ECD84()
{
  sub_1C07EAECC();
}

void sub_1C07ECDA0()
{
  sub_1C07EAECC();
}

void sub_1C07ECDBC()
{
  sub_1C07EAECC();
}

void sub_1C07ECDD8()
{
  sub_1C07EAECC();
}

void sub_1C07ECDF4()
{
  sub_1C07EABDC();
}

void sub_1C07ECE10()
{
  sub_1C07EBD4C();
}

void sub_1C07ECE2C()
{
  sub_1C0798398();
}

void sub_1C07ECE50()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  _QWORD *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  sub_1C079ED54();
  if ((v2 & 1) != 0)
  {
    sub_1C0799648();
    if (v3 != v4)
    {
      sub_1C0796F44();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1C0798484();
    }
  }
  sub_1C078C74C();
  if (v1)
  {
    sub_1C07ACF80(&qword_1EF6301E0);
    v5 = (_QWORD *)sub_1C0778598();
    sub_1C079FC68(v5);
  }
  if ((v0 & 1) != 0)
  {
    v6 = (char *)sub_1C07A9D2C();
    sub_1C09D2BB4(v6, v7, v8);
    sub_1C07A06E0();
  }
  else
  {
    v9 = sub_1C0797B70();
    sub_1C07EF8A4(v9, v10, v11, v12);
  }
  sub_1C07785E4();
}

void sub_1C07ECEEC()
{
  sub_1C0784BCC();
}

void sub_1C07ECF08()
{
  sub_1C0784BCC();
}

void sub_1C07ECF24()
{
  sub_1C07ECF40();
}

void sub_1C07ECF40()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  const void *v10;
  uint64_t v11;

  sub_1C078F0F4();
  if ((v2 & 1) != 0)
  {
    sub_1C0799648();
    if (v3 != v4)
    {
      sub_1C0796F44();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1C0798484();
    }
  }
  sub_1C078783C();
  if (v1)
  {
    sub_1C07A2220(v5, v6, v7, v8, v9);
    v10 = (const void *)sub_1C0778598();
    sub_1C07A2F3C(v10);
    sub_1C079367C(v11 / 64);
  }
  else
  {
    v1 = MEMORY[0x1E0DEE9D8];
  }
  if ((v0 & 1) != 0)
  {
    sub_1C079B3D4();
    sub_1C07A06E0();
  }
  else
  {
    sub_1C0790D64(v5, v6, v1 + 32);
  }
  sub_1C07785E4();
}

void sub_1C07ECFD4()
{
  sub_1C0784BCC();
}

void sub_1C07ECFF0()
{
  sub_1C0784BCC();
}

void sub_1C07ED00C()
{
  sub_1C07EC5AC();
}

void sub_1C07ED030()
{
  sub_1C07EC5AC();
}

void sub_1C07ED054()
{
  sub_1C07ED078();
}

void sub_1C07ED078()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  _QWORD *v10;

  sub_1C077B61C();
  sub_1C0791984();
  if ((v2 & 1) != 0)
  {
    sub_1C0799648();
    if (v3 != v4)
    {
      sub_1C0796F44();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1C0798484();
    }
  }
  sub_1C07B9594();
  if (v1)
  {
    sub_1C07A2220(v5, v6, v7, v8, v9);
    v10 = (_QWORD *)sub_1C0778598();
    v5 = sub_1C07B1CA4(v10);
  }
  else
  {
    v1 = MEMORY[0x1E0DEE9D8];
  }
  if ((v0 & 1) != 0)
  {
    sub_1C07B4680();
    sub_1C07A06E0();
  }
  else
  {
    sub_1C07A7C60(v5, v6, v1 + 32);
  }
  sub_1C077C798();
}

void sub_1C07ED104()
{
  sub_1C07ED078();
}

void sub_1C07ED128()
{
  sub_1C07EC5AC();
}

void sub_1C07ED14C()
{
  sub_1C07ED078();
}

void sub_1C07ED170()
{
  sub_1C0784BCC();
}

void sub_1C07ED18C()
{
  sub_1C07EBD4C();
}

void sub_1C07ED1A8()
{
  sub_1C0784BCC();
}

void sub_1C07ED1C4()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  _QWORD *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  sub_1C079ED54();
  if ((v2 & 1) != 0)
  {
    sub_1C0799648();
    if (v3 != v4)
    {
      sub_1C0796F44();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1C0798484();
    }
  }
  sub_1C078C74C();
  if (v1)
  {
    sub_1C07ACF80(&qword_1ED7513B0);
    v5 = (_QWORD *)sub_1C0778598();
    sub_1C079FC68(v5);
  }
  if ((v0 & 1) != 0)
  {
    v6 = (char *)sub_1C07A9D2C();
    sub_1C09D285C(v6, v7, v8);
    sub_1C07A06E0();
  }
  else
  {
    v9 = sub_1C0797B70();
    sub_1C07EFBF0(v9, v10, v11, v12);
  }
  sub_1C07785E4();
}

void sub_1C07ED260()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  _QWORD *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  sub_1C079ED54();
  if ((v2 & 1) != 0)
  {
    sub_1C0799648();
    if (v3 != v4)
    {
      sub_1C0796F44();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1C0798484();
    }
  }
  sub_1C078C74C();
  if (v1)
  {
    sub_1C07ACF80(&qword_1EF630070);
    v5 = (_QWORD *)sub_1C0778598();
    sub_1C079FC68(v5);
  }
  if ((v0 & 1) != 0)
  {
    v6 = (char *)sub_1C07A9D2C();
    sub_1C09D2D58(v6, v7, v8);
    sub_1C07A06E0();
  }
  else
  {
    v9 = sub_1C0797B70();
    sub_1C07EFCF0(v9, v10, v11, v12);
  }
  sub_1C07785E4();
}

void sub_1C07ED2FC()
{
  sub_1C0784BCC();
}

void sub_1C07ED318()
{
  sub_1C0798398();
}

void sub_1C07ED33C()
{
  sub_1C07EBB0C();
}

void sub_1C07ED358()
{
  sub_1C0784BCC();
}

void sub_1C07ED374()
{
  sub_1C07EC5AC();
}

void sub_1C07ED398()
{
  sub_1C0798398();
}

void sub_1C07ED3BC()
{
  sub_1C07EBD4C();
}

void sub_1C07ED3D8()
{
  sub_1C0784BCC();
}

void sub_1C07ED3F4()
{
  sub_1C0784BCC();
}

void sub_1C07ED410()
{
  sub_1C0784BCC();
}

void sub_1C07ED42C()
{
  sub_1C0798398();
}

void sub_1C07ED450()
{
  sub_1C0784BCC();
}

void sub_1C07ED46C()
{
  sub_1C07EBD4C();
}

void sub_1C07ED488()
{
  sub_1C07EBD4C();
}

void sub_1C07ED4A4()
{
  sub_1C0784BCC();
}

void sub_1C07ED4C0()
{
  sub_1C07EABDC();
}

void sub_1C07ED4DC()
{
  sub_1C0784BCC();
}

void sub_1C07ED4F8()
{
  sub_1C07EB7AC();
}

void sub_1C07ED514()
{
  sub_1C0784BCC();
}

void sub_1C07ED530()
{
  sub_1C07ED54C();
}

void sub_1C07ED54C()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  _QWORD *v10;

  sub_1C077B61C();
  sub_1C078F0F4();
  if ((v2 & 1) != 0)
  {
    sub_1C0799648();
    if (v3 != v4)
    {
      sub_1C0796F44();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1C0798484();
    }
  }
  sub_1C078783C();
  if (v1)
  {
    sub_1C07A2220(v5, v6, v7, v8, v9);
    v10 = (_QWORD *)sub_1C0778598();
    v5 = sub_1C0794C74(v10);
  }
  else
  {
    v1 = MEMORY[0x1E0DEE9D8];
  }
  if ((v0 & 1) != 0)
  {
    sub_1C079B3D4();
    sub_1C07A06E0();
  }
  else
  {
    sub_1C0790D64(v5, v6, v1 + 32);
  }
  sub_1C077C798();
}

void sub_1C07ED5D8()
{
  sub_1C0784BCC();
}

void sub_1C07ED5F4()
{
  sub_1C07EBC50();
}

void sub_1C07ED610()
{
  sub_1C07EAECC();
}

uint64_t sub_1C07ED62C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_1C07ACF80(&qword_1EF62FF70);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1C10709F0();
  __break(1u);
  return result;
}

uint64_t sub_1C07ED740(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_1C07ACF80(&qword_1EF62FF60);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1C10709F0();
  __break(1u);
  return result;
}

char *sub_1C07ED85C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = &__dst[8 * v4];
    if (v5 >= v6 || &v5[8 * v4] <= __dst)
    {
      memcpy(__dst, v5, 8 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_1C10709F0();
  __break(1u);
  return result;
}

uint64_t sub_1C07ED94C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_1C07ACF80(&qword_1EF630038);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1C10709F0();
  __break(1u);
  return result;
}

uint64_t sub_1C07EDA68(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1C10709F0();
  __break(1u);
  return result;
}

char *sub_1C07EDB64(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_1C10709F0();
  __break(1u);
  return result;
}

uint64_t sub_1C07EDC50(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + (a1 << 6) + 32;
    v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1C10709F0();
  __break(1u);
  return result;
}

char *sub_1C07EDD44(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 4 * a1 + 32);
    v6 = &__dst[4 * v4];
    if (v5 >= v6 || &v5[4 * v4] <= __dst)
    {
      memcpy(__dst, v5, 4 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_1C10709F0();
  __break(1u);
  return result;
}

uint64_t sub_1C07EDE34(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 72 * a1 + 32;
    v6 = a3 + 72 * v4;
    if (v5 >= v6 || v5 + 72 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1C10709F0();
  __break(1u);
  return result;
}

char *sub_1C07EDF30(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 2 * a1 + 32);
    v6 = &__dst[2 * v4];
    if (v5 >= v6 || &v5[2 * v4] <= __dst)
    {
      memcpy(__dst, v5, 2 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_1C10709F0();
  __break(1u);
  return result;
}

uint64_t sub_1C07EE020(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1C10709F0();
  __break(1u);
  return result;
}

uint64_t sub_1C07EE118(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1C10709F0();
  __break(1u);
  return result;
}

uint64_t sub_1C07EE20C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_1C07ACF80(&qword_1EF62FEA0);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1C10709F0();
  __break(1u);
  return result;
}

uint64_t sub_1C07EE328(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_1C07ACF80(&qword_1EF62FEC0);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1C10709F0();
  __break(1u);
  return result;
}

uint64_t sub_1C07EE444(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_1C07ACF80(&qword_1EF62FEC8);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1C10709F0();
  __break(1u);
  return result;
}

uint64_t sub_1C07EE560(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_1C07ACF80(&qword_1ED758D20);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1C10709F0();
  __break(1u);
  return result;
}

uint64_t sub_1C07EE674(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1C10709F0();
  __break(1u);
  return result;
}

uint64_t sub_1C07EE768(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      sub_1C07ACF80(&qword_1EF62FED8);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1C10709F0();
  __break(1u);
  return result;
}

uint64_t sub_1C07EE884(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_1C07ACF80(&qword_1EF62FF38);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1C10709F0();
  __break(1u);
  return result;
}

uint64_t sub_1C07EE998(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1C10709F0();
  __break(1u);
  return result;
}

uint64_t sub_1C07EEA94(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1C10709F0();
  __break(1u);
  return result;
}

void sub_1C07EEB90(uint64_t a1, uint64_t a2, char *a3, uint64_t a4)
{
  uint64_t v4;
  char *v5;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    sub_1C07A3684();
    sub_1C0799658();
    goto LABEL_11;
  }
  v5 = (char *)(a4 + 8 * a1 + 32);
  if (v5 >= &a3[8 * v4] || &v5[8 * v4] <= a3)
  {
    sub_1C07B889C(a3, v5, 8 * v4);
    sub_1C07767AC();
    sub_1C0779CF8();
    return;
  }
  sub_1C07A3684();
  sub_1C078782C();
LABEL_11:
  sub_1C079A704();
  __break(1u);
}

void sub_1C07EEC3C(uint64_t a1, uint64_t a2, char *a3, uint64_t a4)
{
  uint64_t v4;
  char *v5;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    sub_1C07A3684();
    sub_1C0799658();
    goto LABEL_11;
  }
  v5 = (char *)(a4 + 16 * a1 + 32);
  if (v5 >= &a3[16 * v4] || &v5[16 * v4] <= a3)
  {
    sub_1C07B889C(a3, v5, 16 * v4);
    sub_1C07767AC();
    sub_1C0779CF8();
    return;
  }
  sub_1C07A3684();
  sub_1C078782C();
LABEL_11:
  sub_1C079A704();
  __break(1u);
}

void sub_1C07EECE8(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;

  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a2 - a1 < 0)
  {
LABEL_9:
    sub_1C07A3684();
    sub_1C0799658();
    goto LABEL_11;
  }
  sub_1C07AE77C();
  v5 = 3 * v4;
  if (v2 >= &v3[8 * v5] || &v2[8 * v5] <= v3)
  {
    sub_1C07B889C(v3, v2, 8 * v5);
    sub_1C07767AC();
    sub_1C0779CF8();
    return;
  }
  sub_1C07A3684();
  sub_1C078782C();
LABEL_11:
  sub_1C079A704();
  __break(1u);
}

char *sub_1C07EED90(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 16 * a1 + 32);
    v6 = &__dst[16 * v4];
    if (v5 >= v6 || &v5[16 * v4] <= __dst)
    {
      memcpy(__dst, v5, 16 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_1C10709F0();
  __break(1u);
  return result;
}

uint64_t sub_1C07EEE80(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1C10709F0();
  __break(1u);
  return result;
}

void sub_1C07EEF74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  char v8;
  BOOL v9;

  sub_1C079F2C0();
  if (__OFSUB__(v1, v0))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v1 - v0 < 0)
  {
LABEL_9:
    sub_1C07A3684();
    sub_1C0799658();
    goto LABEL_11;
  }
  sub_1C0790698();
  if (v8)
    v9 = 0;
  else
    v9 = v7 > v4;
  if (!v9)
  {
    sub_1C07A2220(v2, v3, v4, v5, v6);
    sub_1C078AA60();
    sub_1C07767AC();
    sub_1C079B3E0();
    return;
  }
  sub_1C07A3684();
  sub_1C078782C();
LABEL_11:
  sub_1C079A704();
  __break(1u);
}

uint64_t sub_1C07EF010(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      sub_1C07ACF80(&qword_1ED7462C0);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1C10709F0();
  __break(1u);
  return result;
}

uint64_t sub_1C07EF124(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_1C07ACF80(&qword_1EF6301B8);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1C10709F0();
  __break(1u);
  return result;
}

uint64_t sub_1C07EF240(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 88 * a1 + 32;
    v6 = a3 + 88 * v4;
    if (v5 >= v6 || v5 + 88 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1C10709F0();
  __break(1u);
  return result;
}

void sub_1C07EF33C(uint64_t a1, uint64_t a2, char *a3, uint64_t a4)
{
  size_t v4;
  char *v5;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if ((v4 & 0x8000000000000000) != 0)
  {
LABEL_9:
    sub_1C07A3684();
    sub_1C0799658();
    goto LABEL_11;
  }
  v5 = (char *)(a4 + a1 + 32);
  if (v5 >= &a3[v4] || &v5[v4] <= a3)
  {
    sub_1C07B889C(a3, v5, v4);
    sub_1C07767AC();
    sub_1C0779CF8();
    return;
  }
  sub_1C07A3684();
  sub_1C078782C();
LABEL_11:
  sub_1C079A704();
  __break(1u);
}

uint64_t sub_1C07EF3E4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 152 * a1 + 32;
    v6 = a3 + 152 * v4;
    if (v5 >= v6 || v5 + 152 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1C10709F0();
  __break(1u);
  return result;
}

uint64_t sub_1C07EF4E0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1C10709F0();
  __break(1u);
  return result;
}

void sub_1C07EF5DC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    sub_1C07A3684();
    sub_1C0799658();
    goto LABEL_11;
  }
  v5 = a4 + 56 * a1 + 32;
  if (v5 >= a3 + 56 * v4 || v5 + 56 * v4 <= a3)
  {
    sub_1C07B3F10();
    sub_1C07767AC();
    sub_1C0779CF8();
    return;
  }
  sub_1C07A3684();
  sub_1C078782C();
LABEL_11:
  sub_1C079A704();
  __break(1u);
}

uint64_t sub_1C07EF690(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 224 * a1 + 32;
    v6 = a3 + 224 * v4;
    if (v5 >= v6 || v5 + 224 * v4 <= a3)
    {
      sub_1C07ACF80(&qword_1EF62FF50);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1C10709F0();
  __break(1u);
  return result;
}

uint64_t sub_1C07EF7B0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1C10709F0();
  __break(1u);
  return result;
}

uint64_t sub_1C07EF8A4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 160 * a1 + 32;
    v6 = a3 + 160 * v4;
    if (v5 >= v6 || v5 + 160 * v4 <= a3)
    {
      sub_1C07ACF80(&qword_1EF6301E8);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1C10709F0();
  __break(1u);
  return result;
}

uint64_t sub_1C07EF9C0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + (a1 << 6) + 32;
    v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1C10709F0();
  __break(1u);
  return result;
}

void sub_1C07EFAB4(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  char v4;
  BOOL v5;

  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a2 - a1 < 0)
  {
LABEL_9:
    sub_1C07A3684();
    sub_1C0799658();
    goto LABEL_11;
  }
  sub_1C078D360();
  if (v4)
    v5 = 0;
  else
    v5 = v3 > v2;
  if (!v5)
  {
    sub_1C07B3F10();
    sub_1C07767AC();
    sub_1C0779CF8();
    return;
  }
  sub_1C07A3684();
  sub_1C078782C();
LABEL_11:
  sub_1C079A704();
  __break(1u);
}

void sub_1C07EFB48(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    sub_1C07A3684();
    sub_1C0799658();
    goto LABEL_11;
  }
  v5 = a4 + 32 * a1 + 32;
  if (v5 >= a3 + 32 * v4 || v5 + 32 * v4 <= a3)
  {
    sub_1C07B3F10();
    sub_1C07767AC();
    sub_1C0779CF8();
    return;
  }
  sub_1C07A3684();
  sub_1C078782C();
LABEL_11:
  sub_1C079A704();
  __break(1u);
}

uint64_t sub_1C07EFBF0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 56 * a1 + 32;
    v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1C10709F0();
  __break(1u);
  return result;
}

uint64_t sub_1C07EFCF0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 176 * a1 + 32;
    v6 = a3 + 176 * v4;
    if (v5 >= v6 || v5 + 176 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1C10709F0();
  __break(1u);
  return result;
}

uint64_t sub_1C07EFDEC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1C10709F0();
  __break(1u);
  return result;
}

uint64_t sub_1C07EFEE8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1C10709F0();
  __break(1u);
  return result;
}

void sub_1C07EFFDC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;

  sub_1C079F2C0();
  v5 = v1 - v0;
  if (__OFSUB__(v1, v0))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    sub_1C07A3684();
    sub_1C0799658();
    goto LABEL_11;
  }
  v6 = v3 + 32 * v0 + 32;
  if (v6 >= v2 + 32 * v5 || v6 + 32 * v5 <= v2)
  {
    sub_1C07A2220(v0, v1, v2, v3, v4);
    sub_1C078AA60();
    sub_1C07767AC();
    sub_1C079B3E0();
    return;
  }
  sub_1C07A3684();
  sub_1C078782C();
LABEL_11:
  sub_1C079A704();
  __break(1u);
}

void sub_1C07F0090()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;

  sub_1C079F2C0();
  v5 = v1 - v0;
  if (__OFSUB__(v1, v0))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    sub_1C07A3684();
    sub_1C0799658();
    goto LABEL_11;
  }
  v6 = v3 + 8 * v0 + 32;
  if (v6 >= v2 + 8 * v5 || v6 + 8 * v5 <= v2)
  {
    sub_1C07A2220(v0, v1, v2, v3, v4);
    sub_1C078AA60();
    sub_1C07767AC();
    sub_1C079B3E0();
    return;
  }
  sub_1C07A3684();
  sub_1C078782C();
LABEL_11:
  sub_1C079A704();
  __break(1u);
}

uint64_t sub_1C07F0144(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 72 * a1 + 32;
    v6 = a3 + 72 * v4;
    if (v5 >= v6 || v5 + 72 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1C10709F0();
  __break(1u);
  return result;
}

void sub_1C07F0240(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a2 - a1 < 0)
  {
LABEL_9:
    sub_1C07A3684();
    sub_1C0799658();
    goto LABEL_11;
  }
  sub_1C07AE77C();
  if (v2 >= v3 + 24 * v4 || v2 + 24 * v4 <= v3)
  {
    sub_1C07B3F10();
    sub_1C07767AC();
    sub_1C0779CF8();
    return;
  }
  sub_1C07A3684();
  sub_1C078782C();
LABEL_11:
  sub_1C079A704();
  __break(1u);
}

uint64_t sub_1C07F02E4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_1C07ACF80(&qword_1EF630048);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1C10709F0();
  __break(1u);
  return result;
}

void sub_1C07F0400(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  unint64_t v6;
  char v7;
  BOOL v8;

  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a2 - a1 < 0)
  {
LABEL_9:
    sub_1C07A3684();
    sub_1C0799658();
    goto LABEL_11;
  }
  sub_1C07A2220(a1, a2, a3, a4, a5);
  sub_1C079C274();
  if (v7)
    v8 = 0;
  else
    v8 = v6 > a3;
  if (!v8)
  {
    sub_1C079DACC();
    sub_1C07767AC();
    sub_1C077C0D8();
    return;
  }
  sub_1C07A3684();
  sub_1C078782C();
LABEL_11:
  sub_1C079A704();
  __break(1u);
}

uint64_t AppCategoryDistributionProvider.__allocating_init()()
{
  uint64_t v0;

  v0 = sub_1C0778598();
  AppCategoryDistributionProvider.init()();
  return v0;
}

uint64_t AppCategoryDistributionProvider.init()()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = 0x404E000000000000;
  *(_QWORD *)(v0 + 24) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D025D0]), sel_init);
  return v0;
}

uint64_t sub_1C07F0510(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _QWORD *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  char v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  unint64_t v22;
  uint64_t v23;
  void (*v24)(_QWORD *@<X8>);
  void (*v25)(_QWORD *@<X8>);
  void *v26;
  void *v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  unsigned __int8 v38;
  uint64_t v39;
  uint64_t v40;
  double v41;
  double v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  unint64_t v46;
  char v47;
  uint64_t *v48;
  unint64_t v49;
  char v50;
  double v51;
  unint64_t v52;
  char v53;
  char v54;
  unint64_t v55;
  uint64_t *v56;
  unint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t inited;
  uint64_t v64;
  uint64_t result;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  double v69;
  uint64_t v71;
  uint64_t v73[4];
  uint64_t v74[10];

  v3 = sub_1C07A06EC();
  *(_QWORD *)(v3 + 16) = sub_1C07A6724();
  v4 = sub_1C07A06EC();
  *(_QWORD *)(v4 + 16) = sub_1C07A6724();
  v5 = sub_1C07A06EC();
  *(_QWORD *)(v5 + 16) = sub_1C07A6724();
  v6 = sub_1C0778598();
  *(_QWORD *)(v6 + 16) = 0;
  *(_QWORD *)(v6 + 24) = 0xE000000000000000;
  v7 = MEMORY[0x1E0C809B0];
  v8 = sub_1C079FC44((uint64_t)sub_1C07BF90C);
  v9 = (_QWORD *)sub_1C0778598();
  v9[2] = v6;
  v9[3] = v5;
  v9[4] = v3;
  v9[5] = v4;
  v74[7] = (uint64_t)sub_1C07F1704;
  v74[8] = (uint64_t)v9;
  v74[3] = v7;
  v74[4] = 1107296256;
  v10 = sub_1C079FC44((uint64_t)sub_1C0779530);
  swift_retain();
  swift_retain();
  swift_retain();
  v71 = v4;
  swift_retain();
  swift_release();
  v11 = objc_msgSend(a3, sel_sinkWithCompletion_receiveInput_, v8, v10);
  _Block_release(v10);
  _Block_release(v8);

  sub_1C077F040();
  v12 = *(_QWORD *)(v6 + 16);
  v13 = *(_QWORD *)(v6 + 24);
  sub_1C077F040();
  v14 = *(_QWORD *)(v5 + 16);
  sub_1C07796D8();
  sub_1C089AA50(v12, v13, v14);
  v16 = v15;
  LOBYTE(v12) = v17;
  sub_1C0775844();
  if ((v12 & 1) != 0)
  {
    sub_1C07A3698();
    v24 = 0;
    v25 = 0;
LABEL_26:
    sub_1C077F040();
    swift_retain();
    v59 = sub_1C07767B4();
    v60 = sub_1C07DF7A4(v59);
    sub_1C07767AC();
    *(_QWORD *)(v3 + 16) = v60;
    swift_bridgeObjectRelease();
    sub_1C077F040();
    swift_retain();
    v61 = sub_1C07767B4();
    v62 = sub_1C07DF7A4(v61);
    sub_1C07767AC();
    *(_QWORD *)(v71 + 16) = v62;
    swift_bridgeObjectRelease();
    sub_1C07ACF80(&qword_1EF630318);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1078FC0;
    *(_QWORD *)(inited + 32) = 0xD000000000000019;
    *(_QWORD *)(inited + 40) = 0x80000001C10E2840;
    *(_QWORD *)(inited + 48) = *(_QWORD *)(v3 + 16);
    *(_QWORD *)(inited + 56) = 0xD000000000000020;
    *(_QWORD *)(inited + 64) = 0x80000001C10E2860;
    *(_QWORD *)(inited + 72) = *(_QWORD *)(v71 + 16);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C07796D8();
    sub_1C07ACF80(&qword_1ED75E818);
    v64 = sub_1C106F97C();
    swift_release();
    swift_release();
    swift_release();
    sub_1C0780A00();
    sub_1C077AB58((uint64_t)v24);
    sub_1C077AB58((uint64_t)v25);
    return v64;
  }
  v69 = v16;
  sub_1C07A3698();
  if (qword_1ED762B18 != -1)
    swift_once();
  v18 = sub_1C106F544();
  sub_1C079E000(v18, (uint64_t)qword_1ED762AF8);
  swift_retain();
  v19 = sub_1C106F538();
  v20 = sub_1C10703A8();
  v67 = v3;
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc();
    v74[0] = swift_slowAlloc();
    *(_DWORD *)v21 = 136315138;
    v23 = *(_QWORD *)(v6 + 16);
    v22 = *(_QWORD *)(v6 + 24);
    sub_1C07767B4();
    v73[0] = sub_1C0788DAC(v23, v22, v74);
    sub_1C10705AC();
    sub_1C0780A00();
    sub_1C07767AC();
    _os_log_impl(&dword_1C0771000, v19, v20, "%s is still in progress", v21, 0xCu);
    swift_arrayDestroy();
    sub_1C0776778();
  }

  sub_1C0780A00();
  v26 = (void *)objc_opt_self();
  sub_1C07796D8();
  v27 = (void *)sub_1C106FAF0();
  sub_1C0775844();
  v28 = objc_msgSend(v26, sel_categoryForBundleId_, v27);

  v66 = v28;
  v29 = objc_msgSend(v28, sel_identifier);
  v30 = sub_1C106FB14();
  v32 = v31;

  v33 = *(_QWORD *)(v6 + 16);
  v34 = *(_QWORD *)(v6 + 24);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v35 = sub_1C0C2C5F8();
  if (*(_QWORD *)(v35 + 16))
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v36 = sub_1C077D774(v33, v34);
    if ((v37 & 1) != 0)
      v38 = *(_BYTE *)(*(_QWORD *)(v35 + 56) + v36);
    else
      v38 = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    v38 = 0;
  }
  sub_1C077960C();
  swift_bridgeObjectRelease();
  v68 = sub_1C0C2C3EC(v38);
  v40 = v39;
  sub_1C106AC60();
  v42 = v41;
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_isUniquelyReferenced_nonNull_native();
  sub_1C07AD9FC();
  v43 = v30;
  v44 = sub_1C077D774(v30, v32);
  if (__OFADD__(*(_QWORD *)(a2 + 16), (v45 & 1) == 0))
  {
    __break(1u);
    goto LABEL_28;
  }
  v46 = v44;
  v47 = v45;
  sub_1C07ACF80(&qword_1ED760850);
  v48 = v73;
  if ((sub_1C107090C() & 1) != 0)
  {
    v48 = (uint64_t *)v73[0];
    v49 = sub_1C077D774(v43, v32);
    if ((v47 & 1) != (v50 & 1))
      goto LABEL_29;
    v46 = v49;
  }
  v51 = v42 - v69;
  sub_1C07A2228(v73[0]);
  sub_1C07A4320();
  if ((v47 & 1) == 0)
  {
    sub_1C07DF97C(v46, v43, v32, (uint64_t)v48);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  *(double *)(v48[7] + 8 * v46) = v51 + *(double *)(v48[7] + 8 * v46);
  sub_1C07A3698();
  swift_bridgeObjectRelease_n();
  sub_1C077960C();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_isUniquelyReferenced_nonNull_native();
  sub_1C07AD9FC();
  v52 = sub_1C0796050();
  v54 = v53;
  if (__OFADD__(v48[2], (v53 & 1) == 0))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v55 = v52;
  v56 = v73;
  if ((sub_1C107090C() & 1) == 0)
  {
LABEL_23:
    sub_1C07A2228(v73[0]);
    sub_1C07A4320();
    if ((v54 & 1) == 0)
    {
      sub_1C07DF97C(v55, v68, v40, (uint64_t)v56);
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    }
    *(double *)(v56[7] + 8 * v55) = v51 + *(double *)(v56[7] + 8 * v55);
    sub_1C07A3698();
    swift_bridgeObjectRelease_n();
    sub_1C077960C();
    sub_1C077F040();
    sub_1C07796D8();
    sub_1C07F2AE4();
    sub_1C07A3698();
    sub_1C0775844();

    v25 = sub_1C07DC9B0;
    v24 = sub_1C07DC9B0;
    v3 = v67;
    goto LABEL_26;
  }
  v56 = (uint64_t *)v73[0];
  v57 = sub_1C0796050();
  if ((v54 & 1) == (v58 & 1))
  {
    v55 = v57;
    goto LABEL_23;
  }
LABEL_29:
  result = sub_1C1070D44();
  __break(1u);
  return result;
}

void sub_1C07F0D10(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v9;
  void *v10;
  uint64_t *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  char v24;
  uint64_t *v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  NSObject *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  unsigned __int8 v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  double v45;
  double v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  unint64_t v50;
  char v51;
  unint64_t v52;
  char v53;
  uint64_t *v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  unint64_t v61;
  unint64_t v62;
  char v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  NSObject *oslog;
  os_log_t osloga;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74[3];

  v9 = objc_msgSend(a1, sel_eventBody);
  if (v9)
  {
    v10 = v9;
    v11 = (uint64_t *)(a3 + 16);
    v12 = objc_msgSend(v9, sel_bundleID);
    v13 = sub_1C106FB14();
    v15 = v14;

    swift_beginAccess();
    *(_QWORD *)(a2 + 16) = v13;
    *(_QWORD *)(a2 + 24) = v15;
    swift_bridgeObjectRelease();
    if ((objc_msgSend(v10, sel_isStarting) & 1) != 0)
    {
      swift_beginAccess();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      objc_msgSend(v10, sel_absoluteTimestamp);
      swift_beginAccess();
      sub_1C089FA1C();
      swift_endAccess();

      swift_bridgeObjectRelease();
      return;
    }
    swift_beginAccess();
    v19 = *(_QWORD *)(a2 + 16);
    v20 = *(_QWORD *)(a2 + 24);
    swift_beginAccess();
    v21 = *v11;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C089AA50(v19, v20, v21);
    v23 = v22;
    LOBYTE(v19) = v24;
    swift_bridgeObjectRelease();
    if ((v19 & 1) != 0)
    {
      swift_endAccess();
      if (qword_1ED762B18 != -1)
        swift_once();
      v37 = sub_1C106F544();
      sub_1C079E000(v37, (uint64_t)qword_1ED762AF8);
      swift_retain_n();
      v38 = sub_1C106F538();
      v39 = sub_1C10703A8();
      if (os_log_type_enabled(v38, v39))
      {
        v40 = (uint8_t *)swift_slowAlloc();
        v41 = swift_slowAlloc();
        v74[0] = v41;
        *(_DWORD *)v40 = 136315138;
        swift_beginAccess();
        v42 = *(_QWORD *)(a2 + 16);
        v43 = *(_QWORD *)(a2 + 24);
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        sub_1C0788DAC(v42, v43, v74);
        sub_1C10705AC();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C0771000, v38, v39, "%s didn't have an isStarting event in the given time duration", v40, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BA8270](v41, -1, -1);
        MEMORY[0x1C3BA8270](v40, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      goto LABEL_34;
    }
    v67 = a5;
    v25 = (uint64_t *)(a4 + 16);
    swift_endAccess();
    v26 = (void *)objc_opt_self();
    swift_beginAccess();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v27 = (void *)sub_1C106FAF0();
    swift_bridgeObjectRelease();
    v28 = objc_msgSend(v26, sel_categoryForBundleId_, v27);

    v29 = objc_msgSend(v28, sel_identifier);
    v69 = sub_1C106FB14();
    osloga = v30;

    swift_beginAccess();
    v32 = *(_QWORD *)(a2 + 16);
    v31 = *(_QWORD *)(a2 + 24);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v33 = sub_1C0C2C5F8();
    v65 = v28;
    if (*(_QWORD *)(v33 + 16))
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v34 = sub_1C077D774(v32, v31);
      if ((v35 & 1) != 0)
        v36 = *(_BYTE *)(*(_QWORD *)(v33 + 56) + v34);
      else
        v36 = 0;
      swift_bridgeObjectRelease();
    }
    else
    {
      v36 = 0;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v68 = sub_1C0C2C3EC(v36);
    v66 = v44;
    objc_msgSend(v10, sel_absoluteTimestamp);
    v46 = v45;
    swift_beginAccess();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_isUniquelyReferenced_nonNull_native();
    v47 = *v25;
    v72 = *v25;
    *v25 = 0x8000000000000000;
    v48 = sub_1C077D774(v69, (uint64_t)osloga);
    if (__OFADD__(*(_QWORD *)(v47 + 16), (v49 & 1) == 0))
    {
      __break(1u);
    }
    else
    {
      v50 = v48;
      v51 = v49;
      sub_1C07ACF80(&qword_1ED760850);
      if ((sub_1C107090C() & 1) != 0)
      {
        v52 = sub_1C077D774(v69, (uint64_t)osloga);
        if ((v51 & 1) != (v53 & 1))
        {
LABEL_37:
          sub_1C1070D44();
          __break(1u);
          return;
        }
        v50 = v52;
      }
      v54 = (uint64_t *)(v67 + 16);
      v55 = v46 - v23;
      *v25 = v72;
      swift_bridgeObjectRelease();
      v56 = *v25;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      if ((v51 & 1) == 0)
      {
        sub_1C07DF97C(v50, v69, (uint64_t)osloga, v56);
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      }
      *(double *)(*(_QWORD *)(v56 + 56) + 8 * v50) = v55 + *(double *)(*(_QWORD *)(v56 + 56) + 8 * v50);
      swift_endAccess();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      swift_isUniquelyReferenced_nonNull_native();
      v57 = *v54;
      v73 = *v54;
      *v54 = 0x8000000000000000;
      v58 = sub_1C077D774(v68, v66);
      v60 = v59;
      if (!__OFADD__(*(_QWORD *)(v57 + 16), (v59 & 1) == 0))
      {
        v61 = v58;
        if ((sub_1C107090C() & 1) == 0)
        {
LABEL_31:
          *v54 = v73;
          swift_bridgeObjectRelease();
          v64 = *v54;
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          if ((v60 & 1) == 0)
          {
            sub_1C07DF97C(v61, v68, v66, v64);
            _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          }
          *(double *)(*(_QWORD *)(v64 + 56) + 8 * v61) = v55 + *(double *)(*(_QWORD *)(v64 + 56) + 8 * v61);
          swift_endAccess();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          swift_beginAccess();
          swift_beginAccess();
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          sub_1C07F2AE4();
          swift_endAccess();
          swift_bridgeObjectRelease();

LABEL_34:
          return;
        }
        v62 = sub_1C077D774(v68, v66);
        if ((v60 & 1) == (v63 & 1))
        {
          v61 = v62;
          goto LABEL_31;
        }
        goto LABEL_37;
      }
    }
    __break(1u);
    goto LABEL_37;
  }
  if (qword_1ED762B18 != -1)
    swift_once();
  v16 = sub_1C106F544();
  sub_1C079E000(v16, (uint64_t)qword_1ED762AF8);
  oslog = sub_1C106F538();
  v17 = sub_1C10703A8();
  if (os_log_type_enabled(oslog, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v18 = 0;
    _os_log_impl(&dword_1C0771000, oslog, v17, "Unable to parse eventBody from read event in app launch featurizer", v18, 2u);
    MEMORY[0x1C3BA8270](v18, -1, -1);
  }

}

uint64_t sub_1C07F14F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(void **)(v2 + 24);
  sub_1C106AC60();
  v5 = (void *)sub_1C1070168();
  sub_1C106AC60();
  v6 = (void *)sub_1C1070168();
  v7 = objc_msgSend(v4, sel_publisherWithStartTime_endTime_maxEvents_reversed_, v5, v6, 0, 0);

  v9 = sub_1C07F0510(v8, a2, v7);
  return v9;
}

uint64_t sub_1C07F159C()
{
  sub_1C07ACF80(&qword_1ED75E818);
  return sub_1C106F97C();
}

uint64_t AppCategoryDistributionProvider.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t AppCategoryDistributionProvider.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t sub_1C07F1614(uint64_t a1, uint64_t a2)
{
  return sub_1C07F14F8(a1, a2);
}

uint64_t type metadata accessor for AppCategoryDistributionProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for AppCategoryDistributionProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AppCategoryDistributionProvider.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of AppCategoryDistributionProvider.distribution(from:to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of AppCategoryDistributionProvider.remoteDistribution(from:to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t sub_1C07F1680()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C07F16A4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C07F16C8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1C07F1704(void *a1)
{
  uint64_t *v1;

  sub_1C07F0D10(a1, v1[2], v1[3], v1[4], v1[5]);
}

void sub_1C07F1770()
{
  char v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;

  v0 = 0;
  v25 = MEMORY[0x1E0DEE9D8];
  while (2)
  {
    v1 = 0;
    v22 = v0;
    v2 = MEMORY[0x1E0DEE9D8];
    do
    {
      v24 = v2;
      v3 = 0;
      v23 = v1;
      v4 = MEMORY[0x1E0DEE9D8];
      do
      {
        v5 = sub_1C07F19C4();
        v7 = v6;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C079DADC();
          v4 = v12;
        }
        v8 = *(_QWORD *)(v4 + 16);
        v9 = v8 + 1;
        if (v8 >= *(_QWORD *)(v4 + 24) >> 1)
        {
          sub_1C079DADC();
          v4 = v13;
        }
        ++v3;
        *(_QWORD *)(v4 + 16) = v9;
        v10 = v4 + 32;
        v11 = (uint64_t *)(v4 + 32 + 16 * v8);
        *v11 = v5;
        v11[1] = v7;
      }
      while (v3 != 3);
      v2 = v24;
      v14 = *(_QWORD *)(v24 + 16);
      if (__OFADD__(v14, v9))
      {
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        sub_1C10709F0();
        __break(1u);
        return;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0
        || (int64_t)(v14 + v9) > *(_QWORD *)(v24 + 24) >> 1)
      {
        sub_1C07B7730();
        v2 = v15;
      }
      if (!*(_QWORD *)(v4 + 16))
        goto LABEL_27;
      v16 = *(_QWORD *)(v2 + 16);
      if ((*(_QWORD *)(v2 + 24) >> 1) - v16 <= (uint64_t)v8)
        goto LABEL_25;
      v17 = v2 + 16 * v16 + 32;
      if (v10 < v17 + 16 * v9 && v17 < v10 + 16 * v9)
        goto LABEL_28;
      swift_arrayInitWithCopy();
      v19 = *(_QWORD *)(v2 + 16);
      v20 = __OFADD__(v19, v9);
      v21 = v19 + v9;
      if (v20)
        goto LABEL_26;
      *(_QWORD *)(v2 + 16) = v21;
      sub_1C0778580();
      v1 = 1;
    }
    while ((v23 & 1) == 0);
    sub_1C0BD9D50();
    v0 = 1;
    if ((v22 & 1) == 0)
      continue;
    break;
  }
  sub_1C0898D28(v25);
}

uint64_t sub_1C07F19C4()
{
  char v0;
  uint64_t v1;
  uint64_t v3;

  sub_1C079FC8C();
  v1 = 0x65645F6C61636F6CLL;
  if ((v0 & 1) == 0)
    v1 = 0x645F65746F6D6572;
  v3 = v1;
  sub_1C077584C();
  sub_1C106FC94();
  sub_1C0778580();
  sub_1C077584C();
  sub_1C106FC94();
  sub_1C0778580();
  sub_1C077B5B4();
  sub_1C07796D8();
  sub_1C106FC94();
  sub_1C0775844();
  sub_1C07796D8();
  sub_1C106FC94();
  sub_1C0775844();
  swift_bridgeObjectRelease();
  return v3;
}

double sub_1C07F1B74()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  double result;

  type metadata accessor for MotionStateDistributionProvider();
  v0 = sub_1C0778598();
  *(_QWORD *)(v0 + 16) = 0x404E000000000000;
  type metadata accessor for MotionStateActivityIntervalProvider();
  sub_1C0778598();
  v1 = MotionStateActivityIntervalProvider.init(motionStateDistributionProvider:)(v0);
  type metadata accessor for AppCategoryDistributionProvider();
  sub_1C0778598();
  v2 = AppCategoryDistributionProvider.init()();
  v3 = sub_1C0778598();
  result = 1800.0;
  *(_OWORD *)(v3 + 48) = xmmword_1C10794B0;
  *(_QWORD *)(v3 + 32) = v1;
  *(_QWORD *)(v3 + 40) = v2;
  *(_QWORD *)(v3 + 16) = sub_1C07D4004;
  *(_QWORD *)(v3 + 24) = 0;
  return result;
}

uint64_t sub_1C07F1C1C(unsigned __int8 a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v2 = sub_1C106ADE0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 > 1u)
  {
    sub_1C07ACF80(&qword_1ED75E818);
    return sub_1C106F97C();
  }
  else
  {
    sub_1C106AD2C();
    sub_1C07ACF80(&qword_1ED75E818);
    v6 = sub_1C106F97C();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return v6;
  }
}

uint64_t sub_1C07F1D38(unsigned __int8 a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_1C106ADE0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 > 1u)
  {
    v12 = type metadata accessor for ActivityInterval();
    return sub_1C07F14F8(a2, a2 + *(int *)(v12 + 20));
  }
  else
  {
    sub_1C106AD2C();
    v10 = sub_1C07F14F8((uint64_t)v9, a3);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return v10;
  }
}

uint64_t sub_1C07F1E30(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = v1;
  type metadata accessor for ActivityInterval();
  v2[4] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C07F1E88()
{
  uint64_t *v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  v0[5] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_1C07F1EE0;
  return sub_1C0C3BA2C(v0[4], v0[2]);
}

uint64_t sub_1C07F1EE0()
{
  sub_1C07862EC();
  return swift_task_switch();
}

void sub_1C07F1F28(uint64_t a1)
{
  uint64_t v1;
  char v2;
  _QWORD *v3;
  char v4;
  unint64_t v5;
  _QWORD *v6;
  char v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  BOOL v31;
  unint64_t v32;
  int64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  unint64_t v42;
  void *v43;
  id v44;
  unint64_t v45;
  char v46;
  unint64_t v47;
  char v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char v56;
  char v57;
  uint64_t v58;
  unint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v2 = sub_1C077583C(a1, (unint64_t *)&qword_1ED758D30);
  v3 = (_QWORD *)sub_1C106F97C();
  v4 = 0;
  v5 = 0;
  v6 = &unk_1E79FB000;
  v57 = v2;
  v58 = v1;
LABEL_2:
  if (v5 >= v6[500])
    goto LABEL_71;
  v55 = v4;
  v7 = 0;
  v8 = 0;
  v62 = *((_BYTE *)&unk_1E79FBF90 + v5 + 32);
LABEL_4:
  v56 = v7;
  if (v8 >= 2)
    goto LABEL_70;
  v9 = 0;
  if (*((_BYTE *)&unk_1E79FBFB8 + v8 + 32))
    v10 = 0x80000001C10E2860;
  else
    v10 = 0x80000001C10E2840;
  v11 = 0xD000000000000020;
  if (!*((_BYTE *)&unk_1E79FBFB8 + v8 + 32))
    v11 = 0xD000000000000019;
  v61 = v11;
  v63 = v10;
  while (1)
  {
    if (v9 >= 3)
    {
LABEL_66:
      __break(1u);
      goto LABEL_67;
    }
    v12 = *((_BYTE *)&unk_1E79FBFE0 + v9 + 32);
    v64 = sub_1C07F19C4();
    v65 = v13;
    v14 = (v62 & 1) != 0 ? sub_1C07F1D38(v12, *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16)) : sub_1C07F1C1C(v12);
    v15 = v14;
    if (*(_QWORD *)(v14 + 16))
    {
      v16 = sub_1C077D774(v61, v10);
      if ((v17 & 1) != 0)
        break;
    }
    sub_1C077960C();
    sub_1C0775894();
    sub_1C07D4B70(0, (unint64_t *)&qword_1ED762C00);
    sub_1C106F97C();
LABEL_44:
    v41 = sub_1C07E0B44();
    v44 = v41;
    if (v41)
    {
      swift_isUniquelyReferenced_nonNull_native();
      v45 = sub_1C07B15E0(v64, v65);
      if (__OFADD__(v3[2], (v46 & 1) == 0))
        goto LABEL_68;
      v47 = v45;
      v48 = v46;
      sub_1C07ACF80(&qword_1ED758E28);
      if ((sub_1C107090C() & 1) != 0)
      {
        v49 = sub_1C07B15E0(v64, v65);
        if ((v48 & 1) != (v50 & 1))
        {
LABEL_64:
          sub_1C1070D44();
          return;
        }
        v47 = v49;
      }
      if ((v48 & 1) != 0)
      {
        v51 = v3[7];

        *(_QWORD *)(v51 + 8 * v47) = v44;
      }
      else
      {
        v3[(v47 >> 6) + 8] |= 1 << v47;
        v52 = (uint64_t *)(v3[6] + 16 * v47);
        *v52 = v64;
        v52[1] = v65;
        *(_QWORD *)(v3[7] + 8 * v47) = v44;
        v53 = v3[2];
        v31 = __OFADD__(v53, 1);
        v54 = v53 + 1;
        if (v31)
          goto LABEL_69;
        v3[2] = v54;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      }
      swift_bridgeObjectRelease();
LABEL_58:
      swift_bridgeObjectRelease();
      goto LABEL_59;
    }
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v42 = sub_1C07B15E0(v64, v65);
    sub_1C0795764();
    if ((v2 & 1) == 0)
      goto LABEL_58;
    swift_isUniquelyReferenced_nonNull_native();
    sub_1C07ACF80(&qword_1ED758E28);
    sub_1C107090C();
    sub_1C0786364();
    v43 = *(void **)(v3[7] + 8 * v42);
    sub_1C1070924();
    swift_bridgeObjectRelease();
    sub_1C0775894();

LABEL_59:
    v10 = v63;
    if (++v9 == 3)
    {
      v7 = 1;
      v8 = 1u;
      if ((v56 & 1) == 0)
        goto LABEL_4;
      v4 = 1;
      v5 = 1u;
      v6 = (_QWORD *)&unk_1E79FB000;
      if ((v55 & 1) != 0)
      {
        sub_1C07D4B34(*(_QWORD *)(v1 + 32));
        swift_task_dealloc();
        (*(void (**)(_QWORD *))(v1 + 8))(v3);
        return;
      }
      goto LABEL_2;
    }
  }
  v59 = v9;
  v60 = v3;
  v18 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C077960C();
  sub_1C0778580();
  sub_1C07ACF80(&qword_1EF62FC18);
  v19 = sub_1C10709CC();
  v20 = (_QWORD *)v19;
  v21 = 0;
  v22 = 1 << *(_BYTE *)(v18 + 32);
  v24 = v18 + 64;
  v23 = *(_QWORD *)(v18 + 64);
  if (v22 < 64)
    v25 = ~(-1 << v22);
  else
    v25 = -1;
  v26 = v25 & v23;
  v27 = (unint64_t)(v22 + 63) >> 6;
  v28 = v19 + 64;
  if ((v25 & v23) != 0)
  {
LABEL_21:
    v29 = __clz(__rbit64(v26));
    v26 &= v26 - 1;
    v30 = v29 | (v21 << 6);
    goto LABEL_35;
  }
  while (1)
  {
    v31 = __OFADD__(v21++, 1);
    if (v31)
    {
      __break(1u);
      goto LABEL_66;
    }
    if (v21 >= v27)
      goto LABEL_43;
    v32 = *(_QWORD *)(v24 + 8 * v21);
    if (!v32)
      break;
LABEL_34:
    v26 = (v32 - 1) & v32;
    v30 = __clz(__rbit64(v32)) + (v21 << 6);
LABEL_35:
    v34 = (uint64_t *)(*(_QWORD *)(v18 + 48) + 16 * v30);
    v36 = *v34;
    v35 = v34[1];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v37 = sub_1C1070168();
    *(_QWORD *)(v28 + ((v30 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v30;
    v38 = (_QWORD *)(v20[6] + 16 * v30);
    *v38 = v36;
    v38[1] = v35;
    *(_QWORD *)(v20[7] + 8 * v30) = v37;
    v39 = v20[2];
    v31 = __OFADD__(v39, 1);
    v40 = v39 + 1;
    if (v31)
    {
      __break(1u);
      goto LABEL_64;
    }
    v20[2] = v40;
    if (v26)
      goto LABEL_21;
  }
  v33 = v21 + 1;
  if (v21 + 1 >= v27)
    goto LABEL_43;
  v32 = *(_QWORD *)(v24 + 8 * v33);
  if (v32)
    goto LABEL_33;
  v33 = v21 + 2;
  if (v21 + 2 >= v27)
    goto LABEL_43;
  v32 = *(_QWORD *)(v24 + 8 * v33);
  if (v32)
    goto LABEL_33;
  v33 = v21 + 3;
  if (v21 + 3 >= v27)
    goto LABEL_43;
  v32 = *(_QWORD *)(v24 + 8 * v33);
  if (v32)
    goto LABEL_33;
  v33 = v21 + 4;
  if (v21 + 4 >= v27)
  {
LABEL_43:
    sub_1C0775894();
    sub_1C089B5B4();
    swift_release();
    v2 = v57;
    v1 = v58;
    v9 = v59;
    v3 = v60;
    goto LABEL_44;
  }
  v32 = *(_QWORD *)(v24 + 8 * v33);
  if (v32)
  {
LABEL_33:
    v21 = v33;
    goto LABEL_34;
  }
  while (1)
  {
    v21 = v33 + 1;
    if (__OFADD__(v33, 1))
      break;
    if (v21 >= v27)
      goto LABEL_43;
    v32 = *(_QWORD *)(v24 + 8 * v21);
    ++v33;
    if (v32)
      goto LABEL_34;
  }
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
}

uint64_t sub_1C07F2560@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = sub_1C0780378(&qword_1EF630430, a1, (uint64_t (*)(uint64_t))type metadata accessor for AppCategoryDistributionSignal, (uint64_t)&unk_1C1079B78);
  *a2 = a1;
  a2[1] = v2;
  a2[2] = v5;
  sub_1C077584C();
  return swift_retain();
}

uint64_t sub_1C07F25C0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C07D455C;
  return sub_1C07F1E30(a1);
}

void sub_1C07F260C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;

  sub_1C079FC8C();
  v1 = v0;
  v3 = v2;
  sub_1C077583C(v2, (unint64_t *)&qword_1ED758D30);
  v4 = sub_1C106F97C();
  sub_1C07796D8();
  v5 = sub_1C089A990(v3, v1, v4);
  sub_1C0775844();
  swift_bridgeObjectRelease();
  if (!v5)
  {
    sub_1C07F1770();
    sub_1C0A791CC(v3, v1, v6);
    v8 = v7;
    v9 = sub_1C077960C();
    if ((v8 & 1) != 0)
    {
      sub_1C077583C(v9, (unint64_t *)&qword_1ED762C00);
      sub_1C106F97C();
      sub_1C07E0B44();
    }
  }
  sub_1C07892A4();
}

uint64_t type metadata accessor for AppCategoryDistributionSignal()
{
  return objc_opt_self();
}

uint64_t sub_1C07F286C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C07D4C70;
  return sub_1C07F25C0(a1);
}

uint64_t sub_1C07F28B8@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  return sub_1C07F2560(a1, a2);
}

void sub_1C07F28D8()
{
  sub_1C07F1770();
}

uint64_t sub_1C07F28F8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C07F2908(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1C0780378((unint64_t *)&unk_1EF630408, a2, (uint64_t (*)(uint64_t))type metadata accessor for AppCategoryDistributionSignal, (uint64_t)&unk_1C1079B30);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1C07F2944(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1C0780378(&qword_1EF630418, a2, (uint64_t (*)(uint64_t))type metadata accessor for AppCategoryDistributionSignal, (uint64_t)&unk_1C1079B5C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_1C07F2980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  _OWORD *v5;

  sub_1C079FC8C();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  sub_1C07A2234();
  sub_1C078C75C();
  sub_1C07ADA14();
  if ((v1 & 1) != 0)
  {
    sub_1C078DAB4();
    sub_1C07A06FC();
    sub_1C07ACF80(&qword_1ED758E38);
    sub_1C07A6738();
    sub_1C0794C98();
    sub_1C07C010C((_OWORD *)(*(_QWORD *)(v1 + 56) + 32 * v3), v5);
    sub_1C077B644();
    sub_1C07B468C();
    sub_1C0798494();
  }
  else
  {
    *v5 = 0u;
    v5[1] = 0u;
    sub_1C07892A4();
  }
}

void sub_1C07F2A1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;

  sub_1C0793688();
  sub_1C077C0E8();
  sub_1C0778624();
  sub_1C077D774(v2, v1);
  v4 = v3;
  swift_bridgeObjectRelease();
  if ((v4 & 1) != 0)
  {
    sub_1C07B3F20();
    sub_1C0789D14();
    sub_1C07ACF80(&qword_1ED751308);
    sub_1C07B88A8();
    sub_1C0786364();
    sub_1C07D8ED0();
    sub_1C1070924();
    sub_1C07A432C();
  }
  else
  {
    *(_QWORD *)v0 = 0;
  }
  *(_BYTE *)(v0 + 8) = (v4 & 1) == 0;
  sub_1C079199C();
}

void sub_1C07F2AE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  sub_1C079FC8C();
  v1 = v0;
  v3 = v2;
  sub_1C07A2234();
  sub_1C077D774(v3, v1);
  LOBYTE(v3) = v4;
  sub_1C077B5B4();
  if ((v3 & 1) != 0)
  {
    sub_1C078DAB4();
    sub_1C07A06FC();
    sub_1C07ACF80(&qword_1ED760850);
    sub_1C07A6738();
    sub_1C0786364();
    sub_1C1070924();
    sub_1C07AEDCC();
  }
  sub_1C07892A4();
}

void sub_1C07F2B9C()
{
  char v0;
  char v1;
  uint64_t v2;

  sub_1C079FC8C();
  sub_1C0797B80();
  sub_1C07B70D0();
  v1 = v0;
  sub_1C0778580();
  if ((v1 & 1) != 0)
  {
    sub_1C078DAB4();
    sub_1C078AA88();
    sub_1C07ACF80(&qword_1ED758E28);
    sub_1C07A50C8();
    v2 = sub_1C0786364();
    sub_1C077583C(v2, (unint64_t *)&qword_1ED758D30);
    sub_1C079CBB0();
    sub_1C07AA64C();
  }
  sub_1C07892A4();
}

uint64_t sub_1C07F2C3C()
{
  return sub_1C07F2C64();
}

uint64_t sub_1C07F2C50()
{
  return sub_1C07F2C64();
}

uint64_t sub_1C07F2C64()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v10;

  sub_1C0793688();
  v3 = v2;
  v4 = *v0;
  sub_1C0778624();
  sub_1C07A35E4();
  sub_1C07A2F54();
  if ((v4 & 1) == 0)
    return 0;
  sub_1C078DAB4();
  v10 = *v0;
  *v0 = 0x8000000000000000;
  sub_1C07ACF80(v3);
  sub_1C07B88A8();
  v5 = *(_QWORD *)(v10 + 48);
  v6 = sub_1C106AB28();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5 + *(_QWORD *)(*(_QWORD *)(v6 - 8) + 72) * v1, v6);
  v8 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v1);
  sub_1C07A84F8();
  sub_1C0780378((unint64_t *)&qword_1ED762670, 255, v7, MEMORY[0x1E0CB0018]);
  sub_1C1070924();
  sub_1C07AEDCC();
  return v8;
}

void sub_1C07F2D70()
{
  char v0;
  char v1;

  sub_1C079FC8C();
  v1 = v0;
  sub_1C07A2234();
  sub_1C078C75C();
  sub_1C07ADA14();
  if ((v1 & 1) != 0)
  {
    sub_1C078DAB4();
    sub_1C07A06FC();
    sub_1C07ACF80(&qword_1ED744890);
    sub_1C07A6738();
    sub_1C0794C98();
    sub_1C079E1AC();
    sub_1C07ACF80(&qword_1ED756490);
    sub_1C077B644();
    sub_1C07B468C();
    sub_1C0798494();
  }
  else
  {
    sub_1C0792CE4();
    sub_1C07892A4();
  }
}

void sub_1C07F2E00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v10;
  unsigned __int16 v11;
  char v12;

  sub_1C079FC8C();
  sub_1C07DCE60(v11);
  if ((v12 & 1) != 0)
  {
    sub_1C07B3F20();
    sub_1C0799668();
    sub_1C07ACF80(&qword_1EF630458);
    sub_1C07A6738();
    type metadata accessor for PHPersonAgeType(0);
    sub_1C0780378(&qword_1EF630460, 255, (uint64_t (*)(uint64_t))type metadata accessor for PHPersonAgeType, (uint64_t)&unk_1C1076060);
    sub_1C1070924();
    *v10 = a10;
    swift_bridgeObjectRelease();
  }
  sub_1C07892A4();
}

uint64_t sub_1C07F2EC0()
{
  return sub_1C07F2C64();
}

uint64_t sub_1C07F2ED4()
{
  return sub_1C07F2C64();
}

uint64_t sub_1C07F2EE8()
{
  return sub_1C07F2C64();
}

uint64_t sub_1C07F2EFC()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1C079FC8C();
  sub_1C077C0E8();
  sub_1C077AEBC();
  sub_1C078C75C();
  sub_1C07ADA14();
  if ((v0 & 1) != 0)
  {
    sub_1C07B3F20();
    sub_1C0799668();
    sub_1C07ACF80(&qword_1ED7601A8);
    sub_1C07A6738();
    sub_1C0794C98();
    v1 = sub_1C078784C();
    sub_1C079605C(v1);
    sub_1C079ED60();
    sub_1C07A432C();
    v2 = sub_1C079C2A4();
  }
  else
  {
    sub_1C078784C();
    v2 = sub_1C078AA74();
  }
  return sub_1C07A7C74(v2, v3, v4, v5);
}

uint64_t sub_1C07F2F88()
{
  return sub_1C07F2C64();
}

uint64_t sub_1C07F2F9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1C079FC8C();
  v12 = v10;
  v14 = v13;
  v15 = *v12;
  sub_1C077AEBC();
  sub_1C07DD088(v14);
  sub_1C07ADA14();
  if ((v15 & 1) != 0)
  {
    sub_1C07B3F20();
    sub_1C0799668();
    sub_1C07ACF80(&qword_1EF630448);
    sub_1C07A6738();

    v16 = sub_1C106AEA0();
    sub_1C079605C(v16);
    type metadata accessor for NLLanguage(0);
    sub_1C0780378((unint64_t *)&unk_1ED754B78, 255, (uint64_t (*)(uint64_t))type metadata accessor for NLLanguage, (uint64_t)&unk_1C1078990);
    sub_1C079ED60();
    sub_1C07A432C();
    v17 = sub_1C079C2A4();
  }
  else
  {
    sub_1C106AEA0();
    v17 = sub_1C078AA74();
  }
  return sub_1C07A7C74(v17, v18, v19, v20);
}

uint64_t sub_1C07F3070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_1C0793688();
  v12 = v11;
  v14 = v13;
  sub_1C077AEBC();
  sub_1C078636C();
  sub_1C07ADA14();
  if ((v12 & 1) != 0)
  {
    sub_1C07B3F20();
    sub_1C0799668();
    sub_1C07ACF80(&qword_1ED75D208);
    sub_1C07A6738();
    v15 = sub_1C078784C();
    sub_1C079F2D4(v15);
    v16 = *(_QWORD *)(a10 + 56);
    v17 = type metadata accessor for EntityMatch(0);
    sub_1C07F39E8(v16 + *(_QWORD *)(*(_QWORD *)(v17 - 8) + 72) * v10, v14, type metadata accessor for EntityMatch);
    sub_1C078D384((unint64_t *)&qword_1ED7618F0, v18, v19, MEMORY[0x1E0D3CE40]);
    sub_1C07A1AC0();
    sub_1C07A432C();
    v20 = sub_1C07B7A2C();
  }
  else
  {
    type metadata accessor for EntityMatch(0);
    v20 = sub_1C078AA74();
  }
  return sub_1C07A36A0(v20, v21, v22, v23);
}

uint64_t sub_1C07F313C()
{
  return sub_1C07F2C64();
}

void sub_1C07F3150()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C079FC8C();
  v2 = v1;
  sub_1C07A2234();
  sub_1C07DCE4C(v2);
  sub_1C07ADA14();
  if ((v0 & 1) != 0)
  {
    sub_1C078DAB4();
    sub_1C07A06FC();
    sub_1C07ACF80(&qword_1ED746300);
    sub_1C07A6738();
    sub_1C079E1AC();
    sub_1C07ACF80(&qword_1EF630438);
    sub_1C07F3934();
    sub_1C07BC59C();
    sub_1C07B468C();
    sub_1C0798494();
  }
  else
  {
    sub_1C0792CE4();
    sub_1C07892A4();
  }
}

uint64_t sub_1C07F31E4()
{
  return sub_1C07F2C64();
}

uint64_t sub_1C07F31F8()
{
  return sub_1C07F2C64();
}

uint64_t sub_1C07F320C()
{
  return sub_1C07F2C64();
}

uint64_t sub_1C07F3220()
{
  return sub_1C07F2C64();
}

uint64_t sub_1C07F3234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_1C0793688();
  v12 = v11;
  v14 = v13;
  sub_1C077AEBC();
  sub_1C078636C();
  sub_1C07ADA14();
  if ((v12 & 1) != 0)
  {
    sub_1C07B3F20();
    sub_1C0799668();
    sub_1C07ACF80(&qword_1ED755020);
    sub_1C07A6738();
    v15 = sub_1C078784C();
    sub_1C079F2D4(v15);
    v16 = *(_QWORD *)(a10 + 56);
    v17 = sub_1C106AE28();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v14, v16 + *(_QWORD *)(*(_QWORD *)(v17 - 8) + 72) * v10, v17);
    sub_1C078D384((unint64_t *)&qword_1ED7618F0, v18, v19, MEMORY[0x1E0D3CE40]);
    sub_1C07A1AC0();
    sub_1C07A432C();
    v20 = sub_1C07B7A2C();
  }
  else
  {
    sub_1C106AE28();
    v20 = sub_1C078AA74();
  }
  return sub_1C07A36A0(v20, v21, v22, v23);
}

uint64_t sub_1C07F3300()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_1C0793688();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  sub_1C079BCEC();
  sub_1C07DD1C0(v8, v6, v4, v2);
  sub_1C0795764();
  if ((v0 & 1) != 0)
  {
    sub_1C07B3F20();
    sub_1C0799668();
    sub_1C07ACF80(&qword_1ED748118);
    sub_1C07A6738();
    swift_bridgeObjectRelease();
    sub_1C077B5B4();
    v9 = sub_1C106EB24();
    sub_1C079605C(v9);
    sub_1C07F3A2C();
    sub_1C079ED60();
    sub_1C07A432C();
    v10 = sub_1C079C2A4();
  }
  else
  {
    sub_1C106EB24();
    v10 = sub_1C078AA74();
  }
  return sub_1C07A36A0(v10, v11, v12, v13);
}

void sub_1C07F33D0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1C079FC8C();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = *v1;
  sub_1C0778624();
  sub_1C07DD1C0(v9, v7, v5, v3);
  sub_1C07A2F54();
  if ((v10 & 1) != 0)
  {
    sub_1C078DAB4();
    sub_1C078AA88();
    sub_1C07ACF80(&qword_1ED748120);
    sub_1C07A50C8();
    swift_bridgeObjectRelease();
    sub_1C077960C();
    sub_1C07ACF80(&qword_1ED759D58);
    sub_1C07F3A2C();
    sub_1C079ED60();
    sub_1C07AA64C();
  }
  sub_1C07892A4();
}

uint64_t sub_1C07F34A0()
{
  return sub_1C07F2C64();
}

uint64_t sub_1C07F34B4()
{
  return sub_1C07F2C64();
}

uint64_t sub_1C07F34C8()
{
  return sub_1C07F2C64();
}

uint64_t sub_1C07F34DC()
{
  return sub_1C07F2C64();
}

uint64_t sub_1C07F34F0()
{
  return sub_1C07F2C64();
}

uint64_t sub_1C07F3504()
{
  return sub_1C07F2C64();
}

void sub_1C07F3518()
{
  char v0;
  char v1;

  sub_1C079FC8C();
  sub_1C0797B80();
  sub_1C07B70D0();
  v1 = v0;
  sub_1C0778580();
  if ((v1 & 1) != 0)
  {
    sub_1C078DAB4();
    sub_1C078AA88();
    sub_1C07ACF80(&qword_1ED7598A0);
    sub_1C07A50C8();
    sub_1C0786364();
    type metadata accessor for OneShotTask();
    sub_1C079CBB0();
    sub_1C07AA64C();
  }
  sub_1C07892A4();
}

uint64_t sub_1C07F35AC()
{
  return sub_1C07F2C64();
}

uint64_t sub_1C07F35C0()
{
  return sub_1C07F2C64();
}

uint64_t sub_1C07F35D4()
{
  return sub_1C07F2C64();
}

void sub_1C07F35E8()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C079FC8C();
  v2 = v1;
  sub_1C07A2234();
  sub_1C07DD4D8(v2);
  sub_1C07ADA14();
  if ((v0 & 1) != 0)
  {
    sub_1C078DAB4();
    sub_1C07A06FC();
    sub_1C07ACF80(&qword_1ED7612D0);
    sub_1C07A6738();
    sub_1C079E1AC();
    sub_1C07ACF80(&qword_1ED757410);
    sub_1C07F3970();
    sub_1C07BC59C();
    sub_1C07B468C();
    sub_1C0798494();
  }
  else
  {
    sub_1C0792CE4();
    sub_1C07892A4();
  }
}

uint64_t sub_1C07F367C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_1C07F3848(a1, a2, (uint64_t)&unk_1ED7537C8, (uint64_t)_s14ViewConfigInfoVMa, a5, a6, a7, a8, a9, a10);
}

void sub_1C07F3690()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C079FC8C();
  v2 = v1;
  sub_1C07A2234();
  sub_1C077DA14(v2);
  sub_1C07ADA14();
  if ((v0 & 1) != 0)
  {
    sub_1C078DAB4();
    sub_1C07A06FC();
    sub_1C07ACF80(&qword_1ED758E18);
    sub_1C07A6738();
    sub_1C079E1AC();
    sub_1C07ACF80(&qword_1ED75FC60);
    sub_1C07F39AC();
    sub_1C07BC59C();
    sub_1C07B468C();
    sub_1C0798494();
  }
  else
  {
    sub_1C0792CE4();
    sub_1C07892A4();
  }
}

void sub_1C07F3724()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1C0793688();
  v1 = v0;
  sub_1C07A2234();
  sub_1C07A35E4();
  v3 = v2;
  v5 = v4;
  sub_1C077B5B4();
  if ((v5 & 1) != 0)
  {
    sub_1C078DAB4();
    sub_1C07A06FC();
    sub_1C07ACF80(&qword_1ED746D90);
    sub_1C07A6738();
    v6 = *(_QWORD *)(v10 + 48);
    v7 = sub_1C106AB28();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6 + *(_QWORD *)(*(_QWORD *)(v7 - 8) + 72) * v3, v7);
    sub_1C077DD60((__int128 *)(*(_QWORD *)(v10 + 56) + 40 * v3), v1);
    sub_1C07ACF80(&qword_1ED741348);
    sub_1C078D384((unint64_t *)&qword_1ED762670, v8, v9, MEMORY[0x1E0CB0018]);
    sub_1C1070924();
    sub_1C07B468C();
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(v1 + 32) = 0;
    *(_OWORD *)v1 = 0u;
    *(_OWORD *)(v1 + 16) = 0u;
    sub_1C079199C();
  }
}

uint64_t sub_1C07F3834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_1C07F3848(a1, a2, (uint64_t)&unk_1EF630450, (uint64_t)_s14descr1E7A41B59O15NameAndRequestsVMa, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_1C07F3848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t (*v11)(_QWORD);
  uint64_t (*v12)(_QWORD);
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1C0793688();
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v18 = v17;
  sub_1C079BCEC();
  v19 = sub_1C07B15E0(v18, v16);
  sub_1C0795764();
  if ((v16 & 1) != 0)
  {
    sub_1C07B3F20();
    sub_1C0789D14();
    sub_1C07ACF80(v14);
    sub_1C107090C();
    sub_1C0786364();
    v20 = *(_QWORD *)(a10 + 56);
    v21 = sub_1C07A84F8();
    sub_1C07F39E8(v20 + *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72) * v19, v10, v12);
    sub_1C1070924();
    sub_1C07A432C();
    return sub_1C07A36A0(v10, 0, 1, v21);
  }
  else
  {
    sub_1C07A84F8();
    v23 = sub_1C078AA74();
    return sub_1C07A36A0(v23, v24, v25, v26);
  }
}

unint64_t sub_1C07F3934()
{
  unint64_t result;

  result = qword_1ED745440;
  if (!qword_1ED745440)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107C368, &unk_1E7A0E3A8);
    atomic_store(result, (unint64_t *)&qword_1ED745440);
  }
  return result;
}

unint64_t sub_1C07F3970()
{
  unint64_t result;

  result = qword_1EF630440;
  if (!qword_1EF630440)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10C29AC, &unk_1E7A3B178);
    atomic_store(result, (unint64_t *)&qword_1EF630440);
  }
  return result;
}

unint64_t sub_1C07F39AC()
{
  unint64_t result;

  result = qword_1EF630468;
  if (!qword_1EF630468)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10C2AD4, &unk_1E7A3B0E8);
    atomic_store(result, (unint64_t *)&qword_1EF630468);
  }
  return result;
}

uint64_t sub_1C07F39E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1C07F3A2C()
{
  unint64_t result;

  result = qword_1ED747E70;
  if (!qword_1ED747E70)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1099898, &_s23SubjectRelationshipPairVN);
    atomic_store(result, (unint64_t *)&qword_1ED747E70);
  }
  return result;
}

uint64_t sub_1C07F3A6C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

uint64_t assignWithCopy for DeviceBluetoothContent(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeBufferWithCopyOfBuffer for BehaviorSequenceGenerator(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for DeviceBluetoothContent(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DeviceBluetoothContent(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 24))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 16);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DeviceBluetoothContent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

void type metadata accessor for AppCategoryContent()
{
  sub_1C0779604();
}

uint64_t sub_1C07F3BE8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v9;
  uint64_t v11;
  uint64_t v13;
  uint64_t v15;
  uint64_t v17;
  uint64_t v19;
  uint64_t v21;
  uint64_t v23;
  uint64_t v25;
  uint64_t v27;
  uint64_t v29;
  uint64_t v31;
  uint64_t v33;
  int v35;
  unsigned int v37;

  v4 = objc_msgSend(a1, sel_identifier);
  sub_1C106FB14();
  if (v2 == sub_1C07A0718() && v1 == v5)
  {
    sub_1C07984A8();
    goto LABEL_81;
  }
  sub_1C0794CAC();
  sub_1C0799684();
  sub_1C0778580();
  if ((v2 & 1) != 0)
  {
LABEL_81:

    return 0;
  }
  sub_1C106FB14();
  if (v2 == sub_1C07A0718() && v1 == v7)
  {
    sub_1C07984A8();
    goto LABEL_83;
  }
  sub_1C0794CAC();
  sub_1C0799684();
  sub_1C0778580();
  if ((v2 & 1) != 0)
  {
LABEL_83:

    return 1;
  }
  sub_1C106FB14();
  if (v2 == sub_1C07A0718() && v1 == v9)
  {
    sub_1C07984A8();
    goto LABEL_85;
  }
  sub_1C0794CAC();
  sub_1C0799684();
  sub_1C0778580();
  if ((v2 & 1) != 0)
  {
LABEL_85:

    return 2;
  }
  sub_1C106FB14();
  if (v2 == sub_1C07A0718() && v1 == v11)
  {
    sub_1C07984A8();
    goto LABEL_87;
  }
  sub_1C0794CAC();
  sub_1C0799684();
  sub_1C0778580();
  if ((v2 & 1) != 0)
  {
LABEL_87:

    return 3;
  }
  sub_1C106FB14();
  if (v2 == sub_1C07A0718() && v1 == v13)
  {
    sub_1C07984A8();
    goto LABEL_89;
  }
  sub_1C0794CAC();
  sub_1C0799684();
  sub_1C0778580();
  if ((v2 & 1) != 0)
  {
LABEL_89:

    return 4;
  }
  sub_1C106FB14();
  if (v2 == sub_1C07A0718() && v1 == v15)
  {
    sub_1C07984A8();
    goto LABEL_91;
  }
  sub_1C0794CAC();
  sub_1C0799684();
  sub_1C0778580();
  if ((v2 & 1) != 0)
  {
LABEL_91:

    return 5;
  }
  sub_1C106FB14();
  if (v2 == sub_1C07A0718() && v1 == v17)
  {
    sub_1C07984A8();
    goto LABEL_93;
  }
  sub_1C0794CAC();
  sub_1C0799684();
  sub_1C0778580();
  if ((v2 & 1) != 0)
  {
LABEL_93:

    return 6;
  }
  sub_1C106FB14();
  if (v2 == sub_1C07A0718() && v1 == v19)
  {
    sub_1C07984A8();
    goto LABEL_95;
  }
  sub_1C0794CAC();
  sub_1C0799684();
  sub_1C0778580();
  if ((v2 & 1) != 0)
  {
LABEL_95:

    return 7;
  }
  sub_1C106FB14();
  if (v2 == sub_1C07A0718() && v1 == v21)
  {
    sub_1C07984A8();
    goto LABEL_97;
  }
  sub_1C0794CAC();
  sub_1C0799684();
  sub_1C0778580();
  if ((v2 & 1) != 0)
  {
LABEL_97:

    return 8;
  }
  sub_1C106FB14();
  if (v2 == sub_1C07A0718() && v1 == v23)
  {
    sub_1C07984A8();
    goto LABEL_99;
  }
  sub_1C0794CAC();
  sub_1C0799684();
  sub_1C0778580();
  if ((v2 & 1) != 0)
  {
LABEL_99:

    return 9;
  }
  sub_1C106FB14();
  if (v2 == sub_1C07A0718() && v1 == v25)
  {
    sub_1C07984A8();
    goto LABEL_101;
  }
  sub_1C0794CAC();
  sub_1C0799684();
  sub_1C0778580();
  if ((v2 & 1) != 0)
  {
LABEL_101:

    return 10;
  }
  sub_1C106FB14();
  if (v2 == sub_1C07A0718() && v1 == v27)
  {
    sub_1C07984A8();
    goto LABEL_103;
  }
  sub_1C0794CAC();
  sub_1C0799684();
  sub_1C0778580();
  if ((v2 & 1) != 0)
  {
LABEL_103:

    return 11;
  }
  sub_1C106FB14();
  if (v2 == sub_1C07A0718() && v1 == v29)
  {
    sub_1C07984A8();
    goto LABEL_105;
  }
  sub_1C0794CAC();
  sub_1C0799684();
  sub_1C0778580();
  if ((v2 & 1) != 0)
  {
LABEL_105:

    return 12;
  }
  sub_1C106FB14();
  if (v2 == sub_1C07A0718() && v1 == v31)
  {
    sub_1C07984A8();
    goto LABEL_107;
  }
  sub_1C0794CAC();
  sub_1C0799684();
  sub_1C0778580();
  if ((v2 & 1) != 0)
  {
LABEL_107:

    return 13;
  }
  sub_1C106FB14();
  v37 = 14;
  if (v2 != sub_1C07A0718() || v1 != v33)
  {
    if ((sub_1C1070CB4() & 1) != 0)
      v35 = 14;
    else
      v35 = 15;
    v37 = v35;
  }

  swift_bridgeObjectRelease();
  sub_1C0778580();
  return v37;
}

unint64_t sub_1C07F4058(unint64_t result)
{
  if (result >= 0x10)
    return 16;
  return result;
}

unint64_t sub_1C07F4068@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1C07F4058(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1C07F4090()
{
  sub_1C07F5220();
  return sub_1C106FE98();
}

uint64_t sub_1C07F40EC()
{
  sub_1C07F5220();
  return sub_1C106FE5C();
}

uint64_t sub_1C07F4138(unsigned __int8 a1)
{
  uint64_t inited;

  sub_1C07ACF80(&qword_1ED755050);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1079220;
  *(_QWORD *)(inited + 32) = 0xD000000000000010;
  *(_QWORD *)(inited + 40) = 0x80000001C10E28F0;
  *(_QWORD *)(inited + 48) = objc_msgSend((id)objc_opt_self(), sel_featureValueWithInt64_, a1);
  sub_1C07D97D4();
  return sub_1C106F97C();
}

uint64_t sub_1C07F41EC(unsigned __int8 a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;

  v5 = sub_1C07F4138(a1);
  if (a3)
  {
    v6 = sub_1C0846380();
    sub_1C0C27E88(a2, a3, 1, v6, v7, v8);
    v10 = v9;
    sub_1C07F4DDC(v6);
    if (v10)
    {
      sub_1C07D97D4();
      sub_1C07F5FD8();
      if (v11)
      {
        swift_isUniquelyReferenced_nonNull_native();
        sub_1C08A07B0();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1C07F2B9C();

      }
    }
  }
  return v5;
}

BOOL sub_1C07F4324(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_1C07F4334()
{
  return sub_1C1070E04();
}

uint64_t sub_1C07F4358(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6765746143707061 && a2 == 0xEF6570795479726FLL;
  if (v2 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C646E7542707061 && a2 == 0xEB00000000644965)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1C1070CB4();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1C07F4480()
{
  return 2;
}

uint64_t sub_1C07F4488()
{
  sub_1C1070DF8();
  sub_1C1070E04();
  return sub_1C1070E4C();
}

uint64_t sub_1C07F44CC(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6C646E7542707061;
  else
    return 0x6765746143707061;
}

void sub_1C07F4518(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1C07ACF80(&qword_1EF630490);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1C07795DC();
  sub_1C07A9480(a1, a1[3]);
  sub_1C07F488C();
  sub_1C1070EB8();
  sub_1C07F4904();
  sub_1C1070BB8();
  if (!v1)
    sub_1C1070B34();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
  sub_1C07757D0();
}

uint64_t sub_1C07F4630(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v6;

  v3 = sub_1C07ACF80(&qword_1EF630478);
  MEMORY[0x1E0C80A78](v3);
  sub_1C07795DC();
  v4 = a1[3];
  sub_1C07A9480(a1, v4);
  sub_1C07F488C();
  sub_1C1070E94();
  if (!v1)
  {
    sub_1C07F48C8();
    sub_1C1070AE0();
    v4 = v6;
    sub_1C1070A5C();
    sub_1C0787764();
  }
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)a1);
  return v4;
}

BOOL sub_1C07F4774(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C07F4324(*a1, *a2);
}

uint64_t sub_1C07F4780()
{
  return sub_1C07F4488();
}

uint64_t sub_1C07F4788()
{
  return sub_1C07F4334();
}

uint64_t sub_1C07F4790()
{
  char *v0;

  return sub_1C07F44CC(*v0);
}

uint64_t sub_1C07F4798@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C07F4358(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C07F47BC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C07F4480();
  *a1 = result;
  return result;
}

uint64_t sub_1C07F47E0()
{
  sub_1C07F488C();
  return sub_1C1070EE8();
}

uint64_t sub_1C07F4808()
{
  sub_1C07F488C();
  return sub_1C1070EF4();
}

uint64_t sub_1C07F4830@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_1C07F4630(a1);
  if (!v2)
  {
    *(_BYTE *)a2 = result;
    *(_QWORD *)(a2 + 8) = v5;
    *(_QWORD *)(a2 + 16) = v6;
  }
  return result;
}

void sub_1C07F485C(_QWORD *a1)
{
  sub_1C07F4518(a1);
}

uint64_t sub_1C07F4878()
{
  unsigned __int8 *v0;

  return sub_1C07F4138(*v0);
}

uint64_t sub_1C07F4880()
{
  uint64_t v0;

  return sub_1C07F41EC(*(_BYTE *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16));
}

unint64_t sub_1C07F488C()
{
  unint64_t result;

  result = qword_1EF630480;
  if (!qword_1EF630480)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1079E08, &type metadata for AppCategoryContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF630480);
  }
  return result;
}

unint64_t sub_1C07F48C8()
{
  unint64_t result;

  result = qword_1EF630488;
  if (!qword_1EF630488)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1079DE0, &unk_1E7A0BF28);
    atomic_store(result, (unint64_t *)&qword_1EF630488);
  }
  return result;
}

unint64_t sub_1C07F4904()
{
  unint64_t result;

  result = qword_1EF630498;
  if (!qword_1EF630498)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1079DB8, &unk_1E7A0BF28);
    atomic_store(result, (unint64_t *)&qword_1EF630498);
  }
  return result;
}

void sub_1C07F4940(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v26 = a2;
  v25 = sub_1C07ACF80(&qword_1ED7482B0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  sub_1C07795DC();
  v24 = sub_1C07ACF80(&qword_1ED74D508);
  v4 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v23 - v11;
  v13 = objc_msgSend((id)BiomeLibrary(), sel_App);
  swift_unknownObjectRelease();
  v14 = objc_msgSend(v13, sel_InFocus);
  swift_unknownObjectRelease();
  v15 = sub_1C106ADE0();
  v16 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  v16(v12, a1, v15);
  sub_1C078F0C0((uint64_t)v12);
  v17 = sub_1C07ACF80(&qword_1ED75D0B8);
  v16(v10, a1 + *(int *)(v17 + 36), v15);
  sub_1C078F0C0((uint64_t)v10);
  v18 = objc_allocWithZone(MEMORY[0x1E0D026F0]);
  v19 = sub_1C07DC9F8((uint64_t)v12, (uint64_t)v10, 0, 0, 0);
  v20 = objc_msgSend(v14, sel_publisherWithOptions_, v19);

  v21 = v20;
  sub_1C07ACF80((uint64_t *)&unk_1ED74D318);
  v22 = v27;
  sub_1C106ED88();
  if (v22)
  {

  }
  else
  {
    sub_1C07ACF80(&qword_1ED74A458);
    sub_1C07F52E0((unint64_t *)&qword_1ED7482C8, &qword_1ED7482B0, MEMORY[0x1E0D3D840]);
    sub_1C1070C00();

    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v26, v6, v24);
  }
  sub_1C07757D0();
}

uint64_t sub_1C07F4BC8(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a2;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v3;
  return swift_task_switch();
}

uint64_t sub_1C07F4BE4()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = objc_msgSend(*(id *)(v0 + 24), sel_eventBody);
  if (v1)
  {
    v2 = v1;
    sub_1C0877010(v1);
    if (v3)
    {
      v4 = (void *)objc_opt_self();
      v5 = (void *)sub_1C106FAF0();
      swift_bridgeObjectRelease();
      v6 = objc_msgSend(v4, sel_categoryForBundleId_, v5);

      v7 = sub_1C07F3BE8(v6);
    }
    else
    {
      v7 = 15;
    }
    v11 = *(_QWORD *)(v0 + 16);
    v10 = *(void **)(v0 + 24);
    v12 = sub_1C0877010(v2);
    v14 = v13;
    objc_msgSend(v10, sel_timestamp);
    sub_1C106AC54();
    LOBYTE(v10) = objc_msgSend(v2, sel_starting);

    v8 = sub_1C07ACF80(&qword_1ED74A458);
    v9 = 0;
    v15 = v11 + *(int *)(v8 + 32);
    *(_BYTE *)v15 = v7;
    *(_QWORD *)(v15 + 8) = v12;
    *(_QWORD *)(v15 + 16) = v14;
    *(_BYTE *)(v11 + *(int *)(v8 + 28)) = (_BYTE)v10;
  }
  else
  {
    v8 = sub_1C07ACF80(&qword_1ED74A458);
    v9 = 1;
  }
  sub_1C07B2D8C(*(_QWORD *)(v0 + 16), v9, 1, v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1C07F4D40(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  sub_1C07ACF80(&qword_1ED74C9F8);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07F4940(a1, (uint64_t)v7);
  if (!v2)
    sub_1C07F4E28((uint64_t)v7, a2);
}

void sub_1C07F4DC8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C07F4D40(a1, a2);
}

void *sub_1C07F4DDC(void *result)
{
  if (result)
  {

    swift_release();
    swift_bridgeObjectRelease();
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C07F4E28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1ED74C9F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t getEnumTagSinglePayload for AppCategoryContent.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 1) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v5 = v6 - 2;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for AppCategoryContent.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C07F4F44 + 4 * byte_1C1079BA5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C07F4F78 + 4 * byte_1C1079BA0[v4]))();
}

uint64_t sub_1C07F4F78(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C07F4F80(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C07F4F88);
  return result;
}

uint64_t sub_1C07F4F94(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C07F4F9CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C07F4FA0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C07F4FA8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1C07F4FB4(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for AppCategoryContent.CodingKeys()
{
  return &type metadata for AppCategoryContent.CodingKeys;
}

uint64_t getEnumTagSinglePayload for EventFoundInAppsContent.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF1)
  {
    if (a2 + 15 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 15) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 16;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x10;
  v5 = v6 - 16;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_1C07F5058(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 15 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 15) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF1)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF0)
    return ((uint64_t (*)(void))((char *)&loc_1C07F50A4 + 4 * byte_1C1079BAF[v4]))();
  *a1 = a2 + 15;
  return ((uint64_t (*)(void))((char *)sub_1C07F50D8 + 4 * byte_1C1079BAA[v4]))();
}

uint64_t sub_1C07F50D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C07F50E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C07F50E8);
  return result;
}

uint64_t sub_1C07F50F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C07F50FCLL);
  *(_BYTE *)result = a2 + 15;
  return result;
}

uint64_t sub_1C07F5100(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C07F5108(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for AppCategoryType()
{
  sub_1C0779604();
}

unint64_t sub_1C07F5124()
{
  unint64_t result;

  result = qword_1EF6304A8;
  if (!qword_1EF6304A8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1079CD8, &unk_1E7A0BF28);
    atomic_store(result, (unint64_t *)&qword_1EF6304A8);
  }
  return result;
}

unint64_t sub_1C07F5164()
{
  unint64_t result;

  result = qword_1EF6304B0;
  if (!qword_1EF6304B0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1079D90, &type metadata for AppCategoryContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF6304B0);
  }
  return result;
}

unint64_t sub_1C07F51A4()
{
  unint64_t result;

  result = qword_1EF6304B8;
  if (!qword_1EF6304B8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1079D00, &type metadata for AppCategoryContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF6304B8);
  }
  return result;
}

unint64_t sub_1C07F51E4()
{
  unint64_t result;

  result = qword_1EF6304C0;
  if (!qword_1EF6304C0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1079D28, &type metadata for AppCategoryContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF6304C0);
  }
  return result;
}

unint64_t sub_1C07F5220()
{
  unint64_t result;

  result = qword_1EF6304C8;
  if (!qword_1EF6304C8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1079C60, &unk_1E7A0BF28);
    atomic_store(result, (unint64_t *)&qword_1EF6304C8);
  }
  return result;
}

void type metadata accessor for AppCategorySignal()
{
  sub_1C0779604();
}

uint64_t sub_1C07F5268()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C07F5278()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C07F5288()
{
  return sub_1C07F52E0(&qword_1ED74D148, &qword_1ED74D140, (uint64_t)&unk_1C1091558);
}

uint64_t sub_1C07F52B4()
{
  return sub_1C07F52E0(qword_1EF630510, &qword_1ED74C9F8, (uint64_t)&unk_1C1091490);
}

uint64_t sub_1C07F52E0(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_1C07D4BEC(a2);
    result = MEMORY[0x1C3BA8174](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for AppIntentDataProvider()
{
  return &type metadata for AppIntentDataProvider;
}

uint64_t sub_1C07F5330()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C07F5340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;

  sub_1C07D97D4();
  v8 = sub_1C106F97C();
  v11 = sub_1C0846380();
  v12 = v9;
  v13 = v10;
  v15 = v14;
  if (!a2)
    goto LABEL_12;
  sub_1C0C27E88(a1, a2, 1, v11, v9, v10);
  if (!v16)
    goto LABEL_5;
  sub_1C07F5FD8();
  if (v17)
  {
    swift_isUniquelyReferenced_nonNull_native();
    sub_1C08A07B0();
    sub_1C07A674C();
LABEL_5:
    if (!a4)
      goto LABEL_12;
    goto LABEL_6;
  }
  sub_1C07F2B9C();

  if (!a4)
    goto LABEL_12;
LABEL_6:
  sub_1C0C27F50(a3, a4, a1, a2, 1, v11, v12, v13, v15);
  if (v18)
  {
    sub_1C07F5FD8();
    if (v19)
    {
      swift_isUniquelyReferenced_nonNull_native();
      sub_1C08A07B0();
      sub_1C07A674C();
    }
    else
    {
      sub_1C07F2B9C();

    }
  }
LABEL_12:
  sub_1C07F4DDC(v11);
  return v8;
}

uint64_t sub_1C07F554C()
{
  uint64_t *v0;

  return sub_1C07F5340(*v0, v0[1], v0[2], v0[3]);
}

uint64_t sub_1C07F5558@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = v2 + *(int *)(a1 + 24);
  v4 = *(_QWORD *)(v3 + 24);
  *(_QWORD *)a2 = *(_QWORD *)v3;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(v3 + 8);
  *(_QWORD *)(a2 + 24) = v4;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

void sub_1C07F559C()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)BiomeLibrary(), sel_App);
  swift_unknownObjectRelease();
  v1 = objc_msgSend(v0, sel_Intent);
  swift_unknownObjectRelease();
  sub_1C07E1A38();

}

void sub_1C07F5644()
{
  sub_1C07F559C();
}

uint64_t *sub_1C07F5658(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1C106ADE0();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = v11[3];
    v10[2] = v11[2];
    v10[3] = v13;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  return a1;
}

uint64_t sub_1C07F571C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v4 = sub_1C106ADE0();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C07F5788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_1C106ADE0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = v10[3];
  v9[2] = v10[2];
  v9[3] = v12;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

uint64_t sub_1C07F5820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;

  v6 = sub_1C106ADE0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v9[1] = v10[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  v9[2] = v10[2];
  v9[3] = v10[3];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C07F58DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  __int128 v11;

  v6 = sub_1C106ADE0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = (_OWORD *)(a1 + v8);
  v10 = (_OWORD *)(a2 + v8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  return a1;
}

uint64_t sub_1C07F5960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_1C106ADE0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  v12 = v10[3];
  v9[2] = v10[2];
  v9[3] = v12;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C07F59FC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C07F5A08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;
  int v9;

  v6 = sub_1C106ADE0();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return sub_1C07B2D80(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  v9 = v8 - 1;
  if (v9 < 0)
    v9 = -1;
  return (v9 + 1);
}

uint64_t sub_1C07F5A90()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C07F5A9C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = sub_1C106ADE0();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return sub_1C07B2D8C(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = a2;
  return result;
}

uint64_t type metadata accessor for AppIntentEvent()
{
  uint64_t result;

  result = qword_1EF630590;
  if (!qword_1EF630590)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C07F5B4C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C106ADE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1C07F5BC4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF6305D0;
  if (!qword_1EF6305D0)
  {
    v1 = sub_1C07D4BEC(qword_1EF6305D8);
    result = MEMORY[0x1C3BA8174](&unk_1C10B5B14, v1);
    atomic_store(result, (unint64_t *)&qword_1EF6305D0);
  }
  return result;
}

uint64_t destroy for AppIntentContent()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for AppIntentContent(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

_QWORD *assignWithCopy for AppIntentContent(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for AppIntentContent(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_QWORD *assignWithTake for AppIntentContent(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AppIntentContent(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AppIntentContent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for AppIntentContent()
{
  return &type metadata for AppIntentContent;
}

uint64_t sub_1C07F5DE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = v3;
  v27 = a3;
  v6 = type metadata accessor for FeatureProviderSnapshot(0);
  v25 = *(_QWORD *)(v6 - 8);
  v26 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    v28 = MEMORY[0x1E0DEE9D8];
    sub_1C09D3218();
    v10 = v28;
    v11 = sub_1C106ADE0();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v23 = *(_QWORD *)(v12 + 72);
    v24 = v11;
    v22 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    do
    {
      v22(v8, v13, v24);
      v14 = sub_1C07F6558();
      v15 = v27;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v16 = v15;
      v17 = v4;
      sub_1C07E7D3C(v14, v16);
      swift_bridgeObjectRelease();
      sub_1C089B840();
      v19 = v18;
      swift_release();
      *(_QWORD *)&v8[*(int *)(v26 + 20)] = v19;
      v28 = v10;
      v20 = *(_QWORD *)(v10 + 16);
      if (v20 >= *(_QWORD *)(v10 + 24) >> 1)
      {
        sub_1C09D3218();
        v10 = v28;
      }
      *(_QWORD *)(v10 + 16) = v20 + 1;
      sub_1C07E7EF8((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(_QWORD *)(v25 + 72) * v20);
      v13 += v23;
      --v9;
      v4 = v17;
    }
    while (v9);
    swift_release();
  }
  else
  {
    swift_release();
    v10 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  return v10;
}

void sub_1C07F5FD8()
{
  void *v0;
  id v1;

  v0 = (void *)sub_1C106FAF0();
  swift_bridgeObjectRelease();
  v1 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_featureValueWithString_, v0);

  sub_1C077671C();
}

void sub_1C07F6088()
{
  sub_1C09D30E0();
  __asm { BR              X9 }
}

uint64_t sub_1C07F6208()
{
  uint64_t v0;
  void *v1;
  uint64_t v3;

  v1 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C07F625C(v0, &v3);
  objc_autoreleasePoolPop(v1);
  return v3;
}

uint64_t sub_1C07F625C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, void *);
  void *v19;
  void (*v20)(void *);
  uint64_t v21;

  v3 = *(void **)(a1 + 32);
  sub_1C106AC60();
  v4 = (void *)sub_1C1070168();
  sub_1C07D4B70(0, (unint64_t *)&qword_1ED762C00);
  v5 = (void *)sub_1C1070504();
  v6 = (void *)sub_1C1070504();
  v7 = objc_msgSend(v3, sel_publisherWithStartTime_endTime_maxEvents_lastN_reversed_, 0, v4, v5, v6, 0);

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = 0;
  v20 = (void (*)(void *))nullsub_1;
  v21 = 0;
  v9 = MEMORY[0x1E0C809B0];
  v16 = MEMORY[0x1E0C809B0];
  v17 = 1107296256;
  v18 = (void (*)(uint64_t, void *))sub_1C07BF90C;
  v19 = &unk_1E7A0C1A8;
  v10 = _Block_copy(&v16);
  v20 = sub_1C07F6FA8;
  v21 = v8;
  v16 = v9;
  v17 = 1107296256;
  v18 = sub_1C0779530;
  v19 = &unk_1E7A0C1D0;
  v11 = _Block_copy(&v16);
  swift_retain();
  swift_release();
  v12 = objc_msgSend(v7, sel_sinkWithCompletion_receiveInput_, v10, v11);

  _Block_release(v11);
  _Block_release(v10);

  swift_beginAccess();
  v13 = *(void **)(v8 + 16);
  *a2 = v13;
  v14 = v13;
  return swift_release();
}

void sub_1C07F643C(void *a1, uint64_t a2)
{
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  NSObject *oslog;

  v3 = objc_msgSend(a1, sel_eventBody);
  if (v3)
  {
    v4 = v3;
    swift_beginAccess();
    v5 = *(void **)(a2 + 16);
    *(_QWORD *)(a2 + 16) = v4;

  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v6 = sub_1C106F544();
    sub_1C079E000(v6, (uint64_t)qword_1ED762AF8);
    oslog = sub_1C106F538();
    v7 = sub_1C10703A8();
    if (os_log_type_enabled(oslog, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_1C0771000, oslog, v7, "Unable to parse eventBody from read event in app launch featurizer", v8, 2u);
      MEMORY[0x1C3BA8270](v8, -1, -1);
    }

  }
}

uint64_t sub_1C07F6558()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  unsigned int v13;
  char v14;
  char v15;
  char v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  double v33;
  double v34;
  void *v35;
  void *v36;
  id v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  unsigned __int8 v42;
  unint64_t v43;
  uint64_t inited;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49[3];
  uint64_t v50;
  unint64_t v51;

  v1 = v0;
  v2 = sub_1C07F6208();
  if (v2)
  {
    v3 = (void *)v2;
    v4 = sub_1C0846380();
    if (!v4)
    {
      if (qword_1ED762B18 != -1)
        swift_once();
      v23 = sub_1C077585C();
      sub_1C079E000(v23, (uint64_t)qword_1ED762AF8);
      v24 = sub_1C077C0FC();
      v25 = sub_1C10703A8();
      if (os_log_type_enabled(v24, v25))
      {
        v26 = (uint8_t *)sub_1C0775854();
        *(_WORD *)v26 = 0;
        _os_log_impl(&dword_1C0771000, v24, v25, "Unable to initialize behaviorEventProcessor", v26, 2u);
        sub_1C0776778();
      }

      sub_1C077583C(v27, (unint64_t *)&qword_1ED758D30);
      v28 = sub_1C106F97C();

      return v28;
    }
    v6 = v4;
    v7 = v5;
    v8 = objc_msgSend(v3, sel_bundleID);
    v9 = sub_1C106FB14();
    v11 = v10;

    v50 = v9;
    v51 = v11;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v12 = (void *)sub_1C106FAF0();
    v13 = objc_msgSend(v6, sel_payloadForString_, v12);

    v48 = v6;
    if (v13)
    {
      sub_1C0A791CC(v9, v11, v7);
      v15 = v14;
      sub_1C077960C();
      if ((v15 & 1) == 0)
      {
        v16 = 0;
LABEL_22:
        objc_msgSend(v3, sel_absoluteTimestamp);
        v34 = v33;
        v35 = (void *)objc_opt_self();
        swift_beginAccess();
        sub_1C07796E0();
        v36 = (void *)sub_1C106FAF0();
        sub_1C077E584();
        v37 = objc_msgSend(v35, sel_categoryForBundleId_, v36);

        v38 = objc_msgSend(v37, sel_identifier);
        sub_1C106FB14();

        sub_1C07796E0();
        v39 = sub_1C0C2C5F8();
        if (*(_QWORD *)(v39 + 16))
        {
          sub_1C07796E0();
          v40 = sub_1C077D774(v50, v51);
          if ((v41 & 1) != 0)
            v42 = *(_BYTE *)(*(_QWORD *)(v39 + 56) + v40);
          else
            v42 = 0;
          sub_1C077E584();
        }
        else
        {
          v42 = 0;
        }
        sub_1C077960C();
        sub_1C077E584();
        if ((v16 & 1) != 0)
        {
          v43 = *(_QWORD *)(v1 + 24);
          v50 = *(_QWORD *)(v1 + 16);
          v51 = v43;
          sub_1C07796E0();
          sub_1C077960C();
        }
        sub_1C07ACF80(&qword_1ED755050);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1C10795A0;
        *(_QWORD *)(inited + 32) = 0xD000000000000015;
        *(_QWORD *)(inited + 40) = 0x80000001C10E29B0;
        sub_1C07D4B70(0, (unint64_t *)&qword_1ED758D30);
        sub_1C07796E0();
        sub_1C07F5FD8();
        *(_QWORD *)(inited + 48) = v45;
        *(_QWORD *)(inited + 56) = 0xD00000000000001FLL;
        *(_QWORD *)(inited + 64) = 0x80000001C10E29D0;
        *(_QWORD *)(inited + 72) = objc_msgSend((id)objc_opt_self(), sel_featureValueWithDouble_, v34);
        *(_QWORD *)(inited + 80) = 0xD000000000000017;
        *(_QWORD *)(inited + 88) = 0x80000001C10E29F0;
        sub_1C07F5FD8();
        *(_QWORD *)(inited + 96) = v46;
        *(_QWORD *)(inited + 104) = 0xD00000000000001FLL;
        *(_QWORD *)(inited + 112) = 0x80000001C10E2A10;
        sub_1C0C2C3EC(v42);
        sub_1C07F5FD8();
        *(_QWORD *)(inited + 120) = v47;
        v28 = sub_1C106F97C();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();

        swift_bridgeObjectRelease();
        return v28;
      }
    }
    else
    {
      sub_1C077960C();
    }
    if (qword_1ED762B18 != -1)
      swift_once();
    v29 = sub_1C077585C();
    sub_1C079E000(v29, (uint64_t)qword_1ED762AF8);
    v30 = sub_1C077C0FC();
    v31 = sub_1C10703A8();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)sub_1C0775854();
      v49[0] = sub_1C0775854();
      *(_DWORD *)v32 = 136315138;
      swift_beginAccess();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C0788DAC(v50, v51, v49);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C0771000, v30, v31, "Cannot log %s because it's either a sensitive app/ it's not among the top 5k apps", v32, 0xCu);
      swift_arrayDestroy();
      sub_1C0776778();
    }

    v16 = 1;
    goto LABEL_22;
  }
  if (qword_1ED762B18 != -1)
    swift_once();
  v17 = sub_1C077585C();
  sub_1C079E000(v17, (uint64_t)qword_1ED762AF8);
  v18 = sub_1C077C0FC();
  v19 = sub_1C10703A8();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)sub_1C0775854();
    *(_WORD *)v20 = 0;
    _os_log_impl(&dword_1C0771000, v18, v19, "Unable to fetch most recentAppLaunch event", v20, 2u);
    sub_1C0776778();
  }

  sub_1C077583C(v21, (unint64_t *)&qword_1ED758D30);
  return sub_1C106F97C();
}

uint64_t sub_1C07F6BBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  swift_retain();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  result = sub_1C07F5DE0(a2, v3, a1);
  *a3 = result;
  return result;
}

void sub_1C07F6C10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v0 = sub_1C106ADE0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106ADA4();
  sub_1C07F6558();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1C077671C();
}

uint64_t sub_1C07F6C8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v4 = sub_1C106ADE0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106ADA4();
  v8 = sub_1C07F6558();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v9 = sub_1C089A990(a1, a2, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v9)
  {
    sub_1C07F6088();
    sub_1C0A791CC(a1, a2, v10);
    v12 = v11;
    v13 = sub_1C077960C();
    if ((v12 & 1) != 0)
    {
      sub_1C077583C(v13, (unint64_t *)&qword_1ED758D30);
      sub_1C07F5FD8();
      return v14;
    }
    else
    {
      return 0;
    }
  }
  return v9;
}

uint64_t sub_1C07F6E0C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return v0;
}

uint64_t sub_1C07F6E30()
{
  sub_1C07F6E0C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AppLaunchSignal()
{
  return objc_opt_self();
}

uint64_t sub_1C07F6E70()
{
  uint64_t v0;

  strcpy((char *)(v0 + 16), "--redacted--");
  *(_BYTE *)(v0 + 29) = 0;
  *(_WORD *)(v0 + 30) = -5120;
  *(_QWORD *)(v0 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D025D0]), sel_init);
  return v0;
}

void sub_1C07F6EC0()
{
  sub_1C07F6C10();
}

uint64_t sub_1C07F6EE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C07F6BBC(a1, a2, a3);
}

void sub_1C07F6F00()
{
  sub_1C07F6088();
}

uint64_t sub_1C07F6F14()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1C07F6F24(uint64_t a1)
{
  unint64_t result;

  result = sub_1C07F6F48();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C07F6F48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF630630;
  if (!qword_1EF630630)
  {
    v1 = type metadata accessor for AppLaunchSignal();
    result = MEMORY[0x1C3BA8174](&unk_1C1079F9C, v1);
    atomic_store(result, (unint64_t *)&qword_1EF630630);
  }
  return result;
}

uint64_t sub_1C07F6F84()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1C07F6FA8(void *a1)
{
  uint64_t v1;

  sub_1C07F643C(a1, v1);
}

ValueMetadata *type metadata accessor for AssetRegistryEntitlementInfo()
{
  return &type metadata for AssetRegistryEntitlementInfo;
}

void sub_1C07F6FC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C07ACF80(&qword_1ED762B70);
  sub_1C106E4E8();
  if (!v0)
  {
    if (v2)
      v1 = v2;
    else
      v1 = MEMORY[0x1E0DEE9D8];
    sub_1C0898D28(v1);
  }
}

uint64_t sub_1C07F7040(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  type metadata accessor for Configuration();
  sub_1C07757C4();
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v14 - v7;
  sub_1C106EC20();
  swift_retain();
  v9 = sub_1C106EC08();
  if (v1)
  {
    swift_release();
    return sub_1C078D09C(a1);
  }
  else
  {
    v10 = v9;
    sub_1C078E3E0(a1, (uint64_t)v8);
    sub_1C078E3E0((uint64_t)v8, (uint64_t)v6);
    type metadata accessor for KeyValueStore();
    swift_allocObject();
    v11 = KeyValueStore.init(config:domain:)((uint64_t)v6, 0xD000000000000017, 0x80000001C107A000);
    sub_1C078D09C((uint64_t)v8);
    swift_release();
    type metadata accessor for AssetRegistryOverrideStore();
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = v11;
    sub_1C078D09C(a1);
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v10;
    *(_QWORD *)(result + 24) = v12;
  }
  return result;
}

void sub_1C07F71C0()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C077AE5C();
  v0 = sub_1C106EB90();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  sub_1C0778564();
  sub_1C106EB84();
  sub_1C07F7260();
  sub_1C078C76C(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_1C07757D0();
}

void sub_1C07F7260()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C077AE5C();
  v0 = sub_1C07ACF80(&qword_1ED744A98);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  sub_1C0778564();
  v4 = v3 - v2;
  sub_1C106EC14();
  sub_1C106E764();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v4, v0);
  sub_1C07757D0();
}

void sub_1C07F7320()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  _QWORD v37[2];
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  sub_1C077AE5C();
  v45 = v1;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v41 = v10;
  sub_1C07ACF80(&qword_1ED744A30);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v11);
  sub_1C077AE40();
  v42 = v12;
  sub_1C077CF58();
  v13 = sub_1C106CD00();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)v37 - v18;
  v43 = v7;
  v44 = v5;
  sub_1C07F71C0();
  if (!v0)
  {
    v37[1] = v9;
    v38 = v19;
    v20 = v43;
    v21 = v44;
    v22 = v42;
    v37[0] = v17;
    v39 = v14;
    v40 = v13;
    if ((sub_1C106EBA8() & 1) == 0)
    {
      v24 = v40;
      v23 = v41;
      v25 = v39;
LABEL_5:
      (*(void (**)(uint64_t, char *, uint64_t))(v25 + 32))(v23, v38, v24);
      goto LABEL_6;
    }
    AssetRegistryOverrideStore.fetchAssetEntry(for:in:)(v20, v21, v3);
    v24 = v40;
    if (sub_1C07B2D80(v22, 1, v40) == 1)
    {
      sub_1C07F7C64(v22);
      v23 = v41;
      v25 = v39;
      goto LABEL_5;
    }
    v26 = v39;
    v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 32);
    v28 = (char *)v37[0];
    v27(v37[0], v22, v24);
    v29 = sub_1C106CCDC();
    v30 = v38;
    v31 = sub_1C106CCDC();
    v32 = *(void (**)(char *, uint64_t))(v26 + 8);
    v33 = v29 < v31;
    v34 = v41;
    if (v33)
    {
      v32(v28, v24);
      v35 = v34;
      v36 = v30;
    }
    else
    {
      v32(v30, v24);
      v35 = v34;
      v36 = v28;
    }
    v27(v35, (uint64_t)v36, v24);
  }
LABEL_6:
  sub_1C07757D0();
}

void sub_1C07F7548()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t);
  void *v39;
  id v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  unsigned int *v49;
  _QWORD *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD v68[3];
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;

  sub_1C077AE5C();
  v85 = v0;
  v86 = v1;
  v78 = v2;
  v79 = v3;
  v87 = v4;
  v88 = v5;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v89 = sub_1C106EC2C();
  v74 = *(_QWORD *)(v89 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v12);
  sub_1C077AE40();
  v82 = v13;
  sub_1C077CF58();
  v14 = sub_1C106CD0C();
  v72 = *(_QWORD *)(v14 - 8);
  v73 = v14;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v15);
  sub_1C077AED0();
  v70 = v16;
  MEMORY[0x1E0C80A78](v17);
  v71 = (char *)v68 - v18;
  sub_1C077CF58();
  v77 = sub_1C106CD30();
  v75 = *(_QWORD *)(v77 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v19);
  sub_1C077AE40();
  v76 = v20;
  sub_1C077CF58();
  v83 = sub_1C106EBB4();
  v21 = *(_QWORD *)(v83 - 8);
  MEMORY[0x1E0C80A78](v83);
  sub_1C0778564();
  v24 = v23 - v22;
  v84 = *(_QWORD *)(sub_1C07ACF80(&qword_1ED744A98) - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v25);
  sub_1C0778564();
  v26 = sub_1C106CD00();
  v81 = *(_QWORD *)(v26 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v27);
  sub_1C077AED0();
  v69 = v28;
  v30 = MEMORY[0x1E0C80A78](v29);
  v32 = (char *)v68 - v31;
  MEMORY[0x1E0C80A78](v30);
  v80 = (char *)v68 - v33;
  v90 = v9;
  sub_1C0A791CC(v9, v7, v11);
  if ((v34 & 1) != 0)
  {
    sub_1C106E9A4();
    v35 = sub_1C106E998();
    v68[2] = v68;
    MEMORY[0x1E0C80A78](v35);
    v36 = v87;
    v68[-6] = v86;
    v68[-5] = v36;
    v37 = v90;
    v68[-4] = v88;
    v68[-3] = v37;
    v66 = v7;
    v67 = v24;
    v68[1] = v7;
    v38 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D3B6B0];
    sub_1C07803B8(&qword_1ED744A28, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3B6B0], MEMORY[0x1E0D3B6C8]);
    sub_1C07803B8(&qword_1ED744A20, v38, MEMORY[0x1E0D3B6C0]);
    sub_1C07803B8(&qword_1ED744AA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D5C8], MEMORY[0x1E0D3D5C0]);
    sub_1C106E770();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v24, v83);
    v39 = v85;
    sub_1C106E764();
    if (v39)
    {
      sub_1C078F108();
      v40 = v39;
      sub_1C07ACF80(&qword_1ED7614F0);
      v41 = v82;
      v42 = v89;
      if ((swift_dynamicCast() & 1) != 0)
      {
        v43 = v74;
        v44 = (*(uint64_t (**)(uint64_t *, uint64_t))(v74 + 88))(v41, v42);
        if (v44 == *MEMORY[0x1E0D3D5B8])
        {

          sub_1C078C76C(*(uint64_t (**)(uint64_t, uint64_t))(v43 + 96));
          v45 = *v41;
          v46 = v41[1];
          sub_1C079E1C0();
          sub_1C07803B8(&qword_1EF630638, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D6E8], MEMORY[0x1E0D3D6F8]);
          sub_1C07A0728();
          v48 = (uint64_t)v47;
          *v47 = v45;
          v47[1] = v46;
          v49 = (unsigned int *)MEMORY[0x1E0D3D6D8];
        }
        else
        {
          if (v44 != *MEMORY[0x1E0D3D5B0])
          {
            sub_1C078C76C(*(uint64_t (**)(uint64_t, uint64_t))(v43 + 8));
            goto LABEL_16;
          }

          sub_1C078C76C(*(uint64_t (**)(uint64_t, uint64_t))(v43 + 96));
          v61 = *v41;
          v62 = v41[1];
          sub_1C079E1C0();
          sub_1C07803B8(&qword_1EF630638, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D6E8], MEMORY[0x1E0D3D6F8]);
          sub_1C07A0728();
          v48 = (uint64_t)v63;
          *v63 = v61;
          v63[1] = v62;
          v49 = (unsigned int *)MEMORY[0x1E0D3D6D0];
        }
        sub_1C079A710(v48, *v49);
        swift_willThrow();
      }
LABEL_16:

      goto LABEL_18;
    }
    sub_1C078F108();
    v52 = v80;
    v51 = v81;
    (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v80, v32, v26);
    sub_1C106CCDC();
    v54 = v75;
    v53 = v76;
    v55 = v77;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 16))(v76, v78, v77);
    v56 = (*(uint64_t (**)(uint64_t, uint64_t))(v54 + 88))(v53, v55);
    if (v56 == *MEMORY[0x1E0D3B710])
    {
      (*(void (**)(uint64_t, uint64_t))(v54 + 96))(v53, v55);
      v57 = v71;
      v58 = v72;
      v59 = v73;
      (*(void (**)(char *, uint64_t, uint64_t))(v72 + 32))(v71, v53, v73);
      (*(void (**)(uint64_t, char *, uint64_t))(v58 + 16))(v70, v57, v59);
      sub_1C106CCF4();
      v60 = v69;
      sub_1C106CCE8();
      sub_1C07F8278(v87, v88, v90);
      v64 = v81;
      (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v60, v26);
      v65 = v57;
      v51 = v64;
      (*(void (**)(char *, uint64_t))(v58 + 8))(v65, v59);
      v52 = v80;
    }
    else
    {
      if (v56 != *MEMORY[0x1E0D3B708])
      {
        LODWORD(v67) = 0;
        v66 = 87;
        sub_1C1070954();
        __break(1u);
        return;
      }
      sub_1C07F82C0(v87, v88, v90);
    }
    sub_1C106CD18();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v26);
  }
  else
  {
    sub_1C079E1C0();
    sub_1C07803B8(&qword_1EF630638, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D6E8], MEMORY[0x1E0D3D6F8]);
    sub_1C07A0728();
    *v50 = v90;
    v50[1] = v7;
    sub_1C079A710((uint64_t)v50, *MEMORY[0x1E0D3D6C8]);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_willThrow();
  }
LABEL_18:
  sub_1C07757D0();
}

uint64_t sub_1C07F7BE0()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1C07F7C04()
{
  sub_1C07F7BE0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AssetRegistryFullServer()
{
  return objc_opt_self();
}

void sub_1C07F7C44()
{
  sub_1C07F7320();
}

uint64_t sub_1C07F7C64(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C07ACF80(&qword_1ED744A30);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C07F7CA4()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C07984B4();
  sub_1C07833B0();
  v1 = v0;
  swift_release();
  return v1;
}

uint64_t sub_1C07F7D20()
{
  return sub_1C07F8054();
}

uint64_t sub_1C07F7D44()
{
  return sub_1C07F7D68();
}

uint64_t sub_1C07F7D68()
{
  void (*v0)(uint64_t, uint64_t *);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1C07A50DC();
  v7 = v1;
  v8 = v3;
  v9 = v4;
  swift_retain();
  v0(v2, &v6);
  return swift_release();
}

void sub_1C07F7DF4()
{
  sub_1C0799690();
  sub_1C0A19090();
  sub_1C077C7C0();
  sub_1C07A36B8();
}

uint64_t sub_1C07F7E54()
{
  return sub_1C07F7FBC();
}

uint64_t sub_1C07F7E78()
{
  return sub_1C07F8054();
}

uint64_t sub_1C07F7E9C()
{
  return sub_1C07F8054();
}

uint64_t sub_1C07F7EC0()
{
  return sub_1C07F8054();
}

uint64_t sub_1C07F7EE4()
{
  return sub_1C07F8054();
}

uint64_t sub_1C07F7F08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1C07984B4();
  sub_1C0A19DB8();
  v2 = v1;
  swift_release();
  if (v0)
    return v3;
  else
    return v2;
}

uint64_t sub_1C07F7F98()
{
  return sub_1C07F7FBC();
}

uint64_t sub_1C07F7FBC()
{
  uint64_t (*v0)(uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C07A50DC();
  sub_1C07A073C();
  v2 = sub_1C078F11C();
  v3 = v0(v2);
  sub_1C077FA84();
  if (v1)
    return v4;
  else
    return v3;
}

uint64_t sub_1C07F8030()
{
  return sub_1C07F8054();
}

uint64_t sub_1C07F8054()
{
  uint64_t (*v0)(uint64_t);
  uint64_t v1;
  uint64_t v2;

  sub_1C07A50DC();
  sub_1C07A073C();
  v1 = sub_1C078F11C();
  v2 = v0(v1);
  sub_1C077FA84();
  return v2;
}

uint64_t sub_1C07F80BC()
{
  return sub_1C07F8054();
}

void sub_1C07F80E0()
{
  sub_1C0799690();
  sub_1C0A1A2F8();
  sub_1C077C7C0();
  sub_1C07A36B8();
}

uint64_t AssetRegistryOverrideStore.__allocating_init(config:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v3 = type metadata accessor for Configuration();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C078E3E0(a1, (uint64_t)v5);
  type metadata accessor for KeyValueStore();
  swift_allocObject();
  v6 = KeyValueStore.init(config:domain:)((uint64_t)v5, 0xD000000000000017, 0x80000001C10E2B50);
  result = sub_1C078D09C(a1);
  if (!v1)
  {
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v6;
  }
  return result;
}

void AssetRegistryOverrideStore.fetchAssetEntry(for:in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C07ADA24(a1, a2, a3);
  sub_1C07F7D68();
  sub_1C07767AC();
  sub_1C0786378();
}

void sub_1C07F8278(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C07ADA24(a1, a2, a3);
  sub_1C0B79744();
  sub_1C07767AC();
  sub_1C0786378();
}

BOOL sub_1C07F82C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Swift::String v3;
  Swift::Bool v4;

  v3._countAndFlagsBits = sub_1C07F831C(a1, a2, a3);
  v4 = KeyValueStore.delete(key:)(v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1C07F831C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  sub_1C106FC94();
  return a3;
}

uint64_t AssetRegistryOverrideStore.allOverridesIds()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19[2];
  uint64_t v20;

  KeyValueStore.keys()();
  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    v2 = (uint64_t *)(v0 + 40);
    v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v4 = *v2;
      v19[0] = *(v2 - 1);
      v19[1] = v4;
      sub_1C07F84B8(v19, &v15);
      v5 = v16;
      if (v16)
      {
        v6 = v15;
        v7 = v18;
        v20 = v17;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C0790D74();
          v3 = v10;
        }
        v8 = v3[2];
        if (v8 >= v3[3] >> 1)
        {
          sub_1C0790D74();
          v3 = v11;
        }
        v3[2] = v8 + 1;
        v9 = &v3[4 * v8];
        v9[4] = v6;
        v9[5] = v5;
        v9[6] = v20;
        v9[7] = v7;
      }
      v2 += 2;
      --v1;
    }
    while (v1);
  }
  else
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  v12 = sub_1C07F86EC(v3);
  v13 = sub_1C07FCA18(v12);
  sub_1C07767AC();
  return v13;
}

void sub_1C07F84B8(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16[4];

  v5 = *a1;
  v4 = a1[1];
  v16[0] = *a1;
  sub_1C07B1280();
  v6 = (_QWORD *)sub_1C10705D0();
  if (v6[2] == 2)
  {
    v7 = v6[4];
    v8 = v6[5];
    v10 = v6[6];
    v9 = v6[7];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_bridgeObjectRelease();
    *a2 = v7;
    a2[1] = v8;
    a2[2] = v10;
    a2[3] = v9;
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_1ED762B18 != -1)
      swift_once();
    v11 = sub_1C106F544();
    sub_1C079E000(v11, (uint64_t)qword_1ED762AF8);
    swift_bridgeObjectRetain_n();
    v12 = sub_1C106F538();
    v13 = sub_1C107039C();
    if (os_log_type_enabled(v12, v13))
    {
      v16[3] = v2;
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v16[0] = v15;
      *(_DWORD *)v14 = 136315138;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C0788DAC(v5, v4, v16);
      sub_1C10705AC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C0771000, v12, v13, "%s is not a valid Asset Registry override key in KVStore!", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v15, -1, -1);
      MEMORY[0x1C3BA8270](v14, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    *(_OWORD *)a2 = 0u;
    *((_OWORD *)a2 + 1) = 0u;
  }
}

uint64_t sub_1C07F86EC(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;

  v1 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v43 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v2 = a1[2];
  v37 = a1;
  if (v2)
  {
    v3 = a1 + 7;
    v40 = xmmword_1C1079220;
    while (1)
    {
      v5 = *(v3 - 3);
      v4 = *(v3 - 2);
      v6 = *(v3 - 1);
      v7 = *v3;
      swift_bridgeObjectRetain_n();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v15 = sub_1C077D774(v5, v4);
      v16 = v1[2];
      v17 = (v8 & 1) == 0;
      v18 = v16 + v17;
      if (__OFADD__(v16, v17))
        break;
      v19 = v8;
      if (v1[3] < v18)
      {
        sub_1C0A4B388(v18, 1, v9, v10, v11, v12, v13, v14, v36, v37, v38, v39, v40, SBYTE4(v40));
        v1 = v43;
        v20 = sub_1C077D774(v5, v4);
        if ((v19 & 1) != (v21 & 1))
          goto LABEL_19;
        v15 = v20;
      }
      if ((v19 & 1) != 0)
      {
        v41 = v2;
        swift_bridgeObjectRelease();
        v22 = v1[7];
        v23 = *(_QWORD *)(v22 + 8 * v15);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v39 = v22;
        *(_QWORD *)(v22 + 8 * v15) = v23;
        v42 = v6;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1C07EB750();
          v23 = v33;
          *(_QWORD *)(v22 + 8 * v15) = v33;
        }
        v25 = *(_QWORD *)(v23 + 16);
        v26 = v25 + 1;
        v2 = v41;
        if (v25 >= *(_QWORD *)(v23 + 24) >> 1)
        {
          v36 = v25 + 1;
          sub_1C07EB750();
          v26 = v25 + 1;
          v23 = v34;
          *(_QWORD *)(v39 + 8 * v15) = v34;
        }
        *(_QWORD *)(v23 + 16) = v26;
        v27 = (_QWORD *)(v23 + 32 * v25);
        v27[4] = v5;
        v27[5] = v4;
        v27[6] = v42;
        v27[7] = v7;
      }
      else
      {
        sub_1C07ACF80(&qword_1EF6301C8);
        v28 = swift_allocObject();
        *(_OWORD *)(v28 + 16) = v40;
        *(_QWORD *)(v28 + 32) = v5;
        *(_QWORD *)(v28 + 40) = v4;
        *(_QWORD *)(v28 + 48) = v6;
        *(_QWORD *)(v28 + 56) = v7;
        v1[(v15 >> 6) + 8] |= 1 << v15;
        v29 = (uint64_t *)(v1[6] + 16 * v15);
        *v29 = v5;
        v29[1] = v4;
        *(_QWORD *)(v1[7] + 8 * v15) = v28;
        v30 = v1[2];
        v31 = __OFADD__(v30, 1);
        v32 = v30 + 1;
        if (v31)
          goto LABEL_18;
        v1[2] = v32;
      }
      v3 += 4;
      if (!--v2)
        goto LABEL_16;
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    result = sub_1C1070D44();
    __break(1u);
  }
  else
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return (uint64_t)v1;
  }
  return result;
}

uint64_t AssetRegistryOverrideStore.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t AssetRegistryOverrideStore.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1C07F896C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C07F8B54(a1, a3, a4);
}

uint64_t sub_1C07F8994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C07F9018(a1, a3, a4);
}

uint64_t sub_1C07F89BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C07FADEC(a1, a3, a4, &qword_1EF630678, sub_1C07FD410);
}

uint64_t sub_1C07F89F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C07FADEC(a1, a3, a4, &qword_1ED7560C0, sub_1C07FD114);
}

uint64_t sub_1C07F8A34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C07FA938(a1, a3, a4);
}

uint64_t sub_1C07F8A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C07FADEC(a1, a3, a4, &qword_1EF630658, sub_1C07FD014);
}

uint64_t sub_1C07F8A98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  result = sub_1C07FB268(a1, a3, a4);
  if (v4)
    return v6;
  return result;
}

uint64_t sub_1C07F8AD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  result = a5(a1, a3, a4);
  if (v5)
    return v7;
  return result;
}

uint64_t sub_1C07F8B04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C07FBC10(a1, a3, a4);
}

uint64_t sub_1C07F8B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C07FC0A4(a1, a3, a4);
}

uint64_t sub_1C07F8B54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  void (*v13)(uint64_t *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  void (*v21)(char *, uint64_t);
  unint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[2];
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40[3];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43[3];
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;

  v52 = a3;
  v35 = a2;
  v33 = a1;
  v4 = sub_1C07ACF80(&qword_1ED7614F8);
  v32 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v31 - v8;
  if (qword_1ED761A78 != -1)
    swift_once();
  v10 = sub_1C106C49C();
  v11 = sub_1C079E000(v10, (uint64_t)qword_1ED78D968);
  v41 = v10;
  v42 = MEMORY[0x1E0D24668];
  v12 = sub_1C079DFC4(v40);
  v13 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v13(v12, v11, v10);
  v31[1] = v3;
  v14 = *(_QWORD *)(v3 + 16);
  v15 = *(_QWORD *)(v3 + 24);
  v16 = MEMORY[0x1E0D24960];
  v38 = MEMORY[0x1E0DEA968];
  v39 = MEMORY[0x1E0D24960];
  v36 = v14;
  v37 = v15;
  v17 = sub_1C106BCBC();
  v18 = MEMORY[0x1E0D23DC0];
  v44 = v17;
  v45 = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v43);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C310();
  sub_1C0784B94((uint64_t)&v36, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v40);
  sub_1C07FCDFC();
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v43);
  if (qword_1ED761A70 != -1)
    swift_once();
  v19 = sub_1C079E000(v10, (uint64_t)qword_1ED78D830);
  v41 = v10;
  v42 = MEMORY[0x1E0D24668];
  v20 = sub_1C079DFC4(v40);
  v13(v20, v19, v10);
  v38 = MEMORY[0x1E0DEA968];
  v39 = v16;
  v36 = v35;
  v37 = v52;
  v44 = v17;
  v45 = v18;
  sub_1C079DFC4(v43);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C310();
  sub_1C0784B94((uint64_t)&v36, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v40);
  sub_1C07FCE38((uint64_t)&unk_1ED7618C0);
  sub_1C106BDF4();
  v21 = *(void (**)(char *, uint64_t))(v32 + 8);
  v21(v6, v4);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v43);
  sub_1C07FCE38((uint64_t)&unk_1ED7618B8);
  sub_1C07FCE70();
  v22 = v34;
  sub_1C106BAC4();
  v21(v9, v4);
  if (v22)
    return (uint64_t)v21;
  v24 = v47;
  if (!v47)
    return 1;
  v34 = v46;
  v25 = v48;
  v26 = v49;
  v27 = v50;
  v28 = v51;
  sub_1C07ACF80(&qword_1EF6306A8);
  sub_1C07FD610((uint64_t)&unk_1EF6306B0);
  sub_1C106A960();
  v29 = v34;
  if (*(_QWORD *)(v46 + 16))
  {
    v30 = v25;
    v21 = *(void (**)(char *, uint64_t))(v46 + 32);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_bridgeObjectRelease();
    sub_1C07D8DF8(v29, v24, v30, v26, v27, v28);
    return (uint64_t)v21;
  }
  swift_bridgeObjectRelease();
  v46 = 0;
  v47 = 0xE000000000000000;
  sub_1C1070774();
  swift_bridgeObjectRelease();
  v46 = 0xD00000000000002FLL;
  v47 = 0x80000001C10E2BE0;
  sub_1C106FC94();
  result = sub_1C1070954();
  __break(1u);
  return result;
}

uint64_t sub_1C07F9018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  void (*v13)(uint64_t *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  void (*v21)(char *, uint64_t);
  unint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[2];
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40[3];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43[3];
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;

  v52 = a3;
  v35 = a2;
  v33 = a1;
  v4 = sub_1C07ACF80(&qword_1ED7614F8);
  v32 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v31 - v8;
  if (qword_1ED761A78 != -1)
    swift_once();
  v10 = sub_1C106C49C();
  v11 = sub_1C079E000(v10, (uint64_t)qword_1ED78D968);
  v41 = v10;
  v42 = MEMORY[0x1E0D24668];
  v12 = sub_1C079DFC4(v40);
  v13 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v13(v12, v11, v10);
  v31[1] = v3;
  v14 = *(_QWORD *)(v3 + 16);
  v15 = *(_QWORD *)(v3 + 24);
  v16 = MEMORY[0x1E0D24960];
  v38 = MEMORY[0x1E0DEA968];
  v39 = MEMORY[0x1E0D24960];
  v36 = v14;
  v37 = v15;
  v17 = sub_1C106BCBC();
  v18 = MEMORY[0x1E0D23DC0];
  v44 = v17;
  v45 = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v43);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C310();
  sub_1C0784B94((uint64_t)&v36, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v40);
  sub_1C07FCDFC();
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v43);
  if (qword_1ED761A70 != -1)
    swift_once();
  v19 = sub_1C079E000(v10, (uint64_t)qword_1ED78D830);
  v41 = v10;
  v42 = MEMORY[0x1E0D24668];
  v20 = sub_1C079DFC4(v40);
  v13(v20, v19, v10);
  v38 = MEMORY[0x1E0DEA968];
  v39 = v16;
  v36 = v35;
  v37 = v52;
  v44 = v17;
  v45 = v18;
  sub_1C079DFC4(v43);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C310();
  sub_1C0784B94((uint64_t)&v36, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v40);
  sub_1C07FCE38((uint64_t)&unk_1ED7618C0);
  sub_1C106BDF4();
  v21 = *(void (**)(char *, uint64_t))(v32 + 8);
  v21(v6, v4);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v43);
  sub_1C07FCE38((uint64_t)&unk_1ED7618B8);
  sub_1C07FCE70();
  v22 = v34;
  sub_1C106BAC4();
  v21(v9, v4);
  if (v22)
    return (uint64_t)v21;
  v24 = v47;
  if (!v47)
    return 0;
  v34 = v46;
  v25 = v48;
  v26 = v49;
  v27 = v50;
  v28 = v51;
  sub_1C07ACF80(&qword_1ED762B70);
  sub_1C07FD2C4((uint64_t)&unk_1ED762B78);
  sub_1C106A960();
  v29 = v34;
  if (*(_QWORD *)(v46 + 16))
  {
    v30 = v25;
    v21 = *(void (**)(char *, uint64_t))(v46 + 32);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_bridgeObjectRelease();
    sub_1C07D8DF8(v29, v24, v30, v26, v27, v28);
    return (uint64_t)v21;
  }
  swift_bridgeObjectRelease();
  v46 = 0;
  v47 = 0xE000000000000000;
  sub_1C1070774();
  swift_bridgeObjectRelease();
  v46 = 0xD00000000000002FLL;
  v47 = 0x80000001C10E2BE0;
  sub_1C106FC94();
  result = sub_1C1070954();
  __break(1u);
  return result;
}

uint64_t sub_1C07F94E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  void (*v16)(uint64_t *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51[3];
  uint64_t v52;
  uint64_t v53;
  uint64_t v54[3];
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;

  v63 = a3;
  v46 = a2;
  v44 = a1;
  v41 = a4;
  v5 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v5);
  v40 = (uint64_t)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C07ACF80(&qword_1ED7614F8);
  v43 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v39 - v11;
  if (qword_1ED761A78 != -1)
    swift_once();
  v13 = sub_1C106C49C();
  v14 = sub_1C079E000(v13, (uint64_t)qword_1ED78D968);
  v52 = v13;
  v53 = MEMORY[0x1E0D24668];
  v15 = sub_1C079DFC4(v51);
  v16 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  v16(v15, v14, v13);
  v42 = v4;
  v17 = *(_QWORD *)(v4 + 16);
  v18 = *(_QWORD *)(v4 + 24);
  v19 = MEMORY[0x1E0D24960];
  v49 = MEMORY[0x1E0DEA968];
  v50 = MEMORY[0x1E0D24960];
  v47 = v17;
  v48 = v18;
  v20 = sub_1C106BCBC();
  v21 = MEMORY[0x1E0D23DC0];
  v55 = v20;
  v56 = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v54);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C310();
  sub_1C0784B94((uint64_t)&v47, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v51);
  sub_1C07FCDFC();
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v54);
  if (qword_1ED761A70 != -1)
    swift_once();
  v22 = sub_1C079E000(v13, (uint64_t)qword_1ED78D830);
  v52 = v13;
  v53 = MEMORY[0x1E0D24668];
  v23 = sub_1C079DFC4(v51);
  v16(v23, v22, v13);
  v49 = MEMORY[0x1E0DEA968];
  v50 = v19;
  v47 = v46;
  v48 = v63;
  v55 = v20;
  v56 = v21;
  sub_1C079DFC4(v54);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C310();
  sub_1C0784B94((uint64_t)&v47, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v51);
  sub_1C07FCE38((uint64_t)&unk_1ED7618C0);
  sub_1C106BDF4();
  v24 = *(void (**)(char *, uint64_t))(v43 + 8);
  v24(v10, v7);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v54);
  sub_1C07FCE38((uint64_t)&unk_1ED7618B8);
  sub_1C07FCE70();
  v25 = v45;
  sub_1C106BAC4();
  result = ((uint64_t (*)(char *, uint64_t))v24)(v12, v7);
  if (!v25)
  {
    v27 = v58;
    if (v58)
    {
      v28 = v57;
      v29 = v59;
      v30 = v60;
      v31 = v61;
      v32 = v62;
      sub_1C07ACF80(&qword_1ED761298);
      sub_1C07FD038();
      sub_1C106A960();
      v36 = v40;
      sub_1C0AA461C(v57, v40);
      swift_bridgeObjectRelease();
      v37 = sub_1C106ADE0();
      if (sub_1C07B2D80(v36, 1, v37) == 1)
      {
        sub_1C0784B94(v36, (uint64_t *)&unk_1ED762690);
        v57 = 0;
        v58 = 0xE000000000000000;
        sub_1C1070774();
        swift_bridgeObjectRelease();
        v57 = 0xD00000000000002FLL;
        v58 = 0x80000001C10E2BE0;
        sub_1C106FC94();
        result = sub_1C1070954();
        __break(1u);
        return result;
      }
      sub_1C07D8DF8(v28, v27, v29, v30, v31, v32);
      v38 = v41;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v41, v36, v37);
      v34 = v38;
      v35 = 0;
      v33 = v37;
    }
    else
    {
      v33 = sub_1C106ADE0();
      v34 = v41;
      v35 = 1;
    }
    return sub_1C07B2D8C(v34, v35, 1, v33);
  }
  return result;
}

uint64_t sub_1C07F9A2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  void (*v16)(uint64_t *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51[3];
  uint64_t v52;
  uint64_t v53;
  uint64_t v54[3];
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;

  v63 = a3;
  v46 = a2;
  v44 = a1;
  v41 = a4;
  v5 = sub_1C07ACF80(&qword_1ED744A30);
  MEMORY[0x1E0C80A78](v5);
  v40 = (uint64_t)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C07ACF80(&qword_1ED7614F8);
  v43 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v39 - v11;
  if (qword_1ED761A78 != -1)
    swift_once();
  v13 = sub_1C106C49C();
  v14 = sub_1C079E000(v13, (uint64_t)qword_1ED78D968);
  v52 = v13;
  v53 = MEMORY[0x1E0D24668];
  v15 = sub_1C079DFC4(v51);
  v16 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  v16(v15, v14, v13);
  v42 = v4;
  v17 = *(_QWORD *)(v4 + 16);
  v18 = *(_QWORD *)(v4 + 24);
  v19 = MEMORY[0x1E0D24960];
  v49 = MEMORY[0x1E0DEA968];
  v50 = MEMORY[0x1E0D24960];
  v47 = v17;
  v48 = v18;
  v20 = sub_1C106BCBC();
  v21 = MEMORY[0x1E0D23DC0];
  v55 = v20;
  v56 = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v54);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C310();
  sub_1C0784B94((uint64_t)&v47, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v51);
  sub_1C07FCDFC();
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v54);
  if (qword_1ED761A70 != -1)
    swift_once();
  v22 = sub_1C079E000(v13, (uint64_t)qword_1ED78D830);
  v52 = v13;
  v53 = MEMORY[0x1E0D24668];
  v23 = sub_1C079DFC4(v51);
  v16(v23, v22, v13);
  v49 = MEMORY[0x1E0DEA968];
  v50 = v19;
  v47 = v46;
  v48 = v63;
  v55 = v20;
  v56 = v21;
  sub_1C079DFC4(v54);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C310();
  sub_1C0784B94((uint64_t)&v47, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v51);
  sub_1C07FCE38((uint64_t)&unk_1ED7618C0);
  sub_1C106BDF4();
  v24 = *(void (**)(char *, uint64_t))(v43 + 8);
  v24(v10, v7);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v54);
  sub_1C07FCE38((uint64_t)&unk_1ED7618B8);
  sub_1C07FCE70();
  v25 = v45;
  sub_1C106BAC4();
  result = ((uint64_t (*)(char *, uint64_t))v24)(v12, v7);
  if (!v25)
  {
    v27 = v58;
    if (v58)
    {
      v28 = v57;
      v29 = v59;
      v30 = v60;
      v31 = v61;
      v32 = v62;
      sub_1C07ACF80(&qword_1EF630698);
      sub_1C07FD548();
      sub_1C106A960();
      v36 = v40;
      sub_1C0AA4674(v57, v40);
      swift_bridgeObjectRelease();
      v37 = sub_1C106CD00();
      if (sub_1C07B2D80(v36, 1, v37) == 1)
      {
        sub_1C0784B94(v36, &qword_1ED744A30);
        v57 = 0;
        v58 = 0xE000000000000000;
        sub_1C1070774();
        swift_bridgeObjectRelease();
        v57 = 0xD00000000000002FLL;
        v58 = 0x80000001C10E2BE0;
        sub_1C106FC94();
        result = sub_1C1070954();
        __break(1u);
        return result;
      }
      sub_1C07D8DF8(v28, v27, v29, v30, v31, v32);
      v38 = v41;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v41, v36, v37);
      v34 = v38;
      v35 = 0;
      v33 = v37;
    }
    else
    {
      v33 = sub_1C106CD00();
      v34 = v41;
      v35 = 1;
    }
    return sub_1C07B2D8C(v34, v35, 1, v33);
  }
  return result;
}

uint64_t sub_1C07F9F74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  void (*v14)(uint64_t *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  void (*v22)(char *, uint64_t);
  _QWORD *v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44[3];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47[3];
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;

  v56 = a3;
  v39 = a2;
  v37 = a1;
  v35[0] = a4;
  v5 = sub_1C07ACF80(&qword_1ED7614F8);
  v36 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v35 - v9;
  if (qword_1ED761A78 != -1)
    swift_once();
  v11 = sub_1C106C49C();
  v12 = sub_1C079E000(v11, (uint64_t)qword_1ED78D968);
  v45 = v11;
  v46 = MEMORY[0x1E0D24668];
  v13 = sub_1C079DFC4(v44);
  v14 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v14(v13, v12, v11);
  v35[1] = v4;
  v15 = *(_QWORD *)(v4 + 16);
  v16 = *(_QWORD *)(v4 + 24);
  v17 = MEMORY[0x1E0D24960];
  v42 = MEMORY[0x1E0DEA968];
  v43 = MEMORY[0x1E0D24960];
  v40 = v15;
  v41 = v16;
  v18 = sub_1C106BCBC();
  v19 = MEMORY[0x1E0D23DC0];
  v48 = v18;
  v49 = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v47);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C310();
  sub_1C0784B94((uint64_t)&v40, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v44);
  sub_1C07FCDFC();
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v47);
  if (qword_1ED761A70 != -1)
    swift_once();
  v20 = sub_1C079E000(v11, (uint64_t)qword_1ED78D830);
  v45 = v11;
  v46 = MEMORY[0x1E0D24668];
  v21 = sub_1C079DFC4(v44);
  v14(v21, v20, v11);
  v42 = MEMORY[0x1E0DEA968];
  v43 = v17;
  v40 = v39;
  v41 = v56;
  v48 = v18;
  v49 = v19;
  sub_1C079DFC4(v47);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C310();
  sub_1C0784B94((uint64_t)&v40, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v44);
  sub_1C07FCE38((uint64_t)&unk_1ED7618C0);
  sub_1C106BDF4();
  v22 = *(void (**)(char *, uint64_t))(v36 + 8);
  v22(v8, v5);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v47);
  sub_1C07FCE38((uint64_t)&unk_1ED7618B8);
  sub_1C07FCE70();
  v23 = v38;
  sub_1C106BAC4();
  result = ((uint64_t (*)(char *, uint64_t))v22)(v10, v5);
  if (!v23)
  {
    v25 = v51;
    if (v51)
    {
      v38 = v50;
      v26 = v52;
      v27 = v53;
      v28 = v54;
      v29 = v55;
      sub_1C07ACF80(&qword_1EF630668);
      sub_1C07FD610((uint64_t)&unk_1EF630670);
      sub_1C106A960();
      v32 = (uint64_t)v38;
      v37 = v27;
      if (!v50[2])
      {
        swift_bridgeObjectRelease();
        v50 = 0;
        v51 = 0xE000000000000000;
        sub_1C1070774();
        swift_bridgeObjectRelease();
        v50 = (_QWORD *)0xD00000000000002FLL;
        v51 = 0x80000001C10E2BE0;
        sub_1C106FC94();
        result = sub_1C1070954();
        __break(1u);
        return result;
      }
      v33 = v26;
      v30 = v50[4];
      v31 = v50[5];
      sub_1C07B0E28(v30, v31);
      swift_bridgeObjectRelease();
      result = sub_1C07D8DF8(v32, v25, v33, v37, v28, v29);
    }
    else
    {
      v30 = 0;
      v31 = 0xF000000000000000;
    }
    v34 = v35[0];
    *(_QWORD *)v35[0] = v30;
    *(_QWORD *)(v34 + 8) = v31;
  }
  return result;
}

uint64_t sub_1C07FA458(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  void (*v13)(uint64_t *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  void (*v21)(char *, uint64_t);
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  _QWORD v31[2];
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40[3];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43[3];
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;

  v52 = a3;
  v35 = a2;
  v33 = a1;
  v4 = sub_1C07ACF80(&qword_1ED7614F8);
  v32 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v31 - v8;
  if (qword_1ED761A78 != -1)
    swift_once();
  v10 = sub_1C106C49C();
  v11 = sub_1C079E000(v10, (uint64_t)qword_1ED78D968);
  v41 = v10;
  v42 = MEMORY[0x1E0D24668];
  v12 = sub_1C079DFC4(v40);
  v13 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v13(v12, v11, v10);
  v31[1] = v3;
  v14 = *(_QWORD *)(v3 + 16);
  v15 = *(_QWORD *)(v3 + 24);
  v16 = MEMORY[0x1E0D24960];
  v38 = MEMORY[0x1E0DEA968];
  v39 = MEMORY[0x1E0D24960];
  v36 = v14;
  v37 = v15;
  v17 = sub_1C106BCBC();
  v18 = MEMORY[0x1E0D23DC0];
  v44 = v17;
  v45 = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v43);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C310();
  sub_1C0784B94((uint64_t)&v36, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v40);
  sub_1C07FCDFC();
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v43);
  if (qword_1ED761A70 != -1)
    swift_once();
  v19 = sub_1C079E000(v10, (uint64_t)qword_1ED78D830);
  v41 = v10;
  v42 = MEMORY[0x1E0D24668];
  v20 = sub_1C079DFC4(v40);
  v13(v20, v19, v10);
  v38 = MEMORY[0x1E0DEA968];
  v39 = v16;
  v36 = v35;
  v37 = v52;
  v44 = v17;
  v45 = v18;
  sub_1C079DFC4(v43);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C310();
  sub_1C0784B94((uint64_t)&v36, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v40);
  sub_1C07FCE38((uint64_t)&unk_1ED7618C0);
  sub_1C106BDF4();
  v21 = *(void (**)(char *, uint64_t))(v32 + 8);
  v21(v7, v4);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v43);
  sub_1C07FCE38((uint64_t)&unk_1ED7618B8);
  sub_1C07FCE70();
  v22 = v34;
  sub_1C106BAC4();
  v21(v9, v4);
  if (v22)
    return (uint64_t)v21;
  v23 = v47;
  if (!v47)
    return 0;
  v34 = v46;
  v24 = v48;
  v25 = v49;
  v26 = v50;
  v27 = v51;
  sub_1C07ACF80(&qword_1ED761468);
  sub_1C07FD2C4((uint64_t)&unk_1ED762450);
  sub_1C106A960();
  v28 = v34;
  if (*(_QWORD *)(v46 + 16))
  {
    v29 = v24;
    v21 = *(void (**)(char *, uint64_t))(v46 + 32);
    swift_bridgeObjectRelease();
    sub_1C07D8DF8(v28, v23, v29, v25, v26, v27);
    return (uint64_t)v21;
  }
  swift_bridgeObjectRelease();
  v46 = 0;
  v47 = 0xE000000000000000;
  sub_1C1070774();
  swift_bridgeObjectRelease();
  v46 = 0xD00000000000002FLL;
  v47 = 0x80000001C10E2BE0;
  sub_1C106FC94();
  result = sub_1C1070954();
  __break(1u);
  return result;
}

uint64_t sub_1C07FA914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C07FADEC(a1, a2, a3, &qword_1ED7560C0, sub_1C07FD114);
}

uint64_t sub_1C07FA938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  void (*v13)(uint64_t *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  void (*v21)(char *, uint64_t);
  unint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[2];
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40[3];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43[3];
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;

  v52 = a3;
  v35 = a2;
  v33 = a1;
  v4 = sub_1C07ACF80(&qword_1ED7614F8);
  v32 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v31 - v8;
  if (qword_1ED761A78 != -1)
    swift_once();
  v10 = sub_1C106C49C();
  v11 = sub_1C079E000(v10, (uint64_t)qword_1ED78D968);
  v41 = v10;
  v42 = MEMORY[0x1E0D24668];
  v12 = sub_1C079DFC4(v40);
  v13 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v13(v12, v11, v10);
  v31[1] = v3;
  v14 = *(_QWORD *)(v3 + 16);
  v15 = *(_QWORD *)(v3 + 24);
  v16 = MEMORY[0x1E0D24960];
  v38 = MEMORY[0x1E0DEA968];
  v39 = MEMORY[0x1E0D24960];
  v36 = v14;
  v37 = v15;
  v17 = sub_1C106BCBC();
  v18 = MEMORY[0x1E0D23DC0];
  v44 = v17;
  v45 = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v43);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C310();
  sub_1C0784B94((uint64_t)&v36, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v40);
  sub_1C07FCDFC();
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v43);
  if (qword_1ED761A70 != -1)
    swift_once();
  v19 = sub_1C079E000(v10, (uint64_t)qword_1ED78D830);
  v41 = v10;
  v42 = MEMORY[0x1E0D24668];
  v20 = sub_1C079DFC4(v40);
  v13(v20, v19, v10);
  v38 = MEMORY[0x1E0DEA968];
  v39 = v16;
  v36 = v35;
  v37 = v52;
  v44 = v17;
  v45 = v18;
  sub_1C079DFC4(v43);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C310();
  sub_1C0784B94((uint64_t)&v36, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v40);
  sub_1C07FCE38((uint64_t)&unk_1ED7618C0);
  sub_1C106BDF4();
  v21 = *(void (**)(char *, uint64_t))(v32 + 8);
  v21(v6, v4);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v43);
  sub_1C07FCE38((uint64_t)&unk_1ED7618B8);
  sub_1C07FCE70();
  v22 = v34;
  sub_1C106BAC4();
  v21(v9, v4);
  if (v22)
    return (uint64_t)v21;
  v24 = v47;
  if (!v47)
    return 2;
  v34 = v46;
  v25 = v48;
  v26 = v49;
  v27 = v50;
  v28 = v51;
  sub_1C07ACF80(&qword_1ED762448);
  sub_1C07FD2C4((uint64_t)&unk_1ED760858);
  sub_1C106A960();
  v29 = v34;
  if (*(_QWORD *)(v46 + 16))
  {
    v30 = v25;
    v21 = (void (*)(char *, uint64_t))*(unsigned __int8 *)(v46 + 32);
    swift_bridgeObjectRelease();
    sub_1C07D8DF8(v29, v24, v30, v26, v27, v28);
    return (uint64_t)v21;
  }
  swift_bridgeObjectRelease();
  v46 = 0;
  v47 = 0xE000000000000000;
  sub_1C1070774();
  swift_bridgeObjectRelease();
  v46 = 0xD00000000000002FLL;
  v47 = 0x80000001C10E2BE0;
  sub_1C106FC94();
  result = sub_1C1070954();
  __break(1u);
  return result;
}

uint64_t sub_1C07FADEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  void (*v15)(uint64_t *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[2];
  uint64_t *v31;
  void (*v32)(void);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41[3];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44[3];
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v32 = a5;
  v31 = a4;
  v50 = a3;
  v36 = a2;
  v34 = a1;
  v6 = sub_1C07ACF80(&qword_1ED7614F8);
  v33 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v30 - v10;
  if (qword_1ED761A78 != -1)
    swift_once();
  v12 = sub_1C106C49C();
  v13 = sub_1C079E000(v12, (uint64_t)qword_1ED78D968);
  v42 = v12;
  v43 = MEMORY[0x1E0D24668];
  v14 = sub_1C079DFC4(v41);
  v15 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  v15(v14, v13, v12);
  v30[1] = v5;
  v16 = *(_QWORD *)(v5 + 16);
  v17 = *(_QWORD *)(v5 + 24);
  v18 = MEMORY[0x1E0D24960];
  v39 = MEMORY[0x1E0DEA968];
  v40 = MEMORY[0x1E0D24960];
  v37 = v16;
  v38 = v17;
  v19 = sub_1C106BCBC();
  v20 = MEMORY[0x1E0D23DC0];
  v45 = v19;
  v46 = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v44);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0787854();
  sub_1C0784B94((uint64_t)&v37, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v41);
  sub_1C07FCDFC();
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v44);
  if (qword_1ED761A70 != -1)
    swift_once();
  v21 = sub_1C079E000(v12, (uint64_t)qword_1ED78D830);
  v42 = v12;
  v43 = MEMORY[0x1E0D24668];
  v22 = sub_1C079DFC4(v41);
  v15(v22, v21, v12);
  v39 = MEMORY[0x1E0DEA968];
  v40 = v18;
  v37 = v36;
  v38 = v50;
  v45 = v19;
  v46 = v20;
  sub_1C079DFC4(v44);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0787854();
  sub_1C0784B94((uint64_t)&v37, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v41);
  sub_1C07FCE38((uint64_t)&unk_1ED7618C0);
  sub_1C106BDF4();
  v23 = *(void (**)(char *, uint64_t))(v33 + 8);
  v23(v8, v6);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v44);
  sub_1C07FCE38((uint64_t)&unk_1ED7618B8);
  sub_1C07FCE70();
  v24 = v35;
  sub_1C106BAC4();
  v23(v11, v6);
  if (v24)
    return (uint64_t)v23;
  v26 = v48;
  if (!v48)
    return 0;
  v27 = v47;
  v28 = v49;
  sub_1C07ACF80(v31);
  v32();
  sub_1C106A960();
  if (*(_QWORD *)(v47 + 16))
  {
    v29 = v28;
    v23 = *(void (**)(char *, uint64_t))(v47 + 32);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_bridgeObjectRelease();
    sub_1C079607C(v27, v26, v29);
    return (uint64_t)v23;
  }
  swift_bridgeObjectRelease();
  v47 = 0;
  v48 = 0xE000000000000000;
  sub_1C1070774();
  swift_bridgeObjectRelease();
  v47 = 0xD00000000000002FLL;
  v48 = 0x80000001C10E2BE0;
  sub_1C106FC94();
  result = sub_1C1070954();
  __break(1u);
  return result;
}

uint64_t sub_1C07FB268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  void (*v13)(uint64_t *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  void (*v21)(char *, uint64_t);
  unint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[2];
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40[3];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43[3];
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;

  v52 = a3;
  v35 = a2;
  v33 = a1;
  v4 = sub_1C07ACF80(&qword_1ED7614F8);
  v32 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v31 - v8;
  if (qword_1ED761A78 != -1)
    swift_once();
  v10 = sub_1C106C49C();
  v11 = sub_1C079E000(v10, (uint64_t)qword_1ED78D968);
  v41 = v10;
  v42 = MEMORY[0x1E0D24668];
  v12 = sub_1C079DFC4(v40);
  v13 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v13(v12, v11, v10);
  v31[1] = v3;
  v14 = *(_QWORD *)(v3 + 16);
  v15 = *(_QWORD *)(v3 + 24);
  v16 = MEMORY[0x1E0D24960];
  v38 = MEMORY[0x1E0DEA968];
  v39 = MEMORY[0x1E0D24960];
  v36 = v14;
  v37 = v15;
  v17 = sub_1C106BCBC();
  v18 = MEMORY[0x1E0D23DC0];
  v44 = v17;
  v45 = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v43);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C310();
  sub_1C0784B94((uint64_t)&v36, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v40);
  sub_1C07FCDFC();
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v43);
  if (qword_1ED761A70 != -1)
    swift_once();
  v19 = sub_1C079E000(v10, (uint64_t)qword_1ED78D830);
  v41 = v10;
  v42 = MEMORY[0x1E0D24668];
  v20 = sub_1C079DFC4(v40);
  v13(v20, v19, v10);
  v38 = MEMORY[0x1E0DEA968];
  v39 = v16;
  v36 = v35;
  v37 = v52;
  v44 = v17;
  v45 = v18;
  sub_1C079DFC4(v43);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C310();
  sub_1C0784B94((uint64_t)&v36, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v40);
  sub_1C07FCE38((uint64_t)&unk_1ED7618C0);
  sub_1C106BDF4();
  v21 = *(void (**)(char *, uint64_t))(v32 + 8);
  v21(v6, v4);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v43);
  sub_1C07FCE38((uint64_t)&qword_1ED7618B8);
  sub_1C07FCE70();
  v22 = v34;
  sub_1C106BAC4();
  v21(v9, v4);
  if (v22)
    return (uint64_t)v21;
  v24 = v47;
  if (!v47)
    return 0;
  v34 = v46;
  v25 = v48;
  v26 = v49;
  v27 = v50;
  v28 = v51;
  sub_1C07ACF80(&qword_1EF630640);
  sub_1C07FD610((uint64_t)&unk_1EF630648);
  sub_1C106A960();
  v29 = v34;
  v33 = v26;
  if (*(_QWORD *)(v46 + 16))
  {
    v30 = v25;
    v21 = *(void (**)(char *, uint64_t))(v46 + 32);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_bridgeObjectRelease();
    sub_1C07D8DF8(v29, v24, v30, v33, v27, v28);
    return (uint64_t)v21;
  }
  swift_bridgeObjectRelease();
  v46 = 0;
  v47 = 0xE000000000000000;
  sub_1C1070774();
  swift_bridgeObjectRelease();
  v46 = 0xD00000000000002FLL;
  v47 = 0x80000001C10E2BE0;
  sub_1C106FC94();
  result = sub_1C1070954();
  __break(1u);
  return result;
}

uint64_t sub_1C07FB754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  void (*v13)(uint64_t *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  void (*v21)(char *, uint64_t);
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  _QWORD v31[2];
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40[3];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43[3];
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;

  v52 = a3;
  v35 = a2;
  v33 = a1;
  v4 = sub_1C07ACF80(&qword_1ED7614F8);
  v32 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v31 - v8;
  if (qword_1ED761A78 != -1)
    swift_once();
  v10 = sub_1C106C49C();
  v11 = sub_1C079E000(v10, (uint64_t)qword_1ED78D968);
  v41 = v10;
  v42 = MEMORY[0x1E0D24668];
  v12 = sub_1C079DFC4(v40);
  v13 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v13(v12, v11, v10);
  v31[1] = v3;
  v14 = *(_QWORD *)(v3 + 16);
  v15 = *(_QWORD *)(v3 + 24);
  v16 = MEMORY[0x1E0D24960];
  v38 = MEMORY[0x1E0DEA968];
  v39 = MEMORY[0x1E0D24960];
  v36 = v14;
  v37 = v15;
  v17 = sub_1C106BCBC();
  v18 = MEMORY[0x1E0D23DC0];
  v44 = v17;
  v45 = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v43);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C310();
  sub_1C0784B94((uint64_t)&v36, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v40);
  sub_1C07FCDFC();
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v43);
  if (qword_1ED761A70 != -1)
    swift_once();
  v19 = sub_1C079E000(v10, (uint64_t)qword_1ED78D830);
  v41 = v10;
  v42 = MEMORY[0x1E0D24668];
  v20 = sub_1C079DFC4(v40);
  v13(v20, v19, v10);
  v38 = MEMORY[0x1E0DEA968];
  v39 = v16;
  v36 = v35;
  v37 = v52;
  v44 = v17;
  v45 = v18;
  sub_1C079DFC4(v43);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C310();
  sub_1C0784B94((uint64_t)&v36, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v40);
  sub_1C07FCE38((uint64_t)&unk_1ED7618C0);
  sub_1C106BDF4();
  v21 = *(void (**)(char *, uint64_t))(v32 + 8);
  v21(v6, v4);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v43);
  sub_1C07FCE38((uint64_t)&qword_1ED7618B8);
  sub_1C07FCE70();
  v22 = v34;
  sub_1C106BAC4();
  v21(v9, v4);
  if (v22)
    return (uint64_t)v21;
  v23 = v47;
  if (!v47)
    return 0;
  v34 = v46;
  v24 = v48;
  v25 = v49;
  v26 = v50;
  v27 = v51;
  sub_1C07ACF80(&qword_1ED7612B8);
  sub_1C07FD2C4((uint64_t)&unk_1ED75D388);
  sub_1C106A960();
  v28 = v34;
  if (*(_QWORD *)(v46 + 16))
  {
    v29 = v24;
    v21 = *(void (**)(char *, uint64_t))(v46 + 32);
    swift_bridgeObjectRelease();
    sub_1C07D8DF8(v28, v23, v29, v25, v26, v27);
    return (uint64_t)v21;
  }
  swift_bridgeObjectRelease();
  v46 = 0;
  v47 = 0xE000000000000000;
  sub_1C1070774();
  swift_bridgeObjectRelease();
  v46 = 0xD00000000000002FLL;
  v47 = 0x80000001C10E2BE0;
  sub_1C106FC94();
  result = sub_1C1070954();
  __break(1u);
  return result;
}

uint64_t sub_1C07FBC10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  void (*v13)(uint64_t *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD v31[2];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40[3];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43[3];
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;

  v52 = a3;
  v35 = a2;
  v33 = a1;
  v4 = sub_1C07ACF80(&qword_1ED7614F8);
  v32 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v31 - v8;
  if (qword_1ED761A78 != -1)
    swift_once();
  v10 = sub_1C106C49C();
  v11 = sub_1C079E000(v10, (uint64_t)qword_1ED78D968);
  v41 = v10;
  v42 = MEMORY[0x1E0D24668];
  v12 = sub_1C079DFC4(v40);
  v13 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v13(v12, v11, v10);
  v31[1] = v3;
  v14 = *(_QWORD *)(v3 + 16);
  v15 = *(_QWORD *)(v3 + 24);
  v16 = MEMORY[0x1E0D24960];
  v38 = MEMORY[0x1E0DEA968];
  v39 = MEMORY[0x1E0D24960];
  v36 = v14;
  v37 = v15;
  v17 = sub_1C106BCBC();
  v18 = MEMORY[0x1E0D23DC0];
  v44 = v17;
  v45 = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v43);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C310();
  sub_1C0784B94((uint64_t)&v36, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v40);
  sub_1C07FCDFC();
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v43);
  if (qword_1ED761A70 != -1)
    swift_once();
  v19 = sub_1C079E000(v10, (uint64_t)qword_1ED78D830);
  v41 = v10;
  v42 = MEMORY[0x1E0D24668];
  v20 = sub_1C079DFC4(v40);
  v13(v20, v19, v10);
  v38 = MEMORY[0x1E0DEA968];
  v39 = v16;
  v36 = v35;
  v37 = v52;
  v44 = v17;
  v45 = v18;
  sub_1C079DFC4(v43);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C310();
  sub_1C0784B94((uint64_t)&v36, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v40);
  sub_1C07FCE38((uint64_t)&unk_1ED7618C0);
  sub_1C106BDF4();
  v21 = *(void (**)(char *, uint64_t))(v32 + 8);
  v21(v6, v4);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v43);
  sub_1C07FCE38((uint64_t)&unk_1ED7618B8);
  sub_1C07FCE70();
  v22 = v34;
  sub_1C106BAC4();
  v21(v9, v4);
  if (v22)
    return (uint64_t)v21;
  v24 = v47;
  if (!v47)
    return 0;
  v25 = v46;
  v26 = v48;
  v27 = v49;
  v28 = v50;
  v29 = v51;
  sub_1C07ACF80(&qword_1ED75D110);
  sub_1C07FD240();
  sub_1C106A960();
  if (*(_QWORD *)(v46 + 16))
  {
    v30 = v26;
    v21 = *(void (**)(char *, uint64_t))(v46 + 32);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_bridgeObjectRelease();
    sub_1C07D8DF8(v25, v24, v30, v27, v28, v29);
    return (uint64_t)v21;
  }
  swift_bridgeObjectRelease();
  v46 = 0;
  v47 = 0xE000000000000000;
  sub_1C1070774();
  swift_bridgeObjectRelease();
  v46 = 0xD00000000000002FLL;
  v47 = 0x80000001C10E2BE0;
  sub_1C106FC94();
  result = sub_1C1070954();
  __break(1u);
  return result;
}

uint64_t sub_1C07FC0A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  void (*v13)(uint64_t *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  void (*v21)(char *, uint64_t);
  unint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[2];
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40[3];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43[3];
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;

  v52 = a3;
  v35 = a2;
  v33 = a1;
  v4 = sub_1C07ACF80(&qword_1ED7614F8);
  v32 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v31 - v8;
  if (qword_1ED761A78 != -1)
    swift_once();
  v10 = sub_1C106C49C();
  v11 = sub_1C079E000(v10, (uint64_t)qword_1ED78D968);
  v41 = v10;
  v42 = MEMORY[0x1E0D24668];
  v12 = sub_1C079DFC4(v40);
  v13 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v13(v12, v11, v10);
  v31[1] = v3;
  v14 = *(_QWORD *)(v3 + 16);
  v15 = *(_QWORD *)(v3 + 24);
  v16 = MEMORY[0x1E0D24960];
  v38 = MEMORY[0x1E0DEA968];
  v39 = MEMORY[0x1E0D24960];
  v36 = v14;
  v37 = v15;
  v17 = sub_1C106BCBC();
  v18 = MEMORY[0x1E0D23DC0];
  v44 = v17;
  v45 = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v43);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C310();
  sub_1C0784B94((uint64_t)&v36, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v40);
  sub_1C07FCDFC();
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v43);
  if (qword_1ED761A70 != -1)
    swift_once();
  v19 = sub_1C079E000(v10, (uint64_t)qword_1ED78D830);
  v41 = v10;
  v42 = MEMORY[0x1E0D24668];
  v20 = sub_1C079DFC4(v40);
  v13(v20, v19, v10);
  v38 = MEMORY[0x1E0DEA968];
  v39 = v16;
  v36 = v35;
  v37 = v52;
  v44 = v17;
  v45 = v18;
  sub_1C079DFC4(v43);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C310();
  sub_1C0784B94((uint64_t)&v36, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v40);
  sub_1C07FCE38((uint64_t)&unk_1ED7618C0);
  sub_1C106BDF4();
  v21 = *(void (**)(char *, uint64_t))(v32 + 8);
  v21(v6, v4);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v43);
  sub_1C07FCE38((uint64_t)&qword_1ED7618B8);
  sub_1C07FCE70();
  v22 = v34;
  sub_1C106BAC4();
  v21(v9, v4);
  if (v22)
    return (uint64_t)v21;
  v24 = v47;
  if (!v47)
    return 4;
  v34 = v46;
  v25 = v48;
  v26 = v49;
  v27 = v50;
  v28 = v51;
  sub_1C07ACF80(&qword_1ED75D0D0);
  sub_1C07FD610((uint64_t)&unk_1ED75D0E0);
  sub_1C106A960();
  v29 = v34;
  if (*(_QWORD *)(v46 + 16))
  {
    v30 = v25;
    v21 = (void (*)(char *, uint64_t))*(unsigned __int8 *)(v46 + 32);
    swift_bridgeObjectRelease();
    sub_1C07D8DF8(v29, v24, v30, v26, v27, v28);
    return (uint64_t)v21;
  }
  swift_bridgeObjectRelease();
  v46 = 0;
  v47 = 0xE000000000000000;
  sub_1C1070774();
  swift_bridgeObjectRelease();
  v46 = 0xD00000000000002FLL;
  v47 = 0x80000001C10E2BE0;
  sub_1C106FC94();
  result = sub_1C1070954();
  __break(1u);
  return result;
}

uint64_t sub_1C07FC558@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  void (*v14)(uint64_t *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  void (*v22)(char *, uint64_t);
  unint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[2];
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[3];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45[3];
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;

  v54 = a3;
  v37 = a2;
  v35 = a1;
  v33[0] = a4;
  v5 = sub_1C07ACF80(&qword_1ED7614F8);
  v34 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v33 - v9;
  if (qword_1ED761A78 != -1)
    swift_once();
  v11 = sub_1C106C49C();
  v12 = sub_1C079E000(v11, (uint64_t)qword_1ED78D968);
  v43 = v11;
  v44 = MEMORY[0x1E0D24668];
  v13 = sub_1C079DFC4(v42);
  v14 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v14(v13, v12, v11);
  v33[1] = v4;
  v15 = *(_QWORD *)(v4 + 16);
  v16 = *(_QWORD *)(v4 + 24);
  v17 = MEMORY[0x1E0D24960];
  v40 = MEMORY[0x1E0DEA968];
  v41 = MEMORY[0x1E0D24960];
  v38 = v15;
  v39 = v16;
  v18 = sub_1C106BCBC();
  v19 = MEMORY[0x1E0D23DC0];
  v46 = v18;
  v47 = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v45);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C310();
  sub_1C0784B94((uint64_t)&v38, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v42);
  sub_1C07FCDFC();
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v45);
  if (qword_1ED761A70 != -1)
    swift_once();
  v20 = sub_1C079E000(v11, (uint64_t)qword_1ED78D830);
  v43 = v11;
  v44 = MEMORY[0x1E0D24668];
  v21 = sub_1C079DFC4(v42);
  v14(v21, v20, v11);
  v40 = MEMORY[0x1E0DEA968];
  v41 = v17;
  v38 = v37;
  v39 = v54;
  v46 = v18;
  v47 = v19;
  sub_1C079DFC4(v45);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C310();
  sub_1C0784B94((uint64_t)&v38, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v42);
  sub_1C07FCE38((uint64_t)&unk_1ED7618C0);
  sub_1C106BDF4();
  v22 = *(void (**)(char *, uint64_t))(v34 + 8);
  v22(v7, v5);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v45);
  sub_1C07FCE38((uint64_t)&qword_1ED7618B8);
  sub_1C07FCE70();
  v23 = v36;
  sub_1C106BAC4();
  result = ((uint64_t (*)(char *, uint64_t))v22)(v10, v5);
  if (!v23)
  {
    v25 = v49;
    if (v49)
    {
      v36 = v48;
      v26 = v50;
      v27 = v51;
      v28 = v52;
      v29 = v53;
      sub_1C07ACF80((uint64_t *)&unk_1ED755EF0);
      sub_1C07FD610((uint64_t)&unk_1ED75D0C8);
      sub_1C106A960();
      v31 = v36;
      if (!*(_QWORD *)(v48 + 16))
      {
        swift_bridgeObjectRelease();
        v48 = 0;
        v49 = 0xE000000000000000;
        sub_1C1070774();
        swift_bridgeObjectRelease();
        v48 = 0xD00000000000002FLL;
        v49 = 0x80000001C10E2BE0;
        sub_1C106FC94();
        result = sub_1C1070954();
        __break(1u);
        return result;
      }
      v32 = v26;
      v30 = *(_BYTE *)(v48 + 32);
      swift_bridgeObjectRelease();
      result = sub_1C07D8DF8(v31, v25, v32, v27, v28, v29);
    }
    else
    {
      v30 = 4;
    }
    *(_BYTE *)v33[0] = v30;
  }
  return result;
}

uint64_t sub_1C07FCA18(uint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;

  sub_1C07ACF80(&qword_1EF62FDE0);
  result = sub_1C10709CC();
  v3 = (_QWORD *)result;
  v4 = 0;
  v40 = a1;
  v7 = *(_QWORD *)(a1 + 64);
  v6 = a1 + 64;
  v5 = v7;
  v8 = 1 << *(_BYTE *)(v6 - 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v5;
  v37 = v6;
  v38 = (unint64_t)(v8 + 63) >> 6;
  v39 = result + 64;
  v36 = (_QWORD *)result;
  if ((v9 & v5) == 0)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v11 | (v4 << 6); ; i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(v40 + 48) + 16 * i);
    v43 = *v16;
    v44 = v16[1];
    v17 = *(_QWORD *)(*(_QWORD *)(v40 + 56) + 8 * i);
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      v41 = v10;
      v42 = v4;
      v45 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C09D30E0();
      v19 = v45;
      v20 = (uint64_t *)(v17 + 56);
      do
      {
        v21 = *(v20 - 1);
        v22 = *v20;
        v45 = v19;
        v24 = v19[2];
        v23 = v19[3];
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        if (v24 >= v23 >> 1)
        {
          sub_1C09D30E0();
          v19 = v45;
        }
        v19[2] = v24 + 1;
        v25 = &v19[2 * v24];
        v25[4] = v21;
        v25[5] = v22;
        v20 += 4;
        --v18;
      }
      while (v18);
      v3 = v36;
      v10 = v41;
      v4 = v42;
    }
    else
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v19 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    v26 = sub_1C1070234();
    v46 = v26;
    v27 = v19[2];
    if (v27)
    {
      v28 = v19 + 5;
      do
      {
        v30 = *(v28 - 1);
        v29 = *v28;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        sub_1C0A7D28C((uint64_t)&v45, v30, v29);
        swift_bridgeObjectRelease();
        v28 += 2;
        --v27;
      }
      while (v27);
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      v31 = v46;
    }
    else
    {
      v31 = v26;
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
    }
    *(_QWORD *)(v39 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v32 = (_QWORD *)(v3[6] + 16 * i);
    *v32 = v43;
    v32[1] = v44;
    *(_QWORD *)(v3[7] + 8 * i) = v31;
    v33 = v3[2];
    v34 = __OFADD__(v33, 1);
    v35 = v33 + 1;
    if (v34)
    {
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v3[2] = v35;
    if (v10)
      goto LABEL_4;
LABEL_5:
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_36;
    if (v13 >= v38)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v37 + 8 * v13);
    ++v4;
    if (!v14)
    {
      v4 = v13 + 1;
      if (v13 + 1 >= v38)
        return (uint64_t)v3;
      v14 = *(_QWORD *)(v37 + 8 * v4);
      if (!v14)
      {
        v4 = v13 + 2;
        if (v13 + 2 >= v38)
          return (uint64_t)v3;
        v14 = *(_QWORD *)(v37 + 8 * v4);
        if (!v14)
          break;
      }
    }
LABEL_18:
    v10 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v38)
    return (uint64_t)v3;
  v14 = *(_QWORD *)(v37 + 8 * v15);
  if (v14)
  {
    v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v4 >= v38)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v37 + 8 * v4);
    ++v15;
    if (v14)
      goto LABEL_18;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for AssetRegistryOverrideStore()
{
  return objc_opt_self();
}

uint64_t method lookup function for AssetRegistryOverrideStore()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1C07FCD8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t result;

  result = sub_1C07F896C(a1, a2, a3, a4);
  if (!v5)
    *a5 = result;
  return result;
}

uint64_t sub_1C07FCDB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v8;

  result = sub_1C07F8994(a1, a2, a3, a4);
  if (!v5)
  {
    *a5 = result;
    a5[1] = v8;
  }
  return result;
}

uint64_t sub_1C07FCDDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C0788880();
  return sub_1C07FD1B0(v0, v1, v2, v3, sub_1C07FA458, v4);
}

unint64_t sub_1C07FCDFC()
{
  unint64_t result;

  result = qword_1ED761A80;
  if (!qword_1ED761A80)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A6200, &type metadata for KeyValuePair);
    atomic_store(result, (unint64_t *)&qword_1ED761A80);
  }
  return result;
}

void sub_1C07FCE38(uint64_t a1)
{
  if (!sub_1C0780FEC(a1))
  {
    sub_1C07D4BEC(&qword_1ED7614F8);
    sub_1C079CB7C();
  }
  sub_1C0778534();
}

unint64_t sub_1C07FCE70()
{
  unint64_t result;

  result = qword_1ED761508;
  if (!qword_1ED761508)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A61B8, &type metadata for KeyValuePair);
    atomic_store(result, (unint64_t *)&qword_1ED761508);
  }
  return result;
}

uint64_t sub_1C07FCEAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t result;

  result = sub_1C07F89BC(a1, a2, a3, a4);
  if (!v5)
    *a5 = result;
  return result;
}

uint64_t sub_1C07FCED4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t result;

  result = sub_1C07F89F8(a1, a2, a3, a4);
  if (!v5)
    *a5 = result;
  return result;
}

uint64_t sub_1C07FCEFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _BYTE *a5@<X8>)
{
  uint64_t v5;
  uint64_t result;

  result = sub_1C07F8A34(a1, a2, a3, a4);
  if (!v5)
    *a5 = result;
  return result;
}

uint64_t sub_1C07FCF24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;

  sub_1C0788880();
  return sub_1C07FCEFC(v0, v1, v2, v3, v4);
}

uint64_t sub_1C07FCF3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  sub_1C0788880();
  return sub_1C07FCDB4(v0, v1, v2, v3, v4);
}

uint64_t sub_1C07FCF54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t result;

  result = sub_1C07F8A5C(a1, a2, a3, a4);
  if (!v5)
    *a5 = result;
  return result;
}

uint64_t sub_1C07FCF7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = sub_1C07F8A98(a1, a2, a3, a4);
  if (!v5)
  {
    *a5 = result;
    a5[1] = v8;
    a5[2] = v9;
  }
  return result;
}

uint64_t sub_1C07FCFA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  sub_1C0788880();
  return sub_1C07FCF7C(v0, v1, v2, v3, v4);
}

unint64_t sub_1C07FCFC0()
{
  unint64_t result;

  result = qword_1EF630650;
  if (!qword_1EF630650)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A5BB8, &type metadata for JointHUDataCollectionTaskManager.SavedState);
    atomic_store(result, (unint64_t *)&qword_1EF630650);
  }
  return result;
}

uint64_t sub_1C07FCFFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  sub_1C0788880();
  return sub_1C07FCF54(v0, v1, v2, v3, v4);
}

void sub_1C07FD014()
{
  sub_1C07FD610((uint64_t)&unk_1EF630660);
}

unint64_t sub_1C07FD038()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1ED760848;
  if (!qword_1ED760848)
  {
    v1 = sub_1C07D4BEC(&qword_1ED761298);
    sub_1C07FD5C4((uint64_t)&unk_1ED75E9A0);
    v3 = v2;
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0DEAF40], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED760848);
  }
  return result;
}

void sub_1C07FD0B4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1C07F9F74(a1, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a2);
  sub_1C07892B8();
}

unint64_t sub_1C07FD0D8()
{
  unint64_t result;

  result = qword_1ED7618B0;
  if (!qword_1ED7618B0)
  {
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0CB0378], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1ED7618B0);
  }
  return result;
}

void sub_1C07FD114()
{
  sub_1C07FD610((uint64_t)&unk_1ED75D108);
}

void sub_1C07FD138()
{
  sub_1C07FD610((uint64_t)&unk_1ED75D148);
}

unint64_t sub_1C07FD15C()
{
  unint64_t result;

  result = qword_1ED75A7A8;
  if (!qword_1ED75A7A8)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for VisualEntity, &type metadata for VisualEntity);
    atomic_store(result, (unint64_t *)&qword_1ED75A7A8);
  }
  return result;
}

uint64_t sub_1C07FD198()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  sub_1C0788880();
  return sub_1C07FCED4(v0, v1, v2, v3, v4);
}

uint64_t sub_1C07FD1B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (*a5)(uint64_t, uint64_t, uint64_t)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t result;
  char v9;

  result = sub_1C07F8AD0(a1, a2, a3, a4, a5);
  if (!v6)
  {
    *(_QWORD *)a6 = result;
    *(_BYTE *)(a6 + 8) = v9 & 1;
  }
  return result;
}

uint64_t sub_1C07FD1E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C0788880();
  return sub_1C07FD1B0(v0, v1, v2, v3, sub_1C07FB754, v4);
}

uint64_t sub_1C07FD200@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t result;

  result = sub_1C07F8B04(a1, a2, a3, a4);
  if (!v5)
    *a5 = result;
  return result;
}

uint64_t sub_1C07FD228()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  sub_1C0788880();
  return sub_1C07FD200(v0, v1, v2, v3, v4);
}

unint64_t sub_1C07FD240()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1ED75D120;
  if (!qword_1ED75D120)
  {
    v1 = sub_1C07D4BEC(&qword_1ED75D110);
    sub_1C07FD2C4((uint64_t)&qword_1ED762580);
    v3 = v2;
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0DEAF40], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED75D120);
  }
  return result;
}

void sub_1C07FD2C4(uint64_t a1)
{
  uint64_t *v1;

  if (!sub_1C0780FEC(a1))
  {
    sub_1C079A720(0, v1);
    sub_1C079CB7C();
  }
  sub_1C0776784();
}

void sub_1C07FD300(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1C07FC558(a1, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a2);
  sub_1C07892B8();
}

unint64_t sub_1C07FD324()
{
  unint64_t result;

  result = qword_1ED755AF8;
  if (!qword_1ED755AF8)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PipelineType, &type metadata for PipelineType);
    atomic_store(result, (unint64_t *)&qword_1ED755AF8);
  }
  return result;
}

uint64_t sub_1C07FD360@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _BYTE *a5@<X8>)
{
  uint64_t v5;
  uint64_t result;

  result = sub_1C07F8B2C(a1, a2, a3, a4);
  if (!v5)
    *a5 = result;
  return result;
}

uint64_t sub_1C07FD388()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;

  sub_1C0788880();
  return sub_1C07FD360(v0, v1, v2, v3, v4);
}

unint64_t sub_1C07FD3A0()
{
  unint64_t result;

  result = qword_1ED75ABE8;
  if (!qword_1ED75ABE8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B361C, &unk_1E7A2A8D0);
    atomic_store(result, (unint64_t *)&qword_1ED75ABE8);
  }
  return result;
}

void sub_1C07FD3DC(uint64_t a1)
{
  sub_1C07FD520(a1, (void (*)(uint64_t, _QWORD, _QWORD))sub_1C07F94E4);
}

uint64_t sub_1C07FD3F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  sub_1C0788880();
  return sub_1C07FCEAC(v0, v1, v2, v3, v4);
}

void sub_1C07FD410()
{
  sub_1C07FD610((uint64_t)&unk_1EF630680);
}

unint64_t sub_1C07FD434()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_1EF630688;
  if (!qword_1EF630688)
  {
    v1 = sub_1C07D4BEC(&qword_1EF630690);
    v2 = sub_1C07FD4A0();
    v3[0] = MEMORY[0x1E0DEA9A0];
    v3[1] = v2;
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0DEA0D8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EF630688);
  }
  return result;
}

unint64_t sub_1C07FD4A0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED7516E8;
  if (!qword_1ED7516E8)
  {
    v1 = sub_1C07D4BEC(&qword_1ED75E818);
    v2[0] = MEMORY[0x1E0DEA9A0];
    v2[1] = MEMORY[0x1E0DEB0A8];
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0DEA0D8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED7516E8);
  }
  return result;
}

void sub_1C07FD504(uint64_t a1)
{
  sub_1C07FD520(a1, (void (*)(uint64_t, _QWORD, _QWORD))sub_1C07F9A2C);
}

void sub_1C07FD520(uint64_t a1, void (*a2)(uint64_t, _QWORD, _QWORD))
{
  uint64_t v2;

  a2(a1, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
  sub_1C07892B8();
}

unint64_t sub_1C07FD548()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EF6306A0;
  if (!qword_1EF6306A0)
  {
    v1 = sub_1C07D4BEC(&qword_1EF630698);
    sub_1C07FD5C4((uint64_t)&unk_1ED744A28);
    v3 = v2;
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0DEAF40], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF6306A0);
  }
  return result;
}

void sub_1C07FD5C4(uint64_t a1)
{
  void (*v1)(uint64_t);

  if (!sub_1C0780FEC(a1))
  {
    v1(255);
    sub_1C079CB7C();
  }
  sub_1C0778534();
}

uint64_t sub_1C07FD5F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  sub_1C0788880();
  return sub_1C07FCD8C(v0, v1, v2, v3, v4);
}

void sub_1C07FD610(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  if (!sub_1C0780FEC(a1))
  {
    v5 = sub_1C079A720(0, v4);
    v6 = v3();
    atomic_store(MEMORY[0x1C3BA8174](v2, v5, &v6), v1);
  }
  sub_1C0776784();
}

unint64_t sub_1C07FD658()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EF6306B8;
  if (!qword_1EF6306B8)
  {
    v1 = sub_1C07D4BEC(&qword_1ED760DE8);
    sub_1C07FD2C4((uint64_t)&unk_1ED762B78);
    v3 = v2;
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0DEE9A0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF6306B8);
  }
  return result;
}

uint64_t AssetRegistryOverrideStoreCleanupTask.__allocating_init(config:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  type metadata accessor for Configuration();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v4);
  sub_1C07785B8();
  type metadata accessor for AssetRegistryFullServer();
  sub_1C078E3E0(a1, v2);
  sub_1C106A708();
  swift_allocObject();
  sub_1C106A6FC();
  v5 = sub_1C07F7040(v2);
  result = sub_1C078D09C(a1);
  if (!v1)
  {
    type metadata accessor for AssetRegistryOverrideStoreCleanupTask();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v5;
  }
  return result;
}

uint64_t type metadata accessor for AssetRegistryOverrideStoreCleanupTask()
{
  return objc_opt_self();
}

void sub_1C07FD7C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  unint64_t v30;
  BOOL v31;
  int64_t v32;
  unint64_t v33;
  int64_t v34;
  uint64_t *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  int64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  int64_t v49;
  uint64_t *v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t, uint64_t);
  char *v62;
  char *v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int64_t v77;
  uint64_t v78;
  int64_t v79;
  uint64_t v80;
  uint64_t v81;
  __int128 v82;
  int v83;
  int v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int64_t v93;
  char *v94;
  int64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;

  v102 = sub_1C106EC2C();
  v92 = *(_QWORD *)(v102 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v3);
  v94 = (char *)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C106EB90();
  v97 = *(_QWORD *)(v5 - 8);
  v98 = v5;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C07785B8();
  sub_1C07ACF80(&qword_1ED744A30);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = sub_1C106CD00();
  v10 = *(_QWORD *)(v106 - 8);
  MEMORY[0x1E0C80A78](v106);
  v12 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v76 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v76 - v17;
  v19 = *(_QWORD *)(v0 + 16);
  swift_retain();
  v20 = AssetRegistryOverrideStore.allOverridesIds()();
  if (v1)
  {
LABEL_2:
    swift_release();
    return;
  }
  v99 = v10;
  v86 = v15;
  v87 = v20;
  v105 = v19;
  v89 = v12;
  v90 = v2;
  v96 = v9;
  v101 = v18;
  sub_1C07785A8();
  sub_1C1070138();
  v22 = 0;
  v23 = v87;
  v24 = v87 + 64;
  v25 = 1 << *(_BYTE *)(v87 + 32);
  if (v25 < 64)
    v26 = ~(-1 << v25);
  else
    v26 = -1;
  v27 = v26 & *(_QWORD *)(v87 + 64);
  v28 = (unint64_t)(v25 + 63) >> 6;
  v84 = *MEMORY[0x1E0D3D5B8];
  v83 = *MEMORY[0x1E0D3D5B0];
  *(_QWORD *)&v21 = 136315394;
  v82 = v21;
  v81 = MEMORY[0x1E0DEE9B8] + 8;
  v29 = (uint64_t)v96;
  v78 = v87 + 64;
  v77 = v28;
  if (!v27)
    goto LABEL_8;
  while (2)
  {
    v80 = (v27 - 1) & v27;
    v79 = v22;
    v30 = __clz(__rbit64(v27)) | (v22 << 6);
LABEL_19:
    v35 = (uint64_t *)(*(_QWORD *)(v23 + 48) + 16 * v30);
    v36 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 8 * v30);
    v38 = *v35;
    v37 = v35[1];
    v39 = *(_QWORD *)(v36 + 56);
    v91 = v36 + 56;
    v40 = 1 << *(_BYTE *)(v36 + 32);
    v41 = v37;
    if (v40 < 64)
      v42 = ~(-1 << v40);
    else
      v42 = -1;
    v43 = v42 & v39;
    v93 = (unint64_t)(v40 + 63) >> 6;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v100 = v36;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v44 = 0;
    v103 = v41;
    v88 = v38;
    while (v43)
    {
      v45 = __clz(__rbit64(v43));
      v46 = (v43 - 1) & v43;
      v47 = v45 | (v44 << 6);
LABEL_36:
      v50 = (uint64_t *)(*(_QWORD *)(v100 + 48) + 16 * v47);
      v52 = *v50;
      v51 = v50[1];
      sub_1C07767C4();
      swift_retain();
      v53 = sub_1C07A4338();
      AssetRegistryOverrideStore.fetchAssetEntry(for:in:)(v53, v54, v55);
      sub_1C07785A8();
      v56 = sub_1C07B2D80(v29, 1, v106);
      v104 = v46;
      if (v56 == 1)
      {
        sub_1C07F7C64(v29);
        if (qword_1ED762B18 != -1)
          swift_once();
        v57 = sub_1C106F544();
        sub_1C079E000(v57, (uint64_t)qword_1ED762AF8);
        swift_bridgeObjectRetain_n();
        sub_1C07767C4();
        v58 = sub_1C106F538();
        v59 = sub_1C1070390();
        if (os_log_type_enabled(v58, v59))
        {
          v60 = swift_slowAlloc();
          v107 = swift_slowAlloc();
          *(_DWORD *)v60 = v82;
          sub_1C07767C4();
          *(_QWORD *)(v60 + 4) = sub_1C0788DAC(v52, v51, &v107);
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v60 + 12) = 2080;
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          *(_QWORD *)(v60 + 14) = sub_1C0788DAC(v38, v103, &v107);
          swift_bridgeObjectRelease_n();
          swift_arrayDestroy();
          sub_1C0776778();
        }

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        v43 = v104;
      }
      else
      {
        v95 = v44;
        v61 = *(void (**)(char *, uint64_t, uint64_t))(v99 + 32);
        v61(v101, v29, v106);
        sub_1C106EB84();
        v62 = v89;
        sub_1C07A4338();
        sub_1C07F7260();
        v85 = 0;
        sub_1C07ADA34();
        v63 = v86;
        v61(v86, (uint64_t)v62, v106);
        v64 = sub_1C106CCDC();
        v65 = (void (*)(char *, uint64_t))v101;
        if (sub_1C106CCDC() >= v64)
        {
          sub_1C0775894();
          v38 = v88;
          v70 = v85;
        }
        else
        {
          sub_1C0787864();
          v66 = sub_1C079E1C8();
          v67 = v85;
          sub_1C07F82C0(v66, v68, v69);
          v70 = v67;
          if (v67)
          {
            sub_1C077589C();
            sub_1C0775894();
            sub_1C07785A8();
            v65 = *(void (**)(char *, uint64_t))(v99 + 8);
            v75 = v106;
            v65(v63, v106);
            v73 = v101;
            v74 = v75;
            goto LABEL_61;
          }
          sub_1C0775894();
          sub_1C07785A8();
        }
        sub_1C1070138();
        v71 = v101;
        if (v70)
        {
          sub_1C077589C();
          sub_1C07984C8();
          v73 = v71;
          v74 = (uint64_t)v63;
LABEL_61:
          v65(v73, v74);
          sub_1C078F12C();
          goto LABEL_2;
        }
        sub_1C07984C8();
        v65(v71, (uint64_t)v63);
        v44 = v95;
        v29 = (uint64_t)v96;
        v43 = v104;
      }
    }
    v31 = __OFADD__(v44++, 1);
    if (v31)
    {
      __break(1u);
LABEL_63:
      __break(1u);
      goto LABEL_64;
    }
    if (v44 >= v93)
      goto LABEL_53;
    v48 = *(_QWORD *)(v91 + 8 * v44);
    if (v48)
    {
LABEL_35:
      v46 = (v48 - 1) & v48;
      v47 = __clz(__rbit64(v48)) + (v44 << 6);
      goto LABEL_36;
    }
    v49 = v44 + 1;
    if (v44 + 1 >= v93)
      goto LABEL_53;
    v48 = *(_QWORD *)(v91 + 8 * v49);
    if (v48)
      goto LABEL_34;
    v49 = v44 + 2;
    if (v44 + 2 >= v93)
      goto LABEL_53;
    v48 = *(_QWORD *)(v91 + 8 * v49);
    if (v48)
    {
LABEL_34:
      v44 = v49;
      goto LABEL_35;
    }
    v49 = v44 + 3;
    if (v44 + 3 < v93)
    {
      v48 = *(_QWORD *)(v91 + 8 * v49);
      if (!v48)
      {
        while (1)
        {
          v44 = v49 + 1;
          if (__OFADD__(v49, 1))
            goto LABEL_63;
          if (v44 >= v93)
            goto LABEL_53;
          v48 = *(_QWORD *)(v91 + 8 * v44);
          ++v49;
          if (v48)
            goto LABEL_35;
        }
      }
      goto LABEL_34;
    }
LABEL_53:
    v72 = v87;
    v24 = v78;
    v22 = v79;
    v28 = v77;
    swift_bridgeObjectRelease();
    sub_1C077C7CC();
    v27 = v80;
    v23 = v72;
    if (v80)
      continue;
    break;
  }
LABEL_8:
  v31 = __OFADD__(v22, 1);
  v32 = v22 + 1;
  if (v31)
  {
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  if (v32 >= v28)
    goto LABEL_2;
  v33 = *(_QWORD *)(v24 + 8 * v32);
  if (v33)
    goto LABEL_18;
  v34 = v32 + 1;
  if (v32 + 1 >= v28)
    goto LABEL_2;
  v33 = *(_QWORD *)(v24 + 8 * v34);
  if (v33)
  {
LABEL_17:
    v32 = v34;
LABEL_18:
    v80 = (v33 - 1) & v33;
    v79 = v32;
    v30 = __clz(__rbit64(v33)) + (v32 << 6);
    goto LABEL_19;
  }
  v34 = v32 + 2;
  if (v32 + 2 >= v28)
    goto LABEL_2;
  v33 = *(_QWORD *)(v24 + 8 * v34);
  if (v33)
    goto LABEL_17;
  v34 = v32 + 3;
  if (v32 + 3 >= v28)
    goto LABEL_2;
  v33 = *(_QWORD *)(v24 + 8 * v34);
  if (v33)
    goto LABEL_17;
  while (1)
  {
    v32 = v34 + 1;
    if (__OFADD__(v34, 1))
      break;
    if (v32 >= v28)
      goto LABEL_2;
    v33 = *(_QWORD *)(v24 + 8 * v32);
    ++v34;
    if (v33)
      goto LABEL_18;
  }
LABEL_65:
  __break(1u);
}

uint64_t AssetRegistryOverrideStoreCleanupTask.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t AssetRegistryOverrideStoreCleanupTask.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for AssetRegistryOverrideStoreCleanupTask()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AssetRegistryOverrideStoreCleanupTask.process()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t sub_1C07FE110(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v14;

  sub_1C0779D10();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106A708();
  swift_allocObject();
  v8 = sub_1C106A6FC();
  type metadata accessor for AssetRegistryFullServer();
  sub_1C07A2240(a1);
  swift_retain();
  v9 = sub_1C07F7040((uint64_t)v7);
  if (v2)
  {
    swift_release();
    sub_1C079E1DC();
    v10 = sub_1C0787874();
    v11(v10);
    sub_1C078D09C(a1);
  }
  else
  {
    v12 = v9;
    sub_1C078D09C(a1);
    a1 = swift_allocObject();
    sub_1C07FE22C(v12, a2, v8);
  }
  return a1;
}

uint64_t sub_1C07FE22C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v3 + 16) = a1;
  v6 = v3 + OBJC_IVAR____TtC24IntelligencePlatformCore35AssetRegistryRemoteBackendInProcess_remoteOptions;
  v7 = sub_1C106EBB4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v6, a2, v7);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC24IntelligencePlatformCore35AssetRegistryRemoteBackendInProcess_jsonDecoder) = a3;
  return v3;
}

void sub_1C07FE294()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = sub_1C07ACF80(&qword_1ED744A98);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  sub_1C078F134();
  sub_1C106CD00();
  sub_1C106EC2C();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D5C8];
  sub_1C07A36C8(&qword_1ED744A28, v4, v5, MEMORY[0x1E0D3B6C8]);
  sub_1C07A36C8(&qword_1ED744A20, v6, v7, MEMORY[0x1E0D3B6C0]);
  sub_1C0780378(&qword_1ED744AA0, 255, v3, MEMORY[0x1E0D3D5C0]);
  sub_1C079608C();
  sub_1C106E764();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  sub_1C07757D0();
}

uint64_t sub_1C07FE3D4()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);

  swift_release();
  sub_1C106EBB4();
  v1 = sub_1C0787874();
  v2(v1);
  swift_release();
  return v0;
}

uint64_t sub_1C07FE424()
{
  sub_1C07FE3D4();
  return swift_deallocClassInstance();
}

uint64_t sub_1C07FE448@<X0>(uint64_t a1@<X8>)
{
  return sub_1C07FE47C(a1);
}

void sub_1C07FE45C()
{
  sub_1C07FE294();
}

uint64_t sub_1C07FE47C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0D3D920];
  v3 = sub_1C106EE78();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_1C07FE4C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1C079E1DC();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v6);
  sub_1C07984E0();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  sub_1C07996A4();
  sub_1C07A2240(a1);
  sub_1C106E9A4();
  sub_1C106E998();
  v8 = sub_1C07FE110(v4, v3);
  sub_1C078D09C(a1);
  if (v2)
    swift_deallocPartialClassInstance();
  else
    *(_QWORD *)(v1 + 16) = v8;
  return v1;
}

void sub_1C07FE59C()
{
  sub_1C07FE294();
}

void sub_1C07FE5BC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[10];
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v23 = a5;
  v24 = a6;
  v12 = sub_1C07ACF80(&qword_1EF6308C0);
  v25 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  sub_1C078F134();
  v14 = *(_QWORD *)(v13 + 16);
  swift_retain();
  sub_1C07F6FC8();
  if (v6)
  {
    swift_release();
  }
  else
  {
    v22[1] = v22;
    v16 = MEMORY[0x1E0C80A78](v15);
    v22[0] = v21;
    v21[2] = v16;
    v21[3] = a3;
    v21[4] = a4;
    v21[5] = v14;
    v21[6] = a1;
    v21[7] = a2;
    v21[8] = v23;
    sub_1C106CD24();
    sub_1C106ED28();
    sub_1C07A36C8((unint64_t *)&unk_1EF6308D0, v17, v18, MEMORY[0x1E0D3B700]);
    sub_1C07A36C8(&qword_1EF630770, v19, v20, MEMORY[0x1E0D3B6F8]);
    sub_1C0780378(&qword_1EF6308E0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D6E8], MEMORY[0x1E0D3D6E0]);
    sub_1C079608C();
    swift_release();
    swift_bridgeObjectRelease();
    sub_1C106E764();
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v7, v12);
  }
  sub_1C07757D0();
}

uint64_t sub_1C07FE768()
{
  swift_release();
  return swift_deallocClassInstance();
}

void sub_1C07FE78C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  sub_1C07FE5BC(a1, a2, a3, a4, a5, a6);
}

void sub_1C07FE7AC()
{
  sub_1C07FE59C();
}

uint64_t static AssetRegistry.CreateBackend.withRemoteBackendInProcess(config:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = type metadata accessor for Configuration();
  MEMORY[0x1E0C80A78](v0);
  sub_1C0790D80();
  v1 = sub_1C0796F50();
  sub_1C07A36D4(v1);
  sub_1C0790D80();
  v2 = sub_1C0796F50();
  sub_1C07A36D4(v2);
  type metadata accessor for AssetRegistryRemoteBackendInProcess();
  type metadata accessor for AssetRegistryRemoteWritableBackendInProcess();
  sub_1C0780378(&qword_1ED761198, 255, (uint64_t (*)(uint64_t))type metadata accessor for AssetRegistryRemoteBackendInProcess, (uint64_t)&unk_1C107A1EC);
  sub_1C0780378(&qword_1ED74D220, v3, (uint64_t (*)(uint64_t))type metadata accessor for AssetRegistryRemoteWritableBackendInProcess, (uint64_t)&unk_1C107A1BC);
  return sub_1C106D9FC();
}

void sub_1C07FE90C(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  sub_1C07FEBC4(a1, a2, a3);
}

void sub_1C07FE924(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  sub_1C0779D10();
  sub_1C079A730();
  sub_1C07FEBC4(a1, v2 + v5, a2);
}

uint64_t sub_1C07FE974@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  sub_1C0779D10();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C078E3E0(a1, (uint64_t)v7);
  type metadata accessor for AssetRegistryRemoteWritableBackendInProcess();
  v8 = swift_allocObject();
  result = sub_1C07FE4C0((uint64_t)v7);
  if (!v2)
    *a2 = v8;
  return result;
}

uint64_t sub_1C07FEA04@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1C0779D10();
  sub_1C079A730();
  return sub_1C07FE974(v1 + v3, a1);
}

uint64_t type metadata accessor for AssetRegistryRemoteBackendInProcess()
{
  uint64_t result;

  result = qword_1ED7611A0;
  if (!qword_1ED7611A0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for AssetRegistryRemoteWritableBackendInProcess()
{
  return objc_opt_self();
}

uint64_t sub_1C07FEA94()
{
  return type metadata accessor for AssetRegistryRemoteBackendInProcess();
}

uint64_t sub_1C07FEA9C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C106EBB4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1C07FEB18(uint64_t a1, uint64_t a2)
{
  return sub_1C0780378(&qword_1ED74D210, a2, (uint64_t (*)(uint64_t))type metadata accessor for AssetRegistryRemoteWritableBackendInProcess, (uint64_t)&unk_1C107A13C);
}

uint64_t sub_1C07FEB44(uint64_t a1, uint64_t a2)
{
  return sub_1C0780378(&qword_1ED74D218, a2, (uint64_t (*)(uint64_t))type metadata accessor for AssetRegistryRemoteWritableBackendInProcess, (uint64_t)&unk_1C107A164);
}

uint64_t sub_1C07FEB70()
{
  return sub_1C0780378(&qword_1ED761190, 255, (uint64_t (*)(uint64_t))type metadata accessor for AssetRegistryRemoteBackendInProcess, (uint64_t)&unk_1C107A194);
}

void sub_1C07FEBA0()
{
  sub_1C07F7548();
}

void sub_1C07FEBC4(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v9 = sub_1C079E1DC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  sub_1C07984E0();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v11);
  sub_1C07996A4();
  sub_1C07A2240(a2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v4, a1, v9);
  v12 = sub_1C07FE110(v5, v4);
  if (!v3)
    *a3 = v12;
  sub_1C07757D0();
}

uint64_t sub_1C07FEC70@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  sub_1C07ACF80(&qword_1ED75DFB8);
  result = sub_1C106F094();
  *a1 = result;
  return result;
}

uint64_t sub_1C07FECB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1C07ACF80(&qword_1ED75E630);
  sub_1C0800A9C(v0, qword_1ED78C3C0);
  v1 = sub_1C079E000(v0, (uint64_t)qword_1ED78C3C0);
  v2 = type metadata accessor for Configuration();
  return sub_1C07B2D8C(v1, 1, 1, v2);
}

void sub_1C07FED14(uint64_t a1)
{
  NSObject *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  os_log_type_t v19;

  v3 = sub_1C07ACF80(&qword_1ED75E630);
  MEMORY[0x1E0C80A78](v3);
  sub_1C0778564();
  v6 = v5 - v4;
  if (qword_1ED75E808 != -1)
    swift_once();
  v7 = sub_1C077585C();
  v8 = sub_1C079E000(v7, (uint64_t)qword_1ED78D7A0);
  sub_1C077C0FC();
  v9 = sub_1C0784E0C();
  if (os_log_type_enabled(v1, v9))
  {
    v10 = (uint8_t *)sub_1C0775854();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_1C0771000, v1, v9, "AssetRegistryXPC: starting...", v10, 2u);
    sub_1C0776778();
  }

  if (qword_1ED749E98 != -1)
    swift_once();
  v11 = sub_1C079E000(v3, (uint64_t)qword_1ED78C3C0);
  sub_1C078E3E0(a1, v6);
  v12 = type metadata accessor for Configuration();
  sub_1C07B2D8C(v6, 0, 1, v12);
  swift_beginAccess();
  sub_1C0800ADC(v6, v11);
  swift_endAccess();
  sub_1C0800B24();
  sub_1C106FB14();
  v13 = sub_1C0BBE34C();
  v14 = (void *)qword_1ED78CA68;
  qword_1ED78CA68 = (uint64_t)v13;

  v15 = (void *)qword_1ED78CA68;
  if (qword_1ED78CA68)
  {
    v16 = objc_allocWithZone((Class)type metadata accessor for AssetRegistryXPC.Delegate());
    v17 = v15;
    qword_1ED78CA60 = (uint64_t)objc_msgSend(v16, sel_init);
    swift_unknownObjectRelease();
    -[NSObject setDelegate:](v17, sel_setDelegate_, qword_1ED78CA60);
    -[NSObject resume](v17, sel_resume);
  }
  else
  {
    v18 = v8;
    v17 = sub_1C106F538();
    v19 = sub_1C107039C();
    if (sub_1C077F60C(v19))
    {
      *(_WORD *)sub_1C0775854() = 0;
      sub_1C077AF3C(&dword_1C0771000, v17, v18, "Failed to create AssetRegistryXPC service");
      sub_1C0776778();
    }
  }

}

void sub_1C07FEF90(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  objc_super v15;

  v5 = (objc_class *)sub_1C07796E8();
  v6 = OBJC_IVAR____TtCC24IntelligencePlatformCore16AssetRegistryXPC10BaseServer_jsonEncoder;
  sub_1C106A774();
  sub_1C077B5BC();
  v7 = v2;
  *(_QWORD *)&v2[v6] = sub_1C106A768();
  *(_QWORD *)&v7[OBJC_IVAR____TtCC24IntelligencePlatformCore16AssetRegistryXPC10BaseServer_assetRegistryServer] = a1;
  *(_QWORD *)&v7[OBJC_IVAR____TtCC24IntelligencePlatformCore16AssetRegistryXPC10BaseServer_jsonDecoder] = a2;
  swift_retain();
  sub_1C077E884();

  v15.receiver = v7;
  v15.super_class = v5;
  sub_1C0797B98(v8, sel_init, v9, v10, v11, v12, v13, v14, v15);
  swift_release();
  swift_release();
  sub_1C079199C();
}

void sub_1C07FF040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  uint64_t (*v21)(uint64_t);
  uint64_t v22[3];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v25 = a3;
  v26 = a4;
  v23 = a1;
  v24 = a2;
  v7 = sub_1C07ACF80(&qword_1ED744A98);
  v8 = sub_1C07B3F28(v7);
  MEMORY[0x1E0C80A78](v8);
  sub_1C0787888(v9, v22[0]);
  v10 = sub_1C106EBB4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  sub_1C0778564();
  v14 = v13 - v12;
  v15 = (void *)MEMORY[0x1C3BA79F4]();
  v27 = v4;
  sub_1C07803B8((unint64_t *)&unk_1EF630900, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D500], MEMORY[0x1E0D3D510]);
  v28 = v14;
  sub_1C106A6F0();
  if (v5)
  {
    objc_autoreleasePoolPop(v15);
  }
  else
  {
    v22[1] = v11;
    v22[2] = v6;
    objc_autoreleasePoolPop(v15);
    v22[0] = (uint64_t)v22;
    MEMORY[0x1E0C80A78](v16);
    v22[-6] = v17;
    v18 = v24;
    v22[-5] = v23;
    v22[-4] = v18;
    v19 = v26;
    v22[-3] = v25;
    v22[-2] = v19;
    v22[-1] = v28;
    sub_1C106CD00();
    v20 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D3B6B0];
    sub_1C106EC2C();
    v21 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D5C8];
    sub_1C07803B8(&qword_1ED744A28, v20, MEMORY[0x1E0D3B6C8]);
    sub_1C07803B8(&qword_1ED744A20, v20, MEMORY[0x1E0D3B6C0]);
    sub_1C07803B8(&qword_1ED744AA0, v21, MEMORY[0x1E0D3D5C0]);
    sub_1C106E770();
    sub_1C0800BDC();
    sub_1C106EFBC();
    sub_1C07996C0();
    sub_1C07984FC();
  }
  sub_1C07757D0();
}

void sub_1C07FF2A4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (**a8)(_QWORD, _QWORD, _QWORD))
{
  sub_1C07FF8F8(a1, a2, a3, a4, a5, a6, a7, a8, "AssetRegistryXPC: assetEntryResultData: %s in %s", (uint64_t (*)(uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t))sub_1C07FF040);
  sub_1C07960A0();
}

void AssetRegistryXPC.BaseServer.assetEntryResultData(for:in:remoteOptionsData:completion:)(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, unint64_t, _QWORD), uint64_t a8)
{
  sub_1C07A1AD8(a1, a2, a3, a4, a5, a6, a7, a8);
  sub_1C07960A0();
}

id AssetRegistryXPC.BaseServer.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void AssetRegistryXPC.BaseServer.init()()
{
  sub_1C0792CF4();
  __break(1u);
}

void sub_1C07FF3E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  objc_class *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  objc_super v17;

  v7 = (objc_class *)sub_1C07796E8();
  objc_allocWithZone((Class)type metadata accessor for AssetRegistryXPC.BaseServer());
  v8 = v3;
  swift_retain();
  sub_1C077E884();
  sub_1C07FEF90(a1, a3);
  *(_QWORD *)&v8[OBJC_IVAR____TtCC24IntelligencePlatformCore16AssetRegistryXPC6Server_baseServer] = v9;
  *(_QWORD *)&v8[OBJC_IVAR____TtCC24IntelligencePlatformCore16AssetRegistryXPC6Server_entitlementInfo] = a2;

  v17.receiver = v8;
  v17.super_class = v7;
  sub_1C0797B98(v10, sel_init, v11, v12, v13, v14, v15, v16, v17);
  swift_release();
  swift_release();
  sub_1C079199C();
}

void sub_1C07FF48C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *aBlock)
{
  uint64_t v15;

  v15 = *(_QWORD *)(a7 + OBJC_IVAR____TtCC24IntelligencePlatformCore16AssetRegistryXPC6Server_baseServer);
  _Block_copy(aBlock);
  sub_1C07FF8F8(a1, a2, a3, a4, a5, a6, v15, (void (**)(_QWORD, _QWORD, _QWORD))aBlock, "AssetRegistryXPC: assetEntryResultData: %s in %s", (uint64_t (*)(uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t))sub_1C07FF040);
  _Block_release(aBlock);
}

void AssetRegistryXPC.Server.assetEntryResultData(for:in:remoteOptionsData:completion:)(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, unint64_t, _QWORD), uint64_t a8)
{
  AssetRegistryXPC.BaseServer.assetEntryResultData(for:in:remoteOptionsData:completion:)(a1, a2, a3, a4, a5, a6, a7, a8);
}

void sub_1C07FF64C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  uint64_t (*v27)(uint64_t);
  uint64_t v28[3];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v9 = v6;
  v31 = a4;
  v32 = a2;
  v29 = a3;
  v30 = a1;
  v12 = sub_1C07ACF80(&qword_1EF6308C0);
  v13 = sub_1C07B3F28(v12);
  MEMORY[0x1E0C80A78](v13);
  sub_1C0787888(v14, v28[0]);
  v15 = sub_1C106CD30();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  sub_1C0778564();
  v19 = v18 - v17;
  v33 = *(_QWORD *)(v9 + OBJC_IVAR____TtCC24IntelligencePlatformCore16AssetRegistryXPC6Server_baseServer);
  sub_1C07B0E28(a5, a6);
  sub_1C07803B8(&qword_1EF6308C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3B720], MEMORY[0x1E0D3B718]);
  sub_1C077E884();
  v34 = v19;
  v20 = sub_1C106EFC8();
  if (!v7)
  {
    v28[1] = v16;
    v28[2] = v8;
    v28[0] = (uint64_t)v28;
    v21 = *(_QWORD *)(v33 + OBJC_IVAR____TtCC24IntelligencePlatformCore16AssetRegistryXPC10BaseServer_assetRegistryServer);
    MEMORY[0x1E0C80A78](v20);
    v28[-8] = v22;
    v23 = v31;
    v28[-7] = v29;
    v28[-6] = v23;
    v24 = v30;
    v28[-5] = v21;
    v28[-4] = v24;
    v25 = v34;
    v28[-3] = v32;
    v28[-2] = v25;
    v32 = sub_1C106CD24();
    v26 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D3B6E8];
    sub_1C106ED28();
    v27 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D6E8];
    sub_1C07803B8((unint64_t *)&unk_1EF6308D0, v26, MEMORY[0x1E0D3B700]);
    sub_1C07803B8(&qword_1EF630770, v26, MEMORY[0x1E0D3B6F8]);
    sub_1C07803B8(&qword_1EF6308E0, v27, MEMORY[0x1E0D3D6E0]);
    swift_retain();
    sub_1C106E770();
    swift_release();
    sub_1C0800B60();
    swift_retain();
    sub_1C106EFBC();
    swift_release();
    sub_1C07996C0();
    sub_1C07984FC();
  }
  sub_1C07757D0();
}

void sub_1C07FF8F8(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (**a8)(_QWORD, _QWORD, _QWORD), const char *a9, uint64_t (*a10)(uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t))
{
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void *v22;
  uint64_t v24[2];

  if (qword_1ED75E808 != -1)
    swift_once();
  v16 = sub_1C077585C();
  v17 = sub_1C079E000(v16, (uint64_t)qword_1ED78D7A0);
  sub_1C07767CC();
  sub_1C07767CC();
  sub_1C106F538();
  v18 = sub_1C0784E0C();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = sub_1C0775854();
    v24[0] = sub_1C0775854();
    *(_DWORD *)v19 = 136315394;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0788DAC(a1, a2, v24);
    sub_1C10705AC();
    sub_1C077CF6C();
    *(_WORD *)(v19 + 12) = 2080;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0788DAC(a3, a4, v24);
    sub_1C10705AC();
    sub_1C077CF6C();
    _os_log_impl(&dword_1C0771000, v17, v18, a9, (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    sub_1C0776778();
  }

  sub_1C07758A4();
  sub_1C07758A4();
  v20 = a10(a1, a2, a3, a4, a5, a6);
  sub_1C07B0E28(v20, v21);
  v22 = (void *)sub_1C106ABF4();
  ((void (**)(_QWORD, void *, _QWORD))a8)[2](a8, v22, 0);

  sub_1C079D234(v20);
  sub_1C079D234(v20);
  _Block_release(a8);
}

void AssetRegistryXPC.Server.overrideAssetEntry(for:in:overrideAssetEntryParametersData:completion:)(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, unint64_t, _QWORD), uint64_t a8)
{
  sub_1C07A1AD8(a1, a2, a3, a4, a5, a6, a7, a8);
  sub_1C07960A0();
}

uint64_t sub_1C07FFCE0(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, unint64_t, _QWORD), uint64_t a8, const char *a9, uint64_t (*a10)(uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t))
{
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v25[2];

  if (qword_1ED75E808 != -1)
    swift_once();
  v16 = sub_1C077585C();
  v17 = sub_1C079E000(v16, (uint64_t)qword_1ED78D7A0);
  sub_1C07767CC();
  sub_1C07767CC();
  sub_1C106F538();
  v18 = sub_1C0784E0C();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = sub_1C0775854();
    v25[0] = sub_1C0775854();
    *(_DWORD *)v19 = 136315394;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0788DAC(a1, a2, v25);
    sub_1C10705AC();
    sub_1C077CF6C();
    *(_WORD *)(v19 + 12) = 2080;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0788DAC(a3, a4, v25);
    sub_1C10705AC();
    sub_1C077CF6C();
    _os_log_impl(&dword_1C0771000, v17, v18, a9, (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    sub_1C0776778();
  }

  sub_1C07758A4();
  sub_1C07758A4();
  v20 = a10(a1, a2, a3, a4, a5, a6);
  v22 = v21;
  sub_1C07B0E28(v20, v21);
  a7(v20, v22, 0);
  sub_1C0794360();
  return sub_1C0794360();
}

uint64_t sub_1C08000A4(void *a1, int a2, int a3, int a4, void *a5, void *aBlock, const char *a7, uint64_t (*a8)(uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t), uint64_t a9)
{
  void *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v11 = _Block_copy(aBlock);
  v12 = sub_1C106FB14();
  v14 = v13;
  v15 = sub_1C106FB14();
  v17 = v16;
  v18 = a5;
  v19 = a1;
  v20 = sub_1C106AC18();
  v22 = v21;

  _Block_copy(v11);
  sub_1C07FF8F8(v12, v14, v15, v17, v20, v22, (uint64_t)v19, (void (**)(_QWORD, _QWORD, _QWORD))v11, a7, a8);
  _Block_release(v11);
  sub_1C079D234(v20);

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void AssetRegistryXPC.Server.init()()
{
  sub_1C0792CF4();
  __break(1u);
}

uint64_t sub_1C0800214(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  char v13;
  void *v14;
  id v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  void *v37;
  void *v38;
  _QWORD v39[2];
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)();
  uint64_t v47;
  _OWORD v48[2];

  v3 = sub_1C07ACF80(&qword_1ED75E630);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v39 - v7;
  if (qword_1ED749E98 != -1)
    swift_once();
  v9 = sub_1C079E000(v3, (uint64_t)qword_1ED78C3C0);
  swift_beginAccess();
  sub_1C07B9D5C(v9, (uint64_t)v8);
  v10 = type metadata accessor for Configuration();
  result = sub_1C07B2D80((uint64_t)v8, 1, v10);
  if ((_DWORD)result != 1)
  {
    v12 = *(_QWORD *)&v8[*(int *)(v10 + 20)];
    sub_1C078D09C((uint64_t)v8);
    if ((v12 & 1) != 0)
    {
      if (qword_1ED75E808 != -1)
        swift_once();
      v16 = sub_1C077585C();
      sub_1C079E000(v16, (uint64_t)qword_1ED78D7A0);
      v17 = sub_1C077C0FC();
      v18 = sub_1C10703A8();
      if (sub_1C077F60C(v18))
      {
        *(_WORD *)sub_1C0775854() = 0;
        sub_1C077AF3C(&dword_1C0771000, v17, (os_log_type_t)v8, "AssetRegistryXPC: service is in no-op mode.");
        sub_1C0776778();
      }

    }
    else
    {
      sub_1C106FB14();
      v13 = sub_1C0C47FA8();
      swift_bridgeObjectRelease();
      if ((v13 & 1) != 0)
      {
        v14 = (void *)sub_1C106FAF0();
        v15 = objc_msgSend(a2, sel_valueForEntitlement_, v14);

        if (v15)
        {
          sub_1C107063C();
          swift_unknownObjectRelease();
        }
        else
        {
          memset(v48, 0, sizeof(v48));
        }
        sub_1C0800A54((uint64_t)v48, (uint64_t)&v43);
        if (v45)
        {
          sub_1C07ACF80(&qword_1ED762B70);
          if ((swift_dynamicCast() & 1) != 0)
          {
            v19 = v42;
            if (qword_1ED75E808 != -1)
              swift_once();
            v20 = sub_1C077585C();
            v21 = sub_1C079E000(v20, (uint64_t)qword_1ED78D7A0);
            sub_1C07767CC();
            sub_1C106F538();
            v22 = sub_1C0784E0C();
            if (os_log_type_enabled(v21, v22))
            {
              v23 = (uint8_t *)sub_1C0775854();
              v41 = sub_1C0775854();
              v43 = v41;
              *(_DWORD *)v23 = 136315138;
              v39[1] = v23 + 4;
              v40 = v23;
              v24 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
              v25 = MEMORY[0x1C3BA683C](v24, MEMORY[0x1E0DEA968]);
              v27 = v26;
              swift_bridgeObjectRelease();
              *(_QWORD *)&v48[0] = sub_1C0788DAC(v25, v27, &v43);
              sub_1C10705AC();
              sub_1C07758A4();
              swift_bridgeObjectRelease();
              sub_1C07796F0(&dword_1C0771000, v21, v22, "ViewXPC.Delegate: overrideAllowedDomainIds: %s", v40);
              swift_arrayDestroy();
              sub_1C0776778();
            }

            sub_1C07758A4();
            sub_1C0898D28(v19);
            v28 = v29;
LABEL_23:
            sub_1C106A708();
            sub_1C077B5BC();
            v30 = sub_1C106A6FC();
            sub_1C07B9D5C(v9, (uint64_t)v6);
            result = sub_1C07B2D80((uint64_t)v6, 1, v10);
            if ((_DWORD)result != 1)
            {
              type metadata accessor for AssetRegistryFullServer();
              sub_1C07919B4();
              sub_1C07F7040((uint64_t)v6);
              v31 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_1EF6D44D8);
              sub_1C0783020((uint64_t)v31, sel_setExportedInterface_);

              v32 = objc_allocWithZone((Class)type metadata accessor for AssetRegistryXPC.Server());
              sub_1C07919B4();
              v33 = swift_retain();
              sub_1C07FF3E0(v33, v28, v30);
              v35 = (void *)v34;
              sub_1C0783020(v34, sel_setExportedObject_);

              v46 = sub_1C08007CC;
              v47 = 0;
              v36 = MEMORY[0x1E0C809B0];
              v43 = MEMORY[0x1E0C809B0];
              v44 = 1107296256;
              v37 = sub_1C07A7C88((uint64_t)&unk_1E7A0C2D8);
              sub_1C0783020((uint64_t)v37, sel_setInterruptionHandler_);
              _Block_release(v37);
              v46 = sub_1C08007E0;
              v47 = 0;
              v43 = v36;
              v44 = 1107296256;
              v38 = sub_1C07A7C88((uint64_t)&unk_1E7A0C300);
              sub_1C0783020((uint64_t)v38, sel_setInvalidationHandler_);
              _Block_release(v38);
              objc_msgSend(a2, sel_resume);
              swift_release();
              swift_release();
              return 1;
            }
            goto LABEL_27;
          }
        }
        else
        {
          sub_1C07C011C((uint64_t)&v43);
        }
        v28 = MEMORY[0x1E0DEE9E8];
        goto LABEL_23;
      }
    }
    return 0;
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

void sub_1C08007CC()
{
  sub_1C08007F4(MEMORY[0x1E0DF2280], "AssetRegistryXPC Service connection interrupted.");
}

void sub_1C08007E0()
{
  sub_1C08007F4(MEMORY[0x1E0DF2290], "AssetRegistryXPC Service connection invalidated.");
}

void sub_1C08007F4(uint64_t (*a1)(void), const char *a2)
{
  uint64_t v4;
  os_log_type_t v5;
  NSObject *oslog;

  if (qword_1ED75E808 != -1)
    swift_once();
  v4 = sub_1C077585C();
  sub_1C079E000(v4, (uint64_t)qword_1ED78D7A0);
  oslog = sub_1C077C0FC();
  v5 = a1();
  if (os_log_type_enabled(oslog, v5))
  {
    *(_WORD *)sub_1C0775854() = 0;
    sub_1C077AF3C(&dword_1C0771000, oslog, v5, a2);
    sub_1C0776778();
  }

}

id sub_1C0800938()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_super v8;

  v8.receiver = v0;
  v8.super_class = (Class)sub_1C07796E8();
  return sub_1C0797B98((uint64_t)v8.super_class, sel_init, v1, v2, v3, v4, v5, v6, v8);
}

id _s24IntelligencePlatformCore16AssetRegistryXPCC10BaseServerCfD_0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)sub_1C07796E8();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for AssetRegistryXPC()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for AssetRegistryXPC.BaseServer()
{
  return objc_opt_self();
}

uint64_t method lookup function for AssetRegistryXPC.BaseServer()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for AssetRegistryXPC.Server()
{
  return objc_opt_self();
}

uint64_t method lookup function for AssetRegistryXPC.Server()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for AssetRegistryXPC.Delegate()
{
  return objc_opt_self();
}

uint64_t sub_1C0800A54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1ED760400);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_1C0800A9C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_1C0800ADC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1ED75E630);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C0800B24()
{
  unint64_t result;

  result = qword_1ED760690;
  if (!qword_1ED760690)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED760690);
  }
  return result;
}

unint64_t sub_1C0800B60()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EF6308E8;
  if (!qword_1EF6308E8)
  {
    v1 = sub_1C07D4BEC(&qword_1EF6308C0);
    v2 = sub_1C07803B8((unint64_t *)&unk_1EF6308F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3B6E8], MEMORY[0x1E0D3B6D8]);
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0D3D038], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EF6308E8);
  }
  return result;
}

unint64_t sub_1C0800BDC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EF630910;
  if (!qword_1EF630910)
  {
    v1 = sub_1C07D4BEC(&qword_1ED744A98);
    v2 = sub_1C07803B8(&qword_1EF630918, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3B6B0], MEMORY[0x1E0D3B6A8]);
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0D3D038], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EF630910);
  }
  return result;
}

uint64_t sub_1C0800C68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = *(_QWORD *)(a2 + 32);
  v3[6] = *(_QWORD *)(a2 + 16);
  v3[7] = swift_getAssociatedTypeWitness();
  v4 = sub_1C1070564();
  v3[8] = v4;
  v3[9] = *(_QWORD *)(v4 - 8);
  v3[10] = sub_1C0779644();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0800CE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(int *)(*(_QWORD *)(v0 + 24) + 56);
  *(_DWORD *)(v0 + 128) = v2;
  if (*(_BYTE *)(v1 + v2) == 1)
  {
    sub_1C079B3F4();
    sub_1C07A2248();
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v3;
    sub_1C0797BA0(v3);
  }
  else
  {
    sub_1C07960A8();
    sub_1C07A36E0();
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v4;
    *v4 = v0;
    v4[1] = sub_1C0800E20;
  }
  return sub_1C079A744();
}

uint64_t sub_1C0800DE8()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;

  sub_1C077E88C();
  v1 = *v0;
  sub_1C07878A8(v2);
  swift_task_dealloc();
  return sub_1C0795770(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1C0800E20()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0800E78()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = sub_1C07B2D80(v1, 1, *(_QWORD *)(v0 + 56));
  v3 = *(int *)(v0 + 128);
  if (v2 == 1)
  {
    *(_BYTE *)(*(_QWORD *)(v0 + 32) + v3) = 1;
    sub_1C079B3F4();
    sub_1C07A2248();
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v4;
    sub_1C0797BA0(v4);
    return sub_1C079A744();
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 64);
    v7 = *(_QWORD *)(v0 + 72);
    v8 = *(_QWORD *)(v0 + 16);
    *(_BYTE *)(*(_QWORD *)(v0 + 32) + v3) = 0;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v8, v1, v6);
    sub_1C07A50E8();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1C0800F68()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0800FC0()
{
  uint64_t v0;

  sub_1C0794CC8();
  sub_1C07A50E8();
  return sub_1C077CF28(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0800FEC()
{
  uint64_t v0;

  sub_1C07A50E8();
  return sub_1C077CF28(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0801014()
{
  uint64_t v0;

  sub_1C0794CC8();
  sub_1C07A50E8();
  return sub_1C077CF28(*(uint64_t (**)(void))(v0 + 8));
}

void sub_1C0801040(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1C07A7C94();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  type metadata accessor for AppendedAsyncSequence.AppendedAsyncIterator();
}

uint64_t sub_1C08010CC(uint64_t a1)
{
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v5 = v3 + *(int *)(a1 + 52);
  v6 = sub_1C07A7C94();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, v2, v6);
  *(_BYTE *)(v3 + *(int *)(a1 + 56)) = v1;
  return result;
}

uint64_t sub_1C0801128(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1C0804B88;
  return sub_1C0800C68(a1, a2);
}

uint64_t sub_1C0801188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v4 + 24) = a4;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 32) = v5;
  *v5 = v4;
  v5[1] = sub_1C0804B98;
  return sub_1C1070090();
}

void sub_1C0801220(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v21 = a2;
  v20 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  MEMORY[0x1E0C80A78](a1);
  sub_1C0778564();
  v5 = v4 - v3;
  swift_getAssociatedTypeWitness();
  sub_1C078B9A4();
  v7 = MEMORY[0x1E0C80A78](v6);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v7);
  sub_1C0778564();
  v12 = v11 - v10;
  swift_getAssociatedTypeWitness();
  sub_1C078B9A4();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v18 - v14;
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  v17 = v19;
  v16(v12, v19, v8);
  sub_1C1070150();
  sub_1C077CF74(v5, v17 + *(int *)(a1 + 52), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 16));
  sub_1C1070150();
  sub_1C0801040((uint64_t)v15, v21);
}

void sub_1C08013B4(uint64_t a1, uint64_t a2)
{
  sub_1C0803A30(a1, a2, (void (*)(void))sub_1C0801220);
}

uint64_t AnyAsyncSequence.AsyncIterator.next()(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(*(int *)*v1 + *v1);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1C0801424;
  return v6(a1);
}

uint64_t sub_1C0801424()
{
  uint64_t v0;

  sub_1C077B5FC();
  return sub_1C077CF28(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0801448(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C0804B88;
  return AnyAsyncSequence.AsyncIterator.next()(a1);
}

uint64_t sub_1C0801498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v4 + 24) = a4;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 32) = v5;
  *v5 = v4;
  v5[1] = sub_1C0801530;
  return sub_1C1070090();
}

uint64_t sub_1C0801530()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;

  sub_1C077E88C();
  v3 = *v2;
  sub_1C07878A8(v4);
  if (v1)
    **(_QWORD **)(v0 + 24) = *(_QWORD *)(v0 + 16);
  return sub_1C0795770(*(uint64_t (**)(void))(v3 + 8));
}

uint64_t AnyAsyncSequence.makeAsyncIterator()()
{
  uint64_t (**v0)(void);

  return (*v0)();
}

uint64_t sub_1C0801598()
{
  return MEMORY[0x1E0DEDB38];
}

void sub_1C08015A4()
{
  JUMPOUT(0x1C3BA8174);
}

uint64_t sub_1C08015B4()
{
  AnyAsyncSequence.makeAsyncIterator()();
  return swift_release();
}

uint64_t sub_1C08015CC()
{
  return swift_allocateGenericValueMetadata();
}

__n128 initializeBufferWithCopyOfBuffer for Options.OptionsValue(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t type metadata accessor for AnyAsyncSequence(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0802884(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnyAsyncSequence);
}

_QWORD *initializeBufferWithCopyOfBuffer for StoredLocationVisitAsyncSequence(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for StoredLocationVisitAsyncSequence()
{
  return swift_release();
}

_QWORD *assignWithCopy for StoredLocationVisitAsyncSequence(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for StoredLocationVisitAsyncSequence(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AutonamingMessagesConversation(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AutonamingMessagesConversation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for AnyAsyncSequence.AsyncIterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0802884(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnyAsyncSequence.AsyncIterator);
}

uint64_t sub_1C080171C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1C0801724()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C0801790(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7 && *(_QWORD *)(v4 + 64) <= 0x18uLL && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_1C0801800(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_1C0801810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))();
  return a1;
}

uint64_t sub_1C0801840(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 24))();
  return a1;
}

uint64_t sub_1C0801870(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 32))();
  return a1;
}

uint64_t sub_1C08018A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 40))();
  return a1;
}

uint64_t sub_1C08018D0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_18;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return sub_1C07B2D80(a1, v6, v4);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return (v6 + v12 + 1);
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1C0801980 + 4 * byte_1C107A290[(v8 - 1)]))();
}

void sub_1C08019CC(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      v14 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0u;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v15 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t type metadata accessor for AsyncWrappedSequence(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0802884(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AsyncWrappedSequence);
}

uint64_t sub_1C0801B80()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C0801BFC(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if (v6 <= 7 && *(_QWORD *)(v5 + 64) <= 0x18uLL && (*(_DWORD *)(v5 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  }
  else
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~v6));
    swift_retain();
  }
  return a1;
}

uint64_t sub_1C0801C90(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
}

uint64_t sub_1C0801CDC(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1C0801D34(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 24))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1C0801D8C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1C0801DE4(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 40))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1C0801E3C(uint64_t a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (!a2)
    return 0;
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (a2 <= v6)
    goto LABEL_18;
  v7 = *(_QWORD *)(v5 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((a2 - v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return sub_1C07B2D80(a1, v6, AssociatedTypeWitness);
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if ((_DWORD)v7)
  {
    if (v7 > 3)
      LODWORD(v7) = 4;
    __asm { BR              X11 }
  }
  return (v6 + v11 + 1);
}

void sub_1C0801F78(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  if (a3 <= v7)
  {
    v10 = 0u;
  }
  else if (v8 <= 3)
  {
    v12 = ((a3 - v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v12))
    {
      v10 = 4u;
    }
    else if (v12 >= 0x100)
    {
      v10 = 2;
    }
    else
    {
      v10 = v12 > 1;
    }
  }
  else
  {
    v10 = 1u;
  }
  if (v7 < a2)
  {
    v11 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v13 = v11 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *(_WORD *)a1 = v13;
          a1[2] = BYTE2(v13);
        }
        else if ((_DWORD)v8 == 2)
        {
          *(_WORD *)a1 = v13;
        }
        else
        {
          *a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t type metadata accessor for AsyncWrappedSequence.AsyncIterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0802884(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AsyncWrappedSequence.AsyncIterator);
}

void sub_1C0802150(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v7 = *(_QWORD *)(a1 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](a1);
  sub_1C078A72C((uint64_t)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16));
  v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  sub_1C078A72C(v10 + v9, (uint64_t)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 32));
  *a3 = sub_1C08027D8;
  a3[1] = v10;
  sub_1C077C798();
}

_QWORD *sub_1C0802200@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *result;
  uint64_t v13;

  v8 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  v11 = swift_allocBox();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, a2);
  sub_1C1070150();
  result = (_QWORD *)swift_allocObject();
  result[2] = a2;
  result[3] = a3;
  result[4] = v11;
  *a4 = &unk_1EF630950;
  a4[1] = result;
  return result;
}

uint64_t sub_1C08022EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[6] = a3;
  v4[7] = a4;
  v4[5] = a1;
  v4[8] = swift_getAssociatedTypeWitness();
  v4[9] = swift_projectBox();
  return swift_task_switch();
}

uint64_t sub_1C080235C()
{
  uint64_t v0;
  _QWORD *v1;

  swift_beginAccess();
  swift_getAssociatedConformanceWitness();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v1;
  *v1 = v0;
  v1[1] = sub_1C08023F8;
  return sub_1C1070078();
}

uint64_t sub_1C08023F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;

  sub_1C077E88C();
  v3 = *v2;
  *v4 = v3;
  *(_QWORD *)(v0 + 88) = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_1C077862C();
    return sub_1C0789D28();
  }
  else
  {
    swift_endAccess();
    return sub_1C0795770(*(uint64_t (**)(void))(v3 + 8));
  }
}

uint64_t sub_1C0802450()
{
  uint64_t v0;

  swift_endAccess();
  return sub_1C077CF28(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C080247C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  sub_1C077862C();
  return swift_task_switch();
}

uint64_t sub_1C080249C()
{
  uint64_t v0;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1C10705A0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C0802534@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(a2, a1, AssociatedTypeWitness);
}

uint64_t sub_1C080258C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1C07E3614;
  return sub_1C080247C(a1, a2);
}

uint64_t sub_1C08025EC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C0802670;
  return sub_1C1070090();
}

uint64_t sub_1C0802670()
{
  uint64_t v0;

  sub_1C077B5FC();
  return sub_1C077CF28(*(uint64_t (**)(void))(v0 + 8));
}

void sub_1C080269C()
{
  JUMPOUT(0x1C3BA8174);
}

void sub_1C08026AC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;

  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 16) - 8);
  MEMORY[0x1E0C80A78](a1);
  sub_1C0778564();
  v7 = v6 - v5;
  swift_getAssociatedTypeWitness();
  sub_1C078B9A4();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v11 - v9;
  sub_1C078A72C(v7, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
  sub_1C106FD84();
  sub_1C0802534((uint64_t)v10, a2);
  sub_1C077C798();
}

void sub_1C0802774(uint64_t a1, uint64_t a2)
{
  sub_1C0803A30(a1, a2, (void (*)(void))sub_1C08026AC);
}

uint64_t sub_1C0802780()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

_QWORD *sub_1C08027D8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  return sub_1C0802200(v1 + ((v3 + 32) & ~v3), v2, *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1C08027F4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0802818(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1C0801424;
  return sub_1C08022EC(a1, v6, v4, v5);
}

uint64_t sub_1C0802884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x1C3BA80CC](a1, v6, a5);
}

uint64_t sub_1C08028B0()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C0802928(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
  }
  return v4;
}

uint64_t sub_1C08029D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1C0802A34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1C0802A90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1C0802AEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1C0802B48(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 >= a2)
  {
    if ((_DWORD)v6)
      return sub_1C07B2D80(a1, v6, v4);
    return 0;
  }
  if (((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
    v7 = 2;
  else
    v7 = a2 - v6 + 1;
  if (v7 >= 0x10000)
    v8 = 4;
  else
    v8 = 2;
  if (v7 < 0x100)
    v8 = 1;
  if (v7 >= 2)
    v9 = v8;
  else
    v9 = 0;
  return ((uint64_t (*)(void))((char *)&loc_1C0802BB8 + 4 * byte_1C107A2AC[v9]))();
}

void sub_1C0802C0C(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  int v12;
  unsigned int v13;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v7 >= a3)
  {
    v12 = 0u;
  }
  else
  {
    v9 = a3 - v7;
    if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v10 = v9 + 1;
    else
      v10 = 2;
    if (v10 >= 0x10000)
      v11 = 4;
    else
      v11 = 2;
    if (v10 < 0x100)
      v11 = 1;
    if (v10 >= 2)
      v12 = v11;
    else
      v12 = 0;
  }
  if (a2 > v7)
  {
    if ((_DWORD)v8)
    {
      v13 = ~v7 + a2;
      bzero(a1, v8);
      *a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t sub_1C0802CEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  *(_BYTE *)(v4 + v5) = 0;
  if ((_DWORD)a2)
    return sub_1C07B2D8C(v4, a2, a3, a4);
  return result;
}

void sub_1C0802D28(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_WORD *)(v2 + v3) = 0;
  if (!a2)
    JUMPOUT(0x1C0802D30);
  JUMPOUT(0x1C0802D10);
}

uint64_t type metadata accessor for BatchedAsyncSequence(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0802884(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BatchedAsyncSequence);
}

uint64_t sub_1C0802D54()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1C0802D5C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1C0802DE8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = v8;
  v10 = *(_QWORD *)(v6 + 64) + v8;
  v11 = *(_DWORD *)(v6 + 80) | v8;
  v12 = v11;
  v13 = v11 & 0x100000;
  if (v12 > 7 || v13 != 0 || (v10 & (unint64_t)~v9) + *(_QWORD *)(v7 + 64) > 0x18)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v12 + 16) & ~v12));
    swift_retain();
  }
  else
  {
    v17 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v10) & v17, ((unint64_t)a2 + v10) & v17, v5);
  }
  return v4;
}

uint64_t sub_1C0802EB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((*(_QWORD *)(v4 + 64) + a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
}

uint64_t sub_1C0802F10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1C0802F7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1C0802FE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1C0803054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1C08030C0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  char v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(v6 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8)
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = v12 + v13;
  v15 = a2 - v11;
  if (a2 <= v11)
    goto LABEL_23;
  v16 = (v14 & ~v13) + *(_QWORD *)(v9 + 64);
  v17 = 8 * v16;
  if (v16 <= 3)
  {
    v19 = ((v15 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      v18 = *(_DWORD *)(a1 + v16);
      if (!v18)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 > 0xFF)
    {
      v18 = *(unsigned __int16 *)(a1 + v16);
      if (!*(_WORD *)(a1 + v16))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 < 2)
    {
LABEL_23:
      if (v11)
      {
        if (v8 >= v10)
        {
          v10 = v8;
        }
        else
        {
          a1 = (v14 + a1) & ~v13;
          v5 = v6;
        }
        return sub_1C07B2D80(a1, v10, v5);
      }
      return 0;
    }
  }
  v18 = *(unsigned __int8 *)(a1 + v16);
  if (!*(_BYTE *)(a1 + v16))
    goto LABEL_23;
LABEL_14:
  v20 = (v18 - 1) << v17;
  if (v16 > 3)
    v20 = 0;
  if (!(_DWORD)v16)
    return v11 + v20 + 1;
  if (v16 <= 3)
    v21 = v16;
  else
    v21 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1C080319C + 4 * byte_1C107A2BB[v21 - 1]))();
}

void sub_1C0803210(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v12 = ((a3 - v7 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v12))
      {
        v10 = 4u;
      }
      else if (v12 >= 0x100)
      {
        v10 = 2;
      }
      else
      {
        v10 = v12 > 1;
      }
    }
    else
    {
      v10 = 1u;
    }
  }
  else
  {
    v10 = 0u;
  }
  if (v7 < a2)
  {
    v11 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v13 = v11 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v13;
          *((_BYTE *)a1 + 2) = BYTE2(v13);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v13;
        }
        else
        {
          *(_BYTE *)a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

void type metadata accessor for AppendedAsyncSequence()
{
  JUMPOUT(0x1C3BA80CCLL);
}

void sub_1C0803410()
{
  JUMPOUT(0x1C3BA8174);
}

void sub_1C0803420()
{
  JUMPOUT(0x1C3BA8174);
}

uint64_t sub_1C0803430(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;

  v2[4] = a1;
  v2[5] = v1;
  v2[6] = *(_QWORD *)(a1 + 24);
  v2[7] = *(_QWORD *)(a1 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2[8] = AssociatedTypeWitness;
  v4 = sub_1C1070564();
  v2[9] = v4;
  v2[10] = *(_QWORD *)(v4 - 8);
  v2[11] = sub_1C0779644();
  v2[12] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C08034D8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t result;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = *(uint64_t **)(v0 + 40);
  result = sub_1C106F910();
  *(_QWORD *)(v0 + 16) = result;
  v3 = *v1;
  *(_QWORD *)(v0 + 120) = *v1;
  if (v3 < 0)
  {
    __break(1u);
  }
  else if (v3)
  {
    *(_DWORD *)(v0 + 152) = *(_DWORD *)(*(_QWORD *)(v0 + 32) + 36);
    *(_QWORD *)(v0 + 128) = 0;
    sub_1C07960A8();
    sub_1C07A36E0();
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 136) = v4;
    *v4 = v0;
    v4[1] = sub_1C08035D4;
    sub_1C07BC5AC();
    return sub_1C07960BC();
  }
  else
  {
    v5 = result;
    swift_task_dealloc();
    sub_1C07796F8();
    swift_task_dealloc();
    return sub_1C078C778(v5, *(uint64_t (**)(void))(v0 + 8));
  }
  return result;
}

uint64_t sub_1C08035D4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  sub_1C077E88C();
  *v3 = *v2;
  *(_QWORD *)(v0 + 144) = v1;
  swift_task_dealloc();
  if (v1)
    swift_bridgeObjectRelease();
  sub_1C077862C();
  return sub_1C0789D28();
}

uint64_t sub_1C080362C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 64);
  if (sub_1C07B2D80(v1, 1, v2) == 1)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(v1, *(_QWORD *)(v0 + 72));
    v3 = *(_QWORD *)(v0 + 16);
    *(_QWORD *)(v0 + 24) = v3;
    v4 = sub_1C07919C0();
    MEMORY[0x1C3BA8174](MEMORY[0x1E0DEAF50], v4);
    if ((sub_1C10702F4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v3 = 0;
    }
    goto LABEL_6;
  }
  v5 = *(_QWORD *)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 112);
  v8 = *(_QWORD *)(v0 + 96);
  v9 = *(_QWORD *)(v0 + 128) + 1;
  sub_1C077CF74(v6, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32));
  sub_1C077CF74(v7, v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16));
  sub_1C07919C0();
  sub_1C106FFDC();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v6, v2);
  if (v9 == v5)
  {
    v3 = *(_QWORD *)(v0 + 16);
LABEL_6:
    sub_1C0792D00();
    swift_task_dealloc();
    sub_1C07796F8();
    return sub_1C078C778(v3, *(uint64_t (**)(void))(v0 + 8));
  }
  v11 = *(_QWORD *)(v0 + 120);
  v12 = *(_QWORD *)(v0 + 128) + 1;
  *(_QWORD *)(v0 + 128) = v12;
  if (v12 == v11)
  {
    __break(1u);
  }
  else
  {
    sub_1C07960A8();
    sub_1C07A36E0();
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 136) = v13;
    *v13 = v0;
    v13[1] = sub_1C08035D4;
    sub_1C07BC5AC();
    return sub_1C07960BC();
  }
  return result;
}

uint64_t sub_1C08037E4()
{
  uint64_t v0;

  sub_1C0792D00();
  swift_task_dealloc();
  sub_1C07796F8();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C0803820@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  char *v6;
  uint64_t AssociatedTypeWitness;

  *a5 = a1;
  v6 = (char *)a5 + *(int *)(type metadata accessor for BatchedAsyncSequence.AsyncIterator(0, a3, a4, a4) + 36);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(v6, a2, AssociatedTypeWitness);
}

uint64_t sub_1C08038A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_1C08038F0;
  return sub_1C0803430(a2);
}

uint64_t sub_1C08038F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v4 = *v2;
  v7 = *v2;
  v5 = *v2;
  sub_1C07878A8(&v7);
  if (!v1)
    **(_QWORD **)(v4 + 16) = a1;
  return (*(uint64_t (**)(void))(v5 + 8))();
}

void sub_1C0803948(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](a1);
  sub_1C0778564();
  v9 = v8 - v7;
  v11 = *(_QWORD *)(v10 + 24);
  swift_getAssociatedTypeWitness();
  sub_1C078B9A4();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v16 - v13;
  v15 = *(_QWORD *)(v2 + *(int *)(a1 + 36));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v9, v2, v5);
  sub_1C1070150();
  sub_1C0803820(v15, (uint64_t)v14, v5, v11, a2);
  sub_1C077C798();
}

void sub_1C0803A24(uint64_t a1, uint64_t a2)
{
  sub_1C0803A30(a1, a2, (void (*)(void))sub_1C0803948);
}

void sub_1C0803A30(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3();
  JUMPOUT(0x1C0803A44);
}

uint64_t type metadata accessor for BatchedAsyncSequence.AsyncIterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0802884(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BatchedAsyncSequence.AsyncIterator);
}

void type metadata accessor for AppendedAsyncSequence.AppendedAsyncIterator()
{
  JUMPOUT(0x1C3BA80CCLL);
}

uint64_t sub_1C0803A78()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C0803B04(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 8) & (unint64_t)~v6) + *(_QWORD *)(v5 + 64) > 0x18)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(((unint64_t)a1 + v6 + 8) & ~v6, ((unint64_t)a2 + v6 + 8) & ~v6, AssociatedTypeWitness);
  }
  return a1;
}

uint64_t sub_1C0803BC8(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(unint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80), AssociatedTypeWitness);
}

_QWORD *sub_1C0803C20(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;

  *a1 = *a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(((unint64_t)a1 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), AssociatedTypeWitness);
  return a1;
}

_QWORD *sub_1C0803C90(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;

  *a1 = *a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), AssociatedTypeWitness);
  return a1;
}

_QWORD *sub_1C0803D00(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;

  *a1 = *a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), AssociatedTypeWitness);
  return a1;
}

_QWORD *sub_1C0803D70(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;

  *a1 = *a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1C0803DE0(uint64_t a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (!a2)
    return 0;
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = *(unsigned __int8 *)(v5 + 80);
  if (a2 <= v6)
    goto LABEL_18;
  v8 = ((v7 + 8) & ~v7) + *(_QWORD *)(v5 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((a2 - v6 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return sub_1C07B2D80((a1 + v7 + 8) & ~v7, v6, AssociatedTypeWitness);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if ((_DWORD)v8)
  {
    if (v8 > 3)
      LODWORD(v8) = 4;
    __asm { BR              X11 }
  }
  return (v6 + v12 + 1);
}

void sub_1C0803F38(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)) + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  if (a3 <= v7)
  {
    v10 = 0u;
  }
  else if (v8 <= 3)
  {
    v12 = ((a3 - v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v12))
    {
      v10 = 4u;
    }
    else if (v12 >= 0x100)
    {
      v10 = 2;
    }
    else
    {
      v10 = v12 > 1;
    }
  }
  else
  {
    v10 = 1u;
  }
  if (v7 < a2)
  {
    v11 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v13 = v11 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *(_WORD *)a1 = v13;
          a1[2] = BYTE2(v13);
        }
        else if ((_DWORD)v8 == 2)
        {
          *(_WORD *)a1 = v13;
        }
        else
        {
          *a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

uint64_t sub_1C0804120()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1C0804128()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    result = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1C08041E4(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = v9;
  v11 = v6 + v9;
  v12 = *(_QWORD *)(v8 + 64);
  v13 = *(_DWORD *)(v5 + 80) | v9;
  v14 = (*(_BYTE *)(v5 + 80) | v9);
  v15 = v13 & 0x100000;
  if (v14 > 7 || v15 != 0 || v12 + (v11 & (unint64_t)~v10) + 1 > 0x18)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v14 + 16) & ~v14));
    swift_retain();
  }
  else
  {
    v19 = v7;
    v20 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    v21 = ((unint64_t)a2 + v11) & v20;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)a1 + v11) & v20, v21, v19);
    *(_BYTE *)((((unint64_t)a1 + v11) & v20) + v12) = *(_BYTE *)(v21 + v12);
  }
  return a1;
}

uint64_t sub_1C080431C(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
  v4 = *(_QWORD *)(v3 + 64) + a1;
  v5 = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))((v4 + *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80), v5);
}

uint64_t sub_1C08043C0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v6 + v9 + a1) & ~v9;
  v11 = (v6 + v9 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  *(_BYTE *)(v10 + *(_QWORD *)(v8 + 64)) = *(_BYTE *)(v11 + *(_QWORD *)(v8 + 64));
  return a1;
}

uint64_t sub_1C0804490(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v6 + v9 + a1) & ~v9;
  v11 = (v6 + v9 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(v10, v11, v7);
  *(_BYTE *)(v10 + *(_QWORD *)(v8 + 64)) = *(_BYTE *)(v11 + *(_QWORD *)(v8 + 64));
  return a1;
}

uint64_t sub_1C0804560(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v6 + v9 + a1) & ~v9;
  v11 = (v6 + v9 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v10, v11, v7);
  *(_BYTE *)(v10 + *(_QWORD *)(v8 + 64)) = *(_BYTE *)(v11 + *(_QWORD *)(v8 + 64));
  return a1;
}

uint64_t sub_1C0804630(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v6 + v9 + a1) & ~v9;
  v11 = (v6 + v9 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40))(v10, v11, v7);
  *(_BYTE *)(v10 + *(_QWORD *)(v8 + 64)) = *(_BYTE *)(v11 + *(_QWORD *)(v8 + 64));
  return a1;
}

uint64_t sub_1C0804700(uint64_t a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  int v17;
  unsigned int v18;
  int v19;
  int v20;
  uint64_t v21;
  unsigned int v23;
  int v24;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int *)(v8 + 84);
  if (v9 <= v6)
    v10 = v6;
  else
    v10 = *(_DWORD *)(v8 + 84);
  if (v10 <= 0xFE)
    v10 = 254;
  if (!a2)
    return 0;
  v11 = v7;
  v12 = *(unsigned __int8 *)(v8 + 80);
  v13 = *(_QWORD *)(v5 + 64) + v12;
  v14 = *(_QWORD *)(v8 + 64);
  if (a2 <= v10)
    goto LABEL_25;
  v15 = v14 + (v13 & ~v12) + 1;
  v16 = 8 * v15;
  if (v15 > 3)
    goto LABEL_9;
  v18 = ((a2 - v10 + ~(-1 << v16)) >> v16) + 1;
  if (HIWORD(v18))
  {
    v17 = *(_DWORD *)(a1 + v15);
    if (v17)
      goto LABEL_16;
  }
  else
  {
    if (v18 <= 0xFF)
    {
      if (v18 < 2)
        goto LABEL_25;
LABEL_9:
      v17 = *(unsigned __int8 *)(a1 + v15);
      if (!*(_BYTE *)(a1 + v15))
        goto LABEL_25;
LABEL_16:
      v19 = (v17 - 1) << v16;
      if (v15 > 3)
        v19 = 0;
      if ((_DWORD)v15)
      {
        if (v15 <= 3)
          v20 = v15;
        else
          v20 = 4;
        __asm { BR              X12 }
      }
      v24 = v10 + v19;
      return (v24 + 1);
    }
    v17 = *(unsigned __int16 *)(a1 + v15);
    if (*(_WORD *)(a1 + v15))
      goto LABEL_16;
  }
LABEL_25:
  if ((_DWORD)v6 == v10)
  {
    v21 = a1;
    v9 = v6;
    v11 = AssociatedTypeWitness;
    return sub_1C07B2D80(v21, v9, v11);
  }
  v21 = (v13 + a1) & ~v12;
  if ((_DWORD)v9 == v10)
    return sub_1C07B2D80(v21, v9, v11);
  v23 = *(unsigned __int8 *)(v21 + v14);
  if (v23 < 2)
    return 0;
  v24 = (v23 + 2147483646) & 0x7FFFFFFF;
  return (v24 + 1);
}

void sub_1C0804908(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  size_t v10;
  char v11;
  unsigned int v12;
  int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v8 + 84) <= v7)
    v9 = v7;
  else
    v9 = *(_DWORD *)(v8 + 84);
  if (v9 <= 0xFE)
    v9 = 254;
  v10 = *(_QWORD *)(v8 + 64)
      + ((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))
      + 1;
  v11 = 8 * v10;
  if (a3 <= v9)
  {
    v12 = 0u;
  }
  else if (v10 <= 3)
  {
    v14 = ((a3 - v9 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v14))
    {
      v12 = 4u;
    }
    else if (v14 >= 0x100)
    {
      v12 = 2;
    }
    else
    {
      v12 = v14 > 1;
    }
  }
  else
  {
    v12 = 1u;
  }
  if (v9 < a2)
  {
    v13 = ~v9 + a2;
    if (v10 < 4)
    {
      if (*(_DWORD *)(v8 + 64)
         + ((*(_DWORD *)(v6 + 64) + *(unsigned __int8 *)(v8 + 80)) & ~*(unsigned __int8 *)(v8 + 80)) != -1)
      {
        v15 = v13 & ~(-1 << v11);
        bzero(a1, v10);
        if ((_DWORD)v10 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if ((_DWORD)v10 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

uint64_t sub_1C0804BA0(uint64_t a1, uint64_t a2)
{
  id v4;
  id v5;
  uint64_t v6;

  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CAA078]), sel_init);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D66F08]), sel_init);
  v6 = sub_1C0778598();
  return sub_1C0806774((uint64_t)v4, (uint64_t)v5, a1, a2, v6);
}

uint64_t sub_1C0804C24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[26] = a4;
  v5[27] = v4;
  v5[24] = a2;
  v5[25] = a3;
  v5[23] = a1;
  v6 = sub_1C106EC44();
  v5[28] = v6;
  v5[29] = *(_QWORD *)(v6 - 8);
  v5[30] = sub_1C0779644();
  v7 = sub_1C106ADE0();
  v5[31] = v7;
  v5[32] = *(_QWORD *)(v7 - 8);
  v5[33] = sub_1C077CF7C();
  v5[34] = sub_1C0775870();
  v8 = sub_1C106DC24();
  v5[35] = v8;
  v5[36] = *(_QWORD *)(v8 - 8);
  v5[37] = sub_1C077CF7C();
  v5[38] = sub_1C0775870();
  v5[39] = sub_1C0775870();
  sub_1C07ACF80(&qword_1ED749D88);
  v5[40] = sub_1C0779644();
  v5[41] = type metadata accessor for LOIBasedSegment(0);
  v5[42] = sub_1C0779644();
  v9 = sub_1C106F544();
  v5[43] = v9;
  v5[44] = *(_QWORD *)(v9 - 8);
  v5[45] = sub_1C077CF7C();
  v5[46] = sub_1C0775870();
  v5[47] = sub_1C0775870();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0804D20()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = *(NSObject **)(v0 + 376);
  sub_1C0790D8C();
  sub_1C106F538();
  v2 = sub_1C0784E0C();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)sub_1C0775854();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_1C0771000, v1, v2, "Running attending an event inference model", v3, 2u);
    sub_1C0776778();
  }
  v4 = *(_QWORD *)(v0 + 352);
  v5 = *(_QWORD *)(v0 + 200);

  *(_QWORD *)(v0 + 384) = *(_QWORD *)(v4 + 8);
  sub_1C07B4698();
  sub_1C0784AC0(v5, v0 + 16);
  sub_1C07ACF80(&qword_1ED7480B8);
  if (sub_1C0779700())
  {
    v9 = *(_QWORD *)(v0 + 328);
    v8 = *(_QWORD *)(v0 + 336);
    v10 = sub_1C0796F5C();
    sub_1C079F2EC(v10, v11, type metadata accessor for LOIBasedSegment);
    v12 = sub_1C08066B8(v8 + *(int *)(v9 + 24), v0 + 56);
    v13 = *(_QWORD *)(v0 + 80);
    sub_1C077C790(v12, &qword_1ED74AB38);
    if (v13)
    {
      v15 = *(_QWORD *)(v0 + 328);
      v14 = *(_QWORD *)(v0 + 336);
      v17 = *(_QWORD *)(v0 + 208);
      v16 = *(_QWORD *)(v0 + 216);
      v18 = *(_QWORD **)(v0 + 192);
      sub_1C0784AC0((uint64_t)v18, v0 + 96);
      sub_1C0784AC0(v17, v0 + 136);
      v19 = sub_1C0778598();
      *(_QWORD *)(v19 + 16) = v16;
      sub_1C077DD60((__int128 *)(v0 + 96), v19 + 24);
      sub_1C077DD60((__int128 *)(v0 + 136), v19 + 64);
      swift_retain();
      MEMORY[0x1C3BA4538](sub_1C0806734, v19, 1);
      v20 = v18[3];
      v21 = v18[4];
      sub_1C07A9480(v18, v20);
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v21);
      v22 = *(int *)(v15 + 20);
      *(_DWORD *)(v0 + 400) = v22;
      v23 = v14 + v22;
      v24 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 392) = v24;
      *v24 = v0;
      v24[1] = sub_1C080503C;
      return sub_1C0805924(*(_QWORD *)(v0 + 272), v23);
    }
    v28 = *(NSObject **)(v0 + 368);
    sub_1C0790D8C();
    sub_1C106F538();
    v29 = sub_1C0784E0C();
    if (sub_1C077C10C(v29))
    {
      v30 = (uint8_t *)sub_1C0775854();
      *(_WORD *)v30 = 0;
      _os_log_impl(&dword_1C0771000, v28, OS_LOG_TYPE_DEFAULT, "currSegment is not a visit segment", v30, 2u);
      sub_1C0776778();
    }
    v31 = *(_QWORD *)(v0 + 336);
    v26 = *(_QWORD *)(v0 + 184);

    sub_1C07B4698();
    sub_1C07B1F90(v31, type metadata accessor for LOIBasedSegment);
  }
  else
  {
    v26 = *(_QWORD *)(v0 + 184);
    v27 = sub_1C077A2C4(*(_QWORD *)(v0 + 320), v6, v7, *(_QWORD *)(v0 + 328));
    sub_1C077C790(v27, &qword_1ED749D88);
  }
  v32 = sub_1C079577C();
  sub_1C077A2C4(v26, v33, v34, v32);
  sub_1C079E1E4();
  swift_task_dealloc();
  sub_1C07767BC();
  sub_1C07796F8();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C07767D4();
  sub_1C0778638();
  sub_1C0786388();
  sub_1C0779D20();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C080503C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 272);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 248);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 256);
  *(_BYTE *)(*(_QWORD *)v1 + 404) = a1;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  sub_1C077862C();
  return swift_task_switch();
}

uint64_t sub_1C08050B4()
{
  uint64_t v0;
  char v1;
  NSObject *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  double v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  int *v35;
  _QWORD *v36;
  uint64_t v38;

  v1 = *(_BYTE *)(v0 + 404);
  v2 = *(NSObject **)(v0 + 360);
  v4 = *(_QWORD *)(v0 + 232);
  v3 = *(uint64_t **)(v0 + 240);
  v5 = *(_QWORD *)(v0 + 216);
  v38 = *(_QWORD *)(v0 + 224);
  v6 = sub_1C0778598();
  *(_BYTE *)(v6 + 16) = v1;
  *(_QWORD *)(v6 + 24) = v5;
  swift_retain();
  MEMORY[0x1C3BA4538](sub_1C0806768, v6, 1);
  sub_1C07ACF80(&qword_1EF630AA8);
  sub_1C106DBE8();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C1078FC0;
  sub_1C106DC0C();
  sub_1C106DC0C();
  *v3 = v7;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v4 + 104))(v3, *MEMORY[0x1E0D3D5E8], v38);
  sub_1C106DC00();
  sub_1C106DBF4();
  v9 = v8;
  sub_1C106F190();
  v10 = v2;
  sub_1C106F538();
  v11 = sub_1C0784E0C();
  if (sub_1C077C10C(v11))
  {
    v12 = (uint8_t *)sub_1C0775854();
    *(_DWORD *)v12 = 134217984;
    *(double *)(v0 + 176) = v9;
    sub_1C10705AC();
    _os_log_impl(&dword_1C0771000, v2, (os_log_type_t)v2, "attendingEventConfidence = %f", v12, 0xCu);
    sub_1C0776778();
  }
  v13 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
  v14 = *(_QWORD *)(v0 + 360);
  v15 = *(_QWORD *)(v0 + 344);
  v17 = *(_QWORD *)(v0 + 304);
  v16 = *(_QWORD *)(v0 + 312);
  v18 = *(_QWORD *)(v0 + 296);

  v13(v14, v15);
  sub_1C07A225C(v18);
  sub_1C07A225C(v17);
  sub_1C07A225C(v16);
  if (v9 >= 0.6)
  {
    v23 = *(_QWORD *)(v0 + 336);
    v25 = *(_QWORD *)(v0 + 264);
    v24 = *(_QWORD *)(v0 + 272);
    v26 = *(_QWORD *)(v0 + 248);
    v27 = *(_QWORD *)(v0 + 256);
    v28 = *(_QWORD *)(v0 + 216);
    v29 = *(_QWORD *)(v0 + 184);
    v30 = v23 + *(int *)(v0 + 400);
    v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16);
    v31(v24, v23, v26);
    v31(v25, v30, v26);
    sub_1C07B1F90(v23, type metadata accessor for LOIBasedSegment);
    LOBYTE(v30) = *(_BYTE *)(v28 + 16);
    v33 = *(_QWORD *)(v28 + 104);
    v32 = *(_QWORD *)(v28 + 112);
    v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32);
    v34(v29, v24, v26);
    v35 = (int *)sub_1C079577C();
    v34(v29 + v35[5], v25, v26);
    *(_BYTE *)(v29 + v35[6]) = v30;
    *(double *)(v29 + v35[7]) = v9;
    v36 = (_QWORD *)(v29 + v35[8]);
    *v36 = v33;
    v36[1] = v32;
    sub_1C07B2D8C(v29, 0, 1, (uint64_t)v35);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 184);
    sub_1C07B1F90(*(_QWORD *)(v0 + 336), type metadata accessor for LOIBasedSegment);
    v20 = sub_1C079577C();
    sub_1C077A2C4(v19, v21, v22, v20);
  }
  sub_1C079E1E4();
  swift_task_dealloc();
  sub_1C07767BC();
  sub_1C07796F8();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C07767D4();
  sub_1C0778638();
  sub_1C0786388();
  sub_1C0779D20();
  sub_1C0786390();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1C08053F8(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  uint64_t inited;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  char *v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  Swift::String v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD v60[5];

  v57 = a3;
  v5 = sub_1C106F544();
  v54 = *(_QWORD *)(v5 - 8);
  v55 = v5;
  v6 = MEMORY[0x1E0C80A78](v5);
  v51 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v50 = (char *)&v50 - v8;
  v9 = sub_1C106ADE0();
  v56 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v50 - v13;
  v15 = *(void **)(a1 + 40);
  v52 = a1;
  v16 = *(_QWORD *)(a1 + 88);
  type metadata accessor for EventsFoundInAppsSignal();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v16;
  *(_QWORD *)(inited + 24) = v15;
  v19 = a2[3];
  v18 = a2[4];
  sub_1C07A9480(a2, v19);
  v20 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
  v21 = v15;
  swift_retain();
  v20(v19, v18);
  v22 = v57[3];
  v23 = v57[4];
  sub_1C07A9480(v57, v22);
  (*(void (**)(uint64_t, uint64_t))(v23 + 16))(v22, v23);
  v53 = inited;
  v24 = sub_1C09E8C34((uint64_t)v14, (unint64_t)v12);
  v25 = *(void (**)(char *, uint64_t))(v56 + 8);
  v25(v12, v9);
  v25(v14, v9);
  v26 = (void *)sub_1C089A990(0xD00000000000001DLL, 0x80000001C10E2FF0, v24);
  swift_bridgeObjectRelease();
  if (!v26)
  {
LABEL_13:
    v38 = v50;
    sub_1C106F190();
    v39 = sub_1C106F538();
    v40 = sub_1C10703A8();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v41 = 134217984;
      v60[0] = 0;
      sub_1C10705AC();
      _os_log_impl(&dword_1C0771000, v39, v40, "attendingEventConfidenceDueToFiA = %f", v41, 0xCu);
      MEMORY[0x1C3BA8270](v41, -1, -1);
    }

    swift_release();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v38, v55);
    return 0.0;
  }
  v27 = objc_msgSend(v26, sel_dictionaryValue);

  sub_1C07D4B70(0, (unint64_t *)&qword_1ED762C00);
  v28 = sub_1C106F940();

  v29 = *(_QWORD *)(v52 + 24);
  v30 = *(_QWORD *)(v29 + 16);
  v31 = 0.0;
  if (!v30)
  {
    v43 = v54;
    v42 = v55;
    v44 = v51;
    goto LABEL_21;
  }
  swift_bridgeObjectRetain_n();
  LODWORD(v57) = 0;
  v32 = 40;
  v33 = 1;
  while (1)
  {
    v34 = *(_QWORD *)(v29 + v32);
    v58 = *(_QWORD *)(v29 + v32 - 8);
    v59 = v34;
    swift_bridgeObjectRetain_n();
    sub_1C10706FC();
    if (!*(_QWORD *)(v28 + 16))
      break;
    sub_1C07DCBDC((uint64_t)v60);
    v36 = v35;
    sub_1C07DFA90((uint64_t)v60);
    swift_bridgeObjectRelease();
    if ((v36 & 1) == 0)
      goto LABEL_9;
    if (v30 == v33)
    {
      swift_bridgeObjectRelease_n();
      v43 = v54;
      v42 = v55;
      v44 = v51;
      goto LABEL_20;
    }
    LODWORD(v57) = 1;
LABEL_10:
    v32 += 16;
    if (__OFADD__(v33++, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
  }
  sub_1C07DFA90((uint64_t)v60);
  swift_bridgeObjectRelease();
LABEL_9:
  if (v30 != v33)
    goto LABEL_10;
  swift_bridgeObjectRelease_n();
  v43 = v54;
  v42 = v55;
  v44 = v51;
  if ((v57 & 1) == 0)
    goto LABEL_21;
LABEL_20:
  v45._object = (void *)0x80000001C10E3010;
  v45._countAndFlagsBits = 0xD000000000000014;
  v31 = ConfidenceService.confidence(source:signalType:)(v45, (Swift::String_optional)0);
LABEL_21:
  sub_1C106F190();
  v46 = sub_1C106F538();
  v47 = sub_1C10703A8();
  if (os_log_type_enabled(v46, v47))
  {
    v48 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v48 = 134217984;
    *(double *)v60 = v31;
    sub_1C10705AC();
    _os_log_impl(&dword_1C0771000, v46, v47, "attendingEventConfidenceDueToFiA = %f", v48, 0xCu);
    MEMORY[0x1C3BA8270](v48, -1, -1);
  }
  swift_release();
  swift_bridgeObjectRelease();

  (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v42);
  return v31;
}

uint64_t sub_1C0805924(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[35] = a2;
  v3[36] = v2;
  v3[34] = a1;
  v4 = sub_1C106F544();
  v3[37] = v4;
  v3[38] = *(_QWORD *)(v4 - 8);
  v3[39] = sub_1C0779644();
  sub_1C07ACF80(&qword_1EF630AB0);
  v3[40] = sub_1C0779644();
  v3[41] = sub_1C07ACF80(&qword_1ED74AF68);
  v3[42] = sub_1C0779644();
  v3[43] = type metadata accessor for WalletPassContent();
  v3[44] = sub_1C077CF7C();
  v3[45] = sub_1C0775870();
  v3[46] = sub_1C0775870();
  v3[47] = sub_1C0775870();
  v3[48] = sub_1C0775870();
  v3[49] = sub_1C0775870();
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  v3[50] = sub_1C077CF7C();
  v3[51] = sub_1C0775870();
  v5 = sub_1C106ADE0();
  v3[52] = v5;
  v3[53] = *(_QWORD *)(v5 - 8);
  v3[54] = sub_1C077CF7C();
  v3[55] = sub_1C0775870();
  v3[56] = sub_1C0775870();
  sub_1C07ACF80(&qword_1EF630AB8);
  v3[57] = sub_1C0779644();
  v3[58] = sub_1C07ACF80(&qword_1ED759DF0);
  v3[59] = sub_1C077CF7C();
  v3[60] = sub_1C0775870();
  v3[61] = sub_1C07ACF80(&qword_1ED75D0B8);
  v3[62] = sub_1C077CF7C();
  v3[63] = sub_1C0775870();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0805A90()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0[36];
  sub_1C0784AC0(v1 + 48, (uint64_t)(v0 + 16));
  v2 = *(_QWORD *)(v1 + 88);
  v3 = objc_allocWithZone(MEMORY[0x1E0D672B0]);
  swift_retain();
  v4 = objc_msgSend(v3, sel_init);
  type metadata accessor for PassKitSignal();
  inited = swift_initStackObject();
  v0[64] = inited;
  v6 = v0[19];
  v7 = v0[20];
  v8 = sub_1C079D180((uint64_t)(v0 + 16), v6);
  v9 = *(_QWORD *)(v6 - 8);
  v10 = swift_task_alloc();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v10, v8, v6);
  v0[65] = sub_1C0C810D4(v10, (uint64_t)v4, v2, inited, v6, v7);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)(v0 + 16));
  sub_1C0779D18();
  sub_1C07D65AC();
  result = sub_1C106FA84();
  if ((result & 1) != 0)
  {
    v12 = v0[62];
    v27 = v0[63];
    v13 = v0[60];
    v26 = v0[61];
    v14 = v0[58];
    v15 = v0[59];
    v17 = v0[52];
    v16 = (_QWORD *)v0[53];
    v18 = v0[34];
    v19 = v0[35];
    v20 = v13 + *(int *)(v14 + 48);
    v0[66] = v16[2];
    sub_1C079A758(v13, v18);
    sub_1C079A758(v20, v19);
    v21 = v15 + *(int *)(v14 + 48);
    sub_1C079A758(v15, v13);
    sub_1C079A758(v21, v20);
    v0[67] = v16[4];
    sub_1C079A758(v12, v15);
    v22 = (void (*)(uint64_t, uint64_t))v16[1];
    v0[68] = v22;
    v22(v21, v17);
    v23 = v15 + *(int *)(v14 + 48);
    sub_1C079A758(v15, v13);
    sub_1C079A758(v23, v20);
    sub_1C079A758(v12 + *(int *)(v26 + 36), v23);
    v22(v15, v17);
    sub_1C078A650(v12, v27, &qword_1ED75D0B8);
    sub_1C0C7EE2C(v27, v0 + 31);
    sub_1C0784B6C(v0[63], &qword_1ED75D0B8);
    v24 = v0[31];
    v25 = v0[32];
    v0[69] = v24;
    v0[70] = *(_QWORD *)(v24 + 16);
    v0[71] = v25;
    sub_1C077862C();
    return sub_1C07ADA44();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1C0805EB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;

  v4 = *(_QWORD *)(v3 + 568);
  if ((int64_t)v4 >= *(_QWORD *)(v3 + 560))
  {
    sub_1C077A2C4(*(_QWORD *)(v3 + 456), a2, a3, *(_QWORD *)(v3 + 328));
    v8 = *(_QWORD *)(v3 + 568);
LABEL_16:
    *(_QWORD *)(v3 + 576) = v8;
    sub_1C077862C();
    swift_task_switch();
    return;
  }
  if ((v4 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v5 = *(_QWORD *)(v3 + 552);
    if (v4 < *(_QWORD *)(v5 + 16))
    {
      v7 = *(_QWORD *)(v3 + 408);
      v6 = *(_QWORD *)(v3 + 416);
      sub_1C0784AC0(v5 + 40 * v4 + 32, v3 + 168);
      v8 = v4 + 1;
      sub_1C07A9480((_QWORD *)(v3 + 168), *(_QWORD *)(v3 + 192));
      sub_1C07758AC();
      if (sub_1C07B2D80(v7, 1, v6) == 1)
      {
        v9 = *(_QWORD *)(v3 + 456);
        v10 = *(_QWORD *)(v3 + 328);
        sub_1C0784B6C(*(_QWORD *)(v3 + 408), (uint64_t *)&unk_1ED762690);
        sub_1C07B2D8C(v9, 1, 1, v10);
        v11 = v3 + 168;
      }
      else
      {
        v12 = *(_QWORD *)(v3 + 440);
        v13 = *(_QWORD *)(v3 + 432);
        v14 = *(_QWORD *)(v3 + 416);
        v37 = *(_QWORD *)(v3 + 400);
        v15 = *(_QWORD *)(v3 + 384);
        v35 = *(_QWORD *)(v3 + 344);
        (*(void (**)(_QWORD, _QWORD, uint64_t))(v3 + 536))(*(_QWORD *)(v3 + 448), *(_QWORD *)(v3 + 408), v14);
        sub_1C0778640(v12);
        sub_1C0778640(v13);
        sub_1C0784AC0(v3 + 168, v3 + 208);
        sub_1C07B2D8C(v15, 1, 1, v14);
        v16 = *(int *)(v35 + 20);
        *(_BYTE *)(v15 + v16) = 3;
        sub_1C07878B0();
        sub_1C07758AC();
        sub_1C0806880(v37, v15);
        sub_1C07878B0();
        v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 32))(v12, v13);
        if (v17 == 1)
          v18 = 1;
        else
          v18 = 2;
        if (!v17)
          v18 = 0;
        *(_BYTE *)(v15 + v16) = v18;
        sub_1C07878B0();
        v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 56))(v12, v13);
        v20 = (uint64_t *)(v15 + *(int *)(v35 + 24));
        *v20 = v19;
        v20[1] = v21;
        v22 = *(_QWORD *)(v3 + 232);
        v23 = *(_QWORD *)(v3 + 240);
        sub_1C07A9480((_QWORD *)(v3 + 208), v22);
        v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 64))(v22, v23);
        v25 = 9;
        if (v24 < 9)
          v25 = v24;
        v38 = v4 + 1;
        v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 536);
        v28 = *(_QWORD *)(v3 + 448);
        v27 = *(_QWORD *)(v3 + 456);
        v29 = *(_QWORD *)(v3 + 440);
        v34 = *(void (**)(uint64_t, uint64_t))(v3 + 544);
        v36 = *(_QWORD *)(v3 + 432);
        v30 = *(_QWORD *)(v3 + 416);
        v32 = *(_QWORD *)(v3 + 384);
        v31 = *(_QWORD *)(v3 + 392);
        v33 = *(_QWORD *)(v3 + 328);
        *(_BYTE *)(v32 + *(int *)(*(_QWORD *)(v3 + 344) + 28)) = v25;
        sub_1C0806810(v32, v31);
        _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v3 + 208);
        sub_1C07B1F90(v32, (uint64_t (*)(_QWORD))type metadata accessor for WalletPassContent);
        v34(v28, v30);
        v26(v27, v29, v30);
        v26(v27 + *(int *)(v33 + 28), v36, v30);
        v8 = v38;
        sub_1C0806854(v31, v27 + *(int *)(v33 + 32), (uint64_t (*)(_QWORD))type metadata accessor for WalletPassContent);
        sub_1C07B2D8C(v27, 0, 1, v33);
        v11 = v3 + 168;
      }
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v11);
      goto LABEL_16;
    }
  }
  __break(1u);
}

uint64_t sub_1C08061A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  int v21;

  v1 = *(_QWORD *)(v0 + 456);
  v2 = *(_QWORD *)(v0 + 328);
  v3 = sub_1C07B2D80(v1, 1, v2);
  if (v3 == 1)
    goto LABEL_14;
  v4 = *(_QWORD *)(v0 + 368);
  v5 = *(_QWORD *)(v0 + 336);
  sub_1C078A650(v1, v5, &qword_1ED74AF68);
  sub_1C0806810(v5 + *(int *)(v2 + 32), v4);
  sub_1C0784B6C(v5, &qword_1ED74AF68);
  if (!sub_1C0779700())
  {
    v15 = sub_1C077A2C4(*(_QWORD *)(v0 + 320), v6, v7, *(_QWORD *)(v0 + 344));
    sub_1C077C790(v15, &qword_1EF630AB0);
LABEL_8:
    *(_QWORD *)(v0 + 568) = *(_QWORD *)(v0 + 576);
    sub_1C077862C();
    return sub_1C07ADA44();
  }
  v8 = *(_QWORD *)(v0 + 376);
  v9 = *(_QWORD *)(v0 + 344);
  v10 = sub_1C0796F5C();
  sub_1C079F2EC(v10, v11, (uint64_t (*)(_QWORD))type metadata accessor for WalletPassContent);
  v12 = *(unsigned __int8 *)(v8 + *(int *)(v9 + 20));
  v13 = *(_QWORD *)(v0 + 376);
  v14 = *(_QWORD *)(v0 + 360);
  if (v12 == 3)
  {
    sub_1C0806854(v13, v14, (uint64_t (*)(_QWORD))type metadata accessor for WalletPassContent);
LABEL_7:
    sub_1C07B1F90(*(_QWORD *)(v0 + 360), (uint64_t (*)(_QWORD))type metadata accessor for WalletPassContent);
    goto LABEL_8;
  }
  sub_1C0806854(v13, v14, (uint64_t (*)(_QWORD))type metadata accessor for WalletPassContent);
  if (v12)
    goto LABEL_7;
  v18 = *(_QWORD *)(v0 + 352);
  v17 = *(_QWORD *)(v0 + 360);
  v19 = *(unsigned __int8 *)(v17 + *(int *)(*(_QWORD *)(v0 + 344) + 28));
  if (v19 == 10)
  {
    sub_1C0806854(v17, v18, (uint64_t (*)(_QWORD))type metadata accessor for WalletPassContent);
  }
  else
  {
    sub_1C0806854(v17, v18, (uint64_t (*)(_QWORD))type metadata accessor for WalletPassContent);
    if (v19 == 2)
    {
      sub_1C07B1F90(*(_QWORD *)(v0 + 352), (uint64_t (*)(_QWORD))type metadata accessor for WalletPassContent);
      goto LABEL_14;
    }
  }
  v20 = *(_QWORD *)(v0 + 352);
  v21 = *(unsigned __int8 *)(v20 + *(int *)(*(_QWORD *)(v0 + 344) + 28));
  sub_1C07B1F90(v20, (uint64_t (*)(_QWORD))type metadata accessor for WalletPassContent);
  if (v21 != 3)
    goto LABEL_8;
LABEL_14:
  swift_bridgeObjectRelease();
  swift_release();
  sub_1C07996D4();
  sub_1C0786388();
  sub_1C0779D20();
  sub_1C07767BC();
  sub_1C07796F8();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C07767D4();
  sub_1C0778638();
  sub_1C0786390();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return sub_1C07A36F4(v3 != 1, *(uint64_t (**)(void))(v0 + 8));
}

double sub_1C08063FC(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  double v6;
  Swift::String v7;
  Swift::String_optional v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  _QWORD v13[2];

  v2 = sub_1C106F544();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = 0.0;
  if ((a1 & 1) != 0)
  {
    v7._countAndFlagsBits = 0x74694B73736150;
    v7._object = (void *)0xE700000000000000;
    v8.value._countAndFlagsBits = 0x726568746FLL;
    v8.value._object = (void *)0xE500000000000000;
    v6 = ConfidenceService.confidence(source:signalType:)(v7, v8);
  }
  sub_1C106F190();
  v9 = sub_1C106F538();
  v10 = sub_1C10703A8();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v11 = 134217984;
    *(double *)&v13[1] = v6;
    sub_1C10705AC();
    _os_log_impl(&dword_1C0771000, v9, v10, "eventConfidenceDueToBoardingPass = %f", v11, 0xCu);
    MEMORY[0x1C3BA8270](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v6;
}

uint64_t sub_1C0806568()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 48);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C08065B4()
{
  sub_1C0806568();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AttendingEventActivityModel()
{
  return objc_opt_self();
}

uint64_t sub_1C08065F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1C0806670;
  return sub_1C0804C24(a1, a2, a3, a4);
}

uint64_t sub_1C0806670()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1C08066B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1ED74AB38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0806700()
{
  uint64_t v0;

  swift_release();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 24);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 64);
  return swift_deallocObject();
}

double sub_1C0806734()
{
  uint64_t *v0;

  return sub_1C08053F8(v0[2], v0 + 3, v0 + 8);
}

uint64_t sub_1C0806744()
{
  swift_release();
  return swift_deallocObject();
}

double sub_1C0806768()
{
  uint64_t v0;

  return sub_1C08063FC(*(_BYTE *)(v0 + 16));
}

uint64_t sub_1C0806774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(_QWORD *)(a5 + 72) = sub_1C07D4B70(0, &qword_1ED74D328);
  *(_QWORD *)(a5 + 80) = &off_1E7A27C58;
  *(_BYTE *)(a5 + 16) = 2;
  *(_QWORD *)(a5 + 24) = &unk_1E79FBAE0;
  *(_QWORD *)(a5 + 32) = &unk_1E79FBB30;
  *(_QWORD *)(a5 + 104) = 0x302E302E31;
  *(_QWORD *)(a5 + 112) = 0xE500000000000000;
  *(_QWORD *)(a5 + 40) = a1;
  *(_QWORD *)(a5 + 48) = a2;
  *(_QWORD *)(a5 + 88) = a4;
  *(_QWORD *)(a5 + 96) = a3;
  return a5;
}

uint64_t sub_1C0806810(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WalletPassContent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C0806854(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = a3(0);
  sub_1C0782950(v3);
  sub_1C0778534();
}

uint64_t sub_1C0806880(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C08068C8(unint64_t result)
{
  if (result >= 4)
    return 4;
  return result;
}

unint64_t sub_1C08068D8@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1C08068C8(*a1);
  *a2 = result;
  return result;
}

BOOL sub_1C0806900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return a1 == a5 && a2 == a6 && a3 == a7 && a4 == a8;
}

BOOL sub_1C0806918(uint64_t *a1, uint64_t *a2)
{
  return sub_1C0806900(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

void sub_1C0806934()
{
  void *v0;

  v0 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C080697C();
  objc_autoreleasePoolPop(v0);
}

_QWORD *sub_1C080697C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *result;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  int64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  float v38;
  id v39;
  double v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;

  v1 = sub_1C106F544();
  v50 = *(_QWORD *)(v1 - 8);
  v51 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v48 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend((id)BiomeLibrary(), sel_Photos);
  swift_unknownObjectRelease();
  v5 = objc_msgSend(v4, sel_AutonamingSuggestions);
  swift_unknownObjectRelease();
  v6 = objc_msgSend(v5, sel_Feedback);
  swift_unknownObjectRelease();
  v49 = v6;
  v7 = sub_1C08070B0(v6);
  v9 = sub_1C08073F0(v8);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_retain();
  sub_1C0807AF4(v7, v9);
  swift_beginAccess();
  swift_retain();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0807CA0();
  v48 = v0;
  swift_bridgeObjectRelease();
  v55 = MEMORY[0x1E0DEE9E0];
  if (!v9)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v35 = v55;
    goto LABEL_56;
  }
  sub_1C0861BD0(&v56);
  v10 = 0;
  result = v56;
  v12 = v59;
  v13 = v60;
  v14 = (unint64_t)(v58 + 64) >> 6;
  do
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v12 << 6);
    }
    else
    {
      v17 = v12 + 1;
      if (__OFADD__(v12, 1))
      {
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
        return result;
      }
      if (v17 >= v14)
        goto LABEL_26;
      v18 = *(_QWORD *)(v57 + 8 * v17);
      v19 = v12 + 1;
      if (!v18)
      {
        v19 = v12 + 2;
        if (v12 + 2 >= v14)
          goto LABEL_26;
        v18 = *(_QWORD *)(v57 + 8 * v19);
        if (!v18)
        {
          v19 = v12 + 3;
          if (v12 + 3 >= v14)
            goto LABEL_26;
          v18 = *(_QWORD *)(v57 + 8 * v19);
          if (!v18)
          {
            v19 = v12 + 4;
            if (v12 + 4 >= v14)
              goto LABEL_26;
            v18 = *(_QWORD *)(v57 + 8 * v19);
            if (!v18)
            {
              v19 = v12 + 5;
              if (v12 + 5 >= v14)
                goto LABEL_26;
              v18 = *(_QWORD *)(v57 + 8 * v19);
              if (!v18)
              {
                v19 = v12 + 6;
                if (v12 + 6 >= v14)
                  goto LABEL_26;
                v18 = *(_QWORD *)(v57 + 8 * v19);
                if (!v18)
                {
                  v20 = v12 + 7;
                  do
                  {
                    if (v20 >= v14)
                      goto LABEL_26;
                    v18 = *(_QWORD *)(v57 + 8 * v20++);
                  }
                  while (!v18);
                  v19 = v20 - 1;
                }
              }
            }
          }
        }
      }
      v13 = (v18 - 1) & v18;
      v16 = __clz(__rbit64(v18)) + (v19 << 6);
      v12 = v19;
    }
    v21 = *(_QWORD *)(v56[7] + 8 * v16);
    v22 = __OFADD__(v10, v21);
    v10 += v21;
  }
  while (!v22);
  __break(1u);
LABEL_26:
  swift_release();
  result = sub_1C0861BD0(&v61);
  v23 = 0;
  v24 = v64;
  v25 = v65;
  v26 = (unint64_t)(v63 + 64) >> 6;
  while (2)
  {
    if (v25)
    {
      v27 = __clz(__rbit64(v25));
      v25 &= v25 - 1;
      v28 = v27 | (v24 << 6);
      goto LABEL_47;
    }
    v29 = v24 + 1;
    if (__OFADD__(v24, 1))
      goto LABEL_60;
    if (v29 >= v26)
      goto LABEL_50;
    v30 = *(_QWORD *)(v62 + 8 * v29);
    v31 = v24 + 1;
    if (v30)
      goto LABEL_46;
    v31 = v24 + 2;
    if (v24 + 2 >= v26)
      goto LABEL_50;
    v30 = *(_QWORD *)(v62 + 8 * v31);
    if (v30)
      goto LABEL_46;
    v31 = v24 + 3;
    if (v24 + 3 >= v26)
      goto LABEL_50;
    v30 = *(_QWORD *)(v62 + 8 * v31);
    if (v30)
      goto LABEL_46;
    v31 = v24 + 4;
    if (v24 + 4 >= v26)
      goto LABEL_50;
    v30 = *(_QWORD *)(v62 + 8 * v31);
    if (v30)
      goto LABEL_46;
    v31 = v24 + 5;
    if (v24 + 5 >= v26)
      goto LABEL_50;
    v30 = *(_QWORD *)(v62 + 8 * v31);
    if (v30)
      goto LABEL_46;
    v31 = v24 + 6;
    if (v24 + 6 >= v26)
      goto LABEL_50;
    v30 = *(_QWORD *)(v62 + 8 * v31);
    if (v30)
    {
LABEL_46:
      v25 = (v30 - 1) & v30;
      v28 = __clz(__rbit64(v30)) + (v31 << 6);
      v24 = v31;
LABEL_47:
      v33 = *(_QWORD *)(*(_QWORD *)(v61 + 56) + 32 * v28 + 24);
      v22 = __OFADD__(v23, v33);
      v23 += v33;
      if (v22)
      {
        __break(1u);
        goto LABEL_50;
      }
      continue;
    }
    break;
  }
  v32 = v24 + 7;
  while (v32 < v26)
  {
    v30 = *(_QWORD *)(v62 + 8 * v32++);
    if (v30)
    {
      v31 = v32 - 1;
      goto LABEL_46;
    }
  }
LABEL_50:
  swift_bridgeObjectRelease();
  result = (_QWORD *)swift_release();
  if (__OFADD__(v10, v23))
    goto LABEL_61;
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v10 + v23);
  v34 = v55;
  swift_isUniquelyReferenced_nonNull_native();
  v53 = v34;
  sub_1C077BF98();
  v35 = v53;
  swift_bridgeObjectRelease();
  result = (_QWORD *)sub_1C08081C0();
  if ((v36 & 1) != 0)
    goto LABEL_56;
  v37 = (uint64_t)result + v10;
  if (__OFADD__(v10, result))
    goto LABEL_62;
  if (v37 >= 1)
  {
    v38 = (float)v10 / (float)v37;
    v39 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
    *(float *)&v40 = v38;
    objc_msgSend(v39, sel_initWithFloat_, v40);
    swift_isUniquelyReferenced_nonNull_native();
    v53 = v35;
    sub_1C077BF98();
    v35 = v53;
    swift_bridgeObjectRelease();
  }
LABEL_56:
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, 5);
  swift_isUniquelyReferenced_nonNull_native();
  v53 = v35;
  sub_1C077BF98();
  v55 = v53;
  swift_bridgeObjectRelease();
  sub_1C106F244();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106F22C();
  swift_bridgeObjectRelease();
  sub_1C106F148();
  v41 = sub_1C106F538();
  v42 = sub_1C1070384();
  if (os_log_type_enabled(v41, v42))
  {
    v43 = swift_slowAlloc();
    v44 = swift_slowAlloc();
    v54 = v44;
    *(_DWORD *)v43 = 136315395;
    v53 = sub_1C0788DAC(0xD00000000000001ALL, 0x80000001C10E3080, &v54);
    sub_1C10705AC();
    *(_WORD *)(v43 + 12) = 2081;
    swift_beginAccess();
    sub_1C077CA90();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v45 = sub_1C106F94C();
    v47 = v46;
    swift_bridgeObjectRelease();
    v52 = sub_1C0788DAC(v45, v47, &v54);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0771000, v41, v42, "Autonaming service sent CA event:%s, payload: %{private}s", (uint8_t *)v43, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3BA8270](v44, -1, -1);
    MEMORY[0x1C3BA8270](v43, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v50 + 8))(v3, v51);
  return (_QWORD *)swift_bridgeObjectRelease();
}

uint64_t sub_1C08070B0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  void *v20;
  _QWORD *v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(_QWORD);
  _QWORD *v30;

  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v4);
  sub_1C07BC5C0();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v26 - v6;
  v8 = sub_1C106ADE0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  sub_1C077864C();
  v10 = sub_1C0780678();
  *(_QWORD *)(v10 + 16) = MEMORY[0x1E0DEE9E8];
  v11 = sub_1C0780678();
  *(_QWORD *)(v11 + 16) = MEMORY[0x1E0DEE9E0];
  v12 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C106AD68();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v7, v2, v8);
  sub_1C078C780((uint64_t)v7, 0);
  sub_1C078C780(v1, 1);
  v13 = objc_allocWithZone(MEMORY[0x1E0D026F0]);
  v14 = sub_1C07DC9F8((uint64_t)v7, v1, 0, 0, 0);
  v15 = objc_msgSend(a1, sel_publisherWithOptions_, v14);

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v2, v8);
  objc_autoreleasePoolPop(v12);
  v16 = sub_1C0780678();
  *(_QWORD *)(v16 + 16) = MEMORY[0x1E0DEE9E8];
  v29 = (uint64_t (*)(_QWORD))sub_1C08084CC;
  v30 = 0;
  v17 = MEMORY[0x1E0C809B0];
  v27 = MEMORY[0x1E0C809B0];
  v28 = 1107296256;
  v18 = sub_1C07A4368((uint64_t)sub_1C0808508);
  v19 = objc_msgSend(v15, sel_filterWithIsIncluded_, v18);
  _Block_release(v18);
  v29 = nullsub_1;
  v30 = 0;
  v27 = v17;
  v28 = 1107296256;
  v20 = sub_1C07A4368((uint64_t)sub_1C07BF90C);
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = v11;
  v21[3] = v10;
  v21[4] = v16;
  v29 = (uint64_t (*)(_QWORD))sub_1C080AD10;
  v30 = v21;
  v27 = v17;
  v28 = 1107296256;
  v22 = sub_1C07A4368((uint64_t)sub_1C0779530);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  v23 = objc_msgSend(v19, sel_sinkWithCompletion_receiveInput_, v20, v22);

  _Block_release(v22);
  _Block_release(v20);

  sub_1C0775864();
  v24 = *(_QWORD *)(v11 + 16);
  sub_1C0775864();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_release();
  swift_release();
  sub_1C07785A8();
  return v24;
}

uint64_t sub_1C08073F0(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  void *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1C106F544();
  sub_1C079FCAC();
  MEMORY[0x1E0C80A78](v3);
  sub_1C07A434C();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v4);
  sub_1C0780A08();
  sub_1C079CBBC(v5, OBJC_IVAR____TtC24IntelligencePlatformCore31AutonamingFeedbackCAEventLogger_config);
  type metadata accessor for GraphStore();
  sub_1C077B5BC();
  sub_1C07A5B7C();
  if (v1)
  {
    sub_1C106F148();
    v6 = (void *)sub_1C106F538();
    v7 = sub_1C1070390();
    if (sub_1C077AF00(v7))
    {
      *(_WORD *)sub_1C0780FC8() = 0;
      sub_1C0798520(&dword_1C0771000, v8, v9, "Error accessing graph store for numUniqueSuggestionsInKG.");
      sub_1C0797BB4();
    }

    sub_1C07919CC();
    return 0;
  }
  else
  {
    v10 = sub_1C0808BC0(a1);
    sub_1C07785A8();
  }
  return v10;
}

uint64_t sub_1C08074F8(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  NSObject *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = sub_1C106F544();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *a1;
  sub_1C106F244();
  sub_1C106F22C();
  sub_1C106F148();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v7 = sub_1C106F538();
  v8 = sub_1C1070384();
  if (os_log_type_enabled(v7, (os_log_type_t)v8))
  {
    v15 = v8;
    v16 = v4;
    v17 = v3;
    v18 = v1;
    v9 = swift_slowAlloc();
    v14 = swift_slowAlloc();
    v22 = v14;
    *(_DWORD *)v9 = 136315651;
    v21 = sub_1C0788DAC(0xD00000000000001ALL, 0x80000001C10E3080, &v22);
    sub_1C10705AC();
    *(_WORD *)(v9 + 12) = 2081;
    swift_beginAccess();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C07ACF80(&qword_1ED7480E0);
    sub_1C080AC38();
    v10 = sub_1C106F94C();
    v12 = v11;
    swift_bridgeObjectRelease();
    v20 = sub_1C0788DAC(v10, v12, &v22);
    sub_1C10705AC();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 22) = 2080;
    __asm { BR              X9 }
  }

  swift_bridgeObjectRelease_n();
  swift_release_n();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_1C0807894(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  int64_t v22;
  _QWORD *v23;
  _QWORD v24[5];
  uint64_t v25;

  v25 = a3;
  v23 = a2;
  v4 = sub_1C07ACF80(qword_1ED747AA8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v21 - v8;
  sub_1C0861BD0(v24);
  v10 = v24[0];
  v11 = v24[3];
  v12 = v24[4];
  v21 = v24[1];
  v22 = (unint64_t)(v24[2] + 64) >> 6;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  while (1)
  {
    if (v12)
    {
      v13 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_15;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v15 >= v22)
      goto LABEL_23;
    v16 = *(_QWORD *)(v21 + 8 * v15);
    if (!v16)
    {
      v17 = v11 + 2;
      if (v11 + 2 >= v22)
        goto LABEL_23;
      v16 = *(_QWORD *)(v21 + 8 * v17);
      if (v16)
        goto LABEL_13;
      v17 = v11 + 3;
      if (v11 + 3 >= v22)
        goto LABEL_23;
      v16 = *(_QWORD *)(v21 + 8 * v17);
      if (v16)
        goto LABEL_13;
      v17 = v11 + 4;
      if (v11 + 4 >= v22)
        goto LABEL_23;
      v16 = *(_QWORD *)(v21 + 8 * v17);
      if (v16)
      {
LABEL_13:
        v15 = v17;
      }
      else
      {
        v15 = v11 + 5;
        if (v11 + 5 >= v22)
          goto LABEL_23;
        v16 = *(_QWORD *)(v21 + 8 * v15);
        if (!v16)
        {
          v20 = v11 + 6;
          while (v20 < v22)
          {
            v16 = *(_QWORD *)(v21 + 8 * v20++);
            if (v16)
            {
              v15 = v20 - 1;
              goto LABEL_14;
            }
          }
LABEL_23:
          swift_bridgeObjectRelease();
          swift_release();
          return;
        }
      }
    }
LABEL_14:
    v12 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v15 << 6);
    v11 = v15;
LABEL_15:
    v18 = *(_QWORD *)(v10 + 48);
    v19 = sub_1C106E590();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v9, v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v14, v19);
    *(_QWORD *)&v9[*(int *)(v4 + 48)] = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v14);
    sub_1C080AD78((uint64_t)v9, (uint64_t)v6, qword_1ED747AA8);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0809278((uint64_t)v6, v23, v25);
    sub_1C0784B6C((uint64_t)v6, qword_1ED747AA8);
    if (v3)
      goto LABEL_23;
  }
  __break(1u);
}

uint64_t sub_1C0807AF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  char v15;
  __int128 *v16;
  __int128 v17;
  int64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  _QWORD v22[5];

  sub_1C0861BD0(v22);
  v4 = v22[0];
  v5 = v22[1];
  v6 = v22[3];
  v7 = v22[4];
  v8 = (unint64_t)(v22[2] + 64) >> 6;
  result = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  while (1)
  {
    if (v7)
    {
      v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v11 = v10 | (v6 << 6);
      goto LABEL_15;
    }
    v12 = v6 + 1;
    if (__OFADD__(v6, 1))
      break;
    if (v12 >= v8)
      goto LABEL_23;
    v13 = *(_QWORD *)(v5 + 8 * v12);
    if (!v13)
    {
      v14 = v6 + 2;
      if (v6 + 2 >= v8)
        goto LABEL_23;
      v13 = *(_QWORD *)(v5 + 8 * v14);
      if (v13)
        goto LABEL_13;
      v14 = v6 + 3;
      if (v6 + 3 >= v8)
        goto LABEL_23;
      v13 = *(_QWORD *)(v5 + 8 * v14);
      if (v13)
        goto LABEL_13;
      v14 = v6 + 4;
      if (v6 + 4 >= v8)
        goto LABEL_23;
      v13 = *(_QWORD *)(v5 + 8 * v14);
      if (v13)
      {
LABEL_13:
        v12 = v14;
      }
      else
      {
        v12 = v6 + 5;
        if (v6 + 5 >= v8)
          goto LABEL_23;
        v13 = *(_QWORD *)(v5 + 8 * v12);
        if (!v13)
        {
          v18 = v6 + 6;
          while (v18 < v8)
          {
            v13 = *(_QWORD *)(v5 + 8 * v18++);
            if (v13)
            {
              v12 = v18 - 1;
              goto LABEL_14;
            }
          }
LABEL_23:
          swift_release();
          swift_bridgeObjectRelease();
          return swift_release();
        }
      }
    }
LABEL_14:
    v7 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v12 << 6);
    v6 = v12;
LABEL_15:
    v15 = *(_BYTE *)(*(_QWORD *)(v4 + 48) + v11);
    v16 = (__int128 *)(*(_QWORD *)(v4 + 56) + 32 * v11);
    LOBYTE(v19) = v15;
    v17 = v16[1];
    v20 = *v16;
    v21 = v17;
    result = sub_1C08088F8(&v19, a2);
    if (v2)
    {
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0807CA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  unint64_t v4;
  int64_t v5;
  uint64_t result;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  unsigned __int8 v14[8];
  uint64_t v15;
  _QWORD v16[5];

  sub_1C0861BD0(v16);
  v1 = v16[0];
  v2 = v16[1];
  v3 = v16[3];
  v4 = v16[4];
  v5 = (unint64_t)(v16[2] + 64) >> 6;
  result = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  if (!v4)
    goto LABEL_3;
LABEL_2:
  v7 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  v8 = v7 | (v3 << 6);
  while (1)
  {
    v12 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v8);
    v14[0] = *(_BYTE *)(*(_QWORD *)(v1 + 48) + v8);
    v15 = v12;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C08074F8(v14);
    if (v0)
    {
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    result = swift_bridgeObjectRelease();
    if (v4)
      goto LABEL_2;
LABEL_3:
    v9 = v3 + 1;
    if (__OFADD__(v3, 1))
      break;
    if (v9 >= v5)
      goto LABEL_24;
    v10 = *(_QWORD *)(v2 + 8 * v9);
    if (!v10)
    {
      v11 = v3 + 2;
      if (v3 + 2 >= v5)
        goto LABEL_24;
      v10 = *(_QWORD *)(v2 + 8 * v11);
      if (v10)
        goto LABEL_12;
      v11 = v3 + 3;
      if (v3 + 3 >= v5)
        goto LABEL_24;
      v10 = *(_QWORD *)(v2 + 8 * v11);
      if (v10)
        goto LABEL_12;
      v11 = v3 + 4;
      if (v3 + 4 >= v5)
        goto LABEL_24;
      v10 = *(_QWORD *)(v2 + 8 * v11);
      if (v10)
      {
LABEL_12:
        v9 = v11;
      }
      else
      {
        v9 = v3 + 5;
        if (v3 + 5 >= v5)
          goto LABEL_24;
        v10 = *(_QWORD *)(v2 + 8 * v9);
        if (!v10)
        {
          v13 = v3 + 6;
          while (v13 < v5)
          {
            v10 = *(_QWORD *)(v2 + 8 * v13++);
            if (v10)
            {
              v9 = v13 - 1;
              goto LABEL_13;
            }
          }
LABEL_24:
          swift_release();
          return swift_release();
        }
      }
    }
LABEL_13:
    v4 = (v10 - 1) & v10;
    v8 = __clz(__rbit64(v10)) + (v9 << 6);
    v3 = v9;
  }
  __break(1u);
  return result;
}

void sub_1C0807E50(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int16 v28;
  __int16 v29;
  _QWORD *v30;
  uint64_t v31;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  int64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  _QWORD v46[5];
  uint64_t v47;

  v39 = a2;
  v43 = sub_1C07ACF80(&qword_1EF630AD8);
  MEMORY[0x1E0C80A78](v43);
  v42 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v47 = (uint64_t)&v37 - v4;
  MEMORY[0x1E0C80A78](v5);
  v41 = (char *)&v37 - v6;
  sub_1C0861BD0(v46);
  v38 = v46[1];
  v44 = v46[0];
  v45 = v46[3];
  v7 = v46[4];
  v40 = (unint64_t)(v46[2] + 64) >> 6;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  if (!v7)
    goto LABEL_3;
LABEL_2:
  v8 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  v9 = v8 | (v45 << 6);
  while (1)
  {
    v14 = v44;
    v15 = *(_QWORD *)(v44 + 48);
    v16 = sub_1C106EB24();
    v17 = *(_QWORD *)(v16 - 8);
    v18 = v15 + *(_QWORD *)(v17 + 72) * v9;
    v19 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
    v20 = (uint64_t)v41;
    v19(v41, v18, v16);
    v21 = v43;
    *(_QWORD *)(v20 + *(int *)(v43 + 48)) = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v9);
    v22 = v47;
    sub_1C080AD78(v20, v47, &qword_1EF630AD8);
    v23 = *(int *)(v21 + 48);
    v24 = v42;
    v19(v42, v22, v16);
    *(_QWORD *)&v24[v23] = *(_QWORD *)(v22 + v23);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v25 = sub_1C080A598();
    v27 = v26;
    v29 = v28;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v24, v16);
    if (v27)
    {
      v30 = v39;
      v31 = *v39;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v30 = v31;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1C07EB790();
        v31 = v35;
        *v39 = v35;
      }
      v33 = *(_QWORD *)(v31 + 16);
      if (v33 >= *(_QWORD *)(v31 + 24) >> 1)
      {
        sub_1C07EB790();
        v31 = v36;
        *v39 = v36;
      }
      *(_QWORD *)(v31 + 16) = v33 + 1;
      v34 = v31 + 24 * v33;
      *(_QWORD *)(v34 + 32) = v25;
      *(_QWORD *)(v34 + 40) = v27;
      *(_BYTE *)(v34 + 48) = v29;
      *(_BYTE *)(v34 + 49) = HIBYTE(v29) & 1;
    }
    sub_1C0784B6C(v47, &qword_1EF630AD8);
    if (v7)
      goto LABEL_2;
LABEL_3:
    v10 = v45 + 1;
    if (__OFADD__(v45, 1))
      break;
    if (v10 >= v40)
      goto LABEL_27;
    v11 = *(_QWORD *)(v38 + 8 * v10);
    v12 = v45 + 1;
    if (!v11)
    {
      v12 = v45 + 2;
      if (v45 + 2 >= v40)
        goto LABEL_27;
      v11 = *(_QWORD *)(v38 + 8 * v12);
      if (!v11)
      {
        v12 = v45 + 3;
        if (v45 + 3 >= v40)
          goto LABEL_27;
        v11 = *(_QWORD *)(v38 + 8 * v12);
        if (!v11)
        {
          v12 = v45 + 4;
          if (v45 + 4 >= v40)
            goto LABEL_27;
          v11 = *(_QWORD *)(v38 + 8 * v12);
          if (!v11)
          {
            v12 = v45 + 5;
            if (v45 + 5 >= v40)
              goto LABEL_27;
            v11 = *(_QWORD *)(v38 + 8 * v12);
            if (!v11)
            {
              v13 = v45 + 6;
              while (v13 < v40)
              {
                v11 = *(_QWORD *)(v38 + 8 * v13++);
                if (v11)
                {
                  v12 = v13 - 1;
                  goto LABEL_18;
                }
              }
LABEL_27:
              swift_release();
              return;
            }
          }
        }
      }
    }
LABEL_18:
    v7 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v12 << 6);
    v45 = v12;
  }
  __break(1u);
}

uint64_t sub_1C08081C0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  void *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1C106F544();
  sub_1C079FCAC();
  MEMORY[0x1E0C80A78](v1);
  sub_1C07A434C();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v2);
  sub_1C0780A08();
  sub_1C079CBBC(v3, OBJC_IVAR____TtC24IntelligencePlatformCore31AutonamingFeedbackCAEventLogger_config);
  type metadata accessor for GraphStore();
  sub_1C077B5BC();
  sub_1C07A5B7C();
  if (v0)
  {
    sub_1C106F148();
    v4 = (void *)sub_1C106F538();
    v5 = sub_1C1070390();
    if (sub_1C077AF00(v5))
    {
      *(_WORD *)sub_1C0780FC8() = 0;
      sub_1C0798520(&dword_1C0771000, v6, v7, "Error accessing graph store for numUnnamedPHPersonsInKG.");
      sub_1C0797BB4();
    }

    sub_1C07919CC();
    return 0;
  }
  else
  {
    sub_1C0808C20();
    v8 = v9;
    sub_1C07785A8();
  }
  return v8;
}

uint64_t sub_1C08082C8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1C07B1F90(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore31AutonamingFeedbackCAEventLogger_config, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  return swift_deallocClassInstance();
}

uint64_t sub_1C0808308()
{
  return type metadata accessor for AutonamingFeedbackCAEventLogger();
}

uint64_t type metadata accessor for AutonamingFeedbackCAEventLogger()
{
  uint64_t result;

  result = qword_1ED747FA8;
  if (!qword_1ED747FA8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C0808348()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Configuration();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1C08083C4(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1C0808410 + 4 * byte_1C107A729[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1C0808444 + 4 * byte_1C107A724[v4]))();
}

uint64_t sub_1C0808444(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C080844C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0808454);
  return result;
}

uint64_t sub_1C0808460(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0808468);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1C080846C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0808474(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for AutonamingFeedbackCAEventSource()
{
  sub_1C0779604();
}

unint64_t sub_1C0808490()
{
  unint64_t result;

  result = qword_1ED747FC0;
  if (!qword_1ED747FC0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107A7F8, &unk_1E7A0C798);
    atomic_store(result, (unint64_t *)&qword_1ED747FC0);
  }
  return result;
}

BOOL sub_1C08084CC(void *a1)
{
  id v1;

  v1 = objc_msgSend(a1, sel_eventBody);

  return v1 != 0;
}

uint64_t sub_1C0808508(uint64_t a1, void *a2)
{
  uint64_t (*v3)(void);
  id v4;

  v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  LOBYTE(v3) = v3();
  swift_release();

  return v3 & 1;
}

void sub_1C0808558(void *a1, uint64_t a2, uint64_t a3)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t *v27;
  id v28;
  _BYTE v29[8];
  _QWORD v30[5];
  _BYTE v31[32];
  char v32;

  v4 = objc_msgSend(a1, sel_eventBody);
  if (v4)
  {
    v28 = v4;
    v5 = sub_1C080AD1C(v4, (SEL *)&selRef_feedbackId);
    if (!v6)
    {

      return;
    }
    v7 = v5;
    v8 = v6;
    v9 = sub_1C080AD1C(v28, (SEL *)&selRef_visualId);
    if (!v10)
    {

      goto LABEL_9;
    }
    v11 = v9;
    v12 = v10;
    sub_1C0808858();
    if (v13 == 4 || (sub_1C08088BC(), v14 == 2))
    {

      swift_bridgeObjectRelease();
LABEL_9:
      swift_bridgeObjectRelease();
      return;
    }
    v15 = v14;
    v27 = (uint64_t *)(a3 + 16);
    swift_beginAccess();
    sub_1C089AA84();
    v16 = v30[0];
    v17 = v30[1];
    v18 = v30[2];
    v19 = v30[3];
    swift_endAccess();
    sub_1C080AD78((uint64_t)v30, (uint64_t)v31, (uint64_t *)&unk_1EF630AE0);
    if ((v32 & 1) != 0)
    {
      v19 = 0;
      v20 = 0;
    }
    else
    {
      v20 = v18;
    }
    v26 = v20;
    if ((v32 & 1) != 0)
      v21 = 0;
    else
      v21 = v17;
    if ((v32 & 1) != 0)
      v22 = 0;
    else
      v22 = v16;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
    }
    else
    {
      swift_beginAccess();
      v23 = *v27;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C0A791CC(v7, v8, v23);
      v25 = v24;
      swift_bridgeObjectRelease();
      if ((v25 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_24:
        if (v15)
        {
          if (!__OFADD__(v19, 1))
            goto LABEL_29;
          __break(1u);
        }
        if (!__OFADD__(v26, 1))
        {
LABEL_29:
          swift_beginAccess();
          sub_1C089FB0C();
          swift_endAccess();

          return;
        }
LABEL_33:
        __break(1u);
        return;
      }
      if (!__OFADD__(v21, 1))
      {
        swift_beginAccess();
        sub_1C0A7D28C((uint64_t)v29, v11, v12);
        swift_endAccess();
        swift_bridgeObjectRelease();
        swift_beginAccess();
        sub_1C0A7D28C((uint64_t)v29, v7, v8);
        swift_endAccess();
        swift_bridgeObjectRelease();
        goto LABEL_24;
      }
    }
    __break(1u);
    goto LABEL_33;
  }
}

void sub_1C0808858()
{
  if (sub_1C0796F74() != 7 && sub_1C0796F74() != 8 && sub_1C0796F74() != 3)
    sub_1C0796F74();
  sub_1C0778534();
}

void sub_1C08088BC()
{
  if (sub_1C07A9D38() != 1)
    sub_1C07A9D38();
  sub_1C0778534();
}

uint64_t sub_1C08088F8(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v10;

  v3 = *(unsigned __int8 *)a1;
  v4 = a1[2];
  v5 = a1[3];
  v10 = a1[4];
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, a1[1]);
  swift_isUniquelyReferenced_nonNull_native();
  sub_1C077BF98();
  swift_bridgeObjectRelease();
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v4);
  swift_isUniquelyReferenced_nonNull_native();
  sub_1C077BF98();
  swift_bridgeObjectRelease();
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v5);
  swift_isUniquelyReferenced_nonNull_native();
  sub_1C077BF98();
  swift_bridgeObjectRelease();
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v10);
  swift_isUniquelyReferenced_nonNull_native();
  sub_1C077BF98();
  swift_bridgeObjectRelease();
  if (!a2 || (sub_1C089AAE4(v3, a2), (v7 & 1) != 0))
    v8 = 0;
  else
    v8 = v6;
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v8);
  swift_isUniquelyReferenced_nonNull_native();
  sub_1C077BF98();
  swift_bridgeObjectRelease();
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v3 + 1);
  swift_isUniquelyReferenced_nonNull_native();
  sub_1C077BF98();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_1C089FB58();
  return swift_endAccess();
}

uint64_t sub_1C0808BC0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  sub_1C080904C();
  v3 = v2;
  v5 = MEMORY[0x1E0DEE9E0];
  sub_1C07767B4();
  sub_1C0807894(v3, &v5, a1);
  sub_1C077960C();
  return v5;
}

void sub_1C0808C20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  char v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  unint64_t v35;
  int64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  int64_t v40;
  unint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[5];

  sub_1C0779670();
  v1 = sub_1C106E590();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_1C07ACF80(qword_1ED747AA8);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  sub_1C077AED0();
  v57 = v6;
  MEMORY[0x1E0C80A78](v7);
  v53 = (char *)&v49 - v8;
  v50 = v0;
  sub_1C078D390();
  v9 = sub_1C0BB9638((uint64_t)sub_1C080A04C, 0);
  sub_1C07785A8();
  v10 = *(_QWORD *)(v9 + 16);
  v55 = v1;
  v56 = v2;
  if (v10)
  {
    sub_1C07767DC();
    sub_1C07785D0();
    v12 = v9 + v11;
    v14 = *(_QWORD *)(v13 + 72);
    v15 = *(_QWORD *)(v2 + 16);
    v51 = v14;
    v52 = v15;
    v49 = v9;
    sub_1C07767B4();
    v16 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    do
    {
      v17 = sub_1C07A8500((uint64_t)v4, v12);
      if (!v16[2] || (sub_1C079BCFC(), (v18 & 1) == 0))
      {
        v19 = (void *)MEMORY[0x1C3BA79F4](v17);
        GraphStore.loadGraphTriples(subject:)();
        v21 = v20;
        swift_isUniquelyReferenced_nonNull_native();
        v58[0] = v16;
        sub_1C079BCFC();
        if (__OFADD__(v16[2], (v23 & 1) == 0))
          goto LABEL_44;
        v24 = v22;
        v25 = v23;
        sub_1C07ACF80(&qword_1EF630AC0);
        v26 = sub_1C107090C();
        v2 = v56;
        if ((v26 & 1) != 0)
        {
          sub_1C07DCD84();
          if ((v25 & 1) != (v28 & 1))
            goto LABEL_46;
          v24 = v27;
        }
        v16 = (_QWORD *)v58[0];
        if ((v25 & 1) != 0)
        {
          v29 = *(_QWORD *)(v58[0] + 56);
          swift_bridgeObjectRelease();
          *(_QWORD *)(v29 + 8 * v24) = v21;
          v1 = v55;
        }
        else
        {
          sub_1C078302C(v58[0] + 8 * (v24 >> 6));
          v1 = v55;
          sub_1C07A8500(v16[6] + *(_QWORD *)(v2 + 72) * v24, (uint64_t)v4);
          *(_QWORD *)(v16[7] + 8 * v24) = v21;
          v30 = v16[2];
          v31 = __OFADD__(v30, 1);
          v32 = v30 + 1;
          if (v31)
            goto LABEL_45;
          v16[2] = v32;
        }
        sub_1C077970C();
        objc_autoreleasePoolPop(v19);
      }
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      v12 += v51;
      --v10;
    }
    while (v10);
    sub_1C07758A4();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1C0861BD0(v58);
  v33 = v58[0];
  v52 = v58[1];
  v34 = v58[3];
  v35 = v58[4];
  v36 = (unint64_t)(v58[2] + 64) >> 6;
  swift_bridgeObjectRetain_n();
  v37 = 0;
  if (!v35)
    goto LABEL_19;
LABEL_18:
  v38 = __clz(__rbit64(v35));
  v35 &= v35 - 1;
  v39 = v38 | (v34 << 6);
  while (1)
  {
    v48 = (uint64_t)v53;
    (*(void (**)(char *, unint64_t, uint64_t))(v56 + 16))(v53, *(_QWORD *)(v33 + 48) + *(_QWORD *)(v56 + 72) * v39, v1);
    *(_QWORD *)(v48 + *(int *)(v54 + 48)) = *(_QWORD *)(*(_QWORD *)(v33 + 56) + 8 * v39);
    sub_1C080AD78(v48, v57, qword_1ED747AA8);
    sub_1C07767B4();
    if ((sub_1C080A250() & 1) == 0)
    {
      v31 = __OFADD__(v37++, 1);
      if (v31)
        break;
    }
    sub_1C0784B6C(v57, qword_1ED747AA8);
    v1 = v55;
    if (v35)
      goto LABEL_18;
LABEL_19:
    v40 = v34 + 1;
    if (__OFADD__(v34, 1))
      goto LABEL_43;
    if (v40 >= v36)
      goto LABEL_41;
    v41 = *(_QWORD *)(v52 + 8 * v40);
    v42 = v34 + 1;
    if (!v41)
    {
      if (v34 + 2 >= v36)
        goto LABEL_41;
      sub_1C07B827C();
      if (!v41)
      {
        if (v43 + 2 >= v36)
          goto LABEL_41;
        sub_1C07B827C();
        if (!v41)
        {
          if (v44 + 3 >= v36)
            goto LABEL_41;
          sub_1C07B827C();
          if (!v41)
          {
            if (v45 + 4 >= v36)
              goto LABEL_41;
            sub_1C07B827C();
            if (!v41)
            {
              v42 = v46 + 5;
              if (v46 + 5 >= v36)
                goto LABEL_41;
              v41 = *(_QWORD *)(v52 + 8 * v42);
              if (!v41)
              {
                v47 = v34 + 7;
                while (v47 < v36)
                {
                  v41 = *(_QWORD *)(v52 + 8 * v47++);
                  if (v41)
                  {
                    v42 = v47 - 1;
                    goto LABEL_36;
                  }
                }
LABEL_41:
                sub_1C07785A8();
                sub_1C07758A4();
                sub_1C0776760();
                return;
              }
            }
          }
        }
      }
    }
LABEL_36:
    v35 = (v41 - 1) & v41;
    v39 = __clz(__rbit64(v41)) + (v42 << 6);
    v34 = v42;
  }
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  sub_1C1070D44();
  __break(1u);
}

void sub_1C080904C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(_QWORD, _QWORD, _QWORD);
  _QWORD *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  void (*v28)(_QWORD, _QWORD, _QWORD);
  uint64_t v29;
  uint64_t v30;
  void *v31;

  sub_1C0779670();
  sub_1C106E590();
  sub_1C079FCAC();
  MEMORY[0x1E0C80A78](v3);
  sub_1C07785B8();
  sub_1C078D390();
  v4 = sub_1C0BB9638((uint64_t)sub_1C0809E68, 0);
  sub_1C07785A8();
  v5 = *(_QWORD *)(v4 + 16);
  if (!v5)
  {
    sub_1C0778580();
LABEL_17:
    sub_1C0776760();
    return;
  }
  sub_1C07767DC();
  sub_1C07785D0();
  v7 = v4 + v6;
  v30 = *(_QWORD *)(v8 + 72);
  v9 = *(void (**)(_QWORD, _QWORD, _QWORD))(v2 + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v10 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v28 = v9;
  v29 = v0;
  while (1)
  {
    v11 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v9)(v1, v7, v0);
    if (v10[2])
    {
      sub_1C079DAE8();
      if ((v12 & 1) != 0)
        goto LABEL_14;
    }
    v13 = v2;
    v31 = (void *)MEMORY[0x1C3BA79F4](v11);
    GraphStore.loadGraphTriples(subject:)();
    v15 = v14;
    swift_isUniquelyReferenced_nonNull_native();
    v16 = v1;
    sub_1C079DAE8();
    if (__OFADD__(v10[2], (v18 & 1) == 0))
      break;
    v19 = v17;
    v20 = v18;
    sub_1C07ACF80(&qword_1EF630AC0);
    if ((sub_1C107090C() & 1) != 0)
    {
      sub_1C07DCD84();
      if ((v20 & 1) != (v22 & 1))
        goto LABEL_20;
      v19 = v21;
    }
    if ((v20 & 1) != 0)
    {
      v23 = v10[7];
      swift_bridgeObjectRelease();
      *(_QWORD *)(v23 + 8 * v19) = v15;
      v2 = v13;
      v9 = v28;
      v0 = v29;
    }
    else
    {
      sub_1C078302C((uint64_t)&v10[v19 >> 6]);
      v2 = v13;
      v24 = v10[6] + *(_QWORD *)(v13 + 72) * v19;
      v9 = v28;
      v0 = v29;
      v28(v24, v16, v29);
      *(_QWORD *)(v10[7] + 8 * v19) = v15;
      v25 = v10[2];
      v26 = __OFADD__(v25, 1);
      v27 = v25 + 1;
      if (v26)
        goto LABEL_19;
      v10[2] = v27;
    }
    sub_1C077970C();
    objc_autoreleasePoolPop(v31);
    v1 = v16;
LABEL_14:
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
    v7 += v30;
    if (!--v5)
    {
      sub_1C07758A4();
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  sub_1C1070D44();
  __break(1u);
}

uint64_t sub_1C0809278(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  unsigned __int8 v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  _QWORD *v32;
  unsigned __int8 v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  char v39;
  _QWORD *v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  _QWORD *v44;
  unsigned __int8 v45;
  unint64_t v46;
  char v47;
  char v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t result;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;

  v55 = a3;
  v5 = sub_1C07ACF80(qword_1ED747AA8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(int *)(v8 + 48);
  v10 = sub_1C106E590();
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v7, a1, v10);
  *(_QWORD *)&v7[v9] = *(_QWORD *)(a1 + v9);
  v12 = *(void (**)(char *, uint64_t))(v11 + 8);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v12(v7, v10);
  v56 = sub_1C0809690();
  v57 = v13;
  sub_1C0809A18();
  v15 = v14;
  swift_bridgeObjectRelease();
  v54 = v15;
  v16 = *(_QWORD *)(v15 + 16);
  if (!v16)
  {
LABEL_35:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v17 = (_BYTE *)(v54 + 49);
  v58 = a2;
  while (1)
  {
    v18 = *(_QWORD *)(v17 - 9);
    v19 = *(v17 - 1);
    if ((*v17 & 1) != 0)
      break;
    v24 = *(_QWORD *)(v17 - 17);
    v61 = (_QWORD *)v56;
    v62 = v57;
    v59 = v24;
    v60 = v18;
    sub_1C07B1280();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    if ((sub_1C1070624() & 1) == 0
      || (_s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0(),
          sub_1C0A791CC(v24, v18, v55),
          v26 = v25,
          swift_bridgeObjectRelease(),
          (v26 & 1) != 0))
    {
      v27 = *a2;
      v28 = *(_QWORD *)(*a2 + 16);
      if (v28)
      {
        v29 = sub_1C07DCCD4(v19);
        if ((v30 & 1) != 0)
          v28 = *(_QWORD *)(*(_QWORD *)(v27 + 56) + 8 * v29);
        else
          v28 = 0;
      }
      v31 = v28 + 1;
      if (__OFADD__(v28, 1))
        goto LABEL_38;
      v63 = v16;
      swift_isUniquelyReferenced_nonNull_native();
      v61 = (_QWORD *)*a2;
      v44 = v61;
      *a2 = 0x8000000000000000;
      v45 = v19;
      v46 = sub_1C07DCCD4(v19);
      if (__OFADD__(v44[2], (v47 & 1) == 0))
        goto LABEL_39;
      v36 = v46;
      v48 = v47;
      sub_1C07ACF80(&qword_1EF630AC8);
      if ((sub_1C107090C() & 1) != 0)
      {
        v49 = sub_1C07DCCD4(v45);
        if ((v48 & 1) != (v50 & 1))
          goto LABEL_42;
        v36 = v49;
      }
      v40 = v61;
      if ((v48 & 1) != 0)
        goto LABEL_30;
      v61[(v36 >> 6) + 8] |= 1 << v36;
      *(_BYTE *)(v40[6] + v36) = v45;
      *(_QWORD *)(v40[7] + 8 * v36) = v31;
      v51 = v40[2];
      v42 = __OFADD__(v51, 1);
      v43 = v51 + 1;
      if (v42)
        goto LABEL_41;
LABEL_32:
      v40[2] = v43;
      goto LABEL_33;
    }
    swift_bridgeObjectRelease();
LABEL_34:
    v17 += 24;
    if (!--v16)
      goto LABEL_35;
  }
  v20 = *a2;
  v21 = *(_QWORD *)(*a2 + 16);
  if (v21)
  {
    v22 = sub_1C07DCCD4(*(v17 - 1));
    if ((v23 & 1) != 0)
      v21 = *(_QWORD *)(*(_QWORD *)(v20 + 56) + 8 * v22);
    else
      v21 = 0;
  }
  v31 = v21 + 1;
  if (!__OFADD__(v21, 1))
  {
    v63 = v16;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_isUniquelyReferenced_nonNull_native();
    v61 = (_QWORD *)*a2;
    v32 = v61;
    *a2 = 0x8000000000000000;
    v33 = v19;
    v34 = sub_1C07DCCD4(v19);
    if (__OFADD__(v32[2], (v35 & 1) == 0))
      goto LABEL_37;
    v36 = v34;
    v37 = v35;
    sub_1C07ACF80(&qword_1EF630AC8);
    if ((sub_1C107090C() & 1) != 0)
    {
      v38 = sub_1C07DCCD4(v33);
      if ((v37 & 1) != (v39 & 1))
        goto LABEL_42;
      v36 = v38;
    }
    v40 = v61;
    if ((v37 & 1) == 0)
    {
      v61[(v36 >> 6) + 8] |= 1 << v36;
      *(_BYTE *)(v40[6] + v36) = v33;
      *(_QWORD *)(v40[7] + 8 * v36) = v31;
      v41 = v40[2];
      v42 = __OFADD__(v41, 1);
      v43 = v41 + 1;
      if (v42)
        goto LABEL_40;
      goto LABEL_32;
    }
LABEL_30:
    *(_QWORD *)(v40[7] + 8 * v36) = v31;
LABEL_33:
    a2 = v58;
    *v58 = v40;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v16 = v63;
    goto LABEL_34;
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  result = sub_1C1070D44();
  __break(1u);
  return result;
}

uint64_t sub_1C0809690()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v33[8];
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  _QWORD v41[2];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  sub_1C0779670();
  v43 = v0;
  v44 = v1;
  v3 = v2;
  v4 = sub_1C0779688();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07ACF80(&qword_1ED75E838);
  v8 = *(_QWORD *)(v5 + 72);
  v9 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C107A8C0;
  v11 = v10 + v9;
  sub_1C106E248();
  v33[7] = v11 + v8;
  sub_1C106DD2C();
  v33[6] = v11 + 2 * v8;
  sub_1C106DD38();
  v33[5] = v11 + 3 * v8;
  sub_1C106DCE4();
  v33[4] = v11 + 4 * v8;
  sub_1C106E3B0();
  v38 = v11;
  v33[3] = v11 + 5 * v8;
  sub_1C106DD20();
  v42 = MEMORY[0x1E0DEE9E8];
  v37 = *(_QWORD *)(v3 + 16);
  if (v37)
  {
    v33[1] = v10;
    v12 = (int *)sub_1C07767DC();
    sub_1C07785D0();
    v35 = *(_QWORD *)(v13 + 72);
    v36 = v3 + v14;
    v33[2] = v3;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v15 = 0;
    v34 = v7;
    do
    {
      v16 = v36 + v35 * v15;
      v17 = v16 + v12[7];
      if ((sub_1C106E2FC() & 1) != 0)
        v17 = v16 + v12[5];
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v17, v4);
      sub_1C07803F8(&qword_1ED75EA30, (void (*)(uint64_t))MEMORY[0x1E0D3CC50]);
      if ((sub_1C07A0750() & 1) != 0
        || (sub_1C07A0750() & 1) != 0
        || (sub_1C07A0750() & 1) != 0
        || (sub_1C07A0750() & 1) != 0
        || (sub_1C07A0750() & 1) != 0
        || (sub_1C07A0750() & 1) != 0)
      {
        v18 = (uint64_t *)(v16 + v12[11]);
        v19 = *v18;
        v20 = v18[1];
        v21 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v22 = (void *)MEMORY[0x1C3BA79F4](v21);
        v41[0] = v19;
        v41[1] = v20;
        v39 = 30;
        v40 = 0xE100000000000000;
        sub_1C07B1280();
        v23 = sub_1C10705D0();
        objc_autoreleasePoolPop(v22);
        swift_bridgeObjectRelease();
        v24 = *(_QWORD *)(v23 + 16);
        if (v24)
        {
          v25 = v12;
          v26 = v5;
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          v27 = (uint64_t *)(v23 + 40);
          do
          {
            v28 = *(v27 - 1);
            v29 = *v27;
            swift_bridgeObjectRetain_n();
            sub_1C0A7D28C((uint64_t)v41, v28, v29);
            swift_bridgeObjectRelease();
            sub_1C077960C();
            v27 += 2;
            --v24;
          }
          while (v24);
          swift_bridgeObjectRelease();
          v5 = v26;
          v12 = v25;
          v7 = v34;
        }
        swift_bridgeObjectRelease();
      }
      ++v15;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    while (v15 != v37);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v30 = v42;
  }
  else
  {
    swift_bridgeObjectRelease();
    v30 = MEMORY[0x1E0DEE9E8];
  }
  v41[0] = v30;
  sub_1C07ACF80(&qword_1ED762B80);
  sub_1C07BB218(&qword_1ED761480, &qword_1ED762B80);
  sub_1C07B1280();
  sub_1C07767B4();
  v31 = sub_1C106FE38();
  sub_1C07758A4();
  swift_bridgeObjectRelease();
  return v31;
}

void sub_1C0809A18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  char v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  char v28;
  char v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[2];
  _QWORD *v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD v55[2];

  sub_1C0779670();
  v2 = v1;
  v52 = sub_1C106EB24();
  v3 = *(_QWORD **)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  sub_1C077AED0();
  v51 = v4;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v41 - v6;
  v8 = sub_1C0779688();
  v45 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  sub_1C07785B8();
  v50 = sub_1C07767DC();
  MEMORY[0x1E0C80A78](v50);
  v47 = (uint64_t)v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v41 - v12;
  v14 = *(_QWORD *)(v2 + 16);
  if (!v14)
  {
LABEL_29:
    v55[0] = MEMORY[0x1E0DEE9D8];
    v40 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0807E50(v40, v55);
    sub_1C07785A0();
    sub_1C07785A0();
    sub_1C0776760();
    return;
  }
  v43 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v15 = v2 + v43;
  v48 = *(_QWORD *)(v11 + 72);
  v41[0] = v2;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v16 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v41[1] = v8;
  v42 = v3;
  v46 = v7;
  v44 = v0;
  v49 = v13;
  while (1)
  {
    sub_1C080ABC4(v15, (uint64_t)v13, type metadata accessor for GraphTriple);
    sub_1C106E0B0();
    sub_1C07803F8(&qword_1ED75E7E0, (void (*)(uint64_t))MEMORY[0x1E0D3CC50]);
    sub_1C07960C4();
    sub_1C07960C4();
    if (v55[0] == v53 && v55[1] == v54)
    {
      sub_1C07758A4();
      sub_1C07B3F3C();
    }
    else
    {
      v18 = sub_1C07785B0();
      sub_1C077960C();
      sub_1C0778580();
      sub_1C07B3F3C();
      if ((v18 & 1) == 0)
        goto LABEL_27;
    }
    v19 = (uint64_t)v49;
    v20 = (void (*)(char *, char *, uint64_t))v3[2];
    v20(v7, &v49[*(int *)(v50 + 24)], v52);
    if (v16[2])
    {
      sub_1C07DCD20();
      v22 = MEMORY[0x1E0DEE9D8];
      if ((v23 & 1) != 0)
      {
        v22 = *(_QWORD *)(v16[7] + 8 * v21);
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      }
    }
    else
    {
      v22 = MEMORY[0x1E0DEE9D8];
    }
    sub_1C080ABC4(v19, v47, type metadata accessor for GraphTriple);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C07BCD3C();
      v22 = v38;
    }
    v24 = *(_QWORD *)(v22 + 16);
    if (v24 >= *(_QWORD *)(v22 + 24) >> 1)
    {
      sub_1C07BCD3C();
      v22 = v39;
    }
    *(_QWORD *)(v22 + 16) = v24 + 1;
    sub_1C080AC74(v47, v22 + v43 + v24 * v48);
    v20(v51, v46, v52);
    swift_isUniquelyReferenced_nonNull_native();
    v55[0] = v16;
    sub_1C07DCD20();
    if (__OFADD__(v16[2], (v26 & 1) == 0))
      break;
    v27 = v25;
    v28 = v26;
    sub_1C07ACF80(&qword_1EF630AD0);
    v29 = sub_1C107090C();
    v3 = v42;
    if ((v29 & 1) != 0)
    {
      sub_1C07DCD20();
      if ((v28 & 1) != (v31 & 1))
        goto LABEL_32;
      v27 = v30;
    }
    v16 = (_QWORD *)v55[0];
    if ((v28 & 1) != 0)
    {
      v32 = *(_QWORD *)(v55[0] + 56);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v32 + 8 * v27) = v22;
    }
    else
    {
      sub_1C078302C(v55[0] + 8 * (v27 >> 6));
      v20((char *)(v16[6] + v3[9] * v27), v51, v52);
      *(_QWORD *)(v16[7] + 8 * v27) = v22;
      v33 = v16[2];
      v34 = __OFADD__(v33, 1);
      v35 = v33 + 1;
      if (v34)
        goto LABEL_31;
      v16[2] = v35;
    }
    sub_1C077970C();
    v36 = (void (*)(uint64_t, uint64_t))v3[1];
    v37 = v52;
    v36((uint64_t)v51, v52);
    v7 = v46;
    v36((uint64_t)v46, v37);
LABEL_27:
    v13 = v49;
    sub_1C07B1F90((uint64_t)v49, type metadata accessor for GraphTriple);
    v15 += v48;
    if (!--v14)
    {
      swift_bridgeObjectRelease();
      goto LABEL_29;
    }
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  sub_1C1070D44();
  __break(1u);
}

uint64_t sub_1C0809E68@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v11[5];
  char v12[24];
  ValueMetadata *v13;
  unint64_t v14;
  uint64_t v15[5];

  v3 = sub_1C07ACF80(&qword_1ED75E500);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v11[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for GraphTriple(0);
  v13 = &type metadata for FusedTripleColumn;
  v14 = sub_1C080ABFC();
  v12[0] = 1;
  v11[3] = sub_1C106E41C();
  sub_1C07803F8(&qword_1ED7564A0, (void (*)(uint64_t))MEMORY[0x1E0D3CC50]);
  v11[4] = v7;
  sub_1C079DFC4(v11);
  sub_1C106E0B0();
  v15[3] = sub_1C106BCBC();
  v15[4] = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v15);
  sub_1C106C310();
  sub_1C0784B6C((uint64_t)v11, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v12);
  sub_1C07803F8(&qword_1ED75E628, (void (*)(uint64_t))type metadata accessor for GraphTriple);
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v15);
  sub_1C07BB218(&qword_1ED75E9D0, &qword_1ED75E500);
  sub_1C07803F8(&qword_1ED756860, (void (*)(uint64_t))type metadata accessor for GraphTriple);
  v8 = sub_1C106BAB8();
  result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (!v1)
    *a1 = v8;
  return result;
}

uint64_t sub_1C080A04C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD v14[5];
  char v15[24];
  ValueMetadata *v16;
  unint64_t v17;
  uint64_t v18[5];

  v3 = sub_1C07ACF80(&qword_1ED75E500);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v14[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for GraphTriple(0);
  v16 = &type metadata for FusedTripleColumn;
  v17 = sub_1C080ABFC();
  v15[0] = 4;
  if (qword_1ED7623A8 != -1)
    swift_once();
  v7 = type metadata accessor for Source();
  v8 = (uint64_t *)sub_1C079E000(v7, (uint64_t)&unk_1ED762388);
  v9 = *v8;
  v10 = v8[1];
  v14[3] = MEMORY[0x1E0DEA968];
  v14[4] = MEMORY[0x1E0D24960];
  v14[0] = v9;
  v14[1] = v10;
  v18[3] = sub_1C106BCBC();
  v18[4] = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v18);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C310();
  sub_1C0784B6C((uint64_t)v14, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v15);
  sub_1C07803F8(&qword_1ED75E628, (void (*)(uint64_t))type metadata accessor for GraphTriple);
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v18);
  sub_1C07BB218(&qword_1ED75E9D0, &qword_1ED75E500);
  sub_1C07803F8(&qword_1ED756860, (void (*)(uint64_t))type metadata accessor for GraphTriple);
  v11 = sub_1C106BAB8();
  result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (!v1)
    *a1 = v11;
  return result;
}

uint64_t sub_1C080A250()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_1C0779670();
  v40 = v0;
  v41 = v1;
  v3 = v2;
  v4 = sub_1C0779688();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v28 - v9;
  v37 = sub_1C07767DC();
  v11 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v38 = (uint64_t)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07ACF80(&qword_1ED75E838);
  v13 = *(_QWORD *)(v5 + 72);
  v36 = v5;
  v14 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1C107A8D0;
  v16 = v15 + v14;
  sub_1C106E248();
  v35 = v15 + v14 + v13;
  sub_1C106DD2C();
  v34 = v15 + v14 + 2 * v13;
  sub_1C106DD38();
  v33 = v15 + v14 + 3 * v13;
  sub_1C106DCE4();
  v32 = v15 + v14 + 4 * v13;
  sub_1C106E3B0();
  v31 = v15 + v14 + 5 * v13;
  sub_1C106DD20();
  v30 = v15 + v14 + 6 * v13;
  sub_1C106DED0();
  v17 = *(_QWORD *)(v3 + 16);
  if (v17)
  {
    v39 = v15;
    v18 = v3 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v19 = *(_QWORD *)(v11 + 72);
    v28 = v3;
    v29 = v19;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v20 = v38;
    while (1)
    {
      sub_1C080ABC4(v18, v20, type metadata accessor for GraphTriple);
      v21 = v37;
      v22 = v20 + *(int *)(v37 + 28);
      if ((sub_1C106E2FC() & 1) != 0)
      {
        v23 = v20 + *(int *)(v21 + 20);
        v24 = (uint64_t)v10;
      }
      else
      {
        v24 = (uint64_t)v10;
        v23 = v22;
      }
      sub_1C07878C0(v24, v23);
      sub_1C07878C0((uint64_t)v7, v16);
      sub_1C07803F8(&qword_1ED75EA30, (void (*)(uint64_t))MEMORY[0x1E0D3CC50]);
      v25 = sub_1C07A6770();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C0799710();
      if ((v25 & 1) != 0)
        break;
      sub_1C07878C0((uint64_t)v7, v35);
      sub_1C07A6770();
      sub_1C0798510();
      sub_1C07878C0((uint64_t)v7, v34);
      sub_1C07A6770();
      sub_1C0798510();
      sub_1C07878C0((uint64_t)v7, v33);
      sub_1C07A6770();
      sub_1C0798510();
      sub_1C07878C0((uint64_t)v7, v32);
      sub_1C07A6770();
      sub_1C0798510();
      sub_1C07878C0((uint64_t)v7, v31);
      sub_1C07A6770();
      sub_1C0798510();
      sub_1C07878C0((uint64_t)v7, v30);
      v26 = sub_1C07A6770();
      sub_1C0799710();
      sub_1C077960C();
      if ((v26 & 1) != 0)
        goto LABEL_11;
      sub_1C07B70E0();
      v20 = v38;
      sub_1C07B1F90(v38, type metadata accessor for GraphTriple);
      v18 += v29;
      if (!--v17)
      {
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
    }
    sub_1C077960C();
LABEL_11:
    sub_1C07B70E0();
    sub_1C07B1F90(v38, type metadata accessor for GraphTriple);
    sub_1C077960C();
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t sub_1C080A598()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  char v28;
  uint64_t *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v36;
  uint64_t *v37;
  uint64_t v38;
  const char *v40;
  unint64_t v41;
  const char *v42;
  unint64_t v43;
  uint64_t v44;
  const char *v45;
  unint64_t v46;
  uint64_t v47;
  int v48;
  const char *v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  sub_1C0779670();
  v65 = v2;
  v66 = v3;
  v5 = v4;
  v6 = sub_1C0779688();
  v58 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  sub_1C07BC5C0();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v40 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v40 - v11;
  v13 = sub_1C07767DC();
  MEMORY[0x1E0C80A78](v13);
  sub_1C077864C();
  v15 = *(_QWORD *)(v5 + 16);
  if (!v15)
  {
LABEL_55:
    swift_bridgeObjectRelease();
    return 0;
  }
  v47 = 0;
  v52 = 0;
  v48 = 0;
  v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v44 = v5;
  v17 = v5 + v16;
  v57 = *(_QWORD *)(v14 + 72);
  v56 = 4;
  v49 = "num_rejected_suggestions";
  v51 = 0x80000001C10E31A0;
  v45 = "association:messages";
  v46 = 0x80000001C10E31C0;
  v42 = "association:contactsInferred";
  v43 = 0x80000001C10E31E0;
  v40 = "association:contactsConfirmed";
  v41 = 0x80000001C10E3200;
  v50 = v0;
  v53 = v12;
  v54 = v1;
  v59 = v6;
  v55 = v9;
  do
  {
    sub_1C080ABC4(v17, v1, type metadata accessor for GraphTriple);
    v18 = v13;
    sub_1C106E014();
    sub_1C07803F8(&qword_1ED75E7E0, (void (*)(uint64_t))MEMORY[0x1E0D3CC50]);
    sub_1C07960C4();
    sub_1C07960C4();
    v19 = v63 == v61 && v64 == v62;
    v60 = v15;
    v20 = (uint64_t)v12;
    if (v19)
      v21 = 1;
    else
      v21 = sub_1C07785B0();
    swift_bridgeObjectRelease();
    sub_1C077960C();
    sub_1C078BCB0(v20);
    if ((v21 & 1) != 0)
    {
      v12 = (char *)v20;
      v22 = (uint64_t *)(v1 + *(int *)(v13 + 32));
      v23 = *v22;
      v24 = v22[1];
      if (*v22 == 0xD000000000000014 && v24 == v51 || (sub_1C07785B0() & 1) != 0)
      {
        v25 = 3;
      }
      else if (v23 == 0xD00000000000001CLL && v24 == v46 || (sub_1C07785B0() & 1) != 0)
      {
        v25 = 1;
      }
      else
      {
        if (v23 == 0xD00000000000001DLL && v24 == v43)
        {
          v56 = 0;
          goto LABEL_27;
        }
        if ((sub_1C07785B0() & 1) != 0)
        {
          v25 = 0;
        }
        else if (v23 == 0xD00000000000001DLL && v24 == v41 || (sub_1C07785B0() & 1) != 0)
        {
          v25 = 2;
        }
        else
        {
          v25 = 4;
        }
      }
      v56 = v25;
LABEL_27:
      v34 = v60;
      goto LABEL_37;
    }
    v26 = (uint64_t)v55;
    sub_1C106DED0();
    sub_1C07960C4();
    sub_1C07960C4();
    if (v63 == v61 && v64 == v62)
    {
      sub_1C07758A4();
      sub_1C078BCB0(v26);
      v13 = v18;
      v1 = v54;
    }
    else
    {
      v28 = sub_1C07785B0();
      sub_1C077960C();
      sub_1C07785A0();
      sub_1C078BCB0(v26);
      v13 = v18;
      v1 = v54;
      if ((v28 & 1) == 0)
        goto LABEL_28;
    }
    v29 = (uint64_t *)(v1 + *(int *)(v13 + 32));
    v31 = *v29;
    v30 = v29[1];
    v32 = v31 & 0xFFFFFFFFFFFFLL;
    if ((v30 & 0x2000000000000000) != 0)
      v33 = HIBYTE(v30) & 0xF;
    else
      v33 = v32;
    if (v33)
    {
      v48 = 1;
      v12 = v53;
      goto LABEL_27;
    }
LABEL_28:
    sub_1C106E008();
    sub_1C07960C4();
    sub_1C07960C4();
    if (v63 == v61 && v64 == v62)
    {
      sub_1C07758A4();
      sub_1C07A2F64();
    }
    else
    {
      v36 = sub_1C07785B0();
      sub_1C077960C();
      sub_1C0778580();
      sub_1C07A2F64();
      if ((v36 & 1) == 0)
        goto LABEL_36;
    }
    swift_bridgeObjectRelease();
    v37 = (uint64_t *)(v1 + *(int *)(v13 + 32));
    v38 = v37[1];
    v47 = *v37;
    v52 = v38;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
LABEL_36:
    v12 = v53;
    v34 = v60;
LABEL_37:
    sub_1C07B1F90(v1, type metadata accessor for GraphTriple);
    v17 += v57;
    v15 = v34 - 1;
  }
  while (v15);
  swift_bridgeObjectRelease();
  if (!v52)
    return 0;
  if (v56 == 4)
    goto LABEL_55;
  return v47;
}

void sub_1C080AB10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a1 != a4 || a2 != a5)
    sub_1C07785B0();
  sub_1C0778534();
}

void sub_1C080AB84(uint64_t a1, uint64_t *a2)
{
  int v2;

  if (*(_BYTE *)(a1 + 17))
    v2 = 256;
  else
    v2 = 0;
  sub_1C080AB10(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), v2 | *(unsigned __int8 *)(a1 + 16), *a2, a2[1]);
}

void sub_1C080ABC4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = a3(0);
  sub_1C0775828(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  sub_1C0778534();
}

unint64_t sub_1C080ABFC()
{
  unint64_t result;

  result = qword_1ED75F938;
  if (!qword_1ED75F938)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1098B74, &type metadata for FusedTripleColumn);
    atomic_store(result, (unint64_t *)&qword_1ED75F938);
  }
  return result;
}

unint64_t sub_1C080AC38()
{
  unint64_t result;

  result = qword_1ED747FB8;
  if (!qword_1ED747FB8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107A7B8, &unk_1E7A0C798);
    atomic_store(result, (unint64_t *)&qword_1ED747FB8);
  }
  return result;
}

uint64_t sub_1C080AC74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GraphTriple(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C080ACB8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C080ACDC()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1C080AD10(void *a1)
{
  uint64_t v1;

  sub_1C0808558(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1C080AD1C(void *a1, SEL *a2)
{
  id v2;
  void *v3;
  uint64_t v4;

  v2 = objc_msgSend(a1, *a2);
  if (!v2)
    return 0;
  v3 = v2;
  v4 = sub_1C106FB14();

  return v4;
}

void sub_1C080AD78(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_1C07ACF80(a3);
  sub_1C0775828(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  sub_1C0778534();
}

void type metadata accessor for AutonamingFeedbackCAEventPayload()
{
  sub_1C0779604();
}

void sub_1C080ADC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0778534();
}

uint64_t sub_1C080ADF0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

__n128 sub_1C080AE4C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t sub_1C080AE60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

uint64_t sub_1C080AEA4(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 18))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1C080AEE4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 18) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 18) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for AutonamingSuggestionInfo()
{
  sub_1C0779604();
}

uint64_t sub_1C080AF44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[96];

  if (*(_QWORD *)(v0 + 152))
  {
    v1 = *(_QWORD *)(v0 + 152);
  }
  else
  {
    v2 = v0;
    memcpy(v4, (const void *)(v0 + 56), sizeof(v4));
    type metadata accessor for AutonamingMessagesProcessHandler();
    sub_1C0778598();
    sub_1C080EA64((uint64_t)v4);
    swift_retain();
    v1 = sub_1C081818C(v4, v0);
    *(_QWORD *)(v2 + 152) = v1;
    swift_retain();
    sub_1C07758C4();
  }
  swift_retain();
  return v1;
}

id sub_1C080AFE0()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 160);
  if (v1)
  {
    v2 = *(id *)(v0 + 160);
  }
  else
  {
    v3 = sub_1C080B034();
    v4 = *(void **)(v0 + 160);
    *(_QWORD *)(v0 + 160) = v3;
    v2 = v3;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

id sub_1C080B034()
{
  uint64_t v0;
  void *v1;
  id v2;

  v0 = sub_1C106AB28();
  MEMORY[0x1E0C80A78](v0);
  v1 = (void *)objc_opt_self();
  if (!objc_msgSend(v1, sel_isMultiLibraryModeEnabled))
    return objc_msgSend(v1, sel_sharedPhotoLibrary);
  sub_1C07D4B70(0, (unint64_t *)&unk_1ED758D80);
  v2 = objc_msgSend(v1, sel_systemPhotoLibraryURL);
  sub_1C106AAF8();

  return sub_1C0CAC948();
}

_QWORD *sub_1C080B124(uint64_t a1, const void *a2)
{
  _QWORD *v2;
  void *v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  id v31;
  void *v32;
  id v33;
  uint64_t v35;

  v4 = v2;
  v7 = type metadata accessor for Configuration();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2[19] = 0;
  v2[20] = 0;
  memcpy(v2 + 7, a2, 0x60uLL);
  type metadata accessor for AutonamingMessagesModelHandler();
  sub_1C0778598();
  sub_1C07758CC();
  sub_1C08161D4();
  v2[6] = v10;
  v11 = (id)BiomeLibrary();
  v12 = sub_1C0789D34(v11);
  v13 = sub_1C07A2264();
  v14 = sub_1C07877F4(v13, sel_Messages);
  v15 = sub_1C0780A20();
  v16 = sub_1C07878D0(v15, sel_Inferences);
  v17 = sub_1C07A2264();
  v18 = sub_1C07877F4(v17, sel_source);

  v4[2] = v18;
  v19 = (id)BiomeLibrary();
  v20 = sub_1C0789D34(v19);
  v21 = sub_1C07A2264();
  v22 = sub_1C07877F4(v21, sel_Messages);
  v23 = sub_1C0780A20();
  v24 = sub_1C07878D0(v23, sel_Inferences);
  v25 = sub_1C07A2264();
  v26 = sub_1C07877F4(v25, sel_pruner);

  v4[3] = v26;
  sub_1C078E3E0(a1, (uint64_t)v9);
  type metadata accessor for AutonamingMessagesBookmarker();
  swift_allocObject();
  sub_1C07758CC();
  v4[4] = sub_1C080EB98((uint64_t)v9, (uint64_t)a2);
  v27 = (id)BiomeLibrary();
  v28 = sub_1C0789D34(v27);
  sub_1C077C11C();
  v29 = objc_msgSend(v9, sel_Messages);
  v30 = swift_unknownObjectRelease();
  v31 = sub_1C07878D0(v30, sel_MessageIds);
  sub_1C077C11C();
  v32 = (void *)sub_1C106FAF0();
  sub_1C080EAD4((uint64_t)a2);
  v33 = objc_msgSend(v9, sel_publisherWithUseCase_, v32);

  sub_1C078D09C(a1);
  v4[5] = v33;
  return v4;
}

void sub_1C080B384(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;

  if (qword_1ED762B18 != -1)
    swift_once();
  v3 = sub_1C077585C();
  sub_1C079E000(v3, (uint64_t)qword_1ED762AF8);
  swift_retain_n();
  v4 = sub_1C106F538();
  v5 = sub_1C1070384();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = sub_1C0775854();
    v14 = sub_1C0775854();
    *(_DWORD *)v6 = 136643075;
    v7 = *(_QWORD *)(a1 + 88);
    v8 = sub_1C0814714();
    sub_1C0788DAC(v8, v9, &v14);
    sub_1C0784E14();
    sub_1C077971C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v11 = *(_QWORD *)(v7 + 16);
    v10 = *(_QWORD *)(v7 + 24);
    sub_1C077AE90();
    sub_1C0788DAC(v11, v10, &v14);
    sub_1C0784E14();
    sub_1C077971C();
    sub_1C077960C();
    sub_1C077E89C(&dword_1C0771000, v4, v5, "Donating into the Autonaming.Messages.Inferences biome stream using InferenceData with imageMessage: %{sensitive}s\n and imageMessageIdentifier: %s", (uint8_t *)v6);
    sub_1C0778664();
    sub_1C0776778();
  }

  swift_release_n();
  v12 = *(void **)(v1 + 16);
  v13 = sub_1C0812938();
  objc_msgSend(v12, sel_sendEvent_, v13);

}

uint64_t sub_1C080B550(void *a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t result;
  _QWORD v10[6];

  v3 = *(void **)(v1 + 24);
  v4 = (void *)sub_1C106FAF0();
  v5 = sub_1C0778598();
  *(_QWORD *)(v5 + 16) = a1;
  v6 = sub_1C0778598();
  *(_QWORD *)(v6 + 16) = sub_1C080EA28;
  *(_QWORD *)(v6 + 24) = v5;
  v10[4] = sub_1C080EA40;
  v10[5] = v6;
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 1107296256;
  v10[2] = sub_1C080BF4C;
  v10[3] = &unk_1E7A0CBE0;
  v7 = _Block_copy(v10);
  v8 = a1;
  swift_retain();
  swift_release();
  objc_msgSend(v3, sel_deleteWithPolicy_eventsPassingTest_, v4, v7);

  _Block_release(v7);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  sub_1C077AF1C();
  result = swift_release();
  if ((v3 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_1C080B6A0(void *a1, uint64_t a2, void *a3)
{
  NSObject *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  id v32;
  _QWORD *v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  void *v46;
  uint64_t aBlock;
  uint64_t v48;
  id (*v49)(uint64_t);
  void *v50;
  uint64_t (*v51)();
  uint64_t v52;

  v4 = objc_msgSend(a1, sel_eventBody);
  v5 = sub_1C081A78C(a3);
  if (!v6)
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v20 = sub_1C106F544();
    sub_1C079E000(v20, (uint64_t)qword_1ED762AF8);
    v21 = sub_1C106F538();
    v22 = sub_1C1070390();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v23 = 0;
      _os_log_impl(&dword_1C0771000, v21, v22, "Deletion: No messageEvent.messageId was found", v23, 2u);
      MEMORY[0x1C3BA8270](v23, -1, -1);

      return 0;
    }

LABEL_26:
    return 0;
  }
  v7 = v6;
  if (!v4)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED762B18 != -1)
      swift_once();
    v24 = sub_1C106F544();
    sub_1C079E000(v24, (uint64_t)qword_1ED762AF8);
    v4 = sub_1C106F538();
    v25 = sub_1C1070390();
    if (os_log_type_enabled(v4, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_1C0771000, v4, v25, "Deletion: No event body found in deleteEvents of the autonamingMessagesInferenceStreamPruner", v26, 2u);
      MEMORY[0x1C3BA8270](v26, -1, -1);
    }
    goto LABEL_26;
  }
  v8 = v5;
  v4 = v4;
  v9 = sub_1C080AD1C(v4, (SEL *)&selRef_imageMessageIdentifier);
  if (!v10)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED762B18 != -1)
      swift_once();
    v27 = sub_1C106F544();
    sub_1C079E000(v27, (uint64_t)qword_1ED762AF8);
    v28 = sub_1C106F538();
    v29 = sub_1C1070390();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v30 = 0;
      _os_log_impl(&dword_1C0771000, v28, v29, "Deletion: No inferenceEventBody.imageMessageIdentifier was found", v30, 2u);
      MEMORY[0x1C3BA8270](v30, -1, -1);
    }

    goto LABEL_26;
  }
  v11 = v9;
  v12 = v10;
  v13 = sub_1C081A78C(a3);
  v15 = v14;
  v16 = sub_1C080AD1C(v4, (SEL *)&selRef_imageMessageIdentifier);
  if (!v15)
  {
    if (!v17)
      goto LABEL_37;
LABEL_29:
    swift_bridgeObjectRelease();
LABEL_30:
    v32 = -[NSObject contextMessageIdentifiers](v4, sel_contextMessageIdentifiers);
    v33 = (_QWORD *)sub_1C106FF04();

    LOBYTE(v32) = sub_1C0776614(v8, v7, v33);
    swift_bridgeObjectRelease();
    if ((v32 & 1) != 0)
    {
      if (qword_1ED762B18 != -1)
        swift_once();
      v34 = sub_1C106F544();
      sub_1C079E000(v34, (uint64_t)qword_1ED762AF8);
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v35 = sub_1C106F538();
      v36 = sub_1C10703A8();
      if (os_log_type_enabled(v35, v36))
      {
        v37 = swift_slowAlloc();
        v38 = swift_slowAlloc();
        aBlock = v38;
        *(_DWORD *)v37 = 136315394;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        sub_1C0788DAC(v8, v7, &aBlock);
        sub_1C10705AC();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v37 + 12) = 2080;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        sub_1C0788DAC(v11, v12, &aBlock);
        sub_1C10705AC();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1C0771000, v35, v36, "Deleting event: Message event contains a message id: %s that was found in the contextMessageIdentifiers array for the inferenceEventBody with image message identifier: %s", (uint8_t *)v37, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1C3BA8270](v38, -1, -1);
        MEMORY[0x1C3BA8270](v37, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      v44 = (void *)sub_1C106FAF0();
      v51 = sub_1C080BEA0;
      v52 = 0;
      aBlock = MEMORY[0x1E0C809B0];
      v48 = 1107296256;
      v45 = &unk_1E7A0CC08;
      goto LABEL_45;
    }
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    return 0;
  }
  if (!v17)
    goto LABEL_29;
  if (v13 != v16 || v15 != v17)
  {
    v19 = sub_1C1070CB4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v19 & 1) != 0)
      goto LABEL_37;
    goto LABEL_30;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_37:
  if (qword_1ED762B18 != -1)
    swift_once();
  v39 = sub_1C106F544();
  sub_1C079E000(v39, (uint64_t)qword_1ED762AF8);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v40 = sub_1C106F538();
  v41 = sub_1C10703A8();
  if (os_log_type_enabled(v40, v41))
  {
    v42 = swift_slowAlloc();
    v43 = swift_slowAlloc();
    aBlock = v43;
    *(_DWORD *)v42 = 136315394;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0788DAC(v8, v7, &aBlock);
    sub_1C10705AC();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v42 + 12) = 2080;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0788DAC(v11, v12, &aBlock);
    sub_1C10705AC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C0771000, v40, v41, "Deleting event: Message event with message id: %s and inference event with imageMessageIdentifier: %s match", (uint8_t *)v42, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3BA8270](v43, -1, -1);
    MEMORY[0x1C3BA8270](v42, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v44 = (void *)sub_1C106FAF0();
  v51 = sub_1C080BEA0;
  v52 = 0;
  aBlock = MEMORY[0x1E0C809B0];
  v48 = 1107296256;
  v45 = &unk_1E7A0CC30;
LABEL_45:
  v49 = sub_1C0CF1604;
  v50 = v45;
  v46 = _Block_copy(&aBlock);
  AnalyticsSendEventLazy();

  _Block_release(v46);
  return 1;
}

uint64_t sub_1C080BEA4()
{
  uint64_t inited;
  id v1;

  sub_1C07ACF80((uint64_t *)&unk_1ED7614C0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1079220;
  *(_QWORD *)(inited + 32) = 0xD000000000000014;
  *(_QWORD *)(inited + 40) = 0x80000001C10E3540;
  v1 = sub_1C07A4374(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_);
  *(_QWORD *)(inited + 48) = v1;
  sub_1C077583C((uint64_t)v1, (unint64_t *)&qword_1ED761490);
  return sub_1C0780FF8();
}

uint64_t sub_1C080BF4C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t (*v5)(void *, uint64_t);
  id v6;

  v5 = *(uint64_t (**)(void *, uint64_t))(a1 + 32);
  v6 = a2;
  LOBYTE(a3) = v5(a2, a3);

  return a3 & 1;
}

uint64_t sub_1C080BFA0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[30] = v0;
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  v1[31] = swift_task_alloc();
  v2 = sub_1C106ADE0();
  v1[32] = v2;
  v1[33] = *(_QWORD *)(v2 - 8);
  v1[34] = swift_task_alloc();
  v1[35] = swift_task_alloc();
  return sub_1C077AEC4();
}

uint64_t sub_1C080C02C()
{
  double *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  NSObject *v14;
  uint8_t *v15;
  uint8_t *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  unsigned int v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  int v35;
  _WORD *v36;
  const char *v37;
  NSObject *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  double v46;
  double v47;
  void (*v48)(uint64_t, uint64_t);
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t v57;
  uint64_t v58;
  os_log_type_t v59;
  int v60;
  _WORD *v61;
  os_log_type_t v63;
  uint8_t *v64;
  _QWORD *v65;
  id v66;
  uint64_t v67;

  v1 = *((_QWORD *)v0 + 30);
  v2 = sub_1C0778598();
  *((_QWORD *)v0 + 36) = v2;
  *(_QWORD *)(v2 + 16) = 0;
  v3 = sub_1C0778598();
  *((_QWORD *)v0 + 37) = v3;
  *(_QWORD *)(v3 + 16) = 0;
  v4 = *(_QWORD *)(v1 + 32);
  *((_QWORD *)v0 + 38) = v4;
  v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC24IntelligencePlatformCore28AutonamingMessagesBookmarker_bookmark);
  *((_QWORD *)v0 + 39) = v5;
  v66 = *(id *)(v1 + 40);
  *((_QWORD *)v0 + 6) = sub_1C080EA18;
  *((_QWORD *)v0 + 7) = v3;
  v6 = MEMORY[0x1E0C809B0];
  *((_QWORD *)v0 + 2) = MEMORY[0x1E0C809B0];
  *((_QWORD *)v0 + 3) = 1107296256;
  *((_QWORD *)v0 + 4) = sub_1C077A77C;
  *((_QWORD *)v0 + 5) = &unk_1E7A0CB40;
  v7 = _Block_copy(v0 + 2);
  swift_unknownObjectRetain();
  sub_1C07AD578();
  swift_release();
  *((_QWORD *)v0 + 8) = v6;
  *((_QWORD *)v0 + 12) = sub_1C080EA20;
  *((_QWORD *)v0 + 13) = v2;
  *((_QWORD *)v0 + 9) = 1107296256;
  *((_QWORD *)v0 + 10) = sub_1C0808508;
  *((_QWORD *)v0 + 11) = &unk_1E7A0CB68;
  v8 = _Block_copy(v0 + 8);
  swift_retain();
  sub_1C07758C4();
  v9 = objc_msgSend(v66, sel_drivableSinkWithBookmark_completion_shouldContinue_, v5, v7, v8);
  sub_1C079BD08();
  _Block_release(v7);

  sub_1C0775864();
  v10 = *(void **)(v2 + 16);
  *((_QWORD *)v0 + 40) = v10;
  if (!v10)
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v20 = sub_1C077585C();
    sub_1C079E000(v20, (uint64_t)qword_1ED762AF8);
    v21 = sub_1C106F538();
    v22 = sub_1C1070384();
    if (sub_1C077AF48(v21))
    {
      v23 = (uint8_t *)sub_1C0775854();
      *(_WORD *)v23 = 0;
      sub_1C077F048(&dword_1C0771000, v21, v22, "Reached end of biome queue or queue is empty", v23);
      sub_1C0776778();
    }

    sub_1C0775864();
    v24 = swift_unknownObjectRetain();
    sub_1C080EE30(v24);
    sub_1C0779714();
    sub_1C080AF44();
    sub_1C081AB48();
    swift_unknownObjectRelease();
    sub_1C077AF1C();
    goto LABEL_14;
  }
  v11 = qword_1ED762B18;
  v12 = v10;
  if (v11 != -1)
    swift_once();
  v13 = sub_1C077585C();
  *((_QWORD *)v0 + 41) = sub_1C079E000(v13, (uint64_t)qword_1ED762AF8);
  v14 = v12;
  sub_1C07A9550();
  v15 = (uint8_t *)sub_1C07919DC();
  if (sub_1C077AF48(v12))
  {
    v16 = (uint8_t *)sub_1C0775854();
    v67 = sub_1C0775854();
    *(_DWORD *)v16 = 136315138;
    v17 = sub_1C081A78C(v14);
    if (v18)
    {
      v19 = v18;
    }
    else
    {
      v17 = 0xD000000000000013;
      v19 = 0x80000001C10E34F0;
    }
    *((_QWORD *)v0 + 25) = sub_1C0788DAC(v17, v19, &v67);
    sub_1C10705AC();
    swift_bridgeObjectRelease();

    sub_1C07796F0(&dword_1C0771000, v12, (os_log_type_t)v15, "Received an event body for event: %s and beginning processing of event", v16);
    sub_1C0778610();
    sub_1C0776778();
  }

  v26 = -[NSObject hasIsDeletion](v14, sel_hasIsDeletion);
  v27 = -[NSObject isDeletion](v14, sel_isDeletion);
  if ((_DWORD)v26 && v27)
  {
    v28 = sub_1C07A9550();
    v29 = sub_1C1070384();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)sub_1C0775854();
      *(_WORD *)v30 = 0;
      sub_1C077F048(&dword_1C0771000, v28, v29, "Event received is of type deletion, performing deletion", v30);
      sub_1C0776778();
    }

    sub_1C080B550(v14);
    v31 = *((_QWORD *)v0 + 37);
    sub_1C0775864();
    v32 = sub_1C07AEDD8();
    sub_1C080EE30(v32);
    sub_1C077B658();
    v33 = sub_1C106F538();
    if ((v31 & 1) != 0)
    {
      v34 = sub_1C1070384();
      sub_1C07767E4(v34);
      sub_1C078DED0();
      if (v35)
      {
        v36 = (_WORD *)sub_1C0775854();
        sub_1C07AB690(v36);
        v37 = "Successfully updated autonaming bookmarker after publisher completion task and event was processed";
        goto LABEL_32;
      }
    }
    else
    {
      v59 = sub_1C1070390();
      sub_1C07767E4(v59);
      sub_1C078DED0();
      if (v60)
      {
        v61 = (_WORD *)sub_1C0775854();
        sub_1C07AB690(v61);
        v37 = "Unable to update autonaming bookmarker after publisher completion task";
LABEL_32:
        sub_1C077F048(&dword_1C0771000, v33, (os_log_type_t)v28, v37, v15);
        sub_1C0776778();
      }
    }

    sub_1C077FA84();
    sub_1C077AF1C();

    sub_1C0779714();
    v25 = 1;
    goto LABEL_34;
  }
  v38 = -[NSObject messageTimestamp](v14, sel_messageTimestamp);
  if (!v38)
  {
    sub_1C07B2D8C(*((_QWORD *)v0 + 31), 1, 1, *((_QWORD *)v0 + 32));
    goto LABEL_36;
  }
  v26 = v38;
  v39 = *((_QWORD *)v0 + 33);
  v11 = *((_QWORD *)v0 + 34);
  v41 = *((_QWORD *)v0 + 31);
  v40 = *((_QWORD *)v0 + 32);
  sub_1C106AD98();

  v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 32);
  v42(v41, v11, v40);
  sub_1C07B2D8C(v41, 0, 1, v40);
  if (sub_1C07B2D80(v41, 1, v40) == 1)
  {
LABEL_36:
    sub_1C077CDB4(*((_QWORD *)v0 + 31));
    sub_1C07A9550();
    v63 = sub_1C07919DC();
    if (sub_1C077C10C(v63))
    {
      v64 = (uint8_t *)sub_1C0775854();
      *(_WORD *)v64 = 0;
      sub_1C077F048(&dword_1C0771000, v26, (os_log_type_t)v11, "Event does not contain a time, continuing with processing", v64);
      sub_1C0776778();
    }

    goto LABEL_39;
  }
  v43 = *((_QWORD *)v0 + 34);
  v44 = *((_QWORD *)v0 + 32);
  v45 = *((_QWORD *)v0 + 33);
  v42(*((_QWORD *)v0 + 35), *((_QWORD *)v0 + 31), v44);
  sub_1C106ADD4();
  sub_1C106ADC8();
  v47 = v46;
  v48 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
  v48(v43, v44);
  v49 = sub_1C07A9550();
  v50 = sub_1C1070384();
  if (sub_1C077AF48(v49))
  {
    v51 = sub_1C0775854();
    *(_DWORD *)v51 = 134218240;
    v0[28] = v47;
    v52 = sub_1C10705AC();
    *(_WORD *)(v51 + 12) = 2048;
    sub_1C077583C(v52, (unint64_t *)&qword_1ED762BF0);
    v0[29] = static NSUserDefaults.autonamingMessagesProcessingDelay.getter();
    sub_1C10705AC();
    sub_1C077E89C(&dword_1C0771000, v49, v50, "Event has eventTimeDelta between message being written and current system time of: %f. Current time delta for processing an event is: %f seconds", (uint8_t *)v51);
    sub_1C0776778();
  }

  sub_1C077583C(v53, (unint64_t *)&qword_1ED762BF0);
  if (v47 < static NSUserDefaults.autonamingMessagesProcessingDelay.getter())
  {
    v54 = sub_1C106F538();
    v55 = sub_1C1070390();
    if (os_log_type_enabled(v54, v55))
    {
      v56 = (uint8_t *)sub_1C0775854();
      *(_DWORD *)v56 = 134217984;
      v0[27] = static NSUserDefaults.autonamingMessagesProcessingDelay.getter();
      sub_1C10705AC();
      sub_1C07796F0(&dword_1C0771000, v54, v55, "Cannot process event as the set time delta for processing an event: %f seconds have not yet passed since the event took place", v56);
      sub_1C0776778();
    }
    v57 = *((_QWORD *)v0 + 35);
    v58 = *((_QWORD *)v0 + 32);
    swift_unknownObjectRelease();

    v48(v57, v58);
LABEL_14:
    swift_release();
    swift_release();
    v25 = 0;
LABEL_34:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*((uint64_t (**)(uint64_t))v0 + 1))(v25);
  }
  v48(*((_QWORD *)v0 + 35), *((_QWORD *)v0 + 32));
LABEL_39:
  *((_QWORD *)v0 + 42) = sub_1C080AF44();
  v65 = (_QWORD *)swift_task_alloc();
  *((_QWORD *)v0 + 43) = v65;
  *v65 = v0;
  v65[1] = sub_1C080C930;
  return sub_1C0819984((uint64_t)v14);
}

uint64_t sub_1C080C930(char a1)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_BYTE *)(v2 + 192) = a1;
  *(_QWORD *)(v2 + 184) = v1;
  swift_task_dealloc();
  swift_release();
  return sub_1C077AEC4();
}

uint64_t sub_1C080C98C()
{
  uint64_t v0;
  os_log_type_t v1;
  os_log_type_t v2;
  uint8_t *v3;
  void *v4;
  NSObject *v5;
  id v6;
  os_log_type_t v7;
  int v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  int v19;
  _WORD *v20;
  const char *v21;
  os_log_type_t v22;
  int v23;
  _WORD *v24;
  uint64_t v26;

  v5 = *(NSObject **)(v0 + 328);
  v6 = *(id *)(v0 + 320);
  sub_1C106F538();
  v7 = sub_1C07919DC();
  if (sub_1C077AF00(v7))
  {
    v8 = *(unsigned __int8 *)(v0 + 192);
    v9 = *(void **)(v0 + 320);
    v10 = sub_1C0775854();
    v26 = sub_1C0775854();
    *(_DWORD *)v10 = 67109378;
    *(_DWORD *)(v0 + 352) = v8;
    sub_1C10705AC();
    *(_WORD *)(v10 + 8) = 2080;
    v11 = sub_1C081A78C(v9);
    if (v12)
    {
      v13 = v12;
    }
    else
    {
      v11 = 0xD000000000000013;
      v13 = 0x80000001C10E34F0;
    }
    *(_QWORD *)(v0 + 208) = sub_1C0788DAC(v11, v13, &v26);
    sub_1C10705AC();
    sub_1C0775894();

    _os_log_impl(&dword_1C0771000, v5, v1, "Made donation: %{BOOL}d for autonaming message event with messageId: %s", (uint8_t *)v10, 0x12u);
    sub_1C0778610();
    sub_1C0776778();
  }
  v14 = *(void **)(v0 + 320);

  v15 = *(_QWORD *)(v0 + 296);
  sub_1C0775864();
  v16 = sub_1C07AEDD8();
  sub_1C080EE30(v16);
  sub_1C077B658();
  v17 = sub_1C106F538();
  if ((v15 & 1) != 0)
  {
    v18 = sub_1C1070384();
    sub_1C07767E4(v18);
    sub_1C078DED0();
    if (v19)
    {
      v20 = (_WORD *)sub_1C0775854();
      sub_1C07AB690(v20);
      v21 = "Successfully updated autonaming bookmarker after publisher completion task and event was processed";
      goto LABEL_11;
    }
  }
  else
  {
    v22 = sub_1C1070390();
    sub_1C07767E4(v22);
    sub_1C078DED0();
    if (v23)
    {
      v24 = (_WORD *)sub_1C0775854();
      sub_1C07AB690(v24);
      v21 = "Unable to update autonaming bookmarker after publisher completion task";
LABEL_11:
      sub_1C077F048(&dword_1C0771000, v17, v2, v21, v3);
      sub_1C0776778();
    }
  }

  sub_1C077FA84();
  sub_1C077AF1C();

  sub_1C0779714();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
}

uint64_t sub_1C080CBFC(void *a1, uint64_t a2, uint64_t a3)
{
  id v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  os_log_type_t v15;
  const char *v16;
  uint64_t v17;

  v6 = objc_msgSend(a1, sel_state);
  if (!v6)
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v14 = sub_1C106F544();
    sub_1C079E000(v14, (uint64_t)qword_1ED762AF8);
    v9 = sub_1C106F538();
    v15 = sub_1C10703A8();
    if (!os_log_type_enabled(v9, v15))
      goto LABEL_21;
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    v16 = "processAutonamingMessagesBiome completed";
LABEL_16:
    _os_log_impl(&dword_1C0771000, v9, v15, v16, v11, 2u);
LABEL_20:
    MEMORY[0x1C3BA8270](v11, -1, -1);
LABEL_21:

    goto LABEL_22;
  }
  if (v6 != (id)1)
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v17 = sub_1C106F544();
    sub_1C079E000(v17, (uint64_t)qword_1ED762AF8);
    v9 = sub_1C106F538();
    v15 = sub_1C1070390();
    if (!os_log_type_enabled(v9, v15))
      goto LABEL_21;
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    v16 = "Error: processAutonamingMessagesBiome unexpected completion state.";
    goto LABEL_16;
  }
  if (qword_1ED762B18 != -1)
    swift_once();
  v7 = sub_1C106F544();
  sub_1C079E000(v7, (uint64_t)qword_1ED762AF8);
  v8 = a1;
  v9 = sub_1C106F538();
  v10 = sub_1C1070390();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v11 = 138412290;
    if (objc_msgSend(v8, sel_error))
    {
      v13 = _swift_stdlib_bridgeErrorToNSError();
      sub_1C10705AC();
    }
    else
    {
      sub_1C10705AC();
      v13 = 0;
    }
    *v12 = v13;

    _os_log_impl(&dword_1C0771000, v9, v10, "Error: processAutonamingMessagesBiome failed: %@", v11, 0xCu);
    sub_1C07ACF80(&qword_1ED7614A0);
    swift_arrayDestroy();
    MEMORY[0x1C3BA8270](v12, -1, -1);
    goto LABEL_20;
  }

LABEL_22:
  swift_beginAccess();
  *(_QWORD *)(a3 + 16) = a2;
  swift_unknownObjectRelease();
  return swift_unknownObjectRetain();
}

uint64_t sub_1C080CF48(void *a1, uint64_t a2)
{
  id v3;
  void *v4;

  v3 = objc_msgSend(a1, sel_eventBody);
  swift_beginAccess();
  v4 = *(void **)(a2 + 16);
  *(_QWORD *)(a2 + 16) = v3;

  return 0;
}

uint64_t sub_1C080CFB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[91] = v2;
  v3[90] = a2;
  v3[89] = a1;
  return swift_task_switch();
}

uint64_t sub_1C080CFD4()
{
  _QWORD *v0;
  os_log_type_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;

  v2 = sub_1C08102F4(v0[89], v0[90]);
  v4 = v3;
  v0[92] = v3;
  if (qword_1ED762B18 != -1)
    swift_once();
  v5 = sub_1C077585C();
  v6 = sub_1C079E000(v5, (uint64_t)qword_1ED762AF8);
  v0[93] = v6;
  sub_1C07767CC();
  sub_1C106F538();
  v7 = sub_1C07919DC();
  if (sub_1C07767E4(v7))
  {
    v8 = (uint8_t *)sub_1C0775854();
    v12 = sub_1C0775854();
    *(_DWORD *)v8 = 136315138;
    sub_1C07767B4();
    v0[88] = sub_1C077B650(v2, v9, &v12);
    sub_1C10705AC();
    sub_1C077CF6C();
    sub_1C07796F0(&dword_1C0771000, v6, v1, "Prompt created\n: %s", v8);
    sub_1C0778610();
    sub_1C0776778();
  }
  sub_1C07758A4();

  v10 = (_QWORD *)swift_task_alloc();
  v0[94] = v10;
  *v10 = v0;
  v10[1] = sub_1C080D17C;
  return sub_1C0817778(v2, v4);
}

uint64_t sub_1C080D17C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v4 = (_QWORD *)*v3;
  v4[95] = a1;
  v4[96] = a2;
  v4[97] = v2;
  swift_task_dealloc();
  if (v2)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1C080D1F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  void *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  uint64_t v13;
  uint8_t *v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  os_log_type_t inited;
  _QWORD *v29;
  int v30;
  void *v31;
  void *v32;
  void *v33;
  os_log_type_t v34;
  _BOOL4 v35;
  uint64_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  void *v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;

  v1 = *(_QWORD *)(v0 + 768);
  v2 = *(_QWORD *)(v0 + 760);
  v3 = *(NSObject **)(v0 + 744);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 648) = v2;
  *(_QWORD *)(v0 + 656) = v1;
  sub_1C07767CC();
  sub_1C106F538();
  v4 = sub_1C07919DC();
  if (sub_1C077F050(v4))
  {
    v5 = *(_QWORD *)(v0 + 760);
    v6 = (uint8_t *)sub_1C0775854();
    v48 = sub_1C0775854();
    *(_DWORD *)v6 = 136315138;
    sub_1C07767B4();
    *(_QWORD *)(v0 + 696) = sub_1C077B650(v5, v7, &v48);
    sub_1C10705AC();
    sub_1C077CF6C();
    sub_1C07796F0(&dword_1C0771000, v3, (os_log_type_t)v1, "Result from running inference on Autonaming Messages LLM: %s", v6);
    sub_1C0778610();
    sub_1C0776778();
  }
  sub_1C07758A4();

  type metadata accessor for AutonamingMessagesModelHandler();
  sub_1C0775864();
  sub_1C0815C50(*(_QWORD *)(v0 + 648), *(_QWORD *)(v0 + 656), (__int128 *)(v0 + 248));
  sub_1C07767AC();
  sub_1C080E8CC(v0 + 248, v0 + 184);
  if (*(_QWORD *)(v0 + 192) != 1)
  {
    v17 = *(_OWORD *)(v0 + 200);
    *(_OWORD *)(v0 + 120) = *(_OWORD *)(v0 + 184);
    *(_OWORD *)(v0 + 136) = v17;
    v18 = *(_OWORD *)(v0 + 232);
    *(_OWORD *)(v0 + 152) = *(_OWORD *)(v0 + 216);
    *(_OWORD *)(v0 + 168) = v18;
    sub_1C0812FEC();
    if ((v19 & 1) != 0)
    {
      v20 = *(_QWORD *)(v0 + 720);
      v21 = *(_QWORD *)(v20 + OBJC_IVAR____TtC24IntelligencePlatformCore16ImageMessageData_personIdentificationResult + 8);
      if (v21)
      {
        v22 = *(_QWORD *)(v20 + OBJC_IVAR____TtC24IntelligencePlatformCore16ImageMessageData_personIdentificationResult);
        v23 = sub_1C07B70EC();
        sub_1C080E9A0(v23, v24);
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v25 = sub_1C07B70EC();
        sub_1C07A94A4(v25, v26);
        v20 = *(_QWORD *)(v0 + 720);
      }
      else
      {
        v22 = 0;
      }
      v27 = *(_QWORD *)(v0 + 712);
      type metadata accessor for InferenceData();
      inited = swift_initStackObject();
      sub_1C07767B4();
      swift_retain();
      v29 = sub_1C0811D30(v27, v20, (v0 + 120), v22, v21);
      if (sub_1C0812918())
      {
        sub_1C080B384((uint64_t)v29);
        v30 = sub_1C080DE08(v29);
        if (v30)
        {
          if (v30 == 2)
          {
            v31 = (void *)sub_1C0798534();
            *(_QWORD *)(v0 + 536) = sub_1C080DDCC;
            *(_QWORD *)(v0 + 544) = 0;
            *(_QWORD *)(v0 + 504) = MEMORY[0x1E0C809B0];
            *(_QWORD *)(v0 + 512) = 1107296256;
            *(_QWORD *)(v0 + 520) = sub_1C0CF1604;
            *(_QWORD *)(v0 + 528) = &unk_1E7A0CA78;
            v32 = _Block_copy((const void *)(v0 + 504));
            AnalyticsSendEventLazy();
            sub_1C07758C4();
            _Block_release(v32);

            return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
          }
          v45 = *(NSObject **)(v0 + 744);
          sub_1C106F538();
          v46 = sub_1C07919DC();
          if (sub_1C077AF00(v46))
          {
            v47 = (uint8_t *)sub_1C0775854();
            *(_WORD *)v47 = 0;
            sub_1C077F048(&dword_1C0771000, v45, inited, "[Autonaming donation] Register a true positive", v47);
            sub_1C0776778();
          }

          v44 = (void *)sub_1C0798534();
          *(_QWORD *)(v0 + 392) = sub_1C080DC6C;
          *(_QWORD *)(v0 + 400) = 0;
          *(_QWORD *)(v0 + 360) = MEMORY[0x1E0C809B0];
          *(_QWORD *)(v0 + 368) = 1107296256;
          *(_QWORD *)(v0 + 376) = sub_1C0CF1604;
          *(_QWORD *)(v0 + 384) = &unk_1E7A0CAC8;
        }
        else
        {
          v41 = *(NSObject **)(v0 + 744);
          sub_1C106F538();
          v42 = sub_1C07919DC();
          if (sub_1C077AF00(v42))
          {
            v43 = (uint8_t *)sub_1C0775854();
            *(_WORD *)v43 = 0;
            sub_1C077F048(&dword_1C0771000, v41, inited, "[Autonaming donation] Register a false positive", v43);
            sub_1C0776778();
          }

          v44 = (void *)sub_1C0798534();
          *(_QWORD *)(v0 + 488) = sub_1C080DC88;
          *(_QWORD *)(v0 + 496) = 0;
          *(_QWORD *)(v0 + 456) = MEMORY[0x1E0C809B0];
          *(_QWORD *)(v0 + 464) = 1107296256;
          *(_QWORD *)(v0 + 472) = sub_1C0CF1604;
          *(_QWORD *)(v0 + 480) = &unk_1E7A0CAA0;
        }
        sub_1C07ABBDC();
        AnalyticsSendEventLazy();
        sub_1C07758C4();
        sub_1C079BD08();

        return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
      }
      sub_1C07758C4();
    }
    else
    {
      sub_1C080E914((uint64_t *)(v0 + 248));
    }
    v8 = *(NSObject **)(v0 + 744);
    v33 = (void *)sub_1C0798534();
    *(_QWORD *)(v0 + 440) = sub_1C080DDEC;
    *(_QWORD *)(v0 + 448) = 0;
    *(_QWORD *)(v0 + 408) = MEMORY[0x1E0C809B0];
    *(_QWORD *)(v0 + 416) = 1107296256;
    *(_QWORD *)(v0 + 424) = sub_1C0CF1604;
    *(_QWORD *)(v0 + 432) = &unk_1E7A0CA50;
    sub_1C07ABBDC();
    sub_1C079ED68();
    sub_1C079BD08();

    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C07AD578();
    sub_1C106F538();
    v34 = sub_1C07919DC();
    v35 = os_log_type_enabled(v8, v34);
    v36 = *(_QWORD *)(v0 + 720);
    if (v35)
    {
      v37 = (uint8_t *)sub_1C0775854();
      v48 = sub_1C0775854();
      *(_DWORD *)v37 = 136315138;
      v38 = *(_QWORD *)(v36 + 16);
      sub_1C077C0B8();
      *(_QWORD *)(v0 + 664) = sub_1C07919E4(v38, v39, &v48);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      sub_1C0775894();
      sub_1C0780A00();
      sub_1C07796F0(&dword_1C0771000, v8, v34, "Unable to donate inference for autonaming from messages from the message with unique identifier: %s, as the inferred name or participant name is nil", v37);
      sub_1C0778610();
      sub_1C0776778();
    }
    goto LABEL_18;
  }
  v8 = *(NSObject **)(v0 + 744);
  v9 = *(_QWORD *)(v0 + 712);
  v10 = (void *)sub_1C0798534();
  *(_QWORD *)(v0 + 584) = sub_1C080DB58;
  *(_QWORD *)(v0 + 592) = 0;
  *(_QWORD *)(v0 + 552) = MEMORY[0x1E0C809B0];
  *(_QWORD *)(v0 + 560) = 1107296256;
  *(_QWORD *)(v0 + 568) = sub_1C0CF1604;
  *(_QWORD *)(v0 + 576) = &unk_1E7A0CA28;
  sub_1C07ABBDC();
  sub_1C079ED68();
  sub_1C079BD08();

  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C07AD578();
  sub_1C106F538();
  v11 = sub_1C07919DC();
  v12 = sub_1C077AF00(v11);
  v13 = *(_QWORD *)(v0 + 720);
  if (v12)
  {
    v14 = (uint8_t *)sub_1C0775854();
    v48 = sub_1C0775854();
    *(_DWORD *)v14 = 136315138;
    v16 = *(_QWORD *)(v13 + 16);
    v15 = *(_QWORD *)(v13 + 24);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    *(_QWORD *)(v0 + 672) = sub_1C0788DAC(v16, v15, &v48);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    sub_1C0775894();
    sub_1C0780A00();
    sub_1C07796F0(&dword_1C0771000, v8, (os_log_type_t)v9, "Unable to donate inference for autonaming from messages from the message with unique identifier: %s, as conversion from LLM output to InferenceOutput failed", v14);
    sub_1C0778610();
    sub_1C0776778();
  }
LABEL_18:
  sub_1C0775894();
  sub_1C0780A00();

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1C080D944()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;

  v1 = (void *)v0[97];
  v2 = (void *)sub_1C0798534();
  v0[43] = sub_1C080DB34;
  v0[44] = 0;
  v0[39] = MEMORY[0x1E0C809B0];
  v0[40] = 1107296256;
  v0[41] = sub_1C0CF1604;
  v0[42] = &unk_1E7A0CA00;
  v3 = _Block_copy(v0 + 39);
  AnalyticsSendEventLazy();
  _Block_release(v3);

  v4 = v1;
  v5 = v1;
  v6 = sub_1C106F538();
  v7 = sub_1C1070390();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)sub_1C0775854();
    v12 = sub_1C0775854();
    *(_DWORD *)v8 = 136315138;
    swift_getErrorValue();
    v9 = sub_1C1070D74();
    v0[85] = sub_1C0788DAC(v9, v10, &v12);
    sub_1C10705AC();
    sub_1C077960C();
    sub_1C077E6C8();
    sub_1C077E6C8();
    sub_1C07796F0(&dword_1C0771000, v6, v7, "Unable to run inference for autonaming from messages due to error: %s", v8);
    sub_1C0778610();
    sub_1C0776778();
  }
  sub_1C077CF90();
  sub_1C077CF90();
  sub_1C077CF90();

  return ((uint64_t (*)(_QWORD))v0[1])(0);
}

uint64_t sub_1C080DB34()
{
  return sub_1C080DB74(0x6E75526C65646F6DLL, 0xED0000726F727245);
}

uint64_t sub_1C080DB58()
{
  return sub_1C080DB74(0xD00000000000001FLL, 0x80000001C10E34A0);
}

uint64_t sub_1C080DB74(uint64_t a1, uint64_t a2)
{
  uint64_t inited;
  id v5;
  id v6;
  id v7;
  id v8;

  sub_1C07ACF80((uint64_t *)&unk_1ED7614C0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1078A20;
  *(_QWORD *)(inited + 32) = 0xD000000000000019;
  *(_QWORD *)(inited + 40) = 0x80000001C10E33E0;
  v5 = sub_1C079DAF4();
  *(_QWORD *)(inited + 48) = sub_1C07A4374(v5, sel_initWithInteger_);
  *(_QWORD *)(inited + 56) = 0xD000000000000020;
  *(_QWORD *)(inited + 64) = 0x80000001C10E3400;
  v6 = sub_1C079DAF4();
  *(_QWORD *)(inited + 72) = sub_1C07A4374(v6, sel_initWithInteger_);
  *(_QWORD *)(inited + 80) = a1;
  *(_QWORD *)(inited + 88) = a2;
  v7 = sub_1C079DAF4();
  v8 = sub_1C07A4374(v7, sel_initWithInteger_);
  *(_QWORD *)(inited + 96) = v8;
  sub_1C077583C((uint64_t)v8, (unint64_t *)&qword_1ED761490);
  return sub_1C0780FF8();
}

uint64_t sub_1C080DC6C()
{
  return sub_1C080DCA4(0xD000000000000014, 0x80000001C10E3430);
}

uint64_t sub_1C080DC88()
{
  return sub_1C080DCA4(0xD000000000000015, 0x80000001C10E3450);
}

uint64_t sub_1C080DCA4(uint64_t a1, uint64_t a2)
{
  uint64_t inited;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;

  sub_1C07ACF80((uint64_t *)&unk_1ED7614C0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C10795A0;
  *(_QWORD *)(inited + 32) = 0xD000000000000019;
  *(_QWORD *)(inited + 40) = 0x80000001C10E33E0;
  v5 = sub_1C078D39C();
  *(_QWORD *)(inited + 48) = sub_1C07A4374(v5, sel_initWithInteger_);
  *(_QWORD *)(inited + 56) = 0xD000000000000020;
  *(_QWORD *)(inited + 64) = 0x80000001C10E3400;
  v6 = sub_1C078D39C();
  *(_QWORD *)(inited + 72) = sub_1C07A4374(v6, sel_initWithInteger_);
  strcpy((char *)(inited + 80), "donationMade");
  *(_BYTE *)(inited + 93) = 0;
  *(_WORD *)(inited + 94) = -5120;
  v7 = sub_1C078D39C();
  *(_QWORD *)(inited + 96) = sub_1C07A4374(v7, sel_initWithInteger_);
  *(_QWORD *)(inited + 104) = a1;
  *(_QWORD *)(inited + 112) = a2;
  v8 = sub_1C078D39C();
  v9 = sub_1C07A4374(v8, sel_initWithInteger_);
  *(_QWORD *)(inited + 120) = v9;
  sub_1C077583C((uint64_t)v9, (unint64_t *)&qword_1ED761490);
  return sub_1C0780FF8();
}

uint64_t sub_1C080DDCC()
{
  return sub_1C080DB74(0x6E6F6974616E6F64, 0xEC0000006564614DLL);
}

uint64_t sub_1C080DDEC()
{
  return sub_1C080DB74(0xD000000000000022, 0x80000001C10E3470);
}

uint64_t sub_1C080DE08(_QWORD *a1)
{
  unint64_t v1;
  uint64_t v3;
  id v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  NSObject *v17;
  id v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  os_log_type_t v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  os_log_type_t v37;
  os_log_type_t v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  os_log_type_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unsigned int v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  os_log_type_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  os_log_type_t v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char v140;
  uint64_t v141;
  void *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;

  v1 = a1[3];
  if (!v1)
    return 2;
  v3 = a1[2];
  sub_1C0778624();
  v4 = sub_1C080AFE0();
  v5 = objc_msgSend(v4, sel_librarySpecificFetchOptions);

  v6 = (void *)objc_opt_self();
  sub_1C07ACF80(&qword_1ED762CB0);
  v7 = sub_1C0778598();
  *(_OWORD *)(v7 + 16) = xmmword_1C1079220;
  *(_QWORD *)(v7 + 32) = v3;
  *(_QWORD *)(v7 + 40) = v1;
  v8 = (void *)sub_1C106FEEC();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v6, sel_fetchPersonsWithLocalIdentifiers_options_, v8, v5);

  v11 = sub_1C07878D0(v10, sel_fetchedObjects);
  if (v11)
  {
    sub_1C077583C(v12, (unint64_t *)&qword_1EF633710);
    v13 = sub_1C106FF04();

  }
  else
  {
    v13 = MEMORY[0x1E0DEE9D8];
  }
  if (v13 >> 62)
  {
    sub_1C077AE90();
    v129 = sub_1C10709B4();
    sub_1C077960C();
    if (v129 == 1)
    {
      sub_1C077AE90();
      v130 = sub_1C10709B4();
      sub_1C077960C();
      if (v130)
        goto LABEL_7;
    }
    goto LABEL_55;
  }
  if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10) != 1)
  {
LABEL_55:

    sub_1C077960C();
    return 2;
  }
LABEL_7:
  sub_1C0783D0C(0, (v13 & 0xC000000000000001) == 0, v13);
  if ((v13 & 0xC000000000000001) != 0)
    v14 = (id)MEMORY[0x1C3BA70DC](0, v13);
  else
    v14 = *(id *)(v13 + 32);
  v15 = v14;
  sub_1C077960C();
  if (qword_1ED762B18 != -1)
    swift_once();
  v16 = sub_1C077585C();
  v17 = sub_1C079E000(v16, (uint64_t)qword_1ED762AF8);
  v18 = v15;
  swift_retain();
  v145 = (uint64_t)v17;
  sub_1C106F538();
  v19 = sub_1C07919DC();
  if (os_log_type_enabled(v17, v19))
  {
    v20 = sub_1C0775854();
    v148 = sub_1C0775854();
    *(_DWORD *)v20 = 136315650;
    sub_1C0778624();
    sub_1C0788DAC(v3, v1, &v148);
    sub_1C07878C8();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2080;
    v21 = sub_1C09D01AC(v18);
    if (!v22)
      v21 = 7104878;
    sub_1C077B650(v21, v22, &v148);
    sub_1C0792D0C();

    sub_1C07767AC();
    *(_WORD *)(v20 + 22) = 2080;
    v23 = sub_1C080AD1C(v18, (SEL *)&selRef_personUri);
    if (!v24)
      v23 = 7104878;
    sub_1C077B650(v23, v24, &v148);
    sub_1C0792D0C();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0771000, v17, v19, "[Autonaming donation] Found an existing PHPerson matching the inference %s : person name %s and contact %s ", (uint8_t *)v20, 0x20u);
    swift_arrayDestroy();
    sub_1C0776778();
  }

  swift_release();
  v25 = sub_1C09D01AC(v18);
  v26 = &unk_1C1078000;
  if (!v27)
    goto LABEL_25;
  v28 = v25;
  sub_1C077C128();
  if (!v29 || !a1[5])
  {
    swift_bridgeObjectRelease();
LABEL_25:
    v50 = 2;
    v51 = 1;
    goto LABEL_26;
  }
  v30 = a1[4];
  v148 = sub_1C07B7A40();
  v149 = v31;
  HIDWORD(v138) = HIDWORD(v30);
  sub_1C106FB68();
  v33 = v32;
  sub_1C07B1280();
  sub_1C0778624();
  v34 = sub_1C07B3F50();
  sub_1C07767AC();
  sub_1C0775894();
  if ((v34 & 1) != 0)
    goto LABEL_22;
  v35 = sub_1C106FB68();
  v37 = v36;
  v148 = v35;
  v149 = v36;
  sub_1C07B7A40();
  v33 = v38;
  v34 = sub_1C07B3F50();
  sub_1C07767AC();
  sub_1C0775894();
  if ((v34 & 1) != 0)
  {
LABEL_22:
    sub_1C0778624();
    sub_1C077C0B8();
    sub_1C07A2F70();
    v39 = sub_1C07919DC();
    if (sub_1C077F050(v39))
    {
      v40 = sub_1C0775854();
      v148 = sub_1C0775854();
      *(_DWORD *)v40 = 136315394;
      sub_1C077C0B8();
      sub_1C07919E4(v28, v41, &v148);
      sub_1C079A760();
      sub_1C077CF6C();
      *(_WORD *)(v40 + 12) = 2080;
      v42 = sub_1C0778624();
      sub_1C07B8288(v42, v43, v44, v45, v46, v47, v48, v49);
      sub_1C079A760();
      sub_1C077CF6C();
      sub_1C077E89C(&dword_1C0771000, v34, v33, "[Autonaming donation] Found a name match between existing PHPerson %s and inference %s: true positive", (uint8_t *)v40);
      sub_1C0778664();
      sub_1C0776778();
    }

    sub_1C07758A4();
    sub_1C07758A4();
    v51 = 0;
    v50 = 1;
  }
  else
  {
    sub_1C0778624();
    sub_1C077C0B8();
    sub_1C07A2F70();
    v90 = sub_1C07919DC();
    if (sub_1C077C10C(v90))
    {
      v91 = sub_1C0775854();
      v148 = sub_1C0775854();
      *(_DWORD *)v91 = 136315394;
      sub_1C077C0B8();
      sub_1C07919E4(v28, v92, &v148);
      sub_1C07878C8();
      sub_1C077CF6C();
      *(_WORD *)(v91 + 12) = 2080;
      v93 = sub_1C0778624();
      sub_1C07B8288(v93, v94, v95, v96, v97, v98, v99, v100);
      sub_1C07878C8();
      sub_1C077CF6C();
      sub_1C077E89C(&dword_1C0771000, v34, v37, "[Autonaming donation] Found a name mismatch between existing PHPerson %s and inference %s: false positive", (uint8_t *)v91);
      sub_1C0778664();
      sub_1C0776778();
    }

    sub_1C07758A4();
    sub_1C07758A4();
    v51 = 0;
    v50 = 0;
  }
  v26 = (_QWORD *)&unk_1C1078000;
LABEL_26:
  v52 = sub_1C080AD1C(v18, (SEL *)&selRef_personUri);
  if (v53)
  {
    v54 = v52;
    v55 = v53;
    sub_1C077C128();
    if (v56)
    {
      v57 = a1[7];
      if (v57)
      {
        LODWORD(v138) = v51;
        v142 = v18;
        v58 = a1[6];
        v59 = v54 == v58 && v55 == v57;
        if (v59 || (sub_1C1070CB4() & 1) != 0)
        {
          sub_1C07767CC();
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          sub_1C07A2F70();
          v60 = sub_1C07919DC();
          if (sub_1C078A2DC(v60))
          {
            v146 = v58;
            v61 = v26;
            v62 = sub_1C0775854();
            v148 = sub_1C0775854();
            v63 = sub_1C07A1AE4(COERCE_FLOAT(v61[501]));
            sub_1C07B95A4(v63, v64, v65, v66, v67, v68, v69, v70);
            sub_1C079A760();
            sub_1C077CF6C();
            *(_WORD *)(v62 + 12) = 2080;
            sub_1C077C0B8();
            sub_1C07919E4(v146, v71, &v148);
            sub_1C079A760();
            sub_1C077CF6C();
            sub_1C077E89C(&dword_1C0771000, v51, (os_log_type_t)v5, "[Autonaming donation] Found a contact match between existing PHPerson %s and inference %s: true positive", (uint8_t *)v62);
            sub_1C0778664();
            sub_1C0776778();
          }

          sub_1C07758A4();
          v74 = sub_1C07758A4();
          sub_1C07BCD48(v74, v75, v76, v77, v78, v79, v80, v81, v132, v135, v138, v142);
          sub_1C079B408(v82, v83, v84, v85, v86, v87, v88, v89, v133, v136, v139, v143, v145, v5);
          v73 = 0;
          v72 = 1;
        }
        else
        {
          sub_1C07767CC();
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          sub_1C07A2F70();
          v101 = sub_1C07919DC();
          if (sub_1C078A2DC(v101))
          {
            v147 = v58;
            v102 = v26;
            v103 = sub_1C0775854();
            v148 = sub_1C0775854();
            v104 = sub_1C07A1AE4(COERCE_FLOAT(v102[501]));
            sub_1C07B95A4(v104, v105, v106, v107, v108, v109, v110, v111);
            sub_1C07878C8();
            sub_1C077CF6C();
            *(_WORD *)(v103 + 12) = 2080;
            sub_1C077C0B8();
            sub_1C07919E4(v147, v112, &v148);
            sub_1C07878C8();
            sub_1C077CF6C();
            sub_1C077E89C(&dword_1C0771000, v51, (os_log_type_t)v5, "[Autonaming donation] Found a contact mismatch between existing PHPerson %s and inference %s: false positive", (uint8_t *)v103);
            sub_1C0778664();
            sub_1C0776778();
          }

          sub_1C07758A4();
          v113 = sub_1C07758A4();
          sub_1C07BCD48(v113, v114, v115, v116, v117, v118, v119, v120, v132, v135, v138, v142);
          sub_1C079B408(v121, v122, v123, v124, v125, v126, v127, v128, v134, v137, v141, v144, v145, v5);
          v73 = 0;
          v72 = 0;
        }
        if ((v140 & 1) == 0)
          goto LABEL_51;
LABEL_38:
        if (v73)
          return 2;
        else
          return v72;
      }
    }
    sub_1C0775894();
  }

  v72 = 2;
  v73 = 1;
  if ((v51 & 1) != 0)
    goto LABEL_38;
LABEL_51:
  if ((v73 & 1) == 0)
    return v50 & v72 & 1;
  return v50;
}

id *sub_1C080E7E0()
{
  id *v0;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C07767AC();
  swift_release();

  return v0;
}

uint64_t sub_1C080E880()
{
  sub_1C080E7E0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AutonamingMessagesBiomeHandler()
{
  return objc_opt_self();
}

uint64_t sub_1C080E8C0(void *a1)
{
  return sub_1C080AD1C(a1, (SEL *)&selRef_personUri);
}

uint64_t sub_1C080E8CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80((uint64_t *)&unk_1EF630C40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_1C080E914(uint64_t *a1)
{
  sub_1C080E94C(*a1, a1[1]);
  return a1;
}

uint64_t sub_1C080E94C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C080E9A0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  return result;
}

uint64_t sub_1C080E9D0()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1C080E9F4()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C080EA18(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1C080CBFC(a1, a2, v2);
}

uint64_t sub_1C080EA20(void *a1)
{
  uint64_t v1;

  return sub_1C080CF48(a1, v1);
}

uint64_t sub_1C080EA28(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1C080B6A0(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1C080EA30()
{
  return swift_deallocObject();
}

uint64_t sub_1C080EA40()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t sub_1C080EA64(uint64_t a1)
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

uint64_t sub_1C080EAD4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C080EB98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = v2;
  v6 = type metadata accessor for Configuration();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC24IntelligencePlatformCore28AutonamingMessagesBookmarker_bookmark) = 0;
  sub_1C078E3E0(a1, v3 + OBJC_IVAR____TtC24IntelligencePlatformCore28AutonamingMessagesBookmarker_config);
  v9 = *(_QWORD *)(a2 + 80);
  v10 = (_QWORD *)(v3
                 + OBJC_IVAR____TtC24IntelligencePlatformCore28AutonamingMessagesBookmarker_autonamingBiomeBookmarkKeyValueStoreKey);
  *v10 = *(_QWORD *)(a2 + 72);
  v10[1] = v9;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v11 = sub_1C106FAF0();
  sub_1C080EAD4(a2);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC24IntelligencePlatformCore28AutonamingMessagesBookmarker_biomeUseCase) = v11;
  sub_1C078E3E0(a1, (uint64_t)v8);
  type metadata accessor for KeyValueStore();
  swift_allocObject();
  *(_QWORD *)(v3 + OBJC_IVAR____TtC24IntelligencePlatformCore28AutonamingMessagesBookmarker_kvStore) = KeyValueStore.init(config:domain:)((uint64_t)v8, 0xD000000000000012, 0x80000001C10E35E0);
  v12 = sub_1C080F0C0();
  sub_1C078D09C(a1);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC24IntelligencePlatformCore28AutonamingMessagesBookmarker_bookmark) = v12;
  swift_unknownObjectRelease();
  return v3;
}

uint64_t sub_1C080EE30(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC24IntelligencePlatformCore28AutonamingMessagesBookmarker_bookmark) = a1;
  swift_unknownObjectRetain();
  sub_1C077F634();
  return sub_1C080F6DC();
}

uint64_t sub_1C080EE60()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  _QWORD *v4;
  char v5;
  Swift::String v6;
  Swift::Bool v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  void *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  Swift::Bool v23;

  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore28AutonamingMessagesBookmarker_kvStore))
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v13 = sub_1C077585C();
    v14 = (void *)sub_1C077965C(v13, (uint64_t)qword_1ED762AF8);
    v15 = sub_1C1070390();
    if (sub_1C077F60C(v15))
    {
      *(_WORD *)sub_1C0775854() = 0;
      sub_1C0796F30(&dword_1C0771000, v16, v17, "Unable to reset bookmark for AutonamingMessagesBookmarker: kvStore is nil");
      sub_1C0776778();
    }

    return 0;
  }
  v1 = v0;
  swift_retain();
  KeyValueStore.keys()();
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC24IntelligencePlatformCore28AutonamingMessagesBookmarker_autonamingBiomeBookmarkKeyValueStoreKey);
  v3 = *(void **)(v1
                + OBJC_IVAR____TtC24IntelligencePlatformCore28AutonamingMessagesBookmarker_autonamingBiomeBookmarkKeyValueStoreKey
                + 8);
  v5 = sub_1C0776614(*(_QWORD *)(v1+ OBJC_IVAR____TtC24IntelligencePlatformCore28AutonamingMessagesBookmarker_autonamingBiomeBookmarkKeyValueStoreKey), (uint64_t)v3, v4);
  swift_bridgeObjectRelease();
  if ((v5 & 1) == 0)
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v18 = sub_1C077585C();
    sub_1C077965C(v18, (uint64_t)qword_1ED762AF8);
    v19 = sub_1C07919DC();
    if (sub_1C07758D8(v19))
    {
      *(_WORD *)sub_1C0775854() = 0;
      sub_1C078F150(&dword_1C0771000, v20, v21, "Unable to reset bookmark for AutonamingMessagesBookmarker: kvStore does not contain a bookmark");
      sub_1C0776778();
    }

    sub_1C077AF1C();
    return 0;
  }
  v6._countAndFlagsBits = (uint64_t)v2;
  v6._object = v3;
  v7 = KeyValueStore.delete(key:)(v6);
  if (v8)
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v9 = sub_1C077585C();
    v10 = sub_1C077965C(v9, (uint64_t)qword_1ED762AF8);
    v11 = sub_1C1070390();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)sub_1C0775854();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_1C0771000, v10, v11, "Unable to reset bookmark for AutonamingMessagesBookmarker: calling deletion of key failed", v12, 2u);
      sub_1C0776778();
    }
    sub_1C077AF1C();
    sub_1C077E6C8();

    return 0;
  }
  v23 = v7;
  sub_1C077AF1C();
  if (!v23)
    return 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC24IntelligencePlatformCore28AutonamingMessagesBookmarker_bookmark) = 0;
  swift_unknownObjectRelease();
  return 1;
}

uint64_t sub_1C080F0C0()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  void *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  _DWORD *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  os_log_type_t v30;
  uint8_t *v31;
  unint64_t v32;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore28AutonamingMessagesBookmarker_kvStore);
  if (!v1)
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v7 = sub_1C077585C();
    v8 = (void *)sub_1C077965C(v7, (uint64_t)qword_1ED762AF8);
    v9 = sub_1C1070384();
    if (sub_1C077F60C(v9))
    {
      *(_WORD *)sub_1C0775854() = 0;
      sub_1C0796F30(&dword_1C0771000, v10, v11, "Unable to load bookmark in loadBiomeBookmark for AutonamingMessagesBookmarker: kvStore is nil");
      sub_1C0776778();
    }

    return 0;
  }
  swift_retain();
  KeyValueStore.keys()();
  v3 = v2;
  v4 = sub_1C07814F0();
  v6 = sub_1C0776614(v4, v5, v3);
  sub_1C077960C();
  if ((v6 & 1) == 0)
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v12 = sub_1C077585C();
    v13 = sub_1C079E000(v12, (uint64_t)qword_1ED762AF8);
    swift_retain();
    sub_1C106F538();
    sub_1C07919DC();
    if (sub_1C077AF48(v13))
    {
      v14 = (_DWORD *)sub_1C0775854();
      sub_1C0775854();
      *v14 = 136315138;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v15 = sub_1C07814F0();
      v18 = sub_1C0788DAC(v15, v16, v17);
      sub_1C07936A0(v18);
      sub_1C07936B4();
      swift_release();
      swift_bridgeObjectRelease();
      sub_1C0790D94(&dword_1C0771000, v13, v19, "kvStore does not contain a value for key autonamingBiomeBookmarkKeyValueStoreKey: %s, bookmark set to nil");
      sub_1C07A2270();
      sub_1C0776778();
    }

    sub_1C077AF1C();
    goto LABEL_15;
  }
  sub_1C07814F0();
  sub_1C07F7DF4();
  if (v32 >> 60 == 15)
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v20 = sub_1C077585C();
    sub_1C077965C(v20, (uint64_t)qword_1ED762AF8);
    v21 = sub_1C07919DC();
    if (sub_1C07758D8(v21))
    {
      *(_WORD *)sub_1C0775854() = 0;
      sub_1C078F150(&dword_1C0771000, v22, v23, "Unable to decode bookmark from keyValue store, as fetch returned nil");
      sub_1C0776778();
    }

LABEL_15:
    swift_release();
    return 0;
  }
  v26 = sub_1C07D4B70(0, (unint64_t *)&unk_1ED7624C0);
  sub_1C07D4B70(0, &qword_1EF630DC8);
  v27 = sub_1C07814F0();
  sub_1C07B0E28(v27, v28);
  v24 = sub_1C10703D8();
  if (qword_1ED762B18 != -1)
    swift_once();
  v29 = sub_1C077585C();
  sub_1C077965C(v29, (uint64_t)qword_1ED762AF8);
  v30 = sub_1C07919DC();
  if (sub_1C07758D8(v30))
  {
    v31 = (uint8_t *)sub_1C0775854();
    *(_WORD *)v31 = 0;
    _os_log_impl(&dword_1C0771000, v26, OS_LOG_TYPE_DEFAULT, "Unarchived the bookmark successfully from the KeyValueStore object", v31, 2u);
    sub_1C0776778();
  }
  sub_1C077AF1C();
  sub_1C07960CC();

  return v24;
}

uint64_t sub_1C080F6DC()
{
  uint64_t v0;
  char v1;

  v0 = sub_1C077CF98();
  v1 = sub_1C080F714(v0);
  sub_1C077F634();
  return v1 & 1;
}

uint64_t sub_1C080F714(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  id v22;
  id v23;
  NSObject *v24;
  _DWORD *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42[2];

  v42[1] = *(id *)MEMORY[0x1E0C80C00];
  if (a1)
  {
    if (*(_QWORD *)(v1 + OBJC_IVAR____TtC24IntelligencePlatformCore28AutonamingMessagesBookmarker_kvStore))
    {
      v3 = (void *)objc_opt_self();
      v42[0] = 0;
      sub_1C077CF98();
      swift_retain();
      v4 = objc_msgSend(v3, sel_archivedDataWithRootObject_requiringSecureCoding_error_, a1, 1, v42);
      v5 = v42[0];
      if (v4)
      {
        v6 = sub_1C106AC18();
        v8 = v7;

        sub_1C07B0E28(v6, v8);
        sub_1C0B79840();
        sub_1C077F634();
        sub_1C07878D8();
        sub_1C07767F4();
        sub_1C07878D8();
        return 1;
      }
      v19 = v5;
      v20 = (void *)sub_1C106AA14();

      swift_willThrow();
      if (qword_1ED762B18 != -1)
        swift_once();
      v21 = sub_1C077585C();
      sub_1C079E000(v21, (uint64_t)qword_1ED762AF8);
      v22 = v20;
      v23 = v20;
      v24 = sub_1C106F538();
      sub_1C1070390();
      if (sub_1C077AF48(v24))
      {
        v25 = (_DWORD *)sub_1C0775854();
        v42[0] = (id)sub_1C0775854();
        *v25 = 136315138;
        swift_getErrorValue();
        v26 = sub_1C1070D74();
        sub_1C079C2B8(v26, v27, v28, v29, v30, v31, v32, v33, v36, v37, v38, v39, v40, v41);
        sub_1C079CBC8();
        sub_1C07936B4();
        sub_1C077960C();
        sub_1C0780A2C();
        sub_1C0780A2C();
        sub_1C0790D94(&dword_1C0771000, v24, v34, "Failed to store biome bookmark: unable to archive bookmark as a data object: %s");
        sub_1C07A2270();
        sub_1C0776778();
      }
      sub_1C07767F4();
      sub_1C077F634();
      sub_1C0780A2C();
      sub_1C0780A2C();
      sub_1C0780A2C();

    }
    else
    {
      v14 = (void *)qword_1ED762B18;
      sub_1C077CF98();
      if (v14 != (void *)-1)
        swift_once();
      v15 = sub_1C077585C();
      sub_1C077965C(v15, (uint64_t)qword_1ED762AF8);
      v16 = sub_1C07919DC();
      if (sub_1C07758D8(v16))
      {
        *(_WORD *)sub_1C0775854() = 0;
        sub_1C078F150(&dword_1C0771000, v17, v18, "Unable to store bookmark in storeBiomeBookmark for AutonamingMessagesUpdateHandler, as kvStore is nil");
        sub_1C0776778();
      }

      sub_1C077F634();
    }
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v9 = sub_1C077585C();
    v10 = (void *)sub_1C077965C(v9, (uint64_t)qword_1ED762AF8);
    v11 = sub_1C1070384();
    if (sub_1C077F60C(v11))
    {
      *(_WORD *)sub_1C0775854() = 0;
      sub_1C0796F30(&dword_1C0771000, v12, v13, "Unable to store bookmark in storeBiomeBookmark for AutonamingMessagesUpdateHandler, as bookmark is nil");
      sub_1C0776778();
    }

  }
  return 0;
}

uint64_t sub_1C080FBEC()
{
  uint64_t v0;

  sub_1C078D09C(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore28AutonamingMessagesBookmarker_config);
  swift_bridgeObjectRelease();

  swift_release();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_1C080FC54()
{
  sub_1C080FBEC();
  return swift_deallocClassInstance();
}

uint64_t sub_1C080FC78()
{
  return type metadata accessor for AutonamingMessagesBookmarker();
}

uint64_t type metadata accessor for AutonamingMessagesBookmarker()
{
  uint64_t result;

  result = qword_1EF630CD8;
  if (!qword_1EF630CD8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C080FCB8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Configuration();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t destroy for AutonamingMessagesConfig()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AutonamingMessagesConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

_QWORD *assignWithCopy for AutonamingMessagesConfig(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for AutonamingMessagesConfig(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x60uLL);
}

uint64_t assignWithTake for AutonamingMessagesConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AutonamingMessagesConfig(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 96))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for AutonamingMessagesConfig()
{
  return &type metadata for AutonamingMessagesConfig;
}

uint64_t sub_1C080FFE8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;

  sub_1C07ACF80(&qword_1ED762CB0);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C107A9E0;
  *(_QWORD *)(v2 + 32) = sub_1C106FB14();
  *(_QWORD *)(v2 + 40) = v3;
  *(_QWORD *)(v2 + 48) = sub_1C106FB14();
  *(_QWORD *)(v2 + 56) = v4;
  *(_QWORD *)(v2 + 64) = sub_1C106FB14();
  *(_QWORD *)(v2 + 72) = v5;
  *(_QWORD *)(v2 + 80) = sub_1C106FB14();
  *(_QWORD *)(v2 + 88) = v6;
  *(_QWORD *)(v2 + 96) = sub_1C106FB14();
  *(_QWORD *)(v2 + 104) = v7;
  *(_QWORD *)(v2 + 112) = sub_1C106FB14();
  *(_QWORD *)(v2 + 120) = v8;
  *(_QWORD *)(v2 + 128) = sub_1C106FB14();
  *(_QWORD *)(v2 + 136) = v9;
  *(_QWORD *)(v2 + 144) = sub_1C106FB14();
  *(_QWORD *)(v2 + 152) = v10;
  *(_QWORD *)(v2 + 160) = sub_1C106FB14();
  *(_QWORD *)(v2 + 168) = v11;
  *(_QWORD *)(v2 + 176) = sub_1C106FB14();
  *(_QWORD *)(v2 + 184) = v12;
  *(_QWORD *)(v2 + 192) = sub_1C106FB14();
  *(_QWORD *)(v2 + 200) = v13;
  *(_QWORD *)(v2 + 208) = sub_1C106FB14();
  *(_QWORD *)(v2 + 216) = v14;
  *(_QWORD *)(v2 + 224) = 0xD000000000000028;
  *(_QWORD *)(v2 + 232) = 0x80000001C10E3600;
  *(_QWORD *)(v2 + 240) = 0xD00000000000001ALL;
  *(_QWORD *)(v2 + 248) = 0x80000001C10E3630;
  *(_QWORD *)(v2 + 256) = sub_1C106FB14();
  *(_QWORD *)(v2 + 264) = v15;
  result = sub_1C106FB14();
  *(_QWORD *)(v2 + 272) = result;
  *(_QWORD *)(v2 + 280) = v17;
  *a1 = 0xD000000000000028;
  a1[1] = 0x80000001C10E3600;
  a1[2] = 0xD00000000000001ALL;
  a1[3] = 0x80000001C10E3630;
  a1[4] = 0xD00000000000001FLL;
  a1[5] = 0x80000001C10E3650;
  a1[6] = 0xD00000000000001CLL;
  a1[7] = 0x80000001C10E3670;
  a1[8] = 0x40C3880000000000;
  a1[9] = 0xD000000000000010;
  a1[10] = 0x80000001C10E3690;
  a1[11] = v2;
  return result;
}

uint64_t destroy for AutonamingMessagesConversation()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

_QWORD *_s24IntelligencePlatformCore30AutonamingMessagesConversationVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for AutonamingMessagesConversation(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for AutonamingMessagesConversation(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for AutonamingMessagesConversation()
{
  return &type metadata for AutonamingMessagesConversation;
}

uint64_t sub_1C08102F4(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t i;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  char v26;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  unint64_t v34;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[2];
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;

  v4 = sub_1C1070ED0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a2 + OBJC_IVAR____TtC24IntelligencePlatformCore16ImageMessageData_captioningResult + 8))
  {
    v34 = *(_QWORD *)(a2 + OBJC_IVAR____TtC24IntelligencePlatformCore16ImageMessageData_captioningResult);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  else
  {
    v34 = 0xD000000000000010;
  }
  v51 = 0;
  v52 = 0xE000000000000000;
  if (a1 >> 62)
    goto LABEL_54;
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  while (v8)
  {
    v9 = 0;
    v10 = a1 & 0xC000000000000001;
    v42 = a1 + 32;
    v43 = a1 & 0xFFFFFFFFFFFFFF8;
    v40 = 0x80000001C10E3800;
    v36 = a1;
    v37 = a1 & 0xC000000000000001;
    v38 = v8;
    while (1)
    {
      if (v10)
      {
        v11 = MEMORY[0x1C3BA70DC](v9, a1);
      }
      else
      {
        if (v9 >= *(_QWORD *)(v43 + 16))
          goto LABEL_53;
        v11 = swift_retain();
      }
      if (__OFADD__(v9++, 1))
        break;
      v13 = *(_QWORD *)(v11 + 112);
      if (v13)
      {
        v44 = *(_QWORD *)(v11 + 104);
        v45 = v13;
        v14 = v11;
        v15 = *(unsigned __int8 *)(v11 + 80);
        if (*(_BYTE *)(v11 + 80))
        {
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        }
        else
        {
          type metadata accessor for TextMessageData(0);
          v16 = swift_dynamicCastClass();
          v17 = v14;
          if (v16)
          {
            v41 = v14;
            v18 = *(_QWORD *)(v16 + OBJC_IVAR____TtC24IntelligencePlatformCore15TextMessageData_contentSnippet + 8);
            if (v18)
            {
              v39 = v9;
              v19 = *(_QWORD *)(v16 + OBJC_IVAR____TtC24IntelligencePlatformCore15TextMessageData_contentSnippet);
              v49 = 0;
              v50 = 0xE000000000000000;
              if ((v18 & 0x2000000000000000) != 0)
                v20 = HIBYTE(v18) & 0xF;
              else
                v20 = v19 & 0xFFFFFFFFFFFFLL;
              if (v20)
              {
                v46 = (v18 & 0xFFFFFFFFFFFFFFFLL) + 32;
                v47 = v18 & 0xFFFFFFFFFFFFFFLL;
                sub_1C079FCC0();
                swift_retain();
                sub_1C07767B4();
                for (i = 0; i < v20; i += v25)
                {
                  if ((v18 & 0x1000000000000000) != 0)
                  {
                    sub_1C1070768();
                    v25 = v24;
                  }
                  else
                  {
                    if ((v18 & 0x2000000000000000) != 0)
                    {
                      v48[0] = v19;
                      v48[1] = v47;
                      if (*((char *)v48 + i) < 0)
                      {
                        sub_1C0790DA4();
                        __asm { BR              X9 }
                      }
                    }
                    else
                    {
                      v22 = v46;
                      if ((v19 & 0x1000000000000000) == 0)
                        v22 = sub_1C10707F8();
                      if (*(char *)(v22 + i) < 0)
                      {
                        sub_1C0790DA4();
                        __asm { BR              X9 }
                      }
                    }
                    v25 = 1;
                  }
                  sub_1C1070EDC();
                  v26 = sub_1C1070EC4();
                  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
                  if ((v26 & 1) == 0)
                    sub_1C106FBE0();
                }
                sub_1C07767AC();
                v29 = v49;
                v28 = v50;
                a1 = v36;
              }
              else
              {
                sub_1C079FCC0();
                swift_retain();
                v29 = 0;
                v28 = 0xE000000000000000;
              }
              v30 = HIBYTE(v28) & 0xF;
              if ((v28 & 0x2000000000000000) == 0)
                v30 = v29 & 0xFFFFFFFFFFFFLL;
              v9 = v39;
              v10 = v37;
              if (v30)
              {
                v49 = v44;
                v50 = v45;
                _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
                sub_1C106FC94();
                sub_1C106FC94();
                sub_1C07767AC();
                sub_1C106FC94();
                sub_1C078AAA4();
                sub_1C07767AC();
                v17 = v41;
                sub_1C077AF1C();
              }
              else
              {
                v31 = v41;
                sub_1C07785A8();
                v17 = v31;
                swift_bridgeObjectRelease();
              }
              v8 = v38;
            }
            else
            {
              sub_1C079FCC0();
              v17 = v41;
            }
          }
          else
          {
            sub_1C079FCC0();
          }
          v15 = *(unsigned __int8 *)(v17 + 80);
        }
        if (v15 != 1)
        {
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_49;
        }
        v49 = 0;
        v50 = 0xE000000000000000;
        sub_1C1070774();
        swift_bridgeObjectRelease();
        v49 = v44;
        v50 = v45;
        sub_1C106FC94();
        sub_1C078AAA4();
        sub_1C07767AC();
      }
      swift_release();
LABEL_49:
      if (v9 == v8)
        goto LABEL_55;
    }
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v8 = sub_1C10709B4();
  }
LABEL_55:
  swift_bridgeObjectRelease();
  v49 = 0;
  v50 = 0xE000000000000000;
  sub_1C1070774();
  sub_1C0796F80();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C0796F80();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C0796F80();
  return v49;
}

unint64_t sub_1C0810890(unint64_t a1)
{
  uint64_t v1;
  unint64_t v3;

  v3 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
  {
    type metadata accessor for MessageData(0);
    sub_1C077E884();
    sub_1C107096C();
  }
  else
  {
    sub_1C077E884();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C1070CF0();
    type metadata accessor for MessageData(0);
  }
  swift_bridgeObjectRelease();
  sub_1C0BD9DE4();
  v1 = sub_1C077E884();
  MEMORY[0x1C3BA6800](v1);
  if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1C106FF58();
  sub_1C106FFC4();
  sub_1C106FF28();
  sub_1C08109A4(&v3);
  sub_1C077AF1C();
  return v3;
}

uint64_t sub_1C08109A4(unint64_t *a1)
{
  unint64_t v2;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *a1 = v2;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v2 & 0x8000000000000000) != 0
    || (v2 & 0x4000000000000000) != 0)
  {
    sub_1C0C6EE0C(v2);
  }
  v4 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v6[0] = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
  v6[1] = v4;
  sub_1C08110FC(v6);
  return sub_1C106FF28();
}

uint64_t sub_1C0810A28(unint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  uint64_t v6;

  v6 = MEMORY[0x1E0DEE9D8];
  if (!(a1 >> 62))
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = sub_1C07767B4();
    if (v3)
      goto LABEL_3;
LABEL_13:
    sub_1C07767AC();
    return MEMORY[0x1E0DEE9D8];
  }
  sub_1C079971C();
  result = sub_1C077AF50();
  v3 = result;
  if (!result)
    goto LABEL_13;
LABEL_3:
  if (v3 < 1)
  {
    __break(1u);
  }
  else
  {
    for (i = 0; i != v3; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        sub_1C07A437C();
      sub_1C07960EC();
      if (*(_BYTE *)(v1 + 80))
      {
        sub_1C077FA84();
      }
      else
      {
        sub_1C079D23C();
        sub_1C0798548();
        sub_1C079A770();
        sub_1C07B3F68();
      }
    }
    sub_1C07767AC();
    return v6;
  }
  return result;
}

void sub_1C0810B04(unint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = MEMORY[0x1E0DEE9D8];
  v14 = MEMORY[0x1E0DEE9D8];
  if (!(a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_1C07767B4();
    if (v4)
      goto LABEL_3;
LABEL_14:
    sub_1C07767AC();
    v6 = MEMORY[0x1E0DEE9D8];
    if ((MEMORY[0x1E0DEE9D8] & 0x8000000000000000) != 0)
      goto LABEL_25;
    goto LABEL_15;
  }
  sub_1C079971C();
  v4 = sub_1C077AF50();
  if (!v4)
    goto LABEL_14;
LABEL_3:
  if (v4 < 1)
  {
    __break(1u);
    goto LABEL_28;
  }
  for (i = 0; i != v4; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0)
      sub_1C07A437C();
    sub_1C07960EC();
    if (*(_BYTE *)(v1 + 80))
    {
      sub_1C077FA84();
    }
    else
    {
      sub_1C079D23C();
      sub_1C0798548();
      sub_1C079A770();
      sub_1C07B3F68();
    }
  }
  sub_1C07767AC();
  v6 = v14;
  if (v14 < 0)
    goto LABEL_25;
LABEL_15:
  if ((v6 & 0x4000000000000000) == 0)
  {
    v7 = *(_QWORD *)(v6 + 16);
    if (!v7)
    {
LABEL_24:
      sub_1C077AF1C();
      return;
    }
    goto LABEL_17;
  }
LABEL_25:
  sub_1C07767B4();
  v7 = sub_1C10709B4();
  sub_1C077AF1C();
  if (!v7)
    goto LABEL_24;
LABEL_17:
  sub_1C09D30E0();
  if ((v7 & 0x8000000000000000) == 0)
  {
    v8 = 0;
    do
    {
      if ((v6 & 0xC000000000000001) != 0)
        sub_1C07A437C();
      v9 = *(_QWORD *)(v6 + 8 * v8 + 32);
      swift_retain();
      v11 = *(_QWORD *)(v9 + 16);
      v10 = *(_QWORD *)(v9 + 24);
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      swift_release();
      v12 = *(_QWORD *)(v3 + 16);
      if (v12 >= *(_QWORD *)(v3 + 24) >> 1)
        sub_1C09D30E0();
      ++v8;
      *(_QWORD *)(v3 + 16) = v12 + 1;
      v13 = v3 + 16 * v12;
      *(_QWORD *)(v13 + 32) = v11;
      *(_QWORD *)(v13 + 40) = v10;
    }
    while (v7 != v8);
    goto LABEL_24;
  }
LABEL_28:
  __break(1u);
}

uint64_t sub_1C0810CD8(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  const char *v10;
  uint64_t v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  const char *v24;
  uint64_t v25;
  os_log_type_t v26;
  uint64_t v27;
  os_log_type_t v28;
  uint64_t v29;

  if (!*(_QWORD *)(a2 + OBJC_IVAR____TtC24IntelligencePlatformCore16ImageMessageData_captioningResult + 8))
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v7 = sub_1C077585C();
    sub_1C077965C(v7, (uint64_t)qword_1ED762AF8);
    v8 = sub_1C07A850C();
    if (sub_1C077F60C(v8))
    {
      v9 = (uint8_t *)sub_1C0780FC8();
      *(_WORD *)v9 = 0;
      v10 = "canGeneratePrompt: Image message does not containing a captioning result, conversation isn't eligible for prompt generation";
      goto LABEL_56;
    }
    goto LABEL_57;
  }
  if (!*(_QWORD *)(a2 + OBJC_IVAR____TtC24IntelligencePlatformCore16ImageMessageData_personIdentificationResult + 8))
  {
    if (qword_1ED762B18 == -1)
      goto LABEL_20;
    goto LABEL_60;
  }
  v2 = a1;
  v29 = MEMORY[0x1E0DEE9D8];
  if (!(a1 >> 62))
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_1C07767B4();
    if (v5)
      goto LABEL_5;
LABEL_23:
    sub_1C07767AC();
    v3 = MEMORY[0x1E0DEE9D8];
    if ((MEMORY[0x1E0DEE9D8] & 0x8000000000000000) != 0)
      goto LABEL_49;
    goto LABEL_24;
  }
  sub_1C079971C();
  v5 = sub_1C077AF50();
  if (!v5)
    goto LABEL_23;
LABEL_5:
  if (v5 < 1)
  {
    __break(1u);
LABEL_60:
    swift_once();
LABEL_20:
    v11 = sub_1C077585C();
    sub_1C077965C(v11, (uint64_t)qword_1ED762AF8);
    v12 = sub_1C07A850C();
    if (sub_1C077F60C(v12))
    {
      v9 = (uint8_t *)sub_1C0780FC8();
      *(_WORD *)v9 = 0;
      v10 = "canGeneratePrompt: Image message does not containing a person identification result, conversation isn't elig"
            "ible for prompt generation";
      goto LABEL_56;
    }
LABEL_57:

    return 0;
  }
  for (i = 0; i != v5; ++i)
  {
    if ((v2 & 0xC000000000000001) != 0)
      sub_1C07A437C();
    sub_1C07960EC();
    if (*(_BYTE *)(v4 + 80))
    {
      sub_1C077FA84();
    }
    else
    {
      sub_1C079D23C();
      sub_1C0798548();
      sub_1C079A770();
      sub_1C07B3F68();
    }
  }
  sub_1C07767AC();
  v3 = v29;
  if ((v29 & 0x8000000000000000) == 0)
  {
LABEL_24:
    if ((v3 & 0x4000000000000000) != 0)
      goto LABEL_49;
    v13 = *(_QWORD *)(v3 + 16);
    if (v13)
      goto LABEL_26;
LABEL_52:
    sub_1C07785A8();
    if (qword_1ED762B18 != -1)
      swift_once();
    v27 = sub_1C077585C();
    sub_1C077965C(v27, (uint64_t)qword_1ED762AF8);
    v28 = sub_1C07A850C();
    if (sub_1C077F60C(v28))
    {
      v9 = (uint8_t *)sub_1C0780FC8();
      *(_WORD *)v9 = 0;
      v10 = "canGeneratePrompt: Conversation does not contain any messages with text, conversation isn't eligible for prompt generation";
LABEL_56:
      _os_log_impl(&dword_1C0771000, (os_log_t)v2, (os_log_type_t)v3, v10, v9, 2u);
      sub_1C0776778();
    }
    goto LABEL_57;
  }
LABEL_49:
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v2 = sub_1C10709B4();
  sub_1C07785A8();
  if (v2 < 1)
    goto LABEL_52;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v13 = sub_1C10709B4();
  sub_1C07785A8();
  if (!v13)
  {
LABEL_37:
    sub_1C07785A8();
    return 1;
  }
LABEL_26:
  v14 = 4;
  while (1)
  {
    if ((v3 & 0xC000000000000001) != 0)
    {
      v15 = MEMORY[0x1C3BA70DC](v14 - 4, v3);
    }
    else
    {
      v15 = *(_QWORD *)(v3 + 8 * v14);
      sub_1C077E884();
    }
    v16 = v14 - 3;
    if (__OFADD__(v14 - 4, 1))
    {
      __break(1u);
      goto LABEL_49;
    }
    v17 = *(_QWORD *)(v15 + 112);
    if (!v17)
      break;
    if ((v17 & 0x2000000000000000) != 0)
      v18 = HIBYTE(v17) & 0xF;
    else
      v18 = *(_QWORD *)(v15 + 104) & 0xFFFFFFFFFFFFLL;
    if (!v18)
    {
      sub_1C07785A8();
      if (qword_1ED762B18 != -1)
        swift_once();
      v25 = sub_1C077585C();
      v21 = sub_1C077965C(v25, (uint64_t)qword_1ED762AF8);
      v26 = sub_1C1070384();
      if (sub_1C07758D8(v26))
      {
        v23 = (uint8_t *)sub_1C0780FC8();
        *(_WORD *)v23 = 0;
        v24 = "canGeneratePrompt: Observed a context message with an empty CNContactSenderFirstName, conversation isn't e"
              "ligible for prompt generation";
LABEL_46:
        _os_log_impl(&dword_1C0771000, v21, (os_log_type_t)v13, v24, v23, 2u);
        sub_1C0776778();
      }
      goto LABEL_47;
    }
    sub_1C077AF1C();
    ++v14;
    if (v16 == v13)
      goto LABEL_37;
  }
  sub_1C07785A8();
  if (qword_1ED762B18 != -1)
    swift_once();
  v20 = sub_1C077585C();
  v21 = sub_1C077965C(v20, (uint64_t)qword_1ED762AF8);
  v22 = sub_1C1070384();
  if (sub_1C07758D8(v22))
  {
    v23 = (uint8_t *)sub_1C0780FC8();
    *(_WORD *)v23 = 0;
    v24 = "canGeneratePrompt: Observed a context message without a CNContactSenderFirstName, conversation isn't eligible "
          "for prompt generation";
    goto LABEL_46;
  }
LABEL_47:

  sub_1C077AF1C();
  return 0;
}

void sub_1C08110FC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  char v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char *v80;
  uint64_t v81;
  unint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  _QWORD *v95;
  uint64_t v96;

  v3 = a1[1];
  v4 = sub_1C1070BE8();
  if (v4 >= v3)
  {
    if (v3 < 0)
      goto LABEL_128;
    if (v3)
      sub_1C08117BC(0, v3, 1, a1);
    return;
  }
  v5 = v4;
  sub_1C08CBED0(v3 / 2);
  v95 = v6;
  v96 = v7;
  v91 = v3;
  v89 = a1;
  if (v3 <= 0)
    goto LABEL_92;
  v90 = v5;
  v8 = 0;
  v9 = *a1;
  v88 = *a1 - 8;
  v10 = (char *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v11 = v8++;
    if (v8 >= v3)
      goto LABEL_20;
    swift_retain();
    swift_retain();
    v12 = sub_1C106AD50();
    swift_release();
    swift_release();
    v8 = v11 + 2;
    if (v11 + 2 >= v3)
    {
LABEL_10:
      if ((v12 & 1) == 0)
        goto LABEL_20;
LABEL_13:
      if (v8 < v11)
        goto LABEL_129;
      if (v11 < v8)
      {
        v16 = (uint64_t *)(v88 + 8 * v8);
        v17 = v8;
        v18 = v11;
        v19 = (uint64_t *)(v9 + 8 * v11);
        do
        {
          if (v18 != --v17)
          {
            if (!v9)
              goto LABEL_135;
            v20 = *v19;
            *v19 = *v16;
            *v16 = v20;
          }
          ++v18;
          --v16;
          ++v19;
        }
        while (v18 < v17);
      }
      goto LABEL_20;
    }
    v13 = v11;
    while (1)
    {
      swift_retain();
      swift_retain();
      v14 = sub_1C106AD50();
      swift_release();
      swift_release();
      if (((v12 ^ v14) & 1) != 0)
        break;
      v15 = v13 + 3;
      ++v13;
      if (v15 >= v3)
      {
        v8 = v3;
        goto LABEL_10;
      }
    }
    v8 = v13 + 2;
    if ((v12 & 1) != 0)
      goto LABEL_13;
LABEL_20:
    if (v8 < v3)
    {
      if (__OFSUB__(v8, v11))
        goto LABEL_127;
      if (v8 - v11 < v90)
      {
        if (__OFADD__(v11, v90))
          goto LABEL_130;
        if (v11 + v90 >= v3)
          v21 = v3;
        else
          v21 = v11 + v90;
        if (v21 < v11)
        {
LABEL_131:
          __break(1u);
          goto LABEL_132;
        }
        if (v8 != v21)
        {
          v22 = (uint64_t *)(v88 + 8 * v8);
          v92 = v11;
          v93 = v21;
          do
          {
            v23 = v22;
            do
            {
              swift_retain();
              swift_retain();
              v24 = sub_1C106AD50();
              swift_release();
              swift_release();
              if ((v24 & 1) == 0)
                break;
              if (!v9)
                goto LABEL_133;
              v25 = *v23;
              *v23 = v23[1];
              v23[1] = v25;
              --v23;
              ++v11;
            }
            while (v8 != v11);
            ++v8;
            ++v22;
            v11 = v92;
          }
          while (v8 != v93);
          v8 = v93;
        }
      }
    }
    if (v8 < v11)
      goto LABEL_126;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_1C0861AD0(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v27 = *((_QWORD *)v10 + 2);
    v26 = *((_QWORD *)v10 + 3);
    v28 = v27 + 1;
    if (v27 >= v26 >> 1)
      v10 = sub_1C0861AD0((char *)(v26 > 1), v27 + 1, 1, v10);
    *((_QWORD *)v10 + 2) = v28;
    v94 = v10 + 32;
    v29 = &v10[16 * v27 + 32];
    *(_QWORD *)v29 = v11;
    *((_QWORD *)v29 + 1) = v8;
    if (v27)
      break;
    v28 = 1;
LABEL_85:
    v3 = v91;
    if (v8 >= v91)
      goto LABEL_93;
  }
  v30 = v10 + 32;
  while (1)
  {
    v31 = v28 - 1;
    if (v28 >= 4)
    {
      v36 = &v30[16 * v28];
      v37 = *((_QWORD *)v36 - 8);
      v38 = *((_QWORD *)v36 - 7);
      v42 = __OFSUB__(v38, v37);
      v39 = v38 - v37;
      if (v42)
        goto LABEL_111;
      v41 = *((_QWORD *)v36 - 6);
      v40 = *((_QWORD *)v36 - 5);
      v42 = __OFSUB__(v40, v41);
      v34 = v40 - v41;
      v35 = v42;
      if (v42)
        goto LABEL_112;
      v43 = v28 - 2;
      v44 = &v30[16 * v28 - 32];
      v46 = *(_QWORD *)v44;
      v45 = *((_QWORD *)v44 + 1);
      v42 = __OFSUB__(v45, v46);
      v47 = v45 - v46;
      if (v42)
        goto LABEL_113;
      v42 = __OFADD__(v34, v47);
      v48 = v34 + v47;
      if (v42)
        goto LABEL_115;
      if (v48 >= v39)
      {
        v66 = &v30[16 * v31];
        v68 = *(_QWORD *)v66;
        v67 = *((_QWORD *)v66 + 1);
        v42 = __OFSUB__(v67, v68);
        v69 = v67 - v68;
        if (v42)
          goto LABEL_121;
        v59 = v34 < v69;
        goto LABEL_74;
      }
    }
    else
    {
      if (v28 != 3)
      {
        v60 = *((_QWORD *)v10 + 4);
        v61 = *((_QWORD *)v10 + 5);
        v42 = __OFSUB__(v61, v60);
        v53 = v61 - v60;
        v54 = v42;
        goto LABEL_68;
      }
      v33 = *((_QWORD *)v10 + 4);
      v32 = *((_QWORD *)v10 + 5);
      v42 = __OFSUB__(v32, v33);
      v34 = v32 - v33;
      v35 = v42;
    }
    if ((v35 & 1) != 0)
      goto LABEL_114;
    v43 = v28 - 2;
    v49 = &v30[16 * v28 - 32];
    v51 = *(_QWORD *)v49;
    v50 = *((_QWORD *)v49 + 1);
    v52 = __OFSUB__(v50, v51);
    v53 = v50 - v51;
    v54 = v52;
    if (v52)
      goto LABEL_116;
    v55 = &v30[16 * v31];
    v57 = *(_QWORD *)v55;
    v56 = *((_QWORD *)v55 + 1);
    v42 = __OFSUB__(v56, v57);
    v58 = v56 - v57;
    if (v42)
      goto LABEL_118;
    if (__OFADD__(v53, v58))
      goto LABEL_120;
    if (v53 + v58 >= v34)
    {
      v59 = v34 < v58;
LABEL_74:
      if (v59)
        v31 = v43;
      goto LABEL_76;
    }
LABEL_68:
    if ((v54 & 1) != 0)
      goto LABEL_117;
    v62 = &v30[16 * v31];
    v64 = *(_QWORD *)v62;
    v63 = *((_QWORD *)v62 + 1);
    v42 = __OFSUB__(v63, v64);
    v65 = v63 - v64;
    if (v42)
      goto LABEL_119;
    if (v65 < v53)
      goto LABEL_85;
LABEL_76:
    v70 = v31 - 1;
    if (v31 - 1 >= v28)
    {
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
      goto LABEL_122;
    }
    v71 = v9;
    if (!v9)
      goto LABEL_134;
    v72 = v10;
    v73 = v30;
    v74 = &v30[16 * v70];
    v75 = *(_QWORD *)v74;
    v76 = &v73[16 * v31];
    v77 = *((_QWORD *)v76 + 1);
    v78 = v71;
    sub_1C08118A4((_QWORD *)(v71 + 8 * *(_QWORD *)v74), (_QWORD *)(v71 + 8 * *(_QWORD *)v76), v71 + 8 * v77, v95);
    if (v1)
      break;
    if (v77 < v75)
      goto LABEL_108;
    if (v31 > *((_QWORD *)v72 + 2))
      goto LABEL_109;
    *(_QWORD *)v74 = v75;
    v30 = v94;
    *(_QWORD *)&v94[16 * v70 + 8] = v77;
    v79 = *((_QWORD *)v72 + 2);
    if (v31 >= v79)
      goto LABEL_110;
    v10 = v72;
    v28 = v79 - 1;
    memmove(v76, v76 + 16, 16 * (v79 - 1 - v31));
    *((_QWORD *)v72 + 2) = v79 - 1;
    v9 = v78;
    if (v79 <= 2)
      goto LABEL_85;
  }
LABEL_90:
  swift_bridgeObjectRelease();
  if (v91 >= -1)
    goto LABEL_105;
  __break(1u);
LABEL_92:
  v10 = (char *)MEMORY[0x1E0DEE9D8];
  v28 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_93:
  v80 = v10;
  if (v28 >= 2)
  {
    v81 = *v89;
    while (1)
    {
      v82 = v28 - 2;
      if (v28 < 2)
        break;
      if (!v81)
        goto LABEL_136;
      v83 = v80;
      v84 = *(_QWORD *)&v80[16 * v82 + 32];
      v85 = *(_QWORD *)&v80[16 * v28 + 24];
      sub_1C08118A4((_QWORD *)(v81 + 8 * v84), (_QWORD *)(v81 + 8 * *(_QWORD *)&v80[16 * v28 + 16]), v81 + 8 * v85, v95);
      if (v1)
        goto LABEL_90;
      if (v85 < v84)
        goto LABEL_123;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v83 = sub_1C0861BC0();
      if (v82 >= *((_QWORD *)v83 + 2))
        goto LABEL_124;
      v86 = &v83[16 * v82 + 32];
      *(_QWORD *)v86 = v84;
      *((_QWORD *)v86 + 1) = v85;
      v87 = *((_QWORD *)v83 + 2);
      if (v28 > v87)
        goto LABEL_125;
      memmove(&v83[16 * v28 + 16], &v83[16 * v28 + 32], 16 * (v87 - v28));
      v80 = v83;
      *((_QWORD *)v83 + 2) = v87 - 1;
      v28 = v87 - 1;
      if (v87 <= 2)
        goto LABEL_104;
    }
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
    goto LABEL_131;
  }
LABEL_104:
  swift_bridgeObjectRelease();
  if (v91 >= -1)
  {
LABEL_105:
    *(_QWORD *)((v96 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
    sub_1C106FF28();
    swift_bridgeObjectRelease();
    return;
  }
LABEL_132:
  __break(1u);
LABEL_133:
  __break(1u);
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
}

uint64_t sub_1C08117BC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  char v9;
  uint64_t v10;
  uint64_t v12;

  v12 = result;
  if (a3 != a2)
  {
    v4 = a3;
    v5 = *a4;
    v6 = *a4 + 8 * a3 - 8;
    while (2)
    {
      v7 = v12;
      v8 = (uint64_t *)v6;
      do
      {
        swift_retain();
        swift_retain();
        v9 = sub_1C106AD50();
        swift_release();
        result = swift_release();
        if ((v9 & 1) == 0)
          break;
        if (!v5)
        {
          __break(1u);
          return result;
        }
        v10 = *v8;
        *v8 = v8[1];
        v8[1] = v10;
        --v8;
        ++v7;
      }
      while (v4 != v7);
      ++v4;
      v6 += 8;
      if (v4 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_1C08118A4(_QWORD *a1, _QWORD *a2, unint64_t a3, _QWORD *a4)
{
  _QWORD *v4;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  unint64_t v14;
  char v15;
  _QWORD *v16;
  BOOL v17;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  BOOL v26;
  _QWORD *v29;
  _QWORD *v30;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = (char *)a2 - (char *)a1;
  v9 = a2 - a1;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 8;
  if (v9 >= v11)
  {
    sub_1C09D2054(a2, (uint64_t)(a3 - (_QWORD)a2) / 8, a4);
    v12 = &v4[v11];
    if (v7 >= v6 || v10 < 8)
      goto LABEL_38;
    v20 = (_QWORD *)(a3 - 8);
    v29 = v4;
    while (1)
    {
      v30 = v20 + 1;
      v21 = v12 - 1;
      v22 = v6 - 1;
      v23 = (unint64_t)v12;
      swift_retain();
      swift_retain();
      v24 = sub_1C106AD50();
      swift_release();
      swift_release();
      if ((v24 & 1) != 0)
      {
        v25 = v30 != v6 || v20 >= v6;
        --v6;
        v4 = v29;
        v12 = (_QWORD *)v23;
        if (!v25)
          goto LABEL_34;
      }
      else
      {
        v26 = v30 != (_QWORD *)v23 || (unint64_t)v20 >= v23;
        v22 = v21;
        v12 = v21;
        v4 = v29;
        if (!v26)
          goto LABEL_34;
      }
      *v20 = *v22;
LABEL_34:
      --v20;
      if (v6 <= v7 || v12 <= v4)
        goto LABEL_38;
    }
  }
  sub_1C09D2054(a1, a2 - a1, a4);
  v12 = &v4[v9];
  if ((unint64_t)v6 < a3 && v8 >= 8)
  {
    do
    {
      v14 = (unint64_t)v12;
      swift_retain();
      swift_retain();
      v15 = sub_1C106AD50();
      swift_release();
      swift_release();
      if ((v15 & 1) != 0)
      {
        v16 = v6;
        v17 = v7 == v6++;
      }
      else
      {
        v16 = v4;
        v17 = v7 == v4++;
      }
      v12 = (_QWORD *)v14;
      if (!v17)
        *v7 = *v16;
      ++v7;
    }
    while ((unint64_t)v4 < v14 && (unint64_t)v6 < a3);
  }
  v6 = v7;
LABEL_38:
  sub_1C09D2054(v4, v12 - v4, v6);
  return 1;
}

uint64_t sub_1C0811AD4()
{
  sub_1C077584C();
  sub_1C079855C();
  sub_1C0778580();
  sub_1C07A0764();
  sub_1C1070774();
  swift_bridgeObjectRelease();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0794CD8();
  swift_bridgeObjectRelease();
  sub_1C07A0764();
  sub_1C07796D8();
  sub_1C0794CD8();
  sub_1C0775844();
  swift_bridgeObjectRelease();
  sub_1C0792D20();
  sub_1C1070204();
  sub_1C07A0764();
  sub_1C07796D8();
  sub_1C106FC94();
  sub_1C0775844();
  sub_1C0778580();
  return 0x44496E6F73726570;
}

uint64_t sub_1C0811C24()
{
  _QWORD v1[2];

  sub_1C1070774();
  swift_bridgeObjectRelease();
  strcpy((char *)v1, "imageCaption: ");
  sub_1C07767B4();
  sub_1C106FC94();
  sub_1C07767AC();
  sub_1C07A0764();
  sub_1C0792D20();
  sub_1C1070204();
  sub_1C07A0764();
  sub_1C07767B4();
  sub_1C079855C();
  sub_1C07767AC();
  sub_1C0778580();
  return v1[0];
}

uint64_t sub_1C0811D24()
{
  return sub_1C0811C24();
}

_QWORD *sub_1C0811D30(uint64_t a1, uint64_t a2, NSObject *a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  Class isa;
  NSObject v10;
  BOOL v11;

  v5[6] = 0;
  v5[7] = 0;
  v5[2] = a4;
  v5[3] = a5;
  v10.isa = a3->isa;
  isa = a3[1].isa;
  if (isa)
  {
    v11 = v10.isa == (Class)0x5241454C434E55 && isa == (Class)0xE700000000000000;
    if (!v11 && (sub_1C1070CB4() & 1) == 0)
    {
      v5[4] = v10.isa;
      v5[5] = isa;
      v5[12] = 0x3FECCCCCCCCCCCCDLL;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      goto LABEL_10;
    }
    v5[4] = 0;
    v5[5] = 0;
  }
  else
  {
    v5[4] = v10.isa;
    v5[5] = 0;
  }
  v5[12] = 0;
LABEL_10:
  v5[8] = 0;
  v5[9] = 0;
  v5[10] = a1;
  v5[11] = a2;
  sub_1C07796D8();
  swift_retain();
  sub_1C0811E1C(a3);
  swift_release();
  sub_1C0775844();
  sub_1C078C798();
  return v5;
}

void sub_1C0811E1C(NSObject *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  Class isa;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  _QWORD *v21;
  uint64_t v22;
  os_log_type_t v23;
  uint8_t *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  uint64_t v47;
  Class v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  _QWORD v81[4];
  __int128 v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  void (*v86)(char *, uint64_t);
  unint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  unint64_t v90;
  char *v91;
  uint64_t v92;
  unint64_t v93;
  _QWORD *v94;
  NSObject *v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;

  v92 = sub_1C106A7E0();
  v3 = *(_QWORD *)(v92 - 8);
  MEMORY[0x1E0C80A78](v92);
  v91 = (char *)v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (_QWORD *)v1[11];
  v6 = v5[14];
  if (v6)
  {
    isa = a1[7].isa;
    if (isa)
    {
      v8 = (_QWORD *)v5[9];
      if (v8)
      {
        v89 = v1;
        v94 = v5;
        v95 = a1;
        v9 = (uint64_t)a1[6].isa;
        v97 = v5[13];
        v98 = v6;
        sub_1C077584C();
        sub_1C077C0B8();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v10 = v91;
        sub_1C106A7A4();
        v11 = sub_1C07B1280();
        v93 = sub_1C10705E8();
        v13 = v12;
        v14 = *(void (**)(char *, uint64_t))(v3 + 8);
        v15 = v92;
        v14(v10, v92);
        sub_1C0778580();
        v88 = v9;
        v97 = v9;
        v98 = (unint64_t)isa;
        v90 = (unint64_t)isa;
        sub_1C106A7A4();
        v87 = v11;
        v16 = sub_1C10705E8();
        v18 = v17;
        v86 = v14;
        v14(v10, v15);
        if (v93 == v16 && v13 == v18)
        {
          sub_1C07758A4();
        }
        else
        {
          v20 = sub_1C079B410();
          swift_bridgeObjectRelease();
          sub_1C077960C();
          if ((v20 & 1) == 0)
          {
            sub_1C0775894();
            v21 = v89;
            goto LABEL_30;
          }
        }
        v21 = v89;
        v25 = v94;
        if (v8[2])
        {
          v27 = v8[4];
          v26 = v8[5];
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          sub_1C0775894();
        }
        else
        {
          sub_1C0775894();
          v27 = 0;
          v26 = 0;
        }
        v21[6] = v27;
        v21[7] = v26;
        swift_bridgeObjectRelease();
        if (qword_1ED762B18 != -1)
          swift_once();
        v28 = sub_1C077585C();
        v29 = sub_1C079E000(v28, (uint64_t)qword_1ED762AF8);
        swift_retain_n();
        v30 = v95;
        sub_1C0812F44((uint64_t)v95);
        swift_retain();
        sub_1C0812F44((uint64_t)v30);
        sub_1C106F538();
        v31 = sub_1C07919DC();
        if (sub_1C079E204(v31))
        {
          v32 = sub_1C0775854();
          v33 = sub_1C0775854();
          v97 = v33;
          *(_DWORD *)v32 = 136315650;
          v34 = v25[14];
          v93 = v33;
          if (v34)
          {
            v35 = v25[13];
            v36 = v34;
          }
          else
          {
            v35 = 0xD00000000000001BLL;
            v36 = 0x80000001C10E38F0;
          }
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          v96 = sub_1C0788DAC(v35, v36, &v97);
          sub_1C07936C0();
          sub_1C07878F0();
          swift_bridgeObjectRelease();
          *(_WORD *)(v32 + 12) = 2080;
          v37 = v90;
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          v96 = sub_1C0788DAC(v88, v37, &v97);
          sub_1C07936C0();
          swift_bridgeObjectRelease();
          sub_1C078C798();
          sub_1C078C798();
          *(_WORD *)(v32 + 22) = 2080;
          v38 = (_QWORD *)v25[9];
          v39 = 0x80000001C10E3910;
          if (v38 && v38[2])
          {
            v40 = v38[4];
            v39 = v38[5];
            sub_1C07767B4();
          }
          else
          {
            v40 = 0xD000000000000021;
          }
          v41 = sub_1C0788DAC(v40, v39, &v97);
          sub_1C07A4388(v41);
          sub_1C07878F0();
          sub_1C07767AC();
          sub_1C078BFF8(&dword_1C0771000, v29, v31, "[Image Message] Found a match between the output of the LLM and the sender first name, self.imageMessage.CNContactSenderFirstName: %s \n modelInferenceOutput.participantName: %s \n  imageMessage.senderContactIdentifiers?.first %s ", (uint8_t *)v32);
          swift_arrayDestroy();
          sub_1C0776778();
        }
        sub_1C07878F0();
        sub_1C0812F98((uint64_t)v30);
        sub_1C0812F98((uint64_t)v30);

        sub_1C07878F0();
LABEL_30:
        v42 = sub_1C0810A28(v21[10]);
        if (v42 >> 62)
        {
          v44 = sub_1C10709B4();
          if (v44)
            goto LABEL_32;
        }
        else
        {
          v44 = *(_QWORD *)((v42 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v44)
          {
LABEL_32:
            v81[0] = v89 + 6;
            v93 = v42 & 0xC000000000000001;
            v45 = 4;
            *(_QWORD *)&v43 = 136315650;
            v82 = v43;
            v81[2] = "entityIdentifier: ";
            v81[1] = "no CNContactSenderFirstName";
            v81[3] = MEMORY[0x1E0DEE9B8] + 8;
            v84 = v44;
            v85 = v42;
            while (1)
            {
              if (v93)
                v46 = MEMORY[0x1C3BA70DC](v45 - 4, v42);
              else
                v46 = swift_retain();
              v47 = v45 - 3;
              if (__OFADD__(v45 - 4, 1))
              {
                __break(1u);
                goto LABEL_80;
              }
              v48 = v46[14].isa;
              if (v48)
                break;
              swift_release();
LABEL_56:
              ++v45;
              if (v47 == v44)
                goto LABEL_82;
            }
            v94 = (_QWORD *)(v45 - 3);
            v95 = v46;
            v97 = (uint64_t)v46[13].isa;
            v98 = (unint64_t)v48;
            sub_1C077584C();
            v49 = v91;
            sub_1C106A7A4();
            v50 = sub_1C10705E8();
            v52 = v51;
            v53 = v92;
            v54 = v86;
            v86(v49, v92);
            sub_1C0778580();
            v97 = v88;
            v98 = v90;
            sub_1C106A7A4();
            v55 = sub_1C10705E8();
            v57 = v56;
            v54(v49, v53);
            if (v50 == v55 && v52 == v57)
            {
              sub_1C07878E4();
            }
            else
            {
              v59 = sub_1C079B410();
              sub_1C07767AC();
              sub_1C077960C();
              if ((v59 & 1) == 0)
                goto LABEL_54;
            }
            v60 = v95[9].isa;
            if (v60)
            {
              v61 = v89[7];
              v62 = v60[2];
              if (!v61)
              {
                if (v62)
                {
                  v64 = v60[4];
                  v65 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
                }
                else
                {
                  v64 = 0;
                  v65 = 0;
                }
                v66 = v89;
                v89[6] = v64;
                v66[7] = v65;
                sub_1C07767B4();
                swift_bridgeObjectRelease();
                if (qword_1ED762B18 != -1)
                  swift_once();
                v67 = sub_1C077585C();
                v68 = sub_1C079E000(v67, (uint64_t)qword_1ED762AF8);
                swift_bridgeObjectRetain_n();
                swift_retain_n();
                sub_1C07767B4();
                sub_1C106F538();
                v69 = sub_1C07919DC();
                if (sub_1C079E204(v69))
                {
                  v70 = sub_1C0775854();
                  v83 = sub_1C0775854();
                  v97 = v83;
                  *(_DWORD *)v70 = v82;
                  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
                  *(_QWORD *)(v70 + 4) = sub_1C07960FC();
                  sub_1C07878F0();
                  sub_1C077589C();
                  *(_WORD *)(v70 + 12) = 2080;
                  v71 = v90;
                  sub_1C077584C();
                  *(_QWORD *)(v70 + 14) = sub_1C0788DAC(v88, v71, &v97);
                  swift_bridgeObjectRelease_n();
                  *(_WORD *)(v70 + 22) = 2080;
                  if (!v62)
                  {
LABEL_69:
                    *(_QWORD *)(v70 + 24) = sub_1C07960FC();
                    sub_1C07878E4();
                    sub_1C077589C();
                    sub_1C078BFF8(&dword_1C0771000, v68, v69, "[Context Message] Found a match between the output of the LLM and the sender first name, contextMessage.CNContactSenderFirstName: %s \n modelInferenceOutput.participantName: %s \n  contextMessage.senderContactIdentifiers?.first %s ", (uint8_t *)v70);
                    swift_arrayDestroy();
                    sub_1C0776778();
                  }
                  if (v60[2])
                  {
                    sub_1C077C0B8();
                    goto LABEL_69;
                  }
                  __break(1u);
LABEL_86:
                  swift_once();
LABEL_71:
                  v73 = sub_1C077585C();
                  v74 = sub_1C079E000(v73, (uint64_t)qword_1ED762AF8);
                  swift_retain_n();
                  sub_1C07796D8();
                  sub_1C07767B4();
                  sub_1C106F538();
                  v75 = sub_1C07919DC();
                  if (sub_1C079E204(v75))
                  {
                    v76 = sub_1C0775854();
                    v97 = sub_1C0775854();
                    *(_DWORD *)v76 = v82;
                    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
                    v96 = sub_1C07960FC();
                    sub_1C10705AC();
                    sub_1C07878F0();
                    sub_1C077589C();
                    *(_WORD *)(v76 + 12) = 2080;
                    if (!v62)
                    {
                      v78 = 0;
                      v77 = 0xE000000000000000;
LABEL_78:
                      v79 = sub_1C0788DAC(v78, v77, &v97);
                      sub_1C07A4388(v79);
                      sub_1C07878E4();
                      sub_1C077589C();
                      *(_WORD *)(v76 + 22) = 2080;
                      v80 = v90;
                      sub_1C077C0B8();
                      v96 = sub_1C0788DAC(v88, v80, &v97);
                      sub_1C10705AC();
                      swift_bridgeObjectRelease_n();
                      sub_1C078BFF8(&dword_1C0771000, v74, v75, "[Image+Context Message] Found conflicting matches between two contacts %s and %s for the participant name inferred %s: returning nil as inferredContactIdentifier instead", (uint8_t *)v76);
                      swift_arrayDestroy();
                      sub_1C0776778();
                    }
                    if (v60[2])
                    {
                      v78 = v60[4];
                      v77 = v60[5];
                      sub_1C077C0B8();
                      goto LABEL_78;
                    }
                    __break(1u);
                  }
                  else
                  {
                    sub_1C07814FC();

                    sub_1C07758A4();
                    sub_1C07878E4();
                    sub_1C07878F0();
                  }
                  return;
                }

                sub_1C07878E4();
                sub_1C07758A4();
                swift_release_n();
                goto LABEL_55;
              }
              if (!v62 || (v89[6] == v60[4] ? (v63 = v61 == v60[5]) : (v63 = 0), !v63 && (sub_1C1070CB4() & 1) == 0))
              {
                sub_1C07767B4();
                swift_bridgeObjectRelease();
                v72 = v81[0];
                *(_QWORD *)v81[0] = 0;
                *(_QWORD *)(v72 + 8) = 0;
                swift_bridgeObjectRelease();
                if (qword_1ED762B18 != -1)
                  goto LABEL_86;
                goto LABEL_71;
              }
            }
LABEL_54:
            swift_release();
LABEL_55:
            v44 = v84;
            v42 = v85;
            v47 = (uint64_t)v94;
            goto LABEL_56;
          }
        }
LABEL_82:
        sub_1C077960C();
        swift_bridgeObjectRelease();
        if (v89[7])
          v89[12] = 0x3FECCCCCCCCCCCCDLL;
        return;
      }
    }
  }
  if (qword_1ED762B18 != -1)
LABEL_80:
    swift_once();
  v22 = sub_1C077585C();
  sub_1C079E000(v22, (uint64_t)qword_1ED762AF8);
  v95 = sub_1C106F538();
  v23 = sub_1C1070384();
  if (os_log_type_enabled(v95, v23))
  {
    v24 = (uint8_t *)sub_1C0775854();
    *(_WORD *)v24 = 0;
    _os_log_impl(&dword_1C0771000, v95, v23, "Unable to run deriveInferredContactIdentifier due to missing data", v24, 2u);
    sub_1C0776778();
  }

}

BOOL sub_1C0812918()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 56) || *(_QWORD *)(v0 + 40) != 0;
}

id sub_1C0812938()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = v0[3];
  v2 = v0[5];
  v15 = v0[4];
  v16 = v0[2];
  v3 = v0[7];
  v14 = v0[6];
  v4 = v0[8];
  v5 = v0[9];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C077584C();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v6 = (void *)sub_1C1070168();
  v9 = v0 + 10;
  v8 = v0[10];
  v7 = v9[1];
  v11 = *(_QWORD *)(v7 + OBJC_IVAR____TtC24IntelligencePlatformCore16ImageMessageData_relatedMessageUniqueIdentifier);
  v10 = *(_QWORD *)(v7 + OBJC_IVAR____TtC24IntelligencePlatformCore16ImageMessageData_relatedMessageUniqueIdentifier + 8);
  sub_1C07796D8();
  sub_1C0810B04(v8);
  v12 = objc_allocWithZone(MEMORY[0x1E0D01F20]);
  return sub_1C0812DC8(v16, v1, v15, v2, v14, v3, v4, v5, v6, v11, v10);
}

uint64_t sub_1C0812A28()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1C07767AC();
  return v0;
}

uint64_t sub_1C0812A70()
{
  sub_1C0812A28();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for InferenceData()
{
  return objc_opt_self();
}

uint64_t initializeWithCopy for PersonIdentificationResult(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

uint64_t assignWithCopy for PersonIdentificationResult(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  return a1;
}

__n128 initializeWithTake for PersonIdentificationResult(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for PersonIdentificationResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for PersonIdentificationResult(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 36))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PersonIdentificationResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 36) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 36) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonIdentificationResult()
{
  return &type metadata for PersonIdentificationResult;
}

uint64_t sub_1C0812C60(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

uint64_t assignWithCopy for CaptioningResult(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

__n128 initializeWithTake for CaptioningResult(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u32[0] = a2[1].n128_u32[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for CaptioningResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for CaptioningResult(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 20))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CaptioningResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_DWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 20) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 20) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CaptioningResult()
{
  return &type metadata for CaptioningResult;
}

id sub_1C0812DC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11)
{
  void *v11;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;

  if (a2)
  {
    v15 = (void *)sub_1C106FAF0();
    swift_bridgeObjectRelease();
    if (a4)
      goto LABEL_3;
LABEL_6:
    v16 = 0;
    if (a6)
      goto LABEL_4;
    goto LABEL_7;
  }
  v15 = 0;
  if (!a4)
    goto LABEL_6;
LABEL_3:
  v16 = (void *)sub_1C106FAF0();
  swift_bridgeObjectRelease();
  if (a6)
  {
LABEL_4:
    v17 = (void *)sub_1C106FAF0();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
LABEL_7:
  v17 = 0;
LABEL_8:
  if (!a8)
  {
    v18 = 0;
    if (a11)
      goto LABEL_10;
LABEL_12:
    v19 = 0;
    goto LABEL_13;
  }
  v18 = (void *)sub_1C106FAF0();
  swift_bridgeObjectRelease();
  if (!a11)
    goto LABEL_12;
LABEL_10:
  v19 = (void *)sub_1C106FAF0();
  swift_bridgeObjectRelease();
LABEL_13:
  v20 = (void *)sub_1C106FEEC();
  swift_bridgeObjectRelease();
  v21 = objc_msgSend(v11, sel_initWithPhotosPersonIdentifier_inferredName_inferredContactIdentifier_inferredRelationshipToDeviceOwner_confidence_imageMessageIdentifier_contextMessageIdentifiers_, v15, v16, v17, v18, a9, v19, v20);

  return v21;
}

uint64_t sub_1C0812F44(uint64_t a1)
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

uint64_t sub_1C0812F98(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1C0812FEC()
{
  _QWORD *v0;
  uint64_t v1;
  BOOL v2;
  uint64_t v3;

  v1 = v0[7];
  if (v1)
  {
    v2 = v0[6] == 0x5241454C434E55 && v1 == 0xE700000000000000;
    if (v2 || (sub_1C07A3710() & 1) != 0)
    {
      v3 = v0[1];
      if (v3)
      {
        if (*v0 != 0x5241454C434E55 || v3 != 0xE700000000000000)
          sub_1C07A3710();
      }
    }
  }
  sub_1C0778534();
}

ValueMetadata *type metadata accessor for AutonamingMessagesInferenceOutput()
{
  return &type metadata for AutonamingMessagesInferenceOutput;
}

void sub_1C081307C()
{
  sub_1C1070A2C();
  swift_bridgeObjectRelease();
  sub_1C0778534();
}

uint64_t sub_1C08130C4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C08130F0 + 4 * byte_1C107AB10[a1]))(1162690894, 0xE400000000000000);
}

uint64_t sub_1C08130F8()
{
  return sub_1C07A2280();
}

uint64_t sub_1C0813108(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0813134 + 4 * byte_1C107AB14[a1]))(1162690894, 0xE400000000000000);
}

uint64_t sub_1C081313C()
{
  return sub_1C07A2280();
}

void sub_1C081314C(char *a1)
{
  sub_1C08C4B08(*a1);
}

void sub_1C0813158()
{
  sub_1C0A53DD4();
}

void sub_1C0813160(uint64_t a1)
{
  char *v1;

  sub_1C08C92BC(a1, *v1);
}

void sub_1C0813168()
{
  sub_1C0A544FC();
}

void sub_1C0813170(_BYTE *a1@<X8>)
{
  char v2;

  sub_1C081307C();
  *a1 = v2;
}

uint64_t sub_1C081319C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1C08130C4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C08131C4()
{
  unsigned __int8 *v0;

  return sub_1C0813108(*v0);
}

uint64_t sub_1C08131CC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C08130C0();
  *a1 = result;
  return result;
}

void sub_1C08131F0(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1C08131FC()
{
  sub_1C08137A8();
  return sub_1C1070EE8();
}

uint64_t sub_1C0813224()
{
  sub_1C08137A8();
  return sub_1C1070EF4();
}

uint64_t sub_1C081324C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  char v32;

  v5 = sub_1C07ACF80(&qword_1EF630EE0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07A9480(a1, a1[3]);
  sub_1C08137A8();
  sub_1C1070E94();
  if (v2)
    return sub_1C0775880();
  v32 = 0;
  v9 = sub_1C0799730();
  v11 = v10;
  v27 = v9;
  v31 = 1;
  sub_1C077EB44();
  v12 = sub_1C0799730();
  v28 = v13;
  v26 = v12;
  v30 = 2;
  sub_1C077EB44();
  v24 = sub_1C1070AA4();
  v25 = v14;
  v29 = 3;
  sub_1C077EB44();
  v15 = sub_1C0799730();
  v17 = v16;
  v18 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19 = v15;
  v18(v8, v5);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v20 = v28;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C077B5B4();
  swift_bridgeObjectRelease();
  sub_1C0775880();
  swift_bridgeObjectRelease();
  v21 = v25;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = sub_1C077B5B4();
  *a2 = v27;
  a2[1] = v11;
  a2[2] = v26;
  a2[3] = v20;
  a2[4] = v24;
  a2[5] = v21;
  a2[6] = v19;
  a2[7] = v17;
  return result;
}

void sub_1C0813494(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;

  v4 = a1[1];
  v5 = a2[1];
  if (v4)
  {
    if (!v5)
      goto LABEL_28;
    v6 = *a1 == *a2 && v4 == v5;
    if (!v6 && (sub_1C07785B0() & 1) == 0)
      goto LABEL_28;
  }
  else if (v5)
  {
    goto LABEL_28;
  }
  v7 = a1[3];
  v8 = a2[3];
  if (v7)
  {
    if (!v8)
      goto LABEL_28;
    v9 = a1[2] == a2[2] && v7 == v8;
    if (!v9 && (sub_1C07785B0() & 1) == 0)
      goto LABEL_28;
  }
  else if (v8)
  {
    goto LABEL_28;
  }
  v10 = a1[5];
  v11 = a2[5];
  if (!v10)
  {
    if (!v11)
      goto LABEL_29;
LABEL_28:
    sub_1C0778534();
    return;
  }
  if (!v11)
    goto LABEL_28;
  v12 = a1[4] == a2[4] && v10 == v11;
  if (!v12 && (sub_1C07785B0() & 1) == 0)
    goto LABEL_28;
LABEL_29:
  v13 = a1[7];
  v14 = a2[7];
  if (!v13 || !v14)
    goto LABEL_28;
  if (a1[6] == a2[6] && v13 == v14)
    goto LABEL_28;
  sub_1C1070CB4();
}

uint64_t sub_1C08135B0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  char v11;
  _BYTE v12[16];
  _BYTE v13[16];
  _BYTE v14[16];
  _BYTE v15[16];

  v3 = v1;
  v5 = sub_1C07ACF80(&qword_1EF630EF0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07A9480(a1, a1[3]);
  sub_1C08137A8();
  sub_1C1070EB8();
  sub_1C08137E4(v3, (uint64_t)v15);
  sub_1C079A780((uint64_t)v15);
  v11 = 0;
  sub_1C07ACF80(&qword_1ED762B50);
  sub_1C081382C();
  sub_1C07A6788();
  if (!v2)
  {
    sub_1C08137E4(v3 + 16, (uint64_t)v14);
    sub_1C079A780((uint64_t)v14);
    v11 = 1;
    sub_1C07A6788();
    sub_1C08137E4(v3 + 32, (uint64_t)v13);
    sub_1C079A780((uint64_t)v13);
    v11 = 2;
    sub_1C07A6788();
    sub_1C08137E4(v3 + 48, (uint64_t)v12);
    sub_1C079A780((uint64_t)v12);
    v11 = 3;
    sub_1C07A6788();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

double sub_1C081372C@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[2];
  __int128 v8;
  __int128 v9;

  sub_1C081324C(a1, (uint64_t *)v7);
  if (!v2)
  {
    v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    result = *(double *)&v8;
    v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_1C081376C(_QWORD *a1)
{
  return sub_1C08135B0(a1);
}

unint64_t sub_1C08137A8()
{
  unint64_t result;

  result = qword_1EF630EE8;
  if (!qword_1EF630EE8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107ACC8, &type metadata for AutonamingMessagesInferenceOutput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF630EE8);
  }
  return result;
}

uint64_t sub_1C08137E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1ED762B50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C081382C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EF630EF8;
  if (!qword_1EF630EF8)
  {
    v1 = sub_1C07D4BEC(&qword_1ED762B50);
    v2 = MEMORY[0x1E0DEA970];
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0DEE988], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EF630EF8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AutonamingMessagesInferenceOutput.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1C08138D4 + 4 * byte_1C107AB1D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1C0813908 + 4 * byte_1C107AB18[v4]))();
}

uint64_t sub_1C0813908(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0813910(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0813918);
  return result;
}

uint64_t sub_1C0813924(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C081392CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1C0813930(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0813938(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AutonamingMessagesInferenceOutput.CodingKeys()
{
  return &type metadata for AutonamingMessagesInferenceOutput.CodingKeys;
}

unint64_t sub_1C0813958()
{
  unint64_t result;

  result = qword_1EF630F00;
  if (!qword_1EF630F00)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107ACA0, &type metadata for AutonamingMessagesInferenceOutput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF630F00);
  }
  return result;
}

unint64_t sub_1C0813998()
{
  unint64_t result;

  result = qword_1EF630F08;
  if (!qword_1EF630F08)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107ABD8, &type metadata for AutonamingMessagesInferenceOutput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF630F08);
  }
  return result;
}

unint64_t sub_1C08139D8()
{
  unint64_t result;

  result = qword_1EF630F10;
  if (!qword_1EF630F10)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107AC00, &type metadata for AutonamingMessagesInferenceOutput.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF630F10);
  }
  return result;
}

void sub_1C0813A14(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  id v38;
  id v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  id v45;
  id v46;
  unsigned __int8 v47;
  id v48;
  uint64_t v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v4);
  sub_1C0778564();
  v7 = v6 - v5;
  v8 = (int *)sub_1C07BC5EC();
  v9 = (uint64_t)a2 + v8[13];
  v56 = sub_1C077AE98();
  v57 = v9;
  sub_1C07B2D8C(v9, 1, 1, v56);
  v10 = sub_1C07A67A8();
  v11 = objc_msgSend(v10, sel_attributeDictionary);

  sub_1C106F940();
  sub_1C079D244();
  sub_1C0790DBC();
  sub_1C077B5B4();
  v12 = sub_1C07A1B04();
  if (v60)
  {
    v13 = swift_dynamicCast();
    v14 = v58;
    v15 = v59;
    if (!v13)
    {
      v14 = 0;
      v15 = 0;
    }
  }
  else
  {
    sub_1C079C2C4(v12, &qword_1ED760400);
    v14 = 0;
    v15 = 0;
  }
  *a2 = v14;
  a2[1] = v15;
  v16 = sub_1C07A67A8();
  a2[2] = sub_1C0814F88(v16, (SEL *)&selRef_uniqueIdentifier);
  a2[3] = v17;
  v18 = sub_1C07A67A8();
  a2[4] = sub_1C081DA20(v18);
  a2[5] = v19;
  v20 = sub_1C07A67A8();
  sub_1C0814FF4(v20, (SEL *)&selRef_contentTypeTree);
  a2[6] = v21;
  v22 = sub_1C07A67A8();
  sub_1C0814FF4(v22, (SEL *)&selRef_recipientNames);
  a2[7] = v23;
  v24 = sub_1C07A67A8();
  v25 = objc_msgSend(v24, sel_attributeDictionary);

  sub_1C07AACC8();
  sub_1C106FB14();
  sub_1C079D244();
  sub_1C0790DBC();
  sub_1C077B5B4();
  v26 = sub_1C07A1B04();
  if (v60)
  {
    sub_1C07ACF80(&qword_1ED762B70);
    v27 = sub_1C07936D0();
    v28 = v58;
    if (!v27)
      v28 = 0;
  }
  else
  {
    sub_1C079C2C4(v26, &qword_1ED760400);
    v28 = 0;
  }
  a2[8] = v28;
  v29 = sub_1C07A67A8();
  sub_1C0814FF4(v29, (SEL *)&selRef_authorNames);
  a2[9] = v30;
  v31 = sub_1C07A67A8();
  v32 = objc_msgSend(v31, sel_attributeDictionary);

  sub_1C07AACC8();
  sub_1C106FB14();
  sub_1C079D244();
  sub_1C0790DBC();
  sub_1C077B5B4();
  v33 = sub_1C07A1B04();
  if (v60)
  {
    sub_1C07ACF80(&qword_1ED762B70);
    v34 = sub_1C07936D0();
    v35 = v58;
    if (!v34)
      v35 = 0;
  }
  else
  {
    sub_1C079C2C4(v33, &qword_1ED760400);
    v35 = 0;
  }
  a2[10] = v35;
  v36 = sub_1C07A67A8();
  a2[11] = sub_1C0814F88(v36, (SEL *)&selRef_contentSnippet);
  a2[12] = v37;
  v38 = sub_1C07A67A8();
  v39 = objc_msgSend(v38, sel_contentCreationDate);

  if (v39)
  {
    sub_1C106AD98();

    v40 = 0;
  }
  else
  {
    v40 = 1;
  }
  sub_1C07B2D8C(v7, v40, 1, v56);
  sub_1C0806880(v7, v57);
  v41 = sub_1C07A67A8();
  v42 = sub_1C0814F88(v41, (SEL *)&selRef_relatedUniqueIdentifier);
  v43 = (_QWORD *)((char *)a2 + v8[14]);
  *v43 = v42;
  v43[1] = v44;
  v45 = sub_1C07A67A8();
  v46 = objc_msgSend(v45, sel_eligibleForPhotosProcessing);

  if (v46)
  {
    v47 = objc_msgSend(v46, sel_BOOLValue);

  }
  else
  {
    v47 = 2;
  }
  *((_BYTE *)a2 + v8[15]) = v47;
  v48 = sub_1C07A67A8();
  sub_1C0814FF4(v48, (SEL *)&selRef_attachmentNames);
  *(_QWORD *)((char *)a2 + v8[16]) = v49;
  v50 = sub_1C07A67A8();
  v51 = objc_msgSend(v50, sel_messageType);

  if (v51)
  {
    v52 = sub_1C106FB14();
    v54 = v53;

  }
  else
  {

    v52 = 0;
    v54 = 0;
  }
  v55 = (_QWORD *)((char *)a2 + v8[17]);
  *v55 = v52;
  v55[1] = v54;
}

uint64_t sub_1C0813F10(_QWORD *a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  os_log_type_t v15;
  _WORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  os_log_type_t v22;
  _WORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = v3;
  *(_OWORD *)(v3 + 120) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  v5 = (void *)a1[3];
  if (!v5)
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v14 = sub_1C077585C();
    sub_1C077965C(v14, (uint64_t)qword_1ED762AF8);
    v15 = sub_1C07919DC();
    if (sub_1C077AF00(v15))
    {
      v16 = (_WORD *)sub_1C0780FC8();
      sub_1C07A7CA0(v16);
      sub_1C0798520(&dword_1C0771000, v17, v18, "MessageData: cannot initialize base class: provided ExtractedAttributes object contains no uniqueIdentifier");
      sub_1C0776778();
    }

    v19 = sub_1C077AE98();
    sub_1C078AAB4(v19);
    sub_1C078C7A0();
    goto LABEL_14;
  }
  v6 = a1[1];
  *(_QWORD *)(v4 + 16) = a1[2];
  *(_QWORD *)(v4 + 24) = v5;
  if (!v6)
  {
    v20 = qword_1ED762B18;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    if (v20 != -1)
      swift_once();
    v21 = sub_1C077585C();
    sub_1C077965C(v21, (uint64_t)qword_1ED762AF8);
    v22 = sub_1C07919DC();
    if (sub_1C077AF00(v22))
    {
      v23 = (_WORD *)sub_1C0780FC8();
      sub_1C07A7CA0(v23);
      sub_1C0798520(&dword_1C0771000, v24, v25, "MessageData: cannot instantiate base class: provided ExtractedAttributes object contains no conversationIdentifier");
      sub_1C0776778();
    }

    v26 = sub_1C077AE98();
    sub_1C078AAB4(v26);
    sub_1C078C7A0();
    swift_bridgeObjectRelease();
LABEL_14:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for MessageData(0);
    sub_1C07A439C();
    return 0;
  }
  *(_QWORD *)(v4 + 32) = *a1;
  *(_QWORD *)(v4 + 40) = v6;
  v7 = a1[8];
  *(_QWORD *)(v4 + 48) = a1[7];
  *(_QWORD *)(v4 + 56) = v7;
  v8 = a1[10];
  *(_QWORD *)(v4 + 64) = a1[9];
  *(_QWORD *)(v4 + 72) = v8;
  *(_BYTE *)(v4 + 80) = a2;
  v9 = (_QWORD *)((char *)a1 + *(int *)(sub_1C07BC5EC() + 68));
  v10 = *v9;
  v11 = v9[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C077E6D0();
  sub_1C078C7A0();
  *(_QWORD *)(v4 + 88) = v10;
  *(_QWORD *)(v4 + 96) = v11;
  v12 = v4 + OBJC_IVAR____TtC24IntelligencePlatformCore11MessageData_contentCreationDate;
  v13 = sub_1C077AE98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v12, a3, v13);
  return v4;
}

uint64_t sub_1C081413C(void *a1)
{
  _QWORD *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = objc_msgSend(a1, sel_givenName);
  v4 = sub_1C106FB14();
  v6 = v5;

  v1[13] = v4;
  v1[14] = v6;
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(a1, sel_familyName);
  v8 = sub_1C106FB14();
  v10 = v9;

  v1[15] = v8;
  v1[16] = v10;
  return swift_bridgeObjectRelease();
}

void sub_1C08141D0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v0 = sub_1C077AE98();
  sub_1C077B5C8(v0);
  sub_1C0778534();
}

uint64_t sub_1C0814244()
{
  return sub_1C0814D10(sub_1C08141D0);
}

uint64_t sub_1C0814250()
{
  return type metadata accessor for MessageData(0);
}

uint64_t type metadata accessor for MessageData(uint64_t a1)
{
  return sub_1C0784B00(a1, qword_1EF630F40);
}

uint64_t sub_1C081426C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C106ADE0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_1C081430C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  const char *v31;
  uint64_t v32;
  os_log_type_t v33;
  uint64_t v34;
  _QWORD v35[2];

  v2 = v1;
  v4 = sub_1C07BC5EC();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  sub_1C0778564();
  v8 = (_QWORD *)(v7 - v6);
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v9);
  sub_1C0778564();
  v12 = v11 - v10;
  v13 = sub_1C077AE98();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v35 - v18;
  v20 = (_QWORD *)a1[6];
  if (!v20)
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v27 = sub_1C077585C();
    sub_1C077965C(v27, (uint64_t)qword_1ED762AF8);
    v28 = sub_1C07919DC();
    if (sub_1C07892C0(v28))
    {
      *(_WORD *)sub_1C0780FC8() = 0;
      v31 = "TextMessageData cannot be initialized: provided ExtractedAttributes object does not contain a contentTypeTree";
      goto LABEL_17;
    }
LABEL_18:

    sub_1C079F2F8();
LABEL_19:
    type metadata accessor for TextMessageData(0);
    sub_1C07A439C();
    goto LABEL_20;
  }
  if ((sub_1C0776614(0x6D2E63696C627570, 0xEE00656761737365, v20) & 1) == 0)
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v32 = sub_1C077585C();
    sub_1C077965C(v32, (uint64_t)qword_1ED762AF8);
    v33 = sub_1C07919DC();
    if (sub_1C07892C0(v33))
    {
      *(_WORD *)sub_1C0780FC8() = 0;
      v31 = "TextMessageData cannot be initialized: provided ExtractedAttributes object is not a text message and cannot "
            "be initialized as a TextMessageData";
LABEL_17:
      sub_1C0794CE8(&dword_1C0771000, v29, v30, v31);
      sub_1C0776778();
    }
    goto LABEL_18;
  }
  v21 = a1[12];
  v22 = (_QWORD *)(v2 + OBJC_IVAR____TtC24IntelligencePlatformCore15TextMessageData_contentSnippet);
  *v22 = a1[11];
  v22[1] = v21;
  v35[1] = v22;
  sub_1C077CD6C((uint64_t)a1 + *(int *)(v4 + 52), v12);
  if (sub_1C07B2D80(v12, 1, v13) == 1)
  {
    sub_1C077E6D0();
    sub_1C0784B6C(v12, (uint64_t *)&unk_1ED762690);
    if (qword_1ED762B18 != -1)
      swift_once();
    v23 = sub_1C077585C();
    sub_1C077965C(v23, (uint64_t)qword_1ED762AF8);
    v24 = sub_1C07919DC();
    if (sub_1C07892C0(v24))
    {
      *(_WORD *)sub_1C0780FC8() = 0;
      sub_1C0794CE8(&dword_1C0771000, v25, v26, "TextMessageData cannot be initialized: provided ExtractedAttributes object does not contain a contentCreationDate");
      sub_1C0776778();
    }

    sub_1C079F2F8();
    sub_1C0786364();
    goto LABEL_19;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(v19, v12, v13);
  sub_1C0814F2C((uint64_t)a1, (uint64_t)v8);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v16, v19, v13);
  sub_1C077E6D0();
  v34 = sub_1C0813F10(v8, 0, (uint64_t)v16);
  swift_retain();
  sub_1C079F2F8();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
  if (v34)
    swift_release();
LABEL_20:
  sub_1C0776760();
}

BOOL sub_1C0814644()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore15TextMessageData_contentSnippet + 8);
  if (!v1)
    return 1;
  if ((v1 & 0x2000000000000000) != 0)
    v2 = HIBYTE(v1) & 0xF;
  else
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore15TextMessageData_contentSnippet) & 0xFFFFFFFFFFFFLL;
  return v2 == 0;
}

uint64_t sub_1C0814680()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0814694()
{
  sub_1C08141D0();
  sub_1C077F060();
  sub_1C077C7D4();
  return swift_deallocClassInstance();
}

uint64_t sub_1C08146B8()
{
  return type metadata accessor for TextMessageData(0);
}

uint64_t type metadata accessor for TextMessageData(uint64_t a1)
{
  return sub_1C0784B00(a1, qword_1EF631088);
}

uint64_t sub_1C08146D4()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1C0814714()
{
  sub_1C1070774();
  sub_1C078F17C();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C078F17C();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C07ACF80(&qword_1ED762B50);
  sub_1C106FB5C();
  sub_1C078F17C();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  sub_1C077AE98();
  sub_1C0815044();
  sub_1C1070C0C();
  sub_1C078F17C();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  return 0;
}

void sub_1C0814868(_QWORD *a1, uint64_t a2)
{
  _BYTE *v2;
  _BYTE *v3;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _BYTE *v21;
  _BYTE *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  os_log_type_t v31;
  _WORD *v32;
  uint64_t v33;
  uint64_t v34;
  const char *v35;
  uint64_t v36;
  os_log_type_t v37;
  _WORD *v38;
  _BYTE *v39;
  _QWORD *v40;
  uint64_t v41;
  os_log_type_t v42;
  _WORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[2];
  _BYTE *v51;
  _BYTE *v52;
  uint64_t v53;
  _QWORD *v54;

  v3 = v2;
  v53 = a2;
  v5 = (int *)sub_1C07BC5EC();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0778564();
  v9 = (_QWORD *)(v8 - v7);
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v10);
  sub_1C0778564();
  v13 = v12 - v11;
  v14 = sub_1C077AE98();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v50 - v19;
  v21 = &v3[OBJC_IVAR____TtC24IntelligencePlatformCore16ImageMessageData_captioningResult];
  *(_QWORD *)v21 = 0;
  *((_QWORD *)v21 + 1) = 0;
  v52 = v21;
  *((_DWORD *)v21 + 4) = 0;
  v22 = &v3[OBJC_IVAR____TtC24IntelligencePlatformCore16ImageMessageData_personIdentificationResult];
  *((_DWORD *)v22 + 8) = 0;
  *(_OWORD *)v22 = 0u;
  *((_OWORD *)v22 + 1) = 0u;
  v54 = a1;
  v23 = (_QWORD *)a1[6];
  if (!v23)
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v30 = sub_1C077585C();
    sub_1C077965C(v30, (uint64_t)qword_1ED762AF8);
    v31 = sub_1C07919DC();
    if (sub_1C077AF00(v31))
    {
      v32 = (_WORD *)sub_1C0780FC8();
      sub_1C07A7CA0(v32);
      v35 = "ImageMessageData cannot be initialized: provided ExtractedAttributes object does not contain a contentTypeTree";
      goto LABEL_13;
    }
LABEL_14:

    sub_1C07919EC();
    sub_1C0814EF0((uint64_t)v54);
LABEL_15:
    sub_1C0786364();
    sub_1C07A94A4(*(_QWORD *)v22, *((_QWORD *)v22 + 1));
    type metadata accessor for ImageMessageData(0);
    sub_1C07A439C();
    goto LABEL_16;
  }
  if ((sub_1C0776614(0x692E63696C627570, 0xEC0000006567616DLL, v23) & 1) == 0)
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v36 = sub_1C077585C();
    sub_1C077965C(v36, (uint64_t)qword_1ED762AF8);
    v37 = sub_1C07919DC();
    if (sub_1C077AF00(v37))
    {
      v38 = (_WORD *)sub_1C0780FC8();
      sub_1C07A7CA0(v38);
      v35 = "ImageMessageData cannot be initialized: provided ExtractedAttributes object is not an image message";
LABEL_13:
      sub_1C0798520(&dword_1C0771000, v33, v34, v35);
      sub_1C0776778();
    }
    goto LABEL_14;
  }
  v51 = v3;
  v25 = v53;
  v24 = (uint64_t)v54;
  v26 = (_QWORD *)((char *)v54 + v5[14]);
  v27 = v26[1];
  if (v27)
  {
    v28 = *v26;
    v29 = v27;
  }
  else
  {
    v28 = 0;
    v29 = 0xE000000000000000;
  }
  v39 = v51;
  v40 = &v51[OBJC_IVAR____TtC24IntelligencePlatformCore16ImageMessageData_relatedMessageUniqueIdentifier];
  *v40 = v28;
  v40[1] = v29;
  v50[1] = v40;
  v39[OBJC_IVAR____TtC24IntelligencePlatformCore16ImageMessageData_imageEligibleForPhotosProcessing] = *(_BYTE *)(v24 + v5[15]) & 1;
  sub_1C077CD6C(v25 + v5[13], v13);
  if (sub_1C07B2D80(v13, 1, v14) == 1)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0784B6C(v13, (uint64_t *)&unk_1ED762690);
    if (qword_1ED762B18 != -1)
      swift_once();
    v41 = sub_1C077585C();
    sub_1C077965C(v41, (uint64_t)qword_1ED762AF8);
    v42 = sub_1C07919DC();
    if (sub_1C077AF00(v42))
    {
      v43 = (_WORD *)sub_1C0780FC8();
      sub_1C07A7CA0(v43);
      sub_1C0798520(&dword_1C0771000, v44, v45, "ImageMessageData cannot be initialized: provided ExtractedAttributes object contains an image, but does not contain a content creation date");
      sub_1C0776778();
    }

    sub_1C07919EC();
    sub_1C0814EF0((uint64_t)v54);
    sub_1C0786364();
    goto LABEL_15;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 32))(v20, v13, v14);
  v46 = (uint64_t)v54;
  v47 = *(_QWORD *)((char *)v54 + v5[16]);
  v48 = MEMORY[0x1E0DEE9D8];
  if (v47)
    v48 = v47;
  *(_QWORD *)&v39[OBJC_IVAR____TtC24IntelligencePlatformCore16ImageMessageData_attachmentNames] = v48;
  sub_1C0814F2C(v46, (uint64_t)v9);
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v17, v20, v14);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v49 = sub_1C0813F10(v9, 1, (uint64_t)v17);
  swift_retain();
  sub_1C07919EC();
  sub_1C078C7A0();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
  if (v49)
    swift_release();
LABEL_16:
  sub_1C0776760();
}

uint64_t sub_1C0814C70()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C077F060();
  swift_bridgeObjectRelease();
  sub_1C077F060();
  v0 = sub_1C0792D2C(OBJC_IVAR____TtC24IntelligencePlatformCore16ImageMessageData_personIdentificationResult);
  return sub_1C07A94A4(v0, v1);
}

uint64_t sub_1C0814CB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C08141D0();
  sub_1C077F060();
  swift_bridgeObjectRelease();
  sub_1C077F060();
  v1 = sub_1C0792D2C(OBJC_IVAR____TtC24IntelligencePlatformCore16ImageMessageData_personIdentificationResult);
  sub_1C07A94A4(v1, v2);
  return v0;
}

uint64_t sub_1C0814D04()
{
  return sub_1C0814D10((void (*)(void))sub_1C0814CB4);
}

uint64_t sub_1C0814D10(void (*a1)(void))
{
  a1();
  sub_1C077C7D4();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0814D28()
{
  return type metadata accessor for ImageMessageData(0);
}

uint64_t type metadata accessor for ImageMessageData(uint64_t a1)
{
  return sub_1C0784B00(a1, qword_1EF6311E8);
}

uint64_t sub_1C0814D44()
{
  return swift_updateClassMetadata2();
}

uint64_t storeEnumTagSinglePayload for MessageContentType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C0814DFC + 4 * byte_1C107AD25[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C0814E30 + 4 * byte_1C107AD20[v4]))();
}

uint64_t sub_1C0814E30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0814E38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0814E40);
  return result;
}

uint64_t sub_1C0814E4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0814E54);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C0814E58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0814E60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MessageContentType()
{
  return &type metadata for MessageContentType;
}

unint64_t sub_1C0814E80()
{
  unint64_t result;

  result = qword_1EF631380;
  if (!qword_1EF631380)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107AEC4, &type metadata for MessageContentType);
    atomic_store(result, (unint64_t *)&qword_1EF631380);
  }
  return result;
}

uint64_t sub_1C0814EBC()
{
  return sub_1C0814714();
}

uint64_t type metadata accessor for ExtractedAttributes(uint64_t a1)
{
  return sub_1C0784B00(a1, qword_1EF6313E0);
}

uint64_t sub_1C0814EF0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ExtractedAttributes(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0814F2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ExtractedAttributes(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0814F70(void *a1)
{
  return sub_1C0814F88(a1, (SEL *)&selRef_uniqueIdentifier);
}

void sub_1C0814F7C(void *a1)
{
  sub_1C0814FF4(a1, (SEL *)&selRef_contentTypeTree);
}

uint64_t sub_1C0814F88(void *a1, SEL *a2)
{
  void *v2;
  id v3;
  uint64_t v4;

  v3 = sub_1C07A5B8C(a1, a2);

  if (!v3)
    return 0;
  v4 = sub_1C106FB14();

  return v4;
}

void sub_1C0814FE8(void *a1)
{
  sub_1C0814FF4(a1, (SEL *)&selRef_attachmentNames);
}

void sub_1C0814FF4(void *a1, SEL *a2)
{
  void *v2;
  id v3;

  v3 = sub_1C07A5B8C(a1, a2);

  if (v3)
  {
    sub_1C106FF04();

  }
  sub_1C0778534();
}

unint64_t sub_1C0815044()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED7565B0;
  if (!qword_1ED7565B0)
  {
    v1 = sub_1C106ADE0();
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0CB08F0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED7565B0);
  }
  return result;
}

_QWORD *sub_1C0815084(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v26;
  char *v27;
  char *__dst;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    v10 = a2[7];
    a1[6] = a2[6];
    a1[7] = v10;
    v11 = a2[9];
    a1[8] = a2[8];
    a1[9] = v11;
    v12 = a2[11];
    a1[10] = a2[10];
    a1[11] = v12;
    v13 = a3[13];
    __dst = (char *)a1 + v13;
    v27 = (char *)a2 + v13;
    a1[12] = a2[12];
    v26 = sub_1C106ADE0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    if (sub_1C07B2D80((uint64_t)v27, 1, v26))
    {
      v14 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
      memcpy(__dst, v27, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(__dst, v27, v26);
      sub_1C07B2D8C((uint64_t)__dst, 0, 1, v26);
    }
    v16 = a3[14];
    v17 = a3[15];
    v18 = (_QWORD *)((char *)v4 + v16);
    v19 = (_QWORD *)((char *)a2 + v16);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    *((_BYTE *)v4 + v17) = *((_BYTE *)a2 + v17);
    v21 = a3[17];
    *(_QWORD *)((char *)v4 + a3[16]) = *(_QWORD *)((char *)a2 + a3[16]);
    v22 = (_QWORD *)((char *)v4 + v21);
    v23 = (_QWORD *)((char *)a2 + v21);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  return v4;
}

uint64_t sub_1C0815260(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 52);
  v5 = sub_1C106ADE0();
  if (!sub_1C07B2D80(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1C0815334(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v23;
  char *v24;
  char *__dst;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  v9 = a2[9];
  a1[8] = a2[8];
  a1[9] = v9;
  v10 = a2[11];
  a1[10] = a2[10];
  a1[11] = v10;
  v11 = a3[13];
  __dst = (char *)a1 + v11;
  v24 = (char *)a2 + v11;
  a1[12] = a2[12];
  v23 = sub_1C106ADE0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  if (sub_1C07B2D80((uint64_t)v24, 1, v23))
  {
    v12 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
    memcpy(__dst, v24, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(__dst, v24, v23);
    sub_1C07B2D8C((uint64_t)__dst, 0, 1, v23);
  }
  v13 = a3[14];
  v14 = a3[15];
  v15 = (_QWORD *)((char *)a1 + v13);
  v16 = (_QWORD *)((char *)a2 + v13);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  *((_BYTE *)a1 + v14) = *((_BYTE *)a2 + v14);
  v18 = a3[17];
  *(_QWORD *)((char *)a1 + a3[16]) = *(_QWORD *)((char *)a2 + a3[16]);
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

_QWORD *sub_1C08154E4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;

  *a1 = *a2;
  a1[1] = a2[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  a1[12] = a2[12];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  v6 = a3[13];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C106ADE0();
  v10 = sub_1C07B2D80((uint64_t)v7, 1, v9);
  v11 = sub_1C07B2D80((uint64_t)v8, 1, v9);
  if (!v10)
  {
    v12 = *(_QWORD *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v13 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  sub_1C07B2D8C((uint64_t)v7, 0, 1, v9);
LABEL_7:
  v14 = a3[14];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
  *(_QWORD *)((char *)a1 + a3[16]) = *(_QWORD *)((char *)a2 + a3[16]);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  v17 = a3[17];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  *v18 = *v19;
  v18[1] = v19[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0815760(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v8 = a3[13];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  v11 = sub_1C106ADE0();
  if (sub_1C07B2D80((uint64_t)v10, 1, v11))
  {
    v12 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    sub_1C07B2D8C((uint64_t)v9, 0, 1, v11);
  }
  v13 = a3[15];
  *(_OWORD *)(a1 + a3[14]) = *(_OWORD *)(a2 + a3[14]);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  v14 = a3[17];
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  return a1;
}

_QWORD *sub_1C0815864(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  swift_bridgeObjectRelease();
  v9 = a2[12];
  a1[11] = a2[11];
  a1[12] = v9;
  swift_bridgeObjectRelease();
  v10 = a3[13];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1C106ADE0();
  v14 = sub_1C07B2D80((uint64_t)v11, 1, v13);
  v15 = sub_1C07B2D80((uint64_t)v12, 1, v13);
  if (!v14)
  {
    v16 = *(_QWORD *)(v13 - 8);
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v17 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  sub_1C07B2D8C((uint64_t)v11, 0, 1, v13);
LABEL_7:
  v18 = a3[14];
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  v22 = *v20;
  v21 = v20[1];
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  v23 = a3[16];
  *((_BYTE *)a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
  *(_QWORD *)((char *)a1 + v23) = *(_QWORD *)((char *)a2 + v23);
  swift_bridgeObjectRelease();
  v24 = a3[17];
  v25 = (_QWORD *)((char *)a1 + v24);
  v26 = (_QWORD *)((char *)a2 + v24);
  v28 = *v26;
  v27 = v26[1];
  *v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0815A4C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0815A58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
    return sub_1C07B2D80(a1 + *(int *)(a3 + 52), a2, v9);
  }
}

uint64_t sub_1C0815ADC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0815AE8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
    return sub_1C07B2D8C(v5 + *(int *)(a4 + 52), a2, a2, v7);
  }
  return result;
}

void sub_1C0815B58()
{
  unint64_t v0;

  sub_1C0815BFC();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1C0815BFC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED75E4E0)
  {
    sub_1C106ADE0();
    v0 = sub_1C1070564();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED75E4E0);
  }
}

uint64_t sub_1C0815C50@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, __int128 *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int v13;
  int v14;
  unint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t result;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  char v43[16];
  _OWORD *v44;
  _OWORD v45[4];

  v6 = sub_1C106FB50();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  sub_1C0778564();
  v10 = v9 - v8;
  sub_1C0D73F00(123, 0xE100000000000000, a1, a2);
  v12 = v11;
  v14 = v13;
  *(_QWORD *)&v45[0] = 125;
  *((_QWORD *)&v45[0] + 1) = 0xE100000000000000;
  v44 = v45;
  v15 = sub_1C0817F3C(sub_1C0818064, (uint64_t)v43, a1, a2);
  if (((v14 | v16) & 1) != 0)
  {
    if (qword_1ED762B18 == -1)
      goto LABEL_9;
    goto LABEL_17;
  }
  if (v15 >> 14 < v12 >> 14)
  {
    __break(1u);
LABEL_17:
    swift_once();
LABEL_9:
    v34 = sub_1C077585C();
    v30 = sub_1C079E000(v34, (uint64_t)qword_1ED762AF8);
    swift_bridgeObjectRetain_n();
    sub_1C106F538();
    v35 = sub_1C077C13C();
    if (sub_1C07767E4(v35))
    {
      v36 = (uint8_t *)sub_1C0775854();
      *(_QWORD *)&v45[0] = sub_1C0775854();
      *(_DWORD *)v36 = 136642819;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v37 = sub_1C0788DAC(a1, a2, (uint64_t *)v45);
      sub_1C0799740(v37);
      swift_bridgeObjectRelease_n();
      sub_1C07796F0(&dword_1C0771000, v30, (os_log_type_t)v12, "Unable to convert output from Autonaming from Messages LLM: %{sensitive}s to AutonamingMessagesInferenceOutput, as pre-processing the string to remove all character before and after { } failed", v36);
      sub_1C0778610();
LABEL_11:
      sub_1C0776778();
    }
    goto LABEL_14;
  }
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC40();
  v17 = sub_1C106FD60();
  v19 = v18;
  v21 = v20;
  v23 = v22;
  swift_bridgeObjectRelease();
  v24 = MEMORY[0x1C3BA64D0](v17, v19, v21, v23);
  v26 = v25;
  swift_bridgeObjectRelease();
  sub_1C106FB44();
  sub_1C106FB20();
  v28 = v27;
  sub_1C0793628(v10, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
  if (v28 >> 60 == 15)
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v29 = sub_1C077585C();
    v30 = sub_1C079E000(v29, (uint64_t)qword_1ED762AF8);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C106F538();
    v31 = sub_1C077C13C();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)sub_1C0775854();
      *(_QWORD *)&v45[0] = sub_1C0775854();
      *(_DWORD *)v32 = 136315138;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v33 = sub_1C0788DAC(v24, v26, (uint64_t *)v45);
      sub_1C0799740(v33);
      swift_bridgeObjectRelease_n();
      sub_1C07796F0(&dword_1C0771000, v30, v31, "Unable to convert output from Autonaming from Messages LLM: %s to AutonamingMessagesInferenceOutput: Unable to convert output from a string to data", v32);
      sub_1C0778610();
      goto LABEL_11;
    }
LABEL_14:

    result = swift_bridgeObjectRelease_n();
    v39 = xmmword_1C107AF40;
    v40 = 0uLL;
    v41 = 0uLL;
    v42 = 0uLL;
    goto LABEL_15;
  }
  swift_bridgeObjectRelease();
  sub_1C106A708();
  sub_1C077B5BC();
  sub_1C106A6FC();
  sub_1C0818080();
  sub_1C106A6F0();
  sub_1C0780A00();
  result = sub_1C079E210();
  v39 = v45[0];
  v40 = v45[1];
  v41 = v45[2];
  v42 = v45[3];
LABEL_15:
  *a3 = v39;
  a3[1] = v40;
  a3[2] = v41;
  a3[3] = v42;
  return result;
}

void sub_1C08161D4()
{
  _QWORD *v0;

  v0[3] = 0;
  v0[4] = 0;
  v0[2] = 100;
  sub_1C106F97C();
  type metadata accessor for AutonamingMessagesModelHandler._ClientInfo();
  sub_1C077B5BC();
  v0[5] = sub_1C08179D8(0xD000000000000021, 0x80000001C10DD9E0, 0, 1);
  sub_1C0778534();
}

uint64_t sub_1C0816260()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  const char *v23;
  uint64_t v24;
  os_log_type_t v25;
  uint64_t v27;

  v0 = sub_1C106C9AC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  sub_1C0778564();
  v4 = v3 - v2;
  v5 = sub_1C106C9D0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  sub_1C0778564();
  v9 = v8 - v7;
  v10 = sub_1C106C994();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v27 - v15;
  sub_1C106C9A0();
  sub_1C106C9C4();
  sub_1C0793628(v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_1C106C9B8();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0D26088], v10);
  v17 = sub_1C106C988();
  v18 = *(void (**)(char *, uint64_t))(v11 + 8);
  v18(v13, v10);
  if ((v17 & 1) != 0)
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v19 = sub_1C077585C();
    sub_1C079E000(v19, (uint64_t)qword_1ED762AF8);
    v20 = sub_1C106F538();
    v21 = sub_1C1070384();
    if (sub_1C07767E4(v21))
    {
      v22 = (uint8_t *)sub_1C0775854();
      *(_WORD *)v22 = 0;
      v23 = "GenerativeModels for memoryCreation.AutonamingMessages is available.";
      goto LABEL_10;
    }
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v24 = sub_1C077585C();
    sub_1C079E000(v24, (uint64_t)qword_1ED762AF8);
    v20 = sub_1C106F538();
    v25 = sub_1C1070384();
    if (sub_1C07767E4(v25))
    {
      v22 = (uint8_t *)sub_1C0775854();
      *(_WORD *)v22 = 0;
      v23 = "GenerativeModels for memoryCreation.AutonamingMessages is unavailable.";
LABEL_10:
      _os_log_impl(&dword_1C0771000, v20, (os_log_type_t)v9, v23, v22, 2u);
      sub_1C0776778();
    }
  }

  v18(v16, v10);
  return v17 & 1;
}

uint64_t sub_1C08164DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4[35] = a3;
  v4[36] = a4;
  v4[33] = a1;
  v4[34] = a2;
  sub_1C07ACF80(&qword_1EF6315F8);
  v4[37] = swift_task_alloc();
  v4[38] = sub_1C07ACF80(&qword_1EF631600);
  v4[39] = swift_task_alloc();
  v5 = sub_1C106CBD4();
  v4[40] = v5;
  v4[41] = *(_QWORD *)(v5 - 8);
  v4[42] = swift_task_alloc();
  v6 = sub_1C106CBE0();
  v4[43] = v6;
  v4[44] = *(_QWORD *)(v6 - 8);
  v4[45] = swift_task_alloc();
  sub_1C07ACF80(&qword_1EF631608);
  v4[46] = swift_task_alloc();
  v7 = sub_1C106F490();
  v4[47] = v7;
  v4[48] = *(_QWORD *)(v7 - 8);
  v4[49] = swift_task_alloc();
  v4[50] = swift_task_alloc();
  v8 = sub_1C106CA78();
  v4[51] = v8;
  v4[52] = *(_QWORD *)(v8 - 8);
  v4[53] = swift_task_alloc();
  sub_1C106AEF4();
  v4[54] = swift_task_alloc();
  sub_1C106CA48();
  v4[55] = swift_task_alloc();
  sub_1C106C9E8();
  v4[56] = swift_task_alloc();
  v9 = sub_1C106CA00();
  v4[57] = v9;
  v4[58] = *(_QWORD *)(v9 - 8);
  v4[59] = swift_task_alloc();
  sub_1C07ACF80(&qword_1EF631610);
  v4[60] = swift_task_alloc();
  v4[61] = swift_task_alloc();
  v10 = sub_1C07ACF80(&qword_1EF631618);
  v4[62] = v10;
  v4[63] = *(_QWORD *)(v10 - 8);
  v4[64] = swift_task_alloc();
  v11 = sub_1C106F880();
  v4[65] = v11;
  v4[66] = *(_QWORD *)(v11 - 8);
  v4[67] = swift_task_alloc();
  v4[68] = swift_task_alloc();
  v4[69] = swift_task_alloc();
  v4[70] = swift_task_alloc();
  v4[71] = swift_task_alloc();
  v4[72] = swift_task_alloc();
  v4[73] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C0816794()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v32 = *(_QWORD *)(v0 + 576);
  v1 = *(_QWORD *)(v0 + 552);
  v2 = *(_QWORD *)(v0 + 504);
  v3 = *(_QWORD *)(v0 + 512);
  v4 = *(_QWORD *)(v0 + 488);
  v24 = *(_QWORD *)(v0 + 496);
  v25 = *(_QWORD *)(v0 + 560);
  v5 = *(_QWORD *)(v0 + 480);
  v27 = *(_QWORD *)(v0 + 472);
  v28 = *(_QWORD *)(v0 + 464);
  v29 = *(_QWORD *)(v0 + 456);
  v30 = *(_QWORD *)(v0 + 568);
  v26 = *(_QWORD *)(v0 + 528);
  v33 = *(_QWORD *)(v0 + 416);
  v34 = *(_QWORD *)(v0 + 408);
  v35 = *(_QWORD *)(v0 + 424);
  v36 = *(_QWORD *)(v0 + 368);
  v6 = *(_QWORD *)(v0 + 280);
  v31 = *(_QWORD *)(v0 + 288);
  v7 = *(_QWORD *)(v0 + 272);
  v8 = swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  sub_1C106F88C();
  sub_1C0779D18();
  v9 = sub_1C106C91C();
  *(_QWORD *)(v0 + 592) = v9;
  sub_1C077A2C4(v4, v10, v11, v9);
  sub_1C08180D4(v4, v5);
  sub_1C0798588();
  sub_1C106C940();
  sub_1C106C928();
  sub_1C106C934();
  sub_1C0784B94(v4, &qword_1EF631610);
  *(_DWORD *)(v0 + 680) = *MEMORY[0x1E0D26238];
  v12 = *(void (**)(uint64_t))(v2 + 104);
  *(_QWORD *)(v0 + 600) = v12;
  v12(v3);
  sub_1C0794BAC(&qword_1EF631620, (uint64_t (*)(uint64_t))MEMORY[0x1E0D82538], MEMORY[0x1E0D82528]);
  *(_QWORD *)(v0 + 608) = v13;
  sub_1C079D250();
  sub_1C106F8EC();
  v14 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  *(_QWORD *)(v0 + 616) = v14;
  v14(v3, v24);
  *(_QWORD *)(v0 + 624) = *(_QWORD *)(v26 + 8);
  sub_1C077B664(v1);
  sub_1C079610C();
  *(_QWORD *)(v0 + 632) = sub_1C07ACF80(&qword_1EF631628);
  v15 = *(_QWORD *)(sub_1C106CA3C() - 8);
  *(_QWORD *)(v0 + 640) = *(_QWORD *)(v15 + 72);
  *(_DWORD *)(v0 + 684) = *(_DWORD *)(v15 + 80);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C1078A20;
  sub_1C106CA18();
  sub_1C106CA24();
  sub_1C106CA30();
  sub_1C106CA0C();
  sub_1C106C9DC();
  sub_1C106C9F4();
  sub_1C079D250();
  sub_1C106F8E0();
  v16 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
  *(_QWORD *)(v0 + 648) = v16;
  v16(v27, v29);
  sub_1C077B664(v25);
  sub_1C106F97C();
  sub_1C079D250();
  sub_1C106F8D4();
  swift_bridgeObjectRelease();
  sub_1C077B664(v30);
  v17 = *(_QWORD *)(v31 + 40);
  *(_QWORD *)(v0 + 656) = v17;
  v18 = v17
      + OBJC_IVAR____TtCC24IntelligencePlatformCore30AutonamingMessagesModelHandlerP33_5C69D6992B7848D3362C30A8BA7041BC11_ClientInfo_trackingConfig;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v35, v18, v34);
  sub_1C079D250();
  sub_1C106F8F8();
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v35, v34);
  sub_1C077B664(v32);
  v19 = sub_1C106F484();
  sub_1C077A2C4(v36, v20, v21, v19);
  sub_1C106F478();
  v22 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 664) = v22;
  *v22 = v0;
  v22[1] = sub_1C0816BC0;
  return sub_1C106C964();
}

uint64_t sub_1C0816BC0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 672) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1C0816C24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  void (*v44)(uint64_t, _QWORD, uint64_t);
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t);
  uint64_t v53;

  v1 = *(_QWORD *)(v0 + 296);
  v2 = sub_1C07ACF80(&qword_1EF631630);
  if (sub_1C07B2D80(v1, 1, v2) == 1)
  {
    sub_1C0784B94(v1, &qword_1EF6315F8);
  }
  else
  {
    v38 = *(void (**)(uint64_t, uint64_t))(v0 + 648);
    v47 = *(void (**)(uint64_t, uint64_t))(v0 + 616);
    v44 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 600);
    v43 = *(_DWORD *)(v0 + 680);
    v39 = *(_QWORD *)(v0 + 592);
    v49 = *(_QWORD *)(v0 + 584);
    v48 = *(_QWORD *)(v0 + 576);
    v51 = *(_QWORD *)(v0 + 528);
    v52 = *(void (**)(uint64_t, uint64_t))(v0 + 624);
    v50 = *(_QWORD *)(v0 + 520);
    v40 = *(_QWORD *)(v0 + 512);
    v42 = *(_QWORD *)(v0 + 496);
    v36 = *(_QWORD *)(v0 + 488);
    v37 = *(_QWORD *)(v0 + 480);
    v34 = *(_QWORD *)(v0 + 472);
    v35 = *(_QWORD *)(v0 + 456);
    v4 = *(_QWORD *)(v0 + 304);
    v3 = *(_QWORD *)(v0 + 312);
    v27 = v1 + *(int *)(v2 + 48);
    v5 = v3 + *(int *)(v4 + 48);
    v28 = *(_QWORD *)(v0 + 392);
    v29 = *(_QWORD *)(v0 + 384);
    v30 = *(_QWORD *)(v0 + 376);
    v31 = *(_QWORD *)(v0 + 400);
    v6 = *(_QWORD *)(v0 + 360);
    v41 = v6;
    v7 = *(_QWORD *)(v0 + 344);
    v53 = *(_QWORD *)(v0 + 336);
    v9 = *(_QWORD *)(v0 + 320);
    v8 = *(_QWORD *)(v0 + 328);
    v45 = v8;
    v46 = *(_QWORD *)(v0 + 352);
    v33 = *(_QWORD *)(v0 + 280);
    v32 = *(_QWORD *)(v0 + 272);
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 32);
    v10(v3, v1, v7);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32);
    v11(v5, v27, v9);
    v12 = v3 + *(int *)(v4 + 48);
    v10(v6, v3, v7);
    v11(v53, v12, v9);
    sub_1C106CBC8();
    sub_1C0793628(v31, *(uint64_t (**)(uint64_t, uint64_t))(v29 + 8));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))(v31, v28, v30);
    sub_1C07ACF80(&qword_1EF631638);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1079220;
    *(_QWORD *)(inited + 32) = 0x74706D6F7270;
    *(_QWORD *)(inited + 40) = 0xE600000000000000;
    v14 = MEMORY[0x1E0D825F0];
    *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 80) = v14;
    *(_QWORD *)(inited + 48) = v32;
    *(_QWORD *)(inited + 56) = v33;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C07ACF80(&qword_1EF631640);
    sub_1C106F97C();
    sub_1C07ACF80(&qword_1ED761310);
    v15 = swift_initStackObject();
    *(_OWORD *)(v15 + 16) = xmmword_1C1078FC0;
    *(_QWORD *)(v15 + 32) = 0xD0000000000000E5;
    *(_QWORD *)(v15 + 40) = 0x80000001C10E3D70;
    sub_1C079610C();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C1078A20;
    sub_1C106CA18();
    sub_1C106CA24();
    sub_1C106CA30();
    sub_1C106CA0C();
    sub_1C106C9DC();
    sub_1C106C9F4();
    *(_QWORD *)(v15 + 72) = v35;
    sub_1C079DFC4((uint64_t *)(v15 + 48));
    sub_1C106CA54();
    v38(v34, v35);
    *(_QWORD *)(v15 + 80) = 0xD000000000000060;
    *(_QWORD *)(v15 + 88) = 0x80000001C10E3E60;
    sub_1C07B2D8C(v36, 1, 1, v39);
    sub_1C08180D4(v36, v37);
    sub_1C0798588();
    sub_1C106C940();
    sub_1C106C928();
    sub_1C106C934();
    sub_1C0784B94(v36, &qword_1EF631610);
    v44(v40, v43, v42);
    *(_QWORD *)(v15 + 120) = sub_1C106C958();
    sub_1C079DFC4((uint64_t *)(v15 + 96));
    sub_1C106CA60();
    v47(v40, v42);
    sub_1C106F97C();
    sub_1C106CBBC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v53, v9);
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v41, v7);
    v52(v49, v50);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 32))(v49, v48, v50);
  }
  v16 = *(_QWORD *)(v0 + 672);
  sub_1C106F8C8();
  sub_1C106F8BC();
  if (v16)
  {
    (*(void (**)(_QWORD, _QWORD))(v0 + 624))(*(_QWORD *)(v0 + 536), *(_QWORD *)(v0 + 520));
    v17 = *(void (**)(uint64_t, uint64_t))(v0 + 624);
    v18 = *(_QWORD *)(v0 + 584);
    v19 = *(_QWORD *)(v0 + 520);
    sub_1C07A22A4(*(_QWORD *)(v0 + 384));
    v17(v18, v19);
    sub_1C0779D20();
    sub_1C07767BC();
    swift_task_dealloc();
    sub_1C0779D18();
    swift_task_dealloc();
    sub_1C07758BC();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  else
  {
    v20 = *(_QWORD *)(v0 + 656);
    v21 = *(_QWORD *)(v0 + 584);
    v22 = *(_QWORD *)(v0 + 544);
    v23 = *(_QWORD *)(v0 + 400);
    v25 = *(_QWORD *)(v0 + 376);
    v24 = *(_QWORD *)(v0 + 384);
    sub_1C07919F4(*(_QWORD *)(v0 + 536));
    *(_QWORD *)(v0 + 256) = *(_QWORD *)(v20
                                      + OBJC_IVAR____TtCC24IntelligencePlatformCore30AutonamingMessagesModelHandlerP33_5C69D6992B7848D3362C30A8BA7041BC11_ClientInfo__model);
    sub_1C106C8F8();
    sub_1C106F904();
    sub_1C07919F4(v22);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
    sub_1C07919F4(v21);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1C07767BC();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1C0779D20();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C08174A4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 584);
  sub_1C07A22A4(*(_QWORD *)(v0 + 384));
  sub_1C077B664(v1);
  swift_task_dealloc();
  sub_1C0779D20();
  swift_task_dealloc();
  sub_1C07767BC();
  sub_1C07758BC();
  sub_1C0779D18();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C0817624(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD v13[5];

  v4 = sub_1C106F8B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v13[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[3] = MEMORY[0x1E0DEA968];
  v13[4] = MEMORY[0x1E0D825F0];
  v13[0] = a1;
  v13[1] = a2;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v8 = MEMORY[0x1E0D82580];
  sub_1C106F8A4();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v13);
  sub_1C07ACF80(&qword_1EF631648);
  v9 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C1079220;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 16))(v10 + v9, v7, v4);
  MEMORY[0x1C3BA61B8](v10, v4, v8);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1C0817764()
{
  return swift_retain();
}

uint64_t sub_1C0817778(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = sub_1C07ACF80(&qword_1EF6315E0);
  v3[2] = v6;
  v3[3] = *(_QWORD *)(v6 - 8);
  v7 = swift_task_alloc();
  v3[4] = v7;
  v8 = (_QWORD *)swift_task_alloc();
  v3[5] = v8;
  *v8 = v3;
  v8[1] = sub_1C0817810;
  return sub_1C08164DC(v7, a1, a2, v2);
}

uint64_t sub_1C0817810()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = *v1;
  *(_QWORD *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 56) = v4;
  sub_1C0794BAC(&qword_1EF6315F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBF560], MEMORY[0x1E0DBF548]);
  *v4 = v2;
  v4[1] = sub_1C08178D4;
  return sub_1C106CBEC();
}

uint64_t sub_1C08178D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(v6 + 64) = v2;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v6 + 24) + 8))(*(_QWORD *)(v6 + 32), *(_QWORD *)(v6 + 16));
  if (v2)
    return swift_task_switch();
  sub_1C07758BC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t sub_1C0817980()
{
  uint64_t v0;

  swift_task_dealloc();
  return sub_1C077CF28(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C08179AC()
{
  uint64_t v0;

  swift_task_dealloc();
  return sub_1C077CF28(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C08179D8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _DWORD v16[2];
  uint64_t v17;

  v5 = v4;
  v17 = a3;
  v16[1] = a4 & 1;
  v8 = sub_1C106C910();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1C106C97C();
  MEMORY[0x1E0C80A78](v9);
  v10 = sub_1C07ACF80(&qword_1EF631650);
  MEMORY[0x1E0C80A78](v10);
  v11 = sub_1C106CA78();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106F97C();
  sub_1C106CA6C();
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v5+ OBJC_IVAR____TtCC24IntelligencePlatformCore30AutonamingMessagesModelHandlerP33_5C69D6992B7848D3362C30A8BA7041BC11_ClientInfo_trackingConfig, v14, v11);
  sub_1C106C8F8();
  sub_1C106C724();
  sub_1C106C904();
  sub_1C106C970();
  *(_QWORD *)(v5
            + OBJC_IVAR____TtCC24IntelligencePlatformCore30AutonamingMessagesModelHandlerP33_5C69D6992B7848D3362C30A8BA7041BC11_ClientInfo__model) = sub_1C106C8EC();
  return v5;
}

uint64_t sub_1C0817BD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v1 = v0
     + OBJC_IVAR____TtCC24IntelligencePlatformCore30AutonamingMessagesModelHandlerP33_5C69D6992B7848D3362C30A8BA7041BC11_ClientInfo_trackingConfig;
  v2 = sub_1C106CA78();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return v0;
}

uint64_t sub_1C0817C30()
{
  sub_1C0817BD4();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0817C50()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return v1;
}

uint64_t sub_1C0817C80@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1
     + OBJC_IVAR____TtCC24IntelligencePlatformCore30AutonamingMessagesModelHandlerP33_5C69D6992B7848D3362C30A8BA7041BC11_ClientInfo_trackingConfig;
  swift_beginAccess();
  v4 = sub_1C106CA78();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1C0817CE8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1
     + OBJC_IVAR____TtCC24IntelligencePlatformCore30AutonamingMessagesModelHandlerP33_5C69D6992B7848D3362C30A8BA7041BC11_ClientInfo_trackingConfig;
  swift_beginAccess();
  v4 = sub_1C106CA78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*sub_1C0817D58())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1C0817DA0()
{
  return swift_retain();
}

uint64_t sub_1C0817DB4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_1C0817DD8()
{
  sub_1C0817DB4();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AutonamingMessagesModelHandler()
{
  return objc_opt_self();
}

uint64_t sub_1C0817E18()
{
  return type metadata accessor for AutonamingMessagesModelHandler._ClientInfo();
}

uint64_t type metadata accessor for AutonamingMessagesModelHandler._ClientInfo()
{
  uint64_t result;

  result = qword_1EF631530;
  if (!qword_1EF631530)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C0817E58()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C106CA78();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1C0817EDC()
{
  return sub_1C0817764();
}

uint64_t sub_1C0817EFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4)
    return 1;
  else
    return sub_1C1070CB4() & 1;
}

unint64_t sub_1C0817F3C(uint64_t (*a1)(_QWORD *), uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  _QWORD v12[2];

  v5 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v5 = a3 & 0xFFFFFFFFFFFFLL;
  if (!v5)
    return 0;
  while (1)
  {
    v7 = sub_1C106FC4C();
    v12[0] = sub_1C106FD48();
    v12[1] = v8;
    v9 = a1(v12);
    if (v4)
      break;
    v10 = v9;
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
      return v7;
    if (v7 < 0x4000)
      return 0;
  }
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C081803C(uint64_t *a1, uint64_t *a2)
{
  return sub_1C0817EFC(*a1, a1[1], *a2, a2[1]) & 1;
}

uint64_t sub_1C0818064(uint64_t *a1)
{
  uint64_t v1;

  return sub_1C081803C(a1, *(uint64_t **)(v1 + 16)) & 1;
}

unint64_t sub_1C0818080()
{
  unint64_t result;

  result = qword_1EF6315D0;
  if (!qword_1EF6315D0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107ABA4, &type metadata for AutonamingMessagesInferenceOutput);
    atomic_store(result, &qword_1EF6315D0);
  }
  return result;
}

uint64_t sub_1C08180BC()
{
  uint64_t v0;

  return sub_1C0817624(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1C08180D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1EF631610);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_1C081811C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 32);
  if (v1)
  {
    v2 = *(id *)(v0 + 32);
  }
  else
  {
    v3 = objc_msgSend((id)objc_opt_self(), sel_service);
    v4 = *(void **)(v0 + 32);
    *(_QWORD *)(v0 + 32) = v3;
    v2 = v3;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

uint64_t sub_1C081818C(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v3 = v2;
  *(_OWORD *)(v3 + 32) = xmmword_1C107B040;
  *(_QWORD *)(v3 + 16) = a2;
  type metadata accessor for AutonamingMessagesSpotlightQuerier();
  swift_allocObject();
  sub_1C081AAB8(a1);
  *(_QWORD *)(v3 + 24) = v5;
  return v3;
}

uint64_t sub_1C08181E8(unint64_t a1, uint64_t a2)
{
  NSObject *v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t result;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD v21[4];

  v4 = a1;
  v21[2] = a2;
  result = sub_1C08184D0((uint64_t (*)(uint64_t *))sub_1C081A804, (uint64_t)v21, a1);
  if ((v6 & 1) != 0)
  {
    if (qword_1ED762B18 == -1)
    {
LABEL_7:
      v9 = sub_1C077585C();
      sub_1C077965C(v9, (uint64_t)qword_1ED762AF8);
      v10 = sub_1C07919DC();
      if (sub_1C07758D8(v10))
      {
        v11 = (uint8_t *)sub_1C0775854();
        *(_WORD *)v11 = 0;
        sub_1C077F048(&dword_1C0771000, v2, OS_LOG_TYPE_DEFAULT, "Unable to clip context messages as centerMessage index wasn't found. Returning contextMessages unclipped", v11);
        sub_1C0776778();
      }

      sub_1C07767B4();
      return v4;
    }
LABEL_37:
    swift_once();
    goto LABEL_7;
  }
  v7 = result;
  if (__OFSUB__(0, result))
  {
    __break(1u);
    goto LABEL_37;
  }
  if ((unint64_t)(9 - result) > 9)
  {
    v8 = result - 10;
    if (__OFSUB__(result, 10))
    {
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
      return result;
    }
    if ((v4 & 0x8000000000000000) != 0)
      goto LABEL_44;
  }
  else
  {
    v8 = 0;
    if ((v4 & 0x8000000000000000) != 0)
      goto LABEL_44;
  }
  if ((v4 & 0x4000000000000000) == 0)
  {
    v12 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_14;
  }
  while (1)
  {
LABEL_44:
    sub_1C07767B4();
    v12 = sub_1C10709B4();
    result = sub_1C07767AC();
LABEL_14:
    if (__OFSUB__(v12, v7))
    {
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if ((unint64_t)(v12 - v7) >= 9)
    {
      v12 = v7 + 9;
      if (__OFADD__(v7, 9))
        goto LABEL_46;
    }
    if (v12 < v8)
      goto LABEL_39;
    v3 = v4 >> 62;
    if (!(v4 >> 62))
    {
      v7 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_20;
    }
LABEL_40:
    sub_1C078AAC8();
    v7 = sub_1C07AD050();
    result = sub_1C07767AC();
LABEL_20:
    if (v7 < v8)
    {
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    if (v8 < 0)
      goto LABEL_42;
    if (v3)
    {
      sub_1C078AAC8();
      v7 = sub_1C07AD050();
      result = sub_1C07767AC();
    }
    else
    {
      v7 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (v7 >= v12)
      break;
LABEL_43:
    __break(1u);
  }
  if ((v4 & 0xC000000000000001) == 0 || v8 == v12)
    goto LABEL_31;
  if (v8 >= (unint64_t)v12)
    goto LABEL_47;
  type metadata accessor for TextMessageData(0);
  v13 = v8;
  do
  {
    v14 = v13 + 1;
    sub_1C10707A4();
    v13 = v14;
  }
  while (v12 != v14);
LABEL_31:
  if (v3)
  {
    sub_1C078AAC8();
    v15 = sub_1C10709C0();
    v16 = v18;
    v8 = v19;
    v17 = v20;
    sub_1C07767AC();
  }
  else
  {
    v15 = v4 & 0xFFFFFFFFFFFFFF8;
    v16 = (v4 & 0xFFFFFFFFFFFFFF8) + 32;
    v17 = (2 * v12) | 1;
    sub_1C07767B4();
  }
  return sub_1C0ECA610(v15, v16, v8, v17);
}

BOOL sub_1C0818460()
{
  sub_1C106ADE0();
  sub_1C07D65AC();
  return (sub_1C106FA6C() & 1) == 0;
}

uint64_t sub_1C08184D0(uint64_t (*a1)(uint64_t *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v12;

  if (a3 >> 62)
  {
LABEL_14:
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v6 = sub_1C10709B4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v7 = 0;
  if (v6)
  {
    while (1)
    {
      if ((a3 & 0xC000000000000001) != 0)
      {
        v8 = MEMORY[0x1C3BA70DC](v7, a3);
      }
      else
      {
        v8 = *(_QWORD *)(a3 + 8 * v7 + 32);
        swift_retain();
      }
      v12 = v8;
      v9 = a1(&v12);
      swift_release();
      if (v3 || (v9 & 1) != 0)
        break;
      v10 = v7 + 1;
      if (__OFADD__(v7, 1))
      {
        __break(1u);
        goto LABEL_14;
      }
      ++v7;
      if (v10 == v6)
        return 0;
    }
  }
  return v7;
}

void sub_1C08185E8(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  id v16;
  void *v17;
  uint64_t v18;
  id v19;
  unint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  const char *v44;
  uint64_t v45;
  os_log_type_t v46;
  uint8_t *v47;
  const char *v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  os_log_type_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  NSObject *v66;
  id v67;
  void *v68;
  id v69;
  uint64_t v70;
  int v71;
  int v72;
  uint64_t v73;
  os_log_type_t v74;
  _BOOL4 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  void *v85;
  id v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  unint64_t v90;
  int v91;
  int v92;
  os_log_type_t v93;
  uint64_t v94;
  uint64_t v95;
  os_log_type_t v96;
  uint8_t *v97;
  uint64_t v98;
  os_log_type_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  os_log_type_t v108;
  uint64_t v109;
  NSObject *v110;
  NSObject *v111;
  uint64_t v112;

  v11 = 0x1ED762000;
  v12 = &unk_1C1078000;
  v13 = MEMORY[0x1E0DEE9B8];
  if (!a3)
  {
    sub_1C079436C();
    if (!v22)
      swift_once();
    v34 = sub_1C077585C();
    sub_1C07985A8(v34, (uint64_t)qword_1ED762AF8);
    v5 = sub_1C106F538();
    v35 = sub_1C1070390();
    if (sub_1C077AF00(v35))
    {
      v36 = (uint8_t *)sub_1C0775854();
      v112 = sub_1C0775854();
      *(_DWORD *)v36 = 136315138;
      v37 = sub_1C07796D8();
      sub_1C07ADA60(v37, v38, v39, v40, v41, v42, v43);
      sub_1C077FD44();
      sub_1C07878F8();
      v44 = "MAD person identification request on image with identifier %s failed";
      goto LABEL_18;
    }
    goto LABEL_43;
  }
  v6 = a4;
  v7 = a3;
  if (!((unint64_t)a3 >> 62))
  {
    v14 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    sub_1C0778624();
    if (v14 == 1)
      goto LABEL_4;
LABEL_67:
    sub_1C079436C();
    if (!v22)
      swift_once();
    v98 = sub_1C077585C();
    sub_1C07985A8(v98, (uint64_t)qword_1ED762AF8);
    sub_1C0778624();
    sub_1C106F538();
    v99 = sub_1C07919DC();
    if (sub_1C0790D48(v99))
    {
      v100 = sub_1C0775854();
      v112 = sub_1C0775854();
      *(_DWORD *)v100 = 136315394;
      v101 = sub_1C07796D8();
      sub_1C07ADA60(v101, v102, v103, v104, v105, v106, v107);
      sub_1C07A7CAC();
      sub_1C07878F8();
      *(_WORD *)(v100 + 12) = 2048;
      sub_1C0775834();
      sub_1C07A5B98();
      sub_1C0775834();
      _os_log_impl(&dword_1C0771000, v5, (os_log_type_t)&unk_1C1078000, "Performed MAD personIdentificationRequest request on image with image identifier %s and received result of length (%ld). No person identifier in image, returning nil.", (uint8_t *)v100, 0x16u);
      sub_1C0778610();
      sub_1C0776778();
    }
    goto LABEL_72;
  }
  if (a3 >= 0)
    v5 = (a3 & 0xFFFFFFFFFFFFFF8);
  else
    v5 = a3;
  sub_1C0778624();
  if (sub_1C077AF50() != 1)
    goto LABEL_67;
  sub_1C0778624();
  v94 = sub_1C077AF50();
  sub_1C0775834();
  if (!v94)
  {
    sub_1C0775834();
    sub_1C079436C();
    if (!v22)
      swift_once();
    v95 = sub_1C077585C();
    sub_1C077965C(v95, (uint64_t)qword_1ED762AF8);
    v96 = sub_1C07919DC();
    if (sub_1C07758D8(v96))
    {
      v97 = (uint8_t *)sub_1C0775854();
      *(_WORD *)v97 = 0;
      sub_1C077F048(&dword_1C0771000, 0, (os_log_type_t)a2, "AutonamingMessages only supports inference on images with 1 person identified them. Returning nil.", v97);
      sub_1C0776778();
    }

    goto LABEL_74;
  }
LABEL_4:
  v15 = (v7 & 0xC000000000000001);
  sub_1C0783D0C(0, (v7 & 0xC000000000000001) == 0, v7);
  if ((v7 & 0xC000000000000001) != 0)
    v16 = (id)MEMORY[0x1C3BA70DC](0, v7);
  else
    v16 = *(id *)(v7 + 32);
  v17 = v16;
  sub_1C0775834();
  objc_opt_self();
  v18 = sub_1C0796F8C();
  if (!v18)
  {
    sub_1C079436C();
    if (!v22)
      swift_once();
    v45 = sub_1C077585C();
    sub_1C077965C(v45, (uint64_t)qword_1ED762AF8);
    v46 = sub_1C07919DC();
    if (sub_1C07758D8(v46))
    {
      v47 = (uint8_t *)sub_1C0775854();
      *(_WORD *)v47 = 0;
      v48 = "Unable to cast identification result to MADPersonIdentificationResult. Returning nil.";
      goto LABEL_23;
    }
LABEL_57:

LABEL_74:
    v89 = 0;
    v90 = 0;
    sub_1C0795784();
    v92 = 0;
    goto LABEL_75;
  }
  v7 = v18;
  v110 = v17;
  v19 = objc_msgSend((id)v7, sel_resultItems);
  sub_1C07D4B70(0, &qword_1EF631778);
  v20 = sub_1C106FF04();

  if (v20 >> 62)
  {
    sub_1C077AE90();
    v21 = sub_1C07AD050();
    sub_1C077960C();
  }
  else
  {
    v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  sub_1C077960C();
  v109 = a1;
  if (v21 == 1)
  {
    sub_1C079436C();
    if (!v22)
      swift_once();
    v23 = sub_1C077585C();
    sub_1C07985A8(v23, (uint64_t)qword_1ED762AF8);
    v24 = sub_1C106F538();
    v25 = sub_1C1070378();
    if (sub_1C077F050(v25))
    {
      v26 = (uint8_t *)sub_1C0775854();
      v112 = sub_1C0775854();
      *(_DWORD *)v26 = 136315138;
      v27 = sub_1C07796D8();
      sub_1C07ADA60(v27, v28, v29, v30, v31, v32, v33);
      sub_1C079CBC8();
      sub_1C10705AC();
      sub_1C07878F8();
      sub_1C07796F0(&dword_1C0771000, v24, OS_LOG_TYPE_DEFAULT, "Found 1 person observation in the image with identifier %s", v26);
      sub_1C0778610();
      sub_1C0776778();
    }

    sub_1C07758A4();
    v64 = objc_msgSend((id)v7, sel_resultItems);
    v65 = sub_1C106FF04();

    sub_1C0783D0C(0, (v65 & 0xC000000000000001) == 0, v65);
    if ((v65 & 0xC000000000000001) != 0)
      v66 = MEMORY[0x1C3BA70DC](0, v65);
    else
      v66 = *(id *)(v65 + 32);
    v5 = v66;
    swift_bridgeObjectRelease();
    v67 = -[NSObject personIdentifier](v5, sel_personIdentifier);
    v7 = sub_1C106FB14();
    v12 = v68;

    v69 = -[NSObject mdID](v5, sel_mdID);
    v11 = sub_1C106FB14();
    v13 = v70;

    -[NSObject confidence](v5, sel_confidence);
    v72 = v71;

    LODWORD(a1) = v72;
    if (!v6)
    {
LABEL_39:
      sub_1C0796124();
      if (qword_1ED762B18 != -1)
        swift_once();
      v73 = sub_1C077585C();
      sub_1C07985A8(v73, (uint64_t)qword_1ED762AF8);
      sub_1C106F538();
      v74 = sub_1C07919DC();
      v75 = sub_1C077AF00(v74);
      v13 = MEMORY[0x1E0DEE9B8];
      LODWORD(a1) = v109;
      v12 = &unk_1C1078000;
      if (v75)
      {
        v36 = (uint8_t *)sub_1C0775854();
        v112 = sub_1C0775854();
        *(_DWORD *)v36 = 136315138;
        v76 = sub_1C07796D8();
        sub_1C07ADA60(v76, v77, v78, v79, v80, v81, v82);
        sub_1C077FD44();
        sub_1C07878F8();
        v44 = "MAD captioning request on image with identifier %s failed";
LABEL_18:
        sub_1C07796F0(&dword_1C0771000, v5, (os_log_type_t)v6, v44, v36);
        sub_1C0778610();
        sub_1C0776778();
      }
LABEL_43:

LABEL_73:
      sub_1C07758A4();
      goto LABEL_74;
    }
  }
  else
  {
    v5 = v110;

    sub_1C0795784();
    if (!v6)
      goto LABEL_39;
  }
  if ((unint64_t)v6 >> 62)
  {
    if (v6 >= 0)
      v5 = (v6 & 0xFFFFFFFFFFFFFF8);
    else
      v5 = v6;
    sub_1C077AEBC();
    v49 = sub_1C077AF50();
  }
  else
  {
    v49 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    sub_1C077AEBC();
  }
  if (v49 != 1)
  {
    sub_1C0796124();
    if (qword_1ED762B18 != -1)
      swift_once();
    v54 = sub_1C077585C();
    sub_1C07985A8(v54, (uint64_t)qword_1ED762AF8);
    sub_1C077AEBC();
    sub_1C106F538();
    v55 = sub_1C07919DC();
    LODWORD(a1) = v109;
    if (sub_1C0790D48(v55))
    {
      v56 = sub_1C0775854();
      v112 = sub_1C0775854();
      *(_DWORD *)v56 = 136315394;
      v57 = sub_1C07796D8();
      sub_1C07ADA60(v57, v58, v59, v60, v61, v62, v63);
      sub_1C07A7CAC();
      sub_1C07878F8();
      *(_WORD *)(v56 + 12) = 2048;
      sub_1C077B5B4();
      sub_1C07A5B98();
      sub_1C077B5B4();
      _os_log_impl(&dword_1C0771000, v5, (os_log_type_t)v12, "Performed MAD request on image with identifer %s and returned an unsupported number of captions: %ld", (uint8_t *)v56, 0x16u);
      sub_1C0778610();
      sub_1C0776778();
    }
LABEL_72:

    sub_1C07758A4();
    goto LABEL_73;
  }
  if (qword_1ED762B18 != -1)
    swift_once();
  v50 = sub_1C077585C();
  sub_1C07985A8(v50, (uint64_t)qword_1ED762AF8);
  v111 = v5;
  v51 = sub_1C106F538();
  v52 = sub_1C1070378();
  if (os_log_type_enabled(v51, v52))
  {
    v108 = v52;
    v53 = (uint8_t *)sub_1C0775854();
    v112 = sub_1C0775854();
    *(_DWORD *)v53 = 136315138;
    sub_1C07796D8();
    sub_1C0788DAC(v109, a2, &v112);
    sub_1C079CBC8();
    sub_1C10705AC();
    sub_1C07878F8();
    sub_1C07796F0(&dword_1C0771000, v51, v108, "Performed MAD request on image with identifier %s and identified 1 caption", v53);
    sub_1C0778610();
    sub_1C0776778();
  }

  sub_1C07758A4();
  LOBYTE(a2) = v6 & 1;
  sub_1C0783D0C(0, (v6 & 0xC000000000000001) == 0, v6);
  if ((v6 & 0xC000000000000001) != 0)
    v83 = (id)MEMORY[0x1C3BA70DC](0, v6);
  else
    v83 = *(id *)(v6 + 32);
  v17 = v83;
  sub_1C077B5B4();
  objc_opt_self();
  v84 = sub_1C0796F8C();
  if (!v84)
  {
    sub_1C0796124();
    v15 = v111;
    sub_1C106F538();
    v93 = sub_1C07919DC();
    if (sub_1C07758D8(v93))
    {
      v47 = (uint8_t *)sub_1C0775854();
      *(_WORD *)v47 = 0;
      v48 = "Unable to cast identification result to MADCaptionResult. Returning nil.";
LABEL_23:
      sub_1C077F048(&dword_1C0771000, v15, (os_log_type_t)a2, v48, v47);
      sub_1C0776778();
    }
    goto LABEL_57;
  }
  v85 = (void *)v84;
  v86 = v17;
  v87 = sub_1C080AD1C(v85, (SEL *)&selRef_caption);
  if (v88)
    v89 = v87;
  else
    v89 = 0;
  if (v88)
    v90 = v88;
  else
    v90 = 0xE000000000000000;
  objc_msgSend(v85, sel_score);
  v92 = v91;

LABEL_75:
  *(_QWORD *)a5 = v89;
  *(_QWORD *)(a5 + 8) = v90;
  *(_DWORD *)(a5 + 16) = v92;
  *(_QWORD *)(a5 + 24) = v7;
  *(_QWORD *)(a5 + 32) = v12;
  *(_QWORD *)(a5 + 40) = v11;
  *(_QWORD *)(a5 + 48) = v13;
  *(_DWORD *)(a5 + 56) = a1;
}

id sub_1C0819080()
{
  id v0;
  id v1;
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  unsigned int v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v15[2];

  v15[1] = *(id *)MEMORY[0x1E0C80C00];
  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D47728]), sel_init);
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D476C0]), sel_initWithModelType_safetyType_, 3, 0);
  v2 = sub_1C081811C();
  sub_1C07ACF80(&qword_1ED762CD0);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C107B050;
  *(_QWORD *)(v3 + 32) = v1;
  *(_QWORD *)(v3 + 40) = v0;
  sub_1C106FF28();
  sub_1C07D4B70(0, &qword_1EF631768);
  v4 = v1;
  v5 = v0;
  v6 = (void *)sub_1C106FEEC();
  swift_bridgeObjectRelease();
  v7 = (void *)sub_1C106FAF0();
  v15[0] = 0;
  v8 = objc_msgSend(v2, sel_performRequests_onAssetWithSyndicationIdentifier_error_, v6, v7, v15);

  v9 = v15[0];
  if (v8)
  {
    v10 = v15[0];
    v9 = (id)sub_1C081A798(v5);
    v11 = objc_msgSend(v4, sel_results);
    if (v11)
    {
      v12 = v11;
      sub_1C07D4B70(0, &qword_1EF631770);
      sub_1C106FF04();

    }
  }
  else
  {
    v13 = v15[0];
    sub_1C106AA14();

    swift_willThrow();
  }
  return v9;
}

uint64_t sub_1C08192B0(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v3;
  unint64_t v4;
  id v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  __int128 v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  uint64_t *v37;
  uint64_t v38[3];
  __int128 v39;
  _BYTE v40[24];
  uint64_t v41;
  uint64_t v42;
  int v43;
  __int128 v44;
  __int128 v45;
  int v46;
  __int128 v47;
  int v48;

  v47 = 0uLL;
  v48 = 0;
  v46 = 0;
  v44 = 0u;
  v45 = 0u;
  v1 = *(_QWORD **)(*a1 + OBJC_IVAR____TtC24IntelligencePlatformCore16ImageMessageData_attachmentNames);
  if (v1[2])
  {
    v3 = v1[4];
    v4 = v1[5];
    sub_1C07767C4();
    v5 = sub_1C0819080();
    v37 = a1;
    sub_1C08185E8(v3, v4, (uint64_t)v5, v10, (uint64_t)&v39);
    v11 = v39;
    v12 = *(_DWORD *)v40;
    v36 = *(_OWORD *)&v40[8];
    v14 = v41;
    v13 = v42;
    v15 = v43;
    swift_bridgeObjectRelease();
    sub_1C077960C();
    v47 = v11;
    v48 = v12;
    v44 = v36;
    *(_QWORD *)&v45 = v14;
    *((_QWORD *)&v45 + 1) = v13;
    v46 = v15;
    if (qword_1ED762B18 != -1)
      swift_once();
    v16 = sub_1C077585C();
    sub_1C079E000(v16, (uint64_t)qword_1ED762AF8);
    sub_1C07767C4();
    v17 = sub_1C106F538();
    v18 = sub_1C1070384();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = sub_1C0775854();
      v38[0] = sub_1C0775854();
      *(_DWORD *)v19 = 136315650;
      sub_1C07767C4();
      *(_QWORD *)&v39 = sub_1C0788DAC(v3, v4, v38);
      sub_1C10705AC();
      sub_1C077CF6C();
      *(_WORD *)(v19 + 12) = 2080;
      sub_1C0775864();
      if (*((_QWORD *)&v47 + 1))
      {
        *(_QWORD *)&v39 = 0;
        *((_QWORD *)&v39 + 1) = 0xE000000000000000;
        sub_1C07767C4();
        sub_1C1070774();
        swift_bridgeObjectRelease();
        strcpy((char *)&v39, "imageCaption: ");
        HIBYTE(v39) = -18;
        sub_1C07767C4();
        sub_1C106FC94();
        sub_1C0775894();
        sub_1C07BCD50();
        v20 = v39;
        *(_QWORD *)&v39 = 0;
        *((_QWORD *)&v39 + 1) = 0xE000000000000000;
        sub_1C106FC94();
        sub_1C1070204();
        sub_1C07BCD50();
        v39 = v20;
        sub_1C077E6D0();
        sub_1C106FC94();
        sub_1C0775894();
        swift_bridgeObjectRelease();
        sub_1C0775834();
        v22 = *((_QWORD *)&v39 + 1);
        v21 = v39;
      }
      else
      {
        v22 = 0x80000001C10E3FE0;
        v21 = 0xD00000000000001CLL;
      }
      *(_QWORD *)&v39 = sub_1C0788DAC(v21, v22, v38);
      sub_1C10705AC();
      sub_1C077960C();
      *(_WORD *)(v19 + 22) = 2080;
      sub_1C0775864();
      if (*((_QWORD *)&v44 + 1))
      {
        v39 = v44;
        *(_OWORD *)v40 = v45;
        *(_DWORD *)&v40[16] = v46;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        sub_1C0778624();
        v24 = sub_1C0811AD4();
        v26 = v25;
        sub_1C0775834();
        swift_bridgeObjectRelease();
      }
      else
      {
        v24 = 0xD00000000000003CLL;
        v26 = 0x80000001C10E3FA0;
      }
      sub_1C0788DAC(v24, v26, v38);
      sub_1C10705AC();
      sub_1C077960C();
      _os_log_impl(&dword_1C0771000, v17, v18, "Performed MAD call on image with UUID: %s, with the following captioning: \n %s\nwith the following person identification result: %s", (uint8_t *)v19, 0x20u);
      swift_arrayDestroy();
      sub_1C0776778();
    }

    sub_1C07758A4();
    v27 = *v37;
    sub_1C0775864();
    v28 = *((_QWORD *)&v47 + 1);
    v29 = v48;
    v30 = v27 + OBJC_IVAR____TtC24IntelligencePlatformCore16ImageMessageData_captioningResult;
    *(_QWORD *)v30 = v47;
    *(_QWORD *)(v30 + 8) = v28;
    *(_DWORD *)(v30 + 16) = v29;
    sub_1C07767B4();
    sub_1C077960C();
    sub_1C0775864();
    v31 = v46;
    v32 = v27 + OBJC_IVAR____TtC24IntelligencePlatformCore16ImageMessageData_personIdentificationResult;
    v33 = *(_QWORD *)(v27 + OBJC_IVAR____TtC24IntelligencePlatformCore16ImageMessageData_personIdentificationResult);
    v34 = *(_QWORD *)(v27 + OBJC_IVAR____TtC24IntelligencePlatformCore16ImageMessageData_personIdentificationResult + 8);
    v35 = v45;
    *(_OWORD *)v32 = v44;
    *(_OWORD *)(v32 + 16) = v35;
    *(_DWORD *)(v32 + 32) = v31;
    sub_1C07A94A4(v33, v34);
    sub_1C07767AC();
    return 1;
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v6 = sub_1C077585C();
    v7 = sub_1C077965C(v6, (uint64_t)qword_1ED762AF8);
    v8 = sub_1C1070384();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)sub_1C0775854();
      *(_WORD *)v9 = 0;
      sub_1C077F048(&dword_1C0771000, v7, v8, "Unable to perform inference as attachmentName for given image is empty", v9);
      sub_1C0776778();
    }

    sub_1C07A94A4(0, 0);
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t sub_1C0819984(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 192) = a1;
  *(_QWORD *)(v2 + 200) = v1;
  return swift_task_switch();
}

uint64_t sub_1C081999C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;

  v2 = sub_1C080AD1C(*(void **)(v1 + 192), (SEL *)&selRef_messageId);
  *(_QWORD *)(v1 + 208) = v2;
  *(_QWORD *)(v1 + 216) = v3;
  if (v3)
  {
    v4 = v2;
    v5 = v3;
    if ((sub_1C081A598(*(void **)(v1 + 192), v2, v3) & 1) != 0)
    {
      *(_QWORD *)(v1 + 224) = *(_QWORD *)(*(_QWORD *)(v1 + 200) + 24);
      v6 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v1 + 232) = v6;
      *v6 = v1;
      v6[1] = sub_1C0819AE4;
      return sub_1C081AB54(v4, v5);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v8 = sub_1C077585C();
    sub_1C077965C(v8, (uint64_t)qword_1ED762AF8);
    v9 = sub_1C07919DC();
    if (os_log_type_enabled(v0, v9))
    {
      v10 = (uint8_t *)sub_1C0775854();
      *(_WORD *)v10 = 0;
      sub_1C077F048(&dword_1C0771000, v0, v9, "Unable to perform inference for autonaming from messages on the biome donation as it does not contain an imageMessageUniqueIdentifier", v10);
      sub_1C0776778();
    }

  }
  return (*(uint64_t (**)(_QWORD))(v1 + 8))(0);
}

uint64_t sub_1C0819AE4()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C078D3A4();
  sub_1C078AADC();
  *(_QWORD *)(v1 + 240) = v0;
  sub_1C078DEDC();
  return sub_1C077AEC4();
}

uint64_t sub_1C0819B24()
{
  os_log_type_t v0;
  uint64_t v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  NSObject *v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  unint64_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  NSObject *v18;
  uint64_t v19;
  os_log_type_t v20;
  _BOOL4 v21;
  unint64_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;

  v3 = *(_QWORD *)(v1 + 240);
  if (v3)
  {
    *(_QWORD *)(v1 + 144) = v3;
    if ((*(_BYTE *)(v3 + OBJC_IVAR____TtC24IntelligencePlatformCore16ImageMessageData_imageEligibleForPhotosProcessing) & 1) != 0)
    {
      swift_retain();
      sub_1C077960C();
      v4 = v3 + OBJC_IVAR____TtC24IntelligencePlatformCore11MessageData_contentCreationDate;
      v6 = *(_QWORD *)(v3 + 32);
      v5 = *(_QWORD *)(v3 + 40);
      *(_QWORD *)(v1 + 248) = v5;
      sub_1C07767B4();
      v7 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v1 + 256) = v7;
      *v7 = v1;
      v7[1] = sub_1C0819E54;
      return sub_1C081BFB0(v4, v6, v5);
    }
    v17 = qword_1ED762B18;
    swift_retain();
    if (v17 != -1)
      swift_once();
    v18 = *(NSObject **)(v1 + 216);
    v19 = sub_1C077585C();
    sub_1C079E000(v19, (uint64_t)qword_1ED762AF8);
    sub_1C077AE90();
    sub_1C07919FC();
    v20 = sub_1C07919DC();
    v21 = sub_1C077AF00(v20);
    v22 = *(_QWORD *)(v1 + 216);
    if (v21)
    {
      v23 = *(_QWORD *)(v1 + 208);
      v24 = (uint8_t *)sub_1C0775854();
      v25 = sub_1C0775854();
      *(_DWORD *)v24 = 136315138;
      sub_1C0778624();
      *(_QWORD *)(v1 + 160) = sub_1C0788DAC(v23, v22, &v25);
      sub_1C10705AC();
      sub_1C077CF6C();
      sub_1C07796F0(&dword_1C0771000, v18, v2, "Unable to perform inference for autonaming from messages on the biome donation containing message with unique identifier: %s, as the image found in this message is not eligible for MAD processing", v24);
      sub_1C0778610();
      sub_1C0776778();
    }
    sub_1C077971C();

  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v9 = sub_1C077585C();
    v10 = sub_1C079E000(v9, (uint64_t)qword_1ED762AF8);
    sub_1C077AE90();
    v11 = v10;
    sub_1C106F538();
    v12 = sub_1C07919DC();
    v13 = sub_1C07758D8(v12);
    v14 = *(_QWORD *)(v1 + 216);
    if (v13)
    {
      v15 = *(_QWORD *)(v1 + 208);
      v16 = (uint8_t *)sub_1C0775854();
      v25 = sub_1C0775854();
      *(_DWORD *)v16 = 136315138;
      sub_1C077AEBC();
      *(_QWORD *)(v1 + 176) = sub_1C0788DAC(v15, v14, &v25);
      sub_1C10705AC();
      sub_1C077CF6C();
      sub_1C07796F0(&dword_1C0771000, v11, v0, "Unable to perform inference for autonaming from messages on the biome donation containing message with unique identifier: %s, as an object for the image message with this unique identifier was not able to be created", v16);
      sub_1C0778610();
      sub_1C0776778();
    }

  }
  sub_1C07758A4();
  return sub_1C078C7A8(0, *(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1C0819E54()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C078D3A4();
  sub_1C078AADC();
  *(_QWORD *)(v1 + 264) = v0;
  sub_1C078DEDC();
  sub_1C077960C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0819E98()
{
  _QWORD *v0;
  os_log_type_t v1;
  _QWORD *v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  NSObject *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;

  v0[17] = v0[33];
  v2 = v0 + 17;
  if (qword_1ED762B18 != -1)
    swift_once();
  v3 = sub_1C077585C();
  v4 = sub_1C079E000(v3, (uint64_t)qword_1ED762AF8);
  sub_1C106F538();
  v5 = sub_1C07919DC();
  if (sub_1C079E204(v5))
  {
    v6 = (uint8_t *)sub_1C0775854();
    *(_DWORD *)v6 = 134217984;
    sub_1C0775864();
    if (*v2 >> 62)
    {
      sub_1C077E6D0();
      v7 = sub_1C10709B4();
      swift_bridgeObjectRelease();
    }
    else
    {
      v7 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v0[23] = v7;
    sub_1C10705AC();
    sub_1C07796F0(&dword_1C0771000, v4, v5, "Found context messages count: %ld", v6);
    sub_1C0776778();
  }

  swift_beginAccess();
  v8 = *v2;
  if (*v2 >> 62)
  {
    sub_1C077AE90();
    v9 = sub_1C10709B4();
    sub_1C077960C();
  }
  else
  {
    v9 = *(_QWORD *)(((unint64_t)v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v9 >= 21)
  {
    v10 = v0[30] + OBJC_IVAR____TtC24IntelligencePlatformCore11MessageData_contentCreationDate;
    v11 = sub_1C077AE90();
    v12 = sub_1C08181E8(v11, v10);
    sub_1C077960C();
    v0[17] = v12;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    sub_1C07919FC();
    v13 = sub_1C07919DC();
    if (sub_1C079E204(v13))
    {
      v14 = (uint8_t *)sub_1C0775854();
      *(_DWORD *)v14 = 134217984;
      if (v12 >> 62)
      {
        sub_1C0778624();
        v15 = sub_1C10709B4();
        sub_1C0775834();
      }
      else
      {
        v15 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      sub_1C0775834();
      v0[21] = v15;
      sub_1C10705AC();
      sub_1C0775834();
      sub_1C07796F0(&dword_1C0771000, v8, v13, "Clipped down to %ld messages around the original image message", v14);
      sub_1C0776778();
    }
    sub_1C07758A4();

  }
  if ((sub_1C08192B0(v0 + 18) & 1) != 0)
  {
    v16 = v0[30];
    v17 = v0[17];
    sub_1C077AEBC();
    swift_retain();
    v18 = sub_1C0810890(v17);
    v20 = v19;
    v0[34] = v18;
    v0[35] = v19;
    if ((sub_1C0810CD8(v18, v19) & 1) != 0)
    {
      v21 = (_QWORD *)swift_task_alloc();
      v0[36] = v21;
      *v21 = v0;
      v21[1] = sub_1C081A418;
      return sub_1C080CFB4(v18, v20);
    }
    v29 = v0[30];
    if (*(_QWORD *)(v29 + OBJC_IVAR____TtC24IntelligencePlatformCore16ImageMessageData_captioningResult + 8)
      && *(_QWORD *)(v29 + OBJC_IVAR____TtC24IntelligencePlatformCore16ImageMessageData_personIdentificationResult + 8))
    {
      v30 = (void *)sub_1C106FAF0();
      v0[6] = sub_1C081A4AC;
      v0[7] = 0;
      v0[2] = MEMORY[0x1E0C809B0];
      v0[3] = 1107296256;
      v0[4] = sub_1C0CF1604;
      v0[5] = &unk_1E7A0D188;
      v16 = _Block_copy(v0 + 2);
      AnalyticsSendEventLazy();
      _Block_release(v16);

    }
    sub_1C07919FC();
    v31 = sub_1C07919DC();
    if (sub_1C077F050(v31))
    {
      v32 = (uint8_t *)sub_1C0775854();
      *(_WORD *)v32 = 0;
      sub_1C077F048(&dword_1C0771000, v16, v1, "Prompt not eligible for inference for autonaming from messages", v32);
      sub_1C0776778();
    }
    swift_bridgeObjectRelease();
    swift_release();

    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    v23 = sub_1C07919FC();
    v24 = sub_1C1070390();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)sub_1C0775854();
      v33 = sub_1C0775854();
      *(_DWORD *)v25 = 136315138;
      sub_1C0775864();
      v26 = v0[18];
      v27 = *(_QWORD *)(v26 + 16);
      v28 = *(_QWORD *)(v26 + 24);
      sub_1C077E6D0();
      v0[19] = sub_1C0788DAC(v27, v28, &v33);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      sub_1C07796F0(&dword_1C0771000, v23, v24, "performCaptioningAndIdentification on image with identifier: %s failed", v25);
      sub_1C0778610();
      sub_1C0776778();
    }

    sub_1C07785A8();
    swift_bridgeObjectRelease();
  }
  swift_release();
  return sub_1C078C7A8(0, (uint64_t (*)(void))v0[1]);
}

uint64_t sub_1C081A418()
{
  char v0;
  uint64_t v1;

  sub_1C078D3A4();
  sub_1C078AADC();
  *(_BYTE *)(v1 + 296) = v0;
  sub_1C078DEDC();
  return sub_1C077AEC4();
}

uint64_t sub_1C081A458()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1C07785A8();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 296));
}

uint64_t sub_1C081A4AC()
{
  uint64_t inited;

  sub_1C07ACF80((uint64_t *)&unk_1ED7614C0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1078FC0;
  *(_QWORD *)(inited + 32) = 0xD000000000000019;
  *(_QWORD *)(inited + 40) = 0x80000001C10E33E0;
  *(_QWORD *)(inited + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, 1);
  *(_QWORD *)(inited + 56) = 0xD000000000000020;
  *(_QWORD *)(inited + 64) = 0x80000001C10E3400;
  *(_QWORD *)(inited + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, 0);
  sub_1C07D4B70(0, (unint64_t *)&qword_1ED761490);
  return sub_1C106F97C();
}

uint64_t sub_1C081A598(void *a1, uint64_t a2, unint64_t a3)
{
  os_log_type_t v3;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;

  if (objc_msgSend(a1, sel_hasContainsImageAttachment)
    && (objc_msgSend(a1, sel_containsImageAttachment) & 1) != 0)
  {
    return 1;
  }
  if (qword_1ED762B18 != -1)
    swift_once();
  v8 = sub_1C077585C();
  v9 = sub_1C079E000(v8, (uint64_t)qword_1ED762AF8);
  swift_bridgeObjectRetain_n();
  sub_1C106F538();
  v10 = sub_1C07919DC();
  if (sub_1C077AF00(v10))
  {
    v11 = (uint8_t *)sub_1C0775854();
    v12 = sub_1C0775854();
    *(_DWORD *)v11 = 136315138;
    sub_1C07767B4();
    sub_1C0788DAC(a2, a3, &v12);
    sub_1C077FD44();
    sub_1C077CF6C();
    sub_1C07796F0(&dword_1C0771000, v9, v3, "Unable to perform inference for autonaming from messages on the biome donation containing message with unique identifier: %s as this donation does not contain an image attachment", v11);
    sub_1C0778610();
    sub_1C0776778();
  }

  sub_1C07758A4();
  return 0;
}

uint64_t sub_1C081A720()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return v0;
}

uint64_t sub_1C081A74C()
{
  sub_1C081A720();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AutonamingMessagesProcessHandler()
{
  return objc_opt_self();
}

uint64_t sub_1C081A78C(void *a1)
{
  return sub_1C080AD1C(a1, (SEL *)&selRef_messageId);
}

uint64_t sub_1C081A798(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_results);
  if (!v1)
    return 0;
  v2 = v1;
  sub_1C07D4B70(0, &qword_1EF631770);
  v3 = sub_1C106FF04();

  return v3;
}

BOOL sub_1C081A804()
{
  return sub_1C0818460();
}

uint64_t sub_1C081A820(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  id v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v18;

  v18 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_24;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    while (1)
    {
      v16 = a3;
      v6 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v7 = (id)MEMORY[0x1C3BA70DC](v6, a1);
LABEL_7:
        v8 = v7;
        v9 = v6 + 1;
        if (__OFADD__(v6, 1))
          goto LABEL_23;
        v10 = sub_1C0814F70(objc_msgSend(v7, sel_attributeSet));
        if (v11)
        {
          if (v10 == a2 && v11 == a3)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            v13 = sub_1C1070CB4();
            swift_bridgeObjectRelease();
            if ((v13 & 1) == 0)
            {

LABEL_18:
              a3 = v16;
              goto LABEL_19;
            }
          }
          sub_1C1070810();
          sub_1C1070840();
          sub_1C107084C();
          sub_1C107081C();
          goto LABEL_18;
        }

LABEL_19:
        ++v6;
        if (v9 == v5)
        {
          v14 = v18;
          goto LABEL_26;
        }
      }
      if (v6 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      v5 = sub_1C10709B4();
      if (!v5)
        goto LABEL_25;
    }
    v7 = *(id *)(a1 + 8 * v6 + 32);
    goto LABEL_7;
  }
LABEL_25:
  v14 = MEMORY[0x1E0DEE9D8];
LABEL_26:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1C081A9D4(unint64_t *a1)
{
  unint64_t v2;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *a1 = v2;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v2 & 0x8000000000000000) != 0
    || (v2 & 0x4000000000000000) != 0)
  {
    sub_1C0C6EE0C(v2);
  }
  v4 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v6[0] = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
  v6[1] = v4;
  sub_1C081D360(v6);
  return sub_1C106FF28();
}

void sub_1C081AA58()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;

  v1 = *(void **)(v0 + 128);
  if (!v1)
  {
    v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97298]), sel_init);
    v3 = *(void **)(v0 + 128);
    *(_QWORD *)(v0 + 128) = v2;
    v4 = v2;

    v1 = 0;
  }
  v5 = v1;
  sub_1C077671C();
}

void sub_1C081AAB8(void *__src)
{
  _QWORD *v1;
  id v2;
  id v3;
  void *v4;

  v1[15] = 0;
  v1[16] = 0;
  memcpy(v1 + 2, __src, 0x60uLL);
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CA6B30]), sel_init);
  v1[14] = v2;
  v3 = v2;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v4 = (void *)sub_1C106FEEC();
  sub_1C07767AC();
  objc_msgSend(v3, sel_setFetchAttributes_, v4);

  sub_1C077671C();
}

uint64_t sub_1C081AB48()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 120) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C081AB54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  v4 = (_QWORD *)swift_task_alloc();
  v3[10] = v4;
  v5 = sub_1C07B88BC(v4, (uint64_t)sub_1C081ABAC);
  return sub_1C081BA80(v5, v6);
}

uint64_t sub_1C081ABAC()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C078D3A4();
  sub_1C078AADC();
  *(_QWORD *)(v1 + 88) = v0;
  sub_1C078DEDC();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C081ABE8()
{
  uint64_t v0;
  os_log_type_t v1;
  void *v2;
  id v3;
  _QWORD *v4;
  os_log_type_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  NSObject *v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  unint64_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  os_log_type_t v33;
  uint64_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  _BOOL4 v40;
  unint64_t v41;
  uint8_t *v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;

  v2 = *(void **)(v0 + 88);
  if (!v2)
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v12 = sub_1C077585C();
    v13 = sub_1C079E000(v12, (uint64_t)qword_1ED762AF8);
    sub_1C078AAEC();
    v14 = v13;
    sub_1C106F538();
    v15 = sub_1C077C13C();
    v16 = os_log_type_enabled(v13, v15);
    v17 = *(_QWORD *)(v0 + 64);
    if (v16)
    {
      v18 = *(_QWORD *)(v0 + 56);
      v19 = (uint8_t *)sub_1C0775854();
      v46 = sub_1C0775854();
      *(_DWORD *)v19 = 136315138;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      *(_QWORD *)(v0 + 16) = sub_1C0788DAC(v18, v17, &v46);
      sub_1C07AACD4();
      sub_1C077CF6C();
      sub_1C07796F0(&dword_1C0771000, v14, v15, "A message in spotlight containing the unique identifier %s was not found", v19);
      sub_1C0778610();
      sub_1C0776778();
    }
    goto LABEL_25;
  }
  v3 = v2;
  sub_1C0814F7C(objc_msgSend(v3, sel_attributeSet));
  if (!v4)
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v20 = sub_1C077585C();
    v21 = sub_1C079E000(v20, (uint64_t)qword_1ED762AF8);
    sub_1C078AAEC();
    v14 = v21;
    sub_1C106F538();
    v22 = sub_1C077C13C();
    if (sub_1C0790D48(v22))
    {
      v43 = *(_QWORD *)(v0 + 56);
      v23 = (uint8_t *)sub_1C0775854();
      v46 = sub_1C0775854();
      *(_DWORD *)v23 = 136315138;
      sub_1C07767C4();
      *(_QWORD *)(v0 + 24) = sub_1C0782968(v43, v24, &v46);
      sub_1C07AACD4();
      sub_1C077CF6C();
      sub_1C07796F0(&dword_1C0771000, v21, v1, "The message with unique identifier %s does not contain contentTypeTree, cannot continue with processing", v23);
      sub_1C0778610();
      sub_1C0776778();
    }
    goto LABEL_24;
  }
  v5 = sub_1C0776614(0x6D2E63696C627570, 0xEE00656761737365, v4);
  sub_1C077960C();
  if ((v5 & 1) == 0)
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v25 = sub_1C077585C();
    v26 = sub_1C079E000(v25, (uint64_t)qword_1ED762AF8);
    sub_1C078AAEC();
    v14 = v26;
    sub_1C106F538();
    v27 = sub_1C077C13C();
    if (sub_1C0790D48(v27))
    {
      v28 = *(_QWORD *)(v0 + 56);
      v29 = (uint8_t *)sub_1C0775854();
      v46 = sub_1C0775854();
      *(_DWORD *)v29 = 136315138;
      sub_1C07767C4();
      *(_QWORD *)(v0 + 32) = sub_1C0782968(v28, v30, &v46);
      sub_1C10705AC();
      sub_1C077CF6C();
      sub_1C07796F0(&dword_1C0771000, v26, v1, "The message with unique identifier %s is not a public.message, cannot continue with processing", v29);
      sub_1C0778610();
      sub_1C0776778();
    }
    goto LABEL_24;
  }
  sub_1C0814FE8(objc_msgSend(v3, sel_attributeSet));
  if (!v6)
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v31 = sub_1C077585C();
    v32 = sub_1C079E000(v31, (uint64_t)qword_1ED762AF8);
    sub_1C078AAEC();
    v14 = v32;
    sub_1C106F538();
    v33 = sub_1C077C13C();
    if (sub_1C0790D48(v33))
    {
      v34 = *(_QWORD *)(v0 + 56);
      v35 = (uint8_t *)sub_1C0775854();
      v46 = sub_1C0775854();
      *(_DWORD *)v35 = 136315138;
      sub_1C07767C4();
      *(_QWORD *)(v0 + 40) = sub_1C0782968(v34, v36, &v46);
      sub_1C10705AC();
      sub_1C077CF6C();
      sub_1C07796F0(&dword_1C0771000, v14, v1, "The message with unique identifier %s does not contain attachments", v35);
      sub_1C0778610();
      sub_1C0776778();
    }
LABEL_24:

    goto LABEL_25;
  }
  if (v6[2])
  {
    v7 = (uint64_t)v3;
    v8 = v6[4];
    v9 = v6[5];
    *(_QWORD *)(v0 + 96) = v9;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C077960C();
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 104) = v10;
    *v10 = v0;
    v10[1] = sub_1C081B2EC;
    return sub_1C081B364(v8, v9, v7);
  }
  v44 = v3;
  sub_1C077960C();
  if (qword_1ED762B18 != -1)
    swift_once();
  v37 = sub_1C077585C();
  v38 = sub_1C079E000(v37, (uint64_t)qword_1ED762AF8);
  sub_1C078AAEC();
  v14 = v38;
  sub_1C106F538();
  v39 = sub_1C077C13C();
  v40 = sub_1C07767E4(v39);
  v41 = *(_QWORD *)(v0 + 64);
  if (v40)
  {
    v45 = *(_QWORD *)(v0 + 56);
    v42 = (uint8_t *)sub_1C0775854();
    v46 = sub_1C0775854();
    *(_DWORD *)v42 = 136315138;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    *(_QWORD *)(v0 + 48) = sub_1C0788DAC(v45, v41, &v46);
    sub_1C10705AC();
    sub_1C077CF6C();
    sub_1C07796F0(&dword_1C0771000, v38, v5, "The message with unique identifier %s does not contain attachments", v42);
    sub_1C0778610();
    sub_1C0776778();
  }

LABEL_25:
  sub_1C07758A4();

  return sub_1C078C7A8(0, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C081B2EC()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C078D3A4();
  sub_1C078AADC();
  *(_QWORD *)(v1 + 112) = v0;
  sub_1C078DEDC();
  sub_1C077960C();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C081B32C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 88);

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 112));
}

uint64_t sub_1C081B364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  type metadata accessor for ExtractedAttributes(0);
  v4[7] = sub_1C0797BC4();
  v4[8] = sub_1C0797BC4();
  v4[9] = sub_1C0797BC4();
  v4[10] = sub_1C0797BC4();
  v5 = (_QWORD *)swift_task_alloc();
  v4[11] = v5;
  v6 = sub_1C07B88BC(v5, (uint64_t)sub_1C081B3F4);
  return sub_1C081BA80(v6, v7);
}

uint64_t sub_1C081B3F4()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C078D3A4();
  sub_1C078AADC();
  *(_QWORD *)(v1 + 96) = v0;
  sub_1C078DEDC();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C081B430()
{
  uint64_t v0;
  void *v1;
  id v2;
  _QWORD *v3;
  char v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  unint64_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v23;

  v1 = *(void **)(v0 + 96);
  if (!v1)
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v14 = sub_1C077585C();
    v15 = sub_1C079E000(v14, (uint64_t)qword_1ED762AF8);
    sub_1C078AAEC();
    v16 = v15;
    sub_1C106F538();
    v17 = sub_1C077C13C();
    v18 = sub_1C077AF58(v16);
    v19 = *(_QWORD *)(v0 + 32);
    if (v18)
    {
      v20 = *(_QWORD *)(v0 + 24);
      v21 = (uint8_t *)sub_1C0775854();
      v23 = sub_1C0775854();
      *(_DWORD *)v21 = 136315138;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      *(_QWORD *)(v0 + 16) = sub_1C0788DAC(v20, v19, &v23);
      sub_1C07AACD4();
      sub_1C077CF6C();
      sub_1C07796F0(&dword_1C0771000, v16, v17, "A message in spotlight containing the unique identifier %s was not found", v21);
      sub_1C0778610();
      sub_1C0776778();
    }
    sub_1C07758A4();

    goto LABEL_12;
  }
  v2 = v1;
  sub_1C0814F7C(objc_msgSend(v2, sel_attributeSet));
  if (!v3 || (v4 = sub_1C0776614(0x692E63696C627570, 0xEC0000006567616DLL, v3), sub_1C077960C(), (v4 & 1) == 0))
  {

LABEL_12:
    v12 = 0;
    goto LABEL_13;
  }
  v6 = *(_QWORD **)(v0 + 72);
  v5 = *(_QWORD **)(v0 + 80);
  v8 = *(_QWORD *)(v0 + 56);
  v7 = *(_QWORD **)(v0 + 64);
  v9 = *(void **)(v0 + 40);
  v10 = v2;
  sub_1C07767C4();
  sub_1C07A50F0(v10, v5);
  sub_1C07767C4();
  sub_1C07A50F0(v9, v6);
  sub_1C0814F2C((uint64_t)v5, (uint64_t)v7);
  sub_1C0814F2C((uint64_t)v6, v8);
  type metadata accessor for ImageMessageData(0);
  sub_1C077B5BC();
  sub_1C0814868(v7, v8);
  v12 = v11;
  sub_1C0814EF0((uint64_t)v6);
  sub_1C0814EF0((uint64_t)v5);
  if (v12)
  {
    v13 = swift_retain();
    sub_1C081B6D8(v13);

    swift_release();
  }
  else
  {

  }
LABEL_13:
  swift_task_dealloc();
  sub_1C07767BC();
  sub_1C07796F8();
  swift_task_dealloc();
  return sub_1C078C7A8(v12, *(uint64_t (**)(void))(v0 + 8));
}

void sub_1C081B6D8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  unint64_t v18;
  id v19;
  NSObject *v20;
  NSObject *v21;
  id v22;
  void *v23;
  uint64_t v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  os_log_type_t v29;
  uint8_t *v30;
  id v31[2];

  v31[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = *(_QWORD **)(a1 + 72);
  if (v1 && v1[2])
  {
    v3 = v1[4];
    v2 = v1[5];
    sub_1C07ACF80(&qword_1ED762CD0);
    v4 = sub_1C0778598();
    *(_OWORD *)(v4 + 16) = xmmword_1C107B050;
    v5 = (void *)*MEMORY[0x1E0C966D0];
    v6 = (void *)*MEMORY[0x1E0C966C0];
    *(_QWORD *)(v4 + 32) = *MEMORY[0x1E0C966D0];
    *(_QWORD *)(v4 + 40) = v6;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C106FF28();
    v7 = v5;
    v8 = v6;
    sub_1C081AA58();
    v10 = v9;
    v11 = (void *)objc_opt_self();
    sub_1C07ACF80(&qword_1ED762CB0);
    v12 = sub_1C0778598();
    *(_OWORD *)(v12 + 16) = xmmword_1C1079220;
    *(_QWORD *)(v12 + 32) = v3;
    *(_QWORD *)(v12 + 40) = v2;
    v13 = (void *)sub_1C106FEEC();
    swift_bridgeObjectRelease();
    v14 = objc_msgSend(v11, sel_predicateForContactsWithIdentifiers_, v13);

    sub_1C07ACF80(&qword_1ED755F30);
    v15 = (void *)sub_1C106FEEC();
    sub_1C0775844();
    v31[0] = 0;
    v16 = objc_msgSend(v10, sel_unifiedContactsMatchingPredicate_keysToFetch_error_, v14, v15, v31);

    v17 = v31[0];
    if (!v16)
    {
      v22 = v31[0];
      v23 = (void *)sub_1C106AA14();

      swift_willThrow();
      if (qword_1ED762B18 != -1)
        swift_once();
      v24 = sub_1C077585C();
      v21 = sub_1C077965C(v24, (uint64_t)qword_1ED762AF8);
      v25 = sub_1C1070390();
      if (os_log_type_enabled(v21, v25))
      {
        v26 = (uint8_t *)sub_1C0775854();
        *(_WORD *)v26 = 0;
        sub_1C077F048(&dword_1C0771000, v21, v25, "error when trying to call into contactStore", v26);
        sub_1C0776778();
      }

      goto LABEL_19;
    }
    sub_1C081DB68();
    v18 = sub_1C106FF04();
    v19 = v17;

    if (v18 >> 62)
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v27 = sub_1C10709B4();
      sub_1C077960C();
      if (v27)
        goto LABEL_6;
    }
    else if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      sub_1C0783D0C(0, (v18 & 0xC000000000000001) == 0, v18);
      if ((v18 & 0xC000000000000001) != 0)
        v20 = MEMORY[0x1C3BA70DC](0, v18);
      else
        v20 = *(id *)(v18 + 32);
      v21 = v20;
      sub_1C077960C();
      sub_1C081413C(v21);
LABEL_19:

      return;
    }
    sub_1C077960C();
    if (qword_1ED762B18 != -1)
      swift_once();
    v28 = sub_1C077585C();
    v21 = sub_1C077965C(v28, (uint64_t)qword_1ED762AF8);
    v29 = sub_1C1070390();
    if (sub_1C077AF58(v21))
    {
      v30 = (uint8_t *)sub_1C0775854();
      *(_WORD *)v30 = 0;
      sub_1C077F048(&dword_1C0771000, v21, v29, "new contacts is empty", v30);
      sub_1C0776778();
    }
    goto LABEL_19;
  }
}

uint64_t sub_1C081BA80(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v2[4] = a1;
  v2[5] = a2;
  v3 = (_QWORD *)swift_task_alloc();
  v2[6] = v3;
  *v3 = v2;
  v3[1] = sub_1C081BAC8;
  return sub_1C081BD50();
}

uint64_t sub_1C081BAC8()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C078D3A4();
  sub_1C078AADC();
  *(_QWORD *)(v1 + 56) = v0;
  sub_1C078DEDC();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C081BB04()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  _BOOL4 v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 40);
  sub_1C07796D8();
  v4 = sub_1C081A820(v2, v1, v3);
  if (v4 >> 62)
  {
    sub_1C079971C();
    v5 = sub_1C077AF50();
    sub_1C07767AC();
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v5 == 1)
  {
    sub_1C0783D0C(0, (v4 & 0xC000000000000001) == 0, v4);
    if ((v4 & 0xC000000000000001) != 0)
      v6 = (id)MEMORY[0x1C3BA70DC](0, v4);
    else
      v6 = *(id *)(v4 + 32);
    v7 = v6;
    sub_1C07767AC();
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v8 = sub_1C077585C();
    v9 = sub_1C079E000(v8, (uint64_t)qword_1ED762AF8);
    sub_1C078AAEC();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C106F538();
    v10 = sub_1C077C13C();
    v11 = sub_1C07767E4(v10);
    v12 = *(_QWORD *)(v0 + 40);
    if (v11)
    {
      v15 = *(_QWORD *)(v0 + 32);
      v13 = sub_1C0775854();
      v16 = sub_1C0775854();
      *(_DWORD *)v13 = 136315394;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      *(_QWORD *)(v0 + 16) = sub_1C0788DAC(v15, v12, &v16);
      sub_1C10705AC();
      sub_1C077CF6C();
      *(_WORD *)(v13 + 12) = 2048;
      sub_1C07767AC();
      *(_QWORD *)(v0 + 24) = v5;
      sub_1C10705AC();
      sub_1C07767AC();
      _os_log_impl(&dword_1C0771000, v9, (os_log_type_t)v9, "Spotlight returned searchable items with the following count for the message unique identifier %s: %ld. Expecting count to be 1, returning nil", (uint8_t *)v13, 0x16u);
      sub_1C0778610();
      sub_1C0776778();
    }
    sub_1C07758A4();
    sub_1C07758A4();

    v7 = 0;
  }
  return (*(uint64_t (**)(id))(v0 + 8))(v7);
}

uint64_t sub_1C081BD50()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  sub_1C077862C();
  return swift_task_switch();
}

uint64_t sub_1C081BD6C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v10)(uint64_t);

  v1 = v0[3];
  if (*(_QWORD *)(v1 + 120))
  {
    v10 = (uint64_t (*)(uint64_t))v0[1];
    v2 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    return v10(v2);
  }
  else
  {
    v4 = *(void **)(v1 + 112);
    v5 = objc_allocWithZone(MEMORY[0x1E0CA6B28]);
    sub_1C07796D8();
    v6 = v4;
    v7 = sub_1C0794CFC();
    v0[4] = v7;
    v8 = swift_task_alloc();
    v0[5] = v8;
    *(_QWORD *)(v8 + 16) = v1;
    *(_QWORD *)(v8 + 24) = v7;
    v9 = (_QWORD *)swift_task_alloc();
    v0[6] = v9;
    sub_1C07ACF80(&qword_1EF6318E0);
    *v9 = v0;
    v9[1] = sub_1C081BE80;
    sub_1C077862C();
    return sub_1C1070C24();
  }
}

uint64_t sub_1C081BE80()
{
  sub_1C07862EC();
  sub_1C07767BC();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C081BEC0()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t isa;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t (*v7)(void);

  v1 = *(NSObject **)(v0 + 24);

  v1[15].isa = *(Class *)(v0 + 16);
  swift_bridgeObjectRelease();
  if (v1[15].isa)
  {
    isa = (uint64_t)v1[15].isa;
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v3 = sub_1C077585C();
    sub_1C077965C(v3, (uint64_t)qword_1ED762AF8);
    v4 = sub_1C077C13C();
    if (sub_1C077AF58(v1))
    {
      v5 = (uint8_t *)sub_1C0775854();
      *(_WORD *)v5 = 0;
      sub_1C077F048(&dword_1C0771000, v1, v4, "Something unexpected happened and no search items were found, returning empty searchableItems", v5);
      sub_1C0776778();
    }

    isa = MEMORY[0x1E0DEE9D8];
  }
  v7 = *(uint64_t (**)(void))(v0 + 8);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return sub_1C0787904(isa, v7);
}

uint64_t sub_1C081BFB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  _QWORD *v7;

  v4[22] = a3;
  v4[23] = v3;
  v4[20] = a1;
  v4[21] = a2;
  v6 = sub_1C106ADE0();
  v4[24] = v6;
  v4[25] = *(_QWORD *)(v6 - 8);
  v4[26] = sub_1C0779644();
  type metadata accessor for ExtractedAttributes(0);
  v4[27] = swift_task_alloc();
  v4[28] = swift_task_alloc();
  v7 = (_QWORD *)swift_task_alloc();
  v4[29] = v7;
  *v7 = v4;
  v7[1] = sub_1C081C058;
  return sub_1C081C850(a1);
}

uint64_t sub_1C081C058()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C078D3A4();
  sub_1C078AADC();
  *(_QWORD *)(v1 + 240) = v0;
  sub_1C078DEDC();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C081C094()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  uint64_t v23;
  id v24;
  _QWORD *v25;
  _QWORD *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  _BOOL4 v33;
  uint64_t v34;
  uint8_t *v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t i;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  os_log_t log;
  unint64_t *v61;
  unint64_t v62;
  uint64_t v63[2];

  v2 = *(_QWORD *)(v0 + 240);
  v63[0] = MEMORY[0x1E0DEE9D8];
  if (v2 >> 62)
    goto LABEL_63;
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  v4 = v2;
LABEL_3:
  v5 = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v6 = 0;
    log = (os_log_t)(v0 + 64);
    v62 = v2 & 0xC000000000000001;
    v7 = v2 & 0xFFFFFFFFFFFFFF8;
    v8 = v4 + 32;
    while (1)
    {
      if (v62)
      {
        v9 = (id)MEMORY[0x1C3BA70DC](v6, *(_QWORD *)(v0 + 240));
      }
      else
      {
        if (v6 >= *(_QWORD *)(v7 + 16))
        {
          __break(1u);
LABEL_62:
          __break(1u);
LABEL_63:
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          v3 = sub_1C10709B4();
          sub_1C077960C();
          v4 = *(_QWORD *)(v0 + 240);
          goto LABEL_3;
        }
        v9 = *(id *)(v8 + 8 * v6);
      }
      v1 = (uint64_t)v9;
      v10 = v6 + 1;
      if (__OFADD__(v6, 1))
        goto LABEL_62;
      v11 = sub_1C07877F4((uint64_t)v9, sel_attributeSet);
      v12 = sub_1C081DA2C(v11, (SEL *)&selRef_contentType);
      if (!v13)
        goto LABEL_15;
      *(_QWORD *)(v0 + 112) = v12;
      *(_QWORD *)(v0 + 120) = v13;
      strcpy((char *)(v0 + 96), "public.message");
      *(_BYTE *)(v0 + 111) = -18;
      sub_1C07B1280();
      v2 = v0 + 112;
      sub_1C07A1B0C();
      v14 = sub_1C078235C();
      if ((((_DWORD)v0 + 112) & 1) == 0)
        goto LABEL_15;
      v15 = sub_1C07877F4(v14, sel_attributeSet);
      sub_1C081DA2C(v15, (SEL *)&selRef_messageType);
      v2 = (unint64_t)v16;
      v17 = swift_bridgeObjectRelease();
      if (!v2)
        goto LABEL_14;
      v18 = sub_1C07877F4(v17, sel_attributeSet);
      v19 = sub_1C081DA2C(v18, (SEL *)&selRef_messageType);
      if (!v20)
        goto LABEL_15;
      *(_QWORD *)(v0 + 64) = v19;
      *(_QWORD *)(v0 + 72) = v20;
      *(_QWORD *)(v0 + 80) = 6779757;
      *(_QWORD *)(v0 + 88) = 0xE300000000000000;
      v2 = v0 + 64;
      sub_1C07A1B0C();
      sub_1C078235C();
      if ((log & 1) != 0)
      {
LABEL_14:
        sub_1C1070810();
        sub_1C1070840();
        sub_1C107084C();
        v2 = (unint64_t)v63;
        sub_1C107081C();
      }
      else
      {
LABEL_15:

      }
      ++v6;
      if (v10 == v3)
      {
        v21 = v63[0];
        v5 = MEMORY[0x1E0DEE9D8];
        goto LABEL_20;
      }
    }
  }
  v21 = MEMORY[0x1E0DEE9D8];
LABEL_20:
  v22 = (unint64_t *)(v0 + 128);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 128) = v5;
  if (v21 < 0 || (v21 & 0x4000000000000000) != 0)
  {
    sub_1C07796D8();
    v23 = sub_1C10709B4();
    sub_1C07758C4();
  }
  else
  {
    v23 = *(_QWORD *)(v21 + 16);
  }
  v61 = (unint64_t *)(v0 + 128);
  if (v23)
  {
    if (v23 < 1)
    {
      __break(1u);
      goto LABEL_68;
    }
    v1 = 0;
    v62 = v21 & 0xC000000000000001;
    do
    {
      if (v62)
        sub_1C07BCD60();
      v24 = *(id *)(v21 + 8 * v1 + 32);
      v25 = *(_QWORD **)(v0 + 216);
      v26 = *(_QWORD **)(v0 + 224);
      v27 = v24;
      sub_1C07767C4();
      sub_1C07A50F0(v27, v26);
      sub_1C0814F2C((uint64_t)v26, (uint64_t)v25);
      type metadata accessor for TextMessageData(0);
      sub_1C077B5BC();
      sub_1C081430C(v25);
      if (v28)
      {
        v29 = v28;
        if (!sub_1C0814644()
          && (*(_QWORD *)(v29 + 32) == *(_QWORD *)(v0 + 168)
            ? (v36 = *(_QWORD *)(v29 + 40) == *(_QWORD *)(v0 + 176))
            : (v36 = 0),
              v36 || (sub_1C1070CB4() & 1) != 0))
        {
          v37 = swift_retain();
          MEMORY[0x1C3BA6800](v37);
          if (*(_QWORD *)((*v61 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v61 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1C106FF58();
          v38 = *(_QWORD *)(v0 + 224);
          sub_1C106FFC4();
          sub_1C106FF28();
          swift_release();

          sub_1C0814EF0(v38);
        }
        else
        {
          sub_1C0814EF0(*(_QWORD *)(v0 + 224));

          swift_release();
        }
      }
      else
      {
        if (qword_1ED762B18 != -1)
          swift_once();
        v30 = sub_1C077585C();
        v31 = sub_1C077965C(v30, (uint64_t)qword_1ED762AF8);
        v32 = sub_1C1070390();
        v33 = sub_1C077AF58(v31);
        v34 = *(_QWORD *)(v0 + 224);
        if (v33)
        {
          v35 = (uint8_t *)sub_1C0775854();
          *(_WORD *)v35 = 0;
          sub_1C077F048(&dword_1C0771000, v31, v32, "Failed converting a searchableItem into a TextMessageData", v35);
          sub_1C0776778();
        }

        sub_1C0814EF0(v34);
      }
      ++v1;
    }
    while (v23 != v1);
    sub_1C07758C4();
    v22 = (unint64_t *)(v0 + 128);
    v39 = *v61;
  }
  else
  {
    sub_1C07758C4();
    v39 = MEMORY[0x1E0DEE9D8];
  }
  if (v39 >> 62)
  {
    sub_1C07796D8();
    v40 = sub_1C077AF50();
    if (!v40)
      goto LABEL_54;
  }
  else
  {
    v40 = *(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_1C07796D8();
    if (!v40)
      goto LABEL_54;
  }
  if (v40 < 1)
  {
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  for (i = 0; i != v40; ++i)
  {
    if ((v39 & 0xC000000000000001) != 0)
      sub_1C07BCD60();
    v42 = *(_QWORD *)(v39 + 8 * i + 32);
    swift_retain();
    sub_1C081B6D8(v42);
    swift_release();
  }
LABEL_54:
  sub_1C0775844();
  sub_1C081A9D4(v22);
  if (qword_1ED762B18 != -1)
    swift_once();
  v43 = *(_QWORD *)(v0 + 160);
  v45 = *(_QWORD *)(v0 + 200);
  v44 = *(_QWORD *)(v0 + 208);
  v46 = *(_QWORD *)(v0 + 192);
  v47 = sub_1C077585C();
  sub_1C079E000(v47, (uint64_t)qword_1ED762AF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 16))(v44, v43, v46);
  swift_bridgeObjectRetain_n();
  v48 = sub_1C106F538();
  v49 = sub_1C1070384();
  if (os_log_type_enabled(v48, v49))
  {
    log = v48;
    LOBYTE(v62) = v49;
    v1 = sub_1C0775854();
    v63[0] = sub_1C0775854();
    *(_DWORD *)v1 = 134218498;
    sub_1C0775864();
    if (!(*v61 >> 62))
    {
      v50 = *(_QWORD *)((*v61 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_59;
    }
LABEL_69:
    sub_1C079971C();
    v50 = sub_1C077AF50();
    sub_1C07767AC();
LABEL_59:
    v51 = *(_QWORD *)(v0 + 208);
    v52 = *(_QWORD *)(v0 + 192);
    v53 = *(_QWORD *)(v0 + 176);
    v58 = *(_QWORD *)(v0 + 200);
    v59 = *(_QWORD *)(v0 + 168);
    *(_QWORD *)(v0 + 136) = v50;
    sub_1C10705AC();
    *(_WORD *)(v1 + 12) = 2080;
    sub_1C0815044();
    v54 = sub_1C1070C0C();
    *(_QWORD *)(v0 + 144) = sub_1C0788DAC(v54, v55, v63);
    sub_1C10705AC();
    sub_1C077960C();
    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v51, v52);
    *(_WORD *)(v1 + 22) = 2080;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    *(_QWORD *)(v0 + 152) = sub_1C0788DAC(v59, v53, v63);
    sub_1C10705AC();
    sub_1C077CF6C();
    _os_log_impl(&dword_1C0771000, log, (os_log_type_t)v62, "Found %ld messages in searchContextMessages around time %s for conversation %s which contain text content", (uint8_t *)v1, 0x20u);
    swift_arrayDestroy();
    sub_1C0776778();
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 200) + 8))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 192));
  sub_1C07758A4();

  sub_1C0775864();
  v56 = *(_QWORD *)(v0 + 128);
  sub_1C07767BC();
  sub_1C07796F8();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v56);
}

uint64_t sub_1C081C850(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[3] = a1;
  v2[4] = v1;
  v3 = sub_1C106AD20();
  v2[5] = v3;
  v2[6] = *(_QWORD *)(v3 - 8);
  v2[7] = sub_1C0779644();
  v4 = sub_1C106ADE0();
  v2[8] = v4;
  v2[9] = *(_QWORD *)(v4 - 8);
  v2[10] = sub_1C0779644();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C081C8B4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  void *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;

  v1 = v0[7];
  v2 = v0[5];
  v3 = v0[6];
  v12 = v0[4];
  sub_1C1070774();
  sub_1C106FC94();
  sub_1C106AD2C();
  sub_1C08F0670();
  sub_1C078D3B4();
  v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v4(v1, v2);
  sub_1C07A2F78();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  sub_1C106AD2C();
  sub_1C08F0670();
  sub_1C078D3B4();
  v4(v1, v2);
  sub_1C07A2F78();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  v5 = *(void **)(v12 + 112);
  v6 = objc_allocWithZone(MEMORY[0x1E0CA6B28]);
  v7 = v5;
  v8 = sub_1C0794CFC();
  v0[11] = v8;
  v9 = swift_task_alloc();
  v0[12] = v9;
  *(_QWORD *)(v9 + 16) = v12;
  *(_QWORD *)(v9 + 24) = v8;
  v10 = (_QWORD *)swift_task_alloc();
  v0[13] = v10;
  sub_1C07ACF80(&qword_1EF6318E0);
  *v10 = v0;
  v10[1] = sub_1C081CADC;
  sub_1C077862C();
  return sub_1C1070C24();
}

uint64_t sub_1C081CADC()
{
  sub_1C07862EC();
  sub_1C07767BC();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C081CB1C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_1C07767BC();
  sub_1C07796F8();
  return sub_1C0787904(v1, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C081CB5C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v8 = sub_1C07ACF80(&qword_1EF6318E8);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = MEMORY[0x1E0C80A78](v8);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16))((char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8, v11);
  v12 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v13 + v12, (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  sub_1C081CC90(a3, a5, v13);
  return swift_release();
}

uint64_t sub_1C081CC3C()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C07ACF80(&qword_1EF6318E8);
  return sub_1C1070060();
}

uint64_t sub_1C081CC90(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _QWORD *v9;
  void *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_1C0778598();
  *(_QWORD *)(v6 + 16) = MEMORY[0x1E0DEE9D8];
  v7 = MEMORY[0x1E0C809B0];
  v8 = sub_1C0790DCC((uint64_t)sub_1C0E59278, MEMORY[0x1E0C809B0], 1107296256, v12, v14);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_setFoundItemsHandler_, v8);
  _Block_release(v8);
  v9 = (_QWORD *)sub_1C0778598();
  v9[2] = a2;
  v9[3] = a3;
  v9[4] = v6;
  v10 = sub_1C0790DCC((uint64_t)sub_1C0E592D8, v7, 1107296256, v13, v15);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_setCompletionHandler_, v10);
  _Block_release(v10);
  objc_msgSend(a1, sel_start);
  return swift_release();
}

uint64_t sub_1C081CDFC()
{
  unint64_t v0;

  swift_beginAccess();
  v0 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0BD9EF4(v0);
  return swift_endAccess();
}

void sub_1C081CE4C(void *a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24[3];

  if (a1)
  {
    v6 = a1;
    if (qword_1ED762B18 != -1)
      swift_once();
    v7 = sub_1C106F544();
    sub_1C079E000(v7, (uint64_t)qword_1ED762AF8);
    v8 = a1;
    v9 = a1;
    v10 = sub_1C106F538();
    v11 = sub_1C1070390();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v24[0] = v13;
      *(_DWORD *)v12 = 136315138;
      swift_getErrorValue();
      v14 = sub_1C1070D74();
      sub_1C0788DAC(v14, v15, v24);
      sub_1C10705AC();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C0771000, v10, v11, "Received error %s in query completion handler in AutonamingMessagesUpdateHandler", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v13, -1, -1);
      MEMORY[0x1C3BA8270](v12, -1, -1);
    }
    else
    {

    }
    a2(0);

  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v17 = (_QWORD *)(a4 + 16);
    v18 = sub_1C106F544();
    sub_1C079E000(v18, (uint64_t)qword_1ED762AF8);
    swift_retain();
    v19 = sub_1C106F538();
    v20 = sub_1C1070384();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v21 = 134217984;
      swift_beginAccess();
      if (*v17 >> 62)
      {
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v22 = sub_1C10709B4();
        swift_bridgeObjectRelease();
      }
      else
      {
        v22 = *(_QWORD *)((*v17 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v24[0] = v22;
      sub_1C10705AC();
      swift_release();
      _os_log_impl(&dword_1C0771000, v19, v20, "Finished fetching %ld messages indexed by Spotlight in AutonamingMessagesUpdateHandler", v21, 0xCu);
      MEMORY[0x1C3BA8270](v21, -1, -1);

    }
    else
    {

      swift_release();
    }
    swift_beginAccess();
    v23 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    a2(v23);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C081D1B0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C0775844();
  sub_1C07767AC();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C081D22C()
{
  sub_1C081D1B0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AutonamingMessagesSpotlightQuerier()
{
  return objc_opt_self();
}

uint64_t sub_1C081D26C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C081D290()
{
  return sub_1C081CDFC();
}

uint64_t sub_1C081D298()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1C081D2C4(void *a1)
{
  uint64_t v1;

  sub_1C081CE4C(a1, *(void (**)(uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

id sub_1C081D2D0(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  void *v5;
  id v6;

  v5 = (void *)sub_1C106FAF0();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v3, sel_initWithQueryString_queryContext_, v5, a3);

  return v6;
}

uint64_t sub_1C081D330(uint64_t a1)
{
  uint64_t v1;

  return sub_1C081CB5C(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), (uint64_t)&unk_1E7A0D260, (uint64_t)sub_1C081D35C);
}

void sub_1C081D360(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  char v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char *v80;
  uint64_t v81;
  unint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  _QWORD *v95;
  uint64_t v96;

  v3 = a1[1];
  v4 = sub_1C1070BE8();
  if (v4 >= v3)
  {
    if (v3 < 0)
      goto LABEL_128;
    if (v3)
      sub_1C08117BC(0, v3, 1, a1);
    return;
  }
  v5 = v4;
  sub_1C08CBEC4(v3 / 2);
  v95 = v6;
  v96 = v7;
  v91 = v3;
  v89 = a1;
  if (v3 <= 0)
    goto LABEL_92;
  v90 = v5;
  v8 = 0;
  v9 = *a1;
  v88 = *a1 - 8;
  v10 = (char *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v11 = v8++;
    if (v8 >= v3)
      goto LABEL_20;
    swift_retain();
    swift_retain();
    v12 = sub_1C106AD50();
    swift_release();
    swift_release();
    v8 = v11 + 2;
    if (v11 + 2 >= v3)
    {
LABEL_10:
      if ((v12 & 1) == 0)
        goto LABEL_20;
LABEL_13:
      if (v8 < v11)
        goto LABEL_129;
      if (v11 < v8)
      {
        v16 = (uint64_t *)(v88 + 8 * v8);
        v17 = v8;
        v18 = v11;
        v19 = (uint64_t *)(v9 + 8 * v11);
        do
        {
          if (v18 != --v17)
          {
            if (!v9)
              goto LABEL_135;
            v20 = *v19;
            *v19 = *v16;
            *v16 = v20;
          }
          ++v18;
          --v16;
          ++v19;
        }
        while (v18 < v17);
      }
      goto LABEL_20;
    }
    v13 = v11;
    while (1)
    {
      swift_retain();
      swift_retain();
      v14 = sub_1C106AD50();
      swift_release();
      swift_release();
      if (((v12 ^ v14) & 1) != 0)
        break;
      v15 = v13 + 3;
      ++v13;
      if (v15 >= v3)
      {
        v8 = v3;
        goto LABEL_10;
      }
    }
    v8 = v13 + 2;
    if ((v12 & 1) != 0)
      goto LABEL_13;
LABEL_20:
    if (v8 < v3)
    {
      if (__OFSUB__(v8, v11))
        goto LABEL_127;
      if (v8 - v11 < v90)
      {
        if (__OFADD__(v11, v90))
          goto LABEL_130;
        if (v11 + v90 >= v3)
          v21 = v3;
        else
          v21 = v11 + v90;
        if (v21 < v11)
        {
LABEL_131:
          __break(1u);
          goto LABEL_132;
        }
        if (v8 != v21)
        {
          v22 = (uint64_t *)(v88 + 8 * v8);
          v92 = v11;
          v93 = v21;
          do
          {
            v23 = v22;
            do
            {
              swift_retain();
              swift_retain();
              v24 = sub_1C106AD50();
              swift_release();
              swift_release();
              if ((v24 & 1) == 0)
                break;
              if (!v9)
                goto LABEL_133;
              v25 = *v23;
              *v23 = v23[1];
              v23[1] = v25;
              --v23;
              ++v11;
            }
            while (v8 != v11);
            ++v8;
            ++v22;
            v11 = v92;
          }
          while (v8 != v93);
          v8 = v93;
        }
      }
    }
    if (v8 < v11)
      goto LABEL_126;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_1C0861AD0(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v27 = *((_QWORD *)v10 + 2);
    v26 = *((_QWORD *)v10 + 3);
    v28 = v27 + 1;
    if (v27 >= v26 >> 1)
      v10 = sub_1C0861AD0((char *)(v26 > 1), v27 + 1, 1, v10);
    *((_QWORD *)v10 + 2) = v28;
    v94 = v10 + 32;
    v29 = &v10[16 * v27 + 32];
    *(_QWORD *)v29 = v11;
    *((_QWORD *)v29 + 1) = v8;
    if (v27)
      break;
    v28 = 1;
LABEL_85:
    v3 = v91;
    if (v8 >= v91)
      goto LABEL_93;
  }
  v30 = v10 + 32;
  while (1)
  {
    v31 = v28 - 1;
    if (v28 >= 4)
    {
      v36 = &v30[16 * v28];
      v37 = *((_QWORD *)v36 - 8);
      v38 = *((_QWORD *)v36 - 7);
      v42 = __OFSUB__(v38, v37);
      v39 = v38 - v37;
      if (v42)
        goto LABEL_111;
      v41 = *((_QWORD *)v36 - 6);
      v40 = *((_QWORD *)v36 - 5);
      v42 = __OFSUB__(v40, v41);
      v34 = v40 - v41;
      v35 = v42;
      if (v42)
        goto LABEL_112;
      v43 = v28 - 2;
      v44 = &v30[16 * v28 - 32];
      v46 = *(_QWORD *)v44;
      v45 = *((_QWORD *)v44 + 1);
      v42 = __OFSUB__(v45, v46);
      v47 = v45 - v46;
      if (v42)
        goto LABEL_113;
      v42 = __OFADD__(v34, v47);
      v48 = v34 + v47;
      if (v42)
        goto LABEL_115;
      if (v48 >= v39)
      {
        v66 = &v30[16 * v31];
        v68 = *(_QWORD *)v66;
        v67 = *((_QWORD *)v66 + 1);
        v42 = __OFSUB__(v67, v68);
        v69 = v67 - v68;
        if (v42)
          goto LABEL_121;
        v59 = v34 < v69;
        goto LABEL_74;
      }
    }
    else
    {
      if (v28 != 3)
      {
        v60 = *((_QWORD *)v10 + 4);
        v61 = *((_QWORD *)v10 + 5);
        v42 = __OFSUB__(v61, v60);
        v53 = v61 - v60;
        v54 = v42;
        goto LABEL_68;
      }
      v33 = *((_QWORD *)v10 + 4);
      v32 = *((_QWORD *)v10 + 5);
      v42 = __OFSUB__(v32, v33);
      v34 = v32 - v33;
      v35 = v42;
    }
    if ((v35 & 1) != 0)
      goto LABEL_114;
    v43 = v28 - 2;
    v49 = &v30[16 * v28 - 32];
    v51 = *(_QWORD *)v49;
    v50 = *((_QWORD *)v49 + 1);
    v52 = __OFSUB__(v50, v51);
    v53 = v50 - v51;
    v54 = v52;
    if (v52)
      goto LABEL_116;
    v55 = &v30[16 * v31];
    v57 = *(_QWORD *)v55;
    v56 = *((_QWORD *)v55 + 1);
    v42 = __OFSUB__(v56, v57);
    v58 = v56 - v57;
    if (v42)
      goto LABEL_118;
    if (__OFADD__(v53, v58))
      goto LABEL_120;
    if (v53 + v58 >= v34)
    {
      v59 = v34 < v58;
LABEL_74:
      if (v59)
        v31 = v43;
      goto LABEL_76;
    }
LABEL_68:
    if ((v54 & 1) != 0)
      goto LABEL_117;
    v62 = &v30[16 * v31];
    v64 = *(_QWORD *)v62;
    v63 = *((_QWORD *)v62 + 1);
    v42 = __OFSUB__(v63, v64);
    v65 = v63 - v64;
    if (v42)
      goto LABEL_119;
    if (v65 < v53)
      goto LABEL_85;
LABEL_76:
    v70 = v31 - 1;
    if (v31 - 1 >= v28)
    {
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
      goto LABEL_122;
    }
    v71 = v9;
    if (!v9)
      goto LABEL_134;
    v72 = v10;
    v73 = v30;
    v74 = &v30[16 * v70];
    v75 = *(_QWORD *)v74;
    v76 = &v73[16 * v31];
    v77 = *((_QWORD *)v76 + 1);
    v78 = v71;
    sub_1C08118A4((_QWORD *)(v71 + 8 * *(_QWORD *)v74), (_QWORD *)(v71 + 8 * *(_QWORD *)v76), v71 + 8 * v77, v95);
    if (v1)
      break;
    if (v77 < v75)
      goto LABEL_108;
    if (v31 > *((_QWORD *)v72 + 2))
      goto LABEL_109;
    *(_QWORD *)v74 = v75;
    v30 = v94;
    *(_QWORD *)&v94[16 * v70 + 8] = v77;
    v79 = *((_QWORD *)v72 + 2);
    if (v31 >= v79)
      goto LABEL_110;
    v10 = v72;
    v28 = v79 - 1;
    memmove(v76, v76 + 16, 16 * (v79 - 1 - v31));
    *((_QWORD *)v72 + 2) = v79 - 1;
    v9 = v78;
    if (v79 <= 2)
      goto LABEL_85;
  }
LABEL_90:
  swift_bridgeObjectRelease();
  if (v91 >= -1)
    goto LABEL_105;
  __break(1u);
LABEL_92:
  v10 = (char *)MEMORY[0x1E0DEE9D8];
  v28 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_93:
  v80 = v10;
  if (v28 >= 2)
  {
    v81 = *v89;
    while (1)
    {
      v82 = v28 - 2;
      if (v28 < 2)
        break;
      if (!v81)
        goto LABEL_136;
      v83 = v80;
      v84 = *(_QWORD *)&v80[16 * v82 + 32];
      v85 = *(_QWORD *)&v80[16 * v28 + 24];
      sub_1C08118A4((_QWORD *)(v81 + 8 * v84), (_QWORD *)(v81 + 8 * *(_QWORD *)&v80[16 * v28 + 16]), v81 + 8 * v85, v95);
      if (v1)
        goto LABEL_90;
      if (v85 < v84)
        goto LABEL_123;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v83 = sub_1C0861BC0();
      if (v82 >= *((_QWORD *)v83 + 2))
        goto LABEL_124;
      v86 = &v83[16 * v82 + 32];
      *(_QWORD *)v86 = v84;
      *((_QWORD *)v86 + 1) = v85;
      v87 = *((_QWORD *)v83 + 2);
      if (v28 > v87)
        goto LABEL_125;
      memmove(&v83[16 * v28 + 16], &v83[16 * v28 + 32], 16 * (v87 - v28));
      v80 = v83;
      *((_QWORD *)v83 + 2) = v87 - 1;
      v28 = v87 - 1;
      if (v87 <= 2)
        goto LABEL_104;
    }
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
    goto LABEL_131;
  }
LABEL_104:
  swift_bridgeObjectRelease();
  if (v91 >= -1)
  {
LABEL_105:
    *(_QWORD *)((v96 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
    sub_1C106FF28();
    swift_bridgeObjectRelease();
    return;
  }
LABEL_132:
  __break(1u);
LABEL_133:
  __break(1u);
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
}

uint64_t sub_1C081DA20(void *a1)
{
  return sub_1C081DA2C(a1, (SEL *)&selRef_contentType);
}

uint64_t sub_1C081DA2C(void *a1, SEL *a2)
{
  id v3;
  uint64_t v4;

  v3 = objc_msgSend(a1, *a2);

  if (!v3)
    return 0;
  v4 = sub_1C106FB14();

  return v4;
}

uint64_t sub_1C081DA94(uint64_t a1)
{
  uint64_t v1;

  return sub_1C081CB5C(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), (uint64_t)&unk_1E7A0D288, (uint64_t)sub_1C081D35C);
}

uint64_t sub_1C081DAC0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1C07ACF80(&qword_1EF6318E8);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1C081DB24()
{
  sub_1C07ACF80(&qword_1EF6318E8);
  return sub_1C081CC3C();
}

unint64_t sub_1C081DB68()
{
  unint64_t result;

  result = qword_1ED75D1E8;
  if (!qword_1ED75D1E8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED75D1E8);
  }
  return result;
}

void sub_1C081DBAC()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;

  v1 = *(void **)(v0 + 128);
  if (!v1)
  {
    v2 = sub_1C080B034();
    v3 = *(void **)(v0 + 128);
    *(_QWORD *)(v0 + 128) = v2;
    v4 = v2;

    v1 = 0;
  }
  v5 = v1;
  sub_1C077671C();
}

uint64_t AutonamingMessagesUpdateHandler.__allocating_init(config:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  AutonamingMessagesUpdateHandler.init(config:)(a1);
  return v2;
}

void AutonamingMessagesUpdateHandler.init(config:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  _QWORD __src[12];

  v2 = v1;
  v4 = type metadata accessor for Configuration();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)__src - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C080FFE8(__src);
  memcpy((void *)(v2 + 16), __src, 0x60uLL);
  *(_QWORD *)(v2 + 128) = 0;
  *(_BYTE *)(v2 + 120) = 1;
  sub_1C078E3E0(a1, (uint64_t)v6);
  type metadata accessor for AutonamingMessagesBiomeHandler();
  swift_allocObject();
  sub_1C080EA64((uint64_t)__src);
  v7 = sub_1C080B124((uint64_t)v6, __src);
  sub_1C078D09C(a1);
  *(_QWORD *)(v2 + 112) = v7;
  sub_1C077671C();
}

double sub_1C081DD08()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  unsigned int v10;
  id v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  double v16;
  double v17;
  double v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  double v28;
  double v29;
  __int128 v30;
  __int128 v31;
  _OWORD v32[2];
  id v33[5];

  v33[4] = *(id *)MEMORY[0x1E0C80C00];
  v0 = (_QWORD *)sub_1C106AB28();
  v1 = *(v0 - 1);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (void *)objc_opt_self();
  sub_1C081DBAC();
  v6 = v5;
  v7 = objc_msgSend(v5, sel_photoLibraryURL);

  sub_1C106AAF8();
  v8 = (void *)sub_1C106AAB0();
  (*(void (**)(char *, _QWORD *))(v1 + 8))(v3, v0);
  v9 = objc_msgSend(v4, sel_faceAnalysisTaskID);
  v33[0] = 0;
  v10 = objc_msgSend(v4, sel_queryProgressDetail_forPhotoLibraryURL_andTaskID_, v33, v8, v9);

  v11 = v33[0];
  if (!v11 || v10)
    goto LABEL_22;
  *(_QWORD *)&v32[0] = sub_1C106FB14();
  *((_QWORD *)&v32[0] + 1) = v12;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v0 = v11;
  sub_1C1070D20();
  v13 = sub_1C079613C();
  sub_1C079E21C();
  if (v3)
  {
    sub_1C107063C();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v32, 0, sizeof(v32));
  }
  sub_1C0800A54((uint64_t)v32, (uint64_t)v33);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v30 = sub_1C106FB14();
  *((_QWORD *)&v30 + 1) = v14;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C1070D20();
  v15 = sub_1C079613C();
  sub_1C079E21C();
  if (v3)
  {
    sub_1C107063C();
    swift_unknownObjectRelease();
  }
  else
  {
    v30 = 0u;
    v31 = 0u;
  }
  sub_1C0800A54((uint64_t)&v30, (uint64_t)v32);
  swift_bridgeObjectRelease();
  sub_1C07C015C((uint64_t)v32, (uint64_t)&v30);
  if (!*((_QWORD *)&v31 + 1))
    goto LABEL_20;
  if ((sub_1C07A372C() & 1) == 0)
    goto LABEL_12;
  v16 = v29;
  if (v29 == 0.0)
    goto LABEL_12;
  sub_1C07C015C((uint64_t)v33, (uint64_t)&v30);
  if (!*((_QWORD *)&v31 + 1))
  {
LABEL_20:

    sub_1C07C011C((uint64_t)&v30);
    goto LABEL_21;
  }
  if ((sub_1C07A372C() & 1) == 0)
  {
LABEL_12:

LABEL_21:
    sub_1C07C011C((uint64_t)v32);
    sub_1C07C011C((uint64_t)v33);
LABEL_22:
    if (qword_1ED762B18 != -1)
      swift_once();
    v23 = sub_1C077585C();
    v24 = sub_1C077965C(v23, (uint64_t)qword_1ED762AF8);
    v25 = sub_1C1070390();
    if (sub_1C07758D8(v25))
    {
      v26 = (uint8_t *)sub_1C0775854();
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_1C0771000, v24, (os_log_type_t)v0, "MediaAnalysis Photos progress failed, set to 100%% by default", v26, 2u);
      sub_1C0776778();
    }

    v18 = 1.0;
    v0 = v11;
    goto LABEL_27;
  }
  v17 = v29;
  if (qword_1ED762B18 != -1)
  {
    v28 = v29;
    swift_once();
    v17 = v28;
  }
  v18 = v17 / v16;
  v19 = sub_1C077585C();
  v20 = sub_1C077965C(v19, (uint64_t)qword_1ED762AF8);
  v21 = sub_1C1070384();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)sub_1C0775854();
    *(_DWORD *)v22 = 134217984;
    *(double *)&v30 = v18 * 100.0;
    sub_1C10705AC();
    _os_log_impl(&dword_1C0771000, v20, v21, "MediaAnalysis Photos progress: %f%%", v22, 0xCu);
    sub_1C0776778();
  }

  sub_1C07C011C((uint64_t)v32);
  sub_1C07C011C((uint64_t)v33);
LABEL_27:

  return v18;
}

uint64_t sub_1C081E15C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = v0;
  return swift_task_switch();
}

uint64_t sub_1C081E174()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  _BOOL4 v11;
  uint64_t v12;
  _DWORD *v13;
  _QWORD *v15;

  v1 = *(_QWORD *)(v0 + 32);
  *(_BYTE *)(v1 + 120) = 1;
  v2 = sub_1C081DD08();
  sub_1C07D4B70(0, (unint64_t *)&qword_1ED762BF0);
  if (static NSUserDefaults.autonamingMessagesPhotosProcessingProgress.getter() > v2)
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v3 = sub_1C077585C();
    v4 = sub_1C077965C(v3, (uint64_t)qword_1ED762AF8);
    v5 = sub_1C1070384();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = sub_1C0775854();
      *(_DWORD *)v6 = 134218240;
      *(double *)(v0 + 16) = v2 * 100.0;
      sub_1C10705AC();
      *(_WORD *)(v6 + 12) = 2048;
      *(double *)(v0 + 24) = static NSUserDefaults.autonamingMessagesPhotosProcessingProgress.getter() * 100.0;
      sub_1C10705AC();
      _os_log_impl(&dword_1C0771000, v4, v5, "AutonamingMessages processing will not commence, photos processing at %f%% has not reached satisfactory percentage of %f%%", (uint8_t *)v6, 0x16u);
      sub_1C0776778();
    }

    *(_BYTE *)(v1 + 120) = 0;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if (*(_BYTE *)(v1 + 120) != 1)
    return (*(uint64_t (**)(void))(v0 + 8))();
  if (qword_1ED762B18 != -1)
    swift_once();
  v7 = sub_1C077585C();
  v8 = sub_1C079E000(v7, (uint64_t)qword_1ED762AF8);
  swift_retain();
  v9 = sub_1C106F538();
  v10 = sub_1C1070384();
  v11 = sub_1C07758D8(v10);
  v12 = *(_QWORD *)(v0 + 32);
  if (v11)
  {
    v13 = (_DWORD *)sub_1C0775854();
    *v13 = 67109120;
    v13[1] = *(unsigned __int8 *)(v12 + 120);
    swift_release();
    sub_1C0787914(&dword_1C0771000, v9, v8, "Calling processBiomeEvent as shouldProcess: %{BOOL}d");
    sub_1C0776778();
  }
  swift_release();

  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v15;
  *v15 = v0;
  v15[1] = sub_1C081E424;
  return sub_1C080BFA0();
}

uint64_t sub_1C081E424(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 48) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1C081E480()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  _BOOL4 v5;
  uint64_t v6;
  _DWORD *v7;
  _QWORD *v9;

  v1 = *(unsigned __int8 *)(v0 + 48);
  *(_BYTE *)(*(_QWORD *)(v0 + 32) + 120) = v1;
  if (v1 != 1)
    return (*(uint64_t (**)(void))(v0 + 8))();
  if (qword_1ED762B18 != -1)
    swift_once();
  v2 = sub_1C077585C();
  sub_1C079E000(v2, (uint64_t)qword_1ED762AF8);
  swift_retain();
  v3 = sub_1C106F538();
  v4 = sub_1C1070384();
  v5 = os_log_type_enabled(v3, v4);
  v6 = *(_QWORD *)(v0 + 32);
  if (v5)
  {
    v7 = (_DWORD *)sub_1C0775854();
    *v7 = 67109120;
    v7[1] = *(unsigned __int8 *)(v6 + 120);
    swift_release();
    sub_1C0787914(&dword_1C0771000, v3, v4, "Calling processBiomeEvent as shouldProcess: %{BOOL}d");
    sub_1C0776778();
  }
  swift_release();

  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v9;
  *v9 = v0;
  v9[1] = sub_1C081E424;
  return sub_1C080BFA0();
}

void sub_1C081E5CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_log_type_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  uint8_t *v11;
  const char *v12;
  uint64_t v13;
  os_log_type_t v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  NSObject *loga;
  NSObject *log;
  NSObject *logb;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 112) + 32);
  if ((sub_1C080EE60() & 1) != 0)
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v2 = sub_1C077585C();
    loga = sub_1C077965C(v2, (uint64_t)qword_1ED762AF8);
    v3 = sub_1C1070384();
    if (sub_1C07ADA70(v3, v4, v5, v6, v7, v8, v9, v10, v22, loga))
    {
      v11 = (uint8_t *)sub_1C0775854();
      *(_WORD *)v11 = 0;
      v12 = "Reset request for autonaming biome handler completed";
      goto LABEL_10;
    }
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v13 = sub_1C077585C();
    logb = sub_1C077965C(v13, (uint64_t)qword_1ED762AF8);
    v14 = sub_1C1070384();
    if (sub_1C07ADA70(v14, v15, v16, v17, v18, v19, v20, v21, v22, logb))
    {
      v11 = (uint8_t *)sub_1C0775854();
      *(_WORD *)v11 = 0;
      v12 = "Reset request for autonaming biome handler did not work";
LABEL_10:
      _os_log_impl(&dword_1C0771000, log, (os_log_type_t)v1, v12, v11, 2u);
      sub_1C0776778();
    }
  }

}

uint64_t AutonamingMessagesUpdateHandler.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return v0;
}

uint64_t AutonamingMessagesUpdateHandler.__deallocating_deinit()
{
  AutonamingMessagesUpdateHandler.deinit();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AutonamingMessagesUpdateHandler()
{
  return objc_opt_self();
}

uint64_t method lookup function for AutonamingMessagesUpdateHandler()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AutonamingMessagesUpdateHandler.__allocating_init(config:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of AutonamingMessagesUpdateHandler.reset()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t BasicProperty.init(mapLocation:value:enumLookupValue:mapPredicates:constructRelationship:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>)
{
  *(_QWORD *)a9 = result;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_BYTE *)(a9 + 56) = a8;
  return result;
}

uint64_t sub_1C081E7D8()
{
  if (qword_1EF62E2E8 != -1)
    swift_once();
  qword_1EF631A00 = qword_1EF648268;
  *(_OWORD *)&qword_1EF631A08 = *(_OWORD *)algn_1EF648270;
  qword_1EF631A18 = qword_1EF648280;
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

uint64_t static BasicProperty.type.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  if (qword_1EF62DAA0 != -1)
    swift_once();
  sub_1C077F040();
  v2 = qword_1EF631A18;
  *(_QWORD *)a1 = qword_1EF631A00;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)&qword_1EF631A08;
  *(_QWORD *)(a1 + 24) = v2;
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

uint64_t static BasicProperty.type.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v4;

  v1 = *(_QWORD *)a1;
  v4 = *(_OWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 24);
  if (qword_1EF62DAA0 != -1)
    swift_once();
  sub_1C077F040();
  qword_1EF631A00 = v1;
  *(_OWORD *)&qword_1EF631A08 = v4;
  qword_1EF631A18 = v2;
  return swift_bridgeObjectRelease();
}

void static BasicProperty.type.modify()
{
  if (qword_1EF62DAA0 != -1)
    swift_once();
  sub_1C077F040();
  sub_1C0778534();
}

void BasicProperty.mapLocation.getter()
{
  sub_1C077AE90();
  sub_1C0778534();
}

void BasicProperty.mapLocation.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  sub_1C077671C();
}

uint64_t (*BasicProperty.mapLocation.modify())(_QWORD)
{
  return nullsub_1;
}

void BasicProperty.value.getter()
{
  sub_1C077AE90();
  sub_1C0778534();
}

void BasicProperty.value.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  sub_1C077671C();
}

uint64_t (*BasicProperty.value.modify())(_QWORD)
{
  return nullsub_1;
}

void BasicProperty.enumLookupValue.getter()
{
  sub_1C077AE90();
  sub_1C0778534();
}

void BasicProperty.enumLookupValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  sub_1C077671C();
}

uint64_t (*BasicProperty.enumLookupValue.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t BasicProperty.mapPredicates.getter()
{
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

uint64_t BasicProperty.mapPredicates.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 48) = a1;
  return result;
}

uint64_t (*BasicProperty.mapPredicates.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t BasicProperty.constructRelationship.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t BasicProperty.constructRelationship.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 56) = result;
  return result;
}

uint64_t (*BasicProperty.constructRelationship.modify())(_QWORD)
{
  return nullsub_1;
}

void static BasicProperty.currentUser.getter(uint64_t a1@<X8>)
{
  sub_1C079A788(a1);
}

void static BasicProperty.inferredDeviceUser.getter(uint64_t a1@<X8>)
{
  sub_1C079A788(a1);
}

void sub_1C081EB74()
{
  _OWORD *v0;
  uint64_t v1;
  _OWORD *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  unint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _OWORD *v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  _OWORD v60[2];
  _BYTE v61[25];
  uint64_t v62;

  sub_1C077AE5C();
  v2 = v0;
  v58 = v3;
  v52 = (int *)type metadata accessor for MapPredicate(0);
  v4 = *((_QWORD *)v52 - 1);
  MEMORY[0x1E0C80A78](v52);
  sub_1C077AED0();
  v51 = v5;
  MEMORY[0x1E0C80A78](v6);
  sub_1C0778674();
  sub_1C07ACF80(&qword_1ED759F70);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  sub_1C077AE40();
  v54 = v8;
  sub_1C07ACF80(&qword_1ED7618D0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v9);
  sub_1C077AE40();
  v53 = v10;
  v11 = (int *)sub_1C07ACF80(&qword_1EF630060);
  v12 = *((_QWORD *)v11 - 1);
  MEMORY[0x1E0C80A78](v11);
  sub_1C0778564();
  v15 = v14 - v13;
  v16 = v0[2];
  v60[1] = v0[1];
  *(_OWORD *)v61 = v16;
  *(_OWORD *)&v61[9] = *(_OWORD *)((char *)v0 + 41);
  v60[0] = *v0;
  v17 = *((_QWORD *)&v60[0] + 1);
  v56 = *(_QWORD *)&v60[0];
  v18 = *(_OWORD *)v61;
  sub_1C0820388((uint64_t)v60);
  sub_1C0D5572C(v58, v56, v17, v18, *((uint64_t *)&v18 + 1));
  v20 = v19;
  sub_1C08203D8((uint64_t)v60);
  if (!v1)
  {
    v50 = v15;
    if (*(_QWORD *)(v20 + 16))
    {
      v45 = v2;
      v21 = v15;
      v49 = v15 + v11[12];
      v48 = v15 + v11[16];
      v47 = (uint64_t *)(v15 + v11[20]);
      sub_1C0779D28();
      v24 = v20 + v23;
      v46 = *(_QWORD *)(v12 + 72);
      v25 = MEMORY[0x1E0DEE9D8];
      v26 = &qword_1ED7618D0;
      v27 = &qword_1ED759F70;
      v28 = v53;
      v29 = v54;
      v31 = v30;
      do
      {
        v62 = v22;
        v59 = v24;
        sub_1C078A8F8(v24, v21, &qword_1EF630060);
        v55 = v47[1];
        v57 = *v47;
        sub_1C078A67C(v49, v28, v26);
        sub_1C078A67C(v48, v29, v27);
        v32 = v27;
        v33 = v26;
        v34 = v25;
        v35 = (char *)v31 + v52[5];
        v36 = sub_1C106E41C();
        v37 = v35;
        v38 = v34;
        v26 = v33;
        v27 = v32;
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v37, v21, v36);
        sub_1C078A8F8(v28, (uint64_t)v31 + v52[6], v26);
        sub_1C078A8F8(v29, (uint64_t)v31 + v52[7], v32);
        *v31 = v57;
        v31[1] = v55;
        sub_1C07E05C8((uint64_t)v31, v51, type metadata accessor for MapPredicate);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C07EB69C();
          v38 = v43;
        }
        v39 = *(_QWORD *)(v38 + 16);
        v40 = v38;
        v28 = v53;
        v29 = v54;
        if (v39 >= *(_QWORD *)(v38 + 24) >> 1)
        {
          sub_1C07EB69C();
          v40 = v44;
        }
        *(_QWORD *)(v40 + 16) = v39 + 1;
        v25 = v40;
        sub_1C0779D28();
        sub_1C07E05F4(v51, v41 + v42 + *(_QWORD *)(v4 + 72) * v39, type metadata accessor for MapPredicate);
        sub_1C0821200((uint64_t)v31);
        sub_1C0784B94(v54, v32);
        sub_1C0784B94(v53, v26);
        v24 = v59 + v46;
        v22 = v62 - 1;
        v21 = v50;
      }
      while (v62 != 1);
      swift_bridgeObjectRelease();
      v2 = v45;
    }
    else
    {
      sub_1C077960C();
      v25 = MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    *((_QWORD *)v2 + 6) = v25;
  }
  sub_1C07757D0();
}

uint64_t BasicProperty.constructRows(entityIdentifier:source:sourceId:map:relationshipId:pipelineType:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  _BYTE *v22;
  __int128 v23;
  __int128 v24;
  int v25;
  uint64_t v26;
  unsigned __int8 v27;
  unint64_t v28;
  uint64_t v29;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  _BYTE v36[41];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  sub_1C077AE5C();
  v38 = v2;
  v39 = v3;
  v5 = v4;
  v37 = v6;
  v33 = v7;
  v34 = v8;
  v32 = v9;
  v11 = v10;
  sub_1C07ACF80((uint64_t *)&unk_1ED75EA40);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v12);
  sub_1C0778564();
  v15 = v14 - v13;
  v16 = sub_1C106E590();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  sub_1C0778564();
  v20 = v19 - v18;
  v21 = *v5;
  if (*(_QWORD *)(v0 + 48) || (sub_1C081EB74(), !v1))
  {
    sub_1C078A8F8(v11, v15, (uint64_t *)&unk_1ED75EA40);
    if (sub_1C07B2D80(v15, 1, v16) == 1)
    {
      sub_1C0784B94(v15, (uint64_t *)&unk_1ED75EA40);
      sub_1C081F128();
      swift_allocError();
      *v22 = 4;
      swift_willThrow();
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v20, v15, v16);
      *(_OWORD *)&v36[25] = *(_OWORD *)(v0 + 41);
      v23 = *(_OWORD *)(v0 + 32);
      v24 = *(_OWORD *)v0;
      *(_OWORD *)v36 = *(_OWORD *)(v0 + 16);
      *(_OWORD *)&v36[16] = v23;
      v35 = v24;
      v25 = v36[40];
      v26 = *(_QWORD *)v36;
      v31 = *(_OWORD *)&v36[8];
      v27 = v21;
      v28 = *((_QWORD *)&v23 + 1);
      v29 = *(_QWORD *)&v36[32];
      sub_1C0820388((uint64_t)&v35);
      v0 = sub_1C081F164(v20, v32, v33, v34, v29, v25, v37, v26, v31, *((uint64_t *)&v31 + 1), v28, v27);
      sub_1C08203D8((uint64_t)&v35);
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v20, v16);
    }
  }
  return v0;
}

unint64_t sub_1C081F128()
{
  unint64_t result;

  result = qword_1EF631A20;
  if (!qword_1EF631A20)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for MappingError, &type metadata for MappingError);
    atomic_store(result, (unint64_t *)&qword_1EF631A20);
  }
  return result;
}

uint64_t sub_1C081F164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, unint64_t a9, uint64_t a10, unint64_t a11, unsigned __int8 a12)
{
  uint64_t v12;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  BOOL v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(uint64_t, _QWORD, _QWORD);
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t (*v80)(uint64_t, _QWORD, _QWORD);
  _QWORD *v81;
  unint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(uint64_t, uint64_t, uint64_t);
  uint64_t v88;
  uint64_t v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t (*v93)(uint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t (*v100)(uint64_t, _QWORD, _QWORD);
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t (*v110)(uint64_t, _QWORD, _QWORD);
  uint64_t v111;
  uint64_t v112;
  int *v113;
  void (*v114)(uint64_t, uint64_t, uint64_t);
  uint64_t v115;
  _QWORD *v116;
  _QWORD *v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t (*v126)(uint64_t, _QWORD, _QWORD);
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  unint64_t v130;
  uint64_t (*v131)(uint64_t, _QWORD, _QWORD);
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  unint64_t v146;
  BOOL v147;
  uint64_t v148;
  BOOL v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t (*v152)(uint64_t, uint64_t);
  uint64_t v153;
  uint64_t v154;
  void (*v155)(uint64_t, uint64_t, uint64_t);
  uint64_t v156;
  NSObject *v157;
  os_log_type_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  unint64_t v162;
  uint64_t v163;
  unint64_t v164;
  uint64_t (*v165)(uint64_t, uint64_t);
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t *v176;
  _QWORD *v177;
  uint64_t v178;
  unint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t result;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  int v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  void (*v200)(uint64_t, uint64_t, uint64_t);
  uint64_t v201;
  uint64_t v202;
  int v203;
  int *v204;
  unint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  void (*v209)(uint64_t, uint64_t, uint64_t);
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  int v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;

  v206 = a8;
  v226 = a3;
  v227 = a4;
  v225 = a2;
  v229 = a1;
  v224 = sub_1C106E590();
  v16 = *(_QWORD *)(v224 - 8);
  MEMORY[0x1E0C80A78](v224);
  sub_1C07795DC();
  v17 = (int *)type metadata accessor for EntityTriple(0);
  v230 = *((_QWORD *)v17 - 1);
  MEMORY[0x1E0C80A78](v17);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v18);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v19);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v20);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v21);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v22);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v23);
  sub_1C0778674();
  v198 = v24;
  sub_1C077CF58();
  v217 = sub_1C106EB24();
  v25 = *(_QWORD *)(v217 - 8);
  MEMORY[0x1E0C80A78](v217);
  sub_1C077AE40();
  v27 = v26;
  sub_1C07ACF80(&qword_1ED759F70);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v28);
  sub_1C077AE40();
  v213 = v29;
  sub_1C077CF58();
  v233 = sub_1C106E41C();
  v235 = *(_QWORD *)(v233 - 8);
  MEMORY[0x1E0C80A78](v233);
  sub_1C077AE40();
  v218 = v30;
  sub_1C07ACF80(&qword_1ED7618D0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v31);
  sub_1C077AE40();
  v228 = v32;
  sub_1C077CF58();
  v234 = sub_1C106D1F8();
  v212 = *(_QWORD *)(v234 - 8);
  MEMORY[0x1E0C80A78](v234);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v33);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v34);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v35);
  sub_1C0778674();
  v220 = v36;
  v37 = sub_1C077CF58();
  v232 = type metadata accessor for MapPredicate(v37);
  v38 = *(_QWORD *)(v232 - 8);
  MEMORY[0x1E0C80A78](v232);
  sub_1C077AE40();
  v236 = v39;
  sub_1C07ACF80(&qword_1ED755A10);
  sub_1C077C078();
  v41 = MEMORY[0x1E0C80A78](v40);
  MEMORY[0x1E0C80A78](v41);
  sub_1C0778674();
  v208 = v43;
  if (!a5)
    return MEMORY[0x1E0DEE9D8];
  v203 = a6;
  v210 = v25;
  v191 = v12;
  v44 = *(_QWORD *)(a5 + 16);
  if (!v44)
    return MEMORY[0x1E0DEE9D8];
  v199 = v42;
  v222 = v16;
  v221 = a12;
  sub_1C078A8F8(a7, v208, &qword_1ED755A10);
  sub_1C0779D28();
  v46 = a5 + v45;
  v223 = *(_QWORD *)(v38 + 72);
  v47 = HIBYTE(a9) & 0xF;
  v205 = a9;
  if ((a9 & 0x2000000000000000) == 0)
    v47 = v206 & 0xFFFFFFFFFFFFLL;
  v214 = v47;
  v48 = HIBYTE(a11) & 0xF;
  if ((a11 & 0x2000000000000000) == 0)
    v48 = a10 & 0xFFFFFFFFFFFFLL;
  if (a11)
    v49 = v48 == 0;
  else
    v49 = 1;
  v50 = v49;
  v196 = v50;
  sub_1C077AE90();
  v51 = MEMORY[0x1E0DEE9D8];
  v219 = MEMORY[0x1E0DEE9D8];
  v211 = v27;
  v52 = v232;
  v53 = v233;
  v54 = v228;
  v55 = (uint64_t)v236;
  v204 = v17;
  while (1)
  {
    v237 = v51;
    sub_1C07E05C8(v46, v55, type metadata accessor for MapPredicate);
    sub_1C078A8F8(v55 + *(int *)(v52 + 24), v54, &qword_1ED7618D0);
    v56 = v52;
    v57 = v234;
    if (sub_1C07B2D80(v54, 1, v234) != 1)
      break;
    sub_1C0784B94(v54, &qword_1ED7618D0);
LABEL_18:
    v63 = (uint64_t)v236;
    v64 = v236[1];
    v52 = v232;
    if (v64)
    {
      v65 = *v236;
      v66 = HIBYTE(v64) & 0xF;
      if ((v64 & 0x2000000000000000) == 0)
        v66 = *v236 & 0xFFFFFFFFFFFFLL;
      if (v66)
      {
        v67 = v44;
        sub_1C07BC5F4();
        v68 = v216;
        v70 = v69;
        sub_1C079614C(v216, v71);
        sub_1C079F300(v68 + v17[5], v70 + *(int *)(v52 + 20));
        sub_1C07767B4();
        sub_1C106EB0C();
        sub_1C106E26C();
        sub_1C07E05C8(v225, v68 + v17[9], (uint64_t (*)(_QWORD))type metadata accessor for Source);
        v72 = (_QWORD *)(v68 + v17[8]);
        *v72 = v65;
        v72[1] = v64;
        v73 = (_QWORD *)(v68 + v17[10]);
        v74 = v227;
        *v73 = v226;
        v73[1] = v74;
        *(_QWORD *)(v68 + v17[11]) = 0;
        *(_BYTE *)(v68 + v17[12]) = v221;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v51 = v237;
        if ((sub_1C0781980() & 1) == 0)
        {
          sub_1C0781AF4();
          v51 = v180;
        }
        v44 = v67;
        sub_1C078D3C0();
        if (v147)
        {
          sub_1C0781AF4();
          v51 = v181;
        }
        sub_1C07ADA80();
        v76 = &v240;
        goto LABEL_41;
      }
    }
    if (v214)
    {
      sub_1C07BC5F4();
      v77 = v215;
      v79 = v78;
      sub_1C079614C(v215, v80);
      sub_1C079F300(v77 + v17[5], v79 + *(int *)(v52 + 20));
      sub_1C106EB0C();
      sub_1C106E26C();
      sub_1C07E05C8(v225, v77 + v17[9], (uint64_t (*)(_QWORD))type metadata accessor for Source);
      v81 = (_QWORD *)(v77 + v17[8]);
      v82 = v205;
      *v81 = v206;
      v81[1] = v82;
      v83 = (_QWORD *)(v77 + v17[10]);
      v84 = v227;
      *v83 = v226;
      v83[1] = v84;
      *(_QWORD *)(v77 + v17[11]) = 0;
      *(_BYTE *)(v77 + v17[12]) = v221;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C077AE90();
      v51 = v237;
      if ((sub_1C0781980() & 1) == 0)
      {
        sub_1C0781AF4();
        v51 = v182;
      }
      sub_1C078D3C0();
      if (v147)
      {
        sub_1C0781AF4();
        v51 = v183;
      }
      sub_1C07ADA80();
      v76 = &v239;
      goto LABEL_41;
    }
    v51 = v237;
    if ((v196 & 1) == 0)
    {
      sub_1C07BC5F4();
      v96 = v53;
      v97 = v195;
      v99 = v98;
      sub_1C079614C(v195, v100);
      (*(void (**)(uint64_t, uint64_t, unint64_t))(v235 + 16))(v97 + v17[5], v99 + *(int *)(v52 + 20), v96);
      sub_1C077AE90();
      sub_1C106EB0C();
      sub_1C106E26C();
      v101 = sub_1C079FCC8();
      sub_1C07E05C8(v101, v102, (uint64_t (*)(_QWORD))type metadata accessor for Source);
      v103 = (_QWORD *)(v97 + v17[8]);
      *v103 = a10;
      v103[1] = a11;
      sub_1C07A0774();
      if ((sub_1C0781980() & 1) == 0)
      {
        sub_1C0781AF4();
        v51 = v186;
      }
      sub_1C078D3C0();
      if (v147)
      {
        sub_1C0781AF4();
        v51 = v187;
      }
      sub_1C07ADA80();
      v76 = &v226;
LABEL_41:
      sub_1C07E05F4(*(v76 - 32), v75, type metadata accessor for EntityTriple);
      v53 = v233;
LABEL_42:
      v63 = (uint64_t)v236;
    }
    v55 = v63;
    sub_1C0821200(v63);
    v46 += v223;
    --v44;
    v54 = v228;
    if (!v44)
    {
      swift_bridgeObjectRelease();
      sub_1C0784B94(v208, &qword_1ED755A10);
      swift_bridgeObjectRelease();
      return v51;
    }
  }
  v231 = v44;
  v58 = v220;
  v59 = v212;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v212 + 32))(v220, v54, v57);
  v60 = v55 + *(int *)(v56 + 28);
  v61 = v213;
  sub_1C078A8F8(v60, v213, &qword_1ED759F70);
  v62 = v57;
  if (sub_1C07B2D80(v61, 1, v53) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v58, v57);
    sub_1C0784B94(v61, &qword_1ED759F70);
    v44 = v231;
    goto LABEL_18;
  }
  v207 = v46;
  (*(void (**)(uint64_t, uint64_t, unint64_t))(v235 + 32))(v218, v61, v53);
  v85 = v208;
  v86 = v199;
  sub_1C078A8F8(v208, v199, &qword_1ED755A10);
  v87 = *(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16);
  v88 = v201;
  v87(v201, v58, v62);
  v89 = v217;
  v90 = sub_1C07B2D80(v86, 1, v217);
  v91 = v59;
  v200 = v87;
  if (v90 == 1)
  {
    v87(v193, v88, v62);
    v92 = v211;
    v85 = v208;
    sub_1C106EAD0();
    v93 = *(uint64_t (**)(uint64_t, uint64_t))(v91 + 8);
    v94 = v92;
    sub_1C0797BCC(v93);
    sub_1C079BD10();
    sub_1C0784B94(v86, &qword_1ED755A10);
    v95 = v210;
  }
  else
  {
    sub_1C0797BCC(*(uint64_t (**)(uint64_t, uint64_t))(v59 + 8));
    sub_1C079BD10();
    v95 = v210;
    v94 = v211;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v210 + 32))(v211, v86, v89);
  }
  v44 = v231;
  v209 = *(void (**)(uint64_t, uint64_t, uint64_t))(v95 + 16);
  v209(v85, v94, v89);
  sub_1C07B2D8C(v85, 0, 1, v89);
  v51 = v237;
  v104 = v236[1];
  v46 = v207;
  if (!v104)
    goto LABEL_55;
  v105 = *v236;
  v106 = HIBYTE(v104) & 0xF;
  if ((v104 & 0x2000000000000000) == 0)
    v106 = *v236 & 0xFFFFFFFFFFFFLL;
  if (!v106)
  {
LABEL_55:
    v17 = v204;
    if (v214)
    {
      sub_1C07BC5F4();
      v123 = v197;
      v125 = v124;
      sub_1C079614C(v197, v126);
      v52 = v232;
      sub_1C07AA658(v123 + v17[5], v125 + *(int *)(v232 + 20));
      sub_1C07A22B0();
      sub_1C07B3F70();
      v127 = sub_1C079FCC8();
      sub_1C07E05C8(v127, v128, (uint64_t (*)(_QWORD))type metadata accessor for Source);
      v129 = (_QWORD *)(v123 + v17[8]);
      v130 = v205;
      *v129 = v206;
      v129[1] = v130;
      sub_1C07A0774();
      sub_1C07767B4();
      if ((sub_1C0781980() & 1) == 0)
      {
        sub_1C0781AF4();
        v51 = v185;
      }
      v118 = v202;
      v120 = *(_QWORD *)(v51 + 16);
      v121 = v120 + 1;
      if (v120 < *(_QWORD *)(v51 + 24) >> 1)
      {
        v122 = v51;
        goto LABEL_66;
      }
    }
    else
    {
      v52 = v232;
      if ((v196 & 1) != 0)
      {
        v118 = v202;
        goto LABEL_67;
      }
      sub_1C07BC5F4();
      sub_1C079614C(v192, v131);
      v132 = sub_1C07A7CC8();
      sub_1C07AA658(v132, v133);
      sub_1C07A22B0();
      sub_1C07B3F70();
      v134 = sub_1C079FCC8();
      sub_1C07E05C8(v134, v135, (uint64_t (*)(_QWORD))type metadata accessor for Source);
      v136 = (_QWORD *)(v192 + v17[8]);
      *v136 = a10;
      v136[1] = a11;
      sub_1C07A0774();
      sub_1C07767B4();
      if ((sub_1C0781980() & 1) == 0)
      {
        sub_1C0781AF4();
        v51 = v189;
      }
      v120 = *(_QWORD *)(v51 + 16);
      v121 = v120 + 1;
      v118 = v202;
      if (v120 < *(_QWORD *)(v51 + 24) >> 1)
      {
        v122 = v51;
        goto LABEL_66;
      }
    }
    sub_1C0781AF4();
    v51 = v122;
    goto LABEL_66;
  }
  sub_1C07BC5F4();
  v107 = v198;
  v109 = v108;
  sub_1C079614C(v198, v110);
  v111 = v233;
  v112 = v109 + *(int *)(v232 + 20);
  v113 = v204;
  v114 = *(void (**)(uint64_t, uint64_t, uint64_t))(v235 + 16);
  v114(v107 + v204[5], v112, v233);
  sub_1C07A22B0();
  v114(v107 + v113[7], v218, v111);
  v115 = v227;
  sub_1C07E05C8(v225, v107 + v113[9], (uint64_t (*)(_QWORD))type metadata accessor for Source);
  v116 = (_QWORD *)(v107 + v113[8]);
  *v116 = v105;
  v116[1] = v104;
  v117 = (_QWORD *)(v107 + v113[10]);
  *v117 = v226;
  v117[1] = v115;
  *(_QWORD *)(v107 + v113[11]) = 0;
  *(_BYTE *)(v107 + v113[12]) = v221;
  sub_1C07767B4();
  sub_1C077AE90();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
  {
    v118 = v202;
    v44 = v231;
    v119 = v219;
  }
  else
  {
    sub_1C07EACCC();
    v119 = v184;
    v118 = v202;
    v44 = v231;
  }
  v120 = *(_QWORD *)(v119 + 16);
  v121 = v120 + 1;
  v52 = v232;
  v51 = v237;
  if (v120 >= *(_QWORD *)(v119 + 24) >> 1)
  {
    sub_1C07EACCC();
    v219 = v122;
  }
  else
  {
    v219 = v119;
    v122 = v119;
  }
  v17 = v204;
LABEL_66:
  *(_QWORD *)(v122 + 16) = v121;
  sub_1C0779D28();
  sub_1C07E05F4(v140, v137 + v138 + *(_QWORD *)(v139 + 72) * v120, type metadata accessor for EntityTriple);
LABEL_67:
  v53 = *(_QWORD *)(v51 + 16);
  if (!v53)
  {
    sub_1C0790DD8();
    v151 = sub_1C07A2F84();
    sub_1C077C144(v151, v152);
    sub_1C07A43B4();
    goto LABEL_42;
  }
  v141 = *(_QWORD *)(v219 + 16);
  if (!__OFADD__(v53, v141))
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    if (!sub_1C0781980() || (int64_t)(v53 + v141) > *(_QWORD *)(v51 + 24) >> 1)
    {
      sub_1C0781AF4();
      v51 = v142;
    }
    v53 = v233;
    if (*(_QWORD *)(v219 + 16))
    {
      v143 = *(_QWORD *)(v51 + 16);
      if ((*(_QWORD *)(v51 + 24) >> 1) - v143 < v141)
        goto LABEL_101;
      v144 = (*(unsigned __int8 *)(v230 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v230 + 80);
      v145 = *(_QWORD *)(v230 + 72);
      v146 = v51 + v144 + v145 * v143;
      v147 = v219 + v144 >= v146 + v145 * v141 || v146 >= v219 + v144 + v145 * v141;
      if (!v147)
        goto LABEL_103;
      swift_arrayInitWithCopy();
      if (v141)
      {
        v148 = *(_QWORD *)(v51 + 16);
        v149 = __OFADD__(v148, v141);
        v150 = v148 + v141;
        if (v149)
          goto LABEL_102;
        *(_QWORD *)(v51 + 16) = v150;
      }
    }
    else if (v141)
    {
      goto LABEL_100;
    }
    swift_bridgeObjectRelease();
    if ((v203 & 1) != 0)
    {
      if (qword_1ED761458 != -1)
        swift_once();
      v153 = sub_1C106F544();
      sub_1C079E000(v153, (uint64_t)qword_1ED78D818);
      v154 = v222;
      v155 = *(void (**)(uint64_t, uint64_t, uint64_t))(v222 + 16);
      v156 = v224;
      v155(v191, v229, v224);
      v200(v118, v220, v234);
      v157 = sub_1C106F538();
      v158 = sub_1C10703A8();
      v203 = v158;
      if (os_log_type_enabled(v157, v158))
      {
        v159 = swift_slowAlloc();
        v200 = v155;
        v237 = v51;
        v160 = v159;
        v238 = swift_slowAlloc();
        *(_DWORD *)v160 = 136380931;
        sub_1C0794BAC((unint64_t *)&qword_1ED7625A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE60]);
        v161 = sub_1C1070C0C();
        *(_QWORD *)(v160 + 4) = sub_1C07936E8(v161, v162);
        swift_bridgeObjectRelease();
        sub_1C077C144(v191, *(uint64_t (**)(uint64_t, uint64_t))(v154 + 8));
        *(_WORD *)(v160 + 12) = 2080;
        v163 = sub_1C106D090();
        *(_QWORD *)(v160 + 14) = sub_1C07936E8(v163, v164);
        swift_bridgeObjectRelease();
        sub_1C07A43B4();
        _os_log_impl(&dword_1C0771000, v157, (os_log_type_t)v203, "StandardEntityMapper: constructBasicPropertyRows relationship: %{private}s relPred isA %s", (uint8_t *)v160, 0x16u);
        swift_arrayDestroy();
        sub_1C0776778();
      }
      sub_1C077C144(v191, *(uint64_t (**)(uint64_t, uint64_t))(v154 + 8));
      sub_1C07A43B4();

      v167 = v211;
      v155(v194, v229, v156);
      v52 = v232;
      v168 = sub_1C07A7CC8();
      (*(void (**)(uint64_t))(v169 + 16))(v168);
      v170 = v217;
      sub_1C07A22B0();
      sub_1C106E218();
      v171 = sub_1C106D090();
      v173 = v172;
      v174 = sub_1C079FCC8();
      sub_1C07E05C8(v174, v175, (uint64_t (*)(_QWORD))type metadata accessor for Source);
      v176 = (uint64_t *)(v194 + v17[8]);
      *v176 = v171;
      v176[1] = v173;
      v177 = (_QWORD *)(v194 + v17[10]);
      v178 = v227;
      *v177 = v226;
      v177[1] = v178;
      *(_QWORD *)(v194 + v17[11]) = 0;
      *(_BYTE *)(v194 + v17[12]) = v221;
      v179 = *(_QWORD *)(v51 + 16);
      v53 = *(_QWORD *)(v51 + 24);
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v44 = v231;
      if (v179 >= v53 >> 1)
      {
        sub_1C0781AF4();
        v51 = v188;
      }
      *(_QWORD *)(v51 + 16) = v179 + 1;
      sub_1C07E05F4(v194, v51+ ((*(unsigned __int8 *)(v230 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v230 + 80))+ *(_QWORD *)(v230 + 72) * v179, type metadata accessor for EntityTriple);
      (*(void (**)(uint64_t, uint64_t))(v210 + 8))(v167, v170);
      v166 = sub_1C07A2F84();
    }
    else
    {
      sub_1C0790DD8();
      v165 = *(uint64_t (**)(uint64_t, uint64_t))(v235 + 8);
      v166 = v218;
    }
    sub_1C077C144(v166, v165);
    sub_1C07A43B4();
    v203 = 0;
    goto LABEL_42;
  }
  __break(1u);
LABEL_100:
  __break(1u);
LABEL_101:
  __break(1u);
LABEL_102:
  __break(1u);
LABEL_103:
  result = sub_1C10709F0();
  __break(1u);
  return result;
}

uint64_t sub_1C0820388(uint64_t a1)
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

uint64_t sub_1C08203D8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0820428(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v9;

  v2 = a1 == 0x7461636F4C70616DLL && a2 == 0xEB000000006E6F69;
  if (v2 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
    if (v6 || (sub_1C1070CB4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6B6F6F4C6D756E65 && a2 == 0xEF65756C61567075;
      if (v7 || (sub_1C1070CB4() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x696465725070616DLL && a2 == 0xED00007365746163;
        if (v8 || (sub_1C1070CB4() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0xD000000000000015 && a2 == 0x80000001C10E41E0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v9 = sub_1C1070CB4();
          swift_bridgeObjectRelease();
          if ((v9 & 1) != 0)
            return 4;
          else
            return 5;
        }
      }
    }
  }
}

uint64_t sub_1C082068C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C08206C8 + 4 * byte_1C107B160[a1]))(0x7461636F4C70616DLL, 0xEB000000006E6F69);
}

uint64_t sub_1C08206C8()
{
  return 0x65756C6176;
}

uint64_t sub_1C08206DC()
{
  return 0x6B6F6F4C6D756E65;
}

uint64_t sub_1C0820700()
{
  return 0x696465725070616DLL;
}

unint64_t sub_1C0820724()
{
  return 0xD000000000000015;
}

uint64_t sub_1C0820740()
{
  unsigned __int8 *v0;

  return sub_1C082068C(*v0);
}

uint64_t sub_1C0820748@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0820428(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C082076C()
{
  sub_1C0820994();
  return sub_1C1070EE8();
}

uint64_t sub_1C0820794()
{
  sub_1C0820994();
  return sub_1C1070EF4();
}

void BasicProperty.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1C077AE5C();
  v2 = v1;
  v3 = sub_1C07ACF80(&qword_1EF631A28);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1C0778564();
  v7 = v6 - v5;
  sub_1C07A9480(v2, v2[3]);
  sub_1C0820994();
  sub_1C1070EB8();
  sub_1C1070B7C();
  if (!v0)
  {
    sub_1C0787920();
    sub_1C1070B7C();
    sub_1C0787920();
    sub_1C1070B34();
    sub_1C07ACF80(&qword_1EF631A38);
    sub_1C0820C80(&qword_1EF631A40, &qword_1EF631A48, (uint64_t)&protocol conformance descriptor for MapPredicate, MEMORY[0x1E0DEAF10]);
    sub_1C0787920();
    sub_1C1070B64();
    sub_1C0787920();
    sub_1C1070B88();
  }
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  sub_1C07757D0();
}

unint64_t sub_1C0820994()
{
  unint64_t result;

  result = qword_1EF631A30;
  if (!qword_1EF631A30)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107B2CC, &type metadata for BasicProperty.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF631A30);
  }
  return result;
}

void BasicProperty.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1C077AE5C();
  v2 = v1;
  v4 = v3;
  v5 = sub_1C07ACF80(&qword_1EF631A50);
  MEMORY[0x1E0C80A78](v5);
  sub_1C07795DC();
  sub_1C07A9480(v2, v2[3]);
  sub_1C0820994();
  sub_1C1070E94();
  if (v0)
  {
    sub_1C0775880();
    sub_1C077E584();
  }
  else
  {
    v6 = sub_1C07A5BA8();
    v8 = v7;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v9 = sub_1C07A5BA8();
    v11 = v10;
    v16 = v9;
    v17 = v4;
    sub_1C077AE90();
    v18 = v11;
    v12 = sub_1C1070A5C();
    v14 = v13;
    v15 = v12;
    sub_1C07ACF80(&qword_1EF631A38);
    sub_1C0820C80(&qword_1EF631A58, &qword_1EF631A60, (uint64_t)&protocol conformance descriptor for MapPredicate, MEMORY[0x1E0DEAF40]);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C1070A8C();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    LOBYTE(v11) = sub_1C1070AB0();
    sub_1C079975C();
    *(_QWORD *)v17 = v6;
    *(_QWORD *)(v17 + 8) = v8;
    *(_QWORD *)(v17 + 16) = v16;
    *(_QWORD *)(v17 + 24) = v18;
    *(_QWORD *)(v17 + 32) = v15;
    *(_QWORD *)(v17 + 40) = v14;
    *(_QWORD *)(v17 + 48) = v19;
    *(_BYTE *)(v17 + 56) = v11 & 1;
    sub_1C0775880();
    swift_bridgeObjectRelease();
    sub_1C077E584();
    sub_1C077960C();
  }
  swift_bridgeObjectRelease();
  sub_1C07757D0();
}

uint64_t sub_1C0820C80(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    v9 = sub_1C07D4BEC(&qword_1EF631A38);
    sub_1C0794BAC(a2, type metadata accessor for MapPredicate, a3);
    v11 = v10;
    result = MEMORY[0x1C3BA8174](a4, v9, &v11);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0820D0C()
{
  return BasicProperty.constructRows(entityIdentifier:source:sourceId:map:relationshipId:pipelineType:)();
}

unint64_t sub_1C0820D20(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1C07EB1C0();
  result = sub_1C07EB11C();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

void sub_1C0820D4C()
{
  BasicProperty.init(from:)();
}

void sub_1C0820D60()
{
  BasicProperty.encode(to:)();
}

uint64_t destroy for BasicProperty()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BasicProperty(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

uint64_t assignWithCopy for BasicProperty(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

__n128 initializeWithTake for BasicProperty(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for BasicProperty(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for BasicProperty(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 57))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BasicProperty(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 57) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BasicProperty()
{
  return &type metadata for BasicProperty;
}

uint64_t getEnumTagSinglePayload for BasicProperty.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFC)
  {
    if (a2 + 4 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 4) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 5;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v5 = v6 - 5;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for BasicProperty.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1C08210C0 + 4 * byte_1C107B16A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1C08210F4 + 4 * byte_1C107B165[v4]))();
}

uint64_t sub_1C08210F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C08210FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0821104);
  return result;
}

uint64_t sub_1C0821110(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0821118);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1C082111C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0821124(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BasicProperty.CodingKeys()
{
  return &type metadata for BasicProperty.CodingKeys;
}

unint64_t sub_1C0821144()
{
  unint64_t result;

  result = qword_1EF631A68;
  if (!qword_1EF631A68)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107B2A4, &type metadata for BasicProperty.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF631A68);
  }
  return result;
}

unint64_t sub_1C0821184()
{
  unint64_t result;

  result = qword_1EF631A70;
  if (!qword_1EF631A70)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107B214, &type metadata for BasicProperty.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF631A70);
  }
  return result;
}

unint64_t sub_1C08211C4()
{
  unint64_t result;

  result = qword_1EF631A78;
  if (!qword_1EF631A78)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107B23C, &type metadata for BasicProperty.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF631A78);
  }
  return result;
}

uint64_t sub_1C0821200(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MapPredicate(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C082123C()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Battery.GuardedData()
{
  return objc_opt_self();
}

uint64_t sub_1C082126C()
{
  uint64_t result;

  type metadata accessor for Battery.GuardedData();
  *(_BYTE *)(swift_allocObject() + 16) = 2;
  sub_1C07ACF80(&qword_1ED7536C8);
  swift_allocObject();
  result = sub_1C106E4C4();
  qword_1ED78CD90 = result;
  return result;
}

void sub_1C08212D4(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v3 = *a1;
  v4 = *(unsigned __int8 *)(*a1 + 16);
  if (v4 == 2)
  {
    LOBYTE(v4) = sub_1C08214C8();
    if (qword_1ED762AF0 != -1)
      swift_once();
    v5 = sub_1C106F544();
    sub_1C079E000(v5, (uint64_t)qword_1ED78D9E0);
    v6 = sub_1C106F538();
    v7 = sub_1C10703A8();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)sub_1C0775854();
      v13 = sub_1C0775854();
      *(_DWORD *)v8 = 136315138;
      v9 = 0x7461426E4F207369;
      if ((v4 & 1) != 0)
        v9 = 0xD000000000000013;
      v10 = 0x80000001C10E4290;
      if ((v4 & 1) == 0)
        v10 = 0xEC00000079726574;
      if (v4 == 2)
        v11 = 0xD000000000000022;
      else
        v11 = v9;
      if (v4 == 2)
        v12 = 0x80000001C10E4260;
      else
        v12 = v10;
      sub_1C0788DAC(v11, v12, &v13);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C0771000, v6, v7, "Battery: device %s", v8, 0xCu);
      swift_arrayDestroy();
      sub_1C0776778();
    }

    *(_BYTE *)(v3 + 16) = v4;
  }
  *a2 = v4;
}

uint64_t sub_1C08214C8()
{
  CFMutableDictionaryRef v0;
  mach_port_t v1;
  NSObject *v2;
  io_service_t MatchingService;
  io_registry_entry_t v4;
  __CFString *v5;
  CFTypeRef CFProperty;
  CFTypeID v7;
  uint64_t v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  const char *v24;
  uint64_t v25;
  unsigned __int8 v27;

  v0 = IOServiceMatching("IOPMPowerSource");
  if (!v0)
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v9 = sub_1C106F544();
    sub_1C079E000(v9, (uint64_t)qword_1ED762AF8);
    v2 = sub_1C106F538();
    v10 = sub_1C1070390();
    if (os_log_type_enabled(v2, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_1C0771000, v2, v10, "Battery.isOnCharger: Could not read power source. Battery state unknown.", v11, 2u);
      MEMORY[0x1C3BA8270](v11, -1, -1);

      return 2;
    }
LABEL_31:

    return 2;
  }
  v1 = *MEMORY[0x1E0CBBAA8];
  v2 = v0;
  MatchingService = IOServiceGetMatchingService(v1, (CFDictionaryRef)v2);
  if (!MatchingService)
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v12 = sub_1C106F544();
    sub_1C079E000(v12, (uint64_t)qword_1ED762AF8);
    v13 = sub_1C106F538();
    v14 = sub_1C1070390();
    if (os_log_type_enabled(v13, v14))
    {
      v8 = 2;
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_1C0771000, v13, v14, "Battery.isOnCharger: Could not get matching service for power source. Battery state unknown.", v15, 2u);
      MEMORY[0x1C3BA8270](v15, -1, -1);

      return v8;
    }

    goto LABEL_31;
  }
  v4 = MatchingService;
  v5 = (__CFString *)sub_1C106FAF0();
  CFProperty = IORegistryEntryCreateCFProperty(v4, v5, (CFAllocatorRef)*MEMORY[0x1E0C9AE00], 0);

  if (!CFProperty)
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v16 = sub_1C106F544();
    sub_1C079E000(v16, (uint64_t)qword_1ED762AF8);
    v17 = sub_1C106F538();
    v18 = sub_1C1070390();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_1C0771000, v17, v18, "Battery.isOnCharger: Could not create value for is charging key. Battery state unknown.", v19, 2u);
      MEMORY[0x1C3BA8270](v19, -1, -1);

      return 2;
    }

    goto LABEL_31;
  }
  v7 = CFGetTypeID(CFProperty);
  if (v7 != CFBooleanGetTypeID())
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v20 = sub_1C106F544();
    sub_1C079E000(v20, (uint64_t)qword_1ED762AF8);
    v21 = sub_1C106F538();
    v22 = sub_1C1070390();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v23 = 0;
      v24 = "Battery.isOnCharger: unexpected type for kIOPMPSExternalConnectedKey. Charging state unknown.";
LABEL_29:
      _os_log_impl(&dword_1C0771000, v21, v22, v24, v23, 2u);
      MEMORY[0x1C3BA8270](v23, -1, -1);

      swift_unknownObjectRelease();
      return 2;
    }
    goto LABEL_30;
  }
  swift_unknownObjectRetain();
  if (!swift_dynamicCast())
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v25 = sub_1C106F544();
    sub_1C079E000(v25, (uint64_t)qword_1ED762AF8);
    v21 = sub_1C106F538();
    v22 = sub_1C1070390();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v23 = 0;
      v24 = "Battery.isOnCharger: Failed to cast isChargingValue.";
      goto LABEL_29;
    }
LABEL_30:

    swift_unknownObjectRelease();
    goto LABEL_31;
  }

  swift_unknownObjectRelease();
  return v27;
}

void sub_1C082197C(uint64_t *a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v1 = *a1;
  v2 = sub_1C08214C8();
  if (qword_1ED762AF0 != -1)
    swift_once();
  v3 = sub_1C106F544();
  sub_1C079E000(v3, (uint64_t)qword_1ED78D9E0);
  v4 = sub_1C106F538();
  v5 = sub_1C10703A8();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)sub_1C0775854();
    v11 = sub_1C0775854();
    *(_DWORD *)v6 = 136315138;
    v7 = 0x7461426E4F207369;
    if ((v2 & 1) != 0)
      v7 = 0xD000000000000013;
    v8 = 0x80000001C10E4290;
    if ((v2 & 1) == 0)
      v8 = 0xEC00000079726574;
    if (v2 == 2)
      v9 = 0xD000000000000022;
    else
      v9 = v7;
    if (v2 == 2)
      v10 = 0x80000001C10E4260;
    else
      v10 = v8;
    sub_1C0788DAC(v9, v10, &v11);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0771000, v4, v5, "Battery: device %s", v6, 0xCu);
    swift_arrayDestroy();
    sub_1C0776778();
  }

  *(_BYTE *)(v1 + 16) = v2;
}

ValueMetadata *type metadata accessor for Battery()
{
  return &type metadata for Battery;
}

void sub_1C0821B64()
{
  uint64_t v0;
  _BYTE v1[8];
  _BYTE v2[48];

  sub_1C07DFF44(v0, (uint64_t)v1);
  sub_1C07DFF44(v0, (uint64_t)v2);
  __asm { BR              X10 }
}

uint64_t sub_1C0821BC0()
{
  uint64_t v1;

  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return v1;
}

void sub_1C0821FC8()
{
  sub_1C07ACF80(&qword_1ED762B70);
  sub_1C08243B0();
  sub_1C078F184();
  JUMPOUT(0x1C0821FA4);
}

void sub_1C0821FFC(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  NSObject *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  os_log_type_t v40;
  void (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  _BYTE v45[4];
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49[7];

  v9 = sub_1C106D6CC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = &v45[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v11);
  v15 = &v45[-v14];
  v16 = *(NSObject **)(v10 + 16);
  sub_1C0796F98((uint64_t)&v45[-v14]);
  v17 = (*(uint64_t (**)(_BYTE *, uint64_t))(v10 + 88))(v15, v9);
  if (v17 == *MEMORY[0x1E0D3C0F0])
  {
    v47 = v10;
    swift_bridgeObjectRelease();
    sub_1C079976C();
LABEL_38:
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(a1, v9);
    goto LABEL_39;
  }
  if (v17 == *MEMORY[0x1E0D3C120])
  {
    sub_1C07A67B4();
    sub_1C08225D8(v18);
  }
  else if (v17 == *MEMORY[0x1E0D3C118])
  {
    sub_1C07A67B4();
    sub_1C08226B0(v19);
  }
  else if (v17 == *MEMORY[0x1E0D3C058])
  {
    sub_1C07A67B4();
    sub_1C08227DC(v20);
  }
  else if (v17 == *MEMORY[0x1E0D3C0A0])
  {
    sub_1C07A67B4();
    sub_1C08228B4(v21);
  }
  else if (v17 == *MEMORY[0x1E0D3C0C8])
  {
    sub_1C07A67B4();
    sub_1C0822AEC(v22);
  }
  else if (v17 == *MEMORY[0x1E0D3C0E8])
  {
    sub_1C07A67B4();
    sub_1C0822D1C(v23);
  }
  else if (v17 == *MEMORY[0x1E0D3C068])
  {
    sub_1C07A67B4();
    sub_1C0822F00(v24);
  }
  else if (v17 == *MEMORY[0x1E0D3C0B8])
  {
    sub_1C07A67B4();
    sub_1C08230A0(v25);
  }
  else if (v17 == *MEMORY[0x1E0D3C060])
  {
    sub_1C07A67B4();
    sub_1C0823270(v26);
  }
  else if (v17 == *MEMORY[0x1E0D3C128])
  {
    sub_1C07A67B4();
    sub_1C0823410(v27);
  }
  else if (v17 == *MEMORY[0x1E0D3C088])
  {
    sub_1C07A67B4();
    sub_1C0823604(v28);
  }
  else if (v17 == *MEMORY[0x1E0D3C078])
  {
    sub_1C07A67B4();
    sub_1C08237F8(v29);
  }
  else if (v17 == *MEMORY[0x1E0D3C048])
  {
    sub_1C07A67B4();
    sub_1C08239AC(v30);
  }
  else
  {
    v47 = v10;
    v10 = a2;
    if (v17 == *MEMORY[0x1E0D3C0C0])
    {
      sub_1C07985C4();
      sub_1C0823C14(v31);
    }
    else if (v17 == *MEMORY[0x1E0D3C100])
    {
      sub_1C07985C4();
      sub_1C0823CEC(v32);
    }
    else if (v17 == *MEMORY[0x1E0D3C0B0])
    {
      sub_1C07985C4();
      sub_1C0823F3C(v33);
    }
    else
    {
      if (v17 == *MEMORY[0x1E0D3C0D0])
      {
        a2 = 0;
        v16 = 0;
        v13 = 0;
        LOBYTE(v4) = 16;
        goto LABEL_38;
      }
      if (v17 == *MEMORY[0x1E0D3C0A8])
      {
        a2 = 0;
        v16 = 0;
        v13 = 0;
        LOBYTE(v4) = 17;
        goto LABEL_38;
      }
      if (v17 == *MEMORY[0x1E0D3C098])
      {
        sub_1C07985C4();
        v38 = 0;
      }
      else if (v17 == *MEMORY[0x1E0D3C080])
      {
        sub_1C07985C4();
        v38 = 1;
      }
      else
      {
        if (v17 != *MEMORY[0x1E0D3C070])
        {
          v4 = v47;
          (*(void (**)(_BYTE *, uint64_t))(v47 + 8))(v15, v9);
          v10 = v4;
          goto LABEL_52;
        }
        sub_1C07985C4();
        v38 = 2;
      }
      sub_1C0824098(v38, v37);
    }
    v10 = v47;
  }
  LODWORD(v4) = v15[40];
  if ((_DWORD)v4 != 255)
  {
    v47 = v10;
    v16 = *((_QWORD *)v15 + 3);
    v13 = (_BYTE *)*((_QWORD *)v15 + 4);
    v34 = a1;
    v35 = *((_QWORD *)v15 + 1);
    a2 = *((_QWORD *)v15 + 2);
    v10 = *(_QWORD *)v15;
    swift_bridgeObjectRelease();
    v36 = v35;
    a1 = v34;
    a3 = v36;
    goto LABEL_38;
  }
LABEL_52:
  if (qword_1ED760048 != -1)
    swift_once();
  v39 = sub_1C106F544();
  sub_1C079E000(v39, (uint64_t)qword_1ED78D800);
  sub_1C0796F98((uint64_t)v13);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v16 = sub_1C106F538();
  v40 = sub_1C107039C();
  v41 = (void (*)(uint64_t, uint64_t))v40;
  if (os_log_type_enabled(v16, v40))
  {
    v42 = swift_slowAlloc();
    v47 = swift_slowAlloc();
    v49[0] = v47;
    *(_DWORD *)v42 = 136315394;
    v46 = (int)v41;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v48 = sub_1C0788DAC(a2, a3, v49);
    sub_1C10705AC();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v42 + 12) = 2080;
    sub_1C08243F4();
    v43 = sub_1C1070C0C();
    v48 = sub_1C0788DAC(v43, v44, v49);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    sub_1C078792C();
    _os_log_impl(&dword_1C0771000, v16, (os_log_type_t)v46, "Behavior.init: Malformed identifier %s for type %s, falling back to initialize as Behavior.unknown.", (uint8_t *)v42, 0x16u);
    swift_arrayDestroy();
    sub_1C0776778();
  }

  sub_1C078792C();
  swift_bridgeObjectRelease_n();
  v41(a1, v9);
  sub_1C079976C();
LABEL_39:
  *(_QWORD *)a4 = v10;
  *(_QWORD *)(a4 + 8) = a3;
  *(_QWORD *)(a4 + 16) = a2;
  *(_QWORD *)(a4 + 24) = v16;
  *(_QWORD *)(a4 + 32) = v13;
  *(_BYTE *)(a4 + 40) = v4;
}

uint64_t sub_1C08225D8@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  char v11;

  sub_1C07B1280();
  v2 = (_QWORD *)sub_1C1070630();
  if (v2[2] == 1)
  {
    v3 = v2[4];
    v4 = v2[5];
    v5 = v2[6];
    v6 = v2[7];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_bridgeObjectRelease();
    v7 = MEMORY[0x1C3BA64D0](v3, v4, v5, v6);
    v9 = v8;
    result = swift_bridgeObjectRelease();
    v11 = 0;
  }
  else
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
    v9 = 0;
    v11 = -1;
  }
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v9;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 40) = v11;
  return result;
}

uint64_t sub_1C08226B0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  sub_1C07B1280();
  v2 = (_QWORD *)sub_1C1070630();
  v3 = v2;
  if (v2[2] != 2)
  {
    result = swift_bridgeObjectRelease();
    v8 = 0;
    v10 = 0;
    v16 = 0;
    v18 = 0;
    v19 = -1;
    goto LABEL_5;
  }
  v4 = v2[4];
  v5 = v2[5];
  v6 = v2[6];
  v7 = v2[7];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v8 = MEMORY[0x1C3BA64D0](v4, v5, v6, v7);
  v10 = v9;
  result = swift_bridgeObjectRelease();
  if (v3[2] >= 2uLL)
  {
    v12 = v3[8];
    v13 = v3[9];
    v14 = v3[10];
    v15 = v3[11];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_bridgeObjectRelease();
    v16 = MEMORY[0x1C3BA64D0](v12, v13, v14, v15);
    v18 = v17;
    result = swift_bridgeObjectRelease();
    v19 = 1;
LABEL_5:
    *(_QWORD *)a1 = v8;
    *(_QWORD *)(a1 + 8) = v10;
    *(_QWORD *)(a1 + 16) = v16;
    *(_QWORD *)(a1 + 24) = v18;
    *(_QWORD *)(a1 + 32) = 0;
    *(_BYTE *)(a1 + 40) = v19;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C08227DC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  char v11;

  sub_1C07B1280();
  v2 = (_QWORD *)sub_1C1070630();
  if (v2[2] == 1)
  {
    v3 = v2[4];
    v4 = v2[5];
    v5 = v2[6];
    v6 = v2[7];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_bridgeObjectRelease();
    v7 = MEMORY[0x1C3BA64D0](v3, v4, v5, v6);
    v9 = v8;
    result = swift_bridgeObjectRelease();
    v11 = 2;
  }
  else
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
    v9 = 0;
    v11 = -1;
  }
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v9;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 40) = v11;
  return result;
}

void sub_1C08228B4(uint64_t a1@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  char v27;

  sub_1C07B1280();
  v2 = (_QWORD *)sub_1C1070630();
  v3 = v2;
  if (v2[2] != 3)
    goto LABEL_18;
  v4 = v2[4];
  v5 = v2[5];
  v6 = v2[6];
  v7 = v2[7];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v8 = MEMORY[0x1C3BA64D0](v4, v5, v6, v7);
  v10 = v9;
  swift_bridgeObjectRelease();
  v11 = v8 == 0x7265746E45 && v10 == 0xE500000000000000;
  if (v11 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v12 = 1;
  }
  else
  {
    if (v8 == 1953069125 && v10 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v27 = sub_1C1070CB4();
      swift_bridgeObjectRelease();
      if ((v27 & 1) == 0)
        goto LABEL_18;
    }
    v12 = 0;
  }
  if (v3[2] < 2uLL)
  {
    __break(1u);
    goto LABEL_24;
  }
  v13 = v3[8];
  v14 = v3[9];
  v15 = v3[10];
  v16 = v3[11];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  MEMORY[0x1C3BA64D0](v13, v14, v15, v16);
  swift_bridgeObjectRelease();
  sub_1C0880430();
  if ((v17 & 0x100000000) != 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  if (v3[2] >= 3uLL)
  {
    v18 = v17;
    v19 = v3[12];
    v20 = v3[13];
    v21 = v3[14];
    v22 = v3[15];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_bridgeObjectRelease();
    MEMORY[0x1C3BA64D0](v19, v20, v21, v22);
    swift_bridgeObjectRelease();
    v23 = sub_1C08805E8();
    if ((v23 & 0x100000000) == 0)
    {
      v24 = v18 | ((unint64_t)v23 << 32);
      v25 = 3;
LABEL_20:
      *(_QWORD *)a1 = v24;
      *(_QWORD *)(a1 + 8) = v12;
      *(_QWORD *)(a1 + 24) = 0;
      *(_QWORD *)(a1 + 32) = 0;
      *(_QWORD *)(a1 + 16) = 0;
      *(_BYTE *)(a1 + 40) = v25;
      return;
    }
LABEL_19:
    v24 = 0;
    v12 = 0;
    v25 = -1;
    goto LABEL_20;
  }
LABEL_24:
  __break(1u);
}

void sub_1C0822AEC(uint64_t a1@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v32;

  sub_1C07B1280();
  v2 = (_QWORD *)sub_1C1070630();
  v3 = v2;
  if (v2[2] != 3)
    goto LABEL_17;
  v4 = v2[4];
  v5 = v2[5];
  v6 = v2[6];
  v7 = v2[7];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v8 = MEMORY[0x1C3BA64D0](v4, v5, v6, v7);
  v10 = v9;
  swift_bridgeObjectRelease();
  v11 = v8 == 0x7472617453 && v10 == 0xE500000000000000;
  if (v11 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v12 = 0x100000000;
  }
  else
  {
    if (v8 == 6581829 && v10 == 0xE300000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v32 = sub_1C1070CB4();
      swift_bridgeObjectRelease();
      if ((v32 & 1) == 0)
        goto LABEL_17;
    }
    v12 = 0;
  }
  if (v3[2] < 2uLL)
  {
    __break(1u);
    goto LABEL_22;
  }
  v13 = v3[8];
  v14 = v3[9];
  v15 = v3[10];
  v16 = v3[11];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v17 = MEMORY[0x1C3BA64D0](v13, v14, v15, v16);
  v19 = v18;
  swift_bridgeObjectRelease();
  sub_1C0880788(v17, v19);
  if ((v20 & 0x100000000) != 0)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    v26 = 0;
    v28 = 0;
    v29 = 0;
    v30 = -1;
    goto LABEL_18;
  }
  if (v3[2] >= 3uLL)
  {
    v21 = v20;
    v22 = v3[12];
    v23 = v3[13];
    v24 = v3[14];
    v25 = v3[15];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_bridgeObjectRelease();
    v26 = MEMORY[0x1C3BA64D0](v22, v23, v24, v25);
    v28 = v27;
    swift_bridgeObjectRelease();
    v29 = v21 | (unint64_t)v12;
    v30 = 4;
LABEL_18:
    *(_QWORD *)a1 = v26;
    *(_QWORD *)(a1 + 8) = v28;
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 16) = v29;
    *(_BYTE *)(a1 + 40) = v30;
    return;
  }
LABEL_22:
  __break(1u);
}

void sub_1C0822D1C(uint64_t a1@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  char v21;

  sub_1C07B1280();
  v2 = (_QWORD *)sub_1C1070630();
  v3 = v2;
  if (v2[2] != 2)
    goto LABEL_16;
  v4 = v2[4];
  v5 = v2[5];
  v6 = v2[6];
  v7 = v2[7];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v8 = MEMORY[0x1C3BA64D0](v4, v5, v6, v7);
  v10 = v9;
  swift_bridgeObjectRelease();
  v11 = v8 == 0x7472617453 && v10 == 0xE500000000000000;
  if (v11 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v12 = 0x100000000;
    goto LABEL_8;
  }
  if (v8 == 6581829 && v10 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v21 = sub_1C1070CB4();
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0)
    {
LABEL_16:
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
  }
  v12 = 0;
LABEL_8:
  if (v3[2] >= 2uLL)
  {
    v13 = v3[8];
    v14 = v3[9];
    v15 = v3[10];
    v16 = v3[11];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_bridgeObjectRelease();
    MEMORY[0x1C3BA64D0](v13, v14, v15, v16);
    swift_bridgeObjectRelease();
    sub_1C0880B20();
    if ((v17 & 0x100000000) == 0)
    {
      v18 = v17 | (unint64_t)v12;
      v19 = 5;
LABEL_18:
      *(_QWORD *)a1 = v18;
      *(_OWORD *)(a1 + 8) = 0u;
      *(_OWORD *)(a1 + 24) = 0u;
      *(_BYTE *)(a1 + 40) = v19;
      return;
    }
LABEL_17:
    v18 = 0;
    v19 = -1;
    goto LABEL_18;
  }
  __break(1u);
}

double sub_1C0822F00@<D0>(uint64_t a1@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  char v12;
  double result;
  char v15;

  sub_1C07B1280();
  v2 = (_QWORD *)sub_1C1070630();
  if (v2[2] == 1)
  {
    v3 = v2[4];
    v4 = v2[5];
    v5 = v2[6];
    v6 = v2[7];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_bridgeObjectRelease();
    v7 = MEMORY[0x1C3BA64D0](v3, v4, v5, v6);
    v9 = v8;
    swift_bridgeObjectRelease();
    v10 = v7 == 0x64656B636F4CLL && v9 == 0xE600000000000000;
    if (v10 || (sub_1C1070CB4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v11 = 1;
LABEL_11:
      v12 = 6;
      goto LABEL_12;
    }
    if (v7 == 0x64656B636F6C6E55 && v9 == 0xE800000000000000)
    {
      swift_bridgeObjectRelease();
      v11 = 0;
      goto LABEL_11;
    }
    v15 = sub_1C1070CB4();
    swift_bridgeObjectRelease();
    v11 = 0;
    if ((v15 & 1) != 0)
      goto LABEL_11;
  }
  else
  {
    swift_bridgeObjectRelease();
    v11 = 0;
  }
  v12 = -1;
LABEL_12:
  *(_QWORD *)a1 = v11;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_BYTE *)(a1 + 40) = v12;
  return result;
}

uint64_t sub_1C08230A0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v23;

  sub_1C07B1280();
  v2 = (_QWORD *)sub_1C1070630();
  v3 = v2;
  if (v2[2] != 2)
    goto LABEL_15;
  v4 = v2[4];
  v5 = v2[5];
  v6 = v2[6];
  v7 = v2[7];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v8 = MEMORY[0x1C3BA64D0](v4, v5, v6, v7);
  v10 = v9;
  swift_bridgeObjectRelease();
  v11 = v8 == 0x7265746E45 && v10 == 0xE500000000000000;
  if (v11 || (sub_1C1070CB4() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v13 = 1;
    goto LABEL_8;
  }
  if (v8 == 1953069125 && v10 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v23 = sub_1C1070CB4();
    result = swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
LABEL_15:
      result = swift_bridgeObjectRelease();
      v18 = 0;
      v20 = 0;
      v13 = 0;
      v21 = -1;
      goto LABEL_16;
    }
  }
  v13 = 0;
LABEL_8:
  if (v3[2] >= 2uLL)
  {
    v14 = v3[8];
    v15 = v3[9];
    v16 = v3[10];
    v17 = v3[11];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_bridgeObjectRelease();
    v18 = MEMORY[0x1C3BA64D0](v14, v15, v16, v17);
    v20 = v19;
    result = swift_bridgeObjectRelease();
    v21 = 7;
LABEL_16:
    *(_QWORD *)a1 = v18;
    *(_QWORD *)(a1 + 8) = v20;
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 16) = v13;
    *(_BYTE *)(a1 + 40) = v21;
    return result;
  }
  __break(1u);
  return result;
}

double sub_1C0823270@<D0>(uint64_t a1@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  char v12;
  double result;
  char v15;

  sub_1C07B1280();
  v2 = (_QWORD *)sub_1C1070630();
  if (v2[2] == 1)
  {
    v3 = v2[4];
    v4 = v2[5];
    v5 = v2[6];
    v6 = v2[7];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_bridgeObjectRelease();
    v7 = MEMORY[0x1C3BA64D0](v3, v4, v5, v6);
    v9 = v8;
    swift_bridgeObjectRelease();
    v10 = v7 == 0x656C62616E45 && v9 == 0xE600000000000000;
    if (v10 || (sub_1C1070CB4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v11 = 1;
LABEL_11:
      v12 = 8;
      goto LABEL_12;
    }
    if (v7 == 0x656C6261736944 && v9 == 0xE700000000000000)
    {
      swift_bridgeObjectRelease();
      v11 = 0;
      goto LABEL_11;
    }
    v15 = sub_1C1070CB4();
    swift_bridgeObjectRelease();
    v11 = 0;
    if ((v15 & 1) != 0)
      goto LABEL_11;
  }
  else
  {
    swift_bridgeObjectRelease();
    v11 = 0;
  }
  v12 = -1;
LABEL_12:
  *(_QWORD *)a1 = v11;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_BYTE *)(a1 + 40) = v12;
  return result;
}

uint64_t sub_1C0823410@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v23;

  sub_1C07B1280();
  v2 = (_QWORD *)sub_1C1070630();
  v3 = v2;
  if (v2[2] != 2)
    goto LABEL_15;
  v4 = v2[4];
  v5 = v2[5];
  v6 = v2[6];
  v7 = v2[7];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v8 = MEMORY[0x1C3BA64D0](v4, v5, v6, v7);
  v10 = v9;
  swift_bridgeObjectRelease();
  v11 = v8 == 0x7463656E6E6F43 && v10 == 0xE700000000000000;
  if (v11 || (sub_1C1070CB4() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v13 = 1;
    goto LABEL_8;
  }
  if (v8 == 0x656E6E6F63736944 && v10 == 0xEA00000000007463)
  {
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v23 = sub_1C1070CB4();
    result = swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
LABEL_15:
      result = swift_bridgeObjectRelease();
      v18 = 0;
      v20 = 0;
      v13 = 0;
      v21 = -1;
      goto LABEL_16;
    }
  }
  v13 = 0;
LABEL_8:
  if (v3[2] >= 2uLL)
  {
    v14 = v3[8];
    v15 = v3[9];
    v16 = v3[10];
    v17 = v3[11];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_bridgeObjectRelease();
    v18 = MEMORY[0x1C3BA64D0](v14, v15, v16, v17);
    v20 = v19;
    result = swift_bridgeObjectRelease();
    v21 = 9;
LABEL_16:
    *(_QWORD *)a1 = v18;
    *(_QWORD *)(a1 + 8) = v20;
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 16) = v13;
    *(_BYTE *)(a1 + 40) = v21;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0823604@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v23;

  sub_1C07B1280();
  v2 = (_QWORD *)sub_1C1070630();
  v3 = v2;
  if (v2[2] != 2)
    goto LABEL_15;
  v4 = v2[4];
  v5 = v2[5];
  v6 = v2[6];
  v7 = v2[7];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v8 = MEMORY[0x1C3BA64D0](v4, v5, v6, v7);
  v10 = v9;
  swift_bridgeObjectRelease();
  v11 = v8 == 0x7463656E6E6F43 && v10 == 0xE700000000000000;
  if (v11 || (sub_1C1070CB4() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v13 = 1;
    goto LABEL_8;
  }
  if (v8 == 0x656E6E6F63736944 && v10 == 0xEA00000000007463)
  {
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v23 = sub_1C1070CB4();
    result = swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
LABEL_15:
      result = swift_bridgeObjectRelease();
      v18 = 0;
      v20 = 0;
      v13 = 0;
      v21 = -1;
      goto LABEL_16;
    }
  }
  v13 = 0;
LABEL_8:
  if (v3[2] >= 2uLL)
  {
    v14 = v3[8];
    v15 = v3[9];
    v16 = v3[10];
    v17 = v3[11];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_bridgeObjectRelease();
    v18 = MEMORY[0x1C3BA64D0](v14, v15, v16, v17);
    v20 = v19;
    result = swift_bridgeObjectRelease();
    v21 = 10;
LABEL_16:
    *(_QWORD *)a1 = v18;
    *(_QWORD *)(a1 + 8) = v20;
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 16) = v13;
    *(_BYTE *)(a1 + 40) = v21;
    return result;
  }
  __break(1u);
  return result;
}

double sub_1C08237F8@<D0>(uint64_t a1@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  char v12;
  double result;
  char v15;

  sub_1C07B1280();
  v2 = (_QWORD *)sub_1C1070630();
  if (v2[2] == 1)
  {
    v3 = v2[4];
    v4 = v2[5];
    v5 = v2[6];
    v6 = v2[7];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_bridgeObjectRelease();
    v7 = MEMORY[0x1C3BA64D0](v3, v4, v5, v6);
    v9 = v8;
    swift_bridgeObjectRelease();
    v10 = v7 == 0x64656767756C50 && v9 == 0xE700000000000000;
    if (v10 || (sub_1C1070CB4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v11 = 1;
LABEL_11:
      v12 = 11;
      goto LABEL_12;
    }
    if (v7 == 0x656767756C706E55 && v9 == 0xE900000000000064)
    {
      swift_bridgeObjectRelease();
      v11 = 0;
      goto LABEL_11;
    }
    v15 = sub_1C1070CB4();
    swift_bridgeObjectRelease();
    v11 = 0;
    if ((v15 & 1) != 0)
      goto LABEL_11;
  }
  else
  {
    swift_bridgeObjectRelease();
    v11 = 0;
  }
  v12 = -1;
LABEL_12:
  *(_QWORD *)a1 = v11;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_BYTE *)(a1 + 40) = v12;
  return result;
}

uint64_t sub_1C08239AC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  sub_1C07B1280();
  v2 = (_QWORD *)sub_1C1070630();
  if (v2[2] != 3)
  {
    result = swift_bridgeObjectRelease();
    v16 = 0;
    v17 = 0;
    v18 = 0;
    v19 = 0;
    v5 = 0;
    v20 = -1;
LABEL_13:
    *(_QWORD *)a1 = v16;
    *(_QWORD *)(a1 + 8) = v17;
    *(_QWORD *)(a1 + 16) = v18;
    *(_QWORD *)(a1 + 24) = v19;
    *(_QWORD *)(a1 + 32) = v5;
    *(_BYTE *)(a1 + 40) = v20;
    return result;
  }
  sub_1C0824434();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v3 = sub_1C1070630();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v32 = MEMORY[0x1E0DEE9D8];
    sub_1C09D30E0();
    v5 = v32;
    v6 = (uint64_t *)(v3 + 56);
    do
    {
      v7 = *(v6 - 3);
      v8 = *(v6 - 2);
      v9 = *(v6 - 1);
      v10 = *v6;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v11 = MEMORY[0x1C3BA64D0](v7, v8, v9, v10);
      v13 = v12;
      swift_bridgeObjectRelease();
      v14 = *(_QWORD *)(v32 + 16);
      if (v14 >= *(_QWORD *)(v32 + 24) >> 1)
        sub_1C09D30E0();
      *(_QWORD *)(v32 + 16) = v14 + 1;
      v15 = v32 + 16 * v14;
      *(_QWORD *)(v15 + 32) = v11;
      *(_QWORD *)(v15 + 40) = v13;
      v6 += 4;
      --v4;
    }
    while (v4);
    result = swift_bridgeObjectRelease();
  }
  else
  {
    result = swift_bridgeObjectRelease();
    v5 = MEMORY[0x1E0DEE9D8];
  }
  if (v2[2])
  {
    v22 = v2[4];
    v23 = v2[5];
    v24 = v2[6];
    v25 = v2[7];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v16 = MEMORY[0x1C3BA64D0](v22, v23, v24, v25);
    v17 = v26;
    result = swift_bridgeObjectRelease();
    if (v2[2] >= 2uLL)
    {
      v27 = v2[8];
      v28 = v2[9];
      v29 = v2[10];
      v30 = v2[11];
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      swift_bridgeObjectRelease();
      v18 = MEMORY[0x1C3BA64D0](v27, v28, v29, v30);
      v19 = v31;
      result = swift_bridgeObjectRelease();
      v20 = 12;
      goto LABEL_13;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0823C14@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  char v11;

  sub_1C07B1280();
  v2 = (_QWORD *)sub_1C1070630();
  if (v2[2] == 1)
  {
    v3 = v2[4];
    v4 = v2[5];
    v5 = v2[6];
    v6 = v2[7];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_bridgeObjectRelease();
    v7 = MEMORY[0x1C3BA64D0](v3, v4, v5, v6);
    v9 = v8;
    result = swift_bridgeObjectRelease();
    v11 = 13;
  }
  else
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
    v9 = 0;
    v11 = -1;
  }
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v9;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 40) = v11;
  return result;
}

unint64_t sub_1C0823CEC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  unint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  sub_1C07B1280();
  v2 = (_QWORD *)sub_1C1070630();
  v3 = v2;
  if (v2[2] != 3)
    goto LABEL_18;
  v4 = v2[4];
  v5 = v2[5];
  v6 = v2[6];
  v7 = v2[7];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v8 = MEMORY[0x1C3BA64D0](v4, v5, v6, v7);
  v10 = v9;
  swift_bridgeObjectRelease();
  v11 = v8 == 0x7265746E45 && v10 == 0xE500000000000000;
  if (v11 || (sub_1C1070CB4() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v13 = 0x100000000;
  }
  else
  {
    if (v8 == 1953069125 && v10 == 0xE400000000000000)
    {
      result = swift_bridgeObjectRelease();
    }
    else
    {
      v24 = sub_1C1070CB4();
      result = swift_bridgeObjectRelease();
      if ((v24 & 1) == 0)
        goto LABEL_18;
    }
    v13 = 0;
  }
  if (v3[2] < 2uLL)
  {
    __break(1u);
    goto LABEL_25;
  }
  v14 = v3[8];
  v15 = v3[9];
  v16 = v3[10];
  v17 = v3[11];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  MEMORY[0x1C3BA64D0](v14, v15, v16, v17);
  swift_bridgeObjectRelease();
  result = sub_1C08805E8();
  if ((result & 0x100000000) != 0)
  {
LABEL_18:
    result = swift_bridgeObjectRelease();
    v21 = 0;
    v22 = 0;
    v25 = 0;
    v26 = -1;
LABEL_21:
    *(_QWORD *)a1 = v21;
    *(_QWORD *)(a1 + 8) = v22;
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 16) = v25;
    *(_BYTE *)(a1 + 40) = v26;
    return result;
  }
  if (v3[2] >= 3uLL)
  {
    v18 = result;
    v19 = v3[12];
    v20 = v3[13];
    if ((v20 ^ v19) >> 14)
    {
      v27 = v3[14];
      v28 = v3[15];
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      swift_bridgeObjectRelease();
      v21 = MEMORY[0x1C3BA64D0](v19, v20, v27, v28);
      v22 = v29;
      result = swift_bridgeObjectRelease();
    }
    else
    {
      result = swift_bridgeObjectRelease();
      v21 = 0;
      v22 = 0;
    }
    v25 = v18 | (unint64_t)v13;
    v26 = 14;
    goto LABEL_21;
  }
LABEL_25:
  __break(1u);
  return result;
}

double sub_1C0823F3C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  double result;
  uint64_t v16;

  sub_1C07B1280();
  v2 = sub_1C1070630();
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v16 = MEMORY[0x1E0DEE9D8];
    sub_1C09D30E0();
    v4 = v16;
    v5 = (uint64_t *)(v2 + 56);
    do
    {
      v6 = *(v5 - 3);
      v7 = *(v5 - 2);
      v8 = *(v5 - 1);
      v9 = *v5;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v10 = MEMORY[0x1C3BA64D0](v6, v7, v8, v9);
      v12 = v11;
      swift_bridgeObjectRelease();
      v13 = *(_QWORD *)(v16 + 16);
      if (v13 >= *(_QWORD *)(v16 + 24) >> 1)
        sub_1C09D30E0();
      *(_QWORD *)(v16 + 16) = v13 + 1;
      v14 = v16 + 16 * v13;
      *(_QWORD *)(v14 + 32) = v10;
      *(_QWORD *)(v14 + 40) = v12;
      v5 += 4;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v4 = MEMORY[0x1E0DEE9D8];
  }
  *(_QWORD *)a1 = v4;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_BYTE *)(a1 + 40) = 15;
  return result;
}

void sub_1C0824098(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  unsigned int v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unsigned __int8 *v19;
  __int16 v20;
  unsigned __int8 *v21;
  char v22;
  char v23;
  char v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;

  sub_1C07B1280();
  v4 = (_QWORD *)sub_1C1070630();
  v5 = v4;
  if (v4[2] != 2)
    goto LABEL_22;
  v6 = v4[4];
  v7 = v4[5];
  v8 = v4[6];
  v9 = v4[7];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v10 = MEMORY[0x1C3BA64D0](v6, v7, v8, v9);
  v12 = v11;
  swift_bridgeObjectRelease();
  v13 = v10 == 0x7265746E45 && v12 == 0xE500000000000000;
  if (v13 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v14 = 1;
  }
  else if (v10 == 1953069125 && v12 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    v14 = 0;
  }
  else
  {
    v25 = sub_1C1070CB4();
    swift_bridgeObjectRelease();
    v14 = 0;
    if ((v25 & 1) == 0)
      goto LABEL_22;
  }
  if (v5[2] < 2uLL)
  {
    __break(1u);
    goto LABEL_22;
  }
  v15 = v5[8];
  v16 = v5[9];
  v18 = v5[10];
  v17 = v5[11];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  if (!((v16 ^ v15) >> 14))
  {
LABEL_22:
    swift_bridgeObjectRelease();
LABEL_23:
    v21 = 0;
    v14 = 0;
    v23 = -1;
    goto LABEL_24;
  }
  sub_1C08247DC(v15, v16, v18, v17, 10);
  if ((v20 & 0x100) != 0)
    v19 = sub_1C0824470(v15, v16, v18, v17, 10);
  v21 = v19;
  v22 = v20;
  swift_bridgeObjectRelease();
  if ((v22 & 1) != 0)
    goto LABEL_23;
  if (!a1)
  {
    v23 = 18;
    goto LABEL_24;
  }
  if (a1 == 2)
  {
    v23 = 20;
    goto LABEL_24;
  }
  if (a1 != 1)
  {
    if (qword_1ED760048 != -1)
      swift_once();
    v26 = sub_1C106F544();
    sub_1C079E000(v26, (uint64_t)qword_1ED78D800);
    v27 = sub_1C106F538();
    v28 = sub_1C107039C();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v29 = 134217984;
      sub_1C10705AC();
      _os_log_impl(&dword_1C0771000, v27, v28, "Behavior: geoHashBehavior - Unexpected geohash level: %ld", v29, 0xCu);
      MEMORY[0x1C3BA8270](v29, -1, -1);
    }

    goto LABEL_23;
  }
  v23 = 19;
LABEL_24:
  *(_QWORD *)a2 = v21;
  *(_QWORD *)(a2 + 8) = v14;
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_BYTE *)(a2 + 40) = v23;
}

unint64_t sub_1C08243B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED762430;
  if (!qword_1ED762430)
  {
    v1 = sub_1C07D4BEC(&qword_1ED762B70);
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0DEAF20], v1);
    atomic_store(result, (unint64_t *)&qword_1ED762430);
  }
  return result;
}

unint64_t sub_1C08243F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED744A68;
  if (!qword_1ED744A68)
  {
    v1 = sub_1C106D6CC();
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0D3C168], v1);
    atomic_store(result, (unint64_t *)&qword_1ED744A68);
  }
  return result;
}

unint64_t sub_1C0824434()
{
  unint64_t result;

  result = qword_1ED758CA0;
  if (!qword_1ED758CA0)
  {
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0DEBB28], MEMORY[0x1E0DEBAF0]);
    atomic_store(result, (unint64_t *)&qword_1ED758CA0);
  }
  return result;
}

unsigned __int8 *sub_1C0824470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int64_t a5)
{
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unsigned __int8 *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v16 = a1;
  v17 = a2;
  v18 = a3;
  v19 = a4;
  sub_1C08248B4();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v7 = sub_1C106FD54();
  v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v10 = HIBYTE(v8) & 0xF;
    v16 = v7;
    v17 = v8 & 0xFFFFFFFFFFFFFFLL;
    v9 = (unsigned __int8 *)&v16;
    goto LABEL_7;
  }
  sub_1C0C9D364();
  v7 = v11;
  v13 = v12;
  swift_bridgeObjectRelease();
  v8 = v13;
  if ((v13 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    v9 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v9 = (unsigned __int8 *)sub_1C10707F8();
  }
LABEL_7:
  v14 = sub_1C0824560(v9, v10, a5);
  swift_bridgeObjectRelease();
  return v14;
}

unsigned __int8 *sub_1C0824560(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  unint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  unsigned __int8 v15;
  BOOL v16;
  uint64_t v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  unsigned __int8 v20;
  unsigned __int8 *v21;
  unsigned int v22;
  char v23;
  unint64_t v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  unsigned __int8 v28;
  unint64_t v29;
  unsigned int v30;
  char v31;
  unint64_t v32;
  unsigned __int8 v33;

  v3 = a2;
  v4 = *result;
  if (v4 == 43)
  {
    if (a2 >= 1)
    {
      v17 = a2 - 1;
      if (a2 != 1)
      {
        v18 = a3 + 48;
        v19 = a3 + 55;
        v20 = a3 + 87;
        if (a3 > 10)
        {
          v18 = 58;
        }
        else
        {
          v20 = 97;
          v19 = 65;
        }
        if (result)
        {
          v9 = 0;
          v21 = result + 1;
          do
          {
            v22 = *v21;
            if (v22 < 0x30 || v22 >= v18)
            {
              if (v22 < 0x41 || v22 >= v19)
              {
                v13 = 0;
                if (v22 < 0x61 || v22 >= v20)
                  return (unsigned __int8 *)v13;
                v23 = -87;
              }
              else
              {
                v23 = -55;
              }
            }
            else
            {
              v23 = -48;
            }
            if (!is_mul_ok(v9, a3))
              return 0;
            v24 = v9 * a3;
            v25 = v22 + v23;
            v16 = __CFADD__(v24, v25);
            v9 = v24 + v25;
            if (v16)
              return 0;
            ++v21;
            --v17;
          }
          while (v17);
          return (unsigned __int8 *)v9;
        }
        return 0;
      }
      return 0;
    }
  }
  else
  {
    if (v4 != 45)
    {
      if (a2)
      {
        v26 = a3 + 48;
        v27 = a3 + 55;
        v28 = a3 + 87;
        if (a3 > 10)
        {
          v26 = 58;
        }
        else
        {
          v28 = 97;
          v27 = 65;
        }
        if (result)
        {
          v29 = 0;
          do
          {
            v30 = *result;
            if (v30 < 0x30 || v30 >= v26)
            {
              if (v30 < 0x41 || v30 >= v27)
              {
                v13 = 0;
                if (v30 < 0x61 || v30 >= v28)
                  return (unsigned __int8 *)v13;
                v31 = -87;
              }
              else
              {
                v31 = -55;
              }
            }
            else
            {
              v31 = -48;
            }
            if (!is_mul_ok(v29, a3))
              return 0;
            v32 = v29 * a3;
            v33 = v30 + v31;
            v16 = __CFADD__(v32, v33);
            v29 = v32 + v33;
            if (v16)
              return 0;
            ++result;
            --v3;
          }
          while (v3);
          return (unsigned __int8 *)v29;
        }
        return 0;
      }
      return 0;
    }
    if (a2 >= 1)
    {
      v5 = a2 - 1;
      if (a2 != 1)
      {
        v6 = a3 + 48;
        v7 = a3 + 55;
        v8 = a3 + 87;
        if (a3 > 10)
        {
          v6 = 58;
        }
        else
        {
          v8 = 97;
          v7 = 65;
        }
        if (result)
        {
          v9 = 0;
          for (i = result + 1; ; ++i)
          {
            v11 = *i;
            if (v11 < 0x30 || v11 >= v6)
            {
              if (v11 < 0x41 || v11 >= v7)
              {
                v13 = 0;
                if (v11 < 0x61 || v11 >= v8)
                  return (unsigned __int8 *)v13;
                v12 = -87;
              }
              else
              {
                v12 = -55;
              }
            }
            else
            {
              v12 = -48;
            }
            if (!is_mul_ok(v9, a3))
              return 0;
            v14 = v9 * a3;
            v15 = v11 + v12;
            v16 = v14 >= v15;
            v9 = v14 - v15;
            if (!v16)
              return 0;
            if (!--v5)
              return (unsigned __int8 *)v9;
          }
        }
        return 0;
      }
      return 0;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1C08247DC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, int64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t v12;
  char v13;
  _QWORD v14[2];
  char v15;

  if ((a4 & 0x1000000000000000) != 0)
    goto LABEL_8;
  if ((a4 & 0x2000000000000000) != 0)
  {
    v12 = HIBYTE(a4) & 0xF;
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    v11 = v14;
  }
  else if ((a3 & 0x1000000000000000) != 0)
  {
    v11 = (_QWORD *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v12 = a3 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v11 = (_QWORD *)sub_1C10707F8();
  }
  sub_1C08248F0((uint64_t)v11, v12, a1, a2, a3, a4, a5);
  if (!v5)
  {
    v15 = v13 & 1;
LABEL_8:
    LOBYTE(v14[0]) = (a4 & 0x1000000000000000) != 0;
  }
}

unint64_t sub_1C08248B4()
{
  unint64_t result;

  result = qword_1ED744718;
  if (!qword_1ED744718)
  {
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0DEBB10], MEMORY[0x1E0DEBAF0]);
    atomic_store(result, (unint64_t *)&qword_1ED744718);
  }
  return result;
}

void sub_1C08248F0(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, int64_t a7)
{
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unsigned __int8 *v29;
  int v30;
  unsigned __int8 v31;
  unsigned __int8 v32;
  unsigned __int8 v33;
  unint64_t v34;
  unsigned __int8 *v35;
  uint64_t v36;
  unsigned int v37;
  char v38;
  unint64_t v39;
  unsigned __int8 v40;
  BOOL v41;
  unsigned __int8 v42;
  unsigned __int8 v43;
  unsigned __int8 v44;
  unint64_t v45;
  unsigned __int8 *v46;
  uint64_t v47;
  unsigned int v48;
  char v49;
  unint64_t v50;
  unsigned __int8 v51;
  unsigned __int8 v52;
  unsigned __int8 v53;
  unsigned __int8 v54;
  unint64_t v55;
  unsigned int v56;
  char v57;
  unint64_t v58;
  unsigned __int8 v59;

  v11 = a3;
  v13 = (a5 >> 59) & 1;
  if ((a6 & 0x1000000000000000) == 0)
    LOBYTE(v13) = 1;
  v14 = 4 << v13;
  v15 = a3 & 0xC;
  v16 = a3;
  if (v15 == 4 << v13)
  {
    sub_1C0D93FA8(a3, a5, a6);
    v16 = v20;
  }
  v17 = HIBYTE(a6) & 0xF;
  if ((a6 & 0x1000000000000000) != 0)
  {
    v21 = a5 & 0xFFFFFFFFFFFFLL;
    if ((a6 & 0x2000000000000000) != 0)
      v21 = HIBYTE(a6) & 0xF;
    if (v21 < v16 >> 16)
      goto LABEL_96;
    v18 = sub_1C106FCDC();
    v17 = HIBYTE(a6) & 0xF;
  }
  else
  {
    v18 = v16 >> 16;
  }
  if (v15 == v14)
  {
    v22 = v17;
    sub_1C0D93FA8(v11, a5, a6);
    v17 = v22;
    v11 = v23;
  }
  if ((a4 & 0xC) == v14)
  {
    v24 = a4;
    v25 = v17;
    sub_1C0D93FA8(v24, a5, a6);
    v17 = v25;
    a4 = v26;
    if ((a6 & 0x1000000000000000) == 0)
      goto LABEL_11;
  }
  else if ((a6 & 0x1000000000000000) == 0)
  {
LABEL_11:
    v19 = (a4 >> 16) - (v11 >> 16);
    goto LABEL_22;
  }
  v27 = a5 & 0xFFFFFFFFFFFFLL;
  if ((a6 & 0x2000000000000000) != 0)
    v27 = v17;
  if (v27 < v11 >> 16)
    goto LABEL_92;
  if (v27 < a4 >> 16)
  {
LABEL_93:
    __break(1u);
LABEL_94:
    __break(1u);
    goto LABEL_95;
  }
  v19 = sub_1C106FCDC();
LABEL_22:
  v28 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_91;
  }
  if (v28 < v18)
  {
LABEL_91:
    __break(1u);
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  v29 = (unsigned __int8 *)(a1 + v18);
  if (!a1)
    v29 = 0;
  v30 = *v29;
  if (v30 == 43)
  {
    if (v19 < 1)
    {
LABEL_95:
      __break(1u);
LABEL_96:
      __break(1u);
      return;
    }
    if (v19 != 1)
    {
      v42 = a7 + 48;
      v43 = a7 + 55;
      v44 = a7 + 87;
      if (a7 > 10)
      {
        v42 = 58;
      }
      else
      {
        v44 = 97;
        v43 = 65;
      }
      if (v29)
      {
        v45 = 0;
        v46 = v29 + 1;
        v47 = v19 - 1;
        while (1)
        {
          v48 = *v46;
          if (v48 < 0x30 || v48 >= v42)
          {
            if (v48 < 0x41 || v48 >= v43)
            {
              if (v48 < 0x61 || v48 >= v44)
                return;
              v49 = -87;
            }
            else
            {
              v49 = -55;
            }
          }
          else
          {
            v49 = -48;
          }
          if (is_mul_ok(v45, a7))
          {
            v50 = v45 * a7;
            v51 = v48 + v49;
            v41 = __CFADD__(v50, v51);
            v45 = v50 + v51;
            if (!v41)
            {
              ++v46;
              if (--v47)
                continue;
            }
          }
          return;
        }
      }
    }
  }
  else
  {
    if (v30 == 45)
    {
      if (v19 >= 1)
      {
        if (v19 != 1)
        {
          v31 = a7 + 48;
          v32 = a7 + 55;
          v33 = a7 + 87;
          if (a7 > 10)
          {
            v31 = 58;
          }
          else
          {
            v33 = 97;
            v32 = 65;
          }
          if (v29)
          {
            v34 = 0;
            v35 = v29 + 1;
            v36 = v19 - 1;
            while (1)
            {
              v37 = *v35;
              if (v37 < 0x30 || v37 >= v31)
              {
                if (v37 < 0x41 || v37 >= v32)
                {
                  if (v37 < 0x61 || v37 >= v33)
                    return;
                  v38 = -87;
                }
                else
                {
                  v38 = -55;
                }
              }
              else
              {
                v38 = -48;
              }
              if (is_mul_ok(v34, a7))
              {
                v39 = v34 * a7;
                v40 = v37 + v38;
                v41 = v39 >= v40;
                v34 = v39 - v40;
                if (v41)
                {
                  ++v35;
                  if (--v36)
                    continue;
                }
              }
              return;
            }
          }
        }
        return;
      }
      goto LABEL_94;
    }
    if (v28 != v18)
    {
      v52 = a7 + 48;
      v53 = a7 + 55;
      v54 = a7 + 87;
      if (a7 > 10)
      {
        v52 = 58;
      }
      else
      {
        v54 = 97;
        v53 = 65;
      }
      if (v29)
      {
        v55 = 0;
        while (1)
        {
          v56 = *v29;
          if (v56 < 0x30 || v56 >= v52)
          {
            if (v56 < 0x41 || v56 >= v53)
            {
              if (v56 < 0x61 || v56 >= v54)
                return;
              v57 = -87;
            }
            else
            {
              v57 = -55;
            }
          }
          else
          {
            v57 = -48;
          }
          if (is_mul_ok(v55, a7))
          {
            v58 = v55 * a7;
            v59 = v56 + v57;
            v41 = __CFADD__(v58, v59);
            v55 = v58 + v59;
            if (!v41)
            {
              ++v29;
              if (--v19)
                continue;
            }
          }
          return;
        }
      }
    }
  }
}

uint64_t sub_1C0824D28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = sub_1C0780478();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  sub_1C0778544();
  sub_1C0824E00(v3, v4, v5, v6, v7, v8, v9, v10);
  sub_1C0827300((unint64_t *)&qword_1ED744A68, MEMORY[0x1E0D3C168]);
  v11 = sub_1C1070C0C();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  swift_bridgeObjectRelease();
  sub_1C07A43CC();
  sub_1C0821B64();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  return v11;
}

void sub_1C0824E00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;

  sub_1C07936F4(v8, a2, a3, a4, a5, a6, a7, a8, v9);
  __asm { BR              X10 }
}

void sub_1C0824E38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *MEMORY[0x1E0D3C120];
  v2 = sub_1C0780478();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v0, v1, v2);
  sub_1C0794378();
}

void sub_1C0824F64(uint64_t a1)
{
  uint64_t v2;
  _BYTE v3[48];

  sub_1C079E234(a1, (uint64_t)&v2);
  sub_1C07DFF44(a1, (uint64_t)v3);
  __asm { BR              X10 }
}

uint64_t sub_1C0824FBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  char v5;
  _QWORD v7[22];

  v1 = v7[6];
  v2 = v7[7];
  sub_1C07A67C8(a1, (uint64_t)v7);
  if (v3)
  {
    v5 = 0;
  }
  else if (v1 == v7[0] && v2 == v7[1])
  {
    v5 = 1;
  }
  else
  {
    v5 = sub_1C07785B0();
  }
  return v5 & 1;
}

void sub_1C0825418(uint64_t a1)
{
  _BYTE v1[48];

  sub_1C079E234(a1, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_1C082545C()
{
  sub_1C1070E04();
  return sub_1C106FC28();
}

void sub_1C0825698()
{
  _BYTE v0[72];

  sub_1C077C06C();
  sub_1C0825418((uint64_t)v0);
  sub_1C077AE74();
  sub_1C0775804();
}

uint64_t sub_1C08256C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v10;

  sub_1C07936F4(v8, a2, a3, a4, a5, a6, a7, a8, v10);
  return sub_1C0824D28();
}

void sub_1C08256F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[48];

  v8 = sub_1C07936F4(a1, a2, a3, a4, a5, a6, a7, a8, v17);
  v9 = sub_1C079E234(v8, (uint64_t)v19);
  sub_1C07A7CE4(v9, v10, v11, v12, v13, v14, v15, v16, v18);
  sub_1C07B3F84();
}

void sub_1C0825720()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C07DFF44(v0, (uint64_t)&v1);
  sub_1C0825698();
}

void sub_1C0825754(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1C07DFF44(v1, (uint64_t)&v3);
  sub_1C0825418(a1);
  sub_1C0794378();
}

uint64_t sub_1C0825788()
{
  uint64_t v0;
  _BYTE v2[72];
  _BYTE v3[48];

  sub_1C07DFF44(v0, (uint64_t)v3);
  sub_1C1070DF8();
  sub_1C0825418((uint64_t)v2);
  return sub_1C077AE74();
}

uint64_t sub_1C08257D4()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  _BYTE v7[48];

  v1 = v0;
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  sub_1C0B8A340(0xD000000000000017, 0x80000001C10E43A0, v2);
  v3 = (void *)sub_1C106AD38();
  v4 = objc_msgSend(v2, sel_stringFromDate_, v3);

  v5 = sub_1C106FB14();
  sub_1C07A43CC();
  sub_1C07DFF44(v1 + 16, (uint64_t)v7);
  sub_1C0824D28();
  sub_1C106FC94();

  sub_1C0775844();
  return v5;
}

uint64_t sub_1C08258CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  __int16 v14;

  v3 = sub_1C077AE98();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1C0778564();
  v7 = v6 - v5;
  v8 = sub_1C078AAF8();
  v9(v8);
  v13 = 0;
  v14 = 256;
  type metadata accessor for BehaviorContext();
  v10 = swift_allocObject();
  sub_1C0825B94(v7, &v13, 0);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a2, v3);
  v11 = swift_allocObject();
  sub_1C079E234(v11, v11 + 16);
  *(_QWORD *)(v11 + 64) = v10;
  return v11;
}

void sub_1C08259B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[48];

  if ((sub_1C106AD8C() & 1) != 0)
  {
    sub_1C07936F4(a1 + 16, v4, v5, v6, v7, v8, v9, v10, v19);
    v11 = sub_1C07DFF44(a2 + 16, (uint64_t)v21);
    sub_1C07A7CE4(v11, v12, v13, v14, v15, v16, v17, v18, v20);
  }
  sub_1C07B3F84();
}

uint64_t sub_1C0825A18()
{
  uint64_t v0;

  sub_1C0826F50(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56));
  swift_release();
  return v0;
}

uint64_t sub_1C0825A48()
{
  sub_1C0825A18();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BehaviorEvent()
{
  return objc_opt_self();
}

uint64_t sub_1C0825A88()
{
  return sub_1C08257D4();
}

uint64_t sub_1C0825AA8(uint64_t *a1, uint64_t *a2)
{
  char v2;

  sub_1C08259B4(*a1, *a2);
  return v2 & 1;
}

void sub_1C0825AC8()
{
  sub_1C07C75B4();
}

uint64_t sub_1C0825ADC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OBJC_IVAR____TtC24IntelligencePlatformCore15BehaviorContext____lazy_storage___cachedLastBehaviorByTypes;
  if (*(_QWORD *)(v0
                 + OBJC_IVAR____TtC24IntelligencePlatformCore15BehaviorContext____lazy_storage___cachedLastBehaviorByTypes))
  {
    v2 = *(_QWORD *)(v0
                   + OBJC_IVAR____TtC24IntelligencePlatformCore15BehaviorContext____lazy_storage___cachedLastBehaviorByTypes);
  }
  else
  {
    sub_1C106D6CC();
    sub_1C07ACF80(&qword_1ED758C90);
    sub_1C0827300((unint64_t *)&qword_1ED744A48, MEMORY[0x1E0D3C148]);
    v2 = sub_1C106F97C();
    *(_QWORD *)(v0 + v1) = v2;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_bridgeObjectRelease();
  }
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return v2;
}

uint64_t sub_1C0825B7C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1
            + OBJC_IVAR____TtC24IntelligencePlatformCore15BehaviorContext____lazy_storage___cachedLastBehaviorByTypes) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0825B94(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  unint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  unint64_t v56;
  char v57;
  unint64_t v58;
  char v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  BOOL v64;
  uint64_t v65;
  uint64_t result;
  uint64_t v67;
  int64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  int64_t v77;
  unint64_t v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;

  v7 = sub_1C0780478();
  v82 = *(_QWORD *)(v7 - 8);
  v83 = v7;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v8);
  sub_1C077AE40();
  v81 = v9;
  sub_1C07ACF80(&qword_1ED744A40);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v10);
  v76 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v75 = (uint64_t)&v67 - v13;
  v14 = *a2;
  v15 = *((_BYTE *)a2 + 8);
  v16 = *((_BYTE *)a2 + 9);
  v17 = v3 + OBJC_IVAR____TtC24IntelligencePlatformCore15BehaviorContext_motionState;
  *(_QWORD *)v17 = 0;
  *(_WORD *)(v17 + 8) = 256;
  v18 = OBJC_IVAR____TtC24IntelligencePlatformCore15BehaviorContext_cachedContextIntervals;
  sub_1C07ACF80(&qword_1ED746280);
  sub_1C07F3934();
  *(_QWORD *)(v3 + v18) = sub_1C106F97C();
  *(_QWORD *)(v3
            + OBJC_IVAR____TtC24IntelligencePlatformCore15BehaviorContext____lazy_storage___cachedLastBehaviorByTypes) = 0;
  v80 = v3;
  v19 = v3 + OBJC_IVAR____TtC24IntelligencePlatformCore15BehaviorContext_date;
  v20 = sub_1C077AE98();
  v69 = *(_QWORD *)(v20 - 8);
  v70 = v20;
  v21 = *(void (**)(uint64_t, uint64_t))(v69 + 16);
  v71 = a1;
  v21(v19, a1);
  if ((v16 & 1) == 0)
  {
    v22 = v80 + OBJC_IVAR____TtC24IntelligencePlatformCore15BehaviorContext_motionState;
    *(_QWORD *)v22 = v14;
    *(_BYTE *)(v22 + 8) = v15;
    *(_BYTE *)(v22 + 9) = 0;
  }
  if (!a3)
  {
    sub_1C0790DF4();
    return v80;
  }
  v77 = 0;
  v23 = *(_QWORD *)(a3 + 64);
  v72 = a3 + 64;
  v24 = 1 << *(_BYTE *)(a3 + 32);
  v25 = -1;
  if (v24 < 64)
    v25 = ~(-1 << v24);
  v26 = v25 & v23;
  v73 = (unint64_t)(v24 + 63) >> 6;
  v74 = a3;
  v68 = v73 - 1;
  v27 = (uint64_t)v76;
  if ((v25 & v23) == 0)
    goto LABEL_9;
LABEL_7:
  v28 = __clz(__rbit64(v26));
  v29 = (v26 - 1) & v26;
  v30 = v28 | (v77 << 6);
LABEL_8:
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v82 + 16))(v27, *(_QWORD *)(a3 + 48) + *(_QWORD *)(v82 + 72) * v30, v83);
  v31 = *(_QWORD *)(a3 + 56) + 48 * v30;
  v32 = sub_1C07A5BB8();
  v33 = v27 + *(int *)(v32 + 48);
  v34 = *(_QWORD *)v31;
  v35 = *(_QWORD *)(v31 + 8);
  v36 = *(_QWORD *)(v31 + 16);
  v37 = *(_QWORD *)(v31 + 24);
  v38 = *(_QWORD *)(v31 + 32);
  LOBYTE(v31) = *(_BYTE *)(v31 + 40);
  *(_QWORD *)v33 = v34;
  *(_QWORD *)(v33 + 8) = v35;
  *(_QWORD *)(v33 + 16) = v36;
  *(_QWORD *)(v33 + 24) = v37;
  *(_QWORD *)(v33 + 32) = v38;
  *(_BYTE *)(v33 + 40) = v31;
  sub_1C0794D1C(v27, 0, v39, v32);
  sub_1C08272EC(v34, v35, v36, v37, v38, v31);
  while (1)
  {
    v45 = v75;
    sub_1C08273C8(v27, v75, &qword_1ED744A40);
    v46 = sub_1C07A5BB8();
    if (sub_1C07B2D80(v45, 1, v46) == 1)
    {
      sub_1C0790DF4();
      swift_release();
      return v80;
    }
    v78 = v29;
    v47 = v45 + *(int *)(v46 + 48);
    v48 = *(_QWORD *)v47;
    v49 = *(_QWORD *)(v47 + 8);
    v50 = *(_QWORD *)(v47 + 16);
    v51 = *(_QWORD *)(v47 + 24);
    v52 = *(_QWORD *)(v47 + 32);
    v79 = *(unsigned __int8 *)(v47 + 40);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v82 + 32))(v81, v45, v83);
    v53 = sub_1C0825ADC();
    swift_isUniquelyReferenced_nonNull_native();
    v84 = (_QWORD *)v53;
    sub_1C07DCDE8();
    if (__OFADD__(*(_QWORD *)(v53 + 16), (v55 & 1) == 0))
      break;
    v56 = v54;
    v57 = v55;
    sub_1C07ACF80(&qword_1ED7462F0);
    if ((sub_1C107090C() & 1) != 0)
    {
      sub_1C07DCDE8();
      if ((v57 & 1) != (v59 & 1))
        goto LABEL_45;
      v56 = v58;
    }
    v60 = v84;
    if ((v57 & 1) != 0)
    {
      v61 = v84[7] + 48 * v56;
      sub_1C08273B4(*(_QWORD *)v61, *(_QWORD *)(v61 + 8), *(_QWORD *)(v61 + 16), *(_QWORD *)(v61 + 24), *(_QWORD *)(v61 + 32), *(_BYTE *)(v61 + 40));
      *(_QWORD *)v61 = v48;
      *(_QWORD *)(v61 + 8) = v49;
      *(_QWORD *)(v61 + 16) = v50;
      *(_QWORD *)(v61 + 24) = v51;
      *(_QWORD *)(v61 + 32) = v52;
      *(_BYTE *)(v61 + 40) = v79;
    }
    else
    {
      v84[(v56 >> 6) + 8] |= 1 << v56;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v82 + 16))(v60[6] + *(_QWORD *)(v82 + 72) * v56, v81, v83);
      v62 = v60[7] + 48 * v56;
      *(_QWORD *)v62 = v48;
      *(_QWORD *)(v62 + 8) = v49;
      *(_QWORD *)(v62 + 16) = v50;
      *(_QWORD *)(v62 + 24) = v51;
      *(_QWORD *)(v62 + 32) = v52;
      *(_BYTE *)(v62 + 40) = v79;
      v63 = v60[2];
      v64 = __OFADD__(v63, 1);
      v65 = v63 + 1;
      if (v64)
        goto LABEL_42;
      v60[2] = v65;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v81, v83);
    sub_1C0825B7C((uint64_t)v60);
    a3 = v74;
    v27 = (uint64_t)v76;
    v26 = v78;
    if (v78)
      goto LABEL_7;
LABEL_9:
    v40 = v77 + 1;
    if (__OFADD__(v77, 1))
      goto LABEL_43;
    if (v40 < v73)
    {
      v41 = *(_QWORD *)(v72 + 8 * v40);
      if (v41)
        goto LABEL_12;
      v42 = v77 + 2;
      ++v77;
      if (v40 + 1 < v73)
      {
        v41 = *(_QWORD *)(v72 + 8 * v42);
        if (v41)
          goto LABEL_15;
        v77 = v40 + 1;
        if (v40 + 2 < v73)
        {
          v41 = *(_QWORD *)(v72 + 8 * (v40 + 2));
          if (v41)
          {
            v40 += 2;
            goto LABEL_12;
          }
          v42 = v40 + 3;
          v77 = v40 + 2;
          if (v40 + 3 < v73)
          {
            v41 = *(_QWORD *)(v72 + 8 * v42);
            if (!v41)
            {
              while (1)
              {
                v40 = v42 + 1;
                if (__OFADD__(v42, 1))
                  goto LABEL_44;
                if (v40 >= v73)
                {
                  v77 = v68;
                  goto LABEL_26;
                }
                v41 = *(_QWORD *)(v72 + 8 * v40);
                ++v42;
                if (v41)
                  goto LABEL_12;
              }
            }
LABEL_15:
            v40 = v42;
LABEL_12:
            v29 = (v41 - 1) & v41;
            v30 = __clz(__rbit64(v41)) + (v40 << 6);
            v77 = v40;
            goto LABEL_8;
          }
        }
      }
    }
LABEL_26:
    v43 = sub_1C07A5BB8();
    sub_1C0794D1C(v27, 1, v44, v43);
    v29 = 0;
  }
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  result = sub_1C1070D44();
  __break(1u);
  return result;
}

uint64_t sub_1C0826114(uint64_t a1, unint64_t isUniquelyReferenced_nonNull_native)
{
  unint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _BYTE *v24;
  char v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _BOOL8 v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  id v45;
  uint64_t result;
  unsigned __int8 v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _OWORD v63[3];
  uint64_t v64;
  _OWORD v65[3];
  uint64_t v66;
  _QWORD *v67;

  v59 = sub_1C106D6CC();
  v55 = *(_QWORD *)(v59 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v5);
  sub_1C077AE40();
  v62 = v6;
  sub_1C07ACF80(&qword_1ED744A78);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v7);
  sub_1C0778564();
  v10 = (_QWORD *)(v9 - v8);
  v53 = sub_1C106ADE0();
  v52 = *(_QWORD *)(v53 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v11);
  sub_1C0778544();
  if (isUniquelyReferenced_nonNull_native >> 62)
  {
LABEL_48:
    sub_1C077E6D0();
    v12 = sub_1C10709B4();
  }
  else
  {
    v12 = *(_QWORD *)((isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_1C077E6D0();
  }
  v60 = isUniquelyReferenced_nonNull_native;
  v61 = v12;
  v54 = a1;
  v49 = v2;
  if (v12)
  {
    if (v12 < 1)
    {
      __break(1u);
LABEL_50:
      sub_1C1070D44();
      __break(1u);
LABEL_51:
      sub_1C1070774();
      sub_1C106FC94();
      sub_1C10708F4();
      sub_1C106FC94();
      result = sub_1C1070954();
      __break(1u);
      return result;
    }
    v13 = 0;
    v14 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
    v15 = MEMORY[0x1E0DEE9D8];
    do
    {
      if (v14)
        sub_1C0794D10();
      v16 = swift_retain();
      v17 = *(_QWORD *)(v16 + OBJC_IVAR____TtC24IntelligencePlatformCore15BehaviorContext_motionState);
      v18 = *(_BYTE *)(v16 + OBJC_IVAR____TtC24IntelligencePlatformCore15BehaviorContext_motionState + 8);
      v2 = *(unsigned __int8 *)(v16 + OBJC_IVAR____TtC24IntelligencePlatformCore15BehaviorContext_motionState + 9);
      swift_release();
      if ((v2 & 1) == 0)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C079C2CC();
          v15 = v21;
        }
        v19 = *(_QWORD *)(v15 + 16);
        v2 = v19 + 1;
        if (v19 >= *(_QWORD *)(v15 + 24) >> 1)
        {
          sub_1C079C2CC();
          v15 = v22;
        }
        *(_QWORD *)(v15 + 16) = v2;
        v20 = v15 + 16 * v19;
        *(_QWORD *)(v20 + 32) = v17;
        *(_BYTE *)(v20 + 40) = v18 & 1;
        isUniquelyReferenced_nonNull_native = v60;
      }
      ++v13;
      v12 = v61;
    }
    while (v61 != v13);
  }
  else
  {
    v15 = MEMORY[0x1E0DEE9D8];
  }
  sub_1C07785A0();
  v23 = *(_QWORD *)(v15 + 16);
  if (v23 <= 1)
  {
    if (v23)
    {
      v48 = *(_QWORD *)(v15 + 32);
      v25 = *(_BYTE *)(v15 + 40);
    }
    else
    {
      v48 = 0;
      v25 = 1;
    }
    v47 = v25;
    a1 = (uint64_t)v10;
    swift_bridgeObjectRelease();
    if (v12)
    {
      v50 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
      sub_1C077E6D0();
      v26 = 0;
      v10 = (_QWORD *)MEMORY[0x1E0DEE9E0];
      while (1)
      {
        if (v50)
          sub_1C0794D10();
        swift_retain();
        v27 = __OFADD__(v26, 1);
        v28 = v26 + 1;
        if (v27)
        {
LABEL_47:
          __break(1u);
          goto LABEL_48;
        }
        v51 = v28;
        sub_1C0825ADC();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v67 = v10;
        sub_1C090A414(v65);
        v63[0] = v65[0];
        v63[1] = v65[1];
        v63[2] = v65[2];
        v64 = v66;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        sub_1C090A430(a1);
        v29 = sub_1C07ACF80(&qword_1ED744A70);
        if (sub_1C07B2D80(a1, 1, v29) != 1)
          break;
LABEL_28:
        sub_1C07906B8();
        sub_1C0796FA4();
        swift_release();
        sub_1C079579C();
        swift_bridgeObjectRelease();
        isUniquelyReferenced_nonNull_native = v60;
        v26 = v51;
        if (v51 == v61)
        {
          sub_1C07785A0();
          goto LABEL_43;
        }
      }
      while (1)
      {
        v30 = a1 + *(int *)(v29 + 48);
        v31 = a1;
        sub_1C079A7C8(v62, a1);
        v33 = *(_QWORD *)v30;
        v32 = *(_QWORD *)(v30 + 8);
        v34 = *(_QWORD *)(v30 + 16);
        v56 = *(_QWORD *)(v30 + 24);
        v57 = *(_QWORD *)(v30 + 32);
        v58 = *(_BYTE *)(v30 + 40);
        sub_1C07DCDE8();
        v2 = v36;
        v37 = v10[2];
        v38 = (v35 & 1) == 0;
        if (__OFADD__(v37, v38))
        {
          __break(1u);
LABEL_46:
          __break(1u);
          goto LABEL_47;
        }
        a1 = v35;
        if (v10[3] >= v37 + v38)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1C07ACF80(&qword_1ED7462F0);
            sub_1C1070918();
          }
        }
        else
        {
          sub_1C0A4B394();
          sub_1C07DCDE8();
          if ((a1 & 1) != (v40 & 1))
            goto LABEL_50;
          v2 = v39;
        }
        isUniquelyReferenced_nonNull_native = v60;
        if ((a1 & 1) != 0)
          break;
        v10 = v67;
        v67[(v2 >> 6) + 8] |= 1 << v2;
        sub_1C079A7C8(v10[6] + *(_QWORD *)(v55 + 72) * v2, v62);
        v41 = v10[7] + 48 * v2;
        *(_QWORD *)v41 = v33;
        *(_QWORD *)(v41 + 8) = v32;
        *(_QWORD *)(v41 + 16) = v34;
        *(_QWORD *)(v41 + 24) = v56;
        *(_QWORD *)(v41 + 32) = v57;
        *(_BYTE *)(v41 + 40) = v58;
        v42 = v10[2];
        v27 = __OFADD__(v42, 1);
        v43 = v42 + 1;
        if (v27)
          goto LABEL_46;
        v10[2] = v43;
        a1 = v31;
        sub_1C090A430(v31);
        v29 = sub_1C07ACF80(&qword_1ED744A70);
        isUniquelyReferenced_nonNull_native = 1;
        if (sub_1C07B2D80(v31, 1, v29) == 1)
          goto LABEL_28;
      }
      sub_1C0827378();
      v15 = sub_1C0775810();
      *v44 = 0;
      swift_willThrow();
      v45 = (id)v15;
      sub_1C07ACF80(&qword_1ED7614F0);
      if ((swift_dynamicCast() & 1) != 0)
        goto LABEL_51;
      sub_1C07906B8();
      sub_1C08273B4(v33, v32, v34, v56, v57, v58);
      (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v62, v59);
      sub_1C0796FA4();
      swift_release();

      swift_bridgeObjectRelease();
      sub_1C07785A0();
      sub_1C079579C();
      swift_bridgeObjectRelease();
      sub_1C07985DC();
      sub_1C07785A0();
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_43:
      sub_1C07785A0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16))(v49, v54, v53);
      *(_QWORD *)&v63[0] = v48;
      WORD4(v63[0]) = v47;
      v15 = swift_allocObject();
      sub_1C0825B94(v49, (uint64_t *)v63, (uint64_t)v10);
      (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v54, v53);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1C07785A0();
    sub_1C0827378();
    sub_1C0775810();
    *v24 = 1;
    swift_willThrow();
    sub_1C07985DC();
  }
  return v15;
}

uint64_t sub_1C08268CC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v4 = v3;
  v8 = sub_1C0780478();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  sub_1C0778564();
  v12 = v11 - v10;
  v13 = sub_1C0825ADC();
  if (*(_QWORD *)(v13 + 16) && (sub_1C07DCDE8(), (v15 & 1) != 0))
  {
    v16 = *(_QWORD *)(v13 + 56) + 48 * v14;
    v17 = *(_QWORD *)v16;
    v18 = *(_QWORD *)(v16 + 8);
    v19 = *(_QWORD *)(v16 + 16);
    v20 = *(_QWORD *)(v16 + 24);
    v21 = *(_QWORD *)(v16 + 32);
    v22 = *(_BYTE *)(v16 + 40);
    sub_1C08272EC(*(_QWORD *)v16, v18, v19, v20, v21, v22);
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v32 = v12;
    v33 = v8;
    swift_bridgeObjectRelease();
    v24 = a2[3];
    v25 = a2[4];
    sub_1C07A9480(a2, v24);
    v26 = a1;
    v27 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 16))(v4 + OBJC_IVAR____TtC24IntelligencePlatformCore15BehaviorContext_date, a1, v24, v25);
    v31 = a3;
    if (v27)
    {
      v17 = *(_QWORD *)(v27 + 16);
      v18 = *(_QWORD *)(v27 + 24);
      v28 = *(_QWORD *)(v27 + 32);
      v20 = *(_QWORD *)(v27 + 40);
      v21 = *(_QWORD *)(v27 + 48);
      v29 = *(_BYTE *)(v27 + 56);
      sub_1C0826EB0(v17, v18, v28, v20, v21, v29);
      swift_release();
    }
    else
    {
      v17 = 0;
      v18 = 0;
      v28 = 0;
      v20 = 0;
      v21 = 0;
      v29 = -1;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v32, v26, v33);
    sub_1C08272EC(v17, v18, v28, v20, v21, v29);
    v30 = sub_1C0825ADC();
    swift_isUniquelyReferenced_nonNull_native();
    sub_1C08A09F8();
    swift_bridgeObjectRelease();
    v19 = v28;
    v22 = v29;
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v32, v33);
    result = sub_1C0825B7C(v30);
    a3 = v31;
  }
  *(_QWORD *)a3 = v17;
  *(_QWORD *)(a3 + 8) = v18;
  *(_QWORD *)(a3 + 16) = v19;
  *(_QWORD *)(a3 + 24) = v20;
  *(_QWORD *)(a3 + 32) = v21;
  *(_BYTE *)(a3 + 40) = v22;
  return result;
}

void sub_1C0826B18(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0778544();
  v7 = (uint64_t *)(v2 + OBJC_IVAR____TtC24IntelligencePlatformCore15BehaviorContext_motionState);
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC24IntelligencePlatformCore15BehaviorContext_motionState + 9) & 1) != 0)
  {
    v8 = a1[3];
    v9 = a1[4];
    sub_1C07A9480(a1, v8);
    v10 = v2 + OBJC_IVAR____TtC24IntelligencePlatformCore15BehaviorContext_date;
    sub_1C106AD2C();
    v11 = sub_1C077AE98();
    sub_1C0794D1C(v3, 0, v12, v11);
    v13 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(v9 + 40))(v3, v10, 0, 1, v8, v9);
    sub_1C077CDB4(v3);
    if (v13 >> 62)
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v14 = sub_1C10709B4();
      sub_1C0775844();
    }
    else
    {
      v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v15 = v14 == 0;
    if (v14)
    {
      sub_1C0783D0C(0, (v13 & 0xC000000000000001) == 0, v13);
      if ((v13 & 0xC000000000000001) != 0)
      {
        v18 = MEMORY[0x1C3BA70DC](0, v13);
        sub_1C0775844();
        v17 = *(_QWORD *)(v18 + OBJC_IVAR____TtC24IntelligencePlatformCore16MotionStateEvent_motionState);
        swift_unknownObjectRelease();
      }
      else
      {
        v16 = *(_QWORD *)(v13 + 32);
        swift_retain();
        sub_1C0775844();
        v17 = *(_QWORD *)(v16 + OBJC_IVAR____TtC24IntelligencePlatformCore16MotionStateEvent_motionState);
        swift_release();
      }
    }
    else
    {
      sub_1C0775844();
      v17 = 0;
    }
    *v7 = v17;
    *((_BYTE *)v7 + 8) = v14 == 0;
    *((_BYTE *)v7 + 9) = 0;
  }
  else
  {
    v17 = *v7;
    v15 = v7[1] & 1;
  }
  *(_QWORD *)a2 = v17;
  *(_BYTE *)(a2 + 8) = v15;
}

uint64_t sub_1C0826CEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC24IntelligencePlatformCore15BehaviorContext_cachedContextIntervals);
  swift_beginAccess();
  v4 = *v3;
  if (*(_QWORD *)(v4 + 16) && (v5 = sub_1C07DCE4C(a1), (v6 & 1) != 0))
  {
    v7 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v5);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  else
  {
    v7 = 0;
  }
  swift_endAccess();
  return v7;
}

void sub_1C0826D6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC24IntelligencePlatformCore15BehaviorContext_date;
  v2 = sub_1C077AE98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C0778534();
}

uint64_t sub_1C0826DC8()
{
  sub_1C0826D6C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BehaviorContext()
{
  uint64_t result;

  result = qword_1ED7571D0;
  if (!qword_1ED7571D0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C0826E24()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C106ADE0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1C0826EB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t result;

  switch(a6)
  {
    case 0:
    case 2:
    case 4:
    case 7:
    case 9:
    case 10:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
      goto LABEL_2;
    case 1:
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      goto LABEL_2;
    case 12:
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
LABEL_2:
      result = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t destroy for Behavior(uint64_t a1)
{
  return sub_1C0826F50(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
}

uint64_t sub_1C0826F50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t result;

  switch(a6)
  {
    case 0:
    case 2:
    case 4:
    case 7:
    case 9:
    case 10:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
      goto LABEL_2;
    case 1:
      swift_bridgeObjectRelease();
      goto LABEL_2;
    case 12:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_2:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t initializeWithCopy for Behavior(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_1C0826EB0(*(_QWORD *)a2, v4, v5, v6, v7, v8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  return a1;
}

uint64_t assignWithCopy for Behavior(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_1C0826EB0(*(_QWORD *)a2, v4, v5, v6, v7, v8);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  v14 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v8;
  sub_1C0826F50(v9, v10, v11, v12, v13, v14);
  return a1;
}

__n128 initializeWithTake for Behavior(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for Behavior(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  char v11;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 32) = v3;
  v11 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v4;
  sub_1C0826F50(v5, v7, v6, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for Behavior(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xEB && *(_BYTE *)(a1 + 41))
    {
      v2 = *(_DWORD *)a1 + 234;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 40);
      if (v3 <= 0x15)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Behavior(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xEA)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 235;
    if (a3 >= 0xEB)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xEB)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t sub_1C08271C8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 40) <= 0x14u)
    return *(unsigned __int8 *)(a1 + 40);
  else
    return (*(_DWORD *)a1 + 21);
}

uint64_t sub_1C08271E0(uint64_t result, unsigned int a2)
{
  if (a2 >= 0x15)
  {
    *(_QWORD *)result = a2 - 21;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    LOBYTE(a2) = 21;
  }
  *(_BYTE *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Behavior()
{
  return &type metadata for Behavior;
}

unint64_t sub_1C0827218()
{
  unint64_t result;

  result = qword_1ED760050;
  if (!qword_1ED760050)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107B4A4, &type metadata for Behavior);
    atomic_store(result, (unint64_t *)&qword_1ED760050);
  }
  return result;
}

double sub_1C0827254@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  double result;
  __int128 v8;
  _OWORD v9[2];
  uint64_t v10;
  char v11;
  _BYTE v12[48];

  v3 = a1 + *(int *)(sub_1C07ACF80(&qword_1ED744A38) + 48);
  v4 = a2 + *(int *)(sub_1C07ACF80(&qword_1ED744A70) + 48);
  sub_1C08273C8(v3, (uint64_t)v12, &qword_1ED758C90);
  sub_1C090B2B8(a2, (uint64_t)v12, (uint64_t)v9);
  v5 = v10;
  v6 = v11;
  result = *(double *)v9;
  v8 = v9[1];
  *(_OWORD *)v4 = v9[0];
  *(_OWORD *)(v4 + 16) = v8;
  *(_QWORD *)(v4 + 32) = v5;
  *(_BYTE *)(v4 + 40) = v6;
  return result;
}

uint64_t sub_1C08272EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6 != -1)
    return sub_1C0826EB0(a1, a2, a3, a4, a5, a6);
  return a1;
}

void sub_1C0827300(unint64_t *a1, uint64_t a2)
{
  uint64_t v4;

  if (!*a1)
  {
    v4 = sub_1C106D6CC();
    atomic_store(MEMORY[0x1C3BA8174](a2, v4), a1);
  }
  sub_1C0778534();
}

uint64_t sub_1C082733C(uint64_t a1)
{
  sub_1C0826F50(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  return a1;
}

uint64_t sub_1C0827370()
{
  return swift_release();
}

unint64_t sub_1C0827378()
{
  unint64_t result;

  result = qword_1EF631A80;
  if (!qword_1EF631A80)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107B5D0, &type metadata for BehaviorContextError);
    atomic_store(result, (unint64_t *)&qword_1EF631A80);
  }
  return result;
}

uint64_t sub_1C08273B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6 != -1)
    return sub_1C0826F50(a1, a2, a3, a4, a5, a6);
  return a1;
}

void sub_1C08273C8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_1C07ACF80(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  sub_1C0778534();
}

uint64_t storeEnumTagSinglePayload for BehaviorContextError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1C0827454 + 4 * byte_1C107B3EB[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1C0827488 + 4 * byte_1C107B3E6[v4]))();
}

uint64_t sub_1C0827488(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0827490(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0827498);
  return result;
}

uint64_t sub_1C08274A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C08274ACLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1C08274B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C08274B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BehaviorContextError()
{
  return &type metadata for BehaviorContextError;
}

unint64_t sub_1C08274D8()
{
  unint64_t result;

  result = qword_1EF631A88;
  if (!qword_1EF631A88)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107B5A8, &type metadata for BehaviorContextError);
    atomic_store(result, (unint64_t *)&qword_1EF631A88);
  }
  return result;
}

void sub_1C0827514()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  sub_1C079FCD8();
  if (v1)
  {
    if (qword_1ED760048 != -1)
      swift_once();
    v4 = sub_1C077585C();
    sub_1C079E000(v4, (uint64_t)qword_1ED78D800);
    sub_1C077C14C();
    sub_1C077CF64();
    sub_1C077C14C();
    sub_1C077CF64();
    v5 = sub_1C106F538();
    v6 = sub_1C1070390();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = sub_1C0775854();
      v8 = (_QWORD *)sub_1C0775854();
      v10 = sub_1C0775854();
      *(_DWORD *)v7 = 136315394;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C0788DAC(v3, v2, &v10);
      sub_1C10705AC();
      sub_1C07878F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v7 + 12) = 2112;
      sub_1C077CF64();
      v9 = sub_1C079CBDC();
      sub_1C10705AC();
      *v8 = v9;
      sub_1C077E6C8();
      sub_1C077E6C8();
      sub_1C079B420(&dword_1C0771000, v5, v6, "BehaviorCountLimiter: Unable to retrieve count for %s: %@");
      sub_1C07ACF80(&qword_1ED7614A0);
      sub_1C0778610();
      sub_1C0776778();
    }
    sub_1C077E6C8();
    sub_1C07878F0();
    sub_1C077E6C8();
    sub_1C077E6C8();

  }
  sub_1C0781AD8();
}

void sub_1C082771C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  NSObject *oslog;
  uint64_t v10;
  uint64_t v11;

  v3 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  sub_1C07936FC();
  if (v1)
  {
    if (qword_1ED760048 != -1)
      swift_once();
    v4 = sub_1C077585C();
    sub_1C079E000(v4, (uint64_t)qword_1ED78D800);
    sub_1C077E884();
    sub_1C077CF64();
    sub_1C077E884();
    sub_1C077CF64();
    oslog = sub_1C106F538();
    v5 = sub_1C1070390();
    if (os_log_type_enabled(oslog, v5))
    {
      v6 = sub_1C0775854();
      v7 = (_QWORD *)sub_1C0775854();
      v11 = sub_1C0775854();
      *(_DWORD *)v6 = 136315394;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C0788DAC(v3, v2, &v11);
      sub_1C10705AC();
      sub_1C07878F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v6 + 12) = 2112;
      sub_1C077CF64();
      v10 = sub_1C079CBDC();
      sub_1C10705AC();
      *v7 = v10;
      sub_1C077E6C8();
      sub_1C077E6C8();
      sub_1C079B420(&dword_1C0771000, oslog, v5, "BehaviorCountLimiter: Unable to write count for %s: %@");
      sub_1C07ACF80(&qword_1ED7614A0);
      sub_1C0778610();
      sub_1C0776778();
    }
    sub_1C077E6C8();
    sub_1C07878F0();
    sub_1C077E6C8();
    sub_1C077E6C8();
    sub_1C0781AD8();

  }
  else
  {
    sub_1C0781AD8();
  }
}

uint64_t sub_1C082792C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = v4;
  v11 = type metadata accessor for Configuration();
  MEMORY[0x1E0C80A78](v11);
  sub_1C0778564();
  v14 = v13 - v12;
  *(_BYTE *)(v6 + 48) = 0;
  sub_1C078E3E0(a1, v13 - v12);
  type metadata accessor for KeyValueStore();
  sub_1C077B5BC();
  v15 = KeyValueStore.init(config:domain:)(v14, 0xD000000000000014, 0x80000001C107B620);
  if (v5)
  {
    swift_bridgeObjectRelease();
    sub_1C078793C();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v16 = v15;
    sub_1C078793C();
    *(_QWORD *)(v6 + 32) = a3;
    *(_QWORD *)(v6 + 40) = v16;
    *(_QWORD *)(v6 + 16) = a4;
    *(_QWORD *)(v6 + 24) = a2;
  }
  return v6;
}

uint64_t sub_1C0827A34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t result;

  if ((*(_BYTE *)(v0 + 48) & 1) != 0 || (sub_1C0827514(), v1 >= *(_QWORD *)(v0 + 16)))
  {
    result = 1;
    *(_BYTE *)(v0 + 48) = 1;
  }
  else
  {
    sub_1C0827514();
    v3 = __OFADD__(v2, 1);
    result = v2 + 1;
    if (v3)
    {
      __break(1u);
    }
    else
    {
      sub_1C082771C();
      return 0;
    }
  }
  return result;
}

BOOL sub_1C0827A80()
{
  uint64_t v0;

  return KeyValueStore.delete(key:)(*(Swift::String *)(v0 + 24));
}

uint64_t sub_1C0827AA8()
{
  sub_1C0817DB4();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BehaviorCountLimiter()
{
  return objc_opt_self();
}

uint64_t sub_1C0827AE8()
{
  return sub_1C0827A34() & 1;
}

BOOL sub_1C0827B0C()
{
  return sub_1C0827A80();
}

void sub_1C0827B2C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12[2];

  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore24BehaviorTypeCountLimiter_uuid);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore24BehaviorTypeCountLimiter_uuid + 8);
  sub_1C079FCD8();
  if (v1)
  {
    if (qword_1ED760048 != -1)
      swift_once();
    v4 = sub_1C077585C();
    sub_1C079E000(v4, (uint64_t)qword_1ED78D800);
    swift_retain_n();
    sub_1C077CF64();
    sub_1C077C14C();
    sub_1C077CF64();
    v5 = sub_1C106F538();
    v6 = sub_1C1070390();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = sub_1C0775854();
      v11 = (_QWORD *)sub_1C0775854();
      v12[0] = sub_1C0775854();
      *(_DWORD *)v7 = 136315650;
      sub_1C0780478();
      sub_1C0828544((unint64_t *)&qword_1ED744A68, MEMORY[0x1E0D3C168]);
      v8 = sub_1C1070C0C();
      sub_1C0788DAC(v8, v9, v12);
      sub_1C079A7DC();
      sub_1C10705AC();
      sub_1C07878F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v7 + 12) = 2080;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C0788DAC(v3, v2, v12);
      sub_1C07ADABC();
      sub_1C10705AC();
      sub_1C07878F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v7 + 22) = 2112;
      sub_1C077CF64();
      v10 = sub_1C079CBDC();
      sub_1C07ADABC();
      sub_1C10705AC();
      *v11 = v10;
      sub_1C077E6C8();
      sub_1C077E6C8();
      _os_log_impl(&dword_1C0771000, v5, v6, "BehaviorTypeCountLimiter: Unable to retrieve count for %s and %s: %@", (uint8_t *)v7, 0x20u);
      sub_1C07ACF80(&qword_1ED7614A0);
      sub_1C0778610();
      sub_1C0776778();
    }
    sub_1C077E6C8();
    swift_release_n();
    sub_1C077E6C8();
    sub_1C077E6C8();

  }
  sub_1C0790E04();
}

void sub_1C0827DBC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  NSObject *oslog;
  uint64_t v13[2];

  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore24BehaviorTypeCountLimiter_uuid);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore24BehaviorTypeCountLimiter_uuid + 8);
  sub_1C07936FC();
  if (v1)
  {
    if (qword_1ED760048 != -1)
      swift_once();
    v4 = sub_1C077585C();
    sub_1C079E000(v4, (uint64_t)qword_1ED78D800);
    swift_retain_n();
    sub_1C077CF64();
    sub_1C077E884();
    sub_1C077CF64();
    oslog = sub_1C106F538();
    v5 = sub_1C1070390();
    if (os_log_type_enabled(oslog, v5))
    {
      v6 = sub_1C0775854();
      v7 = (_QWORD *)sub_1C0775854();
      v13[0] = sub_1C0775854();
      *(_DWORD *)v6 = 136315650;
      sub_1C0780478();
      sub_1C0828544((unint64_t *)&qword_1ED744A68, MEMORY[0x1E0D3C168]);
      v8 = sub_1C1070C0C();
      sub_1C0788DAC(v8, v9, v13);
      sub_1C079A7DC();
      sub_1C10705AC();
      sub_1C07878F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v6 + 12) = 2080;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C0788DAC(v3, v2, v13);
      sub_1C07ADABC();
      sub_1C10705AC();
      sub_1C07878F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v6 + 22) = 2112;
      sub_1C077CF64();
      v10 = sub_1C079CBDC();
      sub_1C07ADABC();
      sub_1C10705AC();
      *v7 = v10;
      sub_1C077E6C8();
      sub_1C077E6C8();
      _os_log_impl(&dword_1C0771000, oslog, v5, "BehaviorTypeCountLimiter: Unable to write count for %s and %s: %@", (uint8_t *)v6, 0x20u);
      sub_1C07ACF80(&qword_1ED7614A0);
      sub_1C0778610();
      sub_1C0776778();
    }
    sub_1C077E6C8();
    swift_release_n();
    sub_1C077E6C8();
    sub_1C077E6C8();
    sub_1C0790E04();

  }
  else
  {
    sub_1C0790E04();
  }
}

uint64_t sub_1C0828050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  v10 = type metadata accessor for Configuration();
  MEMORY[0x1E0C80A78](v10);
  sub_1C0778564();
  v13 = v12 - v11;
  *(_BYTE *)(v5 + OBJC_IVAR____TtC24IntelligencePlatformCore24BehaviorTypeCountLimiter_reachedMaximum) = 0;
  sub_1C078E3E0(a1, v12 - v11);
  sub_1C1070774();
  swift_bridgeObjectRelease();
  sub_1C106D678();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  type metadata accessor for KeyValueStore();
  sub_1C077B5BC();
  v14 = KeyValueStore.init(config:domain:)(v13, 0xD000000000000019, 0x80000001C10E44B0);
  if (v6)
  {
    swift_bridgeObjectRelease();
    v15 = sub_1C106D6CC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(a4, v15);
    sub_1C078793C();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v16 = v14;
    sub_1C078793C();
    *(_QWORD *)(v5 + OBJC_IVAR____TtC24IntelligencePlatformCore24BehaviorTypeCountLimiter_kvStore) = v16;
    v17 = (_QWORD *)(v5 + OBJC_IVAR____TtC24IntelligencePlatformCore24BehaviorTypeCountLimiter_uuid);
    *v17 = a2;
    v17[1] = a3;
    v18 = v5 + OBJC_IVAR____TtC24IntelligencePlatformCore24BehaviorTypeCountLimiter_type;
    v19 = sub_1C106D6CC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18, a4, v19);
    *(_QWORD *)(v5 + OBJC_IVAR____TtC24IntelligencePlatformCore24BehaviorTypeCountLimiter_maximumBehaviors) = a5;
  }
  return v5;
}

uint64_t sub_1C082822C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[48];

  v2 = v1;
  v4 = sub_1C0780478();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1C0778564();
  v8 = v7 - v6;
  v9 = sub_1C07DFF44(a1 + 16, (uint64_t)v24);
  sub_1C0824E00(v9, v10, v11, v12, v13, v14, v15, v16);
  sub_1C0828544((unint64_t *)&qword_1ED744A60, MEMORY[0x1E0D3C158]);
  sub_1C0794D24();
  sub_1C0794D24();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
  if (v23 != v22)
    return 0;
  v17 = OBJC_IVAR____TtC24IntelligencePlatformCore24BehaviorTypeCountLimiter_reachedMaximum;
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC24IntelligencePlatformCore24BehaviorTypeCountLimiter_reachedMaximum) & 1) != 0
    || (sub_1C0827B2C(),
        v18 >= *(_QWORD *)(v2 + OBJC_IVAR____TtC24IntelligencePlatformCore24BehaviorTypeCountLimiter_maximumBehaviors)))
  {
    result = 1;
    *(_BYTE *)(v2 + v17) = 1;
  }
  else
  {
    sub_1C0827B2C();
    v20 = __OFADD__(v19, 1);
    result = v19 + 1;
    if (!v20)
    {
      sub_1C0827DBC();
      return 0;
    }
    __break(1u);
  }
  return result;
}

BOOL sub_1C0828360()
{
  uint64_t v0;

  return KeyValueStore.delete(key:)(*(Swift::String *)(v0
                                                     + OBJC_IVAR____TtC24IntelligencePlatformCore24BehaviorTypeCountLimiter_uuid));
}

uint64_t sub_1C082839C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC24IntelligencePlatformCore24BehaviorTypeCountLimiter_type;
  v2 = sub_1C0780478();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_1C0828400()
{
  sub_1C082839C();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0828424()
{
  return type metadata accessor for BehaviorTypeCountLimiter();
}

uint64_t type metadata accessor for BehaviorTypeCountLimiter()
{
  uint64_t result;

  result = qword_1EF631B98;
  if (!qword_1EF631B98)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C0828464()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C106D6CC();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1C0828500(uint64_t a1)
{
  return sub_1C082822C(a1) & 1;
}

BOOL sub_1C0828524()
{
  return sub_1C0828360();
}

uint64_t sub_1C0828544(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1C106D6CC();
    result = MEMORY[0x1C3BA8174](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0828584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a3 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    sub_1C1070834();
    v7 = a3 + 56;
    while (1)
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C07767C4();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C07BCD6C();
      sub_1C07758E8();
      sub_1C077E584();
      sub_1C07785A0();
      sub_1C0775894();
      if (v3)
        break;
      v7 += 64;
      sub_1C1070810();
      sub_1C077AF70();
      sub_1C0781000();
      sub_1C107081C();
      if (!--v4)
        return v8;
    }
    return swift_release();
  }
  return result;
}

void sub_1C08286A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1C077AE5C();
  v3 = v2;
  type metadata accessor for TranslatedEntityTriple(0);
  sub_1C0780480();
  MEMORY[0x1E0C80A78](v4);
  sub_1C0796FB4();
  if (v1)
  {
    sub_1C07985FC();
    sub_1C09D317C();
    v5 = type metadata accessor for EntityTriple(0);
    sub_1C079C2D8(v5);
    while (1)
    {
      sub_1C07A3740();
      if (v0)
        break;
      sub_1C079A7F4();
      if (v6)
      {
        sub_1C07ADACC();
        sub_1C09D317C();
      }
      v7 = sub_1C0797BE0();
      sub_1C0806854(v7, v8, type metadata accessor for TranslatedEntityTriple);
      v3 += v9;
      if (!--v1)
        goto LABEL_9;
    }
    sub_1C0778680();
  }
LABEL_9:
  sub_1C078210C();
  sub_1C07757D0();
}

uint64_t sub_1C082877C(uint64_t a1, double (*a2)(double))
{
  uint64_t v2;
  uint64_t v3;
  double *v6;
  double v7;
  unint64_t v8;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v10 = MEMORY[0x1E0DEE9D8];
    sub_1C09D324C();
    v3 = v10;
    v6 = (double *)(a1 + 32);
    do
    {
      v7 = a2(*v6);
      v8 = *(_QWORD *)(v10 + 16);
      if (v8 >= *(_QWORD *)(v10 + 24) >> 1)
        sub_1C09D324C();
      *(_QWORD *)(v10 + 16) = v8 + 1;
      *(double *)(v10 + 8 * v8 + 32) = v7;
      ++v6;
      --v2;
    }
    while (v2);
  }
  return v3;
}

void sub_1C082886C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  int v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    sub_1C09D30E0();
    v3 = sub_1C0945CB4(a1);
    if ((v3 & 0x8000000000000000) == 0)
    {
      v5 = v3;
      if (v3 < 1 << *(_BYTE *)(a1 + 32))
      {
        v6 = a1 + 64;
        while ((*(_QWORD *)(v6 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
        {
          if (v4 != *(_DWORD *)(a1 + 36))
            goto LABEL_18;
          v10 = v1;
          v11 = v4;
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          sub_1C106FC94();
          swift_bridgeObjectRelease();
          v7 = *(_QWORD *)(v12 + 16);
          if (v7 >= *(_QWORD *)(v12 + 24) >> 1)
            sub_1C09D30E0();
          *(_QWORD *)(v12 + 16) = v7 + 1;
          v8 = v12 + 16 * v7;
          *(_QWORD *)(v8 + 32) = 58;
          *(_QWORD *)(v8 + 40) = 0xE100000000000000;
          if ((uint64_t)v5 >= -(-1 << *(_BYTE *)(a1 + 32)))
            goto LABEL_19;
          v6 = a1 + 64;
          if ((*(_QWORD *)(a1 + 64 + 8 * (v5 >> 6)) & (1 << v5)) == 0)
            goto LABEL_20;
          if (v11 != *(_DWORD *)(a1 + 36))
            goto LABEL_21;
          v9 = sub_1C1070678();
          v1 = v10 - 1;
          if (v10 == 1)
            return;
          v5 = v9;
          if ((v9 & 0x8000000000000000) == 0)
          {
            v4 = *(_DWORD *)(a1 + 36);
            if (v9 < 1 << *(_BYTE *)(a1 + 32))
              continue;
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
      }
    }
LABEL_22:
    __break(1u);
  }
}

uint64_t sub_1C0828A58(void (*a1)(__int128 *__return_ptr, _QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v31[2];
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  uint64_t v36;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = MEMORY[0x1E0DEE9D8];
  if (!v5)
    return v6;
  v7 = a3;
  v36 = MEMORY[0x1E0DEE9D8];
  sub_1C09D3350();
  v6 = v36;
  result = sub_1C0F2239C(v7);
  v9 = result;
  v11 = v10;
  v13 = v12 & 1;
  v27 = v7;
  v28 = v7 + 56;
  while ((v9 & 0x8000000000000000) == 0 && v9 < 1 << *(_BYTE *)(v7 + 32))
  {
    if (((*(_QWORD *)(v28 + (((unint64_t)v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
      goto LABEL_15;
    if (*(_DWORD *)(v7 + 36) != (_DWORD)v11)
      goto LABEL_16;
    v14 = v6;
    v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v9);
    v16 = v15[1];
    v31[0] = *v15;
    v31[1] = v16;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v6 = a2;
    a1(&v32, v31);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return v6;
    }
    swift_bridgeObjectRelease();
    v17 = v32;
    v18 = v33;
    v19 = v34;
    v20 = v35;
    v6 = v14;
    v36 = v14;
    v21 = *(_QWORD *)(v14 + 16);
    if (v21 >= *(_QWORD *)(v6 + 24) >> 1)
    {
      v25 = v33;
      v26 = v32;
      sub_1C09D3350();
      v18 = v25;
      v17 = v26;
      v6 = v36;
    }
    *(_QWORD *)(v6 + 16) = v21 + 1;
    v22 = v6 + 48 * v21;
    *(_OWORD *)(v22 + 32) = v17;
    *(_OWORD *)(v22 + 48) = v18;
    *(_QWORD *)(v22 + 64) = v19;
    *(_BYTE *)(v22 + 72) = v20;
    v7 = v27;
    result = sub_1C0F22500(v9, v11, v13 & 1, v27);
    v9 = result;
    v11 = v23;
    v13 = v24 & 1;
    --v5;
    v4 = 0;
    if (!v5)
    {
      sub_1C0834E68(result, v23, v24 & 1);
      return v6;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

void sub_1C0828C40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;

  sub_1C077AE5C();
  v2 = v1;
  v15 = v3;
  v16 = v4;
  v5 = type metadata accessor for FeatureValue(0);
  v14 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)v2 >> 62)
    goto LABEL_18;
  v8 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v8)
    {
LABEL_16:
      sub_1C078210C();
      sub_1C07757D0();
      return;
    }
    v18 = MEMORY[0x1E0DEE9D8];
    sub_1C09D36B8();
    if (v8 < 0)
      break;
    v9 = 0;
    v13 = v2 & 0xC000000000000001;
    while (v8 != v9)
    {
      if (v13)
        v10 = (id)MEMORY[0x1C3BA70DC](v9, v2);
      else
        v10 = *(id *)(v2 + 8 * v9 + 32);
      v11 = v10;
      v17 = v10;
      sub_1C07A3740();
      if (v0)
      {
        swift_release();

        goto LABEL_16;
      }

      v12 = *(_QWORD *)(v18 + 16);
      if (v12 >= *(_QWORD *)(v18 + 24) >> 1)
        sub_1C09D36B8();
      ++v9;
      *(_QWORD *)(v18 + 16) = v12 + 1;
      sub_1C0806854((uint64_t)v7, v18+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72) * v12, type metadata accessor for FeatureValue);
      if (v8 == v9)
        goto LABEL_16;
    }
    __break(1u);
LABEL_18:
    if (v2 < 0)
      v0 = v2;
    else
      v0 = v2 & 0xFFFFFFFFFFFFFF8;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v8 = sub_1C10709B4();
    swift_bridgeObjectRelease();
  }
  __break(1u);
}

void sub_1C0828E00()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;

  sub_1C077AE5C();
  v3 = v2;
  v4 = (unsigned __int16)v2;
  v5 = HIWORD(v2);
  v6 = sub_1C077AE98();
  MEMORY[0x1E0C80A78](v6);
  sub_1C077864C();
  v13 = v4;
  v7 = v5 - (unsigned __int16)v3;
  if (v5 < (unsigned __int16)v3)
    v8 = -(uint64_t)(v4 - HIWORD(v3));
  else
    v8 = v5 - (unsigned __int16)v3;
  if (v8)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    sub_1C079DAFC();
    if ((v8 & 0x8000000000000000) == 0)
    {
      while (v8)
      {
        sub_1C07A3740();
        if (v0)
        {
          sub_1C07814FC();
          goto LABEL_15;
        }
        v9 = *(_QWORD *)(v14 + 16);
        if (v9 >= *(_QWORD *)(v14 + 24) >> 1)
          sub_1C09D337C();
        *(_QWORD *)(v14 + 16) = v9 + 1;
        sub_1C0784E24();
        (*(void (**)(unint64_t, uint64_t))(v12 + 32))(v10 + v11 * v9, v1);
        if (v5 < v13)
          goto LABEL_17;
        if (v4 >= v5)
          goto LABEL_18;
        ++v4;
        --v8;
        if (!--v7)
          goto LABEL_15;
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    sub_1C078210C();
    sub_1C07757D0();
  }
}

void sub_1C0828F50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t *);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t *);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21[5];
  char v22;
  uint64_t v23;

  sub_1C077AE5C();
  v2 = v1;
  v17 = v3;
  v4 = type metadata accessor for TimeBasedBehaviorSample();
  MEMORY[0x1E0C80A78](v4);
  sub_1C0778564();
  v18 = v6 - v5;
  v7 = *(_QWORD *)(v2 + 16);
  if (v7)
  {
    v20 = v0;
    v23 = MEMORY[0x1E0DEE9D8];
    sub_1C07906C4();
    sub_1C09D395C();
    v8 = v2 + 40;
    while (1)
    {
      v19 = v7;
      v9 = *(_QWORD *)v8;
      v10 = *(_QWORD *)(v8 + 8);
      v11 = *(_QWORD *)(v8 + 16);
      v12 = *(_QWORD *)(v8 + 24);
      v13 = *(_BYTE *)(v8 + 32);
      v21[0] = *(_QWORD *)(v8 - 8);
      v21[1] = v9;
      v21[2] = v10;
      v21[3] = v11;
      v21[4] = v12;
      v22 = v13;
      sub_1C0826EB0(v21[0], v9, v10, v11, v12, v13);
      v17(v21);
      if (v20)
        break;
      v20 = 0;
      sub_1C07B3F90();
      v14 = *(_QWORD *)(v23 + 16);
      if (v14 >= *(_QWORD *)(v23 + 24) >> 1)
        sub_1C09D395C();
      v8 += 48;
      *(_QWORD *)(v23 + 16) = v14 + 1;
      sub_1C0784E24();
      sub_1C0806854(v18, v15 + v16 * v14, (uint64_t (*)(_QWORD))type metadata accessor for TimeBasedBehaviorSample);
      v7 = v19 - 1;
      if (v19 == 1)
        goto LABEL_9;
    }
    sub_1C07B3F90();
    sub_1C07814FC();
  }
LABEL_9:
  sub_1C07757D0();
}

void sub_1C08290CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  sub_1C077AE5C();
  sub_1C07B88D0(v3, v4);
  sub_1C106E800();
  sub_1C0780480();
  MEMORY[0x1E0C80A78](v5);
  sub_1C07AACDC();
  if (v1)
  {
    sub_1C07A9D44();
    sub_1C09D3E60();
    v6 = v2 + 40;
    while (1)
    {
      sub_1C078D3D0(*(_QWORD *)(v6 - 8));
      sub_1C07A3740();
      if (v0)
        break;
      sub_1C077E584();
      sub_1C07B7A4C();
      if (v7)
      {
        sub_1C07ADACC();
        sub_1C09D3E60();
      }
      v6 += 16;
      sub_1C079E23C();
      if (!--v1)
        goto LABEL_9;
    }
    sub_1C07814FC();
    sub_1C077E584();
  }
LABEL_9:
  sub_1C078210C();
  sub_1C07757D0();
}

void sub_1C0829194()
{
  uint64_t v0;
  void (*v1)(_QWORD *__return_ptr, _BYTE *, uint64_t *);
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  void (*v6)(_QWORD *__return_ptr, _BYTE *, uint64_t *);
  char *v7;
  int64_t i;
  unint64_t v9;
  unint64_t v10;
  _BYTE v11[152];
  uint64_t v12;
  _BYTE v13[152];
  _QWORD v14[19];
  _BYTE v15[160];
  uint64_t v16;

  sub_1C077AE5C();
  v3 = v0;
  v4 = *(_QWORD *)(v2 + 16);
  if (v4)
  {
    v5 = v2;
    v6 = v1;
    v16 = MEMORY[0x1E0DEE9D8];
    sub_1C09D3E94(0, v4, 0);
    v7 = (char *)(v5 + 32);
    for (i = v4 - 1; ; --i)
    {
      sub_1C079CBE4(v15, v7);
      sub_1C079CBE4(v13, v7);
      sub_1C083514C((uint64_t)v15);
      v6(v14, v13, &v12);
      if (v3)
        break;
      v3 = 0;
      sub_1C08351C0((uint64_t)v15);
      sub_1C079CBE4(v11, v14);
      v10 = *(_QWORD *)(v16 + 16);
      v9 = *(_QWORD *)(v16 + 24);
      if (v10 >= v9 >> 1)
        sub_1C09D3E94(v9 > 1, v10 + 1, 1);
      *(_QWORD *)(v16 + 16) = v10 + 1;
      sub_1C079CBE4((void *)(v16 + 152 * v10 + 32), v11);
      if (!i)
        goto LABEL_9;
      v7 += 152;
    }
    sub_1C08351C0((uint64_t)v15);
    swift_release();
  }
LABEL_9:
  sub_1C07757D0();
}

void sub_1C08292C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  sub_1C077AE5C();
  v5 = sub_1C07B88D0(v3, v4);
  type metadata accessor for EntityTriple(v5);
  sub_1C0778688();
  MEMORY[0x1E0C80A78](v6);
  sub_1C07A22D0();
  if (v1)
  {
    sub_1C07985FC();
    sub_1C09D3F18();
    v7 = v2 + 40;
    while (1)
    {
      sub_1C078D3D0(*(_QWORD *)(v7 - 8));
      sub_1C07A3740();
      if (v0)
        break;
      sub_1C077E584();
      sub_1C079A7F4();
      if (v8)
      {
        sub_1C07ADACC();
        sub_1C09D3F18();
      }
      v7 += 16;
      v9 = sub_1C078F194();
      sub_1C0806854(v9, v10, type metadata accessor for EntityTriple);
      if (!--v1)
        goto LABEL_9;
    }
    sub_1C0778680();
    sub_1C077E584();
  }
LABEL_9:
  sub_1C078210C();
  sub_1C07757D0();
}

void sub_1C0829398()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1C077AE5C();
  sub_1C0780A34(v4, v5);
  v10 = sub_1C077AE98();
  v6 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  sub_1C077864C();
  v7 = v2 - v0;
  if (__OFSUB__(v2, v0))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (!v7)
  {
LABEL_14:
    sub_1C078210C();
    sub_1C07757D0();
    return;
  }
  v11 = MEMORY[0x1E0DEE9D8];
  sub_1C079DAFC();
  if ((v7 & 0x8000000000000000) == 0)
  {
    v8 = v0;
    while (v2 != v8)
    {
      sub_1C07A3740();
      if (v1)
      {
        swift_release();
        goto LABEL_14;
      }
      v9 = *(_QWORD *)(v11 + 16);
      if (v9 >= *(_QWORD *)(v11 + 24) >> 1)
        sub_1C09D337C();
      *(_QWORD *)(v11 + 16) = v9 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 32))(v11+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v9, v3, v10);
      if (v2 < v0)
        goto LABEL_16;
      if (v8 >= v2)
        goto LABEL_17;
      if (v2 == ++v8)
        goto LABEL_14;
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
LABEL_19:
  __break(1u);
}

uint64_t sub_1C08294E0(void (*a1)(__int128 *__return_ptr, uint64_t *, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v6;
  int64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  char v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34[5];
  char v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  char v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v3 = *(_QWORD *)(a3 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v45 = MEMORY[0x1E0DEE9D8];
    v6 = sub_1C07906C4();
    sub_1C09D4178(v6, v7, v8);
    result = v45;
    v9 = a3 + 48;
    while (1)
    {
      v29 = v3;
      v30 = result;
      v10 = *(_QWORD *)(v9 - 8);
      v11 = *(_QWORD *)v9;
      v12 = *(_QWORD *)(v9 + 8);
      v13 = *(_QWORD *)(v9 + 16);
      v14 = *(_BYTE *)(v9 + 24);
      v15 = *(_QWORD *)(v9 + 48);
      v34[0] = *(_QWORD *)(v9 - 16);
      v34[1] = v10;
      v34[2] = v11;
      v34[3] = v12;
      v34[4] = v13;
      v35 = v14;
      v36 = *(_OWORD *)(v9 + 32);
      v37 = v15;
      sub_1C0826EB0(v34[0], v10, v11, v12, v13, v14);
      sub_1C07767C4();
      a1(&v38, v34, &v33);
      if (v32)
        break;
      v32 = 0;
      sub_1C07A7CF0();
      sub_1C0775894();
      v16 = v38;
      v17 = v39;
      v18 = v40;
      v19 = v41;
      v20 = v42;
      v21 = v43;
      v22 = v44;
      result = v30;
      v45 = v30;
      v24 = *(_QWORD *)(v30 + 16);
      v23 = *(_QWORD *)(v30 + 24);
      if (v24 >= v23 >> 1)
      {
        v31 = v38;
        v26 = v42;
        v27 = v39;
        sub_1C09D4178(v23 > 1, v24 + 1, 1);
        v20 = v26;
        v17 = v27;
        v16 = v31;
        result = v45;
      }
      v9 += 72;
      *(_QWORD *)(result + 16) = v24 + 1;
      v25 = result + 80 * v24;
      *(_OWORD *)(v25 + 32) = v16;
      *(_OWORD *)(v25 + 48) = v17;
      *(_QWORD *)(v25 + 64) = v18;
      *(_BYTE *)(v25 + 72) = v19;
      *(_OWORD *)(v25 + 80) = v20;
      *(_QWORD *)(v25 + 96) = v21;
      *(_QWORD *)(v25 + 104) = v22;
      v3 = v29 - 1;
      if (v29 == 1)
        return result;
    }
    sub_1C07A7CF0();
    swift_release();
    return sub_1C0775894();
  }
  return result;
}

uint64_t sub_1C082967C(void (*a1)(__int128 *__return_ptr, uint64_t *, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  __int128 v20;
  __int128 v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[5];
  char v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v3 = *(_QWORD *)(a3 + 16);
  v4 = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v33 = MEMORY[0x1E0DEE9D8];
    sub_1C09D42CC();
    v4 = v33;
    v6 = a3 + 40;
    while (1)
    {
      v23 = v3;
      v7 = *(_QWORD *)v6;
      v9 = *(_QWORD *)(v6 + 8);
      v8 = *(_QWORD *)(v6 + 16);
      v10 = *(_QWORD *)(v6 + 24);
      v11 = *(_BYTE *)(v6 + 32);
      v26[0] = *(_QWORD *)(v6 - 8);
      v26[1] = v7;
      v26[2] = v9;
      v26[3] = v8;
      v26[4] = v10;
      v27 = v11;
      sub_1C0826EB0(v26[0], v7, v9, v8, v10, v11);
      a1(&v28, v26, &v25);
      if (v24)
        break;
      v24 = 0;
      sub_1C078C7C4();
      v12 = v28;
      v13 = v29;
      v14 = v30;
      v15 = v31;
      v16 = v32;
      v33 = v4;
      v17 = *(_QWORD *)(v4 + 16);
      if (v17 >= *(_QWORD *)(v4 + 24) >> 1)
      {
        v20 = v29;
        v21 = v28;
        sub_1C09D42CC();
        v13 = v20;
        v12 = v21;
        v4 = v33;
      }
      v6 += 48;
      *(_QWORD *)(v4 + 16) = v17 + 1;
      v18 = v4 + 56 * v17;
      *(_OWORD *)(v18 + 32) = v12;
      *(_OWORD *)(v18 + 48) = v13;
      *(_QWORD *)(v18 + 64) = v14;
      *(_BYTE *)(v18 + 72) = v15;
      *(_QWORD *)(v18 + 80) = v16;
      v3 = v23 - 1;
      if (v23 == 1)
        return v4;
    }
    sub_1C078C7C4();
    sub_1C0778680();
  }
  return v4;
}

void sub_1C08297F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  sub_1C077AE5C();
  v3 = v2;
  sub_1C07ACF80(&qword_1EF630168);
  sub_1C0778688();
  MEMORY[0x1E0C80A78](v4);
  sub_1C07A22D0();
  if (v1)
  {
    sub_1C07985FC();
    sub_1C09D4334();
    v5 = v3 + 32;
    while (1)
    {
      v5 += 8;
      sub_1C07A3740();
      if (v0)
        break;
      sub_1C079A7F4();
      if (v6)
      {
        sub_1C07ADACC();
        sub_1C09D4334();
      }
      v7 = sub_1C078F194();
      sub_1C08352A4(v7, v8, &qword_1EF630168);
      if (!--v1)
        goto LABEL_9;
    }
    sub_1C0778680();
  }
LABEL_9:
  sub_1C078210C();
  sub_1C07757D0();
}

void sub_1C08298CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  sub_1C077AE5C();
  v3 = v2;
  sub_1C07ACF80(&qword_1EF630170);
  sub_1C0778688();
  MEMORY[0x1E0C80A78](v4);
  sub_1C07A22D0();
  if (v1)
  {
    sub_1C07985FC();
    sub_1C09D43D0();
    v5 = v3 + 40;
    while (1)
    {
      sub_1C078D3D0(*(_QWORD *)(v5 - 8));
      sub_1C07A3740();
      if (v0)
        break;
      sub_1C077E584();
      sub_1C079A7F4();
      if (v6)
      {
        sub_1C07ADACC();
        sub_1C09D43D0();
      }
      v5 += 16;
      v7 = sub_1C078F194();
      sub_1C08352A4(v7, v8, &qword_1EF630170);
      if (!--v1)
        goto LABEL_9;
    }
    sub_1C0778680();
    sub_1C077E584();
  }
LABEL_9:
  sub_1C078210C();
  sub_1C07757D0();
}

void sub_1C08299AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1C077AE5C();
  v3 = v2;
  sub_1C07ACF80(&qword_1EF630160);
  sub_1C0780480();
  MEMORY[0x1E0C80A78](v4);
  sub_1C0796FB4();
  if (v1)
  {
    sub_1C07985FC();
    sub_1C09D446C();
    v5 = sub_1C077AE98();
    sub_1C079C2D8(v5);
    while (1)
    {
      sub_1C07A3740();
      if (v0)
        break;
      sub_1C079A7F4();
      if (v6)
      {
        sub_1C07ADACC();
        sub_1C09D446C();
      }
      v7 = sub_1C0797BE0();
      sub_1C08352A4(v7, v8, &qword_1EF630160);
      v3 += v9;
      if (!--v1)
        goto LABEL_9;
    }
    sub_1C0778680();
  }
LABEL_9:
  sub_1C078210C();
  sub_1C07757D0();
}

void sub_1C0829A84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[24];
  uint64_t v35;
  uint64_t v36;

  sub_1C077AE5C();
  a19 = v22;
  a20 = v24;
  v25 = *(_QWORD *)(v23 + 16);
  if (v25)
  {
    v26 = v23;
    sub_1C07B8298();
    sub_1C09D4630();
    v27 = a10;
    v28 = v26 + 32;
    while (1)
    {
      swift_retain();
      sub_1C07BCD6C();
      if (v20)
        break;
      sub_1C07814FC();
      a10 = v27;
      v29 = *(_QWORD *)(v27 + 16);
      if (v29 >= *(_QWORD *)(v27 + 24) >> 1)
        sub_1C09D4630();
      v30 = v35;
      v31 = v36;
      v32 = sub_1C079D180((uint64_t)v34, v35);
      MEMORY[0x1E0C80A78](v32);
      sub_1C077864C();
      (*(void (**)(uint64_t))(v33 + 16))(v21);
      sub_1C079DF4C(v29, v21, &a10, v30, v31);
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v34);
      v27 = a10;
      v28 += 16;
      if (!--v25)
        goto LABEL_9;
    }
    sub_1C0778680();
    sub_1C07814FC();
  }
LABEL_9:
  sub_1C078210C();
  sub_1C07757D0();
}

void sub_1C0829BC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t *__return_ptr, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  void (*v31)(uint64_t *__return_ptr, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1C077AE5C();
  v2 = v1;
  v31 = v3;
  v32 = v4;
  v5 = sub_1C0780478();
  MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  v30 = (char *)&v25 - v10;
  v11 = *(_QWORD *)(v2 + 16);
  if (v11)
  {
    v33 = v0;
    v26 = v9;
    v27 = v8;
    v28 = v7;
    sub_1C1070834();
    v12 = sub_1C0F22414(v2);
    v14 = v13;
    v16 = v15 & 1;
    v29 = v2 + 56;
    v17 = v26;
    while ((v12 & 0x8000000000000000) == 0 && v12 < 1 << *(_BYTE *)(v2 + 32))
    {
      if (((*(_QWORD *)(v29 + (((unint64_t)v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
        goto LABEL_13;
      if (*(_DWORD *)(v2 + 36) != (_DWORD)v14)
        goto LABEL_14;
      v19 = v27;
      v18 = v28;
      v20 = v30;
      (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v30, *(_QWORD *)(v2 + 48) + *(_QWORD *)(v27 + 72) * v12, v28);
      (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v17, v20, v18);
      v21 = v33;
      v31(&v34, v17);
      if (v21)
      {
        sub_1C07A2F98();
        swift_release();
        goto LABEL_11;
      }
      v33 = 0;
      sub_1C07A2F98();
      sub_1C1070810();
      sub_1C077AF70();
      sub_1C107084C();
      sub_1C107081C();
      v22 = sub_1C0F22500(v12, v14, v16 & 1, v2);
      v12 = v22;
      v14 = v23;
      v16 = v24 & 1;
      if (!--v11)
      {
        sub_1C0834E68(v22, v23, v24 & 1);
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
  else
  {
LABEL_11:
    sub_1C078210C();
    sub_1C07757D0();
  }
}

uint64_t sub_1C0829DAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a3 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    sub_1C1070834();
    v7 = a3 + 40;
    while (1)
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C07BCD6C();
      sub_1C07758E8();
      if (v3)
        break;
      v7 += 16;
      sub_1C1070810();
      sub_1C1070840();
      sub_1C0781000();
      sub_1C107081C();
      if (!--v4)
        return v8;
    }
    return swift_release();
  }
  return result;
}

void sub_1C0829E94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  sub_1C0789D4C();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = v1;
    sub_1C1070834();
    v4 = sub_1C0F2239C(v3);
    v6 = v5;
    v8 = v7 & 1;
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(_BYTE *)(v3 + 32))
    {
      if (((*(_QWORD *)(v3 + 56 + (((unint64_t)v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) == 0)
        goto LABEL_13;
      if (*(_DWORD *)(v3 + 36) != (_DWORD)v6)
        goto LABEL_14;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C07A3740();
      swift_bridgeObjectRelease();
      if (v0)
      {
        swift_release();
        goto LABEL_11;
      }
      sub_1C1070810();
      sub_1C1070840();
      sub_1C107084C();
      sub_1C107081C();
      v9 = sub_1C0F22500(v4, v6, v8 & 1, v3);
      v4 = v9;
      v6 = v10;
      v8 = v11 & 1;
      if (!--v2)
      {
        sub_1C0834E68(v9, v10, v11 & 1);
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
  else
  {
LABEL_11:
    sub_1C0793708();
  }
}

void sub_1C082A000()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  sub_1C077AE5C();
  sub_1C0780A34(v4, v5);
  v6 = sub_1C07ACF80(&qword_1EF631C60);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  sub_1C077962C();
  v8 = v2 - v0;
  if (__OFSUB__(v2, v0))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (!v8)
  {
LABEL_14:
    sub_1C078210C();
    sub_1C07757D0();
    return;
  }
  v11 = MEMORY[0x1E0DEE9D8];
  sub_1C09D49FC();
  if ((v8 & 0x8000000000000000) == 0)
  {
    v9 = v0;
    while (v2 != v9)
    {
      sub_1C07A3740();
      if (v1)
      {
        swift_release();
        goto LABEL_14;
      }
      v10 = *(_QWORD *)(v11 + 16);
      if (v10 >= *(_QWORD *)(v11 + 24) >> 1)
      {
        sub_1C07ADACC();
        sub_1C09D49FC();
      }
      *(_QWORD *)(v11 + 16) = v10 + 1;
      sub_1C08352A4(v3, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v10, &qword_1EF631C60);
      if (v2 < v0)
        goto LABEL_16;
      if (v9 >= v2)
        goto LABEL_17;
      if (v2 == ++v9)
        goto LABEL_14;
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
LABEL_19:
  __break(1u);
}

void sub_1C082A150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  sub_1C077AE5C();
  v15 = v14;
  type metadata accessor for PhotosPersonObservation(0);
  sub_1C0780480();
  MEMORY[0x1E0C80A78](v16);
  sub_1C0796FB4();
  if (v13)
  {
    sub_1C07985FC();
    sub_1C09D4B9C();
    v17 = v15 + 66;
    while (1)
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C07A3740();
      if (v10)
        break;
      sub_1C07785A0();
      sub_1C077E584();
      v18 = *(_QWORD *)(a10 + 16);
      if (v18 >= *(_QWORD *)(a10 + 24) >> 1)
        sub_1C09D4B9C();
      *(_QWORD *)(a10 + 16) = v18 + 1;
      sub_1C0806854(v12, a10+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v18, type metadata accessor for PhotosPersonObservation);
      v17 += 40;
      if (!--v13)
        goto LABEL_9;
    }
    sub_1C0778680();
    sub_1C07785A0();
    sub_1C077E584();
  }
LABEL_9:
  sub_1C078210C();
  sub_1C07757D0();
}

uint64_t sub_1C082A294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    sub_1C07B8298();
    sub_1C09D3D28();
    v5 = v17;
    v7 = a3 + 40;
    while (1)
    {
      sub_1C07767C4();
      sub_1C07A3740();
      if (v3)
        break;
      sub_1C0775894();
      v8 = v14;
      v9 = v16;
      v10 = *(_QWORD *)(v17 + 16);
      if (v10 >= *(_QWORD *)(v17 + 24) >> 1)
      {
        sub_1C09D3D28();
        v9 = v16;
        v8 = v14;
      }
      v7 += 16;
      *(_QWORD *)(v17 + 16) = v10 + 1;
      v11 = (_QWORD *)(v17 + 32 * v10);
      v11[4] = v13;
      v11[5] = v8;
      v11[6] = v15;
      v11[7] = v9;
      if (!--v4)
        return v5;
    }
    sub_1C0778680();
    sub_1C0775894();
  }
  return v5;
}

void sub_1C082A3A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  sub_1C077AE5C();
  sub_1C07B88D0(v3, v4);
  sub_1C106AB28();
  sub_1C0780480();
  MEMORY[0x1E0C80A78](v5);
  sub_1C07AACDC();
  if (v1)
  {
    sub_1C07A9D44();
    sub_1C09D4DA4();
    v6 = v2 + 32;
    while (1)
    {
      sub_1C07A3740();
      if (v0)
        break;
      sub_1C07B7A4C();
      if (v7)
      {
        sub_1C07ADACC();
        sub_1C09D4DA4();
      }
      sub_1C079E23C();
      v6 += 16;
      if (!--v1)
        goto LABEL_9;
    }
    sub_1C07814FC();
  }
LABEL_9:
  sub_1C078210C();
  sub_1C07757D0();
}

#error "1C082A4E4: call analysis failed (funcsize=49)"

#error "1C082A5BC: call analysis failed (funcsize=55)"

void sub_1C082A608(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1C0861C3C();
    v2 = v3;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v4;
  sub_1C0834448(v5);
  *a1 = v2;
}

uint64_t sub_1C082A670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  unint64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  void (*v40)(void);
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v45;
  uint64_t v46;
  BOOL v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  void (*v53)(char *, uint64_t, uint64_t);
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t, uint64_t);
  char *v58;
  NSObject *v59;
  uint64_t v60;
  os_log_type_t v61;
  uint64_t v62;
  uint64_t result;
  char *v64;
  uint64_t v65;
  unint64_t v66;
  char *v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;

  v76 = a3;
  v5 = sub_1C07ACF80(&qword_1ED7449A0);
  v6 = *(_QWORD *)(v5 - 8);
  v77 = v5;
  v78 = v6;
  MEMORY[0x1E0C80A78](v5);
  v74 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v83 = (uint64_t)&v73 - v9;
  v10 = sub_1C106ADE0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v73 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v73 - v14;
  MEMORY[0x1E0C80A78](v16);
  v82 = (char *)&v73 - v17;
  v18 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v18);
  v84 = (uint64_t)&v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v73 - v21;
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v73 - v24;
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v73 - v27;
  v29 = *(_QWORD *)(a1 + 16);
  v87 = v11;
  v75 = v15;
  if (v29)
  {
    v90 = 0;
    v30 = *(_QWORD *)(a2 + 16);
    v79 = a1;
    v80 = v30;
    if (v30)
    {
      v81 = a2;
      v86 = 0;
      v31 = 0;
      v85 = MEMORY[0x1E0DEE9D8];
      while (1)
      {
        sub_1C07B2D8C((uint64_t)v28, 1, 1, v10);
        if (v31 < (uint64_t)v29)
          break;
LABEL_13:
        v35 = v84;
        sub_1C0835044((uint64_t)v28, v84, (uint64_t *)&unk_1ED762690);
        if (sub_1C07B2D80(v35, 1, v10) == 1)
        {
          sub_1C0784B94((uint64_t)v28, (uint64_t *)&unk_1ED762690);
          v36 = v35;
        }
        else
        {
          v37 = v87;
          (*(void (**)(char *, uint64_t, uint64_t))(v87 + 32))(v82, v35, v10);
          v38 = v81
              + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))
              + *(_QWORD *)(v37 + 72) * v86;
          v39 = v83 + *(int *)(v77 + 48);
          v40 = *(void (**)(void))(v37 + 16);
          v40();
          ((void (*)(uint64_t, unint64_t, uint64_t))v40)(v39, v38, v10);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C07EB8E8();
            v85 = v45;
          }
          v41 = *(_QWORD *)(v85 + 16);
          if (v41 >= *(_QWORD *)(v85 + 24) >> 1)
          {
            sub_1C07EB8E8();
            v85 = v46;
          }
          v42 = v85;
          *(_QWORD *)(v85 + 16) = v41 + 1;
          sub_1C08352A4(v83, v42+ ((*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80))+ *(_QWORD *)(v78 + 72) * v41, &qword_1ED7449A0);
          (*(void (**)(char *, uint64_t))(v87 + 8))(v82, v10);
          v36 = (uint64_t)v28;
        }
        sub_1C0784B94(v36, (uint64_t *)&unk_1ED762690);
        v43 = v86 + 1;
        v31 = v90;
        ++v86;
        if ((uint64_t)v90 >= (uint64_t)v29 || v43 >= v80)
        {
          v30 = *(_QWORD *)(v81 + 16);
          v11 = v87;
          goto LABEL_30;
        }
      }
      v32 = v79 + ((*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80));
      v33 = *(_QWORD *)(v87 + 72);
      while (v31 < v29)
      {
        sub_1C07803F8(&qword_1ED755A40, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
        if ((sub_1C106FA6C() & 1) == 0)
          goto LABEL_13;
        sub_1C0835044((uint64_t)v28, (uint64_t)v25, (uint64_t *)&unk_1ED762690);
        v34 = sub_1C07B2D80((uint64_t)v25, 1, v10);
        sub_1C0784B94((uint64_t)v25, (uint64_t *)&unk_1ED762690);
        if (v34 == 1)
        {
          if (v90 >= v29)
            goto LABEL_51;
          (*(void (**)(char *, unint64_t, uint64_t))(v87 + 16))(v22, v32 + v90 * v33, v10);
          sub_1C0784B94((uint64_t)v28, (uint64_t *)&unk_1ED762690);
          sub_1C07B2D8C((uint64_t)v22, 0, 1, v10);
          sub_1C08352A4((uint64_t)v22, (uint64_t)v28, (uint64_t *)&unk_1ED762690);
        }
        v31 = v90 + 1;
        if (__OFADD__(v90, 1))
          goto LABEL_50;
        ++v90;
        if (v31 >= (uint64_t)v29)
          goto LABEL_13;
      }
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
    v31 = 0;
  }
  else
  {
    v30 = *(_QWORD *)(a2 + 16);
    if (!v30)
      return MEMORY[0x1E0DEE9D8];
    v79 = a1;
    v31 = 0;
    v90 = 0;
  }
  v85 = MEMORY[0x1E0DEE9D8];
LABEL_30:
  v47 = v31 >= (uint64_t)v29 || v30 >= v29;
  v48 = v76;
  if (v47)
    return v85;
  if (v31 >= v29)
    goto LABEL_52;
  v49 = v79 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  v50 = *(_QWORD *)(v11 + 72);
  v51 = v49 + v50 * v31;
  sub_1C07803F8(&qword_1ED755A40, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  if ((sub_1C106FA60() & 1) != 0)
  {
    v25 = v74;
    v52 = &v74[*(int *)(v77 + 48)];
    v53 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    v53(v74, v51, v10);
    v53(v52, v48, v10);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    {
LABEL_37:
      v54 = *(_QWORD *)(v85 + 16);
      if (v54 >= *(_QWORD *)(v85 + 24) >> 1)
      {
        sub_1C07EB8E8();
        v85 = v72;
      }
      v55 = v85;
      *(_QWORD *)(v85 + 16) = v54 + 1;
      sub_1C08352A4((uint64_t)v25, v55+ ((*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80))+ *(_QWORD *)(v78 + 72) * v54, &qword_1ED7449A0);
      return v85;
    }
LABEL_53:
    sub_1C07EB8E8();
    v85 = v71;
    goto LABEL_37;
  }
  if (qword_1ED760048 != -1)
    swift_once();
  v56 = sub_1C106F544();
  sub_1C079E000(v56, (uint64_t)qword_1ED78D800);
  v57 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v58 = v75;
  v57(v75, v76, v10);
  swift_bridgeObjectRetain_n();
  v59 = sub_1C106F538();
  v60 = v11;
  v61 = sub_1C107039C();
  if (!os_log_type_enabled(v59, v61))
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v58, v10);
    goto LABEL_47;
  }
  v62 = swift_slowAlloc();
  v86 = swift_slowAlloc();
  v89 = v86;
  *(_DWORD *)v62 = 136315394;
  result = swift_beginAccess();
  if (v90 < v29)
  {
    v64 = v73;
    v57(v73, v49 + v90 * v50, v10);
    v65 = sub_1C106FB5C();
    v88 = sub_1C0788DAC(v65, v66, &v89);
    sub_1C10705AC();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v62 + 12) = 2080;
    v67 = v75;
    v57(v64, (uint64_t)v75, v10);
    v68 = sub_1C106FB5C();
    v88 = sub_1C0788DAC(v68, v69, &v89);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v87 + 8))(v67, v10);
    _os_log_impl(&dword_1C0771000, v59, v61, "BehaviorDatabaseEventTracker: finalValue is less than the start value of an interval: %s > %s", (uint8_t *)v62, 0x16u);
    v70 = v86;
    swift_arrayDestroy();
    MEMORY[0x1C3BA8270](v70, -1, -1);
    MEMORY[0x1C3BA8270](v62, -1, -1);
LABEL_47:

    return v85;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C082AEDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double v3;
  double v4;
  uint64_t result;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = 0;
    v3 = 0.0;
    do
    {
      v4 = *(double *)(a1 + 32 + 8 * v2++);
      v3 = v3 + v4;
    }
    while (v1 != v2);
    *(double *)&result = v3 / (double)v1;
  }
  else
  {
    *(double *)&result = 0.0;
  }
  return result;
}

uint64_t sub_1C082AF24(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  double v4;
  double v5;
  double v6;
  uint64_t result;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
  {
    v6 = 0.0;
    return *(_QWORD *)&v6;
  }
  v8 = a1;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C082A608(&v8);
  v2 = v1 >> 1;
  if ((v1 & 1) != 0)
  {
    if (v2 < *(_QWORD *)(v8 + 16))
    {
      v6 = *(double *)(v8 + 8 * v2 + 32);
      swift_release();
      return *(_QWORD *)&v6;
    }
    goto LABEL_12;
  }
  if (v1 < 2)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v3 = *(_QWORD *)(v8 + 16);
  if (v2 > v3)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v2 < v3)
  {
    v4 = *(double *)(v8 + 32 + 8 * (v2 - 1));
    v5 = *(double *)(v8 + 32 + 8 * v2);
    swift_release();
    v6 = (v4 + v5) * 0.5;
    return *(_QWORD *)&v6;
  }
LABEL_14:
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1C082B004(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double v3;
  double *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  v2 = 0;
  v3 = (double)v1;
  v4 = (double *)(a1 + 32);
  v5 = 0.0;
  do
  {
    v6 = v4[v2++];
    v5 = v5 + v6;
  }
  while (v1 != v2);
  if ((unint64_t)v1 < 2)
    return 0;
  v7 = 0.0;
  v8 = v5 / v3;
  do
  {
    v9 = *v4++;
    v7 = v7 + (v9 - v8) * (v9 - v8);
    --v1;
  }
  while (v1);
  return sqrt(v7 / (v3 + -1.0));
}

uint64_t sub_1C082B080(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  char v4;
  double v5;
  double *v6;
  unint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v11;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = sub_1C082AF24(a1);
  if ((v4 & 1) != 0 || v2 < 2)
    return 0;
  v5 = *(double *)&v3;
  v11 = MEMORY[0x1E0DEE9D8];
  sub_1C09D324C();
  v6 = (double *)(a1 + 32);
  v7 = *(_QWORD *)(v11 + 16);
  do
  {
    v8 = *v6;
    if (v7 >= *(_QWORD *)(v11 + 24) >> 1)
      sub_1C07957A8();
    *(_QWORD *)(v11 + 16) = v7 + 1;
    *(double *)(v11 + 8 * v7 + 32) = vabdd_f64(v8, v5);
    ++v6;
    ++v7;
    --v2;
  }
  while (v2);
  v9 = sub_1C082AF24(v11);
  sub_1C077960C();
  return v9;
}

_QWORD *sub_1C082B170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[2] = a3;
  v6[3] = a1;
  v6[4] = a2;
  v6[5] = a4;
  v6[6] = a5;
  v6[7] = a6;
  return v6;
}

uint64_t sub_1C082B184()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  sub_1C07900C4(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  return v0;
}

uint64_t sub_1C082B1B4()
{
  sub_1C082B184();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BehaviorDatabaseEventTracker()
{
  return objc_opt_self();
}

void sub_1C082B1F4(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;

  sub_1C07ACF80(&qword_1ED75EA18);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v9);
  sub_1C077864C();
  v10 = sub_1C0780478();
  sub_1C07B2D8C(v4, 1, 1, v10);
  sub_1C082B2AC(a1, a2, a3, a4, v4, 1);
  sub_1C0784B94(v4, &qword_1ED75EA18);
}

void sub_1C082B2AC(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  void *v12;

  v12 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C082D784(a5, a3, a1, a2, v6, a6);
  objc_autoreleasePoolPop(v12);
}

void sub_1C082B32C(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1C07ACF80(&qword_1ED75EA18);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v12);
  sub_1C0778564();
  v15 = v14 - v13;
  v16 = sub_1C0780478();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v15, a5, v16);
  sub_1C078AB18(v15, 0);
  sub_1C082B2AC(a1, a2, a3, a4, v15, a6);
  sub_1C0784B94(v15, &qword_1ED75EA18);
}

uint64_t sub_1C082B40C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a3;
  *(_QWORD *)(v4 + 24) = v3;
  return swift_task_switch();
}

uint64_t sub_1C082B424()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[2];
  v2 = v0[3];
  v3 = swift_allocObject();
  v0[4] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_retain();
  v4 = (_QWORD *)swift_task_alloc();
  v0[5] = v4;
  sub_1C106BAA0();
  *v4 = v0;
  v4[1] = sub_1C082B4E8;
  return sub_1C106BCEC();
}

uint64_t sub_1C082B4E8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1C082B554()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  if (!*(_QWORD *)(v0[3] + 48))
  {
    if (qword_1ED760048 != -1)
      swift_once();
    v3 = sub_1C106F544();
    sub_1C079E000(v3, (uint64_t)qword_1ED78D800);
    v4 = sub_1C106F538();
    v5 = sub_1C10703A8();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_1C0771000, v4, v5, "BehaviorDatabase+EventTracking: Skipping person interaction mechanism tracking based on configuration", v6, 2u);
      MEMORY[0x1C3BA8270](v6, -1, -1);
    }

    goto LABEL_9;
  }
  v1 = v0[6];
  sub_1C082BE6C();
  if (!v1)
  {
LABEL_9:
    v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1C082B664()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1C082B698(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51[48];
  _BYTE v52[56];

  v6 = sub_1C106D6CC();
  v45 = *(_QWORD *)(v6 - 8);
  v46 = v6;
  MEMORY[0x1E0C80A78](v6);
  v44 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C07ACF80(&qword_1ED7626C0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1C106ADE0();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = 0;
  v43 = v10;
  v47 = a1;
  if ((a3 & 1) != 0)
  {
    v19 = *(_QWORD *)(a1 + 64) + OBJC_IVAR____TtC24IntelligencePlatformCore15BehaviorContext_date;
    sub_1C07DFF44(a1 + 16, (uint64_t)v52);
    sub_1C082BB00(v19, (uint64_t)v52, (uint64_t)v13);
    if (v3)
      return;
    v48 = 0;
    if (sub_1C07B2D80((uint64_t)v13, 1, v14) == 1)
    {
      sub_1C0784B94((uint64_t)v13, (uint64_t *)&unk_1ED762690);
      v20 = 1;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
      sub_1C106ACD8();
      v18 = v42;
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      v20 = 0;
    }
  }
  else
  {
    v48 = v3;
    v20 = 1;
  }
  v49 = 0;
  v50 = 0xE000000000000000;
  sub_1C1070774();
  sub_1C106FC94();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  v21 = v48;
  sub_1C106C5C8();
  swift_bridgeObjectRelease();
  if (!v21)
  {
    sub_1C07ACF80(&qword_1ED762CB8);
    v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1C10795A0;
    strcpy((char *)(v22 + 32), "behaviorType");
    *(_BYTE *)(v22 + 45) = 0;
    *(_WORD *)(v22 + 46) = -5120;
    v23 = sub_1C07DFF44(v47 + 16, (uint64_t)v51);
    v24 = v44;
    sub_1C0824E00(v23, v25, v26, v27, v28, v29, v30, v31);
    v32 = sub_1C106D6C0();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v24, v46);
    v33 = MEMORY[0x1E0D24A00];
    *(_QWORD *)(v22 + 72) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v22 + 80) = v33;
    *(_QWORD *)(v22 + 48) = v32;
    *(_QWORD *)(v22 + 88) = 0xD000000000000012;
    *(_QWORD *)(v22 + 96) = 0x80000001C10DDA10;
    sub_1C0821B64();
    v34 = MEMORY[0x1E0D24968];
    *(_QWORD *)(v22 + 128) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v22 + 136) = v34;
    *(_QWORD *)(v22 + 104) = v35;
    *(_QWORD *)(v22 + 112) = v36;
    *(_QWORD *)(v22 + 144) = 0x6D617473656D6974;
    *(_QWORD *)(v22 + 152) = 0xE900000000000070;
    sub_1C106AC60();
    v37 = MEMORY[0x1E0DEB070];
    v38 = MEMORY[0x1E0D249D0];
    *(_QWORD *)(v22 + 184) = MEMORY[0x1E0DEB070];
    *(_QWORD *)(v22 + 192) = v38;
    *(_QWORD *)(v22 + 160) = v39;
    *(_QWORD *)(v22 + 200) = 0xD000000000000016;
    *(_QWORD *)(v22 + 208) = 0x80000001C10DDA30;
    if ((v20 & 1) != 0)
    {
      v37 = 0;
      v38 = 0;
      *(_QWORD *)(v22 + 224) = 0;
      *(_QWORD *)(v22 + 232) = 0;
      v18 = 0;
    }
    v40 = (uint64_t)v43;
    *(_QWORD *)(v22 + 216) = v18;
    *(_QWORD *)(v22 + 240) = v37;
    *(_QWORD *)(v22 + 248) = v38;
    sub_1C106C01C();
    v41 = sub_1C106C040();
    sub_1C07B2D8C(v40, 0, 1, v41);
    sub_1C106C718();
    sub_1C0784B94(v40, &qword_1ED7626C0);
    swift_release();
  }
}

void sub_1C082BB00(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[2];
  _OWORD v31[2];
  uint64_t v32;
  char v33;
  uint64_t v34;

  v30[0] = a3;
  v30[1] = a2;
  v34 = a1;
  v4 = sub_1C106D6CC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C07ACF80(&qword_1ED7626C0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v31[0] = 0;
  *((_QWORD *)&v31[0] + 1) = 0xE000000000000000;
  sub_1C1070774();
  sub_1C106FC94();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  sub_1C106C5C8();
  swift_bridgeObjectRelease();
  if (!v3)
  {
    sub_1C07ACF80(&qword_1ED762CB8);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1C1078A20;
    strcpy((char *)(v11 + 32), "behaviorType");
    *(_BYTE *)(v11 + 45) = 0;
    *(_WORD *)(v11 + 46) = -5120;
    sub_1C0824E00(v11, v12, v13, v14, v15, v16, v17, v18);
    v19 = sub_1C106D6C0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v20 = MEMORY[0x1E0D24A00];
    *(_QWORD *)(v11 + 72) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v11 + 80) = v20;
    *(_QWORD *)(v11 + 48) = v19;
    *(_QWORD *)(v11 + 88) = 0xD000000000000012;
    *(_QWORD *)(v11 + 96) = 0x80000001C10DDA10;
    sub_1C0821B64();
    v21 = MEMORY[0x1E0D24968];
    *(_QWORD *)(v11 + 128) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v11 + 136) = v21;
    *(_QWORD *)(v11 + 104) = v22;
    *(_QWORD *)(v11 + 112) = v23;
    *(_QWORD *)(v11 + 144) = 0x6D617473656D6974;
    *(_QWORD *)(v11 + 152) = 0xE900000000000070;
    sub_1C106AC60();
    v24 = MEMORY[0x1E0D249D0];
    *(_QWORD *)(v11 + 184) = MEMORY[0x1E0DEB070];
    *(_QWORD *)(v11 + 192) = v24;
    *(_QWORD *)(v11 + 160) = v25;
    sub_1C106C01C();
    v26 = sub_1C106C040();
    sub_1C07B2D8C((uint64_t)v10, 0, 1, v26);
    v32 = 0;
    memset(v31, 0, sizeof(v31));
    sub_1C106C1F0();
    sub_1C0784B94((uint64_t)v31, (uint64_t *)&unk_1ED7626A0);
    sub_1C0784B94((uint64_t)v10, &qword_1ED7626C0);
    v27 = v30[0];
    if ((v33 & 1) != 0)
    {
      swift_release();
      v28 = 1;
    }
    else
    {
      sub_1C106AC54();
      swift_release();
      v28 = 0;
    }
    v29 = sub_1C106ADE0();
    sub_1C07B2D8C(v27, v28, 1, v29);
  }
}

uint64_t sub_1C082BE6C()
{
  sub_1C106BAA0();
  return sub_1C106BCE0();
}

void sub_1C082BED0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  _QWORD v19[4];
  __int128 v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  _QWORD v36[6];
  uint64_t v37;

  v32 = a3;
  v33 = a4;
  v31 = a1;
  v7 = type metadata accessor for EntityInteractionHistogramDatabaseTable.CustomAttributesTableConfig.Property();
  v23 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v34 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v35 = (char *)v19 - v10;
  if (a2 >> 62)
    goto LABEL_9;
  v11 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  if (v11)
  {
    while (1)
    {
      v27 = a2 & 0xC000000000000001;
      v22 = a2 & 0xFFFFFFFFFFFFFF8;
      v24 = a2;
      v21 = (uint64_t *)(a2 + 32);
      v29 = v36;
      v19[0] = &v37;
      *(_QWORD *)&v12 = 136315394;
      v20 = v12;
      v19[3] = MEMORY[0x1E0DEE9B8] + 8;
      *(_QWORD *)&v12 = 136315650;
      v30 = v12;
      v19[2] = "place";
      v19[1] = "behaviorActivity";
      v25 = a5;
      v26 = v11;
      if ((a2 & 0xC000000000000001) != 0)
        break;
      if (*(_QWORD *)(v22 + 16))
      {
        v13 = *v21;
        swift_retain();
LABEL_7:
        v14 = *(unsigned __int8 *)(v13 + OBJC_IVAR____TtC24IntelligencePlatformCore16InteractionEvent_entityClass);
        v28 = 1;
        __asm { BR              X9 }
      }
      __break(1u);
LABEL_9:
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v11 = sub_1C10709B4();
      if (!v11)
        goto LABEL_10;
    }
    v13 = MEMORY[0x1C3BA70DC](0, v24);
    goto LABEL_7;
  }
LABEL_10:
  swift_bridgeObjectRelease();
  if (qword_1ED760048 != -1)
    swift_once();
  v15 = sub_1C106F544();
  sub_1C079E000(v15, (uint64_t)qword_1ED78D800);
  v16 = sub_1C106F538();
  v17 = sub_1C1070384();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v18 = 134217984;
    v36[4] = 0;
    sub_1C10705AC();
    _os_log_impl(&dword_1C0771000, v16, v17, "BehaviorDatabase+EventTracking: VirtualInteraction: Iterated through %ld events", v18, 0xCu);
    MEMORY[0x1C3BA8270](v18, -1, -1);
  }

}

void sub_1C082CCF0(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1C082CD5C(uint64_t a1, unsigned __int8 *a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C082CE10 + 4 * byte_1C107B6E7[*a2]))(0xD000000000000011);
}

uint64_t sub_1C082CE10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;

  if (a1 == 0xD000000000000011 && v2 == ((v1 - 32) | 0x8000000000000000))
    v4 = 1;
  else
    v4 = sub_1C1070CB4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_1C082CEF8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD v23[4];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  _QWORD *v27;

  v23[2] = a5;
  v23[3] = a4;
  v25 = sub_1C106C040();
  v24 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  v8 = a1[1];
  v10 = a1[2];
  v11 = a1[3];
  sub_1C07ACF80(&qword_1ED744958);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1078FC0;
  *(_QWORD *)(inited + 32) = 0xD000000000000010;
  *(_QWORD *)(inited + 40) = 0x80000001C10DDA50;
  v13 = MEMORY[0x1C3BA64D0](v9, v8, v10, v11);
  v14 = MEMORY[0x1E0D24968];
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 80) = v14;
  *(_QWORD *)(inited + 48) = v13;
  *(_QWORD *)(inited + 56) = v15;
  *(_QWORD *)(inited + 88) = 0x7463617265746E69;
  *(_QWORD *)(inited + 96) = 0xEF657461446E6F69;
  sub_1C106AC60();
  v16 = MEMORY[0x1E0D249D0];
  *(_QWORD *)(inited + 128) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(inited + 136) = v16;
  *(_QWORD *)(inited + 104) = v17;
  sub_1C07ACF80(&qword_1ED756490);
  v18 = sub_1C106F97C();
  v19 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v20 = (_QWORD *)sub_1C082D2A8(v19, v18);
  v26[0] = 0;
  v26[1] = 0xE000000000000000;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C1070774();
  swift_bridgeObjectRelease();
  strcpy((char *)v26, "INSERT INTO ");
  BYTE5(v26[1]) = 0;
  HIWORD(v26[1]) = -5120;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  v27 = v20;
  sub_1C07ACF80(&qword_1ED744728);
  sub_1C07BB218(&qword_1ED744720, &qword_1ED744728);
  sub_1C07B1280();
  sub_1C106FE38();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  sub_1C082886C((uint64_t)v20);
  v27 = v21;
  sub_1C07ACF80(&qword_1ED762B70);
  sub_1C07BB218(&qword_1ED762430, &qword_1ED762B70);
  sub_1C106FA54();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  sub_1C089BA88(v20);
  swift_bridgeObjectRelease();
  sub_1C106C04C();
  sub_1C106C694();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v25);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C082D2A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = a2;
  sub_1C0834C2C(a1, (uint64_t)sub_1C0834BF8, 0, isUniquelyReferenced_nonNull_native, &v8);
  v6 = v8;
  swift_bridgeObjectRelease();
  if (v2)
    swift_bridgeObjectRelease();
  return v6;
}

void sub_1C082D324(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;

  v4 = v3;
  if (!(a2 >> 62))
  {
    v7 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    if (v7)
      goto LABEL_3;
LABEL_10:
    swift_bridgeObjectRelease();
    return;
  }
LABEL_12:
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v7 = sub_1C10709B4();
  if (!v7)
    goto LABEL_10;
LABEL_3:
  v8 = 4;
  while (1)
  {
    if ((a2 & 0xC000000000000001) != 0)
    {
      v9 = MEMORY[0x1C3BA70DC](v8 - 4, a2);
    }
    else
    {
      v9 = *(_QWORD *)(a2 + 8 * v8);
      swift_retain();
    }
    v10 = v8 - 3;
    if (__OFADD__(v8 - 4, 1))
    {
      __break(1u);
      goto LABEL_12;
    }
    v11 = (void *)MEMORY[0x1C3BA79F4]();
    sub_1C082D444(a3, v9, a1);
    if (v4)
      break;
    v4 = 0;
    objc_autoreleasePoolPop(v11);
    swift_release();
    ++v8;
    if (v10 == v7)
      goto LABEL_10;
  }
  objc_autoreleasePoolPop(v11);
  __break(1u);
}

void sub_1C082D444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[5];
  char v27;
  uint64_t v28;

  v6 = sub_1C106ADE0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for BehaviorEvent();
  v10 = *(_QWORD *)(a2 + OBJC_IVAR____TtC24IntelligencePlatformCore16InteractionEvent_entityIdentifier + 8);
  v26[0] = *(_QWORD *)(a2 + OBJC_IVAR____TtC24IntelligencePlatformCore16InteractionEvent_entityIdentifier);
  v26[1] = v10;
  memset(&v26[2], 0, 24);
  v27 = 17;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2 + OBJC_IVAR____TtC24IntelligencePlatformCore16InteractionEvent_date, v6);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v11 = sub_1C08258CC((uint64_t)v26, (uint64_t)v9);
  sub_1C082B698(v11, a3, 1);
  if (v3)
  {
    swift_release();
    if (qword_1ED760048 != -1)
      swift_once();
    v12 = sub_1C106F544();
    sub_1C079E000(v12, (uint64_t)qword_1ED78D800);
    swift_retain();
    v13 = v3;
    swift_retain();
    v14 = v3;
    v15 = sub_1C106F538();
    v16 = sub_1C1070390();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = swift_slowAlloc();
      v24 = swift_slowAlloc();
      v28 = v24;
      *(_DWORD *)v17 = 136315394;
      swift_retain();
      v18 = sub_1C0B70BC8();
      v20 = v19;
      swift_release();
      v25 = sub_1C0788DAC(v18, v20, &v28);
      sub_1C10705AC();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2080;
      swift_getErrorValue();
      v21 = sub_1C1070D74();
      v25 = sub_1C0788DAC(v21, v22, &v28);
      sub_1C10705AC();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C0771000, v15, v16, "BehaviorDatabase+EventTracking: Skipping event %s due to error - %s", (uint8_t *)v17, 0x16u);
      v23 = v24;
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v23, -1, -1);
      MEMORY[0x1C3BA8270](v17, -1, -1);

    }
    else
    {

      swift_release_n();
    }
  }
  else
  {
    swift_release();
  }
}

void sub_1C082D784(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;

  v38 = a6;
  v36 = a3;
  v37 = a5;
  v35 = a4;
  v8 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v33 - v12;
  v14 = sub_1C07ACF80(&qword_1ED75EA18);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1C106D6CC();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0835044(a1, (uint64_t)v16, &qword_1ED75EA18);
  if (sub_1C07B2D80((uint64_t)v16, 1, v17) == 1)
  {
    sub_1C0784B94((uint64_t)v16, &qword_1ED75EA18);
    v21 = a2[3];
    v22 = a2[4];
    sub_1C07A9480(a2, v21);
    v23 = sub_1C106ADE0();
    v24 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
    v24(v13, v36, v23);
    sub_1C07B2D8C((uint64_t)v13, 0, 1, v23);
    v24(v11, v35, v23);
    sub_1C07B2D8C((uint64_t)v11, 0, 1, v23);
    v25 = sub_1C106D690();
    v26 = (void *)(*(uint64_t (**)(char *, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 32))(v13, v11, 1, v25, v21, v22);
    swift_bridgeObjectRelease();
    sub_1C0784B94((uint64_t)v11, (uint64_t *)&unk_1ED762690);
    sub_1C0784B94((uint64_t)v13, (uint64_t *)&unk_1ED762690);
  }
  else
  {
    v34 = v18;
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
    v28 = a2[3];
    v29 = a2[4];
    sub_1C07A9480(a2, v28);
    v30 = sub_1C106ADE0();
    v31 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
    v31(v13, v36, v30);
    sub_1C07B2D8C((uint64_t)v13, 0, 1, v30);
    v31(v11, v35, v30);
    sub_1C07B2D8C((uint64_t)v11, 0, 1, v30);
    v26 = (void *)(*(uint64_t (**)(char *, char *, char *, uint64_t, uint64_t))(v29 + 24))(v13, v11, v20, v28, v29);
    sub_1C0784B94((uint64_t)v11, (uint64_t *)&unk_1ED762690);
    sub_1C0784B94((uint64_t)v13, (uint64_t *)&unk_1ED762690);
    v27 = (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v20, v17);
  }
  MEMORY[0x1E0C80A78](v27);
  *(&v33 - 4) = (uint64_t)v26;
  *(&v33 - 3) = v32;
  *((_BYTE *)&v33 - 16) = v38 & 1;
  sub_1C106BAA0();
  sub_1C106BCE0();

}

void sub_1C082DB00(uint64_t a1, void *a2, uint64_t a3, char a4)
{
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  void *v16;
  void *v17;
  uint64_t v18;

  v17 = sub_1C082DC40;
  v18 = 0;
  v8 = MEMORY[0x1E0C809B0];
  v13 = MEMORY[0x1E0C809B0];
  v14 = 1107296256;
  v15 = (uint64_t (*)(uint64_t))sub_1C07BF90C;
  v16 = &unk_1E7A0D740;
  v9 = _Block_copy(&v13);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a3;
  *(_QWORD *)(v10 + 24) = a1;
  *(_BYTE *)(v10 + 32) = a4;
  v17 = sub_1C08343D0;
  v18 = v10;
  v13 = v8;
  v14 = 1107296256;
  v15 = sub_1C082E0C0;
  v16 = &unk_1E7A0D790;
  v11 = _Block_copy(&v13);
  swift_retain();
  swift_retain();
  swift_release();
  v12 = objc_msgSend(a2, sel_sinkWithCompletion_receiveInput_, v9, v11);
  _Block_release(v11);
  _Block_release(v9);

}

void sub_1C082DC40(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;

  v1 = objc_msgSend(a1, sel_error);
  if (v1)
  {
    v2 = v1;
    if (qword_1ED760048 != -1)
      swift_once();
    v3 = sub_1C106F544();
    sub_1C079E000(v3, (uint64_t)qword_1ED78D800);
    v10 = v2;
    v4 = sub_1C106F538();
    v5 = sub_1C1070390();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      v7 = swift_slowAlloc();
      v11 = v7;
      *(_DWORD *)v6 = 136315138;
      swift_getErrorValue();
      v8 = sub_1C1070D74();
      sub_1C0788DAC(v8, v9, &v11);
      sub_1C10705AC();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C0771000, v4, v5, "BehaviorDatabase+EventTracking: Biome sink completed with error - %s", v6, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v7, -1, -1);
      MEMORY[0x1C3BA8270](v6, -1, -1);

    }
    else
    {

    }
  }
}

void sub_1C082DE34(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1C082B698(a1, a3, a4);
}

uint64_t sub_1C082E0C0(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_retain();
  v1(v2);
  swift_release();
  return swift_release();
}

void sub_1C082E108()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = v0;
  v3 = *(void **)(v0 + 16);
  sub_1C106BAA0();
  v4 = sub_1C0781504();
  if (!v1)
  {
    if (*(_QWORD *)(v2 + 48))
    {
      MEMORY[0x1E0C80A78](v4);
      sub_1C0781504();
    }
    else
    {
      if (qword_1ED760048 != -1)
        swift_once();
      v5 = sub_1C077585C();
      sub_1C077965C(v5, (uint64_t)qword_1ED78D800);
      v6 = sub_1C0784E0C();
      if (sub_1C07892C0(v6))
      {
        *(_WORD *)sub_1C0780FC8() = 0;
        sub_1C0794CE8(&dword_1C0771000, v7, v8, "BehaviorDatabase+EventTracking: Skipping delete of person interaction mechanism tracking based on configuration");
        sub_1C078AB08();
      }

    }
  }
  sub_1C0782CFC();
}

uint64_t sub_1C082E238()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _WORD v5[8];

  v0 = sub_1C106C040();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  strcpy((char *)v5, "DELETE FROM ");
  HIBYTE(v5[6]) = 0;
  v5[7] = -5120;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106C034();
  sub_1C106C694();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C082E33C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _WORD v5[8];

  v0 = sub_1C106C040();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  strcpy((char *)v5, "DELETE FROM ");
  HIBYTE(v5[6]) = 0;
  v5[7] = -5120;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106C034();
  sub_1C106C694();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return swift_bridgeObjectRelease();
}

void sub_1C082E440()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C106BAA0();
  v1 = sub_1C106BCE0();
  if (!v0)
  {
    MEMORY[0x1E0C80A78](v1);
    sub_1C106BCE0();
  }
  sub_1C0782CFC();
}

uint64_t sub_1C082E4FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[2];

  v0 = sub_1C106C040();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[0] = 0;
  v8[1] = 0xE000000000000000;
  sub_1C1070774();
  swift_bridgeObjectRelease();
  strcpy((char *)v8, "DELETE FROM ");
  BYTE5(v8[1]) = 0;
  HIWORD(v8[1]) = -5120;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  sub_1C07ACF80(&qword_1ED762CB8);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C1079220;
  *(_QWORD *)(v4 + 32) = 0x695466664F747563;
  *(_QWORD *)(v4 + 40) = 0xEF706D617473656DLL;
  sub_1C106AC60();
  v5 = MEMORY[0x1E0D249D0];
  *(_QWORD *)(v4 + 72) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(v4 + 80) = v5;
  *(_QWORD *)(v4 + 48) = v6;
  sub_1C106C01C();
  sub_1C106C694();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return swift_bridgeObjectRelease();
}

void sub_1C082E6B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD v20[2];
  char *v21;
  uint64_t v22;
  _OWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;

  v22 = a3;
  v5 = sub_1C106C040();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v21 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v20 - v9;
  *(_QWORD *)&v23[0] = 0;
  *((_QWORD *)&v23[0] + 1) = 0xE000000000000000;
  sub_1C1070774();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v23[0] = 0xD000000000000015;
  *((_QWORD *)&v23[0] + 1) = 0x80000001C10E4680;
  v11 = *(_QWORD *)(a2 + 24);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  v24 = 0;
  memset(v23, 0, sizeof(v23));
  sub_1C106C034();
  v12 = a1;
  v13 = MEMORY[0x1E0DEB418];
  v14 = v27;
  sub_1C106C1E4();
  if (v14)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
    sub_1C0784B94((uint64_t)v23, (uint64_t *)&unk_1ED7626A0);
  }
  else
  {
    v20[0] = v12;
    v20[1] = v11;
    v27 = 0;
    v15 = v22;
    swift_bridgeObjectRelease();
    v16 = *(void (**)(char *, uint64_t))(v6 + 8);
    v16(v10, v5);
    sub_1C0784B94((uint64_t)v23, (uint64_t *)&unk_1ED7626A0);
    if ((v26 & 1) == 0)
    {
      v17 = v25;
      if (v25 > v15)
      {
        *(_QWORD *)&v23[0] = 0;
        *((_QWORD *)&v23[0] + 1) = 0xE000000000000000;
        sub_1C1070774();
        swift_bridgeObjectRelease();
        strcpy((char *)v23, "DELETE FROM ");
        BYTE13(v23[0]) = 0;
        HIWORD(v23[0]) = -5120;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        sub_1C106FC94();
        swift_bridgeObjectRelease();
        sub_1C106FC94();
        sub_1C07ACF80(&qword_1ED762CB8);
        v18 = swift_allocObject();
        *(_OWORD *)(v18 + 16) = xmmword_1C1079220;
        *(_QWORD *)(v18 + 32) = 0x746E756F63;
        *(_QWORD *)(v18 + 40) = 0xE500000000000000;
        if (__OFSUB__(v17, v15))
        {
          __break(1u);
        }
        else
        {
          *(_QWORD *)(v18 + 72) = v13;
          *(_QWORD *)(v18 + 80) = MEMORY[0x1E0D24A00];
          *(_QWORD *)(v18 + 48) = v17 - v15;
          v19 = v21;
          sub_1C106C01C();
          sub_1C106C694();
          v16(v19, v5);
          swift_bridgeObjectRelease();
        }
      }
    }
  }
}

uint64_t sub_1C082E9B0()
{
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  return sub_1C079D25C();
}

uint64_t sub_1C082EA14(uint64_t a1)
{
  return sub_1C082EFB4(a1);
}

uint64_t sub_1C082EA30(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  double v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, char *, uint64_t);
  char v37;
  void (*v38)(uint64_t, uint64_t);
  double v39;
  double v40;
  _QWORD v41[2];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50[48];
  uint64_t v51;

  v49 = a3;
  sub_1C07DFF44(a1, (uint64_t)v50);
  v10 = sub_1C07ACF80(&qword_1ED7449A0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  sub_1C077AED0();
  v48 = v12;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v41 - v14;
  sub_1C07ACF80(&qword_1ED7449A8);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v16);
  sub_1C077962C();
  v43 = a2;
  v18 = *(_QWORD *)(a2 + 16);
  if (!v18)
  {
    *(double *)&result = 0.0;
    return result;
  }
  v47 = v10;
  v42 = v18;
  MEMORY[0x1E0C80A78](v17);
  v41[-2] = v4;
  v41[-1] = a1;
  sub_1C07ACF80(&qword_1ED7612B8);
  *(double *)&result = COERCE_DOUBLE(sub_1C106BA70());
  if (!v5)
  {
    if (!*(_QWORD *)(v51 + 16))
    {
      swift_bridgeObjectRelease();
      *(double *)&result = 0.0;
      return result;
    }
    v46 = v51;
    v41[1] = 0;
    v20 = v43 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v45 = *(_QWORD *)(v11 + 72);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v21 = 0.0;
    v22 = v42;
    v23 = 0.0;
    v24 = v47;
    v44 = v6;
    while (1)
    {
      sub_1C0835044(v20, v6, &qword_1ED7449A0);
      sub_1C078AB18(v6, 0);
      if (sub_1C07B2D80(v6, 1, v24) == 1)
      {
LABEL_15:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(double *)&result = v23 / v21;
        return result;
      }
      v25 = *(int *)(v24 + 48);
      v26 = &v15[v25];
      v27 = v6 + v25;
      v28 = sub_1C077AE98();
      v29 = v6;
      v30 = v24;
      v31 = *(_QWORD **)(v28 - 8);
      v32 = (void (*)(char *, uint64_t, uint64_t))v31[4];
      v32(v15, v29, v28);
      v32(v26, v27, v28);
      v33 = *(int *)(v30 + 48);
      v34 = v48;
      v35 = v48 + v33;
      v36 = (void (*)(uint64_t, char *, uint64_t))v31[2];
      v36(v48, v15, v28);
      v36(v35, v26, v28);
      v37 = sub_1C082FF28(v34, v35, v46);
      v38 = (void (*)(uint64_t, uint64_t))v31[1];
      v38(v35, v28);
      v38(v34, v28);
      sub_1C106ACD8();
      if (v39 > 0.0)
        break;
      sub_1C0784B94((uint64_t)v15, &qword_1ED7449A0);
      v40 = 1.0;
      if ((v37 & 1) != 0)
        goto LABEL_12;
LABEL_13:
      v24 = v47;
      v6 = v44;
      v21 = v21 + v40;
      v20 += v45;
      if (!--v22)
      {
        sub_1C078AB18(v44, 1);
        goto LABEL_15;
      }
    }
    v40 = exp2(-v39 / a4);
    sub_1C0784B94((uint64_t)v15, &qword_1ED7449A0);
    if ((v37 & 1) == 0)
      goto LABEL_13;
LABEL_12:
    v23 = v23 + v40;
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_1C082ED70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  _BYTE v6[48];
  _BYTE v7[48];

  sub_1C07DFF44(a2, (uint64_t)v7);
  sub_1C07DFF44(a1, (uint64_t)v6);
  sub_1C07ACF80(&qword_1ED746280);
  result = sub_1C079D25C();
  if (!v2)
    return v5;
  return result;
}

void sub_1C082EE08(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1C07DFF44(a1, (uint64_t)&v17);
  v9 = sub_1C077AE98();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = MEMORY[0x1E0C80A78](v9);
  if (*(_QWORD *)(a2 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))((char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v9, v12);
    v13 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v14 = swift_allocObject();
    v15 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v10 + 32))(v14 + v13, (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
    *(double *)(v14 + ((v11 + v13 + 7) & 0xFFFFFFFFFFFFFFF8)) = a4;
    MEMORY[0x1E0C80A78](v15);
    *(&v16 - 6) = a2;
    *(&v16 - 5) = v4;
    *(&v16 - 4) = a1;
    *(&v16 - 3) = (uint64_t)sub_1C08350E0;
    *(&v16 - 2) = v14;
    sub_1C07ACF80(&qword_1ED75E828);
    sub_1C106BA70();
    sub_1C07814FC();
  }
  sub_1C078210C();
}

uint64_t sub_1C082EF98(uint64_t a1)
{
  return sub_1C082EFB4(a1);
}

uint64_t sub_1C082EFB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  _BYTE v4[48];

  sub_1C07DFF44(a1, (uint64_t)v4);
  sub_1C07ACF80(&qword_1ED75E828);
  result = sub_1C106BA70();
  if (!v1)
    return v3;
  return result;
}

double sub_1C082F038(uint64_t a1)
{
  uint64_t v1;
  double result;
  _BYTE v3[48];
  double v4;

  sub_1C07DFF44(a1, (uint64_t)v3);
  sub_1C079D25C();
  if (!v1)
    return v4;
  return result;
}

double sub_1C082F0A4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  char v7;

  sub_1C07ACF80(&qword_1ED758C90);
  sub_1C106BA70();
  if (!v1)
  {
    result = *(double *)&v4;
    *(_OWORD *)a1 = v4;
    *(_OWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 32) = v6;
    *(_BYTE *)(a1 + 40) = v7;
  }
  return result;
}

void sub_1C082F128()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;

  if (v0[6])
  {
    sub_1C07AB69C();
    MEMORY[0x1E0C80A78](v1);
    sub_1C07ACF80(&qword_1ED7447B8);
    sub_1C079D25C();
  }
  else
  {
    if (qword_1ED760048 != -1)
      swift_once();
    v2 = sub_1C077585C();
    sub_1C077965C(v2, (uint64_t)qword_1ED78D800);
    v3 = sub_1C0784E0C();
    if (sub_1C07892C0(v3))
    {
      *(_WORD *)sub_1C0780FC8() = 0;
      sub_1C0794CE8(&dword_1C0771000, v4, v5, "CustomAttributesTable is nil. Returning []");
      sub_1C078AB08();
    }

  }
  sub_1C077CFA0();
}

void sub_1C082F234()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;

  if (v0[6])
  {
    sub_1C07AB69C();
    MEMORY[0x1E0C80A78](v1);
    sub_1C07ACF80(&qword_1ED744738);
    sub_1C079D25C();
  }
  else
  {
    if (qword_1ED760048 != -1)
      swift_once();
    v2 = sub_1C077585C();
    sub_1C077965C(v2, (uint64_t)qword_1ED78D800);
    v3 = sub_1C0784E0C();
    if (sub_1C07892C0(v3))
    {
      *(_WORD *)sub_1C0780FC8() = 0;
      sub_1C0794CE8(&dword_1C0771000, v4, v5, "CustomAttributesTable is nil. Returning []");
      sub_1C078AB08();
    }

    sub_1C07ACF80(&qword_1EF631C68);
    sub_1C106F97C();
  }
  sub_1C077CFA0();
}

uint64_t sub_1C082F35C()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  sub_1C07ACF80(&qword_1ED760128);
  result = sub_1C079D25C();
  if (!v0)
    return v2;
  return result;
}

void sub_1C082F3C4()
{
  uint64_t v0;

  sub_1C077AE5C();
  v0 = sub_1C077AE98();
  MEMORY[0x1E0C80A78](v0);
  sub_1C0778564();
  sub_1C106AD2C();
  sub_1C07ACF80(&qword_1EF631C40);
  sub_1C106BA70();
  sub_1C07B15E8();
  sub_1C07757D0();
}

void sub_1C082F494(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  sub_1C082B1F4(a1, a2, a3, a4);
}

void sub_1C082F4B4()
{
  sub_1C082E108();
}

uint64_t sub_1C082F4D4()
{
  return sub_1C082E238();
}

double sub_1C082F4EC(double a1, double a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  double v7;
  double v8;
  uint64_t v10;

  v3 = sub_1C106ADE0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106AC54();
  sub_1C106ACD8();
  v8 = 1.0;
  if (v7 > 0.0)
    v8 = exp2(-v7 / a2);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v8;
}

uint64_t sub_1C082F5A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, double (*a5)(double)@<X4>, uint64_t a6@<X5>, double *a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  _QWORD *v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  char *v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t);
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  double (*v73)(double);
  uint64_t v74;
  uint64_t v75;
  double v76;
  double v77;
  double *v78;
  double v79;
  uint64_t v80;
  uint64_t v81;
  double *v82;
  double v83;
  uint64_t result;
  double v85;
  double *v86;
  uint64_t v87;
  double *v88;
  uint64_t v89;
  char *v90;
  double (*v91)(double);
  uint64_t v92;
  __int128 v93;
  unint64_t v94;
  unint64_t v95;
  char *v96;
  unint64_t v97;
  __int128 v98;
  unint64_t v99;
  unint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  __int128 v120;
  __int128 v121;
  uint64_t v122;

  v112 = a3;
  v113 = a4;
  v111 = a1;
  v11 = sub_1C106C040();
  v114 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v110 = (char *)&v87 - v15;
  v109 = sub_1C106D6CC();
  v108 = *(_QWORD *)(v109 - 8);
  MEMORY[0x1E0C80A78](v109);
  v107 = (char *)&v87 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = sub_1C07ACF80(&qword_1ED7449A0);
  v17 = *(_QWORD *)(v115 - 8);
  MEMORY[0x1E0C80A78](v115);
  v106 = (char *)&v87 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v87 - v20;
  v22 = sub_1C07ACF80(&qword_1ED7449A8);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v87 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = *(_QWORD *)(a2 + 16);
  v89 = a2;
  v88 = a7;
  if (v103)
  {
    v105 = a2 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
    v104 = *(_QWORD *)(v17 + 72);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v25 = 0;
    v26 = 0.0;
    v100 = 0x80000001C10E4D10;
    v99 = 0x80000001C10E4D30;
    v98 = xmmword_1C10795A0;
    v97 = 0x80000001C10DDA10;
    v95 = 0x80000001C10E4DC0;
    v94 = 0x80000001C10E4DE0;
    v93 = xmmword_1C1078FC0;
    v27 = 0.0;
    v28 = v115;
    v92 = a6;
    v91 = a5;
    v102 = v11;
    v96 = v13;
    v101 = v21;
    v90 = v24;
    while (1)
    {
      sub_1C0835044(v105 + v104 * v25, (uint64_t)v24, &qword_1ED7449A0);
      sub_1C07B2D8C((uint64_t)v24, 0, 1, v28);
      if (sub_1C07B2D80((uint64_t)v24, 1, v28) == 1)
        break;
      v116 = v25;
      v29 = *(int *)(v28 + 48);
      v30 = &v21[v29];
      v31 = &v24[v29];
      v32 = sub_1C106ADE0();
      v33 = *(_QWORD **)(v32 - 8);
      v34 = (void (*)(char *, char *, uint64_t))v33[4];
      v34(v21, v24, v32);
      v34(v30, v31, v32);
      v35 = v106;
      v36 = &v106[*(int *)(v28 + 48)];
      v37 = (void (*)(char *, char *, uint64_t))v33[2];
      v37(v106, v21, v32);
      v37(v36, v30, v32);
      sub_1C106AC60();
      v39 = v38;
      v40 = (void (*)(char *, uint64_t))v33[1];
      v40(v35, v32);
      v40(v36, v32);
      v41 = &v35[*(int *)(v28 + 48)];
      v37(v35, v21, v32);
      v37(v41, v30, v32);
      sub_1C106AC60();
      v43 = v42;
      v40(v41, v32);
      v40(v35, v32);
      *(_QWORD *)&v120 = 0;
      *((_QWORD *)&v120 + 1) = 0xE000000000000000;
      sub_1C1070774();
      sub_1C106FC94();
      v44 = *(_QWORD *)(v112 + 24);
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v117 = v44;
      sub_1C106FC94();
      swift_bridgeObjectRelease();
      sub_1C106FC94();
      v118 = v120;
      sub_1C07ACF80(&qword_1ED762CB8);
      v45 = swift_allocObject();
      *(_OWORD *)(v45 + 16) = v98;
      *(_QWORD *)(v45 + 32) = 0x7472617473;
      *(_QWORD *)(v45 + 40) = 0xE500000000000000;
      v46 = MEMORY[0x1E0DEB070];
      *(_QWORD *)(v45 + 72) = MEMORY[0x1E0DEB070];
      v47 = MEMORY[0x1E0D249D0];
      *(_QWORD *)(v45 + 48) = v39;
      *(_QWORD *)(v45 + 80) = v47;
      *(_QWORD *)(v45 + 88) = 6581861;
      *(_QWORD *)(v45 + 96) = 0xE300000000000000;
      *(_QWORD *)(v45 + 128) = v46;
      *(_QWORD *)(v45 + 136) = v47;
      *(_QWORD *)(v45 + 104) = v43;
      strcpy((char *)(v45 + 144), "behaviorType");
      *(_BYTE *)(v45 + 157) = 0;
      *(_WORD *)(v45 + 158) = -5120;
      v48 = v107;
      sub_1C0824E00(v45, v49, v50, v51, v52, v53, v54, v55);
      v56 = sub_1C106D6C0();
      (*(void (**)(char *, uint64_t))(v108 + 8))(v48, v109);
      *(_QWORD *)(v45 + 184) = MEMORY[0x1E0DEB418];
      v57 = MEMORY[0x1E0D24A00];
      *(_QWORD *)(v45 + 160) = v56;
      *(_QWORD *)(v45 + 192) = v57;
      *(_QWORD *)(v45 + 200) = 0xD000000000000012;
      *(_QWORD *)(v45 + 208) = v97;
      sub_1C0821B64();
      *(_QWORD *)(v45 + 240) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v45 + 248) = MEMORY[0x1E0D24968];
      *(_QWORD *)(v45 + 216) = v58;
      *(_QWORD *)(v45 + 224) = v59;
      v60 = v110;
      sub_1C106C01C();
      v122 = 0;
      v120 = 0u;
      v121 = 0u;
      v61 = v119;
      v62 = sub_1C106C1CC();
      if (v61)
      {
        swift_bridgeObjectRelease();
        sub_1C0784B94((uint64_t)&v120, (uint64_t *)&unk_1ED7626A0);
        (*(void (**)(char *, uint64_t))(v114 + 8))(v60, v102);
        sub_1C0784B94((uint64_t)v101, &qword_1ED7449A0);
        return swift_bridgeObjectRelease();
      }
      v118 = v62;
      swift_bridgeObjectRelease();
      sub_1C0784B94((uint64_t)&v120, (uint64_t *)&unk_1ED7626A0);
      v63 = *(void (**)(char *, uint64_t))(v114 + 8);
      v64 = v60;
      v65 = v102;
      v63(v64, v102);
      *(_QWORD *)&v120 = 0;
      *((_QWORD *)&v120 + 1) = 0xE000000000000000;
      sub_1C1070774();
      sub_1C106FC94();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C106FC94();
      swift_bridgeObjectRelease();
      sub_1C106FC94();
      v66 = swift_allocObject();
      *(_OWORD *)(v66 + 16) = v93;
      *(_QWORD *)(v66 + 32) = 0x7472617473;
      *(_QWORD *)(v66 + 40) = 0xE500000000000000;
      v67 = MEMORY[0x1E0DEB070];
      *(_QWORD *)(v66 + 72) = MEMORY[0x1E0DEB070];
      v68 = MEMORY[0x1E0D249D0];
      *(_QWORD *)(v66 + 48) = v39;
      *(_QWORD *)(v66 + 80) = v68;
      *(_QWORD *)(v66 + 88) = 6581861;
      *(_QWORD *)(v66 + 96) = 0xE300000000000000;
      *(_QWORD *)(v66 + 128) = v67;
      *(_QWORD *)(v66 + 136) = v68;
      *(_QWORD *)(v66 + 104) = v43;
      v69 = v96;
      sub_1C106C01C();
      v122 = 0;
      v120 = 0u;
      v121 = 0u;
      v70 = sub_1C106C1CC();
      v119 = 0;
      v71 = v70;
      swift_bridgeObjectRelease();
      sub_1C0784B94((uint64_t)&v120, (uint64_t *)&unk_1ED7626A0);
      v63(v69, v65);
      v72 = v119;
      v73 = v91;
      v74 = sub_1C082877C(v118, v91);
      swift_bridgeObjectRelease();
      v75 = *(_QWORD *)(v74 + 16);
      v76 = 0.0;
      v77 = 0.0;
      v21 = v101;
      if (v75)
      {
        v78 = (double *)(v74 + 32);
        do
        {
          v79 = *v78++;
          v77 = v77 + v79;
          --v75;
        }
        while (v75);
      }
      swift_bridgeObjectRelease();
      v80 = sub_1C082877C(v71, v73);
      v119 = v72;
      swift_bridgeObjectRelease();
      v81 = *(_QWORD *)(v80 + 16);
      v28 = v115;
      if (v81)
      {
        v82 = (double *)(v80 + 32);
        v76 = 0.0;
        do
        {
          v83 = *v82++;
          v76 = v76 + v83;
          --v81;
        }
        while (v81);
      }
      v25 = v116 + 1;
      v27 = v27 + v77;
      swift_bridgeObjectRelease();
      sub_1C0784B94((uint64_t)v21, &qword_1ED7449A0);
      v26 = v26 + v76;
      v24 = v90;
      if (v25 == v103)
        goto LABEL_14;
    }
  }
  else
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v26 = 0.0;
    v27 = 0.0;
    v28 = v115;
LABEL_14:
    sub_1C07B2D8C((uint64_t)v24, 1, 1, v28);
  }
  result = swift_bridgeObjectRelease();
  v85 = 0.0;
  v86 = v88;
  if (v26 > 0.0)
    v85 = v27 / v26;
  *v88 = v85;
  *((_BYTE *)v86 + 8) = v26 <= 0.0;
  return result;
}

uint64_t sub_1C082FF28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double v18;
  double v19;
  unint64_t v20;
  char v21;
  uint64_t result;
  double v23;
  uint64_t v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BOOL8 v30;
  double v31;
  uint64_t v32;
  double v33;
  double v34;
  uint64_t v35;
  uint64_t v36;

  v6 = sub_1C07ACF80(&qword_1ED7449A0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  sub_1C077AED0();
  v36 = v8;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v35 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v35 - v13;
  v16 = (char *)&v35 + *(int *)(v15 + 48) - v13;
  sub_1C077AE98();
  sub_1C0790E20((uint64_t)v14, a1);
  sub_1C0790E20((uint64_t)v16, a2);
  v17 = (uint64_t)&v11[*(int *)(v6 + 48)];
  sub_1C0790E20((uint64_t)v11, (uint64_t)v14);
  sub_1C0790E20(v17, (uint64_t)v16);
  sub_1C106AC60();
  v19 = v18;
  sub_1C0792D40(v17);
  v20 = sub_1C0830198(a3, v19);
  LOBYTE(v17) = v21;
  result = sub_1C0792D40((uint64_t)v11);
  if ((v17 & 1) != 0)
  {
    v29 = (uint64_t)v14;
    goto LABEL_7;
  }
  if ((v20 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v20 < *(_QWORD *)(a3 + 16))
  {
    v35 = a3 + 32;
    v23 = *(double *)(a3 + 32 + 8 * v20);
    v24 = (uint64_t)&v11[*(int *)(v6 + 48)];
    sub_1C0790E20((uint64_t)v11, (uint64_t)v14);
    sub_1C0790E20(v24, (uint64_t)v16);
    sub_1C106AC60();
    v26 = v25;
    sub_1C0792D40((uint64_t)v11);
    sub_1C0792D40(v24);
    v27 = v36;
    v28 = v36 + *(int *)(v6 + 48);
    sub_1C0790E20(v36, (uint64_t)v14);
    sub_1C0790E20(v28, (uint64_t)v16);
    if (v26 <= v23)
    {
      v31 = *(double *)(v35 + 8 * v20);
      v32 = (uint64_t)&v11[*(int *)(v6 + 48)];
      sub_1C0790E20((uint64_t)v11, v27);
      sub_1C0790E20(v32, v28);
      sub_1C106AC60();
      v34 = v33;
      sub_1C0784B94(v27, &qword_1ED7449A0);
      sub_1C0784B94((uint64_t)v14, &qword_1ED7449A0);
      sub_1C0792D40(v32);
      v30 = v31 <= v34;
      sub_1C0792D40((uint64_t)v11);
      return v30;
    }
    sub_1C0784B94(v27, &qword_1ED7449A0);
    v29 = (uint64_t)v14;
LABEL_7:
    sub_1C0784B94(v29, &qword_1ED7449A0);
    return 0;
  }
  __break(1u);
  return result;
}

unint64_t sub_1C0830198(uint64_t a1, double a2)
{
  unint64_t v2;
  unint64_t result;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return 0;
  result = v2 >> 1;
  v5 = a1 + 32;
  v6 = *(double *)(v5 + 8 * (v2 >> 1));
  if (v6 != a2)
  {
    v7 = 0;
    v8 = v2;
    while (1)
    {
      if (v6 < a2)
        v7 = result + 1;
      else
        v8 = result;
      if (v7 >= v8)
        break;
      if (__OFSUB__(v8, v7))
      {
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
        return result;
      }
      v9 = (v8 - v7) / 2;
      result = v7 + v9;
      if (__OFADD__(v7, v9))
        goto LABEL_21;
      if (result >= v2)
        goto LABEL_22;
      v6 = *(double *)(v5 + 8 * result);
      if (v6 == a2)
        return result;
    }
    result = v7 - (v7 == v2);
    if ((uint64_t)result >= (uint64_t)v2)
      goto LABEL_23;
    if (*(double *)(v5 + 8 * result) > a2)
    {
      if (result)
        --result;
      else
        return 0;
    }
  }
  return result;
}

void sub_1C083025C(uint64_t a1@<X2>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  _OWORD v27[2];
  uint64_t v28;
  uint64_t v29;

  v29 = a1;
  v26 = a2;
  v3 = sub_1C106D6CC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C07ACF80(&qword_1ED7626C0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v27[0] = 0;
  *((_QWORD *)&v27[0] + 1) = 0xE000000000000000;
  sub_1C1070774();
  sub_1C106FC94();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  sub_1C106C5C8();
  swift_bridgeObjectRelease();
  if (!v2)
  {
    sub_1C07ACF80(&qword_1ED762CB8);
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1C1078FC0;
    strcpy((char *)(v10 + 32), "behaviorType");
    *(_BYTE *)(v10 + 45) = 0;
    *(_WORD *)(v10 + 46) = -5120;
    sub_1C0824E00(v10, v11, v12, v13, v14, v15, v16, v17);
    v18 = sub_1C106D6C0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v19 = MEMORY[0x1E0D24A00];
    *(_QWORD *)(v10 + 72) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v10 + 80) = v19;
    *(_QWORD *)(v10 + 48) = v18;
    *(_QWORD *)(v10 + 88) = 0xD000000000000012;
    *(_QWORD *)(v10 + 96) = 0x80000001C10DDA10;
    sub_1C0821B64();
    v20 = MEMORY[0x1E0D24968];
    *(_QWORD *)(v10 + 128) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v10 + 136) = v20;
    *(_QWORD *)(v10 + 104) = v21;
    *(_QWORD *)(v10 + 112) = v22;
    sub_1C106C01C();
    v23 = sub_1C106C040();
    sub_1C07B2D8C((uint64_t)v9, 0, 1, v23);
    v28 = 0;
    memset(v27, 0, sizeof(v27));
    v24 = sub_1C106C1D8();
    swift_release();
    sub_1C0784B94((uint64_t)v27, (uint64_t *)&unk_1ED7626A0);
    sub_1C0784B94((uint64_t)v9, &qword_1ED7626C0);
    *v26 = v24;
  }
}

uint64_t sub_1C0830528@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD v20[2];
  uint64_t v21;

  v18 = a1;
  v17 = a2;
  v2 = sub_1C106C040();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v20[0] = 0;
  *((_QWORD *)&v20[0] + 1) = 0xE000000000000000;
  sub_1C1070774();
  sub_1C106FC94();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  sub_1C07ACF80(&qword_1ED762CB8);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C1079220;
  strcpy((char *)(v6 + 32), "behaviorType");
  *(_BYTE *)(v6 + 45) = 0;
  *(_WORD *)(v6 + 46) = -5120;
  v7 = sub_1C106D6C0();
  v8 = MEMORY[0x1E0D24A00];
  *(_QWORD *)(v6 + 72) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v6 + 80) = v8;
  *(_QWORD *)(v6 + 48) = v7;
  sub_1C106C01C();
  v21 = 0;
  memset(v20, 0, sizeof(v20));
  v15 = MEMORY[0x1E0DEA978];
  v9 = v19;
  v10 = sub_1C106C1A8();
  if (v9)
  {
    swift_bridgeObjectRelease();
    sub_1C0784B94((uint64_t)v20, (uint64_t *)&unk_1ED7626A0);
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    v12 = v10;
    swift_bridgeObjectRelease();
    sub_1C0784B94((uint64_t)v20, (uint64_t *)&unk_1ED7626A0);
    v13 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    MEMORY[0x1E0C80A78](v13);
    v14 = sub_1C0828A58((void (*)(__int128 *__return_ptr, _QWORD *))sub_1C08352C4, (uint64_t)(&v16 - 4), v12);
    result = swift_bridgeObjectRelease();
    *v17 = v14;
  }
  return result;
}

void sub_1C08307B0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  unint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  __int128 v90;
  __int128 v91;
  uint64_t v92;
  uint64_t v93;

  v81 = a5;
  v82 = a6;
  v79 = a4;
  v85 = a3;
  v83 = sub_1C106ADE0();
  v89 = *(_QWORD *)(v83 - 8);
  MEMORY[0x1E0C80A78](v83);
  v80 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v72 - v10;
  v88 = sub_1C106D6CC();
  v84 = *(_QWORD *)(v88 - 8);
  MEMORY[0x1E0C80A78](v88);
  v86 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1C07ACF80(&qword_1ED7626C0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v87 = (char *)&v72 - v17;
  *(_QWORD *)&v90 = 0;
  *((_QWORD *)&v90 + 1) = 0xE000000000000000;
  sub_1C1070774();
  sub_1C106FC94();
  v18 = *(_QWORD *)(a2 + 24);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  v19 = v93;
  v20 = sub_1C106C5C8();
  if (v19)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v77 = "timeSincePreviousEvent)";
  v78 = v18;
  v93 = a1;
  v74 = v15;
  v73 = v11;
  v21 = v20;
  swift_bridgeObjectRelease();
  v76 = sub_1C07ACF80(&qword_1ED762CB8);
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1C1078FC0;
  strcpy((char *)(v22 + 32), "behaviorType");
  *(_BYTE *)(v22 + 45) = 0;
  *(_WORD *)(v22 + 46) = -5120;
  v23 = v86;
  sub_1C0824E00(v22, v24, v25, v26, v27, v28, v29, v30);
  v31 = sub_1C106D6C0();
  v32 = v88;
  v84 = *(_QWORD *)(v84 + 8);
  ((void (*)(char *, uint64_t))v84)(v23, v88);
  v33 = MEMORY[0x1E0D24A00];
  *(_QWORD *)(v22 + 72) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v22 + 80) = v33;
  *(_QWORD *)(v22 + 48) = v31;
  v75 = (unint64_t)"utonamingMessages";
  *(_QWORD *)(v22 + 88) = 0xD000000000000012;
  *(_QWORD *)(v22 + 96) = 0x80000001C10DDA10;
  sub_1C0821B64();
  v34 = MEMORY[0x1E0D24968];
  *(_QWORD *)(v22 + 128) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v22 + 136) = v34;
  *(_QWORD *)(v22 + 104) = v35;
  *(_QWORD *)(v22 + 112) = v36;
  v37 = (uint64_t)v87;
  sub_1C106C01C();
  v38 = sub_1C106C040();
  sub_1C07B2D8C(v37, 0, 1, v38);
  v92 = 0;
  v90 = 0u;
  v91 = 0u;
  v39 = MEMORY[0x1E0DEB070];
  v40 = sub_1C106C1D8();
  v85 = v21;
  v72 = v38;
  sub_1C0784B94((uint64_t)&v90, (uint64_t *)&unk_1ED7626A0);
  sub_1C0784B94(v37, &qword_1ED7626C0);
  if (!*(_QWORD *)(v40 + 16))
  {
    swift_release();
    swift_bridgeObjectRelease();
    v41 = MEMORY[0x1E0DEE9D8];
    v42 = v82;
    goto LABEL_6;
  }
  v87 = (char *)v40;
  *(_QWORD *)&v90 = 0;
  *((_QWORD *)&v90 + 1) = 0xE000000000000000;
  sub_1C1070774();
  sub_1C106FC94();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  sub_1C106C5C8();
  v93 = 0;
  swift_bridgeObjectRelease();
  v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = xmmword_1C1078A20;
  strcpy((char *)(v43 + 32), "behaviorType");
  *(_BYTE *)(v43 + 45) = 0;
  *(_WORD *)(v43 + 46) = -5120;
  sub_1C0824E00(v43, v44, v45, v46, v47, v48, v49, v50);
  v51 = sub_1C106D6C0();
  ((void (*)(char *, uint64_t))v84)(v23, v32);
  *(_QWORD *)(v43 + 72) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v43 + 80) = MEMORY[0x1E0D24A00];
  *(_QWORD *)(v43 + 88) = 0xD000000000000012;
  *(_QWORD *)(v43 + 48) = v51;
  *(_QWORD *)(v43 + 96) = v75 | 0x8000000000000000;
  sub_1C0821B64();
  *(_QWORD *)(v43 + 128) = MEMORY[0x1E0DEA968];
  v52 = MEMORY[0x1E0D24968];
  *(_QWORD *)(v43 + 104) = v53;
  *(_QWORD *)(v43 + 112) = v54;
  *(_QWORD *)(v43 + 136) = v52;
  strcpy((char *)(v43 + 144), "minTimestamp");
  *(_BYTE *)(v43 + 157) = 0;
  *(_WORD *)(v43 + 158) = -5120;
  *(_QWORD *)(v43 + 184) = v39;
  *(_QWORD *)(v43 + 192) = MEMORY[0x1E0D249D0];
  v55 = v87;
  if (*((_QWORD *)v87 + 2))
  {
    *(_QWORD *)(v43 + 160) = *((_QWORD *)v87 + 4);
    v56 = (uint64_t)v74;
    sub_1C106C01C();
    sub_1C07B2D8C(v56, 0, 1, v72);
    v92 = 0;
    v90 = 0u;
    v91 = 0u;
    v57 = v93;
    v58 = sub_1C106C1D8();
    v59 = v80;
    v60 = v81;
    if (v57)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      sub_1C0784B94((uint64_t)&v90, (uint64_t *)&unk_1ED7626A0);
      sub_1C0784B94(v56, &qword_1ED7626C0);
      return;
    }
    v61 = v58;
    v93 = 0;
    sub_1C0784B94((uint64_t)&v90, (uint64_t *)&unk_1ED7626A0);
    sub_1C0784B94(v56, &qword_1ED7626C0);
    v62 = *((_QWORD *)v55 + 2);
    v63 = MEMORY[0x1E0DEE9D8];
    if (v62)
    {
      *(_QWORD *)&v90 = MEMORY[0x1E0DEE9D8];
      sub_1C09D337C();
      v64 = 0;
      v65 = v90;
      v66 = v83;
      v67 = v73;
      do
      {
        sub_1C106AC54();
        *(_QWORD *)&v90 = v65;
        v68 = *(_QWORD *)(v65 + 16);
        if (v68 >= *(_QWORD *)(v65 + 24) >> 1)
        {
          sub_1C09D337C();
          v66 = v83;
          v65 = v90;
        }
        ++v64;
        *(_QWORD *)(v65 + 16) = v68 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v89 + 32))(v65+ ((*(unsigned __int8 *)(v89 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80))+ *(_QWORD *)(v89 + 72) * v68, v67, v66);
      }
      while (v62 != v64);
      swift_bridgeObjectRelease();
      v59 = v80;
      v60 = v81;
      v63 = MEMORY[0x1E0DEE9D8];
    }
    else
    {
      swift_bridgeObjectRelease();
      v65 = MEMORY[0x1E0DEE9D8];
    }
    v69 = *(_QWORD *)(v61 + 16);
    if (v69)
    {
      *(_QWORD *)&v90 = v63;
      sub_1C09D337C();
      v70 = 0;
      v63 = v90;
      do
      {
        sub_1C106AC54();
        *(_QWORD *)&v90 = v63;
        v71 = *(_QWORD *)(v63 + 16);
        if (v71 >= *(_QWORD *)(v63 + 24) >> 1)
        {
          sub_1C09D337C();
          v63 = v90;
        }
        ++v70;
        *(_QWORD *)(v63 + 16) = v71 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v89 + 32))(v63+ ((*(unsigned __int8 *)(v89 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80))+ *(_QWORD *)(v89 + 72) * v71, v59, v83);
      }
      while (v69 != v70);
      swift_bridgeObjectRelease();
      v60 = v81;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v41 = sub_1C082A670(v65, v63, v60);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    v42 = v82;
LABEL_6:
    *v42 = v41;
    return;
  }
  __break(1u);
}

uint64_t sub_1C0831030@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t (*v33)(char *, uint64_t);
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(char *, uint64_t);
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t);
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;

  v65 = a1;
  v61 = a4;
  v73 = sub_1C106C040();
  v67 = *(_QWORD *)(v73 - 8);
  MEMORY[0x1E0C80A78](v73);
  v60 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v64 = (char *)&v54 - v8;
  v9 = sub_1C106D6CC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v68 = 0;
  *((_QWORD *)&v68 + 1) = 0xE000000000000000;
  sub_1C1070774();
  sub_1C106FC94();
  v13 = *(_QWORD *)(a2 + 24);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v62 = v13;
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  v63 = (void (*)(char *, uint64_t))v68;
  v57 = sub_1C07ACF80(&qword_1ED762CB8);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1C1078FC0;
  strcpy((char *)(v14 + 32), "behaviorType");
  *(_BYTE *)(v14 + 45) = 0;
  *(_WORD *)(v14 + 46) = -5120;
  sub_1C0824E00(v14, v15, v16, v17, v18, v19, v20, v21);
  v22 = sub_1C106D6C0();
  v23 = *(void (**)(char *, uint64_t))(v10 + 8);
  v58 = v9;
  v23(v12, v9);
  v24 = MEMORY[0x1E0DEB418];
  v25 = MEMORY[0x1E0D24A00];
  *(_QWORD *)(v14 + 72) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v14 + 80) = v25;
  *(_QWORD *)(v14 + 48) = v22;
  *(_QWORD *)(v14 + 88) = 0xD000000000000012;
  *(_QWORD *)(v14 + 96) = 0x80000001C10DDA10;
  v26 = a3;
  v27 = v64;
  v59 = v26;
  sub_1C0821B64();
  v28 = MEMORY[0x1E0D24968];
  *(_QWORD *)(v14 + 128) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v14 + 136) = v28;
  *(_QWORD *)(v14 + 104) = v29;
  *(_QWORD *)(v14 + 112) = v30;
  sub_1C106C01C();
  v70 = 0;
  v68 = 0u;
  v69 = 0u;
  v31 = v66;
  sub_1C106C1E4();
  if (v31)
  {
    swift_bridgeObjectRelease();
    sub_1C0784B94((uint64_t)&v68, (uint64_t *)&unk_1ED7626A0);
    return (*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v27, v73);
  }
  else
  {
    v66 = 0;
    v56 = (unint64_t)"utonamingMessages";
    v63 = v23;
    swift_bridgeObjectRelease();
    sub_1C0784B94((uint64_t)&v68, (uint64_t *)&unk_1ED7626A0);
    v33 = *(uint64_t (**)(char *, uint64_t))(v67 + 8);
    result = v33(v27, v73);
    v34 = 0;
    v35 = 1;
    if ((v72 & 1) != 0 || v71 < 1)
    {
      v53 = v61;
    }
    else
    {
      v36 = 1;
      if ((v71 & 1) == 0)
        v36 = 2;
      v67 = v36;
      *(_QWORD *)&v68 = 0;
      v54 = v33;
      v55 = (unint64_t)(v71 - 1) >> 1;
      *((_QWORD *)&v68 + 1) = 0xE000000000000000;
      sub_1C1070774();
      sub_1C106FC94();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C106FC94();
      swift_bridgeObjectRelease();
      sub_1C106FC94();
      v64 = (char *)v68;
      v37 = swift_allocObject();
      *(_OWORD *)(v37 + 16) = xmmword_1C10795A0;
      strcpy((char *)(v37 + 32), "behaviorType");
      *(_BYTE *)(v37 + 45) = 0;
      *(_WORD *)(v37 + 46) = -5120;
      sub_1C0824E00(v37, v38, v39, v40, v41, v42, v43, v44);
      v45 = sub_1C106D6C0();
      v63(v12, v58);
      *(_QWORD *)(v37 + 72) = v24;
      v46 = MEMORY[0x1E0D24A00];
      *(_QWORD *)(v37 + 80) = MEMORY[0x1E0D24A00];
      *(_QWORD *)(v37 + 88) = 0xD000000000000012;
      *(_QWORD *)(v37 + 48) = v45;
      *(_QWORD *)(v37 + 96) = v56 | 0x8000000000000000;
      sub_1C0821B64();
      *(_QWORD *)(v37 + 128) = MEMORY[0x1E0DEA968];
      v47 = MEMORY[0x1E0D24968];
      *(_QWORD *)(v37 + 104) = v48;
      *(_QWORD *)(v37 + 112) = v49;
      *(_QWORD *)(v37 + 136) = v47;
      *(_QWORD *)(v37 + 144) = 0x74696D696CLL;
      *(_QWORD *)(v37 + 184) = v24;
      *(_QWORD *)(v37 + 192) = v46;
      v50 = v67;
      *(_QWORD *)(v37 + 152) = 0xE500000000000000;
      *(_QWORD *)(v37 + 160) = v50;
      *(_QWORD *)(v37 + 200) = 0x74657366666FLL;
      *(_QWORD *)(v37 + 208) = 0xE600000000000000;
      *(_QWORD *)(v37 + 240) = v24;
      *(_QWORD *)(v37 + 248) = v46;
      *(_QWORD *)(v37 + 216) = v55;
      v51 = v60;
      sub_1C106C01C();
      v70 = 0;
      v68 = 0u;
      v69 = 0u;
      v52 = v66;
      sub_1C106C1E4();
      if (v52)
      {
        swift_bridgeObjectRelease();
        sub_1C0784B94((uint64_t)&v68, (uint64_t *)&unk_1ED7626A0);
        return v54(v51, v73);
      }
      swift_bridgeObjectRelease();
      sub_1C0784B94((uint64_t)&v68, (uint64_t *)&unk_1ED7626A0);
      result = v54(v51, v73);
      v34 = v71;
      v35 = v72;
      v53 = v61;
    }
    *(_QWORD *)v53 = v34;
    *(_BYTE *)(v53 + 8) = v35;
  }
  return result;
}

uint64_t sub_1C08315B4()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  sub_1C07ACF80(&qword_1ED75E828);
  result = sub_1C079D25C();
  if (!v0)
    return v2;
  return result;
}

void sub_1C0831628(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (*a5)(uint64_t, uint64_t)@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  void *v15;
  char v16;
  uint64_t v17;
  char v18;

  v15 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C08316E0(a2, a1, a3, a4, a5, a6, &v17);
  objc_autoreleasePoolPop(v15);
  if (!v7)
  {
    v16 = v18;
    *(_QWORD *)a7 = v17;
    *(_BYTE *)(a7 + 8) = v16;
  }
}

uint64_t sub_1C08316E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (*a5)(uint64_t, uint64_t)@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t result;
  uint64_t v46;
  char *v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  char v73;
  char v74;
  uint64_t *v75;
  _QWORD v76[2];
  uint64_t (*v77)(uint64_t, uint64_t);
  uint64_t *v78;
  __int128 v79;
  void (*v80)(char *, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  __int128 v98;
  __int128 v99;
  uint64_t v100;
  uint64_t v101;

  v76[1] = a6;
  v77 = a5;
  v101 = a4;
  v95 = a2;
  v78 = a7;
  v94 = sub_1C106C040();
  v89 = *(_QWORD *)(v94 - 8);
  MEMORY[0x1E0C80A78](v94);
  v85 = (char *)v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v92 = (char *)v76 - v11;
  v12 = sub_1C106D6CC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1C106AFE4();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1C106ADE0();
  v87 = *(_QWORD *)(v20 - 8);
  v88 = v20;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)v76 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106AFC0();
  v84 = a1;
  sub_1C106AF18();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  *(_QWORD *)&v98 = 0;
  *((_QWORD *)&v98 + 1) = 0xE000000000000000;
  sub_1C1070774();
  sub_1C106FC94();
  v23 = *(_QWORD *)(a3 + 24);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v82 = v23;
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  v90 = *((_QWORD *)&v98 + 1);
  v91 = (char *)v98;
  v81 = sub_1C07ACF80(&qword_1ED762CB8);
  v24 = swift_allocObject();
  v79 = xmmword_1C10795A0;
  *(_OWORD *)(v24 + 16) = xmmword_1C10795A0;
  strcpy((char *)(v24 + 32), "behaviorType");
  *(_BYTE *)(v24 + 45) = 0;
  *(_WORD *)(v24 + 46) = -5120;
  sub_1C0824E00(v24, v25, v26, v27, v28, v29, v30, v31);
  v32 = sub_1C106D6C0();
  v33 = *(void (**)(char *, uint64_t))(v13 + 8);
  v86 = v15;
  v83 = v12;
  v80 = v33;
  v33(v15, v12);
  v34 = MEMORY[0x1E0D24A00];
  *(_QWORD *)(v24 + 72) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v24 + 80) = v34;
  *(_QWORD *)(v24 + 48) = v32;
  *(_QWORD *)(v24 + 88) = 0xD000000000000012;
  *(_QWORD *)(v24 + 96) = 0x80000001C10DDA10;
  sub_1C0821B64();
  v35 = MEMORY[0x1E0D24968];
  *(_QWORD *)(v24 + 128) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v24 + 136) = v35;
  *(_QWORD *)(v24 + 104) = v36;
  *(_QWORD *)(v24 + 112) = v37;
  strcpy((char *)(v24 + 144), "maxTimestamp");
  *(_BYTE *)(v24 + 157) = 0;
  *(_WORD *)(v24 + 158) = -5120;
  sub_1C106AC60();
  v38 = MEMORY[0x1E0DEB070];
  v39 = MEMORY[0x1E0D249D0];
  *(_QWORD *)(v24 + 184) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(v24 + 192) = v39;
  *(_QWORD *)(v24 + 160) = v40;
  *(_QWORD *)(v24 + 200) = 0xD000000000000012;
  *(_QWORD *)(v24 + 208) = 0x80000001C10E4AD0;
  v41 = v92;
  sub_1C106AC78();
  *(_QWORD *)(v24 + 240) = v38;
  *(_QWORD *)(v24 + 248) = v39;
  *(_QWORD *)(v24 + 216) = v42;
  sub_1C106C01C();
  v100 = 0;
  v98 = 0u;
  v99 = 0u;
  v43 = v93;
  v44 = sub_1C106C1CC();
  v93 = v43;
  if (v43)
  {
    swift_bridgeObjectRelease();
    sub_1C0784B94((uint64_t)&v98, (uint64_t *)&unk_1ED7626A0);
    (*(void (**)(char *, uint64_t))(v89 + 8))(v41, v94);
    return (*(uint64_t (**)(char *, uint64_t))(v87 + 8))(v22, v88);
  }
  v46 = v44;
  v76[0] = "utonamingMessages";
  v47 = v86;
  v91 = v22;
  swift_bridgeObjectRelease();
  sub_1C0784B94((uint64_t)&v98, (uint64_t *)&unk_1ED7626A0);
  v48 = *(void (**)(char *, uint64_t))(v89 + 8);
  v48(v41, v94);
  if (*(_QWORD *)(v46 + 16))
  {
    v92 = (char *)v48;
    v90 = sub_1C106FF70();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v98 = 0;
    *((_QWORD *)&v98 + 1) = 0xE000000000000000;
    sub_1C1070774();
    sub_1C106FC94();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C106FC94();
    swift_bridgeObjectRelease();
    sub_1C106FC94();
    v89 = v98;
    v49 = swift_allocObject();
    *(_OWORD *)(v49 + 16) = v79;
    strcpy((char *)(v49 + 32), "behaviorType");
    *(_BYTE *)(v49 + 45) = 0;
    *(_WORD *)(v49 + 46) = -5120;
    v50 = MEMORY[0x1E0DEB418];
    sub_1C0824E00(v49, v51, v52, v53, v54, v55, v56, v57);
    v58 = sub_1C106D6C0();
    v80(v47, v83);
    *(_QWORD *)(v49 + 72) = v50;
    *(_QWORD *)(v49 + 80) = v34;
    *(_QWORD *)(v49 + 48) = v58;
    v59 = v76[0] | 0x8000000000000000;
    *(_QWORD *)(v49 + 88) = 0xD000000000000012;
    *(_QWORD *)(v49 + 96) = v59;
    sub_1C0821B64();
    *(_QWORD *)(v49 + 128) = MEMORY[0x1E0DEA968];
    v60 = MEMORY[0x1E0D24968];
    *(_QWORD *)(v49 + 104) = v61;
    *(_QWORD *)(v49 + 112) = v62;
    *(_QWORD *)(v49 + 136) = v60;
    strcpy((char *)(v49 + 144), "minTimestamp");
    *(_BYTE *)(v49 + 157) = 0;
    *(_WORD *)(v49 + 158) = -5120;
    v63 = v91;
    sub_1C106AC60();
    v64 = MEMORY[0x1E0DEB070];
    *(_QWORD *)(v49 + 184) = MEMORY[0x1E0DEB070];
    v65 = MEMORY[0x1E0D249D0];
    *(_QWORD *)(v49 + 160) = v66;
    *(_QWORD *)(v49 + 192) = v65;
    strcpy((char *)(v49 + 200), "maxTimestamp");
    *(_BYTE *)(v49 + 213) = 0;
    *(_WORD *)(v49 + 214) = -5120;
    sub_1C106AC60();
    *(_QWORD *)(v49 + 240) = v64;
    *(_QWORD *)(v49 + 248) = v65;
    *(_QWORD *)(v49 + 216) = v67;
    v68 = v85;
    sub_1C106C01C();
    v100 = 0;
    v98 = 0u;
    v99 = 0u;
    v69 = v93;
    sub_1C106C1E4();
    if (v69)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C0784B94((uint64_t)&v98, (uint64_t *)&unk_1ED7626A0);
      ((void (*)(char *, uint64_t))v92)(v68, v94);
      return (*(uint64_t (**)(char *, uint64_t))(v87 + 8))(v63, v88);
    }
    swift_bridgeObjectRelease();
    sub_1C0784B94((uint64_t)&v98, (uint64_t *)&unk_1ED7626A0);
    ((void (*)(char *, uint64_t))v92)(v68, v94);
    if (v97)
      v72 = 0;
    else
      v72 = v96;
    v70 = v77(v90, v72);
    v74 = v73;
    swift_bridgeObjectRelease();
    v71 = v74 & 1;
    result = (*(uint64_t (**)(char *, uint64_t))(v87 + 8))(v63, v88);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v87 + 8))(v91, v88);
    result = swift_bridgeObjectRelease();
    v70 = 0;
    v71 = 1;
  }
  v75 = v78;
  *v78 = v70;
  *((_BYTE *)v75 + 8) = v71;
  return result;
}

uint64_t sub_1C0831E60(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  double v12;
  double v13;
  char v14;
  char v15;
  uint64_t result;
  double v17;
  uint64_t v18;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v18 = MEMORY[0x1E0DEE9D8];
    sub_1C09D324C();
    v4 = v18;
    v6 = (uint64_t *)(a1 + 32);
    v7 = *(_QWORD *)(v18 + 16);
    do
    {
      v9 = *v6++;
      v8 = v9;
      if (v7 >= *(_QWORD *)(v18 + 24) >> 1)
        sub_1C09D324C();
      *(_QWORD *)(v18 + 16) = v7 + 1;
      *(double *)(v18 + 8 * v7++ + 32) = (double)v8;
      --v3;
    }
    while (v3);
  }
  v10 = sub_1C082AF24(v4);
  if ((v11 & 1) != 0)
  {
    sub_1C077960C();
    goto LABEL_12;
  }
  v12 = *(double *)&v10;
  v13 = COERCE_DOUBLE(sub_1C082B080(v4));
  v15 = v14;
  sub_1C077960C();
  if ((v15 & 1) != 0)
  {
LABEL_12:
    *(double *)&result = 0.0;
    return result;
  }
  *(double *)&result = 0.0;
  v17 = (double)a2 - v12;
  if (v17 != 0.0 && v13 != 0.0)
    *(double *)&result = v17 / v13;
  return result;
}

uint64_t sub_1C0831F98(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  char v15;
  char v16;
  uint64_t result;
  double v18;
  uint64_t v19;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v19 = MEMORY[0x1E0DEE9D8];
    sub_1C07906C4();
    sub_1C09D324C();
    v5 = v19;
    v6 = (uint64_t *)(a1 + 32);
    v7 = *(_QWORD *)(v19 + 16);
    do
    {
      v9 = *v6++;
      v8 = v9;
      v10 = v7 + 1;
      if (v7 >= *(_QWORD *)(v19 + 24) >> 1)
        sub_1C07957A8();
      *(_QWORD *)(v19 + 16) = v10;
      *(double *)(v19 + 8 * v7++ + 32) = (double)v8;
      --v3;
    }
    while (v3);
  }
  else
  {
    v5 = MEMORY[0x1E0DEE9D8];
    v10 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    if (!v10)
    {
      swift_bridgeObjectRelease();
LABEL_15:
      *(double *)&result = 0.0;
      return result;
    }
  }
  v11 = 0;
  v12 = 0.0;
  do
  {
    v13 = *(double *)(v5 + 8 * v11++ + 32);
    v12 = v12 + v13;
  }
  while (v10 != v11);
  v14 = COERCE_DOUBLE(sub_1C082B004(v5));
  v16 = v15;
  sub_1C077960C();
  if ((v16 & 1) != 0)
    goto LABEL_15;
  *(double *)&result = 0.0;
  v18 = (double)a2 - v12 / (double)v10;
  if (v18 != 0.0 && v14 != 0.0)
    *(double *)&result = v18 / v14;
  return result;
}

double sub_1C08320E8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  char *v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  __int128 v78;
  __int128 v79;
  _QWORD v80[3];
  uint64_t v81;
  uint64_t v82;
  uint64_t v83[3];
  uint64_t v84;
  uint64_t v85;
  uint64_t v86[2];
  uint64_t v87;
  uint64_t v88;
  _OWORD v89[2];
  uint64_t v90;
  char v91;
  char *v92;

  v68 = a3;
  v76 = a2;
  v74 = a1;
  v66 = a4;
  v65 = sub_1C106D6CC();
  v63 = *(_QWORD *)(v65 - 8);
  MEMORY[0x1E0C80A78](v65);
  v64 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C106C49C();
  v72 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v71 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C106ADE0();
  v69 = *(char **)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  *(_QWORD *)&v67 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1C07ACF80(&qword_1ED760E68);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1C07ACF80((uint64_t *)&unk_1ED75E9E0);
  *(_QWORD *)&v79 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v70 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v73 = (char *)&v63 - v19;
  MEMORY[0x1E0C80A78](v20);
  v77 = (char *)&v63 - v21;
  MEMORY[0x1E0C80A78](v22);
  v92 = (char *)&v63 - v23;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v63 - v25;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C484();
  *(_QWORD *)&v78 = v5;
  v84 = v5;
  v85 = MEMORY[0x1E0D24668];
  sub_1C079DFC4(v83);
  sub_1C106C4A8();
  v27 = sub_1C106D6C0();
  v81 = MEMORY[0x1E0DEB418];
  v82 = MEMORY[0x1E0D249F8];
  v80[0] = v27;
  v28 = sub_1C106BCBC();
  v87 = v28;
  v88 = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v86);
  sub_1C106C310();
  sub_1C0784B94((uint64_t)v80, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v83);
  sub_1C106C454();
  v29 = v12;
  v30 = v10;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v29);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v86);
  sub_1C0835044(v68, (uint64_t)v9, (uint64_t *)&unk_1ED762690);
  if (sub_1C07B2D80((uint64_t)v9, 1, v10) == 1)
  {
    sub_1C0784B94((uint64_t)v9, (uint64_t *)&unk_1ED762690);
    v31 = *(void (**)(char *, char *, uint64_t))(v79 + 16);
  }
  else
  {
    v32 = v67;
    (*((void (**)(_QWORD, char *, uint64_t))v69 + 4))(v67, v9, v30);
    v33 = v79;
    v31 = *(void (**)(char *, char *, uint64_t))(v79 + 16);
    v34 = v77;
    v31(v77, v26, v16);
    v84 = v78;
    v85 = MEMORY[0x1E0D24668];
    sub_1C079DFC4(v83);
    sub_1C106C4A8();
    sub_1C106AC60();
    v81 = MEMORY[0x1E0DEB070];
    v82 = MEMORY[0x1E0D249C8];
    v80[0] = v35;
    v87 = v28;
    v88 = MEMORY[0x1E0D23DC0];
    sub_1C079DFC4(v86);
    sub_1C106C0C4();
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v80);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v83);
    sub_1C07BB218(&qword_1EF631C58, (uint64_t *)&unk_1ED75E9E0);
    v36 = v92;
    sub_1C106BDF4();
    v37 = *(void (**)(char *, uint64_t))(v33 + 8);
    v37(v34, v16);
    (*((void (**)(uint64_t, uint64_t))v69 + 1))(v32, v30);
    v37(v26, v16);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v86);
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v26, v36, v16);
  }
  v38 = v16;
  v39 = v70;
  v31(v70, v26, v16);
  v68 = sub_1C07ACF80(&qword_1ED761300);
  v40 = swift_allocObject();
  v67 = xmmword_1C1079220;
  *(_OWORD *)(v40 + 16) = xmmword_1C1079220;
  v41 = v71;
  sub_1C106C4A8();
  v42 = sub_1C106B908();
  v43 = MEMORY[0x1E0D239D8];
  *(_QWORD *)(v40 + 56) = v42;
  *(_QWORD *)(v40 + 64) = v43;
  sub_1C079DFC4((uint64_t *)(v40 + 32));
  v44 = v78;
  sub_1C106C184();
  v69 = v26;
  v72 = *(_QWORD *)(v72 + 8);
  ((void (*)(char *, uint64_t))v72)(v41, v44);
  sub_1C07BB218(&qword_1ED7551B0, (uint64_t *)&unk_1ED75E9E0);
  v45 = v77;
  sub_1C106BD04();
  swift_bridgeObjectRelease();
  v46 = *(void (**)(char *, uint64_t))(v79 + 8);
  v46(v39, v38);
  v47 = swift_allocObject();
  *(_OWORD *)(v47 + 16) = v67;
  sub_1C106C4A8();
  *(_QWORD *)(v47 + 56) = v42;
  *(_QWORD *)(v47 + 64) = MEMORY[0x1E0D239D8];
  sub_1C079DFC4((uint64_t *)(v47 + 32));
  sub_1C106C184();
  ((void (*)(char *, uint64_t))v72)(v41, v44);
  v48 = v92;
  sub_1C106BD04();
  swift_bridgeObjectRelease();
  v46(v45, v38);
  sub_1C07BB218(&qword_1ED743DE8, (uint64_t *)&unk_1ED75E9E0);
  v49 = v73;
  sub_1C106BF38();
  v46(v48, v38);
  sub_1C07BB218(&qword_1ED75E9D8, (uint64_t *)&unk_1ED75E9E0);
  v50 = v75;
  v51 = sub_1C106BB00();
  v46(v49, v38);
  if (v50)
  {
    v46(v69, v38);
  }
  else
  {
    v53 = v69;
    if (v51 && (v54 = sub_1C0B5E10C(), v56 = v55, swift_release(), v56))
    {
      v57 = (uint64_t)v64;
      (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v64, v76, v65);
      sub_1C0821FFC(v57, v54, v56, (uint64_t)v89);
      v79 = v89[0];
      v78 = v89[1];
      v58 = v90;
      v59 = v91;
      v46(v53, v38);
      v60 = v66;
      v52 = v78;
      *(_OWORD *)v66 = v79;
      *(_OWORD *)(v60 + 16) = v52;
      *(_QWORD *)(v60 + 32) = v58;
      *(_BYTE *)(v60 + 40) = v59;
    }
    else
    {
      v46(v53, v38);
      v61 = v66;
      *(_QWORD *)(v66 + 32) = 0;
      *(_QWORD *)&v52 = 0;
      *(_OWORD *)v61 = 0u;
      *(_OWORD *)(v61 + 16) = 0u;
      *(_BYTE *)(v61 + 40) = -1;
    }
  }
  return *(double *)&v52;
}

uint64_t sub_1C08329C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, double *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t result;
  uint64_t (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  double *v45;
  _QWORD v46[3];
  uint64_t v47;
  uint64_t v48;
  char *v49;
  double *v50;
  uint64_t v51;
  char *v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;

  v55 = a1;
  v50 = a4;
  v61 = sub_1C106C040();
  v54 = *(_QWORD *)(v61 - 8);
  MEMORY[0x1E0C80A78](v61);
  v49 = (char *)v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v52 = (char *)v46 - v8;
  v9 = sub_1C106D6CC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v56 = 0;
  *((_QWORD *)&v56 + 1) = 0xE000000000000000;
  sub_1C1070774();
  sub_1C106FC94();
  v13 = *(_QWORD *)(a2 + 24);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v46[2] = v13;
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  v51 = v56;
  v46[1] = sub_1C07ACF80(&qword_1ED762CB8);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1C1078FC0;
  strcpy((char *)(v14 + 32), "behaviorType");
  *(_BYTE *)(v14 + 45) = 0;
  *(_WORD *)(v14 + 46) = -5120;
  sub_1C0824E00(v14, v15, v16, v17, v18, v19, v20, v21);
  v22 = sub_1C106D6C0();
  v23 = *(void (**)(char *, uint64_t))(v10 + 8);
  v47 = v9;
  v23(v12, v9);
  v24 = MEMORY[0x1E0DEB418];
  v25 = MEMORY[0x1E0D24A00];
  *(_QWORD *)(v14 + 72) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v14 + 80) = v25;
  *(_QWORD *)(v14 + 48) = v22;
  *(_QWORD *)(v14 + 88) = 0xD000000000000012;
  *(_QWORD *)(v14 + 96) = 0x80000001C10DDA10;
  v26 = a3;
  v27 = v52;
  v48 = v26;
  sub_1C0821B64();
  v28 = MEMORY[0x1E0D24968];
  *(_QWORD *)(v14 + 128) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v14 + 136) = v28;
  *(_QWORD *)(v14 + 104) = v29;
  *(_QWORD *)(v14 + 112) = v30;
  sub_1C106C01C();
  v58 = 0;
  v56 = 0u;
  v57 = 0u;
  v31 = v53;
  sub_1C106C1E4();
  if (v31)
  {
    swift_bridgeObjectRelease();
    sub_1C0784B94((uint64_t)&v56, (uint64_t *)&unk_1ED7626A0);
    return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v27, v61);
  }
  v53 = v23;
  swift_bridgeObjectRelease();
  sub_1C0784B94((uint64_t)&v56, (uint64_t *)&unk_1ED7626A0);
  v33 = *(uint64_t (**)(char *, uint64_t))(v54 + 8);
  result = v33(v27, v61);
  if ((v60 & 1) != 0 || v59 < 1)
    goto LABEL_10;
  v52 = (char *)v59;
  *(_QWORD *)&v56 = 0;
  *((_QWORD *)&v56 + 1) = 0xE000000000000000;
  v54 = 0;
  sub_1C1070774();
  sub_1C106FC94();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_1C1079220;
  strcpy((char *)(v34 + 32), "behaviorType");
  *(_BYTE *)(v34 + 45) = 0;
  *(_WORD *)(v34 + 46) = -5120;
  sub_1C0824E00(v34, v35, v36, v37, v38, v39, v40, v41);
  v42 = sub_1C106D6C0();
  v53(v12, v47);
  *(_QWORD *)(v34 + 72) = v24;
  *(_QWORD *)(v34 + 80) = v25;
  *(_QWORD *)(v34 + 48) = v42;
  v43 = v49;
  sub_1C106C01C();
  v58 = 0;
  v56 = 0u;
  v57 = 0u;
  v44 = v54;
  sub_1C106C1E4();
  if (v44)
  {
    swift_bridgeObjectRelease();
    sub_1C0784B94((uint64_t)&v56, (uint64_t *)&unk_1ED7626A0);
    return v33(v43, v61);
  }
  swift_bridgeObjectRelease();
  sub_1C0784B94((uint64_t)&v56, (uint64_t *)&unk_1ED7626A0);
  result = v33(v43, v61);
  if ((v60 & 1) != 0 || v59 < 1)
  {
LABEL_10:
    v45 = v50;
    *v50 = 0.0;
  }
  else
  {
    v45 = v50;
    *v50 = (double)(uint64_t)v52 / (double)v59;
  }
  *((_BYTE *)v45 + 8) = 0;
  return result;
}

uint64_t sub_1C0832EA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  double v23;
  _QWORD v24[3];
  uint64_t v25;
  _OWORD v26[2];
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;

  v24[1] = a1;
  v24[0] = a2;
  v30 = sub_1C106C040();
  v25 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v3 = (char *)v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1C106D6CC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v26[0] = 0;
  *((_QWORD *)&v26[0] + 1) = 0xE000000000000000;
  sub_1C1070774();
  sub_1C106FC94();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  sub_1C07ACF80(&qword_1ED762CB8);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C1078FC0;
  strcpy((char *)(v8 + 32), "behaviorType");
  *(_BYTE *)(v8 + 45) = 0;
  *(_WORD *)(v8 + 46) = -5120;
  sub_1C0824E00(v8, v9, v10, v11, v12, v13, v14, v15);
  v16 = sub_1C106D6C0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v17 = MEMORY[0x1E0D24A00];
  *(_QWORD *)(v8 + 72) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v8 + 80) = v17;
  *(_QWORD *)(v8 + 48) = v16;
  *(_QWORD *)(v8 + 88) = 0xD000000000000012;
  *(_QWORD *)(v8 + 96) = 0x80000001C10DDA10;
  sub_1C0821B64();
  v18 = MEMORY[0x1E0D24968];
  *(_QWORD *)(v8 + 128) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 136) = v18;
  *(_QWORD *)(v8 + 104) = v19;
  *(_QWORD *)(v8 + 112) = v20;
  sub_1C106C01C();
  v27 = 0;
  memset(v26, 0, sizeof(v26));
  v21 = v24[2];
  sub_1C106C1E4();
  if (v21)
  {
    swift_bridgeObjectRelease();
    sub_1C0784B94((uint64_t)v26, (uint64_t *)&unk_1ED7626A0);
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v3, v30);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1C0784B94((uint64_t)v26, (uint64_t *)&unk_1ED7626A0);
    result = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v3, v30);
    v23 = (double)v28;
    if (v29 & 1 | (v28 < 1))
      v23 = 0.0;
    *(double *)v24[0] = v23;
  }
  return result;
}

uint64_t sub_1C083318C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X5>, unint64_t a4@<X6>, unint64_t *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t *v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  _OWORD v42[2];
  uint64_t v43;
  unint64_t v44;

  v40 = a4;
  v41 = a1;
  v37 = a5;
  v7 = sub_1C106C040();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_1C106C3F4();
  *(_QWORD *)&v42[0] = 0;
  *((_QWORD *)&v42[0] + 1) = 0xE000000000000000;
  sub_1C1070774();
  sub_1C106FC94();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v11 = 0xD000000000000010;
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  sub_1C07ACF80(&qword_1ED762CB8);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1C1078FC0;
  v13 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v12 + 32) = 0xD000000000000010;
  *(_QWORD *)(v12 + 40) = 0x80000001C10DDA50;
  v14 = MEMORY[0x1E0D24968];
  *(_QWORD *)(v12 + 72) = v13;
  *(_QWORD *)(v12 + 80) = v14;
  *(_QWORD *)(v12 + 48) = a2;
  *(_QWORD *)(v12 + 56) = a3;
  v15 = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v12 + 88) = 7889261;
  *(_QWORD *)(v12 + 96) = 0xE300000000000000;
  v16 = MEMORY[0x1E0D24A00];
  *(_QWORD *)(v12 + 128) = v15;
  *(_QWORD *)(v12 + 136) = v16;
  *(_QWORD *)(v12 + 104) = v40;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C01C();
  v43 = 0;
  memset(v42, 0, sizeof(v42));
  v17 = v44;
  v18 = sub_1C106C3C4();
  if (v17)
  {
    swift_bridgeObjectRelease();
    sub_1C0784B94((uint64_t)v42, (uint64_t *)&unk_1ED7626A0);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  else
  {
    v20 = v18;
    swift_bridgeObjectRelease();
    sub_1C0784B94((uint64_t)v42, (uint64_t *)&unk_1ED7626A0);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    if (v20 >> 62)
      goto LABEL_19;
    v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
      v22 = v37;
      if (!v21)
        break;
      *(_QWORD *)&v42[0] = MEMORY[0x1E0DEE9D8];
      sub_1C09D33B0();
      if (v21 < 0)
      {
        __break(1u);
        result = swift_unexpectedError();
        __break(1u);
        return result;
      }
      v23 = 0;
      v24 = *(_QWORD *)&v42[0];
      v39 = v11 + 6;
      v40 = v20 & 0xC000000000000001;
      v38 = 0x80000001C10DDA70;
      v41 = v21;
      while (v21 != v23)
      {
        v44 = v24;
        if (v40)
          MEMORY[0x1C3BA70DC](v23, v20);
        else
          swift_retain();
        sub_1C0B5F164();
        v26 = v25;
        v27 = v20;
        sub_1C0B5EFE4();
        v29 = v28;
        v11 = v30;
        sub_1C0B5F164();
        v32 = v31;
        swift_release();
        v24 = v44;
        *(_QWORD *)&v42[0] = v44;
        v33 = *(_QWORD *)(v44 + 16);
        v34 = v33 + 1;
        if (v33 >= *(_QWORD *)(v44 + 24) >> 1)
        {
          v44 = v33 + 1;
          sub_1C09D33B0();
          v34 = v44;
          v24 = *(_QWORD *)&v42[0];
        }
        ++v23;
        *(_QWORD *)(v24 + 16) = v34;
        v35 = (_QWORD *)(v24 + 32 * v33);
        v35[4] = v26;
        v35[5] = v29;
        v35[6] = v11;
        v35[7] = v32;
        v21 = v41;
        v20 = v27;
        if (v41 == v23)
        {
          result = swift_bridgeObjectRelease();
          v22 = v37;
          goto LABEL_17;
        }
      }
      __break(1u);
LABEL_19:
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v21 = sub_1C10709B4();
      swift_bridgeObjectRelease();
    }
    result = swift_bridgeObjectRelease();
    v24 = MEMORY[0x1E0DEE9D8];
LABEL_17:
    *v22 = v24;
  }
  return result;
}

void sub_1C08335CC(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _OWORD v16[2];
  uint64_t v17;
  uint64_t v18;

  v15 = a1;
  v2 = sub_1C106C040();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106C3F4();
  *(_QWORD *)&v16[0] = 0;
  *((_QWORD *)&v16[0] + 1) = 0xE000000000000000;
  sub_1C1070774();
  sub_1C106FC94();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  v17 = 0;
  memset(v16, 0, sizeof(v16));
  sub_1C106C034();
  v6 = sub_1C106C3C4();
  if (v1)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_1C0784B94((uint64_t)v16, (uint64_t *)&unk_1ED7626A0);
  }
  else
  {
    v7 = v6;
    v8 = v15;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_1C0784B94((uint64_t)v16, (uint64_t *)&unk_1ED7626A0);
    *(_QWORD *)&v16[0] = MEMORY[0x1E0DEE9E0];
    if (v7 >> 62)
      goto LABEL_16;
    v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    while (1)
    {
      v10 = v8;
      if (!v9)
        break;
      v11 = 4;
      while (1)
      {
        if ((v7 & 0xC000000000000001) != 0)
        {
          v12 = MEMORY[0x1C3BA70DC](v11 - 4, v7);
        }
        else
        {
          v12 = *(_QWORD *)(v7 + 8 * v11);
          swift_retain();
        }
        v8 = (_QWORD *)(v11 - 3);
        if (__OFADD__(v11 - 4, 1))
          break;
        v18 = v12;
        sub_1C0833880((uint64_t *)v16);
        swift_release();
        ++v11;
        if (v8 == (_QWORD *)v9)
        {
          swift_bridgeObjectRelease_n();
          v13 = *(_QWORD *)&v16[0];
          goto LABEL_14;
        }
      }
      __break(1u);
LABEL_16:
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v9 = sub_1C10709B4();
    }
    swift_bridgeObjectRelease_n();
    v13 = MEMORY[0x1E0DEE9E0];
LABEL_14:
    *v10 = v13;
  }
}

uint64_t sub_1C0833880(uint64_t *a1)
{
  uint64_t v1;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_1C0B5F2CC();
  if (v1)
    goto LABEL_14;
  HIDWORD(v27) = v3;
  sub_1C0B5EFE4();
  v6 = v4;
  v7 = v5;
  sub_1C0B5E1C8();
  v26 = v8;
  LODWORD(v27) = v9;
  swift_isUniquelyReferenced_nonNull_native();
  v28 = *a1;
  v10 = v28;
  *a1 = 0x8000000000000000;
  v11 = sub_1C077D774(v6, v7);
  if (__OFADD__(*(_QWORD *)(v10 + 16), (v12 & 1) == 0))
  {
    __break(1u);
LABEL_14:
    swift_unexpectedError();
    __break(1u);
    goto LABEL_15;
  }
  v13 = v11;
  v14 = v12;
  sub_1C07ACF80(&qword_1EF631C70);
  if ((sub_1C107090C() & 1) != 0)
  {
    v15 = sub_1C077D774(v6, v7);
    if ((v14 & 1) == (v16 & 1))
    {
      v13 = v15;
      goto LABEL_7;
    }
LABEL_15:
    result = sub_1C1070D44();
    __break(1u);
    return result;
  }
LABEL_7:
  *a1 = v28;
  swift_bridgeObjectRelease();
  v17 = *a1;
  if ((v14 & 1) == 0)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0833A8C(&v28);
    sub_1C077CA74(v13, v6, v7, v28, v17);
  }
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  if ((v27 & 1) != 0)
    sub_1C07F2E00(HIDWORD(v27), v18, v19, v20, v21, v22, v23, v24, v26, v27);
  else
    sub_1C089FC58(v26, HIDWORD(v27));
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0833A8C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for PHPersonAgeType(0);
  sub_1C07803F8(&qword_1EF630460, type metadata accessor for PHPersonAgeType);
  result = sub_1C106F97C();
  *a1 = result;
  return result;
}

uint64_t sub_1C0833AF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t);
  uint64_t v24;
  double v25;
  uint64_t v26;
  char *v27;
  uint64_t result;
  uint64_t *v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  void *v68;
  uint64_t v69;
  _OWORD v70[2];
  uint64_t v71;

  v62 = a6;
  v63 = a7;
  v60 = a5;
  v57 = a4;
  v65 = a1;
  v67 = a8;
  v10 = sub_1C106C040();
  v59 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v58 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v54 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v54 - v16;
  MEMORY[0x1E0C80A78](v18);
  v61 = (char *)&v54 - v19;
  MEMORY[0x1E0C80A78](v20);
  v64 = (char *)&v54 - v21;
  v22 = sub_1C106D6CC();
  v23 = (void (*)(uint64_t))MEMORY[0x1E0D3C130];
  v24 = *(_QWORD *)(v22 - 8);
  v25 = MEMORY[0x1E0C80A78](v22);
  v27 = (char *)&v54 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, double))(v24 + 104))(v27, *MEMORY[0x1E0D3C0F0], v22, v25);
  sub_1C07803F8(qword_1ED744A50, v23);
  v66 = a2;
  LOBYTE(v23) = sub_1C106FAA8();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v22);
  if ((v23 & 1) != 0)
  {
    result = MEMORY[0x1E0DEE9E8];
    v29 = v67;
  }
  else
  {
    *(_QWORD *)&v70[0] = sub_1C0C6C44C(63, 0xE100000000000000, *(_QWORD *)(a3 + 16));
    sub_1C07ACF80(&qword_1ED762B70);
    sub_1C07BB218(&qword_1ED762430, &qword_1ED762B70);
    sub_1C106FA54();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v70[0] = 0;
    *((_QWORD *)&v70[0] + 1) = 0xE000000000000000;
    sub_1C1070774();
    sub_1C106FC94();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C106FC94();
    swift_bridgeObjectRelease();
    sub_1C106FC94();
    sub_1C106FC94();
    swift_bridgeObjectRelease();
    sub_1C106FC94();
    v55 = *((_QWORD *)&v70[0] + 1);
    v57 = *(_QWORD *)&v70[0];
    v56 = sub_1C07ACF80(&qword_1ED7614E0);
    v30 = swift_allocObject();
    v54 = xmmword_1C1079220;
    *(_OWORD *)(v30 + 16) = xmmword_1C1079220;
    *(_QWORD *)(v30 + 32) = sub_1C106D6C0();
    *(_QWORD *)&v70[0] = v30;
    sub_1C07ACF80(&qword_1ED761468);
    sub_1C07BB218(qword_1ED753BA8, &qword_1ED761468);
    sub_1C106C064();
    *(_QWORD *)&v70[0] = a3;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C07ACF80(&qword_1ED762B80);
    sub_1C07BB218(&qword_1ED761480, &qword_1ED762B80);
    v31 = v58;
    sub_1C106C064();
    sub_1C106C028();
    v32 = *(void (**)(char *, uint64_t))(v59 + 8);
    v32(v31, v10);
    v32(v14, v10);
    sub_1C07ACF80((uint64_t *)&unk_1ED7614D0);
    v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = v54;
    sub_1C106AC60();
    *(_QWORD *)(v33 + 32) = v34;
    *(_QWORD *)&v70[0] = v33;
    sub_1C07ACF80(&qword_1ED7612B8);
    sub_1C07BB218(&qword_1EF631C48, &qword_1ED7612B8);
    sub_1C106C064();
    v35 = v61;
    sub_1C106C028();
    v32(v14, v10);
    v32(v17, v10);
    v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_1C1078FC0;
    v37 = v63;
    *(_QWORD *)(v36 + 32) = v62;
    *(_QWORD *)(v36 + 40) = v37;
    *(_QWORD *)&v70[0] = v36;
    sub_1C106C064();
    v38 = v64;
    sub_1C106C028();
    v32(v17, v10);
    v32(v35, v10);
    v71 = 0;
    memset(v70, 0, sizeof(v70));
    v53 = MEMORY[0x1E0DEA978];
    v39 = v68;
    v40 = sub_1C106C1A8();
    if (v39)
    {
      swift_bridgeObjectRelease();
      sub_1C0784B94((uint64_t)v70, (uint64_t *)&unk_1ED7626A0);
      v32(v38, v10);
      if (qword_1ED762B18 != -1)
        swift_once();
      v41 = sub_1C106F544();
      sub_1C079E000(v41, (uint64_t)qword_1ED762AF8);
      v42 = v39;
      v43 = v39;
      v44 = sub_1C106F538();
      v45 = sub_1C1070390();
      if (os_log_type_enabled(v44, v45))
      {
        v46 = (uint8_t *)swift_slowAlloc();
        v47 = swift_slowAlloc();
        *(_QWORD *)&v70[0] = v47;
        *(_DWORD *)v46 = 136315138;
        swift_getErrorValue();
        v48 = sub_1C1070D74();
        v69 = sub_1C0788DAC(v48, v49, (uint64_t *)v70);
        sub_1C10705AC();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1C0771000, v44, v45, "Error running dbQuery : %s", v46, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BA8270](v47, -1, -1);
        MEMORY[0x1C3BA8270](v46, -1, -1);
      }
      else
      {

      }
      v29 = v67;

      result = MEMORY[0x1E0DEE9E8];
    }
    else
    {
      v50 = v40;
      swift_bridgeObjectRelease();
      sub_1C0784B94((uint64_t)v70, (uint64_t *)&unk_1ED7626A0);
      v51 = ((uint64_t (*)(char *, uint64_t))v32)(v38, v10);
      MEMORY[0x1E0C80A78](v51);
      v53 = v66;
      v52 = sub_1C0828A58((void (*)(__int128 *__return_ptr, _QWORD *))sub_1C083442C, (uint64_t)(&v54 - 2), v50);
      swift_bridgeObjectRelease();
      result = sub_1C0898DF8(v52);
      v29 = v67;
    }
  }
  *v29 = result;
  return result;
}

void sub_1C08342E0(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  double v7;
  uint64_t v8;
  _BYTE *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[48];

  v6 = sub_1C0780478();
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = *a1;
  v10 = a1[1];
  (*(void (**)(_BYTE *, uint64_t, double))(v12 + 16))(v9, a2, v7);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0821FFC((uint64_t)v9, v11, v10, (uint64_t)v13);
  sub_1C07DFF44((uint64_t)v13, a3);
  sub_1C0782CFC();
}

uint64_t sub_1C0834388()
{
  return sub_1C082E33C();
}

void sub_1C08343A4(uint64_t a1)
{
  uint64_t v1;

  sub_1C082DB00(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32));
}

uint64_t sub_1C08343C0()
{
  return sub_1C07753B8((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

void sub_1C08343D0(uint64_t a1)
{
  uint64_t v1;

  sub_1C082DE34(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32));
}

uint64_t sub_1C08343DC()
{
  return sub_1C082E4FC();
}

void sub_1C08343F4(uint64_t a1)
{
  uint64_t v1;

  sub_1C082E6B0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1C083440C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_1C0833AF0(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], a2);
}

void sub_1C083442C(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1C08342E0(a1, *(_QWORD *)(v2 + 16), a2);
}

void sub_1C0834448(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  double v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  double *v22;
  double v23;
  uint64_t v24;
  double *v25;
  double v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char *v30;
  char *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  unint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  uint64_t v54;
  char v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  unint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;

  v3 = a1[1];
  v4 = sub_1C1070BE8();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_1C0834A28(0, v3, 1, a1);
      return;
    }
    goto LABEL_124;
  }
  v5 = v4;
  sub_1C08CBEA0(v3 / 2);
  v87 = a1;
  v88 = v6;
  v92 = v7;
  v90 = v3;
  if (v3 <= 0)
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
    v29 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_90:
    if (v29 < 2)
    {
LABEL_101:
      swift_bridgeObjectRelease();
      if (v90 >= -1)
      {
        *(_QWORD *)(v88 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_129;
    }
    v80 = *v87;
    while (1)
    {
      v81 = v29 - 2;
      if (v29 < 2)
        break;
      if (!v80)
        goto LABEL_133;
      v82 = *(_QWORD *)&v10[16 * v81 + 32];
      v83 = *(_QWORD *)&v10[16 * v29 + 24];
      sub_1C0834A80((char *)(v80 + 8 * v82), (char *)(v80 + 8 * *(_QWORD *)&v10[16 * v29 + 16]), v80 + 8 * v83, v92);
      if (v1)
        goto LABEL_86;
      if (v83 < v82)
        goto LABEL_119;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v10 = sub_1C0861BC0();
      if (v81 >= *((_QWORD *)v10 + 2))
        goto LABEL_120;
      v84 = &v10[16 * v81 + 32];
      *(_QWORD *)v84 = v82;
      *((_QWORD *)v84 + 1) = v83;
      v85 = *((_QWORD *)v10 + 2);
      if (v29 > v85)
        goto LABEL_121;
      memmove(&v10[16 * v29 + 16], &v10[16 * v29 + 32], 16 * (v85 - v29));
      *((_QWORD *)v10 + 2) = v85 - 1;
      v29 = v85 - 1;
      if (v85 <= 2)
        goto LABEL_101;
    }
LABEL_118:
    __break(1u);
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
    return;
  }
  v8 = 0;
  v9 = *a1;
  v86 = *a1 - 8;
  v10 = (char *)MEMORY[0x1E0DEE9D8];
  v89 = v5;
  v91 = *a1;
  while (1)
  {
    v11 = v8++;
    if (v8 < v3)
    {
      v12 = *(double *)(v9 + 8 * v8);
      v13 = *(double *)(v9 + 8 * v11);
      v8 = v11 + 2;
      if (v11 + 2 < v3)
      {
        v14 = v12;
        while (1)
        {
          v15 = v14;
          v14 = *(double *)(v9 + 8 * v8);
          if (v12 < v13 == v14 >= v15)
            break;
          if (++v8 >= v3)
          {
            v8 = v3;
            break;
          }
        }
      }
      if (v12 < v13)
      {
        if (v8 < v11)
          goto LABEL_126;
        if (v11 < v8)
        {
          v16 = (uint64_t *)(v86 + 8 * v8);
          v17 = v8;
          v18 = v11;
          v19 = (uint64_t *)(v9 + 8 * v11);
          do
          {
            if (v18 != --v17)
            {
              if (!v9)
                goto LABEL_132;
              v20 = *v19;
              *v19 = *v16;
              *v16 = v20;
            }
            ++v18;
            --v16;
            ++v19;
          }
          while (v18 < v17);
        }
      }
    }
    if (v8 < v3)
    {
      if (__OFSUB__(v8, v11))
        goto LABEL_123;
      if (v8 - v11 < v5)
      {
        v21 = v11 + v5;
        if (__OFADD__(v11, v5))
          goto LABEL_127;
        if (v21 >= v3)
          v21 = v3;
        if (v21 < v11)
          goto LABEL_128;
        if (v8 != v21)
        {
          v22 = (double *)(v86 + 8 * v8);
          do
          {
            v23 = *(double *)(v9 + 8 * v8);
            v24 = v11;
            v25 = v22;
            do
            {
              v26 = *v25;
              if (v23 >= *v25)
                break;
              if (!v9)
                goto LABEL_130;
              *v25 = v23;
              v25[1] = v26;
              --v25;
              ++v24;
            }
            while (v8 != v24);
            ++v8;
            ++v22;
          }
          while (v8 != v21);
          v8 = v21;
        }
      }
    }
    if (v8 < v11)
      goto LABEL_122;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_1C0861AD0(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v28 = *((_QWORD *)v10 + 2);
    v27 = *((_QWORD *)v10 + 3);
    v29 = v28 + 1;
    v9 = v91;
    if (v28 >= v27 >> 1)
    {
      v79 = sub_1C0861AD0((char *)(v27 > 1), v28 + 1, 1, v10);
      v9 = v91;
      v10 = v79;
    }
    *((_QWORD *)v10 + 2) = v29;
    v30 = v10 + 32;
    v31 = &v10[16 * v28 + 32];
    *(_QWORD *)v31 = v11;
    *((_QWORD *)v31 + 1) = v8;
    if (v28)
      break;
    v29 = 1;
LABEL_81:
    v5 = v89;
    v3 = v90;
    if (v8 >= v90)
      goto LABEL_90;
  }
  while (1)
  {
    v32 = v29 - 1;
    if (v29 >= 4)
    {
      v37 = &v30[16 * v29];
      v38 = *((_QWORD *)v37 - 8);
      v39 = *((_QWORD *)v37 - 7);
      v43 = __OFSUB__(v39, v38);
      v40 = v39 - v38;
      if (v43)
        goto LABEL_107;
      v42 = *((_QWORD *)v37 - 6);
      v41 = *((_QWORD *)v37 - 5);
      v43 = __OFSUB__(v41, v42);
      v35 = v41 - v42;
      v36 = v43;
      if (v43)
        goto LABEL_108;
      v44 = v29 - 2;
      v45 = &v30[16 * v29 - 32];
      v47 = *(_QWORD *)v45;
      v46 = *((_QWORD *)v45 + 1);
      v43 = __OFSUB__(v46, v47);
      v48 = v46 - v47;
      if (v43)
        goto LABEL_109;
      v43 = __OFADD__(v35, v48);
      v49 = v35 + v48;
      if (v43)
        goto LABEL_111;
      if (v49 >= v40)
      {
        v67 = &v30[16 * v32];
        v69 = *(_QWORD *)v67;
        v68 = *((_QWORD *)v67 + 1);
        v43 = __OFSUB__(v68, v69);
        v70 = v68 - v69;
        if (v43)
          goto LABEL_117;
        v60 = v35 < v70;
        goto LABEL_70;
      }
    }
    else
    {
      if (v29 != 3)
      {
        v61 = *((_QWORD *)v10 + 4);
        v62 = *((_QWORD *)v10 + 5);
        v43 = __OFSUB__(v62, v61);
        v54 = v62 - v61;
        v55 = v43;
        goto LABEL_64;
      }
      v34 = *((_QWORD *)v10 + 4);
      v33 = *((_QWORD *)v10 + 5);
      v43 = __OFSUB__(v33, v34);
      v35 = v33 - v34;
      v36 = v43;
    }
    if ((v36 & 1) != 0)
      goto LABEL_110;
    v44 = v29 - 2;
    v50 = &v30[16 * v29 - 32];
    v52 = *(_QWORD *)v50;
    v51 = *((_QWORD *)v50 + 1);
    v53 = __OFSUB__(v51, v52);
    v54 = v51 - v52;
    v55 = v53;
    if (v53)
      goto LABEL_112;
    v56 = &v30[16 * v32];
    v58 = *(_QWORD *)v56;
    v57 = *((_QWORD *)v56 + 1);
    v43 = __OFSUB__(v57, v58);
    v59 = v57 - v58;
    if (v43)
      goto LABEL_114;
    if (__OFADD__(v54, v59))
      goto LABEL_116;
    if (v54 + v59 >= v35)
    {
      v60 = v35 < v59;
LABEL_70:
      if (v60)
        v32 = v44;
      goto LABEL_72;
    }
LABEL_64:
    if ((v55 & 1) != 0)
      goto LABEL_113;
    v63 = &v30[16 * v32];
    v65 = *(_QWORD *)v63;
    v64 = *((_QWORD *)v63 + 1);
    v43 = __OFSUB__(v64, v65);
    v66 = v64 - v65;
    if (v43)
      goto LABEL_115;
    if (v66 < v54)
      goto LABEL_81;
LABEL_72:
    v71 = v10;
    v72 = v32 - 1;
    if (v32 - 1 >= v29)
    {
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
      goto LABEL_118;
    }
    if (!v9)
      goto LABEL_131;
    v73 = &v30[16 * v72];
    v74 = *(_QWORD *)v73;
    v75 = v30;
    v76 = &v30[16 * v32];
    v77 = *((_QWORD *)v76 + 1);
    sub_1C0834A80((char *)(v9 + 8 * *(_QWORD *)v73), (char *)(v9 + 8 * *(_QWORD *)v76), v9 + 8 * v77, v92);
    if (v1)
      break;
    if (v77 < v74)
      goto LABEL_104;
    if (v32 > *((_QWORD *)v71 + 2))
      goto LABEL_105;
    *(_QWORD *)v73 = v74;
    *(_QWORD *)&v75[16 * v72 + 8] = v77;
    v78 = *((_QWORD *)v71 + 2);
    if (v32 >= v78)
      goto LABEL_106;
    v10 = v71;
    v29 = v78 - 1;
    memmove(v76, v76 + 16, 16 * (v78 - 1 - v32));
    v30 = v75;
    *((_QWORD *)v71 + 2) = v78 - 1;
    v9 = v91;
    if (v78 <= 2)
      goto LABEL_81;
  }
LABEL_86:
  swift_bridgeObjectRelease();
  if (v90 < -1)
    goto LABEL_125;
  *(_QWORD *)(v88 + 16) = 0;
  swift_bridgeObjectRelease();
}

uint64_t sub_1C0834A28(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  double *v8;
  double v9;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = *a4 + 8 * a3 - 8;
    while (2)
    {
      v6 = *(double *)(v4 + 8 * a3);
      v7 = result;
      v8 = (double *)v5;
      do
      {
        v9 = *v8;
        if (v6 >= *v8)
          break;
        if (!v4)
        {
          __break(1u);
          return result;
        }
        *v8 = v6;
        v8[1] = v9;
        --v8;
        ++v7;
      }
      while (a3 != v7);
      ++a3;
      v5 += 8;
      if (a3 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_1C0834A80(char *a1, char *a2, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  double v14;
  BOOL v15;
  double *v18;
  char *v19;
  double v20;
  BOOL v21;
  BOOL v22;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = a2 - a1;
  v9 = (a2 - a1) / 8;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 8;
  if (v9 >= v11)
  {
    sub_1C09D2098(a2, (uint64_t)(a3 - (_QWORD)a2) / 8, a4);
    v12 = &v4[8 * v11];
    if (v7 >= v6 || v10 < 8)
      goto LABEL_39;
    v18 = (double *)(a3 - 8);
    while (1)
    {
      v19 = (char *)(v18 + 1);
      v20 = *((double *)v6 - 1);
      if (*((double *)v12 - 1) >= v20)
      {
        v22 = v19 != v12 || v18 >= (double *)v12;
        v20 = *((double *)v12 - 1);
        v12 -= 8;
        if (!v22)
          goto LABEL_35;
      }
      else
      {
        v21 = v19 != v6 || v18 >= (double *)v6;
        v6 -= 8;
        if (!v21)
          goto LABEL_35;
      }
      *v18 = v20;
LABEL_35:
      --v18;
      if (v6 <= v7 || v12 <= v4)
        goto LABEL_39;
    }
  }
  sub_1C09D2098(a1, (a2 - a1) / 8, a4);
  v12 = &v4[8 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 8)
  {
    while (1)
    {
      v14 = *(double *)v6;
      if (*(double *)v6 < *(double *)v4)
        break;
      v14 = *(double *)v4;
      v15 = v7 == v4;
      v4 += 8;
      if (!v15)
        goto LABEL_11;
LABEL_12:
      v7 += 8;
      if (v4 >= v12 || (unint64_t)v6 >= a3)
        goto LABEL_17;
    }
    v15 = v7 == v6;
    v6 += 8;
    if (v15)
      goto LABEL_12;
LABEL_11:
    *(double *)v7 = v14;
    goto LABEL_12;
  }
LABEL_17:
  v6 = v7;
LABEL_39:
  sub_1C09D2098(v4, (v12 - v4) / 8, v6);
  return 1;
}

void sub_1C0834BF8(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  sub_1C090B350();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C0834C2C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t result;
  _BYTE v26[40];
  __int128 v27[2];
  __int128 v28[2];
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;

  sub_1C090A414(&v32);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_retain();
  sub_1C090A70C();
  v7 = v30;
  if (!v30)
  {
LABEL_14:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1C0827370();
    return swift_release();
  }
  while (1)
  {
    v8 = v29;
    sub_1C077DD60(&v31, (uint64_t)v28);
    v9 = *a5;
    v11 = sub_1C077D774(v8, v7);
    v12 = *(_QWORD *)(v9 + 16);
    v13 = (v10 & 1) == 0;
    v14 = v12 + v13;
    if (__OFADD__(v12, v13))
      break;
    v15 = v10;
    if (*(_QWORD *)(v9 + 24) >= v14)
    {
      if ((a4 & 1) != 0)
      {
        if ((v10 & 1) != 0)
          goto LABEL_9;
      }
      else
      {
        sub_1C07ACF80(&qword_1ED744890);
        sub_1C1070918();
        if ((v15 & 1) != 0)
          goto LABEL_9;
      }
    }
    else
    {
      sub_1C0A4B6D8(v14, a4 & 1);
      v16 = sub_1C077D774(v8, v7);
      if ((v15 & 1) != (v17 & 1))
        goto LABEL_17;
      v11 = v16;
      if ((v15 & 1) != 0)
      {
LABEL_9:
        v18 = 5 * v11;
        sub_1C07D6D1C(*(_QWORD *)(*a5 + 56) + 8 * v18, (uint64_t)v26);
        sub_1C07D6D1C((uint64_t)v26, (uint64_t)v27);
        _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v26);
        _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v28);
        swift_bridgeObjectRelease();
        v19 = *(_QWORD *)(*a5 + 56) + 8 * v18;
        _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v19);
        sub_1C077DD60(v27, v19);
        goto LABEL_13;
      }
    }
    v20 = (_QWORD *)*a5;
    *(_QWORD *)(*a5 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    v21 = (uint64_t *)(v20[6] + 16 * v11);
    *v21 = v8;
    v21[1] = v7;
    sub_1C077DD60(v28, v20[7] + 40 * v11);
    v22 = v20[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_16;
    v20[2] = v24;
LABEL_13:
    sub_1C090A70C();
    v7 = v30;
    a4 = 1;
    if (!v30)
      goto LABEL_14;
  }
  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  result = sub_1C1070D44();
  __break(1u);
  return result;
}

uint64_t sub_1C0834E68(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1C0834E74()
{
  return sub_1C07753B8((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

void sub_1C0834E84(uint64_t a1)
{
  uint64_t v1;

  sub_1C082D324(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1C0834E9C(uint64_t a1)
{
  uint64_t v1;

  sub_1C082BED0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1C0834EB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EntityInteractionHistogramDatabaseTable.CustomAttributesTableConfig.Property();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0834EFC(uint64_t a1)
{
  char v1;

  sub_1C082CCF0(a1);
  return v1 & 1;
}

uint64_t sub_1C0834F18(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (!a3)
    return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return result;
}

uint64_t sub_1C0834F2C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (!a3)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1C0834F40(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for EntityInteractionHistogramDatabaseTable.CustomAttributesTableConfig.Property();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double sub_1C0834F7C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1C08320E8(a1, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

void sub_1C0834F98(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1C082BB00(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_1C0834FC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1C0831030(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

void sub_1C0834FDC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1C0831628(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(uint64_t (**)(uint64_t, uint64_t))(v2 + 40), *(_QWORD *)(v2 + 48), a2);
}

uint64_t sub_1C0834FFC@<X0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t v2;

  return sub_1C08329C8(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1C0835014@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0832EA8(a1, a2);
}

void sub_1C083502C(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_1C083025C(*(_QWORD *)(v1 + 24), a1);
}

void sub_1C0835044(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = sub_1C0778588(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v3, v4, v5);
  sub_1C0778534();
}

uint64_t sub_1C0835078()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1C077AE98();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

double sub_1C08350E0(double a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1C077AE98();
  return sub_1C082F4EC(a1, *(double *)(v1+ ((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64)+ ((*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80))+ 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1C083512C@<X0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t v2;

  return sub_1C082F5A0(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(double (**)(double))(v2 + 40), *(_QWORD *)(v2 + 48), a2);
}

uint64_t sub_1C083514C(uint64_t a1)
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

uint64_t sub_1C08351C0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0835234@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C0830528(a1, a2);
}

uint64_t sub_1C083524C@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1C083318C(a1, *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), a2);
}

void sub_1C083526C(_QWORD *a1@<X8>)
{
  sub_1C08335CC(a1);
}

void sub_1C0835288(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  sub_1C08307B0(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

void sub_1C08352A4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_1C0778588(a1, a2, a3);
  sub_1C0782950(v3);
  sub_1C0778534();
}

void sub_1C08352C4(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C083442C(a1, a2);
}

void sub_1C08352E0()
{
  sub_1C1070E04();
  type metadata accessor for CachedBehaviorDatabaseHistogramManager.BehaviorHistogramCacheKey(0);
  sub_1C0780478();
  sub_1C0794BAC((unint64_t *)&qword_1ED744A48, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C130], MEMORY[0x1E0D3C148]);
  sub_1C106FA0C();
  sub_1C077671C();
}

BOOL sub_1C0835350(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v3;
  uint64_t v4;

  if (*a1 != *a2)
    return 0;
  type metadata accessor for CachedBehaviorDatabaseHistogramManager.BehaviorHistogramCacheKey(0);
  sub_1C0780478();
  sub_1C0794BAC((unint64_t *)&qword_1ED744A60, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C130], MEMORY[0x1E0D3C158]);
  sub_1C078AB24();
  sub_1C078AB24();
  return v4 == v3;
}

uint64_t sub_1C08353F4()
{
  sub_1C1070DF8();
  sub_1C079D264();
  type metadata accessor for CachedBehaviorDatabaseHistogramManager.BehaviorHistogramCacheKey(0);
  sub_1C0780478();
  sub_1C0794BAC((unint64_t *)&qword_1ED744A48, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C130], MEMORY[0x1E0D3C148]);
  sub_1C07A43DC();
  return sub_1C1070E4C();
}

uint64_t sub_1C0835470()
{
  sub_1C1070DF8();
  sub_1C079D264();
  sub_1C0780478();
  sub_1C0794BAC((unint64_t *)&qword_1ED744A48, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C130], MEMORY[0x1E0D3C148]);
  sub_1C07A43DC();
  return sub_1C1070E4C();
}

void sub_1C08354E8()
{
  _QWORD *v0;
  uint64_t v1;
  _BYTE *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_1C077AE5C();
  v3 = v0;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v12 = sub_1C0794D30();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v13);
  sub_1C0778544();
  v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v7, v5);
  v15 = &v2[*(int *)(v12 + 20)];
  v16 = sub_1C0780478();
  v23 = v9;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v15, v9, v16);
  *v2 = v14;
  sub_1C077F040();
  v17 = v3[17];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C089AB5C((uint64_t)v2, v17);
  v19 = v18;
  swift_bridgeObjectRelease();
  if (!v19 || (sub_1C07ACF80(qword_1ED7453C0), (swift_dynamicCast() & 1) == 0))
  {
    v20 = v3[10];
    v21 = v3[11];
    sub_1C07A9480(v3 + 7, v20);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 8))(v11, v23, v7, v5, v20, v21);
    if (!v1)
    {
      sub_1C077F040();
      v22 = swift_unknownObjectRetain();
      sub_1C08385F8(v22, (uint64_t)v2, v3 + 17, v7, v5);
      swift_endAccess();
    }
  }
  sub_1C083867C((uint64_t)v2);
  sub_1C07757D0();
}

void sub_1C083568C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  char v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1C077AE5C();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  sub_1C0794D30();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  sub_1C0778564();
  v10 = (_BYTE *)(v9 - v8);
  v11 = sub_1C07814F0();
  v13 = v12(v11);
  v14 = sub_1C07814F0();
  v15(v14);
  *v10 = v13;
  sub_1C077F040();
  v16 = swift_unknownObjectRetain();
  sub_1C08385F8(v16, (uint64_t)v10, v0 + 17, v4, v2);
  swift_endAccess();
  v18 = v0[10];
  v17 = v0[11];
  sub_1C07A9480(v0 + 7, v18);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 16))(v6, v4, v2, v18, v17);
  sub_1C083867C((uint64_t)v10);
  sub_1C07757D0();
}

void sub_1C0835794()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v0;
  sub_1C0794D30();
  sub_1C07ACF80(qword_1ED7453C0);
  sub_1C0794BAC(qword_1EF631C90, type metadata accessor for CachedBehaviorDatabaseHistogramManager.BehaviorHistogramCacheKey, (uint64_t)&unk_1C107B880);
  v3 = sub_1C106F97C();
  sub_1C077F040();
  v2[17] = v3;
  swift_bridgeObjectRelease();
  v4 = v2[10];
  v5 = v2[11];
  sub_1C07A9480(v2 + 7, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
  if (!v1)
  {
    sub_1C07A9480(v2 + 12, v2[15]);
    sub_1C079FCE4();
  }
}

uint64_t sub_1C0835884()
{
  uint64_t v0;

  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 16);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 56);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 96);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C08358B8()
{
  sub_1C0835884();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CachedBehaviorDatabaseHistogramManager()
{
  return objc_opt_self();
}

void sub_1C08358F8()
{
  sub_1C08354E8();
}

void sub_1C0835918()
{
  sub_1C083568C();
}

void sub_1C0835938()
{
  sub_1C0835794();
}

void sub_1C0835958()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C07A22EC();
  sub_1C106BCE0();
  if (!v1)
  {
    sub_1C07A9480((_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 48));
    sub_1C079FCE4();
  }
}

uint64_t sub_1C08359E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _WORD v5[8];

  v0 = sub_1C106C040();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  strcpy((char *)v5, "DELETE FROM ");
  HIBYTE(v5[6]) = 0;
  v5[7] = -5120;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106C034();
  sub_1C106C694();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return swift_bridgeObjectRelease();
}

void sub_1C0835AE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE v56[40];
  _BYTE v57[48];

  sub_1C077AE5C();
  v50 = v12;
  v14 = v13;
  v16 = v15;
  v47 = sub_1C0780478();
  v49 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  sub_1C0778564();
  v48 = v18 - v17;
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v19);
  sub_1C0778564();
  v22 = v21 - v20;
  v23 = type metadata accessor for DecayingHistogramState();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v24);
  sub_1C077AF80();
  v27 = (_QWORD *)(v25 - v26);
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v42 - v29;
  v52 = v16;
  v53 = v14;
  v31 = v14;
  v32 = v50;
  v54 = v10;
  v55 = v50;
  sub_1C1070564();
  sub_1C106BA70();
  if (!v11)
  {
    v45 = v27;
    v46 = v30;
    v33 = v49;
    v51 = v10;
    v44 = v16;
    v34 = v48;
    v43 = v31;
    if (!a10)
    {
      v35 = v32;
      v42 = 0;
      sub_1C106ADE0();
      v36 = v22;
      sub_1C0788B90(v22);
      v37 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D33AE0]), sel_init);
      v38 = v45;
      v39 = (uint64_t)v45 + *(int *)(v23 + 20);
      sub_1C0788B90(v39);
      *v38 = v37;
      sub_1C0806880(v36, v39);
      v40 = (uint64_t)v46;
      sub_1C0838FBC((uint64_t)v38, (uint64_t)v46, (uint64_t (*)(_QWORD))type metadata accessor for DecayingHistogramState);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v34, v35, v47);
      v41 = v51;
      sub_1C0784AC0(v51 + 24, (uint64_t)v57);
      sub_1C0784AC0(v41 + 64, (uint64_t)v56);
      (*(void (**)(uint64_t, uint64_t, _BYTE *, _BYTE *))(v43 + 152))(v40, v34, v57, v56);
    }
  }
  sub_1C07757D0();
}

uint64_t sub_1C0835D1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD v30[2];
  char *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  _OWORD v40[2];
  uint64_t v41;
  uint64_t v42;

  v35 = a1;
  v33 = a6;
  v30[0] = sub_1C106D6CC();
  v32 = *(_QWORD *)(v30[0] - 8);
  MEMORY[0x1E0C80A78](v30[0]);
  v31 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_1C106C040();
  v37 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v12 = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v40[0] = 0;
  *((_QWORD *)&v40[0] + 1) = 0xE000000000000000;
  sub_1C1070774();
  sub_1C106FC94();
  v34 = a2;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  sub_1C07ACF80(&qword_1ED762CB8);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1C1078FC0;
  *(_QWORD *)(v13 + 32) = 1701869940;
  *(_QWORD *)(v13 + 40) = 0xE400000000000000;
  v14 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 24);
  v30[1] = a4;
  v15 = a4;
  v16 = a5;
  v17 = v14(v15, a5);
  v18 = MEMORY[0x1E0DEB418];
  v19 = MEMORY[0x1E0D24A00];
  *(_QWORD *)(v13 + 72) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v13 + 80) = v19;
  *(_QWORD *)(v13 + 48) = v17;
  strcpy((char *)(v13 + 88), "behaviorType");
  *(_BYTE *)(v13 + 101) = 0;
  *(_WORD *)(v13 + 102) = -5120;
  v20 = sub_1C106D6C0();
  *(_QWORD *)(v13 + 128) = v18;
  *(_QWORD *)(v13 + 136) = v19;
  *(_QWORD *)(v13 + 104) = v20;
  sub_1C106C01C();
  v41 = 0;
  memset(v40, 0, sizeof(v40));
  v21 = v36;
  sub_1C106C1E4();
  if (v21)
  {
    swift_bridgeObjectRelease();
    sub_1C0784B94((uint64_t)v40, (uint64_t *)&unk_1ED7626A0);
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v12, v42);
  }
  else
  {
    v24 = v31;
    v23 = v32;
    v25 = a3;
    v36 = v16;
    v26 = v33;
    v27 = v34;
    swift_bridgeObjectRelease();
    sub_1C0784B94((uint64_t)v40, (uint64_t *)&unk_1ED7626A0);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v12, v42);
    v28 = v39;
    if (v39 >> 60 == 15)
    {
      result = 0;
    }
    else
    {
      v29 = v38;
      (*(void (**)(char *, uint64_t, _QWORD))(v23 + 16))(v24, v25, v30[0]);
      sub_1C0784AC0(v27 + 24, (uint64_t)v40);
      sub_1C0784AC0(v27 + 64, (uint64_t)&v38);
      result = (*(uint64_t (**)(uint64_t, unint64_t, char *, _OWORD *, uint64_t *))(v36 + 160))(v29, v28, v24, v40, &v38);
    }
    *v26 = result;
  }
  return result;
}

void sub_1C083605C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;

  sub_1C077AE5C();
  a19 = v21;
  a20 = v22;
  v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 112))(v24, v23);
  if (!v20)
  {
    v27 = v25;
    v28 = v26;
    a10 = &a9;
    MEMORY[0x1E0C80A78](v25);
    sub_1C07A22EC();
    sub_1C106BCE0();
    sub_1C07B3374(v27, v28);
  }
  sub_1C07757D0();
}

uint64_t sub_1C0836130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;

  v27 = a4;
  v28 = a5;
  v26 = a3;
  v29 = a1;
  v33 = sub_1C106C040();
  v30 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1C106D6CC();
  v24 = *(_QWORD *)(v11 - 8);
  v25 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = 0;
  v32 = 0xE000000000000000;
  sub_1C1070774();
  sub_1C106FC94();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  v23[1] = v31;
  sub_1C07ACF80(&qword_1ED762CB8);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1C1078A20;
  *(_QWORD *)(v14 + 32) = 1701869940;
  *(_QWORD *)(v14 + 40) = 0xE400000000000000;
  v15 = (*(uint64_t (**)(uint64_t, uint64_t))(a7 + 24))(a6, a7);
  v16 = MEMORY[0x1E0DEB418];
  v17 = MEMORY[0x1E0D24A00];
  *(_QWORD *)(v14 + 72) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v14 + 80) = v17;
  *(_QWORD *)(v14 + 48) = v15;
  strcpy((char *)(v14 + 88), "behaviorType");
  *(_BYTE *)(v14 + 101) = 0;
  *(_WORD *)(v14 + 102) = -5120;
  (*(void (**)(uint64_t, uint64_t))(a7 + 64))(a6, a7);
  v18 = sub_1C106D6C0();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v25);
  *(_QWORD *)(v14 + 128) = v16;
  *(_QWORD *)(v14 + 136) = v17;
  *(_QWORD *)(v14 + 104) = v18;
  *(_QWORD *)(v14 + 144) = 1635017060;
  *(_QWORD *)(v14 + 152) = 0xE400000000000000;
  v19 = MEMORY[0x1E0D235A8];
  *(_QWORD *)(v14 + 184) = MEMORY[0x1E0CB0338];
  *(_QWORD *)(v14 + 192) = v19;
  v20 = v27;
  v21 = v28;
  *(_QWORD *)(v14 + 160) = v27;
  *(_QWORD *)(v14 + 168) = v21;
  sub_1C07B0E28(v20, v21);
  sub_1C106C01C();
  sub_1C106C694();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v33);
  return swift_bridgeObjectRelease();
}

void sub_1C08363C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  sub_1C0835AE4(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

#error "1C08363DC: call analysis failed (funcsize=5)"

void sub_1C08363E8()
{
  sub_1C0835958();
}

void sub_1C08363FC(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC24IntelligencePlatformCore16BehaviorDatabase_pool);
  swift_retain();
  sub_1C08392B0();
  v7 = v6;
  a2[3] = &type metadata for BehaviorDatabaseHistogramManager;
  a2[4] = &off_1E7A0D940;
  v8 = (_QWORD *)swift_allocObject();
  *a2 = v8;
  v8[8] = type metadata accessor for BehaviorDatabaseHistogramKeyProvider(0);
  v8[9] = &off_1E7A0D840;
  v8[5] = v7;
  sub_1C0784AC0(a1, (uint64_t)(v8 + 10));
  sub_1C07A50FC();
  v8[2] = v9;
  v8[3] = 0xE90000000000006DLL;
  v8[4] = v5;
}

uint64_t sub_1C08364B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OBJC_IVAR____TtC24IntelligencePlatformCore36BehaviorDatabaseHistogramKeyProvider____lazy_storage___behaviorKeyCache;
  if (*(_QWORD *)(v0
                 + OBJC_IVAR____TtC24IntelligencePlatformCore36BehaviorDatabaseHistogramKeyProvider____lazy_storage___behaviorKeyCache))
  {
    v2 = *(_QWORD *)(v0
                   + OBJC_IVAR____TtC24IntelligencePlatformCore36BehaviorDatabaseHistogramKeyProvider____lazy_storage___behaviorKeyCache);
  }
  else
  {
    v3 = v0;
    sub_1C07ACF80(&qword_1ED744AD8);
    swift_allocObject();
    v2 = sub_1C106F214();
    *(_QWORD *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1C0836538(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1
            + OBJC_IVAR____TtC24IntelligencePlatformCore36BehaviorDatabaseHistogramKeyProvider____lazy_storage___behaviorKeyCache) = a1;
  return swift_release();
}

void sub_1C0836550(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)((char *)v1
            + OBJC_IVAR____TtC24IntelligencePlatformCore36BehaviorDatabaseHistogramKeyProvider____lazy_storage___behaviorKeyCache) = 0;
  v1[3] = 0;
  v1[4] = 0;
  v1[2] = a1;
  v2 = (uint64_t)v1 + OBJC_IVAR____TtC24IntelligencePlatformCore36BehaviorDatabaseHistogramKeyProvider_type;
  v3 = sub_1C0780478();
  sub_1C07B2D8C(v2, 1, 1, v3);
  sub_1C0778534();
}

_QWORD *sub_1C08365A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t);

  *(_QWORD *)((char *)v4
            + OBJC_IVAR____TtC24IntelligencePlatformCore36BehaviorDatabaseHistogramKeyProvider____lazy_storage___behaviorKeyCache) = 0;
  v4[2] = a1;
  v7 = (uint64_t)v4 + OBJC_IVAR____TtC24IntelligencePlatformCore36BehaviorDatabaseHistogramKeyProvider_type;
  v8 = sub_1C0780478();
  v9 = sub_1C07814F0();
  v10(v9);
  sub_1C07B2D8C(v7, 0, 1, v8);
  v4[3] = a3;
  v4[4] = a4;
  return v4;
}

uint64_t sub_1C0836628()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;

  sub_1C07ACF80(&qword_1ED75EA18);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C0778564();
  v3 = v2 - v1;
  v4 = sub_1C0780478();
  sub_1C07B2D8C(v3, 1, 1, v4);
  v5 = sub_1C08366B8(v3);
  v6 = sub_1C07814F0();
  sub_1C0784B94(v6, v7);
  return v5;
}

uint64_t sub_1C08366B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  unint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  unint64_t v22;
  uint64_t result;
  _QWORD v24[2];

  v4 = sub_1C07ACF80(&qword_1ED75EA18);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v24 - v8;
  v10 = sub_1C106D6CC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v24 - v15;
  sub_1C0838554(a1, (uint64_t)v9);
  if (sub_1C07B2D80((uint64_t)v9, 1, v10) == 1)
  {
    sub_1C0784B94((uint64_t)v9, &qword_1ED75EA18);
    sub_1C0838554(v1 + OBJC_IVAR____TtC24IntelligencePlatformCore36BehaviorDatabaseHistogramKeyProvider_type, (uint64_t)v6);
    if (sub_1C07B2D80((uint64_t)v6, 1, v10) == 1)
    {
      sub_1C0784B94((uint64_t)v6, &qword_1ED75EA18);
      v17 = sub_1C106D684();
      v18 = v17;
    }
    else
    {
      v21 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
      v21(v13, v6, v10);
      sub_1C07ACF80(&qword_1ED746330);
      v22 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
      v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_1C1079220;
      v17 = ((uint64_t (*)(unint64_t, char *, uint64_t))v21)(v18 + v22, v13, v10);
    }
  }
  else
  {
    v19 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v19(v16, v9, v10);
    sub_1C07ACF80(&qword_1ED746330);
    v20 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1C1079220;
    v17 = ((uint64_t (*)(unint64_t, char *, uint64_t))v19)(v18 + v20, v16, v10);
  }
  MEMORY[0x1E0C80A78](v17);
  v24[-2] = v18;
  v24[-1] = v1;
  sub_1C07ACF80(&qword_1ED760128);
  sub_1C106BA70();
  result = swift_bridgeObjectRelease();
  if (!v2)
    return v24[1];
  return result;
}

uint64_t sub_1C0836950(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1C07ACF80(&qword_1ED75EA18);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v2);
  sub_1C0778564();
  v5 = v4 - v3;
  v6 = sub_1C0780478();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v5, a1, v6);
  sub_1C07B2D8C(v5, 0, 1, v6);
  v7 = sub_1C08366B8(v5);
  sub_1C0784B94(v5, &qword_1ED75EA18);
  return v7;
}

uint64_t sub_1C0836A0C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;

  v21 = result;
  v4 = *(_QWORD *)(a2 + 16);
  if (v4)
  {
    v20 = a3;
    v6 = *(_QWORD *)(sub_1C106D6CC() - 8);
    v7 = a2 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v8 = *(_QWORD *)(v6 + 72);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v9 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      sub_1C0836C08(v7, v21, &v22);
      if (v3)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      v10 = v22;
      v11 = *(_QWORD *)(v22 + 16);
      v12 = *(_QWORD *)(v9 + 16);
      if (__OFADD__(v12, v11))
        break;
      if (!swift_isUniquelyReferenced_nonNull_native() || v12 + v11 > *(_QWORD *)(v9 + 24) >> 1)
      {
        sub_1C07EB904();
        v9 = v13;
      }
      if (*(_QWORD *)(v10 + 16))
      {
        v14 = *(_QWORD *)(v9 + 16);
        if ((*(_QWORD *)(v9 + 24) >> 1) - v14 < v11)
          goto LABEL_26;
        v15 = v9 + 48 * v14 + 32;
        if (v10 + 32 < v15 + 48 * v11 && v15 < v10 + 32 + 48 * v11)
          goto LABEL_28;
        swift_arrayInitWithCopy();
        if (v11)
        {
          v17 = *(_QWORD *)(v9 + 16);
          v18 = __OFADD__(v17, v11);
          v19 = v17 + v11;
          if (v18)
            goto LABEL_27;
          *(_QWORD *)(v9 + 16) = v19;
        }
      }
      else if (v11)
      {
        goto LABEL_25;
      }
      swift_bridgeObjectRelease();
      v7 += v8;
      if (!--v4)
      {
        result = swift_bridgeObjectRelease();
        a3 = v20;
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    result = sub_1C10709F0();
    __break(1u);
  }
  else
  {
    v9 = MEMORY[0x1E0DEE9D8];
LABEL_22:
    *a3 = v9;
  }
  return result;
}

void sub_1C0836C08(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  _OWORD v21[2];
  uint64_t v22;

  v19 = a2;
  v20 = a3;
  v18 = sub_1C106C040();
  v5 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C106D6CC();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C130];
  v10 = *(_QWORD *)(v8 - 8);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, double))(v10 + 104))(v13, *MEMORY[0x1E0D3C0F0], v8, v11);
  sub_1C0794BAC(qword_1ED744A50, v9, MEMORY[0x1E0D3C150]);
  LOBYTE(v9) = sub_1C106FAA8();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v8);
  if ((v9 & 1) != 0)
  {
    v14 = MEMORY[0x1E0DEE9D8];
LABEL_3:
    *v20 = v14;
    return;
  }
  sub_1C0837048(a1);
  if (!v3)
  {
    *(_QWORD *)&v21[0] = 0;
    *((_QWORD *)&v21[0] + 1) = 0xE000000000000000;
    sub_1C1070774();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v21[0] = 0xD00000000000001FLL;
    *((_QWORD *)&v21[0] + 1) = 0x80000001C10E52E0;
    sub_1C106FC94();
    swift_bridgeObjectRelease();
    v22 = 0;
    memset(v21, 0, sizeof(v21));
    sub_1C106C034();
    v15 = sub_1C106C1CC();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v18);
    sub_1C0784B94((uint64_t)v21, (uint64_t *)&unk_1ED7626A0);
    MEMORY[0x1E0C80A78](v16);
    *(&v17 - 2) = a1;
    v14 = sub_1C0BC98F4((void (*)(_OWORD *__return_ptr, _QWORD *))sub_1C08385C8, (uint64_t)(&v17 - 4), v15);
    swift_bridgeObjectRelease();
    goto LABEL_3;
  }
}

uint64_t sub_1C0837048(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  _QWORD v24[2];

  v2 = v1;
  sub_1C07ACF80(&qword_1ED75EA18);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v4);
  sub_1C0778564();
  v7 = v6 - v5;
  v8 = sub_1C0780478();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  sub_1C077AF80();
  v12 = v10 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v24 - v14;
  sub_1C0838554(v2 + OBJC_IVAR____TtC24IntelligencePlatformCore36BehaviorDatabaseHistogramKeyProvider_type, v7);
  if (sub_1C07B2D80(v7, 1, v8) == 1)
  {
    sub_1C0784B94(v7, &qword_1ED75EA18);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v15, v7, v8);
    sub_1C0794BAC((unint64_t *)&unk_1ED744A50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C130], MEMORY[0x1E0D3C150]);
    if ((sub_1C106FAA8() & 1) == 0)
    {
      type metadata accessor for HistogramKeyProviderError(0);
      sub_1C0794BAC(&qword_1EF631C80, type metadata accessor for HistogramKeyProviderError, (uint64_t)&unk_1C107B93C);
      sub_1C0775810();
      v16 = v20;
      v21 = v20 + *(int *)(sub_1C07ACF80(&qword_1EF631C88) + 48);
      v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
      v22(v16, a1, v8);
      v22(v21, (uint64_t)v15, v8);
      swift_willThrow();
      sub_1C079E268();
      return v16;
    }
    sub_1C079E268();
  }
  v16 = *(_QWORD *)(v2 + 24);
  v17 = *(_QWORD *)(v2 + 32);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
  if (!v17)
  {
    sub_1C07A50FC();
    v24[0] = v18;
    v24[1] = 0xED00005F79654B6DLL;
    sub_1C0794BAC((unint64_t *)&qword_1ED744A68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C130], MEMORY[0x1E0D3C168]);
    sub_1C1070C0C();
    sub_1C106FC94();
    swift_bridgeObjectRelease();
    v16 = v24[0];
  }
  v19 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v19(v12, v8);
  return v16;
}

uint64_t sub_1C08372B4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t result;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _QWORD v27[5];
  char v28;
  char v29[40];
  unsigned __int8 v30;

  v6 = sub_1C106D6CC();
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  v10 = a1[1];
  (*(void (**)(char *, uint64_t, double))(v12 + 16))(v9, a2, v7);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0821FFC((uint64_t)v9, v11, v10, (uint64_t)v27);
  v13 = v27[0];
  v14 = v27[1];
  v15 = v27[2];
  v16 = v27[3];
  v17 = v27[4];
  v18 = v28;
  result = sub_1C07DFF44((uint64_t)v27, (uint64_t)v29);
  v20 = v30 >= 0x15u;
  if (v30 >= 0x15u)
    v21 = 0;
  else
    v21 = v13;
  if (v30 >= 0x15u)
    v22 = 0;
  else
    v22 = v14;
  if (v30 >= 0x15u)
    v23 = 0;
  else
    v23 = v15;
  *(_QWORD *)a3 = v21;
  *(_QWORD *)(a3 + 8) = v22;
  if (v20)
    v24 = 0;
  else
    v24 = v16;
  if (v20)
    v25 = 0;
  else
    v25 = v17;
  if (v20)
    v26 = -1;
  else
    v26 = v18;
  *(_QWORD *)(a3 + 16) = v23;
  *(_QWORD *)(a3 + 24) = v24;
  *(_QWORD *)(a3 + 32) = v25;
  *(_BYTE *)(a3 + 40) = v26;
  return result;
}

_QWORD *sub_1C08373B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v15;
  _QWORD v16[4];
  unint64_t v17[6];
  uint64_t v18;
  _QWORD v19[6];

  v4 = sub_1C07DFF44(a1, (uint64_t)v19 + 4);
  sub_1C079B42C(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826EB0);
  v18 = sub_1C08364B4();
  sub_1C07A7D0C();
  v5 = sub_1C07ACF80(&qword_1ED744AD8);
  v6 = sub_1C0838488();
  v7 = MEMORY[0x1C3BA5A44](v19, v17, v5, v6);
  sub_1C079B42C((uint64_t)v7, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
  v8 = swift_release();
  if ((v19[0] & 0x10000) == 0)
    return (_QWORD *)LOWORD(v19[0]);
  MEMORY[0x1E0C80A78](v8);
  v9 = v16;
  v16[2] = v1;
  v16[3] = a1;
  sub_1C07A22EC();
  sub_1C106BCE0();
  if (!v2)
  {
    v9 = (_QWORD *)v17[0];
    if (v17[0] >> 16)
    {
      if (qword_1ED760048 != -1)
        swift_once();
      v10 = sub_1C106F544();
      sub_1C079E000(v10, (uint64_t)qword_1ED78D800);
      v11 = sub_1C106F538();
      v12 = sub_1C107039C();
      if (os_log_type_enabled(v11, v12))
      {
        v13 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v13 = 134217984;
        v17[0] = (unint64_t)v9;
        sub_1C10705AC();
        _os_log_impl(&dword_1C0771000, v11, v12, "BehaviorDatabase+Histogram: Out of available key (rowId = %lld cannot be represented by UInt16).", v13, 0xCu);
        MEMORY[0x1C3BA8270](v13, -1, -1);
      }

      sub_1C0838518();
      sub_1C0775810();
      swift_willThrow();
    }
    else
    {
      LOWORD(v19[0]) = v17[0];
      BYTE2(v19[0]) = 0;
      v15 = sub_1C07A7D0C();
      sub_1C079B42C(v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826EB0);
      v18 = sub_1C08364B4();
      sub_1C106F130();
      sub_1C0836538(v18);
    }
  }
  return v9;
}

uint64_t sub_1C083762C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  void (*v33)(char *, uint64_t);
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  _QWORD v41[2];
  __int128 v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  _OWORD v50[2];
  uint64_t v51;
  uint64_t v52;
  char v53;
  char *v54;

  v47 = a3;
  v48 = a1;
  v5 = sub_1C106C040();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v54 = (char *)v41 - v10;
  v11 = sub_1C106D6CC();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = a2;
  sub_1C0824E00(v13, v16, v17, v18, v19, v20, v21, v22);
  v23 = sub_1C0837048((uint64_t)v15);
  if (v3)
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  v45 = v6;
  v46 = v5;
  v43 = v9;
  v25 = *(void (**)(char *, uint64_t))(v12 + 8);
  v26 = v23;
  v25(v15, v11);
  *(_QWORD *)&v50[0] = 0;
  *((_QWORD *)&v50[0] + 1) = 0xE000000000000000;
  sub_1C1070774();
  sub_1C106FC94();
  v44 = v26;
  sub_1C106FC94();
  sub_1C106FC94();
  v27 = sub_1C07ACF80(&qword_1ED762CB8);
  v28 = swift_allocObject();
  v42 = xmmword_1C1079220;
  *(_OWORD *)(v28 + 16) = xmmword_1C1079220;
  *(_QWORD *)(v28 + 32) = 0x696669746E656469;
  *(_QWORD *)(v28 + 40) = 0xEA00000000007265;
  sub_1C0821B64();
  v29 = MEMORY[0x1E0D24968];
  *(_QWORD *)(v28 + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v28 + 80) = v29;
  *(_QWORD *)(v28 + 48) = v30;
  *(_QWORD *)(v28 + 56) = v31;
  v32 = v54;
  sub_1C106C01C();
  v51 = 0;
  memset(v50, 0, sizeof(v50));
  sub_1C106C1E4();
  v41[1] = v27;
  swift_bridgeObjectRelease();
  sub_1C0784B94((uint64_t)v50, (uint64_t *)&unk_1ED7626A0);
  v33 = *(void (**)(char *, uint64_t))(v45 + 8);
  v34 = v32;
  v35 = v46;
  v33(v34, v46);
  if (v53 == 1)
  {
    *(_QWORD *)&v50[0] = 0;
    *((_QWORD *)&v50[0] + 1) = 0xE000000000000000;
    sub_1C1070774();
    sub_1C106FC94();
    sub_1C106FC94();
    swift_bridgeObjectRelease();
    sub_1C106FC94();
    v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = v42;
    *(_QWORD *)(v36 + 32) = 0x696669746E656469;
    *(_QWORD *)(v36 + 40) = 0xEA00000000007265;
    sub_1C0821B64();
    *(_QWORD *)(v36 + 72) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v36 + 80) = MEMORY[0x1E0D24968];
    *(_QWORD *)(v36 + 48) = v37;
    *(_QWORD *)(v36 + 56) = v38;
    v39 = v43;
    sub_1C106C01C();
    sub_1C106C694();
    v33(v39, v35);
    swift_bridgeObjectRelease();
    result = sub_1C106C5EC();
    v40 = result;
  }
  else
  {
    v40 = v52;
    result = swift_bridgeObjectRelease();
  }
  *v47 = v40;
  return result;
}

void sub_1C0837A68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  unint64_t v16;
  char *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  char v22;
  void (*v23)(char *, uint64_t);
  char *v24;
  void (*v25)(uint64_t, char *, uint64_t);
  char *v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  unsigned int v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;

  sub_1C077AE5C();
  v34 = v1;
  v3 = sub_1C0780478();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1C077AF80();
  v41 = (char *)(v5 - v6);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v34 - v9;
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v34 - v11;
  sub_1C07ACF80(&qword_1ED75EA18);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v13);
  sub_1C0778544();
  v36 = v0;
  sub_1C0838554(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore36BehaviorDatabaseHistogramKeyProvider_type, v2);
  if (sub_1C07B2D80(v2, 1, v3) == 1)
  {
    v14 = sub_1C106D684();
  }
  else
  {
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 32);
    v15(v12, v2, v3);
    sub_1C07ACF80(&qword_1ED746330);
    v16 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1C1079220;
    v15((char *)(v14 + v16), (uint64_t)v12, v3);
  }
  v17 = (char *)MEMORY[0x1E0DEE9D8];
  v42 = (char *)MEMORY[0x1E0DEE9D8];
  v40 = *(_QWORD *)(v14 + 16);
  if (v40)
  {
    v39 = v12;
    v18 = 0;
    v37 = *MEMORY[0x1E0D3C0F0];
    v35 = v10;
    v38 = v14;
    while (v18 < *(_QWORD *)(v14 + 16))
    {
      v19 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      v20 = *(_QWORD *)(v4 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v10, v14 + v19 + v20 * v18, v3);
      v21 = v39;
      (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v39, v37, v3);
      sub_1C0794BAC((unint64_t *)&unk_1ED744A50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C130], MEMORY[0x1E0D3C150]);
      v22 = sub_1C106FAA8();
      v23 = *(void (**)(char *, uint64_t))(v4 + 8);
      v23(v21, v3);
      if ((v22 & 1) != 0)
      {
        v23(v10, v3);
      }
      else
      {
        v24 = v10;
        v25 = *(void (**)(uint64_t, char *, uint64_t))(v4 + 32);
        v25((uint64_t)v41, v24, v3);
        v26 = v42;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C09D331C();
          v26 = v42;
        }
        v27 = *((_QWORD *)v26 + 2);
        if (v27 >= *((_QWORD *)v26 + 3) >> 1)
        {
          sub_1C09D331C();
          v26 = v42;
        }
        *((_QWORD *)v26 + 2) = v27 + 1;
        v25((uint64_t)&v26[v19 + v27 * v20], v41, v3);
        v42 = v26;
        v10 = v35;
      }
      ++v18;
      v14 = v38;
      if (v40 == v18)
      {
        v17 = v42;
        goto LABEL_16;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_16:
    swift_bridgeObjectRelease();
    v28 = *((_QWORD *)v17 + 2);
    if (v28)
    {
      v29 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      v41 = v17;
      v30 = (uint64_t)&v17[v29];
      v31 = *(_QWORD *)(v4 + 72);
      v32 = sub_1C07A22EC();
      v33 = v34;
      while (1)
      {
        MEMORY[0x1E0C80A78](v32);
        *(&v34 - 2) = v36;
        *(&v34 - 1) = v30;
        v32 = sub_1C106BCE0();
        if (v33)
          break;
        v30 += v31;
        if (!--v28)
        {
          v34 = 0;
          goto LABEL_21;
        }
      }
      v34 = v33;
      swift_release();
    }
    else
    {
LABEL_21:
      swift_release();
      sub_1C08364B4();
      sub_1C106F208();
      swift_release();
    }
    sub_1C07757D0();
  }
}

uint64_t sub_1C0837E2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  _WORD v10[8];

  v5 = sub_1C106C040();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_1C0837048(a3);
  if (!v3)
  {
    strcpy((char *)v10, "DELETE FROM ");
    HIBYTE(v10[6]) = 0;
    v10[7] = -5120;
    sub_1C106FC94();
    swift_bridgeObjectRelease();
    sub_1C106C034();
    sub_1C106C694();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C0837F3C()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  sub_1C0784B94(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore36BehaviorDatabaseHistogramKeyProvider_type, &qword_1ED75EA18);
  swift_release();
  return v0;
}

uint64_t sub_1C0837F88()
{
  sub_1C0837F3C();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0837FAC()
{
  return type metadata accessor for BehaviorDatabaseHistogramKeyProvider(0);
}

uint64_t type metadata accessor for BehaviorDatabaseHistogramKeyProvider(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1ED75FEF0);
}

void sub_1C0837FC8()
{
  unint64_t v0;

  sub_1C0838054();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_1C0838054()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED75EA20)
  {
    sub_1C106D6CC();
    v0 = sub_1C1070564();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED75EA20);
  }
}

uint64_t *sub_1C08380A8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  _BYTE *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_1C106D6CC();
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_1C0838130(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_1C106D6CC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_BYTE *sub_1C0838168(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_1C106D6CC();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_BYTE *sub_1C08381C4(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_1C106D6CC();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_BYTE *sub_1C0838220(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_1C106D6CC();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_BYTE *sub_1C083827C(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_1C106D6CC();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_1C08382D8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C08382E4(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 240)
  {
    v4 = *a1;
    if (v4 >= 0x10)
      return v4 - 15;
    else
      return 0;
  }
  else
  {
    v8 = sub_1C0780478();
    return sub_1C07B2D80((uint64_t)&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_1C083834C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1C0838358(_BYTE *a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 240)
  {
    *a1 = a2 + 15;
    sub_1C077671C();
  }
  else
  {
    v7 = sub_1C0780478();
    sub_1C07B2D8C((uint64_t)&a1[*(int *)(a4 + 20)], a2, a2, v7);
  }
}

uint64_t type metadata accessor for CachedBehaviorDatabaseHistogramManager.BehaviorHistogramCacheKey(uint64_t a1)
{
  return sub_1C0784B00(a1, qword_1ED746170);
}

uint64_t sub_1C08383C8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C106D6CC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1C083843C()
{
  sub_1C0794BAC(&qword_1ED746168, type metadata accessor for CachedBehaviorDatabaseHistogramManager.BehaviorHistogramCacheKey, (uint64_t)&unk_1C107B858);
}

_QWORD *sub_1C0838468(uint64_t a1)
{
  return sub_1C08373B8(a1);
}

unint64_t sub_1C0838488()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED744AD0;
  if (!qword_1ED744AD0)
  {
    v1 = sub_1C07D4BEC(&qword_1ED744AD8);
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0D3DE00], v1);
    atomic_store(result, (unint64_t *)&qword_1ED744AD0);
  }
  return result;
}

void sub_1C08384CC(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 40));
  sub_1C0778534();
}

uint64_t sub_1C0838500@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1C083762C(a1, *(_QWORD *)(v2 + 24), a2);
}

unint64_t sub_1C0838518()
{
  unint64_t result;

  result = qword_1EF631C78;
  if (!qword_1EF631C78)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107D454, &unk_1E7A0F7B8);
    atomic_store(result, (unint64_t *)&qword_1EF631C78);
  }
  return result;
}

uint64_t sub_1C0838554(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1ED75EA18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for HistogramKeyProviderError(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1EF631D08);
}

uint64_t sub_1C08385B0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1C0836A0C(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1C08385C8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1C08372B4(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1C08385E0(uint64_t a1)
{
  uint64_t v1;

  return sub_1C0837E2C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1C08385F8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v12;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v12 = *a3;
  *a3 = 0x8000000000000000;
  sub_1C08386B8(a1, a2, isUniquelyReferenced_nonNull_native, &v12, a4, a5);
  *a3 = v12;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C083867C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CachedBehaviorDatabaseHistogramManager.BehaviorHistogramCacheKey(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C08386B8(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  unint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  char v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;

  v23 = a5;
  v10 = type metadata accessor for CachedBehaviorDatabaseHistogramManager.BehaviorHistogramCacheKey(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (_QWORD *)*a4;
  v14 = sub_1C07DCEAC();
  if (__OFADD__(v13[2], (v15 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  v16 = v14;
  v17 = v15;
  sub_1C07ACF80(&qword_1ED746308);
  if ((sub_1C107090C() & 1) == 0)
    goto LABEL_5;
  v18 = sub_1C07DCEAC();
  if ((v17 & 1) != (v19 & 1))
  {
LABEL_10:
    sub_1C1070D44();
    __break(1u);
    return;
  }
  v16 = v18;
LABEL_5:
  v20 = (_QWORD *)*a4;
  if ((v17 & 1) != 0)
  {
    v21 = (uint64_t *)(v20[7] + 16 * v16);
    swift_unknownObjectRelease();
    *v21 = a1;
    v21[1] = a6;
  }
  else
  {
    sub_1C083880C(a2, (uint64_t)v12);
    sub_1C0838850(v16, (uint64_t)v12, a1, v20, v23, a6);
  }
}

uint64_t sub_1C083880C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CachedBehaviorDatabaseHistogramManager.BehaviorHistogramCacheKey(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C0838850(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v11 = a4[6];
  v12 = type metadata accessor for CachedBehaviorDatabaseHistogramManager.BehaviorHistogramCacheKey(0);
  sub_1C0838FBC(a2, v11 + *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * a1, type metadata accessor for CachedBehaviorDatabaseHistogramManager.BehaviorHistogramCacheKey);
  v13 = (_QWORD *)(a4[7] + 16 * a1);
  *v13 = a3;
  v13[1] = a6;
  v14 = a4[2];
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    a4[2] = v16;
}

uint64_t sub_1C08388F0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 40);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 80);
  return swift_deallocObject();
}

uint64_t destroy for BehaviorDatabaseHistogramManager(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_release();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(a1 + 24);
  return _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(a1 + 64);
}

uint64_t initializeWithCopy for BehaviorDatabaseHistogramManager(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  __int128 v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v5 = a2 + 24;
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_retain();
  v8(a1 + 24, v5, v7);
  v9 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 88) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 64, a2 + 64);
  return a1;
}

_QWORD *assignWithCopy for BehaviorDatabaseHistogramManager(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  sub_1C07E6484(a1 + 3, a2 + 3);
  sub_1C07E6484(a1 + 8, a2 + 8);
  return a1;
}

void *initializeWithTake for BehaviorDatabaseHistogramManager(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x68uLL);
}

uint64_t assignWithTake for BehaviorDatabaseHistogramManager(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(a1 + 64);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  return a1;
}

uint64_t getEnumTagSinglePayload for BehaviorDatabaseHistogramManager(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 104))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BehaviorDatabaseHistogramManager(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BehaviorDatabaseHistogramManager()
{
  return &type metadata for BehaviorDatabaseHistogramManager;
}

uint64_t *sub_1C0838BB0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  void (*v7)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = sub_1C106D6CC();
    v7 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
    v7(a1, a2, v6);
    v8 = sub_1C07ACF80(&qword_1EF631C88);
    v7((uint64_t *)((char *)a1 + *(int *)(v8 + 48)), (uint64_t *)((char *)a2 + *(int *)(v8 + 48)), v6);
  }
  return a1;
}

uint64_t sub_1C0838C4C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void (*v5)(uint64_t, uint64_t);

  v2 = sub_1C106D6CC();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v5(a1, v2);
  v3 = a1 + *(int *)(sub_1C07ACF80(&qword_1EF631C88) + 48);
  return ((uint64_t (*)(uint64_t, uint64_t))v5)(v3, v2);
}

uint64_t sub_1C0838CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;

  v4 = sub_1C106D6CC();
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16);
  v5(a1, a2, v4);
  v6 = sub_1C07ACF80(&qword_1EF631C88);
  v5(a1 + *(int *)(v6 + 48), a2 + *(int *)(v6 + 48), v4);
  return a1;
}

uint64_t sub_1C0838D24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;

  v4 = sub_1C106D6CC();
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24);
  v5(a1, a2, v4);
  v6 = sub_1C07ACF80(&qword_1EF631C88);
  v5(a1 + *(int *)(v6 + 48), a2 + *(int *)(v6 + 48), v4);
  return a1;
}

uint64_t sub_1C0838D94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;

  v4 = sub_1C106D6CC();
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32);
  v5(a1, a2, v4);
  v6 = sub_1C07ACF80(&qword_1EF631C88);
  v5(a1 + *(int *)(v6 + 48), a2 + *(int *)(v6 + 48), v4);
  return a1;
}

uint64_t sub_1C0838E04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;

  v4 = sub_1C106D6CC();
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40);
  v5(a1, a2, v4);
  v6 = sub_1C07ACF80(&qword_1EF631C88);
  v5(a1 + *(int *)(v6 + 48), a2 + *(int *)(v6 + 48), v4);
  return a1;
}

uint64_t sub_1C0838E74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1EF631C88);
  return sub_1C07B2D80(a1, a2, v4);
}

uint64_t sub_1C0838EAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1C07ACF80(&qword_1EF631C88);
  return sub_1C07B2D8C(a1, a2, a3, v6);
}

uint64_t sub_1C0838EF4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  int v4;

  result = sub_1C106D6CC();
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSingleCase();
    result = 0;
    *(_DWORD *)(*(_QWORD *)(a1 - 8) + 84) = v4;
  }
  return result;
}

uint64_t sub_1C0838F68()
{
  return sub_1C08359E0();
}

uint64_t sub_1C0838F80(uint64_t a1)
{
  uint64_t v1;

  return sub_1C0836130(a1, *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1C0838FA0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_1C0835D1C(a1, v2[4], v2[5], v2[2], v2[3], a2);
}

void sub_1C0838FBC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  sub_1C0778534();
}

void sub_1C0838FFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v29;
  char v30;
  _QWORD v31[5];
  char v32;
  uint64_t v33;

  v25 = a1 + 56;
  v2 = 1 << *(_BYTE *)(a1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a1 + 56);
  v26 = (unint64_t)(v2 + 63) >> 6;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v5 = 0;
  v6 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v4)
    {
      v7 = __clz(__rbit64(v4));
      v4 &= v4 - 1;
      v8 = v7 | (v5 << 6);
      goto LABEL_17;
    }
    if (__OFADD__(v5++, 1))
      break;
    if (v5 >= v26)
      goto LABEL_31;
    v10 = *(_QWORD *)(v25 + 8 * v5);
    if (!v10)
    {
      v11 = v5 + 1;
      if (v5 + 1 >= v26)
        goto LABEL_31;
      v10 = *(_QWORD *)(v25 + 8 * v11);
      if (v10)
        goto LABEL_15;
      v11 = v5 + 2;
      if (v5 + 2 >= v26)
        goto LABEL_31;
      v10 = *(_QWORD *)(v25 + 8 * v11);
      if (v10)
        goto LABEL_15;
      v11 = v5 + 3;
      if (v5 + 3 >= v26)
        goto LABEL_31;
      v10 = *(_QWORD *)(v25 + 8 * v11);
      if (v10)
      {
LABEL_15:
        v5 = v11;
      }
      else
      {
        v22 = v5 + 4;
        if (v5 + 4 >= v26)
        {
LABEL_31:
          swift_release();
          goto LABEL_32;
        }
        v10 = *(_QWORD *)(v25 + 8 * v22);
        for (v5 += 4; !v10; ++v22)
        {
          v5 = v22 + 1;
          if (__OFADD__(v22, 1))
            goto LABEL_34;
          if (v5 >= v26)
            goto LABEL_31;
          v10 = *(_QWORD *)(v25 + 8 * v5);
        }
      }
    }
    v4 = (v10 - 1) & v10;
    v8 = __clz(__rbit64(v10)) + (v5 << 6);
LABEL_17:
    v12 = *(_QWORD *)(a1 + 48) + 48 * v8;
    v13 = *(_QWORD *)v12;
    v14 = *(_QWORD *)(v12 + 8);
    v15 = *(_QWORD *)(v12 + 16);
    v16 = *(_QWORD *)(v12 + 24);
    v17 = *(_QWORD *)(v12 + 32);
    v18 = *(_BYTE *)(v12 + 40);
    v31[0] = v13;
    v31[1] = v14;
    v31[2] = v15;
    v31[3] = v16;
    v31[4] = v17;
    v32 = v18;
    sub_1C0826EB0(v13, v14, v15, v16, v17, v18);
    v19 = v33;
    sub_1C083ECAC((uint64_t)v31, a2, (uint64_t)&v29);
    v33 = v19;
    if (v19)
    {
      sub_1C0826F50(v13, v14, v15, v16, v17, v18);
      swift_release();
      swift_bridgeObjectRelease();
LABEL_32:
      swift_release();
      return;
    }
    sub_1C0826F50(v13, v14, v15, v16, v17, v18);
    if ((v30 & 1) == 0)
    {
      v20 = v29;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C07EABAC();
        v6 = v23;
      }
      v21 = *(_QWORD *)(v6 + 16);
      if (v21 >= *(_QWORD *)(v6 + 24) >> 1)
      {
        sub_1C07EABAC();
        v6 = v24;
      }
      *(_QWORD *)(v6 + 16) = v21 + 1;
      *(_QWORD *)(v6 + 8 * v21 + 32) = v20;
    }
  }
  __break(1u);
LABEL_34:
  __break(1u);
}

void sub_1C08392B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (!*(_QWORD *)(v0
                  + OBJC_IVAR____TtC24IntelligencePlatformCore16BehaviorDatabase____lazy_storage___histogramKeyProvider))
  {
    v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore16BehaviorDatabase_pool);
    type metadata accessor for BehaviorDatabaseHistogramKeyProvider(0);
    swift_allocObject();
    sub_1C0836550(v1);
    sub_1C078AB30(v2);
    swift_retain();
    sub_1C07767F4();
  }
  swift_retain();
  sub_1C07785E4();
}

BOOL sub_1C083932C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  BOOL v8;
  char v9;
  _BOOL8 result;
  uint64_t v11;
  uint64_t v12;

  sub_1C0780478();
  sub_1C07803F8(&qword_1ED744A60, (void (*)(uint64_t))MEMORY[0x1E0D3C130]);
  sub_1C07BCD74();
  sub_1C07BCD74();
  if (v12 != v11)
    return 0;
  v4 = *(int *)(type metadata accessor for BehaviorPopularity(0) + 20);
  v5 = *(_QWORD *)(a1 + v4);
  v6 = *(_QWORD *)(a1 + v4 + 8);
  v7 = (_QWORD *)(a2 + v4);
  v8 = v5 == *v7 && v6 == v7[1];
  if (v8 || (v9 = sub_1C1070CB4(), result = 0, (v9 & 1) != 0))
  {
    sub_1C07BC600();
    if (!v8)
      return 0;
    sub_1C07BC600();
    if (!v8)
      return 0;
    sub_1C07BC600();
    return v8;
  }
  return result;
}

uint64_t sub_1C083941C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x726F697661686562 && a2 == 0xEC00000065707954;
  if (v2 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001C10DDA10 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = a1 == 0x746E756F63 && a2 == 0xE500000000000000;
    if (v6 || (sub_1C1070CB4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = a1 == 0x6974616C756D7563 && a2 == 0xEF746E756F436576;
      if (v7 || (sub_1C1070CB4() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0x7865646E49776F72 && a2 == 0xE800000000000000)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        v9 = sub_1C1070CB4();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 4;
        else
          return 5;
      }
    }
  }
}

uint64_t sub_1C0839658(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0839694 + 4 * byte_1C107B980[a1]))(0x726F697661686562, 0xEC00000065707954);
}

unint64_t sub_1C0839694()
{
  return 0xD000000000000012;
}

uint64_t sub_1C08396B0()
{
  return 0x746E756F63;
}

uint64_t sub_1C08396C4()
{
  return 0x6974616C756D7563;
}

uint64_t sub_1C08396E8()
{
  return 0x7865646E49776F72;
}

uint64_t sub_1C0839700(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  sub_1C07ACF80(&qword_1EF631D98);
  sub_1C0778688();
  MEMORY[0x1E0C80A78](v4);
  sub_1C0778544();
  sub_1C07A9480(a1, a1[3]);
  sub_1C083FF88();
  sub_1C1070EB8();
  sub_1C106D6CC();
  sub_1C07803F8(&qword_1EF631DA0, (void (*)(uint64_t))MEMORY[0x1E0D3C130]);
  sub_1C1070BB8();
  if (!v1)
  {
    type metadata accessor for BehaviorPopularity(0);
    sub_1C1070B7C();
    sub_1C078F1B8();
    sub_1C078F1B8();
    sub_1C078F1B8();
  }
  return sub_1C078C76C(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
}

void sub_1C0839898()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_1C077AE5C();
  v2 = v1;
  v18 = v3;
  v19 = sub_1C106D6CC();
  v4 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  sub_1C0778564();
  v21 = v6 - v5;
  v20 = sub_1C07ACF80(&qword_1EF631D80);
  v7 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v8 = sub_1C078A2EC();
  v9 = (int *)type metadata accessor for BehaviorPopularity(v8);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v10);
  sub_1C0778564();
  v13 = v12 - v11;
  sub_1C07A9480(v2, v2[3]);
  sub_1C083FF88();
  sub_1C1070E94();
  if (v0)
  {
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v2);
  }
  else
  {
    sub_1C07803F8(&qword_1EF631D90, (void (*)(uint64_t))MEMORY[0x1E0D3C130]);
    sub_1C1070AE0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v13, v21, v19);
    v14 = sub_1C1070AA4();
    v15 = (uint64_t *)(v13 + v9[5]);
    *v15 = v14;
    v15[1] = v16;
    *(_QWORD *)(v13 + v9[6]) = sub_1C1070AD4();
    *(_QWORD *)(v13 + v9[7]) = sub_1C07A7D18();
    v17 = sub_1C07A7D18();
    sub_1C077E8A4(0, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
    *(_QWORD *)(v13 + v9[8]) = v17;
    sub_1C083F944(v13, v18, type metadata accessor for BehaviorPopularity);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v2);
    sub_1C077F06C(v13);
  }
  sub_1C07757D0();
}

uint64_t sub_1C0839B44()
{
  unsigned __int8 *v0;

  return sub_1C0839658(*v0);
}

uint64_t sub_1C0839B4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C083941C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0839B70()
{
  sub_1C083FF88();
  return sub_1C1070EE8();
}

uint64_t sub_1C0839B98()
{
  sub_1C083FF88();
  return sub_1C1070EF4();
}

void sub_1C0839BC0()
{
  sub_1C0839898();
}

uint64_t sub_1C0839BD4(_QWORD *a1)
{
  return sub_1C0839700(a1);
}

uint64_t sub_1C0839BF0()
{
  return sub_1C106BFC8();
}

uint64_t sub_1C0839C04()
{
  return sub_1C106BFBC();
}

uint64_t sub_1C0839C18()
{
  sub_1C07803F8(&qword_1EF631D78, (void (*)(uint64_t))type metadata accessor for BehaviorPopularity);
  return sub_1C106BDDC();
}

uint64_t sub_1C0839C94()
{
  sub_1C07803F8(&qword_1EF631D60, (void (*)(uint64_t))type metadata accessor for BehaviorPopularity);
  return sub_1C106BFD4();
}

uint64_t sub_1C0839CFC()
{
  sub_1C07803F8(&qword_1EF631D60, (void (*)(uint64_t))type metadata accessor for BehaviorPopularity);
  return sub_1C106BFC8();
}

uint64_t sub_1C0839D58()
{
  return sub_1C106C2C8();
}

uint64_t sub_1C0839D6C()
{
  sub_1C07803F8(&qword_1EF631D60, (void (*)(uint64_t))type metadata accessor for BehaviorPopularity);
  return sub_1C106BFBC();
}

uint64_t sub_1C0839DC8()
{
  return sub_1C106C2A4() & 1;
}

uint64_t sub_1C0839DE0()
{
  return sub_1C106C2B0() & 1;
}

uint64_t sub_1C0839DF8()
{
  sub_1C07803F8(&qword_1EF631DA8, (void (*)(uint64_t))type metadata accessor for BehaviorPopularity);
  return sub_1C106BD58();
}

void sub_1C0839E6C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore16BehaviorDatabase____lazy_storage___eventTracker))
  {
    v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore16BehaviorDatabase_pool);
    type metadata accessor for BehaviorDatabaseEventTracker();
    swift_allocObject();
    v2 = sub_1C082B170(0xD000000000000016, 0x80000001C10E5490, v1, 0, 0, 0);
    sub_1C078AB30((uint64_t)v2);
    swift_retain();
    sub_1C07767F4();
  }
  swift_retain();
  sub_1C07785E4();
}

uint64_t sub_1C0839F0C()
{
  uint64_t result;

  sub_1C07ACF80((uint64_t *)&unk_1ED754A50);
  sub_1C0780678();
  result = sub_1C0ECB240();
  qword_1ED78CE20 = result;
  return result;
}

uint64_t *sub_1C0839F44()
{
  if (qword_1ED7549C0 != -1)
    swift_once();
  return &qword_1ED78CE20;
}

uint64_t sub_1C0839F84()
{
  uint64_t result;

  sub_1C07A896C();
  result = static NSUserDefaults.sqlite3ReducedCacheSpillSize.getter();
  qword_1EF6D0CB0 = result;
  return result;
}

uint64_t *sub_1C0839FB4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  sub_1C077AE5C();
  v34 = v3;
  v35 = v4;
  v30 = v1;
  v6 = v5;
  v7 = *v0;
  v8 = sub_1C106BBC0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v28 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v22 - v12;
  v33 = sub_1C106AB28();
  v31 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  sub_1C078A2EC();
  sub_1C106F544();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v14);
  sub_1C0778564();
  v24 = OBJC_IVAR____TtC24IntelligencePlatformCore16BehaviorDatabase____lazy_storage___histogramKeyProvider;
  *(uint64_t *)((char *)v0
             + OBJC_IVAR____TtC24IntelligencePlatformCore16BehaviorDatabase____lazy_storage___histogramKeyProvider) = 0;
  v25 = OBJC_IVAR____TtC24IntelligencePlatformCore16BehaviorDatabase____lazy_storage___eventTracker;
  *(uint64_t *)((char *)v0 + OBJC_IVAR____TtC24IntelligencePlatformCore16BehaviorDatabase____lazy_storage___eventTracker) = 0;
  v15 = (char *)v0 + OBJC_IVAR____TtC24IntelligencePlatformCore16BehaviorDatabase_signposter;
  sub_1C106F184();
  v26 = v15;
  sub_1C106F4C0();
  v23 = (uint64_t)v0 + OBJC_IVAR____TtC24IntelligencePlatformCore16BehaviorDatabase_config;
  sub_1C083F944(v6, (uint64_t)v0 + OBJC_IVAR____TtC24IntelligencePlatformCore16BehaviorDatabase_config, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  sub_1C07A43EC();
  sub_1C106AAC8();
  v16 = *(int *)(type metadata accessor for Configuration() + 20);
  v29 = v6;
  v32 = *(_OWORD *)(v6 + v16);
  v27 = v7;
  sub_1C083A288(v2, (uint64_t *)&v32);
  sub_1C106AB10();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v28, v13, v8);
  sub_1C07A22EC();
  swift_allocObject();
  v17 = v30;
  v18 = sub_1C106BA58();
  if (v17)
  {
    sub_1C077F06C(v29);
    sub_1C07A5110();
    sub_1C0796FD0();
    sub_1C077F06C(v23);
    swift_release();
    swift_release();
    v19 = sub_1C106F4E4();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v26, v19);
    swift_deallocPartialClassInstance();
  }
  else
  {
    v20 = v29;
    *(uint64_t *)((char *)v0 + OBJC_IVAR____TtC24IntelligencePlatformCore16BehaviorDatabase_pool) = v18;
    sub_1C083A3C4();
    sub_1C07B1F90(v20, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    sub_1C07A5110();
    sub_1C0796FD0();
  }
  return v0;
}

uint64_t sub_1C083A264()
{
  sub_1C07A43EC();
  return sub_1C106AAC8();
}

uint64_t sub_1C083A288(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v4 = v2;
  v6 = sub_1C106C6AC();
  sub_1C0778688();
  MEMORY[0x1E0C80A78](v7);
  sub_1C0778564();
  v10 = (_QWORD *)(v9 - v8);
  sub_1C106F838();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v11);
  sub_1C0779614();
  v12 = *a2;
  sub_1C106BBB4();
  sub_1C106AB10();
  sub_1C106BB90();
  sub_1C106F820();
  sub_1C106BB78();
  *v10 = 0x404E000000000000;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v10, *MEMORY[0x1E0D24878], v6);
  sub_1C106BB9C();
  result = sub_1C106BB6C();
  if ((v12 & 2) != 0)
    return sub_1C106BB60();
  if ((v12 & 8) != 0)
  {
    *(_QWORD *)(sub_1C0780678() + 16) = v4;
    sub_1C106BB60();
    return sub_1C07767F4();
  }
  return result;
}

uint64_t sub_1C083A3C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t, uint64_t);
  void (*v9)(char *, uint64_t);
  _QWORD v11[2];
  uint64_t v12;
  uint64_t v13;

  v0 = sub_1C106BEF0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1C106BF2C();
  v12 = *(_QWORD *)(v4 - 8);
  v13 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106BF20();
  v7 = *MEMORY[0x1E0D24008];
  v8 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 104);
  v8(v3, v7, v0);
  v11[1] = 0xD00000000000001FLL;
  sub_1C106BF08();
  v9 = *(void (**)(char *, uint64_t))(v1 + 8);
  v9(v3, v0);
  v8(v3, v7, v0);
  sub_1C106BF08();
  v9(v3, v0);
  v8(v3, v7, v0);
  swift_retain();
  sub_1C106BF08();
  swift_release();
  v9(v3, v0);
  v8(v3, v7, v0);
  swift_retain();
  sub_1C106BF08();
  swift_release();
  v9(v3, v0);
  v8(v3, v7, v0);
  sub_1C106BF08();
  v9(v3, v0);
  v8(v3, v7, v0);
  swift_retain();
  sub_1C106BF08();
  swift_release();
  v9(v3, v0);
  v8(v3, v7, v0);
  swift_retain();
  sub_1C106BF08();
  swift_release();
  v9(v3, v0);
  v8(v3, v7, v0);
  sub_1C106BF08();
  v9(v3, v0);
  v8(v3, v7, v0);
  swift_retain();
  sub_1C106BF08();
  swift_release();
  v9(v3, v0);
  v8(v3, v7, v0);
  swift_retain();
  sub_1C106BF08();
  swift_release();
  v9(v3, v0);
  v8(v3, v7, v0);
  sub_1C106BF08();
  v9(v3, v0);
  v8(v3, v7, v0);
  sub_1C106BF08();
  v9(v3, v0);
  sub_1C106BF14();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v6, v13);
}

uint64_t sub_1C083A874()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_1C106C040();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106C034();
  sub_1C106C694();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1C083A924()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v0 = sub_1C106C040();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = 0;
  v6 = 0xE000000000000000;
  sub_1C1070774();
  swift_bridgeObjectRelease();
  v5 = 0xD000000000000015;
  v6 = 0x80000001C10E5A00;
  if (qword_1EF62DAA8 != -1)
    swift_once();
  v7 = qword_1EF6D0CB0;
  sub_1C1070C0C();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106C034();
  sub_1C106C694();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return swift_bridgeObjectRelease();
}

unint64_t sub_1C083AA78()
{
  sub_1C1070774();
  swift_bridgeObjectRelease();
  sub_1C106BA64();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  return 0xD000000000000014;
}

uint64_t sub_1C083AB0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD v16[2];
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD v21[2];
  uint64_t v22;
  uint64_t v23;

  v23 = a1;
  v1 = sub_1C106BB24();
  v18 = *(_QWORD *)(v1 - 8);
  v19 = v1;
  MEMORY[0x1E0C80A78](v1);
  v17 = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1C106BB54();
  v4 = (void (*)(uint64_t))MEMORY[0x1E0D23C10];
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for BehaviorPopularity(0);
  sub_1C07803F8(&qword_1EF631D30, (void (*)(uint64_t))type metadata accessor for BehaviorPopularity);
  v16[1] = v8;
  sub_1C106B920();
  sub_1C07ACF80(&qword_1ED7606C8);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C1079220;
  sub_1C106BB0C();
  *(_QWORD *)&v21[0] = v9;
  sub_1C07803F8(qword_1ED75E9C0, v4);
  sub_1C07ACF80((uint64_t *)&unk_1ED760080);
  sub_1C07BB218(&qword_1ED760090, (uint64_t *)&unk_1ED760080);
  sub_1C1070660();
  v10 = v20;
  sub_1C106C670();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v3);
  if (v10)
    return swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C106B920();
  sub_1C07ACF80(&qword_1ED7606C0);
  v12 = v18;
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1C1078FC0;
  sub_1C106BB18();
  sub_1C106BB0C();
  *(_QWORD *)&v21[0] = v13;
  sub_1C07803F8(&qword_1ED760430, (void (*)(uint64_t))MEMORY[0x1E0D23BA0]);
  sub_1C07ACF80(&qword_1ED760668);
  sub_1C07BB218(&qword_1ED760670, &qword_1ED760668);
  v14 = v17;
  v15 = v19;
  sub_1C1070660();
  v22 = 0;
  memset(v21, 0, sizeof(v21));
  sub_1C106C664();
  swift_bridgeObjectRelease();
  sub_1C0784B6C((uint64_t)v21, (uint64_t *)&unk_1ED7626B0);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v15);
}

void sub_1C083AE78()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[2];

  v0 = sub_1C07ACF80((uint64_t *)&unk_1ED75E9F0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1C07ACF80(&qword_1ED761500);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C106C604();
  sub_1C07B2D8C((uint64_t)v5, 1, 1, v6);
  sub_1C106BE30();
  swift_release();
  sub_1C0784B6C((uint64_t)v5, &qword_1ED761500);
  sub_1C106C538();
  v7 = sub_1C106C55C();
  sub_1C07B2D8C((uint64_t)v2, 0, 1, v7);
  sub_1C106BE3C();
  sub_1C0784B6C((uint64_t)v2, (uint64_t *)&unk_1ED75E9F0);
  sub_1C07B2D8C((uint64_t)v5, 1, 1, v6);
  sub_1C106BEB4();
  swift_release();
  swift_release();
  sub_1C0784B6C((uint64_t)v5, &qword_1ED761500);
  sub_1C106C514();
  sub_1C07B2D8C((uint64_t)v2, 0, 1, v7);
  sub_1C106BE3C();
  sub_1C0784B6C((uint64_t)v2, (uint64_t *)&unk_1ED75E9F0);
  sub_1C07B2D8C((uint64_t)v5, 1, 1, v6);
  sub_1C106BEB4();
  swift_release();
  swift_release();
  sub_1C0784B6C((uint64_t)v5, &qword_1ED761500);
  sub_1C106C538();
  sub_1C07B2D8C((uint64_t)v2, 0, 1, v7);
  sub_1C106BE3C();
  sub_1C0784B6C((uint64_t)v2, (uint64_t *)&unk_1ED75E9F0);
  sub_1C07B2D8C((uint64_t)v5, 1, 1, v6);
  sub_1C106BEB4();
  swift_release();
  swift_release();
  sub_1C0784B6C((uint64_t)v5, &qword_1ED761500);
  sub_1C106C538();
  sub_1C07B2D8C((uint64_t)v2, 0, 1, v7);
  sub_1C106BE3C();
  sub_1C0784B6C((uint64_t)v2, (uint64_t *)&unk_1ED75E9F0);
  sub_1C07B2D8C((uint64_t)v5, 1, 1, v6);
  sub_1C106BEB4();
  swift_release();
  swift_release();
  sub_1C0784B6C((uint64_t)v5, &qword_1ED761500);
  sub_1C07B2D8C((uint64_t)v5, 1, 1, v6);
  sub_1C106BE48();
  sub_1C0784B6C((uint64_t)v5, &qword_1ED761500);
}

uint64_t sub_1C083B1CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;
  _OWORD v7[2];
  uint64_t v8;
  uint64_t v9;

  v1 = sub_1C106BB24();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for BehaviorPopularity(0);
  sub_1C07803F8(&qword_1EF631D30, (void (*)(uint64_t))type metadata accessor for BehaviorPopularity);
  sub_1C106B920();
  sub_1C106C634();
  if (v0)
    return swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = sub_1C106B920();
  sub_1C07ACF80(&qword_1ED7606C0);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C1079220;
  sub_1C106BB0C();
  *(_QWORD *)&v7[0] = v6;
  sub_1C07803F8(&qword_1ED760430, (void (*)(uint64_t))MEMORY[0x1E0D23BA0]);
  sub_1C07ACF80(&qword_1ED760668);
  sub_1C07BB218(&qword_1ED760670, &qword_1ED760668);
  sub_1C1070660();
  v8 = 0;
  memset(v7, 0, sizeof(v7));
  sub_1C106C664();
  swift_bridgeObjectRelease();
  sub_1C0784B6C((uint64_t)v7, (uint64_t *)&unk_1ED7626B0);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_1C083B400()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v10[5];

  v0 = sub_1C07ACF80(&qword_1ED761500);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v10[-1] - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1C07ACF80((uint64_t *)&unk_1ED75E9F0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v10[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106C538();
  v6 = sub_1C106C55C();
  sub_1C07B2D8C((uint64_t)v5, 0, 1, v6);
  sub_1C106BE0C();
  sub_1C0784B6C((uint64_t)v5, (uint64_t *)&unk_1ED75E9F0);
  v7 = sub_1C106C604();
  sub_1C07B2D8C((uint64_t)v2, 1, 1, v7);
  sub_1C106BEB4();
  swift_release();
  sub_1C0784B6C((uint64_t)v2, &qword_1ED761500);
  v10[3] = MEMORY[0x1E0DEB418];
  v10[4] = MEMORY[0x1E0D24A00];
  v10[0] = 0;
  sub_1C106BEC0();
  swift_release();
  swift_release();
  return _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v10);
}

uint64_t sub_1C083B570(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(unint64_t, _QWORD, uint64_t);
  unint64_t v30;
  uint64_t v31;
  _QWORD v32[4];
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v40 = a2;
  v3 = sub_1C106BB54();
  v4 = (void (*)(uint64_t))MEMORY[0x1E0D23C10];
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v32 - v9;
  v11 = sub_1C07ACF80(&qword_1ED7606C8);
  v12 = *(_QWORD *)(v5 + 72);
  v13 = *(unsigned __int8 *)(v5 + 80);
  v14 = (v13 + 32) & ~v13;
  v39 = v11;
  v36 = v13 | 7;
  v37 = v14 + v12;
  v15 = swift_allocObject();
  v35 = xmmword_1C1079220;
  *(_OWORD *)(v15 + 16) = xmmword_1C1079220;
  v38 = v14;
  sub_1C106BB0C();
  v41 = v15;
  sub_1C07803F8(qword_1ED75E9C0, v4);
  v17 = v16;
  v18 = sub_1C07ACF80((uint64_t *)&unk_1ED760080);
  sub_1C07BB218(&qword_1ED760090, (uint64_t *)&unk_1ED760080);
  v20 = v19;
  v34 = v17;
  sub_1C1070660();
  v21 = v33;
  sub_1C106C670();
  if (v21)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v3);
  v32[1] = v20;
  v32[2] = v18;
  v32[3] = a1;
  v32[0] = *(_QWORD *)(v5 + 8);
  ((void (*)(char *, uint64_t))v32[0])(v10, v3);
  sub_1C07ACF80(&qword_1ED746330);
  v23 = sub_1C106D6CC();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 72);
  v26 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1C107A8C0;
  v33 = v27;
  v28 = v27 + v26;
  v29 = *(void (**)(unint64_t, _QWORD, uint64_t))(v24 + 104);
  v29(v27 + v26, *MEMORY[0x1E0D3C120], v23);
  v29(v28 + v25, *MEMORY[0x1E0D3C118], v23);
  v29(v28 + 2 * v25, *MEMORY[0x1E0D3C058], v23);
  v29(v28 + 3 * v25, *MEMORY[0x1E0D3C0A0], v23);
  v29(v28 + 4 * v25, *MEMORY[0x1E0D3C0C8], v23);
  result = ((uint64_t (*)(uint64_t, _QWORD, uint64_t))v29)(v28 + 5 * v25, *MEMORY[0x1E0D3C0E8], v23);
  v30 = 0;
  while (v30 < *(_QWORD *)(v33 + 16))
  {
    sub_1C08392B0();
    sub_1C0837048(v28);
    swift_release();
    v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = v35;
    sub_1C106BB0C();
    v41 = v31;
    sub_1C1070660();
    sub_1C106C670();
    ++v30;
    swift_bridgeObjectRelease();
    result = ((uint64_t (*)(char *, uint64_t))v32[0])(v7, v3);
    v28 += v25;
    if (v30 == 6)
    {
      swift_setDeallocating();
      return sub_1C0BE8D88();
    }
  }
  __break(1u);
  return result;
}

void sub_1C083B95C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[2];

  v0 = sub_1C07ACF80(&qword_1ED761500);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1C07ACF80((uint64_t *)&unk_1ED75E9F0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106C538();
  v6 = sub_1C106C55C();
  sub_1C07B2D8C((uint64_t)v5, 0, 1, v6);
  sub_1C106BE3C();
  sub_1C0784B6C((uint64_t)v5, (uint64_t *)&unk_1ED75E9F0);
  v7 = sub_1C106C604();
  sub_1C07B2D8C((uint64_t)v2, 1, 1, v7);
  sub_1C106BEB4();
  swift_release();
  swift_release();
  sub_1C0784B6C((uint64_t)v2, &qword_1ED761500);
  sub_1C106C538();
  sub_1C07B2D8C((uint64_t)v5, 0, 1, v6);
  sub_1C106BE3C();
  sub_1C0784B6C((uint64_t)v5, (uint64_t *)&unk_1ED75E9F0);
  sub_1C07B2D8C((uint64_t)v2, 1, 1, v7);
  sub_1C106BEB4();
  swift_release();
  swift_release();
  sub_1C0784B6C((uint64_t)v2, &qword_1ED761500);
  sub_1C106C4FC();
  sub_1C07B2D8C((uint64_t)v5, 0, 1, v6);
  sub_1C106BE3C();
  sub_1C0784B6C((uint64_t)v5, (uint64_t *)&unk_1ED75E9F0);
  sub_1C07B2D8C((uint64_t)v2, 1, 1, v7);
  sub_1C106BEB4();
  swift_release();
  swift_release();
  sub_1C0784B6C((uint64_t)v2, &qword_1ED761500);
  sub_1C07B2D8C((uint64_t)v2, 1, 1, v7);
  sub_1C106BE48();
  sub_1C0784B6C((uint64_t)v2, &qword_1ED761500);
}

void sub_1C083BBE0()
{
  sub_1C083BF30();
}

uint64_t sub_1C083BBF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(unint64_t, _QWORD, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v3 = v2;
  v25 = a1;
  v26 = a2;
  v4 = sub_1C106BB54();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v24 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07ACF80(&qword_1ED746330);
  v7 = sub_1C106D6CC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 72);
  v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C107A8C0;
  v27 = v11;
  v12 = v11 + v10;
  v13 = *(void (**)(unint64_t, _QWORD, uint64_t))(v8 + 104);
  v13(v11 + v10, *MEMORY[0x1E0D3C068], v7);
  v13(v12 + v9, *MEMORY[0x1E0D3C0B8], v7);
  v13(v12 + 2 * v9, *MEMORY[0x1E0D3C060], v7);
  v13(v12 + 3 * v9, *MEMORY[0x1E0D3C128], v7);
  v13(v12 + 4 * v9, *MEMORY[0x1E0D3C088], v7);
  v22 = v9;
  v14 = v12 + 5 * v9;
  v15 = v5;
  result = ((uint64_t (*)(uint64_t, _QWORD, uint64_t))v13)(v14, *MEMORY[0x1E0D3C078], v7);
  v17 = 0;
  v23 = xmmword_1C1079220;
  while (v17 < *(_QWORD *)(v27 + 16))
  {
    sub_1C08392B0();
    sub_1C0837048(v12);
    if (v3)
    {
      swift_bridgeObjectRelease();
      return swift_release();
    }
    v28 = v12;
    swift_release();
    sub_1C07ACF80(&qword_1ED7606C8);
    v18 = v4;
    v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = v23;
    sub_1C106BB0C();
    v29 = v19;
    sub_1C07803F8(qword_1ED75E9C0, (void (*)(uint64_t))MEMORY[0x1E0D23C10]);
    sub_1C07ACF80((uint64_t *)&unk_1ED760080);
    sub_1C07BB218(&qword_1ED760090, (uint64_t *)&unk_1ED760080);
    v20 = v24;
    sub_1C1070660();
    sub_1C106C670();
    v3 = 0;
    ++v17;
    swift_bridgeObjectRelease();
    result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v20, v18);
    v12 = v28 + v22;
    v4 = v18;
    if (v17 == 6)
    {
      swift_setDeallocating();
      return sub_1C0BE8D88();
    }
  }
  __break(1u);
  return result;
}

void sub_1C083BF30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1C07ACF80(&qword_1ED761500);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v1);
  sub_1C07ACF80((uint64_t *)&unk_1ED75E9F0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v2);
  sub_1C0779614();
  sub_1C106C514();
  v3 = sub_1C106C55C();
  sub_1C07B2D8C(v0, 0, 1, v3);
  sub_1C106BE3C();
  sub_1C0784B6C(v0, (uint64_t *)&unk_1ED75E9F0);
  sub_1C106C604();
  sub_1C0791A20();
  sub_1C106BEB4();
  sub_1C07785A8();
  sub_1C0797C04();
  sub_1C0791A20();
  sub_1C106BE9C();
  swift_release();
  swift_release();
  sub_1C0797C04();
}

void sub_1C083C050(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(uint64_t);
  char *v12;
  void (*v13)(char *, uint64_t);
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;

  v20 = sub_1C106BB24();
  v18 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v17 = (char *)&v15 - v6;
  v7 = sub_1C106BB54();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v21 = MEMORY[0x1E0DEE9D8];
  sub_1C07803F8(qword_1ED75E9C0, v11);
  sub_1C07ACF80((uint64_t *)&unk_1ED760080);
  sub_1C07BB218(&qword_1ED760090, (uint64_t *)&unk_1ED760080);
  sub_1C1070660();
  v19 = a1;
  sub_1C106C670();
  if (v1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  else
  {
    v16 = v4;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v23 = 0;
    v21 = 0u;
    v22 = 0u;
    v24 = MEMORY[0x1E0DEE9D8];
    sub_1C07803F8(&qword_1ED760430, (void (*)(uint64_t))MEMORY[0x1E0D23BA0]);
    sub_1C07ACF80(&qword_1ED760668);
    sub_1C07BB218(&qword_1ED760670, &qword_1ED760668);
    v12 = v17;
    sub_1C1070660();
    sub_1C106C664();
    v13 = *(void (**)(char *, uint64_t))(v18 + 8);
    v13(v12, v20);
    sub_1C0784B6C((uint64_t)&v21, (uint64_t *)&unk_1ED7626B0);
    v23 = 0;
    v21 = 0u;
    v22 = 0u;
    v24 = MEMORY[0x1E0DEE9D8];
    v14 = v16;
    sub_1C1070660();
    sub_1C106C664();
    v13(v14, v20);
    sub_1C0784B6C((uint64_t)&v21, (uint64_t *)&unk_1ED7626B0);
  }
}

void sub_1C083C3D4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v0 = sub_1C07ACF80(&qword_1ED761500);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1C07ACF80((uint64_t *)&unk_1ED75E9F0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106C538();
  v6 = sub_1C106C55C();
  sub_1C07B2D8C((uint64_t)v5, 0, 1, v6);
  sub_1C106BE3C();
  sub_1C0784B6C((uint64_t)v5, (uint64_t *)&unk_1ED75E9F0);
  v7 = sub_1C106C604();
  sub_1C07B2D8C((uint64_t)v2, 1, 1, v7);
  sub_1C106BEB4();
  swift_release();
  swift_release();
  sub_1C0784B6C((uint64_t)v2, &qword_1ED761500);
  sub_1C106C514();
  sub_1C07B2D8C((uint64_t)v5, 0, 1, v6);
  sub_1C106BE3C();
  sub_1C0784B6C((uint64_t)v5, (uint64_t *)&unk_1ED75E9F0);
  sub_1C07B2D8C((uint64_t)v2, 1, 1, v7);
  sub_1C106BEB4();
  swift_release();
  swift_release();
  sub_1C0784B6C((uint64_t)v2, &qword_1ED761500);
  sub_1C106C508();
  sub_1C07B2D8C((uint64_t)v5, 0, 1, v6);
  sub_1C106BE3C();
  sub_1C0784B6C((uint64_t)v5, (uint64_t *)&unk_1ED75E9F0);
  sub_1C07B2D8C((uint64_t)v2, 1, 1, v7);
  sub_1C106BEB4();
  swift_release();
  swift_release();
  sub_1C0784B6C((uint64_t)v2, &qword_1ED761500);
  sub_1C106C508();
  sub_1C07B2D8C((uint64_t)v5, 0, 1, v6);
  sub_1C106BE3C();
  swift_release();
  sub_1C0784B6C((uint64_t)v5, (uint64_t *)&unk_1ED75E9F0);
}

uint64_t sub_1C083C690(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void (*v12)(unint64_t, _QWORD, uint64_t);
  uint64_t result;
  char v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  __int128 v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v26 = a2;
  v23 = a1;
  v3 = sub_1C106BB54();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v21 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07ACF80(&qword_1ED746330);
  v6 = sub_1C106D6CC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 72);
  v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C1078FC0;
  v27 = v10;
  v11 = v10 + v9;
  v12 = *(void (**)(unint64_t, _QWORD, uint64_t))(v7 + 104);
  v12(v11, *MEMORY[0x1E0D3C048], v6);
  v24 = v11;
  v25 = v8;
  result = ((uint64_t (*)(unint64_t, _QWORD, uint64_t))v12)(v11 + v8, *MEMORY[0x1E0D3C0C0], v6);
  v14 = 0;
  v15 = 0;
  v22 = xmmword_1C1079220;
  while (1)
  {
    v16 = v14;
    if (v15 >= *(_QWORD *)(v27 + 16))
      break;
    v17 = v24 + v15 * v25;
    sub_1C08392B0();
    sub_1C0837048(v17);
    if (v2)
    {
      swift_bridgeObjectRelease();
      return swift_release();
    }
    swift_release();
    sub_1C07ACF80(&qword_1ED7606C8);
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = v22;
    sub_1C106BB0C();
    v28 = v18;
    sub_1C07803F8(qword_1ED75E9C0, (void (*)(uint64_t))MEMORY[0x1E0D23C10]);
    sub_1C07ACF80((uint64_t *)&unk_1ED760080);
    sub_1C07BB218(&qword_1ED760090, (uint64_t *)&unk_1ED760080);
    v19 = v21;
    sub_1C1070660();
    sub_1C106C670();
    swift_bridgeObjectRelease();
    result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v19, v3);
    v14 = 1;
    v15 = 1;
    if ((v16 & 1) != 0)
    {
      swift_setDeallocating();
      return sub_1C0BE8D88();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C083C958(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;

  v15 = sub_1C106BB54();
  v3 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07ACF80(&qword_1ED746330);
  v6 = sub_1C106D6CC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = swift_allocObject();
  v14 = xmmword_1C1079220;
  *(_OWORD *)(v9 + 16) = xmmword_1C1079220;
  v10 = v9 + v8;
  result = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v10, *MEMORY[0x1E0D3C100], v6);
  if (*(_QWORD *)(v9 + 16))
  {
    sub_1C08392B0();
    sub_1C0837048(v10);
    if (v1)
    {
      swift_bridgeObjectRelease();
      return swift_release();
    }
    else
    {
      swift_release();
      sub_1C07ACF80(&qword_1ED7606C8);
      v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = v14;
      sub_1C106BB0C();
      v16 = v12;
      sub_1C07803F8(qword_1ED75E9C0, (void (*)(uint64_t))MEMORY[0x1E0D23C10]);
      *(_QWORD *)&v14 = a1;
      sub_1C07ACF80((uint64_t *)&unk_1ED760080);
      sub_1C07BB218(&qword_1ED760090, (uint64_t *)&unk_1ED760080);
      v13 = v15;
      sub_1C1070660();
      sub_1C106C670();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v13);
      swift_setDeallocating();
      return sub_1C0BE8D88();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C083CBC8()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _OWORD v7[2];
  uint64_t v8;

  v0 = sub_1C106BB24();
  v1 = (void (*)(uint64_t))MEMORY[0x1E0D23BA0];
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07ACF80(&qword_1ED7606C0);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C1079220;
  sub_1C106BB0C();
  *(_QWORD *)&v7[0] = v5;
  sub_1C07803F8(&qword_1ED760430, v1);
  sub_1C07ACF80(&qword_1ED760668);
  sub_1C07BB218(&qword_1ED760670, &qword_1ED760668);
  sub_1C1070660();
  v8 = 0;
  memset(v7, 0, sizeof(v7));
  sub_1C106C664();
  sub_1C0784B6C((uint64_t)v7, (uint64_t *)&unk_1ED7626B0);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v0);
}

void sub_1C083CD78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int *v4;
  unsigned int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1C077AE5C();
  v5 = v4;
  v6 = sub_1C106BB54();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  sub_1C077CFAC();
  v8 = sub_1C106D6CC();
  sub_1C0778688();
  MEMORY[0x1E0C80A78](v9);
  sub_1C0778544();
  sub_1C08392B0();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v1, *v5, v8);
  sub_1C0837048(v1);
  sub_1C077E8A4(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_1C07785A8();
  if (!v0)
  {
    sub_1C07ACF80(&qword_1ED7606C8);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C1079220;
    sub_1C106BB0C();
    sub_1C07803F8(qword_1ED75E9C0, (void (*)(uint64_t))MEMORY[0x1E0D23C10]);
    sub_1C07ACF80((uint64_t *)&unk_1ED760080);
    sub_1C07BB218(&qword_1ED760090, (uint64_t *)&unk_1ED760080);
    sub_1C1070660();
    sub_1C106C670();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v2, v6);
    swift_bridgeObjectRelease();
  }
  sub_1C07757D0();
}

uint64_t sub_1C083CF38()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  uint64_t v17;

  v17 = sub_1C106BB24();
  v14 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1C106BB54();
  v4 = (void (*)(uint64_t))MEMORY[0x1E0D23C10];
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07ACF80(&qword_1ED7606C8);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C1079220;
  sub_1C106BB0C();
  *(_QWORD *)&v15[0] = v8;
  sub_1C07803F8(qword_1ED75E9C0, v4);
  sub_1C07ACF80((uint64_t *)&unk_1ED760080);
  sub_1C07BB218(&qword_1ED760090, (uint64_t *)&unk_1ED760080);
  sub_1C1070660();
  sub_1C106C670();
  if (v0)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v3);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v3);
  sub_1C07ACF80(&qword_1ED7606C0);
  v10 = v14;
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C1078FC0;
  sub_1C106BB18();
  sub_1C106BB0C();
  *(_QWORD *)&v15[0] = v11;
  sub_1C07803F8(&qword_1ED760430, (void (*)(uint64_t))MEMORY[0x1E0D23BA0]);
  sub_1C07ACF80(&qword_1ED760668);
  sub_1C07BB218(&qword_1ED760670, &qword_1ED760668);
  v12 = v17;
  sub_1C1070660();
  v16 = 0;
  memset(v15, 0, sizeof(v15));
  sub_1C106C664();
  sub_1C0784B6C((uint64_t)v15, (uint64_t *)&unk_1ED7626B0);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v2, v12);
}

void sub_1C083D248()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v0 = sub_1C07ACF80((uint64_t *)&unk_1ED75E9F0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1C07ACF80(&qword_1ED761500);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C106C604();
  sub_1C07B2D8C((uint64_t)v5, 1, 1, v6);
  sub_1C106BE30();
  swift_release();
  sub_1C0784B6C((uint64_t)v5, &qword_1ED761500);
  sub_1C106C514();
  v7 = sub_1C106C55C();
  sub_1C07B2D8C((uint64_t)v2, 0, 1, v7);
  sub_1C106BE3C();
  sub_1C0784B6C((uint64_t)v2, (uint64_t *)&unk_1ED75E9F0);
  sub_1C07B2D8C((uint64_t)v5, 1, 1, v6);
  sub_1C106BEB4();
  swift_release();
  swift_release();
  sub_1C0784B6C((uint64_t)v5, &qword_1ED761500);
  sub_1C106C538();
  sub_1C07B2D8C((uint64_t)v2, 0, 1, v7);
  sub_1C106BE3C();
  sub_1C0784B6C((uint64_t)v2, (uint64_t *)&unk_1ED75E9F0);
  sub_1C07B2D8C((uint64_t)v5, 1, 1, v6);
  sub_1C106BEB4();
  swift_release();
  swift_release();
  sub_1C0784B6C((uint64_t)v5, &qword_1ED761500);
  sub_1C106C514();
  sub_1C07B2D8C((uint64_t)v2, 0, 1, v7);
  sub_1C106BE3C();
  sub_1C0784B6C((uint64_t)v2, (uint64_t *)&unk_1ED75E9F0);
  sub_1C07B2D8C((uint64_t)v5, 1, 1, v6);
  sub_1C106BEB4();
  swift_release();
  swift_release();
  sub_1C0784B6C((uint64_t)v5, &qword_1ED761500);
  sub_1C106C520();
  sub_1C07B2D8C((uint64_t)v2, 0, 1, v7);
  sub_1C106BE3C();
  sub_1C0784B6C((uint64_t)v2, (uint64_t *)&unk_1ED75E9F0);
  sub_1C07B2D8C((uint64_t)v5, 1, 1, v6);
  sub_1C106BEB4();
  swift_release();
  swift_release();
  sub_1C0784B6C((uint64_t)v5, &qword_1ED761500);
  sub_1C07B2D8C((uint64_t)v5, 1, 1, v6);
  sub_1C106BE48();
  sub_1C0784B6C((uint64_t)v5, &qword_1ED761500);
}

uint64_t sub_1C083D5A0()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD v7[2];

  v0 = sub_1C106BB54();
  v1 = (void (*)(uint64_t))MEMORY[0x1E0D23C10];
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07ACF80(&qword_1ED7606C8);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C1079220;
  sub_1C106BB0C();
  v7[1] = v5;
  sub_1C07803F8(qword_1ED75E9C0, v1);
  sub_1C07ACF80((uint64_t *)&unk_1ED760080);
  sub_1C07BB218(&qword_1ED760090, (uint64_t *)&unk_1ED760080);
  sub_1C1070660();
  sub_1C106C670();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v0);
}

void sub_1C083D718()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  os_signpost_id_t v11;
  uint64_t v12;
  void *v13;
  os_signpost_id_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;

  sub_1C077AE5C();
  v17 = v3;
  v4 = v0;
  v16 = v5;
  v18 = v6;
  v19 = sub_1C07758F4();
  MEMORY[0x1E0C80A78](v19);
  sub_1C077CFAC();
  v7 = sub_1C106F4E4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  sub_1C0779614();
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v2, v0 + OBJC_IVAR____TtC24IntelligencePlatformCore16BehaviorDatabase_signposter, v7);
  sub_1C106F4CC();
  sub_1C106F49C();
  *(_WORD *)sub_1C0780FC8() = 0;
  v10 = (void *)sub_1C106F4CC();
  sub_1C107048C();
  v11 = sub_1C079F310();
  sub_1C07B3FAC(&dword_1C0771000, v12, (os_signpost_type_t)v8, v11, "BehaviorDatabase.updateBehaviorCounts", "");
  v13 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C083D910(v18, v9, v4, v16, v17);
  if (!v1)
  {
    objc_autoreleasePoolPop(v13);
    sub_1C1070480();
    v14 = sub_1C079F310();
    sub_1C07B3FAC(&dword_1C0771000, v15, (os_signpost_type_t)v8, v14, "BehaviorDatabase.updateBehaviorCounts", "");

    sub_1C0776778();
  }
  objc_autoreleasePoolPop(v13);
  __break(1u);
}

void sub_1C083D910(void *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)();
  void *v18;
  void *v19;
  _QWORD *v20;

  v19 = sub_1C083F8E4;
  v20 = a2;
  v10 = MEMORY[0x1E0C809B0];
  v15 = MEMORY[0x1E0C809B0];
  v16 = 1107296256;
  v17 = (void (*)())sub_1C07BF90C;
  v18 = &unk_1E7A0DA38;
  v11 = _Block_copy(&v15);
  swift_retain();
  swift_release();
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a3;
  v12[3] = a4;
  v12[4] = a5;
  v12[5] = a2;
  v19 = sub_1C083F920;
  v20 = v12;
  v15 = v10;
  v16 = 1107296256;
  v17 = sub_1C086A668;
  v18 = &unk_1E7A0DA88;
  v13 = _Block_copy(&v15);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  v14 = objc_msgSend(a1, sel_sinkWithCompletion_shouldContinue_, v11, v13);
  _Block_release(v13);
  _Block_release(v11);

}

void sub_1C083DA70(void *a1, uint64_t a2)
{
  id v3;
  id v4;
  void *v5;

  v3 = objc_msgSend(a1, sel_error);
  if (v3)
  {
    v4 = v3;
    swift_beginAccess();
    v5 = *(void **)(a2 + 16);
    *(_QWORD *)(a2 + 16) = v4;

  }
}

uint64_t sub_1C083DAD0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  void **v7;
  void *v8;
  unsigned __int8 v10;

  v7 = (void **)(a5 + 16);
  v8 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C083DB48(a1, a3, v7, (char *)&v10);
  objc_autoreleasePoolPop(v8);
  return v10;
}

void sub_1C083DB48(uint64_t a1@<X1>, void (*a2)(uint64_t)@<X2>, void **a3@<X4>, char *a4@<X8>)
{
  void *v4;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  void *v22;
  char v23;
  uint64_t v24;
  char *v25;
  uint64_t v26[3];
  _BYTE v27[48];
  uint64_t v28;

  sub_1C083DE64();
  v9 = v4;
  if (v4)
  {
    if (qword_1ED760048 != -1)
      swift_once();
    v10 = sub_1C106F544();
    sub_1C079E000(v10, (uint64_t)qword_1ED78D800);
    v11 = v4;
    swift_retain();
    v12 = v4;
    swift_retain();
    v13 = sub_1C106F538();
    v14 = sub_1C1070390();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = swift_slowAlloc();
      v24 = swift_slowAlloc();
      v26[0] = v24;
      *(_DWORD *)v15 = 136315394;
      sub_1C07DFF44(a1 + 16, (uint64_t)v27);
      sub_1C08384CC((uint64_t)v27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826EB0);
      v16 = sub_1C0824D28();
      v25 = a4;
      v18 = v17;
      sub_1C08384CC((uint64_t)v27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
      v28 = sub_1C0788DAC(v16, v18, v26);
      sub_1C10705AC();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 12) = 2080;
      v28 = (uint64_t)v4;
      v19 = v4;
      sub_1C07ACF80(&qword_1ED7614F0);
      v20 = sub_1C106FB5C();
      v28 = sub_1C0788DAC(v20, v21, v26);
      sub_1C10705AC();
      a4 = v25;
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C0771000, v13, v14, "BehaviorDatabase: Unable to update/insert BehaviorPopularity row for behavior %s due to error: %s", (uint8_t *)v15, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v24, -1, -1);
      MEMORY[0x1C3BA8270](v15, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v9 = 0;
  }
  a2(*(_QWORD *)(a1 + 64) + OBJC_IVAR____TtC24IntelligencePlatformCore15BehaviorContext_date);
  if (v9)
  {
    swift_beginAccess();
    v22 = *a3;
    *a3 = v9;

    v23 = 0;
  }
  else
  {
    v23 = 1;
  }
  *a4 = v23;
}

uint64_t sub_1C083DE64()
{
  sub_1C106BAA0();
  return sub_1C106BCE0();
}

uint64_t sub_1C083DECC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t *v18;
  void (*v19)(uint64_t *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  int *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  void (*v43)(char *, uint64_t);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  _QWORD v74[5];
  uint64_t v75[3];
  uint64_t v76;
  uint64_t v77;
  uint64_t v78[3];
  uint64_t v79;
  uint64_t v80;
  uint64_t v81[3];
  uint64_t v82;
  uint64_t v83;
  char v84[8];
  uint64_t v85;

  v69 = a1;
  v73 = type metadata accessor for BehaviorPopularity(0);
  MEMORY[0x1E0C80A78](v73);
  v60 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_1C106BE78();
  v62 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  v72 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C07ACF80(&qword_1ED761500);
  MEMORY[0x1E0C80A78](v5);
  v71 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_1C106D6CC();
  v67 = *(_QWORD *)(v68 - 8);
  MEMORY[0x1E0C80A78](v68);
  v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C07ACF80(&qword_1EF631D18);
  v61 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v70 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1C106C49C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v59 - v16;
  sub_1C106C4A8();
  sub_1C106C4A8();
  v82 = v11;
  v83 = MEMORY[0x1E0D24668];
  v18 = sub_1C079DFC4(v81);
  v66 = v12;
  v19 = *(void (**)(uint64_t *, char *, uint64_t))(v12 + 16);
  v65 = v17;
  v19(v18, v17, v11);
  sub_1C07DFF44(a2 + 16, (uint64_t)v84);
  sub_1C0821B64();
  v76 = MEMORY[0x1E0DEA968];
  v77 = MEMORY[0x1E0D24960];
  v75[0] = v20;
  v75[1] = v21;
  v22 = sub_1C106BCBC();
  v23 = MEMORY[0x1E0D23DC0];
  v79 = v22;
  v80 = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v78);
  sub_1C106C310();
  sub_1C0784B6C((uint64_t)v75, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v81);
  v82 = v11;
  v83 = MEMORY[0x1E0D24668];
  v24 = sub_1C079DFC4(v81);
  v64 = v14;
  v25 = ((uint64_t (*)(uint64_t *, char *, uint64_t))v19)(v24, v14, v11);
  sub_1C0824E00(v25, v26, v27, v28, v29, v30, v31, v32);
  v33 = sub_1C106D6C0();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v8, v68);
  v34 = MEMORY[0x1E0D249F8];
  v74[4] = MEMORY[0x1E0D249F8];
  v74[3] = MEMORY[0x1E0DEB418];
  v74[0] = v33;
  v76 = v22;
  v77 = v23;
  sub_1C079DFC4(v75);
  sub_1C106C310();
  v35 = v72;
  sub_1C0784B6C((uint64_t)v74, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v81);
  v82 = v22;
  v83 = v23;
  v36 = (int *)v73;
  v37 = (uint64_t)v71;
  sub_1C079DFC4(v81);
  sub_1C106C2F8();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v75);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v78);
  sub_1C07803F8(&qword_1EF631D30, (void (*)(uint64_t))type metadata accessor for BehaviorPopularity);
  v38 = v70;
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v81);
  v39 = sub_1C106C604();
  sub_1C07B2D8C(v37, 1, 1, v39);
  v82 = v11;
  v83 = MEMORY[0x1E0D24648];
  sub_1C079DFC4(v81);
  sub_1C106C4A8();
  v80 = v34;
  v79 = MEMORY[0x1E0DEB418];
  v78[0] = 1;
  sub_1C106C358();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v78);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v81);
  v40 = v85;
  v41 = sub_1C106C13C();
  if (v40)
  {
    (*(void (**)(char *, uint64_t))(v62 + 8))(v35, v63);
    sub_1C0784B6C(v37, &qword_1ED761500);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v38, v9);
    v42 = v65;
    v43 = *(void (**)(char *, uint64_t))(v66 + 8);
    v43(v64, v11);
    v44 = v42;
  }
  else
  {
    v45 = v41;
    (*(void (**)(char *, uint64_t))(v62 + 8))(v35, v63);
    sub_1C0784B6C(v37, &qword_1ED761500);
    v46 = (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v38, v9);
    if (!v45)
    {
      v55 = (uint64_t)v60;
      sub_1C0824E00(v46, v47, v48, v49, v50, v51, v52, v53);
      sub_1C0821B64();
      v56 = (_QWORD *)(v55 + v36[5]);
      *v56 = v57;
      v56[1] = v58;
      *(_QWORD *)(v55 + v36[6]) = 1;
      *(_QWORD *)(v55 + v36[7]) = 0;
      *(_QWORD *)(v55 + v36[8]) = 0;
      sub_1C07803F8(&qword_1EF631D60, (void (*)(uint64_t))type metadata accessor for BehaviorPopularity);
      sub_1C106BFC8();
      sub_1C07B1F90(v55, type metadata accessor for BehaviorPopularity);
    }
    v43 = *(void (**)(char *, uint64_t))(v66 + 8);
    v43(v64, v11);
    v44 = v65;
  }
  return ((uint64_t (*)(char *, uint64_t))v43)(v44, v11);
}

void sub_1C083E538()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _WORD *v3;
  NSObject *v4;
  os_signpost_type_t v5;
  os_signpost_id_t v6;
  os_signpost_type_t v7;
  os_signpost_id_t v8;

  sub_1C077AE5C();
  sub_1C07758F4();
  sub_1C0794384();
  MEMORY[0x1E0C80A78](v2);
  sub_1C0778544();
  sub_1C106F4CC();
  sub_1C106F49C();
  v3 = (_WORD *)sub_1C0780FC8();
  v4 = sub_1C079C2F8(v3);
  v5 = sub_1C107048C();
  v6 = sub_1C078C7E0();
  sub_1C079A808(&dword_1C0771000, v4, v5, v6, "BehaviorDatabase.recomputeCumulativeCounts", "");
  sub_1C07A22EC();
  sub_1C106BCE0();
  if (!v0)
  {
    v7 = sub_1C1070480();
    v8 = sub_1C078C7E0();
    sub_1C079A808(&dword_1C0771000, v4, v7, v8, "BehaviorDatabase.recomputeCumulativeCounts", "");

    sub_1C0776778();
  }

  sub_1C078C76C(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_1C07757D0();
}

uint64_t sub_1C083E668()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v9)(char *, uint64_t);
  _QWORD v10[2];

  v1 = sub_1C106C040();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v10 - v6;
  sub_1C106C034();
  sub_1C106C694();
  if (v0)
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v7, v1);
  v9 = *(void (**)(char *, uint64_t))(v2 + 8);
  v9(v7, v1);
  sub_1C106C034();
  sub_1C106C694();
  return ((uint64_t (*)(char *, uint64_t))v9)(v4, v1);
}

uint64_t sub_1C083E794()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  sub_1C07ACF80(&qword_1ED761468);
  result = sub_1C106BA70();
  if (!v0)
    return v2;
  return result;
}

uint64_t sub_1C083E7F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  __int128 v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v3 = sub_1C07ACF80(&qword_1EF631D18);
  v40 = *(_QWORD *)(v3 - 8);
  v41 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C07ACF80(&qword_1EF631D48);
  v39 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v33 - v10;
  type metadata accessor for BehaviorPopularity(0);
  sub_1C07803F8(&qword_1EF631D30, (void (*)(uint64_t))type metadata accessor for BehaviorPopularity);
  result = sub_1C106B92C();
  if (!v1)
  {
    v34 = v8;
    v36 = 0;
    v37 = a1;
    v13 = result;
    sub_1C07ACF80(&qword_1ED761300);
    v14 = swift_allocObject();
    v38 = v6;
    v15 = v14;
    v35 = xmmword_1C1079220;
    *(_OWORD *)(v14 + 16) = xmmword_1C1079220;
    v16 = (uint64_t *)(v14 + 32);
    v17 = sub_1C106C49C();
    v18 = MEMORY[0x1E0D24660];
    *(_QWORD *)(v15 + 56) = v17;
    *(_QWORD *)(v15 + 64) = v18;
    sub_1C079DFC4(v16);
    sub_1C106C4A8();
    sub_1C106B950();
    v19 = v38;
    swift_bridgeObjectRelease();
    sub_1C07ACF80((uint64_t *)&unk_1ED7614B0);
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = v35;
    v21 = MEMORY[0x1E0D24650];
    *(_QWORD *)(v20 + 56) = v17;
    *(_QWORD *)(v20 + 64) = v21;
    sub_1C079DFC4((uint64_t *)(v20 + 32));
    sub_1C106C4A8();
    v22 = v41;
    sub_1C106C10C();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v5, v22);
    v23 = v13 < 10001;
    v24 = v39;
    if (!v23)
    {
      if (qword_1ED760048 != -1)
        swift_once();
      v25 = sub_1C106F544();
      sub_1C079E000(v25, (uint64_t)qword_1ED78D800);
      v26 = sub_1C106F538();
      v27 = sub_1C107039C();
      v28 = os_log_type_enabled(v26, v27);
      v29 = v34;
      if (v28)
      {
        v30 = swift_slowAlloc();
        *(_DWORD *)v30 = 134218240;
        v42 = 10000;
        sub_1C10705AC();
        *(_WORD *)(v30 + 12) = 2048;
        v42 = 10000;
        v19 = v38;
        sub_1C10705AC();
        _os_log_impl(&dword_1C0771000, v26, v27, "BehaviorDatabase: Has more than %ld unique behaviors in it. Reducing to the first %ld rows", (uint8_t *)v30, 0x16u);
        MEMORY[0x1C3BA8270](v30, -1, -1);
      }

      sub_1C07BB218(&qword_1EF631D58, &qword_1EF631D48);
      sub_1C106BF38();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v19);
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v11, v29, v19);
    }
    sub_1C07BB218(&qword_1EF631D50, &qword_1EF631D48);
    v31 = v36;
    v32 = sub_1C106BAD0();
    result = (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v11, v19);
    if (!v31)
      *v37 = v32;
  }
  return result;
}

uint64_t sub_1C083EC38(uint64_t a1)
{
  return sub_1C083F0EC(a1, &qword_1EF631D20);
}

void sub_1C083EC5C(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;

  swift_retain();
  sub_1C0838FFC(a2, a1);
  if (!v3)
  {
    sub_1C0898EA4(v7);
    *a3 = v8;
  }
}

uint64_t sub_1C083ECAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[5];
  uint64_t v40[3];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43[5];
  uint64_t v44[3];
  uint64_t v45;
  uint64_t v46;
  _BYTE v47[48];

  v38 = a2;
  v37 = a3;
  v4 = sub_1C106D6CC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_1C07ACF80(&qword_1EF631D18);
  v34 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_1C07ACF80(&qword_1EF631D48);
  v36 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07DFF44(a1, (uint64_t)v47);
  type metadata accessor for BehaviorPopularity(0);
  v12 = sub_1C106C49C();
  v13 = MEMORY[0x1E0D24668];
  v45 = v12;
  v46 = MEMORY[0x1E0D24668];
  sub_1C079DFC4(v44);
  v14 = sub_1C106C4A8();
  sub_1C0824E00(v14, v15, v16, v17, v18, v19, v20, v21);
  v22 = sub_1C106D6C0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v41 = MEMORY[0x1E0DEB418];
  v42 = MEMORY[0x1E0D249F8];
  v40[0] = v22;
  v23 = sub_1C106BCBC();
  v24 = MEMORY[0x1E0D23DC0];
  v43[3] = v23;
  v43[4] = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v43);
  sub_1C106C310();
  sub_1C0784B6C((uint64_t)v40, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v44);
  v45 = v12;
  v46 = v13;
  sub_1C079DFC4(v44);
  sub_1C106C4A8();
  sub_1C0821B64();
  v39[3] = MEMORY[0x1E0DEA968];
  v39[4] = MEMORY[0x1E0D24960];
  v39[0] = v25;
  v39[1] = v26;
  v41 = v23;
  v42 = v24;
  sub_1C079DFC4(v40);
  sub_1C106C310();
  sub_1C0784B6C((uint64_t)v39, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v44);
  v45 = v23;
  v46 = v24;
  sub_1C079DFC4(v44);
  sub_1C106C2F8();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v40);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v43);
  sub_1C07803F8(&qword_1EF631D30, (void (*)(uint64_t))type metadata accessor for BehaviorPopularity);
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v44);
  sub_1C07ACF80((uint64_t *)&unk_1ED7614B0);
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1C1079220;
  v28 = MEMORY[0x1E0D24650];
  *(_QWORD *)(v27 + 56) = v12;
  *(_QWORD *)(v27 + 64) = v28;
  sub_1C079DFC4((uint64_t *)(v27 + 32));
  sub_1C106C4A8();
  v29 = v33;
  sub_1C106C10C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v29);
  sub_1C07BB218(&qword_1EF631D50, &qword_1EF631D48);
  v30 = v35;
  sub_1C106BADC();
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v11, v30);
}

uint64_t sub_1C083F0C8(uint64_t a1)
{
  return sub_1C083F0EC(a1, &qword_1ED760128);
}

uint64_t sub_1C083F0EC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  sub_1C07ACF80(a2);
  result = sub_1C106BA70();
  if (!v2)
    return v4;
  return result;
}

uint64_t sub_1C083F158@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35[5];
  uint64_t v36[5];
  _BYTE v37[56];
  uint64_t v38;

  v31 = a1;
  v29 = a3;
  v4 = sub_1C106D6CC();
  v34 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v33 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for BehaviorPopularity(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C07ACF80(&qword_1EF631D18);
  v30 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = a2;
  v35[3] = sub_1C106C49C();
  v35[4] = MEMORY[0x1E0D24668];
  sub_1C079DFC4(v35);
  sub_1C106C4A8();
  v36[3] = sub_1C106BCBC();
  v36[4] = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v36);
  sub_1C07ACF80(&qword_1EF631D20);
  sub_1C07BB218(&qword_1EF631D28, &qword_1EF631D20);
  sub_1C106FD6C();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v35);
  sub_1C07803F8(&qword_1EF631D30, (void (*)(uint64_t))type metadata accessor for BehaviorPopularity);
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v36);
  sub_1C07BB218(&qword_1EF631D38, &qword_1EF631D18);
  sub_1C07803F8(&qword_1EF631D40, (void (*)(uint64_t))type metadata accessor for BehaviorPopularity);
  v13 = v32;
  v14 = sub_1C106BAB8();
  result = (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v12, v10);
  if (!v13)
  {
    v16 = v29;
    v32 = v6;
    v17 = *(_QWORD *)(v14 + 16);
    if (v17)
    {
      v31 = 0;
      v36[0] = MEMORY[0x1E0DEE9D8];
      sub_1C09D3350();
      v18 = *(unsigned __int8 *)(v7 + 80);
      v30 = v14;
      v19 = v14 + ((v18 + 32) & ~v18);
      v20 = *(_QWORD *)(v7 + 72);
      v21 = v4;
      do
      {
        sub_1C083F944(v19, (uint64_t)v9, type metadata accessor for BehaviorPopularity);
        v22 = (uint64_t)v33;
        (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v33, v9, v4);
        v23 = (uint64_t *)&v9[*(int *)(v32 + 20)];
        v25 = *v23;
        v24 = v23[1];
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        sub_1C0821FFC(v22, v25, v24, (uint64_t)v37);
        sub_1C07B1F90((uint64_t)v9, type metadata accessor for BehaviorPopularity);
        v26 = v36[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C09D3350();
          v26 = v36[0];
        }
        v27 = *(_QWORD *)(v26 + 16);
        if (v27 >= *(_QWORD *)(v26 + 24) >> 1)
        {
          sub_1C09D3350();
          v26 = v36[0];
        }
        *(_QWORD *)(v26 + 16) = v27 + 1;
        sub_1C07DFF44((uint64_t)v37, v26 + 48 * v27 + 32);
        v19 += v20;
        --v17;
        v4 = v21;
      }
      while (v17);
      result = swift_bridgeObjectRelease();
      v16 = v29;
    }
    else
    {
      result = swift_bridgeObjectRelease();
      v26 = MEMORY[0x1E0DEE9D8];
    }
    *v16 = v26;
  }
  return result;
}

void sub_1C083F534()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _WORD *v3;
  NSObject *v4;
  os_signpost_type_t v5;
  os_signpost_id_t v6;
  os_signpost_type_t v7;
  os_signpost_id_t v8;

  sub_1C077AE5C();
  sub_1C07758F4();
  sub_1C0794384();
  MEMORY[0x1E0C80A78](v2);
  sub_1C0778544();
  sub_1C106F4CC();
  sub_1C106F49C();
  v3 = (_WORD *)sub_1C0780FC8();
  v4 = sub_1C079C2F8(v3);
  v5 = sub_1C107048C();
  v6 = sub_1C078C7E0();
  sub_1C079A808(&dword_1C0771000, v4, v5, v6, "BehaviorDatabase.removeAllBehaviors", "");
  sub_1C07A22EC();
  sub_1C106BCE0();
  if (!v0)
  {
    v7 = sub_1C1070480();
    v8 = sub_1C078C7E0();
    sub_1C079A808(&dword_1C0771000, v4, v7, v8, "BehaviorDatabase.removeAllBehaviors", "");

    sub_1C0776778();
  }

  sub_1C078C76C(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_1C07757D0();
}

uint64_t sub_1C083F664()
{
  type metadata accessor for BehaviorPopularity(0);
  sub_1C07803F8(&qword_1EF631D30, (void (*)(uint64_t))type metadata accessor for BehaviorPopularity);
  return sub_1C106B9B0();
}

void sub_1C083F6CC()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C07B1F90(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore16BehaviorDatabase_config, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  sub_1C078D3DC();
  sub_1C078D3DC();
  sub_1C078D3DC();
  v1 = sub_1C106F4E4();
  sub_1C077B5C8(v1);
  sub_1C0778534();
}

uint64_t sub_1C083F738()
{
  sub_1C083F6CC();
  return swift_deallocClassInstance();
}

uint64_t sub_1C083F75C()
{
  return type metadata accessor for BehaviorDatabase(0);
}

uint64_t type metadata accessor for BehaviorDatabase(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1ED7549D8);
}

uint64_t sub_1C083F778()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for Configuration();
  if (v1 <= 0x3F)
  {
    result = sub_1C106F4E4();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

unint64_t sub_1C083F818()
{
  return sub_1C083AA78();
}

uint64_t sub_1C083F838()
{
  sub_1C0839F44();
  return swift_retain();
}

uint64_t sub_1C083F854()
{
  return sub_1C083A264();
}

uint64_t sub_1C083F868@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1C083F158(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t type metadata accessor for BehaviorPopularity(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1ED754A28);
}

void sub_1C083F894(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_1C083EC5C(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1C083F8AC()
{
  return sub_1C083E668();
}

uint64_t sub_1C083F8C0()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1C083F8E4(void *a1)
{
  uint64_t v1;

  sub_1C083DA70(a1, v1);
}

uint64_t sub_1C083F8EC()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C083F920(uint64_t a1)
{
  uint64_t v1;

  return sub_1C083DAD0(a1, *(_QWORD *)(v1 + 16), *(void (**)(uint64_t))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1C083F92C(uint64_t a1)
{
  uint64_t v1;

  return sub_1C083DECC(a1, v1);
}

void sub_1C083F944(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  sub_1C0778534();
}

uint64_t sub_1C083F984(uint64_t a1)
{
  uint64_t v1;

  return sub_1C083B570(a1, v1);
}

uint64_t sub_1C083F99C(uint64_t a1)
{
  uint64_t v1;

  return sub_1C083BBF4(a1, v1);
}

uint64_t sub_1C083F9B4(uint64_t a1)
{
  uint64_t v1;

  return sub_1C083C690(a1, v1);
}

uint64_t sub_1C083F9CC(uint64_t a1)
{
  return sub_1C083C958(a1);
}

void sub_1C083F9E4()
{
  sub_1C083CD78();
}

void sub_1C083FA0C()
{
  sub_1C083CD78();
}

uint64_t sub_1C083FA34()
{
  return swift_deallocObject();
}

uint64_t sub_1C083FA44()
{
  return sub_1C083A924();
}

uint64_t *sub_1C083FA5C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1C106D6CC();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    v13 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)a1 + v13) = *(uint64_t *)((char *)a2 + v13);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  return a1;
}

uint64_t sub_1C083FB0C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C106D6CC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C083FB54(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_1C106D6CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v12 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

uint64_t sub_1C083FBD8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_1C106D6CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_1C083FC78(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1C106D6CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  return a1;
}

uint64_t sub_1C083FCF0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_1C106D6CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_1C083FD7C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C083FD88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = sub_1C0780478();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return sub_1C07B2D80(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

