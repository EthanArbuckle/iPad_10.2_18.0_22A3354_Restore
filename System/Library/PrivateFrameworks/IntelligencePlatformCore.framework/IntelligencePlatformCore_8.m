void sub_1C0B7C198(int a1, int a2, uint64_t a3, void (**a4)(_QWORD, uint64_t, _QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  double v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  const void *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  char *v54;
  void (**v55)(_QWORD, uint64_t, _QWORD);
  _QWORD v56[3];
  uint64_t v57;
  _UNKNOWN **v58;
  _QWORD v59[3];
  uint64_t v60;
  _UNKNOWN **v61;

  v55 = a4;
  v50 = a2;
  v53 = a1;
  v4 = sub_1C106ADE0();
  v51 = *(_QWORD *)(v4 - 8);
  v52 = v4;
  MEMORY[0x1E0C80A78](v4);
  v54 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C07ACF80(&qword_1ED75E630);
  MEMORY[0x1E0C80A78](v6);
  v49 = (uint64_t)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v47 - v9;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v47 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v47 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v47 - v18;
  if (qword_1ED762B18 != -1)
    swift_once();
  v20 = sub_1C106F544();
  sub_1C079E000(v20, (uint64_t)qword_1ED762AF8);
  v21 = sub_1C106F538();
  v22 = sub_1C10703A8();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v23 = 0;
    _os_log_impl(&dword_1C0771000, v21, v22, "InternalXPC: Behavior Understanding digest", v23, 2u);
    MEMORY[0x1C3BA8270](v23, -1, -1);
  }

  if (qword_1ED749400 != -1)
    swift_once();
  v24 = sub_1C079E000(v6, (uint64_t)qword_1ED7493E0);
  swift_beginAccess();
  sub_1C078A8F8(v24, (uint64_t)v19, &qword_1ED75E630);
  v25 = type metadata accessor for Configuration();
  if (sub_1C07B2D80((uint64_t)v19, 1, v25) == 1)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (qword_1ED762808 != -1)
    swift_once();
  v26 = sub_1C0CBD86C();
  sub_1C07B1F90((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v27 = *(id *)(v26 + OBJC_IVAR____TtCO24IntelligencePlatformCore14ViewGeneration11ViewClients_viewService);
  swift_release();
  sub_1C078A8F8(v24, (uint64_t)v16, &qword_1ED75E630);
  if (sub_1C07B2D80((uint64_t)v16, 1, v25) == 1)
    goto LABEL_22;
  v28 = type metadata accessor for BehaviorHistoryUtility();
  swift_allocObject();
  v29 = v27;
  sub_1C086AA04();
  v48 = v30;
  v47 = v29;
  v31 = (uint64_t)v54;
  sub_1C106ADA4();
  if ((v53 & 1) == 0)
    goto LABEL_14;
  sub_1C078A8F8(v24, (uint64_t)v13, &qword_1ED75E630);
  if (sub_1C07B2D80((uint64_t)v13, 1, v25) == 1)
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  type metadata accessor for BehaviorFeaturizer();
  v60 = v28;
  v61 = &off_1E7A0FBC8;
  v59[0] = v48;
  swift_retain();
  sub_1C084C088((uint64_t)v13, (uint64_t)v59);
  sub_1C084D4DC(v31);
  swift_release();
LABEL_14:
  if ((v50 & 1) == 0)
  {
LABEL_20:
    v46 = v55;
    v55[2](v55, 1, 0);

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v31, v52);
    _Block_release(v46);
    return;
  }
  sub_1C078A8F8(v24, (uint64_t)v10, &qword_1ED75E630);
  if (sub_1C07B2D80((uint64_t)v10, 1, v25) == 1)
    goto LABEL_24;
  v60 = type metadata accessor for BehaviorDatabase(0);
  v61 = &off_1E7A10C48;
  if (qword_1ED7549C0 != -1)
    swift_once();
  swift_retain();
  v32 = sub_1C0CBD818();
  swift_release();
  v59[0] = v32;
  sub_1C07B1F90((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v57 = v28;
  v58 = &off_1E7A0FBC8;
  v56[0] = v48;
  v33 = v49;
  sub_1C078A8F8(v24, v49, &qword_1ED75E630);
  if (sub_1C07B2D80(v33, 1, v25) != 1)
  {
    type metadata accessor for KeyValueStore();
    swift_allocObject();
    swift_retain();
    v34 = KeyValueStore.init(config:domain:)(v33, 1413829954, 0xE400000000000000);
    v35 = sub_1C079D180((uint64_t)v59, v60);
    v36 = MEMORY[0x1E0C80A78](v35);
    v38 = (uint64_t *)((char *)&v47 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v39 + 16))(v38, v36);
    v40 = sub_1C079D180((uint64_t)v56, v57);
    v41 = MEMORY[0x1E0C80A78](v40);
    v43 = (uint64_t *)((char *)&v47 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v44 + 16))(v43, v41);
    v45 = *v43;
    v31 = (uint64_t)v54;
    sub_1C0B8A4C0(*v38, v45, v34, (uint64_t)type metadata accessor for BehaviorHistoryUtility, (uint64_t)&off_1E7A0FBC8);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v56);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v59);
    sub_1C0877154(v31);
    swift_release();
    goto LABEL_20;
  }
LABEL_25:
  __break(1u);
}

void InternalXPC.Server.behaviorUnderstandingDigest(withShouldDigestFeaturizer:shouldDigestSampleGenerator:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  NSObject *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(_QWORD, uint64_t);
  void (*v28)(_QWORD, uint64_t);
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  os_log_type_t v44;
  void *v45;
  uint64_t *v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  id v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  os_log_type_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(_QWORD, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80[2];
  uint64_t *v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  void (*v88)(_QWORD, uint64_t);
  uint64_t v89;
  _QWORD v90[3];
  uint64_t v91;
  _UNKNOWN **v92;
  uint64_t v93;
  uint64_t v94;
  _UNKNOWN **v95;

  sub_1C0779670();
  a19 = v24;
  a20 = v25;
  v89 = v26;
  v28 = v27;
  v83 = v29;
  v86 = v30;
  v31 = sub_1C077AE98();
  v84 = *(_QWORD *)(v31 - 8);
  v85 = v31;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v32);
  sub_1C077AE40();
  v87 = v33;
  v34 = sub_1C07ACF80(&qword_1ED75E630);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v35);
  sub_1C077AED0();
  v82 = v36;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v37);
  sub_1C07816D0();
  MEMORY[0x1E0C80A78](v38);
  sub_1C07B7C10();
  MEMORY[0x1E0C80A78](v39);
  sub_1C077D048();
  MEMORY[0x1E0C80A78](v40);
  v42 = (char *)v80 - v41;
  if (qword_1ED762B18 != -1)
    swift_once();
  v43 = sub_1C077585C();
  sub_1C079E000(v43, (uint64_t)qword_1ED762AF8);
  sub_1C077EBF8();
  v44 = sub_1C0784E0C();
  if (sub_1C07758D8(v44))
  {
    *(_WORD *)sub_1C0775854() = 0;
    sub_1C0B8B768(&dword_1C0771000, v20, (os_log_type_t)v21, "InternalXPC: Behavior Understanding digest");
    sub_1C0776778();
  }

  if (qword_1ED749400 != -1)
    swift_once();
  v45 = (void *)sub_1C079E000(v34, (uint64_t)qword_1ED7493E0);
  sub_1C0775864();
  sub_1C078A8F8((uint64_t)v45, (uint64_t)v42, &qword_1ED75E630);
  v46 = (uint64_t *)sub_1C0779D10();
  sub_1C077AEEC((uint64_t)v42, 1, (uint64_t)v46);
  if (v47)
  {
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v88 = v28;
  if (qword_1ED762808 != -1)
    swift_once();
  v48 = sub_1C077B290();
  if (v21)
  {
    sub_1C07A9A08(v48, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    sub_1C077CF64();
    sub_1C077CF64();
    sub_1C077E780();
    v67 = sub_1C077CF00();
    if (sub_1C0775B94(v67))
    {
      sub_1C0775854();
      v93 = sub_1C0775854();
      sub_1C07AF29C(4.8149e-34);
      v90[0] = v21;
      sub_1C077CF64();
      sub_1C07ACF80(&qword_1ED7614F0);
      v68 = sub_1C106FB5C();
      v90[0] = sub_1C0B8B7C8(v68, v69);
      sub_1C0781EA8();
      sub_1C0775894();
      sub_1C077E6C8();
      sub_1C077E6C8();
      sub_1C078B12C(&dword_1C0771000, v70, v71, "InternalXPC: Behavior Understanding digest: failed: %s");
      sub_1C0778610();
      sub_1C0776778();
    }
    sub_1C077E6C8();
    sub_1C077E6C8();

    v72 = v88;
    sub_1C077CF64();
    v72(0, v21);
    sub_1C077E6C8();
    sub_1C077E6C8();
    goto LABEL_25;
  }
  v49 = v48;
  sub_1C07A9A08(v48, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v50 = *(id *)(v49 + OBJC_IVAR____TtCO24IntelligencePlatformCore14ViewGeneration11ViewClients_viewService);
  sub_1C07814FC();
  sub_1C078A8F8((uint64_t)v45, v22, &qword_1ED75E630);
  sub_1C077AEEC(v22, 1, (uint64_t)v46);
  if (v47)
    goto LABEL_28;
  v51 = sub_1C07AC878();
  sub_1C077B5BC();
  v52 = v50;
  sub_1C086AA04();
  v81 = v53;
  v80[1] = (uint64_t)v52;
  v54 = v87;
  sub_1C106ADA4();
  if ((v86 & 1) == 0)
    goto LABEL_16;
  sub_1C0B8B650((uint64_t)v45, v55, &qword_1ED75E630);
  sub_1C077AEEC(v23, 1, (uint64_t)v46);
  if (v47)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  sub_1C079B470();
  v94 = v51;
  v95 = &off_1E7A0FBC8;
  v93 = (uint64_t)v81;
  sub_1C077E394();
  sub_1C07B6AC0();
  sub_1C084D4DC(v54);
  sub_1C07785A8();
LABEL_16:
  if ((v83 & 1) == 0)
  {
LABEL_26:
    v88(1, 0);
    sub_1C078E0D0((uint64_t)&a16);
    sub_1C07797A4();
    sub_1C0B8B610();
LABEL_25:
    sub_1C0776760();
    return;
  }
  sub_1C0779988((uint64_t)v45, v55, &qword_1ED75E630);
  v56 = sub_1C0B8B6E4();
  sub_1C077AEEC(v56, v57, (uint64_t)v46);
  if (v47)
    goto LABEL_30;
  v94 = sub_1C0B8B750();
  v95 = &off_1E7A10C48;
  if (qword_1ED7549C0 != -1)
    swift_once();
  sub_1C0779758();
  v58 = sub_1C0CBD818();
  v59 = sub_1C07785A8();
  v93 = v58;
  sub_1C07888C4(v59, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v91 = v51;
  v92 = &off_1E7A0FBC8;
  v60 = v81;
  v90[0] = v81;
  v61 = (uint64_t)v45;
  v62 = v82;
  sub_1C079BF4C(v61, v63, &qword_1ED75E630);
  v64 = sub_1C07B1684();
  sub_1C077AEEC(v64, v65, (uint64_t)v46);
  if (!v47)
  {
    sub_1C078C2F8();
    sub_1C077B5BC();
    sub_1C077C14C();
    v66 = sub_1C07BC2D0(v62);
    sub_1C0B8B758();
    sub_1C07BA814();
    MEMORY[0x1E0C80A78](v73);
    sub_1C07AD704(v74, v75, v80[0]);
    sub_1C079D180((uint64_t)v90, v91);
    sub_1C07BA814();
    MEMORY[0x1E0C80A78](v76);
    sub_1C07795DC();
    (*(void (**)(uint64_t *))(v77 + 16))(v46);
    v78 = *v60;
    v79 = v87;
    sub_1C0B8A4C0(v78, *v46, v66, (uint64_t)type metadata accessor for BehaviorHistoryUtility, (uint64_t)&off_1E7A0FBC8);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v90);
    sub_1C07A9C3C();
    sub_1C0877154(v79);
    sub_1C07785A8();
    goto LABEL_26;
  }
LABEL_31:
  __break(1u);
}

void sub_1C0B7D110(void *a1, int a2, uint64_t a3, uint64_t a4, void *aBlock, void (*a6)(uint64_t, uint64_t, id, void *))
{
  void *v10;
  id v11;

  v10 = _Block_copy(aBlock);
  _Block_copy(v10);
  v11 = a1;
  a6(a3, a4, v11, v10);
  _Block_release(v10);

}

void sub_1C0B7D188(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint8_t *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39[3];

  v7 = sub_1C07ACF80(&qword_1ED75E630);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v37 = (char *)&v32 - v11;
  _Block_copy(a4);
  if (qword_1ED762B18 != -1)
    swift_once();
  v12 = sub_1C106F544();
  v13 = sub_1C079E000(v12, (uint64_t)qword_1ED762AF8);
  swift_bridgeObjectRetain_n();
  v14 = sub_1C106F538();
  v15 = sub_1C10703A8();
  v16 = os_log_type_enabled(v14, v15);
  v34 = (uint64_t)a2;
  v35 = v9;
  v36 = v13;
  if (v16)
  {
    v17 = (uint8_t *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    v39[0] = v18;
    v32 = v7;
    v33 = a1;
    *(_DWORD *)v17 = 136315138;
    v19 = a4;
    if (a2)
      v20 = a1;
    else
      v20 = 7104878;
    if (a2)
      v21 = (unint64_t)a2;
    else
      v21 = 0xE300000000000000;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v22 = v20;
    a4 = v19;
    v38 = sub_1C0788DAC(v22, v21, v39);
    v7 = v32;
    sub_1C10705AC();
    swift_bridgeObjectRelease_n();
    a1 = v33;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0771000, v14, v15, "InternalXPC: Behavior Understanding recentBehaviors [type=%s]", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BA8270](v18, -1, -1);
    MEMORY[0x1C3BA8270](v17, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v23 = (uint64_t)v37;
  if (qword_1ED749400 != -1)
    swift_once();
  v24 = sub_1C079E000(v7, (uint64_t)qword_1ED7493E0);
  swift_beginAccess();
  sub_1C078A8F8(v24, v23, &qword_1ED75E630);
  v25 = type metadata accessor for Configuration();
  if (sub_1C07B2D80(v23, 1, v25) == 1)
  {
    _Block_release(a4);
    __break(1u);
  }
  else
  {
    if (qword_1ED762808 != -1)
      swift_once();
    v26 = sub_1C0CBD86C();
    sub_1C07B1F90(v23, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    v27 = *(id *)(v26 + OBJC_IVAR____TtCO24IntelligencePlatformCore14ViewGeneration11ViewClients_viewService);
    swift_release();
    a2 = v35;
    sub_1C078A8F8(v24, (uint64_t)v35, &qword_1ED75E630);
    if (sub_1C07B2D80((uint64_t)a2, 1, v25) != 1)
    {
      type metadata accessor for BehaviorHistoryUtility();
      swift_allocObject();
      v28 = v27;
      sub_1C086AA04();
      v30 = v29;
      v31 = (void *)MEMORY[0x1C3BA79F4]();
      _Block_copy(a4);
      sub_1C0B7DB80(a1, v34, v30, (void (**)(_QWORD, void *, void *))a4);
      objc_autoreleasePoolPop(v31);
      swift_release();

      _Block_release(a4);
      _Block_release(a4);
      return;
    }
  }
  _Block_release(a4);
  __break(1u);
  _Block_release(a4);
  objc_autoreleasePoolPop(a2);
  __break(1u);
}

void InternalXPC.Server.behaviorUnderstandingRecentBehaviors(ofType:completion:)()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, void *);
  void (*v4)(uint64_t, void *);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  os_log_type_t v16;
  _BOOL4 v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  _QWORD v40[3];
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  uint64_t v44;
  uint64_t v45;

  sub_1C0779670();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = sub_1C07ACF80(&qword_1ED75E630);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v10);
  sub_1C077AED0();
  v42 = v11;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v40 - v13;
  if (qword_1ED762B18 != -1)
    swift_once();
  v15 = sub_1C077585C();
  sub_1C0781988(v15, (uint64_t)qword_1ED762AF8);
  sub_1C07767CC();
  v43 = v0;
  sub_1C106F538();
  v16 = sub_1C0784E0C();
  v17 = sub_1C077AF58(v0);
  v41 = v8;
  if (v17)
  {
    v40[1] = v2;
    v18 = sub_1C0775854();
    v40[2] = v4;
    v19 = (uint8_t *)v18;
    v20 = sub_1C0775854();
    v40[0] = v9;
    v45 = v20;
    *(_DWORD *)v19 = 136315138;
    if (v6)
      v21 = v8;
    else
      v21 = 7104878;
    if (v6)
      v22 = v6;
    else
      v22 = 0xE300000000000000;
    sub_1C07767C4();
    v44 = sub_1C0788DAC(v21, v22, &v45);
    sub_1C10705AC();
    sub_1C07758A4();
    sub_1C0775844();
    sub_1C07796F0(&dword_1C0771000, v0, v16, "InternalXPC: Behavior Understanding recentBehaviors [type=%s]", v19);
    sub_1C0778610();
    sub_1C0776778();
  }

  sub_1C07758A4();
  if (qword_1ED749400 != -1)
    swift_once();
  v23 = sub_1C079E000(v9, (uint64_t)qword_1ED7493E0);
  sub_1C0775864();
  sub_1C0779988(v23, v24, &qword_1ED75E630);
  v25 = sub_1C0779D10();
  sub_1C077AEEC((uint64_t)v14, 1, (uint64_t)v25);
  if (v26)
  {
    __break(1u);
  }
  else
  {
    if (qword_1ED762808 != -1)
      swift_once();
    v27 = sub_1C077B290();
    if (v8)
    {
      sub_1C07888C4(v27, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
      sub_1C077CF64();
      sub_1C077CF64();
      sub_1C106F538();
      v32 = sub_1C077CF00();
      if (os_log_type_enabled(v25, v32))
      {
        v33 = (uint8_t *)sub_1C0775854();
        v44 = sub_1C0775854();
        *(_DWORD *)v33 = 136315138;
        sub_1C077F64C();
        v34 = sub_1C1070D74();
        v36 = sub_1C0788DAC(v34, v35, &v44);
        sub_1C0780554(v36);
        sub_1C10705AC();
        sub_1C077960C();
        sub_1C077E6C8();
        sub_1C077E6C8();
        sub_1C07796F0(&dword_1C0771000, v25, v32, "InternalXPC: BehaviorUnderstanding recentBehaviors failed: %s", v33);
        sub_1C0778610();
        sub_1C0776778();
      }
      sub_1C077E6C8();
      sub_1C077E6C8();
      sub_1C077E6C8();
      goto LABEL_23;
    }
    v28 = v27;
    sub_1C07888C4(v27, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    v29 = *(id *)(v28 + OBJC_IVAR____TtCO24IntelligencePlatformCore14ViewGeneration11ViewClients_viewService);
    sub_1C07767F4();
    v30 = v42;
    sub_1C0779988(v23, v31, &qword_1ED75E630);
    sub_1C077AEEC(v30, 1, (uint64_t)v25);
    if (!v26)
    {
      sub_1C07AC878();
      sub_1C077B5BC();
      v25 = v29;
      sub_1C086AA04();
      v38 = v37;
      v39 = (void *)MEMORY[0x1C3BA79F4]();
      sub_1C0B7DFA0(v41, v6, v38, v4, v2);
      objc_autoreleasePoolPop(v39);
      sub_1C07785A8();
LABEL_23:

      sub_1C0776760();
      return;
    }
  }
  __break(1u);
}

void sub_1C0B7DB80(uint64_t a1, uint64_t a2, uint64_t a3, void (**a4)(_QWORD, void *, void *))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, _QWORD, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void **v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  void *v27;
  const void *v28;
  _QWORD v29[3];
  void (**v30)(_QWORD, void *, void *);
  uint64_t aBlock;
  uint64_t v32;
  uint64_t (*v33)(uint64_t);
  void *v34;
  void *v35;
  uint64_t v36;

  v30 = a4;
  v29[1] = a1;
  v29[2] = a3;
  v5 = sub_1C106D6CC();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1C106ADE0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v10);
  v12 = (void (*)(char *, _QWORD, uint64_t))((char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v29 - v14;
  if (a2)
  {
    sub_1C106ADA4();
    sub_1C106AD2C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_1C07B2D8C((uint64_t)v15, 0, 1, v6);
    sub_1C106ADA4();
    sub_1C07B2D8C((uint64_t)v12, 0, 1, v6);
    sub_1C106D69C();
    sub_1C086C570();
  }
  sub_1C106ADA4();
  sub_1C106AD2C();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1C07B2D8C((uint64_t)v15, 0, 1, v6);
  sub_1C106ADA4();
  sub_1C07B2D8C((uint64_t)v12, 0, 1, v6);
  v16 = sub_1C0869E90((uint64_t)v15, v12, 1, MEMORY[0x1E0DEE9E8]);
  sub_1C0784B6C((uint64_t)v12, (uint64_t *)&unk_1ED762690);
  sub_1C0784B6C((uint64_t)v15, (uint64_t *)&unk_1ED762690);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = MEMORY[0x1E0DEE9D8];
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = 0;
  v19 = (void **)(v18 + 16);
  v35 = sub_1C0B8B1C4;
  v36 = v18;
  v20 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v32 = 1107296256;
  v33 = (uint64_t (*)(uint64_t))sub_1C07BF90C;
  v34 = &unk_1E7A20EE0;
  v21 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v35 = sub_1C0B8B1C8;
  v36 = v17;
  aBlock = v20;
  v32 = 1107296256;
  v33 = sub_1C082E0C0;
  v34 = &unk_1E7A20F08;
  v22 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v23 = objc_msgSend(v16, sel_sinkWithCompletion_receiveInput_, v21, v22);
  _Block_release(v22);
  _Block_release(v21);

  swift_beginAccess();
  swift_beginAccess();
  v24 = *v19;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v25 = v24;
  v26 = (void *)sub_1C106FEEC();
  if (v24)
    v27 = (void *)sub_1C106AA08();
  else
    v27 = 0;
  v28 = v30;
  v30[2](v30, v26, v27);

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  _Block_release(v28);
}

uint64_t sub_1C0B7DFA0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, void *), uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, _QWORD, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void **v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, void *);
  uint64_t aBlock;
  uint64_t v34;
  uint64_t (*v35)(uint64_t);
  void *v36;
  void *v37;
  uint64_t v38;

  v32 = a4;
  v30 = a3;
  v31 = a5;
  v29 = a1;
  v6 = sub_1C106D6CC();
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_1C106ADE0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v11);
  v13 = (void (*)(char *, _QWORD, uint64_t))((char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v29 - v15;
  if (a2)
  {
    sub_1C106ADA4();
    sub_1C106AD2C();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    sub_1C07B2D8C((uint64_t)v16, 0, 1, v7);
    sub_1C106ADA4();
    sub_1C07B2D8C((uint64_t)v13, 0, 1, v7);
    sub_1C106D69C();
    sub_1C086C570();
  }
  sub_1C106ADA4();
  sub_1C106AD2C();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1C07B2D8C((uint64_t)v16, 0, 1, v7);
  sub_1C106ADA4();
  sub_1C07B2D8C((uint64_t)v13, 0, 1, v7);
  v17 = sub_1C0869E90((uint64_t)v16, v13, 1, MEMORY[0x1E0DEE9E8]);
  sub_1C0784B6C((uint64_t)v13, (uint64_t *)&unk_1ED762690);
  sub_1C0784B6C((uint64_t)v16, (uint64_t *)&unk_1ED762690);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = MEMORY[0x1E0DEE9D8];
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = 0;
  v20 = (void **)(v19 + 16);
  v37 = sub_1C0B8B1C4;
  v38 = v19;
  v21 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v34 = 1107296256;
  v35 = (uint64_t (*)(uint64_t))sub_1C07BF90C;
  v36 = &unk_1E7A20F30;
  v22 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v37 = sub_1C0B8B1C8;
  v38 = v18;
  aBlock = v21;
  v34 = 1107296256;
  v35 = sub_1C082E0C0;
  v36 = &unk_1E7A20F58;
  v23 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v24 = objc_msgSend(v17, sel_sinkWithCompletion_receiveInput_, v22, v23, v29, v30, v31);
  _Block_release(v23);
  _Block_release(v22);

  swift_beginAccess();
  v25 = *(_QWORD *)(v18 + 16);
  swift_beginAccess();
  v26 = *v20;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v27 = v26;
  v32(v25, v26);

  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_1C0B7E380(void *a1, uint64_t a2)
{
  id v3;
  void *v4;

  v3 = objc_msgSend(a1, sel_error);
  swift_beginAccess();
  v4 = *(void **)(a2 + 16);
  *(_QWORD *)(a2 + 16) = v3;

}

uint64_t sub_1C0B7E3E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = sub_1C08257D4();
  v5 = v4;
  swift_beginAccess();
  sub_1C07E9DB0();
  v6 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 16);
  sub_1C07EA490();
  v7 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(v7 + 16) = v6 + 1;
  v8 = v7 + 16 * v6;
  *(_QWORD *)(v8 + 32) = v3;
  *(_QWORD *)(v8 + 40) = v5;
  return swift_endAccess();
}

void sub_1C0B7E484(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, const void *a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  int v31;
  _BOOL4 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  void (*v37)(_BYTE *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  _QWORD *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  id v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  id v77;
  double v78;
  id v79;
  unint64_t v80;
  char v81;
  char v82;
  id v83;
  char v84;
  char v85;
  char v86;
  char v87;
  unint64_t v88;
  unint64_t v89;
  char v90;
  uint64_t v91;
  void *v92;
  uint64_t *v93;
  uint64_t v94;
  BOOL v95;
  uint64_t v96;
  void *v97;
  _BYTE v98[12];
  int v99;
  uint64_t v100;
  _BYTE *v101;
  _BYTE *v102;
  _BYTE *v103;
  _BYTE *v104;
  uint64_t v105;
  void (*v106)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v107;
  unint64_t v108;
  _BYTE *v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  const void *v114;
  _QWORD *v115;
  __int16 v116;
  uint64_t v117;
  _UNKNOWN **v118;
  uint64_t v119[6];

  v112 = a1;
  v113 = a3;
  v11 = sub_1C106D6CC();
  MEMORY[0x1E0C80A78](v11);
  v102 = &v98[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v108 = sub_1C07ACF80(&qword_1ED75E630);
  MEMORY[0x1E0C80A78](v108);
  v103 = &v98[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v14);
  v16 = &v98[-v15];
  MEMORY[0x1E0C80A78](v17);
  v109 = &v98[-v18];
  v19 = sub_1C106ADE0();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v107 = &v98[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v22);
  v101 = &v98[-v23];
  MEMORY[0x1E0C80A78](v24);
  v26 = &v98[-v25];
  if (qword_1ED762B18 != -1)
    swift_once();
  v27 = sub_1C106F544();
  v28 = sub_1C079E000(v27, (uint64_t)qword_1ED762AF8);
  v106 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v20 + 16);
  v106(v26, a5, v19);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v105 = v28;
  v29 = sub_1C106F538();
  v30 = sub_1C10703A8();
  v31 = v30;
  v32 = os_log_type_enabled(v29, v30);
  v114 = a7;
  v111 = a2;
  v104 = v16;
  if (v32)
  {
    v33 = swift_slowAlloc();
    v110 = v19;
    v34 = v33;
    v100 = swift_slowAlloc();
    v119[0] = v100;
    *(_DWORD *)v34 = 136315650;
    v99 = v31;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v115 = (_QWORD *)sub_1C0788DAC(v112, a2, v119);
    sub_1C10705AC();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v34 + 12) = 2080;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v115 = (_QWORD *)sub_1C0788DAC(v113, a4, v119);
    sub_1C10705AC();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v34 + 22) = 2080;
    sub_1C0794BAC((unint64_t *)&qword_1ED7565B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
    v35 = sub_1C1070C0C();
    v115 = (_QWORD *)sub_1C0788DAC(v35, v36, v119);
    a7 = v114;
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    v37 = *(void (**)(_BYTE *, uint64_t))(v20 + 8);
    v37(v26, v110);
    _os_log_impl(&dword_1C0771000, v29, (os_log_type_t)v99, "InternalXPC: Behavior Understanding featurizeBehavior [type=%s, identifier=%s, date=%s]", (uint8_t *)v34, 0x20u);
    v38 = v100;
    swift_arrayDestroy();
    MEMORY[0x1C3BA8270](v38, -1, -1);
    v39 = v34;
    v19 = v110;
    MEMORY[0x1C3BA8270](v39, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v37 = *(void (**)(_BYTE *, uint64_t))(v20 + 8);
    v37(v26, v19);
  }

  v40 = (uint64_t)v109;
  if (qword_1ED749400 != -1)
    swift_once();
  v41 = sub_1C079E000(v108, (uint64_t)qword_1ED7493E0);
  swift_beginAccess();
  sub_1C078A8F8(v41, v40, &qword_1ED75E630);
  v42 = type metadata accessor for Configuration();
  if (sub_1C07B2D80(v40, 1, v42) == 1)
    goto LABEL_57;
  if (qword_1ED762808 != -1)
    swift_once();
  v43 = sub_1C0CBD86C();
  v44 = v40;
  v45 = v43;
  v110 = (uint64_t)v37;
  v100 = a5;
  v108 = a4;
  sub_1C07B1F90(v44, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v46 = *(id *)(v45 + OBJC_IVAR____TtCO24IntelligencePlatformCore14ViewGeneration11ViewClients_viewService);
  swift_release();
  v47 = (uint64_t)v104;
  sub_1C078A8F8(v41, (uint64_t)v104, &qword_1ED75E630);
  if (sub_1C07B2D80(v47, 1, v42) == 1)
  {
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    _Block_release(v114);
    sub_1C1070D44();
    __break(1u);
    return;
  }
  v48 = type metadata accessor for BehaviorHistoryUtility();
  swift_allocObject();
  v49 = v46;
  sub_1C086AA04();
  v104 = (_BYTE *)v50;
  v109 = v49;
  v51 = (uint64_t)v102;
  sub_1C106D69C();
  v52 = v108;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0821FFC(v51, v113, v52, (uint64_t)v119);
  v53 = v41;
  v54 = v103;
  sub_1C078A8F8(v53, (uint64_t)v103, &qword_1ED75E630);
  if (sub_1C07B2D80((uint64_t)v54, 1, v42) == 1)
    goto LABEL_59;
  type metadata accessor for BehaviorFeaturizer();
  v117 = v48;
  v118 = &off_1E7A0FBC8;
  v115 = v104;
  swift_retain();
  v55 = sub_1C084C088((uint64_t)v54, (uint64_t)&v115);
  v56 = (uint64_t)v101;
  v106(v101, v100, v19);
  v115 = 0;
  v116 = 256;
  type metadata accessor for BehaviorContext();
  swift_allocObject();
  sub_1C0825B94(v56, (uint64_t *)&v115, 0);
  v57 = sub_1C084861C();
  v58 = sub_1C084C318((uint64_t)v119, v57);
  sub_1C082733C((uint64_t)v119);
  swift_release();
  swift_bridgeObjectRelease();
  if (v58)
  {
    v108 = (unint64_t)v55;
    v110 = sub_1C07D4B70(0, (unint64_t *)&qword_1ED762C00);
    v59 = (_QWORD *)sub_1C106F97C();
    v60 = objc_msgSend(v58, sel_featureNames);
    v61 = sub_1C107021C();

    v62 = 0;
    v63 = *(_QWORD *)(v61 + 56);
    v111 = v61 + 56;
    v113 = v61;
    v64 = 1 << *(_BYTE *)(v61 + 32);
    v65 = -1;
    if (v64 < 64)
      v65 = ~(-1 << v64);
    v66 = v65 & v63;
    v112 = (unint64_t)(v64 + 63) >> 6;
    while (1)
    {
      while (1)
      {
        if (v66)
        {
          v67 = __clz(__rbit64(v66));
          v66 &= v66 - 1;
          v68 = v67 | (v62 << 6);
        }
        else
        {
          v69 = v62 + 1;
          if (__OFADD__(v62, 1))
          {
            __break(1u);
            goto LABEL_54;
          }
          v70 = v109;
          if (v69 >= v112)
            goto LABEL_51;
          v71 = *(_QWORD *)(v111 + 8 * v69);
          ++v62;
          if (!v71)
          {
            v62 = v69 + 1;
            if (v69 + 1 >= v112)
              goto LABEL_51;
            v71 = *(_QWORD *)(v111 + 8 * v62);
            if (!v71)
            {
              v62 = v69 + 2;
              if (v69 + 2 >= v112)
                goto LABEL_51;
              v71 = *(_QWORD *)(v111 + 8 * v62);
              if (!v71)
              {
                v72 = v69 + 3;
                if (v72 >= v112)
                {
LABEL_51:
                  swift_release();
                  v97 = (void *)sub_1C106F934();
                  a7 = v114;
                  (*((void (**)(const void *, void *, _QWORD))v114 + 2))(v114, v97, 0);
                  swift_bridgeObjectRelease();
                  swift_unknownObjectRelease();
                  swift_release();
                  swift_release();

                  goto LABEL_14;
                }
                v71 = *(_QWORD *)(v111 + 8 * v72);
                if (!v71)
                {
                  while (1)
                  {
                    v62 = v72 + 1;
                    if (__OFADD__(v72, 1))
                      break;
                    if (v62 >= v112)
                      goto LABEL_51;
                    v71 = *(_QWORD *)(v111 + 8 * v62);
                    ++v72;
                    if (v71)
                      goto LABEL_34;
                  }
LABEL_54:
                  __break(1u);
LABEL_55:
                  __break(1u);
LABEL_56:
                  __break(1u);
LABEL_57:
                  __break(1u);
                  goto LABEL_58;
                }
                v62 = v72;
              }
            }
          }
LABEL_34:
          v66 = (v71 - 1) & v71;
          v68 = __clz(__rbit64(v71)) + (v62 << 6);
        }
        v73 = (uint64_t *)(*(_QWORD *)(v113 + 48) + 16 * v68);
        v75 = *v73;
        v74 = v73[1];
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v76 = (void *)sub_1C106FAF0();
        v77 = objc_msgSend(v58, sel_featureValueForName_, v76);

        if (v77)
          break;
LABEL_39:
        swift_bridgeObjectRelease();
      }
      objc_msgSend(v77, sel_doubleValue);
      v79 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v78);
      if (v79)
      {
        v83 = v79;
        LODWORD(v106) = swift_isUniquelyReferenced_nonNull_native();
        v115 = v59;
        v107 = (_BYTE *)sub_1C077D774(v75, v74);
        if (__OFADD__(v59[2], (v84 & 1) == 0))
          goto LABEL_55;
        v85 = v84;
        sub_1C07ACF80(qword_1EF6381F0);
        v86 = sub_1C107090C();
        v87 = v85;
        v88 = (unint64_t)v107;
        if ((v86 & 1) != 0)
        {
          v89 = sub_1C077D774(v75, v74);
          if ((v87 & 1) != (v90 & 1))
            goto LABEL_60;
          v88 = v89;
        }
        v59 = v115;
        if ((v87 & 1) != 0)
        {
          v91 = v115[7];

          *(_QWORD *)(v91 + 8 * v88) = v83;
        }
        else
        {
          v115[(v88 >> 6) + 8] |= 1 << v88;
          v93 = (uint64_t *)(v59[6] + 16 * v88);
          *v93 = v75;
          v93[1] = v74;
          *(_QWORD *)(v59[7] + 8 * v88) = v83;
          v94 = v59[2];
          v95 = __OFADD__(v94, 1);
          v96 = v94 + 1;
          if (v95)
            goto LABEL_56;
          v59[2] = v96;
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        }

      }
      else
      {
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v80 = sub_1C077D774(v75, v74);
        v82 = v81;
        swift_bridgeObjectRelease();
        if ((v82 & 1) == 0)
        {

          goto LABEL_39;
        }
        swift_isUniquelyReferenced_nonNull_native();
        v115 = v59;
        sub_1C07ACF80(qword_1EF6381F0);
        sub_1C107090C();
        v59 = v115;
        swift_bridgeObjectRelease();
        v92 = *(void **)(v59[7] + 8 * v80);
        sub_1C1070924();

      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  (*((void (**)(const void *, _QWORD, _QWORD))a7 + 2))(a7, 0, 0);

  swift_release();
  swift_release();
LABEL_14:
  _Block_release(a7);
}

void InternalXPC.Server.behaviorUnderstandingFeaturizeBehavior(ofType:identifier:usingContextAt:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t);
  NSObject *v31;
  os_log_type_t v32;
  _BOOL4 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  void (*v39)(char *, uint64_t);
  NSObject *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  void *v59;
  os_log_type_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  _QWORD *v73;
  id v74;
  uint64_t v75;
  int64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  int64_t v83;
  unint64_t v84;
  int64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  id v90;
  double v91;
  id v92;
  unint64_t v93;
  char v94;
  char v95;
  id v96;
  unint64_t v97;
  uint64_t v98;
  int v99;
  unint64_t v100;
  unint64_t v101;
  char v102;
  uint64_t v103;
  void *v104;
  uint64_t *v105;
  uint64_t v106;
  BOOL v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t (*v120)(uint64_t, uint64_t, uint64_t);
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void (*v124)(uint64_t);
  uint64_t v125;
  _QWORD *v126;
  __int16 v127;
  uint64_t v128;
  _UNKNOWN **v129;
  uint64_t v130;
  uint64_t v131[6];
  uint64_t v132;

  v118 = a7;
  v119 = a6;
  v123 = a3;
  sub_1C07B5A58();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v12);
  sub_1C077AE40();
  v113 = v13;
  v122 = sub_1C07ACF80(&qword_1ED75E630);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v14);
  sub_1C077AED0();
  v114 = v15;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v16);
  sub_1C0779728();
  v115 = v17;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v109 - v19;
  v21 = sub_1C077AE98();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  sub_1C077AED0();
  v125 = v23;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v24);
  sub_1C0779728();
  v112 = v25;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v109 - v27;
  if (qword_1ED762B18 != -1)
    swift_once();
  v29 = sub_1C077585C();
  sub_1C0781988(v29, (uint64_t)qword_1ED762AF8);
  v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 16);
  v121 = a5;
  v120 = v30;
  v30((uint64_t)v28, a5, v21);
  sub_1C07767CC();
  sub_1C07767CC();
  v117 = v7;
  v31 = sub_1C106F538();
  v32 = sub_1C10703A8();
  v33 = sub_1C077AF58(v31);
  v116 = v8;
  if (v33)
  {
    v34 = sub_1C0775854();
    v124 = (void (*)(uint64_t))a4;
    v35 = v34;
    v110 = sub_1C0775854();
    v131[0] = v110;
    *(_DWORD *)v35 = 136315650;
    sub_1C077AEBC();
    v126 = (_QWORD *)sub_1C0789314(v8, v36, v131);
    v111 = v20;
    sub_1C07AFDD8();
    sub_1C077CF6C();
    *(_WORD *)(v35 + 12) = 2080;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v126 = (_QWORD *)sub_1C0788DAC(v123, (unint64_t)v124, v131);
    sub_1C07AFDD8();
    sub_1C077CF6C();
    *(_WORD *)(v35 + 22) = 2080;
    sub_1C0794BAC((unint64_t *)&qword_1ED7565B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
    v37 = sub_1C1070C0C();
    v126 = (_QWORD *)sub_1C0B8B6DC(v37, v38);
    sub_1C10705AC();
    sub_1C077960C();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v28, v21);
    sub_1C078BFF8(&dword_1C0771000, v31, v32, "InternalXPC: Behavior Understanding featurizeBehavior [type=%s, identifier=%s, date=%s]", (uint8_t *)v35);
    sub_1C0B8B828();
    sub_1C0776778();
  }
  sub_1C07758A4();
  sub_1C07758A4();
  v39 = *(void (**)(char *, uint64_t))(v22 + 8);
  v39(v28, v21);

  v40 = v122;
  if (qword_1ED749400 != -1)
    swift_once();
  v41 = sub_1C079E000((uint64_t)v40, (uint64_t)qword_1ED7493E0);
  sub_1C0775864();
  sub_1C0B8B650(v41, v42, &qword_1ED75E630);
  v43 = sub_1C0779D10();
  sub_1C077AEEC((uint64_t)v20, 1, v43);
  if (v44)
    goto LABEL_61;
  if (qword_1ED762808 != -1)
    swift_once();
  v45 = sub_1C077B290();
  if (v8)
  {
    sub_1C07B1F90((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    sub_1C077E908(v125, v121, v120);
    sub_1C077AEBC();
    sub_1C077C0B8();
    sub_1C077CF64();
    sub_1C077AEBC();
    sub_1C077C0B8();
    sub_1C077CF64();
    sub_1C106F538();
    v60 = sub_1C077CF00();
    if (os_log_type_enabled(v40, v60))
    {
      v61 = sub_1C0775854();
      v122 = sub_1C0775854();
      v126 = (_QWORD *)v122;
      *(_DWORD *)v61 = 136315906;
      sub_1C077AEBC();
      v130 = sub_1C0789314(v116, v62, (uint64_t *)&v126);
      v124 = (void (*)(uint64_t))v39;
      sub_1C07AFDD8();
      sub_1C077CF6C();
      *(_WORD *)(v61 + 12) = 2080;
      sub_1C077E6D0();
      v130 = sub_1C07830C0(v123, v63, (uint64_t *)&v126);
      sub_1C07AFDD8();
      sub_1C077CF6C();
      *(_WORD *)(v61 + 22) = 2080;
      sub_1C0794BAC((unint64_t *)&qword_1ED7565B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
      v64 = sub_1C1070C0C();
      v130 = sub_1C0788DAC(v64, v65, (uint64_t *)&v126);
      sub_1C10705AC();
      sub_1C077960C();
      v66 = sub_1C078C6DC();
      v124(v66);
      *(_WORD *)(v61 + 32) = 2080;
      v130 = v8;
      sub_1C077CF64();
      sub_1C07ACF80(&qword_1ED7614F0);
      v67 = sub_1C106FB5C();
      v130 = sub_1C0788DAC(v67, v68, (uint64_t *)&v126);
      sub_1C10705AC();
      sub_1C077B5B4();
      sub_1C077E6C8();
      sub_1C077E6C8();
      _os_log_impl(&dword_1C0771000, v40, v60, "InternalXPC: Behavior Understanding featurizeBehavior [type=%s, identifier=%s, date=%s]: failed: %s", (uint8_t *)v61, 0x2Au);
      swift_arrayDestroy();
      sub_1C0776778();
    }
    sub_1C07758A4();
    sub_1C07758A4();
    v39((char *)v125, v21);
    sub_1C077E6C8();
    sub_1C077E6C8();

    sub_1C077CF64();
    sub_1C07AEF84();
    sub_1C077E6C8();
    sub_1C077E6C8();
    goto LABEL_18;
  }
  v46 = v45;
  v124 = (void (*)(uint64_t))v39;
  v122 = a2;
  sub_1C07B1F90((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v47 = *(id *)(v46 + OBJC_IVAR____TtCO24IntelligencePlatformCore14ViewGeneration11ViewClients_viewService);
  sub_1C077AF1C();
  v48 = v115;
  sub_1C0B8B650(v41, v49, &qword_1ED75E630);
  sub_1C077AEEC(v48, 1, v43);
  if (v44)
    goto LABEL_62;
  v50 = sub_1C07AC878();
  sub_1C077B5BC();
  v51 = (char *)v47;
  sub_1C078C6DC();
  sub_1C086AA04();
  v115 = v52;
  v111 = v51;
  v53 = v113;
  sub_1C106D69C();
  sub_1C077C0B8();
  sub_1C0821FFC(v53, v123, a4, (uint64_t)v131);
  v54 = v114;
  sub_1C0779988(v41, v55, &qword_1ED75E630);
  v56 = sub_1C0B8B6E4();
  sub_1C077AEEC(v56, v57, v43);
  if (!v44)
  {
    sub_1C079B470();
    v128 = v50;
    v129 = &off_1E7A0FBC8;
    v126 = (_QWORD *)v115;
    sub_1C077C14C();
    v58 = sub_1C084C088(v54, (uint64_t)&v126);
    v59 = v111;
    v69 = (uint64_t)v58;
    v70 = v112;
    v120(v112, v121, v21);
    v126 = 0;
    v127 = 256;
    type metadata accessor for BehaviorContext();
    sub_1C077B5BC();
    sub_1C0825B94(v70, (uint64_t *)&v126, 0);
    v71 = sub_1C084861C();
    v72 = sub_1C084C318((uint64_t)v131, v71);
    sub_1C082733C((uint64_t)v131);
    swift_release();
    swift_bridgeObjectRelease();
    if (!v72)
    {
      sub_1C07AEF84();

      sub_1C07797A4();
      sub_1C07814FC();
LABEL_18:
      sub_1C078D424();
      return;
    }
    v121 = v69;
    v120 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C07D4B70(0, (unint64_t *)&qword_1ED762C00);
    v73 = (_QWORD *)sub_1C106F97C();
    v74 = objc_msgSend(v72, sel_featureNames);
    v75 = sub_1C107021C();

    v76 = 0;
    v77 = *(_QWORD *)(v75 + 56);
    v123 = v75 + 56;
    v125 = v75;
    v78 = 1 << *(_BYTE *)(v75 + 32);
    v79 = -1;
    if (v78 < 64)
      v79 = ~(-1 << v78);
    v80 = v79 & v77;
    v124 = (void (*)(uint64_t))((unint64_t)(v78 + 63) >> 6);
    while (1)
    {
      while (1)
      {
        if (v80)
        {
          v81 = __clz(__rbit64(v80));
          v80 &= v80 - 1;
          v82 = v81 | (v76 << 6);
        }
        else
        {
          v83 = v76 + 1;
          if (__OFADD__(v76, 1))
          {
            __break(1u);
            goto LABEL_58;
          }
          if (v83 >= (uint64_t)v124)
            goto LABEL_55;
          v84 = *(_QWORD *)(v123 + 8 * v83);
          ++v76;
          if (!v84)
          {
            v76 = v83 + 1;
            if (v83 + 1 >= (uint64_t)v124)
              goto LABEL_55;
            v84 = *(_QWORD *)(v123 + 8 * v76);
            if (!v84)
            {
              v76 = v83 + 2;
              if (v83 + 2 >= (uint64_t)v124)
                goto LABEL_55;
              v84 = *(_QWORD *)(v123 + 8 * v76);
              if (!v84)
              {
                v85 = v83 + 3;
                if (v85 >= (uint64_t)v124)
                {
LABEL_55:
                  swift_release();
                  sub_1C07AEF84();
                  sub_1C0775894();
                  swift_unknownObjectRelease();
                  sub_1C07797A4();
                  sub_1C07797A4();
                  sub_1C078E0D0((uint64_t)&v132);
                  goto LABEL_18;
                }
                v84 = *(_QWORD *)(v123 + 8 * v85);
                if (!v84)
                {
                  while (1)
                  {
                    v76 = v85 + 1;
                    if (__OFADD__(v85, 1))
                      break;
                    if (v76 >= (uint64_t)v124)
                      goto LABEL_55;
                    v84 = *(_QWORD *)(v123 + 8 * v76);
                    ++v85;
                    if (v84)
                      goto LABEL_38;
                  }
LABEL_58:
                  __break(1u);
LABEL_59:
                  __break(1u);
LABEL_60:
                  __break(1u);
LABEL_61:
                  __break(1u);
LABEL_62:
                  __break(1u);
                  goto LABEL_63;
                }
                v76 = v85;
              }
            }
          }
LABEL_38:
          v80 = (v84 - 1) & v84;
          v82 = __clz(__rbit64(v84)) + (v76 << 6);
        }
        v86 = (uint64_t *)(*(_QWORD *)(v125 + 48) + 16 * v82);
        v87 = *v86;
        v88 = v86[1];
        sub_1C077E6D0();
        v89 = (void *)sub_1C106FAF0();
        v90 = objc_msgSend(v72, sel_featureValueForName_, v89);

        if (v90)
          break;
LABEL_43:
        sub_1C07785A0();
      }
      objc_msgSend(v90, sel_doubleValue);
      v92 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v91);
      if (v92)
      {
        v96 = v92;
        LODWORD(v117) = swift_isUniquelyReferenced_nonNull_native();
        v126 = v73;
        v97 = sub_1C07BABD4();
        v98 = v73[2];
        LODWORD(v122) = v99;
        if (__OFADD__(v98, (v99 & 1) == 0))
          goto LABEL_59;
        v100 = v97;
        sub_1C07ACF80(qword_1EF6381F0);
        if ((sub_1C107090C() & 1) != 0)
        {
          v101 = sub_1C077D774(v87, v88);
          if ((v122 & 1) != (v102 & 1))
            goto LABEL_64;
          v100 = v101;
        }
        v73 = v126;
        if ((v122 & 1) != 0)
        {
          v103 = v126[7];

          *(_QWORD *)(v103 + 8 * v100) = v96;
        }
        else
        {
          v126[(v100 >> 6) + 8] |= 1 << v100;
          v105 = (uint64_t *)(v73[6] + 16 * v100);
          *v105 = v87;
          v105[1] = v88;
          *(_QWORD *)(v73[7] + 8 * v100) = v96;
          v106 = v73[2];
          v107 = __OFADD__(v106, 1);
          v108 = v106 + 1;
          if (v107)
            goto LABEL_60;
          v73[2] = v108;
          sub_1C077E6D0();
        }

      }
      else
      {
        sub_1C07767C4();
        v93 = sub_1C07BABD4();
        v95 = v94;
        sub_1C0775894();
        if ((v95 & 1) == 0)
        {

          goto LABEL_43;
        }
        swift_isUniquelyReferenced_nonNull_native();
        v126 = v73;
        sub_1C07ACF80(qword_1EF6381F0);
        sub_1C107090C();
        v73 = v126;
        swift_bridgeObjectRelease();
        v104 = *(void **)(v73[7] + 8 * v93);
        sub_1C1070924();

      }
      sub_1C07785A0();
      swift_bridgeObjectRelease();
    }
  }
LABEL_63:
  __break(1u);
LABEL_64:
  sub_1C1070D44();
  __break(1u);
}

void sub_1C0B80238(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (**a8)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  id v50;
  const void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char v60;
  uint64_t (*v61)(char *, uint64_t);
  char *v62;
  uint64_t v63;
  void *v64;
  void (**v65)(_QWORD, _QWORD, _QWORD);
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  void (**v78)(_QWORD, _QWORD, _QWORD);
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82[5];
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD v86[5];
  _QWORD v87[6];

  v77 = a6;
  v73 = a5;
  v79 = a3;
  v71 = sub_1C106D6CC();
  v69 = *(_QWORD *)(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  v67 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v70 = (char *)&v66 - v14;
  v75 = sub_1C07ACF80(&qword_1ED75E630);
  MEMORY[0x1E0C80A78](v75);
  v68 = (uint64_t)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v66 - v17;
  MEMORY[0x1E0C80A78](v19);
  v76 = (char *)&v66 - v20;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v66 - v22;
  v78 = a8;
  _Block_copy(a8);
  if (qword_1ED762B18 != -1)
    swift_once();
  v24 = sub_1C106F544();
  v25 = sub_1C079E000(v24, (uint64_t)qword_1ED762AF8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v26 = sub_1C106F538();
  v27 = sub_1C10703A8();
  v28 = os_log_type_enabled(v26, v27);
  v74 = a1;
  if (v28)
  {
    v29 = swift_slowAlloc();
    v66 = v18;
    v30 = v29;
    v31 = swift_slowAlloc();
    v72 = v25;
    v32 = v31;
    v82[0] = v31;
    *(_DWORD *)v30 = 136315394;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v87[0] = sub_1C0788DAC(a1, a2, v82);
    sub_1C10705AC();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v30 + 12) = 2080;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v87[0] = sub_1C0788DAC(v79, a4, v82);
    sub_1C10705AC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C0771000, v26, v27, "InternalXPC: Behavior Understanding histograms [kind=%s, behaviorType=%s]", (uint8_t *)v30, 0x16u);
    swift_arrayDestroy();
    v33 = v32;
    v25 = v72;
    MEMORY[0x1C3BA8270](v33, -1, -1);
    v34 = v30;
    v18 = v66;
    MEMORY[0x1C3BA8270](v34, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v35 = (uint64_t)v76;
  v36 = v77;
  if (v77)
  {
    if (qword_1ED749400 != -1)
      swift_once();
    v37 = sub_1C079E000(v75, (uint64_t)qword_1ED7493E0);
    swift_beginAccess();
    sub_1C078A8F8(v37, (uint64_t)v23, &qword_1ED75E630);
    v38 = type metadata accessor for Configuration();
    if (sub_1C07B2D80((uint64_t)v23, 1, v38) != 1)
    {
      if (qword_1ED762808 != -1)
        swift_once();
      sub_1C0CBD86C();
      sub_1C07B1F90((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
      sub_1C0DF0D14(v73, v36, v82);
      swift_release();
      sub_1C078A8F8((uint64_t)&v84, (uint64_t)&v80, &qword_1ED75FD10);
      if (!v81)
      {
        sub_1C0784B6C((uint64_t)&v80, &qword_1ED75FD10);
        v51 = v78;
        v78[2](v78, 0, 0);
        sub_1C0B8A3D4((uint64_t)v82);
LABEL_30:
        _Block_release(v51);
        _Block_release(v51);
        return;
      }
      sub_1C077DD60(&v80, (uint64_t)v87);
      sub_1C0784AC0((uint64_t)&v85, (uint64_t)v86);
      sub_1C094BB94((uint64_t)v82);
      v43 = (uint64_t)v70;
      v42 = v71;
LABEL_27:
      sub_1C0784AC0((uint64_t)v87, (uint64_t)v82);
      sub_1C0784AC0((uint64_t)v86, (uint64_t)&v83);
      sub_1C106D69C();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C0854C24();
      LODWORD(v77) = v55;
      if (v55 == 16)
        goto LABEL_29;
      v56 = v69;
      v57 = v42;
      v58 = v43;
      v59 = v67;
      (*(void (**)(char *, _QWORD, uint64_t))(v69 + 104))(v67, *MEMORY[0x1E0D3C0F0], v57);
      sub_1C0794BAC(qword_1ED744A50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C130], MEMORY[0x1E0D3C150]);
      v60 = sub_1C106FAA8();
      v61 = *(uint64_t (**)(char *, uint64_t))(v56 + 8);
      v62 = v59;
      v43 = v58;
      v42 = v57;
      v63 = v61(v62, v57);
      if ((v60 & 1) != 0)
      {
LABEL_29:
        v51 = v78;
        v78[2](v78, 0, 0);
        _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v86);
        _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v87);
        (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v43, v42);
        sub_1C0B8A3A0((uint64_t)v82);
      }
      else
      {
        v72 = v25;
        v64 = (void *)MEMORY[0x1C3BA79F4](v63);
        v65 = v78;
        _Block_copy(v78);
        sub_1C0B816C0((uint64_t)v82, v77, v43, v65);
        objc_autoreleasePoolPop(v64);
        _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v86);
        _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v87);
        v61((char *)v43, v42);
        sub_1C0B8A3A0((uint64_t)v82);
        v51 = v78;
      }
      goto LABEL_30;
    }
    _Block_release(v78);
    __break(1u);
    goto LABEL_33;
  }
  if (qword_1ED749400 != -1)
    swift_once();
  v39 = sub_1C079E000(v75, (uint64_t)qword_1ED7493E0);
  swift_beginAccess();
  sub_1C078A8F8(v39, v35, &qword_1ED75E630);
  v40 = type metadata accessor for Configuration();
  if (sub_1C07B2D80(v35, 1, v40) == 1)
  {
LABEL_33:
    _Block_release(v78);
    __break(1u);
LABEL_34:
    _Block_release(v78);
    __break(1u);
    goto LABEL_35;
  }
  if (qword_1ED7549C0 != -1)
    swift_once();
  swift_retain();
  v77 = sub_1C0CBD818();
  swift_release();
  sub_1C07B1F90(v35, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  sub_1C078A8F8(v39, (uint64_t)v18, &qword_1ED75E630);
  if (sub_1C07B2D80((uint64_t)v18, 1, v40) == 1)
    goto LABEL_34;
  if (qword_1ED762808 != -1)
    swift_once();
  v41 = (uint64_t)v18;
  v44 = sub_1C0CBD86C();
  v72 = v25;
  sub_1C07B1F90(v41, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v45 = *(id *)(v44 + OBJC_IVAR____TtCO24IntelligencePlatformCore14ViewGeneration11ViewClients_viewService);
  swift_release();
  v46 = v39;
  v47 = v68;
  sub_1C078A8F8(v46, v68, &qword_1ED75E630);
  v48 = sub_1C07B2D80(v47, 1, v40);
  if (v48 != 1)
  {
    v49 = type metadata accessor for BehaviorHistoryUtility();
    swift_allocObject();
    v50 = v45;
    sub_1C086AA04();
    v43 = (uint64_t)v70;
    v42 = v71;
    v82[3] = v49;
    v82[4] = (uint64_t)&off_1E7A0FBC8;
    v82[0] = v52;
    sub_1C08363FC((uint64_t)v82, v87);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v82);
    sub_1C08392B0();
    v54 = v53;
    v86[3] = type metadata accessor for BehaviorDatabaseHistogramKeyProvider(0);
    v86[4] = &off_1E7A0D840;
    swift_release();

    v86[0] = v54;
    v25 = v72;
    goto LABEL_27;
  }
LABEL_35:
  _Block_release(v78);
  __break(1u);
}

void InternalXPC.Server.behaviorUnderstandingHistograms(ofKind:behaviorType:viewName:completion:)()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, unint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  id v40;
  char v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  char v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, unint64_t, uint64_t);
  __int128 v62;
  uint64_t v63;
  uint64_t v64[5];
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD v68[5];
  _QWORD v69[6];

  sub_1C0779670();
  v61 = v2;
  v4 = v3;
  v57 = v5;
  v7 = v6;
  v8 = sub_1C07B5A58();
  v55 = *(_QWORD *)(v8 - 8);
  v56 = v8;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v9);
  sub_1C077AED0();
  v52 = v10;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v11);
  sub_1C0778674();
  v54 = v12;
  v59 = sub_1C07ACF80(&qword_1ED75E630);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v13);
  sub_1C077AED0();
  v53 = v14;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v15);
  sub_1C0779728();
  v58 = v16;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v17);
  sub_1C0779728();
  v60 = v18;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v19);
  sub_1C0B8B738();
  if (qword_1ED762B18 != -1)
    swift_once();
  v20 = sub_1C077585C();
  v21 = sub_1C079E000(v20, (uint64_t)qword_1ED762AF8);
  sub_1C07767CC();
  sub_1C07767CC();
  v22 = v21;
  sub_1C106F538();
  v23 = sub_1C0784E0C();
  if (sub_1C077E9C8(v21))
  {
    v24 = sub_1C0775854();
    v64[0] = sub_1C0775854();
    *(_DWORD *)v24 = 136315394;
    sub_1C07796E0();
    v69[0] = sub_1C0788DAC(v0, v7, v64);
    sub_1C07B2630();
    sub_1C10705AC();
    sub_1C077CF6C();
    *(_WORD *)(v24 + 12) = 2080;
    sub_1C0778624();
    v69[0] = sub_1C0788C30();
    sub_1C07B2630();
    sub_1C10705AC();
    sub_1C077CF6C();
    sub_1C077E89C(&dword_1C0771000, v22, v23, "InternalXPC: Behavior Understanding histograms [kind=%s, behaviorType=%s]", (uint8_t *)v24);
    sub_1C0778664();
    sub_1C0776778();
  }

  sub_1C07758A4();
  sub_1C07758A4();
  if (v4)
  {
    if (qword_1ED749400 != -1)
      swift_once();
    sub_1C0781988(v59, (uint64_t)qword_1ED7493E0);
    sub_1C0775864();
    sub_1C0B8B7A8((uint64_t)v21, v25, &qword_1ED75E630);
    v26 = sub_1C0779D10();
    sub_1C077AEEC(v1, 1, v26);
    if (!v38)
    {
      if (qword_1ED762808 != -1)
        swift_once();
      v27 = sub_1C077B290();
      if (v60)
      {
        sub_1C079CE2C(v27, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
        sub_1C07796E0();
        sub_1C0778624();
        sub_1C077CF64();
        sub_1C07796E0();
        sub_1C0778624();
        sub_1C077CF64();
        sub_1C106F538();
        v32 = sub_1C077C13C();
        if (os_log_type_enabled(v21, v32))
        {
          v33 = sub_1C0775854();
          v64[0] = sub_1C0775854();
          *(_DWORD *)v33 = 136315650;
          sub_1C07796E0();
          v69[0] = sub_1C0788DAC(v0, v7, v64);
          sub_1C07B2630();
          sub_1C10705AC();
          sub_1C077CF6C();
          *(_WORD *)(v33 + 12) = 2080;
          sub_1C0778624();
          v69[0] = sub_1C0788C30();
          sub_1C07B2630();
          sub_1C077EE7C();
          sub_1C077CF6C();
          *(_WORD *)(v33 + 22) = 2080;
          v69[0] = v60;
          sub_1C077CF64();
          sub_1C07ACF80(&qword_1ED7614F0);
          v34 = sub_1C106FB5C();
          v69[0] = sub_1C0788DAC(v34, v35, v64);
          sub_1C10705AC();
          sub_1C0775894();
          sub_1C077E6C8();
          sub_1C077E6C8();
          sub_1C078BFF8(&dword_1C0771000, v21, v32, "InternalXPC: Behavior Understanding histograms [kind=%s, behaviorType=%s]: failed: %s", (uint8_t *)v33);
          sub_1C0B8B828();
          sub_1C0776778();
        }
        sub_1C07758A4();
        sub_1C07758A4();
        sub_1C077E6C8();
        sub_1C077E6C8();

        sub_1C077CF64();
        v61(0, 0xF000000000000000, v60);
        sub_1C077E6C8();
        sub_1C077E6C8();
        goto LABEL_22;
      }
      sub_1C079CE2C(v27, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
      sub_1C0DF0D14(v57, v4, v64);
      swift_release();
      sub_1C078A8F8((uint64_t)&v66, (uint64_t)&v62, &qword_1ED75FD10);
      if (!v63)
      {
        sub_1C0784B6C((uint64_t)&v62, &qword_1ED75FD10);
        sub_1C0779E3C();
        sub_1C0B8A3D4((uint64_t)v64);
LABEL_22:
        sub_1C0776760();
        return;
      }
      sub_1C077DD60(&v62, (uint64_t)v69);
      sub_1C0784AC0((uint64_t)&v67, (uint64_t)v68);
      sub_1C094BB94((uint64_t)v64);
LABEL_32:
      sub_1C0784AC0((uint64_t)v69, (uint64_t)v64);
      sub_1C0784AC0((uint64_t)v68, (uint64_t)&v65);
      sub_1C106D69C();
      sub_1C07796E0();
      sub_1C0854C24();
      if (v47 == 16
        || (v48 = v47,
            (*(void (**)(uint64_t, _QWORD, uint64_t))(v55 + 104))(v52, *MEMORY[0x1E0D3C0F0], v56),
            sub_1C0794BAC(qword_1ED744A50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C130], MEMORY[0x1E0D3C150]),
            v49 = sub_1C106FAA8(),
            v50 = (*(uint64_t (**)(uint64_t, uint64_t))(v55 + 8))(v52, v56),
            (v49 & 1) != 0))
      {
        sub_1C0779E3C();
        _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v68);
        _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v69);
        (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v54, v56);
      }
      else
      {
        v51 = (void *)MEMORY[0x1C3BA79F4](v50);
        sub_1C0B817D8((uint64_t)v64, v48, v54, v61);
        objc_autoreleasePoolPop(v51);
        sub_1C07821D8();
      }
      sub_1C0B8A3A0((uint64_t)v64);
      goto LABEL_22;
    }
    __break(1u);
    goto LABEL_38;
  }
  if (qword_1ED749400 != -1)
    swift_once();
  v28 = sub_1C079E000(v59, (uint64_t)qword_1ED7493E0);
  v29 = sub_1C0775864();
  sub_1C0B8B7B0(v29, v30, &qword_1ED75E630);
  v31 = sub_1C0779D10();
  sub_1C077AEEC(v60, 1, v31);
  if (v38)
  {
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  if (qword_1ED7549C0 != -1)
    swift_once();
  sub_1C0779758();
  sub_1C0CBD818();
  v36 = sub_1C07785A8();
  sub_1C079CE2C(v36, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  sub_1C077B888(v28, v37, &qword_1ED75E630);
  sub_1C077AEEC(v58, 1, v31);
  if (v38)
    goto LABEL_39;
  if (qword_1ED762808 != -1)
    swift_once();
  v39 = sub_1C0CBD86C();
  sub_1C07888C4(v39, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v40 = *(id *)(v39 + OBJC_IVAR____TtCO24IntelligencePlatformCore14ViewGeneration11ViewClients_viewService);
  sub_1C0778680();
  sub_1C078A8F8(v28, v53, &qword_1ED75E630);
  sub_1C077AEEC(v53, 1, v31);
  if (!v41)
  {
    v42 = sub_1C07AC878();
    sub_1C077B5BC();
    v43 = v40;
    sub_1C086AA04();
    v64[3] = v42;
    v64[4] = (uint64_t)&off_1E7A0FBC8;
    v64[0] = v44;
    sub_1C08363FC((uint64_t)v64, v69);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v64);
    sub_1C08392B0();
    v46 = v45;
    v68[3] = type metadata accessor for BehaviorDatabaseHistogramKeyProvider(0);
    v68[4] = &off_1E7A0D840;
    sub_1C07785A8();

    v68[0] = v46;
    goto LABEL_32;
  }
LABEL_40:
  __break(1u);
}

void sub_1C0B816C0(uint64_t a1, char a2, uint64_t a3, void (**a4)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v4;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void *v9;

  sub_1C08672B4(a2);
  if (!v4)
  {
    sub_1C106A774();
    swift_allocObject();
    sub_1C106A768();
    sub_1C07ACF80(&qword_1EF640988);
    sub_1C0B8B08C();
    v6 = sub_1C106A75C();
    v8 = v7;
    swift_bridgeObjectRelease();
    swift_release();
    sub_1C07B0E28(v6, v8);
    v9 = (void *)sub_1C106ABF4();
    ((void (**)(_QWORD, void *, _QWORD))a4)[2](a4, v9, 0);

    sub_1C07B3374(v6, v8);
    sub_1C07B3374(v6, v8);
  }
  _Block_release(a4);
}

void sub_1C0B817D8(uint64_t a1, char a2, uint64_t a3, void (*a4)(uint64_t, unint64_t, _QWORD))
{
  uint64_t v4;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  sub_1C08672B4(a2);
  if (!v4)
  {
    sub_1C106A774();
    swift_allocObject();
    sub_1C106A768();
    sub_1C07ACF80(&qword_1EF640988);
    sub_1C0B8B08C();
    v6 = sub_1C106A75C();
    v8 = v7;
    swift_bridgeObjectRelease();
    swift_release();
    sub_1C07B0E28(v6, v8);
    a4(v6, v8, 0);
    sub_1C07B3374(v6, v8);
    sub_1C07B3374(v6, v8);
  }
}

void sub_1C0B819B0(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, const void *a6)
{
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  _BOOL4 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char v56;
  void (*v57)(char *, uint64_t);
  const void *v58;
  const void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  void (**v65)(_QWORD, _QWORD, _QWORD);
  const void *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD v78[5];
  __int128 v79[2];
  uint64_t v80[15];

  v77 = a3;
  v70 = sub_1C106D6CC();
  v69 = *(_QWORD *)(v70 - 8);
  MEMORY[0x1E0C80A78](v70);
  v11 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v68 = (char *)&v66 - v13;
  v76 = sub_1C07ACF80(&qword_1ED75E630);
  MEMORY[0x1E0C80A78](v76);
  v71 = (uint64_t *)((char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v15);
  v72 = (uint64_t)&v66 - v16;
  MEMORY[0x1E0C80A78](v17);
  v74 = (unint64_t)&v66 - v18;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v66 - v20;
  _Block_copy(a6);
  if (qword_1ED762B18 != -1)
    swift_once();
  v22 = sub_1C106F544();
  v23 = sub_1C079E000(v22, (uint64_t)qword_1ED762AF8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v24 = sub_1C106F538();
  v25 = sub_1C10703A8();
  v26 = os_log_type_enabled(v24, v25);
  v75 = a1;
  v67 = v11;
  if (v26)
  {
    v27 = swift_slowAlloc();
    v28 = swift_slowAlloc();
    v73 = v23;
    v29 = v28;
    v80[0] = v28;
    *(_DWORD *)v27 = 136315394;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    *(_QWORD *)&v79[0] = sub_1C0788DAC(a1, a2, v80);
    sub_1C10705AC();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v27 + 12) = 2080;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    *(_QWORD *)&v79[0] = sub_1C0788DAC(v77, a4, v80);
    sub_1C10705AC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C0771000, v24, v25, "InternalXPC: Behavior Understanding featurizedBehaviors [featureName=%s, behaviorType=%s]", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    v30 = v29;
    v23 = v73;
    MEMORY[0x1C3BA8270](v30, -1, -1);
    MEMORY[0x1C3BA8270](v27, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  if (qword_1ED749400 != -1)
    swift_once();
  v31 = sub_1C079E000(v76, (uint64_t)qword_1ED7493E0);
  swift_beginAccess();
  sub_1C078A8F8(v31, (uint64_t)v21, &qword_1ED75E630);
  v32 = type metadata accessor for Configuration();
  if (sub_1C07B2D80((uint64_t)v21, 1, v32) == 1)
  {
    _Block_release(a6);
    __break(1u);
LABEL_24:
    _Block_release(a6);
    __break(1u);
LABEL_25:
    _Block_release(v66);
    __break(1u);
    goto LABEL_26;
  }
  if (qword_1ED7549C0 != -1)
    swift_once();
  swift_retain();
  v76 = sub_1C0CBD818();
  swift_release();
  sub_1C07B1F90((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v33 = v74;
  sub_1C078A8F8(v31, v74, &qword_1ED75E630);
  if (sub_1C07B2D80(v33, 1, v32) == 1)
    goto LABEL_24;
  if (qword_1ED762808 != -1)
    swift_once();
  v34 = sub_1C0CBD86C();
  v73 = v23;
  v66 = a6;
  sub_1C07B1F90(v33, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v35 = *(id *)(v34 + OBJC_IVAR____TtCO24IntelligencePlatformCore14ViewGeneration11ViewClients_viewService);
  swift_release();
  v36 = v72;
  sub_1C078A8F8(v31, v72, &qword_1ED75E630);
  v37 = sub_1C07B2D80(v36, 1, v32);
  if (v37 == 1)
    goto LABEL_25;
  v38 = type metadata accessor for BehaviorHistoryUtility();
  swift_allocObject();
  v39 = v35;
  sub_1C086AA04();
  v41 = v40;
  v74 = a2;
  v42 = (uint64_t)v71;
  sub_1C078A8F8(v31, (uint64_t)v71, &qword_1ED75E630);
  if (sub_1C07B2D80(v42, 1, v32) != 1)
  {
    v43 = type metadata accessor for BehaviorFeaturizer();
    v80[3] = v38;
    v80[4] = (uint64_t)&off_1E7A0FBC8;
    v80[0] = v41;
    swift_retain();
    v44 = sub_1C084C088(v42, (uint64_t)v80);
    v78[4] = &off_1E7A0FBC8;
    v78[3] = v38;
    v78[0] = v41;
    swift_retain();
    sub_1C08363FC((uint64_t)v78, v79);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v78);
    sub_1C08392B0();
    v46 = v45;
    v80[8] = type metadata accessor for BehaviorDatabaseHistogramKeyProvider(0);
    v80[5] = v46;
    v80[13] = v43;
    v80[14] = (uint64_t)&off_1E7A0E760;
    v80[9] = (uint64_t)&off_1E7A0D840;
    v80[10] = (uint64_t)v44;
    sub_1C077DD60(v79, (uint64_t)v80);
    swift_retain();
    v47 = v68;
    sub_1C106D69C();
    v48 = v74;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0849A3C(v75, v48);
    if (v50 != -1)
    {
      v51 = v50;
      v71 = v44;
      v72 = v49;
      v52 = v69;
      v53 = v67;
      v54 = v70;
      (*(void (**)(char *, _QWORD, uint64_t))(v69 + 104))(v67, *MEMORY[0x1E0D3C0F0], v70);
      sub_1C0794BAC(qword_1ED744A50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C130], MEMORY[0x1E0D3C150]);
      v55 = v47;
      v56 = sub_1C106FAA8();
      v57 = *(void (**)(char *, uint64_t))(v52 + 8);
      v57(v53, v54);
      if ((v56 & 1) == 0)
      {
        v60 = v72;
        sub_1C0A340AC();
        v62 = v61;
        v63 = sub_1C0B8A43C(v60, v51);
        v64 = (void *)MEMORY[0x1C3BA79F4](v63);
        v65 = (void (**)(_QWORD, _QWORD, _QWORD))v66;
        _Block_copy(v66);
        sub_1C0B82F34(v62, v65);
        objc_autoreleasePoolPop(v64);

        swift_release();
        swift_release();
        swift_release();
        v57(v68, v70);
        sub_1C0B8A408((uint64_t)v80);
        swift_bridgeObjectRelease();
        _Block_release(v65);
        v59 = v65;
        goto LABEL_15;
      }
      sub_1C0B8A43C(v72, v51);
      v47 = v55;
    }
    v58 = v66;
    (*((void (**)(const void *, _QWORD, _QWORD))v66 + 2))(v66, 0, 0);

    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v47, v70);
    sub_1C0B8A408((uint64_t)v80);
    _Block_release(v58);
    v59 = v58;
LABEL_15:
    _Block_release(v59);
    return;
  }
LABEL_26:
  _Block_release(v66);
  __break(1u);
}

void InternalXPC.Server.behaviorUnderstandingFeaturizedBehaviors(forFeatureName:behaviorType:completion:)()
{
  uint64_t v0;
  uint64_t v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, unint64_t, _QWORD);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(uint64_t, unint64_t, _QWORD);
  uint64_t v83;
  _QWORD v84[5];
  __int128 v85[2];
  uint64_t v86[20];

  sub_1C0779670();
  v81 = v4;
  v82 = v5;
  v7 = v6;
  v83 = v8;
  v10 = v9;
  v75 = sub_1C07B5A58();
  v74 = *(_QWORD *)(v75 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v11);
  sub_1C077AED0();
  v72 = v12;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v68 - v14;
  v16 = sub_1C07ACF80(&qword_1ED75E630);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v17);
  sub_1C077AED0();
  v76 = v18;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v19);
  sub_1C0779728();
  v77 = v20;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v21);
  sub_1C0779728();
  v79 = v22;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v23);
  sub_1C0B8B738();
  if (qword_1ED762B18 != -1)
    swift_once();
  v24 = sub_1C077585C();
  sub_1C0781988(v24, (uint64_t)qword_1ED762AF8);
  sub_1C07767CC();
  sub_1C07767CC();
  v80 = v0;
  v25 = sub_1C106F538();
  v26 = sub_1C10703A8();
  v27 = sub_1C0775B94(v26);
  v78 = v1;
  v73 = v15;
  if (v27)
  {
    v28 = sub_1C0775854();
    v86[0] = sub_1C0775854();
    *(_DWORD *)v28 = 136315394;
    sub_1C077E6D0();
    v30 = sub_1C07830C0(v1, v29, v86);
    sub_1C0B8B794(v30);
    sub_1C077EE7C();
    sub_1C077CF6C();
    *(_WORD *)(v28 + 12) = 2080;
    sub_1C077AEBC();
    v32 = sub_1C0789314(v83, v31, v86);
    sub_1C0B8B780(v32);
    sub_1C10705AC();
    sub_1C077CF6C();
    sub_1C077E89C(&dword_1C0771000, v25, v2, "InternalXPC: Behavior Understanding featurizedBehaviors [featureName=%s, behaviorType=%s]", (uint8_t *)v28);
    sub_1C0778664();
    sub_1C0776778();
  }

  sub_1C07758A4();
  sub_1C07758A4();
  if (qword_1ED749400 != -1)
    swift_once();
  v33 = sub_1C079E000(v16, (uint64_t)qword_1ED7493E0);
  sub_1C0775864();
  sub_1C0B8B7A8(v33, v34, &qword_1ED75E630);
  v35 = sub_1C0779D10();
  sub_1C077AEEC(v3, 1, v35);
  if (v36)
  {
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (qword_1ED7549C0 != -1)
    swift_once();
  sub_1C0779758();
  v37 = sub_1C0CBD818();
  v38 = sub_1C07785A8();
  sub_1C079CE2C(v38, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v39 = v79;
  sub_1C077B888(v33, v40, &qword_1ED75E630);
  sub_1C077AEEC(v39, 1, v35);
  if (v36)
    goto LABEL_23;
  v71 = v37;
  if (qword_1ED762808 != -1)
    swift_once();
  v41 = sub_1C0CBD86C();
  v69 = v10;
  v70 = v7;
  sub_1C079CE2C(v41, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v42 = *(id *)(v41 + OBJC_IVAR____TtCO24IntelligencePlatformCore14ViewGeneration11ViewClients_viewService);
  sub_1C0780A00();
  v43 = v77;
  sub_1C0779988(v33, v44, &qword_1ED75E630);
  sub_1C077AEEC(v43, 1, v35);
  if (v36)
    goto LABEL_24;
  v45 = sub_1C07AC878();
  sub_1C077B5BC();
  v46 = v42;
  sub_1C086AA04();
  v48 = v47;
  v49 = v76;
  sub_1C077B888(v33, v50, &qword_1ED75E630);
  sub_1C077AEEC(v49, 1, v35);
  if (!v36)
  {
    v51 = sub_1C079B470();
    v86[3] = v45;
    v86[4] = (uint64_t)&off_1E7A0FBC8;
    v86[0] = v48;
    swift_retain();
    v52 = sub_1C084C088(v49, (uint64_t)v86);
    v84[4] = &off_1E7A0FBC8;
    v84[3] = v45;
    v84[0] = v48;
    swift_retain();
    sub_1C08363FC((uint64_t)v84, v85);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v84);
    sub_1C08392B0();
    v54 = v53;
    v86[8] = type metadata accessor for BehaviorDatabaseHistogramKeyProvider(0);
    v86[5] = v54;
    v86[13] = v51;
    v86[14] = (uint64_t)&off_1E7A0E760;
    v86[9] = (uint64_t)&off_1E7A0D840;
    v86[10] = (uint64_t)v52;
    sub_1C077DD60(v85, (uint64_t)v86);
    sub_1C077E394();
    v55 = v73;
    sub_1C106D69C();
    v56 = v69;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0849A3C(v78, v56);
    if (v58 != -1)
    {
      v59 = v58;
      v79 = v57;
      v60 = v74;
      v61 = v72;
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v74 + 104))(v72, *MEMORY[0x1E0D3C0F0], v75);
      sub_1C0794BAC(qword_1ED744A50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C130], MEMORY[0x1E0D3C150]);
      sub_1C078C6DC();
      v62 = sub_1C106FAA8();
      v63 = *(_QWORD *)(v60 + 8);
      sub_1C0778780(v61);
      if ((v62 & 1) == 0)
      {
        v77 = v63;
        sub_1C0A340AC();
        v65 = v64;
        v66 = sub_1C0B8B774();
        v67 = (void *)MEMORY[0x1C3BA79F4](v66);
        sub_1C0B83048(v65, v82);
        objc_autoreleasePoolPop(v67);

        sub_1C0778680();
        sub_1C077FA84();
        sub_1C07814FC();
        sub_1C07AD258();
        sub_1C077EF14();
        sub_1C07767AC();
        goto LABEL_14;
      }
      sub_1C0B8A43C(v79, v59);
    }
    sub_1C07AEBFC();

    sub_1C0778680();
    sub_1C07814FC();
    sub_1C077ED08();
    (*(void (**)(char *, uint64_t))(v74 + 8))(v55, v75);
    sub_1C077EF14();
LABEL_14:
    sub_1C0776760();
    return;
  }
LABEL_25:
  __break(1u);
}

void sub_1C0B82F34(uint64_t a1, void (**a2)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  void *v7;

  sub_1C106A774();
  swift_allocObject();
  sub_1C106A768();
  sub_1C07ACF80(&qword_1EF640970);
  sub_1C0B8B45C(&qword_1EF640978, &qword_1EF640970);
  v4 = sub_1C106A75C();
  v6 = v5;
  swift_release();
  if (!v2)
  {
    sub_1C07B0E28(v4, v6);
    v7 = (void *)sub_1C106ABF4();
    ((void (**)(_QWORD, void *, _QWORD))a2)[2](a2, v7, 0);

    sub_1C07B3374(v4, v6);
    sub_1C07B3374(v4, v6);
  }
  _Block_release(a2);
}

uint64_t sub_1C0B83048(uint64_t a1, void (*a2)(uint64_t, unint64_t, _QWORD))
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  sub_1C106A774();
  swift_allocObject();
  sub_1C106A768();
  sub_1C07ACF80(&qword_1EF640970);
  sub_1C0B8B45C(&qword_1EF640978, &qword_1EF640970);
  v4 = sub_1C106A75C();
  v6 = v5;
  result = swift_release();
  if (!v2)
  {
    sub_1C07B0E28(v4, v6);
    a2(v4, v6, 0);
    sub_1C07B3374(v4, v6);
    return sub_1C07B3374(v4, v6);
  }
  return result;
}

void sub_1C0B831EC(uint64_t a1, void (**a2)(uint64_t *), uint64_t a3, int a4, uint64_t a5, void *a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, void *, uint64_t);
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  unint64_t v43;
  char v44;
  os_log_t v45;
  id v46;
  void (*v47)(char *, uint64_t);
  uint64_t inited;
  void (*v49)(uint64_t *);
  void (*v50)(uint64_t *);
  void (*v51)(uint64_t *__return_ptr, char *);
  NSObject *v52;
  id v53;
  uint64_t v54;
  void (**v55)(uint64_t *);
  uint64_t v56;
  void (**v57)(uint64_t *__return_ptr, char *);
  uint64_t v58;
  uint64_t *v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  void *v63;
  void (*v64)(uint64_t *);
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t *__return_ptr, char *);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  void *v82;
  void *v83;
  void *v84;
  id v85;
  id v86;
  NSObject *v87;
  os_log_type_t v88;
  uint8_t *v89;
  void *v90;
  id v91;
  uint64_t v92;
  unint64_t v93;
  id v94;
  void *v95;
  _QWORD v96[2];
  uint64_t v97;
  os_log_t v98;
  id v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(uint64_t *);
  uint64_t v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  void (**v111)(uint64_t *);
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  uint64_t v116;
  _QWORD v117[4];
  id v118[5];

  LODWORD(v108) = a4;
  v109 = a3;
  v110 = (void *)a1;
  v111 = a2;
  v113 = type metadata accessor for PhotosPersonObservation(0);
  v100 = *(_QWORD *)(v113 - 8);
  MEMORY[0x1E0C80A78](v113);
  v103 = (uint64_t)v96 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v102 = (uint64_t)v96 - v9;
  v10 = type metadata accessor for AssetPersonMetadata(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v96 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1C07ACF80(&qword_1EF6408A8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v96 - v17;
  v19 = sub_1C07ACF80(&qword_1EF646C20);
  MEMORY[0x1E0C80A78](v19);
  v112 = (uint64_t)v96 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v105 = (uint64_t)v96 - v22;
  v101 = sub_1C07ACF80(&qword_1EF6408B0);
  MEMORY[0x1E0C80A78](v101);
  v114 = (uint64_t)v96 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1C106ADE0();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v27 = (char *)v96 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)v96 - v29;
  v107 = a6;
  _Block_copy(a6);
  if (qword_1ED762B18 != -1)
    swift_once();
  v31 = sub_1C106F544();
  v32 = sub_1C079E000(v31, (uint64_t)qword_1ED762AF8);
  v33 = *(void (**)(char *, void *, uint64_t))(v25 + 16);
  v33(v30, v110, v24);
  v33(v27, v111, v24);
  v106 = v32;
  v34 = sub_1C106F538();
  v35 = sub_1C10703A8();
  LODWORD(v104) = v35;
  if (os_log_type_enabled(v34, v35))
  {
    v36 = swift_slowAlloc();
    v98 = v34;
    v37 = v36;
    v99 = (id)swift_slowAlloc();
    v118[0] = v99;
    *(_DWORD *)v37 = 136315650;
    v96[0] = v37 + 4;
    sub_1C0794BAC((unint64_t *)&qword_1ED7565B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
    v97 = v38;
    v39 = sub_1C1070C0C();
    v116 = sub_1C0788DAC(v39, v40, (uint64_t *)v118);
    v96[1] = v117;
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    v41 = *(void (**)(char *, uint64_t))(v25 + 8);
    v41(v30, v24);
    *(_WORD *)(v37 + 12) = 2080;
    v42 = sub_1C1070C0C();
    v116 = sub_1C0788DAC(v42, v43, (uint64_t *)v118);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    v41(v27, v24);
    *(_WORD *)(v37 + 22) = 1024;
    v44 = v108;
    LODWORD(v116) = v108 & 1;
    sub_1C10705AC();
    v45 = v98;
    _os_log_impl(&dword_1C0771000, v98, (os_log_type_t)v104, "InternalXPC: PhotosMetadata [startDate=%s, endDate = %s, newestFirst= %{BOOL}d", (uint8_t *)v37, 0x1Cu);
    v46 = v99;
    swift_arrayDestroy();
    MEMORY[0x1C3BA8270](v46, -1, -1);
    MEMORY[0x1C3BA8270](v37, -1, -1);

  }
  else
  {
    v47 = *(void (**)(char *, uint64_t))(v25 + 8);
    v47(v30, v24);
    v47(v27, v24);

    v44 = v108;
  }
  type metadata accessor for PhotosMetadataFetcher();
  inited = swift_initStackObject();
  sub_1C0CB007C((uint64_t)v110, (uint64_t)v111, v109, v44 & 1, (uint64_t)v118);
  v110 = 0;
  v108 = inited;
  v49 = (void (*)(uint64_t *))v118[1];
  v50 = (void (*)(uint64_t *))v118[2];
  v51 = (void (*)(uint64_t *__return_ptr, char *))v118[3];
  v52 = v118[4];
  v53 = v118[0];
  swift_retain();
  swift_retain();
  v54 = v114;
  v99 = v53;
  sub_1C106ECC8();
  v55 = (void (**)(uint64_t *))(v54 + *(int *)(sub_1C07ACF80(&qword_1EF6408B8) + 44));
  *v55 = v49;
  v55[1] = v50;
  v104 = v50;
  v111 = v55;
  v56 = 0;
  v57 = (void (**)(uint64_t *__return_ptr, char *))(v54 + *(int *)(sub_1C07ACF80(&qword_1EF6408C0) + 44));
  *v57 = v51;
  v57[1] = (void (*)(uint64_t *__return_ptr, char *))v52;
  v98 = v52;
  v58 = *(int *)(v101 + 44);
  v109 = MEMORY[0x1E0DEE9D8];
  v59 = (uint64_t *)(v54 + v58);
  *v59 = 0;
  for (v59[1] = 0; ; v59[1] = 0)
  {
    while (1)
    {
      if (!v56)
        goto LABEL_10;
      v60 = v59[1];
      v61 = *(_QWORD *)(v56 + 16);
      if (v60 == v61)
        break;
      if (v60 >= v61)
      {
        __break(1u);
        return;
      }
      v101 = (*(unsigned __int8 *)(v100 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80);
      v97 = *(_QWORD *)(v100 + 72);
      v68 = v56 + v101 + v97 * v60;
      v69 = v112;
      sub_1C07E05C8(v68, v112, type metadata accessor for PhotosPersonObservation);
      v59[1] = v60 + 1;
      v70 = v113;
      sub_1C07B2D8C(v69, 0, 1, v113);
      v71 = v69;
      v72 = v105;
      sub_1C078A67C(v71, v105, &qword_1EF646C20);
      if (sub_1C07B2D80(v72, 1, v70) == 1)
        goto LABEL_25;
      v73 = v72;
      v74 = v102;
      sub_1C07E05F4(v73, v102, type metadata accessor for PhotosPersonObservation);
      sub_1C07E05C8(v74, v103, type metadata accessor for PhotosPersonObservation);
      v75 = v109;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C07ECCC0();
        v75 = v79;
      }
      v77 = *(_QWORD *)(v75 + 16);
      v76 = *(_QWORD *)(v75 + 24);
      v109 = v75;
      if (v77 >= v76 >> 1)
      {
        sub_1C07ECCC0();
        v109 = v80;
      }
      v78 = v109;
      *(_QWORD *)(v109 + 16) = v77 + 1;
      sub_1C07E05F4(v103, v78 + v101 + v77 * v97, type metadata accessor for PhotosPersonObservation);
      sub_1C07B1F90(v102, type metadata accessor for PhotosPersonObservation);
      v56 = *v59;
    }
    v62 = v112;
    sub_1C07B2D8C(v112, 1, 1, v113);
    sub_1C0784B6C(v62, &qword_1EF646C20);
LABEL_10:
    sub_1C106ECB0();
    if (v117[2])
    {
      sub_1C07D4B70(0, &qword_1ED744828);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v63 = v115;
        v64 = *v111;
        v116 = (uint64_t)v115;
        v64(&v116);

        v65 = (uint64_t)v18;
        v66 = 0;
        goto LABEL_15;
      }
    }
    else
    {
      sub_1C0784B6C((uint64_t)&v116, &qword_1ED760400);
    }
    v65 = (uint64_t)v18;
    v66 = 1;
LABEL_15:
    sub_1C07B2D8C(v65, v66, 1, v10);
    v67 = *v57;
    sub_1C078A67C((uint64_t)v18, (uint64_t)v15, &qword_1EF6408A8);
    if (sub_1C07B2D80((uint64_t)v15, 1, v10) == 1)
      break;
    sub_1C07E05F4((uint64_t)v15, (uint64_t)v12, type metadata accessor for AssetPersonMetadata);
    v67(&v116, v12);
    v56 = v116;
    sub_1C07B1F90((uint64_t)v12, type metadata accessor for AssetPersonMetadata);
    swift_bridgeObjectRelease();
    *v59 = v56;
  }
  sub_1C07B2D8C(v105, 1, 1, v113);
LABEL_25:
  sub_1C0784B6C(v114, &qword_1EF6408B0);
  swift_release();
  swift_release();

  v81 = (void *)MEMORY[0x1C3BA79F4]();
  v82 = v107;
  _Block_copy(v107);
  v83 = v110;
  sub_1C0B8464C(v109, (void (**)(_QWORD, _QWORD, _QWORD))v82);
  if (v83)
  {
    v84 = v83;
    objc_autoreleasePoolPop(v81);
    swift_bridgeObjectRelease();
    swift_release();
    v85 = v83;
    v86 = v83;
    v87 = sub_1C106F538();
    v88 = sub_1C1070390();
    if (os_log_type_enabled(v87, v88))
    {
      v89 = (uint8_t *)swift_slowAlloc();
      v90 = (void *)swift_slowAlloc();
      v118[0] = v90;
      *(_DWORD *)v89 = 136315138;
      v116 = (uint64_t)v84;
      v91 = v84;
      sub_1C07ACF80(&qword_1ED7614F0);
      v92 = sub_1C106FB5C();
      v116 = sub_1C0788DAC(v92, v93, (uint64_t *)v118);
      sub_1C10705AC();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C0771000, v87, v88, "InternalXPC: PhotosMetadata failed: %s", v89, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v90, -1, -1);
      MEMORY[0x1C3BA8270](v89, -1, -1);
    }
    else
    {

    }
    v94 = v84;
    v95 = (void *)sub_1C106AA08();
    (*((void (**)(void *, _QWORD, void *))v82 + 2))(v82, 0, v95);

  }
  else
  {
    objc_autoreleasePoolPop(v81);
    swift_bridgeObjectRelease();
    swift_release();
  }
  _Block_release(v82);
  _Block_release(v82);
}

void InternalXPC.Server.photosMetadata(withStart:end:maxEvents:newestFirst:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, unint64_t, void *);
  int v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  void (*v63)(char *, uint64_t);
  char v64;
  uint64_t inited;
  id v66;
  NSObject *v67;
  id v68;
  id v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t *v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  void *v79;
  void (*v80)(_QWORD *);
  uint64_t v81;
  uint64_t v82;
  void (*v83)(_QWORD *__return_ptr, uint64_t);
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  unint64_t v95;
  unint64_t v96;
  id v97;
  _QWORD *v98;
  _QWORD *v99;
  NSObject *v100;
  void (*v101)(uint64_t, unint64_t, void *);
  uint64_t v102;
  void *v103;
  os_log_type_t v104;
  uint8_t *v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  void *v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  id v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  os_log_t v121;
  uint64_t v122;
  uint64_t v123;
  void (*v124)(uint64_t, unint64_t, void *);
  _QWORD *v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void *v130;
  _QWORD v131[5];
  id v132[8];

  sub_1C0779670();
  a19 = v23;
  a20 = v24;
  v120 = v25;
  v123 = v26;
  v124 = v27;
  LODWORD(v122) = v28;
  v125 = v29;
  v126 = v30;
  v128 = type metadata accessor for PhotosPersonObservation(0);
  v113 = *(_QWORD *)(v128 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v31);
  sub_1C077AED0();
  v116 = v32;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v33);
  sub_1C0778674();
  v115 = v34;
  v35 = type metadata accessor for AssetPersonMetadata(0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v36);
  sub_1C077864C();
  sub_1C07ACF80(&qword_1EF6408A8);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v37);
  sub_1C07B7C10();
  MEMORY[0x1E0C80A78](v38);
  sub_1C0B8B728();
  sub_1C07ACF80(&qword_1EF646C20);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v39);
  sub_1C077AED0();
  v127 = v40;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v41);
  sub_1C0778674();
  v118 = v42;
  v114 = sub_1C07ACF80(&qword_1EF6408B0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v43);
  sub_1C0789AAC(v44, v108);
  v45 = sub_1C077AE98();
  v46 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v48 = (char *)&v108 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v49);
  v51 = (char *)&v108 - v50;
  if (qword_1ED762B18 != -1)
    swift_once();
  v52 = sub_1C077585C();
  v53 = sub_1C079E000(v52, (uint64_t)qword_1ED762AF8);
  v54 = *(NSObject **)(v46 + 16);
  ((void (*)(char *, _QWORD *, uint64_t))v54)(v51, v125, v45);
  ((void (*)(char *, _QWORD *, uint64_t))v54)(v48, v126, v45);
  sub_1C077B89C();
  v55 = sub_1C0784E0C();
  v121 = v54;
  LODWORD(v117) = v55;
  if (os_log_type_enabled(v54, v55))
  {
    v56 = sub_1C0775854();
    v119 = v53;
    v111 = v48;
    v57 = v56;
    v112 = (void *)sub_1C0775854();
    v132[0] = v112;
    *(_DWORD *)v57 = 136315650;
    v109 = v57 + 4;
    sub_1C0794BAC((unint64_t *)&qword_1ED7565B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
    v110 = v58;
    v59 = sub_1C1070C0C();
    v131[0] = sub_1C0781D24(v59, v60);
    sub_1C0B8B620();
    sub_1C077960C();
    sub_1C07BBE00();
    *(_WORD *)(v57 + 12) = 2080;
    v109 = v57 + 14;
    v61 = sub_1C1070C0C();
    v131[0] = sub_1C0781D24(v61, v62);
    sub_1C0B8B620();
    sub_1C077960C();
    sub_1C07BBE00();
    *(_WORD *)(v57 + 22) = 1024;
    LODWORD(v131[0]) = v122 & 1;
    sub_1C10705AC();
    _os_log_impl(&dword_1C0771000, v121, (os_log_type_t)v117, "InternalXPC: PhotosMetadata [startDate=%s, endDate = %s, newestFirst= %{BOOL}d", (uint8_t *)v57, 0x1Cu);
    sub_1C0778664();
    sub_1C0776778();
  }
  v63 = *(void (**)(char *, uint64_t))(v46 + 8);
  v63(v51, v45);
  v63(v48, v45);
  sub_1C078E0D0((uint64_t)&a18);
  v64 = v122;
  type metadata accessor for PhotosMetadataFetcher();
  inited = swift_initStackObject();
  sub_1C0CB007C((uint64_t)v125, (uint64_t)v126, v123, v64 & 1, (uint64_t)v132);
  v122 = inited;
  v123 = 0;
  v119 = v53;
  v66 = v132[1];
  v67 = v132[2];
  v125 = v132[3];
  v68 = v132[4];
  v69 = v132[0];
  swift_retain();
  swift_retain();
  v70 = v129;
  v117 = v69;
  sub_1C106ECC8();
  v71 = (_QWORD *)(v70 + *(int *)(sub_1C07ACF80(&qword_1EF6408B8) + 44));
  *v71 = v66;
  v71[1] = v67;
  v121 = v67;
  v126 = v71;
  v72 = 0;
  v73 = (_QWORD *)(v70 + *(int *)(sub_1C07ACF80(&qword_1EF6408C0) + 44));
  *v73 = v125;
  v73[1] = v68;
  v112 = v68;
  v74 = *(int *)(v114 + 44);
  v125 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v75 = (uint64_t *)(v70 + v74);
  *v75 = 0;
  for (v75[1] = 0; ; v75[1] = 0)
  {
    while (1)
    {
      if (!v72)
        goto LABEL_9;
      v76 = v75[1];
      v77 = *(_QWORD *)(v72 + 16);
      if (v76 == v77)
        break;
      if (v76 >= v77)
      {
        __break(1u);
        return;
      }
      v114 = (*(unsigned __int8 *)(v113 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v113 + 80);
      v111 = *(char **)(v113 + 72);
      v87 = v72 + v114 + (_QWORD)v111 * v76;
      v88 = v127;
      sub_1C07E05C8(v87, v127, type metadata accessor for PhotosPersonObservation);
      v75[1] = v76 + 1;
      v89 = v128;
      sub_1C07B2D8C(v88, 0, 1, v128);
      v90 = v88;
      v91 = v118;
      sub_1C078A67C(v90, v118, &qword_1EF646C20);
      sub_1C077AEEC(v91, 1, v89);
      if (v84)
        goto LABEL_24;
      v92 = v91;
      v93 = v115;
      sub_1C07E05F4(v92, v115, type metadata accessor for PhotosPersonObservation);
      sub_1C07E05C8(v93, v116, type metadata accessor for PhotosPersonObservation);
      v94 = v125;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C07ECCC0();
        v94 = v98;
      }
      v96 = v94[2];
      v95 = v94[3];
      v125 = v94;
      if (v96 >= v95 >> 1)
      {
        sub_1C07ECCC0();
        v125 = v99;
      }
      v97 = v125;
      v125[2] = v96 + 1;
      sub_1C07E05F4(v116, (uint64_t)v97 + v114 + v96 * (_QWORD)v111, type metadata accessor for PhotosPersonObservation);
      sub_1C077F06C(v115);
      v72 = *v75;
    }
    v78 = v127;
    sub_1C07B2D8C(v127, 1, 1, v128);
    sub_1C0784B6C(v78, &qword_1EF646C20);
LABEL_9:
    sub_1C106ECB0();
    if (v131[3])
    {
      sub_1C07D4B70(0, &qword_1ED744828);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v79 = v130;
        v80 = (void (*)(_QWORD *))*v126;
        v131[0] = v130;
        v80(v131);

        v81 = v20;
        v82 = 0;
        goto LABEL_14;
      }
    }
    else
    {
      sub_1C0784B6C((uint64_t)v131, &qword_1ED760400);
    }
    v81 = sub_1C07B1684();
LABEL_14:
    sub_1C07B2D8C(v81, v82, 1, v35);
    v83 = (void (*)(_QWORD *__return_ptr, uint64_t))*v73;
    sub_1C078A67C(v20, v22, &qword_1EF6408A8);
    sub_1C077AEEC(v22, 1, v35);
    if (v84)
      break;
    v85 = sub_1C078C6DC();
    sub_1C07E05F4(v85, v86, type metadata accessor for AssetPersonMetadata);
    v83(v131, v21);
    v72 = v131[0];
    sub_1C07B1F90(v21, type metadata accessor for AssetPersonMetadata);
    swift_bridgeObjectRelease();
    *v75 = v72;
  }
  sub_1C07B2D8C(v118, 1, 1, v128);
LABEL_24:
  sub_1C0784B6C(v129, &qword_1EF6408B0);
  sub_1C07797A4();
  sub_1C07797A4();
  sub_1C078E0D0((uint64_t)&a14);
  v100 = MEMORY[0x1C3BA79F4]();
  v101 = v124;
  v102 = v123;
  sub_1C0B84780((uint64_t)v125, (void (*)(uint64_t, unint64_t, _QWORD))v124);
  if (v102)
  {
    v103 = (void *)v102;
    objc_autoreleasePoolPop(v100);
    sub_1C077960C();
    swift_release();
    sub_1C078F21C();
    sub_1C078F21C();
    sub_1C077B89C();
    v104 = sub_1C077CF00();
    if (os_log_type_enabled(v100, v104))
    {
      v105 = (uint8_t *)sub_1C0775854();
      v132[0] = (id)sub_1C0775854();
      *(_DWORD *)v105 = 136315138;
      v131[0] = v103;
      sub_1C078F21C();
      sub_1C07ACF80(&qword_1ED7614F0);
      v106 = sub_1C106FB5C();
      v131[0] = sub_1C0788DAC(v106, v107, (uint64_t *)v132);
      sub_1C10705AC();
      swift_bridgeObjectRelease();

      sub_1C07796F0(&dword_1C0771000, v100, v104, "InternalXPC: PhotosMetadata failed: %s", v105);
      sub_1C0778610();
      sub_1C0776778();
    }
    sub_1C0781540();
    sub_1C0781540();

    sub_1C078F21C();
    v101(0, 0xF000000000000000, v103);
    sub_1C0781540();
    sub_1C0781540();
  }
  else
  {
    objc_autoreleasePoolPop(v100);
    sub_1C077960C();
    swift_release();
  }
  sub_1C0776760();
}

void sub_1C0B8464C(uint64_t a1, void (**a2)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;

  v4 = sub_1C106A72C();
  MEMORY[0x1E0C80A78](v4);
  sub_1C106A774();
  swift_allocObject();
  sub_1C106A768();
  sub_1C106A720();
  sub_1C106A738();
  sub_1C07ACF80(&qword_1EF640960);
  sub_1C0B8AFD4();
  v5 = sub_1C106A75C();
  if (!v2)
  {
    v7 = v5;
    v8 = v6;
    sub_1C07B0E28(v5, v6);
    v9 = (void *)sub_1C106ABF4();
    ((void (**)(_QWORD, void *, _QWORD))a2)[2](a2, v9, 0);

    sub_1C07B3374(v7, v8);
    sub_1C07B3374(v7, v8);
  }
  swift_release();
  _Block_release(a2);
}

uint64_t sub_1C0B84780(uint64_t a1, void (*a2)(uint64_t, unint64_t, _QWORD))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v4 = sub_1C106A72C();
  MEMORY[0x1E0C80A78](v4);
  sub_1C106A774();
  swift_allocObject();
  sub_1C106A768();
  sub_1C106A720();
  sub_1C106A738();
  sub_1C07ACF80(&qword_1EF640960);
  sub_1C0B8AFD4();
  v5 = sub_1C106A75C();
  if (!v2)
  {
    v7 = v5;
    v8 = v6;
    sub_1C07B0E28(v5, v6);
    a2(v7, v8, 0);
    sub_1C07B3374(v7, v8);
    sub_1C07B3374(v7, v8);
  }
  return swift_release();
}

uint64_t InternalXPC.Server.behaviorUnderstandingEvaluate(forBehaviorType:queryName:inferenceServiceInstanceId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v6[81] = a6;
  v6[80] = a5;
  v6[79] = a4;
  v6[78] = a3;
  v6[77] = a2;
  v6[76] = a1;
  v7 = sub_1C106D6CC();
  v6[82] = v7;
  v6[83] = *(_QWORD *)(v7 - 8);
  v6[84] = sub_1C079888C();
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  v6[85] = sub_1C077CF7C();
  v6[86] = sub_1C0775870();
  v8 = sub_1C077AE98();
  v6[87] = v8;
  v6[88] = *(_QWORD *)(v8 - 8);
  v6[89] = sub_1C077CF7C();
  v6[90] = sub_1C0775870();
  v6[91] = sub_1C0775870();
  v6[92] = sub_1C0775870();
  v6[93] = sub_1C07ACF80(&qword_1ED75E630);
  v6[94] = sub_1C079888C();
  v6[95] = sub_1C0779D10();
  v6[96] = sub_1C077CF7C();
  v6[97] = sub_1C0775870();
  v6[98] = sub_1C0775870();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0B84ABC()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  _BOOL4 v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  __int128 v19;
  __int128 v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;

  if (qword_1ED75E808 != -1)
    swift_once();
  v1 = *(NSObject **)(v0 + 648);
  v2 = *(_QWORD *)(v0 + 616);
  v3 = sub_1C077585C();
  *(_QWORD *)(v0 + 792) = v3;
  sub_1C079E000(v3, (uint64_t)qword_1ED78D7A0);
  sub_1C07767CC();
  sub_1C07767CC();
  sub_1C077E780();
  v4 = sub_1C0784E0C();
  v5 = sub_1C07758D8(v4);
  v6 = *(_QWORD *)(v0 + 648);
  if (v5)
  {
    v25 = *(_QWORD *)(v0 + 640);
    v7 = sub_1C0775854();
    v26 = sub_1C0775854();
    *(_DWORD *)v7 = 136315394;
    sub_1C077E6D0();
    v8 = sub_1C078C6DC();
    *(_QWORD *)(v0 + 592) = sub_1C0788DAC(v8, v9, v10);
    sub_1C07878C8();
    sub_1C077CF6C();
    *(_WORD *)(v7 + 12) = 2080;
    sub_1C0778624();
    *(_QWORD *)(v0 + 600) = sub_1C0788DAC(v25, v6, &v26);
    sub_1C07878C8();
    sub_1C077CF6C();
    sub_1C077E89C(&dword_1C0771000, v1, (os_log_type_t)v2, "InternalXPC: Behavior Understanding evaluate [behaviorType=%s, inferenceServiceInstanceId=%s]", (uint8_t *)v7);
    sub_1C0778664();
    sub_1C0776778();
  }
  sub_1C07758A4();
  sub_1C07758A4();

  if (qword_1ED749400 != -1)
    swift_once();
  v11 = *(_QWORD *)(v0 + 760);
  v12 = *(_QWORD *)(v0 + 752);
  v13 = sub_1C079E000(*(_QWORD *)(v0 + 744), (uint64_t)qword_1ED7493E0);
  sub_1C0775864();
  sub_1C079BF4C(v13, v14, &qword_1ED75E630);
  result = sub_1C077AEEC(v12, 1, v11);
  if (v16)
  {
    __break(1u);
  }
  else
  {
    sub_1C07E05F4(*(_QWORD *)(v0 + 752), *(_QWORD *)(v0 + 784), (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    if (qword_1ED762808 != -1)
      swift_once();
    *(_QWORD *)(v0 + 800) = sub_1C077B290();
    if (v13)
    {
      sub_1C07B1F90(*(_QWORD *)(v0 + 784), (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
      swift_task_dealloc();
      sub_1C07767BC();
      sub_1C07796F8();
      sub_1C0779D18();
      sub_1C077C104();
      sub_1C07767D4();
      sub_1C0778638();
      sub_1C0786388();
      sub_1C0779D20();
      swift_task_dealloc();
      swift_task_dealloc();
      sub_1C0B8B6B0();
      __asm { BR              X0 }
    }
    sub_1C077B66C();
    sub_1C0DFB3A8(0xD000000000000021, v17, v0 + 448);
    v19 = *(_OWORD *)(v0 + 464);
    *(_OWORD *)(v0 + 384) = *(_OWORD *)(v0 + 448);
    *(_OWORD *)(v0 + 400) = v19;
    v20 = *(_OWORD *)(v0 + 496);
    *(_OWORD *)(v0 + 416) = *(_OWORD *)(v0 + 480);
    *(_OWORD *)(v0 + 432) = v20;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v21 = (_QWORD *)sub_1C0775870();
    *(_QWORD *)(v0 + 808) = v21;
    *v21 = v0;
    v21[1] = sub_1C0B84E5C;
    sub_1C0B8B6B0();
    return sub_1C0950C98(v22, v23, v24);
  }
  return result;
}

uint64_t sub_1C0B84E5C(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;

  v6 = *v5;
  *(_QWORD *)(v6 + 816) = a1;
  *(double *)(v6 + 824) = a4;
  *(_QWORD *)(v6 + 832) = a2;
  *(_QWORD *)(v6 + 840) = a3;
  *(_QWORD *)(v6 + 848) = v4;
  swift_task_dealloc();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0B84ECC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(_QWORD, _QWORD, uint64_t);
  int v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  double v53;
  double v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  double v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  double v68;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78[2];

  v1 = *(_QWORD *)(v0 + 696);
  v2 = *(_QWORD *)(v0 + 688);
  *(_QWORD *)(sub_1C078A7C0() + 16) = v0 + 384;
  sub_1C078BA30((uint64_t)sub_1C0B8A450);
  sub_1C077C104();
  sub_1C077AEEC(v2, 1, v1);
  if (v3)
  {
    v4 = (uint64_t *)(v0 + 688);
LABEL_6:
    v9 = *v4;
    v10 = *(_QWORD *)(v0 + 784);
    sub_1C0784B6C(v9, (uint64_t *)&unk_1ED762690);
    sub_1C08E29B4();
    sub_1C0775810();
    sub_1C078A340();
    *v11 = v12;
    v11[1] = v13;
    sub_1C078A340();
    *(_QWORD *)(v14 + 16) = v15;
    *(_QWORD *)(v14 + 24) = v16;
    *(_OWORD *)(v14 + 32) = 0u;
    *(_OWORD *)(v14 + 48) = 0u;
    *(_BYTE *)(v14 + 64) = 7;
    swift_willThrow();
    sub_1C0780A00();
    sub_1C0B8B40C();
    sub_1C077FA84();
    sub_1C07767AC();
    sub_1C07B1F90(v10, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    goto LABEL_7;
  }
  v5 = *(_QWORD *)(v0 + 696);
  v6 = *(_QWORD *)(v0 + 680);
  v7 = *(void (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(v0 + 704) + 32);
  v7(*(_QWORD *)(v0 + 736), *(_QWORD *)(v0 + 688), v5);
  *(_QWORD *)(sub_1C078A7C0() + 16) = v0 + 384;
  sub_1C078BA30((uint64_t)sub_1C0B8A468);
  sub_1C077C104();
  v8 = sub_1C07B2D80(v6, 1, v5);
  if (v8 == 1)
  {
    v4 = (uint64_t *)(v0 + 680);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 704) + 8))(*(_QWORD *)(v0 + 736), *(_QWORD *)(v0 + 696));
    goto LABEL_6;
  }
  v7(*(_QWORD *)(v0 + 728), *(_QWORD *)(v0 + 680), *(_QWORD *)(v0 + 696));
  if (qword_1ED760048 != -1)
    swift_once();
  v76 = v0 + 512;
  v18 = *(_QWORD *)(v0 + 736);
  v19 = *(_QWORD *)(v0 + 728);
  v20 = *(_QWORD *)(v0 + 720);
  v21 = *(_QWORD *)(v0 + 712);
  v22 = *(_QWORD *)(v0 + 704);
  v23 = *(_QWORD *)(v0 + 696);
  sub_1C079E000(*(_QWORD *)(v0 + 792), (uint64_t)qword_1ED78D800);
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16);
  v24(v20, v18, v23);
  v24(v21, v19, v23);
  v25 = sub_1C106F538();
  v26 = sub_1C10703A8();
  v27 = sub_1C077AF58(v25);
  v28 = *(_QWORD *)(v0 + 712);
  v29 = *(void (**)(uint64_t, uint64_t))(v0 + 704);
  v30 = *(_QWORD *)(v0 + 696);
  if (v27)
  {
    v31 = sub_1C0775854();
    v78[0] = sub_1C0775854();
    *(_DWORD *)v31 = 136315394;
    sub_1C0794BAC((unint64_t *)&qword_1ED7565B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
    v32 = sub_1C0B8B7BC();
    *(_QWORD *)(v0 + 576) = sub_1C0788DAC(v32, v33, v78);
    sub_1C07878C8();
    sub_1C077589C();
    sub_1C0B8B6CC();
    *(_WORD *)(v31 + 12) = 2080;
    v34 = sub_1C0B8B7BC();
    *(_QWORD *)(v0 + 584) = sub_1C0788DAC(v34, v35, v78);
    sub_1C07878C8();
    sub_1C077960C();
    v29(v28, v30);
    sub_1C077E89C(&dword_1C0771000, v25, v26, "InternalXPC: Behavior Understanding evaluate - Producing evaluation metrics between %s and %s", (uint8_t *)v31);
    sub_1C0778664();
    sub_1C0776778();
  }
  sub_1C0B8B6CC();
  v29(v28, v30);

  v75 = v29;
  *(_QWORD *)(v0 + 856) = v29;
  v77 = *(_QWORD *)(v0 + 848);
  v36 = *(_QWORD *)(v0 + 840);
  v37 = *(_QWORD *)(v0 + 832);
  v38 = *(_QWORD *)(v0 + 824);
  v39 = *(_QWORD *)(v0 + 816);
  v40 = *(_QWORD *)(v0 + 784);
  v41 = *(_QWORD *)(v0 + 768);
  sub_1C0B8B634(v40, *(_QWORD *)(v0 + 776));
  *(_QWORD *)(v0 + 536) = &type metadata for EntityRelevanceMLModel;
  *(_QWORD *)(v0 + 544) = &off_1E7A163D0;
  v42 = (_QWORD *)sub_1C0778598();
  *(_QWORD *)(v0 + 512) = v42;
  v42[2] = v39;
  v42[3] = v38;
  v42[4] = v37;
  v42[5] = v36;
  swift_retain();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C078C6DC();
  sub_1C106D69C();
  sub_1C0B8B634(v40, v41);
  sub_1C078C2F8();
  sub_1C077B5BC();
  v43 = KeyValueStore.init(config:domain:)(v41, 1413829954, 0xE400000000000000);
  if (v77)
  {
    v74 = *(_QWORD *)(v0 + 784);
    v44 = *(_QWORD *)(v0 + 776);
    v45 = *(_QWORD *)(v0 + 736);
    v46 = *(_QWORD *)(v0 + 728);
    v47 = *(_QWORD *)(v0 + 696);
    v48 = *(_QWORD *)(v0 + 672);
    v49 = *(_QWORD *)(v0 + 664);
    v50 = *(_QWORD *)(v0 + 656);
    swift_release();
    sub_1C0B8B40C();
    sub_1C077AF1C();
    sub_1C077960C();
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v48, v50);
    sub_1C077F06C(v44);
    v75(v46, v47);
    v75(v45, v47);
    sub_1C077F06C(v74);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v76);
LABEL_7:
    swift_task_dealloc();
    sub_1C07767BC();
    sub_1C07796F8();
    sub_1C07758BC();
    sub_1C0779D18();
    sub_1C077C104();
    sub_1C0778638();
    sub_1C0786388();
    sub_1C0779D20();
    sub_1C07767D4();
    swift_task_dealloc();
    sub_1C0B8B7F0();
    __asm { BR              X0 }
  }
  v51 = v43;
  v70 = *(_QWORD *)(v0 + 776);
  v71 = *(_QWORD *)(v0 + 728);
  v52 = *(_QWORD *)(v0 + 632);
  v72 = *(_QWORD *)(v0 + 624);
  v73 = *(_QWORD *)(v0 + 672);
  sub_1C07796E0();
  sub_1C106ACD8();
  v54 = v53;
  v55 = *(_QWORD *)(v0 + 536);
  sub_1C079D180(v76, v55);
  v56 = *(_QWORD *)(v55 - 8);
  v57 = (uint64_t *)sub_1C079888C();
  *(_QWORD *)(v0 + 864) = v57;
  (*(void (**)(void))(v56 + 16))();
  v58 = *v57;
  v59 = *((double *)v57 + 1);
  v60 = v57[2];
  v61 = v57[3];
  type metadata accessor for EntityRelevanceEvaluationTaskManager();
  v62 = sub_1C077B5BC();
  sub_1C0B8B3B8();
  *(_QWORD *)(v0 + 872) = sub_1C0B8A608(v70, v58, v60, v61, v73, (_OWORD *)(v0 + 384), v51, v72, v59, 300.0, v54, v52, v62);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v76);
  *(_QWORD *)(v0 + 880) = sub_1C0938120(v71);
  *(_QWORD *)(v0 + 888) = v63;
  v64 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 896) = v64;
  *v64 = v0;
  v64[1] = sub_1C0B855E0;
  sub_1C0B8B7F0();
  return sub_1C0840688(v65, v66, v67, v68);
}

uint64_t sub_1C0B855E0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 904) = v0;
  swift_task_dealloc();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0B85638()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;

  sub_1C07ACF80(qword_1EF635078);
  v1 = swift_dynamicCastClass();
  v2 = *(void (**)(uint64_t, uint64_t))(v0 + 856);
  v13 = *(_QWORD *)(v0 + 784);
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 736);
    v12 = *(_QWORD *)(v0 + 728);
    v4 = *(_QWORD *)(v0 + 696);
    v5 = *(uint64_t **)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 128));
    swift_retain_n();
    swift_unknownObjectRetain();
    sub_1C093B9B4(v5, (double *)(v0 + 16));
    v6 = sub_1C093BBF0();
    sub_1C0778680();
    sub_1C0780A00();
    swift_unknownObjectRelease_n();
    sub_1C0786388();
    swift_bridgeObjectRelease();
    sub_1C07814FC();
    sub_1C0B8B40C();
    swift_release();
    swift_bridgeObjectRelease();
    v2(v12, v4);
    v7 = ((uint64_t (*)(uint64_t, uint64_t))v2)(v3, v4);
    sub_1C0791DDC(v7, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    sub_1C07796F8();
    sub_1C0786390();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1C07758BC();
    sub_1C077C104();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v6);
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 736);
    v10 = *(_QWORD *)(v0 + 728);
    sub_1C0B8A97C();
    sub_1C0775810();
    *v11 = 0;
    swift_willThrow();
    sub_1C0778680();
    sub_1C0780A00();
    swift_unknownObjectRelease();
    sub_1C0786388();
    swift_bridgeObjectRelease();
    sub_1C0B8B40C();
    swift_release();
    swift_bridgeObjectRelease();
    sub_1C0778780(v10);
    sub_1C0778780(v9);
    sub_1C07B1F90(v13, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    swift_task_dealloc();
    sub_1C07796F8();
    sub_1C07758BC();
    sub_1C0779D18();
    sub_1C077C104();
    sub_1C07767D4();
    sub_1C0778638();
    sub_1C0786388();
    sub_1C0779D20();
    sub_1C07767BC();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1C0B85910()
{
  uint64_t v0;
  uint64_t v1;

  swift_release();
  sub_1C0B8B40C();
  sub_1C0791DDC(v1, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  sub_1C07BCF3C();
  sub_1C07796F8();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C07767D4();
  sub_1C0778638();
  sub_1C0786388();
  sub_1C0779D20();
  sub_1C07767BC();
  sub_1C0786390();
  return sub_1C07759B8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0B85998()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;

  v3 = *(void (**)(uint64_t, uint64_t))(v0 + 856);
  v6 = *(_QWORD *)(v0 + 784);
  v5 = *(_QWORD *)(v0 + 736);
  sub_1C077ED64();
  sub_1C077FA84();
  sub_1C077C104();
  swift_unknownObjectRelease();
  sub_1C077960C();
  sub_1C0B8B40C();
  sub_1C07814FC();
  swift_bridgeObjectRelease();
  v3(v1, v2);
  v3(v5, v2);
  sub_1C07B1F90(v6, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  sub_1C07BCF3C();
  sub_1C07796F8();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C07767D4();
  sub_1C0778638();
  sub_1C0786388();
  sub_1C0779D20();
  sub_1C07767BC();
  sub_1C0786390();
  return sub_1C07759B8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0B85B08(int a1, uint64_t a2, int a3, void *aBlock, void *a5)
{
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  _QWORD *v17;

  v5[2] = a5;
  v5[3] = _Block_copy(aBlock);
  v8 = sub_1C106FB14();
  v10 = v9;
  v5[4] = v9;
  if (a2)
  {
    a2 = sub_1C106FB14();
    v12 = v11;
  }
  else
  {
    v12 = 0;
  }
  v5[5] = v12;
  v13 = sub_1C106FB14();
  v15 = v14;
  v5[6] = v14;
  v16 = a5;
  v17 = (_QWORD *)swift_task_alloc();
  v5[7] = v17;
  *v17 = v5;
  v17[1] = sub_1C0B85BEC;
  return InternalXPC.Server.behaviorUnderstandingEvaluate(forBehaviorType:queryName:inferenceServiceInstanceId:)(v8, v10, a2, v12, v13, v15);
}

uint64_t sub_1C0B85BEC()
{
  void *v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void (**v8)(_QWORD, _QWORD, _QWORD);
  uint64_t v10;

  v2 = v0;
  v3 = *v1;
  v10 = v3;
  v4 = *(void **)(v3 + 16);
  sub_1C077B798(&v10);

  sub_1C0775844();
  sub_1C077B5B4();
  swift_bridgeObjectRelease();
  if (v0)
  {
    v5 = sub_1C106AA08();

    v6 = 0;
    v7 = (void *)v5;
  }
  else
  {
    sub_1C07D4B70(0, (unint64_t *)&qword_1ED761490);
    v6 = sub_1C106F934();
    sub_1C077960C();
    v5 = 0;
    v7 = (void *)v6;
  }
  v8 = *(void (***)(_QWORD, _QWORD, _QWORD))(v3 + 24);
  v8[2](v8, v6, v5);

  _Block_release(v8);
  return ((uint64_t (*)(void))v1[1])();
}

void sub_1C0B85CE8(uint64_t a1, uint64_t a2, uint64_t a3, void (**a4)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v31 = a1;
  v5 = type metadata accessor for EntityTaggingPersonDataCollection(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C07ACF80(&qword_1ED75E630);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Configuration();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v25 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v25 - v18;
  if (qword_1ED749400 != -1)
    swift_once();
  v20 = sub_1C079E000(v8, (uint64_t)qword_1ED7493E0);
  swift_beginAccess();
  sub_1C078A8F8(v20, (uint64_t)v10, &qword_1ED75E630);
  if (sub_1C07B2D80((uint64_t)v10, 1, v11) == 1)
  {
    __break(1u);
  }
  else
  {
    sub_1C07E05F4((uint64_t)v10, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    if (qword_1ED762808 != -1)
      swift_once();
    sub_1C0CBD86C();
    sub_1C0E0D29C(0xD000000000000013, 0x80000001C10DE3A0, (uint64_t)&v32);
    v26 = v34;
    v27 = v32;
    v28 = v35;
    v29 = v33;
    v30 = v36;
    sub_1C07E05C8((uint64_t)v19, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    type metadata accessor for KeyValueStore();
    swift_allocObject();
    v21 = KeyValueStore.init(config:domain:)((uint64_t)v16, 0x6154797469746E45, 0xED0000676E696767);
    v22 = v27;
    v27 = v21;
    v32 = v22;
    v33 = v29;
    v34 = v26;
    v35 = v28;
    v36 = v30;
    sub_1C07E05C8((uint64_t)v19, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    type metadata accessor for EntityTaggingPersonDataCollectionTask();
    v26 = swift_allocObject();
    v23 = v27;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_retain();
    swift_retain();
    sub_1C096E5A8(&v32, (uint64_t)v13, 0x61536C6F6F545049, 0xEC000000656C706DLL, 0, 0xE000000000000000, v23);
    sub_1C09724E8();
    sub_1C0794BAC(&qword_1ED744618, type metadata accessor for EntityTaggingPersonDataCollection, (uint64_t)&unk_1C108CAAC);
    sub_1C106F388();
    v24 = (void *)sub_1C106FAF0();
    ((void (**)(_QWORD, void *, _QWORD))a4)[2](a4, v24, 0);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();

    sub_1C07B1F90((uint64_t)v7, type metadata accessor for EntityTaggingPersonDataCollection);
    sub_1C07B1F90((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    _Block_release(a4);
  }
}

void InternalXPC.Server.behaviorUnderstandingSampleEntityTaggingFeatures(forPersonID:completion:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(_QWORD);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(_QWORD);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  sub_1C0779670();
  v48 = v5;
  v49 = v4;
  v7 = v6;
  type metadata accessor for EntityTaggingPersonDataCollection(0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v8);
  sub_1C0779614();
  v9 = sub_1C07ACF80(&qword_1ED75E630);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v10);
  v12 = ((char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_1C0779D10();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v14);
  sub_1C07B7C10();
  MEMORY[0x1E0C80A78](v15);
  sub_1C077D048();
  MEMORY[0x1E0C80A78](v16);
  sub_1C0B8B738();
  if (qword_1ED749400 != -1)
    swift_once();
  v17 = sub_1C079E000(v9, (uint64_t)qword_1ED7493E0);
  sub_1C0775864();
  sub_1C079BF4C(v17, v18, &qword_1ED75E630);
  sub_1C077AEEC((uint64_t)v12, 1, v13);
  if (v19)
  {
    __break(1u);
  }
  else
  {
    sub_1C07E05F4((uint64_t)v12, v2, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    if (qword_1ED762808 != -1)
      swift_once();
    v20 = sub_1C077B290();
    if (v17)
    {
      sub_1C079CE2C(v20, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
      if (qword_1ED762B18 != -1)
        swift_once();
      v31 = sub_1C077585C();
      sub_1C0781988(v31, (uint64_t)qword_1ED762AF8);
      sub_1C077AEBC();
      sub_1C077CF64();
      sub_1C077AEBC();
      sub_1C077CF64();
      sub_1C106F538();
      v32 = sub_1C077CF00();
      if (sub_1C0775B94(v32))
      {
        v33 = sub_1C0775854();
        v50 = sub_1C0775854();
        *(_DWORD *)v33 = 136315394;
        sub_1C077AEBC();
        v35 = sub_1C0789314(v7, v34, &v50);
        sub_1C0780554(v35);
        sub_1C10705AC();
        sub_1C077CF6C();
        *(_WORD *)(v33 + 12) = 2080;
        v55 = v17;
        sub_1C077CF64();
        sub_1C07ACF80(&qword_1ED7614F0);
        v36 = sub_1C106FB5C();
        v55 = sub_1C0788DAC(v36, v37, &v50);
        sub_1C10705AC();
        swift_bridgeObjectRelease();
        sub_1C077E6C8();
        sub_1C077E6C8();
        sub_1C077E89C(&dword_1C0771000, v12, (os_log_type_t)v0, "InternalXPC: Behavior Understanding et-sample [personID=%s]: failed: %s", (uint8_t *)v33);
        sub_1C0778664();
        sub_1C0776778();
      }
      sub_1C07758A4();
      sub_1C077E6C8();
      sub_1C077E6C8();

      sub_1C077F64C();
      v38 = v56;
      sub_1C0B7A664();
      sub_1C07AC168();
      v39 = sub_1C0775810();
      *(_QWORD *)v40 = v12;
      *(_QWORD *)(v40 + 8) = v38;
      *(_BYTE *)(v40 + 16) = 0;
      ((void (*)(_QWORD, _QWORD, uint64_t))v49)(0, 0, v39);
      sub_1C07888BC();
      sub_1C077E6C8();
    }
    else
    {
      sub_1C077B66C();
      sub_1C0E0D29C(0xD000000000000013, v21, (uint64_t)&v50);
      v43 = v52;
      v44 = v50;
      v45 = v53;
      v46 = v51;
      v47 = v54;
      sub_1C07E05C8(v2, v0, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
      sub_1C078C2F8();
      sub_1C077B5BC();
      v22 = sub_1C07BC858(v0);
      v23 = v44;
      v44 = v22;
      v50 = v23;
      v51 = v46;
      v52 = v43;
      v53 = v45;
      v54 = v47;
      sub_1C07E05C8(v2, v3, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
      sub_1C0B8B7E8();
      v43 = sub_1C077B5BC();
      v24 = v44;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C077AE90();
      swift_retain();
      sub_1C077C14C();
      sub_1C079C668();
      sub_1C096E5A8(v25, v26, v27, v28, v29, v30, v24);
      sub_1C09724E8();
      sub_1C0794BAC(&qword_1ED744618, type metadata accessor for EntityTaggingPersonDataCollection, (uint64_t)&unk_1C108CAAC);
      v41 = sub_1C106F388();
      v49(v41);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C07767F4();
      sub_1C077AF1C();
      sub_1C077980C();
      sub_1C077B5B4();
      sub_1C07B1F90(v1, type metadata accessor for EntityTaggingPersonDataCollection);
      sub_1C079CE2C(v42, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    }
    sub_1C0776760();
  }
}

void sub_1C0B869AC(uint64_t a1, void (**a2)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v3 = sub_1C07ACF80(&qword_1ED75E630);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Configuration();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v21 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v21 - v13;
  if (qword_1ED749400 != -1)
    swift_once();
  v15 = sub_1C079E000(v3, (uint64_t)qword_1ED7493E0);
  swift_beginAccess();
  sub_1C078A8F8(v15, (uint64_t)v5, &qword_1ED75E630);
  if (sub_1C07B2D80((uint64_t)v5, 1, v6) == 1)
  {
    _Block_release(a2);
    __break(1u);
  }
  else
  {
    sub_1C07E05F4((uint64_t)v5, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    if (qword_1ED762808 != -1)
      swift_once();
    sub_1C0CBD86C();
    sub_1C0E0D29C(0xD000000000000013, 0x80000001C10DE3A0, (uint64_t)&v23);
    v16 = v24;
    v17 = v26;
    v21 = v25;
    v22 = v23;
    v18 = v27;
    sub_1C07E05C8((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    type metadata accessor for KeyValueStore();
    swift_allocObject();
    v19 = KeyValueStore.init(config:domain:)((uint64_t)v11, 0x6154797469746E45, 0xED0000676E696767);
    v23 = v22;
    v24 = v16;
    v25 = v21;
    v26 = v17;
    v27 = v18;
    sub_1C07E05C8((uint64_t)v14, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    type metadata accessor for EntityTaggingPersonDataCollectionTask();
    swift_allocObject();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_retain();
    swift_retain();
    sub_1C096E5A8(&v23, (uint64_t)v8, 0x61536C6F6F545049, 0xEC000000656C706DLL, 0, 0xE000000000000000, v19);
    v20 = sub_1C0970E28();
    a2[2](a2, v20 & 1, 0);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    sub_1C07B1F90((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    _Block_release(a2);
  }
}

void InternalXPC.Server.behaviorUnderstandingTriggerEntityTaggingDataCollection(completion:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  sub_1C0779670();
  v3 = sub_1C07ACF80(&qword_1ED75E630);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1C0795160();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v6);
  sub_1C07A3008();
  MEMORY[0x1E0C80A78](v7);
  sub_1C07B7C10();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v38 - v9;
  if (qword_1ED749400 != -1)
    swift_once();
  v11 = sub_1C079E000(v3, (uint64_t)qword_1ED7493E0);
  sub_1C0775864();
  sub_1C077B888(v11, v12, &qword_1ED75E630);
  sub_1C077AEEC(v0, 1, v5);
  if (v13)
  {
    __break(1u);
  }
  else
  {
    sub_1C07E05F4(v0, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    if (qword_1ED762808 != -1)
      swift_once();
    v14 = sub_1C077B290();
    if (v5)
    {
      sub_1C07A86C4(v14, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
      if (qword_1ED762B18 != -1)
        swift_once();
      v21 = sub_1C077585C();
      v22 = sub_1C079E000(v21, (uint64_t)qword_1ED762AF8);
      sub_1C077CF64();
      sub_1C077CF64();
      sub_1C106F538();
      v23 = sub_1C077C13C();
      if (sub_1C07767E4(v23))
      {
        v24 = (uint8_t *)sub_1C0775854();
        v42 = sub_1C0775854();
        *(_DWORD *)v24 = 136315138;
        v47 = v5;
        sub_1C077CF64();
        sub_1C07ACF80(&qword_1ED7614F0);
        v25 = sub_1C106FB5C();
        v47 = sub_1C0788DAC(v25, v26, &v42);
        sub_1C10705AC();
        sub_1C077E584();
        sub_1C077E6C8();
        sub_1C077E6C8();
        sub_1C07796F0(&dword_1C0771000, v22, (os_log_type_t)v1, "InternalXPC: Behavior Understanding et-trigger failed: %s", v24);
        sub_1C0778610();
        sub_1C0776778();
      }
      sub_1C077E6C8();
      sub_1C077E6C8();

      sub_1C077F64C();
      v27 = v48;
      sub_1C0B7A67C();
      sub_1C0786DF0();
      sub_1C0775810();
      *v28 = v27;
      v28[1] = v10;
      sub_1C0B8B63C((uint64_t)v28, 1);
      sub_1C0779654();
      sub_1C077E6C8();
    }
    else
    {
      v15 = sub_1C0B8B698();
      sub_1C0E0D29C(v15, v16, v17);
      v18 = v43;
      v19 = v45;
      v39 = v44;
      v40 = v42;
      v41 = v46;
      sub_1C07E05C8((uint64_t)v10, v2, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
      sub_1C078C2F8();
      sub_1C077B5BC();
      v20 = sub_1C07BC858(v2);
      v42 = v40;
      v43 = v18;
      v44 = v39;
      v45 = v19;
      v40 = v20;
      v46 = v41;
      sub_1C07E05C8((uint64_t)v10, v1, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
      sub_1C0B8B7E8();
      sub_1C077B5BC();
      v39 = v18;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C07767C4();
      v29 = v40;
      swift_retain();
      sub_1C077E394();
      sub_1C079C668();
      sub_1C096E5A8(v30, v31, v32, v33, v34, v35, v29);
      v36 = sub_1C0970E28();
      sub_1C079DCE4(v36 & 1);
      sub_1C07B7FF0();
      sub_1C07785A0();
      swift_bridgeObjectRelease();
      sub_1C07814FC();
      sub_1C0778680();
      v37 = sub_1C0780A00();
      sub_1C07A86C4(v37, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    }
    sub_1C0776760();
  }
}

void sub_1C0B87400(uint64_t a1, uint64_t a2, uint64_t a3, void (**a4)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char *v35;
  void (**v36)(_QWORD, _QWORD, _QWORD);
  uint64_t v37;
  uint64_t v38;
  NSString *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char *v43;
  void *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (**v60)(_QWORD, _QWORD, _QWORD);
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v60 = a4;
  v58 = a2;
  v54 = a1;
  v53 = sub_1C106AA5C();
  v52 = *(_QWORD *)(v53 - 8);
  MEMORY[0x1E0C80A78](v53);
  v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C106AB28();
  v56 = *(_QWORD *)(v6 - 8);
  v57 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v45 - v10;
  MEMORY[0x1E0C80A78](v12);
  v55 = (char *)&v45 - v13;
  v14 = type metadata accessor for EntityTaggingPersonDataset(0);
  MEMORY[0x1E0C80A78](v14);
  v59 = (uint64_t)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1C07ACF80(&qword_1ED75E630);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Configuration();
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v45 - v23;
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v45 - v26;
  if (qword_1ED749400 != -1)
    swift_once();
  v28 = sub_1C079E000(v16, (uint64_t)qword_1ED7493E0);
  swift_beginAccess();
  sub_1C078A8F8(v28, (uint64_t)v18, &qword_1ED75E630);
  if (sub_1C07B2D80((uint64_t)v18, 1, v19) == 1)
  {
    __break(1u);
  }
  else
  {
    sub_1C07E05F4((uint64_t)v18, (uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    if (qword_1ED762808 != -1)
      swift_once();
    v29 = sub_1C0CBD86C();
    sub_1C0E0D29C(0xD000000000000013, 0x80000001C10DE3A0, (uint64_t)&v63);
    v49 = v29;
    v48 = v63;
    v50 = v64;
    v30 = v66;
    v47 = v65;
    v51 = v67;
    sub_1C07E05C8((uint64_t)v27, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    type metadata accessor for KeyValueStore();
    swift_allocObject();
    v31 = KeyValueStore.init(config:domain:)((uint64_t)v24, 0x6154797469746E45, 0xED0000676E696767);
    v63 = v48;
    v64 = v50;
    v65 = v47;
    v66 = v30;
    v67 = v51;
    sub_1C07E05C8((uint64_t)v27, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    type metadata accessor for EntityTaggingPersonDataCollectionTask();
    v48 = swift_allocObject();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_retain();
    swift_retain();
    v32 = sub_1C096E5A8(&v63, (uint64_t)v21, 0x61536C6F6F545049, 0xEC000000656C706DLL, 0, 0xE000000000000000, v31);
    v48 = v31;
    sub_1C0973124(v59);
    sub_1C0794BAC(&qword_1EF637288, type metadata accessor for EntityTaggingPersonDataset, (uint64_t)&unk_1C108CDA4);
    v33 = sub_1C106F37C();
    v46 = v34;
    v47 = v32;
    v45 = v30;
    if (v58)
    {
      v35 = v55;
      sub_1C106AA80();
      v36 = v60;
      v38 = v56;
      v37 = v57;
    }
    else
    {
      v39 = NSTemporaryDirectory();
      sub_1C106FB14();

      sub_1C106AA80();
      swift_bridgeObjectRelease();
      v61 = 0xD000000000000015;
      v62 = 0x80000001C1102880;
      v40 = v52;
      v41 = v53;
      (*(void (**)(char *, _QWORD, uint64_t))(v52 + 104))(v5, *MEMORY[0x1E0CAFD78], v53);
      sub_1C07B1280();
      sub_1C106AB1C();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v5, v41);
      swift_bridgeObjectRelease();
      v38 = v56;
      v37 = v57;
      (*(void (**)(char *, uint64_t))(v56 + 8))(v8, v57);
      v35 = v55;
      (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v55, v11, v37);
      v36 = v60;
    }
    v42 = v46;
    sub_1C106AC48();
    v43 = v35;
    sub_1C106AB10();
    v44 = (void *)sub_1C106FAF0();
    ((void (**)(_QWORD, void *, _QWORD))v36)[2](v36, v44, 0);
    swift_bridgeObjectRelease();

    sub_1C07B3374(v33, v42);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v43, v37);
    sub_1C07B1F90(v59, type metadata accessor for EntityTaggingPersonDataset);
    sub_1C07B1F90((uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    _Block_release(v36);
  }
}

void InternalXPC.Server.behaviorUnderstandingDumpEntityTaggingDataCollection(withOutputPath:completion:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(_QWORD, _QWORD, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(_QWORD, _QWORD, uint64_t);
  uint64_t v39;
  os_log_type_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t);
  NSString *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD v66[3];
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(_QWORD, _QWORD, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  sub_1C0779670();
  v80 = v3;
  v81 = v4;
  v77 = v5;
  v74 = v6;
  v73 = sub_1C106AA5C();
  v72 = *(_QWORD *)(v73 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_1C106AB28();
  v78 = *(_QWORD *)(v76 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  sub_1C077D048();
  MEMORY[0x1E0C80A78](v14);
  sub_1C0778674();
  v75 = v15;
  type metadata accessor for EntityTaggingPersonDataset(0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v16);
  sub_1C077AE40();
  v79 = v17;
  v18 = sub_1C07ACF80(&qword_1ED75E630);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v19);
  v20 = sub_1C0795160();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v21);
  sub_1C07A3008();
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)v66 - v23;
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)v66 - v26;
  if (qword_1ED749400 != -1)
    swift_once();
  v28 = sub_1C079E000(v18, (uint64_t)qword_1ED7493E0);
  sub_1C0775864();
  sub_1C077B888(v28, v29, &qword_1ED75E630);
  sub_1C077AEEC(v0, 1, v20);
  if (v30)
  {
    __break(1u);
  }
  else
  {
    sub_1C07E05F4(v0, (uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    if (qword_1ED762808 != -1)
      swift_once();
    v31 = sub_1C077B290();
    if (v20)
    {
      sub_1C07A9A08(v31, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
      v38 = v80;
      if (qword_1ED762B18 != -1)
        swift_once();
      v39 = sub_1C077585C();
      sub_1C079E000(v39, (uint64_t)qword_1ED762AF8);
      sub_1C077CF64();
      sub_1C077CF64();
      sub_1C106F538();
      v40 = sub_1C077CF00();
      if (sub_1C0775B94(v40))
      {
        sub_1C0775854();
        v84 = sub_1C0775854();
        sub_1C07AF29C(4.8149e-34);
        v82 = v20;
        sub_1C077CF64();
        sub_1C07ACF80(&qword_1ED7614F0);
        v41 = sub_1C106FB5C();
        v82 = sub_1C0788DAC(v41, v42, &v84);
        sub_1C0781EA8();
        sub_1C0775894();
        sub_1C077E6C8();
        sub_1C077E6C8();
        sub_1C078B12C(&dword_1C0771000, v43, v44, "InternalXPC: Behavior Understanding et-dump: failed: %s");
        sub_1C0778610();
        sub_1C0776778();
      }
      sub_1C077E6C8();
      sub_1C077E6C8();

      sub_1C077F64C();
      v45 = v89;
      sub_1C0B7A694();
      sub_1C07AC168();
      v46 = sub_1C0775810();
      *(_QWORD *)v47 = v12;
      *(_QWORD *)(v47 + 8) = v45;
      *(_BYTE *)(v47 + 16) = 2;
      v38(0, 0, v46);
      sub_1C07888BC();
      sub_1C077E6C8();
    }
    else
    {
      v32 = v31;
      v33 = sub_1C0B8B698();
      sub_1C0E0D29C(v33, v34, v35);
      v69 = v32;
      v68 = v84;
      v71 = v85;
      v36 = v87;
      v67 = v86;
      v70 = v88;
      sub_1C07E05C8((uint64_t)v27, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
      sub_1C078C2F8();
      sub_1C077B5BC();
      v37 = sub_1C07BC858((uint64_t)v24);
      v84 = v68;
      v85 = v71;
      v86 = v67;
      v87 = v36;
      v66[2] = v36;
      v88 = v70;
      v68 = v37;
      sub_1C07E05C8((uint64_t)v27, v2, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
      sub_1C0B8B7E8();
      v67 = sub_1C077B5BC();
      sub_1C077AE90();
      sub_1C077E6D0();
      swift_retain();
      v48 = v68;
      sub_1C0779758();
      sub_1C079C668();
      v67 = sub_1C096E5A8(v49, v50, v51, v52, v53, v54, v48);
      sub_1C0973124(v79);
      sub_1C0794BAC(&qword_1EF637288, type metadata accessor for EntityTaggingPersonDataset, (uint64_t)&unk_1C108CDA4);
      sub_1C106F37C();
      v66[1] = v55;
      if (v77)
      {
        v56 = v75;
        sub_1C106AA80();
      }
      else
      {
        v58 = NSTemporaryDirectory();
        sub_1C106FB14();

        sub_1C106AA80();
        sub_1C077B5B4();
        sub_1C078A340();
        v82 = v59;
        v83 = v60;
        v61 = v72;
        (*(void (**)(char *, _QWORD, uint64_t))(v72 + 104))(v9, *MEMORY[0x1E0CAFD78], v73);
        sub_1C07B1280();
        sub_1C106AB1C();
        sub_1C0786458((uint64_t)v9, *(uint64_t (**)(uint64_t, uint64_t))(v61 + 8));
        swift_bridgeObjectRelease();
        v62 = v78;
        v63 = v76;
        sub_1C0786458((uint64_t)v12, *(uint64_t (**)(uint64_t, uint64_t))(v78 + 8));
        v56 = v75;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 32))(v75, v1, v63);
      }
      v57 = (void (*)(uint64_t))v80;
      sub_1C106AC48();
      v64 = sub_1C106AB10();
      v57(v64);
      sub_1C07767AC();
      sub_1C07A44EC();
      sub_1C07767F4();
      sub_1C077D8F4();
      sub_1C077B890();
      sub_1C07797A4();
      sub_1C07797A4();
      sub_1C0780A00();
      sub_1C0786458(v56, *(uint64_t (**)(uint64_t, uint64_t))(v78 + 8));
      sub_1C07B1F90(v79, type metadata accessor for EntityTaggingPersonDataset);
      sub_1C07A9A08(v65, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    }
    sub_1C0776760();
  }
}

uint64_t sub_1C0B885C8(void *a1, int a2, uint64_t a3, void *aBlock, void (*a5)(uint64_t, uint64_t, id, void *))
{
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  v8 = _Block_copy(aBlock);
  if (a3)
  {
    v9 = sub_1C106FB14();
    a3 = v10;
  }
  else
  {
    v9 = 0;
  }
  _Block_copy(v8);
  v11 = a1;
  a5(v9, a3, v11, v8);
  _Block_release(v8);

  return swift_bridgeObjectRelease();
}

uint64_t InternalXPC.Server.behaviorUnderstandingMockEntityRelevanceContext(with:)(uint64_t a1)
{
  _QWORD *v1;

  v1[6] = a1;
  v1[7] = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  v1[8] = sub_1C077CF7C();
  v1[9] = sub_1C0775870();
  v1[10] = sub_1C07ACF80(&qword_1ED75E630);
  v1[11] = sub_1C079888C();
  v1[12] = sub_1C0779D10();
  v1[13] = sub_1C077CF7C();
  v1[14] = sub_1C0775870();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0B886E4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  uint64_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;

  if (qword_1ED749400 != -1)
    swift_once();
  v2 = v0[11];
  v1 = v0[12];
  sub_1C079E000(v0[10], (uint64_t)qword_1ED7493E0);
  v3 = sub_1C0775864();
  sub_1C0B8B7B0(v3, v4, &qword_1ED75E630);
  result = sub_1C077AEEC(v2, 1, v1);
  if (!v6)
  {
    v7 = v0[13];
    v8 = v0[14];
    sub_1C07E05F4(v0[11], v8, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    sub_1C0B8B634(v8, v7);
    sub_1C078C2F8();
    sub_1C077B5BC();
    KeyValueStore.init(config:domain:)(v7, 1413829954, 0xE400000000000000);
    v9 = sub_1C0B8B680();
    sub_1C0B79D90(v9, v10, v11);
    if (qword_1ED760048 != -1)
      swift_once();
    v13 = v0[6];
    v14 = sub_1C077585C();
    sub_1C079E000(v14, (uint64_t)qword_1ED78D800);
    sub_1C077B888(v13, v15, (uint64_t *)&unk_1ED762690);
    v16 = sub_1C077B89C();
    v17 = sub_1C10703A8();
    v18 = os_log_type_enabled(v16, v17);
    v19 = v0[14];
    v20 = v0[9];
    if (v18)
    {
      v21 = (uint8_t *)sub_1C0775854();
      v25 = sub_1C0775854();
      *(_DWORD *)v21 = 136315138;
      sub_1C077B888(v20, v22, (uint64_t *)&unk_1ED762690);
      v23 = sub_1C106FB5C();
      v0[5] = sub_1C0788DAC(v23, v24, &v25);
      sub_1C10705AC();
      sub_1C077960C();
      sub_1C0784B6C(v20, (uint64_t *)&unk_1ED762690);
      sub_1C07796F0(&dword_1C0771000, v16, v17, "behaviorUnderstandingMockEntityRelevanceContext: Updated mocked context to %s", v21);
      sub_1C0778610();
      sub_1C0776778();
    }
    sub_1C077AF1C();

    sub_1C0784B6C(v20, (uint64_t *)&unk_1ED762690);
    sub_1C07B1F90(v19, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    swift_task_dealloc();
    sub_1C07767BC();
    sub_1C07796F8();
    sub_1C07758BC();
    sub_1C0779D18();
    sub_1C0B8B6B0();
    __asm { BR              X1 }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0B88A84(uint64_t a1, const void *a2, void *a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  _QWORD *v11;

  v3[2] = a3;
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  v7 = swift_task_alloc();
  v3[3] = v7;
  v3[4] = _Block_copy(a2);
  if (a1)
  {
    sub_1C106AD98();
    v8 = 0;
  }
  else
  {
    v8 = 1;
  }
  v9 = sub_1C106ADE0();
  sub_1C07B2D8C(v7, v8, 1, v9);
  v10 = a3;
  v11 = (_QWORD *)swift_task_alloc();
  v3[5] = v11;
  *v11 = v3;
  v11[1] = sub_1C0B88B58;
  return InternalXPC.Server.behaviorUnderstandingMockEntityRelevanceContext(with:)(v7);
}

uint64_t sub_1C0B88B58(char a1)
{
  void *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v9;

  v9 = *v2;
  v4 = v9;
  sub_1C077B798(&v9);
  v5 = *(_QWORD *)(v4 + 32);
  v6 = *(void **)(v4 + 16);
  sub_1C0784B6C(*(_QWORD *)(v4 + 24), (uint64_t *)&unk_1ED762690);

  if (v1)
  {
    v7 = (void *)sub_1C106AA08();

    (*(void (**)(uint64_t, _QWORD, void *))(v5 + 16))(v5, 0, v7);
  }
  else
  {
    (*(void (**)(uint64_t, _QWORD, _QWORD))(v5 + 16))(v5, a1 & 1, 0);
  }
  _Block_release(*(const void **)(v4 + 32));
  sub_1C07767BC();
  return ((uint64_t (*)(void))v2[1])();
}

void sub_1C0B88C14(uint64_t a1, void (**a2)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;

  v3 = type metadata accessor for EntityTaggingInjectedTags();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C07ACF80(&qword_1ED75E630);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Configuration();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED749400 != -1)
    swift_once();
  v12 = sub_1C079E000(v6, (uint64_t)qword_1ED7493E0);
  swift_beginAccess();
  sub_1C078A8F8(v12, (uint64_t)v8, &qword_1ED75E630);
  if (sub_1C07B2D80((uint64_t)v8, 1, v9) != 1)
  {
    sub_1C07E05F4((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    sub_1C07E05C8((uint64_t)v11, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    v13 = sub_1C096C144();
    if (v13)
    {
      if (*(_QWORD *)(v13 + 16))
      {
        sub_1C07ACF80(&qword_1ED75E818);
        sub_1C106F94C();
        swift_bridgeObjectRelease();
        v14 = (void *)sub_1C106FAF0();
        ((void (**)(_QWORD, void *, _QWORD))a2)[2](a2, v14, 0);
        swift_bridgeObjectRelease();
LABEL_9:

        sub_1C07B1F90((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for EntityTaggingInjectedTags);
        sub_1C07B1F90((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
        _Block_release(a2);
        return;
      }
      swift_bridgeObjectRelease();
    }
    v14 = (void *)sub_1C106FAF0();
    ((void (**)(_QWORD, void *, _QWORD))a2)[2](a2, v14, 0);
    goto LABEL_9;
  }
  __break(1u);
}

void InternalXPC.Server.behaviorUnderstandingShowEntityTaggingInjectedTags(completion:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_1C0779670();
  sub_1C0B8B6F0();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  sub_1C07785B8();
  v4 = sub_1C07ACF80(&qword_1ED75E630);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1C0795160();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  sub_1C07795DC();
  if (qword_1ED749400 != -1)
    swift_once();
  v8 = sub_1C079E000(v4, (uint64_t)qword_1ED7493E0);
  sub_1C0775864();
  sub_1C077B888(v8, v9, &qword_1ED75E630);
  sub_1C077AEEC(v0, 1, v6);
  if (!v10)
  {
    sub_1C0B8B718();
    sub_1C0B8B634(v2, v1);
    v11 = sub_1C096C144();
    if (v11)
    {
      if (*(_QWORD *)(v11 + 16))
      {
        sub_1C07ACF80(&qword_1ED75E818);
        sub_1C106F94C();
        sub_1C077960C();
        sub_1C079FDB0();
        v12 = sub_1C077589C();
LABEL_9:
        sub_1C07A86C4(v12, (uint64_t (*)(_QWORD))type metadata accessor for EntityTaggingInjectedTags);
        sub_1C07AF5E0(v13, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
        sub_1C0776760();
        return;
      }
      sub_1C077960C();
    }
    sub_1C077B66C();
    v12 = sub_1C079FDB0();
    goto LABEL_9;
  }
  __break(1u);
}

void sub_1C0B893D8(uint64_t a1, void (**a2)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v3 = type metadata accessor for EntityTaggingInjectedTags();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C07ACF80(&qword_1ED75E630);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Configuration();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED749400 != -1)
    swift_once();
  v12 = sub_1C079E000(v6, (uint64_t)qword_1ED7493E0);
  swift_beginAccess();
  sub_1C078A8F8(v12, (uint64_t)v8, &qword_1ED75E630);
  if (sub_1C07B2D80((uint64_t)v8, 1, v9) == 1)
  {
    _Block_release(a2);
    __break(1u);
  }
  else
  {
    sub_1C07E05F4((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    sub_1C07E05C8((uint64_t)v11, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    sub_1C07ACF80(&qword_1ED75E818);
    sub_1C106F97C();
    sub_1C096C314();
    swift_bridgeObjectRelease();
    a2[2](a2, 1, 0);
    sub_1C07B1F90((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for EntityTaggingInjectedTags);
    sub_1C07B1F90((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    _Block_release(a2);
  }
}

void InternalXPC.Server.behaviorUnderstandingClearEntityTaggingInjectedTags(completion:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;

  sub_1C0779670();
  sub_1C0B8B6F0();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  sub_1C07785B8();
  v4 = sub_1C07ACF80(&qword_1ED75E630);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1C0795160();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  sub_1C07795DC();
  if (qword_1ED749400 != -1)
    swift_once();
  v8 = sub_1C079E000(v4, (uint64_t)qword_1ED7493E0);
  sub_1C0775864();
  sub_1C077B888(v8, v9, &qword_1ED75E630);
  sub_1C077AEEC(v0, 1, v6);
  if (v10)
  {
    __break(1u);
  }
  else
  {
    sub_1C0B8B718();
    sub_1C0B8B634(v2, v1);
    sub_1C07ACF80(&qword_1ED75E818);
    sub_1C106F97C();
    sub_1C096C314();
    swift_bridgeObjectRelease();
    v11 = sub_1C079DCE4(1);
    sub_1C07A86C4(v11, (uint64_t (*)(_QWORD))type metadata accessor for EntityTaggingInjectedTags);
    sub_1C07AF5E0(v12, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    sub_1C0776760();
  }
}

void sub_1C0B89AF4(void *a1, int a2, void *aBlock, void (*a4)(void))
{
  void *v6;
  id v7;

  v6 = _Block_copy(aBlock);
  _Block_copy(v6);
  v7 = a1;
  a4();
  _Block_release(v6);

}

void sub_1C0B89B50(uint64_t a1, void *a2, uint64_t a3, void *a4, Swift::Double a5, uint64_t a6, const void *a7)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  Swift::String v22;
  Swift::String v23;
  void *v24;
  uint64_t v25;
  id v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  const void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  const void *v43;
  uint64_t v44;
  uint64_t v45;

  v43 = a7;
  v12 = type metadata accessor for EntityTaggingInjectedTags();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1C07ACF80(&qword_1ED75E630);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Configuration();
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED749400 != -1)
    swift_once();
  v21 = sub_1C079E000(v15, (uint64_t)qword_1ED7493E0);
  swift_beginAccess();
  sub_1C078A8F8(v21, (uint64_t)v17, &qword_1ED75E630);
  if (sub_1C07B2D80((uint64_t)v17, 1, v18) == 1)
  {
    _Block_release(v43);
    __break(1u);
  }
  else
  {
    sub_1C07E05F4((uint64_t)v17, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    sub_1C07E05C8((uint64_t)v20, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    v22._countAndFlagsBits = a1;
    v22._object = a2;
    v23._countAndFlagsBits = a3;
    v23._object = a4;
    EntityTaggingInjectedTags.injectTag(mdID:tagType:confidence:)(v22, v23, a5);
    if (v24)
    {
      if (qword_1ED762B18 != -1)
        swift_once();
      v25 = sub_1C106F544();
      sub_1C079E000(v25, (uint64_t)qword_1ED762AF8);
      v26 = v24;
      v27 = v24;
      v28 = sub_1C106F538();
      v29 = sub_1C1070390();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = (uint8_t *)swift_slowAlloc();
        v31 = swift_slowAlloc();
        v44 = (uint64_t)v24;
        v45 = v31;
        *(_DWORD *)v30 = 136315138;
        v32 = v24;
        sub_1C07ACF80(&qword_1ED7614F0);
        v33 = sub_1C106FB5C();
        v44 = sub_1C0788DAC(v33, v34, &v45);
        sub_1C10705AC();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1C0771000, v28, v29, "InternalXPC: Behavior Understanding tag injection: failed: %s", v30, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BA8270](v31, -1, -1);
        MEMORY[0x1C3BA8270](v30, -1, -1);
      }
      else
      {

      }
      swift_getErrorValue();
      v36 = sub_1C0B7A6AC();
      v38 = v37;
      sub_1C0B8A9B8();
      v39 = (void *)swift_allocError();
      *(_QWORD *)v40 = v36;
      *(_QWORD *)(v40 + 8) = v38;
      *(_BYTE *)(v40 + 16) = 3;
      v41 = (void *)sub_1C106AA08();
      v35 = v43;
      (*((void (**)(const void *, _QWORD, void *))v43 + 2))(v43, 0, v41);

    }
    else
    {
      v35 = v43;
      (*((void (**)(const void *, uint64_t, _QWORD))v43 + 2))(v43, 1, 0);
    }
    sub_1C07B1F90((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for EntityTaggingInjectedTags);
    sub_1C07B1F90((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    _Block_release(v35);
  }
}

void InternalXPC.Server.behaviorUnderstandingInjectTag(forPersonID:tagType:confidence:completion:)(uint64_t a1, void *a2, uint64_t a3, void *a4, void (*a5)(_QWORD, uint64_t), Swift::Double a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  Swift::String v25;
  Swift::String v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39[2];

  type metadata accessor for EntityTaggingInjectedTags();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v15);
  sub_1C07785B8();
  v16 = sub_1C07ACF80(&qword_1ED75E630);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v17);
  sub_1C077864C();
  v18 = sub_1C0779D10();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v19);
  sub_1C07795DC();
  if (qword_1ED749400 != -1)
    swift_once();
  v20 = sub_1C079E000(v16, (uint64_t)qword_1ED7493E0);
  sub_1C0775864();
  sub_1C0779988(v20, v21, &qword_1ED75E630);
  v22 = sub_1C0B8B6E4();
  sub_1C077AEEC(v22, v23, v18);
  if (v24)
  {
    __break(1u);
  }
  else
  {
    sub_1C07E05F4(v8, v7, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    sub_1C07E05C8(v7, v6, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    v25._countAndFlagsBits = a1;
    v25._object = a2;
    v26._countAndFlagsBits = a3;
    v26._object = a4;
    EntityTaggingInjectedTags.injectTag(mdID:tagType:confidence:)(v25, v26, a6);
    if (v27)
    {
      if (qword_1ED762B18 != -1)
        swift_once();
      v28 = sub_1C077585C();
      v29 = sub_1C079E000(v28, (uint64_t)qword_1ED762AF8);
      sub_1C077CF64();
      sub_1C077CF64();
      sub_1C106F538();
      v30 = sub_1C077C13C();
      if (os_log_type_enabled(v29, v30))
      {
        v31 = (uint8_t *)sub_1C0775854();
        v39[0] = sub_1C0775854();
        *(_DWORD *)v31 = 136315138;
        sub_1C077CF64();
        sub_1C07ACF80(&qword_1ED7614F0);
        v32 = sub_1C106FB5C();
        sub_1C0788DAC(v32, v33, v39);
        sub_1C10705AC();
        swift_bridgeObjectRelease();
        sub_1C077E6C8();
        sub_1C077E6C8();
        sub_1C07796F0(&dword_1C0771000, v29, v30, "InternalXPC: Behavior Understanding tag injection: failed: %s", v31);
        sub_1C0778610();
        sub_1C0776778();
      }
      sub_1C077E6C8();
      sub_1C077E6C8();

      sub_1C077F64C();
      v35 = v39[1];
      sub_1C0B7A6AC();
      sub_1C07AC168();
      v36 = sub_1C0775810();
      *(_QWORD *)v37 = type metadata accessor for Configuration;
      *(_QWORD *)(v37 + 8) = v35;
      *(_BYTE *)(v37 + 16) = 3;
      a5(0, v36);
      sub_1C07888BC();
      sub_1C077E6C8();
    }
    else
    {
      v34 = ((uint64_t (*)(uint64_t, _QWORD))a5)(1, 0);
    }
    sub_1C07A86C4(v34, (uint64_t (*)(_QWORD))type metadata accessor for EntityTaggingInjectedTags);
    sub_1C07AF5E0(v38, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    sub_1C078D424();
  }
}

void sub_1C0B8A340(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)sub_1C106FAF0();
  sub_1C077960C();
  objc_msgSend(a3, sel_setDateFormat_, v4);

}

uint64_t sub_1C0B8A38C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0B8A4C0(a1, a2, a3, (uint64_t)type metadata accessor for BehaviorHistoryUtility, (uint64_t)&off_1E7A0FBC8);
}

uint64_t sub_1C0B8A3A0(uint64_t a1)
{
  destroy for BehaviorHistogramRetriever(a1);
  return a1;
}

uint64_t sub_1C0B8A3D4(uint64_t a1)
{
  _s36EntityInteractionHistogramViewClientVwxx(a1);
  return a1;
}

uint64_t sub_1C0B8A408(uint64_t a1)
{
  sub_1C0A33C4C(a1);
  return a1;
}

uint64_t sub_1C0B8A43C(uint64_t a1, char a2)
{
  if (a2 != -1)
    return sub_1C084BAF8(a1, a2);
  return a1;
}

void sub_1C0B8A450()
{
  sub_1C094A8BC();
}

void sub_1C0B8A468()
{
  sub_1C094A5F8();
}

uint64_t sub_1C0B8A480()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0B8A4AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0B8A4C0(a1, a2, a3, (uint64_t)type metadata accessor for CachedContextProvider, (uint64_t)&off_1E7A11A88);
}

uint64_t sub_1C0B8A4C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[3];
  uint64_t v20;
  _UNKNOWN **v21;

  v11 = sub_1C0B8B700();
  v20 = type metadata accessor for BehaviorDatabase(v11);
  v21 = &off_1E7A10C48;
  v19[0] = v8;
  type metadata accessor for BehaviorSampleGenerator();
  v12 = sub_1C0778598();
  v13 = sub_1C079D180((uint64_t)v19, v20);
  MEMORY[0x1E0C80A78](v13);
  sub_1C0779614();
  sub_1C077E908((uint64_t)v9, v15, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 16));
  sub_1C0B8A590(*v9, v7, v6, v12, v5, a5);
  v17 = v16;
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v19);
  return v17;
}

void sub_1C0B8A590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;

  v11 = sub_1C0B8B700();
  v6[13] = v12(v11);
  v6[14] = a6;
  v6[10] = v8;
  v6[7] = sub_1C0B8B750();
  v6[8] = &off_1E7A10C48;
  sub_1C078A340();
  v6[2] = v13;
  v6[3] = v14;
  v6[4] = v9;
  type metadata accessor for WeightedProbabilitySampleGenerator();
  v6[9] = sub_1C0778598();
  v6[15] = v7;
  sub_1C07785E4();
}

uint64_t sub_1C0B8A608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _OWORD *a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, uint64_t a12, uint64_t a13)
{
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD *v32;
  __int128 v33;
  __int128 v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  _QWORD *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[5];
  _QWORD v48[6];

  v48[3] = &type metadata for EntityRelevanceMLModel;
  v48[4] = &off_1E7A163D0;
  v24 = sub_1C0778598();
  v48[0] = v24;
  *(_QWORD *)(v24 + 16) = a2;
  *(double *)(v24 + 24) = a9;
  *(_QWORD *)(v24 + 32) = a3;
  *(_QWORD *)(v24 + 40) = a4;
  sub_1C078A340();
  *v25 = v27;
  v25[1] = v26;
  v28 = (_QWORD *)(a13
                 + OBJC_IVAR____TtC24IntelligencePlatformCore36EntityRelevanceEvaluationTaskManager____lazy_storage___savedStateKey);
  *v28 = 0;
  v28[1] = 0;
  v29 = (_QWORD *)(a13
                 + OBJC_IVAR____TtC24IntelligencePlatformCore36EntityRelevanceEvaluationTaskManager_currentInvocation);
  *v29 = 0;
  v29[1] = 0;
  sub_1C07E05C8(a1, a13 + OBJC_IVAR____TtC24IntelligencePlatformCore36EntityRelevanceEvaluationTaskManager_config, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  sub_1C0784AC0((uint64_t)v48, a13 + OBJC_IVAR____TtC24IntelligencePlatformCore36EntityRelevanceEvaluationTaskManager_model);
  v30 = a13 + OBJC_IVAR____TtC24IntelligencePlatformCore36EntityRelevanceEvaluationTaskManager_entityType;
  v31 = sub_1C106D6CC();
  v45 = *(_QWORD *)(v31 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 16))(v30, a5, v31);
  v32 = (_OWORD *)(a13 + OBJC_IVAR____TtC24IntelligencePlatformCore36EntityRelevanceEvaluationTaskManager_databaseTable);
  v33 = a6[3];
  v32[2] = a6[2];
  v32[3] = v33;
  v34 = a6[1];
  *v32 = *a6;
  v32[1] = v34;
  *(_QWORD *)(a13 + OBJC_IVAR____TtC24IntelligencePlatformCore36EntityRelevanceEvaluationTaskManager_kvStore) = a7;
  *(double *)(a13 + OBJC_IVAR____TtC24IntelligencePlatformCore36EntityRelevanceEvaluationTaskManager_sampleIntervalLength) = a10;
  v35 = (_QWORD *)(a13 + OBJC_IVAR____TtC24IntelligencePlatformCore36EntityRelevanceEvaluationTaskManager_queryName);
  *v35 = a8;
  v35[1] = a12;
  *(double *)(a13 + OBJC_IVAR____TtC24IntelligencePlatformCore36EntityRelevanceEvaluationTaskManager_duration) = a11;
  sub_1C0B8B3B8();
  v36 = qword_1ED760048;
  swift_retain();
  if (v36 != -1)
    swift_once();
  v37 = sub_1C077585C();
  sub_1C0781988(v37, (uint64_t)qword_1ED78D800);
  sub_1C0784AC0((uint64_t)v48, (uint64_t)v47);
  v38 = sub_1C106F538();
  v39 = sub_1C1070378();
  if (os_log_type_enabled(v38, v39))
  {
    v40 = (uint8_t *)sub_1C0775854();
    v46 = sub_1C0775854();
    *(_DWORD *)v40 = 136315138;
    v41 = sub_1C07A9480(v47, v47[3]);
    v42 = v41[2];
    v43 = v41[3];
    sub_1C077C0B8();
    sub_1C0788DAC(v42, v43, &v46);
    sub_1C10705AC();
    sub_1C077589C();
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v47);
    sub_1C07796F0(&dword_1C0771000, v38, v39, "Evaluating '%s'", v40);
    sub_1C0778610();
    sub_1C0776778();
  }
  sub_1C077980C();
  sub_1C0B8B40C();

  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v47);
  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(a5, v31);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v48);
  sub_1C07B1F90(a1, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  return a13;
}

unint64_t sub_1C0B8A97C()
{
  unint64_t result;

  result = qword_1EF6408D0;
  if (!qword_1EF6408D0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A4AF8, &_s39BehaviorUnderstandingEvaluationXPCErrorON);
    atomic_store(result, (unint64_t *)&qword_1EF6408D0);
  }
  return result;
}

unint64_t sub_1C0B8A9B8()
{
  unint64_t result;

  result = qword_1EF6408D8;
  if (!qword_1EF6408D8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A4AB8, &type metadata for BehaviorUnderstandingXPCError);
    atomic_store(result, (unint64_t *)&qword_1EF6408D8);
  }
  return result;
}

uint64_t sub_1C0B8A9F8(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 5u)
    return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return result;
}

uint64_t destroy for BehaviorUnderstandingXPCError(uint64_t a1)
{
  return sub_1C0B8AA20(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_1C0B8AA20(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 5u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s24IntelligencePlatformCore29BehaviorUnderstandingXPCErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1C0B8A9F8(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for BehaviorUnderstandingXPCError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1C0B8A9F8(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1C0B8AA20(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for BehaviorUnderstandingXPCError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1C0B8AA20(v4, v5, v6);
  return a1;
}

uint64_t sub_1C0B8AB18(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 5u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 6);
}

uint64_t sub_1C0B8AB30(uint64_t result, unsigned int a2)
{
  if (a2 >= 6)
  {
    *(_QWORD *)result = a2 - 6;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 6;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for BehaviorUnderstandingXPCError()
{
  return &type metadata for BehaviorUnderstandingXPCError;
}

uint64_t _s39BehaviorUnderstandingEvaluationXPCErrorOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C0B8ABA4 + 4 * byte_1C10A496E[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C0B8ABD8 + 4 * byte_1C10A4969[v4]))();
}

uint64_t sub_1C0B8ABD8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0B8ABE0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0B8ABE8);
  return result;
}

uint64_t sub_1C0B8ABF4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0B8ABFCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C0B8AC00(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0B8AC08(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s39BehaviorUnderstandingEvaluationXPCErrorOMa()
{
  return &_s39BehaviorUnderstandingEvaluationXPCErrorON;
}

unint64_t sub_1C0B8AC28()
{
  unint64_t result;

  result = qword_1EF6408E8;
  if (!qword_1EF6408E8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A4A28, &_s39BehaviorUnderstandingEvaluationXPCErrorON);
    atomic_store(result, (unint64_t *)&qword_1EF6408E8);
  }
  return result;
}

unint64_t sub_1C0B8AC68()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EF6408F8;
  if (!qword_1EF6408F8)
  {
    v1 = sub_1C07D4BEC(&qword_1EF630698);
    sub_1C0794BAC(&qword_1ED744A20, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3B6B0], MEMORY[0x1E0D3B6C0]);
    v3 = v2;
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0DEAF10], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF6408F8);
  }
  return result;
}

uint64_t sub_1C0B8ACE4(uint64_t a1)
{
  return sub_1C0B8B5D8(a1);
}

unint64_t sub_1C0B8ACF8()
{
  unint64_t result;

  result = qword_1EF640900;
  if (!qword_1EF640900)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A4A50, &type metadata for BehaviorUnderstandingXPCError);
    atomic_store(result, (unint64_t *)&qword_1EF640900);
  }
  return result;
}

unint64_t sub_1C0B8AD34()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1ED760078;
  if (!qword_1ED760078)
  {
    v1 = sub_1C07D4BEC(&qword_1ED761298);
    sub_1C0794BAC(&qword_1ED75E7D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    v3 = v2;
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0DEAF10], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED760078);
  }
  return result;
}

unint64_t sub_1C0B8ADB0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EF640918;
  if (!qword_1EF640918)
  {
    v1 = sub_1C07D4BEC(&qword_1EF640910);
    sub_1C0B8B2F8(&qword_1EF640920, &qword_1ED75E828);
    v3 = v2;
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0DEAF10], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF640918);
  }
  return result;
}

unint64_t sub_1C0B8AE34()
{
  unint64_t result;

  result = qword_1EF640938;
  if (!qword_1EF640938)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A5C20, &type metadata for JointHUDataCollectionTaskManager.SavedState);
    atomic_store(result, (unint64_t *)&qword_1EF640938);
  }
  return result;
}

uint64_t sub_1C0B8AE70()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  return swift_deallocObject();
}

uint64_t sub_1C0B8AEA4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  const void *v3;
  void *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = (const void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1C08B8620;
  return ((uint64_t (*)(uint64_t, const void *, void *))((char *)&dword_1EF640940 + dword_1EF640940))(v2, v3, v4);
}

uint64_t sub_1C0B8AF10()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 40));
  return swift_deallocObject();
}

uint64_t sub_1C0B8AF54()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  _QWORD *v7;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = (void *)v0[5];
  v6 = (void *)v0[6];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v7;
  *v7 = v1;
  v7[1] = sub_1C0806670;
  return ((uint64_t (*)(int, uint64_t, int, void *, void *))((char *)&dword_1EF640950 + dword_1EF640950))(v2, v3, v4, v5, v6);
}

unint64_t sub_1C0B8AFD4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EF640968;
  if (!qword_1EF640968)
  {
    v1 = sub_1C07D4BEC(&qword_1EF640960);
    sub_1C0794BAC((unint64_t *)&unk_1EF646C30, type metadata accessor for PhotosPersonObservation, (uint64_t)&protocol conformance descriptor for PhotosPersonObservation);
    v3 = v2;
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0DEAF10], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF640968);
  }
  return result;
}

unint64_t sub_1C0B8B050()
{
  unint64_t result;

  result = qword_1EF640980;
  if (!qword_1EF640980)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for HumanReadableFeaturizedBehaviorsGroup, &type metadata for HumanReadableFeaturizedBehaviorsGroup);
    atomic_store(result, (unint64_t *)&qword_1EF640980);
  }
  return result;
}

unint64_t sub_1C0B8B08C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EF640990;
  if (!qword_1EF640990)
  {
    v1 = sub_1C07D4BEC(&qword_1EF640988);
    sub_1C0B8B45C(&qword_1EF640998, &qword_1EF6409A0);
    v3[0] = MEMORY[0x1E0DEA970];
    v3[1] = v2;
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0DEA0B8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EF640990);
  }
  return result;
}

unint64_t sub_1C0B8B118()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF6409A8;
  if (!qword_1EF6409A8)
  {
    v1 = sub_1C07D4BEC(&qword_1EF6409B0);
    v2[0] = MEMORY[0x1E0DEA9A0];
    v2[1] = MEMORY[0x1E0DEA970];
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for <A> HistogramBinFrequencyPair<A>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF6409A8);
  }
  return result;
}

uint64_t sub_1C0B8B17C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0B8B1A0()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1C0B8B1CC()
{
  sub_1C0B8B45C(&qword_1EF6409C0, &qword_1EF630658);
}

void sub_1C0B8B1F0()
{
  sub_1C0B8B45C(&qword_1ED751270, &qword_1ED7560C0);
}

void sub_1C0B8B214()
{
  sub_1C0B8B45C(&qword_1ED751278, &qword_1ED75D138);
}

unint64_t sub_1C0B8B238()
{
  unint64_t result;

  result = qword_1ED750718;
  if (!qword_1ED750718)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for VisualEntity, &type metadata for VisualEntity);
    atomic_store(result, (unint64_t *)&qword_1ED750718);
  }
  return result;
}

unint64_t sub_1C0B8B274()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1ED75D118;
  if (!qword_1ED75D118)
  {
    v1 = sub_1C07D4BEC(&qword_1ED75D110);
    sub_1C0B8B2F8(&qword_1ED75D158, &qword_1ED762B80);
    v3 = v2;
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0DEAF10], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED75D118);
  }
  return result;
}

void sub_1C0B8B2F8(unint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  if (!*a1)
  {
    v5 = sub_1C079A720(0, a2);
    v6 = v3;
    atomic_store(MEMORY[0x1C3BA8174](v2, v5, &v6), a1);
  }
  sub_1C0776784();
}

unint64_t sub_1C0B8B33C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EF6409E0;
  if (!qword_1EF6409E0)
  {
    v1 = sub_1C07D4BEC((uint64_t *)&unk_1ED762690);
    sub_1C0794BAC(&qword_1ED75E7D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    v3 = v2;
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0DEE988], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF6409E0);
  }
  return result;
}

void sub_1C0B8B3B8()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C077AE90();
  swift_retain();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C077AEBC();
  sub_1C0778624();
  sub_1C07785E4();
}

void sub_1C0B8B40C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C077B5B4();
  sub_1C07767F4();
  sub_1C0775844();
  sub_1C077960C();
  sub_1C07785E4();
}

void sub_1C0B8B45C(unint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t (*v3)(void);
  uint64_t v5;
  uint64_t v6;

  if (!*a1)
  {
    v5 = sub_1C079A720(0, a2);
    v6 = v3();
    atomic_store(MEMORY[0x1C3BA8174](v2, v5, &v6), a1);
  }
  sub_1C0776784();
}

unint64_t sub_1C0B8B4A8()
{
  unint64_t result;

  result = qword_1ED75ABD8;
  if (!qword_1ED75ABD8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B35F4, &unk_1E7A2A8D0);
    atomic_store(result, (unint64_t *)&qword_1ED75ABD8);
  }
  return result;
}

void sub_1C0B8B4E4()
{
  sub_1C0B8B45C(&qword_1EF6409F0, &qword_1EF630678);
}

unint64_t sub_1C0B8B508()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_1EF6409F8;
  if (!qword_1EF6409F8)
  {
    v1 = sub_1C07D4BEC(&qword_1EF630690);
    v2 = sub_1C0B8B574();
    v3[0] = MEMORY[0x1E0DEA970];
    v3[1] = v2;
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0DEA0B8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EF6409F8);
  }
  return result;
}

unint64_t sub_1C0B8B574()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF64D7D0;
  if (!qword_1EF64D7D0)
  {
    v1 = sub_1C07D4BEC(&qword_1ED75E818);
    v2[0] = MEMORY[0x1E0DEA970];
    v2[1] = MEMORY[0x1E0DEB080];
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0DEA0B8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF64D7D0);
  }
  return result;
}

uint64_t sub_1C0B8B5D8(uint64_t a1)
{
  uint64_t v1;

  return sub_1C0BBA20C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_1C0B8B610()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 248) + 8))(v0, *(_QWORD *)(v1 - 240));
}

uint64_t sub_1C0B8B620()
{
  return sub_1C10705AC();
}

void sub_1C0B8B634(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_1C07E05C8(a1, a2, v2);
}

uint64_t sub_1C0B8B63C@<X0>(uint64_t a1@<X1>, char a2@<W8>)
{
  uint64_t (*v2)(_QWORD, uint64_t);
  uint64_t v3;

  *(_BYTE *)(a1 + 16) = a2;
  return v2(0, v3);
}

void sub_1C0B8B650(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_1C078A8F8(a1, v3, a3);
}

unint64_t sub_1C0B8B680()
{
  return 0xD000000000000039;
}

unint64_t sub_1C0B8B698()
{
  return 0xD000000000000013;
}

uint64_t sub_1C0B8B6CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

uint64_t sub_1C0B8B6DC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1C0788DAC(a1, a2, (uint64_t *)(v2 - 152));
}

uint64_t sub_1C0B8B6E4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1C0B8B6F0()
{
  return type metadata accessor for EntityTaggingInjectedTags();
}

uint64_t sub_1C0B8B700()
{
  return 0;
}

void sub_1C0B8B718()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  sub_1C07E05F4(v0, v2, v1);
}

void sub_1C0B8B748(unint64_t *a1)
{
  uint64_t *v1;

  sub_1C0B8B2F8(a1, v1);
}

uint64_t sub_1C0B8B750()
{
  return type metadata accessor for BehaviorDatabase(0);
}

uint64_t sub_1C0B8B758()
{
  uint64_t v0;

  return sub_1C079D180(v0 - 160, *(_QWORD *)(v0 - 136));
}

void sub_1C0B8B768(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 2u);
}

uint64_t sub_1C0B8B774()
{
  char v0;
  uint64_t v1;

  return sub_1C0B8A43C(v1, v0);
}

uint64_t sub_1C0B8B780(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 280) = a1;
  return v1 - 280;
}

uint64_t sub_1C0B8B794(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 280) = result;
  return result;
}

void sub_1C0B8B7A8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_1C078A8F8(a1, v3, a3);
}

void sub_1C0B8B7B0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_1C078A8F8(v4, v3, a3);
}

uint64_t sub_1C0B8B7BC()
{
  return sub_1C1070C0C();
}

uint64_t sub_1C0B8B7C8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1C0788DAC(a1, a2, (uint64_t *)(v2 - 160));
}

void sub_1C0B8B7E0(unint64_t *a1)
{
  uint64_t *v1;

  sub_1C0B8B45C(a1, v1);
}

uint64_t sub_1C0B8B7E8()
{
  return type metadata accessor for EntityTaggingPersonDataCollectionTask();
}

uint64_t sub_1C0B8B814(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 96) = result;
  *(_QWORD *)(v2 - 88) = a2;
  return result;
}

uint64_t sub_1C0B8B828()
{
  return swift_arrayDestroy();
}

uint64_t sub_1C0B8B830(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = v1;
  v2[4] = sub_1C07ACF80(&qword_1EF640C00);
  v2[5] = swift_task_alloc();
  sub_1C07ACF80(&qword_1EF640C40);
  v2[6] = swift_task_alloc();
  v2[7] = swift_task_alloc();
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  v2[10] = sub_1C07ACF80(&qword_1ED747DF0);
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  sub_1C07ACF80(&qword_1EF640C08);
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C0B8B96C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *(_QWORD *)(v3 + 24);
  sub_1C077A2C4(*(_QWORD *)(v3 + 136), a2, a3, *(_QWORD *)(v3 + 32));
  v5 = sub_1C07ACF80(&qword_1EF640C10);
  *(_QWORD *)(v3 + 144) = v5;
  v6 = *(int *)(v5 + 48);
  *(_DWORD *)(v3 + 160) = v6;
  *(_BYTE *)(v4 + v6) = 1;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 152) = v7;
  *v7 = v3;
  v7[1] = sub_1C0B8B9E8;
  return sub_1C0CE0834(*(_QWORD *)(v3 + 72));
}

uint64_t sub_1C0B8B9E8()
{
  sub_1C07862EC();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0B8BA24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  os_log_type_t v32;
  _WORD *v33;
  uint64_t v34;
  uint64_t v35;
  const char *v36;
  uint64_t v37;
  os_log_type_t v38;
  _WORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(void);
  uint64_t (*v51)(_QWORD, _QWORD, uint64_t);
  uint64_t v52;

  sub_1C07796A0();
  v6 = (uint64_t *)v1;
  v7 = *(_QWORD *)(v1 + 72);
  v8 = *(_QWORD *)(v1 + 80);
  sub_1C077AEEC(v7, 1, v8);
  if (v15)
  {
    sub_1C0784B6C(*(_QWORD *)(v1 + 136), &qword_1EF640C08);
    sub_1C077C7AC(v9, &qword_1EF640C40);
    sub_1C0B94AB0();
    goto LABEL_29;
  }
  sub_1C0B94B40();
  sub_1C07B62A4(v7, v3);
  sub_1C07AC484();
  v10 = sub_1C077AE98();
  sub_1C077FB20(v10);
  sub_1C07BFF60();
  sub_1C077E740(v4);
  v11 = v5 + *(int *)(v8 + 32);
  *(_BYTE *)v11 = v7;
  *(_QWORD *)(v11 + 8) = v2;
  *(_QWORD *)(v11 + 16) = v3;
  sub_1C07B62A4(v5, v0);
  v12 = sub_1C0B94C74();
  sub_1C0B94CA0(v12, v13, v14, &qword_1EF640C18);
  sub_1C0B94C6C(v3, v52);
  sub_1C077AEEC(v52, 1, v8);
  if (!v15)
  {
    v16 = sub_1C0B94D88();
    sub_1C078A67C(v16, v17, &qword_1ED747DF0);
    v18 = sub_1C07ACF80(&qword_1EF640C18);
    sub_1C077B888(v3 + *(int *)(v18 + 28), v19, &qword_1EF640C40);
    v20 = sub_1C0B94E58();
    if (!v15)
    {
      sub_1C078A67C(*(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 88), &qword_1ED747DF0);
      sub_1C07BC138();
      if (v22)
      {
        sub_1C0B94990(&qword_1ED755A40);
        v23 = sub_1C077FE54();
        if ((v23 & 1) == 0)
        {
          sub_1C07AF604(v23, v24, v25, v26, v27, v28, v29, v30, v51);
          sub_1C0B94C1C();
          sub_1C07AB844();
          goto LABEL_23;
        }
        if (qword_1ED762B18 != -1)
          swift_once();
        v31 = sub_1C077585C();
        sub_1C077965C(v31, (uint64_t)qword_1ED762AF8);
        v32 = sub_1C077C13C();
        if (sub_1C077C10C(v32))
        {
          v33 = (_WORD *)sub_1C0780FC8();
          sub_1C078C17C(v33);
          v36 = "firstEvent is expected to have a timestamp earlier than secondEvent";
          goto LABEL_20;
        }
      }
      else
      {
        if (qword_1ED762B18 != -1)
          swift_once();
        v37 = sub_1C077585C();
        sub_1C077965C(v37, (uint64_t)qword_1ED762AF8);
        v38 = sub_1C077C13C();
        if (sub_1C077C10C(v38))
        {
          v39 = (_WORD *)sub_1C0780FC8();
          sub_1C078C17C(v39);
          v36 = "firstEvent is expected have isStarting set to true";
LABEL_20:
          sub_1C077874C(&dword_1C0771000, v34, v35, v36);
          sub_1C0787774();
        }
      }
      sub_1C07B6C3C();
      sub_1C078CA14(v7);
LABEL_23:
      v40 = *(_QWORD *)(v1 + 96);
      sub_1C0779D34(*(_QWORD *)(v1 + 88));
      sub_1C0779D34(v40);
      goto LABEL_24;
    }
    sub_1C077C790(v20, &qword_1ED747DF0);
  }
  v21 = *(_QWORD *)(v1 + 128);
  sub_1C0784B6C(*(_QWORD *)v1, &qword_1EF640C40);
  sub_1C078AB18(v21, 1);
LABEL_24:
  sub_1C0784B6C(*(_QWORD *)(v1 + 64), &qword_1EF640C40);
  sub_1C077C7AC(v41, &qword_1ED747DF0);
  v42 = sub_1C07865BC();
  v43 = *(int *)(v1 + 160);
  if ((_DWORD)v42 == 1)
  {
    v44 = v6[3];
    sub_1C0784B6C(v6[16], &qword_1EF640C08);
    if ((*(_BYTE *)(v44 + v43) & 1) != 0)
    {
      v45 = (_QWORD *)swift_task_alloc();
      v6[19] = (uint64_t)v45;
      *v45 = v6;
      v45[1] = sub_1C0B8B9E8;
      return sub_1C0CE0834(v6[9]);
    }
  }
  else
  {
    v47 = v6[16];
    v48 = v6[17];
    v49 = v6[5];
    sub_1C077C790(v42, &qword_1EF640C08);
    sub_1C07B62A4(v47, v49);
    sub_1C07B62A4(v49, v48);
    sub_1C0B94AD0();
  }
  sub_1C078A67C(v6[17], v6[2], &qword_1EF640C08);
LABEL_29:
  sub_1C07A9650();
  sub_1C07767BC();
  sub_1C07796F8();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C07767D4();
  sub_1C0778638();
  sub_1C0786388();
  sub_1C0B94E18();
  sub_1C077C27C();
  sub_1C077C828();
  v50 = (uint64_t (*)(void))sub_1C0B94D30();
  return sub_1C07B1DF0(v50);
}

uint64_t sub_1C0B8BDE4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = v1;
  v2[4] = sub_1C07ACF80(&qword_1EF640B98);
  v2[5] = swift_task_alloc();
  sub_1C07ACF80(&qword_1EF640BE8);
  v2[6] = swift_task_alloc();
  v2[7] = swift_task_alloc();
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  v2[10] = sub_1C07ACF80(&qword_1ED74A458);
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  sub_1C07ACF80(&qword_1EF640BA0);
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C0B8BF20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *(_QWORD *)(v3 + 24);
  sub_1C077A2C4(*(_QWORD *)(v3 + 136), a2, a3, *(_QWORD *)(v3 + 32));
  v5 = sub_1C07ACF80(&qword_1EF640BB0);
  *(_QWORD *)(v3 + 144) = v5;
  v6 = *(int *)(v5 + 48);
  *(_DWORD *)(v3 + 168) = v6;
  *(_BYTE *)(v4 + v6) = 1;
  sub_1C077C854();
  sub_1C07A1E5C(&qword_1EF640BF8);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 152) = v7;
  *v7 = v3;
  v7[1] = sub_1C0B8BFC4;
  sub_1C07AEF98();
  return sub_1C077E3BC();
}

uint64_t sub_1C0B8BFC4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  sub_1C077862C();
  return sub_1C077AEC4();
}

#error "1C0B8C250: call analysis failed (funcsize=217)"

uint64_t sub_1C0B8C400()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C0789E7C();
  sub_1C077E618();
  sub_1C077C790(v1, &qword_1EF640BA0);
  sub_1C07767BC();
  sub_1C07796F8();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C07767D4();
  sub_1C0778638();
  sub_1C0786388();
  sub_1C0779D20();
  sub_1C0779908();
  sub_1C0786390();
  sub_1C077C830();
  return sub_1C07759B8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0B8C480(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = v1;
  v2[4] = sub_1C07ACF80(&qword_1EF640B50);
  v2[5] = swift_task_alloc();
  v2[6] = swift_task_alloc();
  v2[7] = swift_task_alloc();
  sub_1C07ACF80(&qword_1EF640B80);
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  v2[10] = swift_task_alloc();
  v2[11] = sub_1C07ACF80(&qword_1EF640B28);
  v2[12] = swift_task_alloc();
  sub_1C07ACF80(&qword_1ED754EC0);
  v2[13] = swift_task_alloc();
  v2[14] = type metadata accessor for GamingActivityEvent();
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  sub_1C07ACF80(&qword_1EF640B30);
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C0B8C5F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *(_QWORD *)(v3 + 24);
  sub_1C077A2C4(*(_QWORD *)(v3 + 144), a2, a3, *(_QWORD *)(v3 + 88));
  v5 = sub_1C07ACF80(&qword_1EF640B40);
  *(_QWORD *)(v3 + 152) = v5;
  v6 = *(int *)(v5 + 48);
  *(_DWORD *)(v3 + 176) = v6;
  *(_BYTE *)(v4 + v6) = 1;
  sub_1C077C854();
  sub_1C07A1E5C(&qword_1EF640B90);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 160) = v7;
  *v7 = v3;
  v7[1] = sub_1C0B8C698;
  sub_1C07AEF98();
  return sub_1C077E3BC();
}

uint64_t sub_1C0B8C698()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_1C077B0C8();
  *v2 = *v1;
  *(_QWORD *)(v3 + 168) = v0;
  swift_task_dealloc();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0B8C6E8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  char v25;
  uint64_t v26;
  os_log_type_t v27;
  _WORD *v28;
  uint64_t v29;
  uint64_t v30;
  const char *v31;
  uint64_t v32;
  os_log_type_t v33;
  _WORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(void);
  void (*v57)(uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v1 = v0;
  v2 = v0[13];
  v3 = v0[14];
  sub_1C077AEEC(v2, 1, v3);
  if (v18)
  {
    sub_1C0784B6C(v0[18], &qword_1EF640B30);
    sub_1C077C7AC(v4, &qword_1ED754EC0);
    sub_1C0B94AB0();
    goto LABEL_29;
  }
  v5 = v0 + 9;
  v59 = v1[19];
  v60 = v1[9];
  v7 = v1[15];
  v6 = v1[16];
  v8 = v1[10];
  v9 = v1[7];
  v10 = v1[4];
  v58 = v1[3];
  sub_1C07E05F4(v2, v6, (uint64_t (*)(_QWORD))type metadata accessor for GamingActivityEvent);
  sub_1C07E05C8(v6, v7, (uint64_t (*)(_QWORD))type metadata accessor for GamingActivityEvent);
  v11 = sub_1C077AE98();
  v57 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v57(v9, v7, v11);
  *(_BYTE *)(v9 + *(int *)(v10 + 28)) = *(_BYTE *)(v7 + *(int *)(v3 + 20));
  v12 = (uint64_t *)(v7 + *(int *)(v3 + 24));
  v14 = *v12;
  v13 = v12[1];
  v15 = v12[2];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C07B1F90(v7, (uint64_t (*)(_QWORD))type metadata accessor for GamingActivityEvent);
  v16 = (_QWORD *)(v9 + *(int *)(v10 + 32));
  *v16 = v14;
  v16[1] = v13;
  v16[2] = v15;
  sub_1C078A67C(v9, v8, &qword_1EF640B50);
  sub_1C07B2D8C(v8, 0, 1, v10);
  v17 = v58 + *(int *)(v59 + 44);
  sub_1C0B8CCBC(v8, &qword_1EF640B80, &qword_1EF640B50, &qword_1EF640B58);
  sub_1C0B94C6C(v17, v60);
  sub_1C077AEEC(v60, 1, v10);
  if (!v18)
  {
    v19 = v1[8];
    v5 = v1 + 8;
    v20 = v1[4];
    sub_1C078A67C(v1[9], v1[6], &qword_1EF640B50);
    v21 = sub_1C07ACF80(&qword_1EF640B58);
    sub_1C077B888(v17 + *(int *)(v21 + 28), v22, &qword_1EF640B80);
    sub_1C077AEEC(v19, 1, v20);
    if (!v18)
    {
      v24 = (void *)v1[6];
      sub_1C078A67C(v1[8], v1[5], &qword_1EF640B50);
      sub_1C07BC138();
      if (v25)
      {
        sub_1C0B94990(&qword_1ED755A40);
        v24 = (void *)v11;
        if ((sub_1C106FA6C() & 1) == 0)
        {
          v36 = v1[17];
          v37 = v1[11];
          v39 = v1[5];
          v38 = v1[6];
          v40 = v1[4];
          v57(v36, v38, v11);
          v57(v36 + *(int *)(v37 + 28), v39, v11);
          v41 = (uint64_t *)(v38 + *(int *)(v40 + 32));
          v42 = *v41;
          v43 = v41[1];
          v44 = v41[2];
          v45 = (_QWORD *)(v36 + *(int *)(v37 + 32));
          *v45 = v42;
          v45[1] = v43;
          v45[2] = v44;
          sub_1C0782A28();
          sub_1C07767B4();
          goto LABEL_23;
        }
        if (qword_1ED762B18 != -1)
          swift_once();
        v26 = sub_1C077585C();
        sub_1C077965C(v26, (uint64_t)qword_1ED762AF8);
        v27 = sub_1C077C13C();
        if (sub_1C077C10C(v27))
        {
          v28 = (_WORD *)sub_1C0780FC8();
          sub_1C078C17C(v28);
          v31 = "firstEvent is expected to have a timestamp earlier than secondEvent";
          goto LABEL_20;
        }
      }
      else
      {
        if (qword_1ED762B18 != -1)
          swift_once();
        v32 = sub_1C077585C();
        sub_1C077965C(v32, (uint64_t)qword_1ED762AF8);
        v33 = sub_1C077C13C();
        if (sub_1C077C10C(v33))
        {
          v34 = (_WORD *)sub_1C0780FC8();
          sub_1C078C17C(v34);
          v31 = "firstEvent is expected have isStarting set to true";
LABEL_20:
          sub_1C077874C(&dword_1C0771000, v29, v30, v31);
          sub_1C0787774();
        }
      }
      v35 = v1[17];

      sub_1C078CA14(v35);
LABEL_23:
      v46 = v1[6];
      sub_1C0779D34(v1[5]);
      sub_1C0779D34(v46);
      goto LABEL_24;
    }
    sub_1C0784B6C(v1[6], &qword_1EF640B50);
  }
  v23 = v1[17];
  sub_1C0784B6C(*v5, &qword_1EF640B80);
  sub_1C078AB18(v23, 1);
LABEL_24:
  v47 = v1[16];
  sub_1C0784B6C(v1[10], &qword_1EF640B80);
  sub_1C07B1F90(v47, (uint64_t (*)(_QWORD))type metadata accessor for GamingActivityEvent);
  v48 = sub_1C07865BC();
  v49 = *((int *)v1 + 44);
  if ((_DWORD)v48 == 1)
  {
    v50 = v1[3];
    sub_1C0784B6C(v1[17], &qword_1EF640B30);
    if ((*(_BYTE *)(v50 + v49) & 1) != 0)
    {
      sub_1C077C854();
      sub_1C07A1E5C(&qword_1EF640B90);
      v51 = (_QWORD *)swift_task_alloc();
      v1[20] = v51;
      *v51 = v1;
      v51[1] = sub_1C0B8C698;
      sub_1C07AEF98();
      return sub_1C07B04F4();
    }
  }
  else
  {
    v53 = v1[17];
    v54 = v1[18];
    v55 = v1[12];
    sub_1C077C790(v48, &qword_1EF640B30);
    sub_1C07B62A4(v53, v55);
    sub_1C07B62A4(v55, v54);
    sub_1C0B94AD0();
  }
  sub_1C078A67C(v1[18], v1[2], &qword_1EF640B30);
LABEL_29:
  swift_task_dealloc();
  sub_1C07767BC();
  sub_1C07796F8();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C07767D4();
  sub_1C0778638();
  sub_1C0786388();
  sub_1C0B94E18();
  sub_1C077C830();
  sub_1C077C27C();
  v56 = (uint64_t (*)(void))sub_1C0B94D30();
  return sub_1C07B1DF0(v56);
}

uint64_t sub_1C0B8CC40()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C0789E7C();
  sub_1C077E618();
  sub_1C077C790(v1, &qword_1EF640B30);
  sub_1C07767BC();
  sub_1C07796F8();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C07767D4();
  sub_1C0778638();
  sub_1C0786388();
  sub_1C0779D20();
  sub_1C0779908();
  sub_1C0786390();
  sub_1C077C830();
  return sub_1C07759B8(*(uint64_t (**)(void))(v0 + 8));
}

void sub_1C0B8CCBC(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char v26;
  uint64_t v27;
  uint64_t *v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;

  v37 = a4;
  sub_1C07ACF80(a2);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v8);
  sub_1C077AF80();
  v11 = v9 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v36 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v36 - v16;
  v18 = sub_1C07ACF80(a3);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v19);
  sub_1C077AF80();
  v22 = v20 - v21;
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v36 - v24;
  sub_1C08A6394(a1, (uint64_t)v17);
  sub_1C077AEEC((uint64_t)v17, 1, v18);
  if (v26)
  {
    v27 = (uint64_t)v17;
    v28 = a2;
    goto LABEL_11;
  }
  sub_1C0B94BD4((uint64_t)v17, (uint64_t)v25);
  sub_1C08A6394(v4, (uint64_t)v14);
  v29 = sub_1C07B2D80((uint64_t)v14, 1, v18);
  sub_1C0775A74((uint64_t)v14);
  if (v29 == 1)
  {
    if ((v25[*(int *)(v18 + 28)] & 1) != 0)
    {
      sub_1C0775A74(v4);
      sub_1C0B94BD4((uint64_t)v25, v4);
      sub_1C078AB18(v4, 0);
      v30 = v4 + *(int *)(sub_1C07ACF80(v37) + 28);
      sub_1C0775A74(v30);
      v31 = v30;
LABEL_16:
      v35 = 1;
      goto LABEL_17;
    }
    v27 = (uint64_t)v25;
    v28 = a3;
LABEL_11:
    sub_1C0784B6C(v27, v28);
    return;
  }
  v32 = v4 + *(int *)(sub_1C07ACF80(v37) + 28);
  sub_1C08A6394(v32, v11);
  sub_1C077AEEC(v11, 1, v18);
  if (v26)
  {
    sub_1C0775A74(v11);
  }
  else
  {
    sub_1C0B94BD4(v11, v22);
    if ((*(_BYTE *)(v22 + *(int *)(v18 + 28)) & 1) == 0)
    {
      sub_1C0784B6C(v22, a3);
      sub_1C0775A74(v4);
      sub_1C0B94BD4((uint64_t)v25, v4);
      sub_1C078AB18(v4, 0);
      sub_1C0775A74(v32);
      v31 = v32;
      goto LABEL_16;
    }
    sub_1C0775A74(v4);
    sub_1C0B94BD4(v22, v4);
    sub_1C078AB18(v4, 0);
  }
  sub_1C0775A74(v32);
  v33 = sub_1C077FE70();
  sub_1C0B94BD4(v33, v34);
  v31 = v32;
  v35 = 0;
LABEL_17:
  sub_1C078AB18(v31, v35);
}

IntelligencePlatformCore::ContextDataSources_optional __swiftcall ContextDataSources.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  IntelligencePlatformCore::ContextDataSources_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1C1070A2C();
  result.value = sub_1C07767AC();
  v5 = 12;
  if (v3 < 0xC)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static ContextDataSources.allCases.getter()
{
  return &unk_1E7A049F0;
}

uint64_t ContextDataSources.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0B8CFD0 + 4 * byte_1C10A4B80[*v0]))(6909804, 0xE300000000000000);
}

unint64_t sub_1C0B8CFD0()
{
  return 0xD000000000000010;
}

uint64_t sub_1C0B8CFEC()
{
  return 0x7261646E656C6163;
}

uint64_t sub_1C0B8D004()
{
  return 0x74656C6C6177;
}

unint64_t sub_1C0B8D018()
{
  return 0xD000000000000019;
}

uint64_t sub_1C0B8D0CC()
{
  return 0x6353736F746F6870;
}

uint64_t sub_1C0B8D0EC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C08C682C(*a1, *a2);
}

void sub_1C0B8D0F8()
{
  unsigned __int8 *v0;

  sub_1C0A53F4C(*v0);
}

uint64_t sub_1C0B8D100(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1C08C9E74(a1, *v1);
}

void sub_1C0B8D108(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1C0A54874(a1, *v1);
}

IntelligencePlatformCore::ContextDataSources_optional sub_1C0B8D110(Swift::String *a1)
{
  return ContextDataSources.init(rawValue:)(*a1);
}

uint64_t sub_1C0B8D11C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ContextDataSources.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1C0B8D140(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7A049F0;
}

uint64_t sub_1C0B8D150(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x7461447472617473 && a2 == 0xE900000000000065;
  if (v2 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x65746144646E65 && a2 == 0xE700000000000000;
    if (v6 || (sub_1C1070CB4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000011 && a2 == 0x80000001C1102C20 || (sub_1C1070CB4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = a1 == 0x656C626164616572 && a2 == 0xEF65746144646E45;
      if (v7 || (sub_1C1070CB4() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        v9 = sub_1C1070CB4();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 4;
        else
          return 5;
      }
    }
  }
}

uint64_t sub_1C0B8D388(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0B8D3C0 + 4 * byte_1C10A4B8C[a1]))(0x7461447472617473, 0xE900000000000065);
}

uint64_t sub_1C0B8D3C0()
{
  return 0x65746144646E65;
}

unint64_t sub_1C0B8D3D8()
{
  return 0xD000000000000011;
}

uint64_t sub_1C0B8D3F4()
{
  return 0x656C626164616572;
}

uint64_t sub_1C0B8D418()
{
  return 0x746E65746E6F63;
}

void sub_1C0B8D430(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12[3];
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;

  v4 = a2[2];
  v5 = a2[3];
  v12[0] = a2[4];
  v12[1] = v4;
  v6 = type metadata accessor for SessionCodableDataComplyingWrapper.CodingKeys(255, v4, v5, v12[0]);
  MEMORY[0x1C3BA8174](&unk_1C10A4E40, v6);
  v7 = sub_1C1070BD0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v12 - v9;
  sub_1C07A9480(a1, a1[3]);
  sub_1C1070EB8();
  v17 = 0;
  v11 = v12[2];
  sub_1C1070B94();
  if (!v11)
  {
    v16 = 1;
    sub_1C1070B94();
    v15 = 2;
    sub_1C106ADE0();
    sub_1C0B94990(&qword_1ED75E7D0);
    sub_1C0B94CBC();
    v14 = 3;
    sub_1C0B94CBC();
    v13 = 4;
    sub_1C0B94CBC();
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1C07757D0();
}

void sub_1C0B8D618(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;

  v36 = a5;
  v35 = *(_QWORD *)(a2 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v9);
  v37 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_1C106ADE0();
  v43 = *(_QWORD *)(v47 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v11);
  sub_1C077AF80();
  v39 = (char *)(v12 - v13);
  MEMORY[0x1E0C80A78](v14);
  v41 = (char *)&v33 - v15;
  v16 = type metadata accessor for SessionCodableDataComplyingWrapper.CodingKeys(255, a2, a3, a4);
  MEMORY[0x1C3BA8174](&unk_1C10A4E40, v16);
  v42 = sub_1C1070B10();
  v40 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v18 = (char *)&v33 - v17;
  v38 = a3;
  v46 = type metadata accessor for SessionCodableDataComplyingWrapper(0, a2, a3, a4);
  v19 = *(_QWORD *)(v46 - 8);
  MEMORY[0x1E0C80A78](v46);
  v44 = a1;
  v45 = (char *)&v33 - v20;
  sub_1C07A9480(a1, a1[3]);
  v21 = v48;
  sub_1C1070E94();
  if (v21)
  {
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v44);
  }
  else
  {
    v22 = v41;
    v34 = v19;
    v48 = a2;
    v53 = 0;
    sub_1C1070ABC();
    v23 = v18;
    v24 = v45;
    *(_QWORD *)v45 = v25;
    v52 = 1;
    v33 = v23;
    sub_1C1070ABC();
    v27 = (int *)v46;
    v26 = v47;
    *((_QWORD *)v24 + 1) = v28;
    v51 = 2;
    sub_1C0B94990(&qword_1ED75E9A0);
    sub_1C0B94B88();
    v29 = *(void (**)(char *, char *, uint64_t))(v43 + 32);
    v29(&v24[v27[12]], v22, v26);
    v50 = 3;
    sub_1C0B94B88();
    v29(&v24[v27[13]], v39, v26);
    v49 = 4;
    v30 = v37;
    v31 = v48;
    sub_1C1070AE0();
    sub_1C0781EB4();
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(&v24[v27[14]], v30, v31);
    v32 = v34;
    (*(void (**)(uint64_t, char *, int *))(v34 + 16))(v36, v24, v27);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v44);
    (*(void (**)(char *, int *))(v32 + 8))(v24, v27);
  }
  sub_1C07757D0();
}

BOOL sub_1C0B8D9D4(char *a1, char *a2)
{
  return sub_1C07C50B0(*a1, *a2);
}

uint64_t sub_1C0B8D9EC()
{
  return sub_1C07D14EC();
}

uint64_t sub_1C0B8D9FC()
{
  return sub_1C07C50C0();
}

uint64_t sub_1C0B8DA0C()
{
  sub_1C1070DF8();
  sub_1C07C50C0();
  return sub_1C1070E4C();
}

uint64_t sub_1C0B8DA54()
{
  unsigned __int8 *v0;

  return sub_1C0B8D388(*v0);
}

uint64_t sub_1C0B8DA64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0B8D150(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0B8DA94()
{
  return sub_1C0782AF4();
}

uint64_t sub_1C0B8DAB8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C07C52E8();
  *a1 = result;
  return result;
}

uint64_t sub_1C0B8DAE8(uint64_t a1)
{
  MEMORY[0x1C3BA8174](&unk_1C10A4E40, a1);
  return sub_1C1070EE8();
}

uint64_t sub_1C0B8DB1C(uint64_t a1)
{
  MEMORY[0x1C3BA8174](&unk_1C10A4E40, a1);
  return sub_1C1070EF4();
}

void sub_1C0B8DB50(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C0B8D618(a1, a2[2], a2[3], a2[4], a3);
}

void sub_1C0B8DB70(_QWORD *a1, _QWORD *a2)
{
  sub_1C0B8D430(a1, a2);
}

uint64_t sub_1C0B8DB84(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[3] = a1;
  v2 = sub_1C07ACF80(&qword_1EF6300D8);
  v1[4] = v2;
  v1[5] = *(_QWORD *)(v2 - 8);
  v1[6] = swift_task_alloc();
  v1[7] = sub_1C07ACF80(&qword_1ED74AF60);
  v1[8] = swift_task_alloc();
  v1[9] = swift_task_alloc();
  sub_1C106FB50();
  v1[10] = swift_task_alloc();
  v3 = sub_1C106A744();
  v1[11] = v3;
  v1[12] = *(_QWORD *)(v3 - 8);
  v1[13] = swift_task_alloc();
  sub_1C106A72C();
  v1[14] = swift_task_alloc();
  v4 = sub_1C106B050();
  v1[15] = v4;
  v1[16] = *(_QWORD *)(v4 - 8);
  v1[17] = swift_task_alloc();
  sub_1C07ACF80(&qword_1EF640A90);
  v1[18] = swift_task_alloc();
  type metadata accessor for LOISessionDataAsyncSequence(0);
  v1[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C0B8DCF4()
{
  uint64_t *v0;
  _QWORD *v1;

  sub_1C07E05C8(v0[3], v0[19], type metadata accessor for LOISessionDataAsyncSequence);
  v0[20] = MEMORY[0x1E0DEE9D8];
  v1 = (_QWORD *)swift_task_alloc();
  v0[21] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_1C0B8DD60;
  return sub_1C0C095F4(v0[18]);
}

uint64_t sub_1C0B8DD60()
{
  sub_1C077B0C8();
  sub_1C07862EC();
  sub_1C077862C();
  return sub_1C077AEC4();
}

#error "1C0B8DE84: call analysis failed (funcsize=187)"

uint64_t sub_1C0B8E0B0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1[5] = a1;
  v2 = sub_1C07ACF80((uint64_t *)&unk_1EF637A00);
  v1[6] = v2;
  v1[7] = *(_QWORD *)(v2 - 8);
  v1[8] = swift_task_alloc();
  v1[9] = sub_1C07ACF80(&qword_1ED74AFA8);
  v1[10] = swift_task_alloc();
  v1[11] = swift_task_alloc();
  sub_1C106FB50();
  v1[12] = swift_task_alloc();
  v3 = sub_1C106A744();
  v1[13] = v3;
  v1[14] = *(_QWORD *)(v3 - 8);
  v1[15] = swift_task_alloc();
  sub_1C106A72C();
  v1[16] = swift_task_alloc();
  v4 = sub_1C106B050();
  v1[17] = v4;
  v1[18] = *(_QWORD *)(v4 - 8);
  v1[19] = swift_task_alloc();
  sub_1C07ACF80(&qword_1EF640AB0);
  v1[20] = swift_task_alloc();
  v5 = sub_1C07ACF80(&qword_1ED74D418);
  v1[21] = v5;
  v1[22] = *(_QWORD *)(v5 - 8);
  v1[23] = swift_task_alloc();
  sub_1C07ACF80(&qword_1ED74CCA8);
  v1[24] = swift_task_alloc();
  sub_1C07ACF80(&qword_1EF640AB8);
  v1[25] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C0B8E274()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = sub_1C07AB494();
  sub_1C0B94E40(v2);
  sub_1C0B94CC8();
  sub_1C07BB218(&qword_1EF640AC0, &qword_1ED74D418);
  sub_1C0B94C30();
  sub_1C077E740(v0);
  *(_QWORD *)(v1 + 208) = MEMORY[0x1E0DEE9D8];
  sub_1C077C854();
  sub_1C07A1E5C(&qword_1EF640AD0);
  v3 = swift_task_alloc();
  v4 = (_QWORD *)sub_1C0B94EC4(v3);
  sub_1C078E0D8(v4);
  return sub_1C0B94B2C();
}

uint64_t sub_1C0B8E328()
{
  sub_1C0B94B68();
  sub_1C077862C();
  return sub_1C077AEC4();
}

#error "1C0B8E440: call analysis failed (funcsize=169)"

uint64_t sub_1C0B8E640()
{
  uint64_t v0;

  sub_1C07AB3A4(*(_QWORD *)(v0 + 224));
  *(_QWORD *)(v0 + 232) = sub_1C07ACF80(&qword_1ED7614F0);
  sub_1C0B94CB4();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0B8E690()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v3;

  sub_1C0789E7C();
  sub_1C0B94E84();
  if (sub_1C1070C60())
  {
    sub_1C0B94E2C();
  }
  else
  {
    v3 = sub_1C0775810();
    sub_1C078BB90(v3, v1);
  }
  sub_1C0784B6C(*(_QWORD *)(v0 + 200), &qword_1EF640AB8);
  sub_1C07767AC();
  sub_1C0782720();
  sub_1C07796F8();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C07767D4();
  sub_1C0778638();
  sub_1C0786388();
  sub_1C0779D20();
  sub_1C07767BC();
  sub_1C0786390();
  return sub_1C07759B8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0B8E72C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[13] = a1;
  v2[14] = a2;
  v3 = sub_1C07ACF80(&qword_1EF6300F0);
  v2[15] = v3;
  v2[16] = *(_QWORD *)(v3 - 8);
  v2[17] = swift_task_alloc();
  v2[18] = sub_1C07ACF80(&qword_1ED74AF68);
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  sub_1C106FB50();
  v2[21] = swift_task_alloc();
  v4 = sub_1C106A744();
  v2[22] = v4;
  v2[23] = *(_QWORD *)(v4 - 8);
  v2[24] = swift_task_alloc();
  sub_1C106A72C();
  v2[25] = swift_task_alloc();
  v5 = sub_1C106B050();
  v2[26] = v5;
  v2[27] = *(_QWORD *)(v5 - 8);
  v2[28] = swift_task_alloc();
  type metadata accessor for WalletPassContent();
  v2[29] = swift_task_alloc();
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  v2[30] = swift_task_alloc();
  v6 = sub_1C106ADE0();
  v2[31] = v6;
  v2[32] = *(_QWORD *)(v6 - 8);
  v2[33] = swift_task_alloc();
  v2[34] = swift_task_alloc();
  v2[35] = swift_task_alloc();
  sub_1C07ACF80(&qword_1EF630AB8);
  v2[36] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C0B8E904()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0[13] + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  v0[38] = v0[14];
  v0[39] = v2;
  v0[37] = v1;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C077862C();
  return sub_1C077AEC4();
}

void sub_1C0B8E948()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_1C07796A0();
  v3 = v0[38];
  if (v3 >= v0[37])
  {
    sub_1C077A2C4(v0[36], v1, v2, v0[18]);
    v6 = v0[38];
LABEL_8:
    v0[40] = v6;
    sub_1C077862C();
    swift_task_switch();
    return;
  }
  if ((v3 & 0x8000000000000000) == 0)
  {
    v5 = v0[30];
    v4 = v0[31];
    sub_1C0784AC0(v0[13] + 40 * v3 + 32, (uint64_t)(v0 + 2));
    v6 = v3 + 1;
    v7 = v0[5];
    v8 = v0[6];
    sub_1C07A9480(v0 + 2, v7);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
    v9 = sub_1C07B2D80(v5, 1, v4);
    v10 = v0[36];
    if (v9 == 1)
    {
      sub_1C0784B6C(v0[30], (uint64_t *)&unk_1ED762690);
      sub_1C078CA14(v10);
    }
    else
    {
      v11 = v0[34];
      v12 = v0[35];
      v19 = v0[33];
      v21 = v6;
      v14 = v0[31];
      v13 = v0[32];
      v15 = v0[29];
      v20 = v0[18];
      sub_1C0B94E38(v12, v0[30]);
      v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
      v16(v11, v12, v14);
      v17 = sub_1C077FE70();
      ((void (*)(uint64_t))v16)(v17);
      sub_1C0784AC0((uint64_t)(v0 + 2), (uint64_t)(v0 + 7));
      sub_1C0C7F1F0(v0 + 7, v15);
      v18 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
      v6 = v21;
      v18(v12, v14);
      sub_1C0B94E38(v10, v11);
      sub_1C0B94E38(v10 + *(int *)(v20 + 28), v19);
      sub_1C07E05F4(v15, v10 + *(int *)(v20 + 32), (uint64_t (*)(_QWORD))type metadata accessor for WalletPassContent);
      sub_1C0782A28();
    }
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)(v0 + 2));
    goto LABEL_8;
  }
  __break(1u);
}

uint64_t sub_1C0B8EB10()
{
  _QWORD *v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(void);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;

  sub_1C07B9E38();
  v1 = v0[18];
  v2 = sub_1C07865BC();
  v3 = v0[39];
  if (v2 == 1)
  {
    v4 = v0[23];
    v5 = (_QWORD *)v0[24];
    v50 = v0[22];
    swift_bridgeObjectRelease();
    v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
    v7 = (void *)sub_1C07A80C0();
    sub_1C077C44C((uint64_t)v7, sel_setDateFormat_);

    v8 = objc_msgSend((id)objc_opt_self(), sel_localTimeZone);
    sub_1C077F83C();

    sub_1C106B038();
    v9 = sub_1C077F2EC();
    sub_1C077C44C(v9, sel_setTimeZone_);

    sub_1C07B7FF8();
    sub_1C077B5BC();
    sub_1C078049C();
    sub_1C0B94BC8();
    sub_1C0B94D80();
    *v5 = v6;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v4 + 104))(v5, *MEMORY[0x1E0CAE158], v50);
    v49 = v6;
    v10 = sub_1C07AF950();
    v11 = (void *)MEMORY[0x1C3BA79F4](v10);
    v0[12] = v3;
    sub_1C07767B4();
    sub_1C07797E4();
    sub_1C078BE24(&qword_1EF640AF8, v12, &qword_1EF640B00);
    v13 = sub_1C106A75C();
    v15 = v14;
    v48 = v0[34];
    sub_1C077589C();
    objc_autoreleasePoolPop(v11);
    sub_1C106FB44();
    v33 = sub_1C106FB2C();
    sub_1C07BA824(v33, v34, v35, v36, v37, v38, v39, v40, v47, v48, v49);
    sub_1C07785A8();
    sub_1C0B94BEC();
    sub_1C07B3374(v13, v15);
    sub_1C077589C();
    sub_1C0779D20();
    sub_1C0786388();
    sub_1C0786390();
    sub_1C077C27C();
    sub_1C077C828();
    sub_1C0778744();
    sub_1C07819BC();
    sub_1C0780AA8();
    sub_1C07806D8();
    sub_1C0779D18();
    sub_1C077F164();
    sub_1C07B68D8();
    sub_1C077E900();
    v41 = sub_1C0779990();
    return sub_1C079BF54(v41, v42, v43);
  }
  else
  {
    v16 = v0[31];
    v17 = v0[32];
    v19 = v0[19];
    v18 = v0[20];
    v20 = (char *)v0[17];
    v21 = (int *)v0[15];
    sub_1C0B94D70();
    sub_1C0B94C6C(v18, v19);
    sub_1C106AC60();
    *(_QWORD *)v20 = v22;
    v23 = v19 + *(int *)(v1 + 28);
    sub_1C106AC60();
    *((_QWORD *)v20 + 1) = v24;
    v25 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 32);
    v25(&v20[v21[12]], v19, v16);
    v25(&v20[v21[13]], v23, v16);
    sub_1C07E05F4(v19 + *(int *)(v1 + 32), (uint64_t)&v20[v21[14]], (uint64_t (*)(_QWORD))type metadata accessor for WalletPassContent);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v27 = v0[39];
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1C079F440();
      sub_1C07ECDA0();
      v27 = v45;
    }
    sub_1C0789FF4();
    if (v29)
    {
      sub_1C079C690(v28);
      sub_1C07ECDA0();
      v27 = v46;
    }
    sub_1C079AC84();
    sub_1C078A67C(v30, v31, &qword_1EF6300F0);
    sub_1C077C2D0(v32, &qword_1ED74AF68);
    v0[38] = v0[40];
    v0[39] = v27;
    sub_1C077862C();
    return swift_task_switch();
  }
}

uint64_t sub_1C0B8EED4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[26] = a1;
  v2 = sub_1C07ACF80((uint64_t *)&unk_1EF637A10);
  v1[27] = v2;
  v1[28] = *(_QWORD *)(v2 - 8);
  v1[29] = swift_task_alloc();
  v1[30] = sub_1C07ACF80(&qword_1ED74AFB0);
  v1[31] = swift_task_alloc();
  v1[32] = swift_task_alloc();
  sub_1C106FB50();
  v1[33] = swift_task_alloc();
  v3 = sub_1C106A744();
  v1[34] = v3;
  v1[35] = *(_QWORD *)(v3 - 8);
  v1[36] = swift_task_alloc();
  sub_1C106A72C();
  v1[37] = swift_task_alloc();
  v4 = sub_1C106B050();
  v1[38] = v4;
  v1[39] = *(_QWORD *)(v4 - 8);
  v1[40] = swift_task_alloc();
  sub_1C07ACF80(qword_1ED74BC78);
  v1[41] = swift_task_alloc();
  v1[42] = type metadata accessor for InferredActivitySegment();
  v1[43] = swift_task_alloc();
  sub_1C07ACF80(&qword_1EF640B08);
  v1[44] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C0B8F06C()
{
  uint64_t v0;

  sub_1C0B5A124(*(char **)(v0 + 208), (char *)(v0 + 16));
  *(_QWORD *)(v0 + 360) = MEMORY[0x1E0DEE9D8];
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0B8F0AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;

  if (v3[3])
  {
    v4 = (_QWORD *)swift_task_alloc();
    v3[46] = v4;
    *v4 = v3;
    v4[1] = sub_1C0B8F13C;
    return sub_1C0B57FF8(v3[41]);
  }
  else
  {
    sub_1C077A2C4(v3[41], a2, a3, v3[42]);
    sub_1C0784B6C(v3[41], qword_1ED74BC78);
    sub_1C077A2C4(v3[44], v6, v7, v3[30]);
    sub_1C077862C();
    return sub_1C077AEC4();
  }
}

uint64_t sub_1C0B8F13C()
{
  sub_1C077B0C8();
  sub_1C07862EC();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0B8F170()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v1 = v0[41];
  v2 = v0[42];
  v3 = sub_1C077AEEC(v1, 1, v2);
  if (v4)
  {
    sub_1C077C7AC(v3, qword_1ED74BC78);
    v10 = 1;
  }
  else
  {
    v6 = v0[43];
    v5 = v0[44];
    v7 = v0[30];
    sub_1C07E05F4(v1, v6, (uint64_t (*)(_QWORD))type metadata accessor for InferredActivitySegment);
    v8 = sub_1C077AE98();
    v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
    v9(v5, v6, v8);
    v9(v5 + *(int *)(v7 + 28), v6 + *(int *)(v2 + 20), v8);
    sub_1C07E05F4(v6, v5 + *(int *)(v7 + 32), (uint64_t (*)(_QWORD))type metadata accessor for InferredActivitySegment);
    v10 = 0;
  }
  sub_1C07B2D8C(v0[44], v10, 1, v0[30]);
  sub_1C077862C();
  return swift_task_switch();
}

#error "1C0B8F358: call analysis failed (funcsize=187)"

uint64_t sub_1C0B8F57C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1[5] = a1;
  v2 = sub_1C07ACF80(&qword_1EF630108);
  v1[6] = v2;
  v1[7] = *(_QWORD *)(v2 - 8);
  v1[8] = swift_task_alloc();
  v1[9] = sub_1C07ACF80(&qword_1EF640B28);
  v1[10] = swift_task_alloc();
  v1[11] = swift_task_alloc();
  sub_1C106FB50();
  v1[12] = swift_task_alloc();
  v3 = sub_1C106A744();
  v1[13] = v3;
  v1[14] = *(_QWORD *)(v3 - 8);
  v1[15] = swift_task_alloc();
  sub_1C106A72C();
  v1[16] = swift_task_alloc();
  v4 = sub_1C106B050();
  v1[17] = v4;
  v1[18] = *(_QWORD *)(v4 - 8);
  v1[19] = swift_task_alloc();
  sub_1C07ACF80(&qword_1EF640B30);
  v1[20] = swift_task_alloc();
  v5 = sub_1C07ACF80(&qword_1ED755038);
  v1[21] = v5;
  v1[22] = *(_QWORD *)(v5 - 8);
  v1[23] = swift_task_alloc();
  sub_1C07ACF80(&qword_1ED754F60);
  v1[24] = swift_task_alloc();
  sub_1C07ACF80(&qword_1EF640B38);
  v1[25] = swift_task_alloc();
  sub_1C07ACF80(&qword_1ED754F78);
  v1[26] = swift_task_alloc();
  v1[27] = sub_1C07ACF80(&qword_1EF640B40);
  v1[28] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C0B8F78C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t (*v12)(void);

  sub_1C077B704();
  v4 = sub_1C077ED70();
  sub_1C078A8F8(v4, v1, &qword_1ED754F78);
  sub_1C0B94DA0();
  sub_1C0B94C58();
  sub_1C07BB218(&qword_1EF640B48, &qword_1ED755038);
  sub_1C077E258();
  sub_1C0B94E98();
  v5 = v0 + *(int *)(v3 + 44);
  sub_1C07ACF80(&qword_1EF640B50);
  sub_1C077E608(v5);
  v6 = sub_1C07ACF80(&qword_1EF640B58);
  v7 = sub_1C077E608(v5 + *(int *)(v6 + 28));
  sub_1C0B94E20(v7, v8, &qword_1EF640B38);
  *(_BYTE *)(v0 + *(int *)(v3 + 48)) = 1;
  sub_1C0784B6C(v1, &qword_1ED754F78);
  *(_QWORD *)(v2 + 232) = MEMORY[0x1E0DEE9D8];
  v9 = sub_1C077FDD8();
  v10 = (_QWORD *)sub_1C07BA968(v9);
  v11 = sub_1C0B94DD0(v10);
  return sub_1C078A37C(v11, v12);
}

uint64_t sub_1C0B8F87C()
{
  sub_1C07821FC();
  sub_1C077862C();
  return sub_1C077AEC4();
}

#error "1C0B8F994: call analysis failed (funcsize=168)"

uint64_t sub_1C0B8FB88()
{
  uint64_t v0;

  sub_1C07AB3A4(*(_QWORD *)(v0 + 248));
  *(_QWORD *)(v0 + 256) = sub_1C07ACF80(&qword_1ED7614F0);
  sub_1C0B94CB4();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0B8FBD8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v3;

  sub_1C07796A0();
  sub_1C07ABFEC();
  if (sub_1C1070C60())
  {
    sub_1C07BFCE8();
  }
  else
  {
    v3 = sub_1C0775810();
    sub_1C078BB90(v3, v1);
  }
  sub_1C0784B6C(*(_QWORD *)(v0 + 224), &qword_1EF640B40);
  sub_1C07767AC();
  sub_1C0781724();
  sub_1C07796F8();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C07767D4();
  sub_1C0778638();
  sub_1C0786388();
  sub_1C0779D20();
  sub_1C07767BC();
  sub_1C0786390();
  sub_1C077C830();
  sub_1C077C27C();
  return sub_1C07785F4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0B8FC7C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1[5] = a1;
  v2 = sub_1C07ACF80((uint64_t *)&unk_1EF637A20);
  v1[6] = v2;
  v1[7] = *(_QWORD *)(v2 - 8);
  v1[8] = swift_task_alloc();
  v1[9] = sub_1C07ACF80(&qword_1EF640B98);
  v1[10] = swift_task_alloc();
  v1[11] = swift_task_alloc();
  sub_1C106FB50();
  v1[12] = swift_task_alloc();
  v3 = sub_1C106A744();
  v1[13] = v3;
  v1[14] = *(_QWORD *)(v3 - 8);
  v1[15] = swift_task_alloc();
  sub_1C106A72C();
  v1[16] = swift_task_alloc();
  v4 = sub_1C106B050();
  v1[17] = v4;
  v1[18] = *(_QWORD *)(v4 - 8);
  v1[19] = swift_task_alloc();
  sub_1C07ACF80(&qword_1EF640BA0);
  v1[20] = swift_task_alloc();
  v5 = sub_1C07ACF80(&qword_1ED74D508);
  v1[21] = v5;
  v1[22] = *(_QWORD *)(v5 - 8);
  v1[23] = swift_task_alloc();
  sub_1C07ACF80(&qword_1ED74C9F8);
  v1[24] = swift_task_alloc();
  sub_1C07ACF80(&qword_1EF640BA8);
  v1[25] = swift_task_alloc();
  sub_1C07ACF80(&qword_1ED74D140);
  v1[26] = swift_task_alloc();
  v1[27] = sub_1C07ACF80(&qword_1EF640BB0);
  v1[28] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C0B8FE8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t (*v12)(void);

  sub_1C077B704();
  v4 = sub_1C077ED70();
  sub_1C078A8F8(v4, v1, &qword_1ED74D140);
  sub_1C0B94DA0();
  sub_1C0B94C58();
  sub_1C07BB218(&qword_1EF640BB8, &qword_1ED74D508);
  sub_1C077E258();
  sub_1C0B94E98();
  v5 = v0 + *(int *)(v3 + 44);
  sub_1C07ACF80(&qword_1ED74A458);
  sub_1C077E608(v5);
  v6 = sub_1C07ACF80(&qword_1EF640BC0);
  v7 = sub_1C077E608(v5 + *(int *)(v6 + 28));
  sub_1C0B94E20(v7, v8, &qword_1EF640BA8);
  *(_BYTE *)(v0 + *(int *)(v3 + 48)) = 1;
  sub_1C0784B6C(v1, &qword_1ED74D140);
  *(_QWORD *)(v2 + 232) = MEMORY[0x1E0DEE9D8];
  v9 = sub_1C077FDD8();
  v10 = (_QWORD *)sub_1C07BA968(v9);
  v11 = sub_1C0B94DD0(v10);
  return sub_1C078A37C(v11, v12);
}

uint64_t sub_1C0B8FF7C()
{
  sub_1C07821FC();
  sub_1C077862C();
  return sub_1C077AEC4();
}

#error "1C0B90094: call analysis failed (funcsize=164)"

uint64_t sub_1C0B90278()
{
  uint64_t v0;

  sub_1C07AB3A4(*(_QWORD *)(v0 + 248));
  *(_QWORD *)(v0 + 256) = sub_1C07ACF80(&qword_1ED7614F0);
  sub_1C0B94CB4();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0B902C8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v3;

  sub_1C07796A0();
  sub_1C07ABFEC();
  if (sub_1C1070C60())
  {
    sub_1C07BFCE8();
  }
  else
  {
    v3 = sub_1C0775810();
    sub_1C078BB90(v3, v1);
  }
  sub_1C0784B6C(*(_QWORD *)(v0 + 224), &qword_1EF640BB0);
  sub_1C07767AC();
  sub_1C0781724();
  sub_1C07796F8();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C07767D4();
  sub_1C0778638();
  sub_1C0786388();
  sub_1C0779D20();
  sub_1C07767BC();
  sub_1C0786390();
  sub_1C077C830();
  sub_1C077C27C();
  return sub_1C07785F4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0B9036C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[5] = a1;
  v2 = sub_1C07ACF80(&qword_1EF630120);
  v1[6] = v2;
  v1[7] = *(_QWORD *)(v2 - 8);
  v1[8] = swift_task_alloc();
  v1[9] = sub_1C07ACF80(&qword_1EF640C00);
  v1[10] = swift_task_alloc();
  v1[11] = swift_task_alloc();
  sub_1C106FB50();
  v1[12] = swift_task_alloc();
  v3 = sub_1C106A744();
  v1[13] = v3;
  v1[14] = *(_QWORD *)(v3 - 8);
  v1[15] = swift_task_alloc();
  sub_1C106A72C();
  v1[16] = swift_task_alloc();
  v4 = sub_1C106B050();
  v1[17] = v4;
  v1[18] = *(_QWORD *)(v4 - 8);
  v1[19] = swift_task_alloc();
  sub_1C07ACF80(&qword_1EF640C08);
  v1[20] = swift_task_alloc();
  v1[21] = sub_1C07ACF80(&qword_1EF640C10);
  v1[22] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C0B904E4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t (*v10)(uint64_t);

  v2 = v0[21];
  v1 = (_QWORD *)v0[22];
  v3 = (void *)v0[5];
  v4 = (uint64_t)v1 + *(int *)(v2 + 44);
  sub_1C07ACF80(&qword_1ED747DF0);
  sub_1C078AB18(v4, 1);
  v5 = sub_1C07ACF80(&qword_1EF640C18);
  sub_1C078AB18(v4 + *(int *)(v5 + 28), 1);
  *v1 = v3;
  *((_BYTE *)v1 + *(int *)(v2 + 48)) = 1;
  v0[23] = MEMORY[0x1E0DEE9D8];
  v10 = (uint64_t (*)(uint64_t))((char *)&dword_1EF640C20 + dword_1EF640C20);
  v6 = v3;
  v7 = (_QWORD *)sub_1C0775870();
  v0[24] = v7;
  v8 = sub_1C0B94EB0(v7);
  return v10(v8);
}

uint64_t sub_1C0B905B8()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_1C077B0C8();
  *v2 = *v1;
  *(_QWORD *)(v3 + 200) = v0;
  swift_task_dealloc();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0B90608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  _QWORD *v20;
  char v21;
  void *v22;
  uint64_t v23;
  _QWORD *v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t (*v35)(void);
  double v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(void);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;

  sub_1C0782D8C();
  sub_1C078D788();
  if (v21)
  {
    v69 = v20[25];
    v22 = (void *)v20[18];
    v23 = v20[14];
    v24 = (_QWORD *)v20[15];
    v68 = v20[13];
    sub_1C0784B6C(v20[22], &qword_1EF640C10);
    v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
    v26 = (void *)sub_1C07A80C0();
    sub_1C0790940((uint64_t)v26, sel_setDateFormat_);

    v27 = objc_msgSend((id)objc_opt_self(), sel_localTimeZone);
    sub_1C077F83C();

    sub_1C106B038();
    v28 = sub_1C079CE34();
    sub_1C0790940(v28, sel_setTimeZone_);

    sub_1C07B7FF8();
    sub_1C077B5BC();
    sub_1C078049C();
    sub_1C07ABD4C();
    sub_1C07BC2E0();
    *v24 = v25;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v23 + 104))(v24, *MEMORY[0x1E0CAE158], v68);
    v29 = v25;
    v30 = sub_1C0B94AC4();
    v31 = (void *)MEMORY[0x1C3BA79F4](v30);
    sub_1C07AF2AC();
    sub_1C07797E4();
    sub_1C078BE24(&qword_1EF640C30, v32, &qword_1EF640C38);
    v33 = sub_1C0B94C14();
    if (v69)
    {
      sub_1C077B5B4();
      objc_autoreleasePoolPop(v31);

      sub_1C07785A8();
      sub_1C077B5B4();
      sub_1C0B94C00();
      sub_1C07767BC();
      sub_1C07796F8();
      sub_1C0779D18();
      sub_1C077C104();
      sub_1C07767D4();
      sub_1C0778638();
      sub_1C0786388();
      sub_1C0779D20();
      v35 = (uint64_t (*)(void))sub_1C07759D4();
      return sub_1C07962A0(v35);
    }
    else
    {
      v61 = v33;
      v62 = v34;
      sub_1C077B5B4();
      objc_autoreleasePoolPop(v31);
      sub_1C0B94E7C();
      sub_1C106FB2C();

      sub_1C07785A8();
      sub_1C07B3374(v61, v62);
      sub_1C077B5B4();
      sub_1C07796F8();
      sub_1C0786390();
      sub_1C077C830();
      sub_1C077C27C();
      sub_1C077C828();
      sub_1C0778638();
      sub_1C0778744();
      sub_1C07819BC();
      sub_1C0780AA8();
      v63 = sub_1C0779990();
      return sub_1C07B8B2C(v63, v64, v65);
    }
  }
  else
  {
    sub_1C078938C();
    sub_1C07A3258();
    sub_1C07B7304();
    sub_1C07AC174();
    sub_1C079DCF0(v37);
    v39 = sub_1C07A5E94(v38);
    sub_1C07A48A8(v39);
    sub_1C0795AF4();
    sub_1C0B94D58();
    v41 = *(_QWORD *)(v40 + 8);
    v42 = *(_QWORD *)(v40 + 16);
    *(_BYTE *)v43 = v44;
    *(_QWORD *)(v43 + 8) = v41;
    *(_QWORD *)(v43 + 16) = v42;
    v45 = sub_1C0782BC4();
    v46 = v20[23];
    if ((v45 & 1) == 0)
    {
      sub_1C079F440();
      sub_1C07ECD30();
      v46 = v66;
    }
    sub_1C0789FF4();
    if (v48)
    {
      sub_1C079C690(v47);
      sub_1C07ECD30();
      v46 = v67;
    }
    sub_1C079AC84();
    sub_1C078A67C(v49, v50, &qword_1EF630120);
    sub_1C077C2D0(v51, &qword_1EF640C00);
    v20[23] = v46;
    v70 = (char *)&dword_1EF640C20 + dword_1EF640C20;
    v52 = (_QWORD *)swift_task_alloc();
    v20[24] = v52;
    sub_1C0B94EB0(v52);
    sub_1C0789AE4();
    return v54(v53, v54, v55, v56, v57, v58, v59, v60, a9, a10, a11, a12, a13, a14, a15, v70, a17, a18, a19, a20);
  }
}

uint64_t sub_1C0B90968()
{
  uint64_t v0;

  sub_1C07AB3A4(*(_QWORD *)(v0 + 200));
  *(_QWORD *)(v0 + 208) = sub_1C07ACF80(&qword_1ED7614F0);
  sub_1C0B94CB4();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0B909B8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_1C077B704();
  *(_QWORD *)(v0 + 24) = *(_QWORD *)(v0 + 200);
  if (sub_1C1070C60())
  {

  }
  else
  {
    v1 = sub_1C0775810();
    sub_1C078BB90(v1, v2);
  }
  sub_1C0784B6C(*(_QWORD *)(v0 + 176), &qword_1EF640C10);
  sub_1C07767AC();
  sub_1C0B94C00();
  sub_1C07796F8();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C07767D4();
  sub_1C0778638();
  sub_1C0786388();
  sub_1C0779D20();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C0B90A7C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[3] = a1;
  v2 = sub_1C07ACF80((uint64_t *)&unk_1EF637A30);
  v1[4] = v2;
  v1[5] = *(_QWORD *)(v2 - 8);
  v1[6] = swift_task_alloc();
  v1[7] = sub_1C07ACF80(&qword_1EF640C48);
  v1[8] = swift_task_alloc();
  v1[9] = swift_task_alloc();
  sub_1C106FB50();
  v1[10] = swift_task_alloc();
  v3 = sub_1C106A744();
  v1[11] = v3;
  v1[12] = *(_QWORD *)(v3 - 8);
  v1[13] = swift_task_alloc();
  sub_1C106A72C();
  v1[14] = swift_task_alloc();
  v4 = sub_1C106B050();
  v1[15] = v4;
  v1[16] = *(_QWORD *)(v4 - 8);
  v1[17] = swift_task_alloc();
  sub_1C07ACF80(&qword_1EF640C50);
  v1[18] = swift_task_alloc();
  sub_1C07ACF80(&qword_1EF640A08);
  v1[19] = swift_task_alloc();
  sub_1C07ACF80(&qword_1EF640C58);
  v1[20] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C0B90C14()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v1 = v0[19];
  v2 = v0[20];
  sub_1C08A6394(v0[3], v1);
  sub_1C07E05C8(v1, v2, type metadata accessor for TransactionsAsyncSequence);
  sub_1C0775A74(v1);
  v0[21] = MEMORY[0x1E0DEE9D8];
  v3 = (_QWORD *)swift_task_alloc();
  v0[22] = (uint64_t)v3;
  v4 = sub_1C07BA048(v3);
  return sub_1C0C84C94(v4);
}

uint64_t sub_1C0B90CA0()
{
  sub_1C077B0C8();
  sub_1C07862EC();
  sub_1C077862C();
  return sub_1C077AEC4();
}

#error "1C0B90DC4: call analysis failed (funcsize=185)"

uint64_t sub_1C0B90FE8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1[5] = a1;
  v2 = sub_1C07ACF80(&qword_1EF630138);
  v1[6] = v2;
  v1[7] = *(_QWORD *)(v2 - 8);
  v1[8] = swift_task_alloc();
  v1[9] = sub_1C07ACF80((uint64_t *)&unk_1ED74AF80);
  v1[10] = swift_task_alloc();
  v1[11] = swift_task_alloc();
  sub_1C106FB50();
  v1[12] = swift_task_alloc();
  v3 = sub_1C106A744();
  v1[13] = v3;
  v1[14] = *(_QWORD *)(v3 - 8);
  v1[15] = swift_task_alloc();
  sub_1C106A72C();
  v1[16] = swift_task_alloc();
  v4 = sub_1C106B050();
  v1[17] = v4;
  v1[18] = *(_QWORD *)(v4 - 8);
  v1[19] = swift_task_alloc();
  sub_1C07ACF80(&qword_1EF640C78);
  v1[20] = swift_task_alloc();
  v5 = sub_1C07ACF80(&qword_1ED74D518);
  v1[21] = v5;
  v1[22] = *(_QWORD *)(v5 - 8);
  v1[23] = swift_task_alloc();
  sub_1C07ACF80(&qword_1ED74CC48);
  v1[24] = swift_task_alloc();
  sub_1C07ACF80(&qword_1EF640C80);
  v1[25] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C0B911AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = sub_1C07AB494();
  sub_1C0B94E40(v2);
  sub_1C0B94CC8();
  sub_1C07BB218(&qword_1EF640C88, &qword_1ED74D518);
  sub_1C0B94C30();
  sub_1C077E740(v0);
  *(_QWORD *)(v1 + 208) = MEMORY[0x1E0DEE9D8];
  sub_1C077C854();
  sub_1C07A1E5C(&qword_1EF640C98);
  v3 = swift_task_alloc();
  v4 = (_QWORD *)sub_1C0B94EC4(v3);
  sub_1C078E0D8(v4);
  return sub_1C0B94B2C();
}

uint64_t sub_1C0B91260()
{
  sub_1C0B94B68();
  sub_1C077862C();
  return sub_1C077AEC4();
}

#error "1C0B91378: call analysis failed (funcsize=169)"

uint64_t sub_1C0B91578()
{
  uint64_t v0;

  sub_1C07AB3A4(*(_QWORD *)(v0 + 224));
  *(_QWORD *)(v0 + 232) = sub_1C07ACF80(&qword_1ED7614F0);
  sub_1C0B94CB4();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0B915C8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v3;

  sub_1C0789E7C();
  sub_1C0B94E84();
  if (sub_1C1070C60())
  {
    sub_1C0B94E2C();
  }
  else
  {
    v3 = sub_1C0775810();
    sub_1C078BB90(v3, v1);
  }
  sub_1C0784B6C(*(_QWORD *)(v0 + 200), &qword_1EF640C80);
  sub_1C07767AC();
  sub_1C0782720();
  sub_1C07796F8();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C07767D4();
  sub_1C0778638();
  sub_1C0786388();
  sub_1C0779D20();
  sub_1C07767BC();
  sub_1C0786390();
  return sub_1C07759B8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0B91664(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[13] = a1;
  v2 = sub_1C07ACF80((uint64_t *)&unk_1EF637A40);
  v1[14] = v2;
  v1[15] = *(_QWORD *)(v2 - 8);
  v1[16] = swift_task_alloc();
  v1[17] = sub_1C07ACF80(&qword_1EF640CB8);
  v1[18] = swift_task_alloc();
  v1[19] = swift_task_alloc();
  sub_1C106FB50();
  v1[20] = swift_task_alloc();
  v3 = sub_1C106A744();
  v1[21] = v3;
  v1[22] = *(_QWORD *)(v3 - 8);
  v1[23] = swift_task_alloc();
  sub_1C106A72C();
  v1[24] = swift_task_alloc();
  v4 = sub_1C106B050();
  v1[25] = v4;
  v1[26] = *(_QWORD *)(v4 - 8);
  v1[27] = swift_task_alloc();
  sub_1C07ACF80(&qword_1EF640CC0);
  v1[28] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C0B917B4()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;

  sub_1C08A6394(v0[13], (uint64_t)(v0 + 7));
  sub_1C0CB4B34((uint64_t)(v0 + 2));
  sub_1C0775A74((uint64_t)(v0 + 7));
  v0[29] = MEMORY[0x1E0DEE9D8];
  v1 = swift_task_alloc();
  v2 = (_QWORD *)sub_1C07BA968(v1);
  *v2 = v0;
  v2[1] = sub_1C0B91840;
  return sub_1C0CB4C58(v0[28]);
}

uint64_t sub_1C0B91840()
{
  sub_1C07862EC();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0B9187C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;

  v1 = v0[17];
  v2 = sub_1C07B2D80(v0[28], 1, v1);
  v3 = v0[29];
  if ((_DWORD)v2 == 1)
  {
    v5 = v0[26];
    v4 = v0[27];
    v6 = v0[25];
    v7 = v0[22];
    v8 = (_QWORD *)v0[23];
    v53 = v0[21];
    sub_1C077C2D0(v2, &qword_1EF640CC8);
    v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
    v10 = (void *)sub_1C07A80C0();
    sub_1C0B94EA4((uint64_t)v10, sel_setDateFormat_);

    v11 = objc_msgSend((id)objc_opt_self(), sel_localTimeZone);
    sub_1C077F83C();

    v12 = (void *)sub_1C106B038();
    v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    sub_1C0B94EA4(v13, sel_setTimeZone_);

    sub_1C07B7FF8();
    sub_1C077B5BC();
    sub_1C078049C();
    sub_1C07ABD4C();
    sub_1C07BC2E0();
    *v8 = v9;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v8, *MEMORY[0x1E0CAE158], v53);
    v52 = v9;
    v14 = sub_1C106A750();
    v15 = (void *)MEMORY[0x1C3BA79F4](v14);
    v0[12] = v3;
    sub_1C07767B4();
    sub_1C07797E4();
    sub_1C078BE24(&qword_1EF640CD8, v16, qword_1EF640CE0);
    v17 = sub_1C106A75C();
    v19 = v18;
    v51 = v0[24];
    sub_1C0775844();
    objc_autoreleasePoolPop(v15);
    sub_1C078D7A8();
    v40 = sub_1C0B94BDC();
    sub_1C0788C28(v40, v41, v42, v43, v44, v45, v46, v47, v51, v52);
    sub_1C07785A8();
    sub_1C0B94BEC();
    sub_1C07B3374(v17, v19);
    sub_1C0775844();
    sub_1C07796F8();
    sub_1C0779D20();
    sub_1C0779908();
    sub_1C077C830();
    sub_1C077C104();
    sub_1C077C27C();
    sub_1C077C828();
    sub_1C0778744();
    sub_1C0B8B6B0();
    __asm { BR              X2 }
  }
  v21 = v0[18];
  v20 = v0[19];
  v22 = (char *)v0[16];
  v23 = (int *)v0[14];
  sub_1C0B94D70();
  sub_1C0B94C6C(v20, v21);
  sub_1C106AC60();
  *(_QWORD *)v22 = v24;
  v25 = v21 + *(int *)(v1 + 28);
  sub_1C106AC60();
  *((_QWORD *)v22 + 1) = v26;
  v27 = &v22[v23[12]];
  v28 = sub_1C077AE98();
  v29 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 32);
  v29(v27, v21, v28);
  v29(&v22[v23[13]], v25, v28);
  sub_1C07E05F4(v21 + *(int *)(v1 + 32), (uint64_t)&v22[v23[14]], (uint64_t (*)(_QWORD))type metadata accessor for PhotosSceneTagsContent);
  v30 = sub_1C0778698();
  v31 = v0[29];
  if ((v30 & 1) == 0)
  {
    sub_1C0B94ED0();
    v31 = v49;
  }
  v32 = *(_QWORD *)(v31 + 16);
  if (v32 >= *(_QWORD *)(v31 + 24) >> 1)
  {
    sub_1C0B94ED0();
    v31 = v50;
  }
  v33 = v0[19];
  v35 = v0[15];
  v34 = v0[16];
  *(_QWORD *)(v31 + 16) = v32 + 1;
  sub_1C078A67C(v34, v31+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(_QWORD *)(v35 + 72) * v32, (uint64_t *)&unk_1EF637A40);
  sub_1C0784B6C(v33, &qword_1EF640CB8);
  v0[29] = v31;
  v36 = swift_task_alloc();
  v37 = (_QWORD *)sub_1C07BA968(v36);
  *v37 = v0;
  v37[1] = sub_1C0B91840;
  sub_1C0B8B6B0();
  return sub_1C0CB4C58(v38);
}

uint64_t InternalXPC.Server.contextData(forSource:start:end:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v5[116] = v4;
  v5[115] = a4;
  v5[114] = a3;
  v5[113] = a2;
  v5[112] = a1;
  sub_1C07ACF80(&qword_1ED74CC48);
  v5[117] = sub_1C0779D74();
  sub_1C07ACF80(&qword_1EF640A08);
  v5[118] = sub_1C0779D74();
  sub_1C07ACF80(&qword_1ED74C9F8);
  v5[119] = sub_1C0779D74();
  sub_1C07ACF80(&qword_1ED74D140);
  v5[120] = sub_1C0779D74();
  sub_1C07ACF80(&qword_1ED754F78);
  v5[121] = sub_1C0779D74();
  v5[122] = type metadata accessor for Configuration();
  v5[123] = sub_1C0779D74();
  v5[124] = sub_1C07ACF80(&qword_1ED75E630);
  v5[125] = sub_1C077CF7C();
  v5[126] = sub_1C0775870();
  v5[127] = sub_1C0775870();
  sub_1C07ACF80(&qword_1ED74CCA8);
  v5[128] = sub_1C0779D74();
  v6 = sub_1C077AE98();
  v5[129] = v6;
  v5[130] = *(_QWORD *)(v6 - 8);
  v5[131] = sub_1C077CF7C();
  v5[132] = sub_1C0775870();
  type metadata accessor for LOISessionDataAsyncSequence(0);
  v5[133] = sub_1C0779D74();
  v5[134] = sub_1C07ACF80(&qword_1ED759DF0);
  v5[135] = sub_1C077CF7C();
  v5[136] = sub_1C0775870();
  v5[137] = sub_1C07ACF80(&qword_1ED75D0B8);
  v5[138] = sub_1C077CF7C();
  v5[139] = sub_1C0775870();
  v5[140] = sub_1C0775870();
  sub_1C077862C();
  return sub_1C077AEC4();
}

void sub_1C0B91E0C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = (void *)v0[113];
  v2 = v0[112];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v3._countAndFlagsBits = v2;
  v3._object = v1;
  ContextDataSources.init(rawValue:)(v3);
  sub_1C0B94990(&qword_1ED755A40);
  sub_1C0B94DB0();
  if ((sub_1C106FA84() & 1) != 0)
  {
    v15 = v0[139];
    v16 = v0[137];
    v17 = v0[140];
    v4 = v0[136];
    v5 = v0[135];
    v6 = v0[134];
    v7 = v0[130];
    v8 = v0[129];
    v9 = v0[115];
    v10 = v4 + *(int *)(v6 + 48);
    sub_1C0B94BE4(v4, v0[114]);
    sub_1C0B94BE4(v10, v9);
    v11 = v5 + *(int *)(v6 + 48);
    sub_1C0B94BE4(v5, v4);
    sub_1C0B94BE4(v11, v10);
    sub_1C077EB7C(v15, v5);
    v12 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v12(v11, v8);
    v13 = v5 + *(int *)(v6 + 48);
    sub_1C077EB7C(v5, v4);
    sub_1C077EB7C(v13, v10);
    sub_1C077EB7C(v15 + *(int *)(v16 + 36), v13);
    v14 = sub_1C077FE70();
    ((void (*)(uint64_t))v12)(v14);
    sub_1C078A67C(v15, v17, &qword_1ED75D0B8);
    __asm { BR              X9 }
  }
  __break(1u);
  JUMPOUT(0x1C0B928B0);
}

uint64_t sub_1C0B92938()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  sub_1C079B794();
  sub_1C0780AE0(v4);
  v3[142] = v1;
  swift_task_dealloc();
  if (!v1)
  {
    v3[143] = v0;
    v3[144] = v2;
  }
  sub_1C077862C();
  return sub_1C07ADEC0();
}

#error "1C0B92A18: call analysis failed (funcsize=35)"

uint64_t sub_1C0B92A24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  sub_1C079B794();
  sub_1C0780AE0(v4);
  v3[147] = v1;
  swift_task_dealloc();
  if (!v1)
  {
    v3[148] = v0;
    v3[149] = v2;
  }
  sub_1C077862C();
  return sub_1C07ADEC0();
}

#error "1C0B92B00: call analysis failed (funcsize=34)"

uint64_t sub_1C0B92B0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  sub_1C079B794();
  sub_1C0780AE0(v4);
  v3[154] = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_bridgeObjectRelease();
    v3[155] = v0;
    v3[156] = v2;
  }
  sub_1C077862C();
  return sub_1C07ADEC0();
}

#error "1C0B92BEC: call analysis failed (funcsize=34)"

uint64_t sub_1C0B92BF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  sub_1C079B794();
  sub_1C0780AE0(v4);
  v3[158] = v1;
  swift_task_dealloc();
  if (!v1)
  {
    v3[159] = v0;
    v3[160] = v2;
  }
  sub_1C077862C();
  return sub_1C07ADEC0();
}

#error "1C0B92CCC: call analysis failed (funcsize=33)"

uint64_t sub_1C0B92CD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  sub_1C079B794();
  sub_1C0780AE0(v4);
  v3[162] = v1;
  swift_task_dealloc();
  if (!v1)
  {
    v3[163] = v0;
    v3[164] = v2;
  }
  sub_1C077862C();
  return sub_1C07ADEC0();
}

#error "1C0B92DAC: call analysis failed (funcsize=33)"

uint64_t sub_1C0B92DB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  sub_1C079B794();
  sub_1C0780AE0(v4);
  v3[166] = v1;
  swift_task_dealloc();
  if (!v1)
  {
    v3[167] = v0;
    v3[168] = v2;
  }
  sub_1C077862C();
  return sub_1C07ADEC0();
}

#error "1C0B92E98: call analysis failed (funcsize=35)"

uint64_t sub_1C0B92EA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  sub_1C079B794();
  sub_1C0780AE0(v4);
  v3[170] = v1;
  swift_task_dealloc();
  if (!v1)
  {
    v3[171] = v0;
    v3[172] = v2;
  }
  sub_1C077862C();
  return sub_1C07ADEC0();
}

#error "1C0B92F84: call analysis failed (funcsize=35)"

uint64_t sub_1C0B92F90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  sub_1C079B794();
  sub_1C0780AE0(v4);
  v3[175] = v1;
  swift_task_dealloc();
  if (!v1)
  {
    v3[176] = v0;
    v3[177] = v2;
  }
  sub_1C077862C();
  return sub_1C07ADEC0();
}

#error "1C0B93068: call analysis failed (funcsize=34)"

uint64_t sub_1C0B93074()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  sub_1C079B794();
  sub_1C0780AE0(v4);
  v3[180] = v1;
  swift_task_dealloc();
  if (!v1)
  {
    v3[181] = v0;
    v3[182] = v2;
  }
  sub_1C077862C();
  return sub_1C07ADEC0();
}

#error "1C0B93150: call analysis failed (funcsize=34)"

uint64_t sub_1C0B9315C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  sub_1C079B794();
  sub_1C0780AE0(v4);
  v3[185] = v1;
  swift_task_dealloc();
  if (!v1)
  {
    v3[186] = v0;
    v3[187] = v2;
  }
  sub_1C077862C();
  return sub_1C07ADEC0();
}

#error "1C0B93238: call analysis failed (funcsize=34)"

uint64_t sub_1C0B93244()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  sub_1C079B794();
  sub_1C0780AE0(v4);
  v3[191] = v1;
  swift_task_dealloc();
  if (!v1)
  {
    v3[192] = v0;
    v3[193] = v2;
  }
  sub_1C077862C();
  return sub_1C07ADEC0();
}

#error "1C0B93320: call analysis failed (funcsize=34)"

uint64_t sub_1C0B9332C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  sub_1C0782D8C();
  sub_1C07B1F90(*(_QWORD *)(v0 + 1064), type metadata accessor for LOISessionDataAsyncSequence);
  sub_1C077C790(v1, &qword_1ED75D0B8);
  sub_1C07A6E6C();
  sub_1C07767D4();
  sub_1C0778638();
  sub_1C0786388();
  sub_1C0779D20();
  sub_1C07796F8();
  sub_1C07767BC();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C0779908();
  sub_1C0786390();
  sub_1C077C830();
  sub_1C077C27C();
  sub_1C077C828();
  sub_1C0778744();
  sub_1C07819BC();
  sub_1C0780AA8();
  v2 = (uint64_t (*)(void))sub_1C078DBF4();
  return sub_1C07962A0(v2);
}

uint64_t sub_1C0B933BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  sub_1C0782D8C();
  v0 = sub_1C0B94D48();
  sub_1C077C7AC(v0, &qword_1ED74CCA8);
  sub_1C077C790(v1, &qword_1ED75D0B8);
  sub_1C07A6E6C();
  sub_1C07767D4();
  sub_1C0778638();
  sub_1C0786388();
  sub_1C0779D20();
  sub_1C07796F8();
  sub_1C07767BC();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C0779908();
  sub_1C0786390();
  sub_1C077C830();
  sub_1C077C27C();
  sub_1C077C828();
  sub_1C0778744();
  sub_1C07819BC();
  sub_1C0780AA8();
  v2 = (uint64_t (*)(void))sub_1C078DBF4();
  return sub_1C07962A0(v2);
}

uint64_t sub_1C0B93448()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  sub_1C0782D8C();
  v0 = swift_release();
  sub_1C077C7AC(v0, &qword_1ED75D0B8);
  swift_bridgeObjectRelease();
  sub_1C07A6E6C();
  sub_1C07767D4();
  sub_1C0778638();
  sub_1C0786388();
  sub_1C0779D20();
  sub_1C07796F8();
  sub_1C07767BC();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C0779908();
  sub_1C0786390();
  sub_1C077C830();
  sub_1C077C27C();
  sub_1C077C828();
  sub_1C0778744();
  sub_1C07819BC();
  sub_1C0780AA8();
  v1 = (uint64_t (*)(void))sub_1C078DBF4();
  return sub_1C07962A0(v1);
}

uint64_t sub_1C0B934DC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);

  sub_1C0782D8C();
  v1 = sub_1C0B94D40((_QWORD *)(v0 + 200));
  sub_1C077C790((uint64_t)v1, &qword_1ED75D0B8);
  sub_1C07A6E6C();
  sub_1C07767D4();
  sub_1C0778638();
  sub_1C0786388();
  sub_1C0779D20();
  sub_1C07796F8();
  sub_1C07767BC();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C0779908();
  sub_1C0786390();
  sub_1C077C830();
  sub_1C077C27C();
  sub_1C077C828();
  sub_1C0778744();
  sub_1C07819BC();
  sub_1C0780AA8();
  v2 = (uint64_t (*)(void))sub_1C078DBF4();
  return sub_1C07962A0(v2);
}

uint64_t sub_1C0B93560()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);

  sub_1C0782D8C();
  v1 = sub_1C0B94D40((_QWORD *)(v0 + 16));
  sub_1C077C790((uint64_t)v1, &qword_1ED75D0B8);
  sub_1C07A6E6C();
  sub_1C07767D4();
  sub_1C0778638();
  sub_1C0786388();
  sub_1C0779D20();
  sub_1C07796F8();
  sub_1C07767BC();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C0779908();
  sub_1C0786390();
  sub_1C077C830();
  sub_1C077C27C();
  sub_1C077C828();
  sub_1C0778744();
  sub_1C07819BC();
  sub_1C0780AA8();
  v2 = (uint64_t (*)(void))sub_1C078DBF4();
  return sub_1C07962A0(v2);
}

uint64_t sub_1C0B935E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  sub_1C0782D8C();
  sub_1C0784B6C(*(_QWORD *)(v0 + 968), &qword_1ED754F78);
  sub_1C077C790(v1, &qword_1ED75D0B8);
  sub_1C07A6E6C();
  sub_1C07767D4();
  sub_1C0778638();
  sub_1C0786388();
  sub_1C0779D20();
  sub_1C07796F8();
  sub_1C07767BC();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C0779908();
  sub_1C0786390();
  sub_1C077C830();
  sub_1C077C27C();
  sub_1C077C828();
  sub_1C0778744();
  sub_1C07819BC();
  sub_1C0780AA8();
  v2 = (uint64_t (*)(void))sub_1C078DBF4();
  return sub_1C07962A0(v2);
}

uint64_t sub_1C0B93674()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  sub_1C0782D8C();
  sub_1C0784B6C(*(_QWORD *)(v0 + 960), &qword_1ED74D140);
  sub_1C077C790(v1, &qword_1ED75D0B8);
  sub_1C07A6E6C();
  sub_1C07767D4();
  sub_1C0778638();
  sub_1C0786388();
  sub_1C0779D20();
  sub_1C07796F8();
  sub_1C07767BC();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C0779908();
  sub_1C0786390();
  sub_1C077C830();
  sub_1C077C27C();
  sub_1C077C828();
  sub_1C0778744();
  sub_1C07819BC();
  sub_1C0780AA8();
  v2 = (uint64_t (*)(void))sub_1C078DBF4();
  return sub_1C07962A0(v2);
}

uint64_t sub_1C0B93704()
{
  uint64_t v0;
  void *v1;
  uint64_t (*v2)(void);

  sub_1C0782D8C();
  v1 = *(void **)(v0 + 1384);
  sub_1C0784B6C(*(_QWORD *)(v0 + 1120), &qword_1ED75D0B8);

  sub_1C07A6E6C();
  sub_1C07767D4();
  sub_1C0778638();
  sub_1C0786388();
  sub_1C0779D20();
  sub_1C07796F8();
  sub_1C07767BC();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C0779908();
  sub_1C0786390();
  sub_1C077C830();
  sub_1C077C27C();
  sub_1C077C828();
  sub_1C0778744();
  sub_1C07819BC();
  sub_1C0780AA8();
  v2 = (uint64_t (*)(void))sub_1C078DBF4();
  return sub_1C07962A0(v2);
}

uint64_t sub_1C0B9378C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  sub_1C0782D8C();
  v0 = sub_1C078BA3C();
  sub_1C077C7AC(v0, &qword_1EF640A08);
  sub_1C077C790(v1, &qword_1ED75D0B8);
  sub_1C07A6E6C();
  sub_1C07767D4();
  sub_1C0778638();
  sub_1C0786388();
  sub_1C0779D20();
  sub_1C07796F8();
  sub_1C07767BC();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C0779908();
  sub_1C0786390();
  sub_1C077C830();
  sub_1C077C27C();
  sub_1C077C828();
  sub_1C0778744();
  sub_1C07819BC();
  sub_1C0780AA8();
  v2 = (uint64_t (*)(void))sub_1C078DBF4();
  return sub_1C07962A0(v2);
}

uint64_t sub_1C0B93818()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  sub_1C0782D8C();
  v0 = sub_1C07AF86C();
  sub_1C077C7AC(v0, &qword_1ED74CC48);
  sub_1C077C790(v1, &qword_1ED75D0B8);
  sub_1C07A6E6C();
  sub_1C07767D4();
  sub_1C0778638();
  sub_1C0786388();
  sub_1C0779D20();
  sub_1C07796F8();
  sub_1C07767BC();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C0779908();
  sub_1C0786390();
  sub_1C077C830();
  sub_1C077C27C();
  sub_1C077C828();
  sub_1C0778744();
  sub_1C07819BC();
  sub_1C0780AA8();
  v2 = (uint64_t (*)(void))sub_1C078DBF4();
  return sub_1C07962A0(v2);
}

uint64_t sub_1C0B938A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  sub_1C0782D8C();
  v0 = sub_1C078C094();
  sub_1C077C790(v0, &qword_1EF640A18);
  sub_1C077C7AC(v1, &qword_1ED75D0B8);
  sub_1C07A6E6C();
  sub_1C07767D4();
  sub_1C0778638();
  sub_1C0786388();
  sub_1C0779D20();
  sub_1C07796F8();
  sub_1C07767BC();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C0779908();
  sub_1C0786390();
  sub_1C077C830();
  sub_1C077C27C();
  sub_1C077C828();
  sub_1C0778744();
  sub_1C07819BC();
  sub_1C0780AA8();
  v2 = (uint64_t (*)(void))sub_1C078DBF4();
  return sub_1C07962A0(v2);
}

uint64_t sub_1C0B939B4(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4, void *a5)
{
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5[2] = a5;
  v8 = sub_1C106ADE0();
  v5[3] = v8;
  v5[4] = *(_QWORD *)(v8 - 8);
  v9 = swift_task_alloc();
  v5[5] = v9;
  v10 = swift_task_alloc();
  v5[6] = v10;
  v5[7] = _Block_copy(a4);
  v11 = sub_1C106FB14();
  v13 = v12;
  v5[8] = v12;
  sub_1C106AD98();
  sub_1C106AD98();
  a5;
  v14 = (_QWORD *)swift_task_alloc();
  v5[9] = v14;
  *v14 = v5;
  v14[1] = sub_1C0B93ABC;
  return InternalXPC.Server.contextData(forSource:start:end:)(v11, v13, v10, v9);
}

uint64_t sub_1C0B93ABC()
{
  void *v0;
  uint64_t v1;
  void *v2;
  _QWORD *v3;
  void *v4;
  void (*v5)(_QWORD);
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  const void *v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  _QWORD *v14;

  v2 = v0;
  v3 = *(_QWORD **)v1;
  v14 = v3;
  v4 = (void *)v3[2];
  sub_1C0780AE0(&v14);
  swift_task_dealloc();
  sub_1C077B5B4();

  v5 = *(void (**)(_QWORD))(v3[4] + 8);
  ((void (*)(_QWORD, _QWORD))v5)(v3[5], v3[3]);
  v6 = sub_1C077FE70();
  v5(v6);
  if (v0)
  {
    v7 = sub_1C106AA08();

    v8 = (void *)v7;
  }
  else
  {
    v9 = sub_1C106FAF0();
    swift_bridgeObjectRelease();
    v8 = (void *)v9;
  }
  v10 = (const void *)v3[7];
  v11 = sub_1C0B94DB0();
  v12(v11);

  _Block_release(v10);
  sub_1C0779D18();
  sub_1C077C104();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1C0B93BB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8;
  id v9;
  id v10;
  uint64_t result;
  _QWORD v12[5];
  _QWORD v13[5];

  v13[3] = sub_1C07D4B70(0, &qword_1ED74D328);
  v13[4] = &off_1E7A27C58;
  v13[0] = a1;
  v12[3] = sub_1C07D4B70(0, &qword_1ED74D388);
  v12[4] = &off_1E7A27CD0;
  v12[0] = a2;
  sub_1C0784AC0((uint64_t)v13, a4 + 16);
  sub_1C0784AC0((uint64_t)v12, a4 + 56);
  v8 = objc_allocWithZone(MEMORY[0x1E0D66DB8]);
  v9 = objc_msgSend(v8, sel_init, v12[0]);
  if (v9)
  {
    v10 = v9;
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v12);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v13);
    *(_QWORD *)(a4 + 96) = v10;
    *(_QWORD *)(a4 + 104) = a3;
    return a4;
  }
  else
  {
    result = swift_release();
    __break(1u);
  }
  return result;
}

unint64_t sub_1C0B93C9C()
{
  unint64_t result;

  result = qword_1EF640A68;
  if (!qword_1EF640A68)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for ContextDataSources, &type metadata for ContextDataSources);
    atomic_store(result, (unint64_t *)&qword_1EF640A68);
  }
  return result;
}

void sub_1C0B93CD8()
{
  sub_1C07BB218(&qword_1EF640A70, &qword_1EF640A78);
}

uint64_t storeEnumTagSinglePayload for ContextDataSources(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1C0B93D50 + 4 * byte_1C10A4B96[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1C0B93D84 + 4 * byte_1C10A4B91[v4]))();
}

uint64_t sub_1C0B93D84(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0B93D8C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0B93D94);
  return result;
}

uint64_t sub_1C0B93DA0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0B93DA8);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1C0B93DAC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0B93DB4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContextDataSources()
{
  return &type metadata for ContextDataSources;
}

uint64_t sub_1C0B93DD0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 40));
  return swift_deallocObject();
}

uint64_t sub_1C0B93E14()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  void *v6;
  _QWORD *v7;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = (const void *)v0[5];
  v6 = (void *)v0[6];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v7;
  *v7 = v1;
  v7[1] = sub_1C0B93E94;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, const void *, void *))((char *)&dword_1EF640A80
                                                                                  + dword_1EF640A80))(v2, v3, v4, v5, v6);
}

uint64_t sub_1C0B93E94()
{
  uint64_t v0;

  sub_1C077B0C8();
  sub_1C07862EC();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C0B93EC8(unint64_t *a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v6 = sub_1C07D4BEC(a2);
    sub_1C07A1E5C(a3);
    v8 = v7;
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0DEAF10], v6, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0B93F3C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1C106ADE0();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1C0B93FD4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  unint64_t v30;

  v6 = sub_1C106ADE0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = v8;
  v10 = *(_QWORD *)(v7 + 64);
  v11 = v10 + v8;
  v12 = *(_QWORD *)(a3 + 16);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_DWORD *)(v13 + 80);
  v15 = v10 + v14;
  v16 = (v14 | v8) & 0x100000;
  if ((v14 | v9) > 7
    || v16 != 0
    || ((v15 + ((v11 + ((v9 + 16) & ~v9)) & ~v9)) & ~(unint64_t)v14) + *(_QWORD *)(v13 + 64) > 0x18)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19
                   + (((v14 | v9) & 0xF8 ^ 0x1F8) & ((v14 | v9) + 16)));
    swift_retain();
  }
  else
  {
    v20 = v6;
    v21 = ~v9;
    *a1 = *a2;
    v30 = ~(unint64_t)v14;
    v22 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    v23 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v22 = *v23;
    v24 = ((unint64_t)v22 + v9 + 8) & ~v9;
    v25 = ((unint64_t)v23 + v9 + 8) & ~v9;
    v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    v26(v24, v25, v6);
    v27 = (v11 + v24) & v21;
    v28 = (v11 + v25) & v21;
    v26(v27, v28, v20);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v13 + 16))((v15 + v27) & v30, (v15 + v28) & v30, v12);
  }
  return a1;
}

uint64_t sub_1C0B9414C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;

  v3 = (a1 + 15) & 0xFFFFFFFFFFFFFFF8;
  v4 = sub_1C106ADE0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v3 + v6 + 8) & ~v6;
  v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v8(v7, v4);
  v9 = *(_QWORD *)(v5 + 64);
  v10 = (v9 + v6 + v7) & ~v6;
  v8(v10, v4);
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((v10 + v9 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

_QWORD *sub_1C0B941E8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *a1 = *a2;
  v5 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v7 = sub_1C106ADE0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = ((unint64_t)v5 + v9 + 8) & ~v9;
  v11 = ((unint64_t)v6 + v9 + 8) & ~v9;
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  v12(v10, v11, v7);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = (v13 + v9 + v10) & ~v9;
  v15 = (v13 + v9 + v11) & ~v9;
  v12(v14, v15, v7);
  v16 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v16 + 16))((v13 + *(unsigned __int8 *)(v16 + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80), (v13 + *(unsigned __int8 *)(v16 + 80) + v15) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  return a1;
}

_QWORD *sub_1C0B942CC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *a1 = *a2;
  v5 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v7 = sub_1C106ADE0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = ((unint64_t)v5 + v9 + 8) & ~v9;
  v11 = ((unint64_t)v6 + v9 + 8) & ~v9;
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24);
  v12(v10, v11, v7);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = (v13 + v9 + v10) & ~v9;
  v15 = (v13 + v9 + v11) & ~v9;
  v12(v14, v15, v7);
  v16 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v16 + 24))((v13 + *(unsigned __int8 *)(v16 + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80), (v13 + *(unsigned __int8 *)(v16 + 80) + v15) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  return a1;
}

_QWORD *sub_1C0B943B0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *a1 = *a2;
  v5 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v7 = sub_1C106ADE0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = ((unint64_t)v5 + v9 + 8) & ~v9;
  v11 = ((unint64_t)v6 + v9 + 8) & ~v9;
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32);
  v12(v10, v11, v7);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = (v13 + v9 + v10) & ~v9;
  v15 = (v13 + v9 + v11) & ~v9;
  v12(v14, v15, v7);
  v16 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v16 + 32))((v13 + *(unsigned __int8 *)(v16 + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80), (v13 + *(unsigned __int8 *)(v16 + 80) + v15) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  return a1;
}

_QWORD *sub_1C0B94494(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *a1 = *a2;
  v5 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v7 = sub_1C106ADE0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = ((unint64_t)v5 + v9 + 8) & ~v9;
  v11 = ((unint64_t)v6 + v9 + 8) & ~v9;
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40);
  v12(v10, v11, v7);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = (v13 + v9 + v10) & ~v9;
  v15 = (v13 + v9 + v11) & ~v9;
  v12(v14, v15, v7);
  v16 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v16 + 40))((v13 + *(unsigned __int8 *)(v16 + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80), (v13 + *(unsigned __int8 *)(v16 + 80) + v15) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  return a1;
}

uint64_t sub_1C0B94578(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  int v21;
  unsigned int v22;
  int v23;
  int v24;
  unint64_t v25;

  v6 = sub_1C106ADE0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int *)(v10 + 84);
  if (v11 <= v8)
    v12 = *(_DWORD *)(v7 + 84);
  else
    v12 = *(_DWORD *)(v10 + 84);
  if (!a2)
    return 0;
  v13 = v6;
  v14 = *(unsigned __int8 *)(v7 + 80);
  v15 = *(_QWORD *)(v7 + 64);
  v16 = v15 + v14;
  v17 = *(unsigned __int8 *)(v10 + 80);
  v18 = v15 + v17;
  if (a2 <= v12)
    goto LABEL_23;
  v19 = ((v18 + ((v16 + ((v14 + 16) & ~v14)) & ~v14)) & ~v17) + *(_QWORD *)(v10 + 64);
  v20 = 8 * v19;
  if (v19 <= 3)
  {
    v22 = ((a2 - v12 + ~(-1 << v20)) >> v20) + 1;
    if (HIWORD(v22))
    {
      v21 = *(_DWORD *)(a1 + v19);
      if (!v21)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v22 > 0xFF)
    {
      v21 = *(unsigned __int16 *)(a1 + v19);
      if (!*(_WORD *)(a1 + v19))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v22 < 2)
    {
LABEL_23:
      if (v12)
      {
        v25 = (((a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v14 + 8) & ~v14;
        if (v8 >= v11)
        {
          v11 = v8;
          v9 = v13;
        }
        else
        {
          v25 = (v18 + ((v16 + v25) & ~v14)) & ~v17;
        }
        return sub_1C07B2D80(v25, v11, v9);
      }
      return 0;
    }
  }
  v21 = *(unsigned __int8 *)(a1 + v19);
  if (!*(_BYTE *)(a1 + v19))
    goto LABEL_23;
LABEL_14:
  v23 = (v21 - 1) << v20;
  if (v19 > 3)
    v23 = 0;
  if ((_DWORD)v19)
  {
    if (v19 <= 3)
      v24 = v19;
    else
      v24 = 4;
    __asm { BR              X12 }
  }
  return v12 + v23 + 1;
}

void sub_1C0B94738(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  size_t v12;
  char v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;

  v8 = *(_QWORD *)(sub_1C106ADE0() - 8);
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v9 + 84) <= *(_DWORD *)(v8 + 84))
    v10 = *(_DWORD *)(v8 + 84);
  else
    v10 = *(_DWORD *)(v9 + 84);
  v11 = *(unsigned __int8 *)(v8 + 80);
  v12 = ((*(_QWORD *)(v8 + 64)
        + *(unsigned __int8 *)(v9 + 80)
        + ((*(_QWORD *)(v8 + 64) + v11 + ((v11 + 16) & ~v11)) & ~v11)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
      + *(_QWORD *)(v9 + 64);
  v13 = 8 * v12;
  if (a3 <= v10)
  {
    v14 = 0u;
  }
  else if (v12 <= 3)
  {
    v16 = ((a3 - v10 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v16))
    {
      v14 = 4u;
    }
    else if (v16 >= 0x100)
    {
      v14 = 2;
    }
    else
    {
      v14 = v16 > 1;
    }
  }
  else
  {
    v14 = 1u;
  }
  if (v10 < a2)
  {
    v15 = ~v10 + a2;
    if (v12 < 4)
    {
      if ((_DWORD)v12)
      {
        v17 = v15 & ~(-1 << v13);
        bzero(a1, v12);
        if ((_DWORD)v12 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if ((_DWORD)v12 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v12);
      *(_DWORD *)a1 = v15;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X17 }
}

uint64_t type metadata accessor for SessionCodableDataComplyingWrapper(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0802884(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SessionCodableDataComplyingWrapper);
}

uint64_t type metadata accessor for SessionCodableDataComplyingWrapper.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0802884(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SessionCodableDataComplyingWrapper.CodingKeys);
}

void sub_1C0B94990(_QWORD *a1)
{
  if (!*a1)
  {
    sub_1C106ADE0();
    sub_1C077D8A0();
  }
  sub_1C0778534();
}

uint64_t sub_1C0B949C4(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1C0B94A10 + 4 * byte_1C10A4BAE[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1C0B94A44 + 4 * byte_1C10A4BA9[v4]))();
}

uint64_t sub_1C0B94A44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0B94A4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0B94A54);
  return result;
}

uint64_t sub_1C0B94A60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0B94A68);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1C0B94A6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0B94A74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1C0B94A80()
{
  JUMPOUT(0x1C3BA8174);
}

void sub_1C0B94A90()
{
  JUMPOUT(0x1C3BA8174);
}

void sub_1C0B94AA0()
{
  JUMPOUT(0x1C3BA8174);
}

uint64_t sub_1C0B94AB0()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C07B2D8C(v1, 1, 1, v0);
}

uint64_t sub_1C0B94AC4()
{
  return sub_1C106A750();
}

uint64_t sub_1C0B94AD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  result = sub_1C07B2D8C(v0, 0, 1, v2);
  *(_BYTE *)(v3 + v1) = 0;
  return result;
}

uint64_t sub_1C0B94AF4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 200);
}

uint64_t sub_1C0B94B1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return v1 + a1;
}

uint64_t sub_1C0B94B2C()
{
  return sub_1C1070078();
}

uint64_t sub_1C0B94B68()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 224) = v0;
  return swift_task_dealloc();
}

uint64_t sub_1C0B94B88()
{
  return sub_1C1070AE0();
}

uint64_t sub_1C0B94BC8()
{
  return sub_1C106A720();
}

void sub_1C0B94BD4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1C078A67C(a1, a2, v2);
}

uint64_t sub_1C0B94BDC()
{
  return sub_1C106FB2C();
}

uint64_t sub_1C0B94BE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_1C0B94C00()
{
  return swift_task_dealloc();
}

uint64_t sub_1C0B94C14()
{
  return sub_1C106A75C();
}

uint64_t sub_1C0B94C1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  return v4(v1 + *(int *)(v3 + 28), v2, v0);
}

uint64_t sub_1C0B94C30()
{
  return sub_1C1070150();
}

uint64_t sub_1C0B94C44()
{
  return swift_task_alloc();
}

uint64_t sub_1C0B94C58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v0, v2, v3);
}

void sub_1C0B94C6C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1C078A8F8(a1, a2, v2);
}

uint64_t sub_1C0B94C74()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C07B2D8C(v0, 0, 1, v1);
}

void sub_1C0B94CA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;

  sub_1C0B8CCBC(v4, v6, v5, a4);
}

uint64_t sub_1C0B94CB4()
{
  return swift_willThrowTypedImpl();
}

uint64_t sub_1C0B94CBC()
{
  return sub_1C1070BB8();
}

uint64_t sub_1C0B94CC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v0, v2);
}

uint64_t sub_1C0B94D30()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

_QWORD *sub_1C0B94D40(_QWORD *a1)
{
  return sub_1C0B5A0F8(a1);
}

uint64_t sub_1C0B94D48()
{
  return swift_release();
}

void sub_1C0B94D70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  sub_1C078A67C(v0, v1, v2);
}

uint64_t sub_1C0B94D80()
{
  return sub_1C106A738();
}

uint64_t sub_1C0B94D88()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 56);
}

void sub_1C0B94DA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  sub_1C078A8F8(v0, v1, v2);
}

uint64_t sub_1C0B94DB0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1C0B94DC0()
{
  return sub_1C106FB2C();
}

uint64_t sub_1C0B94DD0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 160);
}

uint64_t sub_1C0B94DE8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 160);
}

uint64_t sub_1C0B94E00(double a1)
{
  double *v1;

  *v1 = a1;
  return sub_1C106AC60();
}

id sub_1C0B94E10(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, (SEL)(v1 + 3528));
}

uint64_t sub_1C0B94E18()
{
  return swift_task_dealloc();
}

void sub_1C0B94E20(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_1C078A67C(v4, v3, a3);
}

void sub_1C0B94E2C()
{
  uint64_t v0;

}

uint64_t sub_1C0B94E38(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

void sub_1C0B94E40(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;

  sub_1C078A8F8(a1, v1, v2);
}

void sub_1C0B94E4C()
{
  void *v0;

}

uint64_t sub_1C0B94E58()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C07B2D80(v0, 1, v1);
}

uint64_t sub_1C0B94E7C()
{
  return sub_1C106FB44();
}

uint64_t sub_1C0B94E84()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 24) = *(_QWORD *)(v0 + 224);
  return v0 + 24;
}

void sub_1C0B94E98()
{
  uint64_t v0;
  uint64_t *v1;

  sub_1C0784B6C(v0, v1);
}

id sub_1C0B94EA4(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

uint64_t sub_1C0B94EB0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 160);
}

uint64_t sub_1C0B94EC4(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 216) = result;
  return result;
}

void sub_1C0B94ED0()
{
  sub_1C07ECCDC();
}

unint64_t InternalXPC.Server.ECRBenchmarkError.description.getter()
{
  sub_1C1070774();
  swift_bridgeObjectRelease();
  sub_1C077B200();
  sub_1C106FC94();
  return 0xD000000000000015;
}

uint64_t InternalXPC.Server.vectorSearchBenchmark(with:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2[23] = a1;
  v2[24] = a2;
  v3 = sub_1C106F4F0();
  v2[25] = v3;
  v2[26] = *(_QWORD *)(v3 - 8);
  v2[27] = sub_1C0779644();
  v4 = sub_1C106F4B4();
  v2[28] = v4;
  v2[29] = *(_QWORD *)(v4 - 8);
  v2[30] = sub_1C0775870();
  v2[31] = sub_1C0775870();
  v2[32] = sub_1C0775870();
  v5 = sub_1C106F4E4();
  v2[33] = v5;
  v2[34] = *(_QWORD *)(v5 - 8);
  v2[35] = sub_1C0779644();
  v6 = sub_1C106E758();
  v2[36] = v6;
  v2[37] = *(_QWORD *)(v6 - 8);
  v2[38] = sub_1C0779644();
  v7 = sub_1C106FB50();
  v2[39] = v7;
  v2[40] = *(_QWORD *)(v7 - 8);
  v2[41] = sub_1C0779644();
  v2[42] = type metadata accessor for VectorBenchmarkConfig();
  v2[43] = sub_1C0779644();
  v8 = sub_1C106AB28();
  v2[44] = v8;
  v2[45] = *(_QWORD *)(v8 - 8);
  v2[46] = sub_1C0775870();
  v2[47] = sub_1C0775870();
  v2[48] = sub_1C0775870();
  v2[49] = sub_1C0775870();
  return swift_task_switch();
}

uint64_t sub_1C0B950B8()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  void **v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void *v20;
  unsigned int v21;
  void *v22;
  unsigned int v23;
  void *v24;
  id v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  void *v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t result;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  unint64_t v58;
  NSObject *v59;
  os_signpost_type_t v60;
  uint8_t *v61;
  os_signpost_id_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  NSObject *v66;
  os_signpost_type_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  const char *v71;
  uint8_t *v72;
  os_signpost_id_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(uint64_t);
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t (*v152)(uint64_t, uint64_t);
  void (*v153)(uint64_t, uint64_t);
  uint64_t v154;
  uint64_t v155;
  void *v156;
  uint64_t v157;
  void (*v158)(uint64_t, uint64_t);
  unint64_t v159;
  _QWORD *v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  uint64_t v164;

  v164 = *MEMORY[0x1E0C80C00];
  if (qword_1ED75E808 != -1)
    swift_once();
  v1 = sub_1C106F544();
  sub_1C079E000(v1, (uint64_t)qword_1ED78D7A0);
  v2 = sub_1C106F538();
  v3 = sub_1C10703A8();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)sub_1C0780FC8();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1C0771000, v2, v3, "InternalXPC: vectorSearchBenchmark", v4, 2u);
    sub_1C0776778();
  }
  v5 = (void **)(v0 + 22);
  v6 = v0[47];
  v8 = v0[44];
  v7 = v0[45];
  v160 = v0;

  sub_1C106AA8C();
  sub_1C106AAE0();
  v9 = sub_1C106AAA4();
  v11 = v10;
  v12 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  sub_1C0779940();
  v13 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v14 = objc_msgSend(v13, sel_temporaryDirectory);
  sub_1C106AAF8();

  v162 = v9;
  v163 = v11;
  sub_1C106FC94();
  sub_1C106AAC8();
  sub_1C0775894();
  v15 = v6;
  v16 = v13;
  v12(v15, v8);
  v17 = sub_1C106AB10();
  v19 = v18;
  sub_1C0779940();
  v20 = (void *)sub_1C07AA0C8();
  v21 = objc_msgSend(v16, sel_fileExistsAtPath_, v20);

  if (v21)
  {
    v22 = (void *)sub_1C07AA0C8();
    *v5 = 0;
    v23 = objc_msgSend(v16, sel_removeItemAtPath_error_, v22, v5);

    v24 = *v5;
    if (!v23)
    {
      v37 = v24;
      sub_1C0778580();
      sub_1C106AA14();

      swift_willThrow();
      sub_1C0779940();
      goto LABEL_14;
    }
    v25 = v24;
  }
  v158 = v12;
  v26 = (void *)sub_1C07AA0C8();
  sub_1C0D37460();
  sub_1C0B99730((uint64_t)v26, v27, v28, 0, v16);

  sub_1C07D4B70(0, &qword_1EF640DF0);
  sub_1C077584C();
  v29 = sub_1C0B96424();
  if (!v29)
  {
    v34 = v160[49];
    v35 = v160[44];
    sub_1C0B997B0();
    swift_allocError();
    *v36 = v17;
    v36[1] = v19;
    swift_willThrow();

    v12(v34, v35);
LABEL_14:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1C078A47C();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v19 + 8))();
  }
  v30 = v29;
  swift_bridgeObjectRetain_n();
  v31 = sub_1C106F538();
  v32 = sub_1C10703A8();
  v154 = v17;
  if (os_log_type_enabled(v31, v32))
  {
    v33 = (uint8_t *)swift_slowAlloc();
    v162 = swift_slowAlloc();
    *(_DWORD *)v33 = 136315138;
    sub_1C077584C();
    v160[21] = sub_1C0788DAC(v17, v19, &v162);
    sub_1C10705AC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C0771000, v31, v32, "InternalXPC - vectorSearchBenchmark Output path: %s", v33, 0xCu);
    swift_arrayDestroy();
    sub_1C0776778();
  }
  swift_bridgeObjectRelease_n();

  v38 = sub_1C106AB58();
  v40 = v39;
  sub_1C106A708();
  sub_1C077B5BC();
  v41 = sub_1C106A6FC();
  sub_1C07803B8(&qword_1EF640E00, (uint64_t (*)(uint64_t))type metadata accessor for VectorBenchmarkConfig, (uint64_t)&protocol conformance descriptor for VectorBenchmarkConfig);
  sub_1C106A6F0();
  v140 = v38;
  v141 = v40;
  v138 = v19;
  sub_1C0781750();
  sub_1C1070774();
  v42 = v163;
  v160[14] = v162;
  v160[15] = v42;
  sub_1C077B66C();
  sub_1C07A1E64();
  sub_1C077AEBC();
  sub_1C07A1E64();
  sub_1C077B5B4();
  sub_1C106FC94();
  sub_1C077AEBC();
  sub_1C07A1E64();
  sub_1C077B5B4();
  sub_1C106FC94();
  sub_1C07B62AC();
  sub_1C10708F4();
  sub_1C07A1E64();
  sub_1C07B8000();
  sub_1C07803B8(&qword_1EF640E08, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3B808], MEMORY[0x1E0D3B820]);
  sub_1C1070C0C();
  sub_1C07A1E64();
  sub_1C077B5B4();
  sub_1C077B66C();
  sub_1C106FC94();
  v156 = v16;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C07A1E64();
  sub_1C077B5B4();
  sub_1C077B66C();
  sub_1C106FC94();
  v143 = v41;
  v44 = v160[40];
  v43 = v160[41];
  v45 = v160[39];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C07A1E64();
  sub_1C077B5B4();
  sub_1C07B8B48();
  sub_1C106FB44();
  sub_1C106FB20();
  v47 = v46;
  sub_1C077B5B4();
  v152 = *(uint64_t (**)(uint64_t, uint64_t))(v44 + 8);
  result = v152(v43, v45);
  if (v47 >> 60 == 15)
    goto LABEL_58;
  v49 = v160[46];
  sub_1C077B200();
  v50 = (void *)sub_1C106ABF4();
  v51 = sub_1C077B200();
  sub_1C07B33B8(v51, v52);
  objc_msgSend(v30, sel_writeData_, v50);

  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C077B200();
  sub_1C106AA8C();
  swift_bridgeObjectRelease();
  type metadata accessor for ViewDatabaseArtifact();
  v162 = 0;
  v163 = 0;
  swift_allocObject();
  v53 = sub_1C0DC03A8(v49, &v162);
  v54 = v160[43];
  v133 = v53;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_retain();
  sub_1C077AEBC();
  sub_1C106E740();
  v55 = *(_QWORD *)(v54 + 40);
  v56 = v160;
  v151 = *(_QWORD *)(v55 + 16);
  if (!v151)
  {
LABEL_52:
    v118 = v56[49];
    v119 = v56[44];
    v120 = v160[43];
    v121 = v160[38];
    v122 = v160[37];
    v123 = v160[36];
    objc_msgSend(v30, sel_closeFile);
    v124 = swift_release();
    sub_1C07AFAC8(v124, v125, v126, v127, v128, v129, v130, v131, v132, v133, v134, v135, v136, (uint64_t)v137, v138, v140, v141);

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v121, v123);
    sub_1C0B997EC(v120);
    v158(v118, v119);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1C078A47C();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v122 + 8))(v154, v139);
  }
  v135 = (uint64_t)(v160 + 18);
  v144 = (uint64_t)(v160 + 20);
  v137 = v160 + 19;
  v147 = v160[43];
  v148 = v160[34];
  v155 = v160[29];
  v146 = v160[26];
  v150 = v55 + 32;
  HIDWORD(v142) = *MEMORY[0x1E0DF2190];
  v57 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v58 = 0;
  v136 = 0x80000001C1102CE0;
  v145 = 0x80000001C1102D00;
  v149 = v57;
  v134 = (uint64_t)(v160 + 16);
  while (1)
  {
    if (v58 >= *(_QWORD *)(v57 + 16))
    {
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
    }
    v159 = v58;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C106F4D8();
    sub_1C106F4CC();
    sub_1C106F49C();
    v59 = sub_1C106F4CC();
    v60 = sub_1C107048C();
    if ((sub_1C107054C() & 1) != 0)
    {
      v61 = (uint8_t *)sub_1C0780FC8();
      *(_WORD *)v61 = 0;
      v62 = sub_1C106F4A8();
      _os_signpost_emit_with_name_impl(&dword_1C0771000, v59, v60, v62, "Vector Search Benchmark", "", v61, 2u);
      sub_1C0776778();
    }
    v64 = v56[31];
    v63 = v56[32];
    v65 = v56[28];

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v155 + 16))(v64, v63, v65);
    sub_1C106F520();
    sub_1C077B5BC();
    sub_1C106F514();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C077AEBC();
    v157 = sub_1C106E74C();
    swift_bridgeObjectRelease();
    sub_1C0775894();
    sub_1C077B5B4();
    v66 = sub_1C106F4CC();
    sub_1C106F508();
    v67 = sub_1C1070480();
    if ((sub_1C107054C() & 1) != 0)
    {
      v68 = v56[27];
      v69 = v56[25];
      swift_retain();
      sub_1C106F52C();
      swift_release();
      v70 = (*(uint64_t (**)(uint64_t, uint64_t))(v146 + 88))(v68, v69);
      v71 = "[Error] Interval already ended";
      if (v70 != HIDWORD(v142))
      {
        (*(void (**)(_QWORD, _QWORD))(v146 + 8))(v56[27], v56[25]);
        v71 = "";
      }
      v72 = (uint8_t *)sub_1C0780FC8();
      *(_WORD *)v72 = 0;
      v73 = sub_1C106F4A8();
      _os_signpost_emit_with_name_impl(&dword_1C0771000, v66, v67, v73, "Vector Search Benchmark", v71, v72, 2u);
      sub_1C0776778();
    }
    v74 = v56[30];
    v75 = v56[28];

    v76 = *(void (**)(uint64_t, uint64_t))(v155 + 8);
    v76(v74, v75);
    v77 = *(_QWORD *)(v147 + 32);
    v153 = v76;
    if (v77)
      break;
    sub_1C0781750();
    sub_1C1070774();
    swift_bridgeObjectRelease();
    *v137 = v159;
    sub_1C1070C0C();
    sub_1C106FC94();
    sub_1C07767AC();
    sub_1C106FC94();
    v86 = *(_QWORD *)(v157 + 16);
    if (v86)
    {
      sub_1C078D7B0(MEMORY[0x1E0DEE9D8]);
      v87 = v157 + 40;
      do
      {
        sub_1C07AAF9C();
        sub_1C07889B8();
        v88 = v163;
        v56[12] = v162;
        v56[13] = v88;
        sub_1C0778838();
        sub_1C106FC94();
        sub_1C079EF80();
        if (!v56[10])
          goto LABEL_56;
        sub_1C07ACF80(&qword_1ED756490);
        sub_1C10708F4();
        _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)(v160 + 7));
        sub_1C0775BA4();
        sub_1C106FC94();
        sub_1C1070204();
        swift_release();
        v89 = v56[12];
        v90 = v56[13];
        if ((sub_1C07AC880() & 1) == 0)
        {
          sub_1C07A3268();
          v75 = v161;
        }
        v91 = *(_QWORD *)(v75 + 16);
        if (v91 >= *(_QWORD *)(v75 + 24) >> 1)
        {
          sub_1C07B4868();
          v75 = v161;
        }
        *(_QWORD *)(v75 + 16) = v91 + 1;
        v92 = v75 + 16 * v91;
        *(_QWORD *)(v92 + 32) = v89;
        *(_QWORD *)(v92 + 40) = v90;
        v87 += 16;
        --v86;
        v56 = v160;
      }
      while (v86);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C0778580();
      v75 = MEMORY[0x1E0DEE9D8];
    }
    v56[18] = v75;
    sub_1C07ACF80(&qword_1ED762B70);
    sub_1C08243B0();
    sub_1C07B9B40();
    sub_1C106FA54();
    sub_1C07799A4();
    sub_1C07AEFA8();
    sub_1C0775894();
    sub_1C07B8B48();
    sub_1C0781EC4();
    v93 = sub_1C07865CC();
    v95 = v104;
    v105 = sub_1C0775894();
    result = sub_1C07ABD58(v105, v106, v107, v108, v109, v110, v111, v112, v132, v133, v134, v135, v136, (uint64_t)v137, v138, v140, v141, v142, v143,
               v144,
               v145,
               v146,
               v147,
               v148,
               v149,
               v150,
               v151,
               v152);
    if (v95 >> 60 == 15)
      goto LABEL_57;
LABEL_50:
    v113 = (void *)sub_1C106ABF4();
    sub_1C07B33B8(v93, v95);
    v58 = v159 + 1;
    v114 = v56[32];
    v115 = v56[28];
    objc_msgSend(v30, sel_writeData_, v113);

    swift_release();
    v153(v114, v115);
    v116 = sub_1C077B200();
    v117(v116);
    v57 = v149;
    if (v159 + 1 == v151)
    {
      swift_bridgeObjectRelease();
      goto LABEL_52;
    }
  }
  v162 = 0;
  v163 = 0xE000000000000000;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C1070774();
  swift_bridgeObjectRelease();
  if (v159 >= *(_QWORD *)(v77 + 16))
    goto LABEL_54;
  v78 = *(_QWORD *)(v77 + 16 * v159 + 32);
  sub_1C077AEBC();
  sub_1C07767AC();
  sub_1C106FC94();
  sub_1C077B5B4();
  sub_1C07B8B48();
  v79 = *(_QWORD *)(v157 + 16);
  if (v79)
  {
    sub_1C078D7B0(MEMORY[0x1E0DEE9D8]);
    v80 = v157 + 40;
    do
    {
      sub_1C07AAF9C();
      sub_1C07889B8();
      v81 = v163;
      v56[16] = v162;
      v56[17] = v81;
      sub_1C0778838();
      sub_1C106FC94();
      sub_1C079EF80();
      if (!v56[5])
        goto LABEL_55;
      sub_1C07ACF80(&qword_1ED756490);
      sub_1C10708F4();
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)(v160 + 2));
      sub_1C0775BA4();
      sub_1C106FC94();
      sub_1C1070204();
      swift_release();
      v83 = v56[16];
      v82 = v56[17];
      if ((sub_1C07AC880() & 1) == 0)
      {
        sub_1C07A3268();
        v78 = v161;
      }
      v84 = *(_QWORD *)(v78 + 16);
      if (v84 >= *(_QWORD *)(v78 + 24) >> 1)
      {
        sub_1C07B4868();
        v78 = v161;
      }
      *(_QWORD *)(v78 + 16) = v84 + 1;
      v85 = v78 + 16 * v84;
      *(_QWORD *)(v85 + 32) = v83;
      *(_QWORD *)(v85 + 40) = v82;
      v80 += 16;
      --v79;
      v56 = v160;
    }
    while (v79);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C0778580();
    v78 = MEMORY[0x1E0DEE9D8];
  }
  v56[20] = v78;
  sub_1C07ACF80(&qword_1ED762B70);
  sub_1C08243B0();
  sub_1C07B9B40();
  sub_1C106FA54();
  sub_1C07799A4();
  sub_1C07AEFA8();
  sub_1C0775894();
  sub_1C07B8B48();
  sub_1C0781EC4();
  v93 = sub_1C07865CC();
  v95 = v94;
  v96 = sub_1C0775894();
  result = sub_1C07ABD58(v96, v97, v98, v99, v100, v101, v102, v103, v132, v133, v134, v135, v136, (uint64_t)v137, v138, v140, v141, v142, v143,
             v144,
             v145,
             v146,
             v147,
             v148,
             v149,
             v150,
             v151,
             v152);
  if (v95 >> 60 != 15)
    goto LABEL_50;
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
  return result;
}

id sub_1C0B96424()
{
  void *v0;
  id v1;

  v0 = (void *)sub_1C106FAF0();
  swift_bridgeObjectRelease();
  v1 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fileHandleForWritingAtPath_, v0);

  return v1;
}

uint64_t sub_1C0B964EC()
{
  unint64_t v0;

  v0 = sub_1C1070A2C();
  sub_1C07767AC();
  if (v0 >= 9)
    return 9;
  else
    return v0;
}

uint64_t sub_1C0B96534(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0B9655C + 4 * byte_1C10A4E90[a1]))(25188, 0xE200000000000000);
}

uint64_t sub_1C0B96578()
{
  return 0x6D756C6F4379656BLL;
}

uint64_t sub_1C0B96594(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0B965BC + 4 * byte_1C10A4E99[a1]))(25188, 0xE200000000000000);
}

uint64_t sub_1C0B965D8()
{
  return 0x6D756C6F4379656BLL;
}

uint64_t sub_1C0B965F4(int a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;

  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  v5 = sub_1C106FB14();
  v7 = v6;
  v3[4] = v6;
  v8 = a3;
  v9 = (_QWORD *)swift_task_alloc();
  v3[5] = v9;
  *v9 = v3;
  v9[1] = sub_1C0B9667C;
  return InternalXPC.Server.vectorSearchBenchmark(with:)(v5, v7);
}

uint64_t sub_1C0B9667C()
{
  void *v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void (**v9)(_QWORD, _QWORD, _QWORD);

  v2 = v0;
  v3 = *v1;
  v4 = *(void **)(*v1 + 16);
  v5 = *v1;
  swift_task_dealloc();

  sub_1C077B5B4();
  if (v0)
  {
    v6 = sub_1C106AA08();

    v7 = 0;
    v8 = (void *)v6;
  }
  else
  {
    v7 = sub_1C106FAF0();
    swift_bridgeObjectRelease();
    v6 = 0;
    v8 = (void *)v7;
  }
  v9 = *(void (***)(_QWORD, _QWORD, _QWORD))(v3 + 24);
  v9[2](v9, v7, v6);

  _Block_release(v9);
  return (*(uint64_t (**)(void))(v5 + 8))();
}

void sub_1C0B96750(char *a1)
{
  sub_1C08C5934(*a1);
}

void sub_1C0B9675C()
{
  unsigned __int8 *v0;

  sub_1C0A53F6C(*v0);
}

void sub_1C0B96764(uint64_t a1)
{
  char *v1;

  sub_1C08C97FC(a1, *v1);
}

void sub_1C0B9676C(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1C0A546CC(a1, *v1);
}

uint64_t sub_1C0B96774@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C0B964EC();
  *a1 = result;
  return result;
}

uint64_t sub_1C0B967A0@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1C0B96534(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C0B967C8()
{
  unsigned __int8 *v0;

  return sub_1C0B96594(*v0);
}

uint64_t sub_1C0B967D0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C0B96530();
  *a1 = result;
  return result;
}

uint64_t sub_1C0B967F4()
{
  sub_1C0B99828();
  return sub_1C1070EE8();
}

uint64_t sub_1C0B9681C()
{
  sub_1C0B99828();
  return sub_1C1070EF4();
}

uint64_t VectorBenchmarkConfig.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  __int128 v54;
  char v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  __int128 __src;
  uint64_t v81;

  v71 = a2;
  v81 = *MEMORY[0x1E0C80C00];
  v3 = sub_1C106EDD0();
  v76 = *(_QWORD *)(v3 - 8);
  v77 = v3;
  MEMORY[0x1E0C80A78](v3);
  sub_1C077AE40();
  v72 = v4;
  v5 = sub_1C106CDA8();
  v74 = *(_QWORD *)(v5 - 8);
  v75 = v5;
  MEMORY[0x1E0C80A78](v5);
  sub_1C077AE40();
  v73 = v6;
  v7 = sub_1C07ACF80(&qword_1EF640E10);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for VectorBenchmarkConfig();
  MEMORY[0x1E0C80A78](v11);
  v13 = (uint64_t *)((char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C07A9480(a1, a1[3]);
  sub_1C0B99828();
  v14 = (uint64_t)v78;
  sub_1C1070E94();
  if (v14)
    return _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)a1);
  v15 = v77;
  v69 = v11;
  v70 = v8;
  v78 = a1;
  LOBYTE(__src) = 0;
  *v13 = sub_1C07B7C20();
  v13[1] = v17;
  LOBYTE(__src) = 1;
  v18 = sub_1C07B7C20();
  v20 = v76;
  v21 = v15;
  v13[2] = v18;
  v13[3] = v19;
  LOBYTE(__src) = 2;
  v22 = sub_1C078C300();
  v66 = 0;
  if ((v22 & 1) != 0)
  {
    sub_1C07ACF80(&qword_1ED760DE8);
    LOBYTE(v79) = 2;
    sub_1C07FD658();
    sub_1C07AD270();
    sub_1C1070AE0();
    v23 = v10;
    v24 = __src;
  }
  else
  {
    v23 = v10;
    v24 = 0;
  }
  v13[4] = v24;
  sub_1C07ACF80(&qword_1ED762B70);
  LOBYTE(v79) = 3;
  sub_1C07B0360(&qword_1ED762B78, &qword_1ED762B70, MEMORY[0x1E0DEAF40]);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C1070AE0();
  v68 = 0;
  v63 = v24;
  v64 = v23;
  v25 = __src;
  v26 = *(_QWORD *)(__src + 16);
  v27 = MEMORY[0x1E0DEE9D8];
  v67 = v13;
  v65 = v7;
  if (v26)
  {
    *(_QWORD *)&__src = MEMORY[0x1E0DEE9D8];
    sub_1C09D4900();
    v28 = __src;
    v29 = v25 + 40;
    do
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v30 = sub_1C106ABAC();
      if (v31 >> 60 == 15)
      {
        __break(1u);
        JUMPOUT(0x1C0B973BCLL);
      }
      v32 = v30;
      v33 = v31;
      swift_bridgeObjectRelease();
      *(_QWORD *)&__src = v28;
      v34 = *(_QWORD *)(v28 + 16);
      v35 = v28;
      if (v34 >= *(_QWORD *)(v28 + 24) >> 1)
      {
        sub_1C09D4900();
        v35 = __src;
      }
      v29 += 16;
      *(_QWORD *)(v35 + 16) = v34 + 1;
      v36 = v35 + 16 * v34;
      *(_QWORD *)(v36 + 32) = v32;
      *(_QWORD *)(v36 + 40) = v33;
      --v26;
      v28 = v35;
    }
    while (v26);
    swift_bridgeObjectRelease();
    v13 = v67;
    v20 = v76;
    v21 = v77;
    LODWORD(v7) = v65;
  }
  else
  {
    sub_1C0775834();
    v28 = MEMORY[0x1E0DEE9D8];
  }
  if (*(_QWORD *)(v28 + 16))
  {
    v79 = v27;
    sub_1C09D48CC();
    v62 = v28;
    __asm { BR              X9 }
  }
  sub_1C0778580();
  v37 = MEMORY[0x1E0DEE9D8];
  v13[5] = MEMORY[0x1E0DEE9D8];
  LOBYTE(__src) = 4;
  sub_1C07803B8(&qword_1EF640E20, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3B808], MEMORY[0x1E0D3B818]);
  sub_1C077584C();
  v38 = v73;
  v39 = v75;
  v40 = (int)v64;
  v41 = v68;
  sub_1C1070AE0();
  if (v41)
  {
    v68 = v41;
    sub_1C0791304();
    sub_1C0778580();
    sub_1C07B97D8();
    v42 = 0;
    v43 = 0;
    LODWORD(v37) = 0;
    v40 = 0;
    LODWORD(v7) = 1;
    LODWORD(v20) = 1;
    v47 = v66;
    goto LABEL_21;
  }
  v44 = v38;
  v45 = v69;
  (*(void (**)(char *, uint64_t, uint64_t))(v74 + 32))((char *)v13 + *(int *)(v69 + 32), v44, v39);
  LOBYTE(__src) = 5;
  sub_1C07803B8(&qword_1EF640E28, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D880], MEMORY[0x1E0D3D890]);
  v46 = v72;
  sub_1C1070AE0();
  v68 = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 32))((char *)v13 + *(int *)(v45 + 36), v46, v21);
  v42 = 6;
  LOBYTE(__src) = 6;
  v50 = sub_1C078C300();
  v47 = v66;
  if ((v50 & 1) != 0)
  {
    sub_1C07ACF80(&qword_1ED762B50);
    LOBYTE(v79) = 6;
    sub_1C07B0360(&qword_1EF640E30, &qword_1ED762B50, MEMORY[0x1E0DEE9A0]);
    sub_1C07AD270();
    v51 = v68;
    sub_1C1070AE0();
    v68 = v51;
    if (v51)
    {
      sub_1C0791304();
      sub_1C0778580();
      sub_1C07B97D8();
      sub_1C07811A8();
      v43 = 1;
      v13 = v67;
LABEL_21:
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v78);
      result = swift_bridgeObjectRelease();
      if (v47)
      {
        if ((_DWORD)v7)
          goto LABEL_23;
      }
      else
      {
        result = swift_bridgeObjectRelease();
        if ((_DWORD)v7)
        {
LABEL_23:
          result = swift_bridgeObjectRelease();
          if (!(_DWORD)v20)
            goto LABEL_28;
          goto LABEL_27;
        }
      }
      if (!(_DWORD)v20)
      {
LABEL_28:
        v48 = v77;
        v49 = v69;
        if (v42)
          result = (*(uint64_t (**)(char *, uint64_t))(v74 + 8))((char *)v13 + *(int *)(v69 + 32), v75);
        if (v43)
          result = (*(uint64_t (**)(char *, uint64_t))(v76 + 8))((char *)v13 + *(int *)(v49 + 36), v48);
        if ((_DWORD)v37)
          result = sub_1C0780BB0();
        if (v40)
          return sub_1C0780BB0();
        return result;
      }
LABEL_27:
      result = swift_bridgeObjectRelease();
      goto LABEL_28;
    }
    v52 = __src;
    v13 = v67;
  }
  else
  {
    v52 = 0uLL;
  }
  v53 = v69;
  *(_OWORD *)((char *)v13 + *(int *)(v69 + 40)) = v52;
  if ((sub_1C078E0F4() & 1) != 0)
  {
    sub_1C07ACF80(&qword_1ED762B50);
    LOBYTE(v79) = 7;
    sub_1C07B0360(&qword_1EF640E30, &qword_1ED762B50, MEMORY[0x1E0DEE9A0]);
    sub_1C0791DE4();
    v68 = 0;
    v54 = __src;
  }
  else
  {
    v54 = 0uLL;
  }
  *(_OWORD *)((char *)v67 + *(int *)(v53 + 44)) = v54;
  v55 = sub_1C078E0F4();
  v56 = 0uLL;
  if ((v55 & 1) != 0)
  {
    sub_1C07ACF80(&qword_1ED762B50);
    LOBYTE(v79) = 8;
    sub_1C07B0360(&qword_1EF640E30, &qword_1ED762B50, MEMORY[0x1E0DEE9A0]);
    sub_1C0791DE4();
    v56 = __src;
  }
  v57 = v71;
  *(_OWORD *)((char *)v67 + *(int *)(v53 + 48)) = v56;
  v58 = (uint64_t)v78;
  if (v63)
  {
    v59 = *(_QWORD *)(v63 + 16);
    v60 = *(_QWORD *)(v37 + 16);
    if (v59 != v60)
    {
      sub_1C0781750();
      sub_1C1070774();
      sub_1C077B66C();
      sub_1C106FC94();
      v79 = v59;
      sub_1C07AB888();
      sub_1C106FC94();
      sub_1C0775834();
      sub_1C077B66C();
      sub_1C106FC94();
      sub_1C0778580();
      v79 = v60;
      sub_1C07AB888();
      sub_1C106FC94();
      swift_bridgeObjectRelease();
      sub_1C1070954();
      __break(1u);
      JUMPOUT(0x1C0B974F4);
    }
    sub_1C07B1DFC();
    sub_1C0778580();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C07B1DFC();
    sub_1C0778580();
  }
  v61 = (uint64_t)v67;
  sub_1C0B99864((uint64_t)v67, v57);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v58);
  return sub_1C0B997EC(v61);
}

uint64_t sub_1C0B97504@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return VectorBenchmarkConfig.init(from:)(a1, a2);
}

uint64_t type metadata accessor for VectorBenchmarkConfig()
{
  uint64_t result;

  result = qword_1EF640E90;
  if (!qword_1EF640E90)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C0B97550(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B995D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Source);
}

uint64_t sub_1C0B97560(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B99534(a1, a2, a3, &qword_1EF637810);
}

uint64_t sub_1C0B9756C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B99534(a1, a2, a3, (uint64_t *)&unk_1ED762690);
}

uint64_t sub_1C0B97578()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_1C079ACA4();
  if (v0 < 0)
  {
    sub_1C07A3684();
    sub_1C0799658();
  }
  else
  {
    sub_1C0B9A380();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_1C078F7E8();
    sub_1C07A3684();
    sub_1C078782C();
  }
  result = sub_1C079A704();
  __break(1u);
  return result;
}

uint64_t sub_1C0B97600(uint64_t a1, uint64_t a2)
{
  return sub_1C079FB7C(a1, a2);
}

uint64_t sub_1C0B9760C(uint64_t a1, uint64_t a2)
{
  return sub_1C079FB7C(a1, a2);
}

uint64_t sub_1C0B97618(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B995D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for CNContactStructs.EntityAliasRelationshipType);
}

uint64_t sub_1C0B97624(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B995D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PHPersonStructs.EntityAliasRelationshipType);
}

uint64_t sub_1C0B97630(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B995D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranslatedEntityTriple);
}

uint64_t sub_1C0B9763C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B995D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for EntityTriple);
}

void *sub_1C0B97648(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  char v4;
  char v5;
  BOOL v6;
  void *v7;
  const void *v8;
  size_t v9;
  void *result;

  if (a2 < 0)
  {
    sub_1C07A3684();
    sub_1C0799658();
  }
  else
  {
    sub_1C0793D08();
    if (!v5 & v4)
      v6 = v3 > v2;
    else
      v6 = 0;
    if (!v6)
    {
      v7 = (void *)sub_1C07A54EC();
      return sub_1C0796794(v7, v8, v9);
    }
    sub_1C07A3684();
    sub_1C078782C();
  }
  result = (void *)sub_1C079A704();
  __break(1u);
  return result;
}

uint64_t sub_1C0B976C8()
{
  return sub_1C0B992B0();
}

uint64_t sub_1C0B976D4()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_1C079ACA4();
  if (v0 < 0)
  {
    sub_1C07A3684();
    sub_1C0799658();
  }
  else
  {
    sub_1C07AA424();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_1C078F7E8();
    sub_1C07A3684();
    sub_1C078782C();
  }
  result = sub_1C079A704();
  __break(1u);
  return result;
}

uint64_t sub_1C0B97760(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B995D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for FeatureProviderSnapshot);
}

uint64_t sub_1C0B9776C()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  sub_1C079ACA4();
  if (v3 < 0)
  {
    sub_1C07A3684();
    sub_1C0799658();
  }
  else
  {
    if (v2 + (v1 << 6) <= v0 || v0 + (v1 << 6) <= v2)
      return sub_1C078F7E8();
    sub_1C07A3684();
    sub_1C078782C();
  }
  result = sub_1C079A704();
  __break(1u);
  return result;
}

uint64_t sub_1C0B97800(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B995D4(a1, a2, a3, (void (*)(_QWORD))MEMORY[0x1E0D3D450]);
}

uint64_t sub_1C0B9780C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B995D4(a1, a2, a3, (void (*)(_QWORD))MEMORY[0x1E0D3CE28]);
}

uint64_t sub_1C0B97818(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B995D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for GraphTriple);
}

uint64_t sub_1C0B97824(uint64_t a1, uint64_t a2)
{
  return sub_1C0B9783C(a1, a2);
}

uint64_t sub_1C0B97830(uint64_t a1, uint64_t a2)
{
  return sub_1C0B9783C(a1, a2);
}

uint64_t sub_1C0B9783C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  void (*v3)(_QWORD);
  unint64_t v4;
  char v5;
  char v6;
  BOOL v7;
  uint64_t result;

  if (a2 < 0)
  {
    sub_1C07A3684();
    sub_1C0799658();
  }
  else
  {
    sub_1C07A48C4();
    if (!v6 & v5)
      v7 = v4 > v2;
    else
      v7 = 0;
    if (!v7)
    {
      v3(0);
      sub_1C07ADED0();
      return sub_1C07A0F54();
    }
    sub_1C07A3684();
    sub_1C078782C();
  }
  result = sub_1C079A704();
  __break(1u);
  return result;
}

uint64_t sub_1C0B978C8(uint64_t a1, uint64_t a2)
{
  return sub_1C0B978DC(a1, a2);
}

uint64_t sub_1C0B978DC(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t *v3;
  unint64_t v4;
  BOOL v5;
  BOOL v6;
  uint64_t result;

  if (a2 < 0)
  {
    sub_1C07A3684();
    sub_1C0799658();
  }
  else
  {
    sub_1C07A48C4();
    if (!v6 && v5)
    {
      v5 = v4 >= v2;
      v6 = v4 == v2;
    }
    else
    {
      v5 = 0;
      v6 = 0;
    }
    if (v6 || !v5)
    {
      sub_1C07D4B70(0, v3);
      sub_1C07ADED0();
      return sub_1C07A0F54();
    }
    sub_1C07A3684();
    sub_1C078782C();
  }
  result = sub_1C079A704();
  __break(1u);
  return result;
}

uint64_t sub_1C0B97970()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_1C079ACA4();
  if (v0 < 0)
  {
    sub_1C07A3684();
    sub_1C0799658();
  }
  else
  {
    sub_1C079B7AC();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_1C078F7E8();
    sub_1C07A3684();
    sub_1C078782C();
  }
  result = sub_1C079A704();
  __break(1u);
  return result;
}

uint64_t sub_1C0B97A00(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B995D4(a1, a2, a3, (void (*)(_QWORD))MEMORY[0x1E0D3C130]);
}

uint64_t sub_1C0B97A0C()
{
  return sub_1C0B98CC0();
}

uint64_t sub_1C0B97A18(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B99534(a1, a2, a3, &qword_1ED7449A0);
}

uint64_t sub_1C0B97A24(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B995D4(a1, a2, a3, (void (*)(_QWORD))MEMORY[0x1E0CB0870]);
}

uint64_t sub_1C0B97A30(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    sub_1C07A3684();
    sub_1C0799658();
  }
  else
  {
    sub_1C079E630();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      sub_1C07ACF80(&qword_1ED7447F0);
      sub_1C07ADED0();
      return sub_1C07A0F54();
    }
    sub_1C07A3684();
    sub_1C078782C();
  }
  result = sub_1C079A704();
  __break(1u);
  return result;
}

uint64_t sub_1C0B97AC0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B99534(a1, a2, a3, &qword_1ED75D0B8);
}

uint64_t sub_1C0B97ACC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B995D4(a1, a2, a3, (void (*)(_QWORD))MEMORY[0x1E0D3C188]);
}

void *sub_1C0B97AD8(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  char v4;
  char v5;
  BOOL v6;
  void *v7;
  const void *v8;
  size_t v9;
  void *result;

  if (a2 < 0)
  {
    sub_1C07A3684();
    sub_1C0799658();
  }
  else
  {
    sub_1C077D27C();
    if (!v5 & v4)
      v6 = v3 > v2;
    else
      v6 = 0;
    if (!v6)
    {
      v7 = (void *)sub_1C07A54EC();
      return sub_1C0796794(v7, v8, v9);
    }
    sub_1C07A3684();
    sub_1C078782C();
  }
  result = (void *)sub_1C079A704();
  __break(1u);
  return result;
}

uint64_t sub_1C0B97B58(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B995D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for FeatureValue.BasicValue);
}

uint64_t sub_1C0B97B64(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B995D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for FeatureValue);
}

uint64_t sub_1C0B97B70(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B99534(a1, a2, a3, &qword_1ED74D308);
}

uint64_t sub_1C0B97B7C()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_1C079ACA4();
  if (v0 < 0)
  {
    sub_1C07A3684();
    sub_1C0799658();
  }
  else
  {
    sub_1C079B7AC();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_1C078F7E8();
    sub_1C07A3684();
    sub_1C078782C();
  }
  result = sub_1C079A704();
  __break(1u);
  return result;
}

uint64_t sub_1C0B97C0C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B99534(a1, a2, a3, (uint64_t *)&unk_1EF637950);
}

uint64_t sub_1C0B97C1C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    sub_1C07A3684();
    sub_1C0799658();
  }
  else
  {
    sub_1C079748C();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      sub_1C07ACF80(qword_1ED7453C0);
      sub_1C07ADED0();
      return sub_1C07A0F54();
    }
    sub_1C07A3684();
    sub_1C078782C();
  }
  result = sub_1C079A704();
  __break(1u);
  return result;
}

void *sub_1C0B97CAC(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  char v4;
  char v5;
  BOOL v6;
  void *v7;
  const void *v8;
  size_t v9;
  void *result;

  if (a2 < 0)
  {
    sub_1C07A3684();
    sub_1C0799658();
  }
  else
  {
    sub_1C077F300();
    if (!v5 & v4)
      v6 = v3 > v2;
    else
      v6 = 0;
    if (!v6)
    {
      v7 = (void *)sub_1C07A54EC();
      return sub_1C0796794(v7, v8, v9);
    }
    sub_1C07A3684();
    sub_1C078782C();
  }
  result = (void *)sub_1C079A704();
  __break(1u);
  return result;
}

uint64_t sub_1C0B97D2C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B995D4(a1, a2, a3, (void (*)(_QWORD))MEMORY[0x1E0CB0998]);
}

uint64_t sub_1C0B97D38(uint64_t a1, uint64_t a2)
{
  return sub_1C0B98698(a1, a2);
}

uint64_t sub_1C0B97D44(uint64_t a1, uint64_t a2)
{
  return sub_1C0B98698(a1, a2);
}

void *sub_1C0B97D50(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  char v4;
  char v5;
  BOOL v6;
  void *v7;
  const void *v8;
  size_t v9;
  void *result;

  if (a2 < 0)
  {
    sub_1C07A3684();
    sub_1C0799658();
  }
  else
  {
    sub_1C078CBB0();
    if (!v5 & v4)
      v6 = v3 > v2;
    else
      v6 = 0;
    if (!v6)
    {
      v7 = (void *)sub_1C07A54EC();
      return sub_1C0796794(v7, v8, v9);
    }
    sub_1C07A3684();
    sub_1C078782C();
  }
  result = (void *)sub_1C079A704();
  __break(1u);
  return result;
}

uint64_t sub_1C0B97DD0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B99534(a1, a2, a3, &qword_1EF632410);
}

uint64_t sub_1C0B97DDC(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    sub_1C07A3684();
    sub_1C0799658();
  }
  else
  {
    sub_1C07A27F4();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      sub_1C07ACF80(&qword_1EF640F50);
      sub_1C07ADED0();
      return sub_1C07A0F54();
    }
    sub_1C07A3684();
    sub_1C078782C();
  }
  result = sub_1C079A704();
  __break(1u);
  return result;
}

uint64_t sub_1C0B97E6C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B99534(a1, a2, a3, &qword_1EF6323F8);
}

uint64_t sub_1C0B97E78(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B995D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for VirtualInteractionContact);
}

uint64_t sub_1C0B97E84(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B99534(a1, a2, a3, (uint64_t *)&unk_1ED75EA40);
}

uint64_t sub_1C0B97E90(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B995D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TimeBasedBehaviorSample);
}

uint64_t sub_1C0B97E9C(uint64_t a1, uint64_t a2)
{
  return sub_1C079FB7C(a1, a2);
}

uint64_t sub_1C0B97EA8(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    sub_1C07A3684();
    sub_1C0799658();
  }
  else
  {
    sub_1C079748C();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      sub_1C07ACF80(&qword_1ED758D20);
      sub_1C07ADED0();
      return sub_1C07A0F54();
    }
    sub_1C07A3684();
    sub_1C078782C();
  }
  result = sub_1C079A704();
  __break(1u);
  return result;
}

uint64_t sub_1C0B97F38(uint64_t a1, uint64_t a2)
{
  return sub_1C079FB7C(a1, a2);
}

uint64_t sub_1C0B97F44(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    sub_1C07A3684();
    sub_1C0799658();
  }
  else
  {
    sub_1C078B140();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      sub_1C07ACF80(&qword_1ED75DF80);
      sub_1C07ADED0();
      return sub_1C07A0F54();
    }
    sub_1C07A3684();
    sub_1C078782C();
  }
  result = sub_1C079A704();
  __break(1u);
  return result;
}

uint64_t sub_1C0B97FD4(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    sub_1C07A3684();
    sub_1C0799658();
  }
  else
  {
    sub_1C079E630();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      sub_1C07ACF80(&qword_1ED7462C0);
      sub_1C07ADED0();
      return sub_1C07A0F54();
    }
    sub_1C07A3684();
    sub_1C078782C();
  }
  result = sub_1C079A704();
  __break(1u);
  return result;
}

uint64_t sub_1C0B98064(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    sub_1C07A3684();
    sub_1C0799658();
  }
  else
  {
    sub_1C0787F98();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      sub_1C07ACF80(&qword_1EF62FEC0);
      sub_1C07ADED0();
      return sub_1C07A0F54();
    }
    sub_1C07A3684();
    sub_1C078782C();
  }
  result = sub_1C079A704();
  __break(1u);
  return result;
}

uint64_t sub_1C0B980F4(uint64_t a1, uint64_t a2)
{
  return sub_1C0B9935C(a1, a2);
}

uint64_t sub_1C0B98100(uint64_t a1, uint64_t a2)
{
  return sub_1C079FB7C(a1, a2);
}

uint64_t sub_1C0B9810C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B99534(a1, a2, a3, &qword_1EF6377E8);
}

uint64_t sub_1C0B98118(uint64_t a1, uint64_t a2)
{
  return sub_1C0B9783C(a1, a2);
}

uint64_t sub_1C0B98124(uint64_t a1, uint64_t a2)
{
  return sub_1C0B9935C(a1, a2);
}

uint64_t sub_1C0B98130(uint64_t a1, uint64_t a2)
{
  return sub_1C0B978DC(a1, a2);
}

uint64_t sub_1C0B98144()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  sub_1C079ACA4();
  if (v3 < 0)
  {
    sub_1C07A3684();
    sub_1C0799658();
  }
  else
  {
    if (v2 + 80 * v1 <= v0 || v0 + 80 * v1 <= v2)
      return sub_1C078F7E8();
    sub_1C07A3684();
    sub_1C078782C();
  }
  result = sub_1C079A704();
  __break(1u);
  return result;
}

uint64_t sub_1C0B981DC()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_1C079ACA4();
  if (v0 < 0)
  {
    sub_1C07A3684();
    sub_1C0799658();
  }
  else
  {
    sub_1C079B7AC();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_1C078F7E8();
    sub_1C07A3684();
    sub_1C078782C();
  }
  result = sub_1C079A704();
  __break(1u);
  return result;
}

uint64_t sub_1C0B9826C(uint64_t a1, uint64_t a2)
{
  return sub_1C0B982B4(a1, a2);
}

uint64_t sub_1C0B98278(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B995D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for EventTriple);
}

uint64_t sub_1C0B98284(uint64_t a1, uint64_t a2)
{
  return sub_1C0B982B4(a1, a2);
}

uint64_t sub_1C0B98290(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B995D4(a1, a2, a3, (void (*)(_QWORD))MEMORY[0x1E0D23DC8]);
}

uint64_t sub_1C0B9829C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B995D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for SubgraphDatabaseTable.SubgraphComparableTriple);
}

uint64_t sub_1C0B982A8(uint64_t a1, uint64_t a2)
{
  return sub_1C0B982B4(a1, a2);
}

uint64_t sub_1C0B982B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  BOOL v7;
  BOOL v8;
  uint64_t result;

  if (a2 < 0)
  {
    sub_1C07A3684();
    sub_1C0799658();
  }
  else
  {
    sub_1C079E630();
    if (!v8 && v7)
    {
      v7 = v6 >= v4;
      v8 = v6 == v4;
    }
    else
    {
      v7 = 0;
      v8 = 0;
    }
    if (v8 || !v7)
    {
      sub_1C07A80D4(v2, v3, v4, v5);
      sub_1C07ADED0();
      return sub_1C07A0F54();
    }
    sub_1C07A3684();
    sub_1C078782C();
  }
  result = sub_1C079A704();
  __break(1u);
  return result;
}

uint64_t sub_1C0B9833C(uint64_t a1, uint64_t a2)
{
  return sub_1C0B9935C(a1, a2);
}

uint64_t sub_1C0B98348(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B995D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for StaticKnowledgeTriple);
}

uint64_t sub_1C0B98354(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B99534(a1, a2, a3, &qword_1EF637840);
}

uint64_t sub_1C0B98360(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B99534(a1, a2, a3, (uint64_t *)&unk_1ED75D8B0);
}

uint64_t sub_1C0B9836C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B995D4(a1, a2, a3, (void (*)(_QWORD))MEMORY[0x1E0D3D0A0]);
}

uint64_t sub_1C0B98378(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B995D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
}

uint64_t sub_1C0B98384()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  sub_1C079ACA4();
  if (v3 < 0)
  {
    sub_1C07A3684();
    sub_1C0799658();
  }
  else
  {
    if (v2 + 152 * v1 <= v0 || v0 + 152 * v1 <= v2)
      return sub_1C078F7E8();
    sub_1C07A3684();
    sub_1C078782C();
  }
  result = sub_1C079A704();
  __break(1u);
  return result;
}

uint64_t sub_1C0B98420(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B995D4(a1, a2, a3, (void (*)(_QWORD))MEMORY[0x1E0D3DA00]);
}

uint64_t sub_1C0B9842C(uint64_t a1, uint64_t a2)
{
  return sub_1C079FB7C(a1, a2);
}

uint64_t sub_1C0B98438(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B995D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for ConstructionGraphTriple);
}

uint64_t sub_1C0B98444(uint64_t a1, uint64_t a2)
{
  return sub_1C079FB7C(a1, a2);
}

uint64_t sub_1C0B98450(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B995D4(a1, a2, a3, (void (*)(_QWORD))MEMORY[0x1E0CB11B8]);
}

uint64_t sub_1C0B9845C(uint64_t a1, uint64_t a2)
{
  return sub_1C079FB7C(a1, a2);
}

uint64_t sub_1C0B98468(uint64_t a1, uint64_t a2)
{
  return sub_1C079FB7C(a1, a2);
}

uint64_t sub_1C0B98474(uint64_t a1, uint64_t a2)
{
  return sub_1C0B9935C(a1, a2);
}

void *sub_1C0B98480(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  void *v6;
  const void *v7;
  size_t v8;
  void *result;

  if (a2 < 0)
  {
    sub_1C07A3684();
    sub_1C0799658();
  }
  else
  {
    v3 = a1 + 24 * a2;
    if (a3 + 24 * a2 > a1)
    {
      v4 = v3 >= a3;
      v5 = v3 == a3;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      v6 = (void *)sub_1C07A54EC();
      return sub_1C0796794(v6, v7, v8);
    }
    sub_1C07A3684();
    sub_1C078782C();
  }
  result = (void *)sub_1C079A704();
  __break(1u);
  return result;
}

uint64_t sub_1C0B98514(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B995D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for EntityMatch);
}

uint64_t sub_1C0B98520(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B995D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for CNContactStructs.AddressRelationshipType);
}

uint64_t sub_1C0B9852C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B995D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for CNContactStructs.LocationRelationshipType);
}

uint64_t sub_1C0B98538(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    sub_1C07A3684();
    sub_1C0799658();
  }
  else
  {
    sub_1C07A48C4();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      sub_1C07ACF80(&qword_1ED75D180);
      sub_1C07ADED0();
      return sub_1C07A0F54();
    }
    sub_1C07A3684();
    sub_1C078782C();
  }
  result = sub_1C079A704();
  __break(1u);
  return result;
}

uint64_t sub_1C0B985C8(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B995D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for CNContactStructs.IdentifierRelationshipType);
}

uint64_t sub_1C0B985D4(uint64_t a1, uint64_t a2)
{
  return sub_1C0B985EC(a1, a2);
}

uint64_t sub_1C0B985E0(uint64_t a1, uint64_t a2)
{
  return sub_1C0B985EC(a1, a2);
}

uint64_t sub_1C0B985EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  BOOL v7;
  BOOL v8;
  uint64_t result;

  if (a2 < 0)
  {
    sub_1C07A3684();
    sub_1C0799658();
  }
  else
  {
    sub_1C07BCF70();
    if (!v8 && v7)
    {
      v7 = v6 >= v4;
      v8 = v6 == v4;
    }
    else
    {
      v7 = 0;
      v8 = 0;
    }
    if (v8 || !v7)
    {
      sub_1C07A80D4(v2, v3, v4, v5);
      sub_1C07ADED0();
      return sub_1C07A0F54();
    }
    sub_1C07A3684();
    sub_1C078782C();
  }
  result = sub_1C079A704();
  __break(1u);
  return result;
}

uint64_t sub_1C0B98674(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B995D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for SourceIdPrefix);
}

uint64_t sub_1C0B98680(uint64_t a1, uint64_t a2)
{
  return sub_1C079FB7C(a1, a2);
}

uint64_t sub_1C0B9868C(uint64_t a1, uint64_t a2)
{
  return sub_1C0B98698(a1, a2);
}

uint64_t sub_1C0B98698(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  BOOL v7;
  BOOL v8;
  uint64_t result;

  if (a2 < 0)
  {
    sub_1C07A3684();
    sub_1C0799658();
  }
  else
  {
    sub_1C0787F98();
    if (!v8 && v7)
    {
      v7 = v6 >= v4;
      v8 = v6 == v4;
    }
    else
    {
      v7 = 0;
      v8 = 0;
    }
    if (v8 || !v7)
    {
      sub_1C07A80D4(v2, v3, v4, v5);
      sub_1C07ADED0();
      return sub_1C07A0F54();
    }
    sub_1C07A3684();
    sub_1C078782C();
  }
  result = sub_1C079A704();
  __break(1u);
  return result;
}

uint64_t sub_1C0B98720(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    sub_1C07A3684();
    sub_1C0799658();
  }
  else
  {
    sub_1C07BCF70();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      sub_1C07ACF80(&qword_1EF640F00);
      sub_1C07ADED0();
      return sub_1C07A0F54();
    }
    sub_1C07A3684();
    sub_1C078782C();
  }
  result = sub_1C079A704();
  __break(1u);
  return result;
}

uint64_t sub_1C0B987B0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B995D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for FAFamilyStructs.Person);
}

uint64_t sub_1C0B987BC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B995D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for FAFamilyStructs.AddressRelationshipType);
}

uint64_t sub_1C0B987C8()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_1C079ACA4();
  if (v0 < 0)
  {
    sub_1C07A3684();
    sub_1C0799658();
  }
  else
  {
    sub_1C079B7AC();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_1C078F7E8();
    sub_1C07A3684();
    sub_1C078782C();
  }
  result = sub_1C079A704();
  __break(1u);
  return result;
}

uint64_t sub_1C0B98858()
{
  return sub_1C0B99074();
}

uint64_t sub_1C0B98864(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B99534(a1, a2, a3, &qword_1EF637AF0);
}

uint64_t sub_1C0B98870()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_1C079ACA4();
  if (v0 < 0)
  {
    sub_1C07A3684();
    sub_1C0799658();
  }
  else
  {
    sub_1C079517C();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_1C078F7E8();
    sub_1C07A3684();
    sub_1C078782C();
  }
  result = sub_1C079A704();
  __break(1u);
  return result;
}

uint64_t sub_1C0B988F8(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B99534(a1, a2, a3, (uint64_t *)&unk_1EF637B00);
}

uint64_t sub_1C0B98904(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B99534(a1, a2, a3, &qword_1EF630168);
}

uint64_t sub_1C0B98910(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B99534(a1, a2, a3, &qword_1EF637AE0);
}

uint64_t sub_1C0B9891C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B99534(a1, a2, a3, (uint64_t *)&unk_1EF637B20);
}

uint64_t sub_1C0B98928(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B99534(a1, a2, a3, &qword_1EF630170);
}

uint64_t sub_1C0B98934(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B99534(a1, a2, a3, &qword_1EF637AB0);
}

uint64_t sub_1C0B98940(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B99534(a1, a2, a3, (uint64_t *)&unk_1EF637AC0);
}

uint64_t sub_1C0B9894C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B99534(a1, a2, a3, &qword_1EF630160);
}

uint64_t sub_1C0B98958(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    sub_1C07A3684();
    sub_1C0799658();
  }
  else
  {
    sub_1C079748C();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      sub_1C07ACF80(&qword_1EF640FA0);
      sub_1C07ADED0();
      return sub_1C07A0F54();
    }
    sub_1C07A3684();
    sub_1C078782C();
  }
  result = sub_1C079A704();
  __break(1u);
  return result;
}

uint64_t sub_1C0B989E8(uint64_t a1, uint64_t a2)
{
  return sub_1C0B98698(a1, a2);
}

uint64_t sub_1C0B989F4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B99534(a1, a2, a3, &qword_1EF637A90);
}

uint64_t sub_1C0B98A00(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    sub_1C07A3684();
    sub_1C0799658();
  }
  else
  {
    sub_1C079748C();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      sub_1C07ACF80(&qword_1EF640F90);
      sub_1C07ADED0();
      return sub_1C07A0F54();
    }
    sub_1C07A3684();
    sub_1C078782C();
  }
  result = sub_1C079A704();
  __break(1u);
  return result;
}

uint64_t sub_1C0B98A90(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    sub_1C07A3684();
    sub_1C0799658();
  }
  else
  {
    sub_1C07A27F4();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      sub_1C07ACF80(&qword_1EF640F88);
      sub_1C07ADED0();
      return sub_1C07A0F54();
    }
    sub_1C07A3684();
    sub_1C078782C();
  }
  result = sub_1C079A704();
  __break(1u);
  return result;
}

uint64_t sub_1C0B98B20(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B99534(a1, a2, a3, &qword_1EF637A70);
}

uint64_t sub_1C0B98B2C(uint64_t a1, uint64_t a2)
{
  return sub_1C079FB7C(a1, a2);
}

uint64_t sub_1C0B98B38(uint64_t a1, uint64_t a2)
{
  return sub_1C079FB7C(a1, a2);
}

uint64_t sub_1C0B98B44(uint64_t a1, uint64_t a2)
{
  return sub_1C0B982B4(a1, a2);
}

uint64_t sub_1C0B98B50(uint64_t a1, uint64_t a2)
{
  return sub_1C0B982B4(a1, a2);
}

uint64_t sub_1C0B98B5C(uint64_t a1, uint64_t a2)
{
  return sub_1C079FB7C(a1, a2);
}

uint64_t sub_1C0B98B68(uint64_t a1, uint64_t a2)
{
  return sub_1C079FB7C(a1, a2);
}

uint64_t sub_1C0B98B74(uint64_t a1, uint64_t a2)
{
  return sub_1C0B98698(a1, a2);
}

uint64_t sub_1C0B98B80(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B995D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for ConstructionEventTriple);
}

void *sub_1C0B98B8C()
{
  char *v0;
  size_t v1;
  char *v2;
  uint64_t v3;
  void *result;

  sub_1C079ACA4();
  if (v3 < 0)
  {
    sub_1C07A3684();
    sub_1C0799658();
  }
  else
  {
    if (&v2[v1] <= v0 || &v0[v1] <= v2)
      return sub_1C0796794(v2, v0, v1);
    sub_1C07A3684();
    sub_1C078782C();
  }
  result = (void *)sub_1C079A704();
  __break(1u);
  return result;
}

uint64_t sub_1C0B98C18(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B995D4(a1, a2, a3, (void (*)(_QWORD))_s14descr1E7A1E2A9V28ResolvedKnowledgeGraphFilterVMa);
}

uint64_t sub_1C0B98C24(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    sub_1C07A3684();
    sub_1C0799658();
  }
  else
  {
    sub_1C0787F98();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      sub_1C07ACF80(&qword_1ED759838);
      sub_1C07ADED0();
      return sub_1C07A0F54();
    }
    sub_1C07A3684();
    sub_1C078782C();
  }
  result = sub_1C079A704();
  __break(1u);
  return result;
}

uint64_t sub_1C0B98CB4()
{
  return sub_1C0B98CC0();
}

uint64_t sub_1C0B98CC0()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  sub_1C079ACA4();
  if (v3 < 0)
  {
    sub_1C07A3684();
    sub_1C0799658();
  }
  else
  {
    if (v2 + 48 * v1 <= v0 || v0 + 48 * v1 <= v2)
      return sub_1C078F7E8();
    sub_1C07A3684();
    sub_1C078782C();
  }
  result = sub_1C079A704();
  __break(1u);
  return result;
}

uint64_t sub_1C0B98D50(uint64_t a1, uint64_t a2)
{
  return sub_1C079FB7C(a1, a2);
}

uint64_t sub_1C0B98D5C(uint64_t a1, uint64_t a2)
{
  return sub_1C079FB7C(a1, a2);
}

uint64_t sub_1C0B98D68(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B995D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for INGroupStructs.Person);
}

uint64_t sub_1C0B98D74(uint64_t a1, uint64_t a2)
{
  return sub_1C0B978DC(a1, a2);
}

uint64_t sub_1C0B98D88(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B995D4(a1, a2, a3, (void (*)(_QWORD))MEMORY[0x1E0D3DD88]);
}

uint64_t sub_1C0B98D94()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_1C079ACA4();
  if (v0 < 0)
  {
    sub_1C07A3684();
    sub_1C0799658();
  }
  else
  {
    sub_1C079B7AC();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_1C078F7E8();
    sub_1C07A3684();
    sub_1C078782C();
  }
  result = sub_1C079A704();
  __break(1u);
  return result;
}

uint64_t sub_1C0B98E24()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_1C079ACA4();
  if (v0 < 0)
  {
    sub_1C07A3684();
    sub_1C0799658();
  }
  else
  {
    sub_1C079517C();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_1C078F7E8();
    sub_1C07A3684();
    sub_1C078782C();
  }
  result = sub_1C079A704();
  __break(1u);
  return result;
}

uint64_t sub_1C0B98EAC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B995D4(a1, a2, a3, (void (*)(_QWORD))MEMORY[0x1E0CAFFF8]);
}

uint64_t sub_1C0B98EB8(uint64_t a1, uint64_t a2)
{
  return sub_1C079FB7C(a1, a2);
}

uint64_t sub_1C0B98EC4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B995D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PhotosPersonObservation);
}

uint64_t sub_1C0B98ED0()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_1C079ACA4();
  if (v0 < 0)
  {
    sub_1C07A3684();
    sub_1C0799658();
  }
  else
  {
    sub_1C0B9A380();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_1C078F7E8();
    sub_1C07A3684();
    sub_1C078782C();
  }
  result = sub_1C079A704();
  __break(1u);
  return result;
}

uint64_t sub_1C0B98F58(uint64_t a1, uint64_t a2)
{
  return sub_1C079FB7C(a1, a2);
}

uint64_t sub_1C0B98F64(uint64_t a1, uint64_t a2)
{
  return sub_1C079FB7C(a1, a2);
}

uint64_t sub_1C0B98F70(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    sub_1C07A3684();
    sub_1C0799658();
  }
  else
  {
    v3 = a1 + 160 * a2;
    if (a3 + 160 * a2 > a1)
    {
      v4 = v3 >= a3;
      v5 = v3 == a3;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      sub_1C07ACF80(&qword_1EF6301E8);
      sub_1C07ADED0();
      return sub_1C07A0F54();
    }
    sub_1C07A3684();
    sub_1C078782C();
  }
  result = sub_1C079A704();
  __break(1u);
  return result;
}

uint64_t sub_1C0B99018(uint64_t a1, uint64_t a2)
{
  return sub_1C0B9783C(a1, a2);
}

uint64_t sub_1C0B99024(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B99534(a1, a2, a3, &qword_1EF631C60);
}

uint64_t sub_1C0B99030(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B995D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for JointHUDataCollectionTaskManager.Point);
}

uint64_t sub_1C0B9903C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B995D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for ExtractedMatch);
}

uint64_t sub_1C0B99048(uint64_t a1, uint64_t a2)
{
  return sub_1C079FB7C(a1, a2);
}

uint64_t sub_1C0B99054(uint64_t a1, uint64_t a2)
{
  return sub_1C0B978DC(a1, a2);
}

uint64_t sub_1C0B99068()
{
  return sub_1C0B99074();
}

uint64_t sub_1C0B99074()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_1C079ACA4();
  if (v0 < 0)
  {
    sub_1C07A3684();
    sub_1C0799658();
  }
  else
  {
    sub_1C07AA424();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_1C078F7E8();
    sub_1C07A3684();
    sub_1C078782C();
  }
  result = sub_1C079A704();
  __break(1u);
  return result;
}

uint64_t sub_1C0B990F4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B995D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for OntologyTriple);
}

uint64_t sub_1C0B99100(uint64_t a1, uint64_t a2)
{
  return sub_1C0B9935C(a1, a2);
}

uint64_t sub_1C0B9910C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    sub_1C07A3684();
    sub_1C0799658();
  }
  else
  {
    sub_1C07AA8DC();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      sub_1C07ACF80(&qword_1ED74D298);
      sub_1C07ADED0();
      return sub_1C07A0F54();
    }
    sub_1C07A3684();
    sub_1C078782C();
  }
  result = sub_1C079A704();
  __break(1u);
  return result;
}

uint64_t sub_1C0B9919C()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_1C079ACA4();
  if (v0 < 0)
  {
    sub_1C07A3684();
    sub_1C0799658();
  }
  else
  {
    sub_1C079517C();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_1C078F7E8();
    sub_1C07A3684();
    sub_1C078782C();
  }
  result = sub_1C079A704();
  __break(1u);
  return result;
}

uint64_t sub_1C0B99224(uint64_t a1, uint64_t a2)
{
  return sub_1C079FB7C(a1, a2);
}

uint64_t sub_1C0B99230(uint64_t a1, uint64_t a2)
{
  return sub_1C0B978DC(a1, a2);
}

uint64_t sub_1C0B99244(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B995D4(a1, a2, a3, (void (*)(_QWORD))MEMORY[0x1E0DC7358]);
}

uint64_t sub_1C0B99250(uint64_t a1, uint64_t a2)
{
  return sub_1C079FB7C(a1, a2);
}

uint64_t sub_1C0B9925C(uint64_t a1, uint64_t a2)
{
  return sub_1C079FB7C(a1, a2);
}

uint64_t sub_1C0B99268(uint64_t a1, uint64_t a2)
{
  return sub_1C079FB7C(a1, a2);
}

uint64_t sub_1C0B99274(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B995D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for SGContactStructs.AddressRelationshipType);
}

uint64_t sub_1C0B99280(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B995D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for SGContactStructs.IdentifierRelationshipType);
}

uint64_t sub_1C0B9928C(uint64_t a1, uint64_t a2)
{
  return sub_1C079FB7C(a1, a2);
}

uint64_t sub_1C0B99298(uint64_t a1, uint64_t a2)
{
  return sub_1C0B98698(a1, a2);
}

uint64_t sub_1C0B992A4()
{
  return sub_1C0B992B0();
}

uint64_t sub_1C0B992B0()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_1C079ACA4();
  if (v0 < 0)
  {
    sub_1C07A3684();
    sub_1C0799658();
  }
  else
  {
    sub_1C079B7AC();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_1C078F7E8();
    sub_1C07A3684();
    sub_1C078782C();
  }
  result = sub_1C079A704();
  __break(1u);
  return result;
}

uint64_t sub_1C0B99338(uint64_t a1, uint64_t a2)
{
  return sub_1C079FB7C(a1, a2);
}

uint64_t sub_1C0B99344(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B995D4(a1, a2, a3, (void (*)(_QWORD))MEMORY[0x1E0DC6798]);
}

uint64_t sub_1C0B99350(uint64_t a1, uint64_t a2)
{
  return sub_1C0B9935C(a1, a2);
}

uint64_t sub_1C0B9935C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  BOOL v7;
  BOOL v8;
  uint64_t result;

  if (a2 < 0)
  {
    sub_1C07A3684();
    sub_1C0799658();
  }
  else
  {
    sub_1C07A48C4();
    if (!v8 && v7)
    {
      v7 = v6 >= v4;
      v8 = v6 == v4;
    }
    else
    {
      v7 = 0;
      v8 = 0;
    }
    if (v8 || !v7)
    {
      sub_1C07A80D4(v2, v3, v4, v5);
      sub_1C07ADED0();
      return sub_1C07A0F54();
    }
    sub_1C07A3684();
    sub_1C078782C();
  }
  result = sub_1C079A704();
  __break(1u);
  return result;
}

uint64_t sub_1C0B993E4(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    sub_1C07A3684();
    sub_1C0799658();
  }
  else
  {
    sub_1C07A27F4();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      sub_1C07ACF80(&qword_1EF640F30);
      sub_1C07ADED0();
      return sub_1C07A0F54();
    }
    sub_1C07A3684();
    sub_1C078782C();
  }
  result = sub_1C079A704();
  __break(1u);
  return result;
}

uint64_t sub_1C0B99474(uint64_t a1, uint64_t a2)
{
  return sub_1C079FB7C(a1, a2);
}

uint64_t sub_1C0B99480(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B995D4(a1, a2, a3, (void (*)(_QWORD))MEMORY[0x1E0D3D608]);
}

uint64_t sub_1C0B9948C(uint64_t a1, uint64_t a2)
{
  return sub_1C0B9783C(a1, a2);
}

uint64_t sub_1C0B99498(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    sub_1C07A3684();
    sub_1C0799658();
  }
  else
  {
    sub_1C07AA8DC();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      sub_1C07ACF80(&qword_1EF640F18);
      sub_1C07ADED0();
      return sub_1C07A0F54();
    }
    sub_1C07A3684();
    sub_1C078782C();
  }
  result = sub_1C079A704();
  __break(1u);
  return result;
}

uint64_t sub_1C0B99528(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B99534(a1, a2, a3, (uint64_t *)&unk_1ED759220);
}

uint64_t sub_1C0B99534(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t *a4)
{
  unint64_t v5;
  BOOL v6;
  BOOL v7;
  uint64_t result;

  if (a2 < 0)
  {
    sub_1C07A3684();
    sub_1C0799658();
  }
  else
  {
    sub_1C07A80D4(a1, a2, a3, a4);
    sub_1C079CE48();
    if (!v7 && v6)
    {
      v6 = v5 >= a3;
      v7 = v5 == a3;
    }
    else
    {
      v6 = 0;
      v7 = 0;
    }
    if (v7 || !v6)
    {
      sub_1C07ADED0();
      return sub_1C07A0F54();
    }
    sub_1C07A3684();
    sub_1C078782C();
  }
  result = sub_1C079A704();
  __break(1u);
  return result;
}

uint64_t sub_1C0B995C8(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C0B995D4(a1, a2, a3, (void (*)(_QWORD))MEMORY[0x1E0D23D70]);
}

uint64_t sub_1C0B995D4(uint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(_QWORD))
{
  unint64_t v5;
  char v6;
  char v7;
  BOOL v8;
  uint64_t result;

  if (a2 < 0)
  {
    sub_1C07A3684();
    sub_1C0799658();
  }
  else
  {
    a4(0);
    sub_1C079CE48();
    if (!v7 & v6)
      v8 = v5 > a3;
    else
      v8 = 0;
    if (!v8)
    {
      sub_1C07ADED0();
      return sub_1C07A0F54();
    }
    sub_1C07A3684();
    sub_1C078782C();
  }
  result = sub_1C079A704();
  __break(1u);
  return result;
}

uint64_t sub_1C0B9966C(uint64_t a1, uint64_t a2)
{
  return sub_1C0B98698(a1, a2);
}

uint64_t sub_1C0B99678(uint64_t a1, uint64_t a2)
{
  return sub_1C0B978DC(a1, a2);
}

uint64_t sub_1C0B9968C(uint64_t a1, uint64_t a2)
{
  return sub_1C0B978DC(a1, a2);
}

uint64_t sub_1C0B996A0()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_1C079ACA4();
  if (v0 < 0)
  {
    sub_1C07A3684();
    sub_1C0799658();
  }
  else
  {
    sub_1C079B7AC();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_1C078F7E8();
    sub_1C07A3684();
    sub_1C078782C();
  }
  result = sub_1C079A704();
  __break(1u);
  return result;
}

id sub_1C0B99730(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, void *a5)
{
  void *v10;
  id v11;

  v10 = (void *)sub_1C106ABF4();
  sub_1C07B3374(a2, a3);
  v11 = objc_msgSend(a5, sel_createFileAtPath_contents_attributes_, a1, v10, a4);

  return v11;
}

unint64_t sub_1C0B997B0()
{
  unint64_t result;

  result = qword_1EF640DF8;
  if (!qword_1EF640DF8)
  {
    result = MEMORY[0x1C3BA8174]("-ŗ&t]\n", &type metadata for InternalXPC.Server.ECRBenchmarkError);
    atomic_store(result, (unint64_t *)&qword_1EF640DF8);
  }
  return result;
}

uint64_t sub_1C0B997EC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for VectorBenchmarkConfig();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1C0B99828()
{
  unint64_t result;

  result = qword_1EF640E18;
  if (!qword_1EF640E18)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A50BC, &type metadata for VectorBenchmarkConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF640E18);
  }
  return result;
}

uint64_t sub_1C0B99864(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for VectorBenchmarkConfig();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for InternalXPC.Server.ECRBenchmarkError()
{
  return &type metadata for InternalXPC.Server.ECRBenchmarkError;
}

uint64_t *initializeBufferWithCopyOfBuffer for VectorBenchmarkConfig(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char *v32;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v30 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a2[5];
    v10 = a3[8];
    v32 = (char *)a1 + v10;
    v11 = (char *)a2 + v10;
    a1[4] = a2[4];
    a1[5] = v9;
    v12 = sub_1C106CDA8();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v13(v32, v11, v12);
    v14 = a3[9];
    v15 = (char *)v4 + v14;
    v16 = (char *)a2 + v14;
    v17 = sub_1C106EDD0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v18 = a3[10];
    v19 = a3[11];
    v20 = (uint64_t *)((char *)v4 + v18);
    v21 = (uint64_t *)((char *)a2 + v18);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = (uint64_t *)((char *)v4 + v19);
    v24 = (uint64_t *)((char *)a2 + v19);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    v26 = a3[12];
    v27 = (uint64_t *)((char *)v4 + v26);
    v28 = (uint64_t *)((char *)a2 + v26);
    v29 = v28[1];
    *v27 = *v28;
    v27[1] = v29;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  return v4;
}

uint64_t destroy for VectorBenchmarkConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 32);
  v5 = sub_1C106CDA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 36);
  v7 = sub_1C106EDD0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for VectorBenchmarkConfig(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  char *v30;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a2[5];
  v9 = a3[8];
  v30 = (char *)a1 + v9;
  v10 = (char *)a2 + v9;
  a1[4] = a2[4];
  a1[5] = v8;
  v11 = sub_1C106CDA8();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v12(v30, v10, v11);
  v13 = a3[9];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_1C106EDD0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  v17 = a3[10];
  v18 = a3[11];
  v19 = (_QWORD *)((char *)a1 + v17);
  v20 = (_QWORD *)((char *)a2 + v17);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v22 = (_QWORD *)((char *)a1 + v18);
  v23 = (_QWORD *)((char *)a2 + v18);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  v25 = a3[12];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (_QWORD *)((char *)a2 + v25);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

_QWORD *assignWithCopy for VectorBenchmarkConfig(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;

  *a1 = *a2;
  a1[1] = a2[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  v6 = a3[8];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C106CDA8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[9];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1C106EDD0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v14 = a3[10];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  v17 = a3[11];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  *v18 = *v19;
  v18[1] = v19[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  v20 = a3[12];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (_QWORD *)((char *)a2 + v20);
  *v21 = *v22;
  v21[1] = v22[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for VectorBenchmarkConfig(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  v8 = a3[8];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1C106CDA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = a3[9];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_1C106EDD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  v16 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  *(_OWORD *)(a1 + v16) = *(_OWORD *)(a2 + v16);
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  return a1;
}

_QWORD *assignWithTake for VectorBenchmarkConfig(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRelease();
  v8 = a3[8];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1C106CDA8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = a3[9];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_1C106EDD0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = a3[10];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  v21 = a3[11];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  v25 = *v23;
  v24 = v23[1];
  *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  v26 = a3[12];
  v27 = (_QWORD *)((char *)a1 + v26);
  v28 = (_QWORD *)((char *)a2 + v26);
  v30 = *v28;
  v29 = v28[1];
  *v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for VectorBenchmarkConfig()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0B99F7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1C07B8000();
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == (_DWORD)a2)
    {
      v9 = v8;
      v10 = *(int *)(a3 + 32);
    }
    else
    {
      v9 = sub_1C07B62AC();
      v10 = *(int *)(a3 + 36);
    }
    return sub_1C07B2D80(a1 + v10, a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for VectorBenchmarkConfig()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0B9A018(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_1C07B8000();
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = *(int *)(a4 + 32);
    }
    else
    {
      v9 = sub_1C07B62AC();
      v10 = *(int *)(a4 + 36);
    }
    return sub_1C07B2D8C(v5 + v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C0B9A0A4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1C106CDA8();
  if (v1 <= 0x3F)
  {
    result = sub_1C106EDD0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for VectorBenchmarkConfig.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1C0B9A1A4 + 4 * byte_1C10A4EA7[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1C0B9A1D8 + 4 * byte_1C10A4EA2[v4]))();
}

uint64_t sub_1C0B9A1D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0B9A1E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0B9A1E8);
  return result;
}

uint64_t sub_1C0B9A1F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0B9A1FCLL);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1C0B9A200(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0B9A208(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VectorBenchmarkConfig.CodingKeys()
{
  return &type metadata for VectorBenchmarkConfig.CodingKeys;
}

unint64_t sub_1C0B9A228()
{
  unint64_t result;

  result = qword_1EF640EE8;
  if (!qword_1EF640EE8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A5094, &type metadata for VectorBenchmarkConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF640EE8);
  }
  return result;
}

unint64_t sub_1C0B9A268()
{
  unint64_t result;

  result = qword_1EF640EF0;
  if (!qword_1EF640EF0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A4FCC, &type metadata for VectorBenchmarkConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF640EF0);
  }
  return result;
}

unint64_t sub_1C0B9A2A8()
{
  unint64_t result;

  result = qword_1EF640EF8;
  if (!qword_1EF640EF8)
  {
    result = MEMORY[0x1C3BA8174]("\rė&p\\\n", &type metadata for VectorBenchmarkConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF640EF8);
  }
  return result;
}

uint64_t sub_1C0B9A2E4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  return swift_deallocObject();
}

uint64_t sub_1C0B9A318()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C0806670;
  v2 = sub_1C077B200();
  return v3(v2);
}

uint64_t InternalXPC.Server.resolveEntity(with:enableSessionLogging:configName:encodedConfig:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v14;

  ObjectType = swift_getObjectType();
  *(_QWORD *)(v6 + 72) = a6;
  *(_QWORD *)(v6 + 80) = ObjectType;
  *(_QWORD *)(v6 + 56) = a4;
  *(_QWORD *)(v6 + 64) = a5;
  *(_BYTE *)(v6 + 176) = a2;
  *(_QWORD *)(v6 + 40) = a1;
  *(_QWORD *)(v6 + 48) = a3;
  sub_1C07ACF80(&qword_1ED7482A8);
  *(_QWORD *)(v6 + 88) = sub_1C0779644();
  *(_QWORD *)(v6 + 96) = sub_1C07ACF80(&qword_1ED75E630);
  *(_QWORD *)(v6 + 104) = sub_1C0779644();
  v14 = sub_1C106EA64();
  *(_QWORD *)(v6 + 112) = v14;
  *(_QWORD *)(v6 + 120) = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v6 + 128) = sub_1C0779644();
  return swift_task_switch();
}

uint64_t sub_1C0B9A460()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  _QWORD *v13;
  uint64_t (*v14)(_QWORD);

  sub_1C0B9A818(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(void (**)(char *, double))(v0 + 64), *(char **)(v0 + 72), *(char **)(v0 + 128));
  if (qword_1ED749400 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 104);
  v2 = sub_1C079E000(*(_QWORD *)(v0 + 96), (uint64_t)qword_1ED7493E0);
  swift_beginAccess();
  sub_1C07B9D5C(v2, v1);
  v3 = type metadata accessor for Configuration();
  result = sub_1C07B2D80(v1, 1, v3);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    if (qword_1ED762808 != -1)
      swift_once();
    v5 = sub_1C0CBD86C();
    *(_QWORD *)(v0 + 136) = v5;
    v7 = *(_QWORD *)(v0 + 120);
    v6 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 112);
    v9 = v5;
    v10 = *(_QWORD *)(v0 + 88);
    sub_1C078D09C(*(_QWORD *)(v0 + 104));
    sub_1C106ED40();
    v11 = *(void **)(v9 + OBJC_IVAR____TtCO24IntelligencePlatformCore14ViewGeneration11ViewClients_viewService);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v10, v6, v8);
    sub_1C07B2D8C(v10, 0, 1, v8);
    v12 = v11;
    *(_QWORD *)(v0 + 144) = sub_1C106ED34();
    v14 = (uint64_t (*)(_QWORD))((int)*MEMORY[0x1E0D3D730] + MEMORY[0x1E0D3D730]);
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v13;
    *v13 = v0;
    v13[1] = sub_1C0B9A6BC;
    return v14(*(_QWORD *)(v0 + 40));
  }
  return result;
}

uint64_t sub_1C0B9A6BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 160) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 168) = a1;
  return swift_task_switch();
}

uint64_t sub_1C0B9A730()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);
  swift_release();
  swift_release();
  sub_1C07A0AC0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_1C07796F8();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 168));
}

uint64_t sub_1C0B9A7A8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);
  swift_release();
  swift_release();
  sub_1C07A0AC0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  swift_task_dealloc();
  sub_1C07796F8();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1C0B9A818(uint64_t a1@<X0>, unint64_t a2@<X1>, void (*a3)(char *, double)@<X2>, char *a4@<X3>, char *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  void (*v35)(char *, double);
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, double);
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t);
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  char *v57;
  uint8_t *v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  uint8_t *v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  id v70;
  id v71;
  NSObject *v72;
  unint64_t v73;
  os_log_type_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint8_t *v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t, uint64_t);
  void (*v84)(char *, uint64_t);
  unsigned int v85;
  void (*v86)(char *, double);
  uint64_t v87;
  char *v88;
  char *v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;

  v91 = a1;
  v88 = a4;
  v89 = a5;
  v86 = a3;
  v87 = sub_1C106E884();
  v6 = *(_QWORD *)(v87 - 8);
  MEMORY[0x1E0C80A78](v87);
  v8 = (char *)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C106FB50();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1C07ACF80(&qword_1ED7482A8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v81 - v17;
  v19 = sub_1C106EA64();
  MEMORY[0x1E0C80A78](v19);
  v24 = MEMORY[0x1E0C80A78](v20);
  if (a2)
  {
    v25 = v23;
    v88 = (char *)&v81 - v21;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v26 = v91;
    sub_1C106EA58();
    if (sub_1C07B2D80((uint64_t)v18, 1, v19) == 1)
    {
      sub_1C0B9B7EC((uint64_t)v18);
      if (qword_1ED75E808 != -1)
        swift_once();
      v27 = sub_1C106F544();
      sub_1C079E000(v27, (uint64_t)qword_1ED78D7A0);
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v28 = sub_1C106F538();
      v29 = sub_1C1070390();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = (uint8_t *)swift_slowAlloc();
        v31 = swift_slowAlloc();
        v93 = v31;
        *(_DWORD *)v30 = 136315138;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v92 = sub_1C0788DAC(v26, a2, &v93);
        sub_1C10705AC();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1C0771000, v28, v29, "Failed to load EntityResolutionConfig with config name: %s", v30, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BA8270](v31, -1, -1);
        MEMORY[0x1C3BA8270](v30, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v48 = sub_1C106E8CC();
      sub_1C07803B8((unint64_t *)&qword_1EF635D68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D1F8], MEMORY[0x1E0D3D200]);
      swift_allocError();
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v48 - 8) + 104))(v49, *MEMORY[0x1E0D3D1E8], v48);
      swift_willThrow();
    }
    else
    {
      v42 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
      v42(v88, v18, v19);
      if (qword_1ED75E808 != -1)
        swift_once();
      v43 = sub_1C106F544();
      sub_1C079E000(v43, (uint64_t)qword_1ED78D7A0);
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v44 = sub_1C106F538();
      v45 = sub_1C1070378();
      if (os_log_type_enabled(v44, v45))
      {
        v46 = (uint8_t *)swift_slowAlloc();
        v47 = swift_slowAlloc();
        v93 = v47;
        *(_DWORD *)v46 = 136315138;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v92 = sub_1C0788DAC(v91, a2, &v93);
        sub_1C10705AC();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1C0771000, v44, v45, "Using EntityResolutionConfig with config name: %s", v46, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BA8270](v47, -1, -1);
        MEMORY[0x1C3BA8270](v46, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v42(v89, v88, v19);
    }
  }
  else
  {
    v32 = (uint64_t)v15;
    v91 = v19;
    v34 = v87;
    v33 = (unint64_t)v88;
    if (v88)
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C106FB44();
      v35 = v86;
      v36 = sub_1C106FB20();
      v38 = v37;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      if (v38 >> 60 == 15)
      {
        v39 = sub_1C106E8CC();
        sub_1C07803B8((unint64_t *)&qword_1EF635D68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D1F8], MEMORY[0x1E0D3D200]);
        v40 = (void *)swift_allocError();
        (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v39 - 8) + 104))(v41, *MEMORY[0x1E0D3D1E8], v39);
        swift_willThrow();
      }
      else
      {
        if (qword_1ED75E808 != -1)
          swift_once();
        v63 = sub_1C106F544();
        sub_1C079E000(v63, (uint64_t)qword_1ED78D7A0);
        swift_bridgeObjectRetain_n();
        v64 = sub_1C106F538();
        v65 = sub_1C1070384();
        if (os_log_type_enabled(v64, v65))
        {
          v87 = v36;
          v66 = (uint8_t *)swift_slowAlloc();
          v67 = swift_slowAlloc();
          v93 = v67;
          *(_DWORD *)v66 = 136315138;
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          v92 = sub_1C0788DAC((uint64_t)v86, v33, &v93);
          v36 = v87;
          sub_1C10705AC();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1C0771000, v64, v65, "Using config from file:\n%s", v66, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C3BA8270](v67, -1, -1);
          MEMORY[0x1C3BA8270](v66, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        v68 = v90;
        sub_1C106A708();
        swift_allocObject();
        sub_1C106A6FC();
        sub_1C07803B8(&qword_1EF640FD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D3A8], MEMORY[0x1E0D3D3B8]);
        sub_1C106A6F0();
        if (!v68)
        {
          swift_release();
          sub_1C07B33B8(v36, v38);
          swift_bridgeObjectRelease();
          return;
        }
        swift_release();
        sub_1C07B33B8(v36, v38);
        v40 = v68;
        v35 = v86;
      }
      if (qword_1ED75E808 != -1)
        swift_once();
      v69 = sub_1C106F544();
      sub_1C079E000(v69, (uint64_t)qword_1ED78D7A0);
      v70 = v40;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v71 = v40;
      v72 = sub_1C106F538();
      v73 = v33;
      v74 = sub_1C1070390();
      if (os_log_type_enabled(v72, v74))
      {
        v75 = swift_slowAlloc();
        v76 = swift_slowAlloc();
        v93 = v76;
        *(_DWORD *)v75 = 136315394;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v92 = sub_1C0788DAC((uint64_t)v35, v73, &v93);
        sub_1C10705AC();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v75 + 12) = 2080;
        swift_getErrorValue();
        v77 = sub_1C1070D74();
        v92 = sub_1C0788DAC(v77, v78, &v93);
        sub_1C10705AC();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1C0771000, v72, v74, "Failed to decode config from \n%s\n with error:\n %s", (uint8_t *)v75, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1C3BA8270](v76, -1, -1);
        MEMORY[0x1C3BA8270](v75, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();

      }
      v79 = sub_1C106E8CC();
      sub_1C07803B8((unint64_t *)&qword_1EF635D68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D1F8], MEMORY[0x1E0D3D200]);
      swift_allocError();
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v79 - 8) + 104))(v80, *MEMORY[0x1E0D3D1E8], v79);
      swift_willThrow();

    }
    else
    {
      v50 = v23;
      v88 = v22;
      v51 = *(void (**)(char *, double))(v6 + 104);
      v85 = *MEMORY[0x1E0D3D180];
      v51(v8, v24);
      sub_1C106E878();
      v84 = *(void (**)(char *, uint64_t))(v6 + 8);
      v84(v8, v34);
      sub_1C106EA58();
      swift_bridgeObjectRelease();
      v52 = v91;
      if (sub_1C07B2D80(v32, 1, v91) == 1)
      {
        sub_1C0B9B7EC(v32);
        sub_1C1070954();
        __break(1u);
      }
      else
      {
        v86 = v51;
        v53 = *(void (**)(char *, uint64_t, uint64_t))(v50 + 32);
        v53(v88, v32, v52);
        if (qword_1ED75E808 != -1)
          swift_once();
        v54 = sub_1C106F544();
        sub_1C079E000(v54, (uint64_t)qword_1ED78D7A0);
        v55 = sub_1C106F538();
        v56 = sub_1C1070378();
        if (os_log_type_enabled(v55, v56))
        {
          v57 = v8;
          v58 = (uint8_t *)swift_slowAlloc();
          v82 = swift_slowAlloc();
          v93 = v82;
          v83 = v53;
          *(_DWORD *)v58 = 136315138;
          v81 = v58 + 4;
          ((void (*)(char *, _QWORD, uint64_t))v86)(v8, v85, v34);
          v59 = sub_1C106E878();
          v61 = v60;
          v84(v57, v34);
          v92 = sub_1C0788DAC(v59, v61, &v93);
          v53 = v83;
          sub_1C10705AC();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C0771000, v55, v56, "Using config with name: %s.", v58, 0xCu);
          v62 = v82;
          swift_arrayDestroy();
          MEMORY[0x1C3BA8270](v62, -1, -1);
          MEMORY[0x1C3BA8270](v58, -1, -1);
        }

        v53(v89, (uint64_t)v88, v52);
      }
    }
  }
}

uint64_t sub_1C0B9B550(void *a1, char a2, uint64_t a3, uint64_t a4, void *aBlock, void *a6)
{
  _QWORD *v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  _QWORD *v17;

  v6[2] = a1;
  v6[3] = a6;
  v6[4] = _Block_copy(aBlock);
  if (a3)
  {
    a3 = sub_1C106FB14();
    v13 = v12;
  }
  else
  {
    v13 = 0;
  }
  v6[5] = v13;
  if (a4)
  {
    a4 = sub_1C106FB14();
    v15 = v14;
  }
  else
  {
    v15 = 0;
  }
  v6[6] = v15;
  v16 = a1;
  a6;
  v17 = (_QWORD *)swift_task_alloc();
  v6[7] = v17;
  *v17 = v6;
  v17[1] = sub_1C0B9B640;
  return InternalXPC.Server.resolveEntity(with:enableSessionLogging:configName:encodedConfig:)((uint64_t)v16, a2 & 1, a3, v13, a4, v15);
}

uint64_t sub_1C0B9B640(void *a1)
{
  void *v1;
  uint64_t *v2;
  void *v3;
  void *v5;
  void *v6;
  uint64_t v7;
  void (**v8)(_QWORD, _QWORD, _QWORD);
  void *v9;

  v3 = v1;
  v6 = *(void **)(*v2 + 16);
  v5 = *(void **)(*v2 + 24);
  v7 = *v2;
  swift_task_dealloc();

  v8 = *(void (***)(_QWORD, _QWORD, _QWORD))(v7 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v3)
  {
    v9 = (void *)sub_1C106AA08();

    ((void (**)(_QWORD, _QWORD, void *))v8)[2](v8, 0, v9);
    _Block_release(v8);
  }
  else
  {
    ((void (**)(_QWORD, void *, _QWORD))v8)[2](v8, a1, 0);
    _Block_release(v8);

  }
  return (*(uint64_t (**)(void))(v7 + 8))();
}

uint64_t sub_1C0B9B718()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 48));
  return swift_deallocObject();
}

uint64_t sub_1C0B9B75C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  _QWORD *v8;

  v2 = *(void **)(v0 + 16);
  v3 = *(_BYTE *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 40);
  v7 = *(void **)(v0 + 48);
  v6 = *(void **)(v0 + 56);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v8;
  *v8 = v1;
  v8[1] = sub_1C0806670;
  return ((uint64_t (*)(void *, char, uint64_t, uint64_t, void *, void *))((char *)&dword_1EF640FC0
                                                                                 + dword_1EF640FC0))(v2, v3, v4, v5, v7, v6);
}

uint64_t sub_1C0B9B7EC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C07ACF80(&qword_1ED7482A8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0B9B82C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_1C0794C48(v0);
  v2 = sub_1C0798BE8(v1);
  return sub_1C0C06580(v2);
}

uint64_t sub_1C0B9B870(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  sub_1C07A5EC4(a1, a2, a3);
  v3 = swift_task_alloc();
  v4 = (_QWORD *)sub_1C0795B08(v3);
  v5 = sub_1C0798BE8(v4);
  return sub_1C0A5C9C4(v5);
}

uint64_t sub_1C0B9B8B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C07A0F64();
  if (!v1)
    return sub_1C0795770(*(uint64_t (**)(void))(v2 + 8));
  if (*(_QWORD *)(v0 + 24))
  {
    sub_1C078F7F0();
    sub_1C07B4264();
    sub_1C079C6A8();
  }
  else
  {
    sub_1C07930C0();
  }
  return sub_1C0789D28();
}

uint64_t sub_1C0B9B90C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  sub_1C07A5EC4(a1, a2, a3);
  v3 = swift_task_alloc();
  v4 = (_QWORD *)sub_1C0795B08(v3);
  v5 = sub_1C0798BE8(v4);
  return sub_1C0D7185C(v5);
}

uint64_t sub_1C0B9B950()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_1C0794C48(v0);
  v2 = sub_1C0798BE8(v1);
  return sub_1C0CE0834(v2);
}

uint64_t sub_1C0B9B994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  sub_1C07A5EC4(a1, a2, a3);
  v3 = swift_task_alloc();
  v4 = (_QWORD *)sub_1C0795B08(v3);
  v5 = sub_1C0798BE8(v4);
  return sub_1C0BD1FC0(v5);
}

uint64_t sub_1C0B9B9D8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = v1;
  sub_1C07ACF80(qword_1ED74BC78);
  v2[4] = sub_1C0779D74();
  v2[5] = type metadata accessor for InferredActivitySegment();
  v2[6] = sub_1C0779D74();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0B9BA2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (*(_QWORD *)(*(_QWORD *)(v3 + 24) + 8))
  {
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v3 + 56) = v4;
    *v4 = v3;
    v4[1] = sub_1C0B9BAD0;
    return sub_1C078CB74(*(_QWORD *)(v3 + 32));
  }
  else
  {
    sub_1C077A2C4(*(_QWORD *)(v3 + 32), a2, a3, *(_QWORD *)(v3 + 40));
    sub_1C0784B6C(*(_QWORD *)(v3 + 32), qword_1ED74BC78);
    v6 = sub_1C07ACF80(&qword_1ED74AFB0);
    sub_1C077A2C4(*(_QWORD *)(v3 + 16), v7, v8, v6);
    swift_task_dealloc();
    sub_1C07796F8();
    return sub_1C0795770(*(uint64_t (**)(void))(v3 + 8));
  }
}

uint64_t sub_1C0B9BAD0()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  sub_1C07878A8(&v2);
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0B9BB14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  if (sub_1C07B2D80(v1, 1, v2) == 1)
  {
    sub_1C0784B6C(v1, qword_1ED74BC78);
    v3 = sub_1C07ACF80(&qword_1ED74AFB0);
    v4 = 1;
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 48);
    v6 = *(_QWORD *)(v0 + 16);
    sub_1C0806854(v1, v5, (uint64_t (*)(_QWORD))type metadata accessor for InferredActivitySegment);
    v7 = sub_1C106ADE0();
    v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(v6, v5, v7);
    v9 = v5 + *(int *)(v2 + 20);
    v3 = sub_1C07ACF80(&qword_1ED74AFB0);
    v8(v6 + *(int *)(v3 + 28), v9, v7);
    sub_1C0806854(v5, v6 + *(int *)(v3 + 32), (uint64_t (*)(_QWORD))type metadata accessor for InferredActivitySegment);
    v4 = 0;
  }
  sub_1C07B2D8C(*(_QWORD *)(v0 + 16), v4, 1, v3);
  sub_1C07796F8();
  sub_1C07758BC();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C0B9BC44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  sub_1C07A5EC4(a1, a2, a3);
  v3 = swift_task_alloc();
  v4 = (_QWORD *)sub_1C0795B08(v3);
  v5 = sub_1C0798BE8(v4);
  return sub_1C0A29A24(v5);
}

uint64_t sub_1C0B9BC88()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_1C0794C48(v0);
  v2 = sub_1C0798BE8(v1);
  return sub_1C07E2A18(v2);
}

uint64_t sub_1C0B9BCCC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_1C0794C48(v0);
  v2 = sub_1C0798BE8(v1);
  return sub_1C0C44F34(v2);
}

uint64_t sub_1C0B9BD10()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_1C0794C48(v0);
  v2 = sub_1C0798BE8(v1);
  return sub_1C0C3F42C(v2);
}

uint64_t sub_1C0B9BD54()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_1C0794C48(v0);
  v2 = sub_1C0798BE8(v1);
  return sub_1C0C095F4(v2);
}

uint64_t sub_1C0B9BD98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  sub_1C07A5EC4(a1, a2, a3);
  v3 = swift_task_alloc();
  v4 = (_QWORD *)sub_1C0795B08(v3);
  v5 = sub_1C0798BE8(v4);
  return sub_1C08F67B8(v5);
}

uint64_t sub_1C0B9BDDC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_1C0794C48(v0);
  v2 = sub_1C0798BE8(v1);
  return sub_1C0C84C94(v2);
}

uint64_t sub_1C0B9BE20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  sub_1C07A5EC4(a1, a2, a3);
  v3 = swift_task_alloc();
  v4 = (_QWORD *)sub_1C0795B08(v3);
  v5 = sub_1C0798BE8(v4);
  return sub_1C0D72010(v5);
}

uint64_t sub_1C0B9BE64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C07A0F64();
  if (!v1)
    return sub_1C0795770(*(uint64_t (**)(void))(v2 + 8));
  if (*(_QWORD *)(v0 + 24))
  {
    sub_1C078F7F0();
    sub_1C07B4264();
    sub_1C079C6A8();
  }
  else
  {
    sub_1C07930C0();
  }
  return sub_1C0789D28();
}

uint64_t sub_1C0B9BEBC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 48);
  sub_1C07ACF80(&qword_1ED7614F0);
  swift_willThrowTypedImpl();
  return sub_1C077CF28(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0B9BF0C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_1C0794C48(v0);
  v2 = sub_1C0798BE8(v1);
  return sub_1C0C7FD8C(v2);
}

uint64_t sub_1C0B9BF50()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_1C0794C48(v0);
  v2 = sub_1C0798BE8(v1);
  return sub_1C0CB4C58(v2);
}

uint64_t sub_1C0B9BF94()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_1C0794C48(v0);
  v2 = sub_1C0798BE8(v1);
  return sub_1C0C03C40(v2);
}

uint64_t sub_1C0B9BFD8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_1C0794C48(v0);
  v2 = sub_1C0798BE8(v1);
  return sub_1C078CB74(v2);
}

void sub_1C0B9C014()
{
  sub_1C0793D20();
  sub_1C0780490();
  sub_1C0778534();
}

uint64_t sub_1C0B9C050(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0B9C078 + 4 * byte_1C10A5110[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_1C0B9C080()
{
  return sub_1C079E64C();
}

uint64_t sub_1C0B9C090(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0B9C0B8 + 4 * byte_1C10A5114[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_1C0B9C0C0()
{
  return sub_1C079E64C();
}

void sub_1C0B9C0D0()
{
  sub_1C08C4E14();
}

void sub_1C0B9C0DC()
{
  sub_1C0A53F78();
}

void sub_1C0B9C0E4()
{
  sub_1C08C9444();
}

void sub_1C0B9C0EC()
{
  sub_1C0A54574();
}

void sub_1C0B9C0F4(_BYTE *a1@<X8>)
{
  char v2;

  sub_1C0B9C014();
  *a1 = v2;
}

void sub_1C0B9C120(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t v3;

  *a1 = sub_1C0B9C050(*v1);
  a1[1] = v3;
  sub_1C0778534();
}

uint64_t sub_1C0B9C144()
{
  unsigned __int8 *v0;

  return sub_1C0B9C090(*v0);
}

uint64_t sub_1C0B9C14C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C0B9C04C();
  *a1 = result;
  return result;
}

uint64_t sub_1C0B9C170()
{
  sub_1C0B9E568();
  return sub_1C1070EE8();
}

uint64_t sub_1C0B9C198()
{
  sub_1C0B9E568();
  return sub_1C1070EF4();
}

uint64_t sub_1C0B9C1C0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  sub_1C07ACF80(&qword_1EF641120);
  sub_1C077AE7C();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0778544();
  sub_1C07A9480(a1, a1[3]);
  sub_1C0B9E568();
  sub_1C1070EB8();
  sub_1C1070B7C();
  if (!v2)
  {
    type metadata accessor for ActivityEventWithLocations(0);
    sub_1C07ACF80(&qword_1ED74AF90);
    type metadata accessor for ActivityEventContent(0);
    sub_1C0794BAC(&qword_1EF641130, type metadata accessor for ActivityEventContent, (uint64_t)&protocol conformance descriptor for ActivityEventContent);
    sub_1C077F744();
    type metadata accessor for SourceIdPrefix();
    sub_1C0794BAC(&qword_1EF641138, (uint64_t (*)(uint64_t))type metadata accessor for SourceIdPrefix, (uint64_t)&protocol conformance descriptor for SourceIdPrefix);
    sub_1C077F744();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v1);
}

void sub_1C0B9C360()
{
  sub_1C0793D20();
  sub_1C0780490();
  sub_1C0778534();
}

uint64_t sub_1C0B9C39C(char a1)
{
  if (!a1)
    return sub_1C079B7BC();
  if (a1 == 1)
    return 0x65746144646E65;
  return 0x746E65746E6F63;
}

uint64_t sub_1C0B9C3E0(_QWORD *a1)
{
  return sub_1C0B9C1C0(a1);
}

void sub_1C0B9C3F4(char *a1, char *a2)
{
  sub_1C08C5F44(*a1, *a2);
}

void sub_1C0B9C400()
{
  sub_1C0A53F84();
}

uint64_t sub_1C0B9C408()
{
  return sub_1C08C9964();
}

void sub_1C0B9C410()
{
  sub_1C0A546FC();
}

void sub_1C0B9C418(_BYTE *a1@<X8>)
{
  char v2;

  sub_1C0B9C360();
  *a1 = v2;
}

void sub_1C0B9C444(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t v3;

  *a1 = sub_1C0B9C39C(*v1);
  a1[1] = v3;
  sub_1C0778534();
}

uint64_t sub_1C0B9C468()
{
  char *v0;

  return sub_1C0B9C39C(*v0);
}

uint64_t sub_1C0B9C470@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C0B9C398();
  *a1 = result;
  return result;
}

void sub_1C0B9C494(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1C0B9C4A0()
{
  sub_1C0794BAC(&qword_1EF640FE8, (uint64_t (*)(uint64_t))sub_1C0B9C778, (uint64_t)&unk_1C10A5468);
  return sub_1C1070EE8();
}

uint64_t sub_1C0B9C4E0()
{
  sub_1C0794BAC(&qword_1EF640FE8, (uint64_t (*)(uint64_t))sub_1C0B9C778, (uint64_t)&unk_1C10A5468);
  return sub_1C1070EF4();
}

void SessionDataComplying<A>.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1C07ACF80(&qword_1ED762590);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  sub_1C0778564();
  v6 = v5 - v4;
  v7 = sub_1C07ACF80(&qword_1EF640FD8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  sub_1C0778544();
  sub_1C07A9480(a1, a1[3]);
  sub_1C0B9C778(0, v9, v10, v11);
  sub_1C0794BAC(&qword_1EF640FE8, (uint64_t (*)(uint64_t))sub_1C0B9C778, (uint64_t)&unk_1C10A5468);
  sub_1C1070EB8();
  sub_1C106AEC4();
  sub_1C106AEF4();
  sub_1C077B8A4();
  sub_1C106AC84();
  sub_1C0784B6C(v6, &qword_1ED762590);
  sub_1C1070B7C();
  if (v12)
  {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1, v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1C07ACF80(&qword_1ED74AFB8);
    sub_1C106AEC4();
    sub_1C077B8A4();
    sub_1C106AC84();
    sub_1C0784B6C(v6, &qword_1ED762590);
    sub_1C1070B7C();
    swift_bridgeObjectRelease();
    type metadata accessor for ActivityEventWithLocations(0);
    sub_1C0794BAC(&qword_1EF640FF0, type metadata accessor for ActivityEventWithLocations, (uint64_t)&unk_1C10A5440);
    sub_1C1070BB8();
    sub_1C079F65C();
  }
  sub_1C07757D0();
}

void sub_1C0B9C778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v5;

  if (!qword_1EF640FE0)
  {
    v4 = _s10CodingKeysOMa_0(0, a2, a3, a4);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1EF640FE0);
  }
}

uint64_t _s10CodingKeysOMa_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0802884(a1, a2, a3, a4, (uint64_t)&_s10CodingKeysOMn_0);
}

void sub_1C0B9C7C4()
{
  sub_1C0793D20();
  sub_1C0780490();
  sub_1C0778534();
}

uint64_t sub_1C0B9C800()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1C07AAFB4();
  return ((uint64_t (*)(uint64_t))((char *)sub_1C0B9C824 + 4 * byte_1C10A5118[v1]))(v0);
}

uint64_t sub_1C0B9C830()
{
  return 0x617461646174656DLL;
}

uint64_t sub_1C0B9C848()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1C07AAFB4();
  return ((uint64_t (*)(uint64_t))((char *)sub_1C0B9C86C + 4 * byte_1C10A511D[v1]))(v0);
}

uint64_t sub_1C0B9C878()
{
  return 0x617461646174656DLL;
}

void sub_1C0B9C890(_QWORD *a1)
{
  SessionDataComplying<A>.encode(to:)(a1);
}

void sub_1C0B9C8A4()
{
  sub_1C08C6390();
}

void sub_1C0B9C8B0()
{
  unsigned __int8 *v0;

  sub_1C0A53F90(*v0);
}

void sub_1C0B9C8B8()
{
  sub_1C08C9B80();
}

void sub_1C0B9C8C0(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1C0A5480C(a1, *v1);
}

void sub_1C0B9C8C8(_BYTE *a1@<X8>)
{
  char v2;

  sub_1C0B9C7C4();
  *a1 = v2;
}

void sub_1C0B9C8F4(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = sub_1C0B9C800();
  a1[1] = v2;
  sub_1C0778534();
}

uint64_t sub_1C0B9C918()
{
  return sub_1C0B9C848();
}

uint64_t sub_1C0B9C920@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C0B9C7FC();
  *a1 = result;
  return result;
}

uint64_t sub_1C0B9C944()
{
  sub_1C0B9CD18();
  return sub_1C1070EE8();
}

uint64_t sub_1C0B9C96C()
{
  sub_1C0B9CD18();
  return sub_1C1070EF4();
}

void ActivityEventContent.init(from:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  type metadata accessor for SourceIdPrefix();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  sub_1C077962C();
  v6 = sub_1C07ACF80(&qword_1EF640FF8);
  MEMORY[0x1E0C80A78](v6);
  sub_1C07785B8();
  v15 = type metadata accessor for ActivityEventContent(0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  sub_1C0778564();
  v10 = v9 - v8;
  *(_QWORD *)(v10 + 8) = 0;
  *(_BYTE *)(v10 + 16) = 1;
  *(_OWORD *)(v10 + 24) = 0u;
  v16 = v10;
  v17 = v10 + 24;
  *(_OWORD *)(v10 + 40) = 0u;
  sub_1C07850C8();
  sub_1C1070E94();
  if (v2)
  {
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(a1);
    sub_1C0784B6C(v17, &qword_1ED760400);
  }
  else
  {
    sub_1C0B9CD54();
    sub_1C1070AE0();
    *(_BYTE *)v16 = v18;
    LOBYTE(v18) = 1;
    sub_1C0794BAC(&qword_1EF641010, (uint64_t (*)(uint64_t))type metadata accessor for SourceIdPrefix, (uint64_t)&protocol conformance descriptor for SourceIdPrefix);
    sub_1C1070AE0();
    sub_1C0806854(v3, v16 + *(int *)(v15 + 32), (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
    sub_1C079BF70(2);
    *(_QWORD *)(v16 + 8) = sub_1C1070A74();
    *(_BYTE *)(v16 + 16) = v11 & 1;
    sub_1C07ACF80(&qword_1EF641018);
    sub_1C0B9D1D4(&qword_1EF641020, (uint64_t (*)(void))sub_1C0B9CD90, MEMORY[0x1E0DEAF40]);
    sub_1C1070A8C();
    v12 = MEMORY[0x1E0DEE9D8];
    if (v18)
      v12 = v18;
    *(_QWORD *)(v16 + 56) = v12;
    sub_1C0A61130();
    sub_1C1070A8C();
    if (v19)
    {
      sub_1C078B160();
      sub_1C078E108();
    }
    else
    {
      sub_1C079BF70(4);
      sub_1C1070A5C();
      if (v13)
      {
        sub_1C07B18A4();
        sub_1C078E108();
      }
      else
      {
        sub_1C07B18A4();
      }
    }
    sub_1C0B9CDCC(v16, a2);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(a1);
    sub_1C07B1F90(v16, type metadata accessor for ActivityEventContent);
  }
  sub_1C07757D0();
}

unint64_t sub_1C0B9CD18()
{
  unint64_t result;

  result = qword_1EF641000;
  if (!qword_1EF641000)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A53F0, &_s10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF641000);
  }
  return result;
}

unint64_t sub_1C0B9CD54()
{
  unint64_t result;

  result = qword_1EF641008;
  if (!qword_1EF641008)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for ActivityType, &type metadata for ActivityType);
    atomic_store(result, (unint64_t *)&qword_1EF641008);
  }
  return result;
}

unint64_t sub_1C0B9CD90()
{
  unint64_t result;

  result = qword_1EF641028;
  if (!qword_1EF641028)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for ActivityEventPerson, &type metadata for ActivityEventPerson);
    atomic_store(result, (unint64_t *)&qword_1EF641028);
  }
  return result;
}

uint64_t sub_1C0B9CDCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ActivityEventContent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void ActivityEventContent.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;

  sub_1C07ACF80(&qword_1ED754EC0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  sub_1C0778564();
  v19 = v7 - v6;
  v8 = type metadata accessor for GamingActivityEvent();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v9);
  sub_1C07785B8();
  sub_1C07ACF80(&qword_1EF641030);
  sub_1C077AE7C();
  MEMORY[0x1E0C80A78](v10);
  sub_1C077962C();
  sub_1C07850C8();
  sub_1C1070EB8();
  LOBYTE(v20[0]) = *(_BYTE *)v1;
  sub_1C0B9D198();
  sub_1C1070BB8();
  if (v22)
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v0);
    goto LABEL_5;
  }
  v22 = v4;
  LOBYTE(v20[0]) = 2;
  sub_1C1070B4C();
  v20[0] = *(_QWORD *)(v1 + 56);
  sub_1C07ACF80(&qword_1EF641018);
  sub_1C0B9D1D4(&qword_1EF641040, (uint64_t (*)(void))sub_1C0B9D23C, MEMORY[0x1E0DEAF10]);
  v11 = sub_1C1070B64();
  sub_1C07B97E0(v11, v12, &qword_1ED760400);
  if (!v21)
  {
    sub_1C0784B6C((uint64_t)v20, &qword_1ED760400);
    sub_1C0779800(v19, 1);
LABEL_10:
    sub_1C0784B6C(v19, &qword_1ED754EC0);
    sub_1C07B97E0(v14, v15, &qword_1ED760400);
    if (v21)
    {
      v16 = v0;
      v17 = swift_dynamicCast();
      v18 = v22;
      if ((v17 & 1) != 0)
      {
        LOBYTE(v20[0]) = 4;
        sub_1C1070B7C();
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v3, v16);
        swift_bridgeObjectRelease();
        goto LABEL_5;
      }
    }
    else
    {
      v16 = v0;
      sub_1C0784B6C((uint64_t)v20, &qword_1ED760400);
      v18 = v22;
    }
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v3, v16);
    goto LABEL_5;
  }
  v13 = swift_dynamicCast();
  sub_1C0779800(v19, v13 ^ 1u);
  if (sub_1C07B2D80(v19, 1, v8) == 1)
    goto LABEL_10;
  sub_1C0806854(v19, v2, (uint64_t (*)(_QWORD))type metadata accessor for GamingActivityEvent);
  LOBYTE(v20[0]) = 4;
  sub_1C0794BAC(&qword_1EF641050, (uint64_t (*)(uint64_t))type metadata accessor for GamingActivityEvent, (uint64_t)&unk_1C1099198);
  sub_1C1070BB8();
  sub_1C07B1F90(v2, (uint64_t (*)(_QWORD))type metadata accessor for GamingActivityEvent);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v3, v0);
LABEL_5:
  sub_1C07757D0();
}

unint64_t sub_1C0B9D198()
{
  unint64_t result;

  result = qword_1EF641038;
  if (!qword_1EF641038)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for ActivityType, &type metadata for ActivityType);
    atomic_store(result, (unint64_t *)&qword_1EF641038);
  }
  return result;
}

uint64_t sub_1C0B9D1D4(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = sub_1C07D4BEC(&qword_1EF641018);
    v8 = a2();
    result = MEMORY[0x1C3BA8174](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C0B9D23C()
{
  unint64_t result;

  result = qword_1EF641048;
  if (!qword_1EF641048)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for ActivityEventPerson, &type metadata for ActivityEventPerson);
    atomic_store(result, (unint64_t *)&qword_1EF641048);
  }
  return result;
}

void sub_1C0B9D278(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  ActivityEventContent.init(from:)(a1, a2);
}

void sub_1C0B9D28C()
{
  ActivityEventContent.encode(to:)();
}

uint64_t InternalXPC.Server.generateActivityCentricLifeEvents(fromStart:toEnd:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[39] = a1;
  v2[40] = a2;
  v2[41] = sub_1C07ACF80(&qword_1ED74AFB8);
  v2[42] = sub_1C0779D74();
  sub_1C07ACF80((uint64_t *)&unk_1ED74AFC0);
  v2[43] = sub_1C0779D74();
  v2[44] = sub_1C07ACF80(&qword_1ED759DF0);
  v2[45] = sub_1C0786414();
  v2[46] = swift_task_alloc();
  v2[47] = sub_1C07ACF80(&qword_1ED75D0B8);
  v2[48] = sub_1C0786414();
  v2[49] = swift_task_alloc();
  v2[50] = sub_1C07ACF80(&qword_1ED75E630);
  v2[51] = sub_1C0779D74();
  sub_1C106A72C();
  v2[52] = sub_1C0779D74();
  v3 = sub_1C106F544();
  v2[53] = v3;
  v2[54] = *(_QWORD *)(v3 - 8);
  v2[55] = swift_task_alloc();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0B9D390()
{
  uint64_t *v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1C106F154();
  v1 = sub_1C106F538();
  v2 = sub_1C1070384();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_1C0771000, v1, v2, "InternalXPC: Life Events generateActivityCentricLifeEvents", v3, 2u);
    MEMORY[0x1C3BA8270](v3, -1, -1);
  }
  v5 = v0[54];
  v4 = v0[55];
  v6 = v0[53];

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  sub_1C106A774();
  swift_allocObject();
  v0[56] = sub_1C106A768();
  sub_1C106A720();
  sub_1C106A738();
  if (qword_1ED749400 != -1)
    swift_once();
  v7 = v0[51];
  v8 = sub_1C079E000(v0[50], (uint64_t)qword_1ED7493E0);
  swift_beginAccess();
  sub_1C0835044(v8, v7, &qword_1ED75E630);
  v9 = type metadata accessor for Configuration();
  result = sub_1C07B2D80(v7, 1, v9);
  if ((_DWORD)result != 1)
  {
    v11 = v0[51];
    type metadata accessor for LifeEventProvider();
    sub_1C0BD17D8(v11);
    v12 = sub_1C106ADE0();
    sub_1C0794BAC((unint64_t *)&qword_1ED755A40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
    result = sub_1C106FA84();
    if ((result & 1) != 0)
    {
      v13 = v0[48];
      v26 = v0[49];
      v14 = v0[46];
      v25 = v0[47];
      v15 = v0[44];
      v16 = v0[45];
      v17 = v0[40];
      v18 = v14 + *(int *)(v15 + 48);
      v19 = *(_QWORD *)(v12 - 8);
      sub_1C07974A8(v14, v0[39]);
      sub_1C07974A8(v18, v17);
      v20 = v16 + *(int *)(v15 + 48);
      sub_1C07974A8(v16, v14);
      sub_1C07974A8(v20, v18);
      sub_1C07974A8(v13, v16);
      v21 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
      v21(v20, v12);
      v22 = v16 + *(int *)(v15 + 48);
      sub_1C07974A8(v16, v14);
      sub_1C07974A8(v22, v18);
      sub_1C07974A8(v13 + *(int *)(v25 + 36), v22);
      v21(v16, v12);
      sub_1C08352A4(v13, v26, &qword_1ED75D0B8);
      sub_1C0BD19E4(v26, (uint64_t)(v0 + 13));
      sub_1C0784B6C(v0[49], &qword_1ED75D0B8);
      swift_release();
      memcpy(v0 + 2, v0 + 13, 0x58uLL);
      sub_1C0B9E1E0((uint64_t)(v0 + 2), (uint64_t)(v0 + 24));
      v23 = (_QWORD *)swift_task_alloc();
      v0[57] = (uint64_t)v23;
      v24 = sub_1C0789B1C(v23);
      return sub_1C0BD1FC0(v24);
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0B9D7A4()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  sub_1C077E88C();
  sub_1C07878A8(v2);
  if (v1)
  {
    v0[60] = MEMORY[0x1E0DEE9D8];
    v0[61] = v1;
  }
  else
  {
    v0[58] = MEMORY[0x1E0DEE9D8];
    v0[59] = 0;
  }
  sub_1C077862C();
  return sub_1C0789D28();
}

uint64_t sub_1C0B9D7FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 344);
  v2 = *(_QWORD *)(v0 + 328);
  if (sub_1C07B2D80(v1, 1, v2) == 1)
  {
    swift_release();
    sub_1C0B9E21C(v0 + 192);
    sub_1C0B9E21C(v0 + 16);
    v3 = *(_QWORD *)(v0 + 464);
    swift_task_dealloc();
    sub_1C07796F8();
    sub_1C07758BC();
    sub_1C0779D18();
    sub_1C077C104();
    sub_1C07767D4();
    sub_1C0778638();
    sub_1C0786388();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 336);
    sub_1C08352A4(v1, v5, &qword_1ED74AFB8);
    v6 = *(int *)(v2 + 32);
    v7 = v5 + *(int *)(type metadata accessor for ActivityEventWithLocations(0) + 24) + v6;
    if (*(unsigned __int8 *)(v7 + *(int *)(sub_1C07ACF80(&qword_1ED74AF90) + 32)) != 128)
      __asm { BR              X19 }
    sub_1C0784B6C(*(_QWORD *)(v0 + 336), &qword_1ED74AFB8);
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 496) = v8;
    v9 = sub_1C0789B1C(v8);
    return sub_1C0BD1FC0(v9);
  }
}

uint64_t sub_1C0B9DDDC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 304) = *(_QWORD *)(v0 + 488);
  sub_1C07ACF80(&qword_1ED7614F0);
  swift_willThrowTypedImpl();
  swift_bridgeObjectRelease();
  sub_1C077862C();
  return sub_1C0789D28();
}

uint64_t sub_1C0B9DE38()
{
  uint64_t v0;

  swift_release();
  sub_1C0B9E21C(v0 + 192);
  sub_1C0B9E21C(v0 + 16);
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C07767D4();
  sub_1C0778638();
  sub_1C0786388();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C0B9DEEC()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  sub_1C077E88C();
  sub_1C07878A8(v2);
  if (v1)
  {
    v0[60] = v0[58];
    v0[61] = v1;
  }
  else
  {
    v0[59] = 0;
  }
  sub_1C077862C();
  return sub_1C0789D28();
}

uint64_t sub_1C0B9DF40()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  sub_1C077E88C();
  sub_1C07878A8(v2);
  v3 = v0[63];
  if (v1)
  {
    v0[60] = v3;
    v0[61] = v1;
  }
  else
  {
    v0[58] = v3;
    v0[59] = 0;
  }
  sub_1C077862C();
  return sub_1C0789D28();
}

uint64_t sub_1C0B9E00C(uint64_t a1, uint64_t a2, const void *a3, void *a4)
{
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  _QWORD *v11;

  v4[2] = a4;
  v7 = sub_1C106ADE0();
  v4[3] = v7;
  v4[4] = *(_QWORD *)(v7 - 8);
  v8 = swift_task_alloc();
  v4[5] = v8;
  v9 = swift_task_alloc();
  v4[6] = v9;
  v4[7] = _Block_copy(a3);
  sub_1C106AD98();
  sub_1C106AD98();
  v10 = a4;
  v11 = (_QWORD *)swift_task_alloc();
  v4[8] = v11;
  *v11 = v4;
  v11[1] = sub_1C0B9E0E8;
  return InternalXPC.Server.generateActivityCentricLifeEvents(fromStart:toEnd:)(v9, v8);
}

uint64_t sub_1C0B9E0E8()
{
  void *v0;
  _QWORD *v1;
  void *v2;
  _QWORD *v3;
  void *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void (**v12)(_QWORD, _QWORD, _QWORD);
  _QWORD *v14;

  v2 = v0;
  v3 = (_QWORD *)*v1;
  v14 = v3;
  v4 = (void *)v3[2];
  v5 = (_QWORD *)*v1;
  sub_1C07878A8(&v14);

  v6 = v3[6];
  v7 = v3[3];
  v8 = *(void (**)(uint64_t, uint64_t))(v3[4] + 8);
  v8(v3[5], v7);
  v8(v6, v7);
  if (v0)
  {
    v9 = sub_1C106AA08();

    v10 = 0;
    v11 = (void *)v9;
  }
  else
  {
    v10 = sub_1C106FEEC();
    swift_bridgeObjectRelease();
    v9 = 0;
    v11 = (void *)v10;
  }
  v12 = (void (**)(_QWORD, _QWORD, _QWORD))v3[7];
  v12[2](v12, v10, v9);

  _Block_release(v12);
  sub_1C0779D18();
  sub_1C077C104();
  return ((uint64_t (*)(void))v5[1])();
}

uint64_t sub_1C0B9E1E0(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for LifeEventProviderAsyncSequence(a2, a1);
  return a2;
}

uint64_t sub_1C0B9E21C(uint64_t a1)
{
  destroy for LifeEventProviderAsyncSequence(a1);
  return a1;
}

unint64_t sub_1C0B9E250()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF641068[0];
  if (!qword_1EF641068[0])
  {
    v1 = sub_1C07D4BEC(&qword_1ED74AFB8);
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for <A> SessionDataComplying<A>, v1);
    atomic_store(result, qword_1EF641068);
  }
  return result;
}

uint64_t _s10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1C0B9E2E0 + 4 * byte_1C10A514A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1C0B9E314 + 4 * byte_1C10A5145[v4]))();
}

uint64_t sub_1C0B9E314(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0B9E31C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0B9E324);
  return result;
}

uint64_t sub_1C0B9E330(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0B9E338);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1C0B9E33C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0B9E344(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s10CodingKeysOMa()
{
  return &_s10CodingKeysON;
}

uint64_t sub_1C0B9E360()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1C0B9E368(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C0B9E3B4 + 4 * byte_1C10A5154[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C0B9E3E8 + 4 * byte_1C10A514F[v4]))();
}

uint64_t sub_1C0B9E3E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0B9E3F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0B9E3F8);
  return result;
}

uint64_t sub_1C0B9E404(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0B9E40CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C0B9E410(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0B9E418(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1C0B9E424()
{
  sub_1C0794BAC(&qword_1EF6410F0, (uint64_t (*)(uint64_t))sub_1C0B9C778, (uint64_t)&unk_1C10A52D8);
}

unint64_t sub_1C0B9E454()
{
  unint64_t result;

  result = qword_1EF6410F8;
  if (!qword_1EF6410F8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A53C8, &_s10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF6410F8);
  }
  return result;
}

unint64_t sub_1C0B9E494()
{
  unint64_t result;

  result = qword_1EF641100;
  if (!qword_1EF641100)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A5300, &_s10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF641100);
  }
  return result;
}

unint64_t sub_1C0B9E4D4()
{
  unint64_t result;

  result = qword_1EF641108;
  if (!qword_1EF641108)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A5328, &_s10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF641108);
  }
  return result;
}

void sub_1C0B9E510()
{
  sub_1C0794BAC(&qword_1EF641110, (uint64_t (*)(uint64_t))sub_1C0B9C778, (uint64_t)&unk_1C10A5210);
}

void sub_1C0B9E53C()
{
  sub_1C0794BAC(&qword_1EF641118, (uint64_t (*)(uint64_t))sub_1C0B9C778, (uint64_t)&unk_1C10A5238);
}

unint64_t sub_1C0B9E568()
{
  unint64_t result;

  result = qword_1EF641128;
  if (!qword_1EF641128)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A55A8, &_s10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EF641128);
  }
  return result;
}

uint64_t sub_1C0B9E5A4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 32));
  return swift_deallocObject();
}

uint64_t sub_1C0B9E5E0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  const void *v5;
  _QWORD *v6;

  v2 = v0[2];
  v3 = v0[3];
  v5 = (const void *)v0[4];
  v4 = (void *)v0[5];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_1C0776FE4;
  return ((uint64_t (*)(uint64_t, uint64_t, const void *, void *))((char *)&dword_1EF641190 + dword_1EF641190))(v2, v3, v5, v4);
}

uint64_t _s10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1C0B9E6A4 + 4 * byte_1C10A515E[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1C0B9E6D8 + 4 * byte_1C10A5159[v4]))();
}

uint64_t sub_1C0B9E6D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0B9E6E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0B9E6E8);
  return result;
}

uint64_t sub_1C0B9E6F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0B9E6FCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1C0B9E700(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0B9E708(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s10CodingKeysOMa_1()
{
  return &_s10CodingKeysON_0;
}

unint64_t sub_1C0B9E728()
{
  unint64_t result;

  result = qword_1EF6411A8;
  if (!qword_1EF6411A8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A5580, &_s10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EF6411A8);
  }
  return result;
}

unint64_t sub_1C0B9E768()
{
  unint64_t result;

  result = qword_1EF6411B0;
  if (!qword_1EF6411B0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A54B8, &_s10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EF6411B0);
  }
  return result;
}

unint64_t sub_1C0B9E7A8()
{
  unint64_t result;

  result = qword_1EF6411B8;
  if (!qword_1EF6411B8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A54E0, &_s10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EF6411B8);
  }
  return result;
}

uint64_t sub_1C0B9E7EC(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  void (*v9)(__int128 *, _QWORD);
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v21 = sub_1C07ACF80(&qword_1EF6412E8);
  MEMORY[0x1E0C80A78](v21);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1C106C6C4();
  v19 = *(_QWORD *)(v4 - 8);
  v20 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = a1;
  sub_1C07803F8(&qword_1EF6412F0, (void (*)(uint64_t))MEMORY[0x1E0D24538]);
  v7 = sub_1C10702D0();
  result = MEMORY[0x1E0DEE9D8];
  if (v7)
  {
    v27 = MEMORY[0x1E0DEE9D8];
    sub_1C09D4934();
    result = sub_1C10702C4();
    if (v7 < 0)
    {
      __break(1u);
    }
    else
    {
      do
      {
        v9 = (void (*)(__int128 *, _QWORD))sub_1C1070300();
        sub_1C078A924(v10, (uint64_t)v3, &qword_1EF6412E8);
        v9(&v24, 0);
        v11 = sub_1C106BC80();
        v13 = v12;
        v15 = v14;
        sub_1C106BC74();
        sub_1C0BA44D8(v11, v13, v15);
        if (v23)
        {
          sub_1C077DD60(&v22, (uint64_t)&v24);
        }
        else
        {
          v25 = MEMORY[0x1E0DEA968];
          v26 = MEMORY[0x1E0D24968];
          *(_QWORD *)&v24 = 1280070990;
          *((_QWORD *)&v24 + 1) = 0xE400000000000000;
          sub_1C0784B6C((uint64_t)&v22, &qword_1ED75DF80);
        }
        sub_1C0784B6C((uint64_t)v3, &qword_1EF6412E8);
        v16 = v27;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C09D4934();
          v16 = v27;
        }
        v17 = *(_QWORD *)(v16 + 16);
        if (v17 >= *(_QWORD *)(v16 + 24) >> 1)
        {
          sub_1C09D4934();
          v16 = v27;
        }
        *(_QWORD *)(v16 + 16) = v17 + 1;
        sub_1C077DD60(&v24, v16 + 40 * v17 + 32);
        sub_1C10702DC();
        --v7;
      }
      while (v7);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v20);
      return v27;
    }
  }
  return result;
}

uint64_t sub_1C0B9EAAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[93] = swift_getObjectType();
  v3[92] = a3;
  v3[91] = a2;
  v3[90] = a1;
  v3[94] = _s10ViewConfigVMa();
  v3[95] = sub_1C0779D74();
  sub_1C106FB50();
  v3[96] = sub_1C0779D74();
  v3[97] = sub_1C07ACF80(&qword_1ED75E630);
  v3[98] = sub_1C0779D74();
  sub_1C106A72C();
  v3[99] = sub_1C0779D74();
  sub_1C077862C();
  return swift_task_switch();
}

uint64_t sub_1C0B9EB88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t result;
  unint64_t v6;
  __int16 v7;
  __int16 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t *v25;
  _QWORD *v26;
  _QWORD *v27;
  unint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t inited;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  __int128 *v64;
  _OWORD *v65;
  uint64_t *v66;
  uint64_t v67;
  id v68;
  id *v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  id v73;
  uint64_t *v74;
  uint64_t v75;
  unsigned __int8 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  char v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;

  v96 = *MEMORY[0x1E0C80C00];
  if (qword_1ED7558C0 != -1)
    swift_once();
  v2 = sub_1C07850AC();
  if (v0)
  {
    swift_task_dealloc();
    sub_1C07767BC();
    sub_1C07796F8();
    sub_1C0779D18();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  v3 = *(void **)(v1 + 720);
  v4 = *(_QWORD *)(v2 + 16);
  swift_retain_n();
  v6 = sub_1C0B73568(v3);
  v8 = v7;
  v9 = *(_QWORD *)(v1 + 728);
  v10 = swift_task_alloc();
  *(_QWORD *)(v10 + 16) = sub_1C0DA7858;
  *(_QWORD *)(v10 + 24) = 0;
  v85 = sub_1C0BB99D4((uint64_t)sub_1C0B6CCC0, v10);
  swift_task_dealloc();
  sub_1C106A774();
  swift_allocObject();
  sub_1C106A768();
  sub_1C106A720();
  sub_1C106A738();
  v72 = v9;
  if (v9 && objc_msgSend(*(id *)(v1 + 728), sel_integerValue) == (id)-1)
  {
    v70 = 0;
  }
  else
  {
    if (qword_1ED749400 != -1)
      swift_once();
    v11 = *(_QWORD *)(v1 + 784);
    v12 = sub_1C079E000(*(_QWORD *)(v1 + 776), (uint64_t)qword_1ED7493E0);
    swift_beginAccess();
    sub_1C078A924(v12, v11, &qword_1ED75E630);
    v13 = sub_1C0779D10();
    result = sub_1C07B2D80(v11, 1, v13);
    if ((_DWORD)result == 1)
    {
      __break(1u);
      return result;
    }
    if (qword_1ED762808 != -1)
      swift_once();
    v70 = sub_1C0CBD86C();
    sub_1C07825F4(v70, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  }
  v14 = sub_1C0EF5D2C(v6, v8);
  sub_1C07BBD84(v6, v8);
  v15 = *(_QWORD *)(v14 + 16);
  if (v15)
  {
    v63 = (_QWORD *)(v1 + 584);
    v81 = v1 + 712;
    v65 = (_OWORD *)(v1 + 544);
    v66 = (uint64_t *)(v1 + 504);
    v64 = (__int128 *)(v1 + 624);
    v68 = *(id *)(v1 + 728);
    v69 = (id *)(v1 + 688);
    v16 = MEMORY[0x1E0DEE9D8];
    v17 = (uint64_t *)(v14 + 48);
    v18 = v85;
    v67 = v4;
    while (1)
    {
      v82 = v16;
      v19 = (id)*(v17 - 2);
      v20 = *(v17 - 1);
      v21 = *v17;
      v22 = *(_QWORD *)(v18 + 16);
      sub_1C07767CC();
      v74 = v17;
      v75 = v15;
      if (v22 && (v23 = sub_1C077D774(v20, v21), (v24 & 1) != 0))
      {
        v25 = (uint64_t *)(*(_QWORD *)(v18 + 56) + 16 * v23);
        v79 = *v25;
        v80 = v25[1];
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      }
      else
      {
        v79 = 1701736270;
        v80 = 0xE400000000000000;
      }
      v26 = (_QWORD *)sub_1C07AC748();
      v26[2] = v19;
      v26[3] = v20;
      v26[4] = v21;
      v27 = (_QWORD *)sub_1C07AC748();
      v27[2] = sub_1C0BA44A0;
      v27[3] = v26;
      v27[4] = v4;
      sub_1C0BB9BA0();
      sub_1C07758BC();
      sub_1C07796F8();
      v76 = v89;
      v28 = v92;
      v77 = v91;
      v78 = v90;
      v71 = v93;
      v83 = v94;
      v84 = v95;
      *(_QWORD *)v81 = MEMORY[0x1E0DEE9E0];
      v29 = (_QWORD *)sub_1C07AC748();
      v29[2] = v19;
      v29[3] = v20;
      v29[4] = v21;
      v29[5] = v81;
      v30 = (_QWORD *)sub_1C07AC748();
      v30[2] = sub_1C0BA44BC;
      v30[3] = v29;
      v30[4] = v4;
      sub_1C077FF50((uint64_t)sub_1C0B6CCF0, (uint64_t)v30);
      v87 = v21;
      sub_1C07785A0();
      sub_1C07758BC();
      v31 = sub_1C07796F8();
      if (!*(_QWORD *)(*(_QWORD *)v81 + 16))
      {
        sub_1C07AFDE4();
        goto LABEL_30;
      }
      v32 = (void *)MEMORY[0x1C3BA79F4](v31);
      v33 = (void *)objc_opt_self();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C07ACF80((uint64_t *)&unk_1EF64BE10);
      v34 = (void *)sub_1C106F934();
      swift_bridgeObjectRelease();
      *v69 = 0;
      v19 = objc_msgSend(v33, sel_dataWithJSONObject_options_error_, v34, 3, v69);

      v35 = *v69;
      if (!v19)
        break;
      sub_1C106AC18();

      sub_1C106FB44();
      v36 = sub_1C106FB2C();
      v86 = v37;
      if (!v37)
      {
        sub_1C077B720();
        goto LABEL_28;
      }
      v19 = (id)v36;
      sub_1C077B720();
LABEL_29:
      objc_autoreleasePoolPop(v32);
LABEL_30:
      v39 = (void *)MEMORY[0x1C3BA79F4]();
      sub_1C078E6D8();
      sub_1C07803F8(qword_1EF6412B0, (void (*)(uint64_t))_s10ViewConfigVMa);
      sub_1C106A75C();
      v73 = v19;
      sub_1C07B1F90(*(_QWORD *)(v1 + 760), (uint64_t (*)(_QWORD))_s10ViewConfigVMa);
      sub_1C106FB44();
      v40 = sub_1C106FB2C();
      if (v41)
      {
        v42 = v40;
        v43 = v41;
        sub_1C07811C0();
      }
      else
      {
        sub_1C07811C0();
        v43 = 0xE400000000000000;
        v42 = 1701736270;
      }
      objc_autoreleasePoolPop(v39);
      if (v84 >> 60 == 15)
      {
        v44 = 0;
        v45 = 0xE000000000000000;
      }
      else
      {
        if ((v71 & 1) != 0)
          sub_1C0B6CD48();
        else
          sub_1C0B6CD84();
        *(_QWORD *)(v1 + 528) = swift_getAssociatedTypeWitness();
        *(_QWORD *)(v1 + 536) = swift_getAssociatedConformanceWitness();
        sub_1C079DFC4(v66);
        sub_1C07B0E28(v83, v84);
        sub_1C0DA267C(v83, v84);
        v44 = sub_1C106F9E8();
        v45 = v46;
        _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v66);
        sub_1C07974B0(v83);
        v4 = v67;
      }
      sub_1C07ACF80(&qword_1ED761310);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C108CFE0;
      *(_QWORD *)(inited + 32) = 1701667150;
      *(_QWORD *)(inited + 40) = 0xE400000000000000;
      *(_QWORD *)(inited + 48) = v20;
      *(_QWORD *)(inited + 56) = v87;
      v48 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(inited + 80) = 0x61486769666E6F43;
      *(_QWORD *)(inited + 88) = 0xEA00000000006873;
      *(_QWORD *)(inited + 96) = v79;
      *(_QWORD *)(inited + 104) = v80;
      *(_QWORD *)(inited + 120) = v48;
      *(_QWORD *)(inited + 128) = 0x745374736574614CLL;
      *(_QWORD *)(inited + 136) = 0xEB00000000657461;
      *(_QWORD *)(inited + 144) = v44;
      *(_QWORD *)(inited + 152) = v45;
      *(_QWORD *)(inited + 168) = v48;
      *(_QWORD *)(inited + 176) = 0x64656C62616E45;
      *(_QWORD *)(inited + 184) = 0xE700000000000000;
      *(_QWORD *)(inited + 192) = sub_1C0EA7F54(v76);
      *(_QWORD *)(inited + 200) = v49;
      *(_QWORD *)(inited + 216) = v48;
      *(_QWORD *)(inited + 224) = 0x73654D726F727245;
      v50 = v77;
      if (!v28)
        v50 = 0;
      v51 = 0xE000000000000000;
      if (v28)
        v51 = v28;
      *(_QWORD *)(inited + 232) = 0xEC00000065676173;
      *(_QWORD *)(inited + 240) = v50;
      *(_QWORD *)(inited + 248) = v51;
      *(_QWORD *)(inited + 264) = v48;
      strcpy((char *)(inited + 272), "AttemptCount");
      *(_BYTE *)(inited + 285) = 0;
      *(_WORD *)(inited + 286) = -5120;
      *(_QWORD *)(v1 + 704) = v78;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      *(_QWORD *)(inited + 288) = sub_1C1070C0C();
      *(_QWORD *)(inited + 296) = v52;
      *(_QWORD *)(inited + 312) = v48;
      *(_QWORD *)(inited + 320) = 0x6B72616D6B6F6F42;
      *(_QWORD *)(inited + 328) = 0xE900000000000073;
      *(_QWORD *)(inited + 336) = v73;
      *(_QWORD *)(inited + 344) = v86;
      *(_QWORD *)(inited + 360) = v48;
      *(_QWORD *)(inited + 368) = 0x6769666E6F43;
      *(_QWORD *)(inited + 408) = v48;
      *(_QWORD *)(inited + 376) = 0xE600000000000000;
      *(_QWORD *)(inited + 384) = v42;
      *(_QWORD *)(inited + 392) = v43;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v53 = sub_1C106F97C();
      if (!v72 || (v54 = objc_msgSend(v68, sel_integerValue), v54 == (id)-1))
      {
        swift_bridgeObjectRelease();
        v16 = v82;
      }
      else
      {
        if (!v70)
        {
          sub_1C07767AC();
          *(_QWORD *)(v1 + 576) = 0;
          *v65 = 0u;
          *(_OWORD *)(v1 + 560) = 0u;
          sub_1C0784B6C((uint64_t)v65, (uint64_t *)&unk_1EF6412C0);
          v56 = v1 + 624;
          *v64 = 0u;
          *(_OWORD *)(v1 + 640) = 0u;
          *(_QWORD *)(v1 + 656) = 0;
          v16 = v82;
LABEL_53:
          sub_1C0784B6C(v56, (uint64_t *)&unk_1EF641280);
          goto LABEL_54;
        }
        v55 = (uint64_t)v54;
        swift_retain();
        sub_1C0E71FE0();
        sub_1C07767AC();
        sub_1C07785A8();
        v16 = v82;
        sub_1C07ACF80(&qword_1ED75DFC0);
        sub_1C07ACF80(&qword_1ED7551F8);
        v57 = sub_1C077C458();
        if ((v57 & 1) == 0)
        {
          *(_QWORD *)(v1 + 656) = 0;
          *v64 = 0u;
          *(_OWORD *)(v1 + 640) = 0u;
          v56 = v1 + 624;
          goto LABEL_53;
        }
        v56 = v1 + 624;
        if (!*(_QWORD *)(v1 + 648))
          goto LABEL_53;
        sub_1C077DD60(v64, (uint64_t)v63);
        v58 = sub_1C0BA159C(v63, v55, 0);
        v91 = MEMORY[0x1E0DEA968];
        v88 = v58;
        v89 = v60;
        sub_1C0D995E4((uint64_t)&v88);
        sub_1C0775880();
      }
LABEL_54:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C078A488();
        v16 = v61;
      }
      v59 = *(_QWORD *)(v16 + 16);
      if (v59 >= *(_QWORD *)(v16 + 24) >> 1)
      {
        sub_1C078A488();
        v16 = v62;
      }
      *(_QWORD *)(v16 + 16) = v59 + 1;
      *(_QWORD *)(v16 + 8 * v59 + 32) = v53;
      sub_1C07889C4();
      sub_1C07974B0(v83);
      sub_1C0776AB4();
      sub_1C07AD28C();
      swift_bridgeObjectRelease();
      v17 = v74 + 3;
      v15 = v75 - 1;
      v18 = v85;
      if (v75 == 1)
      {
        sub_1C07951A8();
        sub_1C077FA84();
        goto LABEL_61;
      }
    }
    v38 = v35;
    v19 = (id)sub_1C106AA14();

    swift_willThrow();
LABEL_28:
    sub_1C07AFDE4();
    goto LABEL_29;
  }
  sub_1C077960C();
  sub_1C077FA84();
  v16 = MEMORY[0x1E0DEE9D8];
LABEL_61:
  sub_1C078CBC8();
  sub_1C07AAFDC();
  sub_1C077960C();
  sub_1C077ED08();
  swift_task_dealloc();
  sub_1C07796F8();
  sub_1C07758BC();
  sub_1C0779D18();
  return (*(uint64_t (**)(uint64_t))(v1 + 8))(v16);
}

double sub_1C0B9F9A8@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  double result;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  sub_1C0ECADB0();
  if (!v1)
  {
    *a1 = v4;
    a1[1] = v5;
    result = *(double *)&v6;
    a1[2] = v6;
    a1[3] = v7;
  }
  return result;
}

void sub_1C0B9F9F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  swift_retain();
  swift_retain();
  sub_1C0BA0AC4(a3, 0, a1, a2, a6, a1, a2);
}

void sub_1C0B9FA54(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t inited;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD v26[2];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v28 = a5;
  v29 = a6;
  v36 = a3;
  v9 = sub_1C106ADE0();
  v31 = *(_QWORD *)(v9 - 8);
  v32 = v9;
  MEMORY[0x1E0C80A78](v9);
  v30 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v33 = (char *)v26 - v12;
  MEMORY[0x1E0C80A78](v13);
  v34 = (char *)v26 - v14;
  v15 = *(unsigned __int8 *)(a1 + 8);
  v16 = sub_1C07B3020(*(_BYTE *)(a1 + 8));
  v35 = a4;
  v18 = sub_1C089AA80(v16, v17, *a4);
  swift_bridgeObjectRelease();
  v19 = MEMORY[0x1E0DEE9D8];
  if (v18)
    v19 = v18;
  v37 = v19;
  v27 = sub_1C07ACF80(&qword_1ED761310);
  inited = swift_initStackObject();
  v26[1] = xmmword_1C10795A0;
  *(_OWORD *)(inited + 16) = xmmword_1C10795A0;
  *(_QWORD *)(inited + 32) = 0xD000000000000010;
  *(_QWORD *)(inited + 40) = 0x80000001C10DFE00;
  v21 = *(_QWORD *)(a1 + 24);
  v22 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(inited + 56) = v21;
  *(_QWORD *)(inited + 72) = v22;
  *(_QWORD *)(inited + 80) = 0xD000000000000016;
  *(_QWORD *)(inited + 88) = 0x80000001C1103120;
  v23 = MEMORY[0x1E0DEB070];
  *(_QWORD *)(inited + 96) = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(inited + 120) = v23;
  *(_QWORD *)(inited + 128) = 0x656C756465686373;
  *(_QWORD *)(inited + 136) = 0xE800000000000000;
  *(_QWORD *)(inited + 144) = sub_1C07B3100(*(_BYTE *)(v36 + 32));
  *(_QWORD *)(inited + 152) = v24;
  *(_QWORD *)(inited + 168) = v22;
  strcpy((char *)(inited + 176), "runByTimestamp");
  *(_BYTE *)(inited + 191) = -18;
  v36 = a2;
  v25 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(inited + 216) = v23;
  *(_QWORD *)(inited + 192) = v25;
  sub_1C0BA461C(a1);
  v38 = sub_1C106F97C();
  __asm { BR              X9 }
}

uint64_t sub_1C0B9FC88()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1C0BA0AC4(uint64_t a1, char a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  char *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 *v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  __int128 v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  _QWORD *v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __int128 v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  __int128 v98;
  void (*v99)(char *, uint64_t);
  uint64_t v100;
  char *v101;
  __int128 v102;
  __int128 v103;
  uint64_t v104;
  __int128 v105;
  __int128 v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  char v111;
  __int128 v112;
  char v113;
  uint64_t v114;
  char v115;
  _OWORD v116[2];
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  _OWORD v120[3];
  uint64_t v121;
  uint64_t v122;

  v8 = v7;
  v91 = a7;
  v92 = a6;
  v89 = a5;
  v82 = a1;
  v11 = sub_1C07ACF80(&qword_1ED7626C0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v70 - v15;
  MEMORY[0x1E0C80A78](v17);
  v83 = (uint64_t)&v70 - v18;
  MEMORY[0x1E0C80A78](v19);
  v81 = (char *)&v70 - v20;
  v122 = sub_1C106C040();
  v80 = *(_QWORD *)(v122 - 8);
  MEMORY[0x1E0C80A78](v122);
  v101 = (char *)&v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = *(_QWORD *)(a4 + 160);
  v22 = 168;
  if ((a2 & 1) != 0)
    v22 = 176;
  v23 = 192;
  if ((a2 & 1) != 0)
    v23 = 184;
  v24 = *(_QWORD *)(a4 + v23);
  v25 = *(_QWORD *)(a4 + v22);
  v90 = *(_QWORD *)(a4 + 248);
  v26 = sub_1C07A5ADC();
  v27 = v26;
  v28 = v26[2];
  if (v28)
  {
    v86 = v13;
    v29 = (char *)(v26 + 4);
    v84 = v24;
    swift_retain();
    swift_retain();
    v30 = 0;
    v78 = xmmword_1C1078FC0;
    v98 = xmmword_1C1079220;
    v77 = v27;
    v70 = (char *)(v27 + 4);
    v71 = v28;
    do
    {
      if (v30 >= v27[2])
      {
        __break(1u);
LABEL_33:
        __break(1u);
        return;
      }
      v31 = v8;
      v32 = v25;
      v74 = v30;
      v33 = v29[v30];
      v100 = sub_1C07ACF80(&qword_1ED762C90);
      v34 = swift_allocObject();
      *(_OWORD *)(v34 + 16) = v78;
      *(_QWORD *)(v34 + 56) = MEMORY[0x1E0DEB418];
      *(_QWORD *)(v34 + 64) = MEMORY[0x1E0D24A00];
      *(_QWORD *)(v34 + 32) = v82;
      *(_QWORD *)(v34 + 96) = &unk_1E7A41AF8;
      *(_QWORD *)(v34 + 104) = sub_1C07B78BC();
      *(_BYTE *)(v34 + 72) = v33;
      v35 = (uint64_t)v81;
      v36 = v101;
      sub_1C106C010();
      sub_1C106C700();
      v37 = v122;
      v99 = *(void (**)(char *, uint64_t))(v80 + 8);
      v99(v36, v122);
      sub_1C07B2D8C(v35, 1, 1, v37);
      sub_1C0BA44FC();
      v105 = 0u;
      v106 = 0u;
      v107 = 0;
      v38 = sub_1C106BDB8();
      if (v31)
      {
        swift_release();
        swift_release();
        sub_1C0784B6C((uint64_t)&v105, (uint64_t *)&unk_1ED7626A0);
        sub_1C0784B6C(v35, &qword_1ED7626C0);
        swift_bridgeObjectRelease();
        goto LABEL_29;
      }
      v39 = v38;
      sub_1C0784B6C((uint64_t)&v105, (uint64_t *)&unk_1ED7626A0);
      sub_1C0784B6C(v35, &qword_1ED7626C0);
      v25 = v32;
      v75 = *(_QWORD *)(v39 + 16);
      if (v75)
      {
        v40 = 0;
        v41 = v39 + 32;
        v85 = v32;
        v72 = v39 + 32;
        v73 = v39;
        while (v40 < *(_QWORD *)(v39 + 16))
        {
          v97 = 0;
          v42 = v25;
          v76 = v40;
          v43 = (__int128 *)(v41 + 56 * v40);
          v44 = *v43;
          v45 = v43[1];
          v46 = v43[2];
          v121 = *((_QWORD *)v43 + 6);
          v120[1] = v45;
          v120[2] = v46;
          v120[0] = v44;
          v47 = swift_allocObject();
          *(_OWORD *)(v47 + 16) = v98;
          v48 = *(_QWORD *)&v120[0];
          *(_QWORD *)(v47 + 56) = MEMORY[0x1E0DEB418];
          *(_QWORD *)(v47 + 64) = MEMORY[0x1E0D24A00];
          *(_QWORD *)(v47 + 32) = v48;
          sub_1C0BA4538((uint64_t)v120);
          v49 = v101;
          sub_1C106C010();
          sub_1C106C700();
          v50 = v122;
          v99(v49, v122);
          v51 = v83;
          sub_1C07B2D8C(v83, 1, 1, v50);
          v107 = 0;
          v105 = 0u;
          v106 = 0u;
          v52 = v97;
          v53 = sub_1C106C1D8();
          if (v52)
          {
            swift_release();
            swift_release();
            sub_1C0BA4560((uint64_t)v120);
            sub_1C0784B6C((uint64_t)&v105, (uint64_t *)&unk_1ED7626A0);
            sub_1C0784B6C(v51, &qword_1ED7626C0);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_29;
          }
          v54 = v53;
          sub_1C0784B6C((uint64_t)&v105, (uint64_t *)&unk_1ED7626A0);
          sub_1C0784B6C(v51, &qword_1ED7626C0);
          v87 = *(_QWORD *)(v54 + 16);
          if (v87)
          {
            v55 = 0;
            v88 = v54;
            while (1)
            {
              v56 = *(_QWORD *)(v54 + 8 * v55 + 32);
              v57 = swift_allocObject();
              *(_OWORD *)(v57 + 16) = v98;
              *(_QWORD *)(v57 + 56) = MEMORY[0x1E0DEB418];
              *(_QWORD *)(v57 + 64) = MEMORY[0x1E0D24A00];
              *(_QWORD *)(v57 + 32) = v56;
              v58 = v101;
              sub_1C106C010();
              sub_1C106C700();
              v59 = v122;
              v99(v58, v122);
              sub_1C07B2D8C((uint64_t)v16, 1, 1, v59);
              sub_1C0BA4588();
              v102 = 0u;
              v103 = 0u;
              v104 = 0;
              sub_1C106BDD0();
              sub_1C0784B6C((uint64_t)&v102, (uint64_t *)&unk_1ED7626A0);
              v60 = v16;
              sub_1C0784B6C((uint64_t)v16, &qword_1ED7626C0);
              if (v109 >> 60 == 11)
              {
                sub_1C0BA4560((uint64_t)v120);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                *(_QWORD *)&v105 = 0;
                *((_QWORD *)&v105 + 1) = 0xE000000000000000;
                sub_1C1070774();
                swift_bridgeObjectRelease();
                *(_QWORD *)&v105 = 0xD00000000000002ELL;
                *((_QWORD *)&v105 + 1) = 0x80000001C11030D0;
                *(_QWORD *)&v102 = v56;
                sub_1C1070C0C();
                sub_1C106FC94();
                swift_bridgeObjectRelease();
                v66 = v105;
                sub_1C08E29B4();
                swift_allocError();
                *(_OWORD *)v67 = v66;
                *(_OWORD *)(v67 + 16) = 0u;
                *(_OWORD *)(v67 + 32) = 0u;
                *(_OWORD *)(v67 + 48) = 0u;
                *(_BYTE *)(v67 + 64) = 5;
                swift_willThrow();
                goto LABEL_27;
              }
              v61 = (uint64_t)v86;
              v62 = v106;
              v93 = v105;
              v116[0] = v105;
              v116[1] = v106;
              v94 = *((_QWORD *)&v106 + 1);
              v95 = v107;
              v117 = v107;
              v118 = v108;
              v96 = v108;
              v97 = v109;
              v119 = v109;
              v63 = swift_allocObject();
              *(_OWORD *)(v63 + 16) = v98;
              *(_QWORD *)(v63 + 56) = MEMORY[0x1E0DEB418];
              *(_QWORD *)(v63 + 64) = MEMORY[0x1E0D24A00];
              *(_QWORD *)(v63 + 32) = v62;
              v64 = v101;
              sub_1C106C010();
              sub_1C106C700();
              v65 = v122;
              v99(v64, v122);
              sub_1C07B2D8C(v61, 1, 1, v65);
              sub_1C0BA45C4();
              v102 = 0u;
              v103 = 0u;
              v104 = 0;
              sub_1C106BDD0();
              sub_1C0784B6C((uint64_t)&v102, (uint64_t *)&unk_1ED7626A0);
              sub_1C0784B6C(v61, &qword_1ED7626C0);
              if (!*((_QWORD *)&v106 + 1))
                break;
              v110 = v105;
              v111 = BYTE8(v105);
              v112 = v106;
              v113 = v107;
              v114 = v108;
              v115 = v109 & 1;
              sub_1C0B9FA54((uint64_t)&v110, (uint64_t)v116, (uint64_t)v120, v89, v92, v91);
              ++v55;
              swift_bridgeObjectRelease();
              sub_1C0BA4600(v93, *((uint64_t *)&v93 + 1), v62, v94, v95, v96, v97);
              v42 = v85;
              v16 = v60;
              v54 = v88;
              if (v87 == v55)
              {
                swift_bridgeObjectRelease();
                v39 = v73;
                goto LABEL_20;
              }
            }
            sub_1C0BA4560((uint64_t)v120);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            *(_QWORD *)&v105 = 0;
            *((_QWORD *)&v105 + 1) = 0xE000000000000000;
            sub_1C1070774();
            swift_bridgeObjectRelease();
            *(_QWORD *)&v105 = 0xD00000000000001DLL;
            *((_QWORD *)&v105 + 1) = 0x80000001C1103100;
            *(_QWORD *)&v102 = v62;
            sub_1C1070C0C();
            sub_1C106FC94();
            swift_bridgeObjectRelease();
            v68 = v105;
            sub_1C08E29B4();
            swift_allocError();
            *(_OWORD *)v69 = v68;
            *(_OWORD *)(v69 + 16) = 0u;
            *(_OWORD *)(v69 + 32) = 0u;
            *(_OWORD *)(v69 + 48) = 0u;
            *(_BYTE *)(v69 + 64) = 5;
            swift_willThrow();
            swift_release();
            swift_release();
            sub_1C0BA4600(v93, *((uint64_t *)&v93 + 1), v62, v94, v95, v96, v97);
            goto LABEL_29;
          }
          swift_bridgeObjectRelease();
LABEL_20:
          v40 = v76 + 1;
          sub_1C0BA4560((uint64_t)v120);
          v25 = v42;
          v8 = 0;
          v41 = v72;
          if (v40 == v75)
          {
            swift_bridgeObjectRelease();
            goto LABEL_23;
          }
        }
        goto LABEL_33;
      }
      swift_bridgeObjectRelease();
      v8 = 0;
LABEL_23:
      v30 = v74 + 1;
      v29 = v70;
      v27 = v77;
    }
    while (v74 + 1 != v71);
    swift_bridgeObjectRelease();
LABEL_27:
    swift_release();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
LABEL_29:
  swift_release();
  swift_release();
}

uint64_t sub_1C0BA159C(_QWORD *a1, uint64_t a2, int a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void (*v15)(id *__return_ptr, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  void (*v29)(id *__return_ptr, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  void *v60;
  void *v61;
  id v62;
  id v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD v71[2];
  uint64_t v72;
  int v73;
  uint64_t v74;
  char *v75;
  void (*v76)(id *__return_ptr, uint64_t, uint64_t);
  uint64_t v77;
  unint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  __int128 v81[2];
  uint64_t v82;
  _QWORD v83[5];
  id v84[3];
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;

  v87 = *MEMORY[0x1E0C80C00];
  v6 = sub_1C106FB50();
  MEMORY[0x1E0C80A78](v6);
  v75 = (char *)v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ViewDatabaseArtifact.Property();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (_QWORD *)((char *)v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v80 = MEMORY[0x1E0DEE9E0];
  v13 = a1[3];
  v12 = a1[4];
  v14 = sub_1C07A9480(a1, v13);
  v15 = *(void (**)(id *__return_ptr, uint64_t, uint64_t))(v12 + 16);
  v79 = v14;
  v77 = v12;
  v76 = v15;
  v15(v84, v13, v12);
  v16 = v85;
  v17 = v86;
  sub_1C07A9480(v84, v85);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 24))(v16, v17);
  v19 = *(_QWORD *)(v18 + 16);
  if (v19)
  {
    v72 = v13;
    v73 = a3;
    v74 = a2;
    v83[0] = MEMORY[0x1E0DEE9D8];
    sub_1C09D30E0();
    v20 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v71[1] = v18;
    v21 = v18 + v20;
    v22 = *(_QWORD *)(v9 + 72);
    v23 = (_QWORD *)v83[0];
    do
    {
      sub_1C08DE57C(v21, (uint64_t)v11);
      v24 = *v11;
      v25 = v11[1];
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C07B1F90((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ViewDatabaseArtifact.Property);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C09D30E0();
        v23 = (_QWORD *)v83[0];
      }
      v26 = v23[2];
      if (v26 >= v23[3] >> 1)
      {
        sub_1C09D30E0();
        v23 = (_QWORD *)v83[0];
      }
      v23[2] = v26 + 1;
      v27 = &v23[2 * v26];
      v27[4] = v24;
      v27[5] = v25;
      v21 += v22;
      --v19;
    }
    while (v19);
    swift_bridgeObjectRelease();
    a2 = v74;
    LOBYTE(a3) = v73;
    v13 = v72;
  }
  else
  {
    swift_bridgeObjectRelease();
    v23 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v28 = v77;
  v29 = v76;
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v84);
  v30 = sub_1C07ACF80(&qword_1ED762B70);
  v85 = v30;
  v84[0] = v23;
  sub_1C0D995E4((uint64_t)v84);
  v29(v84, v13, v28);
  v31 = v85;
  v32 = v86;
  sub_1C07A9480(v84, v85);
  v33 = (void *)v78;
  v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 40))(v31, v32);
  if (v33)
  {

    v35 = -1;
  }
  else
  {
    v35 = v34;
  }
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v84);
  v85 = MEMORY[0x1E0DEB418];
  v84[0] = (id)v35;
  sub_1C0D995E4((uint64_t)v84);
  v29((id *)v83, v13, v28);
  sub_1C07ACF80(qword_1ED757330);
  sub_1C07ACF80(&qword_1EF6412D0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v82 = 0;
    memset(v81, 0, sizeof(v81));
    sub_1C0784B6C((uint64_t)v81, (uint64_t *)&unk_1EF6412D8);
    goto LABEL_36;
  }
  sub_1C077DD60(v81, (uint64_t)v84);
  if ((a3 & 1) != 0)
  {
    v40 = v85;
    v41 = v86;
    sub_1C07A9480(v84, v85);
    v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v41 + 8))(v40, v41);
LABEL_19:
    v42 = 0;
    v43 = v38;
    if (v38 >> 62)
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v57 = sub_1C10709B4();
      swift_bridgeObjectRelease();
      if (v57)
      {
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v58 = sub_1C10709B4();
        swift_bridgeObjectRelease();
        v79 = (_QWORD *)v58;
        if (!v58)
        {
          v77 = v30;
          swift_bridgeObjectRelease();
          v46 = MEMORY[0x1E0DEE9D8];
LABEL_30:
          v83[3] = v77;
          v83[0] = v46;
          sub_1C0D995E4((uint64_t)v83);
          goto LABEL_35;
        }
LABEL_21:
        v77 = v30;
        *(_QWORD *)&v81[0] = MEMORY[0x1E0DEE9D8];
        v44 = (unint64_t)v79;
        sub_1C09D30E0();
        if ((v44 & 0x8000000000000000) != 0)
          __break(1u);
        v45 = 0;
        v46 = *(_QWORD *)&v81[0];
        v78 = v43 & 0xC000000000000001;
        v47 = v43;
        do
        {
          if (v78)
          {
            v48 = MEMORY[0x1C3BA70DC](v45, v43);
          }
          else
          {
            v48 = *(_QWORD *)(v43 + 8 * (_QWORD)v45 + 32);
            swift_retain();
          }
          v49 = v42;
          v50 = sub_1C0B9E7EC(v48);
          v51 = sub_1C07ACF80(&qword_1ED756490);
          v52 = MEMORY[0x1C3BA683C](v50, v51);
          v54 = v53;
          swift_release();
          swift_bridgeObjectRelease();
          *(_QWORD *)&v81[0] = v46;
          v55 = *(_QWORD *)(v46 + 16);
          if (v55 >= *(_QWORD *)(v46 + 24) >> 1)
          {
            sub_1C09D30E0();
            v46 = *(_QWORD *)&v81[0];
          }
          v45 = (_QWORD *)((char *)v45 + 1);
          *(_QWORD *)(v46 + 16) = v55 + 1;
          v56 = v46 + 16 * v55;
          *(_QWORD *)(v56 + 32) = v52;
          *(_QWORD *)(v56 + 40) = v54;
          v42 = v49;
          v43 = v47;
        }
        while (v79 != v45);
        swift_bridgeObjectRelease();
        goto LABEL_30;
      }
    }
    else
    {
      v79 = *(_QWORD **)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v79)
        goto LABEL_21;
    }
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  if (a2 >= 1)
  {
    v36 = v85;
    v37 = v86;
    sub_1C07A9480(v84, v85);
    v38 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(a2, v36, v37);
    goto LABEL_19;
  }
LABEL_35:
  v39 = _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v84);
LABEL_36:
  v59 = (void *)MEMORY[0x1C3BA79F4](v39);
  v60 = (void *)objc_opt_self();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v61 = (void *)sub_1C106F934();
  swift_bridgeObjectRelease();
  v84[0] = 0;
  v62 = objc_msgSend(v60, sel_dataWithJSONObject_options_error_, v61, 3, v84);

  v63 = v84[0];
  if (v62)
  {
    v64 = sub_1C106AC18();
    v66 = v65;

    sub_1C106FB44();
    v67 = sub_1C106FB2C();
    if (v68)
    {
      v69 = v67;
      sub_1C07B3374(v64, v66);
    }
    else
    {
      sub_1C07B3374(v64, v66);
      v69 = 1701736270;
    }
    objc_autoreleasePoolPop(v59);
    swift_bridgeObjectRelease();
  }
  else
  {
    v69 = (uint64_t)v63;
    sub_1C106AA14();

    swift_willThrow();
    objc_autoreleasePoolPop(v59);
    swift_bridgeObjectRelease();
  }
  return v69;
}

uint64_t sub_1C0BA1D38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[102] = a5;
  v5[101] = a4;
  v5[100] = a3;
  v5[99] = a2;
  v5[98] = a1;
  v6 = sub_1C07ACF80(&qword_1ED7449E8);
  v5[103] = v6;
  v5[104] = *(_QWORD *)(v6 - 8);
  v5[105] = swift_task_alloc();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0BA1DA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  NSObject *v24;
  os_log_type_t v25;
  _DWORD *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  int64_t v66;
  unint64_t v67;
  int64_t v68;
  os_log_type_t v69;
  _BOOL4 v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  int64_t v82;
  uint64_t v83;
  NSObject *v84;
  void (*v85)(_QWORD, unint64_t, _QWORD);
  int64_t v86;
  uint64_t v87;
  uint64_t v88;
  _OWORD *v89;
  uint64_t v90[4];

  if (qword_1ED7558C0 != -1)
    swift_once();
  *(_QWORD *)(v1 + 848) = sub_1C07850AC();
  if (v0)
    goto LABEL_25;
  v2 = *(_QWORD *)(v1 + 792);
  v3 = *(_QWORD *)(v1 + 784);
  sub_1C07ACF80(&qword_1ED762CB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1079220;
  *(_QWORD *)(inited + 32) = v3;
  *(_QWORD *)(inited + 40) = v2;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0B76AC8();
  swift_setDeallocating();
  sub_1C0BE8D64();
  if (qword_1ED745348 != -1)
    swift_once();
  v5 = *(_QWORD *)(v1 + 808);
  v6 = *(_QWORD *)(v1 + 800);
  v7 = sub_1C07ACF80(&qword_1ED744A00);
  sub_1C079E000(v7, (uint64_t)qword_1ED78C530);
  *(_QWORD *)(v1 + 624) = v6;
  *(_QWORD *)(v1 + 632) = v5;
  sub_1C07ACF80(&qword_1ED755758);
  sub_1C0A22DC4();
  sub_1C07BB218(&qword_1ED7449F8, &qword_1ED744A00);
  v8 = sub_1C106FA48();
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    v10 = *(_QWORD *)(v1 + 832);
    v11 = v8 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v87 = *(_QWORD *)(v10 + 72);
    v85 = *(void (**)(_QWORD, unint64_t, _QWORD))(v10 + 16);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v12 = MEMORY[0x1E0DEE9D8];
    do
    {
      v85(*(_QWORD *)(v1 + 840), v11, *(_QWORD *)(v1 + 824));
      swift_getKeyPath();
      sub_1C106CB8C();
      sub_1C07758C4();
      if (*(_QWORD *)(v1 + 592))
      {
        v13 = MEMORY[0x1C3BA64D0](*(_QWORD *)(v1 + 568), *(_QWORD *)(v1 + 576), *(_QWORD *)(v1 + 584), *(_QWORD *)(v1 + 592));
        v15 = v14;
        swift_bridgeObjectRelease();
        sub_1C07850E4();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C078DB48();
          v12 = v18;
        }
        v16 = *(_QWORD *)(v12 + 16);
        if (v16 >= *(_QWORD *)(v12 + 24) >> 1)
        {
          sub_1C078DB48();
          v12 = v19;
        }
        *(_QWORD *)(v12 + 16) = v16 + 1;
        v17 = v12 + 16 * v16;
        *(_QWORD *)(v17 + 32) = v13;
        *(_QWORD *)(v17 + 40) = v15;
      }
      else
      {
        sub_1C07850E4();
      }
      v11 += v87;
      --v9;
    }
    while (v9);
    sub_1C07758A4();
  }
  else
  {
    swift_bridgeObjectRelease();
    v12 = MEMORY[0x1E0DEE9D8];
  }
  sub_1C0898D28(v12);
  v21 = v20;
  if (qword_1ED75E808 != -1)
    swift_once();
  v22 = sub_1C077585C();
  v23 = sub_1C079E000(v22, (uint64_t)qword_1ED78D7A0);
  sub_1C07767CC();
  v24 = v23;
  sub_1C106F538();
  v25 = sub_1C0784E0C();
  v84 = v23;
  if (os_log_type_enabled(v23, v25))
  {
    v26 = (_DWORD *)sub_1C0775854();
    v90[0] = sub_1C0775854();
    *v26 = 136315138;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v27 = sub_1C1070228();
    v29 = v28;
    sub_1C07785A0();
    *(_QWORD *)(v1 + 776) = sub_1C0788DAC(v27, v29, v90);
    sub_1C10705AC();
    sub_1C077B5B4();
    sub_1C07758A4();
    sub_1C07759F4(&dword_1C0771000, v24, v25, "Table names to replace: %s");
    swift_arrayDestroy();
    sub_1C0776778();
  }
  sub_1C07758A4();

  if (qword_1ED762808 != -1)
    swift_once();
  *(_QWORD *)(v1 + 856) = sub_1C0CBD86C();
  sub_1C0E71FE0();
  sub_1C07ACF80(&qword_1ED75DFC0);
  sub_1C07ACF80(&qword_1ED7551F8);
  if (!sub_1C077C458())
  {
    v43 = *(_QWORD *)(v1 + 792);
    v44 = *(_QWORD *)(v1 + 784);
    *(_OWORD *)(v1 + 368) = 0u;
    *(_OWORD *)(v1 + 384) = 0u;
    *(_QWORD *)(v1 + 400) = 0;
    v45 = sub_1C07785A0();
    sub_1C077C790(v45, (uint64_t *)&unk_1EF641280);
    sub_1C08E29B4();
    sub_1C0775810();
    *(_QWORD *)v46 = v44;
    *(_QWORD *)(v46 + 8) = v43;
    *(_OWORD *)(v46 + 16) = xmmword_1C10A5600;
    *(_QWORD *)(v46 + 32) = 0xD000000000000033;
    *(_QWORD *)(v46 + 40) = 0x80000001C1103070;
    *(_QWORD *)(v46 + 48) = 0;
    *(_QWORD *)(v46 + 56) = 0;
    *(_BYTE *)(v46 + 64) = 0;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_willThrow();
    swift_release();
    sub_1C077FA84();
LABEL_25:
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  v32 = *(_QWORD *)(v1 + 808);
  v33 = *(_QWORD *)(v1 + 800);
  v88 = v21;
  sub_1C077DD60((__int128 *)(v1 + 368), v1 + 288);
  *(_QWORD *)(v1 + 688) = v33;
  *(_QWORD *)(v1 + 696) = v32;
  *(_QWORD *)(v1 + 656) = 0x454C42415424;
  *(_QWORD *)(v1 + 664) = 0xE600000000000000;
  v34 = *(_QWORD *)(v1 + 312);
  v35 = *(_QWORD *)(v1 + 320);
  sub_1C077B298((_QWORD *)(v1 + 288));
  (*(void (**)(uint64_t, uint64_t))(v35 + 16))(v34, v35);
  v36 = *(_QWORD *)(v1 + 552);
  v37 = *(_QWORD *)(v1 + 560);
  sub_1C077B298((_QWORD *)(v1 + 528));
  *(_QWORD *)(v1 + 672) = (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 8))(v36, v37);
  *(_QWORD *)(v1 + 680) = v38;
  sub_1C07B1280();
  sub_1C077F844();
  v39 = sub_1C10705F4();
  v41 = v40;
  swift_bridgeObjectRelease();
  sub_1C0775AD4();
  *(_QWORD *)(v1 + 720) = v39;
  *(_QWORD *)(v1 + 728) = v41;
  *(_QWORD *)(v1 + 272) = sub_1C07ACF80(&qword_1ED762B80);
  sub_1C07BB218(&qword_1ED761480, &qword_1ED762B80);
  *(_QWORD *)(v1 + 280) = v42;
  *(_QWORD *)(v1 + 248) = v88;
  v47 = v41;
  v89 = (_OWORD *)(v1 + 88);
  v48 = sub_1C0E720B8((_QWORD *)(v1 + 248));
  result = _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v1 + 248);
  v86 = 0;
  v83 = v48;
  v51 = *(_QWORD *)(v48 + 64);
  v50 = v48 + 64;
  v49 = v51;
  v52 = -1;
  v53 = -1 << *(_BYTE *)(v50 - 32);
  if (-v53 < 64)
    v52 = ~(-1 << -(char)v53);
  v54 = v52 & v49;
  v81 = v50;
  v82 = (unint64_t)(63 - v53) >> 6;
  if ((v52 & v49) == 0)
    goto LABEL_36;
LABEL_34:
  v62 = __clz(__rbit64(v54));
  v54 &= v54 - 1;
  v63 = v62 | (v86 << 6);
  while (2)
  {
    v64 = (_QWORD *)(*(_QWORD *)(v83 + 48) + 16 * v63);
    v65 = v64[1];
    *(_QWORD *)(v1 + 88) = *v64;
    *(_QWORD *)(v1 + 96) = v65;
    sub_1C07D6D1C(*(_QWORD *)(v83 + 56) + 40 * v63, v1 + 104);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    while (1)
    {
      sub_1C0BA441C((uint64_t)v89, v1 + 144);
      if (!*(_QWORD *)(v1 + 152))
      {
        swift_release();
        sub_1C07767CC();
        sub_1C07767CC();
        sub_1C106F538();
        v69 = sub_1C0784E0C();
        v70 = sub_1C077AF00(v69);
        v71 = *(_QWORD *)(v1 + 792);
        if (v70)
        {
          v72 = *(_QWORD *)(v1 + 784);
          v73 = sub_1C0775854();
          v90[0] = sub_1C0775854();
          *(_DWORD *)v73 = 136315394;
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          *(_QWORD *)(v1 + 760) = sub_1C0788DAC(v72, v71, v90);
          sub_1C10705AC();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v73 + 12) = 2080;
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          *(_QWORD *)(v1 + 752) = sub_1C0788DAC(v39, v47, v90);
          sub_1C10705AC();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1C0771000, v84, (os_log_type_t)v54, "Executing SQL statement for view %s: %s", (uint8_t *)v73, 0x16u);
          swift_arrayDestroy();
          sub_1C0776778();
        }
        sub_1C07758A4();
        sub_1C07758A4();

        v74 = *(_QWORD *)(v1 + 312);
        v75 = *(_QWORD *)(v1 + 320);
        sub_1C07A9480((_QWORD *)(v1 + 288), v74);
        (*(void (**)(uint64_t, uint64_t))(v75 + 16))(v74, v75);
        v76 = *(_QWORD *)(v1 + 512);
        v77 = *(_QWORD *)(v1 + 520);
        sub_1C07B7C34();
        sub_1C079679C();
        v78 = *(_QWORD *)(v1 + 720);
        v79 = *(_QWORD *)(v1 + 728);
        *(_QWORD *)(v1 + 864) = v79;
        v80 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v1 + 872) = v80;
        *v80 = v1;
        v80[1] = sub_1C0BA2AB8;
        return sub_1C0BA2BD4(v78, v79, v76, v77);
      }
      sub_1C077DD60((__int128 *)(v1 + 160), v1 + 408);
      *(_QWORD *)(v1 + 736) = v39;
      *(_QWORD *)(v1 + 744) = v47;
      v90[0] = 31524;
      v90[1] = 0xE200000000000000;
      sub_1C106FC94();
      sub_1C07767AC();
      sub_1C106FC94();
      *(_QWORD *)(v1 + 704) = 31524;
      *(_QWORD *)(v1 + 712) = 0xE200000000000000;
      v55 = *(_QWORD *)(v1 + 432);
      v56 = *(_QWORD *)(v1 + 440);
      sub_1C077B298((_QWORD *)(v1 + 408));
      (*(void (**)(uint64_t, uint64_t))(v56 + 16))(v55, v56);
      v57 = *(_QWORD *)(v1 + 472);
      v58 = *(_QWORD *)(v1 + 480);
      sub_1C077B298((_QWORD *)(v1 + 448));
      *(_QWORD *)(v1 + 640) = (*(uint64_t (**)(uint64_t, uint64_t))(v58 + 8))(v57, v58);
      *(_QWORD *)(v1 + 648) = v59;
      sub_1C077F844();
      v39 = sub_1C10705F4();
      v61 = v60;
      sub_1C07767AC();
      swift_bridgeObjectRelease();
      sub_1C0775894();
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v1 + 448);
      *(_QWORD *)(v1 + 720) = v39;
      *(_QWORD *)(v1 + 728) = v61;
      result = sub_1C0775AD4();
      v47 = v61;
      if (v54)
        goto LABEL_34;
LABEL_36:
      v66 = v86 + 1;
      if (__OFADD__(v86, 1))
      {
        __break(1u);
        goto LABEL_59;
      }
      if (v66 < v82)
      {
        v67 = *(_QWORD *)(v81 + 8 * v66);
        if (v67)
          goto LABEL_39;
        v68 = v86 + 2;
        ++v86;
        if (v66 + 1 < v82)
        {
          v67 = *(_QWORD *)(v81 + 8 * v68);
          if (v67)
            goto LABEL_42;
          v86 = v66 + 1;
          if (v66 + 2 < v82)
          {
            v67 = *(_QWORD *)(v81 + 8 * (v66 + 2));
            if (v67)
            {
              v66 += 2;
              goto LABEL_39;
            }
            v68 = v66 + 3;
            v86 = v66 + 2;
            if (v66 + 3 < v82)
              break;
          }
        }
      }
LABEL_53:
      v54 = 0;
      *(_QWORD *)(v1 + 136) = 0;
      *(_OWORD *)(v1 + 104) = 0u;
      *(_OWORD *)(v1 + 120) = 0u;
      *v89 = 0u;
    }
    v67 = *(_QWORD *)(v81 + 8 * v68);
    if (v67)
    {
LABEL_42:
      v66 = v68;
LABEL_39:
      v54 = (v67 - 1) & v67;
      v63 = __clz(__rbit64(v67)) + (v66 << 6);
      v86 = v66;
      continue;
    }
    break;
  }
  while (1)
  {
    v66 = v68 + 1;
    if (__OFADD__(v68, 1))
      break;
    if (v66 >= v82)
    {
      v86 = v82 - 1;
      goto LABEL_53;
    }
    v67 = *(_QWORD *)(v81 + 8 * v66);
    ++v68;
    if (v67)
      goto LABEL_39;
  }
LABEL_59:
  __break(1u);
  return result;
}

uint64_t sub_1C0BA2AB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v6;

  sub_1C079BF3C();
  sub_1C0780AE0(v6);
  v3[110] = v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v2)
  {
    v3[111] = a2;
    v3[112] = a1;
  }
  sub_1C077862C();
  return sub_1C077B188();
}

uint64_t sub_1C0BA2B28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C07B8008();
  swift_release();
  sub_1C07758C4();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v1);
  sub_1C0779D18();
  return sub_1C0795198(*(_QWORD *)(v2 + 896), *(_QWORD *)(v2 + 888), *(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_1C0BA2B7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C07B8008();
  swift_release();
  sub_1C07758C4();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v1);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1C0BA2BD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[7] = a4;
  v5[8] = v4;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  return swift_task_switch();
}

uint64_t sub_1C0BA2BF4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[5];
  v2 = v0[4];
  v0[9] = *(_QWORD *)((*(uint64_t (**)(_QWORD))(v0[7] + 16))(v0[6]) + 16);
  swift_retain();
  sub_1C077FA84();
  v3 = swift_allocObject();
  v0[10] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v4 = (_QWORD *)swift_task_alloc();
  v0[11] = v4;
  type metadata accessor for ErrorHandlingDatabasePool(0);
  sub_1C07803F8(&qword_1ED762200, (void (*)(uint64_t))type metadata accessor for ErrorHandlingDatabasePool);
  *v4 = v0;
  v4[1] = sub_1C0BA2CF4;
  return sub_1C106BCEC();
}

uint64_t sub_1C0BA2CF4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *v1;
  v2 = v4;
  sub_1C0780AE0(&v4);
  *(_QWORD *)(v2 + 96) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    sub_1C07785A8();
  }
  sub_1C077862C();
  return sub_1C077B188();
}

uint64_t sub_1C0BA2D58()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1C0BA2D68()
{
  uint64_t v0;

  swift_release();
  sub_1C07785A8();
  return sub_1C077CF28(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0BA2D98(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 136) = a1;
  sub_1C077862C();
  return swift_task_switch();
}

uint64_t sub_1C0BA2DB4()
{
  uint64_t v0;
  _QWORD *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _DWORD *v7;
  uint64_t v8;
  unint64_t v9;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v21;

  if (qword_1ED7558C0 != -1)
    swift_once();
  sub_1C07850AC();
  v3 = v0;
  if (v0)
  {
    if (qword_1ED75E808 != -1)
      swift_once();
    v4 = sub_1C077585C();
    sub_1C079E000(v4, (uint64_t)qword_1ED78D7A0);
    sub_1C077C818();
    sub_1C077C818();
    v5 = sub_1C106F538();
    v6 = sub_1C1070390();
    if (sub_1C077AF00(v6))
    {
      v7 = (_DWORD *)sub_1C0775854();
      v21 = sub_1C0775854();
      *v7 = 136315138;
      v1[14] = v3;
      sub_1C077C818();
      sub_1C07ACF80(&qword_1ED7614F0);
      v8 = sub_1C106FB5C();
      v1[15] = sub_1C0788DAC(v8, v9, &v21);
      sub_1C10705AC();
      sub_1C0775894();
      sub_1C077C220();
      sub_1C077C220();
      sub_1C07759F4(&dword_1C0771000, v5, v2, "InternalXPC: featureKeys error: %s");
      swift_arrayDestroy();
      sub_1C0776778();
    }
    sub_1C077C220();
    sub_1C077C220();

    swift_willThrow();
    sub_1C07907C8();
    __asm { BR              X0 }
  }
  swift_release();
  if (qword_1ED75F800 != -1)
    swift_once();
  v1[18] = sub_1C078E5BC();
  v1[16] = MEMORY[0x1E0DEE9D8];
  v11 = sub_1C0EA2290();
  v1[19] = v11;
  v12 = *((_QWORD *)v11 + 2);
  v1[20] = v12;
  if (!v12)
  {
    swift_bridgeObjectRelease();
    sub_1C07785A8();
    sub_1C07907C8();
    __asm { BR              X1 }
  }
  v1[21] = 0;
  v13 = sub_1C0EA0A4C(*((_BYTE *)v11 + 32));
  sub_1C07A3280(v13, v14);
  v15 = (_QWORD *)swift_task_alloc();
  v1[23] = v15;
  sub_1C078F7FC(v15, (uint64_t)sub_1C0BA3058);
  sub_1C07907C8();
  return sub_1C0E72164(v16, v17, v18);
}

uint64_t sub_1C0BA3058(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  _QWORD *v6;

  sub_1C079BF3C();
  sub_1C077B798(v6);
  swift_bridgeObjectRelease();
  if (v2)
  {

  }
  else
  {
    *(_QWORD *)(v3 + 192) = a2;
    *(_QWORD *)(v3 + 200) = a1;
  }
  sub_1C077862C();
  return sub_1C077B188();
}

uint64_t sub_1C0BA30C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  *(int8x16_t *)(v0 + 96) = vextq_s8(*(int8x16_t *)(v0 + 192), *(int8x16_t *)(v0 + 192), 8uLL);
  sub_1C07ACF80(&qword_1ED7526A8);
  sub_1C07ACF80(&qword_1ED752250);
  v1 = sub_1C077C458();
  if ((v1 & 1) != 0)
  {
    if (*(_QWORD *)(v0 + 80))
    {
      sub_1C077DD60((__int128 *)(v0 + 56), v0 + 16);
      v2 = *(_QWORD *)(v0 + 40);
      v3 = *(_QWORD *)(v0 + 48);
      sub_1C07B7C34();
      sub_1C0E0D380(v2, v3);
      sub_1C0BDB440(v4);
      sub_1C0775AD4();
      goto LABEL_6;
    }
  }
  else
  {
    *(_QWORD *)(v0 + 88) = 0;
    *(_OWORD *)(v0 + 56) = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
  }
  sub_1C077C790(v1, (uint64_t *)&unk_1EF641270);
LABEL_6:
  v5 = *(_QWORD *)(v0 + 168) + 1;
  if (v5 == *(_QWORD *)(v0 + 160))
  {
    swift_bridgeObjectRelease();
    sub_1C07785A8();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 128));
  }
  else
  {
    v7 = sub_1C07B4880(v5);
    sub_1C07A3280(v7, v8);
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 184) = v9;
    v10 = sub_1C078F7FC(v9, (uint64_t)sub_1C0BA3058);
    return sub_1C0E72164(v10, v11, v12);
  }
}

uint64_t sub_1C0BA31F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  *(_OWORD *)(v1 + 56) = 0u;
  *(_QWORD *)(v1 + 88) = 0;
  *(_OWORD *)(v1 + 72) = 0u;
  sub_1C077C790(a1, (uint64_t *)&unk_1EF641270);
  v2 = *(_QWORD *)(v1 + 168) + 1;
  if (v2 == *(_QWORD *)(v1 + 160))
  {
    swift_bridgeObjectRelease();
    sub_1C07785A8();
    return sub_1C0787904(*(_QWORD *)(v1 + 128), *(uint64_t (**)(void))(v1 + 8));
  }
  else
  {
    v4 = sub_1C07B4880(v2);
    sub_1C07A3280(v4, v5);
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v1 + 184) = v6;
    v7 = sub_1C078F7FC(v6, (uint64_t)sub_1C0BA3058);
    return sub_1C0E72164(v7, v8, v9);
  }
}

uint64_t InternalXPC.Server.viewInfo(viewQuery:rows:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  v3[8] = sub_1C07ACF80(&qword_1ED75E630);
  v3[9] = sub_1C0779D74();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0BA32E0()
{
  void *v0;
  uint64_t *v1;
  uint64_t v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  char v10;
  _QWORD *v11;

  if (qword_1ED75E808 != -1)
    swift_once();
  v2 = sub_1C077585C();
  sub_1C079E000(v2, (uint64_t)qword_1ED78D7A0);
  sub_1C077C0FC();
  v3 = sub_1C0784E0C();
  if (sub_1C07758D8(v3))
  {
    *(_WORD *)sub_1C0775854() = 0;
    sub_1C0790E38(&dword_1C0771000, v4, v5, "InternalXPC: viewInfo");
    sub_1C0776778();
  }

  if (qword_1ED749400 != -1)
    swift_once();
  sub_1C079E000(v1[8], (uint64_t)qword_1ED7493E0);
  v6 = sub_1C079679C();
  sub_1C079C6B4(v6, v7, &qword_1ED75E630);
  v8 = sub_1C0779D10();
  result = sub_1C078B100(v8);
  if (v10)
  {
    __break(1u);
  }
  else
  {
    v11 = (_QWORD *)swift_task_alloc();
    v1[10] = (uint64_t)v11;
    *v11 = v1;
    v11[1] = sub_1C0BA3414;
    return sub_1C0B9EAAC(v1[5], v1[6], v1[9]);
  }
  return result;
}

uint64_t sub_1C0BA3414(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;

  sub_1C0789E98();
  sub_1C0780AE0(v5);
  *(_QWORD *)(v2 + 88) = v1;
  v6 = swift_task_dealloc();
  if (v1)
  {
    sub_1C077862C();
    return sub_1C077F6CC();
  }
  else
  {
    sub_1C07825F4(v6, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    sub_1C07767BC();
    return sub_1C0787904(a1, *(uint64_t (**)(void))(v3 + 8));
  }
}

uint64_t sub_1C0BA34FC(void *a1, void *a2, void *aBlock, void *a4)
{
  _QWORD *v4;
  id v8;
  id v9;
  _QWORD *v10;

  v4[3] = a2;
  v4[4] = a4;
  v4[2] = a1;
  v4[5] = _Block_copy(aBlock);
  v8 = a1;
  v9 = a2;
  a4;
  v10 = (_QWORD *)swift_task_alloc();
  v4[6] = v10;
  *v10 = v4;
  v10[1] = sub_1C0BA3588;
  return InternalXPC.Server.viewInfo(viewQuery:rows:)((uint64_t)v8, (uint64_t)a2);
}

uint64_t sub_1C0BA3588()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  sub_1C0789E98();
  v4 = (void *)v1[3];
  v3 = (void *)v1[4];
  v5 = (void *)v1[2];
  sub_1C077B798(v6);

  if (v0)
  {
    v7 = sub_1C0779980();
    sub_1C077C220();
    v8 = (void *)v7;
  }
  else
  {
    sub_1C07ACF80(&qword_1ED758CC0);
    v9 = sub_1C077D270();
    sub_1C077960C();
    v8 = (void *)v9;
  }
  sub_1C0787F74();

  sub_1C07AEF7C();
  return sub_1C078F470(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t InternalXPC.Server.viewSql(name:statement:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[8] = a4;
  v5[9] = v4;
  v5[6] = a2;
  v5[7] = a3;
  v5[5] = a1;
  v5[10] = sub_1C07ACF80(&qword_1ED75E630);
  v5[11] = sub_1C0779D74();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0BA367C()
{
  void *v0;
  uint64_t *v1;
  uint64_t v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  char v10;
  _QWORD *v11;

  if (qword_1ED75E808 != -1)
    swift_once();
  v2 = sub_1C077585C();
  sub_1C079E000(v2, (uint64_t)qword_1ED78D7A0);
  sub_1C077C0FC();
  v3 = sub_1C0784E0C();
  if (sub_1C07758D8(v3))
  {
    *(_WORD *)sub_1C0775854() = 0;
    sub_1C0790E38(&dword_1C0771000, v4, v5, "InternalXPC: viewSql");
    sub_1C0776778();
  }

  if (qword_1ED749400 != -1)
    swift_once();
  sub_1C079E000(v1[10], (uint64_t)qword_1ED7493E0);
  v6 = sub_1C079679C();
  sub_1C079C6B4(v6, v7, &qword_1ED75E630);
  v8 = sub_1C0779D10();
  result = sub_1C078B100(v8);
  if (v10)
  {
    __break(1u);
  }
  else
  {
    v11 = (_QWORD *)swift_task_alloc();
    v1[12] = (uint64_t)v11;
    *v11 = v1;
    v11[1] = sub_1C0BA37B0;
    return sub_1C0BA1D38(v1[5], v1[6], v1[7], v1[8], v1[11]);
  }
  return result;
}

uint64_t sub_1C0BA37B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;

  sub_1C079BF3C();
  sub_1C0780AE0(v7);
  *(_QWORD *)(v4 + 104) = v2;
  v8 = swift_task_dealloc();
  if (v2)
  {
    sub_1C077862C();
    return sub_1C077B188();
  }
  else
  {
    sub_1C07825F4(v8, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    sub_1C07767BC();
    return sub_1C0795198(a1, a2, *(uint64_t (**)(void))(v3 + 8));
  }
}

uint64_t sub_1C0BA3830(uint64_t a1)
{
  uint64_t v1;

  sub_1C07825F4(a1, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  sub_1C07767BC();
  return sub_1C077CF28(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1C0BA38E0(int a1, int a2, void *aBlock, void *a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4[2] = a4;
  v4[3] = _Block_copy(aBlock);
  v6 = sub_1C106FB14();
  v8 = v7;
  v4[4] = v7;
  v9 = sub_1C106FB14();
  v11 = v10;
  v4[5] = v10;
  a4;
  v12 = (_QWORD *)swift_task_alloc();
  v4[6] = v12;
  *v12 = v4;
  v12[1] = sub_1C0BA3994;
  return InternalXPC.Server.viewSql(name:statement:)(v6, v8, v9, v11);
}

uint64_t sub_1C0BA3994()
{
  uint64_t v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v7;

  v7 = *v1;
  v2 = *(void **)(v7 + 16);
  sub_1C077B798(&v7);

  sub_1C077B5B4();
  swift_bridgeObjectRelease();
  if (v0)
  {
    v3 = sub_1C0779980();
    sub_1C077C220();
    v4 = (void *)v3;
  }
  else
  {
    v5 = sub_1C106FAF0();
    sub_1C077960C();
    v4 = (void *)v5;
  }
  sub_1C0787F74();

  sub_1C07AEF7C();
  return ((uint64_t (*)(void))v1[1])();
}

uint64_t InternalXPC.Server.featureKeys()()
{
  uint64_t v0;
  _QWORD *v1;

  v1[5] = v0;
  v1[6] = sub_1C07ACF80(&qword_1ED75E630);
  v1[7] = sub_1C0779D74();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0BA3A98()
{
  void *v0;
  uint64_t *v1;
  uint64_t v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  char v10;
  _QWORD *v11;

  if (qword_1ED75E808 != -1)
    swift_once();
  v2 = sub_1C077585C();
  sub_1C079E000(v2, (uint64_t)qword_1ED78D7A0);
  sub_1C077C0FC();
  v3 = sub_1C0784E0C();
  if (sub_1C07758D8(v3))
  {
    *(_WORD *)sub_1C0775854() = 0;
    sub_1C0790E38(&dword_1C0771000, v4, v5, "InternalXPC: featureKeys");
    sub_1C0776778();
  }

  if (qword_1ED749400 != -1)
    swift_once();
  sub_1C079E000(v1[6], (uint64_t)qword_1ED7493E0);
  v6 = sub_1C079679C();
  sub_1C079C6B4(v6, v7, &qword_1ED75E630);
  v8 = sub_1C0779D10();
  result = sub_1C078B100(v8);
  if (v10)
  {
    __break(1u);
  }
  else
  {
    v11 = (_QWORD *)swift_task_alloc();
    v1[8] = (uint64_t)v11;
    *v11 = v1;
    v11[1] = sub_1C0BA3BC4;
    return sub_1C0BA2D98(v1[7]);
  }
  return result;
}

uint64_t sub_1C0BA3BC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;

  sub_1C0789E98();
  sub_1C0780AE0(v5);
  *(_QWORD *)(v2 + 72) = v1;
  v6 = swift_task_dealloc();
  if (v1)
  {
    sub_1C077862C();
    return sub_1C077F6CC();
  }
  else
  {
    sub_1C07825F4(v6, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    sub_1C07767BC();
    return sub_1C0787904(a1, *(uint64_t (**)(void))(v3 + 8));
  }
}

uint64_t sub_1C0BA3C34(uint64_t a1)
{
  uint64_t v1;

  sub_1C07825F4(a1, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  sub_1C07767BC();
  return sub_1C077CF28(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1C0BA3CC8(const void *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v4;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  v4 = (_QWORD *)swift_task_alloc();
  v2[4] = v4;
  *v4 = v2;
  v4[1] = sub_1C0BA3D28;
  return InternalXPC.Server.featureKeys()();
}

uint64_t sub_1C0BA3D28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;

  sub_1C0789E98();
  v3 = *(void **)(v1 + 16);
  sub_1C077B798(v4);

  if (v0)
  {
    v5 = sub_1C0779980();
    sub_1C077C220();
    v6 = (void *)v5;
  }
  else
  {
    sub_1C0BA4304();
    v7 = sub_1C077D270();
    sub_1C077960C();
    v6 = (void *)v7;
  }
  sub_1C0787F74();

  sub_1C07AEF7C();
  return sub_1C078F470(*(uint64_t (**)(void))(v2 + 8));
}

void sub_1C0BA3DB8(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _OWORD v41[2];
  uint64_t v42;
  uint64_t v43;

  v3 = sub_1C07ACF80(&qword_1ED7626C0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v39 - v7;
  v9 = sub_1C106C040();
  sub_1C07B2D8C((uint64_t)v8, 1, 1, v9);
  v10 = sub_1C106C580();
  sub_1C0784B6C((uint64_t)v8, &qword_1ED7626C0);
  if (!v1)
  {
    v43 = v10;
    v11 = sub_1C106C004();
    for (i = MEMORY[0x1E0DEE9D8]; ; i = v16)
    {
      while (1)
      {
        if (!v11)
        {
          *(_QWORD *)&v41[0] = i;
          sub_1C07ACF80(&qword_1ED762B70);
          sub_1C07BB218(&qword_1ED762430, &qword_1ED762B70);
          v36 = sub_1C106FA54();
          v38 = v37;
          swift_bridgeObjectRelease();
          swift_release();
          *a1 = v36;
          a1[1] = v38;
          return;
        }
        v13 = a1;
        v14 = sub_1C106C3F4();
        sub_1C07B2D8C((uint64_t)v5, 1, 1, v9);
        v42 = 0;
        memset(v41, 0, sizeof(v41));
        v15 = sub_1C106C3D0();
        v16 = i;
        sub_1C0784B6C((uint64_t)v41, (uint64_t *)&unk_1ED7626A0);
        sub_1C0784B6C((uint64_t)v5, &qword_1ED7626C0);
        if (v15 >> 62)
          break;
        v17 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v17)
          goto LABEL_7;
LABEL_10:
        if (v17 == 1)
        {
          v18 = v16;
          if ((v15 & 0xC000000000000001) != 0)
          {
            _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
            v19 = MEMORY[0x1C3BA70DC](0, v15);
            swift_bridgeObjectRelease();
          }
          else
          {
            if (!*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              return;
            }
            v19 = *(_QWORD *)(v15 + 32);
            swift_retain();
          }
          swift_bridgeObjectRelease();
          *(_QWORD *)&v41[0] = v19;
          sub_1C07803F8(qword_1EF6412A0, (void (*)(uint64_t))MEMORY[0x1E0D24538]);
          v40 = sub_1C1070C0C();
          v21 = v20;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C07B7730();
            v18 = v32;
          }
          v22 = v18;
          v23 = *(_QWORD *)(v18 + 16);
          v24 = v22;
          if (v23 >= *(_QWORD *)(v22 + 24) >> 1)
          {
            sub_1C07B7730();
            v24 = v33;
          }
          *(_QWORD *)(v24 + 16) = v23 + 1;
          v25 = v24 + 16 * v23;
          i = v24;
          *(_QWORD *)(v25 + 32) = v40;
          *(_QWORD *)(v25 + 40) = v21;
          swift_release();
        }
        else
        {
          v26 = MEMORY[0x1C3BA683C](v15, v14);
          v40 = v27;
          swift_bridgeObjectRelease();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C07B7730();
            v16 = v34;
          }
          v28 = *(_QWORD *)(v16 + 16);
          v29 = v16;
          if (v28 >= *(_QWORD *)(v16 + 24) >> 1)
          {
            sub_1C07B7730();
            v29 = v35;
          }
          *(_QWORD *)(v29 + 16) = v28 + 1;
          v30 = v29 + 16 * v28;
          i = v29;
          v31 = v40;
          *(_QWORD *)(v30 + 32) = v26;
          *(_QWORD *)(v30 + 40) = v31;
        }
        swift_release();
        v11 = sub_1C106C004();
        a1 = v13;
      }
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v40 = sub_1C10709B4();
      swift_bridgeObjectRelease();
      if (v40)
      {
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v17 = sub_1C10709B4();
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
LABEL_7:
      swift_release();
      swift_bridgeObjectRelease();
      v11 = sub_1C106C004();
      a1 = v13;
    }
  }
}

uint64_t sub_1C0BA4274()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_1C0BA42A0()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1C0806670;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_1EF641238 + dword_1EF641238))(v2, v3);
}

unint64_t sub_1C0BA4304()
{
  unint64_t result;

  result = qword_1ED7447C0;
  if (!qword_1ED7447C0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED7447C0);
  }
  return result;
}

uint64_t sub_1C0BA4344()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1C0791334(v1, (uint64_t)sub_1C08B8620);
  return sub_1C07930CC(v2, v3, v4, v5, v6);
}

uint64_t sub_1C0BA4394()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 32));
  return swift_deallocObject();
}

uint64_t sub_1C0BA43D0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1C0791334(v1, (uint64_t)sub_1C08B8620);
  return sub_1C07930CC(v2, v3, v4, v5, v6);
}

uint64_t sub_1C0BA441C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1ED744768);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0BA4464()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1C0BA4488(uint64_t *a1@<X8>)
{
  sub_1C0BA3DB8(a1);
}

double sub_1C0BA44A0@<D0>(_OWORD *a1@<X8>)
{
  return sub_1C0B9F9A8(a1);
}

void sub_1C0BA44BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1C0B9F9F8(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD **)(v2 + 40));
}

uint64_t sub_1C0BA44D8(uint64_t result, unint64_t a2, char a3)
{
  if (a3 == 3)
    return sub_1C07B3374(result, a2);
  if (a3 == 2)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_1C0BA44FC()
{
  unint64_t result;

  result = qword_1ED7530D0;
  if (!qword_1ED7530D0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BDEC8, &unk_1E7A345B8);
    atomic_store(result, (unint64_t *)&qword_1ED7530D0);
  }
  return result;
}

uint64_t sub_1C0BA4538(uint64_t a1)
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

uint64_t sub_1C0BA4560(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1C0BA4588()
{
  unint64_t result;

  result = qword_1ED746D58;
  if (!qword_1ED746D58)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BDD08, &unk_1E7A34660);
    atomic_store(result, (unint64_t *)&qword_1ED746D58);
  }
  return result;
}

unint64_t sub_1C0BA45C4()
{
  unint64_t result;

  result = qword_1ED755B10[0];
  if (!qword_1ED755B10[0])
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BE370, &_s11SourceStateVN);
    atomic_store(result, qword_1ED755B10);
  }
  return result;
}

uint64_t sub_1C0BA4600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  uint64_t result;

  if (a7 >> 60 != 11)
    return sub_1C07B33B8(a6, a7);
  return result;
}

uint64_t sub_1C0BA461C(uint64_t a1)
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

uint64_t sub_1C0BA4644(uint64_t a1)
{
  sub_1C07B3594(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
  return a1;
}

uint64_t sub_1C0BA4670(uint64_t a1)
{
  sub_1C07B33B8(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
  return a1;
}

uint64_t sub_1C0BA469C(uint64_t a1, uint64_t a2)
{
  return sub_1C0BA470C(a1, a2, (uint64_t)&OBJC_IVAR____TtC24IntelligencePlatformCore23GlobalKnowledgeDatabase_pool, (uint64_t)sub_1C0BAE6F8, (uint64_t (*)(uint64_t, _QWORD *))sub_1C0BB962C);
}

uint64_t sub_1C0BA46B8(uint64_t a1, uint64_t a2)
{
  return sub_1C0BA470C(a1, a2, (uint64_t)&OBJC_IVAR____TtC24IntelligencePlatformCore13GraphDatabase_pool, (uint64_t)sub_1C0BAE6E0, (uint64_t (*)(uint64_t, _QWORD *))sub_1C0BB9638);
}

uint64_t sub_1C0BA46D4(uint64_t a1, uint64_t a2)
{
  return sub_1C0BA470C(a1, a2, (uint64_t)&OBJC_IVAR____TtC24IntelligencePlatformCore23GlobalKnowledgeDatabase_pool, (uint64_t)sub_1C0BAE710, (uint64_t (*)(uint64_t, _QWORD *))sub_1C0BB9968);
}

uint64_t sub_1C0BA46F0(uint64_t a1, uint64_t a2)
{
  return sub_1C0BA470C(a1, a2, (uint64_t)&OBJC_IVAR____TtC24IntelligencePlatformCore13GraphDatabase_pool, (uint64_t)sub_1C0BAE6C8, (uint64_t (*)(uint64_t, _QWORD *))sub_1C0BB9644);
}

uint64_t sub_1C0BA470C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, _QWORD *))
{
  uint64_t v7;
  _QWORD v9[4];

  v9[2] = a2;
  v9[3] = a1;
  swift_retain();
  v7 = a5(a4, v9);
  sub_1C07785A8();
  return v7;
}

void sub_1C0BA476C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = sub_1C106AA08();
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, _QWORD))(a3 + 16))(a3, a1 & 1);

}

void sub_1C0BA47C4(uint64_t a1)
{
  NSObject *v1;
  uint64_t v2;
  os_log_type_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  os_log_type_t v19;
  _WORD *v20;

  v5 = sub_1C07ACF80(&qword_1ED75E630);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0780A08();
  if (qword_1ED75E808 != -1)
    swift_once();
  v7 = sub_1C077585C();
  v8 = sub_1C079E000(v7, (uint64_t)qword_1ED78D7A0);
  sub_1C077C0FC();
  v9 = sub_1C0784E0C();
  if (sub_1C07767E4(v9))
  {
    v10 = (uint8_t *)sub_1C0780FC8();
    *(_WORD *)v10 = 0;
    sub_1C077F048(&dword_1C0771000, v1, v3, "InternalXPC: starting...", v10);
    sub_1C0776778();
  }

  if (qword_1ED749400 != -1)
    swift_once();
  v11 = sub_1C079E000(v5, (uint64_t)qword_1ED7493E0);
  sub_1C07E6C80(a1, v2, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v12 = sub_1C0779D10();
  sub_1C07B2D8C(v2, 0, 1, v12);
  sub_1C077F040();
  sub_1C0800ADC(v2, v11);
  swift_endAccess();
  sub_1C0800B24();
  sub_1C0BAE754();
  v13 = sub_1C0BBE34C();
  v14 = (void *)qword_1ED78C878;
  qword_1ED78C878 = (uint64_t)v13;

  v15 = (void *)qword_1ED78C878;
  if (qword_1ED78C878)
  {
    v16 = objc_allocWithZone((Class)type metadata accessor for InternalXPC.Delegate());
    v17 = v15;
    qword_1ED78C870 = (uint64_t)objc_msgSend(v16, sel_init);
    swift_unknownObjectRelease();
    -[NSObject setDelegate:](v17, sel_setDelegate_, qword_1ED78C870);
    -[NSObject resume](v17, sel_resume);
  }
  else
  {
    v18 = v8;
    v17 = sub_1C106F538();
    v19 = sub_1C107039C();
    if (sub_1C077F60C(v19))
    {
      v20 = (_WORD *)sub_1C0780FC8();
      sub_1C078C17C(v20);
      sub_1C077F048(&dword_1C0771000, v17, v18, "Failed to create Internal XPC service", 0);
      sub_1C0776778();
    }
  }

  sub_1C077C798();
}

uint64_t sub_1C0BA4A04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1C07ACF80(&qword_1ED75E630);
  sub_1C0800A9C(v0, qword_1ED7493E0);
  v1 = sub_1C079E000(v0, (uint64_t)qword_1ED7493E0);
  v2 = sub_1C0779D10();
  return sub_1C07B2D8C(v1, 1, 1, v2);
}

void static InternalXPC.configuration.getter(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED749400 != -1)
    swift_once();
  v2 = sub_1C07ACF80(&qword_1ED75E630);
  v3 = sub_1C079E000(v2, (uint64_t)qword_1ED7493E0);
  sub_1C0775864();
  sub_1C0782470(v3, a1);
  sub_1C077C0D8();
}

void static InternalXPC.configuration.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED749400 != -1)
    swift_once();
  v2 = sub_1C07ACF80(&qword_1ED75E630);
  v3 = sub_1C079E000(v2, (uint64_t)qword_1ED7493E0);
  sub_1C077F040();
  sub_1C0BA4B6C(a1, v3);
  swift_endAccess();
  sub_1C0781B00(a1);
  sub_1C077C0D8();
}

uint64_t sub_1C0BA4B6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1ED75E630);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t (*static InternalXPC.configuration.modify())()
{
  uint64_t v0;

  if (qword_1ED749400 != -1)
    swift_once();
  v0 = sub_1C07ACF80(&qword_1ED75E630);
  sub_1C079E000(v0, (uint64_t)qword_1ED7493E0);
  sub_1C077F040();
  return j__swift_endAccess;
}

uint64_t static InternalXPC.InternalXPCError.== infix(_:_:)()
{
  return 1;
}

uint64_t InternalXPC.InternalXPCError.hash(into:)()
{
  return sub_1C1070E04();
}

uint64_t InternalXPC.InternalXPCError.hashValue.getter()
{
  sub_1C1070DF8();
  sub_1C1070E04();
  return sub_1C1070E4C();
}

uint64_t sub_1C0BA4CC4()
{
  return InternalXPC.InternalXPCError.hashValue.getter();
}

uint64_t sub_1C0BA4CD8()
{
  return InternalXPC.InternalXPCError.hash(into:)();
}

void sub_1C0BA4CEC(uint64_t a1, void (**a2)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  void *v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  id v32[2];

  v32[1] = *(id *)MEMORY[0x1E0C80C00];
  v3 = sub_1C106FB50();
  MEMORY[0x1E0C80A78](v3);
  if (qword_1ED75E808 != -1)
    swift_once();
  v4 = sub_1C106F544();
  sub_1C079E000(v4, (uint64_t)qword_1ED78D7A0);
  v5 = sub_1C106F538();
  v6 = sub_1C10703A8();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_1C0771000, v5, v6, "InternalXPC: status", v7, 2u);
    MEMORY[0x1C3BA8270](v7, -1, -1);
  }

  sub_1C0B6B554();
  v19 = (void *)MEMORY[0x1C3BA79F4]();
  v20 = (void *)objc_opt_self();
  v21 = (void *)sub_1C106F934();
  v32[0] = 0;
  v22 = objc_msgSend(v20, sel_dataWithJSONObject_options_error_, v21, 3, v32);

  v23 = v32[0];
  if (v22)
  {
    v24 = sub_1C106AC18();
    v26 = v25;

    objc_autoreleasePoolPop(v19);
    swift_bridgeObjectRelease();
    sub_1C106FB44();
    sub_1C106FB2C();
    if (v27)
    {
      v28 = (void *)sub_1C106FAF0();
      ((void (**)(_QWORD, void *, _QWORD))a2)[2](a2, v28, 0);

      sub_1C07B3374(v24, v26);
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1C0BAE2B8();
    v30 = (void *)swift_allocError();
    v31 = (void *)sub_1C106AA08();
    ((void (**)(_QWORD, _QWORD, void *))a2)[2](a2, 0, v31);

    sub_1C07B3374(v24, v26);
  }
  else
  {
    v29 = v23;
    v30 = (void *)sub_1C106AA14();

    swift_willThrow();
    objc_autoreleasePoolPop(v19);
    swift_bridgeObjectRelease();
    v8 = v30;
    v9 = v30;
    v10 = sub_1C106F538();
    v11 = sub_1C1070390();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = (void *)swift_slowAlloc();
      v32[0] = v13;
      *(_DWORD *)v12 = 136315138;
      v14 = v30;
      sub_1C07ACF80(&qword_1ED7614F0);
      v15 = sub_1C106FB5C();
      sub_1C0788DAC(v15, v16, (uint64_t *)v32);
      sub_1C10705AC();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C0771000, v10, v11, "InternalXPC: status: failed: %s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v13, -1, -1);
      MEMORY[0x1C3BA8270](v12, -1, -1);
    }
    else
    {

    }
    v17 = v30;
    v18 = (void *)sub_1C106AA08();
    ((void (**)(_QWORD, _QWORD, void *))a2)[2](a2, 0, v18);

  }
LABEL_11:
  _Block_release(a2);
}

void InternalXPC.Server.status(completion:)()
{
  NSObject *v0;
  uint64_t v1;
  char v2;
  char v3;
  os_log_type_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;

  sub_1C0BAE768();
  sub_1C07BBF74(*MEMORY[0x1E0C80C00]);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v1);
  sub_1C0778564();
  v4 = v3 - v2;
  if (qword_1ED75E808 != -1)
    swift_once();
  v5 = sub_1C077585C();
  sub_1C079E000(v5, (uint64_t)qword_1ED78D7A0);
  v6 = sub_1C077C0FC();
  v7 = sub_1C10703A8();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)sub_1C0780FC8();
    *(_WORD *)v8 = 0;
    sub_1C077F048(&dword_1C0771000, v6, v7, "InternalXPC: status", v8);
    sub_1C0776778();
  }

  sub_1C0B6B554();
  v14 = (void *)MEMORY[0x1C3BA79F4]();
  v15 = (void *)objc_opt_self();
  v16 = (void *)sub_1C106F934();
  v24 = 0;
  v17 = objc_msgSend(v15, sel_dataWithJSONObject_options_error_, v16, 3, &v24);

  v18 = v24;
  if (v17)
  {
    v19 = sub_1C106AC18();

    objc_autoreleasePoolPop(v14);
    sub_1C077589C();
    sub_1C106FB44();
    sub_1C106FB2C();
    if (v20)
    {
      sub_1C079FDB0();
      sub_1C07B1E08(v19);
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    sub_1C0BAE2B8();
    v23 = sub_1C0775810();
    sub_1C079FDB0();
    sub_1C07B1E08(v19);
    v13 = (void *)v23;
  }
  else
  {
    v21 = v18;
    v22 = sub_1C106AA14();

    swift_willThrow();
    objc_autoreleasePoolPop(v14);
    sub_1C077589C();
    sub_1C0778734();
    sub_1C0778734();
    sub_1C106F538();
    v9 = sub_1C077C13C();
    if (sub_1C07767E4(v9))
    {
      v10 = (uint8_t *)sub_1C0775854();
      v24 = (id)sub_1C0775854();
      *(_DWORD *)v10 = 136315138;
      sub_1C0778734();
      sub_1C07ACF80(&qword_1ED7614F0);
      v11 = sub_1C106FB5C();
      sub_1C0788DAC(v11, v12, (uint64_t *)&v24);
      sub_1C078ACB4();
      swift_bridgeObjectRelease();
      sub_1C0780A2C();
      sub_1C0780A2C();
      sub_1C07796F0(&dword_1C0771000, v0, v4, "InternalXPC: status: failed: %s", v10);
      sub_1C0778610();
      sub_1C0776778();
    }
    sub_1C0780A2C();
    sub_1C0780A2C();

    sub_1C0778734();
    sub_1C079FDB0();
    sub_1C0780A2C();
    v13 = (void *)v22;
  }

LABEL_10:
  sub_1C0776760();
}

uint64_t InternalXPC.Server.clearStatus()()
{
  _QWORD *v0;

  v0[18] = sub_1C0779D10();
  v0[19] = sub_1C0786414();
  v0[20] = swift_task_alloc();
  v0[21] = type metadata accessor for Pipeline.StatusStore();
  v0[22] = sub_1C0779D74();
  v0[23] = sub_1C07ACF80(&qword_1ED75E630);
  v0[24] = sub_1C0786414();
  v0[25] = swift_task_alloc();
  _s11StatusStoreVMa();
  v0[26] = sub_1C0779D74();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0BA5550()
{
  os_log_type_t v0;
  NSObject *v1;
  uint8_t *v2;
  _QWORD *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _WORD *v7;
  _QWORD *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  os_log_type_t v23;
  _WORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;

  if (qword_1ED75E808 != -1)
    swift_once();
  v4 = sub_1C077585C();
  v5 = sub_1C079E000(v4, (uint64_t)qword_1ED78D7A0);
  sub_1C077C0FC();
  v6 = sub_1C0784E0C();
  if (sub_1C077C10C(v6))
  {
    v7 = (_WORD *)sub_1C0780FC8();
    sub_1C078C17C(v7);
    sub_1C077F048(&dword_1C0771000, v1, v0, "InternalXPC: clearStatus", v2);
    sub_1C0776778();
  }

  v8 = static PipelineType.allCases.getter();
  if (v8[2])
  {
    v27 = v8;
    if (qword_1ED749400 != -1)
      swift_once();
    v28 = v3[21];
    v9 = *((_BYTE *)v27 + 32);
    v10 = v3[24];
    v11 = v3[18];
    v12 = sub_1C079E000(v3[23], (uint64_t)qword_1ED7493E0);
    sub_1C0775864();
    sub_1C078A8CC(v12, v10, &qword_1ED75E630);
    sub_1C077AEEC(v10, 1, v11);
    if (!v13)
    {
      v14 = v3[22];
      v15 = v3[20];
      sub_1C07E563C(v3[24], v14, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
      *(_BYTE *)(v14 + *(int *)(v28 + 20)) = v9;
      sub_1C07E6C80(v14, v15, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
      sub_1C077F0E4();
      __asm { BR              X8 }
    }
    __break(1u);
    goto LABEL_17;
  }
  swift_bridgeObjectRelease();
  if (qword_1ED749400 != -1)
    swift_once();
  v17 = v3[25];
  v18 = v3[18];
  v19 = sub_1C079E000(v3[23], (uint64_t)qword_1ED7493E0);
  sub_1C0775864();
  sub_1C0BAE788(v19, v20, &qword_1ED75E630);
  sub_1C077AEEC(v17, 1, v18);
  if (v13)
  {
LABEL_17:
    __break(1u);
    JUMPOUT(0x1C0BA5C98);
  }
  sub_1C07E563C(v3[25], v3[26], (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  sub_1C0E65714();
  sub_1C0E65714();
  sub_1C106F538();
  v23 = sub_1C0784E0C();
  if (sub_1C077C10C(v23))
  {
    v24 = (_WORD *)sub_1C0780FC8();
    sub_1C078C17C(v24);
    sub_1C077F048(&dword_1C0771000, v5, (os_log_type_t)v17, "InternalXPC: clearStatus: done", 0);
    sub_1C0776778();
  }

  sub_1C0791DDC(v25, (uint64_t (*)(_QWORD))_s11StatusStoreVMa);
  sub_1C07796F8();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v26 = sub_1C0779970();
  return v21(v26);
}

uint64_t sub_1C0BA5CCC(const void *a1, void *a2)
{
  _QWORD *v2;
  id v4;
  _QWORD *v5;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  v4 = a2;
  v5 = (_QWORD *)swift_task_alloc();
  v2[4] = v5;
  *v5 = v2;
  v5[1] = sub_1C0BA5D28;
  return InternalXPC.Server.clearStatus()();
}

uint64_t sub_1C0BA5D28()
{
  void *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  _QWORD *v6;

  sub_1C077C910();
  v4 = *(void **)(v3 + 16);
  v5 = *v2;
  sub_1C07878A8(v6);

  if (v1)
  {
    sub_1C106AA08();
    sub_1C07B5A8C();
    sub_1C07AD738();

  }
  else
  {
    sub_1C07AE95C();
  }
  _Block_release(*(const void **)(v3 + 24));
  return (*(uint64_t (**)(void))(v5 + 8))();
}

void sub_1C0BA5D9C(uint64_t a1, void (**a2)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  void *v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  void *v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  id v41[5];

  v41[4] = *(id *)MEMORY[0x1E0C80C00];
  v3 = sub_1C106FB50();
  MEMORY[0x1E0C80A78](v3);
  v4 = sub_1C07ACF80(&qword_1ED75E630);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED75E808 != -1)
    swift_once();
  v7 = sub_1C106F544();
  sub_1C079E000(v7, (uint64_t)qword_1ED78D7A0);
  v8 = sub_1C106F538();
  v9 = sub_1C10703A8();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_1C0771000, v8, v9, "InternalXPC: stats", v10, 2u);
    MEMORY[0x1C3BA8270](v10, -1, -1);
  }

  if (qword_1ED749400 != -1)
    swift_once();
  v11 = sub_1C079E000(v4, (uint64_t)qword_1ED7493E0);
  swift_beginAccess();
  sub_1C078A8CC(v11, (uint64_t)v6, &qword_1ED75E630);
  v12 = type metadata accessor for Configuration();
  if (sub_1C07B2D80((uint64_t)v6, 1, v12) == 1)
    __break(1u);
  sub_1C0D6A734();
  sub_1C07B1F90((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v25 = (void *)MEMORY[0x1C3BA79F4]();
  v26 = (void *)objc_opt_self();
  v27 = (void *)sub_1C106F934();
  v41[0] = 0;
  v28 = objc_msgSend(v26, sel_dataWithJSONObject_options_error_, v27, 3, v41);

  v29 = v41[0];
  if (v28)
  {
    v30 = sub_1C106AC18();
    v32 = v31;

    objc_autoreleasePoolPop(v25);
    swift_bridgeObjectRelease();
    sub_1C106FB44();
    sub_1C106FB2C();
    if (v33)
    {
      v34 = (void *)sub_1C106FAF0();
      ((void (**)(_QWORD, void *, _QWORD))a2)[2](a2, v34, 0);

      sub_1C07B3374(v30, v32);
      swift_bridgeObjectRelease();
      goto LABEL_14;
    }
    sub_1C0BAE2B8();
    v37 = swift_allocError();
    v38 = (void *)sub_1C106AA08();
    ((void (**)(_QWORD, _QWORD, void *))a2)[2](a2, 0, v38);

    sub_1C07B3374(v30, v32);
    v24 = (void *)v37;
  }
  else
  {
    v35 = v29;
    v36 = (void *)sub_1C106AA14();

    swift_willThrow();
    objc_autoreleasePoolPop(v25);
    swift_bridgeObjectRelease();
    v13 = v36;
    v14 = v36;
    v15 = sub_1C106F538();
    v16 = sub_1C1070390();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = (void *)swift_slowAlloc();
      v41[0] = v18;
      *(_DWORD *)v17 = 136315138;
      v40 = (uint64_t)v36;
      v19 = v36;
      sub_1C07ACF80(&qword_1ED7614F0);
      v20 = sub_1C106FB5C();
      v40 = sub_1C0788DAC(v20, v21, (uint64_t *)v41);
      sub_1C10705AC();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C0771000, v15, v16, "InternalXPC: stats: failed: %s", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v18, -1, -1);
      MEMORY[0x1C3BA8270](v17, -1, -1);
    }
    else
    {

    }
    v22 = v36;
    v23 = (void *)sub_1C106AA08();
    ((void (**)(_QWORD, _QWORD, void *))a2)[2](a2, 0, v23);

    v24 = v36;
  }

LABEL_14:
  _Block_release(a2);
}

void InternalXPC.Server.stats(completion:)()
{
  NSObject *v0;
  uint64_t v1;
  char v2;
  char v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;

  sub_1C0BAE768();
  sub_1C07BBF74(*MEMORY[0x1E0C80C00]);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v1);
  sub_1C0778564();
  v4 = v3 - v2;
  v5 = sub_1C07ACF80(&qword_1ED75E630);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0778564();
  v9 = v8 - v7;
  if (qword_1ED75E808 != -1)
    swift_once();
  v10 = sub_1C077585C();
  sub_1C079E000(v10, (uint64_t)qword_1ED78D7A0);
  v11 = sub_1C077C0FC();
  v12 = sub_1C10703A8();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)sub_1C0780FC8();
    *(_WORD *)v13 = 0;
    sub_1C077F048(&dword_1C0771000, v11, v12, "InternalXPC: stats", v13);
    sub_1C0776778();
  }

  if (qword_1ED749400 != -1)
    swift_once();
  v14 = sub_1C079E000(v5, (uint64_t)qword_1ED7493E0);
  sub_1C0775864();
  sub_1C078A8CC(v14, v9, &qword_1ED75E630);
  v15 = sub_1C0779D10();
  sub_1C077AEEC(v9, 1, v15);
  if (v16)
    __break(1u);
  sub_1C0D6A734();
  sub_1C07B1F90(v9, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v22 = (void *)MEMORY[0x1C3BA79F4]();
  v23 = (void *)objc_opt_self();
  v24 = (void *)sub_1C106F934();
  v32 = 0;
  v25 = objc_msgSend(v23, sel_dataWithJSONObject_options_error_, v24, 3, &v32);

  v26 = v32;
  if (v25)
  {
    v27 = sub_1C106AC18();

    objc_autoreleasePoolPop(v22);
    sub_1C0775894();
    sub_1C106FB44();
    sub_1C106FB2C();
    if (v28)
    {
      sub_1C079FDB0();
      sub_1C07B1E08(v27);
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
    sub_1C0BAE2B8();
    v31 = sub_1C0775810();
    sub_1C079FDB0();
    sub_1C07B1E08(v27);
    v21 = (void *)v31;
  }
  else
  {
    v29 = v26;
    v30 = sub_1C106AA14();

    swift_willThrow();
    objc_autoreleasePoolPop(v22);
    sub_1C0775894();
    sub_1C07769D0();
    sub_1C07769D0();
    sub_1C106F538();
    v17 = sub_1C077C13C();
    if (sub_1C077AF00(v17))
    {
      v18 = (uint8_t *)sub_1C0775854();
      v32 = (id)sub_1C0775854();
      *(_DWORD *)v18 = 136315138;
      sub_1C07769D0();
      sub_1C07ACF80(&qword_1ED7614F0);
      v19 = sub_1C106FB5C();
      sub_1C0788DAC(v19, v20, (uint64_t *)&v32);
      sub_1C078ACB4();
      swift_bridgeObjectRelease();
      sub_1C0779654();
      sub_1C0779654();
      sub_1C07796F0(&dword_1C0771000, v0, v4, "InternalXPC: stats: failed: %s", v18);
      sub_1C0778610();
      sub_1C0776778();
    }
    sub_1C0779654();
    sub_1C0779654();

    sub_1C07769D0();
    sub_1C079FDB0();
    sub_1C0779654();
    v21 = (void *)v30;
  }

LABEL_13:
  sub_1C0776760();
}

void sub_1C0BA6720(uint64_t a1, uint64_t a2, void (**a3)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  NSObject *v82;
  os_log_type_t v83;
  _BOOL4 v84;
  uint64_t v85;
  uint8_t *v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint8_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t inited;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void (*v109)(char *, uint64_t);
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void (*v140)(char *, uint64_t, uint64_t);
  char *v141;
  char *v142;
  void (*v143)(char *, uint64_t);
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  int v147;
  char *v148;
  uint64_t v149;
  void (**v150)(_QWORD, _QWORD, _QWORD);
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  void (*v154)(char *, uint64_t, uint64_t);
  uint64_t v155;
  int v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  void (*v160)(char *, uint64_t, uint64_t);
  char *v161;
  char *v162;
  uint64_t v163;
  void (*v164)(char *, uint64_t);
  uint64_t v165;
  NSObject *v166;
  os_log_type_t v167;
  uint8_t *v168;
  void *v169;
  void *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  _QWORD *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  _BYTE *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  unint64_t v196;
  BOOL v197;
  BOOL v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  unint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  void *v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  char *v221;
  unint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  char *v228;
  unint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  _QWORD *v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  _BYTE *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  unint64_t v249;
  BOOL v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t *v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  unint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t *v265;
  uint64_t v266;
  unint64_t v267;
  uint64_t v268;
  void *v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  unint64_t v274;
  void *v275;
  void *v276;
  uint64_t v277;
  char *v278;
  uint64_t v279;
  uint8_t *v280;
  char *v281;
  uint64_t v282;
  char *v283;
  uint64_t v284;
  char *v285;
  uint64_t v286;
  uint64_t v287;
  char *v288;
  uint64_t v289;
  char *v290;
  char *v291;
  char *v292;
  uint64_t v293;
  char *v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  char *v302;
  uint64_t v303;
  char *v304;
  uint64_t v305;
  unint64_t v306;
  __int128 v307;
  uint64_t v308;
  char *v309;
  void (**v310)(_QWORD, _QWORD, _QWORD);
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  char *v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t *v319;
  uint64_t v320;
  uint64_t v321;
  char *v322;
  uint64_t *v323;
  uint64_t v324;
  __int128 v325;
  char *v326;
  uint64_t v327;
  uint64_t v328;
  char *v329;
  uint64_t v330;
  uint64_t v331;
  unint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  unint64_t v337;
  uint64_t v338;
  uint64_t v339[4];

  v310 = a3;
  v318 = type metadata accessor for GraphTriple(0);
  v282 = *(_QWORD *)(v318 - 8);
  MEMORY[0x1E0C80A78](v318);
  v317 = (uint64_t)&v277 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C07ACF80(&qword_1ED7623F8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (uint64_t (*)())((char *)&v277 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v8);
  v313 = (uint64_t)&v277 - v9;
  v330 = type metadata accessor for Source();
  MEMORY[0x1E0C80A78](v330);
  v301 = (uint64_t)&v277 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v277 - v12;
  MEMORY[0x1E0C80A78](v14);
  v328 = (uint64_t)&v277 - v15;
  MEMORY[0x1E0C80A78](v16);
  *(_QWORD *)&v325 = (char *)&v277 - v17;
  MEMORY[0x1E0C80A78](v18);
  v324 = (uint64_t)&v277 - v19;
  MEMORY[0x1E0C80A78](v20);
  v323 = (uint64_t *)((char *)&v277 - v21);
  MEMORY[0x1E0C80A78](v22);
  v298 = (uint64_t)&v277 - v23;
  MEMORY[0x1E0C80A78](v24);
  v321 = (uint64_t)&v277 - v25;
  MEMORY[0x1E0C80A78](v26);
  v327 = (uint64_t)&v277 - v27;
  MEMORY[0x1E0C80A78](v28);
  v322 = (char *)&v277 - v29;
  MEMORY[0x1E0C80A78](v30);
  v320 = (uint64_t)&v277 - v31;
  MEMORY[0x1E0C80A78](v32);
  v319 = (uint64_t *)((char *)&v277 - v33);
  v315 = type metadata accessor for EventTriple(0);
  v279 = *(_QWORD *)(v315 - 8);
  MEMORY[0x1E0C80A78](v315);
  v314 = (uint64_t)&v277 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_1C07ACF80(&qword_1ED756690);
  MEMORY[0x1E0C80A78](v35);
  v289 = (uint64_t)&v277 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v300 = sub_1C106D9B4();
  v37 = *(_QWORD *)(v300 - 8);
  MEMORY[0x1E0C80A78](v300);
  v278 = (char *)&v277 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v39);
  v283 = (char *)&v277 - v40;
  MEMORY[0x1E0C80A78](v41);
  v297 = (uint64_t)&v277 - v42;
  MEMORY[0x1E0C80A78](v43);
  v281 = (char *)&v277 - v44;
  MEMORY[0x1E0C80A78](v45);
  v302 = (char *)&v277 - v46;
  v293 = sub_1C106D9A8();
  v306 = *(_QWORD *)(v293 - 8);
  MEMORY[0x1E0C80A78](v293);
  v292 = (char *)&v277 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v48);
  v291 = (char *)&v277 - v49;
  MEMORY[0x1E0C80A78](v50);
  v329 = (char *)&v277 - v51;
  MEMORY[0x1E0C80A78](v52);
  v316 = (char *)&v277 - v53;
  MEMORY[0x1E0C80A78](v54);
  v304 = (char *)&v277 - v55;
  v56 = sub_1C106D834();
  v286 = *(_QWORD *)(v56 - 8);
  v287 = v56;
  MEMORY[0x1E0C80A78](v56);
  v285 = (char *)&v277 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_1C07ACF80(qword_1ED755A58);
  MEMORY[0x1E0C80A78](v58);
  v296 = (uint64_t)&v277 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v60);
  v288 = (char *)&v277 - v61;
  MEMORY[0x1E0C80A78](v62);
  v294 = (char *)&v277 - v63;
  MEMORY[0x1E0C80A78](v64);
  v284 = (uint64_t)&v277 - v65;
  MEMORY[0x1E0C80A78](v66);
  v295 = (uint64_t)&v277 - v67;
  MEMORY[0x1E0C80A78](v68);
  v305 = (uint64_t)&v277 - v69;
  MEMORY[0x1E0C80A78](v70);
  v303 = (uint64_t)&v277 - v71;
  MEMORY[0x1E0C80A78](v72);
  v311 = (uint64_t)&v277 - v73;
  MEMORY[0x1E0C80A78](v74);
  v290 = (char *)&v277 - v75;
  MEMORY[0x1E0C80A78](v76);
  v78 = (uint64_t)&v277 - v77;
  v308 = sub_1C07ACF80(&qword_1ED75E630);
  MEMORY[0x1E0C80A78](v308);
  v309 = (char *)&v277 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED75E808 != -1)
    goto LABEL_236;
  while (1)
  {
    v80 = sub_1C106F544();
    v81 = sub_1C079E000(v80, (uint64_t)qword_1ED78D7A0);
    swift_bridgeObjectRetain_n();
    *(_QWORD *)&v307 = v81;
    v82 = sub_1C106F538();
    v83 = sub_1C10703A8();
    v84 = os_log_type_enabled(v82, v83);
    v299 = v37;
    v326 = v13;
    if (v84)
    {
      v85 = swift_slowAlloc();
      v312 = v78;
      v86 = (uint8_t *)v85;
      v87 = swift_slowAlloc();
      v339[0] = v87;
      *(_DWORD *)v86 = 136315138;
      v280 = v86 + 4;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v88 = sub_1C106F94C();
      v90 = v89;
      swift_bridgeObjectRelease();
      v91 = v88;
      v13 = v326;
      v338 = sub_1C0788DAC(v91, v90, v339);
      sub_1C10705AC();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C0771000, v82, v83, "InternalXPC: triples query: %s", v86, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v87, -1, -1);
      v92 = v86;
      v78 = v312;
      MEMORY[0x1C3BA8270](v92, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v93 = (uint64_t)v309;
    v94 = (uint64_t)v322;
    if (qword_1ED749400 != -1)
      swift_once();
    v95 = sub_1C079E000(v308, (uint64_t)qword_1ED7493E0);
    swift_beginAccess();
    sub_1C078A8CC(v95, v93, &qword_1ED75E630);
    v96 = type metadata accessor for Configuration();
    if (sub_1C07B2D80(v93, 1, v96) == 1)
    {
      __break(1u);
LABEL_238:
      __break(1u);
LABEL_239:
      __break(1u);
LABEL_240:
      __break(1u);
      JUMPOUT(0x1C0BA8FCCLL);
    }
    type metadata accessor for GraphStore();
    swift_allocObject();
    v97 = GraphStore.init(config:)(v93);
    v98 = v300;
    sub_1C07B2D8C(v78, 1, 1, v300);
    v280 = (uint8_t *)v97;
    swift_retain();
    sub_1C089A994(0x686372616573, 0xE600000000000000, a1);
    v312 = v78;
    if (v100)
    {
      v101 = v99;
      v102 = v100;
      sub_1C07ACF80(&qword_1ED762CB0);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C1079220;
      *(_QWORD *)(inited + 32) = v101;
      *(_QWORD *)(inited + 40) = v102;
      sub_1C0898D28(inited);
      v104 = *MEMORY[0x1E0D3C2C0];
      v309 = (char *)a1;
      v105 = v285;
      v106 = v286;
      v107 = v287;
      (*(void (**)(char *, uint64_t, uint64_t))(v286 + 104))(v285, v104, v287);
      v108 = (uint64_t)v290;
      sub_1C106D828();
      swift_bridgeObjectRelease();
      v109 = *(void (**)(char *, uint64_t))(v106 + 8);
      a1 = (uint64_t)v309;
      v110 = v105;
      v111 = v312;
      v109(v110, v107);
      sub_1C0784B6C(v111, qword_1ED755A58);
      sub_1C07B2D8C(v108, 0, 1, v98);
      sub_1C0BAE2F4(v108, v111);
    }
    sub_1C07B2D8C(v311, 1, 1, v98);
    sub_1C089A994(0x7463656A627573, 0xE700000000000000, a1);
    v113 = v112;
    swift_bridgeObjectRelease();
    if (v113
      || (v114 = v98,
          sub_1C089A994(0x7461636964657270, 0xE900000000000065, a1),
          v116 = v115,
          swift_bridgeObjectRelease(),
          v116)
      || (sub_1C089A994(0x7463656A626FLL, 0xE600000000000000, a1), v118 = v117, swift_bridgeObjectRelease(), v118))
    {
      sub_1C089A994(0x7463656A627573, 0xE700000000000000, a1);
      v120 = v119;
      swift_bridgeObjectRelease();
      if (v120)
      {
        sub_1C07ACF80(&qword_1ED762CB0);
        v121 = swift_initStackObject();
        *(_OWORD *)(v121 + 16) = xmmword_1C1079220;
        sub_1C089A994(0x7463656A627573, 0xE700000000000000, a1);
        if (!v123)
          goto LABEL_238;
        *(_QWORD *)(v121 + 32) = v122;
        *(_QWORD *)(v121 + 40) = v123;
        sub_1C0AA7704();
        v309 = v124;
      }
      else
      {
        v309 = 0;
      }
      sub_1C089A994(0x7461636964657270, 0xE900000000000065, a1);
      v126 = v125;
      swift_bridgeObjectRelease();
      if (v126)
      {
        sub_1C07ACF80(&qword_1ED762CB0);
        v127 = swift_initStackObject();
        *(_OWORD *)(v127 + 16) = xmmword_1C1079220;
        sub_1C089A994(0x7461636964657270, 0xE900000000000065, a1);
        if (!v129)
          goto LABEL_239;
        *(_QWORD *)(v127 + 32) = v128;
        *(_QWORD *)(v127 + 40) = v129;
        sub_1C0AA7704();
        v131 = v130;
      }
      else
      {
        v131 = 0;
      }
      sub_1C089A994(0x7463656A626FLL, 0xE600000000000000, a1);
      v133 = v132;
      swift_bridgeObjectRelease();
      v308 = v131;
      if (v133)
      {
        sub_1C07ACF80(&qword_1ED762CB0);
        v134 = swift_initStackObject();
        *(_OWORD *)(v134 + 16) = xmmword_1C1079220;
        sub_1C089A994(0x7463656A626FLL, 0xE600000000000000, a1);
        if (!v136)
          goto LABEL_240;
        *(_QWORD *)(v134 + 32) = v135;
        *(_QWORD *)(v134 + 40) = v136;
        sub_1C0AA7704();
        v287 = v137;
      }
      else
      {
        v287 = 0;
      }
      v138 = v293;
      v139 = *MEMORY[0x1E0D3C448];
      v140 = *(void (**)(char *, uint64_t, uint64_t))(v306 + 104);
      v140(v304, v139, v293);
      v140(v316, v139, v138);
      v140(v329, v139, v138);
      v141 = v291;
      v140(v291, v139, v138);
      v142 = v292;
      v140(v292, v139, v138);
      sub_1C106D870();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v143 = *(void (**)(char *, uint64_t))(v306 + 8);
      v143(v142, v138);
      v143(v141, v138);
      v143(v329, v138);
      v143(v316, v138);
      v143(v304, v138);
      v144 = v311;
      sub_1C0784B6C(v311, qword_1ED755A58);
      v145 = v303;
      v114 = v300;
      sub_1C07B2D8C(v303, 0, 1, v300);
      sub_1C0BAE2F4(v145, v144);
    }
    sub_1C07B2D8C(v305, 1, 1, v114);
    v146 = v295;
    sub_1C078A8CC(v312, v295, qword_1ED755A58);
    v147 = sub_1C07B2D80(v146, 1, v114);
    v148 = v302;
    if (v147 == 1)
    {
      v149 = v146;
      v150 = v310;
      v151 = v296;
      v152 = (uint64_t)v288;
    }
    else
    {
      v153 = v299;
      v154 = *(void (**)(char *, uint64_t, uint64_t))(v299 + 32);
      v154(v302, v146, v114);
      v155 = v284;
      sub_1C078A8CC(v311, v284, qword_1ED755A58);
      v156 = sub_1C07B2D80(v155, 1, v114);
      v151 = v296;
      if (v156 != 1)
      {
        v162 = v281;
        v154(v281, v155, v114);
        v163 = (uint64_t)v290;
        sub_1C106D84C();
        v164 = *(void (**)(char *, uint64_t))(v153 + 8);
        v164(v162, v114);
        v164(v148, v114);
        v157 = v305;
        sub_1C0784B6C(v305, qword_1ED755A58);
        sub_1C07B2D8C(v163, 0, 1, v114);
        sub_1C0BAE2F4(v163, v157);
        v165 = (uint64_t)v294;
        v150 = v310;
        goto LABEL_38;
      }
      (*(void (**)(char *, uint64_t))(v153 + 8))(v148, v114);
      v152 = (uint64_t)v288;
      v149 = v155;
      v150 = v310;
    }
    sub_1C0784B6C(v149, qword_1ED755A58);
    sub_1C078A8CC(v312, v152, qword_1ED755A58);
    if (sub_1C07B2D80(v152, 1, v114) != 1)
    {
      v158 = v152;
      v159 = v305;
      sub_1C0784B6C(v305, qword_1ED755A58);
      v160 = *(void (**)(char *, uint64_t, uint64_t))(v299 + 32);
      v161 = v283;
      v160(v283, v158, v114);
LABEL_36:
      v160((char *)v159, (uint64_t)v161, v114);
      v157 = v159;
      sub_1C07B2D8C(v159, 0, 1, v114);
      goto LABEL_37;
    }
    sub_1C0784B6C(v152, qword_1ED755A58);
    sub_1C078A8CC(v311, v151, qword_1ED755A58);
    if (sub_1C07B2D80(v151, 1, v114) != 1)
    {
      v159 = v305;
      sub_1C0784B6C(v305, qword_1ED755A58);
      v160 = *(void (**)(char *, uint64_t, uint64_t))(v299 + 32);
      v161 = v278;
      v160(v278, v151, v114);
      goto LABEL_36;
    }
    sub_1C0784B6C(v151, qword_1ED755A58);
    v157 = v305;
LABEL_37:
    v165 = (uint64_t)v294;
LABEL_38:
    sub_1C078A8CC(v157, v165, qword_1ED755A58);
    if (sub_1C07B2D80(v165, 1, v114) == 1)
    {
      swift_release();
      sub_1C0784B6C(v165, qword_1ED755A58);
      v166 = sub_1C106F538();
      v167 = sub_1C1070390();
      if (os_log_type_enabled(v166, v167))
      {
        v168 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v168 = 0;
        _os_log_impl(&dword_1C0771000, v166, v167, "InternalXPC: triples query: failed to generate query.", v168, 2u);
        MEMORY[0x1C3BA8270](v168, -1, -1);
      }

      sub_1C07ACF80(&qword_1ED758CC0);
      v169 = (void *)sub_1C106FEEC();
      v170 = (void *)sub_1C106FEEC();
      ((void (**)(_QWORD, void *, void *))v150)[2](v150, v169, v170);
      swift_release();

      goto LABEL_229;
    }
    v171 = MEMORY[0x1E0DEE9D8];
    v172 = v297;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v299 + 32))(v297, v165, v114);
    v173 = sub_1C106EB78();
    v174 = v289;
    v296 = v173;
    sub_1C07B2D8C(v289, 1, 1, v173);
    swift_retain();
    v175 = sub_1C0BA470C(v172, v174, (uint64_t)&OBJC_IVAR____TtC24IntelligencePlatformCore13GraphDatabase_pool, (uint64_t)sub_1C0BAE6E0, (uint64_t (*)(uint64_t, _QWORD *))sub_1C0BB9638);
    sub_1C0784B6C(v174, &qword_1ED756690);
    swift_release();
    v176 = *(char **)(v175 + 16);
    if (!v176)
      break;
    v331 = v171;
    v304 = v176;
    sub_1C09D3D5C();
    v177 = 0;
    v178 = *(unsigned __int8 *)(v282 + 80);
    v295 = v175;
    v309 = (char *)(v175 + ((v178 + 32) & ~v178));
    v308 = *(_QWORD *)(v282 + 72);
    v307 = xmmword_1C108BB50;
    v306 = 0x80000001C10DE890;
    v303 = 0x80000001C10DE8C0;
    v302 = (char *)(MEMORY[0x1E0DEE9B8] + 8);
    v37 = (uint64_t)type metadata accessor for Source;
    while (1)
    {
      v316 = v177 + 1;
      v179 = v317;
      sub_1C07E6C80((uint64_t)&v309[v308 * (_QWORD)v177], v317, type metadata accessor for GraphTriple);
      sub_1C07ACF80(&qword_1ED761310);
      v78 = swift_initStackObject();
      *(_OWORD *)(v78 + 16) = v307;
      *(_QWORD *)(v78 + 32) = 0x7463656A627573;
      *(_QWORD *)(v78 + 40) = 0xE700000000000000;
      *(_QWORD *)(v78 + 48) = sub_1C106E530();
      *(_QWORD *)(v78 + 56) = v180;
      a1 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v78 + 72) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v78 + 80) = 0x7461636964657270;
      *(_QWORD *)(v78 + 88) = 0xE900000000000065;
      v181 = v318;
      *(_QWORD *)(v78 + 96) = sub_1C106E1E8();
      *(_QWORD *)(v78 + 104) = v182;
      *(_QWORD *)(v78 + 120) = a1;
      strcpy((char *)(v78 + 128), "relationshipId");
      *(_BYTE *)(v78 + 143) = -18;
      *(_QWORD *)(v78 + 144) = sub_1C106EADC();
      *(_QWORD *)(v78 + 152) = v183;
      *(_QWORD *)(v78 + 168) = a1;
      *(_QWORD *)(v78 + 176) = 0xD000000000000015;
      *(_QWORD *)(v78 + 184) = v306;
      *(_QWORD *)(v78 + 192) = sub_1C106E1E8();
      *(_QWORD *)(v78 + 200) = v184;
      *(_QWORD *)(v78 + 216) = a1;
      *(_QWORD *)(v78 + 224) = 0x7463656A626FLL;
      *(_QWORD *)(v78 + 232) = 0xE600000000000000;
      v185 = (_QWORD *)(v179 + *(int *)(v181 + 32));
      v186 = v185[1];
      *(_QWORD *)(v78 + 240) = *v185;
      *(_QWORD *)(v78 + 248) = v186;
      *(_QWORD *)(v78 + 264) = a1;
      *(_QWORD *)(v78 + 272) = 0x73656372756F73;
      *(_QWORD *)(v78 + 280) = 0xE700000000000000;
      v329 = *(char **)(v179 + *(int *)(v181 + 36));
      v333 = MEMORY[0x1E0DEE9D8];
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C09D30E0();
      v187 = 1;
LABEL_45:
      v188 = v325;
LABEL_46:
      if (qword_1ED75DF60 != -1)
        swift_once();
      if (qword_1ED78D4B0 >= v187)
        break;
      v208 = v333;
      v209 = sub_1C07ACF80(&qword_1ED762B70);
      *(_QWORD *)(v78 + 288) = v208;
      *(_QWORD *)(v78 + 312) = v209;
      *(_QWORD *)(v78 + 320) = 0x6E656469666E6F63;
      *(_QWORD *)(v78 + 328) = 0xEA00000000006563;
      v211 = v317;
      v210 = v318;
      *(_QWORD *)(v78 + 336) = *(_QWORD *)(v317 + *(int *)(v318 + 40));
      v212 = MEMORY[0x1E0DEB070];
      *(_QWORD *)(v78 + 360) = MEMORY[0x1E0DEB070];
      *(_QWORD *)(v78 + 368) = 0x6D617473656D6974;
      *(_QWORD *)(v78 + 376) = 0xE900000000000070;
      *(_QWORD *)(v78 + 384) = *(_QWORD *)(v211 + *(int *)(v210 + 48));
      *(_QWORD *)(v78 + 408) = v212;
      *(_QWORD *)(v78 + 416) = 0xD000000000000010;
      *(_QWORD *)(v78 + 424) = v303;
      v213 = (uint64_t *)(v211 + *(int *)(v210 + 44));
      v214 = *v213;
      v215 = v213[1];
      v216 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v217 = (void *)MEMORY[0x1C3BA79F4](v216);
      v333 = v214;
      v334 = v215;
      v336 = 30;
      v337 = 0xE100000000000000;
      sub_1C07B1280();
      v218 = sub_1C10705D0();
      objc_autoreleasePoolPop(v217);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v78 + 456) = v209;
      *(_QWORD *)(v78 + 432) = v218;
      v219 = sub_1C106F97C();
      sub_1C07B1F90(v211, type metadata accessor for GraphTriple);
      v220 = (char *)v331;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C09D3D5C();
        v220 = (char *)v331;
      }
      v94 = (uint64_t)v322;
      v221 = v304;
      v222 = *((_QWORD *)v220 + 2);
      v13 = v326;
      if (v222 >= *((_QWORD *)v220 + 3) >> 1)
      {
        sub_1C09D3D5C();
        v221 = v304;
        v220 = (char *)v331;
      }
      *((_QWORD *)v220 + 2) = v222 + 1;
      *(_QWORD *)&v220[8 * v222 + 32] = v219;
      v177 = v316;
      if (v316 == v221)
      {
        v316 = v220;
        swift_bridgeObjectRelease();
        v150 = v310;
        goto LABEL_135;
      }
    }
    switch(v187)
    {
      case 1:
        if (qword_1ED761438 != -1)
          swift_once();
        v189 = v330;
        v190 = byte_1ED761420;
        goto LABEL_109;
      case 2:
        if (qword_1ED762380 != -1)
          swift_once();
        v189 = v330;
        v190 = &unk_1ED762360;
        goto LABEL_109;
      case 6:
        if (qword_1ED7623A8 != -1)
          swift_once();
        v189 = v330;
        v190 = &unk_1ED762388;
        goto LABEL_109;
      case 9:
        if (qword_1ED7622F0 != -1)
          swift_once();
        v189 = v330;
        v190 = byte_1ED7622D0;
        goto LABEL_109;
      case 11:
        if (qword_1ED7623C8 != -1)
          swift_once();
        v189 = v330;
        v190 = &unk_1ED7623B0;
        goto LABEL_109;
      case 12:
        if (qword_1ED762330 != -1)
          swift_once();
        v189 = v330;
        v190 = &unk_1ED762318;
        goto LABEL_109;
      case 14:
        if (qword_1ED762358 != -1)
          swift_once();
        v189 = v330;
        v190 = &unk_1ED762338;
        goto LABEL_109;
      case 16:
        if (qword_1ED762260 != -1)
          swift_once();
        v189 = v330;
        v190 = &unk_1ED762240;
        goto LABEL_109;
      case 17:
        if (qword_1ED761448 != -1)
          swift_once();
        v189 = v330;
        v190 = &unk_1ED762E88;
        goto LABEL_109;
      case 18:
        if (qword_1ED7623F0 != -1)
          swift_once();
        v189 = v330;
        v190 = &unk_1ED7623D0;
        goto LABEL_109;
      case 19:
        if (qword_1ED761418 != -1)
          swift_once();
        v189 = v330;
        v190 = &unk_1ED761400;
        goto LABEL_109;
      case 21:
        if (qword_1ED762310 != -1)
          swift_once();
        v189 = v330;
        v190 = &unk_1ED7622F8;
        goto LABEL_109;
      case 22:
        if (qword_1ED7622C8 != -1)
          swift_once();
        v189 = v330;
        v190 = &unk_1ED7622B0;
        goto LABEL_109;
      case 23:
        if (qword_1ED762E80 != -1)
          swift_once();
        v189 = v330;
        v190 = &unk_1ED762268;
        goto LABEL_109;
      case 24:
        if (qword_1ED7622A8 != -1)
          swift_once();
        v189 = v330;
        v190 = &unk_1ED762288;
        goto LABEL_109;
      case 25:
        if (qword_1ED762280 != -1)
          swift_once();
        v189 = v330;
        v190 = &unk_1ED761548;
        goto LABEL_109;
      case 27:
        if (qword_1ED761598 != -1)
          swift_once();
        v189 = v330;
        v190 = &unk_1ED761838;
        goto LABEL_109;
      case 29:
        if (qword_1ED761870 != -1)
          swift_once();
        v189 = v330;
        v190 = &unk_1ED761850;
LABEL_109:
        v194 = sub_1C079E000(v189, (uint64_t)v190);
        sub_1C07E6C80(v194, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for Source);
        goto LABEL_110;
      default:
        if (qword_1ED761518 != -1)
          swift_once();
        swift_beginAccess();
        if (!qword_1ED7627B8)
        {
          sub_1C07B2D8C((uint64_t)v7, 1, 1, v330);
          goto LABEL_120;
        }
        v191 = (*((uint64_t (**)(void))off_1ED7627C0 + 2))();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v192 + 16))(v187, v191, v192);
        if (sub_1C07B2D80((uint64_t)v7, 1, v330) == 1)
        {
LABEL_120:
          sub_1C0784B6C((uint64_t)v7, &qword_1ED7623F8);
          v197 = __OFADD__(v187++, 1);
          if (v197)
            goto LABEL_234;
          goto LABEL_46;
        }
        v193 = v301;
        sub_1C07E563C((uint64_t)v7, v301, (uint64_t (*)(_QWORD))type metadata accessor for Source);
        sub_1C07E563C(v193, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for Source);
LABEL_110:
        v195 = v328;
        sub_1C07E563C((uint64_t)v13, v328, (uint64_t (*)(_QWORD))type metadata accessor for Source);
        sub_1C07E563C(v195, v188, (uint64_t (*)(_QWORD))type metadata accessor for Source);
        v196 = v187 - 1;
        if (!__OFSUB__(v187, 1))
        {
          v197 = __OFADD__(v187++, 1);
          if (v197)
            goto LABEL_231;
          v198 = v196 > 0x40;
          if (v196 >= 0x40)
            v199 = 0;
          else
            v199 = 1 << v196;
          if (v198)
            v199 = 0;
          if ((uint64_t)(v199 & (unint64_t)v329) < 1)
          {
            sub_1C07B1F90(v188, (uint64_t (*)(_QWORD))type metadata accessor for Source);
            goto LABEL_46;
          }
          a1 = (uint64_t)v7;
          v200 = v324;
          sub_1C07E563C(v188, v324, (uint64_t (*)(_QWORD))type metadata accessor for Source);
          v201 = v200;
          v202 = v323;
          sub_1C07E563C(v201, (uint64_t)v323, (uint64_t (*)(_QWORD))type metadata accessor for Source);
          v203 = *v202;
          v204 = v202[1];
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          sub_1C07B1F90((uint64_t)v202, (uint64_t (*)(_QWORD))type metadata accessor for Source);
          v205 = v333;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C09D30E0();
            v205 = v333;
          }
          v206 = *(_QWORD *)(v205 + 16);
          if (v206 >= *(_QWORD *)(v205 + 24) >> 1)
          {
            sub_1C09D30E0();
            v205 = v333;
          }
          *(_QWORD *)(v205 + 16) = v206 + 1;
          v207 = v205 + 16 * v206;
          *(_QWORD *)(v207 + 32) = v203;
          *(_QWORD *)(v207 + 40) = v204;
          v7 = (uint64_t (*)())a1;
          v13 = v326;
          goto LABEL_45;
        }
        __break(1u);
LABEL_231:
        __break(1u);
LABEL_232:
        __break(1u);
LABEL_233:
        __break(1u);
LABEL_234:
        __break(1u);
LABEL_235:
        __break(1u);
LABEL_236:
        swift_once();
        break;
    }
  }
  swift_bridgeObjectRelease();
  v316 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_135:
  v223 = MEMORY[0x1E0DEE9B8];
  v224 = v289;
  sub_1C07B2D8C(v289, 1, 1, v296);
  v225 = sub_1C0BA470C(v297, v224, (uint64_t)&OBJC_IVAR____TtC24IntelligencePlatformCore13GraphDatabase_pool, (uint64_t)sub_1C0BAE6C8, (uint64_t (*)(uint64_t, _QWORD *))sub_1C0BB9644);
  sub_1C0784B6C(v224, &qword_1ED756690);
  swift_release();
  v226 = *(_QWORD *)(v225 + 16);
  if (v226)
  {
    v227 = MEMORY[0x1E0DEE9D8];
    v335 = MEMORY[0x1E0DEE9D8];
    sub_1C09D3D5C();
    v228 = 0;
    v229 = (*(unsigned __int8 *)(v279 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v279 + 80);
    v309 = (char *)v225;
    v328 = v225 + v229;
    v326 = *(char **)(v279 + 72);
    v325 = xmmword_1C108BB50;
    v324 = 0x80000001C10DE890;
    v317 = v223 + 8;
    v318 = 0x80000001C10DE8C0;
    v7 = type metadata accessor for Source;
    v323 = (uint64_t *)v226;
    do
    {
      v329 = v228 + 1;
      v230 = v314;
      sub_1C07E6C80(v328 + (_QWORD)v326 * (_QWORD)v228, v314, type metadata accessor for EventTriple);
      sub_1C07ACF80(&qword_1ED761310);
      v37 = swift_allocObject();
      *(_OWORD *)(v37 + 16) = v325;
      v13 = (char *)0xE700000000000000;
      *(_QWORD *)(v37 + 32) = 0x7463656A627573;
      *(_QWORD *)(v37 + 40) = 0xE700000000000000;
      *(_QWORD *)(v37 + 48) = sub_1C106E530();
      *(_QWORD *)(v37 + 56) = v231;
      v232 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v37 + 72) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v37 + 80) = 0x7461636964657270;
      *(_QWORD *)(v37 + 88) = 0xE900000000000065;
      v233 = v315;
      *(_QWORD *)(v37 + 96) = sub_1C106E1E8();
      *(_QWORD *)(v37 + 104) = v234;
      *(_QWORD *)(v37 + 120) = v232;
      strcpy((char *)(v37 + 128), "relationshipId");
      *(_BYTE *)(v37 + 143) = -18;
      *(_QWORD *)(v37 + 144) = sub_1C106EADC();
      *(_QWORD *)(v37 + 152) = v235;
      *(_QWORD *)(v37 + 168) = v232;
      *(_QWORD *)(v37 + 176) = 0xD000000000000015;
      *(_QWORD *)(v37 + 184) = v324;
      *(_QWORD *)(v37 + 192) = sub_1C106E1E8();
      *(_QWORD *)(v37 + 200) = v236;
      *(_QWORD *)(v37 + 216) = v232;
      *(_QWORD *)(v37 + 224) = 0x7463656A626FLL;
      *(_QWORD *)(v37 + 232) = 0xE600000000000000;
      v237 = (_QWORD *)(v230 + *(int *)(v233 + 32));
      v238 = v237[1];
      *(_QWORD *)(v37 + 240) = *v237;
      *(_QWORD *)(v37 + 248) = v238;
      *(_QWORD *)(v37 + 264) = v232;
      *(_QWORD *)(v37 + 272) = 0x73656372756F73;
      *(_QWORD *)(v37 + 280) = 0xE700000000000000;
      a1 = *(_QWORD *)(v230 + *(int *)(v233 + 36));
      v336 = v227;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C09D30E0();
      v78 = 1;
      while (1)
      {
        v239 = v321;
LABEL_139:
        if (qword_1ED75DF60 != -1)
          swift_once();
        if (qword_1ED78D4B0 < v78)
          break;
        switch(v78)
        {
          case 1:
            if (qword_1ED761438 != -1)
              swift_once();
            v240 = v330;
            v241 = byte_1ED761420;
            goto LABEL_202;
          case 2:
            if (qword_1ED762380 != -1)
              swift_once();
            v240 = v330;
            v241 = &unk_1ED762360;
            goto LABEL_202;
          case 6:
            if (qword_1ED7623A8 != -1)
              swift_once();
            v240 = v330;
            v241 = &unk_1ED762388;
            goto LABEL_202;
          case 9:
            if (qword_1ED7622F0 != -1)
              swift_once();
            v240 = v330;
            v241 = byte_1ED7622D0;
            goto LABEL_202;
          case 11:
            if (qword_1ED7623C8 != -1)
              swift_once();
            v240 = v330;
            v241 = &unk_1ED7623B0;
            goto LABEL_202;
          case 12:
            if (qword_1ED762330 != -1)
              swift_once();
            v240 = v330;
            v241 = &unk_1ED762318;
            goto LABEL_202;
          case 14:
            if (qword_1ED762358 != -1)
              swift_once();
            v240 = v330;
            v241 = &unk_1ED762338;
            goto LABEL_202;
          case 16:
            if (qword_1ED762260 != -1)
              swift_once();
            v240 = v330;
            v241 = &unk_1ED762240;
            goto LABEL_202;
          case 17:
            if (qword_1ED761448 != -1)
              swift_once();
            v240 = v330;
            v241 = &unk_1ED762E88;
            goto LABEL_202;
          case 18:
            if (qword_1ED7623F0 != -1)
              swift_once();
            v240 = v330;
            v241 = &unk_1ED7623D0;
            goto LABEL_202;
          case 19:
            if (qword_1ED761418 != -1)
              swift_once();
            v240 = v330;
            v241 = &unk_1ED761400;
            goto LABEL_202;
          case 21:
            if (qword_1ED762310 != -1)
              swift_once();
            v240 = v330;
            v241 = &unk_1ED7622F8;
            goto LABEL_202;
          case 22:
            if (qword_1ED7622C8 != -1)
              swift_once();
            v240 = v330;
            v241 = &unk_1ED7622B0;
            goto LABEL_202;
          case 23:
            if (qword_1ED762E80 != -1)
              swift_once();
            v240 = v330;
            v241 = &unk_1ED762268;
            goto LABEL_202;
          case 24:
            if (qword_1ED7622A8 != -1)
              swift_once();
            v240 = v330;
            v241 = &unk_1ED762288;
            goto LABEL_202;
          case 25:
            if (qword_1ED762280 != -1)
              swift_once();
            v240 = v330;
            v241 = &unk_1ED761548;
            goto LABEL_202;
          case 27:
            if (qword_1ED761598 != -1)
              swift_once();
            v240 = v330;
            v241 = &unk_1ED761838;
            goto LABEL_202;
          case 29:
            if (qword_1ED761870 != -1)
              swift_once();
            v240 = v330;
            v241 = &unk_1ED761850;
LABEL_202:
            v247 = sub_1C079E000(v240, (uint64_t)v241);
            sub_1C07E6C80(v247, v239, (uint64_t (*)(_QWORD))type metadata accessor for Source);
            goto LABEL_203;
          default:
            if (qword_1ED761518 != -1)
              swift_once();
            swift_beginAccess();
            if (qword_1ED7627B8)
            {
              v242 = (*((uint64_t (**)(void))off_1ED7627C0 + 2))();
              v244 = v313;
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v243 + 16))(v78, v242, v243);
              if (sub_1C07B2D80(v244, 1, v330) == 1)
                goto LABEL_218;
              v245 = v298;
              sub_1C07E563C(v244, v298, (uint64_t (*)(_QWORD))type metadata accessor for Source);
              v246 = v245;
              v239 = v321;
              sub_1C07E563C(v246, v321, (uint64_t (*)(_QWORD))type metadata accessor for Source);
LABEL_203:
              v248 = v327;
              sub_1C07E563C(v239, v327, (uint64_t (*)(_QWORD))type metadata accessor for Source);
              sub_1C07E563C(v248, v94, (uint64_t (*)(_QWORD))type metadata accessor for Source);
              v249 = v78 - 1;
              if (__OFSUB__(v78, 1))
                goto LABEL_232;
              v197 = __OFADD__(v78++, 1);
              if (v197)
                goto LABEL_233;
              v250 = v249 > 0x40;
              if (v249 >= 0x40)
                v251 = 0;
              else
                v251 = 1 << v249;
              if (v250)
                v251 = 0;
              if ((v251 & a1) < 1)
              {
                sub_1C07B1F90(v94, (uint64_t (*)(_QWORD))type metadata accessor for Source);
              }
              else
              {
                v252 = v320;
                sub_1C07E563C(v94, v320, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                v253 = v252;
                v254 = v319;
                sub_1C07E563C(v253, (uint64_t)v319, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                v255 = *v254;
                v256 = v254[1];
                _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
                sub_1C07B1F90((uint64_t)v254, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                v257 = v336;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                {
                  sub_1C09D30E0();
                  v257 = v336;
                }
                v258 = *(_QWORD *)(v257 + 16);
                v13 = (char *)(v258 + 1);
                if (v258 >= *(_QWORD *)(v257 + 24) >> 1)
                {
                  sub_1C09D30E0();
                  v257 = v336;
                }
                *(_QWORD *)(v257 + 16) = v13;
                v259 = v257 + 16 * v258;
                *(_QWORD *)(v259 + 32) = v255;
                *(_QWORD *)(v259 + 40) = v256;
                v239 = v321;
                v94 = (uint64_t)v322;
              }
              goto LABEL_139;
            }
            v244 = v313;
            sub_1C07B2D8C(v313, 1, 1, v330);
LABEL_218:
            sub_1C0784B6C(v244, &qword_1ED7623F8);
            v197 = __OFADD__(v78++, 1);
            if (v197)
              goto LABEL_235;
            break;
        }
      }
      v260 = v336;
      v261 = sub_1C07ACF80(&qword_1ED762B70);
      *(_QWORD *)(v37 + 288) = v260;
      *(_QWORD *)(v37 + 312) = v261;
      *(_QWORD *)(v37 + 320) = 0x6E656469666E6F63;
      *(_QWORD *)(v37 + 328) = 0xEA00000000006563;
      v263 = v314;
      v262 = v315;
      *(_QWORD *)(v37 + 336) = *(_QWORD *)(v314 + *(int *)(v315 + 40));
      v264 = MEMORY[0x1E0DEB070];
      *(_QWORD *)(v37 + 360) = MEMORY[0x1E0DEB070];
      *(_QWORD *)(v37 + 368) = 0x6D617473656D6974;
      *(_QWORD *)(v37 + 376) = 0xE900000000000070;
      *(_QWORD *)(v37 + 384) = *(_QWORD *)(v263 + *(int *)(v262 + 48));
      *(_QWORD *)(v37 + 408) = v264;
      *(_QWORD *)(v37 + 416) = 0xD000000000000010;
      *(_QWORD *)(v37 + 424) = v318;
      v265 = (uint64_t *)(v263 + *(int *)(v262 + 44));
      v266 = *v265;
      v267 = v265[1];
      v268 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v269 = (void *)MEMORY[0x1C3BA79F4](v268);
      v336 = v266;
      v337 = v267;
      v331 = 30;
      v332 = 0xE100000000000000;
      sub_1C07B1280();
      v270 = sub_1C10705D0();
      objc_autoreleasePoolPop(v269);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v37 + 456) = v261;
      *(_QWORD *)(v37 + 432) = v270;
      v271 = sub_1C106F97C();
      sub_1C07B1F90(v263, type metadata accessor for EventTriple);
      v272 = v335;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C09D3D5C();
        v272 = v335;
      }
      v94 = (uint64_t)v322;
      v273 = (uint64_t)v323;
      v228 = v329;
      v274 = *(_QWORD *)(v272 + 16);
      if (v274 >= *(_QWORD *)(v272 + 24) >> 1)
      {
        sub_1C09D3D5C();
        v228 = v329;
        v272 = v335;
      }
      *(_QWORD *)(v272 + 16) = v274 + 1;
      *(_QWORD *)(v272 + 8 * v274 + 32) = v271;
      v227 = MEMORY[0x1E0DEE9D8];
    }
    while (v228 != (char *)v273);
    swift_bridgeObjectRelease();
    v150 = v310;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1C07ACF80(&qword_1ED758CC0);
  v275 = (void *)sub_1C106FEEC();
  v276 = (void *)sub_1C106FEEC();
  ((void (**)(_QWORD, void *, void *))v150)[2](v150, v275, v276);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v299 + 8))(v297, v300);
LABEL_229:
  sub_1C0784B6C(v305, qword_1ED755A58);
  sub_1C0784B6C(v311, qword_1ED755A58);
  sub_1C0784B6C(v312, qword_1ED755A58);
  _Block_release(v150);
}

void InternalXPC.Server.triplesQuery(withQuery:completion:)(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)();
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __n128 *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  NSObject *v88;
  os_log_type_t v89;
  _BOOL4 v90;
  uint64_t v91;
  uint8_t *v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t inited;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  void (*v150)(uint64_t, uint64_t);
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  NSObject *v155;
  os_log_type_t v156;
  uint8_t *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  __n128 *v171;
  unint64_t v172;
  unint64_t v173;
  unint64_t v174;
  unint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  unint64_t v179;
  uint64_t v180;
  uint64_t v181;
  unint64_t v182;
  uint64_t v183;
  uint64_t v184;
  unint64_t v185;
  unint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  _BYTE *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  BOOL v194;
  uint64_t v195;
  char v196;
  unint64_t v197;
  uint64_t v198;
  uint64_t *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  unint64_t v203;
  unint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  void *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  unint64_t v217;
  unint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  char *v226;
  uint64_t v227;
  unint64_t v228;
  __n128 *v229;
  unint64_t v230;
  unint64_t v231;
  unint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  unint64_t v236;
  uint64_t v237;
  uint64_t v238;
  unint64_t v239;
  uint64_t v240;
  uint64_t v241;
  unint64_t v242;
  unint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  _BYTE *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t *v255;
  uint64_t v256;
  uint64_t v257;
  unint64_t v258;
  unint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t *v263;
  uint64_t v264;
  unint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  unint64_t v270;
  unint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t (*v275)();
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  __n128 *v291;
  uint64_t v292;
  uint64_t v293;
  unint64_t v294;
  uint64_t v295;
  void (*v296)(uint64_t, uint64_t);
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  unint64_t v301;
  __n128 v302;
  uint64_t v303;
  NSObject *v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t (*v308)();
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t *v314;
  uint64_t v315;
  uint64_t v316;
  char *v317;
  char *v318;
  __n128 v319;
  unint64_t v320;
  uint64_t v321;
  uint64_t (*v322)();
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  unint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  unint64_t v332;
  uint64_t v333;
  uint64_t v334[4];

  v295 = a3;
  v296 = a2;
  v310 = type metadata accessor for EventTriple(0);
  v273 = *(_QWORD *)(v310 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v4);
  sub_1C077AE40();
  v309 = v5;
  sub_1C07ACF80(&qword_1ED7623F8);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v6);
  sub_1C077AED0();
  v308 = (uint64_t (*)())v7;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v272 - v9;
  v325 = type metadata accessor for Source();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v11);
  sub_1C077AED0();
  v292 = v12;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v13);
  sub_1C0779728();
  v316 = v14;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v15);
  sub_1C0779728();
  v322 = (uint64_t (*)())v16;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v17);
  sub_1C0779728();
  v324 = v18;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v19);
  sub_1C0779728();
  v315 = v20;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v21);
  sub_1C0779728();
  v314 = v22;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v23);
  sub_1C0779728();
  v297 = v24;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v25);
  sub_1C0779728();
  v321 = v26;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v27);
  sub_1C0779728();
  v323 = v28;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v29);
  sub_1C0779728();
  v320 = v30;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v31);
  sub_1C0779728();
  v319.n128_u64[0] = v32;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v33);
  v318 = (char *)&v272 - v34;
  v35 = sub_1C077CF58();
  v313 = type metadata accessor for GraphTriple(v35);
  v36 = *(uint64_t (**)())(v313 - 8);
  MEMORY[0x1E0C80A78](v313);
  sub_1C077AE40();
  v312 = v37;
  sub_1C07ACF80(&qword_1ED756690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v38);
  sub_1C077AE40();
  v282 = v39;
  sub_1C077CF58();
  v307 = sub_1C106D9B4();
  v293 = *(_QWORD *)(v307 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v40);
  sub_1C077AED0();
  v290 = v41;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v42);
  sub_1C0779728();
  v272 = v43;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v44);
  sub_1C0779728();
  v276 = v45;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v46);
  sub_1C0779728();
  v274 = v47;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v48);
  v299 = (uint64_t)&v272 - v49;
  sub_1C077CF58();
  v287 = sub_1C106D9A8();
  v303 = *(_QWORD *)(v287 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v50);
  sub_1C077AED0();
  v286 = v51;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v52);
  sub_1C0779728();
  v285 = v53;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v54);
  sub_1C0779728();
  v302.n128_u64[0] = v55;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v56);
  sub_1C0779728();
  v301 = v57;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v58);
  v300 = (uint64_t)&v272 - v59;
  sub_1C077CF58();
  v60 = sub_1C106D834();
  v279 = *(_QWORD *)(v60 - 8);
  v280 = v60;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v61);
  sub_1C077AE40();
  v278 = v62;
  sub_1C07ACF80(qword_1ED755A58);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v63);
  sub_1C077AED0();
  v288 = v64;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v65);
  sub_1C0779728();
  v298 = v66;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v67);
  sub_1C0779728();
  v281 = v68;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v69);
  sub_1C0779728();
  v277 = v70;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v71);
  sub_1C0779728();
  v289 = v72;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v73);
  v75 = (__n128 *)((char *)&v272 - v74);
  MEMORY[0x1E0C80A78](v76);
  sub_1C0779728();
  v284 = v77;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v78);
  sub_1C0779728();
  v306 = v79;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v80);
  sub_1C0779728();
  v283 = v81;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v82);
  v84 = (unint64_t)&v272 - v83;
  v311 = sub_1C07ACF80(&qword_1ED75E630);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v85);
  sub_1C077AE40();
  v317 = v86;
  if (qword_1ED75E808 != -1)
    goto LABEL_226;
  while (1)
  {
    v87 = sub_1C077585C();
    v88 = sub_1C079E000(v87, (uint64_t)qword_1ED78D7A0);
    swift_bridgeObjectRetain_n();
    v304 = v88;
    sub_1C106F538();
    v89 = sub_1C0784E0C();
    v90 = os_log_type_enabled(v88, v89);
    v291 = v75;
    v275 = v36;
    if (v90)
    {
      v91 = sub_1C0775854();
      v294 = v84;
      v92 = (uint8_t *)v91;
      v334[0] = sub_1C0775854();
      *(_DWORD *)v92 = 136315138;
      v305 = (uint64_t)(v92 + 4);
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v93 = sub_1C106F94C();
      v95 = v94;
      swift_bridgeObjectRelease();
      v333 = sub_1C0788DAC(v93, v95, v334);
      sub_1C10705AC();
      sub_1C078AA18();
      sub_1C0775844();
      sub_1C07796F0(&dword_1C0771000, v88, v89, "InternalXPC: triples query: %s", v92);
      sub_1C0778610();
      sub_1C0776778();
    }

    sub_1C078AA18();
    v96 = (uint64_t)v317;
    v97 = v311;
    v98 = v307;
    if (qword_1ED749400 != -1)
      swift_once();
    sub_1C079E000(v97, (uint64_t)qword_1ED7493E0);
    v99 = sub_1C0775864();
    sub_1C078176C(v99, v100, &qword_1ED75E630);
    v101 = sub_1C0779D10();
    sub_1C077AEEC(v96, 1, v101);
    if (v143)
    {
      __break(1u);
LABEL_228:
      __break(1u);
LABEL_229:
      __break(1u);
LABEL_230:
      __break(1u);
      JUMPOUT(0x1C0BAB178);
    }
    type metadata accessor for GraphStore();
    v102 = sub_1C077B5BC();
    v305 = GraphStore.init(config:)(v96);
    sub_1C078C780(v84, 1);
    swift_retain();
    sub_1C089A994(0x686372616573, 0xE600000000000000, a1);
    if (v104)
    {
      v105 = v103;
      v106 = v104;
      sub_1C07ACF80(&qword_1ED762CB0);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C1079220;
      *(_QWORD *)(inited + 32) = v105;
      *(_QWORD *)(inited + 40) = v106;
      sub_1C0898D28(inited);
      v102 = v108;
      v110 = v278;
      v109 = v279;
      v111 = v280;
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v279 + 104))(v278, *MEMORY[0x1E0D3C2C0], v280);
      v112 = v283;
      sub_1C106D828();
      sub_1C077960C();
      v113 = (*(uint64_t (**)(uint64_t, uint64_t))(v109 + 8))(v110, v111);
      sub_1C077F858(v113, qword_1ED755A58);
      sub_1C078C780(v112, 0);
      sub_1C0BAE2F4(v112, v84);
    }
    v294 = v84;
    sub_1C078C780(v306, 1);
    sub_1C07A0044();
    sub_1C078D7D0();
    v114 = v293;
    if (v102)
    {
      sub_1C07A0044();
      sub_1C078D7D0();
      sub_1C07ACF80(&qword_1ED762CB0);
      v115 = swift_initStackObject();
      *(_OWORD *)(v115 + 16) = xmmword_1C1079220;
      sub_1C07A0044();
      if (!v117)
        goto LABEL_228;
      *(_QWORD *)(v115 + 32) = v116;
      *(_QWORD *)(v115 + 40) = v117;
      sub_1C0AA7704();
      v317 = v118;
      sub_1C07A48E0();
      v120 = v119;
      swift_bridgeObjectRelease();
      if (v120)
      {
        sub_1C07ACF80(&qword_1ED762CB0);
        v121 = swift_initStackObject();
        *(_OWORD *)(v121 + 16) = xmmword_1C1079220;
        sub_1C07A48E0();
        if (!v123)
          goto LABEL_229;
        *(_QWORD *)(v121 + 32) = v122;
        *(_QWORD *)(v121 + 40) = v123;
        sub_1C0AA7704();
      }
      sub_1C07BC87C();
      v125 = v124;
      swift_bridgeObjectRelease();
      if (v125)
      {
        sub_1C07ACF80(&qword_1ED762CB0);
        v126 = swift_initStackObject();
        *(_OWORD *)(v126 + 16) = xmmword_1C1079220;
        sub_1C07BC87C();
        if (!v128)
          goto LABEL_230;
        *(_QWORD *)(v126 + 32) = v127;
        *(_QWORD *)(v126 + 40) = v128;
        sub_1C0AA7704();
        v311 = v129;
      }
      else
      {
        v311 = 0;
      }
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v303 + 104))(v300, *MEMORY[0x1E0D3C448], v287);
      sub_1C07B732C(v301);
      sub_1C07B732C(v302.n128_i64[0]);
      v130 = v285;
      sub_1C07B732C(v285);
      v131 = v286;
      sub_1C07B732C(v286);
      v132 = v284;
      v133 = v302.n128_u64[0];
      sub_1C106D870();
      sub_1C07785A0();
      sub_1C077960C();
      swift_bridgeObjectRelease();
      sub_1C07A225C(v131);
      sub_1C07A225C(v130);
      sub_1C07A225C(v133);
      sub_1C07A225C(v301);
      sub_1C07A225C(v300);
      v134 = v306;
      sub_1C0784B6C(v306, qword_1ED755A58);
      v98 = v307;
      sub_1C07B2D8C(v132, 0, 1, v307);
      sub_1C0BAE2F4(v132, v134);
      v114 = v293;
    }
    else
    {
      sub_1C07A48E0();
      sub_1C078D7D0();
      sub_1C07BC87C();
      sub_1C078D7D0();
    }
    v135 = (uint64_t)v291;
    sub_1C078C780((uint64_t)v291, 1);
    v136 = v294;
    v137 = v289;
    sub_1C078A8CC(v294, v289, qword_1ED755A58);
    sub_1C077AEEC(v137, 1, v98);
    v138 = v299;
    if (v143)
    {
      v139 = v137;
      v140 = v298;
    }
    else
    {
      sub_1C0781ED0(v299, v137);
      v141 = v114;
      v142 = v277;
      sub_1C078A8CC(v306, v277, qword_1ED755A58);
      sub_1C077AEEC(v142, 1, v98);
      v140 = v298;
      if (!v143)
      {
        v148 = v274;
        sub_1C0781ED0(v274, v142);
        v149 = v283;
        sub_1C106D84C();
        v150 = *(void (**)(uint64_t, uint64_t))(v141 + 8);
        v150(v148, v98);
        v151 = ((uint64_t (*)(uint64_t, uint64_t))v150)(v138, v98);
        sub_1C077F858(v151, qword_1ED755A58);
        sub_1C078C780(v149, 0);
        v152 = sub_1C0BAE2F4(v149, v135);
        v154 = v288;
        v114 = v141;
        goto LABEL_33;
      }
      (*(void (**)(uint64_t, uint64_t))(v141 + 8))(v138, v98);
      v139 = v142;
      v114 = v141;
    }
    sub_1C0781B00(v139);
    v138 = v281;
    sub_1C0782470(v136, v281);
    v144 = sub_1C077AEEC(v138, 1, v98);
    if (!v143)
    {
      sub_1C077F858(v144, qword_1ED755A58);
      v146 = v138;
      v138 = v276;
      v147 = v276;
LABEL_31:
      sub_1C0781ED0(v147, v146);
      sub_1C0781ED0(v135, v138);
      v152 = sub_1C078C780(v135, 0);
      goto LABEL_32;
    }
    sub_1C0781B00(v138);
    sub_1C0782470(v306, v140);
    v145 = sub_1C07B2D80(v140, 1, v98);
    if ((_DWORD)v145 != 1)
    {
      sub_1C077F858(v145, qword_1ED755A58);
      v138 = v272;
      v147 = v272;
      v146 = v140;
      goto LABEL_31;
    }
    sub_1C0784B6C(v140, qword_1ED755A58);
LABEL_32:
    v154 = v288;
LABEL_33:
    sub_1C0782744(v152, v153, qword_1ED755A58);
    sub_1C077AEEC(v154, 1, v98);
    if (v143)
    {
      sub_1C07AF2B8();
      sub_1C0784B6C(v154, qword_1ED755A58);
      v155 = v304;
      sub_1C106F538();
      v156 = sub_1C077C13C();
      if (sub_1C07758D8(v156))
      {
        v157 = (uint8_t *)sub_1C0780FC8();
        *(_WORD *)v157 = 0;
        sub_1C077F048(&dword_1C0771000, v155, (os_log_type_t)v138, "InternalXPC: triples query: failed to generate query.", v157);
        sub_1C0776778();
      }

      sub_1C07AF628(MEMORY[0x1E0DEE9D8]);
      sub_1C07AF2B8();
      sub_1C0781B00(v135);
      sub_1C0781B00(v306);
      v158 = v136;
      goto LABEL_219;
    }
    v159 = MEMORY[0x1E0DEE9D8];
    v160 = v154;
    v161 = v290;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v114 + 32))(v290, v160, v98);
    sub_1C106EB78();
    v162 = sub_1C07807E4();
    v289 = v163;
    sub_1C07B2D8C(v162, v164, v165, v163);
    swift_retain();
    v166 = sub_1C0BA470C(v161, v138, (uint64_t)&OBJC_IVAR____TtC24IntelligencePlatformCore13GraphDatabase_pool, (uint64_t)sub_1C0BAE6E0, (uint64_t (*)(uint64_t, _QWORD *))sub_1C0BB9638);
    sub_1C0784B6C(v138, &qword_1ED756690);
    swift_release();
    v36 = (uint64_t (*)())"relationshipPredicate";
    v167 = *(_QWORD *)(v166 + 16);
    if (!v167)
      break;
    v326 = v159;
    v300 = v167;
    sub_1C09D3D5C();
    v168 = 0;
    v169 = *((unsigned __int8 *)v275 + 80);
    v288 = v166;
    v304 = (v166 + ((v169 + 32) & ~v169));
    v303 = *((_QWORD *)v275 + 9);
    v302 = (__n128)xmmword_1C108BB50;
    v301 = 0x80000001C10DE890;
    v299 = 0x80000001C10DE8C0;
    v298 = MEMORY[0x1E0DEE9B8] + 8;
    v36 = type metadata accessor for Source;
    v317 = v10;
    while (1)
    {
      v311 = v168 + 1;
      v170 = v312;
      sub_1C07E6C80((uint64_t)v304 + v303 * v168, v312, type metadata accessor for GraphTriple);
      sub_1C07ACF80(&qword_1ED761310);
      v75 = (__n128 *)swift_initStackObject();
      v171 = sub_1C07AFDF8(v75, v302);
      v171[2].n128_u64[0] = v172;
      v171[2].n128_u64[1] = 0xE700000000000000;
      v75[3].n128_u64[0] = sub_1C106E530();
      v75[3].n128_u64[1] = v173;
      v174 = MEMORY[0x1E0DEA968];
      sub_1C07AC88C();
      v75[4].n128_u64[1] = v174;
      v75[5].n128_u64[0] = v175;
      v75[5].n128_u64[1] = 0xE900000000000065;
      v176 = v313;
      v177 = sub_1C106E1E8();
      sub_1C0BAE73C(v177, v178);
      v75[7].n128_u64[1] = v174;
      v75[8].n128_u64[0] = v179;
      sub_1C07B5FEC();
      v180 = sub_1C106EADC();
      sub_1C0BAE79C(v180, v181);
      v75[10].n128_u64[1] = v174;
      v75[11].n128_u64[0] = v182;
      v75[11].n128_u64[1] = v301;
      v183 = sub_1C106E1E8();
      sub_1C0BAE774(v183, v184);
      v75[13].n128_u64[1] = v174;
      v75[14].n128_u64[0] = v185;
      v75[14].n128_u64[1] = 0xE600000000000000;
      sub_1C07811CC((_QWORD *)(v170 + *(int *)(v176 + 32)));
      v75[16].n128_u64[1] = v174;
      v75[17].n128_u64[0] = v186;
      v75[17].n128_u64[1] = 0xE700000000000000;
      v187 = *(_QWORD *)(v170 + *(int *)(v176 + 36));
      v328 = MEMORY[0x1E0DEE9D8];
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C078DC00();
      v188 = 1;
LABEL_41:
      v84 = v320;
      a1 = v321;
LABEL_42:
      if (qword_1ED75DF60 != -1)
        swift_once();
      if (qword_1ED78D4B0 >= v188)
        break;
      v206 = sub_1C07ACF80(&qword_1ED762B70);
      sub_1C0795B14(v206);
      v207 = v312;
      v75[21].n128_u64[0] = *(_QWORD *)(v312 + *(int *)(v313 + 40));
      sub_1C07A2818();
      v75[26].n128_u64[1] = v299;
      v209 = (uint64_t *)(v207 + *(int *)(v208 + 44));
      v210 = *v209;
      v211 = v209[1];
      v212 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v213 = (void *)MEMORY[0x1C3BA79F4](v212);
      v328 = v210;
      v329 = v211;
      v331 = 30;
      v332 = 0xE100000000000000;
      sub_1C07B1280();
      v214 = sub_1C10705D0();
      objc_autoreleasePoolPop(v213);
      sub_1C077589C();
      v75[28].n128_u64[1] = v206;
      v75[27].n128_u64[0] = v214;
      v215 = sub_1C106F97C();
      sub_1C0787D94(v207);
      v216 = v326;
      if ((sub_1C077C09C() & 1) == 0)
      {
        sub_1C0780BBC();
        v216 = v326;
      }
      v168 = v311;
      v218 = *(_QWORD *)(v216 + 16);
      v217 = *(_QWORD *)(v216 + 24);
      if (v218 >= v217 >> 1)
      {
        sub_1C0779D04(v217);
        sub_1C0780BBC();
        v216 = v326;
      }
      *(_QWORD *)(v216 + 16) = v218 + 1;
      *(_QWORD *)(v216 + 8 * v218 + 32) = v215;
      if (v168 == v300)
      {
        v311 = v216;
        swift_bridgeObjectRelease();
        v98 = v307;
        v114 = v293;
        v219 = MEMORY[0x1E0DEE9B8];
        v159 = MEMORY[0x1E0DEE9D8];
        goto LABEL_128;
      }
    }
    switch(v188)
    {
      case 1:
        if (qword_1ED761438 != -1)
          swift_once();
        v189 = v325;
        v190 = byte_1ED761420;
        goto LABEL_105;
      case 2:
        if (qword_1ED762380 != -1)
          swift_once();
        v189 = v325;
        v190 = &unk_1ED762360;
        goto LABEL_105;
      case 6:
        if (qword_1ED7623A8 != -1)
          swift_once();
        v189 = v325;
        v190 = &unk_1ED762388;
        goto LABEL_105;
      case 9:
        if (qword_1ED7622F0 != -1)
          swift_once();
        v189 = v325;
        v190 = byte_1ED7622D0;
        goto LABEL_105;
      case 11:
        if (qword_1ED7623C8 != -1)
          swift_once();
        v189 = v325;
        v190 = &unk_1ED7623B0;
        goto LABEL_105;
      case 12:
        if (qword_1ED762330 != -1)
          swift_once();
        v189 = v325;
        v190 = &unk_1ED762318;
        goto LABEL_105;
      case 14:
        if (qword_1ED762358 != -1)
          swift_once();
        v189 = v325;
        v190 = &unk_1ED762338;
        goto LABEL_105;
      case 16:
        if (qword_1ED762260 != -1)
          swift_once();
        v189 = v325;
        v190 = &unk_1ED762240;
        goto LABEL_105;
      case 17:
        if (qword_1ED761448 != -1)
          swift_once();
        v189 = v325;
        v190 = &unk_1ED762E88;
        goto LABEL_105;
      case 18:
        if (qword_1ED7623F0 != -1)
          swift_once();
        v189 = v325;
        v190 = &unk_1ED7623D0;
        goto LABEL_105;
      case 19:
        if (qword_1ED761418 != -1)
          swift_once();
        v189 = v325;
        v190 = &unk_1ED761400;
        goto LABEL_105;
      case 21:
        if (qword_1ED762310 != -1)
          swift_once();
        v189 = v325;
        v190 = &unk_1ED7622F8;
        goto LABEL_105;
      case 22:
        if (qword_1ED7622C8 != -1)
          swift_once();
        v189 = v325;
        v190 = &unk_1ED7622B0;
        goto LABEL_105;
      case 23:
        if (qword_1ED762E80 != -1)
          swift_once();
        v189 = v325;
        v190 = &unk_1ED762268;
        goto LABEL_105;
      case 24:
        if (qword_1ED7622A8 != -1)
          swift_once();
        v189 = v325;
        v190 = &unk_1ED762288;
        goto LABEL_105;
      case 25:
        if (qword_1ED762280 != -1)
          swift_once();
        v189 = v325;
        v190 = &unk_1ED761548;
        goto LABEL_105;
      case 27:
        if (qword_1ED761598 != -1)
          swift_once();
        v189 = v325;
        v190 = &unk_1ED761838;
        goto LABEL_105;
      case 29:
        if (qword_1ED761870 != -1)
          swift_once();
        v189 = v325;
        v190 = &unk_1ED761850;
LABEL_105:
        v192 = sub_1C079E000(v189, (uint64_t)v190);
        sub_1C07E6C80(v192, a1, (uint64_t (*)(_QWORD))type metadata accessor for Source);
        goto LABEL_106;
      default:
        if (qword_1ED761518 != -1)
          swift_once();
        sub_1C0775864();
        if (!qword_1ED7627B8)
        {
          sub_1C07889CC((uint64_t)v10);
          goto LABEL_113;
        }
        sub_1C07BAE34(qword_1ED7627B8, (uint64_t)off_1ED7627C0);
        sub_1C07AC17C();
        sub_1C077AEEC((uint64_t)v10, 1, v325);
        if (v143)
        {
LABEL_113:
          sub_1C0784B6C((uint64_t)v10, &qword_1ED7623F8);
          v194 = __OFADD__(v188++, 1);
          if (v194)
            goto LABEL_224;
          goto LABEL_42;
        }
        v191 = v297;
        sub_1C07AA8FC((uint64_t)v10);
        sub_1C07E563C(v191, a1, (uint64_t (*)(_QWORD))type metadata accessor for Source);
LABEL_106:
        v193 = v323;
        sub_1C07AA8FC(a1);
        sub_1C07E563C(v193, v84, (uint64_t (*)(_QWORD))type metadata accessor for Source);
        if (!__OFSUB__(v188, 1))
        {
          v194 = __OFADD__(v188++, 1);
          if (v194)
            goto LABEL_221;
          sub_1C079C6D0();
          if (!v143 & v196)
            v195 = 0;
          if ((v195 & v187) < 1)
          {
            sub_1C07B1F90(v84, (uint64_t (*)(_QWORD))type metadata accessor for Source);
            goto LABEL_42;
          }
          v197 = v319.n128_u64[0];
          sub_1C07AA8FC(v84);
          v198 = v197;
          v199 = (uint64_t *)v318;
          sub_1C07AA8FC(v198);
          v200 = *v199;
          v201 = v199[1];
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          sub_1C07B1F90((uint64_t)v199, (uint64_t (*)(_QWORD))type metadata accessor for Source);
          v202 = v328;
          if ((sub_1C077C09C() & 1) == 0)
          {
            sub_1C07963E4();
            v202 = v328;
          }
          v204 = *(_QWORD *)(v202 + 16);
          v203 = *(_QWORD *)(v202 + 24);
          if (v204 >= v203 >> 1)
          {
            sub_1C0779D04(v203);
            sub_1C07963E4();
            v202 = v328;
          }
          *(_QWORD *)(v202 + 16) = v204 + 1;
          v205 = v202 + 16 * v204;
          *(_QWORD *)(v205 + 32) = v200;
          *(_QWORD *)(v205 + 40) = v201;
          v10 = v317;
          goto LABEL_41;
        }
        __break(1u);
LABEL_221:
        __break(1u);
LABEL_222:
        __break(1u);
LABEL_223:
        __break(1u);
LABEL_224:
        __break(1u);
LABEL_225:
        __break(1u);
LABEL_226:
        swift_once();
        break;
    }
  }
  sub_1C077960C();
  v311 = MEMORY[0x1E0DEE9D8];
  v219 = MEMORY[0x1E0DEE9B8];
LABEL_128:
  v220 = sub_1C07807E4();
  sub_1C07B2D8C(v220, v221, v222, v289);
  v223 = sub_1C0BA470C(v290, (uint64_t)v36, (uint64_t)&OBJC_IVAR____TtC24IntelligencePlatformCore13GraphDatabase_pool, (uint64_t)sub_1C0BAE6C8, (uint64_t (*)(uint64_t, _QWORD *))sub_1C0BB9644);
  v224 = (uint64_t)v36;
  v225 = v223;
  sub_1C0784B6C(v224, &qword_1ED756690);
  sub_1C07785A8();
  v226 = *(char **)(v225 + 16);
  if (v226)
  {
    v330 = v159;
    v317 = v226;
    sub_1C09D3D5C();
    v227 = 0;
    v228 = (*(unsigned __int8 *)(v273 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v273 + 80);
    v304 = v225;
    v321 = v225 + v228;
    v320 = *(_QWORD *)(v273 + 72);
    v319 = (__n128)xmmword_1C108BB50;
    v318 = (char *)0x80000001C10DE890;
    v312 = v219 + 8;
    v313 = 0x80000001C10DE8C0;
    do
    {
      v323 = v227 + 1;
      a1 = v309;
      sub_1C07E6C80(v321 + v320 * v227, v309, type metadata accessor for EventTriple);
      sub_1C07ACF80(&qword_1ED761310);
      v75 = (__n128 *)sub_1C0778598();
      v229 = sub_1C07AFDF8(v75, v319);
      v229[2].n128_u64[0] = v230;
      v229[2].n128_u64[1] = 0xE700000000000000;
      v75[3].n128_u64[0] = sub_1C106E530();
      v75[3].n128_u64[1] = v231;
      v84 = MEMORY[0x1E0DEA968];
      sub_1C07AC88C();
      v75[4].n128_u64[1] = v84;
      v75[5].n128_u64[0] = v232;
      v75[5].n128_u64[1] = 0xE900000000000065;
      v233 = v310;
      v234 = sub_1C106E1E8();
      sub_1C0BAE73C(v234, v235);
      v75[7].n128_u64[1] = v84;
      v75[8].n128_u64[0] = v236;
      sub_1C07B5FEC();
      v237 = sub_1C106EADC();
      sub_1C0BAE79C(v237, v238);
      v75[10].n128_u64[1] = v84;
      v75[11].n128_u64[0] = v239;
      v75[11].n128_u64[1] = (unint64_t)v318;
      v240 = sub_1C106E1E8();
      sub_1C0BAE774(v240, v241);
      v75[13].n128_u64[1] = v84;
      v75[14].n128_u64[0] = v242;
      v75[14].n128_u64[1] = 0xE600000000000000;
      sub_1C07811CC((_QWORD *)(a1 + *(int *)(v233 + 32)));
      v75[16].n128_u64[1] = v84;
      v75[17].n128_u64[0] = v243;
      v75[17].n128_u64[1] = 0xE700000000000000;
      v244 = *(_QWORD *)(a1 + *(int *)(v233 + 36));
      v331 = MEMORY[0x1E0DEE9D8];
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C078DC00();
      v245 = 1;
      while (1)
      {
        v246 = v316;
LABEL_132:
        if (qword_1ED75DF60 != -1)
          swift_once();
        if (qword_1ED78D4B0 < v245)
          break;
        switch(v245)
        {
          case 1:
            if (qword_1ED761438 != -1)
              swift_once();
            v247 = v325;
            v248 = byte_1ED761420;
            goto LABEL_195;
          case 2:
            if (qword_1ED762380 != -1)
              swift_once();
            v247 = v325;
            v248 = &unk_1ED762360;
            goto LABEL_195;
          case 6:
            if (qword_1ED7623A8 != -1)
              swift_once();
            v247 = v325;
            v248 = &unk_1ED762388;
            goto LABEL_195;
          case 9:
            if (qword_1ED7622F0 != -1)
              swift_once();
            v247 = v325;
            v248 = byte_1ED7622D0;
            goto LABEL_195;
          case 11:
            if (qword_1ED7623C8 != -1)
              swift_once();
            v247 = v325;
            v248 = &unk_1ED7623B0;
            goto LABEL_195;
          case 12:
            if (qword_1ED762330 != -1)
              swift_once();
            v247 = v325;
            v248 = &unk_1ED762318;
            goto LABEL_195;
          case 14:
            if (qword_1ED762358 != -1)
              swift_once();
            v247 = v325;
            v248 = &unk_1ED762338;
            goto LABEL_195;
          case 16:
            if (qword_1ED762260 != -1)
              swift_once();
            v247 = v325;
            v248 = &unk_1ED762240;
            goto LABEL_195;
          case 17:
            if (qword_1ED761448 != -1)
              swift_once();
            v247 = v325;
            v248 = &unk_1ED762E88;
            goto LABEL_195;
          case 18:
            if (qword_1ED7623F0 != -1)
              swift_once();
            v247 = v325;
            v248 = &unk_1ED7623D0;
            goto LABEL_195;
          case 19:
            if (qword_1ED761418 != -1)
              swift_once();
            v247 = v325;
            v248 = &unk_1ED761400;
            goto LABEL_195;
          case 21:
            if (qword_1ED762310 != -1)
              swift_once();
            v247 = v325;
            v248 = &unk_1ED7622F8;
            goto LABEL_195;
          case 22:
            if (qword_1ED7622C8 != -1)
              swift_once();
            v247 = v325;
            v248 = &unk_1ED7622B0;
            goto LABEL_195;
          case 23:
            if (qword_1ED762E80 != -1)
              swift_once();
            v247 = v325;
            v248 = &unk_1ED762268;
            goto LABEL_195;
          case 24:
            if (qword_1ED7622A8 != -1)
              swift_once();
            v247 = v325;
            v248 = &unk_1ED762288;
            goto LABEL_195;
          case 25:
            if (qword_1ED762280 != -1)
              swift_once();
            v247 = v325;
            v248 = &unk_1ED761548;
            goto LABEL_195;
          case 27:
            if (qword_1ED761598 != -1)
              swift_once();
            v247 = v325;
            v248 = &unk_1ED761838;
            goto LABEL_195;
          case 29:
            if (qword_1ED761870 != -1)
              swift_once();
            v247 = v325;
            v248 = &unk_1ED761850;
LABEL_195:
            v251 = sub_1C079E000(v247, (uint64_t)v248);
            sub_1C07E6C80(v251, v246, (uint64_t (*)(_QWORD))type metadata accessor for Source);
            goto LABEL_196;
          default:
            if (qword_1ED761518 != -1)
              swift_once();
            sub_1C0775864();
            if (qword_1ED7627B8)
            {
              sub_1C07BAE34(qword_1ED7627B8, (uint64_t)off_1ED7627C0);
              v36 = v308;
              sub_1C07AC17C();
              sub_1C077AEEC((uint64_t)v36, 1, v325);
              if (v143)
                goto LABEL_208;
              v249 = v292;
              sub_1C07B4894((uint64_t)v36);
              v250 = v249;
              v246 = v316;
              sub_1C07B4894(v250);
LABEL_196:
              v36 = v322;
              sub_1C07E563C(v246, (uint64_t)v322, (uint64_t (*)(_QWORD))type metadata accessor for Source);
              sub_1C07E563C((uint64_t)v36, v324, (uint64_t (*)(_QWORD))type metadata accessor for Source);
              if (__OFSUB__(v245, 1))
                goto LABEL_222;
              v194 = __OFADD__(v245++, 1);
              if (v194)
                goto LABEL_223;
              sub_1C079C6D0();
              if (!v143 & v196)
                v252 = 0;
              if ((v252 & v244) < 1)
              {
                sub_1C0787D94(v324);
                goto LABEL_132;
              }
              v253 = v315;
              sub_1C07B4894(v324);
              v254 = v253;
              v255 = v314;
              sub_1C07B4894(v254);
              a1 = *v255;
              v256 = v255[1];
              _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
              sub_1C0787D94((uint64_t)v255);
              v257 = v331;
              if ((sub_1C077C09C() & 1) == 0)
              {
                sub_1C07963E4();
                v257 = v331;
              }
              v84 = *(_QWORD *)(v257 + 16);
              v258 = *(_QWORD *)(v257 + 24);
              v10 = (char *)(v84 + 1);
              if (v84 >= v258 >> 1)
              {
                sub_1C0779D04(v258);
                sub_1C07963E4();
                v257 = v331;
              }
              *(_QWORD *)(v257 + 16) = v10;
              v259 = v257 + 16 * v84;
              *(_QWORD *)(v259 + 32) = a1;
              *(_QWORD *)(v259 + 40) = v256;
            }
            else
            {
              v36 = v308;
              sub_1C07889CC((uint64_t)v308);
LABEL_208:
              sub_1C0784B6C((uint64_t)v36, &qword_1ED7623F8);
              v194 = __OFADD__(v245++, 1);
              if (v194)
                goto LABEL_225;
            }
            break;
        }
      }
      v260 = sub_1C07ACF80(&qword_1ED762B70);
      sub_1C0795B14(v260);
      v261 = v309;
      v75[21].n128_u64[0] = *(_QWORD *)(v309 + *(int *)(v310 + 40));
      sub_1C07A2818();
      v75[26].n128_u64[1] = v313;
      v263 = (uint64_t *)(v261 + *(int *)(v262 + 44));
      v264 = *v263;
      v265 = v263[1];
      v266 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v10 = (char *)MEMORY[0x1C3BA79F4](v266);
      v331 = v264;
      v332 = v265;
      v326 = 30;
      v327 = 0xE100000000000000;
      sub_1C07B1280();
      v267 = sub_1C10705D0();
      objc_autoreleasePoolPop(v10);
      sub_1C07785A0();
      v75[28].n128_u64[1] = v260;
      v75[27].n128_u64[0] = v267;
      v268 = sub_1C106F97C();
      sub_1C07B1F90(v261, type metadata accessor for EventTriple);
      v269 = v330;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C0780BBC();
        v269 = v330;
      }
      v227 = v323;
      v271 = *(_QWORD *)(v269 + 16);
      v270 = *(_QWORD *)(v269 + 24);
      if (v271 >= v270 >> 1)
      {
        sub_1C0779D04(v270);
        sub_1C0780BBC();
        v269 = v330;
      }
      *(_QWORD *)(v269 + 16) = v271 + 1;
      *(_QWORD *)(v269 + 8 * v271 + 32) = v268;
    }
    while ((char *)v227 != v317);
    swift_bridgeObjectRelease();
    v98 = v307;
    v114 = v293;
  }
  else
  {
    sub_1C0775844();
    v269 = MEMORY[0x1E0DEE9D8];
  }
  v296(v311, v269);
  swift_bridgeObjectRelease();
  sub_1C0775844();
  sub_1C07AF2B8();
  (*(void (**)(uint64_t, uint64_t))(v114 + 8))(v290, v98);
  sub_1C0781B00((uint64_t)v291);
  sub_1C0781B00(v306);
  v158 = v294;
LABEL_219:
  sub_1C0781B00(v158);
  sub_1C0776760();
}

void sub_1C0BAB2E4(uint64_t a1, void (**a2)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = sub_1C07ACF80(&qword_1ED75E630);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED75E808 != -1)
    swift_once();
  v6 = sub_1C106F544();
  sub_1C079E000(v6, (uint64_t)qword_1ED78D7A0);
  v7 = sub_1C106F538();
  v8 = sub_1C10703A8();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_1C0771000, v7, v8, "InternalXPC: benchmark", v9, 2u);
    MEMORY[0x1C3BA8270](v9, -1, -1);
  }

  if (qword_1ED749400 != -1)
    swift_once();
  v10 = sub_1C079E000(v3, (uint64_t)qword_1ED7493E0);
  swift_beginAccess();
  sub_1C078A8CC(v10, (uint64_t)v5, &qword_1ED75E630);
  v11 = type metadata accessor for Configuration();
  if (sub_1C07B2D80((uint64_t)v5, 1, v11) == 1)
  {
    _Block_release(a2);
    __break(1u);
  }
  else
  {
    type metadata accessor for IntelligencePlatformBenchmark();
    v12 = sub_1C087D984((uint64_t)v5);
    sub_1C07B1F90((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    if (v12)
    {
      sub_1C087F2E8();
      a2[2](a2, 1, 0);
      swift_release();
    }
    else
    {
      a2[2](a2, 0, 0);
    }
    _Block_release(a2);
  }
}

void InternalXPC.Server.benchmark(completion:)()
{
  NSObject *v0;
  uint64_t v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;

  sub_1C0BAE768();
  v3 = sub_1C07ACF80(&qword_1ED75E630);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v4);
  sub_1C0780A08();
  if (qword_1ED75E808 != -1)
    swift_once();
  v5 = sub_1C077585C();
  sub_1C079E000(v5, (uint64_t)qword_1ED78D7A0);
  sub_1C077C0FC();
  v6 = sub_1C0784E0C();
  if (sub_1C07767E4(v6))
  {
    v7 = (uint8_t *)sub_1C0780FC8();
    *(_WORD *)v7 = 0;
    sub_1C077F048(&dword_1C0771000, v0, v2, "InternalXPC: benchmark", v7);
    sub_1C0776778();
  }

  if (qword_1ED749400 != -1)
    swift_once();
  sub_1C079E000(v3, (uint64_t)qword_1ED7493E0);
  v8 = sub_1C0775864();
  sub_1C078176C(v8, v9, &qword_1ED75E630);
  v10 = sub_1C0779D10();
  sub_1C077AEEC(v1, 1, v10);
  if (v11)
  {
    __break(1u);
  }
  else
  {
    type metadata accessor for IntelligencePlatformBenchmark();
    v12 = sub_1C087D984(v1);
    sub_1C07B1F90(v1, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    if (v12)
    {
      sub_1C087F2E8();
      sub_1C079DCE4(1);
      sub_1C077FA84();
    }
    else
    {
      sub_1C079DCE4(0);
    }
    sub_1C077C798();
  }
}

void sub_1C0BAB6C4(uint64_t a1, void (**a2)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;

  v3 = sub_1C07ACF80(&qword_1ED75E630);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED75E808 != -1)
    swift_once();
  v6 = sub_1C106F544();
  sub_1C079E000(v6, (uint64_t)qword_1ED78D7A0);
  v7 = sub_1C106F538();
  v8 = sub_1C10703A8();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_1C0771000, v7, v8, "InternalXPC: validateGraph", v9, 2u);
    MEMORY[0x1C3BA8270](v9, -1, -1);
  }

  if (qword_1ED749400 != -1)
    swift_once();
  v10 = sub_1C079E000(v3, (uint64_t)qword_1ED7493E0);
  swift_beginAccess();
  sub_1C078A8CC(v10, (uint64_t)v5, &qword_1ED75E630);
  v11 = type metadata accessor for Configuration();
  if (sub_1C07B2D80((uint64_t)v5, 1, v11) == 1)
  {
    _Block_release(a2);
    __break(1u);
  }
  else
  {
    type metadata accessor for GraphValidator();
    swift_allocObject();
    GraphValidator.init(config:)((uint64_t)v5);
    sub_1C0AC5EF0();
    sub_1C07ACF80(&qword_1ED762B80);
    v12 = (void *)sub_1C106F934();
    ((void (**)(_QWORD, void *, _QWORD))a2)[2](a2, v12, 0);
    swift_release();
    swift_bridgeObjectRelease();

    _Block_release(a2);
  }
}

void InternalXPC.Server.validateGraph(completion:)()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  sub_1C0BAE768();
  v2 = sub_1C07ACF80(&qword_1ED75E630);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  sub_1C0780A08();
  if (qword_1ED75E808 != -1)
    swift_once();
  v4 = sub_1C077585C();
  sub_1C079E000(v4, (uint64_t)qword_1ED78D7A0);
  sub_1C077C0FC();
  v5 = sub_1C0784E0C();
  if (os_log_type_enabled(v0, v5))
  {
    v6 = (uint8_t *)sub_1C0780FC8();
    *(_WORD *)v6 = 0;
    sub_1C077F048(&dword_1C0771000, v0, v5, "InternalXPC: validateGraph", v6);
    sub_1C0776778();
  }

  if (qword_1ED749400 != -1)
    swift_once();
  sub_1C079E000(v2, (uint64_t)qword_1ED7493E0);
  v7 = sub_1C0775864();
  sub_1C078176C(v7, v8, &qword_1ED75E630);
  v9 = sub_1C0779D10();
  sub_1C077AEEC(v1, 1, v9);
  if (v10)
  {
    __break(1u);
  }
  else
  {
    type metadata accessor for GraphValidator();
    sub_1C0778598();
    GraphValidator.init(config:)(v1);
    sub_1C0AC5EF0();
    sub_1C079DCE4(v11);
    swift_release();
    sub_1C0775844();
    sub_1C077C798();
  }
}

void sub_1C0BABC20(void *a1, int a2, void *aBlock, void (*a4)(void))
{
  void *v6;
  id v7;

  v6 = _Block_copy(aBlock);
  _Block_copy(v6);
  v7 = a1;
  a4();
  _Block_release(v6);
  sub_1C0787FDC(v7);
}

id InternalXPC.Server.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

uint64_t sub_1C0BABCB8(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  char v12;
  id v13;
  id v14;
  void *v15;
  void *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  _WORD *v20;
  const char *v21;
  uint64_t v22;
  os_log_type_t v23;
  _WORD *v24;

  v3 = sub_1C07ACF80(&qword_1ED75E630);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v4);
  sub_1C0778564();
  v7 = v6 - v5;
  if (!objc_msgSend((id)objc_opt_self(), sel_isInternalDevice))
  {
    if (qword_1ED75E808 != -1)
      swift_once();
    v17 = sub_1C077585C();
    sub_1C079E000(v17, (uint64_t)qword_1ED78D7A0);
    v18 = sub_1C077C0FC();
    v19 = sub_1C10703A8();
    if (sub_1C077F60C(v19))
    {
      v20 = (_WORD *)sub_1C0780FC8();
      sub_1C078C17C(v20);
      v21 = "InternalXPC: API disabled on customer devices.";
      goto LABEL_16;
    }
LABEL_17:

    return 0;
  }
  if (qword_1ED749400 != -1)
    swift_once();
  v8 = sub_1C079E000(v3, (uint64_t)qword_1ED7493E0);
  sub_1C0775864();
  sub_1C0BAE788(v8, v9, &qword_1ED75E630);
  v10 = sub_1C0779D10();
  result = sub_1C077AEEC(v7, 1, v10);
  if (!v12)
  {
    v3 = *(_QWORD *)(v7 + *(int *)(v10 + 20));
    sub_1C0791DDC(result, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    if ((v3 & 1) == 0)
    {
      sub_1C0BAE754();
      if ((sub_1C0C47FA8() & 1) != 0)
      {
        v13 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_1EF6D5D68);
        sub_1C0784EE0((uint64_t)v13, sel_setExportedInterface_);

        v14 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for InternalXPC.Server()), sel_init);
        sub_1C0784EE0((uint64_t)v14, sel_setExportedObject_);

        v15 = sub_1C077E8F4((uint64_t)&unk_1E7A21930);
        sub_1C0784EE0((uint64_t)v15, sel_setInterruptionHandler_);
        _Block_release(v15);
        v16 = sub_1C077E8F4((uint64_t)&unk_1E7A21958);
        sub_1C0784EE0((uint64_t)v16, sel_setInvalidationHandler_);
        _Block_release(v16);
        objc_msgSend(a2, sel_resume);
        return 1;
      }
      return 0;
    }
    if (qword_1ED75E808 != -1)
      swift_once();
    v22 = sub_1C077585C();
    sub_1C079E000(v22, (uint64_t)qword_1ED78D7A0);
    v18 = sub_1C077C0FC();
    v23 = sub_1C10703A8();
    if (sub_1C077F60C(v23))
    {
      v24 = (_WORD *)sub_1C0780FC8();
      sub_1C078C17C(v24);
      v21 = "InternalXPC: service is in no-op mode.";
LABEL_16:
      sub_1C077F048(&dword_1C0771000, v18, (os_log_type_t)a2, v21, (uint8_t *)v3);
      sub_1C0776778();
    }
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

void sub_1C0BABFC8()
{
  sub_1C0BABFF0(MEMORY[0x1E0DF2280], "InternalXPC: connection interrupted.");
}

void sub_1C0BABFDC()
{
  sub_1C0BABFF0(MEMORY[0x1E0DF2290], "InternalXPC: connection invalidated.");
}

void sub_1C0BABFF0(uint64_t (*a1)(void), const char *a2)
{
  uint64_t v4;
  os_log_type_t v5;
  _WORD *v6;
  NSObject *oslog;

  if (qword_1ED75E808 != -1)
    swift_once();
  v4 = sub_1C077585C();
  sub_1C079E000(v4, (uint64_t)qword_1ED78D7A0);
  oslog = sub_1C077C0FC();
  v5 = a1();
  if (os_log_type_enabled(oslog, v5))
  {
    v6 = (_WORD *)sub_1C0780FC8();
    sub_1C078C17C(v6);
    sub_1C077F048(&dword_1C0771000, oslog, v5, a2, (uint8_t *)a1);
    sub_1C0776778();
  }
  sub_1C0787FDC(oslog);
}

uint64_t InternalXPC.Server.runDeltaUpdatePipeline(withSource:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2[6] = a1;
  v2[7] = a2;
  v2[8] = sub_1C07ACF80(&qword_1ED75E630);
  v2[9] = sub_1C0779D74();
  sub_1C07ACF80(&qword_1ED7623F8);
  v2[10] = sub_1C0779D74();
  v2[11] = type metadata accessor for Source();
  v2[12] = sub_1C0779D74();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0BAC184()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  os_log_type_t v11;
  _BOOL4 v12;
  unint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;

  if (qword_1ED75E808 != -1)
    swift_once();
  v1 = sub_1C077585C();
  v2 = sub_1C079E000(v1, (uint64_t)qword_1ED78D7A0);
  *(_QWORD *)(v0 + 104) = v2;
  v3 = sub_1C106F538();
  v4 = sub_1C10703A8();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)sub_1C0780FC8();
    *(_WORD *)v5 = 0;
    sub_1C077F048(&dword_1C0771000, v3, v4, "InternalXPC: runDeltaUpdatePipeline", v5);
    sub_1C0776778();
  }
  v6 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 80);
  v7 = *(_QWORD *)(v0 + 88);
  v9 = *(_QWORD *)(v0 + 56);

  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  Source.init(rawValue:)(v6, v9, v8);
  v10 = sub_1C07B2D80(v8, 1, v7);
  *(_DWORD *)(v0 + 136) = v10;
  if (v10 == 1)
  {
    sub_1C0784B6C(*(_QWORD *)(v0 + 80), &qword_1ED7623F8);
    swift_bridgeObjectRetain_n();
    sub_1C106F538();
    v11 = sub_1C077C13C();
    v12 = sub_1C077AF00(v11);
    v13 = *(_QWORD *)(v0 + 56);
    if (v12)
    {
      v25 = *(_QWORD *)(v0 + 48);
      v14 = (uint8_t *)sub_1C0775854();
      v26 = sub_1C0775854();
      *(_DWORD *)v14 = 136315138;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      *(_QWORD *)(v0 + 40) = sub_1C0788DAC(v25, v13, &v26);
      sub_1C10705AC();
      swift_bridgeObjectRelease_n();
      sub_1C07796F0(&dword_1C0771000, v2, (os_log_type_t)v6, "InternalXPC: runDeltaUpdatePipeline: %s doesn't exist", v14);
      sub_1C0778610();
      sub_1C0776778();
    }
    swift_bridgeObjectRelease_n();

    sub_1C077B8C8();
    sub_1C07767BC();
    sub_1C07796F8();
    v22 = sub_1C077FB3C();
    return v23(v22);
  }
  sub_1C07E563C(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 96), (uint64_t (*)(_QWORD))type metadata accessor for Source);
  if (qword_1ED749400 != -1)
    swift_once();
  v15 = *(_QWORD *)(v0 + 72);
  v16 = sub_1C079E000(*(_QWORD *)(v0 + 64), (uint64_t)qword_1ED7493E0);
  sub_1C0775864();
  sub_1C0BAE788(v16, v17, &qword_1ED75E630);
  v18 = sub_1C0779D10();
  result = sub_1C077AEEC(v15, 1, v18);
  if (v20)
  {
    __break(1u);
  }
  else
  {
    if (qword_1ED755EC8 != -1)
      swift_once();
    *(_QWORD *)(v0 + 112) = sub_1C07A5ED0();
    if (v16)
    {
      v21 = *(_QWORD *)(v0 + 72);
      sub_1C07B1F90(*(_QWORD *)(v0 + 96), (uint64_t (*)(_QWORD))type metadata accessor for Source);
      sub_1C07B1F90(v21, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
      sub_1C077B8C8();
      sub_1C07767BC();
      sub_1C07796F8();
      v22 = sub_1C079C6C0();
      return v23(v22);
    }
    sub_1C07B1F90(*(_QWORD *)(v0 + 72), (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    v24 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v24;
    *v24 = v0;
    v24[1] = sub_1C0BAC520;
    return Pipeline.runDeltaUpdate(reason:source:)(1, *(_QWORD *)(v0 + 96));
  }
  return result;
}

uint64_t sub_1C0BAC520()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  swift_release();
  sub_1C077862C();
  return sub_1C0789D28();
}

uint64_t sub_1C0BAC580()
{
  os_log_type_t v0;
  uint8_t *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  _WORD *v5;
  uint64_t v6;
  _BOOL8 v7;
  uint64_t (*v8)(void);

  v3 = *(NSObject **)(v2 + 104);
  sub_1C106F538();
  v4 = sub_1C0784E0C();
  if (sub_1C077C10C(v4))
  {
    v5 = (_WORD *)sub_1C0780FC8();
    sub_1C078C17C(v5);
    sub_1C077F048(&dword_1C0771000, v3, v0, "InternalXPC: runDeltaUpdatePipeline: done", v1);
    sub_1C0776778();
  }

  sub_1C0791DDC(v6, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C077B8C8();
  sub_1C07767BC();
  sub_1C07796F8();
  v7 = sub_1C077FB3C();
  return sub_1C0787904(v7, v8);
}

uint64_t sub_1C0BAC60C()
{
  uint64_t v0;

  sub_1C07B1F90(*(_QWORD *)(v0 + 96), (uint64_t (*)(_QWORD))type metadata accessor for Source);
  swift_task_dealloc();
  sub_1C07796F8();
  swift_task_dealloc();
  return sub_1C0787904(0, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0BAC6C8(int a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;

  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  v5 = sub_1C106FB14();
  v7 = v6;
  v3[4] = v6;
  v8 = a3;
  v9 = (_QWORD *)swift_task_alloc();
  v3[5] = v9;
  *v9 = v3;
  v9[1] = sub_1C0BAC750;
  return InternalXPC.Server.runDeltaUpdatePipeline(withSource:)(v5, v7);
}

uint64_t sub_1C0BAC750()
{
  void *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  _QWORD *v6;

  sub_1C077C910();
  v4 = *(void **)(v3 + 16);
  v5 = *v2;
  sub_1C07878A8(v6);

  sub_1C0775844();
  if (v1)
  {
    sub_1C106AA08();
    sub_1C07B5A8C();
    sub_1C07AD738();

  }
  else
  {
    sub_1C07AE95C();
  }
  _Block_release(*(const void **)(v3 + 24));
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t InternalXPC.Server.runToMatchingPipeline()()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 40) = sub_1C07ACF80(&qword_1ED75E630);
  *(_QWORD *)(v0 + 48) = sub_1C0779D74();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0BAC810()
{
  NSObject *v0;
  os_log_type_t v1;
  uint64_t *v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  _QWORD *v13;

  if (qword_1ED75E808 != -1)
    swift_once();
  v3 = sub_1C077585C();
  v2[7] = sub_1C079E000(v3, (uint64_t)qword_1ED78D7A0);
  sub_1C077C0FC();
  v4 = sub_1C0784E0C();
  if (sub_1C07758D8(v4))
  {
    v5 = (uint8_t *)sub_1C0780FC8();
    *(_WORD *)v5 = 0;
    sub_1C077F048(&dword_1C0771000, v0, v1, "InternalXPC: runToMatchingPipeline", v5);
    sub_1C0776778();
  }

  if (qword_1ED749400 != -1)
    swift_once();
  v6 = v2[6];
  v7 = sub_1C079E000(v2[5], (uint64_t)qword_1ED7493E0);
  sub_1C0775864();
  sub_1C078A8CC(v7, v6, &qword_1ED75E630);
  v8 = sub_1C0779D10();
  result = sub_1C077AEEC(v6, 1, v8);
  if (v10)
  {
    __break(1u);
  }
  else
  {
    if (qword_1ED755EC8 != -1)
      swift_once();
    v2[8] = sub_1C07A5ED0();
    sub_1C07B1F90(v2[6], (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    if (v7)
    {
      sub_1C078221C();
      v11 = sub_1C079C6C0();
      return sub_1C07850F4(v11, v12);
    }
    else
    {
      v13 = (_QWORD *)swift_task_alloc();
      v2[9] = (uint64_t)v13;
      *v13 = v2;
      v13[1] = sub_1C0BAC9D0;
      return sub_1C0CBD6C8(1);
    }
  }
  return result;
}

uint64_t sub_1C0BAC9D0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  sub_1C077862C();
  return sub_1C0789D28();
}

uint64_t sub_1C0BACA30()
{
  os_log_type_t v0;
  uint8_t *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  _WORD *v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  v3 = *(NSObject **)(v2 + 56);
  sub_1C106F538();
  v4 = sub_1C0784E0C();
  if (sub_1C077C10C(v4))
  {
    v5 = (_WORD *)sub_1C0780FC8();
    sub_1C078C17C(v5);
    sub_1C077F048(&dword_1C0771000, v3, v0, "InternalXPC: runToMatchingPipeline: done", v1);
    sub_1C0776778();
  }

  sub_1C07796F8();
  v6 = sub_1C0779970();
  return sub_1C0787904(v6, v7);
}

uint64_t sub_1C0BACAA4()
{
  uint64_t v0;

  swift_release();
  sub_1C078221C();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1C0BACAF4(const void *a1, void *a2)
{
  _QWORD *v2;
  id v4;
  _QWORD *v5;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  v4 = a2;
  v5 = (_QWORD *)swift_task_alloc();
  v2[4] = v5;
  *v5 = v2;
  v5[1] = sub_1C0BAE734;
  return InternalXPC.Server.runToMatchingPipeline()();
}

uint64_t InternalXPC.Server.stopPipeline()()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 40) = sub_1C07ACF80(&qword_1ED75E630);
  *(_QWORD *)(v0 + 48) = sub_1C0779D74();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0BACB90()
{
  NSObject *v0;
  uint64_t v1;
  os_log_type_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  char v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  os_log_type_t v15;
  _WORD *v16;

  if (qword_1ED75E808 != -1)
    swift_once();
  v3 = sub_1C077585C();
  v4 = sub_1C079E000(v3, (uint64_t)qword_1ED78D7A0);
  sub_1C077C0FC();
  v5 = sub_1C0784E0C();
  if (sub_1C077AF00(v5))
  {
    v6 = (uint8_t *)sub_1C0780FC8();
    *(_WORD *)v6 = 0;
    sub_1C077F048(&dword_1C0771000, v0, v2, "InternalXPC: stopPipeline", v6);
    sub_1C0776778();
  }

  if (qword_1ED749400 != -1)
    swift_once();
  v7 = *(_QWORD *)(v1 + 48);
  sub_1C079E000(*(_QWORD *)(v1 + 40), (uint64_t)qword_1ED7493E0);
  v8 = sub_1C0775864();
  sub_1C0782744(v8, v9, &qword_1ED75E630);
  v10 = sub_1C0779D10();
  result = sub_1C077AEEC(v7, 1, v10);
  if (v12)
  {
    __break(1u);
  }
  else
  {
    if (qword_1ED755EC8 != -1)
      swift_once();
    sub_1C07A5ED0();
    sub_1C07B1F90(*(_QWORD *)(v1 + 48), (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    if (v1 == -16)
    {
      sub_1C0CBD7A0();
      sub_1C07785A8();
      sub_1C106F538();
      v15 = sub_1C0784E0C();
      if (sub_1C077C10C(v15))
      {
        v16 = (_WORD *)sub_1C0780FC8();
        sub_1C078C17C(v16);
        sub_1C077F048(&dword_1C0771000, v4, (os_log_type_t)v4, "InternalXPC: stopPipeline: done", 0);
        sub_1C0776778();
      }

      sub_1C07796F8();
      v13 = sub_1C0779970();
    }
    else
    {
      sub_1C078221C();
      v13 = sub_1C079C6C0();
    }
    return sub_1C07850F4(v13, v14);
  }
  return result;
}

uint64_t sub_1C0BACD80(void *a1, int a2, void *aBlock, uint64_t a4, uint64_t a5)
{
  void *v7;
  uint64_t v8;
  id v9;

  v7 = _Block_copy(aBlock);
  v8 = sub_1C0778598();
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = a1;
  v9 = a1;
  return sub_1C0F09A4C(a5, v8);
}

uint64_t sub_1C0BACDD8(const void *a1, void *a2)
{
  _QWORD *v2;
  id v4;
  _QWORD *v5;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  v4 = a2;
  v5 = (_QWORD *)swift_task_alloc();
  v2[4] = v5;
  *v5 = v2;
  v5[1] = sub_1C0BAE734;
  return InternalXPC.Server.stopPipeline()();
}

uint64_t sub_1C0BACE34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t result;
  uint64_t v37;
  char v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53[5];
  char *v54;

  v49 = a3;
  v48 = a1;
  v4 = sub_1C106D2DC();
  v43 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v42 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_1C07ACF80(&qword_1ED759F08);
  v52 = *(_QWORD *)(v50 - 8);
  v6 = MEMORY[0x1E0C80A78](v50);
  v44 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v41 - v8;
  v10 = sub_1C106E968();
  v46 = *(_QWORD *)(v10 - 8);
  v47 = v10;
  MEMORY[0x1E0C80A78](v10);
  v54 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1C07ACF80(&qword_1ED75EA10);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v41 - v16;
  v18 = sub_1C07ACF80(&qword_1ED756690);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1C106EB78();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v41 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = a2;
  v27 = v26;
  sub_1C078A8CC(v25, (uint64_t)v20, &qword_1ED756690);
  v28 = sub_1C07B2D80((uint64_t)v20, 1, v27);
  v45 = v27;
  v51 = v22;
  if (v28 == 1)
  {
    sub_1C07B2D8C((uint64_t)v17, 1, 1, v4);
    sub_1C106EB54();
    sub_1C0784B6C((uint64_t)v20, &qword_1ED756690);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v24, v20, v27);
  }
  v29 = v54;
  sub_1C106E95C();
  type metadata accessor for StaticKnowledgeTriple();
  v53[3] = sub_1C106BCBC();
  v53[4] = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v53);
  sub_1C106D840();
  sub_1C07803F8(&qword_1ED75C040, (void (*)(uint64_t))type metadata accessor for StaticKnowledgeTriple);
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v53);
  sub_1C106EB6C();
  if (sub_1C07B2D80((uint64_t)v15, 1, v4) == 1)
  {
    sub_1C0784B6C((uint64_t)v15, &qword_1ED75EA10);
    v30 = v52;
    v31 = v50;
  }
  else
  {
    v33 = v42;
    v32 = v43;
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v42, v15, v4);
    sub_1C106D2C4();
    sub_1C07BB218(qword_1EF641400, &qword_1ED759F08);
    v34 = v44;
    v31 = v50;
    sub_1C106BD10();
    swift_bridgeObjectRelease();
    v35 = v33;
    v29 = v54;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v35, v4);
    v30 = v52;
    (*(void (**)(char *, uint64_t))(v52 + 8))(v9, v31);
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v9, v34, v31);
  }
  result = sub_1C106EB60();
  v37 = v51;
  if ((v38 & 1) != 0)
    goto LABEL_10;
  if ((result & 0x8000000000000000) == 0)
  {
    sub_1C07BB218(&qword_1EF6413F8, &qword_1ED759F08);
    v39 = v44;
    sub_1C106BF38();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v31);
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v9, v39, v31);
LABEL_10:
    sub_1C07BB218(&qword_1ED7505E0, &qword_1ED759F08);
    sub_1C07803F8(&qword_1ED750C30, (void (*)(uint64_t))type metadata accessor for StaticKnowledgeTriple);
    v40 = sub_1C106BAB8();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v31);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v29, v47);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v24, v45);
    return v40;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0BAD350(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t result;
  uint64_t v37;
  char v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53[5];
  char *v54;

  v49 = a3;
  v48 = a1;
  v4 = sub_1C106D2DC();
  v43 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v42 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_1C07ACF80(&qword_1ED75E500);
  v52 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v44 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v41 - v8;
  v10 = sub_1C106E968();
  v46 = *(_QWORD *)(v10 - 8);
  v47 = v10;
  MEMORY[0x1E0C80A78](v10);
  v54 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1C07ACF80(&qword_1ED75EA10);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v41 - v16;
  v18 = sub_1C07ACF80(&qword_1ED756690);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1C106EB78();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v41 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = a2;
  v27 = v26;
  sub_1C078A8CC(v25, (uint64_t)v20, &qword_1ED756690);
  v28 = sub_1C07B2D80((uint64_t)v20, 1, v27);
  v45 = v27;
  v51 = v22;
  if (v28 == 1)
  {
    sub_1C07B2D8C((uint64_t)v17, 1, 1, v4);
    sub_1C106EB54();
    sub_1C0784B6C((uint64_t)v20, &qword_1ED756690);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v24, v20, v27);
  }
  v29 = v54;
  sub_1C106E95C();
  type metadata accessor for GraphTriple(0);
  v53[3] = sub_1C106BCBC();
  v53[4] = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v53);
  sub_1C106D840();
  sub_1C07803F8(&qword_1ED75E628, (void (*)(uint64_t))type metadata accessor for GraphTriple);
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v53);
  sub_1C106EB6C();
  if (sub_1C07B2D80((uint64_t)v14, 1, v4) == 1)
  {
    sub_1C0784B6C((uint64_t)v14, &qword_1ED75EA10);
    v30 = v52;
    v31 = v50;
  }
  else
  {
    v33 = v42;
    v32 = v43;
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v42, v14, v4);
    sub_1C106D2C4();
    sub_1C07BB218(&qword_1ED748238, &qword_1ED75E500);
    v34 = v44;
    v31 = v50;
    sub_1C106BD10();
    swift_bridgeObjectRelease();
    v35 = v33;
    v29 = v54;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v35, v4);
    v30 = v52;
    (*(void (**)(char *, uint64_t))(v52 + 8))(v9, v31);
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v9, v34, v31);
  }
  result = sub_1C106EB60();
  v37 = v51;
  if ((v38 & 1) != 0)
    goto LABEL_10;
  if ((result & 0x8000000000000000) == 0)
  {
    sub_1C07BB218(&qword_1EF6413F0, &qword_1ED75E500);
    v39 = v44;
    sub_1C106BF38();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v31);
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v9, v39, v31);
LABEL_10:
    sub_1C07BB218(&qword_1ED75E9D0, &qword_1ED75E500);
    sub_1C07803F8(&qword_1ED756860, (void (*)(uint64_t))type metadata accessor for GraphTriple);
    v40 = sub_1C106BAB8();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v31);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v29, v47);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v24, v45);
    return v40;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0BAD86C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55[5];
  char *v56;

  v49 = a2;
  v50 = a3;
  v48 = a1;
  v3 = sub_1C106D2DC();
  v44 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_1C07ACF80((uint64_t *)&unk_1ED741580);
  v54 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v45 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v43 - v8;
  v10 = sub_1C106E968();
  v46 = *(_QWORD *)(v10 - 8);
  v47 = v10;
  MEMORY[0x1E0C80A78](v10);
  v56 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1C07ACF80(&qword_1ED75EA10);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v43 - v16;
  v18 = sub_1C07ACF80(&qword_1ED756690);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1C106EB78();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v43 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = v25;
  sub_1C078A8CC(v49, (uint64_t)v20, &qword_1ED756690);
  v27 = sub_1C07B2D80((uint64_t)v20, 1, v26);
  v52 = v22;
  v53 = v26;
  if (v27 == 1)
  {
    sub_1C07B2D8C((uint64_t)v17, 1, 1, v3);
    sub_1C106EB54();
    sub_1C0784B6C((uint64_t)v20, &qword_1ED756690);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v24, v20, v26);
  }
  v28 = v56;
  sub_1C106E95C();
  type metadata accessor for LiveGlobalKnowledgeTriple();
  v55[3] = sub_1C106BCBC();
  v55[4] = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v55);
  sub_1C106D840();
  sub_1C07803F8(qword_1ED74BFB0, (void (*)(uint64_t))type metadata accessor for LiveGlobalKnowledgeTriple);
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v55);
  sub_1C106EB6C();
  if (sub_1C07B2D80((uint64_t)v14, 1, v3) == 1)
  {
    sub_1C0784B6C((uint64_t)v14, &qword_1ED75EA10);
    v29 = v54;
    v30 = v51;
  }
  else
  {
    v31 = v3;
    v32 = v44;
    (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v5, v14, v31);
    sub_1C106D2C4();
    sub_1C07BB218(qword_1EF641420, (uint64_t *)&unk_1ED741580);
    v33 = v45;
    v34 = v51;
    sub_1C106BD10();
    swift_bridgeObjectRelease();
    v35 = v5;
    v30 = v34;
    v36 = v31;
    v28 = v56;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v35, v36);
    v29 = v54;
    (*(void (**)(char *, uint64_t))(v54 + 8))(v9, v34);
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v9, v33, v34);
  }
  result = sub_1C106EB60();
  v39 = v52;
  v38 = v53;
  if ((v40 & 1) != 0)
    goto LABEL_10;
  if ((result & 0x8000000000000000) == 0)
  {
    sub_1C07BB218(&qword_1EF641418, (uint64_t *)&unk_1ED741580);
    v41 = v45;
    sub_1C106BF38();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v30);
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v9, v41, v30);
LABEL_10:
    sub_1C07BB218(&qword_1EF63FEA8, (uint64_t *)&unk_1ED741580);
    sub_1C07803F8(&qword_1EF641410, (void (*)(uint64_t))type metadata accessor for LiveGlobalKnowledgeTriple);
    v42 = sub_1C106BAB8();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v30);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v28, v47);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v24, v38);
    return v42;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0BADD90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55[5];
  char *v56;

  v49 = a2;
  v50 = a3;
  v48 = a1;
  v3 = sub_1C106D2DC();
  v44 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_1C07ACF80(&qword_1ED75E4F8);
  v54 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v45 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v43 - v8;
  v10 = sub_1C106E968();
  v46 = *(_QWORD *)(v10 - 8);
  v47 = v10;
  MEMORY[0x1E0C80A78](v10);
  v56 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1C07ACF80(&qword_1ED75EA10);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v43 - v16;
  v18 = sub_1C07ACF80(&qword_1ED756690);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1C106EB78();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v43 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = v25;
  sub_1C078A8CC(v49, (uint64_t)v20, &qword_1ED756690);
  v27 = sub_1C07B2D80((uint64_t)v20, 1, v26);
  v52 = v22;
  v53 = v26;
  if (v27 == 1)
  {
    sub_1C07B2D8C((uint64_t)v17, 1, 1, v3);
    sub_1C106EB54();
    sub_1C0784B6C((uint64_t)v20, &qword_1ED756690);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v24, v20, v26);
  }
  v28 = v56;
  sub_1C106E95C();
  type metadata accessor for EventTriple(0);
  v55[3] = sub_1C106BCBC();
  v55[4] = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v55);
  sub_1C106D840();
  sub_1C07803F8(&qword_1ED75E620, (void (*)(uint64_t))type metadata accessor for EventTriple);
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v55);
  sub_1C106EB6C();
  if (sub_1C07B2D80((uint64_t)v14, 1, v3) == 1)
  {
    sub_1C0784B6C((uint64_t)v14, &qword_1ED75EA10);
    v29 = v54;
    v30 = v51;
  }
  else
  {
    v31 = v3;
    v32 = v44;
    (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v5, v14, v31);
    sub_1C106D2C4();
    sub_1C07BB218(&qword_1EF6413E8, &qword_1ED75E4F8);
    v33 = v45;
    v34 = v51;
    sub_1C106BD10();
    swift_bridgeObjectRelease();
    v35 = v5;
    v30 = v34;
    v36 = v31;
    v28 = v56;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v35, v36);
    v29 = v54;
    (*(void (**)(char *, uint64_t))(v54 + 8))(v9, v34);
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v9, v33, v34);
  }
  result = sub_1C106EB60();
  v39 = v52;
  v38 = v53;
  if ((v40 & 1) != 0)
    goto LABEL_10;
  if ((result & 0x8000000000000000) == 0)
  {
    sub_1C07BB218(&qword_1EF6413E0, &qword_1ED75E4F8);
    v41 = v45;
    sub_1C106BF38();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v30);
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v9, v41, v30);
LABEL_10:
    sub_1C07BB218(&qword_1ED75E4F0, &qword_1ED75E4F8);
    sub_1C07803F8(&qword_1ED756858, (void (*)(uint64_t))type metadata accessor for EventTriple);
    v42 = sub_1C106BAB8();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v30);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v28, v47);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v24, v38);
    return v42;
  }
  __break(1u);
  return result;
}

unint64_t sub_1C0BAE2B8()
{
  unint64_t result;

  result = qword_1EF6412F8;
  if (!qword_1EF6412F8)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for InternalXPC.InternalXPCError, &type metadata for InternalXPC.InternalXPCError);
    atomic_store(result, (unint64_t *)&qword_1EF6412F8);
  }
  return result;
}

uint64_t sub_1C0BAE2F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(qword_1ED755A58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C0BAE340()
{
  unint64_t result;

  result = qword_1EF641320;
  if (!qword_1EF641320)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for InternalXPC.InternalXPCError, &type metadata for InternalXPC.InternalXPCError);
    atomic_store(result, (unint64_t *)&qword_1EF641320);
  }
  return result;
}

uint64_t type metadata accessor for InternalXPC()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for InternalXPC.InternalXPCError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1C0BAE3DC + 4 * byte_1C10A5630[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1C0BAE3FC + 4 * byte_1C10A5635[v4]))();
}

_BYTE *sub_1C0BAE3DC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1C0BAE3FC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C0BAE404(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C0BAE40C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C0BAE414(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C0BAE41C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for InternalXPC.InternalXPCError()
{
  return &type metadata for InternalXPC.InternalXPCError;
}

uint64_t type metadata accessor for InternalXPC.Server()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for InternalXPC.Delegate()
{
  return objc_opt_self();
}

uint64_t sub_1C0BAE47C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v1 = (_QWORD *)sub_1C07804E8();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1C077B274(v1, (uint64_t)sub_1C0BAE728);
  return sub_1C07815D4(v2, v3, v4);
}

uint64_t sub_1C0BAE4C0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v1 = (_QWORD *)sub_1C07804E8();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1C077B274(v1, (uint64_t)sub_1C0BAE728);
  return sub_1C07815D4(v2, v3, v4);
}

uint64_t sub_1C0BAE500()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  return swift_deallocObject();
}

uint64_t sub_1C0BAE534()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1C0BAE728;
  return ((uint64_t (*)(int, void *, void *))((char *)&dword_1EF6413B0 + dword_1EF6413B0))(v2, v3, v4);
}

uint64_t sub_1C0BAE5A4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v1 = (_QWORD *)sub_1C07804E8();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1C077B274(v1, (uint64_t)sub_1C0BAE5E4);
  return sub_1C07815D4(v2, v3, v4);
}

uint64_t sub_1C0BAE5E4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v3 = *v0;
  v1 = *v0;
  sub_1C07878A8(&v3);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1C0BAE628@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t result;

  result = sub_1C0BACE34(a1, a2, a3);
  if (!v4)
    *a4 = result;
  return result;
}

uint64_t sub_1C0BAE650@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t result;

  result = sub_1C0BAD350(a1, a2, a3);
  if (!v4)
    *a4 = result;
  return result;
}

uint64_t sub_1C0BAE678@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t result;

  result = sub_1C0BAD86C(a1, a2, a3);
  if (!v4)
    *a4 = result;
  return result;
}

uint64_t sub_1C0BAE6A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t result;

  result = sub_1C0BADD90(a1, a2, a3);
  if (!v4)
    *a4 = result;
  return result;
}

uint64_t sub_1C0BAE6C8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1C0BAE6A0(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1C0BAE6E0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1C0BAE650(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1C0BAE6F8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1C0BAE628(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1C0BAE710@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1C0BAE678(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1C0BAE73C(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 96) = result;
  *(_QWORD *)(v2 + 104) = a2;
  return result;
}

unint64_t sub_1C0BAE754()
{
  return 0xD000000000000027;
}

uint64_t sub_1C0BAE774(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 192) = result;
  *(_QWORD *)(v2 + 200) = a2;
  return result;
}

void sub_1C0BAE788(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_1C078A8CC(a1, v3, a3);
}

uint64_t sub_1C0BAE790()
{
  return sub_1C106FC94();
}

uint64_t sub_1C0BAE79C(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 144) = result;
  *(_QWORD *)(v2 + 152) = a2;
  return result;
}

uint64_t sub_1C0BAE7B0(int a1, char a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  _QWORD v13[4];

  v6 = sub_1C106AB28();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  sub_1C07768A8();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v13 - v9;
  if (!flock(a1, 8))
    return sub_1C0BAEFA8();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a3, v6);
  v13[2] = 0;
  v13[3] = 0xE000000000000000;
  sub_1C1070774();
  sub_1C0BAF578(a2);
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C077B2A0();
  sub_1C0BAFC20();
  sub_1C1070C0C();
  sub_1C0791358();
  sub_1C07767AC();
  v12 = sub_1C0796F80();
  LODWORD(v13[0]) = MEMORY[0x1C3BA5E94](v12);
  sub_1C1070C0C();
  sub_1C0791358();
  sub_1C07767AC();
  sub_1C07807F8();
  v13[0] = 28;
  result = sub_1C079ACB0();
  __break(1u);
  return result;
}

uint64_t sub_1C0BAE9E0(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  _QWORD v33[2];
  char *v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v5 = sub_1C106F5EC();
  v39 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v38 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C106AB28();
  v36 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  sub_1C07768A8();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v33 - v9;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v33 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v33 - v15;
  if (qword_1ED762B18 != -1)
    swift_once();
  v41 = a1;
  v17 = sub_1C106F544();
  sub_1C079E000(v17, (uint64_t)qword_1ED762AF8);
  v18 = sub_1C106F538();
  v19 = sub_1C1070378();
  v20 = os_log_type_enabled(v18, v19);
  v33[1] = v2;
  v34 = v10;
  v40 = v5;
  if (v20)
  {
    v21 = swift_slowAlloc();
    v35 = a2;
    v22 = (uint8_t *)v21;
    v42 = swift_slowAlloc();
    v33[0] = v16;
    *(_DWORD *)v22 = 136315138;
    sub_1C0BAF578(v35);
    v43 = sub_1C0788DAC(v23, v24, &v42);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0771000, v18, v19, "%s: tryLock called.", v22, 0xCu);
    swift_arrayDestroy();
    sub_1C0776778();
  }

  sub_1C0797FC4((uint64_t)v16, v41);
  sub_1C0BAF6F8();
  sub_1C106AB10();
  sub_1C078CA24((uint64_t)v13);
  v25 = sub_1C106F5F8();
  v26 = v33;
  MEMORY[0x1E0C80A78](v25);
  v33[-2] = 0x20000000002;
  LODWORD(v33[-1]) = 16777600;
  v27 = v37;
  sub_1C106F5E0();
  if (v27)
  {
    sub_1C07A0060();
    goto LABEL_9;
  }
  v28 = v42;
  sub_1C07A0060();
  v29 = flock(v28, 6);
  LOBYTE(v26) = v29 == 0;
  if (!v29)
  {
    type metadata accessor for InterprocessLockDescriptors();
    sub_1C0BAEEB4();
    goto LABEL_9;
  }
  v30 = sub_1C0BAEFA8();
  if (MEMORY[0x1C3BA5E94](v30) == 35)
  {
LABEL_9:
    sub_1C078CA24((uint64_t)v16);
    return v26 & 1;
  }
  sub_1C0797FC4((uint64_t)v34, (uint64_t)v16);
  sub_1C07967AC();
  sub_1C0791E04();
  sub_1C07767AC();
  sub_1C0787FEC();
  sub_1C0BAFC20();
  sub_1C1070C0C();
  sub_1C07A08D0();
  sub_1C07767AC();
  v32 = sub_1C07974B8();
  LODWORD(v43) = MEMORY[0x1C3BA5E94](v32);
  sub_1C1070C0C();
  sub_1C07A08D0();
  sub_1C07767AC();
  sub_1C07807F8();
  v33[0] = 67;
  result = sub_1C1070954();
  __break(1u);
  return result;
}

uint64_t sub_1C0BAEEB4()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  if (qword_1ED75C838 != -1)
    swift_once();
  result = sub_1C0CBD8F8();
  if (!v0)
  {
    swift_retain();
    v2 = swift_release();
    MEMORY[0x1E0C80A78](v2);
    sub_1C106E4B8();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C0BAEFA8()
{
  uint64_t result;
  int v1;
  _DWORD *v2;

  result = sub_1C106F5D4();
  if ((result & 0x100000000) != 0)
  {
    v1 = result;
    sub_1C0BAFC60();
    swift_willThrowTypedImpl();
    result = swift_allocError();
    *v2 = v1;
  }
  return result;
}

uint64_t sub_1C0BAF01C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[6];
  uint64_t v26;
  uint64_t v27[3];

  v2 = sub_1C106AB28();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v25[4] = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v25[3] = (char *)v25 - v6;
  MEMORY[0x1E0C80A78](v7);
  v25[2] = (char *)v25 - v8;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v25 - v10;
  if (qword_1ED762B18 != -1)
    swift_once();
  v12 = sub_1C106F544();
  sub_1C079E000(v12, (uint64_t)qword_1ED762AF8);
  v13 = sub_1C106F538();
  v14 = sub_1C1070378();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v25[5] = v2;
    v16 = (uint8_t *)v15;
    v17 = swift_slowAlloc();
    v25[1] = v11;
    v27[0] = v17;
    *(_DWORD *)v16 = 136315138;
    sub_1C07951B0();
    v26 = sub_1C0788DAC(v18, v19, v27);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0771000, v13, v14, "%s: unlock called.", v16, 0xCu);
    swift_arrayDestroy();
    sub_1C0776778();
  }

  v20 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v20(v11, a1, v2);
  type metadata accessor for InterprocessLockDescriptors();
  v21 = sub_1C0BAF45C();
  if ((v21 & 0x100000000) != 0)
  {
    sub_1C0799E08();
    sub_1C078B170();
    sub_1C1070774();
    sub_1C07951B0();
    sub_1C106FC94();
    swift_bridgeObjectRelease();
    sub_1C077B2A0();
    sub_1C0BAFC20();
    sub_1C07A3C54();
    sub_1C079108C();
    sub_1C07767AC();
    sub_1C0796F80();
    sub_1C07807F8();
    v23 = 74;
  }
  else
  {
    if (!flock(v21, 8))
    {
      sub_1C0BAEFA8();
      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v11, v2);
    }
    sub_1C0799E08();
    sub_1C078B170();
    sub_1C1070774();
    sub_1C07951B0();
    sub_1C07A5510();
    v27[0] = 0;
    v27[1] = (uint64_t)v20;
    sub_1C077B2A0();
    sub_1C0BAFC20();
    sub_1C07A3C54();
    sub_1C079108C();
    sub_1C07767AC();
    v24 = sub_1C0796F80();
    LODWORD(v26) = MEMORY[0x1C3BA5E94](v24);
    sub_1C1070C0C();
    sub_1C079108C();
    sub_1C07767AC();
    sub_1C07807F8();
    v23 = 78;
  }
  v25[0] = v23;
  result = sub_1C079ACB0();
  __break(1u);
  return result;
}

uint64_t sub_1C0BAF45C()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  if (qword_1ED75C838 != -1)
    swift_once();
  result = sub_1C0CBD8F8();
  if (!v0)
  {
    swift_retain();
    v2 = swift_release();
    MEMORY[0x1E0C80A78](v2);
    sub_1C106E4B8();
    swift_release();
    return 0x100000000;
  }
  return result;
}

void sub_1C0BAF578(char a1)
{
  sub_1C1070774();
  swift_bridgeObjectRelease();
  sub_1C0793D28();
  __asm { BR              X10 }
}

uint64_t sub_1C0BAF5F8()
{
  uint64_t v1;

  sub_1C079BDAC();
  sub_1C106FC94();
  sub_1C07767AC();
  sub_1C106FC94();
  return v1;
}

uint64_t sub_1C0BAF668()
{
  uint64_t v0;
  unsigned __int8 v1;

  v0 = sub_1C0793D28();
  return ((uint64_t (*)(uint64_t))((char *)sub_1C0BAF6A4 + 4 * byte_1C10A5774[v1]))(v0);
}

uint64_t sub_1C0BAF6A4()
{
  return sub_1C079BDAC();
}

uint64_t sub_1C0BAF6B8()
{
  return sub_1C079D60C();
}

uint64_t sub_1C0BAF6D8()
{
  return sub_1C079B7D8();
}

void sub_1C0BAF6F8()
{
  sub_1C0793D28();
  __asm { BR              X10 }
}

uint64_t sub_1C0BAF750()
{
  sub_1C079BDAC();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  sub_1C106AAC8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0BAF7E0()
{
  unint64_t v0;

  v0 = sub_1C1070A2C();
  sub_1C07767AC();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

void sub_1C0BAF824(char *a1)
{
  sub_1C08C6A28(*a1);
}

void sub_1C0BAF830()
{
  sub_1C0A53F9C();
}

void sub_1C0BAF838(uint64_t a1)
{
  char *v1;

  sub_1C08C9FBC(a1, *v1);
}

void sub_1C0BAF840()
{
  sub_1C0A54948();
}

uint64_t sub_1C0BAF848@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C0BAF7E0();
  *a1 = result;
  return result;
}

uint64_t sub_1C0BAF874@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1C0BAF668();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1C0BAF89C()
{
  char *v0;

  sub_1C0BAF578(*v0);
}

uint64_t sub_1C0BAF8A4()
{
  uint64_t result;

  sub_1C07ACF80(&qword_1ED75C2D8);
  swift_allocObject();
  result = sub_1C0ECB374();
  qword_1ED75C830 = result;
  return result;
}

uint64_t sub_1C0BAF8E4(uint64_t a1)
{
  uint64_t v1;

  type metadata accessor for InterprocessLockDescriptors.GuardedData();
  *(_QWORD *)(swift_allocObject() + 16) = MEMORY[0x1E0DEE9E0];
  sub_1C07ACF80((uint64_t *)&dword_1ED759F90);
  swift_allocObject();
  *(_QWORD *)(v1 + 16) = sub_1C106E4C4();
  sub_1C078E578(a1, v1+ OBJC_IVAR____TtC24IntelligencePlatformCoreP33_68ED29ADC1C8F1510ECF194B6AB7052227InterprocessLockDescriptors_config);
  return v1;
}

uint64_t sub_1C0BAF980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  sub_1C08A023C(a3, a2);
  return swift_endAccess();
}

uint64_t sub_1C0BAF9EC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  int v10;
  uint64_t result;

  v5 = *a1;
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 16);
  if (*(_QWORD *)(v6 + 16) && (v7 = sub_1C07DD348(a3), (v8 & 1) != 0))
  {
    v9 = 0;
    v10 = *(_DWORD *)(*(_QWORD *)(v6 + 56) + 4 * v7);
  }
  else
  {
    v10 = 0;
    v9 = 1;
  }
  result = swift_endAccess();
  *(_DWORD *)a2 = v10;
  *(_BYTE *)(a2 + 4) = v9;
  return result;
}

uint64_t sub_1C0BAFA7C()
{
  uint64_t v0;

  swift_release();
  sub_1C078D09C(v0+ OBJC_IVAR____TtC24IntelligencePlatformCoreP33_68ED29ADC1C8F1510ECF194B6AB7052227InterprocessLockDescriptors_config);
  return swift_deallocClassInstance();
}

uint64_t sub_1C0BAFAB4()
{
  return type metadata accessor for InterprocessLockDescriptors();
}

uint64_t type metadata accessor for InterprocessLockDescriptors()
{
  uint64_t result;

  result = qword_1ED75C848;
  if (!qword_1ED75C848)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for InterprocessLockDescriptors.GuardedData()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for InterprocessLock(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1C0BAFB60 + 4 * byte_1C10A5781[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1C0BAFB94 + 4 * byte_1C10A577C[v4]))();
}

uint64_t sub_1C0BAFB94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0BAFB9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0BAFBA4);
  return result;
}

uint64_t sub_1C0BAFBB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0BAFBB8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1C0BAFBBC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0BAFBC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InterprocessLock()
{
  return &type metadata for InterprocessLock;
}

unint64_t sub_1C0BAFBE4()
{
  unint64_t result;

  result = qword_1ED75BA38;
  if (!qword_1ED75BA38)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A5884, &type metadata for InterprocessLock);
    atomic_store(result, (unint64_t *)&qword_1ED75BA38);
  }
  return result;
}

unint64_t sub_1C0BAFC20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED762678;
  if (!qword_1ED762678)
  {
    v1 = sub_1C106AB28();
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0CB0048], v1);
    atomic_store(result, (unint64_t *)&qword_1ED762678);
  }
  return result;
}

unint64_t sub_1C0BAFC60()
{
  unint64_t result;

  result = qword_1EF641430;
  if (!qword_1EF641430)
  {
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0DF0070], MEMORY[0x1E0DF0068]);
    atomic_store(result, (unint64_t *)&qword_1EF641430);
  }
  return result;
}

uint64_t sub_1C0BAFC9C(uint64_t *a1)
{
  uint64_t v1;

  return sub_1C0BAF9EC(a1, *(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

uint64_t sub_1C0BAFCB8@<X0>(_DWORD *a1@<X8>)
{
  return sub_1C0E78B1C(a1);
}

uint64_t sub_1C0BAFCE8(uint64_t a1)
{
  uint64_t v1;

  return sub_1C0BAF980(a1, *(unsigned __int8 *)(v1 + 16), *(unsigned int *)(v1 + 20));
}

uint64_t sub_1C0BAFD04(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v2;
  type metadata accessor for Fuser();
  *(_QWORD *)(v3 + 32) = sub_1C0779D74();
  type metadata accessor for Linker();
  *(_QWORD *)(v3 + 40) = sub_1C0779D74();
  *(_QWORD *)(v3 + 48) = type metadata accessor for Source();
  *(_QWORD *)(v3 + 56) = sub_1C0786414();
  *(_QWORD *)(v3 + 64) = sub_1C0775870();
  type metadata accessor for PhaseStores();
  *(_QWORD *)(v3 + 72) = sub_1C0786414();
  *(_QWORD *)(v3 + 80) = sub_1C0775870();
  *(_QWORD *)(v3 + 88) = type metadata accessor for IPEntityTaggingPersonInferenceSourceIngestor();
  *(_QWORD *)(v3 + 96) = sub_1C0786414();
  *(_QWORD *)(v3 + 104) = sub_1C0775870();
  *(_QWORD *)(v3 + 112) = sub_1C0775870();
  *(_BYTE *)(v3 + 137) = *a2;
  return swift_task_switch();
}

uint64_t sub_1C0BAFDC0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;

  sub_1C0893744(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 80), (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  if (qword_1ED7622C8 != -1)
    swift_once();
  v1 = *(_BYTE *)(v0 + 137);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 64);
  v11 = *(_QWORD *)(v0 + 56);
  v12 = *(_QWORD *)(v0 + 72);
  v7 = *(_QWORD *)(v0 + 16);
  v8 = sub_1C079E000(*(_QWORD *)(v0 + 48), (uint64_t)&unk_1ED7622B0);
  *(_QWORD *)(v0 + 120) = v8;
  sub_1C0799E18(v8, v3 + *(int *)(v5 + 20));
  sub_1C0893788(v4, v3);
  *(_BYTE *)(v3 + *(int *)(v5 + 24)) = v1;
  sub_1C0893744(v7, v4, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C0799E18(v8, v6);
  sub_1C0893744(v3, v2, (uint64_t (*)(_QWORD))type metadata accessor for IPEntityTaggingPersonInferenceSourceIngestor);
  sub_1C0799E18(v8, v11);
  sub_1C0893744(v7, v12, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  *(_BYTE *)(v0 + 136) = v1;
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v9;
  *v9 = v0;
  v9[1] = sub_1C0BAFF2C;
  return Linker.init(source:stores:pipelineType:)(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 72), (_BYTE *)(v0 + 136));
}

uint64_t sub_1C0BAFF2C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1C0BAFF80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 72);
  v9 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 32);
  v10 = *(_QWORD *)(v0 + 40);
  v11 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 16);
  v12 = *(_QWORD *)(v0 + 24);
  sub_1C0893744(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 56), (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0799E18(v6, v4);
  Fuser.init(source:stores:pipelineType:)();
  sub_1C07B1FDC(v6, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C07B1FDC(v1, (uint64_t (*)(_QWORD))type metadata accessor for IPEntityTaggingPersonInferenceSourceIngestor);
  sub_1C0893744(v3, v2, (uint64_t (*)(_QWORD))type metadata accessor for IPEntityTaggingPersonInferenceSourceIngestor);
  sub_1C0A5B954(v11, v9, v2, v10, v5, 1, v12);
  v13 = v7;
  sub_1C07B1FDC(v3, (uint64_t (*)(_QWORD))type metadata accessor for IPEntityTaggingPersonInferenceSourceIngestor);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v13);
}

void sub_1C0BB00E4()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1C0BB0110()
{
  return type metadata accessor for IPEntityTaggingPersonInferencePhase();
}

uint64_t type metadata accessor for IPEntityTaggingPersonInferencePhase()
{
  uint64_t result;

  result = qword_1EF641460;
  if (!qword_1EF641460)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C0BB0150()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0BB015C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v11;

  v6 = sub_1C077D0AC();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = v4;
    return sub_1C07B2D80(v8, v3, v7);
  }
  v9 = sub_1C077674C();
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v9;
    v8 = v4 + *(int *)(a3 + 20);
    return sub_1C07B2D80(v8, v3, v7);
  }
  v11 = *(unsigned __int8 *)(v4 + *(int *)(a3 + 24));
  if (v11 >= 4)
    return v11 - 3;
  else
    return 0;
}

uint64_t sub_1C0BB01E8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0BB01F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v8 = sub_1C077D0AC();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = v5;
    return sub_1C07B2D8C(v10, v4, v4, v9);
  }
  result = sub_1C077674C();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
  {
    v9 = result;
    v10 = v5 + *(int *)(a4 + 20);
    return sub_1C07B2D8C(v10, v4, v4, v9);
  }
  *(_BYTE *)(v5 + *(int *)(a4 + 24)) = v4 + 3;
  return result;
}

uint64_t type metadata accessor for IPEntityTaggingPersonInferenceSourceIngestor()
{
  uint64_t result;

  result = qword_1EF6415C8;
  if (!qword_1EF6415C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C0BB02B8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for PhaseStores();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Source();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C0BB0344()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id *v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78[16];
  uint64_t v79;
  uint64_t *v80;
  uint64_t *v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;

  sub_1C07ACF80(&qword_1ED75EA10);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v1);
  sub_1C077AE40();
  v67 = v2;
  sub_1C106D990();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  sub_1C077AE40();
  v64 = v4;
  v5 = sub_1C106D9A8();
  v71 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v62 = (uint64_t)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v60 = (uint64_t)&v54 - v8;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v54 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v54 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v54 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v54 - v19;
  v66 = sub_1C106D9B4();
  v65 = *(_QWORD *)(v66 - 8);
  MEMORY[0x1E0C80A78](v66);
  sub_1C077AE40();
  v59 = v21;
  v22 = sub_1C0778598();
  v61 = v22;
  *(_QWORD *)(v22 + 16) = 0;
  v69 = (uint64_t *)(v22 + 16);
  v23 = sub_1C0778598();
  v58 = v23;
  *(_QWORD *)(v23 + 16) = 0;
  v68 = (_QWORD *)(v23 + 16);
  v86 = MEMORY[0x1E0DEE9D8];
  v85 = MEMORY[0x1E0DEE9D8];
  v63 = *(int *)(type metadata accessor for PhaseStores() + 24);
  v56 = v0;
  v57 = *(_QWORD *)(v0 + v63);
  sub_1C07ACF80(&qword_1ED7603F0);
  v24 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Source() - 8) + 80);
  v25 = (v24 + 32) & ~v24;
  v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1C1079220;
  v27 = type metadata accessor for IPEntityTaggingPersonInferenceSourceIngestor();
  sub_1C083F944(v0 + *(int *)(v27 + 20), v26 + v25, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  swift_retain();
  SourceSet.init(arrayLiteral:)(&v84, v26);
  v54 = v84;
  v28 = *(void **)(v71 + 104);
  v29 = (uint64_t)v20;
  v55 = v20;
  sub_1C07A6ECC((uint64_t)v20);
  v30 = (uint64_t)v17;
  sub_1C07A6ECC((uint64_t)v17);
  v31 = (uint64_t)v14;
  sub_1C07A6ECC((uint64_t)v14);
  v32 = (uint64_t)v11;
  sub_1C07A6ECC((uint64_t)v11);
  v33 = v60;
  sub_1C07A6ECC(v60);
  v34 = v62;
  sub_1C07A6ECC(v62);
  v82 = v54;
  v83 = 0;
  sub_1C0CDBB20(v29, 0, v30, 0, v31, 0, v32, 0, v64, v33, 0, v34);
  v35 = v59;
  sub_1C106D9C0();
  sub_1C0799E20(v34);
  sub_1C0799E20(v33);
  v36 = v56;
  sub_1C0799E20(v32);
  v37 = v58;
  sub_1C0799E20(v31);
  sub_1C0799E20(v30);
  v38 = v61;
  sub_1C0799E20((uint64_t)v55);
  v39 = sub_1C106D2DC();
  v40 = v67;
  sub_1C079ACC4(v39, v41, v42, v39);
  v79 = v36;
  v80 = &v86;
  v81 = &v85;
  sub_1C0AA4BDC(v35, v40, (uint64_t)sub_1C0BB1B08, (uint64_t)v78);
  sub_1C0BB1B14(v40);
  (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v35, v66);
  swift_release();
  v43 = v86;
  v44 = v85;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C08BDBD4(v43, v44);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v45 = sub_1C0778598();
  *(_QWORD *)(v45 + 16) = 0;
  v46 = (id *)(v45 + 16);
  v47 = objc_msgSend((id)BiomeLibrary(), sel_IntelligencePlatform);
  sub_1C07A2858();
  v48 = objc_msgSend(v28, sel_EntityTagging);
  swift_unknownObjectRelease();
  v49 = objc_msgSend(v48, sel_PersonInference);
  sub_1C07A2858();
  v50 = sub_1C0778598();
  *(_BYTE *)(v50 + 16) = 0;
  v72 = v28;
  v73 = v36;
  v74 = v45;
  v75 = v50;
  v76 = v38;
  v77 = v37;
  v51 = v70;
  GraphStore.tripleInsertingTransaction(transactionBody:)();
  if (!v51)
  {
    swift_beginAccess();
    if (*v46)
    {
      v52 = *v46;
      swift_willThrow();
    }
    else
    {
      sub_1C106AC6C();
      sub_1C088D3F0();
    }
  }
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C0BB0954(v36, v68, v69);
  swift_release();
  return swift_release();
}

uint64_t sub_1C0BB0954(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t inited;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v6 = type metadata accessor for Pipeline.StatusStore();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C083F944(a1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v8[*(int *)(v6 + 20)] = 1;
  Pipeline.StatusStore.currentSessionId()();
  sub_1C0898860((uint64_t)v8, (void (*)(_QWORD))type metadata accessor for Pipeline.StatusStore);
  sub_1C106F244();
  sub_1C07ACF80((uint64_t *)&unk_1ED7614C0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C10795A0;
  *(_QWORD *)(inited + 32) = 0x496E6F6973736573;
  *(_QWORD *)(inited + 40) = 0xE900000000000064;
  v10 = sub_1C106FAF0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 48) = v10;
  *(_QWORD *)(inited + 56) = 0x614E656372756F73;
  *(_QWORD *)(inited + 64) = 0xEA0000000000656DLL;
  sub_1C07D4B70(0, &qword_1ED760190);
  *(_QWORD *)(inited + 72) = sub_1C1070528();
  *(_QWORD *)(inited + 80) = 0x756F436E656B6174;
  *(_QWORD *)(inited + 88) = 0xEA0000000000746ELL;
  swift_beginAccess();
  *(_QWORD *)(inited + 96) = sub_1C1070294();
  strcpy((char *)(inited + 104), "droppedCount");
  *(_BYTE *)(inited + 117) = 0;
  *(_WORD *)(inited + 118) = -5120;
  swift_beginAccess();
  v11 = *a3;
  swift_beginAccess();
  result = v11 - *a2;
  if (__OFSUB__(v11, *a2))
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(inited + 120) = sub_1C1070294();
    sub_1C07D4B70(0, (unint64_t *)&qword_1ED761490);
    sub_1C106F97C();
    sub_1C106F22C();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1C0BB0BE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;

  v7 = sub_1C07ACF80(&qword_1ED7493A0);
  MEMORY[0x1E0C80A78](v7);
  v0 = type metadata accessor for GraphTriple(0);
  MEMORY[0x1E0C80A78](v0);
  if (qword_1ED756B28 != -1)
    swift_once();
  v1 = type metadata accessor for SourceIdPrefix();
  sub_1C079E000(v1, (uint64_t)&unk_1ED78D4E0);
  String.base64EncodedSHA(withPrefix:)();
  v3 = v2;
  v5 = v4;
  type metadata accessor for IPEntityTaggingPersonInferenceSourceIngestor();
  sub_1C07ACF80(&qword_1ED762CB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1079220;
  *(_QWORD *)(inited + 32) = v3;
  *(_QWORD *)(inited + 40) = v5;
  sub_1C0D48670();
}

uint64_t sub_1C0BB0E50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _BYTE *a9@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  void *v26;
  uint64_t v27;
  id v28;
  const void *v29;
  id v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t aBlock;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, void *);
  void *v46;
  uint64_t (*v47)(void *);
  uint64_t v48;

  v42 = a9;
  v38 = a7;
  v39 = a8;
  v33 = a6;
  v35 = a5;
  v36 = a1;
  v37 = a2;
  v12 = type metadata accessor for IPEntityTaggingPersonInferenceSourceIngestor();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = a6 + 16;
  v40 = objc_msgSend(a3, sel_publisher, MEMORY[0x1E0C80A78](v12));
  v47 = (uint64_t (*)(void *))nullsub_1;
  v48 = 0;
  aBlock = MEMORY[0x1E0C809B0];
  v44 = 1107296256;
  v45 = (uint64_t (*)(uint64_t, void *))sub_1C07BF90C;
  v46 = &unk_1E7A21C10;
  v34 = _Block_copy(&aBlock);
  sub_1C083F944(a4, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for IPEntityTaggingPersonInferenceSourceIngestor);
  v16 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v17 = (v14 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF8;
  v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  v21 = swift_allocObject();
  sub_1C0BB1D00((uint64_t)v15, v21 + v16);
  v22 = v36;
  *(_QWORD *)(v21 + v17) = v35;
  v23 = v33;
  *(_QWORD *)(v21 + v18) = v33;
  v24 = v37;
  *(_QWORD *)(v21 + v19) = v38;
  v25 = (_QWORD *)(v21 + v20);
  *v25 = v22;
  v25[1] = v24;
  *(_QWORD *)(v21 + ((v20 + 23) & 0xFFFFFFFFFFFFFFF8)) = v39;
  v47 = sub_1C0BB1D44;
  v48 = v21;
  aBlock = MEMORY[0x1E0C809B0];
  v44 = 1107296256;
  v45 = sub_1C0808508;
  v46 = &unk_1E7A21C60;
  v26 = _Block_copy(&aBlock);
  swift_retain();
  v27 = v23;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  v28 = v40;
  v29 = v34;
  v30 = objc_msgSend(v40, sel_sinkWithCompletion_shouldContinue_, v34, v26);
  _Block_release(v26);
  _Block_release(v29);

  result = swift_beginAccess();
  *v42 = *(_BYTE *)(v27 + 16);
  return result;
}

uint64_t sub_1C0BB10C8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t), uint64_t a7, uint64_t a8)
{
  uint64_t *v14;
  _BYTE *v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  char v24[24];

  v14 = (uint64_t *)(a3 + 16);
  sub_1C0CCBE1C();
  v23 = a8;
  v15 = (_BYTE *)(a4 + 16);
  swift_beginAccess();
  v16 = *v14;
  if (*v14)
  {
    swift_beginAccess();
    *v15 = 1;
    return v16 == 0;
  }
  v17 = objc_msgSend(a1, sel_eventBody);
  if (!v17)
    return v16 == 0;
  v18 = v17;
  result = swift_beginAccess();
  if (__OFADD__(*(_QWORD *)(a5 + 16), 1))
  {
    __break(1u);
  }
  else
  {
    ++*(_QWORD *)(a5 + 16);
    v24[0] = *(_BYTE *)(a2 + *(int *)(type metadata accessor for IPEntityTaggingPersonInferenceSourceIngestor() + 24));
    sub_1C0BB12E8(v24);
    sub_1C0A56D74();
    v21 = v20;
    swift_bridgeObjectRelease();
    a6(v21);
    swift_bridgeObjectRelease();
    v22 = (_QWORD *)(v23 + 16);

    result = swift_beginAccess();
    if (!__OFADD__(*v22, 1))
    {
      ++*v22;
      return v16 == 0;
    }
  }
  __break(1u);
  return result;
}

_QWORD *sub_1C0BB12E8(char *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  void *v55;
  _QWORD v56[2];
  uint64_t v57;

  sub_1C07ACF80(&qword_1EF641648);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  sub_1C0778564();
  v6 = (_QWORD *)(v5 - v4);
  v7 = (int *)type metadata accessor for IPEntityTaggingPersonInferenceStructs.AgentAffiliationRelationshipType(0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v8);
  sub_1C0778564();
  v11 = v10 - v9;
  v12 = type metadata accessor for IPEntityTaggingPersonInferenceStructs.Person(0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v13);
  sub_1C0778564();
  v16 = v15 - v14;
  v17 = *a1;
  if (qword_1ED756B28 != -1)
    swift_once();
  v18 = type metadata accessor for SourceIdPrefix();
  sub_1C079E000(v18, (uint64_t)&unk_1ED78D4E0);
  String.base64EncodedSHA(withPrefix:)();
  v20 = v19;
  v22 = v21;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0FD85D0();
  if (v57)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v52 = v20;
    v53 = v17;
    v54 = v16;
    v55 = v1;
    v51 = (uint64_t)v6;
    v23 = (_OWORD *)(v16 + *(int *)(v12 + 36));
    swift_bridgeObjectRelease();
    *v23 = xmmword_1C10812C0;
    v24 = sub_1C106E41C();
    sub_1C079ACC4(v24, v25, v26, v24);
    sub_1C106D09C();
    v27 = v11 + v7[6];
    if (qword_1ED7622C8 != -1)
      swift_once();
    v28 = type metadata accessor for Source();
    v29 = sub_1C079E000(v28, (uint64_t)&unk_1ED7622B0);
    sub_1C083F944(v29, v27, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    sub_1C106DFF0();
    v30 = (uint64_t *)(v11 + v7[8]);
    *v30 = 0;
    v30[1] = 0;
    sub_1C106E038();
    v31 = (uint64_t *)(v11 + v7[10]);
    *v31 = 0;
    v31[1] = 0;
    sub_1C106DCCC();
    v32 = (uint64_t *)(v11 + v7[12]);
    *v32 = 0;
    v32[1] = 0;
    sub_1C106E1B8();
    v6 = (_QWORD *)(v11 + v7[14]);
    *v6 = 0;
    v6[1] = 0;
    v33 = sub_1C106E1D0();
    v34 = (uint64_t *)(v11 + v7[16]);
    *v34 = 0;
    v34[1] = 0;
    if (sub_1C0791364(v33, sel_hasEntityIdentifier))
    {
      sub_1C07ACF80(&qword_1ED744990);
      v35 = sub_1C0778598();
      *(_OWORD *)(v35 + 16) = xmmword_1C1079220;
      v36 = objc_msgSend(v55, sel_entityIdentifier);
      v37 = MEMORY[0x1E0DEE1F0];
      *(_QWORD *)(v35 + 56) = MEMORY[0x1E0DEE190];
      *(_QWORD *)(v35 + 64) = v37;
      *(_QWORD *)(v35 + 32) = v36;
      *v30 = sub_1C106FB38();
      v30[1] = v38;
      v39 = sub_1C0BB1DC8(v55);
      *v6 = v39;
      v6[1] = v40;
      v41 = sub_1C0791364(v39, sel_entityTagID);
      sub_1C0BB185C(v41);
      v42 = sub_1C07974CC();
      *v31 = v42;
      v31[1] = v43;
      v44 = sub_1C0791364(v42, sel_entityTagID);
      v56[0] = sub_1C0BB185C(v44);
      v56[1] = v45;
      *v34 = sub_1C07974CC();
      v34[1] = v46;
      if (objc_msgSend(v55, sel_hasScore))
      {
        objc_msgSend(v55, sel_score);
        *v32 = sub_1C1070180();
        v32[1] = v47;
      }
      v6 = (_QWORD *)v51;
      sub_1C083F944(v11, v51, type metadata accessor for IPEntityTaggingPersonInferenceStructs.AgentAffiliationRelationshipType);
      sub_1C07B2D8C(v51, 0, 1, (uint64_t)v7);
      sub_1C0FD8F28(v51);
    }
    LOBYTE(v56[0]) = v53;
    v48 = v57;
    v49 = sub_1C0FD9068(v52, v22, (unint64_t)v56);
    if (!v48)
      v6 = (_QWORD *)v49;
    swift_bridgeObjectRelease();
    sub_1C0898860(v11, (void (*)(_QWORD))type metadata accessor for IPEntityTaggingPersonInferenceStructs.AgentAffiliationRelationshipType);
    sub_1C0898860(v54, (void (*)(_QWORD))type metadata accessor for IPEntityTaggingPersonInferenceStructs.Person);
  }
  return v6;
}

uint64_t sub_1C0BB1728()
{
  uint64_t v0;

  sub_1C0BB0344();
  return sub_1C0882DB4(*(uint64_t (**)(void))(v0 + 8));
}

void sub_1C0BB1778(uint64_t a1)
{
  uint64_t v2;

  sub_1C0BB1814(qword_1EF641608, (uint64_t)&unk_1C10A5958);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0BB17AC(uint64_t a1)
{
  uint64_t v2;

  sub_1C0BB1814((unint64_t *)&unk_1EF641638, (uint64_t)&unk_1C10A5980);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0BB17E0(uint64_t a1)
{
  uint64_t v2;

  sub_1C0BB1814(&qword_1EF633080, (uint64_t)&unk_1C10A599C);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0BB1814(unint64_t *a1, uint64_t a2)
{
  uint64_t v4;

  if (!*a1)
  {
    v4 = type metadata accessor for IPEntityTaggingPersonInferenceSourceIngestor();
    atomic_store(MEMORY[0x1C3BA8174](a2, v4), a1);
  }
  sub_1C0778534();
}

uint64_t sub_1C0BB1850()
{
  return sub_1C078F06C();
}

uint64_t sub_1C0BB185C(int a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = 0x6E776F6E6B6E55;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      return 0x7465736E55;
    case 2:
      return 0x666C6573794DLL;
    case 3:
      return 0x796C696D6146;
    case 4:
      return 0x646C696843;
    case 5:
      v5 = 0x746867756144;
      goto LABEL_26;
    case 6:
      return 7237459;
    case 7:
      return 0x746E65726150;
    case 8:
      return 0x726568746F4DLL;
    case 9:
      v4 = 1752457542;
      goto LABEL_12;
    case 10:
      return 0x676E696C626953;
    case 11:
      v3 = 0x6568746F7242;
      goto LABEL_20;
    case 12:
      v4 = 1953720659;
LABEL_12:
      result = v4 & 0xFFFF0000FFFFFFFFLL | 0x726500000000;
      break;
    case 13:
      v3 = 0x656E74726150;
LABEL_20:
      result = v3 & 0xFFFFFFFFFFFFLL | 0x72000000000000;
      break;
    case 14:
      result = 1701210455;
      break;
    case 15:
      result = 0x646E6162737548;
      break;
    case 16:
      result = 0x656972666C726947;
      break;
    case 17:
      result = 0x6E65697266796F42;
      break;
    case 18:
      result = 0x726150646E617247;
      break;
    case 19:
      result = 0x746F6D646E617247;
      break;
    case 20:
      result = 0x746166646E617247;
      break;
    case 21:
      result = 0xD000000000000016;
      break;
    case 22:
      v5 = 0x6B726F776F43;
LABEL_26:
      result = v5 & 0xFFFFFFFFFFFFLL | 0x7265000000000000;
      break;
    case 23:
      result = 0x646E65697246;
      break;
    case 24:
      result = 0xD000000000000010;
      break;
    default:
      result = sub_1C1070954();
      __break(1u);
      break;
  }
  return result;
}

void sub_1C0BB1B08()
{
  sub_1C0BB0BE4();
}

uint64_t sub_1C0BB1B14(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C07ACF80(&qword_1ED75EA10);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0BB1B54()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1C0BB1B78()
{
  return sub_1C078F06C();
}

uint64_t sub_1C0BB1B84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v3;

  return sub_1C0BB0E50(a1, a2, *(void **)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48), *(_QWORD *)(v3 + 56), a3);
}

uint64_t sub_1C0BB1BA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);

  v1 = type metadata accessor for IPEntityTaggingPersonInferenceSourceIngestor();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  sub_1C106AB28();
  sub_1C0792DA8();
  v4(v3);
  type metadata accessor for PhaseStores();
  sub_1C07961E0();
  sub_1C07961E0();
  sub_1C07961E0();
  sub_1C07961E0();
  sub_1C07961E0();
  sub_1C07961E0();
  sub_1C07961E0();
  v5 = v3 + *(int *)(v1 + 20);
  swift_bridgeObjectRelease();
  v6 = v5 + *(int *)(sub_1C077674C() + 24);
  sub_1C106D1F8();
  sub_1C0792DA8();
  v7(v6);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0BB1D00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for IPEntityTaggingPersonInferenceSourceIngestor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0BB1D44(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for IPEntityTaggingPersonInferenceSourceIngestor() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_1C0BB10C8(a1, v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + v6), *(_QWORD *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void (**)(uint64_t))(v1 + ((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v1+ ((((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1C0BB1DC8(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_feedbackEventID);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1C106FB14();

  return v3;
}

uint64_t sub_1C0BB1E30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = a2;
  sub_1C0BB6778(a1, (uint64_t)sub_1C0BB6744, 0, isUniquelyReferenced_nonNull_native, &v8);
  v6 = v8;
  swift_bridgeObjectRelease();
  if (v2)
    swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1C0BB1EAC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73746E696F70 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1C1070CB4();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1C0BB1F78(char a1)
{
  if ((a1 & 1) != 0)
    return 0x73746E696F70;
  else
    return 25705;
}

void sub_1C0BB1FA0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = sub_1C07ACF80(&qword_1EF6418E0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1C0778544();
  sub_1C07A9480(a1, a1[3]);
  sub_1C0BB721C();
  sub_1C1070EB8();
  sub_1C1070B7C();
  if (!v1)
  {
    sub_1C07ACF80(&qword_1EF6418F0);
    sub_1C0BB7258(&qword_1EF6418F8, &qword_1EF641900, (uint64_t)&unk_1C10A5B00, MEMORY[0x1E0DEAF10]);
    sub_1C077D19C();
  }
  sub_1C078C76C(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_1C07757D0();
}

uint64_t sub_1C0BB20D8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  sub_1C07ACF80(&qword_1EF641908);
  sub_1C0778688();
  MEMORY[0x1E0C80A78](v3);
  sub_1C07795DC();
  v4 = a1[4];
  sub_1C07A9480(a1, a1[3]);
  sub_1C0BB721C();
  sub_1C1070E94();
  if (v1)
  {
    sub_1C0775880();
  }
  else
  {
    v4 = sub_1C1070AA4();
    sub_1C07ACF80(&qword_1EF6418F0);
    sub_1C0BB7258(&qword_1EF641910, &qword_1EF641918, (uint64_t)&unk_1C10A5B28, MEMORY[0x1E0DEAF40]);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C1070AE0();
    sub_1C0790798();
    sub_1C077AE90();
    sub_1C0775880();
    sub_1C077960C();
    sub_1C077589C();
  }
  return v4;
}

uint64_t sub_1C0BB2264(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 7890025 && a2 == 0xE300000000000000;
  if (v2 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1C1070CB4();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1C0BB2330(char a1)
{
  if ((a1 & 1) != 0)
    return 1702125924;
  else
    return 7890025;
}

uint64_t sub_1C0BB2358(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  sub_1C07ACF80(&qword_1EF641930);
  sub_1C0778688();
  MEMORY[0x1E0C80A78](v4);
  sub_1C0778544();
  sub_1C07A9480(a1, a1[3]);
  sub_1C0BB72DC();
  sub_1C1070EB8();
  sub_1C1070BAC();
  if (!v1)
  {
    type metadata accessor for JointHUDataCollectionTaskManager.Point(0);
    sub_1C077AE98();
    sub_1C0794BAC(&qword_1ED75E7D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1C077D19C();
  }
  return sub_1C078C76C(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
}

void sub_1C0BB2480(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v14 = sub_1C077AE98();
  v12 = *(_QWORD *)(v14 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C077AE40();
  v13 = v7;
  sub_1C07ACF80(&qword_1EF641920);
  sub_1C0778688();
  MEMORY[0x1E0C80A78](v8);
  v9 = type metadata accessor for JointHUDataCollectionTaskManager.Point(0);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v10);
  sub_1C07766EC();
  sub_1C07A9480(a1, a1[3]);
  sub_1C0BB72DC();
  sub_1C1070E94();
  if (!v2)
  {
    *v4 = sub_1C1070AD4();
    sub_1C0794BAC(&qword_1ED75E9A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    sub_1C1070AE0();
    sub_1C077F1FC(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))((char *)v4 + *(int *)(v9 + 20), v13, v14);
    sub_1C0BB6AD4((uint64_t)v4, a2);
  }
  sub_1C079D4D4();
  sub_1C07757D0();
}

uint64_t sub_1C0BB2654()
{
  char *v0;

  return sub_1C0BB1F78(*v0);
}

uint64_t sub_1C0BB265C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0BB1EAC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0BB2680()
{
  sub_1C0BB721C();
  return sub_1C1070EE8();
}

uint64_t sub_1C0BB26A8()
{
  sub_1C0BB721C();
  return sub_1C1070EF4();
}

uint64_t sub_1C0BB26D0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_1C0BB20D8(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

void sub_1C0BB26FC(_QWORD *a1)
{
  sub_1C0BB1FA0(a1);
}

uint64_t sub_1C0BB2718()
{
  char *v0;

  return sub_1C0BB2330(*v0);
}

uint64_t sub_1C0BB2720@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0BB2264(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0BB2744()
{
  sub_1C0BB72DC();
  return sub_1C1070EE8();
}

uint64_t sub_1C0BB276C()
{
  sub_1C0BB72DC();
  return sub_1C1070EF4();
}

void sub_1C0BB2794(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0BB2480(a1, a2);
}

uint64_t sub_1C0BB27A8(_QWORD *a1)
{
  return sub_1C0BB2358(a1);
}

NSObject *sub_1C0BB27BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, char *);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t);
  uint64_t v39;
  Class *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  int *v52;
  uint64_t v53;
  NSObject *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  os_log_type_t v59;
  _DWORD *v60;
  uint64_t v61;
  char v62;
  os_log_type_t v63;
  _BOOL4 v64;
  _DWORD *v65;
  uint64_t v66;
  _DWORD *v67;
  uint64_t v68;
  NSObject *v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  int v75;
  _BOOL4 v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  os_log_type_t v98;
  _DWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _BYTE *v103;
  _BYTE *v104;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t (*v110)(uint64_t);
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  int v120;
  double v121;
  NSObject *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  os_log_type_t v126;
  int v127;
  _BOOL4 v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  void (*v134)(uint64_t, uint64_t);
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  void (*v139)(uint64_t, char *);
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unsigned __int8 v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  NSObject *v148;
  os_log_type_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  uint64_t v155;
  Swift::String v156;
  uint64_t v157;
  uint64_t v158;
  _QWORD *v159;
  uint64_t inited;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  NSObject *v164;
  os_log_type_t v165;
  _DWORD *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  double v173;
  uint64_t v174;
  uint64_t *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  _QWORD *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  void (*v190)(uint64_t, uint64_t, uint64_t);
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  unint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  void (*v200)(uint64_t);
  uint64_t v201;
  uint64_t v202;
  uint64_t (*v203)(uint64_t);
  void *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  NSObject *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  NSObject *v223;
  void (*v224)(uint64_t, char *);
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  id v230;
  int *v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  char *v235;
  char v236[8];
  char v237[8];
  uint64_t v238[4];
  uint64_t v239;
  uint64_t v240;

  v2 = v1;
  v219 = a1;
  v209 = sub_1C107006C();
  v208 = *(_QWORD *)(v209 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v3);
  sub_1C077AED0();
  v207 = v4;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v5);
  sub_1C0778674();
  sub_1C0787A68(v6);
  type metadata accessor for Configuration();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v7);
  sub_1C077AE40();
  v213 = v8;
  sub_1C07ACF80(&qword_1EF641820);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v9);
  sub_1C077AED0();
  v214 = v10;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v11);
  sub_1C0778674();
  v222 = v12;
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v13);
  sub_1C077AED0();
  v211 = v14;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v15);
  sub_1C0778674();
  sub_1C0787A68(v16);
  v17 = sub_1C106ADE0();
  v233 = *(_QWORD *)(v17 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v18);
  sub_1C077AED0();
  v229 = v19;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v20);
  sub_1C0779728();
  v215 = v21;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v22);
  sub_1C0779728();
  v212 = v23;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v24);
  sub_1C0779728();
  v224 = v25;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v26);
  sub_1C0779728();
  v210 = v27;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v28);
  sub_1C0779728();
  v216 = v29;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v30);
  sub_1C0779728();
  v226 = v31;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v32);
  sub_1C0778674();
  sub_1C0787A68(v33);
  v218 = sub_1C106AE28();
  v221 = *(_QWORD *)(v218 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v34);
  sub_1C077AE40();
  v36 = sub_1C0787A68(v35);
  v37 = type metadata accessor for JointHUDataCollectionTaskManager.Point(v36);
  v38 = *(uint64_t (**)(uint64_t))(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v40 = (Class *)((char *)&v202 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  v234 = sub_1C07ACF80(&qword_1EF631C60);
  v232 = *(_QWORD *)(v234 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v41);
  sub_1C077AED0();
  v228 = v42;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v43);
  sub_1C0779728();
  v227 = v44;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v45);
  v47 = ((char *)&v202 - v46);
  v48 = *(_QWORD *)(v1 + OBJC_IVAR____TtC24IntelligencePlatformCore32JointHUDataCollectionTaskManager_kvStore);
  v49 = v2;
  v51 = *(_QWORD *)(v2 + OBJC_IVAR____TtC24IntelligencePlatformCore32JointHUDataCollectionTaskManager_savedStateKey);
  v50 = *(void **)(v2 + OBJC_IVAR____TtC24IntelligencePlatformCore32JointHUDataCollectionTaskManager_savedStateKey + 8);
  v52 = v231;
  v53 = sub_1C07F7F08();
  v56 = v17;
  v57 = (char *)&unk_1ED762000;
  v235 = (char *)v56;
  if (v52)
  {

    v225 = 0;
  }
  else
  {
    v203 = v38;
    v204 = v50;
    v205 = v51;
    v206 = v48;
    v231 = (int *)v37;
    v225 = 0;
    if (v54)
    {
      if (*(_QWORD *)(v55 + 16))
      {
        v69 = v54;
        v221 = v55;
        v219 = v53;
        if (qword_1ED762B18 != -1)
          swift_once();
        v70 = sub_1C077585C();
        sub_1C079E000(v70, (uint64_t)qword_1ED762AF8);
        v71 = (unint64_t)v69;
        swift_bridgeObjectRetain_n();
        v72 = v221;
        swift_bridgeObjectRetain_n();
        sub_1C07966A0();
        v73 = sub_1C106F538();
        v74 = sub_1C1070378();
        v75 = v74;
        v230 = v73;
        v76 = os_log_type_enabled(v73, v74);
        v217 = v71;
        if (v76)
        {
          v77 = sub_1C0775854();
          LODWORD(v220) = v75;
          v78 = v71;
          v79 = v77;
          v218 = sub_1C0775854();
          v238[0] = v218;
          *(_DWORD *)v79 = 136315650;
          sub_1C07B426C();
          v239 = sub_1C07A5ED8();
          sub_1C079C6E4();
          sub_1C077ED08();
          sub_1C0775894();
          *(_WORD *)(v79 + 12) = 2080;
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          v239 = sub_1C0788DAC(v219, v78, v238);
          sub_1C079C6E4();
          sub_1C07758A4();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v79 + 22) = 2048;
          v80 = *(_QWORD *)(v72 + 16);
          sub_1C077E584();
          swift_bridgeObjectRelease();
          v239 = v80;
          sub_1C079C6E4();
          sub_1C077E584();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C0771000, (os_log_t)v230, (os_log_type_t)v220, "%s: Found saved state %s with %ld points. Will resume.", (uint8_t *)v79, 0x20u);
          swift_arrayDestroy();
          sub_1C0776778();
        }

        sub_1C077ED08();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        sub_1C07A9674();
        v110 = v203;
        v57 = *(char **)(v72 + 16);
        if (v57)
        {
          v220 = v49;
          v238[0] = MEMORY[0x1E0DEE9D8];
          sub_1C07796E0();
          sub_1C09D49FC();
          v111 = v72 + ((*((unsigned __int8 *)v110 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v110 + 80));
          v230 = (id)*((_QWORD *)v110 + 9);
          v38 = type metadata accessor for JointHUDataCollectionTaskManager.Point;
          v112 = v233;
          do
          {
            sub_1C0845A4C(v111, (uint64_t)v40, type metadata accessor for JointHUDataCollectionTaskManager.Point);
            v113 = (uint64_t)v47 + *(int *)(v234 + 48);
            v47->isa = *v40;
            sub_1C077C228(v113, (uint64_t)v40 + v231[5], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v112 + 16));
            sub_1C07B1F90((uint64_t)v40, type metadata accessor for JointHUDataCollectionTaskManager.Point);
            v114 = v238[0];
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1C0BB757C();
              sub_1C09D49FC();
              v112 = v233;
              v114 = v238[0];
            }
            v115 = *(_QWORD *)(v114 + 16);
            if (v115 >= *(_QWORD *)(v114 + 24) >> 1)
            {
              sub_1C09D49FC();
              v112 = v233;
              v114 = v238[0];
            }
            *(_QWORD *)(v114 + 16) = v115 + 1;
            sub_1C078233C();
            sub_1C078A6A8((uint64_t)v47, v114 + v116 + *(_QWORD *)(v117 + 72) * v115, &qword_1EF631C60);
            v111 += (uint64_t)v230;
            --v57;
          }
          while (v57);
          v47 = v114;
          sub_1C07758A4();
          v49 = v220;
          sub_1C07A9674();
        }
        else
        {
          sub_1C077E584();
          v47 = MEMORY[0x1E0DEE9D8];
        }
        v156._countAndFlagsBits = (uint64_t)v38;
        v156._object = v204;
        KeyValueStore.delete(key:)(v156);
        v81 = v234;
        v82 = (uint64_t)v224;
        if (v157)
        {
          sub_1C07767AC();
          sub_1C077960C();
          return v47;
        }
        v221 = 0;
        v91 = v233;
        v90 = (uint64_t)v47;
        goto LABEL_19;
      }
      v47 = v54;
      swift_bridgeObjectRelease();
      sub_1C07767AC();
    }
  }
  if (qword_1ED762B18 != -1)
    swift_once();
  v58 = sub_1C077585C();
  sub_1C079E000(v58, (uint64_t)qword_1ED762AF8);
  sub_1C07966A0();
  sub_1C106F538();
  v59 = sub_1C07951F0();
  if (os_log_type_enabled(v47, v59))
  {
    v60 = (_DWORD *)sub_1C0775854();
    v238[0] = sub_1C0775854();
    *v60 = 136315138;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v61 = sub_1C07AFADC();
    sub_1C0789F6C(v61);
    sub_1C10705AC();
    swift_release();
    sub_1C077E9D8();
    sub_1C078D7DC(&dword_1C0771000, v47, v59, "%s: deciding whether to sample.");
    sub_1C077884C();
    sub_1C0776778();
  }

  sub_1C077ED08();
  v62 = sub_1C0BB4D60();
  sub_1C07966A0();
  sub_1C106F538();
  v63 = sub_1C07951F0();
  v64 = os_log_type_enabled(v47, v63);
  if ((v62 & 1) == 0)
  {
    if (v64)
    {
      v67 = (_DWORD *)sub_1C0775854();
      v238[0] = sub_1C0775854();
      *v67 = 136315138;
      sub_1C07B426C();
      v68 = sub_1C07A5ED8();
      sub_1C07A3290(v68);
      sub_1C077ED08();
      sub_1C0775894();
      sub_1C078D7DC(&dword_1C0771000, v47, v63, "%s: decided not to sample");
      sub_1C078CBD0();
      sub_1C0776778();
    }

    sub_1C077ED08();
    sub_1C0BB6B18();
    sub_1C0775810();
    *v103 = 1;
    goto LABEL_28;
  }
  if (v64)
  {
    v65 = (_DWORD *)sub_1C0775854();
    v238[0] = sub_1C0775854();
    *v65 = 136315138;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v66 = sub_1C07AFADC();
    sub_1C0789F6C(v66);
    sub_1C10705AC();
    swift_release();
    sub_1C077E9D8();
    sub_1C078D7DC(&dword_1C0771000, v47, v63, "%s: decided that sampling will occur.");
    sub_1C078CBD0();
    sub_1C0776778();
  }

  sub_1C077ED08();
  sub_1C0782224();
  v81 = v234;
  v82 = (uint64_t)v224;
  v83 = v218;
  v84 = v220;
  sub_1C106A4EC();
  v219 = sub_1C106ADF8();
  v217 = v85;
  (*(void (**)(uint64_t, uint64_t))(v221 + 8))(v84, v83);
  v86 = v230;
  v87 = sub_1C106AD2C();
  MEMORY[0x1E0C80A78](v87);
  v88 = v225;
  sub_1C082A000();
  v90 = v89;
  v221 = v88;
  v91 = v233;
  (*(void (**)(id, void *))(v233 + 8))(v86, &unk_1ED762000);
LABEL_19:
  v92 = v222;
  v225 = v90;
  sub_1C0AA4AB0();
  if (sub_1C07B2D80(v92, 1, v81) == 1)
  {
    sub_1C0784B6C(v92, &qword_1EF641820);
    v93 = (uint64_t)v223;
    sub_1C07B2D8C((uint64_t)v223, 1, 1, (uint64_t)v235);
LABEL_22:
    sub_1C07799B4();
    swift_bridgeObjectRelease();
    sub_1C0784B6C(v93, (uint64_t *)&unk_1ED762690);
    if (qword_1ED762B18 != -1)
      swift_once();
    v97 = sub_1C077585C();
    sub_1C079E000(v97, (uint64_t)qword_1ED762AF8);
    sub_1C07966A0();
    v47 = sub_1C106F538();
    v98 = sub_1C1070390();
    if (sub_1C0775B94(v98))
    {
      v99 = (_DWORD *)sub_1C0775854();
      v238[0] = sub_1C0775854();
      *v99 = 136315138;
      sub_1C07B426C();
      v100 = sub_1C07A5ED8();
      sub_1C07A3290(v100);
      sub_1C077ED08();
      sub_1C0775894();
      sub_1C078B12C(&dword_1C0771000, v101, v102, "%s: received empty timepoints. Stopping data collection due to unexpected state.");
      sub_1C078CBD0();
      sub_1C0776778();
    }

    sub_1C077ED08();
    sub_1C0BB6B18();
    sub_1C0775810();
    *v104 = 0;
LABEL_28:
    swift_willThrow();
    return v47;
  }
  v94 = *(void **)(v91 + 32);
  v93 = (uint64_t)v223;
  sub_1C0782224();
  sub_1C077D0D4(v95, v96);
  sub_1C077CF40(v93, 0);
  if (sub_1C07B2D80(v93, 1, (uint64_t)v57) == 1)
    goto LABEL_22;
  sub_1C077D0D4(v226, v93);
  v106 = v214;
  sub_1C0C3B654(v225, v214);
  if (sub_1C07B2D80(v106, 1, v81) == 1)
  {
    sub_1C0784B6C(v106, &qword_1EF641820);
    v107 = 1;
    v108 = v212;
    v109 = v211;
  }
  else
  {
    v118 = v106 + *(int *)(v81 + 48);
    v109 = v211;
    sub_1C077D0D4(v211, v118);
    v107 = 0;
    v108 = v212;
  }
  v119 = v210;
  sub_1C077CF40(v109, v107);
  v231 = *(int **)(v91 + 16);
  ((void (*)(uint64_t, uint64_t, char *))v231)(v82, v226, v57);
  v120 = sub_1C07B2D80(v109, 1, (uint64_t)v57);
  v230 = v94;
  if (v120 == 1)
  {
    sub_1C077D0D4(v119, v82);
    sub_1C0784B6C(v109, (uint64_t *)&unk_1ED762690);
  }
  else
  {
    sub_1C077F1FC(*(uint64_t (**)(uint64_t, uint64_t))(v91 + 8));
    sub_1C077D0D4(v119, v109);
  }
  v121 = *(double *)(v49
                   + OBJC_IVAR____TtC24IntelligencePlatformCore32JointHUDataCollectionTaskManager_sampleIntervalLength);
  v122 = v216;
  sub_1C106AD2C();
  v224 = *(void (**)(uint64_t, char *))(v91 + 8);
  v224(v119, v57);
  if (qword_1ED762B18 != -1)
    swift_once();
  v123 = sub_1C077585C();
  v124 = sub_1C079E000(v123, (uint64_t)qword_1ED762AF8);
  ((void (*)(uint64_t, uint64_t, char *))v231)(v108, v226, v57);
  v125 = v215;
  sub_1C0780804(v215, (uint64_t)v122);
  sub_1C07966A0();
  sub_1C07AE7FC();
  v126 = sub_1C07951F0();
  v127 = v126;
  v128 = os_log_type_enabled(v122, v126);
  v223 = v124;
  if (v128)
  {
    v129 = sub_1C0775854();
    v130 = sub_1C0775854();
    sub_1C07AFE10(v130);
    *(_DWORD *)v129 = 136315650;
    LODWORD(v220) = v127;
    sub_1C077AEBC();
    v239 = sub_1C0795B3C();
    sub_1C10705AC();
    sub_1C077ED08();
    sub_1C077B5B4();
    *(_WORD *)(v129 + 12) = 2080;
    sub_1C0794BAC((unint64_t *)&qword_1ED7565B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
    sub_1C07B5A98((uint64_t)&v240);
    v131 = sub_1C1070C0C();
    v133 = sub_1C0781D24(v131, v132);
    sub_1C07811E8(v133);
    sub_1C077960C();
    v134 = (void (*)(uint64_t, uint64_t))v224;
    v224(v108, v235);
    *(_WORD *)(v129 + 22) = 2080;
    v135 = v215;
    sub_1C07B5A98((uint64_t)&v240);
    v136 = sub_1C1070C0C();
    v138 = sub_1C0781D24(v136, v137);
    sub_1C07811E8(v138);
    sub_1C077960C();
    v134(v135, (uint64_t)v235);
    _os_log_impl(&dword_1C0771000, v122, (os_log_type_t)v220, "%s: startTime = %s endTime = %s", (uint8_t *)v129, 0x20u);
    swift_arrayDestroy();
    sub_1C0776778();
  }
  sub_1C077ED08();
  v139 = v224;
  v224(v108, v57);
  v139(v125, v57);

  v140 = v213;
  sub_1C0845A4C(v49 + OBJC_IVAR____TtC24IntelligencePlatformCore32JointHUDataCollectionTaskManager_config, v213, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  type metadata accessor for CUFeatureProvider();
  sub_1C077B5BC();
  sub_1C08E56C0(v140);
  v142 = v141;
  v143 = objc_msgSend((id)objc_opt_self(), sel_isBetaBuild);
  v144 = v221;
  v145 = v217;
  if ((v143 & 1) != 0)
    v146 = 1;
  else
    v146 = (uint64_t)objc_msgSend((id)objc_opt_self(), sel_isInternalDevice);
  v147 = sub_1C08E6420(v146);
  if (v144)
  {
    sub_1C07785A8();
    sub_1C077B72C();
    sub_1C07966A0();
    sub_1C077B72C();
    v148 = sub_1C07AE7FC();
    v149 = sub_1C107039C();
    v119 = v149;
    if (os_log_type_enabled(v148, v149))
    {
      v150 = sub_1C0775854();
      v151 = sub_1C0775854();
      sub_1C07AFE10(v151);
      *(_DWORD *)v150 = 136315394;
      sub_1C077AEBC();
      v152 = sub_1C0795B3C();
      sub_1C07B7338(v152);
      sub_1C077ED08();
      sub_1C077B5B4();
      *(_WORD *)(v150 + 12) = 2080;
      swift_getErrorValue();
      v153 = sub_1C1070D74();
      v155 = sub_1C0781D24(v153, v154);
      sub_1C07ABD68(v155);
      sub_1C10705AC();
      sub_1C077960C();
      sub_1C07888BC();
      sub_1C07888BC();
      _os_log_impl(&dword_1C0771000, v148, (os_log_type_t)v119, "%s: unable to generate cu signals: %s", (uint8_t *)v150, 0x16u);
      sub_1C07B84E4();
      sub_1C0776778();
    }
    sub_1C077ED08();
    sub_1C07888BC();
    sub_1C07888BC();

    sub_1C07BAE40();
    sub_1C07ACF80(&qword_1EF633E68);
    v158 = sub_1C106F97C();
    sub_1C07888BC();
  }
  else
  {
    v158 = v147;
    sub_1C07785A8();
    sub_1C07BAE40();
  }
  v159 = sub_1C0BB4FDC(v119, v145, v226, v142);
  v217 = v145;
  sub_1C07ACF80(&qword_1EF6378F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1079220;
  *(_QWORD *)(inited + 32) = 0xD000000000000015;
  *(_QWORD *)(inited + 40) = 0x80000001C10E7450;
  *(_QWORD *)(inited + 72) = type metadata accessor for BehaviorsFeatureProvider();
  sub_1C0794BAC(&qword_1EF641838, (uint64_t (*)(uint64_t))type metadata accessor for BehaviorsFeatureProvider, (uint64_t)&unk_1C107DE9C);
  *(_QWORD *)(inited + 80) = v161;
  *(_QWORD *)(inited + 48) = v159;
  sub_1C0779758();
  *(_QWORD *)(inited + 88) = sub_1C08A6C08();
  *(_BYTE *)(inited + 104) = 1;
  sub_1C07ACF80(&qword_1EF633E68);
  v162 = sub_1C106F97C();
  *(_QWORD *)(v49 + OBJC_IVAR____TtC24IntelligencePlatformCore32JointHUDataCollectionTaskManager_behaviorsFeatureProvider) = v159;
  swift_release();
  v222 = sub_1C0BB1E30(v158, v162);
  v221 = 0;
  v163 = v217;
  swift_bridgeObjectRetain_n();
  v164 = sub_1C07AE7FC();
  v165 = sub_1C10703A8();
  if (os_log_type_enabled(v164, v165))
  {
    v166 = (_DWORD *)sub_1C0775854();
    v238[0] = sub_1C0775854();
    *v166 = 136315138;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v167 = sub_1C0788DAC(v219, v163, v238);
    sub_1C0789F6C(v167);
    sub_1C10705AC();
    swift_bridgeObjectRelease_n();
    sub_1C078D7DC(&dword_1C0771000, v164, v165, "Features: Starting data collection with id %s");
    sub_1C077884C();
    sub_1C0776778();
  }

  sub_1C07758A4();
  v219 = v119;
  sub_1C0A57380();
  v169 = v168;
  v170 = sub_1C0778598();
  *(_QWORD *)(v170 + 16) = v119;
  *(_QWORD *)(v170 + 24) = v163;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v171 = sub_1C08A93C0();
  sub_1C0784AC0(v49 + OBJC_IVAR____TtC24IntelligencePlatformCore32JointHUDataCollectionTaskManager_eventTracker, (uint64_t)v238);
  sub_1C079D180((uint64_t)v238, v238[3]);
  sub_1C0792D70();
  v173 = MEMORY[0x1E0C80A78](v172);
  v175 = (uint64_t *)((char *)&v202 - ((v174 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v176 + 16))(v175, v173);
  v177 = *v175;
  v178 = v225;
  sub_1C07ACF80(&qword_1EF641830);
  v179 = sub_1C077B5BC();
  v47 = sub_1C0BB6CAC(v222, v169, (uint64_t)sub_1C0BB6B94, v170, v171, 2, 0, 1, v121, v177, v179);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v238);
  v180 = (_QWORD *)(v49 + OBJC_IVAR____TtC24IntelligencePlatformCore32JointHUDataCollectionTaskManager_sampleTaskUUIDPair);
  v182 = *(_QWORD *)(v49
                   + OBJC_IVAR____TtC24IntelligencePlatformCore32JointHUDataCollectionTaskManager_sampleTaskUUIDPair);
  v181 = *(_QWORD *)(v49
                   + OBJC_IVAR____TtC24IntelligencePlatformCore32JointHUDataCollectionTaskManager_sampleTaskUUIDPair
                   + 8);
  *v180 = v219;
  v180[1] = v163;
  v180[2] = v47;
  swift_retain_n();
  sub_1C0BB6E14(v182, v181);
  v183 = *(_QWORD *)(v178 + 16);
  if (v183)
  {
    v223 = v47;
    v238[0] = MEMORY[0x1E0DEE9D8];
    sub_1C09D337C();
    sub_1C078233C();
    v185 = v178 + v184;
    v187 = *(_QWORD *)(v186 + 72);
    v188 = (uint64_t)v235;
    v189 = v229;
    v190 = (void (*)(uint64_t, uint64_t, uint64_t))v230;
    v191 = v227;
    do
    {
      sub_1C0845A78(v185, v191, &qword_1EF631C60);
      v192 = *(int *)(v234 + 48);
      v193 = v228 + v192;
      ((void (*)(uint64_t, uint64_t, uint64_t))v231)(v228 + v192, v191 + v192, v188);
      v190(v189, v193, v188);
      sub_1C0784B6C(v191, &qword_1EF631C60);
      v194 = v238[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C0BB757C();
        sub_1C09D337C();
        v194 = v238[0];
      }
      v195 = *(_QWORD *)(v194 + 16);
      if (v195 >= *(_QWORD *)(v194 + 24) >> 1)
      {
        sub_1C09D337C();
        v194 = v238[0];
      }
      *(_QWORD *)(v194 + 16) = v195 + 1;
      sub_1C078233C();
      v198 = v194 + v196 + *(_QWORD *)(v197 + 72) * v195;
      v189 = v229;
      v188 = (uint64_t)v235;
      v190 = (void (*)(uint64_t, uint64_t, uint64_t))v230;
      ((void (*)(uint64_t, uint64_t, char *))v230)(v198, v229, v235);
      v238[0] = v194;
      v185 += v187;
      --v183;
    }
    while (v183);
    sub_1C07799B4();
    v47 = v223;
    swift_release();
  }
  else
  {
    sub_1C077589C();
    swift_release();
  }
  v199 = sub_1C07B5A98((uint64_t)v236);
  v200 = (void (*)(uint64_t))v224;
  ((void (*)(uint64_t))v224)(v199);
  v201 = sub_1C07B5A98((uint64_t)v237);
  v200(v201);
  return v47;
}

uint64_t sub_1C0BB4328@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  sub_1C07ACF80(&qword_1EF631C60);
  *a2 = v3;
  return sub_1C106AD2C();
}

uint64_t sub_1C0BB439C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;

  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106F2B0();
  v8 = (int *)type metadata accessor for HUTenPointDataCollection(0);
  v9 = (_QWORD *)(a4 + v8[5]);
  *v9 = 0;
  v9[1] = 0;
  v10 = (_QWORD *)(a4 + v8[6]);
  *v10 = 0;
  v10[1] = 0;
  v11 = (_QWORD *)(a4 + v8[7]);
  *v11 = 0;
  v11[1] = 0;
  v12 = a4 + v8[8];
  *(_DWORD *)v12 = 0;
  *(_BYTE *)(v12 + 4) = 1;
  v13 = a4 + v8[9];
  v14 = type metadata accessor for HUTenPointSessionSample(0);
  result = sub_1C07B2D8C(v13, 1, 1, v14);
  *v9 = 0xD00000000000001ALL;
  v9[1] = 0x80000001C1103820;
  *(_OWORD *)v10 = xmmword_1C10A59F0;
  *v11 = a2;
  v11[1] = a3;
  if (a1 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (a1 <= 0x7FFFFFFF)
  {
    *(_DWORD *)v12 = a1;
    *(_BYTE *)(v12 + 4) = 0;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0BB44A4()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  _QWORD v45[2];
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55[3];
  uint64_t v56;

  v2 = v0;
  v53 = sub_1C07ACF80(&qword_1ED74D308);
  v3 = *(_QWORD *)(v53 - 8);
  MEMORY[0x1E0C80A78](v53);
  sub_1C077AED0();
  v52 = v4;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v5);
  v7 = (_QWORD *)((char *)v45 - v6);
  v8 = type metadata accessor for JointHUDataCollectionTaskManager.Point(0);
  v50 = *(_QWORD *)(v8 - 8);
  v51 = v8;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v9);
  sub_1C07766EC();
  v10 = (uint64_t *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore32JointHUDataCollectionTaskManager_sampleTaskUUIDPair);
  v11 = *(_QWORD *)(v0
                  + OBJC_IVAR____TtC24IntelligencePlatformCore32JointHUDataCollectionTaskManager_sampleTaskUUIDPair
                  + 8);
  if (v11)
  {
    v12 = *v10;
    v13 = v10[2];
    v14 = (uint64_t *)(v13 + qword_1EF6D0D58);
    result = swift_beginAccess();
    v16 = *v14;
    v17 = *(_QWORD *)(v16 + 16);
    if (v17)
    {
      v48 = v2;
      v46 = v12;
      sub_1C0BB6AA4(v12, v11);
      v56 = MEMORY[0x1E0DEE9D8];
      v47 = v11;
      sub_1C077AE90();
      v45[1] = v13;
      sub_1C077C14C();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C09D4A30();
      v18 = *(unsigned __int8 *)(v3 + 80);
      v45[0] = v16;
      v19 = v16 + ((v18 + 32) & ~v18);
      v49 = *(_QWORD *)(v3 + 72);
      do
      {
        sub_1C0845A78(v19, (uint64_t)v7, &qword_1ED74D308);
        v20 = *v7;
        v21 = *(int *)(v53 + 48);
        v22 = v52 + v21;
        v23 = (char *)v7 + v21;
        v24 = sub_1C077AE98();
        v25 = *(_QWORD *)(v24 - 8);
        (*(void (**)(uint64_t, char *, uint64_t))(v25 + 16))(v22, v23, v24);
        *(_QWORD *)v1 = v20;
        (*(void (**)(char *, uint64_t, uint64_t))(v25 + 32))(&v1[*(int *)(v51 + 20)], v22, v24);
        sub_1C0784B6C((uint64_t)v7, &qword_1ED74D308);
        v26 = v56;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C09D4A30();
          v26 = v56;
        }
        v27 = *(_QWORD *)(v26 + 16);
        if (v27 >= *(_QWORD *)(v26 + 24) >> 1)
        {
          sub_1C09D4A30();
          v26 = v56;
        }
        *(_QWORD *)(v26 + 16) = v27 + 1;
        sub_1C078233C();
        sub_1C0BB6AD4((uint64_t)v1, v26 + v28 + *(_QWORD *)(v29 + 72) * v27);
        v19 += v49;
        --v17;
      }
      while (v17);
      swift_bridgeObjectRelease();
      v31 = v47;
      v30 = v48;
      sub_1C0B79F40();
      if (qword_1ED762B18 != -1)
        swift_once();
      v38 = sub_1C077585C();
      sub_1C079E000(v38, (uint64_t)qword_1ED762AF8);
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      sub_1C0782D54();
      v39 = sub_1C106F538();
      v40 = sub_1C1070378();
      if (os_log_type_enabled(v39, v40))
      {
        v41 = sub_1C0775854();
        v56 = sub_1C0775854();
        *(_DWORD *)v41 = 136315650;
        v42 = *(_QWORD *)(v30 + 16);
        v43 = *(_QWORD *)(v30 + 24);
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v54 = sub_1C0788DAC(v42, v43, &v56);
        sub_1C07BC894();
        sub_1C07878F0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v41 + 12) = 2080;
        sub_1C07796E0();
        v54 = sub_1C0788DAC(v46, v31, &v56);
        sub_1C07BC894();
        sub_1C07878F0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v41 + 22) = 2048;
        v44 = *(_QWORD *)(v26 + 16);
        swift_release();
        sub_1C077E584();
        v54 = v44;
        sub_1C07BC894();
        swift_release();
        sub_1C077E584();
        _os_log_impl(&dword_1C0771000, v39, v40, "%s: Saved data collection state %s with %ld remaining points.", (uint8_t *)v41, 0x20u);
        swift_arrayDestroy();
        sub_1C0776778();
      }

      sub_1C07878F0();
      sub_1C07878F0();
      swift_release_n();
      return swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v32 = sub_1C077585C();
    sub_1C079E000(v32, (uint64_t)qword_1ED762AF8);
    sub_1C07966A0();
    v33 = sub_1C106F538();
    v34 = sub_1C1070378();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)sub_1C0775854();
      v55[0] = sub_1C0775854();
      *(_DWORD *)v35 = 136315138;
      v36 = *(_QWORD *)(v2 + 16);
      v37 = *(_QWORD *)(v2 + 24);
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v56 = sub_1C0788DAC(v36, v37, v55);
      sub_1C10705AC();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C0771000, v33, v34, "%s: Skipping persisting state for deferral since no sample task has been created.", v35, 0xCu);
      sub_1C0778610();
      sub_1C0776778();
    }

    return swift_release();
  }
  return result;
}

uint64_t sub_1C0BB4C58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (!*(_QWORD *)(v0
                  + OBJC_IVAR____TtC24IntelligencePlatformCore32JointHUDataCollectionTaskManager_behaviorsFeatureProvider))
    return KeyValueStore.delete(key:)(*(Swift::String *)(v0
                                                       + OBJC_IVAR____TtC24IntelligencePlatformCore32JointHUDataCollectionTaskManager_savedStateKey));
  sub_1C0779758();
  sub_1C087BEF4();
  result = sub_1C07785A8();
  if (!v1)
    return KeyValueStore.delete(key:)(*(Swift::String *)(v0
                                                       + OBJC_IVAR____TtC24IntelligencePlatformCore32JointHUDataCollectionTaskManager_savedStateKey));
  return result;
}

void sub_1C0BB4CD4()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore32JointHUDataCollectionTaskManager_postProcessor);
  if (v1)
  {
    v2 = *(id *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore32JointHUDataCollectionTaskManager_postProcessor);
    sub_1C0BB6A08(v1);
    sub_1C0ACAEAC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();

  }
}

uint64_t sub_1C0BB4D60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  os_log_type_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;

  v0 = sub_1C077AE98();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  sub_1C0778564();
  v4 = v3 - v2;
  if (qword_1ED74B208 != -1)
    swift_once();
  sub_1C106ADD4();
  v5 = sub_1C0920BB4();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v4, v0);
  if ((v5 & 1) == 0)
  {
    if ((objc_msgSend((id)objc_opt_self(), sel_isInternalDevice) & 1) == 0)
      objc_msgSend((id)objc_opt_self(), sel_isBetaBuild);
    sub_1C0945C38(0.0, 1.0);
  }
  if (qword_1ED762B18 != -1)
    swift_once();
  v6 = sub_1C077585C();
  v7 = sub_1C079E000(v6, (uint64_t)qword_1ED762AF8);
  v8 = sub_1C106F538();
  v9 = sub_1C10703A8();
  if (sub_1C077F60C(v9))
  {
    v10 = (uint8_t *)sub_1C0775854();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_1C0771000, v8, v7, "Not sampling for Joint HU due to being enrolled in longitudinal data collection", v10, 2u);
    sub_1C0776778();
  }

  return 0;
}

_QWORD *sub_1C0BB4FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t **v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  void *v87;
  _QWORD *v88;
  uint64_t v90;
  uint64_t *v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _UNKNOWN **v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  void (*v100)(char *);
  uint64_t v101;
  uint64_t *v102;
  unsigned __int8 v103;
  unsigned __int8 v104;
  id v105;
  void **v106;
  void *v107;
  void *v108;
  void *v109;
  void *v110;
  void *v111;
  void *v112;
  void *v113;
  void *v114;
  _QWORD *v115;
  uint64_t v116;
  char v117;
  uint64_t v118;
  __int128 v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  uint64_t v126;
  uint64_t v127;
  void (*v128)(uint64_t, uint64_t, uint64_t);
  uint64_t v129;
  void (*v130)(uint64_t, uint64_t, uint64_t);
  uint64_t *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t (*v174)(uint64_t, uint64_t, uint64_t);
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  _QWORD *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  void (*v220)(uint64_t, uint64_t, uint64_t);
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  __int128 v224;
  __int128 v225;
  uint64_t v226;
  __int128 v227;
  void *v228;
  _UNKNOWN **v229;
  _QWORD v230[5];
  uint64_t *v231[3];
  uint64_t v232;
  _UNKNOWN **v233;
  _UNKNOWN **v234;
  __int128 v235;
  uint64_t v236;
  _UNKNOWN **v237;
  _UNKNOWN **v238;
  _QWORD v239[5];
  _OWORD v240[2];
  uint64_t v241;
  char v242;
  uint64_t *v243;

  v218 = a4;
  *(_QWORD *)&v225 = a3;
  v221 = a2;
  v222 = a1;
  type metadata accessor for Configuration();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C077AED0();
  v187 = (uint64_t *)v7;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v8);
  sub_1C0779728();
  v189 = v9;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v10);
  sub_1C0779728();
  v191 = v11;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v12);
  sub_1C0779728();
  v193 = v13;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v14);
  sub_1C0779728();
  v195 = v15;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v16);
  sub_1C0779728();
  v197 = v17;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v18);
  sub_1C0779728();
  v199 = v19;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v20);
  sub_1C0779728();
  v201 = v21;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v22);
  sub_1C0779728();
  v203 = v23;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v24);
  sub_1C0779728();
  v205 = v25;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v26);
  sub_1C0779728();
  v208 = v27;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v28);
  sub_1C0778674();
  v220 = v29;
  v30 = sub_1C106D6CC();
  v209 = *(_QWORD *)(v30 - 8);
  v210 = v30;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v31);
  sub_1C077AED0();
  v186 = v32;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v33);
  sub_1C0779728();
  v188 = v34;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v35);
  sub_1C0779728();
  v190 = v36;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v37);
  sub_1C0779728();
  v192 = v38;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v39);
  sub_1C0779728();
  v194 = v40;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v41);
  sub_1C0779728();
  v196 = v42;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v43);
  sub_1C0779728();
  v198 = v44;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v45);
  sub_1C0779728();
  v200 = v46;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v47);
  sub_1C0779728();
  v202 = v48;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v49);
  sub_1C0779728();
  v204 = v50;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v51);
  sub_1C0779728();
  v207 = v52;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v53);
  sub_1C0778674();
  v206 = v54;
  v55 = sub_1C077AE98();
  v213 = *(_QWORD *)(v55 - 8);
  v214 = v55;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v56);
  sub_1C077AED0();
  v216 = v57;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v58);
  sub_1C0778674();
  v215 = v59;
  v60 = type metadata accessor for BehaviorSampleGenerator();
  v61 = *(uint64_t **)(v4 + OBJC_IVAR____TtC24IntelligencePlatformCore32JointHUDataCollectionTaskManager_behaviorDatabase);
  v62 = v4 + OBJC_IVAR____TtC24IntelligencePlatformCore32JointHUDataCollectionTaskManager_eventSource;
  sub_1C07AC188();
  v223 = v4;
  v63 = *(_QWORD *)(v4 + OBJC_IVAR____TtC24IntelligencePlatformCore32JointHUDataCollectionTaskManager_kvStore);
  sub_1C0781778();
  sub_1C0792D70();
  MEMORY[0x1E0C80A78](v64);
  sub_1C078B180(v65, v66, v184);
  v231[0] = v61;
  v67 = type metadata accessor for BehaviorDatabase(0);
  sub_1C0782D54();
  sub_1C0783050();
  v219 = v60;
  v243 = sub_1C0877E80((uint64_t)v231, (uint64_t)v5, v63, v60, v67, v236, (uint64_t)&off_1E7A10C48, (uint64_t)v237);
  sub_1C0785100();
  sub_1C077ED08();
  v68 = type metadata accessor for BehaviorFeaturizer();
  sub_1C07AC188();
  sub_1C0839E6C();
  v70 = v69;
  v212 = v62;
  v217 = (uint64_t)v61;
  sub_1C08363FC(v62, v231);
  v71 = v236;
  *(_QWORD *)&v224 = v237;
  sub_1C0781778();
  sub_1C0792D70();
  MEMORY[0x1E0C80A78](v72);
  sub_1C078B180(v73, v74, v184);
  v75 = v232;
  v76 = (uint64_t)v233;
  sub_1C079D180((uint64_t)v231, v232);
  sub_1C0792D70();
  MEMORY[0x1E0C80A78](v77);
  sub_1C0778564();
  v80 = v79 - v78;
  (*(void (**)(uint64_t))(v81 + 16))(v79 - v78);
  v239[0] = v70;
  v82 = type metadata accessor for BehaviorDatabaseEventTracker();
  sub_1C0783050();
  sub_1C077C14C();
  v182 = v224;
  v83 = v80;
  v84 = v63;
  *(_QWORD *)&v224 = v68;
  v211 = v82;
  v85 = sub_1C0851E54(v5, (uint64_t)v239, v83, v63, v68, v71, v75, v82, v182, v76, (uint64_t)&off_1E7A0D6A8);
  sub_1C077C924();
  swift_release();
  v86 = sub_1C0785100();
  v87 = (void *)MEMORY[0x1C3BA79F4](v86);
  v88 = v85;
  sub_1C084D4DC(v225);
  if (v226)
  {
    objc_autoreleasePoolPop(v87);
    swift_release();
    swift_release();
  }
  else
  {
    sub_1C0877154(v225);
    v185 = 0;
    objc_autoreleasePoolPop(v87);
    sub_1C0784AC0(v212, (uint64_t)&v235);
    sub_1C0780804(v215, v225);
    sub_1C0780804(v216, v218);
    v90 = type metadata accessor for CachedContextProvider();
    sub_1C077B5BC();
    sub_1C08AE78C(&v235, v215, v216);
    v92 = v91;
    sub_1C0779758();
    sub_1C07966A0();
    sub_1C077E448();
    v226 = sub_1C0B8A4AC(v217, (uint64_t)v92, v84);
    sub_1C077E448();
    sub_1C0839E6C();
    v94 = v93;
    v232 = v90;
    v233 = &off_1E7A11A88;
    v231[0] = v92;
    sub_1C077E448();
    sub_1C08363FC((uint64_t)v231, &v235);
    sub_1C077C924();
    v95 = v236;
    v96 = v237;
    sub_1C0781778();
    sub_1C0792D70();
    MEMORY[0x1E0C80A78](v97);
    v99 = sub_1C07A86FC(v98, (uint64_t)v85);
    v100(v99);
    v231[0] = v92;
    v239[0] = v94;
    sub_1C0783050();
    sub_1C077E448();
    sub_1C077C14C();
    v183 = (uint64_t)v96;
    v101 = (uint64_t)v92;
    v102 = sub_1C0851E54(v231, (uint64_t)v239, v215, v84, v224, v90, v95, v211, (uint64_t)&off_1E7A11A88, v183, (uint64_t)&off_1E7A0D6A8);
    sub_1C0785100();
    swift_release();
    swift_release();
    v103 = objc_msgSend((id)objc_opt_self(), sel_isBetaBuild);
    if ((v103 & 1) != 0)
      v104 = 1;
    else
      v104 = objc_msgSend((id)objc_opt_self(), sel_isInternalDevice);
    v217 = sub_1C0778598();
    *(_BYTE *)(v217 + 16) = v104;
    v105 = sub_1C0846380();
    v106 = (void **)(v223 + OBJC_IVAR____TtC24IntelligencePlatformCore32JointHUDataCollectionTaskManager_postProcessor);
    v107 = *(void **)(v223 + OBJC_IVAR____TtC24IntelligencePlatformCore32JointHUDataCollectionTaskManager_postProcessor);
    *v106 = v105;
    v106[1] = v108;
    v106[2] = v109;
    v106[3] = v110;
    sub_1C07F4DDC(v107);
    v239[3] = v90;
    v239[4] = &off_1E7A11A88;
    v239[0] = v92;
    v237 = &off_1E7A10C38;
    v238 = &off_1E7A10C20;
    v236 = v219;
    *(_QWORD *)&v235 = v226;
    v233 = &off_1E7A0E760;
    v234 = &off_1E7A0E730;
    v232 = v224;
    v231[0] = v102;
    v111 = *v106;
    v112 = v106[1];
    v114 = v106[2];
    v113 = v106[3];
    v218 = v101;
    v216 = (uint64_t)v102;
    if (v111)
    {
      v228 = &unk_1E7A0E028;
      v229 = &off_1E7A0E048;
      v115 = (_QWORD *)sub_1C0778598();
      *(_QWORD *)&v227 = v115;
      v115[2] = v111;
      v115[3] = v112;
      v115[4] = v114;
      v115[5] = v113;
      sub_1C077DD60(&v227, (uint64_t)v230);
      swift_retain();
      sub_1C07966A0();
      swift_retain();
    }
    else
    {
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v209 + 104))(v206, *MEMORY[0x1E0D3C0F0], v210);
      swift_retain();
      sub_1C07966A0();
      swift_retain();
      sub_1C0821FFC(v206, 7040629, 0xE300000000000000, (uint64_t)v240);
      v224 = v240[1];
      v225 = v240[0];
      v116 = v241;
      v117 = v242;
      v230[3] = &unk_1E7A0E0C0;
      v230[4] = &off_1E7A0E158;
      v118 = sub_1C0778598();
      v230[0] = v118;
      v119 = v224;
      *(_OWORD *)(v118 + 16) = v225;
      *(_OWORD *)(v118 + 32) = v119;
      *(_QWORD *)(v118 + 48) = v116;
      *(_BYTE *)(v118 + 56) = v117;
    }
    sub_1C07ACF80(&qword_1EF641818);
    *(_QWORD *)&v225 = sub_1C0778598();
    *(_OWORD *)(v225 + 16) = xmmword_1C10819C0;
    *(_QWORD *)&v224 = v223 + OBJC_IVAR____TtC24IntelligencePlatformCore32JointHUDataCollectionTaskManager_config;
    sub_1C0845A4C(v223 + OBJC_IVAR____TtC24IntelligencePlatformCore32JointHUDataCollectionTaskManager_config, (uint64_t)v220, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    v120 = type metadata accessor for BehaviorCountLimiter();
    v121 = sub_1C0778598();
    sub_1C0BB6A08(v111);
    v122 = v221;
    sub_1C077AEBC();
    v123 = v222;
    v88 = (_QWORD *)v121;
    v124 = sub_1C082792C((uint64_t)v220, v222, v221, 200);
    if (v185)
    {
      sub_1C07A2864(v124, &qword_1EF632968);
      sub_1C07AA908();
      sub_1C07BCFAC();
      sub_1C078D7E8();
      sub_1C07AF2B8();
      sub_1C077EC04();
      sub_1C079F670();
      swift_release();
      sub_1C079ACD4();
    }
    else
    {
      v125 = (_QWORD *)v225;
      *(_QWORD *)(v225 + 56) = v120;
      v125[8] = &off_1E7A0D670;
      v125[4] = v124;
      sub_1C0845A4C(v224, v208, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
      v126 = *MEMORY[0x1E0D3C058];
      v220 = *(void (**)(uint64_t, uint64_t, uint64_t))(v209 + 104);
      v220(v207, v126, v210);
      v223 = type metadata accessor for BehaviorTypeCountLimiter();
      swift_allocObject();
      sub_1C077AEBC();
      v219 = (uint64_t)(v125 + 4);
      v125[9] = sub_1C07BBF80(v208, v123, v122, v207, 2);
      v127 = v224;
      v125[12] = v223;
      v125[13] = &off_1E7A0D658;
      sub_1C0845A4C(v127, v205, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
      v128 = v220;
      v220(v204, *MEMORY[0x1E0D3C0C0], v210);
      sub_1C0782134();
      sub_1C077AEBC();
      v125[14] = sub_1C07BBF80(v205, v222, v122, v204, 5);
      v129 = v224;
      v125[17] = v223;
      v125[18] = &off_1E7A0D658;
      sub_1C0845A4C(v129, v203, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
      v128(v202, *MEMORY[0x1E0D3C068], v210);
      sub_1C0782134();
      sub_1C079B7EC();
      v130 = v128;
      v131 = (uint64_t *)v225;
      *(_QWORD *)(v225 + 152) = sub_1C079BF84(v203, v222, 0, v202, 20);
      v131 += 19;
      v132 = v224;
      v131[3] = v223;
      v131[4] = (uint64_t)&off_1E7A0D658;
      sub_1C0845A4C(v132, v201, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
      v130(v200, *MEMORY[0x1E0D3C0A0], v210);
      sub_1C07A4900();
      sub_1C07974D8();
      sub_1C07B1E10();
      v215 = (uint64_t)(v125 + 9);
      v138 = v225;
      *(_QWORD *)(v225 + 192) = sub_1C079BF84(v133, v134, v135, v136, v137);
      v138 += 192;
      v140 = v223;
      v139 = v224;
      *(_QWORD *)(v138 + 24) = v223;
      *(_QWORD *)(v138 + 32) = &off_1E7A0D658;
      sub_1C0845A4C(v139, v199, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
      sub_1C079E670(v198, *MEMORY[0x1E0D3C0B8]);
      sub_1C07A4900();
      sub_1C07974D8();
      v214 = v138;
      v141 = v225;
      *(_QWORD *)(v225 + 232) = sub_1C079BF84(v199, v222, v140, v198, 10);
      v141 += 232;
      v142 = v224;
      *(_QWORD *)(v141 + 24) = v223;
      *(_QWORD *)(v141 + 32) = &off_1E7A0D658;
      sub_1C078BE2C(v142, v143, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
      sub_1C079E670(v196, *MEMORY[0x1E0D3C0C8]);
      sub_1C07A4900();
      sub_1C07974D8();
      sub_1C07B1E10();
      v149 = sub_1C07BBF80(v144, v145, v146, v147, v148);
      v185 = 0;
      v150 = v225;
      v213 = v225 + 272;
      *(_QWORD *)(v225 + 296) = v223;
      *(_QWORD *)(v150 + 304) = &off_1E7A0D658;
      *(_QWORD *)(v150 + 272) = v149;
      sub_1C078BE2C(v224, v151, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
      sub_1C079E670(v194, *MEMORY[0x1E0D3C128]);
      sub_1C07A4900();
      sub_1C07974D8();
      v152 = sub_1C079D620();
      v185 = 0;
      v215 = 112;
      v153 = v225;
      v211 = v225 + 312;
      v212 = v141;
      *(_QWORD *)(v225 + 336) = v223;
      *(_QWORD *)(v153 + 344) = &off_1E7A0D658;
      *(_QWORD *)(v153 + 312) = v152;
      sub_1C078BE2C(v224, v154, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
      sub_1C079E670(v192, *MEMORY[0x1E0D3C088]);
      sub_1C07A4900();
      sub_1C07974D8();
      v155 = sub_1C079D620();
      v156 = v225;
      v209 = v225 + 352;
      *(_QWORD *)(v225 + 376) = v223;
      *(_QWORD *)(v156 + 384) = &off_1E7A0D658;
      *(_QWORD *)(v156 + 352) = v155;
      sub_1C0845A4C(v224, v191, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
      sub_1C079E670(v190, *MEMORY[0x1E0D3C060]);
      sub_1C0782134();
      sub_1C079B7EC();
      v157 = sub_1C079BF84(v191, v222, 0, v190, 5);
      v158 = v225;
      v208 = v225 + 392;
      *(_QWORD *)(v225 + 416) = v223;
      *(_QWORD *)(v158 + 424) = &off_1E7A0D658;
      *(_QWORD *)(v158 + 392) = v157;
      sub_1C0845A4C(v224, v189, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
      sub_1C079E670(v188, *MEMORY[0x1E0D3C0E8]);
      sub_1C0782134();
      sub_1C079B7EC();
      v159 = sub_1C0791E10();
      v160 = v225;
      *(_QWORD *)(v225 + 456) = v223;
      *(_QWORD *)(v160 + 464) = &off_1E7A0D658;
      *(_QWORD *)(v160 + 432) = v159;
      v161 = v187;
      sub_1C0845A4C(v224, (uint64_t)v187, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
      sub_1C079E670(v186, *MEMORY[0x1E0D3C078]);
      sub_1C0782134();
      sub_1C079B7EC();
      v162 = sub_1C0791E10();
      v163 = v225;
      *(_QWORD *)(v225 + 496) = v223;
      *(_QWORD *)(v163 + 504) = &off_1E7A0D658;
      *(_QWORD *)(v163 + 472) = v162;
      sub_1C07AF2B8();
      sub_1C078D7E8();
      sub_1C07BCFAC();
      sub_1C077EC04();
      sub_1C079F670();
      sub_1C0BB7574((uint64_t)v239);
      v243 = &v184;
      sub_1C0792D70();
      MEMORY[0x1E0C80A78](v164);
      sub_1C0778564();
      v167 = (uint64_t *)(v166 - v165);
      sub_1C077C228(v166 - v165, v169, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v168 + 16));
      sub_1C0BB7574((uint64_t)&v235);
      sub_1C0792D70();
      MEMORY[0x1E0C80A78](v170);
      v172 = sub_1C07A86FC(v171, v184);
      sub_1C077C228((uint64_t)v172, v173, v174);
      sub_1C0BB7574((uint64_t)v231);
      sub_1C0792D70();
      MEMORY[0x1E0C80A78](v175);
      sub_1C07795DC();
      sub_1C077C228((uint64_t)v131, v177, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v176 + 16));
      v178 = *v167;
      v179 = *v161;
      v180 = *v131;
      type metadata accessor for BehaviorsFeatureProvider();
      v181 = (_QWORD *)sub_1C0778598();
      v88 = sub_1C0BB6BD4(v178, v179, v180, (uint64_t)v230, v163, 100, (uint64_t)sub_1C0BB69D0, v217, v181, (uint64_t (*)(_QWORD))type metadata accessor for CachedContextProvider, (uint64_t)&off_1E7A11A88);
      sub_1C077C924();
      sub_1C0785100();
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v239);
    }
  }
  return v88;
}

uint64_t sub_1C0BB6184(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  char v9;
  char v10;
  uint64_t v12;

  v4 = sub_1C106D6CC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v8, a1, v4, v6);
  if ((a2 & 1) != 0)
  {
    v9 = 1;
  }
  else
  {
    if (qword_1EF62DAC8 != -1)
      swift_once();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0A792BC();
    v9 = v10;
    swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return v9 & 1;
}

uint64_t sub_1C0BB6274()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1C07B1F90(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore32JointHUDataCollectionTaskManager_config, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  sub_1C078D3DC();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore32JointHUDataCollectionTaskManager_eventSource);
  sub_1C078D3DC();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore32JointHUDataCollectionTaskManager_eventTracker);
  swift_bridgeObjectRelease();
  sub_1C078D3DC();
  sub_1C0BB6E14(*(_QWORD *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore32JointHUDataCollectionTaskManager_sampleTaskUUIDPair), *(_QWORD *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore32JointHUDataCollectionTaskManager_sampleTaskUUIDPair + 8));
  sub_1C07F4DDC(*(void **)(v0
                         + OBJC_IVAR____TtC24IntelligencePlatformCore32JointHUDataCollectionTaskManager_postProcessor));
  return v0;
}

uint64_t sub_1C0BB6330()
{
  sub_1C0BB6274();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0BB6354()
{
  return type metadata accessor for JointHUDataCollectionTaskManager(0);
}

uint64_t type metadata accessor for JointHUDataCollectionTaskManager(uint64_t a1)
{
  return sub_1C0784B00(a1, qword_1EF6416C8);
}

uint64_t sub_1C0BB6370()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Configuration();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

NSObject *sub_1C0BB6430(uint64_t a1)
{
  uint64_t v1;
  NSObject *result;
  uint64_t v3;

  result = sub_1C0BB27BC(a1);
  if (v1)
    return v3;
  return result;
}

uint64_t sub_1C0BB6460()
{
  return sub_1C0BB44A4();
}

uint64_t sub_1C0BB6480()
{
  return sub_1C0BB4C58();
}

void sub_1C0BB64A0()
{
  sub_1C0BB4CD4();
}

uint64_t sub_1C0BB64C0(uint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  char v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  __int128 v27[2];
  char v28;
  _OWORD v29[3];
  char v30;
  _BYTE v31[72];
  uint64_t v32;

  sub_1C07ACF80(qword_1EF6397D0);
  result = sub_1C10709CC();
  v3 = (_QWORD *)result;
  v4 = 0;
  v32 = a1;
  v5 = *(_QWORD *)(a1 + 64);
  v25 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v5;
  v26 = (unint64_t)(v6 + 63) >> 6;
  v9 = result + 64;
  v10 = &qword_1EF633E68;
  if ((v7 & v5) == 0)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v11 | (v4 << 6); ; i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(v32 + 48) + 16 * i);
    v18 = *v16;
    v17 = v16[1];
    sub_1C0845A78(*(_QWORD *)(v32 + 56) + (i << 6), (uint64_t)v31, v10);
    v19 = v10;
    sub_1C0845A78((uint64_t)v31, (uint64_t)v27, v10);
    v20 = v28;
    if (v28 && v28 != 1)
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      swift_bridgeObjectRelease();
      sub_1C0853864(v27, v29);
    }
    else
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      swift_bridgeObjectRelease();
      sub_1C077DD60(v27, (uint64_t)v29);
    }
    v30 = v20;
    v10 = v19;
    sub_1C0784B6C((uint64_t)v31, v19);
    *(_QWORD *)(v9 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v21 = (_QWORD *)(v3[6] + 16 * i);
    *v21 = v18;
    v21[1] = v17;
    result = sub_1C08A5D78((uint64_t)v29, v3[7] + 56 * i);
    v22 = v3[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
    {
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    v3[2] = v24;
    if (v8)
      goto LABEL_4;
LABEL_5:
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_28;
    if (v13 >= v26)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v25 + 8 * v13);
    ++v4;
    if (!v14)
    {
      v4 = v13 + 1;
      if (v13 + 1 >= v26)
        return (uint64_t)v3;
      v14 = *(_QWORD *)(v25 + 8 * v4);
      if (!v14)
      {
        v4 = v13 + 2;
        if (v13 + 2 >= v26)
          return (uint64_t)v3;
        v14 = *(_QWORD *)(v25 + 8 * v4);
        if (!v14)
          break;
      }
    }
LABEL_18:
    v8 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v26)
    return (uint64_t)v3;
  v14 = *(_QWORD *)(v25 + 8 * v15);
  if (v14)
  {
    v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v4 >= v26)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v25 + 8 * v4);
    ++v15;
    if (v14)
      goto LABEL_18;
  }
LABEL_29:
  __break(1u);
  return result;
}

void sub_1C0BB6744(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  sub_1C090B458();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C0BB6778(uint64_t a1, uint64_t a2, _QWORD *a3, char a4, uint64_t *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t result;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34[8];
  uint64_t v35[3];
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41[8];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44[8];
  uint64_t v45;

  sub_1C090A414(&v45);
  v33 = a1;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v32 = a3;
  swift_retain();
  sub_1C090AFCC();
  v9 = v43;
  if (!v43)
  {
LABEL_14:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1C0827370();
    return swift_release();
  }
  while (1)
  {
    v10 = v42;
    sub_1C078A6A8((uint64_t)v44, (uint64_t)v41, &qword_1EF633E68);
    v11 = *a5;
    v19 = sub_1C077D774(v10, v9);
    v20 = *(_QWORD *)(v11 + 16);
    v21 = (v12 & 1) == 0;
    v22 = v20 + v21;
    if (__OFADD__(v20, v21))
      break;
    v23 = v12;
    if (*(_QWORD *)(v11 + 24) >= v22)
    {
      if ((a4 & 1) != 0)
      {
        if ((v12 & 1) != 0)
          goto LABEL_9;
      }
      else
      {
        sub_1C07ACF80(qword_1EF641840);
        sub_1C1070918();
        if ((v23 & 1) != 0)
          goto LABEL_9;
      }
    }
    else
    {
      sub_1C0A4C538(v22, a4 & 1, v13, v14, v15, v16, v17, v18, v32, v33, v34[0], v34[1], v34[2], v34[3], v34[4], v34[5], v34[6], v34[7], v35[0],
        v35[1],
        v35[2],
        v36,
        v37,
        v38,
        v39,
        v40,
        v41[0],
        v41[1],
        v41[2],
        v41[3],
        v41[4],
        v41[5],
        v41[6],
        v41[7],
        v42,
        v43,
        v44[0],
        v44[1],
        v44[2],
        v44[3],
        v44[4],
        v44[5]);
      v24 = sub_1C077D774(v10, v9);
      if ((v23 & 1) != (v25 & 1))
        goto LABEL_17;
      v19 = v24;
      if ((v23 & 1) != 0)
      {
LABEL_9:
        sub_1C0845A78(*(_QWORD *)(*a5 + 56) + (v19 << 6), (uint64_t)v34, &qword_1EF633E68);
        sub_1C0845A78((uint64_t)v34, (uint64_t)v35, &qword_1EF633E68);
        sub_1C0784B6C((uint64_t)v34, &qword_1EF633E68);
        sub_1C0784B6C((uint64_t)v41, &qword_1EF633E68);
        swift_bridgeObjectRelease();
        sub_1C0BB6E44((uint64_t)v35, *(_QWORD *)(*a5 + 56) + (v19 << 6));
        goto LABEL_13;
      }
    }
    v26 = (_QWORD *)*a5;
    *(_QWORD *)(*a5 + 8 * (v19 >> 6) + 64) |= 1 << v19;
    v27 = (uint64_t *)(v26[6] + 16 * v19);
    *v27 = v10;
    v27[1] = v9;
    sub_1C078A6A8((uint64_t)v41, v26[7] + (v19 << 6), &qword_1EF633E68);
    v28 = v26[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (v29)
      goto LABEL_16;
    v26[2] = v30;
LABEL_13:
    sub_1C090AFCC();
    v9 = v43;
    a4 = 1;
    if (!v43)
      goto LABEL_14;
  }
  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  result = sub_1C1070D44();
  __break(1u);
  return result;
}

uint64_t sub_1C0BB69C0()
{
  return swift_deallocObject();
}

uint64_t sub_1C0BB69D0(uint64_t a1)
{
  uint64_t v1;

  return sub_1C0BB6184(a1, *(_BYTE *)(v1 + 16));
}

uint64_t sub_1C0BB69D8()
{
  uint64_t v0;

  sub_1C0826F50(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56));
  return swift_deallocObject();
}

void *sub_1C0BB6A08(void *result)
{
  id v1;

  if (result)
  {
    v1 = result;
    swift_retain();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    return (void *)_s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  return result;
}

uint64_t sub_1C0BB6A54()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t type metadata accessor for JointHUDataCollectionTaskManager.Point(uint64_t a1)
{
  return sub_1C0784B00(a1, qword_1EF6418A0);
}

uint64_t sub_1C0BB6AA4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1C0BB6AD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for JointHUDataCollectionTaskManager.Point(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C0BB6B18()
{
  unint64_t result;

  result = qword_1EF641828;
  if (!qword_1EF641828)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A5BE0, &type metadata for JointHUDataCollectionTaskManager.JointHUDataCollectionTaskError);
    atomic_store(result, (unint64_t *)&qword_1EF641828);
  }
  return result;
}

uint64_t sub_1C0BB6B54@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1C0BB4328(a1, a2);
}

uint64_t sub_1C0BB6B70()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0BB6B94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1C0BB439C(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

_QWORD *sub_1C0BB6B9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, _QWORD *a9)
{
  return sub_1C0BB6BD4(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(_QWORD))type metadata accessor for BehaviorHistoryUtility, (uint64_t)&off_1E7A0FBC8);
}

_QWORD *sub_1C0BB6BD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, _QWORD *a9, uint64_t (*a10)(_QWORD), uint64_t a11)
{
  a9[5] = a10(0);
  a9[6] = a11;
  a9[2] = a1;
  a9[10] = type metadata accessor for BehaviorSampleGenerator();
  a9[11] = &off_1E7A10C38;
  a9[12] = &off_1E7A10C20;
  a9[7] = a2;
  a9[16] = type metadata accessor for BehaviorFeaturizer();
  a9[17] = &off_1E7A0E760;
  a9[18] = &off_1E7A0E730;
  a9[13] = a3;
  sub_1C078A6A8(a4, (uint64_t)(a9 + 19), &qword_1EF632968);
  a9[24] = a5;
  a9[25] = a6;
  a9[26] = a7;
  a9[27] = a8;
  return a9;
}

uint64_t sub_1C0BB6CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8, double a9, uint64_t a10, uint64_t a11)
{
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  uint64_t v23;
  _QWORD v25[5];

  v25[3] = sub_1C106F43C();
  v25[4] = &off_1E7A130C0;
  v25[0] = a10;
  v20 = a11 + qword_1EF6D0D50;
  v21 = sub_1C07ACF80(qword_1EF631E48);
  sub_1C07B2D8C(v20, 1, 2, v21);
  v22 = (_OWORD *)(a11 + qword_1EF633AD0);
  v22[2] = 0u;
  v22[3] = 0u;
  *v22 = 0u;
  v22[1] = 0u;
  *(_QWORD *)(a11 + qword_1EF633AD8) = 0;
  *(_QWORD *)(a11 + qword_1EF633AE0) = 0;
  *(_QWORD *)(a11 + 16) = a1;
  *(_QWORD *)(a11 + 32) = a2;
  *(_QWORD *)(a11 + 48) = a3;
  *(_QWORD *)(a11 + 56) = a4;
  *(double *)(a11 + 40) = a9;
  *(_QWORD *)(a11 + 64) = a5;
  *(_QWORD *)(a11 + 72) = a6;
  *(_BYTE *)(a11 + 80) = a7;
  *(_BYTE *)(a11 + 81) = a8;
  sub_1C0784AC0((uint64_t)v25, a11 + 88);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_retain();
  v23 = sub_1C0BB64C0(a1);
  swift_bridgeObjectRelease();
  swift_release();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v25);
  *(_QWORD *)(a11 + 24) = v23;
  *(_QWORD *)(a11 + qword_1EF6D0D58) = a2;
  return a11;
}

uint64_t sub_1C0BB6E14(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C0BB6E44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1EF633E68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for JointHUDataCollectionTaskManager.JointHUDataCollectionTaskError()
{
  return &type metadata for JointHUDataCollectionTaskManager.JointHUDataCollectionTaskError;
}

ValueMetadata *type metadata accessor for JointHUDataCollectionTaskManager.SavedState()
{
  return &type metadata for JointHUDataCollectionTaskManager.SavedState;
}

uint64_t *sub_1C0BB6EB0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_1C106ADE0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_1C0BB6F38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_1C106ADE0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *sub_1C0BB6F70(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1C106ADE0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_QWORD *sub_1C0BB6FCC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1C106ADE0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_QWORD *sub_1C0BB7028(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1C106ADE0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_1C0BB7084(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1C106ADE0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_1C0BB70E0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0BB70EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 20);
  v5 = sub_1C077AE98();
  return sub_1C07B2D80(v4, a2, v5);
}

uint64_t sub_1C0BB7120()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0BB712C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 20);
  v6 = sub_1C077AE98();
  return sub_1C07B2D8C(v5, a2, a2, v6);
}

uint64_t sub_1C0BB7164()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C106ADE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1C0BB71E0()
{
  unint64_t result;

  result = qword_1EF6418D8;
  if (!qword_1EF6418D8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A5B90, &type metadata for JointHUDataCollectionTaskManager.JointHUDataCollectionTaskError);
    atomic_store(result, (unint64_t *)&qword_1EF6418D8);
  }
  return result;
}

unint64_t sub_1C0BB721C()
{
  unint64_t result;

  result = qword_1EF6418E8;
  if (!qword_1EF6418E8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A5E14, &type metadata for JointHUDataCollectionTaskManager.SavedState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF6418E8);
  }
  return result;
}

uint64_t sub_1C0BB7258(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    v9 = sub_1C07D4BEC(&qword_1EF6418F0);
    sub_1C0794BAC(a2, type metadata accessor for JointHUDataCollectionTaskManager.Point, a3);
    v11 = v10;
    result = MEMORY[0x1C3BA8174](a4, v9, &v11);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C0BB72DC()
{
  unint64_t result;

  result = qword_1EF641928;
  if (!qword_1EF641928)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A5DC4, &type metadata for JointHUDataCollectionTaskManager.Point.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF641928);
  }
  return result;
}

ValueMetadata *type metadata accessor for JointHUDataCollectionTaskManager.Point.CodingKeys()
{
  return &type metadata for JointHUDataCollectionTaskManager.Point.CodingKeys;
}

uint64_t _s24IntelligencePlatformCore32JointHUDataCollectionTaskManagerC30JointHUDataCollectionTaskErrorOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C0BB7374 + 4 * byte_1C10A5A07[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C0BB73A8 + 4 * byte_1C10A5A02[v4]))();
}

uint64_t sub_1C0BB73A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0BB73B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0BB73B8);
  return result;
}

uint64_t sub_1C0BB73C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0BB73CCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C0BB73D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0BB73D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for JointHUDataCollectionTaskManager.SavedState.CodingKeys()
{
  return &type metadata for JointHUDataCollectionTaskManager.SavedState.CodingKeys;
}

unint64_t sub_1C0BB73F8()
{
  unint64_t result;

  result = qword_1EF641938;
  if (!qword_1EF641938)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A5CE4, &type metadata for JointHUDataCollectionTaskManager.SavedState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF641938);
  }
  return result;
}

unint64_t sub_1C0BB7438()
{
  unint64_t result;

  result = qword_1EF641940;
  if (!qword_1EF641940)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A5D9C, &type metadata for JointHUDataCollectionTaskManager.Point.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF641940);
  }
  return result;
}

unint64_t sub_1C0BB7478()
{
  unint64_t result;

  result = qword_1EF641948;
  if (!qword_1EF641948)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A5D0C, &type metadata for JointHUDataCollectionTaskManager.Point.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF641948);
  }
  return result;
}

unint64_t sub_1C0BB74B8()
{
  unint64_t result;

  result = qword_1EF641950;
  if (!qword_1EF641950)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A5D34, &type metadata for JointHUDataCollectionTaskManager.Point.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF641950);
  }
  return result;
}

unint64_t sub_1C0BB74F8()
{
  unint64_t result;

  result = qword_1EF641958;
  if (!qword_1EF641958)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A5C54, &type metadata for JointHUDataCollectionTaskManager.SavedState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF641958);
  }
  return result;
}

unint64_t sub_1C0BB7538()
{
  unint64_t result;

  result = qword_1EF641960;
  if (!qword_1EF641960)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A5C7C, &type metadata for JointHUDataCollectionTaskManager.SavedState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF641960);
  }
  return result;
}

uint64_t sub_1C0BB7574(uint64_t a1)
{
  uint64_t v1;

  return sub_1C079D180(a1, v1);
}

uint64_t sub_1C0BB757C()
{
  return 0;
}

void JSONDecoder.decode<A>(_:fromURL:)(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = sub_1C106F544();
  v23 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C07967C0();
  if (a1)
  {
    sub_1C106F154();
    sub_1C077CF64();
    sub_1C077CF64();
    v12 = sub_1C106F538();
    v13 = sub_1C1070390();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = sub_1C0775854();
      v15 = (_QWORD *)sub_1C0775854();
      v20 = sub_1C0775854();
      v25 = v20;
      *(_DWORD *)v14 = 136315394;
      v22 = v6;
      v16 = sub_1C1070F00();
      v21 = a2;
      v24 = sub_1C077B0AC(v16, v17);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2112;
      sub_1C077CF64();
      v18 = _swift_stdlib_bridgeErrorToNSError();
      v24 = v18;
      sub_1C10705AC();
      *v15 = v18;
      sub_1C077E6C8();
      sub_1C077E6C8();
      _os_log_impl(&dword_1C0771000, v12, v13, "JSONDecoder: decode fromURL: Can't decode %s with error: %@", (uint8_t *)v14, 0x16u);
      sub_1C07ACF80(&qword_1ED7614A0);
      sub_1C0778610();
      sub_1C0776778();
    }
    sub_1C077E6C8();
    sub_1C077E6C8();
    sub_1C077E6C8();

    (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v6);
    sub_1C07B2D8C(a3, 1, 1, a2);
    sub_1C0776760();
  }
  else
  {
    v10 = v9;
    v22 = v6;
    v11 = (void *)MEMORY[0x1C3BA79F4]();
    sub_1C106A6F0();
    objc_autoreleasePoolPop(v11);
    sub_1C079ACF4(v10);
    sub_1C07B2D8C(a3, 0, 1, a2);
  }
}

void static NSJSONSerialization.decode<A>(_:fromURL:)(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void *v27;
  char *v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  NSObject *v44;
  os_log_type_t v45;
  _BOOL4 v46;
  uint64_t v47;
  uint64_t v48;
  uint8_t *v49;
  uint64_t v50;
  unint64_t v51;
  uint8_t *v52;
  char *v53;
  void (**v54)(char *, char *, uint64_t);
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v62 = a3;
  v5 = sub_1C106AB28();
  v6 = *(_QWORD *)(v5 - 8);
  v56 = v5;
  v57 = v6;
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C106F544();
  v59 = *(_QWORD *)(v9 - 8);
  v60 = v9;
  MEMORY[0x1E0C80A78](v9);
  v61 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v52 - v12;
  v14 = sub_1C1070564();
  v15 = sub_1C1070564();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v52 - v20;
  v22 = sub_1C07967C0();
  if (a1)
  {
    v24 = a2;
    v28 = v61;
    v29 = v62;
    sub_1C106F154();
    sub_1C077CF64();
    sub_1C077CF64();
    v30 = sub_1C106F538();
    v31 = sub_1C1070390();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = sub_1C0775854();
      v33 = (_QWORD *)sub_1C0775854();
      v64 = sub_1C0775854();
      *(_DWORD *)v32 = 136315394;
      v34 = sub_1C1070F00();
      v63 = sub_1C077B0AC(v34, v35);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 12) = 2112;
      sub_1C077CF64();
      v36 = _swift_stdlib_bridgeErrorToNSError();
      v63 = v36;
      sub_1C10705AC();
      *v33 = v36;
      sub_1C077E6C8();
      sub_1C077E6C8();
      _os_log_impl(&dword_1C0771000, v30, v31, "JSONSerialization: decode fromURL: can't decode %s with error: %@", (uint8_t *)v32, 0x16u);
      sub_1C07ACF80(&qword_1ED7614A0);
      sub_1C0778610();
      sub_1C0776778();
    }
    sub_1C077E6C8();
    sub_1C077E6C8();
    sub_1C077E6C8();

    (*(void (**)(char *, uint64_t))(v59 + 8))(v28, v60);
    v37 = v29;
    v38 = v24;
  }
  else
  {
    v54 = (void (**)(char *, char *, uint64_t))v16;
    v55 = v18;
    v52 = 0;
    v53 = v13;
    v25 = v23;
    v26 = v22;
    v27 = (void *)MEMORY[0x1C3BA79F4]();
    sub_1C0BB7D94((uint64_t)v21);
    v58 = v26;
    v61 = v25;
    objc_autoreleasePoolPop(v27);
    v39 = (uint64_t)v55;
    v54[2](v55, v21, v15);
    if (sub_1C07B2D80(v39, 1, v14) != 1)
    {
      sub_1C0787CB0((uint64_t)v21);
      sub_1C07ADEE4();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v62, v39, v14);
      goto LABEL_8;
    }
    v54 = (void (**)(char *, char *, uint64_t))v21;
    sub_1C0787CB0(v39);
    v40 = v53;
    sub_1C106F154();
    v41 = v56;
    v42 = v57;
    v43 = v8;
    (*(void (**)(char *, uint8_t *, uint64_t))(v57 + 16))(v8, v52, v56);
    v44 = sub_1C106F538();
    v45 = sub_1C1070390();
    v46 = os_log_type_enabled(v44, v45);
    v47 = v60;
    if (v46)
    {
      v48 = sub_1C0775854();
      v55 = (char *)a2;
      v49 = (uint8_t *)v48;
      v64 = sub_1C0775854();
      *(_DWORD *)v49 = 136315138;
      v52 = v49 + 4;
      sub_1C0BAFC20();
      v50 = sub_1C1070C0C();
      v63 = sub_1C077B0AC(v50, v51);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v43, v41);
      _os_log_impl(&dword_1C0771000, v44, v45, "JSONSerialization: decode fromURL: failed to decode %s as JSON of expected type.", v49, 0xCu);
      sub_1C0778610();
      sub_1C0776778();
    }
    sub_1C07ADEE4();

    (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v41);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v40, v47);
    sub_1C0787CB0((uint64_t)v54);
    v37 = v62;
    v38 = a2;
  }
  sub_1C07B2D8C(v37, 1, 1, v38);
LABEL_8:
  sub_1C0776760();
}

uint64_t sub_1C0BB7D94@<X0>(uint64_t a1@<X8>)
{
  void *ObjCClassFromMetadata;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  int v7;
  id v9;
  id v10[5];

  v10[4] = *(id *)MEMORY[0x1E0C80C00];
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v3 = (void *)sub_1C106ABF4();
  v10[0] = 0;
  v4 = objc_msgSend(ObjCClassFromMetadata, sel_JSONObjectWithData_options_error_, v3, 0, v10);

  if (v4)
  {
    v5 = v10[0];
    sub_1C107063C();
    swift_unknownObjectRelease();
    v6 = sub_1C1070564();
    v7 = swift_dynamicCast();
    return sub_1C07B2D8C(a1, v7 ^ 1u, 1, v6);
  }
  else
  {
    v9 = v10[0];
    sub_1C106AA14();

    return swift_willThrow();
  }
}

uint64_t sub_1C0BB7EDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[4];

  v0 = sub_1C106BEF0();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1C106BF2C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106BF20();
  sub_1C07A6ED8();
  sub_1C106BF08();
  sub_1C07A0F84();
  sub_1C07A6ED8();
  sub_1C106BF08();
  sub_1C07A0F84();
  sub_1C07803B8((unint64_t *)&qword_1ED762200, type metadata accessor for ErrorHandlingDatabasePool, (uint64_t)&unk_1C108D0AC);
  v5 = v8[3];
  v6 = sub_1C106BF14();
  if (!v5)
  {
    MEMORY[0x1E0C80A78](v6);
    v8[-2] = v4;
    sub_1C0777284();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_1C0BB80B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(uint64_t);
  _QWORD v6[2];

  v0 = sub_1C106BB54();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6[1] = MEMORY[0x1E0DEE9D8];
  sub_1C07803B8((unint64_t *)&unk_1ED75E9C0, v4, MEMORY[0x1E0D23C20]);
  sub_1C07ACF80((uint64_t *)&unk_1ED760080);
  sub_1C0A8F4B4();
  sub_1C1070660();
  sub_1C106C670();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1C0BB81D4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];

  v0 = sub_1C07ACF80(&qword_1ED761500);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1C07ACF80((uint64_t *)&unk_1ED75E9F0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106C514();
  v6 = sub_1C106C55C();
  sub_1C07B2D8C((uint64_t)v5, 0, 1, v6);
  sub_1C106BE3C();
  sub_1C0784B30((uint64_t)v5, (uint64_t *)&unk_1ED75E9F0);
  v7 = *MEMORY[0x1E0D247F8];
  v8 = sub_1C106C604();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v2, v7, v8);
  sub_1C07B2D8C((uint64_t)v2, 0, 1, v8);
  sub_1C106BE84();
  swift_release();
  swift_release();
  sub_1C0784B30((uint64_t)v2, &qword_1ED761500);
  sub_1C106C4FC();
  sub_1C07B2D8C((uint64_t)v5, 0, 1, v6);
  sub_1C106BE3C();
  swift_release();
  return sub_1C0784B30((uint64_t)v5, (uint64_t *)&unk_1ED75E9F0);
}

uint64_t sub_1C0BB8394()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  _QWORD v6[2];

  v1 = sub_1C106BB54();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_1C106C628();
  if (!v0)
  {
    v6[1] = MEMORY[0x1E0DEE9D8];
    sub_1C07803B8((unint64_t *)&unk_1ED75E9C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D23C10], MEMORY[0x1E0D23C20]);
    sub_1C07ACF80((uint64_t *)&unk_1ED760080);
    sub_1C0A8F4B4();
    sub_1C1070660();
    sub_1C106C670();
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return result;
}

uint64_t sub_1C0BB84D8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];

  v0 = sub_1C07ACF80(&qword_1ED761500);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1C07ACF80((uint64_t *)&unk_1ED75E9F0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106C514();
  v6 = sub_1C106C55C();
  sub_1C07B2D8C((uint64_t)v5, 0, 1, v6);
  sub_1C106BE3C();
  swift_release();
  sub_1C0784B30((uint64_t)v5, (uint64_t *)&unk_1ED75E9F0);
  sub_1C106C514();
  sub_1C07B2D8C((uint64_t)v5, 0, 1, v6);
  sub_1C106BE3C();
  swift_release();
  sub_1C0784B30((uint64_t)v5, (uint64_t *)&unk_1ED75E9F0);
  sub_1C106C4FC();
  sub_1C07B2D8C((uint64_t)v5, 0, 1, v6);
  sub_1C106BE3C();
  swift_release();
  sub_1C0784B30((uint64_t)v5, (uint64_t *)&unk_1ED75E9F0);
  v7 = *MEMORY[0x1E0D247F8];
  v8 = sub_1C106C604();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v2, v7, v8);
  sub_1C07B2D8C((uint64_t)v2, 0, 1, v8);
  sub_1C106BE24();
  return sub_1C0784B30((uint64_t)v2, &qword_1ED761500);
}

uint64_t sub_1C0BB86C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  char v12;
  uint64_t result;
  char v14;
  uint64_t (*v15)(char *, uint64_t);
  _BYTE *v16;
  _QWORD v17[2];

  v4 = sub_1C106BF2C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v17 - v9;
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v11((char *)v17 - v9, a2, v4);
  v12 = sub_1C106BEFC();
  if (v2)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  v14 = v12;
  v15 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
  result = v15(v10, v4);
  if ((v14 & 1) != 0)
  {
    v11(v8, a2, v4);
    sub_1C0D5F428();
    v15(v8, v4);
    sub_1C09BD11C();
    swift_allocError();
    *v16 = 2;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1C0BB882C(uint64_t a1)
{
  uint64_t v1;

  return sub_1C0BB86C4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1C0BB8844()
{
  uint64_t result;

  sub_1C07ACF80(&qword_1ED7629F0);
  swift_allocObject();
  result = sub_1C0ECB278();
  qword_1ED78D9B8 = result;
  return result;
}

uint64_t *sub_1C0BB8884()
{
  if (qword_1ED762810 != -1)
    swift_once();
  return &qword_1ED78D9B8;
}

unint64_t sub_1C0BB88C4()
{
  sub_1C1070774();
  swift_bridgeObjectRelease();
  sub_1C106AB10();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  return 0xD000000000000014;
}

uint64_t *sub_1C0BB8958(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v26 = *v1;
  v21 = sub_1C106BC38();
  v24 = *(_QWORD *)(v21 - 8);
  v3 = MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v22 = (char *)&v20 - v5;
  v6 = sub_1C106AB28();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v20 - v11;
  sub_1C07A6EE8();
  sub_1C106AAC8();
  v13 = (char *)v1 + OBJC_IVAR____TtC24IntelligencePlatformCore16KeyValueDatabase_url;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))((uint64_t)v1 + OBJC_IVAR____TtC24IntelligencePlatformCore16KeyValueDatabase_url, v12, v6);
  v25 = (uint64_t)v1 + OBJC_IVAR____TtC24IntelligencePlatformCore16KeyValueDatabase_config;
  sub_1C078E3E0(a1, (uint64_t)v1 + OBJC_IVAR____TtC24IntelligencePlatformCore16KeyValueDatabase_config);
  v14 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for Configuration() + 20));
  v15 = (v14 >> 1) & 4 | v14 & 3;
  sub_1C07A896C();
  v16 = v15 & 0xFFFFFFFFFFFFFFFELL | static NSUserDefaults.keyValueDatabaseLoggingEnabled.getter() & 1;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v13, v6);
  type metadata accessor for ErrorHandlingDatabasePool(0);
  swift_allocObject();
  v17 = v27;
  v18 = sub_1C09BB8DC((uint64_t)v10, v16);
  if (v17)
  {
    sub_1C0799E28();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    sub_1C078D09C(v25);
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(uint64_t *)((char *)v1 + OBJC_IVAR____TtC24IntelligencePlatformCore16KeyValueDatabase_pool) = v18;
    sub_1C0BB7EDC();
    sub_1C0799E28();
  }
  return v1;
}

uint64_t sub_1C0BB8D14()
{
  sub_1C07A6EE8();
  return sub_1C106AAC8();
}

uint64_t sub_1C0BB8D38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC24IntelligencePlatformCore16KeyValueDatabase_url;
  v2 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1C078D09C(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore16KeyValueDatabase_config);
  swift_release();
  return v0;
}

uint64_t sub_1C0BB8D9C()
{
  sub_1C0BB8D38();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0BB8DC0()
{
  return type metadata accessor for KeyValueDatabase();
}

uint64_t type metadata accessor for KeyValueDatabase()
{
  uint64_t result;

  result = qword_1ED761EE8;
  if (!qword_1ED761EE8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C0BB8E00()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1C106AB28();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Configuration();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

unint64_t sub_1C0BB8E94()
{
  return sub_1C0BB88C4();
}

uint64_t sub_1C0BB8EB4()
{
  sub_1C0BB8884();
  return swift_retain();
}

uint64_t sub_1C0BB8ED0()
{
  return sub_1C0BB8D14();
}

uint64_t sub_1C0BB8EE4()
{
  return swift_retain();
}

uint64_t sub_1C0BB8EF8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = type metadata accessor for Configuration();
  MEMORY[0x1E0C80A78](v2);
  sub_1C078E3E0(a1, (uint64_t)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C07A6F08();
  return sub_1C0BB9068(v4, v5, v6);
}

double sub_1C0BB8F84@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double result;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  char v20;

  v4 = type metadata accessor for Configuration();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v17 - v8;
  sub_1C078E3E0(a1, (uint64_t)&v17 - v8);
  sub_1C078E3E0((uint64_t)v9, (uint64_t)v6);
  sub_1C07A6F08();
  sub_1C0BB9158(v10, v11, v12, 0xD00000000000001ELL, v13, 0, 1, v14);
  sub_1C078D09C((uint64_t)v9);
  result = *(double *)&v18;
  v16 = v19;
  *(_OWORD *)a2 = v18;
  *(_OWORD *)(a2 + 16) = v16;
  *(_BYTE *)(a2 + 32) = v20;
  return result;
}

uint64_t sub_1C0BB9068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v6 = type metadata accessor for Configuration();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C078E3E0(a1, (uint64_t)v8);
  type metadata accessor for KeyValueStore();
  swift_allocObject();
  v9 = KeyValueStore.init(config:domain:)((uint64_t)v8, a2, a3);
  sub_1C078D09C(a1);
  return v9;
}

uint64_t sub_1C0BB9158@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;

  v16 = type metadata accessor for Configuration();
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C078E3E0(a1, (uint64_t)v18);
  type metadata accessor for KeyValueStore();
  swift_allocObject();
  v19 = KeyValueStore.init(config:domain:)((uint64_t)v18, a2, a3);
  result = sub_1C078D09C(a1);
  *(_QWORD *)a8 = v19;
  *(_QWORD *)(a8 + 8) = a4;
  *(_QWORD *)(a8 + 16) = a5;
  *(_QWORD *)(a8 + 24) = a6;
  *(_BYTE *)(a8 + 32) = a7 & 1;
  return result;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1C0BB9258()
{
  uint64_t v0;

  v0 = sub_1C107000C();
  nullsub_1(v0);
}

uint64_t KeyValueStore.fetch<A>(key:)()
{
  sub_1C1070564();
  swift_retain();
  sub_1C09BB6C0();
  return swift_release();
}

uint64_t KeyValueStore.__allocating_init(config:domain:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  KeyValueStore.init(config:domain:)(a1, a2, a3);
  return v6;
}

uint64_t KeyValueStore.store<A>(key:value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;
  _QWORD v20[8];
  uint64_t v21;
  _QWORD v22[3];

  v21 = a2;
  sub_1C0BBC968(a4, a4);
  v12 = *(_QWORD *)(a4 - 8);
  swift_allocObject();
  v13 = sub_1C106FF34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v14, a3, a4);
  sub_1C0BB9258();
  v22[2] = v13;
  v15 = sub_1C107000C();
  v22[0] = a6;
  MEMORY[0x1C3BA8174](MEMORY[0x1E0DEAF10], v15, v22);
  v16 = sub_1C106A990();
  v18 = v17;
  result = swift_bridgeObjectRelease();
  if (!v7)
  {
    MEMORY[0x1E0C80A78](result);
    v20[2] = v6;
    v20[3] = a1;
    v20[4] = v21;
    v20[5] = v16;
    v20[6] = v18;
    swift_retain();
    sub_1C077FF60((uint64_t)sub_1C0B8B5D8, (uint64_t)v20, sub_1C078017C);
    sub_1C07B3374(v16, v18);
    return swift_release();
  }
  return result;
}

Swift::Bool __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> KeyValueStore.delete(key:)(Swift::String key)
{
  char v1;
  char v2;

  sub_1C077C14C();
  sub_1C0BB9B14();
  v2 = v1;
  sub_1C07767F4();
  return v2 & 1;
}

void KeyValueStore.keys()()
{
  uint64_t v0;

  sub_1C077E884();
  sub_1C0BB9C44((uint64_t)sub_1C0BBC9C4, v0, (uint64_t (*)(void))sub_1C0A1903C);
  swift_release();
  sub_1C0778534();
}

uint64_t sub_1C0BB9620(uint64_t a1, uint64_t a2)
{
  return sub_1C07A6F2C(a1, a2, (uint64_t (*)(void))sub_1C0A1903C);
}

uint64_t sub_1C0BB962C(uint64_t a1, uint64_t a2)
{
  return sub_1C07A6F2C(a1, a2, (uint64_t (*)(void))sub_1C0A19058);
}

uint64_t sub_1C0BB9638(uint64_t a1, uint64_t a2)
{
  return sub_1C07A6F2C(a1, a2, (uint64_t (*)(void))sub_1C0A19074);
}

uint64_t sub_1C0BB9644(uint64_t a1, uint64_t a2)
{
  return sub_1C07A6F2C(a1, a2, (uint64_t (*)(void))sub_1C0A191E4);
}

uint64_t sub_1C0BB9650(uint64_t a1, uint64_t a2)
{
  return sub_1C07A6F2C(a1, a2, (uint64_t (*)(void))sub_1C0A19200);
}

uint64_t sub_1C0BB965C(uint64_t a1, uint64_t a2)
{
  return sub_1C07A6F2C(a1, a2, (uint64_t (*)(void))sub_1C0A19380);
}

uint64_t sub_1C0BB9668(uint64_t a1, uint64_t a2)
{
  return sub_1C07A6F2C(a1, a2, (uint64_t (*)(void))sub_1C0A1939C);
}

uint64_t sub_1C0BB9674(uint64_t a1, uint64_t a2)
{
  return sub_1C0BB9714(a1, a2, (uint64_t (*)(void))sub_1C0A193B8);
}

void sub_1C0BB9680()
{
  sub_1C0A193D4();
}

uint64_t sub_1C0BB9708(uint64_t a1, uint64_t a2)
{
  return sub_1C0BB9714(a1, a2, (uint64_t (*)(void))sub_1C0A19568);
}

uint64_t sub_1C0BB9714(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

void sub_1C0BB979C(uint64_t a1, uint64_t a2)
{
  sub_1C0BB9860(a1, a2, sub_1C0A19718);
}

uint64_t sub_1C0BB97A8(uint64_t a1, uint64_t a2)
{
  return sub_1C07A6F2C(a1, a2, (uint64_t (*)(void))sub_1C0A1921C);
}

void sub_1C0BB97B4(uint64_t a1, uint64_t a2)
{
  sub_1C0BB9860(a1, a2, sub_1C0A19750);
}

void sub_1C0BB97C0(uint64_t a1, uint64_t a2)
{
  sub_1C0BB9860(a1, a2, sub_1C0A1976C);
}

void sub_1C0BB97CC()
{
  sub_1C0A19934();
  sub_1C0787BA0();
}

uint64_t sub_1C0BB9848(uint64_t a1, uint64_t a2)
{
  return sub_1C07A6F2C(a1, a2, (uint64_t (*)(void))sub_1C0A19AB4);
}

void sub_1C0BB9854(uint64_t a1, uint64_t a2)
{
  sub_1C0BB9860(a1, a2, sub_1C0A19004);
}

void sub_1C0BB9860(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3();
  sub_1C0787BA0();
}

void sub_1C0BB98DC()
{
  sub_1C0A19AEC();
}

uint64_t sub_1C0BB9968(uint64_t a1, uint64_t a2)
{
  return sub_1C07A6F2C(a1, a2, (uint64_t (*)(void))sub_1C0A19C84);
}

uint64_t sub_1C0BB9974(uint64_t a1, uint64_t a2)
{
  return sub_1C07A6F2C(a1, a2, (uint64_t (*)(void))sub_1C0A19CA0);
}

uint64_t sub_1C0BB9980(uint64_t a1, uint64_t a2)
{
  return sub_1C07A6F2C(a1, a2, (uint64_t (*)(void))sub_1C0A19CBC);
}

uint64_t sub_1C0BB998C(uint64_t a1, uint64_t a2)
{
  return sub_1C07A6F2C(a1, a2, (uint64_t (*)(void))sub_1C0A19CD8);
}

uint64_t sub_1C0BB9998(uint64_t a1, uint64_t a2)
{
  return sub_1C07A6F2C(a1, a2, (uint64_t (*)(void))sub_1C0A19CF4);
}

uint64_t sub_1C0BB99A4(uint64_t a1, uint64_t a2)
{
  return sub_1C07A6F2C(a1, a2, (uint64_t (*)(void))sub_1C0A19D10);
}

uint64_t sub_1C0BB99B0(uint64_t a1, uint64_t a2)
{
  return sub_1C07A6F2C(a1, a2, (uint64_t (*)(void))sub_1C0A19D2C);
}

uint64_t sub_1C0BB99BC(uint64_t a1, uint64_t a2)
{
  return sub_1C07A6F2C(a1, a2, (uint64_t (*)(void))sub_1C0A19D48);
}

uint64_t sub_1C0BB99C8(uint64_t a1, uint64_t a2)
{
  return sub_1C07A6F2C(a1, a2, (uint64_t (*)(void))sub_1C0A19D64);
}

uint64_t sub_1C0BB99D4(uint64_t a1, uint64_t a2)
{
  return sub_1C07A6F2C(a1, a2, (uint64_t (*)(void))sub_1C0A19D80);
}

uint64_t sub_1C0BB99E0(uint64_t a1, uint64_t a2)
{
  return sub_1C07A6F2C(a1, a2, (uint64_t (*)(void))sub_1C0A19D9C);
}

uint64_t sub_1C0BB99EC(uint64_t a1, uint64_t a2)
{
  return sub_1C07A6F2C(a1, a2, (uint64_t (*)(void))sub_1C0A19F4C);
}

uint64_t sub_1C0BB99F8(uint64_t a1, uint64_t a2)
{
  return sub_1C07A6F2C(a1, a2, (uint64_t (*)(void))sub_1C0A19F68);
}

uint64_t sub_1C0BB9A04(uint64_t a1, uint64_t a2)
{
  return sub_1C07A6F2C(a1, a2, (uint64_t (*)(void))sub_1C0A19F84);
}

void sub_1C0BB9A10()
{
  sub_1C0A1A6D8();
  sub_1C0787BA0();
}

void sub_1C0BB9A8C()
{
  sub_1C0A1A808();
}

void sub_1C0BB9B14()
{
  sub_1C077FFE4();
  sub_1C0787BA0();
}

uint64_t sub_1C0BB9B94(uint64_t a1, uint64_t a2)
{
  return sub_1C07967D0(a1, a2, (uint64_t (*)(void))sub_1C0AC1C70);
}

void sub_1C0BB9BA0()
{
  sub_1C0AC1E1C();
  sub_1C0787BA0();
}

uint64_t sub_1C0BB9C1C(uint64_t a1, uint64_t a2)
{
  return sub_1C07967D0(a1, a2, (uint64_t (*)(void))sub_1C0AC2024);
}

uint64_t sub_1C0BB9C28(uint64_t a1, uint64_t a2)
{
  return sub_1C07967D0(a1, a2, (uint64_t (*)(void))sub_1C0AC2040);
}

uint64_t sub_1C0BB9C34(uint64_t a1, uint64_t a2)
{
  return sub_1C0BB9C44(a1, a2, (uint64_t (*)(void))sub_1C0AC205C);
}

uint64_t sub_1C0BB9C44(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t sub_1C0BB9CD4(uint64_t a1, uint64_t a2)
{
  return sub_1C07967D0(a1, a2, (uint64_t (*)(void))sub_1C0AC1E00);
}

uint64_t KeyValueStore.init(config:domain:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = v3;
  *(_QWORD *)(v3 + 16) = a2;
  *(_QWORD *)(v3 + 24) = a3;
  v7 = v3 + OBJC_IVAR____TtC24IntelligencePlatformCore13KeyValueStore_config;
  sub_1C078E3E0(a1, v3 + OBJC_IVAR____TtC24IntelligencePlatformCore13KeyValueStore_config);
  if (qword_1ED762810 != -1)
    swift_once();
  swift_retain();
  v8 = sub_1C0CBD7E0();
  swift_release();
  if (v4)
  {
    sub_1C078D09C(a1);
    swift_bridgeObjectRelease();
    sub_1C078D09C(v7);
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(_QWORD *)(v5 + OBJC_IVAR____TtC24IntelligencePlatformCore13KeyValueStore_db) = v8;
    sub_1C106A9A8();
    sub_1C077B5BC();
    *(_QWORD *)(v5 + OBJC_IVAR____TtC24IntelligencePlatformCore13KeyValueStore_encoder) = sub_1C106A99C();
    swift_retain();
    sub_1C106A984();
    swift_release();
    sub_1C106A978();
    sub_1C077B5BC();
    v9 = sub_1C106A96C();
    sub_1C078D09C(a1);
    *(_QWORD *)(v5 + OBJC_IVAR____TtC24IntelligencePlatformCore13KeyValueStore_decoder) = v9;
  }
  return v5;
}

uint64_t KeyValueStore.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1C078D09C(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore13KeyValueStore_config);
  sub_1C078D3DC();
  sub_1C078D3DC();
  sub_1C078D3DC();
  return v0;
}

uint64_t KeyValueStore.__deallocating_deinit()
{
  KeyValueStore.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0BB9EB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  void (*v17)(uint64_t *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[5];
  uint64_t v36[5];
  uint64_t v37[8];

  v34 = a1;
  v29 = a3;
  v4 = sub_1C07ACF80(&qword_1ED760E68);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C07ACF80((uint64_t *)&unk_1ED75E9E0);
  v30 = *(_QWORD *)(v8 - 8);
  v31 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1C07ACF80(&qword_1ED756610);
  v32 = *(_QWORD *)(v11 - 8);
  v33 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106C484();
  if (qword_1ED761A78 != -1)
    swift_once();
  v14 = sub_1C106C49C();
  v15 = sub_1C079E000(v14, (uint64_t)qword_1ED78D968);
  v36[3] = v14;
  v36[4] = MEMORY[0x1E0D24668];
  v16 = sub_1C079DFC4(v36);
  v17 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  v17(v16, v15, v14);
  v18 = *(_QWORD *)(a2 + 16);
  v19 = *(_QWORD *)(a2 + 24);
  v35[3] = MEMORY[0x1E0DEA968];
  v35[4] = MEMORY[0x1E0D24960];
  v35[0] = v18;
  v35[1] = v19;
  v37[3] = sub_1C106BCBC();
  v37[4] = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v37);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C310();
  sub_1C0784B94((uint64_t)v35, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v36);
  sub_1C106C454();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v37);
  sub_1C07ACF80((uint64_t *)&unk_1ED7614B0);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1C1079220;
  if (qword_1ED761A70 != -1)
    swift_once();
  v21 = sub_1C079E000(v14, (uint64_t)qword_1ED78D830);
  v22 = MEMORY[0x1E0D24650];
  *(_QWORD *)(v20 + 56) = v14;
  *(_QWORD *)(v20 + 64) = v22;
  v23 = sub_1C079DFC4((uint64_t *)(v20 + 32));
  v17(v23, v21, v14);
  v24 = v31;
  sub_1C106C10C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v24);
  sub_1C07E6EDC(&qword_1ED756608, &qword_1ED756610, MEMORY[0x1E0D24290]);
  v25 = v33;
  v26 = v37[7];
  v27 = sub_1C106BAD0();
  result = (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v13, v25);
  if (!v26)
    *v29 = v27;
  return result;
}

uint64_t sub_1C0BBA20C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C07B0E28(a5, a6);
  sub_1C0BBCB68();
  sub_1C106BFC8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1C07B3374(a5, a6);
}

uint64_t KeyValueStore.store<A>(_:)()
{
  sub_1C077E884();
  sub_1C078017C();
  return swift_release();
}

{
  uint64_t v0;

  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_getTupleTypeMetadata2();
  v0 = sub_1C106F9DC();
  MEMORY[0x1C3BA8174](MEMORY[0x1E0DEA0D0], v0);
  sub_1C1070018();
  KeyValueStore.store<A>(_:)();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0BBA338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char v18;
  uint64_t *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  char *v26;
  _QWORD *v27;
  char *v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t result;
  _QWORD v44[2];
  char *v45;
  uint64_t *v46;
  char *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD v59[6];
  uint64_t v60;
  uint64_t v61;

  v52 = a6;
  v53 = a3;
  v51 = a1;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v9 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  MEMORY[0x1E0C80A78](v11);
  v13 = (_QWORD *)((char *)v44 - v12);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v44 - v15;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v17 = sub_1C106FF10();
  v61 = v17;
  if (v17 == MEMORY[0x1C3BA6908](a2, TupleTypeMetadata2))
    return swift_bridgeObjectRelease();
  v44[0] = v10;
  v45 = &v16[*(int *)(TupleTypeMetadata2 + 48)];
  v46 = (uint64_t *)v16;
  v44[1] = *(_QWORD *)(v53 + OBJC_IVAR____TtC24IntelligencePlatformCore13KeyValueStore_encoder);
  v47 = (char *)v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = v13;
  v49 = v9;
  v50 = a2;
  v57 = TupleTypeMetadata2;
  while (1)
  {
    v18 = sub_1C106FFB8();
    sub_1C106FF40();
    if ((v18 & 1) != 0)
    {
      v19 = v46;
      (*(void (**)(uint64_t *, unint64_t, uint64_t))(v9 + 16))(v46, a2+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v17, TupleTypeMetadata2);
      goto LABEL_5;
    }
    result = sub_1C10707B0();
    if (v44[0] != 8)
      break;
    v59[0] = result;
    v19 = v46;
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(v9 + 16))(v46, v59, TupleTypeMetadata2);
    swift_unknownObjectRelease();
LABEL_5:
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    MEMORY[0x1C3BA6914](&v61, a2, TupleTypeMetadata2);
    swift_bridgeObjectRelease();
    v20 = (char *)v13 + *(int *)(TupleTypeMetadata2 + 48);
    v21 = v19[1];
    v55 = *v19;
    *v13 = v55;
    v13[1] = v21;
    v22 = *(_QWORD *)(a4 - 8);
    v23 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
    v23(v20, v45, a4);
    sub_1C0BBC968(a4, a4);
    swift_allocObject();
    v56 = v21;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v24 = sub_1C106FF34();
    v26 = v25;
    v27 = v47;
    v28 = &v47[*(int *)(TupleTypeMetadata2 + 48)];
    v29 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
    v29(v28, v20, a4);
    v23(v26, v28, a4);
    sub_1C0BB9258();
    v59[0] = v24;
    v30 = sub_1C107000C();
    v60 = v52;
    MEMORY[0x1C3BA8174](MEMORY[0x1E0DEAF10], v30, &v60);
    v31 = v58;
    v32 = sub_1C106A990();
    v58 = v31;
    if (v31)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_13:
      (*(void (**)(_QWORD *, uint64_t))(v49 + 8))(v48, v57);
      return swift_bridgeObjectRelease();
    }
    v34 = v32;
    v35 = v33;
    swift_bridgeObjectRelease();
    v36 = *(_QWORD *)(v53 + 24);
    v54 = *(_QWORD *)(v53 + 16);
    v37 = (char *)v27 + *(int *)(v57 + 48);
    v38 = v20;
    v40 = v55;
    v39 = v56;
    *v27 = v55;
    v27[1] = v39;
    v41 = v39;
    v29(v37, v38, a4);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C07B0E28(v34, v35);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v37, a4);
    v59[0] = v54;
    v59[1] = v36;
    v59[2] = v40;
    v59[3] = v41;
    v59[4] = v34;
    v59[5] = v35;
    sub_1C0BBCB68();
    v42 = v58;
    sub_1C106BFC8();
    v58 = v42;
    if (v42)
    {
      sub_1C07B3374(v34, v35);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C07B3374(v34, v35);
      goto LABEL_13;
    }
    sub_1C07B3374(v34, v35);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C07B3374(v34, v35);
    v13 = v48;
    v9 = v49;
    TupleTypeMetadata2 = v57;
    (*(void (**)(_QWORD *, uint64_t))(v49 + 8))(v48, v57);
    v17 = v61;
    a2 = v50;
    if (v17 == MEMORY[0x1C3BA6908](v50, TupleTypeMetadata2))
      return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall KeyValueStore.copyAllKeyValues(to:clearCurrentDomain:clearNewDomain:)(Swift::String to, Swift::Bool clearCurrentDomain, Swift::Bool clearNewDomain)
{
  _BYTE v3[24];
  Swift::String v4;
  Swift::Bool v5;

  v3[16] = clearNewDomain;
  v4 = to;
  v5 = clearCurrentDomain;
  sub_1C077E884();
  sub_1C077FF60((uint64_t)sub_1C0BBC9F4, (uint64_t)v3, sub_1C078017C);
  swift_release();
}

uint64_t sub_1C0BBA8F8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t result;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(char *, uint64_t);
  uint64_t *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t *, uint64_t, uint64_t);
  char *v52;
  int v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67[3];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70[3];
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v53 = a6;
  v58 = a5;
  v60 = a3;
  v61 = a4;
  v57 = sub_1C106BE78();
  v56 = *(_QWORD *)(v57 - 8);
  MEMORY[0x1E0C80A78](v57);
  v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1C07ACF80(&qword_1ED761500);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1C07ACF80(&qword_1ED7614F8);
  v59 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v52 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v49 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v49 - v20;
  v22 = MEMORY[0x1E0D24668];
  v62 = v23;
  if ((a2 & 1) == 0)
    goto LABEL_5;
  if (qword_1ED761A78 != -1)
    swift_once();
  v24 = sub_1C106C49C();
  v25 = sub_1C079E000(v24, (uint64_t)qword_1ED78D968);
  v68 = v24;
  v69 = v22;
  v26 = sub_1C079DFC4(v67);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v26, v25, v24);
  v65 = MEMORY[0x1E0DEA968];
  v66 = MEMORY[0x1E0D24960];
  v63 = v60;
  v64 = v61;
  v71 = sub_1C106BCBC();
  v72 = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v70);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C310();
  sub_1C0784B94((uint64_t)&v63, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v67);
  sub_1C07FCDFC();
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v70);
  v27 = v62;
  sub_1C106C124();
  result = (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v21, v27);
  if (!v6)
  {
LABEL_5:
    v29 = v18;
    v73 = v6;
    v54 = v10;
    v55 = a1;
    if (qword_1ED761A78 != -1)
      swift_once();
    v30 = sub_1C106C49C();
    v31 = sub_1C079E000(v30, (uint64_t)qword_1ED78D968);
    v68 = v30;
    v69 = v22;
    v32 = sub_1C079DFC4(v67);
    v51 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
    v51(v32, v31, v30);
    v33 = *(_QWORD *)(v58 + 16);
    v34 = *(_QWORD *)(v58 + 24);
    v35 = MEMORY[0x1E0DEA968];
    v65 = MEMORY[0x1E0DEA968];
    v36 = MEMORY[0x1E0D24960];
    v66 = MEMORY[0x1E0D24960];
    v50 = v33;
    v63 = v33;
    v64 = v34;
    v49 = sub_1C106BCBC();
    v71 = v49;
    v72 = MEMORY[0x1E0D23DC0];
    sub_1C079DFC4(v70);
    v58 = v34;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C106C310();
    sub_1C0784B94((uint64_t)&v63, (uint64_t *)&unk_1ED7626B0);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v67);
    v37 = sub_1C07FCDFC();
    sub_1C106B968();
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v70);
    v38 = sub_1C106C604();
    sub_1C07B2D8C((uint64_t)v13, 1, 1, v38);
    v71 = v35;
    v72 = v36;
    v70[0] = v60;
    v70[1] = v61;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v39 = v54;
    sub_1C106BED8();
    sub_1C0784B94((uint64_t)v70, (uint64_t *)&unk_1ED7626B0);
    v40 = v62;
    v41 = v73;
    sub_1C106C13C();
    v73 = v41;
    if (v41)
    {
      (*(void (**)(char *, uint64_t))(v56 + 8))(v39, v57);
      sub_1C0784B94((uint64_t)v13, &qword_1ED761500);
      return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v29, v40);
    }
    else
    {
      v60 = v37;
      v61 = v31;
      v42 = MEMORY[0x1E0D24668];
      v43 = MEMORY[0x1E0D24960];
      v44 = MEMORY[0x1E0DEA968];
      (*(void (**)(char *, uint64_t))(v56 + 8))(v39, v57);
      sub_1C0784B94((uint64_t)v13, &qword_1ED761500);
      v45 = v40;
      v46 = *(uint64_t (**)(char *, uint64_t))(v59 + 8);
      result = v46(v29, v45);
      if ((v53 & 1) != 0)
      {
        v68 = v30;
        v69 = v42;
        v47 = sub_1C079DFC4(v67);
        v51(v47, v61, v30);
        v65 = v44;
        v66 = v43;
        v63 = v50;
        v64 = v58;
        v71 = v49;
        v72 = MEMORY[0x1E0D23DC0];
        sub_1C079DFC4(v70);
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        sub_1C106C310();
        sub_1C0784B94((uint64_t)&v63, (uint64_t *)&unk_1ED7626B0);
        _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v67);
        v48 = v52;
        sub_1C106B968();
        _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v70);
        sub_1C106C124();
        return v46(v48, v45);
      }
    }
  }
  return result;
}

uint64_t sub_1C0BBAEF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_1C0BBAF24(a1, v2[6], v2[7], v2[2], v2[3], a2);
}

uint64_t sub_1C0BBAF24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  void (*v17)(uint64_t *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54[3];
  uint64_t v55;
  uint64_t v56;
  uint64_t v57[3];
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;

  v43 = a5;
  v49 = a3;
  v48 = a2;
  v46 = a1;
  v41 = a6;
  v44 = a4;
  v39 = sub_1C1070564();
  v38 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v40 = (char *)&v38 - v7;
  v8 = sub_1C07ACF80(&qword_1ED7614F8);
  v45 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v38 - v12;
  if (qword_1ED761A78 != -1)
    swift_once();
  v14 = sub_1C106C49C();
  v15 = sub_1C079E000(v14, (uint64_t)qword_1ED78D968);
  v55 = v14;
  v56 = MEMORY[0x1E0D24668];
  v16 = sub_1C079DFC4(v54);
  v17 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  v17(v16, v15, v14);
  v42 = v6;
  v18 = *(_QWORD *)(v6 + 16);
  v19 = *(_QWORD *)(v6 + 24);
  v20 = MEMORY[0x1E0D24960];
  v52 = MEMORY[0x1E0DEA968];
  v53 = MEMORY[0x1E0D24960];
  v50 = v18;
  v51 = v19;
  v21 = sub_1C106BCBC();
  v22 = MEMORY[0x1E0D23DC0];
  v58 = v21;
  v59 = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v57);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C310();
  sub_1C0784B94((uint64_t)&v50, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v54);
  sub_1C07FCDFC();
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v57);
  if (qword_1ED761A70 != -1)
    swift_once();
  v23 = sub_1C079E000(v14, (uint64_t)qword_1ED78D830);
  v55 = v14;
  v56 = MEMORY[0x1E0D24668];
  v24 = sub_1C079DFC4(v54);
  v17(v24, v23, v14);
  v52 = MEMORY[0x1E0DEA968];
  v53 = v20;
  v50 = v48;
  v51 = v49;
  v58 = v21;
  v59 = v22;
  sub_1C079DFC4(v57);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C310();
  sub_1C0784B94((uint64_t)&v50, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v54);
  sub_1C07E6EDC((unint64_t *)&unk_1ED7618C0, &qword_1ED7614F8, MEMORY[0x1E0D242A0]);
  sub_1C106BDF4();
  v25 = *(void (**)(char *, uint64_t))(v45 + 8);
  v25(v10, v8);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v57);
  sub_1C07E6EDC(&qword_1ED7618B8, &qword_1ED7614F8, MEMORY[0x1E0D24290]);
  sub_1C07FCE70();
  v26 = v47;
  sub_1C106BAC4();
  result = ((uint64_t (*)(char *, uint64_t))v25)(v13, v8);
  if (!v26)
  {
    v28 = v61;
    if (v61)
    {
      v47 = v60;
      v29 = v62;
      v30 = v63;
      v31 = v64;
      v32 = v65;
      v33 = v44;
      v34 = sub_1C107000C();
      v66 = v43;
      MEMORY[0x1C3BA8174](MEMORY[0x1E0DEAF40], v34, &v66);
      sub_1C106A960();
      v45 = v30;
      v46 = v29;
      MEMORY[0x1C3BA8174](MEMORY[0x1E0DEAF50], v34);
      v37 = (uint64_t)v40;
      sub_1C10702E8();
      swift_bridgeObjectRelease();
      if (sub_1C07B2D80(v37, 1, v33) == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
        v60 = 0;
        v61 = 0xE000000000000000;
        sub_1C1070774();
        swift_bridgeObjectRelease();
        v60 = 0xD00000000000002FLL;
        v61 = 0x80000001C10E2BE0;
        sub_1C106FC94();
        result = sub_1C1070954();
        __break(1u);
        return result;
      }
      sub_1C07D8DF8(v47, v28, v46, v45, v31, v32);
      v36 = v41;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v41, v37, v33);
      v35 = 0;
    }
    else
    {
      v35 = 1;
      v33 = v44;
      v36 = v41;
    }
    return sub_1C07B2D8C(v36, v35, 1, v33);
  }
  return result;
}

uint64_t KeyValueStore.fetch<A>(keys:)()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  sub_1C106F9DC();
  sub_1C077C14C();
  sub_1C09BB6C0();
  result = sub_1C07767F4();
  if (!v0)
    return v2;
  return result;
}

uint64_t sub_1C0BBB5AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  sub_1C07ACF80(&qword_1ED762B70);
  swift_getTupleTypeMetadata2();
  sub_1C07E6EDC((unint64_t *)&qword_1ED762440, &qword_1ED762B70, MEMORY[0x1E0DEAF38]);
  result = sub_1C106FDD8();
  if (!v1)
  {
    v4 = sub_1C107000C();
    MEMORY[0x1C3BA8174](MEMORY[0x1E0DEAF38], v4);
    result = sub_1C106F988();
    *a1 = result;
  }
  return result;
}

uint64_t sub_1C0BBB6BC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t *a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t TupleTypeMetadata2;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v33 = a4;
  v34 = a5;
  v32 = a6;
  v9 = sub_1C1070564();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v31 - v11;
  v13 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *a1;
  v18 = a1[1];
  v19 = a2;
  v20 = v17;
  v21 = v35;
  result = sub_1C0BBAF24(v19, v17, v18, a3, v33, (uint64_t)v12);
  if (!v21)
  {
    v35 = v20;
    v23 = v10;
    v24 = v9;
    v25 = v18;
    v26 = v32;
    if (sub_1C07B2D80((uint64_t)v12, 1, a3) == 1)
    {
      (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v24);
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      return sub_1C07B2D8C((uint64_t)v26, 1, 1, TupleTypeMetadata2);
    }
    else
    {
      v28 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
      v28(v16, v12, a3);
      v29 = swift_getTupleTypeMetadata2();
      v30 = (char *)v26 + *(int *)(v29 + 48);
      *v26 = v35;
      v26[1] = v25;
      v28(v30, v16, a3);
      sub_1C07B2D8C((uint64_t)v26, 0, 1, v29);
      return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    }
  }
  return result;
}

uint64_t sub_1C0BBB88C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, BOOL *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  void (*v16)(uint64_t *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  BOOL *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36[3];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39[3];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v28 = a5;
  v29 = a3;
  v31 = a1;
  v7 = sub_1C07ACF80(&qword_1ED7614F8);
  v30 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v27 - v11;
  if (qword_1ED761A78 != -1)
    swift_once();
  v13 = sub_1C106C49C();
  v14 = sub_1C079E000(v13, (uint64_t)qword_1ED78D968);
  v37 = v13;
  v38 = MEMORY[0x1E0D24668];
  v15 = sub_1C079DFC4(v36);
  v16 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  v16(v15, v14, v13);
  v17 = *(_QWORD *)(a2 + 16);
  v18 = *(_QWORD *)(a2 + 24);
  v34 = MEMORY[0x1E0DEA968];
  v35 = MEMORY[0x1E0D24960];
  v32 = v17;
  v33 = v18;
  v19 = sub_1C106BCBC();
  v20 = MEMORY[0x1E0D23DC0];
  v40 = v19;
  v41 = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v39);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C310();
  sub_1C0784B94((uint64_t)&v32, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v36);
  sub_1C07FCDFC();
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v39);
  if (qword_1ED761A70 != -1)
    swift_once();
  v21 = sub_1C079E000(v13, (uint64_t)qword_1ED78D830);
  v37 = v13;
  v38 = MEMORY[0x1E0D24668];
  v22 = sub_1C079DFC4(v36);
  v16(v22, v21, v13);
  v34 = MEMORY[0x1E0DEA968];
  v35 = MEMORY[0x1E0D24960];
  v32 = v29;
  v33 = a4;
  v40 = v19;
  v41 = v20;
  sub_1C079DFC4(v39);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C310();
  sub_1C0784B94((uint64_t)&v32, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v36);
  sub_1C07E6EDC((unint64_t *)&unk_1ED7618C0, &qword_1ED7614F8, MEMORY[0x1E0D242A0]);
  sub_1C106BDF4();
  v23 = *(void (**)(char *, uint64_t))(v30 + 8);
  v23(v10, v7);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v39);
  v24 = v42;
  v25 = sub_1C106C124();
  result = ((uint64_t (*)(char *, uint64_t))v23)(v12, v7);
  if (!v24)
    *v28 = v25 == 1;
  return result;
}

Swift::Int __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> KeyValueStore.delete(keys:)(Swift::OpaquePointer keys)
{
  Swift::Int v1;
  _QWORD v3[4];

  v3[3] = keys._rawValue;
  sub_1C077C14C();
  v1 = sub_1C079D640((uint64_t)sub_1C0BBCA30, (uint64_t)v3, (uint64_t (*)(void))sub_1C0AC1C70);
  sub_1C07767F4();
  return v1;
}

uint64_t sub_1C0BBBC08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  void (*v15)(uint64_t *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[5];
  uint64_t v30[3];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33[3];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v28 = a1;
  v26 = a4;
  v6 = sub_1C07ACF80(&qword_1ED7614F8);
  v27 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v26 - v10;
  if (qword_1ED761A78 != -1)
    swift_once();
  v12 = sub_1C106C49C();
  v13 = sub_1C079E000(v12, (uint64_t)qword_1ED78D968);
  v31 = v12;
  v32 = MEMORY[0x1E0D24668];
  v14 = sub_1C079DFC4(v30);
  v15 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  v15(v14, v13, v12);
  v16 = *(_QWORD *)(a2 + 16);
  v17 = *(_QWORD *)(a2 + 24);
  v29[3] = MEMORY[0x1E0DEA968];
  v29[4] = MEMORY[0x1E0D24960];
  v29[0] = v16;
  v29[1] = v17;
  v18 = sub_1C106BCBC();
  v19 = MEMORY[0x1E0D23DC0];
  v34 = v18;
  v35 = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v33);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C310();
  sub_1C0784B94((uint64_t)v29, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v30);
  sub_1C07FCDFC();
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v33);
  v29[0] = a3;
  if (qword_1ED761A70 != -1)
    swift_once();
  v20 = sub_1C079E000(v12, (uint64_t)qword_1ED78D830);
  v31 = v12;
  v32 = MEMORY[0x1E0D24668];
  v21 = sub_1C079DFC4(v30);
  v15(v21, v20, v12);
  v34 = v18;
  v35 = v19;
  sub_1C079DFC4(v33);
  sub_1C07ACF80(&qword_1ED762B70);
  sub_1C07E6EDC((unint64_t *)&qword_1ED762440, &qword_1ED762B70, MEMORY[0x1E0DEAF38]);
  sub_1C106FD6C();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v30);
  sub_1C07E6EDC((unint64_t *)&unk_1ED7618C0, &qword_1ED7614F8, MEMORY[0x1E0D242A0]);
  sub_1C106BDF4();
  v22 = *(void (**)(char *, uint64_t))(v27 + 8);
  v22(v8, v6);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v33);
  v23 = v36;
  v24 = sub_1C106C124();
  result = ((uint64_t (*)(char *, uint64_t))v22)(v11, v6);
  if (!v23)
    *v26 = v24;
  return result;
}

Swift::Int __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> KeyValueStore.clear()()
{
  uint64_t v0;
  Swift::Int v1;

  sub_1C077C14C();
  v1 = sub_1C079D640((uint64_t)sub_1C0BBCA48, v0, (uint64_t (*)(void))sub_1C0AC1C70);
  sub_1C07767F4();
  return v1;
}

uint64_t sub_1C0BBBF78@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _QWORD v17[5];
  uint64_t v18[5];
  uint64_t v19[5];

  v5 = sub_1C07ACF80(&qword_1ED7614F8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v17[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED761A78 != -1)
    swift_once();
  v9 = sub_1C106C49C();
  v10 = sub_1C079E000(v9, (uint64_t)qword_1ED78D968);
  v18[3] = v9;
  v18[4] = MEMORY[0x1E0D24668];
  v11 = sub_1C079DFC4(v18);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v11, v10, v9);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v17[3] = MEMORY[0x1E0DEA968];
  v17[4] = MEMORY[0x1E0D24960];
  v17[0] = v12;
  v17[1] = v13;
  v19[3] = sub_1C106BCBC();
  v19[4] = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v19);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C310();
  sub_1C0784B94((uint64_t)v17, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v18);
  sub_1C07FCDFC();
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v19);
  v14 = sub_1C106C124();
  result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (!v2)
    *a2 = v14;
  return result;
}

uint64_t sub_1C0BBC13C()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[3];
  uint64_t v5;

  v5 = 0;
  v4[2] = &v5;
  swift_retain();
  sub_1C077FF60((uint64_t)sub_1C0BBCBA4, (uint64_t)v4, sub_1C0777284);
  swift_release();
  sub_1C07ACF80(&qword_1ED761310);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1079220;
  *(_QWORD *)(inited + 32) = 0x736E69616D6F44;
  *(_QWORD *)(inited + 40) = 0xE700000000000000;
  v1 = v5;
  *(_QWORD *)(inited + 72) = sub_1C07ACF80(&qword_1ED75D0B0);
  v2 = MEMORY[0x1E0DEE9E0];
  if (v1)
    v2 = v1;
  *(_QWORD *)(inited + 48) = v2;
  return sub_1C106F97C();
}

uint64_t sub_1C0BBC238(unint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t **v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t result;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  sqlite3_stmt *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  sqlite3_stmt *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t **v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t **v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;

  v48 = a1;
  v43 = a2;
  v2 = sub_1C07ACF80(&qword_1ED760E68);
  v45 = *(_QWORD *)(v2 - 8);
  v46 = (char *)v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C07ACF80((uint64_t *)&unk_1ED75E9E0);
  v47 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (unint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v43 - v9;
  v11 = sub_1C106C49C();
  v12 = *(uint64_t ***)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED761A78 != -1)
LABEL_27:
    swift_once();
  v15 = sub_1C079E000(v11, (uint64_t)qword_1ED78D968);
  v16 = v12[2];
  ((void (*)(char *, uint64_t, uint64_t))v16)(v14, v15, v11);
  sub_1C106C484();
  sub_1C07ACF80((uint64_t *)&unk_1ED7614B0);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1C1078FC0;
  v18 = MEMORY[0x1E0D24650];
  *(_QWORD *)(v17 + 56) = v11;
  *(_QWORD *)(v17 + 64) = v18;
  v19 = sub_1C079DFC4((uint64_t *)(v17 + 32));
  ((void (*)(uint64_t *, char *, uint64_t))v16)(v19, v14, v11);
  v44 = v12;
  v52 = v11;
  v53 = MEMORY[0x1E0D24668];
  v20 = sub_1C079DFC4((uint64_t *)&v50);
  ((void (*)(uint64_t *, char *, uint64_t))v16)(v20, v14, v11);
  v21 = sub_1C106BCBC();
  v22 = MEMORY[0x1E0D23DB0];
  *(_QWORD *)(v17 + 96) = v21;
  *(_QWORD *)(v17 + 104) = v22;
  sub_1C079DFC4((uint64_t *)(v17 + 72));
  sub_1C106C490();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)&v50);
  v23 = v46;
  sub_1C106C46C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *))(v45 + 8))(v4, v23);
  sub_1C07ACF80(&qword_1ED74D520);
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1C1079220;
  v25 = MEMORY[0x1E0D24658];
  *(_QWORD *)(v24 + 56) = v11;
  *(_QWORD *)(v24 + 64) = v25;
  v26 = sub_1C079DFC4((uint64_t *)(v24 + 32));
  ((void (*)(uint64_t *, char *, uint64_t))v16)(v26, v14, v11);
  sub_1C07E6EDC(&qword_1ED748270, (uint64_t *)&unk_1ED75E9E0, MEMORY[0x1E0D24288]);
  sub_1C106BFE0();
  swift_bridgeObjectRelease();
  v12 = *(uint64_t ***)(v47 + 8);
  ((void (*)(unint64_t, uint64_t))v12)(v7, v5);
  sub_1C07E6EDC(&qword_1ED75E9D8, (uint64_t *)&unk_1ED75E9E0, MEMORY[0x1E0D24290]);
  v27 = v49;
  v28 = sub_1C106BAF4();
  if (v27)
  {
    ((void (*)(char *, uint64_t))v12)(v10, v5);
    return ((uint64_t (*)(char *, uint64_t))v44[1])(v14, v11);
  }
  v30 = v28;
  v46 = v14;
  v47 = v11;
  ((void (*)(char *, uint64_t))v12)(v10, v5);
  if (v30 >> 62)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v5 = sub_1C10709B4();
    swift_bridgeObjectRelease();
    if (v5)
      goto LABEL_6;
LABEL_29:
    swift_bridgeObjectRelease();
    v4 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_30:
    v42 = sub_1C0D9A038((uint64_t)v4);
    ((void (*)(char *, uint64_t))v44[1])(v46, v47);
    *v43 = v42;
    return swift_bridgeObjectRelease();
  }
  v5 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v5)
    goto LABEL_29;
LABEL_6:
  v54 = (char *)MEMORY[0x1E0DEE9D8];
  v4 = (char *)&v54;
  sub_1C09D479C();
  if ((v5 & 0x8000000000000000) == 0)
  {
    v14 = 0;
    v48 = v30 & 0xC000000000000001;
    v49 = v30;
    while (1)
    {
      if ((char *)v5 == v14)
      {
        __break(1u);
        goto LABEL_27;
      }
      if (v48)
      {
        v32 = MEMORY[0x1C3BA70DC](v14, v30);
      }
      else
      {
        v32 = *(_QWORD *)(v30 + 8 * (_QWORD)v14 + 32);
        swift_retain();
      }
      sub_1C106C370();
      v33 = sub_1C106C3A0();
      if (v33)
      {
        MEMORY[0x1E0C80A78](v33);
        v12 = &v43 - 4;
        *(&v43 - 2) = (uint64_t *)v32;
        *(&v43 - 1) = 0;
        v31 = sqlite3_column_type(v34, 0);
        if ((_DWORD)v31 == 5)
          goto LABEL_32;
        v50 = (uint64_t **)sub_1C106FB98();
        v51 = v35;
      }
      else
      {
        sub_1C106C364();
      }
      v36 = (uint64_t)v50;
      v11 = v51;
      sub_1C106C370();
      v37 = sub_1C106C3A0();
      if (v37)
      {
        MEMORY[0x1E0C80A78](v37);
        *(&v43 - 2) = (uint64_t *)v32;
        *(&v43 - 1) = (uint64_t *)1;
        v39 = sqlite3_column_type(v38, 1);
        if ((_DWORD)v39 == 5)
        {
          MEMORY[0x1E0C80A78](v39);
          *(&v43 - 2) = (uint64_t *)sub_1C0AACB8C;
          *(&v43 - 1) = (uint64_t *)(&v43 - 4);
          sub_1C106C1C0();
          goto LABEL_34;
        }
        v40 = sub_1C1070DC8();
        swift_release();
        v50 = (uint64_t **)v40;
      }
      else
      {
        sub_1C106C364();
        swift_release();
      }
      v12 = v50;
      v4 = v54;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C09D479C();
        v4 = v54;
      }
      v7 = *((_QWORD *)v4 + 2);
      v10 = (char *)(v7 + 1);
      if (v7 >= *((_QWORD *)v4 + 3) >> 1)
      {
        sub_1C09D479C();
        v4 = v54;
      }
      ++v14;
      *((_QWORD *)v4 + 2) = v10;
      v41 = &v4[24 * v7];
      *((_QWORD *)v41 + 4) = v36;
      *((_QWORD *)v41 + 5) = v11;
      *((_QWORD *)v41 + 6) = v12;
      v30 = v49;
      if ((char *)v5 == v14)
      {
        swift_bridgeObjectRelease();
        goto LABEL_30;
      }
    }
  }
  __break(1u);
LABEL_32:
  MEMORY[0x1E0C80A78](v31);
  *(&v43 - 2) = (uint64_t *)sub_1C0AACDF8;
  *(&v43 - 1) = (uint64_t *)v12;
  sub_1C106C1C0();
LABEL_34:
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1C0BBC968(uint64_t a1, uint64_t a2)
{
  if (sub_1C0BBCBBC(a2))
    return sub_1C07ACF80(&qword_1ED762CD0);
  else
    return sub_1C1070C18();
}

uint64_t sub_1C0BBC9A8@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t *v2;

  return sub_1C0BBB88C(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_1C0BBC9C4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1C0BB9EB4(a1, v2, a2);
}

uint64_t sub_1C0BBC9DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1C07974E8();
  return sub_1C0BBA338(v0, v1, v2, v3, v4, v5);
}

uint64_t sub_1C0BBC9F4(uint64_t a1)
{
  uint64_t v1;

  return sub_1C0BBA8F8(a1, *(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(unsigned __int8 *)(v1 + 48));
}

uint64_t sub_1C0BBCA18()
{
  uint64_t *v0;

  sub_1C07974E8();
  return sub_1C0BBB5AC(v0);
}

uint64_t sub_1C0BBCA30@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1C0BBBC08(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1C0BBCA48@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1C0BBBF78(v1, a1);
}

_UNKNOWN **sub_1C0BBCA60()
{
  return &off_1E7A220C8;
}

uint64_t type metadata accessor for KeyValueStore()
{
  uint64_t result;

  result = qword_1ED762D80;
  if (!qword_1ED762D80)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C0BBCAA4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Configuration();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for KeyValueStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of KeyValueStore.__allocating_init(config:domain:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_1C0BBCB50()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;

  sub_1C07974E8();
  return sub_1C0BBB6BC(v0, v1, v2, v3, v4, v5);
}

unint64_t sub_1C0BBCB68()
{
  unint64_t result;

  result = qword_1ED75F198;
  if (!qword_1ED75F198)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A6128, &type metadata for KeyValuePair);
    atomic_store(result, (unint64_t *)&qword_1ED75F198);
  }
  return result;
}

uint64_t sub_1C0BBCBA4(unint64_t a1)
{
  uint64_t v1;

  return sub_1C0BBC238(a1, *(uint64_t **)(v1 + 16));
}

uint64_t sub_1C0BBCBBC(uint64_t a1)
{
  if (swift_isClassType())
    return a1;
  else
    return 0;
}

uint64_t sub_1C0BBCBE8(uint64_t a1)
{
  return sub_1C0BBCC08(a1, qword_1ED78D968);
}

uint64_t sub_1C0BBCBF8(uint64_t a1)
{
  return sub_1C0BBCC08(a1, qword_1ED78D830);
}

uint64_t sub_1C0BBCC08(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_1C106C49C();
  sub_1C0800A9C(v3, a2);
  sub_1C079E000(v3, (uint64_t)a2);
  sub_1C0BBCC80();
  return sub_1C106C4B4();
}

unint64_t sub_1C0BBCC80()
{
  unint64_t result;

  result = qword_1ED761A50;
  if (!qword_1ED761A50)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A6168, &type metadata for KeyValuePair.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED761A50);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for KeyValuePair.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C0BBCD08 + 4 * byte_1C10A5F35[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C0BBCD3C + 4 * byte_1C10A5F30[v4]))();
}

uint64_t sub_1C0BBCD3C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0BBCD44(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0BBCD4CLL);
  return result;
}

uint64_t sub_1C0BBCD58(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0BBCD60);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C0BBCD64(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0BBCD6C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for KeyValuePair.CodingKeys()
{
  return &type metadata for KeyValuePair.CodingKeys;
}

ValueMetadata *type metadata accessor for KeyValuePair()
{
  return &type metadata for KeyValuePair;
}

uint64_t sub_1C0BBCD98(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x6E69616D6F64 && a2 == 0xE600000000000000;
  if (v2 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 7955819 && a2 == 0xE300000000000000;
    if (v6 || (sub_1C1070CB4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1C1070CB4();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1C0BBCEC4(char a1)
{
  if (!a1)
    return 0x6E69616D6F64;
  if (a1 == 1)
    return 7955819;
  return 0x65756C6176;
}

uint64_t sub_1C0BBCF0C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  __int128 v11;

  v3 = v1;
  v5 = sub_1C07ACF80((uint64_t *)&unk_1ED761588);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C07A9480(a1, a1[3]);
  sub_1C0BBCC80();
  sub_1C1070EB8();
  LOBYTE(v11) = 0;
  sub_1C0799CA0();
  if (!v2)
  {
    LOBYTE(v11) = 1;
    sub_1C0799CA0();
    v11 = *(_OWORD *)(v3 + 32);
    v10[15] = 2;
    sub_1C08C131C();
    sub_1C1070BB8();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1C0BBD040@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v5 = sub_1C07ACF80(&qword_1ED762EF8);
  MEMORY[0x1E0C80A78](v5);
  sub_1C07A9480(a1, a1[3]);
  sub_1C0BBCC80();
  sub_1C1070E94();
  if (v2)
    return sub_1C0775880();
  v6 = sub_1C077E434();
  v8 = v7;
  v14 = v6;
  LOBYTE(v15) = 1;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v9 = sub_1C077E434();
  v11 = v10;
  v13 = v9;
  sub_1C07FD0D8();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C1070AE0();
  sub_1C077C2F4();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C07B0E28(v15, v16);
  sub_1C0775834();
  swift_bridgeObjectRelease();
  sub_1C0775880();
  swift_bridgeObjectRelease();
  sub_1C0775834();
  result = sub_1C07B3374(v15, v16);
  *a2 = v14;
  a2[1] = v8;
  a2[2] = v13;
  a2[3] = v11;
  a2[4] = v15;
  a2[5] = v16;
  return result;
}

uint64_t sub_1C0BBD244()
{
  char *v0;

  return sub_1C0BBCEC4(*v0);
}

uint64_t sub_1C0BBD24C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0BBCD98(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0BBD270()
{
  sub_1C0BBCC80();
  return sub_1C1070EE8();
}

uint64_t sub_1C0BBD298()
{
  sub_1C0BBCC80();
  return sub_1C1070EF4();
}

double sub_1C0BBD2C0@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;

  sub_1C0BBD040(a1, (uint64_t *)v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1C0BBD300(_QWORD *a1)
{
  return sub_1C0BBCF0C(a1);
}

uint64_t sub_1C0BBD314()
{
  sub_1C0BBD5D8();
  return sub_1C106BDDC();
}

uint64_t sub_1C0BBD364()
{
  sub_1C0BBCB68();
  return sub_1C106BFD4();
}

uint64_t sub_1C0BBD3B4()
{
  sub_1C0BBCB68();
  return sub_1C106BFC8();
}

uint64_t sub_1C0BBD3F8()
{
  sub_1C0BBCB68();
  return sub_1C106BFBC();
}

uint64_t sub_1C0BBD43C()
{
  sub_1C0BBD614();
  return sub_1C106BD58();
}

unint64_t sub_1C0BBD480()
{
  unint64_t result;

  result = qword_1ED7610A0;
  if (!qword_1ED7610A0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A5F68, &type metadata for KeyValuePair);
    atomic_store(result, (unint64_t *)&qword_1ED7610A0);
  }
  return result;
}

unint64_t sub_1C0BBD4C4()
{
  unint64_t result;

  result = qword_1EF6419A0;
  if (!qword_1EF6419A0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A6100, &type metadata for KeyValuePair.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF6419A0);
  }
  return result;
}

unint64_t sub_1C0BBD504()
{
  unint64_t result;

  result = qword_1ED75F1A0;
  if (!qword_1ED75F1A0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A5FB8, &type metadata for KeyValuePair);
    atomic_store(result, (unint64_t *)&qword_1ED75F1A0);
  }
  return result;
}

unint64_t sub_1C0BBD544()
{
  unint64_t result;

  result = qword_1ED761A60;
  if (!qword_1ED761A60)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A6070, &type metadata for KeyValuePair.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED761A60);
  }
  return result;
}

unint64_t sub_1C0BBD584()
{
  unint64_t result;

  result = qword_1ED761A58;
  if (!qword_1ED761A58)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A6098, &type metadata for KeyValuePair.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED761A58);
  }
  return result;
}

uint64_t sub_1C0BBD5C0()
{
  return 0x65756C617679656BLL;
}

unint64_t sub_1C0BBD5D8()
{
  unint64_t result;

  result = qword_1ED7625A8;
  if (!qword_1ED7625A8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A6048, &type metadata for KeyValuePair);
    atomic_store(result, (unint64_t *)&qword_1ED7625A8);
  }
  return result;
}

unint64_t sub_1C0BBD614()
{
  unint64_t result;

  result = qword_1ED761A88;
  if (!qword_1ED761A88)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A6020, &type metadata for KeyValuePair);
    atomic_store(result, (unint64_t *)&qword_1ED761A88);
  }
  return result;
}

void KnosisServer.init(config:platformConfig:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v19 = a1;
  v20 = sub_1C106D78C();
  v6 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  sub_1C0798C18();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C106D72C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  sub_1C077AF80();
  v14 = v12 - v13;
  MEMORY[0x1E0C80A78](v15);
  v16 = sub_1C07A286C();
  sub_1C078E3E0(v16, (uint64_t)v9);
  sub_1C0BBD7D8((uint64_t)v9, 0, v3);
  if (v2)
  {
    sub_1C078D09C(a2);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v19, v20);
  }
  else
  {
    v18 = a2;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v19, v20);
    sub_1C079AD04(v14, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16));
    sub_1C106D7F8();
    sub_1C078D09C(v18);
    sub_1C078F824();
    sub_1C077F1FC(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
  }
  sub_1C07757D0();
}

uint64_t sub_1C0BBD7D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(void);
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(void);
  uint64_t *v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v63;
  void (*v64)(void);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  uint64_t v75;
  _UNKNOWN **v76;
  _BYTE v77[48];
  uint64_t v78;

  type metadata accessor for Configuration();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  sub_1C077AF80();
  v10 = v8 - v9;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v63 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v63 - v15;
  if ((*(_BYTE *)(a1 + *(int *)(v17 + 20) + 8) & 0x20) != 0)
  {
    type metadata accessor for GlobalKnowledgeStore(0);
    sub_1C078E3E0(a1, (uint64_t)v16);
    v19 = sub_1C0A736B0((uint64_t)v16);
    if (v3)
    {
      sub_1C07974F8();
      return swift_bridgeObjectRelease();
    }
    v18 = v19;
  }
  else
  {
    v18 = 0;
  }
  sub_1C078E3E0(a1, (uint64_t)v13);
  v20 = type metadata accessor for GraphStore();
  sub_1C077B5BC();
  swift_retain();
  v21 = GraphStore.init(config:)((uint64_t)v13);
  if (v3)
  {
    sub_1C07974F8();
    swift_release_n();
    return swift_bridgeObjectRelease();
  }
  v67 = a3;
  v73 = a2;
  v78 = v18;
  v75 = v20;
  v76 = &off_1ED7530F0;
  *(_QWORD *)&v74 = v21;
  sub_1C077DD60(&v74, (uint64_t)v77);
  sub_1C07ACF80((uint64_t *)&unk_1ED753A30);
  v23 = sub_1C07ACF80((uint64_t *)&unk_1ED753A00);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 72);
  v26 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1C107A8C0;
  v72 = v27;
  v28 = v27 + v26;
  v29 = v27 + v26 + *(int *)(v23 + 48);
  v30 = *MEMORY[0x1E0D3CD00];
  v31 = sub_1C106E4AC();
  v70 = *(_QWORD *)(v31 - 8);
  v71 = v10;
  v32 = *(void (**)(void))(v70 + 104);
  sub_1C079E67C(v28, v30);
  *(_QWORD *)(v29 + 24) = &type metadata for TriplesIndexHandler;
  v33 = sub_1C0BBDE5C();
  *(_QWORD *)(v29 + 32) = v33;
  v34 = sub_1C07A0FAC();
  sub_1C07A0FB8(v34);
  v35 = v28 + v25 + *(int *)(v23 + 48);
  v36 = *MEMORY[0x1E0D3CCF8];
  v69 = v28 + v25;
  sub_1C079E67C(v28 + v25, v36);
  *(_QWORD *)(v35 + 24) = &type metadata for TriplesIndexHandler;
  *(_QWORD *)(v35 + 32) = v33;
  v37 = sub_1C07A0FAC();
  sub_1C07A0FB8(v37);
  v38 = v28 + 2 * v25;
  v66 = v23;
  v39 = v38 + *(int *)(v23 + 48);
  v40 = *MEMORY[0x1E0D3CD08];
  v68 = v38;
  sub_1C079E67C(v38, v40);
  *(_QWORD *)(v39 + 24) = &type metadata for TriplesIndexHandler;
  *(_QWORD *)(v39 + 32) = v33;
  v63 = v33;
  v41 = sub_1C07A0FAC();
  sub_1C07A0FB8(v41);
  v65 = v25;
  v42 = v28 + 3 * v25;
  v43 = *MEMORY[0x1E0D3CD30];
  v64 = v32;
  ((void (*)(uint64_t, uint64_t, uint64_t))v32)(v42, v43, v31);
  v44 = v71;
  sub_1C078E3E0(a1, v71);
  v45 = type metadata accessor for OntologyStore();
  sub_1C077B5BC();
  v46 = OntologyStore.init(config:)(v44);
  v47 = v66;
  v48 = (uint64_t *)(v42 + *(int *)(v66 + 48));
  v75 = v45;
  v76 = &off_1EF645898;
  *(_QWORD *)&v74 = v46;
  v49 = v63;
  v48[3] = (uint64_t)&type metadata for TriplesIndexHandler;
  v48[4] = v49;
  v50 = sub_1C07A0FAC();
  *v48 = v50;
  sub_1C077DD60(&v74, v50 + 16);
  v51 = v28;
  v53 = v64;
  v52 = v65;
  v54 = (uint64_t *)(v51 + 4 * v65 + *(int *)(v47 + 48));
  v64();
  v54[3] = (uint64_t)&type metadata for GlobalKnowledgeIndexHandler;
  v55 = sub_1C0BBDF6C();
  v54[4] = v55;
  v56 = v78;
  *v54 = v78;
  v57 = *(int *)(v47 + 48);
  v58 = v56;
  v59 = (_QWORD *)(v51 + 5 * v52 + v57);
  v53();
  v59[3] = &type metadata for GlobalKnowledgeIndexHandler;
  v59[4] = v55;
  *v59 = v58;
  swift_retain();
  sub_1C07ACF80(&qword_1ED7539F8);
  sub_1C0BBDFA8();
  v60 = sub_1C106F97C();
  v61 = v73;
  if (v73)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v74 = v60;
    sub_1C0BBE044(v61, (uint64_t)sub_1C0BBDFE8, 0, isUniquelyReferenced_nonNull_native, (uint64_t *)&v74);
    swift_bridgeObjectRelease();
  }
  sub_1C106D720();
  swift_release();
  sub_1C07974F8();
  return sub_1C0BBDF38((uint64_t)v77);
}

void sub_1C0BBDCD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v20 = a3;
  v22 = a1;
  v6 = sub_1C106D78C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  sub_1C0798C18();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1C106D72C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  sub_1C077AF80();
  v15 = v13 - v14;
  MEMORY[0x1E0C80A78](v16);
  v17 = sub_1C07A286C();
  sub_1C078E3E0(v17, (uint64_t)v10);
  v18 = v21;
  sub_1C0BBD7D8((uint64_t)v10, v20, v3);
  if (v18)
  {
    sub_1C078D09C(a2);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v22, v6);
  }
  else
  {
    v21 = a2;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v4, v22, v6);
    sub_1C079AD04(v15, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 16));
    sub_1C106D7F8();
    sub_1C078D09C(v21);
    sub_1C07ADEFC();
    sub_1C077F1FC(*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
  }
  sub_1C07757D0();
}

unint64_t sub_1C0BBDE5C()
{
  unint64_t result;

  result = qword_1ED753A18;
  if (!qword_1ED753A18)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BB504, &type metadata for TriplesIndexHandler);
    atomic_store(result, (unint64_t *)&qword_1ED753A18);
  }
  return result;
}

uint64_t sub_1C0BBDE98()
{
  uint64_t v0;

  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1C0BBDEBC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for StoredLocationVisit(a2, a1);
  return a2;
}

uint64_t sub_1C0BBDEF8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C07ACF80((uint64_t *)&unk_1ED753A00);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0BBDF38(uint64_t a1)
{
  destroy for StoredLocationVisit();
  return a1;
}

unint64_t sub_1C0BBDF6C()
{
  unint64_t result;

  result = qword_1ED753A20;
  if (!qword_1ED753A20)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1099AFC, &type metadata for GlobalKnowledgeIndexHandler);
    atomic_store(result, (unint64_t *)&qword_1ED753A20);
  }
  return result;
}

unint64_t sub_1C0BBDFA8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED7531C0;
  if (!qword_1ED7531C0)
  {
    v1 = sub_1C106E4AC();
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0D3CD58], v1);
    atomic_store(result, (unint64_t *)&qword_1ED7531C0);
  }
  return result;
}

void sub_1C0BBDFE8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(sub_1C07ACF80(&qword_1EF633E80) + 48);
  v5 = a2 + *(int *)(sub_1C07ACF80((uint64_t *)&unk_1ED753A00) + 48);
  sub_1C090B3C0(a2, v5, a1, v4);
}

uint64_t sub_1C0BBE044(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  __int128 *v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  char v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t result;
  _QWORD v33[3];
  __int128 v34[2];
  __int128 v35[2];
  uint64_t v36;
  uint64_t v37;

  v9 = sub_1C106E4AC();
  v37 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1C07ACF80(&qword_1EF6419A8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C090A414(&v36);
  v33[2] = a1;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v33[1] = a3;
  swift_retain();
  sub_1C090A99C((uint64_t)v14);
  v15 = sub_1C07ACF80((uint64_t *)&unk_1ED753A00);
  if (sub_1C07B2D80((uint64_t)v14, 1, v15) == 1)
  {
LABEL_15:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1C0827370();
    return swift_release();
  }
  v16 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
  while (1)
  {
    v17 = (__int128 *)&v14[*(int *)(v15 + 48)];
    v16(v11, v14, v9);
    sub_1C077DD60(v17, (uint64_t)v35);
    v18 = *a5;
    sub_1C07DCFB8();
    v21 = v20;
    v22 = *(_QWORD *)(v18 + 16);
    v23 = (v19 & 1) == 0;
    if (__OFADD__(v22, v23))
      break;
    v24 = v19;
    if (*(_QWORD *)(v18 + 24) >= v22 + v23)
    {
      if ((a4 & 1) != 0)
      {
        if ((v19 & 1) != 0)
          goto LABEL_10;
      }
      else
      {
        sub_1C07ACF80(&qword_1EF6419B0);
        sub_1C1070918();
        if ((v24 & 1) != 0)
          goto LABEL_10;
      }
    }
    else
    {
      sub_1C0A4B8DC();
      sub_1C07DCFB8();
      if ((v24 & 1) != (v26 & 1))
        goto LABEL_18;
      v21 = v25;
      if ((v24 & 1) != 0)
      {
LABEL_10:
        sub_1C07D6D1C((uint64_t)v35, (uint64_t)v34);
        _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v35);
        (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v9);
        v27 = *(_QWORD *)(*a5 + 56) + 40 * v21;
        _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v27);
        sub_1C077DD60(v34, v27);
        goto LABEL_14;
      }
    }
    v28 = (_QWORD *)*a5;
    *(_QWORD *)(*a5 + 8 * (v21 >> 6) + 64) |= 1 << v21;
    v16((char *)(v28[6] + *(_QWORD *)(v37 + 72) * v21), v11, v9);
    sub_1C077DD60(v35, v28[7] + 40 * v21);
    v29 = v28[2];
    v30 = __OFADD__(v29, 1);
    v31 = v29 + 1;
    if (v30)
      goto LABEL_17;
    v28[2] = v31;
LABEL_14:
    sub_1C090A99C((uint64_t)v14);
    v15 = sub_1C07ACF80((uint64_t *)&unk_1ED753A00);
    a4 = 1;
    if (sub_1C07B2D80((uint64_t)v14, 1, v15) == 1)
      goto LABEL_15;
  }
  __break(1u);
LABEL_17:
  __break(1u);
LABEL_18:
  result = sub_1C1070D44();
  __break(1u);
  return result;
}

id sub_1C0BBE34C()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v1 = (void *)sub_1C106FAF0();
  sub_1C07767AC();
  v2 = objc_msgSend(v0, sel_initWithMachServiceName_, v1);

  return v2;
}

uint64_t sub_1C0BBE3B8(uint64_t a1)
{
  return sub_1C0BBE3F0(a1, (uint64_t *)&unk_1ED748280, qword_1ED78CB70, (uint64_t (*)(_QWORD))MEMORY[0x1E0D3C208]);
}

uint64_t sub_1C0BBE3D4(uint64_t a1)
{
  return sub_1C0BBE3F0(a1, &qword_1ED75E630, qword_1ED78CB88, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
}

uint64_t sub_1C0BBE3F0(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1C07ACF80(a2);
  sub_1C0800A9C(v6, a3);
  v7 = sub_1C079E000(v6, (uint64_t)a3);
  v8 = a4(0);
  return sub_1C07B2D8C(v7, 1, 1, v8);
}

void sub_1C0BBE454()
{
  uint64_t v0;

  sub_1C0BBE470();
  qword_1ED78CDC8 = v0;
}

void sub_1C0BBE470()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v0 = sub_1C07ACF80(&qword_1ED75E630);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v17 - v4;
  v6 = sub_1C106D78C();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v17 - v10;
  v12 = qword_1EF6D17B8;
  if (qword_1EF6D17B8)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C106D780();
    if (qword_1ED74D240 != -1)
      swift_once();
    v13 = sub_1C079E000(v0, (uint64_t)qword_1ED78CB88);
    swift_beginAccess();
    sub_1C07B9D5C(v13, (uint64_t)v2);
    v14 = type metadata accessor for Configuration();
    if (sub_1C07B2D80((uint64_t)v2, 1, v14) != 1)
    {
      sub_1C106D804();
      sub_1C0BBDCD8((uint64_t)v8, (uint64_t)v2, v12);
      return;
    }
    __break(1u);
  }
  else
  {
    sub_1C106D780();
    if (qword_1ED74D240 != -1)
      swift_once();
    v15 = sub_1C079E000(v0, (uint64_t)qword_1ED78CB88);
    swift_beginAccess();
    sub_1C07B9D5C(v15, (uint64_t)v5);
    v16 = type metadata accessor for Configuration();
    if (sub_1C07B2D80((uint64_t)v5, 1, v16) != 1)
    {
      sub_1C106D804();
      KnosisServer.init(config:platformConfig:)((uint64_t)v11, (uint64_t)v5);
      return;
    }
  }
  __break(1u);
}

void sub_1C0BBE85C(uint64_t a1, uint64_t a2)
{
  NSObject *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  _QWORD *v23;
  id v24;
  os_log_type_t v25;
  _WORD *v26;
  uint64_t v27;
  uint64_t v28;

  v6 = sub_1C07ACF80((uint64_t *)&unk_1ED748280);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  sub_1C0778564();
  v10 = v9 - v8;
  v11 = sub_1C07ACF80(&qword_1ED75E630);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v12);
  sub_1C0779614();
  if (qword_1ED75E808 != -1)
    swift_once();
  v13 = sub_1C077585C();
  sub_1C079E000(v13, (uint64_t)qword_1ED78D7A0);
  sub_1C077C0FC();
  v14 = sub_1C0784E0C();
  if (os_log_type_enabled(v2, v14))
  {
    v15 = (uint8_t *)sub_1C0775854();
    *(_WORD *)v15 = 0;
    sub_1C077F048(&dword_1C0771000, v2, v14, "KnosisXPC: starting...", v15);
    sub_1C0776778();
  }

  if (qword_1ED74D240 != -1)
    swift_once();
  sub_1C079E000(v11, (uint64_t)qword_1ED78CB88);
  sub_1C078E3E0(a2, v3);
  v16 = sub_1C0779D10();
  sub_1C0798C34(v3, 0, 1, v16);
  sub_1C07930E0(v3, v17, &qword_1ED75E630);
  sub_1C077885C();
  if (qword_1ED74D238 != -1)
    swift_once();
  sub_1C079E000(v6, (uint64_t)qword_1ED78CB70);
  v18 = sub_1C077B2AC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v10, a1, v18);
  sub_1C0798C34(v10, 0, 1, v18);
  sub_1C07930E0(v10, v19, (uint64_t *)&unk_1ED748280);
  v20 = sub_1C077885C();
  sub_1C077583C(v20, (unint64_t *)&qword_1ED760690);
  v21 = sub_1C07951F8();
  sub_1C07A5EE8((uint64_t)v21);
  v22 = *(void **)(v10 + 2984);
  if (v22)
  {
    v23 = objc_allocWithZone((Class)type metadata accessor for KnosisXPC.Delegate());
    v24 = v22;
    sub_1C07A5520((uint64_t)objc_msgSend(v23, sel_init));
    objc_msgSend(v24, sel_setDelegate_, v23[372]);
    objc_msgSend(v24, sel_resume);
  }
  else
  {
    v24 = (id)sub_1C106F538();
    v25 = sub_1C107039C();
    if (sub_1C077F60C(v25))
    {
      v26 = (_WORD *)sub_1C0775854();
      sub_1C078C17C(v26);
      sub_1C0796F30(&dword_1C0771000, v27, v28, "Failed to create Knosis XPC service");
      sub_1C0776778();
    }
  }

  sub_1C0776760();
}

void static KnosisXPC.start(knosisConfig:platformConfig:indexHandlers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSObject *v3;
  uint64_t v4;
  os_log_type_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  _QWORD *v25;
  id v26;
  os_log_type_t v27;
  _WORD *v28;
  uint64_t v29;
  uint64_t v30;

  v8 = sub_1C07ACF80((uint64_t *)&unk_1ED748280);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v9);
  sub_1C0778544();
  v10 = sub_1C07ACF80(&qword_1ED75E630);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v11);
  sub_1C0778564();
  v14 = v13 - v12;
  if (qword_1ED75E808 != -1)
    swift_once();
  v15 = sub_1C077585C();
  sub_1C079E000(v15, (uint64_t)qword_1ED78D7A0);
  sub_1C077C0FC();
  v16 = sub_1C0784E0C();
  if (sub_1C078A2DC(v16))
  {
    v17 = (uint8_t *)sub_1C0775854();
    *(_WORD *)v17 = 0;
    sub_1C077F048(&dword_1C0771000, v3, v5, "KnosisXPC: starting...", v17);
    sub_1C0776778();
  }

  if (qword_1ED74D240 != -1)
    swift_once();
  sub_1C079E000(v10, (uint64_t)qword_1ED78CB88);
  sub_1C078E3E0(a2, v14);
  v18 = sub_1C0779D10();
  sub_1C0798C34(v14, 0, 1, v18);
  sub_1C07930E0(v14, v19, &qword_1ED75E630);
  sub_1C077885C();
  if (qword_1ED74D238 != -1)
    swift_once();
  sub_1C079E000(v8, (uint64_t)qword_1ED78CB70);
  v20 = sub_1C077B2AC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v4, a1, v20);
  sub_1C0798C34(v4, 0, 1, v20);
  sub_1C07930E0(v4, v21, (uint64_t *)&unk_1ED748280);
  sub_1C077885C();
  qword_1EF6D17B8 = a3;
  v22 = swift_bridgeObjectRelease();
  sub_1C077583C(v22, (unint64_t *)&qword_1ED760690);
  sub_1C07767B4();
  v23 = sub_1C07951F8();
  sub_1C07A5EE8((uint64_t)v23);
  v24 = *(void **)(a3 + 2984);
  if (v24)
  {
    v25 = objc_allocWithZone((Class)type metadata accessor for KnosisXPC.Delegate());
    v26 = v24;
    sub_1C07A5520((uint64_t)objc_msgSend(v25, sel_init));
    objc_msgSend(v26, sel_setDelegate_, v25[372]);
    objc_msgSend(v26, sel_resume);
  }
  else
  {
    v26 = (id)sub_1C106F538();
    v27 = sub_1C107039C();
    if (sub_1C077F60C(v27))
    {
      v28 = (_WORD *)sub_1C0775854();
      sub_1C078C17C(v28);
      sub_1C0796F30(&dword_1C0771000, v29, v30, "Failed to create Knosis XPC service");
      sub_1C0776778();
    }
  }

  sub_1C0776760();
}

id sub_1C0BBEE08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  objc_class *v16;
  objc_super v17;

  v16 = (objc_class *)sub_1C07796E8();
  v7 = sub_1C106EBE4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  sub_1C0779614();
  v9 = sub_1C106E704();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  sub_1C0778564();
  v13 = v12 - v11;
  *v4 = a2;
  v4[1] = a3;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v8 + 104))(v4, *MEMORY[0x1E0D3D538], v7);
  v14 = v3;
  sub_1C0899854();
  sub_1C106E6F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))((uint64_t)v14 + OBJC_IVAR____TtCC24IntelligencePlatformCore9KnosisXPC6Server_accessConfig, v13, v9);

  v17.receiver = v14;
  v17.super_class = v16;
  return objc_msgSendSuper2(&v17, sel_init);
}

void sub_1C0BBEF2C(void *a1, uint64_t a2, void (**a3)(_QWORD, _QWORD, _QWORD))
{
  id v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  void *v17;
  _OWORD *v18;
  void *v19;
  void *v20;
  _QWORD *v21;
  void *v22;
  NSObject *v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  id v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33[9];

  if (qword_1ED752E18 != -1)
    swift_once();
  if (!qword_1ED78CDC8)
  {
    sub_1C0BC1EB0();
    v17 = (void *)swift_allocError();
    *v18 = xmmword_1C107AF40;
    v19 = (void *)sub_1C106AA08();
    ((void (**)(_QWORD, _QWORD, void *))a3)[2](a3, 0, v19);

LABEL_11:
    _Block_release(a3);
    return;
  }
  v5 = (id)qword_1ED78CDC8;
  v6 = sub_1C0BC1EEC(a1);
  if (!v7)
  {
    sub_1C0BC1EB0();
    v20 = (void *)swift_allocError();
    *v21 = 0xD00000000000002BLL;
    v21[1] = 0x80000001C11039D0;
    v22 = (void *)sub_1C106AA08();
    ((void (**)(_QWORD, _QWORD, void *))a3)[2](a3, 0, v22);

    goto LABEL_11;
  }
  v8 = v6;
  v9 = v7;
  if (qword_1ED75E808 != -1)
    swift_once();
  v10 = sub_1C106F544();
  sub_1C079E000(v10, (uint64_t)qword_1ED78D7A0);
  v11 = a1;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v12 = sub_1C106F538();
  v13 = sub_1C1070384();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    v15 = (_QWORD *)swift_slowAlloc();
    v31 = swift_slowAlloc();
    v33[0] = v31;
    *(_DWORD *)v14 = 136315650;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0788DAC(v8, v9, v33);
    sub_1C10705AC();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v14 + 12) = 2112;
    v16 = objc_msgSend(v11, sel_limit);
    sub_1C10705AC();
    *v15 = v16;

    *(_WORD *)(v14 + 22) = 2112;
    v32 = objc_msgSend(v11, sel_offset);
    sub_1C10705AC();
    v15[1] = v32;

    _os_log_impl(&dword_1C0771000, v12, v13, "Knosis XPC: Got executeKGQ request kgq:%s, limit:%@, offset:%@", (uint8_t *)v14, 0x20u);
    sub_1C07ACF80(&qword_1ED7614A0);
    swift_arrayDestroy();
    MEMORY[0x1C3BA8270](v15, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1C3BA8270](v31, -1, -1);
    MEMORY[0x1C3BA8270](v14, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v23 = (id)sub_1C106D7E0();
  v24 = sub_1C106F538();
  v25 = sub_1C1070384();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = swift_slowAlloc();
    *(_DWORD *)v26 = 134218240;
    v27 = -[NSObject answers](v23, sel_answers);
    sub_1C07D4B70(0, (unint64_t *)&unk_1EF6419C0);
    v28 = sub_1C106FF04();

    if (v28 >> 62)
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v29 = sub_1C10709B4();

      swift_bridgeObjectRelease();
    }
    else
    {
      v29 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);

    }
    swift_bridgeObjectRelease();
    v33[0] = v29;
    sub_1C10705AC();

    *(_WORD *)(v26 + 12) = 2048;
    -[NSObject status](v23, sel_status);
    sub_1C1070DF8();
    sub_1C1070E04();
    v30 = sub_1C1070E4C();

    v33[0] = v30;
    sub_1C10705AC();

    _os_log_impl(&dword_1C0771000, v24, v25, "Knosis XPC: Got executeKGQ result, answersCount:%ld, status:%ld", (uint8_t *)v26, 0x16u);
    MEMORY[0x1C3BA8270](v26, -1, -1);
  }
  else
  {

    v24 = v23;
  }

  ((void (**)(_QWORD, NSObject *, _QWORD))a3)[2](a3, v23, 0);
  _Block_release(a3);
}

void KnosisXPC.Server.executeKGQ(_:withCompletion:)(void *a1, void (*a2)(id, _QWORD))
{
  os_log_type_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  _OWORD *v16;
  void *v17;
  void *v18;
  _QWORD *v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  id v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31[9];

  if (qword_1ED752E18 != -1)
    swift_once();
  if (!qword_1ED78CDC8)
  {
    sub_1C0BC1EB0();
    sub_1C0775810();
    *v16 = xmmword_1C107AF40;
    sub_1C0790960();
    sub_1C0791C70();
LABEL_10:

    return;
  }
  v29 = (id)qword_1ED78CDC8;
  v5 = sub_1C0BC1EEC(a1);
  if (!v6)
  {
    sub_1C0BC1EB0();
    v18 = (void *)sub_1C0775810();
    *v19 = 0xD00000000000002BLL;
    v19[1] = 0x80000001C11039D0;
    sub_1C0790960();

    sub_1C0791C70();
    goto LABEL_10;
  }
  v7 = v5;
  v8 = v6;
  if (qword_1ED75E808 != -1)
    swift_once();
  v9 = sub_1C077585C();
  sub_1C079E000(v9, (uint64_t)qword_1ED78D7A0);
  v10 = a1;
  sub_1C07767C4();
  v11 = sub_1C106F538();
  v12 = sub_1C1070384();
  if (sub_1C078A2DC(v12))
  {
    v13 = sub_1C0775854();
    v14 = (_QWORD *)sub_1C0775854();
    v31[0] = sub_1C0775854();
    *(_DWORD *)v13 = 136315650;
    sub_1C07767C4();
    sub_1C0788DAC(v7, v8, v31);
    sub_1C079478C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v13 + 12) = 2112;
    v15 = objc_msgSend(v10, sel_limit);
    sub_1C079478C();
    *v14 = v15;

    *(_WORD *)(v13 + 22) = 2112;
    v30 = objc_msgSend(v10, sel_offset);
    sub_1C10705AC();
    v14[1] = v30;

    _os_log_impl(&dword_1C0771000, v11, v2, "Knosis XPC: Got executeKGQ request kgq:%s, limit:%@, offset:%@", (uint8_t *)v13, 0x20u);
    sub_1C07ACF80(&qword_1ED7614A0);
    swift_arrayDestroy();
    sub_1C0776778();
  }

  sub_1C07758A4();
  v20 = (id)sub_1C106D7E0();
  v21 = sub_1C106F538();
  v22 = sub_1C1070384();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = sub_1C0775854();
    *(_DWORD *)v23 = 134218240;
    v24 = sub_1C07879EC(v23, sel_answers);
    sub_1C077583C((uint64_t)v24, (unint64_t *)&unk_1EF6419C0);
    v25 = sub_1C106FF04();

    if (v25 >> 62)
    {
      sub_1C07767B4();
      sub_1C10709B4();

      sub_1C07767AC();
    }
    else
    {

    }
    sub_1C07767AC();
    sub_1C10705AC();

    *(_WORD *)(v23 + 12) = 2048;
    sub_1C07879EC(v26, sel_status);
    sub_1C1070DF8();
    sub_1C1070E04();
    v27 = sub_1C1070E4C();

    v31[0] = v27;
    sub_1C10705AC();

    _os_log_impl(&dword_1C0771000, v21, v22, "Knosis XPC: Got executeKGQ result, answersCount:%ld, status:%ld", (uint8_t *)v23, 0x16u);
    sub_1C0776778();
  }

  v28 = v20;
  a2(v20, 0);

  sub_1C0791C70();
}

void sub_1C0BBFA30(void *a1, uint64_t a2, void (**a3)(_QWORD, _QWORD, void *))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  BOOL v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  id v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  id v34;
  id v35;
  char *v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  _OWORD *v45;
  void *v46;
  const void *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  id v60;
  id v61;
  void *v62;
  NSObject *v63;
  NSObject *v64;
  os_log_type_t v65;
  uint64_t v66;
  id v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  const void *v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  void (**v75)(_QWORD, _QWORD, void *);
  void *v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  uint64_t v98[5];
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;

  v75 = a3;
  v74 = a2;
  v76 = a1;
  v83 = sub_1C106DB4C();
  v82 = *(_QWORD *)(v83 - 8);
  MEMORY[0x1E0C80A78](v83);
  v4 = (uint64_t)&v72 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = sub_1C106F25C();
  v94 = *(_QWORD *)(v95 - 8);
  MEMORY[0x1E0C80A78](v95);
  v93 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v92 = (char *)&v72 - v7;
  if (qword_1ED752E18 != -1)
    goto LABEL_49;
LABEL_2:
  if (!qword_1ED78CDC8)
  {
    sub_1C0BC1EB0();
    v44 = (void *)swift_allocError();
    *v45 = xmmword_1C107AF40;
    v46 = (void *)sub_1C106AA08();
    v47 = v75;
    v75[2](v75, 0, v46);

    _Block_release(v47);
    return;
  }
  v99 = MEMORY[0x1E0DEE9D8];
  v73 = (id)qword_1ED78CDC8;
  v8 = sub_1C0BC1F4C(v76);
  if (!v8)
    goto LABEL_52;
  v9 = v8;
  if (v8 >> 62)
  {
    v10 = sub_1C10709B4();
    if (!v10)
      goto LABEL_51;
  }
  else
  {
    v10 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v10)
      goto LABEL_51;
  }
  v11 = 0;
  v81 = v9 & 0xC000000000000001;
  v77 = v9 + 32;
  v87 = MEMORY[0x1E0DEE9B0] + 8;
  v80 = v4;
  v79 = v9;
  v78 = v10;
  do
  {
    v12 = v81;
    sub_1C0783D0C(v11, v81 == 0, v9);
    if (v12)
      v13 = (id)MEMORY[0x1C3BA70DC](v11, v9);
    else
      v13 = *(id *)(v77 + 8 * v11);
    v14 = __OFADD__(v11, 1);
    v15 = v11 + 1;
    if (v14)
      goto LABEL_48;
    v86 = v15;
    v98[0] = MEMORY[0x1E0DEE9E8];
    v85 = v13;
    v16 = objc_msgSend(v13, sel_args);
    v17 = sub_1C07D4B70(0, &qword_1EF6419D0);
    sub_1C0BC1FB8();
    v4 = sub_1C107021C();

    v88 = v17;
    if ((v4 & 0xC000000000000001) != 0)
    {
      sub_1C1070690();
      sub_1C1070258();
      v4 = v100;
      v91 = v101;
      v18 = v102;
      v19 = v103;
      v20 = v104;
    }
    else
    {
      v19 = 0;
      v21 = -1 << *(_BYTE *)(v4 + 32);
      v22 = *(_QWORD *)(v4 + 56);
      v91 = v4 + 56;
      v23 = ~v21;
      v24 = -v21;
      if (v24 < 64)
        v25 = ~(-1 << v24);
      else
        v25 = -1;
      v20 = v25 & v22;
      v18 = v23;
    }
    v89 = v4 & 0x7FFFFFFFFFFFFFFFLL;
    v84 = v18;
    v90 = (unint64_t)(v18 + 64) >> 6;
    if (v4 < 0)
    {
      while (1)
      {
        v29 = sub_1C10706B4();
        if (!v29)
          break;
        v96 = v29;
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v30 = v97;
        swift_unknownObjectRelease();
        v28 = v19;
        v26 = v20;
        if (!v30)
          break;
LABEL_38:
        v34 = objc_msgSend(v30, sel_arg);
        sub_1C106FB14();

        v35 = objc_msgSend(v30, sel_value);
        sub_1C106FB14();

        sub_1C106F250();
        v36 = v92;
        sub_1C0A7F2F4();

        (*(void (**)(char *, uint64_t))(v94 + 8))(v36, v95);
        v19 = v28;
        v20 = v26;
        if ((v4 & 0x8000000000000000) == 0)
          goto LABEL_18;
      }
    }
    else
    {
LABEL_18:
      if (v20)
      {
        v26 = (v20 - 1) & v20;
        v27 = __clz(__rbit64(v20)) | (v19 << 6);
        v28 = v19;
        goto LABEL_37;
      }
      v31 = v19 + 1;
      if (__OFADD__(v19, 1))
      {
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        swift_once();
        goto LABEL_2;
      }
      if (v31 < v90)
      {
        v32 = *(_QWORD *)(v91 + 8 * v31);
        v28 = v19 + 1;
        if (v32)
          goto LABEL_36;
        v28 = v19 + 2;
        if (v19 + 2 >= v90)
          goto LABEL_40;
        v32 = *(_QWORD *)(v91 + 8 * v28);
        if (v32)
          goto LABEL_36;
        v28 = v19 + 3;
        if (v19 + 3 >= v90)
          goto LABEL_40;
        v32 = *(_QWORD *)(v91 + 8 * v28);
        if (v32)
          goto LABEL_36;
        v28 = v19 + 4;
        if (v19 + 4 >= v90)
          goto LABEL_40;
        v32 = *(_QWORD *)(v91 + 8 * v28);
        if (v32)
        {
LABEL_36:
          v26 = (v32 - 1) & v32;
          v27 = __clz(__rbit64(v32)) + (v28 << 6);
LABEL_37:
          v30 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v27);
          if (!v30)
            goto LABEL_40;
          goto LABEL_38;
        }
        v33 = v19 + 5;
        while (v33 < v90)
        {
          v32 = *(_QWORD *)(v91 + 8 * v33++);
          if (v32)
          {
            v28 = v33 - 1;
            goto LABEL_36;
          }
        }
      }
    }
LABEL_40:
    sub_1C0827370();
    v37 = v85;
    v38 = objc_msgSend(v85, sel_intent);
    sub_1C106FB14();

    v39 = objc_msgSend(v37, sel_score);
    sub_1C10701C8();

    v4 = v80;
    sub_1C106DB40();
    v40 = v99;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C07ECEEC();
      v40 = v42;
    }
    v11 = v86;
    v41 = *(_QWORD *)(v40 + 16);
    if (v41 >= *(_QWORD *)(v40 + 24) >> 1)
    {
      sub_1C07ECEEC();
      v40 = v43;
    }
    *(_QWORD *)(v40 + 16) = v41 + 1;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v82 + 32))(v40+ ((*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80))+ *(_QWORD *)(v82 + 72) * v41, v4, v83);

    v99 = v40;
    v9 = v79;
  }
  while (v11 != v78);
LABEL_51:
  swift_bridgeObjectRelease();
LABEL_52:
  if (qword_1ED75E808 != -1)
    swift_once();
  v48 = sub_1C106F544();
  v49 = sub_1C079E000(v48, (uint64_t)qword_1ED78D7A0);
  v50 = v76;
  v51 = sub_1C106F538();
  v52 = sub_1C1070384();
  if (os_log_type_enabled(v51, v52))
  {
    v53 = swift_slowAlloc();
    v54 = (_QWORD *)swift_slowAlloc();
    v55 = swift_slowAlloc();
    v98[0] = v55;
    *(_DWORD *)v53 = 136315650;
    swift_beginAccess();
    v56 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v57 = MEMORY[0x1C3BA683C](v56, v83);
    v95 = v49;
    v59 = v58;
    swift_bridgeObjectRelease();
    v96 = sub_1C0788DAC(v57, v59, v98);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v53 + 12) = 2112;
    v60 = objc_msgSend(v50, sel_limit);
    v96 = (uint64_t)v60;
    sub_1C10705AC();
    *v54 = v60;

    *(_WORD *)(v53 + 22) = 2112;
    v61 = objc_msgSend(v50, sel_offset);
    v96 = (uint64_t)v61;
    sub_1C10705AC();
    v54[1] = v61;

    _os_log_impl(&dword_1C0771000, v51, v52, "Knosis XPC: Got executeIntents request intents:%s, limit:%@, offset:%@", (uint8_t *)v53, 0x20u);
    sub_1C07ACF80(&qword_1ED7614A0);
    swift_arrayDestroy();
    MEMORY[0x1C3BA8270](v54, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1C3BA8270](v55, -1, -1);
    MEMORY[0x1C3BA8270](v53, -1, -1);

  }
  else
  {

  }
  v62 = v73;
  v63 = (id)sub_1C106D7EC();
  v64 = sub_1C106F538();
  v65 = sub_1C1070384();
  if (os_log_type_enabled(v64, v65))
  {
    v66 = swift_slowAlloc();
    *(_DWORD *)v66 = 134218240;
    v67 = -[NSObject answers](v63, sel_answers);
    sub_1C07D4B70(0, (unint64_t *)&unk_1EF6419C0);
    v68 = sub_1C106FF04();

    if (v68 >> 62)
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v69 = sub_1C10709B4();

      swift_bridgeObjectRelease();
    }
    else
    {
      v69 = *(_QWORD *)((v68 & 0xFFFFFFFFFFFFF8) + 0x10);

    }
    swift_bridgeObjectRelease();
    v98[0] = v69;
    sub_1C10705AC();

    *(_WORD *)(v66 + 12) = 2048;
    -[NSObject status](v63, sel_status);
    sub_1C1070DF8();
    sub_1C1070E04();
    v70 = sub_1C1070E4C();

    v98[0] = v70;
    sub_1C10705AC();

    _os_log_impl(&dword_1C0771000, v64, v65, "Knosis XPC: Got executeIntents result, answersCount:%ld, status:%ld", (uint8_t *)v66, 0x16u);
    MEMORY[0x1C3BA8270](v66, -1, -1);
  }
  else
  {

    v64 = v63;
  }

  v71 = v75;
  ((void (**)(_QWORD, NSObject *, void *))v75)[2](v75, v63, 0);

  swift_bridgeObjectRelease();
  _Block_release(v71);
}

void KnosisXPC.Server.executeIntent(_:withCompletion:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  BOOL v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  id v29;
  int64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  id v36;
  id v37;
  char *v38;
  uint64_t v39;
  void *v40;
  id v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _OWORD *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  id v64;
  id v65;
  NSObject *v66;
  os_log_type_t v67;
  uint64_t v68;
  id v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  uint64_t v101[4];
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;

  v77 = a3;
  v78 = a2;
  v79 = a1;
  v86 = sub_1C106DB4C();
  v85 = *(_QWORD *)(v86 - 8);
  MEMORY[0x1E0C80A78](v86);
  sub_1C0778564();
  v6 = v5 - v4;
  v98 = sub_1C106F25C();
  v97 = *(_QWORD *)(v98 - 8);
  MEMORY[0x1E0C80A78](v98);
  v96 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v95 = (char *)&v75 - v9;
  if (qword_1ED752E18 != -1)
    goto LABEL_52;
LABEL_2:
  if (!qword_1ED78CDC8)
  {
    sub_1C0BC1EB0();
    sub_1C0775810();
    *v48 = xmmword_1C107AF40;
    sub_1C07B4278();
    sub_1C078D424();

    return;
  }
  v102 = MEMORY[0x1E0DEE9D8];
  v76 = (id)qword_1ED78CDC8;
  v10 = sub_1C0BC1F4C(v79);
  if (!v10)
    goto LABEL_55;
  v11 = v10;
  if (v10 >> 62)
  {
    v12 = sub_1C10709B4();
    if (!v12)
      goto LABEL_54;
  }
  else
  {
    v12 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v12)
      goto LABEL_54;
  }
  v3 = 0;
  v84 = v11 & 0xC000000000000001;
  v80 = v11 + 32;
  v90 = MEMORY[0x1E0DEE9B0] + 8;
  v83 = v6;
  v82 = v11;
  v81 = v12;
  do
  {
    v13 = v84;
    sub_1C0783D0C(v3, v84 == 0, v11);
    if (v13)
      v14 = (id)MEMORY[0x1C3BA70DC](v3, v11);
    else
      v14 = *(id *)(v80 + 8 * v3);
    v15 = __OFADD__(v3++, 1);
    if (v15)
      goto LABEL_51;
    v89 = v3;
    v101[0] = MEMORY[0x1E0DEE9E8];
    v88 = v14;
    v16 = objc_msgSend(v14, sel_args);
    v17 = sub_1C07D4B70(0, &qword_1EF6419D0);
    sub_1C0BC1FB8();
    v3 = sub_1C107021C();

    v91 = v17;
    if ((v3 & 0xC000000000000001) != 0)
    {
      sub_1C1070690();
      sub_1C1070258();
      v3 = v103;
      v94 = v104;
      v18 = v105;
      v19 = v106;
      v6 = v107;
    }
    else
    {
      v19 = 0;
      v20 = -1 << *(_BYTE *)(v3 + 32);
      v21 = *(_QWORD *)(v3 + 56);
      v94 = v3 + 56;
      v22 = ~v20;
      v23 = -v20;
      if (v23 < 64)
        v24 = ~(-1 << v23);
      else
        v24 = -1;
      v6 = v24 & v21;
      v18 = v22;
    }
    v92 = v3 & 0x7FFFFFFFFFFFFFFFLL;
    v87 = v18;
    v93 = (unint64_t)(v18 + 64) >> 6;
    if (v3 < 0)
    {
      while (1)
      {
        v28 = sub_1C10706B4();
        if (!v28)
          break;
        v99 = v28;
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v29 = v100;
        sub_1C07768A0();
        v27 = v19;
        v25 = v6;
        if (!v29)
          break;
LABEL_41:
        v36 = objc_msgSend(v29, sel_arg);
        sub_1C106FB14();

        v37 = objc_msgSend(v29, sel_value);
        sub_1C106FB14();

        sub_1C106F250();
        v38 = v95;
        sub_1C0A7F2F4();

        (*(void (**)(char *, uint64_t))(v97 + 8))(v38, v98);
        v19 = v27;
        v6 = v25;
        if ((v3 & 0x8000000000000000) == 0)
          goto LABEL_18;
      }
    }
    else
    {
LABEL_18:
      if (v6)
      {
        v25 = (v6 - 1) & v6;
        v26 = __clz(__rbit64(v6)) | (v19 << 6);
        v27 = v19;
        goto LABEL_40;
      }
      v30 = v19 + 1;
      if (__OFADD__(v19, 1))
      {
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        swift_once();
        goto LABEL_2;
      }
      if (v30 < v93)
      {
        v31 = *(_QWORD *)(v94 + 8 * v30);
        v27 = v19 + 1;
        if (v31)
          goto LABEL_39;
        v27 = v19 + 2;
        sub_1C07AA918();
        if (v32 != v15)
        {
          sub_1C07BCFB4();
          if (v31)
            goto LABEL_39;
          v27 = v33 + 2;
          sub_1C07AA918();
          if (v32 != v15)
          {
            sub_1C07BCFB4();
            if (v31)
              goto LABEL_39;
            v27 = v34 + 3;
            sub_1C07AA918();
            if (v32 != v15)
            {
              sub_1C07BCFB4();
              if (v31)
              {
LABEL_39:
                v25 = (v31 - 1) & v31;
                v26 = __clz(__rbit64(v31)) + (v27 << 6);
LABEL_40:
                v29 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v26);
                if (!v29)
                  goto LABEL_43;
                goto LABEL_41;
              }
              v35 = v19 + 5;
              while (v35 < v93)
              {
                v31 = *(_QWORD *)(v94 + 8 * v35++);
                if (v31)
                {
                  v27 = v35 - 1;
                  goto LABEL_39;
                }
              }
            }
          }
        }
      }
    }
LABEL_43:
    v39 = sub_1C0827370();
    v40 = v88;
    v41 = sub_1C07879EC(v39, sel_intent);
    sub_1C106FB14();

    v43 = sub_1C07879EC(v42, sel_score);
    sub_1C10701C8();

    v6 = v83;
    sub_1C106DB40();
    v44 = v102;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C07A32AC();
      v44 = v46;
    }
    v45 = *(_QWORD *)(v44 + 16);
    if (v45 >= *(_QWORD *)(v44 + 24) >> 1)
    {
      sub_1C07A32AC();
      v44 = v47;
    }
    *(_QWORD *)(v44 + 16) = v45 + 1;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v85 + 32))(v44+ ((*(unsigned __int8 *)(v85 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80))+ *(_QWORD *)(v85 + 72) * v45, v6, v86);

    v102 = v44;
    v3 = v89;
    v11 = v82;
  }
  while (v89 != v81);
LABEL_54:
  sub_1C07767AC();
LABEL_55:
  if (qword_1ED75E808 != -1)
    swift_once();
  v50 = sub_1C077585C();
  v51 = sub_1C079E000(v50, (uint64_t)qword_1ED78D7A0);
  v52 = v79;
  v53 = sub_1C077C474();
  v54 = sub_1C1070384();
  if (os_log_type_enabled(v53, v54))
  {
    v55 = sub_1C0775854();
    v56 = (_QWORD *)sub_1C0775854();
    v101[0] = sub_1C0775854();
    *(_DWORD *)v55 = 136315650;
    sub_1C0775864();
    v57 = sub_1C07767C4();
    v58 = MEMORY[0x1C3BA683C](v57, v86);
    v98 = v51;
    v60 = v59;
    swift_bridgeObjectRelease();
    v99 = sub_1C0788DAC(v58, v60, v101);
    sub_1C10705AC();
    v61 = sub_1C07767AC();
    *(_WORD *)(v55 + 12) = 2112;
    v62 = sub_1C0780FE4(v61, sel_limit);
    sub_1C07B7354((uint64_t)v62);
    sub_1C10705AC();
    *v56 = v62;

    *(_WORD *)(v55 + 22) = 2112;
    v64 = sub_1C0780FE4(v63, sel_offset);
    sub_1C07B7354((uint64_t)v64);
    sub_1C10705AC();
    v56[1] = v64;

    _os_log_impl(&dword_1C0771000, v53, v54, "Knosis XPC: Got executeIntents request intents:%s, limit:%@, offset:%@", (uint8_t *)v55, 0x20u);
    sub_1C07ACF80(&qword_1ED7614A0);
    swift_arrayDestroy();
    sub_1C0776778();
  }

  v65 = (id)sub_1C106D7EC();
  v66 = sub_1C077C474();
  v67 = sub_1C1070384();
  if (os_log_type_enabled(v66, v67))
  {
    v68 = sub_1C0775854();
    *(_DWORD *)v68 = 134218240;
    v69 = sub_1C0780FE4(v68, sel_answers);
    sub_1C077583C((uint64_t)v69, (unint64_t *)&unk_1EF6419C0);
    v70 = sub_1C106FF04();

    if (v70 >> 62)
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v71 = sub_1C10709B4();

      swift_bridgeObjectRelease();
    }
    else
    {
      v71 = *(_QWORD *)((v70 & 0xFFFFFFFFFFFFF8) + 0x10);

    }
    swift_bridgeObjectRelease();
    v101[0] = v71;
    sub_1C10705AC();

    *(_WORD *)(v68 + 12) = 2048;
    sub_1C0780FE4(v72, sel_status);
    sub_1C1070DF8();
    sub_1C1070E04();
    v73 = sub_1C1070E4C();

    v101[0] = v73;
    sub_1C10705AC();

    _os_log_impl(&dword_1C0771000, v66, v67, "Knosis XPC: Got executeIntents result, answersCount:%ld, status:%ld", (uint8_t *)v68, 0x16u);
    sub_1C0776778();
  }

  v74 = (id)v3;
  sub_1C07B4278();

  sub_1C07767AC();
  sub_1C078D424();
}

void sub_1C0BC1120(void *a1, int a2, void *a3, void *aBlock, void (*a5)(id, id, void *))
{
  void *v8;
  id v9;
  id v10;

  v8 = _Block_copy(aBlock);
  _Block_copy(v8);
  v9 = a3;
  v10 = a1;
  a5(v9, v10, v8);
  _Block_release(v8);

  sub_1C0787FDC(v10);
}

id KnosisXPC.Server.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void KnosisXPC.Server.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1C0BC1220(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  char v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  _WORD *v26;
  uint64_t v27;
  uint64_t v28;
  const char *v29;
  uint64_t v30;
  os_log_type_t v31;
  _WORD *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  _DWORD *v38;
  uint64_t v39;
  uint64_t v40;
  os_log_type_t v41;
  unint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  NSObject *v49;
  _DWORD *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  os_log_type_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  os_log_type_t v66;
  uint8_t *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  id v75;
  id v76;
  id v77;
  uint64_t v78;
  void *v79;
  void *v80;
  _QWORD v81[2];
  uint64_t v82;
  _DWORD *v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)();
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  __int128 v95;
  __int128 v96;

  sub_1C07ACF80(&qword_1ED753198);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v4);
  sub_1C0778544();
  v5 = sub_1C106E4AC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v81 - v10;
  v12 = sub_1C07ACF80(&qword_1ED75E630);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v13);
  sub_1C0778564();
  v16 = v15 - v14;
  if (!objc_msgSend((id)objc_opt_self(), sel_isInternalDevice))
  {
    sub_1C07AA0F4();
    if (!v22)
      swift_once();
    v23 = sub_1C077585C();
    sub_1C079E000(v23, (uint64_t)qword_1ED78D7A0);
    v24 = sub_1C077C0FC();
    v25 = sub_1C10703A8();
    if (sub_1C077F60C(v25))
    {
      v26 = (_WORD *)sub_1C0775854();
      sub_1C078C17C(v26);
      v29 = "KnosisXPC: API disabled on customer devices.";
      goto LABEL_17;
    }
LABEL_18:

    goto LABEL_19;
  }
  if (qword_1ED74D240 != -1)
    swift_once();
  v17 = sub_1C079E000(v12, (uint64_t)qword_1ED78CB88);
  sub_1C0775864();
  sub_1C07B9D5C(v17, v16);
  v18 = sub_1C0779D10();
  if (sub_1C07B2D80(v16, 1, v18) != 1)
  {
    v19 = *(_QWORD *)(v16 + *(int *)(v18 + 20));
    sub_1C078D09C(v16);
    if ((v19 & 1) == 0)
    {
      if ((sub_1C0C47FA8() & 1) == 0)
      {
LABEL_19:
        sub_1C078D424();
        return;
      }
      v20 = (void *)sub_1C106FAF0();
      v86 = a2;
      v21 = sub_1C0785108((uint64_t)v20, sel_valueForEntitlement_);

      if (v21)
      {
        sub_1C0782E40();
        sub_1C07768A0();
      }
      else
      {
        v95 = 0u;
        v96 = 0u;
      }
      sub_1C07B97EC();
      if (v90)
      {
        if ((sub_1C078B1A4() & 1) != 0)
        {
          v33 = v94;
          v84 = v93;
          sub_1C07AA0F4();
          if (!v22)
            swift_once();
          v34 = sub_1C077585C();
          v35 = sub_1C079E000(v34, (uint64_t)qword_1ED78D7A0);
          sub_1C07767CC();
          v85 = v35;
          v36 = sub_1C106F538();
          v37 = sub_1C10703A8();
          if (os_log_type_enabled(v36, v37))
          {
            v38 = (_DWORD *)sub_1C0775854();
            v87 = (char *)sub_1C0775854();
            v88 = v87;
            *v38 = 136315138;
            v83 = v38 + 1;
            sub_1C07767B4();
            v39 = sub_1C0788DAC(v84, v33, (uint64_t *)&v88);
            sub_1C07ADF0C(v39);
            sub_1C10705AC();
            swift_bridgeObjectRelease_n();
            sub_1C0792EA0(&dword_1C0771000, v36, v37, "KnosisXPC: clientIdentifier: %s");
            sub_1C0778610();
            sub_1C0776778();
          }

          sub_1C07758A4();
          v44 = (void *)sub_1C106FAF0();
          v45 = sub_1C0785108((uint64_t)v44, sel_valueForEntitlement_);

          if (v45)
          {
            sub_1C0782E40();
            sub_1C07768A0();
          }
          else
          {
            v95 = 0u;
            v96 = 0u;
          }
          sub_1C07B97EC();
          if (v90)
          {
            sub_1C07ACF80(&qword_1ED762B70);
            if ((sub_1C078B1A4() & 1) != 0)
            {
              v83 = (_DWORD *)v33;
              v46 = v93;
              sub_1C07767CC();
              v47 = sub_1C079CE64();
              v48 = sub_1C10703A8();
              v49 = v48;
              if (os_log_type_enabled(v47, v48))
              {
                LODWORD(v87) = (_DWORD)v49;
                v50 = (_DWORD *)sub_1C0775854();
                v82 = sub_1C0775854();
                v88 = (char *)v82;
                v81[1] = v50;
                *v50 = 136315138;
                v81[0] = v50 + 1;
                v51 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
                v52 = MEMORY[0x1C3BA683C](v51, MEMORY[0x1E0DEA968]);
                v54 = v53;
                sub_1C07767AC();
                v55 = sub_1C0788DAC(v52, v54, (uint64_t *)&v88);
                sub_1C07ADF0C(v55);
                sub_1C10705AC();
                sub_1C07758A4();
                swift_bridgeObjectRelease();
                sub_1C0792EA0(&dword_1C0771000, v47, (os_log_type_t)v87, "KnosisXPC: entitledIndexNames: %s");
                sub_1C0778610();
                sub_1C0776778();
              }

              sub_1C07758A4();
              v58 = *(_QWORD *)(v46 + 16);
              if (v58)
              {
                v87 = v8;
                sub_1C07767B4();
                v82 = v46;
                v59 = v46 + 40;
                v60 = MEMORY[0x1E0DEE9D8];
                do
                {
                  v49 = *(NSObject **)(v59 - 8);
                  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
                  sub_1C106E4A0();
                  if (sub_1C07B2D80(v2, 1, v5) == 1)
                  {
                    sub_1C0784B94(v2, &qword_1ED753198);
                  }
                  else
                  {
                    sub_1C079E278((uint64_t)v11, v2);
                    sub_1C079E278((uint64_t)v87, (uint64_t)v11);
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                    {
                      sub_1C07ECF08();
                      v60 = v63;
                    }
                    v61 = v60;
                    v62 = *(_QWORD *)(v60 + 16);
                    v49 = (v62 + 1);
                    if (v62 >= *(_QWORD *)(v60 + 24) >> 1)
                    {
                      sub_1C07ECF08();
                      v61 = v64;
                    }
                    *(_QWORD *)(v61 + 16) = v49;
                    v60 = v61;
                    sub_1C079E278(v61+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v62, (uint64_t)v87);
                  }
                  v59 += 16;
                  --v58;
                }
                while (v58);
                sub_1C07767AC();
                v65 = v60;
              }
              else
              {
                v65 = MEMORY[0x1E0DEE9D8];
              }
              sub_1C07767AC();
              sub_1C07767CC();
              sub_1C079CE64();
              v66 = sub_1C0784E0C();
              if (os_log_type_enabled(v49, v66))
              {
                v67 = (uint8_t *)sub_1C0775854();
                v88 = (char *)sub_1C0775854();
                *(_DWORD *)v67 = 136315138;
                v68 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
                v69 = MEMORY[0x1C3BA683C](v68, v5);
                v71 = v70;
                swift_bridgeObjectRelease();
                v72 = sub_1C0788DAC(v69, v71, (uint64_t *)&v88);
                sub_1C07ADF0C(v72);
                sub_1C10705AC();
                sub_1C07758A4();
                sub_1C077E584();
                _os_log_impl(&dword_1C0771000, v49, v66, "KnosisXPC: entitledIndexTypes: %s", v67, 0xCu);
                sub_1C0778610();
                sub_1C0776778();
              }

              sub_1C07758A4();
              v73 = v86;
              v74 = (uint64_t)v83;
              v75 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_1EF6D5F58);
              sub_1C079E684((uint64_t)v75, sel_setExportedInterface_);

              v76 = objc_allocWithZone((Class)type metadata accessor for KnosisXPC.Server());
              v77 = sub_1C0BBEE08(v65, v84, v74);
              sub_1C079E684((uint64_t)v77, sel_setExportedObject_);

              v91 = sub_1C0BC1CD0;
              v92 = 0;
              v78 = MEMORY[0x1E0C809B0];
              v88 = (char *)MEMORY[0x1E0C809B0];
              v89 = 1107296256;
              v79 = sub_1C07A871C((uint64_t)&unk_1E7A223F8);
              sub_1C079E684((uint64_t)v79, sel_setInterruptionHandler_);
              _Block_release(v79);
              v91 = sub_1C0BC1CE4;
              v92 = 0;
              v88 = (char *)v78;
              v89 = 1107296256;
              v80 = sub_1C07A871C((uint64_t)&unk_1E7A22420);
              sub_1C079E684((uint64_t)v80, sel_setInvalidationHandler_);
              _Block_release(v80);
              objc_msgSend(v73, sel_resume);
              goto LABEL_19;
            }
            sub_1C077E584();
          }
          else
          {
            sub_1C077E584();
            sub_1C0784B94((uint64_t)&v88, &qword_1ED760400);
          }
          v24 = sub_1C079CE64();
          v56 = sub_1C1070390();
          if (sub_1C078D4E4(v56))
          {
            sub_1C0775854();
            v88 = (char *)sub_1C0775854();
            sub_1C07B7C40(4.8149e-34);
            v43 = 0xD000000000000037;
            v42 = 0x80000001C1103AC0;
LABEL_43:
            v57 = sub_1C0788DAC(v43, v42, (uint64_t *)&v88);
            sub_1C07ADF0C(v57);
            sub_1C10705AC();
            sub_1C0792EA0(&dword_1C0771000, v24, (os_log_type_t)v5, "KnosisXPC: missing entitlement for %s");
            sub_1C0778610();
            sub_1C0776778();
          }
          goto LABEL_18;
        }
      }
      else
      {
        sub_1C0784B94((uint64_t)&v88, &qword_1ED760400);
      }
      sub_1C07AA0F4();
      if (!v22)
        swift_once();
      v40 = sub_1C077585C();
      sub_1C079E000(v40, (uint64_t)qword_1ED78D7A0);
      v24 = sub_1C077C0FC();
      v41 = sub_1C1070390();
      if (sub_1C078D4E4(v41))
      {
        sub_1C0775854();
        v88 = (char *)sub_1C0775854();
        sub_1C07B7C40(4.8149e-34);
        v42 = 0x80000001C10F41B0;
        v43 = 0xD000000000000016;
        goto LABEL_43;
      }
      goto LABEL_18;
    }
    sub_1C07AA0F4();
    if (!v22)
      swift_once();
    v30 = sub_1C077585C();
    sub_1C079E000(v30, (uint64_t)qword_1ED78D7A0);
    v24 = sub_1C077C0FC();
    v31 = sub_1C10703A8();
    if (sub_1C077F60C(v31))
    {
      v32 = (_WORD *)sub_1C0775854();
      sub_1C078C17C(v32);
      v29 = "KnosisXPC: service is in no-op mode.";
LABEL_17:
      sub_1C0796F30(&dword_1C0771000, v27, v28, v29);
      sub_1C0776778();
    }
    goto LABEL_18;
  }
  __break(1u);
}

void sub_1C0BC1CD0()
{
  sub_1C0BC1CF8(MEMORY[0x1E0DF2280], "Knosis XPC Service connection interrupted.");
}

void sub_1C0BC1CE4()
{
  sub_1C0BC1CF8(MEMORY[0x1E0DF2290], "Knosis XPC Service connection closed.");
}

void sub_1C0BC1CF8(uint64_t (*a1)(void), const char *a2)
{
  uint64_t v4;
  os_log_type_t v5;
  _WORD *v6;
  NSObject *oslog;

  if (qword_1ED75E808 != -1)
    swift_once();
  v4 = sub_1C077585C();
  sub_1C079E000(v4, (uint64_t)qword_1ED78D7A0);
  oslog = sub_1C077C0FC();
  v5 = a1();
  if (os_log_type_enabled(oslog, v5))
  {
    v6 = (_WORD *)sub_1C0775854();
    sub_1C078C17C(v6);
    sub_1C077F048(&dword_1C0771000, oslog, v5, a2, (uint8_t *)a1);
    sub_1C0776778();
  }
  sub_1C0787FDC(oslog);
}

void sub_1C0BC1E50(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_1C07ACF80(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  sub_1C0778534();
}

uint64_t type metadata accessor for KnosisXPC.Delegate()
{
  return objc_opt_self();
}

unint64_t sub_1C0BC1EB0()
{
  unint64_t result;

  result = qword_1EF6419B8;
  if (!qword_1EF6419B8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A6300, &type metadata for KnosisXPCError);
    atomic_store(result, (unint64_t *)&qword_1EF6419B8);
  }
  return result;
}

uint64_t sub_1C0BC1EEC(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_kgq);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1C106FB14();

  return v3;
}

uint64_t sub_1C0BC1F4C(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_intentArgs);
  if (!v1)
    return 0;
  v2 = v1;
  sub_1C07D4B70(0, &qword_1EF641A40);
  v3 = sub_1C106FF04();

  return v3;
}

unint64_t sub_1C0BC1FB8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF6419D8;
  if (!qword_1EF6419D8)
  {
    v1 = sub_1C07D4B70(255, &qword_1EF6419D0);
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF6419D8);
  }
  return result;
}

uint64_t type metadata accessor for KnosisXPC()
{
  return objc_opt_self();
}

uint64_t sub_1C0BC2028()
{
  return type metadata accessor for KnosisXPC.Server();
}

uint64_t type metadata accessor for KnosisXPC.Server()
{
  uint64_t result;

  result = qword_1ED7539D0;
  if (!qword_1ED7539D0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C0BC2068()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C106E704();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for KnosisXPC.Server()
{
  return swift_lookUpClassMethod();
}

unint64_t destroy for KnosisXPCError(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s24IntelligencePlatformCore14KnosisXPCErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  return a1;
}

_QWORD *assignWithCopy for KnosisXPCError(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;

  v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for KnosisXPCError(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for KnosisXPCError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for KnosisXPCError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 1;
  }
  return result;
}

uint64_t sub_1C0BC2300(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_1C0BC2318(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for KnosisXPCError()
{
  return &type metadata for KnosisXPCError;
}

uint64_t sub_1C0BC234C(uint64_t a1, uint64_t a2)
{
  if (!a2)
    return 0x206E776F6E6B6E55;
  if (a2 == 1)
    return 0xD000000000000028;
  sub_1C1070774();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  return 0xD00000000000001CLL;
}

unint64_t sub_1C0BC2418()
{
  return 0xD000000000000027;
}

uint64_t sub_1C0BC2434(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = 1;
  if (a2 != 1)
    v2 = 2;
  if (a2)
    return v2;
  else
    return 0;
}

uint64_t sub_1C0BC244C(uint64_t a1, uint64_t a2)
{
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1C07ACF80(&qword_1ED761310);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1079220;
  *(_QWORD *)(inited + 32) = sub_1C106FB14();
  *(_QWORD *)(inited + 40) = v5;
  v6 = sub_1C0BC234C(a1, a2);
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = v6;
  *(_QWORD *)(inited + 56) = v7;
  return sub_1C106F97C();
}

uint64_t sub_1C0BC24F0()
{
  sub_1C0BC2574();
  return sub_1C1070D68();
}

uint64_t sub_1C0BC2518()
{
  sub_1C0BC2574();
  return sub_1C1070D5C();
}

uint64_t sub_1C0BC2540()
{
  uint64_t *v0;

  return sub_1C0BC234C(*v0, v0[1]);
}

unint64_t sub_1C0BC2548()
{
  sub_1C0BC2418();
  return 0xD000000000000027;
}

uint64_t sub_1C0BC2564(uint64_t a1)
{
  uint64_t v1;

  return sub_1C0BC2434(a1, *(_QWORD *)(v1 + 8));
}

uint64_t sub_1C0BC256C()
{
  uint64_t *v0;

  return sub_1C0BC244C(*v0, v0[1]);
}

unint64_t sub_1C0BC2574()
{
  unint64_t result;

  result = qword_1EF641A48;
  if (!qword_1EF641A48)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A6298, &type metadata for KnosisXPCError);
    atomic_store(result, (unint64_t *)&qword_1EF641A48);
  }
  return result;
}

uint64_t static KnowledgeConstructionSystem.start()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  void *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v0 = sub_1C106AB28();
  MEMORY[0x1E0C80A78](v0);
  v38 = type metadata accessor for Configuration();
  MEMORY[0x1E0C80A78](v38);
  v36 = (uint64_t)&v35 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v35 - v3;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v35 - v6;
  if (qword_1ED762B18 != -1)
    swift_once();
  v8 = sub_1C106F544();
  v37 = sub_1C079E000(v8, (uint64_t)qword_1ED762AF8);
  v9 = (void *)v37;
  sub_1C106F538();
  v10 = sub_1C0784E0C();
  if (sub_1C078ABF4(v10))
  {
    *(_WORD *)sub_1C0780FC8() = 0;
    sub_1C07A6F34(&dword_1C0771000, v11, v12, "KnowledgeConstructionSystem: starting...");
    sub_1C0776778();
  }

  sub_1C106F19C();
  sub_1C079AD10((uint64_t)v7);
  static Features.optionsForEnabledFeatures.getter(&v39);
  v13 = v39 | 0x90;
  v14 = v40;
  sub_1C07ADF20();
  v15 = (uint64_t *)&v7[*(int *)(v38 + 20)];
  *v15 = v13;
  v15[1] = v14;
  sub_1C0F271FC((uint64_t)v7);
  sub_1C0F27870((uint64_t)v7);
  v16 = (void *)v37;
  sub_1C106F538();
  v17 = sub_1C0784E0C();
  if (sub_1C078ABF4(v17))
  {
    *(_WORD *)sub_1C0780FC8() = 0;
    sub_1C07A6F34(&dword_1C0771000, v18, v19, "KnowledgeConstructionSystem: running storage cleanup");
    sub_1C0776778();
  }

  sub_1C078E3E0((uint64_t)v7, (uint64_t)v4);
  sub_1C0799E28();
  sub_1C078E578((uint64_t)v4, (uint64_t)v7);
  if (sub_1C0D6A170((uint64_t)v7, v20, v21, v22, v23, v24, v25, v26) == 2)
  {
    sub_1C106F19C();
    sub_1C079AD10((uint64_t)v4);
    static Features.optionsForEnabledFeatures.getter(&v39);
    v27 = v39 | 1;
    v28 = v40;
    sub_1C07ADF20();
    v29 = (uint64_t *)&v4[*(int *)(v38 + 20)];
    *v29 = v27;
    v29[1] = v28;
    v30 = v36;
    sub_1C078E578((uint64_t)v4, v36);
    sub_1C0799E28();
    sub_1C078E578(v30, (uint64_t)v7);
    sub_1C09D1EA4();
    sub_1C0CF2104((uint64_t)v7);
    type metadata accessor for KnowledgeConstructionXPC();
    sub_1C078F834();
    v31 = v37;
    sub_1C106F538();
    v32 = sub_1C0784E0C();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)sub_1C0780FC8();
      *(_WORD *)v33 = 0;
      _os_log_impl(&dword_1C0771000, v31, v32, "KnowledgeConstructionSystem: storage system failed to start, will exit when process becomes clean after handling launch events.", v33, 2u);
      sub_1C0776778();
    }

    xpc_transaction_exit_clean();
  }
  else
  {
    sub_1C09D1EA4();
    sub_1C0CF2104((uint64_t)v7);
    type metadata accessor for KnowledgeConstructionXPC();
    sub_1C078F834();
  }
  return sub_1C0799E28();
}

ValueMetadata *type metadata accessor for KnowledgeConstructionSystem()
{
  return &type metadata for KnowledgeConstructionSystem;
}

void sub_1C0BC2940(uint64_t a1)
{
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  os_log_type_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  os_log_type_t v19;
  _WORD *v20;
  uint64_t v21;

  v4 = sub_1C07ACF80(&qword_1ED75E630);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED75E808 != -1)
    swift_once();
  v7 = sub_1C077585C();
  v8 = sub_1C079E000(v7, (uint64_t)qword_1ED78D7A0);
  sub_1C077C0FC();
  v9 = sub_1C0784E0C();
  if (sub_1C07767E4(v9))
  {
    v10 = (uint8_t *)sub_1C0780FC8();
    *(_WORD *)v10 = 0;
    sub_1C077F048(&dword_1C0771000, v1, v2, "KnowledgeConstructionXPC: starting...", v10);
    sub_1C0776778();
  }

  if (qword_1ED741EE0 != -1)
    swift_once();
  v11 = sub_1C079E000(v4, (uint64_t)qword_1ED78C450);
  sub_1C078E3E0(a1, (uint64_t)v6);
  v12 = sub_1C0779D10();
  sub_1C07B2D8C((uint64_t)v6, 0, 1, v12);
  swift_beginAccess();
  sub_1C0800ADC((uint64_t)v6, v11);
  swift_endAccess();
  sub_1C0800B24();
  sub_1C07AAFE4();
  v13 = sub_1C0BBE34C();
  v14 = (void *)qword_1ED78CCE8;
  qword_1ED78CCE8 = (uint64_t)v13;

  v15 = (void *)qword_1ED78CCE8;
  if (qword_1ED78CCE8)
  {
    v16 = objc_allocWithZone((Class)type metadata accessor for KnowledgeConstructionXPC.Delegate());
    v17 = v15;
    qword_1ED78CCE0 = (uint64_t)objc_msgSend(v16, sel_init);
    swift_unknownObjectRelease();
    -[NSObject setDelegate:](v17, sel_setDelegate_, qword_1ED78CCE0);
    -[NSObject resume](v17, sel_resume);
  }
  else
  {
    v18 = v8;
    v17 = sub_1C106F538();
    v19 = sub_1C107039C();
    if (sub_1C077F60C(v19))
    {
      v20 = (_WORD *)sub_1C0780FC8();
      sub_1C078C17C(v20);
      sub_1C077AF3C(&dword_1C0771000, v17, v18, "Failed to create KnowledgeConstruction XPC service");
      sub_1C0776778();
    }
  }

}

uint64_t sub_1C0BC2BA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1C07ACF80(&qword_1ED75E630);
  sub_1C0800A9C(v0, qword_1ED78C450);
  v1 = sub_1C079E000(v0, (uint64_t)qword_1ED78C450);
  v2 = type metadata accessor for Configuration();
  return sub_1C07B2D8C(v1, 1, 1, v2);
}

uint64_t sub_1C0BC2C2C(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  _WORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)();
  uint64_t v23;

  v3 = sub_1C07ACF80(&qword_1ED75E630);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED741EE0 != -1)
    swift_once();
  v6 = sub_1C079E000(v3, (uint64_t)qword_1ED78C450);
  sub_1C0775864();
  sub_1C07B9D5C(v6, (uint64_t)v5);
  v7 = sub_1C0779D10();
  result = sub_1C07B2D80((uint64_t)v5, 1, v7);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v9 = *(_QWORD *)&v5[*(int *)(v7 + 20)];
    sub_1C078D09C((uint64_t)v5);
    if ((v9 & 1) != 0)
    {
      if (qword_1ED75E808 != -1)
        swift_once();
      v15 = sub_1C077585C();
      v16 = sub_1C077965C(v15, (uint64_t)qword_1ED78D7A0);
      v17 = sub_1C10703A8();
      if (sub_1C077F60C(v17))
      {
        v18 = (_WORD *)sub_1C0780FC8();
        sub_1C078C17C(v18);
        sub_1C077AF3C(&dword_1C0771000, v16, (os_log_type_t)a2, "KnowledgeConstructionXPC: service is in no-op mode.");
        sub_1C0776778();
      }

    }
    else
    {
      sub_1C07AAFE4();
      if ((sub_1C0C47FA8() & 1) != 0)
      {
        v10 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_1EF6D60D8);
        sub_1C0784EE0((uint64_t)v10, sel_setExportedInterface_);

        v11 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for KnowledgeConstructionXPC.Server()), sel_init);
        sub_1C0784EE0((uint64_t)v11, sel_setExportedObject_);

        v22 = sub_1C0BC2EDC;
        v23 = 0;
        v12 = MEMORY[0x1E0C809B0];
        v20 = MEMORY[0x1E0C809B0];
        v21 = 1107296256;
        v13 = sub_1C077E8F4((uint64_t)&unk_1E7A225F8);
        sub_1C0784EE0((uint64_t)v13, sel_setInterruptionHandler_);
        _Block_release(v13);
        v22 = sub_1C0BC2EF0;
        v23 = 0;
        v20 = v12;
        v21 = 1107296256;
        v14 = sub_1C077E8F4((uint64_t)&unk_1E7A22620);
        sub_1C0784EE0((uint64_t)v14, sel_setInvalidationHandler_);
        _Block_release(v14);
        objc_msgSend(a2, sel_resume);
        return 1;
      }
    }
    return 0;
  }
  return result;
}

id KnowledgeConstructionXPC.Server.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void sub_1C0BC2EDC()
{
  sub_1C0BC2F04(MEMORY[0x1E0DF2280], "KnowledgeConstructionXPC: connection interrupted.");
}

void sub_1C0BC2EF0()
{
  sub_1C0BC2F04(MEMORY[0x1E0DF2290], "KnowledgeConstructionXPC: connection invalidated.");
}

void sub_1C0BC2F04(uint64_t (*a1)(void), const char *a2)
{
  uint64_t v4;
  os_log_type_t v5;
  _WORD *v6;
  NSObject *oslog;

  if (qword_1ED75E808 != -1)
    swift_once();
  v4 = sub_1C077585C();
  oslog = sub_1C077965C(v4, (uint64_t)qword_1ED78D7A0);
  v5 = a1();
  if (os_log_type_enabled(oslog, v5))
  {
    v6 = (_WORD *)sub_1C0780FC8();
    sub_1C078C17C(v6);
    sub_1C077AF3C(&dword_1C0771000, oslog, v5, a2);
    sub_1C0776778();
  }

}

uint64_t KnowledgeConstructionXPC.Server.runFullPipeline(with:)(uint64_t a1)
{
  _QWORD *v1;

  v1[7] = a1;
  v1[8] = sub_1C07ACF80(&qword_1ED75E630);
  v1[9] = sub_1C0779D74();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0BC3074()
{
  os_log_type_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint64_t v5;
  os_log_type_t v6;
  uint8_t *v7;
  void *v8;
  uint64_t v9;
  uint64_t result;
  char v11;
  NSObject *v12;
  id v13;
  os_log_type_t v14;
  uint8_t *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  _WORD *v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v22;
  _QWORD *v23;

  if (!objc_msgSend((id)objc_opt_self(), sel_isInternalDevice))
  {
    if (qword_1ED75E808 != -1)
      swift_once();
    v18 = sub_1C077585C();
    sub_1C077965C(v18, (uint64_t)qword_1ED78D7A0);
    v19 = sub_1C0784E0C();
    if (sub_1C077C10C(v19))
    {
      v20 = (_WORD *)sub_1C0780FC8();
      sub_1C078C17C(v20);
      sub_1C077AF3C(&dword_1C0771000, v1, v0, "KnowledgeConstructionXPC: API disabled on customer devices.");
      sub_1C0776778();
    }

    goto LABEL_23;
  }
  if (qword_1ED75E808 != -1)
    swift_once();
  v5 = sub_1C077585C();
  *(_QWORD *)(v3 + 80) = v5;
  *(_QWORD *)(v3 + 88) = sub_1C079E000(v5, (uint64_t)qword_1ED78D7A0);
  sub_1C077C0FC();
  v6 = sub_1C0784E0C();
  if (sub_1C07758D8(v6))
  {
    v7 = (uint8_t *)sub_1C0780FC8();
    *(_WORD *)v7 = 0;
    sub_1C077F048(&dword_1C0771000, v1, v2, "KnowledgeConstructionXPC: runFullPipeline", v7);
    sub_1C0776778();
  }

  if (qword_1ED741EE0 != -1)
    swift_once();
  v8 = (void *)sub_1C079E000(*(_QWORD *)(v3 + 64), (uint64_t)qword_1ED78C450);
  sub_1C0775864();
  sub_1C079F678((uint64_t)v8);
  v9 = sub_1C0779D10();
  result = sub_1C078B100(v9);
  if (v11)
  {
    __break(1u);
  }
  else
  {
    if (qword_1ED755EC8 != -1)
      swift_once();
    v12 = sub_1C07A5ED0();
    *(_QWORD *)(v3 + 96) = v12;
    sub_1C078D09C(*(_QWORD *)(v3 + 72));
    if (v8)
    {
      *(_QWORD *)(v3 + 40) = v8;
      v13 = v8;
      sub_1C07ACF80(&qword_1ED7614F0);
      if ((sub_1C0791E2C() & 1) == 0)
      {
        sub_1C0795B54();
        swift_task_dealloc();
        v22 = sub_1C079C6C0();
        return v21(v22);
      }

      if (qword_1ED761458 != -1)
        swift_once();
      sub_1C077965C(*(_QWORD *)(v3 + 80), (uint64_t)qword_1ED78D818);
      v14 = sub_1C0784E0C();
      if (sub_1C077AF00(v14))
      {
        v15 = (uint8_t *)sub_1C0775854();
        v16 = (_QWORD *)sub_1C0775854();
        *(_DWORD *)v15 = 138412290;
        sub_1C0BC4114();
        sub_1C0775810();
        v17 = _swift_stdlib_bridgeErrorToNSError();
        *(_QWORD *)(v3 + 48) = v17;
        sub_1C10705AC();
        *v16 = v17;
        _os_log_impl(&dword_1C0771000, v12, v4, "%@: Pipeline retired same phase multiple times. Need to invoke long running construction xpc activity", v15, 0xCu);
        sub_1C07ACF80(&qword_1ED7614A0);
        swift_arrayDestroy();
        sub_1C0776778();
      }

LABEL_23:
      sub_1C07B8B54();
      v21 = *(uint64_t (**)(uint64_t))(v3 + 8);
      v22 = 0;
      return v21(v22);
    }
    v23 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v3 + 104) = v23;
    *v23 = v3;
    v23[1] = sub_1C0BC3424;
    return sub_1C0CBD984(*(_QWORD *)(v3 + 56));
  }
  return result;
}

uint64_t sub_1C0BC3424()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  sub_1C077862C();
  return sub_1C0789D28();
}

uint64_t sub_1C0BC3484()
{
  os_log_type_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _WORD *v4;

  v2 = *(NSObject **)(v1 + 88);
  sub_1C106F538();
  v3 = sub_1C0784E0C();
  if (sub_1C077C10C(v3))
  {
    v4 = (_WORD *)sub_1C0780FC8();
    sub_1C078C17C(v4);
    sub_1C077AF3C(&dword_1C0771000, v2, v0, "KnowledgeConstructionXPC: runFullPipeline: done");
    sub_1C0776778();
  }

  sub_1C07B8B54();
  return sub_1C0787904(1, *(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1C0BC34F8()
{
  os_log_type_t v0;
  _QWORD *v1;
  NSObject *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  swift_release();
  v2 = v1[14];
  v1[5] = v2;
  v3 = v2;
  sub_1C07ACF80(&qword_1ED7614F0);
  if (sub_1C0791E2C())
  {

    if (qword_1ED761458 != -1)
      swift_once();
    sub_1C077965C(v1[10], (uint64_t)qword_1ED78D818);
    v4 = sub_1C0784E0C();
    if (sub_1C07758D8(v4))
    {
      v5 = (uint8_t *)sub_1C0775854();
      v6 = (_QWORD *)sub_1C0775854();
      *(_DWORD *)v5 = 138412290;
      sub_1C0BC4114();
      sub_1C0775810();
      v7 = _swift_stdlib_bridgeErrorToNSError();
      v1[6] = v7;
      sub_1C10705AC();
      *v6 = v7;
      _os_log_impl(&dword_1C0771000, v2, v0, "%@: Pipeline retired same phase multiple times. Need to invoke long running construction xpc activity", v5, 0xCu);
      sub_1C07ACF80(&qword_1ED7614A0);
      swift_arrayDestroy();
      sub_1C0776778();
    }

    sub_1C0795B54();
    sub_1C07B8B54();
    v8 = (uint64_t (*)(void))v1[1];
  }
  else
  {
    sub_1C0795B54();
    swift_task_dealloc();
    v8 = (uint64_t (*)(void))v1[1];
  }
  return sub_1C078C778(0, v8);
}

uint64_t sub_1C0BC36B8(uint64_t a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  id v6;
  _QWORD *v7;

  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  v6 = a3;
  v7 = (_QWORD *)swift_task_alloc();
  v3[4] = v7;
  *v7 = v3;
  v7[1] = sub_1C0BC430C;
  return KnowledgeConstructionXPC.Server.runFullPipeline(with:)(a1);
}

uint64_t KnowledgeConstructionXPC.Server.runFastpassPipeline(with:)(uint64_t a1)
{
  _QWORD *v1;

  v1[5] = a1;
  v1[6] = sub_1C07ACF80(&qword_1ED75E630);
  v1[7] = sub_1C0779D74();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0BC376C()
{
  os_log_type_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  char v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  os_log_type_t v15;
  _WORD *v16;
  _QWORD *v17;

  v4 = objc_msgSend((id)objc_opt_self(), sel_isInternalDevice);
  *(_BYTE *)(v3 + 96) = v4;
  if (!v4)
  {
    if (qword_1ED75E808 != -1)
      swift_once();
    v14 = sub_1C077585C();
    sub_1C077965C(v14, (uint64_t)qword_1ED78D7A0);
    v15 = sub_1C0784E0C();
    if (sub_1C077C10C(v15))
    {
      v16 = (_WORD *)sub_1C0780FC8();
      sub_1C078C17C(v16);
      sub_1C077AF3C(&dword_1C0771000, v1, v0, "KnowledgeConstructionXPC: API disabled on customer devices.");
      sub_1C0776778();
    }

    sub_1C07A1E6C();
    v13 = *(uint64_t (**)(uint64_t))(v3 + 8);
    v12 = *(unsigned __int8 *)(v3 + 96);
    return v13(v12);
  }
  if (qword_1ED75E808 != -1)
    swift_once();
  v5 = sub_1C077585C();
  *(_QWORD *)(v3 + 64) = sub_1C079E000(v5, (uint64_t)qword_1ED78D7A0);
  sub_1C077C0FC();
  v6 = sub_1C0784E0C();
  if (sub_1C07758D8(v6))
  {
    v7 = (uint8_t *)sub_1C0780FC8();
    *(_WORD *)v7 = 0;
    sub_1C077F048(&dword_1C0771000, v1, v2, "KnowledgeConstructionXPC: runFastpassPipeline", v7);
    sub_1C0776778();
  }

  if (qword_1ED741EE0 != -1)
    swift_once();
  v8 = sub_1C079E000(*(_QWORD *)(v3 + 48), (uint64_t)qword_1ED78C450);
  sub_1C0775864();
  sub_1C079F678(v8);
  v9 = sub_1C0779D10();
  result = sub_1C078B100(v9);
  if (v11)
  {
    __break(1u);
  }
  else
  {
    if (qword_1ED755EC8 != -1)
      swift_once();
    *(_QWORD *)(v3 + 72) = sub_1C07A5ED0();
    sub_1C078D09C(*(_QWORD *)(v3 + 56));
    if (v8)
    {
      sub_1C07A1E6C();
      v12 = sub_1C079C6C0();
      return v13(v12);
    }
    v17 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v3 + 80) = v17;
    *v17 = v3;
    v17[1] = sub_1C0BC39B4;
    return sub_1C0CBDA30(*(_QWORD *)(v3 + 40));
  }
  return result;
}

uint64_t sub_1C0BC39B4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  sub_1C077862C();
  return sub_1C0789D28();
}

uint64_t sub_1C0BC3A14()
{
  os_log_type_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _WORD *v4;

  v2 = *(NSObject **)(v1 + 64);
  sub_1C106F538();
  v3 = sub_1C0784E0C();
  if (sub_1C077C10C(v3))
  {
    v4 = (_WORD *)sub_1C0780FC8();
    sub_1C078C17C(v4);
    sub_1C077AF3C(&dword_1C0771000, v2, v0, "KnowledgeConstructionXPC: runFastpassPipeline: done");
    sub_1C0776778();
  }

  sub_1C07A1E6C();
  return sub_1C0787904(*(unsigned __int8 *)(v1 + 96), *(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1C0BC3A88()
{
  uint64_t v0;

  swift_release();
  sub_1C07A1E6C();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1C0BC3AD8(void *a1, int a2, uint64_t a3, void *aBlock, uint64_t a5, uint64_t a6)
{
  void *v9;
  _QWORD *v10;
  id v11;

  v9 = _Block_copy(aBlock);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a3;
  v10[3] = v9;
  v10[4] = a1;
  v11 = a1;
  return sub_1C0F09A4C(a6, (uint64_t)v10);
}

uint64_t sub_1C0BC3B44(uint64_t a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  id v6;
  _QWORD *v7;

  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  v6 = a3;
  v7 = (_QWORD *)swift_task_alloc();
  v3[4] = v7;
  *v7 = v3;
  v7[1] = sub_1C0BC430C;
  return KnowledgeConstructionXPC.Server.runFastpassPipeline(with:)(a1);
}

uint64_t KnowledgeConstructionXPC.Server.stopPipeline()()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 40) = sub_1C07ACF80(&qword_1ED75E630);
  *(_QWORD *)(v0 + 48) = sub_1C0779D74();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0BC3BF4()
{
  NSObject *v0;
  _QWORD *v1;
  uint64_t v2;
  os_log_type_t v3;
  id v4;
  uint64_t v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  char v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  os_log_type_t v15;
  _WORD *v16;
  const char *v17;
  os_log_type_t v18;
  _WORD *v19;

  v4 = objc_msgSend((id)objc_opt_self(), sel_isInternalDevice);
  if (!(_DWORD)v4)
  {
    if (qword_1ED75E808 != -1)
      swift_once();
    v14 = sub_1C077585C();
    sub_1C077965C(v14, (uint64_t)qword_1ED78D7A0);
    v15 = sub_1C0784E0C();
    if (sub_1C077AF00(v15))
    {
      v16 = (_WORD *)sub_1C0780FC8();
      sub_1C078C17C(v16);
      v17 = "KnowledgeConstructionXPC: API disabled on customer devices.";
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  if (qword_1ED75E808 != -1)
    swift_once();
  v5 = sub_1C077585C();
  v2 = sub_1C079E000(v5, (uint64_t)qword_1ED78D7A0);
  sub_1C077C0FC();
  v6 = sub_1C0784E0C();
  if (sub_1C07767E4(v6))
  {
    v7 = (uint8_t *)sub_1C0780FC8();
    *(_WORD *)v7 = 0;
    sub_1C077F048(&dword_1C0771000, v0, v3, "KnowledgeConstructionXPC: stopPipeline", v7);
    sub_1C0776778();
  }

  if (qword_1ED741EE0 != -1)
    swift_once();
  v8 = sub_1C079E000(v1[5], (uint64_t)qword_1ED78C450);
  sub_1C0775864();
  sub_1C079F678(v8);
  v9 = sub_1C0779D10();
  result = sub_1C078B100(v9);
  if (!v11)
  {
    if (qword_1ED755EC8 != -1)
      swift_once();
    sub_1C07A5ED0();
    sub_1C078D09C(v1[6]);
    if (v1 != (_QWORD *)-16)
    {
      swift_task_dealloc();
      v12 = sub_1C079C6C0();
      return v13(v12);
    }
    sub_1C0CBD7A0();
    swift_release();
    v0 = v2;
    sub_1C106F538();
    v18 = sub_1C0784E0C();
    if (sub_1C077AF00(v18))
    {
      v19 = (_WORD *)sub_1C0780FC8();
      sub_1C078C17C(v19);
      v17 = "KnowledgeConstructionXPC: stopPipeline: done";
LABEL_18:
      sub_1C077AF3C(&dword_1C0771000, v0, (os_log_type_t)v2, v17);
      sub_1C0776778();
    }
LABEL_19:

    swift_task_dealloc();
    v13 = (uint64_t (*)(uint64_t))v1[1];
    v12 = (uint64_t)v4;
    return v13(v12);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0BC3E5C(const void *a1, void *a2)
{
  _QWORD *v2;
  id v4;
  _QWORD *v5;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  v4 = a2;
  v5 = (_QWORD *)swift_task_alloc();
  v2[4] = v5;
  *v5 = v2;
  v5[1] = sub_1C0BC3EB8;
  return KnowledgeConstructionXPC.Server.stopPipeline()();
}

uint64_t sub_1C0BC3EB8(char a1)
{
  void *v1;
  uint64_t *v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v4 = *(void **)(*v2 + 16);
  v5 = *v2;
  swift_task_dealloc();

  v6 = *(_QWORD *)(v5 + 24);
  if (v1)
  {
    v7 = (void *)sub_1C106AA08();

    (*(void (**)(uint64_t, _QWORD, void *))(v6 + 16))(v6, 0, v7);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v6 + 16))(*(_QWORD *)(v5 + 24), a1 & 1, 0);
  }
  _Block_release(*(const void **)(v5 + 24));
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t KnowledgeConstructionXPC.Server.checkIn()()
{
  sub_1C077862C();
  return swift_task_switch();
}

uint64_t sub_1C0BC3F7C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  os_log_type_t v6;
  _WORD *v7;

  if (qword_1ED75E808 != -1)
    swift_once();
  v2 = sub_1C077585C();
  v3 = sub_1C077965C(v2, (uint64_t)qword_1ED78D7A0);
  v4 = sub_1C10703A8();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)sub_1C0780FC8();
    *(_WORD *)v5 = 0;
    sub_1C077F048(&dword_1C0771000, v3, v4, "KnowledgeConstructionXPC: checkIn", v5);
    sub_1C0776778();
  }

  sub_1C106F538();
  v6 = sub_1C0784E0C();
  if (sub_1C077C10C(v6))
  {
    v7 = (_WORD *)sub_1C0780FC8();
    sub_1C078C17C(v7);
    sub_1C077AF3C(&dword_1C0771000, v0, (os_log_type_t)v3, "KnowledgeConstructionXPC: checkIn: done");
    sub_1C0776778();
  }

  return sub_1C078C778(1, *(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1C0BC4090(const void *a1, void *a2)
{
  _QWORD *v2;
  id v4;
  _QWORD *v5;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  v4 = a2;
  v5 = (_QWORD *)swift_task_alloc();
  v2[4] = v5;
  *v5 = v2;
  v5[1] = sub_1C0BC430C;
  return KnowledgeConstructionXPC.Server.checkIn()();
}

unint64_t sub_1C0BC4114()
{
  unint64_t result;

  result = qword_1EF641A58;
  if (!qword_1EF641A58)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B1FD0, &type metadata for PipelineSignal);
    atomic_store(result, (unint64_t *)&qword_1EF641A58);
  }
  return result;
}

uint64_t type metadata accessor for KnowledgeConstructionXPC()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for KnowledgeConstructionXPC.Delegate()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for KnowledgeConstructionXPC.Server()
{
  return objc_opt_self();
}

uint64_t sub_1C0BC41B4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1C077B274(v1, (uint64_t)sub_1C08B8620);
  return sub_1C07815D4(v2, v3, v4);
}

uint64_t sub_1C0BC41FC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1C077B274(v1, (uint64_t)sub_1C0806670);
  return sub_1C07815D4(v2, v3, v4);
}

uint64_t sub_1C0BC4244()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1C079A9D4(v1, (uint64_t)sub_1C08B8620);
  return sub_1C078C734(v2, v3, v4, v5);
}

uint64_t sub_1C0BC4290()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));

  return swift_deallocObject();
}

uint64_t sub_1C0BC42BC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1C079A9D4(v1, (uint64_t)sub_1C08B8620);
  return sub_1C078C734(v2, v3, v4, v5);
}

void sub_1C0BC4314()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t);
  uint64_t v35;
  uint64_t v36;

  sub_1C0779670();
  sub_1C07ACF80(&qword_1ED7548E0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v2);
  v3 = sub_1C079C6F4();
  v36 = *(_QWORD *)(v3 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v4);
  v6 = sub_1C079D64C(v5, v35);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  sub_1C0778564();
  v10 = v9 - v8;
  v11 = sub_1C0BC9770();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  sub_1C077AF80();
  v15 = (char *)(v13 - v14);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v35 - v17;
  sub_1C07ACF80(&qword_1ED7449B0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v19);
  sub_1C077864C();
  sub_1C106AEC4();
  sub_1C106AEE8();
  v20 = *(void (**)(char *, uint64_t))(v12 + 8);
  v20(v18, v11);
  sub_1C106AED0();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v6);
  v21 = sub_1C106AE4C();
  sub_1C077AEEC(v1, 1, v21);
  if (v22)
  {
    sub_1C08C8AE8(v1, &qword_1ED7449B0);
  }
  else
  {
    sub_1C106AE40();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v1, v21);
  }
  v23 = sub_1C106FAF0();
  sub_1C077960C();
  sub_1C106AEC4();
  sub_1C106AEB8();
  v20(v15, v11);
  sub_1C077AEEC(v0, 1, v3);
  if (v22)
  {
    v25 = v35;
    sub_1C0785114();
    sub_1C08C8AE8(v0, &qword_1ED7548E0);
    v24 = v36;
  }
  else
  {
    v25 = v35;
    v24 = v36;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 32))(v35, v0, v3);
  }
  sub_1C07ACF80(&qword_1EF641B50);
  v26 = sub_1C07ACF80(&qword_1EF641B58);
  sub_1C0789EB4();
  v29 = v28 & ~v27;
  v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_1C1079220;
  v31 = (uint64_t *)(v30 + v29);
  v32 = v30 + v29 + *(int *)(v26 + 48);
  *v31 = v23;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v32, v25, v3);
  sub_1C0BC9768();
  sub_1C07803B8((unint64_t *)&unk_1ED754B78, (uint64_t (*)(uint64_t))type metadata accessor for NLLanguage, (uint64_t)&unk_1C1078990);
  sub_1C106F97C();
  v33 = sub_1C078CA2C();
  v34(v33);
  sub_1C0776760();
}

void sub_1C0BC45DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  char v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;

  sub_1C0779670();
  a19 = v20;
  a20 = v21;
  v22 = sub_1C0BC9770();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  sub_1C077AF80();
  v26 = (char *)(v24 - v25);
  MEMORY[0x1E0C80A78](v27);
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&a9 - v29;
  sub_1C07ACF80(&qword_1ED7548E0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v31);
  sub_1C077AF80();
  v34 = v32 - v33;
  MEMORY[0x1E0C80A78](v35);
  v37 = (char *)&a9 - v36;
  sub_1C106AEC4();
  sub_1C106AEB8();
  v38 = *(void (**)(char *, uint64_t))(v23 + 8);
  v38(v30, v22);
  v39 = sub_1C106AEA0();
  sub_1C077AEEC((uint64_t)v37, 1, v39);
  if (v40)
  {
    sub_1C08C8AE8((uint64_t)v37, &qword_1ED7548E0);
  }
  else
  {
    sub_1C106AE40();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v39 - 8) + 8))(v37, v39);
  }
  sub_1C106AEC4();
  v41 = (void *)sub_1C106AE70();
  v42 = sub_1C078CA2C();
  ((void (*)(uint64_t))v38)(v42);
  v43 = *MEMORY[0x1E0C997B0];
  v44 = (void *)sub_1C106FAF0();
  swift_bridgeObjectRelease();
  v45 = objc_msgSend(v41, sel_displayNameForKey_value_, v43, v44);

  if (v45)
  {
    v46 = sub_1C106FB14();
    v48 = v47;

  }
  else
  {
    v46 = 0;
    v48 = 0;
  }
  sub_1C07ACF80(&qword_1EF641B50);
  v49 = sub_1C07ACF80(&qword_1EF641B58);
  sub_1C0789EB4();
  v52 = v51 & ~v50;
  v53 = swift_allocObject();
  *(_OWORD *)(v53 + 16) = xmmword_1C1079220;
  v54 = (uint64_t *)(v53 + v52);
  if (v48)
    v55 = v46;
  else
    v55 = 0;
  if (v48)
    v56 = v48;
  else
    v56 = 0xE000000000000000;
  v57 = (char *)v54 + *(int *)(v49 + 48);
  v58 = sub_1C0BC48D4(v55, v56);
  sub_1C077960C();
  *v54 = v58;
  sub_1C106AEC4();
  sub_1C106AEB8();
  v38(v26, v22);
  sub_1C077AEEC(v34, 1, v39);
  if (v40)
  {
    sub_1C0785114();
    sub_1C08C8AE8(v34, &qword_1ED7548E0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v57, v34, v39);
  }
  sub_1C0BC9768();
  sub_1C07803B8((unint64_t *)&unk_1ED754B78, (uint64_t (*)(uint64_t))type metadata accessor for NLLanguage, (uint64_t)&unk_1C1078990);
  sub_1C078CA2C();
  sub_1C106F97C();
  sub_1C0776760();
}

uint64_t sub_1C0BC48D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  char v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;

  sub_1C0BC5B7C();
  if (v4)
  {
    v5 = sub_1C0C65E34(v4);
    sub_1C0778580();
    if (v5)
    {
      v6 = v5 + 64;
      sub_1C078D538();
      v9 = v8 & v7;
      v11 = (unint64_t)(v10 + 63) >> 6;
      result = sub_1C077AE90();
      v13 = 0;
      while (1)
      {
        if (v9)
        {
          v14 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          v15 = v14 | (v13 << 6);
        }
        else
        {
          v16 = v13 + 1;
          if (__OFADD__(v13, 1))
          {
            __break(1u);
            goto LABEL_41;
          }
          if (v16 >= v11)
            goto LABEL_39;
          ++v13;
          if (!*(_QWORD *)(v6 + 8 * v16))
          {
            v13 = v16 + 1;
            if (v16 + 1 >= v11)
              goto LABEL_39;
            if (!*(_QWORD *)(v6 + 8 * v13))
            {
              v13 = v16 + 2;
              if (v16 + 2 >= v11)
                goto LABEL_39;
              if (!*(_QWORD *)(v6 + 8 * v13))
              {
                v13 = v16 + 3;
                if (v16 + 3 >= v11)
                  goto LABEL_39;
                if (!*(_QWORD *)(v6 + 8 * v13))
                {
                  v13 = v16 + 4;
                  if (v16 + 4 >= v11)
                    goto LABEL_39;
                  if (!*(_QWORD *)(v6 + 8 * v13))
                  {
                    v17 = v16 + 5;
                    if (v17 >= v11)
                    {
LABEL_39:
                      swift_release();
                      sub_1C077960C();
                      sub_1C106AE7C();
                      sub_1C0778580();
                      v30 = sub_1C106FAF0();
                      sub_1C077960C();
                      return v30;
                    }
                    if (!*(_QWORD *)(v6 + 8 * v17))
                    {
                      while (1)
                      {
                        v13 = v17 + 1;
                        if (__OFADD__(v17, 1))
                          break;
                        if (v13 >= v11)
                          goto LABEL_39;
                        ++v17;
                        if (*(_QWORD *)(v6 + 8 * v13))
                          goto LABEL_23;
                      }
                      __break(1u);
                      return result;
                    }
                    v13 = v17;
                  }
                }
              }
            }
          }
LABEL_23:
          sub_1C07888CC();
          v9 = v19 & v18;
          v15 = v20 + (v13 << 6);
        }
        v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v15);
        v23 = *v21;
        v22 = v21[1];
        if (*v21 == a1 && v22 == a2)
          break;
        result = sub_1C1070CB4();
        if ((result & 1) != 0)
        {
LABEL_31:
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          sub_1C0778580();
          if (*(_QWORD *)(v5 + 16))
          {
            sub_1C077D774(v23, v22);
            if ((v25 & 1) != 0)
              _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          }
          result = swift_bridgeObjectRelease();
        }
      }
      v23 = a1;
      v22 = a2;
      goto LABEL_31;
    }
  }
  if (qword_1ED762400 != -1)
LABEL_41:
    swift_once();
  v26 = sub_1C077585C();
  sub_1C079E000(v26, (uint64_t)qword_1ED78DA10);
  v27 = sub_1C077C0FC();
  v28 = sub_1C1070390();
  if (os_log_type_enabled(v27, v28))
  {
    v29 = (uint8_t *)sub_1C0775854();
    *(_WORD *)v29 = 0;
    _os_log_impl(&dword_1C0771000, v27, v28, "Mapping file countries_languages could not be extracted for Languages", v29, 2u);
    sub_1C0776778();
  }

  return sub_1C106FAF0();
}

void sub_1C0BC4BC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  uint64_t v52[2];
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  sub_1C0779670();
  sub_1C07ACF80(&qword_1ED7548E0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v2);
  v3 = sub_1C079C6F4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = sub_1C079D64C(v5, v52[0]);
  v62 = *(_QWORD *)(v6 - 8);
  v63 = v6;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v7);
  v61 = (char *)v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07ACF80(&qword_1ED7449B0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v9);
  sub_1C0778564();
  v12 = v11 - v10;
  v13 = sub_1C0BC9770();
  v59 = *(_QWORD *)(v13 - 8);
  v60 = v13;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v14);
  sub_1C077864C();
  v15 = sub_1C07ACF80(&qword_1EF6331C8);
  sub_1C0BC94F8();
  v56 = sub_1C106F97C();
  v16 = sub_1C106AE64();
  v17 = *(_QWORD *)(v16 + 16);
  if (!v17)
  {
LABEL_28:
    swift_bridgeObjectRelease();
    sub_1C0776760();
    return;
  }
  v52[0] = v15;
  v52[1] = v16;
  v18 = v16 + 40;
  v55 = xmmword_1C1079220;
  v57 = v4;
  v58 = v12;
  v53 = v3;
  v54 = v0;
  while (1)
  {
    sub_1C07767B4();
    sub_1C106AE34();
    sub_1C106AEE8();
    sub_1C106AED0();
    sub_1C078AC90(v62);
    v19 = sub_1C106AE4C();
    sub_1C077AEEC(v12, 1, v19);
    if (v20)
    {
      sub_1C08C8AE8(v12, &qword_1ED7449B0);
      v23 = 0;
    }
    else
    {
      sub_1C106AE40();
      v21 = v12;
      v23 = v22;
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v21, v19);
    }
    sub_1C106AEB8();
    sub_1C077AEEC(v0, 1, v3);
    if (v20)
    {
      sub_1C0785114();
      sub_1C08C8AE8(v0, &qword_1ED7548E0);
      if (!v23)
        goto LABEL_27;
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v64, v0, v3);
      if (!v23)
        goto LABEL_27;
    }
    sub_1C077AEBC();
    sub_1C07BFF84();
    v24 = sub_1C106FC34();
    sub_1C077B5B4();
    if (v24 <= 0)
    {
      sub_1C077B5B4();
      goto LABEL_27;
    }
    sub_1C07BFF84();
    v25 = (void *)sub_1C106FAF0();
    sub_1C077B5B4();
    v26 = sub_1C106FB14();
    v28 = v27;
    swift_bridgeObjectRelease();
    v29 = HIBYTE(v28) & 0xF;
    if ((v28 & 0x2000000000000000) == 0)
      v29 = v26 & 0xFFFFFFFFFFFFLL;
    if (!v29)
    {

      v4 = v57;
      goto LABEL_27;
    }
    sub_1C07ACF80(&qword_1EF641B50);
    v30 = sub_1C07ACF80(&qword_1EF641B58);
    sub_1C0789EB4();
    v33 = v32 & ~v31;
    v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = v55;
    v35 = (_QWORD *)(v34 + v33);
    v36 = v34 + v33 + *(int *)(v30 + 48);
    *v35 = v25;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 16))(v36, v64, v3);
    sub_1C0BC9768();
    sub_1C07803B8((unint64_t *)&unk_1ED754B78, (uint64_t (*)(uint64_t))type metadata accessor for NLLanguage, (uint64_t)&unk_1C1078990);
    v37 = v25;
    v38 = sub_1C106F97C();
    v39 = v56;
    swift_isUniquelyReferenced_nonNull_native();
    v65 = v39;
    sub_1C07B672C();
    sub_1C07B7368();
    if (__OFADD__(v42, v43))
      break;
    v44 = v40;
    v45 = v41;
    sub_1C07ACF80(&qword_1EF6331C0);
    v46 = sub_1C107090C();
    v4 = v57;
    if ((v46 & 1) != 0)
    {
      sub_1C07B672C();
      sub_1C07A5548();
      if (!v20)
        goto LABEL_31;
      v44 = v47;
    }
    v56 = v65;
    if ((v45 & 1) != 0)
    {
      *(_QWORD *)(*(_QWORD *)(v65 + 56) + 8 * v44) = 0x3FF0000000000000;
    }
    else
    {
      sub_1C078302C(v65 + 8 * (v44 >> 6));
      *(_QWORD *)(v48[6] + 8 * v44) = v38;
      *(_QWORD *)(v48[7] + 8 * v44) = 0x3FF0000000000000;
      v49 = v48[2];
      v50 = __OFADD__(v49, 1);
      v51 = v49 + 1;
      if (v50)
        goto LABEL_30;
      v48[2] = v51;
      sub_1C07767C4();
    }

    sub_1C0775894();
    swift_bridgeObjectRelease();
    v3 = v53;
    v0 = v54;
LABEL_27:
    v18 += 16;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v64, v3);
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v1, v60);
    --v17;
    v12 = v58;
    if (!v17)
      goto LABEL_28;
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  sub_1C1070D44();
  __break(1u);
}

uint64_t sub_1C0BC5034()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  _QWORD *v5;
  void *v6;
  unsigned int v7;
  id v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _DWORD *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  BOOL v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  double v29;
  double v30;
  void **v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t result;
  void *v44;
  void *v45;
  uint64_t v46;
  uint64_t i;
  double *v48;
  uint64_t v49;
  _QWORD *v50;
  id aBlock[8];

  aBlock[6] = *(id *)MEMORY[0x1E0C80C00];
  v0 = sub_1C0778598();
  sub_1C07ACF80(&qword_1EF6331C8);
  sub_1C0BC94F8();
  *(_QWORD *)(v0 + 16) = sub_1C106F97C();
  v1 = v0 + 16;
  v2 = sub_1C0778598();
  *(_QWORD *)(v2 + 16) = 0;
  v48 = (double *)(v2 + 16);
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D70B98]), sel_init);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D70B88]), sel_init);
  objc_msgSend(v4, sel_setLimit_, 1000);
  v5 = (_QWORD *)sub_1C0778598();
  v5[2] = v0;
  v5[3] = v2;
  aBlock[4] = sub_1C0BC973C;
  aBlock[5] = v5;
  aBlock[0] = (id)MEMORY[0x1E0C809B0];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_1C0BC5B78;
  aBlock[3] = &unk_1E7A22850;
  v6 = _Block_copy(aBlock);
  v46 = v0;
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  v44 = v3;
  v45 = v4;
  v7 = objc_msgSend(v3, sel_iterRankedLocationsWithQuery_error_block_, v4, aBlock, v6);
  _Block_release(v6);
  v8 = aBlock[0];
  if (!v7)
  {
    v6 = v8;
    sub_1C106AA14();

    swift_willThrow();
    if (qword_1ED761458 != -1)
LABEL_47:
      swift_once();
    v9 = sub_1C077585C();
    sub_1C079E000(v9, (uint64_t)qword_1ED78D818);
    sub_1C07964D4();
    sub_1C07964D4();
    v10 = sub_1C106F538();
    v11 = sub_1C1070390();
    if (sub_1C077AF00(v11))
    {
      v12 = (_DWORD *)sub_1C0775854();
      aBlock[0] = (id)sub_1C0775854();
      *v12 = 136315138;
      sub_1C07964D4();
      sub_1C07ACF80(&qword_1ED7614F0);
      v13 = sub_1C106FB5C();
      sub_1C0788DAC(v13, v14, (uint64_t *)aBlock);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      sub_1C07937B4();
      sub_1C07937B4();
      sub_1C07759F4(&dword_1C0771000, v10, (os_log_type_t)v4, "LanguageCounter: iterRankedLocationsWithQuery error: %s");
      sub_1C0778610();
      sub_1C0776778();
    }
    sub_1C07937B4();
    sub_1C07937B4();
    sub_1C07937B4();

  }
  sub_1C077F040();
  v15 = *(_QWORD *)v1;
  if (*(_QWORD *)(*(_QWORD *)v1 + 16))
  {
    v49 = v15 + 64;
    sub_1C07B84FC();
    v18 = v17 & v16;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C077F040();
    v19 = 0;
    v20 = ((unint64_t)v6 + 63) >> 6;
    for (i = v15; ; v15 = i)
    {
      while (1)
      {
        if (v18)
        {
          v21 = __clz(__rbit64(v18));
          v18 &= v18 - 1;
          v22 = v21 | (v19 << 6);
        }
        else
        {
          v23 = __OFADD__(v19++, 1);
          if (v23)
          {
            __break(1u);
LABEL_45:
            __break(1u);
LABEL_46:
            __break(1u);
            goto LABEL_47;
          }
          if (v19 >= v20)
            goto LABEL_41;
          v24 = *(_QWORD *)(v49 + 8 * v19);
          if (!v24)
          {
            if (v19 + 1 >= v20)
              goto LABEL_41;
            sub_1C0780BC4();
            if (!v24)
            {
              if (v19 + 2 >= v20)
                goto LABEL_41;
              sub_1C0780BC4();
              if (!v24)
              {
                if (v19 + 3 >= v20)
                  goto LABEL_41;
                sub_1C0780BC4();
                if (!v24)
                {
                  if (v19 + 4 >= v20)
                    goto LABEL_41;
                  sub_1C0780BC4();
                  if (!v24)
                  {
                    if (v19 + 5 >= v20)
                      goto LABEL_41;
                    sub_1C0780BC4();
                    if (!v24)
                    {
                      while (1)
                      {
                        v19 = v25 + 1;
                        if (__OFADD__(v25, 1))
                          __break(1u);
                        if (v19 >= v20)
                          break;
                        v24 = *(_QWORD *)(v49 + 8 * v19);
                        ++v25;
                        if (v24)
                          goto LABEL_24;
                      }
LABEL_41:

                      sub_1C07758C4();
                      goto LABEL_43;
                    }
                  }
                }
              }
            }
            v19 = v25;
          }
LABEL_24:
          v18 = (v24 - 1) & v24;
          v22 = __clz(__rbit64(v24)) + (v19 << 6);
        }
        v4 = *(id *)(*(_QWORD *)(v15 + 48) + 8 * v22);
        sub_1C077F040();
        v26 = *(_QWORD *)v1;
        v6 = *(void **)(*(_QWORD *)v1 + 16);
        sub_1C077AEBC();
        if (v6)
        {
          v27 = sub_1C0782764();
          if ((v28 & 1) != 0)
            break;
        }
        sub_1C0BC9760();
        sub_1C077B5B4();
      }
      v29 = *(double *)(*(_QWORD *)(v26 + 56) + 8 * v27);
      sub_1C0BC9760();
      v30 = *v48;
      sub_1C077F040();
      swift_isUniquelyReferenced_nonNull_native();
      v50 = *(_QWORD **)v1;
      v31 = (void **)v1;
      *(_QWORD *)v1 = 0x8000000000000000;
      sub_1C0782764();
      sub_1C07B7368();
      v6 = (void *)(v34 + v35);
      if (__OFADD__(v34, v35))
        goto LABEL_45;
      v1 = v32;
      v36 = v33;
      sub_1C07ACF80(&qword_1EF6331C0);
      if ((sub_1C107090C() & 1) != 0)
      {
        v37 = sub_1C0782764();
        if ((v36 & 1) != (v38 & 1))
        {
          result = sub_1C1070D44();
          __break(1u);
          return result;
        }
        v1 = v37;
      }
      if ((v36 & 1) != 0)
      {
        *(double *)(v50[7] + 8 * v1) = v29 / v30;
      }
      else
      {
        sub_1C078302C((uint64_t)&v50[v1 >> 6]);
        *(_QWORD *)(v50[6] + 8 * v1) = v4;
        *(_QWORD *)(v50[7] + 8 * v1) = v39;
        v40 = v50[2];
        v23 = __OFADD__(v40, 1);
        v41 = v40 + 1;
        if (v23)
          goto LABEL_46;
        v50[2] = v41;
        sub_1C077AEBC();
      }
      v1 = (unint64_t)v31;
      v6 = *v31;
      *v31 = v50;
      sub_1C077B5B4();
      swift_bridgeObjectRelease();
      sub_1C0BC9760();
    }
  }

LABEL_43:
  v42 = *(_QWORD *)(v46 + 16);
  sub_1C077AE90();
  swift_release();
  swift_release();
  return v42;
}

void sub_1C0BC566C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, char *, uint64_t);
  id v45;
  uint64_t v46;
  char v47;
  char v48;
  uint64_t v49;
  _QWORD *v50;
  char *v51;
  char *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  char v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;

  v7 = sub_1C106AEF4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1C106AEA0();
  v72 = *(_QWORD *)(v11 - 8);
  v73 = v11;
  v12 = MEMORY[0x1E0C80A78](v11);
  v74 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = objc_msgSend(a1, sel_location, v12);
  v15 = objc_msgSend(v14, sel_placemark);

  v16 = sub_1C081DA2C(v15, (SEL *)&selRef_ISOcountryCode);
  if (v17)
  {
    v18 = v16;
    v19 = v17;
    swift_bridgeObjectRelease();
    v20 = HIBYTE(v19) & 0xF;
    if ((v19 & 0x2000000000000000) == 0)
      v20 = v18 & 0xFFFFFFFFFFFFLL;
    if (v20)
    {
      v21 = objc_msgSend(a1, sel_location);
      v22 = objc_msgSend(v21, sel_placemark);

      sub_1C081DA2C(v22, (SEL *)&selRef_ISOcountryCode);
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v23 = v74;
      sub_1C106AEAC();
      sub_1C106AE34();
      v24 = sub_1C106AE58();
      v26 = v25;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      if (v26)
        v27 = v24;
      else
        v27 = 0;
      if (v26)
        v28 = v26;
      else
        v28 = 0xE000000000000000;
      v29 = (void *)sub_1C0BC48D4(v27, v28);
      swift_bridgeObjectRelease();
      v30 = sub_1C106FB14();
      v32 = v31;
      swift_bridgeObjectRelease();
      v33 = HIBYTE(v32) & 0xF;
      if ((v32 & 0x2000000000000000) == 0)
        v33 = v30 & 0xFFFFFFFFFFFFLL;
      if (!v33)
      {
        (*(void (**)(char *, uint64_t))(v72 + 8))(v23, v73);

        return;
      }
      v67 = a4;
      v34 = (uint64_t *)(a3 + 16);
      v71 = sub_1C07ACF80(&qword_1EF641B50);
      v35 = sub_1C07ACF80(&qword_1EF641B58);
      v36 = *(_QWORD *)(v35 - 8);
      v37 = *(_QWORD *)(v36 + 72);
      v38 = *(unsigned __int8 *)(v36 + 80);
      v39 = (v38 + 32) & ~v38;
      v69 = v38 | 7;
      v70 = v39 + v37;
      v40 = swift_allocObject();
      v68 = xmmword_1C1079220;
      *(_OWORD *)(v40 + 16) = xmmword_1C1079220;
      v41 = (_QWORD *)(v40 + v39);
      v42 = v40 + v39 + *(int *)(v35 + 48);
      *v41 = v29;
      v43 = v73;
      v44 = *(void (**)(uint64_t, char *, uint64_t))(v72 + 16);
      v44(v42, v74, v73);
      type metadata accessor for NLLanguage(0);
      sub_1C07803B8((unint64_t *)&unk_1ED754B78, (uint64_t (*)(uint64_t))type metadata accessor for NLLanguage, (uint64_t)&unk_1C1078990);
      v45 = v29;
      v46 = sub_1C106F97C();
      swift_beginAccess();
      sub_1C089AD60(v46, *v34);
      v48 = v47;
      swift_endAccess();
      swift_bridgeObjectRelease();
      v49 = swift_allocObject();
      *(_OWORD *)(v49 + 16) = v68;
      v50 = (_QWORD *)(v49 + v39);
      v51 = v74;
      v52 = (char *)v50 + *(int *)(v35 + 48);
      *v50 = v45;
      v44((uint64_t)v52, v51, v43);
      v53 = v45;
      v54 = sub_1C106F97C();
      if ((v48 & 1) != 0)
      {
        swift_beginAccess();
        sub_1C089FDE8(v54, 1.0);
        swift_endAccess();

        swift_bridgeObjectRelease();
        v62 = v67;
        goto LABEL_23;
      }
      swift_beginAccess();
      swift_isUniquelyReferenced_nonNull_native();
      v75 = *v34;
      v55 = v75;
      *v34 = 0x8000000000000000;
      v56 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v57 = sub_1C07DD074(v56);
      if (__OFADD__(*(_QWORD *)(v55 + 16), (v58 & 1) == 0))
      {
        __break(1u);
      }
      else
      {
        v59 = v57;
        v60 = v58;
        sub_1C07ACF80(&qword_1EF6331C0);
        v61 = sub_1C107090C();
        v62 = v67;
        if ((v61 & 1) != 0)
        {
          v63 = sub_1C07DD074(v54);
          if ((v60 & 1) != (v64 & 1))
          {
LABEL_27:
            sub_1C07ACF80(&qword_1EF6331C8);
            sub_1C1070D44();
            __break(1u);
            return;
          }
          v59 = v63;
        }
        if ((v60 & 1) != 0)
        {
          v65 = v75;
          *(double *)(*(_QWORD *)(v75 + 56) + 8 * v59) = *(double *)(*(_QWORD *)(v75 + 56) + 8 * v59) + 1.0;
          swift_bridgeObjectRelease();
          *v34 = v65;
          swift_endAccess();
          swift_bridgeObjectRelease();

LABEL_23:
          (*(void (**)(char *, uint64_t))(v72 + 8))(v51, v73);
          swift_beginAccess();
          *(double *)(v62 + 16) = *(double *)(v62 + 16) + 1.0;
          return;
        }
      }
      __break(1u);
      goto LABEL_27;
    }
  }
}

void sub_1C0BC5B7C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  void *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  id v21[4];
  uint64_t v22;
  uint64_t v23;

  sub_1C0779670();
  v23 = *MEMORY[0x1E0C80C00];
  v0 = sub_1C106AB28();
  MEMORY[0x1E0C80A78](v0);
  sub_1C0778564();
  v1 = sub_1C0BC5EE0();
  if (v2)
  {
    v3 = v1;
    v4 = v2;
    v5 = (void *)MEMORY[0x1C3BA79F4]();
    sub_1C106AA8C();
    v12 = sub_1C106AB58();
    v14 = v13;
    v15 = (void *)objc_opt_self();
    sub_1C0776938();
    v16 = (void *)sub_1C106ABF4();
    sub_1C07B3374(v12, v14);
    v21[0] = 0;
    v17 = objc_msgSend(v15, sel_JSONObjectWithData_options_error_, v16, 0, v21);

    v18 = v21[0];
    if (v17)
    {
      sub_1C107063C();
      swift_unknownObjectRelease();
      sub_1C07ACF80(&qword_1EF641B60);
      if ((swift_dynamicCast() & 1) == 0)
        v22 = 0;
      objc_autoreleasePoolPop(v5);
      swift_bridgeObjectRelease();
    }
    else
    {
      v19 = v18;
      v20 = sub_1C106AA14();

      swift_willThrow();
      objc_autoreleasePoolPop(v5);
      if (qword_1ED761458 != -1)
        swift_once();
      v6 = sub_1C077585C();
      sub_1C079E000(v6, (uint64_t)qword_1ED78D818);
      sub_1C077B72C();
      sub_1C077B72C();
      sub_1C07767B4();
      v7 = sub_1C106F538();
      v8 = sub_1C107039C();
      if (os_log_type_enabled(v7, v8))
      {
        v9 = sub_1C0775854();
        v21[0] = (id)sub_1C0775854();
        *(_DWORD *)v9 = 136315394;
        sub_1C07767B4();
        v22 = sub_1C0788DAC(v3, v4, (uint64_t *)v21);
        sub_1C10705AC();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v9 + 12) = 2080;
        v22 = v20;
        sub_1C077B72C();
        sub_1C07ACF80(&qword_1ED7614F0);
        v10 = sub_1C106FB5C();
        v22 = sub_1C0788DAC(v10, v11, (uint64_t *)v21);
        sub_1C10705AC();
        sub_1C077B5B4();
        sub_1C07888BC();
        sub_1C07888BC();
        _os_log_impl(&dword_1C0771000, v7, v8, "LanguageCounter: failed to deserialize JSON of %s: %s", (uint8_t *)v9, 0x16u);
        swift_arrayDestroy();
        sub_1C0776778();
      }
      sub_1C07888BC();
      swift_bridgeObjectRelease_n();
      sub_1C07888BC();
      sub_1C07888BC();

    }
  }
  sub_1C0776760();
}

uint64_t sub_1C0BC5EE0()
{
  os_log_type_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _DWORD *v12;
  uint64_t v14;

  sub_1C0B79420();
  v1 = (void *)sub_1C10704D4();
  v2 = sub_1C0847FE8(0xD000000000000013, 0x80000001C1103CC0, 1852797802, 0xE400000000000000, v1);
  v4 = v3;

  if (v4)
  {
    if (qword_1ED761458 != -1)
      swift_once();
    v5 = sub_1C077585C();
    sub_1C079E000(v5, (uint64_t)qword_1ED78D818);
    v6 = sub_1C077C0FC();
    v7 = sub_1C1070384();
    if (sub_1C077AF00(v7))
    {
      v8 = (uint8_t *)sub_1C0775854();
      sub_1C0775854();
      *(_DWORD *)v8 = 136315138;
      sub_1C07BCFC4((uint64_t)"countries_languages.json", v14);
      sub_1C0783158();
      sub_1C10705AC();
      _os_log_impl(&dword_1C0771000, v6, v0, "Loading %s from Core framework.", v8, 0xCu);
      sub_1C0778610();
      sub_1C0776778();
    }

  }
  else
  {
    if (qword_1ED761458 != -1)
      swift_once();
    v9 = sub_1C077585C();
    sub_1C079E000(v9, (uint64_t)qword_1ED78D818);
    v10 = sub_1C077C0FC();
    v11 = sub_1C107039C();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (_DWORD *)sub_1C0775854();
      sub_1C0775854();
      *v12 = 136315138;
      sub_1C07BCFC4((uint64_t)"countries_languages.json", v14);
      sub_1C0783158();
      sub_1C10705AC();
      sub_1C07759F4(&dword_1C0771000, v10, v11, "Resource %s not found.");
      sub_1C0778610();
      sub_1C0776778();
    }

    return 0;
  }
  return v2;
}

uint64_t sub_1C0BC6144(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  void *isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  char v12;
  void *v13;
  unint64_t v14;
  id v15;
  _QWORD *v16;
  void *v17;
  unsigned int v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  double v47;
  double v48;
  unint64_t v49;
  char v50;
  BOOL v51;
  unint64_t v52;
  char v53;
  unint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  const char *v63;
  uint64_t v64;
  os_log_type_t v65;
  uint64_t result;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  double *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char aBlock[8];
  uint64_t v111;
  uint64_t v112;
  uint64_t (*v113)(void *, uint64_t);
  _QWORD *v114;
  uint64_t v115;

  v115 = *MEMORY[0x1E0C80C00];
  v2 = sub_1C0778598();
  v3 = sub_1C07ACF80(&qword_1EF6331C8);
  sub_1C0BC94F8();
  *(_QWORD *)(v2 + 16) = sub_1C106F97C();
  v4 = sub_1C0778598();
  *(_QWORD *)(v4 + 16) = 0;
  v5 = sub_1C0781784(objc_allocWithZone(MEMORY[0x1E0D70CD8]));
  v6 = sub_1C0781784(objc_allocWithZone(MEMORY[0x1E0D70CC8]));
  v7 = sub_1C0781784(objc_allocWithZone(MEMORY[0x1E0D70BE0]));
  isUniquelyReferenced_nonNull_native = sub_1C0781784(objc_allocWithZone(MEMORY[0x1E0D70BD0]));
  sub_1C0AA7704();
  sub_1C0BC95D8(v9, v6);
  sub_1C0AA7704();
  sub_1C0BC95D8(v10, isUniquelyReferenced_nonNull_native);
  v11 = (_QWORD *)sub_1C0778598();
  v11[2] = a1;
  v11[3] = v2;
  v11[4] = v4;
  v113 = sub_1C0BC96E0;
  v114 = v11;
  v12 = MEMORY[0x1E0C809B0];
  v13 = sub_1C0BC97A0((uint64_t)sub_1C0BC5B78, v67, v69, v72, v3, v76, v78, v80, v82, v83, v85, v4 + 16, v2 + 16, v92, v95, v98, v100, v102, v104,
          v106,
          v108,
          MEMORY[0x1E0C809B0],
          1107296256,
          v111,
          v112);
  sub_1C077AE90();
  swift_retain();
  swift_retain();
  sub_1C07758C4();
  *(_QWORD *)aBlock = 0;
  v79 = v6;
  v81 = v5;
  v14 = (unint64_t)objc_msgSend(v5, sel_iterRankedTopicsWithQuery_error_block_, v6, aBlock, v13);
  _Block_release(v13);
  v15 = *(id *)aBlock;
  if (!(_DWORD)v14)
  {
    sub_1C077C92C();

    sub_1C07A9688();
    if (qword_1ED761458 != -1)
      goto LABEL_54;
    goto LABEL_39;
  }
  v16 = (_QWORD *)sub_1C0778598();
  v16[2] = a1;
  v16[3] = v2;
  v16[4] = v4;
  v113 = sub_1C0BC9724;
  v114 = v16;
  v17 = sub_1C0BC97A0((uint64_t)sub_1C0BC5B78, v68, v70, v73, v75, v77, (uint64_t)v6, (uint64_t)v81, v4, v2, v86, v88, v90, v93, v96, v99, v101, v103, v105,
          v107,
          v109,
          v12,
          1107296256,
          v111,
          v112);
  sub_1C077AE90();
  swift_retain();
  swift_retain();
  sub_1C07758C4();
  *(_QWORD *)aBlock = 0;
  v18 = objc_msgSend(v7, sel_iterNamedEntityRecordsWithQuery_error_block_, isUniquelyReferenced_nonNull_native, aBlock, v17);
  _Block_release(v17);
  v19 = *(id *)aBlock;
  if (v18)
  {
    v20 = v91;
    sub_1C077F040();
    v21 = *(_QWORD **)v91;
    if (*(_QWORD *)(*(_QWORD *)v91 + 16))
    {
      v71 = v7;
      v74 = isUniquelyReferenced_nonNull_native;
      v94 = v21 + 8;
      sub_1C07B84FC();
      v14 = v23 & v22;
      sub_1C077C0B8();
      sub_1C077F040();
      v24 = 0;
      v7 = (void *)(((unint64_t)v17 + 63) >> 6);
      v87 = v7;
      while (1)
      {
        if (v14)
        {
          v25 = __clz(__rbit64(v14));
          v14 &= v14 - 1;
          v26 = v25 | (v24 << 6);
        }
        else
        {
          v27 = v24 + 1;
          if (__OFADD__(v24, 1))
          {
            __break(1u);
LABEL_52:
            __break(1u);
LABEL_53:
            __break(1u);
LABEL_54:
            swift_once();
LABEL_39:
            v59 = sub_1C106F544();
            sub_1C079E000(v59, (uint64_t)qword_1ED78D818);
            v60 = sub_1C106F538();
            v61 = sub_1C1070390();
            if (sub_1C0775B94(v61))
            {
              v62 = (uint8_t *)sub_1C0780FC8();
              *(_WORD *)v62 = 0;
              v63 = "LanguageCounter: failed to retrieve topics for messages language detection";
              goto LABEL_45;
            }
            goto LABEL_46;
          }
          if (v27 >= (uint64_t)v7)
            goto LABEL_47;
          ++v24;
          if (!v94[v27])
          {
            v24 = v27 + 1;
            if (v27 + 1 >= (uint64_t)v7)
              goto LABEL_47;
            sub_1C0775BD8();
            if (!v29)
            {
              v24 = v28 + 2;
              if (v28 + 2 >= (uint64_t)v7)
                goto LABEL_47;
              sub_1C0775BD8();
              if (!v31)
              {
                v24 = v30 + 3;
                if (v30 + 3 >= (uint64_t)v7)
                  goto LABEL_47;
                sub_1C0775BD8();
                if (!v33)
                {
                  v24 = v32 + 4;
                  if (v32 + 4 >= (uint64_t)v7)
                    goto LABEL_47;
                  sub_1C0775BD8();
                  if (!v35)
                  {
                    v36 = v34 + 5;
                    if (v36 >= (uint64_t)v7)
                      goto LABEL_47;
                    if (!v94[v36])
                    {
                      while (1)
                      {
                        v24 = v36 + 1;
                        if (__OFADD__(v36, 1))
                          __break(1u);
                        if (v24 >= (uint64_t)v7)
                          break;
                        sub_1C0775BD8();
                        v36 = v37 + 1;
                        if (v38)
                          goto LABEL_24;
                      }
LABEL_47:

                      sub_1C0778680();
                      goto LABEL_49;
                    }
                    v24 = v36;
                  }
                }
              }
            }
          }
LABEL_24:
          sub_1C07888CC();
          v14 = v40 & v39;
          v26 = v41 + (v24 << 6);
        }
        v42 = *(_QWORD *)(v21[6] + 8 * v26);
        sub_1C077F040();
        v43 = *(_QWORD *)v20;
        v44 = *(_QWORD *)(*(_QWORD *)v20 + 16);
        sub_1C07767B4();
        if (v44 && (v45 = sub_1C07AC194(), (v46 & 1) != 0))
        {
          v7 = v21;
          v47 = *(double *)(*(_QWORD *)(v43 + 56) + 8 * v45);
          sub_1C078056C();
          v48 = *v89;
          sub_1C077F040();
          isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
          v97 = *(_QWORD **)v20;
          *(_QWORD *)v20 = 0x8000000000000000;
          sub_1C07AC194();
          sub_1C0782144();
          if (v51)
            goto LABEL_52;
          v52 = v49;
          v53 = v50;
          sub_1C07ACF80(&qword_1EF6331C0);
          if ((sub_1C107090C() & 1) != 0)
          {
            sub_1C07AC194();
            sub_1C0781D14();
            if (!v55)
            {
              result = sub_1C1070D44();
              __break(1u);
              return result;
            }
            v52 = v54;
          }
          if ((v53 & 1) != 0)
          {
            *(double *)(v97[7] + 8 * v52) = v47 / v48;
          }
          else
          {
            sub_1C078302C((uint64_t)&v97[v52 >> 6]);
            *(_QWORD *)(v97[6] + 8 * v52) = v42;
            *(_QWORD *)(v97[7] + 8 * v52) = v56;
            v57 = v97[2];
            v51 = __OFADD__(v57, 1);
            v58 = v57 + 1;
            if (v51)
              goto LABEL_53;
            v97[2] = v58;
            sub_1C07767B4();
          }
          v20 = v91;
          *(_QWORD *)v91 = v97;
          sub_1C07767AC();
          sub_1C077960C();
          sub_1C078056C();
          v21 = v7;
          v7 = v87;
        }
        else
        {
          sub_1C078056C();
          sub_1C07767AC();
        }
      }
    }

LABEL_49:
    v60 = *(NSObject **)(v84 + 16);
    sub_1C07767B4();
    sub_1C07758C4();
    swift_release();
  }
  else
  {
    sub_1C077C92C();

    sub_1C07A9688();
    if (qword_1ED761458 != -1)
      swift_once();
    v64 = sub_1C106F544();
    sub_1C079E000(v64, (uint64_t)qword_1ED78D818);
    v60 = sub_1C106F538();
    v65 = sub_1C1070390();
    if (sub_1C0775B94(v65))
    {
      v62 = (uint8_t *)sub_1C0780FC8();
      *(_WORD *)v62 = 0;
      v63 = "LanguageCounter: failed to retrieve named entities for messages language detection";
LABEL_45:
      _os_log_impl(&dword_1C0771000, v60, (os_log_type_t)v7, v63, v62, 2u);
      MEMORY[0x1C3BA8270](v62, -1, -1);
    }
LABEL_46:

    sub_1C07A9688();
    swift_release();
    swift_release();

  }
  return (uint64_t)v60;
}

uint64_t sub_1C0BC683C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  char *v27;
  void *v28;
  id v29;
  uint64_t v30;
  id v31;
  char *v32;
  void (*v33)(char *, char *, uint64_t);
  char *v34;
  char v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  void (*v49)(uint64_t, char *, uint64_t);
  id v50;
  uint64_t v51;
  char v52;
  char v53;
  uint64_t v54;
  _QWORD *v55;
  char *v56;
  char *v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t result;
  double *v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;

  v72 = a5;
  v73 = a4;
  v75 = a3;
  v6 = sub_1C07ACF80(&qword_1ED7548E0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v71 - v10;
  v12 = sub_1C106AEA0();
  v76 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v74 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v14);
  v77 = (char *)&v71 - v16;
  v17 = objc_msgSend(a1, sel_item, v15);
  v18 = objc_msgSend(v17, sel_mostRelevantRecord);

  if (v18)
  {
    v19 = objc_msgSend(v18, sel_source);

    v20 = objc_msgSend(v19, sel_bundleId);
    v21 = sub_1C106FB14();
    v18 = v22;

  }
  else
  {
    v21 = 0;
  }
  v23 = objc_msgSend(a1, sel_item);
  v24 = objc_msgSend(v23, sel_mostRelevantRecord);

  if (!v24
    || (v25 = objc_msgSend(v24, sel_source),
        v24,
        sub_1C081DA2C(v25, (SEL *)&selRef_language),
        !v26))
  {
    swift_bridgeObjectRelease();
  }
  v27 = v77;
  v28 = (void *)sub_1C106FAF0();
  swift_bridgeObjectRelease();
  sub_1C106AE94();
  v29 = v28;
  sub_1C089B1F4();

  LODWORD(v28) = sub_1C07B2D80((uint64_t)v11, 1, v12);
  sub_1C08C8AE8((uint64_t)v11, &qword_1ED7548E0);
  v30 = v76;
  if ((_DWORD)v28 != 1)
  {
    v31 = v29;
    sub_1C089B1F4();

    if (sub_1C07B2D80((uint64_t)v8, 1, v12) == 1)
    {
      v32 = v74;
      sub_1C106AE94();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v27, v12);
      sub_1C08C8AE8((uint64_t)v8, &qword_1ED7548E0);
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v27, v32, v12);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v30 + 8))(v27, v12);
      v33 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
      v34 = v74;
      v33(v74, v8, v12);
      v33(v27, v34, v12);
    }
  }
  if (!v18)
    goto LABEL_26;
  if (v21 == 0xD000000000000013 && v18 == (id)0x80000001C10DCA60)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v35 = sub_1C1070CB4();
    swift_bridgeObjectRelease();
    if ((v35 & 1) == 0)
    {
LABEL_26:

      return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v27, v12);
    }
  }
  v36 = sub_1C106FB14();
  v38 = v37;
  swift_bridgeObjectRelease();
  v39 = HIBYTE(v38) & 0xF;
  if ((v38 & 0x2000000000000000) == 0)
    v39 = v36 & 0xFFFFFFFFFFFFLL;
  if (!v39)
    goto LABEL_26;
  v40 = (uint64_t *)(v73 + 16);
  v75 = sub_1C07ACF80(&qword_1EF641B50);
  v41 = sub_1C07ACF80(&qword_1EF641B58);
  v42 = *(_QWORD *)(v41 - 8);
  v43 = *(_QWORD *)(v42 + 72);
  v44 = *(unsigned __int8 *)(v42 + 80);
  v45 = (v44 + 32) & ~v44;
  v73 = v44 | 7;
  v74 = (char *)(v45 + v43);
  v46 = swift_allocObject();
  v71 = xmmword_1C1079220;
  *(_OWORD *)(v46 + 16) = xmmword_1C1079220;
  v47 = (_QWORD *)(v46 + v45);
  v48 = v46 + v45 + *(int *)(v41 + 48);
  *v47 = v29;
  v49 = *(void (**)(uint64_t, char *, uint64_t))(v30 + 16);
  v49(v48, v77, v12);
  type metadata accessor for NLLanguage(0);
  sub_1C07803B8((unint64_t *)&unk_1ED754B78, (uint64_t (*)(uint64_t))type metadata accessor for NLLanguage, (uint64_t)&unk_1C1078990);
  v50 = v29;
  v51 = sub_1C106F97C();
  swift_beginAccess();
  sub_1C089AD60(v51, *v40);
  v53 = v52;
  swift_endAccess();
  swift_bridgeObjectRelease();
  v54 = swift_allocObject();
  *(_OWORD *)(v54 + 16) = v71;
  v55 = (_QWORD *)(v54 + v45);
  v56 = v77;
  v57 = (char *)v55 + *(int *)(v41 + 48);
  *v55 = v50;
  v49((uint64_t)v57, v56, v12);
  v58 = v50;
  v59 = sub_1C106F97C();
  if ((v53 & 1) != 0)
  {
    swift_beginAccess();
    sub_1C089FDE8(v59, 1.0);
    swift_endAccess();

    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  swift_beginAccess();
  swift_isUniquelyReferenced_nonNull_native();
  v78 = *v40;
  v60 = v78;
  *v40 = 0x8000000000000000;
  v61 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v62 = sub_1C07DD074(v61);
  if (__OFADD__(*(_QWORD *)(v60 + 16), (v63 & 1) == 0))
  {
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v64 = v62;
  v65 = v63;
  sub_1C07ACF80(&qword_1EF6331C0);
  if ((sub_1C107090C() & 1) == 0)
  {
LABEL_24:
    if ((v65 & 1) != 0)
    {
      v68 = v78;
      *(double *)(*(_QWORD *)(v78 + 56) + 8 * v64) = *(double *)(*(_QWORD *)(v78 + 56) + 8 * v64) + 1.0;
      swift_bridgeObjectRelease();
      *v40 = v68;
      swift_endAccess();
      swift_bridgeObjectRelease();

LABEL_28:
      v70 = (double *)(v72 + 16);
      (*(void (**)(char *, uint64_t))(v76 + 8))(v56, v12);
      result = swift_beginAccess();
      *v70 = *v70 + 1.0;
      return result;
    }
    goto LABEL_30;
  }
  v66 = sub_1C07DD074(v59);
  if ((v65 & 1) == (v67 & 1))
  {
    v64 = v66;
    goto LABEL_24;
  }
LABEL_31:
  sub_1C07ACF80(&qword_1EF6331C8);
  result = sub_1C1070D44();
  __break(1u);
  return result;
}

uint64_t sub_1C0BC6ED8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  _BYTE *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(_BYTE *, _BYTE *, uint64_t);
  char v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  _QWORD *v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t result;
  _BYTE v62[4];
  int v63;
  void (*v64)(uint64_t, _BYTE *, uint64_t);
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v66 = a4;
  v67 = a5;
  v6 = sub_1C07ACF80(&qword_1ED7548E0);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v62[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v9);
  v11 = &v62[-v10];
  v12 = sub_1C106AEA0();
  v69 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = &v62[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = &v62[-v17];
  v19 = objc_msgSend(a1, sel_source, v16);
  v20 = objc_msgSend(v19, sel_bundleId);

  v68 = sub_1C106FB14();
  v22 = v21;

  sub_1C081DA2C(objc_msgSend(a1, sel_source), (SEL *)&selRef_language);
  v23 = (void *)sub_1C106FAF0();
  swift_bridgeObjectRelease();
  sub_1C106AE94();
  v24 = v23;
  sub_1C089B1F4();

  LODWORD(v20) = sub_1C07B2D80((uint64_t)v11, 1, v12);
  sub_1C08C8AE8((uint64_t)v11, &qword_1ED7548E0);
  if ((_DWORD)v20 != 1)
  {
    v25 = v24;
    sub_1C089B1F4();

    if (sub_1C07B2D80((uint64_t)v8, 1, v12) == 1)
    {
      sub_1C106AE94();
      v26 = v69;
      (*(void (**)(_BYTE *, uint64_t))(v69 + 8))(v18, v12);
      sub_1C08C8AE8((uint64_t)v8, &qword_1ED7548E0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v26 + 32))(v18, v14, v12);
    }
    else
    {
      v27 = v69;
      (*(void (**)(_BYTE *, uint64_t))(v69 + 8))(v18, v12);
      v28 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v27 + 32);
      v28(v14, v8, v12);
      v28(v18, v14, v12);
    }
  }
  if (v68 == 0xD000000000000013 && v22 == 0x80000001C10DCA60)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v29 = sub_1C1070CB4();
    swift_bridgeObjectRelease();
    if ((v29 & 1) == 0)
    {
LABEL_19:

      return (*(uint64_t (**)(_BYTE *, uint64_t))(v69 + 8))(v18, v12);
    }
  }
  v30 = sub_1C106FB14();
  v32 = v31;
  swift_bridgeObjectRelease();
  v33 = HIBYTE(v32) & 0xF;
  if ((v32 & 0x2000000000000000) == 0)
    v33 = v30 & 0xFFFFFFFFFFFFLL;
  if (!v33)
    goto LABEL_19;
  v34 = (uint64_t *)(v66 + 16);
  v68 = sub_1C07ACF80(&qword_1EF641B50);
  v35 = sub_1C07ACF80(&qword_1EF641B58);
  v36 = *(unsigned __int8 *)(*(_QWORD *)(v35 - 8) + 80);
  v37 = (v36 + 32) & ~v36;
  v66 = v36 | 7;
  v38 = swift_allocObject();
  v39 = v18;
  v65 = xmmword_1C1079220;
  *(_OWORD *)(v38 + 16) = xmmword_1C1079220;
  v40 = (_QWORD *)(v38 + v37);
  v41 = v38 + v37 + *(int *)(v35 + 48);
  *v40 = v24;
  v64 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v69 + 16);
  v64(v41, v18, v12);
  type metadata accessor for NLLanguage(0);
  sub_1C07803B8((unint64_t *)&unk_1ED754B78, (uint64_t (*)(uint64_t))type metadata accessor for NLLanguage, (uint64_t)&unk_1C1078990);
  v42 = v24;
  v43 = sub_1C106F97C();
  swift_beginAccess();
  sub_1C089AD60(v43, *v34);
  v63 = v44;
  swift_endAccess();
  swift_bridgeObjectRelease();
  v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = v65;
  v46 = (_QWORD *)(v45 + v37);
  v47 = v45 + v37 + *(int *)(v35 + 48);
  *v46 = v42;
  v68 = (uint64_t)v39;
  v64(v47, v39, v12);
  v48 = v42;
  v49 = v12;
  v50 = sub_1C106F97C();
  if ((v63 & 1) != 0)
  {
    swift_beginAccess();
    sub_1C089FDE8(v50, 1.0);
    swift_endAccess();

    swift_bridgeObjectRelease();
    v55 = v67;
    goto LABEL_21;
  }
  swift_beginAccess();
  swift_isUniquelyReferenced_nonNull_native();
  v70 = *v34;
  v51 = v70;
  *v34 = 0x8000000000000000;
  v52 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v53 = sub_1C07DD074(v52);
  v55 = v67;
  if (__OFADD__(*(_QWORD *)(v51 + 16), (v54 & 1) == 0))
  {
    __break(1u);
    goto LABEL_24;
  }
  v56 = v53;
  v57 = v54;
  sub_1C07ACF80(&qword_1EF6331C0);
  if ((sub_1C107090C() & 1) != 0)
  {
    v58 = sub_1C07DD074(v50);
    if ((v57 & 1) != (v59 & 1))
    {
LABEL_25:
      sub_1C07ACF80(&qword_1EF6331C8);
      result = sub_1C1070D44();
      __break(1u);
      return result;
    }
    v56 = v58;
  }
  if ((v57 & 1) == 0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v60 = v70;
  *(double *)(*(_QWORD *)(v70 + 56) + 8 * v56) = *(double *)(*(_QWORD *)(v70 + 56) + 8 * v56) + 1.0;
  swift_bridgeObjectRelease();
  *v34 = v60;
  swift_endAccess();
  swift_bridgeObjectRelease();

LABEL_21:
  (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v68, v49);
  result = swift_beginAccess();
  *(double *)(v55 + 16) = *(double *)(v55 + 16) + 1.0;
  return result;
}

void sub_1C0BC74F8(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  sub_1C07758C4();

}

_QWORD *sub_1C0BC7550(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  int64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  sub_1C07ACF80(&qword_1EF6331C8);
  sub_1C0BC94F8();
  v2 = sub_1C106F97C();
  if (*(_QWORD *)(a1 + 16))
  {
    result = sub_1C0861BD0(&v14);
    v4 = v17;
    v5 = v18;
    v6 = (unint64_t)(v16 + 64) >> 6;
    v7 = 0x8000000000000000;
    if (!v18)
      goto LABEL_4;
LABEL_3:
    v8 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    v9 = v8 | (v4 << 6);
    while (1)
    {
      if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v9) + 16) > v7)
        v7 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v9) + 16);
      if (v5)
        goto LABEL_3;
LABEL_4:
      v10 = v4 + 1;
      if (__OFADD__(v4, 1))
      {
        __break(1u);
        return result;
      }
      if (v10 >= v6)
        goto LABEL_26;
      v11 = *(_QWORD *)(v15 + 8 * v10);
      v12 = v4 + 1;
      if (!v11)
      {
        v12 = v4 + 2;
        if (v4 + 2 >= v6)
          goto LABEL_26;
        v11 = *(_QWORD *)(v15 + 8 * v12);
        if (!v11)
        {
          v12 = v4 + 3;
          if (v4 + 3 >= v6)
            goto LABEL_26;
          v11 = *(_QWORD *)(v15 + 8 * v12);
          if (!v11)
          {
            v12 = v4 + 4;
            if (v4 + 4 >= v6)
              goto LABEL_26;
            v11 = *(_QWORD *)(v15 + 8 * v12);
            if (!v11)
            {
              v12 = v4 + 5;
              if (v4 + 5 >= v6)
                goto LABEL_26;
              v11 = *(_QWORD *)(v15 + 8 * v12);
              if (!v11)
              {
                v12 = v4 + 6;
                if (v4 + 6 >= v6)
                  goto LABEL_26;
                v11 = *(_QWORD *)(v15 + 8 * v12);
                if (!v11)
                  break;
              }
            }
          }
        }
      }
LABEL_21:
      v5 = (v11 - 1) & v11;
      v9 = __clz(__rbit64(v11)) + (v12 << 6);
      v4 = v12;
    }
    v13 = v4 + 7;
    while (v13 < v6)
    {
      v11 = *(_QWORD *)(v15 + 8 * v13++);
      if (v11)
      {
        v12 = v13 - 1;
        goto LABEL_21;
      }
    }
LABEL_26:
    sub_1C07767B4();
    sub_1C07758C4();
    if (v7 >= 1)
    {
      sub_1C077960C();
      return (_QWORD *)sub_1C0BC92C8(a1, (double)v7);
    }
  }
  return (_QWORD *)v2;
}

_QWORD *sub_1C0BC76F8@<X0>(double *a1@<X8>, double a2@<D0>)
{
  _QWORD *result;
  int64_t v5;
  unint64_t v6;
  int64_t v7;
  double v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;

  result = sub_1C0861BD0(&v15);
  v5 = v18;
  v6 = v19;
  v7 = (unint64_t)(v17 + 64) >> 6;
  v8 = 0.0;
  if (!v19)
    goto LABEL_3;
LABEL_2:
  v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  v10 = v9 | (v5 << 6);
  while (1)
  {
    v8 = v8 + *(double *)(*(_QWORD *)(v15 + 56) + 8 * v10);
    if (v6)
      goto LABEL_2;
LABEL_3:
    v11 = v5 + 1;
    if (__OFADD__(v5, 1))
      break;
    if (v11 >= v7)
      goto LABEL_23;
    v12 = *(_QWORD *)(v16 + 8 * v11);
    v13 = v5 + 1;
    if (!v12)
    {
      v13 = v5 + 2;
      if (v5 + 2 >= v7)
        goto LABEL_23;
      v12 = *(_QWORD *)(v16 + 8 * v13);
      if (!v12)
      {
        v13 = v5 + 3;
        if (v5 + 3 >= v7)
          goto LABEL_23;
        v12 = *(_QWORD *)(v16 + 8 * v13);
        if (!v12)
        {
          v13 = v5 + 4;
          if (v5 + 4 >= v7)
            goto LABEL_23;
          v12 = *(_QWORD *)(v16 + 8 * v13);
          if (!v12)
          {
            v13 = v5 + 5;
            if (v5 + 5 >= v7)
              goto LABEL_23;
            v12 = *(_QWORD *)(v16 + 8 * v13);
            if (!v12)
            {
              v13 = v5 + 6;
              if (v5 + 6 >= v7)
                goto LABEL_23;
              v12 = *(_QWORD *)(v16 + 8 * v13);
              if (!v12)
              {
                v14 = v5 + 7;
                while (v14 < v7)
                {
                  v12 = *(_QWORD *)(v16 + 8 * v14++);
                  if (v12)
                  {
                    v13 = v14 - 1;
                    goto LABEL_20;
                  }
                }
LABEL_23:
                _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
                result = (_QWORD *)swift_release();
                *a1 = v8 / a2;
                return result;
              }
            }
          }
        }
      }
    }
LABEL_20:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
    v5 = v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0BC7860(_QWORD *a1, double a2)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t result;

  sub_1C07ACF80(&qword_1EF6331C8);
  sub_1C0BC94F8();
  v4 = (_QWORD *)sub_1C106F97C();
  v5 = a1 + 8;
  sub_1C078D538();
  v8 = v7 & v6;
  v10 = (unint64_t)(v9 + 63) >> 6;
  sub_1C07767B4();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v13 = v12 | (v11 << 6);
      goto LABEL_22;
    }
    v14 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v14 >= v10)
      goto LABEL_43;
    ++v11;
    if (!v5[v14])
    {
      v11 = v14 + 1;
      if (v14 + 1 >= v10)
        goto LABEL_43;
      if (!v5[v11])
      {
        v11 = v14 + 2;
        if (v14 + 2 >= v10)
          goto LABEL_43;
        if (!v5[v11])
        {
          v11 = v14 + 3;
          if (v14 + 3 >= v10)
            goto LABEL_43;
          if (!v5[v11])
          {
            v11 = v14 + 4;
            if (v14 + 4 >= v10)
              goto LABEL_43;
            if (!v5[v11])
              break;
          }
        }
      }
    }
LABEL_21:
    sub_1C07888CC();
    v8 = v17 & v16;
    v13 = v18 + (v11 << 6);
LABEL_22:
    v19 = *(_QWORD *)(a1[6] + 8 * v13);
    v20 = a1[2];
    sub_1C07767C4();
    if (!v20)
      goto LABEL_27;
    v21 = sub_1C07767C4();
    v22 = sub_1C07DD074(v21);
    if ((v23 & 1) != 0)
    {
      v24 = *(double *)(a1[7] + 8 * v22);
      sub_1C0775894();
      if (v24 >= a2)
        goto LABEL_28;
LABEL_32:
      sub_1C0775894();
    }
    else
    {
      sub_1C0775894();
LABEL_27:
      if (a2 > 0.0)
        goto LABEL_32;
LABEL_28:
      if (a1[2])
      {
        v25 = sub_1C07767C4();
        v26 = sub_1C07DD074(v25);
        if ((v27 & 1) != 0)
        {
          v30 = *(_QWORD *)(a1[7] + 8 * v26);
          sub_1C0775894();
          swift_isUniquelyReferenced_nonNull_native();
          v31 = sub_1C07AF2C0();
          if (__OFADD__(v4[2], (v32 & 1) == 0))
            goto LABEL_46;
          v33 = v31;
          v34 = v32;
          sub_1C07ACF80(&qword_1EF6331C0);
          if ((sub_1C107090C() & 1) != 0)
          {
            v35 = sub_1C07B672C();
            if ((v34 & 1) != (v36 & 1))
              goto LABEL_48;
            v33 = v35;
          }
          if ((v34 & 1) != 0)
          {
            *(_QWORD *)(v4[7] + 8 * v33) = v30;
          }
          else
          {
            sub_1C078302C((uint64_t)&v4[v33 >> 6]);
            *(_QWORD *)(v4[6] + 8 * v33) = v19;
            *(_QWORD *)(v4[7] + 8 * v33) = v30;
            v37 = v4[2];
            v38 = __OFADD__(v37, 1);
            v39 = v37 + 1;
            if (v38)
              goto LABEL_47;
            v4[2] = v39;
            sub_1C07767C4();
          }
          goto LABEL_42;
        }
        sub_1C0775894();
      }
      sub_1C077C0B8();
      sub_1C07AF2C0();
      v29 = v28;
      swift_bridgeObjectRelease();
      if ((v29 & 1) == 0)
        goto LABEL_32;
      swift_isUniquelyReferenced_nonNull_native();
      sub_1C07ACF80(&qword_1EF6331C0);
      sub_1C107090C();
      swift_bridgeObjectRelease();
      sub_1C1070924();
LABEL_42:
      sub_1C0775894();
      swift_bridgeObjectRelease();
    }
  }
  v15 = v14 + 5;
  if (v15 >= v10)
  {
LABEL_43:
    swift_release();
    return (uint64_t)v4;
  }
  if (v5[v15])
  {
    v11 = v15;
    goto LABEL_21;
  }
  while (1)
  {
    v11 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v11 >= v10)
      goto LABEL_43;
    ++v15;
    if (v5[v11])
      goto LABEL_21;
  }
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  result = sub_1C1070D44();
  __break(1u);
  return result;
}

uint64_t sub_1C0BC7BC0()
{
  uint64_t v0;
  _DWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)@<X0>(uint64_t *@<X8>);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t (*v23)();
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)@<X0>(uint64_t *@<X8>);
  uint64_t (*v29)();
  uint64_t (*v30)@<X0>(uint64_t *@<X8>);
  uint64_t (*v31)@<X0>(uint64_t *@<X8>);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  unint64_t v52;
  char v53;
  char v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  unint64_t v70;
  uint64_t v71;
  int v72;
  char v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  int v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t (*v83)(uint64_t, uint64_t, uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t (*v86)(uint64_t, uint64_t, uint64_t);
  uint64_t v87;
  uint64_t (*v88)(uint64_t, uint64_t, uint64_t);
  unint64_t v89;
  char v90;
  unint64_t v91;
  char v92;
  char v93;
  uint64_t (*v94)();
  unint64_t v95;
  uint64_t v96;
  _DWORD *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t (*v109)();
  uint64_t (*v110)@<X0>(uint64_t *@<X8>);
  char v111;
  char v112;
  char v113;
  uint64_t (*v114)@<X0>(uint64_t *@<X8>);
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t (*v118)@<X0>(uint64_t *@<X8>);
  char v119;
  char v120;
  char v121;
  uint64_t (*v122)@<X0>(uint64_t *@<X8>);
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  int64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  int64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char v146;
  uint64_t v147;
  char v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  char v152;
  unint64_t v153;
  char v154;
  char v155;
  uint64_t v156;
  unint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v165;
  unint64_t v166;
  char v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  char v171;
  char v172;
  unint64_t v173;
  uint64_t v174;
  int v175;
  char v176;
  int v177;
  uint64_t v178;
  void *v179;
  uint64_t v180;
  int v181;
  char v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t (*v187)(uint64_t, uint64_t, uint64_t);
  uint64_t v188;
  id v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t (*v193)(uint64_t, uint64_t, uint64_t);
  uint64_t v194;
  uint64_t (*v195)(uint64_t, uint64_t, uint64_t);
  id v196;
  uint64_t v197;
  char v198;
  uint64_t v199;
  char v200;
  uint64_t v201;
  char v202;
  uint64_t v203;
  unint64_t v204;
  uint64_t v205;
  id v206;
  uint64_t v207;
  uint64_t v208;
  _QWORD *v209;
  uint64_t v210;
  uint64_t v211;
  unint64_t i;
  uint64_t v213;
  unint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  char v222;
  uint64_t v223;
  char v224;
  uint64_t v225;
  uint64_t v226;
  unint64_t v227;
  char v228;
  unint64_t v229;
  char v230;
  char v231;
  unint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  char v238;
  char v239;
  uint64_t v240;
  unint64_t v241;
  char v242;
  unint64_t v243;
  char v244;
  unint64_t v245;
  _QWORD *v246;
  _QWORD *v247;
  uint64_t v248;
  uint64_t v249;
  unint64_t v250;
  uint64_t result;
  uint64_t v252;
  uint64_t (*v253)@<X0>(uint64_t *@<X8>);
  uint64_t (*v254)@<X0>(uint64_t *@<X8>);
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t (*v263)@<X0>(uint64_t *@<X8>);
  uint64_t v264;
  int64_t v265;
  _QWORD *v266;
  uint64_t (*v267)@<X0>(uint64_t *@<X8>);
  uint64_t (*v268)@<X0>(uint64_t *@<X8>);
  uint64_t v269;
  _QWORD *v270;
  unint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  _QWORD *v275;
  uint64_t v276;

  v2 = sub_1C106AEA0();
  v269 = *(_QWORD *)(v2 - 8);
  v270 = (_QWORD *)v2;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v3);
  sub_1C077AED0();
  v260 = v4;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v5);
  v263 = (uint64_t (*)@<X0>(uint64_t *@<X8>))((char *)&v252 - v6);
  sub_1C07ACF80(&qword_1ED7548E0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  sub_1C077AED0();
  v256 = v8;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v9);
  sub_1C0779728();
  v262 = v10;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v11);
  sub_1C0779728();
  v261 = v12;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v13);
  sub_1C0779728();
  v253 = v14;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v15);
  sub_1C0779728();
  v259 = v16;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v17);
  sub_1C0779728();
  v264 = v18;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v19);
  v21 = (unint64_t)&v252 - v20;
  v22 = sub_1C07ACF80(&qword_1EF6331C8);
  sub_1C07ACF80(&qword_1ED75E818);
  sub_1C0BC94F8();
  v23 = (uint64_t (*)())MEMORY[0x1E0DEE9D8];
  v252 = v22;
  v24 = (_QWORD *)sub_1C106F97C();
  type metadata accessor for NLLanguage(0);
  v26 = v25;
  v257 = sub_1C07803B8((unint64_t *)&unk_1ED754B78, (uint64_t (*)(uint64_t))type metadata accessor for NLLanguage, (uint64_t)&unk_1C1078990);
  v258 = v26;
  v276 = sub_1C106F97C();
  sub_1C0BC4BC8();
  v28 = (uint64_t (*)@<X0>(uint64_t *@<X8>))v27;
  if (!*(_QWORD *)(v27 + 16))
  {
    v98 = swift_bridgeObjectRelease();
    v29 = 0;
    v259 = 0;
    v263 = 0;
    v31 = 0;
    goto LABEL_84;
  }
  v268 = (uint64_t (*)@<X0>(uint64_t *@<X8>))v21;
  v265 = v27 + 64;
  sub_1C07A2880();
  sub_1C077AEBC();
  v29 = 0;
  v23 = 0;
  v30 = 0;
  v31 = 0;
  v32 = 0;
  v267 = v28;
  if (!v0)
    goto LABEL_4;
LABEL_3:
  sub_1C07AA100();
  while (1)
  {
    v1 = *(_DWORD **)(*((_QWORD *)v28 + 6) + 8 * v33);
    v21 = sub_1C0788000();
    *(_QWORD *)(v21 + 16) = v28;
    *(_QWORD *)(v21 + 24) = v1;
    swift_bridgeObjectRetain_n();
    sub_1C077AEBC();
    sub_1C077AB58((uint64_t)v29);
    if (*((_QWORD *)v28 + 2))
    {
      v44 = sub_1C07767C4();
      v45 = sub_1C07DD074(v44);
      v47 = 0;
      if ((v46 & 1) != 0)
        v47 = *(_QWORD *)(*((_QWORD *)v28 + 7) + 8 * v45);
      v48 = v46 ^ 1;
      sub_1C0775894();
    }
    else
    {
      v48 = 1;
      v47 = 0;
    }
    v49 = sub_1C0788000();
    *(_QWORD *)(v49 + 16) = sub_1C0BC9580;
    *(_QWORD *)(v49 + 24) = v21;
    sub_1C077AB58((uint64_t)v30);
    sub_1C07815F4();
    v275 = v24;
    sub_1C079520C((uint64_t)v1);
    sub_1C077F0AC();
    if (v36)
    {
      __break(1u);
LABEL_256:
      __break(1u);
LABEL_257:
      __break(1u);
LABEL_258:
      __break(1u);
LABEL_259:
      __break(1u);
LABEL_260:
      __break(1u);
LABEL_261:
      __break(1u);
LABEL_262:
      __break(1u);
LABEL_263:
      __break(1u);
LABEL_264:
      __break(1u);
LABEL_265:
      __break(1u);
LABEL_266:
      __break(1u);
      goto LABEL_267;
    }
    v52 = v50;
    v53 = v51;
    sub_1C07ACF80(&qword_1EF641B70);
    v54 = sub_1C07A8728();
    v55 = (uint64_t)v275;
    if ((v54 & 1) != 0)
    {
      sub_1C07DD074((uint64_t)v1);
      sub_1C07A5548();
      if (!v57)
        goto LABEL_283;
      v52 = v56;
    }
    sub_1C077970C();
    v58 = sub_1C07767B4();
    if ((v53 & 1) == 0)
    {
      (*(void (**)(uint64_t))(v49 + 16))(v58);
      sub_1C0BC9778(v55 + 8 * (v52 >> 6));
      *(_QWORD *)(v59 + 8 * v52) = v1;
      *(_QWORD *)(*(_QWORD *)(v55 + 56) + 8 * v52) = v60;
      v61 = *(_QWORD *)(v55 + 16);
      v36 = __OFADD__(v61, 1);
      v62 = v61 + 1;
      if (v36)
        goto LABEL_259;
      *(_QWORD *)(v55 + 16) = v62;
      sub_1C07767C4();
    }
    v273 = v21;
    v274 = v55;
    v63 = *(_QWORD *)(v55 + 56);
    sub_1C07767AC();
    if ((v48 & 1) != 0)
    {
      sub_1C077AE90();
      sub_1C0799E3C();
      sub_1C07A4920();
      v64 = (uint64_t)v268;
      if ((v55 & 1) != 0)
      {
        swift_isUniquelyReferenced_nonNull_native();
        v275 = *(_QWORD **)(v63 + 8 * v52);
        *(_QWORD *)(v63 + 8 * v52) = 0x8000000000000000;
        sub_1C07ACF80(&qword_1ED760850);
        sub_1C078B1B8();
        sub_1C079EF94();
        sub_1C078CA2C();
        sub_1C1070924();
        sub_1C07B62C4();
      }
    }
    else
    {
      sub_1C077C09C();
      v275 = *(_QWORD **)(v63 + 8 * v52);
      *(_QWORD *)(v63 + 8 * v52) = 0x8000000000000000;
      sub_1C0799E3C();
      sub_1C07B7368();
      if (__OFADD__(v67, v68))
        goto LABEL_260;
      v21 = v65;
      v69 = v66;
      sub_1C07ACF80(&qword_1ED760850);
      if ((sub_1C078B1B8() & 1) != 0)
      {
        sub_1C0799E3C();
        sub_1C07A5548();
        if (!v57)
          goto LABEL_283;
        v21 = v70;
      }
      if ((v69 & 1) != 0)
        *(_QWORD *)(v275[7] + 8 * v21) = v47;
      else
        sub_1C077B2B8(v21, 0x6472616F6279654BLL);
      sub_1C07B62C4();
      v64 = (uint64_t)v268;
    }
    sub_1C0775894();
    v71 = sub_1C0945CB4(v1);
    if ((v73 & 1) != 0)
      goto LABEL_279;
    v74 = v1[9];
    v75 = (uint64_t)v270;
    v23 = (uint64_t (*)())v273;
    if (v74 != v72)
      goto LABEL_256;
    v76 = 1 << *((_BYTE *)v1 + 32);
    if (v71 == v76)
    {
      sub_1C0775894();
      v29 = sub_1C0BC9580;
      v30 = sub_1C0BC95AC;
      v31 = (uint64_t (*)@<X0>(uint64_t *@<X8>))v49;
      v24 = (_QWORD *)v274;
    }
    else
    {
      v77 = (void *)sub_1C0AA9A78(v71, v72, 0, (uint64_t)v1);
      v78 = sub_1C08CE490((uint64_t)v1);
      if ((v80 & 1) != 0)
        goto LABEL_281;
      if (v74 != v79)
        goto LABEL_261;
      if (v78 == v76)
      {
        v81 = 1;
        v24 = (_QWORD *)v274;
        v82 = v264;
      }
      else
      {
        v82 = v264;
        sub_1C0E2B81C(v78, v79, (uint64_t)v1, v264);
        v81 = 0;
        v24 = (_QWORD *)v274;
      }
      sub_1C0790F28(v82, v81);
      sub_1C0775894();
      if (sub_1C07B2D80(v82, 1, v75) == 1)
      {
        sub_1C0785114();
        sub_1C08C8AE8(v82, &qword_1ED7548E0);
      }
      else
      {
        sub_1C07B6004();
        sub_1C079D508(v64, v82, v83);
      }
      sub_1C0790F28(v64, 0);
      if (sub_1C07B2D80(v64, 1, v75) == 1)
      {
        v1 = v77;
        sub_1C08C8AE8(v64, &qword_1ED7548E0);
        sub_1C077AE90();
        sub_1C0BC9758();
        sub_1C07A4920();
        if ((v82 & 1) != 0)
        {
          sub_1C077C09C();
          sub_1C079F680();
          sub_1C07ACF80(&qword_1EF630448);
          sub_1C078B1B8();
          sub_1C077D294();
          sub_1C078E114();
          v84 = v259;
          sub_1C079D508(v259, v85, v86);
          sub_1C1070924();
          sub_1C078C30C();
          v87 = 0;
        }
        else
        {
          v87 = 1;
          v84 = v259;
        }
        sub_1C0790F28(v84, v87);

        sub_1C08C8AE8(v84, &qword_1ED7548E0);
        v29 = sub_1C0BC9580;
        v23 = (uint64_t (*)())v273;
      }
      else
      {
        sub_1C07B6004();
        sub_1C079D508((uint64_t)v263, v64, v88);
        v1 = v77;
        sub_1C077C09C();
        sub_1C079F680();
        sub_1C0BC9758();
        sub_1C0BC978C();
        if (v36)
          goto LABEL_268;
        v91 = v89;
        v92 = v90;
        sub_1C07ACF80(&qword_1EF630448);
        v93 = sub_1C078A018();
        v94 = (uint64_t (*)())v273;
        if ((v93 & 1) != 0)
        {
          sub_1C0BC9758();
          sub_1C07A5548();
          if (!v57)
            goto LABEL_283;
          v91 = v95;
        }
        v96 = (uint64_t)v275;
        if ((v92 & 1) != 0)
        {
          (*(void (**)(unint64_t, uint64_t (*)@<X0>(uint64_t *@<X8>), _QWORD *))(v269 + 40))(v275[7] + *(_QWORD *)(v269 + 72) * v91, v263, v270);
          v96 = (uint64_t)v275;
        }
        else
        {
          sub_1C07DFCD8(v91, (uint64_t)v1, (uint64_t)v263, (uint64_t)v275);
          v97 = v1;
        }
        v276 = v96;

        sub_1C07767AC();
        v29 = sub_1C0BC9580;
        v23 = v94;
      }
      v30 = sub_1C0BC95AC;
      v31 = (uint64_t (*)@<X0>(uint64_t *@<X8>))v49;
    }
    v28 = v267;
    v32 = v272;
    if (v271)
      goto LABEL_3;
LABEL_4:
    if (__OFADD__(v32, 1))
      goto LABEL_265;
    sub_1C078080C();
    if (v35 == v36)
      break;
    if (!*(_QWORD *)(v265 + 8 * v34))
    {
      sub_1C07911F0();
      if (v35 == v36)
        break;
      sub_1C07911E4();
      if (!v37)
      {
        sub_1C07911F0();
        if (v35 == v36)
          break;
        sub_1C07911E4();
        if (!v38)
        {
          sub_1C07911F0();
          if (v35 == v36)
            break;
          sub_1C07911E4();
          if (!v39)
          {
            sub_1C07911F0();
            if (v35 == v36)
              break;
            sub_1C07911E4();
            if (!v40)
            {
              sub_1C078080C();
              if (v35 == v36)
                break;
              if (!*(_QWORD *)(v265 + 8 * v41))
              {
                while (!__OFADD__(v41, 1))
                {
                  sub_1C07911F0();
                  if (v35 == v36)
                    goto LABEL_82;
                  v41 = v42 + 1;
                  if (*(_QWORD *)(v265 + 8 * v43))
                    goto LABEL_27;
                }
                goto LABEL_275;
              }
            }
          }
        }
      }
    }
LABEL_27:
    sub_1C077C480();
  }
LABEL_82:
  v259 = (uint64_t)v23;
  v263 = v30;
  swift_release();
  v98 = swift_bridgeObjectRelease();
LABEL_84:
  sub_1C0BC45DC(v98, v99, v100, v101, v102, v103, v104, v105, v252, (uint64_t)v253, (uint64_t)v254, v255, v256, v257, v258, v259, v260, v261, v262,
    (uint64_t)v263);
  v107 = v106;
  if (!*(_QWORD *)(v106 + 16)
    || (v108 = sub_1C07767B4(), sub_1C089AD94(v108, (uint64_t)v24), v23 = v109, sub_1C07767AC(), sub_1C077960C(), !v23))
  {
    sub_1C07767AC();
    v254 = 0;
    goto LABEL_98;
  }
  sub_1C07767B4();
  v21 = sub_1C07815F4();
  v275 = v24;
  sub_1C079520C(v107);
  sub_1C077F0AC();
  if (v36)
    goto LABEL_277;
  v28 = v110;
  v112 = v111;
  sub_1C07ACF80(&qword_1EF641B70);
  v113 = sub_1C07A5534();
  v24 = v275;
  if ((v113 & 1) != 0)
  {
    sub_1C079520C(v107);
    sub_1C0781D14();
    if (!v57)
      goto LABEL_283;
    v28 = v114;
  }
  sub_1C077970C();
  if ((v112 & 1) == 0)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0BC91A0((uint64_t *)&v275);
    sub_1C079096C();
  }
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v23 = (uint64_t (*)())v24[7];
  sub_1C0778580();
  sub_1C07AE970();
  sub_1C089FA1C();
  sub_1C07767AC();
  sub_1C0AA4840(v107);
  if (v115)
  {
    sub_1C079479C();
    v28 = v23;
    sub_1C07767AC();
    sub_1C07B7C54();

  }
  else
  {
    sub_1C07767AC();
  }
  v254 = sub_1C0BC91A0;
LABEL_98:
  sub_1C0BC4314();
  v117 = v116;
  if (!*(_QWORD *)(v116 + 16))
  {
    sub_1C07767AC();
    v253 = 0;
    goto LABEL_111;
  }
  sub_1C07767B4();
  v21 = sub_1C07815F4();
  v275 = v24;
  sub_1C079520C(v117);
  sub_1C077F0AC();
  if (v36)
    goto LABEL_274;
  v28 = v118;
  v120 = v119;
  sub_1C07ACF80(&qword_1EF641B70);
  v121 = sub_1C07A5534();
  v24 = v275;
  if ((v121 & 1) != 0)
  {
    sub_1C079520C(v117);
    sub_1C0781D14();
    if (!v57)
      goto LABEL_283;
    v28 = v122;
  }
  sub_1C077970C();
  if ((v120 & 1) == 0)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0BC91E4((uint64_t *)&v275);
    sub_1C079096C();
  }
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v23 = (uint64_t (*)())v24[7];
  sub_1C0778580();
  sub_1C07AE970();
  sub_1C089FA1C();
  sub_1C07767AC();
  sub_1C0AA4840(v117);
  if (v123)
  {
    sub_1C079479C();
    v28 = v23;
    sub_1C07767AC();
    sub_1C07B7C54();

  }
  else
  {
    sub_1C07767AC();
  }
  v253 = sub_1C0BC91E4;
LABEL_111:
  v124 = sub_1C0BC5034();
  v125 = (_QWORD *)v124;
  v126 = *(_QWORD *)(v124 + 16);
  v267 = (uint64_t (*)@<X0>(uint64_t *@<X8>))v29;
  v268 = v31;
  if (v126)
  {
    v127 = *(_QWORD *)(v124 + 64);
    v264 = v124 + 64;
    v128 = 1 << *(_BYTE *)(v124 + 32);
    v129 = -1;
    if (v128 < 64)
      v129 = ~(-1 << v128);
    v130 = v129 & v127;
    v265 = (unint64_t)(v128 + 63) >> 6;
    sub_1C077C0B8();
    sub_1C0782478();
    v131 = 0;
    v266 = v125;
    if (!v130)
      goto LABEL_116;
LABEL_115:
    sub_1C07AA100();
    while (1)
    {
      v142 = *(_QWORD *)(v125[6] + 8 * v132);
      v143 = sub_1C0788000();
      *(_QWORD *)(v143 + 16) = v125;
      *(_QWORD *)(v143 + 24) = v142;
      v273 = v143;
      swift_bridgeObjectRetain_n();
      sub_1C077C0B8();
      sub_1C07BAE54();
      if (v125[2])
      {
        v144 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v145 = sub_1C07DD074(v144);
        v147 = 0;
        if ((v146 & 1) != 0)
          v147 = *(_QWORD *)(v125[7] + 8 * v145);
        v148 = v146 ^ 1;
        sub_1C07785A0();
      }
      else
      {
        v148 = 1;
        v147 = 0;
      }
      v149 = sub_1C0788000();
      v150 = v273;
      *(_QWORD *)(v149 + 16) = sub_1C0BC9640;
      *(_QWORD *)(v149 + 24) = v150;
      sub_1C077F318((uint64_t)v28);
      sub_1C07815F4();
      v275 = v24;
      sub_1C079520C(v142);
      sub_1C077F0AC();
      if (v36)
        goto LABEL_257;
      v153 = v151;
      v154 = v152;
      sub_1C07ACF80(&qword_1EF641B70);
      v155 = sub_1C07A8728();
      v156 = (uint64_t)v275;
      if ((v155 & 1) != 0)
      {
        sub_1C07DD074(v142);
        sub_1C078DAC8();
        if (!v57)
          goto LABEL_283;
        v153 = v157;
      }
      sub_1C077970C();
      v158 = sub_1C07767B4();
      if ((v154 & 1) == 0)
      {
        (*(void (**)(uint64_t))(v149 + 16))(v158);
        sub_1C0BC9778(v156 + 8 * (v153 >> 6));
        *(_QWORD *)(v159 + 8 * v153) = v142;
        *(_QWORD *)(*(_QWORD *)(v156 + 56) + 8 * v153) = v160;
        v161 = *(_QWORD *)(v156 + 16);
        v36 = __OFADD__(v161, 1);
        v162 = v161 + 1;
        if (v36)
          goto LABEL_262;
        *(_QWORD *)(v156 + 16) = v162;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      }
      v163 = *(_QWORD *)(v156 + 56);
      v274 = v156;
      sub_1C07767AC();
      if ((v148 & 1) != 0)
      {
        sub_1C077AE90();
        sub_1C078F840();
        sub_1C07A4920();
        if ((v156 & 1) == 0)
          goto LABEL_163;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v275 = *(_QWORD **)(v163 + 8 * v153);
        v165 = (uint64_t)v275;
        *(_QWORD *)(v163 + 8 * v153) = 0x8000000000000000;
        v125 = *(_QWORD **)(v165 + 24);
        sub_1C07ACF80(&qword_1ED760850);
        sub_1C07A32B8();
        sub_1C079EF94();
        sub_1C078CA2C();
        sub_1C1070924();
      }
      else
      {
        sub_1C077C09C();
        v275 = *(_QWORD **)(v163 + 8 * v153);
        *(_QWORD *)(v163 + 8 * v153) = 0x8000000000000000;
        sub_1C078F840();
        sub_1C07B7368();
        if (__OFADD__(v168, v169))
          goto LABEL_263;
        v170 = v166;
        v171 = v167;
        sub_1C07ACF80(&qword_1ED760850);
        v172 = sub_1C107090C();
        v125 = v266;
        if ((v172 & 1) != 0)
        {
          sub_1C078F840();
          sub_1C078DAC8();
          if (!v57)
            goto LABEL_283;
          v170 = v173;
        }
        isUniquelyReferenced_nonNull_native = (uint64_t)v275;
        if ((v171 & 1) != 0)
          *(_QWORD *)(v275[7] + 8 * v170) = v147;
        else
          sub_1C077B2B8(v170, 0x6E6F697461636F4CLL);
      }
      *(_QWORD *)(v163 + 8 * v153) = isUniquelyReferenced_nonNull_native;
      swift_bridgeObjectRelease();
LABEL_163:
      sub_1C07785A0();
      v174 = sub_1C0945CB4(v142);
      if ((v176 & 1) != 0)
        goto LABEL_280;
      v177 = *(_DWORD *)(v142 + 36);
      if (v177 != v175)
        goto LABEL_258;
      v178 = 1 << *(_BYTE *)(v142 + 32);
      if (v174 == v178)
      {
        sub_1C07785A0();
        v23 = sub_1C0BC9640;
        v21 = v273;
        v24 = (_QWORD *)v274;
      }
      else
      {
        v179 = (void *)sub_1C0AA9A78(v174, v175, 0, v142);
        v180 = sub_1C08CE490(v142);
        if ((v182 & 1) != 0)
          goto LABEL_282;
        if (v177 != v181)
          goto LABEL_264;
        if (v180 == v178)
        {
          v183 = 1;
          v24 = (_QWORD *)v274;
          v184 = v262;
        }
        else
        {
          v184 = v262;
          sub_1C0E2B81C(v180, v181, v142, v262);
          v183 = 0;
          v24 = (_QWORD *)v274;
        }
        v185 = (uint64_t)v270;
        sub_1C078939C(v184, v183, 1);
        sub_1C07785A0();
        if (sub_1C07B2D80(v184, 1, v185) == 1)
        {
          v186 = v261;
          sub_1C0785114();
          sub_1C08C8AE8(v184, &qword_1ED7548E0);
        }
        else
        {
          sub_1C07B6004();
          v186 = v261;
          sub_1C079DC70(v261, v184, v187);
        }
        sub_1C078939C(v186, 0, 1);
        v188 = v186;
        if (sub_1C07B2D80(v186, 1, v185) == 1)
        {
          v189 = v179;
          sub_1C08C8AE8(v188, &qword_1ED7548E0);
          v190 = v276;
          sub_1C077AE90();
          sub_1C078BE34();
          sub_1C07A4920();
          if ((v188 & 1) != 0)
          {
            sub_1C077C09C();
            sub_1C079F680();
            v125 = *(_QWORD **)(v190 + 24);
            sub_1C07ACF80(&qword_1EF630448);
            sub_1C07A32B8();
            sub_1C077D294();
            sub_1C078E114();
            v191 = v256;
            sub_1C079DC70(v256, v192, v193);
            sub_1C1070924();
            sub_1C078C30C();
            v194 = 0;
          }
          else
          {
            v194 = 1;
            v191 = v256;
          }
          sub_1C078939C(v191, v194, 1);

          sub_1C08C8AE8(v191, &qword_1ED7548E0);
        }
        else
        {
          sub_1C07B6004();
          sub_1C079DC70(v260, v186, v195);
          v196 = v179;
          sub_1C077C09C();
          sub_1C079F680();
          sub_1C078BE34();
          sub_1C0BC978C();
          if (v36)
            goto LABEL_269;
          v199 = v197;
          v200 = v198;
          sub_1C07ACF80(&qword_1EF630448);
          if ((sub_1C078A018() & 1) != 0)
          {
            v201 = sub_1C078BE34();
            if ((v200 & 1) != (v202 & 1))
              goto LABEL_283;
            v199 = v201;
          }
          v203 = (uint64_t)v275;
          if ((v200 & 1) != 0)
          {
            (*(void (**)(uint64_t, uint64_t, _QWORD *))(v269 + 40))(v275[7] + *(_QWORD *)(v269 + 72) * v199, v260, v270);
            v203 = (uint64_t)v275;
          }
          else
          {
            v204 = sub_1C07BFF84();
            sub_1C07DFCD8(v204, v205, v260, v203);
            v206 = v196;
          }
          v276 = v203;

          sub_1C07767AC();
        }
        v23 = sub_1C0BC9640;
        v21 = v273;
      }
      v28 = sub_1C0BC9744;
      v1 = (_DWORD *)v149;
      v29 = (uint64_t (*)())v267;
      v31 = v268;
      v131 = v272;
      if (v271)
        goto LABEL_115;
LABEL_116:
      v133 = v131 + 1;
      if (__OFADD__(v131, 1))
        goto LABEL_266;
      if (v133 >= v265)
      {
LABEL_191:
        sub_1C0778680();
        goto LABEL_193;
      }
      if (!*(_QWORD *)(v264 + 8 * v133))
      {
        sub_1C07ABD84();
        if (v35 == v36)
          goto LABEL_191;
        sub_1C078A494();
        if (!v134)
        {
          sub_1C07ABD84();
          if (v35 == v36)
            goto LABEL_191;
          sub_1C078A494();
          if (!v135)
          {
            sub_1C07ABD84();
            if (v35 == v36)
              goto LABEL_191;
            sub_1C078A494();
            if (!v136)
            {
              sub_1C07ABD84();
              if (v35 == v36)
                goto LABEL_191;
              sub_1C078A494();
              if (!v138)
              {
                v139 = v137 + 5;
                if (v139 >= v265)
                  goto LABEL_191;
                if (!*(_QWORD *)(v264 + 8 * v139))
                {
                  while (!__OFADD__(v139, 1))
                  {
                    sub_1C07ABD84();
                    if (v35 == v36)
                      goto LABEL_191;
                    sub_1C078A494();
                    v139 = v140 + 1;
                    if (v141)
                      goto LABEL_137;
                  }
                  goto LABEL_276;
                }
              }
            }
          }
        }
      }
LABEL_137:
      sub_1C077C480();
    }
  }
  sub_1C0782478();
LABEL_193:
  swift_bridgeObjectRelease();
  v207 = v255;
  v208 = sub_1C0BC6144(v276);
  v264 = v207;
  if (v207)
  {
    sub_1C07767AC();
    sub_1C0778580();
    sub_1C077AB58((uint64_t)v29);
    sub_1C07BC8A4((uint64_t)v263);
    sub_1C07BAE54();
    sub_1C077F318((uint64_t)v28);
    return (uint64_t)v24;
  }
  v209 = (_QWORD *)v208;
  v260 = (uint64_t)v23;
  v261 = (uint64_t)v1;
  v262 = (uint64_t)v28;
  sub_1C07767AC();
  if (!v209[2])
  {
    sub_1C077E9E4();
    v211 = (uint64_t)v263;
    goto LABEL_253;
  }
  v265 = (int64_t)(v209 + 8);
  sub_1C07A2880();
  sub_1C077C0B8();
  sub_1C077E9E4();
  v210 = 0;
  v211 = (uint64_t)v263;
  v270 = v209;
  v271 = v21;
LABEL_198:
  if (__OFADD__(v210, 1))
  {
LABEL_272:
    __break(1u);
LABEL_273:
    __break(1u);
LABEL_274:
    __break(1u);
LABEL_275:
    __break(1u);
LABEL_276:
    __break(1u);
LABEL_277:
    __break(1u);
    goto LABEL_278;
  }
  sub_1C078080C();
  if (v35 == v36)
    goto LABEL_251;
  v214 = *(_QWORD *)(v265 + 8 * v213);
  v215 = v213;
  if (v214)
    goto LABEL_222;
  sub_1C07911F0();
  if (v35 == v36)
    goto LABEL_251;
  sub_1C07911E4();
  if (v214)
    goto LABEL_222;
  sub_1C07911F0();
  if (v35 == v36)
    goto LABEL_251;
  sub_1C07911E4();
  if (v214)
    goto LABEL_222;
  sub_1C07911F0();
  if (v35 == v36)
    goto LABEL_251;
  sub_1C07911E4();
  if (v214)
    goto LABEL_222;
  sub_1C07911F0();
  if (v35 == v36)
    goto LABEL_251;
  sub_1C07911E4();
  if (v214)
  {
LABEL_222:
    v273 = (v214 - 1) & v214;
    v274 = v215;
    for (i = __clz(__rbit64(v214)) + (v215 << 6); ; i = __clz(__rbit64(v250)) | (v274 << 6))
    {
      v218 = *(_QWORD *)(v209[6] + 8 * i);
      v219 = sub_1C0788000();
      *(_QWORD *)(v219 + 16) = v209;
      *(_QWORD *)(v219 + 24) = v218;
      swift_bridgeObjectRetain_n();
      sub_1C077C0B8();
      sub_1C077F318((uint64_t)v23);
      if (v209[2])
      {
        v220 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v221 = sub_1C07DD074(v220);
        v223 = 0;
        if ((v222 & 1) != 0)
          v223 = *(_QWORD *)(v209[7] + 8 * v221);
        v224 = v222 ^ 1;
        sub_1C07767AC();
      }
      else
      {
        v224 = 1;
        v223 = 0;
      }
      v225 = sub_1C0788000();
      *(_QWORD *)(v225 + 16) = sub_1C0BC9678;
      *(_QWORD *)(v225 + 24) = v219;
      v272 = v219;
      v226 = sub_1C07BFF84();
      sub_1C077AB58(v226);
      sub_1C07815F4();
      v275 = v24;
      sub_1C079520C(v218);
      sub_1C077F0AC();
      if (v36)
        break;
      v229 = v227;
      v230 = v228;
      sub_1C07ACF80(&qword_1EF641B70);
      v231 = sub_1C07A5534();
      v24 = v275;
      if ((v231 & 1) != 0)
      {
        sub_1C079520C(v218);
        sub_1C078DAC8();
        if (!v57)
          goto LABEL_283;
        v229 = v232;
      }
      sub_1C077970C();
      v233 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      if ((v230 & 1) == 0)
      {
        (*(void (**)(uint64_t))(v225 + 16))(v233);
        sub_1C078302C((uint64_t)&v24[v229 >> 6]);
        *(_QWORD *)(v24[6] + 8 * v229) = v218;
        *(_QWORD *)(v24[7] + 8 * v229) = v234;
        v235 = v24[2];
        v36 = __OFADD__(v235, 1);
        v236 = v235 + 1;
        if (v36)
          goto LABEL_270;
        v24[2] = v236;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      }
      v237 = v24[7];
      sub_1C0778580();
      if ((v224 & 1) != 0)
      {
        sub_1C077AE90();
        sub_1C079AD1C();
        v239 = v238;
        sub_1C077960C();
        if ((v239 & 1) != 0)
        {
          swift_isUniquelyReferenced_nonNull_native();
          v275 = *(_QWORD **)(v237 + 8 * v229);
          *(_QWORD *)(v237 + 8 * v229) = 0x8000000000000000;
          sub_1C07ACF80(&qword_1ED760850);
          sub_1C079DD24();
          v240 = (uint64_t)v275;
          swift_bridgeObjectRelease();
          sub_1C1070924();
          *(_QWORD *)(v237 + 8 * v229) = v240;
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        v269 = v218;
        sub_1C077C09C();
        v275 = *(_QWORD **)(v237 + 8 * v229);
        *(_QWORD *)(v237 + 8 * v229) = 0x8000000000000000;
        sub_1C079AD1C();
        sub_1C0782144();
        if (v36)
          goto LABEL_271;
        v243 = v241;
        v244 = v242;
        sub_1C07ACF80(&qword_1ED760850);
        if ((sub_1C079DD24() & 1) != 0)
        {
          sub_1C079AD1C();
          sub_1C07A5548();
          if (!v57)
            goto LABEL_283;
          v243 = v245;
        }
        v246 = v275;
        if ((v244 & 1) != 0)
        {
          *(_QWORD *)(v275[7] + 8 * v243) = v223;
        }
        else
        {
          v275[(v243 >> 6) + 8] |= 1 << v243;
          v247 = (_QWORD *)(v246[6] + 16 * v243);
          *v247 = 0x736567617373654DLL;
          v247[1] = 0xE800000000000000;
          *(_QWORD *)(v246[7] + 8 * v243) = v223;
          v248 = v246[2];
          v36 = __OFADD__(v248, 1);
          v249 = v248 + 1;
          if (v36)
            goto LABEL_273;
          v246[2] = v249;
        }
        *(_QWORD *)(v237 + 8 * v229) = v246;
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      v23 = sub_1C0BC9678;
      v31 = sub_1C0BC9744;
      v211 = (uint64_t)v263;
      v209 = v270;
      v250 = v273;
      v210 = v274;
      if (!v273)
        goto LABEL_198;
      v273 &= v273 - 1;
    }
LABEL_267:
    __break(1u);
LABEL_268:
    __break(1u);
LABEL_269:
    __break(1u);
LABEL_270:
    __break(1u);
LABEL_271:
    __break(1u);
    goto LABEL_272;
  }
  sub_1C078080C();
  if (v35 == v36)
  {
LABEL_251:
    sub_1C0778680();
LABEL_253:
    swift_bridgeObjectRelease();
    sub_1C077AB58((uint64_t)v267);
    sub_1C07BC8A4(v211);
    sub_1C077AB58(v260);
    sub_1C077AB58(v262);
    sub_1C077F318((uint64_t)v23);
    sub_1C077AB58((uint64_t)v31);
    return (uint64_t)v24;
  }
  v214 = *(_QWORD *)(v265 + 8 * v216);
  if (v214)
  {
    v215 = v216;
    goto LABEL_222;
  }
  while (!__OFADD__(v216, 1))
  {
    sub_1C07911F0();
    if (v35 == v36)
      goto LABEL_251;
    v214 = *(_QWORD *)(v265 + 8 * v215);
    v216 = v217 + 1;
    if (v214)
      goto LABEL_222;
  }
LABEL_278:
  __break(1u);
LABEL_279:
  __break(1u);
LABEL_280:
  __break(1u);
LABEL_281:
  __break(1u);
LABEL_282:
  __break(1u);
LABEL_283:
  result = sub_1C1070D44();
  __break(1u);
  return result;
}

uint64_t sub_1C0BC91A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1C106F97C();
  *a1 = result;
  return result;
}

uint64_t sub_1C0BC91E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1C106F97C();
  *a1 = result;
  return result;
}

uint64_t sub_1C0BC9228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t inited;
  uint64_t v9;
  char v10;
  uint64_t v11;

  sub_1C07ACF80((uint64_t *)&unk_1EF64D7C0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1079220;
  *(_QWORD *)(inited + 32) = a3;
  *(_QWORD *)(inited + 40) = a4;
  sub_1C089AD60(a2, a1);
  if ((v10 & 1) != 0)
    v11 = 0;
  else
    v11 = v9;
  *(_QWORD *)(inited + 48) = v11;
  return sub_1C106F97C();
}

uint64_t sub_1C0BC92C8(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t result;
  _QWORD *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t i;
  BOOL v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  double v23[2];

  sub_1C07ACF80(&qword_1EF641B68);
  result = sub_1C10709CC();
  v6 = (_QWORD *)result;
  v7 = 0;
  v8 = *(_QWORD *)(a1 + 64);
  v21 = a1 + 64;
  v9 = 1 << *(_BYTE *)(a1 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v8;
  v22 = (unint64_t)(v9 + 63) >> 6;
  v12 = result + 64;
  if ((v10 & v8) == 0)
    goto LABEL_5;
LABEL_4:
  v13 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (i = v13 | (v7 << 6); ; i = __clz(__rbit64(v16)) + (v7 << 6))
  {
    v18 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * i);
    v23[1] = *(double *)(*(_QWORD *)(a1 + 56) + 8 * i);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0BC76F8(v23, a2);
    result = swift_bridgeObjectRelease();
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_release();
      return (uint64_t)v6;
    }
    *(_QWORD *)(v12 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(_QWORD *)(v6[6] + 8 * i) = v18;
    *(double *)(v6[7] + 8 * i) = v23[0];
    v19 = v6[2];
    v15 = __OFADD__(v19, 1);
    v20 = v19 + 1;
    if (v15)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v6[2] = v20;
    if (v11)
      goto LABEL_4;
LABEL_5:
    v15 = __OFADD__(v7++, 1);
    if (v15)
      goto LABEL_27;
    if (v7 >= v22)
      return (uint64_t)v6;
    v16 = *(_QWORD *)(v21 + 8 * v7);
    if (!v16)
      break;
LABEL_15:
    v11 = (v16 - 1) & v16;
  }
  v17 = v7 + 1;
  if (v7 + 1 >= v22)
    return (uint64_t)v6;
  v16 = *(_QWORD *)(v21 + 8 * v17);
  if (v16)
    goto LABEL_14;
  v17 = v7 + 2;
  if (v7 + 2 >= v22)
    return (uint64_t)v6;
  v16 = *(_QWORD *)(v21 + 8 * v17);
  if (v16)
    goto LABEL_14;
  v17 = v7 + 3;
  if (v7 + 3 >= v22)
    return (uint64_t)v6;
  v16 = *(_QWORD *)(v21 + 8 * v17);
  if (v16)
  {
LABEL_14:
    v7 = v17;
    goto LABEL_15;
  }
  while (1)
  {
    v7 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v7 >= v22)
      return (uint64_t)v6;
    v16 = *(_QWORD *)(v21 + 8 * v7);
    ++v17;
    if (v16)
      goto LABEL_15;
  }
LABEL_28:
  __break(1u);
  return result;
}

unint64_t sub_1C0BC94F8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EF641B48;
  if (!qword_1EF641B48)
  {
    v1 = sub_1C07D4BEC(&qword_1EF6331C8);
    v2 = sub_1C07803B8(&qword_1EF638CA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0C48], MEMORY[0x1E0CB0C60]);
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0DEA0C0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EF641B48);
  }
  return result;
}

uint64_t sub_1C0BC9574()
{
  return sub_1C0775484((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1C0BC9580()
{
  uint64_t v0;

  return sub_1C0782E4C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), 0x6472616F6279654BLL);
}

uint64_t sub_1C0BC95AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

void sub_1C0BC95D8(uint64_t a1, void *a2)
{
  id v3;

  v3 = (id)sub_1C1070210();
  sub_1C077960C();
  objc_msgSend(a2, sel_setMatchingSourceBundleIds_, v3);

}

uint64_t sub_1C0BC9634()
{
  return sub_1C0775484((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1C0BC9640()
{
  uint64_t v0;

  return sub_1C0782E4C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), 0x6E6F697461636F4CLL);
}

uint64_t sub_1C0BC966C()
{
  return sub_1C0775484((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1C0BC9678()
{
  uint64_t v0;

  return sub_1C0BC9228(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), 0x736567617373654DLL, 0xE800000000000000);
}

uint64_t sub_1C0BC96A8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0BC96CC()
{
  return swift_deallocObject();
}

uint64_t sub_1C0BC96E0(void *a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1C0BC683C(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_1C0BC96F0()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0BC9724(void *a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1C0BC6ED8(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_1C0BC9730()
{
  return sub_1C0775484((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

void sub_1C0BC973C(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_1C0BC566C(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1C0BC9758()
{
  uint64_t v0;

  return sub_1C07DD088(v0);
}

uint64_t sub_1C0BC9760()
{
  return swift_endAccess();
}

void sub_1C0BC9768()
{
  type metadata accessor for NLLanguage(0);
}

uint64_t sub_1C0BC9770()
{
  return sub_1C106AEF4();
}

void sub_1C0BC9778(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 64) |= v1;
}

void *sub_1C0BC97A0@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char aBlock,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v25;

  a24 = a1;
  a25 = v25;
  return _Block_copy(&aBlock);
}

uint64_t sub_1C0BC97AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  uint64_t v12;
  __int128 v13[2];
  uint64_t v14;

  v4 = *(_QWORD *)(a3 + 16);
  if (v4)
  {
    v5 = a3 + 32;
    v14 = a3;
    sub_1C07A1E74();
    v6 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      sub_1C077F320();
      if (v3)
        break;
      if (v12)
      {
        sub_1C077DD60(&v11, (uint64_t)v13);
        sub_1C077DD60(v13, (uint64_t)&v11);
        if ((sub_1C077B7D4() & 1) == 0)
        {
          sub_1C07A3C78();
          sub_1C07EAC70();
          v6 = v8;
        }
        v7 = *(_QWORD *)(v6 + 16);
        if (v7 >= *(_QWORD *)(v6 + 24) >> 1)
        {
          sub_1C07EAC70();
          v6 = v9;
        }
        *(_QWORD *)(v6 + 16) = v7 + 1;
        sub_1C077DD60(&v11, v6 + 40 * v7 + 32);
      }
      else
      {
        sub_1C0784B6C((uint64_t)&v11, &qword_1EF641BC8);
      }
      v5 += 40;
      if (!--v4)
      {
        swift_bridgeObjectRelease();
        return sub_1C07A32D0();
      }
    }
    sub_1C077B5B4();
    swift_bridgeObjectRelease();
  }
  return sub_1C07A32D0();
}

uint64_t sub_1C0BC98F4(void (*a1)(_OWORD *__return_ptr, _QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v17;
  __int128 v18;
  _OWORD v19[2];
  uint64_t v20;
  unsigned __int8 v21;
  _QWORD v22[2];
  void (*v23)(_OWORD *__return_ptr, _QWORD *);

  v4 = v3;
  v23 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  if (v5)
  {
    sub_1C07A1E74();
    v7 = (uint64_t *)(a3 + 40);
    v8 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v9 = *v7;
      v22[0] = *(v7 - 1);
      v22[1] = v9;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v23(v19, v22);
      if (v4)
        break;
      sub_1C077589C();
      v10 = v21;
      if (v21 != 255)
      {
        v17 = v19[1];
        v18 = v19[0];
        v11 = v20;
        if ((sub_1C077B7D4() & 1) == 0)
        {
          sub_1C07A3C78();
          sub_1C07EB904();
          v8 = v14;
        }
        v12 = *(_QWORD *)(v8 + 16);
        if (v12 >= *(_QWORD *)(v8 + 24) >> 1)
        {
          sub_1C07EB904();
          v8 = v15;
        }
        *(_QWORD *)(v8 + 16) = v12 + 1;
        v13 = v8 + 48 * v12;
        *(_OWORD *)(v13 + 32) = v18;
        *(_OWORD *)(v13 + 48) = v17;
        *(_QWORD *)(v13 + 64) = v11;
        *(_BYTE *)(v13 + 72) = v10;
      }
      v7 += 2;
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        return sub_1C07A32D0();
      }
    }
    sub_1C077B5B4();
    swift_bridgeObjectRelease();
    sub_1C077589C();
  }
  return sub_1C07A32D0();
}

void sub_1C0BC9A50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  v4 = *(_QWORD *)(a3 + 16);
  if (v4)
  {
    sub_1C078178C();
    sub_1C07A1E74();
    v5 = 0;
    v6 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      sub_1C077F320();
      if (v3)
        break;
      if ((_QWORD)v11)
      {
        if ((sub_1C077B7D4() & 1) == 0)
        {
          sub_1C07A3C78();
          sub_1C07EBA00();
          v6 = v9;
        }
        v7 = *(_QWORD *)(v6 + 16);
        v8 = v11;
        if (v7 >= *(_QWORD *)(v6 + 24) >> 1)
        {
          sub_1C07EBA00();
          v8 = v11;
          v6 = v10;
        }
        *(_QWORD *)(v6 + 16) = v7 + 1;
        *(_OWORD *)(v6 + 16 * v7 + 32) = v8;
      }
      if (v4 == ++v5)
      {
        sub_1C0778580();
        goto LABEL_14;
      }
    }
    sub_1C077B5B4();
    sub_1C0778580();
  }
LABEL_14:
  sub_1C07A32D0();
  sub_1C07A0070();
}

void sub_1C0BC9B58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  void (*v22)(_QWORD, __n128);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(_QWORD, __n128);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  sub_1C077AE5C();
  a19 = v23;
  a20 = v24;
  v26 = v25;
  sub_1C07B7378();
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v27);
  sub_1C0778564();
  v30 = v29 - v28;
  v31 = sub_1C106ADE0();
  v47 = *(_QWORD *)(v31 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v32);
  sub_1C077AED0();
  v46 = v33;
  sub_1C077F02C();
  v35.n128_f64[0] = MEMORY[0x1E0C80A78](v34);
  v45 = (uint64_t)&v42 - v36;
  if (v21 == v26)
  {
LABEL_16:
    sub_1C078210C();
    sub_1C07757D0();
  }
  else
  {
    if (v26 >= v21)
    {
      v37 = MEMORY[0x1E0DEE9D8];
      v43 = v22;
      v44 = v26;
      while (v21 < v26)
      {
        a10 = v21;
        v22(&a10, v35);
        if (v20)
        {
          sub_1C0775834();
          goto LABEL_16;
        }
        if (sub_1C07B2D80(v30, 1, v31) == 1)
        {
          sub_1C0784B6C(v30, (uint64_t *)&unk_1ED762690);
        }
        else
        {
          v38 = v45;
          sub_1C079DD38(v45, v30);
          sub_1C079DD38(v46, v38);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C0782230();
            sub_1C07EB9D0();
            v37 = v40;
          }
          v39 = *(_QWORD *)(v37 + 16);
          if (v39 >= *(_QWORD *)(v37 + 24) >> 1)
          {
            sub_1C07EB9D0();
            v37 = v41;
          }
          *(_QWORD *)(v37 + 16) = v39 + 1;
          sub_1C079DD38(v37+ ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))+ *(_QWORD *)(v47 + 72) * v39, v46);
          v22 = v43;
          v26 = v44;
        }
        if (v26 == ++v21)
          goto LABEL_16;
      }
      __break(1u);
    }
    __break(1u);
  }
}

void sub_1C0BC9D2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t *__return_ptr, char *);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  int64_t v35;
  unint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  int64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t *__return_ptr, char *);
  _QWORD v54[5];

  sub_1C077AE5C();
  a19 = v21;
  a20 = v22;
  v53 = v23;
  v52 = sub_1C07ACF80(&qword_1EF641BA8);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v47 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v47 - v28;
  sub_1C0861BD0(v54);
  v30 = v54[0];
  v31 = v54[3];
  v32 = v54[4];
  v50 = v54[1];
  v51 = (unint64_t)(v54[2] + 64) >> 6;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v49 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v32)
    {
      sub_1C0782168();
      v34 = v33 | (v31 << 6);
      goto LABEL_15;
    }
    v35 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v35 >= v51)
      goto LABEL_29;
    v36 = *(_QWORD *)(v50 + 8 * v35);
    if (!v36)
    {
      v37 = v31 + 2;
      if (v31 + 2 >= v51)
        goto LABEL_29;
      v36 = *(_QWORD *)(v50 + 8 * v37);
      if (v36)
        goto LABEL_13;
      v37 = v31 + 3;
      if (v31 + 3 >= v51)
        goto LABEL_29;
      v36 = *(_QWORD *)(v50 + 8 * v37);
      if (v36)
        goto LABEL_13;
      v37 = v31 + 4;
      if (v31 + 4 >= v51)
        goto LABEL_29;
      v36 = *(_QWORD *)(v50 + 8 * v37);
      if (v36)
      {
LABEL_13:
        v35 = v37;
      }
      else
      {
        v35 = v31 + 5;
        if (v31 + 5 >= v51)
          goto LABEL_29;
        v36 = *(_QWORD *)(v50 + 8 * v35);
        if (!v36)
        {
          v44 = v31 + 6;
          while (v44 < v51)
          {
            v36 = *(_QWORD *)(v50 + 8 * v44++);
            if (v36)
            {
              v35 = v44 - 1;
              goto LABEL_14;
            }
          }
          goto LABEL_29;
        }
      }
    }
LABEL_14:
    v32 = (v36 - 1) & v36;
    v34 = __clz(__rbit64(v36)) + (v35 << 6);
    v31 = v35;
LABEL_15:
    v38 = *(_QWORD *)(v30 + 48);
    v39 = sub_1C106E590();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v29, v38 + *(_QWORD *)(*(_QWORD *)(v39 - 8) + 72) * v34, v39);
    *(_QWORD *)&v29[*(int *)(v52 + 48)] = *(_QWORD *)(*(_QWORD *)(v30 + 56) + 8 * v34);
    sub_1C07B47F4((uint64_t)v29, (uint64_t)v26);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v53(&a10, v26);
    if (v20)
    {
      sub_1C0784B6C((uint64_t)v26, &qword_1EF641BA8);
      swift_bridgeObjectRelease();
LABEL_29:
      swift_release();
      sub_1C078210C();
      sub_1C07757D0();
      return;
    }
    sub_1C0784B6C((uint64_t)v26, &qword_1EF641BA8);
    v40 = a10;
    if (a10)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C078E13C();
        sub_1C07EBD30();
        v49 = v45;
      }
      v41 = *(_QWORD *)(v49 + 16);
      v42 = v41 + 1;
      if (v41 >= *(_QWORD *)(v49 + 24) >> 1)
      {
        v48 = v41 + 1;
        sub_1C07EBD30();
        v42 = v48;
        v49 = v46;
      }
      v43 = v49;
      *(_QWORD *)(v49 + 16) = v42;
      *(_QWORD *)(v43 + 8 * v41 + 32) = v40;
    }
  }
  __break(1u);
}

uint64_t sub_1C0BC9FF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  uint64_t v14;

  v4 = *(_QWORD *)(a3 + 16);
  if (v4)
  {
    v5 = a3 + 32;
    sub_1C07A1E74();
    v6 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      sub_1C077F320();
      if (v3)
        break;
      if ((_QWORD)v13)
      {
        if ((sub_1C077B7D4() & 1) == 0)
        {
          sub_1C07A3C78();
          sub_1C07EC018();
          v6 = v10;
        }
        v7 = *(_QWORD *)(v6 + 16);
        v8 = v13;
        if (v7 >= *(_QWORD *)(v6 + 24) >> 1)
        {
          sub_1C07EC018();
          v8 = v13;
          v6 = v11;
        }
        *(_QWORD *)(v6 + 16) = v7 + 1;
        v9 = v6 + 24 * v7;
        *(_OWORD *)(v9 + 32) = v8;
        *(_QWORD *)(v9 + 48) = v14;
      }
      v5 += 40;
      if (!--v4)
      {
        swift_bridgeObjectRelease();
        return sub_1C07A32D0();
      }
    }
    sub_1C077B5B4();
    swift_bridgeObjectRelease();
  }
  return sub_1C07A32D0();
}

void sub_1C0BCA124(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C0BCA5AC(a1, a2, a3);
}

void sub_1C0BCA140()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_1C077AE5C();
  sub_1C07B7378();
  sub_1C07ACF80(&qword_1ED74AFA0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  sub_1C07795DC();
  v27 = sub_1C07ACF80(&qword_1ED74AF90);
  v25 = *(_QWORD *)(v27 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  v26 = (uint64_t)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v8);
  sub_1C07B18B4(v9, v10, v11, v12, v13, v14, v15, v16, v23);
  if (v3)
  {
    sub_1C07ACF80(&qword_1EF641BB0);
    sub_1C0797500();
    v17 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      sub_1C079C710();
      if (v0)
        break;
      if (sub_1C07B2D80(v2, 1, v27) == 1)
      {
        sub_1C0784B6C(v2, &qword_1ED74AFA0);
      }
      else
      {
        v18 = v24;
        sub_1C078A67C(v2, v24, &qword_1ED74AF90);
        sub_1C078A67C(v18, v26, &qword_1ED74AF90);
        if ((sub_1C07799C0() & 1) == 0)
        {
          sub_1C079136C();
          sub_1C07EC260();
          v17 = v21;
        }
        if (*(_QWORD *)(v17 + 16) >= *(_QWORD *)(v17 + 24) >> 1)
        {
          sub_1C079BF8C();
          sub_1C07EC260();
          v17 = v22;
        }
        v19 = sub_1C078B1CC();
        sub_1C078A67C(v19, v20, &qword_1ED74AF90);
      }
      v1 += v4;
      if (!--v3)
      {
        sub_1C077873C();
        goto LABEL_15;
      }
    }
    sub_1C077E584();
    sub_1C077873C();
  }
LABEL_15:
  sub_1C078210C();
  sub_1C07757D0();
}

#error "1C0BCA304: call analysis failed (funcsize=8)"

void sub_1C0BCA310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(void), uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(void);
  uint64_t (*v25)(void);
  uint64_t (*v26)(_QWORD);
  uint64_t (*v27)(_QWORD);
  void (*v28)(uint64_t (**)(void));
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(void);
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(void);
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  unint64_t v50;
  uint64_t (*v51)(_QWORD);
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t (**)(void));

  sub_1C077AE5C();
  a19 = v22;
  a20 = v23;
  v25 = v24;
  v27 = v26;
  sub_1C078178C();
  v54 = v28;
  v49 = v29;
  sub_1C07ACF80(v29);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v30);
  sub_1C0778564();
  v33 = v32 - v31;
  v51 = v27;
  v53 = v27(0);
  v48 = *(_QWORD *)(v53 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v34);
  sub_1C077AED0();
  v52 = v35;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v36);
  sub_1C0778674();
  v47 = v37;
  if (v21 >> 62)
    goto LABEL_20;
  v38 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
  sub_1C077584C();
  for (; v38; v38 = sub_1C10709B4())
  {
    v45 = v25;
    v50 = v21 & 0xC000000000000001;
    v39 = MEMORY[0x1E0DEE9D8];
    v40 = 4;
    v46 = v21;
    while (1)
    {
      v41 = v50
          ? (uint64_t (*)(void))MEMORY[0x1C3BA70DC](v40 - 4, v21)
          : (uint64_t (*)(void))*(id *)(v21 + 8 * v40);
      v25 = v41;
      v42 = v40 - 3;
      if (__OFADD__(v40 - 4, 1))
        break;
      a10 = v41;
      v54(&a10);
      if (v20)
      {
        sub_1C077E584();
        sub_1C0778580();

        goto LABEL_22;
      }

      if (sub_1C07B2D80(v33, 1, v53) == 1)
      {
        sub_1C0784B6C(v33, v49);
      }
      else
      {
        sub_1C07E05F4(v33, v47, v51);
        sub_1C07E05F4(v47, v52, v51);
        if ((sub_1C07799C0() & 1) == 0)
        {
          v44 = sub_1C079136C();
          v39 = ((uint64_t (*)(uint64_t))v45)(v44);
        }
        v43 = *(_QWORD *)(v39 + 16);
        if (v43 >= *(_QWORD *)(v39 + 24) >> 1)
        {
          sub_1C079BF8C();
          v39 = v45();
        }
        *(_QWORD *)(v39 + 16) = v43 + 1;
        sub_1C07E05F4(v52, v39+ ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))+ *(_QWORD *)(v48 + 72) * v43, v51);
        v21 = v46;
      }
      ++v40;
      if (v42 == v38)
        goto LABEL_21;
    }
    __break(1u);
LABEL_20:
    sub_1C077584C();
  }
LABEL_21:
  sub_1C0778580();
LABEL_22:
  sub_1C078210C();
  sub_1C07757D0();
}

#error "1C0BCA584: call analysis failed (funcsize=8)"

void sub_1C0BCA590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C0BCA5AC(a1, a2, a3);
}

void sub_1C0BCA5AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void (*v5)(__n128 *__return_ptr, uint64_t);
  void (*v6)(__n128 *__return_ptr, uint64_t);
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  __n128 v17;
  uint64_t (*v18)(uint64_t);

  v4 = *(_QWORD *)(a3 + 16);
  if (v4)
  {
    sub_1C078178C();
    v6 = v5;
    v18 = v7;
    v9 = v8 + 32;
    sub_1C07A1E74();
    v10 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v6(&v17, v9);
      if (v3)
        break;
      if (v17.n128_u64[0])
      {
        v16 = v17;
        if ((sub_1C077B7D4() & 1) == 0)
        {
          v14 = sub_1C07A3C78();
          v10 = v18(v14);
        }
        v12 = *(_QWORD *)(v10 + 16);
        v11 = *(_QWORD *)(v10 + 24);
        v13 = v16;
        if (v12 >= v11 >> 1)
        {
          v15 = ((uint64_t (*)(BOOL, unint64_t, uint64_t, uint64_t, __n128))v18)(v11 > 1, v12 + 1, 1, v10, v16);
          v13 = v16;
          v10 = v15;
        }
        *(_QWORD *)(v10 + 16) = v12 + 1;
        *(__n128 *)(v10 + 16 * v12 + 32) = v13;
      }
      v9 += 40;
      if (!--v4)
      {
        sub_1C0778580();
        goto LABEL_14;
      }
    }
    sub_1C077B5B4();
    sub_1C0778580();
  }
LABEL_14:
  sub_1C07A32D0();
  sub_1C07A0070();
}

uint64_t sub_1C0BCA6B8(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t *__return_ptr, uint64_t);
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;

  v4 = *(_QWORD *)(a3 + 16);
  if (!v4)
    return MEMORY[0x1E0DEE9D8];
  v8 = *(_QWORD *)(type metadata accessor for VirtualInteractionContact(0) - 8);
  v9 = a3 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  v10 = *(_QWORD *)(v8 + 72);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v11 = MEMORY[0x1E0DEE9D8];
  v30 = a2;
  v21 = v10;
  while (1)
  {
    a1(&v25, v9);
    if (v3)
      break;
    if ((_QWORD)v26 != 1)
    {
      v24 = v26;
      v12 = a1;
      v13 = v25;
      v22 = v28;
      v23 = v27;
      v14 = v29;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C07ECF24();
        v11 = v18;
      }
      v15 = *(_QWORD *)(v11 + 16);
      v16 = v24;
      if (v15 >= *(_QWORD *)(v11 + 24) >> 1)
      {
        sub_1C07ECF24();
        v16 = v24;
        v11 = v19;
      }
      *(_QWORD *)(v11 + 16) = v15 + 1;
      v17 = v11 + (v15 << 6);
      *(_QWORD *)(v17 + 32) = v13;
      *(_OWORD *)(v17 + 40) = v16;
      *(_OWORD *)(v17 + 56) = v23;
      *(_OWORD *)(v17 + 72) = v22;
      *(_QWORD *)(v17 + 88) = v14;
      a1 = v12;
      v10 = v21;
    }
    v9 += v10;
    if (!--v4)
    {
      swift_bridgeObjectRelease();
      return v11;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

void sub_1C0BCA864()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_1C077AE5C();
  sub_1C07B7378();
  sub_1C07ACF80(&qword_1EF641BC0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  sub_1C07795DC();
  v27 = type metadata accessor for LiveGlobalKnowledgeTriple();
  v25 = *(_QWORD *)(v27 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  v26 = (uint64_t)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v8);
  sub_1C07B18B4(v9, v10, v11, v12, v13, v14, v15, v16, v23);
  if (v3)
  {
    sub_1C106B0F8();
    sub_1C0797500();
    v17 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      sub_1C079C710();
      if (v0)
        break;
      if (sub_1C07B2D80(v2, 1, v27) == 1)
      {
        sub_1C0784B6C(v2, &qword_1EF641BC0);
      }
      else
      {
        v18 = v24;
        sub_1C07E05F4(v2, v24, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
        sub_1C07E05F4(v18, v26, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
        if ((sub_1C07799C0() & 1) == 0)
        {
          sub_1C079136C();
          sub_1C07EBFC4();
          v17 = v21;
        }
        if (*(_QWORD *)(v17 + 16) >= *(_QWORD *)(v17 + 24) >> 1)
        {
          sub_1C079BF8C();
          sub_1C07EBFC4();
          v17 = v22;
        }
        v19 = sub_1C078B1CC();
        sub_1C07E05F4(v19, v20, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
      }
      v1 += v4;
      if (!--v3)
      {
        sub_1C077873C();
        goto LABEL_15;
      }
    }
    sub_1C077E584();
    sub_1C077873C();
  }
LABEL_15:
  sub_1C078210C();
  sub_1C07757D0();
}

void sub_1C0BCAA00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *__return_ptr, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  unint64_t v40;
  BOOL v41;
  unint64_t v42;
  char v43;
  int64_t v44;
  char v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int64_t v56;
  void (*v57)(char *__return_ptr, uint64_t);
  uint64_t v58;

  sub_1C077AE5C();
  a22 = v26;
  a23 = v27;
  sub_1C078178C();
  v57 = v28;
  v29 = sub_1C106E41C();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  sub_1C077AFC8();
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&v51 - v32;
  v34 = *(_QWORD *)(v24 + 56);
  v55 = v24 + 56;
  v35 = 1 << *(_BYTE *)(v24 + 32);
  v36 = -1;
  if (v35 < 64)
    v36 = ~(-1 << v35);
  v37 = v36 & v34;
  v56 = (unint64_t)(v35 + 63) >> 6;
  v58 = v24;
  sub_1C077584C();
  v38 = 0;
  v54 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v37)
    {
      sub_1C0782168();
      v40 = v39 | (v38 << 6);
      goto LABEL_23;
    }
    v41 = __OFADD__(v38++, 1);
    if (v41)
    {
      __break(1u);
      goto LABEL_37;
    }
    if (v38 >= v56)
      goto LABEL_35;
    v42 = *(_QWORD *)(v55 + 8 * v38);
    if (!v42)
      break;
LABEL_22:
    v37 = (v42 - 1) & v42;
    v40 = __clz(__rbit64(v42)) + (v38 << 6);
LABEL_23:
    (*(void (**)(char *, unint64_t, uint64_t))(v30 + 16))(v33, *(_QWORD *)(v58 + 48) + *(_QWORD *)(v30 + 72) * v40, v29);
    (*(void (**)(uint64_t, char *, uint64_t))(v30 + 32))(v25, v33, v29);
    v57(&a13, v25);
    if (v23)
    {
      sub_1C078E12C();
      swift_bridgeObjectRelease();
LABEL_35:
      swift_release();
      sub_1C078210C();
      sub_1C07757D0();
      return;
    }
    sub_1C078E12C();
    v45 = a13;
    if (a13 != 2)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C078E13C();
        sub_1C07EB01C();
        v54 = v49;
      }
      v46 = *(_QWORD *)(v54 + 16);
      v47 = v46 + 1;
      if (v46 >= *(_QWORD *)(v54 + 24) >> 1)
      {
        v52 = *(_QWORD *)(v54 + 16);
        v53 = v46 + 1;
        sub_1C07EB01C();
        v46 = v52;
        v47 = v53;
        v54 = v50;
      }
      v48 = v54;
      *(_QWORD *)(v54 + 16) = v47;
      *(_BYTE *)(v48 + v46 + 32) = v45 & 1;
    }
  }
  sub_1C07865E0();
  if (v43 == v41)
    goto LABEL_35;
  sub_1C07AD294();
  if (v42)
    goto LABEL_21;
  sub_1C07865E0();
  if (v43 == v41)
    goto LABEL_35;
  sub_1C07AD294();
  if (v42)
    goto LABEL_21;
  sub_1C07865E0();
  if (v43 == v41)
    goto LABEL_35;
  sub_1C07AD294();
  if (v42)
    goto LABEL_21;
  sub_1C07865E0();
  if (v43 == v41)
    goto LABEL_35;
  sub_1C07AD294();
  if (v42)
  {
LABEL_21:
    v38 = v44;
    goto LABEL_22;
  }
  while (1)
  {
    v38 = v44 + 1;
    if (__OFADD__(v44, 1))
      break;
    if (v38 >= v56)
      goto LABEL_35;
    v42 = *(_QWORD *)(v55 + 8 * v38);
    ++v44;
    if (v42)
      goto LABEL_22;
  }
LABEL_37:
  __break(1u);
}

void sub_1C0BCAC80()
{
  uint64_t v0;
  void (*v1)(_QWORD *__return_ptr, unint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(_QWORD *__return_ptr, unint64_t);
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE __src[176];
  _BYTE v15[176];
  uint64_t v16[22];
  _QWORD v17[23];
  uint64_t v18;

  sub_1C077AE5C();
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = v2;
    v5 = v1;
    v6 = *(_QWORD *)(sub_1C106D774() - 8);
    v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v8 = *(_QWORD *)(v6 + 72);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v5(v17, v4 + v7);
    if (v0)
    {
      sub_1C0775834();
      sub_1C077589C();
    }
    else
    {
      v9 = v4 + v8 + v7;
      v10 = MEMORY[0x1E0DEE9D8];
      v18 = v8;
      while (1)
      {
        sub_1C07B47F4((uint64_t)v17, (uint64_t)v15);
        sub_1C07B47F4((uint64_t)v15, (uint64_t)v16);
        if (sub_1C0BCC730(v16) != 1)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C0782230();
            sub_1C07ED260();
            v10 = v12;
          }
          v11 = *(_QWORD *)(v10 + 16);
          if (v11 >= *(_QWORD *)(v10 + 24) >> 1)
          {
            sub_1C07ED260();
            v10 = v13;
          }
          sub_1C07B47F4((uint64_t)v15, (uint64_t)__src);
          *(_QWORD *)(v10 + 16) = v11 + 1;
          memcpy((void *)(v10 + 176 * v11 + 32), __src, 0xB0uLL);
          v8 = v18;
        }
        if (!--v3)
          break;
        v5(v17, v9);
        v9 += v8;
      }
      swift_bridgeObjectRelease();
    }
  }
  sub_1C07757D0();
}

uint64_t LifeEventActivityProvider.__allocating_init(config:activitySignals:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C0778598();
  LifeEventActivityProvider.init(config:activitySignals:)(a1, a2);
  return v4;
}

uint64_t LifeEventActivityProvider.init(config:activitySignals:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t inited;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v4 = v2;
  v7 = type metadata accessor for Configuration();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v8);
  sub_1C077AFC8();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v37 - v10;
  if (qword_1ED761518 != -1)
    swift_once();
  sub_1C07947C4();
  v12 = MEMORY[0x1E0DEE9D8];
  if (qword_1ED7627B8)
  {
    sub_1C077B2CC(qword_1ED7627B8, (uint64_t)off_1ED7627C0);
    v14 = (*(uint64_t (**)(void))(v13 + 8))();
    if (a2)
    {
LABEL_5:
      sub_1C07B1F90(a1, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
      sub_1C077960C();
      *(_QWORD *)(v4 + 16) = a2;
      return v4;
    }
  }
  else
  {
    v14 = MEMORY[0x1E0DEE9D8];
    if (a2)
      goto LABEL_5;
  }
  v38 = v14;
  sub_1C07ACF80(&qword_1ED75D330);
  v15 = sub_1C0778598();
  v37 = xmmword_1C1078A20;
  *(_OWORD *)(v15 + 16) = xmmword_1C1078A20;
  *(_WORD *)(v15 + 32) = 772;
  *(_BYTE *)(v15 + 34) = 1;
  v39 = v4;
  *(_QWORD *)(v4 + 16) = v12;
  if ((*(_BYTE *)(a1 + *(int *)(v7 + 20) + 9) & 8) != 0)
  {
    sub_1C07EC228();
    v15 = v16;
    *(_QWORD *)(v16 + 16) = 4;
    *(_BYTE *)(v16 + 35) = 2;
    sub_1C07ACF80(&qword_1ED75D328);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C10795A0;
    v18 = type metadata accessor for InferredModeSignal();
    sub_1C0778598();
    sub_1C0B5D394(1, 0);
    v20 = v19;
    *(_QWORD *)(inited + 56) = v18;
    sub_1C07930E8(&qword_1ED74A4A0);
    *(_QWORD *)(inited + 64) = v21;
    *(_QWORD *)(inited + 32) = v20;
    v22 = type metadata accessor for MotionStateSignal();
    sub_1C0778598();
    v23 = sub_1C0C41614(1, 600.0);
    *(_QWORD *)(inited + 96) = v22;
    sub_1C07930E8(&qword_1ED74A130);
    *(_QWORD *)(inited + 104) = v24;
    *(_QWORD *)(inited + 72) = v23;
    sub_1C07E05C8(a1, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    v25 = type metadata accessor for VirtualInteractionsSignal();
    sub_1C077B5BC();
    v26 = sub_1C0F17058((uint64_t)v11, 0);
    *(_QWORD *)(inited + 136) = v25;
    sub_1C07930E8(&qword_1ED74C1D8);
    *(_QWORD *)(inited + 144) = v27;
    *(_QWORD *)(inited + 112) = v26;
    *(_QWORD *)(inited + 176) = &unk_1E7A1F308;
    *(_QWORD *)(inited + 184) = sub_1C0BCC524();
    *(_QWORD *)(inited + 152) = &unk_1E7A009D8;
    sub_1C07A80F0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0BDA718();
    swift_endAccess();
    swift_setDeallocating();
    sub_1C0BE8E88();
  }
  sub_1C07ACF80(&qword_1ED75D328);
  v28 = swift_initStackObject();
  *(_OWORD *)(v28 + 16) = v37;
  sub_1C0790980();
  sub_1C07E05C8((uint64_t)v11, v3, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  type metadata accessor for ConfidenceService();
  sub_1C077B5BC();
  v29 = sub_1C08C84E4(v3);
  sub_1C07B1F90((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  *(_QWORD *)(v28 + 56) = &unk_1E7A1F408;
  *(_QWORD *)(v28 + 64) = sub_1C0BCC4AC();
  *(_QWORD *)(v28 + 32) = v15;
  *(_QWORD *)(v28 + 40) = v29;
  sub_1C0790980();
  v30 = sub_1C0B5B528((uint64_t)v11);
  v32 = v31;
  *(_QWORD *)(v28 + 96) = &unk_1E7A1F388;
  *(_QWORD *)(v28 + 104) = sub_1C0BCC4E8();
  *(_QWORD *)(v28 + 72) = v30;
  *(_QWORD *)(v28 + 80) = v32;
  v33 = type metadata accessor for StoredLocationVisitSignal();
  v34 = sub_1C0778598();
  *(_QWORD *)(v34 + 16) = 0;
  *(_QWORD *)(v34 + 24) = 0;
  *(_QWORD *)(v28 + 136) = v33;
  sub_1C0BCC618(&qword_1ED75C620, 255, (void (*)(uint64_t))type metadata accessor for StoredLocationVisitSignal);
  *(_QWORD *)(v28 + 144) = v35;
  *(_QWORD *)(v28 + 112) = v34;
  v40 = v28;
  sub_1C0BDA718();
  sub_1C07A80F0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0BDA718();
  swift_endAccess();
  swift_bridgeObjectRelease();
  sub_1C07B1F90(a1, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  return v39;
}

uint64_t sub_1C0BCB2B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[7];

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 16);
  v7[2] = a1;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0BCA5AC((uint64_t)sub_1C0BCC560, (uint64_t)v7, v3);
  v5 = v4;
  sub_1C0775834();
  v7[4] = v5;
  v7[5] = sub_1C0A5C168;
  v7[6] = 0;
  swift_retain();
  sub_1C07ACF80((uint64_t *)&unk_1ED74C140);
  sub_1C07ACF80(&qword_1ED74AF90);
  sub_1C07BB218(&qword_1ED74C138, (uint64_t *)&unk_1ED74C140);
  return sub_1C1070C00();
}

uint64_t sub_1C0BCB3B8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14[5];

  v6 = a1[3];
  v7 = a1[4];
  sub_1C07A9480(a1, v6);
  v14[3] = swift_getAssociatedTypeWitness();
  v14[4] = swift_getAssociatedConformanceWitness();
  sub_1C07B3E30(v14);
  sub_1C0D04A74(a2, v6, v7, v8);
  if (v3)
  {

    result = sub_1C0A0A6A4((uint64_t)v14);
    v10 = 0;
    v11 = 0;
  }
  else
  {
    AsyncSequence.toAnySessionAsyncSequence()();
    v10 = v12;
    v11 = v13;
    result = _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v14);
  }
  *a3 = v10;
  a3[1] = v11;
  return result;
}

uint64_t sub_1C0BCB4DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1C0BCB4F8()
{
  uint64_t v0;

  sub_1C0BCB520(*(_QWORD **)(v0 + 24), *(_QWORD *)(v0 + 16));
  return sub_1C077CF28(*(uint64_t (**)(void))(v0 + 8));
}

void sub_1C0BCB520(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  _QWORD *v53;
  char v54;
  uint64_t v55;
  char v56;
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(uint64_t, uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  _QWORD v96[10];
  _OWORD v97[5];
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  uint64_t v103[4];
  _OWORD v104[3];

  v95 = a2;
  v93 = sub_1C106ADE0();
  v91 = *(_QWORD *)(v93 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v4);
  sub_1C077AED0();
  v92 = v5;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0778674();
  v90 = v7;
  v85 = type metadata accessor for SourceIdPrefix();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v8);
  sub_1C0778564();
  v88 = v10 - v9;
  v86 = type metadata accessor for ActivityEventContent(0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v11);
  sub_1C077AED0();
  v87 = v12;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v13);
  sub_1C0778674();
  v89 = v14;
  sub_1C07ACF80(qword_1ED74BC78);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v15);
  sub_1C077AED0();
  v81 = v16;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v17);
  v80 = (uint64_t)&v80 - v18;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v19);
  sub_1C0778674();
  v82 = v20;
  v84 = type metadata accessor for InferredActivitySegment();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v21);
  sub_1C0778564();
  v24 = v23 - v22;
  sub_1C07ACF80(&qword_1ED74A568);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v25);
  sub_1C077AED0();
  v83 = v26;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v80 - v28;
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)&v80 - v31;
  v33 = type metadata accessor for VirtualInteraction(0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v34);
  sub_1C0778544();
  memset(v104, 0, 32);
  v35 = a1[3];
  v36 = a1[4];
  v94 = a1;
  sub_1C07A9480(a1, v35);
  v37 = *(void (**)(uint64_t, uint64_t))(v36 + 32);
  v103[3] = swift_getAssociatedTypeWitness();
  sub_1C07B3E30(v103);
  v37(v35, v36);
  sub_1C0798C54();
  if (sub_1C078F85C())
  {
    sub_1C0798C54();
    v38 = sub_1C078F85C();
    if ((_DWORD)v38)
    {
      sub_1C0BCBF10(LOBYTE(v97[0]), (char *)v97);
      v39 = 0;
      LOBYTE(v29) = v97[0];
LABEL_7:
      v40 = 1;
      v41 = MEMORY[0x1E0DEE9D8];
      goto LABEL_41;
    }
    goto LABEL_43;
  }
  sub_1C0798C54();
  if (!sub_1C078F85C())
  {
    sub_1C0798C54();
    if (sub_1C077C458())
    {
      sub_1C07B1F90(v2, type metadata accessor for VirtualInteraction);
      sub_1C0798C54();
      v42 = sub_1C077C458();
      sub_1C07B2D8C((uint64_t)v32, v42 ^ 1u, 1, v33);
      sub_1C078A8F8((uint64_t)v32, (uint64_t)v29, &qword_1ED74A568);
      if (sub_1C07B2D80((uint64_t)v29, 1, v33) == 1)
      {
        sub_1C0784B6C((uint64_t)v29, &qword_1ED74A568);
        LOBYTE(v29) = -32;
      }
      else
      {
        v47 = *(_QWORD *)&v29[*(int *)(v33 + 24)];
        sub_1C07B1F90((uint64_t)v29, type metadata accessor for VirtualInteraction);
        sub_1C0BCBFF8(v47, (char *)&v98);
        LOBYTE(v29) = v98;
      }
      v48 = v83;
      sub_1C078A8F8((uint64_t)v32, v83, &qword_1ED74A568);
      v49 = sub_1C07B2D80(v48, 1, v33);
      if ((_DWORD)v49 == 1)
      {
        sub_1C077C2D0(v49, &qword_1ED74A568);
        v41 = MEMORY[0x1E0DEE9D8];
      }
      else
      {
        v41 = sub_1C0BCC01C();
        sub_1C07B1F90(v48, type metadata accessor for VirtualInteraction);
      }
      sub_1C0784B6C((uint64_t)v32, &qword_1ED74A568);
      v39 = 0;
      v40 = 1;
    }
    else
    {
      sub_1C0798C54();
      v43 = v84;
      if (sub_1C077C458())
      {
        sub_1C07B1F90(v24, (uint64_t (*)(_QWORD))type metadata accessor for InferredActivitySegment);
        sub_1C0798C54();
        v44 = v82;
        v45 = sub_1C077C458();
        sub_1C07B2D8C(v44, v45 ^ 1u, 1, v43);
        v46 = v80;
        sub_1C078A8F8(v44, v80, qword_1ED74BC78);
        sub_1C07907E4(v46);
        if (v56)
        {
          sub_1C0784B6C(v46, qword_1ED74BC78);
          LOBYTE(v29) = -32;
        }
        else
        {
          v54 = *(_BYTE *)(v46 + *(int *)(v43 + 24));
          sub_1C07B1F90(v46, (uint64_t (*)(_QWORD))type metadata accessor for InferredActivitySegment);
          v29 = (char *)(0x9A989C9B858BuLL >> (8 * v54));
        }
        v55 = v81;
        sub_1C078A8F8(v44, v81, qword_1ED74BC78);
        sub_1C07907E4(v55);
        if (v56)
          v40 = 1;
        else
          v40 = 0;
        if (v56)
        {
          sub_1C0784B6C(v55, qword_1ED74BC78);
          v39 = 0;
        }
        else
        {
          v39 = *(_QWORD *)(v55 + *(int *)(v43 + 28));
          sub_1C07B1F90(v55, (uint64_t (*)(_QWORD))type metadata accessor for InferredActivitySegment);
        }
        sub_1C077C2D0(v59, qword_1ED74BC78);
      }
      else
      {
        sub_1C077B8D4();
        if (sub_1C077C458())
        {
          sub_1C0BCC6D8((uint64_t)&v98);
          sub_1C077B8D4();
          if ((sub_1C077C458() & 1) == 0)
          {
            v101 = 0u;
            v102 = 0u;
            v99 = 0u;
            v100 = 0u;
            v98 = 0u;
          }
          sub_1C078A8F8((uint64_t)&v98, (uint64_t)v96, &qword_1ED748010);
          if (v96[3])
          {
            memcpy(v97, v96, sizeof(v97));
            sub_1C078A8F8((uint64_t)&v97[2] + 8, (uint64_t)v96, &qword_1ED74AB38);
            v51 = v96[3];
            sub_1C0784B6C((uint64_t)v96, &qword_1ED74AB38);
            sub_1C0BCC6D8((uint64_t)v97);
            if (!v51)
            {
              sub_1C0784B6C((uint64_t)&v98, &qword_1ED748010);
              v39 = 0;
              v40 = 1;
              v41 = MEMORY[0x1E0DEE9D8];
              LOBYTE(v29) = -99;
              goto LABEL_41;
            }
            v52 = &qword_1ED760400;
            v53 = v104;
          }
          else
          {
            sub_1C0784F34(v50, &qword_1ED760400);
            v52 = &qword_1ED748010;
            v53 = v96;
          }
          sub_1C0784B6C((uint64_t)v53, v52);
          sub_1C07ACF80(&qword_1ED74AF90);
          v76 = sub_1C07811FC();
          sub_1C07B2D8C(v76, v77, v78, v79);
          sub_1C0784B6C((uint64_t)&v98, &qword_1ED748010);
          goto LABEL_48;
        }
        sub_1C0798C54();
        if (sub_1C078F85C())
        {
          swift_bridgeObjectRelease();
          sub_1C0798C54();
          v57 = sub_1C077C458();
          if (*((_QWORD *)&v97[0] + 1))
            v58 = v57;
          else
            v58 = 0;
          if (v58 == 1)
          {
            v39 = *(_QWORD *)&v97[1];
            v98 = v97[0];
            *(_QWORD *)&v99 = *(_QWORD *)&v97[1];
            *((_QWORD *)&v99 + 1) = &type metadata for GamingActivityContent;
            _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
            sub_1C079CE6C();
            sub_1C078A67C((uint64_t)&v98, (uint64_t)v104, &qword_1ED760400);
            sub_1C077960C();
          }
          else
          {
            sub_1C0784B6C((uint64_t)v104, &qword_1ED760400);
            v98 = 0u;
            v99 = 0u;
            sub_1C078A67C((uint64_t)&v98, (uint64_t)v104, &qword_1ED760400);
            v39 = 0;
          }
          v40 = v58 ^ 1;
          v41 = MEMORY[0x1E0DEE9D8];
          LOBYTE(v29) = -117;
          goto LABEL_41;
        }
        if (qword_1ED761518 != -1)
          swift_once();
        sub_1C07947C4();
        v38 = qword_1ED7627B8;
        if (!qword_1ED7627B8)
          goto LABEL_43;
        sub_1C077B2CC(qword_1ED7627B8, (uint64_t)off_1ED7627C0);
        sub_1C079EFA8();
        if (v98 >= 0xE0u)
          LOBYTE(v29) = -32;
        else
          LOBYTE(v29) = v98;
        v75 = sub_1C079EFA8();
        if (*((_QWORD *)&v97[1] + 1))
        {
          sub_1C0784F34(v75, &qword_1ED760400);
          sub_1C07C010C(v97, &v98);
          sub_1C07C010C(&v98, v104);
        }
        else
        {
          sub_1C0784B6C((uint64_t)v97, &qword_1ED760400);
        }
        v39 = 0;
        v40 = 1;
      }
      v41 = MEMORY[0x1E0DEE9D8];
    }
    if (v29 >= 0xE0u)
    {
LABEL_42:
      v38 = sub_1C077960C();
      goto LABEL_43;
    }
LABEL_41:
    LOBYTE(v98) = (_BYTE)v29;
    LOBYTE(v97[0]) = 0x80;
    if ((static ActivityType.== infix(_:_:)((unsigned __int8 *)&v98) & 1) == 0)
    {
      if (qword_1ED749BD8 != -1)
        swift_once();
      v64 = sub_1C079E000(v85, (uint64_t)&unk_1ED78C360);
      v65 = v88;
      sub_1C07E05C8(v64, v88, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
      sub_1C078A8F8((uint64_t)v104, (uint64_t)&v98, &qword_1ED760400);
      v66 = v86;
      v67 = v87;
      *(_OWORD *)(v87 + 40) = 0u;
      *(_OWORD *)(v67 + 24) = 0u;
      *(_BYTE *)v67 = (_BYTE)v29;
      sub_1C079B52C(v65, v67 + *(int *)(v66 + 32));
      *(_QWORD *)(v67 + 8) = v39;
      *(_BYTE *)(v67 + 16) = v40;
      sub_1C0A5CDD0((uint64_t)&v98, v67 + 24);
      *(_QWORD *)(v67 + 56) = v41;
      v68 = v89;
      sub_1C079B52C(v67, v89);
      sub_1C07AA928();
      v69 = v90;
      sub_1C07947B4();
      sub_1C07AA928();
      v70 = v92;
      sub_1C07947B4();
      sub_1C079CE6C();
      v71 = *(void (**)(uint64_t, uint64_t, uint64_t))(v91 + 32);
      v72 = v95;
      v73 = v93;
      v71(v95, v69, v93);
      v74 = sub_1C07ACF80(&qword_1ED74AF90);
      v71(v72 + *(int *)(v74 + 28), v70, v73);
      sub_1C079B52C(v68, v72 + *(int *)(v74 + 32));
      v60 = v72;
      v61 = 0;
      v62 = 1;
      v63 = v74;
      goto LABEL_47;
    }
    goto LABEL_42;
  }
  sub_1C0798C54();
  v38 = sub_1C077C458();
  if ((_DWORD)v38)
  {
    sub_1C0BCBF40((char *)v96);
    v39 = 0;
    LOBYTE(v29) = v96[0];
    goto LABEL_7;
  }
LABEL_43:
  sub_1C0784F34(v38, &qword_1ED760400);
  sub_1C07ACF80(&qword_1ED74AF90);
  v60 = sub_1C07811FC();
LABEL_47:
  sub_1C07B2D8C(v60, v61, v62, v63);
LABEL_48:
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v103);
  sub_1C0776760();
}

uint64_t sub_1C0BCBF10@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  if ((result - 3) > 0xDu)
    v2 = 0x80;
  else
    v2 = byte_1C10A6452[(char)(result - 3)];
  *a2 = v2;
  return result;
}

uint64_t sub_1C0BCBF40@<X0>(char *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  char v3;
  char *v4;
  uint64_t result;

  v2 = *v1;
  if (*v1 == 2)
  {
    v3 = -107;
  }
  else
  {
    switch(v2)
    {
      case 32:
        v3 = -106;
        break;
      case 8:
        v3 = 34;
        break;
      case 16:
        v3 = 35;
        break;
      case 4:
        v3 = 33;
        break;
      default:
        if (qword_1ED754E70 != -1)
        {
          v4 = a1;
          result = swift_once();
          a1 = v4;
        }
        if (qword_1ED754E68 == v2)
          v3 = -105;
        else
          v3 = 0x80;
        break;
    }
  }
  *a1 = v3;
  return result;
}

unint64_t sub_1C0BCBFF8@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  if (result > 0x13)
    v2 = 0x80;
  else
    v2 = byte_1C10A6460[result];
  *a2 = v2;
  return result;
}

uint64_t sub_1C0BCC01C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;

  sub_1C07ACF80((uint64_t *)&unk_1ED757B90);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v1);
  sub_1C0778564();
  v4 = v3 - v2;
  type metadata accessor for VirtualInteractionContact(0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  sub_1C0778564();
  v8 = v7 - v6;
  v9 = (int *)type metadata accessor for VirtualInteraction(0);
  v10 = *(_QWORD *)(v0 + v9[8]);
  if (v10 == 1)
  {
    v13 = *(_QWORD *)(v0 + v9[10]);
    MEMORY[0x1E0C80A78](v9);
    *((_QWORD *)&v21 - 2) = v0;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v14 = sub_1C0BCA6B8((void (*)(uint64_t *__return_ptr, uint64_t))sub_1C0BCC70C, (uint64_t)(&v21 - 2), v13);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (!v10)
    {
      sub_1C078A8F8(v0 + v9[9], v4, (uint64_t *)&unk_1ED757B90);
      v11 = sub_1C07907E4(v4);
      if (v12)
      {
        sub_1C077C2D0(v11, (uint64_t *)&unk_1ED757B90);
      }
      else
      {
        sub_1C07E05F4(v4, v8, type metadata accessor for VirtualInteractionContact);
        sub_1C0BCC254(v8, &v23);
        v15 = v24;
        if (v24 != 1)
        {
          v18 = v27;
          v17 = v28;
          v21 = v25;
          v22 = v26;
          v19 = v23;
          sub_1C07ACF80(&qword_1EF62FFD0);
          v14 = sub_1C0778598();
          *(_OWORD *)(v14 + 16) = xmmword_1C1079220;
          *(_QWORD *)(v14 + 32) = v19;
          *(_QWORD *)(v14 + 40) = v15;
          v20 = v22;
          *(_OWORD *)(v14 + 48) = v21;
          *(_OWORD *)(v14 + 64) = v20;
          *(_QWORD *)(v14 + 80) = v18;
          *(_QWORD *)(v14 + 88) = v17;
          sub_1C07B1F90(v8, type metadata accessor for VirtualInteractionContact);
          return v14;
        }
        sub_1C07B1F90(v8, type metadata accessor for VirtualInteractionContact);
      }
    }
    return MEMORY[0x1E0DEE9D8];
  }
  return v14;
}

uint64_t LifeEventActivityProvider.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t LifeEventActivityProvider.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0BCC234(uint64_t a1)
{
  return sub_1C0BCB2B0(a1);
}

void sub_1C0BCC254(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  Swift::String_optional v6;
  uint64_t countAndFlagsBits;
  void *object;
  Swift::String_optional v9;
  uint64_t v10;
  void *v11;
  char v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_1C07ACF80((uint64_t *)&unk_1ED75EA40);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  sub_1C0778544();
  if (*(_QWORD *)(a1 + 8) && (v6 = String.normalizedContactHandle()(), v6.value._object))
  {
    countAndFlagsBits = v6.value._countAndFlagsBits;
    object = v6.value._object;
    v9 = String.normalizedContactHandle()();
    if (v9.value._object)
      v10 = v9.value._countAndFlagsBits;
    else
      v10 = 0;
    if (v9.value._object)
      v11 = v9.value._object;
    else
      v11 = (void *)0xE000000000000000;
    sub_1C07B1280();
    if ((sub_1C078800C() & 1) != 0)
    {
      v24 = 0;
      v25 = 0;
      v26 = 0;
      v27 = 0;
    }
    else
    {
      v12 = sub_1C078800C();
      if ((v12 & 1) != 0)
        v13 = v6.value._countAndFlagsBits;
      else
        v13 = 0;
      if ((v12 & 1) != 0)
        v14 = v6.value._object;
      else
        v14 = 0;
      v25 = (uint64_t)v14;
      v26 = v13;
      if ((v12 & 1) != 0)
        v15 = 0;
      else
        v15 = v6.value._countAndFlagsBits;
      v24 = v15;
      if ((v12 & 1) != 0)
        v16 = 0;
      else
        v16 = v6.value._object;
      v27 = (uint64_t)v16;
      countAndFlagsBits = 0;
      object = 0;
    }
    if ((sub_1C078800C() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      countAndFlagsBits = v10;
      object = v11;
      v18 = v24;
      v17 = v25;
    }
    else if ((sub_1C078800C() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v26 = v10;
      v17 = (uint64_t)v11;
      v18 = v24;
    }
    else
    {
      v18 = v24;
      if (v27)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v18 = v10;
        v27 = (uint64_t)v11;
      }
      v17 = v25;
    }
    v19 = type metadata accessor for VirtualInteractionContact(0);
    sub_1C078A8F8(a1 + *(int *)(v19 + 28), v2, (uint64_t *)&unk_1ED75EA40);
    v20 = sub_1C106E590();
    if (sub_1C07B2D80(v2, 1, v20) == 1)
    {
      sub_1C0784B6C(v2, (uint64_t *)&unk_1ED75EA40);
      v21 = 0;
      v22 = 0;
    }
    else
    {
      v21 = sub_1C106E50C();
      v22 = v23;
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v2, v20);
    }
    *a2 = v21;
    a2[1] = v22;
    a2[2] = v18;
    a2[3] = v27;
    a2[4] = v26;
    a2[5] = v17;
    a2[6] = countAndFlagsBits;
    a2[7] = (uint64_t)object;
  }
  else
  {
    *(_OWORD *)a2 = xmmword_1C107AF40;
    *((_OWORD *)a2 + 1) = 0u;
    *((_OWORD *)a2 + 2) = 0u;
    *((_OWORD *)a2 + 3) = 0u;
  }
  sub_1C0776760();
}

unint64_t sub_1C0BCC4AC()
{
  unint64_t result;

  result = qword_1ED75CA10;
  if (!qword_1ED75CA10)
  {
    result = MEMORY[0x1C3BA8174]("m˗&xx\n", &unk_1E7A1F408);
    atomic_store(result, (unint64_t *)&qword_1ED75CA10);
  }
  return result;
}

unint64_t sub_1C0BCC4E8()
{
  unint64_t result;

  result = qword_1ED75CAD8;
  if (!qword_1ED75CAD8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A28F0, &unk_1E7A1F388);
    atomic_store(result, (unint64_t *)&qword_1ED75CAD8);
  }
  return result;
}

unint64_t sub_1C0BCC524()
{
  unint64_t result;

  result = qword_1ED754F58;
  if (!qword_1ED754F58)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A28D4, &unk_1E7A1F308);
    atomic_store(result, (unint64_t *)&qword_1ED754F58);
  }
  return result;
}

uint64_t sub_1C0BCC560@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1C0BCB3B8(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1C0BCC578(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1C0928A6C;
  return sub_1C0BCB4DC(a1, a2, v2);
}

void sub_1C0BCC5DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  sub_1C0BCC618(&qword_1ED75C488, a2, (void (*)(uint64_t))type metadata accessor for LifeEventActivityProvider);
  *(_QWORD *)(a1 + 8) = v3;
}

void sub_1C0BCC618(_QWORD *a1, uint64_t a2, void (*a3)(uint64_t))
{
  if (!*a1)
  {
    a3(a2);
    sub_1C077D8A0();
  }
  sub_1C0778534();
}

uint64_t type metadata accessor for LifeEventActivityProvider()
{
  return objc_opt_self();
}

uint64_t sub_1C0BCC66C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t method lookup function for LifeEventActivityProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LifeEventActivityProvider.__allocating_init(config:activitySignals:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of LifeEventActivityProvider.sessions(in:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

void sub_1C0BCC6AC()
{
  sub_1C07BB218(&qword_1ED74CC80, &qword_1ED74CC88);
}

uint64_t sub_1C0BCC6D8(uint64_t a1)
{
  destroy for StoredLocationVisitWithTransition(a1);
  return a1;
}

void sub_1C0BCC70C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C0BCC254(a1, a2);
}

uint64_t sub_1C0BCC730(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t sub_1C0BCC748()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1C0BCC768()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LifeEventDeltaDateRangeProvider()
{
  return objc_opt_self();
}

uint64_t sub_1C0BCC7AC()
{
  return sub_1C0BCC748();
}

uint64_t sub_1C0BCC7CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, char *, uint64_t);
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, char *, uint64_t);
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v40 = a2;
  v4 = sub_1C07ACF80(&qword_1ED759DF0);
  MEMORY[0x1E0C80A78](v4);
  sub_1C077AF80();
  v7 = v5 - v6;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v36 - v9;
  v11 = sub_1C106ADE0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  sub_1C077AF80();
  v15 = v13 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v36 - v17;
  result = sub_1C0BCCAB8(a1, (uint64_t)&v36 - v17);
  if (!v2)
  {
    sub_1C106ADD4();
    sub_1C0794BAC((unint64_t *)&qword_1ED755A40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
    if ((sub_1C106FA6C() & 1) != 0)
    {
      type metadata accessor for DateRangeError();
      sub_1C0794BAC(&qword_1ED749888, (uint64_t (*)(uint64_t))type metadata accessor for DateRangeError, (uint64_t)&unk_1C10A64F8);
      swift_allocError();
      v20 = v12;
      v22 = v21;
      v23 = sub_1C07ACF80(&qword_1ED7481D8);
      v24 = v22 + *(int *)(v23 + 48);
      v25 = *(void (**)(uint64_t, char *, uint64_t))(v20 + 16);
      v25(v22, v18, v11);
      v25(v24, (char *)v15, v11);
      sub_1C07B2D8C(v22, 0, 1, v23);
      swift_willThrow();
      v26 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
      v26(v15, v11);
      return ((uint64_t (*)(char *, uint64_t))v26)(v18, v11);
    }
    else
    {
      result = sub_1C106FA84();
      if ((result & 1) != 0)
      {
        v27 = *(int *)(v4 + 48);
        v39 = v4;
        v28 = (uint64_t)&v10[v27];
        v37 = v12;
        sub_1C07A6F48((uint64_t)v10, (uint64_t)v18);
        v38 = v28;
        sub_1C07A6F48(v28, v15);
        v29 = v7 + *(int *)(v4 + 48);
        v30 = v37;
        v31 = *(void (**)(uint64_t, char *, uint64_t))(v37 + 16);
        v31(v7, v10, v11);
        v31(v29, (char *)v28, v11);
        v32 = v40;
        sub_1C07A6F48(v40, v7);
        v33 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
        v33(v29, v11);
        v34 = v7 + *(int *)(v39 + 48);
        sub_1C07A6F48(v7, (uint64_t)v10);
        sub_1C07A6F48(v34, v38);
        v35 = sub_1C07ACF80(&qword_1ED75D0B8);
        sub_1C07A6F48(v32 + *(int *)(v35 + 36), v34);
        return ((uint64_t (*)(uint64_t, uint64_t))v33)(v7, v11);
      }
      else
      {
        __break(1u);
      }
    }
  }
  return result;
}

uint64_t sub_1C0BCCAB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  int v23;
  unint64_t v24;
  unint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;

  v5 = type metadata accessor for Configuration();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Pipeline.StatusStore();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C083F944(a1, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v10[*(int *)(v8 + 20)] = 1;
  if (qword_1ED75ABC0 != -1)
    swift_once();
  v26 = xmmword_1ED78D140;
  v27 = *(_OWORD *)&qword_1ED78D150;
  v28 = qword_1ED78D160;
  v29 = xmmword_1ED78D140;
  v14 = unk_1ED78D158;
  v30 = qword_1ED78D150;
  sub_1C083F944((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v24 = 0xD000000000000010;
  v25 = 0x80000001C11031D0;
  sub_1C07B35DC((uint64_t)&v29);
  sub_1C08FD4A0((uint64_t)&v30);
  sub_1C0BCD07C(v14);
  sub_1C106FC94();
  sub_1C106FC94();
  v15 = v24;
  v16 = v25;
  type metadata accessor for KeyValueStore();
  swift_allocObject();
  KeyValueStore.init(config:domain:)((uint64_t)v7, v15, v16);
  if (v2)
  {

    sub_1C07B2F5C((uint64_t)&v29);
    sub_1C08EE9A0((uint64_t)&v30);
    sub_1C077AB58(v14);
    sub_1C0A157EC((uint64_t)v10);
    v17 = sub_1C106ADE0();
    sub_1C07B2D8C((uint64_t)v13, 1, 1, v17);
LABEL_6:
    sub_1C0784B94((uint64_t)v13, (uint64_t *)&unk_1ED762690);
    type metadata accessor for DateRangeError();
    sub_1C0794BAC(&qword_1ED749888, (uint64_t (*)(uint64_t))type metadata accessor for DateRangeError, (uint64_t)&unk_1C10A64F8);
    swift_allocError();
    v19 = v18;
    v20 = sub_1C07ACF80(&qword_1ED7481D8);
    sub_1C07B2D8C(v19, 1, 1, v20);
    return swift_willThrow();
  }
  sub_1C0CD2580();
  swift_release();
  sub_1C07B2F5C((uint64_t)&v29);
  sub_1C08EE9A0((uint64_t)&v30);
  sub_1C077AB58(v14);
  sub_1C0A157EC((uint64_t)v10);
  v22 = sub_1C106ADE0();
  v23 = sub_1C07B2D80((uint64_t)v13, 1, v22);
  if (v23 == 1)
    goto LABEL_6;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(a2, v13, v22);
}

uint64_t type metadata accessor for DateRangeError()
{
  uint64_t result;

  result = qword_1ED749890;
  if (!qword_1ED749890)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1C0BCCE64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t (*v13)(_QWORD);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, char *, uint64_t);
  void (*v18)(uint64_t, uint64_t);
  _QWORD v20[2];

  v1 = v0;
  v2 = sub_1C106ADE0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1C077AF80();
  v6 = (char *)(v4 - v5);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v20 - v8;
  v10 = type metadata accessor for DateRangeError();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C083F944(v1, (uint64_t)v12, v13);
  v14 = sub_1C07ACF80(&qword_1ED7481D8);
  if (sub_1C07B2D80((uint64_t)v12, 1, v14) == 1)
    return 0xD00000000000004BLL;
  v16 = &v12[*(int *)(v14 + 48)];
  v17 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
  v17(v9, v12, v2);
  v17(v6, v16, v2);
  v20[0] = 0;
  v20[1] = 0xE000000000000000;
  sub_1C1070774();
  sub_1C106FC94();
  sub_1C0794BAC((unint64_t *)&qword_1ED7565B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
  sub_1C0799E58();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  sub_1C0799E58();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  v15 = v20[0];
  v18 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v18((uint64_t)v6, v2);
  v18((uint64_t)v9, v2);
  return v15;
}

uint64_t sub_1C0BCD07C(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t *sub_1C0BCD08C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t *, uint64_t *, uint64_t);

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_1C07ACF80(&qword_1ED7481D8);
    if (sub_1C07B2D80((uint64_t)a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = sub_1C106ADE0();
      v10 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
      v10(a1, a2, v9);
      v10((uint64_t *)((char *)a1 + *(int *)(v7 + 48)), (uint64_t *)((char *)a2 + *(int *)(v7 + 48)), v9);
      sub_1C07B2D8C((uint64_t)a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_1C0BCD170(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v2 = sub_1C07ACF80(&qword_1ED7481D8);
  result = sub_1C07B2D80(a1, 1, v2);
  if (!(_DWORD)result)
  {
    v4 = sub_1C106ADE0();
    v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
    v5(a1, v4);
    return ((uint64_t (*)(uint64_t, uint64_t))v5)(a1 + *(int *)(v2 + 48), v4);
  }
  return result;
}

char *sub_1C0BCD20C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);

  v6 = sub_1C07ACF80(&qword_1ED7481D8);
  if (sub_1C07B2D80((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_1C106ADE0();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8(&a1[*(int *)(v6 + 48)], &a2[*(int *)(v6 + 48)], v7);
    sub_1C07B2D8C((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

char *sub_1C0BCD2CC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);

  v6 = sub_1C07ACF80(&qword_1ED7481D8);
  v7 = sub_1C07B2D80((uint64_t)a1, 1, v6);
  v8 = sub_1C07B2D80((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      v12 = sub_1C106ADE0();
      v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24);
      v13(a1, a2, v12);
      v13(&a1[*(int *)(v6 + 48)], &a2[*(int *)(v6 + 48)], v12);
      return a1;
    }
    sub_1C0784B94((uint64_t)a1, &qword_1ED7481D8);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v9 = sub_1C106ADE0();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(a1, a2, v9);
  v10(&a1[*(int *)(v6 + 48)], &a2[*(int *)(v6 + 48)], v9);
  sub_1C07B2D8C((uint64_t)a1, 0, 1, v6);
  return a1;
}

char *sub_1C0BCD3F4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);

  v6 = sub_1C07ACF80(&qword_1ED7481D8);
  if (sub_1C07B2D80((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_1C106ADE0();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32);
    v8(a1, a2, v7);
    v8(&a1[*(int *)(v6 + 48)], &a2[*(int *)(v6 + 48)], v7);
    sub_1C07B2D8C((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

char *sub_1C0BCD4B4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);

  v6 = sub_1C07ACF80(&qword_1ED7481D8);
  v7 = sub_1C07B2D80((uint64_t)a1, 1, v6);
  v8 = sub_1C07B2D80((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      v12 = sub_1C106ADE0();
      v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 40);
      v13(a1, a2, v12);
      v13(&a1[*(int *)(v6 + 48)], &a2[*(int *)(v6 + 48)], v12);
      return a1;
    }
    sub_1C0784B94((uint64_t)a1, &qword_1ED7481D8);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v9 = sub_1C106ADE0();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(a1, a2, v9);
  v10(&a1[*(int *)(v6 + 48)], &a2[*(int *)(v6 + 48)], v9);
  sub_1C07B2D8C((uint64_t)a1, 0, 1, v6);
  return a1;
}

uint64_t sub_1C0BCD5DC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0BCD5E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_1C07ACF80(&qword_1ED7481D8);
  v5 = sub_1C07B2D80(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t sub_1C0BCD630()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0BCD63C(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = sub_1C07ACF80(&qword_1ED7481D8);
  return sub_1C07B2D8C(a1, v5, a3, v6);
}

uint64_t sub_1C0BCD688(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C07ACF80(&qword_1ED7481D8);
  return sub_1C07B2D80(a1, 1, v2);
}

uint64_t sub_1C0BCD6BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1ED7481D8);
  return sub_1C07B2D8C(a1, a2, 1, v4);
}

uint64_t sub_1C0BCD6F8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C106ADE0();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_1C0BCD764()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_1C0BCD788@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;

  v4 = sub_1C07ACF80(&qword_1ED75D0B8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (*(uint64_t (**)(double))(*(_QWORD *)(v1 + 16) + 16))(v5);
  if (!v2)
  {
    sub_1C0BD19E4((uint64_t)v7, a1);
    return sub_1C0BCD8D4((uint64_t)v7);
  }
  return result;
}

uint64_t type metadata accessor for LifeEventDeltaProvider()
{
  return objc_opt_self();
}

uint64_t sub_1C0BCD854@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0BCD788(a1);
}

uint64_t sub_1C0BCD874()
{
  return sub_1C0BCD764();
}

unint64_t sub_1C0BCD898()
{
  unint64_t result;

  result = qword_1EF641BD0;
  if (!qword_1EF641BD0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A696C, &type metadata for LifeEventProviderAsyncSequence);
    atomic_store(result, (unint64_t *)&qword_1EF641BD0);
  }
  return result;
}

uint64_t sub_1C0BCD8D4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C07ACF80(&qword_1ED75D0B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0BCD914@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t result;
  _QWORD *v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;

  v37 = a1;
  v38 = a2;
  v2 = sub_1C106F544();
  v39 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1C0778564();
  v41 = (uint64_t *)(v4 - v3);
  v5 = sub_1C106A6D8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  sub_1C0778564();
  v9 = v8 - v7;
  v10 = sub_1C07ACF80((uint64_t *)&unk_1ED762680);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v35 - v14;
  v16 = sub_1C106AB28();
  v42 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  sub_1C0778564();
  v19 = v18 - v17;
  sub_1C0B79420();
  v20 = (void *)sub_1C10704E0();
  if (!v20)
  {
    sub_1C078AB18((uint64_t)v15, 1);
LABEL_7:
    sub_1C0784B94((uint64_t)v15, (uint64_t *)&unk_1ED762680);
    sub_1C0BCE0A4();
    sub_1C0775810();
    *v24 = 0;
    return swift_willThrow();
  }
  v21 = v20;
  v36 = v2;
  v22 = sub_1C09751EC(0xD00000000000001ELL, 0x80000001C1103F40, 1852797802, 0xE400000000000000, v20);

  if (v22)
  {
    sub_1C106AAF8();

    v23 = 0;
  }
  else
  {
    v23 = 1;
  }
  sub_1C078AB18((uint64_t)v12, v23);
  sub_1C0BCE0E0((uint64_t)v12, (uint64_t)v15);
  if (sub_1C07B2D80((uint64_t)v15, 1, v16) == 1)
    goto LABEL_7;
  (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v19, v15, v16);
  sub_1C106A708();
  swift_allocObject();
  sub_1C106A6FC();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v9, *MEMORY[0x1E0CAE038], v5);
  sub_1C106A6E4();
  v26 = v40;
  sub_1C106AB58();
  if (v26)
  {
    sub_1C106F190();
    sub_1C07964D4();
    sub_1C07964D4();
    v28 = sub_1C106F538();
    v29 = sub_1C1070390();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      v40 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v30 = 138412290;
      v38 = v30 + 4;
      sub_1C07964D4();
      v31 = _swift_stdlib_bridgeErrorToNSError();
      v43 = v31;
      sub_1C10705AC();
      *v40 = v31;
      sub_1C07937B4();
      sub_1C07937B4();
      _os_log_impl(&dword_1C0771000, v28, v29, "Error decoding demo data: %@", v30, 0xCu);
      sub_1C07ACF80(&qword_1ED7614A0);
      swift_arrayDestroy();
      sub_1C0776778();
    }
    sub_1C07937B4();
    sub_1C07937B4();

    (*(void (**)(uint64_t *, uint64_t))(v39 + 8))(v41, v36);
    sub_1C0BCE0A4();
    sub_1C0775810();
    *v32 = 1;
    swift_willThrow();
    swift_release();
    sub_1C07937B4();
    return sub_1C07A0FC8();
  }
  else
  {
    sub_1C07ACF80(&qword_1EF641CD0);
    sub_1C0BCE128();
    v27 = sub_1C106A6F0();
    v41 = &v35;
    MEMORY[0x1E0C80A78](v27);
    *(&v35 - 2) = v37;
    sub_1C0BCA140();
    v34 = v33;
    sub_1C078801C();
    swift_release();
    sub_1C07A0FC8();
    result = swift_bridgeObjectRelease();
    *v38 = v34;
  }
  return result;
}

uint64_t sub_1C0BCDDD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((sub_1C0BCDEC4(a1) & 1) != 0)
  {
    v4 = sub_1C106ADE0();
    v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16);
    v5(a2, a1, v4);
    v6 = sub_1C07ACF80(&qword_1EF641BB0);
    v7 = a1 + *(int *)(v6 + 44);
    v8 = sub_1C07ACF80(&qword_1ED74AF90);
    v5(a2 + *(int *)(v8 + 28), v7, v4);
    sub_1C0B9CDCC(a1 + *(int *)(v6 + 48), a2 + *(int *)(v8 + 32));
    v9 = a2;
    v10 = 0;
    v11 = v8;
  }
  else
  {
    v11 = sub_1C07ACF80(&qword_1ED74AF90);
    v9 = a2;
    v10 = 1;
  }
  return sub_1C07B2D8C(v9, v10, 1, v11);
}

uint64_t sub_1C0BCDEC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(uint64_t);
  char v12;
  char v13;
  uint64_t v15;

  v2 = v1;
  v4 = sub_1C07ACF80(&qword_1ED75D0B8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C106ADE0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0BCC618(&qword_1ED755A40, 255, v11);
  v12 = sub_1C106FA78();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  sub_1C09456DC(v2, (uint64_t)v6);
  if ((v12 & 1) != 0)
    v13 = sub_1C106FA84();
  else
    v13 = 0;
  sub_1C0784B94((uint64_t)v6, &qword_1ED75D0B8);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v13 & 1;
}

uint64_t type metadata accessor for LifeEventActivityProviderDemo()
{
  return objc_opt_self();
}

uint64_t sub_1C0BCE044()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C0BCE054@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1C0BCD914(a1, a2);
}

void sub_1C0BCE068(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  sub_1C0BCC618(&qword_1EF641CC0, a2, (void (*)(uint64_t))type metadata accessor for LifeEventActivityProviderDemo);
  *(_QWORD *)(a1 + 8) = v3;
}

unint64_t sub_1C0BCE0A4()
{
  unint64_t result;

  result = qword_1EF641CC8;
  if (!qword_1EF641CC8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A66A0, &type metadata for LifeEventActivityProviderDemo.LifeEventActivityProviderDemoDataError);
    atomic_store(result, (unint64_t *)&qword_1EF641CC8);
  }
  return result;
}

uint64_t sub_1C0BCE0E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80((uint64_t *)&unk_1ED762680);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C0BCE128()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EF641CD8;
  if (!qword_1EF641CD8)
  {
    v1 = sub_1C07D4BEC(&qword_1EF641CD0);
    sub_1C07BB218(&qword_1EF641CE0, &qword_1EF641BB0);
    v3 = v2;
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0DEAF40], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF641CD8);
  }
  return result;
}

uint64_t sub_1C0BCE1A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0BCDDD0(a1, a2);
}

uint64_t storeEnumTagSinglePayload for LifeEventActivityProviderDemo.LifeEventActivityProviderDemoDataError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C0BCE208 + 4 * byte_1C10A65A5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C0BCE23C + 4 * byte_1C10A65A0[v4]))();
}

uint64_t sub_1C0BCE23C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0BCE244(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0BCE24CLL);
  return result;
}

uint64_t sub_1C0BCE258(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0BCE260);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C0BCE264(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0BCE26C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LifeEventActivityProviderDemo.LifeEventActivityProviderDemoDataError()
{
  return &type metadata for LifeEventActivityProviderDemo.LifeEventActivityProviderDemoDataError;
}

void sub_1C0BCE288()
{
  sub_1C07BB218(&qword_1EF641CE8, &qword_1EF641CF0);
}

unint64_t sub_1C0BCE2B8()
{
  unint64_t result;

  result = qword_1EF641CF8;
  if (!qword_1EF641CF8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A6678, &type metadata for LifeEventActivityProviderDemo.LifeEventActivityProviderDemoDataError);
    atomic_store(result, (unint64_t *)&qword_1EF641CF8);
  }
  return result;
}

BOOL sub_1C0BCE2F4(uint64_t a1, uint64_t a2)
{
  return sub_1C0BCE360(a1, a2, (uint64_t)&unk_1E79FC8A0, &qword_1EF62DFD8, &qword_1EF641D00, (uint64_t)sub_1C0BCEF50);
}

BOOL sub_1C0BCE318(uint64_t a1, uint64_t a2)
{
  return sub_1C0BCE360(a1, a2, (uint64_t)&unk_1E79FC8F0, &qword_1EF62DFE0, &qword_1EF641D08, (uint64_t)sub_1C0BCF8E8);
}

BOOL sub_1C0BCE33C(uint64_t a1, uint64_t a2)
{
  return sub_1C0BCE360(a1, a2, (uint64_t)&unk_1E79FC940, &qword_1EF62DFE8, &qword_1EF641D10, (uint64_t)sub_1C0BCFE74);
}

BOOL sub_1C0BCE360(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t *a5, uint64_t a6)
{
  unint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v10 = *(_QWORD *)(sub_1C0BD04CC(a2) + 16);
  swift_release();
  if (v10 > 1)
    return 0;
  sub_1C0AA8B78();
  sub_1C0A7C19C();
  v12 = v11;
  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0)
    return 0;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = MEMORY[0x1E0DEE9D8];
  if (v20)
  {
    v37 = (uint64_t)a4;
    v38 = a6;
    v39 = (uint64_t)a5;
    v41 = MEMORY[0x1E0DEE9D8];
    sub_1C0778624();
    sub_1C09D39C4();
    v21 = v41;
    v22 = sub_1C0F2239C(a2);
    v24 = v23;
    v26 = v25 & 1;
    a5 = (uint64_t *)(a2 + 56);
    while ((v22 & 0x8000000000000000) == 0 && v22 < 1 << *(_BYTE *)(a2 + 32))
    {
      if (((*(unint64_t *)((char *)a5 + (((unint64_t)v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
        goto LABEL_17;
      if (*(_DWORD *)(a2 + 36) != (_DWORD)v24)
        goto LABEL_18;
      v27 = *(_BYTE *)(*(_QWORD *)(a2 + 48) + 24 * v22 + 16);
      v40 = v21;
      v28 = *(_QWORD *)(v21 + 16);
      if (v28 >= *(_QWORD *)(v21 + 24) >> 1)
        sub_1C09D39C4();
      *(_QWORD *)(v21 + 16) = v28 + 1;
      *(_BYTE *)(v21 + v28 + 32) = 0x4060503020100uLL >> (8 * v27);
      v29 = sub_1C0F22500(v22, v24, v26 & 1, a2);
      v22 = v29;
      v24 = v30;
      v26 = v31 & 1;
      if (!--v20)
      {
        sub_1C0834E68(v29, v30, v31 & 1);
        swift_bridgeObjectRelease();
        a5 = (uint64_t *)v39;
        a4 = (_QWORD *)v37;
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
LABEL_14:
  sub_1C0899214(v21, v13, v14, v15, v16, v17, v18, v19, v36, SWORD2(v36), SBYTE6(v36), SHIBYTE(v36), v37, v38, v39, v40, v42, v43, v44,
    v45,
    v46);
  v21 = v33;
  if (*a4 != -1)
LABEL_19:
    swift_once();
  sub_1C0C75E78(*a5, v21);
  v35 = *(_QWORD *)(v34 + 16);
  swift_bridgeObjectRelease();
  return v35 == 0;
}

void sub_1C0BCE59C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  sub_1C077AE5C();
  v2 = v1;
  v4 = v3;
  v5 = sub_1C07D4BEC(&qword_1ED754910);
  v6 = sub_1C0BD0AD8();
  v8 = v5;
  v9 = v4;
  v10 = v6;
  v11 = v2;
  v7 = MEMORY[0x1C3BA812C](0, &v8, MEMORY[0x1E0D3D340], 0);
  MEMORY[0x1E0C80A78](v7);
  sub_1C106EA1C();
  if (!v0)
  {
    sub_1C07D4BEC(&qword_1ED7614F0);
    sub_1C1070E64();
    v8 = v5;
    v9 = v4;
    v10 = v6;
    v11 = v2;
    swift_getOpaqueTypeConformance2();
    sub_1C1070714();
  }
  sub_1C07757D0();
}

void sub_1C0BCE6D0()
{
  sub_1C0BCE59C();
}

uint64_t sub_1C0BCE6F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, _QWORD *a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(_QWORD *, _QWORD *);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned __int8 v35;
  unsigned __int8 v36;
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(_QWORD *, uint64_t, uint64_t, _QWORD *);
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;

  v86 = a1;
  v87 = a2;
  v12 = sub_1C106E65C();
  v83 = *(_QWORD *)(v12 - 8);
  v84 = v12;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v13);
  sub_1C077AE40();
  v82 = v14;
  v88 = sub_1C07ACF80(&qword_1ED759DF0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v15);
  sub_1C0790738();
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v71 - v17;
  v76 = *(_QWORD *)(sub_1C077AE98() - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v19);
  sub_1C0782608();
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v71 - v21;
  v77 = sub_1C07ACF80(&qword_1ED75D0B8);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v23);
  v78 = (uint64_t)&v71 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v25);
  sub_1C0778674();
  v89 = v26;
  v80 = *(_QWORD **)(a5 + 16);
  v81 = a5;
  v27 = *(uint64_t (**)(_QWORD *, _QWORD *))(*(_QWORD *)(a5 + 32) + 8);
  v75 = *(_QWORD **)(a5 + 32);
  if ((v27(a3, a4) & 1) == 0)
  {
    sub_1C0881ED0();
    swift_allocError();
    *(_QWORD *)v45 = a3;
    *(_QWORD *)(v45 + 8) = a4;
    *(_BYTE *)(v45 + 16) = 0;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0778624();
    return swift_willThrow();
  }
  v74 = a3;
  v71 = a6;
  v28 = sub_1C0778624();
  v73 = a4;
  v29 = v85;
  v30 = sub_1C0BD04CC(v28);
  v85 = v29;
  sub_1C0AA46D0(v30);
  v32 = v31;
  v34 = v33;
  v36 = v35;
  swift_release();
  if (v36 == 255)
    goto LABEL_8;
  if (v36 != 1)
  {
    sub_1C0BD05EC(v32, v34, v36);
LABEL_8:
    sub_1C07D65AC();
    v47 = v86;
    v46 = v87;
    result = sub_1C07ABD90();
    if ((result & 1) != 0)
    {
      v48 = v88;
      v49 = (uint64_t)&v18[*(int *)(v88 + 48)];
      sub_1C07A009C((uint64_t)v18, v47);
      v50 = v49;
      v72 = v49;
      sub_1C07A009C(v49, v46);
      v51 = v6 + *(int *)(v48 + 48);
      sub_1C07A009C(v6, (uint64_t)v18);
      sub_1C07A009C(v51, v50);
      v42 = v78;
      sub_1C0793D3C(v78, v6);
      sub_1C077B664(v51);
      v52 = *(int *)(v48 + 48);
      v44 = v89;
      v53 = v6 + v52;
      sub_1C0793D3C(v6, (uint64_t)v18);
      sub_1C0793D3C(v53, v72);
      sub_1C0793D3C(v42 + *(int *)(v77 + 36), v53);
      goto LABEL_10;
    }
    __break(1u);
LABEL_15:
    __break(1u);
    return result;
  }
  sub_1C106AD2C();
  sub_1C106AD2C();
  sub_1C07D65AC();
  result = sub_1C07ABD90();
  if ((result & 1) == 0)
    goto LABEL_15;
  v38 = v88;
  v39 = (uint64_t)&v18[*(int *)(v88 + 48)];
  sub_1C079D66C((uint64_t)v18, (uint64_t)v22);
  v40 = v39;
  sub_1C079D66C(v39, v7);
  v41 = v6 + *(int *)(v38 + 48);
  sub_1C07A009C(v6, (uint64_t)v18);
  sub_1C07A009C(v41, v40);
  v42 = v78;
  sub_1C079D66C(v78, v6);
  sub_1C077B664(v41);
  v43 = v6 + *(int *)(v88 + 48);
  sub_1C079D66C(v6, (uint64_t)v18);
  sub_1C079D66C(v43, v40);
  sub_1C079D66C(v42 + *(int *)(v77 + 36), v43);
  v44 = v89;
LABEL_10:
  sub_1C077B664(v6);
  sub_1C078A6DC(v42, v44, &qword_1ED75D0B8);
  v54 = v79[4];
  sub_1C07A9480(v79, v79[3]);
  v55 = v44;
  v56 = v82;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v83 + 104))(v82, *MEMORY[0x1E0D3CF30], v84);
  v57 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, _QWORD *))(v54 + 8);
  v58 = v80;
  v88 = *(_QWORD *)(v81 + 24);
  v59 = v85;
  v60 = v57(v80, v56, v55, v80);
  if (v59)
  {
    sub_1C07B7388();
    v61 = v55;
  }
  else
  {
    v62 = v60;
    v63 = v74;
    sub_1C07B7388();
    v90 = v62;
    sub_1C07D4BEC(&qword_1ED7614F0);
    sub_1C1070E64();
    v64 = sub_1C1070708();
    MEMORY[0x1C3BA8174](MEMORY[0x1E0DEC210], v64);
    sub_1C106FDE4();
    v65 = swift_release();
    v90 = v91;
    MEMORY[0x1E0C80A78](v65);
    v66 = (_QWORD *)v88;
    *(&v71 - 6) = v58;
    *(&v71 - 5) = v66;
    *(&v71 - 4) = v75;
    *(&v71 - 3) = v63;
    *(&v71 - 2) = v73;
    v67 = sub_1C107078C();
    sub_1C07AA038();
    MEMORY[0x1C3BA8174](MEMORY[0x1E0DEC320], v67);
    v68 = sub_1C106FDD8();
    swift_release();
    v69 = swift_allocObject();
    *(_QWORD *)(v69 + 16) = v68;
    v70 = v71;
    *v71 = sub_1C0BD0B78;
    v70[1] = v69;
    v61 = v89;
  }
  return sub_1C0784B30(v61, &qword_1ED75D0B8);
}

uint64_t sub_1C0BCECF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t *a6@<X8>)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t result;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v28 = a3;
  v29 = a5;
  v27 = a2;
  v10 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07D4BEC(&qword_1ED7614F0);
  v13 = sub_1C1070E64();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v26 - v14;
  v16 = *(_QWORD *)(a4 - 8);
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v21 + 16))(v15, a1, v13, v18);
  result = sub_1C0BCEEA8(v13, (uint64_t)&v30, (uint64_t)v20);
  if (!v6)
  {
    v23 = a6;
    v24 = sub_1C106ADE0();
    sub_1C07B2D8C((uint64_t)v12, 1, 1, v24);
    v25 = (*(uint64_t (**)(uint64_t, uint64_t, char *, uint64_t))(v29 + 16))(v27, v28, v12, a4);
    sub_1C0784B30((uint64_t)v12, (uint64_t *)&unk_1ED762690);
    result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v20, a4);
    *v23 = v25;
  }
  return result;
}

uint64_t sub_1C0BCEEA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  if (swift_getEnumCaseMultiPayload() != 1)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 32))(a3, v3);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(a1 + 24) - 8) + 32))(a2, v3, *(_QWORD *)(a1 + 24));
  return swift_willThrowTypedImpl();
}

uint64_t sub_1C0BCEF3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, _QWORD *a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  return sub_1C0BCE6F0(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1C0BCEF50()
{
  uint64_t result;

  result = sub_1C0AA8768();
  qword_1EF641D00 = result;
  return result;
}

void sub_1C0BCEF74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  _BYTE *v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t);
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  void (*v70)(uint64_t, uint64_t);
  uint64_t v71;
  unint64_t v72;
  void (*v73)(uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unsigned __int8 v80;
  unsigned __int8 v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(uint64_t, uint64_t, uint64_t);
  void (*v85)(uint64_t, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD v107[10];

  sub_1C077AE5C();
  v100 = sub_1C106EF38();
  v96 = *(_QWORD *)(v100 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v7);
  sub_1C077AED0();
  v99 = v8;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v9);
  sub_1C0778674();
  v95 = v10;
  v94 = sub_1C106E590();
  v92 = *(_QWORD *)(v94 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v11);
  sub_1C077AE40();
  v102 = v12;
  sub_1C07ACF80(&qword_1EF641D20);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v13);
  sub_1C077AED0();
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v14);
  sub_1C0779728();
  v93 = v15;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v16);
  sub_1C0778674();
  v97 = v17;
  v106 = sub_1C077AE98();
  v101 = *(_QWORD *)(v106 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v18);
  sub_1C077AED0();
  v90 = v19;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v20);
  sub_1C0779728();
  v89 = v21;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v22);
  sub_1C0778674();
  v104 = v23;
  sub_1C07ACF80(&qword_1ED744AC0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v24);
  sub_1C0782608();
  MEMORY[0x1E0C80A78](v25);
  sub_1C079DCC0();
  MEMORY[0x1E0C80A78](v26);
  sub_1C077E3E0();
  MEMORY[0x1E0C80A78](v27);
  sub_1C0778674();
  v91 = v28;
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v29);
  sub_1C078D458();
  MEMORY[0x1E0C80A78](v30);
  sub_1C077D048();
  MEMORY[0x1E0C80A78](v31);
  sub_1C0790738();
  MEMORY[0x1E0C80A78](v32);
  sub_1C078AF30();
  MEMORY[0x1E0C80A78](v33);
  v42 = sub_1C0795214(v34, v35, v36, v37, v38, v39, v40, v41, v88);
  v43 = sub_1C0BD04CC(v42);
  v44 = *(_QWORD *)(v43 + 16);
  if (v44 != 1)
  {
    sub_1C077AF1C();
    if (!v44)
    {
      sub_1C106EF2C();
      v53 = sub_1C07967D8();
      sub_1C0776854(v5);
      v54 = v106;
      if (v60)
      {
        sub_1C0784B30(v5, &qword_1ED744AC0);
        sub_1C07A008C(v0);
      }
      else
      {
        sub_1C106EDA0();
        sub_1C078303C(v5, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 8));
      }
      v4 = v0;
      v55 = v105;
      goto LABEL_25;
    }
    sub_1C078CBDC();
    v51 = sub_1C07967D8();
    v52 = sub_1C0776854(v2);
    v54 = v106;
    if (v60)
    {
      sub_1C077F328(v52, &qword_1ED744AC0);
      sub_1C07A008C(v1);
    }
    else
    {
      sub_1C106EDA0();
      sub_1C078303C(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 8));
    }
    v4 = v1;
LABEL_18:
    v55 = v105;
    goto LABEL_25;
  }
  sub_1C1070DF8();
  sub_1C0775BE4();
  sub_1C0797524();
  v45 = sub_1C1070E4C() & ~(-1 << *(_BYTE *)(v43 + 32));
  sub_1C0781210();
  if ((v46 & 1) == 0)
  {
LABEL_7:
    sub_1C077AF1C();
    sub_1C078CBDC();
    v49 = sub_1C07967D8();
    v50 = sub_1C0776854(v6);
    if (v60)
    {
      sub_1C078A02C(v50, &qword_1ED744AC0);
      v54 = v106;
      sub_1C07B2D8C(v4, 1, 1, v106);
    }
    else
    {
      sub_1C106ED94();
      sub_1C078303C(v6, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8));
      v54 = v106;
    }
    goto LABEL_18;
  }
  while (1)
  {
    v47 = (_BYTE *)(*(_QWORD *)(v43 + 48) + 24 * v45);
    if (v47[16] == 2)
    {
      if ((*v47 & 1) == 0)
      {
        sub_1C077AF1C();
        sub_1C0781558();
        goto LABEL_22;
      }
      sub_1C0798C60();
      sub_1C078E150();
      if ((v107 & 1) != 0)
        break;
    }
    sub_1C0791E3C();
    if ((v48 & 1) == 0)
      goto LABEL_7;
  }
  sub_1C077AF1C();
LABEL_22:
  sub_1C078CBDC();
  v56 = sub_1C07967D8();
  sub_1C0776854(v91);
  v55 = v105;
  v54 = v106;
  if (v60)
  {
    sub_1C0784B30(v91, &qword_1ED744AC0);
    sub_1C07A008C(v4);
  }
  else
  {
    sub_1C106EDA0();
    sub_1C078303C(v91, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 8));
  }
LABEL_25:
  v57 = v102;
  sub_1C078A6DC(v4, v55, (uint64_t *)&unk_1ED762690);
  sub_1C077CD6C(v55, v3);
  sub_1C077AEEC(v3, 1, v54);
  if (v60)
  {
    sub_1C07B1E28(v55);
    v58 = v3;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v101 + 32))(v104, v3, v54);
    sub_1C106EF20();
    v59 = sub_1C07ACF80(qword_1EF641D28);
    v61 = sub_1C077AEEC(v97, 1, v59);
    if (!v60)
    {
      sub_1C07B18CC();
      sub_1C079DD40();
      v98 = sub_1C106E530();
      v103 = v62;
      v63 = *(void (**)(uint64_t, uint64_t))(v92 + 8);
      v63(v57, v94);
      sub_1C106EF14();
      sub_1C077AEEC(v93, 1, v59);
      if (!v60)
      {
        sub_1C07B18CC();
        sub_1C079DD40();
        sub_1C106E530();
        v63(v57, v94);
        v74 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v75 = sub_1C0BD04CC(v74);
        sub_1C0AA46D0(v75);
        v77 = v76;
        v79 = v78;
        v81 = v80;
        sub_1C077ED08();
        if (v81 != 255)
        {
          if (v81 == 1)
          {
            v82 = v104;
            sub_1C106AD2C();
            v83 = v101;
            v84 = *(void (**)(uint64_t, uint64_t, uint64_t))(v101 + 16);
LABEL_44:
            v84(v90, v89, v106);
            v107[0] = v98;
            v107[1] = v103;
            sub_1C106FC94();
            sub_1C106FC94();
            swift_bridgeObjectRelease();
            v85 = *(void (**)(uint64_t, uint64_t))(v83 + 8);
            v85(v89, v106);
            v85(v82, v106);
            sub_1C0784B30(v105, (uint64_t *)&unk_1ED762690);
            sub_1C07AA038();
            sub_1C077B5BC();
            sub_1C07865EC(v90, 4, v86, v87, MEMORY[0x1E0DEE9D8]);
            goto LABEL_38;
          }
          sub_1C0BD05EC(v77, v79, v81);
        }
        v83 = v101;
        v84 = *(void (**)(uint64_t, uint64_t, uint64_t))(v101 + 16);
        v82 = v104;
        v84(v89, v104, v106);
        goto LABEL_44;
      }
      v61 = swift_bridgeObjectRelease();
    }
    sub_1C078A02C(v61, &qword_1EF641D20);
    if (qword_1ED760048 != -1)
      swift_once();
    v64 = sub_1C106F544();
    sub_1C079E000(v64, (uint64_t)qword_1ED78D800);
    sub_1C07B7C64(v95);
    sub_1C07B7C64(v99);
    v65 = sub_1C106F538();
    v66 = sub_1C107039C();
    if (os_log_type_enabled(v65, v66))
    {
      v67 = sub_1C0775854();
      v107[0] = sub_1C0775854();
      *(_DWORD *)v67 = 136315394;
      sub_1C106EF20();
      v68 = sub_1C106FB5C();
      sub_1C07799C8(v68, v69);
      sub_1C079CE78();
      swift_bridgeObjectRelease();
      v70 = *(void (**)(uint64_t, uint64_t))(v96 + 8);
      v70(v95, v100);
      *(_WORD *)(v67 + 12) = 2080;
      sub_1C106EF14();
      v71 = sub_1C106FB5C();
      sub_1C07799C8(v71, v72);
      sub_1C079CE78();
      swift_bridgeObjectRelease();
      v70(v99, v100);
      _os_log_impl(&dword_1C0771000, v65, v66, "GraphCommuteActivityEvent: Unable to resolve start or end location of commute - %s or %s", (uint8_t *)v67, 0x16u);
      swift_arrayDestroy();
      sub_1C0776778();
    }

    v73 = *(void (**)(uint64_t, uint64_t))(v96 + 8);
    v73(v99, v100);
    v73(v95, v100);
    sub_1C07AD74C(*(uint64_t (**)(_QWORD, _QWORD))(v101 + 8));
    v58 = v55;
  }
  sub_1C0784B30(v58, (uint64_t *)&unk_1ED762690);
LABEL_38:
  sub_1C07757D0();
}

BOOL sub_1C0BCF89C(uint64_t a1, uint64_t a2)
{
  return sub_1C0BCE360(a1, a2, (uint64_t)&unk_1E79FC8A0, &qword_1EF62DFD8, &qword_1EF641D00, (uint64_t)sub_1C0BCEF50);
}

void sub_1C0BCF8D4()
{
  sub_1C0BCEF74();
}

uint64_t sub_1C0BCF8E8()
{
  uint64_t result;

  result = sub_1C0AA8768();
  qword_1EF641D08 = result;
  return result;
}

void sub_1C0BCF90C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;

  sub_1C077AE5C();
  v6 = v5;
  v65 = sub_1C077AE98();
  v60 = *(_QWORD *)(v65 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v7);
  v61 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v9);
  sub_1C0779728();
  v59 = v10;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v11);
  v64 = (char *)&v56 - v12;
  sub_1C07ACF80(&qword_1ED744AC0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v13);
  sub_1C078D458();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v56 - v15;
  MEMORY[0x1E0C80A78](v17);
  sub_1C079DCC0();
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v56 - v19;
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v21);
  sub_1C077AED0();
  v62 = v22;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v56 - v24;
  MEMORY[0x1E0C80A78](v26);
  sub_1C077E3E0();
  MEMORY[0x1E0C80A78](v27);
  sub_1C078AF30();
  MEMORY[0x1E0C80A78](v28);
  sub_1C0778674();
  v66 = v29;
  v30 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v58 = v6;
  v31 = sub_1C0BD04CC(v30);
  v63 = v0;
  v32 = *(_QWORD *)(v31 + 16);
  if (v32 != 1)
  {
    sub_1C07767F4();
    if (v32)
    {
      sub_1C07AAFF8();
      v42 = sub_1C07967D8();
      sub_1C0776854((uint64_t)v16);
      if (!v41)
      {
        sub_1C106EDA0();
        sub_1C078303C((uint64_t)v16, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 8));
        v3 = v4;
        goto LABEL_18;
      }
      sub_1C0784B30((uint64_t)v16, &qword_1ED744AC0);
      sub_1C0788028(v4);
      v3 = v4;
    }
    else
    {
      sub_1C07AAFF8();
      v43 = sub_1C07967D8();
      sub_1C077AEEC(v2, 1, v43);
      if (!v41)
      {
        sub_1C106EDA0();
        sub_1C0780BD0();
        sub_1C0781D30(v2, v44);
        v3 = (uint64_t)v25;
        goto LABEL_18;
      }
      sub_1C0784B30(v2, &qword_1ED744AC0);
      sub_1C0788028((uint64_t)v25);
      v3 = (uint64_t)v25;
    }
LABEL_19:
    v45 = (uint64_t)v64;
    goto LABEL_20;
  }
  v57 = v20;
  sub_1C1070DF8();
  sub_1C0775BE4();
  sub_1C0797524();
  v33 = sub_1C1070E4C();
  v34 = -1 << *(_BYTE *)(v31 + 32);
  v35 = v33 & ~v34;
  if (((*(_QWORD *)(v31 + 56 + ((v35 >> 3) & 0xFFFFFFFFFFFFF8)) >> v35) & 1) == 0)
  {
LABEL_8:
    sub_1C07767F4();
    sub_1C07AAFF8();
    v39 = sub_1C07967D8();
    v40 = sub_1C0776854(v1);
    if (!v41)
    {
      sub_1C106ED94();
      sub_1C078303C(v1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 8));
LABEL_18:
      v1 = v65;
      goto LABEL_19;
    }
    sub_1C077F328(v40, &qword_1ED744AC0);
    sub_1C0788028(v3);
    goto LABEL_19;
  }
  v36 = ~v34;
  while (1)
  {
    v37 = (_BYTE *)(*(_QWORD *)(v31 + 48) + 24 * v35);
    if (v37[16] == 2)
    {
      if ((*v37 & 1) == 0)
      {
        sub_1C07767F4();
        sub_1C0781558();
        goto LABEL_32;
      }
      v38 = sub_1C0798C60();
      swift_bridgeObjectRelease();
      if ((v38 & 1) != 0)
        break;
    }
    v35 = (v35 + 1) & v36;
    if (((*(_QWORD *)(v31 + 56 + ((v35 >> 3) & 0xFFFFFFFFFFFFF8)) >> v35) & 1) == 0)
      goto LABEL_8;
  }
  sub_1C07767F4();
LABEL_32:
  v54 = (uint64_t)v57;
  sub_1C07AAFF8();
  v55 = sub_1C07967D8();
  sub_1C0776854(v54);
  v45 = (uint64_t)v64;
  v1 = v65;
  if (v41)
  {
    sub_1C0784B30(v54, &qword_1ED744AC0);
    sub_1C077F140(v3);
  }
  else
  {
    sub_1C106EDA0();
    sub_1C078303C(v54, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 8));
  }
LABEL_20:
  v46 = v66;
  v47 = v62;
  sub_1C078A6DC(v3, v66, (uint64_t *)&unk_1ED762690);
  sub_1C077CD6C(v46, v47);
  sub_1C077AEEC(v47, 1, v1);
  if (!v41)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 32))(v45, v47, v1);
    v48 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v49 = sub_1C0BD04CC(v48);
    sub_1C0AA46D0(v49);
    sub_1C0797FCC();
    v50 = v59;
    if (v47 != 255)
    {
      if (v47 == 1)
      {
        sub_1C0795B5C();
LABEL_28:
        v51 = (uint64_t)v61;
        sub_1C07A32DC();
        sub_1C106EFA4();
        sub_1C078D7F0(v50);
        sub_1C078D7F0(v45);
        sub_1C0784B30(v66, (uint64_t *)&unk_1ED762690);
        sub_1C07AA038();
        sub_1C077B5BC();
        sub_1C07865EC(v51, 5, v52, v53, MEMORY[0x1E0DEE9D8]);
        goto LABEL_29;
      }
      sub_1C0785120();
    }
    sub_1C07947D4();
    goto LABEL_28;
  }
  sub_1C07B1E28(v46);
  sub_1C07B1E28(v47);
LABEL_29:
  sub_1C07757D0();
}

BOOL sub_1C0BCFE28(uint64_t a1, uint64_t a2)
{
  return sub_1C0BCE360(a1, a2, (uint64_t)&unk_1E79FC8F0, &qword_1EF62DFE0, &qword_1EF641D08, (uint64_t)sub_1C0BCF8E8);
}

void sub_1C0BCFE60()
{
  sub_1C0BCF90C();
}

uint64_t sub_1C0BCFE74()
{
  uint64_t result;

  result = sub_1C0AA8768();
  qword_1EF641D10 = result;
  return result;
}

void sub_1C0BCFE98()
{
  uint64_t v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  _BYTE *v49;
  char v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(uint64_t, uint64_t);
  uint64_t (*v57)(uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned __int8 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t (*v74)(uint64_t, uint64_t);
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  sub_1C077AE5C();
  v88 = v0;
  v8 = v7;
  v9 = sub_1C106D1F8();
  v77 = *(_QWORD *)(v9 - 8);
  v78 = v9;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v10);
  sub_1C077AE40();
  v76 = v11;
  sub_1C07ACF80(&qword_1EF641D18);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v12);
  sub_1C077AE40();
  v82 = v13;
  v85 = sub_1C077AE98();
  v80 = *(_QWORD *)(v85 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v14);
  sub_1C077AED0();
  v81 = v15;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v16);
  sub_1C0779728();
  v84 = v17;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v18);
  sub_1C0778674();
  v83 = v19;
  sub_1C07ACF80(&qword_1ED744AC0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v20);
  sub_1C079DCC0();
  MEMORY[0x1E0C80A78](v21);
  sub_1C0790738();
  MEMORY[0x1E0C80A78](v22);
  sub_1C078AF30();
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v75 - v24;
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v26);
  sub_1C077AED0();
  v86 = v27;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v28);
  sub_1C077D048();
  MEMORY[0x1E0C80A78](v29);
  sub_1C077E3E0();
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)&v75 - v31;
  MEMORY[0x1E0C80A78](v33);
  v42 = sub_1C0795214(v34, v35, v36, v37, v38, v39, v40, v41, (uint64_t)v75);
  v79 = v8;
  v43 = sub_1C0BD04CC(v42);
  v44 = *(_QWORD *)(v43 + 16);
  if (v44 != 1)
  {
    sub_1C077ED08();
    if (v44)
    {
      sub_1C07B48A0();
      v53 = sub_1C07967D8();
      sub_1C077AEEC(v3, 1, v53);
      v47 = v86;
      if (!v52)
      {
        sub_1C106EDA0();
        sub_1C0780BD0();
        sub_1C0781D30(v3, v57);
        v32 = (char *)v6;
        goto LABEL_18;
      }
      sub_1C0784B30(v3, &qword_1ED744AC0);
      sub_1C079E690(v6);
      v32 = (char *)v6;
    }
    else
    {
      sub_1C07B48A0();
      v54 = sub_1C07967D8();
      v55 = sub_1C077AEEC(v4, 1, v54);
      v47 = v86;
      if (!v52)
      {
        sub_1C106EDA0();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 8))(v4, v54);
        v32 = (char *)v2;
        goto LABEL_18;
      }
      sub_1C077F328(v55, &qword_1ED744AC0);
      sub_1C079E690(v2);
      v32 = (char *)v2;
    }
LABEL_19:
    v59 = v83;
    v58 = v84;
    v60 = v82;
    v61 = v1;
    v62 = v87;
    goto LABEL_20;
  }
  v75 = v25;
  sub_1C1070DF8();
  sub_1C0775BE4();
  sub_1C0797524();
  v45 = sub_1C1070E4C() & ~(-1 << *(_BYTE *)(v43 + 32));
  sub_1C0781210();
  v47 = v86;
  if ((v48 & 1) == 0)
  {
LABEL_8:
    sub_1C077ED08();
    sub_1C07B48A0();
    v51 = sub_1C07967D8();
    sub_1C077AEEC(v5, 1, v51);
    if (!v52)
    {
      sub_1C106ED94();
      sub_1C0780BD0();
      sub_1C0781D30(v5, v56);
LABEL_18:
      v4 = v85;
      goto LABEL_19;
    }
    sub_1C0784B30(v5, &qword_1ED744AC0);
    sub_1C079E690((uint64_t)v32);
    goto LABEL_19;
  }
  v4 = ~v46;
  while (1)
  {
    v49 = (_BYTE *)(*(_QWORD *)(v43 + 48) + 24 * v45);
    if (v49[16] == 2)
    {
      if ((*v49 & 1) == 0)
      {
        sub_1C077ED08();
        sub_1C0781558();
        goto LABEL_35;
      }
      sub_1C0798C60();
      sub_1C078E150();
      if ((&v89 & 1) != 0)
        break;
    }
    sub_1C0791E3C();
    if ((v50 & 1) == 0)
      goto LABEL_8;
  }
  sub_1C077ED08();
LABEL_35:
  v72 = (uint64_t)v75;
  sub_1C07B48A0();
  v73 = sub_1C07967D8();
  sub_1C077AEEC(v72, 1, v73);
  v58 = v84;
  v4 = v85;
  v60 = v82;
  v59 = v83;
  v62 = v87;
  if (v52)
  {
    sub_1C0784B30(v72, &qword_1ED744AC0);
    sub_1C077F140((uint64_t)v32);
  }
  else
  {
    sub_1C106EDA0();
    sub_1C0780BD0();
    sub_1C0781D30(v72, v74);
  }
  v61 = v1;
LABEL_20:
  sub_1C078A6DC((uint64_t)v32, v62, (uint64_t *)&unk_1ED762690);
  sub_1C077CD6C(v62, v47);
  sub_1C077AEEC(v47, 1, v4);
  if (v52)
  {
    sub_1C0784B30(v62, (uint64_t *)&unk_1ED762690);
    sub_1C0784B30(v47, (uint64_t *)&unk_1ED762690);
    goto LABEL_32;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v80 + 32))(v59, v47, v4);
  v63 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v64 = sub_1C0BD04CC(v63);
  sub_1C0AA46D0(v64);
  sub_1C0797FCC();
  v65 = v81;
  if (v61 == 255)
    goto LABEL_27;
  if (v61 != 1)
  {
    sub_1C0785120();
LABEL_27:
    sub_1C07947D4();
    goto LABEL_28;
  }
  sub_1C0795B5C();
LABEL_28:
  sub_1C07A32DC();
  sub_1C106F0A0();
  v66 = sub_1C106EF98();
  v67 = sub_1C0776854(v60);
  if (v52)
  {
    sub_1C078A02C(v67, &qword_1EF641D18);
    v71 = 0xE700000000000000;
    v69 = 0x6E776F6E6B6E75;
  }
  else
  {
    v68 = v76;
    sub_1C106EF8C();
    sub_1C078303C(v60, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 8));
    v69 = sub_1C106D0FC();
    v71 = v70;
    (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v68, v78);
  }
  sub_1C078D7F0(v58);
  sub_1C078D7F0(v59);
  sub_1C0784B30(v87, (uint64_t *)&unk_1ED762690);
  sub_1C07AA038();
  sub_1C077B5BC();
  sub_1C0B70A9C(v65, 6, v69, v71, MEMORY[0x1E0DEE9D8]);
LABEL_32:
  sub_1C07757D0();
}

BOOL sub_1C0BD0480(uint64_t a1, uint64_t a2)
{
  return sub_1C0BCE360(a1, a2, (uint64_t)&unk_1E79FC940, &qword_1EF62DFE8, &qword_1EF641D10, (uint64_t)sub_1C0BCFE74);
}

void sub_1C0BD04B8()
{
  sub_1C0BCFE98();
}

uint64_t sub_1C0BD04CC(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  uint64_t v2;

  if ((*(_BYTE *)(isStackAllocationSafe + 32) & 0x3Fu) > 0xD)
  {
    isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if ((isStackAllocationSafe & 1) == 0)
    {
      sub_1C0775854();
      sub_1C078ACF0();
      sub_1C079E6A4();
      sub_1C077AF1C();
      sub_1C0776778();
    }
  }
  MEMORY[0x1E0C80A78](isStackAllocationSafe);
  sub_1C078ACF0();
  v2 = sub_1C079E6A4();
  sub_1C077AF1C();
  if (v1)
    swift_willThrow();
  return v2;
}

uint64_t sub_1C0BD05EC(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 != -1)
    return sub_1C0834F2C(a1, a2, a3);
  return a1;
}

void sub_1C0BD0600(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;

  sub_1C07A28AC();
  if ((v7 & v6) != 0)
    goto LABEL_13;
  if ((unint64_t)(v5 + 63) >> 6 <= 1)
    goto LABEL_14;
  if (v3[1])
    goto LABEL_13;
  if ((unint64_t)(v5 + 63) >> 6 <= 2)
    goto LABEL_14;
  if (v3[2])
    goto LABEL_13;
  if ((unint64_t)(v5 + 63) >> 6 <= 3)
    goto LABEL_14;
  if (v3[3])
    goto LABEL_13;
  v8 = 4;
  if ((unint64_t)(v5 + 63) >> 6 <= 4)
    goto LABEL_14;
  if (v3[4])
  {
LABEL_13:
    sub_1C07B8518();
    __asm { BR              X9 }
  }
  while (1)
  {
    v9 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      JUMPOUT(0x1C0BD084CLL);
    }
    if (v9 >= (uint64_t)((unint64_t)(v5 + 63) >> 6))
      break;
    ++v8;
    if (v3[v9])
      goto LABEL_13;
  }
LABEL_14:
  swift_retain();
  sub_1C0C884A8(a1, a2, 0, a3);
  sub_1C0793708();
}

void sub_1C0BD086C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;

  sub_1C07A28AC();
  if ((v7 & v6) != 0)
    goto LABEL_13;
  if ((unint64_t)(v5 + 63) >> 6 <= 1)
    goto LABEL_14;
  if (v3[1])
    goto LABEL_13;
  if ((unint64_t)(v5 + 63) >> 6 <= 2)
    goto LABEL_14;
  if (v3[2])
    goto LABEL_13;
  if ((unint64_t)(v5 + 63) >> 6 <= 3)
    goto LABEL_14;
  if (v3[3])
    goto LABEL_13;
  v8 = 4;
  if ((unint64_t)(v5 + 63) >> 6 <= 4)
    goto LABEL_14;
  if (v3[4])
  {
LABEL_13:
    sub_1C07B8518();
    __asm { BR              X9 }
  }
  while (1)
  {
    v9 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      JUMPOUT(0x1C0BD0AB8);
    }
    if (v9 >= (uint64_t)((unint64_t)(v5 + 63) >> 6))
      break;
    ++v8;
    if (v3[v9])
      goto LABEL_13;
  }
LABEL_14:
  swift_retain();
  sub_1C0C884A8(a1, a2, 0, a3);
  sub_1C0793708();
}

unint64_t sub_1C0BD0AD8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED754908;
  if (!qword_1ED754908)
  {
    v1 = sub_1C07D4BEC(&qword_1ED754910);
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0D3D3F8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED754908);
  }
  return result;
}

uint64_t type metadata accessor for LifeEventInteractionSourceAdapter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0802884(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LifeEventInteractionSourceAdapter);
}

uint64_t sub_1C0BD0B2C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_1C0BCECF0(a1, v2[5], v2[6], v2[2], v2[4], a2);
}

uint64_t sub_1C0BD0B4C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1C093F538(*a1, a2);
}

uint64_t sub_1C0BD0B54()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0BD0B78@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1C0BD0B4C((uint64_t *)(v1 + 16), a1);
}

uint64_t sub_1C0BD0B80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (a1)
  {
    v2 = a1;
  }
  else
  {
    sub_1C07ACF80(&qword_1ED75D328);
    v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1C1079220;
    v3 = type metadata accessor for StoredLocationVisitSignal();
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = 0;
    *(_QWORD *)(v4 + 24) = 0;
    *(_QWORD *)(v2 + 56) = v3;
    sub_1C0BCC618(&qword_1ED75C620, 255, (void (*)(uint64_t))type metadata accessor for StoredLocationVisitSignal);
    *(_QWORD *)(v2 + 64) = v5;
    *(_QWORD *)(v2 + 32) = v4;
  }
  *(_QWORD *)(v1 + 16) = v2;
  return v1;
}

uint64_t sub_1C0BD0C34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[6];

  v2 = *(_QWORD *)(v1 + 16);
  v6[2] = a1;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0BCA124((uint64_t)sub_1C0BCC560, (uint64_t)v6, v2);
  v4 = v3;
  swift_bridgeObjectRelease();
  v6[3] = v4;
  v6[4] = sub_1C0A5C168;
  v6[5] = 0;
  swift_retain();
  sub_1C07ACF80((uint64_t *)&unk_1ED74C140);
  sub_1C07ACF80(&qword_1ED74AFD0);
  sub_1C07BB218(&qword_1ED74C138, (uint64_t *)&unk_1ED74C140);
  return sub_1C1070C00();
}

uint64_t sub_1C0BD0D18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1C0BD0D34()
{
  uint64_t v0;

  sub_1C0BD0D5C(*(_QWORD **)(v0 + 24), *(_QWORD *)(v0 + 16));
  return sub_1C077CF28(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0BD0D5C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[32];
  uint64_t v16[4];
  _BYTE __src[80];

  v4 = sub_1C106ADE0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C07A9480(a1, a1[3]);
  v16[3] = swift_getAssociatedTypeWitness();
  sub_1C07B3E30(v16);
  sub_1C0799E64();
  sub_1C07A3C90();
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1C0BCC6D8((uint64_t)__src);
    sub_1C07A3C90();
    swift_dynamicCast();
    v8 = a1[3];
    v9 = a1[4];
    sub_1C07A9480(a1, v8);
    (*(void (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9);
    sub_1C07A9480(a1, a1[3]);
    v10 = sub_1C07ACF80(&qword_1ED74AFD0);
    sub_1C0799E64();
    memcpy((void *)(a2 + *(int *)(v10 + 32)), __src, 0x50uLL);
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v5 + 32))(a2, v7, v4);
    v11 = a2;
    v12 = 0;
    v13 = v10;
  }
  else
  {
    v13 = sub_1C07ACF80(&qword_1ED74AFD0);
    v11 = a2;
    v12 = 1;
  }
  sub_1C07B2D8C(v11, v12, 1, v13);
  return _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v16);
}

uint64_t type metadata accessor for LifeEventLocationProvider()
{
  return objc_opt_self();
}

uint64_t sub_1C0BD0F60()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C0BD0F70(uint64_t a1)
{
  return sub_1C0BD0C34(a1);
}

void sub_1C0BD0F90(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  sub_1C0BCC618(&qword_1ED75C560, a2, (void (*)(uint64_t))type metadata accessor for LifeEventLocationProvider);
  *(_QWORD *)(a1 + 8) = v3;
}

uint64_t sub_1C0BD0FCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1C0928A6C;
  return sub_1C0BD0D18(a1, a2, v2);
}

void sub_1C0BD1030()
{
  sub_1C07BB218(&qword_1ED74CC90, &qword_1ED74CC98);
}

uint64_t sub_1C0BD105C(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  *(_QWORD *)(v3 + 96) = a1;
  *(_QWORD *)(v3 + 104) = v2;
  type metadata accessor for Fuser();
  *(_QWORD *)(v3 + 112) = sub_1C079888C();
  type metadata accessor for Linker();
  *(_QWORD *)(v3 + 120) = sub_1C079888C();
  *(_QWORD *)(v3 + 128) = type metadata accessor for Source();
  *(_QWORD *)(v3 + 136) = sub_1C0786414();
  *(_QWORD *)(v3 + 144) = swift_task_alloc();
  type metadata accessor for PhaseStores();
  *(_QWORD *)(v3 + 152) = sub_1C0786414();
  *(_QWORD *)(v3 + 160) = swift_task_alloc();
  v5 = *(_QWORD *)(type metadata accessor for Configuration() - 8);
  *(_QWORD *)(v3 + 168) = v5;
  *(_QWORD *)(v3 + 176) = *(_QWORD *)(v5 + 64);
  *(_QWORD *)(v3 + 184) = sub_1C079888C();
  *(_BYTE *)(v3 + 233) = *a2;
  return swift_task_switch();
}

void sub_1C0BD112C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v1 = *(unsigned __int8 *)(v0 + 233);
  v2 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 168);
  sub_1C0799E70();
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = swift_allocObject();
  *(_QWORD *)(v0 + 192) = v5;
  sub_1C07E05F4(v2, v5 + v4, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  type metadata accessor for LifeEventDeltaDateRangeProvider();
  v6 = sub_1C0788000();
  *(_QWORD *)(v0 + 200) = v6;
  *(_QWORD *)(v6 + 16) = sub_1C0BD1790;
  *(_QWORD *)(v6 + 24) = v5;
  type metadata accessor for LifeEventProvider();
  sub_1C0799E70();
  swift_retain();
  swift_retain();
  v7 = sub_1C0BD17D8(v2);
  type metadata accessor for LifeEventDeltaProvider();
  v8 = sub_1C0788000();
  *(_QWORD *)(v0 + 208) = v8;
  *(_QWORD *)(v8 + 16) = v6;
  *(_QWORD *)(v8 + 24) = v7;
  __asm { BR              X9 }
}

uint64_t sub_1C0BD1240()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v4 = sub_1C1070CB4();
  swift_bridgeObjectRelease();
  if ((v4 & 1) != 0)
  {
    sub_1C07E05C8(*(_QWORD *)(v2 + 96), *(_QWORD *)(v2 + 160), (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
    v5 = *(_QWORD *)(v3 + 1096);
    swift_retain();
    if (v5 != -1)
      swift_once();
    v6 = *(_QWORD *)(v2 + 160);
    v7 = sub_1C079E000(*(_QWORD *)(v2 + 128), (uint64_t)&unk_1ED762E88);
    v8 = (int *)type metadata accessor for LifeEventDeltaSourceIngestor(0);
    *(_QWORD *)(v2 + 40) = v8;
    sub_1C0794BAC(&qword_1ED74C7F0, type metadata accessor for LifeEventDeltaSourceIngestor, (uint64_t)&unk_1C10A6B88);
    v10 = sub_1C078F870(v9);
    sub_1C07E05C8(v7, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    *((_BYTE *)v10 + v8[5]) = 2;
    sub_1C07E05F4(v6, (uint64_t)v10 + v8[6], (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
    *(uint64_t *)((char *)v10 + v8[7]) = v1;
  }
  else
  {
    sub_1C07E05C8(*(_QWORD *)(v2 + 96), *(_QWORD *)(v2 + 160), (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
    *(_QWORD *)(v2 + 40) = type metadata accessor for LifeEventSourceIngestor(0);
    sub_1C0794BAC(&qword_1ED750EF0, type metadata accessor for LifeEventSourceIngestor, (uint64_t)&unk_1C10A6BA4);
    sub_1C078F870(v11);
    sub_1C0BD4508();
  }
  sub_1C07E05C8(*(_QWORD *)(v2 + 96), *(_QWORD *)(v2 + 160), (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  if (*(_QWORD *)(v3 + 1096) != -1)
    swift_once();
  v12 = *(_BYTE *)(v2 + 233);
  v14 = *(_QWORD *)(v2 + 144);
  v13 = *(_QWORD *)(v2 + 152);
  v15 = *(_QWORD *)(v2 + 136);
  v16 = *(_QWORD *)(v2 + 96);
  v17 = sub_1C079E000(*(_QWORD *)(v2 + 128), (uint64_t)&unk_1ED762E88);
  *(_QWORD *)(v2 + 216) = v17;
  sub_1C07E05C8(v17, v14, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C07D6D1C(v0, v2 + 56);
  sub_1C07E05C8(v17, v15, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C07E05C8(v16, v13, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  *(_BYTE *)(v2 + 232) = v12;
  v18 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 224) = v18;
  *v18 = v2;
  v18[1] = sub_1C0BD14C4;
  return Linker.init(source:stores:pipelineType:)(*(_QWORD *)(v2 + 120), *(_QWORD *)(v2 + 136), *(_QWORD *)(v2 + 152), (_BYTE *)(v2 + 232));
}

uint64_t sub_1C0BD14C4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1C0BD1518()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v1 = *(_BYTE *)(v0 + 233);
  v2 = *(_QWORD *)(v0 + 152);
  v15 = *(_QWORD *)(v0 + 160);
  v13 = *(_QWORD *)(v0 + 120);
  v14 = *(_QWORD *)(v0 + 144);
  v11 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  v12 = *(_QWORD *)(v0 + 104);
  sub_1C07E05C8(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 136), (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C07E05C8(v3, v2, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  Fuser.init(source:stores:pipelineType:)();
  swift_release();
  swift_release();
  swift_release();
  sub_1C08937CC(v3);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 16);
  v16 = v1;
  v4 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 88);
  v6 = sub_1C079D180(v0 + 56, v4);
  v7 = *(_QWORD *)(v4 - 8);
  v8 = sub_1C079888C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v8, v6, v4);
  v9 = sub_1C0CD00A4(v15, v14, v8, v13, v11, &v16, v12, v4, v5);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 56);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v9);
}

void sub_1C0BD16B4()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1C0BD16E0()
{
  return type metadata accessor for LifeEventPhase();
}

uint64_t type metadata accessor for LifeEventPhase()
{
  uint64_t result;

  result = qword_1ED75AB58;
  if (!qword_1ED75AB58)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C0BD1720()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Configuration() - 8) + 80);
  v2 = v0 + ((v1 + 16) & ~v1);
  v3 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return swift_deallocObject();
}

uint64_t sub_1C0BD1790@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Configuration() - 8) + 80);
  return sub_1C0BCC7CC(v1 + ((v3 + 16) & ~v3), a1);
}

_QWORD *sub_1C0BD17D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  void *v9;
  uint64_t (*v10)();
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[5];
  __int128 v25[2];
  _QWORD v26[5];

  v2 = type metadata accessor for Configuration();
  MEMORY[0x1E0C80A78](v2);
  sub_1C0778564();
  v5 = v4 - v3;
  sub_1C07A896C();
  if ((static NSUserDefaults.mockLifeEvents.getter() & 1) != 0)
  {
    v6 = type metadata accessor for LifeEventActivityProviderDemo();
    v7 = sub_1C0778598();
    v8 = (unint64_t *)&unk_1EF641DF8;
    v9 = &unk_1C10A65EC;
    v10 = type metadata accessor for LifeEventActivityProviderDemo;
  }
  else
  {
    sub_1C0845A4C(a1, v5, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    v6 = type metadata accessor for LifeEventActivityProvider();
    sub_1C0778598();
    v7 = LifeEventActivityProvider.init(config:activitySignals:)(v5, 0);
    v8 = (unint64_t *)&unk_1ED75C490;
    v9 = &unk_1C10A63B0;
    v10 = type metadata accessor for LifeEventActivityProvider;
  }
  sub_1C0794BAC(v8, (uint64_t (*)(uint64_t))v10, (uint64_t)v9);
  v26[3] = v6;
  v26[4] = v11;
  v26[0] = v7;
  v12 = type metadata accessor for LifeEventLocationProvider();
  sub_1C0778598();
  v13 = sub_1C0BD0B80(0);
  sub_1C0784AC0((uint64_t)v26, (uint64_t)v25);
  v24[3] = v12;
  sub_1C0794BAC(&qword_1ED75C568, (uint64_t (*)(uint64_t))type metadata accessor for LifeEventLocationProvider, (uint64_t)&unk_1C10A6808);
  v15 = v14;
  v24[4] = v14;
  v24[0] = v13;
  type metadata accessor for LifeEventProvider();
  v16 = (_QWORD *)sub_1C0778598();
  v17 = sub_1C079D180((uint64_t)v24, v12);
  MEMORY[0x1E0C80A78](v17);
  sub_1C0778564();
  v20 = (uint64_t *)(v19 - v18);
  (*(void (**)(uint64_t))(v21 + 16))(v19 - v18);
  v22 = *v20;
  v16[5] = v12;
  v16[6] = v15;
  v16[2] = v22;
  sub_1C077DD60(v25, (uint64_t)(v16 + 7));
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v24);
  sub_1C078D09C(a1);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v26);
  return v16;
}

uint64_t sub_1C0BD19D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1C0B9E1E0(v1, a1);
}

uint64_t sub_1C0BD19E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  _BYTE *v15;
  _BYTE *v16;
  __int128 v17[2];
  __int128 v18;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v21[5];
  _BYTE v22[40];

  v6 = v2[5];
  v7 = v2[6];
  sub_1C07A9480(v2 + 2, v6);
  v8 = *(_QWORD *)(v7 + 8);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24);
  v21[3] = swift_getAssociatedTypeWitness();
  v21[4] = swift_getAssociatedConformanceWitness();
  sub_1C07B3E30(v21);
  v9(a1, v6, v8);
  if (v3)
    return sub_1C0A0A6A4((uint64_t)v21);
  sub_1C07ACF80(&qword_1ED74BE50);
  sub_1C07ACF80(&qword_1ED74BE48);
  if (sub_1C07AE988())
  {
    sub_1C077DD60(&v18, (uint64_t)v22);
    v12 = v2[10];
    v11 = v2[11];
    sub_1C07A9480(v2 + 7, v12);
    v13 = *(_QWORD *)(v11 + 8);
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 24);
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    sub_1C07B3E30((uint64_t *)&v18);
    v14(a1, v12, v13);
    sub_1C07ACF80(&qword_1ED74BE40);
    if ((sub_1C07AE988() & 1) != 0)
    {
      sub_1C077DD60(v17, (uint64_t)v21);
      sub_1C0784AC0((uint64_t)v22, (uint64_t)&v18);
      sub_1C0784AC0((uint64_t)v21, (uint64_t)v17);
      sub_1C0BD1C58(&v18, v17, a2);
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v21);
    }
    else
    {
      sub_1C0BD32C4();
      sub_1C0775810();
      *v16 = 1;
      swift_willThrow();
    }
    return _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v22);
  }
  else
  {
    sub_1C0BD32C4();
    sub_1C0775810();
    *v15 = 0;
    return swift_willThrow();
  }
}

uint64_t sub_1C0BD1C58@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v13;
  void *v14;
  uint64_t __src[11];

  __src[10] = MEMORY[0x1E0DEE9D8];
  v5 = sub_1C07AD758(a1);
  MEMORY[0x1E0C80A78](v5);
  sub_1C07967E0(v6, v7, a3);
  __src[3] = sub_1C07B7398();
  __src[4] = sub_1C0785130();
  sub_1C07B3E30(__src);
  sub_1C1070150();
  v8 = sub_1C07AD758(a2);
  MEMORY[0x1E0C80A78](v8);
  sub_1C07967E0(v9, v10, v13);
  __src[8] = sub_1C07B7398();
  __src[9] = sub_1C0785130();
  sub_1C07B3E30(&__src[5]);
  sub_1C1070150();
  memcpy(v14, __src, 0x58uLL);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)a2);
  return _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)a1);
}

uint64_t type metadata accessor for LifeEventProvider()
{
  return objc_opt_self();
}

uint64_t destroy for LifeEventProviderAsyncSequence(uint64_t a1)
{
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(a1);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(a1 + 40);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LifeEventProviderAsyncSequence(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

uint64_t *assignWithCopy for LifeEventProviderAsyncSequence(uint64_t *a1, uint64_t *a2)
{
  sub_1C07E6484(a1, a2);
  sub_1C07E6484(a1 + 5, a2 + 5);
  a1[10] = a2[10];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for LifeEventProviderAsyncSequence(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v5 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LifeEventProviderAsyncSequence(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 88))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LifeEventProviderAsyncSequence(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LifeEventProviderAsyncSequence()
{
  return &type metadata for LifeEventProviderAsyncSequence;
}

uint64_t sub_1C0BD1FA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0BD19E4(a1, a2);
}

uint64_t sub_1C0BD1FC0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[10] = a1;
  v2[11] = v1;
  v2[12] = type metadata accessor for SourceIdPrefix();
  v2[13] = sub_1C0779644();
  v3 = sub_1C106ADE0();
  v2[14] = v3;
  v2[15] = *(_QWORD *)(v3 - 8);
  v2[16] = sub_1C0775870();
  v2[17] = sub_1C0775870();
  sub_1C07ACF80(&qword_1ED74AFD8);
  v2[18] = sub_1C0779644();
  v4 = sub_1C07ACF80(&qword_1ED74AFD0);
  v2[19] = v4;
  v2[20] = *(_QWORD *)(v4 - 8);
  v2[21] = sub_1C0775870();
  v2[22] = sub_1C0775870();
  v2[23] = sub_1C0775870();
  v2[24] = sub_1C0775870();
  v2[25] = sub_1C0775870();
  v2[26] = sub_1C0775870();
  v2[27] = sub_1C0775870();
  v2[28] = sub_1C0775870();
  v2[29] = sub_1C0775870();
  sub_1C07ACF80(&qword_1ED74AFA0);
  v2[30] = sub_1C0779644();
  v2[31] = sub_1C07ACF80(&qword_1ED74AF90);
  v2[32] = sub_1C0775870();
  v2[33] = sub_1C0775870();
  v2[34] = sub_1C0775870();
  v2[35] = sub_1C0775870();
  return sub_1C077AEC4();
}

uint64_t sub_1C0BD2114()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  sub_1C079D180(v0[11] + 40, *(_QWORD *)(v0[11] + 64));
  v0[36] = sub_1C078DEC0();
  v1 = sub_1C1070564();
  v0[37] = v1;
  v0[38] = *(_QWORD *)(v1 - 8);
  v0[39] = sub_1C0779644();
  v2 = (_QWORD *)swift_task_alloc();
  v0[40] = v2;
  sub_1C077F61C(v2);
  return sub_1C1070078();
}

uint64_t sub_1C0BD21B8()
{
  void *v0;

  sub_1C077B0C8();
  sub_1C07862EC();
  if (v0)

  return sub_1C077AEC4();
}

uint64_t sub_1C0BD2208()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  uint64_t (*v8)(void);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v1 = v0[36];
  if (sub_1C07B2D80(v0[39], 1, v1) == 1)
  {
    sub_1C077B158(v0[38]);
    sub_1C07767BC();
    sub_1C077A2C4(v0[30], v2, v3, v0[31]);
LABEL_5:
    sub_1C0784B94(v0[30], &qword_1ED74AFA0);
    sub_1C07ACF80(&qword_1ED74AFB8);
    sub_1C07A8104();
    sub_1C07B2D8C(v0[10], 1, 1, v7);
    sub_1C0786388();
    sub_1C0779D20();
    sub_1C07767BC();
    sub_1C07796F8();
    sub_1C07758BC();
    sub_1C0779D18();
    sub_1C077C104();
    swift_task_dealloc();
    sub_1C0778638();
    sub_1C077C830();
    sub_1C077C27C();
    sub_1C077C828();
    sub_1C0778744();
    sub_1C07819BC();
    sub_1C0780AA8();
    sub_1C07806D8();
    sub_1C077F164();
    swift_task_dealloc();
    v8 = (uint64_t (*)(void))sub_1C0779830();
    return v8();
  }
  v0[5] = v1;
  sub_1C07B3E30(v0 + 2);
  sub_1C0797FE0(v4);
  sub_1C07767BC();
  v5 = sub_1C079D674();
  sub_1C0797538(v5);
  if (v6)
    goto LABEL_5;
  v10 = v0[11];
  sub_1C078A6A8(v0[30], v0[35], &qword_1ED74AF90);
  v11 = *(_QWORD *)(v10 + 80);
  v12 = *(_QWORD *)(v11 + 16);
  if (v12)
  {
    v13 = v0[20];
    v49 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    v14 = v11 + v49;
    v15 = *(_QWORD *)(v13 + 72);
    v47 = v10;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v16 = MEMORY[0x1E0DEE9D8];
    v48 = MEMORY[0x1E0DEE9D8];
    v50 = v15;
    while (1)
    {
      v51 = v12;
      v18 = v0[34];
      v17 = v0[35];
      v20 = v0[28];
      v19 = v0[29];
      sub_1C079C720(v14, v19);
      sub_1C0794BAC((unint64_t *)&qword_1ED755A40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
      v21 = sub_1C106FA6C();
      sub_1C0845A78(v17, v18, &qword_1ED74AF90);
      sub_1C079C720(v19, v20);
      v22 = v0[34];
      v23 = v0[28];
      if ((v21 & 1) != 0)
      {
        sub_1C0791E58(v0[28]);
        sub_1C078D7F8(v22);
      }
      else
      {
        v24 = sub_1C106FA6C();
        sub_1C0791E58(v23);
        sub_1C078D7F8(v22);
        if ((v24 & 1) == 0)
        {
          sub_1C079C720(v0[29], v0[27]);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          {
            v30 = v48;
          }
          else
          {
            sub_1C07EAEB0();
            v30 = v39;
          }
          v31 = *(_QWORD *)(v30 + 16);
          if (v31 >= *(_QWORD *)(v30 + 24) >> 1)
          {
            sub_1C07EAEB0();
            v30 = v40;
          }
          v32 = v0[29];
          v34 = v0[26];
          v33 = v0[27];
          *(_QWORD *)(v30 + 16) = v31 + 1;
          v48 = v30;
          v35 = v30 + v49 + v31 * v50;
          v25 = v50;
          sub_1C078A6A8(v33, v35, &qword_1ED74AFD0);
          sub_1C079C720(v32, v34);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C07A00A4();
            v16 = v41;
          }
          v26 = v51;
          v27 = *(_QWORD *)(v16 + 16);
          v28 = v27 + 1;
          if (v27 >= *(_QWORD *)(v16 + 24) >> 1)
          {
            sub_1C07A00A4();
            v16 = v42;
          }
          v29 = v0 + 26;
          goto LABEL_26;
        }
      }
      v25 = v50;
      v26 = v51;
      if ((sub_1C106AD44() & 1) != 0)
      {
        sub_1C079C720(v0[29], v0[25]);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C07A00A4();
          v16 = v37;
        }
        v27 = *(_QWORD *)(v16 + 16);
        v28 = v27 + 1;
        if (v27 >= *(_QWORD *)(v16 + 24) >> 1)
        {
          sub_1C07A00A4();
          v16 = v38;
        }
        v29 = v0 + 25;
LABEL_26:
        v36 = *v29;
        *(_QWORD *)(v16 + 16) = v28;
        sub_1C078A6A8(v36, v16 + v49 + v27 * v25, &qword_1ED74AFD0);
      }
      sub_1C0791E58(v0[29]);
      v14 += v25;
      v12 = v26 - 1;
      if (!v12)
      {
        swift_bridgeObjectRelease();
        v10 = v47;
        v43 = v48;
        goto LABEL_31;
      }
    }
  }
  v43 = MEMORY[0x1E0DEE9D8];
  v16 = MEMORY[0x1E0DEE9D8];
LABEL_31:
  swift_bridgeObjectRelease();
  *(_QWORD *)(v10 + 80) = v16;
  v0[41] = v43;
  sub_1C07865FC();
  v44 = sub_1C078DEC0();
  v45 = sub_1C079DD4C(v44);
  v0[43] = v45;
  v0[44] = *(_QWORD *)(v45 - 8);
  v0[45] = sub_1C0779644();
  v46 = (_QWORD *)swift_task_alloc();
  v0[46] = (uint64_t)v46;
  sub_1C077F61C(v46);
  return sub_1C1070078();
}

uint64_t sub_1C0BD2708()
{
  void *v0;

  sub_1C077B0C8();
  sub_1C07862EC();
  if (v0)

  return sub_1C077AEC4();
}

uint64_t sub_1C0BD2758()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  char v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(void);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;

  v3 = v0[42];
  if (sub_1C07B2D80(v0[45], 1, v3) != 1)
  {
    v0[9] = v3;
    sub_1C07B3E30(v0 + 6);
    sub_1C0797FE0(v6);
    sub_1C07767BC();
    v7 = sub_1C079D674();
    sub_1C0797538(v7);
    if (v8)
      goto LABEL_5;
    v42 = v0[35];
    v43 = v0[33];
    v45 = v0[23];
    v44 = v0[24];
    v2 = &qword_1ED74AFD0;
    sub_1C078A6A8(v0[18], v44, &qword_1ED74AFD0);
    sub_1C0794BAC((unint64_t *)&qword_1ED755A40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
    v46 = sub_1C106FA6C();
    sub_1C0845A78(v42, v43, &qword_1ED74AF90);
    sub_1C0845A78(v44, v45, &qword_1ED74AFD0);
    v47 = v0[33];
    v48 = v0[23];
    if ((v46 & 1) != 0)
    {
      sub_1C0784B94(v0[23], &qword_1ED74AFD0);
      sub_1C0784B94(v47, &qword_1ED74AF90);
    }
    else
    {
      v49 = sub_1C106FA6C();
      sub_1C0784B94(v48, &qword_1ED74AFD0);
      sub_1C0784B94(v47, &qword_1ED74AF90);
      if ((v49 & 1) == 0)
      {
        v55 = v0[11];
        sub_1C0845A78(v0[24], v0[22], &qword_1ED74AFD0);
        v56 = *(_QWORD *)(v55 + 80);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C0791384();
          v56 = v73;
        }
        v57 = *(_QWORD *)(v56 + 16);
        if (v57 >= *(_QWORD *)(v56 + 24) >> 1)
        {
          sub_1C0791384();
          v56 = v74;
        }
        v58 = v0[24];
        v60 = v0[21];
        v59 = v0[22];
        v61 = v0[20];
        v62 = v0[11];
        *(_QWORD *)(v56 + 16) = v57 + 1;
        v63 = (*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
        v64 = *(_QWORD *)(v61 + 72);
        sub_1C078A6A8(v59, v56 + v63 + v64 * v57, &qword_1ED74AFD0);
        *(_QWORD *)(v62 + 80) = v56;
        sub_1C0845A78(v58, v60, &qword_1ED74AFD0);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v66 = v0[41];
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1C0791384();
          v66 = v75;
        }
        v67 = *(_QWORD *)(v66 + 16);
        if (v67 >= *(_QWORD *)(v66 + 24) >> 1)
        {
          sub_1C0791384();
          v66 = v76;
        }
        v68 = v0[24];
        v69 = v0[21];
        *(_QWORD *)(v66 + 16) = v67 + 1;
        sub_1C078A6A8(v69, v66 + v63 + v67 * v64, &qword_1ED74AFD0);
        sub_1C0784B94(v68, &qword_1ED74AFD0);
        v0[41] = v66;
        goto LABEL_24;
      }
    }
    v50 = sub_1C106AD44();
    v51 = v0[24];
    if ((v50 & 1) != 0)
    {
      v52 = v0[20];
      v53 = v0[11];
      sub_1C07E9DF8();
      v54 = *(_QWORD *)(*(_QWORD *)(v53 + 80) + 16);
      sub_1C07EA4D8();
      v1 = *(_QWORD *)(v53 + 80);
      *(_QWORD *)(v1 + 16) = v54 + 1;
      sub_1C0845A78(v51, v1+ ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))+ *(_QWORD *)(v52 + 72) * v54, &qword_1ED74AFD0);
      *(_QWORD *)(v53 + 80) = v1;
      v9 = v51;
      v10 = &qword_1ED74AFD0;
      goto LABEL_6;
    }
    sub_1C0784B94(v0[24], &qword_1ED74AFD0);
LABEL_24:
    sub_1C07865FC();
    v70 = sub_1C078DEC0();
    v71 = sub_1C079DD4C(v70);
    v0[43] = v71;
    v0[44] = *(_QWORD *)(v71 - 8);
    v0[45] = sub_1C0779644();
    v72 = (_QWORD *)swift_task_alloc();
    v0[46] = (uint64_t)v72;
    sub_1C077F61C(v72);
    return sub_1C1070078();
  }
  sub_1C077B158(v0[44]);
  sub_1C07767BC();
  sub_1C077A2C4(v0[18], v4, v5, v0[19]);
LABEL_5:
  v9 = v0[18];
  v10 = (uint64_t *)&unk_1ED74AFD8;
LABEL_6:
  sub_1C0784B94(v9, v10);
  sub_1C078F87C();
  sub_1C07B428C();
  sub_1C0794BAC((unint64_t *)&qword_1ED7565B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
  sub_1C07A26C4();
  sub_1C07ADF2C();
  sub_1C07A26C4();
  sub_1C07A4930();
  sub_1C0775834();
  sub_1C07ADF2C();
  sub_1C07947E8();
  sub_1C07A4930();
  sub_1C0775834();
  sub_1C079F690();
  v11 = sub_1C07A8124();
  sub_1C07AEFCC(v11, v12, &qword_1ED74AF90);
  if (qword_1ED749C90 != -1)
    swift_once();
  v13 = sub_1C07A5558();
  v14 = sub_1C079E000(v13, (uint64_t)&qword_1ED78C390);
  sub_1C0845A4C(v14, (uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
  sub_1C0791E58(v1);
  v15 = sub_1C07ACF80(&qword_1ED74AFB8);
  v23 = sub_1C079AD34(v15, v16, v17, v18, v19, v20, v21, v22, v77, v80, v83, v86, v89, v92, v95, v98, v100, v101);
  sub_1C07BC8D0(v23);
  v24 = sub_1C07A32EC();
  v32 = sub_1C07A1E7C(v24, v25, v26, v27, v28, v29, v30, v31, v78, v81, v84, v87, v90, v93, v96);
  sub_1C07930F4(v32, v33, v34, v35, v36, v37, v38, v39, v79, v82, v85, v88, v91, v94, v97, v99);
  sub_1C07A6F50();
  sub_1C07796F8();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C0778638();
  sub_1C0786388();
  sub_1C0779D20();
  sub_1C0779908();
  sub_1C0786390();
  sub_1C077C830();
  sub_1C077C27C();
  sub_1C077C828();
  sub_1C0778744();
  sub_1C07819BC();
  sub_1C0780AA8();
  sub_1C07806D8();
  sub_1C077F164();
  v40 = (uint64_t (*)(void))sub_1C0779830();
  return sub_1C07A3C38(v40);
}

uint64_t sub_1C0BD2C80()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  swift_task_dealloc();
  sub_1C077A2C4(v0[30], v1, v2, v0[31]);
  sub_1C0784B94(v0[30], &qword_1ED74AFA0);
  sub_1C07ACF80(&qword_1ED74AFB8);
  sub_1C07A8104();
  sub_1C07B2D8C(v0[10], 1, 1, v3);
  sub_1C0786388();
  sub_1C0779D20();
  sub_1C07767BC();
  sub_1C07796F8();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  swift_task_dealloc();
  sub_1C0778638();
  sub_1C0779908();
  sub_1C0786390();
  sub_1C077C830();
  sub_1C077C27C();
  sub_1C077C828();
  sub_1C0778744();
  sub_1C07819BC();
  sub_1C0780AA8();
  sub_1C07806D8();
  v4 = (uint64_t (*)(void))sub_1C0779830();
  return v4();
}

uint64_t sub_1C0BD2D84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(void);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  swift_task_dealloc();
  sub_1C077A2C4(*(_QWORD *)(v0 + 144), v3, v4, *(_QWORD *)(v0 + 152));
  sub_1C0784B94(*(_QWORD *)(v0 + 144), &qword_1ED74AFD8);
  sub_1C078F87C();
  sub_1C07B428C();
  sub_1C0794BAC((unint64_t *)&qword_1ED7565B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
  sub_1C07A26C4();
  sub_1C07ADF2C();
  sub_1C07A26C4();
  sub_1C07A4930();
  sub_1C0775834();
  sub_1C07ADF2C();
  sub_1C07947E8();
  sub_1C07A4930();
  sub_1C0775834();
  sub_1C079F690();
  v5 = sub_1C07A8124();
  sub_1C07AEFCC(v5, v6, &qword_1ED74AF90);
  if (qword_1ED749C90 != -1)
    swift_once();
  v7 = sub_1C07A5558();
  v8 = sub_1C079E000(v7, (uint64_t)&qword_1ED78C390);
  sub_1C0845A4C(v8, v2, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
  sub_1C0791E58(v1);
  v9 = sub_1C07ACF80(&qword_1ED74AFB8);
  v17 = sub_1C079AD34(v9, v10, v11, v12, v13, v14, v15, v16, v36, v39, v42, v45, v48, v51, v54, v57, v59, v60);
  sub_1C07BC8D0(v17);
  v18 = sub_1C07A32EC();
  v26 = sub_1C07A1E7C(v18, v19, v20, v21, v22, v23, v24, v25, v37, v40, v43, v46, v49, v52, v55);
  sub_1C07930F4(v26, v27, v28, v29, v30, v31, v32, v33, v38, v41, v44, v47, v50, v53, v56, v58);
  sub_1C07A6F50();
  sub_1C07796F8();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C0778638();
  sub_1C0786388();
  sub_1C0779D20();
  sub_1C0779908();
  sub_1C0786390();
  sub_1C077C830();
  sub_1C077C27C();
  sub_1C077C828();
  sub_1C0778744();
  sub_1C07819BC();
  sub_1C0780AA8();
  sub_1C07806D8();
  sub_1C077F164();
  v34 = (uint64_t (*)(void))sub_1C0779830();
  return sub_1C07A3C38(v34);
}

uint64_t sub_1C0BD2F00(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;

  v2 = sub_1C07ACF80(&qword_1ED74AFD0);
  MEMORY[0x1E0C80A78](v2);
  sub_1C0778564();
  v6 = v5 - v4;
  v7 = *(_QWORD *)(a1 + 16);
  if (!v7)
    return MEMORY[0x1E0DEE9D8];
  v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v9 = *(_QWORD *)(v3 + 72);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v10 = MEMORY[0x1E0DEE9D8];
  do
  {
    sub_1C0845A78(v8, v6, &qword_1ED74AFD0);
    v11 = v6 + *(int *)(v2 + 32);
    sub_1C0845A78(v11 + 40, (uint64_t)&v20, &qword_1ED74AB38);
    v12 = *((_QWORD *)&v21 + 1);
    sub_1C078D7F8((uint64_t)&v20);
    if (v12)
    {
      v25 = 0;
      v23 = 0u;
      v24 = 0u;
    }
    else
    {
      sub_1C0A51F50(v11, (uint64_t)&v23);
    }
    sub_1C0784B94(v6, &qword_1ED74AFD0);
    if (*((_QWORD *)&v24 + 1))
    {
      v20 = v23;
      v21 = v24;
      v22 = v25;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C078E15C();
        v10 = v17;
      }
      v13 = *(_QWORD *)(v10 + 16);
      if (v13 >= *(_QWORD *)(v10 + 24) >> 1)
      {
        sub_1C078E15C();
        v10 = v18;
      }
      *(_QWORD *)(v10 + 16) = v13 + 1;
      v14 = v10 + 40 * v13;
      v15 = v20;
      v16 = v21;
      *(_QWORD *)(v14 + 64) = v22;
      *(_OWORD *)(v14 + 32) = v15;
      *(_OWORD *)(v14 + 48) = v16;
    }
    else
    {
      sub_1C078D7F8((uint64_t)&v23);
    }
    v8 += v9;
    --v7;
  }
  while (v7);
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1C0BD30CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1C0BD19D8(a1);
  return sub_1C0B9E21C(v1);
}

uint64_t sub_1C0BD30E4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C0B93E94;
  return sub_1C0BD1FC0(a1);
}

uint64_t sub_1C0BD3134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)(v4 + 16) = a4;
  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EF6411A0 + dword_1EF6411A0);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v8;
  *v8 = v4;
  v8[1] = sub_1C0A29DA8;
  return v10(a1, a2, a3);
}

unint64_t sub_1C0BD31BC()
{
  unint64_t result;

  result = qword_1EF641D78;
  if (!qword_1EF641D78)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A68C0, &type metadata for LifeEventProviderAsyncSequence);
    atomic_store(result, (unint64_t *)&qword_1EF641D78);
  }
  return result;
}

unint64_t sub_1C0BD31FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF641D80;
  if (!qword_1EF641D80)
  {
    v1 = sub_1C07D4BEC(&qword_1ED74AFB8);
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for SessionDataComplying<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF641D80);
  }
  return result;
}

unint64_t sub_1C0BD3240(uint64_t a1)
{
  unint64_t result;

  result = sub_1C0BD31BC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0BD3264(uint64_t a1)
{
  unint64_t result;

  result = sub_1C0BD3288();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0BD3288()
{
  unint64_t result;

  result = qword_1EF641DC0;
  if (!qword_1EF641DC0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A6908, &type metadata for LifeEventProviderAsyncSequence);
    atomic_store(result, (unint64_t *)&qword_1EF641DC0);
  }
  return result;
}

unint64_t sub_1C0BD32C4()
{
  unint64_t result;

  result = qword_1EF641DF0;
  if (!qword_1EF641DF0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A6A30, &type metadata for LifeEventProvider.LifeEventProviderError);
    atomic_store(result, (unint64_t *)&qword_1EF641DF0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for LifeEventProvider.LifeEventProviderError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C0BD334C + 4 * byte_1C10A6865[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C0BD3380 + 4 * asc_1C10A6860[v4]))();
}

uint64_t sub_1C0BD3380(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0BD3388(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0BD3390);
  return result;
}

uint64_t sub_1C0BD339C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0BD33A4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C0BD33A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0BD33B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LifeEventProvider.LifeEventProviderError()
{
  return &type metadata for LifeEventProvider.LifeEventProviderError;
}

unint64_t sub_1C0BD33D0()
{
  unint64_t result;

  result = qword_1EF641E00;
  if (!qword_1EF641E00)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A6A08, &type metadata for LifeEventProvider.LifeEventProviderError);
    atomic_store(result, (unint64_t *)&qword_1EF641E00);
  }
  return result;
}

void sub_1C0BD340C()
{
  sub_1C0BD3438();
}

void sub_1C0BD3438()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t (*v6)(_QWORD);
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  NSObject *v41;
  os_log_type_t v42;
  BOOL v43;
  uint8_t *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  NSObject *v71;
  os_log_type_t v72;
  BOOL v73;
  uint64_t (*v74)(_QWORD);
  uint8_t *v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  NSObject *v83;
  os_log_type_t v84;
  BOOL v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  NSObject *v97;
  os_log_type_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t *v130;
  uint64_t v131;
  uint64_t (*v132)(_QWORD);
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138[3];
  uint64_t v139;

  sub_1C0779670();
  v123 = v1;
  v124 = v2;
  v121 = v3;
  v5 = v4;
  v7 = v6;
  v131 = v0;
  v129 = v8;
  sub_1C07ACF80(&qword_1ED75EA10);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v9);
  sub_1C077AE40();
  sub_1C0787A68(v10);
  v11 = sub_1C106D9A8();
  v116 = *(_QWORD *)(v11 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v12);
  sub_1C077AF80();
  v15 = v13 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v109 - v17;
  MEMORY[0x1E0C80A78](v19);
  sub_1C0779728();
  v113 = v20;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v21);
  sub_1C0779728();
  v112 = v22;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v23);
  sub_1C0787A68((uint64_t)&v109 - v24);
  v119 = sub_1C106D9B4();
  v118 = *(_QWORD *)(v119 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v25);
  sub_1C077AE40();
  sub_1C0787A68(v26);
  v27 = sub_1C106F544();
  v133 = *(_QWORD *)(v27 - 8);
  v134 = v27;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v28);
  sub_1C077AF80();
  v31 = v29 - v30;
  MEMORY[0x1E0C80A78](v32);
  sub_1C0779728();
  v127 = v33;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v34);
  sub_1C0779728();
  v122 = v35;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v36);
  sub_1C0779728();
  v126 = v37;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v38);
  v40 = (char *)&v109 - v39;
  sub_1C077C4B0();
  v41 = sub_1C106F538();
  v42 = sub_1C10703A8();
  v43 = os_log_type_enabled(v41, v42);
  v132 = v7;
  v130 = v5;
  v128 = v31;
  v115 = v15;
  v114 = v18;
  if (v43)
  {
    v44 = (uint8_t *)sub_1C0775854();
    v138[0] = sub_1C078C25C();
    *(_DWORD *)v44 = 136315138;
    v135 = v7(0);
    sub_1C07ACF80(v5);
    v45 = sub_1C0781224();
    v135 = sub_1C0BD8768(v45, v46);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    sub_1C07796F0(&dword_1C0771000, v41, v42, "<%s deleting life event(s)>", v44);
    sub_1C0778610();
    sub_1C0776778();
  }

  v133 = *(_QWORD *)(v133 + 8);
  ((void (*)(char *, uint64_t))v133)(v40, v134);
  if (!*(_QWORD *)(v129 + 16))
  {
    v70 = v126;
    sub_1C106F160();
    v71 = sub_1C106F538();
    v72 = sub_1C10703A8();
    v73 = sub_1C0775B94(v72);
    v74 = v132;
    if (v73)
    {
      v75 = (uint8_t *)sub_1C0775854();
      v138[0] = sub_1C078C25C();
      *(_DWORD *)v75 = 136315138;
      v135 = v74(0);
      sub_1C07ACF80(v130);
      v76 = sub_1C0781224();
      v135 = sub_1C0BD8768(v76, v77);
      sub_1C10705AC();
      sub_1C0775894();
      sub_1C07796F0(&dword_1C0771000, v71, v42, "<%s No life events needed to delete>", v75);
      sub_1C0778610();
      sub_1C0776778();
    }

    sub_1C0776ABC(v70);
    goto LABEL_15;
  }
  v139 = MEMORY[0x1E0DEE9E8];
  v110 = v132(0);
  v47 = v131 + *(int *)(v110 + 24);
  v125 = *(int *)(sub_1C078A314() + 24);
  v126 = v47;
  v109 = *(_QWORD *)(v47 + v125);
  swift_retain();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0898DB0();
  v129 = v48;
  sub_1C07ACF80(&qword_1ED75E838);
  sub_1C106E41C();
  sub_1C0789EB4();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C1079220;
  sub_1C106E2B4();
  sub_1C0AA7870();
  v49 = v111;
  sub_1C079B80C(v111);
  v50 = v112;
  sub_1C079B80C(v112);
  v51 = v113;
  sub_1C079B80C(v113);
  v52 = (uint64_t)v114;
  sub_1C079B80C((uint64_t)v114);
  v53 = v115;
  sub_1C079B80C(v115);
  v108 = 0;
  v54 = v117;
  sub_1C106D864();
  sub_1C077B5B4();
  sub_1C07767AC();
  sub_1C077B12C(v53);
  sub_1C077B12C(v52);
  sub_1C077B12C(v51);
  sub_1C077B12C(v50);
  sub_1C077B12C(v49);
  v55 = sub_1C106D2DC();
  v56 = v120;
  v59 = sub_1C077A2C4(v120, v57, v58, v55);
  MEMORY[0x1E0C80A78](v59);
  v107 = &v139;
  v60 = sub_1C0AA4BE8(v54, v56, v121, (uint64_t)(&v109 - 4));
  sub_1C077C2D0(v60, &qword_1ED75EA10);
  (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v54, v119);
  sub_1C07785A8();
  v61 = v122;
  sub_1C106F160();
  v62 = sub_1C106F538();
  v63 = sub_1C1070384();
  if (os_log_type_enabled(v62, v63))
  {
    v64 = sub_1C0775854();
    v138[0] = sub_1C0775854();
    *(_DWORD *)v64 = 136315394;
    v135 = v110;
    sub_1C07ACF80(v130);
    v65 = sub_1C106FB5C();
    v135 = sub_1C0BD8768(v65, v66);
    sub_1C10705AC();
    sub_1C0775834();
    *(_WORD *)(v64 + 12) = 2080;
    sub_1C0775864();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v67 = sub_1C1070228();
    v69 = v68;
    swift_bridgeObjectRelease();
    v137 = sub_1C0788DAC(v67, v69, v138);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0771000, v62, v63, "<%s sourceIds:%s>", (uint8_t *)v64, 0x16u);
    swift_arrayDestroy();
    sub_1C0776778();
  }

  sub_1C0776ABC(v61);
  sub_1C0775864();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0BD5B00();
  v79 = v78;
  v81 = v80;
  sub_1C07767AC();
  sub_1C0778864();
  sub_1C0BD3F64(v79, v81);
  sub_1C07785A8();
  v82 = v127;
  sub_1C106F160();
  sub_1C07767CC();
  sub_1C07767CC();
  v83 = sub_1C106F538();
  v84 = sub_1C10703A8();
  v85 = sub_1C0775B94(v84);
  v129 = v81;
  v123 = v79;
  if (v85)
  {
    v86 = sub_1C078C25C();
    v87 = sub_1C078C25C();
    v122 = v87;
    *(_DWORD *)v86 = 136315650;
    sub_1C07AEFD8(v87);
    v88 = sub_1C106FB5C();
    v136 = sub_1C0788DAC(v88, v89, &v137);
    sub_1C0780BDC();
    sub_1C0775894();
    *(_WORD *)(v86 + 12) = 2048;
    v90 = *(_QWORD *)(v79 + 16);
    sub_1C077B5B4();
    v136 = v90;
    sub_1C0780BDC();
    sub_1C077B5B4();
    *(_WORD *)(v86 + 22) = 2048;
    v91 = *(_QWORD *)(v129 + 16);
    sub_1C077E584();
    v136 = v91;
    sub_1C10705AC();
    sub_1C077E584();
    _os_log_impl(&dword_1C0771000, v83, (os_log_type_t)v54, "<%s Deleted event triples from eventKG: d:%ld, u:%ld>", (uint8_t *)v86, 0x20u);
    sub_1C0778610();
    sub_1C0776778();
  }

  sub_1C07758A4();
  sub_1C07758A4();
  sub_1C0776ABC(v82);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0BD5B00();
  v93 = v92;
  v95 = v94;
  sub_1C077B5B4();
  sub_1C0778864();
  sub_1C08BDBD4(v93, v95);
  sub_1C07785A8();
  v96 = v128;
  sub_1C106F160();
  sub_1C07767CC();
  sub_1C07767CC();
  v97 = sub_1C106F538();
  v98 = sub_1C10703A8();
  if (sub_1C0790D48(v98))
  {
    v99 = sub_1C078C25C();
    v100 = sub_1C078C25C();
    *(_DWORD *)v99 = 136315650;
    sub_1C07AEFD8(v100);
    v101 = sub_1C106FB5C();
    v136 = sub_1C0788DAC(v101, v102, &v137);
    sub_1C0793108();
    sub_1C077E584();
    *(_WORD *)(v99 + 12) = 2048;
    sub_1C07AA438();
    v136 = v96;
    sub_1C0793108();
    swift_bridgeObjectRelease();
    *(_WORD *)(v99 + 22) = 2048;
    v103 = *(_QWORD *)(v95 + 16);
    sub_1C07767AC();
    v136 = v103;
    sub_1C0793108();
    sub_1C07767AC();
    _os_log_impl(&dword_1C0771000, v97, (os_log_type_t)v11, "<%s Deleted triples from stableKG: d:%ld, u:%ld>", (uint8_t *)v99, 0x20u);
    sub_1C0778610();
    sub_1C0776778();
  }

  sub_1C07758A4();
  sub_1C07758A4();
  sub_1C0776ABC(v96);
  v104 = *(_QWORD *)(v123 + 16);
  swift_bridgeObjectRelease();
  sub_1C07AA438();
  if (__OFADD__(v104, v96))
  {
    __break(1u);
  }
  else
  {
    v105 = *(_QWORD *)(v81 + 16);
    sub_1C077E584();
    v106 = *(_QWORD *)(v95 + 16);
    sub_1C07767AC();
    swift_bridgeObjectRelease();
    if (!__OFADD__(v105, v106))
    {
LABEL_15:
      sub_1C0776760();
      return;
    }
  }
  __break(1u);
}

uint64_t sub_1C0BD3F64(uint64_t a1, uint64_t a2)
{
  _QWORD v3[5];
  uint64_t v4;

  v4 = a1;
  v3[2] = &v4;
  v3[3] = a2;
  swift_retain();
  sub_1C077FF50((uint64_t)sub_1C0BD8724, (uint64_t)v3);
  return swift_release();
}

void sub_1C0BD3FC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  int *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, unint64_t, uint64_t);
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  int *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t);
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, unint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;

  v4 = v3;
  v76 = type metadata accessor for ExpiredEventTriple(0);
  MEMORY[0x1E0C80A78](v76);
  v9 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v69 - v11;
  v13 = *(_QWORD *)(a2 + 16);
  v77 = a1;
  if (v13)
  {
    v70 = v9;
    v71 = a3;
    v14 = (int *)type metadata accessor for EventTriple(0);
    v15 = *((_QWORD *)v14 - 1);
    v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    v72 = *(_QWORD *)(v15 + 72);
    v17 = sub_1C106E590();
    v73 = *(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    v74 = v17;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v75 = a2;
    v18 = (int *)v76;
    while (1)
    {
      v79 = v13;
      v80 = v4;
      v78 = v16;
      v19 = a2 + v16;
      v73(v12, a2 + v16, v74);
      v20 = a2 + v16 + v14[5];
      v21 = &v12[v18[5]];
      v22 = sub_1C106E41C();
      v23 = *(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
      v23(v21, v20, v22);
      v24 = v19 + v14[6];
      v25 = &v12[v18[6]];
      v26 = sub_1C106EB24();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v25, v24, v26);
      v23(&v12[v18[7]], v19 + v14[7], v22);
      v27 = (uint64_t *)(v19 + v14[8]);
      v29 = *v27;
      v28 = v27[1];
      v30 = *(_QWORD *)(v19 + v14[9]);
      v31 = v14[11];
      v32 = *(_QWORD *)(v19 + v14[10]);
      v33 = *(_QWORD *)(v19 + v31);
      v34 = *(_QWORD *)(v19 + v31 + 8);
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C106AC6C();
      v35 = &v12[v18[8]];
      *(_QWORD *)v35 = v29;
      *((_QWORD *)v35 + 1) = v28;
      *(_QWORD *)&v12[v18[9]] = v30;
      *(_QWORD *)&v12[v18[10]] = v32;
      v36 = &v12[v18[11]];
      *(_QWORD *)v36 = v33;
      *((_QWORD *)v36 + 1) = v34;
      *(_QWORD *)&v12[v18[12]] = v37;
      sub_1C0794BAC(&qword_1EF63A0D0, type metadata accessor for ExpiredEventTriple, (uint64_t)&protocol conformance descriptor for ExpiredEventTriple);
      v38 = v80;
      sub_1C106BFC8();
      v4 = v38;
      if (v38)
        break;
      sub_1C07B1F90((uint64_t)v12, type metadata accessor for ExpiredEventTriple);
      sub_1C0794BAC(&qword_1ED749378, type metadata accessor for EventTriple, (uint64_t)&protocol conformance descriptor for EventTriple);
      sub_1C106C2A4();
      v16 = v78 + v72;
      v13 = v79 - 1;
      a2 = v75;
      if (v79 == 1)
      {
        swift_bridgeObjectRelease();
        v9 = v70;
        a3 = v71;
        goto LABEL_6;
      }
    }
LABEL_14:
    sub_1C07B1F90((uint64_t)v12, type metadata accessor for ExpiredEventTriple);
  }
  else
  {
LABEL_6:
    v39 = *(_QWORD *)(a3 + 16);
    if (!v39)
      return;
    v40 = sub_1C07ACF80(&qword_1ED754E60);
    v41 = *(_QWORD *)(v40 - 8);
    v42 = (*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
    v72 = *(_QWORD *)(v41 + 72);
    v73 = (void (*)(char *, unint64_t, uint64_t))v40;
    v43 = (int *)type metadata accessor for EventTriple(0);
    sub_1C0794BAC(&qword_1ED749378, type metadata accessor for EventTriple, (uint64_t)&protocol conformance descriptor for EventTriple);
    v74 = v44;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    do
    {
      v45 = a3 + v42;
      sub_1C106C2A4();
      if (v4)
        break;
      v75 = v39;
      v46 = sub_1C106E590();
      (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v9, a3 + v42, v46);
      v47 = v45 + v43[5];
      v79 = v42;
      v48 = (int *)v76;
      v49 = &v9[*(int *)(v76 + 20)];
      v50 = a3;
      v51 = sub_1C106E41C();
      v52 = *(_QWORD *)(v51 - 8);
      v80 = 0;
      v53 = *(void (**)(char *, uint64_t, uint64_t))(v52 + 16);
      v53(v49, v47, v51);
      v54 = v45 + v43[6];
      v55 = &v9[v48[6]];
      v56 = sub_1C106EB24();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(v55, v54, v56);
      v53(&v9[v48[7]], v45 + v43[7], v51);
      v57 = (uint64_t *)(v45 + v43[8]);
      v58 = *v57;
      v59 = v57[1];
      v78 = *(_QWORD *)(v50 + v43[9] + v79);
      v60 = v43[11];
      v61 = v79;
      v62 = *(_QWORD *)(v50 + v43[10] + v79);
      a3 = v50;
      v64 = *(_QWORD *)(v45 + v60);
      v63 = *(_QWORD *)(v45 + v60 + 8);
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C106AC6C();
      v65 = &v9[v48[8]];
      *(_QWORD *)v65 = v58;
      *((_QWORD *)v65 + 1) = v59;
      *(_QWORD *)&v9[v48[9]] = v78;
      *(_QWORD *)&v9[v48[10]] = v62;
      v66 = &v9[v48[11]];
      *(_QWORD *)v66 = v64;
      *((_QWORD *)v66 + 1) = v63;
      *(_QWORD *)&v9[v48[12]] = v67;
      sub_1C0794BAC(&qword_1EF63A0D0, type metadata accessor for ExpiredEventTriple, (uint64_t)&protocol conformance descriptor for ExpiredEventTriple);
      v68 = v80;
      sub_1C106BFC8();
      v4 = v68;
      if (v68)
      {
        v12 = v9;
        goto LABEL_14;
      }
      sub_1C07B1F90((uint64_t)v9, type metadata accessor for ExpiredEventTriple);
      sub_1C0794BAC(&qword_1ED749370, type metadata accessor for EventTriple, (uint64_t)&protocol conformance descriptor for EventTriple);
      sub_1C106BFC8();
      v42 = v61 + v72;
      v39 = v75 - 1;
    }
    while (v75 != 1);
  }
  swift_bridgeObjectRelease();
}

uint64_t sub_1C0BD4508()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_1C0779670();
  v24 = v2;
  v25 = v1;
  v3 = sub_1C077AE98();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1C077CFAC();
  v5 = sub_1C106AFCC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  sub_1C0778564();
  v9 = v8 - v7;
  v10 = sub_1C106AFE4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  sub_1C0778564();
  v14 = v13 - v12;
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v15);
  sub_1C0778564();
  v18 = v17 - v16;
  sub_1C106AFC0();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v9, *MEMORY[0x1E0CB1130], v5);
  sub_1C106ADD4();
  sub_1C106AF9C();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0, v3);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v14, v10);
  result = sub_1C07B2D80(v18, 1, v3);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v24, v18, v3);
    v20 = (int *)type metadata accessor for LifeEventSourceIngestor(0);
    v21 = v20[6];
    if (qword_1ED761448 != -1)
      swift_once();
    v22 = sub_1C077674C();
    v23 = sub_1C079E000(v22, (uint64_t)&unk_1ED762E88);
    sub_1C080ABC4(v23, v24 + v21, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    *(_BYTE *)(v24 + v20[7]) = 1;
    return sub_1C0893788(v25, v24 + v20[5]);
  }
  return result;
}

uint64_t type metadata accessor for LifeEventSourceIngestor(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1ED750F08);
}

uint64_t sub_1C0BD4728()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[41] = v0;
  v2 = sub_1C106F544();
  v1[42] = v2;
  v1[43] = *(_QWORD *)(v2 - 8);
  v1[44] = sub_1C077CF7C();
  v1[45] = sub_1C0775870();
  sub_1C07ACF80((uint64_t *)&unk_1ED74AFC0);
  v1[46] = sub_1C0779644();
  v3 = sub_1C07ACF80(&qword_1ED74AFB8);
  v1[47] = v3;
  v1[48] = *(_QWORD *)(v3 - 8);
  v1[49] = sub_1C077CF7C();
  v1[50] = sub_1C0775870();
  v1[51] = sub_1C0775870();
  v4 = sub_1C077AE98();
  v1[52] = v4;
  v1[53] = *(_QWORD *)(v4 - 8);
  v1[54] = sub_1C0779644();
  sub_1C07ACF80(&qword_1ED75D0B8);
  v1[55] = sub_1C0779644();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0BD47F0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v1 = v0[41];
  v0[36] = 0;
  v0[37] = 0;
  v2 = type metadata accessor for LifeEventDeltaSourceIngestor(0);
  v0[56] = v2;
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(v1 + *(int *)(v2 + 28)) + 16) + 16))();
  v3 = v0[54];
  v4 = v0[55];
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v0[53] + 16))(v3, v4, v0[52]);
  sub_1C0784B6C(v4, &qword_1ED75D0B8);
  v5 = sub_1C0BD5628(v3, 100);
  (*(void (**)(_QWORD, _QWORD))(v0[53] + 8))(v0[54], v0[52]);
  v8 = *(_QWORD *)(v5 + 16);
  v0[36] = v8;
  sub_1C0BD3438();
  sub_1C077B5B4();
  v0[37] = v8;
  sub_1C0BCD788((uint64_t)(v0 + 2));
  sub_1C0B9E1E0((uint64_t)(v0 + 2), (uint64_t)(v0 + 13));
  v6 = (_QWORD *)swift_task_alloc();
  v0[57] = v6;
  *v6 = v0;
  v6[1] = sub_1C0BD4C4C;
  return sub_1C0BD1FC0(v0[46]);
}

uint64_t sub_1C0BD4C4C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v5;

  v2 = (_QWORD *)*v1;
  v5 = (_QWORD *)*v1;
  sub_1C077B798(&v5);
  if (v0)
  {
    v2[60] = v0;
    swift_bridgeObjectRelease();
    sub_1C07B62D0();
  }
  else
  {
    v3 = MEMORY[0x1E0DEE9D8];
    v2[58] = 0;
    v2[59] = v3;
  }
  sub_1C077862C();
  return sub_1C077F6CC();
}

uint64_t sub_1C0BD4CC0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(void);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;

  v1 = v0[46];
  if (sub_1C07B2D80(v1, 1, v0[47]) != 1)
  {
    v20 = v0[50];
    v19 = v0[51];
    sub_1C080AD78(v1, v19, &qword_1ED74AFB8);
    sub_1C0BD869C(v19, v20);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v22 = v0[59];
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
LABEL_14:
      v23 = *(_QWORD *)(v22 + 16);
      if (v23 >= *(_QWORD *)(v22 + 24) >> 1)
      {
        sub_1C07EC2A0();
        v22 = v47;
      }
      v0[61] = v22;
      v24 = v0[50];
      v25 = v0[51];
      v26 = v0[48];
      *(_QWORD *)(v22 + 16) = v23 + 1;
      sub_1C080AD78(v24, v22+ ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))+ *(_QWORD *)(v26 + 72) * v23, &qword_1ED74AFB8);
      sub_1C0784B6C(v25, &qword_1ED74AFB8);
      v27 = (_QWORD *)swift_task_alloc();
      v0[62] = v27;
      *v27 = v0;
      v27[1] = sub_1C0BD5364;
      return sub_1C0BD1FC0(v0[46]);
    }
LABEL_22:
    sub_1C07EC2A0();
    v22 = v46;
    goto LABEL_14;
  }
  v61 = v0 + 36;
  v55 = v0 + 37;
  v2 = v0[59];
  v3 = sub_1C0B9E21C((uint64_t)(v0 + 13));
  sub_1C077C2D0(v3, (uint64_t *)&unk_1ED74AFC0);
  sub_1C0B9E21C((uint64_t)(v0 + 2));
  v4 = *(_QWORD *)(v2 + 16);
  if (v4)
  {
    v5 = (__int128 *)(v0 + 29);
    v49 = (uint64_t)(v0 + 38);
    v6 = v0[48];
    v57 = v0[47];
    v59 = v0[56];
    v7 = v0[59] + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v56 = *(_QWORD *)(v6 + 72);
    v8 = v0[58];
    v50 = (uint64_t)(v0 + 29);
    v51 = v0 + 24;
    v48 = (uint64_t)(v0 + 63);
    while (1)
    {
      sub_1C0BD869C(v7, v0[49]);
      sub_1C0CCBCFC();
      if (v8)
      {
        v58 = v0[45];
        v60 = v0[44];
        v29 = v0[41];
        sub_1C0784B6C(v0[49], &qword_1ED74AFB8);
        swift_bridgeObjectRelease();
        sub_1C0780818(v29, v30, v31, v32, v33, v34, v35, v36, v48, v49, v50, (uint64_t)v51, (uint64_t)v52, v53, v54, v55, v56, v58, v60,
          v61);
        sub_1C07796F8();
        sub_1C0779D18();
        sub_1C077C104();
        sub_1C07767D4();
        sub_1C0778638();
        sub_1C0786388();
        swift_task_dealloc();
        swift_task_dealloc();
        v37 = (uint64_t (*)(void))v0[1];
        return v37();
      }
      if (__OFADD__(*v61, 1))
        break;
      v9 = v0[49];
      v0[36] = *v61 + 1;
      v10 = v9 + *(int *)(v57 + 32);
      v11 = type metadata accessor for ActivityEventWithLocations(0);
      sub_1C0D0BB24((uint64_t)v5);
      if (v0[32])
      {
        sub_1C077DD60(v5, (uint64_t)v51);
        v53 = v0[28];
        v54 = v0[27];
        v52 = sub_1C07A9480(v51, v54);
        v16 = (uint64_t *)(v10 + *(int *)(v11 + 28));
        v17 = v16[1];
        v62 = *v16;
        v63 = v17;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        sub_1C078CC08();
        sub_1C106FC94();
        v18 = v62;
        LOBYTE(v62) = 2;
        (*(void (**)(uint64_t, uint64_t, uint64_t *, uint64_t))(v53 + 24))(v18, v63, &v62, v54);
        sub_1C0775894();
        _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v51);
        v5 = (__int128 *)(v0 + 29);
      }
      else
      {
        sub_1C0784B6C((uint64_t)v5, &qword_1ED754E98);
      }
      v12 = v0[49];
      sub_1C078A314();
      sub_1C0D41200();
      sub_1C0775834();
      sub_1C0784B6C(v12, &qword_1ED74AFB8);
      v13 = v0[37];
      v14 = __OFADD__(v13, 1);
      v15 = v13 + 1;
      if (v14)
        goto LABEL_21;
      *v55 = v15;
      v8 = 0;
      v7 += v56;
      if (!--v4)
        goto LABEL_18;
    }
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
LABEL_18:
  swift_bridgeObjectRelease();
  v38 = sub_1C078E168();
  sub_1C0780818(v38, v39, v40, v41, v42, v43, v44, v45, v48, v49, v50, (uint64_t)v51, (uint64_t)v52, v53, v54, v55, v56, v57, v59,
    v61);
  sub_1C07767BC();
  sub_1C07796F8();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C07767D4();
  sub_1C0778638();
  sub_1C0786388();
  v37 = (uint64_t (*)(void))sub_1C0779830();
  return v37();
}

uint64_t sub_1C0BD51B8()
{
  _QWORD *v0;
  os_log_type_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t (*v14)(void);
  uint64_t v16;

  sub_1C0B9E21C((uint64_t)(v0 + 2));
  v2 = v0[60];
  v3 = v0[44];
  sub_1C077C4B0();
  sub_1C077C818();
  sub_1C077C818();
  sub_1C106F538();
  v4 = sub_1C077C13C();
  if (sub_1C0790D48(v4))
  {
    v5 = (uint8_t *)sub_1C0775854();
    v16 = sub_1C078C25C();
    *(_DWORD *)v5 = 136315138;
    v0[35] = v2;
    sub_1C077C818();
    sub_1C07ACF80(&qword_1ED7614F0);
    v6 = sub_1C106FB5C();
    v0[34] = sub_1C0788DAC(v6, v7, &v16);
    sub_1C10705AC();
    sub_1C077E584();
    sub_1C077C220();
    sub_1C077C220();
    sub_1C07796F0(&dword_1C0771000, v3, v1, "Error getting delta events due to: %s", v5);
    sub_1C0778610();
    sub_1C0776778();
  }
  v9 = v0[43];
  v8 = v0[44];
  v10 = v0[42];
  sub_1C077C220();
  sub_1C077C220();
  sub_1C077C220();

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  v11 = sub_1C078E168();
  sub_1C0BD53D0(v11, v12, v13);
  sub_1C07767BC();
  sub_1C07796F8();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C07767D4();
  sub_1C0778638();
  sub_1C0786388();
  v14 = (uint64_t (*)(void))sub_1C0779830();
  return sub_1C07785F4(v14);
}

uint64_t sub_1C0BD5364()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v5;

  v2 = (_QWORD *)*v1;
  v5 = (_QWORD *)*v1;
  sub_1C077B798(&v5);
  if (v0)
  {
    v2[60] = v0;
    swift_bridgeObjectRelease();
    sub_1C07B62D0();
  }
  else
  {
    v3 = v2[61];
    v2[58] = 0;
    v2[59] = v3;
  }
  sub_1C077862C();
  return sub_1C077F6CC();
}

uint64_t sub_1C0BD53D0(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t result;
  _BYTE v13[128];

  v6 = type metadata accessor for Pipeline.StatusStore();
  MEMORY[0x1E0C80A78](v6);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for LifeEventDeltaSourceIngestor(0);
  sub_1C080ABC4(a1 + *(int *)(v9 + 24), (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v8[*(int *)(v6 + 20)] = 1;
  Pipeline.StatusStore.currentSessionId()();
  sub_1C07B1F90((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for Pipeline.StatusStore);
  sub_1C106F244();
  sub_1C07ACF80((uint64_t *)&unk_1ED7614C0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C10795A0;
  *(_QWORD *)(inited + 32) = 0x496E6F6973736573;
  *(_QWORD *)(inited + 40) = 0xE900000000000064;
  v11 = sub_1C106FAF0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 48) = v11;
  *(_QWORD *)(inited + 56) = 0x614E656372756F73;
  *(_QWORD *)(inited + 64) = 0xEA0000000000656DLL;
  sub_1C07D4B70(0, &qword_1ED760190);
  *(_QWORD *)(inited + 72) = sub_1C1070528();
  *(_QWORD *)(inited + 80) = 0x756F436E656B6174;
  *(_QWORD *)(inited + 88) = 0xEA0000000000746ELL;
  *(_QWORD *)(inited + 96) = sub_1C1070294();
  strcpy((char *)(inited + 104), "droppedCount");
  *(_BYTE *)(inited + 117) = 0;
  *(_WORD *)(inited + 118) = -5120;
  result = *a3 - *a2;
  if (__OFSUB__(*a3, *a2))
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(inited + 120) = sub_1C1070294();
    sub_1C07D4B70(0, (unint64_t *)&qword_1ED761490);
    sub_1C106F97C();
    sub_1C106F22C();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C0BD5628(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t inited;
  uint64_t v25;
  double v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  char *v40;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t result;
  _QWORD v47[2];
  __int128 v48;
  uint64_t v49;
  uint64_t v50;

  v3 = sub_1C106ADE0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C106D1F8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106CDD8();
  v49 = sub_1C106D090();
  v12 = v11;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1C07ACF80(&qword_1ED762CB0);
  v13 = swift_allocObject();
  v48 = xmmword_1C1079220;
  *(_OWORD *)(v13 + 16) = xmmword_1C1079220;
  if (qword_1ED761448 != -1)
LABEL_24:
    swift_once();
  v14 = type metadata accessor for Source();
  v15 = (uint64_t *)sub_1C079E000(v14, (uint64_t)&unk_1ED762E88);
  v17 = *v15;
  v16 = v15[1];
  *(_QWORD *)(v13 + 32) = v17;
  *(_QWORD *)(v13 + 40) = v16;
  v50 = MEMORY[0x1E0DEE9E8];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106ADD4();
  sub_1C106AC60();
  v19 = v18;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1C106AC60();
  v21 = v20;
  v22 = v47[1] + *(int *)(type metadata accessor for LifeEventDeltaSourceIngestor(0) + 24);
  v3 = *(_QWORD *)(v22 + *(int *)(type metadata accessor for PhaseStores() + 24));
  v23 = MEMORY[0x1E0DEE9D8];
  do
  {
    sub_1C07ACF80(&qword_1ED74D530);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = v48;
    *(_QWORD *)(inited + 32) = v49;
    *(_QWORD *)(inited + 40) = v12;
    *(_BYTE *)(inited + 48) = 1;
    *(_QWORD *)(inited + 56) = 0;
    *(_QWORD *)(inited + 64) = v13;
    *(_QWORD *)(inited + 72) = 0;
    *(_QWORD *)(inited + 80) = 0;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0AA93F4((uint64_t)&unk_1E7A00A00);
    sub_1C0ABAD10(inited, v25, a2, (uint64_t)&v50, v21, v19);
    v21 = v26;
    v6 = v27;
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1C0BE8E94();
    v28 = *((_QWORD *)v6 + 2);
    v29 = *(_QWORD *)(v23 + 16);
    v4 = v29 + v28;
    if (__OFADD__(v29, v28))
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    if (!swift_isUniquelyReferenced_nonNull_native() || v4 > *(_QWORD *)(v23 + 24) >> 1)
    {
      sub_1C07EBE48();
      v23 = v30;
    }
    if (*((_QWORD *)v6 + 2))
    {
      v31 = *(_QWORD *)(v23 + 16);
      v4 = (*(_QWORD *)(v23 + 24) >> 1) - v31;
      v32 = sub_1C106E590();
      if (v4 < v28)
        goto LABEL_22;
      v33 = *(_QWORD *)(v32 - 8);
      v34 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
      v35 = *(_QWORD *)(v33 + 72);
      v36 = v23 + v34 + v35 * v31;
      v37 = &v6[v34];
      v38 = v35 * v28;
      v39 = v36 + v38;
      v40 = &v37[v38];
      if ((unint64_t)v37 < v39 && v36 < (unint64_t)v40)
      {
        result = sub_1C10709F0();
        __break(1u);
        return result;
      }
      swift_arrayInitWithCopy();
      if (v28)
      {
        v42 = *(_QWORD *)(v23 + 16);
        v43 = __OFADD__(v42, v28);
        v44 = v42 + v28;
        if (v43)
          goto LABEL_23;
        *(_QWORD *)(v23 + 16) = v44;
      }
    }
    else if (v28)
    {
      goto LABEL_21;
    }
    swift_bridgeObjectRelease();
    v45 = *((_QWORD *)v6 + 2);
    swift_bridgeObjectRelease();
  }
  while (v45 >= a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_1C0BD59FC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C08B8620;
  return sub_1C0BD4728();
}

void sub_1C0BD5A40(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1C080ABC4(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for Source);
}

void sub_1C0BD5A64(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1C080ABC4(v2 + *(int *)(a1 + 24), a2, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
}

void sub_1C0BD5A8C(_BYTE *a1@<X8>)
{
  sub_1C079DB78(a1);
}

uint64_t sub_1C0BD5A98(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = (uint64_t *)(a1 + *(int *)(type metadata accessor for EventTriple(0) + 32));
  v2 = *v1;
  v3 = v1[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0A7D28C((uint64_t)&v5, v2, v3);
  swift_bridgeObjectRelease();
  return 1;
}

void sub_1C0BD5B00()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, _QWORD *);
  uint64_t (*v3)(_QWORD);
  uint64_t (*v4)(_QWORD);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t, uint64_t, _QWORD *);
  _QWORD v62[7];
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  sub_1C0779670();
  v60 = v1;
  v61 = v2;
  v4 = v3;
  v5 = v0;
  v59 = v6;
  sub_1C07ACF80(&qword_1ED75EA10);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v7);
  sub_1C077AE40();
  v58 = v8;
  sub_1C106D990();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v9);
  sub_1C077AE40();
  v55 = v10;
  v52 = *(_QWORD *)(sub_1C106D9A8() - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v11);
  sub_1C077AF80();
  v54 = v12 - v13;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v14);
  sub_1C0799D8C();
  v16 = v15;
  MEMORY[0x1E0C80A78](v17);
  sub_1C0799D8C();
  v19 = v18;
  MEMORY[0x1E0C80A78](v20);
  sub_1C0799D8C();
  v22 = v21;
  MEMORY[0x1E0C80A78](v23);
  sub_1C0799D8C();
  v25 = v24;
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v48 - v27;
  v29 = sub_1C106D9B4();
  v56 = *(_QWORD *)(v29 - 8);
  v57 = v29;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v30);
  sub_1C077AE40();
  v51 = v31;
  v65 = MEMORY[0x1E0DEE9D8];
  v66 = MEMORY[0x1E0DEE9D8];
  v32 = *(int *)(v4(0) + 24);
  v50 = v0;
  v53 = *(_QWORD *)(v0 + v32 + *(int *)(sub_1C078A314() + 24));
  sub_1C07ACF80(&qword_1ED7603F0);
  sub_1C077674C();
  sub_1C0789EB4();
  v35 = v34 & ~v33;
  v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_1C1079220;
  sub_1C080ABC4(v5, v36 + v35, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  swift_retain();
  SourceSet.init(arrayLiteral:)(&v64, v36);
  v49 = v64;
  v37 = (uint64_t)v28;
  sub_1C079AD58((uint64_t)v28);
  v38 = v25;
  sub_1C079AD58(v25);
  v39 = v22;
  sub_1C079AD58(v22);
  v40 = v19;
  sub_1C079AD58(v19);
  v41 = v16;
  sub_1C079AD58(v16);
  v42 = v54;
  sub_1C079AD58(v54);
  v62[6] = v49;
  v63 = 0;
  sub_1C0CDBB20(v37, 0, v38, 0, v39, 0, v40, 0, v55, v41, 0, v42);
  v43 = v51;
  sub_1C106D9C0();
  sub_1C0791390(v42);
  sub_1C0791390(v41);
  sub_1C0791390(v40);
  sub_1C0791390(v39);
  sub_1C0791390(v38);
  sub_1C0791390(v37);
  v44 = sub_1C106D2DC();
  v45 = v58;
  sub_1C077A2C4(v58, v46, v47, v44);
  v62[2] = v59;
  v62[3] = v50;
  v62[4] = &v66;
  v62[5] = &v65;
  v61(v43, v45, v60, v62);
  sub_1C0784B6C(v45, &qword_1ED75EA10);
  (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v43, v57);
  sub_1C07785A8();
  sub_1C0776760();
}

void sub_1C0BD5E70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1C0779670();
  sub_1C0BD8790(v1, v2, v3, v4, v5);
  sub_1C07ACF80(&qword_1ED7493A0);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_1C077CFAC();
  type metadata accessor for GraphTriple(v7);
  sub_1C07AF2CC();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1C07A28D4();
  MEMORY[0x1C3BA79F4](v9);
  sub_1C07B73A8();
  sub_1C079DD5C();
  sub_1C07B6010();
  sub_1C0775834();
  sub_1C0898D28(v0);
  if (*(_QWORD *)(sub_1C07AC8A0(v10) + 16))
  {
    sub_1C07B6734();
    sub_1C0D482D8();
  }
  sub_1C077ED08();
  sub_1C0776760();
}

void sub_1C0BD5FBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1C0779670();
  sub_1C0BD8790(v1, v2, v3, v4, v5);
  sub_1C07ACF80(&qword_1ED754E60);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_1C077CFAC();
  type metadata accessor for EventTriple(v7);
  sub_1C07AF2CC();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1C07A28D4();
  MEMORY[0x1C3BA79F4](v9);
  sub_1C07B73A8();
  sub_1C079DD5C();
  sub_1C07B6010();
  sub_1C0775834();
  sub_1C0898D28(v0);
  if (*(_QWORD *)(sub_1C07AC8A0(v10) + 16))
  {
    sub_1C07B6734();
    sub_1C0D482EC();
  }
  sub_1C077ED08();
  sub_1C0776760();
}

uint64_t sub_1C0BD6108()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[44] = v0;
  v2 = sub_1C106F544();
  v1[45] = v2;
  v1[46] = *(_QWORD *)(v2 - 8);
  v1[47] = sub_1C0779644();
  v1[48] = sub_1C07ACF80(&qword_1ED74AFB8);
  v1[49] = sub_1C0779644();
  sub_1C07ACF80((uint64_t *)&unk_1ED74AFC0);
  v1[50] = sub_1C0779644();
  v1[51] = sub_1C07ACF80(&qword_1ED759DF0);
  v1[52] = sub_1C077CF7C();
  v1[53] = sub_1C0775870();
  v3 = sub_1C077AE98();
  v1[54] = v3;
  v1[55] = *(_QWORD *)(v3 - 8);
  v1[56] = sub_1C077CF7C();
  v1[57] = sub_1C0775870();
  v1[58] = sub_1C07ACF80(&qword_1ED75D0B8);
  v1[59] = sub_1C077CF7C();
  v1[60] = sub_1C0775870();
  type metadata accessor for Configuration();
  v1[61] = sub_1C0779644();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0BD6200()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD __src[12];

  v1 = *(_QWORD *)(v0 + 488);
  v2 = *(_QWORD *)(v0 + 456);
  v3 = *(_QWORD *)(v0 + 432);
  v4 = *(_QWORD *)(v0 + 440);
  v5 = *(_QWORD *)(v0 + 352);
  *(_QWORD *)(v0 + 312) = 0;
  *(_QWORD *)(v0 + 336) = 0;
  type metadata accessor for LifeEventProvider();
  v6 = *(int *)(type metadata accessor for LifeEventSourceIngestor(0) + 20);
  *(_DWORD *)(v0 + 528) = v6;
  sub_1C080ABC4(v5 + v6, v1, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  sub_1C0BD17D8(v1);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v7(v2, v5, v3);
  sub_1C106ADD4();
  sub_1C0794BAC((unint64_t *)&qword_1ED755A40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
  sub_1C077B200();
  result = sub_1C106FA84();
  if ((result & 1) != 0)
  {
    v9 = *(_QWORD *)(v0 + 472);
    v23 = *(_QWORD *)(v0 + 464);
    v24 = *(_QWORD *)(v0 + 480);
    v10 = *(_QWORD *)(v0 + 448);
    v22 = *(_QWORD *)(v0 + 440);
    v11 = v7;
    v13 = *(_QWORD *)(v0 + 424);
    v12 = *(_QWORD *)(v0 + 432);
    v14 = *(_QWORD *)(v0 + 408);
    v15 = *(_QWORD *)(v0 + 416);
    v16 = v13 + *(int *)(v14 + 48);
    sub_1C07B48A8(v13, *(_QWORD *)(v0 + 456));
    sub_1C07B48A8(v16, v10);
    v17 = v15 + *(int *)(v14 + 48);
    v11(v15, v13, v12);
    v11(v17, v16, v12);
    sub_1C07B48A8(v9, v15);
    v18 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    v18(v17, v12);
    v19 = v15 + *(int *)(v14 + 48);
    sub_1C07B48A8(v15, v13);
    sub_1C07B48A8(v19, v16);
    sub_1C07B48A8(v9 + *(int *)(v23 + 36), v19);
    v18(v15, v12);
    sub_1C080AD78(v9, v24, &qword_1ED75D0B8);
    sub_1C0BD19E4(v24, (uint64_t)__src);
    sub_1C0784B6C(*(_QWORD *)(v0 + 480), &qword_1ED75D0B8);
    swift_release();
    memcpy((void *)(v0 + 16), __src, 0x58uLL);
    sub_1C0B9E1E0(v0 + 16, v0 + 104);
    v20 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 496) = v20;
    v21 = sub_1C0BD877C(v20);
    return sub_1C0BD1FC0(v21);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C0BD65F8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v2 = *v1;
  v4 = *v1;
  sub_1C077B798(&v4);
  if (v0)
    *(_QWORD *)(v2 + 512) = v0;
  else
    *(_QWORD *)(v2 + 504) = 0;
  sub_1C077862C();
  return sub_1C0789D28();
}

void sub_1C0BD664C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = (_QWORD *)(v0 + 312);
  v2 = *(_QWORD *)(v0 + 400);
  if (sub_1C07B2D80(v2, 1, *(_QWORD *)(v0 + 384)) == 1)
  {
    sub_1C07B62D0();
    sub_1C106AC6C();
    sub_1C088B754();
    v3 = sub_1C0B9E21C(v0 + 16);
    sub_1C078BE3C(v3, (_QWORD *)(v0 + 336));
    sub_1C07767BC();
    sub_1C07796F8();
    sub_1C07758BC();
    sub_1C07767D4();
    sub_1C0778638();
    sub_1C0786388();
    sub_1C0779D20();
    sub_1C0779D18();
    sub_1C077C27C();
    swift_task_dealloc();
    v4 = (void (*)(void))sub_1C0779830();
LABEL_5:
    v4();
    return;
  }
  v5 = *(_QWORD *)(v0 + 504);
  sub_1C080AD78(v2, *(_QWORD *)(v0 + 392), &qword_1ED74AFB8);
  sub_1C0CCBC48();
  if (v5)
  {
    sub_1C0784B6C(*(_QWORD *)(v0 + 392), &qword_1ED74AFB8);
    sub_1C07B62D0();
    v6 = sub_1C0B9E21C(v0 + 16);
    sub_1C078BE3C(v6, (_QWORD *)(v0 + 336));
    sub_1C07767BC();
    sub_1C07796F8();
    sub_1C0779D18();
    sub_1C07767D4();
    sub_1C0778638();
    sub_1C0786388();
    sub_1C0779D20();
    swift_task_dealloc();
    sub_1C077C27C();
    swift_task_dealloc();
    v4 = *(void (**)(void))(v0 + 8);
    goto LABEL_5;
  }
  if (__OFADD__(*v1, 1))
  {
    __break(1u);
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 384);
    v7 = *(_QWORD *)(v0 + 392);
    *(_QWORD *)(v0 + 312) = *v1 + 1;
    v9 = v7 + *(int *)(v8 + 32);
    v10 = type metadata accessor for ActivityEventWithLocations(0);
    sub_1C0D0BB24(v0 + 232);
    if (*(_QWORD *)(v0 + 256))
    {
      sub_1C077DD60((__int128 *)(v0 + 232), v0 + 192);
      v17 = *(_QWORD *)(v0 + 216);
      v23 = *(_QWORD *)(v0 + 224);
      sub_1C07A9480((_QWORD *)(v0 + 192), v17);
      v18 = (_QWORD *)(v9 + *(int *)(v10 + 28));
      v19 = v18[1];
      *(_QWORD *)(v0 + 272) = *v18;
      *(_QWORD *)(v0 + 280) = v19;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C078CC08();
      v20 = *(_QWORD *)(v0 + 280);
      *(_QWORD *)(v0 + 288) = *(_QWORD *)(v0 + 272);
      *(_QWORD *)(v0 + 296) = v20;
      sub_1C106FC94();
      v21 = *(_QWORD *)(v0 + 288);
      v22 = *(_QWORD *)(v0 + 296);
      *(_BYTE *)(v0 + 532) = 1;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 24))(v21, v22, v0 + 532, v17);
      sub_1C077E584();
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 192);
    }
    else
    {
      sub_1C0784B6C(v0 + 232, &qword_1ED754E98);
    }
    sub_1C078A314();
    sub_1C0D41200();
    v11 = sub_1C0775894();
    sub_1C077C2D0(v11, &qword_1ED74AFB8);
    v12 = *(_QWORD *)(v0 + 336);
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (!v13)
    {
      *(_QWORD *)(v0 + 336) = v14;
      v15 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 520) = v15;
      v16 = sub_1C0BD877C(v15);
      sub_1C0BD1FC0(v16);
      return;
    }
  }
  __break(1u);
}

uint64_t sub_1C0BD6A70()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 304) = *(_QWORD *)(v0 + 512);
  sub_1C07ACF80(&qword_1ED7614F0);
  swift_willThrowTypedImpl();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0BD6AC4()
{
  uint64_t v0;

  sub_1C0B9E21C(v0 + 104);
  sub_1C0B9E21C(v0 + 16);
  sub_1C0BD6BD0(*(_QWORD *)(v0 + 352), (_QWORD *)(v0 + 336), (_QWORD *)(v0 + 312));
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C07767D4();
  sub_1C0778638();
  sub_1C0786388();
  sub_1C0779D20();
  sub_1C07767BC();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1C077C27C();
  return sub_1C07785F4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0BD6B7C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v2 = *v1;
  v4 = *v1;
  sub_1C077B798(&v4);
  if (v0)
    *(_QWORD *)(v2 + 512) = v0;
  else
    *(_QWORD *)(v2 + 504) = 0;
  sub_1C077862C();
  return sub_1C0789D28();
}

uint64_t sub_1C0BD6BD0(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t result;
  _BYTE v13[128];

  v6 = type metadata accessor for Pipeline.StatusStore();
  MEMORY[0x1E0C80A78](v6);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for LifeEventSourceIngestor(0);
  sub_1C080ABC4(a1 + *(int *)(v9 + 20), (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v8[*(int *)(v6 + 20)] = 1;
  Pipeline.StatusStore.currentSessionId()();
  sub_1C07B1F90((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for Pipeline.StatusStore);
  sub_1C106F244();
  sub_1C07ACF80((uint64_t *)&unk_1ED7614C0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C10795A0;
  *(_QWORD *)(inited + 32) = 0x496E6F6973736573;
  *(_QWORD *)(inited + 40) = 0xE900000000000064;
  v11 = sub_1C106FAF0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 48) = v11;
  *(_QWORD *)(inited + 56) = 0x614E656372756F73;
  *(_QWORD *)(inited + 64) = 0xEA0000000000656DLL;
  sub_1C07D4B70(0, &qword_1ED760190);
  *(_QWORD *)(inited + 72) = sub_1C1070528();
  *(_QWORD *)(inited + 80) = 0x756F436E656B6174;
  *(_QWORD *)(inited + 88) = 0xEA0000000000746ELL;
  *(_QWORD *)(inited + 96) = sub_1C1070294();
  strcpy((char *)(inited + 104), "droppedCount");
  *(_BYTE *)(inited + 117) = 0;
  *(_WORD *)(inited + 118) = -5120;
  result = *a3 - *a2;
  if (__OFSUB__(*a3, *a2))
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(inited + 120) = sub_1C1070294();
    sub_1C07D4B70(0, (unint64_t *)&qword_1ED761490);
    sub_1C106F97C();
    sub_1C106F22C();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C0BD6E28()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C0806670;
  return sub_1C0BD6108();
}

void sub_1C0BD6E6C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1C080ABC4(v2 + *(int *)(a1 + 24), a2, (uint64_t (*)(_QWORD))type metadata accessor for Source);
}

void sub_1C0BD6E94(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1C080ABC4(v2 + *(int *)(a1 + 20), a2, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
}

_QWORD *sub_1C0BD6EC0(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    v4 = (_QWORD *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    v8 = type metadata accessor for Source();
    v9 = *(int *)(v8 + 24);
    v10 = (char *)v4 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_1C106D1F8();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v13(v10, v11, v12);
    *((_BYTE *)v4 + *(int *)(v8 + 28)) = *((_BYTE *)a2 + *(int *)(v8 + 28));
    v14 = a3[6];
    *((_BYTE *)v4 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v15 = (char *)v4 + v14;
    v16 = (char *)a2 + v14;
    v17 = sub_1C106AB28();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v18 = type metadata accessor for Configuration();
    *(_OWORD *)&v15[*(int *)(v18 + 20)] = *(_OWORD *)&v16[*(int *)(v18 + 20)];
    v19 = (int *)type metadata accessor for PhaseStores();
    *(_QWORD *)&v15[v19[5]] = *(_QWORD *)&v16[v19[5]];
    *(_QWORD *)&v15[v19[6]] = *(_QWORD *)&v16[v19[6]];
    *(_QWORD *)&v15[v19[7]] = *(_QWORD *)&v16[v19[7]];
    *(_QWORD *)&v15[v19[8]] = *(_QWORD *)&v16[v19[8]];
    *(_QWORD *)&v15[v19[9]] = *(_QWORD *)&v16[v19[9]];
    *(_QWORD *)&v15[v19[10]] = *(_QWORD *)&v16[v19[10]];
    *(_QWORD *)&v15[v19[11]] = *(_QWORD *)&v16[v19[11]];
    *(_QWORD *)((char *)v4 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1C0BD7080(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(type metadata accessor for Source() + 24);
  v5 = sub_1C106D1F8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 24);
  v7 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  type metadata accessor for PhaseStores();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *sub_1C0BD7168(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = type metadata accessor for Source();
  v8 = *(int *)(v7 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1C106D1F8();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v12(v9, v10, v11);
  *((_BYTE *)a1 + *(int *)(v7 + 28)) = *((_BYTE *)a2 + *(int *)(v7 + 28));
  v13 = a3[6];
  *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_1C106AB28();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  v17 = type metadata accessor for Configuration();
  *(_OWORD *)&v14[*(int *)(v17 + 20)] = *(_OWORD *)&v15[*(int *)(v17 + 20)];
  v18 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)&v14[v18[5]] = *(_QWORD *)&v15[v18[5]];
  *(_QWORD *)&v14[v18[6]] = *(_QWORD *)&v15[v18[6]];
  *(_QWORD *)&v14[v18[7]] = *(_QWORD *)&v15[v18[7]];
  *(_QWORD *)&v14[v18[8]] = *(_QWORD *)&v15[v18[8]];
  *(_QWORD *)&v14[v18[9]] = *(_QWORD *)&v15[v18[9]];
  *(_QWORD *)&v14[v18[10]] = *(_QWORD *)&v15[v18[10]];
  *(_QWORD *)&v14[v18[11]] = *(_QWORD *)&v15[v18[11]];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_1C0BD7300(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int *v18;

  *a1 = *a2;
  a1[1] = a2[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v6 = type metadata accessor for Source();
  v7 = *(int *)(v6 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1C106D1F8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *((_BYTE *)a1 + *(int *)(v6 + 28)) = *((_BYTE *)a2 + *(int *)(v6 + 28));
  *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_1C106AB28();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = *(int *)(type metadata accessor for Configuration() + 20);
  v16 = &v12[v15];
  v17 = &v13[v15];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
  v18 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)&v12[v18[5]] = *(_QWORD *)&v13[v18[5]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v12[v18[6]] = *(_QWORD *)&v13[v18[6]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v12[v18[7]] = *(_QWORD *)&v13[v18[7]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v12[v18[8]] = *(_QWORD *)&v13[v18[8]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v12[v18[9]] = *(_QWORD *)&v13[v18[9]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v12[v18[10]] = *(_QWORD *)&v13[v18[10]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v12[v18[11]] = *(_QWORD *)&v13[v18[11]];
  swift_retain();
  swift_release();
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1C0BD74F4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = type metadata accessor for Source();
  v7 = *(int *)(v6 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1C106D1F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_BYTE *)(a1 + *(int *)(v6 + 28)) = *(_BYTE *)(a2 + *(int *)(v6 + 28));
  v11 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = type metadata accessor for Configuration();
  *(_OWORD *)(v12 + *(int *)(v15 + 20)) = *(_OWORD *)(v13 + *(int *)(v15 + 20));
  v16 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(v12 + v16[5]) = *(_QWORD *)(v13 + v16[5]);
  *(_QWORD *)(v12 + v16[6]) = *(_QWORD *)(v13 + v16[6]);
  *(_QWORD *)(v12 + v16[7]) = *(_QWORD *)(v13 + v16[7]);
  *(_QWORD *)(v12 + v16[8]) = *(_QWORD *)(v13 + v16[8]);
  *(_QWORD *)(v12 + v16[9]) = *(_QWORD *)(v13 + v16[9]);
  *(_QWORD *)(v12 + v16[10]) = *(_QWORD *)(v13 + v16[10]);
  *(_QWORD *)(v12 + v16[11]) = *(_QWORD *)(v13 + v16[11]);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

_QWORD *sub_1C0BD7630(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v7 = type metadata accessor for Source();
  v8 = *(int *)(v7 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1C106D1F8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  *((_BYTE *)a1 + *(int *)(v7 + 28)) = *((_BYTE *)a2 + *(int *)(v7 + 28));
  v12 = a3[6];
  *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_1C106AB28();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = type metadata accessor for Configuration();
  *(_OWORD *)&v13[*(int *)(v16 + 20)] = *(_OWORD *)&v14[*(int *)(v16 + 20)];
  v17 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)&v13[v17[5]] = *(_QWORD *)&v14[v17[5]];
  swift_release();
  *(_QWORD *)&v13[v17[6]] = *(_QWORD *)&v14[v17[6]];
  swift_release();
  *(_QWORD *)&v13[v17[7]] = *(_QWORD *)&v14[v17[7]];
  swift_release();
  *(_QWORD *)&v13[v17[8]] = *(_QWORD *)&v14[v17[8]];
  swift_release();
  *(_QWORD *)&v13[v17[9]] = *(_QWORD *)&v14[v17[9]];
  swift_release();
  *(_QWORD *)&v13[v17[10]] = *(_QWORD *)&v14[v17[10]];
  swift_release();
  *(_QWORD *)&v13[v17[11]] = *(_QWORD *)&v14[v17[11]];
  swift_release();
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_release();
  return a1;
}

uint64_t sub_1C0BD77B8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1C0BD77C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  sub_1C077674C();
  sub_1C0786404();
  if (v9)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    sub_1C078A314();
    sub_1C0786404();
    if (!v9)
    {
      sub_1C077671C();
      return;
    }
    v7 = v10;
    v8 = a1 + *(int *)(a3 + 24);
  }
  sub_1C0776754(v8, a2, v7);
}

uint64_t sub_1C0BD783C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1C0BD7848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  sub_1C077674C();
  sub_1C077AFFC();
  if (v10)
  {
    v8 = v7;
    v9 = a1;
  }
  else
  {
    sub_1C078A314();
    sub_1C077AFFC();
    if (!v10)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
      sub_1C077671C();
      return;
    }
    v8 = v11;
    v9 = a1 + *(int *)(a4 + 24);
  }
  sub_1C077F00C(v9, a2, a2, v8);
}

uint64_t type metadata accessor for LifeEventDeltaSourceIngestor(uint64_t a1)
{
  return sub_1C0784B00(a1, qword_1ED74C808);
}

uint64_t sub_1C0BD78D0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for Source();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for PhaseStores();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

_QWORD *sub_1C0BD7968(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  char *v24;
  uint64_t v25;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1C106ADE0();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1C106AB28();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = type metadata accessor for Configuration();
    *(_OWORD *)&v9[*(int *)(v12 + 20)] = *(_OWORD *)&v10[*(int *)(v12 + 20)];
    v13 = (int *)type metadata accessor for PhaseStores();
    *(_QWORD *)&v9[v13[5]] = *(_QWORD *)&v10[v13[5]];
    *(_QWORD *)&v9[v13[6]] = *(_QWORD *)&v10[v13[6]];
    *(_QWORD *)&v9[v13[7]] = *(_QWORD *)&v10[v13[7]];
    *(_QWORD *)&v9[v13[8]] = *(_QWORD *)&v10[v13[8]];
    *(_QWORD *)&v9[v13[9]] = *(_QWORD *)&v10[v13[9]];
    *(_QWORD *)&v9[v13[10]] = *(_QWORD *)&v10[v13[10]];
    *(_QWORD *)&v9[v13[11]] = *(_QWORD *)&v10[v13[11]];
    v14 = a3[6];
    v15 = (_QWORD *)((char *)a1 + v14);
    v16 = (char *)a2 + v14;
    v17 = *(_QWORD *)((char *)a2 + v14 + 8);
    *v15 = *(_QWORD *)((char *)a2 + v14);
    v15[1] = v17;
    v15[2] = *(_QWORD *)((char *)a2 + v14 + 16);
    v25 = type metadata accessor for Source();
    v18 = *(int *)(v25 + 24);
    v23 = &v16[v18];
    v24 = (char *)v15 + v18;
    v19 = sub_1C106D1F8();
    v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v22(v24, v23, v19);
    *((_BYTE *)v15 + *(int *)(v25 + 28)) = v16[*(int *)(v25 + 28)];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  }
  return a1;
}

uint64_t sub_1C0BD7B6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = sub_1C106ADE0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  type metadata accessor for PhaseStores();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v7 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  v8 = v7 + *(int *)(type metadata accessor for Source() + 24);
  v9 = sub_1C106D1F8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

uint64_t sub_1C0BD7C6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = sub_1C106ADE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v25 = a3;
  v26 = a1;
  v8 = a1 + v7;
  v9 = a2 + v7;
  v24 = a2;
  v10 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = type metadata accessor for Configuration();
  *(_OWORD *)(v8 + *(int *)(v11 + 20)) = *(_OWORD *)(v9 + *(int *)(v11 + 20));
  v12 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(v8 + v12[5]) = *(_QWORD *)(v9 + v12[5]);
  *(_QWORD *)(v8 + v12[6]) = *(_QWORD *)(v9 + v12[6]);
  *(_QWORD *)(v8 + v12[7]) = *(_QWORD *)(v9 + v12[7]);
  *(_QWORD *)(v8 + v12[8]) = *(_QWORD *)(v9 + v12[8]);
  *(_QWORD *)(v8 + v12[9]) = *(_QWORD *)(v9 + v12[9]);
  *(_QWORD *)(v8 + v12[10]) = *(_QWORD *)(v9 + v12[10]);
  *(_QWORD *)(v8 + v12[11]) = *(_QWORD *)(v9 + v12[11]);
  v13 = *(int *)(a3 + 24);
  v14 = (_QWORD *)(a1 + v13);
  v15 = a2 + v13;
  v16 = *(_QWORD *)(a2 + v13 + 8);
  *v14 = *(_QWORD *)(a2 + v13);
  v14[1] = v16;
  v14[2] = *(_QWORD *)(a2 + v13 + 16);
  v17 = type metadata accessor for Source();
  v18 = *(int *)(v17 + 24);
  v22 = v15 + v18;
  v23 = (char *)v14 + v18;
  v19 = sub_1C106D1F8();
  v21 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v21(v23, v22, v19);
  *((_BYTE *)v14 + *(int *)(v17 + 28)) = *(_BYTE *)(v15 + *(int *)(v17 + 28));
  result = v26;
  *(_BYTE *)(v26 + *(int *)(v25 + 28)) = *(_BYTE *)(v24 + *(int *)(v25 + 28));
  return result;
}

uint64_t sub_1C0BD7E44(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  int *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_1C106ADE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(type metadata accessor for Configuration() + 20);
  v12 = (_QWORD *)(v8 + v11);
  v13 = (_QWORD *)(v9 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  v14 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(v8 + v14[5]) = *(_QWORD *)(v9 + v14[5]);
  swift_retain();
  swift_release();
  *(_QWORD *)(v8 + v14[6]) = *(_QWORD *)(v9 + v14[6]);
  swift_retain();
  swift_release();
  *(_QWORD *)(v8 + v14[7]) = *(_QWORD *)(v9 + v14[7]);
  swift_retain();
  swift_release();
  *(_QWORD *)(v8 + v14[8]) = *(_QWORD *)(v9 + v14[8]);
  swift_retain();
  swift_release();
  *(_QWORD *)(v8 + v14[9]) = *(_QWORD *)(v9 + v14[9]);
  swift_retain();
  swift_release();
  *(_QWORD *)(v8 + v14[10]) = *(_QWORD *)(v9 + v14[10]);
  swift_retain();
  swift_release();
  *(_QWORD *)(v8 + v14[11]) = *(_QWORD *)(v9 + v14[11]);
  swift_retain();
  swift_release();
  v15 = a3[6];
  v16 = (_QWORD *)(a1 + v15);
  v17 = a2 + v15;
  *v16 = *(_QWORD *)(a2 + v15);
  v16[1] = *(_QWORD *)(a2 + v15 + 8);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  v16[2] = *(_QWORD *)(v17 + 16);
  v18 = type metadata accessor for Source();
  v19 = *(int *)(v18 + 24);
  v20 = (char *)v16 + v19;
  v21 = v17 + v19;
  v22 = sub_1C106D1F8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  *((_BYTE *)v16 + *(int *)(v18 + 28)) = *(_BYTE *)(v17 + *(int *)(v18 + 28));
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1C0BD8048(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_1C106ADE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = type metadata accessor for Configuration();
  *(_OWORD *)(v8 + *(int *)(v11 + 20)) = *(_OWORD *)(v9 + *(int *)(v11 + 20));
  v12 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(v8 + v12[5]) = *(_QWORD *)(v9 + v12[5]);
  *(_QWORD *)(v8 + v12[6]) = *(_QWORD *)(v9 + v12[6]);
  *(_QWORD *)(v8 + v12[7]) = *(_QWORD *)(v9 + v12[7]);
  *(_QWORD *)(v8 + v12[8]) = *(_QWORD *)(v9 + v12[8]);
  *(_QWORD *)(v8 + v12[9]) = *(_QWORD *)(v9 + v12[9]);
  *(_QWORD *)(v8 + v12[10]) = *(_QWORD *)(v9 + v12[10]);
  *(_QWORD *)(v8 + v12[11]) = *(_QWORD *)(v9 + v12[11]);
  v13 = a3[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_OWORD *)v14 = *(_OWORD *)(a2 + v13);
  *(_QWORD *)(v14 + 16) = *(_QWORD *)(a2 + v13 + 16);
  v16 = type metadata accessor for Source();
  v17 = *(int *)(v16 + 24);
  v18 = v14 + v17;
  v19 = v15 + v17;
  v20 = sub_1C106D1F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
  *(_BYTE *)(v14 + *(int *)(v16 + 28)) = *(_BYTE *)(v15 + *(int *)(v16 + 28));
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1C0BD81B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_1C106ADE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = type metadata accessor for Configuration();
  *(_OWORD *)(v8 + *(int *)(v11 + 20)) = *(_OWORD *)(v9 + *(int *)(v11 + 20));
  v12 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(v8 + v12[5]) = *(_QWORD *)(v9 + v12[5]);
  swift_release();
  *(_QWORD *)(v8 + v12[6]) = *(_QWORD *)(v9 + v12[6]);
  swift_release();
  *(_QWORD *)(v8 + v12[7]) = *(_QWORD *)(v9 + v12[7]);
  swift_release();
  *(_QWORD *)(v8 + v12[8]) = *(_QWORD *)(v9 + v12[8]);
  swift_release();
  *(_QWORD *)(v8 + v12[9]) = *(_QWORD *)(v9 + v12[9]);
  swift_release();
  *(_QWORD *)(v8 + v12[10]) = *(_QWORD *)(v9 + v12[10]);
  swift_release();
  *(_QWORD *)(v8 + v12[11]) = *(_QWORD *)(v9 + v12[11]);
  swift_release();
  v13 = a3[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = a2 + v13;
  v16 = *(_QWORD *)(a2 + v13 + 8);
  *v14 = *(_QWORD *)(a2 + v13);
  v14[1] = v16;
  swift_bridgeObjectRelease();
  v14[2] = *(_QWORD *)(v15 + 16);
  v17 = type metadata accessor for Source();
  v18 = *(int *)(v17 + 24);
  v19 = (char *)v14 + v18;
  v20 = v15 + v18;
  v21 = sub_1C106D1F8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(v19, v20, v21);
  *((_BYTE *)v14 + *(int *)(v17 + 28)) = *(_BYTE *)(v15 + *(int *)(v17 + 28));
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1C0BD835C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1C0BD8368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  sub_1C077AE98();
  sub_1C0786404();
  if (v9)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    sub_1C078A314();
    sub_1C0786404();
    if (v9)
    {
      v7 = v10;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      sub_1C077674C();
      sub_1C0786404();
      if (!v12)
      {
        sub_1C077671C();
        return;
      }
      v7 = v13;
      v11 = *(int *)(a3 + 24);
    }
    v8 = a1 + v11;
  }
  sub_1C0776754(v8, a2, v7);
}

uint64_t sub_1C0BD83F4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1C0BD8400(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  sub_1C077AE98();
  sub_1C077AFFC();
  if (v10)
  {
    v8 = v7;
    v9 = a1;
  }
  else
  {
    sub_1C078A314();
    sub_1C077AFFC();
    if (v10)
    {
      v8 = v11;
      v12 = a4[5];
    }
    else
    {
      sub_1C077674C();
      sub_1C077AFFC();
      if (!v13)
      {
        *(_BYTE *)(a1 + a4[7]) = a2 + 3;
        sub_1C077671C();
        return;
      }
      v8 = v14;
      v12 = a4[6];
    }
    v9 = a1 + v12;
  }
  sub_1C077F00C(v9, a2, a2, v8);
}

uint64_t sub_1C0BD848C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_1C106ADE0();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for PhaseStores();
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for Source();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

void sub_1C0BD8534(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1ED750EE8, type metadata accessor for LifeEventSourceIngestor, (uint64_t)&unk_1C10A6AC8);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0BD8570(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1ED750F00, type metadata accessor for LifeEventSourceIngestor, (uint64_t)&unk_1C10A6AF0);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0BD85AC(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1ED74C7E8, type metadata accessor for LifeEventDeltaSourceIngestor, (uint64_t)&unk_1C10A6B28);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0BD85E8(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1ED74C800, type metadata accessor for LifeEventDeltaSourceIngestor, (uint64_t)&unk_1C10A6B50);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0BD8624(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1ED74C7F8, type metadata accessor for LifeEventDeltaSourceIngestor, (uint64_t)&unk_1C10A6B6C);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0BD8660(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1ED750EF8, type metadata accessor for LifeEventSourceIngestor, (uint64_t)&unk_1C10A6B0C);
  *(_QWORD *)(a1 + 8) = v2;
}

uint64_t sub_1C0BD869C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1ED74AFB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0BD86E4(uint64_t a1)
{
  return sub_1C0BD5A98(a1);
}

uint64_t sub_1C0BD86EC()
{
  char v0;

  sub_1C0BD5E70();
  return v0 & 1;
}

void sub_1C0BD870C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  sub_1C0BD3FC4(a1, *a2, a3);
}

void sub_1C0BD8724(uint64_t a1)
{
  uint64_t v1;

  sub_1C0BD870C(a1, *(uint64_t **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1C0BD873C()
{
  char v0;

  sub_1C0BD5FBC();
  return v0 & 1;
}

uint64_t sub_1C0BD8768(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1C0788DAC(a1, a2, (uint64_t *)(v2 - 120));
}

uint64_t sub_1C0BD8770()
{
  return sub_1C106FB5C();
}

uint64_t sub_1C0BD877C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 400);
}

void sub_1C0BD8790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 - 128) = a5;
  *(_QWORD *)(v5 - 120) = a3;
  *(_QWORD *)(v5 - 144) = a4;
}

void sub_1C0BD87A4()
{
  sub_1C0BD8B48((uint64_t)&OBJC_IVAR____TtC24IntelligencePlatformCore13GraphDatabase_pool, (uint64_t)sub_1C0BD9C94);
}

void sub_1C0BD87B8()
{
  sub_1C0BD8B48((uint64_t)&OBJC_IVAR____TtC24IntelligencePlatformCore13StateDatabase_pool, (uint64_t)sub_1C0BD9CB4);
}

void sub_1C0BD87CC()
{
  void *v0;
  uint64_t v1;
  os_log_type_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[5];
  uint64_t v13;
  char v14;
  uint64_t v15;

  if (qword_1ED762B20 != -1)
    swift_once();
  v1 = sub_1C077585C();
  sub_1C079E000(v1, (uint64_t)qword_1ED78D9F8);
  sub_1C0793118();
  sub_1C106F538();
  v2 = sub_1C0784E0C();
  if (sub_1C077AF00(v2))
  {
    sub_1C0775854();
    v12[0] = sub_1C0775854();
    sub_1C079B818(4.8149e-34);
    v3 = sub_1C07BC8E8();
    v5 = sub_1C079C5C0(v3, v4);
    sub_1C0793D6C(v5);
    sub_1C077971C();
    sub_1C0775844();
    sub_1C079E4D0(&dword_1C0771000, v6, v7, "StorageSystemStore(%s): collecting statistics");
    sub_1C07814E0();
    sub_1C0776778();
  }

  v8 = sub_1C077971C();
  v9 = MEMORY[0x1E0DEE9E0];
  v15 = MEMORY[0x1E0DEE9E0];
  v13 = 0;
  v14 = 1;
  MEMORY[0x1E0C80A78](v8);
  sub_1C0796804((uint64_t)v12);
  sub_1C07C050C((uint64_t)sub_1C0BD9CB4, (uint64_t)&v11);
  sub_1C07785A8();
  v12[4] = v9;
  v10 = sub_1C07ACF80(&qword_1EF641F10);
  sub_1C079E6B8(v10);
  sub_1C0798C84();
  if ((v14 & 1) == 0)
    sub_1C07A0FDC(v13);
  sub_1C07767AC();
  sub_1C0776760();
}

void sub_1C0BD8980()
{
  void *v0;
  uint64_t v1;
  os_log_type_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[5];
  uint64_t v13;
  char v14;
  uint64_t v15;

  if (qword_1ED762B20 != -1)
    swift_once();
  v1 = sub_1C077585C();
  sub_1C079E000(v1, (uint64_t)qword_1ED78D9F8);
  sub_1C0793118();
  sub_1C106F538();
  v2 = sub_1C0784E0C();
  if (sub_1C077AF00(v2))
  {
    sub_1C0775854();
    v12[0] = sub_1C0775854();
    sub_1C079B818(4.8149e-34);
    v3 = sub_1C07BC8E8();
    v5 = sub_1C079C5C0(v3, v4);
    sub_1C0793D6C(v5);
    sub_1C077971C();
    sub_1C0775844();
    sub_1C079E4D0(&dword_1C0771000, v6, v7, "StorageSystemStore(%s): collecting statistics");
    sub_1C07814E0();
    sub_1C0776778();
  }

  v8 = sub_1C077971C();
  v9 = MEMORY[0x1E0DEE9E0];
  v15 = MEMORY[0x1E0DEE9E0];
  v13 = 0;
  v14 = 1;
  MEMORY[0x1E0C80A78](v8);
  sub_1C0796804((uint64_t)v12);
  sub_1C07C050C((uint64_t)sub_1C0BD9CB4, (uint64_t)&v11);
  sub_1C07785A8();
  v12[4] = v9;
  v10 = sub_1C07ACF80(&qword_1EF641F10);
  sub_1C079E6B8(v10);
  sub_1C0798C84();
  if ((v14 & 1) == 0)
    sub_1C07A0FDC(v13);
  sub_1C07767AC();
  sub_1C0776760();
}

void sub_1C0BD8B34()
{
  sub_1C0BD8B48((uint64_t)&OBJC_IVAR____TtC24IntelligencePlatformCore23GlobalKnowledgeDatabase_pool, (uint64_t)sub_1C0BD9CB4);
}

void sub_1C0BD8B48(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[7];
  uint64_t v14;
  char v15;
  uint64_t v16;

  if (qword_1ED762B20 != -1)
    swift_once();
  v3 = sub_1C077585C();
  v4 = sub_1C079E000(v3, (uint64_t)qword_1ED78D9F8);
  swift_retain_n();
  sub_1C106F538();
  v5 = sub_1C0784E0C();
  if (os_log_type_enabled(v4, v5))
  {
    v13[1] = a2;
    v6 = (uint8_t *)sub_1C0775854();
    v13[2] = sub_1C0775854();
    *(_DWORD *)v6 = 136315138;
    swift_retain();
    v7 = sub_1C106FB5C();
    v14 = sub_1C079C5C0(v7, v8);
    sub_1C10705AC();
    sub_1C077F1F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0771000, v4, v5, "StorageSystemStore(%s): collecting statistics", v6, 0xCu);
    swift_arrayDestroy();
    sub_1C0776778();
  }

  v9 = sub_1C077F1F0();
  v10 = MEMORY[0x1E0DEE9E0];
  v16 = MEMORY[0x1E0DEE9E0];
  v14 = 0;
  v15 = 1;
  MEMORY[0x1E0C80A78](v9);
  sub_1C0796804((uint64_t)v13);
  sub_1C07C050C(a2, (uint64_t)&v12);
  sub_1C07785A8();
  v13[6] = v10;
  v11 = sub_1C07ACF80(&qword_1EF641F10);
  sub_1C079E6B8(v11);
  sub_1C0798C84();
  if ((v15 & 1) == 0)
    sub_1C07A0FDC(v14);
  sub_1C07767AC();
  sub_1C0776760();
}

void sub_1C0BD8D60(uint64_t a1)
{
  NSObject *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  os_log_type_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;

  v3 = sub_1C07ACF80(&qword_1ED75E630);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED75E808 != -1)
    swift_once();
  v6 = sub_1C077585C();
  v7 = sub_1C079E000(v6, (uint64_t)qword_1ED78D7A0);
  sub_1C077C0FC();
  v8 = sub_1C0784E0C();
  if (os_log_type_enabled(v1, v8))
  {
    v9 = (uint8_t *)sub_1C0775854();
    *(_WORD *)v9 = 0;
    sub_1C077F048(&dword_1C0771000, v1, v8, "LighthouseXPC: starting...", v9);
    sub_1C0776778();
  }

  if (qword_1ED7415C0 != -1)
    swift_once();
  v10 = sub_1C079E000(v3, (uint64_t)qword_1ED78C348);
  sub_1C078E3E0(a1, (uint64_t)v5);
  v11 = sub_1C0779D10();
  sub_1C07B2D8C((uint64_t)v5, 0, 1, v11);
  swift_beginAccess();
  sub_1C0800ADC((uint64_t)v5, v10);
  swift_endAccess();
  sub_1C0800B24();
  sub_1C0795B70();
  v12 = sub_1C0BBE34C();
  v13 = (void *)qword_1ED78C888;
  qword_1ED78C888 = (uint64_t)v12;

  v14 = (void *)qword_1ED78C888;
  if (qword_1ED78C888)
  {
    v15 = objc_allocWithZone((Class)type metadata accessor for LighthouseXPC.Delegate());
    v16 = v14;
    qword_1ED78C880 = (uint64_t)objc_msgSend(v15, sel_init);
    swift_unknownObjectRelease();
    -[NSObject setDelegate:](v16, sel_setDelegate_, qword_1ED78C880);
    -[NSObject resume](v16, sel_resume);
  }
  else
  {
    v17 = v7;
    v16 = sub_1C106F538();
    v18 = sub_1C107039C();
    if (sub_1C077F60C(v18))
    {
      v19 = (uint8_t *)sub_1C0775854();
      *(_WORD *)v19 = 0;
      sub_1C077F048(&dword_1C0771000, v16, v17, "Failed to create Lighthouse XPC service", v19);
      sub_1C0776778();
    }
  }

}

uint64_t sub_1C0BD8FDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1C07ACF80(&qword_1ED75E630);
  sub_1C0800A9C(v0, qword_1ED78C348);
  v1 = sub_1C079E000(v0, (uint64_t)qword_1ED78C348);
  v2 = type metadata accessor for Configuration();
  return sub_1C07B2D8C(v1, 1, 1, v2);
}

void sub_1C0BD903C(uint64_t a1, void (**a2)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v3 = sub_1C07ACF80(&qword_1ED75E630);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED7415C0 != -1)
    swift_once();
  v6 = sub_1C079E000(v3, (uint64_t)qword_1ED78C348);
  swift_beginAccess();
  sub_1C07B9D5C(v6, (uint64_t)v5);
  v7 = type metadata accessor for Configuration();
  if (sub_1C07B2D80((uint64_t)v5, 1, v7) == 1)
  {
    __break(1u);
  }
  else
  {
    type metadata accessor for GraphStore();
    swift_allocObject();
    GraphStore.init(config:)((uint64_t)v5);
    sub_1C0BD8B48((uint64_t)&OBJC_IVAR____TtC24IntelligencePlatformCore13GraphDatabase_pool, (uint64_t)sub_1C0BD9C94);
    v8 = (void *)sub_1C106F934();
    ((void (**)(_QWORD, void *, _QWORD))a2)[2](a2, v8, 0);
    swift_release();
    swift_bridgeObjectRelease();

    _Block_release(a2);
  }
}

void LighthouseXPC.Server.collectDBStats(completion:)()
{
  uint64_t v0;
  void *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;

  sub_1C07ACF80(&qword_1ED75E630);
  sub_1C0791398();
  MEMORY[0x1E0C80A78](v3);
  sub_1C0776794();
  if (qword_1ED7415C0 != -1)
    v4 = swift_once();
  sub_1C07ADF3C(v4, (uint64_t)qword_1ED78C348);
  sub_1C07A5F14();
  v5 = sub_1C0779D10();
  if (sub_1C07B2D80(v0, 1, v5) == 1)
  {
    __break(1u);
  }
  else
  {
    type metadata accessor for GraphStore();
    sub_1C077B5BC();
    sub_1C079522C();
    if (v1)
    {
      if (qword_1ED75E808 != -1)
        swift_once();
      v6 = sub_1C077585C();
      sub_1C079E000(v6, (uint64_t)qword_1ED78D7A0);
      v7 = sub_1C077C0FC();
      v8 = sub_1C1070390();
      if (sub_1C077AF00(v8))
      {
        v9 = (uint8_t *)sub_1C0775854();
        *(_WORD *)v9 = 0;
        sub_1C077F048(&dword_1C0771000, v7, v2, "Lighthouse XPC Service: Stats: failed to create GraphStore", v9);
        sub_1C0776778();
      }

      sub_1C079DCE4(0);
    }
    else
    {
      sub_1C0BD8B48((uint64_t)&OBJC_IVAR____TtC24IntelligencePlatformCore13GraphDatabase_pool, (uint64_t)sub_1C0BD9C94);
      sub_1C079DCE4(v10);
      swift_release();
      sub_1C0775844();
    }
    sub_1C07785E4();
  }
}

void sub_1C0BD9420(uint64_t a1, void (**a2)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v3 = sub_1C07ACF80(&qword_1ED75E630);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED7415C0 != -1)
    swift_once();
  v6 = sub_1C079E000(v3, (uint64_t)qword_1ED78C348);
  swift_beginAccess();
  sub_1C07B9D5C(v6, (uint64_t)v5);
  v7 = type metadata accessor for Configuration();
  if (sub_1C07B2D80((uint64_t)v5, 1, v7) == 1)
  {
    __break(1u);
  }
  else
  {
    type metadata accessor for GraphStore();
    swift_allocObject();
    GraphStore.init(config:)((uint64_t)v5);
    sub_1C0AC2BD4();
    v8 = (void *)sub_1C106F934();
    ((void (**)(_QWORD, void *, _QWORD))a2)[2](a2, v8, 0);
    swift_release();
    swift_bridgeObjectRelease();

    _Block_release(a2);
  }
}

void LighthouseXPC.Server.collectDBStatus(completion:)()
{
  uint64_t v0;
  void *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;

  sub_1C07ACF80(&qword_1ED75E630);
  sub_1C0791398();
  MEMORY[0x1E0C80A78](v3);
  sub_1C0776794();
  if (qword_1ED7415C0 != -1)
    v4 = swift_once();
  sub_1C07ADF3C(v4, (uint64_t)qword_1ED78C348);
  sub_1C07A5F14();
  v5 = sub_1C0779D10();
  if (sub_1C07B2D80(v0, 1, v5) == 1)
  {
    __break(1u);
  }
  else
  {
    type metadata accessor for GraphStore();
    sub_1C077B5BC();
    sub_1C079522C();
    if (v1)
    {
      if (qword_1ED75E808 != -1)
        swift_once();
      v6 = sub_1C077585C();
      sub_1C079E000(v6, (uint64_t)qword_1ED78D7A0);
      v7 = sub_1C077C0FC();
      v8 = sub_1C1070390();
      if (sub_1C077AF00(v8))
      {
        v9 = (uint8_t *)sub_1C0775854();
        *(_WORD *)v9 = 0;
        sub_1C077F048(&dword_1C0771000, v7, v2, "Lighthouse XPC Service: Status: failed to create GraphStore", v9);
        sub_1C0776778();
      }

      sub_1C079DCE4(0);
    }
    else
    {
      v10 = sub_1C0AC2BD4();
      sub_1C079DCE4(v10);
      swift_release();
      sub_1C0775844();
    }
    sub_1C07785E4();
  }
}

id LighthouseXPC.Server.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

uint64_t sub_1C0BD982C(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)();
  uint64_t v24;

  sub_1C07ACF80(&qword_1ED75E630);
  sub_1C0791398();
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED7415C0 != -1)
    v5 = swift_once();
  sub_1C07ADF3C(v5, (uint64_t)qword_1ED78C348);
  sub_1C07B9D5C(v2, (uint64_t)v7);
  v8 = sub_1C0779D10();
  result = sub_1C07B2D80((uint64_t)v7, 1, v8);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v10 = *(_QWORD *)&v7[*(int *)(v8 + 20)];
    sub_1C078D09C((uint64_t)v7);
    if ((v10 & 1) != 0)
    {
      if (qword_1ED75E808 != -1)
        swift_once();
      v16 = sub_1C077585C();
      sub_1C079E000(v16, (uint64_t)qword_1ED78D7A0);
      v17 = sub_1C077C0FC();
      v18 = sub_1C10703A8();
      if (sub_1C077F60C(v18))
      {
        v19 = (uint8_t *)sub_1C0775854();
        *(_WORD *)v19 = 0;
        sub_1C077F048(&dword_1C0771000, v17, (os_log_type_t)a2, "LighthouseXPC: service is in no-op mode.", v19);
        sub_1C0776778();
      }

    }
    else
    {
      sub_1C0795B70();
      if ((sub_1C0C47FA8() & 1) != 0)
      {
        v11 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_1EF6D61E0);
        sub_1C0784EE0((uint64_t)v11, sel_setExportedInterface_);

        v12 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for LighthouseXPC.Server()), sel_init);
        sub_1C0784EE0((uint64_t)v12, sel_setExportedObject_);

        v23 = sub_1C0BD9AB0;
        v24 = 0;
        v13 = MEMORY[0x1E0C809B0];
        v21 = MEMORY[0x1E0C809B0];
        v22 = 1107296256;
        v14 = sub_1C077E8F4((uint64_t)&unk_1E7A22E78);
        sub_1C0784EE0((uint64_t)v14, sel_setInterruptionHandler_);
        _Block_release(v14);
        v23 = sub_1C0BD9AC4;
        v24 = 0;
        v21 = v13;
        v22 = 1107296256;
        v15 = sub_1C077E8F4((uint64_t)&unk_1E7A22EA0);
        sub_1C0784EE0((uint64_t)v15, sel_setInvalidationHandler_);
        _Block_release(v15);
        objc_msgSend(a2, sel_resume);
        return 1;
      }
    }
    return 0;
  }
  return result;
}

void sub_1C0BD9AB0()
{
  sub_1C0BD9AD8(MEMORY[0x1E0DF2280], "Lighthouse XPC Service connection interrupted.");
}

void sub_1C0BD9AC4()
{
  sub_1C0BD9AD8(MEMORY[0x1E0DF2290], "Lighthouse XPC Service connection invalidated.");
}

void sub_1C0BD9AD8(uint64_t (*a1)(void), const char *a2)
{
  uint64_t v4;
  os_log_type_t v5;
  uint8_t *v6;
  NSObject *oslog;

  if (qword_1ED75E808 != -1)
    swift_once();
  v4 = sub_1C077585C();
  sub_1C079E000(v4, (uint64_t)qword_1ED78D7A0);
  oslog = sub_1C077C0FC();
  v5 = a1();
  if (os_log_type_enabled(oslog, v5))
  {
    v6 = (uint8_t *)sub_1C0775854();
    *(_WORD *)v6 = 0;
    sub_1C077F048(&dword_1C0771000, oslog, v5, a2, v6);
    sub_1C0776778();
  }
  sub_1C0787FDC(oslog);
}

uint64_t type metadata accessor for LighthouseXPC()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for LighthouseXPC.Server()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for LighthouseXPC.Delegate()
{
  return objc_opt_self();
}

uint64_t sub_1C0BD9C94(uint64_t a1)
{
  uint64_t v1;

  return sub_1C0D6E96C(a1, *(unint64_t **)(v1 + 16), *(_QWORD **)(v1 + 24));
}

uint64_t sub_1C0BD9CB4(uint64_t a1)
{
  return sub_1C0BD9C94(a1);
}

void sub_1C0BD9CCC()
{
  sub_1C0BDBB8C();
}

void sub_1C0BD9CE8()
{
  sub_1C0BDBAB0();
}

void sub_1C0BD9CFC()
{
  sub_1C0BDBB8C();
}

void sub_1C0BD9D18()
{
  sub_1C0BDBB8C();
}

void sub_1C0BD9D34()
{
  sub_1C0BDBB8C();
}

void sub_1C0BD9D50()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  sub_1C07AC19C();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1C0BE94FC() || (sub_1C0BE979C(), !(v6 ^ v4 | v5)))
  {
    sub_1C0BE968C();
    sub_1C07B7730();
    v2 = v7;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  sub_1C0BE94E8();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1C0789BEC();
  sub_1C0B97578();
  if (!v3)
  {
LABEL_11:
    sub_1C07767AC();
    *v1 = v2;
    sub_1C07785E4();
    return;
  }
  sub_1C07BA82C();
  if (!v4)
  {
    *(_QWORD *)(v2 + 16) = v8;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1C0BD9DE4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1C077B61C();
  sub_1C0775AE4();
  if (v3)
  {
    sub_1C07A1EAC();
    v0 = sub_1C0780AB0();
    sub_1C07767AC();
  }
  else
  {
    sub_1C07816A4();
  }
  sub_1C07AC000();
  if (v4)
  {
    sub_1C07BC8F8();
    v2 = sub_1C0BE964C();
    sub_1C0778580();
  }
  else
  {
    sub_1C0BE96E4();
  }
  if (__OFADD__(v2, v0))
  {
    __break(1u);
    goto LABEL_21;
  }
  sub_1C0BE9548();
  sub_1C07B6C48();
  if (!v5 || (v1 & 0x8000000000000000) != 0 || (v1 & 0x4000000000000000) != 0 || (sub_1C0788C40(), !(v8 ^ v9 | v7)))
  {
    if (!(v1 >> 62))
    {
      sub_1C0BE96F0();
      goto LABEL_12;
    }
LABEL_22:
    sub_1C078CC14();
    sub_1C0BE9618();
    sub_1C0778580();
LABEL_12:
    sub_1C077584C();
    sub_1C07A8130();
  }
  sub_1C0791E60(v6);
  sub_1C0BE9F70();
  if (v10 < v0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v10 < 1)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    sub_1C07A28FC();
    return;
  }
  sub_1C07B5AA4();
  if (!v9)
  {
    *(_QWORD *)(v11 + 16) = v12;
    goto LABEL_17;
  }
  __break(1u);
}

void sub_1C0BD9EF4(unint64_t a1)
{
  sub_1C0BDAE00(a1);
}

void sub_1C0BD9F18()
{
  sub_1C0BDBB8C();
}

void sub_1C0BD9F34(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v6 = *(_QWORD *)(a1 + 16);
  v7 = *v1;
  v8 = *(_QWORD *)(*v1 + 16);
  v9 = v8 + v6;
  if (__OFADD__(v8, v6))
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || (v10 = *(_QWORD *)(v7 + 24) >> 1, v10 < v9))
  {
    sub_1C07937D0();
    v7 = v11;
    sub_1C0BE9BC8();
  }
  v12 = v10 - *(_QWORD *)(v7 + 16);
  sub_1C08A3DEC();
  if (v13 < v6)
    goto LABEL_12;
  if (v13)
  {
    v15 = *(_QWORD *)(v7 + 16);
    v16 = __OFADD__(v15, v13);
    v17 = v15 + v13;
    if (v16)
    {
      __break(1u);
LABEL_46:
      v31 = v9 + 1;
      if (__OFADD__(v9, 1))
        goto LABEL_68;
      v37 = (unint64_t)(v14 + 64) >> 6;
      if (v31 >= v37)
        goto LABEL_10;
      if (!*(_QWORD *)(v38 + 8 * v31))
      {
        sub_1C08A6308();
        if (v24 == v16)
          goto LABEL_10;
        sub_1C0776ACC();
        if (!v32)
        {
          sub_1C08A6308();
          if (v24 == v16)
            goto LABEL_10;
          sub_1C0776ACC();
          if (!v33)
          {
            sub_1C08A6308();
            if (v24 == v16)
              goto LABEL_10;
            sub_1C0776ACC();
            if (!v34)
            {
              sub_1C077ED38();
              if (v24 == v16)
                goto LABEL_10;
              if (!*(_QWORD *)(v38 + 8 * v35))
              {
                while (1)
                {
                  sub_1C077ED38();
                  if (v24 == v16)
                    break;
                  if (*(_QWORD *)(v38 + 8 * v36))
                    goto LABEL_49;
                }
LABEL_10:
                sub_1C0827370();
                *v1 = v7;
                sub_1C08A5E68();
                return;
              }
            }
          }
        }
      }
LABEL_49:
      sub_1C0BE98C4();
      goto LABEL_15;
    }
    *(_QWORD *)(v7 + 16) = v17;
  }
  if (v13 != v12)
    goto LABEL_10;
LABEL_13:
  v3 = *(_QWORD *)(v7 + 16);
  v38 = v39;
  v14 = v40;
  v9 = v41;
  if (!v42)
    goto LABEL_46;
  sub_1C0786D84();
  v5 = v19 & v18;
  v37 = (unint64_t)(v20 + 64) >> 6;
LABEL_15:
  sub_1C0BE9ECC();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  while (1)
  {
    v21 = *(_QWORD *)(v7 + 24) >> 1;
    if (v21 < v3 + 1)
    {
      sub_1C07937D0();
      v7 = v30;
      v21 = *(_QWORD *)(v30 + 24) >> 1;
    }
    if (v3 < v21)
      break;
LABEL_43:
    *(_QWORD *)(v7 + 16) = v3;
  }
  while (1)
  {
    v22 = (_QWORD *)(v7 + 32 + 16 * v3);
    *v22 = v4;
    v22[1] = v2;
    ++v3;
    if (v5)
    {
      v5 &= v5 - 1;
      goto LABEL_40;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
      break;
    if (v23 >= v37)
      goto LABEL_44;
    if (!*(_QWORD *)(v38 + 8 * v23))
    {
      sub_1C08A6308();
      if (v24 == v16)
        goto LABEL_44;
      sub_1C0776ACC();
      if (!v25)
      {
        sub_1C08A6308();
        if (v24 == v16)
          goto LABEL_44;
        sub_1C0776ACC();
        if (!v26)
        {
          sub_1C08A6308();
          if (v24 == v16)
            goto LABEL_44;
          sub_1C0776ACC();
          if (!v27)
          {
            sub_1C077ED38();
            if (v24 == v16)
              goto LABEL_44;
            if (!*(_QWORD *)(v38 + 8 * v28))
            {
              while (1)
              {
                sub_1C077ED38();
                if (v24 == v16)
                  break;
                if (*(_QWORD *)(v38 + 8 * v29))
                  goto LABEL_39;
              }
LABEL_44:
              *(_QWORD *)(v7 + 16) = v3;
              goto LABEL_10;
            }
          }
        }
      }
    }
LABEL_39:
    sub_1C0BE98C4();
LABEL_40:
    sub_1C0BE9ECC();
    if (v3 >= v21)
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      goto LABEL_43;
    }
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  __break(1u);
LABEL_68:
  __break(1u);
}

void sub_1C0BDA240()
{
  sub_1C0BDBB8C();
}

void sub_1C0BDA25C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1C07AC19C();
  if (v5)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1C0BE94FC() || (v6 = *(_QWORD *)(v2 + 24) >> 1, v6 < v4))
  {
    sub_1C0BE968C();
    sub_1C07EBC34();
    v2 = v7;
    sub_1C0BE9BC8();
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  if (v6 - *(_QWORD *)(v2 + 16) < v3)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = sub_1C0789BEC();
  sub_1C0B98064(v8, v9);
  if (!v3)
  {
LABEL_11:
    sub_1C07767AC();
    *v1 = v2;
    sub_1C07785E4();
    return;
  }
  sub_1C07BA82C();
  if (!v5)
  {
    *(_QWORD *)(v2 + 16) = v10;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1C0BDA308()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1C07AC19C();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1C0BE94FC() || (sub_1C0BE979C(), !(v6 ^ v4 | v5)))
  {
    sub_1C0BE968C();
    sub_1C07EBCF8();
    v2 = v7;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  sub_1C0BE94E8();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = sub_1C0789BEC();
  sub_1C0B97EA8(v8, v9);
  if (!v3)
  {
LABEL_11:
    sub_1C07767AC();
    *v1 = v2;
    sub_1C07785E4();
    return;
  }
  sub_1C07BA82C();
  if (!v4)
  {
    *(_QWORD *)(v2 + 16) = v10;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1C0BDA39C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1C07AC19C();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1C0BE94FC() || (sub_1C0BE979C(), !(v6 ^ v4 | v5)))
  {
    sub_1C0BE968C();
    sub_1C07EBC10();
    v2 = v7;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  sub_1C0BE94E8();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = sub_1C0789BEC();
  sub_1C0B97F38(v8, v9);
  if (!v3)
  {
LABEL_11:
    sub_1C07767AC();
    *v1 = v2;
    sub_1C07785E4();
    return;
  }
  sub_1C07BA82C();
  if (!v4)
  {
    *(_QWORD *)(v2 + 16) = v10;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1C0BDA434()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1C077B61C();
  sub_1C0775AE4();
  if (v3)
  {
    sub_1C07A1EAC();
    v0 = sub_1C0780AB0();
    sub_1C07767AC();
  }
  else
  {
    sub_1C07816A4();
  }
  sub_1C07AC000();
  if (v4)
  {
    sub_1C07BC8F8();
    v2 = sub_1C0BE964C();
    sub_1C0778580();
  }
  else
  {
    sub_1C0BE96E4();
  }
  if (__OFADD__(v2, v0))
  {
    __break(1u);
    goto LABEL_21;
  }
  sub_1C0BE9548();
  sub_1C07B6C48();
  if (!v5 || (v1 & 0x8000000000000000) != 0 || (v1 & 0x4000000000000000) != 0 || (sub_1C0788C40(), !(v8 ^ v9 | v7)))
  {
    if (!(v1 >> 62))
    {
      sub_1C0BE96F0();
      goto LABEL_12;
    }
LABEL_22:
    sub_1C078CC14();
    sub_1C0BE9618();
    sub_1C0778580();
LABEL_12:
    sub_1C077584C();
    sub_1C07A8130();
  }
  sub_1C0791E60(v6);
  sub_1C0BE9948();
  if (v10 < v0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v10 < 1)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    sub_1C07A28FC();
    return;
  }
  sub_1C07B5AA4();
  if (!v9)
  {
    *(_QWORD *)(v11 + 16) = v12;
    goto LABEL_17;
  }
  __break(1u);
}

void sub_1C0BDA544()
{
  sub_1C0BDBB8C();
}

void sub_1C0BDA560()
{
  sub_1C0BDBB8C();
}

void sub_1C0BDA57C()
{
  sub_1C0BDBB8C();
}

void sub_1C0BDA598()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1C07AC19C();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1C0BE94FC() || (sub_1C0BE979C(), !(v6 ^ v4 | v5)))
  {
    sub_1C0BEA044();
    v2 = v7;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  sub_1C0BE94E8();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = sub_1C0789BEC();
  sub_1C0B97AD8(v8, v9);
  if (!v3)
  {
LABEL_11:
    sub_1C07767AC();
    *v1 = v2;
    sub_1C07785E4();
    return;
  }
  sub_1C07BA82C();
  if (!v4)
  {
    *(_QWORD *)(v2 + 16) = v10;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1C0BDA628()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  sub_1C0779670();
  v4 = v3 >> 1;
  v5 = (v3 >> 1) - v2;
  if (__OFSUB__(v3 >> 1, v2))
  {
    __break(1u);
    goto LABEL_15;
  }
  v6 = *v0;
  v7 = *(_QWORD *)(*v0 + 16);
  if (__OFADD__(v7, v5))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v8 = v2;
  v9 = v1;
  if (!sub_1C0BE94FC() || (v10 = *(_QWORD *)(v6 + 24) >> 1, v10 < v7 + v5))
  {
    sub_1C0BEA044();
    v6 = v11;
    sub_1C0BE9BC8();
  }
  if (v4 == v8)
  {
    if (v5 <= 0)
    {
LABEL_13:
      swift_unknownObjectRelease();
      *v0 = v6;
      sub_1C0776760();
      return;
    }
    __break(1u);
  }
  if (v10 - *(_QWORD *)(v6 + 16) < v5)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  sub_1C0B97AD8(v9 + 4 * v8, v5);
  if (v5 <= 0)
    goto LABEL_13;
  sub_1C07BA82C();
  if (!v13)
  {
    *(_QWORD *)(v6 + 16) = v12;
    goto LABEL_13;
  }
LABEL_17:
  __break(1u);
}

void sub_1C0BDA6FC()
{
  sub_1C0BDBB8C();
}

void sub_1C0BDA718()
{
  sub_1C0BDBAB0();
}

void sub_1C0BDA72C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1C07AC19C();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1C0BE94FC() || (sub_1C0BE979C(), !(v6 ^ v4 | v5)))
  {
    sub_1C0BE968C();
    sub_1C07EABAC();
    v2 = v7;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  sub_1C0BE94E8();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = sub_1C0789BEC();
  sub_1C0B9755C(v8, v9);
  if (!v3)
  {
LABEL_11:
    sub_1C07767AC();
    *v1 = v2;
    sub_1C07785E4();
    return;
  }
  sub_1C07BA82C();
  if (!v4)
  {
    *(_QWORD *)(v2 + 16) = v10;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1C0BDA7C0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t);
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  sub_1C0779670();
  v87 = v1;
  v88 = v2;
  v4 = v3;
  v5 = sub_1C0776744();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  sub_1C077AE40();
  v81 = v7;
  sub_1C07ACF80(&qword_1ED7618D0);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v73 - v14;
  v16 = *(_QWORD *)(v4 + 16);
  v17 = *v0;
  v18 = *(_QWORD *)(*v0 + 16);
  if (__OFADD__(v18, v16))
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v80 = v13;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v0 = v17;
  if (!isUniquelyReferenced_nonNull_native || (v20 = *(_QWORD *)(v17 + 24) >> 1, v20 < v18 + v16))
  {
    sub_1C07EC428();
    v17 = v21;
    *v0 = v21;
    sub_1C0BE9BC8();
  }
  v18 = *(_QWORD *)(v6 + 72);
  v22 = v20 - *(_QWORD *)(v17 + 16);
  v79 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  sub_1C08A48C8();
  if (v23 < v16)
    goto LABEL_12;
  if (v23)
  {
    v24 = *(_QWORD *)(v17 + 16);
    v25 = __OFADD__(v24, v23);
    v26 = v24 + v23;
    if (v25)
    {
      __break(1u);
LABEL_63:
      v77 = v86;
      v78 = v85;
LABEL_64:
      sub_1C0BE9438((uint64_t)v15);
      sub_1C0BE9FF4();
      sub_1C0827370();
      sub_1C0BE9438(v80);
      sub_1C0776760();
      return;
    }
    *(_QWORD *)(v17 + 16) = v26;
  }
  if (v23 != v22)
  {
    sub_1C0827370();
    return;
  }
LABEL_13:
  v27 = *(_QWORD *)(v17 + 16);
  v28 = v82;
  v29 = v83;
  v30 = v84;
  v78 = v85;
  if (v86)
  {
    sub_1C0786D84();
    v77 = v32 & v31;
    v35 = v33 | (v34 << 6);
    goto LABEL_15;
  }
  if (!__OFADD__(v85, 1))
  {
    sub_1C0BE9DE0();
    if (v60 == v25)
    {
      v77 = 0;
      v37 = 1;
      goto LABEL_16;
    }
    v44 = v30;
    v43 = v28;
    v45 = v29;
    v70 = *(_QWORD *)(v29 + 8 * v56);
    if (v70)
      goto LABEL_69;
    v42 = v56 + 1;
    if (v56 + 1 < v41)
    {
      v70 = *(_QWORD *)(v29 + 8 * v42);
      if (!v70)
        goto LABEL_74;
LABEL_72:
      v56 = v42;
      goto LABEL_69;
    }
LABEL_86:
    v77 = 0;
    v78 = v56;
LABEL_87:
    v37 = 1;
    v28 = v43;
    v29 = v45;
    v30 = v44;
    while (1)
    {
LABEL_16:
      v76 = v30;
      sub_1C0BE9BD4(v36, v37);
      v82 = v28;
      v83 = v29;
      v84 = v30;
      v85 = v78;
      v86 = v77;
      sub_1C0BE9E14((uint64_t)v15);
      sub_1C0797E50(v28);
      if (v38)
        goto LABEL_64;
      v39 = v80;
      while (1)
      {
        sub_1C0BE9438(v39);
        v40 = *v0;
        v75 = *(_QWORD *)(*v0 + 24) >> 1;
        if (v75 < v27 + 1)
        {
          sub_1C07EC428();
          v40 = v68;
          *v0 = v68;
          sub_1C0BE9BC8();
          v75 = v69;
        }
        v39 = v81;
        sub_1C0BE9F64();
        sub_1C0797E50((uint64_t)v10);
        if (!v38)
          break;
LABEL_22:
        sub_1C0BE9438((uint64_t)v10);
LABEL_59:
        *(_QWORD *)(*v0 + 16) = v27;
        sub_1C0BE9E14((uint64_t)v15);
        sub_1C0797E50(v39);
        if (v38)
          goto LABEL_63;
      }
      v73 = *(_QWORD *)(v6 + 32);
      v74 = v40 + v79;
      while (1)
      {
        sub_1C078506C(v39, (uint64_t)v10);
        if (v27 >= v75)
        {
          v66 = sub_1C077B200();
          v67(v66);
          goto LABEL_59;
        }
        sub_1C0BE9438((uint64_t)v15);
        v36 = sub_1C078506C(v74 + v27 * v18, v39);
        v43 = v82;
        v44 = v83;
        v45 = v84;
        v46 = v85;
        v77 = v27;
        v78 = v83;
        v76 = v84;
        if (v86)
        {
          sub_1C0786D84();
          v50 = v49 & v48;
          v52 = v51 | (v46 << 6);
          goto LABEL_26;
        }
        v56 = v85 + 1;
        if (__OFADD__(v85, 1))
          break;
        sub_1C0BE9DE0();
        if (v60 == v25)
        {
          v50 = 0;
          v55 = 1;
LABEL_32:
          v53 = v47;
          goto LABEL_33;
        }
        v61 = *(_QWORD *)(v59 + 8 * v57);
        if (!v61)
        {
          if (v57 + 1 >= v58)
          {
            v50 = 0;
            v55 = 1;
            v46 = v57;
            goto LABEL_32;
          }
          v61 = *(_QWORD *)(v59 + 8 * (v57 + 1));
          if (v61)
          {
            ++v57;
          }
          else
          {
            if (v57 + 2 >= v58)
            {
              v50 = 0;
              v55 = 1;
              v46 = v57 + 1;
              goto LABEL_32;
            }
            v61 = *(_QWORD *)(v59 + 8 * (v57 + 2));
            if (v61)
            {
              v57 += 2;
            }
            else
            {
              v62 = v47;
              if (v57 + 3 >= v58)
              {
                v50 = 0;
                v55 = 1;
                v46 = v57 + 2;
LABEL_49:
                v53 = v62;
                goto LABEL_33;
              }
              v61 = *(_QWORD *)(v59 + 8 * (v57 + 3));
              if (v61)
              {
                v57 += 3;
LABEL_47:
                v47 = v62;
              }
              else
              {
                sub_1C0BE9D98();
                if (v60 == v25)
                {
                  v50 = 0;
                  v55 = 1;
                  v46 = v64;
                  goto LABEL_49;
                }
                v61 = *(_QWORD *)(v78 + 8 * v57);
                v47 = v62;
                if (!v61)
                {
                  v65 = v46 + 6;
                  while (v65 < v63)
                  {
                    v61 = *(_QWORD *)(v78 + 8 * v65++);
                    if (v61)
                    {
                      v57 = v65 - 1;
                      goto LABEL_47;
                    }
                  }
                  v50 = 0;
                  v55 = 1;
                  v46 = v63 - 1;
                  goto LABEL_49;
                }
              }
            }
          }
        }
        v50 = (v61 - 1) & v61;
        v52 = __clz(__rbit64(v61)) + (v57 << 6);
        v46 = v57;
LABEL_26:
        v53 = v47;
        v54 = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v6 + 16))(v15, *(_QWORD *)(v47 + 48) + v52 * v18, v5);
        v55 = 0;
LABEL_33:
        v27 = v77 + 1;
        sub_1C0BE9BD4(v54, v55);
        v82 = v53;
        v83 = v78;
        v84 = v76;
        v85 = v46;
        v86 = v50;
        sub_1C0BE9F64();
        sub_1C0797E50((uint64_t)v10);
        v39 = v81;
        if (v38)
          goto LABEL_22;
      }
      __break(1u);
LABEL_74:
      if (v56 + 2 >= v41)
      {
LABEL_88:
        v77 = 0;
        v78 = v42;
        goto LABEL_87;
      }
      v70 = *(_QWORD *)(v45 + 8 * (v56 + 2));
      if (v70)
      {
        v56 += 2;
        goto LABEL_69;
      }
      v42 = v56 + 3;
      if (v56 + 3 >= v41)
      {
        v77 = 0;
        v78 = v56 + 2;
        goto LABEL_87;
      }
      v70 = *(_QWORD *)(v45 + 8 * v42);
      if (v70)
        goto LABEL_72;
      sub_1C0BE9D98();
      if (v60 == v25)
        goto LABEL_88;
      v70 = *(_QWORD *)(v45 + 8 * v56);
      if (!v70)
      {
        v56 = v71 - 1;
        v72 = v78 + 6;
        while (v72 < v71)
        {
          v70 = *(_QWORD *)(v45 + 8 * v72++);
          if (v70)
          {
            v56 = v72 - 1;
            goto LABEL_69;
          }
        }
        goto LABEL_86;
      }
LABEL_69:
      v77 = (v70 - 1) & v70;
      v78 = v56;
      v35 = __clz(__rbit64(v70)) + (v56 << 6);
      v28 = v43;
      v29 = v45;
      v30 = v44;
LABEL_15:
      v36 = sub_1C078A72C((uint64_t)v15, *(_QWORD *)(v28 + 48) + v35 * v18, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
      v37 = 0;
    }
  }
  __break(1u);
}

void sub_1C0BDADC0()
{
  sub_1C0BDBB8C();
}

void sub_1C0BDADDC(unint64_t a1)
{
  sub_1C0BDAE00(a1);
}

void sub_1C0BDAE00(unint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  if (a1 >> 62)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v2 = sub_1C10709B4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = *v1;
  if (*v1 >> 62)
  {
    sub_1C07767C4();
    v4 = sub_1C10709B4();
    sub_1C0775894();
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_24;
  }
  v3 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v3;
  v4 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v3 & 0x8000000000000000) == 0 && (v3 & 0x4000000000000000) == 0)
  {
    v7 = v3 & 0xFFFFFFFFFFFFFF8;
    if (v5 <= *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_16;
    v4 = 1;
  }
  v13 = v2;
  if (v3 >> 62)
    goto LABEL_25;
  v8 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v8 <= v5)
      v8 = v5;
    sub_1C07767C4();
    v3 = MEMORY[0x1C3BA70E8](v4, v8, 1, v3);
    swift_bridgeObjectRelease();
    *v1 = v3;
    v7 = v3 & 0xFFFFFFFFFFFFFF8;
    v2 = v13;
LABEL_16:
    sub_1C0791E60(v7);
    sub_1C0BE9100();
    if (v9 >= v2)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    sub_1C07767C4();
    v8 = sub_1C10709B4();
    sub_1C0775894();
  }
  if (v9 < 1)
    goto LABEL_20;
  sub_1C07B5AA4();
  if (!v12)
  {
    *(_QWORD *)(v10 + 16) = v11;
LABEL_20:
    swift_bridgeObjectRelease();
    sub_1C106FF28();
    return;
  }
  __break(1u);
}

void sub_1C0BDAFDC()
{
  sub_1C0BDBB8C();
}

void sub_1C0BDAFF8()
{
  sub_1C0BDBB8C();
}

void sub_1C0BDB014()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  sub_1C07AC19C();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1C0BE94FC() || (sub_1C0BE979C(), !(v6 ^ v4 | v5)))
  {
    sub_1C0BE968C();
    sub_1C07EB9B4();
    v2 = v7;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  sub_1C0BE94E8();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1C0789BEC();
  sub_1C0B97B7C();
  if (!v3)
  {
LABEL_11:
    sub_1C07767AC();
    *v1 = v2;
    sub_1C07785E4();
    return;
  }
  sub_1C07BA82C();
  if (!v4)
  {
    *(_QWORD *)(v2 + 16) = v8;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1C0BDB0AC()
{
  sub_1C0BDBB8C();
}

void sub_1C0BDB0C8()
{
  sub_1C0BDBAB0();
}

void sub_1C0BDB0DC()
{
  sub_1C0BDBB8C();
}

void sub_1C0BDB0F8()
{
  sub_1C0BDBB8C();
}

void sub_1C0BDB114()
{
  sub_1C0BDBB8C();
}

void sub_1C0BDB130()
{
  sub_1C0BDBB8C();
}

void sub_1C0BDB14C()
{
  sub_1C0BDBAB0();
}

void sub_1C0BDB160()
{
  sub_1C0BDBAB0();
}

void sub_1C0BDB174()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1C077B61C();
  sub_1C0775AE4();
  if (v3)
  {
    sub_1C07A1EAC();
    v0 = sub_1C0780AB0();
    sub_1C07767AC();
  }
  else
  {
    sub_1C07816A4();
  }
  sub_1C07AC000();
  if (v4)
  {
    sub_1C07BC8F8();
    v2 = sub_1C0BE964C();
    sub_1C0778580();
  }
  else
  {
    sub_1C0BE96E4();
  }
  if (__OFADD__(v2, v0))
  {
    __break(1u);
    goto LABEL_21;
  }
  sub_1C0BE9548();
  sub_1C07B6C48();
  if (!v5 || (v1 & 0x8000000000000000) != 0 || (v1 & 0x4000000000000000) != 0 || (sub_1C0788C40(), !(v8 ^ v9 | v7)))
  {
    if (!(v1 >> 62))
    {
      sub_1C0BE96F0();
      goto LABEL_12;
    }
LABEL_22:
    sub_1C078CC14();
    sub_1C0BE9618();
    sub_1C0778580();
LABEL_12:
    sub_1C077584C();
    sub_1C07A8130();
  }
  sub_1C0791E60(v6);
  sub_1C0BE9948();
  if (v10 < v0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v10 < 1)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    sub_1C07A28FC();
    return;
  }
  sub_1C07B5AA4();
  if (!v9)
  {
    *(_QWORD *)(v11 + 16) = v12;
    goto LABEL_17;
  }
  __break(1u);
}

void sub_1C0BDB284()
{
  sub_1C0BDBAB0();
}

void sub_1C0BDB298()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  sub_1C07AC19C();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1C0BE94FC() || (sub_1C0BE979C(), !(v6 ^ v4 | v5)))
  {
    sub_1C0BE968C();
    sub_1C07ECE50();
    v2 = v7;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  sub_1C0BE94E8();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = sub_1C0789BEC();
  sub_1C0B98F70(v8, v9, v10);
  if (!v3)
  {
LABEL_11:
    sub_1C07767AC();
    *v1 = v2;
    sub_1C07785E4();
    return;
  }
  sub_1C07BA82C();
  if (!v4)
  {
    *(_QWORD *)(v2 + 16) = v11;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1C0BDB330()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1C077B61C();
  sub_1C0775AE4();
  if (v3)
  {
    sub_1C07A1EAC();
    v0 = sub_1C0780AB0();
    sub_1C07767AC();
  }
  else
  {
    sub_1C07816A4();
  }
  sub_1C07AC000();
  if (v4)
  {
    sub_1C07BC8F8();
    v2 = sub_1C0BE964C();
    sub_1C0778580();
  }
  else
  {
    sub_1C0BE96E4();
  }
  if (__OFADD__(v2, v0))
  {
    __break(1u);
    goto LABEL_21;
  }
  sub_1C0BE9548();
  sub_1C07B6C48();
  if (!v5 || (v1 & 0x8000000000000000) != 0 || (v1 & 0x4000000000000000) != 0 || (sub_1C0788C40(), !(v8 ^ v9 | v7)))
  {
    if (!(v1 >> 62))
    {
      sub_1C0BE96F0();
      goto LABEL_12;
    }
LABEL_22:
    sub_1C078CC14();
    sub_1C0BE9618();
    sub_1C0778580();
LABEL_12:
    sub_1C077584C();
    sub_1C07A8130();
  }
  sub_1C0791E60(v6);
  sub_1C0BE9F70();
  if (v10 < v0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v10 < 1)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    sub_1C07A28FC();
    return;
  }
  sub_1C07B5AA4();
  if (!v9)
  {
    *(_QWORD *)(v11 + 16) = v12;
    goto LABEL_17;
  }
  __break(1u);
}

void sub_1C0BDB440(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  unint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v10;
  char v11;
  char v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  unint64_t v57;

  v5 = v1;
  v6 = a1;
  v7 = sub_1C0BE8FB4(a1);
  if (*v5 >> 62)
  {
    sub_1C07BC8F8();
    v2 = sub_1C0BE964C();
    sub_1C0778580();
  }
  else
  {
    sub_1C0BE96E4();
  }
  if (__OFADD__(v2, v7))
  {
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v8 = *v5;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v5 = v8;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v8 & 0x8000000000000000) != 0
    || (v8 & 0x4000000000000000) != 0
    || (sub_1C0788C40(), !(v12 ^ v13 | v11)))
  {
    if (v8 >> 62)
    {
      sub_1C078CC14();
      sub_1C0BE9618();
      sub_1C0778580();
    }
    else
    {
      sub_1C0BE96F0();
    }
    sub_1C077584C();
    sub_1C07A8130();
  }
  v14 = *(_QWORD *)(v10 + 16);
  v15 = (*(_QWORD *)(v10 + 24) >> 1) - v14;
  sub_1C08A51D4(&v53, (_QWORD *)(v10 + 8 * v14 + 32), v15, v6);
  if (v16 < v7)
    goto LABEL_19;
  if (v16 >= 1)
  {
    sub_1C0BE9FDC();
    v18 = *(_QWORD *)(v17 + 16);
    v13 = __OFADD__(v18, v16);
    v19 = v18 + v16;
    if (v13)
    {
      __break(1u);
LABEL_27:
      v6 = v7 & 0x7FFFFFFFFFFFFFFFLL;
      if (!sub_1C10706B4())
        goto LABEL_16;
      sub_1C0BE9C80();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      sub_1C0BE9FA8();
LABEL_29:
      if (!v3)
        goto LABEL_16;
      while (1)
      {
        sub_1C0BE9FDC();
        if (v4 + 1 > *(_QWORD *)(v23 + 24) >> 1)
        {
          v6 = (uint64_t)v5;
          sub_1C106FF58();
          sub_1C0BE9FDC();
        }
        v24 = *(_QWORD *)(v23 + 24);
        if (v4 < (uint64_t)(v24 >> 1))
          break;
LABEL_66:
        *(_QWORD *)(v23 + 16) = v4;
      }
      v25 = v24 >> 1;
      v26 = v23 + 32;
      while (1)
      {
        *(_QWORD *)(v26 + 8 * v4++) = v3;
        v27 = v53;
        v3 = v55;
        v28 = v56;
        if (v53 < 0)
        {
          v6 = v53 & 0x7FFFFFFFFFFFFFFFLL;
          if (!sub_1C10706B4())
            goto LABEL_67;
          sub_1C0BE9C80();
          swift_unknownObjectRetain();
          swift_dynamicCast();
          sub_1C0BE9FA8();
          goto LABEL_41;
        }
        if (v57)
        {
          v6 = (v57 - 1) & v57;
          v29 = __clz(__rbit64(v57)) | (v56 << 6);
        }
        else
        {
          if (__OFADD__(v56, 1))
          {
            __break(1u);
LABEL_91:
            sub_1C0BE976C();
            v20 = v52;
LABEL_24:
            v56 = v20;
            v57 = v6;
            goto LABEL_29;
          }
          sub_1C0BE9DE0();
          if (v12 == v13)
          {
            sub_1C0BE976C();
            goto LABEL_38;
          }
          if (!*(_QWORD *)(v54 + 8 * v31))
          {
            if (v31 + 1 >= v32)
              goto LABEL_63;
            if (!*(_QWORD *)(v54 + 8 * (v31 + 1)))
            {
              if (v31 + 2 >= v32)
                goto LABEL_64;
              if (!*(_QWORD *)(v54 + 8 * (v31 + 2)))
              {
                if (v31 + 3 >= v32)
                {
                  sub_1C0BE976C();
                  v28 = v41;
                  goto LABEL_38;
                }
                if (!*(_QWORD *)(v54 + 8 * (v31 + 3)))
                {
                  sub_1C0BE9D98();
                  if (v12 == v13)
                  {
LABEL_64:
                    sub_1C0BE976C();
                    v28 = v40;
                    goto LABEL_38;
                  }
                  if (!*(_QWORD *)(v36 + 8 * v34))
                  {
                    v37 = v28 + 6;
                    while (v37 < v35)
                    {
                      if (*(_QWORD *)(v36 + 8 * v37++))
                        goto LABEL_48;
                    }
LABEL_63:
                    sub_1C0BE976C();
                    v28 = v39;
                    goto LABEL_38;
                  }
                }
              }
            }
          }
LABEL_48:
          sub_1C0BE9BF0();
          v28 = v33;
        }
        v3 = *(void **)(*(_QWORD *)(v27 + 48) + 8 * v29);
        v30 = v3;
LABEL_38:
        v56 = v28;
        v57 = v6;
LABEL_41:
        if (!v3)
        {
LABEL_67:
          *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFF8) + 0x10) = v4;
          goto LABEL_16;
        }
        if (v4 >= v25)
        {
          sub_1C0BE9FDC();
          goto LABEL_66;
        }
      }
    }
    *(_QWORD *)(v17 + 16) = v19;
  }
  if (v16 != v15)
  {
LABEL_16:
    sub_1C0827370();
    sub_1C106FF28();
    sub_1C08A5E68();
    return;
  }
LABEL_20:
  v4 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  v7 = v53;
  v20 = v56;
  v3 = (void *)v57;
  if (v53 < 0)
    goto LABEL_27;
  if (v57)
  {
    v6 = (v57 - 1) & v57;
    v21 = __clz(__rbit64(v57)) | (v56 << 6);
LABEL_23:
    v3 = *(void **)(*(_QWORD *)(v7 + 48) + 8 * v21);
    v22 = v3;
    goto LABEL_24;
  }
  if (!__OFADD__(v56, 1))
  {
    sub_1C0BE9DE0();
    if (v12 == v13)
    {
      sub_1C0BE976C();
      goto LABEL_24;
    }
    if (*(_QWORD *)(v54 + 8 * v42))
      goto LABEL_73;
    if (v42 + 1 < v43)
    {
      if (*(_QWORD *)(v54 + 8 * (v42 + 1)))
        goto LABEL_73;
      if (v42 + 2 >= v43)
        goto LABEL_89;
      if (*(_QWORD *)(v54 + 8 * (v42 + 2)))
        goto LABEL_73;
      if (v42 + 3 >= v43)
        goto LABEL_91;
      if (*(_QWORD *)(v54 + 8 * (v42 + 3)))
        goto LABEL_73;
      sub_1C0BE9D98();
      if (v12 == v13)
      {
LABEL_89:
        sub_1C0BE976C();
        v20 = v51;
        goto LABEL_24;
      }
      if (*(_QWORD *)(v47 + 8 * v45))
      {
LABEL_73:
        sub_1C0BE9BF0();
        v20 = v44;
        goto LABEL_23;
      }
      v48 = v20 + 6;
      while (v48 < v46)
      {
        if (*(_QWORD *)(v47 + 8 * v48++))
          goto LABEL_73;
      }
    }
    sub_1C0BE976C();
    v20 = v50;
    goto LABEL_24;
  }
  __break(1u);
}

void sub_1C0BDB908()
{
  sub_1C0BDBB8C();
}

void sub_1C0BDB924()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1C077B61C();
  sub_1C0775AE4();
  if (v3)
  {
    sub_1C07A1EAC();
    v0 = sub_1C0780AB0();
    sub_1C07767AC();
  }
  else
  {
    sub_1C07816A4();
  }
  sub_1C07AC000();
  if (v4)
  {
    sub_1C07BC8F8();
    v2 = sub_1C0BE964C();
    sub_1C0778580();
  }
  else
  {
    sub_1C0BE96E4();
  }
  if (__OFADD__(v2, v0))
  {
    __break(1u);
    goto LABEL_21;
  }
  sub_1C0BE9548();
  sub_1C07B6C48();
  if (!v5 || (v1 & 0x8000000000000000) != 0 || (v1 & 0x4000000000000000) != 0 || (sub_1C0788C40(), !(v8 ^ v9 | v7)))
  {
    if (!(v1 >> 62))
    {
      sub_1C0BE96F0();
      goto LABEL_12;
    }
LABEL_22:
    sub_1C078CC14();
    sub_1C0BE9618();
    sub_1C0778580();
LABEL_12:
    sub_1C077584C();
    sub_1C07A8130();
  }
  sub_1C0791E60(v6);
  sub_1C0BE9948();
  if (v10 < v0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v10 < 1)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    sub_1C07A28FC();
    return;
  }
  sub_1C07B5AA4();
  if (!v9)
  {
    *(_QWORD *)(v11 + 16) = v12;
    goto LABEL_17;
  }
  __break(1u);
}

void sub_1C0BDBA34()
{
  sub_1C0BDBB8C();
}

void sub_1C0BDBA50()
{
  sub_1C0BDBAB0();
}

void sub_1C0BDBA64()
{
  sub_1C0BDBB8C();
}

void sub_1C0BDBA80()
{
  sub_1C0BDBB8C();
}

void sub_1C0BDBA9C()
{
  sub_1C0BDBAB0();
}

void sub_1C0BDBAB0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t (*v2)(void);
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t (*v9)(void);
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  sub_1C077B61C();
  v5 = *(_QWORD *)(v4 + 16);
  v6 = *v1;
  v7 = *(_QWORD *)(*v1 + 16);
  if (__OFADD__(v7, v5))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v8 = v3;
  v9 = v2;
  if (!sub_1C0BE94FC() || v7 + v5 > *(_QWORD *)(v6 + 24) >> 1)
  {
    sub_1C0BE968C();
    v6 = v9();
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v5)
      goto LABEL_11;
    goto LABEL_13;
  }
  sub_1C0BE94E8();
  if (v10 != v11)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v12 = sub_1C0789BEC();
  v8(v12);
  if (!v5)
  {
LABEL_11:
    sub_1C07767AC();
    *v1 = v6;
    return;
  }
  sub_1C07BA82C();
  if (!v11)
  {
    *(_QWORD *)(v6 + 16) = v13;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1C0BDBB70()
{
  sub_1C0BDBB8C();
}

void sub_1C0BDBB8C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t (*v2)(void);
  void (*v3)(unint64_t, uint64_t, unint64_t);
  uint64_t (*v4)(_QWORD);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD);
  void (*v10)(unint64_t, uint64_t, unint64_t);
  uint64_t (*v11)(void);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;

  sub_1C0779670();
  v6 = *(_QWORD *)(v5 + 16);
  v7 = *v1;
  v8 = *(_QWORD *)(*v1 + 16);
  if (__OFADD__(v8, v6))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v9 = v4;
  v10 = v3;
  v11 = v2;
  if (!sub_1C0BE94FC() || v8 + v6 > *(_QWORD *)(v7 + 24) >> 1)
  {
    sub_1C0BE968C();
    v7 = v11();
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v6)
      goto LABEL_11;
    goto LABEL_13;
  }
  v12 = *(_QWORD *)(v7 + 16);
  v13 = (*(_QWORD *)(v7 + 24) >> 1) - v12;
  v14 = v9(0);
  if (v13 < v6)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v15 = *(_QWORD *)(v14 - 8);
  v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v10(v0 + v16, v6, v7 + v16 + *(_QWORD *)(v15 + 72) * v12);
  if (!v6)
  {
LABEL_11:
    sub_1C07767AC();
    *v1 = v7;
    sub_1C0776760();
    return;
  }
  sub_1C07BA82C();
  if (!v18)
  {
    *(_QWORD *)(v7 + 16) = v17;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1C0BDBC6C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1C077B61C();
  sub_1C0775AE4();
  if (v3)
  {
    sub_1C07A1EAC();
    v0 = sub_1C0780AB0();
    sub_1C07767AC();
  }
  else
  {
    sub_1C07816A4();
  }
  sub_1C07AC000();
  if (v4)
  {
    sub_1C07BC8F8();
    v2 = sub_1C0BE964C();
    sub_1C0778580();
  }
  else
  {
    sub_1C0BE96E4();
  }
  if (__OFADD__(v2, v0))
  {
    __break(1u);
    goto LABEL_21;
  }
  sub_1C0BE9548();
  sub_1C07B6C48();
  if (!v5 || (v1 & 0x8000000000000000) != 0 || (v1 & 0x4000000000000000) != 0 || (sub_1C0788C40(), !(v8 ^ v9 | v7)))
  {
    if (!(v1 >> 62))
    {
      sub_1C0BE96F0();
      goto LABEL_12;
    }
LABEL_22:
    sub_1C078CC14();
    sub_1C0BE9618();
    sub_1C0778580();
LABEL_12:
    sub_1C077584C();
    sub_1C07A8130();
  }
  sub_1C0791E60(v6);
  sub_1C0BE9F70();
  if (v10 < v0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v10 < 1)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    sub_1C07A28FC();
    return;
  }
  sub_1C07B5AA4();
  if (!v9)
  {
    *(_QWORD *)(v11 + 16) = v12;
    goto LABEL_17;
  }
  __break(1u);
}

void sub_1C0BDBD7C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1C077B61C();
  sub_1C0775AE4();
  if (v3)
  {
    sub_1C07A1EAC();
    v0 = sub_1C0780AB0();
    sub_1C07767AC();
  }
  else
  {
    sub_1C07816A4();
  }
  sub_1C07AC000();
  if (v4)
  {
    sub_1C07BC8F8();
    v2 = sub_1C0BE964C();
    sub_1C0778580();
  }
  else
  {
    sub_1C0BE96E4();
  }
  if (__OFADD__(v2, v0))
  {
    __break(1u);
    goto LABEL_21;
  }
  sub_1C0BE9548();
  sub_1C07B6C48();
  if (!v5 || (v1 & 0x8000000000000000) != 0 || (v1 & 0x4000000000000000) != 0 || (sub_1C0788C40(), !(v8 ^ v9 | v7)))
  {
    if (!(v1 >> 62))
    {
      sub_1C0BE96F0();
      goto LABEL_12;
    }
LABEL_22:
    sub_1C078CC14();
    sub_1C0BE9618();
    sub_1C0778580();
LABEL_12:
    sub_1C077584C();
    sub_1C07A8130();
  }
  sub_1C0791E60(v6);
  sub_1C0BE9948();
  if (v10 < v0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v10 < 1)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    sub_1C07A28FC();
    return;
  }
  sub_1C07B5AA4();
  if (!v9)
  {
    *(_QWORD *)(v11 + 16) = v12;
    goto LABEL_17;
  }
  __break(1u);
}

void sub_1C0BDBE8C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1C077B61C();
  sub_1C0775AE4();
  if (v3)
  {
    sub_1C07A1EAC();
    v0 = sub_1C0780AB0();
    sub_1C07767AC();
  }
  else
  {
    sub_1C07816A4();
  }
  sub_1C07AC000();
  if (v4)
  {
    sub_1C07BC8F8();
    v2 = sub_1C0BE964C();
    sub_1C0778580();
  }
  else
  {
    sub_1C0BE96E4();
  }
  if (__OFADD__(v2, v0))
  {
    __break(1u);
    goto LABEL_21;
  }
  sub_1C0BE9548();
  sub_1C07B6C48();
  if (!v5 || (v1 & 0x8000000000000000) != 0 || (v1 & 0x4000000000000000) != 0 || (sub_1C0788C40(), !(v8 ^ v9 | v7)))
  {
    if (!(v1 >> 62))
    {
      sub_1C0BE96F0();
      goto LABEL_12;
    }
LABEL_22:
    sub_1C078CC14();
    sub_1C0BE9618();
    sub_1C0778580();
LABEL_12:
    sub_1C077584C();
    sub_1C07A8130();
  }
  sub_1C0791E60(v6);
  sub_1C0BE9948();
  if (v10 < v0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v10 < 1)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    sub_1C07A28FC();
    return;
  }
  sub_1C07B5AA4();
  if (!v9)
  {
    *(_QWORD *)(v11 + 16) = v12;
    goto LABEL_17;
  }
  __break(1u);
}

void sub_1C0BDBF9C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  sub_1C07AC19C();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1C0BE94FC() || (sub_1C0BE979C(), !(v6 ^ v4 | v5)))
  {
    sub_1C0BE968C();
    sub_1C07EB0C4();
    v2 = v7;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  sub_1C0BE94E8();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1C0789BEC();
  sub_1C0B9776C();
  if (!v3)
  {
LABEL_11:
    sub_1C07767AC();
    *v1 = v2;
    sub_1C07785E4();
    return;
  }
  sub_1C07BA82C();
  if (!v4)
  {
    *(_QWORD *)(v2 + 16) = v8;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

uint64_t Linker.init(source:stores:pipelineType:)(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  uint64_t v4;
  uint64_t v6;

  *(_QWORD *)(v4 + 552) = a3;
  *(_QWORD *)(v4 + 544) = a2;
  *(_QWORD *)(v4 + 536) = a1;
  *(_QWORD *)(v4 + 560) = type metadata accessor for GroupMatcher();
  *(_QWORD *)(v4 + 568) = sub_1C0779D74();
  sub_1C07ACF80(&qword_1ED762590);
  *(_QWORD *)(v4 + 576) = sub_1C0779D74();
  sub_1C07ACF80(&qword_1ED759C40);
  *(_QWORD *)(v4 + 584) = sub_1C0779D74();
  *(_QWORD *)(v4 + 592) = type metadata accessor for Resolver();
  *(_QWORD *)(v4 + 600) = sub_1C0779D74();
  *(_QWORD *)(v4 + 608) = type metadata accessor for PairGenerator();
  *(_QWORD *)(v4 + 616) = sub_1C0779D74();
  *(_QWORD *)(v4 + 624) = type metadata accessor for Blocker();
  *(_QWORD *)(v4 + 632) = sub_1C0793600();
  *(_QWORD *)(v4 + 640) = sub_1C0793600();
  *(_QWORD *)(v4 + 648) = sub_1C0793600();
  *(_QWORD *)(v4 + 656) = sub_1C0793600();
  v6 = sub_1C0776744();
  *(_QWORD *)(v4 + 664) = v6;
  *(_QWORD *)(v4 + 672) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v4 + 680) = sub_1C0793600();
  *(_QWORD *)(v4 + 688) = sub_1C0793600();
  *(_QWORD *)(v4 + 696) = sub_1C0793600();
  *(_QWORD *)(v4 + 704) = sub_1C0793600();
  *(_QWORD *)(v4 + 712) = sub_1C0793600();
  *(_QWORD *)(v4 + 720) = sub_1C0793600();
  *(_QWORD *)(v4 + 728) = sub_1C0793600();
  *(_QWORD *)(v4 + 736) = sub_1C0793600();
  *(_QWORD *)(v4 + 744) = sub_1C0793600();
  *(_QWORD *)(v4 + 752) = sub_1C0793600();
  *(_QWORD *)(v4 + 760) = sub_1C0793600();
  *(_QWORD *)(v4 + 768) = type metadata accessor for PhaseStores();
  *(_QWORD *)(v4 + 776) = sub_1C0793600();
  *(_QWORD *)(v4 + 784) = sub_1C0793600();
  *(_QWORD *)(v4 + 792) = sub_1C0793600();
  *(_QWORD *)(v4 + 800) = sub_1C0793600();
  *(_QWORD *)(v4 + 808) = sub_1C0793600();
  *(_QWORD *)(v4 + 816) = sub_1C0793600();
  *(_QWORD *)(v4 + 824) = sub_1C0793600();
  *(_QWORD *)(v4 + 832) = sub_1C0793600();
  *(_QWORD *)(v4 + 840) = sub_1C0793600();
  *(_QWORD *)(v4 + 848) = sub_1C0793600();
  *(_QWORD *)(v4 + 856) = sub_1C0793600();
  *(_QWORD *)(v4 + 864) = sub_1C0793600();
  *(_QWORD *)(v4 + 872) = sub_1C0793600();
  *(_QWORD *)(v4 + 880) = sub_1C0793600();
  *(_QWORD *)(v4 + 888) = sub_1C0793600();
  *(_QWORD *)(v4 + 896) = sub_1C0793600();
  *(_QWORD *)(v4 + 904) = sub_1C0793600();
  *(_QWORD *)(v4 + 912) = sub_1C0793600();
  *(_QWORD *)(v4 + 920) = sub_1C0793600();
  *(_QWORD *)(v4 + 928) = sub_1C0793600();
  *(_QWORD *)(v4 + 936) = sub_1C0793600();
  *(_QWORD *)(v4 + 944) = sub_1C077674C();
  *(_QWORD *)(v4 + 952) = sub_1C0793600();
  *(_QWORD *)(v4 + 960) = sub_1C0793600();
  *(_QWORD *)(v4 + 968) = sub_1C0793600();
  *(_QWORD *)(v4 + 976) = sub_1C0793600();
  *(_QWORD *)(v4 + 984) = sub_1C0793600();
  *(_QWORD *)(v4 + 992) = sub_1C0793600();
  *(_QWORD *)(v4 + 1000) = sub_1C0793600();
  *(_QWORD *)(v4 + 1008) = sub_1C0793600();
  *(_QWORD *)(v4 + 1016) = sub_1C0793600();
  *(_QWORD *)(v4 + 1024) = sub_1C0793600();
  *(_QWORD *)(v4 + 1032) = sub_1C0793600();
  *(_QWORD *)(v4 + 1040) = sub_1C0793600();
  *(_QWORD *)(v4 + 1048) = sub_1C0793600();
  *(_QWORD *)(v4 + 1056) = sub_1C0793600();
  *(_QWORD *)(v4 + 1064) = sub_1C0793600();
  *(_QWORD *)(v4 + 1072) = sub_1C0793600();
  *(_QWORD *)(v4 + 1080) = sub_1C0793600();
  *(_QWORD *)(v4 + 1088) = sub_1C0793600();
  *(_QWORD *)(v4 + 1096) = sub_1C0793600();
  *(_QWORD *)(v4 + 1104) = sub_1C0793600();
  *(_QWORD *)(v4 + 1112) = sub_1C0793600();
  *(_QWORD *)(v4 + 1120) = sub_1C0793600();
  *(_QWORD *)(v4 + 1128) = sub_1C0793600();
  *(_QWORD *)(v4 + 1136) = sub_1C0793600();
  *(_QWORD *)(v4 + 1144) = sub_1C0793600();
  *(_QWORD *)(v4 + 1152) = sub_1C0793600();
  *(_QWORD *)(v4 + 1160) = sub_1C0793600();
  *(_QWORD *)(v4 + 1168) = sub_1C0793600();
  *(_QWORD *)(v4 + 1176) = sub_1C0793600();
  *(_QWORD *)(v4 + 1184) = sub_1C0793600();
  *(_QWORD *)(v4 + 1192) = sub_1C0793600();
  *(_QWORD *)(v4 + 1200) = sub_1C0793600();
  *(_QWORD *)(v4 + 1208) = sub_1C0793600();
  *(_QWORD *)(v4 + 1216) = sub_1C0793600();
  *(_QWORD *)(v4 + 1224) = sub_1C0793600();
  *(_QWORD *)(v4 + 1232) = sub_1C0793600();
  *(_QWORD *)(v4 + 1240) = sub_1C0793600();
  *(_QWORD *)(v4 + 1248) = sub_1C0793600();
  *(_QWORD *)(v4 + 1256) = sub_1C0793600();
  *(_QWORD *)(v4 + 1264) = sub_1C0793600();
  *(_QWORD *)(v4 + 1272) = sub_1C0793600();
  *(_BYTE *)(v4 + 1876) = *a4;
  sub_1C077862C();
  return sub_1C0789D28();
}

void sub_1C0BDC3A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v114;
  char v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v123;
  char v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v132;
  char v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v141;
  char v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v150;
  char v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  _QWORD *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  int *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t (*v178)(_QWORD);
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t *v182;
  uint64_t v183;
  void (*v184)(char *, uint64_t, uint64_t);
  uint64_t v185;
  uint64_t v186;
  uint64_t *v187;
  uint64_t v188;
  uint64_t v189;
  os_log_type_t v190;
  NSObject *v191;
  os_log_type_t v192;
  uint8_t *v193;
  uint64_t v194;
  unint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t (*v204)(_QWORD);
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t *v211;
  int *v212;
  uint64_t v213;
  uint64_t *v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  int *v225;
  uint64_t v226;
  uint64_t *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t *v237;
  _QWORD *v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  _BYTE *v242;
  uint64_t v243;
  uint64_t v244;
  _QWORD *v245;
  _QWORD *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t (*v255)(uint64_t, uint64_t, uint64_t);
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  void (*v268)(uint64_t, uint64_t);
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t *v272;
  _QWORD *v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  int *v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  _QWORD *v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t *v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t *v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  char *v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t (*v326)(uint64_t, uint64_t, uint64_t);
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  void (*v339)(uint64_t, uint64_t);
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  _QWORD *v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t (*v352)(uint64_t, uint64_t, uint64_t);
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t (*v358)(uint64_t, uint64_t);
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t (*v363)(uint64_t, uint64_t);
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t *v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  _QWORD *v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t (*v399)(uint64_t, uint64_t, uint64_t);
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t (*v405)(uint64_t, uint64_t);
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t (*v410)(uint64_t, uint64_t);
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t *v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  _QWORD *v436;
  uint64_t v437;
  __n128 *v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t (*v445)(uint64_t, uint64_t, uint64_t);
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t (*v452)(uint64_t, uint64_t);
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  unint64_t v457;
  uint64_t v458;
  uint64_t (*v459)(uint64_t, uint64_t);
  uint64_t v460;
  uint64_t v461;
  unint64_t v462;
  _QWORD *v463;
  uint64_t v464;
  __n128 *v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  unint64_t v479;
  uint64_t v480;
  uint64_t v481;
  unint64_t v482;
  _QWORD *v483;
  uint64_t v484;
  __n128 *v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t (*v492)(uint64_t, uint64_t, uint64_t);
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t (*v499)(uint64_t, uint64_t);
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  unint64_t v504;
  uint64_t v505;
  uint64_t (*v506)(uint64_t, uint64_t);
  uint64_t v507;
  uint64_t v508;
  unint64_t v509;
  _QWORD *v510;
  uint64_t v511;
  uint64_t v512;
  uint64_t v513;
  int *v514;
  uint64_t v515;
  uint64_t v516;
  uint64_t v517;
  uint64_t v518;
  int *v519;
  uint64_t v520;
  uint64_t v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t (*v527)(_QWORD);
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  uint64_t v535;
  uint64_t v536;
  uint64_t v537;
  uint64_t *v538;
  uint64_t v539;
  uint64_t v540;
  uint64_t v541;
  uint64_t v542;
  uint64_t v543;
  uint64_t v544;
  uint64_t v545;
  uint64_t v546;
  uint64_t v547;
  uint64_t v548;
  _QWORD *v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  unsigned __int8 *v553;
  uint64_t v554;
  uint64_t v555;
  uint64_t v556;
  uint64_t v557;
  uint64_t v558;
  uint64_t v559;
  uint64_t v560;
  uint64_t v561;
  uint64_t v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t v565;
  uint64_t v566;
  uint64_t v567;
  uint64_t v568;
  uint64_t v569;
  uint64_t v570;
  uint64_t v571;
  uint64_t *v572;
  _QWORD *v573;
  uint64_t v574;
  uint64_t v575;
  uint64_t v576;
  uint64_t v577;
  uint64_t v578;
  int *v579;
  uint64_t v580;
  uint64_t v581;
  uint64_t v582;
  uint64_t v583;
  uint64_t v584;
  uint64_t v585;
  uint64_t v586;
  uint64_t v587;
  uint64_t v588;
  uint64_t v589;
  uint64_t v590;
  uint64_t v591;
  uint64_t *v592;
  uint64_t v593;
  uint64_t v594;
  uint64_t v595;
  uint64_t v596;
  uint64_t *v597;
  uint64_t v598;
  uint64_t v599;
  uint64_t v600;
  uint64_t v601;
  uint64_t v602;
  uint64_t v603;
  uint64_t v604;
  uint64_t v605;
  uint64_t v606;
  uint64_t v607;
  uint64_t v608;
  uint64_t v609;
  uint64_t v610;
  uint64_t v611;
  uint64_t v612;
  int *v613;
  uint64_t v614;
  uint64_t *v615;
  uint64_t v616;
  uint64_t v617;
  uint64_t *v618;
  uint64_t v619;
  __n128 *v620;
  uint64_t v621;
  uint64_t v622;
  uint64_t v623;
  uint64_t v624;
  uint64_t v625;
  uint64_t v626;
  uint64_t (*v627)(uint64_t, uint64_t, uint64_t);
  uint64_t v628;
  uint64_t v629;
  uint64_t v630;
  uint64_t v631;
  uint64_t v632;
  uint64_t v633;
  uint64_t (*v634)(uint64_t, uint64_t);
  uint64_t v635;
  uint64_t v636;
  uint64_t v637;
  uint64_t v638;
  unint64_t v639;
  uint64_t v640;
  uint64_t (*v641)(uint64_t, uint64_t);
  uint64_t v642;
  uint64_t v643;
  unint64_t v644;
  _QWORD *v645;
  uint64_t v646;
  uint64_t v647;
  uint64_t v648;
  uint64_t v649;
  int *v650;
  uint64_t v651;
  uint64_t v652;
  uint64_t v653;
  uint64_t v654;
  uint64_t v655;
  uint64_t v656;
  uint64_t v657;
  uint64_t v658;
  uint64_t v659;
  uint64_t v660;
  uint64_t v661;
  uint64_t v662;
  uint64_t v663;
  uint64_t v664;
  uint64_t v665;
  uint64_t v666;
  uint64_t v667;
  uint64_t *v668;
  uint64_t v669;
  uint64_t v670;
  __n128 *v671;
  uint64_t v672;
  uint64_t v673;
  uint64_t v674;
  uint64_t v675;
  uint64_t v676;
  uint64_t v677;
  uint64_t v678;
  uint64_t v679;
  uint64_t v680;
  uint64_t v681;
  uint64_t v682;
  uint64_t v683;
  uint64_t v684;
  unint64_t v685;
  uint64_t v686;
  uint64_t v687;
  unint64_t v688;
  _QWORD *v689;
  uint64_t v690;
  uint64_t v691;
  uint64_t v692;
  uint64_t v693;
  uint64_t v694;
  uint64_t v695;
  uint64_t v696;
  uint64_t v697;
  uint64_t v698;
  uint64_t v699;
  uint64_t v700;
  uint64_t v701;
  uint64_t v702;
  uint64_t v703;
  uint64_t v704;
  uint64_t v705;
  uint64_t v706;
  uint64_t v707;
  uint64_t v708;
  uint64_t v709;
  uint64_t v710;
  uint64_t v711;
  uint64_t v712;
  uint64_t v713;
  uint64_t v714;
  uint64_t v715;
  uint64_t v716;
  uint64_t v717;
  uint64_t v718;
  uint64_t v719;
  uint64_t v720;
  uint64_t v721;
  uint64_t v722;
  uint64_t v723;
  uint64_t v724;
  uint64_t v725;
  uint64_t v726;
  uint64_t v727;
  uint64_t v728;
  uint64_t v729;
  uint64_t v730;
  uint64_t v731;
  uint64_t v732;
  uint64_t v733;
  uint64_t v734;
  uint64_t v735;
  uint64_t v736;
  uint64_t v737;
  uint64_t v738;
  uint64_t v739;
  uint64_t v740;
  uint64_t v741;
  int *v742;
  uint64_t v743;
  uint64_t v744;
  uint64_t *v745;
  uint64_t *v746;
  uint64_t *v747;
  uint64_t v748;
  uint64_t v749;
  uint64_t v750;
  uint64_t v751;
  uint64_t v752;
  uint64_t *v753;
  uint64_t v754;
  uint64_t *v755;
  uint64_t *v756;
  uint64_t *v757;
  uint64_t *v758;
  uint64_t v759;
  uint64_t v760;
  uint64_t v761;
  uint64_t *v762;
  uint64_t v763;
  uint64_t v764;
  unsigned int v765;
  uint64_t v766;
  uint64_t v767;
  uint64_t v768;
  uint64_t v769;
  uint64_t v770;
  uint64_t v771;
  uint64_t v772;
  uint64_t *v773;
  uint64_t v774;
  uint64_t *v775;
  uint64_t *v776;
  uint64_t v777;
  uint64_t v778;
  uint64_t v779;
  uint64_t v780;
  uint64_t *v781;
  uint64_t v782;
  uint64_t v783;
  uint64_t *v784;
  int *v785;
  uint64_t v786;
  uint64_t v787;
  uint64_t v788;
  uint64_t *v789;
  uint64_t *v790;
  uint64_t *v791;
  uint64_t *v792;
  uint64_t *v793;
  uint64_t v794;
  uint64_t *v795;
  uint64_t v796;
  uint64_t *v797;
  int *v798;
  uint64_t v799;
  _QWORD *v800;
  _QWORD *v801;
  uint64_t v802;
  uint64_t *v803;
  void (*v804)(char *, uint64_t, uint64_t);
  uint64_t v805;
  uint64_t v806;
  uint64_t v807;
  void (*v808)(uint64_t, uint64_t);
  int *v809;
  uint64_t v810;
  uint64_t v811;
  uint64_t v812;
  uint64_t v813;
  uint64_t *v814;
  uint64_t v815;
  uint64_t v816;
  int *v817;
  uint64_t v818;
  uint64_t v819;
  uint64_t *v820;
  uint64_t v821;
  int *v822;
  uint64_t v823;
  uint64_t v824;
  uint64_t v825;
  uint64_t v826;
  char v827;
  uint64_t v828;
  uint64_t v829;
  uint64_t v830;
  uint64_t v831;
  uint64_t v832;
  uint64_t v833;
  uint64_t v834;
  uint64_t v835;
  char v836;
  uint64_t v837;
  uint64_t v838;
  uint64_t v839;
  uint64_t v840;
  uint64_t v841;
  uint64_t v842;
  uint64_t v843;
  uint64_t v844;
  char v845;
  uint64_t v846;
  uint64_t v847;
  int *v848;
  uint64_t v849;
  char v850;
  char v851;
  int *v852;
  uint64_t v853;
  int *v854;
  uint64_t v855;
  uint64_t v856;
  uint64_t v857;
  char v858;
  char v859;
  char v860;
  uint64_t v861;
  uint64_t v862;
  uint64_t v863;
  uint64_t v864;
  uint64_t v865;

  sub_1C077B704();
  v864 = v3;
  v865 = v4;
  v863 = v0;
  v5 = v0;
  v6 = (int *)*(unsigned __int8 *)(v0 + 1876);
  v7 = *(_QWORD *)(v0 + 1272);
  v8 = *(_QWORD *)(v0 + 552);
  v9 = *(_QWORD *)(v0 + 544);
  v10 = *(_QWORD *)(v5 + 536);
  sub_1C07BABE4(v8, v11, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  v12 = sub_1C0BE98B4();
  *(_QWORD *)(v5 + 1280) = v12;
  sub_1C0BE94E0(v9, v10 + *(int *)(v12 + 20));
  *(_BYTE *)(v10 + *(int *)(v12 + 28)) = (_BYTE)v6;
  sub_1C0BE94E0(v9, v7);
  if (qword_1ED761438 != -1)
    swift_once();
  v13 = *(_QWORD *)(v5 + 1272);
  v14 = *(uint64_t **)(v5 + 1264);
  v15 = sub_1C079E000(*(_QWORD *)(v5 + 944), (uint64_t)byte_1ED761420);
  sub_1C07893A4(v15, v16, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  v17 = *v14 == *(_QWORD *)v13 && v14[1] == *(_QWORD *)(v13 + 8);
  v855 = v5;
  if (v17)
  {
    sub_1C07A00DC(*v14, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    goto LABEL_129;
  }
  v18 = sub_1C07785B0();
  v19 = v18;
  sub_1C07A00DC(v18, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  if ((v19 & 1) != 0)
  {
LABEL_129:
    v765 = *(unsigned __int8 *)(v5 + 1876);
    v161 = *(_QWORD *)(v5 + 1256);
    v162 = *(_QWORD *)(v5 + 936);
    v778 = *(_QWORD *)(v5 + 928);
    v786 = *(_QWORD *)(v5 + 1248);
    v857 = *(_QWORD *)(v5 + 768);
    v163 = *(_QWORD *)(v5 + 760);
    v826 = *(_QWORD *)(v5 + 672);
    v832 = *(_QWORD *)(v5 + 664);
    v164 = *(_QWORD *)(v5 + 656);
    v165 = *(int **)(v5 + 624);
    v771 = *(_QWORD *)(v5 + 616);
    v166 = *(_QWORD *)(v5 + 552);
    v848 = *(int **)(v5 + 608);
    v167 = *(_QWORD *)(v5 + 544);
    sub_1C08D6F78(*(_QWORD *)(v5 + 1272), (uint64_t (*)(_QWORD))type metadata accessor for Source);
    sub_1C07ACF80(&qword_1ED75D308);
    v168 = sub_1C0778598();
    *(_QWORD *)(v5 + 1288) = v168;
    *(_OWORD *)(v168 + 16) = xmmword_1C10819B0;
    sub_1C0BE955C(v166, v169, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
    sub_1C0BE9730();
    sub_1C0BE8F84(v167, v161, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    *(_QWORD *)(v168 + 56) = v165;
    sub_1C0794BAC(&qword_1ED75CC40, (uint64_t (*)(uint64_t))type metadata accessor for Blocker, (uint64_t)&protocol conformance descriptor for Blocker);
    v813 = v170;
    *(_QWORD *)(v168 + 64) = v170;
    v803 = sub_1C079DFC4((uint64_t *)(v168 + 32));
    sub_1C0BE9628(v162, v171, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v826 + 16))(v164 + v165[5], v163, v832);
    v172 = sub_1C0BE9DAC();
    sub_1C0BE8F84(v172, v173, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    *(_BYTE *)(v164 + v165[7]) = 0;
    sub_1C0BE8F84(v162, v164 + v165[8], (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
    v174 = sub_1C077E62C();
    v175 = sub_1C07BFDE8(v174, v165[9]);
    sub_1C08D6F78(v161, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    v808 = *(void (**)(uint64_t, uint64_t))(v826 + 8);
    v808(v163, v832);
    *(_QWORD *)(v164 + v165[10]) = v175;
    *(_BYTE *)(v164 + v165[11]) = v765;
    sub_1C0BE9534();
    sub_1C0BE9554(v162);
    *(_QWORD *)(v164 + v165[12]) = v175;
    sub_1C07DBCA0(v164, (uint64_t)v803, (uint64_t (*)(_QWORD))type metadata accessor for Blocker);
    sub_1C0BEA070();
    sub_1C0BE8F84(v176, v177, v178);
    v179 = sub_1C0BE9D40();
    sub_1C0BE94E0(v179, v180);
    _s24IntelligencePlatformCore15LocationMatcherV11entityClass0aB006EntityG0Vvg_0();
    *(_QWORD *)(v168 + 96) = v848;
    sub_1C0794BAC(&qword_1ED75A928, (uint64_t (*)(uint64_t))type metadata accessor for PairGenerator, (uint64_t)&protocol conformance descriptor for PairGenerator);
    v799 = v181;
    *(_QWORD *)(v168 + 104) = v181;
    v182 = sub_1C079DFC4((uint64_t *)(v168 + 72));
    *(_BYTE *)(v771 + v848[8]) = 1;
    sub_1C07AEC10(v162, v771);
    sub_1C0BE981C(v161, v771 + v848[5]);
    v183 = sub_1C0BE9630(v848[6]);
    v804 = v184;
    ((void (*)(uint64_t, uint64_t))v184)(v183, v163);
    *(_BYTE *)(v771 + v848[7]) = v765;
    sub_1C0797FF4();
    sub_1C07BA6E4(v162);
    *(_QWORD *)(v771 + v848[9]) = v765;
    sub_1C07DBCA0(v771, (uint64_t)v182, (uint64_t (*)(_QWORD))type metadata accessor for PairGenerator);
    v185 = v778;
    sub_1C07AEC10(v166, v778);
    sub_1C0BE94E0(v167, v786);
    LOBYTE(v862) = v765;
    *(_QWORD *)(v168 + 136) = sub_1C078B1F8();
    sub_1C0794BAC(&qword_1ED75AEE8, (uint64_t (*)(uint64_t))type metadata accessor for LocationMatcher, (uint64_t)&protocol conformance descriptor for LocationMatcher);
    *(_QWORD *)(v168 + 144) = v186;
    v187 = sub_1C078B1F0();
    sub_1C078C0A4((uint64_t)v187);
    if (!v778)
    {
      v827 = *(_BYTE *)(v855 + 1876);
      v196 = *(_QWORD *)(v855 + 1256);
      v752 = *(_QWORD *)(v855 + 1240);
      v197 = *(_QWORD *)(v855 + 936);
      v749 = *(_QWORD *)(v855 + 920);
      v198 = *(_QWORD *)(v855 + 760);
      v199 = *(_QWORD *)(v855 + 664);
      v200 = *(_QWORD *)(v855 + 656);
      v201 = *(_QWORD *)(v855 + 624);
      v772 = v201;
      v779 = *(_QWORD *)(v855 + 616);
      v787 = *(_QWORD *)(v855 + 608);
      v837 = *(_QWORD *)(v855 + 552);
      v843 = *(_QWORD *)(v855 + 544);
      sub_1C0BE97C8(v837, v188, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
      sub_1C0BE9DB8();
      v202 = sub_1C077B078();
      sub_1C0BE8F84(v202, v203, v204);
      *(_QWORD *)(v168 + 176) = v201;
      *(_QWORD *)(v168 + 184) = v813;
      v745 = sub_1C07B17E4();
      sub_1C0BE955C(v197, v205, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
      v206 = v199;
      v833 = v199;
      sub_1C0BE9738();
      sub_1C0BE94D0(v196, v200 + v165[6]);
      *(_BYTE *)(v200 + v165[7]) = 0;
      v207 = sub_1C0BE9950();
      sub_1C0BE8F84(v207, v208, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
      v209 = sub_1C0BE983C();
      v210 = sub_1C0BE985C(v209);
      sub_1C08D6F78(v196, (uint64_t (*)(_QWORD))type metadata accessor for Source);
      v808(v198, v206);
      sub_1C0BE9A3C();
      sub_1C0BE9654();
      sub_1C077EF28(v197);
      *(_QWORD *)(v200 + v165[12]) = v210;
      sub_1C07DBCA0(v200, (uint64_t)v745, (uint64_t (*)(_QWORD))type metadata accessor for Blocker);
      sub_1C0BE94D0(v837, v197);
      sub_1C0BE8F84(v843, v196, (uint64_t (*)(_QWORD))type metadata accessor for Source);
      sub_1C0BE9DB8();
      *(_QWORD *)(v168 + 216) = v787;
      *(_QWORD *)(v168 + 224) = v799;
      v211 = sub_1C07B17E4();
      *(_BYTE *)(v779 + v848[8]) = 1;
      sub_1C0BE8F84(v197, v779, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
      sub_1C07DBCA0(v196, v779 + v848[5], (uint64_t (*)(_QWORD))type metadata accessor for Source);
      sub_1C0BE9750(v779 + v848[6]);
      *(_BYTE *)(v779 + v848[7]) = v206;
      sub_1C0BE9654();
      sub_1C077EF28(v197);
      *(_QWORD *)(v779 + v848[9]) = v848;
      sub_1C07DBCA0(v779, (uint64_t)v211, (uint64_t (*)(_QWORD))type metadata accessor for PairGenerator);
      v212 = (int *)type metadata accessor for OrganizationMatcher();
      *(_QWORD *)(v168 + 256) = v212;
      sub_1C0794BAC(&qword_1ED75BCE0, (uint64_t (*)(uint64_t))type metadata accessor for OrganizationMatcher, (uint64_t)&protocol conformance descriptor for OrganizationMatcher);
      *(_QWORD *)(v168 + 264) = v213;
      v214 = sub_1C07B17E4();
      sub_1C0BE94D0(v837, (uint64_t)v214);
      sub_1C07AF958(v843, (uint64_t)v214 + v212[5]);
      *(_DWORD *)((char *)v214 + v212[7]) = 1056964608;
      *((_BYTE *)v214 + v212[6]) = v206;
      sub_1C0BE8F84(v837, v197, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
      sub_1C106D18C();
      sub_1C07AF958(v843, v196);
      *(_QWORD *)(v168 + 296) = v772;
      *(_QWORD *)(v168 + 304) = v813;
      v746 = sub_1C07B17E4();
      v215 = sub_1C08FF98C();
      sub_1C0BE8F84(v215, v216, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
      sub_1C0BE9738();
      v217 = sub_1C0BE9F94();
      sub_1C0BE94E0(v217, v218);
      *(_BYTE *)(v200 + v165[7]) = 0;
      v219 = sub_1C0BE9950();
      sub_1C0BE8F84(v219, v220, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
      v221 = sub_1C0BE983C();
      v222 = sub_1C0BE985C(v221);
      sub_1C08D6F78(v196, (uint64_t (*)(_QWORD))type metadata accessor for Source);
      sub_1C0BE9D6C(v198);
      sub_1C0BE9A3C();
      sub_1C0BE9654();
      sub_1C077EF28(v197);
      *(_QWORD *)(v200 + v165[12]) = v222;
      sub_1C07DBCA0(v200, (uint64_t)v746, (uint64_t (*)(_QWORD))type metadata accessor for Blocker);
      sub_1C0BE94D0(v837, v197);
      sub_1C0BE94E0(v843, v196);
      sub_1C106D18C();
      *(_QWORD *)(v168 + 336) = v787;
      *(_QWORD *)(v168 + 344) = v799;
      v747 = sub_1C07B17E4();
      v223 = sub_1C0BE9A0C(v848[8]);
      sub_1C0BE8F84(v223, v224, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
      sub_1C0BE981C(v196, (uint64_t)v165 + v848[5]);
      sub_1C0BE9750((uint64_t)v165 + v848[6]);
      *((_BYTE *)v165 + v848[7]) = v196;
      sub_1C0BE9654();
      sub_1C07BA05C(v197);
      *(_QWORD *)((char *)v165 + v848[9]) = type metadata accessor for Source;
      sub_1C07DBCA0((uint64_t)v165, (uint64_t)v747, (uint64_t (*)(_QWORD))type metadata accessor for PairGenerator);
      sub_1C07B264C(v837, v197);
      sub_1C0BE8F84(v843, v196, (uint64_t (*)(_QWORD))type metadata accessor for Source);
      v225 = (int *)type metadata accessor for TopicMatcher();
      *(_QWORD *)(v168 + 376) = v225;
      sub_1C0794BAC(&qword_1ED75A6D8, (uint64_t (*)(uint64_t))type metadata accessor for TopicMatcher, (uint64_t)&protocol conformance descriptor for TopicMatcher);
      *(_QWORD *)(v168 + 384) = v226;
      v227 = sub_1C07B17E4();
      *(_BYTE *)(sub_1C0BE9F1C((uint64_t)v227, v225[7]) + v225[8]) = 2;
      sub_1C106D18C();
      sub_1C0BE9AF8();
      sub_1C0BE9854(v196, (uint64_t)v227 + v225[5]);
      *((_BYTE *)v227 + v225[6]) = v827;
      sub_1C07B264C(v837, v197);
      sub_1C106D1A4();
      sub_1C0BE8F84(v843, v196, (uint64_t (*)(_QWORD))type metadata accessor for Source);
      *(_QWORD *)(v168 + 416) = v772;
      *(_QWORD *)(v168 + 424) = v813;
      v814 = sub_1C07B17E4();
      v228 = sub_1C08FF98C();
      sub_1C0BE8F84(v228, v229, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
      sub_1C0BE9738();
      sub_1C07AB5B0(v196, v200 + v165[6]);
      *(_BYTE *)(v200 + v165[7]) = 0;
      v230 = sub_1C0BE9950();
      sub_1C0BE8F84(v230, v231, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
      *(_QWORD *)(v200 + v165[9]) = sub_1C0BE983C();
      v232 = sub_1C0884620();
      sub_1C08D6F78(v196, (uint64_t (*)(_QWORD))type metadata accessor for Source);
      sub_1C0BE9D6C(v198);
      *(_QWORD *)(v200 + v165[10]) = v232;
      *(_BYTE *)(v200 + v165[11]) = v827;
      sub_1C0BE9654();
      sub_1C077EF28(v197);
      *(_QWORD *)(v200 + v165[12]) = v232;
      sub_1C07DBCA0(v200, (uint64_t)v814, (uint64_t (*)(_QWORD))type metadata accessor for Blocker);
      sub_1C0BE94D0(v837, v197);
      sub_1C07AEC10(v843, v196);
      sub_1C106D1A4();
      *(_QWORD *)(v168 + 456) = v787;
      *(_QWORD *)(v168 + 464) = v799;
      v820 = sub_1C079DFC4((uint64_t *)(v168 + 432));
      v233 = sub_1C0BE9A0C(v848[8]);
      sub_1C0BE94E0(v233, v234);
      sub_1C0BE9E20(v196, (uint64_t)type metadata accessor for Source + v848[5]);
      v804((char *)type metadata accessor for Source + v848[6], v198, v833);
      *((_BYTE *)type metadata accessor for Source + v848[7]) = v827;
      v235 = *(_QWORD *)(v197 + *(int *)(v857 + 28));
      sub_1C0779758();
      sub_1C08D6F78(v197, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
      *(_QWORD *)((char *)type metadata accessor for Source + v848[9]) = v235;
      sub_1C07DBCA0((uint64_t)type metadata accessor for Source, (uint64_t)v820, (uint64_t (*)(_QWORD))type metadata accessor for PairGenerator);
      sub_1C0BE8F84(v837, v749, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
      sub_1C0BE94D0(v843, v752);
      *(_BYTE *)(v855 + 1875) = v827;
      *(_QWORD *)(v168 + 496) = sub_1C077D2AC();
      sub_1C0794BAC(&qword_1ED75A9E8, (uint64_t (*)(uint64_t))type metadata accessor for PeopleMatcher, (uint64_t)&protocol conformance descriptor for PeopleMatcher);
      *(_QWORD *)(v168 + 504) = v236;
      v237 = sub_1C078B1F0();
      v238 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v855 + 1296) = v238;
      *v238 = v855;
      v238[1] = sub_1C0BE10D4;
      v239 = *(_QWORD *)(v855 + 1240);
      v240 = *(_QWORD *)(v855 + 920);
      v241 = (uint64_t)v237;
      v242 = (_BYTE *)(v855 + 1875);
LABEL_141:
      PeopleMatcher.init(stores:source:pipelineType:)(v241, v240, v239, v242);
      return;
    }
    sub_1C0BE9C50();
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v168 + 72);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v168 + 32);
    sub_1C0BE996C();
    v5 = v855;
    goto LABEL_131;
  }
  if (qword_1ED762380 != -1)
    swift_once();
  v20 = *(_QWORD *)(v5 + 1272);
  v21 = sub_1C079E000(*(_QWORD *)(v5 + 944), (uint64_t)&unk_1ED762360);
  sub_1C07893A4(v21, v22, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  v23 = sub_1C0BE9508();
  v26 = *(_QWORD *)(v5 + 1232);
  if (v23 == v27 && v24 == v25)
  {
    sub_1C07A00DC(v23, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    goto LABEL_139;
  }
  v20 = sub_1C07785B0();
  sub_1C07A00DC(v20, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  if ((v20 & 1) != 0)
  {
LABEL_139:
    sub_1C0BE9E00();
    sub_1C0BE9D34(*(_QWORD *)(v5 + 1224));
    sub_1C07ABA98();
    sub_1C08D6F78(v247, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    sub_1C07ACF80(&qword_1ED75D308);
    v248 = sub_1C0778598();
    *(_QWORD *)(v5 + 1312) = v248;
    *(_OWORD *)(v248 + 16) = xmmword_1C107A8D0;
    sub_1C0BE955C(v13, v249, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
    sub_1C077FB50();
    v250 = sub_1C0BE9F50();
    sub_1C0BE8F84(v250, v251, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    *(_QWORD *)(v248 + 56) = v6;
    sub_1C0794BAC(&qword_1ED75CC40, (uint64_t (*)(uint64_t))type metadata accessor for Blocker, (uint64_t)&protocol conformance descriptor for Blocker);
    *(_QWORD *)(v5 + 1320) = v252;
    *(_QWORD *)(v248 + 64) = v252;
    sub_1C0BE9540();
    sub_1C0BE9628(v2, v253, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    v254 = sub_1C0BE9EE0();
    *(_QWORD *)(v5 + 1328) = v255;
    sub_1C078A72C(v254, v26, v255);
    v256 = sub_1C0BE9DAC();
    sub_1C0BE8F84(v256, v257, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    v258 = sub_1C0BE98F4();
    sub_1C0BE8F84(v258, v259, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
    v260 = sub_1C077E62C();
    sub_1C0BE98E0(v260);
    v261 = sub_1C0BE9CE0();
    sub_1C08D6F78(v261, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    loc_1C0D2C3E4 = *(_QWORD *)(v12 + 8);
    sub_1C07943BC(v2, loc_1C0D2C3E4);
    *(_QWORD *)(v20 + v6[10]) = v5;
    *(_BYTE *)(v20 + v6[11]) = v847;
    sub_1C0BE9534();
    sub_1C077EF28(v764);
    v262 = sub_1C0BE9520();
    sub_1C07DBCA0(v262, v263, (uint64_t (*)(_QWORD))type metadata accessor for Blocker);
    sub_1C0BE94D0(v842, v764);
    v264 = sub_1C0BE9D60();
    sub_1C07AF958(v264, v265);
    sub_1C0BE9CB4();
    *(_QWORD *)(v248 + 96) = v798;
    sub_1C0794BAC(&qword_1ED75A928, (uint64_t (*)(uint64_t))type metadata accessor for PairGenerator, (uint64_t)&protocol conformance descriptor for PairGenerator);
    loc_1C0D2C3EC = v266;
    *(_QWORD *)(v248 + 104) = v266;
    sub_1C0BE9540();
    *(_BYTE *)(v802 + v798[8]) = 1;
    sub_1C0BE94D0(v764, v802);
    sub_1C0BE99E0();
    v267 = sub_1C0BE9630(v798[6]);
    loc_1C0D2C3F4 = v268;
    v268(v267, v20);
    *(_BYTE *)(v802 + v798[7]) = v847;
    sub_1C0797FF4();
    sub_1C077EF28(v764);
    *(_QWORD *)(v802 + v798[9]) = v26;
    v269 = sub_1C0BE9FF4();
    sub_1C07DBCA0(v269, v270, (uint64_t (*)(_QWORD))type metadata accessor for PairGenerator);
    sub_1C0BE94D0(v842, v807);
    sub_1C0BE8F84(v856, v812, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    *(&loc_1C0D2C5FC + 2) = v847;
    *(_QWORD *)(v248 + 136) = sub_1C077D2AC();
    sub_1C0794BAC(&qword_1ED75A9E8, (uint64_t (*)(uint64_t))type metadata accessor for PeopleMatcher, (uint64_t)&protocol conformance descriptor for PeopleMatcher);
    *(_QWORD *)(v248 + 144) = v271;
    v272 = sub_1C078B1F0();
    v273 = (_QWORD *)swift_task_alloc();
    loc_1C0D2C3FC = v273;
    *v273 = type metadata accessor for Source;
    v273[1] = sub_1C0BE1314;
    v239 = loc_1C0D2C374;
    v240 = loc_1C0D2C23C;
    goto LABEL_140;
  }
  if (qword_1ED761418 != -1)
    swift_once();
  v29 = sub_1C079E000(*(_QWORD *)(v5 + 944), (uint64_t)&unk_1ED761400);
  sub_1C07893A4(v29, v30, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  v31 = sub_1C0BE9508();
  if (v31 == v34 && v32 == v33)
  {
    sub_1C07A00DC(v31, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    goto LABEL_143;
  }
  v36 = sub_1C07785B0();
  v37 = v36;
  sub_1C07A00DC(v36, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  if ((v37 & 1) != 0)
  {
LABEL_143:
    v858 = *(_BYTE *)(v5 + 1876);
    v274 = *(_QWORD *)(v5 + 936);
    v844 = *(_QWORD *)(v5 + 768);
    v849 = *(_QWORD *)(v5 + 1256);
    v275 = *(_QWORD *)(v5 + 760);
    v276 = *(_QWORD *)(v5 + 656);
    v277 = *(int **)(v5 + 624);
    v815 = *(_QWORD *)(v5 + 616);
    v821 = *(_QWORD *)(v5 + 672);
    v809 = *(int **)(v5 + 608);
    v278 = *(_QWORD *)(v5 + 552);
    v838 = v278;
    v279 = *(_QWORD *)(v5 + 544);
    v828 = v279;
    v788 = *(_QWORD *)(v5 + 592);
    sub_1C07BB2A8(*(_QWORD *)(v5 + 1272));
    sub_1C07ACF80(&qword_1ED75D308);
    v280 = sub_1C0778598();
    *(_OWORD *)(v280 + 16) = xmmword_1C107A8D0;
    sub_1C0BE97C8(v278, v281, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
    sub_1C0BE9DD8();
    sub_1C07B42A4(v279, v849);
    *(_QWORD *)(v280 + 56) = v277;
    sub_1C0794BAC(&qword_1ED75CC40, (uint64_t (*)(uint64_t))type metadata accessor for Blocker, (uint64_t)&protocol conformance descriptor for Blocker);
    v780 = v282;
    *(_QWORD *)(v280 + 64) = v282;
    v758 = sub_1C07B17E4();
    sub_1C0BE955C(v274, v283, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    sub_1C078A72C(v276 + v277[5], v275, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v821 + 16));
    v284 = sub_1C0BE9950();
    sub_1C0BE8F84(v284, v285, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    *(_BYTE *)(v276 + v277[7]) = 0;
    sub_1C0BE8F84(v274, v276 + v277[8], (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
    v286 = sub_1C0883D28();
    v287 = sub_1C0BE985C(v286);
    sub_1C08D6F78(v849, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    sub_1C07943BC(v275, *(uint64_t (**)(uint64_t, uint64_t))(v821 + 8));
    *(_QWORD *)(v276 + v277[10]) = v287;
    *(_BYTE *)(v276 + v277[11]) = v858;
    v288 = (_QWORD *)v280;
    v289 = *(_QWORD *)(v274 + *(int *)(v844 + 28));
    swift_retain();
    sub_1C077EF28(v274);
    *(_QWORD *)(v276 + v277[12]) = v289;
    sub_1C07DBCA0(v276, (uint64_t)v758, (uint64_t (*)(_QWORD))type metadata accessor for Blocker);
    sub_1C0BE8F84(v278, v274, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
    sub_1C0BE8F84(v828, v849, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    sub_1C0BE9DD8();
    *(_QWORD *)(v280 + 96) = v809;
    sub_1C0794BAC(&qword_1ED75A928, (uint64_t (*)(uint64_t))type metadata accessor for PairGenerator, (uint64_t)&protocol conformance descriptor for PairGenerator);
    v759 = v290;
    *(_QWORD *)(v280 + 104) = v290;
    v753 = sub_1C07B17E4();
    *(_BYTE *)(v815 + v809[8]) = 1;
    sub_1C0BE94D0(v274, v815);
    v291 = sub_1C0BE9DAC();
    sub_1C07DBCA0(v291, v292, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    sub_1C0BE9E30(v815 + v809[6], *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v821 + 32));
    *(_BYTE *)(v815 + v809[7]) = v858;
    sub_1C077ED88();
    sub_1C07BA6E4(v274);
    *(_QWORD *)(v815 + v809[9]) = type metadata accessor for PhaseStores;
    sub_1C07DBCA0(v815, (uint64_t)v753, (uint64_t (*)(_QWORD))type metadata accessor for PairGenerator);
    sub_1C07AEC10(v278, v274);
    sub_1C0BE9DD8();
    v293 = type metadata accessor for IdentifierBasedMatcher();
    *(_QWORD *)(v280 + 136) = v293;
    sub_1C0794BAC(&qword_1ED75C150, (uint64_t (*)(uint64_t))type metadata accessor for IdentifierBasedMatcher, (uint64_t)&protocol conformance descriptor for IdentifierBasedMatcher);
    *(_QWORD *)(v280 + 144) = v294;
    v295 = sub_1C07B17E4();
    sub_1C0BE8F84(v828, (uint64_t)v295 + *(int *)(v293 + 20), (uint64_t (*)(_QWORD))type metadata accessor for Source);
    *(_DWORD *)((char *)v295 + *(int *)(v293 + 28)) = 1056964608;
    sub_1C0BE9854(v274, (uint64_t)v295);
    sub_1C0BE9738();
    sub_1C0BE9CF4();
    sub_1C0BE8F84(v838, v274, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
    _s24IntelligencePlatformCore12EventMatcherV11entityClass0aB006EntityG0Vvg_0();
    sub_1C0BE94D0(v828, v849);
    *(_QWORD *)(v280 + 176) = v277;
    *(_QWORD *)(v280 + 184) = v780;
    v781 = sub_1C07B17E4();
    v296 = sub_1C08FF98C();
    sub_1C0BE8F84(v296, v297, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    sub_1C07BFCF4();
    v298 = sub_1C0BE9F94();
    sub_1C0BE94D0(v298, v299);
    *(_BYTE *)(v276 + v277[7]) = 0;
    v300 = sub_1C0BE9950();
    sub_1C0BE8F84(v300, v301, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
    *(_QWORD *)(v276 + v277[9]) = sub_1C0BE983C();
    v302 = sub_1C0884620();
    sub_1C08D6F78(v849, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    sub_1C0BEA00C(v275);
    *(_QWORD *)(v276 + v277[10]) = v302;
    *(_BYTE *)(v276 + v277[11]) = v858;
    sub_1C077ED88();
    sub_1C0BE9964(v274);
    *(_QWORD *)(v276 + v277[12]) = v302;
    sub_1C07DBCA0(v276, (uint64_t)v781, (uint64_t (*)(_QWORD))type metadata accessor for Blocker);
    v303 = sub_1C0BE9D40();
    sub_1C0BE94E0(v303, v304);
    sub_1C07B264C(v828, v849);
    _s24IntelligencePlatformCore12EventMatcherV11entityClass0aB006EntityG0Vvg_0();
    *(_QWORD *)(v280 + 216) = v809;
    *(_QWORD *)(v280 + 224) = v759;
    sub_1C07B17E4();
    v5 = v815;
    *(_BYTE *)(v815 + v809[8]) = 1;
    v305 = sub_1C07BBF94();
    sub_1C0BE8F84(v305, v306, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
    sub_1C07DBCA0(v849, v815 + v809[5], (uint64_t (*)(_QWORD))type metadata accessor for Source);
    sub_1C0BE9738();
    *(_BYTE *)(v815 + v809[7]) = v858;
    sub_1C0779758();
    sub_1C07AF87C(v274);
    v244 = v828;
    v307 = sub_1C0BE9F3C(v809[9]);
    sub_1C07DBCA0(v307, v308, (uint64_t (*)(_QWORD))type metadata accessor for PairGenerator);
    v309 = type metadata accessor for EventMatcher();
    v288[32] = v309;
    sub_1C0794BAC(&qword_1ED75A570, (uint64_t (*)(uint64_t))type metadata accessor for EventMatcher, (uint64_t)&protocol conformance descriptor for EventMatcher);
    v288[33] = v310;
    v311 = sub_1C078B1F0();
    sub_1C0BE9518(v838, (uint64_t)v311 + *(int *)(v309 + 24));
    sub_1C0BE94D0(v828, (uint64_t)v311);
    v312 = *(int *)(v309 + 20);
    v243 = v838;
    *((_BYTE *)v311 + v312) = v858;
    v245 = v288 + 34;
    sub_1C0BE8F84(v838, v274, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
    sub_1C0BE94D0(v828, v849);
    LOBYTE(v862) = v858;
    v288[37] = v788;
    sub_1C0794BAC(&qword_1ED75CE80, (uint64_t (*)(uint64_t))type metadata accessor for Resolver, (uint64_t)&protocol conformance descriptor for Resolver);
    v246 = v288;
    v288[38] = v313;
LABEL_144:
    sub_1C0BE9FBC();
    v314 = sub_1C08FF98C();
LABEL_145:
    Resolver.init(stores:source:pipelineType:)(v314, v315, v316, v317);
LABEL_137:
    sub_1C08D6F78(v243, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
    sub_1C08D6F78(v244, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    *(_QWORD *)((char *)v245 + *(int *)(v12 + 24)) = v246;
    swift_task_dealloc();
    sub_1C077C104();
    sub_1C0779D18();
    sub_1C07758BC();
    sub_1C07796F8();
    sub_1C07767BC();
    sub_1C0779D20();
    sub_1C0786388();
    sub_1C0778638();
    sub_1C07767D4();
    sub_1C077C27C();
    sub_1C077C828();
    sub_1C0778744();
    sub_1C07819BC();
    sub_1C0780AA8();
    sub_1C07806D8();
    sub_1C077F164();
    sub_1C07B68D8();
    sub_1C077E900();
    sub_1C07815B0();
    sub_1C07A9950();
    sub_1C07B25F4();
    sub_1C07B802C();
    sub_1C07889DC();
    sub_1C0776AC4();
    sub_1C0781ED8();
    sub_1C078DC10();
    sub_1C078A4A0();
    sub_1C07AFAEC();
    sub_1C07AFE20();
    sub_1C077F860();
    sub_1C0778874();
    sub_1C07B0110();
    sub_1C07B1E30();
    sub_1C0780BEC();
    sub_1C0775BEC();
    sub_1C07817A8();
    sub_1C07ABD9C();
    sub_1C0781234();
    sub_1C07799D4();
    sub_1C07AD77C();
    sub_1C07AE9B0();
    sub_1C077F330();
    sub_1C077D2A4();
    sub_1C07AB898();
    sub_1C07AEFEC();
    sub_1C077B8E0();
    sub_1C078E184();
    sub_1C07B7C70();
    sub_1C077C4B8();
    sub_1C079DD70();
    sub_1C078A034();
    sub_1C07A873C();
    sub_1C077B2D8();
    sub_1C078660C();
    sub_1C0785140();
    sub_1C079CE88();
    sub_1C07AD2A0();
    sub_1C078248C();
    swift_task_dealloc();
    sub_1C0BE9DA4();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1C07AA11C();
    sub_1C07BAE60();
    sub_1C0BE94C8();
    sub_1C079BF9C();
    sub_1C07B97F8();
    sub_1C07B8530();
    sub_1C0790990();
    sub_1C079EFB8();
    sub_1C07B18DC();
    sub_1C07A32FC();
    sub_1C07B73C0();
    sub_1C077E9F8();
    sub_1C07B48B0();
    sub_1C0782E58();
    sub_1C0780574();
    sub_1C078D800();
    sub_1C07AB000();
    sub_1C07AA938();
    sub_1C07BCFDC();
    sub_1C0781074(*(uint64_t (**)(void))(v5 + 8));
    return;
  }
  if (qword_1ED7623C8 != -1)
    swift_once();
  v38 = *(_QWORD *)(v5 + 1272);
  v39 = sub_1C079E000(*(_QWORD *)(v5 + 944), (uint64_t)&unk_1ED7623B0);
  sub_1C07893A4(v39, v40, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  v41 = sub_1C0BE9508();
  v44 = *(_QWORD *)(v5 + 1208);
  if (v41 == v45 && v42 == v43)
  {
    sub_1C07A00DC(v41, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    goto LABEL_147;
  }
  v38 = sub_1C07785B0();
  sub_1C07A00DC(v38, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  if ((v38 & 1) != 0)
  {
LABEL_147:
    sub_1C0BE9E00();
    sub_1C0BE9D34(*(_QWORD *)(v5 + 1200));
    sub_1C07ABA98();
    sub_1C08D6F78(v318, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    sub_1C07ACF80(&qword_1ED75D308);
    v319 = sub_1C0778598();
    *(_QWORD *)(v5 + 1376) = v319;
    *(_OWORD *)(v319 + 16) = xmmword_1C107E440;
    sub_1C0BE955C(v13, v320, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
    sub_1C077FB50();
    v321 = sub_1C0BE9F50();
    sub_1C0BE8F84(v321, v322, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    *(_QWORD *)(v319 + 56) = v6;
    sub_1C0794BAC(&qword_1ED75CC40, (uint64_t (*)(uint64_t))type metadata accessor for Blocker, (uint64_t)&protocol conformance descriptor for Blocker);
    *(_QWORD *)(v5 + 1384) = v323;
    *(_QWORD *)(v319 + 64) = v323;
    sub_1C0BE9540();
    sub_1C0BE9628(v2, v324, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    v325 = sub_1C0BE9EE0();
    *(_QWORD *)(v5 + 1392) = v326;
    sub_1C078A72C(v325, v44, v326);
    v327 = sub_1C0BE9DAC();
    sub_1C0BE8F84(v327, v328, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    v329 = sub_1C0BE98F4();
    sub_1C0BE8F84(v329, v330, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
    v331 = sub_1C077E62C();
    sub_1C0BE98E0(v331);
    v332 = sub_1C0BE9CE0();
    sub_1C08D6F78(v332, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    loc_1C0D2C424 = *(_QWORD *)(v12 + 8);
    sub_1C07943BC(v2, loc_1C0D2C424);
    *(_QWORD *)(v38 + v6[10]) = v5;
    *(_BYTE *)(v38 + v6[11]) = v847;
    sub_1C0BE9534();
    sub_1C077EF28(v764);
    v333 = sub_1C0BE9520();
    sub_1C07DBCA0(v333, v334, (uint64_t (*)(_QWORD))type metadata accessor for Blocker);
    sub_1C0BE94D0(v842, v764);
    v335 = sub_1C0BE9D60();
    sub_1C07AF958(v335, v336);
    sub_1C0BE9CB4();
    *(_QWORD *)(v319 + 96) = v798;
    sub_1C0794BAC(&qword_1ED75A928, (uint64_t (*)(uint64_t))type metadata accessor for PairGenerator, (uint64_t)&protocol conformance descriptor for PairGenerator);
    loc_1C0D2C42C = v337;
    *(_QWORD *)(v319 + 104) = v337;
    sub_1C0BE9540();
    *(_BYTE *)(v802 + v798[8]) = 1;
    sub_1C0BE94D0(v764, v802);
    sub_1C0BE99E0();
    v338 = sub_1C0BE9630(v798[6]);
    loc_1C0D2C434 = v339;
    v339(v338, v38);
    *(_BYTE *)(v802 + v798[7]) = v847;
    sub_1C0797FF4();
    sub_1C077EF28(v764);
    *(_QWORD *)(v802 + v798[9]) = v44;
    v340 = sub_1C0BE9FF4();
    sub_1C07DBCA0(v340, v341, (uint64_t (*)(_QWORD))type metadata accessor for PairGenerator);
    sub_1C0BE94D0(v842, v807);
    sub_1C0BE8F84(v856, v812, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    *(&loc_1C0D2C5FC + 1) = v847;
    *(_QWORD *)(v319 + 136) = sub_1C077D2AC();
    sub_1C0794BAC(&qword_1ED75A9E8, (uint64_t (*)(uint64_t))type metadata accessor for PeopleMatcher, (uint64_t)&protocol conformance descriptor for PeopleMatcher);
    *(_QWORD *)(v319 + 144) = v342;
    v272 = sub_1C078B1F0();
    v343 = (_QWORD *)swift_task_alloc();
    loc_1C0D2C43C = v343;
    *v343 = type metadata accessor for Source;
    v343[1] = sub_1C0BE1810;
    v239 = loc_1C0D2C35C;
    v240 = loc_1C0D2C234;
    goto LABEL_140;
  }
  if (qword_1ED762330 != -1)
    swift_once();
  v47 = sub_1C079E000(*(_QWORD *)(v5 + 944), (uint64_t)&unk_1ED762318);
  sub_1C07893A4(v47, v48, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  v49 = sub_1C0BE9508();
  if (v49 == v52 && v50 == v51)
  {
    sub_1C07A00DC(v49, (uint64_t (*)(_QWORD))type metadata accessor for Source);
LABEL_149:
    sub_1C0BE9DEC();
    v344 = *(_QWORD *)(v5 + 936);
    sub_1C078B814(*(_QWORD *)(v5 + 888));
    sub_1C08D6F78(v345, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    sub_1C07ACF80(&qword_1ED75D308);
    v346 = sub_1C0778598();
    *(_QWORD *)(v5 + 1440) = v346;
    *(_OWORD *)(v346 + 16) = xmmword_1C107E440;
    v347 = v346;
    v800 = (_QWORD *)v346;
    sub_1C07BABE4((uint64_t)type metadata accessor for Source, v348, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
    sub_1C0BE9730();
    sub_1C0BE8F84((uint64_t)v6, v1, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    *(_QWORD *)(v347 + 56) = v12;
    sub_1C0794BAC(&qword_1ED75CC40, (uint64_t (*)(uint64_t))type metadata accessor for Blocker, (uint64_t)&protocol conformance descriptor for Blocker);
    *(_QWORD *)(v5 + 1448) = v349;
    sub_1C0BE992C(v349);
    sub_1C0BE9628(v344, v350, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    v351 = sub_1C0BE9EF4();
    *(_QWORD *)(v5 + 1456) = v352;
    sub_1C0BE9AD8(v351, v352);
    v353 = sub_1C0BE9E70();
    sub_1C0BE8F84(v353, v354, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    v355 = sub_1C0BE9B20();
    sub_1C0BE8F84(v355, v356, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
    v357 = sub_1C077E788();
    sub_1C07BFDE8(v357, *(int *)(v12 + 36));
    sub_1C08D6F78(v1, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    v358 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8);
    *(_QWORD *)(v5 + 1464) = v358;
    sub_1C0BE9C40(v358);
    sub_1C07AB3B0();
    sub_1C07BA6E4(v344);
    v359 = sub_1C0BE9B80();
    sub_1C07DBCA0(v359, v360, (uint64_t (*)(_QWORD))type metadata accessor for Blocker);
    sub_1C07AEC10(v842, v344);
    sub_1C078BA4C(v847, v777);
    sub_1C0BE9730();
    v800[12] = v825;
    sub_1C0794BAC(&qword_1ED75A928, (uint64_t (*)(uint64_t))type metadata accessor for PairGenerator, (uint64_t)&protocol conformance descriptor for PairGenerator);
    *(_QWORD *)(v5 + 1472) = v361;
    v750 = v361;
    v800[13] = v361;
    v766 = (uint64_t)(v800 + 9);
    v789 = sub_1C0BE9778();
    *(_BYTE *)(v807 + *(int *)(v825 + 32)) = 1;
    sub_1C07AEC10(v344, v807);
    sub_1C0BE97D8();
    v362 = sub_1C0BE9E98();
    *(_QWORD *)(v5 + 1480) = v363;
    sub_1C0BE9E3C(v362, v363);
    *(_BYTE *)(v807 + *(int *)(v825 + 28)) = (_BYTE)v6;
    sub_1C0779758();
    sub_1C07BA6E4(v344);
    v364 = sub_1C0BE9E84();
    sub_1C07DBCA0(v364, v365, (uint64_t (*)(_QWORD))type metadata accessor for PairGenerator);
    v185 = v812;
    sub_1C07AEC10(v842, v812);
    sub_1C0BE9518(v847, v819);
    LOBYTE(v862) = (_BYTE)v6;
    v800[17] = sub_1C078B1F8();
    sub_1C0794BAC(&qword_1ED75AEE8, (uint64_t (*)(uint64_t))type metadata accessor for LocationMatcher, (uint64_t)&protocol conformance descriptor for LocationMatcher);
    v800[18] = v366;
    v367 = sub_1C078B1F0();
    sub_1C078C0A4((uint64_t)v367);
    if (!v812)
    {
      v850 = *(_BYTE *)(v5 + 1876);
      v368 = *(_QWORD *)(v5 + 1256);
      sub_1C0BE9D34(*(_QWORD *)(v5 + 1168));
      v369 = sub_1C0BE9564();
      sub_1C0BE955C(v369, v370, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
      sub_1C077FB50();
      sub_1C0BE9844(v819, v371, (uint64_t (*)(_QWORD))type metadata accessor for Source);
      v800[22] = v777;
      v800[23] = v754;
      sub_1C0BE9620();
      sub_1C07BABE4(v825, v372, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
      sub_1C0BE96B8(v373, v374, v375, v376, v377, v378, v379, v380, v690, v691, v692, v693, v694, v695, v696, v697, v698, v699, v700,
        v701,
        v702,
        v703,
        v704,
        v705,
        v706,
        v707,
        v708,
        v709,
        v710,
        v711,
        v712,
        v713,
        v714,
        v715,
        v716,
        v717,
        v718,
        v719,
        v720,
        v721,
        v722,
        v723,
        v724,
        v725,
        v726,
        v727,
        v728,
        v729,
        v730,
        v731,
        v732,
        v733,
        v734,
        v735,
        v736,
        v737,
        v738,
        v739,
        v740,
        v741,
        v743,
        v744,
        v748);
      sub_1C0BE8F84(v368, loc_1C0CA7E60, (uint64_t (*)(_QWORD))type metadata accessor for Source);
      v381 = sub_1C0BE9A54();
      sub_1C0BE8F84(v381, v382, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
      v383 = sub_1C077E62C();
      v384 = sub_1C0BE9D80(v383);
      sub_1C08D6F78(v368, (uint64_t (*)(_QWORD))type metadata accessor for Source);
      sub_1C0BE9C30();
      sub_1C07B6AD4();
      sub_1C07AF87C(v825);
      *(_QWORD *)loc_1C0CA7E78 = v384;
      sub_1C0BE99C8(v385, v386, (uint64_t (*)(_QWORD))type metadata accessor for Blocker);
      sub_1C0BE9518((uint64_t)v789, v825);
      sub_1C078BA4C(v842, v368);
      sub_1C077FB50();
      v800[27] = v802;
      v800[28] = v750;
      sub_1C0BE984C();
      *(_BYTE *)(v5 + *(int *)(v825 + 32)) = 1;
      sub_1C0BE9518(v825, v5);
      sub_1C0BE97F0();
      sub_1C0BE9910();
      *(_BYTE *)(v5 + *(int *)(v825 + 28)) = v850;
      sub_1C0797FF4();
      sub_1C07AF87C(v825);
      *(_QWORD *)(v5 + *(int *)(v825 + 36)) = v800 + 14;
      sub_1C0BE9D78(v5, v387, (uint64_t (*)(_QWORD))type metadata accessor for PairGenerator);
      sub_1C0BE9518((uint64_t)v789, v807);
      sub_1C0BE94E0(v842, 0);
      *(_BYTE *)(v5 + 1872) = v850;
      v800[32] = sub_1C077D2AC();
      sub_1C0794BAC(&qword_1ED75A9E8, (uint64_t (*)(uint64_t))type metadata accessor for PeopleMatcher, (uint64_t)&protocol conformance descriptor for PeopleMatcher);
      v800[33] = v388;
      v272 = sub_1C078B1F0();
      v389 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v5 + 1488) = v389;
      *v389 = v5;
      v389[1] = sub_1C0BE219C;
      v239 = *(_QWORD *)(v5 + 1168);
      v240 = *(_QWORD *)(v5 + 880);
      goto LABEL_140;
    }
    goto LABEL_153;
  }
  v54 = sub_1C07785B0();
  v55 = v54;
  sub_1C07A00DC(v54, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  if ((v55 & 1) != 0)
    goto LABEL_149;
  if (qword_1ED761448 != -1)
    swift_once();
  v56 = *(_QWORD *)(v5 + 1272);
  v57 = (uint64_t *)(v5 + 1160);
  v58 = sub_1C079E000(*(_QWORD *)(v5 + 944), (uint64_t)&unk_1ED762E88);
  sub_1C07893A4(v58, v59, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0782A3C();
  if (v17 && v60 == v61)
    goto LABEL_151;
  v63 = sub_1C07785B0();
  v64 = v63;
  sub_1C07A00DC(v63, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  if ((v64 & 1) != 0)
    goto LABEL_152;
  if (qword_1ED762E80 != -1)
    swift_once();
  v56 = *(_QWORD *)(v5 + 1272);
  v57 = (uint64_t *)(v5 + 1152);
  v65 = sub_1C079E000(*(_QWORD *)(v5 + 944), (uint64_t)&unk_1ED762268);
  sub_1C07893A4(v65, v66, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0782A3C();
  if (v17 && v67 == v68)
  {
LABEL_151:
    sub_1C08D6F78(*v57, (uint64_t (*)(_QWORD))type metadata accessor for Source);
LABEL_152:
    sub_1C0BE9DEC();
    v390 = *(_QWORD *)(v5 + 936);
    sub_1C078B814(*(_QWORD *)(v5 + 872));
    sub_1C08D6F78(v391, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    *(_QWORD *)(v5 + 1504) = sub_1C07ACF80(&qword_1ED75D308);
    v392 = sub_1C0778598();
    *(_QWORD *)(v5 + 1512) = v392;
    *(_OWORD *)(v392 + 16) = xmmword_1C10819C0;
    v393 = v56;
    v394 = v392;
    v801 = (_QWORD *)v392;
    sub_1C07BABE4(v393, v395, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
    sub_1C0BE9730();
    sub_1C0BE8F84((uint64_t)v6, v1, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    *(_QWORD *)(v394 + 56) = v12;
    sub_1C0794BAC(&qword_1ED75CC40, (uint64_t (*)(uint64_t))type metadata accessor for Blocker, (uint64_t)&protocol conformance descriptor for Blocker);
    *(_QWORD *)(v5 + 1520) = v396;
    sub_1C0BE992C(v396);
    sub_1C0BE9628(v390, v397, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    v398 = sub_1C0BE9EF4();
    *(_QWORD *)(v5 + 1528) = v399;
    sub_1C0BE9AD8(v398, v399);
    v400 = sub_1C0BE9E70();
    sub_1C0BE8F84(v400, v401, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    v402 = sub_1C0BE9B20();
    sub_1C0BE8F84(v402, v403, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
    v404 = sub_1C077E788();
    sub_1C07BFDE8(v404, *(int *)(v12 + 36));
    sub_1C08D6F78(v1, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    v405 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8);
    *(_QWORD *)(v5 + 1536) = v405;
    sub_1C0BE9C40(v405);
    sub_1C07AB3B0();
    sub_1C07BA6E4(v390);
    v406 = sub_1C0BE9B80();
    sub_1C07DBCA0(v406, v407, (uint64_t (*)(_QWORD))type metadata accessor for Blocker);
    sub_1C07AEC10(v842, v390);
    sub_1C078BA4C(v847, v777);
    sub_1C0BE9730();
    v801[12] = v825;
    sub_1C0794BAC(&qword_1ED75A928, (uint64_t (*)(uint64_t))type metadata accessor for PairGenerator, (uint64_t)&protocol conformance descriptor for PairGenerator);
    *(_QWORD *)(v5 + 1544) = v408;
    v751 = v408;
    v801[13] = v408;
    v766 = (uint64_t)(v801 + 9);
    v790 = sub_1C0BE9778();
    *(_BYTE *)(v807 + *(int *)(v825 + 32)) = 1;
    sub_1C07AEC10(v390, v807);
    sub_1C0BE97D8();
    v409 = sub_1C0BE9E98();
    *(_QWORD *)(v5 + 1552) = v410;
    sub_1C0BE9E3C(v409, v410);
    *(_BYTE *)(v807 + *(int *)(v825 + 28)) = (_BYTE)v6;
    sub_1C0779758();
    sub_1C07BA6E4(v390);
    v411 = sub_1C0BE9E84();
    sub_1C07DBCA0(v411, v412, (uint64_t (*)(_QWORD))type metadata accessor for PairGenerator);
    v185 = v812;
    sub_1C07AEC10(v842, v812);
    sub_1C0BE9518(v847, v819);
    LOBYTE(v862) = (_BYTE)v6;
    v801[17] = sub_1C078B1F8();
    sub_1C0794BAC(&qword_1ED75AEE8, (uint64_t (*)(uint64_t))type metadata accessor for LocationMatcher, (uint64_t)&protocol conformance descriptor for LocationMatcher);
    v801[18] = v413;
    v414 = sub_1C078B1F0();
    sub_1C078C0A4((uint64_t)v414);
    if (!v812)
    {
      v851 = *(_BYTE *)(v5 + 1876);
      v415 = *(_QWORD *)(v5 + 1256);
      sub_1C0BE9D34(*(_QWORD *)(v5 + 1136));
      v416 = sub_1C0BE9564();
      sub_1C0BE955C(v416, v417, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
      sub_1C077FB50();
      sub_1C0BE9844(v819, v418, (uint64_t (*)(_QWORD))type metadata accessor for Source);
      v801[22] = v777;
      v801[23] = v754;
      sub_1C0BE9620();
      sub_1C07BABE4(v825, v419, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
      sub_1C0BE96B8(v420, v421, v422, v423, v424, v425, v426, v427, v690, v691, v692, v693, v694, v695, v696, v697, v698, v699, v700,
        v701,
        v702,
        v703,
        v704,
        v705,
        v706,
        v707,
        v708,
        v709,
        v710,
        v711,
        v712,
        v713,
        v714,
        v715,
        v716,
        v717,
        v718,
        v719,
        v720,
        v721,
        v722,
        v723,
        v724,
        v725,
        v726,
        v727,
        v728,
        v729,
        v730,
        v731,
        v732,
        v733,
        v734,
        v735,
        v736,
        v737,
        v738,
        v739,
        v740,
        v741,
        v743,
        v744,
        v748);
      sub_1C0BE8F84(v415, loc_1C0CA7E60, (uint64_t (*)(_QWORD))type metadata accessor for Source);
      v428 = sub_1C0BE9A54();
      sub_1C0BE8F84(v428, v429, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
      v430 = sub_1C077E62C();
      v431 = sub_1C0BE9D80(v430);
      sub_1C08D6F78(v415, (uint64_t (*)(_QWORD))type metadata accessor for Source);
      sub_1C0BE9C30();
      sub_1C07B6AD4();
      sub_1C07AF87C(v825);
      *(_QWORD *)loc_1C0CA7E78 = v431;
      sub_1C0BE99C8(v432, v433, (uint64_t (*)(_QWORD))type metadata accessor for Blocker);
      sub_1C0BE9518((uint64_t)v790, v825);
      sub_1C078BA4C(v842, v415);
      sub_1C077FB50();
      v801[27] = v802;
      v801[28] = v751;
      sub_1C0BE984C();
      *(_BYTE *)(v5 + *(int *)(v825 + 32)) = 1;
      sub_1C0BE9518(v825, v5);
      sub_1C0BE97F0();
      sub_1C0BE9910();
      *(_BYTE *)(v5 + *(int *)(v825 + 28)) = v851;
      sub_1C0797FF4();
      sub_1C07AF87C(v825);
      *(_QWORD *)(v5 + *(int *)(v825 + 36)) = v801 + 14;
      sub_1C0BE9D78(v5, v434, (uint64_t (*)(_QWORD))type metadata accessor for PairGenerator);
      sub_1C0BE9518((uint64_t)v790, v807);
      sub_1C0BE94E0(v842, 0);
      *(_BYTE *)(v5 + 1867) = v851;
      v801[32] = sub_1C077D2AC();
      sub_1C0794BAC(&qword_1ED75A9E8, (uint64_t (*)(uint64_t))type metadata accessor for PeopleMatcher, (uint64_t)&protocol conformance descriptor for PeopleMatcher);
      v801[33] = v435;
      v272 = sub_1C078B1F0();
      v436 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v5 + 1560) = v436;
      *v436 = v5;
      v436[1] = sub_1C0BE26A8;
      v239 = *(_QWORD *)(v5 + 1136);
      v240 = *(_QWORD *)(v5 + 864);
      goto LABEL_140;
    }
LABEL_153:
    sub_1C0BE9C50();
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v766);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v770);
    sub_1C0BE996C();
LABEL_131:
    if (qword_1ED761458 != -1)
      swift_once();
    v189 = sub_1C077585C();
    v190 = sub_1C0BE94B4(v189, (uint64_t)qword_1ED78D818);
    sub_1C077CF64();
    sub_1C077CF64();
    v191 = sub_1C106F538();
    v192 = v190;
    if (os_log_type_enabled(v191, v190))
    {
      v193 = (uint8_t *)sub_1C0775854();
      v862 = sub_1C0775854();
      *(_DWORD *)v193 = 136315138;
      *(_QWORD *)(v5 + 520) = v185;
      sub_1C077CF64();
      sub_1C07ACF80(&qword_1ED7614F0);
      v194 = sub_1C106FB5C();
      *(_QWORD *)(v5 + 512) = sub_1C0BEA020(v194, v195);
      sub_1C10705AC();
      sub_1C077E584();
      sub_1C077E6C8();
      sub_1C077E6C8();
      sub_1C07796F0(&dword_1C0771000, v191, v192, "Linker could not construct children, creating empty list due to: %s", v193);
      sub_1C07814E0();
      sub_1C0776778();
    }
    sub_1C077E6C8();
    sub_1C077E6C8();

    v12 = *(_QWORD *)(v5 + 1280);
    v243 = *(_QWORD *)(v5 + 552);
    v244 = *(_QWORD *)(v5 + 544);
    v245 = *(_QWORD **)(v5 + 536);
    sub_1C077E6C8();
    v246 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_137;
  }
  v70 = sub_1C07785B0();
  v71 = v70;
  sub_1C07A00DC(v70, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  if ((v71 & 1) != 0)
    goto LABEL_152;
  if (qword_1ED7623F0 != -1)
    swift_once();
  v72 = sub_1C079E000(*(_QWORD *)(v5 + 944), (uint64_t)&unk_1ED7623D0);
  sub_1C07893A4(v72, v73, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  v74 = sub_1C0BE9508();
  if (v74 == v77 && v75 == v76)
  {
    sub_1C07A00DC(v74, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  }
  else
  {
    v79 = v5;
    v80 = sub_1C07785B0();
    sub_1C07A00DC(v80, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    if ((v80 & 1) == 0)
    {
      if (qword_1ED762310 != -1)
        swift_once();
      sub_1C0BE99D4();
      v81 = sub_1C079E000(*(_QWORD *)(v5 + 944), (uint64_t)&unk_1ED7622F8);
      sub_1C07893A4(v81, v82, (uint64_t (*)(_QWORD))type metadata accessor for Source);
      v83 = sub_1C0BE9508();
      if (v83 == v86 && v84 == v85)
      {
        sub_1C07A00DC(v83, (uint64_t (*)(_QWORD))type metadata accessor for Source);
      }
      else
      {
        v88 = sub_1C07785B0();
        v89 = v88;
        sub_1C07A00DC(v88, (uint64_t (*)(_QWORD))type metadata accessor for Source);
        if ((v89 & 1) == 0)
        {
          if (qword_1ED7622C8 != -1)
            swift_once();
          v90 = *(_QWORD *)(v5 + 1272);
          v91 = v5 + 1072;
          v92 = sub_1C079E000(*(_QWORD *)(v5 + 944), (uint64_t)&unk_1ED7622B0);
          sub_1C07893A4(v92, v93, (uint64_t (*)(_QWORD))type metadata accessor for Source);
          sub_1C0782A3C();
          if (!v17 || v94 != v95)
          {
            v91 = sub_1C07785B0();
            sub_1C07A00DC(v91, (uint64_t (*)(_QWORD))type metadata accessor for Source);
            if ((v91 & 1) != 0)
              goto LABEL_160;
            if (qword_1ED7623A8 != -1)
              swift_once();
            v90 = *(_QWORD *)(v5 + 1272);
            v91 = v5 + 1064;
            v97 = sub_1C079E000(*(_QWORD *)(v5 + 944), (uint64_t)&unk_1ED762388);
            sub_1C07893A4(v97, v98, (uint64_t (*)(_QWORD))type metadata accessor for Source);
            sub_1C0782A3C();
            if (!v17 || v99 != v100)
            {
              v91 = sub_1C07785B0();
              sub_1C07A00DC(v91, (uint64_t (*)(_QWORD))type metadata accessor for Source);
              if ((v91 & 1) != 0)
                goto LABEL_160;
              if (qword_1ED7622A8 != -1)
                swift_once();
              v90 = *(_QWORD *)(v5 + 1272);
              v91 = v5 + 1056;
              v102 = sub_1C079E000(*(_QWORD *)(v5 + 944), (uint64_t)&unk_1ED762288);
              sub_1C07893A4(v102, v103, (uint64_t (*)(_QWORD))type metadata accessor for Source);
              sub_1C0782A3C();
              if (!v17 || v104 != v105)
              {
                v91 = sub_1C07785B0();
                sub_1C07A00DC(v91, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                if ((v91 & 1) == 0)
                {
                  if (qword_1ED762358 != -1)
                    swift_once();
                  sub_1C0BE99D4();
                  v107 = sub_1C079E000(*(_QWORD *)(v5 + 944), (uint64_t)&unk_1ED762338);
                  sub_1C07893A4(v107, v108, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                  v109 = sub_1C0BE9508();
                  if (v109 == v112 && v110 == v111)
                  {
                    sub_1C07A00DC(v109, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                  }
                  else
                  {
                    v114 = sub_1C07785B0();
                    v115 = v114;
                    sub_1C07A00DC(v114, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                    if ((v115 & 1) == 0)
                    {
                      if (qword_1ED7622F0 != -1)
                        swift_once();
                      sub_1C0BE99D4();
                      v116 = sub_1C079E000(*(_QWORD *)(v5 + 944), (uint64_t)byte_1ED7622D0);
                      sub_1C07893A4(v116, v117, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                      v118 = sub_1C0BE9508();
                      if (v118 == v121 && v119 == v120)
                      {
                        sub_1C07A00DC(v118, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                      }
                      else
                      {
                        v123 = sub_1C07785B0();
                        v124 = v123;
                        sub_1C07A00DC(v123, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                        if ((v124 & 1) == 0)
                        {
                          if (qword_1ED762260 != -1)
                            swift_once();
                          sub_1C0BE99D4();
                          v125 = sub_1C079E000(*(_QWORD *)(v5 + 944), (uint64_t)&unk_1ED762240);
                          sub_1C07893A4(v125, v126, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                          v127 = sub_1C0BE9508();
                          if (v127 == v130 && v128 == v129)
                          {
                            sub_1C07A00DC(v127, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                          }
                          else
                          {
                            v132 = sub_1C07785B0();
                            v133 = v132;
                            sub_1C07A00DC(v132, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                            if ((v133 & 1) == 0)
                            {
                              if (qword_1ED762280 != -1)
                                swift_once();
                              sub_1C0BE99D4();
                              v134 = sub_1C079E000(*(_QWORD *)(v5 + 944), (uint64_t)&unk_1ED761548);
                              sub_1C07893A4(v134, v135, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                              v136 = sub_1C0BE9508();
                              if (v136 == v139 && v137 == v138)
                              {
                                sub_1C07A00DC(v136, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                              }
                              else
                              {
                                v141 = sub_1C07785B0();
                                v142 = v141;
                                sub_1C07A00DC(v141, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                                if ((v142 & 1) == 0)
                                {
                                  if (qword_1ED761598 != -1)
                                    swift_once();
                                  sub_1C0BE99D4();
                                  v143 = sub_1C079E000(*(_QWORD *)(v5 + 944), (uint64_t)&unk_1ED761838);
                                  sub_1C07893A4(v143, v144, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                                  v145 = sub_1C0BE9508();
                                  if (v145 == v148 && v146 == v147)
                                  {
                                    sub_1C07A00DC(v145, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                                  }
                                  else
                                  {
                                    v150 = sub_1C07785B0();
                                    v151 = v150;
                                    sub_1C07A00DC(v150, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                                    if ((v151 & 1) == 0)
                                    {
                                      if (qword_1ED761870 != -1)
                                        swift_once();
                                      v152 = *(_QWORD *)(v5 + 1272);
                                      v153 = sub_1C079E000(*(_QWORD *)(v5 + 944), (uint64_t)&unk_1ED761850);
                                      sub_1C07893A4(v153, v154, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                                      v155 = sub_1C0BE9508();
                                      if (v155 == v158 && v156 == v157)
                                      {
                                        sub_1C07A00DC(v155, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                                      }
                                      else
                                      {
                                        v152 = sub_1C07785B0();
                                        sub_1C07A00DC(v152, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                                        if ((v152 & 1) == 0)
                                        {
                                          *(_BYTE *)(v5 + 1866) = *(_BYTE *)(v5 + 1876);
                                          v160 = (_QWORD *)swift_task_alloc();
                                          *(_QWORD *)(v5 + 1840) = v160;
                                          *v160 = v5;
                                          v160[1] = sub_1C0BE58C4;
                                          sub_1C0BE8730(*(_QWORD *)(v5 + 544), *(_QWORD *)(v5 + 552), (_BYTE *)(v5 + 1866));
                                          return;
                                        }
                                      }
                                      sub_1C0BE95D0();
                                      sub_1C077A328(*(_QWORD *)(v5 + 960));
                                      sub_1C078803C();
                                      sub_1C08D6F78(v670, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                                      sub_1C07ACF80(&qword_1ED75D308);
                                      v671 = (__n128 *)sub_1C0778598();
                                      *(_QWORD *)(v5 + 1816) = v671;
                                      sub_1C0BE9A90(v671, (__n128)xmmword_1C10795A0);
                                      sub_1C0BE955C(v90, v672, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
                                      sub_1C077FB50();
                                      v673 = sub_1C0BE96FC();
                                      sub_1C0BE8F84(v673, v674, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                                      v671[3].n128_u64[1] = (unint64_t)v6;
                                      sub_1C0794BAC(&qword_1ED75CC40, (uint64_t (*)(uint64_t))type metadata accessor for Blocker, (uint64_t)&protocol conformance descriptor for Blocker);
                                      v797 = sub_1C078A7E4(v675);
                                      sub_1C0786DFC((uint64_t)v797, v676, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
                                      sub_1C077E268(v152 + v6[5], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v825 + 16));
                                      v677 = sub_1C0BE95E4();
                                      sub_1C0BE8F84(v677, v678, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                                      v679 = sub_1C07BC2E8();
                                      sub_1C0BE8F84(v679, v680, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
                                      v681 = sub_1C0781A10();
                                      sub_1C0BE9640(v681);
                                      v682 = sub_1C0BE99B0();
                                      sub_1C08D6F78(v682, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                                      sub_1C07BA974(*(uint64_t (**)(uint64_t, uint64_t))(v825 + 8));
                                      sub_1C0793D84();
                                      sub_1C0BE9554(v2);
                                      v683 = sub_1C0BE9520();
                                      sub_1C07DBCA0(v683, v684, (uint64_t (*)(_QWORD))type metadata accessor for Blocker);
                                      sub_1C077E450();
                                      sub_1C0BE94E0(v842, v777);
                                      sub_1C077FB50();
                                      sub_1C0BE9ACC();
                                      sub_1C0794BAC(&qword_1ED75A928, (uint64_t (*)(uint64_t))type metadata accessor for PairGenerator, (uint64_t)&protocol conformance descriptor for PairGenerator);
                                      v671[6].n128_u64[1] = v685;
                                      sub_1C07B17E4();
                                      *(_BYTE *)(v802 + *(int *)(v13 + 32)) = 1;
                                      sub_1C07B42A4(v2, v802);
                                      sub_1C07AB4A8();
                                      sub_1C0793628(v802 + *(int *)(v13 + 24), *(uint64_t (**)(uint64_t, uint64_t))(v825 + 32));
                                      *(_BYTE *)(v802 + *(int *)(v13 + 28)) = v847;
                                      sub_1C0797FF4();
                                      sub_1C07BB2A8(v2);
                                      v686 = sub_1C0BE9CCC();
                                      sub_1C07DBCA0(v686, v687, (uint64_t (*)(_QWORD))type metadata accessor for PairGenerator);
                                      sub_1C07B42A4(v856, v807);
                                      sub_1C07AF958(v842, v812);
                                      *(_BYTE *)(v5 + 1871) = v847;
                                      v671[8].n128_u64[1] = sub_1C077D2AC();
                                      sub_1C0794BAC(&qword_1ED75A9E8, (uint64_t (*)(uint64_t))type metadata accessor for PeopleMatcher, (uint64_t)&protocol conformance descriptor for PeopleMatcher);
                                      v671[9].n128_u64[0] = v688;
                                      v272 = sub_1C078B1F0();
                                      v689 = (_QWORD *)swift_task_alloc();
                                      *(_QWORD *)(v5 + 1824) = v689;
                                      *v689 = v5;
                                      v689[1] = sub_1C0BE5688;
                                      v239 = *(_QWORD *)(v5 + 960);
                                      v240 = *(_QWORD *)(v5 + 776);
                                      goto LABEL_140;
                                    }
                                  }
                                  v836 = *(_BYTE *)(v5 + 1876);
                                  v646 = *(_QWORD *)(v5 + 1272);
                                  v647 = *(_QWORD *)(v5 + 1256);
                                  v648 = *(_QWORD *)(v79 + 936);
                                  v818 = *(_QWORD *)(v79 + 672);
                                  v824 = *(_QWORD *)(v79 + 768);
                                  v861 = *(_QWORD *)(v79 + 664);
                                  v649 = *(_QWORD *)(v79 + 656);
                                  v650 = *(int **)(v79 + 624);
                                  v785 = *(int **)(v79 + 608);
                                  v796 = *(_QWORD *)(v79 + 616);
                                  v806 = *(_QWORD *)(v79 + 592);
                                  v651 = *(_QWORD *)(v79 + 552);
                                  v831 = *(_QWORD *)(v79 + 544);
                                  sub_1C08D6F78(v646, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                                  sub_1C07ACF80(&qword_1ED75D308);
                                  v652 = sub_1C0778598();
                                  *(_OWORD *)(v652 + 16) = xmmword_1C10795A0;
                                  v653 = v652;
                                  v854 = (int *)v652;
                                  sub_1C0BE9844(v651, v654, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
                                  sub_1C0BE9D8C();
                                  v655 = sub_1C07BBF94();
                                  v846 = v647;
                                  sub_1C0BE8F84(v655, v656, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                                  *(_QWORD *)(v653 + 56) = v650;
                                  sub_1C0794BAC(&qword_1ED75CC40, (uint64_t (*)(uint64_t))type metadata accessor for Blocker, (uint64_t)&protocol conformance descriptor for Blocker);
                                  *(_QWORD *)(v653 + 64) = v657;
                                  v775 = sub_1C0BE984C();
                                  v769 = v648;
                                  sub_1C0BE9628(v648, v658, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
                                  (*(void (**)(uint64_t, uint64_t, uint64_t))(v818 + 16))(v649 + v650[5], v651, v861);
                                  sub_1C0BE8F84(v647, v649 + v650[6], (uint64_t (*)(_QWORD))type metadata accessor for Source);
                                  *(_BYTE *)(v649 + v650[7]) = 0;
                                  sub_1C0BE8F84(v648, v649 + v650[8], (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
                                  *(_QWORD *)(v649 + v650[9]) = sub_1C077E788();
                                  v659 = sub_1C0884620();
                                  sub_1C08D6F78(v647, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                                  sub_1C07BA974(*(uint64_t (**)(uint64_t, uint64_t))(v818 + 8));
                                  *(_QWORD *)(v649 + v650[10]) = v659;
                                  *(_BYTE *)(v649 + v650[11]) = v836;
                                  sub_1C077ED88();
                                  sub_1C07BB2A8(v648);
                                  *(_QWORD *)(v649 + v650[12]) = v659;
                                  sub_1C07DBCA0(v649, (uint64_t)v775, (uint64_t (*)(_QWORD))type metadata accessor for Blocker);
                                  v660 = sub_1C0BE99BC();
                                  sub_1C07B42A4(v660, v661);
                                  sub_1C0BE8F84(v831, v647, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                                  sub_1C106CFE8();
                                  *((_QWORD *)v854 + 12) = v785;
                                  sub_1C0794BAC(&qword_1ED75A928, (uint64_t (*)(uint64_t))type metadata accessor for PairGenerator, (uint64_t)&protocol conformance descriptor for PairGenerator);
                                  *((_QWORD *)v854 + 13) = v662;
                                  v776 = sub_1C07B17E4();
                                  *(_BYTE *)(v796 + v785[8]) = 1;
                                  sub_1C07B264C(v648, v796);
                                  sub_1C07DBCA0(v647, v796 + v785[5], (uint64_t (*)(_QWORD))type metadata accessor for Source);
                                  (*(void (**)(uint64_t, uint64_t, uint64_t))(v818 + 32))(v796 + v785[6], v651, v861);
                                  *(_BYTE *)(v796 + v785[7]) = v836;
                                  v663 = *(_QWORD *)(v648 + *(int *)(v824 + 28));
                                  swift_retain();
                                  sub_1C07BA05C(v648);
                                  v244 = v831;
                                  *(_QWORD *)(v796 + v785[9]) = v663;
                                  v5 = v79;
                                  sub_1C07DBCA0(v796, (uint64_t)v776, (uint64_t (*)(_QWORD))type metadata accessor for PairGenerator);
                                  v664 = sub_1C0BE99BC();
                                  sub_1C07B264C(v664, v665);
                                  sub_1C07AEC10(v831, v846);
                                  sub_1C0BE9D8C();
                                  v666 = sub_1C07A71A0();
                                  *((_QWORD *)v854 + 17) = v666;
                                  sub_1C0794BAC(&qword_1ED75BBF0, (uint64_t (*)(uint64_t))type metadata accessor for PassthroughMatcher, (uint64_t)&protocol conformance descriptor for PassthroughMatcher);
                                  *((_QWORD *)v854 + 18) = v667;
                                  v668 = sub_1C07B17E4();
                                  sub_1C0BE9854(v846, (uint64_t)v668);
                                  *((_BYTE *)v668 + *(int *)(v666 + 20)) = v836;
                                  sub_1C07DBCA0(v769, (uint64_t)v668 + *(int *)(v666 + 24), (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
                                  v243 = v651;
                                  sub_1C0BE97D0();
                                  v245 = v854 + 38;
                                  sub_1C07AF958(v243, v769);
                                  sub_1C0BE8F84(v831, v846, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                                  LOBYTE(v862) = v836;
                                  *((_QWORD *)v854 + 22) = v806;
                                  sub_1C0794BAC(&qword_1ED75CE80, (uint64_t (*)(uint64_t))type metadata accessor for Resolver, (uint64_t)&protocol conformance descriptor for Resolver);
                                  v246 = v854;
                                  *((_QWORD *)v854 + 23) = v669;
                                  goto LABEL_144;
                                }
                              }
                              sub_1C0BE95D0();
                              sub_1C077A328(*(_QWORD *)(v5 + 984));
                              sub_1C078803C();
                              sub_1C08D6F78(v619, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                              sub_1C07ACF80(&qword_1ED75D308);
                              v620 = (__n128 *)sub_1C0778598();
                              *(_QWORD *)(v5 + 1752) = v620;
                              sub_1C0BE9A90(v620, (__n128)xmmword_1C107A8D0);
                              sub_1C0BE955C(v90, v621, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
                              sub_1C077FB50();
                              v622 = sub_1C0BE96FC();
                              sub_1C0BE8F84(v622, v623, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                              v620[3].n128_u64[1] = (unint64_t)v6;
                              sub_1C0794BAC(&qword_1ED75CC40, (uint64_t (*)(uint64_t))type metadata accessor for Blocker, (uint64_t)&protocol conformance descriptor for Blocker);
                              *(_QWORD *)(v5 + 1760) = v624;
                              v795 = sub_1C078A7E4(v624);
                              sub_1C0786DFC((uint64_t)v795, v625, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
                              v626 = sub_1C0BE9808();
                              *(_QWORD *)(v5 + 1768) = v627;
                              sub_1C077E268(v626, v627);
                              v628 = sub_1C0BE95E4();
                              sub_1C0BE8F84(v628, v629, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                              v630 = sub_1C07BC2E8();
                              sub_1C0BE8F84(v630, v631, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
                              v632 = sub_1C0781A10();
                              sub_1C0BE9640(v632);
                              v633 = sub_1C0BE99B0();
                              sub_1C08D6F78(v633, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                              v634 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8);
                              *(_QWORD *)(v5 + 1776) = v634;
                              sub_1C07BA974(v634);
                              sub_1C0793D84();
                              sub_1C0BE9554(v2);
                              v635 = sub_1C0BE9520();
                              sub_1C07DBCA0(v635, v636, (uint64_t (*)(_QWORD))type metadata accessor for Blocker);
                              sub_1C077E450();
                              v637 = sub_1C0BE9A24();
                              sub_1C0BE94E0(v637, v638);
                              sub_1C077FB50();
                              sub_1C0BE9ACC();
                              sub_1C0794BAC(&qword_1ED75A928, (uint64_t (*)(uint64_t))type metadata accessor for PairGenerator, (uint64_t)&protocol conformance descriptor for PairGenerator);
                              *(_QWORD *)(v5 + 1784) = v639;
                              v620[6].n128_u64[1] = v639;
                              sub_1C0BE9620();
                              *(_BYTE *)(v802 + *(int *)(v13 + 32)) = 1;
                              sub_1C07B42A4(v2, v802);
                              sub_1C0BE9600();
                              v640 = sub_1C0BE9630(*(int *)(v13 + 24));
                              *(_QWORD *)(v5 + 1792) = v641;
                              sub_1C0793628(v640, v641);
                              *(_BYTE *)(v802 + *(int *)(v13 + 28)) = v847;
                              sub_1C0797FF4();
                              sub_1C07BB2A8(v2);
                              v642 = sub_1C0BE97B4();
                              sub_1C07DBCA0(v642, v643, (uint64_t (*)(_QWORD))type metadata accessor for PairGenerator);
                              sub_1C07B42A4(v856, v807);
                              sub_1C078BA4C(v842, v812);
                              *(_BYTE *)(v5 + 1870) = v847;
                              v620[8].n128_u64[1] = sub_1C077D2AC();
                              sub_1C0794BAC(&qword_1ED75A9E8, (uint64_t (*)(uint64_t))type metadata accessor for PeopleMatcher, (uint64_t)&protocol conformance descriptor for PeopleMatcher);
                              v620[9].n128_u64[0] = v644;
                              v272 = sub_1C078B1F0();
                              v645 = (_QWORD *)swift_task_alloc();
                              *(_QWORD *)(v5 + 1800) = v645;
                              *v645 = v5;
                              v645[1] = sub_1C0BE51BC;
                              v239 = *(_QWORD *)(v5 + 984);
                              v240 = *(_QWORD *)(v5 + 784);
LABEL_140:
                              v241 = (uint64_t)v272;
                              v242 = (_BYTE *)v819;
                              goto LABEL_141;
                            }
                          }
                          v860 = *(_BYTE *)(v5 + 1876);
                          v574 = *(_QWORD *)(v5 + 1272);
                          v575 = *(_QWORD *)(v5 + 1256);
                          v576 = *(_QWORD *)(v5 + 936);
                          v853 = v575;
                          v577 = *(_QWORD *)(v79 + 760);
                          v578 = *(_QWORD *)(v79 + 656);
                          v579 = *(int **)(v79 + 624);
                          v817 = *(int **)(v79 + 608);
                          v823 = *(_QWORD *)(v79 + 616);
                          v794 = *(_QWORD *)(v79 + 592);
                          v580 = *(_QWORD *)(v79 + 552);
                          v835 = *(_QWORD *)(v79 + 664);
                          v841 = v580;
                          v581 = *(_QWORD *)(v79 + 544);
                          v830 = v581;
                          v805 = *(_QWORD *)(v79 + 672);
                          sub_1C08D6F78(v574, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                          sub_1C07ACF80(&qword_1ED75D308);
                          v582 = sub_1C0778598();
                          *(_OWORD *)(v582 + 16) = xmmword_1C107A8D0;
                          sub_1C0BE8F84(v580, v576, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
                          sub_1C07AC494();
                          sub_1C0BE8F84(v581, v853, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                          *(_QWORD *)(v582 + 56) = v579;
                          sub_1C0794BAC(&qword_1ED75CC40, (uint64_t (*)(uint64_t))type metadata accessor for Blocker, (uint64_t)&protocol conformance descriptor for Blocker);
                          v783 = v583;
                          *(_QWORD *)(v582 + 64) = v583;
                          v762 = sub_1C07B17E4();
                          sub_1C0BE955C(v576, v584, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
                          (*(void (**)(uint64_t, uint64_t, uint64_t))(v805 + 16))(v578 + v579[5], v577, v835);
                          sub_1C0BE8F84(v853, v578 + v579[6], (uint64_t (*)(_QWORD))type metadata accessor for Source);
                          *(_BYTE *)(v578 + v579[7]) = 0;
                          v585 = sub_1C0BE9F94();
                          sub_1C0BE8F84(v585, v586, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
                          v587 = sub_1C0883D28();
                          sub_1C0BE9F08(v587);
                          sub_1C08D6F78(v853, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                          (*(void (**)(uint64_t, uint64_t))(v805 + 8))(v577, v835);
                          sub_1C0BE9978();
                          v588 = v576;
                          v590 = *(_QWORD *)(v576 + v589);
                          swift_retain();
                          sub_1C07BA6E4(v576);
                          *(_QWORD *)(v578 + v579[12]) = v590;
                          sub_1C07DBCA0(v578, (uint64_t)v762, (uint64_t (*)(_QWORD))type metadata accessor for Blocker);
                          sub_1C07AEC10(v841, v576);
                          sub_1C0BE8F84(v830, v853, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                          sub_1C07AC494();
                          *(_QWORD *)(v582 + 96) = v817;
                          sub_1C0794BAC(&qword_1ED75A928, (uint64_t (*)(uint64_t))type metadata accessor for PairGenerator, (uint64_t)&protocol conformance descriptor for PairGenerator);
                          v763 = v591;
                          *(_QWORD *)(v582 + 104) = v591;
                          v592 = sub_1C07B17E4();
                          *(_BYTE *)(v823 + v817[8]) = 1;
                          v593 = sub_1C07BBF94();
                          sub_1C0BE8F84(v593, v594, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
                          sub_1C07DBCA0(v853, v823 + v817[5], (uint64_t (*)(_QWORD))type metadata accessor for Source);
                          sub_1C0BE9E30(v823 + v817[6], *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v805 + 32));
                          *(_BYTE *)(v823 + v817[7]) = v860;
                          sub_1C077ED88();
                          sub_1C07BA6E4(v576);
                          *(_QWORD *)(v823 + v817[9]) = v817;
                          sub_1C07DBCA0(v823, (uint64_t)v592, (uint64_t (*)(_QWORD))type metadata accessor for PairGenerator);
                          sub_1C0BE9D08(v841, v576);
                          sub_1C0BE8F84(v830, v853, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                          v595 = sub_1C0BE98BC();
                          *(_QWORD *)(v582 + 136) = v595;
                          sub_1C0794BAC(&qword_1ED75AFB0, (uint64_t (*)(uint64_t))type metadata accessor for SoftwareMatcher, (uint64_t)&protocol conformance descriptor for SoftwareMatcher);
                          *(_QWORD *)(v582 + 144) = v596;
                          v597 = sub_1C07B17E4();
                          sub_1C0BE9F1C((uint64_t)v597, *(int *)(v595 + 28));
                          sub_1C0BE9924();
                          sub_1C0BE9AF8();
                          sub_1C07DBCA0(v853, (uint64_t)v597 + *(int *)(v595 + 20), (uint64_t (*)(_QWORD))type metadata accessor for Source);
                          sub_1C0BE9CF4();
                          v598 = sub_1C0BE9D40();
                          sub_1C07B264C(v598, v599);
                          _s24IntelligencePlatformCore19OrganizationMatcherV11entityClass0aB006EntityG0Vvg_0();
                          sub_1C0BE8F84(v830, v853, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                          *(_QWORD *)(v582 + 176) = v579;
                          *(_QWORD *)(v582 + 184) = v783;
                          v784 = sub_1C07B17E4();
                          v600 = sub_1C08FF98C();
                          sub_1C0BE8F84(v600, v601, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
                          sub_1C07BFCF4();
                          sub_1C0BE8F84(v853, v578 + v579[6], (uint64_t (*)(_QWORD))type metadata accessor for Source);
                          *(_BYTE *)(v578 + v579[7]) = 0;
                          v602 = sub_1C0BE9950();
                          sub_1C0BE8F84(v602, v603, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
                          v604 = sub_1C0BE983C();
                          v605 = sub_1C0BE9F08(v604);
                          sub_1C08D6F78(v853, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                          sub_1C0BEA00C(v577);
                          sub_1C0BE9978();
                          sub_1C077ED88();
                          sub_1C07BB2A8(v576);
                          v606 = v579[12];
                          v244 = v830;
                          *(_QWORD *)(v578 + v606) = v605;
                          sub_1C07DBCA0(v578, (uint64_t)v784, (uint64_t (*)(_QWORD))type metadata accessor for Blocker);
                          v607 = sub_1C0BE9D40();
                          sub_1C07B42A4(v607, v608);
                          sub_1C07AEC10(v830, v853);
                          sub_1C0BE9DB8();
                          *(_QWORD *)(v582 + 216) = v817;
                          *(_QWORD *)(v582 + 224) = v763;
                          sub_1C07B17E4();
                          v5 = v823;
                          *(_BYTE *)(v823 + v817[8]) = 1;
                          v609 = sub_1C07BBF94();
                          sub_1C0BE8F84(v609, v610, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
                          sub_1C0BE9854(v853, v823 + v817[5]);
                          sub_1C0BE9750(v823 + v817[6]);
                          *(_BYTE *)(v823 + v817[7]) = v860;
                          sub_1C0779758();
                          sub_1C08D6F78(v588, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
                          v611 = sub_1C0BE9F3C(v817[9]);
                          sub_1C07DBCA0(v611, v612, (uint64_t (*)(_QWORD))type metadata accessor for PairGenerator);
                          v613 = (int *)type metadata accessor for OrganizationMatcher();
                          *(_QWORD *)(v582 + 256) = v613;
                          sub_1C0794BAC(&qword_1ED75BCE0, (uint64_t (*)(uint64_t))type metadata accessor for OrganizationMatcher, (uint64_t)&protocol conformance descriptor for OrganizationMatcher);
                          *(_QWORD *)(v582 + 264) = v614;
                          v615 = sub_1C078B1F0();
                          sub_1C0BE8F84(v841, (uint64_t)v615, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
                          sub_1C0BE8F84(v830, (uint64_t)v615 + v613[5], (uint64_t (*)(_QWORD))type metadata accessor for Source);
                          *(_DWORD *)((char *)v615 + v613[7]) = 1056964608;
                          v616 = v613[6];
                          v243 = v841;
                          *((_BYTE *)v615 + v616) = v860;
                          v245 = (_QWORD *)(v582 + 272);
                          sub_1C0BE8F84(v841, v588, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
                          sub_1C0BE8F84(v830, v853, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                          LOBYTE(v862) = v860;
                          *(_QWORD *)(v582 + 296) = v794;
                          sub_1C0794BAC(&qword_1ED75CE80, (uint64_t (*)(uint64_t))type metadata accessor for Resolver, (uint64_t)&protocol conformance descriptor for Resolver);
                          v246 = (_QWORD *)v582;
                          *(_QWORD *)(v582 + 304) = v617;
                          v618 = sub_1C0BE9FBC();
                          v316 = (char *)&v862;
                          v317 = (uint64_t)v618;
                          v314 = v588;
                          v315 = v853;
                          goto LABEL_145;
                        }
                      }
                      v859 = *(_BYTE *)(v5 + 1876);
                      v511 = *(_QWORD *)(v5 + 1272);
                      v512 = *(_QWORD *)(v5 + 1256);
                      v513 = *(_QWORD *)(v5 + 936);
                      v760 = *(_QWORD *)(v5 + 800);
                      v767 = *(_QWORD *)(v5 + 1016);
                      v514 = *(int **)(v5 + 768);
                      v515 = *(_QWORD *)(v5 + 760);
                      v516 = *(_QWORD *)(v5 + 672);
                      v517 = *(_QWORD *)(v5 + 664);
                      v518 = *(_QWORD *)(v5 + 656);
                      v519 = *(int **)(v5 + 624);
                      v810 = *(_QWORD *)(v79 + 616);
                      v816 = v516;
                      v822 = *(int **)(v79 + 608);
                      v520 = *(_QWORD *)(v79 + 552);
                      v852 = v514;
                      v521 = *(_QWORD *)(v79 + 544);
                      v834 = v517;
                      v839 = v521;
                      sub_1C08D6F78(v511, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                      sub_1C07ACF80(&qword_1ED75D308);
                      v522 = sub_1C0778598();
                      *(_QWORD *)(v79 + 1728) = v522;
                      *(_OWORD *)(v522 + 16) = xmmword_1C107E440;
                      sub_1C07BABE4(v520, v523, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
                      sub_1C0BE9DD0();
                      sub_1C07AB5B0(v521, v512);
                      *(_QWORD *)(v522 + 56) = v519;
                      sub_1C0794BAC(&qword_1ED75CC40, (uint64_t (*)(uint64_t))type metadata accessor for Blocker, (uint64_t)&protocol conformance descriptor for Blocker);
                      v782 = v524;
                      *(_QWORD *)(v522 + 64) = v524;
                      v773 = sub_1C07B17E4();
                      v525 = sub_1C077B078();
                      sub_1C0BE8F84(v525, v526, v527);
                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v816 + 16))(v518 + v519[5], v515, v834);
                      sub_1C07AB5B0(v512, v518 + v519[6]);
                      v528 = sub_1C0BE9B68();
                      sub_1C0BE8F84(v528, v529, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
                      *(_QWORD *)(v518 + v519[9]) = sub_1C077E788();
                      v530 = sub_1C0884620();
                      sub_1C08D6F78(v512, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                      (*(void (**)(uint64_t, uint64_t))(v816 + 8))(v515, v834);
                      sub_1C0BE9A9C();
                      sub_1C0BE9870();
                      sub_1C0BE9554(v513);
                      *(_QWORD *)(v518 + v519[12]) = v530;
                      sub_1C07DBCA0(v518, (uint64_t)v773, (uint64_t (*)(_QWORD))type metadata accessor for Blocker);
                      sub_1C07AB5B0(v520, v513);
                      sub_1C0BE8F84(v839, v512, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                      sub_1C106CDE4();
                      *(_QWORD *)(v522 + 96) = v822;
                      sub_1C0794BAC(&qword_1ED75A928, (uint64_t (*)(uint64_t))type metadata accessor for PairGenerator, (uint64_t)&protocol conformance descriptor for PairGenerator);
                      v774 = v531;
                      *(_QWORD *)(v522 + 104) = v531;
                      v755 = sub_1C07B17E4();
                      *(_BYTE *)(v810 + v822[8]) = 1;
                      v532 = sub_1C078109C();
                      sub_1C0BE8F84(v532, v533, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
                      sub_1C07DBCA0(v512, v810 + v822[5], (uint64_t (*)(_QWORD))type metadata accessor for Source);
                      (*(void (**)(uint64_t, uint64_t, uint64_t))(v816 + 32))(v810 + v822[6], v515, v834);
                      *(_BYTE *)(v810 + v822[7]) = v859;
                      sub_1C0BE9870();
                      sub_1C08D6F78(v513, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
                      *(_QWORD *)(v810 + v822[9]) = v822;
                      sub_1C07DBCA0(v810, (uint64_t)v755, (uint64_t (*)(_QWORD))type metadata accessor for PairGenerator);
                      v534 = sub_1C07A3304();
                      sub_1C0BE8F84(v534, v535, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
                      sub_1C0BE9518(v839, v512);
                      sub_1C106CDE4();
                      v536 = sub_1C07A71A0();
                      *(_QWORD *)(v522 + 136) = v536;
                      sub_1C0794BAC(&qword_1ED75BBF0, (uint64_t (*)(uint64_t))type metadata accessor for PassthroughMatcher, (uint64_t)&protocol conformance descriptor for PassthroughMatcher);
                      *(_QWORD *)(v522 + 144) = v537;
                      v538 = sub_1C079DFC4((uint64_t *)(v522 + 112));
                      sub_1C0BE9F28(v512, (uint64_t)v538);
                      *((_BYTE *)v538 + *(int *)(v536 + 20)) = v859;
                      sub_1C0BE9F28(v513, (uint64_t)v538 + *(int *)(v536 + 24));
                      sub_1C0BE97D0();
                      v539 = sub_1C07A3304();
                      sub_1C0BE9518(v539, v540);
                      _s24IntelligencePlatformCore15LocationMatcherV11entityClass0aB006EntityG0Vvg_0();
                      sub_1C0BE8F84(v839, v512, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                      *(_QWORD *)(v522 + 176) = v519;
                      *(_QWORD *)(v522 + 184) = v782;
                      v756 = sub_1C078B1F0();
                      v541 = sub_1C077B078();
                      sub_1C0BE8F84(v541, v542, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
                      sub_1C0BE9940();
                      sub_1C0BE8F84(v512, v518 + v519[6], (uint64_t (*)(_QWORD))type metadata accessor for Source);
                      v543 = sub_1C0BE9B68();
                      sub_1C0BE8F84(v543, v544, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
                      *(_QWORD *)(v518 + v519[9]) = sub_1C077E788();
                      v545 = sub_1C0884620();
                      sub_1C08D6F78(v512, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                      sub_1C077D8C4();
                      sub_1C07AD22C();
                      sub_1C0BE9A9C();
                      sub_1C0BE9870();
                      sub_1C0BE9554(v513);
                      v742 = v519;
                      *(_QWORD *)(v518 + v519[12]) = v545;
                      sub_1C07DBCA0(v518, (uint64_t)v756, (uint64_t (*)(_QWORD))type metadata accessor for Blocker);
                      sub_1C07AB5B0(v520, v513);
                      sub_1C0BE95C8(v839, v512);
                      _s24IntelligencePlatformCore15LocationMatcherV11entityClass0aB006EntityG0Vvg_0();
                      *(_QWORD *)(v522 + 216) = v822;
                      *(_QWORD *)(v522 + 224) = v774;
                      v757 = sub_1C078B1F0();
                      *(_BYTE *)(v810 + v822[8]) = 1;
                      v546 = sub_1C0788970();
                      sub_1C07AB5B0(v546, v547);
                      sub_1C0BE9868(v512, v810 + v822[5]);
                      sub_1C0BE97D0();
                      *(_BYTE *)(v810 + v822[7]) = v859;
                      v548 = *(_QWORD *)(v513 + v852[7]);
                      sub_1C0779758();
                      sub_1C0BEA018(v513);
                      *(_QWORD *)(v810 + v822[9]) = v548;
                      sub_1C07DBCA0(v810, (uint64_t)v757, (uint64_t (*)(_QWORD))type metadata accessor for PairGenerator);
                      sub_1C078BA4C(v520, v760);
                      sub_1C0BE8F84(v839, v767, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                      LOBYTE(v862) = v859;
                      *(_QWORD *)(v522 + 256) = sub_1C078B1F8();
                      sub_1C0794BAC(&qword_1ED75AEE8, (uint64_t (*)(uint64_t))type metadata accessor for LocationMatcher, (uint64_t)&protocol conformance descriptor for LocationMatcher);
                      v549 = (_QWORD *)v522;
                      *(_QWORD *)(v522 + 264) = v550;
                      sub_1C078B1F0();
                      v551 = sub_1C07A3304();
                      LocationMatcher.init(stores:source:pipelineType:)(v551, v552, v553, v554);
                      v845 = *(_BYTE *)(v79 + 1876);
                      v555 = *(_QWORD *)(v79 + 1256);
                      v829 = *(_QWORD *)(v79 + 1008);
                      v556 = *(_QWORD *)(v79 + 936);
                      v811 = *(_QWORD *)(v79 + 792);
                      v557 = *(_QWORD *)(v79 + 760);
                      v558 = *(_QWORD *)(v79 + 656);
                      v559 = *(_QWORD *)(v79 + 624);
                      v761 = *(_QWORD *)(v79 + 616);
                      v768 = *(_QWORD *)(v79 + 608);
                      v840 = *(_QWORD *)(v79 + 552);
                      v560 = *(_QWORD *)(v79 + 544);
                      sub_1C0BE955C(v840, v561, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
                      sub_1C077FB50();
                      sub_1C07BFC38(v560, v562, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                      v549[37] = v559;
                      v549[38] = v782;
                      sub_1C0BE9620();
                      sub_1C07BABE4(v556, v563, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
                      sub_1C0BE9940();
                      sub_1C0BE8F84(v555, v558 + v742[6], (uint64_t (*)(_QWORD))type metadata accessor for Source);
                      *(_BYTE *)(v558 + v742[7]) = 0;
                      sub_1C0BE8F84(v556, v558 + v742[8], (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
                      *(_QWORD *)(v558 + v742[9]) = sub_1C077E62C();
                      v564 = sub_1C0884620();
                      sub_1C08D6F78(v555, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                      sub_1C07AD22C();
                      *(_QWORD *)(v558 + v742[10]) = v564;
                      *(_BYTE *)(v558 + v742[11]) = v845;
                      v565 = *(_QWORD *)(v556 + v852[7]);
                      sub_1C077D144();
                      sub_1C0BE9964(v556);
                      *(_QWORD *)(v558 + v742[12]) = v565;
                      sub_1C0BE99C8(v566, v567, (uint64_t (*)(_QWORD))type metadata accessor for Blocker);
                      sub_1C0BE94E0(v840, v556);
                      sub_1C0BE94E0(v560, v555);
                      sub_1C077FB50();
                      v549[42] = v768;
                      v549[43] = v774;
                      sub_1C0BE984C();
                      *(_BYTE *)(v761 + v822[8]) = 1;
                      v568 = sub_1C0BEA02C();
                      sub_1C07AF958(v568, v569);
                      sub_1C0BE981C(v555, v761 + v822[5]);
                      sub_1C0BE97D0();
                      *(_BYTE *)(v761 + v822[7]) = v845;
                      sub_1C0797FF4();
                      sub_1C0BE9FA0(v556);
                      *(_QWORD *)(v761 + v822[9]) = v557;
                      sub_1C0BE9D78(v761, v570, (uint64_t (*)(_QWORD))type metadata accessor for PairGenerator);
                      sub_1C07AF958(v840, v811);
                      sub_1C0BE94E0(v560, v829);
                      *(_BYTE *)(v79 + 1869) = v845;
                      v549[47] = sub_1C077D2AC();
                      sub_1C0794BAC(&qword_1ED75A9E8, (uint64_t (*)(uint64_t))type metadata accessor for PeopleMatcher, (uint64_t)&protocol conformance descriptor for PeopleMatcher);
                      v549[48] = v571;
                      v572 = sub_1C078B1F0();
                      v573 = (_QWORD *)swift_task_alloc();
                      *(_QWORD *)(v79 + 1736) = v573;
                      *v573 = v79;
                      v573[1] = sub_1C0BE4F7C;
                      v239 = *(_QWORD *)(v79 + 1008);
                      v240 = *(_QWORD *)(v79 + 792);
                      v241 = (uint64_t)v572;
                      v242 = (_BYTE *)(v79 + 1869);
                      goto LABEL_141;
                    }
                  }
                  sub_1C0BE95D0();
                  sub_1C077A328(*(_QWORD *)(v5 + 1032));
                  sub_1C078803C();
                  sub_1C08D6F78(v484, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                  sub_1C07ACF80(&qword_1ED75D308);
                  v485 = (__n128 *)sub_1C0778598();
                  *(_QWORD *)(v5 + 1664) = v485;
                  sub_1C0BE9A90(v485, (__n128)xmmword_1C107A8D0);
                  sub_1C0BE955C(v90, v486, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
                  sub_1C077FB50();
                  v487 = sub_1C0BE96FC();
                  sub_1C0BE8F84(v487, v488, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                  v485[3].n128_u64[1] = (unint64_t)v6;
                  sub_1C0794BAC(&qword_1ED75CC40, (uint64_t (*)(uint64_t))type metadata accessor for Blocker, (uint64_t)&protocol conformance descriptor for Blocker);
                  *(_QWORD *)(v5 + 1672) = v489;
                  v793 = sub_1C078A7E4(v489);
                  sub_1C0786DFC((uint64_t)v793, v490, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
                  v491 = sub_1C0BE9808();
                  *(_QWORD *)(v5 + 1680) = v492;
                  sub_1C077E268(v491, v492);
                  v493 = sub_1C0BE95E4();
                  sub_1C0BE8F84(v493, v494, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                  v495 = sub_1C07BC2E8();
                  sub_1C0BE8F84(v495, v496, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
                  v497 = sub_1C0781A10();
                  sub_1C0BE9640(v497);
                  v498 = sub_1C0BE99B0();
                  sub_1C08D6F78(v498, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                  v499 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8);
                  *(_QWORD *)(v5 + 1688) = v499;
                  sub_1C07BA974(v499);
                  sub_1C0793D84();
                  sub_1C0BE9554(v2);
                  v500 = sub_1C0BE9520();
                  sub_1C07DBCA0(v500, v501, (uint64_t (*)(_QWORD))type metadata accessor for Blocker);
                  sub_1C077E450();
                  v502 = sub_1C0BE9A24();
                  sub_1C0BE94E0(v502, v503);
                  sub_1C077FB50();
                  sub_1C0BE9ACC();
                  sub_1C0794BAC(&qword_1ED75A928, (uint64_t (*)(uint64_t))type metadata accessor for PairGenerator, (uint64_t)&protocol conformance descriptor for PairGenerator);
                  *(_QWORD *)(v5 + 1696) = v504;
                  v485[6].n128_u64[1] = v504;
                  sub_1C0BE9620();
                  *(_BYTE *)(v802 + *(int *)(v13 + 32)) = 1;
                  sub_1C07B42A4(v2, v802);
                  sub_1C0BE9600();
                  v505 = sub_1C0BE9630(*(int *)(v13 + 24));
                  *(_QWORD *)(v5 + 1704) = v506;
                  sub_1C0793628(v505, v506);
                  *(_BYTE *)(v802 + *(int *)(v13 + 28)) = v847;
                  sub_1C0797FF4();
                  sub_1C07BB2A8(v2);
                  v507 = sub_1C0BE97B4();
                  sub_1C07DBCA0(v507, v508, (uint64_t (*)(_QWORD))type metadata accessor for PairGenerator);
                  sub_1C07B42A4(v856, v807);
                  sub_1C078BA4C(v842, v812);
                  *(_BYTE *)(v5 + 1868) = v847;
                  v485[8].n128_u64[1] = sub_1C077D2AC();
                  sub_1C0794BAC(&qword_1ED75A9E8, (uint64_t (*)(uint64_t))type metadata accessor for PeopleMatcher, (uint64_t)&protocol conformance descriptor for PeopleMatcher);
                  v485[9].n128_u64[0] = v509;
                  v272 = sub_1C078B1F0();
                  v510 = (_QWORD *)swift_task_alloc();
                  *(_QWORD *)(v5 + 1712) = v510;
                  *v510 = v5;
                  v510[1] = sub_1C0BE4A0C;
                  v239 = *(_QWORD *)(v5 + 1032);
                  v240 = *(_QWORD *)(v5 + 808);
                  goto LABEL_140;
                }
LABEL_160:
                sub_1C0BE95D0();
                sub_1C077A328(*(_QWORD *)(v5 + 1048));
                sub_1C078803C();
                sub_1C08D6F78(v464, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                sub_1C07ACF80(&qword_1ED75D308);
                v465 = (__n128 *)sub_1C0778598();
                *(_QWORD *)(v5 + 1640) = v465;
                sub_1C0BE9A90(v465, (__n128)xmmword_1C10795A0);
                sub_1C0BE955C(v90, v466, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
                sub_1C077FB50();
                v467 = sub_1C0BE96FC();
                sub_1C0BE8F84(v467, v468, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                v465[3].n128_u64[1] = (unint64_t)v6;
                sub_1C0794BAC(&qword_1ED75CC40, (uint64_t (*)(uint64_t))type metadata accessor for Blocker, (uint64_t)&protocol conformance descriptor for Blocker);
                v792 = sub_1C078A7E4(v469);
                sub_1C0786DFC((uint64_t)v792, v470, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
                sub_1C077E268(v91 + v6[5], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v825 + 16));
                v471 = sub_1C0BE95E4();
                sub_1C0BE8F84(v471, v472, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                v473 = sub_1C07BC2E8();
                sub_1C0BE8F84(v473, v474, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
                v475 = sub_1C0781A10();
                sub_1C0BE9640(v475);
                v476 = sub_1C0BE99B0();
                sub_1C08D6F78(v476, (uint64_t (*)(_QWORD))type metadata accessor for Source);
                sub_1C07BA974(*(uint64_t (**)(uint64_t, uint64_t))(v825 + 8));
                sub_1C0793D84();
                sub_1C0BE9554(v2);
                v477 = sub_1C0BE9520();
                sub_1C07DBCA0(v477, v478, (uint64_t (*)(_QWORD))type metadata accessor for Blocker);
                sub_1C077E450();
                sub_1C0BE94E0(v842, v777);
                sub_1C077FB50();
                sub_1C0BE9ACC();
                sub_1C0794BAC(&qword_1ED75A928, (uint64_t (*)(uint64_t))type metadata accessor for PairGenerator, (uint64_t)&protocol conformance descriptor for PairGenerator);
                v465[6].n128_u64[1] = v479;
                sub_1C07B17E4();
                *(_BYTE *)(v802 + *(int *)(v13 + 32)) = 1;
                sub_1C07B42A4(v2, v802);
                sub_1C07AB4A8();
                sub_1C0793628(v802 + *(int *)(v13 + 24), *(uint64_t (**)(uint64_t, uint64_t))(v825 + 32));
                *(_BYTE *)(v802 + *(int *)(v13 + 28)) = v847;
                sub_1C0797FF4();
                sub_1C07BB2A8(v2);
                v480 = sub_1C0BE9CCC();
                sub_1C07DBCA0(v480, v481, (uint64_t (*)(_QWORD))type metadata accessor for PairGenerator);
                sub_1C07B42A4(v856, v807);
                sub_1C07AF958(v842, v812);
                *(_BYTE *)(v5 + 1864) = v847;
                v465[8].n128_u64[1] = sub_1C077D2AC();
                sub_1C0794BAC(&qword_1ED75A9E8, (uint64_t (*)(uint64_t))type metadata accessor for PeopleMatcher, (uint64_t)&protocol conformance descriptor for PeopleMatcher);
                v465[9].n128_u64[0] = v482;
                v272 = sub_1C078B1F0();
                v483 = (_QWORD *)swift_task_alloc();
                *(_QWORD *)(v5 + 1648) = v483;
                *v483 = v5;
                v483[1] = sub_1C0BE47D0;
                v239 = *(_QWORD *)(v5 + 1048);
                v240 = *(_QWORD *)(v5 + 816);
                goto LABEL_140;
              }
            }
          }
          sub_1C08D6F78(*(_QWORD *)v91, (uint64_t (*)(_QWORD))type metadata accessor for Source);
          goto LABEL_160;
        }
      }
      sub_1C0BE95D0();
      sub_1C077A328(*(_QWORD *)(v5 + 1080));
      sub_1C078803C();
      sub_1C08D6F78(v437, (uint64_t (*)(_QWORD))type metadata accessor for Source);
      sub_1C07ACF80(&qword_1ED75D308);
      v438 = (__n128 *)sub_1C0778598();
      *(_QWORD *)(v5 + 1576) = v438;
      sub_1C0BE9A90(v438, (__n128)xmmword_1C107E440);
      sub_1C0BE955C(v56, v439, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
      sub_1C077FB50();
      v440 = sub_1C0BE96FC();
      sub_1C0BE8F84(v440, v441, (uint64_t (*)(_QWORD))type metadata accessor for Source);
      v438[3].n128_u64[1] = (unint64_t)v6;
      sub_1C0794BAC(&qword_1ED75CC40, (uint64_t (*)(uint64_t))type metadata accessor for Blocker, (uint64_t)&protocol conformance descriptor for Blocker);
      *(_QWORD *)(v5 + 1584) = v442;
      v791 = sub_1C078A7E4(v442);
      sub_1C0786DFC((uint64_t)v791, v443, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
      v444 = sub_1C0BE9808();
      *(_QWORD *)(v5 + 1592) = v445;
      sub_1C077E268(v444, v445);
      v446 = sub_1C0BE95E4();
      sub_1C0BE8F84(v446, v447, (uint64_t (*)(_QWORD))type metadata accessor for Source);
      v448 = sub_1C07BC2E8();
      sub_1C0BE8F84(v448, v449, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
      v450 = sub_1C0781A10();
      sub_1C0BE9640(v450);
      v451 = sub_1C0BE99B0();
      sub_1C08D6F78(v451, (uint64_t (*)(_QWORD))type metadata accessor for Source);
      v452 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8);
      *(_QWORD *)(v5 + 1600) = v452;
      sub_1C07BA974(v452);
      sub_1C0793D84();
      sub_1C0BE9554(v2);
      v453 = sub_1C0BE9520();
      sub_1C07DBCA0(v453, v454, (uint64_t (*)(_QWORD))type metadata accessor for Blocker);
      sub_1C077E450();
      v455 = sub_1C0BE9A24();
      sub_1C0BE94E0(v455, v456);
      sub_1C077FB50();
      sub_1C0BE9ACC();
      sub_1C0794BAC(&qword_1ED75A928, (uint64_t (*)(uint64_t))type metadata accessor for PairGenerator, (uint64_t)&protocol conformance descriptor for PairGenerator);
      *(_QWORD *)(v5 + 1608) = v457;
      v438[6].n128_u64[1] = v457;
      sub_1C0BE9620();
      *(_BYTE *)(v802 + *(int *)(v13 + 32)) = 1;
      sub_1C07B42A4(v2, v802);
      sub_1C0BE9600();
      v458 = sub_1C0BE9630(*(int *)(v13 + 24));
      *(_QWORD *)(v5 + 1616) = v459;
      sub_1C0793628(v458, v459);
      *(_BYTE *)(v802 + *(int *)(v13 + 28)) = v847;
      sub_1C0797FF4();
      sub_1C07BB2A8(v2);
      v460 = sub_1C0BE97B4();
      sub_1C07DBCA0(v460, v461, (uint64_t (*)(_QWORD))type metadata accessor for PairGenerator);
      sub_1C07B42A4(v856, v807);
      sub_1C078BA4C(v842, v812);
      *(_BYTE *)(v5 + 1865) = v847;
      v438[8].n128_u64[1] = sub_1C077D2AC();
      sub_1C0794BAC(&qword_1ED75A9E8, (uint64_t (*)(uint64_t))type metadata accessor for PeopleMatcher, (uint64_t)&protocol conformance descriptor for PeopleMatcher);
      v438[9].n128_u64[0] = v462;
      v272 = sub_1C078B1F0();
      v463 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v5 + 1624) = v463;
      *v463 = v5;
      v463[1] = sub_1C0BE3FC4;
      v239 = *(_QWORD *)(v5 + 1080);
      v240 = *(_QWORD *)(v5 + 824);
      goto LABEL_140;
    }
  }
  sub_1C0BE9E50();
  sub_1C07B9E54();
}

uint64_t sub_1C0BE10D4()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C077B0C8();
  sub_1C07B4220();
  *(_QWORD *)(v1 + 1304) = v0;
  swift_task_dealloc();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0BE1120()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t (*v11)(void);
  uint64_t v13;

  sub_1C077B704();
  v5 = *(_QWORD *)(v1 + 1288);
  sub_1C077EC0C();
  sub_1C0BE97A8(v6, v7, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C07893A4(v2, v8, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  *(_QWORD *)(v5 + 536) = v3;
  sub_1C0794BAC(&qword_1ED75CE80, (uint64_t (*)(uint64_t))type metadata accessor for Resolver, (uint64_t)&protocol conformance descriptor for Resolver);
  *(_QWORD *)(v5 + 544) = v9;
  v10 = sub_1C0BE9620();
  sub_1C0BE95A0((uint64_t)v10);
  sub_1C08D6F78(v0, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C08D6F78(v2, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  *(_QWORD *)(v4 + *(int *)(v13 + 24)) = v5;
  sub_1C07A6FC0();
  sub_1C0779D20();
  sub_1C0786388();
  sub_1C0778638();
  sub_1C07767D4();
  sub_1C077C104();
  sub_1C0779D18();
  sub_1C07758BC();
  sub_1C07796F8();
  sub_1C07767BC();
  sub_1C0786390();
  sub_1C077C830();
  sub_1C077C27C();
  sub_1C077C828();
  sub_1C0778744();
  sub_1C07819BC();
  sub_1C0780AA8();
  sub_1C07806D8();
  sub_1C077F164();
  sub_1C07B68D8();
  sub_1C077E900();
  sub_1C07815B0();
  sub_1C07A9950();
  sub_1C07B25F4();
  sub_1C07B802C();
  sub_1C07889DC();
  sub_1C0776AC4();
  sub_1C0781ED8();
  sub_1C078DC10();
  sub_1C078A4A0();
  sub_1C07AFAEC();
  sub_1C07AFE20();
  sub_1C077F860();
  sub_1C0778874();
  sub_1C07B0110();
  sub_1C07B1E30();
  sub_1C0780BEC();
  sub_1C0775BEC();
  sub_1C07817A8();
  sub_1C07ABD9C();
  sub_1C0781234();
  sub_1C07799D4();
  sub_1C07AD77C();
  sub_1C07AE9B0();
  sub_1C077F330();
  sub_1C077D2A4();
  sub_1C07AB898();
  sub_1C07AEFEC();
  sub_1C077B8E0();
  sub_1C078E184();
  sub_1C07B7C70();
  sub_1C077C4B8();
  sub_1C079DD70();
  sub_1C078A034();
  sub_1C07A873C();
  sub_1C077B2D8();
  sub_1C078660C();
  sub_1C0785140();
  sub_1C079CE88();
  sub_1C07AD2A0();
  sub_1C078248C();
  sub_1C07AA11C();
  sub_1C07BAE60();
  sub_1C0BE94C8();
  sub_1C079BF9C();
  sub_1C07B97F8();
  sub_1C07B8530();
  sub_1C0790990();
  sub_1C079EFB8();
  sub_1C07B18DC();
  sub_1C07A32FC();
  sub_1C07B73C0();
  sub_1C077E9F8();
  sub_1C07B48B0();
  sub_1C0782E58();
  sub_1C0780574();
  sub_1C078D800();
  sub_1C07AB000();
  sub_1C07AA938();
  sub_1C0BE94D8();
  sub_1C07BCFDC();
  sub_1C08FF618();
  v11 = (uint64_t (*)(void))sub_1C077FE7C();
  return sub_1C0781074(v11);
}

uint64_t sub_1C0BE1314()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C077B0C8();
  sub_1C07B4220();
  *(_QWORD *)(v1 + 1368) = v0;
  swift_task_dealloc();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0BE1360()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t (*v33)(void);
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  void (*v38)(uint64_t, uint64_t);
  int *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;

  sub_1C077B704();
  v40 = v1[168];
  v3 = (void (*)(uint64_t, uint64_t, uint64_t))v1[166];
  v36 = v1[165];
  v38 = (void (*)(uint64_t, uint64_t))v1[167];
  v4 = (_QWORD *)v1[164];
  sub_1C0BE9BB0();
  v43 = v6;
  v44 = v5;
  v7 = v1[95];
  v8 = v1[82];
  v9 = (int *)v1[78];
  v35 = v1[77];
  v39 = (int *)v1[76];
  v45 = v1[83];
  v46 = v1[69];
  v10 = v1[68];
  v41 = v1[74];
  v42 = v1[67];
  sub_1C07BABE4(v46, v11, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C07AC494();
  sub_1C0BE995C(v10, v12, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  v4[22] = v9;
  v4[23] = v36;
  v37 = sub_1C0BE9540();
  sub_1C0BE97C8(v0, v13, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v3(v8 + v9[5], v7, v45);
  sub_1C0BE8F84(v2, v8 + v9[6], (uint64_t (*)(_QWORD))type metadata accessor for Source);
  *(_BYTE *)(v8 + v9[7]) = 0;
  sub_1C0BE8F84(v0, v8 + v9[8], (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  v14 = sub_1C077E788();
  v15 = sub_1C0BE9EAC(v14, v9[9]);
  sub_1C08D6F78(v2, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  v38(v7, v45);
  *(_QWORD *)(v8 + v9[10]) = v15;
  *(_BYTE *)(v8 + v9[11]) = v47;
  v16 = *(_QWORD *)(v0 + *(int *)(v44 + 28));
  sub_1C0783050();
  sub_1C0BE9554(v0);
  *(_QWORD *)(v8 + v9[12]) = v16;
  sub_1C07DBCA0(v8, (uint64_t)v37, (uint64_t (*)(_QWORD))type metadata accessor for Blocker);
  sub_1C07AB5B0(v46, v0);
  sub_1C0BE95C8(v10, v2);
  sub_1C07AC494();
  v4[27] = v39;
  v4[28] = v40;
  sub_1C0BE9540();
  sub_1C0BE9EB4();
  *(_BYTE *)(v35 + v17) = v18;
  sub_1C0BE9518(v0, v35);
  sub_1C0BE9868(v2, v35 + v39[5]);
  sub_1C0BE9BE4(v39[6]);
  sub_1C0BE9738();
  *(_BYTE *)(v35 + v39[7]) = v47;
  v19 = *(_QWORD *)(v0 + *(int *)(v44 + 28));
  sub_1C0779758();
  sub_1C07AF87C(v0);
  *(_QWORD *)(v35 + v39[9]) = v19;
  sub_1C0BE9A34(v35, v20, (uint64_t (*)(_QWORD))type metadata accessor for PairGenerator);
  v21 = sub_1C0BE96D8();
  sub_1C0BE9518(v21, v22);
  sub_1C07AB5B0(v10, v2);
  v23 = sub_1C0BE98BC();
  v4[32] = v23;
  sub_1C0794BAC(&qword_1ED75AFB0, (uint64_t (*)(uint64_t))type metadata accessor for SoftwareMatcher, (uint64_t)&protocol conformance descriptor for SoftwareMatcher);
  v4[33] = v24;
  v25 = sub_1C078B1F0();
  sub_1C0BE9780((uint64_t)v25);
  v26 = sub_1C0788970();
  sub_1C0BE9868(v26, v27);
  sub_1C0BE9F78(v2, (uint64_t)v4 + *(int *)(v23 + 20) + 232);
  *((_BYTE *)v4 + *(int *)(v23 + 24) + 232) = v47;
  sub_1C0BE95C8(v46, v0);
  sub_1C07AB5B0(v10, v2);
  v4[37] = v41;
  sub_1C0794BAC(&qword_1ED75CE80, (uint64_t (*)(uint64_t))type metadata accessor for Resolver, (uint64_t)&protocol conformance descriptor for Resolver);
  v4[38] = v28;
  sub_1C078B1F0();
  v29 = sub_1C0BE99BC();
  Resolver.init(stores:source:pipelineType:)(v29, v30, v31, v32);
  sub_1C0BE99F4(v46);
  sub_1C0BE9554(v10);
  *(_QWORD *)(v42 + *(int *)(v43 + 24)) = v4;
  sub_1C07A6FC0();
  sub_1C0779D20();
  sub_1C0786388();
  sub_1C0778638();
  sub_1C07767D4();
  sub_1C077C104();
  sub_1C0779D18();
  sub_1C07758BC();
  sub_1C07796F8();
  sub_1C07767BC();
  sub_1C0786390();
  sub_1C077C830();
  sub_1C077C27C();
  sub_1C077C828();
  sub_1C0778744();
  sub_1C07819BC();
  sub_1C0780AA8();
  sub_1C07806D8();
  sub_1C077F164();
  sub_1C07B68D8();
  sub_1C077E900();
  sub_1C07815B0();
  sub_1C07A9950();
  sub_1C07B25F4();
  sub_1C07B802C();
  sub_1C07889DC();
  sub_1C0776AC4();
  sub_1C0781ED8();
  sub_1C078DC10();
  sub_1C078A4A0();
  sub_1C07AFAEC();
  sub_1C07AFE20();
  sub_1C077F860();
  sub_1C0778874();
  sub_1C07B0110();
  sub_1C07B1E30();
  sub_1C0780BEC();
  sub_1C0775BEC();
  sub_1C07817A8();
  sub_1C07ABD9C();
  sub_1C0781234();
  sub_1C07799D4();
  sub_1C07AD77C();
  sub_1C07AE9B0();
  sub_1C077F330();
  sub_1C077D2A4();
  sub_1C07AB898();
  sub_1C07AEFEC();
  sub_1C077B8E0();
  sub_1C078E184();
  sub_1C07B7C70();
  sub_1C077C4B8();
  sub_1C079DD70();
  sub_1C078A034();
  sub_1C07A873C();
  sub_1C077B2D8();
  sub_1C078660C();
  sub_1C0785140();
  sub_1C079CE88();
  sub_1C07AD2A0();
  sub_1C078248C();
  sub_1C07AA11C();
  sub_1C07BAE60();
  sub_1C0BE94C8();
  sub_1C079BF9C();
  sub_1C07B97F8();
  sub_1C07B8530();
  sub_1C0790990();
  sub_1C079EFB8();
  sub_1C07B18DC();
  sub_1C07A32FC();
  sub_1C07B73C0();
  sub_1C077E9F8();
  sub_1C07B48B0();
  sub_1C0782E58();
  sub_1C0780574();
  sub_1C078D800();
  sub_1C07AB000();
  sub_1C07AA938();
  sub_1C0BE94D8();
  sub_1C07BCFDC();
  sub_1C08FF618();
  v33 = (uint64_t (*)(void))sub_1C077FE7C();
  return sub_1C0781074(v33);
}

uint64_t sub_1C0BE1810()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C077B0C8();
  sub_1C07B4220();
  *(_QWORD *)(v1 + 1432) = v0;
  swift_task_dealloc();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0BE185C()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  os_log_type_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t (*v63)(void);
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  int *v69;
  int *v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;

  sub_1C077B704();
  v71 = *(_QWORD *)(v0 + 1408);
  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1392);
  v66 = *(_QWORD *)(v0 + 1384);
  v2 = *(_QWORD **)(v0 + 1376);
  v86 = *(_BYTE *)(v0 + 1876);
  v3 = *(_QWORD *)(v0 + 1256);
  v76 = *(_QWORD *)(v0 + 1192);
  v78 = *(_QWORD *)(v0 + 1432);
  v4 = *(_QWORD *)(v0 + 936);
  v75 = *(_QWORD *)(v0 + 896);
  v5 = *(_QWORD *)(v0 + 760);
  v80 = *(_QWORD *)(v0 + 768);
  v82 = *(_QWORD *)(v0 + 664);
  v6 = *(_QWORD *)(v0 + 656);
  v7 = *(int **)(v0 + 624);
  v65 = *(_QWORD *)(v0 + 616);
  v69 = *(int **)(v0 + 608);
  v8 = *(_QWORD *)(v0 + 544);
  v84 = *(_QWORD *)(v0 + 552);
  sub_1C0BE8F84(v84, v4, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C0BE9730();
  sub_1C07BFC38(v8, v9, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  v2[22] = v7;
  v2[23] = v66;
  v67 = sub_1C0BE9540();
  sub_1C0BE9844(v4, v10, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v1(v6 + v7[5], v5, v82);
  sub_1C0BE8F84(v3, v6 + v7[6], (uint64_t (*)(_QWORD))type metadata accessor for Source);
  *(_BYTE *)(v6 + v7[7]) = 0;
  sub_1C0BE8F84(v4, v6 + v7[8], (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  *(_QWORD *)(v6 + v7[9]) = sub_1C0883D28();
  v11 = sub_1C0884620();
  sub_1C08D6F78(v3, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0BE9940();
  *(_QWORD *)(v6 + v7[10]) = v11;
  *(_BYTE *)(v6 + v7[11]) = v86;
  v12 = *(_QWORD *)(v4 + *(int *)(v80 + 28));
  sub_1C0783050();
  sub_1C0BE9FA0(v4);
  *(_QWORD *)(v6 + v7[12]) = v12;
  sub_1C07DBCA0(v6, (uint64_t)v67, (uint64_t (*)(_QWORD))type metadata accessor for Blocker);
  sub_1C07AF958(v84, v4);
  sub_1C0BE94E0(v8, v3);
  sub_1C0BE9730();
  v2[27] = v69;
  v2[28] = v71;
  v72 = sub_1C0BE984C();
  *(_BYTE *)(v65 + v69[8]) = 1;
  v13 = sub_1C077B200();
  sub_1C0BE8F84(v13, v14, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C0BE981C(v3, v65 + v69[5]);
  sub_1C0BE97D0();
  *(_BYTE *)(v65 + v69[7]) = v86;
  v15 = *(_QWORD *)(v4 + *(int *)(v80 + 28));
  sub_1C0779758();
  sub_1C0BE99F4(v4);
  *(_QWORD *)(v65 + v69[9]) = v15;
  sub_1C07DBCA0(v65, (uint64_t)v72, (uint64_t (*)(_QWORD))type metadata accessor for PairGenerator);
  sub_1C0BE95C8(v84, v75);
  sub_1C0BE94E0(v8, v76);
  v2[32] = sub_1C078B1F8();
  sub_1C0794BAC(&qword_1ED75AEE8, (uint64_t (*)(uint64_t))type metadata accessor for LocationMatcher, (uint64_t)&protocol conformance descriptor for LocationMatcher);
  v2[33] = v16;
  sub_1C078B1F0();
  v17 = sub_1C078109C();
  LocationMatcher.init(stores:source:pipelineType:)(v17, v18, v19, v20);
  if (v78)
  {
    v22 = *(_QWORD *)(v0 + 1376);
    v23 = (uint64_t *)(v22 + 32);
    sub_1C0BE9C50();
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)(v2 + 24));
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)(v2 + 19));
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v22 + 112);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v22 + 72);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v22 + 32);
    *(_QWORD *)(v22 + 16) = 0;
    swift_release();
    if (qword_1ED761458 != -1)
      swift_once();
    v24 = sub_1C077585C();
    v25 = sub_1C0BE94B4(v24, (uint64_t)qword_1ED78D818);
    sub_1C0778734();
    sub_1C0778734();
    v26 = sub_1C106F538();
    v27 = v25;
    if (os_log_type_enabled(v26, v25))
    {
      v28 = (uint8_t *)sub_1C0796818();
      sub_1C0775854();
      *(_DWORD *)v28 = 136315138;
      *v2 = v78;
      sub_1C0778734();
      sub_1C07ACF80(&qword_1ED7614F0);
      v29 = sub_1C07B62D8();
      *v23 = sub_1C0BEA020(v29, v30);
      sub_1C10705AC();
      sub_1C077E584();
      sub_1C0780A2C();
      sub_1C0780A2C();
      sub_1C07796F0(&dword_1C0771000, v26, v27, "Linker could not construct children, creating empty list due to: %s", v28);
      sub_1C07814E0();
      sub_1C0776778();
    }
    sub_1C0780A2C();
    sub_1C0780A2C();

    v58 = *(_QWORD *)(v0 + 1280);
    v47 = *(_QWORD *)(v0 + 552);
    v45 = *(_QWORD *)(v0 + 544);
    v87 = *(_QWORD *)(v0 + 536);
    sub_1C0780A2C();
    v31 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v74 = *(_QWORD *)(v0 + 1408);
    v68 = *(_QWORD *)(v0 + 1384);
    v31 = *(_QWORD **)(v0 + 1376);
    v83 = *(_BYTE *)(v0 + 1876);
    v32 = *(_QWORD *)(v0 + 1256);
    v33 = *(_QWORD *)(v0 + 936);
    v79 = *(_QWORD *)(v0 + 1280);
    v81 = *(_QWORD *)(v0 + 768);
    v34 = *(_QWORD *)(v0 + 656);
    v35 = *(int **)(v0 + 624);
    v70 = *(int **)(v0 + 608);
    v73 = *(_QWORD *)(v0 + 616);
    v77 = *(_QWORD *)(v0 + 592);
    v36 = *(_QWORD *)(v0 + 544);
    v85 = *(_QWORD *)(v0 + 552);
    v87 = *(_QWORD *)(v0 + 536);
    sub_1C0BE995C(v85, v21, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
    sub_1C07AC494();
    sub_1C0BE8F84(v36, v32, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    v31[37] = v35;
    v31[38] = v68;
    sub_1C0BE9540();
    sub_1C0BE97C8(v33, v37, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    sub_1C07BFCF4();
    sub_1C07AB5B0(v32, v34 + v35[6]);
    *(_BYTE *)(v34 + v35[7]) = 0;
    sub_1C0BE8F84(v33, v34 + v35[8], (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
    v38 = sub_1C0883D28();
    v39 = sub_1C0BE9EAC(v38, v35[9]);
    sub_1C0BE9964(v32);
    sub_1C0BE9940();
    *(_QWORD *)(v34 + v35[10]) = v39;
    *(_BYTE *)(v34 + v35[11]) = v83;
    v40 = *(_QWORD *)(v33 + *(int *)(v81 + 28));
    sub_1C0783050();
    sub_1C0BE9554(v33);
    *(_QWORD *)(v34 + v35[12]) = v40;
    sub_1C0BE987C(v41, v42, (uint64_t (*)(_QWORD))type metadata accessor for Blocker);
    sub_1C07AB5B0(v85, v33);
    v43 = v32;
    sub_1C0BE94E0(v36, v32);
    sub_1C07AC494();
    v31[42] = v70;
    v31[43] = v74;
    sub_1C0BE9540();
    *(_BYTE *)(v73 + v70[8]) = 1;
    sub_1C0BE9518(v33, v73);
    sub_1C0BE981C(v32, v73 + v70[5]);
    sub_1C0BE9BE4(v70[6]);
    sub_1C0BE9738();
    *(_BYTE *)(v73 + v70[7]) = v83;
    v44 = *(_QWORD *)(v33 + *(int *)(v81 + 28));
    sub_1C0779758();
    sub_1C0BE9964(v33);
    v45 = v36;
    *(_QWORD *)(v73 + v70[9]) = v44;
    sub_1C0BE9A34(v73, v46, (uint64_t (*)(_QWORD))type metadata accessor for PairGenerator);
    v47 = v85;
    sub_1C0BE94E0(v85, v33);
    v48 = sub_1C077B200();
    sub_1C0BE8F84(v48, v49, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    v50 = sub_1C0BE98BC();
    v31[47] = v50;
    sub_1C0794BAC(&qword_1ED75AFB0, (uint64_t (*)(uint64_t))type metadata accessor for SoftwareMatcher, (uint64_t)&protocol conformance descriptor for SoftwareMatcher);
    v31[48] = v51;
    v52 = sub_1C078B1F0();
    sub_1C0BE9780((uint64_t)v52);
    v53 = sub_1C0BE9F30();
    sub_1C0BE981C(v53, v54);
    sub_1C07DBCA0(v43, (uint64_t)v31 + *(int *)(v50 + 20) + 352, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    *((_BYTE *)v31 + *(int *)(v50 + 24) + 352) = v83;
    sub_1C0BE94E0(v85, v33);
    v55 = sub_1C077B200();
    sub_1C0BE8F84(v55, v56, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    v31[52] = v77;
    sub_1C0794BAC(&qword_1ED75CE80, (uint64_t (*)(uint64_t))type metadata accessor for Resolver, (uint64_t)&protocol conformance descriptor for Resolver);
    v31[53] = v57;
    v58 = v79;
    sub_1C079DFC4(v31 + 49);
    v59 = sub_1C0BE96D8();
    Resolver.init(stores:source:pipelineType:)(v59, v60, v61, v62);
  }
  sub_1C08D6F78(v47, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C08D6F78(v45, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  *(_QWORD *)(v87 + *(int *)(v58 + 24)) = v31;
  sub_1C0798CA8();
  sub_1C0793128();
  sub_1C0779D20();
  sub_1C0786388();
  sub_1C0778638();
  sub_1C07767D4();
  sub_1C077C104();
  sub_1C0779D18();
  sub_1C07758BC();
  sub_1C07796F8();
  sub_1C07767BC();
  swift_task_dealloc();
  sub_1C0786390();
  sub_1C077C830();
  sub_1C077C27C();
  sub_1C077C828();
  sub_1C0778744();
  sub_1C07819BC();
  sub_1C0780AA8();
  sub_1C07806D8();
  sub_1C077F164();
  sub_1C07B68D8();
  sub_1C077E900();
  sub_1C07815B0();
  sub_1C07A9950();
  sub_1C07B25F4();
  sub_1C07B802C();
  sub_1C07889DC();
  sub_1C0776AC4();
  sub_1C0781ED8();
  sub_1C078DC10();
  sub_1C078A4A0();
  sub_1C07AFAEC();
  sub_1C07AFE20();
  sub_1C077F860();
  sub_1C0778874();
  sub_1C07B0110();
  sub_1C07B1E30();
  sub_1C0780BEC();
  sub_1C0775BEC();
  sub_1C07817A8();
  sub_1C07ABD9C();
  sub_1C0781234();
  sub_1C07799D4();
  sub_1C07AD77C();
  sub_1C07AE9B0();
  sub_1C077F330();
  sub_1C077D2A4();
  sub_1C07AB898();
  sub_1C07AEFEC();
  sub_1C077B8E0();
  sub_1C078E184();
  sub_1C07B7C70();
  sub_1C077C4B8();
  sub_1C079DD70();
  sub_1C078A034();
  sub_1C07A873C();
  sub_1C077B2D8();
  sub_1C078660C();
  sub_1C0785140();
  sub_1C079CE88();
  sub_1C07AD2A0();
  sub_1C078248C();
  sub_1C07AA11C();
  sub_1C07BAE60();
  sub_1C0BE94C8();
  sub_1C079BF9C();
  sub_1C07B97F8();
  sub_1C07B8530();
  sub_1C0790990();
  sub_1C079EFB8();
  sub_1C07B18DC();
  sub_1C07A32FC();
  sub_1C07B73C0();
  sub_1C077E9F8();
  sub_1C07B48B0();
  sub_1C0782E58();
  sub_1C0780574();
  sub_1C078D800();
  sub_1C07AB000();
  sub_1C07AA938();
  sub_1C0BE94D8();
  sub_1C07BCFDC();
  v63 = (uint64_t (*)(void))sub_1C077FE7C();
  return sub_1C0781074(v63);
}

uint64_t sub_1C0BE219C()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C077B0C8();
  sub_1C07B4220();
  *(_QWORD *)(v1 + 1496) = v0;
  swift_task_dealloc();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0BE21E8()
{
  int *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t (*v27)(void);
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  void (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;

  sub_1C077B704();
  v32 = *(_QWORD *)(v1 + 1472);
  v30 = *(_QWORD *)(v1 + 1448);
  v3 = *(_QWORD **)(v1 + 1440);
  v35 = *(_QWORD *)(v1 + 1280);
  v38 = *(_BYTE *)(v1 + 1876);
  v4 = *(_QWORD *)(v1 + 1256);
  v5 = *(_QWORD *)(v1 + 936);
  v37 = *(_QWORD *)(v1 + 768);
  v6 = *(_QWORD *)(v1 + 760);
  v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 1480);
  v40 = *(_QWORD *)(v1 + 664);
  sub_1C0BE9B98();
  v31 = v7;
  v41 = *(_QWORD *)(v1 + 552);
  v8 = *(_QWORD *)(v1 + 544);
  v33 = *(_QWORD *)(v1 + 592);
  v34 = *(_QWORD *)(v1 + 536);
  sub_1C07BABE4(v41, v9, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C0BE9DD0();
  sub_1C0BE9CC0(v8, v10, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  v3[37] = v0;
  v3[38] = v30;
  sub_1C0BE9540();
  sub_1C0BE97C8(v5, v11, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  sub_1C07AC388();
  v12 = v4;
  sub_1C07B42A4(v4, v2 + v0[6]);
  v13 = sub_1C0BE9B08();
  sub_1C0BE8F84(v13, v14, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  *(_QWORD *)(v2 + v0[9]) = sub_1C077E788();
  v36 = v6;
  v15 = sub_1C0884620();
  sub_1C08D6F78(v4, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0BE9940();
  *(_QWORD *)(v2 + v0[10]) = v15;
  *(_BYTE *)(v2 + v0[11]) = v38;
  v16 = *(_QWORD *)(v5 + *(int *)(v37 + 28));
  sub_1C07966A0();
  sub_1C07BA05C(v5);
  *(_QWORD *)(v2 + v0[12]) = v16;
  sub_1C0BE987C(v17, v18, (uint64_t (*)(_QWORD))type metadata accessor for Blocker);
  sub_1C07B264C(v41, v5);
  sub_1C0BE8F84(v8, v12, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C106CDE4();
  v3[42] = v31;
  v3[43] = v32;
  sub_1C0BE9540();
  *(_BYTE *)(v29 + v31[8]) = 1;
  sub_1C07B42A4(v5, v29);
  sub_1C07DBCA0(v12, v29 + v31[5], (uint64_t (*)(_QWORD))type metadata accessor for Source);
  v39(v29 + v31[6], v36, v40);
  *(_BYTE *)(v29 + v31[7]) = v38;
  sub_1C0BE9760();
  sub_1C07BB2A8(v5);
  *(_QWORD *)(v29 + v31[9]) = v36;
  sub_1C0BE9A34(v29, v19, (uint64_t (*)(_QWORD))type metadata accessor for PairGenerator);
  sub_1C07B42A4(v41, v5);
  sub_1C0BE95C8(v8, v12);
  sub_1C0BE9DD0();
  v20 = (int *)sub_1C07A71A0();
  v3[47] = v20;
  sub_1C0794BAC(&qword_1ED75BBF0, (uint64_t (*)(uint64_t))type metadata accessor for PassthroughMatcher, (uint64_t)&protocol conformance descriptor for PassthroughMatcher);
  v3[48] = v21;
  v22 = sub_1C0BE9540();
  v23 = sub_1C0BE9FF4();
  sub_1C0BE9868(v23, v24);
  *((_BYTE *)v22 + v20[5]) = v38;
  sub_1C07DBCA0(v5, (uint64_t)v22 + v20[6], (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  v39((uint64_t)v22 + v20[7], v36, v40);
  sub_1C0BE8F84(v41, v5, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C07B42A4(v8, v12);
  v3[52] = v33;
  sub_1C0794BAC(&qword_1ED75CE80, (uint64_t (*)(uint64_t))type metadata accessor for Resolver, (uint64_t)&protocol conformance descriptor for Resolver);
  v3[53] = v25;
  v26 = sub_1C078B1F0();
  sub_1C0BE95B4((uint64_t)v26);
  sub_1C07AF87C(v41);
  sub_1C07BB2A8(v8);
  *(_QWORD *)(v34 + *(int *)(v35 + 24)) = v3;
  sub_1C07A6FC0();
  sub_1C0779D20();
  sub_1C0786388();
  sub_1C0778638();
  sub_1C07767D4();
  sub_1C077C104();
  sub_1C0779D18();
  sub_1C07758BC();
  sub_1C07796F8();
  sub_1C07767BC();
  sub_1C0786390();
  sub_1C077C830();
  sub_1C077C27C();
  sub_1C077C828();
  sub_1C0778744();
  sub_1C07819BC();
  sub_1C0780AA8();
  sub_1C07806D8();
  sub_1C077F164();
  sub_1C07B68D8();
  sub_1C077E900();
  sub_1C07815B0();
  sub_1C07A9950();
  sub_1C07B25F4();
  sub_1C07B802C();
  sub_1C07889DC();
  sub_1C0776AC4();
  sub_1C0781ED8();
  sub_1C078DC10();
  sub_1C078A4A0();
  sub_1C07AFAEC();
  sub_1C07AFE20();
  sub_1C077F860();
  sub_1C0778874();
  sub_1C07B0110();
  sub_1C07B1E30();
  sub_1C0780BEC();
  sub_1C0775BEC();
  sub_1C07817A8();
  sub_1C07ABD9C();
  sub_1C0781234();
  sub_1C07799D4();
  sub_1C07AD77C();
  sub_1C07AE9B0();
  sub_1C077F330();
  sub_1C077D2A4();
  sub_1C07AB898();
  sub_1C07AEFEC();
  sub_1C077B8E0();
  sub_1C078E184();
  sub_1C07B7C70();
  sub_1C077C4B8();
  sub_1C079DD70();
  sub_1C078A034();
  sub_1C07A873C();
  sub_1C077B2D8();
  sub_1C078660C();
  sub_1C0785140();
  sub_1C079CE88();
  sub_1C07AD2A0();
  sub_1C078248C();
  sub_1C07AA11C();
  sub_1C07BAE60();
  sub_1C0BE94C8();
  sub_1C079BF9C();
  sub_1C07B97F8();
  sub_1C07B8530();
  sub_1C0790990();
  sub_1C079EFB8();
  sub_1C07B18DC();
  sub_1C07A32FC();
  sub_1C07B73C0();
  sub_1C077E9F8();
  sub_1C07B48B0();
  sub_1C0782E58();
  sub_1C0780574();
  sub_1C078D800();
  sub_1C07AB000();
  sub_1C07AA938();
  sub_1C0BE94D8();
  sub_1C07BCFDC();
  sub_1C08FF618();
  v27 = (uint64_t (*)(void))sub_1C077FE7C();
  return sub_1C0781074(v27);
}

uint64_t sub_1C0BE26A8()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C077B0C8();
  sub_1C07B4220();
  *(_QWORD *)(v1 + 1568) = v0;
  swift_task_dealloc();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0BE26F4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(_QWORD);
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int *v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t inited;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  __n128 *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __n128 v81;
  uint64_t v82;
  void (*v83)(uint64_t, uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int *v88;
  uint64_t v89;
  int *v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void (*v99)(uint64_t);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  int *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  __n128 *v124;
  uint64_t v125;
  __n128 *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  __n128 v134;
  uint64_t v135;
  void (*v136)(uint64_t, uint64_t);
  unsigned __int8 v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  int *v141;
  uint64_t v142;
  int *v143;
  uint64_t v144;
  uint64_t *v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  uint64_t v153;
  unint64_t v154;
  unint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  int *v160;
  uint64_t v161;
  unint64_t v162;
  void (*v163)(_QWORD);
  __n128 *v164;
  uint64_t v165;
  uint64_t v166;
  __n128 *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  __n128 v175;
  uint64_t v176;
  void (*v177)(uint64_t, uint64_t);
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  int *v182;
  uint64_t v183;
  int *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  unint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  int *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  unint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t *v220;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  char v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t *v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  int *v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  unint64_t v295;
  unint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t *v299;
  uint64_t v300;
  uint64_t *v301;
  void (*v302)(uint64_t, uint64_t, uint64_t);
  uint64_t *v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  __n128 *v308;
  uint64_t v309;
  __n128 *v310;
  uint64_t v311;
  void (*v312)(uint64_t, uint64_t, uint64_t);
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  unint64_t v316;
  uint64_t v317;
  uint64_t v318;
  _QWORD *v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  unsigned __int8 v324;
  unint64_t v325;
  unint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  void (*v332)(uint64_t, unint64_t, uint64_t);
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;

  sub_1C077B704();
  v302 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1552);
  v273 = v0 + 168;
  v274 = v0 + 16;
  v299 = *(uint64_t **)(v0 + 1544);
  v271 = v0 + 320;
  v319 = (_QWORD *)(v0 + 528);
  v1 = *(_QWORD *)(v0 + 1520);
  v2 = *(_QWORD **)(v0 + 1512);
  LODWORD(v325) = *(unsigned __int8 *)(v0 + 1876);
  v306 = *(_QWORD *)(v0 + 1256);
  v3 = *(_QWORD *)(v0 + 936);
  v4 = *(_QWORD *)(v0 + 760);
  v315 = *(_QWORD *)(v0 + 672);
  v5 = *(_QWORD *)(v0 + 664);
  v6 = *(_QWORD *)(v0 + 656);
  v7 = *(int **)(v0 + 624);
  v293 = *(_QWORD *)(v0 + 616);
  v291 = *(int **)(v0 + 608);
  v334 = *(_QWORD *)(v0 + 552);
  v8 = *(_QWORD *)(v0 + 544);
  v328 = *(_QWORD *)(v0 + 768);
  v330 = v8;
  sub_1C0BE995C(v334, v9, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  _s24IntelligencePlatformCore12EventMatcherV11entityClass0aB006EntityG0Vvg_0();
  sub_1C07893A4(v8, v10, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  v2[37] = v7;
  v2[38] = v1;
  sub_1C0BE9778();
  sub_1C07BFC38(v3, v11, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v318 = v5;
  sub_1C07BFCF4();
  sub_1C0BE8F84(v306, v6 + v7[6], (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0BE9D4C();
  sub_1C0BE8F84(v3, v12, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  *(_QWORD *)(v6 + v7[9]) = sub_1C0883D28();
  sub_1C0884620();
  sub_1C08D6F78(v306, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C08FF98C();
  sub_1C0BE9FB4();
  sub_1C0BE9994();
  v14 = *(_QWORD *)(v3 + v13);
  sub_1C0783050();
  sub_1C0BE99F4(v3);
  *(_QWORD *)(v6 + v7[12]) = v14;
  sub_1C0BEA050(v15, v16, (uint64_t (*)(_QWORD))type metadata accessor for Blocker);
  sub_1C0BE95C8(v334, v3);
  v17 = sub_1C0BE9D60();
  sub_1C0BE8F84(v17, v18, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  _s24IntelligencePlatformCore12EventMatcherV11entityClass0aB006EntityG0Vvg_0();
  v2[42] = v291;
  v2[43] = v299;
  sub_1C0BE9778();
  *(_BYTE *)(v293 + v291[8]) = 1;
  v19 = sub_1C0BE96D8();
  sub_1C07AEC10(v19, v20);
  sub_1C07DBCA0(v306, v293 + v291[5], (uint64_t (*)(_QWORD))type metadata accessor for Source);
  v302(v293 + v291[6], v4, v318);
  *(_BYTE *)(v293 + v291[7]) = v325;
  v21 = *(_QWORD *)(v3 + *(int *)(v328 + 28));
  sub_1C0783050();
  sub_1C08D6F78(v3, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  *(_QWORD *)(v293 + v291[9]) = v21;
  v22 = sub_1C078109C();
  sub_1C07DBCA0(v22, v23, v24);
  v25 = type metadata accessor for EventMatcher();
  v2[47] = v25;
  sub_1C0794BAC(&qword_1ED75A570, (uint64_t (*)(uint64_t))type metadata accessor for EventMatcher, (uint64_t)&protocol conformance descriptor for EventMatcher);
  v2[48] = v26;
  v27 = sub_1C0BE9778();
  sub_1C0BE8F84(v334, (uint64_t)v27 + *(int *)(v25 + 24), (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  v28 = sub_1C078109C();
  sub_1C0BE8F84(v28, v29, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  *((_BYTE *)v27 + *(int *)(v25 + 20)) = v325;
  sub_1C07AEC10(v334, v3);
  sub_1C07AC494();
  sub_1C0BE94D0(v8, v306);
  v2[52] = v7;
  v2[53] = v1;
  v287 = sub_1C0BE9778();
  sub_1C0BE8F84(v3, v6, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  sub_1C0BE9BE4(v7[5]);
  sub_1C07BFCF4();
  sub_1C0BE94D0(v306, v6 + v7[6]);
  sub_1C0BE9D4C();
  sub_1C07AEC10(v3, v30);
  *(_QWORD *)(v6 + v7[9]) = sub_1C0BE983C();
  sub_1C0884620();
  sub_1C08D6F78(v306, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C077D8C4();
  sub_1C0BE9FB4();
  sub_1C0BE9994();
  v32 = *(_QWORD *)(v3 + v31);
  sub_1C0783050();
  sub_1C077EF28(v3);
  *(_QWORD *)(v6 + v7[12]) = v32;
  sub_1C07DBCA0(v6, (uint64_t)v287, (uint64_t (*)(_QWORD))type metadata accessor for Blocker);
  sub_1C0BE94D0(v334, v3);
  v33 = (void (*)(uint64_t, uint64_t, uint64_t))v306;
  sub_1C07B42A4(v8, v306);
  sub_1C106D1EC();
  v2[57] = v291;
  v2[58] = v299;
  sub_1C0BE9778();
  *(_BYTE *)(v293 + v291[8]) = 1;
  v34 = sub_1C0BE96D8();
  sub_1C0BE8F84(v34, v35, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C0BE9E28(v306, v293 + v291[5]);
  v302(v293 + v291[6], v4, v318);
  *(_BYTE *)(v293 + v291[7]) = v325;
  v36 = *(_QWORD *)(v3 + *(int *)(v328 + 28));
  sub_1C0779758();
  sub_1C07BB2A8(v3);
  *(_QWORD *)(v293 + v291[9]) = v36;
  v37 = sub_1C078109C();
  sub_1C07DBCA0(v37, v38, (uint64_t (*)(_QWORD))type metadata accessor for PairGenerator);
  sub_1C07B42A4(v334, v3);
  sub_1C0BE94D0(v330, v306);
  v39 = (int *)sub_1C0BE98BC();
  v2[62] = v39;
  sub_1C0794BAC(&qword_1ED75AFB0, (uint64_t (*)(uint64_t))type metadata accessor for SoftwareMatcher, (uint64_t)&protocol conformance descriptor for SoftwareMatcher);
  v2[63] = v40;
  v41 = sub_1C078B1F0();
  sub_1C0BE9F1C((uint64_t)v41, v39[7]);
  sub_1C0BE9924();
  v42 = sub_1C0BE9F30();
  sub_1C0BE9E28(v42, v43);
  sub_1C0BE9E20(v306, (uint64_t)v41 + v39[5]);
  *((_BYTE *)v41 + v39[6]) = v325;
  v317 = v0;
  *(_QWORD *)(v0 + 528) = v2;
  _s24IntelligencePlatformCore12EventMatcherV11entityClass0aB006EntityG0Vvg_0();
  v44 = sub_1C106CEF8();
  sub_1C0BE9FB4();
  v269 = v44 + 56;
  sub_1C0BE9660();
  if (!v46)
    goto LABEL_3;
LABEL_2:
  sub_1C079BFA4();
  v279 = v47;
  v282 = v48;
  v49 = v317;
  while (1)
  {
    sub_1C0BE9C58();
    v320 = *(_QWORD *)(v49 + 1128);
    v60 = *(_QWORD *)(v49 + 856);
    sub_1C0BE9E5C();
    v61 = *(_QWORD *)(v49 + 744);
    v300 = *(_QWORD *)(v49 + 712);
    v62 = *(_QWORD *)(v49 + 664);
    v63 = *(_QWORD *)(v49 + 648);
    v64 = *(int **)(v49 + 624);
    v65 = *(_QWORD *)(v49 + 552);
    sub_1C0BE9C18();
    v311 = v66;
    sub_1C078506C(v61, v67);
    sub_1C0BE9940();
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1078A20;
    sub_1C0BE8F84(v65, v60, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
    v69 = sub_1C077D8C4();
    sub_1C078506C(v69, v70);
    sub_1C07AB5B0(v311, v320);
    v312 = (void (*)(uint64_t, uint64_t, uint64_t))inited;
    *(_QWORD *)(inited + 56) = v64;
    *(_QWORD *)(inited + 64) = v325;
    v303 = sub_1C079DFC4((uint64_t *)(inited + 32));
    sub_1C0BE8F84(v60, v63, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    v33(v63 + v64[5], v300, v62);
    sub_1C07AB5B0(v320, v63 + v64[6]);
    *(_BYTE *)(v63 + v64[7]) = 0;
    sub_1C0BE8F84(v60, v63 + v64[8], (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
    *(_QWORD *)(v63 + v64[9]) = sub_1C0883D28();
    _s24IntelligencePlatformCore15LocationMatcherV11entityClass0aB006EntityG0Vvg_0();
    sub_1C0794BAC(&qword_1ED75E7D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3BB08], MEMORY[0x1E0D3BB28]);
    v71 = sub_1C106FAA8();
    sub_1C07A3304();
    sub_1C0BE9F14();
    v72 = MEMORY[0x1E0DEE9D8];
    if ((v71 & 1) != 0)
    {
      sub_1C07ACF80(&qword_1ED75D348);
      v73 = (__n128 *)sub_1C0778598();
      sub_1C0BE9C90(v73, v74, v75, v76, v77, v78, v79, v80, v224, v225, v226, v227, v228, v229, v230, v231, v232, v233, v234,
        v235,
        v236,
        v237,
        v238,
        v239,
        v240,
        v241,
        v242,
        v243,
        v244,
        v245,
        v246,
        v247,
        v248,
        v249,
        v250,
        v251,
        v252,
        v253,
        v254,
        v255,
        v256,
        v257,
        v258,
        v259,
        v260,
        v261,
        v262,
        v263,
        v264,
        v265,
        v266,
        v267,
        v268,
        v269,
        v271,
        v272,
        v273,
        v274,
        v81);
      *(_QWORD *)(v82 + 56) = &type metadata for LocationGeoHashBlockingFunction;
      *(_QWORD *)(v82 + 64) = &protocol witness table for LocationGeoHashBlockingFunction;
    }
    v297 = *(_QWORD *)(v49 + 1544);
    v299 = *(uint64_t **)(v49 + 1552);
    v83 = *(void (**)(uint64_t, uint64_t))(v49 + 1536);
    v284 = *(_BYTE *)(v49 + 1876);
    v288 = *(_QWORD *)(v49 + 936);
    v84 = *(_QWORD *)(v49 + 856);
    v85 = *(_QWORD *)(v49 + 768);
    v292 = *(_QWORD *)(v49 + 1256);
    v325 = *(_QWORD *)(v49 + 720);
    v86 = *(_QWORD *)(v49 + 712);
    v321 = *(_QWORD *)(v49 + 664);
    v87 = *(_QWORD *)(v49 + 648);
    v88 = *(int **)(v49 + 624);
    v89 = *(_QWORD *)(v49 + 616);
    v90 = *(int **)(v49 + 608);
    v331 = *(_QWORD *)(v49 + 552);
    v335 = *(_QWORD *)(v49 + 544);
    sub_1C08D6F78(*(_QWORD *)(v49 + 1128), (uint64_t (*)(_QWORD))type metadata accessor for Source);
    v83(v86, v321);
    *(_QWORD *)(v87 + v88[10]) = v72;
    *(_BYTE *)(v87 + v88[11]) = v284;
    v91 = *(_QWORD *)(v84 + *(int *)(v85 + 28));
    sub_1C0779758();
    sub_1C0BE9554(v84);
    *(_QWORD *)(v87 + v88[12]) = v91;
    sub_1C07DBCA0(v87, (uint64_t)v303, (uint64_t (*)(_QWORD))type metadata accessor for Blocker);
    v33 = v312;
    sub_1C07AB5B0(v331, v288);
    sub_1C07B42A4(v335, v292);
    sub_1C0BE9CA0();
    *((_QWORD *)v312 + 12) = v90;
    *((_QWORD *)v312 + 13) = v297;
    v92 = sub_1C078B1F0();
    sub_1C0BE9EB4();
    *(_BYTE *)(v89 + v93) = v94;
    sub_1C0BE8F84(v288, v89, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
    sub_1C0BE9E28(v292, v89 + v90[5]);
    sub_1C0BEA070();
    ((void (*)(void))v299)();
    *(_BYTE *)(v89 + v90[7]) = v284;
    v95 = *(_QWORD *)(v288 + *(int *)(v85 + 28));
    sub_1C077E884();
    sub_1C0BEA018(v288);
    *(_QWORD *)(v89 + v90[9]) = v95;
    sub_1C07DBCA0(v89, (uint64_t)v92, (uint64_t (*)(_QWORD))type metadata accessor for PairGenerator);
    v96 = sub_1C07A71A0();
    *((_QWORD *)v312 + 17) = v96;
    sub_1C0794BAC(&qword_1ED75BBF0, (uint64_t (*)(uint64_t))type metadata accessor for PassthroughMatcher, (uint64_t)&protocol conformance descriptor for PassthroughMatcher);
    *((_QWORD *)v312 + 18) = v97;
    sub_1C078B1F0();
    sub_1C0BE9C70();
    sub_1C078BA4C(v331, v98);
    sub_1C07B42A4(v335, (uint64_t)v312 + 112);
    sub_1C0BE9CA0();
    *((_BYTE *)v312 + *(int *)(v96 + 20) + 112) = v284;
    sub_1C0BDBAB0();
    sub_1C0BE9940();
    v45 = v282;
    if (v279)
      goto LABEL_2;
LABEL_3:
    v49 = v317;
    if (__OFADD__(v45, 1))
    {
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
      goto LABEL_67;
    }
    sub_1C0BEA000();
    if (v51 == v52)
      goto LABEL_25;
    if (!*(_QWORD *)(v269 + 8 * v50))
    {
      sub_1C07AF4B8();
      if (v51 == v52)
        goto LABEL_25;
      sub_1C0BE9FE8();
      if (!v53)
      {
        sub_1C07AF4B8();
        if (v51 == v52)
          goto LABEL_25;
        sub_1C0BE9FE8();
        if (!v54)
          break;
      }
    }
LABEL_20:
    sub_1C0BE9FC8();
    v279 = v58;
    v282 = v59;
  }
  sub_1C0BEA000();
  if (v51 != v52)
  {
    if (!*(_QWORD *)(v269 + 8 * v55))
    {
      while (!__OFADD__(v55, 1))
      {
        sub_1C07AF4B8();
        if (v51 == v52)
          goto LABEL_25;
        v55 = v56 + 1;
        if (*(_QWORD *)(v269 + 8 * v57))
          goto LABEL_20;
      }
      goto LABEL_64;
    }
    goto LABEL_20;
  }
LABEL_25:
  v99 = *(void (**)(uint64_t))(v317 + 1536);
  swift_release();
  sub_1C106CE44();
  v100 = sub_1C106CEF8();
  v101 = sub_1C077D8C4();
  v99(v101);
  v270 = v100 + 56;
  v275 = v100;
  sub_1C0BE9660();
  if (!v103)
    goto LABEL_27;
LABEL_26:
  sub_1C079BFA4();
  v313 = v104;
  v322 = v105;
  v49 = v317;
  while (1)
  {
    sub_1C0BE9C58();
    v301 = v114;
    v304 = *(_QWORD *)(v49 + 1120);
    sub_1C0BE9E5C();
    v115 = *(_QWORD *)(v49 + 728);
    v116 = *(_QWORD *)(v49 + 704);
    v294 = v117;
    v298 = *(_QWORD *)(v49 + 696);
    v118 = *(_QWORD *)(v49 + 664);
    v119 = *(_QWORD *)(v49 + 640);
    v120 = *(int **)(v49 + 624);
    v121 = *(_QWORD *)(v49 + 552);
    sub_1C0BE9C18();
    v307 = v122;
    sub_1C0797FC4(v115, v123);
    ((void (*)(uint64_t, uint64_t, uint64_t))v301)(v116, v115, v118);
    v124 = (__n128 *)swift_initStackObject();
    sub_1C0BE9F80(v124);
    sub_1C0BE8F84(v121, v294, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
    sub_1C0797FC4(v298, v116);
    sub_1C0BE95C8(v307, v304);
    v308 = v124;
    v124[3].n128_u64[1] = (unint64_t)v120;
    v124[4].n128_u64[0] = v325;
    v299 = sub_1C079DFC4(v301);
    sub_1C0BE8F84(v294, v119, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    sub_1C0797FC4(v119 + v120[5], v298);
    sub_1C0BE95C8(v304, v119 + v120[6]);
    *(_BYTE *)(v119 + v120[7]) = 0;
    sub_1C0BE8F84(v294, v119 + v120[8], (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
    *(_QWORD *)(v119 + v120[9]) = sub_1C0883D28();
    sub_1C0BE9CA8();
    sub_1C0794BAC(&qword_1ED75E7D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3BB08], MEMORY[0x1E0D3BB28]);
    sub_1C0788970();
    LOBYTE(v121) = sub_1C106FAA8();
    sub_1C0BE99BC();
    sub_1C0BE9F14();
    v125 = MEMORY[0x1E0DEE9D8];
    if ((v121 & 1) != 0)
    {
      sub_1C07ACF80(&qword_1ED75D348);
      v126 = (__n128 *)sub_1C0778598();
      sub_1C0BE9C90(v126, v127, v128, v129, v130, v131, v132, v133, v224, v225, v226, v227, v228, v229, v230, v231, v232, v233, v234,
        v235,
        v236,
        v237,
        v238,
        v239,
        v240,
        v241,
        v242,
        v243,
        v244,
        v245,
        v246,
        v247,
        v248,
        v249,
        v250,
        v251,
        v252,
        v253,
        v254,
        v255,
        v256,
        v257,
        v258,
        v259,
        v260,
        v261,
        v262,
        v263,
        v264,
        v265,
        v266,
        v267,
        v268,
        v270,
        v271,
        v272,
        v273,
        v275,
        v134);
      *(_QWORD *)(v135 + 56) = &type metadata for LocationGeoHashBlockingFunction;
      *(_QWORD *)(v135 + 64) = &protocol witness table for LocationGeoHashBlockingFunction;
    }
    v295 = *(_QWORD *)(v49 + 1544);
    v136 = *(void (**)(uint64_t, uint64_t))(v49 + 1536);
    v332 = *(void (**)(uint64_t, unint64_t, uint64_t))(v49 + 1528);
    v137 = *(_BYTE *)(v49 + 1876);
    v289 = *(_QWORD *)(v49 + 1256);
    v283 = *(_QWORD *)(v49 + 936);
    v138 = *(_QWORD *)(v49 + 848);
    v139 = *(_QWORD *)(v49 + 768);
    v285 = *(_QWORD *)(v49 + 760);
    v325 = *(_QWORD *)(v49 + 704);
    v277 = *(_QWORD *)(v49 + 696);
    v280 = *(_QWORD *)(v49 + 664);
    v140 = *(_QWORD *)(v49 + 640);
    v141 = *(int **)(v49 + 624);
    v142 = *(_QWORD *)(v49 + 616);
    v143 = *(int **)(v49 + 608);
    v329 = *(_QWORD *)(v49 + 552);
    v336 = *(_QWORD *)(v49 + 544);
    sub_1C08D6F78(*(_QWORD *)(v49 + 1120), (uint64_t (*)(_QWORD))type metadata accessor for Source);
    v136(v277, v280);
    *(_QWORD *)(v140 + v141[10]) = v125;
    *(_BYTE *)(v140 + v141[11]) = v137;
    v144 = *(_QWORD *)(v138 + *(int *)(v139 + 28));
    sub_1C0779758();
    sub_1C08D6F78(v138, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
    *(_QWORD *)(v140 + v141[12]) = v144;
    sub_1C07DBCA0(v140, (uint64_t)v299, (uint64_t (*)(_QWORD))type metadata accessor for Blocker);
    sub_1C07AB5B0(v329, v283);
    sub_1C0BE94D0(v336, v289);
    v332(v285, v325, v280);
    v308[6].n128_u64[0] = (unint64_t)v143;
    v308[6].n128_u64[1] = v295;
    v145 = sub_1C078B1F0();
    *(_BYTE *)(v142 + v143[8]) = 1;
    sub_1C07B42A4(v283, v142);
    sub_1C0BE9E20(v289, v142 + v143[5]);
    sub_1C07BFCF4();
    *(_BYTE *)(v142 + v143[7]) = v137;
    v146 = *(_QWORD *)(v283 + *(int *)(v139 + 28));
    sub_1C077E884();
    sub_1C0BEA018(v283);
    *(_QWORD *)(v142 + v143[9]) = v146;
    sub_1C07DBCA0(v142, (uint64_t)v145, (uint64_t (*)(_QWORD))type metadata accessor for PairGenerator);
    v147 = sub_1C07A71A0();
    v308[8].n128_u64[1] = v147;
    sub_1C0794BAC(&qword_1ED75BBF0, (uint64_t (*)(uint64_t))type metadata accessor for PassthroughMatcher, (uint64_t)&protocol conformance descriptor for PassthroughMatcher);
    v308[9].n128_u64[0] = v148;
    sub_1C078B1F0();
    sub_1C0BE9C70();
    sub_1C078BA4C(v329, v149);
    sub_1C0BE94D0(v336, (uint64_t)&v308[7]);
    v332((uint64_t)&v308[7] + *(int *)(v147 + 28), v325, v280);
    v308[7].n128_u8[*(int *)(v147 + 20)] = v137;
    sub_1C0BDBAB0();
    sub_1C077B078();
    sub_1C07AD22C();
    v102 = v322;
    if (v313)
      goto LABEL_26;
LABEL_27:
    v49 = v317;
    if (__OFADD__(v102, 1))
      goto LABEL_63;
    sub_1C0BEA000();
    if (v51 == v52)
      break;
    if (!*(_QWORD *)(v270 + 8 * v106))
    {
      sub_1C07AF4B8();
      if (v51 == v52)
        break;
      sub_1C0BE9FE8();
      if (!v107)
      {
        sub_1C07AF4B8();
        if (v51 == v52)
          break;
        sub_1C0BE9FE8();
        if (!v108)
        {
          sub_1C0BEA000();
          if (v51 == v52)
            break;
          if (!*(_QWORD *)(v270 + 8 * v109))
          {
            while (!__OFADD__(v109, 1))
            {
              sub_1C07AF4B8();
              if (v51 == v52)
                goto LABEL_49;
              v109 = v110 + 1;
              if (*(_QWORD *)(v270 + 8 * v111))
                goto LABEL_44;
            }
            goto LABEL_65;
          }
        }
      }
    }
LABEL_44:
    sub_1C0BE9FC8();
    v313 = v112;
    v322 = v113;
  }
LABEL_49:
  v150 = *(_QWORD *)(v317 + 672);
  swift_release();
  sub_1C07ACF80((uint64_t *)&unk_1ED75D2D0);
  v151 = *(_QWORD *)(v315 + 72);
  v152 = (*(unsigned __int8 *)(v150 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v150 + 80);
  v153 = swift_allocObject();
  *(_OWORD *)(v153 + 16) = xmmword_1C10795A0;
  v154 = v153 + v152;
  sub_1C106CDB4();
  sub_1C106CE50();
  sub_1C106D180();
  v278 = v151;
  sub_1C106D1B0();
  v155 = *(_QWORD *)(v153 + 16);
  if (!v155)
    goto LABEL_66;
  if (v155 >= 4)
  {
    v276 = v153;
    v156 = 4;
    do
    {
      v314 = v156;
      v323 = *(_QWORD *)(v317 + 1104);
      v326 = *(_QWORD *)(v317 + 1520);
      v157 = *(_QWORD *)(v317 + 832);
      v158 = *(_QWORD *)(v317 + 664);
      v159 = *(_QWORD *)(v317 + 632);
      v160 = *(int **)(v317 + 624);
      v161 = *(_QWORD *)(v317 + 552);
      v305 = *(_QWORD *)(v317 + 680);
      v309 = *(_QWORD *)(v317 + 544);
      v316 = v154;
      v162 = v154;
      v163 = *(void (**)(_QWORD))(v317 + 1528);
      ((void (*)(_QWORD, unint64_t, uint64_t))v163)(*(_QWORD *)(v317 + 688), v162, v158);
      v164 = (__n128 *)swift_initStackObject();
      sub_1C0BE9F80(v164);
      sub_1C0BE9518(v161, v157);
      v165 = sub_1C07BBF94();
      v163(v165);
      sub_1C0BE95C8(v309, v323);
      v310 = v164;
      v164[3].n128_u64[1] = (unint64_t)v160;
      v164[4].n128_u64[0] = v326;
      v299 = sub_1C079DFC4(v299);
      sub_1C0BE8F84(v157, v159, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
      ((void (*)(uint64_t, uint64_t, uint64_t))v163)(v159 + v160[5], v305, v158);
      sub_1C0BE95C8(v323, v159 + v160[6]);
      *(_BYTE *)(v159 + v160[7]) = 0;
      sub_1C0BE8F84(v157, v159 + v160[8], (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
      *(_QWORD *)(v159 + v160[9]) = sub_1C0883D28();
      sub_1C0BE9CA8();
      sub_1C0794BAC(&qword_1ED75E7D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3BB08], MEMORY[0x1E0D3BB28]);
      sub_1C0BE99BC();
      LOBYTE(v160) = sub_1C106FAA8();
      sub_1C0BE9F14();
      v166 = MEMORY[0x1E0DEE9D8];
      if ((v160 & 1) != 0)
      {
        sub_1C07ACF80(&qword_1ED75D348);
        v167 = (__n128 *)sub_1C0778598();
        sub_1C0BE9C90(v167, v168, v169, v170, v171, v172, v173, v174, v224, v225, v226, v227, v228, v229, v230, v231, v232, v233, v234,
          v235,
          v236,
          v237,
          v238,
          v239,
          v240,
          v241,
          v242,
          v243,
          v244,
          v245,
          v246,
          v247,
          v248,
          v249,
          v250,
          v251,
          v252,
          v253,
          v254,
          v255,
          v256,
          v257,
          v258,
          v259,
          v260,
          v261,
          v262,
          v263,
          v264,
          v265,
          v266,
          v267,
          v268,
          v270,
          v271,
          v272,
          v273,
          v276,
          v175);
        *(_QWORD *)(v176 + 56) = &type metadata for LocationGeoHashBlockingFunction;
        *(_QWORD *)(v176 + 64) = &protocol witness table for LocationGeoHashBlockingFunction;
      }
      v296 = *(_QWORD *)(v317 + 1544);
      v177 = *(void (**)(uint64_t, uint64_t))(v317 + 1536);
      v324 = *(_BYTE *)(v317 + 1876);
      v178 = *(_QWORD *)(v317 + 832);
      v179 = *(_QWORD *)(v317 + 768);
      v290 = *(_QWORD *)(v317 + 1256);
      v286 = *(_QWORD *)(v317 + 936);
      v180 = *(_QWORD *)(v317 + 664);
      v281 = *(_QWORD *)(v317 + 680);
      v181 = *(_QWORD *)(v317 + 632);
      v182 = *(int **)(v317 + 624);
      v183 = *(_QWORD *)(v317 + 616);
      v184 = *(int **)(v317 + 608);
      v327 = *(_QWORD *)(v317 + 552);
      v333 = *(_QWORD *)(v317 + 544);
      sub_1C08D6F78(*(_QWORD *)(v317 + 1104), (uint64_t (*)(_QWORD))type metadata accessor for Source);
      v177(v281, v180);
      *(_QWORD *)(v181 + v182[10]) = v166;
      *(_BYTE *)(v181 + v182[11]) = v324;
      v185 = *(_QWORD *)(v178 + *(int *)(v179 + 28));
      sub_1C0779758();
      sub_1C07AF87C(v178);
      *(_QWORD *)(v181 + v182[12]) = v185;
      sub_1C07DBCA0(v181, (uint64_t)v299, (uint64_t (*)(_QWORD))type metadata accessor for Blocker);
      sub_1C0BE9518(v327, v286);
      sub_1C0BE8F84(v333, v290, (uint64_t (*)(_QWORD))type metadata accessor for Source);
      sub_1C0BE9CA0();
      v310[6].n128_u64[0] = (unint64_t)v184;
      v310[6].n128_u64[1] = v296;
      sub_1C078B1F0();
      *(_BYTE *)(v183 + v184[8]) = 1;
      v186 = sub_1C077B078();
      sub_1C0BE9518(v186, v187);
      sub_1C07DBCA0(v290, v183 + v184[5], (uint64_t (*)(_QWORD))type metadata accessor for Source);
      sub_1C0BEA070();
      sub_1C07BFCF4();
      *(_BYTE *)(v183 + v184[7]) = v324;
      v188 = *(_QWORD *)(v286 + *(int *)(v179 + 28));
      sub_1C077E884();
      sub_1C07AF87C(v286);
      *(_QWORD *)(v183 + v184[9]) = v188;
      v189 = sub_1C0BE9F30();
      sub_1C07DBCA0(v189, v190, (uint64_t (*)(_QWORD))type metadata accessor for PairGenerator);
      v191 = sub_1C07A71A0();
      v310[8].n128_u64[1] = v191;
      sub_1C0794BAC(&qword_1ED75BBF0, (uint64_t (*)(uint64_t))type metadata accessor for PassthroughMatcher, (uint64_t)&protocol conformance descriptor for PassthroughMatcher);
      v310[9].n128_u64[0] = v192;
      sub_1C078B1F0();
      sub_1C0BE9C70();
      sub_1C0BE9518(v327, v193);
      v194 = sub_1C0BE9D60();
      sub_1C0BE8F84(v194, v195, (uint64_t (*)(_QWORD))type metadata accessor for Source);
      sub_1C0BE9CA0();
      v310[7].n128_u8[*(int *)(v191 + 20)] = v324;
      sub_1C0BDBAB0();
      sub_1C07AD22C();
      v154 = v316 + v278;
      v156 = v314 - 1;
    }
    while (v314 != 1);
    v196 = *(_BYTE *)(v317 + 1876);
    v197 = *(_QWORD *)(v317 + 1112);
    v198 = *(_QWORD *)(v317 + 840);
    v199 = *(_QWORD *)(v317 + 600);
    v200 = *(int **)(v317 + 592);
    v337 = *(_QWORD *)(v317 + 1568);
    v201 = *(_QWORD *)(v317 + 576);
    v202 = *(_QWORD *)(v317 + 552);
    v203 = *(_QWORD *)(v317 + 544);
    swift_setDeallocating();
    sub_1C0BE8ED0((void (*)(_QWORD))MEMORY[0x1E0D3BB08]);
    sub_1C07B264C(v202, v198);
    sub_1C07B42A4(v203, v197);
    *(_BYTE *)(v199 + v200[6]) = 4;
    sub_1C07B264C(v198, v199);
    sub_1C07B42A4(v197, v199 + v200[5]);
    *(_BYTE *)(v199 + v200[7]) = v196;
    v204 = sub_1C106AEF4();
    sub_1C0794D1C(v201, 1, v205, v204);
    sub_1C106E620();
    if (v337)
    {
      sub_1C077E6C8();
      v206 = 1;
    }
    else
    {
      v206 = 0;
    }
    v207 = *(_QWORD *)(v317 + 840);
    v208 = *(_QWORD *)(v317 + 600);
    v209 = *(_QWORD *)(v317 + 592);
    v210 = *(_QWORD *)(v317 + 584);
    sub_1C08D6F78(*(_QWORD *)(v317 + 1112), (uint64_t (*)(_QWORD))type metadata accessor for Source);
    sub_1C08D6F78(v207, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
    v211 = sub_1C106E638();
    sub_1C0794D1C(v210, v206, v212, v211);
    sub_1C0ACDE0C(v210, v208 + *(int *)(v209 + 32));
    v213 = *(_QWORD *)(v317 + 528);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      goto LABEL_68;
    goto LABEL_59;
  }
LABEL_67:
  __break(1u);
LABEL_68:
  sub_1C0BEA038();
  v213 = v222;
  *v319 = v222;
LABEL_59:
  v214 = *(_QWORD *)(v213 + 16);
  if (v214 >= *(_QWORD *)(v213 + 24) >> 1)
  {
    sub_1C0BEA038();
    v213 = v223;
    *v319 = v223;
  }
  v338 = *(_QWORD *)(v49 + 1280);
  v215 = *(_QWORD *)(v49 + 600);
  v216 = *(_QWORD *)(v49 + 552);
  v217 = *(_QWORD *)(v49 + 544);
  v218 = *(_QWORD *)(v49 + 536);
  *(_QWORD *)(v49 + 496) = *(_QWORD *)(v49 + 592);
  sub_1C0794BAC(&qword_1ED75CE80, (uint64_t (*)(uint64_t))type metadata accessor for Resolver, (uint64_t)&protocol conformance descriptor for Resolver);
  *(_QWORD *)(v49 + 504) = v219;
  v220 = sub_1C0BE984C();
  sub_1C0BE9518(v215, (uint64_t)v220);
  *(_QWORD *)(v213 + 16) = v214 + 1;
  sub_1C077DD60((__int128 *)(v49 + 472), v213 + 40 * v214 + 32);
  sub_1C07AF87C(v215);
  sub_1C08D6F78(v216, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C08D6F78(v217, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  *(_QWORD *)(v218 + *(int *)(v338 + 24)) = *(_QWORD *)(v49 + 528);
  sub_1C0798CA8();
  swift_task_dealloc();
  sub_1C0779D20();
  sub_1C0786388();
  sub_1C0778638();
  sub_1C07767D4();
  sub_1C077C104();
  sub_1C0779D18();
  sub_1C07758BC();
  sub_1C07796F8();
  sub_1C07767BC();
  swift_task_dealloc();
  sub_1C0786390();
  sub_1C077C830();
  sub_1C077C27C();
  sub_1C077C828();
  sub_1C0778744();
  sub_1C07819BC();
  sub_1C0780AA8();
  sub_1C07806D8();
  sub_1C077F164();
  sub_1C07B68D8();
  sub_1C077E900();
  sub_1C07815B0();
  sub_1C07A9950();
  sub_1C07B25F4();
  sub_1C07B802C();
  sub_1C07889DC();
  sub_1C0776AC4();
  sub_1C0781ED8();
  sub_1C078DC10();
  sub_1C078A4A0();
  sub_1C07AFAEC();
  sub_1C07AFE20();
  sub_1C077F860();
  sub_1C0778874();
  sub_1C07B0110();
  sub_1C07B1E30();
  sub_1C0780BEC();
  sub_1C0775BEC();
  sub_1C07817A8();
  sub_1C07ABD9C();
  sub_1C0781234();
  sub_1C07799D4();
  sub_1C07AD77C();
  sub_1C07AE9B0();
  sub_1C077F330();
  sub_1C077D2A4();
  sub_1C07AB898();
  sub_1C07AEFEC();
  sub_1C077B8E0();
  sub_1C078E184();
  sub_1C07B7C70();
  sub_1C077C4B8();
  sub_1C079DD70();
  sub_1C078A034();
  sub_1C07A873C();
  sub_1C077B2D8();
  sub_1C078660C();
  sub_1C0785140();
  sub_1C079CE88();
  sub_1C07AD2A0();
  sub_1C0BE9DA4();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1C07AA11C();
  sub_1C07BAE60();
  sub_1C0BE94C8();
  sub_1C079BF9C();
  sub_1C07B97F8();
  sub_1C07B8530();
  sub_1C0790990();
  sub_1C079EFB8();
  sub_1C07B18DC();
  sub_1C07A32FC();
  sub_1C07B73C0();
  sub_1C07B48B0();
  sub_1C078D800();
  sub_1C07AB000();
  sub_1C07AA938();
  sub_1C0BE94D8();
  sub_1C07BCFDC();
  sub_1C08FF618();
  return sub_1C0781074(*(uint64_t (**)(void))(v49 + 8));
}

uint64_t sub_1C0BE3FC4()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C077B0C8();
  sub_1C07B4220();
  *(_QWORD *)(v1 + 1632) = v0;
  swift_task_dealloc();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0BE4010()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t (*v53)(void);
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int *v61;
  uint64_t v62;
  void (*v63)(void);
  void (*v64)(uint64_t);
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;

  sub_1C077B704();
  v65 = *(_QWORD *)(v0 + 1608);
  v66 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1616);
  v63 = *(void (**)(void))(v0 + 1592);
  v64 = *(void (**)(uint64_t))(v0 + 1600);
  v1 = *(_QWORD *)(v0 + 1584);
  v2 = *(_QWORD **)(v0 + 1576);
  v60 = *(_QWORD *)(v0 + 1280);
  v69 = *(_BYTE *)(v0 + 1876);
  v67 = *(_QWORD *)(v0 + 1256);
  v3 = *(_QWORD *)(v0 + 936);
  v4 = *(_QWORD *)(v0 + 760);
  v5 = *(_QWORD *)(v0 + 664);
  v6 = *(_QWORD *)(v0 + 656);
  v7 = *(int **)(v0 + 624);
  sub_1C0BE9AB4();
  v57 = v8;
  v58 = v9;
  v56 = *(_QWORD *)(v0 + 560);
  v68 = *(_QWORD *)(v0 + 552);
  v10 = *(_QWORD *)(v0 + 544);
  v70 = v11;
  v71 = v10;
  v59 = *(_QWORD *)(v0 + 536);
  sub_1C07BABE4(v68, v12, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C106D1EC();
  sub_1C0BE995C(v10, v13, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  v2[22] = v7;
  v2[23] = v1;
  sub_1C07AE8D0();
  sub_1C07BFC38(v3, v14, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  sub_1C0BEA070();
  v63();
  sub_1C0BE8F84(v67, v6 + v7[6], (uint64_t (*)(_QWORD))type metadata accessor for Source);
  v15 = sub_1C0BE9A6C();
  sub_1C0BE8F84(v15, v16, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  *(_QWORD *)(v6 + v7[9]) = sub_1C0883D28();
  v17 = sub_1C0884620();
  sub_1C08D6F78(v67, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  v18 = sub_1C0BEA02C();
  v64(v18);
  *(_QWORD *)(v6 + v7[10]) = v17;
  *(_BYTE *)(v6 + v7[11]) = v69;
  v19 = *(_QWORD *)(v3 + *(int *)(v70 + 28));
  sub_1C077D144();
  sub_1C0BE9554(v3);
  *(_QWORD *)(v6 + v7[12]) = v19;
  sub_1C0BEA050(v20, v21, (uint64_t (*)(_QWORD))type metadata accessor for Blocker);
  sub_1C07AB5B0(v68, v3);
  sub_1C0BE8F84(v71, v67, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C07AC494();
  v2[27] = v61;
  v2[28] = v65;
  v22 = sub_1C07AE8D0();
  sub_1C0BE9EB4();
  *(_BYTE *)(v62 + v23) = v24;
  v25 = sub_1C078109C();
  sub_1C0BE8F84(v25, v26, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C07DBCA0(v67, v62 + v61[5], (uint64_t (*)(_QWORD))type metadata accessor for Source);
  v66(v62 + v61[6], v4, v5);
  *(_BYTE *)(v62 + v61[7]) = v69;
  v27 = *(_QWORD *)(v3 + *(int *)(v70 + 28));
  sub_1C077D144();
  sub_1C07BA05C(v3);
  *(_QWORD *)(v62 + v61[9]) = v27;
  sub_1C07DBCA0(v62, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for PairGenerator);
  sub_1C0BE8F84(v68, v3, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C0BE8F84(v71, v67, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  v28 = (int *)sub_1C0BE98BC();
  v2[32] = v28;
  sub_1C0794BAC(&qword_1ED75AFB0, (uint64_t (*)(uint64_t))type metadata accessor for SoftwareMatcher, (uint64_t)&protocol conformance descriptor for SoftwareMatcher);
  v2[33] = v29;
  v30 = sub_1C07AE8D0();
  sub_1C0BE9F1C((uint64_t)v30, v28[7]);
  sub_1C0BE9924();
  sub_1C0BE9F78(v3, (uint64_t)v30);
  sub_1C07DBCA0(v67, (uint64_t)v30 + v28[5], (uint64_t (*)(_QWORD))type metadata accessor for Source);
  *((_BYTE *)v30 + v28[6]) = v69;
  sub_1C07AB5B0(v68, v3);
  sub_1C0BE9DC8();
  sub_1C0BE9518(v71, v67);
  v2[37] = v7;
  v2[38] = v1;
  v55 = sub_1C07AE8D0();
  sub_1C0BE8F84(v3, v6, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v31 = sub_1C0BE9BE4(v7[5]);
  ((void (*)(uint64_t))v63)(v31);
  sub_1C0BE9518(v67, v6 + v7[6]);
  v32 = sub_1C0BE9A6C();
  sub_1C0BE8F84(v32, v33, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  *(_QWORD *)(v6 + v7[9]) = sub_1C077E788();
  v34 = sub_1C0884620();
  sub_1C08D6F78(v67, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  ((void (*)(uint64_t, uint64_t))v64)(v4, v5);
  *(_QWORD *)(v6 + v7[10]) = v34;
  *(_BYTE *)(v6 + v7[11]) = v69;
  v35 = *(_QWORD *)(v3 + *(int *)(v70 + 28));
  sub_1C077D144();
  sub_1C07BA05C(v3);
  *(_QWORD *)(v6 + v7[12]) = v35;
  sub_1C07DBCA0(v6, (uint64_t)v55, (uint64_t (*)(_QWORD))type metadata accessor for Blocker);
  v36 = sub_1C0BE96D8();
  sub_1C07B264C(v36, v37);
  sub_1C0BE8F84(v71, v67, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C106CDFC();
  v2[42] = v61;
  v2[43] = v65;
  v38 = sub_1C07AE8D0();
  *(_BYTE *)(v62 + v61[8]) = 1;
  sub_1C07AEC10(v3, v62);
  v39 = sub_1C0BE9F94();
  sub_1C07DBCA0(v39, v40, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  v66(v62 + v61[6], v4, v5);
  *(_BYTE *)(v62 + v61[7]) = v69;
  v41 = *(_QWORD *)(v3 + *(int *)(v70 + 28));
  sub_1C0779758();
  sub_1C0BE9554(v3);
  *(_QWORD *)(v62 + v61[9]) = v41;
  sub_1C07DBCA0(v62, (uint64_t)v38, (uint64_t (*)(_QWORD))type metadata accessor for PairGenerator);
  v42 = sub_1C0BE96D8();
  sub_1C07AB5B0(v42, v43);
  sub_1C0BE95C8(v71, v67);
  v2[47] = v56;
  sub_1C0794BAC(&qword_1ED7506D8, (uint64_t (*)(uint64_t))type metadata accessor for GroupMatcher, (uint64_t)&protocol conformance descriptor for GroupMatcher);
  v2[48] = v44;
  v45 = sub_1C078B1F0();
  sub_1C106CDFC();
  *(_DWORD *)(v57 + *(int *)(v56 + 36)) = 1056964608;
  v46 = sub_1C077B078();
  sub_1C0BE9D08(v46, v47);
  sub_1C0BE9868(v67, v57 + *(int *)(v56 + 20));
  sub_1C0BEA05C();
  v48 = *(_QWORD *)(v3 + *(int *)(v70 + 28));
  sub_1C07966A0();
  sub_1C07BA05C(v3);
  *(_QWORD *)(v57 + loc_1C0CA7E64) = v48;
  sub_1C07DBCA0(v57, (uint64_t)v45, (uint64_t (*)(_QWORD))type metadata accessor for GroupMatcher);
  v49 = sub_1C07A3304();
  sub_1C07AEC10(v49, v50);
  sub_1C07B42A4(v71, v67);
  v2[52] = v58;
  sub_1C0794BAC(&qword_1ED75CE80, (uint64_t (*)(uint64_t))type metadata accessor for Resolver, (uint64_t)&protocol conformance descriptor for Resolver);
  v2[53] = v51;
  v52 = sub_1C078B1F0();
  sub_1C0BE95B4((uint64_t)v52);
  sub_1C07BA6E4(v68);
  sub_1C07BB2A8(v71);
  *(_QWORD *)(v59 + *(int *)(v60 + 24)) = v2;
  sub_1C07A6FC0();
  sub_1C0779D20();
  sub_1C0786388();
  sub_1C0778638();
  sub_1C07767D4();
  sub_1C077C104();
  sub_1C0779D18();
  sub_1C07758BC();
  sub_1C07796F8();
  sub_1C07767BC();
  sub_1C0786390();
  sub_1C077C830();
  sub_1C077C27C();
  sub_1C077C828();
  sub_1C0778744();
  sub_1C07819BC();
  sub_1C0780AA8();
  sub_1C07806D8();
  sub_1C077F164();
  sub_1C07B68D8();
  sub_1C077E900();
  sub_1C07815B0();
  sub_1C07A9950();
  sub_1C07B25F4();
  sub_1C07B802C();
  sub_1C07889DC();
  sub_1C0776AC4();
  sub_1C0781ED8();
  sub_1C078DC10();
  sub_1C078A4A0();
  sub_1C07AFAEC();
  sub_1C07AFE20();
  sub_1C077F860();
  sub_1C0778874();
  sub_1C07B0110();
  sub_1C07B1E30();
  sub_1C0780BEC();
  sub_1C0775BEC();
  sub_1C07817A8();
  sub_1C07ABD9C();
  sub_1C0781234();
  sub_1C07799D4();
  sub_1C07AD77C();
  sub_1C07AE9B0();
  sub_1C077F330();
  sub_1C077D2A4();
  sub_1C07AB898();
  sub_1C07AEFEC();
  sub_1C077B8E0();
  sub_1C078E184();
  sub_1C07B7C70();
  sub_1C077C4B8();
  sub_1C079DD70();
  sub_1C078A034();
  sub_1C07A873C();
  sub_1C077B2D8();
  sub_1C078660C();
  sub_1C0785140();
  sub_1C079CE88();
  sub_1C07AD2A0();
  sub_1C078248C();
  sub_1C07AA11C();
  sub_1C07BAE60();
  sub_1C0BE94C8();
  sub_1C079BF9C();
  sub_1C07B97F8();
  sub_1C07B8530();
  sub_1C0790990();
  sub_1C079EFB8();
  sub_1C07B18DC();
  sub_1C07A32FC();
  sub_1C07B73C0();
  sub_1C077E9F8();
  sub_1C07B48B0();
  sub_1C0782E58();
  sub_1C0780574();
  sub_1C078D800();
  sub_1C07AB000();
  sub_1C07AA938();
  sub_1C0BE94D8();
  sub_1C07BCFDC();
  sub_1C08FF618();
  v53 = (uint64_t (*)(void))sub_1C077FE7C();
  return sub_1C0781074(v53);
}

uint64_t sub_1C0BE47D0()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C077B0C8();
  sub_1C07B4220();
  *(_QWORD *)(v1 + 1656) = v0;
  swift_task_dealloc();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0BE481C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t (*v11)(void);
  uint64_t v13;

  sub_1C077B704();
  v5 = *(_QWORD *)(v1 + 1640);
  sub_1C07BC148();
  sub_1C0BE97A8(v6, v7, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C07893A4(v2, v8, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  *(_QWORD *)(v5 + 176) = v3;
  sub_1C0794BAC(&qword_1ED75CE80, (uint64_t (*)(uint64_t))type metadata accessor for Resolver, (uint64_t)&protocol conformance descriptor for Resolver);
  *(_QWORD *)(v5 + 184) = v9;
  v10 = sub_1C0BE9620();
  sub_1C0BE95A0((uint64_t)v10);
  sub_1C08D6F78(v0, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C08D6F78(v2, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  *(_QWORD *)(v4 + *(int *)(v13 + 24)) = v5;
  sub_1C07A6FC0();
  sub_1C0779D20();
  sub_1C0786388();
  sub_1C0778638();
  sub_1C07767D4();
  sub_1C077C104();
  sub_1C0779D18();
  sub_1C07758BC();
  sub_1C07796F8();
  sub_1C07767BC();
  sub_1C0786390();
  sub_1C077C830();
  sub_1C077C27C();
  sub_1C077C828();
  sub_1C0778744();
  sub_1C07819BC();
  sub_1C0780AA8();
  sub_1C07806D8();
  sub_1C077F164();
  sub_1C07B68D8();
  sub_1C077E900();
  sub_1C07815B0();
  sub_1C07A9950();
  sub_1C07B25F4();
  sub_1C07B802C();
  sub_1C07889DC();
  sub_1C0776AC4();
  sub_1C0781ED8();
  sub_1C078DC10();
  sub_1C078A4A0();
  sub_1C07AFAEC();
  sub_1C07AFE20();
  sub_1C077F860();
  sub_1C0778874();
  sub_1C07B0110();
  sub_1C07B1E30();
  sub_1C0780BEC();
  sub_1C0775BEC();
  sub_1C07817A8();
  sub_1C07ABD9C();
  sub_1C0781234();
  sub_1C07799D4();
  sub_1C07AD77C();
  sub_1C07AE9B0();
  sub_1C077F330();
  sub_1C077D2A4();
  sub_1C07AB898();
  sub_1C07AEFEC();
  sub_1C077B8E0();
  sub_1C078E184();
  sub_1C07B7C70();
  sub_1C077C4B8();
  sub_1C079DD70();
  sub_1C078A034();
  sub_1C07A873C();
  sub_1C077B2D8();
  sub_1C078660C();
  sub_1C0785140();
  sub_1C079CE88();
  sub_1C07AD2A0();
  sub_1C078248C();
  sub_1C07AA11C();
  sub_1C07BAE60();
  sub_1C0BE94C8();
  sub_1C079BF9C();
  sub_1C07B97F8();
  sub_1C07B8530();
  sub_1C0790990();
  sub_1C079EFB8();
  sub_1C07B18DC();
  sub_1C07A32FC();
  sub_1C07B73C0();
  sub_1C077E9F8();
  sub_1C07B48B0();
  sub_1C0782E58();
  sub_1C0780574();
  sub_1C078D800();
  sub_1C07AB000();
  sub_1C07AA938();
  sub_1C0BE94D8();
  sub_1C07BCFDC();
  sub_1C08FF618();
  v11 = (uint64_t (*)(void))sub_1C077FE7C();
  return sub_1C0781074(v11);
}

uint64_t sub_1C0BE4A0C()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C077B0C8();
  sub_1C07B4220();
  *(_QWORD *)(v1 + 1720) = v0;
  swift_task_dealloc();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0BE4A58()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t (*v30)(void);
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t *v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;

  sub_1C077B704();
  v38 = *(_QWORD *)(v0 + 1696);
  v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1680);
  v34 = *(_QWORD *)(v0 + 1672);
  v1 = *(_QWORD **)(v0 + 1664);
  v44 = *(_QWORD *)(v0 + 1280);
  v46 = *(_BYTE *)(v0 + 1876);
  v2 = *(_QWORD *)(v0 + 1256);
  v3 = *(_QWORD *)(v0 + 936);
  v4 = *(_QWORD *)(v0 + 760);
  v5 = *(_QWORD *)(v0 + 664);
  v6 = *(_QWORD *)(v0 + 656);
  v7 = *(int **)(v0 + 624);
  sub_1C0BE9AB4();
  v41 = v8;
  v42 = v9;
  v40 = *(_QWORD *)(v0 + 560);
  v47 = *(_QWORD *)(v0 + 552);
  v48 = v10;
  v11 = *(_QWORD *)(v0 + 544);
  v45 = v11;
  v43 = *(_QWORD *)(v0 + 536);
  sub_1C07BABE4(v47, v12, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C0BE9DC8();
  sub_1C0BE9CC0(v11, v13, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  v1[22] = v7;
  v1[23] = v34;
  v35 = sub_1C0BE9620();
  sub_1C0BE9844(v3, v14, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v33(v6 + v7[5], v4, v5);
  v32 = v2;
  sub_1C07B42A4(v2, v6 + v7[6]);
  *(_BYTE *)(v6 + v7[7]) = 0;
  sub_1C0BE8F84(v3, v6 + v7[8], (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  *(_QWORD *)(v6 + v7[9]) = sub_1C077E788();
  v15 = sub_1C0884620();
  sub_1C08D6F78(v2, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C07AD22C();
  *(_QWORD *)(v6 + v7[10]) = v15;
  *(_BYTE *)(v6 + v7[11]) = v46;
  v16 = *(_QWORD *)(v3 + *(int *)(v48 + 28));
  sub_1C0783050();
  sub_1C07BB2A8(v3);
  *(_QWORD *)(v6 + v7[12]) = v16;
  sub_1C07DBCA0(v6, (uint64_t)v35, (uint64_t (*)(_QWORD))type metadata accessor for Blocker);
  v17 = sub_1C0BE96D8();
  sub_1C07B42A4(v17, v18);
  sub_1C0BE8F84(v45, v2, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0BE9DC8();
  v1[27] = v36;
  v1[28] = v38;
  v39 = sub_1C07AE8D0();
  *(_BYTE *)(v37 + v36[8]) = 1;
  sub_1C0BE8F84(v3, v37, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C07DBCA0(v2, v37 + v36[5], (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0BE97D0();
  *(_BYTE *)(v37 + v36[7]) = v46;
  v19 = *(_QWORD *)(v3 + *(int *)(v48 + 28));
  sub_1C0779758();
  sub_1C0BE99F4(v3);
  *(_QWORD *)(v37 + v36[9]) = v19;
  sub_1C07DBCA0(v37, (uint64_t)v39, (uint64_t (*)(_QWORD))type metadata accessor for PairGenerator);
  sub_1C0BE8F84(v47, v3, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C0BE8F84(v45, v2, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  v1[32] = v40;
  sub_1C0794BAC(&qword_1ED7506D8, (uint64_t (*)(uint64_t))type metadata accessor for GroupMatcher, (uint64_t)&protocol conformance descriptor for GroupMatcher);
  v1[33] = v20;
  sub_1C078B1F0();
  sub_1C106CDFC();
  *(_DWORD *)(v41 + *(int *)(v40 + 36)) = 1056964608;
  v21 = sub_1C077B078();
  sub_1C0BE95C8(v21, v22);
  sub_1C0BE9854(v2, v41 + *(int *)(v40 + 20));
  sub_1C0BEA05C();
  v23 = *(_QWORD *)(v3 + *(int *)(v48 + 28));
  sub_1C07966A0();
  sub_1C0BE9964(v3);
  *(_QWORD *)(v41 + loc_1C0D2BEC8) = v23;
  v24 = sub_1C0BE9F30();
  sub_1C07DBCA0(v24, v25, (uint64_t (*)(_QWORD))type metadata accessor for GroupMatcher);
  v26 = sub_1C0BE96D8();
  sub_1C0BE94E0(v26, v27);
  sub_1C07B42A4(v45, v32);
  v1[37] = v42;
  sub_1C0794BAC(&qword_1ED75CE80, (uint64_t (*)(uint64_t))type metadata accessor for Resolver, (uint64_t)&protocol conformance descriptor for Resolver);
  v1[38] = v28;
  v29 = sub_1C078B1F0();
  sub_1C0BE95B4((uint64_t)v29);
  sub_1C07BA6E4(v47);
  sub_1C07BB2A8(v45);
  *(_QWORD *)(v43 + *(int *)(v44 + 24)) = v1;
  sub_1C07A6FC0();
  sub_1C0779D20();
  sub_1C0786388();
  sub_1C0778638();
  sub_1C07767D4();
  sub_1C077C104();
  sub_1C0779D18();
  sub_1C07758BC();
  sub_1C07796F8();
  sub_1C07767BC();
  sub_1C0786390();
  sub_1C077C830();
  sub_1C077C27C();
  sub_1C077C828();
  sub_1C0778744();
  sub_1C07819BC();
  sub_1C0780AA8();
  sub_1C07806D8();
  sub_1C077F164();
  sub_1C07B68D8();
  sub_1C077E900();
  sub_1C07815B0();
  sub_1C07A9950();
  sub_1C07B25F4();
  sub_1C07B802C();
  sub_1C07889DC();
  sub_1C0776AC4();
  sub_1C0781ED8();
  sub_1C078DC10();
  sub_1C078A4A0();
  sub_1C07AFAEC();
  sub_1C07AFE20();
  sub_1C077F860();
  sub_1C0778874();
  sub_1C07B0110();
  sub_1C07B1E30();
  sub_1C0780BEC();
  sub_1C0775BEC();
  sub_1C07817A8();
  sub_1C07ABD9C();
  sub_1C0781234();
  sub_1C07799D4();
  sub_1C07AD77C();
  sub_1C07AE9B0();
  sub_1C077F330();
  sub_1C077D2A4();
  sub_1C07AB898();
  sub_1C07AEFEC();
  sub_1C077B8E0();
  sub_1C078E184();
  sub_1C07B7C70();
  sub_1C077C4B8();
  sub_1C079DD70();
  sub_1C078A034();
  sub_1C07A873C();
  sub_1C077B2D8();
  sub_1C078660C();
  sub_1C0785140();
  sub_1C079CE88();
  sub_1C07AD2A0();
  sub_1C078248C();
  sub_1C07AA11C();
  sub_1C07BAE60();
  sub_1C0BE94C8();
  sub_1C079BF9C();
  sub_1C07B97F8();
  sub_1C07B8530();
  sub_1C0790990();
  sub_1C079EFB8();
  sub_1C07B18DC();
  sub_1C07A32FC();
  sub_1C07B73C0();
  sub_1C077E9F8();
  sub_1C07B48B0();
  sub_1C0782E58();
  sub_1C0780574();
  sub_1C078D800();
  sub_1C07AB000();
  sub_1C07AA938();
  sub_1C0BE94D8();
  sub_1C07BCFDC();
  sub_1C08FF618();
  v30 = (uint64_t (*)(void))sub_1C077FE7C();
  return sub_1C0781074(v30);
}

uint64_t sub_1C0BE4F7C()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C077B0C8();
  sub_1C07B4220();
  *(_QWORD *)(v1 + 1744) = v0;
  swift_task_dealloc();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0BE4FC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t (*v11)(void);
  uint64_t v13;

  sub_1C077B704();
  v5 = *(_QWORD *)(v1 + 1728);
  sub_1C077EC0C();
  sub_1C0BE97A8(v6, v7, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C07893A4(v2, v8, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  *(_QWORD *)(v5 + 416) = v3;
  sub_1C0794BAC(&qword_1ED75CE80, (uint64_t (*)(uint64_t))type metadata accessor for Resolver, (uint64_t)&protocol conformance descriptor for Resolver);
  *(_QWORD *)(v5 + 424) = v9;
  v10 = sub_1C0BE9620();
  sub_1C0BE95A0((uint64_t)v10);
  sub_1C08D6F78(v0, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C08D6F78(v2, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  *(_QWORD *)(v4 + *(int *)(v13 + 24)) = v5;
  sub_1C07A6FC0();
  sub_1C0779D20();
  sub_1C0786388();
  sub_1C0778638();
  sub_1C07767D4();
  sub_1C077C104();
  sub_1C0779D18();
  sub_1C07758BC();
  sub_1C07796F8();
  sub_1C07767BC();
  sub_1C0786390();
  sub_1C077C830();
  sub_1C077C27C();
  sub_1C077C828();
  sub_1C0778744();
  sub_1C07819BC();
  sub_1C0780AA8();
  sub_1C07806D8();
  sub_1C077F164();
  sub_1C07B68D8();
  sub_1C077E900();
  sub_1C07815B0();
  sub_1C07A9950();
  sub_1C07B25F4();
  sub_1C07B802C();
  sub_1C07889DC();
  sub_1C0776AC4();
  sub_1C0781ED8();
  sub_1C078DC10();
  sub_1C078A4A0();
  sub_1C07AFAEC();
  sub_1C07AFE20();
  sub_1C077F860();
  sub_1C0778874();
  sub_1C07B0110();
  sub_1C07B1E30();
  sub_1C0780BEC();
  sub_1C0775BEC();
  sub_1C07817A8();
  sub_1C07ABD9C();
  sub_1C0781234();
  sub_1C07799D4();
  sub_1C07AD77C();
  sub_1C07AE9B0();
  sub_1C077F330();
  sub_1C077D2A4();
  sub_1C07AB898();
  sub_1C07AEFEC();
  sub_1C077B8E0();
  sub_1C078E184();
  sub_1C07B7C70();
  sub_1C077C4B8();
  sub_1C079DD70();
  sub_1C078A034();
  sub_1C07A873C();
  sub_1C077B2D8();
  sub_1C078660C();
  sub_1C0785140();
  sub_1C079CE88();
  sub_1C07AD2A0();
  sub_1C078248C();
  sub_1C07AA11C();
  sub_1C07BAE60();
  sub_1C0BE94C8();
  sub_1C079BF9C();
  sub_1C07B97F8();
  sub_1C07B8530();
  sub_1C0790990();
  sub_1C079EFB8();
  sub_1C07B18DC();
  sub_1C07A32FC();
  sub_1C07B73C0();
  sub_1C077E9F8();
  sub_1C07B48B0();
  sub_1C0782E58();
  sub_1C0780574();
  sub_1C078D800();
  sub_1C07AB000();
  sub_1C07AA938();
  sub_1C0BE94D8();
  sub_1C07BCFDC();
  sub_1C08FF618();
  v11 = (uint64_t (*)(void))sub_1C077FE7C();
  return sub_1C0781074(v11);
}

uint64_t sub_1C0BE51BC()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C077B0C8();
  sub_1C07B4220();
  *(_QWORD *)(v1 + 1808) = v0;
  swift_task_dealloc();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0BE5208()
{
  int *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t (*v26)(void);
  uint64_t v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;

  sub_1C077B704();
  v31 = v2[223];
  v29 = v2[220];
  v5 = (_QWORD *)v2[219];
  v34 = v2[160];
  sub_1C0BE9BB0();
  v35 = v6;
  sub_1C0BE9B98();
  v30 = v7;
  v36 = v2[69];
  v8 = v2[68];
  v37 = v8;
  v32 = v2[74];
  v33 = v2[67];
  sub_1C07BABE4(v36, v9, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C0BE9DC0();
  sub_1C0BE8F84(v8, v3, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  v5[22] = v0;
  v5[23] = v29;
  sub_1C0BE9540();
  sub_1C0BE97C8(v1, v10, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  sub_1C07AC388();
  sub_1C07B42A4(v3, v4 + v0[6]);
  v11 = sub_1C0BE9B08();
  sub_1C0BE8F84(v11, v12, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  v13 = sub_1C077E788();
  sub_1C0BE9EAC(v13, v0[9]);
  v14 = sub_1C0BE99B0();
  sub_1C08D6F78(v14, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0BE9940();
  *(_QWORD *)(v4 + v0[10]) = type metadata accessor for Source;
  *(_BYTE *)(v4 + v0[11]) = v38;
  v15 = *(_QWORD *)(v1 + *(int *)(v35 + 28));
  sub_1C07966A0();
  sub_1C0BE9FA0(v1);
  *(_QWORD *)(v4 + v0[12]) = v15;
  sub_1C0BE987C(v16, v17, (uint64_t (*)(_QWORD))type metadata accessor for Blocker);
  sub_1C07AF958(v36, v1);
  sub_1C0BE9518(v37, v3);
  sub_1C0BE9DC0();
  v5[27] = v30;
  v5[28] = v31;
  sub_1C0BE9540();
  sub_1C0BE9EB4();
  *(_BYTE *)(v28 + v18) = v19;
  sub_1C07B42A4(v1, v28);
  sub_1C0BE9F28(v3, v28 + v30[5]);
  sub_1C0BE9AE8(v28 + v30[6]);
  *(_BYTE *)(v28 + v30[7]) = v38;
  sub_1C0BE9760();
  sub_1C07BB2A8(v1);
  *(_QWORD *)(v28 + v30[9]) = type metadata accessor for Source;
  sub_1C0BE9A34(v28, v20, (uint64_t (*)(_QWORD))type metadata accessor for PairGenerator);
  sub_1C07B42A4(v36, v1);
  sub_1C0BE9DC0();
  v21 = (int *)type metadata accessor for IdentifierBasedMatcher();
  v5[32] = v21;
  sub_1C0794BAC(&qword_1ED75C150, (uint64_t (*)(uint64_t))type metadata accessor for IdentifierBasedMatcher, (uint64_t)&protocol conformance descriptor for IdentifierBasedMatcher);
  v5[33] = v22;
  v23 = sub_1C0BE9540();
  sub_1C07B42A4(v37, (uint64_t)v23 + v21[5]);
  *(_DWORD *)((char *)v23 + v21[7]) = 1056964608;
  sub_1C0BE9F78(v1, (uint64_t)v23);
  sub_1C0BE9AE8((uint64_t)v23 + v21[8]);
  *((_BYTE *)v23 + v21[6]) = v38;
  sub_1C0BE8F84(v36, v1, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C07B42A4(v37, v3);
  v5[37] = v32;
  sub_1C0794BAC(&qword_1ED75CE80, (uint64_t (*)(uint64_t))type metadata accessor for Resolver, (uint64_t)&protocol conformance descriptor for Resolver);
  v5[38] = v24;
  v25 = sub_1C078B1F0();
  sub_1C0BE95B4((uint64_t)v25);
  sub_1C0BE99F4(v36);
  sub_1C07BB2A8(v37);
  *(_QWORD *)(v33 + *(int *)(v34 + 24)) = v5;
  sub_1C07A6FC0();
  sub_1C0779D20();
  sub_1C0786388();
  sub_1C0778638();
  sub_1C07767D4();
  sub_1C077C104();
  sub_1C0779D18();
  sub_1C07758BC();
  sub_1C07796F8();
  sub_1C07767BC();
  sub_1C0786390();
  sub_1C077C830();
  sub_1C077C27C();
  sub_1C077C828();
  sub_1C0778744();
  sub_1C07819BC();
  sub_1C0780AA8();
  sub_1C07806D8();
  sub_1C077F164();
  sub_1C07B68D8();
  sub_1C077E900();
  sub_1C07815B0();
  sub_1C07A9950();
  sub_1C07B25F4();
  sub_1C07B802C();
  sub_1C07889DC();
  sub_1C0776AC4();
  sub_1C0781ED8();
  sub_1C078DC10();
  sub_1C078A4A0();
  sub_1C07AFAEC();
  sub_1C07AFE20();
  sub_1C077F860();
  sub_1C0778874();
  sub_1C07B0110();
  sub_1C07B1E30();
  sub_1C0780BEC();
  sub_1C0775BEC();
  sub_1C07817A8();
  sub_1C07ABD9C();
  sub_1C0781234();
  sub_1C07799D4();
  sub_1C07AD77C();
  sub_1C07AE9B0();
  sub_1C077F330();
  sub_1C077D2A4();
  sub_1C07AB898();
  sub_1C07AEFEC();
  sub_1C077B8E0();
  sub_1C078E184();
  sub_1C07B7C70();
  sub_1C077C4B8();
  sub_1C079DD70();
  sub_1C078A034();
  sub_1C07A873C();
  sub_1C077B2D8();
  sub_1C078660C();
  sub_1C0785140();
  sub_1C079CE88();
  sub_1C07AD2A0();
  sub_1C078248C();
  sub_1C07AA11C();
  sub_1C07BAE60();
  sub_1C0BE94C8();
  sub_1C079BF9C();
  sub_1C07B97F8();
  sub_1C07B8530();
  sub_1C0790990();
  sub_1C079EFB8();
  sub_1C07B18DC();
  sub_1C07A32FC();
  sub_1C07B73C0();
  sub_1C077E9F8();
  sub_1C07B48B0();
  sub_1C0782E58();
  sub_1C0780574();
  sub_1C078D800();
  sub_1C07AB000();
  sub_1C07AA938();
  sub_1C0BE94D8();
  sub_1C07BCFDC();
  sub_1C08FF618();
  v26 = (uint64_t (*)(void))sub_1C077FE7C();
  return sub_1C0781074(v26);
}

uint64_t sub_1C0BE5688()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C077B0C8();
  sub_1C07B4220();
  *(_QWORD *)(v1 + 1832) = v0;
  swift_task_dealloc();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0BE56D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t (*v11)(void);
  uint64_t v13;

  sub_1C077B704();
  v5 = *(_QWORD *)(v1 + 1816);
  sub_1C07BC148();
  sub_1C0BE97A8(v6, v7, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C07893A4(v2, v8, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  *(_QWORD *)(v5 + 176) = v3;
  sub_1C0794BAC(&qword_1ED75CE80, (uint64_t (*)(uint64_t))type metadata accessor for Resolver, (uint64_t)&protocol conformance descriptor for Resolver);
  *(_QWORD *)(v5 + 184) = v9;
  v10 = sub_1C0BE9620();
  sub_1C0BE95A0((uint64_t)v10);
  sub_1C08D6F78(v0, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C08D6F78(v2, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  *(_QWORD *)(v4 + *(int *)(v13 + 24)) = v5;
  sub_1C07A6FC0();
  sub_1C0779D20();
  sub_1C0786388();
  sub_1C0778638();
  sub_1C07767D4();
  sub_1C077C104();
  sub_1C0779D18();
  sub_1C07758BC();
  sub_1C07796F8();
  sub_1C07767BC();
  sub_1C0786390();
  sub_1C077C830();
  sub_1C077C27C();
  sub_1C077C828();
  sub_1C0778744();
  sub_1C07819BC();
  sub_1C0780AA8();
  sub_1C07806D8();
  sub_1C077F164();
  sub_1C07B68D8();
  sub_1C077E900();
  sub_1C07815B0();
  sub_1C07A9950();
  sub_1C07B25F4();
  sub_1C07B802C();
  sub_1C07889DC();
  sub_1C0776AC4();
  sub_1C0781ED8();
  sub_1C078DC10();
  sub_1C078A4A0();
  sub_1C07AFAEC();
  sub_1C07AFE20();
  sub_1C077F860();
  sub_1C0778874();
  sub_1C07B0110();
  sub_1C07B1E30();
  sub_1C0780BEC();
  sub_1C0775BEC();
  sub_1C07817A8();
  sub_1C07ABD9C();
  sub_1C0781234();
  sub_1C07799D4();
  sub_1C07AD77C();
  sub_1C07AE9B0();
  sub_1C077F330();
  sub_1C077D2A4();
  sub_1C07AB898();
  sub_1C07AEFEC();
  sub_1C077B8E0();
  sub_1C078E184();
  sub_1C07B7C70();
  sub_1C077C4B8();
  sub_1C079DD70();
  sub_1C078A034();
  sub_1C07A873C();
  sub_1C077B2D8();
  sub_1C078660C();
  sub_1C0785140();
  sub_1C079CE88();
  sub_1C07AD2A0();
  sub_1C078248C();
  sub_1C07AA11C();
  sub_1C07BAE60();
  sub_1C0BE94C8();
  sub_1C079BF9C();
  sub_1C07B97F8();
  sub_1C07B8530();
  sub_1C0790990();
  sub_1C079EFB8();
  sub_1C07B18DC();
  sub_1C07A32FC();
  sub_1C07B73C0();
  sub_1C077E9F8();
  sub_1C07B48B0();
  sub_1C0782E58();
  sub_1C0780574();
  sub_1C078D800();
  sub_1C07AB000();
  sub_1C07AA938();
  sub_1C0BE94D8();
  sub_1C07BCFDC();
  sub_1C08FF618();
  v11 = (uint64_t (*)(void))sub_1C077FE7C();
  return sub_1C0781074(v11);
}

uint64_t sub_1C0BE58C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t **v2;
  uint64_t *v3;

  v3 = *v2;
  v3[231] = a1;
  v3[232] = v1;
  swift_task_dealloc();
  if (v1)
    sub_1C08D6F78(v3[159], (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C077862C();
  return sub_1C0789D28();
}

void sub_1C0BE5938()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B704();
  v2 = *(_QWORD *)(v0 + 1848);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 1280);
    v4 = *(_QWORD *)(v0 + 1272);
    v5 = *(_QWORD *)(v0 + 544);
    v6 = *(_QWORD *)(v0 + 536);
    sub_1C08D6F78(*(_QWORD *)(v0 + 552), (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
    sub_1C077EF28(v5);
    sub_1C077EF28(v4);
    *(_QWORD *)(v6 + *(int *)(v3 + 24)) = v2;
    sub_1C0793128();
    sub_1C0779D20();
    sub_1C0786388();
    sub_1C0778638();
    sub_1C07767D4();
    sub_1C077C104();
    sub_1C0779D18();
    sub_1C07758BC();
    sub_1C07796F8();
    sub_1C07767BC();
    sub_1C077C830();
    sub_1C077C27C();
    sub_1C077C828();
    sub_1C0778744();
    sub_1C07819BC();
    sub_1C0780AA8();
    sub_1C07806D8();
    sub_1C077F164();
    sub_1C07B68D8();
    sub_1C077E900();
    sub_1C07815B0();
    sub_1C07A9950();
    sub_1C07B25F4();
    sub_1C07B802C();
    sub_1C07889DC();
    sub_1C0776AC4();
    sub_1C0781ED8();
    sub_1C078DC10();
    sub_1C078A4A0();
    sub_1C07AFAEC();
    sub_1C07AFE20();
    sub_1C077F860();
    sub_1C0778874();
    sub_1C07B0110();
    sub_1C07B1E30();
    sub_1C0780BEC();
    sub_1C0775BEC();
    sub_1C07817A8();
    sub_1C07ABD9C();
    sub_1C0781234();
    sub_1C07799D4();
    sub_1C07AD77C();
    sub_1C07AE9B0();
    sub_1C077F330();
    sub_1C077D2A4();
    sub_1C07AB898();
    sub_1C07AEFEC();
    sub_1C077B8E0();
    sub_1C078E184();
    sub_1C07B7C70();
    sub_1C077C4B8();
    sub_1C079DD70();
    sub_1C078A034();
    sub_1C07A873C();
    sub_1C077B2D8();
    sub_1C078660C();
    sub_1C0785140();
    sub_1C079CE88();
    sub_1C07AD2A0();
    sub_1C078248C();
    swift_task_dealloc();
    sub_1C0BE9DA4();
    sub_1C07AA11C();
    sub_1C07BAE60();
    sub_1C0BE94C8();
    sub_1C079BF9C();
    sub_1C07B97F8();
    sub_1C07B8530();
    sub_1C0790990();
    sub_1C079EFB8();
    sub_1C07B18DC();
    sub_1C07A32FC();
    sub_1C07B73C0();
    sub_1C077E9F8();
    sub_1C07B48B0();
    sub_1C0782E58();
    sub_1C0780574();
    sub_1C078D800();
    sub_1C07AB000();
    sub_1C07AA938();
    sub_1C0BE94D8();
    sub_1C07BCFDC();
    sub_1C0781074(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    sub_1C07893A4(*(_QWORD *)(v0 + 544), v1, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    sub_1C0D3B988(45);
    swift_bridgeObjectRelease();
    sub_1C07767B4();
    sub_1C106FC94();
    sub_1C07767AC();
    sub_1C106FC94();
    sub_1C0BE9E50();
    sub_1C07B9E54();
  }
}

uint64_t sub_1C0BE5D04()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);

  sub_1C077B704();
  v1 = (void *)v0[161];
  sub_1C0A0A6A4((uint64_t)v1 + 472);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v1 + 432);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v1 + 392);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v1 + 352);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v1 + 312);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v1 + 272);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v1 + 232);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v1 + 192);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v1 + 152);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v1 + 112);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v1 + 72);
  sub_1C079C728((uint64_t)v1 + 32);
  if (qword_1ED761458 != -1)
    swift_once();
  v2 = sub_1C077585C();
  sub_1C0BE94B4(v2, (uint64_t)qword_1ED78D818);
  sub_1C077C818();
  sub_1C077C818();
  v3 = sub_1C106F538();
  if (sub_1C079D68C(v3))
  {
    sub_1C0796818();
    v4 = sub_1C0775854();
    sub_1C078F8A0(v4, 4.8149e-34);
    sub_1C07ACF80(&qword_1ED7614F0);
    v5 = sub_1C07B62D8();
    v7 = sub_1C0782248(v5, v6);
    sub_1C079756C(v7);
    sub_1C077E584();
    sub_1C077C220();
    sub_1C077C220();
    sub_1C0790D34(&dword_1C0771000, v8, v9, "Linker could not construct children, creating empty list due to: %s");
    sub_1C07814E0();
    sub_1C0776778();
  }
  sub_1C077C220();
  sub_1C077C220();

  v10 = v0[160];
  v11 = v0[67];
  sub_1C077C220();
  sub_1C07A00DC(v12, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C0BE95F8(v13, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  *(_QWORD *)(v11 + *(int *)(v10 + 24)) = MEMORY[0x1E0DEE9D8];
  sub_1C07A6FC0();
  sub_1C0779D20();
  sub_1C0786388();
  sub_1C0778638();
  sub_1C07767D4();
  sub_1C077C104();
  sub_1C0779D18();
  sub_1C07758BC();
  sub_1C07796F8();
  sub_1C07767BC();
  sub_1C0786390();
  sub_1C077C830();
  sub_1C077C27C();
  sub_1C077C828();
  sub_1C0778744();
  sub_1C07819BC();
  sub_1C0780AA8();
  sub_1C07806D8();
  sub_1C077F164();
  sub_1C07B68D8();
  sub_1C077E900();
  sub_1C07815B0();
  sub_1C07A9950();
  sub_1C07B25F4();
  sub_1C07B802C();
  sub_1C07889DC();
  sub_1C0776AC4();
  sub_1C0781ED8();
  sub_1C078DC10();
  sub_1C078A4A0();
  sub_1C07AFAEC();
  sub_1C07AFE20();
  sub_1C077F860();
  sub_1C0778874();
  sub_1C07B0110();
  sub_1C07B1E30();
  sub_1C0780BEC();
  sub_1C0775BEC();
  sub_1C07817A8();
  sub_1C07ABD9C();
  sub_1C0781234();
  sub_1C07799D4();
  sub_1C07AD77C();
  sub_1C07AE9B0();
  sub_1C077F330();
  sub_1C077D2A4();
  sub_1C07AB898();
  sub_1C07AEFEC();
  sub_1C077B8E0();
  sub_1C078E184();
  sub_1C07B7C70();
  sub_1C077C4B8();
  sub_1C079DD70();
  sub_1C078A034();
  sub_1C07A873C();
  sub_1C077B2D8();
  sub_1C078660C();
  sub_1C0785140();
  sub_1C079CE88();
  sub_1C07AD2A0();
  sub_1C078248C();
  sub_1C07AA11C();
  sub_1C07BAE60();
  sub_1C0BE94C8();
  sub_1C079BF9C();
  sub_1C07B97F8();
  sub_1C07B8530();
  sub_1C0790990();
  sub_1C079EFB8();
  sub_1C07B18DC();
  sub_1C07A32FC();
  sub_1C07B73C0();
  sub_1C077E9F8();
  sub_1C07B48B0();
  sub_1C0782E58();
  sub_1C0780574();
  sub_1C078D800();
  sub_1C07AB000();
  sub_1C07AA938();
  sub_1C0BE94D8();
  sub_1C07BCFDC();
  sub_1C08FF618();
  v14 = (uint64_t (*)(void))sub_1C077FE7C();
  return sub_1C0781074(v14);
}

uint64_t sub_1C0BE6020()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);

  sub_1C077B704();
  v1 = (void *)v0[164];
  sub_1C07A493C();
  if (qword_1ED761458 != -1)
    swift_once();
  v2 = sub_1C077585C();
  sub_1C0BE94B4(v2, (uint64_t)qword_1ED78D818);
  sub_1C077C818();
  sub_1C077C818();
  v3 = sub_1C106F538();
  if (sub_1C079D68C(v3))
  {
    sub_1C0796818();
    v4 = sub_1C0775854();
    sub_1C078F8A0(v4, 4.8149e-34);
    sub_1C07ACF80(&qword_1ED7614F0);
    v5 = sub_1C07B62D8();
    v7 = sub_1C0782248(v5, v6);
    sub_1C079756C(v7);
    sub_1C077E584();
    sub_1C077C220();
    sub_1C077C220();
    sub_1C0790D34(&dword_1C0771000, v8, v9, "Linker could not construct children, creating empty list due to: %s");
    sub_1C07814E0();
    sub_1C0776778();
  }
  sub_1C077C220();
  sub_1C077C220();

  v10 = v0[160];
  v11 = v0[67];
  sub_1C077C220();
  sub_1C07A00DC(v12, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C0BE95F8(v13, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  *(_QWORD *)(v11 + *(int *)(v10 + 24)) = MEMORY[0x1E0DEE9D8];
  sub_1C07A6FC0();
  sub_1C0779D20();
  sub_1C0786388();
  sub_1C0778638();
  sub_1C07767D4();
  sub_1C077C104();
  sub_1C0779D18();
  sub_1C07758BC();
  sub_1C07796F8();
  sub_1C07767BC();
  sub_1C0786390();
  sub_1C077C830();
  sub_1C077C27C();
  sub_1C077C828();
  sub_1C0778744();
  sub_1C07819BC();
  sub_1C0780AA8();
  sub_1C07806D8();
  sub_1C077F164();
  sub_1C07B68D8();
  sub_1C077E900();
  sub_1C07815B0();
  sub_1C07A9950();
  sub_1C07B25F4();
  sub_1C07B802C();
  sub_1C07889DC();
  sub_1C0776AC4();
  sub_1C0781ED8();
  sub_1C078DC10();
  sub_1C078A4A0();
  sub_1C07AFAEC();
  sub_1C07AFE20();
  sub_1C077F860();
  sub_1C0778874();
  sub_1C07B0110();
  sub_1C07B1E30();
  sub_1C0780BEC();
  sub_1C0775BEC();
  sub_1C07817A8();
  sub_1C07ABD9C();
  sub_1C0781234();
  sub_1C07799D4();
  sub_1C07AD77C();
  sub_1C07AE9B0();
  sub_1C077F330();
  sub_1C077D2A4();
  sub_1C07AB898();
  sub_1C07AEFEC();
  sub_1C077B8E0();
  sub_1C078E184();
  sub_1C07B7C70();
  sub_1C077C4B8();
  sub_1C079DD70();
  sub_1C078A034();
  sub_1C07A873C();
  sub_1C077B2D8();
  sub_1C078660C();
  sub_1C0785140();
  sub_1C079CE88();
  sub_1C07AD2A0();
  sub_1C078248C();
  sub_1C07AA11C();
  sub_1C07BAE60();
  sub_1C0BE94C8();
  sub_1C079BF9C();
  sub_1C07B97F8();
  sub_1C07B8530();
  sub_1C0790990();
  sub_1C079EFB8();
  sub_1C07B18DC();
  sub_1C07A32FC();
  sub_1C07B73C0();
  sub_1C077E9F8();
  sub_1C07B48B0();
  sub_1C0782E58();
  sub_1C0780574();
  sub_1C078D800();
  sub_1C07AB000();
  sub_1C07AA938();
  sub_1C0BE94D8();
  sub_1C07BCFDC();
  sub_1C08FF618();
  v14 = (uint64_t (*)(void))sub_1C077FE7C();
  return sub_1C0781074(v14);
}

uint64_t sub_1C0BE62AC()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);

  sub_1C077B704();
  v1 = (void *)v0[172];
  sub_1C07A493C();
  if (qword_1ED761458 != -1)
    swift_once();
  v2 = sub_1C077585C();
  sub_1C0BE94B4(v2, (uint64_t)qword_1ED78D818);
  sub_1C077C818();
  sub_1C077C818();
  v3 = sub_1C106F538();
  if (sub_1C079D68C(v3))
  {
    sub_1C0796818();
    v4 = sub_1C0775854();
    sub_1C078F8A0(v4, 4.8149e-34);
    sub_1C07ACF80(&qword_1ED7614F0);
    v5 = sub_1C07B62D8();
    v7 = sub_1C0782248(v5, v6);
    sub_1C079756C(v7);
    sub_1C077E584();
    sub_1C077C220();
    sub_1C077C220();
    sub_1C0790D34(&dword_1C0771000, v8, v9, "Linker could not construct children, creating empty list due to: %s");
    sub_1C07814E0();
    sub_1C0776778();
  }
  sub_1C077C220();
  sub_1C077C220();

  v10 = v0[160];
  v11 = v0[67];
  sub_1C077C220();
  sub_1C07A00DC(v12, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C0BE95F8(v13, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  *(_QWORD *)(v11 + *(int *)(v10 + 24)) = MEMORY[0x1E0DEE9D8];
  sub_1C07A6FC0();
  sub_1C0779D20();
  sub_1C0786388();
  sub_1C0778638();
  sub_1C07767D4();
  sub_1C077C104();
  sub_1C0779D18();
  sub_1C07758BC();
  sub_1C07796F8();
  sub_1C07767BC();
  sub_1C0786390();
  sub_1C077C830();
  sub_1C077C27C();
  sub_1C077C828();
  sub_1C0778744();
  sub_1C07819BC();
  sub_1C0780AA8();
  sub_1C07806D8();
  sub_1C077F164();
  sub_1C07B68D8();
  sub_1C077E900();
  sub_1C07815B0();
  sub_1C07A9950();
  sub_1C07B25F4();
  sub_1C07B802C();
  sub_1C07889DC();
  sub_1C0776AC4();
  sub_1C0781ED8();
  sub_1C078DC10();
  sub_1C078A4A0();
  sub_1C07AFAEC();
  sub_1C07AFE20();
  sub_1C077F860();
  sub_1C0778874();
  sub_1C07B0110();
  sub_1C07B1E30();
  sub_1C0780BEC();
  sub_1C0775BEC();
  sub_1C07817A8();
  sub_1C07ABD9C();
  sub_1C0781234();
  sub_1C07799D4();
  sub_1C07AD77C();
  sub_1C07AE9B0();
  sub_1C077F330();
  sub_1C077D2A4();
  sub_1C07AB898();
  sub_1C07AEFEC();
  sub_1C077B8E0();
  sub_1C078E184();
  sub_1C07B7C70();
  sub_1C077C4B8();
  sub_1C079DD70();
  sub_1C078A034();
  sub_1C07A873C();
  sub_1C077B2D8();
  sub_1C078660C();
  sub_1C0785140();
  sub_1C079CE88();
  sub_1C07AD2A0();
  sub_1C078248C();
  sub_1C07AA11C();
  sub_1C07BAE60();
  sub_1C0BE94C8();
  sub_1C079BF9C();
  sub_1C07B97F8();
  sub_1C07B8530();
  sub_1C0790990();
  sub_1C079EFB8();
  sub_1C07B18DC();
  sub_1C07A32FC();
  sub_1C07B73C0();
  sub_1C077E9F8();
  sub_1C07B48B0();
  sub_1C0782E58();
  sub_1C0780574();
  sub_1C078D800();
  sub_1C07AB000();
  sub_1C07AA938();
  sub_1C0BE94D8();
  sub_1C07BCFDC();
  sub_1C08FF618();
  v14 = (uint64_t (*)(void))sub_1C077FE7C();
  return sub_1C0781074(v14);
}

uint64_t sub_1C0BE6538()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);

  sub_1C077B704();
  v1 = (void *)v0[180];
  sub_1C0A0A6A4((uint64_t)v1 + 232);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v1 + 192);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v1 + 152);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v1 + 112);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v1 + 72);
  sub_1C079C728((uint64_t)v1 + 32);
  if (qword_1ED761458 != -1)
    swift_once();
  v2 = sub_1C077585C();
  sub_1C0BE94B4(v2, (uint64_t)qword_1ED78D818);
  sub_1C077C818();
  sub_1C077C818();
  v3 = sub_1C106F538();
  if (sub_1C079D68C(v3))
  {
    sub_1C0796818();
    v4 = sub_1C0775854();
    sub_1C078F8A0(v4, 4.8149e-34);
    sub_1C07ACF80(&qword_1ED7614F0);
    v5 = sub_1C07B62D8();
    v7 = sub_1C0782248(v5, v6);
    sub_1C079756C(v7);
    sub_1C077E584();
    sub_1C077C220();
    sub_1C077C220();
    sub_1C0790D34(&dword_1C0771000, v8, v9, "Linker could not construct children, creating empty list due to: %s");
    sub_1C07814E0();
    sub_1C0776778();
  }
  sub_1C077C220();
  sub_1C077C220();

  v10 = v0[160];
  v11 = v0[67];
  sub_1C077C220();
  sub_1C07A00DC(v12, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C0BE95F8(v13, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  *(_QWORD *)(v11 + *(int *)(v10 + 24)) = MEMORY[0x1E0DEE9D8];
  sub_1C07A6FC0();
  sub_1C0779D20();
  sub_1C0786388();
  sub_1C0778638();
  sub_1C07767D4();
  sub_1C077C104();
  sub_1C0779D18();
  sub_1C07758BC();
  sub_1C07796F8();
  sub_1C07767BC();
  sub_1C0786390();
  sub_1C077C830();
  sub_1C077C27C();
  sub_1C077C828();
  sub_1C0778744();
  sub_1C07819BC();
  sub_1C0780AA8();
  sub_1C07806D8();
  sub_1C077F164();
  sub_1C07B68D8();
  sub_1C077E900();
  sub_1C07815B0();
  sub_1C07A9950();
  sub_1C07B25F4();
  sub_1C07B802C();
  sub_1C07889DC();
  sub_1C0776AC4();
  sub_1C0781ED8();
  sub_1C078DC10();
  sub_1C078A4A0();
  sub_1C07AFAEC();
  sub_1C07AFE20();
  sub_1C077F860();
  sub_1C0778874();
  sub_1C07B0110();
  sub_1C07B1E30();
  sub_1C0780BEC();
  sub_1C0775BEC();
  sub_1C07817A8();
  sub_1C07ABD9C();
  sub_1C0781234();
  sub_1C07799D4();
  sub_1C07AD77C();
  sub_1C07AE9B0();
  sub_1C077F330();
  sub_1C077D2A4();
  sub_1C07AB898();
  sub_1C07AEFEC();
  sub_1C077B8E0();
  sub_1C078E184();
  sub_1C07B7C70();
  sub_1C077C4B8();
  sub_1C079DD70();
  sub_1C078A034();
  sub_1C07A873C();
  sub_1C077B2D8();
  sub_1C078660C();
  sub_1C0785140();
  sub_1C079CE88();
  sub_1C07AD2A0();
  sub_1C078248C();
  sub_1C07AA11C();
  sub_1C07BAE60();
  sub_1C0BE94C8();
  sub_1C079BF9C();
  sub_1C07B97F8();
  sub_1C07B8530();
  sub_1C0790990();
  sub_1C079EFB8();
  sub_1C07B18DC();
  sub_1C07A32FC();
  sub_1C07B73C0();
  sub_1C077E9F8();
  sub_1C07B48B0();
  sub_1C0782E58();
  sub_1C0780574();
  sub_1C078D800();
  sub_1C07AB000();
  sub_1C07AA938();
  sub_1C0BE94D8();
  sub_1C07BCFDC();
  sub_1C08FF618();
  v14 = (uint64_t (*)(void))sub_1C077FE7C();
  return sub_1C0781074(v14);
}

uint64_t sub_1C0BE6804()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);

  sub_1C077B704();
  v1 = (void *)v0[197];
  sub_1C07A493C();
  if (qword_1ED761458 != -1)
    swift_once();
  v2 = sub_1C077585C();
  sub_1C0BE94B4(v2, (uint64_t)qword_1ED78D818);
  sub_1C077C818();
  sub_1C077C818();
  v3 = sub_1C106F538();
  if (sub_1C079D68C(v3))
  {
    sub_1C0796818();
    v4 = sub_1C0775854();
    sub_1C078F8A0(v4, 4.8149e-34);
    sub_1C07ACF80(&qword_1ED7614F0);
    v5 = sub_1C07B62D8();
    v7 = sub_1C0782248(v5, v6);
    sub_1C079756C(v7);
    sub_1C077E584();
    sub_1C077C220();
    sub_1C077C220();
    sub_1C0790D34(&dword_1C0771000, v8, v9, "Linker could not construct children, creating empty list due to: %s");
    sub_1C07814E0();
    sub_1C0776778();
  }
  sub_1C077C220();
  sub_1C077C220();

  v10 = v0[160];
  v11 = v0[67];
  sub_1C077C220();
  sub_1C07A00DC(v12, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C0BE95F8(v13, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  *(_QWORD *)(v11 + *(int *)(v10 + 24)) = MEMORY[0x1E0DEE9D8];
  sub_1C07A6FC0();
  sub_1C0779D20();
  sub_1C0786388();
  sub_1C0778638();
  sub_1C07767D4();
  sub_1C077C104();
  sub_1C0779D18();
  sub_1C07758BC();
  sub_1C07796F8();
  sub_1C07767BC();
  sub_1C0786390();
  sub_1C077C830();
  sub_1C077C27C();
  sub_1C077C828();
  sub_1C0778744();
  sub_1C07819BC();
  sub_1C0780AA8();
  sub_1C07806D8();
  sub_1C077F164();
  sub_1C07B68D8();
  sub_1C077E900();
  sub_1C07815B0();
  sub_1C07A9950();
  sub_1C07B25F4();
  sub_1C07B802C();
  sub_1C07889DC();
  sub_1C0776AC4();
  sub_1C0781ED8();
  sub_1C078DC10();
  sub_1C078A4A0();
  sub_1C07AFAEC();
  sub_1C07AFE20();
  sub_1C077F860();
  sub_1C0778874();
  sub_1C07B0110();
  sub_1C07B1E30();
  sub_1C0780BEC();
  sub_1C0775BEC();
  sub_1C07817A8();
  sub_1C07ABD9C();
  sub_1C0781234();
  sub_1C07799D4();
  sub_1C07AD77C();
  sub_1C07AE9B0();
  sub_1C077F330();
  sub_1C077D2A4();
  sub_1C07AB898();
  sub_1C07AEFEC();
  sub_1C077B8E0();
  sub_1C078E184();
  sub_1C07B7C70();
  sub_1C077C4B8();
  sub_1C079DD70();
  sub_1C078A034();
  sub_1C07A873C();
  sub_1C077B2D8();
  sub_1C078660C();
  sub_1C0785140();
  sub_1C079CE88();
  sub_1C07AD2A0();
  sub_1C078248C();
  sub_1C07AA11C();
  sub_1C07BAE60();
  sub_1C0BE94C8();
  sub_1C079BF9C();
  sub_1C07B97F8();
  sub_1C07B8530();
  sub_1C0790990();
  sub_1C079EFB8();
  sub_1C07B18DC();
  sub_1C07A32FC();
  sub_1C07B73C0();
  sub_1C077E9F8();
  sub_1C07B48B0();
  sub_1C0782E58();
  sub_1C0780574();
  sub_1C078D800();
  sub_1C07AB000();
  sub_1C07AA938();
  sub_1C0BE94D8();
  sub_1C07BCFDC();
  sub_1C08FF618();
  v14 = (uint64_t (*)(void))sub_1C077FE7C();
  return sub_1C0781074(v14);
}

uint64_t sub_1C0BE6A90()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);

  sub_1C077B704();
  v1 = (void *)v0[208];
  sub_1C07A493C();
  if (qword_1ED761458 != -1)
    swift_once();
  v2 = sub_1C077585C();
  sub_1C0BE94B4(v2, (uint64_t)qword_1ED78D818);
  sub_1C077C818();
  sub_1C077C818();
  v3 = sub_1C106F538();
  if (sub_1C079D68C(v3))
  {
    sub_1C0796818();
    v4 = sub_1C0775854();
    sub_1C078F8A0(v4, 4.8149e-34);
    sub_1C07ACF80(&qword_1ED7614F0);
    v5 = sub_1C07B62D8();
    v7 = sub_1C0782248(v5, v6);
    sub_1C079756C(v7);
    sub_1C077E584();
    sub_1C077C220();
    sub_1C077C220();
    sub_1C0790D34(&dword_1C0771000, v8, v9, "Linker could not construct children, creating empty list due to: %s");
    sub_1C07814E0();
    sub_1C0776778();
  }
  sub_1C077C220();
  sub_1C077C220();

  v10 = v0[160];
  v11 = v0[67];
  sub_1C077C220();
  sub_1C07A00DC(v12, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C0BE95F8(v13, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  *(_QWORD *)(v11 + *(int *)(v10 + 24)) = MEMORY[0x1E0DEE9D8];
  sub_1C07A6FC0();
  sub_1C0779D20();
  sub_1C0786388();
  sub_1C0778638();
  sub_1C07767D4();
  sub_1C077C104();
  sub_1C0779D18();
  sub_1C07758BC();
  sub_1C07796F8();
  sub_1C07767BC();
  sub_1C0786390();
  sub_1C077C830();
  sub_1C077C27C();
  sub_1C077C828();
  sub_1C0778744();
  sub_1C07819BC();
  sub_1C0780AA8();
  sub_1C07806D8();
  sub_1C077F164();
  sub_1C07B68D8();
  sub_1C077E900();
  sub_1C07815B0();
  sub_1C07A9950();
  sub_1C07B25F4();
  sub_1C07B802C();
  sub_1C07889DC();
  sub_1C0776AC4();
  sub_1C0781ED8();
  sub_1C078DC10();
  sub_1C078A4A0();
  sub_1C07AFAEC();
  sub_1C07AFE20();
  sub_1C077F860();
  sub_1C0778874();
  sub_1C07B0110();
  sub_1C07B1E30();
  sub_1C0780BEC();
  sub_1C0775BEC();
  sub_1C07817A8();
  sub_1C07ABD9C();
  sub_1C0781234();
  sub_1C07799D4();
  sub_1C07AD77C();
  sub_1C07AE9B0();
  sub_1C077F330();
  sub_1C077D2A4();
  sub_1C07AB898();
  sub_1C07AEFEC();
  sub_1C077B8E0();
  sub_1C078E184();
  sub_1C07B7C70();
  sub_1C077C4B8();
  sub_1C079DD70();
  sub_1C078A034();
  sub_1C07A873C();
  sub_1C077B2D8();
  sub_1C078660C();
  sub_1C0785140();
  sub_1C079CE88();
  sub_1C07AD2A0();
  sub_1C078248C();
  sub_1C07AA11C();
  sub_1C07BAE60();
  sub_1C0BE94C8();
  sub_1C079BF9C();
  sub_1C07B97F8();
  sub_1C07B8530();
  sub_1C0790990();
  sub_1C079EFB8();
  sub_1C07B18DC();
  sub_1C07A32FC();
  sub_1C07B73C0();
  sub_1C077E9F8();
  sub_1C07B48B0();
  sub_1C0782E58();
  sub_1C0780574();
  sub_1C078D800();
  sub_1C07AB000();
  sub_1C07AA938();
  sub_1C0BE94D8();
  sub_1C07BCFDC();
  sub_1C08FF618();
  v14 = (uint64_t (*)(void))sub_1C077FE7C();
  return sub_1C0781074(v14);
}

uint64_t sub_1C0BE6D1C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);

  sub_1C077B704();
  v1 = (void *)v0[216];
  sub_1C0A0A6A4((uint64_t)v1 + 352);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v1 + 312);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v1 + 272);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v1 + 232);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v1 + 192);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v1 + 152);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v1 + 112);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v1 + 72);
  sub_1C079C728((uint64_t)v1 + 32);
  if (qword_1ED761458 != -1)
    swift_once();
  v2 = sub_1C077585C();
  sub_1C0BE94B4(v2, (uint64_t)qword_1ED78D818);
  sub_1C077C818();
  sub_1C077C818();
  v3 = sub_1C106F538();
  if (sub_1C079D68C(v3))
  {
    sub_1C0796818();
    v4 = sub_1C0775854();
    sub_1C078F8A0(v4, 4.8149e-34);
    sub_1C07ACF80(&qword_1ED7614F0);
    v5 = sub_1C07B62D8();
    v7 = sub_1C0782248(v5, v6);
    sub_1C079756C(v7);
    sub_1C077E584();
    sub_1C077C220();
    sub_1C077C220();
    sub_1C0790D34(&dword_1C0771000, v8, v9, "Linker could not construct children, creating empty list due to: %s");
    sub_1C07814E0();
    sub_1C0776778();
  }
  sub_1C077C220();
  sub_1C077C220();

  v10 = v0[160];
  v11 = v0[67];
  sub_1C077C220();
  sub_1C07A00DC(v12, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C0BE95F8(v13, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  *(_QWORD *)(v11 + *(int *)(v10 + 24)) = MEMORY[0x1E0DEE9D8];
  sub_1C07A6FC0();
  sub_1C0779D20();
  sub_1C0786388();
  sub_1C0778638();
  sub_1C07767D4();
  sub_1C077C104();
  sub_1C0779D18();
  sub_1C07758BC();
  sub_1C07796F8();
  sub_1C07767BC();
  sub_1C0786390();
  sub_1C077C830();
  sub_1C077C27C();
  sub_1C077C828();
  sub_1C0778744();
  sub_1C07819BC();
  sub_1C0780AA8();
  sub_1C07806D8();
  sub_1C077F164();
  sub_1C07B68D8();
  sub_1C077E900();
  sub_1C07815B0();
  sub_1C07A9950();
  sub_1C07B25F4();
  sub_1C07B802C();
  sub_1C07889DC();
  sub_1C0776AC4();
  sub_1C0781ED8();
  sub_1C078DC10();
  sub_1C078A4A0();
  sub_1C07AFAEC();
  sub_1C07AFE20();
  sub_1C077F860();
  sub_1C0778874();
  sub_1C07B0110();
  sub_1C07B1E30();
  sub_1C0780BEC();
  sub_1C0775BEC();
  sub_1C07817A8();
  sub_1C07ABD9C();
  sub_1C0781234();
  sub_1C07799D4();
  sub_1C07AD77C();
  sub_1C07AE9B0();
  sub_1C077F330();
  sub_1C077D2A4();
  sub_1C07AB898();
  sub_1C07AEFEC();
  sub_1C077B8E0();
  sub_1C078E184();
  sub_1C07B7C70();
  sub_1C077C4B8();
  sub_1C079DD70();
  sub_1C078A034();
  sub_1C07A873C();
  sub_1C077B2D8();
  sub_1C078660C();
  sub_1C0785140();
  sub_1C079CE88();
  sub_1C07AD2A0();
  sub_1C078248C();
  sub_1C07AA11C();
  sub_1C07BAE60();
  sub_1C0BE94C8();
  sub_1C079BF9C();
  sub_1C07B97F8();
  sub_1C07B8530();
  sub_1C0790990();
  sub_1C079EFB8();
  sub_1C07B18DC();
  sub_1C07A32FC();
  sub_1C07B73C0();
  sub_1C077E9F8();
  sub_1C07B48B0();
  sub_1C0782E58();
  sub_1C0780574();
  sub_1C078D800();
  sub_1C07AB000();
  sub_1C07AA938();
  sub_1C0BE94D8();
  sub_1C07BCFDC();
  sub_1C08FF618();
  v14 = (uint64_t (*)(void))sub_1C077FE7C();
  return sub_1C0781074(v14);
}

uint64_t sub_1C0BE700C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);

  sub_1C077B704();
  v1 = (void *)v0[219];
  sub_1C07A493C();
  if (qword_1ED761458 != -1)
    swift_once();
  v2 = sub_1C077585C();
  sub_1C0BE94B4(v2, (uint64_t)qword_1ED78D818);
  sub_1C077C818();
  sub_1C077C818();
  v3 = sub_1C106F538();
  if (sub_1C079D68C(v3))
  {
    sub_1C0796818();
    v4 = sub_1C0775854();
    sub_1C078F8A0(v4, 4.8149e-34);
    sub_1C07ACF80(&qword_1ED7614F0);
    v5 = sub_1C07B62D8();
    v7 = sub_1C0782248(v5, v6);
    sub_1C079756C(v7);
    sub_1C077E584();
    sub_1C077C220();
    sub_1C077C220();
    sub_1C0790D34(&dword_1C0771000, v8, v9, "Linker could not construct children, creating empty list due to: %s");
    sub_1C07814E0();
    sub_1C0776778();
  }
  sub_1C077C220();
  sub_1C077C220();

  v10 = v0[160];
  v11 = v0[67];
  sub_1C077C220();
  sub_1C07A00DC(v12, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C0BE95F8(v13, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  *(_QWORD *)(v11 + *(int *)(v10 + 24)) = MEMORY[0x1E0DEE9D8];
  sub_1C07A6FC0();
  sub_1C0779D20();
  sub_1C0786388();
  sub_1C0778638();
  sub_1C07767D4();
  sub_1C077C104();
  sub_1C0779D18();
  sub_1C07758BC();
  sub_1C07796F8();
  sub_1C07767BC();
  sub_1C0786390();
  sub_1C077C830();
  sub_1C077C27C();
  sub_1C077C828();
  sub_1C0778744();
  sub_1C07819BC();
  sub_1C0780AA8();
  sub_1C07806D8();
  sub_1C077F164();
  sub_1C07B68D8();
  sub_1C077E900();
  sub_1C07815B0();
  sub_1C07A9950();
  sub_1C07B25F4();
  sub_1C07B802C();
  sub_1C07889DC();
  sub_1C0776AC4();
  sub_1C0781ED8();
  sub_1C078DC10();
  sub_1C078A4A0();
  sub_1C07AFAEC();
  sub_1C07AFE20();
  sub_1C077F860();
  sub_1C0778874();
  sub_1C07B0110();
  sub_1C07B1E30();
  sub_1C0780BEC();
  sub_1C0775BEC();
  sub_1C07817A8();
  sub_1C07ABD9C();
  sub_1C0781234();
  sub_1C07799D4();
  sub_1C07AD77C();
  sub_1C07AE9B0();
  sub_1C077F330();
  sub_1C077D2A4();
  sub_1C07AB898();
  sub_1C07AEFEC();
  sub_1C077B8E0();
  sub_1C078E184();
  sub_1C07B7C70();
  sub_1C077C4B8();
  sub_1C079DD70();
  sub_1C078A034();
  sub_1C07A873C();
  sub_1C077B2D8();
  sub_1C078660C();
  sub_1C0785140();
  sub_1C079CE88();
  sub_1C07AD2A0();
  sub_1C078248C();
  sub_1C07AA11C();
  sub_1C07BAE60();
  sub_1C0BE94C8();
  sub_1C079BF9C();
  sub_1C07B97F8();
  sub_1C07B8530();
  sub_1C0790990();
  sub_1C079EFB8();
  sub_1C07B18DC();
  sub_1C07A32FC();
  sub_1C07B73C0();
  sub_1C077E9F8();
  sub_1C07B48B0();
  sub_1C0782E58();
  sub_1C0780574();
  sub_1C078D800();
  sub_1C07AB000();
  sub_1C07AA938();
  sub_1C0BE94D8();
  sub_1C07BCFDC();
  sub_1C08FF618();
  v14 = (uint64_t (*)(void))sub_1C077FE7C();
  return sub_1C0781074(v14);
}

uint64_t sub_1C0BE7298()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);

  sub_1C077B704();
  v1 = (void *)v0[227];
  sub_1C07A493C();
  if (qword_1ED761458 != -1)
    swift_once();
  v2 = sub_1C077585C();
  sub_1C0BE94B4(v2, (uint64_t)qword_1ED78D818);
  sub_1C077C818();
  sub_1C077C818();
  v3 = sub_1C106F538();
  if (sub_1C079D68C(v3))
  {
    sub_1C0796818();
    v4 = sub_1C0775854();
    sub_1C078F8A0(v4, 4.8149e-34);
    sub_1C07ACF80(&qword_1ED7614F0);
    v5 = sub_1C07B62D8();
    v7 = sub_1C0782248(v5, v6);
    sub_1C079756C(v7);
    sub_1C077E584();
    sub_1C077C220();
    sub_1C077C220();
    sub_1C0790D34(&dword_1C0771000, v8, v9, "Linker could not construct children, creating empty list due to: %s");
    sub_1C07814E0();
    sub_1C0776778();
  }
  sub_1C077C220();
  sub_1C077C220();

  v10 = v0[160];
  v11 = v0[67];
  sub_1C077C220();
  sub_1C07A00DC(v12, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C0BE95F8(v13, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  *(_QWORD *)(v11 + *(int *)(v10 + 24)) = MEMORY[0x1E0DEE9D8];
  sub_1C07A6FC0();
  sub_1C0779D20();
  sub_1C0786388();
  sub_1C0778638();
  sub_1C07767D4();
  sub_1C077C104();
  sub_1C0779D18();
  sub_1C07758BC();
  sub_1C07796F8();
  sub_1C07767BC();
  sub_1C0786390();
  sub_1C077C830();
  sub_1C077C27C();
  sub_1C077C828();
  sub_1C0778744();
  sub_1C07819BC();
  sub_1C0780AA8();
  sub_1C07806D8();
  sub_1C077F164();
  sub_1C07B68D8();
  sub_1C077E900();
  sub_1C07815B0();
  sub_1C07A9950();
  sub_1C07B25F4();
  sub_1C07B802C();
  sub_1C07889DC();
  sub_1C0776AC4();
  sub_1C0781ED8();
  sub_1C078DC10();
  sub_1C078A4A0();
  sub_1C07AFAEC();
  sub_1C07AFE20();
  sub_1C077F860();
  sub_1C0778874();
  sub_1C07B0110();
  sub_1C07B1E30();
  sub_1C0780BEC();
  sub_1C0775BEC();
  sub_1C07817A8();
  sub_1C07ABD9C();
  sub_1C0781234();
  sub_1C07799D4();
  sub_1C07AD77C();
  sub_1C07AE9B0();
  sub_1C077F330();
  sub_1C077D2A4();
  sub_1C07AB898();
  sub_1C07AEFEC();
  sub_1C077B8E0();
  sub_1C078E184();
  sub_1C07B7C70();
  sub_1C077C4B8();
  sub_1C079DD70();
  sub_1C078A034();
  sub_1C07A873C();
  sub_1C077B2D8();
  sub_1C078660C();
  sub_1C0785140();
  sub_1C079CE88();
  sub_1C07AD2A0();
  sub_1C078248C();
  sub_1C07AA11C();
  sub_1C07BAE60();
  sub_1C0BE94C8();
  sub_1C079BF9C();
  sub_1C07B97F8();
  sub_1C07B8530();
  sub_1C0790990();
  sub_1C079EFB8();
  sub_1C07B18DC();
  sub_1C07A32FC();
  sub_1C07B73C0();
  sub_1C077E9F8();
  sub_1C07B48B0();
  sub_1C0782E58();
  sub_1C0780574();
  sub_1C078D800();
  sub_1C07AB000();
  sub_1C07AA938();
  sub_1C0BE94D8();
  sub_1C07BCFDC();
  sub_1C08FF618();
  v14 = (uint64_t (*)(void))sub_1C077FE7C();
  return sub_1C0781074(v14);
}

uint64_t sub_1C0BE7524()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);

  sub_1C077B704();
  if (qword_1ED761458 != -1)
    swift_once();
  v2 = sub_1C077585C();
  sub_1C0BE94B4(v2, (uint64_t)qword_1ED78D818);
  sub_1C077C818();
  sub_1C077C818();
  v3 = sub_1C106F538();
  if (sub_1C079D68C(v3))
  {
    sub_1C0796818();
    v4 = sub_1C0775854();
    sub_1C078F8A0(v4, 4.8149e-34);
    sub_1C07ACF80(&qword_1ED7614F0);
    v5 = sub_1C07B62D8();
    v7 = sub_1C0782248(v5, v6);
    sub_1C079756C(v7);
    sub_1C077E584();
    sub_1C077C220();
    sub_1C077C220();
    sub_1C0790D34(&dword_1C0771000, v8, v9, "Linker could not construct children, creating empty list due to: %s");
    sub_1C07814E0();
    sub_1C0776778();
  }
  sub_1C077C220();
  sub_1C077C220();

  v10 = *(_QWORD *)(v1 + 1280);
  v11 = *(_QWORD *)(v1 + 536);
  sub_1C077C220();
  sub_1C07A00DC(v12, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C0BE95F8(v13, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  *(_QWORD *)(v11 + *(int *)(v10 + 24)) = MEMORY[0x1E0DEE9D8];
  sub_1C07A6FC0();
  sub_1C0779D20();
  sub_1C0786388();
  sub_1C0778638();
  sub_1C07767D4();
  sub_1C077C104();
  sub_1C0779D18();
  sub_1C07758BC();
  sub_1C07796F8();
  sub_1C07767BC();
  sub_1C0786390();
  sub_1C077C830();
  sub_1C077C27C();
  sub_1C077C828();
  sub_1C0778744();
  sub_1C07819BC();
  sub_1C0780AA8();
  sub_1C07806D8();
  sub_1C077F164();
  sub_1C07B68D8();
  sub_1C077E900();
  sub_1C07815B0();
  sub_1C07A9950();
  sub_1C07B25F4();
  sub_1C07B802C();
  sub_1C07889DC();
  sub_1C0776AC4();
  sub_1C0781ED8();
  sub_1C078DC10();
  sub_1C078A4A0();
  sub_1C07AFAEC();
  sub_1C07AFE20();
  sub_1C077F860();
  sub_1C0778874();
  sub_1C07B0110();
  sub_1C07B1E30();
  sub_1C0780BEC();
  sub_1C0775BEC();
  sub_1C07817A8();
  sub_1C07ABD9C();
  sub_1C0781234();
  sub_1C07799D4();
  sub_1C07AD77C();
  sub_1C07AE9B0();
  sub_1C077F330();
  sub_1C077D2A4();
  sub_1C07AB898();
  sub_1C07AEFEC();
  sub_1C077B8E0();
  sub_1C078E184();
  sub_1C07B7C70();
  sub_1C077C4B8();
  sub_1C079DD70();
  sub_1C078A034();
  sub_1C07A873C();
  sub_1C077B2D8();
  sub_1C078660C();
  sub_1C0785140();
  sub_1C079CE88();
  sub_1C07AD2A0();
  sub_1C078248C();
  sub_1C07AA11C();
  sub_1C07BAE60();
  sub_1C0BE94C8();
  sub_1C079BF9C();
  sub_1C07B97F8();
  sub_1C07B8530();
  sub_1C0790990();
  sub_1C079EFB8();
  sub_1C07B18DC();
  sub_1C07A32FC();
  sub_1C07B73C0();
  sub_1C077E9F8();
  sub_1C07B48B0();
  sub_1C0782E58();
  sub_1C0780574();
  sub_1C078D800();
  sub_1C07AB000();
  sub_1C07AA938();
  sub_1C0BE94D8();
  sub_1C07BCFDC();
  sub_1C08FF618();
  v14 = (uint64_t (*)(void))sub_1C077FE7C();
  return sub_1C0781074(v14);
}

uint64_t sub_1C0BE77A8()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);

  sub_1C077B704();
  v1 = (void *)v0[189];
  sub_1C0A0A6A4((uint64_t)v1 + 232);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v1 + 192);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v1 + 152);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v1 + 112);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v1 + 72);
  sub_1C079C728((uint64_t)v1 + 32);
  if (qword_1ED761458 != -1)
    swift_once();
  v2 = sub_1C077585C();
  sub_1C0BE94B4(v2, (uint64_t)qword_1ED78D818);
  sub_1C077C818();
  sub_1C077C818();
  v3 = sub_1C106F538();
  if (sub_1C079D68C(v3))
  {
    sub_1C0796818();
    v4 = sub_1C0775854();
    sub_1C078F8A0(v4, 4.8149e-34);
    sub_1C07ACF80(&qword_1ED7614F0);
    v5 = sub_1C07B62D8();
    v7 = sub_1C0782248(v5, v6);
    sub_1C079756C(v7);
    sub_1C077E584();
    sub_1C077C220();
    sub_1C077C220();
    sub_1C0790D34(&dword_1C0771000, v8, v9, "Linker could not construct children, creating empty list due to: %s");
    sub_1C07814E0();
    sub_1C0776778();
  }
  sub_1C077C220();
  sub_1C077C220();

  v10 = v0[160];
  v11 = v0[67];
  sub_1C077C220();
  sub_1C07A00DC(v12, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C0BE95F8(v13, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  *(_QWORD *)(v11 + *(int *)(v10 + 24)) = MEMORY[0x1E0DEE9D8];
  sub_1C07A6FC0();
  sub_1C0779D20();
  sub_1C0786388();
  sub_1C0778638();
  sub_1C07767D4();
  sub_1C077C104();
  sub_1C0779D18();
  sub_1C07758BC();
  sub_1C07796F8();
  sub_1C07767BC();
  sub_1C0786390();
  sub_1C077C830();
  sub_1C077C27C();
  sub_1C077C828();
  sub_1C0778744();
  sub_1C07819BC();
  sub_1C0780AA8();
  sub_1C07806D8();
  sub_1C077F164();
  sub_1C07B68D8();
  sub_1C077E900();
  sub_1C07815B0();
  sub_1C07A9950();
  sub_1C07B25F4();
  sub_1C07B802C();
  sub_1C07889DC();
  sub_1C0776AC4();
  sub_1C0781ED8();
  sub_1C078DC10();
  sub_1C078A4A0();
  sub_1C07AFAEC();
  sub_1C07AFE20();
  sub_1C077F860();
  sub_1C0778874();
  sub_1C07B0110();
  sub_1C07B1E30();
  sub_1C0780BEC();
  sub_1C0775BEC();
  sub_1C07817A8();
  sub_1C07ABD9C();
  sub_1C0781234();
  sub_1C07799D4();
  sub_1C07AD77C();
  sub_1C07AE9B0();
  sub_1C077F330();
  sub_1C077D2A4();
  sub_1C07AB898();
  sub_1C07AEFEC();
  sub_1C077B8E0();
  sub_1C078E184();
  sub_1C07B7C70();
  sub_1C077C4B8();
  sub_1C079DD70();
  sub_1C078A034();
  sub_1C07A873C();
  sub_1C077B2D8();
  sub_1C078660C();
  sub_1C0785140();
  sub_1C079CE88();
  sub_1C07AD2A0();
  sub_1C078248C();
  sub_1C07AA11C();
  sub_1C07BAE60();
  sub_1C0BE94C8();
  sub_1C079BF9C();
  sub_1C07B97F8();
  sub_1C07B8530();
  sub_1C0790990();
  sub_1C079EFB8();
  sub_1C07B18DC();
  sub_1C07A32FC();
  sub_1C07B73C0();
  sub_1C077E9F8();
  sub_1C07B48B0();
  sub_1C0782E58();
  sub_1C0780574();
  sub_1C078D800();
  sub_1C07AB000();
  sub_1C07AA938();
  sub_1C0BE94D8();
  sub_1C07BCFDC();
  sub_1C08FF618();
  v14 = (uint64_t (*)(void))sub_1C077FE7C();
  return sub_1C0781074(v14);
}

uint64_t sub_1C0BE7A74()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);

  sub_1C077B704();
  v1 = (void *)v0[205];
  sub_1C07A493C();
  if (qword_1ED761458 != -1)
    swift_once();
  v2 = sub_1C077585C();
  sub_1C0BE94B4(v2, (uint64_t)qword_1ED78D818);
  sub_1C077C818();
  sub_1C077C818();
  v3 = sub_1C106F538();
  if (sub_1C079D68C(v3))
  {
    sub_1C0796818();
    v4 = sub_1C0775854();
    sub_1C078F8A0(v4, 4.8149e-34);
    sub_1C07ACF80(&qword_1ED7614F0);
    v5 = sub_1C07B62D8();
    v7 = sub_1C0782248(v5, v6);
    sub_1C079756C(v7);
    sub_1C077E584();
    sub_1C077C220();
    sub_1C077C220();
    sub_1C0790D34(&dword_1C0771000, v8, v9, "Linker could not construct children, creating empty list due to: %s");
    sub_1C07814E0();
    sub_1C0776778();
  }
  sub_1C077C220();
  sub_1C077C220();

  v10 = v0[160];
  v11 = v0[67];
  sub_1C077C220();
  sub_1C07A00DC(v12, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C0BE95F8(v13, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  *(_QWORD *)(v11 + *(int *)(v10 + 24)) = MEMORY[0x1E0DEE9D8];
  sub_1C07A6FC0();
  sub_1C0779D20();
  sub_1C0786388();
  sub_1C0778638();
  sub_1C07767D4();
  sub_1C077C104();
  sub_1C0779D18();
  sub_1C07758BC();
  sub_1C07796F8();
  sub_1C07767BC();
  sub_1C0786390();
  sub_1C077C830();
  sub_1C077C27C();
  sub_1C077C828();
  sub_1C0778744();
  sub_1C07819BC();
  sub_1C0780AA8();
  sub_1C07806D8();
  sub_1C077F164();
  sub_1C07B68D8();
  sub_1C077E900();
  sub_1C07815B0();
  sub_1C07A9950();
  sub_1C07B25F4();
  sub_1C07B802C();
  sub_1C07889DC();
  sub_1C0776AC4();
  sub_1C0781ED8();
  sub_1C078DC10();
  sub_1C078A4A0();
  sub_1C07AFAEC();
  sub_1C07AFE20();
  sub_1C077F860();
  sub_1C0778874();
  sub_1C07B0110();
  sub_1C07B1E30();
  sub_1C0780BEC();
  sub_1C0775BEC();
  sub_1C07817A8();
  sub_1C07ABD9C();
  sub_1C0781234();
  sub_1C07799D4();
  sub_1C07AD77C();
  sub_1C07AE9B0();
  sub_1C077F330();
  sub_1C077D2A4();
  sub_1C07AB898();
  sub_1C07AEFEC();
  sub_1C077B8E0();
  sub_1C078E184();
  sub_1C07B7C70();
  sub_1C077C4B8();
  sub_1C079DD70();
  sub_1C078A034();
  sub_1C07A873C();
  sub_1C077B2D8();
  sub_1C078660C();
  sub_1C0785140();
  sub_1C079CE88();
  sub_1C07AD2A0();
  sub_1C078248C();
  sub_1C07AA11C();
  sub_1C07BAE60();
  sub_1C0BE94C8();
  sub_1C079BF9C();
  sub_1C07B97F8();
  sub_1C07B8530();
  sub_1C0790990();
  sub_1C079EFB8();
  sub_1C07B18DC();
  sub_1C07A32FC();
  sub_1C07B73C0();
  sub_1C077E9F8();
  sub_1C07B48B0();
  sub_1C0782E58();
  sub_1C0780574();
  sub_1C078D800();
  sub_1C07AB000();
  sub_1C07AA938();
  sub_1C0BE94D8();
  sub_1C07BCFDC();
  sub_1C08FF618();
  v14 = (uint64_t (*)(void))sub_1C077FE7C();
  return sub_1C0781074(v14);
}

void Source.identifier(for:entityClass:isGraphIdentifier:)()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(_QWORD, _QWORD, _QWORD);
  NSObject *v29;
  os_log_type_t v30;
  int v31;
  _BOOL4 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE v49[12];
  int v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(_QWORD, _QWORD, _QWORD);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;

  sub_1C0779670();
  v68 = v0;
  v69 = v1;
  v64 = v2;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v62 = sub_1C106F874();
  v57 = *(_QWORD *)(v62 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v9);
  v11 = &v49[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = sub_1C106F868();
  v59 = *(_QWORD *)(v12 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v13);
  sub_1C077AED0();
  v56 = v14;
  MEMORY[0x1E0C80A78](v15);
  v58 = &v49[-v16];
  v17 = sub_1C106FB50();
  v66 = *(_QWORD *)(v17 - 8);
  v67 = v17;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v18);
  sub_1C077AE40();
  v65 = v19;
  v20 = sub_1C0776744();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  sub_1C077AED0();
  v55 = v22;
  MEMORY[0x1E0C80A78](v23);
  v25 = &v49[-v24];
  if (qword_1ED761458 != -1)
    swift_once();
  v63 = v11;
  v26 = sub_1C077585C();
  v27 = sub_1C079E000(v26, (uint64_t)qword_1ED78D818);
  v28 = *(void (**)(_QWORD, _QWORD, _QWORD))(v21 + 16);
  v60 = v4;
  v53 = v28;
  v28(v25, v4, v20);
  swift_bridgeObjectRetain_n();
  v61 = v27;
  v29 = sub_1C106F538();
  v30 = sub_1C1070378();
  v31 = v30;
  v32 = os_log_type_enabled(v29, v30);
  v54 = v20;
  if (v32)
  {
    v33 = sub_1C0775854();
    v52 = v12;
    v34 = v33;
    v51 = sub_1C0775854();
    v71 = v51;
    *(_DWORD *)v34 = 136381187;
    sub_1C07796D8();
    v35 = sub_1C0BE96D8();
    v70 = sub_1C0788DAC(v35, v36, v37);
    sub_1C10705AC();
    sub_1C07878F8();
    *(_WORD *)(v34 + 12) = 2080;
    v50 = v31;
    sub_1C0794BAC(&qword_1ED759F68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3BB08], MEMORY[0x1E0D3BB40]);
    v38 = sub_1C1070C0C();
    v70 = sub_1C0788DAC(v38, v39, &v71);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    sub_1C0BE99FC();
    *(_WORD *)(v34 + 22) = 1024;
    LODWORD(v70) = v64 & 1;
    sub_1C10705AC();
    _os_log_impl(&dword_1C0771000, v29, (os_log_type_t)v50, "Source: generating identifier for: %{private}s : %s : %{BOOL}d", (uint8_t *)v34, 0x1Cu);
    swift_arrayDestroy();
    sub_1C0776778();
  }
  sub_1C07984A8();
  sub_1C0BE99FC();

  v71 = v8;
  v72 = v6;
  sub_1C07796D8();
  sub_1C106FC94();
  v41 = v71;
  v40 = v72;
  sub_1C106FB44();
  sub_1C106FB20();
  v43 = v42;
  sub_1C078AC90(v66);
  if (v43 >> 60 != 15)
  {
    sub_1C0775844();
    sub_1C0794BAC((unint64_t *)&qword_1ED762B30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9940], MEMORY[0x1E0CA9930]);
    sub_1C106F85C();
    __asm { BR              X10 }
  }
  sub_1C07796D8();
  v44 = sub_1C106F538();
  v45 = sub_1C1070390();
  if (os_log_type_enabled(v44, v45))
  {
    v46 = (uint8_t *)sub_1C0775854();
    v71 = sub_1C0775854();
    *(_DWORD *)v46 = 136380675;
    sub_1C07796D8();
    v70 = sub_1C0788DAC(v41, v40, &v71);
    sub_1C10705AC();
    sub_1C07878F8();
    sub_1C07796F0(&dword_1C0771000, v44, v45, "Source: failed to encode identifier as UTF8 data: %{private}s", v46);
    swift_arrayDestroy();
    sub_1C0776778();
  }

  sub_1C07984A8();
  v47 = sub_1C106E590();
  sub_1C0794D1C(v69, 1, v48, v47);
  sub_1C0776760();
}

void Linker.stores.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1C0BE8F84(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
}

void Linker.source.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1C0BE98B4();
  sub_1C0BE8F84(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0778534();
}

void Linker.pipelineType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + *(int *)(sub_1C0BE98B4() + 28));
  sub_1C0778534();
}

void Linker.stageName.getter(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t Linker.execute()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = v0;
  return sub_1C078C868();
}

uint64_t sub_1C0BE83FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v10)(void);

  v1 = sub_1C0BE98B4();
  sub_1C0BE9B50(v1);
  if (v2)
  {
    *(_QWORD *)(v0 + 80) = 0;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v3 = sub_1C0788970();
    sub_1C07D6D1C(v3, v4);
    sub_1C078D670();
    *(_BYTE *)(v0 + 105) = *(_BYTE *)(v0 + 104);
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v5;
    v6 = (_BYTE *)sub_1C07AC7DC(v5, (uint64_t)sub_1C0BE848C);
    return sub_1C0786564(v6, v7, v8);
  }
  else
  {
    v10 = (uint64_t (*)(void))sub_1C0779830();
    return sub_1C078500C(v10);
  }
}

uint64_t sub_1C0BE848C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  sub_1C077862C();
  return sub_1C0789D28();
}

uint64_t sub_1C0BE84EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  _QWORD *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80) + 1;
  sub_1C07AF498();
  if (v2 == v1)
  {
    sub_1C0BE9E48();
    v3 = (uint64_t (*)(void))sub_1C0779830();
    return sub_1C078500C(v3);
  }
  else
  {
    sub_1C07BBE0C();
    sub_1C078D670();
    *(_BYTE *)(v0 + 105) = *(_BYTE *)(v0 + 104);
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v5;
    v6 = (_BYTE *)sub_1C07AC7DC(v5, (uint64_t)sub_1C0BE848C);
    return sub_1C0786564(v6, v7, v8);
  }
}

uint64_t sub_1C0BE8574()
{
  uint64_t v0;

  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 16);
  return sub_1C077CF28(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0BE85A0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = v0;
  return sub_1C078C868();
}

uint64_t sub_1C0BE85B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  v1 = sub_1C0BE98B4();
  result = sub_1C0BE9B50(v1);
  if (v3)
  {
    if (((v3 - 1) & 0x7FFFFFFFFFFFFFFFLL) != 0)
    {
      *(_QWORD *)(v0 + 80) = 0;
      v4 = result + 32;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C07D6D1C(v4, v0 + 16);
      sub_1C0BE9888();
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 88) = v5;
      v6 = (_BYTE *)sub_1C0BE9B38(v5, (uint64_t)sub_1C0BE863C);
      return sub_1C0BE9740(v6, v7, v8);
    }
    else
    {
      v9 = (uint64_t (*)(void))sub_1C0779830();
      return sub_1C0799D28(v9);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C0BE863C()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C077B0C8();
  sub_1C07B4220();
  *(_QWORD *)(v1 + 96) = v0;
  swift_task_dealloc();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0BE8688()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  _QWORD *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = v0[10] + 1;
  v2 = (v0[9] - 1) & 0x7FFFFFFFFFFFFFFFLL;
  sub_1C07AF498();
  if (v1 == v2)
  {
    sub_1C0BE9E48();
    v3 = (uint64_t (*)(void))sub_1C0779830();
    return sub_1C0799D28(v3);
  }
  else
  {
    sub_1C07BBE0C();
    sub_1C0BE9888();
    v5 = (_QWORD *)swift_task_alloc();
    v0[11] = v5;
    v6 = (_BYTE *)sub_1C0BE9B38(v5, (uint64_t)sub_1C0BE863C);
    return sub_1C0BE9740(v6, v7, v8);
  }
}

uint64_t sub_1C0BE8700()
{
  uint64_t v0;

  sub_1C0BE9E48();
  sub_1C07AF498();
  return sub_1C077CF28(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0BE8730(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 56) = a1;
  *(_QWORD *)(v3 + 64) = a2;
  type metadata accessor for Source();
  *(_QWORD *)(v3 + 72) = swift_task_alloc();
  *(_QWORD *)(v3 + 80) = swift_task_alloc();
  *(_BYTE *)(v3 + 113) = *a3;
  return swift_task_switch();
}

uint64_t sub_1C0BE87A4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  void *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t);

  if (qword_1ED761518 != -1)
    swift_once();
  swift_beginAccess();
  if (qword_1ED7627B8)
  {
    v1 = *(_BYTE *)(v0 + 113);
    v2 = (*((uint64_t (**)(void))off_1ED7627C0 + 1))();
    v4 = v3;
    *(_BYTE *)(v0 + 112) = v1;
    v12 = (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))(**(int **)(v3 + 24) + *(_QWORD *)(v3 + 24));
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v5;
    *v5 = v0;
    v5[1] = sub_1C0BE893C;
    return v12(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), v0 + 112, v2, v4);
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v7 = sub_1C077585C();
    v8 = (void *)sub_1C079E000(v7, (uint64_t)qword_1ED762AF8);
    sub_1C106F538();
    v9 = sub_1C0784E0C();
    if (sub_1C077C10C(v9))
    {
      *(_WORD *)sub_1C0775854() = 0;
      sub_1C077874C(&dword_1C0771000, v10, v11, "InternalPlugin: Linker: loadInternalSourceChildren: failed to load internal source children");
      sub_1C0776778();
    }

    swift_task_dealloc();
    sub_1C07767BC();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
}

uint64_t sub_1C0BE893C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 96) = a1;
  *(_QWORD *)(v3 + 104) = v1;
  swift_task_dealloc();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0BE899C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  void *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 96);
  if (v1)
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v2 = *(_QWORD *)(v0 + 56);
    v3 = sub_1C077585C();
    v4 = sub_1C079E000(v3, (uint64_t)qword_1ED762AF8);
    sub_1C0BE9844(v2, v5, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    sub_1C07796D8();
    v6 = v4;
    sub_1C106F538();
    v7 = sub_1C0784E0C();
    v8 = os_log_type_enabled(v4, v7);
    v9 = *(_QWORD *)(v0 + 80);
    if (v8)
    {
      v10 = *(_QWORD *)(v0 + 72);
      v11 = sub_1C0775854();
      sub_1C0775854();
      *(_DWORD *)v11 = 134218242;
      *(_QWORD *)(v0 + 40) = *(_QWORD *)(v1 + 16);
      sub_1C0BEA02C();
      sub_1C10705AC();
      sub_1C0775844();
      *(_WORD *)(v11 + 12) = 2080;
      sub_1C0BE94D0(v9, v10);
      sub_1C07767C4();
      sub_1C077EF28(v10);
      v12 = sub_1C0BEA02C();
      *(_QWORD *)(v0 + 48) = sub_1C0788DAC(v12, v13, v14);
      sub_1C10705AC();
      sub_1C0775894();
      sub_1C077EF28(v9);
      _os_log_impl(&dword_1C0771000, v6, v7, "InternalPlugin: Linker: loadInternalSourceChildren: loaded %ld children for %s", (uint8_t *)v11, 0x16u);
      swift_arrayDestroy();
      sub_1C0776778();
    }
    sub_1C0775844();
    sub_1C08D6F78(v9, (uint64_t (*)(_QWORD))type metadata accessor for Source);

    v20 = *(_QWORD *)(v0 + 96);
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v15 = sub_1C077585C();
    v16 = (void *)sub_1C079E000(v15, (uint64_t)qword_1ED762AF8);
    sub_1C106F538();
    v17 = sub_1C0784E0C();
    if (sub_1C077C10C(v17))
    {
      *(_WORD *)sub_1C0775854() = 0;
      sub_1C077874C(&dword_1C0771000, v18, v19, "InternalPlugin: Linker: loadInternalSourceChildren: failed to load internal source children");
      sub_1C0776778();
    }

    v20 = 0;
  }
  swift_task_dealloc();
  sub_1C07796F8();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v20);
}

uint64_t sub_1C0BE8C24()
{
  uint64_t v0;

  swift_task_dealloc();
  sub_1C07767BC();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1C0BE8C60(_BYTE *a1@<X8>)
{
  Linker.stageName.getter(a1);
}

uint64_t sub_1C0BE8C7C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C0BE8CC0;
  return Linker.execute()();
}

uint64_t sub_1C0BE8CC0()
{
  uint64_t *v0;
  uint64_t v2;

  sub_1C077B0C8();
  v2 = *v0;
  swift_task_dealloc();
  return sub_1C077CF28(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t type metadata accessor for Linker()
{
  uint64_t result;

  result = qword_1ED75CB78;
  if (!qword_1ED75CB78)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1C0BE8D38(unint64_t result, char a2, uint64_t a3)
{
  if ((a2 & 1) != 0)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)(a3 + 16) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1C0BE8D58()
{
  return sub_1C0BE8F48(&qword_1ED762CD8);
}

uint64_t sub_1C0BE8D64()
{
  sub_1C0BE9A84();
  swift_arrayDestroy();
  sub_1C077D228();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0BE8D88()
{
  return sub_1C0BE8ED0((void (*)(_QWORD))MEMORY[0x1E0D3C130]);
}

uint64_t sub_1C0BE8D94()
{
  return sub_1C0BE8E0C((uint64_t *)&unk_1ED762690);
}

uint64_t sub_1C0BE8DA0()
{
  return sub_1C0BE8ED0((void (*)(_QWORD))MEMORY[0x1E0CB0870]);
}

uint64_t sub_1C0BE8DAC()
{
  return sub_1C0BE8E0C((uint64_t *)&unk_1ED753A00);
}

uint64_t sub_1C0BE8DB8()
{
  return sub_1C0BE8ED0((void (*)(_QWORD))MEMORY[0x1E0D3CC50]);
}

uint64_t sub_1C0BE8DC4()
{
  sub_1C0BE9A84();
  swift_arrayDestroy();
  sub_1C077D228();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0BE8DE8()
{
  return sub_1C0BE8F48(&qword_1ED7447A0);
}

uint64_t sub_1C0BE8DF4()
{
  return sub_1C0BE8F48(&qword_1ED758CD0);
}

uint64_t sub_1C0BE8E00()
{
  return sub_1C0BE8E0C(&qword_1ED744A70);
}

uint64_t sub_1C0BE8E0C(uint64_t *a1)
{
  sub_1C07ACF80(a1);
  sub_1C0BE9698();
  sub_1C077D228();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0BE8E28()
{
  sub_1C0BE9A84();
  swift_arrayDestroy();
  sub_1C077D228();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0BE8E4C()
{
  return sub_1C0BE8ED0((void (*)(_QWORD))type metadata accessor for ProgressTokens);
}

uint64_t sub_1C0BE8E58()
{
  return sub_1C0BE8ED0((void (*)(_QWORD))type metadata accessor for ConstructionProgressTokens);
}

uint64_t sub_1C0BE8E64()
{
  return sub_1C0BE8ED0((void (*)(_QWORD))MEMORY[0x1E0D3BB08]);
}

uint64_t sub_1C0BE8E70()
{
  return sub_1C0BE8F48(&qword_1ED75D0E8);
}

uint64_t sub_1C0BE8E7C()
{
  return sub_1C0BE8ED0((void (*)(_QWORD))MEMORY[0x1E0CB11B8]);
}

uint64_t sub_1C0BE8E88()
{
  return sub_1C0BE8F48(&qword_1ED75BDB8);
}

uint64_t sub_1C0BE8E94()
{
  sub_1C0BE9A84();
  swift_arrayDestroy();
  sub_1C077D228();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0BE8EB8()
{
  return sub_1C0BE8F48(&qword_1EF62FEC8);
}

uint64_t sub_1C0BE8EC4()
{
  return sub_1C0BE8ED0((void (*)(_QWORD))type metadata accessor for GraphTriple);
}

uint64_t sub_1C0BE8ED0(void (*a1)(_QWORD))
{
  a1(0);
  sub_1C0BE9698();
  sub_1C077D228();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0BE8EF4()
{
  sub_1C0BE9A84();
  swift_arrayDestroy();
  sub_1C077D228();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0BE8F18()
{
  return sub_1C0BE8F48(qword_1ED755FC8);
}

uint64_t sub_1C0BE8F24()
{
  return sub_1C0BE8F48(&qword_1ED74D298);
}

uint64_t sub_1C0BE8F30()
{
  return sub_1C0BE8F48(&qword_1ED760DE8);
}

uint64_t sub_1C0BE8F3C()
{
  return sub_1C0BE8F48(&qword_1ED751258);
}

uint64_t sub_1C0BE8F48(uint64_t *a1)
{
  sub_1C07ACF80(a1);
  sub_1C077B200();
  swift_arrayDestroy();
  sub_1C077D228();
  return swift_deallocClassInstance();
}

void sub_1C0BE8F84(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  v4 = sub_1C0779690(a1, a2, a3);
  sub_1C0793628(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16));
  sub_1C0778534();
}

uint64_t sub_1C0BE8FB4(uint64_t a1)
{
  if ((a1 & 0xC000000000000001) != 0)
    return sub_1C107069C();
  else
    return *(_QWORD *)(a1 + 16);
}

void sub_1C0BE8FD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;

  sub_1C0BE970C();
  if (v3)
  {
    sub_1C07767B4();
    v5 = sub_1C10709B4();
    sub_1C07767AC();
    if (!v5)
      goto LABEL_14;
  }
  else
  {
    v5 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v5)
    {
LABEL_14:
      sub_1C0781AD8();
      return;
    }
  }
  if (v1)
  {
    if (v3)
    {
      sub_1C07767B4();
      v6 = sub_1C0BE9618();
      sub_1C07767AC();
      if (v6 <= v4)
      {
        if (v5 >= 1)
        {
          sub_1C0BE9EC0();
          sub_1C07767B4();
          do
          {
            v7 = sub_1C07ACF80(v2);
            sub_1C0BE9824(v7, v8, v9, v10, v11, v12, v13, v14, v24);
            v15 = swift_retain();
            sub_1C0BE9D28(v15, v16, v17, v18, v19, v20, v21, v22, v25);
            sub_1C0BE9D14();
          }
          while (!v23);
          sub_1C07767AC();
          goto LABEL_14;
        }
        goto LABEL_17;
      }
    }
    else
    {
      if (*(_QWORD *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10) <= v4)
      {
        sub_1C0BE9C08(v0 & 0xFFFFFFFFFFFFFF8);
        goto LABEL_14;
      }
      __break(1u);
    }
    __break(1u);
LABEL_17:
    __break(1u);
  }
  __break(1u);
}

void sub_1C0BE90DC()
{
  sub_1C0BE8FD4();
}

void sub_1C0BE9100()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;

  sub_1C0BE970C();
  if (v3)
  {
    sub_1C07767B4();
    v5 = sub_1C10709B4();
    sub_1C07767AC();
    if (!v5)
      goto LABEL_14;
  }
  else
  {
    v5 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v5)
    {
LABEL_14:
      sub_1C0781AD8();
      return;
    }
  }
  if (v1)
  {
    if (v3)
    {
      sub_1C07767B4();
      v6 = sub_1C0BE9618();
      sub_1C07767AC();
      if (v6 <= v4)
      {
        if (v5 >= 1)
        {
          sub_1C0BE9EC0();
          sub_1C07767B4();
          do
          {
            v7 = sub_1C07ACF80(v2);
            sub_1C0BE9824(v7, v8, v9, v10, v11, v12, v13, v14, v25);
            v16 = *v15;
            sub_1C0BE9D28((uint64_t)v16, v17, v18, v19, v20, v21, v22, v23, v26);
            sub_1C0BE9D14();
          }
          while (!v24);
          sub_1C07767AC();
          goto LABEL_14;
        }
        goto LABEL_17;
      }
    }
    else
    {
      if (*(_QWORD *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10) <= v4)
      {
        sub_1C0BE9C08(v0 & 0xFFFFFFFFFFFFFF8);
        goto LABEL_14;
      }
      __break(1u);
    }
    __break(1u);
LABEL_17:
    __break(1u);
  }
  __break(1u);
}

void sub_1C0BE9208()
{
  sub_1C0BE9100();
}

void sub_1C0BE922C(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1EF641F38, (uint64_t (*)(uint64_t))type metadata accessor for Linker, (uint64_t)&protocol conformance descriptor for Linker);
  *(_QWORD *)(a1 + 8) = v2;
}

uint64_t getEnumTagSinglePayload for Linker()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0BE9274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v11;

  v6 = sub_1C077D0AC();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = v4;
    return sub_1C07B2D80(v8, v3, v7);
  }
  v9 = sub_1C077674C();
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v9;
    v8 = v4 + *(int *)(a3 + 20);
    return sub_1C07B2D80(v8, v3, v7);
  }
  v11 = *(_QWORD *)(v4 + *(int *)(a3 + 24));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for Linker()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0BE9310(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v8 = sub_1C077D0AC();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = v5;
    return sub_1C07B2D8C(v10, v4, v4, v9);
  }
  result = sub_1C077674C();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
  {
    v9 = result;
    v10 = v5 + *(int *)(a4 + 20);
    return sub_1C07B2D8C(v10, v4, v4, v9);
  }
  *(_QWORD *)(v5 + *(int *)(a4 + 24)) = (v4 - 1);
  return result;
}

uint64_t sub_1C0BE939C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for PhaseStores();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Source();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C0BE9438(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C07ACF80(&qword_1ED7618D0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C0BE9478(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  if (!*a1)
  {
    v3 = sub_1C07D4BEC(a2);
    atomic_store(MEMORY[0x1C3BA8174](MEMORY[0x1E0DEAF50], v3), a1);
  }
  sub_1C0778534();
}

uint64_t sub_1C0BE94B4(uint64_t a1, uint64_t a2)
{
  sub_1C079E000(a1, a2);
  return sub_1C1070390();
}

uint64_t sub_1C0BE94C8()
{
  return swift_task_dealloc();
}

void sub_1C0BE94D0(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_1C0BE8F84(a1, a2, v2);
}

uint64_t sub_1C0BE94D8()
{
  return swift_task_dealloc();
}

void sub_1C0BE94E0(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_1C0BE8F84(a1, a2, v2);
}

uint64_t sub_1C0BE94FC()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_1C0BE9508()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

void sub_1C0BE9518(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_1C0BE8F84(a1, a2, v2);
}

uint64_t sub_1C0BE9520()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + *(int *)(v1 + 48)) = v2;
  return v0;
}

uint64_t sub_1C0BE9534()
{
  return swift_retain();
}

uint64_t *sub_1C0BE9540()
{
  uint64_t *v0;

  return sub_1C079DFC4(v0);
}

uint64_t sub_1C0BE9548()
{
  return swift_isUniquelyReferenced_nonNull_bridgeObject();
}

void sub_1C0BE9554(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_1C08D6F78(a1, v1);
}

void sub_1C0BE955C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_1C0BE8F84(a1, v3, a3);
}

uint64_t sub_1C0BE9564()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t result;

  *(_QWORD *)(v2 - 144) = v1[83];
  *(_QWORD *)(v2 - 184) = v1[76];
  *(_QWORD *)(v2 - 176) = v0;
  result = v1[69];
  *(_QWORD *)(v2 - 200) = result;
  *(_QWORD *)(v2 - 128) = v1[68];
  return result;
}

void sub_1C0BE95A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  Resolver.init(stores:source:pipelineType:)(v1, v2, (char *)(v3 - 81), a1);
}

void sub_1C0BE95B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  Resolver.init(stores:source:pipelineType:)(v2, v1, (char *)(v3 - 81), a1);
}

void sub_1C0BE95C8(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_1C0BE8F84(a1, a2, v2);
}

uint64_t sub_1C0BE95D0()
{
  uint64_t v0;
  uint64_t v1;

  *(_DWORD *)(v1 - 120) = *(unsigned __int8 *)(v0 + 1876);
  return *(_QWORD *)(v0 + 1272);
}

uint64_t sub_1C0BE95E4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 208) = v0;
  return v0;
}

void sub_1C0BE95F8(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_1C08D6F78(v2, a2);
}

void sub_1C0BE9600()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);

  sub_1C07DBCA0(v2, v0 + *(int *)(v1 + 20), v3);
}

uint64_t sub_1C0BE9618()
{
  return sub_1C10709B4();
}

uint64_t *sub_1C0BE9620()
{
  uint64_t *v0;

  return sub_1C079DFC4(v0);
}

void sub_1C0BE9628(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_1C0BE8F84(a1, v3, a3);
}

uint64_t sub_1C0BE9630@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return v1 + a1;
}

uint64_t sub_1C0BE9640(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + *(int *)(v2 + 36)) = a1;
  return sub_1C0884620();
}

uint64_t sub_1C0BE964C()
{
  return sub_1C10709B4();
}

uint64_t sub_1C0BE9654()
{
  return swift_retain();
}

uint64_t sub_1C0BE9698()
{
  return swift_arrayDestroy();
}

uint64_t sub_1C0BE96B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a64;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v66 - 232))(v65 + *(int *)(a64 + 20), v64, *(_QWORD *)(v66 - 144));
}

uint64_t sub_1C0BE96D8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1C0BE96FC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1C0BE9730()
{
  return _s24IntelligencePlatformCore15LocationMatcherV11entityClass0aB006EntityG0Vvg_0();
}

uint64_t sub_1C0BE9738()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 - 160))();
}

uint64_t sub_1C0BE9740(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  return ResumableStage.executeIfRequired(_:)(a1, a2, a3);
}

uint64_t sub_1C0BE9750(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v2 - 184))(a1, v1, *(_QWORD *)(v2 - 144));
}

uint64_t sub_1C0BE9760()
{
  return swift_retain();
}

uint64_t *sub_1C0BE9778()
{
  uint64_t *v0;

  return sub_1C079DFC4(v0);
}

uint64_t sub_1C0BE9780(uint64_t a1)
{
  uint64_t v1;

  *(_DWORD *)(a1 + *(int *)(v1 + 28)) = 1056964608;
  return sub_1C106D1EC();
}

void sub_1C0BE97A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_1C0BE8F84(v4, v3, a3);
}

uint64_t sub_1C0BE97B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + *(int *)(v2 + 36)) = v1;
  return v0;
}

void sub_1C0BE97C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_1C0BE8F84(a1, v3, a3);
}

uint64_t sub_1C0BE97D0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 - 168))();
}

void sub_1C0BE97D8()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  uint64_t v2;
  uint64_t v3;

  sub_1C07DBCA0(v2, v0 + *(int *)(v3 + 20), v1);
}

void sub_1C0BE97F0()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1C07DBCA0(v1, v3 + *(int *)(v2 + 20), v0);
}

uint64_t sub_1C0BE9808()
{
  uint64_t v0;
  uint64_t v1;

  return v0 + *(int *)(v1 + 20);
}

void sub_1C0BE981C(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_1C07DBCA0(a1, a2, v2);
}

uint64_t sub_1C0BE9824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t (*v10)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;

  return v10(&a9, v12, v9, a1, v11);
}

uint64_t sub_1C0BE983C()
{
  return sub_1C0883D28();
}

void sub_1C0BE9844(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_1C0BE8F84(a1, v3, a3);
}

uint64_t *sub_1C0BE984C()
{
  uint64_t *v0;

  return sub_1C079DFC4(v0);
}

void sub_1C0BE9854(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_1C07DBCA0(a1, a2, v2);
}

uint64_t sub_1C0BE985C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + *(int *)(v1 + 36)) = a1;
  return sub_1C0884620();
}

void sub_1C0BE9868(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_1C07DBCA0(a1, a2, v2);
}

uint64_t sub_1C0BE9870()
{
  return swift_retain();
}

void sub_1C0BE987C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_1C07DBCA0(v3, *(_QWORD *)(v4 - 200), a3);
}

_QWORD *sub_1C0BE9888()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *result;

  result = sub_1C07A9480(v0, *(_QWORD *)(v1 + 40));
  *(_BYTE *)(v1 + 104) = 3;
  return result;
}

uint64_t sub_1C0BE98B4()
{
  return type metadata accessor for Linker();
}

uint64_t sub_1C0BE98BC()
{
  return type metadata accessor for SoftwareMatcher();
}

uint64_t sub_1C0BE98E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v2 + *(int *)(v3 + 36)) = a1;
  *(_QWORD *)(v4 - 208) = v1;
  return sub_1C0884620();
}

uint64_t sub_1C0BE98F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v0 + *(int *)(v1 + 28)) = 0;
  *(_QWORD *)(v3 - 224) = v2;
  return v2;
}

uint64_t sub_1C0BE9910()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v3 - 136))(v2 + *(int *)(v1 + 24), v0, *(_QWORD *)(v3 - 144));
}

uint64_t sub_1C0BE9924()
{
  return sub_1C106D1EC();
}

uint64_t *sub_1C0BE992C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 240) = a1;
  *(_QWORD *)(v1 + 64) = a1;
  *(_QWORD *)(v3 - 216) = v2;
  return sub_1C079DFC4(v2);
}

uint64_t sub_1C0BE9940()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 - 192))();
}

void sub_1C0BE9948()
{
  sub_1C0BE9100();
}

uint64_t sub_1C0BE9950()
{
  uint64_t v0;

  return v0;
}

void sub_1C0BE995C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_1C0BE8F84(a1, v3, a3);
}

void sub_1C0BE9964(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_1C08D6F78(a1, v1);
}

uint64_t sub_1C0BE996C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = 0;
  return swift_release();
}

void sub_1C0BE9978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + *(int *)(v1 + 40)) = v0;
  *(_BYTE *)(v2 + *(int *)(v1 + 44)) = *(_DWORD *)(v3 - 104);
}

void sub_1C0BE9994()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + *(int *)(v0 + 40)) = v1;
  *(_BYTE *)(v2 + *(int *)(v0 + 44)) = *(_DWORD *)(v3 - 120);
}

uint64_t sub_1C0BE99B0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1C0BE99BC()
{
  uint64_t v0;

  return v0;
}

void sub_1C0BE99C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_1C07DBCA0(v3, *(_QWORD *)(v4 - 208), a3);
}

void sub_1C0BE99E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;

  sub_1C07DBCA0(v1, v0 + *(int *)(v3 + 20), v2);
}

void sub_1C0BE99F4(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_1C08D6F78(a1, v1);
}

uint64_t sub_1C0BE99FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t sub_1C0BE9A0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(*(_QWORD *)(v2 - 208) + a1) = 1;
  return v1;
}

uint64_t sub_1C0BE9A24()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 128);
}

void sub_1C0BE9A34(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_1C07DBCA0(a1, v3, a3);
}

void sub_1C0BE9A3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + *(int *)(v1 + 40)) = v0;
  *(_BYTE *)(v2 + *(int *)(v1 + 44)) = *(_DWORD *)(v3 - 152);
}

uint64_t sub_1C0BE9A54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v0 + *(int *)(v1 + 28)) = 0;
  return v2;
}

uint64_t sub_1C0BE9A6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 + *(int *)(v1 + 28)) = 0;
  return v0;
}

uint64_t sub_1C0BE9A84()
{
  uint64_t v0;

  return v0 + 32;
}

__n128 *sub_1C0BE9A90(__n128 *result, __n128 a2)
{
  result[1] = a2;
  return result;
}

void sub_1C0BE9A9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v0 + *(int *)(v1 + 40)) = v2;
  *(_BYTE *)(v0 + *(int *)(v1 + 44)) = *(_DWORD *)(v3 - 104);
}

void sub_1C0BE9AB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 616);
  *(_QWORD *)(v1 - 192) = *(_QWORD *)(v0 + 608);
  *(_QWORD *)(v1 - 184) = v2;
}

void sub_1C0BE9ACC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 96) = *(_QWORD *)(v1 - 192);
}

uint64_t sub_1C0BE9AD8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 232) = a2;
  return a2(a1, v2, v3);
}

uint64_t sub_1C0BE9AE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v2 - 128))(a1, v1, *(_QWORD *)(v2 - 104));
}

void sub_1C0BE9AF8()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;
  uint64_t v2;

  sub_1C07DBCA0(v2, v1, v0);
}

uint64_t sub_1C0BE9B08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 + *(int *)(v0 + 28)) = 0;
  return v1;
}

uint64_t sub_1C0BE9B20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 + *(int *)(v0 + 28)) = 0;
  return v1;
}

uint64_t sub_1C0BE9B38@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = a2;
  return v3;
}

uint64_t sub_1C0BE9B50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = *(_QWORD *)(v1 + *(int *)(a1 + 24));
  *(_QWORD *)(v2 + 64) = result;
  *(_QWORD *)(v2 + 72) = *(_QWORD *)(result + 16);
  return result;
}

uint64_t sub_1C0BE9B68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + *(int *)(v2 + 28)) = 0;
  return v0;
}

uint64_t sub_1C0BE9B80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + *(int *)(v0 + 48)) = v2;
  return v1;
}

void sub_1C0BE9B98()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 208) = *(_QWORD *)(v0 + 616);
}

void sub_1C0BE9BB0()
{
  uint64_t v0;
  uint64_t v1;

  *(_DWORD *)(v1 - 96) = *(unsigned __int8 *)(v0 + 1876);
}

uint64_t sub_1C0BE9BD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return sub_1C07B2D8C(v3, a2, 1, v2);
}

uint64_t sub_1C0BE9BE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return v1 + a1;
}

uint64_t sub_1C0BE9C08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1 + 32, v2, v1);
}

uint64_t sub_1C0BE9C30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 248))(v0, v1);
}

uint64_t sub_1C0BE9C40@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 248) = a1;
  return a1(v1, v2);
}

uint64_t sub_1C0BE9C50()
{
  uint64_t v0;

  return sub_1C0A0A6A4(v0);
}

void sub_1C0BE9C58()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 120) = *(_QWORD *)(v0 + 1520);
}

unint64_t sub_1C0BE9C80()
{
  return sub_1C0BA4304();
}

__n128 sub_1C0BE9C90(__n128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,__n128 a59)
{
  __n128 result;

  result = a59;
  a1[1] = a59;
  return result;
}

uint64_t sub_1C0BE9CA0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 - 112))();
}

uint64_t sub_1C0BE9CA8()
{
  return _s24IntelligencePlatformCore15LocationMatcherV11entityClass0aB006EntityG0Vvg_0();
}

uint64_t sub_1C0BE9CB4()
{
  return sub_1C106D1A4();
}

void sub_1C0BE9CC0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_1C0BE8F84(a1, v3, a3);
}

uint64_t sub_1C0BE9CCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + *(int *)(v2 + 36)) = v1;
  return v0;
}

uint64_t sub_1C0BE9CE0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 216);
}

void sub_1C0BE9CF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + *(int *)(v0 + 24)) = *(_DWORD *)(v2 - 104);
}

void sub_1C0BE9D08(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_1C0BE8F84(a1, a2, v2);
}

void sub_1C0BE9D14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 8 * v1) = v2;
}

uint64_t sub_1C0BE9D28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t (*v9)(uint64_t *, _QWORD);

  return v9(&a9, 0);
}

void sub_1C0BE9D34(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 168) = a1;
  *(_QWORD *)(v2 - 160) = v1;
}

uint64_t sub_1C0BE9D40()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 136);
}

void sub_1C0BE9D4C()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(v0 + 28)) = 0;
}

uint64_t sub_1C0BE9D60()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 104);
}

uint64_t sub_1C0BE9D6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 176))(a1, v1);
}

void sub_1C0BE9D78(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_1C07DBCA0(a1, v3, a3);
}

uint64_t sub_1C0BE9D80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + *(int *)(v2 + 36)) = a1;
  return sub_1C0884620();
}

uint64_t sub_1C0BE9D8C()
{
  return sub_1C106CFE8();
}

uint64_t sub_1C0BE9DA4()
{
  return swift_task_dealloc();
}

uint64_t sub_1C0BE9DAC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1C0BE9DB8()
{
  return _s24IntelligencePlatformCore19OrganizationMatcherV11entityClass0aB006EntityG0Vvg_0();
}

uint64_t sub_1C0BE9DC0()
{
  return sub_1C106CDC0();
}

uint64_t sub_1C0BE9DC8()
{
  return sub_1C106CDFC();
}

uint64_t sub_1C0BE9DD0()
{
  return sub_1C106CDE4();
}

uint64_t sub_1C0BE9DD8()
{
  return sub_1C106D108();
}

uint64_t sub_1C0BE9DEC()
{
  uint64_t v0;
  uint64_t v1;

  *(_DWORD *)(v1 - 184) = *(unsigned __int8 *)(v0 + 1876);
  return *(_QWORD *)(v0 + 1272);
}

uint64_t sub_1C0BE9E00()
{
  uint64_t v0;
  uint64_t v1;

  *(_DWORD *)(v1 - 120) = *(unsigned __int8 *)(v0 + 1876);
  return *(_QWORD *)(v0 + 1272);
}

uint64_t sub_1C0BE9E14(uint64_t a1)
{
  uint64_t v1;

  return sub_1C0ABA59C(a1, *(_QWORD *)(v1 - 136));
}

void sub_1C0BE9E20(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_1C07DBCA0(a1, a2, v2);
}

void sub_1C0BE9E28(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_1C07DBCA0(a1, a2, v2);
}

uint64_t sub_1C0BE9E30@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v2, *(_QWORD *)(v3 - 144));
}

uint64_t sub_1C0BE9E3C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 136) = a2;
  return a2(a1, v2);
}

uint64_t sub_1C0BE9E48()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0BE9E50()
{
  return sub_1C1070954();
}

void sub_1C0BE9E5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 112) = *(_QWORD *)(v1 + 768);
  *(_QWORD *)(v2 - 104) = *(_QWORD *)(v1 + 760);
  *(_QWORD *)(v2 - 96) = v0;
}

uint64_t sub_1C0BE9E70()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 208) = v0;
  return v0;
}

uint64_t sub_1C0BE9E84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + *(int *)(v2 + 36)) = v1;
  return v0;
}

uint64_t sub_1C0BE9E98()
{
  uint64_t v0;
  uint64_t v1;

  return v0 + *(int *)(v1 + 24);
}

uint64_t sub_1C0BE9EAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(v2 + a2) = a1;
  return sub_1C0884620();
}

void sub_1C0BE9EC0()
{
  uint64_t *v0;
  unint64_t *v1;

  sub_1C0BE9478(v1, v0);
}

uint64_t sub_1C0BE9ECC()
{
  uint64_t v0;
  uint64_t v1;

  return *(_QWORD *)(*(_QWORD *)(v1 + 48) + 16 * v0 + 8);
}

uint64_t sub_1C0BE9EE0()
{
  uint64_t v0;
  uint64_t v1;

  return v0 + *(int *)(v1 + 20);
}

uint64_t sub_1C0BE9EF4()
{
  uint64_t v0;
  uint64_t v1;

  return v1 + *(int *)(v0 + 20);
}

uint64_t sub_1C0BE9F08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + *(int *)(v1 + 36)) = a1;
  return sub_1C0884620();
}

uint64_t sub_1C0BE9F14()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 - 96))();
}

uint64_t sub_1C0BE9F1C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)(result + a2) = 1056964608;
  return result;
}

void sub_1C0BE9F28(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_1C07DBCA0(a1, a2, v2);
}

uint64_t sub_1C0BE9F30()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1C0BE9F3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + a1) = v1;
  return v2;
}

uint64_t sub_1C0BE9F50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = v1;
  *(_QWORD *)(v2 - 216) = v0;
  return result;
}

uint64_t sub_1C0BE9F64()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C0ABA59C(v0, v1);
}

void sub_1C0BE9F70()
{
  sub_1C0BE8FD4();
}

void sub_1C0BE9F78(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_1C07DBCA0(a1, a2, v2);
}

__n128 sub_1C0BE9F80(__n128 *a1)
{
  uint64_t v1;
  __n128 result;

  result = *(__n128 *)(v1 - 160);
  a1[1] = result;
  *(_QWORD *)(v1 - 208) = a1 + 2;
  return result;
}

uint64_t sub_1C0BE9F94()
{
  uint64_t v0;

  return v0;
}

void sub_1C0BE9FA0(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_1C08D6F78(a1, v1);
}

uint64_t sub_1C0BE9FA8()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_1C0BE9FB4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 - 128))();
}

uint64_t *sub_1C0BE9FBC()
{
  uint64_t *v0;

  return sub_1C079DFC4(v0);
}

uint64_t sub_1C0BE9FF4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1C0BEA00C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 224))(a1, v1);
}

void sub_1C0BEA018(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_1C08D6F78(a1, v1);
}

uint64_t sub_1C0BEA020(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1C0788DAC(a1, a2, (uint64_t *)(v2 - 96));
}

uint64_t sub_1C0BEA02C()
{
  uint64_t v0;

  return v0;
}

void sub_1C0BEA038()
{
  sub_1C07EC18C();
}

void sub_1C0BEA044()
{
  sub_1C07EC064();
}

void sub_1C0BEA050(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_1C07DBCA0(v3, *(_QWORD *)(v4 - 256), a3);
}

void sub_1C0BEA05C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v0 + *(int *)(v1 + 24)) = *(_DWORD *)(v2 - 112);
}

uint64_t LinkingPhase.source.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1C0A53D64(v1 + OBJC_IVAR____TtC24IntelligencePlatformCore12LinkingPhase_source, a1);
}

uint64_t sub_1C0BEA090()
{
  uint64_t v0;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore12LinkingPhase_source);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  sub_1C1070774();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  return v2;
}

void LinkingPhase.__allocating_init(stores:phaseSource:transformer:mapper:linker:fusion:shouldPatchNewlyConstructedGraph:)()
{
  sub_1C07A2910();
  swift_allocObject();
  LinkingPhase.init(stores:phaseSource:transformer:mapper:linker:fusion:shouldPatchNewlyConstructedGraph:)();
  sub_1C077C798();
}

void LinkingPhase.init(stores:phaseSource:transformer:mapper:linker:fusion:shouldPatchNewlyConstructedGraph:)()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 *v4;
  __int128 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1C07A2910();
  v7 = v6;
  sub_1C0838FBC(v8, v1 + OBJC_IVAR____TtC24IntelligencePlatformCore12LinkingPhase_source, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0838FBC(v7, v1 + OBJC_IVAR____TtC24IntelligencePlatformCore12LinkingPhase_stores, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C077DD60(v5, v1 + OBJC_IVAR____TtC24IntelligencePlatformCore12LinkingPhase_transformer);
  sub_1C077DD60(v4, v1 + OBJC_IVAR____TtC24IntelligencePlatformCore12LinkingPhase_mapper);
  sub_1C0838FBC(v3, v1 + OBJC_IVAR____TtC24IntelligencePlatformCore12LinkingPhase_linker, (uint64_t (*)(_QWORD))type metadata accessor for Linker);
  sub_1C0838FBC(v2, v1 + OBJC_IVAR____TtC24IntelligencePlatformCore12LinkingPhase_fusion, (uint64_t (*)(_QWORD))type metadata accessor for Fuser);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC24IntelligencePlatformCore12LinkingPhase_shouldPatchNewlyConstructedGraph) = v0;
  sub_1C077C798();
}

uint64_t sub_1C0BEA250()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 216) = v0;
  sub_1C077862C();
  return swift_task_switch();
}

uint64_t sub_1C0BEA26C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  void (*v5)(uint64_t);
  _QWORD *v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;

  v1 = v0[27] + OBJC_IVAR____TtC24IntelligencePlatformCore12LinkingPhase_transformer;
  sub_1C07D6D1C(v1, (uint64_t)(v0 + 2));
  v2 = v0[5];
  sub_1C07A9480(v0 + 2, v2);
  sub_1C07A557C();
  v3(v2);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)(v0 + 2));
  sub_1C07D6D1C(v1, (uint64_t)(v0 + 7));
  sub_1C07A9480(v0 + 7, v0[10]);
  sub_1C07D6D1C(v1, (uint64_t)(v0 + 12));
  v4 = v0[15];
  sub_1C07A00E4();
  sub_1C078B200();
  v5(v4);
  v6 = (_QWORD *)swift_task_alloc();
  v0[28] = v6;
  v7 = (_BYTE *)sub_1C0797584(v6, (uint64_t)sub_1C0BEA368);
  return sub_1C0786564(v7, v8, v9);
}

uint64_t sub_1C0BEA368()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 232) = v0;
  swift_task_dealloc();
  if (!v0)
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v2 + 96);
  sub_1C077862C();
  return swift_task_switch();
}

uint64_t sub_1C0BEA3D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t (*v6)(void);
  uint64_t v8;
  void (*v9)(uint64_t);
  _QWORD *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;

  v1 = v0[29];
  v2 = v0[27];
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)(v0 + 7));
  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtC24IntelligencePlatformCore12LinkingPhase_mapper);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC24IntelligencePlatformCore12LinkingPhase_mapper + 24);
  sub_1C0795240();
  sub_1C07A557C();
  v5(v4);
  if (v1)
  {
    v6 = (uint64_t (*)(void))sub_1C07759D4();
    return sub_1C078500C(v6);
  }
  else
  {
    sub_1C0795240();
    v8 = v3[3];
    sub_1C07A9480(v3, v8);
    sub_1C078B200();
    v9(v8);
    v10 = (_QWORD *)swift_task_alloc();
    v0[30] = v10;
    v11 = (_BYTE *)sub_1C0797584(v10, (uint64_t)sub_1C0BEA48C);
    return sub_1C0786564(v11, v12, v13);
  }
}

uint64_t sub_1C0BEA48C()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C077B0C8();
  sub_1C07B4220();
  *(_QWORD *)(v1 + 248) = v0;
  swift_task_dealloc();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0BEA4D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  _QWORD *v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  v1 = *(_QWORD *)(v0 + 248);
  sub_1C0CCBE64();
  if (v1)
  {
    v2 = (uint64_t (*)(void))sub_1C07759D4();
    return sub_1C0788080(v2);
  }
  else
  {
    type metadata accessor for Linker();
    v4 = (_QWORD *)sub_1C0796830();
    *(_QWORD *)(v0 + 256) = v4;
    v5 = sub_1C0793DAC(v4, (uint64_t)sub_1C0BEA544);
    return sub_1C079AD64(v5, v6);
  }
}

uint64_t sub_1C0BEA544()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C077B0C8();
  sub_1C07B4220();
  *(_QWORD *)(v2 + 264) = v0;
  swift_task_dealloc();
  if (v0)
    return sub_1C077CF28(*(uint64_t (**)(void))(v1 + 8));
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0BEA590()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  _QWORD *v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  v1 = *(_QWORD *)(v0 + 264);
  sub_1C0CCBE40();
  if (v1)
  {
    v2 = (uint64_t (*)(void))sub_1C07759D4();
    return sub_1C0788080(v2);
  }
  else
  {
    type metadata accessor for Fuser();
    v4 = (_QWORD *)sub_1C0796830();
    *(_QWORD *)(v0 + 272) = v4;
    v5 = sub_1C0793DAC(v4, (uint64_t)sub_1C0BEA5FC);
    return sub_1C079AD64(v5, v6);
  }
}

uint64_t sub_1C0BEA5FC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  sub_1C077B0C8();
  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    return sub_1C077CF28(*(uint64_t (**)(void))(v2 + 8));
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0BEA64C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 216);
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC24IntelligencePlatformCore12LinkingPhase_shouldPatchNewlyConstructedGraph) != 1)
    return sub_1C0787F88(*(uint64_t (**)(void))(v0 + 8));
  v2 = v1 + OBJC_IVAR____TtC24IntelligencePlatformCore12LinkingPhase_stores;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 280) = v3;
  *v3 = v0;
  v3[1] = sub_1C0BEA6EC;
  return sub_1C0905E20(v0 + 136, v2);
}

uint64_t sub_1C0BEA6EC()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C077B0C8();
  sub_1C07B4220();
  *(_QWORD *)(v1 + 288) = v0;
  swift_task_dealloc();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0BEA738()
{
  uint64_t v0;
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = (__int128 *)(v0 + 136);
  if (*(_QWORD *)(v0 + 160))
  {
    sub_1C077DD60(v1, v0 + 176);
    v2 = *(_QWORD *)(v0 + 200);
    v3 = *(_QWORD *)(v0 + 208);
    sub_1C07A00E4();
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 296) = v4;
    v5 = *(_QWORD *)(v3 + 8);
    *v4 = v0;
    v4[1] = sub_1C0BEA7C4;
    return sub_1C0CA5FE4(v2, v5);
  }
  else
  {
    sub_1C0906AE4((uint64_t)v1);
    return sub_1C0787F88(*(uint64_t (**)(void))(v0 + 8));
  }
}

uint64_t sub_1C0BEA7C4()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C077B0C8();
  sub_1C07B4220();
  *(_QWORD *)(v1 + 304) = v0;
  swift_task_dealloc();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0BEA810()
{
  uint64_t v0;

  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 176);
  return sub_1C077CF28(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0BEA83C()
{
  uint64_t v0;

  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 96);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 56);
  return sub_1C077CF28(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0BEA874()
{
  return sub_1C079E470();
}

uint64_t sub_1C0BEA87C()
{
  return sub_1C079E470();
}

uint64_t sub_1C0BEA884()
{
  uint64_t v0;

  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 176);
  return sub_1C077CF28(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0BEA8B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[3];
  uint64_t v5;
  uint64_t v6;

  sub_1C07D6D1C(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore12LinkingPhase_transformer, (uint64_t)v4);
  v1 = v5;
  v2 = v6;
  sub_1C07A9480(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
  return _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v4);
}

uint64_t LinkingPhase.deinit()
{
  uint64_t v0;

  sub_1C07B2018(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore12LinkingPhase_source, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C07B2018(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore12LinkingPhase_stores, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore12LinkingPhase_transformer);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore12LinkingPhase_mapper);
  sub_1C07B2018(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore12LinkingPhase_linker, (uint64_t (*)(_QWORD))type metadata accessor for Linker);
  sub_1C07B2018(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore12LinkingPhase_fusion, (uint64_t (*)(_QWORD))type metadata accessor for Fuser);
  return v0;
}

uint64_t LinkingPhase.__deallocating_deinit()
{
  LinkingPhase.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0BEA9D0@<X0>(uint64_t a1@<X8>)
{
  return LinkingPhase.source.getter(a1);
}

uint64_t sub_1C0BEA9F0()
{
  return sub_1C0BEA090();
}

uint64_t sub_1C0BEAA10()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C0801424;
  return sub_1C0BEA250();
}

uint64_t sub_1C0BEAA58()
{
  return sub_1C0BEA8B0();
}

uint64_t sub_1C0BEAA78(uint64_t a1)
{
  uint64_t v2;

  v2 = MEMORY[0x1C3BA8174](&protocol conformance descriptor for LinkingPhase, a1);
  return ConstructionPhase.description.getter(a1, v2);
}

void sub_1C0BEAAAC(uint64_t a1)
{
  uint64_t v2;

  sub_1C0BEAB4C(&qword_1EF641FE8, (uint64_t)&protocol conformance descriptor for LinkingPhase);
  *(_QWORD *)(a1 + 8) = v2;
}

uint64_t type metadata accessor for LinkingPhase()
{
  uint64_t result;

  result = qword_1EF642028;
  if (!qword_1EF642028)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1C0BEAB18(uint64_t a1)
{
  uint64_t v2;

  sub_1C0BEAB4C(&qword_1EF641FF8, (uint64_t)&protocol conformance descriptor for LinkingPhase);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0BEAB4C(unint64_t *a1, uint64_t a2)
{
  uint64_t v4;

  if (!*a1)
  {
    v4 = type metadata accessor for LinkingPhase();
    atomic_store(MEMORY[0x1C3BA8174](a2, v4), a1);
  }
  sub_1C0778534();
}

uint64_t sub_1C0BEAB88()
{
  return type metadata accessor for LinkingPhase();
}

uint64_t sub_1C0BEAB90()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  result = type metadata accessor for Source();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for PhaseStores();
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for Linker();
      if (v3 <= 0x3F)
      {
        result = type metadata accessor for Fuser();
        if (v4 <= 0x3F)
          return swift_updateClassMetadata2();
      }
    }
  }
  return result;
}

uint64_t method lookup function for LinkingPhase()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LinkingPhase.phaseName.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of LinkingPhase.__allocating_init(stores:phaseSource:transformer:mapper:linker:fusion:shouldPatchNewlyConstructedGraph:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of LinkingPhase.run()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 176) + *(_QWORD *)(*(_QWORD *)v0 + 176));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_1C0801424;
  return sub_1C077CF28(v4);
}

uint64_t dispatch thunk of LinkingPhase.clearAllData()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

void sub_1C0BEACDC()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  os_log_type_t v14;
  uint8_t *v15;
  NSObject *oslog;
  uint64_t v17;

  if (qword_1ED75E808 != -1)
    swift_once();
  v0 = sub_1C106F544();
  sub_1C079E000(v0, (uint64_t)qword_1ED78D7A0);
  v1 = sub_1C106F538();
  v2 = sub_1C10703A8();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)sub_1C0775854();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_1C0771000, v1, v2, "Link Connection Listener: Starting...", v3, 2u);
    sub_1C0776778();
  }

  v4 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v5 = sub_1C087601C(v4);
  if (v6)
  {
    v7 = v5;
    v8 = v6;
    sub_1C0BEB044();
    sub_1C07796D8();
    v9 = sub_1C0BEAF90();
    v10 = (void *)qword_1ED78C310;
    qword_1ED78C310 = (uint64_t)v9;

    sub_1C07796D8();
    v11 = sub_1C106F538();
    v12 = sub_1C10703A8();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)sub_1C0775854();
      v17 = sub_1C0775854();
      *(_DWORD *)v13 = 136315138;
      sub_1C07796D8();
      sub_1C0788DAC(v7, v8, &v17);
      sub_1C10705AC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C0771000, v11, v12, "Link Connection Listener: Started with bundle %s", v13, 0xCu);
      swift_arrayDestroy();
      sub_1C0776778();
    }

    swift_bridgeObjectRelease_n();
  }
  else
  {
    oslog = sub_1C106F538();
    v14 = sub_1C1070390();
    if (os_log_type_enabled(oslog, v14))
    {
      v15 = (uint8_t *)sub_1C0775854();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_1C0771000, oslog, v14, "Link Connection Listener: error getting bundle identifier", v15, 2u);
      sub_1C0776778();
    }

  }
}

id sub_1C0BEAF90()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v1 = (void *)sub_1C106FAF0();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithBundleIdentifier_, v1);

  return v2;
}

uint64_t LinkService.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t LinkService.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LinkService()
{
  return objc_opt_self();
}

uint64_t method lookup function for LinkService()
{
  return swift_lookUpClassMethod();
}

unint64_t sub_1C0BEB044()
{
  unint64_t result;

  result = qword_1ED741558;
  if (!qword_1ED741558)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED741558);
  }
  return result;
}

uint64_t sub_1C0BEB080@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  int v9;
  uint64_t v10;
  uint64_t result;
  char v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;

  v4 = sub_1C106E824();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v8, a1, v4, v6);
  v9 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v8, v4);
  if (v9 == *MEMORY[0x1E0D3D110])
  {
    v10 = 2;
LABEL_5:
    result = sub_1C079759C();
    v12 = 0;
    goto LABEL_14;
  }
  if (v9 == *MEMORY[0x1E0D3D100])
  {
    v10 = 1;
    goto LABEL_5;
  }
  if (v9 == *MEMORY[0x1E0D3D108])
  {
    result = sub_1C079759C();
  }
  else
  {
    if (qword_1ED762B20 != -1)
      swift_once();
    v13 = sub_1C106F544();
    sub_1C079E000(v13, (uint64_t)qword_1ED78D9F8);
    v14 = sub_1C106F538();
    v15 = sub_1C1070390();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_1C0771000, v14, v15, "LiveGlobalKnowledgeGraphClientSet: Unknown client", v16, 2u);
      MEMORY[0x1C3BA8270](v16, -1, -1);
    }

    v17 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v17(a1, v4);
    result = ((uint64_t (*)(char *, uint64_t))v17)(v8, v4);
  }
  v10 = 0;
  v12 = 1;
LABEL_14:
  *(_QWORD *)a2 = v10;
  *(_BYTE *)(a2 + 8) = v12;
  return result;
}

uint64_t LiveGlobalKnowledgeGraphClientSet.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

IntelligencePlatformCore::LiveGlobalKnowledgeGraphClientSet __swiftcall LiveGlobalKnowledgeGraphClientSet.init(rawValue:)(IntelligencePlatformCore::LiveGlobalKnowledgeGraphClientSet rawValue)
{
  IntelligencePlatformCore::LiveGlobalKnowledgeGraphClientSet *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

uint64_t LiveGlobalKnowledgeGraphClientSet.description.getter()
{
  sub_1C1070C0C();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  return 0x3A746E65696C433CLL;
}

uint64_t sub_1C0BEB2E0()
{
  sub_1C0BEB38C();
  return sub_1C106FE98();
}

uint64_t sub_1C0BEB33C()
{
  sub_1C0BEB38C();
  return sub_1C106FE5C();
}

unint64_t sub_1C0BEB38C()
{
  unint64_t result;

  result = qword_1EF642118;
  if (!qword_1EF642118)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for LiveGlobalKnowledgeGraphClientSet, &type metadata for LiveGlobalKnowledgeGraphClientSet);
    atomic_store(result, (unint64_t *)&qword_1EF642118);
  }
  return result;
}

unint64_t sub_1C0BEB3CC()
{
  unint64_t result;

  result = qword_1EF642120;
  if (!qword_1EF642120)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for LiveGlobalKnowledgeGraphClientSet, &type metadata for LiveGlobalKnowledgeGraphClientSet);
    atomic_store(result, (unint64_t *)&qword_1EF642120);
  }
  return result;
}

IntelligencePlatformCore::LiveGlobalKnowledgeGraphClientSet sub_1C0BEB408(Swift::Int *a1)
{
  return LiveGlobalKnowledgeGraphClientSet.init(rawValue:)(*a1);
}

unint64_t sub_1C0BEB414()
{
  unint64_t result;

  result = qword_1EF642128;
  if (!qword_1EF642128)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for LiveGlobalKnowledgeGraphClientSet, &type metadata for LiveGlobalKnowledgeGraphClientSet);
    atomic_store(result, (unint64_t *)&qword_1EF642128);
  }
  return result;
}

unint64_t sub_1C0BEB454()
{
  unint64_t result;

  result = qword_1EF642130;
  if (!qword_1EF642130)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for LiveGlobalKnowledgeGraphClientSet, &type metadata for LiveGlobalKnowledgeGraphClientSet);
    atomic_store(result, (unint64_t *)&qword_1EF642130);
  }
  return result;
}

uint64_t sub_1C0BEB490()
{
  sub_1C0BEB7DC();
  sub_1C0BEB38C();
  return sub_1C106C244();
}

uint64_t sub_1C0BEB4EC()
{
  sub_1C0BEB7A0();
  sub_1C0BEB38C();
  return sub_1C106C25C();
}

unint64_t sub_1C0BEB554()
{
  unint64_t result;

  result = qword_1EF642138;
  if (!qword_1EF642138)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for LiveGlobalKnowledgeGraphClientSet, &type metadata for LiveGlobalKnowledgeGraphClientSet);
    atomic_store(result, (unint64_t *)&qword_1EF642138);
  }
  return result;
}

unint64_t sub_1C0BEB598()
{
  unint64_t result;

  result = qword_1EF642140;
  if (!qword_1EF642140)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for LiveGlobalKnowledgeGraphClientSet, &type metadata for LiveGlobalKnowledgeGraphClientSet);
    atomic_store(result, (unint64_t *)&qword_1EF642140);
  }
  return result;
}

BOOL sub_1C0BEB5D4(uint64_t *a1)
{
  uint64_t *v1;

  return sub_1C08C8B64(*a1, *v1);
}

uint64_t sub_1C0BEB5E0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_1C08CACE8(*a1, *v2, a2);
}

uint64_t sub_1C0BEB5EC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_1C08C88EC(*a1, *v2, a2);
}

uint64_t sub_1C0BEB5F8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_1C0D3EA64(*a1, *v2, a2);
}

BOOL sub_1C0BEB604(_QWORD *a1, uint64_t *a2)
{
  return sub_1C0C697B0(a1, *a2);
}

uint64_t sub_1C0BEB60C(_QWORD *a1)
{
  return sub_1C0C69810(*a1);
}

uint64_t sub_1C0BEB614(_QWORD *a1)
{
  return sub_1C0C69894(*a1);
}

void sub_1C0BEB61C(uint64_t *a1)
{
  sub_1C09D732C(*a1);
}

void sub_1C0BEB624(uint64_t *a1)
{
  sub_1C09D7338(*a1);
}

void sub_1C0BEB62C(uint64_t *a1)
{
  sub_1C0D3EA80(*a1);
}

uint64_t sub_1C0BEB634@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_1C0D3EA8C(*a1, *v2, a2);
}

BOOL sub_1C0BEB640(uint64_t *a1)
{
  uint64_t *v1;

  return sub_1C08C8908(*a1, *v1);
}

BOOL sub_1C0BEB64C(uint64_t *a1)
{
  uint64_t *v1;

  return sub_1C0D3EAB0(*a1, *v1);
}

BOOL sub_1C0BEB658(uint64_t *a1)
{
  uint64_t *v1;

  return sub_1C08C892C(*a1, *v1);
}

BOOL sub_1C0BEB664()
{
  uint64_t *v0;

  return sub_1C0D3E9C4(*v0);
}

uint64_t sub_1C0BEB66C()
{
  return sub_1C1070654();
}

void sub_1C0BEB684(uint64_t *a1)
{
  sub_1C0D3EAD4(*a1);
}

IntelligencePlatformCore::LiveGlobalKnowledgeGraphClientSet sub_1C0BEB68C@<X0>(Swift::Int *a1@<X0>, uint64_t a2@<X8>)
{
  IntelligencePlatformCore::LiveGlobalKnowledgeGraphClientSet result;

  result.rawValue = LiveGlobalKnowledgeGraphClientSet.init(rawValue:)(*a1).rawValue;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_1C0BEB6B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = LiveGlobalKnowledgeGraphClientSet.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1C0BEB6D8()
{
  sub_1C0BEB764();
  return sub_1C106C208();
}

uint64_t sub_1C0BEB710()
{
  sub_1C0BEB764();
  return sub_1C106C214();
}

ValueMetadata *type metadata accessor for LiveGlobalKnowledgeGraphClientSet()
{
  return &type metadata for LiveGlobalKnowledgeGraphClientSet;
}

unint64_t sub_1C0BEB764()
{
  unint64_t result;

  result = qword_1EF642148;
  if (!qword_1EF642148)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for LiveGlobalKnowledgeGraphClientSet, &type metadata for LiveGlobalKnowledgeGraphClientSet);
    atomic_store(result, (unint64_t *)&qword_1EF642148);
  }
  return result;
}

unint64_t sub_1C0BEB7A0()
{
  unint64_t result;

  result = qword_1EF642150;
  if (!qword_1EF642150)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for LiveGlobalKnowledgeGraphClientSet, &type metadata for LiveGlobalKnowledgeGraphClientSet);
    atomic_store(result, (unint64_t *)&qword_1EF642150);
  }
  return result;
}

unint64_t sub_1C0BEB7DC()
{
  unint64_t result;

  result = qword_1EF642158;
  if (!qword_1EF642158)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for LiveGlobalKnowledgeGraphClientSet, &type metadata for LiveGlobalKnowledgeGraphClientSet);
    atomic_store(result, (unint64_t *)&qword_1EF642158);
  }
  return result;
}

uint64_t sub_1C0BEB818(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;

  v2 = sub_1C106B290();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v19 - v6;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))((char *)&v19 - v6, a1, v2, v5);
  v8 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v7, v2);
  if (v8 == *MEMORY[0x1E0D6DDD8] || v8 == *MEMORY[0x1E0D6DDD0])
  {
    sub_1C07A100C();
    swift_bridgeObjectRelease();
    sub_1C0799E80(0xD00000000000002BLL);
    sub_1C078F8BC();
    sub_1C106FC94();
    swift_bridgeObjectRelease();
    v9 = v19;
    v10 = v20;
    sub_1C0BEBC20();
    v11 = sub_1C0775810();
    *v12 = v9;
    v12[1] = v10;
    sub_1C0798E00(v11, (uint64_t)v12);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  if (v8 == *MEMORY[0x1E0D6DE30])
  {
    sub_1C106D1A4();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  if (v8 == *MEMORY[0x1E0D6DE40])
  {
    _s24IntelligencePlatformCore15LocationMatcherV11entityClass0aB006EntityG0Vvg_0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  if (v8 == *MEMORY[0x1E0D6DE10])
  {
    sub_1C106D108();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  if (v8 == *MEMORY[0x1E0D6DE58])
  {
    sub_1C106CE08();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  if (v8 == *MEMORY[0x1E0D6DE60])
  {
    sub_1C106CDF0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  if (v8 == *MEMORY[0x1E0D6DDE0])
  {
    sub_1C106CFAC();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  if (v8 == *MEMORY[0x1E0D6DE68])
  {
    sub_1C106D144();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  if (v8 == *MEMORY[0x1E0D6DDE8])
  {
    sub_1C106D000();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  if (v8 == *MEMORY[0x1E0D6DE50])
  {
    sub_1C106D120();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  if (v8 == *MEMORY[0x1E0D6DE18])
  {
    _s24IntelligencePlatformCore5StagePAAE11entityClass0aB006EntityF0Vvg_0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  if (v8 == *MEMORY[0x1E0D6DDF0])
  {
    sub_1C106D018();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  if (v8 == *MEMORY[0x1E0D6DDF8])
  {
    sub_1C106D048();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  if (v8 == *MEMORY[0x1E0D6DE28])
  {
    sub_1C106CFC4();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  if (v8 == *MEMORY[0x1E0D6DE48])
  {
    sub_1C106D114();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  if (v8 == *MEMORY[0x1E0D6DE38])
  {
    sub_1C106D12C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  if (v8 == *MEMORY[0x1E0D6DE00])
  {
    sub_1C106D078();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  if (v8 == *MEMORY[0x1E0D6DE20])
  {
    sub_1C106CE8C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  if (v8 == *MEMORY[0x1E0D6DE08])
  {
    sub_1C106CDC0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  sub_1C07A100C();
  swift_bridgeObjectRelease();
  sub_1C0799E80(0xD00000000000002BLL);
  sub_1C078F8BC();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  v14 = v19;
  v15 = v20;
  sub_1C0BEBC20();
  v16 = sub_1C0775810();
  *v17 = v14;
  v17[1] = v15;
  sub_1C0798E00(v16, (uint64_t)v17);
  v18 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v18(a1, v2);
  return ((uint64_t (*)(char *, uint64_t))v18)(v7, v2);
}

unint64_t sub_1C0BEBC20()
{
  unint64_t result;

  result = qword_1EF642160;
  if (!qword_1EF642160)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A70EC, &type metadata for LiveGlobalKnowledgeApiError);
    atomic_store(result, (unint64_t *)&qword_1EF642160);
  }
  return result;
}

uint64_t sub_1C0BEBC5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;

  v2 = sub_1C106B29C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v19 - v6;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))((char *)&v19 - v6, a1, v2, v5);
  v8 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v7, v2);
  if (v8 == *MEMORY[0x1E0D6DE80] || v8 == *MEMORY[0x1E0D6DE78])
  {
    sub_1C07A100C();
    swift_bridgeObjectRelease();
    sub_1C0799E80(0xD00000000000002BLL);
    sub_1C078F8BC();
    sub_1C106FC94();
    swift_bridgeObjectRelease();
    v9 = v19;
    v10 = v20;
    sub_1C0BEBC20();
    v11 = sub_1C0775810();
    *v12 = v9;
    v12[1] = v10;
    sub_1C07ADF60(v11, (uint64_t)v12);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  if (v8 == *MEMORY[0x1E0D6DE88])
  {
    sub_1C106E218();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  if (v8 == *MEMORY[0x1E0D6DEC8])
  {
    sub_1C106E248();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  if (v8 == *MEMORY[0x1E0D6DE90])
  {
    sub_1C106E374();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  if (v8 == *MEMORY[0x1E0D6DEB0])
  {
    sub_1C106E278();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  if (v8 == *MEMORY[0x1E0D6DEB8])
  {
    sub_1C106E3EC();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  if (v8 == *MEMORY[0x1E0D6DED0])
  {
    sub_1C106E29C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  if (v8 == *MEMORY[0x1E0D6DED8])
  {
    sub_1C106E2B4();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  if (v8 == *MEMORY[0x1E0D6DEE0])
  {
    sub_1C106E320();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  if (v8 == *MEMORY[0x1E0D6DEE8])
  {
    sub_1C106E1C4();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  if (v8 == *MEMORY[0x1E0D6DEF0])
  {
    sub_1C106DDE0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  if (v8 == *MEMORY[0x1E0D6DF10])
  {
    sub_1C106E3C8();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  if (v8 == *MEMORY[0x1E0D6DF18])
  {
    sub_1C106E2A8();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  if (v8 == *MEMORY[0x1E0D6DF20])
  {
    sub_1C106DE4C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  if (v8 == *MEMORY[0x1E0D6DEA8])
  {
    sub_1C106E3D4();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  if (v8 == *MEMORY[0x1E0D6DE98])
  {
    sub_1C106E284();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  if (v8 == *MEMORY[0x1E0D6DEA0])
  {
    sub_1C106E290();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  if (v8 == *MEMORY[0x1E0D6DEC0])
  {
    sub_1C106E404();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  if (v8 == *MEMORY[0x1E0D6DF08])
  {
    sub_1C106DDB0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  if (v8 == *MEMORY[0x1E0D6DF00])
  {
    sub_1C106DF3C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  if (v8 == *MEMORY[0x1E0D6DEF8])
  {
    sub_1C106E050();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  sub_1C07A100C();
  swift_bridgeObjectRelease();
  sub_1C0799E80(0xD00000000000002BLL);
  sub_1C078F8BC();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  v14 = v19;
  v15 = v20;
  sub_1C0BEBC20();
  v16 = sub_1C0775810();
  *v17 = v14;
  v17[1] = v15;
  sub_1C07ADF60(v16, (uint64_t)v17);
  v18 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v18(a1, v2);
  return ((uint64_t (*)(char *, uint64_t))v18)(v7, v2);
}

uint64_t sub_1C0BEC0A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  char v19;
  unsigned int *v20;
  uint64_t v21;

  v2 = v1;
  v4 = sub_1C106E41C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v21 - v10;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))((char *)&v21 - v10, v2, v4, v9);
  sub_1C106E218();
  sub_1C0BEC4A4();
  v12 = sub_1C0798E10();
  sub_1C079684C((uint64_t)v7);
  if ((v12 & 1) != 0)
  {
    sub_1C079684C((uint64_t)v11);
    v13 = *MEMORY[0x1E0D6DE88];
    v14 = sub_1C106B29C();
    v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104);
    v16 = a1;
    v17 = v13;
  }
  else
  {
    sub_1C106E374();
    sub_1C0798E10();
    sub_1C07A1020();
    sub_1C106E284();
    sub_1C0798E10();
    sub_1C07A1020();
    sub_1C106E290();
    sub_1C0798E10();
    sub_1C07A1020();
    sub_1C106E278();
    sub_1C0798E10();
    sub_1C07A1020();
    sub_1C106E3EC();
    sub_1C0798E10();
    sub_1C07A1020();
    sub_1C106E404();
    sub_1C0798E10();
    sub_1C07A1020();
    sub_1C106E248();
    sub_1C0798E10();
    sub_1C07A1020();
    sub_1C106E29C();
    sub_1C0798E10();
    sub_1C07A1020();
    sub_1C106E2B4();
    sub_1C0798E10();
    sub_1C07A1020();
    sub_1C106E320();
    sub_1C0798E10();
    sub_1C07A1020();
    sub_1C106E1C4();
    sub_1C0798E10();
    sub_1C07A1020();
    sub_1C106DDE0();
    sub_1C0798E10();
    sub_1C07A1020();
    sub_1C106E050();
    sub_1C0798E10();
    sub_1C07A1020();
    sub_1C106DDB0();
    sub_1C0798E10();
    sub_1C07A1020();
    sub_1C106E3C8();
    sub_1C0798E10();
    sub_1C07A1020();
    sub_1C106E2A8();
    sub_1C0798E10();
    sub_1C07A1020();
    sub_1C106DE4C();
    sub_1C0798E10();
    sub_1C07A1020();
    sub_1C106E3D4();
    v19 = sub_1C0798E10();
    sub_1C079684C((uint64_t)v7);
    sub_1C079684C((uint64_t)v11);
    v14 = sub_1C106B29C();
    v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104);
    if ((v19 & 1) != 0)
      v20 = (unsigned int *)MEMORY[0x1E0D6DEA8];
    else
      v20 = (unsigned int *)MEMORY[0x1E0D6DE78];
    v17 = *v20;
    v16 = a1;
  }
  return v15(v16, v17, v14);
}

unint64_t sub_1C0BEC4A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED75EA30;
  if (!qword_1ED75EA30)
  {
    v1 = sub_1C106E41C();
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0D3CC78], v1);
    atomic_store(result, (unint64_t *)&qword_1ED75EA30);
  }
  return result;
}

uint64_t sub_1C0BEC4E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[5];
  uint64_t v37;

  v1 = v0;
  v31 = sub_1C07ACF80(&qword_1ED754918);
  MEMORY[0x1E0C80A78](v31);
  v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v29 - v5;
  sub_1C0861BD0(v36);
  v32 = v36[0];
  v33 = v36[3];
  v7 = v36[4];
  v29 = v36[1];
  v30 = (unint64_t)(v36[2] + 64) >> 6;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v8 = MEMORY[0x1E0DEE9D8];
  if (!v7)
    goto LABEL_3;
LABEL_2:
  v9 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  v10 = v9 | (v33 << 6);
  while (1)
  {
    v14 = v32;
    v15 = *(_QWORD *)(v32 + 48);
    v16 = sub_1C106E800();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v6, v15 + *(_QWORD *)(*(_QWORD *)(v16 - 8) + 72) * v10, v16);
    v17 = v31;
    *(_QWORD *)&v6[*(int *)(v31 + 48)] = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v10);
    sub_1C078A67C((uint64_t)v6, (uint64_t)v3, &qword_1ED754918);
    v18 = *(_QWORD *)&v3[*(int *)(v17 + 48)];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v34 = sub_1C106E7E8();
    v35 = v19;
    sub_1C106FC94();
    sub_1C0BEC844(v18);
    v37 = v20;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C08485B4(&v37);
    if (v1)
      break;
    v1 = 0;
    swift_bridgeObjectRelease();
    MEMORY[0x1C3BA683C](v37, MEMORY[0x1E0DEA968]);
    sub_1C106FC94();
    swift_release();
    swift_bridgeObjectRelease();
    v21 = v34;
    v22 = v35;
    sub_1C0784B94((uint64_t)v3, &qword_1ED754918);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C07B7730();
      v8 = v26;
    }
    v23 = *(_QWORD *)(v8 + 16);
    if (v23 >= *(_QWORD *)(v8 + 24) >> 1)
    {
      sub_1C07B7730();
      v8 = v27;
    }
    *(_QWORD *)(v8 + 16) = v23 + 1;
    v24 = v8 + 16 * v23;
    *(_QWORD *)(v24 + 32) = v21;
    *(_QWORD *)(v24 + 40) = v22;
    if (v7)
      goto LABEL_2;
LABEL_3:
    v11 = v33 + 1;
    if (__OFADD__(v33, 1))
    {
      __break(1u);
      break;
    }
    if (v11 >= v30)
      goto LABEL_27;
    v12 = *(_QWORD *)(v29 + 8 * v11);
    if (!v12)
    {
      v13 = v33 + 2;
      if (v33 + 2 >= v30)
        goto LABEL_27;
      v12 = *(_QWORD *)(v29 + 8 * v13);
      if (v12)
        goto LABEL_12;
      v13 = v33 + 3;
      if (v33 + 3 >= v30)
        goto LABEL_27;
      v12 = *(_QWORD *)(v29 + 8 * v13);
      if (v12)
        goto LABEL_12;
      v13 = v33 + 4;
      if (v33 + 4 >= v30)
        goto LABEL_27;
      v12 = *(_QWORD *)(v29 + 8 * v13);
      if (v12)
      {
LABEL_12:
        v11 = v13;
      }
      else
      {
        v11 = v33 + 5;
        if (v33 + 5 >= v30)
          goto LABEL_27;
        v12 = *(_QWORD *)(v29 + 8 * v11);
        if (!v12)
        {
          v25 = v33 + 6;
          while (v25 < v30)
          {
            v12 = *(_QWORD *)(v29 + 8 * v25++);
            if (v12)
            {
              v11 = v25 - 1;
              goto LABEL_13;
            }
          }
LABEL_27:
          swift_release();
          return v8;
        }
      }
    }
LABEL_13:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v11 << 6);
    v33 = v11;
  }
  result = swift_release();
  __break(1u);
  return result;
}

void sub_1C0BEC844(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t i;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  v31 = sub_1C106E41C();
  v2 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v30 = (char *)&v27 - v6;
  v7 = *(_QWORD *)(a1 + 56);
  v28 = a1 + 56;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v7;
  v29 = (unint64_t)(v8 + 63) >> 6;
  v32 = a1;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v11 = 0;
  v12 = MEMORY[0x1E0DEE9D8];
  if (!v10)
    goto LABEL_5;
LABEL_4:
  v13 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v13 | (v11 << 6); ; i = __clz(__rbit64(v16)) + (v11 << 6))
  {
    v19 = v30;
    v18 = v31;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v30, *(_QWORD *)(v32 + 48) + *(_QWORD *)(v2 + 72) * i, v31);
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v19, v18);
    v20 = sub_1C106E1E8();
    v22 = v21;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v18);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C07B7730();
      v12 = v25;
    }
    v23 = *(_QWORD *)(v12 + 16);
    if (v23 >= *(_QWORD *)(v12 + 24) >> 1)
    {
      sub_1C07B7730();
      v12 = v26;
    }
    *(_QWORD *)(v12 + 16) = v23 + 1;
    v24 = v12 + 16 * v23;
    *(_QWORD *)(v24 + 32) = v20;
    *(_QWORD *)(v24 + 40) = v22;
    if (v10)
      goto LABEL_4;
LABEL_5:
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v15 >= v29)
      goto LABEL_27;
    v16 = *(_QWORD *)(v28 + 8 * v15);
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= v29)
        goto LABEL_27;
      v16 = *(_QWORD *)(v28 + 8 * v11);
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= v29)
          goto LABEL_27;
        v16 = *(_QWORD *)(v28 + 8 * v11);
        if (!v16)
        {
          v11 = v15 + 3;
          if (v15 + 3 >= v29)
            goto LABEL_27;
          v16 = *(_QWORD *)(v28 + 8 * v11);
          if (!v16)
            break;
        }
      }
    }
LABEL_20:
    v10 = (v16 - 1) & v16;
  }
  v17 = v15 + 4;
  if (v17 >= v29)
  {
LABEL_27:
    swift_release();
    return;
  }
  v16 = *(_QWORD *)(v28 + 8 * v17);
  if (v16)
  {
    v11 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= v29)
      goto LABEL_27;
    v16 = *(_QWORD *)(v28 + 8 * v11);
    ++v17;
    if (v16)
      goto LABEL_20;
  }
LABEL_29:
  __break(1u);
}

void sub_1C0BECB04(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(unint64_t, char *, uint64_t);
  uint64_t v32;
  void (*v33)(uint64_t *, _QWORD);
  uint64_t v34;
  char *v35;
  NSObject *v36;
  os_log_type_t v37;
  _BOOL4 v38;
  uint8_t *v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int64_t v60;
  unint64_t v61;
  os_log_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  int64_t v80;
  unint64_t v81;
  unint64_t v82;
  int64_t v83;
  unint64_t v84;
  int64_t v85;
  uint64_t v86;
  void (*v87)(char *, char *, uint64_t);
  char *v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  void (*v96)(uint64_t *, _QWORD);
  uint64_t *v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD v103[2];
  uint8_t *v104;
  uint64_t v105;
  os_log_t v106;
  char *v107;
  uint64_t v108;
  int64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  char *v115;
  char *v116;
  char *v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void (*v128)(unint64_t, char *, uint64_t);
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  int64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;

  v2 = sub_1C07ACF80(&qword_1ED75D8A0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v103 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = sub_1C106B29C();
  v130 = *(_QWORD *)(v135 - 8);
  MEMORY[0x1E0C80A78](v135);
  v129 = (char *)v103 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v115 = (char *)v103 - v7;
  v8 = sub_1C106E41C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v103 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v103 - v13;
  v111 = sub_1C106B374();
  v110 = *(_QWORD *)(v111 - 8);
  MEMORY[0x1E0C80A78](v111);
  v120 = (char *)v103 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = sub_1C106E800();
  v127 = *(_QWORD *)(v114 - 8);
  MEMORY[0x1E0C80A78](v114);
  v122 = (char *)v103 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1C07ACF80(&qword_1ED7548E8);
  MEMORY[0x1E0C80A78](v17);
  v121 = (uint64_t)v103 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = sub_1C106B284();
  v119 = *(_QWORD *)(v126 - 8);
  MEMORY[0x1E0C80A78](v126);
  v113 = (char *)v103 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v118 = (char *)v103 - v21;
  v22 = sub_1C07ACF80(&qword_1ED754920);
  MEMORY[0x1E0C80A78](v22);
  v124 = (char *)v103 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v123 = (uint64_t)v103 - v25;
  v109 = sub_1C106EBE4();
  v108 = *(_QWORD *)(v109 - 8);
  MEMORY[0x1E0C80A78](v109);
  v107 = (char *)v103 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = sub_1C106E7AC();
  v27 = *(_QWORD *)(v133 - 8);
  MEMORY[0x1E0C80A78](v133);
  v117 = (char *)v103 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_1C106F544();
  v131 = *(_QWORD *)(v29 - 8);
  v132 = v29;
  MEMORY[0x1E0C80A78](v29);
  v31 = (void (*)(unint64_t, char *, uint64_t))((char *)v103 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  v32 = sub_1C106B074();
  MEMORY[0x1E0C80A78](v32);
  sub_1C106B308();
  sub_1C106B068();
  sub_1C106B2FC();
  v33 = (void (*)(uint64_t *, _QWORD))sub_1C106B2F0();
  sub_1C106B05C();
  v33(&v137, 0);
  v34 = a1;
  v35 = v117;
  v112 = v34;
  sub_1C106B2E4();
  sub_1C106F16C();
  v125 = v27;
  (*(void (**)(char *, int64_t, uint64_t))(v27 + 16))(v35, v134, v133);
  v128 = v31;
  v36 = sub_1C106F538();
  v37 = sub_1C1070384();
  v38 = os_log_type_enabled(v36, v37);
  v116 = v14;
  if (v38)
  {
    v106 = v36;
    v39 = (uint8_t *)swift_slowAlloc();
    v105 = swift_slowAlloc();
    v137 = v105;
    v104 = v39;
    *(_DWORD *)v39 = 136315138;
    v103[1] = v39 + 4;
    v40 = v107;
    sub_1C106E794();
    v41 = sub_1C106EBD8();
    v43 = v42;
    (*(void (**)(char *, int64_t))(v108 + 8))(v40, v109);
    v136 = sub_1C0788DAC(v41, v43, &v137);
    sub_1C10705AC();
    v14 = v116;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v125 + 8))(v35, v133);
    v36 = v106;
    v44 = v104;
    _os_log_impl(&dword_1C0771000, v106, v37, "LiveGlobalKnowledge.IdSearchRequest: client bundle id: %s", v104, 0xCu);
    v45 = v105;
    swift_arrayDestroy();
    MEMORY[0x1C3BA8270](v45, -1, -1);
    MEMORY[0x1C3BA8270](v44, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v125 + 8))(v35, v133);
  }

  (*(void (**)(void (*)(unint64_t, char *, uint64_t), uint64_t))(v131 + 8))(v128, v132);
  v46 = sub_1C106E788();
  v47 = 0;
  v48 = *(_QWORD *)(v46 + 64);
  v108 = v46 + 64;
  v49 = 1 << *(_BYTE *)(v46 + 32);
  if (v49 < 64)
    v50 = ~(-1 << v49);
  else
    v50 = -1;
  v51 = v50 & v48;
  v109 = (unint64_t)(v49 + 63) >> 6;
  v106 = (os_log_t)(v109 - 1);
  v117 = (char *)v46;
  v107 = (char *)(v46 + 104);
  v52 = v114;
  v53 = v127;
  v54 = (uint64_t)v124;
  while (1)
  {
LABEL_8:
    if (v51)
    {
      v131 = (v51 - 1) & v51;
      v132 = v47;
      v55 = __clz(__rbit64(v51)) | (v47 << 6);
      goto LABEL_10;
    }
    v60 = v47 + 1;
    if (__OFADD__(v47, 1))
    {
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
    if (v60 >= v109)
    {
      v57 = v52;
      v62 = (os_log_t)v47;
    }
    else
    {
      v61 = *(_QWORD *)(v108 + 8 * v60);
      if (v61)
        goto LABEL_14;
      v57 = v52;
      v62 = (os_log_t)(v47 + 1);
      if (v47 + 2 < v109)
      {
        v61 = *(_QWORD *)(v108 + 8 * (v47 + 2));
        if (v61)
        {
          v60 = v47 + 2;
          goto LABEL_55;
        }
        v62 = (os_log_t)(v47 + 2);
        if (v47 + 3 < v109)
        {
          v61 = *(_QWORD *)(v108 + 8 * (v47 + 3));
          if (v61)
          {
            v60 = v47 + 3;
LABEL_55:
            v53 = v127;
LABEL_14:
            v131 = (v61 - 1) & v61;
            v132 = v60;
            v55 = __clz(__rbit64(v61)) + (v60 << 6);
LABEL_10:
            v56 = v117;
            v57 = v52;
            (*(void (**)(uint64_t, unint64_t))(v53 + 16))(v54, *((_QWORD *)v117 + 6) + *(_QWORD *)(v53 + 72) * v55);
            v58 = *((_QWORD *)v56 + 7);
            v59 = sub_1C07ACF80(&qword_1ED754918);
            *(_QWORD *)(v54 + *(int *)(v59 + 48)) = *(_QWORD *)(v58 + 8 * v55);
            sub_1C07B2D8C(v54, 0, 1, v59);
            _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
            goto LABEL_17;
          }
          v60 = v47 + 4;
          v62 = (os_log_t)(v47 + 3);
          if (v47 + 4 < v109)
          {
            v61 = *(_QWORD *)(v108 + 8 * v60);
            v53 = v127;
            if (v61)
              goto LABEL_14;
            while (v47 + 5 < v109)
            {
              v61 = *(_QWORD *)&v107[8 * v47++];
              if (v61)
              {
                v60 = v47 + 4;
                goto LABEL_14;
              }
            }
            v62 = v106;
          }
        }
      }
    }
    v63 = sub_1C07ACF80(&qword_1ED754918);
    sub_1C07B2D8C(v54, 1, 1, v63);
    v131 = 0;
    v132 = (uint64_t)v62;
LABEL_17:
    v64 = v54;
    v65 = v123;
    sub_1C078A67C(v64, v123, &qword_1ED754920);
    v66 = sub_1C07ACF80(&qword_1ED754918);
    if (sub_1C07B2D80(v65, 1, v66) == 1)
    {
      swift_release();
      return;
    }
    v67 = v65;
    v68 = *(_QWORD *)(v65 + *(int *)(v66 + 48));
    v69 = v127;
    v70 = (uint64_t)v122;
    (*(void (**)(char *, uint64_t, uint64_t))(v127 + 32))(v122, v67, v57);
    v71 = v121;
    sub_1C0BF035C(v70, v121);
    v72 = v126;
    if (sub_1C07B2D80(v71, 1, v126) != 1)
      break;
    swift_bridgeObjectRelease();
    sub_1C0784B94(v71, &qword_1ED7548E8);
    v54 = (uint64_t)v124;
    v51 = v131;
    v47 = v132;
    v52 = v57;
    v53 = v69;
  }
  v73 = v71;
  v74 = v119;
  v75 = v118;
  (*(void (**)(char *, uint64_t, uint64_t))(v119 + 32))(v118, v73, v72);
  sub_1C106B368();
  (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v113, v75, v72);
  sub_1C106B35C();
  v76 = v68 + 56;
  v77 = 1 << *(_BYTE *)(v68 + 32);
  if (v77 < 64)
    v78 = ~(-1 << v77);
  else
    v78 = -1;
  v79 = v78 & *(_QWORD *)(v68 + 56);
  v134 = (unint64_t)(v77 + 63) >> 6;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v80 = 0;
  v133 = MEMORY[0x1E0DEE9D8];
  v125 = v68 + 56;
  while (v79)
  {
    v81 = __clz(__rbit64(v79));
    v79 &= v79 - 1;
    v82 = v81 | (v80 << 6);
LABEL_44:
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v14, *(_QWORD *)(v68 + 48) + *(_QWORD *)(v9 + 72) * v82, v8);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v14, v8);
    sub_1C0BEC0A4((uint64_t)v4);
    v86 = v135;
    sub_1C07B2D8C((uint64_t)v4, 0, 1, v135);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    if (sub_1C07B2D80((uint64_t)v4, 1, v86) == 1)
    {
      sub_1C0784B94((uint64_t)v4, &qword_1ED75D8A0);
    }
    else
    {
      v87 = *(void (**)(char *, char *, uint64_t))(v130 + 32);
      v88 = v115;
      v89 = v135;
      v87(v115, v4, v135);
      v128 = (void (*)(unint64_t, char *, uint64_t))v87;
      v87(v129, v88, v89);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C07EBFA8();
        v133 = v93;
      }
      v90 = *(_QWORD *)(v133 + 16);
      v91 = v90 + 1;
      v14 = v116;
      v76 = v125;
      if (v90 >= *(_QWORD *)(v133 + 24) >> 1)
      {
        v105 = v90 + 1;
        sub_1C07EBFA8();
        v91 = v105;
        v133 = v94;
      }
      v92 = v133;
      *(_QWORD *)(v133 + 16) = v91;
      v128(v92+ ((*(unsigned __int8 *)(v130 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80))+ *(_QWORD *)(v130 + 72) * v90, v129, v135);
    }
  }
  v83 = v80 + 1;
  if (__OFADD__(v80, 1))
  {
    __break(1u);
    goto LABEL_67;
  }
  if (v83 >= v134)
    goto LABEL_51;
  v84 = *(_QWORD *)(v76 + 8 * v83);
  ++v80;
  if (v84)
    goto LABEL_43;
  v80 = v83 + 1;
  if (v83 + 1 >= v134)
    goto LABEL_51;
  v84 = *(_QWORD *)(v76 + 8 * v80);
  if (v84)
    goto LABEL_43;
  v80 = v83 + 2;
  if (v83 + 2 >= v134)
    goto LABEL_51;
  v84 = *(_QWORD *)(v76 + 8 * v80);
  if (v84)
    goto LABEL_43;
  v80 = v83 + 3;
  if (v83 + 3 >= v134)
    goto LABEL_51;
  v84 = *(_QWORD *)(v76 + 8 * v80);
  if (v84)
    goto LABEL_43;
  v80 = v83 + 4;
  if (v83 + 4 >= v134)
    goto LABEL_51;
  v84 = *(_QWORD *)(v76 + 8 * v80);
  if (v84)
  {
LABEL_43:
    v79 = (v84 - 1) & v84;
    v82 = __clz(__rbit64(v84)) + (v80 << 6);
    goto LABEL_44;
  }
  v85 = v83 + 5;
  if (v85 >= v134)
  {
LABEL_51:
    swift_release();
    swift_bridgeObjectRelease();
    v95 = v120;
    sub_1C106B2E4();
    v96 = (void (*)(uint64_t *, _QWORD))sub_1C106B2D8();
    v98 = v97;
    sub_1C07E9FE8();
    v99 = *(_QWORD *)(*v98 + 16);
    sub_1C07EA6C0();
    v100 = *v98;
    *(_QWORD *)(v100 + 16) = v99 + 1;
    v101 = v110;
    v102 = v111;
    (*(void (**)(unint64_t, char *, uint64_t))(v110 + 16))(v100+ ((*(unsigned __int8 *)(v110 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80))+ *(_QWORD *)(v110 + 72) * v99, v95, v111);
    v96(&v137, 0);
    (*(void (**)(char *, uint64_t))(v101 + 8))(v95, v102);
    (*(void (**)(char *, uint64_t))(v119 + 8))(v118, v126);
    v52 = v114;
    v53 = v127;
    v54 = (uint64_t)v124;
    v51 = v131;
    v47 = v132;
    goto LABEL_8;
  }
  v84 = *(_QWORD *)(v76 + 8 * v85);
  if (v84)
  {
    v80 = v85;
    goto LABEL_43;
  }
  while (1)
  {
    v80 = v85 + 1;
    if (__OFADD__(v85, 1))
      break;
    if (v80 >= v134)
      goto LABEL_51;
    v84 = *(_QWORD *)(v76 + 8 * v80);
    ++v85;
    if (v84)
      goto LABEL_43;
  }
LABEL_68:
  __break(1u);
}

uint64_t static LiveGlobalKnowledgeApi.defaultLocale.getter()
{
  return 0x53555F6E65;
}

uint64_t sub_1C0BED834(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  NSObject *v24;
  char v25;
  void *v26;
  id v27;
  uint64_t v29;
  uint64_t v30;
  NSObject *v32;
  uint64_t v33;
  void *v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;

  v37 = sub_1C07ACF80(&qword_1ED754B28);
  v38 = *(_QWORD *)(v37 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v4);
  sub_1C077AE40();
  v33 = v5;
  sub_1C077CF58();
  v40 = sub_1C106F808();
  v6 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  sub_1C0778564();
  v9 = (_QWORD *)(v8 - v7);
  v10 = sub_1C1070420();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  sub_1C0778564();
  v14 = v13 - v12;
  sub_1C106F838();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v15);
  sub_1C077F1C8();
  sub_1C10703FC();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v16);
  sub_1C0779614();
  v32 = dispatch_group_create();
  sub_1C08D8780();
  sub_1C10703F0();
  sub_1C106F82C();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v11 + 104))(v14, *MEMORY[0x1E0DEF8D0], v10);
  v17 = sub_1C1070444();
  v30 = sub_1C106B344();
  v18 = swift_allocBox();
  v29 = v19;
  sub_1C106B338();
  v20 = sub_1C0778598();
  *(_BYTE *)(v20 + 16) = 0;
  v21 = sub_1C0778598();
  *(_QWORD *)(v21 + 16) = 0;
  dispatch_group_enter(v32);
  *v9 = a3;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v9, *MEMORY[0x1E0DEF490], v40);
  v34 = (void *)v17;
  sub_1C106B3BC();
  v22 = (_QWORD *)sub_1C0778598();
  v22[2] = v20;
  v22[3] = a3;
  v22[4] = v21;
  v22[5] = v32;
  v23 = sub_1C0778598();
  *(_QWORD *)(v23 + 16) = v18;
  *(_QWORD *)(v23 + 24) = v21;
  sub_1C07BB218(&qword_1ED75D8D0, &qword_1ED754B28);
  swift_retain_n();
  v36 = v20;
  swift_retain();
  v24 = v32;
  swift_retain();
  sub_1C106F790();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v33, v37);
  sub_1C106F6E8();
  sub_1C10703E4();
  v25 = a4;
  sub_1C0E60D50();
  swift_release();
  sub_1C0775864();
  v26 = *(void **)(v21 + 16);
  if (v26)
  {
    v27 = v26;
    swift_willThrow();

    swift_release();
    sub_1C079AD74();
  }
  else
  {
    sub_1C079AD74();

    swift_release();
    sub_1C0775864();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(a1, v29);
    sub_1C0775864();
    v25 = *(_BYTE *)(v36 + 16);
  }
  swift_release();
  swift_release();
  swift_release();
  return v25 & 1;
}

void sub_1C0BEDC78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, NSObject *a5)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  char v34;
  void (*v35)(char *, uint64_t);
  _BYTE *v36;
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  _QWORD *v45;
  void **v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  void (*v53)(char *, char *, uint64_t);
  char *v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  _QWORD *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  char *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  dispatch_group_t v70;
  uint64_t v71;
  uint64_t v72;

  v70 = a5;
  v62 = a2;
  v63 = a4;
  v61 = a3;
  v6 = sub_1C106F544();
  v68 = *(_QWORD *)(v6 - 8);
  v69 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v67 = (uint64_t *)((char *)&v61 - v10);
  MEMORY[0x1E0C80A78](v11);
  v66 = (char *)&v61 - v12;
  v13 = sub_1C106B3D4();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v65 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v64 = (char *)&v61 - v17;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v61 - v19;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v61 - v22;
  v24 = sub_1C07ACF80(&qword_1ED75D8D8);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v61 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v61 - v28;
  sub_1C078A8F8(a1, (uint64_t)&v61 - v28, &qword_1ED75D8D8);
  if (sub_1C07B2D80((uint64_t)v29, 1, v13) == 1)
  {
    sub_1C106F16C();
    sub_1C078A8F8(a1, (uint64_t)v26, &qword_1ED75D8D8);
    v30 = sub_1C106F538();
    v31 = sub_1C1070384();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v32 = 134217984;
      sub_1C07803F8(&qword_1EF642188, (void (*)(uint64_t))MEMORY[0x1E0D708E8]);
      v33 = sub_1C106F6A0();
      sub_1C0784B94((uint64_t)v26, &qword_1ED75D8D8);
      v72 = v33;
      sub_1C10705AC();
      _os_log_impl(&dword_1C0771000, v30, v31, "LiveGlobalKnowledge IDSearch completed: %ld", v32, 0xCu);
      MEMORY[0x1C3BA8270](v32, -1, -1);
    }
    else
    {
      sub_1C0784B94((uint64_t)v26, &qword_1ED75D8D8);
    }

    (*(void (**)(char *, uint64_t))(v68 + 8))(v8, v69);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v23, v29, v13);
    (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v20, *MEMORY[0x1E0D708E0], v13);
    v34 = sub_1C106B3C8();
    v35 = *(void (**)(char *, uint64_t))(v14 + 8);
    v35(v20, v13);
    if ((v34 & 1) != 0)
    {
      v36 = (_BYTE *)(v62 + 16);
      swift_beginAccess();
      *v36 = 1;
      sub_1C106F16C();
      v37 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
      v38 = v64;
      v37(v64, v23, v13);
      v39 = sub_1C106F538();
      v40 = sub_1C1070390();
      if (os_log_type_enabled(v39, v40))
      {
        v41 = swift_slowAlloc();
        v67 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v41 = 134218242;
        v71 = v61;
        sub_1C10705AC();
        *(_WORD *)(v41 + 12) = 2112;
        v65 = (char *)(v41 + 14);
        sub_1C07803F8(&qword_1ED7548F0, (void (*)(uint64_t))MEMORY[0x1E0D708E8]);
        swift_allocError();
        v42 = v23;
        v37(v43, v38, v13);
        v44 = _swift_stdlib_bridgeErrorToNSError();
        v71 = v44;
        sub_1C10705AC();
        v45 = v67;
        *v67 = v44;
        v23 = v42;
        v35(v38, v13);
        _os_log_impl(&dword_1C0771000, v39, v40, "LiveGlobalKnowledge IDSearch timed out at %ldms: %@", (uint8_t *)v41, 0x16u);
        sub_1C07ACF80(&qword_1ED7614A0);
        swift_arrayDestroy();
        MEMORY[0x1C3BA8270](v45, -1, -1);
        MEMORY[0x1C3BA8270](v41, -1, -1);

      }
      else
      {

        v35(v38, v13);
      }
      (*(void (**)(char *, uint64_t))(v68 + 8))(v66, v69);
    }
    else
    {
      v46 = (void **)(v63 + 16);
      sub_1C07803F8(&qword_1ED7548F0, (void (*)(uint64_t))MEMORY[0x1E0D708E8]);
      v47 = sub_1C1070D74();
      v49 = v48;
      sub_1C0BEBC20();
      v50 = swift_allocError();
      *(_QWORD *)v51 = v47;
      *(_QWORD *)(v51 + 8) = v49;
      *(_BYTE *)(v51 + 16) = 4;
      swift_beginAccess();
      v52 = *v46;
      *v46 = (void *)v50;

      sub_1C106F16C();
      v53 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
      v54 = v65;
      v53(v65, v23, v13);
      v55 = sub_1C106F538();
      v56 = sub_1C1070390();
      if (os_log_type_enabled(v55, v56))
      {
        v66 = v23;
        v57 = (uint8_t *)swift_slowAlloc();
        v58 = (_QWORD *)swift_slowAlloc();
        v64 = (char *)v35;
        *(_DWORD *)v57 = 138412290;
        swift_allocError();
        v53(v59, v54, v13);
        v60 = _swift_stdlib_bridgeErrorToNSError();
        v71 = v60;
        v23 = v66;
        sub_1C10705AC();
        *v58 = v60;
        v35 = (void (*)(char *, uint64_t))v64;
        ((void (*)(char *, uint64_t))v64)(v54, v13);
        _os_log_impl(&dword_1C0771000, v55, v56, "LiveGlobalKnowledge IDSearch error: %@", v57, 0xCu);
        sub_1C07ACF80(&qword_1ED7614A0);
        swift_arrayDestroy();
        MEMORY[0x1C3BA8270](v58, -1, -1);
        MEMORY[0x1C3BA8270](v57, -1, -1);

      }
      else
      {

        v35(v54, v13);
      }
      (*(void (**)(_QWORD *, uint64_t))(v68 + 8))(v67, v69);
    }
    v35(v23, v13);
  }
  dispatch_group_leave(v70);
}

uint64_t sub_1C0BEE3BC(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  char *v28;
  void (*v29)(char *, char *, uint64_t);
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  _QWORD *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v43 = a3;
  v45 = a1;
  v3 = sub_1C106F544();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v44 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C106B3D4();
  v47 = *(_QWORD *)(v6 - 8);
  v48 = v6;
  MEMORY[0x1E0C80A78](v6);
  v46 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v41 - v9;
  v11 = sub_1C106B344();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1C07ACF80(&qword_1EF642180);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = swift_projectBox();
  sub_1C078A8F8(v45, (uint64_t)v17, &qword_1EF642180);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v45 = v4;
    v42 = v3;
    v19 = v43;
    v21 = v47;
    v20 = v48;
    (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v10, v17, v48);
    sub_1C07803F8(&qword_1ED7548F0, (void (*)(uint64_t))MEMORY[0x1E0D708E8]);
    v22 = sub_1C1070D74();
    v24 = v23;
    sub_1C0BEBC20();
    v25 = swift_allocError();
    *(_QWORD *)v26 = v22;
    *(_QWORD *)(v26 + 8) = v24;
    *(_BYTE *)(v26 + 16) = 4;
    swift_beginAccess();
    v27 = (void *)*((_QWORD *)v19 + 2);
    *((_QWORD *)v19 + 2) = v25;

    v28 = v44;
    sub_1C106F16C();
    v29 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
    v29(v46, v10, v20);
    v30 = sub_1C106F538();
    v31 = sub_1C1070390();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      v33 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v32 = 138412290;
      v43 = v10;
      v34 = v48;
      swift_allocError();
      v35 = v46;
      v29(v36, v46, v34);
      v37 = _swift_stdlib_bridgeErrorToNSError();
      v49 = v37;
      v28 = v44;
      sub_1C10705AC();
      *v33 = v37;
      v38 = *(void (**)(char *, uint64_t))(v47 + 8);
      v39 = v34;
      v10 = v43;
      v38(v35, v39);
      _os_log_impl(&dword_1C0771000, v30, v31, "LiveGlobalKnowledge IDSearch error: %@", v32, 0xCu);
      sub_1C07ACF80(&qword_1ED7614A0);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v33, -1, -1);
      MEMORY[0x1C3BA8270](v32, -1, -1);

    }
    else
    {

      v38 = *(void (**)(char *, uint64_t))(v47 + 8);
      v38(v46, v48);
    }
    (*(void (**)(char *, uint64_t))(v45 + 8))(v28, v42);
    return ((uint64_t (*)(char *, uint64_t))v38)(v10, v48);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v17, v11);
    swift_beginAccess();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 40))(v18, v14, v11);
  }
}

uint64_t sub_1C0BEE7C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  sub_1C106E788();
  v0 = sub_1C0BEC4E4();
  swift_bridgeObjectRelease();
  v3 = v0;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C08485B4(&v3);
  swift_bridgeObjectRelease();
  sub_1C07ACF80(&qword_1ED762B70);
  sub_1C07BB218(&qword_1ED762430, &qword_1ED762B70);
  v1 = sub_1C106FA54();
  swift_release();
  return v1;
}

uint64_t sub_1C0BEE89C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v3 = *(_QWORD *)(type metadata accessor for LiveGlobalKnowledgeTriple() - 8);
    v4 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v5 = *(_QWORD *)(v3 + 72);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v6 = MEMORY[0x1E0DEE9D8];
    do
    {
      v16 = sub_1C106E530();
      v17 = v7;
      sub_1C106FC94();
      sub_1C106E1E8();
      sub_1C106FC94();
      swift_bridgeObjectRelease();
      sub_1C106FC94();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C106FC94();
      swift_bridgeObjectRelease();
      v8 = v16;
      v9 = v17;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C07B7730();
        v6 = v12;
      }
      v10 = *(_QWORD *)(v6 + 16);
      if (v10 >= *(_QWORD *)(v6 + 24) >> 1)
      {
        sub_1C07B7730();
        v6 = v13;
      }
      v4 += v5;
      *(_QWORD *)(v6 + 16) = v10 + 1;
      v11 = v6 + 16 * v10;
      *(_QWORD *)(v11 + 32) = v8;
      *(_QWORD *)(v11 + 40) = v9;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = MEMORY[0x1E0DEE9D8];
  }
  v16 = v6;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C08485B4(&v16);
  swift_bridgeObjectRelease();
  sub_1C07ACF80(&qword_1ED762B70);
  sub_1C07BB218(&qword_1ED762430, &qword_1ED762B70);
  v14 = sub_1C106FA54();
  swift_release();
  return v14;
}

uint64_t LiveGlobalKnowledgeApi.idSearch(request:timeoutMs:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  int v34;
  uint64_t v35;
  NSObject *v36;
  uint64_t v37;
  os_log_type_t v38;
  uint64_t v39;
  uint8_t *v40;
  uint64_t v41;
  unint64_t v42;
  _QWORD v43[2];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59[3];
  uint64_t v60;

  v52 = a2;
  sub_1C07ACF80(&qword_1EF642168);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v4);
  sub_1C077AE40();
  v54 = (uint8_t *)v5;
  sub_1C077CF58();
  v6 = sub_1C106B314();
  v48 = *(_QWORD *)(v6 - 8);
  v49 = v6;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v7);
  sub_1C077AE40();
  v55 = v8;
  sub_1C077CF58();
  v47 = sub_1C106B344();
  v9 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  sub_1C0778564();
  v12 = v11 - v10;
  v13 = sub_1C106E7AC();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  sub_1C077F1C8();
  v57 = sub_1C106F544();
  v50 = *(_QWORD *)(v57 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v15);
  sub_1C077AED0();
  v56 = v16;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v43 - v18;
  sub_1C106F16C();
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
  v51 = a1;
  v20(v2, a1, v13);
  v21 = sub_1C106F538();
  v22 = sub_1C1070384();
  if (os_log_type_enabled(v21, v22))
  {
    v46 = v9;
    v23 = sub_1C0775854();
    v45 = v12;
    v24 = (uint8_t *)v23;
    v44 = sub_1C0775854();
    v59[0] = v44;
    *(_DWORD *)v24 = 136642819;
    v43[1] = v24 + 4;
    v25 = sub_1C0BEE7C4();
    v60 = sub_1C0788DAC(v25, v26, v59);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    sub_1C0781B28();
    _os_log_impl(&dword_1C0771000, v21, v22, "LiveGlobalKnowledgeApi idSearch query: \n%{sensitive}s", v24, 0xCu);
    swift_arrayDestroy();
    sub_1C0776778();
  }
  sub_1C0781B28();

  v27 = v57;
  v50 = *(_QWORD *)(v50 + 8);
  ((void (*)(char *, uint64_t))v50)(v19, v57);
  v28 = v55;
  sub_1C0BECB04(v55);
  v59[0] = MEMORY[0x1E0DEE9E8];
  sub_1C106B3EC();
  swift_allocObject();
  sub_1C106B3E0();
  v29 = v53;
  v30 = (uint64_t)v54;
  v31 = sub_1C0BED834((uint64_t)v54, v28, v52, (char)v59);
  v32 = v56;
  if (v29)
  {
    swift_release();
    swift_bridgeObjectRelease();
    return sub_1C07A00F0();
  }
  else
  {
    v34 = v31;
    swift_release();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v12, v30, v47);
    swift_bridgeObjectRelease();
    sub_1C07A00F0();
    v35 = sub_1C0BEEF54(v12);
    v60 = v35;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C106F16C();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v36 = sub_1C106F538();
    v37 = v32;
    v38 = sub_1C1070384();
    if (os_log_type_enabled(v36, v38))
    {
      v45 = v12;
      v39 = sub_1C0775854();
      LODWORD(v55) = v34;
      v40 = (uint8_t *)v39;
      v59[0] = sub_1C0775854();
      v46 = v9;
      *(_DWORD *)v40 = 136642819;
      v54 = v40 + 4;
      v41 = sub_1C0BEE89C(v35);
      v58 = sub_1C0788DAC(v41, v42, v59);
      sub_1C10705AC();
      sub_1C078AA18();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C0771000, v36, v38, "LiveGlobalKnowledgeApi idSearch triples: \n%{sensitive}s", v40, 0xCu);
      swift_arrayDestroy();
      sub_1C0776778();
    }
    sub_1C078AA18();

    ((void (*)(uint64_t, uint64_t))v50)(v37, v27);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v12, v47);
    sub_1C0775864();
    return v60;
  }
}

uint64_t sub_1C0BEEF54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, unint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void (*v26)(uint64_t, unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  void (*v33)(uint64_t, char *, uint64_t);
  char *v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  char v39;
  unint64_t v40;
  char v41;
  _QWORD *v42;
  uint64_t *v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v69;
  uint64_t v70;
  uint64_t result;
  _QWORD v72[3];
  uint64_t v73;
  void (*v74)(uint64_t, unint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  _QWORD v87[2];

  v3 = sub_1C106B284();
  v86 = *(_QWORD *)(v3 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v4);
  sub_1C077AED0();
  v85 = v5;
  MEMORY[0x1E0C80A78](v6);
  v78 = (char *)v72 - v7;
  sub_1C077CF58();
  v8 = sub_1C106B134();
  v76 = *(_QWORD *)(v8 - 8);
  v77 = v8;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v9);
  sub_1C077AE40();
  v75 = v10;
  sub_1C077CF58();
  v11 = sub_1C106B398();
  v81 = *(_QWORD *)(v11 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v12);
  sub_1C0779614();
  v13 = sub_1C106B1E8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  sub_1C0778564();
  v17 = v16 - v15;
  v18 = sub_1C106B32C();
  v87[0] = MEMORY[0x1E0DEE9E0];
  v19 = *(_QWORD *)(v18 + 16);
  v82 = v11;
  v83 = v14;
  v80 = v1;
  if (v19)
  {
    v20 = v18 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    v21 = *(_QWORD *)(v14 + 72);
    v22 = *(void (**)(uint64_t, unint64_t, uint64_t))(v14 + 16);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    do
    {
      v22(v17, v20, v13);
      sub_1C0BEF534((uint64_t)v87);
      sub_1C0796854();
      v20 += v21;
      --v19;
    }
    while (v19);
    v72[0] = 0;
    swift_bridgeObjectRelease_n();
    v79 = v87[0];
    v11 = v82;
    v1 = v80;
  }
  else
  {
    v72[0] = 0;
    swift_bridgeObjectRelease();
    v79 = MEMORY[0x1E0DEE9E0];
  }
  v72[2] = a1;
  v23 = sub_1C106B320();
  v24 = *(_QWORD *)(v23 + 16);
  v72[1] = v23;
  if (v24)
  {
    v25 = v23 + ((*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80));
    v26 = *(void (**)(uint64_t, unint64_t, uint64_t))(v81 + 16);
    v73 = *(_QWORD *)(v81 + 72);
    v74 = v26;
    v27 = MEMORY[0x1E0DEE9E0];
    while (1)
    {
      v84 = v24;
      v74(v1, v25, v11);
      v28 = v75;
      sub_1C106B380();
      v29 = sub_1C106B110();
      v31 = v30;
      (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v28, v77);
      v32 = v78;
      sub_1C106B38C();
      v33 = *(void (**)(uint64_t, char *, uint64_t))(v86 + 32);
      v34 = v32;
      v35 = v3;
      v33((uint64_t)v85, v34, v3);
      swift_isUniquelyReferenced_nonNull_native();
      v87[0] = v27;
      v36 = sub_1C077D774(v29, v31);
      if (__OFADD__(*(_QWORD *)(v27 + 16), (v37 & 1) == 0))
        break;
      v38 = v36;
      v39 = v37;
      sub_1C07ACF80(&qword_1EF642170);
      if ((sub_1C107090C() & 1) != 0)
      {
        v40 = sub_1C077D774(v29, v31);
        if ((v39 & 1) != (v41 & 1))
          goto LABEL_47;
        v38 = v40;
      }
      v42 = (_QWORD *)v87[0];
      if ((v39 & 1) != 0)
      {
        v3 = v35;
        (*(void (**)(unint64_t, char *, uint64_t))(v86 + 40))(*(_QWORD *)(v87[0] + 56) + *(_QWORD *)(v86 + 72) * v38, v85, v35);
      }
      else
      {
        *(_QWORD *)(v87[0] + 8 * (v38 >> 6) + 64) |= 1 << v38;
        v43 = (uint64_t *)(v42[6] + 16 * v38);
        *v43 = v29;
        v43[1] = v31;
        v3 = v35;
        v33(v42[7] + *(_QWORD *)(v86 + 72) * v38, v85, v35);
        v44 = v42[2];
        v45 = __OFADD__(v44, 1);
        v46 = v44 + 1;
        if (v45)
          goto LABEL_44;
        v42[2] = v46;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      }
      v27 = v87[0];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v1 = v80;
      v11 = v82;
      (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v80, v82);
      v25 += v73;
      v24 = v84 - 1;
      if (v84 == 1)
        goto LABEL_19;
    }
    __break(1u);
  }
  else
  {
    v27 = MEMORY[0x1E0DEE9E0];
LABEL_19:
    swift_bridgeObjectRelease();
    v86 = sub_1C106B32C();
    v47 = *(_QWORD *)(v86 + 16);
    if (!v47)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return MEMORY[0x1E0DEE9D8];
    }
    v48 = v86 + ((*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80));
    v49 = *(_QWORD *)(v83 + 72);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v50 = MEMORY[0x1E0DEE9D8];
    v51 = v72[0];
    while (1)
    {
      sub_1C0BEFC0C(v48, v27, v79, v87);
      v52 = v51;
      v53 = v87[0];
      v54 = *(_QWORD *)(v87[0] + 16);
      v55 = *(_QWORD *)(v50 + 16);
      if (__OFADD__(v55, v54))
        break;
      if (!swift_isUniquelyReferenced_nonNull_native() || v55 + v54 > *(_QWORD *)(v50 + 24) >> 1)
      {
        sub_1C07EBFC4();
        v50 = v56;
      }
      v51 = v52;
      if (*(_QWORD *)(v53 + 16))
      {
        v57 = *(_QWORD *)(v50 + 16);
        v58 = (*(_QWORD *)(v50 + 24) >> 1) - v57;
        v59 = type metadata accessor for LiveGlobalKnowledgeTriple();
        if (v58 < v54)
          goto LABEL_43;
        v60 = *(_QWORD *)(v59 - 8);
        v61 = (*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
        v62 = *(_QWORD *)(v60 + 72);
        v63 = v50 + v61 + v62 * v57;
        v64 = v53 + v61;
        v65 = v62 * v54;
        v66 = v63 + v65;
        v67 = v64 + v65;
        if (v64 < v66 && v63 < v67)
          goto LABEL_46;
        swift_arrayInitWithCopy();
        v51 = v52;
        if (v54)
        {
          v69 = *(_QWORD *)(v50 + 16);
          v45 = __OFADD__(v69, v54);
          v70 = v69 + v54;
          if (v45)
            goto LABEL_45;
          *(_QWORD *)(v50 + 16) = v70;
        }
      }
      else if (v54)
      {
        goto LABEL_42;
      }
      swift_bridgeObjectRelease();
      v48 += v49;
      if (!--v47)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        return v50;
      }
    }
  }
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
  swift_bridgeObjectRelease();
  sub_1C0796854();
  swift_bridgeObjectRelease();
  __break(1u);
LABEL_46:
  sub_1C10709F0();
  __break(1u);
LABEL_47:
  result = sub_1C1070D44();
  __break(1u);
  return result;
}

uint64_t sub_1C0BEF534(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void *v25;
  char *v26;
  id v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  _QWORD *v32;
  id v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  char *v37;
  unint64_t v38;
  unint64_t v39;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;

  v51 = a1;
  v1 = sub_1C106F544();
  v61 = *(char **)(v1 - 8);
  v62 = v1;
  MEMORY[0x1E0C80A78](v1);
  v60 = (char *)&v46 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_1C106F874();
  v54 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v53 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1C106F868();
  MEMORY[0x1E0C80A78](v4);
  v49 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C07ACF80((uint64_t *)&unk_1ED75EA40);
  MEMORY[0x1E0C80A78](v6);
  v50 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C106FB50();
  v57 = *(_QWORD *)(v8 - 8);
  v58 = v8;
  MEMORY[0x1E0C80A78](v8);
  v56 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_1C106B134();
  v55 = *(_QWORD *)(v59 - 8);
  MEMORY[0x1E0C80A78](v59);
  v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v46 - v13;
  v15 = sub_1C106B290();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1C106D1F8();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v46 - v23;
  sub_1C106B08C();
  v25 = v63;
  sub_1C0BEB818((uint64_t)v17);
  if (v25)
  {
    v26 = v60;
    sub_1C106F16C();
    v27 = v25;
    v28 = v25;
    v29 = sub_1C106F538();
    v30 = sub_1C1070390();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      v32 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v31 = 138412290;
      v33 = v25;
      v34 = _swift_stdlib_bridgeErrorToNSError();
      v64 = v34;
      sub_1C10705AC();
      *v32 = v34;

      _os_log_impl(&dword_1C0771000, v29, v30, "LiveGlobalKnowledgeApi.convertApiResponse: error while generating MD_ID %@", v31, 0xCu);
      sub_1C07ACF80(&qword_1ED7614A0);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v32, -1, -1);
      MEMORY[0x1C3BA8270](v31, -1, -1);

    }
    else
    {

    }
    return (*((uint64_t (**)(char *, uint64_t))v61 + 1))(v26, v62);
  }
  else
  {
    v47 = v11;
    v48 = v21;
    v60 = 0;
    v61 = v24;
    v62 = v19;
    v63 = (void *)v18;
    sub_1C106B1D0();
    sub_1C106B110();
    v35 = *(void (**)(char *, uint64_t))(v55 + 8);
    v36 = v59;
    v35(v14, v59);
    v37 = v56;
    sub_1C106FB44();
    sub_1C106FB20();
    v39 = v38;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v37, v58);
    if (v39 >> 60 != 15)
    {
      v41 = v47;
      sub_1C106B1D0();
      v42 = sub_1C106B110();
      v44 = v43;
      v35(v41, v36);
      (*(void (**)(char *, char *, void *))(v62 + 16))(v48, v61, v63);
      sub_1C07803F8(&qword_1ED762B30, (void (*)(uint64_t))MEMORY[0x1E0CA9940]);
      sub_1C106F85C();
      v45 = (char *)&loc_1C0BEFA28 + dword_1C0BEFBFC[v39 >> 62];
      v57 = v44;
      v58 = v42;
      __asm { BR              X10 }
    }
    return (*(uint64_t (**)(char *, void *))(v62 + 8))(v61, v63);
  }
}

uint64_t sub_1C0BEFC0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t *, _QWORD);
  uint64_t *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  id v48;
  id v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  _QWORD *v54;
  id v55;
  uint64_t v56;
  _QWORD *v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t result;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t, uint64_t);
  char *v67;
  uint64_t v68;
  void *v69;
  char *v70;
  _QWORD *v71;
  char *v72;
  uint64_t v73[4];
  uint64_t v74;

  v68 = a3;
  v70 = (char *)a2;
  v71 = a4;
  v5 = sub_1C106F544();
  v63 = *(_QWORD *)(v5 - 8);
  v64 = v5;
  MEMORY[0x1E0C80A78](v5);
  v72 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C07ACF80(&qword_1ED7548E8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C106B134();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1C106B284();
  v62 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1C106B1E8();
  MEMORY[0x1E0C80A78](v17);
  v67 = (char *)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v61 - v21;
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
  v74 = v25;
  v65 = v23;
  v66 = v24;
  ((void (*)(char *, uint64_t, double))v24)((char *)&v61 - v21, a1, v20);
  sub_1C106B1D0();
  v26 = sub_1C106B110();
  v28 = v27;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_1C089B240(v26, v28, (uint64_t)v70);
  swift_bridgeObjectRelease();
  if (sub_1C07B2D80((uint64_t)v9, 1, v14) == 1)
  {
    sub_1C0784B94((uint64_t)v9, &qword_1ED7548E8);
    v29 = v74;
    v30 = (uint64_t)v22;
  }
  else
  {
    v31 = v62;
    (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v16, v9, v14);
    v32 = sub_1C106B1B8();
    v33 = *(_QWORD *)(v32 + 16);
    v30 = (uint64_t)v22;
    v34 = v31;
    if (v33)
    {
      v70 = v22;
      v35 = v32 + ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80));
      v36 = v31;
      v37 = *(_QWORD *)(v31 + 72);
      sub_1C07803F8(&qword_1EF642178, (void (*)(uint64_t))MEMORY[0x1E0D6DCE8]);
      while ((sub_1C106FAA8() & 1) == 0)
      {
        v35 += v37;
        if (!--v33)
        {
          swift_bridgeObjectRelease();
          v30 = (uint64_t)v70;
          v34 = v36;
          goto LABEL_9;
        }
      }
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v14);
      v29 = v74;
      v30 = (uint64_t)v70;
    }
    else
    {
      swift_bridgeObjectRelease();
LABEL_9:
      v38 = (void (*)(uint64_t *, _QWORD))sub_1C106B1AC();
      v40 = v39;
      sub_1C07EA2D4();
      v41 = *(_QWORD *)(*v40 + 16);
      sub_1C07EA9D0();
      v42 = *v40;
      *(_QWORD *)(v42 + 16) = v41 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v34 + 16))(v42+ ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(_QWORD *)(v34 + 72) * v41, v16, v14);
      v38(v73, 0);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v16, v14);
      v29 = v74;
    }
  }
  v44 = v68;
  v43 = v69;
  v45 = v67;
  v66(v67, v30, v29);
  sub_1C0BF09F4(v44);
  if (v43)
  {
    v47 = *(void (**)(char *, uint64_t))(v65 + 8);
    v47(v45, v29);
    sub_1C106F16C();
    v48 = v43;
    v49 = v43;
    v50 = sub_1C106F538();
    v51 = sub_1C1070390();
    if (os_log_type_enabled(v50, v51))
    {
      v52 = (uint8_t *)swift_slowAlloc();
      v53 = swift_slowAlloc();
      v70 = (char *)v30;
      v54 = (_QWORD *)v53;
      *(_DWORD *)v52 = 138412290;
      v55 = v43;
      v56 = _swift_stdlib_bridgeErrorToNSError();
      v73[0] = v56;
      sub_1C10705AC();
      *v54 = v56;

      _os_log_impl(&dword_1C0771000, v50, v51, "LiveGlobalKnowledgeApi.convertApiResponse: error while generating graph triples %@", v52, 0xCu);
      sub_1C07ACF80(&qword_1ED7614A0);
      swift_arrayDestroy();
      v57 = v54;
      v30 = (uint64_t)v70;
      MEMORY[0x1C3BA8270](v57, -1, -1);
      v58 = v52;
      v29 = v74;
      MEMORY[0x1C3BA8270](v58, -1, -1);
    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v63 + 8))(v72, v64);

    v59 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v59 = v46;
    v47 = *(void (**)(char *, uint64_t))(v65 + 8);
    v47(v45, v29);
  }
  result = ((uint64_t (*)(uint64_t, uint64_t))v47)(v30, v29);
  *v71 = v59;
  return result;
}

uint64_t sub_1C0BF0158(uint64_t a1, uint64_t a2)
{
  return LiveGlobalKnowledgeApi.idSearch(request:timeoutMs:)(a1, a2);
}

ValueMetadata *type metadata accessor for LiveGlobalKnowledgeApi()
{
  return &type metadata for LiveGlobalKnowledgeApi;
}

uint64_t sub_1C0BF0180()
{
  return swift_deallocObject();
}

uint64_t sub_1C0BF0190()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1C0BF01B4()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1C0BF01E8(uint64_t a1)
{
  uint64_t v1;

  sub_1C0BEDC78(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(NSObject **)(v1 + 40));
}

uint64_t sub_1C0BF01F4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0BF0220(uint64_t a1)
{
  uint64_t v1;

  return sub_1C0BEE3BC(a1, *(_QWORD *)(v1 + 16), *(char **)(v1 + 24));
}

uint64_t sub_1C0BF022C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 4u)
    return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return result;
}

uint64_t destroy for LiveGlobalKnowledgeApiError(uint64_t a1)
{
  return sub_1C0BF0254(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_1C0BF0254(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 4u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s24IntelligencePlatformCore27LiveGlobalKnowledgeApiErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1C0BF022C(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for LiveGlobalKnowledgeApiError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1C0BF022C(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1C0BF0254(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for LiveGlobalKnowledgeApiError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1C0BF0254(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for LiveGlobalKnowledgeApiError()
{
  return &type metadata for LiveGlobalKnowledgeApiError;
}

uint64_t sub_1C0BF035C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  os_log_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  int v65;
  uint8_t *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  void (*v70)(uint64_t, uint64_t);
  _QWORD v71[3];
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint8_t *v86;
  uint64_t v87;
  uint64_t v88;
  os_log_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;

  v94 = a2;
  v91 = sub_1C106E800();
  v95 = *(_QWORD *)(v91 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v5);
  sub_1C077AE40();
  sub_1C0787A68(v6);
  v77 = sub_1C106F544();
  v76 = *(_QWORD *)(v77 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v7);
  sub_1C077AE40();
  v78 = v8;
  sub_1C077CF58();
  v73 = sub_1C106B218();
  v72 = *(_QWORD *)(v73 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v9);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v10);
  sub_1C0778674();
  sub_1C0787A68(v11);
  v12 = sub_1C106B164();
  v81 = *(_QWORD *)(v12 - 8);
  v82 = v12;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v13);
  sub_1C077AED0();
  v79 = v14;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v15);
  sub_1C0778674();
  v80 = v16;
  sub_1C077CF58();
  v17 = sub_1C106B194();
  v85 = *(_QWORD *)(v17 - 8);
  v86 = (uint8_t *)v17;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v18);
  sub_1C077AED0();
  v83 = v19;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v20);
  sub_1C0778674();
  v84 = v21;
  sub_1C077CF58();
  v22 = sub_1C106B2CC();
  v89 = *(os_log_t *)(v22 - 8);
  v90 = v22;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v23);
  sub_1C077AED0();
  v87 = v24;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v25);
  sub_1C0778674();
  v88 = v26;
  sub_1C077CF58();
  v27 = sub_1C106B134();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  sub_1C077AF80();
  v31 = v29 - v30;
  MEMORY[0x1E0C80A78](v32);
  sub_1C07A2928();
  v33 = sub_1C106E818();
  v34 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v35);
  v37 = (char *)v71 - v36;
  v38 = sub_1C106B284();
  v92 = *(_QWORD *)(v38 - 8);
  v93 = v38;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v39);
  sub_1C07795DC();
  sub_1C106B278();
  v40 = a1;
  sub_1C106E7F4();
  v74 = v34;
  v41 = (*(uint64_t (**)(char *, uint64_t))(v34 + 88))(v37, v33);
  if (v41 == *MEMORY[0x1E0D3D0D0])
  {
    sub_1C106B128();
    sub_1C079B830();
    sub_1C106B11C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v31, v3, v27);
    sub_1C106B224();
    (*(void (**)(uint64_t, uint64_t))(v95 + 8))(a1, v91);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v3, v27);
LABEL_13:
    v56 = v93;
    v57 = v94;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v92 + 32))(v94, v2, v93);
    v58 = 0;
    return sub_1C07B2D8C(v57, v58, 1, v56);
  }
  v42 = v33;
  v43 = v95;
  v44 = v91;
  if (v41 == *MEMORY[0x1E0D3D0C8])
  {
    v45 = v88;
    sub_1C106B2C0();
    sub_1C079B830();
    sub_1C106B11C();
    v47 = v89;
    v46 = v90;
    sub_1C07947FC((uint64_t (*)(uint64_t, uint64_t, uint64_t))v89[2].isa);
    sub_1C079CE90();
    sub_1C106B260();
LABEL_7:
    sub_1C07A8144(*(uint64_t (**)(uint64_t, uint64_t))(v43 + 8));
    ((void (*)(uint64_t, uint64_t))v47[1].isa)(v45, v46);
    goto LABEL_13;
  }
  if (v41 == *MEMORY[0x1E0D3D0E0])
  {
    v45 = v84;
    sub_1C106B188();
    sub_1C079B830();
    sub_1C106B11C();
    v47 = (os_log_t)v85;
    v46 = (uint64_t)v86;
    sub_1C07947FC(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v85 + 16));
    sub_1C079CE90();
    sub_1C106B23C();
    goto LABEL_7;
  }
  if (v41 == *MEMORY[0x1E0D3D0D8])
  {
    v48 = v80;
    sub_1C106B158();
    sub_1C079B830();
    sub_1C106B11C();
    v50 = v81;
    v49 = v82;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 16))(v79, v48, v82);
    sub_1C079CE90();
    sub_1C106B230();
    sub_1C07A8144(*(uint64_t (**)(uint64_t, uint64_t))(v43 + 8));
    v51 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
    v52 = v48;
LABEL_12:
    v51(v52, v49);
    goto LABEL_13;
  }
  v53 = v95;
  if (v41 == *MEMORY[0x1E0D3D0E8])
  {
    v54 = v71[2];
    sub_1C106B20C();
    sub_1C079B830();
    sub_1C106B11C();
    v55 = v72;
    v49 = v73;
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v72 + 16))(v71[1], v54, v73);
    sub_1C079CE90();
    sub_1C106B248();
    sub_1C07A8144(*(uint64_t (**)(uint64_t, uint64_t))(v53 + 8));
    v51 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
    v52 = v54;
    goto LABEL_12;
  }
  v60 = v78;
  sub_1C106F16C();
  v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16);
  v62 = v75;
  v61(v75, a1, v44);
  v63 = sub_1C106F538();
  v64 = sub_1C1070390();
  v65 = v64;
  if (os_log_type_enabled(v63, v64))
  {
    v89 = v63;
    v66 = (uint8_t *)swift_slowAlloc();
    v67 = swift_slowAlloc();
    v90 = v2;
    v88 = v67;
    v97 = v67;
    *(_DWORD *)v66 = 136315138;
    v86 = v66 + 4;
    LODWORD(v87) = v65;
    sub_1C106E7F4();
    v68 = sub_1C106FB5C();
    v96 = sub_1C0788DAC(v68, v69, &v97);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    sub_1C078AD28(v62);
    _os_log_impl(&dword_1C0771000, v89, (os_log_type_t)v87, "got unknown ExternalIdentifier from PegasusApi: %s", v66, 0xCu);
    swift_arrayDestroy();
    sub_1C0776778();
  }

  sub_1C078AD28(v62);
  sub_1C078AD28(v40);
  sub_1C077B5A8();
  v70(v60, v77);
  v56 = v93;
  (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v2, v93);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v37, v42);
  v58 = 1;
  v57 = v94;
  return sub_1C07B2D8C(v57, v58, 1, v56);
}

void sub_1C0BF09F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t (*v74)(uint64_t, _QWORD);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(uint64_t, uint64_t, uint64_t);
  uint64_t v83;
  void (*v84)(uint64_t, uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(uint64_t, uint64_t, uint64_t);
  __int128 v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  NSObject *v115;
  os_log_type_t v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void (*v124)(uint64_t, uint64_t);
  uint64_t v125;
  void (*v126)(uint64_t);
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void (*v130)(uint64_t, uint64_t);
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  __int128 v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  void (*v150)(uint64_t, uint64_t, uint64_t);
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  __int128 v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;

  v4 = v2;
  v164 = a1;
  v5 = sub_1C106F544();
  v165 = *(_QWORD *)(v5 - 8);
  v166 = v5;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v7);
  sub_1C0778674();
  *(_QWORD *)&v163 = v8;
  v9 = sub_1C0790998();
  sub_1C077B58C(v9, (uint64_t)&v166);
  v136 = v10;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v11);
  sub_1C077AE40();
  sub_1C0787A68(v12);
  v145 = sub_1C106E800();
  v144 = *(_QWORD *)(v145 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v13);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v14);
  sub_1C0778674();
  sub_1C0787A68(v15);
  v153 = sub_1C106B284();
  v159 = *(_QWORD *)(v153 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v16);
  v160 = (uint64_t)&v129 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C077CF58();
  v18 = type metadata accessor for LiveGlobalKnowledgeTriple();
  sub_1C077B58C(v18, (uint64_t)&v159);
  v161 = v19;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v20);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v21);
  sub_1C07A2928();
  v22 = sub_1C106B3B0();
  v157 = *(_QWORD *)(v22 - 8);
  v158 = v22;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v23);
  sub_1C077AE40();
  v156 = v24;
  v25 = sub_1C079EFC0();
  sub_1C077B58C(v25, (uint64_t)&v170);
  v143 = v26;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v27);
  sub_1C0787A68((uint64_t)&v129 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  v29 = sub_1C106B104();
  v154 = *(_QWORD *)(v29 - 8);
  v155 = v29;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v30);
  sub_1C077AE40();
  v149 = v31;
  sub_1C106B290();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v32);
  sub_1C077AE40();
  v168 = v33;
  v34 = sub_1C106D1F8();
  sub_1C077B58C(v34, (uint64_t)&v163 + 8);
  v135 = v35;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v36);
  sub_1C077AE40();
  v141 = v37;
  sub_1C07ACF80((uint64_t *)&unk_1ED75EA40);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v38);
  sub_1C0778564();
  v41 = v40 - v39;
  v42 = sub_1C106B134();
  v43 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v44);
  v46 = (char *)&v129 - v45;
  v47 = sub_1C106E590();
  v162 = *(_QWORD *)(v47 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v48);
  sub_1C077AE40();
  v167 = v49;
  v169 = MEMORY[0x1E0DEE9D8];
  v148 = v1;
  sub_1C106B1D0();
  v50 = sub_1C106B110();
  v52 = v51;
  v53 = *(void (**)(char *, uint64_t))(v43 + 8);
  v134 = v42;
  v53(v46, v42);
  sub_1C089AC48(v50, v52, v164);
  swift_bridgeObjectRelease();
  if (sub_1C07B2D80(v41, 1, v47) == 1)
  {
    v54 = swift_bridgeObjectRelease();
    sub_1C07AA940(v54, (uint64_t *)&unk_1ED75EA40);
  }
  else
  {
    v130 = (void (*)(uint64_t, uint64_t))v53;
    v55 = v162;
    v56 = v167;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v162 + 32))(v167, v41, v47);
    v57 = v168;
    sub_1C106B08C();
    sub_1C0BEB818(v57);
    if (v2)
    {
      (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v56, v47);
    }
    else
    {
      v152 = v47;
      v58 = *(_QWORD *)(sub_1C106B098() + 16);
      if (v58)
      {
        v168 = 0;
        sub_1C0779D28();
        v129 = v59;
        v61 = v59 + v60;
        v63 = *(_QWORD *)(v62 + 72);
        v150 = *(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 16);
        v151 = v63;
        *(_QWORD *)&v65 = *(_QWORD *)(v64 + 1456);
        v140 = v65;
        v66 = v167;
        v67 = v155;
        v68 = v149;
        v69 = v131;
        do
        {
          v150(v68, v61, v67);
          v70 = v66;
          sub_1C0BF15A0(v164, v66);
          v71 = v68;
          sub_1C0BDA57C();
          v72 = v142;
          sub_1C106B080();
          v73 = sub_1C106F28C();
          sub_1C077B5A8();
          sub_1C077AE54(v72, v74);
          v75 = v168;
          if (v73 > v168)
            v75 = v73;
          v168 = v75;
          v67 = v155;
          v68 = v71;
          v66 = v70;
          sub_1C0793628(v68, *(uint64_t (**)(uint64_t, uint64_t))(v154 + 8));
          v61 += v151;
          --v58;
        }
        while (v58);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        v168 = 0;
        v66 = v167;
        v69 = v131;
      }
      v76 = *(_QWORD *)(sub_1C106B1C4() + 16);
      if (v76)
      {
        *(_QWORD *)&v163 = 0;
        v77 = v158;
        sub_1C0779D28();
        v155 = v78;
        v80 = v78 + v79;
        v164 = *(_QWORD *)(v81 + 72);
        v82 = *(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 16);
        v83 = v156;
        do
        {
          v82(v83, v80, v77);
          v84 = *(void (**)(uint64_t, uint64_t, uint64_t))(v162 + 16);
          v84(v3, v167, v152);
          sub_1C106E248();
          v85 = sub_1C106B0C8();
          v87 = v86;
          sub_1C07B18E4();
          sub_1C07A3310();
          v88 = (uint64_t *)(v3 + *(int *)(v69 + 32));
          *v88 = v85;
          v88[1] = v87;
          sub_1C0793DC0();
          if ((sub_1C0791E78(v89) & 1) == 0)
          {
            sub_1C07975AC();
            v85 = v93;
          }
          v90 = *(_QWORD *)(v85 + 16);
          if (v90 >= *(_QWORD *)(v85 + 24) >> 1)
          {
            sub_1C07975AC();
            v85 = v94;
          }
          *(_QWORD *)(v85 + 16) = v90 + 1;
          sub_1C07A0100();
          sub_1C0BF308C(v3, v91 + v92 * v90);
          v169 = v85;
          v83 = v156;
          v77 = v158;
          sub_1C0793628(v156, *(uint64_t (**)(uint64_t, uint64_t))(v157 + 8));
          v80 += v164;
          --v76;
        }
        while (v76);
        swift_bridgeObjectRelease();
        v4 = v163;
        v66 = v167;
      }
      else
      {
        swift_bridgeObjectRelease();
        v84 = *(void (**)(uint64_t, uint64_t, uint64_t))(v162 + 16);
      }
      v95 = v132;
      v84(v132, v66, v152);
      sub_1C106E218();
      v96 = sub_1C106D090();
      v98 = v97;
      sub_1C07B18E4();
      sub_1C07A3310();
      v99 = (uint64_t *)(v95 + *(int *)(v69 + 32));
      *v99 = v96;
      v99[1] = v98;
      sub_1C0793DC0();
      if ((sub_1C0791E78(v100) & 1) == 0)
      {
        sub_1C07975AC();
        v96 = v127;
      }
      v101 = v160;
      v102 = *(_QWORD *)(v96 + 16);
      if (v102 >= *(_QWORD *)(v96 + 24) >> 1)
      {
        sub_1C07975AC();
        v96 = v128;
      }
      *(_QWORD *)(v96 + 16) = v102 + 1;
      sub_1C07A0100();
      sub_1C0BF308C(v95, v103 + v104 * v102);
      v169 = v96;
      v105 = *(_QWORD *)(sub_1C106B1B8() + 16);
      if (v105)
      {
        sub_1C0779D28();
        v161 = v106;
        v108 = v106 + v107;
        v164 = *(_QWORD *)(v109 + 72);
        v110 = *(void (**)(uint64_t, uint64_t, uint64_t))(v109 + 16);
        *(_QWORD *)&v111 = 138412290;
        v163 = v111;
        v112 = v147;
        v113 = v146;
        v114 = v153;
        do
        {
          v110(v101, v108, v114);
          sub_1C0BF2120(v113);
          if (v4)
          {
            v4 = 0;
            sub_1C106F16C();
            sub_1C0784EF8();
            sub_1C0784EF8();
            v115 = sub_1C106F538();
            v116 = sub_1C1070390();
            if (os_log_type_enabled(v115, v116))
            {
              v117 = sub_1C0775854();
              v118 = (_QWORD *)sub_1C0775854();
              *(_DWORD *)v117 = v163;
              sub_1C0784EF8();
              v119 = _swift_stdlib_bridgeErrorToNSError();
              *(_QWORD *)(v117 + 4) = v119;
              *v118 = v119;
              sub_1C077C820();
              sub_1C077C820();
              _os_log_impl(&dword_1C0771000, v115, v116, "Apple_Parsec_Kg_V1alpha_Entity.toGraphTriples: error while converting alternateId %@", (uint8_t *)v117, 0xCu);
              sub_1C07ACF80(&qword_1ED7614A0);
              swift_arrayDestroy();
              sub_1C0776778();
            }

            sub_1C077C820();
            sub_1C077C820();
            sub_1C077C820();
            (*(void (**)(uint64_t, uint64_t))(v165 + 8))(v112, v166);
          }
          else
          {
            sub_1C0BF255C(v113, v167, v168);
            v4 = 0;
            sub_1C077AE54(v113, *(uint64_t (**)(uint64_t, _QWORD))(v144 + 8));
            sub_1C0BDA57C();
          }
          v114 = v153;
          v101 = v160;
          sub_1C0793628(v160, *(uint64_t (**)(uint64_t, uint64_t))(v159 + 8));
          v108 += v164;
          --v105;
        }
        while (v105);
      }
      swift_bridgeObjectRelease();
      v120 = v133;
      sub_1C106B1D0();
      sub_1C106B110();
      v130(v120, v134);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v136 + 104))(v137, *MEMORY[0x1E0D3D0D0], v138);
      v121 = v139;
      sub_1C106E7D0();
      sub_1C0BF255C(v121, v167, v168);
      if (!v4)
      {
        sub_1C077AE54(v121, *(uint64_t (**)(uint64_t, _QWORD))(v144 + 8));
        sub_1C0BDA57C();
        sub_1C077AE54(v141, *(uint64_t (**)(uint64_t, _QWORD))(v135 + 8));
        v125 = sub_1C079BFB8();
        v126(v125);
        goto LABEL_36;
      }
      sub_1C077AE54(v121, *(uint64_t (**)(uint64_t, _QWORD))(v144 + 8));
      sub_1C077AE54(v141, *(uint64_t (**)(uint64_t, _QWORD))(v135 + 8));
      v122 = sub_1C079BFB8();
      v124(v122, v123);
    }
    swift_bridgeObjectRelease();
  }
LABEL_36:
  sub_1C07757D0();
}

void sub_1C0BF15A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(uint64_t, uint64_t);
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int *v86;
  void (*v87)(uint64_t, uint64_t, uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t (*v98)(uint64_t, _QWORD);
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  char *v102;
  void (*v103)(char *, uint64_t);
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  int *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  void (*v127)(uint64_t, uint64_t);
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  char *v138;
  uint64_t v139;

  v124 = a2;
  v131 = a1;
  v5 = type metadata accessor for LiveGlobalKnowledgeTriple();
  v6 = *(_QWORD *)(v5 - 8);
  v119 = (int *)v5;
  v120 = v6;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v7);
  sub_1C077AE40();
  sub_1C0787A68(v8);
  v9 = sub_1C106F874();
  sub_1C077B58C(v9, (uint64_t)&v138);
  v111 = v10;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v11);
  sub_1C0787A68((uint64_t)&v104 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C106F868();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v13);
  sub_1C077AE40();
  sub_1C0787A68(v14);
  v15 = sub_1C106EB24();
  v122 = *(_QWORD *)(v15 - 8);
  v123 = v15;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v16);
  sub_1C077AED0();
  v118 = v17;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v18);
  sub_1C0778674();
  sub_1C0787A68(v19);
  v20 = sub_1C106FB50();
  sub_1C077B58C(v20, (uint64_t)&v139);
  v114 = v21;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v22);
  sub_1C077AE40();
  sub_1C0787A68(v23);
  sub_1C106B290();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v24);
  sub_1C077AE40();
  v130 = v25;
  sub_1C077CF58();
  v121 = sub_1C106B0A4();
  v117 = *(_QWORD *)(v121 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v26);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v27);
  sub_1C0778674();
  sub_1C0787A68(v28);
  v29 = sub_1C106D1F8();
  v132 = *(_QWORD *)(v29 - 8);
  v133 = v29;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v30);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v31);
  sub_1C0778674();
  v125 = v32;
  v126 = sub_1C079EFC0();
  v129 = *(_QWORD *)(v126 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v33);
  v128 = (char *)&v104 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07ACF80((uint64_t *)&unk_1ED75EA40);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v35);
  sub_1C077AE40();
  v127 = v36;
  sub_1C077CF58();
  v37 = sub_1C106E590();
  v38 = *(_QWORD *)(v37 - 8);
  v134 = v37;
  v135 = v38;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v39);
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v40);
  sub_1C07A2928();
  sub_1C106B29C();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v41);
  sub_1C07795DC();
  v42 = sub_1C106E41C();
  v43 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  sub_1C077AF80();
  v46 = v44 - v45;
  MEMORY[0x1E0C80A78](v47);
  v49 = (char *)&v104 - v48;
  MEMORY[0x1E0C80A78](v50);
  v52 = (char *)&v104 - v51;
  v53 = v2;
  sub_1C106B08C();
  v54 = (uint64_t)v138;
  sub_1C0BEBC5C(v3);
  if (!v54)
  {
    v105 = v49;
    v55 = v126;
    v106 = v46;
    v110 = 0;
    v138 = v52;
    v109 = v43;
    v56 = sub_1C106B0C8();
    v58 = v57;
    v59 = sub_1C106B0C8();
    v60 = (uint64_t)v127;
    sub_1C089AC48(v59, v61, v131);
    sub_1C077960C();
    v62 = v134;
    if (sub_1C07B2D80(v60, 1, v134) == 1)
    {
      v107 = v56;
      v108 = v58;
      sub_1C0784B30(v60, (uint64_t *)&unk_1ED75EA40);
      v63 = v42;
      v64 = v135;
    }
    else
    {
      sub_1C077B5B4();
      v65 = v4;
      v66 = v4;
      v64 = v135;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v135 + 32))(v66, v60, v62);
      v107 = sub_1C106E530();
      v108 = v67;
      (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v65, v62);
      v63 = v42;
    }
    v68 = v128;
    sub_1C106B080();
    v69 = sub_1C106F28C();
    (*(void (**)(char *, uint64_t))(v129 + 8))(v68, v55);
    v70 = sub_1C106B0BC();
    v72 = v132;
    v71 = v133;
    v73 = v130;
    if ((v70 & 1) != 0)
    {
      v74 = v116;
      sub_1C106B0B0();
      sub_1C106B08C();
      v75 = *(void (**)(uint64_t, uint64_t))(v117 + 8);
      v75(v74, v121);
      v76 = v110;
      sub_1C0BEB818(v73);
      if (v76)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v127 = v75;
        v130 = v69;
        v110 = 0;
        v129 = v53;
        v136 = sub_1C106E530();
        v137 = v93;
        sub_1C106E1E8();
        sub_1C106FC94();
        swift_bridgeObjectRelease();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        sub_1C077B2E0();
        sub_1C077B5B4();
        v94 = v113;
        sub_1C106FB44();
        v95 = sub_1C106FB20();
        v97 = v96;
        sub_1C077960C();
        sub_1C077B5A8();
        sub_1C077AE54(v94, v98);
        if (v97 >> 60 != 15)
        {
          v128 = (char *)v95;
          sub_1C077B5B4();
          sub_1C077C228(v112, v125, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v72 + 16));
          sub_1C07803B8((unint64_t *)&qword_1ED762B30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9940], MEMORY[0x1E0CA9930]);
          sub_1C106F85C();
          v102 = (char *)&loc_1C0BF1D48 + *((int *)qword_1C0BF2110 + (v97 >> 62));
          v126 = v97;
          __asm { BR              X10 }
        }
        v136 = 0;
        v137 = 0xE000000000000000;
        sub_1C1070774();
        swift_bridgeObjectRelease();
        v136 = 0xD00000000000001FLL;
        v137 = 0x80000001C1104370;
        sub_1C077B2E0();
        sub_1C077B5B4();
        v99 = v136;
        v100 = v137;
        sub_1C0BEBC20();
        sub_1C0775810();
        *(_QWORD *)v101 = v99;
        *(_QWORD *)(v101 + 8) = v100;
        *(_BYTE *)(v101 + 16) = 3;
        swift_willThrow();
        (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v125, v71);
      }
      sub_1C077B5A8();
      v103(v138, v63);
    }
    else
    {
      sub_1C07ACF80((uint64_t *)&unk_1EF637B40);
      v77 = (*(unsigned __int8 *)(v120 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v120 + 80);
      v78 = swift_allocObject();
      v130 = v69;
      *(_OWORD *)(v78 + 16) = xmmword_1C1079220;
      v79 = v78 + v77;
      v80 = v115;
      sub_1C077C228(v115, v124, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v64 + 16));
      v81 = v109;
      v82 = (uint64_t)v105;
      sub_1C0776978((uint64_t)v105, (uint64_t)v138, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v109 + 16));
      v83 = v63;
      v84 = v118;
      sub_1C106EB0C();
      v85 = v106;
      sub_1C106E26C();
      sub_1C077C228(v79, v80, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v135 + 32));
      v86 = v119;
      v87 = *(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 32);
      v87(v79 + v119[5], v82, v83);
      v88 = v84;
      v89 = v83;
      v90 = (uint64_t)v138;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v122 + 32))(v79 + v86[6], v88, v123);
      v87(v79 + v86[7], v85, v89);
      v91 = (uint64_t *)(v79 + v86[8]);
      v92 = v108;
      *v91 = v107;
      v91[1] = v92;
      *(_QWORD *)(v79 + v86[9]) = v130;
      *(_QWORD *)(v79 + v86[10]) = 0;
      *(_QWORD *)(v79 + v86[11]) = MEMORY[0x1E0DEE9D8];
      (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v90, v89);
    }
  }
  sub_1C07757D0();
}

uint64_t sub_1C0BF2120@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t, uint64_t, uint64_t);
  unsigned int *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v66 = a1;
  v2 = sub_1C106B218();
  v54 = *(_QWORD *)(v2 - 8);
  v55 = v2;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v3);
  sub_1C077AE40();
  v53 = v4;
  sub_1C077CF58();
  v5 = sub_1C106B164();
  v60 = *(_QWORD *)(v5 - 8);
  v61 = v5;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C077AE40();
  v59 = v7;
  sub_1C077CF58();
  v62 = sub_1C106B194();
  v8 = *(_QWORD *)(v62 - 8);
  MEMORY[0x1E0C80A78](v62);
  sub_1C0778564();
  v11 = v10 - v9;
  v12 = sub_1C106B2CC();
  v57 = *(_QWORD *)(v12 - 8);
  v58 = v12;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v13);
  sub_1C077AE40();
  v56 = v14;
  v15 = sub_1C0790998();
  v63 = *(_QWORD *)(v15 - 8);
  v64 = v15;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v16);
  sub_1C077AE40();
  v65 = v17;
  sub_1C077CF58();
  v18 = sub_1C106B134();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  sub_1C0778564();
  v22 = v21 - v20;
  sub_1C07ACF80(&qword_1EF642198);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v23);
  sub_1C077AF80();
  v26 = v24 - v25;
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v52 - v28;
  sub_1C106B26C();
  v30 = sub_1C106B254();
  if (sub_1C07B2D80((uint64_t)v29, 1, v30) == 1)
    goto LABEL_2;
  v52 = v1;
  sub_1C0BF30D0((uint64_t)v29, v26);
  v34 = *(_QWORD *)(v30 - 8);
  v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 88))(v26, v30);
  if (v35 == *MEMORY[0x1E0D6DC98])
  {
    sub_1C078F8C8();
    sub_1C0776978(v22, v26, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 32));
    sub_1C106B110();
    sub_1C077F0F8();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v63 + 104))(v65, *MEMORY[0x1E0D3D0D0], v64);
    sub_1C106E7D0();
    v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(v22, v18);
  }
  else if (v35 == *MEMORY[0x1E0D6DCA8])
  {
    sub_1C078F8C8();
    v37 = v26;
    v38 = v62;
    sub_1C077E908(v11, v37, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32));
    sub_1C106B110();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v63 + 104))(v65, *MEMORY[0x1E0D3D0E0], v64);
    sub_1C106E7D0();
    v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v11, v38);
  }
  else
  {
    if (v35 == *MEMORY[0x1E0D6DCA0])
    {
      sub_1C078F8C8();
      v40 = v59;
      v39 = v60;
      v41 = sub_1C07AB008();
      v42 = v61;
      sub_1C077E908(v41, v43, v44);
      sub_1C106B110();
      sub_1C077F0F8();
      v45 = (unsigned int *)MEMORY[0x1E0D3D0D8];
    }
    else if (v35 == *MEMORY[0x1E0D6DCB8])
    {
      sub_1C078F8C8();
      v40 = v56;
      v39 = v57;
      v46 = sub_1C07AB008();
      v42 = v58;
      sub_1C077E908(v46, v47, v48);
      sub_1C106B110();
      sub_1C077F0F8();
      v45 = (unsigned int *)MEMORY[0x1E0D3D0C8];
    }
    else
    {
      if (v35 != *MEMORY[0x1E0D6DCB0])
      {
        sub_1C0793628(v26, *(uint64_t (**)(uint64_t, uint64_t))(v34 + 8));
LABEL_2:
        sub_1C0BEBC20();
        sub_1C0775810();
        *(_QWORD *)v31 = 0xD000000000000031;
        *(_QWORD *)(v31 + 8) = 0x80000001C1104390;
        *(_BYTE *)(v31 + 16) = 0;
        v32 = swift_willThrow();
        return sub_1C07AA940(v32, &qword_1EF642198);
      }
      sub_1C078F8C8();
      v40 = v53;
      v39 = v54;
      v49 = sub_1C07AB008();
      v42 = v55;
      sub_1C077E908(v49, v50, v51);
      sub_1C106B110();
      sub_1C077F0F8();
      v45 = (unsigned int *)MEMORY[0x1E0D3D0E8];
    }
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v63 + 104))(v65, *v45, v64);
    sub_1C106E7D0();
    v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 8))(v40, v42);
  }
  return sub_1C07AA940(v36, &qword_1EF642198);
}

uint64_t sub_1C0BF255C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char *v28;
  _QWORD v29[13];
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  unint64_t v42;
  unint64_t v43;
  char *v44;

  v37 = a2;
  v38 = a3;
  v4 = sub_1C106E818();
  v29[11] = *(_QWORD *)(v4 - 8);
  v29[12] = v4;
  MEMORY[0x1E0C80A78](v4);
  v29[10] = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_1C106E41C();
  v29[8] = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v44 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v29[9] = (char *)v29 - v8;
  v36 = sub_1C106E590();
  v29[7] = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v35 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_1C106F874();
  v29[6] = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v31 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1C106F868();
  MEMORY[0x1E0C80A78](v11);
  v29[4] = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1C106D1F8();
  MEMORY[0x1E0C80A78](v13);
  v14 = sub_1C106EB24();
  v33 = *(_QWORD *)(v14 - 8);
  v34 = v14;
  MEMORY[0x1E0C80A78](v14);
  v40 = (char *)v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v41 = (char *)v29 - v17;
  v18 = sub_1C106FB50();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)v29 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106E800();
  sub_1C07803B8(&qword_1EF642190, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D0A0], MEMORY[0x1E0D3D0C0]);
  sub_1C1070C0C();
  sub_1C106FB44();
  v39 = sub_1C106FB20();
  v23 = v22;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  if (v23 >> 60 != 15)
  {
    sub_1C106D030();
    sub_1C07803B8((unint64_t *)&qword_1ED762B30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9940], MEMORY[0x1E0CA9930]);
    sub_1C106F85C();
    v28 = (char *)&loc_1C0BF2920 + *((int *)qword_1C0BF2DA8 + (v23 >> 62));
    v29[3] = a1;
    v29[2] = v23;
    __asm { BR              X10 }
  }
  v42 = 0;
  v43 = 0xE000000000000000;
  sub_1C1070774();
  swift_bridgeObjectRelease();
  v42 = 0xD00000000000001FLL;
  v43 = 0x80000001C1104370;
  sub_1C1070C0C();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  v24 = v42;
  v25 = v43;
  sub_1C0BEBC20();
  swift_allocError();
  *(_QWORD *)v26 = v24;
  *(_QWORD *)(v26 + 8) = v25;
  *(_BYTE *)(v26 + 16) = 3;
  return swift_willThrow();
}

uint64_t sub_1C0BF2DB8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v40 = a5;
  v41 = a1;
  v44 = a3;
  v45 = a4;
  v42 = a6;
  v43 = a2;
  v6 = sub_1C07ACF80((uint64_t *)&unk_1ED75EA40);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C106E590();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1C106B29C();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1C106E41C();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106B08C();
  v20 = v46;
  result = sub_1C0BEBC5C((uint64_t)v15);
  if (!v20)
  {
    v46 = v17;
    v39 = v16;
    v22 = sub_1C106B0C8();
    v24 = v23;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C089AC48(v22, v24, v41);
    swift_bridgeObjectRelease();
    if (sub_1C07B2D80((uint64_t)v8, 1, v9) == 1)
    {
      sub_1C0784B30((uint64_t)v8, (uint64_t *)&unk_1ED75EA40);
      v25 = v9;
      v26 = v42;
      v27 = v22;
    }
    else
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
      v28 = sub_1C106E530();
      v24 = v29;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      v25 = v9;
      v27 = v28;
      v26 = v42;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v26, v43, v25);
    v30 = (int *)type metadata accessor for LiveGlobalKnowledgeTriple();
    v31 = v26 + v30[5];
    v32 = v26;
    v33 = v46;
    v34 = v39;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 16))(v31, v44, v39);
    v35 = v32 + v30[6];
    v36 = sub_1C106EB24();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v35, v45, v36);
    (*(void (**)(uint64_t, char *, uint64_t))(v33 + 32))(v32 + v30[7], v19, v34);
    v37 = (uint64_t *)(v32 + v30[8]);
    *v37 = v27;
    v37[1] = v24;
    *(_QWORD *)(v32 + v30[9]) = v40;
    *(_QWORD *)(v32 + v30[10]) = 0;
    *(_QWORD *)(v32 + v30[11]) = MEMORY[0x1E0DEE9D8];
    return sub_1C07B2D8C(v32, 0, 1, (uint64_t)v30);
  }
  return result;
}

uint64_t sub_1C0BF308C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LiveGlobalKnowledgeTriple();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0BF30D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1EF642198);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0BF3118@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1C0BF2DB8(v1[2], v1[3], v1[4], v1[5], v1[6], a1);
}

uint64_t dispatch thunk of LiveGlobalKnowledgeApiProtocol.idSearch(request:timeoutMs:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t LiveGlobalKnowledgeTriple.description.getter()
{
  uint64_t v0;

  sub_1C1070774();
  swift_bridgeObjectRelease();
  sub_1C106E530();
  sub_1C078F17C();
  sub_1C0775844();
  sub_1C0779DC0();
  sub_1C078F8D8();
  sub_1C0785148();
  sub_1C0789F80();
  sub_1C0778580();
  sub_1C0779DC0();
  sub_1C077AEBC();
  sub_1C077F344();
  sub_1C077B5B4();
  sub_1C0779DC0();
  sub_1C07AB8A0();
  sub_1C0789F80();
  sub_1C0778580();
  sub_1C0779DC0();
  sub_1C0785148();
  sub_1C0789F80();
  sub_1C0778580();
  sub_1C0779DC0();
  sub_1C07AD2A8();
  sub_1C078F17C();
  sub_1C0775834();
  sub_1C0779DC0();
  sub_1C07AD2A8();
  sub_1C0789F80();
  sub_1C0778580();
  sub_1C0779DC0();
  v0 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  MEMORY[0x1C3BA683C](v0, &type metadata for LiveGlobalKnowledgeGraphClientSet);
  sub_1C078F17C();
  sub_1C07767AC();
  sub_1C0775844();
  sub_1C106FC94();
  return 91;
}

uint64_t Array<A>.toIdString.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = sub_1C078F8D8();
  MEMORY[0x1E0C80A78](v3);
  sub_1C0780A08();
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
    return 0;
  v6 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v7 = *(_QWORD *)(v4 + 72);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  do
  {
    sub_1C0B54CCC(v6, v1);
    sub_1C106E530();
    sub_1C0779DC0();
    sub_1C106E1E8();
    sub_1C079F6A4();
    sub_1C0775894();
    sub_1C0779DC0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C106FC94();
    sub_1C07785A0();
    sub_1C0779DC0();
    sub_1C106EADC();
    sub_1C079F6A4();
    sub_1C0775894();
    sub_1C0779DC0();
    sub_1C106E1E8();
    sub_1C079F6A4();
    sub_1C0775894();
    sub_1C106FC94();
    sub_1C0775894();
    sub_1C106FC94();
    sub_1C0775894();
    sub_1C0B54D10(v1);
    v6 += v7;
    --v5;
  }
  while (v5);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1C0BF3454()
{
  unint64_t v0;

  v0 = sub_1C1070A2C();
  sub_1C07767AC();
  if (v0 >= 8)
    return 8;
  else
    return v0;
}

uint64_t sub_1C0BF3498(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0BF34CC + 4 * byte_1C10A7150[a1]))(0x7463656A627573, 0xE700000000000000);
}

uint64_t sub_1C0BF34CC()
{
  return 0x7461636964657270;
}

uint64_t sub_1C0BF34E8()
{
  return 0x6E6F6974616C6572;
}

unint64_t sub_1C0BF350C()
{
  return 0xD000000000000015;
}

uint64_t sub_1C0BF3528()
{
  return 0x7463656A626FLL;
}

uint64_t sub_1C0BF353C()
{
  return 0x73656D69546C7474;
}

uint64_t sub_1C0BF355C()
{
  return 0x6D617473656D6974;
}

uint64_t sub_1C0BF357C()
{
  return 0x73746E65696C63;
}

void sub_1C0BF3590()
{
  sub_1C08C4C40();
}

void sub_1C0BF359C()
{
  unsigned __int8 *v0;

  sub_1C0A53FA8(*v0);
}

void sub_1C0BF35A4()
{
  sub_1C08C9358();
}

void sub_1C0BF35AC(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1C0A54508(a1, *v1);
}

uint64_t sub_1C0BF35B4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C0BF3454();
  *a1 = result;
  return result;
}

uint64_t sub_1C0BF35E0@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1C0BF3498(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C0BF3608()
{
  sub_1C0BF6A00();
  return sub_1C106BEE4();
}

uint64_t sub_1C0BF3640()
{
  sub_1C0B54D4C();
  return sub_1C106BECC();
}

uint64_t sub_1C0BF3678()
{
  sub_1C0BF69C4();
  return sub_1C106C16C();
}

uint64_t sub_1C0BF36B0()
{
  sub_1C0BF69C4();
  return sub_1C106C160();
}

uint64_t LiveGlobalKnowledgeTriple.subject.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_1C106E590();
  v0 = sub_1C07759A0();
  return sub_1C077C20C(v0, v1, v2, v3);
}

uint64_t LiveGlobalKnowledgeTriple.predicate.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_1C078F8D8();
  sub_1C079480C();
  v0 = sub_1C07759A0();
  return sub_1C077C20C(v0, v1, v2, v3);
}

uint64_t LiveGlobalKnowledgeTriple.relationshipId.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_1C078F8D8();
  sub_1C077D8EC();
  v0 = sub_1C07759A0();
  return sub_1C077C20C(v0, v1, v2, v3);
}

uint64_t LiveGlobalKnowledgeTriple.relationshipPredicate.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_1C078F8D8();
  sub_1C079480C();
  v0 = sub_1C07759A0();
  return sub_1C077C20C(v0, v1, v2, v3);
}

uint64_t LiveGlobalKnowledgeTriple.object.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(sub_1C078F8D8() + 32));
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return v1;
}

uint64_t LiveGlobalKnowledgeTriple.ttlTimestamp.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(sub_1C078F8D8() + 36));
}

uint64_t LiveGlobalKnowledgeTriple.timestamp.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(sub_1C078F8D8() + 40));
}

uint64_t LiveGlobalKnowledgeTriple.clients.getter()
{
  sub_1C078F8D8();
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

uint64_t LiveGlobalKnowledgeTriple.toIdString.getter()
{
  uint64_t v1;

  v1 = sub_1C106E530();
  sub_1C0779DC0();
  sub_1C078F8D8();
  sub_1C0785148();
  sub_1C078D4AC();
  sub_1C0778580();
  sub_1C0779DC0();
  sub_1C077AEBC();
  sub_1C077F344();
  sub_1C077B5B4();
  sub_1C0779DC0();
  sub_1C07AB8A0();
  sub_1C078D4AC();
  sub_1C0778580();
  sub_1C0779DC0();
  sub_1C0785148();
  sub_1C106FC94();
  sub_1C07767AC();
  return v1;
}

void LiveGlobalKnowledgeTriple.hash(into:)()
{
  sub_1C106E590();
  sub_1C07803B8((unint64_t *)&qword_1ED7618F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE40]);
  sub_1C106FA0C();
  sub_1C078F8D8();
  sub_1C079480C();
  sub_1C07803B8(&qword_1ED75EA28, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC68]);
  sub_1C078D6D0();
  sub_1C077D8EC();
  sub_1C07803B8(&qword_1ED761910, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D450], MEMORY[0x1E0D3D468]);
  sub_1C106FA0C();
  sub_1C078D6D0();
  sub_1C077AEBC();
  sub_1C07BCFE4();
  sub_1C077B5B4();
  sub_1C1070E34();
  sub_1C1070E34();
  sub_1C0BF4E44();
}

void static LiveGlobalKnowledgeTriple.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  BOOL v9;

  if ((sub_1C106E560() & 1) != 0
    && (v4 = (int *)sub_1C078F8D8(), (sub_1C077D1FC(v4[5]) & 1) != 0)
    && (sub_1C106EB00() & 1) != 0
    && (sub_1C077D1FC(v4[7]) & 1) != 0
    && ((v5 = v4[8], v6 = *(_QWORD *)(a1 + v5), v7 = *(_QWORD *)(a1 + v5 + 8), v8 = (_QWORD *)(a2 + v5), v6 == *v8)
      ? (v9 = v7 == v8[1])
      : (v9 = 0),
        (v9 || (sub_1C1070CB4() & 1) != 0)
     && *(_QWORD *)(a1 + v4[9]) == *(_QWORD *)(a2 + v4[9])
     && *(_QWORD *)(a1 + v4[10]) == *(_QWORD *)(a2 + v4[10])))
  {
    sub_1C0A30CCC(*(_QWORD *)(a1 + v4[11]), *(_QWORD *)(a2 + v4[11]));
  }
  else
  {
    sub_1C077671C();
  }
}

uint64_t sub_1C0BF3AD8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  char v12;

  v2 = a1 == 0x7463656A627573 && a2 == 0xE700000000000000;
  if (v2 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x7461636964657270 && a2 == 0xE900000000000065;
    if (v6 || (sub_1C1070CB4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6E6F6974616C6572 && a2 == 0xEE00644970696873;
      if (v7 || (sub_1C1070CB4() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000015 && a2 == 0x80000001C10DE890 || (sub_1C1070CB4() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v8 = a1 == 0x7463656A626FLL && a2 == 0xE600000000000000;
        if (v8 || (sub_1C1070CB4() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v9 = a1 == 0x73656D69546C7474 && a2 == 0xEC000000706D6174;
          if (v9 || (sub_1C1070CB4() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            v10 = a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070;
            if (v10 || (sub_1C1070CB4() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else if (a1 == 0x73746E65696C63 && a2 == 0xE700000000000000)
            {
              swift_bridgeObjectRelease();
              return 7;
            }
            else
            {
              v12 = sub_1C1070CB4();
              swift_bridgeObjectRelease();
              if ((v12 & 1) != 0)
                return 7;
              else
                return 8;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1C0BF3E44(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0BF3E78 + 4 * byte_1C10A7158[a1]))(0x7463656A627573, 0xE700000000000000);
}

uint64_t sub_1C0BF3E78()
{
  return 0x7461636964657270;
}

uint64_t sub_1C0BF3E94()
{
  return 0x6E6F6974616C6572;
}

unint64_t sub_1C0BF3EB8()
{
  return 0xD000000000000015;
}

uint64_t sub_1C0BF3ED4()
{
  return 0x7463656A626FLL;
}

uint64_t sub_1C0BF3EE8()
{
  return 0x73656D69546C7474;
}

uint64_t sub_1C0BF3F08()
{
  return 0x6D617473656D6974;
}

uint64_t sub_1C0BF3F28()
{
  return 0x73746E65696C63;
}

uint64_t sub_1C0BF3F3C()
{
  unsigned __int8 *v0;

  return sub_1C0BF3E44(*v0);
}

uint64_t sub_1C0BF3F44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0BF3AD8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0BF3F68()
{
  sub_1C0BF4E78();
  return sub_1C1070EE8();
}

uint64_t sub_1C0BF3F90()
{
  sub_1C0BF4E78();
  return sub_1C1070EF4();
}

void LiveGlobalKnowledgeTriple.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = sub_1C07ACF80(&qword_1EF6421A0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1C0778564();
  v7 = v6 - v5;
  sub_1C07A9480(a1, a1[3]);
  sub_1C0BF4E78();
  sub_1C1070EB8();
  sub_1C106E590();
  sub_1C07803B8(&qword_1ED759FB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE38]);
  sub_1C07B7C78();
  sub_1C077F744();
  if (!v1)
  {
    type metadata accessor for LiveGlobalKnowledgeTriple();
    sub_1C106E41C();
    sub_1C07803B8(&qword_1ED7606D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC60]);
    sub_1C077F744();
    sub_1C106EB24();
    sub_1C07803B8(&qword_1ED759FC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D450], MEMORY[0x1E0D3D460]);
    sub_1C07B7C78();
    sub_1C077F744();
    sub_1C077F744();
    sub_1C1070B7C();
    sub_1C07A1EC0(5);
    sub_1C07A1EC0(6);
    sub_1C07ACF80(&qword_1EF6421B0);
    sub_1C0BF4EB4(&qword_1EF6421B8, (uint64_t (*)(void))sub_1C0BEB7DC, MEMORY[0x1E0DEAF10]);
    sub_1C077F744();
  }
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  sub_1C07757D0();
}

void LiveGlobalKnowledgeTriple.hashValue.getter()
{
  sub_1C1070DF8();
  LiveGlobalKnowledgeTriple.hash(into:)();
  sub_1C1070E4C();
  sub_1C0775804();
}

void LiveGlobalKnowledgeTriple.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  void (*v29)(uint64_t, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;

  v39 = a2;
  v3 = sub_1C106EB24();
  v42 = *(_QWORD *)(v3 - 8);
  v43 = v3;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v4);
  sub_1C077AE40();
  v40 = v5;
  v49 = sub_1C106E41C();
  v51 = *(_QWORD *)(v49 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v38 - v10;
  v12 = sub_1C106E590();
  v44 = *(_QWORD *)(v12 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v13);
  sub_1C0778564();
  v16 = v15 - v14;
  v46 = sub_1C07ACF80(&qword_1EF6421C0);
  MEMORY[0x1E0C80A78](v46);
  sub_1C0778564();
  v19 = v18 - v17;
  v48 = type metadata accessor for LiveGlobalKnowledgeTriple();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v20);
  sub_1C077AE40();
  v52 = v21;
  v22 = a1[3];
  v47 = a1;
  sub_1C07A9480(a1, v22);
  sub_1C0BF4E78();
  v45 = v19;
  v23 = v50;
  sub_1C1070E94();
  v41 = v12;
  if (v23)
  {
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v47);
  }
  else
  {
    v50 = v8;
    LOBYTE(v54) = 0;
    sub_1C07803B8((unint64_t *)&unk_1ED761900, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE58]);
    sub_1C07B7C78();
    sub_1C0781EE0();
    v24 = v52;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 32))(v52, v16, v12);
    LOBYTE(v54) = 1;
    sub_1C07803B8((unint64_t *)&qword_1ED7618D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC88]);
    v25 = v11;
    v26 = v49;
    sub_1C07931A4();
    v27 = (int *)v48;
    v28 = v24 + *(int *)(v48 + 20);
    v29 = *(void (**)(uint64_t, char *, uint64_t))(v51 + 32);
    v29(v28, v25, v26);
    LOBYTE(v54) = 2;
    sub_1C07803B8(&qword_1ED761918, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D450], MEMORY[0x1E0D3D480]);
    sub_1C07B7C78();
    v30 = v40;
    v31 = v43;
    sub_1C0781EE0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 32))(v52 + v27[6], v30, v31);
    LOBYTE(v54) = 3;
    v32 = v50;
    sub_1C07931A4();
    v29(v52 + v27[7], v32, v26);
    LOBYTE(v54) = 4;
    v33 = sub_1C1070AA4();
    v34 = (uint64_t)v47;
    v35 = v52;
    v36 = (uint64_t *)(v52 + v27[8]);
    *v36 = v33;
    v36[1] = v37;
    *(_QWORD *)(v35 + v27[9]) = sub_1C0795B84(5);
    *(_QWORD *)(v35 + v27[10]) = sub_1C0795B84(6);
    sub_1C07ACF80(&qword_1EF6421B0);
    v53 = 7;
    sub_1C0BF4EB4(&qword_1EF6421C8, (uint64_t (*)(void))sub_1C0BEB7A0, MEMORY[0x1E0DEAF40]);
    sub_1C0781EE0();
    sub_1C07A4970();
    *(_QWORD *)(v35 + v27[11]) = v54;
    sub_1C0B54CCC(v35, v39);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v34);
    sub_1C0B54D10(v35);
  }
  sub_1C07757D0();
}

void sub_1C0BF47AC(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  LiveGlobalKnowledgeTriple.init(from:)(a1, a2);
}

void sub_1C0BF47C0(_QWORD *a1)
{
  LiveGlobalKnowledgeTriple.encode(to:)(a1);
}

uint64_t sub_1C0BF47D4()
{
  return 0x6172675F6576696CLL;
}

void sub_1C0BF4804()
{
  sub_1C1070DF8();
  LiveGlobalKnowledgeTriple.hash(into:)();
  sub_1C1070E4C();
  sub_1C0775804();
}

uint64_t sub_1C0BF4848()
{
  sub_1C07803B8(&qword_1EF642200, (uint64_t (*)(uint64_t))type metadata accessor for LiveGlobalKnowledgeTriple, (uint64_t)&protocol conformance descriptor for LiveGlobalKnowledgeTriple);
  return sub_1C106BDDC();
}

uint64_t sub_1C0BF48B4()
{
  sub_1C07803B8(&qword_1EF639EC0, (uint64_t (*)(uint64_t))type metadata accessor for LiveGlobalKnowledgeTriple, (uint64_t)&protocol conformance descriptor for LiveGlobalKnowledgeTriple);
  return sub_1C106BFD4();
}

uint64_t sub_1C0BF491C()
{
  sub_1C07803B8(&qword_1EF639EC0, (uint64_t (*)(uint64_t))type metadata accessor for LiveGlobalKnowledgeTriple, (uint64_t)&protocol conformance descriptor for LiveGlobalKnowledgeTriple);
  return sub_1C106BFC8();
}

uint64_t sub_1C0BF4978()
{
  sub_1C07803B8(&qword_1EF639EC0, (uint64_t (*)(uint64_t))type metadata accessor for LiveGlobalKnowledgeTriple, (uint64_t)&protocol conformance descriptor for LiveGlobalKnowledgeTriple);
  return sub_1C106BFBC();
}

uint64_t sub_1C0BF49D4()
{
  sub_1C07803B8(&qword_1EF6421F8, (uint64_t (*)(uint64_t))type metadata accessor for LiveGlobalKnowledgeTriple, (uint64_t)&protocol conformance descriptor for LiveGlobalKnowledgeTriple);
  return sub_1C106BD58();
}

uint64_t Array<A>.description.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  v3 = *(_QWORD *)(sub_1C078F8D8() - 8);
  v4 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v5 = *(_QWORD *)(v3 + 72);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  do
  {
    LiveGlobalKnowledgeTriple.description.getter();
    sub_1C078D4AC();
    sub_1C0778580();
    sub_1C106FC94();
    sub_1C0778580();
    v4 += v5;
    --v1;
  }
  while (v1);
  sub_1C07767AC();
  return 0;
}

void Array<A>.toIdStringSet.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = sub_1C078F8D8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1C0780A08();
  v5 = *(_QWORD *)(a1 + 16);
  v6 = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    sub_1C09D30E0();
    v7 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v8 = *(_QWORD *)(v4 + 72);
    do
    {
      sub_1C0B54CCC(v7, v1);
      v12 = sub_1C106E530();
      v13 = v9;
      sub_1C0779DC0();
      sub_1C106E1E8();
      sub_1C0787E04();
      sub_1C0775834();
      sub_1C0779DC0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C106FC94();
      swift_bridgeObjectRelease();
      sub_1C0779DC0();
      sub_1C106EADC();
      sub_1C0787E04();
      sub_1C0775834();
      sub_1C0779DC0();
      sub_1C106E1E8();
      sub_1C0787E04();
      sub_1C0775834();
      sub_1C0B54D10(v1);
      v6 = v14;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C09D30E0();
        v6 = v14;
      }
      v10 = *(_QWORD *)(v6 + 16);
      if (v10 >= *(_QWORD *)(v6 + 24) >> 1)
      {
        sub_1C09D30E0();
        v6 = v14;
      }
      *(_QWORD *)(v6 + 16) = v10 + 1;
      v11 = v6 + 16 * v10;
      *(_QWORD *)(v11 + 32) = v12;
      *(_QWORD *)(v11 + 40) = v13;
      v7 += v8;
      --v5;
    }
    while (v5);
  }
  sub_1C0898D28(v6);
}

uint64_t type metadata accessor for LiveGlobalKnowledgeTriple()
{
  uint64_t result;

  result = qword_1ED75E7F8;
  if (!qword_1ED75E7F8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C0BF4CE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  result = sub_1C07A71A8();
  if (v0)
  {
    v3 = v1 + 40;
    do
    {
      sub_1C077584C();
      sub_1C077F338();
      sub_1C0789F64();
      result = sub_1C0778580();
      v3 += 16;
      --v0;
    }
    while (v0);
  }
  return result;
}

void sub_1C0BF4D38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1C077AEA0();
  sub_1C07A71A8();
  v10 = v0;
  if (v0)
  {
    v2 = 0;
    do
    {
      v3 = v1 + 32 + 40 * v2;
      v4 = *(_QWORD *)(v3 + 16);
      v5 = *(_QWORD *)(v3 + 24);
      sub_1C077AEBC();
      sub_1C07796D8();
      sub_1C077584C();
      sub_1C0791CD4();
      if (v4)
      {
        sub_1C077D158();
        sub_1C1070E04();
        v6 = *(_QWORD *)(v4 + 16);
        if (v6)
        {
          sub_1C077584C();
          v7 = v4 + 40;
          do
          {
            sub_1C078123C();
            sub_1C078B214();
            sub_1C0775894();
            v7 += 16;
            --v6;
          }
          while (v6);
          sub_1C0778580();
        }
        if (v5)
        {
LABEL_9:
          sub_1C077D158();
          sub_1C1070E04();
          v8 = *(_QWORD *)(v5 + 16);
          if (v8)
          {
            sub_1C077AEBC();
            v9 = v5 + 40;
            do
            {
              sub_1C078123C();
              sub_1C078B214();
              sub_1C0775894();
              v9 += 16;
              --v8;
            }
            while (v8);
            sub_1C077B5B4();
          }
          goto LABEL_15;
        }
      }
      else
      {
        sub_1C077B7CC();
        if (v5)
          goto LABEL_9;
      }
      sub_1C077B7CC();
LABEL_15:
      ++v2;
      sub_1C07AA948();
      sub_1C077B5B4();
      sub_1C0778580();
      sub_1C0775844();
    }
    while (v2 != v10);
  }
  sub_1C0776728();
}

void sub_1C0BF4E44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C07A71A8();
  if (v0)
  {
    v2 = v1 + 32;
    do
    {
      v2 += 8;
      sub_1C1070E04();
      --v0;
    }
    while (v0);
  }
  sub_1C077671C();
}

unint64_t sub_1C0BF4E78()
{
  unint64_t result;

  result = qword_1EF6421A8;
  if (!qword_1EF6421A8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A75EC, &type metadata for LiveGlobalKnowledgeTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF6421A8);
  }
  return result;
}

uint64_t sub_1C0BF4EB4(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = sub_1C07D4BEC(&qword_1EF6421B0);
    v8 = a2();
    result = MEMORY[0x1C3BA8174](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0BF4F1C(uint64_t a1)
{
  uint64_t result;

  result = sub_1C07803B8(&qword_1EF639B90, (uint64_t (*)(uint64_t))type metadata accessor for LiveGlobalKnowledgeTriple, (uint64_t)&protocol conformance descriptor for LiveGlobalKnowledgeTriple);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0BF4F58(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1C07803B8(&qword_1EF641410, (uint64_t (*)(uint64_t))type metadata accessor for LiveGlobalKnowledgeTriple, (uint64_t)&protocol conformance descriptor for LiveGlobalKnowledgeTriple);
  result = sub_1C07803B8(&qword_1EF639EC0, (uint64_t (*)(uint64_t))type metadata accessor for LiveGlobalKnowledgeTriple, (uint64_t)&protocol conformance descriptor for LiveGlobalKnowledgeTriple);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1C0BF4FB4()
{
  return sub_1C07803B8(&qword_1ED754A68, (uint64_t (*)(uint64_t))type metadata accessor for LiveGlobalKnowledgeTriple, (uint64_t)&protocol conformance descriptor for LiveGlobalKnowledgeTriple);
}

uint64_t sub_1C0BF4FE0()
{
  return sub_1C07803B8(&qword_1EF6421D0, (uint64_t (*)(uint64_t))type metadata accessor for LiveGlobalKnowledgeTriple, (uint64_t)&protocol conformance descriptor for LiveGlobalKnowledgeTriple);
}

uint64_t sub_1C0BF500C()
{
  return sub_1C07803B8(&qword_1EF6421D8, (uint64_t (*)(uint64_t))type metadata accessor for LiveGlobalKnowledgeTriple, (uint64_t)&protocol conformance descriptor for LiveGlobalKnowledgeTriple);
}

uint64_t sub_1C0BF5038()
{
  return sub_1C07803B8((unint64_t *)qword_1ED74BFB0, (uint64_t (*)(uint64_t))type metadata accessor for LiveGlobalKnowledgeTriple, (uint64_t)&protocol conformance descriptor for LiveGlobalKnowledgeTriple);
}

uint64_t dispatch thunk of LiveGlobalKnowledgeTripleProtocol.ttlTimestamp.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of LiveGlobalKnowledgeTripleProtocol.timestamp.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of LiveGlobalKnowledgeTripleProtocol.clients.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

char *initializeBufferWithCopyOfBuffer for LiveGlobalKnowledgeTriple(char *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = (char *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1C106E590();
    (*(void (**)(char *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = &a1[v8];
    v10 = (char *)a2 + v8;
    v11 = sub_1C106E41C();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = &a1[v13];
    v15 = (char *)a2 + v13;
    v16 = sub_1C106EB24();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v12(&a1[a3[7]], (char *)a2 + a3[7], v11);
    v17 = a3[8];
    v18 = a3[9];
    v19 = &a1[v17];
    v20 = (uint64_t *)((char *)a2 + v17);
    v21 = v20[1];
    *(_QWORD *)v19 = *v20;
    *((_QWORD *)v19 + 1) = v21;
    *(_QWORD *)&a1[v18] = *(uint64_t *)((char *)a2 + v18);
    v22 = a3[11];
    *(_QWORD *)&a1[a3[10]] = *(uint64_t *)((char *)a2 + a3[10]);
    *(_QWORD *)&a1[v22] = *(uint64_t *)((char *)a2 + v22);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  return a1;
}

uint64_t destroy for LiveGlobalKnowledgeTriple(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;

  v4 = sub_1C106E590();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = sub_1C106E41C();
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v8 = a1 + a2[6];
  v9 = sub_1C106EB24();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v7(a1 + a2[7], v6);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LiveGlobalKnowledgeTriple(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_1C106E590();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1C106E41C();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_1C106EB24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v11(a1 + a3[7], a2 + a3[7], v10);
  v16 = a3[8];
  v17 = a3[9];
  v18 = (_QWORD *)(a1 + v16);
  v19 = (_QWORD *)(a2 + v16);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);
  v21 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v21) = *(_QWORD *)(a2 + v21);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

uint64_t assignWithCopy for LiveGlobalKnowledgeTriple(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;

  v6 = sub_1C106E590();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1C106E41C();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_1C106EB24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  v11(a1 + a3[7], a2 + a3[7], v10);
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for LiveGlobalKnowledgeTriple(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_1C106E590();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1C106E41C();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_1C106EB24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  v11(a1 + a3[7], a2 + a3[7], v10);
  v16 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  v17 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);
  return a1;
}

uint64_t assignWithTake for LiveGlobalKnowledgeTriple(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_1C106E590();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1C106E41C();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_1C106EB24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v11(a1 + a3[7], a2 + a3[7], v10);
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (uint64_t *)(a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  v21 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v21) = *(_QWORD *)(a2 + v21);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LiveGlobalKnowledgeTriple()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1C0BF56C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  sub_1C077C4C0();
  sub_1C0786404();
  if (v9)
  {
    v7 = v6;
    v8 = v4;
  }
  else
  {
    sub_1C106E41C();
    sub_1C0786404();
    if (v9)
    {
      v7 = v10;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      sub_1C077D8EC();
      sub_1C0786404();
      if (!v12)
      {
        sub_1C077671C();
        return;
      }
      v7 = v13;
      v11 = *(int *)(a3 + 24);
    }
    v8 = v4 + v11;
  }
  sub_1C07B2D80(v8, v3, v7);
}

uint64_t storeEnumTagSinglePayload for LiveGlobalKnowledgeTriple()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1C0BF576C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  sub_1C077C4C0();
  sub_1C077AFFC();
  if (v10)
  {
    v8 = v7;
    v9 = v5;
  }
  else
  {
    sub_1C106E41C();
    sub_1C077AFFC();
    if (v10)
    {
      v8 = v11;
      v12 = a4[5];
    }
    else
    {
      sub_1C077D8EC();
      sub_1C077AFFC();
      if (!v13)
      {
        *(_QWORD *)(v5 + a4[8] + 8) = (v4 - 1);
        sub_1C077671C();
        return;
      }
      v8 = v14;
      v12 = a4[6];
    }
    v9 = v5 + v12;
  }
  sub_1C07B2D8C(v9, v4, v4, v8);
}

uint64_t sub_1C0BF5800()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_1C106E590();
  if (v1 <= 0x3F)
  {
    result = sub_1C106E41C();
    if (v2 <= 0x3F)
    {
      result = sub_1C106EB24();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LiveGlobalKnowledgeTriple.CodingKeys()
{
  return &type metadata for LiveGlobalKnowledgeTriple.CodingKeys;
}

unint64_t sub_1C0BF58E4()
{
  unint64_t result;

  result = qword_1EF6421E0;
  if (!qword_1EF6421E0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A75C4, &type metadata for LiveGlobalKnowledgeTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF6421E0);
  }
  return result;
}

unint64_t sub_1C0BF5924()
{
  unint64_t result;

  result = qword_1EF6421E8;
  if (!qword_1EF6421E8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A7534, &type metadata for LiveGlobalKnowledgeTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF6421E8);
  }
  return result;
}

unint64_t sub_1C0BF5964()
{
  unint64_t result;

  result = qword_1EF6421F0;
  if (!qword_1EF6421F0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A755C, &type metadata for LiveGlobalKnowledgeTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF6421F0);
  }
  return result;
}

uint64_t sub_1C0BF59A0()
{
  uint64_t v0;
  uint64_t result;

  result = sub_1C07A71A8();
  if (v0)
    __asm { BR              X9 }
  return result;
}

void sub_1C0BF5B04()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C07A71A8();
  if (v0)
  {
    v2 = (_BYTE *)(v1 + 40);
    do
    {
      if ((*v2 & 1) != 0)
      {
        sub_1C1070E04();
        sub_1C07796D8();
        v3 = sub_1C077F338();
        sub_1C0A10E70(v3, v4);
      }
      else
      {
        sub_1C1070E04();
        sub_1C07796D8();
        v5 = sub_1C077F338();
        sub_1C0A11190(v5, v6);
      }
      sub_1C0775844();
      v2 += 16;
      --v0;
    }
    while (v0);
  }
  sub_1C077671C();
}

void sub_1C0BF5B74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C07A5194();
  v2 = sub_1C07A71A8();
  if (v0)
    ((void (*)(uint64_t))((char *)&loc_1C0BF5C00 + 4 * byte_1C10A7169[*(unsigned __int8 *)(v1 + 32)]))(v2);
  else
    sub_1C0781AD8();
}

void sub_1C0BF5DAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C07A5194();
  v2 = sub_1C07A71A8();
  if (v0)
    ((void (*)(uint64_t))((char *)&loc_1C0BF5E30 + 4 * byte_1C10A7174[*(unsigned __int8 *)(v1 + 32)]))(v2);
  else
    sub_1C0781AD8();
}

void sub_1C0BF5FD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C077AEA0();
  v2 = sub_1C07A71A8();
  if (v0)
    ((void (*)(uint64_t, uint64_t))((char *)&loc_1C0BF6044 + 4 * byte_1C10A717F[*(unsigned __int8 *)(v1 + 32)]))(v2, 1702259052);
  else
    sub_1C0776728();
}

uint64_t sub_1C0BF61A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  __int128 *v5;
  __int128 v6;
  __int128 v7;
  _OWORD v8[2];

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_1C1070E04();
  if (v3)
  {
    v5 = (__int128 *)(a2 + 32);
    do
    {
      v6 = v5[1];
      v7 = *v5;
      v8[0] = v6;
      *(_OWORD *)((char *)v8 + 10) = *(__int128 *)((char *)v5 + 26);
      sub_1C07B102C((uint64_t)&v7);
      sub_1C0EACB48();
      result = sub_1C07B35A8((uint64_t)&v7);
      v5 += 3;
      --v3;
    }
    while (v3);
  }
  return result;
}

void sub_1C0BF6224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C07A5194();
  v2 = sub_1C07A71A8();
  if (v0)
    ((void (*)(uint64_t))((char *)&loc_1C0BF62A4 + 4 * byte_1C10A718A[*(unsigned __int8 *)(v1 + 32)]))(v2);
  else
    sub_1C0781AD8();
}

void sub_1C0BF63DC()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 *v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;

  sub_1C077AEA0();
  sub_1C07A71A8();
  if (v0)
  {
    v2 = (unsigned __int8 *)(v1 + 75);
    do
    {
      v3 = *(_QWORD *)(v2 - 11);
      v4 = *(v2 - 3);
      v6 = *(v2 - 2);
      v7 = *(v2 - 1);
      v5 = *v2;
      sub_1C07B3100(*(v2 - 43));
      sub_1C077AEBC();
      sub_1C07796D8();
      sub_1C077584C();
      sub_1C078B214();
      sub_1C0775894();
      sub_1C07796D8();
      sub_1C077F338();
      sub_1C0A8C7BC();
      sub_1C0775844();
      sub_1C077584C();
      sub_1C0BF6524();
      sub_1C0778580();
      if (v3)
      {
        sub_1C077D158();
        sub_1C077AEBC();
        sub_1C07BCFE4();
        sub_1C077B5B4();
      }
      else
      {
        sub_1C077B7CC();
      }
      if (v4 != 2)
        sub_1C077D158();
      sub_1C07AA948();
      if (v6 != 2)
        sub_1C077D158();
      sub_1C07AA948();
      if (v7 != 2)
        sub_1C077D158();
      sub_1C07AA948();
      if (v5 != 2)
        sub_1C077D158();
      v2 += 48;
      sub_1C07AA948();
      sub_1C077B5B4();
      sub_1C0778580();
      sub_1C0775844();
      --v0;
    }
    while (v0);
  }
  sub_1C0776728();
}

void sub_1C0BF6524()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_1C07A5194();
  sub_1C07A71A8();
  v13 = v0;
  if (v0)
  {
    v2 = 0;
    v12 = v1 + 32;
    do
    {
      v3 = v12 + 56 * v2;
      v4 = *(unsigned __int8 *)(v3 + 16);
      v6 = *(_QWORD *)(v3 + 24);
      v5 = *(_QWORD *)(v3 + 32);
      v7 = *(_QWORD *)(v3 + 48);
      if (*(_QWORD *)(v3 + 8))
      {
        sub_1C077D158();
        sub_1C0778624();
        swift_bridgeObjectRetain_n();
        sub_1C077584C();
        sub_1C07796D8();
        sub_1C07BCFE4();
        sub_1C077B5B4();
      }
      else
      {
        sub_1C077B7CC();
        sub_1C0778624();
        sub_1C077584C();
        sub_1C07796D8();
      }
      if (v4 != 2)
        sub_1C077D158();
      sub_1C1070E10();
      if (v6)
      {
        sub_1C077D158();
        sub_1C1070E04();
        v8 = *(_QWORD *)(v6 + 16);
        if (v8)
        {
          sub_1C077584C();
          v9 = v6 + 40;
          do
          {
            sub_1C07799DC();
            sub_1C07B48B8();
            sub_1C07785A0();
            v9 += 16;
            --v8;
          }
          while (v8);
          sub_1C0778580();
        }
        if (!v5)
        {
LABEL_21:
          sub_1C077B7CC();
          if (!v7)
            goto LABEL_22;
          goto LABEL_19;
        }
      }
      else
      {
        sub_1C077B7CC();
        if (!v5)
          goto LABEL_21;
      }
      sub_1C077D158();
      sub_1C1070E04();
      v10 = *(_QWORD *)(v5 + 16);
      if (v10)
      {
        sub_1C07796D8();
        v11 = v5 + 40;
        do
        {
          sub_1C07799DC();
          sub_1C07B48B8();
          sub_1C07785A0();
          v11 += 16;
          --v10;
        }
        while (v10);
        sub_1C0775844();
      }
      if (!v7)
      {
LABEL_22:
        sub_1C077B7CC();
        swift_bridgeObjectRelease();
        goto LABEL_23;
      }
LABEL_19:
      sub_1C077D158();
      sub_1C0778624();
      sub_1C106FC28();
      swift_bridgeObjectRelease_n();
LABEL_23:
      ++v2;
      sub_1C077B5B4();
      sub_1C0778580();
      sub_1C0775844();
    }
    while (v2 != v13);
  }
  sub_1C0781AD8();
}

uint64_t sub_1C0BF66C8()
{
  uint64_t v0;
  uint64_t result;

  result = sub_1C07A71A8();
  if (v0)
    __asm { BR              X9 }
  return result;
}

uint64_t _s24IntelligencePlatformCore25LiveGlobalKnowledgeTripleV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1C0BF6840 + 4 * byte_1C10A71A3[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1C0BF6874 + 4 * byte_1C10A719E[v4]))();
}

uint64_t sub_1C0BF6874(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0BF687C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0BF6884);
  return result;
}

uint64_t sub_1C0BF6890(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0BF6898);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1C0BF689C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0BF68A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LiveGlobalKnowledgeTripleColumn()
{
  return &type metadata for LiveGlobalKnowledgeTripleColumn;
}

unint64_t sub_1C0BF68C4()
{
  unint64_t result;

  result = qword_1ED741800;
  if (!qword_1ED741800)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A76B0, &type metadata for LiveGlobalKnowledgeTripleColumn);
    atomic_store(result, (unint64_t *)&qword_1ED741800);
  }
  return result;
}

unint64_t sub_1C0BF6904()
{
  unint64_t result;

  result = qword_1ED74CAE0;
  if (!qword_1ED74CAE0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A7660, &type metadata for LiveGlobalKnowledgeTripleColumn);
    atomic_store(result, (unint64_t *)&qword_1ED74CAE0);
  }
  return result;
}

unint64_t sub_1C0BF6944()
{
  unint64_t result;

  result = qword_1ED74CAD8;
  if (!qword_1ED74CAD8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A7688, &type metadata for LiveGlobalKnowledgeTripleColumn);
    atomic_store(result, (unint64_t *)&qword_1ED74CAD8);
  }
  return result;
}

unint64_t sub_1C0BF6984()
{
  unint64_t result;

  result = qword_1EF642208;
  if (!qword_1EF642208)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A7788, &type metadata for LiveGlobalKnowledgeTripleColumn);
    atomic_store(result, (unint64_t *)&qword_1EF642208);
  }
  return result;
}

unint64_t sub_1C0BF69C4()
{
  unint64_t result;

  result = qword_1ED74CAE8;
  if (!qword_1ED74CAE8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A76D8, &type metadata for LiveGlobalKnowledgeTripleColumn);
    atomic_store(result, (unint64_t *)&qword_1ED74CAE8);
  }
  return result;
}

unint64_t sub_1C0BF6A00()
{
  unint64_t result;

  result = qword_1ED74CAF0[0];
  if (!qword_1ED74CAF0[0])
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A7710, &type metadata for LiveGlobalKnowledgeTripleColumn);
    atomic_store(result, qword_1ED74CAF0);
  }
  return result;
}

void sub_1C0BF6A3C(double a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD v6[4];

  *(double *)&v6[2] = a1;
  swift_retain();
  sub_1C077FF50((uint64_t)sub_1C0BF6E38, (uint64_t)v6);
  swift_release();
  if (qword_1ED762B20 != -1)
    swift_once();
  v2 = sub_1C106F544();
  sub_1C079E000(v2, (uint64_t)qword_1ED78D9F8);
  v3 = sub_1C106F538();
  v4 = sub_1C10703A8();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v5 = 134217984;
    *(double *)&v6[3] = a1;
    sub_1C10705AC();
    _os_log_impl(&dword_1C0771000, v3, v4, "GlobalKnowledgeStore: Deleted rows with ttlTimestamp before %f", v5, 0xCu);
    MEMORY[0x1C3BA8270](v5, -1, -1);
  }

}

uint64_t sub_1C0BF6B7C(double a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24[3];
  ValueMetadata *v25;
  unint64_t v26;
  uint64_t v27[3];
  uint64_t v28;
  uint64_t v29;

  v19 = sub_1C07ACF80(&qword_1ED741578);
  v2 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C07ACF80((uint64_t *)&unk_1ED741580);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for LiveGlobalKnowledgeTriple();
  v25 = &type metadata for LiveGlobalKnowledgeTripleColumn;
  v26 = sub_1C0BF69C4();
  LOBYTE(v24[0]) = 5;
  v22 = MEMORY[0x1E0DEB070];
  v23 = MEMORY[0x1E0D249C8];
  *(double *)v21 = a1;
  v9 = sub_1C106BCBC();
  v28 = v9;
  v29 = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v27);
  sub_1C106C0C4();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v21);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v24);
  sub_1C0BF6E50();
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v27);
  v10 = v20;
  sub_1C106C124();
  result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (!v10)
  {
    v12 = MEMORY[0x1E0DEB070];
    v13 = v4;
    if (qword_1ED7417C8 != -1)
      swift_once();
    v14 = sub_1C106C49C();
    v15 = sub_1C079E000(v14, (uint64_t)qword_1ED78C3F0);
    v25 = (ValueMetadata *)v14;
    v26 = MEMORY[0x1E0D24668];
    v16 = sub_1C079DFC4(v24);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v16, v15, v14);
    v22 = v12;
    v23 = MEMORY[0x1E0D249C8];
    *(double *)v21 = a1;
    v28 = v9;
    v29 = MEMORY[0x1E0D23DC0];
    sub_1C079DFC4(v27);
    sub_1C106C0C4();
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v21);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v24);
    sub_1C0A776F0();
    sub_1C106B968();
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v27);
    v17 = v19;
    sub_1C106C124();
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v13, v17);
  }
  return result;
}

uint64_t sub_1C0BF6E38()
{
  uint64_t v0;

  return sub_1C0BF6B7C(*(double *)(v0 + 16));
}

unint64_t sub_1C0BF6E50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED74BFB0[0];
  if (!qword_1ED74BFB0[0])
  {
    v1 = type metadata accessor for LiveGlobalKnowledgeTriple();
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for LiveGlobalKnowledgeTriple, v1);
    atomic_store(result, (unint64_t *)qword_1ED74BFB0);
  }
  return result;
}

uint64_t sub_1C0BF6E90(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  _BYTE *v8;
  char v10;

  if ((a2 & 0x1000000000000000) != 0 || !(a2 & 0x2000000000000000 | a1 & 0x1000000000000000))
  {
    sub_1C1070750();
    sub_1C07767AC();
    v6 = v10;
  }
  else
  {
    MEMORY[0x1E0C80A78](a1);
    if ((a2 & 0x2000000000000000) != 0)
    {
      v6 = (v3 > 0x20u || (sub_1C079AD88(), (v7 & 1) == 0))
        && (v8 = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0
        && *v8 == 0;
      sub_1C07767AC();
    }
    else
    {
      if ((v3 & 0x1000000000000000) != 0)
      {
        v4 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        v5 = v3 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        v4 = sub_1C10707F8();
      }
      v6 = sub_1C0BF76B0(v4, v5, (void (*)(uint64_t *__return_ptr))sub_1C0BF77BC);
      sub_1C07767AC();
    }
  }
  if ((v6 & 1) != 0)
    return 0;
  else
    return 0;
}

void LocationGeoHashBlockingFunction.blockValue<A>(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[36];

  v0 = sub_1C106E41C();
  v7[8] = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  MEMORY[0x1E0C80A78](v1);
  MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  v7[9] = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[0] = v4;
  MEMORY[0x1E0C80A78](v5);
  v7[5] = (char *)v7 - v6;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v7[35] = sub_1C106FF10();
  sub_1C07A55AC();
}

void sub_1C0BF763C()
{
  LocationGeoHashBlockingFunction.blockValue<A>(_:)();
}

void sub_1C0BF7650(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  unsigned int v3;
  BOOL v4;
  uint64_t v5;
  BOOL v6;
  char v7;

  v3 = *a1;
  v4 = v3 > 0x20;
  v5 = (1 << v3) & 0x100003E01;
  v6 = v4 || v5 == 0;
  if (v6 && _swift_stdlib_strtod_clocale())
    sub_1C07A26A8();
  else
    v7 = 0;
  *a2 = v7;
}

uint64_t sub_1C0BF76B0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  uint64_t v3;
  char v4;
  uint64_t var2;

  if (a1)
  {
    a3(&var2);
    if (!v3)
      v4 = var2;
  }
  else
  {
    ((void (*)(uint64_t *__return_ptr, _QWORD, _QWORD))a3)((uint64_t *)((char *)&var2 + 1), 0, 0);
    if (!v3)
      v4 = BYTE1(var2);
  }
  return v4 & 1;
}

uint64_t sub_1C0BF7704(uint64_t a1, uint64_t a2, double a3, double a4)
{
  __int128 v9;
  ValueMetadata *v10;
  _UNKNOWN **v11;

  v10 = &type metadata for GeoHashProvider;
  v11 = &off_1E7A23B90;
  *(_QWORD *)(a2 + 80) = 0;
  *(_BYTE *)(a2 + 88) = 1;
  *(_QWORD *)(a2 + 96) = 0;
  *(_BYTE *)(a2 + 104) = 1;
  *(_QWORD *)(a2 + 112) = 0;
  *(_BYTE *)(a2 + 120) = 1;
  *(_QWORD *)(a2 + 128) = sub_1C106F97C();
  *(double *)(a2 + 16) = a3;
  *(double *)(a2 + 24) = a4;
  *(_QWORD *)(a2 + 32) = a1;
  sub_1C077DD60(&v9, a2 + 40);
  return a2;
}

ValueMetadata *type metadata accessor for LocationGeoHashBlockingFunction()
{
  return &type metadata for LocationGeoHashBlockingFunction;
}

void sub_1C0BF77BC(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  (*(void (**)(uint64_t *__return_ptr))(v1 + 16))(&v4);
  if (!v2)
    *a1 = v4;
  sub_1C07806B4();
}

uint64_t sub_1C0BF77F0(uint64_t result, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  _BYTE v17[24];
  uint64_t v18;
  __int128 v19[2];
  uint64_t v20;

  v3 = result;
  v4 = MEMORY[0x1E0DEE9D8];
  v20 = MEMORY[0x1E0DEE9D8];
  v5 = *(_QWORD *)(result + 16);
  if (v5)
  {
    v6 = a2;
    v7 = 0;
    v8 = result + 32;
    v15 = result;
    v16 = a2;
    while (v7 < *(_QWORD *)(v3 + 16))
    {
      sub_1C07D6D1C(v8, (uint64_t)v19);
      v9 = sub_1C0BF8EE0(v19, v6);
      if (v2)
      {
        _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v19);
        swift_bridgeObjectRelease();
        swift_release();
        return v4;
      }
      if ((v9 & 1) != 0)
      {
        sub_1C077DD60(v19, (uint64_t)v17);
        v10 = v20;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C09D46CC();
          v10 = v20;
        }
        if (*(_QWORD *)(v10 + 16) >= *(_QWORD *)(v10 + 24) >> 1)
          sub_1C09D46CC();
        v4 = v18;
        v11 = sub_1C079D180((uint64_t)v17, v18);
        v12 = MEMORY[0x1E0C80A78](v11);
        (*(void (**)(char *, double))(v14 + 16))((char *)&v15 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
        sub_1C0BFE9AC();
        result = _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v17);
        v3 = v15;
        v6 = v16;
      }
      else
      {
        result = _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v19);
      }
      ++v7;
      v8 += 40;
      if (v5 == v7)
      {
        v4 = v20;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v4;
  }
  return result;
}

void LocationMatcher.init(stores:source:pipelineType:)(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD);

  v7 = *a3;
  v8 = (int *)type metadata accessor for LocationMatcher();
  *(_BYTE *)(a4 + v8[8]) = 2;
  v9 = sub_1C07814F0();
  sub_1C07E6C80(v9, v10, v11);
  sub_1C07E6C80(a2, a4 + v8[5], (uint64_t (*)(_QWORD))type metadata accessor for Source);
  *(_BYTE *)(a4 + v8[6]) = v7;
  *(_QWORD *)(a4 + v8[7]) = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PhaseStores() + 28));
  swift_retain();
  *(_QWORD *)(a4 + v8[10]) = sub_1C0BF7B88();
  __asm { BR              X9 }
}

void sub_1C0BF7A90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  v4 = sub_1C07785B0();
  sub_1C077960C();
  if ((v4 & 1) != 0)
  {
    v5 = 0;
  }
  else
  {
    if (qword_1ED750B08 != -1)
      swift_once();
    v5 = sub_1C07D7474(0x6F635F6C65646F6DLL, 0xEC0000006769666ELL);
  }
  sub_1C07B1F90(v3, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C07B1F90(v1, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  *(_QWORD *)(v0 + *(int *)(v2 + 36)) = v5;
}

id sub_1C0BF7B88()
{
  id v0;

  v0 = objc_allocWithZone(MEMORY[0x1E0CB3560]);
  return sub_1C0B6A550(16);
}

uint64_t sub_1C0BF7D20(uint64_t a1, unint64_t a2, void *a3)
{
  id v3;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  uint64_t v22;
  int64_t v23;
  id v24;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36[5];

  if (a3)
  {
    v7 = (void *)sub_1C106FAF0();
    sub_1C07796D8();
    v8 = sub_1C106FD0C();
    sub_1C0775844();
    v3 = objc_msgSend(a3, sel_matchesInString_options_range_, v7, 0, 0, v8);

    sub_1C0BFE87C();
    v9 = sub_1C106FF04();

    if (v9 >> 62)
      goto LABEL_37;
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    while (v10)
    {
      v35 = MEMORY[0x1E0DEE9E0];
      v33 = v9 & 0xC000000000000001;
      v30 = v9 + 32;
      sub_1C07767B4();
      a2 = 0;
      v31 = v10;
      v32 = v9;
      while (1)
      {
        if (v33)
        {
          v11 = sub_1C078109C();
          v12 = (id)MEMORY[0x1C3BA70DC](v11);
        }
        else
        {
          v12 = *(id *)(v30 + 8 * a2);
        }
        a1 = (uint64_t)v12;
        if (__OFADD__(a2++, 1))
          break;
        v14 = sub_1C0BFE8B8(v12);
        if (v14)
        {
          LOBYTE(v3) = v14;
          v34 = a1;
          sub_1C0861BD0(v36);
          v15 = v36[0];
          v9 = v36[1];
          v16 = v36[3];
          a1 = v36[4];
          v17 = (unint64_t)(v36[2] + 64) >> 6;
          sub_1C077AEBC();
          if (a1)
          {
LABEL_11:
            v18 = __clz(__rbit64(a1));
            a1 &= a1 - 1;
            v19 = v18 | (v16 << 6);
            goto LABEL_30;
          }
          while (1)
          {
            v20 = v16 + 1;
            if (__OFADD__(v16, 1))
            {
              __break(1u);
              goto LABEL_36;
            }
            if (v20 >= v17)
              goto LABEL_32;
            v21 = *(_QWORD *)(v9 + 8 * v20);
            v22 = v16 + 1;
            if (!v21)
            {
              v22 = v16 + 2;
              if (v16 + 2 >= v17)
                goto LABEL_32;
              v21 = *(_QWORD *)(v9 + 8 * v22);
              if (!v21)
              {
                v22 = v16 + 3;
                if (v16 + 3 >= v17)
                  goto LABEL_32;
                v21 = *(_QWORD *)(v9 + 8 * v22);
                if (!v21)
                {
                  v22 = v16 + 4;
                  if (v16 + 4 >= v17)
                    goto LABEL_32;
                  v21 = *(_QWORD *)(v9 + 8 * v22);
                  if (!v21)
                  {
                    v22 = v16 + 5;
                    if (v16 + 5 >= v17)
                      goto LABEL_32;
                    v21 = *(_QWORD *)(v9 + 8 * v22);
                    if (!v21)
                    {
                      v22 = v16 + 6;
                      if (v16 + 6 >= v17)
                        goto LABEL_32;
                      v21 = *(_QWORD *)(v9 + 8 * v22);
                      if (!v21)
                        break;
                    }
                  }
                }
              }
            }
LABEL_29:
            a1 = (v21 - 1) & v21;
            v19 = __clz(__rbit64(v21)) + (v22 << 6);
            v16 = v22;
LABEL_30:
            v24 = *(id *)(*(_QWORD *)(v15 + 48) + 8 * v19);
            _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
            sub_1C0BF8118(v24);
            swift_bridgeObjectRelease();

            if (a1)
              goto LABEL_11;
          }
          v23 = v16 + 7;
          while (v23 < v17)
          {
            v21 = *(_QWORD *)(v9 + 8 * v23++);
            if (v21)
            {
              v22 = v23 - 1;
              goto LABEL_29;
            }
          }
LABEL_32:
          sub_1C077B5B4();
          swift_release();
          v10 = v31;
          v9 = v32;
          a1 = v34;
        }

        if (a2 == v10)
        {
          sub_1C07878E4();
          return v35;
        }
      }
LABEL_36:
      __break(1u);
LABEL_37:
      sub_1C07767B4();
      v10 = sub_1C10709B4();
      sub_1C07767AC();
    }
    sub_1C07767AC();
  }
  if (qword_1ED761458 != -1)
    swift_once();
  v26 = sub_1C106F544();
  sub_1C079E000(v26, (uint64_t)qword_1ED78D818);
  swift_bridgeObjectRetain_n();
  v27 = sub_1C106F538();
  v28 = sub_1C1070384();
  if (sub_1C07825D0(v28))
  {
    v29 = (uint8_t *)sub_1C0775854();
    v36[0] = sub_1C0775854();
    *(_DWORD *)v29 = 136642819;
    sub_1C07796D8();
    sub_1C0788DAC(a1, a2, v36);
    sub_1C077FD44();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C0771000, v27, (os_log_type_t)v3, "No addresses found in string %{sensitive}s", v29, 0xCu);
    sub_1C07814E0();
    sub_1C0776778();
  }

  swift_bridgeObjectRelease_n();
  return 0;
}

void sub_1C0BF8118(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;

  v2 = sub_1C106E41C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C106FB14();
  v8 = v7;
  if (v6 == sub_1C106FB14() && v8 == v9)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_36;
  }
  v11 = sub_1C1070CB4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v11 & 1) != 0)
  {
LABEL_36:
    sub_1C106E2CC();
LABEL_37:
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C089FDC4();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return;
  }
  v12 = sub_1C106FB14();
  v14 = v13;
  if (v12 == sub_1C106FB14() && v14 == v15)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_39;
  }
  v17 = sub_1C1070CB4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v17 & 1) != 0)
  {
LABEL_39:
    sub_1C106E368();
    goto LABEL_37;
  }
  v18 = sub_1C106FB14();
  v20 = v19;
  if (v18 == sub_1C106FB14() && v20 == v21)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_41;
  }
  v23 = sub_1C1070CB4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v23 & 1) != 0)
  {
LABEL_41:
    sub_1C106E044();
    goto LABEL_37;
  }
  v24 = sub_1C106FB14();
  v26 = v25;
  if (v24 == sub_1C106FB14() && v26 == v27)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_43;
  }
  v29 = sub_1C1070CB4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v29 & 1) != 0)
  {
LABEL_43:
    sub_1C106DE94();
    goto LABEL_37;
  }
  v30 = sub_1C106FB14();
  v32 = v31;
  if (v30 == sub_1C106FB14() && v32 == v33)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_45;
  }
  v35 = sub_1C1070CB4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v35 & 1) != 0)
  {
LABEL_45:
    sub_1C106E248();
    goto LABEL_37;
  }
  v36 = sub_1C106FB14();
  v38 = v37;
  if (v36 == sub_1C106FB14() && v38 == v39)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_47;
  }
  v41 = sub_1C1070CB4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v41 & 1) != 0)
  {
LABEL_47:
    sub_1C106DD5C();
    goto LABEL_37;
  }
  if (qword_1ED761458 != -1)
    swift_once();
  v42 = sub_1C106F544();
  sub_1C079E000(v42, (uint64_t)qword_1ED78D818);
  v50 = a1;
  v43 = sub_1C106F538();
  v44 = sub_1C1070384();
  if (os_log_type_enabled(v43, v44))
  {
    v45 = (uint8_t *)swift_slowAlloc();
    v46 = swift_slowAlloc();
    v52 = v46;
    *(_DWORD *)v45 = 136315138;
    v47 = sub_1C106FB14();
    v51 = sub_1C0788DAC(v47, v48, &v52);
    sub_1C10705AC();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0771000, v43, v44, "Unsupported address type %s", v45, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BA8270](v46, -1, -1);
    MEMORY[0x1C3BA8270](v45, -1, -1);

  }
  else
  {

  }
}

void LocationMatcher.stores.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1C07E6C80(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
}

void LocationMatcher.source.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1C078B1F8();
  sub_1C07E6C80(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0778534();
}

void LocationMatcher.pipelineType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + *(int *)(sub_1C078B1F8() + 24));
  sub_1C0778534();
}

uint64_t LocationMatcher.stateStore.getter()
{
  sub_1C078B1F8();
  return swift_retain();
}

uint64_t sub_1C0BF86B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t);
  uint64_t v10;

  v0 = sub_1C106A7E0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - v5;
  sub_1C0800A9C(v7, qword_1ED78D070);
  sub_1C079E000(v0, (uint64_t)qword_1ED78D070);
  sub_1C106A7BC();
  sub_1C106A7B0();
  sub_1C106A7C8();
  v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v3, v0);
  return ((uint64_t (*)(char *, uint64_t))v8)(v6, v0);
}

uint64_t sub_1C0BF878C()
{
  uint64_t result;

  result = sub_1C106F97C();
  qword_1ED78C690 = result;
  return result;
}

uint64_t sub_1C0BF87C4()
{
  uint64_t v0;
  uint64_t result;

  sub_1C07ACF80(&qword_1ED75E838);
  sub_1C106E41C();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C10819C0;
  sub_1C106E248();
  sub_1C106DE28();
  sub_1C106DF78();
  sub_1C106DE94();
  sub_1C106DE1C();
  sub_1C106E368();
  sub_1C106E14C();
  sub_1C106E044();
  sub_1C106E158();
  sub_1C106DD5C();
  sub_1C106E2CC();
  result = sub_1C106DF24();
  qword_1ED78CCD0 = v0;
  return result;
}

void LocationMatcher.stageName.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + *(int *)(sub_1C078B1F8() + 32));
  sub_1C0778534();
}

void LocationMatcher.stageName.setter(char *a1)
{
  uint64_t v1;
  char v2;

  v2 = *a1;
  *(_BYTE *)(v1 + *(int *)(sub_1C078B1F8() + 32)) = v2;
  sub_1C0778534();
}

uint64_t (*LocationMatcher.stageName.modify())(_QWORD)
{
  sub_1C078B1F8();
  return nullsub_1;
}

uint64_t sub_1C0BF8934(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v33;
  uint64_t v34;
  char v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD v59[3];
  uint64_t v60;
  uint64_t v61;

  v2 = sub_1C0779688();
  v52 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1C077AED0();
  v51 = v3;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v4);
  sub_1C0779728();
  v50 = v5;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v47 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v47 - v10;
  v12 = MEMORY[0x1E0DEE9D8];
  v61 = MEMORY[0x1E0DEE9D8];
  v13 = *(_QWORD *)(a1 + 16);
  sub_1C077AEBC();
  if (v13)
  {
    v48 = v13;
    v49 = a1;
    v14 = a1 + 32;
    v15 = v13;
    while (1)
    {
      sub_1C07D6D1C(v14, (uint64_t)v59);
      sub_1C07A9480(v59, v60);
      sub_1C106EAA0();
      sub_1C106DD08();
      sub_1C07803F8(&qword_1ED75E7E0, (void (*)(uint64_t))MEMORY[0x1E0D3CC50]);
      sub_1C0BFEA2C();
      sub_1C0BFEA2C();
      if (v54 == v57 && v55 == v58)
      {
        swift_bridgeObjectRelease_n();
        sub_1C078B048((uint64_t)v8);
        sub_1C078B048((uint64_t)v11);
        sub_1C07A55B8();
      }
      else
      {
        v17 = sub_1C07785B0();
        sub_1C077960C();
        sub_1C07785A0();
        sub_1C078B048((uint64_t)v8);
        sub_1C078B048((uint64_t)v11);
        sub_1C07A55B8();
        if ((v17 & 1) == 0)
        {
          sub_1C078D808();
          goto LABEL_15;
        }
      }
      sub_1C07A9480(&v54, v56);
      if (sub_1C106EA88() == 1145656661 && v18 == 0xE400000000000000)
      {
        swift_bridgeObjectRelease();
        sub_1C078D808();
LABEL_17:
        sub_1C0776AD8();
        v21 = v61;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C07AD784();
          v21 = v61;
        }
        v22 = *(_QWORD *)(v21 + 24);
        if (*(_QWORD *)(v21 + 16) >= v22 >> 1)
        {
          sub_1C0779D04(v22);
          sub_1C07AD784();
        }
        sub_1C07AE9B8();
        sub_1C077B8E8();
        MEMORY[0x1E0C80A78](v23);
        sub_1C0778564();
        (*(void (**)(uint64_t))(v26 + 16))(v25 - v24);
        sub_1C0BFEA38();
        _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)&v54);
        goto LABEL_22;
      }
      v20 = sub_1C07785B0();
      sub_1C077960C();
      sub_1C078D808();
      if ((v20 & 1) != 0)
        goto LABEL_17;
LABEL_15:
      sub_1C0781EE8();
LABEL_22:
      v14 += 40;
      if (!--v15)
      {
        v27 = v61;
        a1 = v49;
        v28 = v50;
        v29 = v51;
        v13 = v48;
        v12 = MEMORY[0x1E0DEE9D8];
        goto LABEL_25;
      }
    }
  }
  v27 = v12;
  v28 = v50;
  v29 = v51;
LABEL_25:
  sub_1C077B5B4();
  v61 = v27;
  if (*(_QWORD *)(v27 + 16))
    goto LABEL_50;
  v53 = v12;
  sub_1C077AEBC();
  if (!v13)
    goto LABEL_49;
  v30 = a1 + 32;
  do
  {
    v31 = v13;
    sub_1C07D6D1C(v30, (uint64_t)v59);
    sub_1C078DC18();
    sub_1C07889E4();
    sub_1C106EAA0();
    sub_1C106DD08();
    sub_1C07803F8(&qword_1ED75E7E0, (void (*)(uint64_t))MEMORY[0x1E0D3CC50]);
    sub_1C077B06C();
    sub_1C077B06C();
    if (v54 == v57 && v55 == v58)
    {
      sub_1C07878E4();
      sub_1C078B048(v29);
      sub_1C078B048(v28);
      sub_1C07A55B8();
    }
    else
    {
      v33 = sub_1C07785B0();
      sub_1C07767AC();
      sub_1C077960C();
      sub_1C078B048(v29);
      sub_1C078B048(v28);
      sub_1C07A55B8();
      if ((v33 & 1) == 0)
      {
        sub_1C078D808();
LABEL_40:
        sub_1C0781EE8();
        goto LABEL_47;
      }
    }
    sub_1C07A9480(&v54, v56);
    sub_1C07889E4();
    if (sub_1C106EA88() == 1145656653 && v34 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
      sub_1C078D808();
    }
    else
    {
      v36 = sub_1C07785B0();
      sub_1C07767AC();
      sub_1C078D808();
      if ((v36 & 1) == 0)
        goto LABEL_40;
    }
    sub_1C0776AD8();
    v37 = v53;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C07AD784();
      v37 = v53;
    }
    v38 = *(_QWORD *)(v37 + 24);
    if (*(_QWORD *)(v37 + 16) >= v38 >> 1)
    {
      sub_1C0779D04(v38);
      sub_1C07AD784();
    }
    sub_1C07AE9B8();
    sub_1C077B8E8();
    MEMORY[0x1E0C80A78](v39);
    sub_1C0778564();
    (*(void (**)(uint64_t))(v42 + 16))(v41 - v40);
    sub_1C0BFEA38();
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)&v54);
    v28 = v50;
    v29 = v51;
LABEL_47:
    v30 += 40;
    v13 = v31 - 1;
  }
  while (v31 != 1);
  v12 = v53;
LABEL_49:
  sub_1C077B5B4();
  sub_1C07767AC();
  v61 = v12;
LABEL_50:
  v43 = sub_1C077AEBC();
  v44 = sub_1C0BF77F0(v43, &v61);
  sub_1C0AA4B04(v44, (uint64_t)v59);
  sub_1C07767AC();
  v45 = v60;
  if (v60)
  {
    sub_1C078DC18();
    v45 = sub_1C106EA88();
    sub_1C0781EE8();
  }
  else
  {
    sub_1C0784B6C((uint64_t)v59, &qword_1ED759C50);
  }
  swift_bridgeObjectRelease();
  return v45;
}

uint64_t sub_1C0BF8EE0(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char *v28;
  char v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  char *v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[3];
  uint64_t v45;
  _QWORD v46[4];

  v39 = a2;
  v42 = sub_1C106EB24();
  v38 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v34 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_1C07ACF80(&qword_1ED755F78);
  MEMORY[0x1E0C80A78](v40);
  v41 = (uint64_t)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C07ACF80(&qword_1ED755A10);
  MEMORY[0x1E0C80A78](v5);
  v37 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v43 = (uint64_t)&v33 - v8;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v33 - v10;
  v12 = sub_1C106E41C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v33 - v17;
  sub_1C07A9480(a1, a1[3]);
  sub_1C106EAA0();
  sub_1C106DD08();
  v19 = sub_1C08C4D74((uint64_t)v18, (uint64_t)v15);
  v20 = *(void (**)(char *, uint64_t))(v13 + 8);
  v20(v15, v12);
  v35 = v20;
  v36 = v12;
  v20(v18, v12);
  sub_1C07D6D1C((uint64_t)a1, (uint64_t)v46);
  if ((v19 & 1) == 0)
    goto LABEL_11;
  sub_1C07A9480(v46, v46[3]);
  sub_1C106EA70();
  v21 = v42;
  sub_1C07B2D8C((uint64_t)v11, 0, 1, v42);
  sub_1C0AA4B04(*v39, (uint64_t)v44);
  if (v45)
  {
    sub_1C07A9480(v44, v45);
    v22 = v43;
    sub_1C106EA70();
    sub_1C07B2D8C(v22, 0, 1, v21);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v44);
  }
  else
  {
    sub_1C0784B6C((uint64_t)v44, &qword_1ED759C50);
    v22 = v43;
    sub_1C07B2D8C(v43, 1, 1, v21);
  }
  v23 = v41;
  v24 = v41 + *(int *)(v40 + 48);
  sub_1C078A8CC((uint64_t)v11, v41, &qword_1ED755A10);
  sub_1C078A8CC(v22, v24, &qword_1ED755A10);
  if (sub_1C07B2D80(v23, 1, v21) == 1)
  {
    sub_1C0784B6C(v22, &qword_1ED755A10);
    sub_1C0784B6C((uint64_t)v11, &qword_1ED755A10);
    if (sub_1C07B2D80(v24, 1, v21) == 1)
    {
      sub_1C0784B6C(v23, &qword_1ED755A10);
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v46);
      sub_1C07D6D1C((uint64_t)a1, (uint64_t)v44);
LABEL_15:
      sub_1C07A9480(v44, v45);
      sub_1C106EA7C();
      sub_1C106DE70();
      v26 = sub_1C08C4D74((uint64_t)v18, (uint64_t)v15);
      v32 = v35;
      v31 = v36;
      v35(v15, v36);
      v32(v18, v31);
      goto LABEL_13;
    }
    goto LABEL_10;
  }
  v25 = (uint64_t)v37;
  sub_1C078A8CC(v23, (uint64_t)v37, &qword_1ED755A10);
  if (sub_1C07B2D80(v24, 1, v21) == 1)
  {
    sub_1C0784B6C(v43, &qword_1ED755A10);
    sub_1C0784B6C((uint64_t)v11, &qword_1ED755A10);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v25, v21);
LABEL_10:
    sub_1C0784B6C(v23, &qword_1ED755F78);
LABEL_11:
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v46);
    sub_1C07D6D1C((uint64_t)a1, (uint64_t)v44);
    goto LABEL_12;
  }
  v28 = v34;
  (*(void (**)(char *, uint64_t, uint64_t))(v38 + 32))(v34, v24, v21);
  sub_1C07803F8(qword_1ED75EA50, (void (*)(uint64_t))MEMORY[0x1E0D3D450]);
  v29 = sub_1C106FAA8();
  v30 = *(void (**)(char *, uint64_t))(v38 + 8);
  v30(v28, v21);
  sub_1C0784B6C(v43, &qword_1ED755A10);
  sub_1C0784B6C((uint64_t)v11, &qword_1ED755A10);
  v30(v37, v21);
  sub_1C0784B6C(v23, &qword_1ED755A10);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v46);
  sub_1C07D6D1C((uint64_t)a1, (uint64_t)v44);
  if ((v29 & 1) != 0)
    goto LABEL_15;
LABEL_12:
  v26 = 0;
LABEL_13:
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v44);
  return v26 & 1;
}

id sub_1C0BF93FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  id v27;
  uint64_t v29;
  uint64_t v30;

  v2 = sub_1C0779688();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v29 - v6;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v29 - v9;
  sub_1C07803F8(&qword_1ED75EA28, v11);
  v30 = sub_1C106F97C();
  v12 = *(_QWORD *)(a1 + 16);
  if (v12)
  {
    v13 = (_QWORD *)(a1 + 32);
    sub_1C077AEBC();
    do
    {
      sub_1C0BF9610((uint64_t)&v30, v13);
      v13 += 5;
      --v12;
    }
    while (v12);
    sub_1C077B5B4();
  }
  sub_1C106E35C();
  sub_1C0782778((uint64_t)v10);
  v15 = v14;
  v17 = v16;
  sub_1C07AF640((uint64_t)v10);
  if (!v17)
    goto LABEL_10;
  v18 = sub_1C0BF6E90(v15, v17);
  if ((v19 & 1) != 0
    || (v20 = *(double *)&v18, sub_1C106E3E0(), sub_1C0782778((uint64_t)v7), v22 = v21, sub_1C07AF640((uint64_t)v7), !v22)
    || (v23 = sub_1C0787A98(), v25 = sub_1C0BF6E90(v23, v24), (v26 & 1) != 0))
  {
LABEL_10:
    v27 = 0;
  }
  else
  {
    v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E3B8]), sel_initWithLatitude_longitude_, v20, *(double *)&v25);
  }
  sub_1C106E248();
  sub_1C0782778((uint64_t)v4);
  sub_1C07AF640((uint64_t)v4);
  return v27;
}

uint64_t sub_1C0BF9610(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  void (*v11)(char *, uint64_t);
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t result;
  _QWORD v34[4];
  _QWORD v35[4];
  _QWORD v36[4];
  _QWORD v37[8];

  v37[7] = a1;
  v3 = sub_1C106E41C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v34[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v34[-1] - v8;
  sub_1C07A9480(a2, a2[3]);
  sub_1C106EAA0();
  sub_1C106DCFC();
  v10 = sub_1C08C4D74((uint64_t)v9, (uint64_t)v6);
  v11 = *(void (**)(char *, uint64_t))(v4 + 8);
  v11(v6, v3);
  v11(v9, v3);
  sub_1C07D6D1C((uint64_t)a2, (uint64_t)v37);
  if ((v10 & 1) == 0)
  {
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v37);
    sub_1C07D6D1C((uint64_t)a2, (uint64_t)v36);
LABEL_10:
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v36);
    goto LABEL_11;
  }
  sub_1C07A9480(v37, v37[3]);
  v12 = sub_1C106EA88();
  v14 = v13;
  swift_bridgeObjectRelease();
  if ((v14 & 0x2000000000000000) != 0)
    v15 = HIBYTE(v14) & 0xF;
  else
    v15 = v12 & 0xFFFFFFFFFFFFLL;
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v37);
  sub_1C07D6D1C((uint64_t)a2, (uint64_t)v36);
  if (!v15)
    goto LABEL_10;
  sub_1C07A9480(v36, v36[3]);
  v16 = sub_1C106EA88();
  v18 = sub_1C0BF6E90(v16, v17);
  if ((v19 & 1) != 0)
  {
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v36);
    goto LABEL_28;
  }
  v20 = v18 & 0x7FFFFFFFFFFFFFFFLL;
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v36);
  if (v20)
  {
LABEL_28:
    sub_1C07A9480(a2, a2[3]);
    sub_1C106EA7C();
    goto LABEL_29;
  }
LABEL_11:
  sub_1C07A9480(a2, a2[3]);
  sub_1C106EAA0();
  sub_1C106E248();
  v21 = sub_1C08C4D74((uint64_t)v9, (uint64_t)v6);
  v11(v6, v3);
  v11(v9, v3);
  sub_1C07D6D1C((uint64_t)a2, (uint64_t)v35);
  if ((v21 & 1) != 0)
  {
    sub_1C07A9480(v35, v35[3]);
    v22 = sub_1C106EA88();
    v24 = v23;
    swift_bridgeObjectRelease();
    if ((v24 & 0x2000000000000000) != 0)
      v25 = HIBYTE(v24) & 0xF;
    else
      v25 = v22 & 0xFFFFFFFFFFFFLL;
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v35);
    if (v25)
    {
      sub_1C106E248();
LABEL_29:
      sub_1C07A9480(a2, a2[3]);
      sub_1C106EA88();
      sub_1C089FDC4();
      return ((uint64_t (*)(char *, uint64_t))v11)(v9, v3);
    }
  }
  else
  {
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v35);
  }
  sub_1C07A9480(a2, a2[3]);
  sub_1C106EAA0();
  sub_1C106DD5C();
  v26 = sub_1C08C4D74((uint64_t)v9, (uint64_t)v6);
  v11(v6, v3);
  v11(v9, v3);
  sub_1C07D6D1C((uint64_t)a2, (uint64_t)v34);
  if ((v26 & 1) != 0)
  {
    sub_1C07A9480(v34, v34[3]);
    v27 = sub_1C106EA88();
    v29 = v28;
    swift_bridgeObjectRelease();
    if ((v29 & 0x2000000000000000) != 0)
      v30 = HIBYTE(v29) & 0xF;
    else
      v30 = v27 & 0xFFFFFFFFFFFFLL;
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v34);
    if (v30)
    {
      sub_1C106DD5C();
      goto LABEL_29;
    }
  }
  else
  {
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v34);
  }
  sub_1C07A9480(a2, a2[3]);
  sub_1C106EAA0();
  sub_1C106DCF0();
  v31 = sub_1C08C4D74((uint64_t)v9, (uint64_t)v6);
  v11(v6, v3);
  result = ((uint64_t (*)(char *, uint64_t))v11)(v9, v3);
  if ((v31 & 1) != 0)
    goto LABEL_28;
  return result;
}

uint64_t sub_1C0BF9A14()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v0 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C07B1280();
  v1 = sub_1C10705D0();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v19 = MEMORY[0x1E0DEE9D8];
    sub_1C09D30E0();
    v3 = (uint64_t *)(v1 + 40);
    do
    {
      v4 = *(v3 - 1);
      v5 = *v3;
      v6 = qword_1ED747BE0;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      if (v6 != -1)
        swift_once();
      v7 = qword_1ED78C690;
      v8 = sub_1C106FB68();
      if (*(_QWORD *)(v7 + 16))
      {
        v10 = sub_1C077D774(v8, v9);
        if ((v11 & 1) != 0)
        {
          v12 = (uint64_t *)(*(_QWORD *)(v7 + 56) + 16 * v10);
          v4 = *v12;
          v13 = v12[1];
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          sub_1C07785A0();
          v5 = v13;
        }
      }
      swift_bridgeObjectRelease();
      v15 = *(_QWORD *)(v19 + 16);
      v14 = *(_QWORD *)(v19 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1C0779D04(v14);
        sub_1C09D30E0();
      }
      v3 += 2;
      *(_QWORD *)(v19 + 16) = v15 + 1;
      v16 = v19 + 16 * v15;
      *(_QWORD *)(v16 + 32) = v4;
      *(_QWORD *)(v16 + 40) = v5;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C0778580();
  }
  sub_1C07ACF80(&qword_1ED762B70);
  sub_1C07BB218(&qword_1ED762430, &qword_1ED762B70);
  v17 = sub_1C106FA54();
  sub_1C0775844();
  objc_autoreleasePoolPop(v0);
  return v17;
}

uint64_t sub_1C0BF9C24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  unsigned __int8 v6;

  sub_1C07B62E4();
  v6 = 0;
  v4 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C0BF9C8C(v3, v1, v2, v0, (char *)&v6);
  objc_autoreleasePoolPop(v4);
  return v6;
}

uint64_t sub_1C0BF9C8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v35 = a5;
  v38 = a3;
  v8 = sub_1C106E41C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C089AD54(a2, a1);
  if (v13)
  {
    v14 = v12;
    v15 = v13;
    v34 = v5;
    sub_1C089AD54(a2, v38);
    if (v17)
    {
      v18 = v17;
      v36 = v14;
      v37 = v15;
      v19 = v16;
      sub_1C07B1280();
      sub_1C10705E8();
      swift_bridgeObjectRelease();
      v36 = v19;
      v37 = v18;
      sub_1C10705E8();
      swift_bridgeObjectRelease();
      v20 = sub_1C106FB68();
      v22 = v21;
      swift_bridgeObjectRelease();
      v23 = sub_1C106FB68();
      v25 = v24;
      swift_bridgeObjectRelease();
      if (v20 == v23 && v22 == v25)
        v27 = 1;
      else
        v27 = sub_1C1070CB4();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      v33 = v27 & 1;
      goto LABEL_15;
    }
    swift_bridgeObjectRelease();
  }
  sub_1C089AD54(a2, a1);
  v29 = v28;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  if (v29)
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_1C089AD54((uint64_t)v11, v38);
  v32 = v31;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  result = swift_bridgeObjectRelease();
  if (!v32)
  {
    v33 = 2;
LABEL_15:
    *v35 = v33;
  }
  return result;
}

uint64_t sub_1C0BF9EC4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  BOOL v48;
  uint64_t result;
  _QWORD *v50;
  _QWORD *v51;
  unint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  unint64_t v79;
  char v81;
  unint64_t v82;
  _QWORD *v83;
  _QWORD *v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  _QWORD *v108;
  _QWORD *v109;
  uint64_t v110;
  _QWORD *v111;
  unint64_t v112;
  _QWORD *v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;

  v112 = a2;
  v5 = sub_1C0779688();
  MEMORY[0x1E0C80A78](v5);
  sub_1C077AED0();
  v111 = v6;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v105 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v105 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v105 - v14;
  sub_1C106DE94();
  sub_1C089AD54((uint64_t)v15, a1);
  v17 = v16;
  v19 = v18;
  sub_1C079DB64((uint64_t)v15);
  v110 = a3;
  if (v19)
  {
    v20 = sub_1C077F350();
    v22 = v21;
    sub_1C077960C();
    v113 = (_QWORD *)v20;
    v114 = v22;
    sub_1C07B1280();
    v23 = sub_1C10705E8();
    v25 = v24;
    sub_1C07785A0();
  }
  else
  {
    v25 = 0;
    v23 = v17;
  }
  sub_1C106DE94();
  sub_1C089AD54((uint64_t)v12, v112);
  v27 = v26;
  v29 = v28;
  sub_1C079DB64((uint64_t)v12);
  if (v29)
  {
    v30 = sub_1C077F350();
    v32 = v31;
    sub_1C077960C();
    v113 = (_QWORD *)v30;
    v114 = v32;
    sub_1C07B1280();
    v27 = sub_1C10705E8();
    v34 = v33;
    sub_1C077589C();
  }
  else
  {
    v34 = 0;
  }
  sub_1C106DF78();
  v35 = sub_1C07889E4();
  sub_1C089AD54(v35, v36);
  v38 = v37;
  sub_1C079DB64((uint64_t)v9);
  if (v38)
  {
    v39 = sub_1C077F350();
    v41 = v40;
    sub_1C077960C();
    v113 = (_QWORD *)v39;
    v114 = v41;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C07B0118();
    sub_1C077589C();
    sub_1C07767B4();
    sub_1C07814F0();
    sub_1C106FC94();
    sub_1C0778580();
    sub_1C07767AC();
    v23 = (uint64_t)v113;
    v25 = v114;
  }
  v42 = (uint64_t)v111;
  sub_1C106DF78();
  sub_1C089AD54(v42, v112);
  v44 = v43;
  sub_1C079DB64(v42);
  if (v44)
  {
    v45 = sub_1C106FB68();
    v47 = v46;
    sub_1C07767AC();
    v113 = (_QWORD *)v45;
    v114 = v47;
    sub_1C0778624();
    sub_1C07B0118();
    swift_bridgeObjectRelease();
    sub_1C07767B4();
    sub_1C0787A98();
    sub_1C106FC94();
    v27 = (uint64_t)v113;
    v34 = v114;
    sub_1C077589C();
    sub_1C07767AC();
  }
  if (!v25)
  {
    sub_1C0775844();
    return !v34;
  }
  if (!v34)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    return 0;
  }
  v48 = v23 == v27 && v25 == v34;
  if (v48 || (sub_1C07814F0(), (sub_1C07785B0() & 1) != 0))
  {
    sub_1C0775844();
    sub_1C0778580();
    return 1;
  }
  v113 = (_QWORD *)v23;
  v114 = v25;
  v117 = 32;
  v118 = 0xE100000000000000;
  sub_1C07B1280();
  sub_1C07796D8();
  v50 = (_QWORD *)sub_1C079BFCC();
  sub_1C0778580();
  v113 = (_QWORD *)v27;
  v114 = v34;
  v117 = 32;
  v118 = 0xE100000000000000;
  v51 = (_QWORD *)sub_1C079BFCC();
  sub_1C0775844();
  if (v50[2] <= 2uLL || (v112 = v50[2], v52 = v51[2], v52 <= 2))
  {
LABEL_24:
    sub_1C0775844();
    sub_1C077B5B4();
    goto LABEL_25;
  }
  v53 = (_QWORD *)v50[4];
  v111 = v50 + 4;
  v54 = (_QWORD *)v50[5];
  v113 = v53;
  v114 = v54;
  sub_1C079D69C();
  v56 = v55;
  v57 = sub_1C106FB68();
  v59 = v58;
  sub_1C077960C();
  if (v51[2])
  {
    v107 = v52;
    v108 = v51;
    v60 = (_QWORD *)v51[4];
    v109 = v51 + 4;
    v61 = (_QWORD *)v51[5];
    v113 = v60;
    v114 = v61;
    sub_1C079D69C();
    v52 = sub_1C106FB68();
    v56 = v62;
    sub_1C07785A0();
    if (qword_1ED747BE0 == -1)
      goto LABEL_29;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_29:
  v63 = qword_1ED78C690;
  v64 = sub_1C106FB68();
  sub_1C089A994(v64, v65, v63);
  v67 = v66;
  v68 = v57;
  v70 = v69;
  sub_1C077589C();
  if (v70)
  {
    sub_1C07767AC();
    v106 = v67;
    v59 = v70;
  }
  else
  {
    v106 = v68;
  }
  v71 = qword_1ED78C690;
  v72 = sub_1C077F350();
  sub_1C089A994(v72, v73, v71);
  v75 = v74;
  v77 = v76;
  sub_1C0778580();
  if (v77)
  {
    sub_1C077960C();
    v52 = v75;
    v56 = v77;
  }
  v79 = v107;
  v78 = v108;
  if (v106 == v52 && v59 == v56)
  {
    result = sub_1C07878E4();
  }
  else
  {
    v81 = sub_1C07785B0();
    sub_1C07767AC();
    result = sub_1C077960C();
    if ((v81 & 1) == 0)
      goto LABEL_24;
  }
  v82 = v112;
  if (v112 > v50[2])
  {
    __break(1u);
    goto LABEL_62;
  }
  v83 = &v111[2 * v112];
  v85 = (_QWORD *)*(v83 - 2);
  v84 = (_QWORD *)*(v83 - 1);
  v113 = v85;
  v114 = v84;
  sub_1C079D69C();
  v86 = sub_1C106FB68();
  v88 = v87;
  result = sub_1C077960C();
  if (v79 > v78[2])
  {
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  v89 = &v109[2 * v79];
  v91 = (_QWORD *)*(v89 - 2);
  v90 = (_QWORD *)*(v89 - 1);
  v113 = v91;
  v114 = v90;
  sub_1C079D69C();
  v92 = sub_1C106FB68();
  v94 = v93;
  sub_1C0778580();
  if (v86 == v92 && v88 == v94)
  {
    result = sub_1C07878E4();
  }
  else
  {
    v96 = sub_1C07785B0();
    sub_1C07767AC();
    result = sub_1C077960C();
    if ((v96 & 1) == 0)
      goto LABEL_24;
  }
  if (v50[2] < v82)
    goto LABEL_63;
  v113 = v50;
  v114 = v111;
  v115 = 1;
  v116 = (2 * v82) | 1;
  sub_1C07ACF80(qword_1ED7615A0);
  sub_1C07BB218(&qword_1ED7624D8, qword_1ED7615A0);
  v97 = sub_1C0786620();
  v99 = v98;
  result = sub_1C077B5B4();
  if (v78[2] >= v79)
  {
    v113 = v78;
    v114 = v109;
    v115 = 1;
    v116 = (2 * v79) | 1;
    v100 = sub_1C0786620();
    v102 = v101;
    sub_1C07785A0();
    if (v97 == v100 && v99 == v102)
    {
      sub_1C0775844();
      sub_1C07878E4();
      return 1;
    }
    v104 = sub_1C07785B0();
    sub_1C0775844();
    sub_1C077960C();
    sub_1C07767AC();
    return (v104 & 1) != 0;
  }
LABEL_64:
  __break(1u);
  return result;
}

float sub_1C0BFA558(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  void (*v17)(uint64_t);
  float v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  float v32;
  unint64_t v33;
  uint64_t v34;
  float *v35;
  float v36;
  float v37;
  uint64_t v39;
  int v40;
  __int16 v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v5 = sub_1C106A7E0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  sub_1C0778564();
  v9 = v8 - v7;
  if (qword_1ED759CD8 != -1)
    swift_once();
  v10 = sub_1C079E000(v5, (uint64_t)qword_1ED78D070);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v9, v10, v5);
  v12 = (void *)MEMORY[0x1C3BA79F4](v11);
  v13 = sub_1C078109C();
  v15 = sub_1C0BF9EC4(v13, v14, v9);
  objc_autoreleasePoolPop(v12);
  v16 = sub_1C07814F0();
  v17(v16);
  v18 = 0.0;
  if ((v15 & 1) != 0)
  {
    sub_1C07ACF80(&qword_1ED75E838);
    sub_1C0779688();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C1078FC0;
    sub_1C106DE28();
    sub_1C106DD5C();
    sub_1C0AA7870();
    v20 = v19;
    MEMORY[0x1E0C80A78](v19);
    *(&v39 - 4) = v2;
    *(&v39 - 3) = a1;
    *(&v39 - 2) = a2;
    sub_1C0BCAA00((uint64_t)sub_1C0BFE860, (uint64_t)(&v39 - 6), v20, v21, v22, v23, v24, v25, v39, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49,
      v50,
      v51,
      v52,
      v53);
    v27 = v26;
    sub_1C0778580();
    v28 = *(_QWORD *)(v27 + 16);
    if (v28)
    {
      v39 = MEMORY[0x1E0DEE9D8];
      sub_1C09D3684();
      v29 = 0;
      v30 = v39;
      v31 = *(_QWORD *)(v39 + 16);
      do
      {
        if (*(_BYTE *)(v27 + v29 + 32))
          v32 = 1.0;
        else
          v32 = 0.0;
        v39 = v30;
        v33 = *(_QWORD *)(v30 + 24);
        if (v31 >= v33 >> 1)
        {
          sub_1C0779D04(v33);
          sub_1C09D3684();
          v30 = v39;
        }
        ++v29;
        *(_QWORD *)(v30 + 16) = v31 + 1;
        *(float *)(v30 + 4 * v31++ + 32) = v32;
      }
      while (v28 != v29);
      sub_1C0775844();
      v34 = *(_QWORD *)(v30 + 16);
      if (v34)
      {
        v35 = (float *)(v30 + 32);
        v36 = 0.0;
        do
        {
          v37 = *v35++;
          v36 = v36 + v37;
          --v34;
        }
        while (v34);
      }
      else
      {
        v36 = 0.0;
      }
      sub_1C07767AC();
      return v36 / (float)v28;
    }
    else
    {
      sub_1C0775844();
    }
  }
  return v18;
}

uint64_t sub_1C0BFA7E8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  if (qword_1ED759CD8 != -1)
    swift_once();
  v2 = sub_1C106A7E0();
  sub_1C079E000(v2, (uint64_t)qword_1ED78D070);
  result = sub_1C0BF9C24();
  *a1 = result;
  return result;
}

uint64_t sub_1C0BFA87C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  float v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  float v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  float v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  if (a2)
    v9 = a1;
  else
    v9 = 0;
  if (a2)
    v10 = a2;
  else
    v10 = 0xE000000000000000;
  v11 = *(void **)(v6 + *(int *)(sub_1C078B1F8() + 40));
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v12 = sub_1C0BF7D20(v9, v10, v11);
  swift_bridgeObjectRelease();
  sub_1C077AEBC();
  v13 = sub_1C0787A98();
  v15 = sub_1C0BF7D20(v13, v14, v11);
  sub_1C077589C();
  if (!v12)
  {
    sub_1C0779688();
    sub_1C07803F8(&qword_1ED75EA28, (void (*)(uint64_t))MEMORY[0x1E0D3CC50]);
    v12 = sub_1C106F97C();
  }
  v16 = sub_1C0BFA558(v12, a6);
  sub_1C0778580();
  sub_1C07EC064();
  v18 = v17;
  v20 = *(_QWORD *)(v17 + 16);
  v19 = *(_QWORD *)(v17 + 24);
  if (v20 >= v19 >> 1)
  {
    sub_1C0779D04(v19);
    sub_1C07B18F0();
    v18 = v30;
  }
  *(_QWORD *)(v18 + 16) = v20 + 1;
  *(float *)(v18 + 4 * v20 + 32) = v16;
  if (!v15)
  {
    sub_1C0779688();
    sub_1C07803F8(&qword_1ED75EA28, (void (*)(uint64_t))MEMORY[0x1E0D3CC50]);
    v15 = sub_1C106F97C();
  }
  v21 = sub_1C0BFA558(a3, v15);
  sub_1C077B5B4();
  v23 = *(_QWORD *)(v18 + 16);
  v22 = *(_QWORD *)(v18 + 24);
  if (v23 >= v22 >> 1)
  {
    sub_1C0779D04(v22);
    sub_1C07B18F0();
    v18 = v31;
  }
  *(_QWORD *)(v18 + 16) = v23 + 1;
  *(float *)(v18 + 4 * v23 + 32) = v21;
  v24 = sub_1C078109C();
  v26 = sub_1C0BFA558(v24, v25);
  v28 = *(_QWORD *)(v18 + 16);
  v27 = *(_QWORD *)(v18 + 24);
  if (v28 >= v27 >> 1)
  {
    sub_1C0779D04(v27);
    sub_1C07B18F0();
    v18 = v32;
  }
  *(_QWORD *)(v18 + 16) = v28 + 1;
  *(float *)(v18 + 4 * v28 + 32) = v26;
  sub_1C085D318(v18);
  return sub_1C0778580();
}

uint64_t sub_1C0BFAAC4(uint64_t a1, uint64_t (*a2)(_QWORD, double), uint64_t a3)
{
  void *v6;
  uint64_t v8[2];

  v8[0] = 0;
  v8[1] = 0xE000000000000000;
  v6 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C0BFAB2C(a1, v8, a2, a3);
  objc_autoreleasePoolPop(v6);
  return v8[0];
}

uint64_t sub_1C0BFAB2C(uint64_t a1, uint64_t *a2, uint64_t (*a3)(_QWORD, double), uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  char v73;
  void (*v74)(uint64_t, uint64_t);
  char *v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char v83;
  uint64_t v84;
  _BOOL8 v85;
  unint64_t v86;
  char v87;
  unint64_t v88;
  char v89;
  uint64_t *v90;
  uint64_t *v91;
  uint64_t v92;
  BOOL v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t (*v96)(_QWORD);
  char v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char v106;
  char v107;
  BOOL v108;
  char v109;
  char *v110;
  uint64_t v111;
  char v113;
  uint64_t v114;
  unint64_t v115;
  char v116;
  char v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t *v128;
  char v129;
  char v130;
  void (*v131)(uint64_t, uint64_t);
  char v132;
  char v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char v139;
  char v140;
  char v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  unint64_t v162;
  unint64_t v163;
  uint64_t v164;
  uint64_t result;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  _QWORD v174[12];
  uint64_t *v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  unint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t (*v189)(_QWORD, double);
  char *v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  char *v198;
  void (*v199)(char *, unint64_t, uint64_t);
  char *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;

  v176 = a4;
  v175 = a2;
  v181 = sub_1C106A7E0();
  v180 = *(_QWORD *)(v181 - 8);
  MEMORY[0x1E0C80A78](v181);
  sub_1C0778564();
  v179 = v7 - v6;
  isUniquelyReferenced_nonNull_native = sub_1C106E41C();
  v9 = *(_QWORD *)(isUniquelyReferenced_nonNull_native - 8);
  MEMORY[0x1E0C80A78](isUniquelyReferenced_nonNull_native);
  sub_1C077AED0();
  v193 = v10;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v11);
  sub_1C0779728();
  v196 = v12;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v174 - v14;
  MEMORY[0x1E0C80A78](v16);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v17);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v18);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v19);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v20);
  sub_1C0779728();
  v191 = v21;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v22);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v23);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v24);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v25);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v26);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v27);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v28);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v29);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v30);
  sub_1C0779728();
  sub_1C077AF60();
  v32 = MEMORY[0x1E0C80A78](v31);
  v200 = (char *)v174 - v33;
  v195 = a3(0, v32);
  v34 = *(_QWORD *)(v195 - 8);
  MEMORY[0x1E0C80A78](v195);
  v36 = (char *)v174 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v37);
  sub_1C0779728();
  v186 = v38;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v39);
  v41 = (char *)v174 - v40;
  v42 = MEMORY[0x1E0DEE9D8];
  v204 = MEMORY[0x1E0DEE9D8];
  v43 = *(char **)(a1 + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v206 = isUniquelyReferenced_nonNull_native;
  v201 = v9;
  v188 = v34;
  v189 = a3;
  v197 = v15;
  v194 = (uint64_t)v36;
  v190 = v43;
  if (!v43)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    sub_1C07803F8(&qword_1ED75EA28, (void (*)(uint64_t))MEMORY[0x1E0D3CC50]);
    v55 = sub_1C106F97C();
    v56 = v191;
    v186 = *(_QWORD *)(v42 + 16);
    if (!v186)
    {
LABEL_65:
      swift_release();
      if (qword_1ED750A48 == -1)
        goto LABEL_66;
      goto LABEL_164;
    }
    v62 = 0;
    v63 = v188;
    v64 = *(unsigned __int8 *)(v188 + 80);
    v187 = v42;
    v185 = v42 + ((v64 + 32) & ~v64);
    while (1)
    {
      if (v62 >= *(_QWORD *)(v187 + 16))
        goto LABEL_161;
      v199 = (void (*)(char *, unint64_t, uint64_t))v55;
      sub_1C07E6C80(v185 + *(_QWORD *)(v63 + 72) * v62, (uint64_t)v36, (uint64_t (*)(_QWORD))a3);
      if (qword_1ED750A48 != -1)
        swift_once();
      v65 = qword_1ED78CCD0;
      v66 = &v36[*(int *)(v195 + 28)];
      v67 = v201;
      v68 = *(char **)(v201 + 16);
      v198 = v66;
      ((void (*)(char *))v68)(v15);
      v69 = isUniquelyReferenced_nonNull_native;
      isUniquelyReferenced_nonNull_native = *(_QWORD *)(v65 + 16);
      v70 = v196;
      v200 = v68;
      if (!isUniquelyReferenced_nonNull_native)
      {
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        LOBYTE(v56) = 0;
        v75 = *(char **)(v67 + 8);
        isUniquelyReferenced_nonNull_native = v69;
        goto LABEL_40;
      }
      v190 = (char *)v62;
      v183 = (*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80);
      ((void (*)(uint64_t, unint64_t, uint64_t))v68)(v196, v65 + v183, v69);
      sub_1C07803F8(&qword_1ED75EA30, (void (*)(uint64_t))MEMORY[0x1E0D3CC50]);
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v71 = sub_1C078A4A8();
      v72 = v70;
      v73 = v71;
      v74 = *(void (**)(uint64_t, uint64_t))(v67 + 8);
      v74(v72, v69);
      if ((v73 & 1) != 0)
        break;
      if (isUniquelyReferenced_nonNull_native == 1)
      {
        LOBYTE(v56) = 0;
        goto LABEL_36;
      }
      v192 = *(char **)(v201 + 72);
      sub_1C07AC8AC();
      v15 = v197;
      v97 = sub_1C078A4A8();
      v98 = sub_1C07814F0();
      v75 = (char *)v74;
      ((void (*)(uint64_t))v74)(v98);
      if ((v97 & 1) != 0)
      {
        LOBYTE(v56) = 1;
      }
      else
      {
        if (isUniquelyReferenced_nonNull_native != 2)
        {
          v99 = v65 + v183 + 2 * (_QWORD)v192;
          v55 = 2;
          v68 = v200;
          while (1)
          {
            v56 = v196;
            ((void (*)(uint64_t, unint64_t, uint64_t))v68)(v196, v99, v206);
            v100 = v55 + 1;
            if (__OFADD__(v55, 1))
              goto LABEL_160;
            sub_1C078A4A8();
            sub_1C0785150();
            if ((v56 & 1) != 0)
              break;
            ++v55;
            v99 += (unint64_t)v192;
            v108 = v100 == isUniquelyReferenced_nonNull_native;
            v68 = v200;
            if (v108)
            {
              isUniquelyReferenced_nonNull_native = v206;
              v15 = v197;
              goto LABEL_38;
            }
          }
          isUniquelyReferenced_nonNull_native = v206;
          goto LABEL_37;
        }
        LOBYTE(v56) = 0;
      }
      isUniquelyReferenced_nonNull_native = v206;
      v68 = v200;
LABEL_39:
      v62 = (unint64_t)v190;
LABEL_40:
      v192 = v75;
      ((void (*)(char *, uint64_t))v75)(v15, isUniquelyReferenced_nonNull_native);
      sub_1C077E584();
      v55 = (uint64_t)v199;
      v36 = (char *)v194;
      if ((v56 & 1) != 0)
      {
        v56 = isUniquelyReferenced_nonNull_native;
        ((void (*)(uint64_t, char *, uint64_t))v68)(v193, v198, isUniquelyReferenced_nonNull_native);
        v76 = (uint64_t *)&v36[*(int *)(v195 + 32)];
        v77 = v76[1];
        v204 = *v76;
        v205 = v77;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v78 = v179;
        sub_1C106A7BC();
        sub_1C07B1280();
        v79 = sub_1C10705E8();
        v81 = v80;
        (*(void (**)(uint64_t, uint64_t))(v180 + 8))(v78, v181);
        swift_bridgeObjectRelease();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v204 = v55;
        sub_1C0791E88();
        v84 = *(_QWORD *)(v55 + 16);
        v85 = (v83 & 1) == 0;
        v55 = v84 + v85;
        if (__OFADD__(v84, v85))
          goto LABEL_162;
        v86 = v82;
        v87 = v83;
        sub_1C07ACF80(&qword_1ED759D78);
        isUniquelyReferenced_nonNull_native = v56;
        if ((sub_1C107090C() & 1) != 0)
        {
          sub_1C07DCC70();
          if ((v87 & 1) != (v89 & 1))
          {
            result = sub_1C1070D44();
            __break(1u);
            return result;
          }
          v86 = v88;
        }
        v55 = v204;
        v56 = v191;
        if ((v87 & 1) != 0)
        {
          v90 = (uint64_t *)(*(_QWORD *)(v204 + 56) + 16 * v86);
          swift_bridgeObjectRelease();
          *v90 = v79;
          v90[1] = v81;
        }
        else
        {
          *(_QWORD *)(v204 + 8 * (v86 >> 6) + 64) |= 1 << v86;
          sub_1C07AC8AC();
          v91 = (uint64_t *)(*(_QWORD *)(v55 + 56) + 16 * v86);
          *v91 = v79;
          v91[1] = v81;
          v92 = *(_QWORD *)(v55 + 16);
          v93 = __OFADD__(v92, 1);
          v94 = v92 + 1;
          if (v93)
            goto LABEL_163;
          *(_QWORD *)(v55 + 16) = v94;
        }
        swift_bridgeObjectRelease();
        ((void (*)(uint64_t, uint64_t))v192)(v193, isUniquelyReferenced_nonNull_native);
        a3 = v189;
        v15 = v197;
        v36 = (char *)v194;
      }
      else
      {
        v56 = v191;
        a3 = v189;
      }
      ++v62;
      v95 = sub_1C07889E4();
      sub_1C07B1F90(v95, v96);
      v63 = v188;
      if (v62 == v186)
        goto LABEL_65;
    }
    LOBYTE(v56) = 1;
LABEL_36:
    isUniquelyReferenced_nonNull_native = v69;
LABEL_37:
    v15 = v197;
    v68 = v200;
LABEL_38:
    v75 = (char *)v74;
    goto LABEL_39;
  }
  v44 = 0;
  v45 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  v46 = *(_QWORD *)(v34 + 72);
  v174[3] = a1;
  v178 = v45;
  v187 = a1 + v45;
  v182 = v41;
  v183 = v46;
LABEL_3:
  sub_1C07E6C80(v187 + v46 * (_QWORD)v44, (uint64_t)v41, (uint64_t (*)(_QWORD))a3);
  if (qword_1ED750A48 != -1)
    swift_once();
  v47 = qword_1ED78CCD0;
  v48 = *(_QWORD *)(qword_1ED78CCD0 + 16);
  if (!v48)
    goto LABEL_16;
  v192 = v44;
  v49 = &v41[*(int *)(v195 + 28)];
  v50 = v200;
  v51 = v201;
  v52 = (*(unsigned __int8 *)(v201 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v201 + 80);
  v53 = v206;
  v199 = *(void (**)(char *, unint64_t, uint64_t))(v201 + 16);
  v199(v200, qword_1ED78CCD0 + v52, v206);
  sub_1C07803F8(&qword_1ED75EA30, (void (*)(uint64_t))MEMORY[0x1E0D3CC50]);
  sub_1C077AEBC();
  v198 = v49;
  LOBYTE(v49) = sub_1C106FAA8();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v50, v53);
  if ((v49 & 1) != 0)
  {
    sub_1C077B5B4();
LABEL_18:
    v41 = v182;
    sub_1C07E563C((uint64_t)v182, v186, (uint64_t (*)(_QWORD))a3);
    v58 = v204;
    v59 = swift_isUniquelyReferenced_nonNull_native();
    isUniquelyReferenced_nonNull_native = v206;
    v44 = v192;
    if ((v59 & 1) == 0)
    {
      sub_1C07799E8(0, *(_QWORD *)(v58 + 16) + 1);
      v58 = v204;
    }
    v46 = v183;
    v61 = *(_QWORD *)(v58 + 16);
    v60 = *(_QWORD *)(v58 + 24);
    if (v61 >= v60 >> 1)
    {
      sub_1C07799E8(v60 > 1, v61 + 1);
      v46 = v183;
      v58 = v204;
    }
    *(_QWORD *)(v58 + 16) = v61 + 1;
    sub_1C07E563C(v186, v58 + v178 + v61 * v46, (uint64_t (*)(_QWORD))a3);
    v15 = v197;
    v36 = (char *)v194;
    goto LABEL_23;
  }
  v185 = v47;
  if (v48 == 1)
  {
    sub_1C07A9690();
    goto LABEL_15;
  }
  v54 = *(_QWORD *)(v201 + 72);
  isUniquelyReferenced_nonNull_native = v185 + v54 + v52;
  v55 = 1;
  while (1)
  {
    v56 = (uint64_t)v200;
    v199(v200, isUniquelyReferenced_nonNull_native, v206);
    v57 = v55 + 1;
    if (__OFADD__(v55, 1))
      break;
    sub_1C106FAA8();
    sub_1C0785150();
    if ((v56 & 1) != 0)
    {
      sub_1C07A9690();
      a3 = v189;
      goto LABEL_18;
    }
    ++v55;
    isUniquelyReferenced_nonNull_native += v54;
    if (v57 == v48)
    {
      sub_1C07A9690();
      a3 = v189;
LABEL_15:
      v15 = v197;
      v36 = (char *)v194;
      v41 = v182;
      v44 = v192;
      v46 = v183;
LABEL_16:
      sub_1C07B1F90((uint64_t)v41, (uint64_t (*)(_QWORD))a3);
      isUniquelyReferenced_nonNull_native = v206;
LABEL_23:
      if (++v44 == v190)
      {
        v42 = v204;
        goto LABEL_25;
      }
      goto LABEL_3;
    }
  }
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  swift_once();
LABEL_66:
  v101 = *(_QWORD *)(qword_1ED78CCD0 + 16);
  v199 = (void (*)(char *, unint64_t, uint64_t))v55;
  if (v101)
  {
    v102 = qword_1ED78CCD0
         + ((*(unsigned __int8 *)(v201 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v201 + 80));
    v103 = *(char **)(v201 + 72);
    v104 = *(char **)(v201 + 16);
    v194 = qword_1ED78CCD0;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v195 = MEMORY[0x1E0DEE9D8];
    v196 = MEMORY[0x1E0DEE9D8];
    v197 = v103;
    v200 = v104;
    while (1)
    {
      v105 = sub_1C07814F0();
      ((void (*)(uint64_t))v104)(v105);
      if (!*(_QWORD *)(v55 + 16))
        goto LABEL_87;
      sub_1C0778624();
      sub_1C07BC91C();
      v107 = v106;
      sub_1C0775834();
      if ((v107 & 1) == 0)
        goto LABEL_87;
      sub_1C106E2CC();
      sub_1C07803F8(&qword_1ED75E7E0, (void (*)(uint64_t))MEMORY[0x1E0D3CC50]);
      sub_1C078CC4C();
      sub_1C078CC4C();
      v108 = v204 == v202 && v205 == v203;
      if (v108)
        v109 = 1;
      else
        v109 = sub_1C07785B0();
      sub_1C077E584();
      sub_1C077960C();
      v110 = *(char **)(v201 + 8);
      sub_1C07A225C(v184);
      v111 = v177;
      sub_1C07AC8AC();
      if ((v109 & 1) == 0)
      {
        v198 = v110;
        sub_1C07A497C();
        sub_1C078CC4C();
        sub_1C078CC4C();
        if (v204 != v202 || v205 != v203)
        {
          v113 = sub_1C07785B0();
          sub_1C07767AC();
          sub_1C077960C();
          sub_1C0780BF4();
          sub_1C07A225C(v111);
          if ((v113 & 1) == 0)
          {
            v114 = v174[9];
            sub_1C106E248();
            sub_1C07803F8(&qword_1ED75EA30, (void (*)(uint64_t))MEMORY[0x1E0D3CC50]);
            v115 = isUniquelyReferenced_nonNull_native;
            v116 = sub_1C106FAA8();
            ((void (*)(uint64_t, uint64_t))v198)(v114, isUniquelyReferenced_nonNull_native);
            v104 = v200;
            if ((v116 & 1) != 0)
            {
              v103 = v197;
            }
            else
            {
              if (*(_QWORD *)(v55 + 16) && (sub_1C0791E88(), (v117 & 1) != 0))
              {
                sub_1C07B73D4();
              }
              else
              {
                v114 = 0;
                v115 = 0xE000000000000000;
              }
              v103 = v197;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1C07A011C();
                v195 = v125;
              }
              v118 = *(_QWORD *)(v195 + 16);
              if (v118 >= *(_QWORD *)(v195 + 24) >> 1)
              {
                sub_1C07B7730();
                v195 = v126;
              }
              v119 = v195;
              *(_QWORD *)(v195 + 16) = v118 + 1;
              v120 = v119 + 16 * v118;
              *(_QWORD *)(v120 + 32) = v114;
              *(_QWORD *)(v120 + 40) = v115;
              v55 = (uint64_t)v199;
            }
            if (*(_QWORD *)(v55 + 16) && (sub_1C0791E88(), (v121 & 1) != 0))
            {
              sub_1C07B73D4();
            }
            else
            {
              v114 = 0;
              v115 = 0xE000000000000000;
            }
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
              v122 = v196;
            else
              sub_1C07A011C();
            v123 = *(_QWORD *)(v122 + 16);
            if (v123 >= *(_QWORD *)(v122 + 24) >> 1)
              sub_1C07B7730();
            *(_QWORD *)(v122 + 16) = v123 + 1;
            v196 = v122;
            v124 = v122 + 16 * v123;
            *(_QWORD *)(v124 + 32) = v114;
            *(_QWORD *)(v124 + 40) = v115;
            isUniquelyReferenced_nonNull_native = v206;
            v55 = (uint64_t)v199;
            v56 = v191;
            goto LABEL_87;
          }
          v56 = v191;
          goto LABEL_86;
        }
        swift_bridgeObjectRelease_n();
        sub_1C0780BF4();
        v56 = v191;
      }
      sub_1C07A225C(v111);
LABEL_86:
      v103 = v197;
      v104 = v200;
LABEL_87:
      sub_1C07A225C(v56);
      v102 += (unint64_t)v103;
      if (!--v101)
      {
        swift_bridgeObjectRelease();
        v127 = v195;
        goto LABEL_111;
      }
    }
  }
  v127 = MEMORY[0x1E0DEE9D8];
  v196 = MEMORY[0x1E0DEE9D8];
LABEL_111:
  sub_1C0778624();
  sub_1C07B8540();
  v128 = v175;
  if (*(_QWORD *)(v55 + 16))
  {
    sub_1C07BC91C();
    v130 = v129;
  }
  else
  {
    v130 = 0;
  }
  v131 = *(void (**)(uint64_t, uint64_t))(v201 + 8);
  sub_1C07A3C9C();
  sub_1C0775834();
  if ((v130 & 1) == 0)
  {
LABEL_126:
    sub_1C0778624();
    sub_1C07A497C();
    if (*(_QWORD *)(v55 + 16))
    {
      sub_1C07BC91C();
      v141 = v140;
      sub_1C07A3C9C();
      sub_1C0775834();
      if ((v141 & 1) != 0)
      {
        sub_1C07A497C();
        sub_1C07AD2B8();
        v143 = v142;
        v145 = v144;
        sub_1C07A3C9C();
        if (v145)
          v138 = v143;
        else
          v138 = 0;
        if ((sub_1C0781980() & 1) == 0)
        {
          sub_1C0796878();
          v127 = v170;
        }
        sub_1C078D3C0();
        if (v139)
        {
          sub_1C0797DC4();
          v127 = v171;
        }
        goto LABEL_135;
      }
    }
    else
    {
      sub_1C07A3C9C();
      sub_1C0775834();
    }
    sub_1C07B8540();
    sub_1C07AD2B8();
    v147 = v146;
    v149 = v148;
    sub_1C07A3C9C();
    if (v149)
      v138 = v147;
    else
      v138 = 0;
    if ((sub_1C0781980() & 1) == 0)
    {
      sub_1C0796878();
      v127 = v168;
    }
    sub_1C078D3C0();
    if (v139)
    {
      sub_1C0797DC4();
      v127 = v169;
    }
    sub_1C07B7C84();
    sub_1C07B8540();
    goto LABEL_145;
  }
  sub_1C0778624();
  sub_1C07A497C();
  if (!*(_QWORD *)(v55 + 16))
  {
    sub_1C07A3C9C();
    sub_1C0775834();
    goto LABEL_126;
  }
  sub_1C07BC91C();
  v133 = v132;
  sub_1C07A3C9C();
  sub_1C0775834();
  if ((v133 & 1) == 0)
    goto LABEL_126;
  sub_1C07A497C();
  sub_1C07AD2B8();
  v135 = v134;
  v137 = v136;
  sub_1C07A3C9C();
  if (v137)
    v138 = v135;
  else
    v138 = 0;
  if ((sub_1C0781980() & 1) == 0)
  {
    sub_1C0796878();
    v127 = v172;
  }
  sub_1C078D3C0();
  if (v139)
  {
    sub_1C0797DC4();
    v127 = v173;
  }
LABEL_135:
  sub_1C07B7C84();
  sub_1C07A497C();
LABEL_145:
  sub_1C089AD54(v138, (uint64_t)v199);
  v151 = v150;
  v153 = v152;
  v131(v138, v206);
  if (v153)
    v154 = v151;
  else
    v154 = 0;
  if (!v153)
    v153 = 0xE000000000000000;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
  {
    v155 = v196;
  }
  else
  {
    sub_1C07A011C();
    v155 = v166;
  }
  v156 = *(_QWORD *)(v155 + 16);
  if (v156 >= *(_QWORD *)(v155 + 24) >> 1)
  {
    sub_1C07B7730();
    v155 = v167;
  }
  *(_QWORD *)(v155 + 16) = v156 + 1;
  v157 = v155 + 16 * v156;
  *(_QWORD *)(v157 + 32) = v154;
  *(_QWORD *)(v157 + 40) = v153;
  v204 = v155;
  sub_1C07ACF80(&qword_1ED762B70);
  sub_1C07BB218(&qword_1ED762430, &qword_1ED762B70);
  v158 = sub_1C077B2EC();
  v160 = v159;
  sub_1C077E584();
  v204 = v127;
  v161 = sub_1C077B2EC();
  v163 = v162;
  swift_bridgeObjectRelease();
  v164 = HIBYTE(v163) & 0xF;
  if ((v163 & 0x2000000000000000) == 0)
    v164 = v161 & 0xFFFFFFFFFFFFLL;
  if (!v164)
  {
    *v128 = v158;
    v128[1] = v160;
  }
  sub_1C07767AC();
  *v128 = v161;
  v128[1] = v163;
  sub_1C0775834();
  return sub_1C07767AC();
}

float sub_1C0BFBC70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(_QWORD, double), uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  id v30;
  id v31;
  double v32;
  double v33;
  double v34;
  float v35;
  float v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v44;
  uint64_t v45;
  unint64_t v46;
  float v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  float v61;
  char v64;
  uint64_t v66;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  id v74;

  sub_1C0A57528();
  v74 = sub_1C0BF93FC(v9);
  v11 = v10;
  v13 = v12;
  v72 = v14;
  sub_1C07767AC();
  v15 = a4(a2);
  v73 = sub_1C0BF93FC(v15);
  v17 = v16;
  v19 = v18;
  v71 = v20;
  sub_1C077960C();
  v66 = a1;
  sub_1C0A57528();
  v22 = sub_1C0BF8934(v21);
  v24 = v23;
  sub_1C077960C();
  v25 = a4(a2);
  v26 = sub_1C0BF8934(v25);
  v28 = v27;
  swift_bridgeObjectRelease();
  if (v24 && v28)
  {
    v29 = v22 == 48 && v24 == 0xE100000000000000;
    if (!v29 && (sub_1C07785B0() & 1) == 0)
    {
      sub_1C078A7F0();
      sub_1C07B1E38();
      sub_1C077589C();
      sub_1C07767AC();
      if (v22 == v26 && v24 == v28)
      {

        v36 = 1.0;
      }
      else
      {
        v64 = sub_1C07785B0();

        if ((v64 & 1) != 0)
          v36 = 1.0;
        else
          v36 = 0.0;
      }
      sub_1C077960C();
      sub_1C077B5B4();
      return v36;
    }
    sub_1C077B5B4();
  }
  swift_bridgeObjectRelease();
  if (v74 && v73)
  {
    v30 = v74;
    v31 = v73;
    sub_1C077887C();
    if (v32 < 5.0)
    {
      sub_1C078A7F0();
      sub_1C07B1E38();
      sub_1C077589C();
      sub_1C07767AC();
      sub_1C077887C();
      v34 = v33;

      v35 = v34 / -5.0;
      return v35 + 1.0;
    }

  }
  if (v13 && v19)
  {
    v37 = HIBYTE(v13) & 0xF;
    if ((v13 & 0x2000000000000000) == 0)
      v37 = v11 & 0xFFFFFFFFFFFFLL;
    if (v37)
    {
      v38 = HIBYTE(v19) & 0xF;
      if ((v19 & 0x2000000000000000) == 0)
        v38 = v17 & 0xFFFFFFFFFFFFLL;
      if (v38)
      {
        sub_1C0787A98();
        v39 = sub_1C106FB68();
        v41 = v40;
        if (v39 == sub_1C106FB68() && v41 == v42)
        {
          sub_1C07B1E38();
          sub_1C07767AC();
          sub_1C078A7F0();
          sub_1C077960C();
          goto LABEL_51;
        }
        v44 = sub_1C07785B0();
        sub_1C077960C();
        sub_1C0778580();
        if ((v44 & 1) != 0)
        {
          sub_1C07B1E38();
          sub_1C07767AC();
LABEL_51:
          sub_1C077960C();

          sub_1C077589C();
          return 1.0;
        }
      }
    }
  }
  v45 = sub_1C0787A98();
  sub_1C0BFA87C(v45, v46, v72, v17, v19, v71);
  v36 = v47;
  sub_1C077B5B4();
  sub_1C0778580();
  sub_1C077589C();
  sub_1C07767AC();
  if (v36 > 0.8)
  {

    return 1.0;
  }
  if (!*(_QWORD *)(v69 + *(int *)(type metadata accessor for LocationMatcher() + 36)))
  {
LABEL_41:

    return 0.0;
  }
  v48 = sub_1C0BFAAC4(v66, (uint64_t (*)(_QWORD, double))type metadata accessor for EntityTriple, (uint64_t)sub_1C09D3F18);
  v50 = v49;
  v51 = sub_1C0BFAAC4(a2, a5, a6);
  v53 = HIBYTE(v50) & 0xF;
  if ((v50 & 0x2000000000000000) == 0)
    v53 = v48 & 0xFFFFFFFFFFFFLL;
  if (!v53)
    goto LABEL_40;
  v54 = HIBYTE(v52) & 0xF;
  if ((v52 & 0x2000000000000000) == 0)
    v54 = v51 & 0xFFFFFFFFFFFFLL;
  if (!v54)
  {
LABEL_40:
    sub_1C077960C();
    sub_1C0778580();
    goto LABEL_41;
  }
  swift_retain();
  sub_1C07814F0();
  v55 = sub_1C0BF9A14();
  v57 = v56;
  sub_1C0778580();
  v58 = sub_1C0BF9A14();
  v60 = v59;
  sub_1C077960C();
  v61 = sub_1C07D85FC(v55, v57, v58, v60, a3);
  if (!v70)
    v36 = v61;
  swift_release();
  sub_1C077B5B4();
  sub_1C0778580();

  return v36;
}

void sub_1C0BFC0C8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  _BYTE *v49;
  char *v50;
  uint64_t v51;
  float v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  float v57;
  uint64_t v58;
  int v59;
  void (*v60)(char *, uint64_t, uint64_t);
  char *v61;
  char *v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  int *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;

  v88 = a3;
  v89 = a2;
  v90 = a1;
  v82 = a4;
  v5 = sub_1C106ADE0();
  v78 = *(_QWORD *)(v5 - 8);
  v79 = v5;
  MEMORY[0x1E0C80A78](v5);
  v77 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_1C106D1F8();
  v76 = *(_QWORD *)(v80 - 8);
  MEMORY[0x1E0C80A78](v80);
  v87 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C106E590();
  v85 = *(_QWORD *)(v8 - 8);
  v86 = v8;
  MEMORY[0x1E0C80A78](v8);
  v84 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v83 = (char *)&v70 - v11;
  MEMORY[0x1E0C80A78](v12);
  v81 = (char *)&v70 - v13;
  v14 = sub_1C07ACF80(&qword_1ED75A508);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for EntityTriple(0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1C07ACF80(&qword_1ED75F138);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1C07ACF80((uint64_t *)&unk_1ED75EA40);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v70 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v70 - v27;
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v70 - v30;
  v32 = v91;
  sub_1C0CCBA50();
  if (!v32)
  {
    v73 = v17;
    v74 = v16;
    v71 = v28;
    v70 = v25;
    v33 = v87;
    v34 = v88;
    v75 = v19;
    v91 = 0;
    v35 = v86;
    v72 = v4;
    if (v89)
    {
      v36 = v89;
      sub_1C0AA4998();
      v37 = type metadata accessor for GraphTriple(0);
      v38 = (uint64_t)v31;
      if (sub_1C07B2D80((uint64_t)v22, 1, v37) == 1)
      {
        sub_1C0784B6C((uint64_t)v22, &qword_1ED75F138);
        v39 = 1;
        v40 = v35;
      }
      else
      {
        v40 = v35;
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v31, v22, v35);
        sub_1C07B1F90((uint64_t)v22, type metadata accessor for GraphTriple);
        v39 = 0;
      }
    }
    else
    {
      v36 = 0;
      v39 = 1;
      v40 = v86;
      v38 = (uint64_t)v31;
    }
    v41 = (uint64_t)v74;
    v42 = (uint64_t)v75;
    v43 = v90;
    sub_1C07B2D8C(v38, v39, 1, v40);
    sub_1C0AA49F4();
    if (sub_1C07B2D80(v41, 1, v73) == 1)
    {
      sub_1C0784B6C(v41, &qword_1ED75A508);
      if (qword_1ED761458 != -1)
        swift_once();
      v44 = sub_1C106F544();
      sub_1C079E000(v44, (uint64_t)qword_1ED78D818);
      v45 = sub_1C106F538();
      v46 = sub_1C1070390();
      if (os_log_type_enabled(v45, v46))
      {
        v47 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v47 = 0;
        _os_log_impl(&dword_1C0771000, v45, v46, "Location Matcher: skipping entityTriples are empty", v47, 2u);
        MEMORY[0x1C3BA8270](v47, -1, -1);
      }

      sub_1C08C1878();
      v48 = swift_allocError();
      *v49 = 0;
      v91 = v48;
      swift_willThrow();
      goto LABEL_16;
    }
    v50 = v33;
    sub_1C07E563C(v41, v42, type metadata accessor for EntityTriple);
    if (v36)
    {
      v51 = v91;
      v52 = sub_1C0BFBC70(v43, v36, v34, (uint64_t (*)(uint64_t))sub_1C0A575E8, (uint64_t (*)(_QWORD, double))type metadata accessor for GraphTriple, (uint64_t)sub_1C09D3AC0);
      v53 = v81;
      v54 = v82;
      v55 = v85;
      v91 = v51;
      v56 = (uint64_t)v71;
      if (v51)
      {
        sub_1C07B1F90(v42, type metadata accessor for EntityTriple);
LABEL_16:
        sub_1C0784B6C(v38, (uint64_t *)&unk_1ED75EA40);
        return;
      }
      v57 = 1.0;
      if (v52 > 0.88)
        goto LABEL_20;
    }
    else
    {
      v53 = v81;
      v54 = v82;
      v55 = v85;
      v56 = (uint64_t)v71;
    }
    sub_1C106E500();
    sub_1C0784B6C(v38, (uint64_t *)&unk_1ED75EA40);
    sub_1C07B2D8C(v56, 0, 1, v40);
    sub_1C09174F8(v56, v38);
    v57 = 0.88;
LABEL_20:
    v58 = (uint64_t)v70;
    sub_1C078A8CC(v38, (uint64_t)v70, (uint64_t *)&unk_1ED75EA40);
    v59 = sub_1C07B2D80(v58, 1, v40);
    v90 = v38;
    if (v59 == 1)
    {
      sub_1C0784B6C(v58, (uint64_t *)&unk_1ED75EA40);
      sub_1C1070954();
      __break(1u);
    }
    else
    {
      v60 = *(void (**)(char *, uint64_t, uint64_t))(v55 + 32);
      v60(v53, v58, v40);
      v61 = v50;
      _s24IntelligencePlatformCore15LocationMatcherV11entityClass0aB006EntityG0Vvg_0();
      v62 = v53;
      v63 = v55;
      v64 = *(void (**)(char *, char *, uint64_t))(v55 + 16);
      v65 = (uint64_t)v75;
      v64(v83, v75, v40);
      v64(v84, v62, v40);
      v66 = v77;
      sub_1C106ADA4();
      sub_1C106AC60();
      v68 = v67;
      (*(void (**)(char *, uint64_t))(v78 + 8))(v66, v79);
      (*(void (**)(char *, uint64_t))(v63 + 8))(v62, v40);
      sub_1C07B1F90(v65, type metadata accessor for EntityTriple);
      sub_1C0784B6C(v90, (uint64_t *)&unk_1ED75EA40);
      LOBYTE(v66) = *(_BYTE *)(v72 + *(int *)(type metadata accessor for LocationMatcher() + 24));
      (*(void (**)(uint64_t, char *, uint64_t))(v76 + 32))(v54, v61, v80);
      v69 = (int *)type metadata accessor for EntityMatch(0);
      v60((char *)(v54 + v69[5]), (uint64_t)v83, v40);
      v60((char *)(v54 + v69[6]), (uint64_t)v84, v40);
      *(float *)(v54 + v69[7]) = v57;
      *(_QWORD *)(v54 + v69[8]) = v68;
      *(_BYTE *)(v54 + v69[9]) = (_BYTE)v66;
      *(_QWORD *)(v54 + v69[10]) = 0;
    }
  }
}

void sub_1C0BFC7E0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  float v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  float v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t);
  char *v61;
  char *v62;
  void (*v63)(char *, uint64_t, uint64_t);
  char *v64;
  uint64_t v65;
  uint64_t v66;
  int *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  v87 = a1;
  v88 = a3;
  v86 = a2;
  v81 = a4;
  v5 = sub_1C106ADE0();
  v76 = *(_QWORD *)(v5 - 8);
  v77 = v5;
  MEMORY[0x1E0C80A78](v5);
  v75 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C106D1F8();
  v78 = *(_QWORD *)(v7 - 8);
  v79 = v7;
  MEMORY[0x1E0C80A78](v7);
  v74 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C106E590();
  v84 = *(_QWORD *)(v9 - 8);
  v85 = v9;
  MEMORY[0x1E0C80A78](v9);
  v83 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v82 = (char *)&v68 - v12;
  MEMORY[0x1E0C80A78](v13);
  v73 = (char *)&v68 - v14;
  v15 = type metadata accessor for EntityTriple(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1C07ACF80(&qword_1ED75A508);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v68 - v22;
  v24 = sub_1C07ACF80((uint64_t *)&unk_1ED75EA40);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v68 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v68 - v28;
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)&v68 - v31;
  v33 = v89;
  sub_1C0CCBA50();
  if (!v33)
  {
    v71 = v20;
    v72 = v15;
    v69 = v29;
    v68 = v26;
    v89 = 0;
    v35 = v84;
    v34 = v85;
    v80 = v32;
    v70 = v4;
    if (v86)
    {
      v36 = v86;
      sub_1C0AA49F4();
      v37 = v34;
      if (sub_1C07B2D80((uint64_t)v23, 1, v72) != 1)
      {
        v39 = v35;
        (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v80, v23, v34);
        sub_1C07B1F90((uint64_t)v23, type metadata accessor for EntityTriple);
        v38 = 0;
LABEL_8:
        v40 = (uint64_t)v17;
        v42 = v87;
        v41 = v88;
        v43 = (uint64_t)v80;
        sub_1C07B2D8C((uint64_t)v80, v38, 1, v37);
        v44 = (uint64_t)v71;
        sub_1C0AA49F4();
        if (sub_1C07B2D80(v44, 1, v72) == 1)
        {
          sub_1C0784B6C(v44, &qword_1ED75A508);
          if (qword_1ED761458 != -1)
            swift_once();
          v45 = sub_1C106F544();
          sub_1C079E000(v45, (uint64_t)qword_1ED78D818);
          v46 = sub_1C106F538();
          v47 = sub_1C1070390();
          if (os_log_type_enabled(v46, v47))
          {
            v48 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v48 = 0;
            _os_log_impl(&dword_1C0771000, v46, v47, "Location Matcher: skipping entityTriples are empty", v48, 2u);
            MEMORY[0x1C3BA8270](v48, -1, -1);
          }

          sub_1C08C1878();
          v49 = swift_allocError();
          *v50 = 0;
          v89 = v49;
          swift_willThrow();
          goto LABEL_17;
        }
        sub_1C07E563C(v44, (uint64_t)v17, type metadata accessor for EntityTriple);
        if (v36)
        {
          v51 = v89;
          v52 = sub_1C0BFBC70(v42, v36, v41, (uint64_t (*)(uint64_t))sub_1C0A57528, (uint64_t (*)(_QWORD, double))type metadata accessor for EntityTriple, (uint64_t)sub_1C09D3F18);
          v53 = v81;
          v89 = v51;
          v54 = (uint64_t)v69;
          if (v51)
          {
            sub_1C07B1F90((uint64_t)v17, type metadata accessor for EntityTriple);
            v43 = (uint64_t)v80;
LABEL_17:
            sub_1C0784B6C(v43, (uint64_t *)&unk_1ED75EA40);
            return;
          }
          v55 = v39;
          v57 = 1.0;
          v56 = (uint64_t)v80;
          if (v52 > 0.88)
            goto LABEL_21;
        }
        else
        {
          v55 = v39;
          v56 = (uint64_t)v80;
          v53 = v81;
          v54 = (uint64_t)v69;
        }
        sub_1C106E500();
        sub_1C0784B6C(v56, (uint64_t *)&unk_1ED75EA40);
        sub_1C07B2D8C(v54, 0, 1, v37);
        sub_1C09174F8(v54, v56);
        v57 = 0.88;
LABEL_21:
        v58 = (uint64_t)v68;
        sub_1C078A8CC(v56, (uint64_t)v68, (uint64_t *)&unk_1ED75EA40);
        if (sub_1C07B2D80(v58, 1, v37) == 1)
        {
          sub_1C0784B6C(v58, (uint64_t *)&unk_1ED75EA40);
          sub_1C1070954();
          __break(1u);
        }
        else
        {
          v59 = v37;
          v60 = *(void (**)(char *, uint64_t, uint64_t))(v55 + 32);
          v61 = v73;
          v60(v73, v58, v59);
          v62 = v74;
          _s24IntelligencePlatformCore15LocationMatcherV11entityClass0aB006EntityG0Vvg_0();
          v63 = *(void (**)(char *, uint64_t, uint64_t))(v55 + 16);
          v63(v82, v40, v59);
          v63(v83, (uint64_t)v61, v59);
          v64 = v75;
          sub_1C106ADA4();
          sub_1C106AC60();
          v66 = v65;
          (*(void (**)(char *, uint64_t))(v76 + 8))(v64, v77);
          (*(void (**)(char *, uint64_t))(v55 + 8))(v61, v59);
          sub_1C07B1F90(v40, type metadata accessor for EntityTriple);
          sub_1C0784B6C((uint64_t)v80, (uint64_t *)&unk_1ED75EA40);
          LOBYTE(v64) = *(_BYTE *)(v70 + *(int *)(type metadata accessor for LocationMatcher() + 24));
          (*(void (**)(uint64_t, char *, uint64_t))(v78 + 32))(v53, v62, v79);
          v67 = (int *)type metadata accessor for EntityMatch(0);
          v60((char *)(v53 + v67[5]), (uint64_t)v82, v59);
          v60((char *)(v53 + v67[6]), (uint64_t)v83, v59);
          *(float *)(v53 + v67[7]) = v57;
          *(_QWORD *)(v53 + v67[8]) = v66;
          *(_BYTE *)(v53 + v67[9]) = (_BYTE)v64;
          *(_QWORD *)(v53 + v67[10]) = 0;
        }
        return;
      }
      sub_1C0784B6C((uint64_t)v23, &qword_1ED75A508);
      v38 = 1;
    }
    else
    {
      v36 = 0;
      v38 = 1;
      v37 = v85;
    }
    v39 = v35;
    goto LABEL_8;
  }
}

void sub_1C0BFCEC0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  _BYTE *v49;
  char *v50;
  uint64_t v51;
  float v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  float v57;
  uint64_t v58;
  int v59;
  void (*v60)(char *, uint64_t, uint64_t);
  char *v61;
  char *v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  int *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;

  v88 = a3;
  v89 = a2;
  v90 = a1;
  v82 = a4;
  v5 = sub_1C106ADE0();
  v78 = *(_QWORD *)(v5 - 8);
  v79 = v5;
  MEMORY[0x1E0C80A78](v5);
  v77 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_1C106D1F8();
  v76 = *(_QWORD *)(v80 - 8);
  MEMORY[0x1E0C80A78](v80);
  v87 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C106E590();
  v85 = *(_QWORD *)(v8 - 8);
  v86 = v8;
  MEMORY[0x1E0C80A78](v8);
  v84 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v83 = (char *)&v70 - v11;
  MEMORY[0x1E0C80A78](v12);
  v81 = (char *)&v70 - v13;
  v14 = sub_1C07ACF80(&qword_1ED75A508);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for EntityTriple(0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1C07ACF80(&qword_1ED750E40);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1C07ACF80((uint64_t *)&unk_1ED75EA40);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v70 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v70 - v27;
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v70 - v30;
  v32 = v91;
  sub_1C0CCBA50();
  if (!v32)
  {
    v73 = v17;
    v74 = v16;
    v71 = v28;
    v70 = v25;
    v33 = v87;
    v34 = v88;
    v75 = v19;
    v91 = 0;
    v35 = v86;
    v72 = v4;
    if (v89)
    {
      v36 = v89;
      sub_1C0AA49A4();
      v37 = type metadata accessor for ConstructionGraphTriple(0);
      v38 = (uint64_t)v31;
      if (sub_1C07B2D80((uint64_t)v22, 1, v37) == 1)
      {
        sub_1C0784B6C((uint64_t)v22, &qword_1ED750E40);
        v39 = 1;
        v40 = v35;
      }
      else
      {
        v40 = v35;
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v31, v22, v35);
        sub_1C07B1F90((uint64_t)v22, type metadata accessor for ConstructionGraphTriple);
        v39 = 0;
      }
    }
    else
    {
      v36 = 0;
      v39 = 1;
      v40 = v86;
      v38 = (uint64_t)v31;
    }
    v41 = (uint64_t)v74;
    v42 = (uint64_t)v75;
    v43 = v90;
    sub_1C07B2D8C(v38, v39, 1, v40);
    sub_1C0AA49F4();
    if (sub_1C07B2D80(v41, 1, v73) == 1)
    {
      sub_1C0784B6C(v41, &qword_1ED75A508);
      if (qword_1ED761458 != -1)
        swift_once();
      v44 = sub_1C106F544();
      sub_1C079E000(v44, (uint64_t)qword_1ED78D818);
      v45 = sub_1C106F538();
      v46 = sub_1C1070390();
      if (os_log_type_enabled(v45, v46))
      {
        v47 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v47 = 0;
        _os_log_impl(&dword_1C0771000, v45, v46, "Location Matcher: skipping entityTriples are empty", v47, 2u);
        MEMORY[0x1C3BA8270](v47, -1, -1);
      }

      sub_1C08C1878();
      v48 = swift_allocError();
      *v49 = 0;
      v91 = v48;
      swift_willThrow();
      goto LABEL_16;
    }
    v50 = v33;
    sub_1C07E563C(v41, v42, type metadata accessor for EntityTriple);
    if (v36)
    {
      v51 = v91;
      v52 = sub_1C0BFBC70(v43, v36, v34, (uint64_t (*)(uint64_t))sub_1C0A576A8, (uint64_t (*)(_QWORD, double))type metadata accessor for ConstructionGraphTriple, (uint64_t)sub_1C09D3EE4);
      v53 = v81;
      v54 = v82;
      v55 = v85;
      v91 = v51;
      v56 = (uint64_t)v71;
      if (v51)
      {
        sub_1C07B1F90(v42, type metadata accessor for EntityTriple);
LABEL_16:
        sub_1C0784B6C(v38, (uint64_t *)&unk_1ED75EA40);
        return;
      }
      v57 = 1.0;
      if (v52 > 0.88)
        goto LABEL_20;
    }
    else
    {
      v53 = v81;
      v54 = v82;
      v55 = v85;
      v56 = (uint64_t)v71;
    }
    sub_1C106E500();
    sub_1C0784B6C(v38, (uint64_t *)&unk_1ED75EA40);
    sub_1C07B2D8C(v56, 0, 1, v40);
    sub_1C09174F8(v56, v38);
    v57 = 0.88;
LABEL_20:
    v58 = (uint64_t)v70;
    sub_1C078A8CC(v38, (uint64_t)v70, (uint64_t *)&unk_1ED75EA40);
    v59 = sub_1C07B2D80(v58, 1, v40);
    v90 = v38;
    if (v59 == 1)
    {
      sub_1C0784B6C(v58, (uint64_t *)&unk_1ED75EA40);
      sub_1C1070954();
      __break(1u);
    }
    else
    {
      v60 = *(void (**)(char *, uint64_t, uint64_t))(v55 + 32);
      v60(v53, v58, v40);
      v61 = v50;
      _s24IntelligencePlatformCore15LocationMatcherV11entityClass0aB006EntityG0Vvg_0();
      v62 = v53;
      v63 = v55;
      v64 = *(void (**)(char *, char *, uint64_t))(v55 + 16);
      v65 = (uint64_t)v75;
      v64(v83, v75, v40);
      v64(v84, v62, v40);
      v66 = v77;
      sub_1C106ADA4();
      sub_1C106AC60();
      v68 = v67;
      (*(void (**)(char *, uint64_t))(v78 + 8))(v66, v79);
      (*(void (**)(char *, uint64_t))(v63 + 8))(v62, v40);
      sub_1C07B1F90(v65, type metadata accessor for EntityTriple);
      sub_1C0784B6C(v90, (uint64_t *)&unk_1ED75EA40);
      LOBYTE(v66) = *(_BYTE *)(v72 + *(int *)(type metadata accessor for LocationMatcher() + 24));
      (*(void (**)(uint64_t, char *, uint64_t))(v76 + 32))(v54, v61, v80);
      v69 = (int *)type metadata accessor for EntityMatch(0);
      v60((char *)(v54 + v69[5]), (uint64_t)v83, v40);
      v60((char *)(v54 + v69[6]), (uint64_t)v84, v40);
      *(float *)(v54 + v69[7]) = v57;
      *(_QWORD *)(v54 + v69[8]) = v68;
      *(_BYTE *)(v54 + v69[9]) = (_BYTE)v66;
      *(_QWORD *)(v54 + v69[10]) = 0;
    }
  }
}

uint64_t LocationMatcher.execute()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[3] = v0;
  v1[4] = sub_1C078B1F8();
  v1[5] = sub_1C0779D74();
  v2 = sub_1C106D1F8();
  v1[6] = v2;
  v1[7] = *(_QWORD *)(v2 - 8);
  v1[8] = sub_1C0775870();
  v1[9] = sub_1C0775870();
  v1[10] = sub_1C0775870();
  v1[11] = sub_1C0775870();
  sub_1C07ACF80(&qword_1ED7618D0);
  v1[12] = sub_1C0779D74();
  return swift_task_switch();
}

void sub_1C0BFD674()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9[32];

  v1 = v0[12];
  v2 = v0[6];
  v4 = v0[3];
  v3 = v0[4];
  type metadata accessor for PhaseStores();
  v5 = *(int *)(v3 + 24);
  v9[0] = *(_BYTE *)(v4 + v5);
  sub_1C07B9800();
  sub_1C077B118();
  sub_1C07B2D8C(v6, v7, v8, v2);
  sub_1C0AB2308(v9, v1);
  sub_1C0784B6C(v1, &qword_1ED7618D0);
  __asm { BR              X9 }
}

uint64_t sub_1C0BFD70C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t (*v12)(void);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;

  v5 = v1[7];
  v6 = v1[3];
  v7 = *(_QWORD *)(v4 + v2);
  sub_1C07B9800();
  v8 = sub_1C0794DA4();
  *(_QWORD *)(v8 + 16) = v6;
  sub_1C079FEF0();
  sub_1C09144FC(v9);
  v10 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  sub_1C07B8034();
  sub_1C077C104();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1C0779D18();
    sub_1C077C104();
    swift_task_dealloc();
    v12 = (uint64_t (*)(void))v1[1];
  }
  else
  {
    if (*(_BYTE *)(v7 + *(int *)(sub_1C07938D0() + 28)) == 1)
    {
      v11 = v1[10];
      sub_1C07A5F44();
      *(_QWORD *)(sub_1C0794DA4() + 16) = v8;
      sub_1C0914518(v11);
      v10(v11, v6);
      sub_1C0779D18();
    }
    v13 = v1[12];
    v14 = v1[6];
    sub_1C106AC6C();
    sub_1C077B118();
    sub_1C088A270();
    v19 = *(_BYTE *)(v4 + v3);
    _s24IntelligencePlatformCore15LocationMatcherV11entityClass0aB006EntityG0Vvg_0();
    sub_1C077B118();
    sub_1C07B2D8C(v15, v16, v17, v14);
    sub_1C0AB25AC(&v19, v13);
    sub_1C0784B6C(v13, &qword_1ED7618D0);
    sub_1C077C104();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1C0779D18();
    swift_task_dealloc();
    swift_task_dealloc();
    v12 = (uint64_t (*)(void))v1[1];
  }
  return v12();
}

uint64_t sub_1C0BFDA40()
{
  return LocationMatcher.entityClass.getter();
}

uint64_t sub_1C0BFDA64()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C0806670;
  return LocationMatcher.execute()();
}

uint64_t type metadata accessor for LocationMatcher()
{
  uint64_t result;

  result = qword_1ED75AEF8;
  if (!qword_1ED75AEF8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C0BFDAE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1C0B4EBFC(a1, a2, a3, *(_QWORD *)(v3 + 16), (uint64_t (*)(void))sub_1C0BFC0C8);
}

uint64_t sub_1C0BFDB04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1C0B4EBFC(a1, a2, a3, *(_QWORD *)(v3 + 16), (uint64_t (*)(void))sub_1C0BFCEC0);
}

uint64_t sub_1C0BFDB24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1C0B4EBFC(a1, a2, a3, *(_QWORD *)(v3 + 16), (uint64_t (*)(void))sub_1C0BFC7E0);
}

void sub_1C0BFDB44(uint64_t a1)
{
  uint64_t v2;

  sub_1C07803F8(&qword_1ED75AEF0, (void (*)(uint64_t))type metadata accessor for LocationMatcher);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0BFDB80(uint64_t a1)
{
  uint64_t v2;

  sub_1C07803F8(&qword_1ED75AEE0, (void (*)(uint64_t))type metadata accessor for LocationMatcher);
  *(_QWORD *)(a1 + 8) = v2;
}

_QWORD *initializeBufferWithCopyOfBuffer for LocationMatcher(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  void (*v23)(char *, char *, uint64_t);
  char *v24;
  char *v25;
  uint64_t v26;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1C106AB28();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = type metadata accessor for Configuration();
    *(_OWORD *)((char *)a1 + *(int *)(v8 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v8 + 20));
    v9 = (int *)type metadata accessor for PhaseStores();
    *(_QWORD *)((char *)a1 + v9[5]) = *(_QWORD *)((char *)a2 + v9[5]);
    *(_QWORD *)((char *)a1 + v9[6]) = *(_QWORD *)((char *)a2 + v9[6]);
    *(_QWORD *)((char *)a1 + v9[7]) = *(_QWORD *)((char *)a2 + v9[7]);
    *(_QWORD *)((char *)a1 + v9[8]) = *(_QWORD *)((char *)a2 + v9[8]);
    *(_QWORD *)((char *)a1 + v9[9]) = *(_QWORD *)((char *)a2 + v9[9]);
    *(_QWORD *)((char *)a1 + v9[10]) = *(_QWORD *)((char *)a2 + v9[10]);
    *(_QWORD *)((char *)a1 + v9[11]) = *(_QWORD *)((char *)a2 + v9[11]);
    v10 = a3[5];
    v11 = (_QWORD *)((char *)a1 + v10);
    v12 = (char *)a2 + v10;
    v13 = *(_QWORD *)((char *)a2 + v10 + 8);
    *v11 = *(_QWORD *)((char *)a2 + v10);
    v11[1] = v13;
    v11[2] = *(_QWORD *)((char *)a2 + v10 + 16);
    v26 = type metadata accessor for Source();
    v14 = *(int *)(v26 + 24);
    v24 = &v12[v14];
    v25 = (char *)v11 + v14;
    v15 = sub_1C106D1F8();
    v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v23(v25, v24, v15);
    *((_BYTE *)v11 + *(int *)(v26 + 28)) = v12[*(int *)(v26 + 28)];
    v16 = a3[7];
    *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    *(_QWORD *)((char *)a1 + v16) = *(_QWORD *)((char *)a2 + v16);
    v17 = a3[9];
    *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    *(_QWORD *)((char *)a1 + v17) = *(_QWORD *)((char *)a2 + v17);
    v18 = a3[10];
    v19 = *(void **)((char *)a2 + v18);
    *(_QWORD *)((char *)a1 + v18) = v19;
    swift_retain();
    swift_retain();
    v20 = v19;
  }
  return a1;
}

void destroy for LocationMatcher(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  type metadata accessor for PhaseStores();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v5 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  v6 = v5 + *(int *)(type metadata accessor for Source() + 24);
  v7 = sub_1C106D1F8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_release();
  swift_release();

}

uint64_t initializeWithCopy for LocationMatcher(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  char *v23;
  uint64_t v24;

  v6 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = type metadata accessor for Configuration();
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  v8 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(a1 + v8[5]) = *(_QWORD *)(a2 + v8[5]);
  *(_QWORD *)(a1 + v8[6]) = *(_QWORD *)(a2 + v8[6]);
  *(_QWORD *)(a1 + v8[7]) = *(_QWORD *)(a2 + v8[7]);
  *(_QWORD *)(a1 + v8[8]) = *(_QWORD *)(a2 + v8[8]);
  *(_QWORD *)(a1 + v8[9]) = *(_QWORD *)(a2 + v8[9]);
  *(_QWORD *)(a1 + v8[10]) = *(_QWORD *)(a2 + v8[10]);
  *(_QWORD *)(a1 + v8[11]) = *(_QWORD *)(a2 + v8[11]);
  v9 = a3[5];
  v10 = (_QWORD *)(a1 + v9);
  v11 = a2 + v9;
  v12 = *(_QWORD *)(a2 + v9 + 8);
  *v10 = *(_QWORD *)(a2 + v9);
  v10[1] = v12;
  v10[2] = *(_QWORD *)(a2 + v9 + 16);
  v24 = type metadata accessor for Source();
  v13 = *(int *)(v24 + 24);
  v22 = v11 + v13;
  v23 = (char *)v10 + v13;
  v14 = sub_1C106D1F8();
  v21 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v21(v23, v22, v14);
  *((_BYTE *)v10 + *(int *)(v24 + 28)) = *(_BYTE *)(v11 + *(int *)(v24 + 28));
  v15 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v15) = *(_QWORD *)(a2 + v15);
  v16 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  v17 = a3[10];
  v18 = *(void **)(a2 + v17);
  *(_QWORD *)(a1 + v17) = v18;
  swift_retain();
  swift_retain();
  v19 = v18;
  return a1;
}

uint64_t assignWithCopy for LocationMatcher(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;

  v6 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for Configuration() + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  v10 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(a1 + v10[5]) = *(_QWORD *)(a2 + v10[5]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[6]) = *(_QWORD *)(a2 + v10[6]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[7]) = *(_QWORD *)(a2 + v10[7]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[8]) = *(_QWORD *)(a2 + v10[8]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[9]) = *(_QWORD *)(a2 + v10[9]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[10]) = *(_QWORD *)(a2 + v10[10]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[11]) = *(_QWORD *)(a2 + v10[11]);
  swift_retain();
  swift_release();
  v11 = a3[5];
  v12 = (_QWORD *)(a1 + v11);
  v13 = a2 + v11;
  *v12 = *(_QWORD *)(a2 + v11);
  v12[1] = *(_QWORD *)(a2 + v11 + 8);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  v12[2] = *(_QWORD *)(v13 + 16);
  v14 = type metadata accessor for Source();
  v15 = *(int *)(v14 + 24);
  v16 = (char *)v12 + v15;
  v17 = v13 + v15;
  v18 = sub_1C106D1F8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  *((_BYTE *)v12 + *(int *)(v14 + 28)) = *(_BYTE *)(v13 + *(int *)(v14 + 28));
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_retain();
  swift_release();
  v19 = a3[10];
  v20 = *(void **)(a1 + v19);
  v21 = *(void **)(a2 + v19);
  *(_QWORD *)(a1 + v19) = v21;
  v22 = v21;

  return a1;
}

uint64_t initializeWithTake for LocationMatcher(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = type metadata accessor for Configuration();
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  v8 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(a1 + v8[5]) = *(_QWORD *)(a2 + v8[5]);
  *(_QWORD *)(a1 + v8[6]) = *(_QWORD *)(a2 + v8[6]);
  *(_QWORD *)(a1 + v8[7]) = *(_QWORD *)(a2 + v8[7]);
  *(_QWORD *)(a1 + v8[8]) = *(_QWORD *)(a2 + v8[8]);
  *(_QWORD *)(a1 + v8[9]) = *(_QWORD *)(a2 + v8[9]);
  *(_QWORD *)(a1 + v8[10]) = *(_QWORD *)(a2 + v8[10]);
  *(_QWORD *)(a1 + v8[11]) = *(_QWORD *)(a2 + v8[11]);
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_OWORD *)v10 = *(_OWORD *)(a2 + v9);
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(a2 + v9 + 16);
  v12 = type metadata accessor for Source();
  v13 = *(int *)(v12 + 24);
  v14 = v10 + v13;
  v15 = v11 + v13;
  v16 = sub_1C106D1F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  *(_BYTE *)(v10 + *(int *)(v12 + 28)) = *(_BYTE *)(v11 + *(int *)(v12 + 28));
  v17 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);
  v18 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v18) = *(_QWORD *)(a2 + v18);
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  return a1;
}

uint64_t assignWithTake for LocationMatcher(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;

  v6 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = type metadata accessor for Configuration();
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  v8 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(a1 + v8[5]) = *(_QWORD *)(a2 + v8[5]);
  swift_release();
  *(_QWORD *)(a1 + v8[6]) = *(_QWORD *)(a2 + v8[6]);
  swift_release();
  *(_QWORD *)(a1 + v8[7]) = *(_QWORD *)(a2 + v8[7]);
  swift_release();
  *(_QWORD *)(a1 + v8[8]) = *(_QWORD *)(a2 + v8[8]);
  swift_release();
  *(_QWORD *)(a1 + v8[9]) = *(_QWORD *)(a2 + v8[9]);
  swift_release();
  *(_QWORD *)(a1 + v8[10]) = *(_QWORD *)(a2 + v8[10]);
  swift_release();
  *(_QWORD *)(a1 + v8[11]) = *(_QWORD *)(a2 + v8[11]);
  swift_release();
  v9 = a3[5];
  v10 = (_QWORD *)(a1 + v9);
  v11 = a2 + v9;
  v12 = *(_QWORD *)(a2 + v9 + 8);
  *v10 = *(_QWORD *)(a2 + v9);
  v10[1] = v12;
  swift_bridgeObjectRelease();
  v10[2] = *(_QWORD *)(v11 + 16);
  v13 = type metadata accessor for Source();
  v14 = *(int *)(v13 + 24);
  v15 = (char *)v10 + v14;
  v16 = v11 + v14;
  v17 = sub_1C106D1F8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v15, v16, v17);
  *((_BYTE *)v10 + *(int *)(v13 + 28)) = *(_BYTE *)(v11 + *(int *)(v13 + 28));
  v18 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v18) = *(_QWORD *)(a2 + v18);
  swift_release();
  v19 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v19) = *(_QWORD *)(a2 + v19);
  swift_release();
  v20 = a3[10];
  v21 = *(void **)(a1 + v20);
  *(_QWORD *)(a1 + v20) = *(_QWORD *)(a2 + v20);

  return a1;
}

uint64_t getEnumTagSinglePayload for LocationMatcher()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1C0BFE614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1C077D0AC();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = v4;
LABEL_5:
    sub_1C07B2D80(v8, v3, v7);
    return;
  }
  v9 = type metadata accessor for Source();
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v9;
    v8 = v4 + *(int *)(a3 + 20);
    goto LABEL_5;
  }
  sub_1C077671C();
}

uint64_t storeEnumTagSinglePayload for LocationMatcher()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0BFE6AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v8 = sub_1C077D0AC();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = v5;
    return sub_1C07B2D8C(v10, v4, v4, v9);
  }
  result = type metadata accessor for Source();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
  {
    v9 = result;
    v10 = v5 + *(int *)(a4 + 20);
    return sub_1C07B2D8C(v10, v4, v4, v9);
  }
  *(_QWORD *)(v5 + *(int *)(a4 + 28)) = (v4 - 1);
  return result;
}

uint64_t sub_1C0BFE73C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for PhaseStores();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Source();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void **assignWithCopy for DataDetectorService(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a1;
  v4 = *a2;
  *a1 = *a2;
  v5 = v4;

  return a1;
}

void **assignWithTake for DataDetectorService(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for DataDetectorService()
{
  return &type metadata for DataDetectorService;
}

uint64_t sub_1C0BFE860@<X0>(_BYTE *a1@<X8>)
{
  return sub_1C0BFA7E8(a1);
}

unint64_t sub_1C0BFE87C()
{
  unint64_t result;

  result = qword_1ED75D1C0;
  if (!qword_1ED75D1C0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED75D1C0);
  }
  return result;
}

uint64_t sub_1C0BFE8B8(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_addressComponents);
  if (!v1)
    return 0;
  v2 = v1;
  type metadata accessor for NSTextCheckingKey(0);
  sub_1C07803F8(qword_1ED7512B8, type metadata accessor for NSTextCheckingKey);
  v3 = sub_1C106F940();

  return v3;
}

void sub_1C0BFE940()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = sub_1C106FB14();
  v2 = v1;
  if (v0 != sub_1C106FB14() || v2 != v3)
  {
    sub_1C078109C();
    sub_1C07785B0();
  }
  sub_1C07767AC();
  sub_1C077960C();
  sub_1C077671C();
}

uint64_t sub_1C0BFE9AC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;

  sub_1C07B62E4();
  v10 = v4;
  v11 = v5;
  v6 = sub_1C079DFC4((uint64_t *)&v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 32))(v6, v2, v0);
  v7 = *v1;
  *(_QWORD *)(v7 + 16) = v3 + 1;
  return sub_1C077DD60(&v9, v7 + 40 * v3 + 32);
}

uint64_t sub_1C0BFEA18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0BFDB24(a1, a2, a3);
}

uint64_t sub_1C0BFEA2C()
{
  return sub_1C106FE44();
}

uint64_t sub_1C0BFEA38()
{
  return sub_1C0BFE9AC();
}

void sub_1C0BFEA44(int a1@<W0>, _BYTE *a2@<X8>)
{
  char v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;

  if ((a1 - 1) >= 9)
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v4 = sub_1C106F544();
    sub_1C079E000(v4, (uint64_t)qword_1ED762AF8);
    v5 = sub_1C106F538();
    v6 = sub_1C107039C();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)sub_1C0775854();
      *(_DWORD *)v7 = 67109120;
      sub_1C10705AC();
      _os_log_impl(&dword_1C0771000, v5, v6, "Unknown BMLocationHashedCoordinatesDistanceRange with value: %d", v7, 8u);
      sub_1C0776778();
    }

    v3 = 0;
  }
  else
  {
    v3 = a1;
  }
  *a2 = v3;
}

IntelligencePlatformCore::LocationHashedCoordinatesDistanceRange_optional __swiftcall LocationHashedCoordinatesDistanceRange.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 10;
  if ((unint64_t)rawValue < 0xA)
    v2 = rawValue;
  *v1 = v2;
  return (IntelligencePlatformCore::LocationHashedCoordinatesDistanceRange_optional)rawValue;
}

void *static LocationHashedCoordinatesDistanceRange.allCases.getter()
{
  return &unk_1E7A056F8;
}

uint64_t LocationHashedCoordinatesDistanceRange.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t sub_1C0BFEB8C()
{
  unint64_t result;

  result = qword_1EF642248;
  if (!qword_1EF642248)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for LocationHashedCoordinatesDistanceRange, &type metadata for LocationHashedCoordinatesDistanceRange);
    atomic_store(result, (unint64_t *)&qword_1EF642248);
  }
  return result;
}

IntelligencePlatformCore::LocationHashedCoordinatesDistanceRange_optional sub_1C0BFEBC8(Swift::Int *a1)
{
  return LocationHashedCoordinatesDistanceRange.init(rawValue:)(*a1);
}

uint64_t sub_1C0BFEBD0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = LocationHashedCoordinatesDistanceRange.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1C0BFEBF4()
{
  return sub_1C07F52E0(&qword_1EF642250, qword_1EF642258, MEMORY[0x1E0DEAF50]);
}

void sub_1C0BFEC20(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7A056F8;
}

uint64_t storeEnumTagSinglePayload for LocationHashedCoordinatesDistanceRange(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1C0BFEC7C + 4 * byte_1C10A7945[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1C0BFECB0 + 4 * byte_1C10A7940[v4]))();
}

uint64_t sub_1C0BFECB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0BFECB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0BFECC0);
  return result;
}

uint64_t sub_1C0BFECCC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0BFECD4);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1C0BFECD8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0BFECE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LocationHashedCoordinatesDistanceRange()
{
  return &type metadata for LocationHashedCoordinatesDistanceRange;
}

uint64_t sub_1C0BFECFC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C0BFED0C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  int v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  id v18;
  int v19;
  int v20;
  char v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v6 = type metadata accessor for LocationMetadataEvent();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_opt_self();
  if (swift_dynamicCastObjCClass())
  {
    v9 = sub_1C077AE98();
    v36 = a3;
    v10 = *(_QWORD *)(v9 - 8);
    sub_1C0799EB4((uint64_t)v8);
    v11 = sub_1C0799EB4((uint64_t)&v8[*(int *)(v6 + 20)]);
    v12 = sub_1C079866C(v11, sel_distanceBucketFromHome);
    v13 = (int)v12;
    v14 = sub_1C079866C((uint64_t)v12, sel_distanceBucketFromWork);
    v15 = v6;
    v16 = a2;
    v17 = (int)v14;
    v18 = sub_1C079866C((uint64_t)v14, sel_distanceBucketFromGym);
    v19 = (int)v18;
    v20 = sub_1C079866C((uint64_t)v18, sel_distanceBucketFromSchool);
    sub_1C0BFEA44(v13, &v38);
    LOBYTE(v13) = v38;
    sub_1C0BFEA44(v17, &v38);
    LOBYTE(v17) = v38;
    sub_1C0BFEA44(v19, &v38);
    LOBYTE(v19) = v38;
    sub_1C0BFEA44(v20, &v38);

    v21 = v38;
    v22 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    a3 = v36;
    v23 = v16;
    v6 = v15;
    v22(v23, v9);
    v24 = &v8[*(int *)(v15 + 24)];
    *v24 = v13;
    v24[1] = v17;
    v24[2] = v19;
    v24[3] = v21;
    sub_1C0BFF148((uint64_t)v8, a3);
    v25 = 0;
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v26 = sub_1C106F544();
    sub_1C079E000(v26, (uint64_t)qword_1ED762AF8);
    v27 = a1;
    v28 = sub_1C106F538();
    v29 = sub_1C107039C();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)sub_1C0775854();
      v38 = sub_1C0775854();
      v36 = a2;
      *(_DWORD *)v30 = 136315138;
      swift_getObjectType();
      v31 = sub_1C1070F00();
      v37 = sub_1C0788DAC(v31, v32, &v38);
      sub_1C10705AC();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C0771000, v28, v29, "Could not create a BMLocationHashedCoordinates event from the provided event - %s", v30, 0xCu);
      swift_arrayDestroy();
      sub_1C0776778();
    }

    v33 = sub_1C077AE98();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(a2, v33);
    v25 = 1;
  }
  return sub_1C07B2D8C(a3, v25, 1, v6);
}

void sub_1C0BFF054()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)BiomeLibrary(), sel_Location);
  swift_unknownObjectRelease();
  v1 = objc_msgSend(v0, sel_HashedCoordinates);
  swift_unknownObjectRelease();
  sub_1C07E2168();

}

void sub_1C0BFF0FC()
{
  sub_1C0BFF054();
}

uint64_t type metadata accessor for LocationMetadataEvent()
{
  uint64_t result;

  result = qword_1EF6422D8;
  if (!qword_1EF6422D8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C0BFF148(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LocationMetadataEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_1C0BFF18C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1C106ADE0();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    *(_DWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_DWORD *)((char *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t sub_1C0BFF234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1C106ADE0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(_DWORD *)(a1 + *(int *)(a3 + 24)) = *(_DWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1C0BFF2B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;

  v6 = sub_1C106ADE0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = (_BYTE *)(a1 + v8);
  v10 = (_BYTE *)(a2 + v8);
  *v9 = *v10;
  v9[1] = v10[1];
  v9[2] = v10[2];
  v9[3] = v10[3];
  return a1;
}

uint64_t sub_1C0BFF34C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1C106ADE0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(_DWORD *)(a1 + *(int *)(a3 + 24)) = *(_DWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1C0BFF3C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1C106ADE0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(_DWORD *)(a1 + *(int *)(a3 + 24)) = *(_DWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1C0BFF444()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0BFF450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unsigned int v8;

  v6 = sub_1C077AE98();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return sub_1C07B2D80(a1, a2, v6);
  v8 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  if (v8 >= 0xA)
    return v8 - 9;
  else
    return 0;
}

uint64_t sub_1C0BFF4C0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0BFF4CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = sub_1C077AE98();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return sub_1C07B2D8C(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 9;
  return result;
}

uint64_t sub_1C0BFF53C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C106ADE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C0BFF5B0()
{
  return sub_1C07F52E0(&qword_1EF642318, qword_1EF642320, (uint64_t)&unk_1C10B5B14);
}

_DWORD *initializeBufferWithCopyOfBuffer for LocationMetadataContent(_DWORD *result, _DWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for LocationMetadataContent(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xF7 && a1[4])
    {
      v2 = *(_DWORD *)a1 + 246;
    }
    else
    {
      v3 = *a1;
      v4 = v3 >= 0xA;
      v2 = v3 - 10;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocationMetadataContent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF6)
  {
    *(_DWORD *)result = a2 - 247;
    if (a3 >= 0xF7)
      *(_BYTE *)(result + 4) = 1;
  }
  else
  {
    if (a3 >= 0xF7)
      *(_BYTE *)(result + 4) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 9;
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationMetadataContent()
{
  return &type metadata for LocationMetadataContent;
}

uint64_t sub_1C0BFF674(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD v19[2];
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v23 = type metadata accessor for FeatureProviderSnapshot(0);
  v6 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    v19[1] = a2;
    v24 = MEMORY[0x1E0DEE9D8];
    sub_1C09D3218();
    v10 = v24;
    v11 = sub_1C106ADE0();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v21 = *(_QWORD *)(v12 + 72);
    v22 = v11;
    v20 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    do
    {
      v20(v8, v13, v22);
      v14 = sub_1C0BFFE44(v13);
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C07E7D3C(v14, a3);
      swift_bridgeObjectRelease();
      sub_1C089B840();
      v16 = v15;
      swift_release();
      *(_QWORD *)&v8[*(int *)(v23 + 20)] = v16;
      v24 = v10;
      v17 = *(_QWORD *)(v10 + 16);
      if (v17 >= *(_QWORD *)(v10 + 24) >> 1)
      {
        sub_1C09D3218();
        v10 = v24;
      }
      *(_QWORD *)(v10 + 16) = v17 + 1;
      sub_1C07E7EF8((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v17);
      v13 += v21;
      --v9;
    }
    while (v9);
    swift_release();
  }
  else
  {
    swift_release();
    v10 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1C0BFF858(unsigned int a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;

  if (a1 == 0x7FFFFFFF)
    v1 = 0;
  else
    v1 = 7;
  if (a1 >= 0x28)
    v2 = v1;
  else
    v2 = 6;
  if (a1 >= 0x14)
    v3 = v2;
  else
    v3 = 5;
  if (a1 >= 0xA)
    v4 = v3;
  else
    v4 = 4;
  if (a1 >= 4)
    v5 = v4;
  else
    v5 = 3;
  if (a1 >= 2)
    v6 = v5;
  else
    v6 = 2;
  if ((a1 & 0x80000000) == 0)
    return v6;
  else
    return 1;
}

void sub_1C0BFF90C()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  unint64_t v3;
  int v4;
  int v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v0 = 3;
  v13 = MEMORY[0x1E0DEE9D8];
  sub_1C09D30E0();
  v1 = &byte_1E79FC5E0;
  v2 = v13;
  v3 = 0x80000001C10E9810;
  do
  {
    v5 = *v1++;
    v4 = v5;
    v6 = 0xD000000000000014;
    if (v5 == 1)
    {
      v7 = 0x80000001C10E9830;
    }
    else
    {
      v6 = 0xD000000000000011;
      v7 = 0x80000001C10E9850;
    }
    if (v4)
      v8 = v6;
    else
      v8 = 0xD000000000000011;
    if (v4)
      v9 = v7;
    else
      v9 = v3;
    v14 = v2;
    v10 = *(_QWORD *)(v2 + 16);
    if (v10 >= *(_QWORD *)(v2 + 24) >> 1)
    {
      v12 = v3;
      sub_1C09D30E0();
      v3 = v12;
      v2 = v14;
    }
    *(_QWORD *)(v2 + 16) = v10 + 1;
    v11 = v2 + 16 * v10;
    *(_QWORD *)(v11 + 32) = v8;
    *(_QWORD *)(v11 + 40) = v9;
    --v0;
  }
  while (v0);
  sub_1C0898D28(v2);
}

uint64_t sub_1C0BFFA2C(uint64_t a1)
{
  void *v2;
  uint64_t v4;

  v2 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C0BFFA7C(a1, &v4);
  objc_autoreleasePoolPop(v2);
  return v4;
}

uint64_t sub_1C0BFFA7C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  uint64_t aBlock;
  uint64_t v25;
  void (*v26)(uint64_t, void *);
  void *v27;
  void (*v28)(void *);
  uint64_t v29;

  v4 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&aBlock - v8;
  v10 = objc_msgSend((id)BiomeLibrary(), sel_Location);
  swift_unknownObjectRelease();
  v11 = objc_msgSend(v10, sel_HashedCoordinates);
  swift_unknownObjectRelease();
  v12 = sub_1C106ADE0();
  sub_1C07B2D8C((uint64_t)v9, 1, 1, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v6, a1, v12);
  sub_1C07B2D8C((uint64_t)v6, 0, 1, v12);
  v13 = objc_allocWithZone(MEMORY[0x1E0D026F0]);
  v14 = sub_1C07DC9F8((uint64_t)v9, (uint64_t)v6, 1, 1, 0);
  v15 = objc_msgSend(v11, sel_publisherWithOptions_, v14);

  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = 0;
  v28 = (void (*)(void *))nullsub_1;
  v29 = 0;
  v17 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v25 = 1107296256;
  v26 = (void (*)(uint64_t, void *))sub_1C07BF90C;
  v27 = &unk_1E7A23A18;
  v18 = _Block_copy(&aBlock);
  v28 = sub_1C0C003E8;
  v29 = v16;
  aBlock = v17;
  v25 = 1107296256;
  v26 = sub_1C0779530;
  v27 = &unk_1E7A23A40;
  v19 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v20 = objc_msgSend(v15, sel_sinkWithCompletion_receiveInput_, v18, v19);

  _Block_release(v19);
  _Block_release(v18);

  swift_beginAccess();
  v21 = *(void **)(v16 + 16);
  *a2 = v21;
  v22 = v21;
  return swift_release();
}

void sub_1C0BFFD28(void *a1, uint64_t a2)
{
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  NSObject *oslog;

  v3 = objc_msgSend(a1, sel_eventBody);
  if (v3)
  {
    v4 = v3;
    swift_beginAccess();
    v5 = *(void **)(a2 + 16);
    *(_QWORD *)(a2 + 16) = v4;

  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v6 = sub_1C106F544();
    sub_1C079E000(v6, (uint64_t)qword_1ED762AF8);
    oslog = sub_1C106F538();
    v7 = sub_1C10703A8();
    if (os_log_type_enabled(oslog, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_1C0771000, oslog, v7, "Unable to parse eventBody from read event in location metadata featurizer", v8, 2u);
      MEMORY[0x1C3BA8270](v8, -1, -1);
    }

  }
}

uint64_t sub_1C0BFFE44(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t inited;
  uint64_t v4;
  id v5;
  id v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;

  v1 = sub_1C0BFFA2C(a1);
  if (v1)
  {
    v2 = (void *)v1;
    sub_1C07ACF80(&qword_1ED755050);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1078A20;
    *(_QWORD *)(inited + 32) = 0xD000000000000011;
    *(_QWORD *)(inited + 40) = 0x80000001C10E9810;
    v4 = (int)sub_1C079448C(inited, sel_speedBucket);
    v5 = objc_msgSend((id)objc_opt_self(), sel_featureValueWithInt64_, v4);
    *(_QWORD *)(inited + 48) = v5;
    *(_QWORD *)(inited + 56) = 0xD000000000000014;
    *(_QWORD *)(inited + 64) = 0x80000001C10E9830;
    sub_1C079448C((uint64_t)v5, sel_altitudeBucket);
    v6 = sub_1C0798E44();
    *(_QWORD *)(inited + 72) = v6;
    *(_QWORD *)(inited + 80) = 0xD000000000000011;
    *(_QWORD *)(inited + 88) = 0x80000001C10E9850;
    v7 = sub_1C079448C((uint64_t)v6, sel_floor);
    sub_1C0BFF858(v7);
    *(_QWORD *)(inited + 96) = sub_1C0798E44();
    sub_1C07D97D4();
    v8 = sub_1C106F97C();

    return v8;
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v10 = sub_1C106F544();
    sub_1C079E000(v10, (uint64_t)qword_1ED762AF8);
    v11 = sub_1C106F538();
    v12 = sub_1C10703A8();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_1C0771000, v11, v12, "Unable to fetch most recent locationMetadata event", v13, 2u);
      MEMORY[0x1C3BA8270](v13, -1, -1);
    }

    sub_1C07D97D4();
    return sub_1C106F97C();
  }
}

uint64_t sub_1C0C00088@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  swift_retain();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  result = sub_1C0BFF674(a2, v3, a1);
  *a3 = result;
  return result;
}

void sub_1C0C000DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v0 = sub_1C106ADE0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106ADA4();
  sub_1C0BFFE44((uint64_t)v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1C077671C();
}

uint64_t sub_1C0C00158(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = sub_1C106ADE0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106ADA4();
  v8 = sub_1C0BFFE44((uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v9 = sub_1C089A990(a1, a2, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t type metadata accessor for LocationMetadataSignal()
{
  return objc_opt_self();
}

void sub_1C0C00298()
{
  uint64_t v0;
  id v1;
  id v2;

  v1 = objc_msgSend((id)BiomeLibrary(), sel_Location);
  swift_unknownObjectRelease();
  v2 = objc_msgSend(v1, sel_HashedCoordinates);
  swift_unknownObjectRelease();
  *(_QWORD *)(v0 + 16) = v2;
  sub_1C077671C();
}

void sub_1C0C0030C()
{
  sub_1C0C000DC();
}

uint64_t sub_1C0C00320@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C0C00088(a1, a2, a3);
}

void sub_1C0C00340()
{
  sub_1C0BFF90C();
}

uint64_t sub_1C0C00354()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1C0C00364(uint64_t a1)
{
  unint64_t result;

  result = sub_1C0C00388();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0C00388()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF642418;
  if (!qword_1EF642418)
  {
    v1 = type metadata accessor for LocationMetadataSignal();
    result = MEMORY[0x1C3BA8174](&unk_1C10A7B48, v1);
    atomic_store(result, &qword_1EF642418);
  }
  return result;
}

uint64_t sub_1C0C003C4()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1C0C003E8(void *a1)
{
  uint64_t v1;

  sub_1C0BFFD28(a1, v1);
}

uint64_t sub_1C0C003F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = sub_1C106F544();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  sub_1C0798E50();
  v3 = sub_1C106F538();
  v4 = sub_1C1070378();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)sub_1C0775854();
    v10 = sub_1C0775854();
    *(_DWORD *)v5 = 136315138;
    v6 = sub_1C08D873C();
    sub_1C0788DAC(v6, v7, &v10);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    sub_1C07796F0(&dword_1C0771000, v3, v4, "<%s: Starting observe notification>", v5);
    sub_1C0778610();
    sub_1C0776778();
  }

  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  MEMORY[0x1E0C80A78](v8);
  swift_retain();
  sub_1C106E4B8();
  return swift_release();
}

uint64_t sub_1C0C005E0()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for LocationsOfInterestMonitor();
  v0 = sub_1C0780678();
  result = sub_1C0C00610();
  qword_1ED78C408 = v0;
  return result;
}

uint64_t sub_1C0C00610()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v12;

  v1 = v0;
  v2 = sub_1C106F544();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1C0798E50();
  v4 = sub_1C106F538();
  v5 = sub_1C1070378();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)sub_1C0775854();
    v12 = sub_1C0775854();
    *(_DWORD *)v6 = 136315138;
    v7 = sub_1C08D873C();
    sub_1C0788DAC(v7, v8, &v12);
    sub_1C07936B4();
    swift_bridgeObjectRelease();
    sub_1C07796F0(&dword_1C0771000, v4, v5, "<%s: Init>", v6);
    sub_1C0778610();
    sub_1C0776778();
  }

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v2);
  type metadata accessor for LocationsOfInterestMonitor.GuardedData();
  v9 = sub_1C0780678();
  sub_1C07815A8();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  sub_1C106F700();
  sub_1C07803B8((unint64_t *)&qword_1ED762670, v10, MEMORY[0x1E0CB0018]);
  *(_QWORD *)(v9 + 16) = sub_1C106F97C();
  sub_1C07ACF80((uint64_t *)&unk_1ED7415A0);
  swift_allocObject();
  *(_QWORD *)(v1 + 16) = sub_1C106E4C4();
  return v1;
}

uint64_t type metadata accessor for LocationsOfInterestMonitor()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for LocationsOfInterestMonitor.GuardedData()
{
  return objc_opt_self();
}

uint64_t sub_1C0C00834(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char v21;
  void (*v22)(char *, uint64_t, uint64_t);
  id v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;

  v46 = a3;
  v5 = type metadata accessor for Configuration();
  v45 = *(_QWORD *)(v5 - 8);
  v6 = *(_QWORD *)(v45 + 64);
  MEMORY[0x1E0C80A78](v5);
  v44 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C1070414();
  v39 = *(_QWORD *)(v7 - 8);
  v40 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C1070498();
  v37 = *(_QWORD *)(v10 - 8);
  v38 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1C07ACF80(&qword_1ED74D260);
  v42 = *(_QWORD *)(v13 - 8);
  v43 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1C106AB28();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *a1;
  v41 = v20 + 16;
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)(v20 + 16) + 16) || (sub_1C07A35E4(), (v21 & 1) == 0))
  {
    swift_endAccess();
    v35 = v16;
    v36 = v17;
    v22 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
    v33 = a2;
    v34 = v6;
    v22(v19, a2, v16);
    v23 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
    sub_1C10704A4();

    sub_1C1070408();
    sub_1C08D8780();
    v24 = (uint64_t)v44;
    v25 = (void *)sub_1C107042C();
    v47 = v25;
    sub_1C07803B8(&qword_1ED74D3D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1F30], MEMORY[0x1E0CB1F20]);
    sub_1C07803B8((unint64_t *)&unk_1ED74D390, (uint64_t (*)(uint64_t))sub_1C08D8780, MEMORY[0x1E0DEF7F8]);
    v26 = v38;
    sub_1C106F7D8();

    (*(void (**)(char *, uint64_t))(v39 + 8))(v9, v40);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v12, v26);
    sub_1C078E3E0(v33, v24);
    v27 = (*(unsigned __int8 *)(v45 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
    v28 = (v34 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
    v29 = swift_allocObject();
    sub_1C078E578(v24, v29 + v27);
    *(_QWORD *)(v29 + v28) = v46;
    sub_1C08D885C();
    v30 = v43;
    sub_1C106F7F0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v15, v30);
    swift_beginAccess();
    sub_1C089FFA4();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v19, v35);
  }
  return swift_endAccess();
}

uint64_t sub_1C0C00BDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v5 = type metadata accessor for Configuration();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C07ACF80((uint64_t *)&unk_1ED761470);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1C106F544();
  v39 = *(_QWORD *)(v12 - 8);
  v40 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = os_transaction_create();
  sub_1C106F190();
  v16 = sub_1C106F538();
  v17 = sub_1C1070378();
  if (os_log_type_enabled(v16, v17))
  {
    v36 = v7;
    v18 = swift_slowAlloc();
    v38 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    v19 = (uint8_t *)v18;
    v20 = swift_slowAlloc();
    v37 = a2;
    v21 = v20;
    v42 = v20;
    v35 = v15;
    *(_DWORD *)v19 = 136315138;
    v22 = sub_1C08D873C();
    v34 = a3;
    v41 = sub_1C0788DAC(v22, v23, &v42);
    v15 = v35;
    v7 = v36;
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    v24 = v17;
    v25 = v34;
    _os_log_impl(&dword_1C0771000, v16, v24, "<%s: Received notification>", v19, 0xCu);
    swift_arrayDestroy();
    v26 = v21;
    a2 = v37;
    MEMORY[0x1C3BA8270](v26, -1, -1);
    v27 = v19;
    v8 = v38;
    MEMORY[0x1C3BA8270](v27, -1, -1);

    (*(void (**)(char *, uint64_t))(v39 + 8))(v14, v40);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v39 + 8))(v14, v40);
    v25 = a3;
  }
  v28 = sub_1C10700C0();
  sub_1C07B2D8C((uint64_t)v11, 1, 1, v28);
  sub_1C078E3E0(a2, (uint64_t)v8);
  v29 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v30 = (v7 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  v31 = swift_allocObject();
  *(_QWORD *)(v31 + 16) = 0;
  *(_QWORD *)(v31 + 24) = 0;
  sub_1C078E578((uint64_t)v8, v31 + v29);
  *(_QWORD *)(v31 + v30) = v15;
  *(_QWORD *)(v31 + ((v30 + 15) & 0xFFFFFFFFFFFFFFF8)) = v25;
  sub_1C09D0224((uint64_t)v11, (uint64_t)&unk_1EF642428, v31);
  return swift_release();
}

uint64_t sub_1C0C00EC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[6] = a4;
  v6[7] = a6;
  v7 = sub_1C106F544();
  v6[8] = v7;
  v6[9] = *(_QWORD *)(v7 - 8);
  v6[10] = swift_task_alloc();
  v6[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C0C00F34()
{
  _QWORD *v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v1 = v0[11];
  sub_1C0790D8C();
  sub_1C106F538();
  v2 = sub_1C077B0C0();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)sub_1C0775854();
    sub_1C0775854();
    *(_DWORD *)v3 = 136315138;
    v4 = sub_1C08D873C();
    v0[5] = sub_1C0795B98(v4, v5, v6, v7, v8, v9, v10);
    sub_1C07936B4();
    swift_bridgeObjectRelease();
    sub_1C07796F0(&dword_1C0771000, v1, v2, "<%s: Starting delta update>", v3);
    sub_1C0778610();
    sub_1C0776778();
  }
  v11 = v0[11];
  v12 = v0[8];
  v13 = v0[9];

  v14 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v14(v11, v12);
  v0[12] = v14;
  if (qword_1ED755EC8 != -1)
    swift_once();
  v0[13] = sub_1C0CBD888();
  if (qword_1ED761448 != -1)
    swift_once();
  v15 = type metadata accessor for Source();
  v16 = sub_1C079E000(v15, (uint64_t)&unk_1ED762E88);
  v17 = (_QWORD *)swift_task_alloc();
  v0[14] = v17;
  *v17 = v0;
  v17[1] = sub_1C0C012E4;
  return sub_1C0CC8F84(3, v16);
}

uint64_t sub_1C0C012E4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 120) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  swift_task_dealloc();
  sub_1C07767BC();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1C0C01364()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  swift_release();
  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(NSObject **)(v0 + 80);
  sub_1C0790D8C();
  sub_1C077C818();
  sub_1C077C818();
  sub_1C106F538();
  v3 = sub_1C077B0C0();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = sub_1C0775854();
    v13 = sub_1C0775854();
    *(_DWORD *)v4 = 136315394;
    v5 = sub_1C08D873C();
    *(_QWORD *)(v0 + 16) = sub_1C0788DAC(v5, v6, &v13);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2080;
    *(_QWORD *)(v0 + 24) = v1;
    sub_1C077C818();
    sub_1C07ACF80(&qword_1ED7614F0);
    v7 = sub_1C106FB5C();
    *(_QWORD *)(v0 + 32) = sub_1C0788DAC(v7, v8, &v13);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    sub_1C077C220();
    sub_1C077C220();
    _os_log_impl(&dword_1C0771000, v2, v3, "<%s: Can't run delta updates for lifeEvents due to: %s>", (uint8_t *)v4, 0x16u);
    sub_1C0796890();
    sub_1C0776778();
  }
  v9 = *(void (**)(uint64_t, uint64_t))(v0 + 96);
  v10 = *(_QWORD *)(v0 + 80);
  v11 = *(_QWORD *)(v0 + 64);
  sub_1C077C220();
  sub_1C077C220();
  sub_1C077C220();

  v9(v10, v11);
  swift_task_dealloc();
  sub_1C07767BC();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C0C0154C(uint64_t *a1)
{
  uint64_t v1;

  return sub_1C0C00834(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1C0C01564()
{
  uint64_t v0;

  sub_1C0779D10();
  v0 = sub_1C07815A8();
  sub_1C0780A94(v0);
  return swift_deallocObject();
}

uint64_t sub_1C0C015C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  sub_1C0779D10();
  sub_1C07A55C4();
  return sub_1C0C00BDC(a1, v1 + v4, *(_QWORD *)(v1 + (v3 & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1C0C01608()
{
  uint64_t v0;

  sub_1C0779D10();
  swift_unknownObjectRelease();
  v0 = sub_1C07815A8();
  sub_1C0780A94(v0);
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0C0168C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  sub_1C0779D10();
  sub_1C07A55C4();
  v4 &= 0xFFFFFFFFFFFFFFF8;
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v7;
  v9 = *(_QWORD *)(v1 + v4);
  v10 = *(_QWORD *)(v1 + ((v4 + 15) & 0xFFFFFFFFFFFFF8));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_1C0806670;
  return sub_1C0C00EC4(a1, v5, v6, v8, v9, v10);
}

uint64_t sub_1C0C01730()
{
  uint64_t v0;
  uint64_t result;

  if (*(_BYTE *)(v0 + 88) != 1)
    return *(_QWORD *)(v0 + 80);
  result = sub_1C0C01CAC(16);
  *(_QWORD *)(v0 + 80) = result;
  *(_BYTE *)(v0 + 88) = 0;
  return result;
}

double RawLocation.latitude.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

double RawLocation.longitude.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

uint64_t sub_1C0C01774()
{
  unint64_t v0;

  v0 = sub_1C1070A2C();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_1C0C017C0(char a1)
{
  if (!a1)
    return sub_1C07A71BC();
  if (a1 == 1)
    return 0x64757469676E6F6CLL;
  return 0xD000000000000016;
}

void sub_1C0C0180C(char *a1, char *a2)
{
  sub_1C08C7488(*a1, *a2);
}

void sub_1C0C01818()
{
  sub_1C0A53FB4();
}

uint64_t sub_1C0C01820()
{
  return sub_1C08CA6F8();
}

void sub_1C0C01828()
{
  sub_1C0A54DD0();
}

uint64_t sub_1C0C01830@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C0C01774();
  *a1 = result;
  return result;
}

uint64_t sub_1C0C0185C@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1C0C017C0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C0C01884()
{
  char *v0;

  return sub_1C0C017C0(*v0);
}

uint64_t sub_1C0C0188C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C0C017BC();
  *a1 = result;
  return result;
}

uint64_t sub_1C0C018B0()
{
  sub_1C0C01B10();
  return sub_1C1070EE8();
}

uint64_t sub_1C0C018D8()
{
  sub_1C0C01B10();
  return sub_1C1070EF4();
}

uint64_t RawLocation.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  RawLocation.init(from:)(a1);
  return v2;
}

uint64_t RawLocation.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;
  ValueMetadata *v8;
  _UNKNOWN **v9;
  uint64_t v10;

  v10 = sub_1C07ACF80(&qword_1EF642430);
  MEMORY[0x1E0C80A78](v10);
  *(_QWORD *)(v1 + 80) = 0;
  *(_BYTE *)(v1 + 88) = 1;
  *(_QWORD *)(v1 + 96) = 0;
  *(_BYTE *)(v1 + 104) = 1;
  *(_QWORD *)(v1 + 112) = 0;
  *(_BYTE *)(v1 + 120) = 1;
  *(_QWORD *)(v1 + 128) = sub_1C106F97C();
  sub_1C07A9480(a1, a1[3]);
  sub_1C0C01B10();
  sub_1C1070E94();
  if (v2)
  {
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
  }
  else
  {
    LOBYTE(v7) = 0;
    sub_1C1070ABC();
    *(_QWORD *)(v1 + 16) = v4;
    sub_1C0799EC0(1);
    sub_1C1070ABC();
    *(_QWORD *)(v1 + 24) = v5;
    sub_1C0799EC0(2);
    *(_QWORD *)(v1 + 32) = sub_1C1070AD4();
    v8 = &type metadata for GeoHashProvider;
    v9 = &off_1E7A23B90;
    sub_1C0798E6C();
    sub_1C077DD60(&v7, v1 + 40);
  }
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)a1);
  return v1;
}

unint64_t sub_1C0C01B10()
{
  unint64_t result;

  result = qword_1EF642438;
  if (!qword_1EF642438)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A7E0C, &type metadata for RawLocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF642438);
  }
  return result;
}

uint64_t RawLocation.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = sub_1C07ACF80(&qword_1EF642440);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C07A9480(a1, a1[3]);
  sub_1C0C01B10();
  sub_1C1070EB8();
  v8[15] = 0;
  sub_1C07A1030();
  if (!v1)
  {
    v8[14] = 1;
    sub_1C07A1030();
    v8[13] = 2;
    sub_1C1070BAC();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

BOOL static RawLocation.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(double *)(a1 + 16) == *(double *)(a2 + 16)
      && *(double *)(a1 + 24) == *(double *)(a2 + 24)
      && *(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32);
}

uint64_t sub_1C0C01CAC(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = v1;
  swift_beginAccess();
  v4 = v1[16];
  if (*(_QWORD *)(v4 + 16) && (v5 = sub_1C0778AEC(a1), (v6 & 1) != 0))
  {
    v7 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v5);
  }
  else
  {
    swift_endAccess();
    v8 = v2[8];
    v9 = v2[9];
    sub_1C07A9480(v2 + 5, v8);
    v7 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v9 + 8))(v2, a1, v8, v9);
    swift_beginAccess();
    sub_1C089FEA4();
  }
  swift_endAccess();
  return v7;
}

uint64_t RawLocation.deinit()
{
  uint64_t v0;

  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 40);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t RawLocation.__deallocating_deinit()
{
  uint64_t v0;

  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 40);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0C01DD8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = RawLocation.__allocating_init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1C0C01E00(_QWORD *a1)
{
  return RawLocation.encode(to:)(a1);
}

BOOL sub_1C0C01E20(uint64_t *a1, uint64_t *a2)
{
  return static RawLocation.== infix(_:_:)(*a1, *a2);
}

uint64_t type metadata accessor for RawLocation()
{
  return objc_opt_self();
}

uint64_t method lookup function for RawLocation()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RawLocation.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

ValueMetadata *type metadata accessor for GeoHashProvider()
{
  return &type metadata for GeoHashProvider;
}

uint64_t storeEnumTagSinglePayload for RawLocation.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C0C01EE0 + 4 * byte_1C10A7BE5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C0C01F14 + 4 * asc_1C10A7BE0[v4]))();
}

uint64_t sub_1C0C01F14(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0C01F1C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0C01F24);
  return result;
}

uint64_t sub_1C0C01F30(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0C01F38);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C0C01F3C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0C01F44(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RawLocation.CodingKeys()
{
  return &type metadata for RawLocation.CodingKeys;
}

unint64_t sub_1C0C01F64()
{
  unint64_t result;

  result = qword_1EF642448;
  if (!qword_1EF642448)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A7DD4, &type metadata for RawLocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF642448);
  }
  return result;
}

uint64_t sub_1C0C01FA0(uint64_t a1, unint64_t a2)
{
  CLLocationDegrees latitude;
  CLLocationDegrees longitude;
  uint64_t v6;
  CLLocationCoordinate2D v7[2];
  CLLocationCoordinate2D v8;

  v8 = CLLocationCoordinate2DMake(*(CLLocationDegrees *)(a1 + 16), *(CLLocationDegrees *)(a1 + 24));
  latitude = v8.latitude;
  longitude = v8.longitude;
  if (!CLLocationCoordinate2DIsValid(v8))
    return 0;
  v7[0] = CLLocationCoordinate2DMake(90.0, -180.0);
  v7[1] = CLLocationCoordinate2DMake(-90.0, 180.0);
  v6 = 0;
  return sub_1C0C0204C(a2, (uint64_t)&v6, 0, &v7[0].latitude, latitude, longitude);
}

uint64_t sub_1C0C0204C(unint64_t a1, uint64_t a2, unint64_t a3, double *a4, CLLocationDegrees a5, CLLocationDegrees a6)
{
  BOOL v7;
  uint64_t result;
  unint64_t v11;
  CLLocationDegrees *v15;
  CLLocationDegrees *v16;
  CLLocationCoordinate2D v17;
  CLLocationDegrees *v18;
  uint64_t v19;

  v7 = a3 > 0x1F || (uint64_t)a1 < 1;
  if (!v7 && a3 < a1)
  {
    v11 = a3;
    v15 = a4 + 1;
    v16 = a4 + 3;
    while (1)
    {
      v17 = CLLocationCoordinate2DMake((*a4 + a4[2]) * 0.5, (a4[1] + a4[3]) * 0.5);
      if (v17.latitude >= a5)
      {
        *a4 = v17.latitude;
        if (v17.longitude >= a6)
        {
          v19 = 2;
          goto LABEL_17;
        }
        v18 = v15;
        v19 = 3;
      }
      else
      {
        a4[2] = v17.latitude;
        if (v17.longitude >= a6)
        {
          v19 = 0;
LABEL_17:
          v18 = v16;
          goto LABEL_18;
        }
        v18 = v15;
        v19 = 1;
      }
LABEL_18:
      *v18 = v17.longitude;
      result = v19 | (4 * *(_QWORD *)a2);
      *(_QWORD *)a2 = result;
      v7 = v11++ > 0x1E;
      if (v7 || v11 >= a1)
        return result;
    }
  }
  return *(_QWORD *)a2;
}

unint64_t sub_1C0C0214C()
{
  unint64_t result;

  result = qword_1EF642450;
  if (!qword_1EF642450)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A7D0C, &type metadata for RawLocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF642450);
  }
  return result;
}

unint64_t sub_1C0C0218C()
{
  unint64_t result;

  result = qword_1EF642458[0];
  if (!qword_1EF642458[0])
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A7D34, &type metadata for RawLocation.CodingKeys);
    atomic_store(result, qword_1EF642458);
  }
  return result;
}

id sub_1C0C021C8(uint64_t a1)
{
  return sub_1C0C022E8(a1, qword_1ED762AF8, MEMORY[0x1E0D3DF48]);
}

uint64_t static Logging.mdlog.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED762B18 != -1)
    swift_once();
  v2 = sub_1C106F544();
  v3 = sub_1C079E000(v2, (uint64_t)qword_1ED762AF8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

ValueMetadata *type metadata accessor for Logging()
{
  return &type metadata for Logging;
}

id sub_1C0C0225C(uint64_t a1)
{
  return sub_1C0C022E8(a1, qword_1ED78D9E0, MEMORY[0x1E0D3DF68]);
}

id sub_1C0C02270(uint64_t a1)
{
  return sub_1C0C022E8(a1, qword_1ED78D818, MEMORY[0x1E0D3DF40]);
}

id sub_1C0C02284(uint64_t a1)
{
  return sub_1C0C022E8(a1, qword_1ED78DA10, MEMORY[0x1E0D3DF58]);
}

id sub_1C0C02298(uint64_t a1)
{
  return sub_1C0C022E8(a1, qword_1ED78D7A0, MEMORY[0x1E0D3DF70]);
}

id sub_1C0C022AC(uint64_t a1)
{
  return sub_1C0C022E8(a1, qword_1ED78D9F8, MEMORY[0x1E0D3DF60]);
}

id sub_1C0C022C0(uint64_t a1)
{
  return sub_1C0C022E8(a1, qword_1ED78D800, MEMORY[0x1E0D3DF38]);
}

id sub_1C0C022D4(uint64_t a1)
{
  return sub_1C0C022E8(a1, qword_1EF6D17F8, MEMORY[0x1E0D3DF30]);
}

id sub_1C0C022E8(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v5;
  id result;

  v5 = sub_1C106F544();
  sub_1C0800A9C(v5, a2);
  sub_1C079E000(v5, (uint64_t)a2);
  result = (id)a3();
  if (result)
    return (id)sub_1C106F550();
  __break(1u);
  return result;
}

uint64_t *sub_1C0C02350(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1C106ADE0();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
    v9 = a3[6];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = *(uint64_t *)((char *)a2 + v9 + 24);
    if (v12)
    {
      v13 = *((_QWORD *)v11 + 4);
      *((_QWORD *)v10 + 3) = v12;
      *((_QWORD *)v10 + 4) = v13;
      (**(void (***)(void))(v12 - 8))();
    }
    else
    {
      v15 = *((_OWORD *)v11 + 1);
      *(_OWORD *)v10 = *(_OWORD *)v11;
      *((_OWORD *)v10 + 1) = v15;
      *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
    }
    v16 = a3[7];
    v17 = *(_OWORD *)((char *)a2 + v16 + 24);
    *(_OWORD *)((char *)a1 + v16 + 24) = v17;
    (**(void (***)(void))(v17 - 8))();
  }
  return a1;
}

uint64_t sub_1C0C0244C(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;

  v4 = sub_1C106ADE0();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + a2[5], v4);
  v6 = a1 + a2[6];
  if (*(_QWORD *)(v6 + 24))
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v6);
  return _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(a1 + a2[7]);
}

uint64_t sub_1C0C024C0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;

  v6 = sub_1C106ADE0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = *(_QWORD *)(a2 + v8 + 24);
  if (v11)
  {
    v12 = *(_QWORD *)(v10 + 32);
    *(_QWORD *)(v9 + 24) = v11;
    *(_QWORD *)(v9 + 32) = v12;
    (**(void (***)(void))(v11 - 8))();
  }
  else
  {
    v13 = *(_OWORD *)(v10 + 16);
    *(_OWORD *)v9 = *(_OWORD *)v10;
    *(_OWORD *)(v9 + 16) = v13;
    *(_QWORD *)(v9 + 32) = *(_QWORD *)(v10 + 32);
  }
  v14 = a3[7];
  v15 = *(_OWORD *)(a2 + v14 + 24);
  *(_OWORD *)(a1 + v14 + 24) = v15;
  (**(void (***)(void))(v15 - 8))();
  return a1;
}

uint64_t sub_1C0C02590(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v6 = sub_1C106ADE0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = a1 + v8;
  v10 = (uint64_t *)(a2 + v8);
  v11 = *(_QWORD *)(a2 + v8 + 24);
  if (*(_QWORD *)(a1 + v8 + 24))
  {
    if (v11)
    {
      sub_1C07E6484((uint64_t *)v9, v10);
    }
    else
    {
      sub_1C091274C(v9);
      v12 = v10[4];
      v13 = *((_OWORD *)v10 + 1);
      *(_OWORD *)v9 = *(_OWORD *)v10;
      *(_OWORD *)(v9 + 16) = v13;
      *(_QWORD *)(v9 + 32) = v12;
    }
  }
  else if (v11)
  {
    *(_QWORD *)(v9 + 24) = v11;
    *(_QWORD *)(v9 + 32) = v10[4];
    (**(void (***)(uint64_t, __int128 *))(v11 - 8))(v9, (__int128 *)v10);
  }
  else
  {
    v14 = *(_OWORD *)v10;
    v15 = *((_OWORD *)v10 + 1);
    *(_QWORD *)(v9 + 32) = v10[4];
    *(_OWORD *)v9 = v14;
    *(_OWORD *)(v9 + 16) = v15;
  }
  sub_1C07E6484((uint64_t *)(a1 + a3[7]), (uint64_t *)(a2 + a3[7]));
  return a1;
}

uint64_t sub_1C0C02690(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;

  v6 = sub_1C106ADE0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = a3[7];
  v10 = a1 + v8;
  v11 = a2 + v8;
  v12 = *(_OWORD *)(v11 + 16);
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *(_OWORD *)(v10 + 16) = v12;
  *(_QWORD *)(v10 + 32) = *(_QWORD *)(v11 + 32);
  v13 = a1 + v9;
  v14 = a2 + v9;
  v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
  return a1;
}

uint64_t sub_1C0C02734(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;

  v6 = sub_1C106ADE0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  if (*(_QWORD *)(a1 + v8 + 24))
  {
    if (*(_QWORD *)(v10 + 24))
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v9);
    else
      sub_1C091274C(v9);
  }
  v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(v10 + 32);
  v12 = a3[7];
  v13 = a1 + v12;
  v14 = a2 + v12;
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(a1 + v12);
  v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
  return a1;
}

uint64_t sub_1C0C02808()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1C0C02814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1C077AE98();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    sub_1C0776754(a1, a2, v6);
  }
  else
  {
    sub_1C077F018(*(_QWORD *)(a1 + *(int *)(a3 + 28) + 24));
    sub_1C077671C();
  }
}

uint64_t sub_1C0C02870()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1C0C0287C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = sub_1C077AE98();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    sub_1C077F00C(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 28) + 24) = (a2 - 1);
    sub_1C077671C();
  }
}

uint64_t type metadata accessor for LOIBasedSegment(uint64_t a1)
{
  return sub_1C0784B00(a1, qword_1ED749D48);
}

uint64_t sub_1C0C028F4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C106ADE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_1C0C02970(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)v4 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1C106ADE0();
    if (sub_1C07B2D80((uint64_t)v10, 1, v11))
    {
      v12 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      sub_1C07B2D8C((uint64_t)v9, 0, 1, v11);
    }
    v14 = *(int *)(a3 + 24);
    v15 = (char *)v4 + v14;
    v16 = (char *)a2 + v14;
    v17 = (int *)type metadata accessor for LOIBasedSegment(0);
    if (sub_1C07B2D80((uint64_t)v16, 1, (uint64_t)v17))
    {
      v18 = sub_1C07ACF80(&qword_1ED749D88);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
      v19(v15, v16, v11);
      v19(&v15[v17[5]], &v16[v17[5]], v11);
      v20 = v17[6];
      v21 = &v15[v20];
      v22 = &v16[v20];
      v23 = *(_QWORD *)&v16[v20 + 24];
      if (v23)
      {
        v24 = *((_QWORD *)v22 + 4);
        *((_QWORD *)v21 + 3) = v23;
        *((_QWORD *)v21 + 4) = v24;
        (**(void (***)(void))(v23 - 8))();
      }
      else
      {
        v25 = *((_OWORD *)v22 + 1);
        *(_OWORD *)v21 = *(_OWORD *)v22;
        *((_OWORD *)v21 + 1) = v25;
        *((_QWORD *)v21 + 4) = *((_QWORD *)v22 + 4);
      }
      v26 = v17[7];
      v27 = *(_OWORD *)&v16[v26 + 24];
      *(_OWORD *)&v15[v26 + 24] = v27;
      (**(void (***)(void))(v27 - 8))();
      sub_1C07B2D8C((uint64_t)v15, 0, 1, (uint64_t)v17);
    }
  }
  return v4;
}

uint64_t sub_1C0C02B60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t result;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;

  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(a1);
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1C106ADE0();
  if (!sub_1C07B2D80(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 24);
  v7 = (int *)type metadata accessor for LOIBasedSegment(0);
  result = sub_1C07B2D80(v6, 1, (uint64_t)v7);
  if (!(_DWORD)result)
  {
    v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
    v9(v6, v5);
    v9(v6 + v7[5], v5);
    v10 = v6 + v7[6];
    if (*(_QWORD *)(v10 + 24))
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v10);
    return _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v6 + v7[7]);
  }
  return result;
}

uint64_t sub_1C0C02C40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  __int128 v25;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1C106ADE0();
  if (sub_1C07B2D80((uint64_t)v9, 1, v10))
  {
    v11 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    sub_1C07B2D8C((uint64_t)v8, 0, 1, v10);
  }
  v12 = *(int *)(a3 + 24);
  v13 = (char *)(a1 + v12);
  v14 = (char *)(a2 + v12);
  v15 = (int *)type metadata accessor for LOIBasedSegment(0);
  if (sub_1C07B2D80((uint64_t)v14, 1, (uint64_t)v15))
  {
    v16 = sub_1C07ACF80(&qword_1ED749D88);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v17(v13, v14, v10);
    v17(&v13[v15[5]], &v14[v15[5]], v10);
    v18 = v15[6];
    v19 = &v13[v18];
    v20 = &v14[v18];
    v21 = *(_QWORD *)&v14[v18 + 24];
    if (v21)
    {
      v22 = *((_QWORD *)v20 + 4);
      *((_QWORD *)v19 + 3) = v21;
      *((_QWORD *)v19 + 4) = v22;
      (**(void (***)(void))(v21 - 8))();
    }
    else
    {
      v23 = *((_OWORD *)v20 + 1);
      *(_OWORD *)v19 = *(_OWORD *)v20;
      *((_OWORD *)v19 + 1) = v23;
      *((_QWORD *)v19 + 4) = *((_QWORD *)v20 + 4);
    }
    v24 = v15[7];
    v25 = *(_OWORD *)&v14[v24 + 24];
    *(_OWORD *)&v13[v24 + 24] = v25;
    (**(void (***)(void))(v25 - 8))();
    sub_1C07B2D8C((uint64_t)v13, 0, 1, (uint64_t)v15);
  }
  return a1;
}

uint64_t *sub_1C0C02DFC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int *v17;
  int v18;
  int v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;

  sub_1C07E6484(a1, a2);
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C106ADE0();
  v10 = sub_1C07B2D80((uint64_t)v7, 1, v9);
  v11 = sub_1C07B2D80((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
      sub_1C07B2D8C((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v12 = *(_QWORD *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    v13 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  v14 = *(int *)(a3 + 24);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = (int *)type metadata accessor for LOIBasedSegment(0);
  v18 = sub_1C07B2D80((uint64_t)v15, 1, (uint64_t)v17);
  v19 = sub_1C07B2D80((uint64_t)v16, 1, (uint64_t)v17);
  if (v18)
  {
    if (!v19)
    {
      v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
      v20(v15, v16, v9);
      v20(&v15[v17[5]], &v16[v17[5]], v9);
      v21 = v17[6];
      v22 = &v15[v21];
      v23 = &v16[v21];
      v24 = *(_QWORD *)&v16[v21 + 24];
      if (v24)
      {
        *((_QWORD *)v22 + 3) = v24;
        *((_QWORD *)v22 + 4) = *((_QWORD *)v23 + 4);
        (**(void (***)(void))(v24 - 8))();
      }
      else
      {
        v31 = *(_OWORD *)v23;
        v32 = *((_OWORD *)v23 + 1);
        *((_QWORD *)v22 + 4) = *((_QWORD *)v23 + 4);
        *(_OWORD *)v22 = v31;
        *((_OWORD *)v22 + 1) = v32;
      }
      v33 = v17[7];
      v34 = &v15[v33];
      v35 = *(_QWORD *)&v16[v33 + 24];
      *((_QWORD *)v34 + 3) = v35;
      *((_QWORD *)v34 + 4) = *(_QWORD *)&v16[v33 + 32];
      (**(void (***)(void))(v35 - 8))();
      sub_1C07B2D8C((uint64_t)v15, 0, 1, (uint64_t)v17);
      return a1;
    }
LABEL_13:
    v25 = sub_1C07ACF80(&qword_1ED749D88);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    return a1;
  }
  if (v19)
  {
    sub_1C07B1F90((uint64_t)v15, type metadata accessor for LOIBasedSegment);
    goto LABEL_13;
  }
  v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v26(v15, v16, v9);
  v26(&v15[v17[5]], &v16[v17[5]], v9);
  v27 = v17[6];
  v28 = (uint64_t)&v15[v27];
  v29 = (uint64_t *)&v16[v27];
  v30 = *(_QWORD *)&v16[v27 + 24];
  if (*(_QWORD *)&v15[v27 + 24])
  {
    if (v30)
    {
      sub_1C07E6484((uint64_t *)v28, v29);
    }
    else
    {
      sub_1C091274C(v28);
      v36 = v29[4];
      v37 = *((_OWORD *)v29 + 1);
      *(_OWORD *)v28 = *(_OWORD *)v29;
      *(_OWORD *)(v28 + 16) = v37;
      *(_QWORD *)(v28 + 32) = v36;
    }
  }
  else if (v30)
  {
    *(_QWORD *)(v28 + 24) = v30;
    *(_QWORD *)(v28 + 32) = v29[4];
    (**(void (***)(uint64_t, char *))(v30 - 8))(v28, (char *)v29);
  }
  else
  {
    v38 = *(_OWORD *)v29;
    v39 = *((_OWORD *)v29 + 1);
    *(_QWORD *)(v28 + 32) = v29[4];
    *(_OWORD *)v28 = v38;
    *(_OWORD *)(v28 + 16) = v39;
  }
  sub_1C07E6484((uint64_t *)&v15[v17[7]], (uint64_t *)&v16[v17[7]]);
  return a1;
}

uint64_t sub_1C0C030E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1C106ADE0();
  if (sub_1C07B2D80((uint64_t)v9, 1, v10))
  {
    v11 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    sub_1C07B2D8C((uint64_t)v8, 0, 1, v10);
  }
  v12 = *(int *)(a3 + 24);
  v13 = (char *)(a1 + v12);
  v14 = (char *)(a2 + v12);
  v15 = (int *)type metadata accessor for LOIBasedSegment(0);
  if (sub_1C07B2D80((uint64_t)v14, 1, (uint64_t)v15))
  {
    v16 = sub_1C07ACF80(&qword_1ED749D88);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
    v17(v13, v14, v10);
    v17(&v13[v15[5]], &v14[v15[5]], v10);
    v18 = v15[6];
    v19 = &v13[v18];
    v20 = &v14[v18];
    v21 = *((_OWORD *)v20 + 1);
    *(_OWORD *)v19 = *(_OWORD *)v20;
    *((_OWORD *)v19 + 1) = v21;
    *((_QWORD *)v19 + 4) = *((_QWORD *)v20 + 4);
    v22 = v15[7];
    v23 = &v13[v22];
    v24 = &v14[v22];
    v25 = *((_OWORD *)v24 + 1);
    *(_OWORD *)v23 = *(_OWORD *)v24;
    *((_OWORD *)v23 + 1) = v25;
    *((_QWORD *)v23 + 4) = *((_QWORD *)v24 + 4);
    sub_1C07B2D8C((uint64_t)v13, 0, 1, (uint64_t)v15);
  }
  return a1;
}

uint64_t sub_1C0C03274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int *v18;
  int v19;
  int v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  uint64_t v26;
  char *v27;
  char *v28;
  __int128 v29;
  uint64_t v30;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  char *v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  __int128 v40;

  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1C106ADE0();
  v11 = sub_1C07B2D80((uint64_t)v8, 1, v10);
  v12 = sub_1C07B2D80((uint64_t)v9, 1, v10);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      sub_1C07B2D8C((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v13 = *(_QWORD *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    v14 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v13 + 40))(v8, v9, v10);
LABEL_7:
  v15 = *(int *)(a3 + 24);
  v16 = (char *)(a1 + v15);
  v17 = (char *)(a2 + v15);
  v18 = (int *)type metadata accessor for LOIBasedSegment(0);
  v19 = sub_1C07B2D80((uint64_t)v16, 1, (uint64_t)v18);
  v20 = sub_1C07B2D80((uint64_t)v17, 1, (uint64_t)v18);
  if (v19)
  {
    if (!v20)
    {
      v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
      v21(v16, v17, v10);
      v21(&v16[v18[5]], &v17[v18[5]], v10);
      v22 = v18[6];
      v23 = &v16[v22];
      v24 = &v17[v22];
      v25 = *((_OWORD *)v24 + 1);
      *(_OWORD *)v23 = *(_OWORD *)v24;
      *((_OWORD *)v23 + 1) = v25;
      *((_QWORD *)v23 + 4) = *((_QWORD *)v24 + 4);
      v26 = v18[7];
      v27 = &v16[v26];
      v28 = &v17[v26];
      v29 = *((_OWORD *)v28 + 1);
      *(_OWORD *)v27 = *(_OWORD *)v28;
      *((_OWORD *)v27 + 1) = v29;
      *((_QWORD *)v27 + 4) = *((_QWORD *)v28 + 4);
      sub_1C07B2D8C((uint64_t)v16, 0, 1, (uint64_t)v18);
      return a1;
    }
LABEL_12:
    v30 = sub_1C07ACF80(&qword_1ED749D88);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    return a1;
  }
  if (v20)
  {
    sub_1C07B1F90((uint64_t)v16, type metadata accessor for LOIBasedSegment);
    goto LABEL_12;
  }
  v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v32(v16, v17, v10);
  v32(&v16[v18[5]], &v17[v18[5]], v10);
  v33 = v18[6];
  v34 = (uint64_t)&v16[v33];
  v35 = &v17[v33];
  if (*(_QWORD *)&v16[v33 + 24])
  {
    if (*((_QWORD *)v35 + 3))
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v34);
    else
      sub_1C091274C(v34);
  }
  v36 = *((_OWORD *)v35 + 1);
  *(_OWORD *)v34 = *(_OWORD *)v35;
  *(_OWORD *)(v34 + 16) = v36;
  *(_QWORD *)(v34 + 32) = *((_QWORD *)v35 + 4);
  v37 = v18[7];
  v38 = (uint64_t)&v16[v37];
  v39 = &v17[v37];
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v38);
  v40 = *((_OWORD *)v39 + 1);
  *(_OWORD *)v38 = *(_OWORD *)v39;
  *(_OWORD *)(v38 + 16) = v40;
  *(_QWORD *)(v38 + 32) = *((_QWORD *)v39 + 4);
  return a1;
}

uint64_t sub_1C0C03514()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1C0C03520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_1C077F018(*(_QWORD *)(a1 + 24));
    sub_1C077671C();
  }
  else
  {
    v6 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
    if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    {
      v7 = v6;
      v8 = *(int *)(a3 + 20);
    }
    else
    {
      v7 = sub_1C07ACF80(&qword_1ED749D88);
      v8 = *(int *)(a3 + 24);
    }
    sub_1C0776754(a1 + v8, a2, v7);
  }
}

uint64_t sub_1C0C035A4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1C0C035B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(a1 + 24) = (a2 - 1);
    sub_1C077671C();
  }
  else
  {
    v8 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = *(int *)(a4 + 20);
    }
    else
    {
      v9 = sub_1C07ACF80(&qword_1ED749D88);
      v10 = *(int *)(a4 + 24);
    }
    sub_1C077F00C(a1 + v10, a2, a2, v9);
  }
}

uint64_t type metadata accessor for LOIBasedSegmentProvider(uint64_t a1)
{
  return sub_1C0784B00(a1, qword_1ED74BCE0);
}

void sub_1C0C03650()
{
  unint64_t v0;
  unint64_t v1;

  sub_1C07E6BB8(319, (unint64_t *)&qword_1ED75E4E0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  if (v0 <= 0x3F)
  {
    sub_1C07E6BB8(319, (unint64_t *)&qword_1ED749D90, (void (*)(uint64_t))type metadata accessor for LOIBasedSegment);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_1C0C03700@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v25;
  __int128 v26;
  ValueMetadata *v27;
  unint64_t v28;

  v25 = a1;
  v6 = sub_1C077AE98();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v25 - v11;
  v13 = type metadata accessor for LOIBasedSegmentProvider(0);
  sub_1C07B2D8C(a3 + *(int *)(v13 + 20), 1, 1, v6);
  v14 = a3 + *(int *)(v13 + 24);
  v15 = sub_1C078F3C4();
  sub_1C07B2D8C(v14, 1, 1, v15);
  sub_1C07950EC((uint64_t)v12, a1);
  v16 = a2;
  sub_1C07950EC((uint64_t)v9, a2);
  v17 = *(unsigned __int8 *)(v7 + 80);
  v18 = (v17 + 16) & ~v17;
  v19 = (v8 + v17 + v18) & ~v17;
  v20 = v19 + v8;
  v21 = swift_allocObject();
  sub_1C07950EC(v21 + v18, (uint64_t)v12);
  sub_1C07950EC(v21 + v19, (uint64_t)v9);
  *(_WORD *)(v21 + v20) = 256;
  v27 = &_s14descr1E7A316B1V27StoredLocationVisitIteratorVN;
  v28 = sub_1C0C04A50();
  v22 = swift_allocObject();
  *(_QWORD *)&v26 = v22;
  *(_QWORD *)(v22 + 16) = &unk_1EF642480;
  *(_QWORD *)(v22 + 24) = v21;
  *(_QWORD *)(v22 + 32) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v22 + 40) = 0;
  *(_BYTE *)(v22 + 48) = 0;
  v23 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v23(v16, v6);
  v23(v25, v6);
  return sub_1C077DD60(&v26, a3);
}

uint64_t sub_1C0C038CC(uint64_t a1)
{
  unsigned int v1;

  if (a1 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (a1)
    return v1;
  else
    return 0;
}

uint64_t sub_1C0C038E4(char a1)
{
  return a1 & 1;
}

BOOL sub_1C0C038EC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C08C8B70(*a1, *a2);
}

void sub_1C0C038F8()
{
  sub_1C0A53FC0();
}

void sub_1C0C03900()
{
  sub_1C0A5483C();
}

uint64_t sub_1C0C03908@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_1C0C038CC(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1C0C03930@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;

  result = sub_1C0C038E4(*v1);
  *a1 = result;
  return result;
}

BOOL sub_1C0C03958(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v23;
  _OWORD v24[2];
  uint64_t v25;
  _QWORD v26[5];
  _BYTE v27[24];
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;

  v4 = sub_1C078F3C4();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v24 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v24 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v24 - v14;
  v16 = sub_1C106AD8C();
  sub_1C0845A4C(a1, (uint64_t)v15, type metadata accessor for LOIBasedSegment);
  sub_1C0845A4C(a2, (uint64_t)v12, type metadata accessor for LOIBasedSegment);
  if ((v16 & 1) == 0)
  {
    sub_1C07B1F90((uint64_t)v12, type metadata accessor for LOIBasedSegment);
    sub_1C07B1F90((uint64_t)v15, type metadata accessor for LOIBasedSegment);
    sub_1C0845A4C(a1, (uint64_t)v9, type metadata accessor for LOIBasedSegment);
    sub_1C0845A4C(a2, (uint64_t)v6, type metadata accessor for LOIBasedSegment);
    goto LABEL_7;
  }
  v17 = sub_1C106AD8C();
  sub_1C07B1F90((uint64_t)v12, type metadata accessor for LOIBasedSegment);
  sub_1C07B1F90((uint64_t)v15, type metadata accessor for LOIBasedSegment);
  sub_1C0845A4C(a1, (uint64_t)v9, type metadata accessor for LOIBasedSegment);
  sub_1C0845A4C(a2, (uint64_t)v6, type metadata accessor for LOIBasedSegment);
  if ((v17 & 1) == 0)
  {
LABEL_7:
    sub_1C078D648((uint64_t)v6);
    sub_1C078D648((uint64_t)v9);
    return 0;
  }
  v18 = *(int *)(v4 + 24);
  v19 = (uint64_t)&v6[v18];
  sub_1C0845A78((uint64_t)&v9[v18], (uint64_t)v27, &qword_1ED74AB38);
  sub_1C0845A78(v19, (uint64_t)&v29, &qword_1ED74AB38);
  if (!v28)
  {
    sub_1C078D648((uint64_t)v6);
    sub_1C078D648((uint64_t)v9);
    if (!*((_QWORD *)&v30 + 1))
    {
      sub_1C07B42AC(v23, &qword_1ED74AB38);
      return 1;
    }
    goto LABEL_13;
  }
  sub_1C0845A78((uint64_t)v27, (uint64_t)v26, &qword_1ED74AB38);
  if (!*((_QWORD *)&v30 + 1))
  {
    sub_1C078D648((uint64_t)v6);
    sub_1C078D648((uint64_t)v9);
    v23 = sub_1C091274C((uint64_t)v26);
LABEL_13:
    sub_1C07B42AC(v23, &qword_1EF642478);
    return 0;
  }
  v24[0] = v29;
  v24[1] = v30;
  v25 = v31;
  v20 = sub_1C0D700E8(v26, v24);
  sub_1C091274C((uint64_t)v24);
  sub_1C07B1F90((uint64_t)v6, type metadata accessor for LOIBasedSegment);
  sub_1C07B1F90((uint64_t)v9, type metadata accessor for LOIBasedSegment);
  v21 = sub_1C091274C((uint64_t)v26);
  sub_1C07B42AC(v21, &qword_1ED74AB38);
  return v20;
}

uint64_t sub_1C0C03C40(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[41] = a1;
  v2[42] = v1;
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  v2[43] = sub_1C0775870();
  v2[44] = sub_1C0775870();
  v2[45] = sub_1C0775870();
  v2[46] = sub_1C0775870();
  v3 = sub_1C077AE98();
  v2[47] = v3;
  v2[48] = *(_QWORD *)(v3 - 8);
  v2[49] = sub_1C0775870();
  v2[50] = sub_1C0775870();
  v2[51] = sub_1C0775870();
  v2[52] = sub_1C0775870();
  v2[53] = sub_1C0775870();
  sub_1C07ACF80(&qword_1ED749D88);
  v2[54] = sub_1C0775870();
  v2[55] = sub_1C0775870();
  v2[56] = sub_1C078F3C4();
  v2[57] = sub_1C0775870();
  v2[58] = sub_1C0775870();
  return sub_1C077AEC4();
}

