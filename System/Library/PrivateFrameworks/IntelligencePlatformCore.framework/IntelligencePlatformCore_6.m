void Fuser.stores.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1C07E05C8(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
}

void Fuser.source.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1C0783108();
  sub_1C07E05C8(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(_QWORD))type metadata accessor for Source);
}

uint64_t Fuser.pipelineType.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_1C0783108();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 28));
  return result;
}

void Fuser.stageName.getter(_BYTE *a1@<X8>)
{
  *a1 = 10;
}

uint64_t Fuser.execute()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = v0;
  return swift_task_switch();
}

uint64_t sub_1C0A59ED4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = sub_1C0783108();
  *(_QWORD *)(v0 + 64) = v2;
  v3 = *(_QWORD *)(v1 + *(int *)(v2 + 24));
  *(_QWORD *)(v0 + 72) = v3;
  v4 = *(_QWORD *)(v3 + 16);
  *(_QWORD *)(v0 + 80) = v4;
  if (v4)
  {
    *(_QWORD *)(v0 + 88) = 0;
    v5 = v3 + 32;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0784AC0(v5, v0 + 16);
    sub_1C078D670();
    *(_BYTE *)(v0 + 113) = *(_BYTE *)(v0 + 112);
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v6;
    v7 = (_BYTE *)sub_1C07AC7DC(v6, (uint64_t)sub_1C0A59F8C);
    return sub_1C0786564(v7, v8, v9);
  }
  else
  {
    v11 = sub_1C078A314();
    sub_1C07AB7EC(v11, v12, v13, v14, v15, v16, v17, v18, v19, SWORD2(v19), SBYTE6(v19), SHIBYTE(v19));
    return sub_1C078500C(*(uint64_t (**)(void))(v0 + 8));
  }
}

uint64_t sub_1C0A59F8C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1C0A59FF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  _QWORD *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88) + 1;
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 16);
  if (v2 == v1)
  {
    swift_bridgeObjectRelease();
    v3 = sub_1C078A314();
    sub_1C07AB7EC(v3, v4, v5, v6, v7, v8, v9, v10, v17, SWORD2(v17), SBYTE6(v17), SHIBYTE(v17));
    return sub_1C078500C(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 88) + 1;
    *(_QWORD *)(v0 + 88) = v12;
    sub_1C0784AC0(*(_QWORD *)(v0 + 72) + 40 * v12 + 32, v0 + 16);
    sub_1C078D670();
    *(_BYTE *)(v0 + 113) = *(_BYTE *)(v0 + 112);
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v13;
    v14 = (_BYTE *)sub_1C07AC7DC(v13, (uint64_t)sub_1C0A59F8C);
    return sub_1C0786564(v14, v15, v16);
  }
}

uint64_t sub_1C0A5A0B8()
{
  uint64_t v0;

  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 16);
  return sub_1C077CF28(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0A5A0E4(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v6 = type metadata accessor for Source();
  MEMORY[0x1E0C80A78](v6);
  v8 = (_QWORD *)((char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v29 - v10;
  v12 = *a3;
  if (qword_1ED761518 != -1)
    swift_once();
  swift_beginAccess();
  if (qword_1ED7627B8
    && ((*((void (**)(void))off_1ED7627C0 + 1))(),
        LOBYTE(v32) = v12,
        (v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t *))(v13 + 32))(a1, a2, &v32)) != 0))
  {
    v15 = v14;
    if (qword_1ED762B18 != -1)
      swift_once();
    v16 = sub_1C106F544();
    sub_1C079E000(v16, (uint64_t)qword_1ED762AF8);
    sub_1C07E05C8(a1, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v17 = sub_1C106F538();
    v18 = sub_1C10703A8();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v20 = swift_slowAlloc();
      v30 = v20;
      *(_DWORD *)v19 = 134218242;
      v31 = *(_QWORD *)(v15 + 16);
      v32 = v20;
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2080;
      v29[1] = v19 + 14;
      sub_1C07E05C8((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for Source);
      v22 = *v8;
      v21 = v8[1];
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C07B2018((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for Source);
      v31 = sub_1C0788DAC(v22, v21, &v32);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      sub_1C07B2018((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Source);
      _os_log_impl(&dword_1C0771000, v17, v18, "InternalPlugin: Fuser: loadInternalSourceChildren: loaded %ld children for %s", (uint8_t *)v19, 0x16u);
      v23 = v30;
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v23, -1, -1);
      MEMORY[0x1C3BA8270](v19, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1C07B2018((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    }

  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v24 = sub_1C106F544();
    sub_1C079E000(v24, (uint64_t)qword_1ED762AF8);
    v25 = sub_1C106F538();
    v26 = sub_1C10703A8();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v27 = 0;
      _os_log_impl(&dword_1C0771000, v25, v26, "InternalPlugin: Fuser: loadInternalSourceChildren: failed to load internal source children", v27, 2u);
      MEMORY[0x1C3BA8270](v27, -1, -1);
    }

    return 0;
  }
  return v15;
}

void sub_1C0A5A49C(_BYTE *a1@<X8>)
{
  Fuser.stageName.getter(a1);
}

uint64_t sub_1C0A5A4B8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C0928A6C;
  return Fuser.execute()();
}

uint64_t type metadata accessor for Fuser()
{
  uint64_t result;

  result = qword_1ED75CAE0;
  if (!qword_1ED75CAE0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1C0A5A538(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1EF639B48, (uint64_t (*)(uint64_t))type metadata accessor for Fuser, (uint64_t)&protocol conformance descriptor for Fuser);
  *(_QWORD *)(a1 + 8) = v2;
}

_QWORD *initializeBufferWithCopyOfBuffer for Linker(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v19)(char *, char *, uint64_t);
  char *v20;
  char *v21;
  uint64_t v22;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1C106AB28();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = type metadata accessor for Configuration();
    *(_OWORD *)((char *)a1 + *(int *)(v8 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v8 + 20));
    v9 = (int *)type metadata accessor for PhaseStores();
    *(_QWORD *)((char *)a1 + v9[5]) = *(_QWORD *)((char *)a2 + v9[5]);
    *(_QWORD *)((char *)a1 + v9[6]) = *(_QWORD *)((char *)a2 + v9[6]);
    *(_QWORD *)((char *)a1 + v9[7]) = *(_QWORD *)((char *)a2 + v9[7]);
    *(_QWORD *)((char *)a1 + v9[8]) = *(_QWORD *)((char *)a2 + v9[8]);
    *(_QWORD *)((char *)a1 + v9[9]) = *(_QWORD *)((char *)a2 + v9[9]);
    *(_QWORD *)((char *)a1 + v9[10]) = *(_QWORD *)((char *)a2 + v9[10]);
    *(_QWORD *)((char *)a1 + v9[11]) = *(_QWORD *)((char *)a2 + v9[11]);
    v10 = a3[5];
    v11 = (_QWORD *)((char *)a1 + v10);
    v12 = (char *)a2 + v10;
    v13 = *(_QWORD *)((char *)a2 + v10 + 8);
    *v11 = *(_QWORD *)((char *)a2 + v10);
    v11[1] = v13;
    v11[2] = *(_QWORD *)((char *)a2 + v10 + 16);
    v22 = type metadata accessor for Source();
    v14 = *(int *)(v22 + 24);
    v20 = &v12[v14];
    v21 = (char *)v11 + v14;
    v15 = sub_1C106D1F8();
    v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v19(v21, v20, v15);
    *((_BYTE *)v11 + *(int *)(v22 + 28)) = v12[*(int *)(v22 + 28)];
    v16 = a3[7];
    *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
    *((_BYTE *)a1 + v16) = *((_BYTE *)a2 + v16);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  return a1;
}

uint64_t destroy for Linker(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  type metadata accessor for PhaseStores();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v5 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  v6 = v5 + *(int *)(type metadata accessor for Source() + 24);
  v7 = sub_1C106D1F8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Linker(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  char *v20;
  uint64_t v21;

  v6 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = type metadata accessor for Configuration();
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  v8 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(a1 + v8[5]) = *(_QWORD *)(a2 + v8[5]);
  *(_QWORD *)(a1 + v8[6]) = *(_QWORD *)(a2 + v8[6]);
  *(_QWORD *)(a1 + v8[7]) = *(_QWORD *)(a2 + v8[7]);
  *(_QWORD *)(a1 + v8[8]) = *(_QWORD *)(a2 + v8[8]);
  *(_QWORD *)(a1 + v8[9]) = *(_QWORD *)(a2 + v8[9]);
  *(_QWORD *)(a1 + v8[10]) = *(_QWORD *)(a2 + v8[10]);
  *(_QWORD *)(a1 + v8[11]) = *(_QWORD *)(a2 + v8[11]);
  v9 = a3[5];
  v10 = (_QWORD *)(a1 + v9);
  v11 = a2 + v9;
  v12 = *(_QWORD *)(a2 + v9 + 8);
  *v10 = *(_QWORD *)(a2 + v9);
  v10[1] = v12;
  v10[2] = *(_QWORD *)(a2 + v9 + 16);
  v13 = type metadata accessor for Source();
  v14 = *(int *)(v13 + 24);
  v20 = (char *)v10 + v14;
  v21 = v13;
  v19 = v11 + v14;
  v15 = sub_1C106D1F8();
  v18 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v18(v20, v19, v15);
  *((_BYTE *)v10 + *(int *)(v21 + 28)) = *(_BYTE *)(v11 + *(int *)(v21 + 28));
  v16 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v16) = *(_BYTE *)(a2 + v16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

uint64_t assignWithCopy for Linker(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for Configuration() + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  v10 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(a1 + v10[5]) = *(_QWORD *)(a2 + v10[5]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[6]) = *(_QWORD *)(a2 + v10[6]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[7]) = *(_QWORD *)(a2 + v10[7]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[8]) = *(_QWORD *)(a2 + v10[8]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[9]) = *(_QWORD *)(a2 + v10[9]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[10]) = *(_QWORD *)(a2 + v10[10]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[11]) = *(_QWORD *)(a2 + v10[11]);
  swift_retain();
  swift_release();
  v11 = a3[5];
  v12 = (_QWORD *)(a1 + v11);
  v13 = a2 + v11;
  *v12 = *(_QWORD *)(a2 + v11);
  v12[1] = *(_QWORD *)(a2 + v11 + 8);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  v12[2] = *(_QWORD *)(v13 + 16);
  v14 = type metadata accessor for Source();
  v15 = *(int *)(v14 + 24);
  v16 = (char *)v12 + v15;
  v17 = v13 + v15;
  v18 = sub_1C106D1F8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  *((_BYTE *)v12 + *(int *)(v14 + 28)) = *(_BYTE *)(v13 + *(int *)(v14 + 28));
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t initializeWithTake for Linker(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = type metadata accessor for Configuration();
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  v8 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(a1 + v8[5]) = *(_QWORD *)(a2 + v8[5]);
  *(_QWORD *)(a1 + v8[6]) = *(_QWORD *)(a2 + v8[6]);
  *(_QWORD *)(a1 + v8[7]) = *(_QWORD *)(a2 + v8[7]);
  *(_QWORD *)(a1 + v8[8]) = *(_QWORD *)(a2 + v8[8]);
  *(_QWORD *)(a1 + v8[9]) = *(_QWORD *)(a2 + v8[9]);
  *(_QWORD *)(a1 + v8[10]) = *(_QWORD *)(a2 + v8[10]);
  *(_QWORD *)(a1 + v8[11]) = *(_QWORD *)(a2 + v8[11]);
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_OWORD *)v10 = *(_OWORD *)(a2 + v9);
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(a2 + v9 + 16);
  v12 = type metadata accessor for Source();
  v13 = *(int *)(v12 + 24);
  v14 = v10 + v13;
  v15 = v11 + v13;
  v16 = sub_1C106D1F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  *(_BYTE *)(v10 + *(int *)(v12 + 28)) = *(_BYTE *)(v11 + *(int *)(v12 + 28));
  v17 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v17) = *(_BYTE *)(a2 + v17);
  return a1;
}

uint64_t assignWithTake for Linker(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = type metadata accessor for Configuration();
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  v8 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(a1 + v8[5]) = *(_QWORD *)(a2 + v8[5]);
  swift_release();
  *(_QWORD *)(a1 + v8[6]) = *(_QWORD *)(a2 + v8[6]);
  swift_release();
  *(_QWORD *)(a1 + v8[7]) = *(_QWORD *)(a2 + v8[7]);
  swift_release();
  *(_QWORD *)(a1 + v8[8]) = *(_QWORD *)(a2 + v8[8]);
  swift_release();
  *(_QWORD *)(a1 + v8[9]) = *(_QWORD *)(a2 + v8[9]);
  swift_release();
  *(_QWORD *)(a1 + v8[10]) = *(_QWORD *)(a2 + v8[10]);
  swift_release();
  *(_QWORD *)(a1 + v8[11]) = *(_QWORD *)(a2 + v8[11]);
  swift_release();
  v9 = a3[5];
  v10 = (_QWORD *)(a1 + v9);
  v11 = a2 + v9;
  v12 = *(_QWORD *)(a2 + v9 + 8);
  *v10 = *(_QWORD *)(a2 + v9);
  v10[1] = v12;
  swift_bridgeObjectRelease();
  v10[2] = *(_QWORD *)(v11 + 16);
  v13 = type metadata accessor for Source();
  v14 = *(int *)(v13 + 24);
  v15 = (char *)v10 + v14;
  v16 = v11 + v14;
  v17 = sub_1C106D1F8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v15, v16, v17);
  *((_BYTE *)v10 + *(int *)(v13 + 28)) = *(_BYTE *)(v11 + *(int *)(v13 + 28));
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t getEnumTagSinglePayload for Fuser()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0A5AED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v11;

  v6 = sub_1C078A314();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
    return sub_1C07B2D80(v8, a2, v7);
  }
  v9 = sub_1C077674C();
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v9;
    v8 = a1 + *(int *)(a3 + 20);
    return sub_1C07B2D80(v8, a2, v7);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for Fuser()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0A5AF78(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v8 = sub_1C078A314();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
    return sub_1C07B2D8C(v10, a2, a2, v9);
  }
  result = sub_1C077674C();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
  {
    v9 = result;
    v10 = a1 + *(int *)(a4 + 20);
    return sub_1C07B2D8C(v10, a2, a2, v9);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_1C0A5B00C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for PhaseStores();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Source();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C0A5B0A8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t *, uint64_t))
{
  uint64_t *v11;
  uint64_t v12;
  uint64_t v14[5];

  v14[3] = a4;
  v14[4] = a5;
  v11 = sub_1C079DFC4(v14);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(v11, a2, a4);
  v12 = *a3;
  *(_QWORD *)(v12 + 16) = a1 + 1;
  return a6(v14, v12 + 40 * a1 + 32);
}

uint64_t sub_1C0A5B12C(uint64_t a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

unint64_t sub_1C0A5B27C()
{
  unint64_t result;

  result = qword_1EF639B70;
  if (!qword_1EF639B70)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PersonalKnowledgeResult, &type metadata for PersonalKnowledgeResult);
    atomic_store(result, (unint64_t *)&qword_1EF639B70);
  }
  return result;
}

uint64_t sub_1C0A5B2B8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0A5B3A0()
{
  return sub_1C106D1EC();
}

uint64_t sub_1C0A5B3AC()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C079D180(v1 - 128, v0);
}

uint64_t sub_1C0A5B3BC()
{
  return 0;
}

uint64_t sub_1C0A5B3C8()
{
  return _s24IntelligencePlatformCore15LocationMatcherV11entityClass0aB006EntityG0Vvg_0();
}

void sub_1C0A5B3D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(_QWORD);

  sub_1C07E05C8(a1, v1, v2);
}

uint64_t sub_1C0A5B3DC()
{
  uint64_t v0;
  uint64_t v1;

  return v0 + *(int *)(v1 + 20);
}

uint64_t sub_1C0A5B3F0()
{
  return type metadata accessor for GraphTriple(0);
}

uint64_t sub_1C0A5B3FC()
{
  return type metadata accessor for EventTriple(0);
}

void sub_1C0A5B414()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  sub_1C07B2018(v1, v0);
}

uint64_t sub_1C0A5B420(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v2;
  type metadata accessor for Fuser();
  *(_QWORD *)(v3 + 32) = sub_1C0779D74();
  type metadata accessor for Linker();
  *(_QWORD *)(v3 + 40) = sub_1C0779D74();
  *(_QWORD *)(v3 + 48) = type metadata accessor for Source();
  *(_QWORD *)(v3 + 56) = sub_1C0786414();
  *(_QWORD *)(v3 + 64) = sub_1C0775870();
  *(_QWORD *)(v3 + 72) = type metadata accessor for PhaseStores();
  *(_QWORD *)(v3 + 80) = sub_1C0786414();
  *(_QWORD *)(v3 + 88) = sub_1C0775870();
  *(_QWORD *)(v3 + 96) = type metadata accessor for FutureLifeEventDeltaSourceIngestor();
  *(_QWORD *)(v3 + 104) = sub_1C0786414();
  *(_QWORD *)(v3 + 112) = sub_1C0775870();
  *(_QWORD *)(v3 + 120) = sub_1C0775870();
  type metadata accessor for Configuration();
  *(_QWORD *)(v3 + 128) = sub_1C0779D74();
  *(_BYTE *)(v3 + 161) = *a2;
  return swift_task_switch();
}

uint64_t sub_1C0A5B4F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 16);
  sub_1C07E05C8(v4, v1, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v5 = *(_QWORD *)(v4 + *(int *)(v3 + 24));
  type metadata accessor for FutureLifeEventProvider();
  swift_allocObject();
  swift_retain();
  v6 = sub_1C0A5BD3C(v1, v5, 0);
  *(_QWORD *)(v0 + 136) = v6;
  sub_1C07E05C8(v4, v2, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  v7 = qword_1ED762E80;
  swift_retain();
  if (v7 != -1)
    swift_once();
  v19 = *(_BYTE *)(v0 + 161);
  v8 = *(_QWORD *)(v0 + 120);
  v10 = *(_QWORD *)(v0 + 88);
  v9 = *(int **)(v0 + 96);
  v18 = *(_QWORD *)(v0 + 80);
  v11 = *(_QWORD *)(v0 + 64);
  v16 = *(_QWORD *)(v0 + 112);
  v17 = *(_QWORD *)(v0 + 56);
  v12 = *(_QWORD *)(v0 + 16);
  v13 = sub_1C079E000(*(_QWORD *)(v0 + 48), (uint64_t)&unk_1ED762268);
  *(_QWORD *)(v0 + 144) = v13;
  sub_1C077E98C(v13, v8);
  *(_BYTE *)(v8 + v9[5]) = 2;
  sub_1C07E05F4(v10, v8 + v9[6], (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  *(_QWORD *)(v8 + v9[7]) = v6;
  _s24IntelligencePlatformCore12EventMatcherV11entityClass0aB006EntityG0Vvg_0();
  sub_1C07E05C8(v12, v10, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C077E98C(v13, v11);
  sub_1C07E05C8(v8, v16, (uint64_t (*)(_QWORD))type metadata accessor for FutureLifeEventDeltaSourceIngestor);
  sub_1C077E98C(v13, v17);
  sub_1C07E05C8(v12, v18, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  *(_BYTE *)(v0 + 160) = v19;
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v14;
  *v14 = v0;
  v14[1] = sub_1C0A5B6F8;
  return Linker.init(source:stores:pipelineType:)(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 80), (_BYTE *)(v0 + 160));
}

uint64_t sub_1C0A5B6F8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1C0A5B74C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 32);
  v11 = *(_QWORD *)(v0 + 40);
  v12 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 16);
  v13 = *(_QWORD *)(v0 + 24);
  v7 = *(_BYTE *)(v0 + 161);
  sub_1C07E05C8(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 56), (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C07E05C8(v6, v4, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  Fuser.init(source:stores:pipelineType:)();
  swift_release();
  sub_1C07B2018(v6, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C07B2018(v1, (uint64_t (*)(_QWORD))type metadata accessor for FutureLifeEventDeltaSourceIngestor);
  sub_1C07E05C8(v3, v2, (uint64_t (*)(_QWORD))type metadata accessor for FutureLifeEventDeltaSourceIngestor);
  v8 = sub_1C0A5B988(v12, v10, v2, v11, v5, v7, v13, (uint64_t (*)(uint64_t))type metadata accessor for FutureLifeEventDeltaSourceIngestor, &qword_1ED751F60, (uint64_t)&unk_1C1099040);
  sub_1C07B2018(v3, (uint64_t (*)(_QWORD))type metadata accessor for FutureLifeEventDeltaSourceIngestor);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v8);
}

void sub_1C0A5B8E8()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1C0A5B914()
{
  return type metadata accessor for FutureLifeEventPhase();
}

uint64_t type metadata accessor for FutureLifeEventPhase()
{
  uint64_t result;

  result = qword_1ED751CC0;
  if (!qword_1ED751CC0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1C0A5B954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  sub_1C0A5B988(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(uint64_t))type metadata accessor for IPEntityTaggingPersonInferenceSourceIngestor, &qword_1EF639BA0, (uint64_t)&unk_1C10A59B8);
  sub_1C0796570();
}

uint64_t sub_1C0A5B988(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t (*a8)(uint64_t), unint64_t *a9, uint64_t a10)
{
  uint64_t *v17;
  uint64_t v18;
  uint64_t *v19;

  v17 = (uint64_t *)(a7 + OBJC_IVAR____TtC24IntelligencePlatformCore13PipelinePhase_sourceIngestor);
  v17[3] = a8(0);
  sub_1C0794BAC(a9, a8, a10);
  v17[4] = v18;
  v19 = sub_1C079DFC4(v17);
  sub_1C07E05F4(a3, (uint64_t)v19, a8);
  sub_1C07E05F4(a2, a7 + OBJC_IVAR____TtC24IntelligencePlatformCore13PipelinePhase_source, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C07E05F4(a1, a7 + OBJC_IVAR____TtC24IntelligencePlatformCore13PipelinePhase_stores, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C07E05F4(a4, a7 + OBJC_IVAR____TtC24IntelligencePlatformCore13PipelinePhase_linker, (uint64_t (*)(_QWORD))type metadata accessor for Linker);
  sub_1C07E05F4(a5, a7 + OBJC_IVAR____TtC24IntelligencePlatformCore13PipelinePhase_fusion, (uint64_t (*)(_QWORD))type metadata accessor for Fuser);
  *(_BYTE *)(a7 + OBJC_IVAR____TtC24IntelligencePlatformCore13PipelinePhase_pipelineType) = a6;
  return a7;
}

void sub_1C0A5BACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  sub_1C0A5B988(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(uint64_t))type metadata accessor for EKEventSourceIngestor, &qword_1ED750B60, (uint64_t)&unk_1C1088C68);
  sub_1C0796570();
}

void sub_1C0A5BB00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  sub_1C0A5B988(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(uint64_t))type metadata accessor for FAFamilySourceIngestor, &qword_1ED750C60, (uint64_t)&unk_1C1095D50);
  sub_1C0796570();
}

void sub_1C0A5BB34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  sub_1C0A5B988(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(uint64_t))type metadata accessor for FavoriteSportsTeamSourceIngestor, &qword_1ED751178, (uint64_t)&unk_1C10960C0);
  sub_1C0796570();
}

void sub_1C0A5BB68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  sub_1C0A5B988(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(uint64_t))type metadata accessor for SGEventSourceIngestor, &qword_1ED750C00, (uint64_t)&unk_1C10B6108);
  sub_1C0796570();
}

void sub_1C0A5BB9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  sub_1C0A5B988(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(uint64_t))type metadata accessor for SGContactSourceIngestor, &qword_1ED750F20, (uint64_t)&unk_1C10B6030);
  sub_1C0796570();
}

void sub_1C0A5BBD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  sub_1C0A5B988(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(uint64_t))type metadata accessor for HKEmergencyContactSourceIngestor, &qword_1ED7511A8, (uint64_t)&unk_1C109F340);
  sub_1C0796570();
}

void sub_1C0A5BC04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  sub_1C0A5B988(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(uint64_t))type metadata accessor for INGroupSourceIngestor, &qword_1ED750BB0, (uint64_t)&unk_1C10A2EB0);
  sub_1C0796570();
}

void sub_1C0A5BC38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  sub_1C0A5B988(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(uint64_t))type metadata accessor for INPersonSourceIngestor, &qword_1ED750CC8, (uint64_t)&unk_1C10A2F60);
  sub_1C0796570();
}

void sub_1C0A5BC6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  sub_1C0A5B988(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(uint64_t))type metadata accessor for LSBundleRecordSourceIngestor, &qword_1ED741EF8, (uint64_t)&unk_1C10AB418);
  sub_1C0796570();
}

void sub_1C0A5BCA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  sub_1C0A5B988(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(uint64_t))type metadata accessor for PGRelationshipFullSourceIngestor, &qword_1ED741F08, (uint64_t)&unk_1C10B1E00);
  sub_1C0796570();
}

void sub_1C0A5BCD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  sub_1C0A5B988(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(uint64_t))type metadata accessor for PHPersonSourceIngestor, &qword_1ED750D00, (uint64_t)&unk_1C10B30C0);
  sub_1C0796570();
}

void sub_1C0A5BD08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  sub_1C0A5B988(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(uint64_t))type metadata accessor for RelationshipFullSourceIngestor, &qword_1ED741F00, (uint64_t)&unk_1C10B43B8);
  sub_1C0796570();
}

uint64_t sub_1C0A5BD3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  swift_release();
  if (!a3)
    a3 = MEMORY[0x1E0DEE9D8];
  sub_1C07B1F90(a1, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  *(_QWORD *)(v3 + 16) = a3;
  return v3;
}

void sub_1C0A5BD94(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t AssociatedTypeWitness;
  uint64_t *v17;
  _BYTE v18[16];
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  _QWORD v22[5];
  uint64_t *v23;

  v23 = a2;
  sub_1C07ACF80(&qword_1ED751EB8);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  sub_1C078D458();
  MEMORY[0x1E0C80A78](v6);
  v8 = &v18[-v7];
  v9 = *(_QWORD *)(v2 + 16);
  v19 = a1;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0BCA124((uint64_t)sub_1C0A5CE18, (uint64_t)v18, v9);
  v11 = v10;
  swift_bridgeObjectRelease();
  v22[0] = v11;
  v22[1] = sub_1C0A5C168;
  v22[2] = 0;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_retain();
  sub_1C07ACF80((uint64_t *)&unk_1ED74C140);
  sub_1C07ACF80(&qword_1ED751DF0);
  sub_1C07E6EDC(&qword_1ED74C138, (uint64_t *)&unk_1ED74C140, (uint64_t)&protocol conformance descriptor for OrderedMergeAsyncSequence<A>);
  sub_1C1070C00();
  sub_1C0A5CE94((uint64_t)v8, v3);
  sub_1C07ACF80(&qword_1ED751EB0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1C077DD60(&v20, (uint64_t)v22);
    sub_1C07D6D1C((uint64_t)v22, (uint64_t)&v20);
    v12 = sub_1C07A9480(&v20, v21);
    v13 = MEMORY[0x1E0C80A78](v12);
    (*(void (**)(_BYTE *, double))(v15 + 16))(&v18[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)], v13);
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v17 = v23;
    v23[3] = AssociatedTypeWitness;
    v17[4] = swift_getAssociatedConformanceWitness();
    sub_1C07B3E30(v17);
    sub_1C1070150();
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)&v20);
    swift_bridgeObjectRelease();
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v22);
  }
  else
  {
    sub_1C0A5CEDC();
    swift_allocError();
    swift_willThrow();
    swift_bridgeObjectRelease();
  }
  sub_1C0784B6C((uint64_t)v8, &qword_1ED751EB8);
}

uint64_t sub_1C0A5C044@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14[5];

  v6 = a1[3];
  v7 = a1[4];
  sub_1C07A9480(a1, v6);
  v14[3] = swift_getAssociatedTypeWitness();
  v14[4] = swift_getAssociatedConformanceWitness();
  sub_1C07B3E30(v14);
  sub_1C0D0498C(a2, v6, v7, v8);
  if (v3)
  {

    result = sub_1C0A0A6A4((uint64_t)v14);
    v10 = 0;
    v11 = 0;
  }
  else
  {
    AsyncSequence.toAnySessionAsyncSequence()();
    v10 = v12;
    v11 = v13;
    result = _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v14);
  }
  *a3 = v10;
  a3[1] = v11;
  return result;
}

uint64_t sub_1C0A5C168(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = sub_1C106ADE0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v17 - v9;
  v11 = a1[3];
  v12 = a1[4];
  sub_1C07A9480(a1, v11);
  (*(void (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
  v13 = a2[3];
  v14 = a2[4];
  sub_1C07A9480(a2, v13);
  (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
  LOBYTE(a1) = sub_1C106AD50();
  v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v7, v4);
  v15(v10, v4);
  return a1 & 1;
}

uint64_t sub_1C0A5C278(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1C0A5C294()
{
  uint64_t v0;

  sub_1C0A5C2BC(*(_QWORD **)(v0 + 24), *(_QWORD *)(v0 + 16));
  return sub_1C077CF28(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0A5C2BC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  void (*v33)(unint64_t, char *, uint64_t);
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, unint64_t);
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  _QWORD *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _OWORD v68[2];
  uint64_t v69[5];

  v67 = a2;
  v65 = sub_1C106ADE0();
  v61 = *(_QWORD *)(v65 - 8);
  MEMORY[0x1E0C80A78](v65);
  v64 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v62 = (char *)&v54 - v6;
  v60 = type metadata accessor for FutureActivityEventWithLocations(0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  sub_1C077AE40();
  v63 = v8;
  v57 = type metadata accessor for SourceIdPrefix();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v9);
  sub_1C077AE40();
  v59 = v10;
  v58 = type metadata accessor for ActivityEventContent(0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v66 = (uint64_t)&v54 - v15;
  sub_1C07ACF80(&qword_1EF639C20);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (int *)type metadata accessor for CommuteInference();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v20);
  sub_1C078D458();
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v54 - v22;
  v25 = a1[3];
  v24 = a1[4];
  sub_1C07A9480(a1, v25);
  v26 = *(void (**)(uint64_t, uint64_t))(v24 + 32);
  v69[3] = swift_getAssociatedTypeWitness();
  sub_1C07B3E30(v69);
  v26(v25, v24);
  sub_1C0793B3C();
  if (!sub_1C079E4F0())
    goto LABEL_7;
  sub_1C07B1F90((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for CommuteInference);
  sub_1C0793B3C();
  if ((sub_1C079E4F0() & 1) == 0)
  {
    sub_1C0791154((uint64_t)v18, 1);
    sub_1C0784B6C((uint64_t)v18, &qword_1EF639C20);
LABEL_7:
    v52 = sub_1C07ACF80(&qword_1ED751DF0);
    v50 = v67;
    v51 = 1;
    goto LABEL_8;
  }
  sub_1C0791154((uint64_t)v18, 0);
  sub_1C07E05F4((uint64_t)v18, (uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for CommuteInference);
  v55 = *v2;
  sub_1C07ACF80(&qword_1ED7603D8);
  v27 = sub_1C106E590();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(_QWORD *)(v28 + 72);
  v30 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_1C1078FC0;
  v56 = v31;
  v32 = v31 + v30;
  v33 = *(void (**)(unint64_t, char *, uint64_t))(v28 + 16);
  v33(v31 + v30, (char *)v2 + v19[5], v27);
  v33(v32 + v29, (char *)v2 + v19[6], v27);
  v34 = (uint64_t *)((char *)v2 + v19[7]);
  v35 = *v34;
  v36 = v34[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C07B1F90((uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for CommuteInference);
  if (qword_1ED749C40 != -1)
    swift_once();
  v57 = sub_1C079E000(v57, (uint64_t)&unk_1ED78C990);
  v37 = v59;
  sub_1C07E05C8(v57, v59, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
  memset(v68, 0, sizeof(v68));
  *(_OWORD *)(v13 + 40) = 0u;
  *(_OWORD *)(v13 + 24) = 0u;
  *v13 = -102;
  sub_1C07E05F4(v37, (uint64_t)&v13[*(int *)(v58 + 32)], (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
  *((_QWORD *)v13 + 1) = v55;
  v13[16] = 0;
  sub_1C0A5CDD0((uint64_t)v68, (uint64_t)(v13 + 24));
  *((_QWORD *)v13 + 7) = MEMORY[0x1E0DEE9D8];
  sub_1C07E05F4((uint64_t)v13, v66, type metadata accessor for ActivityEventContent);
  *(_QWORD *)&v68[0] = v35;
  *((_QWORD *)&v68[0] + 1) = v36;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  v58 = *((_QWORD *)&v68[0] + 1);
  v59 = *(_QWORD *)&v68[0];
  sub_1C079AB40();
  v38 = (uint64_t)v62;
  (*(void (**)(uint64_t, unint64_t))(v30 + 16))(v35, v30);
  sub_1C079AB40();
  v39 = *(void (**)(uint64_t, unint64_t))(v30 + 24);
  v40 = v60;
  v41 = v63;
  v42 = (uint64_t)v63 + *(int *)(v60 + 24);
  v43 = sub_1C07ACF80(&qword_1ED74AF90);
  v39(v35, v30);
  v44 = v42 + *(int *)(v43 + 32);
  v45 = v66;
  sub_1C07E05C8(v66, v44, type metadata accessor for ActivityEventContent);
  sub_1C07A0B44(v42, v38);
  sub_1C07E05C8(v57, (uint64_t)v41 + *(int *)(v40 + 28), (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
  v46 = v58;
  *v41 = v59;
  v41[1] = v46;
  v41[2] = v56;
  sub_1C0787DF4();
  sub_1C078E020();
  sub_1C0787DF4();
  v47 = (uint64_t)v64;
  sub_1C078E020();
  sub_1C07B1F90(v45, type metadata accessor for ActivityEventContent);
  v48 = v67;
  sub_1C07A0B44(v67, v38);
  v49 = sub_1C07ACF80(&qword_1ED751DF0);
  sub_1C07A0B44(v48 + *(int *)(v49 + 28), v47);
  sub_1C07E05F4((uint64_t)v41, v48 + *(int *)(v49 + 32), type metadata accessor for FutureActivityEventWithLocations);
  v50 = v48;
  v51 = 0;
  v52 = v49;
LABEL_8:
  sub_1C07B2D8C(v50, v51, 1, v52);
  return _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v69);
}

uint64_t type metadata accessor for FutureLifeEventProvider()
{
  return objc_opt_self();
}

unint64_t sub_1C0A5C890()
{
  unint64_t result;

  result = qword_1EF639BA8;
  if (!qword_1EF639BA8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1098DA4, &type metadata for FutureLifeEventProviderAsyncSequence);
    atomic_store(result, (unint64_t *)&qword_1EF639BA8);
  }
  return result;
}

void sub_1C0A5C8CC(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C0A5BD94(a1, a2);
}

void sub_1C0A5C8EC()
{
  sub_1C07E6EDC(qword_1EF639BD0, &qword_1ED751DF0, (uint64_t)&protocol conformance descriptor for SessionDataComplying<A>);
}

unint64_t sub_1C0A5C918(uint64_t a1)
{
  unint64_t result;

  result = sub_1C0A5C93C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0A5C93C()
{
  unint64_t result;

  result = qword_1EF639BF8;
  if (!qword_1EF639BF8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1098DC0, &type metadata for FutureLifeEventProviderAsyncSequence);
    atomic_store(result, (unint64_t *)&qword_1EF639BF8);
  }
  return result;
}

unint64_t sub_1C0A5C97C()
{
  unint64_t result;

  result = qword_1EF639C00[0];
  if (!qword_1EF639C00[0])
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1098E08, &type metadata for FutureLifeEventProviderAsyncSequence);
    atomic_store(result, qword_1EF639C00);
  }
  return result;
}

uint64_t sub_1C0A5C9B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1C0A5CD9C(v1, a1);
}

uint64_t sub_1C0A5C9C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = v1;
  return swift_task_switch();
}

uint64_t sub_1C0A5C9DC()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;

  sub_1C079D180(v0[7], *(_QWORD *)(v0[7] + 24));
  v0[8] = swift_getAssociatedTypeWitness();
  v1 = sub_1C1070564();
  v0[9] = v1;
  v0[10] = *(_QWORD *)(v1 - 8);
  v0[11] = swift_task_alloc();
  v2 = (_QWORD *)swift_task_alloc();
  v0[12] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_1C0A5CAA4;
  return sub_1C1070078();
}

uint64_t sub_1C0A5CAA4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1C0A5CB08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 64);
  if (sub_1C07B2D80(v1, 1, v2) == 1)
  {
    v3 = *(_QWORD *)(v0 + 48);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(v1, *(_QWORD *)(v0 + 72));
    swift_task_dealloc();
    v4 = sub_1C07ACF80(&qword_1ED751DF0);
    v5 = v3;
    v6 = 1;
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 48);
    *(_QWORD *)(v0 + 40) = v2;
    sub_1C07B3E30((uint64_t *)(v0 + 16));
    (*(void (**)(void))(*(_QWORD *)(v2 - 8) + 32))();
    swift_task_dealloc();
    v8 = sub_1C07ACF80(&qword_1ED751DF0);
    v6 = swift_dynamicCast() ^ 1;
    v5 = v7;
    v4 = v8;
  }
  sub_1C07B2D8C(v5, v6, 1, v4);
  return sub_1C078F470(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0A5CC08()
{
  uint64_t v0;

  swift_task_dealloc();
  return sub_1C077CF28(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0A5CC34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1C0A5C9B8(a1);
  return sub_1C0A5CD78(v1);
}

uint64_t sub_1C0A5CC4C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C0801424;
  return sub_1C0A5C9C4(a1);
}

uint64_t sub_1C0A5CC9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)(v4 + 16) = a4;
  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EF641140 + dword_1EF641140);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v8;
  *v8 = v4;
  v8[1] = sub_1C0A5CD20;
  return v10(a1, a2, a3);
}

uint64_t sub_1C0A5CD20()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *v1;
  swift_task_dealloc();
  if (v0)
    **(_QWORD **)(v2 + 16) = v0;
  return sub_1C078F470(*(uint64_t (**)(void))(v3 + 8));
}

uint64_t sub_1C0A5CD78(uint64_t a1)
{
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(a1);
  return a1;
}

uint64_t sub_1C0A5CD9C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for StoredLocationVisit(a2, a1);
  return a2;
}

uint64_t sub_1C0A5CDD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1ED760400);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0A5CE18@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1C0A5C044(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1C0A5CE30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1C0801424;
  return sub_1C0A5C278(a1, a2, v2);
}

uint64_t sub_1C0A5CE94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1ED751EB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C0A5CEDC()
{
  unint64_t result;

  result = qword_1EF639C38;
  if (!qword_1EF639C38)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1098F5C, &type metadata for FutureLifeEventProvider.FutureLifeEventProviderError);
    atomic_store(result, (unint64_t *)&qword_1EF639C38);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FutureLifeEventProvider.FutureLifeEventProviderError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1C0A5CF58 + 4 * asc_1C1098D50[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1C0A5CF78 + 4 * byte_1C1098D55[v4]))();
}

_BYTE *sub_1C0A5CF58(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1C0A5CF78(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C0A5CF80(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C0A5CF88(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C0A5CF90(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C0A5CF98(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FutureLifeEventProvider.FutureLifeEventProviderError()
{
  return &type metadata for FutureLifeEventProvider.FutureLifeEventProviderError;
}

uint64_t initializeWithCopy for StoredLocationVisit(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for StoredLocationVisit(uint64_t *a1, uint64_t *a2)
{
  sub_1C07E6484(a1, a2);
  return a1;
}

uint64_t assignWithTake for StoredLocationVisit(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for FutureLifeEventProviderAsyncSequence()
{
  return &type metadata for FutureLifeEventProviderAsyncSequence;
}

unint64_t sub_1C0A5D058(uint64_t a1)
{
  unint64_t result;

  result = sub_1C0A5C97C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0A5D080()
{
  unint64_t result;

  result = qword_1EF639C58;
  if (!qword_1EF639C58)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1098F34, &type metadata for FutureLifeEventProvider.FutureLifeEventProviderError);
    atomic_store(result, (unint64_t *)&qword_1EF639C58);
  }
  return result;
}

_QWORD *sub_1C0A5D0BC(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    v8 = type metadata accessor for Source();
    v9 = *(int *)(v8 + 24);
    v10 = (char *)v4 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_1C106D1F8();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v13(v10, v11, v12);
    *((_BYTE *)v4 + *(int *)(v8 + 28)) = *((_BYTE *)a2 + *(int *)(v8 + 28));
    v14 = a3[6];
    *((_BYTE *)v4 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v15 = (char *)v4 + v14;
    v16 = (char *)a2 + v14;
    v17 = sub_1C106AB28();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v18 = type metadata accessor for Configuration();
    *(_OWORD *)&v15[*(int *)(v18 + 20)] = *(_OWORD *)&v16[*(int *)(v18 + 20)];
    v19 = (int *)type metadata accessor for PhaseStores();
    *(_QWORD *)&v15[v19[5]] = *(_QWORD *)&v16[v19[5]];
    *(_QWORD *)&v15[v19[6]] = *(_QWORD *)&v16[v19[6]];
    *(_QWORD *)&v15[v19[7]] = *(_QWORD *)&v16[v19[7]];
    *(_QWORD *)&v15[v19[8]] = *(_QWORD *)&v16[v19[8]];
    *(_QWORD *)&v15[v19[9]] = *(_QWORD *)&v16[v19[9]];
    *(_QWORD *)&v15[v19[10]] = *(_QWORD *)&v16[v19[10]];
    *(_QWORD *)&v15[v19[11]] = *(_QWORD *)&v16[v19[11]];
    v20 = a3[8];
    *(_QWORD *)((char *)v4 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
    v21 = (char *)v4 + v20;
    v22 = (char *)a2 + v20;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v13(v21, v22, v12);
  }
  return v4;
}

uint64_t sub_1C0A5D2A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v9)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(type metadata accessor for Source() + 24);
  v5 = sub_1C106D1F8();
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v9(v4, v5);
  v6 = a1 + *(int *)(a2 + 24);
  v7 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  type metadata accessor for PhaseStores();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return ((uint64_t (*)(uint64_t, uint64_t))v9)(a1 + *(int *)(a2 + 32), v5);
}

_QWORD *sub_1C0A5D3BC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = type metadata accessor for Source();
  v8 = *(int *)(v7 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1C106D1F8();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v12(v9, v10, v11);
  *((_BYTE *)a1 + *(int *)(v7 + 28)) = *((_BYTE *)a2 + *(int *)(v7 + 28));
  v13 = a3[6];
  *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_1C106AB28();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  v17 = type metadata accessor for Configuration();
  *(_OWORD *)&v14[*(int *)(v17 + 20)] = *(_OWORD *)&v15[*(int *)(v17 + 20)];
  v18 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)&v14[v18[5]] = *(_QWORD *)&v15[v18[5]];
  *(_QWORD *)&v14[v18[6]] = *(_QWORD *)&v15[v18[6]];
  *(_QWORD *)&v14[v18[7]] = *(_QWORD *)&v15[v18[7]];
  *(_QWORD *)&v14[v18[8]] = *(_QWORD *)&v15[v18[8]];
  *(_QWORD *)&v14[v18[9]] = *(_QWORD *)&v15[v18[9]];
  *(_QWORD *)&v14[v18[10]] = *(_QWORD *)&v15[v18[10]];
  *(_QWORD *)&v14[v18[11]] = *(_QWORD *)&v15[v18[11]];
  v19 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v12(v20, v21, v11);
  return a1;
}

_QWORD *sub_1C0A5D578(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  int *v19;

  *a1 = *a2;
  a1[1] = a2[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v6 = type metadata accessor for Source();
  v7 = *(int *)(v6 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1C106D1F8();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  *((_BYTE *)a1 + *(int *)(v6 + 28)) = *((_BYTE *)a2 + *(int *)(v6 + 28));
  *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_1C106AB28();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  v16 = *(int *)(type metadata accessor for Configuration() + 20);
  v17 = &v13[v16];
  v18 = &v14[v16];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  v19 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)&v13[v19[5]] = *(_QWORD *)&v14[v19[5]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v13[v19[6]] = *(_QWORD *)&v14[v19[6]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v13[v19[7]] = *(_QWORD *)&v14[v19[7]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v13[v19[8]] = *(_QWORD *)&v14[v19[8]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v13[v19[9]] = *(_QWORD *)&v14[v19[9]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v13[v19[10]] = *(_QWORD *)&v14[v19[10]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v13[v19[11]] = *(_QWORD *)&v14[v19[11]];
  swift_retain();
  swift_release();
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_retain();
  swift_release();
  v11((char *)a1 + a3[8], (char *)a2 + a3[8], v10);
  return a1;
}

uint64_t sub_1C0A5D78C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = type metadata accessor for Source();
  v7 = *(int *)(v6 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1C106D1F8();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  *(_BYTE *)(a1 + *(int *)(v6 + 28)) = *(_BYTE *)(a2 + *(int *)(v6 + 28));
  v12 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  v16 = type metadata accessor for Configuration();
  *(_OWORD *)(v13 + *(int *)(v16 + 20)) = *(_OWORD *)(v14 + *(int *)(v16 + 20));
  v17 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(v13 + v17[5]) = *(_QWORD *)(v14 + v17[5]);
  *(_QWORD *)(v13 + v17[6]) = *(_QWORD *)(v14 + v17[6]);
  *(_QWORD *)(v13 + v17[7]) = *(_QWORD *)(v14 + v17[7]);
  *(_QWORD *)(v13 + v17[8]) = *(_QWORD *)(v14 + v17[8]);
  *(_QWORD *)(v13 + v17[9]) = *(_QWORD *)(v14 + v17[9]);
  *(_QWORD *)(v13 + v17[10]) = *(_QWORD *)(v14 + v17[10]);
  *(_QWORD *)(v13 + v17[11]) = *(_QWORD *)(v14 + v17[11]);
  v18 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v11(a1 + v18, a2 + v18, v10);
  return a1;
}

_QWORD *sub_1C0A5D8E4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v7 = type metadata accessor for Source();
  v8 = *(int *)(v7 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1C106D1F8();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40);
  v12(v9, v10, v11);
  *((_BYTE *)a1 + *(int *)(v7 + 28)) = *((_BYTE *)a2 + *(int *)(v7 + 28));
  v13 = a3[6];
  *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_1C106AB28();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  v17 = type metadata accessor for Configuration();
  *(_OWORD *)&v14[*(int *)(v17 + 20)] = *(_OWORD *)&v15[*(int *)(v17 + 20)];
  v18 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)&v14[v18[5]] = *(_QWORD *)&v15[v18[5]];
  swift_release();
  *(_QWORD *)&v14[v18[6]] = *(_QWORD *)&v15[v18[6]];
  swift_release();
  *(_QWORD *)&v14[v18[7]] = *(_QWORD *)&v15[v18[7]];
  swift_release();
  *(_QWORD *)&v14[v18[8]] = *(_QWORD *)&v15[v18[8]];
  swift_release();
  *(_QWORD *)&v14[v18[9]] = *(_QWORD *)&v15[v18[9]];
  swift_release();
  *(_QWORD *)&v14[v18[10]] = *(_QWORD *)&v15[v18[10]];
  swift_release();
  *(_QWORD *)&v14[v18[11]] = *(_QWORD *)&v15[v18[11]];
  swift_release();
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_release();
  v12((char *)a1 + a3[8], (char *)a2 + a3[8], v11);
  return a1;
}

uint64_t sub_1C0A5DA8C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0A5DA98(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v6 = sub_1C078BD20();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = v4;
    return sub_1C07B2D80(v8, v3, v7);
  }
  v9 = sub_1C078A314();
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v9;
    v10 = a3[6];
LABEL_10:
    v8 = v4 + v10;
    return sub_1C07B2D80(v8, v3, v7);
  }
  if ((_DWORD)v3 != 0x7FFFFFFF)
  {
    v7 = sub_1C0776744();
    v10 = a3[8];
    goto LABEL_10;
  }
  v11 = *(_QWORD *)(v4 + a3[7]);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_1C0A5DB44()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0A5DB50(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v8 = sub_1C078BD20();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = v5;
  }
  else
  {
    result = sub_1C078A314();
    if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    {
      v9 = result;
      v12 = a4[6];
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        *(_QWORD *)(v5 + a4[7]) = (v4 - 1);
        return result;
      }
      v9 = sub_1C0776744();
      v12 = a4[8];
    }
    v10 = v5 + v12;
  }
  return sub_1C07B2D8C(v10, v4, v4, v9);
}

uint64_t type metadata accessor for FutureLifeEventDeltaSourceIngestor()
{
  uint64_t result;

  result = qword_1ED751F78;
  if (!qword_1ED751F78)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C0A5DC30()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = type metadata accessor for Source();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for PhaseStores();
    if (v2 <= 0x3F)
    {
      result = sub_1C106D1F8();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1C0A5DCE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = sub_1C106E590();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x1E0DEE9D8];
  if (v7)
  {
    v14 = v1;
    v16 = MEMORY[0x1E0DEE9D8];
    sub_1C09D32B4();
    v8 = v16;
    v9 = *(_QWORD *)(type metadata accessor for GraphTriple(0) - 8);
    v10 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v15 = *(_QWORD *)(v9 + 72);
    v11 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    do
    {
      v11(v6, v10, v3);
      v16 = v8;
      v12 = *(_QWORD *)(v8 + 16);
      if (v12 >= *(_QWORD *)(v8 + 24) >> 1)
      {
        sub_1C09D32B4();
        v8 = v16;
      }
      *(_QWORD *)(v8 + 16) = v12 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v12, v6, v3);
      v10 += v15;
      --v7;
    }
    while (v7);
  }
  return v8;
}

uint64_t sub_1C0A5DE4C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[37] = v0;
  v2 = sub_1C106F544();
  v1[38] = v2;
  v1[39] = *(_QWORD *)(v2 - 8);
  v1[40] = sub_1C0775870();
  v1[41] = sub_1C0775870();
  v1[42] = sub_1C0775870();
  sub_1C07ACF80(&qword_1ED751DF8);
  v1[43] = sub_1C0779644();
  v3 = sub_1C07ACF80(&qword_1ED751DF0);
  v1[44] = v3;
  v1[45] = *(_QWORD *)(v3 - 8);
  v1[46] = sub_1C0775870();
  v1[47] = sub_1C0775870();
  v1[48] = sub_1C0775870();
  sub_1C07ACF80((uint64_t *)&unk_1ED752020);
  v1[49] = sub_1C0779644();
  v4 = sub_1C106ADE0();
  v1[50] = v4;
  v1[51] = *(_QWORD *)(v4 - 8);
  v1[52] = sub_1C0779644();
  return sub_1C077AEC4();
}

uint64_t sub_1C0A5DF3C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v0[29] = 0;
  v0[36] = 0;
  v2 = v0[51];
  v1 = v0[52];
  v4 = v0[49];
  v3 = v0[50];
  sub_1C106ADA4();
  sub_1C106AC60();
  v0[53] = v5;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[54] = type metadata accessor for FutureLifeEventDeltaSourceIngestor();
  v6 = sub_1C07ACF80(&qword_1ED75D0B8);
  sub_1C07B2D8C(v4, 1, 1, v6);
  sub_1C0A5BD94(v4, v0 + 7);
  sub_1C08D6F14(v0[49], (uint64_t *)&unk_1ED752020);
  sub_1C0A5CD9C((uint64_t)(v0 + 7), (uint64_t)(v0 + 2));
  v0[55] = MEMORY[0x1E0DEE9D8];
  sub_1C079D180((uint64_t)(v0 + 2), v0[5]);
  v7 = sub_1C078DEC0();
  v8 = sub_1C0793B48(v7);
  v0[57] = v8;
  v0[58] = *(_QWORD *)(v8 - 8);
  v0[59] = sub_1C0779644();
  v9 = (_QWORD *)swift_task_alloc();
  v0[60] = (uint64_t)v9;
  sub_1C077F61C(v9);
  return sub_1C1070078();
}

uint64_t sub_1C0A5E278()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 488) = v0;
  swift_task_dealloc();
  return sub_1C077AEC4();
}

uint64_t sub_1C0A5E2D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t result;
  void *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _DWORD *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74[2];

  v1 = v0 + 16;
  v2 = *(_QWORD *)(v0 + 472);
  v3 = *(_QWORD *)(v0 + 448);
  if (sub_1C07B2D80(v2, 1, v3) == 1)
  {
    v5 = *(_QWORD *)(v0 + 344);
    v4 = *(_QWORD *)(v0 + 352);
    sub_1C078AC90(*(_QWORD *)(v0 + 464));
    sub_1C07796F8();
    v6 = v5;
    v7 = 1;
    v8 = v4;
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 344);
    v9 = *(_QWORD *)(v0 + 352);
    *(_QWORD *)(v0 + 120) = v3;
    v11 = sub_1C079DFC4((uint64_t *)(v0 + 96));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32))(v11, v2, v3);
    sub_1C07796F8();
    v7 = swift_dynamicCast() ^ 1;
    v6 = v10;
    v8 = v9;
  }
  sub_1C07B2D8C(v6, v7, 1, v8);
  v12 = *(_QWORD *)(v0 + 344);
  if (sub_1C07B2D80(v12, 1, *(_QWORD *)(v0 + 352)) == 1)
  {
    v13 = (_QWORD *)(v0 + 232);
    v70 = (_QWORD *)(v0 + 288);
    v14 = *(_QWORD *)(v0 + 488);
    sub_1C0A5CD78(v0 + 16);
    sub_1C08D6F14(v12, &qword_1ED751DF8);
    sub_1C0A5CD78(v0 + 56);
    result = sub_1C0A5EF44(100);
    v73 = (uint64_t *)(v0 + 232);
    if (v14)
    {
      v16 = *(void **)(v0 + 320);
      sub_1C0790D8C();
      sub_1C077CF64();
      sub_1C077CF64();
      sub_1C106F538();
      v17 = sub_1C077C13C();
      v18 = sub_1C0790D48(v17);
      v20 = *(_QWORD *)(v0 + 312);
      v19 = *(_QWORD *)(v0 + 320);
      v21 = *(_QWORD *)(v0 + 304);
      if (v18)
      {
        v22 = (_DWORD *)sub_1C0775854();
        v74[0] = sub_1C0775854();
        *v22 = 136315138;
        *(_QWORD *)(v0 + 256) = v14;
        sub_1C077CF64();
        sub_1C07ACF80(&qword_1ED7614F0);
        v23 = sub_1C106FB5C();
        *(_QWORD *)(v0 + 264) = sub_1C0788DAC(v23, v24, v74);
        sub_1C10705AC();
        swift_bridgeObjectRelease();
        sub_1C077E6C8();
        sub_1C077E6C8();
        sub_1C079E500(&dword_1C0771000, v25, v26, "Error getting future life events due to: %s");
        sub_1C0778610();
        sub_1C0776778();
      }
      sub_1C077E6C8();
      sub_1C077E6C8();
      sub_1C077E6C8();

      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
LABEL_18:
      v49 = *(_QWORD *)(v0 + 432);
      v48 = *(_QWORD *)(v0 + 440);
      v50 = *(_QWORD *)(v0 + 296);
      sub_1C077F040();
      *(_QWORD *)(v0 + 232) = 0;
      sub_1C077F040();
      *(_QWORD *)(v0 + 288) = 0;
      v51 = v50 + *(int *)(v49 + 24);
      v69 = *(int *)(sub_1C078A314() + 24);
      v72 = sub_1C0A5F2E0(*(_QWORD *)(v51 + v69));
      v52 = *(_QWORD *)(v48 + 16);
      if (!v52)
      {
LABEL_23:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C088CC80();
        v58 = sub_1C078AFC0();
        sub_1C078CAB8(v58, v59, v60, v61, v62, v63, v64, v65, v68, v69, v70, v71, v51, v72, v73);
        sub_1C07767BC();
        sub_1C07796F8();
        sub_1C07758BC();
        sub_1C0779D18();
        sub_1C077C104();
        sub_1C07767D4();
        sub_1C0778638();
        sub_1C0786388();
        sub_1C0779D20();
        return (*(uint64_t (**)(void))(v0 + 8))();
      }
      v1 = v0 + 240;
      v53 = *(_QWORD *)(v0 + 360);
      v54 = *(_QWORD *)(v0 + 440)
          + ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80));
      v71 = *(_QWORD *)(v53 + 72);
      while (1)
      {
        sub_1C0A5FB74(v54, *(_QWORD *)(v0 + 368));
        sub_1C0CCBDD4();
        if (__OFADD__(*v73, 1))
          break;
        *(_QWORD *)(v0 + 232) = *v73 + 1;
        LOBYTE(v74[0]) = 2;
        sub_1C0D0B184((unsigned __int8 *)v74, v72);
        v55 = *(_QWORD *)(v0 + 368);
        sub_1C0D41200();
        swift_bridgeObjectRelease();
        sub_1C08D6F14(v55, &qword_1ED751DF0);
        v56 = *(_QWORD *)(v0 + 288);
        v40 = __OFADD__(v56, 1);
        v57 = v56 + 1;
        if (v40)
          goto LABEL_25;
        *v70 = v57;
        v54 += v71;
        if (!--v52)
          goto LABEL_23;
      }
      __break(1u);
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v38 = *(_QWORD *)(result + 16);
    if (__OFADD__(*v13, v38))
    {
      __break(1u);
    }
    else
    {
      *(_QWORD *)(v0 + 232) = *v13 + v38;
      sub_1C0BD340C();
      result = swift_bridgeObjectRelease();
      v39 = *(_QWORD *)(v0 + 288);
      v40 = __OFADD__(v39, v38);
      v41 = v39 + v38;
      if (!v40)
      {
        *(_QWORD *)(v0 + 288) = v41;
        sub_1C0790D8C();
        v42 = sub_1C106F538();
        v43 = sub_1C1070384();
        if (os_log_type_enabled(v42, v43))
        {
          v44 = sub_1C0775854();
          *(_DWORD *)v44 = 134218240;
          sub_1C077F040();
          *(_QWORD *)(v0 + 280) = *v13;
          sub_1C10705AC();
          *(_WORD *)(v44 + 12) = 2048;
          sub_1C077F040();
          *(_QWORD *)(v0 + 248) = *v70;
          sub_1C10705AC();
          _os_log_impl(&dword_1C0771000, v42, v43, "Need to delete %ld, deleted %ld future life events", (uint8_t *)v44, 0x16u);
          sub_1C0776778();
        }
        v45 = *(_QWORD *)(v0 + 336);
        v46 = *(_QWORD *)(v0 + 304);
        v47 = *(_QWORD *)(v0 + 312);

        (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v45, v46);
        goto LABEL_18;
      }
    }
    __break(1u);
    return result;
  }
  v28 = *(_QWORD *)(v0 + 376);
  v27 = *(_QWORD *)(v0 + 384);
  sub_1C0A5FBBC(v12, v27);
  sub_1C0A5FB74(v27, v28);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v30 = *(_QWORD *)(v0 + 440);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_26:
    sub_1C07A5E10();
    v30 = v66;
  }
  v31 = *(_QWORD *)(v30 + 16);
  if (v31 >= *(_QWORD *)(v30 + 24) >> 1)
  {
    sub_1C07A5E10();
    v30 = v67;
  }
  v32 = *(_QWORD *)(v0 + 376);
  v33 = *(_QWORD *)(v0 + 384);
  v34 = *(_QWORD *)(v0 + 360);
  *(_QWORD *)(v30 + 16) = v31 + 1;
  sub_1C0A5FBBC(v32, v30+ ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(_QWORD *)(v34 + 72) * v31);
  sub_1C08D6F14(v33, &qword_1ED751DF0);
  *(_QWORD *)(v0 + 440) = v30;
  sub_1C079D180(v1, *(_QWORD *)(v0 + 40));
  v35 = sub_1C078DEC0();
  v36 = sub_1C0793B48(v35);
  *(_QWORD *)(v0 + 456) = v36;
  *(_QWORD *)(v0 + 464) = *(_QWORD *)(v36 - 8);
  *(_QWORD *)(v0 + 472) = sub_1C0779644();
  v37 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 480) = v37;
  sub_1C077F61C(v37);
  return sub_1C1070078();
}

uint64_t sub_1C0A5EAD4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  os_log_type_t v3;
  _DWORD *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v16;

  swift_bridgeObjectRelease();
  sub_1C07758BC();
  sub_1C0A5CD78(v0 + 16);
  sub_1C0A5CD78(v0 + 56);
  v1 = *(_QWORD *)(v0 + 488);
  v2 = *(void **)(v0 + 328);
  sub_1C0790D8C();
  sub_1C077C818();
  sub_1C077C818();
  sub_1C106F538();
  v3 = sub_1C077C13C();
  if (sub_1C0790D48(v3))
  {
    v4 = (_DWORD *)sub_1C0775854();
    v16 = sub_1C0775854();
    *v4 = 136315138;
    *(_QWORD *)(v0 + 272) = v1;
    sub_1C077C818();
    sub_1C07ACF80(&qword_1ED7614F0);
    v5 = sub_1C106FB5C();
    *(_QWORD *)(v0 + 224) = sub_1C0788DAC(v5, v6, &v16);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    sub_1C077C220();
    sub_1C077C220();
    sub_1C079E500(&dword_1C0771000, v7, v8, "Error getting delta future life events due to: %s");
    sub_1C0778610();
    sub_1C0776778();
  }
  v9 = *(_QWORD *)(v0 + 328);
  v10 = *(_QWORD *)(v0 + 304);
  v11 = *(_QWORD *)(v0 + 312);
  sub_1C077C220();
  sub_1C077C220();
  sub_1C077C220();

  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  v12 = sub_1C078AFC0();
  sub_1C0A5ECB4(v12, v13, v14);
  sub_1C07767BC();
  sub_1C07796F8();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C07767D4();
  sub_1C0778638();
  sub_1C0786388();
  sub_1C0779D20();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C0A5ECB4(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v6 = type metadata accessor for Pipeline.StatusStore();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FutureLifeEventDeltaSourceIngestor();
  sub_1C083F944(a1 + *(int *)(v9 + 24), (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v8[*(int *)(v6 + 20)] = 1;
  Pipeline.StatusStore.currentSessionId()();
  sub_1C0A157EC((uint64_t)v8);
  sub_1C106F244();
  sub_1C07ACF80((uint64_t *)&unk_1ED7614C0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C10795A0;
  *(_QWORD *)(inited + 32) = 0x496E6F6973736573;
  *(_QWORD *)(inited + 40) = 0xE900000000000064;
  v11 = sub_1C106FAF0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 48) = v11;
  *(_QWORD *)(inited + 56) = 0x614E656372756F73;
  *(_QWORD *)(inited + 64) = 0xEA0000000000656DLL;
  sub_1C07D4B70(0, &qword_1ED760190);
  *(_QWORD *)(inited + 72) = sub_1C1070528();
  *(_QWORD *)(inited + 80) = 0x756F436E656B6174;
  *(_QWORD *)(inited + 88) = 0xEA0000000000746ELL;
  swift_beginAccess();
  *(_QWORD *)(inited + 96) = sub_1C1070294();
  strcpy((char *)(inited + 104), "droppedCount");
  *(_BYTE *)(inited + 117) = 0;
  *(_WORD *)(inited + 118) = -5120;
  swift_beginAccess();
  v12 = *a3;
  swift_beginAccess();
  result = v12 - *a2;
  if (__OFSUB__(v12, *a2))
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(inited + 120) = sub_1C1070294();
    sub_1C07D4B70(0, (unint64_t *)&qword_1ED761490);
    sub_1C106F97C();
    sub_1C106F22C();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C0A5EF44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  double v17;
  uint64_t inited;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t result;
  _QWORD v43[2];
  __int128 v44;
  double v45;
  char v46;
  uint64_t v47;

  v3 = sub_1C106D1F8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C08BA2F8();
  if ((v46 & 1) != 0)
    return MEMORY[0x1E0DEE9D8];
  v43[1] = v1;
  v8 = v45;
  sub_1C106CDD8();
  v47 = sub_1C106D090();
  v10 = v9;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1C07ACF80(&qword_1ED762CB0);
  v11 = swift_allocObject();
  v44 = xmmword_1C1079220;
  *(_OWORD *)(v11 + 16) = xmmword_1C1079220;
  if (qword_1ED762E80 != -1)
LABEL_27:
    swift_once();
  v12 = type metadata accessor for Source();
  v13 = (uint64_t *)sub_1C079E000(v12, (uint64_t)&unk_1ED762268);
  v15 = *v13;
  v14 = v13[1];
  *(_QWORD *)(v11 + 32) = v15;
  *(_QWORD *)(v11 + 40) = v14;
  v45 = MEMORY[0x1E0DEE9E8];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106AC6C();
  v17 = v16;
  type metadata accessor for FutureLifeEventDeltaSourceIngestor();
  type metadata accessor for PhaseStores();
  v7 = MEMORY[0x1E0DEE9D8];
  do
  {
    sub_1C07ACF80(&qword_1ED74D530);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = v44;
    *(_QWORD *)(inited + 32) = v47;
    *(_QWORD *)(inited + 40) = v10;
    *(_BYTE *)(inited + 48) = 1;
    *(_QWORD *)(inited + 56) = 0;
    *(_QWORD *)(inited + 64) = v11;
    *(_QWORD *)(inited + 72) = 0;
    *(_QWORD *)(inited + 80) = 0;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0AA93F4((uint64_t)&unk_1E7A00A68);
    sub_1C0ABAD10(inited, v19, a1, (uint64_t)&v45, v8, v17);
    v8 = v20;
    v22 = v21;
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1C0BE8E94();
    v23 = *(_QWORD *)(v22 + 16);
    v24 = *(_QWORD *)(v7 + 16);
    if (__OFADD__(v24, v23))
    {
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    if (!swift_isUniquelyReferenced_nonNull_native() || v24 + v23 > *(_QWORD *)(v7 + 24) >> 1)
    {
      sub_1C07EBE48();
      v7 = v25;
    }
    if (*(_QWORD *)(v22 + 16))
    {
      v26 = *(_QWORD *)(v7 + 16);
      v27 = (*(_QWORD *)(v7 + 24) >> 1) - v26;
      v28 = sub_1C106E590();
      if (v27 < v23)
        goto LABEL_25;
      v29 = *(_QWORD *)(v28 - 8);
      v30 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
      v31 = *(_QWORD *)(v29 + 72);
      v32 = v7 + v30 + v31 * v26;
      v33 = v22 + v30;
      v34 = v31 * v23;
      v35 = v32 + v34;
      v36 = v33 + v34;
      if (v33 < v35 && v32 < v36)
      {
        result = sub_1C10709F0();
        __break(1u);
        return result;
      }
      swift_arrayInitWithCopy();
      if (v23)
      {
        v38 = *(_QWORD *)(v7 + 16);
        v39 = __OFADD__(v38, v23);
        v40 = v38 + v23;
        if (v39)
          goto LABEL_26;
        *(_QWORD *)(v7 + 16) = v40;
      }
    }
    else if (v23)
    {
      goto LABEL_24;
    }
    swift_bridgeObjectRelease();
    v41 = *(_QWORD *)(v22 + 16);
    swift_bridgeObjectRelease();
  }
  while (v41 >= a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C0A5F2E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v41[2];
  char *v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  _BYTE v52[16];
  uint64_t *v53;
  uint64_t v54;

  v45 = a1;
  v1 = sub_1C07ACF80(&qword_1ED75EA10);
  MEMORY[0x1E0C80A78](v1);
  v50 = (uint64_t)v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1C106D9A8();
  v47 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v49 = (char *)v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v48 = (char *)v41 - v6;
  MEMORY[0x1E0C80A78](v7);
  v46 = (char *)v41 - v8;
  MEMORY[0x1E0C80A78](v9);
  v42 = (char *)v41 - v10;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v41 - v12;
  v14 = sub_1C07ACF80(&qword_1ED756690);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1C106D1F8();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1C106D9B4();
  v22 = *(_QWORD *)(v21 - 8);
  v44 = v21;
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)v41 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s24IntelligencePlatformCore15LocationMatcherV11entityClass0aB006EntityG0Vvg_0();
  sub_1C106D858();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  v25 = sub_1C106EB78();
  sub_1C07B2D8C((uint64_t)v16, 1, 1, v25);
  v51 = v24;
  v26 = sub_1C0BA46B8((uint64_t)v24, (uint64_t)v16);
  sub_1C08D6F14((uint64_t)v16, &qword_1ED756690);
  v43 = *(void (**)(char *, uint64_t))(v22 + 8);
  v43(v24, v21);
  sub_1C0A5DCE4(v26);
  swift_bridgeObjectRelease();
  v54 = MEMORY[0x1E0DEE9E0];
  sub_1C0898DB0();
  v41[1] = v27;
  sub_1C07ACF80(&qword_1ED75E838);
  sub_1C106E41C();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C1079220;
  sub_1C106DE70();
  sub_1C0AA7870();
  v28 = *MEMORY[0x1E0D3C448];
  v29 = v47;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v47 + 104);
  v31 = v13;
  v30(v13, v28, v3);
  v32 = v42;
  v30(v42, v28, v3);
  v33 = v46;
  v30(v46, v28, v3);
  v34 = v48;
  v30(v48, v28, v3);
  v35 = v49;
  v30(v49, v28, v3);
  sub_1C106D864();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v36 = *(void (**)(char *, uint64_t))(v29 + 8);
  v36(v35, v3);
  v36(v34, v3);
  v36(v33, v3);
  v36(v32, v3);
  v36(v31, v3);
  v37 = sub_1C106D2DC();
  v38 = v50;
  sub_1C07B2D8C(v50, 1, 1, v37);
  v53 = &v54;
  v39 = (uint64_t)v51;
  sub_1C0AA4BDC((uint64_t)v51, v38, (uint64_t)sub_1C0A5FC04, (uint64_t)v52);
  sub_1C08D6F14(v38, &qword_1ED75EA10);
  v43((char *)v39, v44);
  return v54;
}

uint64_t sub_1C0A5F740(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  _QWORD v25[2];

  v25[0] = sub_1C106E590();
  v4 = *(_QWORD *)(v25[0] - 8);
  MEMORY[0x1E0C80A78](v25[0]);
  v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C106AE28();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1C07ACF80(&qword_1ED762CE0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v25 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v25 - v18;
  v25[1] = a2;
  v20 = *a2;
  if (*(_QWORD *)(v20 + 16) && (sub_1C07DCD84(), (v22 & 1) != 0))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v19, *(_QWORD *)(v20 + 56) + *(_QWORD *)(v8 + 72) * v21, v7);
    sub_1C07B2D8C((uint64_t)v19, 0, 1, v7);
    if (sub_1C07B2D80((uint64_t)v19, 1, v7) != 1)
    {
      v23 = (uint64_t)v19;
      goto LABEL_8;
    }
  }
  else
  {
    sub_1C07B2D8C((uint64_t)v19, 1, 1, v7);
  }
  sub_1C08D6F14((uint64_t)v19, &qword_1ED762CE0);
  type metadata accessor for GraphTriple(0);
  sub_1C106ADEC();
  if (sub_1C07B2D80((uint64_t)v16, 1, v7) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v16, v7);
    (*(void (**)(char *, uint64_t, _QWORD))(v4 + 16))(v6, a1, v25[0]);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v10, v7);
    sub_1C07B2D8C((uint64_t)v13, 0, 1, v7);
    sub_1C0D999E4((uint64_t)v13, (uint64_t)v6);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return 1;
  }
  v23 = (uint64_t)v16;
LABEL_8:
  sub_1C08D6F14(v23, &qword_1ED762CE0);
  return 1;
}

uint64_t sub_1C0A5F9BC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C0806670;
  return sub_1C0A5DE4C();
}

uint64_t sub_1C0A5FA00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 32);
  v5 = sub_1C0776744();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

void sub_1C0A5FA3C(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1C083F944(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for Source);
}

void sub_1C0A5FA60(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1C083F944(v2 + *(int *)(a1 + 24), a2, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
}

uint64_t sub_1C0A5FA88@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  *a2 = *(_BYTE *)(v2 + *(int *)(result + 20));
  return result;
}

void sub_1C0A5FA9C(uint64_t a1)
{
  uint64_t v2;

  sub_1C0A5FB38(&qword_1ED751F58, (uint64_t)&unk_1C1098FE0);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0A5FAD0(uint64_t a1)
{
  uint64_t v2;

  sub_1C0A5FB38(&qword_1ED751F70, (uint64_t)&unk_1C1099008);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0A5FB04(uint64_t a1)
{
  uint64_t v2;

  sub_1C0A5FB38(&qword_1ED751F68, (uint64_t)&unk_1C1099024);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0A5FB38(unint64_t *a1, uint64_t a2)
{
  uint64_t v4;

  if (!*a1)
  {
    v4 = type metadata accessor for FutureLifeEventDeltaSourceIngestor();
    atomic_store(MEMORY[0x1C3BA8174](a2, v4), a1);
  }
  sub_1C0778534();
}

uint64_t sub_1C0A5FB74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1ED751DF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0A5FBBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1ED751DF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0A5FC04(uint64_t a1)
{
  uint64_t v1;

  return sub_1C0A5F740(a1, *(uint64_t **)(v1 + 16));
}

uint64_t sub_1C0A5FC0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v6[24];
  uint64_t v7;

  sub_1C07C015C(a1, (uint64_t)v6);
  if (!v7)
    return sub_1C07C011C((uint64_t)v6);
  result = swift_dynamicCast();
  if ((_DWORD)result)
  {
    v3 = sub_1C0A5FCAC(v4, v5);
    result = swift_bridgeObjectRelease();
    if (!v1)
      return sub_1C0FDDE98(v3);
  }
  return result;
}

uint64_t sub_1C0A5FCAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  v6 = qword_1ED749C90;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  if (v6 != -1)
    swift_once();
  v7 = type metadata accessor for SourceIdPrefix();
  sub_1C079E000(v7, (uint64_t)&qword_1ED78C390);
  String.base64EncodedSHA(withPrefix:)();
  v9 = v8;
  v11 = v10;
  type metadata accessor for LifeEventStructs.Software(0);
  v12 = sub_1C077B5BC();
  v13 = v9;
  v14 = v12;
  v15 = sub_1C0FF0968(v13, v11);
  if (v3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = (_QWORD *)(v15 + OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs8Software_bundleIdentifier);
    *v16 = a1;
    v16[1] = a2;
    swift_bridgeObjectRelease();
    type metadata accessor for LifeEventStructs.SoftwareRelationshipType(0);
    sub_1C077B5BC();
    sub_1C0FF1D50();
    v14 = v17;
    v18 = swift_retain();
    sub_1C0FDDEB4(v18);
    swift_release();
  }
  return v14;
}

_QWORD *sub_1C0A5FDC8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

_QWORD *assignWithCopy for GamingActivityContent(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

_QWORD *assignWithTake for GamingActivityContent(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

ValueMetadata *type metadata accessor for GamingActivityContent()
{
  return &type metadata for GamingActivityContent;
}

_QWORD *sub_1C0A5FE9C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1C106ADE0();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    v9[2] = v10[2];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  return a1;
}

uint64_t sub_1C0A5FF40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_1C106ADE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v8[2] = v9[2];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

uint64_t sub_1C0A5FFB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_1C106ADE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v7 = *(int *)(a3 + 24);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  v8[2] = v9[2];
  return a1;
}

uint64_t sub_1C0A60048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_1C106ADE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v8[2] = v9[2];
  return a1;
}

uint64_t sub_1C0A600C4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0A600D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = sub_1C077AE98();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return sub_1C07B2D80(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_1C0A60148()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0A60154(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = sub_1C077AE98();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return sub_1C07B2D8C(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for GamingActivityEvent()
{
  uint64_t result;

  result = qword_1ED754EB0;
  if (!qword_1ED754EB0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C0A60200()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C106ADE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

BOOL sub_1C0A6027C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  char v9;
  _BOOL8 result;

  if (a1 == a3 && a2 == a4)
    return a5 == a6;
  v9 = sub_1C07785B0();
  result = 0;
  if ((v9 & 1) != 0)
    return a5 == a6;
  return result;
}

uint64_t sub_1C0A602C0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x4449656C646E7562 && a2 == 0xE800000000000000;
  if (v2 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656469666E6F63 && a2 == 0xEA00000000006563)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1C1070CB4();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1C0A603B8(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6E656469666E6F63;
  else
    return 0x4449656C646E7562;
}

uint64_t sub_1C0A603F4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = sub_1C07ACF80(&qword_1EF639CC0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1C0778544();
  sub_1C07A9480(a1, a1[3]);
  sub_1C0A60FFC();
  sub_1C1070EB8();
  sub_1C1070B7C();
  if (!v1)
    sub_1C1070B94();
  return sub_1C078C76C(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
}

double sub_1C0A6050C(_QWORD *a1)
{
  uint64_t v1;
  double v2;
  uint64_t v4;
  double v6;

  v4 = sub_1C07ACF80(&qword_1EF639C98);
  MEMORY[0x1E0C80A78](v4);
  sub_1C07795DC();
  sub_1C07A9480(a1, a1[3]);
  sub_1C0A60FFC();
  sub_1C1070E94();
  if (v1)
  {
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_1C1070AA4();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C1070ABC();
    v2 = v6;
    sub_1C0790798();
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)a1);
    sub_1C077589C();
  }
  return v2;
}

uint64_t sub_1C0A60660()
{
  char *v0;

  return sub_1C0A603B8(*v0);
}

uint64_t sub_1C0A60668@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0A602C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0A6068C()
{
  sub_1C0A60FFC();
  return sub_1C1070EE8();
}

uint64_t sub_1C0A606B4()
{
  sub_1C0A60FFC();
  return sub_1C1070EF4();
}

BOOL sub_1C0A606DC(uint64_t a1, uint64_t a2)
{
  return sub_1C0A6027C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(double *)(a1 + 16), *(double *)(a2 + 16));
}

void sub_1C0A606F8(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double v6;

  v6 = sub_1C0A6050C(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = v4;
    *(_QWORD *)(a2 + 8) = v5;
    *(double *)(a2 + 16) = v6;
  }
}

uint64_t sub_1C0A60724(_QWORD *a1)
{
  return sub_1C0A603F4(a1);
}

BOOL sub_1C0A60740(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  char *v24;
  double v25;
  BOOL v26;
  _BOOL8 v27;
  uint64_t v29;

  v4 = sub_1C079733C();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v29 - v9;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v29 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v29 - v15;
  v17 = sub_1C106AD8C();
  sub_1C0A610B0(a1, (uint64_t)v16);
  sub_1C0A610B0(a2, (uint64_t)v13);
  if ((v17 & 1) == 0)
  {
    sub_1C0A610F4((uint64_t)v13);
    sub_1C0A610F4((uint64_t)v16);
    sub_1C0793B58();
    sub_1C0791160();
    goto LABEL_10;
  }
  v18 = v16[*(int *)(v4 + 20)];
  sub_1C0A610F4((uint64_t)v16);
  v19 = v13[*(int *)(v4 + 20)];
  sub_1C0A610F4((uint64_t)v13);
  sub_1C0793B58();
  sub_1C0791160();
  if (v18 != v19)
  {
LABEL_10:
    v27 = 0;
    goto LABEL_11;
  }
  v20 = *(int *)(v4 + 24);
  v21 = *(_QWORD *)&v10[v20];
  v22 = *(_QWORD *)&v10[v20 + 8];
  v23 = *(double *)&v10[v20 + 16];
  v24 = &v7[v20];
  v25 = *((double *)v24 + 2);
  v26 = v21 == *(_QWORD *)v24 && v22 == *((_QWORD *)v24 + 1);
  if (v26 || (v27 = 0, (sub_1C07785B0() & 1) != 0))
    v27 = v23 == v25;
LABEL_11:
  sub_1C0A610F4((uint64_t)v10);
  sub_1C0A610F4((uint64_t)v7);
  return v27;
}

uint64_t sub_1C0A608D0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070;
  if (v2 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6974726174537369 && a2 == 0xEA0000000000676ELL;
    if (v6 || (sub_1C1070CB4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1C1070CB4();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1C0A60A34(char a1)
{
  if (!a1)
    return 0x6D617473656D6974;
  if (a1 == 1)
    return 0x6974726174537369;
  return 0x746E65746E6F63;
}

uint64_t sub_1C0A60A94(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = sub_1C07ACF80(&qword_1EF639CA8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1C0778544();
  sub_1C07A9480(a1, a1[3]);
  sub_1C0A61038();
  sub_1C1070EB8();
  sub_1C077AE98();
  sub_1C0902108(&qword_1ED75E7D0, MEMORY[0x1E0CB0890]);
  sub_1C077D19C();
  if (!v1)
  {
    sub_1C079733C();
    sub_1C1070B88();
    sub_1C0A61074();
    sub_1C077D19C();
  }
  return sub_1C078C76C(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
}

void sub_1C0A60C00(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;

  v20 = a2;
  v4 = sub_1C077AE98();
  v23 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v24 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1C07ACF80(&qword_1EF639CC8);
  v6 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  sub_1C0779614();
  v7 = sub_1C079733C();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07A9480(a1, a1[3]);
  sub_1C0A61038();
  v22 = v2;
  v11 = v25;
  sub_1C1070E94();
  if (v11)
  {
    sub_1C079EEE4();
  }
  else
  {
    v25 = v7;
    v12 = v6;
    v13 = v23;
    LOBYTE(v26) = 0;
    sub_1C0902108(&qword_1ED75E9A0, MEMORY[0x1E0CB08C0]);
    sub_1C1070AE0();
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v24, v4);
    LOBYTE(v26) = 1;
    v14 = sub_1C1070AB0();
    v15 = v25;
    v10[*(int *)(v25 + 20)] = v14 & 1;
    v29 = 2;
    sub_1C0A61130();
    sub_1C1070AE0();
    sub_1C0786458(v22, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
    v16 = v27;
    v17 = v28;
    v18 = &v10[*(int *)(v15 + 24)];
    *(_QWORD *)v18 = v26;
    *((_QWORD *)v18 + 1) = v16;
    *((_QWORD *)v18 + 2) = v17;
    sub_1C0A610B0((uint64_t)v10, v20);
    sub_1C079EEE4();
    sub_1C0A610F4((uint64_t)v10);
  }
  sub_1C07757D0();
}

uint64_t sub_1C0A60E74@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v12 = sub_1C077AE98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a5, a1, v12);
  result = sub_1C079733C();
  *(_BYTE *)(a5 + *(int *)(result + 20)) = a2;
  v14 = a5 + *(int *)(result + 24);
  *(_QWORD *)v14 = a3;
  *(_QWORD *)(v14 + 8) = a4;
  *(double *)(v14 + 16) = a6;
  return result;
}

uint64_t sub_1C0A60EF4()
{
  char *v0;

  return sub_1C0A60A34(*v0);
}

uint64_t sub_1C0A60EFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0A608D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0A60F20()
{
  sub_1C0A61038();
  return sub_1C1070EE8();
}

uint64_t sub_1C0A60F48()
{
  sub_1C0A61038();
  return sub_1C1070EF4();
}

uint64_t _s24IntelligencePlatformCore21FeatureProviderChangeV4time10Foundation4DateVvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1C077AE98();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_1C0A60FA4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (_QWORD *)(v2 + *(int *)(a1 + 24));
  v4 = v3[1];
  v5 = v3[2];
  *a2 = *v3;
  a2[1] = v4;
  a2[2] = v5;
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

uint64_t sub_1C0A60FC0@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1C0A60E74(a1, a2, *(_QWORD *)a3, *(_QWORD *)(a3 + 8), a4, *(double *)(a3 + 16));
}

void sub_1C0A60FD4(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0A60C00(a1, a2);
}

uint64_t sub_1C0A60FE8(_QWORD *a1)
{
  return sub_1C0A60A94(a1);
}

unint64_t sub_1C0A60FFC()
{
  unint64_t result;

  result = qword_1EF639CA0;
  if (!qword_1EF639CA0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10993B4, &type metadata for GamingActivityContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF639CA0);
  }
  return result;
}

unint64_t sub_1C0A61038()
{
  unint64_t result;

  result = qword_1EF639CB0;
  if (!qword_1EF639CB0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1099364, &type metadata for GamingActivityEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF639CB0);
  }
  return result;
}

unint64_t sub_1C0A61074()
{
  unint64_t result;

  result = qword_1EF639CB8;
  if (!qword_1EF639CB8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1099148, &type metadata for GamingActivityContent);
    atomic_store(result, (unint64_t *)&qword_1EF639CB8);
  }
  return result;
}

uint64_t sub_1C0A610B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GamingActivityEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0A610F4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for GamingActivityEvent();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1C0A61130()
{
  unint64_t result;

  result = qword_1EF639CD0;
  if (!qword_1EF639CD0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10991C0, &type metadata for GamingActivityContent);
    atomic_store(result, (unint64_t *)&qword_1EF639CD0);
  }
  return result;
}

void sub_1C0A6116C(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v25 = a3;
  v24 = sub_1C07ACF80(&qword_1ED7482B0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v6);
  sub_1C07795DC();
  v23 = sub_1C07ACF80(&qword_1ED755038);
  v7 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  sub_1C0779614();
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v22 - v12;
  v14 = sub_1C077AE98();
  v15 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  v15(v13, a1, v14);
  sub_1C078F0C0((uint64_t)v13);
  v16 = sub_1C07ACF80(&qword_1ED75D0B8);
  v15(v10, a1 + *(int *)(v16 + 36), v14);
  sub_1C078F0C0((uint64_t)v10);
  v17 = objc_allocWithZone(MEMORY[0x1E0D026F0]);
  v18 = sub_1C07DC9F8((uint64_t)v13, (uint64_t)v10, 0, 0, 0);
  v19 = objc_msgSend(a2, sel_publisherWithOptions_, v18);

  v20 = v19;
  sub_1C07ACF80((uint64_t *)&unk_1ED74D318);
  v21 = v26;
  sub_1C106ED88();
  if (v21)
  {

  }
  else
  {
    sub_1C079733C();
    sub_1C0A61730();
    sub_1C1070C00();

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v25, v3, v23);
  }
  sub_1C07757D0();
}

uint64_t sub_1C0A6136C(uint64_t a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[2] = a1;
  v4 = sub_1C106ADE0();
  v2[3] = v4;
  v2[4] = *(_QWORD *)(v4 - 8);
  v2[5] = swift_task_alloc();
  sub_1C07ACF80(&qword_1ED754EC0);
  v2[6] = swift_task_alloc();
  v5 = swift_task_alloc();
  v6 = *a2;
  v2[7] = v5;
  v2[8] = v6;
  return swift_task_switch();
}

uint64_t sub_1C0A61408()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  uint64_t *v32;
  uint64_t v34;
  uint64_t v35;

  v1 = objc_msgSend(*(id *)(v0 + 64), sel_eventBody);
  if (v1)
  {
    v2 = v1;
    v3 = *(_QWORD *)(v0 + 56);
    v4 = sub_1C079733C();
    sub_1C078AF64(v3, 1);
    v5 = sub_1C0877010(v2);
    if (v6)
    {
      v7 = v5;
      v8 = v6;
      v9 = (void *)objc_opt_self();
      v10 = (void *)sub_1C106FAF0();
      v11 = objc_msgSend(v9, sel_categoryForBundleId_, v10);

      v12 = objc_msgSend(v11, sel_identifier);
      v13 = sub_1C106FB14();
      v15 = v14;
      if (v13 == sub_1C106FB14() && v15 == v16)
      {
        swift_bridgeObjectRelease_n();

      }
      else
      {
        v18 = sub_1C07785B0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        if ((v18 & 1) == 0)
        {

          swift_bridgeObjectRelease();
LABEL_18:
          sub_1C0A617B4(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 16));
          goto LABEL_19;
        }
      }
      v27 = *(_QWORD *)(v0 + 56);
      v29 = *(_QWORD *)(v0 + 40);
      v28 = *(_QWORD *)(v0 + 48);
      v34 = *(_QWORD *)(v0 + 32);
      v35 = *(_QWORD *)(v0 + 24);
      objc_msgSend(*(id *)(v0 + 64), sel_timestamp);
      sub_1C106AC54();
      v30 = v7;
      v31 = objc_msgSend(v2, sel_starting);

      sub_1C0A61774(v27);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 32))(v28, v29, v35);
      *(_BYTE *)(v28 + *(int *)(v4 + 20)) = v31;
      v32 = (uint64_t *)(v28 + *(int *)(v4 + 24));
      *v32 = v30;
      v32[1] = v8;
      v32[2] = 0x3FF0000000000000;
      sub_1C078AF64(v28, 0);
      sub_1C0A617B4(v28, v27);
      goto LABEL_18;
    }
    v26 = *(_QWORD *)(v0 + 16);
    sub_1C0A61774(*(_QWORD *)(v0 + 56));

    v25 = v26;
    v24 = v4;
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v19 = sub_1C106F544();
    sub_1C079E000(v19, (uint64_t)qword_1ED762AF8);
    v20 = sub_1C106F538();
    v21 = sub_1C10703A8();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_1C0771000, v20, v21, "Unable to parse eventBody from read event in gaming activity model", v22, 2u);
      MEMORY[0x1C3BA8270](v22, -1, -1);
    }
    v23 = *(_QWORD *)(v0 + 16);

    v24 = sub_1C079733C();
    v25 = v23;
  }
  sub_1C07B2D8C(v25, 1, 1, v24);
LABEL_19:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1C0A61730()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED7482C8;
  if (!qword_1ED7482C8)
  {
    v1 = sub_1C07D4BEC(&qword_1ED7482B0);
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0D3D840], v1);
    atomic_store(result, (unint64_t *)&qword_1ED7482C8);
  }
  return result;
}

uint64_t sub_1C0A61774(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C07ACF80(&qword_1ED754EC0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0A617B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1ED754EC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for GamingActivityEvent.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C0A61848 + 4 * byte_1C1099065[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C0A6187C + 4 * byte_1C1099060[v4]))();
}

uint64_t sub_1C0A6187C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0A61884(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0A6188CLL);
  return result;
}

uint64_t sub_1C0A61898(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0A618A0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C0A618A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0A618AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GamingActivityEvent.CodingKeys()
{
  return &type metadata for GamingActivityEvent.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for GamingActivityContent.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C0A61914 + 4 * byte_1C109906F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C0A61948 + 4 * byte_1C109906A[v4]))();
}

uint64_t sub_1C0A61948(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0A61950(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0A61958);
  return result;
}

uint64_t sub_1C0A61964(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0A6196CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C0A61970(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0A61978(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GamingActivityContent.CodingKeys()
{
  return &type metadata for GamingActivityContent.CodingKeys;
}

unint64_t sub_1C0A61998()
{
  unint64_t result;

  result = qword_1EF639CE0;
  if (!qword_1EF639CE0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1099284, &type metadata for GamingActivityContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF639CE0);
  }
  return result;
}

unint64_t sub_1C0A619D8()
{
  unint64_t result;

  result = qword_1EF639CE8;
  if (!qword_1EF639CE8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109933C, &type metadata for GamingActivityEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF639CE8);
  }
  return result;
}

unint64_t sub_1C0A61A18()
{
  unint64_t result;

  result = qword_1EF639CF0;
  if (!qword_1EF639CF0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10992AC, &type metadata for GamingActivityEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF639CF0);
  }
  return result;
}

unint64_t sub_1C0A61A58()
{
  unint64_t result;

  result = qword_1EF639CF8;
  if (!qword_1EF639CF8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10992D4, &type metadata for GamingActivityEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF639CF8);
  }
  return result;
}

unint64_t sub_1C0A61A98()
{
  unint64_t result;

  result = qword_1EF639D00;
  if (!qword_1EF639D00)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10991F4, &type metadata for GamingActivityContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF639D00);
  }
  return result;
}

unint64_t sub_1C0A61AD8()
{
  unint64_t result;

  result = qword_1EF639D08;
  if (!qword_1EF639D08)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109921C, &type metadata for GamingActivityContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF639D08);
  }
  return result;
}

void sub_1C0A61B14(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;

  v3 = v2;
  v17 = a2;
  v5 = type metadata accessor for VirtualInteractionContact(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (uint64_t *)((char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1 >> 62)
    goto LABEL_16;
  v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v9)
  {
    while (1)
    {
      v19 = MEMORY[0x1E0DEE9D8];
      sub_1C09D38F4();
      if (v9 < 0)
        break;
      v10 = 0;
      v11 = v19;
      v16 = a1 & 0xC000000000000001;
      while (v9 != v10)
      {
        if (v16)
          v12 = (id)MEMORY[0x1C3BA70DC](v10, a1);
        else
          v12 = *(id *)(a1 + 8 * v10 + 32);
        v13 = v12;
        v18 = v12;
        sub_1C0A622E4(&v18, v17, v8);
        if (v3)
        {
          swift_bridgeObjectRelease();
          swift_release();

          return;
        }
        v3 = 0;

        v19 = v11;
        v14 = *(_QWORD *)(v11 + 16);
        if (v14 >= *(_QWORD *)(v11 + 24) >> 1)
        {
          sub_1C09D38F4();
          v11 = v19;
        }
        ++v10;
        *(_QWORD *)(v11 + 16) = v14 + 1;
        sub_1C0A626CC((uint64_t)v8, v11+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v14);
        if (v9 == v10)
          goto LABEL_13;
      }
      __break(1u);
LABEL_16:
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v9 = sub_1C10709B4();
      swift_bridgeObjectRelease();
      if (!v9)
        goto LABEL_13;
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
  }
}

id sub_1C0A61D0C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  id v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  void *object;
  int *v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  id v56;
  int *v57;
  uint64_t v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  id v67;
  uint64_t *v68;
  id v69;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;

  v80 = type metadata accessor for VirtualInteraction(0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v71 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07ACF80((uint64_t *)&unk_1ED75EA40);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  v77 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07ACF80((uint64_t *)&unk_1ED757B90);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  v9 = (uint64_t *)((char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v71 - v11;
  sub_1C07ACF80((uint64_t *)&unk_1ED756670);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v13);
  v76 = (uint64_t)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v71 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v71 - v19;
  v22 = sub_1C079448C(v21, sel_recipients);
  sub_1C0A622A8();
  v23 = sub_1C106FF04();

  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0A61B14(v23, a1);
  v79 = v24;
  v25 = swift_bridgeObjectRelease();
  v26 = sub_1C079448C(v25, sel_sender);
  if (!v26
    || (v27 = v26,
        v28 = objc_msgSend(v26, sel_handle),
        v27,
        sub_1C106FB14(),
        v28,
        object = String.normalizedContactHandle()().value._object,
        swift_bridgeObjectRelease(),
        !object))
  {
    swift_bridgeObjectRelease();
  }
  sub_1C089B0F4();
  swift_bridgeObjectRelease();
  v30 = (int *)type metadata accessor for VirtualInteractionContact(0);
  v31 = sub_1C0791AE8((uint64_t)v12, 1);
  v32 = sub_1C079448C(v31, sel_sender);
  v33 = (uint64_t)v12;
  if (v32)
  {
    v34 = v32;
    v35 = sub_1C0A6266C(v32);
    v74 = v36;
    v75 = v35;
    v37 = sub_1C078F31C(v35, sel_handle);
    v38 = sub_1C106FB14();
    v72 = v39;
    v73 = v38;

    v71 = sub_1C078F31C(v40, sel_contactType);
    v78 = v20;
    sub_1C078A8F8((uint64_t)v20, (uint64_t)v17, (uint64_t *)&unk_1ED756670);
    v41 = sub_1C07ACF80(&qword_1ED756668);
    if (sub_1C07B2D80((uint64_t)v17, 1, v41) == 1)
    {
      sub_1C0784B94((uint64_t)v17, (uint64_t *)&unk_1ED756670);
      v42 = sub_1C078784C();
      v43 = (uint64_t)v77;
      v44 = (uint64_t)v77;
      v45 = 1;
    }
    else
    {
      v46 = sub_1C078784C();
      v43 = (uint64_t)v77;
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v77, v17, v46);
      v44 = v43;
      v45 = 0;
      v42 = v46;
    }
    sub_1C07B2D8C(v44, v45, 1, v42);
    v47 = v76;
    sub_1C078A8F8((uint64_t)v78, v76, (uint64_t *)&unk_1ED756670);
    if (sub_1C07B2D80(v47, 1, v41) == 1)
    {
      sub_1C0784B94(v47, (uint64_t *)&unk_1ED756670);
      v49 = 2;
    }
    else
    {
      v49 = *(_BYTE *)(v47 + *(int *)(v41 + 48));
      v50 = sub_1C078784C();
      v48 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 8))(v47, v50);
    }
    v51 = sub_1C078F31C(v48, sel_participantStatus);

    sub_1C0784B94(v33, (uint64_t *)&unk_1ED757B90);
    v52 = v74;
    *v9 = v75;
    v9[1] = v52;
    v53 = v72;
    v9[2] = v73;
    v9[3] = v53;
    v9[4] = (uint64_t)v71;
    sub_1C078A67C(v43, (uint64_t)v9 + v30[7], (uint64_t *)&unk_1ED75EA40);
    *((_BYTE *)v9 + v30[8]) = v49;
    *(uint64_t *)((char *)v9 + v30[9]) = (uint64_t)v51;
    sub_1C0791AE8((uint64_t)v9, 0);
    sub_1C078A67C((uint64_t)v9, v33, (uint64_t *)&unk_1ED757B90);
    v20 = v78;
  }
  v78 = (char *)type metadata accessor for VirtualInteractionEvent(0);
  v54 = sub_1C079448C((uint64_t)v78, sel_startDate);
  sub_1C106AD98();

  v56 = sub_1C079448C(v55, sel_endDate);
  v57 = (int *)v80;
  sub_1C106AD98();

  v59 = sub_1C079448C(v58, sel_mechanism);
  v60 = sub_1C079448C((uint64_t)v59, sel_bundleId);
  v61 = sub_1C106FB14();
  v63 = v62;

  v65 = sub_1C079448C(v64, sel_direction);
  sub_1C078A8F8(v33, (uint64_t)&v4[v57[9]], (uint64_t *)&unk_1ED757B90);
  v67 = sub_1C079448C(v66, sel_selfParticipantStatus);
  *(_QWORD *)&v4[v57[6]] = v59;
  v68 = (uint64_t *)&v4[v57[7]];
  *v68 = v61;
  v68[1] = v63;
  *(_QWORD *)&v4[v57[8]] = v65;
  *(_QWORD *)&v4[v57[10]] = v79;
  *(_QWORD *)&v4[v57[11]] = v67;
  v69 = sub_1C0F187A0((uint64_t)v4);
  sub_1C0784B94(v33, (uint64_t *)&unk_1ED757B90);
  sub_1C0784B94((uint64_t)v20, (uint64_t *)&unk_1ED756670);
  return v69;
}

unint64_t sub_1C0A622A8()
{
  unint64_t result;

  result = qword_1ED758DF0;
  if (!qword_1ED758DF0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED758DF0);
  }
  return result;
}

void sub_1C0A622E4(void **a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  int *v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  char *v43;

  v43 = (char *)a2;
  v5 = sub_1C07ACF80((uint64_t *)&unk_1ED75EA40);
  MEMORY[0x1E0C80A78](v5);
  v42 = (uint64_t)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v40 - v8;
  v10 = sub_1C07ACF80((uint64_t *)&unk_1ED756670);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v40 - v14;
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v40 - v18;
  v20 = *a1;
  v21 = objc_msgSend(v20, sel_handle, v17);
  sub_1C106FB14();

  String.normalizedContactHandle()();
  swift_bridgeObjectRelease();
  sub_1C089B0F4();
  swift_bridgeObjectRelease();
  v43 = v19;
  sub_1C078A8F8((uint64_t)v19, (uint64_t)v15, (uint64_t *)&unk_1ED756670);
  v22 = sub_1C07ACF80(&qword_1ED756668);
  if (sub_1C07B2D80((uint64_t)v15, 1, v22) == 1)
  {
    sub_1C0784B94((uint64_t)v15, (uint64_t *)&unk_1ED756670);
    v23 = sub_1C106E590();
    v24 = (uint64_t)v9;
    v25 = 1;
  }
  else
  {
    v26 = sub_1C106E590();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v9, v15, v26);
    v24 = (uint64_t)v9;
    v25 = 0;
    v23 = v26;
  }
  sub_1C07B2D8C(v24, v25, 1, v23);
  sub_1C078A8F8((uint64_t)v43, (uint64_t)v12, (uint64_t *)&unk_1ED756670);
  if (sub_1C07B2D80((uint64_t)v12, 1, v22) == 1)
  {
    sub_1C0784B94((uint64_t)v12, (uint64_t *)&unk_1ED756670);
    v41 = 2;
  }
  else
  {
    v41 = v12[*(int *)(v22 + 48)];
    v27 = sub_1C106E590();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v12, v27);
  }
  v40 = sub_1C0A6266C(v20);
  v29 = v28;
  v30 = objc_msgSend(v20, sel_handle);
  v31 = sub_1C106FB14();
  v33 = v32;

  v34 = objc_msgSend(v20, sel_contactType);
  v35 = (uint64_t)v9;
  v36 = (uint64_t)v9;
  v37 = v42;
  sub_1C078A8F8(v36, v42, (uint64_t *)&unk_1ED75EA40);
  v38 = objc_msgSend(v20, sel_participantStatus);
  sub_1C0784B94(v35, (uint64_t *)&unk_1ED75EA40);
  sub_1C0784B94((uint64_t)v43, (uint64_t *)&unk_1ED756670);
  *a3 = v40;
  a3[1] = v29;
  a3[2] = v31;
  a3[3] = v33;
  a3[4] = (uint64_t)v34;
  v39 = (int *)type metadata accessor for VirtualInteractionContact(0);
  sub_1C078A67C(v37, (uint64_t)a3 + v39[7], (uint64_t *)&unk_1ED75EA40);
  *((_BYTE *)a3 + v39[8]) = v41;
  *(uint64_t *)((char *)a3 + v39[9]) = (uint64_t)v38;
}

uint64_t sub_1C0A6266C(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_displayName);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1C106FB14();

  return v3;
}

uint64_t sub_1C0A626CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for VirtualInteractionContact(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t GDInteractionEnumeration.makeIterator()()
{
  void *v0;
  id v1;

  v1 = v0;
  return sub_1C106AA50();
}

void __swiftcall GDInteractionEnumeration.GDInteractionIterator.next()(GDInteraction_optional *__return_ptr retstr)
{
  _BYTE v1[24];
  uint64_t v2;

  sub_1C106AA38();
  if (v2)
  {
    sub_1C07D4B70(0, &qword_1ED758D28);
    swift_dynamicCast();
  }
  else
  {
    sub_1C07C011C((uint64_t)v1);
  }
}

void sub_1C0A627B0(GDInteraction_optional *a1@<X8>)
{
  objc_class *v2;

  GDInteractionEnumeration.GDInteractionIterator.next()(a1);
  a1->value.super.isa = v2;
}

unint64_t sub_1C0A627D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF639D10;
  if (!qword_1EF639D10)
  {
    v1 = type metadata accessor for GDInteractionEnumeration.GDInteractionIterator();
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for GDInteractionEnumeration.GDInteractionIterator, v1);
    atomic_store(result, (unint64_t *)&qword_1EF639D10);
  }
  return result;
}

uint64_t type metadata accessor for GDInteractionEnumeration.GDInteractionIterator()
{
  uint64_t result;

  result = qword_1ED75E420;
  if (!qword_1ED75E420)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1C0A62850()
{
  id *v0;
  id v1;

  v1 = *v0;
  GDInteractionEnumeration.makeIterator()();

}

void sub_1C0A62888()
{
  sub_1C0F0E6B8();
}

uint64_t sub_1C0A628A8()
{
  return sub_1C0F0E784();
}

uint64_t sub_1C0A628C8()
{
  sub_1C07D4B70(0, &qword_1EF639D40);
  return sub_1C106FDFC();
}

uint64_t _s21GDInteractionIteratorVwCP(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C106AA44();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t _s21GDInteractionIteratorVwxx(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C106AA44();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t _s21GDInteractionIteratorVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C106AA44();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t _s21GDInteractionIteratorVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C106AA44();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t _s21GDInteractionIteratorVwtk(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C106AA44();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t _s21GDInteractionIteratorVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C106AA44();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t _s21GDInteractionIteratorVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0A62ACC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1C07A6C98();
  return sub_1C07B2D80(v1, v0, v2);
}

uint64_t _s21GDInteractionIteratorVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0A62B00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1C07A6C98();
  return sub_1C07B2D8C(v1, v0, v0, v2);
}

uint64_t sub_1C0A62B2C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C106AA44();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t GDTimeZone.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1C077AE90();
  return v1;
}

uint64_t GDTimeZone.identifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*GDTimeZone.identifier.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t static GDTimeZone.type.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  if (qword_1EF62E340 != -1)
    swift_once();
  v2 = qword_1EF6483E0;
  *(_QWORD *)a1 = qword_1EF6483C8;
  *(_OWORD *)(a1 + 8) = unk_1EF6483D0;
  *(_QWORD *)(a1 + 24) = v2;
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

uint64_t GDTimeZone.mapLocation.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_1C077AE90();
  return v1;
}

uint64_t GDTimeZone.basicProperties.getter()
{
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

uint64_t GDTimeZone.basicProperties.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = a1;
  return result;
}

uint64_t (*GDTimeZone.basicProperties.modify())(_QWORD)
{
  return nullsub_1;
}

void __swiftcall GDTimeZone.init(mapLocation:name:secondsFromGMT:abbreviation:)(IntelligencePlatformCore::GDTimeZone *__return_ptr retstr, Swift::String mapLocation, Swift::String name, Swift::String secondsFromGMT, Swift::String_optional abbreviation)
{
  void *object;
  uint64_t countAndFlagsBits;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  object = abbreviation.value._object;
  countAndFlagsBits = abbreviation.value._countAndFlagsBits;
  v7 = secondsFromGMT._object;
  v8 = secondsFromGMT._countAndFlagsBits;
  v9 = name._object;
  v10 = name._countAndFlagsBits;
  v11 = mapLocation._object;
  v12 = mapLocation._countAndFlagsBits;
  sub_1C07ACF80(&qword_1EF62FE20);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1C1078FC0;
  *(_QWORD *)(v14 + 32) = 1701667182;
  *(_QWORD *)(v14 + 40) = 0xE400000000000000;
  *(_QWORD *)(v14 + 48) = v10;
  *(_QWORD *)(v14 + 56) = v9;
  *(_QWORD *)(v14 + 72) = 0;
  *(_QWORD *)(v14 + 80) = 0;
  *(_QWORD *)(v14 + 64) = 0;
  *(_BYTE *)(v14 + 88) = 1;
  strcpy((char *)(v14 + 96), "secondsFromGMT");
  *(_BYTE *)(v14 + 111) = -18;
  *(_QWORD *)(v14 + 112) = v8;
  *(_QWORD *)(v14 + 120) = v7;
  *(_QWORD *)(v14 + 136) = 0;
  *(_QWORD *)(v14 + 144) = 0;
  *(_QWORD *)(v14 + 128) = 0;
  *(_BYTE *)(v14 + 152) = 1;
  if (object)
  {
    sub_1C07EB0C4();
    v14 = v15;
    *(_QWORD *)(v15 + 16) = 3;
    strcpy((char *)(v15 + 160), "abbreviation");
    *(_BYTE *)(v15 + 173) = 0;
    *(_WORD *)(v15 + 174) = -5120;
    *(_QWORD *)(v15 + 176) = countAndFlagsBits;
    *(_QWORD *)(v15 + 184) = object;
    *(_QWORD *)(v15 + 200) = 0;
    *(_QWORD *)(v15 + 208) = 0;
    *(_QWORD *)(v15 + 192) = 0;
    *(_BYTE *)(v15 + 216) = 1;
  }
  retstr->identifier.value._countAndFlagsBits = 0;
  retstr->identifier.value._object = 0;
  retstr->mapLocation._countAndFlagsBits = v12;
  retstr->mapLocation._object = v11;
  retstr->basicProperties._rawValue = (void *)v14;
}

uint64_t sub_1C0A62E08()
{
  sub_1C0A63230();
  return sub_1C1070EE8();
}

uint64_t sub_1C0A62E30()
{
  sub_1C0A63230();
  return sub_1C1070EF4();
}

void GDTimeZone.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;

  v3 = sub_1C07ACF80(&qword_1EF639D48);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[2];
  v12 = v1[3];
  v13 = v7;
  v11 = v1[4];
  sub_1C07A9480(a1, a1[3]);
  sub_1C0A63230();
  sub_1C1070EB8();
  v18 = 0;
  v8 = v14;
  sub_1C1070B34();
  if (!v8)
  {
    v9 = v11;
    v17 = 1;
    sub_1C1070B7C();
    v15 = v9;
    v16 = 2;
    sub_1C07ACF80(&qword_1EF62FE38);
    sub_1C07EB158(&qword_1EF62FE40, (uint64_t (*)(void))sub_1C07EB11C, MEMORY[0x1E0DEAF10]);
    sub_1C1070BB8();
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1C07757D0();
}

void GDTimeZone.init(from:)(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = sub_1C07ACF80(&qword_1EF639D58);
  MEMORY[0x1E0C80A78](v5);
  sub_1C07A9480(a1, a1[3]);
  sub_1C0A63230();
  sub_1C1070E94();
  if (v2)
  {
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)a1);
    sub_1C077B5B4();
  }
  else
  {
    v6 = sub_1C1070A5C();
    v8 = v7;
    v13 = v6;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v9 = sub_1C1070AA4();
    v11 = v10;
    v12 = v9;
    sub_1C07ACF80(&qword_1EF62FE38);
    sub_1C07EB158(&qword_1EF62FE58, (uint64_t (*)(void))sub_1C07EB1C0, MEMORY[0x1E0DEAF40]);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C1070AE0();
    sub_1C077C2F4();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C077AE90();
    sub_1C077B5B4();
    *a2 = v13;
    a2[1] = v8;
    a2[2] = v12;
    a2[3] = v11;
    a2[4] = v14;
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1C07757D0();
}

void sub_1C0A63208(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  GDTimeZone.init(from:)(a1, a2);
}

void sub_1C0A6321C(_QWORD *a1)
{
  GDTimeZone.encode(to:)(a1);
}

unint64_t sub_1C0A63230()
{
  unint64_t result;

  result = qword_1EF639D50;
  if (!qword_1EF639D50)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1099678, &type metadata for GDTimeZone.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF639D50);
  }
  return result;
}

unint64_t sub_1C0A6326C(uint64_t a1)
{
  unint64_t result;

  result = sub_1C0A63290();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0A63290()
{
  unint64_t result;

  result = qword_1EF639D60;
  if (!qword_1EF639D60)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for GDTimeZone, &type metadata for GDTimeZone);
    atomic_store(result, (unint64_t *)&qword_1EF639D60);
  }
  return result;
}

unint64_t sub_1C0A632CC(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1C0A632F8();
  result = sub_1C0A63334();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0A632F8()
{
  unint64_t result;

  result = qword_1EF639D68;
  if (!qword_1EF639D68)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for GDTimeZone, &type metadata for GDTimeZone);
    atomic_store(result, (unint64_t *)&qword_1EF639D68);
  }
  return result;
}

unint64_t sub_1C0A63334()
{
  unint64_t result;

  result = qword_1EF639D70;
  if (!qword_1EF639D70)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for GDTimeZone, &type metadata for GDTimeZone);
    atomic_store(result, (unint64_t *)&qword_1EF639D70);
  }
  return result;
}

ValueMetadata *type metadata accessor for GDTimeZone()
{
  return &type metadata for GDTimeZone;
}

uint64_t storeEnumTagSinglePayload for GDTimeZone.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C0A633CC + 4 * byte_1C1099505[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C0A63400 + 4 * asc_1C1099500[v4]))();
}

uint64_t sub_1C0A63400(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0A63408(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0A63410);
  return result;
}

uint64_t sub_1C0A6341C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0A63424);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C0A63428(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0A63430(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GDTimeZone.CodingKeys()
{
  return &type metadata for GDTimeZone.CodingKeys;
}

unint64_t sub_1C0A63450()
{
  unint64_t result;

  result = qword_1EF639D78;
  if (!qword_1EF639D78)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1099650, &type metadata for GDTimeZone.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF639D78);
  }
  return result;
}

unint64_t sub_1C0A63490()
{
  unint64_t result;

  result = qword_1EF639D80;
  if (!qword_1EF639D80)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10995C0, &type metadata for GDTimeZone.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF639D80);
  }
  return result;
}

unint64_t sub_1C0A634D0()
{
  unint64_t result;

  result = qword_1EF639D88;
  if (!qword_1EF639D88)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10995E8, &type metadata for GDTimeZone.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF639D88);
  }
  return result;
}

uint64_t sub_1C0A6350C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  if (*(_QWORD *)(a1 + 16))
  {
    sub_1C07ACF80(&qword_1EF639780);
    v3 = sub_1C10709E4();
  }
  else
  {
    v3 = MEMORY[0x1E0DEE9E0];
  }
  v6 = v3;
  sub_1C0A643AC(a1, 1, &v6);
  v4 = v6;
  if (v1)
    swift_release();
  return v4;
}

uint64_t sub_1C0A63598(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  return sub_1C078C868();
}

uint64_t sub_1C0A635A8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[3];
  v2 = swift_task_alloc();
  v0[4] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[5] = v3;
  sub_1C07ACF80(&qword_1EF639DB8);
  *v3 = v0;
  v3[1] = sub_1C0A63658;
  return sub_1C1070D14();
}

uint64_t sub_1C0A63658()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1C0A636C4()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1C0A636CC()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;

  swift_task_dealloc();
  if (qword_1ED762B18 != -1)
    swift_once();
  v1 = sub_1C077585C();
  v2 = sub_1C079E000(v1, (uint64_t)qword_1ED762AF8);
  sub_1C106F538();
  v3 = sub_1C0784E0C();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)sub_1C0775854();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1C0771000, v2, v3, "geoMapItems is not an array of GEOMapItem", v4, 2u);
    sub_1C0776778();
  }

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

void sub_1C0A637AC(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  char *v7;
  void (*v8)(char *, uint64_t, uint64_t, double);
  unint64_t v9;
  uint64_t v10;
  void (*v11)(unint64_t, char *, uint64_t);
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  uint64_t aBlock;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;

  v17 = a2;
  v3 = sub_1C07ACF80(&qword_1EF639DC0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16);
  v8(v7, a1, v3, v6);
  v9 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v10 = swift_allocObject();
  v11 = *(void (**)(unint64_t, char *, uint64_t))(v4 + 32);
  v11(v10 + v9, v7, v3);
  v22 = sub_1C0A645E8;
  v23 = v10;
  v12 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v19 = 1107296256;
  v20 = sub_1C0A63C40;
  v21 = &unk_1E7A1C228;
  v13 = _Block_copy(&aBlock);
  swift_release();
  ((void (*)(char *, uint64_t, uint64_t))v8)(v7, a1, v3);
  v14 = swift_allocObject();
  v11(v14 + v9, v7, v3);
  v22 = sub_1C0A64630;
  v23 = v14;
  aBlock = v12;
  v19 = 1107296256;
  v20 = sub_1C0A63DBC;
  v21 = &unk_1E7A1C278;
  v15 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(v17, sel_submitWithHandler_networkActivity_, v13, v15);
  _Block_release(v15);
  _Block_release(v13);
}

void sub_1C0A63974(uint64_t a1, id a2)
{
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;

  if (a2)
  {
    v3 = a2;
    v4 = a2;
    sub_1C07ACF80(&qword_1EF639DC0);
    sub_1C1070054();
    if (qword_1ED762B18 != -1)
      swift_once();
    v5 = sub_1C106F544();
    sub_1C079E000(v5, (uint64_t)qword_1ED762AF8);
    v6 = a2;
    v7 = a2;
    v8 = sub_1C106F538();
    v9 = sub_1C1070390();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v10 = 138412290;
      v12 = a2;
      v17 = _swift_stdlib_bridgeErrorToNSError();
      sub_1C10705AC();
      *v11 = v17;

      _os_log_impl(&dword_1C0771000, v8, v9, "Encountered an error when fetching geoMapItems %@", v10, 0xCu);
      sub_1C07ACF80(&qword_1ED7614A0);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v11, -1, -1);
      MEMORY[0x1C3BA8270](v10, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    if (a1)
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    }
    else
    {
      if (qword_1ED762B18 != -1)
        swift_once();
      v13 = sub_1C106F544();
      sub_1C079E000(v13, (uint64_t)qword_1ED762AF8);
      v14 = sub_1C106F538();
      v15 = sub_1C10703A8();
      if (os_log_type_enabled(v14, v15))
      {
        v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_1C0771000, v14, v15, "geoMapItems is not an array of GEOMapItem", v16, 2u);
        MEMORY[0x1C3BA8270](v16, -1, -1);
      }

    }
    sub_1C07ACF80(&qword_1EF639DC0);
    sub_1C1070060();
  }
}

uint64_t sub_1C0A63C40(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, void *);
  id v6;

  v4 = a2;
  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1C07ACF80(&qword_1EF639DC8);
    v4 = sub_1C106FF04();
  }
  swift_retain();
  v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0A63CC0(char a1)
{
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;

  if ((a1 & 1) == 0)
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v1 = sub_1C106F544();
    sub_1C079E000(v1, (uint64_t)qword_1ED762AF8);
    v2 = sub_1C106F538();
    v3 = sub_1C10703A8();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_1C0771000, v2, v3, "No network activity when retrieving GEOMapItem", v4, 2u);
      MEMORY[0x1C3BA8270](v4, -1, -1);
    }

  }
  sub_1C07ACF80(&qword_1EF639DC0);
  return sub_1C1070060();
}

uint64_t sub_1C0A63DBC(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t sub_1C0A63DF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v1;
  return sub_1C078C868();
}

uint64_t sub_1C0A63E08()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  _QWORD *v5;

  v1 = *(void **)(v0 + 32);
  v2 = sub_1C0A56304(*(_QWORD *)(v0 + 24));
  v3 = objc_msgSend(v1, sel_defaultTraits);
  v4 = sub_1C0A64568(v2, (uint64_t)v3, v1);
  *(_QWORD *)(v0 + 40) = v4;

  if (!v4)
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v5;
  *v5 = v0;
  v5[1] = sub_1C0A63EBC;
  return sub_1C0A63598((uint64_t)v4);
}

uint64_t sub_1C0A63EBC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1C0A63F18()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  NSObject *v9;
  id v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  unint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;

  v1 = *(_QWORD *)(v0 + 56);
  if (!v1)
    goto LABEL_32;
  if (v1 >> 62)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v2 = sub_1C10709B4();
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  v29 = v1 >> 62;
  v30 = v0;
  if (v2)
  {
    if (v2 < 1)
    {
      __break(1u);
LABEL_35:
      swift_once();
      goto LABEL_29;
    }
    v3 = 0;
    v31 = (_QWORD *)(v0 + 16);
    v33 = *(_QWORD *)(v0 + 56) & 0xC000000000000001;
    v4 = MEMORY[0x1E0DEE9D8];
    v32 = v2;
    do
    {
      if (v33)
      {
        v5 = (void *)MEMORY[0x1C3BA70DC](v3, v1);
      }
      else
      {
        v5 = *(void **)(v1 + 8 * v3 + 32);
        swift_unknownObjectRetain();
      }
      v6 = objc_msgSend(v5, sel__poiCategory);
      if (v6)
      {
        v7 = v6;
        if (qword_1ED762B18 != -1)
          swift_once();
        v8 = sub_1C077585C();
        v9 = sub_1C079E000(v8, (uint64_t)qword_1ED762AF8);
        v10 = v7;
        sub_1C106F538();
        v11 = sub_1C0784E0C();
        if (os_log_type_enabled(v9, v11))
        {
          v12 = sub_1C0775854();
          v34 = sub_1C0775854();
          *(_DWORD *)v12 = 136315138;
          v13 = sub_1C106FB14();
          *(_QWORD *)(v12 + 4) = sub_1C0788DAC(v13, v14, &v34);
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_1C0771000, v9, v11, "Merchant POI = %s", (uint8_t *)v12, 0xCu);
          swift_arrayDestroy();
          sub_1C0776778();
        }

        *v31 = objc_msgSend(v5, sel__muid);
        v15 = sub_1C1070C0C();
        v17 = v16;
        swift_unknownObjectRelease();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C07A3A7C();
          v4 = v20;
        }
        v18 = *(_QWORD *)(v4 + 16);
        if (v18 >= *(_QWORD *)(v4 + 24) >> 1)
        {
          sub_1C07A3A7C();
          v4 = v21;
        }
        *(_QWORD *)(v4 + 16) = v18 + 1;
        v19 = (_QWORD *)(v4 + 24 * v18);
        v19[4] = v15;
        v19[5] = v17;
        v19[6] = v10;
        v2 = v32;
      }
      else
      {
        swift_unknownObjectRelease();
      }
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    v4 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  v1 = sub_1C0A6350C(v4);
  v22 = *(_QWORD *)(v1 + 16);
  v0 = v30;
  if (v29)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v23 = sub_1C10709B4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v23 = *(_QWORD *)((*(_QWORD *)(v30 + 56) & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v22 >= v23)
    goto LABEL_32;
  if (qword_1ED762B18 != -1)
    goto LABEL_35;
LABEL_29:
  v24 = sub_1C077585C();
  v25 = sub_1C079E000(v24, (uint64_t)qword_1ED762AF8);
  sub_1C106F538();
  v26 = sub_1C0784E0C();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)sub_1C0775854();
    *(_WORD *)v27 = 0;
    _os_log_impl(&dword_1C0771000, v25, v26, "GEOMapService.poisForMUIDs: detected duplicate muid to poi category mapping.", v27, 2u);
    sub_1C0776778();
  }

LABEL_32:
  swift_unknownObjectRelease();
  return (*(uint64_t (**)(unint64_t))(v0 + 8))(v1);
}

uint64_t sub_1C0A64328(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C0A64664;
  return sub_1C0A63DF8(a1);
}

uint64_t sub_1C0A64378(uint64_t a1)
{
  uint64_t v1;

  sub_1C077B5FC();
  return (*(uint64_t (**)(uint64_t))(v1 + 8))(a1);
}

uint64_t sub_1C0A643AC(uint64_t a1, char a2, _QWORD *a3)
{
  _QWORD *v3;
  uint64_t v5;
  void **i;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD *v11;
  id v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  char v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  _BYTE v38[5];

  v37 = a3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
    return swift_bridgeObjectRelease();
  v35 = v3;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v34 = a1;
  for (i = (void **)(a1 + 48); ; i += 3)
  {
    v9 = (uint64_t)*(i - 2);
    v8 = (uint64_t)*(i - 1);
    v10 = *i;
    v11 = (_QWORD *)*v37;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v12 = v10;
    v20 = sub_1C077D774(v9, v8);
    v21 = v11[2];
    v22 = (v13 & 1) == 0;
    v23 = v21 + v22;
    if (__OFADD__(v21, v22))
      break;
    v24 = v13;
    if (v11[3] >= v23)
    {
      if ((a2 & 1) == 0)
      {
        sub_1C07ACF80(&qword_1EF639DB0);
        sub_1C1070918();
      }
    }
    else
    {
      sub_1C0A4B078(v23, a2 & 1, v14, v15, v16, v17, v18, v19, v34, v35, v36, (uint64_t)v37, *(int *)v38, v38[4]);
      v25 = sub_1C077D774(v9, v8);
      if ((v24 & 1) != (v26 & 1))
        goto LABEL_18;
      v20 = v25;
    }
    v27 = (_QWORD *)*v37;
    if ((v24 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v28 = v27[7];

      *(_QWORD *)(v28 + 8 * v20) = v12;
    }
    else
    {
      v27[(v20 >> 6) + 8] |= 1 << v20;
      v29 = (uint64_t *)(v27[6] + 16 * v20);
      *v29 = v9;
      v29[1] = v8;
      *(_QWORD *)(v27[7] + 8 * v20) = v12;
      v30 = v27[2];
      v31 = __OFADD__(v30, 1);
      v32 = v30 + 1;
      if (v31)
        goto LABEL_17;
      v27[2] = v32;
    }
    a2 = 1;
    if (!--v5)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_17:
  __break(1u);
LABEL_18:
  result = sub_1C1070D44();
  __break(1u);
  return result;
}

id sub_1C0A64568(uint64_t a1, uint64_t a2, void *a3)
{
  void *v5;
  id v6;

  v5 = (void *)sub_1C106FEEC();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(a3, sel_ticketForMUIDs_traits_, v5, a2);

  return v6;
}

void sub_1C0A645DC(uint64_t a1)
{
  uint64_t v1;

  sub_1C0A637AC(a1, *(void **)(v1 + 16));
}

void sub_1C0A645E8(uint64_t a1, void *a2)
{
  sub_1C07ACF80(&qword_1EF639DC0);
  sub_1C079A730();
  sub_1C0A63974(a1, a2);
}

uint64_t sub_1C0A64630(char a1)
{
  sub_1C07ACF80(&qword_1EF639DC0);
  sub_1C079A730();
  return sub_1C0A63CC0(a1);
}

uint64_t sub_1C0A64670(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  unint64_t v6;
  uint64_t result;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  int64_t v21;
  _QWORD v22[5];
  void (*v23)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v23 = a2;
  v3 = v2;
  sub_1C0861BD0(v22);
  v4 = v22[0];
  v5 = v22[3];
  v6 = v22[4];
  v20 = v22[1];
  v21 = (unint64_t)(v22[2] + 64) >> 6;
  result = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  if (!v6)
    goto LABEL_3;
LABEL_2:
  v8 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  v9 = v8 | (v5 << 6);
  while (1)
  {
    v13 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 32 * v9);
    v14 = *v13;
    v15 = v13[1];
    v17 = v13[2];
    v16 = v13[3];
    v18 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v9);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v23(v14, v15, v17, v16, v18);
    if (v3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if (v6)
      goto LABEL_2;
LABEL_3:
    v10 = v5 + 1;
    if (__OFADD__(v5, 1))
      break;
    if (v10 >= v21)
      return swift_release();
    v11 = *(_QWORD *)(v20 + 8 * v10);
    if (!v11)
    {
      v12 = v5 + 2;
      if (v5 + 2 >= v21)
        return swift_release();
      v11 = *(_QWORD *)(v20 + 8 * v12);
      if (v11)
        goto LABEL_12;
      v12 = v5 + 3;
      if (v5 + 3 >= v21)
        return swift_release();
      v11 = *(_QWORD *)(v20 + 8 * v12);
      if (v11)
        goto LABEL_12;
      v12 = v5 + 4;
      if (v5 + 4 >= v21)
        return swift_release();
      v11 = *(_QWORD *)(v20 + 8 * v12);
      if (v11)
      {
LABEL_12:
        v10 = v12;
      }
      else
      {
        v10 = v5 + 5;
        if (v5 + 5 >= v21)
          return swift_release();
        v11 = *(_QWORD *)(v20 + 8 * v10);
        if (!v11)
        {
          v19 = v5 + 6;
          while (v19 < v21)
          {
            v11 = *(_QWORD *)(v20 + 8 * v19++);
            if (v11)
            {
              v10 = v19 - 1;
              goto LABEL_13;
            }
          }
          return swift_release();
        }
      }
    }
LABEL_13:
    v6 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v10 << 6);
    v5 = v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0A6487C(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t), uint64_t a3, void (*a4)(_QWORD *__return_ptr))
{
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t result;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[5];

  a4(v21);
  v5 = v21[0];
  v6 = v21[1];
  v7 = v21[3];
  v8 = v21[4];
  v9 = (unint64_t)(v21[2] + 64) >> 6;
  result = sub_1C0778624();
  if (!v8)
    goto LABEL_3;
LABEL_2:
  v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  v12 = v11 | (v7 << 6);
  while (1)
  {
    v17 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v12);
    v18 = *v17;
    v19 = v17[1];
    v20 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v12);
    sub_1C0778624();
    sub_1C077C0B8();
    a2(v18, v19, v20);
    sub_1C077589C();
    result = swift_bridgeObjectRelease();
    if (v8)
      goto LABEL_2;
LABEL_3:
    v13 = v7 + 1;
    if (__OFADD__(v7, 1))
      break;
    if (v13 >= v9)
      return swift_release();
    v14 = *(_QWORD *)(v6 + 8 * v13);
    v15 = v7 + 1;
    if (!v14)
    {
      v15 = v7 + 2;
      if (v7 + 2 >= v9)
        return swift_release();
      v14 = *(_QWORD *)(v6 + 8 * v15);
      if (!v14)
      {
        v15 = v7 + 3;
        if (v7 + 3 >= v9)
          return swift_release();
        v14 = *(_QWORD *)(v6 + 8 * v15);
        if (!v14)
        {
          v15 = v7 + 4;
          if (v7 + 4 >= v9)
            return swift_release();
          v14 = *(_QWORD *)(v6 + 8 * v15);
          if (!v14)
          {
            v15 = v7 + 5;
            if (v7 + 5 >= v9)
              return swift_release();
            v14 = *(_QWORD *)(v6 + 8 * v15);
            if (!v14)
            {
              v16 = v7 + 6;
              while (v16 < v9)
              {
                v14 = *(_QWORD *)(v6 + 8 * v16++);
                if (v14)
                {
                  v15 = v16 - 1;
                  goto LABEL_18;
                }
              }
              return swift_release();
            }
          }
        }
      }
    }
LABEL_18:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v7 = v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0A649EC(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x737465737361 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1C1070CB4();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1C0A64A68()
{
  return 0x737465737361;
}

uint64_t sub_1C0A64A7C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  sub_1C07ACF80(&qword_1EF639E08);
  sub_1C0778688();
  MEMORY[0x1E0C80A78](v4);
  sub_1C07785B8();
  sub_1C07A9480(a1, a1[3]);
  sub_1C0A6C1B8();
  sub_1C1070EB8();
  sub_1C07ACF80(&qword_1ED74D2A8);
  sub_1C0A6C1F4(&qword_1EF639E10, &qword_1EF639E18, (uint64_t)&unk_1C10B9440, MEMORY[0x1E0DEAF10]);
  sub_1C1070BB8();
  return sub_1C0781D30(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
}

_QWORD *sub_1C0A64B84(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v10;

  sub_1C07ACF80(&qword_1ED741A20);
  sub_1C0778688();
  MEMORY[0x1E0C80A78](v4);
  sub_1C0778564();
  v7 = v6 - v5;
  v8 = sub_1C07A9480(a1, a1[3]);
  sub_1C0A6C1B8();
  sub_1C1070E94();
  if (v1)
  {
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_1C07ACF80(&qword_1ED74D2A8);
    sub_1C0A6C1F4(&qword_1ED74D2B0, &qword_1ED74D168, (uint64_t)&unk_1C10B9468, MEMORY[0x1E0DEAF40]);
    sub_1C1070AE0();
    sub_1C0781D30(v7, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    v8 = v10;
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)a1);
  }
  return v8;
}

void sub_1C0A64CBC()
{
  sub_1C0A67708();
}

uint64_t sub_1C0A64CD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0A649EC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1C0A64CFC()
{
  sub_1C0A6C1B8();
  return sub_1C1070EE8();
}

uint64_t sub_1C0A64D24()
{
  sub_1C0A6C1B8();
  return sub_1C1070EF4();
}

_QWORD *sub_1C0A64D4C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1C0A64B84(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1C0A64D74(_QWORD *a1)
{
  return sub_1C0A64A7C(a1);
}

void sub_1C0A64D8C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t (**v41)(uint64_t, uint64_t);
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  void (*v83)(uint64_t, uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  NSObject *v93;
  os_log_type_t v94;
  uint8_t *v95;
  _QWORD *v96;
  NSObject *v97;
  uint64_t v98;
  void (*v99)(char *, uint64_t);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(char *, uint64_t);
  _QWORD v104[4];
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  __int128 v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;

  v122 = *v0;
  v116 = sub_1C077585C();
  v117 = *(_QWORD *)(v116 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v4);
  sub_1C077AED0();
  v121 = v5;
  MEMORY[0x1E0C80A78](v6);
  sub_1C0784DAC((uint64_t)v104 - v7);
  sub_1C07ACF80((uint64_t *)&unk_1ED761470);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v8);
  sub_1C077AE40();
  v112 = v9;
  v10 = sub_1C077CF58();
  v11 = type metadata accessor for StaticKnowledgeAssetMetadataInManifest(v10);
  v128 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  sub_1C0784DAC((uint64_t)v104 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = MEMORY[0x1E0C80A78](v13);
  v120 = (char *)v104 - v15;
  v127 = v16;
  MEMORY[0x1E0C80A78](v14);
  v126 = (uint64_t)v104 - v17;
  sub_1C077CF58();
  v113 = sub_1C106AB28();
  v114 = *(_QWORD *)(v113 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v18);
  v119 = (char *)v104 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07ACF80(&qword_1ED755A50);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v20);
  sub_1C077AE40();
  v129 = v21;
  sub_1C077CF58();
  v22 = sub_1C106CCC4();
  v124 = *(_QWORD *)(v22 - 8);
  v125 = v22;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v23);
  sub_1C077AE40();
  v118 = v24;
  sub_1C077CF58();
  v25 = sub_1C106E6C8();
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  sub_1C07785B8();
  v27 = sub_1C106D9E4();
  sub_1C0778688();
  MEMORY[0x1E0C80A78](v28);
  sub_1C0778564();
  v31 = v30 - v29;
  v32 = sub_1C106EBCC();
  v33 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  sub_1C077962C();
  v132 = os_transaction_create();
  v130 = sub_1C106DA44();
  sub_1C106EB84();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v33 + 104))(v2, *MEMORY[0x1E0D3D4D0], v32);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v26 + 104))(v1, *MEMORY[0x1E0D3CF90], v25);
  sub_1C106D9D8();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v31, *MEMORY[0x1E0D3C480], v27);
  v34 = v131;
  v35 = sub_1C106D9F0();
  if (v34)
  {
    sub_1C07A5E1C();
    goto LABEL_10;
  }
  v36 = v35;
  v37 = v127;
  v38 = v128;
  sub_1C0794624();
  sub_1C106D9CC();
  v39 = sub_1C106CCD0();
  sub_1C077AEEC(v129, 1, v39);
  if (v40)
  {
    sub_1C0784B6C(v129, &qword_1ED755A50);
LABEL_9:
    v137 = 0;
    v138 = 0xE000000000000000;
    sub_1C1070774();
    sub_1C106FC94();
    sub_1C0794624();
    sub_1C106FC94();
    sub_1C106FC94();
    sub_1C106FC94();
    sub_1C106FC94();
    v45 = v137;
    v46 = v138;
    sub_1C0A6BBBC();
    sub_1C0775810();
    *(_QWORD *)v47 = v45;
    *(_QWORD *)(v47 + 8) = v46;
    *(_BYTE *)(v47 + 16) = 0;
    sub_1C077F130();
    swift_unknownObjectRelease();
    swift_release();
    goto LABEL_10;
  }
  v41 = *(uint64_t (***)(uint64_t, uint64_t))(v39 - 8);
  v42 = v41[11](v129, v39);
  if (v42 != *MEMORY[0x1E0D3B678])
  {
    sub_1C078303C(v129, v41[1]);
    goto LABEL_9;
  }
  v110 = v36;
  v43 = v129;
  sub_1C078303C(v129, v41[12]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v124 + 32))(v118, v43, v125);
  v44 = sub_1C106CC88();
  MEMORY[0x1C3BA79F4](v44);
  v48 = sub_1C106AB58();
  v50 = v49;
  sub_1C106A978();
  sub_1C077B5BC();
  sub_1C106A96C();
  sub_1C0A6BBF8();
  sub_1C106A960();
  sub_1C07B3374(v48, v50);
  sub_1C07785A8();
  v51 = v137;
  sub_1C0783110();
  v52 = *(_QWORD *)(v51 + 16);
  if (!v52)
  {
    v91 = v119;
    v84 = v124;
    v90 = v113;
LABEL_34:
    sub_1C07A5E1C();
    sub_1C07A1D84();
    sub_1C078303C(v118, *(uint64_t (**)(uint64_t, uint64_t))(v84 + 8));
    sub_1C077B5A8();
    v99(v91, v90);
    sub_1C077B5B4();
    goto LABEL_10;
  }
  v131 = 0;
  v53 = *(_QWORD *)(v123 + OBJC_IVAR____TtC24IntelligencePlatformCore23GlobalKnowledgeDatabase_pool);
  v54 = *(unsigned __int8 *)(v38 + 80);
  v55 = (v54 + 32) & ~v54;
  v56 = v51 + v55;
  v128 = *(_QWORD *)(v38 + 72);
  v129 = v53;
  v106 = v54 | 7;
  v107 = v55;
  v105 = ((unint64_t)v37 + v55 + 7) & 0xFFFFFFFFFFFFFFF8;
  v104[3] = v105 + 16;
  v104[1] = v51;
  sub_1C077AEBC();
  v57 = 0;
  v104[2] = MEMORY[0x1E0DEE9C0] + 8;
  *(_QWORD *)&v58 = 136315394;
  v109 = v58;
  v108 = MEMORY[0x1E0DEE9B8] + 8;
  v59 = v110;
  v60 = (uint64_t)v120;
  do
  {
    v130 = v56;
    v61 = v56;
    v62 = v126;
    sub_1C077B048(v61, v126);
    v137 = 0;
    v138 = 0;
    MEMORY[0x1E0C80A78](v63);
    v104[-6] = v59;
    v104[-5] = v62;
    v104[-4] = &v137;
    v64 = v122;
    v104[-3] = v123;
    v104[-2] = v64;
    v65 = v131;
    sub_1C077FFE4();
    if (v65)
    {
      sub_1C077C244();
      v67 = v121;
      sub_1C106F154();
      v68 = v115;
      sub_1C078CA7C(v62, v115);
      sub_1C078DF38();
      sub_1C078DF38();
      v69 = sub_1C106F538();
      v70 = sub_1C1070390();
      if (os_log_type_enabled(v69, v70))
      {
        v71 = sub_1C0775854();
        v127 = (_QWORD *)sub_1C0775854();
        v131 = sub_1C0775854();
        v139 = v131;
        *(_DWORD *)v71 = v109;
        sub_1C07767B4();
        v72 = sub_1C078109C();
        *(_QWORD *)(v71 + 4) = sub_1C0788DAC(v72, v73, v74);
        sub_1C07767AC();
        sub_1C079E4C8(v68);
        *(_WORD *)(v71 + 12) = 2112;
        sub_1C078DF38();
        v75 = _swift_stdlib_bridgeErrorToNSError();
        *(_QWORD *)(v71 + 14) = v75;
        *v127 = v75;
        sub_1C078D530();
        sub_1C078D530();
        sub_1C077E89C(&dword_1C0771000, v69, v70, "GlobalKnowledgeDatabase: checkAndLoadAssets: %s failed to load: %@", (uint8_t *)v71);
        sub_1C07ACF80(&qword_1ED7614A0);
        sub_1C0778610();
        sub_1C0776778();
      }
      sub_1C07888BC();
      sub_1C079E4C8(v68);
      sub_1C078D530();
      sub_1C078D530();

      sub_1C077B5A8();
      v83(v67, v116);
      v84 = v124;
      v59 = v110;
      v60 = (uint64_t)v120;
      v85 = v130;
      sub_1C079E4C8(v126);
      v57 = v65;
      v131 = 0;
    }
    else
    {
      v131 = 0;
      if ((v66 & 1) != 0)
      {
        v76 = v138;
        if (v138)
        {
          v77 = v137;
          sub_1C077AE90();
          v78 = v112;
          sub_1C107009C();
          v79 = sub_1C10700C0();
          sub_1C07B2D8C(v78, 0, 1, v79);
          sub_1C077B048(v126, v60);
          v80 = swift_allocObject();
          *(_QWORD *)(v80 + 16) = 0;
          v81 = v80 + v107;
          *(_QWORD *)(v80 + 24) = 0;
          sub_1C07E05F4(v60, v81, type metadata accessor for StaticKnowledgeAssetMetadataInManifest);
          v82 = (uint64_t *)(v80 + v105);
          *v82 = v77;
          v82[1] = v76;
          sub_1C077AEEC(v78, 1, v79);
          if (v40)
          {
            sub_1C0784B6C(v78, (uint64_t *)&unk_1ED761470);
          }
          else
          {
            sub_1C10700B4();
            sub_1C078303C(v78, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 8));
          }
          if (*(_QWORD *)(v80 + 16))
          {
            swift_getObjectType();
            swift_unknownObjectRetain();
            sub_1C078109C();
            v86 = sub_1C1070048();
            v88 = v87;
            swift_unknownObjectRelease();
          }
          else
          {
            v86 = 0;
            v88 = 0;
          }
          v60 = (uint64_t)v120;
          v89 = swift_allocObject();
          *(_QWORD *)(v89 + 16) = &unk_1EF639DD8;
          *(_QWORD *)(v89 + 24) = v80;
          if (v88 | v86)
          {
            v133 = 0;
            v134 = 0;
            v135 = v86;
            v136 = v88;
          }
          swift_task_create();
          swift_release();
          v59 = v110;
        }
      }
      sub_1C07B1F90(v126, type metadata accessor for StaticKnowledgeAssetMetadataInManifest);
      sub_1C077C244();
      v84 = v124;
      v85 = v130;
    }
    v56 = v85 + v128;
    --v52;
  }
  while (v52);
  sub_1C077B5B4();
  v90 = v113;
  v91 = v119;
  if (!v57)
    goto LABEL_34;
  sub_1C077B72C();
  v92 = v111;
  sub_1C106F154();
  sub_1C077B72C();
  sub_1C077B72C();
  v93 = sub_1C106F538();
  v94 = sub_1C1070390();
  if (os_log_type_enabled(v93, v94))
  {
    v95 = (uint8_t *)sub_1C0775854();
    v96 = (_QWORD *)sub_1C0775854();
    *(_DWORD *)v95 = 138412290;
    sub_1C077B72C();
    v97 = v93;
    v98 = _swift_stdlib_bridgeErrorToNSError();
    v137 = v98;
    sub_1C10705AC();
    *v96 = v98;
    sub_1C07888BC();
    sub_1C07888BC();
    sub_1C07796F0(&dword_1C0771000, v97, v94, "GlobalKnowledgeDatabase: checkAndLoadAssets: asset load complete but at least one asset failed: %@", v95);
    sub_1C07ACF80(&qword_1ED7614A0);
    sub_1C0778610();
    sub_1C0776778();
  }
  sub_1C07888BC();
  sub_1C07888BC();
  v100 = v117;
  v101 = v118;
  v102 = v116;

  (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v92, v102);
  swift_willThrow();
  sub_1C07A5E1C();
  sub_1C07A1D84();
  sub_1C07888BC();
  (*(void (**)(uint64_t, uint64_t))(v124 + 8))(v101, v125);
  sub_1C077B5A8();
  v103(v119, v90);
  sub_1C078F230();
LABEL_10:
  sub_1C07757D0();
}

uint64_t sub_1C0A659B4@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _BYTE *a7@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;

  v63 = a5;
  v64 = a6;
  v61 = a4;
  v62 = a1;
  v66 = a2;
  v55 = a7;
  v8 = sub_1C07ACF80(&qword_1ED7625F8);
  MEMORY[0x1E0C80A78](v8);
  v65 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = type metadata accessor for StaticKnowledgeAssetMetadataInManifest(0);
  MEMORY[0x1E0C80A78](v56);
  v59 = (uint64_t)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for StaticKnowledgeAssetMetadata(0);
  v11 = MEMORY[0x1E0C80A78](v57);
  v58 = (uint64_t *)((char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v11);
  v60 = (uint64_t)&v51 - v13;
  v14 = sub_1C106AB28();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1C07ACF80(&qword_1ED755A50);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1C106CCC4();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v51 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = v69;
  result = sub_1C106D9CC();
  if (!v25)
  {
    v66 = v24;
    v69 = v22;
    v53 = v14;
    v54 = 0;
    v27 = a3;
    v28 = (uint64_t)v65;
    v52 = v15;
    v29 = sub_1C106CCD0();
    if (sub_1C07B2D80((uint64_t)v20, 1, v29) == 1)
    {
      sub_1C0784B6C((uint64_t)v20, &qword_1ED755A50);
LABEL_8:
      v67 = 0;
      v68 = 0xE000000000000000;
      sub_1C1070774();
      sub_1C106FC94();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C106FC94();
      swift_bridgeObjectRelease();
      v37 = v67;
      v38 = v68;
      sub_1C0A6BBBC();
      swift_allocError();
      *(_QWORD *)v39 = v37;
      *(_QWORD *)(v39 + 8) = v38;
      *(_BYTE *)(v39 + 16) = 0;
      return swift_willThrow();
    }
    v30 = *(_QWORD *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t))(v30 + 88))(v20, v29) != *MEMORY[0x1E0D3B678])
    {
      (*(void (**)(char *, uint64_t))(v30 + 8))(v20, v29);
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v30 + 96))(v20, v29);
    v31 = v69;
    v32 = v21;
    v33 = (uint64_t)v66;
    (*(void (**)(void))(v69 + 32))();
    v34 = (uint64_t)v17;
    sub_1C106CC88();
    v35 = v54;
    v36 = sub_1C0A65EC8(v33);
    if (v35)
    {
      (*(void (**)(char *, uint64_t))(v52 + 8))(v17, v53);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 8))(v33, v32);
    }
    else
    {
      v40 = v36;
      v41 = v27;
      v42 = v59;
      sub_1C07E05C8(v41, v59, type metadata accessor for StaticKnowledgeAssetMetadataInManifest);
      v43 = (uint64_t)v58;
      *v58 = 0;
      *(_BYTE *)(v43 + 8) = 1;
      v44 = *(_QWORD *)(v42 + 8);
      *(_QWORD *)(v43 + 16) = *(_QWORD *)v42;
      *(_QWORD *)(v43 + 24) = v44;
      *(_BYTE *)(v43 + 40) = *(_BYTE *)(v42 + 16);
      sub_1C078A8F8(v42 + *(int *)(v56 + 24), v28, &qword_1ED7625F8);
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C07B1F90(v42, type metadata accessor for StaticKnowledgeAssetMetadataInManifest);
      sub_1C078A67C(v28, v43 + *(int *)(v57 + 32), &qword_1ED7625F8);
      *(_QWORD *)(v43 + 32) = v40;
      v45 = v60;
      sub_1C07E05F4(v43, v60, type metadata accessor for StaticKnowledgeAssetMetadata);
      v46 = *(_QWORD *)(v45 + 24);
      v47 = v61;
      *v61 = *(_QWORD *)(v45 + 16);
      v47[1] = v46;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      swift_bridgeObjectRelease();
      v48 = sub_1C0A66428(v62, v34, v45);
      v50 = v52;
      v49 = v53;
      LOBYTE(v43) = v48;
      sub_1C07B1F90(v45, type metadata accessor for StaticKnowledgeAssetMetadata);
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v34, v49);
      result = (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v66, v32);
      *v55 = v43 & 1;
    }
  }
  return result;
}

uint64_t sub_1C0A65EC8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 *v21;
  char v22;
  uint64_t v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned __int8 *v26;
  unsigned int v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  unsigned __int8 *v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int8 *v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD v51[2];

  v2 = sub_1C106CCA0();
  v48 = *(_QWORD *)(v2 - 8);
  v49 = v2;
  MEMORY[0x1E0C80A78](v2);
  v47 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1C106CCAC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C106CD00();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = a1;
  sub_1C106CC7C();
  v12 = sub_1C106CCF4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (!v12)
    goto LABEL_62;
  sub_1C089A994(0x6E6F6973726576, 0xE700000000000000, v12);
  v14 = v13;
  v16 = v15;
  result = swift_bridgeObjectRelease();
  if (!v16)
    goto LABEL_62;
  v18 = HIBYTE(v16) & 0xF;
  v19 = v14 & 0xFFFFFFFFFFFFLL;
  if ((v16 & 0x2000000000000000) != 0)
    v20 = HIBYTE(v16) & 0xF;
  else
    v20 = v14 & 0xFFFFFFFFFFFFLL;
  if (!v20)
  {
    swift_bridgeObjectRelease();
    goto LABEL_62;
  }
  if ((v16 & 0x1000000000000000) != 0)
  {
    v12 = sub_1C0C9D970(v14, v16, 10);
    v23 = v46;
    goto LABEL_36;
  }
  if ((v16 & 0x2000000000000000) == 0)
  {
    if ((v14 & 0x1000000000000000) != 0)
      v21 = (unsigned __int8 *)((v16 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v21 = (unsigned __int8 *)sub_1C10707F8();
    v12 = (uint64_t)sub_1C0C9D82C(v21, v19);
    v23 = v22 & 1;
LABEL_36:
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      sub_1C106CCB8();
      v29 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
      if (v29 == *MEMORY[0x1E0D3B658])
      {
        (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
        v23 = (uint64_t)v47;
        v9 = v48;
        v5 = v49;
        (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v47, v7, v49);
        v30 = sub_1C106CC94();
        sub_1C089A994(0x6E6F6973726576, 0xE700000000000000, v30);
        v32 = v31;
        v34 = v33;
        swift_bridgeObjectRelease();
        if (v34)
        {
          v35 = sub_1C0C99268(v32, v34);
          v37 = v36;
          (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v23, v5);
          if ((v37 & 1) == 0)
            return v35;
          return v12;
        }
      }
      else
      {
        if (v29 == *MEMORY[0x1E0D3B650])
          return v12;
        sub_1C1070954();
        __break(1u);
      }
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v23, v5);
      return v12;
    }
LABEL_62:
    sub_1C0A6BF90();
    swift_allocError();
    swift_willThrow();
    return v12;
  }
  v51[0] = v14;
  v51[1] = v16 & 0xFFFFFFFFFFFFFFLL;
  if (v14 == 43)
  {
    if (!v18)
      goto LABEL_67;
    if (v18 != 1 && (BYTE1(v14) - 48) <= 9u)
    {
      v12 = (BYTE1(v14) - 48);
      if (v18 == 2)
        goto LABEL_35;
      if ((BYTE2(v14) - 48) <= 9u)
      {
        v12 = 10 * (BYTE1(v14) - 48) + (BYTE2(v14) - 48);
        v25 = v18 - 3;
        if (v25)
        {
          v26 = (unsigned __int8 *)v51 + 3;
          while (1)
          {
            v27 = *v26 - 48;
            if (v27 > 9)
              goto LABEL_33;
            v28 = 10 * v12;
            if ((unsigned __int128)(v12 * (__int128)10) >> 64 != (10 * v12) >> 63)
              goto LABEL_33;
            v12 = v28 + v27;
            if (__OFADD__(v28, v27))
              goto LABEL_33;
            v23 = 0;
            ++v26;
            if (!--v25)
              goto LABEL_36;
          }
        }
        goto LABEL_35;
      }
    }
LABEL_33:
    v12 = 0;
    v23 = 1;
    goto LABEL_36;
  }
  if (v14 != 45)
  {
    if (v18 && (v14 - 48) <= 9u)
    {
      v12 = (v14 - 48);
      if (v18 == 1)
        goto LABEL_35;
      if ((BYTE1(v14) - 48) <= 9u)
      {
        v12 = 10 * (v14 - 48) + (BYTE1(v14) - 48);
        v38 = v18 - 2;
        if (v38)
        {
          v39 = (unsigned __int8 *)v51 + 2;
          while (1)
          {
            v40 = *v39 - 48;
            if (v40 > 9)
              goto LABEL_33;
            v41 = 10 * v12;
            if ((unsigned __int128)(v12 * (__int128)10) >> 64 != (10 * v12) >> 63)
              goto LABEL_33;
            v12 = v41 + v40;
            if (__OFADD__(v41, v40))
              goto LABEL_33;
            v23 = 0;
            ++v39;
            if (!--v38)
              goto LABEL_36;
          }
        }
        goto LABEL_35;
      }
    }
    goto LABEL_33;
  }
  if (v18)
  {
    if (v18 == 1)
      goto LABEL_33;
    v24 = BYTE1(v14) - 48;
    if ((BYTE1(v14) - 48) > 9u)
      goto LABEL_33;
    if (v18 == 2)
    {
      v23 = 0;
      v12 = -(uint64_t)v24;
      goto LABEL_36;
    }
    if ((BYTE2(v14) - 48) > 9u)
      goto LABEL_33;
    v12 = -10 * (BYTE1(v14) - 48) - (BYTE2(v14) - 48);
    v42 = v18 - 3;
    if (v42)
    {
      v43 = (unsigned __int8 *)v51 + 3;
      while (1)
      {
        v44 = *v43 - 48;
        if (v44 > 9)
          goto LABEL_33;
        v45 = 10 * v12;
        if ((unsigned __int128)(v12 * (__int128)10) >> 64 != (10 * v12) >> 63)
          goto LABEL_33;
        v12 = v45 - v44;
        if (__OFSUB__(v45, v44))
          goto LABEL_33;
        v23 = 0;
        ++v43;
        if (!--v42)
          goto LABEL_36;
      }
    }
LABEL_35:
    v23 = 0;
    goto LABEL_36;
  }
  __break(1u);
LABEL_67:
  __break(1u);
  return result;
}

uint64_t sub_1C0A66428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _DWORD *v3;
  _DWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  NSObject *v42;
  os_log_type_t v43;
  _BOOL4 v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  uint8_t *v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  os_log_type_t v81;
  NSObject *v82;
  os_log_type_t v83;
  _BOOL8 v84;
  uint8_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(uint64_t, uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  NSObject *v95;
  os_log_type_t v96;
  _DWORD *v97;
  uint64_t v98;
  os_log_type_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  __int128 v135;
  __int128 v136;
  uint64_t v137;
  uint64_t v138;
  char v139[8];
  ValueMetadata *v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;

  v4 = v3;
  v126 = a1;
  sub_1C07ACF80(&qword_1ED761500);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v7);
  sub_1C077AE40();
  sub_1C0784DAC(v8);
  v117 = sub_1C07ACF80(&qword_1ED759F08);
  v112 = *(_QWORD *)(v117 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v9);
  sub_1C077AE40();
  sub_1C0784DAC(v10);
  sub_1C07ACF80(&qword_1ED75E798);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v11);
  sub_1C077AE40();
  sub_1C0784DAC(v12);
  v13 = sub_1C07ACF80(&qword_1ED75E508);
  v124 = *(_QWORD *)(v13 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v14);
  sub_1C07757E8(v15, v110);
  sub_1C07ACF80(&qword_1ED7625F8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v16);
  v130 = (uint64_t)&v110 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C077CF58();
  v132 = sub_1C106F1CC();
  v128 = *(_QWORD *)(v132 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v18);
  sub_1C077AE40();
  v127 = v19;
  v20 = sub_1C077CF58();
  v147 = type metadata accessor for StaticKnowledgeAssetMetadata(v20);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v21);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v22);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v23);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v24);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v25);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v26);
  sub_1C0779728();
  sub_1C077AF60();
  v28 = MEMORY[0x1E0C80A78](v27);
  v30 = (char *)&v110 - v29;
  MEMORY[0x1E0C80A78](v28);
  v32 = (char *)&v110 - v31;
  v134 = sub_1C077585C();
  v129 = *(_QWORD *)(v134 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v33);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v34);
  sub_1C0779728();
  sub_1C077AF60();
  v36 = MEMORY[0x1E0C80A78](v35);
  v38 = (char *)&v110 - v37;
  MEMORY[0x1E0C80A78](v36);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v39);
  v41 = (char *)&v110 - v40;
  sub_1C106F154();
  sub_1C077B048(a3, (uint64_t)v32);
  v133 = a3;
  sub_1C077B048(a3, (uint64_t)v30);
  v42 = sub_1C106F538();
  v43 = sub_1C10703A8();
  v44 = os_log_type_enabled(v42, v43);
  v111 = a2;
  v119 = v38;
  if (v44)
  {
    sub_1C0775854();
    sub_1C07A8668();
    v110 = sub_1C0775854();
    v142 = v110;
    *v3 = 136315394;
    v118 = v13;
    v45 = *((_QWORD *)v32 + 2);
    v46 = *((_QWORD *)v32 + 3);
    sub_1C0778624();
    v138 = sub_1C0788DAC(v45, v46, &v142);
    sub_1C0795A54();
    swift_bridgeObjectRelease();
    sub_1C07B1F90((uint64_t)v32, type metadata accessor for StaticKnowledgeAssetMetadata);
    *((_WORD *)v4 + 6) = 2048;
    v47 = *((_QWORD *)v30 + 4);
    sub_1C07B1F90((uint64_t)v30, type metadata accessor for StaticKnowledgeAssetMetadata);
    v138 = v47;
    sub_1C0795A54();
    sub_1C077E89C(&dword_1C0771000, v42, v43, "GlobalKnowledgeDatabase: checkAndLoadAssets: checking %s (manifestAsset.version %ld)", (uint8_t *)v4);
    sub_1C0778610();
    sub_1C0776778();
  }
  sub_1C077B100((uint64_t)v30);
  sub_1C077B100((uint64_t)v32);

  v48 = *(void (**)(uint64_t, uint64_t))(v129 + 8);
  sub_1C0789F48((uint64_t)v41);
  v50 = v131;
  v49 = v132;
  v51 = v133;
  v52 = v130;
  sub_1C078A8F8(v133 + *(int *)(v147 + 32), v130, &qword_1ED7625F8);
  sub_1C077AEEC(v52, 1, v49);
  if (v53)
  {
    sub_1C0784B6C(v52, &qword_1ED7625F8);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v128 + 32))(v127, v52, v49);
    v54 = OBJC_IVAR____TtC24IntelligencePlatformCore23GlobalKnowledgeDatabase_config;
    v55 = (uint64_t *)(v123 + *(int *)(type metadata accessor for Configuration() + 20) + v54);
    v57 = *v55;
    v56 = v55[1];
    Features.FeatureFlag.asOption()();
    if ((v142 & ~v57) != 0 || (v143 & v56) != v143)
    {
      v71 = v122;
      sub_1C106F154();
      sub_1C078A404(v51, type metadata accessor for StaticKnowledgeAssetMetadata, (uint64_t)&v146);
      v72 = sub_1C106F538();
      v73 = sub_1C1070378();
      if (os_log_type_enabled(v72, v73))
      {
        v74 = (uint8_t *)sub_1C0775854();
        sub_1C0775854();
        sub_1C07A8668();
        v142 = v75;
        *(_DWORD *)v74 = 136315138;
        v76 = *(_QWORD *)(v51 + 16);
        v77 = *(_QWORD *)(v51 + 24);
        sub_1C07767C4();
        v138 = sub_1C0788DAC(v76, v77, &v142);
        sub_1C10705AC();
        v78 = sub_1C0775894();
        sub_1C07826E8(v78, type metadata accessor for StaticKnowledgeAssetMetadata);
        sub_1C07796F0(&dword_1C0771000, v72, v73, "GlobalKnowledgeDatabase: checkAndLoadAssets: skipping %s due to feature flag being disabled.", v74);
        sub_1C0778610();
        sub_1C0776778();
      }

      sub_1C07826E8(v87, type metadata accessor for StaticKnowledgeAssetMetadata);
      sub_1C0789F48(v71);
      v88 = sub_1C07BC7C0();
      goto LABEL_25;
    }
    v58 = sub_1C07BC7C0();
    v59(v58);
  }
  v140 = (ValueMetadata *)&unk_1E7A309B0;
  v141 = sub_1C0A6BDE8();
  LOBYTE(v138) = 1;
  v60 = *(_QWORD *)(v51 + 16);
  v61 = *(_QWORD *)(v51 + 24);
  *((_QWORD *)&v136 + 1) = MEMORY[0x1E0DEA968];
  v137 = MEMORY[0x1E0D24960];
  *(_QWORD *)&v135 = v60;
  *((_QWORD *)&v135 + 1) = v61;
  v62 = sub_1C106BCBC();
  v144 = v62;
  v145 = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(&v142);
  sub_1C077AE90();
  sub_1C106C310();
  sub_1C0784B6C((uint64_t)&v135, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)&v138);
  sub_1C0776A14(&qword_1ED7605D8);
  v63 = v147;
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)&v142);
  sub_1C07BB218(&qword_1ED760438, &qword_1ED75E508);
  sub_1C0776A14(&qword_1ED7605E0);
  v64 = v125;
  v65 = v126;
  sub_1C106BAC4();
  if (v3)
  {
    sub_1C078AFD8();
    return v70 & 1;
  }
  sub_1C077AEEC(v64, 1, v63);
  if (v53)
  {
    sub_1C0784B6C(v64, &qword_1ED75E798);
    sub_1C07ABCDC();
    v66 = sub_1C106F538();
    v67 = sub_1C10703A8();
    if (sub_1C077F60C(v67))
    {
      v68 = (uint8_t *)sub_1C0775854();
      *(_WORD *)v68 = 0;
      _os_log_impl(&dword_1C0771000, v66, (os_log_type_t)v64, "GlobalKnowledgeDatabase: checkAndLoadAssets: adding new asset", v68, 2u);
      sub_1C0776778();
    }

    sub_1C0789F48(v64);
    v69 = v120;
    sub_1C07E05C8(v133, v120, type metadata accessor for StaticKnowledgeAssetMetadata);
    sub_1C07803F8(&qword_1ED741540, (void (*)(uint64_t))type metadata accessor for StaticKnowledgeAssetMetadata);
    sub_1C106C2BC();
  }
  else
  {
    v79 = (uint64_t)v121;
    sub_1C07E05F4(v64, (uint64_t)v121, type metadata accessor for StaticKnowledgeAssetMetadata);
    v80 = v133;
    if (*(_QWORD *)(v79 + 32) == *(_QWORD *)(v133 + 32))
    {
      sub_1C07ABCDC();
      sub_1C078A404(v80, type metadata accessor for StaticKnowledgeAssetMetadata, (uint64_t)v139);
      v81 = v64;
      v82 = sub_1C106F538();
      v83 = sub_1C10703A8();
      v84 = sub_1C077F60C(v83);
      if (v84)
      {
        v118 = v13;
        v85 = (uint8_t *)sub_1C0775854();
        *(_DWORD *)v85 = 134217984;
        v86 = *(_QWORD *)(v79 + 32);
        sub_1C07826E8((uint64_t)v85, type metadata accessor for StaticKnowledgeAssetMetadata);
        v142 = v86;
        sub_1C10705AC();
        sub_1C07796F0(&dword_1C0771000, v82, v81, "GlobalKnowledgeDatabase: checkAndLoadAssets: versions (%ld) match.", v85);
        sub_1C0776778();
      }
      sub_1C07826E8(v84, type metadata accessor for StaticKnowledgeAssetMetadata);
      v101 = v134;

      v48(v64, v101);
      sub_1C07B1F90((uint64_t)v121, type metadata accessor for StaticKnowledgeAssetMetadata);
      v90 = *(void (**)(uint64_t, uint64_t))(v124 + 8);
      v88 = v50;
      v89 = v13;
LABEL_25:
      v90(v88, v89);
      v70 = 0;
      return v70 & 1;
    }
    sub_1C106F154();
    v91 = v79;
    v92 = v114;
    sub_1C078CA7C(v91, v114);
    v93 = v80;
    v94 = v115;
    sub_1C078CA7C(v93, v115);
    v95 = sub_1C106F538();
    v96 = sub_1C10703A8();
    if (os_log_type_enabled(v95, v96))
    {
      sub_1C0775854();
      sub_1C07A8668();
      *v97 = 134218240;
      v118 = v13;
      v98 = *(_QWORD *)(v92 + 32);
      sub_1C07826E8((uint64_t)v97, type metadata accessor for StaticKnowledgeAssetMetadata);
      v142 = v98;
      sub_1C10705AC();
      MEMORY[0xC] = 2048;
      v99 = v96;
      v100 = *(_QWORD *)(v94 + 32);
      sub_1C07B1F90(v94, type metadata accessor for StaticKnowledgeAssetMetadata);
      v142 = v100;
      sub_1C10705AC();
      sub_1C077E89C(&dword_1C0771000, v95, v99, "GlobalKnowledgeDatabase: checkAndLoadAssets: replacing version %ld with %ld", 0);
      sub_1C0776778();
    }
    sub_1C079E4C8(v94);
    sub_1C079E4C8(v92);
    v102 = v113;
    v103 = v134;
    v104 = MEMORY[0x1E0D23DC0];

    v48((uint64_t)v119, v103);
    v140 = &type metadata for StaticGlobalKnowledgeTripleColumn;
    v141 = sub_1C0A6BE24();
    LOBYTE(v138) = 0;
    v69 = (uint64_t)v121;
    if ((v121[1] & 1) != 0)
    {
      v137 = 0;
      v135 = 0u;
      v136 = 0u;
    }
    else
    {
      v105 = *v121;
      *((_QWORD *)&v136 + 1) = MEMORY[0x1E0DEDC60];
      v137 = MEMORY[0x1E0D24A58];
      *(_QWORD *)&v135 = v105;
    }
    type metadata accessor for StaticKnowledgeTriple();
    v144 = v62;
    v145 = v104;
    sub_1C079DFC4(&v142);
    sub_1C106C310();
    sub_1C0784B6C((uint64_t)&v135, (uint64_t *)&unk_1ED7626B0);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)&v138);
    sub_1C0776A14(&qword_1ED75C040);
    v106 = v116;
    sub_1C106B968();
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)&v142);
    sub_1C106C124();
    sub_1C078303C(v106, *(uint64_t (**)(uint64_t, uint64_t))(v112 + 8));
    v107 = sub_1C106C604();
    sub_1C07B2D8C(v102, 1, 1, v107);
    sub_1C07ACF80(&qword_1ED75D2C8);
    sub_1C106BE78();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C1079220;
    LOBYTE(v138) = 2;
    v108 = *(_QWORD *)(v133 + 32);
    v144 = MEMORY[0x1E0DEB418];
    v145 = MEMORY[0x1E0D249F8];
    v142 = v108;
    sub_1C0A6BE60();
    v65 = v126;
    sub_1C106BED8();
    sub_1C0784B6C((uint64_t)&v142, (uint64_t *)&unk_1ED7626B0);
    sub_1C106C130();
    sub_1C0784B6C(v102, &qword_1ED761500);
    sub_1C07767AC();
  }
  sub_1C0A67734(v65, v111, v69);
  sub_1C07B1F90(v69, type metadata accessor for StaticKnowledgeAssetMetadata);
  sub_1C078AFD8();
  v70 = 1;
  return v70 & 1;
}

uint64_t sub_1C0A67254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  type metadata accessor for StaticKnowledgeAssetMetadataInManifest(0);
  v6[8] = swift_task_alloc();
  v7 = sub_1C106F544();
  v6[9] = v7;
  v6[10] = *(_QWORD *)(v7 - 8);
  v6[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C0A67304()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  NSObject *v20;
  os_log_type_t v21;
  BOOL v22;
  unint64_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v27[2];

  v27[1] = *MEMORY[0x1E0C80C00];
  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 64);
  sub_1C106F154();
  sub_1C07E05C8(v1, v2, type metadata accessor for StaticKnowledgeAssetMetadataInManifest);
  v3 = sub_1C106F538();
  v4 = sub_1C1070384();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 64);
    v6 = (uint8_t *)sub_1C0775854();
    v27[0] = sub_1C0775854();
    *(_DWORD *)v6 = 136315138;
    sub_1C07767B4();
    v7 = sub_1C078109C();
    *(_QWORD *)(v0 + 32) = sub_1C0788DAC(v7, v8, v9);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    sub_1C07B1F90(v5, type metadata accessor for StaticKnowledgeAssetMetadataInManifest);
    _os_log_impl(&dword_1C0771000, v3, v4, "GlobalKnowledgeDatabase: checkAndLoadAssets: Calling sourceUpdated for %s", v6, 0xCu);
    sub_1C077D1D0();
    sub_1C0776778();
  }
  v11 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 88);
  v12 = *(_QWORD *)(v0 + 72);
  sub_1C07B1F90(*(_QWORD *)(v0 + 64), type metadata accessor for StaticKnowledgeAssetMetadataInManifest);

  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D3E038]), sel_init);
  v14 = (void *)sub_1C106FAF0();
  v15 = (void *)sub_1C106FAF0();
  *(_QWORD *)(v0 + 16) = 0;
  LODWORD(v10) = objc_msgSend(v13, sel_sourceUpdatedWithSourceType_sourceIdentifier_error_, v14, v15, v0 + 16);

  v16 = *(void **)(v0 + 16);
  if ((_DWORD)v10)
  {
    v17 = v16;
  }
  else
  {
    v18 = v16;
    v19 = (void *)sub_1C106AA14();

    swift_willThrow();
    if (qword_1ED762AF0 != -1)
      swift_once();
    sub_1C079E000(*(_QWORD *)(v0 + 72), (uint64_t)qword_1ED78D9E0);
    swift_bridgeObjectRetain_n();
    v20 = sub_1C106F538();
    v21 = sub_1C107039C();
    v22 = os_log_type_enabled(v20, v21);
    v23 = *(_QWORD *)(v0 + 56);
    if (v22)
    {
      v24 = *(_QWORD *)(v0 + 48);
      v25 = (uint8_t *)sub_1C0775854();
      v27[0] = sub_1C0775854();
      *(_DWORD *)v25 = 136315138;
      sub_1C0778624();
      *(_QWORD *)(v0 + 24) = sub_1C0788DAC(v24, v23, v27);
      sub_1C10705AC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C0771000, v20, v21, "GlobalKnowledgeDatabase: checkAndLoadAssets: Could not update state in view database for global Knowledge graph: %s", v25, 0xCu);
      sub_1C077D1D0();
      sub_1C0776778();
    }

    swift_bridgeObjectRelease_n();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1C0A67708()
{
  sub_1C1070DF8();
  sub_1C07809D0();
  sub_1C077AE74();
  sub_1C0775804();
}

void sub_1C0A67734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42[5];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  type metadata accessor for StaticKnowledgeAssetMetadata(0);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v7);
  sub_1C07785B8();
  if ((*(_BYTE *)(a3 + 8) & 1) != 0 || *(uint64_t *)a3 < 1)
  {
    sub_1C1070774();
    sub_1C106FC94();
    sub_1C07E05C8(a3, v4, type metadata accessor for StaticKnowledgeAssetMetadata);
    sub_1C106FB5C();
    sub_1C106FC94();
    sub_1C07767AC();
    sub_1C0A6BBBC();
    sub_1C0775810();
    *(_QWORD *)v8 = 0;
    *(_QWORD *)(v8 + 8) = 0xE000000000000000;
    *(_BYTE *)(v8 + 16) = 0;
    sub_1C077F130();
  }
  else
  {
    v32 = *(_QWORD *)a3;
    MEMORY[0x1C3BA79F4]();
    sub_1C106AB58();
    if (v3)
    {
      sub_1C0783110();
    }
    else
    {
      if ((*(_BYTE *)(a3 + 40) & 1) != 0)
      {
        sub_1C106A978();
        sub_1C077B5BC();
        sub_1C106A96C();
        sub_1C0A6BE9C();
        sub_1C07B9710();
        sub_1C106A960();
      }
      else
      {
        sub_1C106A708();
        sub_1C077B5BC();
        sub_1C106A6FC();
        sub_1C0A6BE9C();
        sub_1C07B9710();
        sub_1C106A6F0();
      }
      v29 = a1;
      sub_1C07AEF18();
      sub_1C07785A8();
      v9 = v34;
      v10 = v36;
      v30 = v35;
      v31 = v33;
      v11 = v37;
      sub_1C0783110();
      v45 = MEMORY[0x1E0DEE9E0];
      v43 = MEMORY[0x1E0DEE9E0];
      v44 = MEMORY[0x1E0DEE9E0];
      sub_1C077C0B8();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v12 = sub_1C077AEBC();
      v13 = sub_1C0A67E20(v12, v37);
      v14 = *(_QWORD *)(v13 + 16);
      v28 = v36;
      v27 = v37;
      if (v14)
      {
        v26 = v34;
        v15 = v13 + 56;
        do
        {
          v16 = *(_QWORD *)(v15 + 56);
          v18 = *(_QWORD *)(v15 + 8);
          v17 = *(_QWORD *)(v15 + 16);
          v20 = *(_QWORD *)(v15 - 8);
          v19 = *(_QWORD *)v15;
          v21 = *(_QWORD *)(v15 - 16);
          v22 = *(_QWORD *)(v15 - 24);
          v42[0] = v31;
          v42[1] = v26;
          v42[2] = v30;
          v42[3] = v10;
          v42[4] = v11;
          v33 = v22;
          v34 = v21;
          v35 = v20;
          v36 = v19;
          v37 = v18;
          v38 = v17;
          v39 = *(_OWORD *)(v15 + 24);
          v40 = *(_OWORD *)(v15 + 40);
          v41 = v16;
          sub_1C077AEBC();
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          sub_1C07767C4();
          sub_1C077C0B8();
          sub_1C0A67ED0(v29, v42, v32, &v33, &v45, &v44, &v43);
          swift_bridgeObjectRelease();
          sub_1C077B5B4();
          sub_1C077589C();
          sub_1C0775894();
          swift_bridgeObjectRelease();
          v15 += 88;
          --v14;
          v10 = v28;
          v11 = v27;
        }
        while (v14);
        sub_1C078F230();
        v9 = v26;
        v23 = sub_1C079CDB4(v31);
        v24 = v43;
        v25 = v45;
      }
      else
      {
        swift_bridgeObjectRelease();
        v23 = sub_1C079CDB4(v33);
        v25 = MEMORY[0x1E0DEE9E0];
        v24 = MEMORY[0x1E0DEE9E0];
      }
      MEMORY[0x1E0C80A78](v23);
      sub_1C07767C4();
      sub_1C0A64670(v24, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C0A6BF14);
      sub_1C077589C();
      sub_1C0775894();
      sub_1C077B5B4();
      sub_1C0A68B8C(v29, v25, v32);
      swift_bridgeObjectRelease();
      sub_1C0A6BED8(v31, v9);
    }
  }
  sub_1C07757D0();
}

uint64_t sub_1C0A67BE8()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC28();
  swift_bridgeObjectRelease();
  sub_1C07767B4();
  sub_1C106FC28();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0A67C5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  BOOL v12;
  char v13;
  uint64_t result;

  v12 = a1 == a5 && a2 == a6;
  if (v12 || (v13 = sub_1C1070CB4(), result = 0, (v13 & 1) != 0))
  {
    if (a3 == a7 && a4 == a8)
      return 1;
    else
      return sub_1C1070CB4();
  }
  return result;
}

uint64_t sub_1C0A67CE8()
{
  sub_1C1070DF8();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC28();
  swift_bridgeObjectRelease();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC28();
  swift_bridgeObjectRelease();
  return sub_1C1070E4C();
}

uint64_t sub_1C0A67D74()
{
  return sub_1C0A67CE8();
}

uint64_t sub_1C0A67D80()
{
  return sub_1C0A67BE8();
}

uint64_t sub_1C0A67D8C()
{
  sub_1C1070DF8();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC28();
  swift_bridgeObjectRelease();
  sub_1C077AE90();
  sub_1C106FC28();
  swift_bridgeObjectRelease();
  return sub_1C077AE74();
}

uint64_t sub_1C0A67E04(uint64_t *a1, uint64_t *a2)
{
  return sub_1C0A67C5C(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

uint64_t sub_1C0A67E20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[5];
  uint64_t v7;

  if (a1)
    v3 = a1;
  else
    v3 = MEMORY[0x1E0DEE9D8];
  v7 = v3;
  if (a2)
  {
    MEMORY[0x1E0C80A78](a1);
    v6[2] = &v7;
    v6[3] = v2;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v4 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0A6487C(v4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C0A6BF7C, (uint64_t)v6, (void (*)(_QWORD *__return_ptr))sub_1C0861BD0);
    swift_bridgeObjectRelease();
    return v7;
  }
  else
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  return v3;
}

void sub_1C0A67ED0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4, uint64_t *a5, uint64_t *a6, uint64_t *a7)
{
  uint64_t *v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  _BOOL8 v63;
  uint64_t *v64;
  unint64_t v65;
  char v66;
  char v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  void (*v87)(char *, uint64_t, uint64_t);
  char *v88;
  void (*v89)(char *, uint64_t, uint64_t);
  char *v90;
  NSObject *v91;
  os_log_type_t v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  unint64_t v98;
  os_log_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  char v105;
  uint64_t v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  os_log_t v119;
  int v120;
  uint64_t v121;
  char *v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t *v138;
  uint64_t v139;
  uint64_t *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;

  v136 = a7;
  v140 = a6;
  v149 = a5;
  v128 = a3;
  v127 = a1;
  v126 = sub_1C106F544();
  v125 = *(_QWORD *)(v126 - 8);
  MEMORY[0x1E0C80A78](v126);
  v129 = (char *)&v118 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = sub_1C106EB24();
  v131 = *(_QWORD *)(v135 - 8);
  v11 = MEMORY[0x1E0C80A78](v135);
  v124 = (char *)&v118 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v132 = (uint64_t)&v118 - v13;
  v137 = sub_1C106E590();
  v133 = *(_QWORD *)(v137 - 8);
  v14 = MEMORY[0x1E0C80A78](v137);
  v123 = (char *)&v118 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v134 = (uint64_t)&v118 - v16;
  v17 = sub_1C07ACF80(&qword_1ED755A10);
  v18 = MEMORY[0x1E0C80A78](v17);
  v130 = (uint64_t)&v118 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v141 = (uint64_t)&v118 - v20;
  v21 = sub_1C07ACF80((uint64_t *)&unk_1ED75EA40);
  v22 = MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v118 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v26 = (char *)&v118 - v25;
  v28 = *a2;
  v27 = a2[1];
  v29 = a2[2];
  v30 = a2[3];
  v31 = a2[4];
  v32 = *a4;
  v33 = a4[1];
  v34 = a4[2];
  v35 = a4[3];
  v36 = a4[4];
  v37 = a4[5];
  v38 = (uint64_t *)a4[6];
  v39 = a4[7];
  v40 = a4[8];
  v41 = a4[9];
  v42 = a4[10];
  v162 = v28;
  v163 = v27;
  v139 = v29;
  v164 = v29;
  v165 = v30;
  v138 = (uint64_t *)v30;
  v166 = v31;
  v151 = v32;
  v142 = v33;
  v152 = v33;
  v153 = v34;
  v147 = v34;
  v143 = v35;
  v154 = v35;
  v155 = v36;
  v146 = v36;
  v144 = v37;
  v156 = v37;
  v157 = v38;
  v145 = v39;
  v158 = v39;
  v159 = v40;
  v160 = v41;
  v161 = v42;
  v43 = v149;
  v44 = (uint64_t)v150;
  v148 = v40;
  v149 = v7;
  sub_1C0A69D94(&v162, &v151, v43, (uint64_t)v26);
  if (v44)
    return;
  v122 = v24;
  v150 = v26;
  if (v38)
    v45 = v144;
  else
    v45 = 0;
  v162 = v28;
  v163 = v27;
  if (v38)
    v46 = v38;
  else
    v46 = (uint64_t *)0xE000000000000000;
  v164 = v139;
  v165 = (uint64_t)v138;
  v166 = v31;
  v151 = v32;
  v152 = v142;
  v153 = v147;
  v154 = v143;
  v155 = v146;
  v156 = v144;
  v157 = v38;
  v158 = v145;
  v159 = v148;
  v160 = v41;
  v161 = v42;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v47 = v141;
  sub_1C0A6A52C(&v162, &v151, v41, v42, v45, (uint64_t)v46, v140, v141);
  v149 = 0;
  v48 = v42;
  v121 = v45;
  v138 = v38;
  v139 = v41;
  v49 = (uint64_t)v122;
  sub_1C078A8F8((uint64_t)v150, (uint64_t)v122, (uint64_t *)&unk_1ED75EA40);
  v50 = v137;
  v51 = sub_1C07B2D80(v49, 1, v137);
  v140 = v46;
  if (v51 == 1)
  {
    sub_1C0784B6C(v49, (uint64_t *)&unk_1ED75EA40);
    v52 = v136;
  }
  else
  {
    v53 = v133;
    v54 = v134;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v133 + 32))(v134, v49, v50);
    v55 = v130;
    sub_1C078A8F8(v47, v130, &qword_1ED755A10);
    v49 = v135;
    v56 = sub_1C07B2D80(v55, 1, v135);
    v52 = v136;
    if (v56 != 1)
    {
      v82 = v131;
      v83 = v54;
      v84 = v132;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v131 + 32))(v132, v55, v49);
      v85 = v53;
      v86 = v129;
      sub_1C106F154();
      v87 = *(void (**)(char *, uint64_t, uint64_t))(v85 + 16);
      v88 = v123;
      v87(v123, v83, v50);
      v89 = *(void (**)(char *, uint64_t, uint64_t))(v82 + 16);
      v90 = v124;
      v89(v124, v84, v49);
      v91 = sub_1C106F538();
      v92 = sub_1C1070384();
      v93 = v92;
      if (os_log_type_enabled(v91, v92))
      {
        v94 = swift_slowAlloc();
        v130 = swift_slowAlloc();
        v151 = v130;
        *(_DWORD *)v94 = 136315394;
        v122 = (char *)v48;
        sub_1C07803F8(&qword_1ED7625A0, (void (*)(uint64_t))MEMORY[0x1E0D3CE28]);
        v119 = v91;
        v120 = v93;
        v95 = sub_1C1070C0C();
        v162 = sub_1C0788DAC(v95, v96, &v151);
        sub_1C10705AC();
        swift_bridgeObjectRelease();
        v133 = *(_QWORD *)(v133 + 8);
        ((void (*)(char *, uint64_t))v133)(v88, v50);
        *(_WORD *)(v94 + 12) = 2080;
        sub_1C07803F8(&qword_1EF639B28, (void (*)(uint64_t))MEMORY[0x1E0D3D450]);
        v97 = sub_1C1070C0C();
        v162 = sub_1C0788DAC(v97, v98, &v151);
        v64 = v138;
        v48 = (uint64_t)v122;
        sub_1C10705AC();
        swift_bridgeObjectRelease();
        v58 = *(void (**)(char *, uint64_t))(v131 + 8);
        v58(v90, v49);
        v99 = v119;
        _os_log_impl(&dword_1C0771000, v119, (os_log_type_t)v120, "GlobalKnowledgeDatabase: flushing triples for %s : %s to database", (uint8_t *)v94, 0x16u);
        v100 = v130;
        swift_arrayDestroy();
        MEMORY[0x1C3BA8270](v100, -1, -1);
        MEMORY[0x1C3BA8270](v94, -1, -1);

        (*(void (**)(char *, uint64_t))(v125 + 8))(v129, v126);
        v49 = v144;
        v28 = v146;
      }
      else
      {
        v133 = *(_QWORD *)(v133 + 8);
        ((void (*)(char *, uint64_t))v133)(v88, v50);
        v58 = *(void (**)(char *, uint64_t))(v131 + 8);
        v58(v90, v49);

        (*(void (**)(char *, uint64_t))(v125 + 8))(v86, v126);
        v49 = v144;
        v28 = v146;
        v64 = v138;
      }
      v101 = *v52;
      v102 = *(_QWORD *)(*v52 + 16);
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v103 = v140;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      if (v102)
      {
        v104 = sub_1C07DD1C0(v139, v48, v121, v103);
        if ((v105 & 1) != 0)
        {
          v106 = *(_QWORD *)(*(_QWORD *)(v101 + 56) + 8 * v104);
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        }
        else
        {
          v106 = MEMORY[0x1E0DEE9D8];
        }
      }
      else
      {
        v106 = MEMORY[0x1E0DEE9D8];
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        goto LABEL_29;
      goto LABEL_35;
    }
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v54, v50);
    sub_1C0784B6C(v55, &qword_1ED755A10);
  }
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_isUniquelyReferenced_nonNull_native();
  v151 = *v52;
  v57 = v151;
  *v52 = 0x8000000000000000;
  v58 = (void (*)(char *, uint64_t))v48;
  v59 = v48;
  v48 = v121;
  v60 = sub_1C07DD1C0(v139, v59, v121, v140);
  v62 = *(_QWORD *)(v57 + 16);
  v63 = (v61 & 1) == 0;
  v64 = (uint64_t *)(v62 + v63);
  if (__OFADD__(v62, v63))
  {
    __break(1u);
LABEL_35:
    sub_1C07EC850();
    v106 = v116;
LABEL_29:
    v107 = v149;
    v108 = v128;
    v109 = v127;
    v110 = *(_QWORD *)(v106 + 16);
    if (v110 >= *(_QWORD *)(v106 + 24) >> 1)
    {
      sub_1C07EC850();
      v109 = v127;
      v108 = v128;
      v107 = v149;
      v106 = v117;
    }
    *(_QWORD *)(v106 + 16) = v110 + 1;
    v111 = (_QWORD *)(v106 + 88 * v110);
    v111[4] = v32;
    v112 = v147;
    v111[5] = v142;
    v111[6] = v112;
    v111[7] = v143;
    v111[8] = v28;
    v111[9] = v49;
    v111[10] = v64;
    v113 = v148;
    v111[11] = v145;
    v111[12] = v113;
    v111[13] = v139;
    v111[14] = v48;
    v114 = v134;
    v115 = v132;
    sub_1C0A6B064(v109, v108, v134, v132, v106);
    swift_bridgeObjectRelease();
    if (v107)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v58((char *)v115, v135);
      ((void (*)(uint64_t, uint64_t))v133)(v114, v137);
      sub_1C0784B6C(v141, &qword_1ED755A10);
      sub_1C0784B6C((uint64_t)v150, (uint64_t *)&unk_1ED75EA40);
    }
    else
    {
      sub_1C07F33D0();
      swift_bridgeObjectRelease();
      v58((char *)v115, v135);
      ((void (*)(uint64_t, uint64_t))v133)(v114, v137);
      sub_1C0784B6C(v141, &qword_1ED755A10);
      sub_1C0784B6C((uint64_t)v150, (uint64_t *)&unk_1ED75EA40);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return;
  }
  v65 = v60;
  v66 = v61;
  sub_1C07ACF80(&qword_1ED748120);
  v67 = sub_1C107090C();
  v68 = v151;
  v69 = v138;
  if ((v67 & 1) != 0)
  {
    v70 = sub_1C07DD1C0(v139, v58, v48, v140);
    if ((v66 & 1) != (v71 & 1))
    {
      sub_1C1070D44();
      __break(1u);
      return;
    }
    v65 = v70;
  }
  *v52 = v68;
  swift_bridgeObjectRelease();
  v72 = *v52;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v73 = v139;
  if ((v66 & 1) == 0)
  {
    sub_1C07E009C(v65, v139, (uint64_t)v58, v48, (uint64_t)v140, MEMORY[0x1E0DEE9D8], v72);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  v74 = *(_QWORD *)(v72 + 56);
  swift_bridgeObjectRelease();
  v75 = (uint64_t *)(v74 + 8 * v65);
  sub_1C07EA1E0();
  v76 = *(_QWORD *)(*v75 + 16);
  sub_1C07EA8F4();
  v77 = *v75;
  *(_QWORD *)(v77 + 16) = v76 + 1;
  v78 = (_QWORD *)(v77 + 88 * v76);
  v78[4] = v32;
  v79 = v147;
  v78[5] = v142;
  v78[6] = v79;
  v80 = v146;
  v78[7] = v143;
  v78[8] = v80;
  v78[9] = v144;
  v78[10] = v69;
  v81 = v148;
  v78[11] = v145;
  v78[12] = v81;
  v78[13] = v73;
  v78[14] = v58;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C0784B6C(v141, &qword_1ED755A10);
  sub_1C0784B6C((uint64_t)v150, (uint64_t *)&unk_1ED75EA40);
}

uint64_t sub_1C0A68B8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t result;
  int64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int64_t v63;
  uint64_t v64;
  int64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  int64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  _QWORD v85[3];
  uint64_t v86;
  uint64_t v87;
  uint64_t v88[3];
  ValueMetadata *v89;
  unint64_t v90;
  uint64_t v91[2];
  ValueMetadata *v92;
  unint64_t v93;
  _QWORD *v94;

  v4 = v3;
  v77 = a3;
  v76 = a1;
  v6 = sub_1C07ACF80(&qword_1ED761500);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = sub_1C07ACF80(&qword_1ED759F08);
  v74 = *(_QWORD *)(v83 - 8);
  v9 = MEMORY[0x1E0C80A78](v83);
  v73 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v71 = (char *)&v63 - v12;
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v63 - v13;
  v15 = sub_1C106E590();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v84 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1C07ACF80(&qword_1EF639DE0);
  v19 = MEMORY[0x1E0C80A78](v18);
  v21 = (int64_t *)((char *)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v19);
  v78 = (char *)&v63 - v22;
  v23 = *(_QWORD *)(a2 + 64);
  v64 = a2 + 64;
  v24 = 1 << *(_BYTE *)(a2 + 32);
  v25 = -1;
  if (v24 < 64)
    v25 = ~(-1 << v24);
  v26 = v25 & v23;
  v65 = (unint64_t)(v24 + 63) >> 6;
  v63 = v65 - 1;
  v66 = a2;
  result = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v28 = 0;
  v70 = xmmword_1C1078FC0;
  v69 = xmmword_1C1079220;
  v94 = v21;
  v75 = v8;
  v72 = v14;
  v68 = v16;
  v67 = v15;
  if (!v26)
    goto LABEL_6;
LABEL_4:
  v81 = v28;
  v82 = (v26 - 1) & v26;
  v29 = __clz(__rbit64(v26)) | (v28 << 6);
  while (2)
  {
    v30 = *(_QWORD *)(v66 + 56);
    v31 = (_QWORD *)(*(_QWORD *)(v66 + 48) + 16 * v29);
    v32 = v31[1];
    *v21 = *v31;
    v21[1] = v32;
    v33 = v30 + *(_QWORD *)(v16 + 72) * v29;
    v34 = sub_1C07ACF80(&qword_1ED758CC8);
    v35 = v33;
    v21 = v94;
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)v94 + *(int *)(v34 + 48), v35, v15);
    sub_1C07B2D8C((uint64_t)v21, 0, 1, v34);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    while (1)
    {
      v39 = (uint64_t)v21;
      v40 = v78;
      sub_1C078A67C(v39, (uint64_t)v78, &qword_1EF639DE0);
      v41 = sub_1C07ACF80(&qword_1ED758CC8);
      if (sub_1C07B2D80((uint64_t)v40, 1, v41) == 1)
        return swift_release();
      v80 = v4;
      v42 = *(_QWORD *)v40;
      v43 = *((_QWORD *)v40 + 1);
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v84, &v40[*(int *)(v41 + 48)], v15);
      type metadata accessor for StaticKnowledgeTriple();
      v89 = &type metadata for StaticGlobalKnowledgeTripleColumn;
      v44 = sub_1C0A6BE24();
      v90 = v44;
      LOBYTE(v88[0]) = 0;
      v87 = MEMORY[0x1E0D24A58];
      v86 = MEMORY[0x1E0DEDC60];
      v85[0] = v77;
      v45 = sub_1C106BCBC();
      v92 = (ValueMetadata *)v45;
      v46 = MEMORY[0x1E0D23DC0];
      v93 = MEMORY[0x1E0D23DC0];
      sub_1C079DFC4(v91);
      sub_1C106C310();
      sub_1C0784B6C((uint64_t)v85, (uint64_t *)&unk_1ED7626B0);
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v88);
      sub_1C07803F8(&qword_1ED75C040, (void (*)(uint64_t))type metadata accessor for StaticKnowledgeTriple);
      v47 = v73;
      sub_1C106B968();
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v91);
      v89 = &type metadata for StaticGlobalKnowledgeTripleColumn;
      v90 = v44;
      LOBYTE(v88[0]) = 5;
      v86 = MEMORY[0x1E0DEA968];
      v87 = MEMORY[0x1E0D24960];
      v85[0] = v42;
      v85[1] = v43;
      v92 = (ValueMetadata *)v45;
      v93 = v46;
      sub_1C079DFC4(v91);
      sub_1C106C310();
      sub_1C0784B6C((uint64_t)v85, (uint64_t *)&unk_1ED7626B0);
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v88);
      sub_1C07BB218(&qword_1EF639DE8, &qword_1ED759F08);
      v79 = v48;
      v49 = v71;
      v50 = v83;
      sub_1C106BDF4();
      v51 = *(void (**)(char *, uint64_t))(v74 + 8);
      v51(v47, v50);
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v91);
      sub_1C07ACF80(&qword_1ED75E838);
      sub_1C106E41C();
      v52 = v50;
      v53 = swift_allocObject();
      *(_OWORD *)(v53 + 16) = v70;
      sub_1C106E248();
      sub_1C106E2B4();
      v85[0] = v53;
      v92 = &type metadata for StaticGlobalKnowledgeTripleColumn;
      v93 = v44;
      LOBYTE(v91[0]) = 2;
      v89 = (ValueMetadata *)v45;
      v90 = MEMORY[0x1E0D23DC0];
      sub_1C079DFC4(v88);
      sub_1C07ACF80(&qword_1ED746288);
      sub_1C07BB218(&qword_1ED746290, &qword_1ED746288);
      sub_1C07803F8(&qword_1ED7564A0, (void (*)(uint64_t))MEMORY[0x1E0D3CC50]);
      v54 = v84;
      v55 = v52;
      v56 = v72;
      sub_1C106FD6C();
      v57 = (uint64_t)v75;
      swift_bridgeObjectRelease();
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v91);
      v92 = (ValueMetadata *)v45;
      v93 = MEMORY[0x1E0D23DC0];
      sub_1C079DFC4(v91);
      sub_1C106C0D0();
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v88);
      sub_1C106BDF4();
      v51(v49, v55);
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v91);
      v58 = sub_1C106C604();
      sub_1C07B2D8C(v57, 1, 1, v58);
      sub_1C07ACF80(&qword_1ED75D2C8);
      sub_1C106BE78();
      *(_OWORD *)(swift_allocObject() + 16) = v69;
      LOBYTE(v88[0]) = 5;
      v59 = sub_1C106E530();
      v92 = (ValueMetadata *)MEMORY[0x1E0DEA968];
      v93 = MEMORY[0x1E0D24960];
      v91[0] = v59;
      v91[1] = v60;
      sub_1C0A6BF40();
      sub_1C106BED8();
      sub_1C0784B6C((uint64_t)v91, (uint64_t *)&unk_1ED7626B0);
      v61 = v80;
      sub_1C106C130();
      v4 = v61;
      if (v61)
      {
        swift_bridgeObjectRelease();
        sub_1C0784B6C(v57, &qword_1ED761500);
        v51(v56, v83);
        (*(void (**)(char *, uint64_t))(v68 + 8))(v54, v67);
        return swift_release();
      }
      swift_bridgeObjectRelease();
      sub_1C0784B6C(v57, &qword_1ED761500);
      v51(v56, v83);
      v62 = v68;
      v15 = v67;
      result = (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v54, v67);
      v16 = v62;
      v21 = v94;
      v28 = v81;
      v26 = v82;
      if (v82)
        goto LABEL_4;
LABEL_6:
      v36 = v28 + 1;
      if (__OFADD__(v28, 1))
      {
        __break(1u);
        goto LABEL_34;
      }
      if (v36 >= v65)
      {
LABEL_16:
        v81 = v28;
        goto LABEL_17;
      }
      v37 = *(_QWORD *)(v64 + 8 * v36);
      if (v37)
        goto LABEL_9;
      v28 += 2;
      if (v36 + 1 < v65)
        break;
LABEL_30:
      v81 = v36;
LABEL_17:
      v38 = sub_1C07ACF80(&qword_1ED758CC8);
      sub_1C07B2D8C((uint64_t)v21, 1, 1, v38);
      v82 = 0;
    }
    v37 = *(_QWORD *)(v64 + 8 * v28);
    if (v37)
      goto LABEL_12;
    if (v36 + 2 >= v65)
      goto LABEL_16;
    v37 = *(_QWORD *)(v64 + 8 * (v36 + 2));
    if (v37)
    {
      v36 += 2;
      goto LABEL_9;
    }
    v28 = v36 + 3;
    if (v36 + 3 >= v65)
    {
      v81 = v36 + 2;
      goto LABEL_17;
    }
    v37 = *(_QWORD *)(v64 + 8 * v28);
    if (v37)
    {
LABEL_12:
      v36 = v28;
LABEL_9:
      v81 = v36;
      v82 = (v37 - 1) & v37;
      v29 = __clz(__rbit64(v37)) + (v36 << 6);
      continue;
    }
    break;
  }
  while (1)
  {
    v36 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v36 >= v65)
    {
      v36 = v63;
      goto LABEL_30;
    }
    v37 = *(_QWORD *)(v64 + 8 * v36);
    ++v28;
    if (v37)
      goto LABEL_9;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1C0A694C8(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t inited;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v33[2];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  char v39[16];
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v43 = *MEMORY[0x1E0C80C00];
  v8 = sub_1C106E41C();
  v35 = *(_QWORD *)(v8 - 8);
  v36 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = a4;
  v40 = a4;
  v41 = a1;
  v42 = a2;
  sub_1C0A6487C(a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C0A6BF84, (uint64_t)v39, (void (*)(_QWORD *__return_ptr))sub_1C0861BD0);
  sub_1C07ACF80(&qword_1ED762CB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1079220;
  *(_QWORD *)(inited + 32) = a1;
  *(_QWORD *)(inited + 40) = a2;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v37 = a1;
  v12 = sub_1C0A698B4();
  if (v13)
  {
    v14 = v12;
    v15 = v13;
    v16 = 2;
    sub_1C07B7730();
    inited = (uint64_t)v17;
    v17[2] = 2;
    v17[6] = v14;
    v17[7] = v15;
  }
  else
  {
    v16 = *(_QWORD *)(inited + 16);
    if (!v16)
      return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain_n();
  v33[1] = inited;
  v34 = a2;
  v18 = (uint64_t *)(inited + 40);
  do
  {
    v19 = *(v18 - 1);
    v20 = *v18;
    swift_bridgeObjectRetain_n();
    sub_1C106E2B4();
    v21 = sub_1C106E1E8();
    v23 = v22;
    (*(void (**)(char *, uint64_t))(v35 + 8))(v10, v36);
    v24 = v38;
    v25 = *v38;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v24 = v25;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1C07EC850();
      v25 = v30;
      *v38 = v30;
    }
    v27 = *(_QWORD *)(v25 + 16);
    if (v27 >= *(_QWORD *)(v25 + 24) >> 1)
    {
      sub_1C07EC850();
      v25 = v31;
      *v38 = v31;
    }
    v18 += 2;
    *(_QWORD *)(v25 + 16) = v27 + 1;
    v28 = v25 + 88 * v27;
    *(_QWORD *)(v28 + 32) = 0x3FF0000000000000;
    *(_QWORD *)(v28 + 40) = v19;
    *(_QWORD *)(v28 + 48) = v20;
    *(_QWORD *)(v28 + 56) = v21;
    *(_QWORD *)(v28 + 64) = v23;
    *(_OWORD *)(v28 + 72) = 0u;
    *(_OWORD *)(v28 + 88) = 0u;
    v29 = v34;
    *(_QWORD *)(v28 + 104) = v37;
    *(_QWORD *)(v28 + 112) = v29;
    swift_bridgeObjectRelease();
    --v16;
  }
  while (v16);
  swift_bridgeObjectRelease_n();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0A69758(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v20 = result;
  v6 = *(_QWORD *)(a3 + 16);
  if (v6)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v11 = (uint64_t *)(a3 + 40);
    do
    {
      v12 = *(v11 - 1);
      v13 = *v11;
      v14 = *a4;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *a4 = v14;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1C07EC850();
        v14 = v18;
        *a4 = v18;
      }
      v16 = *(_QWORD *)(v14 + 16);
      if (v16 >= *(_QWORD *)(v14 + 24) >> 1)
      {
        sub_1C07EC850();
        v14 = v19;
        *a4 = v19;
      }
      v11 += 2;
      *(_QWORD *)(v14 + 16) = v16 + 1;
      v17 = v14 + 88 * v16;
      *(_QWORD *)(v17 + 32) = 0x3FF0000000000000;
      *(_QWORD *)(v17 + 40) = v12;
      *(_QWORD *)(v17 + 48) = v13;
      *(_QWORD *)(v17 + 56) = v20;
      *(_QWORD *)(v17 + 64) = a2;
      *(_OWORD *)(v17 + 72) = 0u;
      *(_OWORD *)(v17 + 88) = 0u;
      *(_QWORD *)(v17 + 104) = a5;
      *(_QWORD *)(v17 + 112) = a6;
      --v6;
    }
    while (v6);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C0A698B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t result;
  char *v11;
  _QWORD v12[6];

  v0 = sub_1C106F874();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1C106F868();
  v12[4] = *(_QWORD *)(v1 - 8);
  v12[5] = v1;
  v2 = MEMORY[0x1E0C80A78](v1);
  MEMORY[0x1E0C80A78](v2);
  v12[3] = (char *)v12 - v3;
  v4 = sub_1C106FB50();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106FB44();
  sub_1C106FB20();
  v9 = v8;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  result = 0;
  if (v9 >> 60 != 15)
  {
    sub_1C07803F8(&qword_1ED762B30, (void (*)(uint64_t))MEMORY[0x1E0CA9940]);
    sub_1C106F85C();
    v11 = (char *)&loc_1C0A69A2C + dword_1C0A69D84[v9 >> 62];
    v12[2] = v9;
    __asm { BR              X10 }
  }
  return result;
}

void sub_1C0A69D94(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint8_t *v39;
  void (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  char v42;
  void (*v43)(uint64_t, uint64_t);
  char *v44;
  unint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  unint64_t v50;
  uint64_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint8_t *v86;
  void (*v87)(char *, uint64_t);
  char *v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91[8];

  v90 = a3;
  v7 = sub_1C07ACF80(&qword_1ED7618D0);
  MEMORY[0x1E0C80A78](v7);
  v81 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C106D1F8();
  v10 = *(_QWORD *)(v9 - 8);
  v77 = v9;
  v78 = v10;
  MEMORY[0x1E0C80A78](v9);
  v82 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1C106F544();
  v79 = *(_QWORD *)(v12 - 8);
  v80 = v12;
  MEMORY[0x1E0C80A78](v12);
  v88 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1C07ACF80(&qword_1ED759F70);
  MEMORY[0x1E0C80A78](v14);
  v87 = (void (*)(char *, uint64_t))((char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v89 = sub_1C106E41C();
  v86 = *(uint8_t **)(v89 - 8);
  v16 = MEMORY[0x1E0C80A78](v89);
  v85 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v64 - v18;
  v20 = sub_1C07ACF80((uint64_t *)&unk_1ED75EA40);
  v21 = MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v64 - v24;
  v73 = *a1;
  v72 = a1[1];
  v71 = a1[2];
  v70 = a1[3];
  v69 = a1[4];
  v76 = a2[1];
  v26 = a2[3];
  v83 = a2[2];
  v84 = v26;
  v75 = a2[6];
  v27 = a2[9];
  v74 = a2[8];
  v28 = a2[10];
  v29 = sub_1C106E590();
  v30 = a4;
  sub_1C07B2D8C(a4, 1, 1, v29);
  v31 = v90;
  v32 = *v90;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C089AC48(v27, v28, v32);
  swift_bridgeObjectRelease();
  LODWORD(v29) = sub_1C07B2D80((uint64_t)v25, 1, v29);
  sub_1C0784B6C((uint64_t)v25, (uint64_t *)&unk_1ED75EA40);
  if ((_DWORD)v29 == 1)
  {
    v34 = (uint64_t)v85;
    v33 = v86;
    v65 = v28;
    v35 = v88;
    v67 = v27;
    v64 = v23;
    v68 = v19;
    v66 = v30;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v36 = (uint64_t)v87;
    sub_1C106E1DC();
    v37 = v89;
    if (sub_1C07B2D80(v36, 1, v89) == 1)
    {
      sub_1C0784B6C(v36, &qword_1ED759F70);
    }
    else
    {
      v39 = v33;
      v40 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v33 + 4);
      v41 = (uint64_t)v68;
      v40(v68, v36, v37);
      sub_1C106E218();
      v42 = sub_1C08C4D74(v41, v34);
      v43 = (void (*)(uint64_t, uint64_t))*((_QWORD *)v39 + 1);
      v43(v34, v37);
      if ((v42 & 1) != 0)
      {
        v87 = (void (*)(char *, uint64_t))v43;
        v44 = v35;
        sub_1C106F154();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v45 = v65;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v46 = v83;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v47 = sub_1C106F538();
        v48 = sub_1C1070384();
        if (os_log_type_enabled(v47, v48))
        {
          v49 = (uint8_t *)swift_slowAlloc();
          v50 = v45;
          v51 = swift_slowAlloc();
          v91[0] = v51;
          v86 = v49;
          *(_DWORD *)v49 = 136315138;
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          v91[7] = sub_1C0788DAC(v67, v50, v91);
          v46 = v83;
          sub_1C10705AC();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          v52 = v86;
          _os_log_impl(&dword_1C0771000, v47, v48, "GlobalKnowledgeDatabase: found isA triple for %s", v86, 0xCu);
          swift_arrayDestroy();
          v53 = v51;
          v45 = v50;
          v37 = v89;
          MEMORY[0x1C3BA8270](v53, -1, -1);
          MEMORY[0x1C3BA8270](v52, -1, -1);

          (*(void (**)(char *, uint64_t))(v79 + 8))(v88, v80);
        }
        else
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v79 + 8))(v44, v80);
        }
        v54 = v78;
        v55 = (uint64_t)v81;
        v56 = (uint64_t)v82;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v57 = v76;
        sub_1C106D084();
        v58 = v46;
        v59 = v77;
        v60 = sub_1C07B2D80(v55, 1, v77);
        v61 = v66;
        if (v60 == 1)
        {
          sub_1C0784B6C(v55, &qword_1ED7618D0);
          sub_1C0A6BBBC();
          swift_allocError();
          *(_QWORD *)v62 = v57;
          *(_QWORD *)(v62 + 8) = v58;
          *(_BYTE *)(v62 + 16) = 2;
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          swift_willThrow();
          v87(v68, v37);
          sub_1C0784B6C(v61, (uint64_t *)&unk_1ED75EA40);
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 32))(v56, v55, v59);
          v91[0] = v73;
          v91[1] = v72;
          v91[2] = v71;
          v91[3] = v70;
          v91[4] = v69;
          v63 = (uint64_t)v64;
          sub_1C0D629FC(v45, v56, (uint64_t)v64);
          sub_1C0784B6C(v61, (uint64_t *)&unk_1ED75EA40);
          sub_1C078A67C(v63, v61, (uint64_t *)&unk_1ED75EA40);
          sub_1C078A8F8(v61, v63, (uint64_t *)&unk_1ED75EA40);
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          sub_1C0D99740(v63);
          (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v56, v59);
          v87(v68, v37);
        }
      }
      else
      {
        v43(v41, v37);
      }
    }
  }
  else
  {
    v38 = *v31;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C089AC48(v27, v28, v38);
    swift_bridgeObjectRelease();
    sub_1C0784B6C(v30, (uint64_t *)&unk_1ED75EA40);
    sub_1C078A67C((uint64_t)v23, v30, (uint64_t *)&unk_1ED75EA40);
  }
}

void sub_1C0A6A52C(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  _BOOL4 v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  void (*v65)(uint64_t, uint64_t);
  unint64_t v66;
  unint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD v83[2];
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  unint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  void (*v116)(char *, uint64_t);
  unint64_t v117;
  uint64_t v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121[5];
  uint64_t v122;

  v119 = a7;
  v120 = a3;
  v14 = sub_1C106EB24();
  v110 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v109 = (char *)v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1C07ACF80(&qword_1ED7618D0);
  MEMORY[0x1E0C80A78](v16);
  v97 = (char *)v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = sub_1C106D1F8();
  v99 = *(_QWORD *)(v94 - 8);
  MEMORY[0x1E0C80A78](v94);
  v98 = (char *)v83 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1C07ACF80(&qword_1ED759F70);
  MEMORY[0x1E0C80A78](v19);
  v116 = (void (*)(char *, uint64_t))((char *)v83 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v111 = sub_1C106E41C();
  v101 = *(_QWORD *)(v111 - 8);
  v21 = MEMORY[0x1E0C80A78](v111);
  v100 = (char *)v83 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v105 = (char *)v83 - v23;
  v24 = sub_1C106F544();
  v107 = *(_QWORD *)(v24 - 8);
  v108 = v24;
  v25 = MEMORY[0x1E0C80A78](v24);
  v103 = (char *)v83 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v115 = (char *)v83 - v27;
  v28 = sub_1C07ACF80(&qword_1ED755A10);
  v29 = MEMORY[0x1E0C80A78](v28);
  v113 = (uint64_t)v83 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x1E0C80A78](v29);
  v33 = (char *)v83 - v32;
  MEMORY[0x1E0C80A78](v31);
  v35 = (char *)v83 - v34;
  v91 = *a1;
  v90 = a1[1];
  v89 = a1[2];
  v88 = a1[3];
  v87 = a1[4];
  v93 = a2[1];
  v102 = a2[2];
  v92 = a2[4];
  v96 = a2[5];
  v117 = a2[6];
  v114 = a2[7];
  v112 = a2[8];
  v95 = a2[9];
  v104 = a2[10];
  v118 = a8;
  v36 = v14;
  sub_1C07B2D8C(a8, 1, 1, v14);
  v37 = v119;
  v38 = *v119;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v39 = v120;
  v40 = a5;
  sub_1C089B174(v120, a4, a5, a6, v38);
  v41 = a6;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v42 = v36;
  LODWORD(v36) = sub_1C07B2D80((uint64_t)v35, 1, v36);
  sub_1C0784B6C((uint64_t)v35, &qword_1ED755A10);
  if ((_DWORD)v36 != 1)
  {
    v48 = *v37;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C089B174(v39, a4, v40, v41, v48);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v49 = v118;
    sub_1C0784B6C(v118, &qword_1ED755A10);
    sub_1C078A67C((uint64_t)v33, v49, &qword_1ED755A10);
    return;
  }
  v43 = v115;
  v44 = (uint64_t)v116;
  v84 = v33;
  v106 = v42;
  v86 = v40;
  v85 = v41;
  v83[1] = a4;
  if (!v117)
  {
    sub_1C106F154();
    v50 = sub_1C106F538();
    v51 = sub_1C1070384();
    v52 = os_log_type_enabled(v50, v51);
    v45 = v118;
    if (v52)
    {
      v53 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v53 = 0;
      _os_log_impl(&dword_1C0771000, v50, v51, "GlobalKnowledgeDatabase: relationship identifier is null", v53, 2u);
      MEMORY[0x1C3BA8270](v53, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v107 + 8))(v43, v108);
    v54 = (uint64_t)v84;
    sub_1C106EB0C();
    sub_1C0784B6C(v45, &qword_1ED755A10);
    sub_1C07B2D8C(v54, 0, 1, v106);
    v55 = v54;
LABEL_10:
    sub_1C078A67C(v55, v45, &qword_1ED755A10);
    goto LABEL_11;
  }
  v45 = v118;
  if (!v112)
    goto LABEL_11;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v46 = v44;
  sub_1C106E1DC();
  v47 = v111;
  if (sub_1C07B2D80(v44, 1, v111) == 1)
  {
    sub_1C0784B6C(v44, &qword_1ED759F70);
    goto LABEL_11;
  }
  v61 = v101;
  v62 = (uint64_t)v105;
  (*(void (**)(char *, uint64_t, uint64_t))(v101 + 32))(v105, v46, v47);
  v63 = (uint64_t)v100;
  sub_1C106E218();
  v64 = sub_1C08C4D74(v62, v63);
  v65 = *(void (**)(uint64_t, uint64_t))(v61 + 8);
  v65(v63, v47);
  if ((v64 & 1) != 0)
  {
    v116 = (void (*)(char *, uint64_t))v65;
    sub_1C106F154();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v66 = v117;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v67 = v104;
    swift_bridgeObjectRetain_n();
    v68 = sub_1C106F538();
    v69 = sub_1C1070384();
    if (os_log_type_enabled(v68, v69))
    {
      v70 = swift_slowAlloc();
      v115 = (char *)swift_slowAlloc();
      v121[0] = (uint64_t)v115;
      *(_DWORD *)v70 = 136315394;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v122 = sub_1C0788DAC(v95, v67, v121);
      sub_1C10705AC();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      v71 = v102;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v70 + 12) = 2080;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v122 = sub_1C0788DAC(v96, v66, v121);
      v67 = v104;
      v72 = v105;
      sub_1C10705AC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C0771000, v68, v69, "GlobalKnowledgeDatabase: found relationship isA triple for %s : %s", (uint8_t *)v70, 0x16u);
      v73 = v115;
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v73, -1, -1);
      MEMORY[0x1C3BA8270](v70, -1, -1);

      (*(void (**)(char *, uint64_t))(v107 + 8))(v103, v108);
      v74 = (uint64_t)v84;
      v75 = v99;
      v76 = (uint64_t)v98;
      v77 = (uint64_t)v97;
      v78 = v71;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      v78 = v102;
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v107 + 8))(v103, v108);
      v74 = (uint64_t)v84;
      v75 = v99;
      v76 = (uint64_t)v98;
      v77 = (uint64_t)v97;
      v72 = (char *)v62;
    }
    v79 = v75;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v80 = v93;
    sub_1C106D084();
    v81 = v94;
    if (sub_1C07B2D80(v77, 1, v94) == 1)
    {
      sub_1C0784B6C(v77, &qword_1ED7618D0);
      sub_1C0A6BBBC();
      swift_allocError();
      *(_QWORD *)v82 = v80;
      *(_QWORD *)(v82 + 8) = v78;
      *(_BYTE *)(v82 + 16) = 2;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      swift_willThrow();
      v116(v72, v111);
      sub_1C0784B6C(v118, &qword_1ED755A10);
      return;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v79 + 32))(v76, v77, v81);
    v121[0] = v91;
    v121[1] = v90;
    v121[2] = v89;
    v121[3] = v88;
    v121[4] = v87;
    sub_1C0D62D94(v67, v76, v74);
    (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v76, v81);
    v116(v72, v111);
    v45 = v118;
    sub_1C0784B6C(v118, &qword_1ED755A10);
    v55 = v74;
    goto LABEL_10;
  }
  v65(v62, v47);
  v45 = v118;
LABEL_11:
  v56 = v113;
  sub_1C078A8F8(v45, v113, &qword_1ED755A10);
  v57 = v106;
  if (sub_1C07B2D80(v56, 1, v106) == 1)
  {
    sub_1C0784B6C(v56, &qword_1ED755A10);
  }
  else
  {
    v59 = v109;
    v58 = v110;
    (*(void (**)(char *, uint64_t, uint64_t))(v110 + 32))(v109, v56, v57);
    v60 = (uint64_t)v84;
    (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v84, v59, v57);
    sub_1C07B2D8C(v60, 0, 1, v57);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0D99AAC();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v57);
  }
}

uint64_t sub_1C0A6B064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t result;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  char *v55;
  int *v56;
  void (*v57)(char *, uint64_t, uint64_t);
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67[2];
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t, uint64_t);
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  NSObject *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;

  v8 = v5;
  v77 = a4;
  v74 = a1;
  v75 = a2;
  v73 = type metadata accessor for StaticKnowledgeTriple();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v11);
  sub_1C07757E8(v12, v67[0]);
  sub_1C07ACF80(&qword_1ED759F70);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v13);
  sub_1C077AED0();
  v79 = v14;
  MEMORY[0x1E0C80A78](v15);
  v78 = (char *)v67 - v16;
  sub_1C077CF58();
  v68 = sub_1C106E41C();
  sub_1C0778688();
  MEMORY[0x1E0C80A78](v17);
  sub_1C077AED0();
  v71 = v18;
  MEMORY[0x1E0C80A78](v19);
  v88 = (uint64_t)v67 - v20;
  sub_1C077CF58();
  v21 = sub_1C106E590();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  sub_1C0778564();
  v25 = v24 - v23;
  v26 = sub_1C077585C();
  v87 = *(_QWORD *)(v26 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v27);
  sub_1C077962C();
  sub_1C106F154();
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
  v76 = a3;
  v70 = v28;
  v28((char *)v25, a3, v21);
  sub_1C07767B4();
  v29 = sub_1C106F538();
  v30 = sub_1C1070384();
  LODWORD(v85) = v30;
  if (os_log_type_enabled(v29, v30))
  {
    v31 = sub_1C0775854();
    v86 = v5;
    v32 = v31;
    v33 = sub_1C0775854();
    v83 = v33;
    *(_DWORD *)v32 = 134218243;
    v89 = *(_QWORD *)(a5 + 16);
    v90 = v33;
    v84 = v26;
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v32 + 12) = 2081;
    v81 = v32 + 14;
    sub_1C07803F8(&qword_1ED7625A0, (void (*)(uint64_t))MEMORY[0x1E0D3CE28]);
    v82 = v29;
    v34 = sub_1C1070C0C();
    v89 = sub_1C0788DAC(v34, v35, &v90);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v25, v21);
    sub_1C077E89C(&dword_1C0771000, v82, (os_log_type_t)v85, "GlobalKnowledgeDatabase: insertTriples: %ld triples for %{private}s", (uint8_t *)v32);
    sub_1C0778610();
    sub_1C0776778();
  }
  sub_1C07767AC();
  sub_1C0781D30(v25, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));

  result = (*(uint64_t (**)(uint64_t, uint64_t))(v87 + 8))(v6, v26);
  v37 = *(_QWORD *)(a5 + 16);
  v38 = v68;
  v39 = v79;
  if (v37)
  {
    v69 = v21;
    sub_1C07767B4();
    v67[1] = a5;
    v40 = (uint64_t *)(a5 + 56);
    while (1)
    {
      v41 = v7;
      v80 = v37;
      v86 = v8;
      v42 = *(v40 - 3);
      v43 = *(v40 - 1);
      v82 = *(v40 - 2);
      v44 = v40[4];
      v45 = v40[7];
      v46 = *v40;
      v47 = v40[1];
      v48 = v40[3];
      v87 = v40[5];
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v84 = v45;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      swift_bridgeObjectRetain_n();
      v85 = v43;
      sub_1C077AE90();
      v83 = v48;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v49 = (uint64_t)v78;
      sub_1C106E1DC();
      sub_1C077AEEC(v49, 1, v38);
      if (v50)
      {
        sub_1C078F230();
        sub_1C0784B6C(v49, &qword_1ED759F70);
        sub_1C0A6BBBC();
        sub_1C0775810();
        *(_QWORD *)v63 = v46;
        *(_QWORD *)(v63 + 8) = v47;
        *(_BYTE *)(v63 + 16) = 1;
        sub_1C077C0B8();
        swift_willThrow();
        sub_1C079DC90();
        sub_1C077873C();
        sub_1C07816B0();
        sub_1C077589C();
        return swift_bridgeObjectRelease();
      }
      v81 = v47;
      v51 = v41;
      v52 = v38;
      v53 = *(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 32);
      v53(v88, v49, v52);
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C078109C();
      sub_1C106E1DC();
      sub_1C077AEEC(v39, 1, v52);
      if (v50)
        break;
      v54 = v71;
      v53(v71, v39, v52);
      v55 = v72;
      v56 = (int *)v73;
      v70(&v72[*(int *)(v73 + 20)], v76, v69);
      v57 = *(void (**)(char *, uint64_t, uint64_t))(v51 + 16);
      v57(&v55[v56[6]], v88, v52);
      v58 = &v55[v56[7]];
      v59 = sub_1C106EB24();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v58, v77, v59);
      v57(&v55[v56[8]], v54, v52);
      sub_1C079DC90();
      sub_1C077873C();
      sub_1C07816B0();
      swift_bridgeObjectRelease();
      *(_QWORD *)v55 = v75;
      v60 = &v55[v56[9]];
      v61 = v85;
      *(_QWORD *)v60 = v82;
      *((_QWORD *)v60 + 1) = v61;
      *(_QWORD *)&v55[v56[10]] = v42;
      sub_1C07803F8(&qword_1ED747E58, (void (*)(uint64_t))type metadata accessor for StaticKnowledgeTriple);
      v62 = v86;
      sub_1C106BFC8();
      v38 = v52;
      v8 = v62;
      if (v62)
      {
        sub_1C07B1F90((uint64_t)v55, (uint64_t (*)(_QWORD))type metadata accessor for StaticKnowledgeTriple);
        sub_1C07B8410();
        sub_1C077F790();
        return swift_bridgeObjectRelease();
      }
      sub_1C077B100((uint64_t)v55);
      sub_1C07B8410();
      sub_1C077F790();
      v40 += 11;
      v39 = v79;
      v37 = v80 - 1;
      v7 = v51;
      if (v80 == 1)
        return swift_bridgeObjectRelease();
    }
    v64 = v44;
    sub_1C078F230();
    sub_1C0784B6C(v39, &qword_1ED759F70);
    sub_1C079DC90();
    if (!v87)
    {
      sub_1C077873C();
      v64 = 0;
      v87 = 0xE000000000000000;
    }
    sub_1C07816B0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C0A6BBBC();
    sub_1C0775810();
    v65 = v87;
    *(_QWORD *)v66 = v64;
    *(_QWORD *)(v66 + 8) = v65;
    *(_BYTE *)(v66 + 16) = 1;
    sub_1C077F130();
    return sub_1C078303C(v88, *(uint64_t (**)(uint64_t, uint64_t))(v41 + 8));
  }
  return result;
}

uint64_t sub_1C0A6B6D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;

  v44 = a7;
  v13 = sub_1C07ACF80(&qword_1ED755A10);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1C106EB24();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1C07ACF80((uint64_t *)&unk_1ED75EA40);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1C106E590();
  MEMORY[0x1E0C80A78](v23);
  if (!a5[2])
  {
    sub_1C0A6BBBC();
    swift_allocError();
    *(_QWORD *)v30 = 0xD000000000000040;
    *(_QWORD *)(v30 + 8) = 0x80000001C10F48F0;
    goto LABEL_5;
  }
  v42 = v17;
  v43 = v10;
  v45 = (uint64_t)&v40 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = v25;
  v26 = a5[13];
  v27 = a5[14];
  swift_bridgeObjectRetain_n();
  sub_1C089AC48(v26, v27, a6);
  swift_bridgeObjectRelease();
  if (sub_1C07B2D80((uint64_t)v22, 1, v23) == 1)
  {
    sub_1C0784B6C((uint64_t)v22, (uint64_t *)&unk_1ED75EA40);
    v46 = 0;
    v47 = 0xE000000000000000;
    sub_1C1070774();
    sub_1C106FC94();
    sub_1C106FC94();
    swift_bridgeObjectRelease();
    v28 = v46;
    v29 = v47;
    sub_1C0A6BBBC();
    swift_allocError();
    *(_QWORD *)v30 = v28;
    *(_QWORD *)(v30 + 8) = v29;
LABEL_5:
    *(_BYTE *)(v30 + 16) = 0;
    return swift_willThrow();
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v48 + 32))(v45, v22, v23);
  v32 = a5[10];
  if (v32)
  {
    v41 = v23;
    v33 = a5[9];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C089B174(v26, v27, v33, v32, v44);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (sub_1C07B2D80((uint64_t)v15, 1, v16) == 1)
    {
      sub_1C0784B6C((uint64_t)v15, &qword_1ED755A10);
      v46 = 0;
      v47 = 0xE000000000000000;
      sub_1C1070774();
      sub_1C106FC94();
      sub_1C106FC94();
      swift_bridgeObjectRelease();
      v34 = v46;
      v35 = v47;
      sub_1C0A6BBBC();
      swift_allocError();
      *(_QWORD *)v36 = v34;
      *(_QWORD *)(v36 + 8) = v35;
      *(_BYTE *)(v36 + 16) = 0;
      swift_willThrow();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v48 + 8))(v45, v41);
    }
    else
    {
      swift_bridgeObjectRelease();
      v38 = v42;
      (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v19, v15, v16);
      v39 = v45;
      sub_1C0A6B064(a9, a10, v45, (uint64_t)v19, (uint64_t)a5);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v19, v16);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v48 + 8))(v39, v41);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1C0A6BBBC();
    swift_allocError();
    *(_QWORD *)v37 = 0xD000000000000048;
    *(_QWORD *)(v37 + 8) = 0x80000001C10F4850;
    *(_BYTE *)(v37 + 16) = 0;
    swift_willThrow();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v48 + 8))(v45, v23);
  }
}

uint64_t sub_1C0A6BB28(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = sub_1C106E6C8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106E6E0();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  return sub_1C106E6D4();
}

unint64_t sub_1C0A6BBBC()
{
  unint64_t result;

  result = qword_1ED741528;
  if (!qword_1ED741528)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1099900, &unk_1E7A1C4B0);
    atomic_store(result, (unint64_t *)&qword_1ED741528);
  }
  return result;
}

unint64_t sub_1C0A6BBF8()
{
  unint64_t result;

  result = qword_1ED74BC28;
  if (!qword_1ED74BC28)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10998D8, &unk_1E7A1C418);
    atomic_store(result, (unint64_t *)&qword_1ED74BC28);
  }
  return result;
}

uint64_t sub_1C0A6BC34@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1C0A659B4(a1, *(char **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD **)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), a2);
}

uint64_t sub_1C0A6BC54()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for StaticKnowledgeAssetMetadataInManifest(0);
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  v3 = v0 + v2 + *(int *)(v1 + 24);
  v4 = sub_1C106F1CC();
  if (!sub_1C07B2D80(v3, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0A6BD18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(type metadata accessor for StaticKnowledgeAssetMetadataInManifest(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = (uint64_t *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v10 = *v9;
  v11 = v9[1];
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_1C0776FE4;
  return sub_1C0A67254(a1, v6, v7, v8, v10, v11);
}

uint64_t sub_1C0A6BDC4()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1C0A6BDE8()
{
  unint64_t result;

  result = qword_1ED760610;
  if (!qword_1ED760610)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B95A0, &unk_1E7A309B0);
    atomic_store(result, (unint64_t *)&qword_1ED760610);
  }
  return result;
}

unint64_t sub_1C0A6BE24()
{
  unint64_t result;

  result = qword_1ED751220;
  if (!qword_1ED751220)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B9D38, &type metadata for StaticGlobalKnowledgeTripleColumn);
    atomic_store(result, (unint64_t *)&qword_1ED751220);
  }
  return result;
}

unint64_t sub_1C0A6BE60()
{
  unint64_t result;

  result = qword_1ED7605F0;
  if (!qword_1ED7605F0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B9490, &unk_1E7A309B0);
    atomic_store(result, (unint64_t *)&qword_1ED7605F0);
  }
  return result;
}

unint64_t sub_1C0A6BE9C()
{
  unint64_t result;

  result = qword_1ED755F80;
  if (!qword_1ED755F80)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for StaticKnowledgeAsset, &type metadata for StaticKnowledgeAsset);
    atomic_store(result, (unint64_t *)&qword_1ED755F80);
  }
  return result;
}

uint64_t sub_1C0A6BED8(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C0A6BF14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t *v5;

  return sub_1C0A6B6D0(a1, a2, a3, a4, a5, v5[2], v5[3], v5[4], v5[5], v5[6]);
}

unint64_t sub_1C0A6BF40()
{
  unint64_t result;

  result = qword_1ED751200;
  if (!qword_1ED751200)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B9C90, &type metadata for StaticGlobalKnowledgeTripleColumn);
    atomic_store(result, (unint64_t *)&qword_1ED751200);
  }
  return result;
}

uint64_t sub_1C0A6BF7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1C0A694C8(a1, a2, a3, *(_QWORD **)(v3 + 16));
}

uint64_t sub_1C0A6BF84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1C0A69758(a1, a2, a3, *(uint64_t **)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32));
}

unint64_t sub_1C0A6BF90()
{
  unint64_t result;

  result = qword_1EF639DF8;
  if (!qword_1EF639DF8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1099858, &unk_1E7A1C378);
    atomic_store(result, (unint64_t *)&qword_1EF639DF8);
  }
  return result;
}

void _s27AssetToRunTimeMetadataErrorOMa()
{
  sub_1C0779604();
}

ValueMetadata *_s23SubjectRelationshipPairVMa()
{
  return &_s23SubjectRelationshipPairVN;
}

void _s19StaticAssetManifestVMa()
{
  sub_1C0779604();
}

uint64_t sub_1C0A6BFFC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 2u)
    return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return result;
}

uint64_t sub_1C0A6C014(uint64_t a1)
{
  return sub_1C0A6C024(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_1C0A6C024(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 2u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1C0A6C03C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1C0A6BFFC(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t sub_1C0A6C084(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1C0A6BFFC(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1C0A6C024(v6, v7, v8);
  return a1;
}

uint64_t sub_1C0A6C0D8(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1C0A6C024(v4, v5, v6);
  return a1;
}

uint64_t sub_1C0A6C11C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1C0A6C124(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

void _s28GlobalKnowledgeDatabaseErrorOMa()
{
  sub_1C0779604();
}

unint64_t sub_1C0A6C13C()
{
  unint64_t result;

  result = qword_1EF639E00;
  if (!qword_1EF639E00)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1099830, &unk_1E7A1C378);
    atomic_store(result, (unint64_t *)&qword_1EF639E00);
  }
  return result;
}

unint64_t sub_1C0A6C17C()
{
  unint64_t result;

  result = qword_1ED741530;
  if (!qword_1ED741530)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10997C8, &_s23SubjectRelationshipPairVN);
    atomic_store(result, (unint64_t *)&qword_1ED741530);
  }
  return result;
}

unint64_t sub_1C0A6C1B8()
{
  unint64_t result;

  result = qword_1ED74BC10;
  if (!qword_1ED74BC10)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1099A04, &_s19StaticAssetManifestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED74BC10);
  }
  return result;
}

uint64_t sub_1C0A6C1F4(unint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v8 = sub_1C07D4BEC(&qword_1ED74D2A8);
    sub_1C07803F8(a2, (void (*)(uint64_t))type metadata accessor for StaticKnowledgeAssetMetadataInManifest);
    v10 = v9;
    result = MEMORY[0x1C3BA8174](a4, v8, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s19StaticAssetManifestV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1C0A6C2B8 + 4 * byte_1C1099710[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1C0A6C2D8 + 4 * byte_1C1099715[v4]))();
}

_BYTE *sub_1C0A6C2B8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1C0A6C2D8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C0A6C2E0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C0A6C2E8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C0A6C2F0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C0A6C2F8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s19StaticAssetManifestV10CodingKeysOMa()
{
  return &_s19StaticAssetManifestV10CodingKeysON;
}

unint64_t sub_1C0A6C318()
{
  unint64_t result;

  result = qword_1EF639E20;
  if (!qword_1EF639E20)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10999DC, &_s19StaticAssetManifestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF639E20);
  }
  return result;
}

unint64_t sub_1C0A6C358()
{
  unint64_t result;

  result = qword_1ED74BC20;
  if (!qword_1ED74BC20)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109994C, &_s19StaticAssetManifestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED74BC20);
  }
  return result;
}

unint64_t sub_1C0A6C398()
{
  unint64_t result;

  result = qword_1ED74BC18;
  if (!qword_1ED74BC18)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1099974, &_s19StaticAssetManifestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED74BC18);
  }
  return result;
}

uint64_t sub_1C0A6C3D4()
{
  uint64_t result;

  sub_1C07ACF80(&qword_1ED7629F8);
  swift_allocObject();
  result = sub_1C0ECB2CC();
  qword_1ED78D9D0 = result;
  return result;
}

uint64_t *sub_1C0A6C414()
{
  if (qword_1ED762E70 != -1)
    swift_once();
  return &qword_1ED78D9D0;
}

unint64_t sub_1C0A6C454()
{
  sub_1C1070774();
  swift_bridgeObjectRelease();
  sub_1C106AB10();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  return 0xD00000000000001BLL;
}

_QWORD *sub_1C0A6C4E8(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD v23[6];
  uint64_t v24;
  uint64_t v25;

  v2 = v1;
  v23[5] = *v2;
  v4 = sub_1C106F544();
  v23[3] = *(_QWORD *)(v4 - 8);
  v23[4] = v4;
  MEMORY[0x1E0C80A78](v4);
  v23[2] = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C106AB28();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v23 - v11;
  sub_1C106AAC8();
  v13 = (char *)v2 + OBJC_IVAR____TtC24IntelligencePlatformCore23GlobalKnowledgeDatabase_url;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))((uint64_t)v2 + OBJC_IVAR____TtC24IntelligencePlatformCore23GlobalKnowledgeDatabase_url, v12, v6);
  v14 = (uint64_t)v2 + OBJC_IVAR____TtC24IntelligencePlatformCore23GlobalKnowledgeDatabase_config;
  sub_1C078E3E0(a1, (uint64_t)v2 + OBJC_IVAR____TtC24IntelligencePlatformCore23GlobalKnowledgeDatabase_config);
  v15 = *(int *)(type metadata accessor for Configuration() + 20);
  v24 = a1;
  v16 = *(_QWORD *)(a1 + v15);
  sub_1C07A896C();
  v17 = (v16 >> 1) & 4 | v16 & 2 | static NSUserDefaults.globalKnowledgeDatabaseLoggingEnabled.getter() & 1;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v13, v6);
  type metadata accessor for ErrorHandlingDatabasePool(0);
  swift_allocObject();
  v18 = v25;
  v19 = sub_1C09BB8DC((uint64_t)v10, v17);
  if (v18)
  {
    sub_1C078D09C(v24);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    sub_1C078D09C(v14);
    swift_deallocPartialClassInstance();
    return v2;
  }
  else
  {
    v21 = v24;
    *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC24IntelligencePlatformCore23GlobalKnowledgeDatabase_pool) = v19;
    sub_1C0A8D720();
    v20 = v2;
    if ((v16 & 0x100) != 0)
      sub_1C0A64D8C();
    sub_1C078D09C(v21);
  }
  return v20;
}

uint64_t sub_1C0A6C8A8()
{
  return sub_1C106AAC8();
}

uint64_t sub_1C0A6C8E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC24IntelligencePlatformCore23GlobalKnowledgeDatabase_url;
  v2 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  sub_1C078D09C(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore23GlobalKnowledgeDatabase_config);
  return v0;
}

uint64_t sub_1C0A6C944()
{
  sub_1C0A6C8E0();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0A6C968()
{
  return type metadata accessor for GlobalKnowledgeDatabase();
}

uint64_t type metadata accessor for GlobalKnowledgeDatabase()
{
  uint64_t result;

  result = qword_1ED7621C8;
  if (!qword_1ED7621C8)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1C0A6C9A8()
{
  return sub_1C0A6C454();
}

uint64_t sub_1C0A6C9C8()
{
  sub_1C0A6C414();
  return swift_retain();
}

uint64_t sub_1C0A6C9E4()
{
  return sub_1C0A6C8A8();
}

uint64_t sub_1C0A6C9F8()
{
  return swift_retain();
}

_QWORD *initializeBufferWithCopyOfBuffer for GlobalKnowledgeIndexHandler(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t destroy for GlobalKnowledgeIndexHandler()
{
  return swift_release();
}

_QWORD *assignWithCopy for GlobalKnowledgeIndexHandler(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for GlobalKnowledgeIndexHandler(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for GlobalKnowledgeIndexHandler(uint64_t *a1, unsigned int a2)
{
  int v2;
  uint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GlobalKnowledgeIndexHandler(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for GlobalKnowledgeIndexHandler()
{
  return &type metadata for GlobalKnowledgeIndexHandler;
}

uint64_t sub_1C0A6CB5C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  int v41;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t (*v65)(char *, uint64_t);
  char *v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t (*v70)(uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;

  v117 = a1;
  v102 = sub_1C106E7AC();
  v101 = *(_QWORD *)(v102 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v5);
  sub_1C077AE40();
  v100 = v6;
  sub_1C07ACF80(&qword_1ED756690);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v7);
  sub_1C077AE40();
  v113 = v8;
  sub_1C077CF58();
  v114 = sub_1C106D9B4();
  v112 = *(_QWORD *)(v114 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v9);
  sub_1C077AE40();
  v111 = v10;
  sub_1C077CF58();
  v11 = sub_1C106D2B8();
  v107 = *(_QWORD *)(v11 - 8);
  v108 = v11;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v12);
  sub_1C077AE40();
  v109 = v13;
  sub_1C07ACF80(&qword_1ED75EA10);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v14);
  sub_1C077AE40();
  v110 = v15;
  sub_1C077CF58();
  v16 = sub_1C106EB78();
  v116 = *(_QWORD *)(v16 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v17);
  sub_1C077AED0();
  v103 = v18;
  MEMORY[0x1E0C80A78](v19);
  v105 = (char *)&v97 - v20;
  sub_1C077CF58();
  v21 = sub_1C106CD78();
  v118 = *(_QWORD *)(v21 - 8);
  v119 = v21;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v22);
  sub_1C077AED0();
  v104 = v23;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v97 - v25;
  v124 = sub_1C106CD84();
  v121 = *(_QWORD *)(v124 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v97 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30);
  v32 = (uint64_t)&v97 - v31;
  v33 = sub_1C106E4AC();
  v34 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  MEMORY[0x1E0C80A78](v35);
  v39 = (char *)&v97 - v38;
  if (!a2)
  {
    v54 = sub_1C079AB50();
    sub_1C07803B8(&qword_1EF639E28, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3B790], MEMORY[0x1E0D3B798]);
    sub_1C07A0728();
    *v55 = 0xD000000000000025;
    v55[1] = 0x80000001C10F4A30;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v54 - 8) + 104))(v55, *MEMORY[0x1E0D3B788], v54);
    return sub_1C07A42CC();
  }
  v99 = v16;
  v106 = v37;
  v40 = v36;
  swift_retain();
  v120 = a2;
  sub_1C106D714();
  v41 = (*(uint64_t (**)(char *, uint64_t))(v34 + 88))(v39, v40);
  if (v41 == *MEMORY[0x1E0D3CD38]
    || v41 == *MEMORY[0x1E0D3CD08]
    || v41 == *MEMORY[0x1E0D3CD20]
    || v41 == *MEMORY[0x1E0D3CCF8]
    || v41 == *MEMORY[0x1E0D3CD30]
    || v41 == *MEMORY[0x1E0D3CD28]
    || v41 == *MEMORY[0x1E0D3CD00])
  {
    sub_1C079AB50();
    sub_1C07803B8(&qword_1EF639E28, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3B790], MEMORY[0x1E0D3B798]);
    sub_1C07A0728();
    v49 = v48;
    sub_1C07A6CA8();
    sub_1C078AFF0();
    sub_1C0798A8C();
    v50 = v106;
    sub_1C106D714();
    sub_1C07803B8(&qword_1EF639E30, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CD48], MEMORY[0x1E0D3CD68]);
    sub_1C1070C0C();
    sub_1C106FC94();
    swift_bridgeObjectRelease();
    v51 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 8))(v50, v40);
    v52 = v123;
    *v49 = v122;
    v49[1] = v52;
    sub_1C0796F00(v51, *MEMORY[0x1E0D3B788]);
    sub_1C07A42CC();
    return swift_release();
  }
  v98 = v34;
  if (v41 == *MEMORY[0x1E0D3CD18])
  {
    sub_1C106CD90();
    v56 = v121;
    v57 = v124;
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v121 + 88))(v32, v124) != *MEMORY[0x1E0D3B7B8])
    {
LABEL_35:
      v61 = sub_1C079AB50();
      sub_1C07803B8(&qword_1EF639E28, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3B790], MEMORY[0x1E0D3B798]);
      swift_allocError();
      v63 = v62;
      sub_1C07A6CA8();
      sub_1C078AFF0();
      sub_1C0798A8C();
      sub_1C07A3A88();
      sub_1C07803B8(&qword_1EF639E30, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CD48], MEMORY[0x1E0D3CD68]);
      sub_1C07ADD64();
      sub_1C0787E04();
      sub_1C0775834();
      sub_1C0796578();
      v64 = v123;
      *v63 = v122;
      v63[1] = v64;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v61 - 8) + 104))(v63, *MEMORY[0x1E0D3B788], v61);
      sub_1C07A42CC();
      sub_1C07A53F4();
      v65 = *(uint64_t (**)(char *, uint64_t))(v121 + 8);
      v66 = (char *)v32;
LABEL_36:
      v67 = v124;
      return v65(v66, v67);
    }
    v97 = a3;
    (*(void (**)(uint64_t, uint64_t))(v56 + 96))(v32, v57);
    (*(void (**)(char *, uint64_t, uint64_t))(v118 + 32))(v26, v32, v119);
    v32 = sub_1C0793B64();
    if (v32 < 0 || (sub_1C0793B64() & 0x8000000000000000) == 0)
    {
      sub_1C07ACF80(&qword_1ED7539F0);
      v77 = swift_allocObject();
      *(_OWORD *)(v77 + 16) = xmmword_1C1078FC0;
      *(_QWORD *)(v77 + 56) = &type metadata for FusedTripleColumn;
      v78 = sub_1C0A560EC();
      *(_QWORD *)(v77 + 64) = v78;
      *(_BYTE *)(v77 + 32) = 6;
      *(_QWORD *)(v77 + 96) = &type metadata for FusedTripleColumn;
      *(_QWORD *)(v77 + 104) = v78;
      *(_BYTE *)(v77 + 72) = 0;
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v107 + 104))(v109, *MEMORY[0x1E0D3BC00], v108);
      v79 = v110;
      sub_1C106D2D0();
      v80 = sub_1C106D2DC();
      sub_1C07B2D8C(v79, 0, 1, v80);
      v81 = (uint64_t)v105;
      sub_1C106EB54();
      v82 = v111;
      sub_1C106CD6C();
      v83 = v113;
      v84 = v99;
      sub_1C07804E0(v113, v81, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v116 + 16));
      sub_1C07B2D8C(v83, 0, 1, v84);
      sub_1C0BA469C(v82, v83);
      sub_1C0A6D714(v83);
      sub_1C079116C();
      sub_1C0A570B0();
      sub_1C0780490();
      sub_1C0791CF8();
      sub_1C079C594();
      sub_1C079B6B8();
      sub_1C07767F4();
      sub_1C0786458(v81, *(uint64_t (**)(uint64_t, uint64_t))(v116 + 8));
      v67 = v119;
      v65 = *(uint64_t (**)(char *, uint64_t))(v118 + 8);
      v66 = v26;
      return v65(v66, v67);
    }
LABEL_34:
    sub_1C1070948();
    __break(1u);
    goto LABEL_35;
  }
  if (v41 != *MEMORY[0x1E0D3CD10])
  {
    sub_1C079AB50();
    sub_1C07803B8(&qword_1EF639E28, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3B790], MEMORY[0x1E0D3B798]);
    sub_1C07A0728();
    v69 = v68;
    sub_1C07A6CA8();
    sub_1C078AFF0();
    sub_1C0798A8C();
    sub_1C07A3A88();
    sub_1C07803B8(&qword_1EF639E30, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CD48], MEMORY[0x1E0D3CD68]);
    sub_1C07ADD64();
    sub_1C0787E04();
    sub_1C0775834();
    v70 = *(uint64_t (**)(uint64_t, uint64_t))(v98 + 8);
    v71 = v70(v34, v40);
    v72 = v123;
    *v69 = v122;
    v69[1] = v72;
    sub_1C0796F00(v71, *MEMORY[0x1E0D3B788]);
    sub_1C07A42CC();
    sub_1C07A53F4();
    return v70((uint64_t)v39, v40);
  }
  sub_1C106CD90();
  v58 = (*(uint64_t (**)(char *, uint64_t))(v121 + 88))(v29, v124);
  if (v58 != *MEMORY[0x1E0D3B7B8])
  {
    if (v58 != *MEMORY[0x1E0D3B7B0])
    {
      v85 = sub_1C079AB50();
      sub_1C07803B8(&qword_1EF639E28, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3B790], MEMORY[0x1E0D3B798]);
      sub_1C07A0728();
      v87 = v86;
      sub_1C07A6CA8();
      sub_1C078AFF0();
      sub_1C0798A8C();
      sub_1C07A3A88();
      sub_1C07803B8(&qword_1EF639E30, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CD48], MEMORY[0x1E0D3CD68]);
      sub_1C07ADD64();
      sub_1C0787E04();
      sub_1C0775834();
      sub_1C0796578();
      v88 = v123;
      *v87 = v122;
      v87[1] = v88;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v85 - 8) + 104))(v87, *MEMORY[0x1E0D3B788], v85);
      sub_1C07A42CC();
      sub_1C07A53F4();
      v65 = *(uint64_t (**)(char *, uint64_t))(v121 + 8);
      v66 = v29;
      goto LABEL_36;
    }
    sub_1C079FF58();
    v73 = v101;
    v74 = v100;
    v75 = v102;
    sub_1C07804E0(v100, (uint64_t)v29, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v101 + 32));
    v76 = v115;
    GlobalKnowledgeStore.liveApiIdSearch(request:updateCache:lookupCache:serverTimeoutMs:)(v74, 1, 1, 700);
    if (!v76)
    {
      sub_1C0A57178();
      sub_1C0780490();
      sub_1C0791CF8();
      sub_1C079C594();
      sub_1C106D24C();
      sub_1C07767F4();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v73 + 8))(v74, v75);
    }
    sub_1C0786458(v74, *(uint64_t (**)(uint64_t, uint64_t))(v73 + 8));
    return swift_release();
  }
  sub_1C079FF58();
  (*(void (**)(uint64_t, char *, uint64_t))(v118 + 32))(v104, v29, v119);
  v32 = sub_1C0793B64();
  v97 = a3;
  if (v32 < 0)
  {
    v60 = v99;
  }
  else
  {
    v59 = sub_1C0793B64();
    v60 = v99;
    if (v59 < 0)
      goto LABEL_34;
  }
  sub_1C07ACF80(&qword_1ED7539F0);
  v89 = swift_allocObject();
  *(_OWORD *)(v89 + 16) = xmmword_1C1079220;
  *(_QWORD *)(v89 + 56) = &type metadata for FusedTripleColumn;
  *(_QWORD *)(v89 + 64) = sub_1C0A560EC();
  *(_BYTE *)(v89 + 32) = 0;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v107 + 104))(v109, *MEMORY[0x1E0D3BC00], v108);
  v90 = v110;
  sub_1C106D2D0();
  v91 = sub_1C106D2DC();
  sub_1C07B2D8C(v90, 0, 1, v91);
  v92 = v103;
  sub_1C106EB54();
  v93 = v111;
  v94 = v104;
  sub_1C106CD6C();
  v95 = v116;
  v96 = v113;
  sub_1C07804E0(v113, v92, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v116 + 16));
  sub_1C07B2D8C(v96, 0, 1, v60);
  sub_1C0BA46D4(v93, v96);
  sub_1C0A6D714(v96);
  sub_1C079116C();
  sub_1C0A57178();
  sub_1C0780490();
  sub_1C0791CF8();
  sub_1C079C594();
  sub_1C079B6B8();
  sub_1C07767F4();
  sub_1C0786458(v92, *(uint64_t (**)(uint64_t, uint64_t))(v95 + 8));
  return (*(uint64_t (**)(uint64_t, uint64_t))(v118 + 8))(v94, v119);
}

uint64_t sub_1C0A6D6F0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_1C0A6CB5C(a1, *v2, a2);
}

uint64_t sub_1C0A6D708()
{
  return MEMORY[0x1E0DEE9E8];
}

uint64_t sub_1C0A6D714(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C07ACF80(&qword_1ED756690);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0A6D758(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  unint64_t v13;
  _QWORD v15[2];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = sub_1C106E590();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x1E0DEE9D8];
  if (v7)
  {
    v15[1] = v1;
    v18 = MEMORY[0x1E0DEE9D8];
    sub_1C09D32B4();
    v8 = v18;
    v9 = type metadata accessor for StaticKnowledgeTriple();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v16 = *(_QWORD *)(v10 + 72);
    v17 = v9;
    v12 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    do
    {
      v12(v6, v11 + *(int *)(v17 + 20), v3);
      v18 = v8;
      v13 = *(_QWORD *)(v8 + 16);
      if (v13 >= *(_QWORD *)(v8 + 24) >> 1)
      {
        sub_1C09D32B4();
        v8 = v18;
      }
      *(_QWORD *)(v8 + 16) = v13 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v13, v6, v3);
      v11 += v16;
      --v7;
    }
    while (v7);
  }
  return v8;
}

void sub_1C0A6D8C8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, unint64_t, uint64_t);
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v39;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v41;
  _QWORD v42[2];
  void (*v43)(void);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v43 = a3;
  v49 = sub_1C106E41C();
  v45 = *(_QWORD *)(v49 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v7);
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v8);
  sub_1C0778674();
  v44 = v9;
  sub_1C077CF58();
  v10 = sub_1C106E590();
  v59 = *(_QWORD *)(v10 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v11);
  sub_1C0783118();
  v50 = type metadata accessor for StaticKnowledgeTriple();
  v55 = *(_QWORD *)(v50 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v12);
  sub_1C077AED0();
  v46 = v13;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v14);
  v16 = (unint64_t)v42 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v42 - v18;
  MEMORY[0x1E0C80A78](v20);
  sub_1C0778674();
  v58 = v21;
  v66 = MEMORY[0x1E0DEE9D8];
  v22 = *(_QWORD *)(a1 + 16);
  v61 = a2;
  v54 = v22;
  if (!v22)
  {
LABEL_33:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  v42[0] = v4;
  v23 = 0;
  v60 = a2 + 56;
  v24 = a2;
  v25 = v58;
  v52 = v16;
  v53 = a1;
  v51 = v19;
  while (v23 < *(_QWORD *)(a1 + 16))
  {
    v26 = (*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
    v56 = *(_QWORD *)(v55 + 72);
    v57 = v26;
    sub_1C07E05C8(a1 + v26 + v56 * v23, v25, (uint64_t (*)(_QWORD))type metadata accessor for StaticKnowledgeTriple);
    if (!*(_QWORD *)(v24 + 16)
      || (sub_1C0794BAC((unint64_t *)&qword_1ED7618F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE40]), v27 = sub_1C106FA00(), v24 = v61, v28 = -1 << *(_BYTE *)(v61 + 32), v16 = v27 & ~v28, ((*(_QWORD *)(v60 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0))
    {
LABEL_9:
      v25 = v58;
      v33 = (uint64_t)v51;
      sub_1C07E05C8(v58, (uint64_t)v51, (uint64_t (*)(_QWORD))type metadata accessor for StaticKnowledgeTriple);
      sub_1C079D510(v33);
      sub_1C0797EC8(v25);
LABEL_10:
      sub_1C079D510(v16);
      goto LABEL_11;
    }
    v29 = ~v28;
    v30 = *(_QWORD *)(v59 + 72);
    v31 = *(void (**)(uint64_t, unint64_t, uint64_t))(v59 + 16);
    while (1)
    {
      v31(v3, *(_QWORD *)(v24 + 48) + v30 * v16, v10);
      sub_1C0794BAC(&qword_1ED75EA38, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE50]);
      v32 = sub_1C106FAA8();
      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v3, v10);
      if ((v32 & 1) != 0)
        break;
      v16 = (v16 + 1) & v29;
      v24 = v61;
      if (((*(_QWORD *)(v60 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
        goto LABEL_9;
    }
    v16 = (unint64_t)type metadata accessor for StaticKnowledgeTriple;
    sub_1C07E05C8(v58, (uint64_t)v51, (uint64_t (*)(_QWORD))type metadata accessor for StaticKnowledgeTriple);
    sub_1C106DEAC();
    sub_1C0794BAC(&qword_1ED75E7E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC80]);
    v35 = v34;
    sub_1C078BB20();
    v48 = v35;
    sub_1C106FE44();
    v36 = v63;
    if (v64 == v62 && v65 == v63)
    {
      sub_1C0782990();
      sub_1C0791180();
      sub_1C079BECC();
      v16 = v52;
      sub_1C07E05C8(v58, v52, (uint64_t (*)(_QWORD))type metadata accessor for StaticKnowledgeTriple);
    }
    else
    {
      LODWORD(v47) = sub_1C078CAC4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C0791180();
      sub_1C079BECC();
      v25 = v58;
      sub_1C0797EC8(v58);
      v24 = v61;
      if ((v47 & 1) == 0)
        goto LABEL_10;
    }
    v47 = v36;
    v43();
    sub_1C078BB20();
    sub_1C078BB20();
    if (v64 == v62 && v65 == v63)
    {
      sub_1C0782990();
      sub_1C079463C();
      sub_1C079D510(v16);
      v25 = v58;
LABEL_28:
      sub_1C07E05F4(v25, v46, (uint64_t (*)(_QWORD))type metadata accessor for StaticKnowledgeTriple);
      v39 = v66;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      a1 = v53;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1C09D3DC4();
        v39 = v66;
      }
      v41 = *(_QWORD *)(v39 + 16);
      if (v41 >= *(_QWORD *)(v39 + 24) >> 1)
      {
        sub_1C09D3DC4();
        v39 = v66;
      }
      *(_QWORD *)(v39 + 16) = v41 + 1;
      sub_1C07E05F4(v46, v39 + v57 + v41 * v56, (uint64_t (*)(_QWORD))type metadata accessor for StaticKnowledgeTriple);
      v24 = v61;
      v25 = v58;
      goto LABEL_12;
    }
    LODWORD(v48) = sub_1C078CAC4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C079463C();
    sub_1C079D510(v16);
    v24 = v61;
    v25 = v58;
    if ((v48 & 1) != 0)
      goto LABEL_28;
LABEL_11:
    sub_1C079D510(v25);
    a1 = v53;
LABEL_12:
    if (++v23 == v54)
      goto LABEL_33;
  }
  __break(1u);
}

uint64_t sub_1C0A6DE58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v9;

  sub_1C07ACF80(&qword_1ED75E798);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v1);
  v2 = sub_1C0783118();
  v3 = type metadata accessor for StaticKnowledgeAssetMetadata(v2);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t *)((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0A742CC(0x6C6542726F697250, 0xEC00000073666569);
  if (sub_1C07B2D80(v0, 1, v3) == 1)
  {
    sub_1C0784B6C(v0, &qword_1ED75E798);
    return 0;
  }
  else
  {
    sub_1C079B52C(v0, (uint64_t)v6);
    v7 = *v6;
    sub_1C07B1F90((uint64_t)v6, type metadata accessor for StaticKnowledgeAssetMetadata);
  }
  return v7;
}

uint64_t sub_1C0A6DF58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (**v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  char *v54;
  uint64_t v55;
  uint64_t *v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  BOOL v64;
  uint64_t v65;
  char v66;
  char *v67;
  unint64_t v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  uint8_t *v72;
  uint64_t v73;
  void (*v74)(uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t (*v88)();
  uint64_t v89;
  uint64_t v90;
  uint64_t (*v91)();
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _BYTE *v96;
  char v97;
  int v98;
  char v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(char *, uint64_t, uint64_t);
  unint64_t v104;
  char v105;
  unint64_t v106;
  char v107;
  unint64_t v108;
  char v109;
  uint64_t v110;
  BOOL v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  char *v121;
  void (*v122)(char *, uint64_t, uint64_t);
  uint64_t *v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  char v127;
  unint64_t v128;
  char v129;
  char v130;
  unint64_t v131;
  char v132;
  uint64_t v133;
  _QWORD *v134;
  _QWORD *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t *v138;
  NSObject *v139;
  os_log_type_t v140;
  uint8_t *v141;
  unint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t (*v147)(uint64_t);
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  BOOL v153;
  char v154;
  uint64_t v155;
  uint64_t v156;
  char v158;
  char *v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t (*v167)();
  uint64_t v168;
  uint64_t *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  _BYTE *v173;
  char v174;
  int v175;
  char v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t (*v179)();
  uint64_t v180;
  uint64_t v181;
  void (*v182)(uint64_t, uint64_t, uint64_t);
  uint64_t v183;
  unint64_t v184;
  char v185;
  unint64_t v186;
  char v187;
  unint64_t v188;
  char v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  unint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char v202;
  uint64_t v203;
  uint64_t v204;
  char v206;
  char *v207;
  unint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  char v214;
  uint64_t v215;
  char v216;
  uint64_t v217;
  unint64_t v218;
  char v219;
  unint64_t v220;
  char v221;
  unint64_t v222;
  char v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  char v237;
  uint64_t v238;
  unint64_t v239;
  char v240;
  unint64_t v241;
  char v242;
  unint64_t v243;
  char v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  void (*v253)(uint64_t);
  uint64_t v255[2];
  uint64_t v256;
  char *v257;
  uint64_t v258;
  char *v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  char *v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  char *v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t *v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t *v281;
  void (**v282)(char *, uint64_t);
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  _QWORD *v288;
  uint64_t v289;
  char *v290;

  v281 = (uint64_t *)a1;
  v270 = sub_1C106E590();
  v269 = *(_QWORD *)(v270 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v2);
  v275 = (char *)v255 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C077CF58();
  v284 = sub_1C106E41C();
  v282 = *(void (***)(char *, uint64_t))(v284 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v255 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  sub_1C0779728();
  v274 = v8;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v255 - v10;
  MEMORY[0x1E0C80A78](v12);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v255 - v14;
  v16 = sub_1C106EB24();
  v276 = *(_QWORD *)(v16 - 8);
  v277 = v16;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v17);
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v18);
  sub_1C0778674();
  v265 = v19;
  sub_1C077CF58();
  v285 = type metadata accessor for StaticKnowledgeTriple();
  v283 = *(_QWORD *)(v285 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v20);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v21);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v22);
  sub_1C0779728();
  v279 = v23;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v24);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v25);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v26);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v27);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v28);
  sub_1C0779728();
  v278 = (uint64_t *)v29;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v30);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)v255 - v32;
  MEMORY[0x1E0C80A78](v34);
  sub_1C0778674();
  v280 = v35;
  sub_1C077CF58();
  v262 = sub_1C106ED70();
  v260 = *(_QWORD *)(v262 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v36);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v37);
  v39 = (void (**)(char *, uint64_t))((char *)v255 - v38);
  v40 = sub_1C106F544();
  v257 = *(char **)(v40 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v41);
  MEMORY[0x1E0C80A78](v42);
  sub_1C0778674();
  v255[1] = v43;
  sub_1C07ACF80(&qword_1ED7623F8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v44);
  sub_1C0783118();
  v45 = type metadata accessor for Source();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v46);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v47);
  sub_1C0778674();
  v256 = v48;
  v49 = sub_1C0A6DE58();
  if ((v50 & 1) != 0)
  {
    sub_1C106F154();
    v70 = sub_1C106F538();
    v71 = sub_1C1070390();
    if (os_log_type_enabled(v70, v71))
    {
      v72 = (uint8_t *)sub_1C0775854();
      *(_WORD *)v72 = 0;
      _os_log_impl(&dword_1C0771000, v70, v71, "ConfidenceMap: Prior Beliefs unavailable", v72, 2u);
      sub_1C0776778();
    }

    v73 = sub_1C079F58C();
    v74(v73);
    sub_1C0794BAC(&qword_1ED759FD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D7B0], MEMORY[0x1E0D3D7C0]);
    return sub_1C0785024();
  }
  v259 = v6;
  MEMORY[0x1E0C80A78](v49);
  v255[-2] = v51;
  swift_retain();
  v52 = sub_1C0BB962C((uint64_t)sub_1C0A6FCB0, (uint64_t)&v255[-4]);
  swift_release();
  sub_1C0A6FCC8((uint64_t)v281, v1);
  v53 = sub_1C07B2D80(v1, 1, v45);
  v281 = (uint64_t *)v52;
  if (v53 != 1)
  {
    v76 = v256;
    sub_1C07E05F4(v1, v256, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    MEMORY[0x1E0C80A78](v77);
    v255[-2] = v76;
    sub_1C077584C();
    sub_1C0D2F48C((uint64_t (*)(char *))sub_1C0A6FD28, (uint64_t)&v255[-4], v52);
    if (*(_QWORD *)(v78 + 16))
    {
      v282 = v39;
      sub_1C0A6D758(v78);
      sub_1C07767AC();
      sub_1C0898DB0();
      v80 = v79;
      sub_1C077584C();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v279 = v80;
      sub_1C0A6D8C8(v52, v80, (void (*)(void))MEMORY[0x1E0D3C728]);
      v82 = *(_QWORD *)(v81 + 16);
      v278 = (uint64_t *)v81;
      if (v82)
      {
        sub_1C07A3A98();
        v85 = v83 + v84;
        v284 = *(_QWORD *)(v86 + 72);
        v87 = (_QWORD *)MEMORY[0x1E0DEE9E0];
        v88 = type metadata accessor for StaticKnowledgeTriple;
        v89 = v285;
        v90 = v280;
        while (1)
        {
          v91 = v88;
          sub_1C07E05C8(v85, v90, (uint64_t (*)(_QWORD))v88);
          v92 = (uint64_t *)(v90 + *(int *)(v89 + 36));
          v94 = *v92;
          v93 = v92[1];
          v286 = 0;
          MEMORY[0x1E0C80A78](v95);
          v255[-2] = (uint64_t)&v286;
          if ((v93 & 0x1000000000000000) != 0 || !(v93 & 0x2000000000000000 | v94 & 0x1000000000000000))
          {
            sub_1C077AE90();
            sub_1C1070750();
            sub_1C077960C();
            v90 = v280;
            goto LABEL_40;
          }
          if ((v93 & 0x2000000000000000) == 0)
          {
            if ((v94 & 0x1000000000000000) != 0)
              v96 = (_BYTE *)((v93 & 0xFFFFFFFFFFFFFFFLL) + 32);
            else
              v96 = (_BYTE *)sub_1C078657C();
            switch(*v96)
            {
              case 0:
              case 9:
              case 0xA:
              case 0xB:
              case 0xC:
              case 0xD:
                goto LABEL_32;
              case 1:
              case 2:
              case 3:
              case 4:
              case 5:
              case 6:
              case 7:
              case 8:
                goto LABEL_53;
              default:
                if (*v96 == 32)
                {
LABEL_32:
                  sub_1C077AE90();
LABEL_33:
                  v97 = 0;
                  goto LABEL_34;
                }
LABEL_53:
                sub_1C077AE90();
                if (!_swift_stdlib_strtod_clocale())
                  goto LABEL_33;
                sub_1C07A26A8();
LABEL_34:
                v90 = v280;
                LOBYTE(v290) = v97;
                sub_1C077960C();
                break;
            }
            goto LABEL_40;
          }
          sub_1C07AA818();
          if (!(!v64 & v99))
            __asm { BR              X9 }
          v90 = v280;
          if (v98 == 32)
          {
            sub_1C077AE90();
          }
          else
          {
            sub_1C077AE90();
            if (sub_1C07BCEC0())
            {
              sub_1C07A26A8();
              goto LABEL_39;
            }
          }
          v100 = 0;
LABEL_39:
          LOBYTE(v290) = v100;
          sub_1C077960C();
LABEL_40:
          if ((v290 & 1) != 0)
          {
            v101 = v286;
            v102 = v90 + *(int *)(v89 + 28);
            v103 = *(void (**)(char *, uint64_t, uint64_t))(v276 + 16);
            v103(v265, v102, v277);
            swift_isUniquelyReferenced_nonNull_native();
            v288 = v87;
            sub_1C07DCD20();
            if (__OFADD__(v87[2], (v105 & 1) == 0))
              goto LABEL_214;
            v106 = v104;
            v107 = v105;
            sub_1C07ACF80(&qword_1ED75D390);
            if ((sub_1C107090C() & 1) != 0)
            {
              sub_1C07DCD20();
              if ((v107 & 1) != (v109 & 1))
                goto LABEL_221;
              v106 = v108;
            }
            v87 = v288;
            if ((v107 & 1) != 0)
            {
              *(_QWORD *)(v288[7] + 8 * v106) = v101;
            }
            else
            {
              sub_1C0797344((uint64_t)&v288[v106 >> 6]);
              v103((char *)(v87[6] + *(_QWORD *)(v276 + 72) * v106), (uint64_t)v265, v277);
              *(_QWORD *)(v87[7] + 8 * v106) = v101;
              v110 = v87[2];
              v111 = __OFADD__(v110, 1);
              v112 = v110 + 1;
              if (v111)
                goto LABEL_217;
              v87[2] = v112;
            }
            sub_1C077970C();
            (*(void (**)(char *, uint64_t))(v276 + 8))(v265, v277);
            v89 = v285;
            v90 = v280;
          }
          v88 = v91;
          sub_1C07B1F90(v90, (uint64_t (*)(_QWORD))v91);
          v85 += v284;
          if (!--v82)
            goto LABEL_188;
        }
      }
      v87 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_188:
      swift_bridgeObjectRelease();
      sub_1C0A6D8C8((uint64_t)v281, v279, (void (*)(void))MEMORY[0x1E0D3CBB0]);
      v230 = v229;
      v231 = *(_QWORD *)(v229 + 16);
      if (v231)
      {
        sub_1C07A3A98();
        v233 = v230 + v232;
        v235 = *(_QWORD *)(v234 + 72);
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v75 = MEMORY[0x1E0DEE9E0];
        do
        {
          if (v87[2])
          {
            sub_1C07DCD20();
            if ((v237 & 1) != 0)
            {
              v238 = *(_QWORD *)(v87[7] + 8 * v236);
              sub_1C077B20C();
              sub_1C07B8420();
              swift_isUniquelyReferenced_nonNull_native();
              v288 = (_QWORD *)v75;
              sub_1C07DD240();
              sub_1C07A3180();
              if (v111)
                goto LABEL_216;
              v241 = v239;
              v242 = v240;
              sub_1C07ACF80(&qword_1EF639E38);
              if ((sub_1C107090C() & 1) != 0)
              {
                sub_1C07DD240();
                if ((v242 & 1) != (v244 & 1))
                  goto LABEL_221;
                v241 = v243;
              }
              v75 = (uint64_t)v288;
              if ((v242 & 1) != 0)
              {
                *(_QWORD *)(v288[7] + 8 * v241) = v238;
                v245 = (uint64_t)v282;
              }
              else
              {
                v288[(v241 >> 6) + 8] |= 1 << v241;
                sub_1C07B9728();
                v245 = (uint64_t)v282;
                sub_1C079EEEC(v246 + v247 * v241, (uint64_t)v282, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v248 + 16));
                *(_QWORD *)(*(_QWORD *)(v75 + 56) + 8 * v241) = v238;
                v249 = *(_QWORD *)(v75 + 16);
                v111 = __OFADD__(v249, 1);
                v250 = v249 + 1;
                if (v111)
                  goto LABEL_218;
                *(_QWORD *)(v75 + 16) = v250;
              }
              sub_1C077970C();
              sub_1C07B17EC(v245, *(uint64_t (**)(uint64_t, _QWORD))(v260 + 8));
            }
          }
          v233 += v235;
          --v231;
        }
        while (v231);
        swift_bridgeObjectRelease();
      }
      else
      {
        v75 = MEMORY[0x1E0DEE9E0];
      }
      sub_1C07767AC();
      swift_bridgeObjectRelease();
      v251 = v256;
    }
    else
    {
      sub_1C07767AC();
      swift_bridgeObjectRelease();
      sub_1C106F154();
      v138 = (uint64_t *)v255[0];
      sub_1C07E05C8(v76, v255[0], (uint64_t (*)(_QWORD))type metadata accessor for Source);
      v139 = sub_1C106F538();
      v140 = sub_1C1070390();
      if (os_log_type_enabled(v139, v140))
      {
        v141 = (uint8_t *)sub_1C0775854();
        v288 = (_QWORD *)sub_1C0775854();
        *(_DWORD *)v141 = 136315138;
        v285 = v40;
        v143 = *v138;
        v142 = v138[1];
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v286 = sub_1C0788DAC(v143, v142, (uint64_t *)&v288);
        sub_1C10705AC();
        swift_bridgeObjectRelease();
        sub_1C07B1F90((uint64_t)v138, (uint64_t (*)(_QWORD))type metadata accessor for Source);
        _os_log_impl(&dword_1C0771000, v139, v140, "ConfidenceMap: Prior Beliefs for source %s unavailable", v141, 0xCu);
        swift_arrayDestroy();
        sub_1C0776778();
      }
      sub_1C07B1F90((uint64_t)v138, (uint64_t (*)(_QWORD))type metadata accessor for Source);

      v252 = sub_1C079F58C();
      v253(v252);
      sub_1C0794BAC(&qword_1ED759FD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D7B0], MEMORY[0x1E0D3D7C0]);
      v75 = sub_1C0785024();
      v251 = v76;
    }
    sub_1C07B1F90(v251, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    return v75;
  }
  v54 = (char *)MEMORY[0x1E0DEE9D8];
  sub_1C0784B6C(v1, &qword_1ED7623F8);
  v290 = v54;
  v55 = *(_QWORD *)(v52 + 16);
  sub_1C077584C();
  v56 = (uint64_t *)v52;
  v280 = v55;
  v265 = v11;
  if (v55)
  {
    v57 = 0;
    v58 = v284;
    while (1)
    {
      if (v57 >= v56[2])
      {
        __break(1u);
LABEL_209:
        __break(1u);
LABEL_210:
        __break(1u);
LABEL_211:
        __break(1u);
LABEL_212:
        __break(1u);
LABEL_213:
        __break(1u);
LABEL_214:
        __break(1u);
LABEL_215:
        __break(1u);
LABEL_216:
        __break(1u);
LABEL_217:
        __break(1u);
LABEL_218:
        __break(1u);
LABEL_219:
        __break(1u);
LABEL_220:
        __break(1u);
LABEL_221:
        sub_1C1070D44();
        __break(1u);
        JUMPOUT(0x1C0A6F9C0);
      }
      sub_1C07A8034();
      v61 = v60 & ~v59;
      v63 = *(_QWORD *)(v62 + 72);
      sub_1C07E05C8((uint64_t)v56 + v61 + v63 * v57, (uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for StaticKnowledgeTriple);
      sub_1C106E248();
      sub_1C0794BAC(&qword_1ED75E7E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC80]);
      sub_1C077B06C();
      sub_1C077B06C();
      v64 = v288 == (_QWORD *)v286 && v289 == v287;
      if (v64)
        break;
      v65 = v58;
      v66 = sub_1C07785B0();
      sub_1C07767AC();
      sub_1C077960C();
      v282[1](v15, v65);
      if ((v66 & 1) != 0)
        goto LABEL_13;
      sub_1C07B1F90((uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for StaticKnowledgeTriple);
LABEL_18:
      ++v57;
      v56 = v281;
      v58 = v284;
      v69 = (uint64_t)v278;
      if (v280 == v57)
      {
        v54 = v290;
        goto LABEL_61;
      }
    }
    swift_bridgeObjectRelease_n();
    v282[1](v15, v58);
LABEL_13:
    sub_1C079B52C((uint64_t)v33, v273);
    v67 = v290;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C07A4768();
      v67 = v290;
    }
    v68 = *((_QWORD *)v67 + 2);
    if (v68 >= *((_QWORD *)v67 + 3) >> 1)
    {
      sub_1C078F5E8();
      v67 = v290;
    }
    *((_QWORD *)v67 + 2) = v68 + 1;
    sub_1C079B52C(v273, (uint64_t)&v67[v61 + v68 * v63]);
    goto LABEL_18;
  }
  v69 = (uint64_t)v278;
LABEL_61:
  sub_1C077960C();
  v113 = *((_QWORD *)v54 + 2);
  v114 = v285;
  v115 = v270;
  v116 = v269;
  if (v113)
  {
    sub_1C07A3A98();
    v118 = (uint64_t)&v54[v117];
    v273 = *(_QWORD *)(v119 + 72);
    v257 = v54;
    swift_retain();
    v120 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v121 = v275;
    do
    {
      sub_1C07E05C8(v118, v69, (uint64_t (*)(_QWORD))type metadata accessor for StaticKnowledgeTriple);
      v122 = *(void (**)(char *, uint64_t, uint64_t))(v116 + 16);
      v122(v121, v69 + *(int *)(v114 + 20), v115);
      v123 = (uint64_t *)(v69 + *(int *)(v114 + 36));
      v125 = *v123;
      v124 = v123[1];
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C077C09C();
      v288 = v120;
      sub_1C07DCD84();
      if (__OFADD__(v120[2], (v127 & 1) == 0))
        goto LABEL_209;
      v128 = v126;
      v129 = v127;
      sub_1C07ACF80(&qword_1ED756560);
      v130 = sub_1C107090C();
      v114 = v285;
      v116 = v269;
      if ((v130 & 1) != 0)
      {
        sub_1C07DCD84();
        if ((v129 & 1) != (v132 & 1))
          goto LABEL_221;
        v128 = v131;
      }
      v120 = v288;
      if ((v129 & 1) != 0)
      {
        v133 = (uint64_t)v288;
        v134 = (_QWORD *)(v288[7] + 16 * v128);
        swift_bridgeObjectRelease();
        *v134 = v125;
        v134[1] = v124;
        v120 = (_QWORD *)v133;
        v115 = v270;
      }
      else
      {
        v288[(v128 >> 6) + 8] |= 1 << v128;
        v115 = v270;
        v122((char *)(v120[6] + *(_QWORD *)(v116 + 72) * v128), (uint64_t)v275, v270);
        v135 = (_QWORD *)(v120[7] + 16 * v128);
        *v135 = v125;
        v135[1] = v124;
        v136 = v120[2];
        v111 = __OFADD__(v136, 1);
        v137 = v136 + 1;
        if (v111)
          goto LABEL_212;
        v120[2] = v137;
      }
      sub_1C077970C();
      v121 = v275;
      (*(void (**)(char *, uint64_t))(v116 + 8))(v275, v115);
      v69 = (uint64_t)v278;
      sub_1C07B1F90((uint64_t)v278, (uint64_t (*)(_QWORD))type metadata accessor for StaticKnowledgeTriple);
      v118 += v273;
      --v113;
    }
    while (v113);
    v273 = (uint64_t)v120;
    swift_release();
    v56 = v281;
  }
  else
  {
    v273 = MEMORY[0x1E0DEE9E0];
  }
  swift_release();
  v144 = (char *)MEMORY[0x1E0DEE9D8];
  v290 = (char *)MEMORY[0x1E0DEE9D8];
  sub_1C077AE90();
  v145 = v268;
  if (!v280)
    goto LABEL_102;
  v146 = 0;
  v147 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50];
  v148 = v261;
  do
  {
    if (v146 >= v56[2])
      goto LABEL_210;
    sub_1C07A8034();
    v151 = v150 & ~v149;
    v275 = *(char **)(v152 + 72);
    sub_1C079CC24((uint64_t)v56 + v151 + (_QWORD)v275 * v146, v145);
    sub_1C106DEAC();
    sub_1C0794BAC(&qword_1ED75E7E0, v147, MEMORY[0x1E0D3CC80]);
    sub_1C078AB24();
    sub_1C078AB24();
    v153 = v288 == (_QWORD *)v286 && v289 == v287;
    v278 = (uint64_t *)v151;
    if (v153)
      v154 = 1;
    else
      v154 = sub_1C07785B0();
    sub_1C077960C();
    swift_bridgeObjectRelease();
    sub_1C079C43C(v148);
    v155 = v145;
    v156 = v267;
    sub_1C079CC24(v155, v267);
    if ((v154 & 1) == 0)
    {
      sub_1C07AAEC0();
LABEL_93:
      v145 = v268;
      sub_1C07AAEC0();
      v56 = v281;
      goto LABEL_100;
    }
    sub_1C106DCCC();
    sub_1C078AB24();
    sub_1C078AB24();
    if (v288 == (_QWORD *)v286 && v289 == v287)
    {
      sub_1C0782990();
      sub_1C0795A64();
      sub_1C07B1F90(v156, (uint64_t (*)(_QWORD))type metadata accessor for StaticKnowledgeTriple);
      v148 = v261;
      v147 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50];
    }
    else
    {
      v158 = sub_1C07785B0();
      sub_1C077960C();
      swift_bridgeObjectRelease();
      sub_1C0795A64();
      sub_1C07B1F90(v156, (uint64_t (*)(_QWORD))type metadata accessor for StaticKnowledgeTriple);
      v148 = v261;
      v147 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50];
      if ((v158 & 1) == 0)
        goto LABEL_93;
    }
    v145 = v268;
    sub_1C07E05F4(v268, v264, (uint64_t (*)(_QWORD))type metadata accessor for StaticKnowledgeTriple);
    v159 = v290;
    if ((sub_1C077C09C() & 1) == 0)
    {
      sub_1C07A4768();
      v159 = v290;
    }
    v160 = (uint64_t)v278;
    v161 = *((_QWORD *)v159 + 2);
    if (v161 >= *((_QWORD *)v159 + 3) >> 1)
    {
      sub_1C078F5E8();
      v159 = v290;
    }
    *((_QWORD *)v159 + 2) = v161 + 1;
    sub_1C07E05F4(v264, (uint64_t)&v159[v160 + v161 * (_QWORD)v275], (uint64_t (*)(_QWORD))type metadata accessor for StaticKnowledgeTriple);
    v56 = v281;
LABEL_100:
    ++v146;
  }
  while (v280 != v146);
  v144 = v290;
LABEL_102:
  sub_1C077960C();
  v162 = *((_QWORD *)v144 + 2);
  if (v162)
  {
    sub_1C07A3A98();
    v164 = (uint64_t)&v144[v163];
    v166 = *(_QWORD *)(v165 + 72);
    v275 = v144;
    swift_retain();
    v270 = 0;
    v278 = (uint64_t *)MEMORY[0x1E0DEE9E0];
    v167 = type metadata accessor for StaticKnowledgeTriple;
    v168 = v272;
    while (1)
    {
      sub_1C079CC24(v164, v168);
      v169 = (uint64_t *)(v168 + *(int *)(v285 + 36));
      v171 = *v169;
      v170 = v169[1];
      v286 = 0;
      MEMORY[0x1E0C80A78](v172);
      v255[-2] = (uint64_t)&v286;
      if ((v170 & 0x1000000000000000) != 0 || !(v170 & 0x2000000000000000 | v171 & 0x1000000000000000))
      {
        sub_1C077AE90();
        v194 = v270;
        sub_1C1070750();
        v270 = v194;
      }
      else
      {
        if ((v170 & 0x2000000000000000) != 0)
        {
          sub_1C07AA818();
          if (!(!v64 & v99))
            __asm { BR              X9 }
          if (v175 == 32)
          {
            sub_1C077AE90();
          }
          else
          {
            sub_1C077AE90();
            if (sub_1C07BCEC0())
            {
              sub_1C07A26A8();
              goto LABEL_118;
            }
          }
          v176 = 0;
LABEL_118:
          LOBYTE(v290) = v176;
          sub_1C077960C();
          goto LABEL_119;
        }
        if ((v171 & 0x1000000000000000) != 0)
          v173 = (_BYTE *)((v170 & 0xFFFFFFFFFFFFFFFLL) + 32);
        else
          v173 = (_BYTE *)sub_1C078657C();
        switch(*v173)
        {
          case 0:
          case 9:
          case 0xA:
          case 0xB:
          case 0xC:
          case 0xD:
            goto LABEL_110;
          case 1:
          case 2:
          case 3:
          case 4:
          case 5:
          case 6:
          case 7:
          case 8:
            goto LABEL_132;
          default:
            if (*v173 == 32)
            {
LABEL_110:
              sub_1C077AE90();
LABEL_111:
              v174 = 0;
              goto LABEL_112;
            }
LABEL_132:
            sub_1C077AE90();
            if (!_swift_stdlib_strtod_clocale())
              goto LABEL_111;
            sub_1C07A26A8();
LABEL_112:
            LOBYTE(v290) = v174;
            break;
        }
      }
      sub_1C077960C();
LABEL_119:
      v168 = v272;
      if ((v290 & 1) != 0)
      {
        v177 = v164;
        v178 = v162;
        v179 = v167;
        v180 = v166;
        v181 = v286;
        v182 = *(void (**)(uint64_t, uint64_t, uint64_t))(v276 + 16);
        v182(v271, v272 + *(int *)(v285 + 28), v277);
        v183 = (uint64_t)v278;
        sub_1C077C09C();
        v288 = (_QWORD *)v183;
        sub_1C07DCD20();
        if (__OFADD__(*(_QWORD *)(v183 + 16), (v185 & 1) == 0))
          goto LABEL_213;
        v186 = v184;
        v187 = v185;
        sub_1C07ACF80(&qword_1ED75D390);
        if ((sub_1C107090C() & 1) != 0)
        {
          sub_1C07DCD20();
          if ((v187 & 1) != (v189 & 1))
            goto LABEL_221;
          v186 = v188;
        }
        v278 = v288;
        if ((v187 & 1) != 0)
        {
          *(_QWORD *)(v288[7] + 8 * v186) = v181;
          v168 = v272;
        }
        else
        {
          sub_1C0797344((uint64_t)&v288[v186 >> 6]);
          v182(*(_QWORD *)(v190 + 48) + *(_QWORD *)(v276 + 72) * v186, v271, v277);
          v191 = (uint64_t)v278;
          *(_QWORD *)(v278[7] + 8 * v186) = v181;
          v192 = *(_QWORD *)(v191 + 16);
          v111 = __OFADD__(v192, 1);
          v193 = v192 + 1;
          v168 = v272;
          if (v111)
            goto LABEL_215;
          *(_QWORD *)(v191 + 16) = v193;
        }
        sub_1C077970C();
        (*(void (**)(uint64_t, uint64_t))(v276 + 8))(v271, v277);
        v166 = v180;
        v167 = v179;
        v162 = v178;
        v164 = v177;
      }
      sub_1C07B1F90(v168, (uint64_t (*)(_QWORD))v167);
      v164 += v166;
      if (!--v162)
      {
        sub_1C077AF1C();
        v56 = v281;
        goto LABEL_140;
      }
    }
  }
  v278 = (uint64_t *)MEMORY[0x1E0DEE9E0];
LABEL_140:
  sub_1C077AF1C();
  v195 = (char *)MEMORY[0x1E0DEE9D8];
  v290 = (char *)MEMORY[0x1E0DEE9D8];
  if (!v280)
    goto LABEL_166;
  v196 = 0;
  while (2)
  {
    if (v196 >= v56[2])
      goto LABEL_211;
    sub_1C07A8034();
    v199 = v198 & ~v197;
    v277 = *(_QWORD *)(v200 + 72);
    sub_1C07E05C8((uint64_t)v56 + v199 + v277 * v196, v279, (uint64_t (*)(_QWORD))type metadata accessor for StaticKnowledgeTriple);
    sub_1C106DEAC();
    sub_1C0794BAC(&qword_1ED75E7E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC80]);
    sub_1C078AB24();
    sub_1C078AB24();
    if (v288 == (_QWORD *)v286 && v289 == v287)
      v202 = 1;
    else
      v202 = sub_1C07785B0();
    sub_1C077960C();
    swift_bridgeObjectRelease();
    sub_1C079C43C(v274);
    v203 = v266;
    sub_1C07E05C8(v279, v266, (uint64_t (*)(_QWORD))type metadata accessor for StaticKnowledgeTriple);
    if ((v202 & 1) == 0)
    {
      sub_1C07B1F90(v203, (uint64_t (*)(_QWORD))type metadata accessor for StaticKnowledgeTriple);
LABEL_157:
      sub_1C0789F1C(v279);
      v56 = v281;
      goto LABEL_164;
    }
    v204 = (uint64_t)v259;
    sub_1C106E338();
    sub_1C078AB24();
    sub_1C078AB24();
    if (v288 == (_QWORD *)v286 && v289 == v287)
    {
      sub_1C0782990();
      sub_1C079C43C(v204);
      sub_1C0789F1C(v203);
      goto LABEL_159;
    }
    v206 = sub_1C07785B0();
    sub_1C077960C();
    swift_bridgeObjectRelease();
    sub_1C079C43C(v204);
    sub_1C0789F1C(v203);
    if ((v206 & 1) == 0)
      goto LABEL_157;
LABEL_159:
    sub_1C07E05F4(v279, v263, (uint64_t (*)(_QWORD))type metadata accessor for StaticKnowledgeTriple);
    v207 = v290;
    if ((sub_1C077C09C() & 1) == 0)
    {
      sub_1C07A4768();
      v207 = v290;
    }
    v208 = *((_QWORD *)v207 + 2);
    if (v208 >= *((_QWORD *)v207 + 3) >> 1)
    {
      sub_1C078F5E8();
      v207 = v290;
    }
    *((_QWORD *)v207 + 2) = v208 + 1;
    sub_1C07E05F4(v263, (uint64_t)&v207[v199 + v208 * v277], (uint64_t (*)(_QWORD))type metadata accessor for StaticKnowledgeTriple);
    v56 = v281;
LABEL_164:
    if (v280 != ++v196)
      continue;
    break;
  }
  v195 = v290;
LABEL_166:
  sub_1C077960C();
  v209 = *((_QWORD *)v195 + 2);
  if (v209)
  {
    sub_1C07A3A98();
    v211 = &v195[v210];
    v213 = *(_QWORD *)(v212 + 72);
    swift_retain();
    v75 = MEMORY[0x1E0DEE9E0];
    sub_1C07908D8();
    while (1)
    {
      if (v56[2])
      {
        sub_1C07DCD84();
        if ((v214 & 1) != 0)
        {
          v56 = v278;
          if (v278[2])
          {
            sub_1C077584C();
            sub_1C07DCD20();
            if ((v216 & 1) != 0)
            {
              v217 = *(_QWORD *)(v56[7] + 8 * v215);
              sub_1C077B20C();
              sub_1C07B8420();
              swift_isUniquelyReferenced_nonNull_native();
              v288 = (_QWORD *)v75;
              sub_1C07DD240();
              sub_1C07A3180();
              if (v111)
                goto LABEL_219;
              v220 = v218;
              v221 = v219;
              sub_1C07ACF80(&qword_1EF639E38);
              v56 = (uint64_t *)&v288;
              if ((sub_1C107090C() & 1) != 0)
              {
                v56 = v288;
                sub_1C07DD240();
                if ((v221 & 1) != (v223 & 1))
                  goto LABEL_221;
                v220 = v222;
              }
              v75 = (uint64_t)v288;
              if ((v221 & 1) != 0)
              {
                *(_QWORD *)(v288[7] + 8 * v220) = v217;
                sub_1C07908D8();
              }
              else
              {
                sub_1C0797344((uint64_t)&v288[v220 >> 6]);
                sub_1C07B9728();
                sub_1C079EEEC(v224 + v225 * v220, v258, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v226 + 16));
                *(_QWORD *)(*(_QWORD *)(v75 + 56) + 8 * v220) = v217;
                v227 = *(_QWORD *)(v75 + 16);
                v111 = __OFADD__(v227, 1);
                v228 = v227 + 1;
                v56 = (uint64_t *)v273;
                if (v111)
                  goto LABEL_220;
                *(_QWORD *)(v75 + 16) = v228;
              }
              sub_1C077970C();
              sub_1C07B17EC(v258, *(uint64_t (**)(uint64_t, _QWORD))(v260 + 8));
              goto LABEL_180;
            }
            swift_bridgeObjectRelease();
          }
        }
        sub_1C07908D8();
      }
LABEL_180:
      v211 += v213;
      if (!--v209)
      {
        swift_release();
        goto LABEL_186;
      }
    }
  }
  v75 = MEMORY[0x1E0DEE9E0];
  sub_1C07908D8();
LABEL_186:
  swift_bridgeObjectRelease();
  sub_1C077960C();
  sub_1C077AF1C();
  return v75;
}

uint64_t sub_1C0A6FAA0@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  _QWORD v12[5];
  _BYTE v13[24];
  ValueMetadata *v14;
  unint64_t v15;
  uint64_t v16[5];

  v5 = sub_1C07ACF80(&qword_1ED759F08);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for StaticKnowledgeTriple();
  v14 = &type metadata for StaticGlobalKnowledgeTripleColumn;
  v15 = sub_1C0A6BE24();
  v13[0] = 0;
  v12[3] = MEMORY[0x1E0DEDC60];
  v12[4] = MEMORY[0x1E0D24A58];
  v12[0] = a1;
  v16[3] = sub_1C106BCBC();
  v16[4] = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v16);
  sub_1C106C310();
  sub_1C0784B6C((uint64_t)v12, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v13);
  sub_1C0794BAC(&qword_1ED75C040, (uint64_t (*)(uint64_t))type metadata accessor for StaticKnowledgeTriple, (uint64_t)&unk_1C10B9D08);
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v16);
  sub_1C0A6FD44();
  sub_1C0794BAC(&qword_1ED750C30, (uint64_t (*)(uint64_t))type metadata accessor for StaticKnowledgeTriple, (uint64_t)&unk_1C10B9CC0);
  v9 = sub_1C106BAB8();
  result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (!v2)
    *a2 = v9;
  return result;
}

uint64_t sub_1C0A6FC48(uint64_t a1, _QWORD *a2)
{
  _QWORD *v3;

  v3 = (_QWORD *)(a1 + *(int *)(type metadata accessor for StaticKnowledgeTriple() + 36));
  if (*v3 == *a2 && v3[1] == a2[1])
    return 1;
  else
    return sub_1C1070CB4() & 1;
}

uint64_t sub_1C0A6FCB0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1C0A6FAA0(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1C0A6FCC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1ED7623F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C0A6FD10(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_1C0BF7650(a1, a2);
}

uint64_t sub_1C0A6FD28(uint64_t a1)
{
  uint64_t v1;

  return sub_1C0A6FC48(a1, *(_QWORD **)(v1 + 16)) & 1;
}

unint64_t sub_1C0A6FD44()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED7505E0;
  if (!qword_1ED7505E0)
  {
    v1 = sub_1C07D4BEC(&qword_1ED759F08);
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0D24290], v1);
    atomic_store(result, (unint64_t *)&qword_1ED7505E0);
  }
  return result;
}

void sub_1C0A6FD88(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_1C0A6FD10(a1, a2);
}

uint64_t sub_1C0A6FD9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char v51;
  uint64_t *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  BOOL v61;
  char v62;
  unint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  uint8_t *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  char *v75;
  int *v76;
  void (*v77)(char *, uint64_t, uint64_t);
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  unint64_t v83;
  char v84;
  unint64_t v85;
  char v86;
  _QWORD *v87;
  _QWORD *v88;
  uint64_t v89;
  BOOL v90;
  uint64_t v91;
  int64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  int64_t v107;
  char v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char v132;
  char *v133;
  char v135;
  char v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t *v145;
  unint64_t v146;
  unint64_t v147;
  _BYTE *v148;
  BOOL v149;
  BOOL v150;
  uint64_t v151;
  void (*v152)(char *, uint64_t, uint64_t);
  unint64_t v153;
  uint64_t v154;
  unint64_t v155;
  unint64_t v156;
  char v157;
  uint64_t v158;
  uint64_t v159;
  _BYTE *v160;
  _BYTE *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  uint64_t v166;
  double v167;
  unint64_t v168;
  unint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  unint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  _QWORD *v178;
  uint64_t v179;
  double v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  double v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t *v205;
  uint64_t v206;
  int64_t v207;
  _QWORD *v208;
  int64_t v209;
  __int128 v210;
  uint64_t v211;
  __int128 v212;
  _QWORD *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  int64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  char *v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  _QWORD *v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  char *v234;
  uint64_t v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  char *v239;
  uint64_t v240;
  char *v241;
  uint64_t v242;
  char *v243;
  uint64_t v244;
  uint64_t v245;
  int *v246;
  uint64_t v247;
  _QWORD *v248;
  uint64_t v249;
  char *v250;

  v215 = a1;
  v238 = sub_1C106F544();
  v230 = *(_QWORD **)(v238 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v206 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07ACF80(&qword_1ED750C38);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v206 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07ACF80(&qword_1ED750688);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v206 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  isUniquelyReferenced_nonNull_native = (uint64_t)&v206 - v11;
  v13 = sub_1C106EB24();
  v244 = *(_QWORD *)(v13 - 8);
  v245 = v13;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v14);
  sub_1C077AED0();
  v237 = v15;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v16);
  v234 = (char *)&v206 - v17;
  sub_1C07ACF80(&qword_1ED750670);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v18);
  sub_1C077AED0();
  v216 = v19;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v20);
  v222 = (char *)&v206 - v21;
  v226 = sub_1C106E590();
  v224 = *(_QWORD *)(v226 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v22);
  sub_1C077AED0();
  v214 = v23;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v24);
  v241 = (char *)&v206 - v25;
  v26 = sub_1C106E41C();
  v232 = *(_QWORD *)(v26 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v27);
  sub_1C077AED0();
  v227 = v28;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v29);
  sub_1C0779728();
  v239 = v30;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&v206 - v32;
  v246 = (int *)type metadata accessor for StaticKnowledgeTriple();
  v233 = *((_QWORD *)v246 - 1);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v34);
  sub_1C077AED0();
  v235 = v35;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v36);
  sub_1C0779728();
  v228 = v37;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v38);
  sub_1C0779728();
  v229 = v39;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v40);
  sub_1C0779728();
  v242 = v41;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v42);
  sub_1C0779728();
  v231 = v43;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v44);
  sub_1C0779728();
  v46 = v45;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v47);
  v49 = (char *)&v206 - v48;
  v50 = sub_1C0A6DE58();
  if ((v51 & 1) != 0)
  {
    sub_1C106F154();
    v64 = sub_1C106F538();
    v65 = sub_1C1070390();
    if (os_log_type_enabled(v64, v65))
    {
      v66 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v66 = 0;
      _os_log_impl(&dword_1C0771000, v64, v65, "ConfidenceTrie: Prior Beliefs unavailable", v66, 2u);
      MEMORY[0x1C3BA8270](v66, -1, -1);
    }

    ((void (*)(char *, uint64_t))v230[1])(v3, v238);
    v67 = 1;
    v68 = v215;
    goto LABEL_163;
  }
  v238 = isUniquelyReferenced_nonNull_native;
  v243 = v9;
  v230 = 0;
  MEMORY[0x1E0C80A78](v50);
  v205 = v52;
  swift_retain();
  v53 = sub_1C0BB962C((uint64_t)sub_1C0A71828, (uint64_t)(&v206 - 4));
  swift_release();
  sub_1C07ACF80(&qword_1ED762B70);
  sub_1C0A71840();
  v54 = (char *)MEMORY[0x1E0DEE9D8];
  v223 = sub_1C106F97C();
  v250 = v54;
  v55 = *(_QWORD *)(v53 + 16);
  sub_1C077AE90();
  v236 = v6;
  v240 = v26;
  v219 = v53;
  v225 = v55;
  if (!v55)
  {
    v69 = v54;
    sub_1C0791D00();
    goto LABEL_23;
  }
  v56 = 0;
  do
  {
    if (v56 >= *(_QWORD *)(v53 + 16))
    {
LABEL_168:
      __break(1u);
LABEL_169:
      __break(1u);
LABEL_170:
      __break(1u);
LABEL_171:
      __break(1u);
LABEL_172:
      __break(1u);
LABEL_173:
      __break(1u);
LABEL_174:
      __break(1u);
      while (1)
      {
LABEL_175:
        sub_1C1070D44();
        __break(1u);
      }
    }
    sub_1C079FF68();
    v58 = *(_QWORD *)(v57 + 72);
    sub_1C0A7189C(v53 + isUniquelyReferenced_nonNull_native + v58 * v56, (uint64_t)v49);
    sub_1C106E248();
    sub_1C0794BAC(&qword_1ED75E7E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC80]);
    v60 = v59;
    sub_1C077B06C();
    sub_1C077B06C();
    sub_1C079735C();
    v61 = v61 && v60 == v33;
    if (v61)
    {
      sub_1C07878E4();
      sub_1C0796590();
    }
    else
    {
      v62 = sub_1C0798724();
      sub_1C07767AC();
      sub_1C077960C();
      sub_1C0796590();
      if ((v62 & 1) == 0)
      {
        sub_1C0A718E0((uint64_t)v49);
        v53 = v219;
        goto LABEL_17;
      }
    }
    sub_1C0A7191C((uint64_t)v49, v46);
    if ((sub_1C0793B6C() & 1) == 0)
    {
      sub_1C07A3AAC();
      v60 = v250;
    }
    v53 = v219;
    v63 = *((_QWORD *)v60 + 2);
    if (v63 >= *((_QWORD *)v60 + 3) >> 1)
    {
      sub_1C09D3DC4();
      v53 = v219;
      v60 = v250;
    }
    *((_QWORD *)v60 + 2) = v63 + 1;
    sub_1C0A7191C(v46, (uint64_t)&v60[isUniquelyReferenced_nonNull_native + v63 * v58]);
LABEL_17:
    ++v56;
    v55 = (uint64_t)v222;
    v26 = v240;
  }
  while (v225 != v56);
  v69 = v250;
LABEL_23:
  sub_1C077960C();
  v70 = *((_QWORD *)v69 + 2);
  v71 = v224;
  v72 = v231;
  if (v70)
  {
    v73 = (uint64_t)&v69[(*(unsigned __int8 *)(v233 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v233 + 80)];
    v225 = *(_QWORD *)(v233 + 72);
    v221 = v69;
    swift_retain();
    v74 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v55 = v226;
    v75 = v241;
    do
    {
      sub_1C0A7189C(v73, v72);
      v76 = v246;
      v77 = *(void (**)(char *, uint64_t, uint64_t))(v71 + 16);
      v77(v75, v72 + v246[5], v55);
      v78 = (uint64_t *)(v72 + v76[9]);
      v80 = *v78;
      v79 = v78[1];
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v248 = v74;
      sub_1C07DCD84();
      if (__OFADD__(v74[2], (v82 & 1) == 0))
        goto LABEL_169;
      v83 = v81;
      v84 = v82;
      sub_1C07ACF80(&qword_1ED756560);
      if ((sub_1C107090C() & 1) != 0)
      {
        sub_1C07DCD84();
        if ((v84 & 1) != (v86 & 1))
          goto LABEL_175;
        v83 = v85;
      }
      v74 = v248;
      if ((v84 & 1) != 0)
      {
        v87 = (_QWORD *)(v248[7] + 16 * v83);
        swift_bridgeObjectRelease();
        *v87 = v80;
        v87[1] = v79;
        v75 = v241;
      }
      else
      {
        sub_1C07A477C((uint64_t)&v248[v83 >> 6]);
        v75 = v241;
        v77((char *)(v74[6] + *(_QWORD *)(v224 + 72) * v83), (uint64_t)v241, v226);
        v88 = (_QWORD *)(v74[7] + 16 * v83);
        *v88 = v80;
        v88[1] = v79;
        v89 = v74[2];
        v90 = __OFADD__(v89, 1);
        v91 = v89 + 1;
        if (v90)
          goto LABEL_171;
        v74[2] = v91;
      }
      sub_1C077970C();
      v71 = v224;
      v55 = v226;
      (*(void (**)(char *, uint64_t))(v224 + 8))(v75, v226);
      v72 = v231;
      sub_1C0A718E0(v231);
      v73 += v225;
      --v70;
    }
    while (v70);
    sub_1C07767F4();
    sub_1C0791D00();
    v26 = v240;
  }
  else
  {
    v74 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  sub_1C07767F4();
  v92 = 0;
  v208 = v74 + 8;
  sub_1C0791194();
  v95 = v94 & v93;
  v209 = (unint64_t)(v96 + 63) >> 6;
  v207 = v209 - 1;
  v210 = xmmword_1C1079220;
  v212 = xmmword_1C1078FC0;
  v68 = v215;
  v97 = v230;
  v98 = (uint64_t)v243;
  v213 = v74;
LABEL_37:
  v99 = v216;
  v100 = v226;
  if (v95)
  {
    v218 = (v95 - 1) & v95;
    v101 = __clz(__rbit64(v95)) | (v92 << 6);
    goto LABEL_39;
  }
  if (__OFADD__(v92, 1))
    goto LABEL_172;
  sub_1C078C1D8();
  if (v108 != v90)
  {
    v109 = v208[v107];
    if (!v109)
    {
      v92 = v107 + 1;
      if (v107 + 1 >= v209)
      {
        v92 = v107;
        goto LABEL_49;
      }
      v109 = v208[v92];
      if (v109)
      {
        ++v107;
      }
      else
      {
        if (v107 + 2 >= v209)
          goto LABEL_49;
        v109 = v208[v107 + 2];
        if (v109)
        {
          v107 += 2;
        }
        else
        {
          v200 = v107 + 3;
          if (v107 + 3 >= v209)
          {
            v92 = v107 + 2;
            goto LABEL_49;
          }
          v109 = v208[v200];
          if (!v109)
          {
            while (1)
            {
              if (__OFADD__(v200, 1))
                goto LABEL_174;
              sub_1C078C1D8();
              if (v108 == v90)
                break;
              v109 = v208[v107];
              v200 = v201 + 1;
              if (v109)
                goto LABEL_44;
            }
            v92 = v207;
            goto LABEL_49;
          }
          v107 += 3;
        }
      }
    }
LABEL_44:
    v218 = (v109 - 1) & v109;
    v101 = __clz(__rbit64(v109)) + (v107 << 6);
    v92 = v107;
LABEL_39:
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v224 + 16))(v99, v74[6] + *(_QWORD *)(v224 + 72) * v101, v100);
    v102 = (uint64_t *)(v74[7] + 16 * v101);
    v103 = sub_1C07A5BB8();
    v104 = (_QWORD *)(v99 + *(int *)(v103 + 48));
    v105 = *v102;
    v55 = v102[1];
    *v104 = v105;
    v104[1] = v55;
    sub_1C0794D1C(v99, 0, v106, v103);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0791D00();
  }
  else
  {
LABEL_49:
    v110 = sub_1C07A5BB8();
    v99 = v216;
    sub_1C0794D1C(v216, 1, v111, v110);
    v218 = 0;
  }
  sub_1C08273C8(v99, v55, &qword_1ED750670);
  v112 = v55;
  v113 = sub_1C07A5BB8();
  if (sub_1C07B2D80(v112, 1, v113) != 1)
  {
    v217 = v92;
    v114 = (uint64_t *)(v112 + *(int *)(v113 + 48));
    v116 = *v114;
    v115 = (char *)v114[1];
    v220 = v116;
    v221 = v115;
    v117 = v224;
    v118 = v214;
    v119 = v112;
    v120 = v226;
    v121 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v224 + 32))(v214, v119, v226);
    MEMORY[0x1E0C80A78](v121);
    sub_1C07A53FC();
    v122 = v219;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0D2F48C((uint64_t (*)(char *))sub_1C0A71960, v113, v122);
    v124 = v123;
    (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v118, v120);
    v125 = MEMORY[0x1E0DEE9D8];
    v250 = (char *)MEMORY[0x1E0DEE9D8];
    v126 = *((_QWORD *)v124 + 2);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v241 = v124;
    v231 = v126;
    if (!v126)
      goto LABEL_77;
    v127 = 0;
    v230 = v97;
    while (1)
    {
      if (v127 >= *((_QWORD *)v124 + 2))
      {
        __break(1u);
LABEL_165:
        __break(1u);
LABEL_166:
        __break(1u);
LABEL_167:
        __break(1u);
        goto LABEL_168;
      }
      sub_1C079FF68();
      v129 = *(_QWORD *)(v128 + 72);
      sub_1C0A7189C((uint64_t)&v124[isUniquelyReferenced_nonNull_native + v129 * v127], v242);
      v130 = v239;
      sub_1C106DEAC();
      sub_1C0794BAC(&qword_1ED75E7E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC80]);
      sub_1C07960C4();
      sub_1C07960C4();
      sub_1C079735C();
      if (v61)
        v132 = 1;
      else
        v132 = sub_1C0798724();
      sub_1C07767AC();
      sub_1C077960C();
      (*(void (**)(char *, uint64_t))(v232 + 8))(v239, v26);
      sub_1C0A7189C(v242, v229);
      if ((v132 & 1) != 0)
      {
        v133 = v227;
        sub_1C106DCCC();
        sub_1C07960C4();
        sub_1C07960C4();
        sub_1C079735C();
        if (v61 && v130 == v133)
        {
          sub_1C07878E4();
          sub_1C0793B78();
          sub_1C0792F84();
LABEL_70:
          sub_1C0A7191C(v242, v228);
          v136 = sub_1C0793B6C();
          v26 = v240;
          v124 = v241;
          if ((v136 & 1) == 0)
          {
            sub_1C07A3AAC();
            v130 = v250;
          }
          v137 = *((_QWORD *)v130 + 2);
          if (v137 >= *((_QWORD *)v130 + 3) >> 1)
          {
            sub_1C09D3DC4();
            v130 = v250;
          }
          *((_QWORD *)v130 + 2) = v137 + 1;
          sub_1C0A7191C(v228, (uint64_t)&v130[isUniquelyReferenced_nonNull_native + v137 * v129]);
          goto LABEL_75;
        }
        v135 = sub_1C0798724();
        sub_1C07767AC();
        sub_1C077960C();
        sub_1C0793B78();
        sub_1C0792F84();
        if ((v135 & 1) != 0)
          goto LABEL_70;
      }
      else
      {
        sub_1C0792F84();
      }
      sub_1C0A718E0(v242);
      v26 = v240;
      v124 = v241;
LABEL_75:
      ++v127;
      v97 = v230;
      v98 = (uint64_t)v243;
      if (v231 == v127)
      {
        v125 = (uint64_t)v250;
LABEL_77:
        swift_bridgeObjectRelease();
        v138 = *(_QWORD *)(v125 + 16);
        if (!v138)
        {
          v142 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_115:
          swift_release();
          v225 = 0;
          v162 = 0;
          v230 = v142 + 8;
          sub_1C0791194();
          v165 = v164 & v163;
          v231 = (unint64_t)(v166 + 63) >> 6;
          v211 = v231 - 1;
          v167 = 0.0;
          if ((v164 & v163) != 0)
          {
LABEL_116:
            v168 = __clz(__rbit64(v165));
            v165 &= v165 - 1;
            v169 = v168 | (v162 << 6);
            goto LABEL_117;
          }
          while (1)
          {
            if (__OFADD__(v162, 1))
              goto LABEL_165;
            sub_1C078C1D8();
            if (v108 != v90)
            {
              v174 = v230[v173];
              if (v174)
                goto LABEL_122;
              v162 = v173 + 1;
              if (v173 + 1 >= v231)
              {
                v162 = v173;
              }
              else
              {
                v174 = v230[v162];
                if (v174)
                {
                  ++v173;
                  goto LABEL_122;
                }
                if (v173 + 2 < v231)
                {
                  v174 = v230[v173 + 2];
                  if (v174)
                  {
                    v173 += 2;
                    goto LABEL_122;
                  }
                  v193 = v173 + 3;
                  if (v173 + 3 >= v231)
                  {
                    v162 = v173 + 2;
                  }
                  else
                  {
                    v174 = v230[v193];
                    if (v174)
                    {
                      v173 += 3;
LABEL_122:
                      v165 = (v174 - 1) & v174;
                      v169 = __clz(__rbit64(v174)) + (v173 << 6);
                      v162 = v173;
LABEL_117:
                      (*(void (**)(uint64_t, unint64_t, uint64_t))(v244 + 16))(v98, v142[6] + *(_QWORD *)(v244 + 72) * v169, v245);
                      v170 = v142[7];
                      v171 = sub_1C0797ED8();
                      *(_QWORD *)(v98 + *(int *)(v171 + 48)) = *(_QWORD *)(v170 + 8 * v169);
                      sub_1C0794D1C(v98, 0, v172, v171);
                      goto LABEL_128;
                    }
                    while (1)
                    {
                      if (__OFADD__(v193, 1))
                        goto LABEL_173;
                      sub_1C078C1D8();
                      if (v108 == v90)
                        break;
                      v174 = v230[v173];
                      v193 = v194 + 1;
                      if (v174)
                        goto LABEL_122;
                    }
                    v162 = v211;
                  }
                }
              }
            }
            v175 = sub_1C0797ED8();
            sub_1C0794D1C(v98, 1, v176, v175);
            v165 = 0;
LABEL_128:
            v177 = v238;
            sub_1C08273C8(v98, v238, &qword_1ED750688);
            v55 = sub_1C0797ED8();
            if (sub_1C07B2D80(v177, 1, v55) == 1)
            {
              swift_bridgeObjectRelease();
              sub_1C07767F4();
              v195 = v225;
              if (v225 >= 1)
              {
                sub_1C07ACF80(&qword_1ED762CB0);
                v55 = swift_allocObject();
                *(_OWORD *)(v55 + 16) = v210;
                v196 = v221;
                *(_QWORD *)(v55 + 32) = v220;
                *(_QWORD *)(v55 + 40) = v196;
                v197 = v167 / (double)v195;
                v198 = v223;
                v199 = swift_isUniquelyReferenced_nonNull_native();
                v248 = (_QWORD *)v198;
                sub_1C08A12D8(v55, v199, v197);
                v223 = (uint64_t)v248;
                sub_1C07767AC();
              }
              swift_bridgeObjectRelease();
              v68 = v215;
              sub_1C0791D00();
              v74 = v213;
              v92 = v217;
              v95 = v218;
              goto LABEL_37;
            }
            v178 = v142;
            v179 = v162;
            v180 = *(double *)(v177 + *(int *)(v55 + 48));
            v181 = v244;
            isUniquelyReferenced_nonNull_native = v245;
            v182 = v237;
            v183 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v244 + 32))(v237, v177, v245);
            MEMORY[0x1E0C80A78](v183);
            sub_1C07A53FC();
            v184 = (uint64_t)v241;
            _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
            sub_1C0D2F48C((uint64_t (*)(char *))sub_1C0A7197C, v55, v184);
            (*(void (**)(uint64_t, uint64_t))(v181 + 8))(v182, isUniquelyReferenced_nonNull_native);
            v185 = (uint64_t)v236;
            sub_1C0AA4A00();
            sub_1C07767AC();
            if (sub_1C07B2D80(v185, 1, (uint64_t)v246) == 1)
            {
              sub_1C0784B94(v185, &qword_1ED750C38);
              v26 = v240;
            }
            else
            {
              v186 = (uint64_t *)(v185 + v246[9]);
              v187 = v185;
              v189 = *v186;
              v188 = v186[1];
              _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
              sub_1C0A718E0(v187);
              v26 = v240;
              if (__OFADD__(v225, 1))
                goto LABEL_170;
              ++v225;
              v167 = v167 + v180;
              sub_1C07ACF80(&qword_1ED762CB0);
              v190 = swift_allocObject();
              *(_OWORD *)(v190 + 16) = v212;
              *(_QWORD *)(v190 + 32) = v220;
              *(_QWORD *)(v190 + 40) = v221;
              *(_QWORD *)(v190 + 48) = v189;
              *(_QWORD *)(v190 + 56) = v188;
              _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
              v191 = v223;
              v192 = swift_isUniquelyReferenced_nonNull_native();
              v248 = (_QWORD *)v191;
              sub_1C08A12D8(v190, v192, v180);
              v223 = (uint64_t)v248;
              swift_bridgeObjectRelease();
              sub_1C077970C();
            }
            v162 = v179;
            v142 = v178;
            v98 = (uint64_t)v243;
            if (v165)
              goto LABEL_116;
          }
        }
        v139 = v125;
        v140 = v233;
        v141 = v139 + ((*(unsigned __int8 *)(v233 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v233 + 80));
        v225 = v139;
        swift_retain();
        v231 = *(_QWORD *)(v140 + 72);
        v142 = (_QWORD *)MEMORY[0x1E0DEE9E0];
        v143 = v235;
        while (2)
        {
          v144 = sub_1C0A7189C(v141, v143);
          isUniquelyReferenced_nonNull_native = (uint64_t)&v206;
          v145 = (unint64_t *)(v143 + v246[9]);
          v146 = *v145;
          v147 = v145[1];
          v247 = 0;
          MEMORY[0x1E0C80A78](v144);
          v205 = &v247;
          if ((v147 & 0x1000000000000000) == 0 && v147 & 0x2000000000000000 | v146 & 0x1000000000000000)
          {
            if ((v147 & 0x2000000000000000) != 0)
            {
              v248 = (_QWORD *)v146;
              v249 = v147 & 0xFFFFFFFFFFFFFFLL;
              switch((char)v146)
              {
                case 0:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                  goto LABEL_90;
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                  goto LABEL_110;
                default:
                  if (v146 == 32)
                  {
LABEL_90:
                    sub_1C077AE90();
LABEL_91:
                    v150 = 0;
                    goto LABEL_92;
                  }
LABEL_110:
                  sub_1C077AE90();
                  v161 = (_BYTE *)_swift_stdlib_strtod_clocale();
                  if (!v161)
                    goto LABEL_91;
                  v150 = *v161 == 0;
LABEL_92:
                  LOBYTE(v250) = v150;
                  sub_1C077960C();
                  break;
              }
            }
            else
            {
              if ((v146 & 0x1000000000000000) != 0)
                v148 = (_BYTE *)((v147 & 0xFFFFFFFFFFFFFFFLL) + 32);
              else
                v148 = (_BYTE *)sub_1C10707F8();
              switch(*v148)
              {
                case 0:
                case 9:
                case 0xA:
                case 0xB:
                case 0xC:
                case 0xD:
                  goto LABEL_85;
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                  goto LABEL_107;
                default:
                  if (*v148 == 32)
                  {
LABEL_85:
                    sub_1C077AE90();
LABEL_86:
                    v149 = 0;
                    goto LABEL_87;
                  }
LABEL_107:
                  sub_1C077AE90();
                  v160 = (_BYTE *)_swift_stdlib_strtod_clocale();
                  if (!v160)
                    goto LABEL_86;
                  v149 = *v160 == 0;
LABEL_87:
                  LOBYTE(v250) = v149;
                  break;
              }
LABEL_88:
              sub_1C077960C();
            }
            v143 = v235;
            if ((v250 & 1) != 0)
            {
              v151 = v247;
              v152 = *(void (**)(char *, uint64_t, uint64_t))(v244 + 16);
              v152(v234, v235 + v246[7], v245);
              swift_isUniquelyReferenced_nonNull_native();
              v248 = v142;
              sub_1C07DCD20();
              if (__OFADD__(v142[2], (v154 & 1) == 0))
                goto LABEL_166;
              v155 = v153;
              isUniquelyReferenced_nonNull_native = v154;
              sub_1C07ACF80(&qword_1ED75D390);
              if ((sub_1C107090C() & 1) != 0)
              {
                sub_1C07DCD20();
                if ((isUniquelyReferenced_nonNull_native & 1) != (v157 & 1))
                  goto LABEL_175;
                v155 = v156;
              }
              v142 = v248;
              if ((isUniquelyReferenced_nonNull_native & 1) != 0)
              {
                *(_QWORD *)(v248[7] + 8 * v155) = v151;
              }
              else
              {
                sub_1C07A477C((uint64_t)&v248[v155 >> 6]);
                v152((char *)(v142[6] + *(_QWORD *)(v244 + 72) * v155), (uint64_t)v234, v245);
                *(_QWORD *)(v142[7] + 8 * v155) = v151;
                v158 = v142[2];
                v90 = __OFADD__(v158, 1);
                v159 = v158 + 1;
                if (v90)
                  goto LABEL_167;
                v142[2] = v159;
              }
              sub_1C077970C();
              (*(void (**)(char *, uint64_t))(v244 + 8))(v234, v245);
              v98 = (uint64_t)v243;
              v143 = v235;
            }
            sub_1C0A718E0(v143);
            v141 += v231;
            if (!--v138)
            {
              swift_release();
              goto LABEL_115;
            }
            continue;
          }
          break;
        }
        sub_1C077AE90();
        sub_1C1070750();
        goto LABEL_88;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_release();
  v205 = (uint64_t *)MEMORY[0x1E0DEB0A0];
  sub_1C106CAA8();
  v67 = 0;
LABEL_163:
  v202 = sub_1C07ACF80(&qword_1ED755FB0);
  return sub_1C0794D1C(v68, v67, v203, v202);
}

uint64_t sub_1C0A71408@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  _QWORD v12[5];
  _BYTE v13[24];
  ValueMetadata *v14;
  unint64_t v15;
  uint64_t v16[5];

  v5 = sub_1C07ACF80(&qword_1ED759F08);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for StaticKnowledgeTriple();
  v14 = &type metadata for StaticGlobalKnowledgeTripleColumn;
  v15 = sub_1C0A6BE24();
  v13[0] = 0;
  v12[3] = MEMORY[0x1E0DEDC60];
  v12[4] = MEMORY[0x1E0D24A58];
  v12[0] = a1;
  v16[3] = sub_1C106BCBC();
  v16[4] = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v16);
  sub_1C106C310();
  sub_1C0784B94((uint64_t)v12, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v13);
  sub_1C0794BAC(&qword_1ED75C040, (uint64_t (*)(uint64_t))type metadata accessor for StaticKnowledgeTriple, (uint64_t)&unk_1C10B9D08);
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v16);
  sub_1C0A6FD44();
  sub_1C0794BAC(&qword_1ED750C30, (uint64_t (*)(uint64_t))type metadata accessor for StaticKnowledgeTriple, (uint64_t)&unk_1C10B9CC0);
  v9 = sub_1C106BAB8();
  result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (!v2)
    *a2 = v9;
  return result;
}

uint64_t sub_1C0A715B0()
{
  type metadata accessor for StaticKnowledgeTriple();
  return sub_1C106E560() & 1;
}

uint64_t sub_1C0A715FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char v20;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;

  v24 = a2;
  v3 = sub_1C106EB24();
  v25 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v23 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticKnowledgeTriple();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v22 - v9;
  v11 = sub_1C106E41C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1 + *(int *)(v5 + 24);
  sub_1C106DEAC();
  LOBYTE(v15) = sub_1C08C4D74(v15, (uint64_t)v14);
  v16 = *(void (**)(char *, uint64_t))(v12 + 8);
  v16(v14, v11);
  sub_1C0A7189C(a1, (uint64_t)v10);
  if ((v15 & 1) != 0)
  {
    v17 = (uint64_t)&v10[*(int *)(v5 + 32)];
    sub_1C106E338();
    LOBYTE(v17) = sub_1C08C4D74(v17, (uint64_t)v14);
    v16(v14, v11);
    sub_1C0A718E0((uint64_t)v10);
    sub_1C0A7189C(a1, (uint64_t)v7);
    v18 = v25;
    v19 = v23;
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v23, v24, v3);
    if ((v17 & 1) != 0)
      v20 = sub_1C106EB00();
    else
      v20 = 0;
  }
  else
  {
    sub_1C0A718E0((uint64_t)v10);
    sub_1C0A7189C(a1, (uint64_t)v7);
    v18 = v25;
    v19 = v23;
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v23, v24, v3);
    v20 = 0;
  }
  (*(void (**)(char *, uint64_t))(v18 + 8))(v19, v3);
  sub_1C0A718E0((uint64_t)v7);
  return v20 & 1;
}

uint64_t sub_1C0A71828@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1C0A71408(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1C0A71840()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED751260;
  if (!qword_1ED751260)
  {
    v1 = sub_1C07D4BEC(&qword_1ED762B70);
    v2 = MEMORY[0x1E0DEA978];
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0DEAF18], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED751260);
  }
  return result;
}

uint64_t sub_1C0A7189C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StaticKnowledgeTriple();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0A718E0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for StaticKnowledgeTriple();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0A7191C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StaticKnowledgeTriple();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0A71960()
{
  return sub_1C0A715B0() & 1;
}

uint64_t sub_1C0A7197C(uint64_t a1)
{
  uint64_t v1;

  return sub_1C0A715FC(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_1C0A71998()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_1C07ACF80(&qword_1ED75E798);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for StaticKnowledgeAssetMetadata(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (uint64_t *)((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0A742CC(0xD00000000000001BLL, 0x80000001C10F4AE0);
  if (sub_1C07B2D80((uint64_t)v2, 1, v3) == 1)
  {
    sub_1C0784B6C((uint64_t)v2, &qword_1ED75E798);
    return 0;
  }
  else
  {
    sub_1C0838FBC((uint64_t)v2, (uint64_t)v5, type metadata accessor for StaticKnowledgeAssetMetadata);
    v6 = *v5;
    sub_1C07B1F90((uint64_t)v5, type metadata accessor for StaticKnowledgeAssetMetadata);
  }
  return v6;
}

void sub_1C0A71AB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char v22;
  uint64_t v23;
  unint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v0 = sub_1C106F544();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v46 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1C106E41C();
  v52 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v55 = type metadata accessor for StaticKnowledgeTriple();
  v53 = *(_QWORD *)(v55 - 8);
  MEMORY[0x1E0C80A78](v55);
  v54 = (uint64_t)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v46 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v46 - v10;
  v12 = sub_1C0A71998();
  if ((v13 & 1) != 0)
  {
    sub_1C106F154();
    v25 = sub_1C106F538();
    v26 = sub_1C1070390();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v27 = 0;
      _os_log_impl(&dword_1C0771000, v25, v26, "LocalizedRelationshipTopicMap: LocalizedRelationshipTopics not available", v27, 2u);
      MEMORY[0x1C3BA8270](v27, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    sub_1C07ACF80(&qword_1ED762B80);
    sub_1C106F97C();
  }
  else
  {
    v49 = v4;
    MEMORY[0x1E0C80A78](v12);
    *(&v46 - 2) = v14;
    swift_retain();
    v15 = sub_1C0BB962C((uint64_t)sub_1C0A6FCB0, (uint64_t)(&v46 - 4));
    swift_release();
    v16 = MEMORY[0x1E0DEE9D8];
    v60 = MEMORY[0x1E0DEE9D8];
    v17 = *(_QWORD *)(v15 + 16);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v50 = v17;
    v51 = v15;
    if (v17)
    {
      v18 = 0;
      while (1)
      {
        if (v18 >= *(_QWORD *)(v15 + 16))
        {
          __break(1u);
          return;
        }
        v19 = (*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
        v20 = *(_QWORD *)(v53 + 72);
        sub_1C0A7189C(v15 + v19 + v20 * v18, (uint64_t)v11);
        sub_1C106E224();
        sub_1C0794BAC(&qword_1ED75E7E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC80]);
        sub_1C0799C6C();
        sub_1C0799C6C();
        if (v58 == v56 && v59 == v57)
          break;
        v22 = sub_1C1070CB4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C07A0CD4();
        if ((v22 & 1) != 0)
          goto LABEL_12;
        sub_1C07B1F90((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticKnowledgeTriple);
        v15 = v51;
LABEL_17:
        if (v50 == ++v18)
        {
          v16 = v60;
          goto LABEL_22;
        }
      }
      swift_bridgeObjectRelease_n();
      sub_1C07A0CD4();
LABEL_12:
      sub_1C0838FBC((uint64_t)v11, v54, (uint64_t (*)(_QWORD))type metadata accessor for StaticKnowledgeTriple);
      v23 = v60;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C09D3DC4();
        v23 = v60;
      }
      v15 = v51;
      v24 = *(_QWORD *)(v23 + 16);
      if (v24 >= *(_QWORD *)(v23 + 24) >> 1)
      {
        sub_1C09D3DC4();
        v23 = v60;
      }
      *(_QWORD *)(v23 + 16) = v24 + 1;
      sub_1C0838FBC(v54, v23 + v19 + v24 * v20, (uint64_t (*)(_QWORD))type metadata accessor for StaticKnowledgeTriple);
      goto LABEL_17;
    }
LABEL_22:
    swift_bridgeObjectRelease();
    v49 = *(_QWORD *)(v16 + 16);
    if (v49)
    {
      v28 = *(unsigned __int8 *)(v53 + 80);
      v46 = v16;
      v47 = (v28 + 32) & ~v28;
      v48 = v16 + v47;
      v29 = *(_QWORD *)(v53 + 72);
      v30 = swift_retain();
      v31 = 0;
      v32 = 0;
      v33 = MEMORY[0x1E0DEE9E0];
      do
      {
        v54 = v33;
        MEMORY[0x1E0C80A78](v30);
        v52 = v34;
        *(&v46 - 2) = v34;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        sub_1C0D2F48C((uint64_t (*)(char *))sub_1C0A72278, (uint64_t)(&v46 - 4), v15);
        v53 = v32;
        v36 = v35;
        v37 = *(_QWORD *)(v35 + 16);
        if (v37)
        {
          v50 = v31;
          v58 = MEMORY[0x1E0DEE9D8];
          sub_1C09D30E0();
          v38 = v36 + v47;
          v39 = v58;
          do
          {
            sub_1C0A7189C(v38, (uint64_t)v8);
            v40 = &v8[*(int *)(v55 + 36)];
            v41 = *(_QWORD *)v40;
            v42 = *((_QWORD *)v40 + 1);
            _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
            sub_1C07B1F90((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticKnowledgeTriple);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1C09D30E0();
              v39 = v58;
            }
            v43 = *(_QWORD *)(v39 + 16);
            if (v43 >= *(_QWORD *)(v39 + 24) >> 1)
            {
              sub_1C09D30E0();
              v39 = v58;
            }
            *(_QWORD *)(v39 + 16) = v43 + 1;
            v44 = v39 + 16 * v43;
            *(_QWORD *)(v44 + 32) = v41;
            *(_QWORD *)(v44 + 40) = v42;
            v38 += v29;
            --v37;
          }
          while (v37);
          swift_bridgeObjectRelease();
          v31 = v50;
          v15 = v51;
        }
        else
        {
          swift_bridgeObjectRelease();
          v39 = MEMORY[0x1E0DEE9D8];
        }
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        sub_1C0898D28(v39);
        v45 = v54;
        swift_isUniquelyReferenced_nonNull_native();
        v58 = v45;
        ++v31;
        sub_1C08A12C4();
        v33 = v58;
        swift_bridgeObjectRelease();
        v30 = swift_bridgeObjectRelease();
        v32 = v53;
      }
      while (v31 != v49);
      swift_release();
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C0A72114(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  uint64_t v17;

  v4 = type metadata accessor for StaticKnowledgeTriple();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v17 - v8;
  v10 = sub_1C106E41C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1 + *(int *)(v4 + 32);
  sub_1C106E248();
  LOBYTE(v14) = sub_1C08C4D74(v14, (uint64_t)v13);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_1C0A7189C(a1, (uint64_t)v9);
  sub_1C0A7189C(a2, (uint64_t)v6);
  if ((v14 & 1) != 0)
    v15 = sub_1C106E560();
  else
    v15 = 0;
  sub_1C07B1F90((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticKnowledgeTriple);
  sub_1C07B1F90((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticKnowledgeTriple);
  return v15 & 1;
}

uint64_t sub_1C0A72278(uint64_t a1)
{
  uint64_t v1;

  return sub_1C0A72114(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_1C0A72294(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 *inited;
  uint64_t v44;
  void (*v45)(_QWORD, _QWORD);
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(_QWORD, _QWORD);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __n128 *v64;
  uint64_t v65;
  __n128 *v66;
  uint64_t v67;
  uint64_t v68;
  __n128 *v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  NSObject *v81;
  os_log_type_t v82;
  uint8_t *v83;
  __n128 *v84;
  __n128 *v85;
  uint64_t *v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  int v99;
  char v100;
  char v101;
  unint64_t v102;
  unint64_t v103;
  NSObject *v104;
  os_log_type_t v105;
  uint64_t v106;
  uint64_t v107;
  __n128 *v108;
  __n128 *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char v120;
  int v121;
  char v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  double *v126;
  uint64_t v127;
  double v128;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  double *v133;
  uint64_t v134;
  double v135;
  char v136;
  unint64_t v137;
  uint64_t v138;
  _QWORD v140[2];
  char *v141;
  uint64_t *v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD v145[3];
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  unsigned int v162;
  void (*v163)(uint64_t, uint64_t, uint64_t);
  uint64_t v164;
  void (*v165)(_QWORD, _QWORD);
  unint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  __int128 v175;
  uint64_t v176;
  unint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char v183[8];
  char v184;
  char v185;
  uint64_t v186;
  char v187[8];
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;

  v166 = a4;
  v155 = a3;
  v151 = sub_1C106F544();
  sub_1C0787718(*(_QWORD *)(v151 - 8));
  MEMORY[0x1E0C80A78](v6);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v7);
  sub_1C0787A68((uint64_t)v145 - v8);
  v146 = sub_1C106EB24();
  sub_1C0787718(*(_QWORD *)(v146 - 8));
  MEMORY[0x1E0C80A78](v9);
  sub_1C077AE40();
  sub_1C0787A68(v10);
  v181 = type metadata accessor for StaticKnowledgeTriple();
  sub_1C0787718(*(_QWORD *)(v181 - 8));
  MEMORY[0x1E0C80A78](v11);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v12);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v145 - v14;
  v16 = sub_1C106E590();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)v145 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1C07ACF80(&qword_1ED756690);
  MEMORY[0x1E0C80A78](v20);
  sub_1C077AE40();
  sub_1C0787A68(v21);
  v22 = sub_1C106D9A8();
  sub_1C0787718(*(_QWORD *)(v22 - 8));
  MEMORY[0x1E0C80A78](v23);
  sub_1C077AED0();
  sub_1C077AF60();
  v25 = MEMORY[0x1E0C80A78](v24);
  v27 = (char *)v145 - v26;
  v169 = (uint64_t)v145 - v26;
  MEMORY[0x1E0C80A78](v25);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v28);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v29);
  sub_1C0787A68((uint64_t)v145 - v30);
  v164 = sub_1C106D9B4();
  sub_1C0787718(*(_QWORD *)(v164 - 8));
  MEMORY[0x1E0C80A78](v31);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v32);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v33);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v34);
  v174 = (uint64_t)v145 - v35;
  v36 = sub_1C07ACF80(&qword_1ED75E838);
  v37 = *(_QWORD *)(sub_1C106E41C() - 8);
  v38 = *(_QWORD *)(v37 + 72);
  v39 = *(unsigned __int8 *)(v37 + 80);
  v40 = (v39 + 32) & ~v39;
  v160 = v36;
  v158 = v40 + v38;
  v159 = v39 | 7;
  v41 = swift_allocObject();
  v175 = xmmword_1C1079220;
  *(_OWORD *)(v41 + 16) = xmmword_1C1079220;
  v161 = v40;
  sub_1C106E248();
  sub_1C07908E4();
  v167 = v42;
  v148 = sub_1C07ACF80(&qword_1ED762CB0);
  inited = (__n128 *)swift_initStackObject();
  sub_1C07965A8(inited);
  v147 = a1;
  *(_QWORD *)(v44 + 32) = a1;
  *(_QWORD *)(v44 + 40) = a2;
  v152 = a2;
  sub_1C0778624();
  sub_1C0AA7704();
  v165 = v45;
  v46 = *MEMORY[0x1E0D3C448];
  v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(v180 + 104);
  v47(v176, v46, v22);
  v47(v173, v46, v22);
  v48 = sub_1C07A5E24((uint64_t)v187);
  v47(v48, v46, v22);
  v47((uint64_t)v27, v46, v22);
  v49 = v168;
  v162 = v46;
  v163 = v47;
  v47(v168, v46, v22);
  v143 = v49;
  v144 = 0;
  v50 = v49;
  v51 = v169;
  sub_1C106D864();
  sub_1C079C5A0();
  sub_1C077960C();
  v52 = *(void (**)(_QWORD, _QWORD))(v180 + 8);
  sub_1C078ACAC(v50);
  sub_1C078ACAC(v51);
  sub_1C078ACAC(v22);
  sub_1C078ACAC(v173);
  v154 = v22;
  v165 = v52;
  v52(v176, v22);
  v53 = sub_1C106EB78();
  v54 = v171;
  sub_1C07B2D8C(v171, 1, 1, v53);
  v55 = v172;
  v56 = sub_1C0BA469C(v174, v54);
  sub_1C0A6D714(v54);
  if (!*(_QWORD *)(v56 + 16))
  {
    sub_1C077B5B4();
    sub_1C07B7B9C();
    sub_1C07A1D90();
    v81 = sub_1C106F538();
    v82 = sub_1C1070390();
    if (os_log_type_enabled(v81, v82))
    {
      v83 = (uint8_t *)sub_1C0775854();
      v182 = sub_1C0775854();
      *(_DWORD *)v83 = 136315138;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v186 = sub_1C0797EE0();
      sub_1C10705AC();
      sub_1C077B1D8();
      _os_log_impl(&dword_1C0771000, v81, v82, "ConfidenceQuery: Confidence Source <%s> unavailable", v83, 0xCu);
      swift_arrayDestroy();
      sub_1C0776778();
    }
    sub_1C07863A4();

    sub_1C0798AA0();
    sub_1C0787E10();
    return 0;
  }
  v150 = v53;
  sub_1C07BCECC(MEMORY[0x1E0DEE9D8]);
  sub_1C09D32B4();
  v145[0] = (*(unsigned __int8 *)(v153 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v153 + 80);
  v167 = v56;
  v180 = *(_QWORD *)(v153 + 72);
  v57 = v166;
  do
  {
    sub_1C079EEF8();
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v19, &v15[*(int *)(v181 + 20)], v16);
    sub_1C0A718E0((uint64_t)v15);
    if ((sub_1C07B17F8() & 1) == 0)
    {
      sub_1C079F5A4();
      sub_1C09D32B4();
      v55 = v182;
    }
    v58 = *(_QWORD *)(v55 + 16);
    if (v58 >= *(_QWORD *)(v55 + 24) >> 1)
    {
      sub_1C09D32B4();
      v55 = v182;
    }
    *(_QWORD *)(v55 + 16) = v58 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v17 + 32))(v55+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(_QWORD *)(v17 + 72) * v58, v19, v16);
    sub_1C07B480C();
  }
  while (!v59);
  sub_1C078F230();
  sub_1C0898DB0();
  v167 = v60;
  v61 = v154;
  v62 = v155;
  if (v57)
  {
    sub_1C07A5E24((uint64_t)v183);
    v63 = v158;
    v64 = (__n128 *)swift_allocObject();
    sub_1C07950A4(v64);
    sub_1C0778624();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C106DEAC();
    sub_1C07908E4();
    v178 = v65;
    v66 = (__n128 *)swift_initStackObject();
    sub_1C07965A8(v66);
    *(_QWORD *)(v67 + 32) = v62;
    *(_QWORD *)(v67 + 40) = v57;
    sub_1C0778624();
    sub_1C0AA7704();
    v153 = v68;
    v69 = (__n128 *)swift_allocObject();
    sub_1C077C38C(v69);
    sub_1C106E338();
    sub_1C0AA7870();
    v71 = (uint64_t *)v70;
    v149 = v70;
    v163(v176, v162, v61);
    v72 = sub_1C07A5E24((uint64_t)&v188);
    sub_1C07A26B8(v72);
    v73 = v170;
    sub_1C07A26B8(v170);
    v74 = v169;
    sub_1C07A26B8(v169);
    v75 = sub_1C0795A70();
    sub_1C07A26B8(v75);
    v141 = (char *)v63;
    v142 = v71;
    v76 = v157;
    sub_1C07A9F64();
    sub_1C079C5A0();
    sub_1C0775844();
    swift_bridgeObjectRelease();
    sub_1C078F230();
    sub_1C07ADD74();
    sub_1C0799A00(v74);
    sub_1C0799A00(v73);
    sub_1C0799A00(v58);
    sub_1C0799A00(v176);
    sub_1C07A0CE8();
    v77 = sub_1C079736C(v76);
    sub_1C07A1DA4();
    if (*(_QWORD *)(v77 + 16))
    {
      sub_1C078F230();
      if (*(_QWORD *)(v77 + 16))
      {
        sub_1C07BCECC(MEMORY[0x1E0DEE9D8]);
        sub_1C09D3280();
        v78 = v146;
        v63 = v145[2];
        v58 = v177;
        do
        {
          sub_1C079EEF8();
          (*(void (**)(unint64_t, char *, uint64_t))(v63 + 16))(v58, &v15[*(int *)(v181 + 28)], v78);
          sub_1C0A718E0((uint64_t)v15);
          if ((sub_1C07B17F8() & 1) == 0)
          {
            sub_1C079F5A4();
            sub_1C09D3280();
            v76 = v182;
          }
          v79 = *(_QWORD *)(v76 + 16);
          if (v79 >= *(_QWORD *)(v76 + 24) >> 1)
          {
            sub_1C09D3280();
            v76 = v182;
          }
          *(_QWORD *)(v76 + 16) = v79 + 1;
          v80 = v76
              + ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))
              + *(_QWORD *)(v63 + 72) * v79;
          v58 = v177;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v63 + 32))(v80, v177, v78);
          sub_1C07B480C();
        }
        while (!v59);
      }
      sub_1C0775844();
      sub_1C0898DD4();
      v178 = v107;
      v108 = (__n128 *)sub_1C07A4794();
      sub_1C07965A8(v108);
      sub_1C106DEAC();
      sub_1C0AA7870();
      v109 = (__n128 *)sub_1C078E038();
      sub_1C077C38C(v109);
      sub_1C106DCCC();
      sub_1C0AA7870();
      v93 = v110;
      v111 = sub_1C07A5E24((uint64_t)&v189);
      v163(v111, v162, v61);
      v112 = v173;
      sub_1C07911AC(v173);
      v113 = v170;
      sub_1C07911AC(v170);
      v114 = v169;
      sub_1C07911AC(v169);
      v115 = sub_1C0795A70();
      sub_1C07911AC(v115);
      v140[0] = v63;
      v140[1] = v93;
      v116 = v178;
      sub_1C106D864();
      sub_1C079C5A0();
      swift_bridgeObjectRelease();
      sub_1C077960C();
      sub_1C0775844();
      sub_1C07ADD74();
      sub_1C0799A00(v114);
      sub_1C0799A00(v113);
      sub_1C0799A00(v112);
      sub_1C0799A00(v58);
      sub_1C07A0CE8();
      v117 = sub_1C079736C(v156);
      sub_1C07A1DA4();
      if (*(_QWORD *)(v117 + 16))
      {
        sub_1C07A8044(MEMORY[0x1E0DEE9D8]);
        v93 = 0;
        v178 = v117;
        v118 = v117 + v145[0];
        while (1)
        {
          sub_1C079DC98(v118, (uint64_t)&v191);
          sub_1C078CAD4();
          MEMORY[0x1E0C80A78](v119);
          v140[-2] = &v185;
          if ((v116 & 0x1000000000000000) != 0 || !(v116 & 0x2000000000000000 | v114 & 0x1000000000000000))
          {
            sub_1C077AE90();
            sub_1C1070750();
          }
          else
          {
            if ((v116 & 0x2000000000000000) != 0)
            {
              sub_1C07A8678();
              if (!(!v59 & v100))
                __asm { BR              X9 }
              if (v121 == 32)
              {
                sub_1C077AE90();
              }
              else
              {
                sub_1C077AE90();
                if (sub_1C07B72B4())
                {
                  sub_1C07A26A8();
                  goto LABEL_73;
                }
              }
              v122 = 0;
LABEL_73:
              v184 = v122;
              sub_1C077960C();
              goto LABEL_74;
            }
            if ((v114 & 0x1000000000000000) != 0)
              v114 = (v116 & 0xFFFFFFFFFFFFFFFLL) + 32;
            else
              v114 = sub_1C079BED8();
            switch(*(_BYTE *)v114)
            {
              case 0:
              case 9:
              case 0xA:
              case 0xB:
              case 0xC:
              case 0xD:
                goto LABEL_65;
              case 1:
              case 2:
              case 3:
              case 4:
              case 5:
              case 6:
              case 7:
              case 8:
                goto LABEL_82;
              default:
                if (*(_BYTE *)v114 == 32)
                {
LABEL_65:
                  sub_1C077AE90();
LABEL_66:
                  v120 = 0;
                  goto LABEL_67;
                }
LABEL_82:
                sub_1C077AE90();
                if (!sub_1C07A3194())
                  goto LABEL_66;
                sub_1C07A26A8();
LABEL_67:
                v184 = v120;
                break;
            }
          }
          sub_1C077960C();
LABEL_74:
          sub_1C0785030();
          sub_1C0A718E0(v179);
          if ((sub_1C07AD1E8() & 1) == 0)
          {
            v116 = (uint64_t)&v186;
            sub_1C079B4C8();
            v114 = v186;
          }
          v123 = *(_QWORD *)(v114 + 16);
          if (v123 >= *(_QWORD *)(v114 + 24) >> 1)
          {
            v116 = (uint64_t)&v186;
            sub_1C079B4C8();
            v114 = v186;
          }
          *(_QWORD *)(v114 + 16) = v123 + 1;
          sub_1C07BC7DC();
          if (v59)
          {
            sub_1C078F230();
            goto LABEL_90;
          }
        }
      }
      sub_1C077B5B4();
      v114 = MEMORY[0x1E0DEE9D8];
LABEL_90:
      v124 = v157;
      v125 = *(_QWORD *)(v114 + 16);
      if (v125)
      {
        v126 = (double *)(v114 + 32);
        v127 = MEMORY[0x1E0DEE9D8];
        do
        {
          v128 = *v126;
          if (*v126 > 0.0)
          {
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v182 = v127;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_1C079B4C8();
              v127 = v182;
            }
            v130 = *(_QWORD *)(v127 + 16);
            v93 = v130 + 1;
            if (v130 >= *(_QWORD *)(v127 + 24) >> 1)
            {
              sub_1C079B4C8();
              v127 = v182;
            }
            *(_QWORD *)(v127 + 16) = v93;
            *(double *)(v127 + 8 * v130 + 32) = v128;
          }
          ++v126;
          --v125;
        }
        while (v125);
      }
      else
      {
        v127 = MEMORY[0x1E0DEE9D8];
      }
      sub_1C07785A0();
      sub_1C082AEDC(v127);
      sub_1C078D6B4();
      sub_1C07AAECC();
      sub_1C078ACAC(v156);
      v131 = v124;
      goto LABEL_115;
    }
    sub_1C0775844();
    sub_1C078F230();
    sub_1C07B7B9C();
    sub_1C07A1D90();
    v103 = v166;
    sub_1C0778624();
    v104 = sub_1C106F538();
    v105 = sub_1C1070390();
    if (os_log_type_enabled(v104, v105))
    {
      v106 = sub_1C0775854();
      v182 = sub_1C0775854();
      *(_DWORD *)v106 = 136315394;
      sub_1C0778624();
      v186 = sub_1C0788DAC(v155, v103, &v182);
      sub_1C07B8A68();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v106 + 12) = 2080;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v186 = sub_1C0797EE0();
      sub_1C07B8A68();
      sub_1C077B1D8();
      _os_log_impl(&dword_1C0771000, v104, v105, "ConfidenceQuery: Signal Type <%s> for Confidence Source <%s> unavailable", (uint8_t *)v106, 0x16u);
      swift_arrayDestroy();
      sub_1C0776778();
    }
    swift_bridgeObjectRelease_n();
    sub_1C07863A4();

    sub_1C0798AA0();
    sub_1C07AAECC();
    v138 = v164;
    ((void (*)(uint64_t, uint64_t))v104)(v157, v164);
    ((void (*)(uint64_t, uint64_t))v104)(v174, v138);
    return 0;
  }
  v84 = (__n128 *)sub_1C07A4794();
  sub_1C07950A4(v84);
  sub_1C106DEAC();
  sub_1C07908E4();
  v85 = (__n128 *)sub_1C078E038();
  sub_1C07965A8(v85);
  sub_1C106DCCC();
  sub_1C0AA7870();
  v87 = v86;
  v88 = v176;
  v163(v176, v162, v61);
  v89 = sub_1C07A5E24((uint64_t)&v188);
  sub_1C078AFFC(v89);
  v90 = v170;
  sub_1C078AFFC(v170);
  v91 = v169;
  sub_1C078AFFC(v169);
  v92 = sub_1C0795A70();
  sub_1C078AFFC(v92);
  v141 = v19;
  v142 = v87;
  v93 = v149;
  v94 = v167;
  sub_1C07A9F64();
  sub_1C07785A0();
  swift_bridgeObjectRelease();
  sub_1C077960C();
  sub_1C07ADD74();
  sub_1C0799A00(v91);
  sub_1C0799A00(v90);
  sub_1C0799A00(v58);
  sub_1C0799A00(v88);
  sub_1C07A0CE8();
  v95 = sub_1C079736C(v93);
  sub_1C07A1DA4();
  if (*(_QWORD *)(v95 + 16))
  {
    sub_1C07A8044(MEMORY[0x1E0DEE9D8]);
    v93 = 0;
    v179 = v95;
    v96 = v95 + v145[0];
    while (1)
    {
      sub_1C079DC98(v96, (uint64_t)&v190);
      sub_1C078CAD4();
      MEMORY[0x1E0C80A78](v97);
      v141 = &v185;
      if (((unint64_t)v87 & 0x1000000000000000) != 0
        || !((unint64_t)v87 & 0x2000000000000000 | v94 & 0x1000000000000000))
      {
        sub_1C077AE90();
        sub_1C1070750();
      }
      else
      {
        if (((unint64_t)v87 & 0x2000000000000000) != 0)
        {
          sub_1C07A8678();
          if (!(!v59 & v100))
            __asm { BR              X9 }
          if (v99 == 32)
          {
            sub_1C077AE90();
          }
          else
          {
            sub_1C077AE90();
            if (sub_1C07B72B4())
            {
              sub_1C07A26A8();
              goto LABEL_38;
            }
          }
          v101 = 0;
LABEL_38:
          v184 = v101;
          sub_1C077960C();
          goto LABEL_39;
        }
        if ((v94 & 0x1000000000000000) != 0)
          v94 = ((unint64_t)v87 & 0xFFFFFFFFFFFFFFFLL) + 32;
        else
          v94 = sub_1C079BED8();
        switch(*(_BYTE *)v94)
        {
          case 0:
          case 9:
          case 0xA:
          case 0xB:
          case 0xC:
          case 0xD:
            goto LABEL_30;
          case 1:
          case 2:
          case 3:
          case 4:
          case 5:
          case 6:
          case 7:
          case 8:
            goto LABEL_47;
          default:
            if (*(_BYTE *)v94 == 32)
            {
LABEL_30:
              sub_1C077AE90();
LABEL_31:
              v98 = 0;
              goto LABEL_32;
            }
LABEL_47:
            sub_1C077AE90();
            if (!sub_1C07A3194())
              goto LABEL_31;
            sub_1C07A26A8();
LABEL_32:
            v184 = v98;
            break;
        }
      }
      sub_1C077960C();
LABEL_39:
      sub_1C0785030();
      sub_1C0A718E0(v178);
      if ((sub_1C07AD1E8() & 1) == 0)
      {
        v87 = &v186;
        sub_1C079B4C8();
        v94 = v186;
      }
      v102 = *(_QWORD *)(v94 + 16);
      if (v102 >= *(_QWORD *)(v94 + 24) >> 1)
      {
        v87 = &v186;
        sub_1C079B4C8();
        v94 = v186;
      }
      *(_QWORD *)(v94 + 16) = v102 + 1;
      sub_1C07BC7DC();
      if (v59)
      {
        sub_1C078F230();
        goto LABEL_103;
      }
    }
  }
  sub_1C077B5B4();
  v94 = MEMORY[0x1E0DEE9D8];
LABEL_103:
  v132 = *(_QWORD *)(v94 + 16);
  if (v132)
  {
    v133 = (double *)(v94 + 32);
    v134 = MEMORY[0x1E0DEE9D8];
    do
    {
      v135 = *v133;
      if (*v133 > 0.0)
      {
        v136 = swift_isUniquelyReferenced_nonNull_native();
        v182 = v134;
        if ((v136 & 1) == 0)
        {
          sub_1C079B4C8();
          v134 = v182;
        }
        v137 = *(_QWORD *)(v134 + 16);
        v93 = v137 + 1;
        if (v137 >= *(_QWORD *)(v134 + 24) >> 1)
        {
          sub_1C079B4C8();
          v134 = v182;
        }
        *(_QWORD *)(v134 + 16) = v93;
        *(double *)(v134 + 8 * v137 + 32) = v135;
      }
      ++v133;
      --v132;
    }
    while (v132);
  }
  else
  {
    v134 = MEMORY[0x1E0DEE9D8];
  }
  sub_1C07785A0();
  sub_1C082AEDC(v134);
  sub_1C078D6B4();
  sub_1C07AAECC();
  v131 = v149;
LABEL_115:
  sub_1C078ACAC(v131);
  sub_1C078ACAC(v174);
  return v93;
}

void sub_1C0A7362C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6[2];

  v2 = *(_QWORD *)(type metadata accessor for LiveGlobalKnowledgeTriple() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1C0C6EEC8();
    v3 = v5;
  }
  v4 = *(_QWORD *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  sub_1C0A777BC(v6);
  *a1 = v3;
}

uint64_t sub_1C0A736B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  type metadata accessor for Configuration();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0A776CC(a1, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  sub_1C0782134();
  v5 = sub_1C0A74384((uint64_t)v4);
  sub_1C07B2018(a1, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  return v5;
}

uint64_t GlobalKnowledgeStore.liveApiIdSearch(request:updateCache:lookupCache:serverTimeoutMs:)(uint64_t a1, int a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  void (*v45)(char *, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  NSObject *v75;
  os_log_type_t v76;
  uint8_t *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  double v86;
  double v87;
  uint64_t (*v88)(uint64_t, _QWORD);
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t (*v96)(uint64_t, _QWORD);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  _QWORD *v103;
  void *v104;
  uint64_t v105;
  uint64_t v106;
  const void *v107;
  void (*v108)(uint64_t, uint64_t);
  uint64_t (*v109)(uint64_t, _QWORD);
  NSObject *v110;
  os_log_type_t v111;
  uint8_t *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t (*v124)(uint64_t, _QWORD);
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  int v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  int v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t aBlock;
  _QWORD v155[3];
  _QWORD v156[4];
  char v157[8];
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;

  v147 = a4;
  v148 = a3;
  v142 = a2;
  v6 = sub_1C106F544();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  sub_1C077AED0();
  v145 = v8;
  MEMORY[0x1E0C80A78](v9);
  sub_1C0787A68((uint64_t)&v126 - v10);
  v11 = sub_1C106F814();
  sub_1C077B58C(v11, (uint64_t)&v159);
  sub_1C0787718(v12);
  MEMORY[0x1E0C80A78](v13);
  sub_1C077AE40();
  sub_1C0787A68(v14);
  v15 = sub_1C1070420();
  sub_1C077B58C(v15, (uint64_t)v156);
  sub_1C0787718(v16);
  MEMORY[0x1E0C80A78](v17);
  sub_1C077AE40();
  sub_1C0787A68(v18);
  v19 = sub_1C10703FC();
  sub_1C077B58C(v19, (uint64_t)v155);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v20);
  sub_1C077AE40();
  sub_1C0787A68(v21);
  v22 = sub_1C106F838();
  sub_1C077B58C(v22, (uint64_t)v157);
  sub_1C0787718(v23);
  MEMORY[0x1E0C80A78](v24);
  sub_1C077AE40();
  sub_1C0787A68(v25);
  v26 = sub_1C106E824();
  sub_1C077B58C(v26, (uint64_t)&v161);
  sub_1C0787718(v27);
  MEMORY[0x1E0C80A78](v28);
  sub_1C077AE40();
  sub_1C0787A68(v29);
  v30 = sub_1C106ADE0();
  sub_1C077B58C(v30, (uint64_t)&v160);
  sub_1C0787718(v31);
  MEMORY[0x1E0C80A78](v32);
  sub_1C077AE40();
  sub_1C0787A68(v33);
  v34 = sub_1C106E7AC();
  v35 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  sub_1C077FD28();
  MEMORY[0x1E0C80A78](v36);
  v38 = (char *)&v126 - v37;
  MEMORY[0x1E0C80A78](v39);
  v41 = (char *)&v126 - v40;
  MEMORY[0x1E0C80A78](v42);
  v44 = (char *)&v126 - v43;
  v151 = sub_1C0778598();
  v152 = v35;
  *(_QWORD *)(v151 + 16) = MEMORY[0x1E0DEE9D8];
  v45 = *(void (**)(char *, uint64_t, uint64_t))(v35 + 16);
  v153 = v44;
  v45(v44, a1, v34);
  v146 = a1;
  v46 = *(_QWORD *)(sub_1C106E788() + 16);
  swift_bridgeObjectRelease();
  if (!v46)
  {
    sub_1C0A77324();
    sub_1C0775810();
    *(_QWORD *)v80 = 0xD000000000000022;
    *(_QWORD *)(v80 + 8) = 0x80000001C10F4B30;
    *(_BYTE *)(v80 + 16) = 1;
    swift_willThrow();
    v70 = (uint64_t)v153;
LABEL_15:
    (*(void (**)(uint64_t, uint64_t))(v152 + 8))(v70, v34);
    swift_release();
    return v34;
  }
  v144 = v34;
  v138 = v7;
  v139 = v6;
  if ((v148 & 1) != 0)
  {
    v47 = *(_QWORD *)(*(_QWORD *)(v149 + 16) + OBJC_IVAR____TtC24IntelligencePlatformCore23GlobalKnowledgeDatabase_pool);
    swift_retain();
    sub_1C0B50234(v146, v47, v48, v49, v50, v51, v52, v53, v126, v127, v128, v129, v130, v131, v132, v133, v134, v135, v136,
      v137);
    v34 = v54;
    sub_1C0B50C20();
    sub_1C0B51398((uint64_t)v38, v47, v55, v56, v57, v58, v59, v60, v126, v127, v128, v129, v130, v131, v132, v133, v134, v135, v136,
      v137);
    v61 = v38;
    v62 = v152;
    v63 = v144;
    (*(void (**)(char *, uint64_t))(v152 + 8))(v61, v144);
    v64 = *(void (**)(char *, uint64_t, uint64_t))(v62 + 32);
    v64(v41, v4, v63);
    v65 = (uint64_t)v153;
    sub_1C0795A80();
    v64((char *)v65, (uint64_t)v41, v63);
    v66 = sub_1C106E788();
    swift_release();
    v67 = *(_QWORD *)(v66 + 16);
    swift_bridgeObjectRelease();
    if (!v67)
    {
      sub_1C0795A80();
      swift_release();
      return v34;
    }
  }
  v68 = *(_QWORD *)(v149 + OBJC_IVAR____TtC24IntelligencePlatformCore20GlobalKnowledgeStore_liveApi + 24);
  v69 = *(_QWORD *)(v149 + OBJC_IVAR____TtC24IntelligencePlatformCore20GlobalKnowledgeStore_liveApi + 32);
  sub_1C07A9480((_QWORD *)(v149 + OBJC_IVAR____TtC24IntelligencePlatformCore20GlobalKnowledgeStore_liveApi), v68);
  v70 = (uint64_t)v153;
  v71 = v150;
  v72 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v69 + 8))(v153, v147, v68, v69);
  if (v71)
  {
    swift_bridgeObjectRelease();
    v74 = v145;
    sub_1C106F16C();
    sub_1C077C818();
    sub_1C077C818();
    v75 = sub_1C106F538();
    v76 = sub_1C1070390();
    if (os_log_type_enabled(v75, v76))
    {
      v77 = (uint8_t *)sub_1C0775854();
      v78 = (_QWORD *)sub_1C0775854();
      *(_DWORD *)v77 = 138412290;
      sub_1C077C818();
      v79 = _swift_stdlib_bridgeErrorToNSError();
      aBlock = v79;
      sub_1C10705AC();
      *v78 = v79;
      sub_1C077C220();
      sub_1C077C220();
      _os_log_impl(&dword_1C0771000, v75, v76, "GlobalKnowledgeStore error while querying global kg API: %@", v77, 0xCu);
      sub_1C07ACF80(&qword_1ED7614A0);
      swift_arrayDestroy();
      sub_1C0776778();
    }
    sub_1C077C220();
    sub_1C077C220();
    v118 = v139;
    v119 = v138;
    v34 = v144;

    (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v74, v118);
    swift_getErrorValue();
    v120 = sub_1C1070D74();
    v122 = v121;
    sub_1C0A77324();
    sub_1C0775810();
    *(_QWORD *)v123 = v120;
    *(_QWORD *)(v123 + 8) = v122;
    *(_BYTE *)(v123 + 16) = 0;
    swift_willThrow();
    sub_1C077C220();
    goto LABEL_15;
  }
  v148 = v73;
  v81 = v151;
  *(_QWORD *)(v151 + 16) = v72;
  swift_bridgeObjectRelease();
  v82 = sub_1C0778598();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0B4FB4C();
  v84 = v83;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v82 + 16) = v84;
  v85 = v140;
  sub_1C106ADD4();
  sub_1C106AD80();
  v87 = v86;
  sub_1C077B5A8();
  sub_1C077AE54(v85, v88);
  v89 = *(_QWORD *)(v81 + 16);
  v90 = *(_QWORD *)(v82 + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v91 = v141;
  sub_1C106E7A0();
  sub_1C0A75EDC(v89, v90, v91, v87);
  v93 = v92;
  v95 = v94;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C077B5A8();
  sub_1C077AE54(v91, v96);
  *(_QWORD *)(v81 + 16) = v93;
  swift_bridgeObjectRelease();
  v147 = v82;
  *(_QWORD *)(v82 + 16) = v95;
  swift_bridgeObjectRelease();
  sub_1C0899344();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0899344();
  sub_1C089F004();
  sub_1C08A302C();
  v98 = v97;
  swift_bridgeObjectRelease();
  v158 = v98;
  sub_1C0A7362C(&v158);
  v99 = 0;
  v100 = v143;
  if ((v142 & 1) != 0)
  {
    if (!*(_QWORD *)(*(_QWORD *)(v81 + 16) + 16))
    {
      if ((*(_QWORD *)(v95 + 16) == 0) | v148 & 1)
        goto LABEL_12;
      goto LABEL_11;
    }
    if ((v148 & 1) == 0)
    {
LABEL_11:
      sub_1C08D8780();
      v101 = v132;
      sub_1C106F82C();
      aBlock = MEMORY[0x1E0DEE9D8];
      sub_1C07803F8(&qword_1ED758DB0, (void (*)(uint64_t))MEMORY[0x1E0DEF810]);
      v150 = 0;
      sub_1C07ACF80((uint64_t *)&unk_1ED758CF0);
      sub_1C07BB218(&qword_1ED758D00, (uint64_t *)&unk_1ED758CF0);
      sub_1C1070660();
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v129 + 104))(v131, *MEMORY[0x1E0DEF8D0], v130);
      v102 = (void *)sub_1C1070444();
      v103 = (_QWORD *)sub_1C0778598();
      v103[2] = v149;
      v103[3] = v81;
      v103[4] = v147;
      v156[0] = sub_1C0A77394;
      v156[1] = v103;
      aBlock = MEMORY[0x1E0C809B0];
      v155[0] = 1107296256;
      v155[1] = sub_1C0A76A40;
      v155[2] = &unk_1E7A1C7F0;
      v104 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      sub_1C0779758();
      sub_1C106F82C();
      v156[3] = MEMORY[0x1E0DEE9D8];
      sub_1C07803F8(qword_1ED761568, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
      sub_1C07ACF80(&qword_1ED761460);
      sub_1C07BB218(&qword_1ED761578, &qword_1ED761460);
      v105 = v135;
      v106 = v137;
      sub_1C1070660();
      MEMORY[0x1C3BA6D58](0, v101, v105, v104);
      v107 = v104;
      v99 = v150;
      _Block_release(v107);

      sub_1C077B5A8();
      v108(v105, v106);
      sub_1C077B5A8();
      sub_1C077AE54(v101, v109);
      swift_release();
    }
  }
LABEL_12:
  sub_1C106F16C();
  v110 = sub_1C106F538();
  v111 = sub_1C1070384();
  if (os_log_type_enabled(v110, v111))
  {
    v112 = (uint8_t *)sub_1C0775854();
    v113 = sub_1C0775854();
    v150 = v99;
    aBlock = v113;
    *(_DWORD *)v112 = 136315138;
    sub_1C0775864();
    v114 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v115 = Array<A>.toIdString.getter(v114);
    v117 = v116;
    swift_bridgeObjectRelease();
    v156[2] = sub_1C0788DAC(v115, v117, &aBlock);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0771000, v110, v111, "GlobalKnowledgeStore results: %s", v112, 0xCu);
    swift_arrayDestroy();
    sub_1C0776778();
  }

  sub_1C077B5A8();
  sub_1C077AE54(v100, v124);
  sub_1C077AE54((uint64_t)v153, *(uint64_t (**)(uint64_t, _QWORD))(v152 + 8));
  sub_1C0775864();
  v34 = v158;
  swift_release();
  swift_release();
  return v34;
}

uint64_t sub_1C0A742CC(uint64_t a1, uint64_t a2)
{
  _QWORD v3[4];

  v3[2] = a1;
  v3[3] = a2;
  sub_1C0779758();
  sub_1C0BB979C((uint64_t)sub_1C0A77660, (uint64_t)v3);
  return sub_1C07785A8();
}

uint64_t GlobalKnowledgeStore.__allocating_init<A>(config:liveApi:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  v8 = sub_1C0782134();
  GlobalKnowledgeStore.init<A>(config:liveApi:)(a1, a2, a3, a4);
  return v8;
}

uint64_t sub_1C0A74384(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;
  ValueMetadata *v8;
  _UNKNOWN **v9;

  v4 = v1 + OBJC_IVAR____TtC24IntelligencePlatformCore20GlobalKnowledgeStore_config;
  sub_1C0A776CC(a1, v1 + OBJC_IVAR____TtC24IntelligencePlatformCore20GlobalKnowledgeStore_config, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  if (qword_1ED762E70 != -1)
    swift_once();
  swift_retain();
  v5 = sub_1C0CBD834();
  swift_release();
  if (v2)
  {
    sub_1C07B2018(a1, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    sub_1C07B2018(v4, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(_QWORD *)(v1 + 16) = v5;
    v8 = &type metadata for LiveGlobalKnowledgeApi;
    v9 = &protocol witness table for LiveGlobalKnowledgeApi;
    sub_1C07B2018(a1, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    sub_1C077DD60(&v7, v1 + OBJC_IVAR____TtC24IntelligencePlatformCore20GlobalKnowledgeStore_liveApi);
  }
  return v1;
}

uint64_t *GlobalKnowledgeStore.init<A>(config:liveApi:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = *v4;
  v10 = (uint64_t)v4 + OBJC_IVAR____TtC24IntelligencePlatformCore20GlobalKnowledgeStore_config;
  sub_1C0A776CC(a1, (uint64_t)v4 + OBJC_IVAR____TtC24IntelligencePlatformCore20GlobalKnowledgeStore_config, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  if (qword_1ED762E70 != -1)
    swift_once();
  sub_1C0779758();
  v11 = sub_1C0CBD834();
  swift_release();
  if (v5)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a2, a3);
    sub_1C07B2018(a1, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    sub_1C07B2018(v10, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    swift_deallocPartialClassInstance();
  }
  else
  {
    v4[2] = v11;
    v15 = a3;
    v16 = a4;
    v12 = sub_1C079DFC4((uint64_t *)&v14);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(v12, a2, a3);
    sub_1C07B2018(a1, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    sub_1C077DD60(&v14, (uint64_t)v4 + OBJC_IVAR____TtC24IntelligencePlatformCore20GlobalKnowledgeStore_liveApi);
  }
  return v4;
}

BOOL static GlobalKnowledgeStore.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a1 + OBJC_IVAR____TtC24IntelligencePlatformCore20GlobalKnowledgeStore_config;
  v3 = a2 + OBJC_IVAR____TtC24IntelligencePlatformCore20GlobalKnowledgeStore_config;
  if ((MEMORY[0x1C3BA140C](a1 + OBJC_IVAR____TtC24IntelligencePlatformCore20GlobalKnowledgeStore_config, a2 + OBJC_IVAR____TtC24IntelligencePlatformCore20GlobalKnowledgeStore_config) & 1) == 0)return 0;
  v4 = *(int *)(sub_1C0779D10() + 20);
  v6 = *(_QWORD *)(v2 + v4);
  v5 = *(_QWORD *)(v2 + v4 + 8);
  v7 = (uint64_t *)(v3 + v4);
  v9 = *v7;
  v8 = v7[1];
  return v6 == v9 && v5 == v8;
}

uint64_t GlobalKnowledgeStore.hash(into:)()
{
  sub_1C079464C();
  sub_1C07803F8(&qword_1ED762670, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  sub_1C106FA0C();
  sub_1C0779D10();
  sub_1C1070E04();
  return sub_1C1070E04();
}

uint64_t GlobalKnowledgeStore.deinit()
{
  uint64_t v0;

  swift_release();
  sub_1C07B2018(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore20GlobalKnowledgeStore_config, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore20GlobalKnowledgeStore_liveApi);
  return v0;
}

uint64_t GlobalKnowledgeStore.__deallocating_deinit()
{
  GlobalKnowledgeStore.deinit();
  return swift_deallocClassInstance();
}

uint64_t GlobalKnowledgeStore.hashValue.getter()
{
  sub_1C1070DF8();
  sub_1C079464C();
  sub_1C07803F8(&qword_1ED762670, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  sub_1C106FA0C();
  sub_1C0779D10();
  sub_1C1070E04();
  sub_1C1070E04();
  return sub_1C1070E4C();
}

uint64_t sub_1C0A74814()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v25 = type metadata accessor for GlobalKnowledgeStore.StaticKnowledgeAssetStatus(0);
  v0 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v2 = (uint64_t *)((char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0779758();
  v3 = sub_1C0BB9974((uint64_t)sub_1C0A75118, 0);
  sub_1C07785A8();
  sub_1C07ACF80(&qword_1ED761310);
  inited = swift_initStackObject();
  v5 = inited;
  *(_OWORD *)(inited + 16) = xmmword_1C1079220;
  *(_QWORD *)(inited + 32) = 0xD000000000000014;
  *(_QWORD *)(inited + 40) = 0x80000001C10F4BB0;
  v6 = *(_QWORD *)(v3 + 16);
  if (v6)
  {
    v22 = inited;
    v27 = MEMORY[0x1E0DEE9D8];
    sub_1C09D4700();
    v7 = (*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
    v21 = v3;
    v8 = v3 + v7;
    v24 = *(_QWORD *)(v0 + 72);
    v23 = xmmword_1C1078FC0;
    do
    {
      sub_1C0A776CC(v8, (uint64_t)v2, type metadata accessor for GlobalKnowledgeStore.StaticKnowledgeAssetStatus);
      sub_1C07ACF80(&qword_1ED75E840);
      v9 = swift_initStackObject();
      *(_OWORD *)(v9 + 16) = v23;
      *(_QWORD *)(v9 + 32) = 0x73656C70697274;
      *(_QWORD *)(v9 + 40) = 0xE700000000000000;
      v26 = *(_QWORD *)((char *)v2 + *(int *)(v25 + 20));
      *(_QWORD *)(v9 + 48) = sub_1C1070C0C();
      *(_QWORD *)(v9 + 56) = v10;
      *(_QWORD *)(v9 + 64) = 0x6E6F6973726576;
      *(_QWORD *)(v9 + 72) = 0xE700000000000000;
      v26 = v2[4];
      *(_QWORD *)(v9 + 80) = sub_1C1070C0C();
      *(_QWORD *)(v9 + 88) = v11;
      v12 = sub_1C106F97C();
      v14 = v2[2];
      v13 = v2[3];
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C07B2018((uint64_t)v2, type metadata accessor for GlobalKnowledgeStore.StaticKnowledgeAssetStatus);
      v15 = v27;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C09D4700();
        v15 = v27;
      }
      v16 = *(_QWORD *)(v15 + 16);
      if (v16 >= *(_QWORD *)(v15 + 24) >> 1)
      {
        sub_1C09D4700();
        v15 = v27;
      }
      *(_QWORD *)(v15 + 16) = v16 + 1;
      v17 = (_QWORD *)(v15 + 24 * v16);
      v17[4] = v14;
      v17[5] = v13;
      v17[6] = v12;
      v8 += v24;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    v5 = v22;
  }
  else
  {
    swift_bridgeObjectRelease();
    v15 = MEMORY[0x1E0DEE9D8];
  }
  sub_1C0D9A01C(v15);
  v19 = v18;
  *(_QWORD *)(v5 + 72) = sub_1C07ACF80(&qword_1ED74D268);
  *(_QWORD *)(v5 + 48) = v19;
  return sub_1C106F97C();
}

uint64_t sub_1C0A74B54()
{
  return GlobalKnowledgeStore.hashValue.getter();
}

uint64_t sub_1C0A74B74()
{
  return GlobalKnowledgeStore.hash(into:)();
}

uint64_t sub_1C0A74B94()
{
  sub_1C1070DF8();
  sub_1C106AB28();
  sub_1C07803F8(&qword_1ED762670, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  sub_1C106FA0C();
  type metadata accessor for Configuration();
  sub_1C1070E04();
  sub_1C1070E04();
  return sub_1C1070E4C();
}

uint64_t sub_1C0A74C34@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1C0905A74();
  *a1 = result;
  return result;
}

uint64_t sub_1C0A74C5C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x617461646174656DLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4373656C70697274 && a2 == 0xEC000000746E756FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1C1070CB4();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1C0A74D60(char a1)
{
  if ((a1 & 1) != 0)
    return 0x4373656C70697274;
  else
    return 0x617461646174656DLL;
}

void sub_1C0A74DA0(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char v23;
  char v24;

  v19 = a2;
  v20 = type metadata accessor for StaticKnowledgeAssetMetadata(0);
  MEMORY[0x1E0C80A78](v20);
  v21 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1C07ACF80(&qword_1ED74D468);
  v5 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for GlobalKnowledgeStore.StaticKnowledgeAssetStatus(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07A9480(a1, a1[3]);
  sub_1C0A79000();
  sub_1C1070E94();
  if (v2)
  {
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)a1);
  }
  else
  {
    v18 = v8;
    v11 = v5;
    v12 = (uint64_t)v10;
    v13 = v19;
    v24 = 0;
    sub_1C07803F8(&qword_1ED7605E8, (void (*)(uint64_t))type metadata accessor for StaticKnowledgeAssetMetadata);
    v14 = (uint64_t)v21;
    v15 = v22;
    sub_1C1070AE0();
    sub_1C07E05F4(v14, v12, type metadata accessor for StaticKnowledgeAssetMetadata);
    v23 = 1;
    v16 = sub_1C1070AD4();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v15);
    *(_QWORD *)(v12 + *(int *)(v18 + 20)) = v16;
    sub_1C0A776CC(v12, v13, type metadata accessor for GlobalKnowledgeStore.StaticKnowledgeAssetStatus);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)a1);
    sub_1C07B2018(v12, type metadata accessor for GlobalKnowledgeStore.StaticKnowledgeAssetStatus);
  }
}

BOOL sub_1C0A75000(uint64_t *a1, uint64_t *a2)
{
  return static GlobalKnowledgeStore.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1C0A75020()
{
  char *v0;

  return sub_1C0A74D60(*v0);
}

uint64_t sub_1C0A75028@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0A74C5C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0A7504C()
{
  sub_1C0A79000();
  return sub_1C1070EE8();
}

uint64_t sub_1C0A75074()
{
  sub_1C0A79000();
  return sub_1C1070EF4();
}

void sub_1C0A7509C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0A74DA0(a1, a2);
}

uint64_t sub_1C0A750B0()
{
  sub_1C07803F8(qword_1ED74AED8, (void (*)(uint64_t))type metadata accessor for GlobalKnowledgeStore.StaticKnowledgeAssetStatus);
  return sub_1C106BDDC();
}

uint64_t sub_1C0A75118@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v20 = a1;
  v16 = a2;
  v2 = sub_1C07ACF80(&qword_1ED748230);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C07ACF80(&qword_1ED75E508);
  v18 = *(_QWORD *)(v6 - 8);
  v19 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for StaticKnowledgeAssetMetadata(0);
  sub_1C07ACF80(&qword_1ED74D528);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C1079220;
  if (qword_1ED74C8B0 != -1)
    swift_once();
  v10 = sub_1C07ACF80(&qword_1ED748228);
  sub_1C079E000(v10, (uint64_t)qword_1ED78CB30);
  sub_1C07BB218(&qword_1ED748220, &qword_1ED748228);
  sub_1C106BFA4();
  sub_1C106C0DC();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1C07803F8(&qword_1ED7605D8, (void (*)(uint64_t))type metadata accessor for StaticKnowledgeAssetMetadata);
  MEMORY[0x1C3BA22B8](v9);
  swift_bridgeObjectRelease();
  type metadata accessor for GlobalKnowledgeStore.StaticKnowledgeAssetStatus(0);
  sub_1C07803F8(&qword_1ED74AED0, (void (*)(uint64_t))type metadata accessor for GlobalKnowledgeStore.StaticKnowledgeAssetStatus);
  sub_1C07BB218(&qword_1ED760438, &qword_1ED75E508);
  v11 = v19;
  v12 = v21;
  v13 = sub_1C106BDC4();
  result = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v8, v11);
  if (!v12)
    *v16 = v13;
  return result;
}

void GlobalKnowledgeStore.liveGKSCacheSize.getter()
{
  uint64_t v0;
  void *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[5];
  uint64_t v7;

  sub_1C07911CC();
  sub_1C07911B8();
  MEMORY[0x1E0C80A78](v0);
  sub_1C07A0D08();
  v1 = (void *)sub_1C106F538();
  v2 = sub_1C1070384();
  if (sub_1C079E514(v2))
  {
    *(_WORD *)sub_1C0780FC8() = 0;
    sub_1C0799C78(&dword_1C0771000, v3, v4, "GlobalKnowledgeStore: Fetching Live GKS cache size");
    sub_1C0797BB4();
  }

  v5 = sub_1C07A47B0();
  v7 = MEMORY[0x1E0DEE9D8];
  MEMORY[0x1E0C80A78](v5);
  v6[2] = &v7;
  sub_1C0779758();
  sub_1C07C050C((uint64_t)sub_1C0A773A0, (uint64_t)v6);
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0A7548C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1C1070774();
  sub_1C106FC94();
  sub_1C106FC94();
  sub_1C106FC94();
  sub_1C0A776F0();
  sub_1C106B92C();
  if (v2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C1070C0C();
    sub_1C106FC94();
    swift_bridgeObjectRelease();
    sub_1C07E9DB0();
    v4 = *(_QWORD *)(*a2 + 16);
    sub_1C07EA490();
    v5 = *a2;
    *(_QWORD *)(v5 + 16) = v4 + 1;
    v6 = v5 + 16 * v4;
    *(_QWORD *)(v6 + 32) = 0;
    *(_QWORD *)(v6 + 40) = 0xE000000000000000;
    sub_1C1070774();
    sub_1C106FC94();
    sub_1C106FC94();
    sub_1C106FC94();
    type metadata accessor for LiveGlobalKnowledgeTriple();
    sub_1C07803F8(qword_1ED74BFB0, (void (*)(uint64_t))type metadata accessor for LiveGlobalKnowledgeTriple);
    sub_1C106B92C();
    sub_1C1070C0C();
    sub_1C106FC94();
    swift_bridgeObjectRelease();
    sub_1C07E9DB0();
    v7 = *(_QWORD *)(*a2 + 16);
    sub_1C07EA490();
    v8 = *a2;
    *(_QWORD *)(v8 + 16) = v7 + 1;
    v9 = v8 + 16 * v7;
    *(_QWORD *)(v9 + 32) = 0;
    *(_QWORD *)(v9 + 40) = 0xE000000000000000;
  }
}

void GlobalKnowledgeStore.liveGKSCacheContents.getter()
{
  uint64_t v0;
  void *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[5];
  uint64_t v6;

  sub_1C07911CC();
  sub_1C07911B8();
  MEMORY[0x1E0C80A78](v0);
  sub_1C07A0D08();
  v1 = (void *)sub_1C106F538();
  v2 = sub_1C1070384();
  if (sub_1C079E514(v2))
  {
    *(_WORD *)sub_1C0780FC8() = 0;
    sub_1C0799C78(&dword_1C0771000, v3, v4, "GlobalKnowledgeStore: Fetching Live GKS cache contents");
    sub_1C0797BB4();
  }

  sub_1C07A47B0();
  sub_1C07ACF80(&qword_1ED762B70);
  v6 = sub_1C106F97C();
  MEMORY[0x1E0C80A78](v6);
  v5[2] = &v6;
  sub_1C0779758();
  sub_1C07C050C((uint64_t)sub_1C0A773B8, (uint64_t)v5);
  sub_1C07785A8();
  sub_1C077C798();
}

uint64_t sub_1C0A757F0(const char *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  void (*v11)(_QWORD *@<X8>);
  void (*v12)(_QWORD *@<X8>);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  char v22;
  char v23;
  _QWORD *v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(_QWORD *@<X8>);
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  unint64_t v45;
  char v46;
  unint64_t v47;
  char v48;
  char v49;
  _QWORD *v50;
  unint64_t v51;
  char v52;
  _QWORD *v53;
  uint64_t v54;
  _QWORD *v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(_QWORD *@<X8>);
  uint64_t v70;
  void (*v71)(_QWORD *@<X8>);
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  char *v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;

  v3 = v2;
  v6 = type metadata accessor for LiveGlobalKnowledgeTriple();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07803F8(&qword_1EF641410, (void (*)(uint64_t))type metadata accessor for LiveGlobalKnowledgeTriple);
  sub_1C07803F8(qword_1ED74BFB0, (void (*)(uint64_t))type metadata accessor for LiveGlobalKnowledgeTriple);
  result = sub_1C106BD70();
  if (v2)
    return result;
  v11 = *(void (**)(_QWORD *@<X8>))(result + 16);
  v76 = a2;
  if (v11)
  {
    v72 = 0;
    v73 = (unint64_t)a1;
    v12 = 0;
    v13 = *(unsigned __int8 *)(v7 + 80);
    v71 = (void (*)(_QWORD *@<X8>))result;
    v14 = result + ((v13 + 32) & ~v13);
    v74 = *(_QWORD *)(v7 + 72);
    v75 = v9;
    while (1)
    {
      sub_1C0A776CC(v14, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
      v15 = LiveGlobalKnowledgeTriple.description.getter();
      v17 = v16;
      sub_1C077AB58((uint64_t)v12);
      swift_isUniquelyReferenced_nonNull_native();
      v82 = (_QWORD *)*a2;
      v18 = v82;
      *a2 = 0x8000000000000000;
      v19 = sub_1C077D774(0x6172675F6576696CLL, 0xEA00000000006870);
      if (__OFADD__(v18[2], (v20 & 1) == 0))
        break;
      v21 = v19;
      v22 = v20;
      sub_1C07ACF80(&qword_1ED751318);
      v23 = sub_1C107090C();
      v24 = v82;
      a2 = v76;
      if ((v23 & 1) != 0)
      {
        v25 = sub_1C077D774(0x6172675F6576696CLL, 0xEA00000000006870);
        if ((v22 & 1) != (v26 & 1))
          goto LABEL_40;
        v21 = v25;
      }
      *a2 = v24;
      swift_bridgeObjectRelease();
      v27 = *a2;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      if ((v22 & 1) == 0)
        sub_1C077CA74(v21, 0x6172675F6576696CLL, 0xEA00000000006870, MEMORY[0x1E0DEE9D8], v27);
      v28 = *(_QWORD *)(v27 + 56);
      swift_bridgeObjectRelease();
      v29 = (uint64_t *)(v28 + 8 * v21);
      sub_1C07E9DB0();
      v30 = *(_QWORD *)(*v29 + 16);
      sub_1C07EA490();
      v31 = *v29;
      *(_QWORD *)(v31 + 16) = v30 + 1;
      v32 = v31 + 16 * v30;
      *(_QWORD *)(v32 + 32) = v15;
      *(_QWORD *)(v32 + 40) = v17;
      v9 = v75;
      sub_1C07B2018((uint64_t)v75, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
      v14 += v74;
      v12 = sub_1C08B5130;
      v11 = (void (*)(_QWORD *@<X8>))((char *)v11 - 1);
      if (!v11)
      {
        swift_bridgeObjectRelease();
        v11 = sub_1C08B5130;
        v3 = v72;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_13:
    sub_1C0A7772C();
    sub_1C0A776F0();
    v33 = sub_1C106BD70();
    if (v3)
      return sub_1C077AB58((uint64_t)v11);
    v71 = v11;
    v72 = 0;
    v34 = *(_QWORD *)(v33 + 16);
    v70 = v33;
    if (!v34)
    {
      v69 = 0;
LABEL_35:
      swift_bridgeObjectRelease();
      sub_1C077AB58((uint64_t)v71);
      return sub_1C077AB58((uint64_t)v69);
    }
    v35 = 0;
    v36 = (uint64_t *)(v33 + 64);
    v73 = (unint64_t)"Static Triple Counts";
    v74 = 0x80000001C10F4BD0;
    v69 = sub_1C08B5130;
    while (1)
    {
      v37 = *(v36 - 3);
      v38 = *(v36 - 2);
      v39 = *(v36 - 1);
      v40 = *v36;
      v77 = *(v36 - 4);
      v78 = v37;
      v79 = v38;
      v80 = v39;
      v81 = v40;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v41 = sub_1C0B4FA34();
      v43 = v42;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C077AB58((uint64_t)v35);
      swift_isUniquelyReferenced_nonNull_native();
      v82 = (_QWORD *)*a2;
      v44 = v82;
      *a2 = 0x8000000000000000;
      v45 = sub_1C077D774(0xD000000000000012, v74);
      if (__OFADD__(v44[2], (v46 & 1) == 0))
        break;
      v47 = v45;
      v48 = v46;
      sub_1C07ACF80(&qword_1ED751318);
      v49 = sub_1C107090C();
      v50 = v82;
      a2 = v76;
      if ((v49 & 1) != 0)
      {
        v51 = sub_1C077D774(0xD000000000000012, v73 | 0x8000000000000000);
        if ((v48 & 1) != (v52 & 1))
          goto LABEL_40;
        v47 = v51;
      }
      v75 = (char *)v43;
      *a2 = v50;
      swift_bridgeObjectRelease();
      v53 = (_QWORD *)*a2;
      if ((v48 & 1) != 0)
      {
        v54 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      }
      else
      {
        v53[(v47 >> 6) + 8] |= 1 << v47;
        v55 = (_QWORD *)(v53[6] + 16 * v47);
        v56 = v73 | 0x8000000000000000;
        *v55 = 0xD000000000000012;
        v55[1] = v56;
        *(_QWORD *)(v53[7] + 8 * v47) = MEMORY[0x1E0DEE9D8];
        v57 = v53[2];
        v58 = v57 + 1;
        v59 = __OFADD__(v57, 1);
        v54 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        if (v59)
          goto LABEL_39;
        *(_QWORD *)(v54 + 16) = v58;
      }
      v60 = *(_QWORD *)(v54 + 56);
      swift_bridgeObjectRelease();
      v61 = *(_QWORD *)(v60 + 8 * v47);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v60 + 8 * v47) = v61;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1C07B7730();
        v61 = v66;
        *(_QWORD *)(v60 + 8 * v47) = v66;
      }
      v63 = *(_QWORD *)(v61 + 16);
      if (v63 >= *(_QWORD *)(v61 + 24) >> 1)
      {
        sub_1C07B7730();
        v61 = v67;
        *(_QWORD *)(v60 + 8 * v47) = v67;
      }
      v36 += 5;
      *(_QWORD *)(v61 + 16) = v63 + 1;
      v64 = v61 + 16 * v63;
      v65 = (uint64_t)v75;
      *(_QWORD *)(v64 + 32) = v41;
      *(_QWORD *)(v64 + 40) = v65;
      v35 = sub_1C08B5130;
      if (!--v34)
        goto LABEL_35;
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  result = sub_1C1070D44();
  __break(1u);
  return result;
}

Swift::Void __swiftcall GlobalKnowledgeStore.liveGKSEraseCache()()
{
  uint64_t v0;
  void *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C07911CC();
  sub_1C07911B8();
  MEMORY[0x1E0C80A78](v0);
  sub_1C07A0D08();
  v1 = (void *)sub_1C106F538();
  v2 = sub_1C1070390();
  if (sub_1C079E514(v2))
  {
    *(_WORD *)sub_1C0780FC8() = 0;
    sub_1C0799C78(&dword_1C0771000, v3, v4, "GlobalKnowledgeStore: Erasing live GKS cache");
    sub_1C0797BB4();
  }

  sub_1C07A47B0();
  sub_1C0779758();
  sub_1C077FF50((uint64_t)sub_1C0A75E48, 0);
  sub_1C07785A8();
}

uint64_t sub_1C0A75E48()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for LiveGlobalKnowledgeTriple();
  sub_1C07803F8(qword_1ED74BFB0, (void (*)(uint64_t))type metadata accessor for LiveGlobalKnowledgeTriple);
  result = sub_1C106B9B0();
  if (!v0)
  {
    sub_1C0A776F0();
    return sub_1C106B9B0();
  }
  return result;
}

void sub_1C0A75EDC(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v4;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  char *v25;
  void (*v26)(char *, uint64_t, uint64_t, double);
  int v27;
  double v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  double *v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  uint64_t v37;
  uint64_t (*v38)();
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  void (*v43)(char *, char *);
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t (*v49)();
  void (*v50)(char *, char *, uint64_t);
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  void (*v55)(char *, char *);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  double v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unsigned __int8 v98;

  v84 = a2;
  v85 = a1;
  v7 = (int *)type metadata accessor for LiveGlobalKnowledgeTriple();
  v94 = *((_QWORD *)v7 - 1);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v8);
  sub_1C077AED0();
  v96 = v9;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v84 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v84 - v14;
  v16 = sub_1C106F544();
  v92 = *(_QWORD *)(v16 - 8);
  v93 = v16;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v84 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1C106E824();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  sub_1C077FD28();
  v23 = MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v84 - v24;
  v26 = *(void (**)(char *, uint64_t, uint64_t, double))(v21 + 16);
  v95 = a3;
  v26((char *)&v84 - v24, a3, v20, v23);
  v27 = (*(uint64_t (**)(char *, uint64_t))(v21 + 88))(v25, v20);
  if (v27 == *MEMORY[0x1E0D3D110])
  {
    v28 = 1800.0;
  }
  else if (v27 == *MEMORY[0x1E0D3D100])
  {
    v28 = 86400.0;
  }
  else
  {
    v28 = 0.0;
    if (v27 != *MEMORY[0x1E0D3D108])
    {
      sub_1C106F16C();
      v29 = sub_1C106F538();
      v30 = sub_1C1070390();
      LODWORD(v91) = v30;
      if (os_log_type_enabled(v29, v30))
      {
        v31 = (uint8_t *)sub_1C0780FC8();
        v90 = (unint64_t)v31;
        *(_WORD *)v31 = 0;
        _os_log_impl(&dword_1C0771000, v29, (os_log_type_t)v91, "Request is from unknown client. Server response will not be cached", v31, 2u);
        MEMORY[0x1C3BA8270](v90, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v92 + 8))(v19, v93);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v25, v20);
    }
  }
  ((void (*)(uint64_t, uint64_t, uint64_t))v26)(v4, v95, v20);
  sub_1C0BEB080(v4, (uint64_t)&v97);
  v32 = *(_QWORD *)(v85 + 16);
  v33 = (double *)&unk_1C1078000;
  if (v32)
  {
    if ((~*(_QWORD *)&a4 & 0x7FF0000000000000) == 0)
      goto LABEL_45;
    if (a4 <= -9.22337204e18)
    {
LABEL_46:
      __break(1u);
    }
    else if (a4 < 9.22337204e18)
    {
      LODWORD(v92) = v98;
      v91 = (uint64_t)a4;
      v90 = (*(unsigned __int8 *)(v94 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80);
      v34 = v85 + v90;
      v35 = *(_QWORD *)(v94 + 72);
      v88 = v97;
      v89 = v35;
      v36 = v28 + a4;
      v86 = (uint64_t)(v28 + a4);
      v87 = COERCE_UNSIGNED_INT64(v28 + a4) & 0x7FF0000000000000;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v37 = MEMORY[0x1E0DEE9D8];
      v38 = type metadata accessor for LiveGlobalKnowledgeTriple;
      while (1)
      {
        sub_1C0A776CC(v34, (uint64_t)v15, (uint64_t (*)(_QWORD))v38);
        v39 = *(_QWORD *)&v15[v7[11]];
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        if ((v92 & 1) == 0)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C07EBFFC();
            v39 = v68;
          }
          v41 = *(_QWORD *)(v39 + 16);
          v40 = *(_QWORD *)(v39 + 24);
          if (v41 >= v40 >> 1)
          {
            sub_1C07A5E30(v40);
            sub_1C07EBFFC();
            v39 = v69;
          }
          *(_QWORD *)(v39 + 16) = v41 + 1;
          *(_QWORD *)(v39 + 8 * v41 + 32) = v88;
        }
        if (*(_QWORD *)&v15[v7[9]])
        {
          v42 = *(_QWORD *)&v15[v7[10]];
        }
        else
        {
          if (v87 == 0x7FF0000000000000)
          {
            __break(1u);
LABEL_43:
            __break(1u);
LABEL_44:
            __break(1u);
LABEL_45:
            __break(1u);
            goto LABEL_46;
          }
          if (v36 <= -9.22337204e18)
            goto LABEL_43;
          v42 = v86;
          if (v36 >= 9.22337204e18)
            goto LABEL_44;
        }
        v94 = v32;
        v95 = v42;
        v93 = v34;
        sub_1C106E590();
        sub_1C078C714();
        v43(v12, v15);
        v44 = v7[5];
        v45 = &v15[v44];
        v46 = v37;
        v47 = &v12[v44];
        v48 = sub_1C106E41C();
        v49 = v38;
        v50 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16);
        v50(v47, v45, v48);
        v51 = v7[6];
        v52 = &v15[v51];
        v53 = &v12[v51];
        sub_1C106EB24();
        sub_1C078C714();
        v54 = v53;
        v37 = v46;
        v55(v54, v52);
        v50(&v12[v7[7]], &v15[v7[7]], v48);
        v38 = v49;
        v56 = v7[8];
        v57 = *(_QWORD *)&v15[v56];
        v58 = *(_QWORD *)&v15[v56 + 8];
        v59 = &v12[v56];
        *(_QWORD *)v59 = v57;
        *((_QWORD *)v59 + 1) = v58;
        v60 = v96;
        *(_QWORD *)&v12[v7[9]] = v95;
        *(_QWORD *)&v12[v7[10]] = v91;
        *(_QWORD *)&v12[v7[11]] = v39;
        sub_1C0A776CC((uint64_t)v12, v60, (uint64_t (*)(_QWORD))v49);
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C07EBFC4();
          v37 = v66;
        }
        v62 = v93;
        v61 = v94;
        v64 = *(_QWORD *)(v37 + 16);
        v63 = *(_QWORD *)(v37 + 24);
        if (v64 >= v63 >> 1)
        {
          sub_1C07A5E30(v63);
          sub_1C07EBFC4();
          v37 = v67;
        }
        *(_QWORD *)(v37 + 16) = v64 + 1;
        v65 = v89;
        sub_1C07E05F4(v96, v37 + v90 + v64 * v89, (uint64_t (*)(_QWORD))v38);
        sub_1C07B2018((uint64_t)v12, (uint64_t (*)(_QWORD))v38);
        sub_1C07B2018((uint64_t)v15, (uint64_t (*)(_QWORD))v38);
        v34 = v62 + v65;
        v32 = v61 - 1;
        if (!v32)
        {
          swift_bridgeObjectRelease();
          v70 = v84;
          v33 = (double *)&unk_1C1078000;
          goto LABEL_32;
        }
      }
    }
    __break(1u);
    goto LABEL_48;
  }
  v37 = MEMORY[0x1E0DEE9D8];
  v70 = v84;
LABEL_32:
  v71 = *(_QWORD *)(v70 + 16);
  if (v71)
  {
    v72 = fmin(v28, 3600.0) + a4;
    if ((~*(_QWORD *)&v72 & 0x7FF0000000000000) == 0)
    {
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
    if (v72 <= v33[454])
    {
LABEL_49:
      __break(1u);
      goto LABEL_50;
    }
    if (v72 >= 9.22337204e18)
    {
LABEL_50:
      __break(1u);
      return;
    }
    v95 = v37;
    v96 = (uint64_t)v72;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C07EBFE0();
    v74 = v73;
    v75 = (uint64_t *)(v70 + 56);
    do
    {
      v77 = *(v75 - 3);
      v76 = *(v75 - 2);
      v79 = *(v75 - 1);
      v78 = *v75;
      v81 = *(_QWORD *)(v74 + 16);
      v80 = *(_QWORD *)(v74 + 24);
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      if (v81 >= v80 >> 1)
      {
        sub_1C07EBFE0();
        v74 = v83;
      }
      v75 += 5;
      *(_QWORD *)(v74 + 16) = v81 + 1;
      v82 = (_QWORD *)(v74 + 40 * v81);
      v82[4] = v77;
      v82[5] = v76;
      v82[6] = v79;
      v82[7] = v78;
      v82[8] = v96;
      --v71;
    }
    while (v71);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C0A76568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  void (*v6)(char *, uint64_t);

  swift_beginAccess();
  v5 = *(_QWORD *)(a2 + 16);
  swift_beginAccess();
  v6 = *(void (**)(char *, uint64_t))(a3 + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0A76608(v5, v6);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0A76608(uint64_t a1, void (*a2)(char *, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  char *v42;
  uint64_t v43;
  uint64_t v44;

  v4 = sub_1C106F544();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v38 - v9;
  sub_1C106F16C();
  swift_bridgeObjectRetain_n();
  v11 = sub_1C106F538();
  v12 = sub_1C1070384();
  v13 = os_log_type_enabled(v11, v12);
  v42 = v7;
  if (v13)
  {
    v14 = swift_slowAlloc();
    v40 = v5;
    v15 = v14;
    v16 = swift_slowAlloc();
    v39 = v16;
    *(_DWORD *)v15 = 134218242;
    v43 = *(_QWORD *)(a1 + 16);
    v44 = v16;
    sub_1C10705AC();
    *(_WORD *)(v15 + 12) = 2080;
    v41 = a2;
    v17 = type metadata accessor for LiveGlobalKnowledgeTriple();
    v18 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v19 = MEMORY[0x1C3BA683C](v18, v17);
    v20 = v4;
    v22 = v21;
    swift_bridgeObjectRelease();
    v43 = sub_1C0788DAC(v19, v22, &v44);
    a2 = v41;
    v7 = v42;
    sub_1C10705AC();
    swift_bridgeObjectRelease_n();
    v4 = v20;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0771000, v11, v12, "Storing %ld triples in LiveGlobalKnowledgeGraph cache: %s", (uint8_t *)v15, 0x16u);
    v23 = v39;
    swift_arrayDestroy();
    MEMORY[0x1C3BA8270](v23, -1, -1);
    MEMORY[0x1C3BA8270](v15, -1, -1);

    v24 = *(void (**)(char *, uint64_t))(v40 + 8);
    v24(v10, v20);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    v24 = *(void (**)(char *, uint64_t))(v5 + 8);
    v24(v10, v4);
  }
  sub_1C106F16C();
  swift_bridgeObjectRetain_n();
  v25 = sub_1C106F538();
  v26 = sub_1C1070384();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = swift_slowAlloc();
    v41 = v24;
    v28 = v27;
    v29 = swift_slowAlloc();
    *(_DWORD *)v28 = 134218242;
    v43 = *((_QWORD *)a2 + 2);
    v44 = v29;
    v40 = v4;
    sub_1C10705AC();
    *(_WORD *)(v28 + 12) = 2080;
    v30 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v31 = a1;
    v32 = MEMORY[0x1C3BA683C](v30, &type metadata for IDSearchNoResultRecord);
    v34 = v33;
    swift_bridgeObjectRelease();
    v35 = v32;
    a1 = v31;
    v43 = sub_1C0788DAC(v35, v34, &v44);
    sub_1C10705AC();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0771000, v25, v26, "Storing %ld NoResultRecords in LiveGlobalKnowledgeGraph cache: %s", (uint8_t *)v28, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3BA8270](v29, -1, -1);
    MEMORY[0x1C3BA8270](v28, -1, -1);

    v36 = ((uint64_t (*)(char *, uint64_t))v41)(v42, v40);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    v36 = ((uint64_t (*)(char *, uint64_t))v24)(v7, v4);
  }
  MEMORY[0x1E0C80A78](v36);
  *(&v38 - 2) = a1;
  *(&v38 - 1) = (uint64_t)a2;
  swift_retain();
  sub_1C077FF50((uint64_t)sub_1C0A77768, (uint64_t)(&v38 - 4));
  return swift_release();
}

uint64_t sub_1C0A76A40(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = sub_1C0779758();
  v1(v2);
  return swift_release();
}

void sub_1C0A76A68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __int128 v21;
  id v22;
  id v23;
  NSObject *v24;
  uint64_t v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  os_log_t v33;
  uint64_t v34;
  uint64_t *v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  id v49;
  uint64_t v50;
  _QWORD *v51;
  os_log_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD v55[2];
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  __int128 v60;
  os_log_t v61;
  _QWORD *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  _OWORD v68[2];
  uint64_t v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;

  v4 = v3;
  v73 = a1;
  v7 = sub_1C106F544();
  v66 = *(_QWORD *)(v7 - 8);
  v67 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v65 = (char *)v55 - v11;
  v12 = type metadata accessor for LiveGlobalKnowledgeTriple();
  MEMORY[0x1E0C80A78](v12);
  v14 = (_QWORD *)((char *)v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v15);
  v18 = *(_QWORD *)(a2 + 16);
  v63 = v9;
  v56 = a3;
  if (v18)
  {
    v19 = (char *)v55 - v17;
    v20 = a2 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    v64 = *(_QWORD *)(v16 + 72);
    v55[1] = a2;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    *(_QWORD *)&v21 = 136315394;
    v58 = v21;
    v57 = MEMORY[0x1E0DEE9B8] + 8;
    v59 = v12;
    v62 = v14;
    do
    {
      sub_1C0A776CC(v20, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
      sub_1C07803F8(&qword_1EF639EC0, (void (*)(uint64_t))type metadata accessor for LiveGlobalKnowledgeTriple);
      sub_1C106BFC8();
      if (v4)
      {
        sub_1C106F16C();
        sub_1C0A776CC((uint64_t)v19, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
        v22 = v4;
        v23 = v4;
        v24 = sub_1C106F538();
        v25 = (uint64_t)v14;
        v26 = sub_1C1070390();
        if (os_log_type_enabled(v24, v26))
        {
          v27 = swift_slowAlloc();
          *(_QWORD *)&v60 = swift_slowAlloc();
          v61 = (os_log_t)swift_slowAlloc();
          *(_QWORD *)&v70 = v61;
          *(_DWORD *)v27 = v58;
          v28 = LiveGlobalKnowledgeTriple.description.getter();
          *(_QWORD *)(v27 + 4) = sub_1C0788DAC(v28, v29, (uint64_t *)&v70);
          swift_bridgeObjectRelease();
          sub_1C07B2018((uint64_t)v62, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
          *(_WORD *)(v27 + 12) = 2112;
          v30 = v4;
          v31 = _swift_stdlib_bridgeErrorToNSError();
          *(_QWORD *)(v27 + 14) = v31;
          v32 = v60;
          *(_QWORD *)v60 = v31;

          _os_log_impl(&dword_1C0771000, v24, v26, "Failed to store live triple %s in LiveGlobalKnowledgeGraph cache: %@", (uint8_t *)v27, 0x16u);
          sub_1C07ACF80(&qword_1ED7614A0);
          swift_arrayDestroy();
          MEMORY[0x1C3BA8270](v32, -1, -1);
          v33 = v61;
          swift_arrayDestroy();
          MEMORY[0x1C3BA8270](v33, -1, -1);
          MEMORY[0x1C3BA8270](v27, -1, -1);

          (*(void (**)(char *, uint64_t))(v66 + 8))(v65, v67);
          sub_1C07B2018((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
          v4 = 0;
          v14 = v62;
          v9 = v63;
        }
        else
        {

          sub_1C07B2018(v25, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
          (*(void (**)(char *, uint64_t))(v66 + 8))(v65, v67);
          sub_1C07B2018((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
          v4 = 0;
          v9 = v63;
          v14 = (_QWORD *)v25;
        }
      }
      else
      {
        sub_1C07B2018((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
      }
      v20 += v64;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease();
    a3 = v56;
  }
  v34 = *(_QWORD *)(a3 + 16);
  if (v34)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v65 = (char *)sub_1C0A77780();
    v35 = (uint64_t *)(a3 + 64);
    *(_QWORD *)&v36 = 136315394;
    v60 = v36;
    v59 = MEMORY[0x1E0DEE9B8] + 8;
    do
    {
      v37 = *(v35 - 3);
      v38 = *(v35 - 2);
      v39 = *(v35 - 1);
      v40 = *v35;
      *(_QWORD *)&v70 = *(v35 - 4);
      *((_QWORD *)&v70 + 1) = v37;
      *(_QWORD *)&v71 = v38;
      *((_QWORD *)&v71 + 1) = v39;
      v72 = v40;
      v68[0] = v70;
      v68[1] = v71;
      v69 = v40;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C106BFC8();
      if (v4)
      {
        sub_1C106F16C();
        v41 = v4;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v42 = v4;
        v43 = sub_1C106F538();
        v44 = sub_1C1070390();
        if (os_log_type_enabled(v43, v44))
        {
          v45 = swift_slowAlloc();
          v62 = (_QWORD *)swift_slowAlloc();
          v64 = swift_slowAlloc();
          *(_QWORD *)&v68[0] = v64;
          *(_DWORD *)v45 = v60;
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          v61 = v43;
          v46 = sub_1C0B4FA34();
          v48 = v47;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v45 + 4) = sub_1C0788DAC(v46, v48, (uint64_t *)v68);
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v45 + 12) = 2112;
          v49 = v4;
          v50 = _swift_stdlib_bridgeErrorToNSError();
          *(_QWORD *)(v45 + 14) = v50;
          v51 = v62;
          *v62 = v50;

          v52 = v61;
          _os_log_impl(&dword_1C0771000, v61, v44, "Failed to store IDsearch NoResultRecord %s in LiveGlobalKnowledgeGraph cache: %@", (uint8_t *)v45, 0x16u);
          sub_1C07ACF80(&qword_1ED7614A0);
          swift_arrayDestroy();
          MEMORY[0x1C3BA8270](v51, -1, -1);
          v53 = v64;
          swift_arrayDestroy();
          MEMORY[0x1C3BA8270](v53, -1, -1);
          v54 = v45;
          v9 = v63;
          MEMORY[0x1C3BA8270](v54, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();

        }
        (*(void (**)(char *, uint64_t))(v66 + 8))(v9, v67);
        v4 = 0;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v35 += 5;
      --v34;
    }
    while (v34);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C0A7713C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v11[5];
  char v12[24];
  void *v13;
  unint64_t v14;
  uint64_t v15[5];

  v5 = sub_1C07ACF80(&qword_1ED75E508);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for StaticKnowledgeAssetMetadata(0);
  v13 = &unk_1E7A309B0;
  v14 = sub_1C0A6BDE8();
  v12[0] = 1;
  v11[3] = MEMORY[0x1E0DEA968];
  v11[4] = MEMORY[0x1E0D24960];
  v11[0] = a2;
  v11[1] = a3;
  v15[3] = sub_1C106BCBC();
  v15[4] = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v15);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C310();
  sub_1C0A77678((uint64_t)v11);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v12);
  sub_1C07803F8(&qword_1ED7605D8, (void (*)(uint64_t))type metadata accessor for StaticKnowledgeAssetMetadata);
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v15);
  sub_1C07BB218(&qword_1ED760438, &qword_1ED75E508);
  sub_1C07803F8(&qword_1ED7605E0, (void (*)(uint64_t))type metadata accessor for StaticKnowledgeAssetMetadata);
  sub_1C106BAC4();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1C0A77300()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1C0A77324()
{
  unint64_t result;

  result = qword_1EF639E40;
  if (!qword_1EF639E40)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1099C6C, &type metadata for GlobalKnowledgeStore.GlobalKnowledgeStoreError);
    atomic_store(result, (unint64_t *)&qword_1EF639E40);
  }
  return result;
}

uint64_t sub_1C0A77360()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0A77394()
{
  uint64_t *v0;

  return sub_1C0A76568(v0[2], v0[3], v0[4]);
}

void sub_1C0A773A0(uint64_t a1)
{
  uint64_t v1;

  sub_1C0A7548C(a1, *(uint64_t **)(v1 + 16));
}

uint64_t sub_1C0A773B8(const char *a1)
{
  uint64_t v1;

  return sub_1C0A757F0(a1, *(_QWORD **)(v1 + 16));
}

_UNKNOWN **sub_1C0A773D0()
{
  return &off_1E7A1C6A0;
}

void sub_1C0A773DC()
{
  sub_1C07803F8(qword_1EF639E80, (void (*)(uint64_t))type metadata accessor for GlobalKnowledgeStore);
}

uint64_t type metadata accessor for GlobalKnowledgeStore(uint64_t a1)
{
  return sub_1C0784B00(a1, qword_1ED762DC8);
}

uint64_t sub_1C0A7741C()
{
  return type metadata accessor for GlobalKnowledgeStore(0);
}

uint64_t sub_1C0A77424()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Configuration();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for GlobalKnowledgeStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of GlobalKnowledgeStore.__allocating_init<A>(config:liveApi:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t destroy for GlobalKnowledgeStore.GlobalKnowledgeStoreError()
{
  return sub_1C07A4460();
}

uint64_t _s24IntelligencePlatformCore20GlobalKnowledgeStoreC25GlobalKnowledgeStoreErrorOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_1C077EB44();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for GlobalKnowledgeStore.GlobalKnowledgeStoreError(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_1C077EB44();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_1C07A4460();
  return a1;
}

uint64_t assignWithTake for GlobalKnowledgeStore.GlobalKnowledgeStoreError(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_1C07A4460();
  return a1;
}

uint64_t getEnumTagSinglePayload for GlobalKnowledgeStore.GlobalKnowledgeStoreError(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GlobalKnowledgeStore.GlobalKnowledgeStoreError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1C0A77644(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for GlobalKnowledgeStore.GlobalKnowledgeStoreError()
{
  return &type metadata for GlobalKnowledgeStore.GlobalKnowledgeStoreError;
}

uint64_t sub_1C0A77660(uint64_t a1)
{
  uint64_t v1;

  return sub_1C0A7713C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1C0A77678(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C07ACF80((uint64_t *)&unk_1ED7626B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for GlobalKnowledgeStore.StaticKnowledgeAssetStatus(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1ED7539A0);
}

void sub_1C0A776CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t (*v3)(uint64_t, uint64_t);

  sub_1C0779690(a1, a2, a3);
  sub_1C078C714();
  sub_1C0775828(v3);
  sub_1C0778534();
}

unint64_t sub_1C0A776F0()
{
  unint64_t result;

  result = qword_1ED74B780;
  if (!qword_1ED74B780)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A2060, &type metadata for IDSearchNoResultRecord);
    atomic_store(result, (unint64_t *)&qword_1ED74B780);
  }
  return result;
}

unint64_t sub_1C0A7772C()
{
  unint64_t result;

  result = qword_1EF639EB8;
  if (!qword_1EF639EB8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A2018, &type metadata for IDSearchNoResultRecord);
    atomic_store(result, (unint64_t *)&qword_1EF639EB8);
  }
  return result;
}

void sub_1C0A77768(uint64_t a1)
{
  uint64_t v1;

  sub_1C0A76A68(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_1C0A77780()
{
  unint64_t result;

  result = qword_1EF639EC8;
  if (!qword_1EF639EC8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A1FD8, &type metadata for IDSearchNoResultRecord);
    atomic_store(result, (unint64_t *)&qword_1EF639EC8);
  }
  return result;
}

void sub_1C0A777BC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  BOOL v90;
  unint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  BOOL v100;
  uint64_t v101;
  char v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  BOOL v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  unint64_t v124;
  char *v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  unint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t *v153;

  v2 = v1;
  v149 = type metadata accessor for LiveGlobalKnowledgeTriple();
  v4 = *(_QWORD *)(v149 - 8);
  MEMORY[0x1E0C80A78](v149);
  v140 = (uint64_t)&v132 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v150 = (uint64_t)&v132 - v7;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v132 - v9;
  MEMORY[0x1E0C80A78](v11);
  v146 = (uint64_t)&v132 - v12;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v132 - v14;
  MEMORY[0x1E0C80A78](v16);
  v143 = (char *)&v132 - v17;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v132 - v19;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v132 - v22;
  v153 = a1;
  v24 = a1[1];
  v25 = sub_1C1070BE8();
  if (v25 >= v24)
  {
    if ((v24 & 0x8000000000000000) == 0)
    {
      if (v24)
        sub_1C0A78230(0, v24, 1, v153);
      return;
    }
    goto LABEL_150;
  }
  v26 = v25;
  sub_1C08CBF00(v24 / 2);
  v134 = v27;
  v135 = v24;
  v144 = v28;
  v145 = v4;
  if (v24 <= 0)
  {
LABEL_114:
    v138 = (char *)MEMORY[0x1E0DEE9D8];
    v74 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_115:
    v125 = v138;
    if (v74 < 2)
    {
LABEL_126:
      swift_bridgeObjectRelease();
      if (v135 >= -1)
        goto LABEL_127;
      goto LABEL_154;
    }
    v126 = *v153;
    while (1)
    {
      v127 = v74 - 2;
      if (v74 < 2)
        break;
      if (!v126)
        goto LABEL_158;
      v128 = *(_QWORD *)&v125[16 * v127 + 32];
      v129 = *(_QWORD *)&v125[16 * v74 + 24];
      sub_1C0A78478(v126 + *(_QWORD *)(v145 + 72) * v128, v126 + *(_QWORD *)(v145 + 72) * *(_QWORD *)&v125[16 * v74 + 16], v126 + *(_QWORD *)(v145 + 72) * v129, v144);
      if (v2)
        goto LABEL_112;
      if (v129 < v128)
        goto LABEL_145;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v125 = sub_1C0861BC0();
      if (v127 >= *((_QWORD *)v125 + 2))
        goto LABEL_146;
      v130 = &v125[16 * v127 + 32];
      *(_QWORD *)v130 = v128;
      *((_QWORD *)v130 + 1) = v129;
      v131 = *((_QWORD *)v125 + 2);
      if (v74 > v131)
        goto LABEL_147;
      memmove(&v125[16 * v74 + 16], &v125[16 * v74 + 32], 16 * (v131 - v74));
      *((_QWORD *)v125 + 2) = v131 - 1;
      v74 = v131 - 1;
      if (v131 <= 2)
        goto LABEL_126;
    }
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
LABEL_154:
    __break(1u);
LABEL_155:
    __break(1u);
LABEL_156:
    __break(1u);
LABEL_157:
    __break(1u);
LABEL_158:
    __break(1u);
    return;
  }
  v132 = v26;
  v133 = v20;
  v147 = v10;
  v29 = 0;
  v138 = (char *)MEMORY[0x1E0DEE9D8];
  v30 = v24;
  v142 = v15;
  v31 = (uint64_t)v143;
  v136 = v23;
  while (1)
  {
    v32 = v29;
    v33 = v29 + 1;
    v141 = v29;
    v152 = v30;
    v137 = v2;
    if (v29 + 1 >= v30)
    {
      v40 = v29 + 1;
      v41 = (uint64_t)v147;
    }
    else
    {
      v34 = *v153;
      v35 = *(_QWORD *)(v4 + 72);
      v36 = v29;
      sub_1C0A776CC(*v153 + v35 * v33, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
      v139 = v34;
      v148 = v35;
      v37 = v34 + v35 * v36;
      v38 = (uint64_t)v133;
      sub_1C0A776CC(v37, (uint64_t)v133, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
      if ((sub_1C106E560() & 1) != 0)
        v39 = sub_1C106E0D4();
      else
        v39 = sub_1C106E554();
      LODWORD(v151) = v39;
      sub_1C07B2018(v38, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
      sub_1C07B2018((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
      v32 = v141;
      v40 = v141 + 2;
      v30 = v152;
      if (v141 + 2 >= v152)
      {
        v4 = v145;
      }
      else
      {
        v43 = v148;
        v44 = v148 * v33;
        v45 = v139;
        v46 = v141 + 2;
        v47 = v148 * v40;
        while (1)
        {
          sub_1C0A776CC(v45 + v47, v31, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
          sub_1C0A776CC(v45 + v44, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
          v48 = (sub_1C106E560() & 1) != 0 ? sub_1C106E0D4() : sub_1C106E554();
          v49 = v48;
          sub_1C07B2018((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
          sub_1C07B2018(v31, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
          if (((v151 ^ v49) & 1) != 0)
            break;
          v45 += v43;
          ++v46;
          v30 = v152;
          if (v46 >= v152)
          {
            v40 = v152;
            v4 = v145;
            v32 = v141;
            goto LABEL_20;
          }
        }
        v4 = v145;
        v40 = v46;
        v32 = v141;
        v30 = v152;
      }
LABEL_20:
      v42 = v138;
      if ((v151 & 1) == 0)
        goto LABEL_37;
      if (v40 < v32)
        goto LABEL_151;
      if (v32 >= v40)
      {
LABEL_37:
        v41 = (uint64_t)v147;
        goto LABEL_38;
      }
      v50 = 0;
      v41 = (uint64_t)v147;
      v51 = v148;
      v52 = v148 * (v40 - 1);
      v53 = v40;
      v54 = v40 * v148;
      v55 = v32;
      v56 = v32 * v148;
      do
      {
        v57 = v53;
        if (v55 != v53 + v50 - 1)
        {
          v58 = v139;
          if (!v139)
            goto LABEL_157;
          v59 = v139 + v56;
          v60 = v139 + v52;
          sub_1C07E05F4(v139 + v56, v140, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
          if (v56 < v52 || v59 >= v58 + v54)
          {
            swift_arrayInitWithTakeFrontToBack();
            v51 = v148;
          }
          else
          {
            v51 = v148;
            if (v56 != v52)
              swift_arrayInitWithTakeBackToFront();
          }
          sub_1C07E05F4(v140, v60, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
          v41 = (uint64_t)v147;
        }
        ++v55;
        --v50;
        v53 = v57;
        v52 -= v51;
        v54 -= v51;
        v56 += v51;
      }
      while (v55 < v57 + v50);
      v4 = v145;
      v15 = v142;
      v31 = (uint64_t)v143;
      v40 = v53;
      v32 = v141;
      v30 = v152;
    }
    v42 = v138;
LABEL_38:
    if (v40 < v30)
    {
      if (__OFSUB__(v40, v32))
        goto LABEL_149;
      if (v40 - v32 < v132)
      {
        if (__OFADD__(v32, v132))
          goto LABEL_152;
        v62 = v152;
        if (v32 + v132 < v152)
          v62 = v32 + v132;
        if (v62 < v32)
          goto LABEL_153;
        if (v40 != v62)
        {
          v138 = v42;
          v139 = v62;
          v148 = *(_QWORD *)(v4 + 72);
          v151 = v40 * v148;
          v152 = v148 * (v40 - 1);
          do
          {
            v63 = 0;
            v64 = v141;
            while (1)
            {
              v65 = v40;
              v66 = *v153;
              v67 = v146;
              sub_1C0A776CC(v151 + v63 + *v153, v146, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
              sub_1C0A776CC(v152 + v63 + v66, v41, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
              v68 = (sub_1C106E560() & 1) != 0 ? sub_1C106E0D4() : sub_1C106E554();
              v69 = v68;
              sub_1C07B2018(v41, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
              sub_1C07B2018(v67, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
              if ((v69 & 1) == 0)
                break;
              v70 = *v153;
              if (!*v153)
                goto LABEL_155;
              v40 = v65;
              v71 = v70 + v152 + v63;
              sub_1C07E05F4(v70 + v151 + v63, v150, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
              swift_arrayInitWithTakeFrontToBack();
              sub_1C07E05F4(v150, v71, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
              v41 = (uint64_t)v147;
              v63 -= v148;
              if (v65 == ++v64)
                goto LABEL_56;
            }
            v40 = v65;
LABEL_56:
            ++v40;
            v152 += v148;
            v151 += v148;
          }
          while (v40 != v139);
          v40 = v139;
          v42 = v138;
          v15 = v142;
          v31 = (uint64_t)v143;
          v32 = v141;
        }
      }
    }
    if (v40 < v32)
      goto LABEL_148;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v42 = sub_1C0861AD0(0, *((_QWORD *)v42 + 2) + 1, 1, v42);
    v73 = *((_QWORD *)v42 + 2);
    v72 = *((_QWORD *)v42 + 3);
    v74 = v73 + 1;
    v152 = v40;
    if (v73 >= v72 >> 1)
      v42 = sub_1C0861AD0((char *)(v72 > 1), v73 + 1, 1, v42);
    v75 = v137;
    *((_QWORD *)v42 + 2) = v74;
    v76 = v42 + 32;
    v77 = &v42[16 * v73 + 32];
    v78 = v152;
    *(_QWORD *)v77 = v141;
    *((_QWORD *)v77 + 1) = v78;
    if (v73)
      break;
    v74 = 1;
LABEL_106:
    v138 = v42;
    v30 = v153[1];
    v29 = v152;
    v2 = v75;
    v23 = v136;
    v4 = v145;
    if (v152 >= v30)
      goto LABEL_115;
  }
  while (1)
  {
    v79 = v74 - 1;
    if (v74 >= 4)
    {
      v84 = &v76[16 * v74];
      v85 = *((_QWORD *)v84 - 8);
      v86 = *((_QWORD *)v84 - 7);
      v90 = __OFSUB__(v86, v85);
      v87 = v86 - v85;
      if (v90)
        goto LABEL_133;
      v89 = *((_QWORD *)v84 - 6);
      v88 = *((_QWORD *)v84 - 5);
      v90 = __OFSUB__(v88, v89);
      v82 = v88 - v89;
      v83 = v90;
      if (v90)
        goto LABEL_134;
      v91 = v74 - 2;
      v92 = &v76[16 * v74 - 32];
      v94 = *(_QWORD *)v92;
      v93 = *((_QWORD *)v92 + 1);
      v90 = __OFSUB__(v93, v94);
      v95 = v93 - v94;
      if (v90)
        goto LABEL_135;
      v90 = __OFADD__(v82, v95);
      v96 = v82 + v95;
      if (v90)
        goto LABEL_137;
      if (v96 >= v87)
      {
        v114 = &v76[16 * v79];
        v116 = *(_QWORD *)v114;
        v115 = *((_QWORD *)v114 + 1);
        v90 = __OFSUB__(v115, v116);
        v117 = v115 - v116;
        if (v90)
          goto LABEL_143;
        v107 = v82 < v117;
        goto LABEL_95;
      }
    }
    else
    {
      if (v74 != 3)
      {
        v108 = *((_QWORD *)v42 + 4);
        v109 = *((_QWORD *)v42 + 5);
        v90 = __OFSUB__(v109, v108);
        v101 = v109 - v108;
        v102 = v90;
        goto LABEL_89;
      }
      v81 = *((_QWORD *)v42 + 4);
      v80 = *((_QWORD *)v42 + 5);
      v90 = __OFSUB__(v80, v81);
      v82 = v80 - v81;
      v83 = v90;
    }
    if ((v83 & 1) != 0)
      goto LABEL_136;
    v91 = v74 - 2;
    v97 = &v76[16 * v74 - 32];
    v99 = *(_QWORD *)v97;
    v98 = *((_QWORD *)v97 + 1);
    v100 = __OFSUB__(v98, v99);
    v101 = v98 - v99;
    v102 = v100;
    if (v100)
      goto LABEL_138;
    v103 = &v76[16 * v79];
    v105 = *(_QWORD *)v103;
    v104 = *((_QWORD *)v103 + 1);
    v90 = __OFSUB__(v104, v105);
    v106 = v104 - v105;
    if (v90)
      goto LABEL_140;
    if (__OFADD__(v101, v106))
      goto LABEL_142;
    if (v101 + v106 >= v82)
    {
      v107 = v82 < v106;
LABEL_95:
      if (v107)
        v79 = v91;
      goto LABEL_97;
    }
LABEL_89:
    if ((v102 & 1) != 0)
      goto LABEL_139;
    v110 = &v76[16 * v79];
    v112 = *(_QWORD *)v110;
    v111 = *((_QWORD *)v110 + 1);
    v90 = __OFSUB__(v111, v112);
    v113 = v111 - v112;
    if (v90)
      goto LABEL_141;
    if (v113 < v101)
      goto LABEL_106;
LABEL_97:
    v118 = v79 - 1;
    if (v79 - 1 >= v74)
    {
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
      goto LABEL_144;
    }
    if (!*v153)
      goto LABEL_156;
    v119 = v42;
    v120 = &v76[16 * v118];
    v121 = *(_QWORD *)v120;
    v122 = &v76[16 * v79];
    v123 = *((_QWORD *)v122 + 1);
    sub_1C0A78478(*v153 + *(_QWORD *)(v145 + 72) * *(_QWORD *)v120, *v153 + *(_QWORD *)(v145 + 72) * *(_QWORD *)v122, *v153 + *(_QWORD *)(v145 + 72) * v123, v144);
    if (v75)
      break;
    if (v123 < v121)
      goto LABEL_130;
    if (v79 > *((_QWORD *)v119 + 2))
      goto LABEL_131;
    *(_QWORD *)v120 = v121;
    *(_QWORD *)&v76[16 * v118 + 8] = v123;
    v124 = *((_QWORD *)v119 + 2);
    if (v79 >= v124)
      goto LABEL_132;
    v42 = v119;
    v74 = v124 - 1;
    memmove(&v76[16 * v79], v122 + 16, 16 * (v124 - 1 - v79));
    *((_QWORD *)v119 + 2) = v124 - 1;
    v107 = v124 > 2;
    v15 = v142;
    v31 = (uint64_t)v143;
    if (!v107)
      goto LABEL_106;
  }
  v2 = v75;
LABEL_112:
  swift_bridgeObjectRelease();
  if (v135 < -1)
  {
    __break(1u);
    goto LABEL_114;
  }
LABEL_127:
  *(_QWORD *)(v134 + 16) = 0;
  swift_bridgeObjectRelease();
}

void sub_1C0A78230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;

  v29 = a4;
  v24 = a1;
  v25 = type metadata accessor for LiveGlobalKnowledgeTriple();
  MEMORY[0x1E0C80A78](v25);
  v28 = (uint64_t)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v22 - v8;
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v22 - v12;
  v27 = a3;
  v23 = a2;
  if (a3 != a2)
  {
    v14 = *(_QWORD *)(v11 + 72);
    v31 = v14 * (v27 - 1);
    v26 = v14;
    v30 = v14 * v27;
    while (2)
    {
      v15 = 0;
      v16 = v24;
      do
      {
        v17 = *v29;
        sub_1C0A776CC(v30 + v15 + *v29, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
        sub_1C0A776CC(v31 + v15 + v17, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
        if ((sub_1C106E560() & 1) != 0)
          v18 = sub_1C106E0D4();
        else
          v18 = sub_1C106E554();
        v19 = v18;
        sub_1C07B2018((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
        sub_1C07B2018((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
        if ((v19 & 1) == 0)
          break;
        v20 = *v29;
        if (!*v29)
        {
          __break(1u);
          return;
        }
        v21 = v20 + v31 + v15;
        sub_1C07E05F4(v20 + v30 + v15, v28, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
        swift_arrayInitWithTakeFrontToBack();
        sub_1C07E05F4(v28, v21, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
        v15 -= v26;
        ++v16;
      }
      while (v27 != v16);
      v31 += v26;
      v30 += v26;
      if (++v27 != v23)
        continue;
      break;
    }
  }
}

void sub_1C0A78478(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  int64_t v19;
  int64_t v21;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v29;
  char v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v34;
  BOOL v36;
  unint64_t v37;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  int64_t v49;
  uint64_t v51;
  unint64_t v52;
  char *v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v54 = a4;
  v55 = a3;
  v58 = type metadata accessor for LiveGlobalKnowledgeTriple();
  MEMORY[0x1E0C80A78](v58);
  v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v51 - v9;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v51 - v12;
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v51 - v16;
  v18 = *(_QWORD *)(v15 + 72);
  if (!v18)
  {
    __break(1u);
LABEL_83:
    __break(1u);
LABEL_84:
    __break(1u);
    goto LABEL_85;
  }
  v19 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v18 == -1)
    goto LABEL_83;
  v21 = v55 - a2;
  if (v55 - a2 == 0x8000000000000000 && v18 == -1)
    goto LABEL_84;
  v23 = v19 / v18;
  v24 = v21 / v18;
  v57 = *(_QWORD *)(v15 + 72);
  if (v19 / v18 >= v21 / v18)
  {
    v37 = v54;
    sub_1C09D25A0(a2, v21 / v18);
    v27 = v37 + v24 * v18;
    if (v24 * v18 < 1 || a1 >= a2)
    {
      v25 = v54;
    }
    else
    {
      v56 = -v18;
      v39 = v55;
      v52 = a1;
      v53 = v10;
      do
      {
        v40 = v39;
        v55 = v27;
        v41 = v56;
        v42 = v27 + v56;
        sub_1C0A776CC(v27 + v56, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
        v43 = a2 + v41;
        sub_1C0A776CC(a2 + v41, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
        if ((sub_1C106E560() & 1) != 0)
          v44 = sub_1C106E0D4();
        else
          v44 = sub_1C106E554();
        v45 = v44;
        v39 = v40 + v56;
        sub_1C07B2018((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
        sub_1C07B2018((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
        if ((v45 & 1) != 0)
        {
          if (v40 < a2 || v39 >= a2)
          {
            swift_arrayInitWithTakeFrontToBack();
            a2 = v43;
            v27 = v55;
          }
          else
          {
            if (v40 != a2)
              swift_arrayInitWithTakeBackToFront();
            a2 = v43;
            v27 = v55;
          }
        }
        else if (v40 < v55 || v39 >= v55)
        {
          swift_arrayInitWithTakeFrontToBack();
          v27 = v42;
        }
        else
        {
          if (v40 != v55)
            swift_arrayInitWithTakeBackToFront();
          v27 = v42;
        }
        v10 = v53;
      }
      while (v27 > v54 && a2 > v52);
      v25 = v54;
    }
  }
  else
  {
    v25 = v54;
    sub_1C09D25A0(a1, v19 / v18);
    v26 = v23 * v18;
    v27 = v25 + v23 * v18;
    if (v26 >= 1 && a2 < v55)
    {
      while (1)
      {
        sub_1C0A776CC(a2, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
        sub_1C0A776CC(v25, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
        if ((sub_1C106E560() & 1) != 0)
          v29 = sub_1C106E0D4();
        else
          v29 = sub_1C106E554();
        v30 = v29;
        sub_1C07B2018((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
        sub_1C07B2018((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
        if ((v30 & 1) == 0)
        {
          v31 = v57;
          v34 = v25 + v57;
          if (a1 >= v25 && a1 < v34)
          {
            if (a1 != v25)
            {
              swift_arrayInitWithTakeBackToFront();
LABEL_36:
              v31 = v57;
            }
            v32 = a2;
            v25 = v34;
            goto LABEL_38;
          }
          swift_arrayInitWithTakeFrontToBack();
          goto LABEL_36;
        }
        v31 = v57;
        v32 = a2 + v57;
        if (a1 < a2 || a1 >= v32)
          break;
        if (a1 != a2)
        {
          swift_arrayInitWithTakeBackToFront();
          goto LABEL_33;
        }
LABEL_38:
        a1 += v31;
        v36 = v25 >= v27 || v32 >= v55;
        a2 = v32;
        if (v36)
          goto LABEL_77;
      }
      swift_arrayInitWithTakeFrontToBack();
LABEL_33:
      v31 = v57;
      goto LABEL_38;
    }
  }
LABEL_77:
  v49 = v27 - v25;
  if (v57 != -1 || v49 != 0x8000000000000000)
  {
    sub_1C09D25A0(v25, v49 / v57);
    return;
  }
LABEL_85:
  __break(1u);
}

_QWORD *sub_1C0A788F4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v7 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v7;
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
    v8 = *(int *)(type metadata accessor for StaticKnowledgeAssetMetadata(0) + 32);
    v9 = (char *)v4 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1C106F1CC();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    if (sub_1C07B2D80((uint64_t)v10, 1, v11))
    {
      v12 = sub_1C07ACF80(&qword_1ED7625F8);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      sub_1C07B2D8C((uint64_t)v9, 0, 1, v11);
    }
    *(_QWORD *)((char *)v4 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  return v4;
}

uint64_t sub_1C0A78A20(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for StaticKnowledgeAssetMetadata(0) + 32);
  v3 = sub_1C106F1CC();
  result = sub_1C07B2D80(v2, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return result;
}

uint64_t sub_1C0A78A90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v7 = *(int *)(type metadata accessor for StaticKnowledgeAssetMetadata(0) + 32);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1C106F1CC();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  if (sub_1C07B2D80((uint64_t)v9, 1, v10))
  {
    v11 = sub_1C07ACF80(&qword_1ED7625F8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    sub_1C07B2D8C((uint64_t)v8, 0, 1, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1C0A78B90(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = a2[3];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  v7 = *(int *)(type metadata accessor for StaticKnowledgeAssetMetadata(0) + 32);
  v8 = (void *)(a1 + v7);
  v9 = (char *)a2 + v7;
  v10 = sub_1C106F1CC();
  v11 = sub_1C07B2D80((uint64_t)v8, 1, v10);
  v12 = sub_1C07B2D80((uint64_t)v9, 1, v10);
  if (!v11)
  {
    v13 = *(_QWORD *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(void *, char *, uint64_t))(v13 + 24))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    v14 = sub_1C07ACF80(&qword_1ED7625F8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  sub_1C07B2D8C((uint64_t)v8, 0, 1, v10);
LABEL_7:
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1C0A78CE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v6 = *(int *)(type metadata accessor for StaticKnowledgeAssetMetadata(0) + 32);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_1C106F1CC();
  if (sub_1C07B2D80((uint64_t)v8, 1, v9))
  {
    v10 = sub_1C07ACF80(&qword_1ED7625F8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    sub_1C07B2D8C((uint64_t)v7, 0, 1, v9);
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1C0A78DD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v7 = *(int *)(type metadata accessor for StaticKnowledgeAssetMetadata(0) + 32);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1C106F1CC();
  v11 = sub_1C07B2D80((uint64_t)v8, 1, v10);
  v12 = sub_1C07B2D80((uint64_t)v9, 1, v10);
  if (!v11)
  {
    v13 = *(_QWORD *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    v14 = sub_1C07ACF80(&qword_1ED7625F8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  sub_1C07B2D8C((uint64_t)v8, 0, 1, v10);
LABEL_7:
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1C0A78F20()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0A78F2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1C078CAF0();
  return sub_1C07B2D80(v1, v0, v2);
}

uint64_t sub_1C0A78F54()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0A78F60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1C078CAF0();
  return sub_1C07B2D8C(v1, v0, v0, v2);
}

uint64_t sub_1C0A78F8C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for StaticKnowledgeAssetMetadata(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1C0A79000()
{
  unint64_t result;

  result = qword_1ED74AEB8;
  if (!qword_1ED74AEB8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1099E00, &type metadata for GlobalKnowledgeStore.StaticKnowledgeAssetStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED74AEB8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for GlobalKnowledgeStore.StaticKnowledgeAssetStatus.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C0A79088 + 4 * byte_1C1099B75[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C0A790BC + 4 * byte_1C1099B70[v4]))();
}

uint64_t sub_1C0A790BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0A790C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0A790CCLL);
  return result;
}

uint64_t sub_1C0A790D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0A790E0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C0A790E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0A790EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GlobalKnowledgeStore.StaticKnowledgeAssetStatus.CodingKeys()
{
  return &type metadata for GlobalKnowledgeStore.StaticKnowledgeAssetStatus.CodingKeys;
}

unint64_t sub_1C0A7910C()
{
  unint64_t result;

  result = qword_1EF639ED0;
  if (!qword_1EF639ED0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1099DD8, &type metadata for GlobalKnowledgeStore.StaticKnowledgeAssetStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF639ED0);
  }
  return result;
}

unint64_t sub_1C0A7914C()
{
  unint64_t result;

  result = qword_1ED74AEC8;
  if (!qword_1ED74AEC8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1099D48, &type metadata for GlobalKnowledgeStore.StaticKnowledgeAssetStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED74AEC8);
  }
  return result;
}

unint64_t sub_1C0A7918C()
{
  unint64_t result;

  result = qword_1ED74AEC0;
  if (!qword_1ED74AEC0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1099D70, &type metadata for GlobalKnowledgeStore.StaticKnowledgeAssetStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED74AEC0);
  }
  return result;
}

void sub_1C0A791CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD *v16;
  char v18;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_1C078B7D0();
    sub_1C106FC28();
    v6 = sub_1C077AE74();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    sub_1C0789F50();
    if ((v9 & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      if ((*v11 != a1 || v11[1] != a2) && (sub_1C07785B0() & 1) == 0)
      {
        v13 = ~v7;
        v14 = (v8 + 1) & v13;
        sub_1C0789F50();
        if ((v15 & 1) != 0)
        {
          do
          {
            v16 = (_QWORD *)(v10 + 16 * v14);
            if (*v16 == a1 && v16[1] == a2)
              break;
            if ((sub_1C07785B0() & 1) != 0)
              break;
            v14 = (v14 + 1) & v13;
            sub_1C0789F50();
          }
          while ((v18 & 1) != 0);
        }
      }
    }
  }
  sub_1C07877C0();
}

void sub_1C0A792BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;

  sub_1C0779670();
  v1 = v0;
  sub_1C106D6CC();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v2);
  sub_1C0A8CE58();
  if (v3)
  {
    v4 = *(_QWORD *)(v1 + 40);
    sub_1C0794BAC((unint64_t *)&qword_1ED744A48, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C130], MEMORY[0x1E0D3C148]);
    sub_1C0789B9C();
    sub_1C07AE880();
    if ((v5 & 1) != 0)
    {
      sub_1C0A8CFF8();
      do
      {
        sub_1C0A8CE98();
        sub_1C0794BAC(qword_1ED744A50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C130], MEMORY[0x1E0D3C150]);
        sub_1C0780758();
        sub_1C0A8CDC8();
        if ((v4 & 1) != 0)
          break;
        sub_1C077FD7C();
      }
      while ((v6 & 1) != 0);
    }
  }
  sub_1C0776760();
}

void sub_1C0A79384(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;
  char v4;
  char v5;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_1C078B7D0();
    sub_1C1070E04();
    sub_1C077AE74();
    sub_1C0A8D570();
    if ((v2 & 1) != 0)
    {
      sub_1C0A8D550();
      if (!v3)
      {
        sub_1C07787B0();
        if ((v4 & 1) != 0)
        {
          do
          {
            sub_1C0A8D550();
            if (v3)
              break;
            sub_1C07787B0();
          }
          while ((v5 & 1) != 0);
        }
      }
    }
  }
}

void sub_1C0A7942C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;

  sub_1C0779670();
  v1 = v0;
  sub_1C0776744();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v2);
  sub_1C0A8CE58();
  if (v3)
  {
    v4 = *(_QWORD *)(v1 + 40);
    sub_1C0794BAC(&qword_1ED759F58, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3BB08], MEMORY[0x1E0D3BB20]);
    sub_1C0789B9C();
    sub_1C07AE880();
    if ((v5 & 1) != 0)
    {
      sub_1C0A8CFF8();
      do
      {
        sub_1C0A8CE98();
        sub_1C0794BAC(&qword_1ED75E7D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3BB08], MEMORY[0x1E0D3BB28]);
        sub_1C0780758();
        sub_1C0A8CDC8();
        if ((v4 & 1) != 0)
          break;
        sub_1C077FD7C();
      }
      while ((v6 & 1) != 0);
    }
  }
  sub_1C0776760();
}

void sub_1C0A794F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;

  sub_1C0779670();
  v1 = v0;
  sub_1C078784C();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v2);
  sub_1C0A8CE58();
  if (v3)
  {
    v4 = *(_QWORD *)(v1 + 40);
    sub_1C0794BAC((unint64_t *)&qword_1ED7618F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE40]);
    sub_1C0789B9C();
    sub_1C07AE880();
    if ((v5 & 1) != 0)
    {
      sub_1C0A8CFF8();
      do
      {
        sub_1C0A8CE98();
        sub_1C0794BAC(&qword_1ED75EA38, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE50]);
        sub_1C0780758();
        sub_1C0A8CDC8();
        if ((v4 & 1) != 0)
          break;
        sub_1C077FD7C();
      }
      while ((v6 & 1) != 0);
    }
  }
  sub_1C0776760();
}

void sub_1C0A795B4()
{
  unsigned __int8 v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  uint64_t v4;
  char v5;

  sub_1C078C1B4();
  if (!*(_QWORD *)(v1 + 16))
    goto LABEL_4;
  v2 = v1;
  v3 = v0;
  sub_1C0A8D0D8();
  sub_1C07B3100(v3);
  sub_1C07888B4();
  sub_1C077960C();
  v4 = sub_1C078C744() & ~(-1 << *(_BYTE *)(v2 + 32));
  sub_1C0A8D5E4();
  if ((v5 & 1) != 0)
    ((void (*)(uint64_t))((char *)&loc_1C0A79678
                                  + 4 * byte_1C1099E50[*(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + v4)]))(1702259052);
  else
LABEL_4:
    sub_1C078C198();
}

void sub_1C0A79838()
{
  sub_1C0A79860();
}

void sub_1C0A7984C()
{
  sub_1C0A79860();
}

void sub_1C0A79860()
{
  void (*v0)(uint64_t *);
  void (*v1)(uint64_t *);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  BOOL v16;
  char v17;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1C0779670();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = (int *)sub_1C0A8D38C(v4, v2, v6);
  v8 = *((_QWORD *)v7 - 1);
  sub_1C078C94C();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v26 - v10;
  if (*(_QWORD *)(v3 + 16))
  {
    sub_1C07AAEDC();
    v27 = v3;
    v1(&v33);
    v12 = sub_1C077ED30();
    v13 = v27;
    v14 = -1 << *(_BYTE *)(v27 + 32);
    v15 = v12 & ~v14;
    v30 = v27 + 56;
    if (((*(_QWORD *)(v27 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
    {
      v28 = ~v14;
      v29 = *(_QWORD *)(v8 + 72);
      do
      {
        sub_1C0A8CF64(*(_QWORD *)(v13 + 48) + v29 * v15, (uint64_t)v11);
        if ((sub_1C106E560() & 1) != 0)
        {
          sub_1C0779688();
          sub_1C0794BAC(&qword_1ED75E7E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC80]);
          sub_1C0A8CF3C();
          sub_1C0A8CF3C();
          v16 = v33 == v31 && v34 == v32;
          if (v16)
          {
            sub_1C0782990();
            v13 = v27;
          }
          else
          {
            v17 = sub_1C07785B0();
            sub_1C077960C();
            sub_1C0775894();
            v13 = v27;
            if ((v17 & 1) == 0)
              goto LABEL_33;
          }
          if ((sub_1C106EB00() & 1) != 0)
          {
            sub_1C0A8CF3C();
            sub_1C0A8CF3C();
            if (v33 == v31 && v34 == v32)
            {
              sub_1C0782990();
              v13 = v27;
            }
            else
            {
              v19 = sub_1C07785B0();
              sub_1C077960C();
              sub_1C077589C();
              v13 = v27;
              if ((v19 & 1) == 0)
                goto LABEL_33;
            }
            sub_1C07B1CE0();
            v22 = v16 && v20 == v21;
            if ((v22 || (sub_1C07785B0() & 1) != 0)
              && *(_QWORD *)&v11[v7[9]] == *(_QWORD *)(v5 + v7[9])
              && *(double *)&v11[v7[10]] == *(double *)(v5 + v7[10]))
            {
              sub_1C07B1CE0();
              v25 = v16 && v23 == v24;
              if ((v25 || (sub_1C07785B0() & 1) != 0) && *(double *)&v11[v7[12]] == *(double *)(v5 + v7[12]))
              {
                sub_1C078BA28((uint64_t)v11);
                break;
              }
            }
          }
        }
LABEL_33:
        sub_1C078BA28((uint64_t)v11);
        v15 = (v15 + 1) & v28;
      }
      while (((*(_QWORD *)(v30 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0);
    }
  }
  sub_1C0776760();
}

uint64_t sub_1C0A79B08()
{
  uint64_t v0;

  v0 = sub_1C106AB28();
  sub_1C0800A9C(v0, qword_1EF6D1320);
  sub_1C079E000(v0, (uint64_t)qword_1EF6D1320);
  return sub_1C106AA8C();
}

void sub_1C0A79B68(uint64_t a1)
{
  sub_1C0A79BB8(a1, qword_1EF6D1338);
}

void sub_1C0A79B8C(uint64_t a1)
{
  sub_1C0A79BB8(a1, qword_1EF6D1350);
}

void sub_1C0A79BB8(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1C07815A8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1C07785B8();
  sub_1C0800A9C(v6, a2);
  sub_1C079E000(v4, (uint64_t)a2);
  sub_1C106F19C();
  sub_1C106AAC8();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
  sub_1C07785E4();
}

uint64_t static Grader.runEvalStats(forEntityClasses:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  char v47;
  uint64_t v48;
  os_log_type_t v49;
  _WORD *v50;
  uint64_t v51;
  uint64_t v52;
  const char *v53;
  uint64_t v54;
  os_log_type_t v55;
  _WORD *v56;
  __n128 *v57;
  __n128 *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v3 = type metadata accessor for ExtractedMatch();
  v69 = *(_QWORD *)(v3 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v4);
  sub_1C0A8D230();
  v5 = sub_1C0776744();
  v71 = *(_QWORD *)(v5 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106A708();
  sub_1C077B5BC();
  v9 = sub_1C106A6FC();
  if (qword_1EF62DDA0 != -1)
    swift_once();
  v10 = (void *)sub_1C07815A8();
  sub_1C079E000((uint64_t)v10, (uint64_t)qword_1EF6D1338);
  v70 = sub_1C0A7A288();
  if (!v70)
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v48 = sub_1C077585C();
    sub_1C077965C(v48, (uint64_t)qword_1ED762AF8);
    v49 = sub_1C0776928();
    if (sub_1C077F60C(v49))
    {
      v50 = (_WORD *)sub_1C0775854();
      sub_1C078C17C(v50);
      v53 = "Error: unable to unarchive match extractor links data.";
      goto LABEL_40;
    }
LABEL_41:

    sub_1C077FA84();
    return 0;
  }
  if (qword_1EF62DD98 != -1)
    swift_once();
  sub_1C079E000((uint64_t)v10, (uint64_t)qword_1EF6D1320);
  v11 = sub_1C0A7A58C();
  if (!v11)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED762B18 != -1)
      swift_once();
    v54 = sub_1C077585C();
    sub_1C077965C(v54, (uint64_t)qword_1ED762AF8);
    v55 = sub_1C0776928();
    if (sub_1C077F60C(v55))
    {
      v56 = (_WORD *)sub_1C0775854();
      sub_1C078C17C(v56);
      v53 = "Error: unable to unarchive ground truths data.";
LABEL_40:
      sub_1C0796F30(&dword_1C0771000, v51, v52, v53);
      sub_1C0776778();
    }
    goto LABEL_41;
  }
  v12 = v70;
  v65 = *(_QWORD *)(a1 + 16);
  if (v65)
  {
    v74 = v11;
    v62 = v9;
    sub_1C078233C();
    v68 = a1 + v13;
    v15 = *(_QWORD *)(v14 + 72);
    v66 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
    v67 = v15;
    v61 = a1;
    sub_1C07796D8();
    v16 = 0;
    v17 = 0.0;
    v18 = 0.0;
    v19 = 0.0;
    v63 = v5;
    v64 = v8;
    while (1)
    {
      v66(v8, v68 + v67 * v16, v5);
      v20 = sub_1C0A8D5C4();
      if (!*(_QWORD *)(v12 + 16))
        goto LABEL_46;
      v22 = sub_1C077D774(v20, v21);
      if ((v23 & 1) == 0)
        goto LABEL_46;
      v24 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v22);
      v72 = v16;
      v73 = v24;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C0775844();
      v25 = sub_1C0A8D5C4();
      if (!*(_QWORD *)(v74 + 16))
        break;
      v27 = sub_1C077D774(v25, v26);
      if ((v28 & 1) == 0)
        break;
      v29 = *(_QWORD *)(*(_QWORD *)(v74 + 56) + 8 * v27);
      sub_1C077AE90();
      sub_1C077B5B4();
      v30 = *(_QWORD *)(v29 + 16);
      v31 = *(_QWORD *)(v73 + 16);
      if (v31)
      {
        sub_1C078233C();
        v34 = v32 + v33;
        v36 = *(_QWORD *)(v35 + 72);
        while (1)
        {
          sub_1C0A8CC94(v34, v1, (uint64_t (*)(_QWORD))type metadata accessor for ExtractedMatch);
          if (*(_QWORD *)(v29 + 16))
          {
            v37 = (uint64_t *)(v1 + *(int *)(v3 + 28));
            v38 = *v37;
            v39 = v37[1];
            sub_1C077584C();
            v40 = sub_1C077D774(v38, v39);
            if ((v41 & 1) != 0)
            {
              v42 = (uint64_t *)(*(_QWORD *)(v29 + 56) + 16 * v40);
              v44 = *v42;
              v43 = v42[1];
              sub_1C07796D8();
              sub_1C0778580();
              v45 = (_QWORD *)(v1 + *(int *)(v3 + 24));
              if (v44 == *v45 && v43 == v45[1])
              {
                sub_1C0775844();
LABEL_26:
                v19 = v19 + 1.0;
                goto LABEL_27;
              }
              v47 = sub_1C07785B0();
              sub_1C0775844();
              if ((v47 & 1) != 0)
                goto LABEL_26;
            }
            else
            {
              sub_1C0778580();
            }
          }
          v18 = v18 + 1.0;
LABEL_27:
          sub_1C07B2018(v1, (uint64_t (*)(_QWORD))type metadata accessor for ExtractedMatch);
          v34 += v36;
          if (!--v31)
          {
            swift_bridgeObjectRelease();
            v5 = v63;
            v12 = v70;
            goto LABEL_30;
          }
        }
      }
      swift_bridgeObjectRelease();
LABEL_30:
      v16 = v72 + 1;
      v17 = v17 + (double)v30;
      sub_1C077960C();
      v8 = v64;
      (*(void (**)(char *, uint64_t))(v71 + 8))(v64, v5);
      if (v16 == v65)
      {
        swift_bridgeObjectRelease();
        sub_1C07767AC();
        a1 = v61;
        sub_1C0775844();
        goto LABEL_43;
      }
    }
    sub_1C078F230();
LABEL_46:
    sub_1C077B5B4();
    sub_1C0775844();
    sub_1C077960C();
    sub_1C07767AC();
    sub_1C07ACF80(&qword_1ED7614E8);
    v59 = (__n128 *)sub_1C078DB90();
    sub_1C0A8D628(v59, (__n128)xmmword_1C1079220);
    sub_1C1070774();
    sub_1C0791D0C();
    sub_1C0A8D5C4();
    sub_1C106FC94();
    sub_1C0775844();
    sub_1C0796F80();
    sub_1C07AFD2C(v75);
    sub_1C07767AC();
    swift_release();
    (*(void (**)(char *, uint64_t))(v71 + 8))(v8, v63);
    return 0;
  }
  swift_bridgeObjectRelease();
  sub_1C07767AC();
LABEL_43:
  sub_1C07ACF80(&qword_1ED7614E8);
  v57 = (__n128 *)sub_1C078DB90();
  sub_1C0A8D628(v57, (__n128)xmmword_1C1079220);
  sub_1C1070774();
  sub_1C0791D0C();
  MEMORY[0x1C3BA683C](a1, v5);
  sub_1C106FC94();
  sub_1C0775844();
  sub_1C0791D0C();
  sub_1C0A8D6D4();
  sub_1C106FC94();
  sub_1C0A8D6D4();
  sub_1C07AFD2C(v75);
  sub_1C07767AC();
  sub_1C077FA84();
  return 1;
}

uint64_t sub_1C0A7A288()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  void *v4;
  uint64_t v6;

  v0 = sub_1C106F544();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1C106AB58();
  v3 = v2;
  v4 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C07ACF80(&qword_1EF639FC0);
  sub_1C0A8CBAC(&qword_1EF639FC8, &qword_1EF639FC0, (uint64_t (*)(void))sub_1C0A8CC18);
  sub_1C106A6F0();
  objc_autoreleasePoolPop(v4);
  sub_1C07B3374(v1, v3);
  return v6;
}

uint64_t sub_1C0A7A58C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  void *v4;
  uint64_t v6;

  v0 = sub_1C106F544();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1C106AB58();
  v3 = v2;
  v4 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C07ACF80(&qword_1ED74D268);
  sub_1C0A8CBAC(&qword_1EF639FB8, &qword_1ED74D268, (uint64_t (*)(void))sub_1C0A8CB50);
  sub_1C106A6F0();
  objc_autoreleasePoolPop(v4);
  sub_1C07B3374(v1, v3);
  return v6;
}

uint64_t sub_1C0A7A890()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  void *v4;
  uint64_t v6;

  v0 = sub_1C106F544();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1C106AB58();
  v3 = v2;
  v4 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C07ACF80(&qword_1EF639F88);
  sub_1C0A8CBAC(&qword_1EF639F90, &qword_1EF639F88, sub_1C0A8CB18);
  sub_1C106A6F0();
  objc_autoreleasePoolPop(v4);
  sub_1C07B3374(v1, v3);
  return v6;
}

void sub_1C0A7AB94()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  _DWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1C0779670();
  v3 = v2;
  v4 = sub_1C077585C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1C079FF80();
  if (!v3)
    sub_1C07BFF38();
  sub_1C078A794();
  sub_1C077CF64();
  sub_1C077CF64();
  sub_1C078BB78();
  v6 = sub_1C077C13C();
  if (sub_1C0790D48(v6))
  {
    v7 = (_DWORD *)sub_1C0775854();
    v8 = (_QWORD *)sub_1C0775854();
    v9 = sub_1C0775854();
    sub_1C0A8D0B8(v9);
    *v7 = 136315394;
    v10 = sub_1C0788DAC(0x697274533C746553, 0xEB000000003E676ELL, &v14);
    sub_1C079D520(v10);
    sub_1C07B1804();
    v11 = sub_1C079CBDC();
    sub_1C07950B8(v11);
    *v8 = v4;
    sub_1C077E6C8();
    sub_1C077E6C8();
    sub_1C079EF04(&dword_1C0771000, v12, v13, "JSONDecoder: decode fromURL: Can't decode %s with error: %@");
    sub_1C07ACF80(&qword_1ED7614A0);
    sub_1C0779910();
    sub_1C0776778();
  }
  sub_1C077E6C8();
  sub_1C077E6C8();
  sub_1C077E6C8();

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v4);
  sub_1C0862FB0();
  sub_1C0776760();
}

void sub_1C0A7AD48()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t);

  sub_1C0779670();
  v3 = v2;
  sub_1C077585C();
  sub_1C0863000();
  MEMORY[0x1E0C80A78](v4);
  sub_1C079FF80();
  if (!v3)
    sub_1C07BFF38();
  sub_1C078A794();
  sub_1C077CF64();
  sub_1C077CF64();
  sub_1C078BB78();
  v5 = sub_1C077C13C();
  if (sub_1C0790D48(v5))
  {
    sub_1C0775854();
    v6 = (_QWORD *)sub_1C0775854();
    v7 = sub_1C0775854();
    sub_1C0A8D0B8(v7);
    sub_1C077E754(4.8151e-34);
    v9 = sub_1C0788DAC(0x466E6F6973726556, 0xEB00000000646565, v8);
    sub_1C079D520(v9);
    sub_1C07B1804();
    v10 = sub_1C079CBDC();
    sub_1C07950B8(v10);
    *v6 = v0;
    sub_1C077E6C8();
    sub_1C077E6C8();
    sub_1C079EF04(&dword_1C0771000, v11, v12, "JSONDecoder: decode fromURL: Can't decode %s with error: %@");
    sub_1C07ACF80(&qword_1ED7614A0);
    sub_1C0779910();
    sub_1C0776778();
  }
  sub_1C077E6C8();
  sub_1C077E6C8();
  sub_1C077E6C8();

  v13 = sub_1C07B9F54();
  v14(v13);
  sub_1C0862FB0();
  sub_1C0776760();
}

void sub_1C0A7AEC4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t);

  sub_1C0779670();
  v3 = v2;
  sub_1C077585C();
  sub_1C0863000();
  MEMORY[0x1E0C80A78](v4);
  sub_1C079FF80();
  if (!v3)
    sub_1C07BFF38();
  sub_1C078A794();
  sub_1C077CF64();
  sub_1C077CF64();
  sub_1C078BB78();
  v5 = sub_1C077C13C();
  if (sub_1C0790D48(v5))
  {
    sub_1C0775854();
    v6 = (_QWORD *)sub_1C0775854();
    v7 = sub_1C0775854();
    sub_1C0A8D0B8(v7);
    sub_1C077E754(4.8151e-34);
    v9 = sub_1C0788DAC(0x6565467373616C43, 0xE900000000000064, v8);
    sub_1C079D520(v9);
    sub_1C07B1804();
    v10 = sub_1C079CBDC();
    sub_1C07950B8(v10);
    *v6 = v0;
    sub_1C077E6C8();
    sub_1C077E6C8();
    sub_1C079EF04(&dword_1C0771000, v11, v12, "JSONDecoder: decode fromURL: Can't decode %s with error: %@");
    sub_1C07ACF80(&qword_1ED7614A0);
    sub_1C0779910();
    sub_1C0776778();
  }
  sub_1C077E6C8();
  sub_1C077E6C8();
  sub_1C077E6C8();

  v13 = sub_1C07B9F54();
  v14(v13);
  sub_1C0862FB0();
  sub_1C0776760();
}

void sub_1C0A7B03C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t);

  sub_1C0779670();
  v3 = v2;
  sub_1C077585C();
  sub_1C0863000();
  MEMORY[0x1E0C80A78](v4);
  sub_1C079FF80();
  if (!v3)
    sub_1C07BFF38();
  sub_1C078A794();
  sub_1C077CF64();
  sub_1C077CF64();
  sub_1C078BB78();
  v5 = sub_1C077C13C();
  if (sub_1C0790D48(v5))
  {
    sub_1C0775854();
    v6 = (_QWORD *)sub_1C0775854();
    v7 = sub_1C0775854();
    sub_1C0A8D0B8(v7);
    sub_1C077E754(4.8151e-34);
    v9 = sub_1C0788DAC(0x6174697265686E49, 0xEF6465654665636ELL, v8);
    sub_1C079D520(v9);
    sub_1C07B1804();
    v10 = sub_1C079CBDC();
    sub_1C07950B8(v10);
    *v6 = v0;
    sub_1C077E6C8();
    sub_1C077E6C8();
    sub_1C079EF04(&dword_1C0771000, v11, v12, "JSONDecoder: decode fromURL: Can't decode %s with error: %@");
    sub_1C07ACF80(&qword_1ED7614A0);
    sub_1C0779910();
    sub_1C0776778();
  }
  sub_1C077E6C8();
  sub_1C077E6C8();
  sub_1C077E6C8();

  v13 = sub_1C07B9F54();
  v14(v13);
  sub_1C0862FB0();
  sub_1C0776760();
}

void sub_1C0A7B1BC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t);

  sub_1C0779670();
  v3 = v2;
  sub_1C077585C();
  sub_1C0863000();
  MEMORY[0x1E0C80A78](v4);
  sub_1C079FF80();
  if (!v3)
    sub_1C07BFF38();
  sub_1C078A794();
  sub_1C077CF64();
  sub_1C077CF64();
  sub_1C078BB78();
  v5 = sub_1C077C13C();
  if (sub_1C0790D48(v5))
  {
    sub_1C0775854();
    v6 = (_QWORD *)sub_1C0775854();
    v7 = sub_1C0775854();
    sub_1C0A8D0B8(v7);
    sub_1C077E754(4.8151e-34);
    v9 = sub_1C0788DAC(0x7461636964657250, 0xED00006465654665, v8);
    sub_1C079D520(v9);
    sub_1C07B1804();
    v10 = sub_1C079CBDC();
    sub_1C07950B8(v10);
    *v6 = v0;
    sub_1C077E6C8();
    sub_1C077E6C8();
    sub_1C079EF04(&dword_1C0771000, v11, v12, "JSONDecoder: decode fromURL: Can't decode %s with error: %@");
    sub_1C07ACF80(&qword_1ED7614A0);
    sub_1C0779910();
    sub_1C0776778();
  }
  sub_1C077E6C8();
  sub_1C077E6C8();
  sub_1C077E6C8();

  v13 = sub_1C07B9F54();
  v14(v13);
  sub_1C0862FB0();
  sub_1C0776760();
}

void sub_1C0A7B33C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  _DWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  uint64_t v15;

  sub_1C0779670();
  v3 = v2;
  sub_1C077585C();
  sub_1C0863000();
  MEMORY[0x1E0C80A78](v4);
  sub_1C079FF80();
  if (!v3)
    sub_1C07BFF38();
  sub_1C078A794();
  sub_1C077CF64();
  sub_1C077CF64();
  sub_1C078BB78();
  v5 = sub_1C077C13C();
  if (sub_1C0790D48(v5))
  {
    v6 = (_DWORD *)sub_1C0775854();
    v7 = (_QWORD *)sub_1C0775854();
    v8 = sub_1C0775854();
    sub_1C0A8D0B8(v8);
    *v6 = 136315394;
    v9 = sub_1C0788DAC(0xD000000000000014, 0x80000001C10F4CD0, &v15);
    sub_1C079D520(v9);
    sub_1C07B1804();
    v10 = sub_1C079CBDC();
    sub_1C07950B8(v10);
    *v7 = v0;
    sub_1C077E6C8();
    sub_1C077E6C8();
    sub_1C079EF04(&dword_1C0771000, v11, v12, "JSONDecoder: decode fromURL: Can't decode %s with error: %@");
    sub_1C07ACF80(&qword_1ED7614A0);
    sub_1C0779910();
    sub_1C0776778();
  }
  sub_1C077E6C8();
  sub_1C077E6C8();
  sub_1C077E6C8();

  v13 = sub_1C07B9F54();
  v14(v13);
  sub_1C0862FB0();
  sub_1C0776760();
}

uint64_t static Grader.runBlockingStats(forEntityClasses:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  double v15;
  double v16;
  uint64_t v17;
  NSObject *v18;
  NSObject *v19;
  _QWORD *v20;
  uint64_t v21;
  NSObject *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  unint64_t v55;
  int64_t v56;
  unint64_t v57;
  uint64_t v58;
  int64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  _QWORD *v67;
  BOOL v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  char v78;
  _QWORD *v79;
  BOOL v80;
  uint64_t v81;
  char v82;
  _QWORD *v83;
  BOOL v84;
  uint64_t i;
  _QWORD *v86;
  BOOL v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  BOOL v91;
  char v92;
  uint64_t v93;
  uint64_t v95;
  os_log_type_t v96;
  _WORD *v97;
  uint64_t v98;
  uint64_t v99;
  const char *v100;
  uint64_t v101;
  os_log_type_t v102;
  _WORD *v103;
  uint64_t v105;
  uint64_t v106;
  os_log_type_t v107;
  uint8_t *v108;
  uint64_t v109;
  unint64_t v110;
  void (*v111)(uint64_t);
  uint64_t v112;
  void (*v113)(uint64_t);
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  int64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  int64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  unint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  int64_t v141;
  unint64_t v142;
  uint64_t v143[10];
  uint64_t v144;

  v2 = sub_1C0776744();
  v131 = *(_QWORD *)(v2 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v3);
  sub_1C077AF80();
  v6 = v4 - v5;
  MEMORY[0x1E0C80A78](v7);
  v9 = (uint64_t)&v115 - v8;
  sub_1C106A708();
  sub_1C077B5BC();
  v10 = sub_1C106A6FC();
  if (qword_1EF62DDA8 != -1)
LABEL_155:
    swift_once();
  v11 = sub_1C07815A8();
  sub_1C079E000(v11, (uint64_t)qword_1EF6D1350);
  v133 = sub_1C0A7A890();
  if (!v133)
  {
    if (qword_1ED762B18 != -1)
      goto LABEL_157;
    goto LABEL_134;
  }
  if (qword_1EF62DD98 != -1)
    swift_once();
  sub_1C079E000(v11, (uint64_t)qword_1EF6D1320);
  v129 = sub_1C0A7A58C();
  if (!v129)
  {
    sub_1C078F230();
    if (qword_1ED762B18 != -1)
      swift_once();
    v101 = sub_1C077585C();
    sub_1C077965C(v101, (uint64_t)qword_1ED762AF8);
    v102 = sub_1C0776928();
    if (sub_1C077F60C(v102))
    {
      v103 = (_WORD *)sub_1C0775854();
      sub_1C078C17C(v103);
      v100 = "Error: unable to unarchive ground truths data.";
LABEL_140:
      sub_1C0796F30(&dword_1C0771000, v98, v99, v100);
      sub_1C0776778();
    }
LABEL_141:

    sub_1C07767F4();
    return 0;
  }
  v144 = MEMORY[0x1E0DEE9E8];
  v122 = *(_QWORD *)(a1 + 16);
  if (!v122)
  {
    sub_1C078F230();
    sub_1C078F230();
    goto LABEL_144;
  }
  v115 = v6;
  v117 = v10;
  sub_1C078233C();
  v124 = a1 + v12;
  v123 = *(_QWORD *)(v13 + 72);
  v125 = *(_QWORD *)(v13 + 16);
  v116 = a1;
  sub_1C0778624();
  v14 = 0;
  v15 = 0.0;
  v10 = 0x80000001C10F4CB0;
  v16 = 0.0;
  v132 = 0x80000001C10F4CB0;
  v119 = v2;
  v121 = v9;
  while (2)
  {
    sub_1C0A8D278(v9, v124 + v123 * v14);
    v17 = sub_1C106D0FC();
    v19 = v18;
    v20 = (_QWORD *)sub_1C089AA80(v17, v18, v133);
    sub_1C07767AC();
    if (!v20)
    {
LABEL_147:
      swift_bridgeObjectRelease();
      sub_1C078F230();
      sub_1C078F230();
      swift_bridgeObjectRelease();
      v105 = v115;
      if (qword_1ED762B18 != -1)
        swift_once();
      v106 = sub_1C077585C();
      sub_1C079E000(v106, (uint64_t)qword_1ED762AF8);
      sub_1C0A8D278(v105, v9);
      sub_1C106F538();
      v107 = sub_1C0776928();
      if (os_log_type_enabled(v19, v107))
      {
        v108 = (uint8_t *)sub_1C0775854();
        v143[0] = sub_1C0775854();
        *(_DWORD *)v108 = 136315138;
        v109 = sub_1C106D0FC();
        v143[9] = sub_1C0788DAC(v109, v110, v143);
        sub_1C10705AC();
        sub_1C077960C();
        v111 = *(void (**)(uint64_t))(v131 + 8);
        v112 = sub_1C078C6DC();
        v111(v112);
        _os_log_impl(&dword_1C0771000, v19, v107, "Error: entity type %s does not exist in both ground truth and blocking dicts", v108, 0xCu);
        swift_arrayDestroy();
        sub_1C0776778();
      }

      sub_1C07814FC();
      v113 = *(void (**)(uint64_t))(v131 + 8);
      v114 = sub_1C078C6DC();
      v113(v114);
      ((void (*)(uint64_t, uint64_t))v113)(v9, v2);
      return 0;
    }
    v21 = sub_1C106D0FC();
    v19 = v22;
    v23 = sub_1C089AA80(v21, v22, v129);
    sub_1C07767AC();
    if (!v23)
    {
      sub_1C078F230();
      goto LABEL_147;
    }
    v6 = v14 + 1;
    v135 = v6;
    v139 = v23;
    v15 = v15 + (double)*(uint64_t *)(v23 + 16);
    v24 = v20 + 8;
    sub_1C0789DCC();
    v2 = v26 & v25;
    v28 = (unint64_t)(v27 + 63) >> 6;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v9 = 0;
LABEL_11:
    while (v2)
    {
      sub_1C077EB84();
      v30 = v29 | (v9 << 6);
LABEL_28:
      v6 = *(_QWORD *)(v20[6] + 16 * v30);
      v36 = v20[2];
      sub_1C07767B4();
      if (!v36)
      {
        a1 = 0;
        goto LABEL_44;
      }
      v37 = sub_1C0A8D40C();
      if ((v38 & 1) != 0 && (v39 = *(_QWORD *)(v20[7] + 8 * v37), *(_QWORD *)(v39 + 16)))
      {
        sub_1C077AE90();
        v40 = sub_1C077D774(0x697469746E45646DLL, 0xEA00000000007365);
        if ((v41 & 1) != 0)
        {
          a1 = *(_QWORD *)(*(_QWORD *)(v39 + 56) + 8 * v40);
          sub_1C0778624();
        }
        else
        {
          a1 = 0;
        }
        sub_1C077960C();
      }
      else
      {
        a1 = 0;
      }
      if (!v20[2])
        goto LABEL_44;
      v42 = sub_1C0A8D40C();
      if ((v43 & 1) == 0)
        goto LABEL_44;
      v44 = *(_QWORD *)(v20[7] + 8 * v42);
      sub_1C077AE90();
      sub_1C07767AC();
      if (*(_QWORD *)(v44 + 16)
        && (v45 = sub_1C077D774(0xD000000000000010, v10), (v46 & 1) != 0)
        && (v6 = *(_QWORD *)(*(_QWORD *)(v44 + 56) + 8 * v45), sub_1C07796D8(), sub_1C077960C(), *(_QWORD *)(v6 + 16)))
      {
        if (a1)
        {
          if (*(_QWORD *)(a1 + 16))
          {
            v118 = a1 + 56;
            sub_1C0789DCC();
            v50 = v49 & v48;
            v120 = (unint64_t)(v51 + 63) >> 6;
            v138 = v6 + 56;
            v127 = v6;
            v130 = v28;
            while (2)
            {
              v11 = v144;
              v128 = v144 + 56;
              v126 = v144;
              while (1)
              {
LABEL_49:
                if (v50)
                {
                  sub_1C0A8D5A4();
                  v55 = v54 | (v53 << 6);
                }
                else
                {
                  v56 = v47 + 1;
                  if (__OFADD__(v47, 1))
                    goto LABEL_154;
                  if (v56 >= v120)
                  {
LABEL_130:
                    sub_1C0775844();
                    sub_1C0780A00();
                    goto LABEL_11;
                  }
                  v57 = *(_QWORD *)(v118 + 8 * v56);
                  v53 = v47 + 1;
                  if (!v57)
                  {
                    sub_1C0A8D30C();
                    if (v33 == v34)
                      goto LABEL_130;
                    sub_1C0A8D2B0();
                    if (!v57)
                    {
                      sub_1C0A8D30C();
                      if (v33 == v34)
                        goto LABEL_130;
                      sub_1C0A8D2B0();
                      if (!v57)
                      {
                        v59 = v58 + 3;
                        if (v59 >= v120)
                          goto LABEL_130;
                        v57 = *(_QWORD *)(v118 + 8 * v59);
                        if (!v57)
                        {
                          while (!__OFADD__(v59, 1))
                          {
                            sub_1C0A8D30C();
                            if (v33 == v34)
                              goto LABEL_130;
                            sub_1C0A8D2B0();
                            v59 = v60 + 1;
                            if (v57)
                              goto LABEL_67;
                          }
                          __break(1u);
LABEL_157:
                          swift_once();
LABEL_134:
                          v95 = sub_1C077585C();
                          sub_1C077965C(v95, (uint64_t)qword_1ED762AF8);
                          v96 = sub_1C0776928();
                          if (sub_1C077F60C(v96))
                          {
                            v97 = (_WORD *)sub_1C0775854();
                            sub_1C078C17C(v97);
                            v100 = "Error: unable to unarchive blocking keys.";
                            goto LABEL_140;
                          }
                          goto LABEL_141;
                        }
                        v53 = v59;
                      }
                    }
                  }
LABEL_67:
                  v52 = (v57 - 1) & v57;
                  v55 = __clz(__rbit64(v57)) + (v53 << 6);
                }
                v140 = v52;
                v141 = v53;
                v61 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v55);
                v62 = *v61;
                v10 = v61[1];
                v63 = *(_QWORD *)(v11 + 16);
                v142 = v10;
                if (!v63)
                {
                  v137 = v62;
                  sub_1C077584C();
                  goto LABEL_79;
                }
                sub_1C1070DF8();
                sub_1C077584C();
                sub_1C07767B4();
                sub_1C0789F64();
                v64 = sub_1C1070E4C();
                v65 = -1 << *(_BYTE *)(v11 + 32);
                v6 = v64 & ~v65;
                sub_1C0A8CE3C();
                if ((v66 & 1) == 0)
                  break;
                v136 = *(_QWORD *)(v11 + 48);
                v67 = (_QWORD *)(v136 + 16 * v6);
                v68 = *v67 == v62 && v67[1] == v10;
                if (v68)
                {
                  sub_1C0778580();
                  goto LABEL_109;
                }
                v137 = v62;
                if ((sub_1C07785B0() & 1) != 0)
                {
                  sub_1C0778580();
                  v11 = v126;
LABEL_109:
                  sub_1C07767AC();
                  sub_1C0A8D2F4();
                  v28 = v130;
                  continue;
                }
                v88 = ~v65;
                v6 = (v6 + 1) & v88;
                sub_1C0A8CE3C();
                if ((v89 & 1) == 0)
                  goto LABEL_78;
                v10 = v136;
                sub_1C0A8D4FC();
                v91 = v68 && v90 == v142;
                v28 = v130;
                if (!v91)
                {
                  while ((sub_1C07785B0() & 1) == 0)
                  {
                    v6 = (v6 + 1) & v88;
                    sub_1C0A8CE3C();
                    if ((v92 & 1) == 0)
                    {
                      sub_1C078F230();
                      v6 = v127;
                      goto LABEL_80;
                    }
                    sub_1C0A8D4FC();
                    if (v68 && v93 == v142)
                      break;
                  }
                }
                sub_1C07767AC();
                v11 = v126;
                sub_1C07767AC();
                sub_1C0A8D2F4();
              }
              v137 = v62;
LABEL_78:
              swift_bridgeObjectRelease();
              v6 = v127;
LABEL_79:
              v28 = v130;
LABEL_80:
              v69 = v139;
              if (*(_QWORD *)(v139 + 16))
              {
                v70 = v142;
                sub_1C07767B4();
                v71 = sub_1C077D774(v137, v70);
                if ((v72 & 1) != 0)
                {
                  v73 = (uint64_t *)(*(_QWORD *)(v69 + 56) + 16 * v71);
                  v74 = *v73;
                  v10 = v73[1];
                  sub_1C077584C();
                }
                else
                {
                  v10 = 0xE100000000000000;
                  v74 = 32;
                }
                sub_1C077960C();
              }
              else
              {
                v10 = 0xE100000000000000;
                v74 = 32;
              }
              if (*(_QWORD *)(v6 + 16))
              {
                sub_1C1070DF8();
                sub_1C0789F64();
                v75 = sub_1C1070E4C();
                v6 = -1 << *(_BYTE *)(v6 + 32);
                v76 = v75 & ~v6;
                sub_1C0A8D260();
                if ((v78 & 1) != 0)
                {
                  v136 = *(_QWORD *)(v77 + 48);
                  v79 = (_QWORD *)(v136 + 16 * v76);
                  v80 = *v79 == v74 && v79[1] == v10;
                  if (v80 || (sub_1C07785B0() & 1) != 0)
                  {
LABEL_129:
                    sub_1C0778580();
                    sub_1C0A7D28C((uint64_t)v143, v137, v142);
                    swift_bridgeObjectRelease();
                    v16 = v16 + 1.0;
                    sub_1C0A8D6E0();
                    v50 = v140;
                    v47 = v141;
                    continue;
                  }
                  v134 = ~v6;
                  v81 = (v76 + 1) & ~v6;
                  sub_1C0A8D260();
                  if ((v82 & 1) != 0)
                  {
                    v83 = (_QWORD *)(v136 + 16 * v81);
                    v84 = *v83 == v74 && v83[1] == v10;
                    if (v84 || (sub_1C07785B0() & 1) != 0)
                      goto LABEL_129;
                    for (i = v81 + 1; ; i = v6 + 1)
                    {
                      v6 = i & v134;
                      if (((*(_QWORD *)(v138 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
                        break;
                      v86 = (_QWORD *)(v136 + 16 * v6);
                      v87 = *v86 == v74 && v86[1] == v10;
                      if (v87 || (sub_1C07785B0() & 1) != 0)
                        goto LABEL_129;
                    }
                  }
                  swift_bridgeObjectRelease();
                  sub_1C0778580();
                  sub_1C0A8D6E0();
                  goto LABEL_113;
                }
                v6 = v77;
              }
              break;
            }
            swift_bridgeObjectRelease();
            sub_1C0778580();
            v10 = v132;
LABEL_113:
            v50 = v140;
            v47 = v141;
            v11 = v126;
            goto LABEL_49;
          }
          goto LABEL_44;
        }
        sub_1C0775844();
      }
      else
      {
LABEL_44:
        swift_bridgeObjectRelease();
        sub_1C0775834();
      }
    }
    v31 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
LABEL_153:
      __break(1u);
LABEL_154:
      __break(1u);
      goto LABEL_155;
    }
    if (v31 >= v28)
      goto LABEL_131;
    ++v9;
    if (v24[v31])
      goto LABEL_27;
    v9 = v31 + 1;
    if (v31 + 1 >= v28)
      goto LABEL_131;
    if (v24[v9])
      goto LABEL_27;
    v9 = v31 + 2;
    if (v31 + 2 >= v28)
      goto LABEL_131;
    if (v24[v9])
    {
LABEL_27:
      sub_1C0A8D00C();
      v30 = v35 + (v9 << 6);
      goto LABEL_28;
    }
    sub_1C0A8D3C4();
    if (v33 != v34)
    {
      if (!v24[v32])
      {
        while (1)
        {
          v9 = v32 + 1;
          if (__OFADD__(v32, 1))
            goto LABEL_153;
          if (v9 >= v28)
            goto LABEL_131;
          ++v32;
          if (v24[v9])
            goto LABEL_27;
        }
      }
      v9 = v32;
      goto LABEL_27;
    }
LABEL_131:
    sub_1C077E584();
    swift_bridgeObjectRelease();
    swift_release();
    v9 = v121;
    v2 = v119;
    (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v121, v119);
    v14 = v135;
    if (v135 != v122)
      continue;
    break;
  }
  a1 = v116;
  sub_1C0775834();
  sub_1C078F230();
  sub_1C078F230();
LABEL_144:
  swift_bridgeObjectRelease();
  sub_1C07ACF80(&qword_1ED7614E8);
  *(_OWORD *)(sub_1C078DB90() + 16) = xmmword_1C1079220;
  v143[0] = 0;
  v143[1] = 0xE000000000000000;
  sub_1C1070774();
  sub_1C0796F80();
  MEMORY[0x1C3BA683C](a1, v2);
  sub_1C106FC94();
  sub_1C0775844();
  sub_1C106FC94();
  sub_1C10701B0();
  sub_1C07AFD2C(v143[0]);
  sub_1C07767AC();
  sub_1C07767F4();
  return 1;
}

void sub_1C0A7C19C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;

  sub_1C07826C4();
  if (v2 == v3)
    goto LABEL_26;
  v4 = v3;
  v5 = v2;
  sub_1C0A3C4B4();
  if (!v6)
    goto LABEL_26;
  v24 = v5 + 56;
  sub_1C0789DCC();
  v9 = v8 & v7;
  sub_1C0A8D648();
  if (v9)
  {
    v10 = __clz(__rbit64(v9));
  }
  else
  {
    sub_1C0778720();
    if (v12 == v13)
      goto LABEL_26;
    v14 = v11;
    if (!*(_QWORD *)(v24 + 8 * v11))
    {
      v14 = v11 + 1;
      sub_1C0A8D0AC();
      if (v12 == v13)
        goto LABEL_26;
      sub_1C0A8D6C8();
      if (!v16)
      {
        v14 = v15 + 2;
        sub_1C0A8D0AC();
        if (v12 == v13)
          goto LABEL_26;
        sub_1C0A8D6C8();
        if (!v17)
        {
          sub_1C0778720();
          if (v12 == v13)
            goto LABEL_26;
          sub_1C0A8D6BC();
          if (!v19)
          {
            while (1)
            {
              v14 = v18 + 1;
              if (__OFADD__(v18, 1))
              {
                __break(1u);
                JUMPOUT(0x1C0A7C504);
              }
              sub_1C0A8D0AC();
              if (v12 == v13)
                goto LABEL_26;
              v18 = v20 + 1;
              if (*(_QWORD *)(v24 + 8 * v14))
                goto LABEL_23;
            }
          }
          v14 = v18;
        }
      }
    }
LABEL_23:
    sub_1C0786D84();
    v10 = v21 + (v14 << 6);
  }
  v22 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v10);
  sub_1C1070DF8();
  sub_1C0B6E238(v22);
  sub_1C07888B4();
  sub_1C077960C();
  sub_1C1070E4C();
  sub_1C07AB464();
  if (((*(_QWORD *)(v1 + v23) >> v0) & 1) != 0)
  {
    ((void (*)(uint64_t))((char *)&loc_1C0A7C324
                                  + dword_1C0A7C504[*(unsigned __int8 *)(*(_QWORD *)(v4 + 48) + v0)]))(0x6572617774666F73);
    return;
  }
LABEL_26:
  sub_1C0791C70();
}

uint64_t sub_1C0A7C53C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  uint64_t v27;
  uint64_t v28;

  if (a1 == a2)
    return 1;
  sub_1C0A3C4B4();
  if (v5)
  {
    v27 = v4 + 56;
    sub_1C0A8D648();
    if (v7)
    {
      sub_1C0A8D5A4();
      v11 = v9 | (v10 << 6);
LABEL_21:
      v21 = *(_QWORD *)(v8 + 48) + 24 * v11;
      v23 = *(_QWORD *)v21;
      v22 = *(_QWORD *)(v21 + 8);
      v24 = *(_BYTE *)(v21 + 16);
      sub_1C1070DF8();
      sub_1C0834F18(v23, v22, v24);
      sub_1C07AEE00();
      sub_1C0B6EB60();
      v25 = sub_1C1070E4C() & ~(-1 << *(_BYTE *)(a2 + 32));
      if (((*(_QWORD *)(v2 + ((v25 >> 3) & 0xFFFFFFFFFFFFF8)) >> v25) & 1) != 0)
        __asm { BR              X9 }
      sub_1C0834F2C(v23, v22, v24);
      return 0;
    }
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    sub_1C0778720();
    if (v12 == v13)
      return 1;
    sub_1C0A8D6BC();
    if (!v15)
    {
      if (v14 + 1 >= v28)
        return 1;
      if (*(_QWORD *)(v27 + 8 * (v14 + 1)))
        goto LABEL_20;
      if (v14 + 2 >= v28)
        return 1;
      if (!*(_QWORD *)(v27 + 8 * (v14 + 2)))
      {
        sub_1C0778720();
        if (v12 == v13)
          return 1;
        sub_1C0A8D6BC();
        if (!v17)
        {
          while (1)
          {
            v18 = v16 + 1;
            if (__OFADD__(v16, 1))
              break;
            if (v18 >= v28)
              return 1;
            ++v16;
            if (*(_QWORD *)(v27 + 8 * v18))
              goto LABEL_20;
          }
LABEL_27:
          __break(1u);
          JUMPOUT(0x1C0A7CAA0);
        }
      }
    }
LABEL_20:
    sub_1C0786D84();
    v11 = v19 + (v20 << 6);
    goto LABEL_21;
  }
  return 0;
}

void sub_1C0A7CADC(uint64_t a1, uint64_t a2)
{
  char v2;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  if (a1 == a2)
    goto LABEL_25;
  sub_1C0A3C4B4();
  if (!v5)
    goto LABEL_25;
  v19 = a1 + 56;
  sub_1C0789DCC();
  if ((v7 & v6) != 0)
  {
    sub_1C077E8CC();
    goto LABEL_23;
  }
  sub_1C0778720();
  if (v9 == v10)
    goto LABEL_25;
  if (*(_QWORD *)(v19 + 8 * v8))
    goto LABEL_22;
  sub_1C0A8D0AC();
  if (v9 == v10)
    goto LABEL_25;
  sub_1C0A8D6C8();
  if (v11)
    goto LABEL_22;
  sub_1C0A8D0AC();
  if (v9 == v10)
    goto LABEL_25;
  sub_1C0A8D6C8();
  if (v12)
    goto LABEL_22;
  sub_1C0778720();
  if (v9 == v10)
    goto LABEL_25;
  sub_1C0A8D6BC();
  if (v14)
  {
LABEL_22:
    sub_1C0786D84();
LABEL_23:
    sub_1C1070DF8();
    sub_1C084AE10();
    sub_1C07888B4();
    sub_1C077960C();
    sub_1C1070E4C();
    sub_1C07AB464();
    if (((*(_QWORD *)(a2 + 56 + v17) >> v2) & 1) != 0)
    {
      sub_1C077C170();
      __asm { BR              X9 }
    }
    goto LABEL_25;
  }
  while (1)
  {
    v15 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      JUMPOUT(0x1C0A7CE2CLL);
    }
    sub_1C0A8D0AC();
    if (v9 == v10)
      break;
    v13 = v16 + 1;
    if (*(_QWORD *)(v19 + 8 * v15))
      goto LABEL_22;
  }
LABEL_25:
  sub_1C07892E0();
}

void sub_1C0A7CE94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  BOOL v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1C07A5194();
  if (v1 != v2)
  {
    v3 = v2;
    v4 = v1;
    sub_1C0A3C4B4();
    if (v29)
    {
      v5 = 0;
      sub_1C0A8CDE0();
      v33 = v4;
      if (!v0)
        goto LABEL_6;
LABEL_5:
      sub_1C07ABFB8();
      for (i = v6 | (v5 << 6); ; i = v19 + (v5 << 6))
      {
        v20 = *(unsigned __int8 *)(*(_QWORD *)(v4 + 48) + i);
        sub_1C0A54430(*(_QWORD *)(v3 + 40), *(unsigned __int8 *)(*(_QWORD *)(v4 + 48) + i));
        sub_1C0A8D31C();
        v23 = v21 & ~v22;
        sub_1C0A8D484();
        if ((v24 & 1) == 0)
          return;
        v34 = v5;
        if (v20)
          v25 = 0x617247746E657665;
        else
          v25 = 0x7247656C62617473;
        if (v20)
          v26 = 0xEA00000000006870;
        else
          v26 = 0xEB00000000687061;
        while (1)
        {
          v27 = *(_BYTE *)(*(_QWORD *)(v3 + 48) + v23) ? 0x617247746E657665 : 0x7247656C62617473;
          v28 = *(_BYTE *)(*(_QWORD *)(v3 + 48) + v23) ? 0xEA00000000006870 : 0xEB00000000687061;
          v29 = v27 == v25 && v28 == v26;
          if (v29)
            break;
          sub_1C07AEE00();
          v30 = sub_1C07785B0();
          sub_1C077B5B4();
          sub_1C0775844();
          if ((v30 & 1) != 0)
            goto LABEL_49;
          sub_1C0A8D084();
          if ((v31 & 1) == 0)
            return;
        }
        sub_1C07758A4();
LABEL_49:
        v4 = v33;
        v5 = v34;
        if (v0)
          goto LABEL_5;
LABEL_6:
        if (__OFADD__(v5, 1))
          break;
        sub_1C077ED38();
        if (v9 == v10)
          return;
        v5 = v8;
        if (!*(_QWORD *)(v32 + 8 * v8))
        {
          v5 = v8 + 1;
          sub_1C0A8D4B8();
          if (v9 == v10)
            return;
          sub_1C0A8D4AC();
          if (!v12)
          {
            v5 = v11 + 2;
            sub_1C0A8D4B8();
            if (v9 == v10)
              return;
            sub_1C0A8D4AC();
            if (!v14)
            {
              v5 = v13 + 3;
              sub_1C0A8D4B8();
              if (v9 == v10)
                return;
              sub_1C0A8D4AC();
              if (!v15)
              {
                sub_1C077ED38();
                if (v9 == v10)
                  return;
                if (!*(_QWORD *)(v32 + 8 * v16))
                {
                  while (1)
                  {
                    v5 = v16 + 1;
                    if (__OFADD__(v16, 1))
                      goto LABEL_54;
                    sub_1C0A8D4B8();
                    if (v9 == v10)
                      return;
                    sub_1C0A8D4AC();
                    v16 = v17 + 1;
                    if (v18)
                      goto LABEL_27;
                  }
                }
                v5 = v16;
              }
            }
          }
        }
LABEL_27:
        sub_1C0A8D614();
      }
      __break(1u);
LABEL_54:
      __break(1u);
    }
  }
}

void sub_1C0A7D0A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t j;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;

  sub_1C078C1B4();
  if (v11 != v10 && (v12 = v10, sub_1C0A3C4B4(), v35))
  {
    sub_1C0A8CDE0();
    if (!v9)
      goto LABEL_6;
LABEL_5:
    sub_1C07ABFB8();
    v41 = v15;
    for (i = v16 | (v15 << 6); ; i = v27 + (v26 << 6))
    {
      v28 = *(_QWORD *)(*(_QWORD *)(v14 + 48) + 16 * i + 8);
      sub_1C0A8D0D8();
      sub_1C077584C();
      sub_1C0789F64();
      v29 = sub_1C078C744();
      v30 = -1 << *(_BYTE *)(v12 + 32);
      v31 = v29 & ~v30;
      sub_1C0A8D55C();
      if ((v32 & 1) == 0)
        goto LABEL_44;
      v33 = *(_QWORD *)(v12 + 48);
      sub_1C0A8D68C(v33 + 16 * v31);
      v35 = v35 && v34 == v28;
      if (!v35 && (sub_1C07785B0() & 1) == 0)
      {
        v36 = ~v30;
        for (j = v31 + 1; ; j = v38 + 1)
        {
          v38 = j & v36;
          if (((*(_QWORD *)(v12 + 56 + (((j & (unint64_t)v36) >> 3) & 0xFFFFFFFFFFFFF8)) >> (j & v36)) & 1) == 0)
            break;
          sub_1C0A8D68C(v33 + 16 * v38);
          v40 = v35 && v39 == v28;
          if (v40 || (sub_1C07785B0() & 1) != 0)
            goto LABEL_33;
        }
LABEL_44:
        sub_1C0778580();
        goto LABEL_45;
      }
LABEL_33:
      sub_1C0778580();
      v13 = v41;
      if (v9)
        goto LABEL_5;
LABEL_6:
      if (__OFADD__(v13, 1))
      {
        __break(1u);
        goto LABEL_47;
      }
      sub_1C077ED38();
      if (v18 == v19)
        goto LABEL_45;
      sub_1C0A8D2A4();
      if (!v20)
      {
        sub_1C0780770();
        if (v18 == v19)
          goto LABEL_45;
        if (!*(_QWORD *)(a9 + 8 * v21))
        {
          sub_1C0780770();
          if (v18 == v19)
            goto LABEL_45;
          if (!*(_QWORD *)(a9 + 8 * v22))
          {
            sub_1C0780770();
            if (v18 == v19)
              goto LABEL_45;
            if (!*(_QWORD *)(a9 + 8 * v23))
            {
              sub_1C077ED38();
              if (v18 == v19)
                goto LABEL_45;
              if (!*(_QWORD *)(a9 + 8 * v24))
                break;
            }
          }
        }
      }
LABEL_26:
      sub_1C0A8D614();
      v41 = v26;
    }
    while (!__OFADD__(v24, 1))
    {
      sub_1C0780770();
      if (v18 == v19)
        goto LABEL_45;
      sub_1C0A8D454();
      if (v25)
        goto LABEL_26;
    }
LABEL_47:
    __break(1u);
  }
  else
  {
LABEL_45:
    sub_1C078C198();
  }
}

void sub_1C0A7D28C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  BOOL v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;

  sub_1C0A8CE84();
  sub_1C077C0B8();
  sub_1C0789F64();
  v8 = sub_1C077AE74();
  v9 = -1 << *(_BYTE *)(v5 + 32);
  v10 = v8 & ~v9;
  sub_1C0789F50();
  if ((v11 & 1) == 0)
  {
LABEL_16:
    sub_1C077589C();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v22 = *v4;
    *v4 = 0x8000000000000000;
    sub_1C077584C();
    sub_1C0A83E2C(a2, a3, v10, isUniquelyReferenced_nonNull_native);
    sub_1C0A8D670(v22);
    *v3 = a2;
    v3[1] = a3;
    goto LABEL_17;
  }
  v12 = *(_QWORD *)(v5 + 48);
  sub_1C0A8D68C(v12 + 16 * v10);
  v14 = v14 && v13 == a3;
  if (!v14 && (sub_1C07785B0() & 1) == 0)
  {
    v17 = ~v9;
    do
    {
      v10 = (v10 + 1) & v17;
      sub_1C0789F50();
      if ((v18 & 1) == 0)
        goto LABEL_16;
      sub_1C0A8D68C(v12 + 16 * v10);
      v20 = v14 && v19 == a3;
    }
    while (!v20 && (sub_1C07785B0() & 1) == 0);
  }
  sub_1C0778580();
  sub_1C077589C();
  v15 = (uint64_t *)(*(_QWORD *)(*v4 + 48) + 16 * v10);
  v16 = v15[1];
  *v3 = *v15;
  v3[1] = v16;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
LABEL_17:
  sub_1C07A3790();
}

ValueMetadata *type metadata accessor for Grader()
{
  return &type metadata for Grader;
}

void sub_1C0A7D3D4()
{
  char v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;

  sub_1C0779670();
  sub_1C07B8A78();
  sub_1C106EB24();
  sub_1C0785044();
  MEMORY[0x1E0C80A78](v1);
  sub_1C07965BC();
  sub_1C0794BAC(&qword_1ED761910, v2, MEMORY[0x1E0D3D468]);
  sub_1C07B973C();
  sub_1C078B008();
  sub_1C07A6CBC();
  if ((v4 & 1) != 0)
  {
    sub_1C07B417C(v3);
    while (1)
    {
      sub_1C07ADD88(v5);
      sub_1C0794BAC(qword_1ED75EA50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D450], MEMORY[0x1E0D3D478]);
      sub_1C07A47C0();
      sub_1C0787E30();
      if ((v0 & 1) != 0)
        break;
      v5 = sub_1C0798ABC();
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_1C07AB57C();
        goto LABEL_7;
      }
    }
    sub_1C077E584();
    sub_1C078D634(v10);
    sub_1C079E524();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1C077E418();
LABEL_7:
    sub_1C07AC134();
    sub_1C079737C();
    v7 = sub_1C078F600();
    sub_1C0A83FC4(v7, v8, v9);
    sub_1C07A5E44();
    sub_1C07A5410();
  }
  sub_1C0776760();
}

void sub_1C0A7D4C4()
{
  char v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  sub_1C0779670();
  sub_1C07B8A78();
  sub_1C106E590();
  sub_1C0785044();
  MEMORY[0x1E0C80A78](v1);
  sub_1C07965BC();
  sub_1C0794BAC((unint64_t *)&qword_1ED7618F0, v2, MEMORY[0x1E0D3CE40]);
  sub_1C07B973C();
  sub_1C078B008();
  sub_1C07A6CBC();
  if ((v4 & 1) != 0)
  {
    sub_1C07B417C(v3);
    while (1)
    {
      sub_1C07ADD88(v5);
      sub_1C0794BAC(&qword_1ED75EA38, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE50]);
      sub_1C07A47C0();
      sub_1C0787E30();
      if ((v0 & 1) != 0)
        break;
      v5 = sub_1C0798ABC();
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_1C07AB57C();
        goto LABEL_7;
      }
    }
    sub_1C077E584();
    sub_1C078D634(v7);
    sub_1C079E524();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1C077E418();
LABEL_7:
    sub_1C07AC134();
    sub_1C079737C();
    sub_1C078F600();
    sub_1C0A84218();
    sub_1C07A5E44();
    sub_1C07A5410();
  }
  sub_1C0776760();
}

void sub_1C0A7D5B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  char v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  char v62;
  uint64_t v63;

  sub_1C07826C4();
  a35 = v38;
  a36 = v39;
  v41 = v40;
  v43 = v42;
  sub_1C0A8D118();
  sub_1C078B7D0();
  sub_1C077AEBC();
  sub_1C0825418((uint64_t)&a10);
  v44 = sub_1C077AE74();
  v45 = -1 << *(_BYTE *)(v37 + 32);
  v46 = v44 & ~v45;
  sub_1C0789F50();
  if ((v47 & 1) == 0)
  {
LABEL_7:
    sub_1C077B5B4();
    v62 = sub_1C0781A00();
    v63 = *v36;
    *v36 = 0x8000000000000000;
    sub_1C08384CC(v41, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826EB0);
    sub_1C0A84390(v41, v46, v62);
    sub_1C07A99E0(v63);
    sub_1C07DFF44(v41, v43);
    goto LABEL_8;
  }
  v48 = *(_QWORD *)(v37 + 48);
  v49 = 3 * v46;
  sub_1C07DFF44(v48 + 48 * v46, (uint64_t)&a10);
  sub_1C0824F64((uint64_t)&a10);
  if ((v50 & 1) == 0)
  {
    v51 = ~v45;
    do
    {
      v46 = (v46 + 1) & v51;
      sub_1C0789F50();
      if ((v52 & 1) == 0)
        goto LABEL_7;
      v49 = 3 * v46;
      sub_1C07DFF44(v48 + 48 * v46, (uint64_t)&a19);
      sub_1C0824F64((uint64_t)&a19);
    }
    while ((v53 & 1) == 0);
  }
  sub_1C077B5B4();
  sub_1C08384CC(v41, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
  sub_1C0A8D584();
  v55 = v54 + 16 * v49;
  v56 = *(_QWORD *)v55;
  v57 = *(_QWORD *)(v55 + 8);
  v58 = *(_QWORD *)(v55 + 16);
  v59 = *(_QWORD *)(v55 + 24);
  v60 = *(_QWORD *)(v55 + 32);
  v61 = *(_BYTE *)(v55 + 40);
  *(_QWORD *)v43 = *(_QWORD *)v55;
  *(_QWORD *)(v43 + 8) = v57;
  *(_QWORD *)(v43 + 16) = v58;
  *(_QWORD *)(v43 + 24) = v59;
  *(_QWORD *)(v43 + 32) = v60;
  *(_BYTE *)(v43 + 40) = v61;
  sub_1C0826EB0(v56, v57, v58, v59, v60, v61);
LABEL_8:
  sub_1C0791C70();
}

void sub_1C0A7D710()
{
  char v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;

  sub_1C0779670();
  sub_1C07B8A78();
  sub_1C106D6FC();
  sub_1C0785044();
  MEMORY[0x1E0C80A78](v1);
  sub_1C07965BC();
  sub_1C0794BAC((unint64_t *)&qword_1ED747AA0, v2, MEMORY[0x1E0D3C198]);
  sub_1C07B973C();
  sub_1C078B008();
  sub_1C07A6CBC();
  if ((v4 & 1) != 0)
  {
    sub_1C07B417C(v3);
    while (1)
    {
      sub_1C07ADD88(v5);
      sub_1C0794BAC(&qword_1EF62FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C188], MEMORY[0x1E0D3C1A0]);
      sub_1C07A47C0();
      sub_1C0787E30();
      if ((v0 & 1) != 0)
        break;
      v5 = sub_1C0798ABC();
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_1C07AB57C();
        goto LABEL_7;
      }
    }
    sub_1C077E584();
    sub_1C078D634(v10);
    sub_1C079E524();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1C077E418();
LABEL_7:
    sub_1C07AC134();
    sub_1C079737C();
    v7 = sub_1C078F600();
    sub_1C0A84534(v7, v8, v9);
    sub_1C07A5E44();
    sub_1C07A5410();
  }
  sub_1C0776760();
}

#error "1C0A7DA20: call analysis failed (funcsize=48)"

uint64_t sub_1C0A7DA68()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1C0A8D1D4();
  v13 = v1;
  v14 = v2;
  v4 = v3;
  v6 = v5;
  v11 = v7;
  v8 = *v0;
  sub_1C1070DF8();
  sub_1C0778624();
  sub_1C0848E74((uint64_t)&v12, v6, v4);
  v9 = sub_1C1070E4C() & ~(-1 << *(_BYTE *)(v8 + 32));
  if (((*(_QWORD *)(v8 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0)
    __asm { BR              X9 }
  sub_1C0775834();
  sub_1C078DAB4();
  v12 = *v0;
  sub_1C0A8D65C();
  sub_1C084BCD4(v6, v4);
  sub_1C0A84CB4(v6, v4, v9);
  sub_1C07A2228(v12);
  *(_QWORD *)v11 = v6;
  *(_BYTE *)(v11 + 8) = v4;
  return 1;
}

void sub_1C0A7E0C4()
{
  char v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  sub_1C0779670();
  sub_1C07B8A78();
  sub_1C106E41C();
  sub_1C0785044();
  MEMORY[0x1E0C80A78](v1);
  sub_1C07965BC();
  sub_1C0794BAC(&qword_1ED75EA28, v2, MEMORY[0x1E0D3CC68]);
  sub_1C07B973C();
  sub_1C078B008();
  sub_1C07A6CBC();
  if ((v4 & 1) != 0)
  {
    sub_1C07B417C(v3);
    while (1)
    {
      sub_1C07ADD88(v5);
      sub_1C0794BAC((unint64_t *)&qword_1ED75EA30, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC78]);
      sub_1C07A47C0();
      sub_1C0787E30();
      if ((v0 & 1) != 0)
        break;
      v5 = sub_1C0798ABC();
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_1C07AB57C();
        goto LABEL_7;
      }
    }
    sub_1C077E584();
    sub_1C078D634(v7);
    sub_1C079E524();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1C077E418();
LABEL_7:
    sub_1C07AC134();
    sub_1C079737C();
    sub_1C078F600();
    sub_1C0A85364();
    sub_1C07A5E44();
    sub_1C07A5410();
  }
  sub_1C0776760();
}

#error "1C0A7E404: call analysis failed (funcsize=60)"

uint64_t sub_1C0A7E448(_DWORD *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t result;
  char v13;
  uint64_t v14;

  v5 = *v2;
  MEMORY[0x1C3BA7700](*(_QWORD *)(v5 + 40), a2, 4);
  sub_1C0A8D294();
  v8 = v6 & ~v7;
  sub_1C0A8CFC4();
  if ((v9 & 1) == 0)
  {
LABEL_6:
    sub_1C0781A00();
    sub_1C07B00CC();
    sub_1C0A85868(a2, v8, v13);
    sub_1C07A99E0(v14);
    result = 1;
    goto LABEL_7;
  }
  if (*(_DWORD *)(*(_QWORD *)(v5 + 48) + 4 * v8) != (_DWORD)a2)
  {
    do
    {
      sub_1C0A8CE20();
      if ((v11 & 1) == 0)
        goto LABEL_6;
    }
    while (*(_DWORD *)(v10 + 4 * v8) != (_DWORD)a2);
  }
  result = 0;
LABEL_7:
  *a1 = a2;
  return result;
}

void sub_1C0A7E500()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  BOOL v19;
  char v20;
  char v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(_QWORD);
  uint64_t v41;
  uint64_t v42;
  char *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  sub_1C0779670();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v49 = (int *)type metadata accessor for LiveGlobalKnowledgeTriple();
  v6 = *((_QWORD *)v49 - 1);
  MEMORY[0x1E0C80A78](v49);
  sub_1C077AF80();
  v9 = v7 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v43 - v11;
  v13 = *v1;
  sub_1C1070DF8();
  sub_1C077584C();
  v50 = v3;
  LiveGlobalKnowledgeTriple.hash(into:)();
  sub_1C1070E4C();
  v14 = v13;
  sub_1C07B4824();
  v17 = v16 & ~v15;
  v48 = v13 + 56;
  if (((*(_QWORD *)(v13 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) != 0)
  {
    v43 = v12;
    v44 = v1;
    v45 = v5;
    v46 = ~v15;
    v47 = *(_QWORD *)(v6 + 72);
    while (1)
    {
      v18 = v47 * v17;
      sub_1C0A8CF64(*(_QWORD *)(v14 + 48) + v47 * v17, v9);
      if ((sub_1C106E560() & 1) != 0)
      {
        sub_1C0779688();
        sub_1C0794BAC(&qword_1ED75E7E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC80]);
        sub_1C07BABAC();
        sub_1C07BABAC();
        v19 = v53 == v51 && v54 == v52;
        if (v19)
        {
          sub_1C0782990();
        }
        else
        {
          v20 = sub_1C07785B0();
          sub_1C077960C();
          sub_1C0778580();
          if ((v20 & 1) == 0)
            goto LABEL_33;
        }
        if ((sub_1C106EB00() & 1) != 0)
        {
          sub_1C07BABAC();
          sub_1C07BABAC();
          if (v53 == v51 && v54 == v52)
          {
            sub_1C07758A4();
          }
          else
          {
            v22 = sub_1C07785B0();
            sub_1C07767AC();
            sub_1C077960C();
            if ((v22 & 1) == 0)
              goto LABEL_33;
          }
          sub_1C07B1CE0();
          v25 = v19 && v23 == v24;
          if ((v25 || (sub_1C07785B0() & 1) != 0)
            && *(_QWORD *)(v9 + v49[9]) == *(_QWORD *)(v50 + v49[9])
            && *(_QWORD *)(v9 + v49[10]) == *(_QWORD *)(v50 + v49[10]))
          {
            v26 = v49[11];
            v27 = *(_QWORD *)(v9 + v26);
            v28 = *(_QWORD *)(v50 + v26);
            v29 = *(_QWORD *)(v27 + 16);
            if (v29 == *(_QWORD *)(v28 + 16))
            {
              if (!v29 || v27 == v28)
              {
LABEL_38:
                sub_1C078BA28(v9);
                sub_1C077960C();
                sub_1C078BA28(v50);
                sub_1C0A8D2D8();
                sub_1C0A8CF64(v41 + v18, v42);
                goto LABEL_37;
              }
              v30 = (uint64_t *)(v27 + 32);
              v31 = (uint64_t *)(v28 + 32);
              while (1)
              {
                v33 = *v30++;
                v32 = v33;
                v34 = *v31++;
                if (v32 != v34)
                  break;
                if (!--v29)
                  goto LABEL_38;
              }
            }
          }
        }
      }
LABEL_33:
      sub_1C07B2018(v9, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
      v17 = (v17 + 1) & v46;
      if (((*(_QWORD *)(v48 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
      {
        sub_1C077960C();
        v1 = v44;
        v12 = v43;
        goto LABEL_36;
      }
    }
  }
  sub_1C077960C();
LABEL_36:
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1C0A8CC94(v50, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
  v53 = *v1;
  *v1 = 0x8000000000000000;
  v36 = sub_1C078C6DC();
  sub_1C0A8598C(v36, v37, isUniquelyReferenced_nonNull_native);
  *v1 = v53;
  swift_bridgeObjectRelease();
  sub_1C07AEE00();
  sub_1C0A8CCC8(v38, v39, v40);
LABEL_37:
  sub_1C0776760();
}

void sub_1C0A7E8B8()
{
  char v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;

  sub_1C0779670();
  sub_1C07B8A78();
  sub_1C106AFCC();
  sub_1C0785044();
  MEMORY[0x1E0C80A78](v1);
  sub_1C07965BC();
  sub_1C0794BAC(&qword_1ED759DF8, v2, MEMORY[0x1E0CB11D0]);
  sub_1C07B973C();
  sub_1C078B008();
  sub_1C07A6CBC();
  if ((v4 & 1) != 0)
  {
    sub_1C07B417C(v3);
    while (1)
    {
      sub_1C07ADD88(v5);
      sub_1C0794BAC((unint64_t *)&unk_1ED759E00, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], MEMORY[0x1E0CB11D8]);
      sub_1C07A47C0();
      sub_1C0787E30();
      if ((v0 & 1) != 0)
        break;
      v5 = sub_1C0798ABC();
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_1C07AB57C();
        goto LABEL_7;
      }
    }
    sub_1C077E584();
    sub_1C078D634(v10);
    sub_1C079E524();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1C077E418();
LABEL_7:
    sub_1C07AC134();
    sub_1C079737C();
    v7 = sub_1C078F600();
    sub_1C0A85DB8(v7, v8, v9);
    sub_1C07A5E44();
    sub_1C07A5410();
  }
  sub_1C0776760();
}

uint64_t sub_1C0A7E9A8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  float v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  float v20;
  BOOL v21;
  BOOL v22;
  BOOL v23;
  uint64_t v25;
  char v26;
  __int128 v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  int v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_1C0A8D118();
  sub_1C1070DF8();
  sub_1C077AEBC();
  VisualEntity.hash(into:)();
  sub_1C1070E4C();
  sub_1C0A8CFD8();
  v45 = v7;
  v39 = a2;
  v40 = a1;
  v38 = v2;
  if (((*(_QWORD *)(v7 + v8) >> v4) & 1) != 0)
  {
    v44 = *(_QWORD *)(v3 + 48);
    v9 = *(_QWORD *)a2;
    v10 = *(_QWORD *)(a2 + 8);
    v11 = *(_QWORD *)(a2 + 16);
    v12 = *(_QWORD *)(a2 + 24);
    v42 = *(_QWORD *)(a2 + 40);
    v43 = *(_QWORD *)(a2 + 32);
    v41 = *(unsigned __int8 *)(a2 + 48);
    v13 = *(float *)(a2 + 52);
    while (1)
    {
      v14 = v44 + 56 * v4;
      v15 = *(_QWORD *)(v14 + 16);
      v16 = *(_QWORD *)(v14 + 24);
      v17 = *(_QWORD *)(v14 + 32);
      v18 = *(_QWORD *)(v14 + 40);
      v19 = *(unsigned __int8 *)(v14 + 48);
      v20 = *(float *)(v14 + 52);
      v21 = *(_QWORD *)v14 == v9 && *(_QWORD *)(v14 + 8) == v10;
      if (v21 || (sub_1C07785B0() & 1) != 0)
      {
        v22 = v15 == v11 && v16 == v12;
        if (v22 || (sub_1C07785B0() & 1) != 0)
        {
          v23 = v17 == v43 && v18 == v42;
          if ((v23 || (sub_1C07785B0() & 1) != 0) && v19 == v41 && v20 == v13)
            break;
        }
      }
      sub_1C0A8D32C();
      if (((*(_QWORD *)(v45 + v25) >> v4) & 1) == 0)
        goto LABEL_23;
    }
    swift_bridgeObjectRelease();
    sub_1C0A8CD44(v39);
    sub_1C0A8D2D8();
    v30 = v29 + 56 * v4;
    v31 = *(_QWORD *)(v30 + 8);
    v32 = *(_QWORD *)(v30 + 16);
    v33 = *(_QWORD *)(v30 + 24);
    v34 = *(_QWORD *)(v30 + 32);
    v35 = *(_QWORD *)(v30 + 40);
    v36 = *(_BYTE *)(v30 + 48);
    v37 = *(_DWORD *)(v30 + 52);
    *(_QWORD *)v40 = *(_QWORD *)v30;
    *(_QWORD *)(v40 + 8) = v31;
    *(_QWORD *)(v40 + 16) = v32;
    *(_QWORD *)(v40 + 24) = v33;
    *(_QWORD *)(v40 + 32) = v34;
    *(_QWORD *)(v40 + 40) = v35;
    *(_BYTE *)(v40 + 48) = v36;
    *(_DWORD *)(v40 + 52) = v37;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C07767B4();
    sub_1C077AE90();
    return 0;
  }
  else
  {
LABEL_23:
    swift_bridgeObjectRelease();
    v26 = sub_1C0781A00();
    v46 = *v38;
    *v38 = 0x8000000000000000;
    sub_1C0A8CCFC(v39);
    sub_1C0A8600C(v39, v4, v26);
    sub_1C07A99E0(v46);
    v27 = *(_OWORD *)(v39 + 16);
    *(_OWORD *)v40 = *(_OWORD *)v39;
    *(_OWORD *)(v40 + 16) = v27;
    *(_OWORD *)(v40 + 32) = *(_OWORD *)(v39 + 32);
    *(_QWORD *)(v40 + 48) = *(_QWORD *)(v39 + 48);
    return 1;
  }
}

void sub_1C0A7EBFC()
{
  char v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;

  sub_1C0779670();
  sub_1C07B8A78();
  sub_1C106ADE0();
  sub_1C0785044();
  MEMORY[0x1E0C80A78](v1);
  sub_1C07965BC();
  sub_1C0794BAC(&qword_1EF6331E8, v2, MEMORY[0x1E0CB08A8]);
  sub_1C07B973C();
  sub_1C078B008();
  sub_1C07A6CBC();
  if ((v4 & 1) != 0)
  {
    sub_1C07B417C(v3);
    while (1)
    {
      sub_1C07ADD88(v5);
      sub_1C0794BAC((unint64_t *)&qword_1EF631F80, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
      sub_1C07A47C0();
      sub_1C0787E30();
      if ((v0 & 1) != 0)
        break;
      v5 = sub_1C0798ABC();
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_1C07AB57C();
        goto LABEL_7;
      }
    }
    sub_1C077E584();
    sub_1C078D634(v10);
    sub_1C079E524();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1C077E418();
LABEL_7:
    sub_1C07AC134();
    sub_1C079737C();
    v7 = sub_1C078F600();
    sub_1C0A86260(v7, v8, v9);
    sub_1C07A5E44();
    sub_1C07A5410();
  }
  sub_1C0776760();
}

uint64_t sub_1C0A7ECEC(uint64_t *a1, uint64_t a2)
{
  return sub_1C07AE694(a1, a2);
}

void sub_1C0A7ED00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1C0A8CE84();
  sub_1C1070E04();
  sub_1C077C0B8();
  sub_1C07796D8();
  sub_1C106FC28();
  sub_1C0775844();
  v10 = sub_1C077AE74() & ~(-1 << *(_BYTE *)(v6 + 32));
  sub_1C0A8D484();
  if ((v11 & 1) != 0)
  {
    v12 = *(_QWORD *)(v6 + 48);
    while (1)
    {
      v13 = (_QWORD *)(v12 + 24 * v10);
      if (*v13 == a2)
      {
        v14 = v13[1] == a3 && v13[2] == a4;
        if (v14 || (sub_1C07785B0() & 1) != 0)
          break;
      }
      sub_1C0A8D084();
      if ((v15 & 1) == 0)
        goto LABEL_10;
    }
    sub_1C0775844();
    sub_1C077589C();
    sub_1C0A8D584();
    v18 = v17 + 24 * v10;
    v19 = *(_QWORD *)(v18 + 16);
    *(_OWORD *)v4 = *(_OWORD *)v18;
    *(_QWORD *)(v4 + 16) = v19;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  else
  {
LABEL_10:
    sub_1C077589C();
    v16 = sub_1C0781A00();
    v20 = *v5;
    *v5 = 0x8000000000000000;
    sub_1C07796D8();
    sub_1C0A864B4(a2, a3, a4, v10, v16);
    sub_1C07A99E0(v20);
    *(_QWORD *)v4 = a2;
    *(_QWORD *)(v4 + 8) = a3;
    *(_QWORD *)(v4 + 16) = a4;
  }
  sub_1C07A3790();
}

void sub_1C0A7EE54(unsigned __int8 *a1, unsigned __int8 a2)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v20;

  sub_1C0A8D118();
  sub_1C1070DF8();
  sub_1C07B3100(a2);
  sub_1C077EED8();
  sub_1C0A8D154();
  sub_1C0775834();
  sub_1C1070E4C();
  sub_1C07AD1F4();
  if ((v5 & 1) != 0)
    __asm { BR              X9 }
  sub_1C077B5B4();
  sub_1C078DAB4();
  v20 = *v18;
  sub_1C0A8D65C();
  v14 = sub_1C0A8D1F0(v6, v7, v8, v9, v10, v11, v12, v13, v17);
  sub_1C0A86664(v14, v15, v16);
  sub_1C07A2228(v20);
  *a1 = a2;
  sub_1C07892E0();
}

void sub_1C0A7F0F8()
{
  char v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;

  sub_1C0779670();
  sub_1C07B8A78();
  sub_1C106D6CC();
  sub_1C0785044();
  MEMORY[0x1E0C80A78](v1);
  sub_1C07965BC();
  sub_1C0794BAC((unint64_t *)&qword_1ED744A48, v2, MEMORY[0x1E0D3C148]);
  sub_1C07B973C();
  sub_1C078B008();
  sub_1C07A6CBC();
  if ((v4 & 1) != 0)
  {
    sub_1C07B417C(v3);
    while (1)
    {
      sub_1C07ADD88(v5);
      sub_1C0794BAC(qword_1ED744A50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C130], MEMORY[0x1E0D3C150]);
      sub_1C07A47C0();
      sub_1C0787E30();
      if ((v0 & 1) != 0)
        break;
      v5 = sub_1C0798ABC();
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_1C07AB57C();
        goto LABEL_7;
      }
    }
    sub_1C077E584();
    sub_1C078D634(v10);
    sub_1C079E524();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1C077E418();
LABEL_7:
    sub_1C07AC134();
    sub_1C079737C();
    v7 = sub_1C078F600();
    sub_1C0A86A7C(v7, v8, v9);
    sub_1C07A5E44();
    sub_1C07A5410();
  }
  sub_1C0776760();
}

uint64_t sub_1C0A7F1E8(_QWORD *a1, void *a2)
{
  return sub_1C0A7FA48(a1, a2, (uint64_t)&qword_1ED7447C0, 0x1E0D3DFA8, (uint64_t)&unk_1EF639F80);
}

void sub_1C0A7F204()
{
  char v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;

  sub_1C0779670();
  sub_1C07B8A78();
  sub_1C106E4AC();
  sub_1C0785044();
  MEMORY[0x1E0C80A78](v1);
  sub_1C07965BC();
  sub_1C0794BAC((unint64_t *)&qword_1ED7531C0, v2, MEMORY[0x1E0D3CD58]);
  sub_1C07B973C();
  sub_1C078B008();
  sub_1C07A6CBC();
  if ((v4 & 1) != 0)
  {
    sub_1C07B417C(v3);
    while (1)
    {
      sub_1C07ADD88(v5);
      sub_1C0794BAC(qword_1ED753180, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CD48], MEMORY[0x1E0D3CD60]);
      sub_1C07A47C0();
      sub_1C0787E30();
      if ((v0 & 1) != 0)
        break;
      v5 = sub_1C0798ABC();
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_1C07AB57C();
        goto LABEL_7;
      }
    }
    sub_1C077E584();
    sub_1C078D634(v10);
    sub_1C079E524();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1C077E418();
LABEL_7:
    sub_1C07AC134();
    sub_1C079737C();
    v7 = sub_1C078F600();
    sub_1C0A86CD0(v7, v8, v9);
    sub_1C07A5E44();
    sub_1C07A5410();
  }
  sub_1C0776760();
}

void sub_1C0A7F2F4()
{
  char v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;

  sub_1C0779670();
  sub_1C07B8A78();
  sub_1C106F25C();
  sub_1C0785044();
  MEMORY[0x1E0C80A78](v1);
  sub_1C07965BC();
  sub_1C0794BAC(&qword_1EF639F68, v2, MEMORY[0x1E0D3DE68]);
  sub_1C07B973C();
  sub_1C078B008();
  sub_1C07A6CBC();
  if ((v4 & 1) != 0)
  {
    sub_1C07B417C(v3);
    while (1)
    {
      sub_1C07ADD88(v5);
      sub_1C0794BAC(&qword_1EF639F70, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3DE58], MEMORY[0x1E0D3DE70]);
      sub_1C07A47C0();
      sub_1C0787E30();
      if ((v0 & 1) != 0)
        break;
      v5 = sub_1C0798ABC();
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_1C07AB57C();
        goto LABEL_7;
      }
    }
    sub_1C077E584();
    sub_1C078D634(v10);
    sub_1C079E524();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1C077E418();
LABEL_7:
    sub_1C07AC134();
    sub_1C079737C();
    v7 = sub_1C078F600();
    sub_1C0A86F24(v7, v8, v9);
    sub_1C07A5E44();
    sub_1C07A5410();
  }
  sub_1C0776760();
}

uint64_t sub_1C0A7F3E4(_OWORD *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  BOOL v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char isUniquelyReferenced_nonNull_native;
  __int128 v35;
  __int128 v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE v48[40];

  v3 = v2;
  v6 = *v2;
  sub_1C1070DF8();
  sub_1C07767B4();
  sub_1C0C92E80();
  sub_1C1070E4C();
  sub_1C0A8D31C();
  v9 = v8 & ~v7;
  v10 = v6 + 56;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0)
  {
    v37 = v3;
    v41 = ~v7;
    v42 = *(_QWORD *)(v6 + 48);
    v39 = a1;
    v40 = a2 + 32;
    v11 = *(_QWORD *)a2;
    v12 = *(_QWORD *)(a2 + 8);
    v38 = a2;
    while (1)
    {
      v13 = (_QWORD *)(v42 + (v9 << 6));
      v15 = v13[4];
      v14 = v13[5];
      v16 = v13[6];
      v17 = v13[7];
      if (*v13 == v11 && v13[1] == v12)
      {
        v19 = 1;
        if (!v14)
          goto LABEL_23;
      }
      else
      {
        v19 = sub_1C07785B0();
        if (!v14)
          goto LABEL_23;
      }
      sub_1C0A8C9A4(v40, (uint64_t)v48);
      sub_1C0A8C9A4((uint64_t)v48, (uint64_t)&v44);
      if (!v45)
      {
LABEL_23:
        if ((v19 & 1) != 0)
          goto LABEL_26;
        goto LABEL_24;
      }
      if ((v19 & 1) != 0
        || ((v20 = v46, v21 = v47, v15 == v44) ? (v22 = v14 == v45) : (v22 = 0),
            (v22 || (sub_1C07785B0() & 1) != 0)
         && (v16 == v20 ? (v23 = v17 == v21) : (v23 = 0), v23 || (sub_1C07785B0() & 1) != 0)))
      {
LABEL_26:
        swift_bridgeObjectRelease();
        sub_1C0A8C944(v38);
        sub_1C0A8D2D8();
        v25 = (_QWORD *)(v24 + (v9 << 6));
        v26 = v25[1];
        v27 = v25[2];
        v28 = v25[3];
        v29 = v25[4];
        v30 = v25[5];
        v31 = v25[6];
        v32 = v25[7];
        *v39 = *v25;
        v39[1] = v26;
        v39[2] = v27;
        v39[3] = v28;
        v39[4] = v29;
        v39[5] = v30;
        v39[6] = v31;
        v39[7] = v32;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        sub_1C07767B4();
        sub_1C080E9A0(v29, v30);
        return 0;
      }
LABEL_24:
      v9 = (v9 + 1) & v41;
      if (((*(_QWORD *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        a2 = v38;
        a1 = v39;
        v3 = v37;
        goto LABEL_28;
      }
    }
  }
  sub_1C07767AC();
LABEL_28:
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v43 = *v3;
  *v3 = 0x8000000000000000;
  sub_1C0A8C8E4(a2);
  sub_1C0A87178(a2, v9, isUniquelyReferenced_nonNull_native);
  *v3 = v43;
  swift_bridgeObjectRelease();
  v35 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v35;
  v36 = *(_OWORD *)(a2 + 48);
  a1[2] = *(_OWORD *)(a2 + 32);
  a1[3] = v36;
  return 1;
}

void sub_1C0A7F648()
{
  sub_1C0A7F680();
}

void sub_1C0A7F664()
{
  sub_1C0A7F680();
}

void sub_1C0A7F680()
{
  int **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(int **);
  void (*v5)(int **);
  uint64_t (*v6)(_QWORD);
  uint64_t (*v7)(_QWORD);
  int **v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  char v25;
  int *v26;
  char v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[2];
  int **v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int *v48;
  int *v49;
  int *v50;
  int *v51;

  sub_1C0779670();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = v0;
  v10 = v9;
  v42 = v11;
  v43 = sub_1C0A8D38C(v11, v9, v6);
  v12 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  sub_1C077AF80();
  v15 = v13 - v14;
  MEMORY[0x1E0C80A78](v16);
  v41 = (char *)v39 - v17;
  v18 = *v8;
  sub_1C1070DF8();
  sub_1C077AEBC();
  v19 = v10;
  v5(&v50);
  sub_1C1070E4C();
  sub_1C0A8CFD8();
  v47 = v21;
  if (((*(_QWORD *)(v21 + v22) >> v1) & 1) != 0)
  {
    v39[0] = v5;
    v39[1] = v3;
    v40 = v8;
    v45 = ~v20;
    v46 = *(_QWORD *)(v12 + 72);
    while (1)
    {
      v23 = *((_QWORD *)v18 + 6);
      v44 = v46 * v1;
      sub_1C0A8CF64(v23 + v46 * v1, v15);
      sub_1C078C6DC();
      if ((sub_1C106E560() & 1) != 0)
      {
        sub_1C0779688();
        sub_1C0794BAC(&qword_1ED75E7E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC80]);
        sub_1C0A8CF00();
        sub_1C0A8CF00();
        v18 = v49;
        v24 = v50 == v48 && v51 == v49;
        if (v24)
        {
          sub_1C0782990();
          sub_1C0A8D544();
        }
        else
        {
          v25 = sub_1C07785B0();
          sub_1C077960C();
          sub_1C077B5B4();
          sub_1C0A8D544();
          if ((v25 & 1) == 0)
            goto LABEL_32;
        }
        if ((sub_1C106EB00() & 1) != 0)
        {
          sub_1C0A8CF00();
          sub_1C0A8CF00();
          v26 = v51;
          v18 = v49;
          if (v50 == v48 && v51 == v49)
          {
            sub_1C0782990();
            sub_1C0A8D544();
          }
          else
          {
            v28 = sub_1C07785B0();
            sub_1C077960C();
            sub_1C077B5B4();
            sub_1C0A8D544();
            if ((v28 & 1) == 0)
              goto LABEL_32;
          }
          sub_1C07B1CE0();
          v31 = v24 && v29 == v30;
          if ((v31 || (sub_1C07785B0() & 1) != 0)
            && *(_QWORD *)(v15 + v26[9]) == *(_QWORD *)(v19 + v26[9])
            && *(double *)(v15 + v26[10]) == *(double *)(v19 + v26[10]))
          {
            sub_1C07B1CE0();
            v34 = v24 && v32 == v33;
            if ((v34 || (sub_1C07785B0() & 1) != 0) && *(double *)(v15 + v26[12]) == *(double *)(v19 + v26[12]))
            {
              sub_1C0A8D5F8(v15);
              sub_1C077B5B4();
              sub_1C0A8D5F8(v19);
              sub_1C0A8D2D8();
              sub_1C0A8CC94(v38 + v44, v42, v7);
              goto LABEL_36;
            }
          }
        }
      }
LABEL_32:
      sub_1C0A8D5F8(v15);
      sub_1C0A8D32C();
      if (((*(_QWORD *)(v47 + v35) >> v1) & 1) == 0)
      {
        sub_1C077B5B4();
        v37 = (uint64_t)v41;
        v36 = v42;
        v8 = v40;
        goto LABEL_35;
      }
    }
  }
  sub_1C077B5B4();
  v37 = (uint64_t)v41;
  v36 = v42;
LABEL_35:
  swift_isUniquelyReferenced_nonNull_native();
  sub_1C0A8CF64(v19, v37);
  v50 = *v8;
  *v8 = (int *)0x8000000000000000;
  sub_1C0A873A8();
  *v8 = v50;
  swift_bridgeObjectRelease();
  sub_1C0A8D17C(v19, v36);
LABEL_36:
  sub_1C0776760();
}

void sub_1C0A7F9F4()
{
  sub_1C0A7F680();
}

void sub_1C0A7FA10()
{
  sub_1C0A7F680();
}

uint64_t sub_1C0A7FA2C(_QWORD *a1, void *a2)
{
  return sub_1C0A7FA48(a1, a2, (uint64_t)&qword_1ED762C00, 0x1E0CB37E8, (uint64_t)&unk_1ED74D400);
}

uint64_t sub_1C0A7FA48(_QWORD *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v9;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  id v20;
  char v21;
  uint64_t v22;
  char v23;
  id v24;
  char v25;
  void *v26;
  id v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v9 = v5;
  v12 = *v5;
  if ((*v5 & 0xC000000000000001) != 0)
  {
    if (v12 < 0)
      v13 = *v5;
    else
      v13 = v12 & 0xFFFFFFFFFFFFFF8;
    sub_1C077C0B8();
    v14 = a2;
    v15 = sub_1C10706A8();

    if (v15)
    {
      sub_1C077589C();

      sub_1C0A8D37C();
      swift_unknownObjectRetain();
      sub_1C077D040();
      *a1 = v41;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1C107069C();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    sub_1C0A80018(v13, result + 1, a5, a3, a4, v29, v30, v31, v37, v38, v39);
    v42 = v32;
    if (*(_QWORD *)(v32 + 24) <= *(_QWORD *)(v32 + 16))
    {
      v36 = v14;
      sub_1C0A8373C();
      v33 = v42;
    }
    else
    {
      v33 = v32;
      v34 = v14;
    }
    sub_1C0A83DBC((uint64_t)v14, v33);
    *v9 = v33;
    swift_bridgeObjectRelease();
    *a1 = v14;
  }
  else
  {
    sub_1C077C0B8();
    v16 = sub_1C1070510();
    v17 = -1 << *(_BYTE *)(v12 + 32);
    v18 = v16 & ~v17;
    sub_1C0A8D700();
    if ((v19 & 1) != 0)
    {
      sub_1C0A8D37C();
      v20 = sub_1C0A8D5D8();
      v21 = sub_1C107051C();

      if ((v21 & 1) != 0)
      {
LABEL_12:

        sub_1C077589C();
        v26 = *(void **)(*(_QWORD *)(*v5 + 48) + 8 * v18);
        *a1 = v26;
        v27 = v26;
        return 0;
      }
      v22 = ~v17;
      while (1)
      {
        v18 = (v18 + 1) & v22;
        sub_1C0A8D700();
        if ((v23 & 1) == 0)
          break;
        v24 = sub_1C0A8D5D8();
        v25 = sub_1C107051C();

        if ((v25 & 1) != 0)
          goto LABEL_12;
      }
    }
    sub_1C077589C();
    swift_isUniquelyReferenced_nonNull_native();
    v43 = *v5;
    *v5 = 0x8000000000000000;
    v35 = a2;
    sub_1C0A876F4();
    sub_1C0A8D670(v43);
    *a1 = v35;
  }
  return 1;
}

void sub_1C0A7FCAC()
{
  char v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;

  sub_1C0779670();
  sub_1C07B8A78();
  sub_1C106D63C();
  sub_1C0785044();
  MEMORY[0x1E0C80A78](v1);
  sub_1C07965BC();
  sub_1C0794BAC(&qword_1EF6331B0, v2, MEMORY[0x1E0D3BFE8]);
  sub_1C07B973C();
  sub_1C078B008();
  sub_1C07A6CBC();
  if ((v4 & 1) != 0)
  {
    sub_1C07B417C(v3);
    while (1)
    {
      sub_1C07ADD88(v5);
      sub_1C0794BAC(&qword_1EF639EE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3BFD8], MEMORY[0x1E0D3BFF0]);
      sub_1C07A47C0();
      sub_1C0787E30();
      if ((v0 & 1) != 0)
        break;
      v5 = sub_1C0798ABC();
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_1C07AB57C();
        goto LABEL_7;
      }
    }
    sub_1C077E584();
    sub_1C078D634(v10);
    sub_1C079E524();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1C077E418();
LABEL_7:
    sub_1C07AC134();
    sub_1C079737C();
    v7 = sub_1C078F600();
    sub_1C0A87800(v7, v8, v9);
    sub_1C07A5E44();
    sub_1C07A5410();
  }
  sub_1C0776760();
}

void sub_1C0A7FD9C(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;

  v5 = *v2;
  sub_1C078B7D0();
  sub_1C1070E04();
  v6 = sub_1C077AE74() & ~(-1 << *(_BYTE *)(v5 + 32));
  sub_1C0A8CFC4();
  if ((v7 & 1) == 0)
  {
LABEL_6:
    sub_1C0781A00();
    sub_1C07B00CC();
    sub_1C0A87A54(a2, v6, v11);
    sub_1C07A99E0(v12);
    goto LABEL_7;
  }
  if (*(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v6) != a2)
  {
    do
    {
      sub_1C0A8CE20();
      if ((v9 & 1) == 0)
        goto LABEL_6;
    }
    while (*(_QWORD *)(v8 + 8 * v6) != a2);
  }
  sub_1C0A8D584();
  a2 = *(_QWORD *)(v10 + 8 * v6);
LABEL_7:
  *a1 = a2;
  sub_1C07877C0();
}

void sub_1C0A7FE5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  BOOL v22;
  uint64_t v23;

  sub_1C07A5194();
  if (!v11)
  {
    swift_unknownObjectRelease();
    goto LABEL_18;
  }
  sub_1C07ACF80(&qword_1EF639F58);
  v23 = sub_1C0A8D6A4();
  sub_1C1070690();
  if (!sub_1C10706B4())
  {
LABEL_16:
    swift_release();
LABEL_18:
    sub_1C0781AD8();
    return;
  }
  sub_1C078D5E4();
  sub_1C106F700();
  v12 = MEMORY[0x1E0C95E18];
  while (1)
  {
    sub_1C077D040();
    v13 = v23;
    if (*(_QWORD *)(v23 + 24) <= *(_QWORD *)(v23 + 16))
    {
      sub_1C0A8282C();
      v13 = v23;
    }
    sub_1C0794BAC(&qword_1EF639F60, (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00], v12);
    v14 = sub_1C106FA00();
    v15 = -1 << *(_BYTE *)(v13 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v13 + 56 + 8 * (v16 >> 6))) == 0)
      break;
    sub_1C0A8D530();
LABEL_15:
    *(_QWORD *)(v18 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    *(_QWORD *)(*(_QWORD *)(v13 + 48) + 8 * v19) = a11;
    sub_1C07826B4();
    if (!sub_1C10706B4())
      goto LABEL_16;
  }
  v20 = 0;
  v21 = (unint64_t)(63 - v15) >> 6;
  while (++v17 != v21 || (v20 & 1) == 0)
  {
    v22 = v17 == v21;
    if (v17 == v21)
      v17 = 0;
    v20 |= v22;
    if (*(_QWORD *)(v13 + 56 + 8 * v17) != -1)
    {
      sub_1C0A8D510();
      goto LABEL_15;
    }
  }
  __break(1u);
}

void sub_1C0A80018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  sub_1C07A5194();
  if (!v12)
  {
    swift_unknownObjectRelease();
    goto LABEL_18;
  }
  sub_1C07ACF80(v11);
  v25 = sub_1C0A8D6A4();
  sub_1C1070690();
  if (!sub_1C10706B4())
  {
LABEL_16:
    sub_1C07758C4();
LABEL_18:
    sub_1C0781AD8();
    return;
  }
  sub_1C078D5E4();
  sub_1C07AEE00();
  sub_1C07D4B70(v13, v14);
  while (1)
  {
    sub_1C077D040();
    v15 = v25;
    if (*(_QWORD *)(v25 + 24) <= *(_QWORD *)(v25 + 16))
    {
      sub_1C0A8373C();
      v15 = v25;
    }
    v16 = sub_1C1070510();
    v17 = -1 << *(_BYTE *)(v15 + 32);
    v18 = v16 & ~v17;
    v19 = v18 >> 6;
    if (((-1 << v18) & ~*(_QWORD *)(v15 + 56 + 8 * (v18 >> 6))) == 0)
      break;
    sub_1C0A8D530();
LABEL_15:
    *(_QWORD *)(v20 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    *(_QWORD *)(*(_QWORD *)(v15 + 48) + 8 * v21) = a11;
    ++*(_QWORD *)(v15 + 16);
    if (!sub_1C10706B4())
      goto LABEL_16;
  }
  v22 = 0;
  v23 = (unint64_t)(63 - v17) >> 6;
  while (++v19 != v23 || (v22 & 1) == 0)
  {
    v24 = v19 == v23;
    if (v19 == v23)
      v19 = 0;
    v22 |= v24;
    if (*(_QWORD *)(v15 + 56 + 8 * v19) != -1)
    {
      sub_1C0A8D510();
      goto LABEL_15;
    }
  }
  __break(1u);
}

uint64_t sub_1C0A801B4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  sub_1C07ACF80(&qword_1ED762CE8);
  v3 = sub_1C107072C();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    if (!v7)
      goto LABEL_7;
LABEL_6:
    v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
      v18 = *v17;
      v19 = v17[1];
      sub_1C1070DF8();
      sub_1C106FC28();
      result = sub_1C1070E4C();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6))) == 0)
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v20) >> 6;
        while (++v22 != v25 || (v24 & 1) == 0)
        {
          v26 = v22 == v25;
          if (v22 == v25)
            v22 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v9 + 8 * v22);
          if (v27 != -1)
          {
            v23 = __clz(__rbit64(~v27)) + (v22 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v23);
      *v28 = v18;
      v28[1] = v19;
      ++*(_QWORD *)(v4 + 16);
      if (v7)
        goto LABEL_6;
LABEL_7:
      v14 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_38;
      if (v14 >= v8)
        goto LABEL_32;
      v15 = v30[v14];
      ++v11;
      if (!v15)
      {
        v11 = v14 + 1;
        if (v14 + 1 >= v8)
          goto LABEL_32;
        v15 = v30[v11];
        if (!v15)
        {
          v11 = v14 + 2;
          if (v14 + 2 >= v8)
            goto LABEL_32;
          v15 = v30[v11];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v8)
            {
LABEL_32:
              swift_release();
              v1 = v0;
              v29 = 1 << *(_BYTE *)(v2 + 32);
              if (v29 > 63)
                sub_1C07E7D20(0, (unint64_t)(v29 + 63) >> 6, v30);
              else
                *v30 = -1 << v29;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v15 = v30[v16];
            if (!v15)
            {
              while (1)
              {
                v11 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_39;
                if (v11 >= v8)
                  goto LABEL_32;
                v15 = v30[v11];
                ++v16;
                if (v15)
                  goto LABEL_20;
              }
            }
            v11 = v16;
          }
        }
      }
LABEL_20:
      v7 = (v15 - 1) & v15;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

void sub_1C0A8048C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  char v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  sub_1C0779670();
  v44 = v1;
  v45 = v2;
  v4 = v3;
  v5 = v0;
  v8 = sub_1C0A8D220(v6, v7);
  v43 = *(_QWORD *)(v8 - 8);
  sub_1C078C94C();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v39 - v10;
  v12 = *v0;
  sub_1C0A8D0A0();
  sub_1C07ACF80(v4);
  v13 = sub_1C07B1DAC();
  if (*(_QWORD *)(v12 + 16))
  {
    sub_1C0A8D364();
    v42 = v14;
    sub_1C0779DF0();
    v17 = v16 & v15;
    sub_1C0A4DB48();
    v40 = v0;
    v41 = v18;
    swift_retain();
    v19 = 0;
    if (!v17)
      goto LABEL_4;
LABEL_3:
    sub_1C077C3A0();
    while (1)
    {
      v25 = v12;
      v26 = *(_QWORD *)(v12 + 48);
      v27 = *(_QWORD *)(v43 + 72);
      v28 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 32);
      v28(v11, v26 + v27 * v20, v8);
      sub_1C0A8D714();
      sub_1C106FA00();
      sub_1C0776A1C();
      if (v29)
      {
        sub_1C0797B50();
        while (1)
        {
          sub_1C0793670();
          if (v29)
          {
            if ((v31 & 1) != 0)
              break;
          }
          sub_1C0A8D434();
          if (!v29)
          {
            sub_1C0791970();
            goto LABEL_26;
          }
        }
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
        return;
      }
      sub_1C0792CBC();
LABEL_26:
      sub_1C0781E18(v30);
      v28((char *)(v33 + v32 * v27), (uint64_t)v11, v8);
      sub_1C07826B4();
      v12 = v25;
      if (v17)
        goto LABEL_3;
LABEL_4:
      if (__OFADD__(v19, 1))
        goto LABEL_34;
      if (v19 + 1 >= v41)
        goto LABEL_28;
      sub_1C0A8D478();
      v19 = v21;
      if (!v22)
      {
        v19 = v21 + 1;
        if (v21 + 1 >= v41)
          goto LABEL_28;
        if (!v42[v19])
        {
          v19 = v21 + 2;
          if (v21 + 2 >= v41)
            goto LABEL_28;
          if (!v42[v19])
          {
            if (v21 + 3 >= v41)
            {
LABEL_28:
              sub_1C07814FC();
              v5 = v40;
              sub_1C077E994();
              if (v34 ^ v35 | v29)
              {
                sub_1C07B4824();
                *v42 = v36;
              }
              else
              {
                v37 = sub_1C0782DE4();
                sub_1C07E7D20(v37, v38, v42);
              }
              *(_QWORD *)(v12 + 16) = 0;
              break;
            }
            sub_1C0A8D478();
            if (!v24)
            {
              while (1)
              {
                v19 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_35;
                if (v19 >= v41)
                  goto LABEL_28;
                ++v23;
                if (v42[v19])
                  goto LABEL_17;
              }
            }
            v19 = v23;
          }
        }
      }
LABEL_17:
      sub_1C07816B8();
    }
  }
  sub_1C07814FC();
  *v5 = v13;
  sub_1C0776760();
}

uint64_t sub_1C0A806D0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t i;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  char v27[72];
  _BYTE v28[48];

  v1 = v0;
  v2 = *v0;
  sub_1C07ACF80(&qword_1EF639EE0);
  v3 = sub_1C107072C();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = swift_retain();
    v12 = 0;
    if (!v8)
      goto LABEL_7;
LABEL_6:
    v13 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    for (i = v13 | (v12 << 6); ; i = __clz(__rbit64(v16)) + (v12 << 6))
    {
      sub_1C07DFF44(*(_QWORD *)(v2 + 48) + 48 * i, (uint64_t)v28);
      sub_1C1070DF8();
      sub_1C0825418((uint64_t)v27);
      result = sub_1C1070E4C();
      v18 = -1 << *(_BYTE *)(v4 + 32);
      v19 = result & ~v18;
      v20 = v19 >> 6;
      if (((-1 << v19) & ~*(_QWORD *)(v10 + 8 * (v19 >> 6))) == 0)
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v18) >> 6;
        while (++v20 != v23 || (v22 & 1) == 0)
        {
          v24 = v20 == v23;
          if (v20 == v23)
            v20 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v10 + 8 * v20);
          if (v25 != -1)
          {
            v21 = __clz(__rbit64(~v25)) + (v20 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v21 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v10 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v10 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      result = sub_1C07DFF44((uint64_t)v28, *(_QWORD *)(v4 + 48) + 48 * v21);
      ++*(_QWORD *)(v4 + 16);
      if (v8)
        goto LABEL_6;
LABEL_7:
      v15 = v12 + 1;
      if (__OFADD__(v12, 1))
        goto LABEL_38;
      if (v15 >= v9)
        goto LABEL_32;
      v16 = v6[v15];
      ++v12;
      if (!v16)
      {
        v12 = v15 + 1;
        if (v15 + 1 >= v9)
          goto LABEL_32;
        v16 = v6[v12];
        if (!v16)
        {
          v12 = v15 + 2;
          if (v15 + 2 >= v9)
            goto LABEL_32;
          v16 = v6[v12];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= v9)
            {
LABEL_32:
              swift_release();
              v1 = v0;
              v26 = 1 << *(_BYTE *)(v2 + 32);
              if (v26 > 63)
                sub_1C07E7D20(0, (unint64_t)(v26 + 63) >> 6, (_QWORD *)(v2 + 56));
              else
                *v6 = -1 << v26;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v16 = v6[v17];
            if (!v16)
            {
              while (1)
              {
                v12 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_39;
                if (v12 >= v9)
                  goto LABEL_32;
                v16 = v6[v12];
                ++v17;
                if (v16)
                  goto LABEL_20;
              }
            }
            v12 = v17;
          }
        }
      }
LABEL_20:
      v8 = (v16 - 1) & v16;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1C0A80998()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;

  v1 = v0;
  v2 = *v0;
  sub_1C07ACF80(&qword_1ED7462E8);
  v3 = sub_1C107072C();
  if (!*(_QWORD *)(v2 + 16))
    goto LABEL_25;
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v5 = (_QWORD *)(v2 + 56);
  if (v4 < 64)
    v6 = ~(-1 << v4);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v8 = (unint64_t)(v4 + 63) >> 6;
  swift_retain();
  if (v7)
  {
    v9 = __clz(__rbit64(v7));
    goto LABEL_20;
  }
  if (v8 > 1)
  {
    v10 = *(_QWORD *)(v2 + 64);
    v11 = 1;
    if (v10)
      goto LABEL_19;
    v11 = 2;
    if (v8 > 2)
    {
      v10 = *(_QWORD *)(v2 + 72);
      if (v10)
        goto LABEL_19;
      v11 = 3;
      if (v8 > 3)
      {
        v10 = *(_QWORD *)(v2 + 80);
        if (!v10)
        {
          v12 = 4;
          if (v8 > 4)
          {
            v10 = *(_QWORD *)(v2 + 88);
            if (v10)
            {
              v11 = 4;
              goto LABEL_19;
            }
            while (1)
            {
              v11 = v12 + 1;
              if (__OFADD__(v12, 1))
              {
                __break(1u);
                JUMPOUT(0x1C0A80DE0);
              }
              if (v11 >= v8)
                break;
              v10 = v5[v11];
              ++v12;
              if (v10)
                goto LABEL_19;
            }
          }
          goto LABEL_21;
        }
LABEL_19:
        v9 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_20:
        v13 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + v9);
        sub_1C1070DF8();
        __asm { BR              X8 }
      }
    }
  }
LABEL_21:
  swift_release();
  v1 = v0;
  v14 = 1 << *(_BYTE *)(v2 + 32);
  if (v14 > 63)
    sub_1C07E7D20(0, (unint64_t)(v14 + 63) >> 6, (_QWORD *)(v2 + 56));
  else
    *v5 = -1 << v14;
  *(_QWORD *)(v2 + 16) = 0;
LABEL_25:
  result = swift_release();
  *v1 = v3;
  return result;
}

void sub_1C0A80E14()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;

  sub_1C078C1B4();
  v1 = v0;
  v2 = *v0;
  sub_1C07ACF80(&qword_1ED758E00);
  v3 = sub_1C07AB808();
  if (*(_QWORD *)(v2 + 16))
  {
    sub_1C0A8D248();
    v22 = v6;
    if (v4 < 64)
      v7 = ~(-1 << v4);
    else
      v7 = -1;
    v8 = v7 & v5;
    v9 = (unint64_t)(v4 + 63) >> 6;
    sub_1C07AD578();
    if (v8)
    {
      sub_1C07A31AC();
LABEL_20:
      v14 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + 16 * v10 + 8);
      v15 = sub_1C0A8D0D8();
      ((void (*)(uint64_t))((char *)&loc_1C0A80F50 + *((int *)qword_1C0A81210 + v14)))(v15);
      return;
    }
    if (v9 > 1)
    {
      v11 = 1;
      if (v22[1])
        goto LABEL_19;
      v11 = 2;
      if (v9 > 2)
      {
        if (v22[2])
          goto LABEL_19;
        v11 = 3;
        if (v9 > 3)
        {
          if (!v22[3])
          {
            v12 = 4;
            if (v9 > 4)
            {
              if (v22[4])
              {
                v11 = 4;
                goto LABEL_19;
              }
              while (1)
              {
                v11 = v12 + 1;
                if (__OFADD__(v12, 1))
                {
                  __break(1u);
                  JUMPOUT(0x1C0A81210);
                }
                if (v11 >= v9)
                  break;
                ++v12;
                if (v22[v11])
                  goto LABEL_19;
              }
            }
            goto LABEL_21;
          }
LABEL_19:
          sub_1C0A8D020();
          v10 = v13 + (v11 << 6);
          goto LABEL_20;
        }
      }
    }
LABEL_21:
    sub_1C07758C4();
    v1 = v0;
    sub_1C077E994();
    if (v17 ^ v18 | v16)
    {
      sub_1C07B4824();
      *v22 = v19;
    }
    else
    {
      v20 = sub_1C0782DE4();
      sub_1C07E7D20(v20, v21, v22);
    }
    *(_QWORD *)(v2 + 16) = 0;
  }
  sub_1C07758C4();
  *v1 = v3;
  sub_1C078C198();
}

void sub_1C0A812B8()
{
  sub_1C0A8048C();
}

uint64_t sub_1C0A812DC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  v1 = *v0;
  sub_1C07ACF80(&qword_1ED7462E0);
  v2 = sub_1C107072C();
  if (!*(_QWORD *)(v1 + 16))
    goto LABEL_25;
  v3 = 1 << *(_BYTE *)(v1 + 32);
  v4 = (_QWORD *)(v1 + 56);
  if (v3 < 64)
    v5 = ~(-1 << v3);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v1 + 56);
  v7 = (unint64_t)(v3 + 63) >> 6;
  swift_retain();
  if (v6)
  {
    v8 = __clz(__rbit64(v6));
    goto LABEL_20;
  }
  if (v7 > 1)
  {
    v9 = *(_QWORD *)(v1 + 64);
    v10 = 1;
    if (v9)
      goto LABEL_19;
    v10 = 2;
    if (v7 > 2)
    {
      v9 = *(_QWORD *)(v1 + 72);
      if (v9)
        goto LABEL_19;
      v10 = 3;
      if (v7 > 3)
      {
        v9 = *(_QWORD *)(v1 + 80);
        if (!v9)
        {
          v11 = 4;
          if (v7 > 4)
          {
            v9 = *(_QWORD *)(v1 + 88);
            if (v9)
            {
              v10 = 4;
              goto LABEL_19;
            }
            while (1)
            {
              v10 = v11 + 1;
              if (__OFADD__(v11, 1))
              {
                __break(1u);
                JUMPOUT(0x1C0A81684);
              }
              if (v10 >= v7)
                break;
              v9 = v4[v10];
              ++v11;
              if (v9)
                goto LABEL_19;
            }
          }
          goto LABEL_21;
        }
LABEL_19:
        v8 = __clz(__rbit64(v9)) + (v10 << 6);
LABEL_20:
        v12 = *(unsigned __int8 *)(*(_QWORD *)(v1 + 48) + v8);
        sub_1C1070DF8();
        __asm { BR              X8 }
      }
    }
  }
LABEL_21:
  swift_release();
  v13 = 1 << *(_BYTE *)(v1 + 32);
  if (v13 > 63)
    sub_1C07E7D20(0, (unint64_t)(v13 + 63) >> 6, (_QWORD *)(v1 + 56));
  else
    *v4 = -1 << v13;
  *(_QWORD *)(v1 + 16) = 0;
LABEL_25:
  result = swift_release();
  *v0 = v2;
  return result;
}

uint64_t sub_1C0A816A0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t i;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  unsigned int v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;

  v1 = v0;
  v2 = *v0;
  sub_1C07ACF80(&qword_1EF639ED8);
  result = sub_1C107072C();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v7 = (uint64_t *)(v2 + 56);
    v6 = *(_QWORD *)(v2 + 56);
    v8 = 1 << *(_BYTE *)(v2 + 32);
    v27 = -1 << v8;
    v28 = v1;
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & v6;
    v29 = 1 << *(_BYTE *)(v2 + 32);
    v11 = (unint64_t)(v8 + 63) >> 6;
    v12 = result + 56;
    if ((v9 & v6) == 0)
      goto LABEL_7;
LABEL_6:
    v13 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    for (i = v13 | (v5 << 6); ; i = __clz(__rbit64(v16)) + (v5 << 6))
    {
      v18 = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * i);
      result = MEMORY[0x1C3BA7700](*(_QWORD *)(v4 + 40), v18, 4);
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6))) == 0)
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v19) >> 6;
        while (++v21 != v24 || (v23 & 1) == 0)
        {
          v25 = v21 == v24;
          if (v21 == v24)
            v21 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v21);
          if (v26 != -1)
          {
            v22 = __clz(__rbit64(~v26)) + (v21 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(_DWORD *)(*(_QWORD *)(v4 + 48) + 4 * v22) = v18;
      ++*(_QWORD *)(v4 + 16);
      if (v10)
        goto LABEL_6;
LABEL_7:
      v15 = v5 + 1;
      if (__OFADD__(v5, 1))
        goto LABEL_38;
      if (v15 >= v11)
        goto LABEL_32;
      v16 = v7[v15];
      ++v5;
      if (!v16)
      {
        v5 = v15 + 1;
        if (v15 + 1 >= v11)
          goto LABEL_32;
        v16 = v7[v5];
        if (!v16)
        {
          v5 = v15 + 2;
          if (v15 + 2 >= v11)
            goto LABEL_32;
          v16 = v7[v5];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= v11)
            {
LABEL_32:
              if (v29 > 63)
                sub_1C07E7D20(0, v11, (_QWORD *)(v2 + 56));
              else
                *v7 = v27;
              v1 = v28;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v16 = v7[v17];
            if (!v16)
            {
              while (1)
              {
                v5 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_39;
                if (v5 >= v11)
                  goto LABEL_32;
                v16 = v7[v5];
                ++v17;
                if (v16)
                  goto LABEL_20;
              }
            }
            v5 = v17;
          }
        }
      }
LABEL_20:
      v10 = (v16 - 1) & v16;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

void sub_1C0A81924()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  _QWORD *v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = type metadata accessor for LiveGlobalKnowledgeTriple();
  v31 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = v0;
  v4 = *v0;
  sub_1C07ACF80((uint64_t *)&unk_1EF639FE8);
  v5 = sub_1C107072C();
  v6 = v5;
  if (*(_QWORD *)(v4 + 16))
  {
    v7 = 1 << *(_BYTE *)(v4 + 32);
    v8 = *(_QWORD *)(v4 + 56);
    v27 = (_QWORD *)(v4 + 56);
    if (v7 < 64)
      v9 = ~(-1 << v7);
    else
      v9 = -1;
    v10 = v9 & v8;
    v28 = (unint64_t)(v7 + 63) >> 6;
    v29 = v5 + 56;
    swift_retain();
    v11 = 0;
    v30 = v4;
    if (!v10)
      goto LABEL_7;
LABEL_6:
    v12 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      v17 = *(_QWORD *)(v31 + 72);
      sub_1C0A8CCC8(*(_QWORD *)(v4 + 48) + v17 * i, (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
      sub_1C1070DF8();
      sub_1C106E590();
      sub_1C0794BAC((unint64_t *)&qword_1ED7618F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE40]);
      sub_1C106FA0C();
      sub_1C106E41C();
      sub_1C0794BAC(&qword_1ED75EA28, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC68]);
      sub_1C106FA0C();
      sub_1C106EB24();
      sub_1C0794BAC(&qword_1ED761910, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D450], MEMORY[0x1E0D3D468]);
      sub_1C106FA0C();
      sub_1C106FA0C();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C106FC28();
      swift_bridgeObjectRelease();
      sub_1C1070E34();
      sub_1C1070E34();
      v18 = *(_QWORD *)&v3[*(int *)(v1 + 44)];
      sub_1C1070E04();
      v19 = *(_QWORD *)(v18 + 16);
      if (v19)
      {
        v20 = v18 + 32;
        do
        {
          v20 += 8;
          sub_1C1070E04();
          --v19;
        }
        while (v19);
      }
      sub_1C1070E4C();
      v21 = v29;
      v22 = sub_1C1070684();
      *(_QWORD *)(v21 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      sub_1C0A8CCC8((uint64_t)v3, *(_QWORD *)(v6 + 48) + v22 * v17, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
      ++*(_QWORD *)(v6 + 16);
      v4 = v30;
      if (v10)
        goto LABEL_6;
LABEL_7:
      v14 = v11 + 1;
      if (__OFADD__(v11, 1))
      {
        __break(1u);
LABEL_33:
        __break(1u);
        return;
      }
      if (v14 >= v28)
        goto LABEL_26;
      v15 = v27[v14];
      ++v11;
      if (!v15)
      {
        v11 = v14 + 1;
        if (v14 + 1 >= v28)
          goto LABEL_26;
        v15 = v27[v11];
        if (!v15)
        {
          v11 = v14 + 2;
          if (v14 + 2 >= v28)
            goto LABEL_26;
          v15 = v27[v11];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v28)
            {
LABEL_26:
              swift_release();
              v23 = v26;
              v24 = 1 << *(_BYTE *)(v4 + 32);
              if (v24 > 63)
                sub_1C07E7D20(0, (unint64_t)(v24 + 63) >> 6, v27);
              else
                *v27 = -1 << v24;
              *(_QWORD *)(v4 + 16) = 0;
              swift_release();
              goto LABEL_31;
            }
            v15 = v27[v16];
            if (!v15)
            {
              while (1)
              {
                v11 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_33;
                if (v11 >= v28)
                  goto LABEL_26;
                v15 = v27[v11];
                ++v16;
                if (v15)
                  goto LABEL_20;
              }
            }
            v11 = v16;
          }
        }
      }
LABEL_20:
      v10 = (v15 - 1) & v15;
    }
  }
  swift_release();
  v23 = v26;
LABEL_31:
  *v23 = v6;
}

uint64_t sub_1C0A81D68()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t i;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  int v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;

  v1 = v0;
  v2 = *v0;
  sub_1C07ACF80(&qword_1ED7512F8);
  v3 = sub_1C107072C();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v36 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v35 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    v37 = v2;
    if (!v7)
      goto LABEL_7;
LABEL_6:
    v38 = (v7 - 1) & v7;
    v39 = v10;
    for (i = __clz(__rbit64(v7)) | (v10 << 6); ; i = __clz(__rbit64(v13)) + (v14 << 6))
    {
      v16 = *(_QWORD *)(v2 + 48) + 56 * i;
      v17 = *(_QWORD *)v16;
      v18 = *(_QWORD *)(v16 + 8);
      v19 = *(_QWORD *)(v16 + 16);
      v20 = *(_QWORD *)(v16 + 24);
      v22 = *(_QWORD *)(v16 + 32);
      v21 = *(_QWORD *)(v16 + 40);
      v23 = *(_BYTE *)(v16 + 48);
      v24 = *(_DWORD *)(v16 + 52);
      sub_1C1070DF8();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C106FC28();
      swift_bridgeObjectRelease();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C106FC28();
      swift_bridgeObjectRelease();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C106FC28();
      swift_bridgeObjectRelease();
      sub_1C1070E04();
      sub_1C1070E28();
      result = sub_1C1070E4C();
      v25 = -1 << *(_BYTE *)(v4 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v8 + 8 * (v26 >> 6))) == 0)
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v25) >> 6;
        while (++v27 != v30 || (v29 & 1) == 0)
        {
          v31 = v27 == v30;
          if (v27 == v30)
            v27 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v8 + 8 * v27);
          if (v32 != -1)
          {
            v28 = __clz(__rbit64(~v32)) + (v27 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v28 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v8 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v8 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
      v33 = *(_QWORD *)(v4 + 48) + 56 * v28;
      *(_QWORD *)v33 = v17;
      *(_QWORD *)(v33 + 8) = v18;
      *(_QWORD *)(v33 + 16) = v19;
      *(_QWORD *)(v33 + 24) = v20;
      *(_QWORD *)(v33 + 32) = v22;
      *(_QWORD *)(v33 + 40) = v21;
      *(_BYTE *)(v33 + 48) = v23;
      *(_DWORD *)(v33 + 52) = v24;
      ++*(_QWORD *)(v4 + 16);
      v2 = v37;
      v7 = v38;
      v10 = v39;
      if (v38)
        goto LABEL_6;
LABEL_7:
      v12 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_38;
      if (v12 >= v35)
        goto LABEL_32;
      v13 = v36[v12];
      v14 = v10 + 1;
      if (!v13)
      {
        v14 = v10 + 2;
        if (v10 + 2 >= v35)
          goto LABEL_32;
        v13 = v36[v14];
        if (!v13)
        {
          v14 = v10 + 3;
          if (v10 + 3 >= v35)
            goto LABEL_32;
          v13 = v36[v14];
          if (!v13)
          {
            v15 = v10 + 4;
            if (v10 + 4 >= v35)
            {
LABEL_32:
              swift_release();
              v1 = v0;
              v34 = 1 << *(_BYTE *)(v2 + 32);
              if (v34 > 63)
                sub_1C07E7D20(0, (unint64_t)(v34 + 63) >> 6, v36);
              else
                *v36 = -1 << v34;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v13 = v36[v15];
            if (!v13)
            {
              while (1)
              {
                v14 = v15 + 1;
                if (__OFADD__(v15, 1))
                  goto LABEL_39;
                if (v14 >= v35)
                  goto LABEL_32;
                v13 = v36[v14];
                ++v15;
                if (v13)
                  goto LABEL_20;
              }
            }
            v14 = v10 + 4;
          }
        }
      }
LABEL_20:
      v38 = (v13 - 1) & v13;
      v39 = v14;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1C0A8210C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  int64_t v31;
  _QWORD *v32;

  v1 = v0;
  v2 = *v0;
  sub_1C07ACF80(&qword_1ED7537B8);
  v3 = sub_1C107072C();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v32 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v31 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    if (!v7)
      goto LABEL_7;
LABEL_6:
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
    {
      v16 = v2;
      v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 24 * i);
      v18 = *v17;
      v19 = v17[1];
      v20 = v17[2];
      sub_1C1070DF8();
      sub_1C1070E04();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C106FC28();
      swift_bridgeObjectRelease();
      result = sub_1C1070E4C();
      v21 = -1 << *(_BYTE *)(v4 + 32);
      v22 = result & ~v21;
      v23 = v22 >> 6;
      if (((-1 << v22) & ~*(_QWORD *)(v8 + 8 * (v22 >> 6))) == 0)
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v21) >> 6;
        while (++v23 != v26 || (v25 & 1) == 0)
        {
          v27 = v23 == v26;
          if (v23 == v26)
            v23 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v8 + 8 * v23);
          if (v28 != -1)
          {
            v24 = __clz(__rbit64(~v28)) + (v23 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v24 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v8 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v8 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
      v29 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 24 * v24);
      *v29 = v18;
      v29[1] = v19;
      v29[2] = v20;
      ++*(_QWORD *)(v4 + 16);
      v2 = v16;
      if (v7)
        goto LABEL_6;
LABEL_7:
      v13 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_38;
      if (v13 >= v31)
        goto LABEL_32;
      v14 = v32[v13];
      ++v10;
      if (!v14)
      {
        v10 = v13 + 1;
        if (v13 + 1 >= v31)
          goto LABEL_32;
        v14 = v32[v10];
        if (!v14)
        {
          v10 = v13 + 2;
          if (v13 + 2 >= v31)
            goto LABEL_32;
          v14 = v32[v10];
          if (!v14)
          {
            v15 = v13 + 3;
            if (v15 >= v31)
            {
LABEL_32:
              swift_release();
              v1 = v0;
              v30 = 1 << *(_BYTE *)(v2 + 32);
              if (v30 > 63)
                sub_1C07E7D20(0, (unint64_t)(v30 + 63) >> 6, v32);
              else
                *v32 = -1 << v30;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v14 = v32[v15];
            if (!v14)
            {
              while (1)
              {
                v10 = v15 + 1;
                if (__OFADD__(v15, 1))
                  goto LABEL_39;
                if (v10 >= v31)
                  goto LABEL_32;
                v14 = v32[v10];
                ++v15;
                if (v14)
                  goto LABEL_20;
              }
            }
            v10 = v15;
          }
        }
      }
LABEL_20:
      v7 = (v14 - 1) & v14;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1C0A82430()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;

  v1 = v0;
  v2 = *v0;
  sub_1C07ACF80(qword_1ED75D9A8);
  v3 = sub_1C107072C();
  if (!*(_QWORD *)(v2 + 16))
    goto LABEL_25;
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v5 = (_QWORD *)(v2 + 56);
  if (v4 < 64)
    v6 = ~(-1 << v4);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v8 = (unint64_t)(v4 + 63) >> 6;
  swift_retain();
  if (v7)
  {
    v9 = __clz(__rbit64(v7));
    goto LABEL_20;
  }
  if (v8 > 1)
  {
    v10 = *(_QWORD *)(v2 + 64);
    v11 = 1;
    if (v10)
      goto LABEL_19;
    v11 = 2;
    if (v8 > 2)
    {
      v10 = *(_QWORD *)(v2 + 72);
      if (v10)
        goto LABEL_19;
      v11 = 3;
      if (v8 > 3)
      {
        v10 = *(_QWORD *)(v2 + 80);
        if (!v10)
        {
          v12 = 4;
          if (v8 > 4)
          {
            v10 = *(_QWORD *)(v2 + 88);
            if (v10)
            {
              v11 = 4;
              goto LABEL_19;
            }
            while (1)
            {
              v11 = v12 + 1;
              if (__OFADD__(v12, 1))
              {
                __break(1u);
                JUMPOUT(0x1C0A82800);
              }
              if (v11 >= v8)
                break;
              v10 = v5[v11];
              ++v12;
              if (v10)
                goto LABEL_19;
            }
          }
          goto LABEL_21;
        }
LABEL_19:
        v9 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_20:
        v13 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + v9);
        sub_1C1070DF8();
        __asm { BR              X8 }
      }
    }
  }
LABEL_21:
  swift_release();
  v1 = v0;
  v14 = 1 << *(_BYTE *)(v2 + 32);
  if (v14 > 63)
    sub_1C07E7D20(0, (unint64_t)(v14 + 63) >> 6, (_QWORD *)(v2 + 56));
  else
    *v5 = -1 << v14;
  *(_QWORD *)(v2 + 16) = 0;
LABEL_25:
  result = swift_release();
  *v1 = v3;
  return result;
}

uint64_t sub_1C0A8282C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t i;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  _QWORD *v26;

  v1 = *v0;
  sub_1C07ACF80(&qword_1EF639F58);
  v2 = sub_1C107072C();
  v3 = v2;
  if (*(_QWORD *)(v1 + 16))
  {
    v4 = 1 << *(_BYTE *)(v1 + 32);
    v26 = (_QWORD *)(v1 + 56);
    if (v4 < 64)
      v5 = ~(-1 << v4);
    else
      v5 = -1;
    v6 = v5 & *(_QWORD *)(v1 + 56);
    v25 = (unint64_t)(v4 + 63) >> 6;
    v7 = v2 + 56;
    result = swift_retain();
    v9 = 0;
    if (!v6)
      goto LABEL_7;
LABEL_6:
    v10 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    for (i = v10 | (v9 << 6); ; i = __clz(__rbit64(v13)) + (v9 << 6))
    {
      v15 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * i);
      sub_1C106F700();
      sub_1C0794BAC(&qword_1EF639F60, (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00], MEMORY[0x1E0C95E18]);
      result = sub_1C106FA00();
      v16 = -1 << *(_BYTE *)(v3 + 32);
      v17 = result & ~v16;
      v18 = v17 >> 6;
      if (((-1 << v17) & ~*(_QWORD *)(v7 + 8 * (v17 >> 6))) == 0)
      {
        v20 = 0;
        v21 = (unint64_t)(63 - v16) >> 6;
        while (++v18 != v21 || (v20 & 1) == 0)
        {
          v22 = v18 == v21;
          if (v18 == v21)
            v18 = 0;
          v20 |= v22;
          v23 = *(_QWORD *)(v7 + 8 * v18);
          if (v23 != -1)
          {
            v19 = __clz(__rbit64(~v23)) + (v18 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v7 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v7 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v19) = v15;
      ++*(_QWORD *)(v3 + 16);
      if (v6)
        goto LABEL_6;
LABEL_7:
      v12 = v9 + 1;
      if (__OFADD__(v9, 1))
        goto LABEL_38;
      if (v12 >= v25)
        goto LABEL_32;
      v13 = v26[v12];
      ++v9;
      if (!v13)
      {
        v9 = v12 + 1;
        if (v12 + 1 >= v25)
          goto LABEL_32;
        v13 = v26[v9];
        if (!v13)
        {
          v9 = v12 + 2;
          if (v12 + 2 >= v25)
            goto LABEL_32;
          v13 = v26[v9];
          if (!v13)
          {
            v14 = v12 + 3;
            if (v14 >= v25)
            {
LABEL_32:
              swift_release();
              v24 = 1 << *(_BYTE *)(v1 + 32);
              if (v24 > 63)
                sub_1C07E7D20(0, (unint64_t)(v24 + 63) >> 6, v26);
              else
                *v26 = -1 << v24;
              *(_QWORD *)(v1 + 16) = 0;
              break;
            }
            v13 = v26[v14];
            if (!v13)
            {
              while (1)
              {
                v9 = v14 + 1;
                if (__OFADD__(v14, 1))
                  goto LABEL_39;
                if (v9 >= v25)
                  goto LABEL_32;
                v13 = v26[v9];
                ++v14;
                if (v13)
                  goto LABEL_20;
              }
            }
            v9 = v14;
          }
        }
      }
LABEL_20:
      v6 = (v13 - 1) & v13;
    }
  }
  result = swift_release();
  *v0 = v3;
  return result;
}

void sub_1C0A82B38()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;

  sub_1C0779670();
  v33 = *(_QWORD *)(type metadata accessor for OntologyTriple() - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v2);
  sub_1C0A8D230();
  v3 = (_QWORD *)*v0;
  sub_1C07ACF80(&qword_1EF639F10);
  v4 = sub_1C107072C();
  if (v3[2])
  {
    sub_1C0A8D1C8();
    v31 = v3 + 7;
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & v3[7];
    sub_1C0A4DB48();
    swift_retain();
    v8 = 0;
    v32 = v3;
    if (!v7)
      goto LABEL_7;
LABEL_6:
    sub_1C077E8CC();
    v34 = v9;
    for (i = v10 | (v9 << 6); ; i = v20 + (v19 << 6))
    {
      v21 = v3[6];
      v22 = *(_QWORD *)(v33 + 72);
      sub_1C0A8D17C(v21 + v22 * i, v1);
      sub_1C07AAEDC();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C0A8D3A4();
      swift_bridgeObjectRelease();
      sub_1C0779688();
      sub_1C0794BAC(&qword_1ED75EA28, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC68]);
      sub_1C0A8CE74();
      sub_1C07767B4();
      sub_1C0A8D3B4();
      sub_1C07767AC();
      sub_1C0A8CE74();
      sub_1C078BDC0();
      sub_1C0775AF0();
      sub_1C077960C();
      sub_1C077ED30();
      sub_1C0776A1C();
      if (v23)
      {
        sub_1C0797B50();
        while (1)
        {
          sub_1C0793670();
          if (v23)
          {
            if ((v25 & 1) != 0)
              break;
          }
          sub_1C0A8D1AC();
          sub_1C0A8D434();
          if (!v23)
          {
            sub_1C0791970();
            goto LABEL_33;
          }
        }
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        return;
      }
      sub_1C0792CBC();
LABEL_33:
      sub_1C0781E18(v24);
      sub_1C0A8D17C(v1, v27 + v26 * v22);
      sub_1C07826B4();
      v3 = v32;
      v8 = v34;
      if (v7)
        goto LABEL_6;
LABEL_7:
      if (__OFADD__(v8, 1))
        goto LABEL_41;
      sub_1C0A8D1A0();
      if (v12 == v13)
        goto LABEL_35;
      sub_1C0A8D2A4();
      if (!v14)
      {
        sub_1C0A8CEAC();
        if (v12 == v13)
          goto LABEL_35;
        if (!v31[v15])
        {
          sub_1C0A8CEAC();
          if (v12 == v13)
            goto LABEL_35;
          if (!v31[v16])
          {
            sub_1C0A8D1A0();
            if (v12 == v13)
            {
LABEL_35:
              sub_1C0780A00();
              sub_1C077E994();
              if (v12 ^ v13 | v23)
              {
                sub_1C07B4824();
                *v31 = v28;
              }
              else
              {
                v29 = sub_1C0782DE4();
                sub_1C07E7D20(v29, v30, v31);
              }
              v3[2] = 0;
              break;
            }
            if (!v31[v17])
            {
              while (!__OFADD__(v17, 1))
              {
                sub_1C0A8CEAC();
                if (v12 == v13)
                  goto LABEL_35;
                sub_1C0A8D454();
                if (v18)
                  goto LABEL_24;
              }
              goto LABEL_42;
            }
          }
        }
      }
LABEL_24:
      sub_1C0A8D600();
      v34 = v19;
    }
  }
  sub_1C0780A00();
  *v0 = v4;
  sub_1C0776760();
}

uint64_t sub_1C0A82E1C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;

  v1 = v0;
  v2 = *v0;
  sub_1C07ACF80(&qword_1ED7512F0);
  v3 = sub_1C107072C();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v35 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v34 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    v36 = v2;
    if (!v7)
      goto LABEL_7;
LABEL_6:
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v39 = v10;
    for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v15 << 6))
    {
      v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + (i << 6));
      v18 = *v17;
      v19 = v17[1];
      v20 = v17[4];
      v37 = v17[3];
      v38 = v17[2];
      v22 = v17[5];
      v21 = v17[6];
      v23 = v17[7];
      sub_1C1070DF8();
      if (v22)
      {
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        sub_1C106FC28();
        swift_bridgeObjectRelease();
      }
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C106FC28();
      swift_bridgeObjectRelease();
      result = sub_1C1070E4C();
      v24 = -1 << *(_BYTE *)(v4 + 32);
      v25 = result & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v8 + 8 * (v25 >> 6))) == 0)
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v24) >> 6;
        while (++v26 != v29 || (v28 & 1) == 0)
        {
          v30 = v26 == v29;
          if (v26 == v29)
            v26 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v8 + 8 * v26);
          if (v31 != -1)
          {
            v27 = __clz(__rbit64(~v31)) + (v26 << 6);
            goto LABEL_32;
          }
        }
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        return result;
      }
      v27 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v8 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
LABEL_32:
      *(_QWORD *)(v8 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
      v32 = (_QWORD *)(*(_QWORD *)(v4 + 48) + (v27 << 6));
      *v32 = v18;
      v32[1] = v19;
      v10 = v39;
      v32[2] = v38;
      v32[3] = v37;
      v32[4] = v20;
      v32[5] = v22;
      v32[6] = v21;
      v32[7] = v23;
      ++*(_QWORD *)(v4 + 16);
      v2 = v36;
      if (v7)
        goto LABEL_6;
LABEL_7:
      v13 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_40;
      if (v13 >= v34)
        goto LABEL_34;
      v14 = v35[v13];
      v15 = v10 + 1;
      if (!v14)
      {
        v15 = v10 + 2;
        if (v10 + 2 >= v34)
          goto LABEL_34;
        v14 = v35[v15];
        if (!v14)
        {
          v15 = v10 + 3;
          if (v10 + 3 >= v34)
            goto LABEL_34;
          v14 = v35[v15];
          if (!v14)
          {
            v16 = v10 + 4;
            if (v10 + 4 >= v34)
            {
LABEL_34:
              swift_release();
              v1 = v0;
              v33 = 1 << *(_BYTE *)(v2 + 32);
              if (v33 > 63)
                sub_1C07E7D20(0, (unint64_t)(v33 + 63) >> 6, v35);
              else
                *v35 = -1 << v33;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v14 = v35[v16];
            if (!v14)
            {
              while (1)
              {
                v15 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_41;
                if (v15 >= v34)
                  goto LABEL_34;
                v14 = v35[v15];
                ++v16;
                if (v14)
                  goto LABEL_20;
              }
            }
            v15 = v10 + 4;
          }
        }
      }
LABEL_20:
      v7 = (v14 - 1) & v14;
      v39 = v15;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1C0A8319C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  sub_1C07ACF80(&qword_1ED740EB0);
  result = sub_1C107072C();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    if (!v9)
      goto LABEL_7;
LABEL_6:
    v12 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    for (i = v12 | (v5 << 6); ; i = __clz(__rbit64(v15)) + (v5 << 6))
    {
      v17 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + i);
      sub_1C1070DF8();
      sub_1C1070E10();
      result = sub_1C1070E4C();
      v18 = -1 << *(_BYTE *)(v4 + 32);
      v19 = result & ~v18;
      v20 = v19 >> 6;
      if (((-1 << v19) & ~*(_QWORD *)(v11 + 8 * (v19 >> 6))) == 0)
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v18) >> 6;
        while (++v20 != v23 || (v22 & 1) == 0)
        {
          v24 = v20 == v23;
          if (v20 == v23)
            v20 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v20);
          if (v25 != -1)
          {
            v21 = __clz(__rbit64(~v25)) + (v20 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v21 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v11 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v11 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      *(_BYTE *)(*(_QWORD *)(v4 + 48) + v21) = v17;
      ++*(_QWORD *)(v4 + 16);
      if (v9)
        goto LABEL_6;
LABEL_7:
      v14 = v5 + 1;
      if (__OFADD__(v5, 1))
        goto LABEL_38;
      if (v14 >= v10)
        goto LABEL_32;
      v15 = v6[v14];
      ++v5;
      if (!v15)
      {
        v5 = v14 + 1;
        if (v14 + 1 >= v10)
          goto LABEL_32;
        v15 = v6[v5];
        if (!v15)
        {
          v5 = v14 + 2;
          if (v14 + 2 >= v10)
            goto LABEL_32;
          v15 = v6[v5];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v10)
            {
LABEL_32:
              v26 = 1 << *(_BYTE *)(v2 + 32);
              if (v26 > 63)
                sub_1C07E7D20(0, (unint64_t)(v26 + 63) >> 6, (_QWORD *)(v2 + 56));
              else
                *v6 = -1 << v26;
              v1 = v0;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v15 = v6[v16];
            if (!v15)
            {
              while (1)
              {
                v5 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_39;
                if (v5 >= v10)
                  goto LABEL_32;
                v15 = v6[v5];
                ++v16;
                if (v15)
                  goto LABEL_20;
              }
            }
            v5 = v16;
          }
        }
      }
LABEL_20:
      v9 = (v15 - 1) & v15;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

void sub_1C0A83440()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;

  sub_1C0779670();
  v3 = v2;
  v4 = v0;
  v5 = sub_1C078D5E4();
  v31 = *(_QWORD *)(v6(v5) - 8);
  sub_1C078C94C();
  MEMORY[0x1E0C80A78](v7);
  sub_1C0A8D230();
  v8 = *v0;
  sub_1C0A8D0A0();
  sub_1C07ACF80(v3);
  v9 = sub_1C07B1DAC();
  if (*(_QWORD *)(v8 + 16))
  {
    sub_1C0A8D364();
    v30 = v10;
    sub_1C0779DF0();
    v13 = v12 & v11;
    swift_retain();
    v14 = 0;
    if (!v13)
      goto LABEL_4;
LABEL_3:
    v15 = __clz(__rbit64(v13));
    v13 &= v13 - 1;
    v32 = v14;
    v16 = v15 | (v14 << 6);
    v17 = v8;
    while (1)
    {
      v23 = *(_QWORD *)(v31 + 72);
      sub_1C0A8D67C(*(_QWORD *)(v17 + 48) + v23 * v16, v1);
      sub_1C07AAEDC();
      sub_1C078784C();
      sub_1C0794BAC((unint64_t *)&qword_1ED7618F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE40]);
      sub_1C106FA0C();
      sub_1C0779688();
      sub_1C0794BAC(&qword_1ED75EA28, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC68]);
      sub_1C077E424();
      sub_1C0A8D444();
      sub_1C0794BAC(&qword_1ED761910, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D450], MEMORY[0x1E0D3D468]);
      sub_1C106FA0C();
      sub_1C077E424();
      sub_1C078BDC0();
      sub_1C0775AF0();
      sub_1C077960C();
      sub_1C0A8D1B8();
      sub_1C07B9E18();
      sub_1C078BDC0();
      sub_1C0775AF0();
      sub_1C077960C();
      sub_1C0A8CF8C();
      sub_1C1070E4C();
      v24 = sub_1C0A8CF48();
      v25 = sub_1C0A8D064(v24);
      sub_1C0A8D67C(v1, *(_QWORD *)(v9 + 48) + v25 * v23);
      sub_1C07826B4();
      v14 = v32;
      if (v13)
        goto LABEL_3;
LABEL_4:
      v17 = v8;
      if (__OFADD__(v14, 1))
      {
        __break(1u);
LABEL_32:
        __break(1u);
        return;
      }
      sub_1C0A8D1A0();
      if (v18 == v19)
        goto LABEL_25;
      sub_1C0A8D2A4();
      if (!v20)
      {
        sub_1C0A8CEAC();
        if (v18 == v19)
          goto LABEL_25;
        sub_1C0A8D4C4();
        if (!v20)
        {
          sub_1C0A8CEAC();
          if (v18 == v19)
            goto LABEL_25;
          sub_1C0A8D4C4();
          if (!v20)
          {
            sub_1C0A8D1A0();
            if (v18 == v19)
            {
LABEL_25:
              swift_release();
              sub_1C077E994();
              if (v18 ^ v19 | v26)
              {
                sub_1C07B4824();
                *v30 = v27;
              }
              else
              {
                v28 = sub_1C0782DE4();
                sub_1C07E7D20(v28, v29, v30);
              }
              v4 = v0;
              *(_QWORD *)(v8 + 16) = 0;
              break;
            }
            v20 = v30[v22];
            if (!v20)
            {
              while (!__OFADD__(v22, 1))
              {
                sub_1C0A8CEAC();
                if (v18 == v19)
                  goto LABEL_25;
                sub_1C0A8D454();
                if (v20)
                  goto LABEL_22;
              }
              goto LABEL_32;
            }
            v21 = v22;
          }
        }
      }
LABEL_22:
      v13 = (v20 - 1) & v20;
      v32 = v21;
      v16 = __clz(__rbit64(v20)) + (v21 << 6);
    }
  }
  swift_release();
  *v4 = v9;
  sub_1C0776760();
}

void sub_1C0A8373C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  int64_t v12;
  int64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;

  sub_1C077AEA0();
  sub_1C07AC7F8(v2, v3);
  v4 = sub_1C07AB808();
  if (*(_QWORD *)(v1 + 16))
  {
    v24 = v0;
    v5 = 1 << *(_BYTE *)(v1 + 32);
    v6 = (_QWORD *)(v1 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v1 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    sub_1C07AD578();
    v10 = 0;
    if (!v8)
      goto LABEL_7;
LABEL_6:
    sub_1C0A8D41C();
    while (1)
    {
      v16 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v11);
      sub_1C1070510();
      sub_1C0A8D184();
      if (v17)
      {
        sub_1C0797B50();
        while (1)
        {
          sub_1C0793670();
          if (v17)
          {
            if ((v19 & 1) != 0)
              break;
          }
          sub_1C07A50B8();
          if (!v17)
          {
            sub_1C0791970();
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return;
      }
      sub_1C0792CBC();
LABEL_30:
      sub_1C0A8D160(v18);
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v20) = v16;
      sub_1C07826B4();
      if (v8)
        goto LABEL_6;
LABEL_7:
      v12 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_38;
      if (v12 >= v9)
        goto LABEL_32;
      ++v10;
      if (!v6[v12])
      {
        v10 = v12 + 1;
        if (v12 + 1 >= v9)
          goto LABEL_32;
        if (!v6[v10])
        {
          v10 = v12 + 2;
          if (v12 + 2 >= v9)
            goto LABEL_32;
          if (!v6[v10])
          {
            sub_1C0A8D3C4();
            if (v14 == v15)
            {
LABEL_32:
              sub_1C07758C4();
              v0 = v24;
              sub_1C077E994();
              if (v14 ^ v15 | v17)
              {
                sub_1C07B4824();
                *v6 = v21;
              }
              else
              {
                v22 = sub_1C0782DE4();
                sub_1C07E7D20(v22, v23, (_QWORD *)(v1 + 56));
              }
              *(_QWORD *)(v1 + 16) = 0;
              break;
            }
            if (!v6[v13])
            {
              while (1)
              {
                v10 = v13 + 1;
                if (__OFADD__(v13, 1))
                  goto LABEL_39;
                if (v10 >= v9)
                  goto LABEL_32;
                ++v13;
                if (v6[v10])
                  goto LABEL_21;
              }
            }
            v10 = v13;
          }
        }
      }
LABEL_21:
      sub_1C0A8D34C();
    }
  }
  sub_1C07758C4();
  *v0 = v4;
  sub_1C0776728();
}

void sub_1C0A838DC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;

  sub_1C0779670();
  v32 = *(_QWORD *)(sub_1C07BFC28() - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v2);
  sub_1C07795DC();
  v3 = *v0;
  sub_1C0A8D0A0();
  sub_1C07ACF80(&qword_1ED744838);
  v4 = sub_1C07AB808();
  if (*(_QWORD *)(v3 + 16))
  {
    sub_1C0A8D248();
    v31 = v5;
    sub_1C0779DF0();
    v8 = v7 & v6;
    sub_1C0A4DB48();
    v29 = v0;
    v30 = v9;
    sub_1C07AD578();
    v10 = 0;
    if (!v8)
      goto LABEL_4;
LABEL_3:
    sub_1C077EB84();
    for (i = v11 | (v10 << 6); ; i = v15 + (v10 << 6))
    {
      v16 = v3;
      v17 = *(_QWORD *)(v3 + 48);
      v18 = *(_QWORD *)(v32 + 72);
      sub_1C0A8CCC8(v17 + v18 * i, v1, (uint64_t (*)(_QWORD))type metadata accessor for Source);
      sub_1C07AAEDC();
      sub_1C07767C4();
      sub_1C106FC28();
      sub_1C0775894();
      sub_1C077ED30();
      sub_1C0776A1C();
      if (v19)
      {
        sub_1C0797B50();
        while (1)
        {
          sub_1C0793670();
          if (v19)
          {
            if ((v21 & 1) != 0)
              break;
          }
          sub_1C0A8D1AC();
          sub_1C0A8D434();
          if (!v19)
          {
            sub_1C0791970();
            goto LABEL_26;
          }
        }
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
        return;
      }
      sub_1C0792CBC();
LABEL_26:
      sub_1C0781E18(v20);
      sub_1C0A8CCC8(v1, v23 + v22 * v18, (uint64_t (*)(_QWORD))type metadata accessor for Source);
      sub_1C07826B4();
      v3 = v16;
      if (v8)
        goto LABEL_3;
LABEL_4:
      v13 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_34;
      if (v13 >= v30)
        goto LABEL_28;
      ++v10;
      if (!v31[v13])
      {
        v10 = v13 + 1;
        if (v13 + 1 >= v30)
          goto LABEL_28;
        if (!v31[v10])
        {
          v10 = v13 + 2;
          if (v13 + 2 >= v30)
            goto LABEL_28;
          if (!v31[v10])
          {
            v14 = v13 + 3;
            if (v14 >= v30)
            {
LABEL_28:
              sub_1C07758C4();
              v0 = v29;
              sub_1C077E994();
              if (v24 ^ v25 | v19)
              {
                sub_1C07B4824();
                *v31 = v26;
              }
              else
              {
                v27 = sub_1C0782DE4();
                sub_1C07E7D20(v27, v28, v31);
              }
              *(_QWORD *)(v3 + 16) = 0;
              break;
            }
            if (!v31[v14])
            {
              while (1)
              {
                v10 = v14 + 1;
                if (__OFADD__(v14, 1))
                  goto LABEL_35;
                if (v10 >= v30)
                  goto LABEL_28;
                ++v14;
                if (v31[v10])
                  goto LABEL_17;
              }
            }
            v10 = v14;
          }
        }
      }
LABEL_17:
      sub_1C0A8D00C();
    }
  }
  sub_1C07758C4();
  *v0 = v4;
  sub_1C0776760();
}

uint64_t sub_1C0A83B18()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  sub_1C07ACF80(&qword_1EF639EF8);
  result = sub_1C107072C();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    if (!v9)
      goto LABEL_7;
LABEL_6:
    v12 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    for (i = v12 | (v5 << 6); ; i = __clz(__rbit64(v15)) + (v5 << 6))
    {
      v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i);
      sub_1C1070DF8();
      sub_1C1070E04();
      result = sub_1C1070E4C();
      v18 = -1 << *(_BYTE *)(v4 + 32);
      v19 = result & ~v18;
      v20 = v19 >> 6;
      if (((-1 << v19) & ~*(_QWORD *)(v11 + 8 * (v19 >> 6))) == 0)
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v18) >> 6;
        while (++v20 != v23 || (v22 & 1) == 0)
        {
          v24 = v20 == v23;
          if (v20 == v23)
            v20 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v20);
          if (v25 != -1)
          {
            v21 = __clz(__rbit64(~v25)) + (v20 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v21 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v11 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v11 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v21) = v17;
      ++*(_QWORD *)(v4 + 16);
      if (v9)
        goto LABEL_6;
LABEL_7:
      v14 = v5 + 1;
      if (__OFADD__(v5, 1))
        goto LABEL_38;
      if (v14 >= v10)
        goto LABEL_32;
      v15 = v6[v14];
      ++v5;
      if (!v15)
      {
        v5 = v14 + 1;
        if (v14 + 1 >= v10)
          goto LABEL_32;
        v15 = v6[v5];
        if (!v15)
        {
          v5 = v14 + 2;
          if (v14 + 2 >= v10)
            goto LABEL_32;
          v15 = v6[v5];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v10)
            {
LABEL_32:
              v26 = 1 << *(_BYTE *)(v2 + 32);
              if (v26 > 63)
                sub_1C07E7D20(0, (unint64_t)(v26 + 63) >> 6, (_QWORD *)(v2 + 56));
              else
                *v6 = -1 << v26;
              v1 = v0;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v15 = v6[v16];
            if (!v15)
            {
              while (1)
              {
                v5 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_39;
                if (v5 >= v10)
                  goto LABEL_32;
                v15 = v6[v5];
                ++v16;
                if (v15)
                  goto LABEL_20;
              }
            }
            v5 = v16;
          }
        }
      }
LABEL_20:
      v9 = (v15 - 1) & v15;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

void sub_1C0A83DBC(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  sub_1C1070510();
  sub_1C0A8D31C();
  v4 = sub_1C1070684();
  *(_QWORD *)(a2 + 56 + ((v4 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v4;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * v4) = a1;
  ++*(_QWORD *)(a2 + 16);
  sub_1C077671C();
}

void sub_1C0A83E2C(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  BOOL v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_1C0A801B4();
  }
  else
  {
    if (v10 > v9)
    {
      sub_1C0A87BA0();
      goto LABEL_22;
    }
    sub_1C0A89120();
  }
  v11 = *v4;
  sub_1C1070DF8();
  sub_1C106FC28();
  v12 = sub_1C1070E4C();
  v13 = -1 << *(_BYTE *)(v11 + 32);
  a3 = v12 & ~v13;
  v14 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v15 = *(_QWORD *)(v11 + 48);
    v16 = (_QWORD *)(v15 + 16 * a3);
    v17 = *v16 == a1 && v16[1] == a2;
    if (v17 || (sub_1C1070CB4() & 1) != 0)
    {
LABEL_21:
      sub_1C1070D38();
      __break(1u);
    }
    else
    {
      v18 = ~v13;
      while (1)
      {
        a3 = (a3 + 1) & v18;
        if (((*(_QWORD *)(v14 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v19 = (_QWORD *)(v15 + 16 * a3);
        v20 = *v19 == a1 && v19[1] == a2;
        if (v20 || (sub_1C1070CB4() & 1) != 0)
          goto LABEL_21;
      }
    }
  }
LABEL_22:
  v21 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v22 = (_QWORD *)(*(_QWORD *)(v21 + 48) + 16 * a3);
  *v22 = a1;
  v22[1] = a2;
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (v24)
    __break(1u);
  else
    *(_QWORD *)(v21 + 16) = v25;
}

uint64_t sub_1C0A83FC4(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v26 = a1;
  v6 = sub_1C106EB24();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v25 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_1C0A8048C();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1C0A88E18();
      goto LABEL_12;
    }
    sub_1C0A893C8();
  }
  v12 = *v3;
  sub_1C0794BAC(&qword_1ED761910, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D450], MEMORY[0x1E0D3D468]);
  v13 = sub_1C106FA00();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = *(_QWORD *)(v7 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v17(v9, *(_QWORD *)(v12 + 48) + v16 * a2, v6);
      sub_1C0794BAC(qword_1ED75EA50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D450], MEMORY[0x1E0D3D478]);
      v18 = sub_1C106FAA8();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v18 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v19 = v26;
  v20 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v20 + 48) + *(_QWORD *)(v7 + 72) * a2, v19, v6);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1C1070D38();
  __break(1u);
  return result;
}

void sub_1C0A84218()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  sub_1C0779670();
  v2 = v1;
  sub_1C078784C();
  sub_1C07B0018();
  MEMORY[0x1E0C80A78](v3);
  sub_1C07821B4();
  if (!v7 & v6 && (v2 & 1) != 0)
    goto LABEL_12;
  if ((v2 & 1) != 0)
  {
    sub_1C0A8048C();
  }
  else
  {
    if (v5 > v4)
    {
      sub_1C0A88E18();
      goto LABEL_12;
    }
    sub_1C0A893C8();
  }
  v8 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  sub_1C0794BAC((unint64_t *)&qword_1ED7618F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE40]);
  sub_1C077E5E8();
  sub_1C078B7D8();
  if ((v9 & 1) != 0)
  {
    do
    {
      sub_1C0A8D0C4();
      sub_1C0794BAC(&qword_1ED75EA38, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE50]);
      sub_1C07A31A0();
      sub_1C07BA0D8();
      if ((v8 & 1) != 0)
        goto LABEL_15;
      sub_1C07AC364();
    }
    while ((v10 & 1) != 0);
  }
LABEL_12:
  sub_1C077F79C();
  v11 = *(_QWORD *)(v2 + 16);
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (!v12)
  {
    *(_QWORD *)(v2 + 16) = v13;
    sub_1C0776760();
    return;
  }
  __break(1u);
LABEL_15:
  sub_1C0A8D684();
  __break(1u);
}

uint64_t sub_1C0A84390(uint64_t a1, unint64_t i, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _BYTE v22[72];
  _BYTE v23[48];

  v4 = v3;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_13;
  if ((a3 & 1) != 0)
  {
    sub_1C0A806D0();
  }
  else
  {
    if (v8 > v7)
    {
      sub_1C0A87CB0();
      goto LABEL_13;
    }
    sub_1C0A89618();
  }
  v9 = *v3;
  sub_1C1070DF8();
  sub_1C0825418((uint64_t)v22);
  v10 = sub_1C1070E4C();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  i = v10 & ~v11;
  v12 = v9 + 56;
  if (((*(_QWORD *)(v9 + 56 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v13 = *(_QWORD *)(v9 + 48);
    sub_1C07DFF44(v13 + 48 * i, (uint64_t)v22);
    sub_1C0824F64((uint64_t)v22);
    if ((v14 & 1) != 0)
      goto LABEL_16;
    v15 = ~v11;
    for (i = (i + 1) & v15; ((*(_QWORD *)(v12 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v15)
    {
      sub_1C07DFF44(v13 + 48 * i, (uint64_t)v23);
      sub_1C0824F64((uint64_t)v23);
      if ((v16 & 1) != 0)
        goto LABEL_16;
    }
  }
LABEL_13:
  v17 = *v4;
  *(_QWORD *)(*v4 + 8 * (i >> 6) + 56) |= 1 << i;
  result = sub_1C07DFF44(a1, *(_QWORD *)(v17 + 48) + 48 * i);
  v19 = *(_QWORD *)(v17 + 16);
  v20 = __OFADD__(v19, 1);
  v21 = v19 + 1;
  if (!v20)
  {
    *(_QWORD *)(v17 + 16) = v21;
    return result;
  }
  __break(1u);
LABEL_16:
  result = sub_1C1070D38();
  __break(1u);
  return result;
}

uint64_t sub_1C0A84534(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_1C106D6FC();
  v7 = *(_QWORD *)(v6 - 8);
  v8.n128_f64[0] = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(*v3 + 16);
  v12 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v12 > v11 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_1C0A8048C();
  }
  else
  {
    if (v12 > v11)
    {
      sub_1C0A88E18();
      goto LABEL_12;
    }
    sub_1C0A893C8();
  }
  v13 = *v3;
  sub_1C0794BAC((unint64_t *)&qword_1ED747AA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C188], MEMORY[0x1E0D3C198]);
  v14 = sub_1C106FA00();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v10, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_1C0794BAC(&qword_1EF62FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C188], MEMORY[0x1E0D3C1A0]);
      v19 = sub_1C106FAA8();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6, v8);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1C1070D38();
  __break(1u);
  return result;
}

void sub_1C0A84788(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t *v12;
  char v13;

  v5 = *(_QWORD *)(*v3 + 16);
  v6 = *(_QWORD *)(*v3 + 24);
  if (v6 <= v5 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_1C0A80998();
    }
    else
    {
      if (v6 > v5)
      {
        sub_1C0A885F0(&qword_1ED7462E8);
        goto LABEL_10;
      }
      sub_1C0A898BC();
    }
    v7 = *v3;
    sub_1C1070DF8();
    sub_1C084AE10();
    sub_1C106FC28();
    swift_bridgeObjectRelease();
    a2 = sub_1C1070E4C() & ~(-1 << *(_BYTE *)(v7 + 32));
    if (((*(_QWORD *)(v7 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
      __asm { BR              X9 }
  }
LABEL_10:
  v8 = *v12;
  *(_QWORD *)(*v12 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v8 + 48) + a2) = v13;
  v9 = *(_QWORD *)(v8 + 16);
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
  {
    __break(1u);
    JUMPOUT(0x1C0A84C30);
  }
  *(_QWORD *)(v8 + 16) = v11;
}

void sub_1C0A84CB4(uint64_t a1, char a2, unint64_t a3)
{
  uint64_t *v3;
  char v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  _BYTE v18[72];

  sub_1C07821B4();
  if (!(!v11 & v10) || (v7 & 1) == 0)
  {
    if ((v7 & 1) != 0)
    {
      sub_1C0A80E14();
    }
    else
    {
      if (v9 > v8)
      {
        sub_1C0A87E9C();
        goto LABEL_11;
      }
      sub_1C0A89D04();
    }
    v12 = *v3;
    sub_1C1070DF8();
    sub_1C0848E74((uint64_t)v18, a1, a2);
    a3 = sub_1C1070E4C() & ~(-1 << *(_BYTE *)(v12 + 32));
    if (((*(_QWORD *)(v12 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
      __asm { BR              X9 }
  }
LABEL_11:
  v13 = *v3;
  *(_QWORD *)(*v3 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v14 = *(_QWORD *)(v13 + 48) + 16 * a3;
  *(_QWORD *)v14 = a1;
  *(_BYTE *)(v14 + 8) = a2;
  v15 = *(_QWORD *)(v13 + 16);
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
  {
    __break(1u);
    JUMPOUT(0x1C0A85240);
  }
  *(_QWORD *)(v13 + 16) = v17;
}

void sub_1C0A85364()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  sub_1C0779670();
  v2 = v1;
  sub_1C0779688();
  sub_1C07B0018();
  MEMORY[0x1E0C80A78](v3);
  sub_1C07821B4();
  if (!v7 & v6 && (v2 & 1) != 0)
    goto LABEL_12;
  if ((v2 & 1) != 0)
  {
    sub_1C0A8048C();
  }
  else
  {
    if (v5 > v4)
    {
      sub_1C0A88E18();
      goto LABEL_12;
    }
    sub_1C0A893C8();
  }
  v8 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  sub_1C0794BAC(&qword_1ED75EA28, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC68]);
  sub_1C077E5E8();
  sub_1C078B7D8();
  if ((v9 & 1) != 0)
  {
    do
    {
      sub_1C0A8D0C4();
      sub_1C0794BAC((unint64_t *)&qword_1ED75EA30, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC78]);
      sub_1C07A31A0();
      sub_1C07BA0D8();
      if ((v8 & 1) != 0)
        goto LABEL_15;
      sub_1C07AC364();
    }
    while ((v10 & 1) != 0);
  }
LABEL_12:
  sub_1C077F79C();
  v11 = *(_QWORD *)(v2 + 16);
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (!v12)
  {
    *(_QWORD *)(v2 + 16) = v13;
    sub_1C0776760();
    return;
  }
  __break(1u);
LABEL_15:
  sub_1C0A8D684();
  __break(1u);
}

void sub_1C0A854DC(unsigned __int8 a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t *v13;
  char v14;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_1C0A812DC();
    }
    else
    {
      if (v7 > v6)
      {
        sub_1C0A885F0(&qword_1ED7462E0);
        goto LABEL_10;
      }
      sub_1C0A8A1C0();
    }
    v8 = *v3;
    sub_1C1070DF8();
    sub_1C0B6D608(a1);
    sub_1C106FC28();
    swift_bridgeObjectRelease();
    a2 = sub_1C1070E4C() & ~(-1 << *(_BYTE *)(v8 + 32));
    if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
      __asm { BR              X9 }
  }
LABEL_10:
  v9 = *v13;
  *(_QWORD *)(*v13 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v9 + 48) + a2) = v14;
  v10 = *(_QWORD *)(v9 + 16);
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
  {
    __break(1u);
    JUMPOUT(0x1C0A85814);
  }
  *(_QWORD *)(v9 + 16) = v12;
}

uint64_t sub_1C0A85868(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  unsigned int v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_1C0A816A0();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1C0A87FC0();
      goto LABEL_14;
    }
    sub_1C0A8A550();
  }
  v8 = *v3;
  result = MEMORY[0x1C3BA7700](*(_QWORD *)(*v3 + 40), v5, 4);
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(_DWORD *)(v10 + 4 * a2) == v5)
    {
LABEL_13:
      result = sub_1C1070D38();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_DWORD *)(v10 + 4 * a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_DWORD *)(*(_QWORD *)(v12 + 48) + 4 * a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

void sub_1C0A8598C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v42 = (int *)type metadata accessor for LiveGlobalKnowledgeTriple();
  v7 = *((_QWORD *)v42 - 1);
  MEMORY[0x1E0C80A78](v42);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v38 = v7;
  v39 = v3;
  if (v11 <= v10 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_1C0A81924();
    }
    else
    {
      if (v11 > v10)
      {
        sub_1C0A887E8();
        goto LABEL_41;
      }
      sub_1C0A8A7B0();
    }
    v12 = *v3;
    sub_1C1070DF8();
    LiveGlobalKnowledgeTriple.hash(into:)();
    v13 = sub_1C1070E4C();
    v14 = -1 << *(_BYTE *)(v12 + 32);
    a2 = v13 & ~v14;
    if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
    {
      v15 = ~v14;
      v41 = *(_QWORD *)(v7 + 72);
      v40 = ~v14;
      do
      {
        sub_1C0A8CC94(*(_QWORD *)(v12 + 48) + v41 * a2, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
        if ((sub_1C106E560() & 1) != 0)
        {
          sub_1C106E41C();
          sub_1C0794BAC(&qword_1ED75E7E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC80]);
          sub_1C106FE44();
          sub_1C106FE44();
          if (v45 == v43 && v46 == v44)
          {
            swift_bridgeObjectRelease_n();
            v15 = v40;
          }
          else
          {
            v17 = sub_1C1070CB4();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v15 = v40;
            if ((v17 & 1) == 0)
              goto LABEL_40;
          }
          if ((sub_1C106EB00() & 1) != 0)
          {
            sub_1C106FE44();
            sub_1C106FE44();
            if (v45 == v43 && v46 == v44)
            {
              swift_bridgeObjectRelease_n();
            }
            else
            {
              v19 = sub_1C1070CB4();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v19 & 1) == 0)
                goto LABEL_40;
            }
            v20 = v42[8];
            v21 = *(_QWORD *)&v9[v20];
            v22 = *(_QWORD *)&v9[v20 + 8];
            v23 = (_QWORD *)(a1 + v20);
            v24 = v21 == *v23 && v22 == v23[1];
            if ((v24 || (sub_1C1070CB4() & 1) != 0)
              && *(_QWORD *)&v9[v42[9]] == *(_QWORD *)(a1 + v42[9])
              && *(_QWORD *)&v9[v42[10]] == *(_QWORD *)(a1 + v42[10]))
            {
              v25 = v42[11];
              v26 = *(_QWORD *)&v9[v25];
              v27 = *(_QWORD *)(a1 + v25);
              v28 = *(_QWORD *)(v26 + 16);
              if (v28 == *(_QWORD *)(v27 + 16))
              {
                if (!v28 || v26 == v27)
                  goto LABEL_44;
                v29 = (uint64_t *)(v26 + 32);
                v30 = (uint64_t *)(v27 + 32);
                while (1)
                {
                  v32 = *v29++;
                  v31 = v32;
                  v33 = *v30++;
                  if (v31 != v33)
                    break;
                  if (!--v28)
                    goto LABEL_44;
                }
              }
            }
          }
        }
LABEL_40:
        sub_1C07B2018((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
        a2 = (a2 + 1) & v15;
      }
      while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_41:
  v34 = *v39;
  *(_QWORD *)(*v39 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  sub_1C0A8CCC8(a1, *(_QWORD *)(v34 + 48) + *(_QWORD *)(v38 + 72) * a2, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
  v35 = *(_QWORD *)(v34 + 16);
  v36 = __OFADD__(v35, 1);
  v37 = v35 + 1;
  if (v36)
  {
    __break(1u);
LABEL_44:
    sub_1C07B2018((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
    sub_1C1070D38();
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v34 + 16) = v37;
  }
}

uint64_t sub_1C0A85DB8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_1C106AFCC();
  v7 = *(_QWORD *)(v6 - 8);
  v8.n128_f64[0] = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(*v3 + 16);
  v12 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v12 > v11 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_1C0A8048C();
  }
  else
  {
    if (v12 > v11)
    {
      sub_1C0A88E18();
      goto LABEL_12;
    }
    sub_1C0A893C8();
  }
  v13 = *v3;
  sub_1C0794BAC(&qword_1ED759DF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], MEMORY[0x1E0CB11D0]);
  v14 = sub_1C106FA00();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v10, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_1C0794BAC((unint64_t *)&unk_1ED759E00, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], MEMORY[0x1E0CB11D8]);
      v19 = sub_1C106FAA8();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6, v8);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1C1070D38();
  __break(1u);
  return result;
}

uint64_t sub_1C0A8600C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  float v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  float v21;
  BOOL v22;
  BOOL v23;
  BOOL v24;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  v33 = result;
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_30;
  if ((a3 & 1) != 0)
  {
    sub_1C0A81D68();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1C0A88154();
      goto LABEL_30;
    }
    sub_1C0A8ABAC();
  }
  v8 = *v3;
  sub_1C1070DF8();
  VisualEntity.hash(into:)();
  result = sub_1C1070E4C();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  v39 = v8 + 56;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v38 = ~v9;
    v10 = *(_QWORD *)v5;
    v11 = *(_QWORD *)(v5 + 8);
    v12 = *(_QWORD *)(v5 + 16);
    v13 = *(_QWORD *)(v5 + 24);
    v36 = *(_QWORD *)(v5 + 32);
    v37 = *(_QWORD *)(v8 + 48);
    v35 = *(_QWORD *)(v5 + 40);
    v34 = *(unsigned __int8 *)(v5 + 48);
    v14 = *(float *)(v5 + 52);
    do
    {
      v15 = v37 + 56 * a2;
      result = *(_QWORD *)v15;
      v16 = *(_QWORD *)(v15 + 16);
      v17 = *(_QWORD *)(v15 + 24);
      v19 = *(_QWORD *)(v15 + 32);
      v18 = *(_QWORD *)(v15 + 40);
      v20 = *(unsigned __int8 *)(v15 + 48);
      v21 = *(float *)(v15 + 52);
      v22 = *(_QWORD *)v15 == v10 && *(_QWORD *)(v15 + 8) == v11;
      if (v22 || (result = sub_1C1070CB4(), (result & 1) != 0))
      {
        v23 = v16 == v12 && v17 == v13;
        if (v23 || (result = sub_1C1070CB4(), (result & 1) != 0))
        {
          v24 = v19 == v36 && v18 == v35;
          if (v24 || (result = sub_1C1070CB4(), (result & 1) != 0))
          {
            if (v20 == v34 && v21 == v14)
              goto LABEL_33;
          }
        }
      }
      a2 = (a2 + 1) & v38;
    }
    while (((*(_QWORD *)(v39 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_30:
  v26 = *v32;
  *(_QWORD *)(*v32 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  v27 = *(_QWORD *)(v26 + 48) + 56 * a2;
  v28 = *(_OWORD *)(v33 + 16);
  *(_OWORD *)v27 = *(_OWORD *)v33;
  *(_OWORD *)(v27 + 16) = v28;
  *(_OWORD *)(v27 + 32) = *(_OWORD *)(v33 + 32);
  *(_QWORD *)(v27 + 48) = *(_QWORD *)(v33 + 48);
  v29 = *(_QWORD *)(v26 + 16);
  v30 = __OFADD__(v29, 1);
  v31 = v29 + 1;
  if (!v30)
  {
    *(_QWORD *)(v26 + 16) = v31;
    return result;
  }
  __break(1u);
LABEL_33:
  result = sub_1C1070D38();
  __break(1u);
  return result;
}

uint64_t sub_1C0A86260(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_1C106ADE0();
  v7 = *(_QWORD *)(v6 - 8);
  v8.n128_f64[0] = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(*v3 + 16);
  v12 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v12 > v11 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_1C0A8048C();
  }
  else
  {
    if (v12 > v11)
    {
      sub_1C0A88E18();
      goto LABEL_12;
    }
    sub_1C0A893C8();
  }
  v13 = *v3;
  sub_1C0794BAC(&qword_1EF6331E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  v14 = sub_1C106FA00();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v10, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_1C0794BAC((unint64_t *)&qword_1EF631F80, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
      v19 = sub_1C106FAA8();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6, v8);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1C1070D38();
  __break(1u);
  return result;
}

uint64_t sub_1C0A864B4(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, char a5)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v6 = v5;
  v10 = result;
  v11 = *(_QWORD *)(*v5 + 16);
  v12 = *(_QWORD *)(*v5 + 24);
  if (v12 > v11 && (a5 & 1) != 0)
    goto LABEL_17;
  if ((a5 & 1) != 0)
  {
    sub_1C0A8210C();
  }
  else
  {
    if (v12 > v11)
    {
      result = (uint64_t)sub_1C0A88434();
      goto LABEL_17;
    }
    sub_1C0A8AF34();
  }
  v13 = *v5;
  sub_1C1070DF8();
  sub_1C1070E04();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC28();
  swift_bridgeObjectRelease();
  result = sub_1C1070E4C();
  v14 = -1 << *(_BYTE *)(v13 + 32);
  a4 = result & ~v14;
  v15 = v13 + 56;
  if (((*(_QWORD *)(v13 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) != 0)
  {
    v16 = ~v14;
    v17 = *(_QWORD *)(v13 + 48);
    do
    {
      v18 = (_QWORD *)(v17 + 24 * a4);
      if (*v18 == v10)
      {
        if (v18[1] == a2 && v18[2] == a3)
          goto LABEL_20;
        result = sub_1C1070CB4();
        if ((result & 1) != 0)
          goto LABEL_20;
      }
      a4 = (a4 + 1) & v16;
    }
    while (((*(_QWORD *)(v15 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) != 0);
  }
LABEL_17:
  v20 = *v6;
  *(_QWORD *)(*v6 + 8 * (a4 >> 6) + 56) |= 1 << a4;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 24 * a4);
  *v21 = v10;
  v21[1] = a2;
  v21[2] = a3;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_20:
  result = sub_1C1070D38();
  __break(1u);
  return result;
}

void sub_1C0A86664(unsigned __int8 a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t *v13;
  char v14;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_1C0A82430();
    }
    else
    {
      if (v7 > v6)
      {
        sub_1C0A885F0(qword_1ED75D9A8);
        goto LABEL_10;
      }
      sub_1C0A8B21C();
    }
    v8 = *v3;
    sub_1C1070DF8();
    sub_1C07B3100(a1);
    sub_1C106FC28();
    swift_bridgeObjectRelease();
    a2 = sub_1C1070E4C() & ~(-1 << *(_BYTE *)(v8 + 32));
    if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
      __asm { BR              X9 }
  }
LABEL_10:
  v9 = *v13;
  *(_QWORD *)(*v13 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v9 + 48) + a2) = v14;
  v10 = *(_QWORD *)(v9 + 16);
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
  {
    __break(1u);
    JUMPOUT(0x1C0A86A08);
  }
  *(_QWORD *)(v9 + 16) = v12;
}

uint64_t sub_1C0A86A7C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_1C106D6CC();
  v7 = *(_QWORD *)(v6 - 8);
  v8.n128_f64[0] = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(*v3 + 16);
  v12 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v12 > v11 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_1C0A8048C();
  }
  else
  {
    if (v12 > v11)
    {
      sub_1C0A88E18();
      goto LABEL_12;
    }
    sub_1C0A893C8();
  }
  v13 = *v3;
  sub_1C0794BAC((unint64_t *)&qword_1ED744A48, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C130], MEMORY[0x1E0D3C148]);
  v14 = sub_1C106FA00();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v10, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_1C0794BAC(qword_1ED744A50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C130], MEMORY[0x1E0D3C150]);
      v19 = sub_1C106FAA8();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6, v8);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1C1070D38();
  __break(1u);
  return result;
}

uint64_t sub_1C0A86CD0(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_1C106E4AC();
  v7 = *(_QWORD *)(v6 - 8);
  v8.n128_f64[0] = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(*v3 + 16);
  v12 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v12 > v11 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_1C0A8048C();
  }
  else
  {
    if (v12 > v11)
    {
      sub_1C0A88E18();
      goto LABEL_12;
    }
    sub_1C0A893C8();
  }
  v13 = *v3;
  sub_1C0794BAC((unint64_t *)&qword_1ED7531C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CD48], MEMORY[0x1E0D3CD58]);
  v14 = sub_1C106FA00();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v10, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_1C0794BAC(qword_1ED753180, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CD48], MEMORY[0x1E0D3CD60]);
      v19 = sub_1C106FAA8();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6, v8);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1C1070D38();
  __break(1u);
  return result;
}

uint64_t sub_1C0A86F24(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_1C106F25C();
  v7 = *(_QWORD *)(v6 - 8);
  v8.n128_f64[0] = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(*v3 + 16);
  v12 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v12 > v11 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_1C0A8048C();
  }
  else
  {
    if (v12 > v11)
    {
      sub_1C0A88E18();
      goto LABEL_12;
    }
    sub_1C0A893C8();
  }
  v13 = *v3;
  sub_1C0794BAC(&qword_1EF639F68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3DE58], MEMORY[0x1E0D3DE68]);
  v14 = sub_1C106FA00();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v10, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_1C0794BAC(&qword_1EF639F70, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3DE58], MEMORY[0x1E0D3DE70]);
      v19 = sub_1C106FAA8();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6, v8);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1C1070D38();
  __break(1u);
  return result;
}

uint64_t sub_1C0A87178(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v24;
  _OWORD *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t *v32;
  __int128 *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE v41[32];

  v5 = (uint64_t *)result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  v33 = (__int128 *)result;
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_1C0A82E1C();
    }
    else
    {
      if (v7 > v6)
      {
        result = (uint64_t)sub_1C0A88938();
        goto LABEL_32;
      }
      sub_1C0A8B8B8();
    }
    v8 = *v3;
    sub_1C1070DF8();
    sub_1C0C92E80();
    result = sub_1C1070E4C();
    v9 = -1 << *(_BYTE *)(v8 + 32);
    a2 = result & ~v9;
    v36 = v8 + 56;
    if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
    {
      v35 = ~v9;
      v10 = *(_QWORD *)(v8 + 48);
      v34 = (uint64_t)(v5 + 4);
      v11 = *v5;
      v12 = v5[1];
      do
      {
        v13 = (uint64_t *)(v10 + (a2 << 6));
        result = *v13;
        v14 = v13[4];
        v15 = v13[5];
        v16 = v13[6];
        v17 = v13[7];
        if (*v13 == v11 && v13[1] == v12)
        {
          v19 = 1;
          if (!v15)
            goto LABEL_30;
        }
        else
        {
          result = sub_1C1070CB4();
          v19 = result;
          if (!v15)
            goto LABEL_30;
        }
        sub_1C0A8C9A4(v34, (uint64_t)v41);
        result = sub_1C0A8C9A4((uint64_t)v41, (uint64_t)&v37);
        if (!v38)
        {
LABEL_30:
          if ((v19 & 1) != 0)
            goto LABEL_35;
          goto LABEL_31;
        }
        if ((v19 & 1) != 0)
          goto LABEL_35;
        v21 = v39;
        v20 = v40;
        v22 = v14 == v37 && v15 == v38;
        if (v22 || (result = sub_1C1070CB4(), (result & 1) != 0))
        {
          if (v16 == v21 && v17 == v20)
            goto LABEL_35;
          result = sub_1C1070CB4();
          if ((result & 1) != 0)
            goto LABEL_35;
        }
LABEL_31:
        a2 = (a2 + 1) & v35;
      }
      while (((*(_QWORD *)(v36 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_32:
  v24 = *v32;
  *(_QWORD *)(*v32 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  v25 = (_OWORD *)(*(_QWORD *)(v24 + 48) + (a2 << 6));
  v26 = *v33;
  v27 = v33[1];
  v28 = v33[3];
  v25[2] = v33[2];
  v25[3] = v28;
  *v25 = v26;
  v25[1] = v27;
  v29 = *(_QWORD *)(v24 + 16);
  v30 = __OFADD__(v29, 1);
  v31 = v29 + 1;
  if (v30)
  {
    __break(1u);
LABEL_35:
    result = sub_1C1070D38();
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v24 + 16) = v31;
  }
  return result;
}

void sub_1C0A873A8()
{
  uint64_t *v0;
  uint64_t v1;
  void (*v2)(uint64_t *);
  void (*v3)(uint64_t *);
  char v4;
  char v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  BOOL v17;
  char v18;
  char v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  sub_1C0779670();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v35 = v10(0);
  v34 = *(_QWORD *)(v35 - 8);
  sub_1C078C94C();
  MEMORY[0x1E0C80A78](v11);
  sub_1C0A8D230();
  sub_1C07821B4();
  v33 = v0;
  if (!(!v17 & v14) || (v5 & 1) == 0)
  {
    if ((v5 & 1) != 0)
    {
      sub_1C0A83440();
    }
    else
    {
      if (v13 > v12)
      {
        sub_1C0A887E8();
        goto LABEL_41;
      }
      sub_1C0A8BC54();
    }
    v15 = *v0;
    sub_1C07AAEDC();
    v3(&v39);
    v7 = sub_1C077ED30() & ~(-1 << *(_BYTE *)(v15 + 32));
    sub_1C0A8D5E4();
    if ((v16 & 1) != 0)
    {
      v36 = *(_QWORD *)(v34 + 72);
      do
      {
        sub_1C0A8CF64(*(_QWORD *)(v15 + 48) + v36 * v7, v1);
        if ((sub_1C106E560() & 1) != 0)
        {
          sub_1C0779688();
          sub_1C0794BAC(&qword_1ED75E7E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC80]);
          sub_1C0A8CF30();
          sub_1C0A8CF30();
          v17 = v39 == v37 && v40 == v38;
          if (v17)
          {
            sub_1C0782990();
          }
          else
          {
            v18 = sub_1C07785B0();
            sub_1C077960C();
            sub_1C077E584();
            if ((v18 & 1) == 0)
              goto LABEL_40;
          }
          if ((sub_1C106EB00() & 1) != 0)
          {
            sub_1C0A8CF30();
            sub_1C0A8CF30();
            if (v39 == v37 && v40 == v38)
            {
              sub_1C0782990();
              v21 = (int *)v35;
            }
            else
            {
              v20 = sub_1C07785B0();
              sub_1C077960C();
              sub_1C0775894();
              v21 = (int *)v35;
              if ((v20 & 1) == 0)
                goto LABEL_40;
            }
            sub_1C07B1CE0();
            v24 = v17 && v22 == v23;
            if ((v24 || (sub_1C07785B0() & 1) != 0)
              && *(_QWORD *)(v1 + v21[9]) == *(_QWORD *)(v9 + v21[9])
              && *(double *)(v1 + v21[10]) == *(double *)(v9 + v21[10]))
            {
              sub_1C07B1CE0();
              v27 = v17 && v25 == v26;
              if ((v27 || (sub_1C07785B0() & 1) != 0) && *(double *)(v1 + v21[12]) == *(double *)(v9 + v21[12]))
                goto LABEL_44;
            }
          }
        }
LABEL_40:
        sub_1C078BA28(v1);
        sub_1C0A8D32C();
      }
      while (((*(_QWORD *)(v15 + 56 + v28) >> v7) & 1) != 0);
    }
  }
LABEL_41:
  v29 = *v33;
  *(_QWORD *)(*v33 + 8 * (v7 >> 6) + 56) |= 1 << v7;
  sub_1C0A8D17C(v9, *(_QWORD *)(v29 + 48) + *(_QWORD *)(v34 + 72) * v7);
  v30 = *(_QWORD *)(v29 + 16);
  v31 = __OFADD__(v30, 1);
  v32 = v30 + 1;
  if (v31)
  {
    __break(1u);
LABEL_44:
    sub_1C078BA28(v1);
    sub_1C1070D38();
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v29 + 16) = v32;
    sub_1C0776760();
  }
}

void sub_1C0A876F4()
{
  uint64_t *v0;
  void *v1;
  void *v2;
  unint64_t *v3;
  unint64_t *v4;
  char v5;
  uint64_t *v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;

  sub_1C0779670();
  v2 = v1;
  v4 = v3;
  sub_1C07821B4();
  if (!v10 & v9 && (v5 & 1) != 0)
    goto LABEL_15;
  if ((v5 & 1) != 0)
  {
    sub_1C0A8373C();
  }
  else
  {
    if (v8 > v7)
    {
      sub_1C0A88D30(v6);
      goto LABEL_15;
    }
    sub_1C0A8BF0C();
  }
  v11 = *v0;
  v12 = sub_1C1070510();
  v13 = -1 << *(_BYTE *)(v11 + 32);
  v14 = v12 & ~v13;
  sub_1C07950D8();
  if ((v15 & 1) != 0)
  {
    sub_1C07D4B70(0, v4);
    sub_1C0A8D5CC();
    v16 = sub_1C0A8D63C();

    if ((v16 & 1) != 0)
    {
LABEL_14:
      sub_1C1070D38();
      __break(1u);
    }
    else
    {
      v17 = ~v13;
      while (1)
      {
        v14 = (v14 + 1) & v17;
        sub_1C07950D8();
        if ((v18 & 1) == 0)
          break;
        sub_1C0A8D5CC();
        v19 = sub_1C0A8D63C();

        if ((v19 & 1) != 0)
          goto LABEL_14;
      }
    }
  }
LABEL_15:
  sub_1C078241C(*v0);
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v20 + 16) = v21;
    sub_1C0776760();
  }
}

uint64_t sub_1C0A87800(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_1C106D63C();
  v7 = *(_QWORD *)(v6 - 8);
  v8.n128_f64[0] = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(*v3 + 16);
  v12 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v12 > v11 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_1C0A8048C();
  }
  else
  {
    if (v12 > v11)
    {
      sub_1C0A88E18();
      goto LABEL_12;
    }
    sub_1C0A893C8();
  }
  v13 = *v3;
  sub_1C0794BAC(&qword_1EF6331B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3BFD8], MEMORY[0x1E0D3BFE8]);
  v14 = sub_1C106FA00();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v10, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_1C0794BAC(&qword_1EF639EE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3BFD8], MEMORY[0x1E0D3BFF0]);
      v19 = sub_1C106FAA8();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6, v8);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1C1070D38();
  __break(1u);
  return result;
}

uint64_t sub_1C0A87A54(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_1C0A83B18();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1C0A88F8C();
      goto LABEL_14;
    }
    sub_1C0A8C330();
  }
  v8 = *v3;
  sub_1C1070DF8();
  sub_1C1070E04();
  result = sub_1C1070E4C();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(_QWORD *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      type metadata accessor for BMDevicePlatform(0);
      result = sub_1C1070D38();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v10 + 8 * a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

void sub_1C0A87BA0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;

  sub_1C07ACF80(&qword_1ED762CE8);
  sub_1C07B7BA8();
  sub_1C07B04E8();
  if (!v6)
  {
LABEL_29:
    sub_1C07758C4();
    *v0 = v0;
    sub_1C077C798();
    return;
  }
  v7 = (void *)sub_1C079B6C8();
  if (v10)
    v11 = (unint64_t)v7 >= v9;
  else
    v11 = 1;
  if (v11)
    sub_1C078051C(v7, v8);
  sub_1C0793B84();
  if (!v5)
    goto LABEL_10;
LABEL_9:
  sub_1C077C3A0();
  while (1)
  {
    v18 = (_QWORD *)(*(_QWORD *)(v1 + 48) + 16 * v12);
    v19 = v18[1];
    v20 = (_QWORD *)(v0[6] + 16 * v12);
    *v20 = *v18;
    v20[1] = v19;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    if (v5)
      goto LABEL_9;
LABEL_10:
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v4 + 1 >= v3)
      goto LABEL_29;
    sub_1C0A8D524();
    if (!v13)
    {
      sub_1C0A8D46C();
      if (v14 == v15)
        goto LABEL_29;
      if (!*(_QWORD *)(v2 + 8 * v4))
      {
        sub_1C0A8D460();
        if (v14 == v15)
          goto LABEL_29;
        if (!*(_QWORD *)(v2 + 8 * v4))
          break;
      }
    }
LABEL_26:
    sub_1C07816B8();
  }
  sub_1C0A8D3D0();
  if (v14 == v15)
    goto LABEL_29;
  if (*(_QWORD *)(v2 + 8 * v16))
  {
    v4 = v16;
    goto LABEL_26;
  }
  while (1)
  {
    v4 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v4 >= v3)
      goto LABEL_29;
    sub_1C0A8D698();
    if (v17)
      goto LABEL_26;
  }
LABEL_31:
  __break(1u);
}

void sub_1C0A87C9C()
{
  sub_1C0A88E18();
}

void *sub_1C0A87CB0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;

  v1 = v0;
  sub_1C07ACF80(&qword_1EF639EE0);
  v2 = *v0;
  v3 = sub_1C1070720();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    v20 = 3 * i;
    v21 = *(_QWORD *)(v2 + 48) + 16 * v20;
    v22 = *(_QWORD *)v21;
    v23 = *(_QWORD *)(v21 + 8);
    v24 = *(_QWORD *)(v21 + 16);
    v25 = *(_QWORD *)(v21 + 24);
    v26 = *(_QWORD *)(v21 + 32);
    v27 = *(_QWORD *)(v4 + 48) + 16 * v20;
    v28 = *(_BYTE *)(v21 + 40);
    *(_QWORD *)v27 = *(_QWORD *)v21;
    *(_QWORD *)(v27 + 8) = v23;
    *(_QWORD *)(v27 + 16) = v24;
    *(_QWORD *)(v27 + 24) = v25;
    *(_QWORD *)(v27 + 32) = v26;
    *(_BYTE *)(v27 + 40) = v28;
    result = (void *)sub_1C0826EB0(v22, v23, v24, v25, v26, v28);
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_1C0A87E7C()
{
  sub_1C0A88344(&qword_1ED7601A0);
}

void sub_1C0A87E88()
{
  sub_1C0A88E18();
}

void sub_1C0A87E9C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;

  sub_1C07ACF80(&qword_1ED758E00);
  sub_1C07B7BA8();
  sub_1C07B04E8();
  if (!v6)
  {
LABEL_29:
    sub_1C07758C4();
    *v0 = v0;
    sub_1C077C798();
    return;
  }
  v7 = (void *)sub_1C079B6C8();
  if (v10)
    v11 = (unint64_t)v7 >= v9;
  else
    v11 = 1;
  if (v11)
    sub_1C078051C(v7, v8);
  sub_1C0793B84();
  if (!v5)
    goto LABEL_10;
LABEL_9:
  sub_1C077C3A0();
  while (1)
  {
    v18 = *(_QWORD *)(v1 + 48) + 16 * v12;
    v19 = *(_QWORD *)v18;
    v20 = *(_BYTE *)(v18 + 8);
    v21 = v0[6] + 16 * v12;
    *(_QWORD *)v21 = *(_QWORD *)v18;
    *(_BYTE *)(v21 + 8) = v20;
    sub_1C084BCD4(v19, v20);
    if (v5)
      goto LABEL_9;
LABEL_10:
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v4 + 1 >= v3)
      goto LABEL_29;
    sub_1C0A8D524();
    if (!v13)
    {
      sub_1C0A8D46C();
      if (v14 == v15)
        goto LABEL_29;
      if (!*(_QWORD *)(v2 + 8 * v4))
      {
        sub_1C0A8D460();
        if (v14 == v15)
          goto LABEL_29;
        if (!*(_QWORD *)(v2 + 8 * v4))
          break;
      }
    }
LABEL_26:
    sub_1C07816B8();
  }
  sub_1C0A8D3D0();
  if (v14 == v15)
    goto LABEL_29;
  if (*(_QWORD *)(v2 + 8 * v16))
  {
    v4 = v16;
    goto LABEL_26;
  }
  while (1)
  {
    v4 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v4 >= v3)
      goto LABEL_29;
    sub_1C0A8D698();
    if (v17)
      goto LABEL_26;
  }
LABEL_31:
  __break(1u);
}

void sub_1C0A87FA0()
{
  sub_1C0A88E18();
}

void sub_1C0A87FB4()
{
  sub_1C0A885F0(&qword_1ED7462E0);
}

void *sub_1C0A87FC0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  sub_1C07ACF80(&qword_1EF639ED8);
  v2 = *v0;
  v3 = sub_1C1070720();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  if (!v12)
    goto LABEL_12;
LABEL_11:
  v14 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (i = v14 | (v9 << 6); ; i = __clz(__rbit64(v17)) + (v9 << 6))
  {
    *(_DWORD *)(*(_QWORD *)(v4 + 48) + 4 * i) = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * i);
    if (v12)
      goto LABEL_11;
LABEL_12:
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_25:
    v12 = (v17 - 1) & v17;
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C0A88154()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  int v28;
  uint64_t v29;

  v1 = v0;
  sub_1C07ACF80(&qword_1ED7512F8);
  v2 = *v0;
  v3 = sub_1C1070720();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    v20 = 56 * i;
    v21 = *(_QWORD *)(v2 + 48) + v20;
    v22 = *(_QWORD *)(v21 + 8);
    v23 = *(_QWORD *)(v21 + 16);
    v24 = *(_QWORD *)(v21 + 24);
    v25 = *(_QWORD *)(v21 + 32);
    v26 = *(_QWORD *)(v21 + 40);
    v27 = *(_BYTE *)(v21 + 48);
    v28 = *(_DWORD *)(v21 + 52);
    v29 = *(_QWORD *)(v4 + 48) + v20;
    *(_QWORD *)v29 = *(_QWORD *)v21;
    *(_QWORD *)(v29 + 8) = v22;
    *(_QWORD *)(v29 + 16) = v23;
    *(_QWORD *)(v29 + 24) = v24;
    *(_QWORD *)(v29 + 32) = v25;
    *(_QWORD *)(v29 + 40) = v26;
    *(_BYTE *)(v29 + 48) = v27;
    *(_DWORD *)(v29 + 52) = v28;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    result = (void *)_s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_1C0A88344(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1C0A8D668(a1);
  sub_1C07B7BA8();
  sub_1C07B04E8();
  if (v5)
  {
    v6 = (void *)sub_1C079B6C8();
    if (v9)
      v10 = (unint64_t)v6 >= v8;
    else
      v10 = 1;
    if (v10)
      sub_1C078051C(v6, v7);
    sub_1C0A8CD8C();
    if (!v13)
      goto LABEL_10;
LABEL_9:
    sub_1C0A8D3DC();
    while (1)
    {
      *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v15);
      if (v14)
        goto LABEL_9;
LABEL_10:
      v16 = v12 + 1;
      if (__OFADD__(v12, 1))
      {
        __break(1u);
        goto LABEL_27;
      }
      if (v16 >= v11)
        goto LABEL_25;
      if (!*(_QWORD *)(v4 + 8 * v16))
      {
        if (v12 + 2 >= v11)
          goto LABEL_25;
        if (!*(_QWORD *)(v4 + 8 * (v12 + 2)))
        {
          if (v12 + 3 >= v11)
            goto LABEL_25;
          if (!*(_QWORD *)(v4 + 8 * (v12 + 3)))
          {
            v17 = v12 + 4;
            if (v12 + 4 >= v11)
              goto LABEL_25;
            if (!*(_QWORD *)(v4 + 8 * v17))
              break;
          }
        }
      }
LABEL_22:
      sub_1C07BA628();
    }
    while (1)
    {
      v18 = v17 + 1;
      if (__OFADD__(v17, 1))
        break;
      if (v18 >= v11)
        goto LABEL_25;
      ++v17;
      if (*(_QWORD *)(v4 + 8 * v18))
        goto LABEL_22;
    }
LABEL_27:
    __break(1u);
  }
  else
  {
LABEL_25:
    sub_1C07758C4();
    *v1 = v2;
    sub_1C077671C();
  }
}

void *sub_1C0A88434()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = v0;
  sub_1C07ACF80(&qword_1ED7537B8);
  v2 = *v0;
  v3 = sub_1C1070720();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    v20 = 3 * i;
    v21 = *(_QWORD *)(v2 + 48) + 8 * v20;
    v22 = *(_QWORD *)(v21 + 16);
    v23 = *(_QWORD *)(v4 + 48) + 8 * v20;
    *(_OWORD *)v23 = *(_OWORD *)v21;
    *(_QWORD *)(v23 + 16) = v22;
    result = (void *)_s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_1C0A885F0(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1C0A8D668(a1);
  sub_1C07B7BA8();
  sub_1C07B04E8();
  if (v5)
  {
    v6 = (void *)sub_1C079B6C8();
    if (v9)
      v10 = (unint64_t)v6 >= v8;
    else
      v10 = 1;
    if (v10)
      sub_1C078051C(v6, v7);
    sub_1C0A8CD8C();
    if (!v13)
      goto LABEL_10;
LABEL_9:
    sub_1C0A8D3DC();
    while (1)
    {
      *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v3 + 48) + v15);
      if (v14)
        goto LABEL_9;
LABEL_10:
      v16 = v12 + 1;
      if (__OFADD__(v12, 1))
      {
        __break(1u);
        goto LABEL_27;
      }
      if (v16 >= v11)
        goto LABEL_25;
      if (!*(_QWORD *)(v4 + 8 * v16))
      {
        if (v12 + 2 >= v11)
          goto LABEL_25;
        if (!*(_QWORD *)(v4 + 8 * (v12 + 2)))
        {
          if (v12 + 3 >= v11)
            goto LABEL_25;
          if (!*(_QWORD *)(v4 + 8 * (v12 + 3)))
          {
            v17 = v12 + 4;
            if (v12 + 4 >= v11)
              goto LABEL_25;
            if (!*(_QWORD *)(v4 + 8 * v17))
              break;
          }
        }
      }
LABEL_22:
      sub_1C07BA628();
    }
    while (1)
    {
      v18 = v17 + 1;
      if (__OFADD__(v17, 1))
        break;
      if (v18 >= v11)
        goto LABEL_25;
      ++v17;
      if (*(_QWORD *)(v4 + 8 * v18))
        goto LABEL_22;
    }
LABEL_27:
    __break(1u);
  }
  else
  {
LABEL_25:
    sub_1C07758C4();
    *v1 = v2;
    sub_1C077671C();
  }
}

void sub_1C0A886E0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;

  sub_1C07ACF80(&qword_1EF639F58);
  sub_1C07B7BA8();
  sub_1C07B04E8();
  if (!v6)
  {
LABEL_29:
    sub_1C07758C4();
    *v0 = v0;
    sub_1C077C798();
    return;
  }
  v7 = (void *)sub_1C079B6C8();
  if (v10)
    v11 = (unint64_t)v7 >= v9;
  else
    v11 = 1;
  if (v11)
    sub_1C078051C(v7, v8);
  sub_1C0793B84();
  if (!v5)
    goto LABEL_10;
LABEL_9:
  sub_1C077C3A0();
  while (1)
  {
    *(_QWORD *)(v0[6] + 8 * v12) = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v12);
    swift_retain();
    if (v5)
      goto LABEL_9;
LABEL_10:
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v4 + 1 >= v3)
      goto LABEL_29;
    sub_1C0A8D524();
    if (!v13)
    {
      sub_1C0A8D46C();
      if (v14 == v15)
        goto LABEL_29;
      if (!*(_QWORD *)(v2 + 8 * v4))
      {
        sub_1C0A8D460();
        if (v14 == v15)
          goto LABEL_29;
        if (!*(_QWORD *)(v2 + 8 * v4))
          break;
      }
    }
LABEL_26:
    sub_1C07816B8();
  }
  sub_1C0A8D3D0();
  if (v14 == v15)
    goto LABEL_29;
  if (*(_QWORD *)(v2 + 8 * v16))
  {
    v4 = v16;
    goto LABEL_26;
  }
  while (1)
  {
    v4 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v4 >= v3)
      goto LABEL_29;
    sub_1C0A8D698();
    if (v17)
      goto LABEL_26;
  }
LABEL_31:
  __break(1u);
}

void sub_1C0A887D4()
{
  sub_1C0A887E8();
}

void sub_1C0A887E8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);
  uint64_t (*v9)(_QWORD);
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t *v25;

  sub_1C0779670();
  v7 = v6;
  v9 = v8;
  v10 = v0;
  v11 = *(_QWORD *)(v8(0) - 8);
  sub_1C078C94C();
  MEMORY[0x1E0C80A78](v12);
  sub_1C0A8D124();
  v13 = sub_1C0A8D210();
  if (!*(_QWORD *)(v7 + 16))
  {
    sub_1C07767F4();
LABEL_29:
    *v10 = v13;
    sub_1C0776760();
    return;
  }
  v14 = (void *)sub_1C07B6948();
  if (v17)
    v18 = (unint64_t)v14 >= v16;
  else
    v18 = 1;
  if (v18)
    sub_1C0A8D6B0(v14, v15);
  sub_1C07B6248();
  if (!v5)
    goto LABEL_10;
LABEL_9:
  sub_1C077A2E8();
  while (1)
  {
    v24 = *(_QWORD *)(v11 + 72) * v19;
    sub_1C0A8CC94(*(_QWORD *)(v7 + 48) + v24, v1, v9);
    sub_1C0A8D67C(v1, *(_QWORD *)(v13 + 48) + v24);
    if (v5)
      goto LABEL_9;
LABEL_10:
    v20 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v20 >= v3)
      goto LABEL_27;
    ++v4;
    if (!*(_QWORD *)(v2 + 8 * v20))
    {
      v4 = v20 + 1;
      if (v20 + 1 >= v3)
        goto LABEL_27;
      if (!*(_QWORD *)(v2 + 8 * v4))
      {
        v4 = v20 + 2;
        if (v20 + 2 >= v3)
          goto LABEL_27;
        if (!*(_QWORD *)(v2 + 8 * v4))
          break;
      }
    }
LABEL_24:
    sub_1C07AF4A0();
  }
  sub_1C0A8D3C4();
  if (v22 == v23)
  {
LABEL_27:
    sub_1C07767F4();
    v10 = v25;
    goto LABEL_29;
  }
  if (*(_QWORD *)(v2 + 8 * v21))
  {
    v4 = v21;
    goto LABEL_24;
  }
  while (1)
  {
    v4 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v4 >= v3)
      goto LABEL_27;
    ++v21;
    if (*(_QWORD *)(v2 + 8 * v4))
      goto LABEL_24;
  }
LABEL_31:
  __break(1u);
}

void *sub_1C0A88938()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *result;
  unint64_t v5;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t i;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  void *__src;

  sub_1C07ACF80(&qword_1ED7512F0);
  v27 = v0;
  v1 = *v0;
  v2 = sub_1C1070720();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v27 = v3;
    return result;
  }
  result = (void *)(v2 + 56);
  v5 = (unint64_t)((1 << *(_BYTE *)(v3 + 32)) + 63) >> 6;
  __src = (void *)(v1 + 56);
  if (v3 != v1 || (unint64_t)result >= v1 + 56 + 8 * v5)
    result = memmove(result, __src, 8 * v5);
  v7 = 0;
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v1 + 16);
  v8 = 1 << *(_BYTE *)(v1 + 32);
  v9 = *(_QWORD *)(v1 + 56);
  v10 = -1;
  if (v8 < 64)
    v10 = ~(-1 << v8);
  v11 = v10 & v9;
  v12 = (unint64_t)(v8 + 63) >> 6;
  if ((v10 & v9) == 0)
    goto LABEL_12;
LABEL_11:
  v13 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (i = v13 | (v7 << 6); ; i = __clz(__rbit64(v16)) + (v7 << 6))
  {
    v18 = (_QWORD *)(*(_QWORD *)(v1 + 48) + (i << 6));
    v19 = v18[1];
    v20 = v18[2];
    v21 = v18[3];
    v22 = v18[4];
    v23 = v18[5];
    v24 = v18[6];
    v25 = v18[7];
    v26 = (_QWORD *)(*(_QWORD *)(v3 + 48) + (i << 6));
    *v26 = *v18;
    v26[1] = v19;
    v26[2] = v20;
    v26[3] = v21;
    v26[4] = v22;
    v26[5] = v23;
    v26[6] = v24;
    v26[7] = v25;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    result = (void *)sub_1C080E9A0(v22, v23);
    if (v11)
      goto LABEL_11;
LABEL_12:
    v15 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v15 >= v12)
      goto LABEL_28;
    v16 = *((_QWORD *)__src + v15);
    ++v7;
    if (!v16)
    {
      v7 = v15 + 1;
      if (v15 + 1 >= v12)
        goto LABEL_28;
      v16 = *((_QWORD *)__src + v7);
      if (!v16)
      {
        v7 = v15 + 2;
        if (v15 + 2 >= v12)
          goto LABEL_28;
        v16 = *((_QWORD *)__src + v7);
        if (!v16)
          break;
      }
    }
LABEL_25:
    v11 = (v16 - 1) & v16;
  }
  v17 = v15 + 3;
  if (v17 >= v12)
    goto LABEL_28;
  v16 = *((_QWORD *)__src + v17);
  if (v16)
  {
    v7 = v17;
    goto LABEL_25;
  }
  while (1)
  {
    v7 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v7 >= v12)
      goto LABEL_28;
    v16 = *((_QWORD *)__src + v7);
    ++v17;
    if (v16)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C0A88B4C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  sub_1C07ACF80(&qword_1ED740EB0);
  v2 = *v0;
  v3 = sub_1C1070720();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  if (!v12)
    goto LABEL_12;
LABEL_11:
  v14 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (i = v14 | (v9 << 6); ; i = __clz(__rbit64(v17)) + (v9 << 6))
  {
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + i) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + i);
    if (v12)
      goto LABEL_11;
LABEL_12:
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_25:
    v12 = (v17 - 1) & v17;
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_1C0A88CE0()
{
  sub_1C0A887E8();
}

void sub_1C0A88CF4()
{
  sub_1C0A887E8();
}

void sub_1C0A88D08()
{
  sub_1C0A887E8();
}

void sub_1C0A88D1C()
{
  sub_1C0A887E8();
}

void sub_1C0A88D30(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;

  sub_1C0A8D668(a1);
  sub_1C07B7BA8();
  sub_1C07B04E8();
  if (!v8)
  {
LABEL_29:
    sub_1C07758C4();
    *v1 = v2;
    sub_1C077C798();
    return;
  }
  v9 = (void *)sub_1C079B6C8();
  if (v12)
    v13 = (unint64_t)v9 >= v11;
  else
    v13 = 1;
  if (v13)
    sub_1C078051C(v9, v10);
  sub_1C0793B84();
  if (!v7)
    goto LABEL_10;
LABEL_9:
  sub_1C077C3A0();
  while (1)
  {
    v20 = *(void **)(*(_QWORD *)(v3 + 48) + 8 * v14);
    *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14) = v20;
    v21 = v20;
    if (v7)
      goto LABEL_9;
LABEL_10:
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v6 + 1 >= v5)
      goto LABEL_29;
    sub_1C0A8D524();
    if (!v15)
    {
      sub_1C0A8D46C();
      if (v16 == v17)
        goto LABEL_29;
      if (!*(_QWORD *)(v4 + 8 * v6))
      {
        sub_1C0A8D460();
        if (v16 == v17)
          goto LABEL_29;
        if (!*(_QWORD *)(v4 + 8 * v6))
          break;
      }
    }
LABEL_26:
    sub_1C07816B8();
  }
  sub_1C0A8D3D0();
  if (v16 == v17)
    goto LABEL_29;
  if (*(_QWORD *)(v4 + 8 * v18))
  {
    v6 = v18;
    goto LABEL_26;
  }
  while (1)
  {
    v6 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v6 >= v5)
      goto LABEL_29;
    sub_1C0A8D698();
    if (v19)
      goto LABEL_26;
  }
LABEL_31:
  __break(1u);
}

void sub_1C0A88E18()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t *v25;

  sub_1C0779670();
  v7 = v6;
  v8 = v0;
  v10 = v9(0);
  v11 = *(_QWORD *)(v10 - 8);
  sub_1C078C94C();
  MEMORY[0x1E0C80A78](v12);
  sub_1C0A8D124();
  v13 = sub_1C0A8D210();
  if (!*(_QWORD *)(v7 + 16))
  {
    sub_1C07767F4();
LABEL_29:
    *v8 = v13;
    sub_1C0776760();
    return;
  }
  v14 = (void *)sub_1C07B6948();
  if (v17)
    v18 = (unint64_t)v14 >= v16;
  else
    v18 = 1;
  if (v18)
    sub_1C0A8D6B0(v14, v15);
  sub_1C07B6248();
  if (!v5)
    goto LABEL_10;
LABEL_9:
  sub_1C077A2E8();
  while (1)
  {
    v24 = *(_QWORD *)(v11 + 72) * v19;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v1, *(_QWORD *)(v7 + 48) + v24, v10);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(*(_QWORD *)(v13 + 48) + v24, v1, v10);
    if (v5)
      goto LABEL_9;
LABEL_10:
    v20 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v20 >= v3)
      goto LABEL_27;
    ++v4;
    if (!*(_QWORD *)(v2 + 8 * v20))
    {
      v4 = v20 + 1;
      if (v20 + 1 >= v3)
        goto LABEL_27;
      if (!*(_QWORD *)(v2 + 8 * v4))
      {
        v4 = v20 + 2;
        if (v20 + 2 >= v3)
          goto LABEL_27;
        if (!*(_QWORD *)(v2 + 8 * v4))
          break;
      }
    }
LABEL_24:
    sub_1C07AF4A0();
  }
  sub_1C0A8D3C4();
  if (v22 == v23)
  {
LABEL_27:
    sub_1C07767F4();
    v8 = v25;
    goto LABEL_29;
  }
  if (*(_QWORD *)(v2 + 8 * v21))
  {
    v4 = v21;
    goto LABEL_24;
  }
  while (1)
  {
    v4 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v4 >= v3)
      goto LABEL_27;
    ++v21;
    if (*(_QWORD *)(v2 + 8 * v4))
      goto LABEL_24;
  }
LABEL_31:
  __break(1u);
}

void sub_1C0A88F78()
{
  sub_1C0A887E8();
}

void *sub_1C0A88F8C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  sub_1C07ACF80(&qword_1EF639EF8);
  v2 = *v0;
  v3 = sub_1C1070720();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  if (!v12)
    goto LABEL_12;
LABEL_11:
  v14 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (i = v14 | (v9 << 6); ; i = __clz(__rbit64(v17)) + (v9 << 6))
  {
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * i) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i);
    if (v12)
      goto LABEL_11;
LABEL_12:
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_25:
    v12 = (v17 - 1) & v17;
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1C0A89120()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  sub_1C07ACF80(&qword_1ED762CE8);
  v3 = sub_1C107072C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  if (!v8)
    goto LABEL_7;
LABEL_6:
  v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
    v18 = *v17;
    v19 = v17[1];
    sub_1C1070DF8();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C106FC28();
    result = sub_1C1070E4C();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6))) == 0)
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v9 + 8 * v22);
        if (v27 != -1)
        {
          v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++*(_QWORD *)(v4 + 16);
    if (v8)
      goto LABEL_6;
LABEL_7:
    v14 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_36;
    if (v14 >= v29)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v14);
    ++v11;
    if (!v15)
    {
      v11 = v14 + 1;
      if (v14 + 1 >= v29)
        goto LABEL_32;
      v15 = *(_QWORD *)(v6 + 8 * v11);
      if (!v15)
      {
        v11 = v14 + 2;
        if (v14 + 2 >= v29)
          goto LABEL_32;
        v15 = *(_QWORD *)(v6 + 8 * v11);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v8 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_32:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_34;
  }
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
  {
    v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v11 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v11 >= v29)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v11);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_1C0A893C8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t i;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  sub_1C0779670();
  v42 = v1;
  v43 = v2;
  v4 = v3;
  v5 = v0;
  v8 = sub_1C0A8D220(v6, v7);
  v9 = *(_QWORD *)(v8 - 8);
  sub_1C078C94C();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v39 - v11;
  v13 = *v0;
  sub_1C0A8D0A0();
  sub_1C07ACF80(v4);
  v14 = sub_1C079BEE4();
  if (!*(_QWORD *)(v13 + 16))
  {
    swift_release();
LABEL_32:
    *v5 = v14;
    sub_1C0776760();
    return;
  }
  sub_1C0A8D1C8();
  v39 = v0;
  v40 = v13 + 56;
  sub_1C0779DF0();
  v17 = v16 & v15;
  sub_1C0A4DB48();
  v41 = v18;
  v19 = v14 + 56;
  swift_retain();
  v20 = 0;
  if (!v17)
    goto LABEL_4;
LABEL_3:
  sub_1C07A9558();
  for (i = v21 | (v20 << 6); ; i = v27 + (v20 << 6))
  {
    v28 = *(_QWORD *)(v9 + 72);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, *(_QWORD *)(v13 + 48) + v28 * i, v8);
    sub_1C0A8D714();
    sub_1C106FA00();
    sub_1C07BC2B8();
    if (((v31 << v30) & ~*(_QWORD *)(v19 + 8 * v29)) == 0)
    {
      sub_1C0797B50();
      while (1)
      {
        sub_1C0793670();
        if (v35)
        {
          if ((v32 & 1) != 0)
            break;
        }
        if (v33 == v34)
          v33 = 0;
        if (*(_QWORD *)(v19 + 8 * v33) != -1)
        {
          sub_1C0791970();
          goto LABEL_28;
        }
      }
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    sub_1C0792CBC();
LABEL_28:
    sub_1C0786D70();
    *(_QWORD *)(v19 + v36) |= v37;
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(*(_QWORD *)(v14 + 48) + v38 * v28, v12, v8);
    sub_1C078934C();
    if (v17)
      goto LABEL_3;
LABEL_4:
    if (__OFADD__(v20, 1))
      goto LABEL_34;
    if (v20 + 1 >= v41)
      goto LABEL_30;
    sub_1C0A8D478();
    v20 = v23;
    if (!v24)
    {
      v20 = v23 + 1;
      if (v23 + 1 >= v41)
        goto LABEL_30;
      if (!*(_QWORD *)(v40 + 8 * v20))
      {
        v20 = v23 + 2;
        if (v23 + 2 >= v41)
          goto LABEL_30;
        if (!*(_QWORD *)(v40 + 8 * v20))
          break;
      }
    }
LABEL_17:
    sub_1C07BFDD4();
  }
  if (v23 + 3 >= v41)
  {
LABEL_30:
    sub_1C07878F0();
    v5 = v39;
    goto LABEL_32;
  }
  sub_1C0A8D478();
  if (v26)
  {
    v20 = v25;
    goto LABEL_17;
  }
  while (1)
  {
    v20 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v20 >= v41)
      goto LABEL_30;
    ++v25;
    if (*(_QWORD *)(v40 + 8 * v20))
      goto LABEL_17;
  }
LABEL_35:
  __break(1u);
}

uint64_t sub_1C0A89618()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  BOOL v23;
  uint64_t v24;
  char v25[72];
  _BYTE v26[48];

  v1 = *v0;
  sub_1C07ACF80(&qword_1EF639EE0);
  v2 = sub_1C107072C();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
    result = swift_release();
LABEL_34:
    *v0 = v3;
    return result;
  }
  v4 = 1 << *(_BYTE *)(v1 + 32);
  v5 = v1 + 56;
  if (v4 < 64)
    v6 = ~(-1 << v4);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v1 + 56);
  v8 = (unint64_t)(v4 + 63) >> 6;
  v9 = v2 + 56;
  result = swift_retain();
  v11 = 0;
  if (!v7)
    goto LABEL_7;
LABEL_6:
  v12 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    sub_1C07DFF44(*(_QWORD *)(v1 + 48) + 48 * i, (uint64_t)v26);
    sub_1C1070DF8();
    sub_1C08384CC((uint64_t)v26, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826EB0);
    sub_1C0825418((uint64_t)v25);
    result = sub_1C1070E4C();
    v17 = -1 << *(_BYTE *)(v3 + 32);
    v18 = result & ~v17;
    v19 = v18 >> 6;
    if (((-1 << v18) & ~*(_QWORD *)(v9 + 8 * (v18 >> 6))) == 0)
    {
      v21 = 0;
      v22 = (unint64_t)(63 - v17) >> 6;
      while (++v19 != v22 || (v21 & 1) == 0)
      {
        v23 = v19 == v22;
        if (v19 == v22)
          v19 = 0;
        v21 |= v23;
        v24 = *(_QWORD *)(v9 + 8 * v19);
        if (v24 != -1)
        {
          v20 = __clz(__rbit64(~v24)) + (v19 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v20 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v9 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v9 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    result = sub_1C07DFF44((uint64_t)v26, *(_QWORD *)(v3 + 48) + 48 * v20);
    ++*(_QWORD *)(v3 + 16);
    if (v7)
      goto LABEL_6;
LABEL_7:
    v14 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_36;
    if (v14 >= v8)
      goto LABEL_32;
    v15 = *(_QWORD *)(v5 + 8 * v14);
    ++v11;
    if (!v15)
    {
      v11 = v14 + 1;
      if (v14 + 1 >= v8)
        goto LABEL_32;
      v15 = *(_QWORD *)(v5 + 8 * v11);
      if (!v15)
      {
        v11 = v14 + 2;
        if (v14 + 2 >= v8)
          goto LABEL_32;
        v15 = *(_QWORD *)(v5 + 8 * v11);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v7 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 >= v8)
  {
LABEL_32:
    result = swift_release_n();
    goto LABEL_34;
  }
  v15 = *(_QWORD *)(v5 + 8 * v16);
  if (v15)
  {
    v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v11 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v11 >= v8)
      goto LABEL_32;
    v15 = *(_QWORD *)(v5 + 8 * v11);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C0A898BC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v1 = v0;
  v2 = *v0;
  sub_1C07ACF80(&qword_1ED7462E8);
  v3 = sub_1C107072C();
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
    goto LABEL_23;
  }
  v4 = 1 << *(_BYTE *)(v2 + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v2 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_retain();
  if (v6)
  {
    v8 = __clz(__rbit64(v6));
    goto LABEL_20;
  }
  if (v7 > 1)
  {
    v9 = *(_QWORD *)(v2 + 64);
    v10 = 1;
    if (v9)
      goto LABEL_19;
    v10 = 2;
    if (v7 > 2)
    {
      v9 = *(_QWORD *)(v2 + 72);
      if (v9)
        goto LABEL_19;
      v10 = 3;
      if (v7 > 3)
      {
        v9 = *(_QWORD *)(v2 + 80);
        if (!v9)
        {
          v11 = 4;
          if (v7 > 4)
          {
            v9 = *(_QWORD *)(v2 + 88);
            if (v9)
            {
              v10 = 4;
              goto LABEL_19;
            }
            while (1)
            {
              v10 = v11 + 1;
              if (__OFADD__(v11, 1))
              {
                __break(1u);
                JUMPOUT(0x1C0A89CD0);
              }
              if (v10 >= v7)
                break;
              v9 = *(_QWORD *)(v2 + 56 + 8 * v10);
              ++v11;
              if (v9)
                goto LABEL_19;
            }
          }
          goto LABEL_21;
        }
LABEL_19:
        v8 = __clz(__rbit64(v9)) + (v10 << 6);
LABEL_20:
        v12 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + v8);
        sub_1C1070DF8();
        __asm { BR              X8 }
      }
    }
  }
LABEL_21:
  result = swift_release_n();
  v1 = v0;
LABEL_23:
  *v1 = v3;
  return result;
}

void sub_1C0A89D04()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;

  sub_1C078C1B4();
  sub_1C0A8D3F4();
  sub_1C07ACF80(&qword_1ED758E00);
  v2 = sub_1C079BEE4();
  if (!v1[2])
  {
    sub_1C07767F4();
    goto LABEL_23;
  }
  v13 = v0;
  sub_1C0A8D1C8();
  if (v3 < 64)
    v4 = ~(-1 << v3);
  else
    v4 = -1;
  v5 = v4 & v1[7];
  sub_1C0A4DB48();
  v14 = v6;
  sub_1C077C14C();
  if (v5)
  {
    sub_1C07A31AC();
LABEL_20:
    v11 = *(unsigned __int8 *)(v1[6] + 16 * v7 + 8);
    v12 = sub_1C0A8D0D8();
    ((void (*)(uint64_t))((char *)&loc_1C0A89E44 + dword_1C0A8A0F4[v11]))(v12);
    return;
  }
  if (v14 > 1)
  {
    v8 = 1;
    if (v1[8])
      goto LABEL_19;
    v8 = 2;
    if (v14 > 2)
    {
      if (v1[9])
        goto LABEL_19;
      v8 = 3;
      if (v14 > 3)
      {
        if (!v1[10])
        {
          v9 = 4;
          if (v14 > 4)
          {
            if (v1[11])
            {
              v8 = 4;
              goto LABEL_19;
            }
            while (1)
            {
              v8 = v9 + 1;
              if (__OFADD__(v9, 1))
              {
                __break(1u);
                JUMPOUT(0x1C0A8A0F4);
              }
              if (v8 >= v14)
                break;
              ++v9;
              if (v1[v8 + 7])
                goto LABEL_19;
            }
          }
          goto LABEL_21;
        }
LABEL_19:
        sub_1C0A8D020();
        v7 = v10 + (v8 << 6);
        goto LABEL_20;
      }
    }
  }
LABEL_21:
  sub_1C07878F0();
  v0 = v13;
LABEL_23:
  *v0 = v2;
  sub_1C078C198();
}

void sub_1C0A8A19C()
{
  sub_1C0A893C8();
}

uint64_t sub_1C0A8A1C0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v1 = *v0;
  sub_1C07ACF80(&qword_1ED7462E0);
  v2 = sub_1C107072C();
  if (!*(_QWORD *)(v1 + 16))
  {
    result = swift_release();
    goto LABEL_23;
  }
  v3 = 1 << *(_BYTE *)(v1 + 32);
  if (v3 < 64)
    v4 = ~(-1 << v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 56);
  v6 = (unint64_t)(v3 + 63) >> 6;
  swift_retain();
  if (v5)
  {
    v7 = __clz(__rbit64(v5));
    goto LABEL_20;
  }
  if (v6 > 1)
  {
    v8 = *(_QWORD *)(v1 + 64);
    v9 = 1;
    if (v8)
      goto LABEL_19;
    v9 = 2;
    if (v6 > 2)
    {
      v8 = *(_QWORD *)(v1 + 72);
      if (v8)
        goto LABEL_19;
      v9 = 3;
      if (v6 > 3)
      {
        v8 = *(_QWORD *)(v1 + 80);
        if (!v8)
        {
          v10 = 4;
          if (v6 > 4)
          {
            v8 = *(_QWORD *)(v1 + 88);
            if (v8)
            {
              v9 = 4;
              goto LABEL_19;
            }
            while (1)
            {
              v9 = v10 + 1;
              if (__OFADD__(v10, 1))
              {
                __break(1u);
                JUMPOUT(0x1C0A8A534);
              }
              if (v9 >= v6)
                break;
              v8 = *(_QWORD *)(v1 + 56 + 8 * v9);
              ++v10;
              if (v8)
                goto LABEL_19;
            }
          }
          goto LABEL_21;
        }
LABEL_19:
        v7 = __clz(__rbit64(v8)) + (v9 << 6);
LABEL_20:
        v11 = *(unsigned __int8 *)(*(_QWORD *)(v1 + 48) + v7);
        sub_1C1070DF8();
        __asm { BR              X8 }
      }
    }
  }
LABEL_21:
  result = swift_release_n();
LABEL_23:
  *v0 = v2;
  return result;
}

uint64_t sub_1C0A8A550()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  unsigned int v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;

  v1 = v0;
  v2 = *v0;
  sub_1C07ACF80(&qword_1EF639ED8);
  result = sub_1C107072C();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v26 = v1;
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  if (!v9)
    goto LABEL_7;
LABEL_6:
  v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (i = v12 | (v5 << 6); ; i = __clz(__rbit64(v15)) + (v5 << 6))
  {
    v17 = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * i);
    result = MEMORY[0x1C3BA7700](*(_QWORD *)(v4 + 40), v17, 4);
    v18 = -1 << *(_BYTE *)(v4 + 32);
    v19 = result & ~v18;
    v20 = v19 >> 6;
    if (((-1 << v19) & ~*(_QWORD *)(v11 + 8 * (v19 >> 6))) == 0)
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v18) >> 6;
      while (++v20 != v23 || (v22 & 1) == 0)
      {
        v24 = v20 == v23;
        if (v20 == v23)
          v20 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v20);
        if (v25 != -1)
        {
          v21 = __clz(__rbit64(~v25)) + (v20 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v21 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v11 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v11 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    *(_DWORD *)(*(_QWORD *)(v4 + 48) + 4 * v21) = v17;
    ++*(_QWORD *)(v4 + 16);
    if (v9)
      goto LABEL_6;
LABEL_7:
    v14 = v5 + 1;
    if (__OFADD__(v5, 1))
      goto LABEL_36;
    if (v14 >= v10)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v14);
    ++v5;
    if (!v15)
    {
      v5 = v14 + 1;
      if (v14 + 1 >= v10)
        goto LABEL_32;
      v15 = *(_QWORD *)(v6 + 8 * v5);
      if (!v15)
      {
        v5 = v14 + 2;
        if (v14 + 2 >= v10)
          goto LABEL_32;
        v15 = *(_QWORD *)(v6 + 8 * v5);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v9 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 >= v10)
  {
LABEL_32:
    result = swift_release();
    v1 = v26;
    goto LABEL_34;
  }
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
  {
    v5 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v5 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v5 >= v10)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v5);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_1C0A8A7B0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = type metadata accessor for LiveGlobalKnowledgeTriple();
  v30 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = v0;
  v4 = *v0;
  sub_1C07ACF80((uint64_t *)&unk_1EF639FE8);
  v5 = sub_1C107072C();
  v6 = v5;
  if (!*(_QWORD *)(v4 + 16))
  {
    swift_release();
LABEL_28:
    *v25 = v6;
    return;
  }
  v7 = 1 << *(_BYTE *)(v4 + 32);
  v8 = *(_QWORD *)(v4 + 56);
  v26 = v4 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & v8;
  v27 = (unint64_t)(v7 + 63) >> 6;
  v28 = v5 + 56;
  swift_retain();
  v11 = 0;
  v29 = v4;
  if (!v10)
    goto LABEL_7;
LABEL_6:
  v12 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    v17 = *(_QWORD *)(v4 + 48);
    v18 = *(_QWORD *)(v30 + 72);
    sub_1C0A8CC94(v17 + v18 * i, (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
    sub_1C1070DF8();
    sub_1C106E590();
    sub_1C0794BAC((unint64_t *)&qword_1ED7618F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE40]);
    sub_1C106FA0C();
    sub_1C106E41C();
    sub_1C0794BAC(&qword_1ED75EA28, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC68]);
    sub_1C106FA0C();
    sub_1C106EB24();
    sub_1C0794BAC(&qword_1ED761910, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D450], MEMORY[0x1E0D3D468]);
    sub_1C106FA0C();
    sub_1C106FA0C();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C106FC28();
    swift_bridgeObjectRelease();
    sub_1C1070E34();
    sub_1C1070E34();
    v19 = *(_QWORD *)&v3[*(int *)(v1 + 44)];
    sub_1C1070E04();
    v20 = *(_QWORD *)(v19 + 16);
    if (v20)
    {
      v21 = v19 + 32;
      do
      {
        v21 += 8;
        sub_1C1070E04();
        --v20;
      }
      while (v20);
    }
    sub_1C1070E4C();
    v22 = v28;
    v23 = sub_1C1070684();
    *(_QWORD *)(v22 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    sub_1C0A8CCC8((uint64_t)v3, *(_QWORD *)(v6 + 48) + v23 * v18, (uint64_t (*)(_QWORD))type metadata accessor for LiveGlobalKnowledgeTriple);
    ++*(_QWORD *)(v6 + 16);
    v4 = v29;
    if (v10)
      goto LABEL_6;
LABEL_7:
    v14 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v14 >= v27)
      goto LABEL_26;
    v15 = *(_QWORD *)(v26 + 8 * v14);
    ++v11;
    if (!v15)
    {
      v11 = v14 + 1;
      if (v14 + 1 >= v27)
        goto LABEL_26;
      v15 = *(_QWORD *)(v26 + 8 * v11);
      if (!v15)
      {
        v11 = v14 + 2;
        if (v14 + 2 >= v27)
          goto LABEL_26;
        v15 = *(_QWORD *)(v26 + 8 * v11);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v10 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 >= v27)
  {
LABEL_26:
    swift_release_n();
    goto LABEL_28;
  }
  v15 = *(_QWORD *)(v26 + 8 * v16);
  if (v15)
  {
    v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v11 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v11 >= v27)
      goto LABEL_26;
    v15 = *(_QWORD *)(v26 + 8 * v11);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_30:
  __break(1u);
}

uint64_t sub_1C0A8ABAC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t i;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  int v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;

  v1 = v0;
  v2 = *v0;
  sub_1C07ACF80(&qword_1ED7512F8);
  v3 = sub_1C107072C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v34 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v35 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  v36 = v2;
  if (!v7)
    goto LABEL_7;
LABEL_6:
  v37 = (v7 - 1) & v7;
  v38 = v10;
  for (i = __clz(__rbit64(v7)) | (v10 << 6); ; i = __clz(__rbit64(v13)) + (v14 << 6))
  {
    v16 = *(_QWORD *)(v2 + 48) + 56 * i;
    v17 = *(_QWORD *)v16;
    v18 = *(_QWORD *)(v16 + 8);
    v19 = *(_QWORD *)(v16 + 16);
    v20 = *(_QWORD *)(v16 + 24);
    v21 = *(_QWORD *)(v16 + 32);
    v22 = *(_QWORD *)(v16 + 40);
    v23 = *(_BYTE *)(v16 + 48);
    v24 = *(_DWORD *)(v16 + 52);
    sub_1C1070DF8();
    swift_bridgeObjectRetain_n();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C106FC28();
    swift_bridgeObjectRelease();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C106FC28();
    swift_bridgeObjectRelease();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C106FC28();
    swift_bridgeObjectRelease();
    sub_1C1070E04();
    sub_1C1070E28();
    result = sub_1C1070E4C();
    v25 = -1 << *(_BYTE *)(v4 + 32);
    v26 = result & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v8 + 8 * (v26 >> 6))) == 0)
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v25) >> 6;
      while (++v27 != v30 || (v29 & 1) == 0)
      {
        v31 = v27 == v30;
        if (v27 == v30)
          v27 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v8 + 8 * v27);
        if (v32 != -1)
        {
          v28 = __clz(__rbit64(~v32)) + (v27 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v28 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v8 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v8 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    v33 = *(_QWORD *)(v4 + 48) + 56 * v28;
    *(_QWORD *)v33 = v17;
    *(_QWORD *)(v33 + 8) = v18;
    *(_QWORD *)(v33 + 16) = v19;
    *(_QWORD *)(v33 + 24) = v20;
    *(_QWORD *)(v33 + 32) = v21;
    *(_QWORD *)(v33 + 40) = v22;
    *(_BYTE *)(v33 + 48) = v23;
    *(_DWORD *)(v33 + 52) = v24;
    ++*(_QWORD *)(v4 + 16);
    v2 = v36;
    v7 = v37;
    v10 = v38;
    if (v37)
      goto LABEL_6;
LABEL_7:
    v12 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_36;
    if (v12 >= v35)
      goto LABEL_32;
    v13 = *(_QWORD *)(v34 + 8 * v12);
    v14 = v10 + 1;
    if (!v13)
    {
      v14 = v10 + 2;
      if (v10 + 2 >= v35)
        goto LABEL_32;
      v13 = *(_QWORD *)(v34 + 8 * v14);
      if (!v13)
      {
        v14 = v10 + 3;
        if (v10 + 3 >= v35)
          goto LABEL_32;
        v13 = *(_QWORD *)(v34 + 8 * v14);
        if (!v13)
          break;
      }
    }
LABEL_20:
    v37 = (v13 - 1) & v13;
    v38 = v14;
  }
  v15 = v10 + 4;
  if (v10 + 4 >= v35)
  {
LABEL_32:
    result = swift_release_n();
    goto LABEL_34;
  }
  v13 = *(_QWORD *)(v34 + 8 * v15);
  if (v13)
  {
    v14 = v10 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    v14 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v14 >= v35)
      goto LABEL_32;
    v13 = *(_QWORD *)(v34 + 8 * v14);
    ++v15;
    if (v13)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C0A8AF34()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t i;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  int64_t v29;

  v1 = *v0;
  sub_1C07ACF80(&qword_1ED7537B8);
  v2 = sub_1C107072C();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
    result = swift_release();
LABEL_34:
    *v0 = v3;
    return result;
  }
  v4 = 1 << *(_BYTE *)(v1 + 32);
  v28 = v1 + 56;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v1 + 56);
  v29 = (unint64_t)(v4 + 63) >> 6;
  v7 = v2 + 56;
  result = swift_retain();
  v9 = 0;
  if (!v6)
    goto LABEL_7;
LABEL_6:
  v10 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v10 | (v9 << 6); ; i = __clz(__rbit64(v13)) + (v9 << 6))
  {
    v15 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 24 * i);
    v16 = *v15;
    v17 = v15[1];
    v18 = v15[2];
    sub_1C1070DF8();
    sub_1C1070E04();
    swift_bridgeObjectRetain_n();
    sub_1C106FC28();
    swift_bridgeObjectRelease();
    result = sub_1C1070E4C();
    v19 = -1 << *(_BYTE *)(v3 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v7 + 8 * (v20 >> 6))) == 0)
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v19) >> 6;
      while (++v21 != v24 || (v23 & 1) == 0)
      {
        v25 = v21 == v24;
        if (v21 == v24)
          v21 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v7 + 8 * v21);
        if (v26 != -1)
        {
          v22 = __clz(__rbit64(~v26)) + (v21 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v7 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v7 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    v27 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 24 * v22);
    *v27 = v16;
    v27[1] = v17;
    v27[2] = v18;
    ++*(_QWORD *)(v3 + 16);
    if (v6)
      goto LABEL_6;
LABEL_7:
    v12 = v9 + 1;
    if (__OFADD__(v9, 1))
      goto LABEL_36;
    if (v12 >= v29)
      goto LABEL_32;
    v13 = *(_QWORD *)(v28 + 8 * v12);
    ++v9;
    if (!v13)
    {
      v9 = v12 + 1;
      if (v12 + 1 >= v29)
        goto LABEL_32;
      v13 = *(_QWORD *)(v28 + 8 * v9);
      if (!v13)
      {
        v9 = v12 + 2;
        if (v12 + 2 >= v29)
          goto LABEL_32;
        v13 = *(_QWORD *)(v28 + 8 * v9);
        if (!v13)
          break;
      }
    }
LABEL_20:
    v6 = (v13 - 1) & v13;
  }
  v14 = v12 + 3;
  if (v14 >= v29)
  {
LABEL_32:
    result = swift_release_n();
    goto LABEL_34;
  }
  v13 = *(_QWORD *)(v28 + 8 * v14);
  if (v13)
  {
    v9 = v14;
    goto LABEL_20;
  }
  while (1)
  {
    v9 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v9 >= v29)
      goto LABEL_32;
    v13 = *(_QWORD *)(v28 + 8 * v9);
    ++v14;
    if (v13)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C0A8B21C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v1 = v0;
  v2 = *v0;
  sub_1C07ACF80(qword_1ED75D9A8);
  v3 = sub_1C107072C();
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
    goto LABEL_23;
  }
  v4 = 1 << *(_BYTE *)(v2 + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v2 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_retain();
  if (v6)
  {
    v8 = __clz(__rbit64(v6));
    goto LABEL_20;
  }
  if (v7 > 1)
  {
    v9 = *(_QWORD *)(v2 + 64);
    v10 = 1;
    if (v9)
      goto LABEL_19;
    v10 = 2;
    if (v7 > 2)
    {
      v9 = *(_QWORD *)(v2 + 72);
      if (v9)
        goto LABEL_19;
      v10 = 3;
      if (v7 > 3)
      {
        v9 = *(_QWORD *)(v2 + 80);
        if (!v9)
        {
          v11 = 4;
          if (v7 > 4)
          {
            v9 = *(_QWORD *)(v2 + 88);
            if (v9)
            {
              v10 = 4;
              goto LABEL_19;
            }
            while (1)
            {
              v10 = v11 + 1;
              if (__OFADD__(v11, 1))
              {
                __break(1u);
                JUMPOUT(0x1C0A8B5B8);
              }
              if (v10 >= v7)
                break;
              v9 = *(_QWORD *)(v2 + 56 + 8 * v10);
              ++v11;
              if (v9)
                goto LABEL_19;
            }
          }
          goto LABEL_21;
        }
LABEL_19:
        v8 = __clz(__rbit64(v9)) + (v10 << 6);
LABEL_20:
        v12 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + v8);
        sub_1C1070DF8();
        __asm { BR              X8 }
      }
    }
  }
LABEL_21:
  result = swift_release_n();
  v1 = v0;
LABEL_23:
  *v1 = v3;
  return result;
}

void sub_1C0A8B5E4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  sub_1C0779670();
  v2 = v0;
  sub_1C078D5E4();
  v31 = *(_QWORD *)(type metadata accessor for OntologyTriple() - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v3);
  sub_1C07795DC();
  v4 = *v0;
  sub_1C0A8D0A0();
  sub_1C07ACF80(&qword_1EF639F10);
  v5 = sub_1C079BEE4();
  if (*(_QWORD *)(v4 + 16))
  {
    sub_1C0A8D2C0();
    v28 = v8;
    if (v6 < 64)
      v9 = ~(-1 << v6);
    else
      v9 = -1;
    v10 = v9 & v7;
    sub_1C0A4DB48();
    v29 = v11;
    v12 = v5 + 56;
    swift_retain();
    v13 = 0;
    v30 = v4;
    if (!v10)
      goto LABEL_7;
LABEL_6:
    sub_1C0A8D0E0();
    while (1)
    {
      v19 = *(_QWORD *)(v4 + 48);
      v20 = *(_QWORD *)(v31 + 72);
      sub_1C0A8CF64(v19 + v20 * v14, v1);
      sub_1C07AAEDC();
      sub_1C07767B4();
      sub_1C0A8D3B4();
      sub_1C07767AC();
      sub_1C0779688();
      sub_1C0794BAC(&qword_1ED75EA28, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC68]);
      sub_1C0A8D394();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C0A8D3A4();
      swift_bridgeObjectRelease();
      sub_1C0A8D394();
      sub_1C077AE90();
      sub_1C0775AF0();
      sub_1C077960C();
      sub_1C077ED30();
      sub_1C07BC2B8();
      if (((v23 << v22) & ~*(_QWORD *)(v12 + 8 * v21)) == 0)
      {
        sub_1C0797B50();
        while (1)
        {
          sub_1C0793670();
          if (v26)
          {
            if ((v25 & 1) != 0)
              break;
          }
          sub_1C0A8D1AC();
          if (v26)
            v27 = 0;
          if (*(_QWORD *)(v12 + 8 * v27) != -1)
          {
            sub_1C0791970();
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
      sub_1C0792CBC();
LABEL_30:
      *(_QWORD *)(v12 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
      sub_1C0A8D17C(v1, *(_QWORD *)(v5 + 48) + v24 * v20);
      sub_1C078934C();
      v4 = v30;
      v13 = v32;
      if (v10)
        goto LABEL_6;
LABEL_7:
      if (__OFADD__(v13, 1))
        goto LABEL_36;
      if (v13 + 1 >= v29)
        goto LABEL_32;
      sub_1C0A8D2A4();
      if (!v16)
      {
        if (v15 + 1 >= v29)
          goto LABEL_32;
        if (!*(_QWORD *)(v28 + 8 * (v15 + 1)))
        {
          if (v15 + 2 >= v29)
            goto LABEL_32;
          if (!*(_QWORD *)(v28 + 8 * (v15 + 2)))
          {
            v17 = v15 + 3;
            if (v17 >= v29)
            {
LABEL_32:
              sub_1C07878F0();
              v2 = v0;
              goto LABEL_34;
            }
            if (!*(_QWORD *)(v28 + 8 * v17))
              break;
          }
        }
      }
LABEL_19:
      sub_1C0A8D138();
    }
    while (!__OFADD__(v17, 1))
    {
      if (v17 + 1 >= v29)
        goto LABEL_32;
      sub_1C0A8D454();
      if (v18)
        goto LABEL_19;
    }
LABEL_37:
    __break(1u);
  }
  else
  {
    sub_1C077FA84();
LABEL_34:
    *v2 = v5;
    sub_1C0776760();
  }
}

uint64_t sub_1C0A8B8B8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t i;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;

  v1 = v0;
  v2 = *v0;
  sub_1C07ACF80(&qword_1ED7512F0);
  v3 = sub_1C107072C();
  v39 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
    v34 = v39;
LABEL_37:
    *v1 = v34;
    return result;
  }
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v35 = v0;
  v36 = v2 + 56;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v2 + 56);
  v37 = (unint64_t)(v4 + 63) >> 6;
  v7 = v3 + 56;
  result = swift_retain();
  v9 = 0;
  v38 = v2;
  if (!v6)
    goto LABEL_7;
LABEL_6:
  v10 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  v41 = v9;
  for (i = v10 | (v9 << 6); ; i = __clz(__rbit64(v13)) + (v14 << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(v2 + 48) + (i << 6));
    v17 = *v16;
    v18 = v16[1];
    v19 = v16[3];
    v40 = v16[2];
    v21 = v16[4];
    v20 = v16[5];
    v22 = v16[6];
    v23 = v16[7];
    sub_1C1070DF8();
    if (v20)
    {
      v24 = v17;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C080E9A0(v21, v20);
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C106FC28();
      swift_bridgeObjectRelease();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    }
    else
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C080E9A0(v21, 0);
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v24 = v17;
    }
    sub_1C106FC28();
    swift_bridgeObjectRelease();
    result = sub_1C1070E4C();
    v25 = -1 << *(_BYTE *)(v39 + 32);
    v26 = result & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v7 + 8 * (v26 >> 6))) == 0)
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v25) >> 6;
      while (++v27 != v30 || (v29 & 1) == 0)
      {
        v31 = v27 == v30;
        if (v27 == v30)
          v27 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v7 + 8 * v27);
        if (v32 != -1)
        {
          v28 = __clz(__rbit64(~v32)) + (v27 << 6);
          goto LABEL_33;
        }
      }
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    v28 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v7 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
LABEL_33:
    *(_QWORD *)(v7 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    v33 = (_QWORD *)(*(_QWORD *)(v39 + 48) + (v28 << 6));
    *v33 = v24;
    v33[1] = v18;
    v9 = v41;
    v33[2] = v40;
    v33[3] = v19;
    v33[4] = v21;
    v33[5] = v20;
    v33[6] = v22;
    v33[7] = v23;
    ++*(_QWORD *)(v39 + 16);
    v2 = v38;
    if (v6)
      goto LABEL_6;
LABEL_7:
    v12 = v9 + 1;
    if (__OFADD__(v9, 1))
      goto LABEL_39;
    if (v12 >= v37)
      goto LABEL_35;
    v13 = *(_QWORD *)(v36 + 8 * v12);
    v14 = v9 + 1;
    if (!v13)
    {
      v14 = v9 + 2;
      if (v9 + 2 >= v37)
        goto LABEL_35;
      v13 = *(_QWORD *)(v36 + 8 * v14);
      if (!v13)
      {
        v14 = v9 + 3;
        if (v9 + 3 >= v37)
          goto LABEL_35;
        v13 = *(_QWORD *)(v36 + 8 * v14);
        if (!v13)
          break;
      }
    }
LABEL_20:
    v6 = (v13 - 1) & v13;
    v41 = v14;
  }
  v15 = v9 + 4;
  if (v9 + 4 >= v37)
  {
LABEL_35:
    result = swift_release_n();
    v34 = v39;
    v1 = v35;
    goto LABEL_37;
  }
  v13 = *(_QWORD *)(v36 + 8 * v15);
  if (v13)
  {
    v14 = v9 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    v14 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v14 >= v37)
      goto LABEL_35;
    v13 = *(_QWORD *)(v36 + 8 * v14);
    ++v15;
    if (v13)
      goto LABEL_20;
  }
LABEL_40:
  __break(1u);
  return result;
}

void sub_1C0A8BC54()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t (*v4)(_QWORD);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(_QWORD);
  uint64_t v29;

  sub_1C0779670();
  v3 = v2;
  v28 = v4;
  v27 = *(_QWORD *)(v4(0) - 8);
  sub_1C078C94C();
  MEMORY[0x1E0C80A78](v5);
  sub_1C0A8D230();
  v6 = *v0;
  sub_1C07ACF80(v3);
  v7 = sub_1C079BEE4();
  if (*(_QWORD *)(v6 + 16))
  {
    sub_1C0A8D2C0();
    v26 = v10;
    if (v8 < 64)
      v11 = ~(-1 << v8);
    else
      v11 = -1;
    v12 = v11 & v9;
    swift_retain();
    v13 = 0;
    if (!v12)
      goto LABEL_7;
LABEL_6:
    sub_1C0A8D0E0();
    v15 = v6;
    while (1)
    {
      v23 = *(_QWORD *)(v27 + 72);
      sub_1C0A8CC94(*(_QWORD *)(v15 + 48) + v23 * v14, v1, v28);
      sub_1C07AAEDC();
      sub_1C078784C();
      sub_1C0794BAC((unint64_t *)&qword_1ED7618F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE40]);
      sub_1C106FA0C();
      sub_1C0779688();
      sub_1C0794BAC(&qword_1ED75EA28, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC68]);
      sub_1C0A8CE74();
      sub_1C0A8D444();
      sub_1C0794BAC(&qword_1ED761910, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D450], MEMORY[0x1E0D3D468]);
      sub_1C106FA0C();
      sub_1C0A8CE74();
      sub_1C078BDC0();
      sub_1C0775AF0();
      sub_1C077960C();
      sub_1C0A8D1B8();
      sub_1C07B9E18();
      sub_1C078BDC0();
      sub_1C0775AF0();
      sub_1C077960C();
      sub_1C0A8CF8C();
      sub_1C1070E4C();
      v24 = sub_1C0A8CF48();
      v25 = sub_1C0A8D064(v24);
      sub_1C0A8CCC8(v1, *(_QWORD *)(v7 + 48) + v25 * v23, v28);
      sub_1C078934C();
      v13 = v29;
      if (v12)
        goto LABEL_6;
LABEL_7:
      if (__OFADD__(v13, 1))
      {
        __break(1u);
        goto LABEL_31;
      }
      sub_1C0A8D1A0();
      if (v16 == v17)
        goto LABEL_27;
      sub_1C0A8D2A4();
      if (!v18)
      {
        sub_1C0A8CEAC();
        if (v16 == v17)
          goto LABEL_27;
        sub_1C0A8D4C4();
        if (!v19)
        {
          sub_1C0A8CEAC();
          if (v16 == v17)
            goto LABEL_27;
          sub_1C0A8D4C4();
          if (!v20)
          {
            sub_1C0A8D1A0();
            if (v16 == v17)
            {
LABEL_27:
              sub_1C07878F0();
              goto LABEL_29;
            }
            if (!*(_QWORD *)(v26 + 8 * v21))
              break;
          }
        }
      }
LABEL_24:
      sub_1C0A8D138();
    }
    while (!__OFADD__(v21, 1))
    {
      sub_1C0A8CEAC();
      if (v16 == v17)
        goto LABEL_27;
      sub_1C0A8D454();
      if (v22)
        goto LABEL_24;
    }
LABEL_31:
    __break(1u);
  }
  else
  {
    sub_1C077FA84();
LABEL_29:
    *v0 = v7;
    sub_1C0776760();
  }
}

void sub_1C0A8BF0C()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  int64_t i;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  id v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;

  sub_1C077AEA0();
  sub_1C0A8D3F4();
  sub_1C07ACF80(v2);
  v3 = sub_1C079BEE4();
  if (!v1[2])
  {
    sub_1C07767F4();
LABEL_35:
    *v0 = v3;
    sub_1C0776728();
    return;
  }
  v25 = v0;
  sub_1C0A8D1C8();
  v5 = v1 + 7;
  if (v4 < 64)
    v6 = ~(-1 << v4);
  else
    v6 = -1;
  v7 = v6 & v1[7];
  v8 = (unint64_t)(v4 + 63) >> 6;
  v9 = v3 + 56;
  sub_1C077C14C();
  v10 = 0;
  if (!v7)
    goto LABEL_7;
LABEL_6:
  sub_1C07A9558();
  for (i = v11 | (v10 << 6); ; i = v15 + (v10 << 6))
  {
    v16 = *(id *)(v1[6] + 8 * i);
    v17 = sub_1C1070510() & ~(-1 << *(_BYTE *)(v3 + 32));
    if (((-1 << v17) & ~*(_QWORD *)(v9 + 8 * (v17 >> 6))) == 0)
    {
      sub_1C0797B50();
      while (1)
      {
        sub_1C0793670();
        if (v21)
        {
          if ((v18 & 1) != 0)
            break;
        }
        if (v19 == v20)
          v19 = 0;
        if (*(_QWORD *)(v9 + 8 * v19) != -1)
        {
          sub_1C0791970();
          goto LABEL_31;
        }
      }
      __break(1u);
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    sub_1C0792CBC();
LABEL_31:
    sub_1C0786D70();
    *(_QWORD *)(v9 + v22) |= v23;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v24) = v16;
    sub_1C078934C();
    if (v7)
      goto LABEL_6;
LABEL_7:
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_37;
    if (v13 >= v8)
      goto LABEL_33;
    ++v10;
    if (!v5[v13])
    {
      v10 = v13 + 1;
      if (v13 + 1 >= v8)
        goto LABEL_33;
      if (!v5[v10])
      {
        v10 = v13 + 2;
        if (v13 + 2 >= v8)
          goto LABEL_33;
        if (!v5[v10])
          break;
      }
    }
LABEL_20:
    sub_1C07BFDD4();
  }
  v14 = v13 + 3;
  if (v14 >= v8)
  {
LABEL_33:
    sub_1C07878F0();
    v0 = v25;
    goto LABEL_35;
  }
  if (v5[v14])
  {
    v10 = v14;
    goto LABEL_20;
  }
  while (1)
  {
    v10 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v10 >= v8)
      goto LABEL_33;
    ++v14;
    if (v5[v10])
      goto LABEL_20;
  }
LABEL_38:
  __break(1u);
}

void sub_1C0A8C0D8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  char v22;
  uint64_t *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;

  sub_1C0779670();
  v26 = *(_QWORD *)(sub_1C07BFC28() - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v2);
  sub_1C07785B8();
  v3 = (_QWORD *)*v0;
  sub_1C0A8D0A0();
  sub_1C07ACF80(&qword_1ED744838);
  v4 = sub_1C079BEE4();
  if (!v3[2])
  {
    sub_1C07767F4();
LABEL_33:
    *v0 = v4;
    sub_1C0776760();
    return;
  }
  sub_1C0A8D1C8();
  v23 = v0;
  v24 = v3 + 7;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & v3[7];
  sub_1C0A4DB48();
  v25 = v8;
  v9 = v4 + 56;
  sub_1C077C14C();
  v10 = 0;
  if (!v7)
    goto LABEL_7;
LABEL_6:
  sub_1C077E8CC();
  for (i = v11 | (v10 << 6); ; i = v15 + (v10 << 6))
  {
    v16 = *(_QWORD *)(v26 + 72);
    sub_1C0A8CC94(v3[6] + v16 * i, v1, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    sub_1C07AAEDC();
    sub_1C077C0B8();
    sub_1C106FC28();
    sub_1C077589C();
    sub_1C077ED30();
    sub_1C07BC2B8();
    if (((v19 << v18) & ~*(_QWORD *)(v9 + 8 * v17)) == 0)
    {
      sub_1C0797B50();
      while (1)
      {
        sub_1C0793670();
        if (v22)
        {
          if ((v21 & 1) != 0)
            break;
        }
        sub_1C0A8D1AC();
        sub_1C07A50B8();
        if (!v22)
        {
          sub_1C0791970();
          goto LABEL_29;
        }
      }
      __break(1u);
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    sub_1C0792CBC();
LABEL_29:
    *(_QWORD *)(v9 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    sub_1C0A8CCC8(v1, *(_QWORD *)(v4 + 48) + v20 * v16, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    sub_1C078934C();
    if (v7)
      goto LABEL_6;
LABEL_7:
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_35;
    if (v13 >= v25)
      goto LABEL_31;
    ++v10;
    if (!v24[v13])
    {
      v10 = v13 + 1;
      if (v13 + 1 >= v25)
        goto LABEL_31;
      if (!v24[v10])
      {
        v10 = v13 + 2;
        if (v13 + 2 >= v25)
          goto LABEL_31;
        if (!v24[v10])
          break;
      }
    }
LABEL_20:
    sub_1C0A8D600();
  }
  v14 = v13 + 3;
  if (v14 >= v25)
  {
LABEL_31:
    sub_1C07878F0();
    v0 = v23;
    goto LABEL_33;
  }
  if (v24[v14])
  {
    v10 = v14;
    goto LABEL_20;
  }
  while (1)
  {
    v10 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v10 >= v25)
      goto LABEL_31;
    ++v14;
    if (v24[v10])
      goto LABEL_20;
  }
LABEL_36:
  __break(1u);
}

uint64_t sub_1C0A8C330()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  v1 = v0;
  v2 = *v0;
  sub_1C07ACF80(&qword_1EF639EF8);
  result = sub_1C107072C();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  if (!v9)
    goto LABEL_7;
LABEL_6:
  v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (i = v12 | (v5 << 6); ; i = __clz(__rbit64(v15)) + (v5 << 6))
  {
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i);
    sub_1C1070DF8();
    sub_1C1070E04();
    result = sub_1C1070E4C();
    v18 = -1 << *(_BYTE *)(v4 + 32);
    v19 = result & ~v18;
    v20 = v19 >> 6;
    if (((-1 << v19) & ~*(_QWORD *)(v11 + 8 * (v19 >> 6))) == 0)
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v18) >> 6;
      while (++v20 != v23 || (v22 & 1) == 0)
      {
        v24 = v20 == v23;
        if (v20 == v23)
          v20 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v20);
        if (v25 != -1)
        {
          v21 = __clz(__rbit64(~v25)) + (v20 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v21 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v11 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v11 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v21) = v17;
    ++*(_QWORD *)(v4 + 16);
    if (v9)
      goto LABEL_6;
LABEL_7:
    v14 = v5 + 1;
    if (__OFADD__(v5, 1))
      goto LABEL_36;
    if (v14 >= v10)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v14);
    ++v5;
    if (!v15)
    {
      v5 = v14 + 1;
      if (v14 + 1 >= v10)
        goto LABEL_32;
      v15 = *(_QWORD *)(v6 + 8 * v5);
      if (!v15)
      {
        v5 = v14 + 2;
        if (v14 + 2 >= v10)
          goto LABEL_32;
        v15 = *(_QWORD *)(v6 + 8 * v5);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v9 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 >= v10)
  {
LABEL_32:
    result = swift_release();
    v1 = v0;
    goto LABEL_34;
  }
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
  {
    v5 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v5 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v5 >= v10)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v5);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_1C0A8C5A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  sub_1C0A8D1D4();
  sub_1C07B5A24();
  sub_1C0A8CF6C();
  v35 = v34 & v33;
  v37 = (unint64_t)(v36 + 63) >> 6;
  sub_1C07796D8();
  if (v35)
  {
    sub_1C07A9558();
LABEL_12:
    v42 = *(unsigned __int8 *)(v32[6] + v38);
    sub_1C0A8D6F4();
    sub_1C07ABCF8();
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_1C0A8C66C + *((int *)qword_1C0A8C788 + v42)))(v43, v44, v45, v46, v47, v48, v49, v50, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
      a20,
      a21,
      a22,
      a23,
      a24,
      a25,
      a26,
      a27,
      a28,
      a29,
      a30,
      a31,
      a32);
    return;
  }
  v39 = 1;
  if (v37 > 1)
  {
    if (v32[8])
    {
LABEL_11:
      sub_1C07BFDD4();
      v38 = v41 + (v39 << 6);
      goto LABEL_12;
    }
    v40 = 2;
    if (v37 > 2)
    {
      if (v32[9])
      {
        v39 = 2;
        goto LABEL_11;
      }
      while (1)
      {
        v39 = v40 + 1;
        if (__OFADD__(v40, 1))
        {
          __break(1u);
          __break(1u);
          JUMPOUT(0x1C0A8C788);
        }
        if (v39 >= v37)
          break;
        ++v40;
        if (v32[v39 + 7])
          goto LABEL_11;
      }
    }
  }
  sub_1C07758C4();
  sub_1C0A8D5B8();
  sub_1C07829E4();
}

void sub_1C0A8C7BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  int64_t v8;
  int64_t v10;

  sub_1C0A8D1D4();
  sub_1C07B5A24();
  v1 = v0 + 56;
  sub_1C0A8CF6C();
  v4 = v3 & v2;
  v6 = (unint64_t)(v5 + 63) >> 6;
  sub_1C07796D8();
  v7 = 0;
  v8 = 0;
  if (!v4)
    goto LABEL_3;
LABEL_2:
  sub_1C077EB84();
  while (1)
  {
    sub_1C0A8D6F4();
    sub_1C07888B4();
    sub_1C077960C();
    v7 ^= sub_1C077AE74();
    if (v4)
      goto LABEL_2;
LABEL_3:
    if (__OFADD__(v8++, 1))
      goto LABEL_17;
    if (v8 >= v6)
    {
LABEL_15:
      sub_1C07758C4();
      sub_1C0A8D5B8();
      sub_1C07829E4();
      return;
    }
    if (!*(_QWORD *)(v1 + 8 * v8))
      break;
LABEL_12:
    sub_1C0A8D00C();
  }
  v10 = v8 + 1;
  if (v8 + 1 >= v6)
    goto LABEL_15;
  if (*(_QWORD *)(v1 + 8 * v10))
  {
    ++v8;
    goto LABEL_12;
  }
  while (1)
  {
    v8 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v8 >= v6)
      goto LABEL_15;
    ++v10;
    if (*(_QWORD *)(v1 + 8 * v8))
      goto LABEL_12;
  }
  __break(1u);
LABEL_17:
  __break(1u);
}

uint64_t sub_1C0A8C8E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C080E9A0(v2, v3);
  return a1;
}

uint64_t sub_1C0A8C944(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C07A94A4(v2, v3);
  return a1;
}

uint64_t sub_1C0A8C9A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1ED750728);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C0A8C9EC()
{
  unint64_t result;

  result = qword_1EF639F38;
  if (!qword_1EF639F38)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10ACE78, &unk_1E7A25BE0);
    atomic_store(result, (unint64_t *)&qword_1EF639F38);
  }
  return result;
}

unint64_t sub_1C0A8CA28()
{
  unint64_t result;

  result = qword_1EF639F40;
  if (!qword_1EF639F40)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10ACE50, &unk_1E7A25BB8);
    atomic_store(result, (unint64_t *)&qword_1EF639F40);
  }
  return result;
}

unint64_t sub_1C0A8CA64()
{
  unint64_t result;

  result = qword_1EF639F48;
  if (!qword_1EF639F48)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10ACE28, &unk_1E7A25B90);
    atomic_store(result, (unint64_t *)&qword_1EF639F48);
  }
  return result;
}

unint64_t sub_1C0A8CAA0()
{
  unint64_t result;

  result = qword_1EF639F50;
  if (!qword_1EF639F50)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10ACE00, &unk_1E7A25B68);
    atomic_store(result, (unint64_t *)&qword_1EF639F50);
  }
  return result;
}

unint64_t sub_1C0A8CADC()
{
  unint64_t result;

  result = qword_1ED762738;
  if (!qword_1ED762738)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10ACDD8, &unk_1E7A25B40);
    atomic_store(result, (unint64_t *)&qword_1ED762738);
  }
  return result;
}

uint64_t sub_1C0A8CB18()
{
  return sub_1C0A8CBAC(&qword_1EF639F98, &qword_1EF639FA0, sub_1C0A8CB34);
}

uint64_t sub_1C0A8CB34()
{
  return sub_1C0A8CBAC(&qword_1EF639FA8, &qword_1EF639FB0, (uint64_t (*)(void))sub_1C0848194);
}

unint64_t sub_1C0A8CB50()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED762418;
  if (!qword_1ED762418)
  {
    v1 = sub_1C07D4BEC(&qword_1ED762410);
    v2[0] = MEMORY[0x1E0DEA9A0];
    v2[1] = MEMORY[0x1E0DEA9A0];
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0DEA0D8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED762418);
  }
  return result;
}

uint64_t sub_1C0A8CBAC(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[2];

  result = *a1;
  if (!result)
  {
    v6 = sub_1C07D4BEC(a2);
    v7 = a3();
    v8[0] = MEMORY[0x1E0DEA9A0];
    v8[1] = v7;
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0DEA0D8], v6, v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C0A8CC18()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EF639FD0;
  if (!qword_1EF639FD0)
  {
    v1 = sub_1C07D4BEC(&qword_1EF639FD8);
    sub_1C0794BAC(&qword_1EF639FE0, (uint64_t (*)(uint64_t))type metadata accessor for ExtractedMatch, (uint64_t)&protocol conformance descriptor for ExtractedMatch);
    v3 = v2;
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0DEAF40], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF639FD0);
  }
  return result;
}

void sub_1C0A8CC94(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = sub_1C0A8D38C(a1, a2, a3);
  sub_1C0775828(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  sub_1C0778534();
}

void sub_1C0A8CCC8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = sub_1C0A8D38C(a1, a2, a3);
  sub_1C0775828(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  sub_1C0778534();
}

uint64_t sub_1C0A8CCFC(uint64_t a1)
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

uint64_t sub_1C0A8CD44(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1C0A8CD8C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 16);
}

uint64_t sub_1C0A8CDC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 88) + 8))(v1, v0);
}

uint64_t sub_1C0A8CE10()
{
  return 1768319351;
}

uint64_t sub_1C0A8CE74()
{
  return sub_1C106FA0C();
}

uint64_t sub_1C0A8CE84()
{
  return sub_1C1070DF8();
}

uint64_t sub_1C0A8CE98()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  return v1(v3, *(_QWORD *)(v0 + 48) + v5 * v4, v2);
}

uint64_t sub_1C0A8CEB8()
{
  return 0x4D31327972657665;
}

uint64_t sub_1C0A8CF00()
{
  return sub_1C106FE44();
}

uint64_t sub_1C0A8CF30()
{
  return sub_1C106FE44();
}

uint64_t sub_1C0A8CF3C()
{
  return sub_1C106FE44();
}

uint64_t sub_1C0A8CF48()
{
  return sub_1C1070684();
}

void sub_1C0A8CF64(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_1C0A8CC94(a1, a2, v2);
}

uint64_t sub_1C0A8CF8C()
{
  return sub_1C1070E34();
}

unint64_t sub_1C0A8D064(unint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  return result;
}

uint64_t sub_1C0A8D0B8(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = result;
  return result;
}

uint64_t sub_1C0A8D0C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);

  return v5(v2, *(_QWORD *)(v1 + 48) + v4 * v3, v0);
}

uint64_t sub_1C0A8D0D8()
{
  return sub_1C1070DF8();
}

void sub_1C0A8D0E0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 160) = v0;
}

uint64_t sub_1C0A8D118()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 40);
}

uint64_t sub_1C0A8D124()
{
  uint64_t *v0;

  return sub_1C07ACF80(v0);
}

void sub_1C0A8D138()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 160) = v0;
}

uint64_t sub_1C0A8D154()
{
  return sub_1C106FC28();
}

void sub_1C0A8D160(unint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= v1 << a1;
}

void sub_1C0A8D17C(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_1C0A8CCC8(a1, a2, v2);
}

uint64_t sub_1C0A8D1B8()
{
  return sub_1C1070E04();
}

uint64_t sub_1C0A8D1F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return a9;
}

uint64_t sub_1C0A8D210()
{
  return sub_1C1070720();
}

uint64_t sub_1C0A8D220(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  *(_QWORD *)(v2 - 104) = a2;
  return a2(0);
}

uint64_t sub_1C0A8D278(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 352))(a1, a2, v2);
}

uint64_t sub_1C0A8D37C()
{
  unint64_t *v0;

  return sub_1C07D4B70(0, v0);
}

uint64_t sub_1C0A8D38C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  return a3(0);
}

uint64_t sub_1C0A8D394()
{
  return sub_1C106FA0C();
}

uint64_t sub_1C0A8D3A4()
{
  return sub_1C106FC28();
}

uint64_t sub_1C0A8D3B4()
{
  return sub_1C106FC28();
}

unint64_t sub_1C0A8D40C()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C077D774(v1, v0);
}

uint64_t sub_1C0A8D444()
{
  return sub_1C106EB24();
}

uint64_t sub_1C0A8D498(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0x6F48000000000000;
}

uint64_t sub_1C0A8D4D0()
{
  return 0x796C696164;
}

uint64_t sub_1C0A8D4E4()
{
  return sub_1C1070E04();
}

uint64_t sub_1C0A8D4F0()
{
  return sub_1C1070E04();
}

uint64_t sub_1C0A8D4FC()
{
  uint64_t v0;
  uint64_t v1;

  return *(_QWORD *)(v1 + 16 * v0);
}

uint64_t sub_1C0A8D5B8()
{
  return sub_1C1070E04();
}

uint64_t sub_1C0A8D5C4()
{
  return sub_1C106D0FC();
}

id sub_1C0A8D5CC()
{
  uint64_t v0;
  uint64_t v1;

  return *(id *)(*(_QWORD *)(v1 + 48) + 8 * v0);
}

id sub_1C0A8D5D8()
{
  uint64_t v0;
  uint64_t v1;

  return *(id *)(*(_QWORD *)(v0 + 48) + 8 * v1);
}

void sub_1C0A8D5F8(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_1C07B2018(a1, v1);
}

__n128 *sub_1C0A8D628(__n128 *result, __n128 a2)
{
  uint64_t v2;

  result[1] = a2;
  *(_QWORD *)(v2 - 152) = 0;
  *(_QWORD *)(v2 - 144) = 0xE000000000000000;
  return result;
}

uint64_t sub_1C0A8D63C()
{
  return sub_1C107051C();
}

void sub_1C0A8D65C()
{
  _QWORD *v0;

  *v0 = 0x8000000000000000;
}

uint64_t sub_1C0A8D668(uint64_t *a1)
{
  return sub_1C07ACF80(a1);
}

uint64_t sub_1C0A8D670@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  *v1 = a1;
  return swift_bridgeObjectRelease();
}

void sub_1C0A8D67C(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_1C0A8CCC8(a1, a2, v2);
}

uint64_t sub_1C0A8D684()
{
  return sub_1C1070D38();
}

uint64_t sub_1C0A8D68C@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)a1;
}

uint64_t sub_1C0A8D6A4()
{
  return sub_1C1070738();
}

void *sub_1C0A8D6B0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  const void *v2;

  return memmove(a1, v2, 8 * a2);
}

uint64_t sub_1C0A8D6D4()
{
  return sub_1C10701B0();
}

uint64_t sub_1C0A8D6F4()
{
  return sub_1C1070DF8();
}

void sub_1C0A8D714()
{
  uint64_t v0;

  sub_1C0794BAC(*(unint64_t **)(v0 - 96), *(uint64_t (**)(uint64_t))(v0 - 104), *(_QWORD *)(v0 - 88));
}

uint64_t sub_1C0A8D720()
{
  return sub_1C0A8D74C();
}

uint64_t sub_1C0A8D74C()
{
  swift_retain();
  sub_1C078017C();
  return swift_release();
}

uint64_t sub_1C0A8D80C()
{
  uint64_t result;

  sub_1C07ACF80(&qword_1ED7629D8);
  swift_allocObject();
  result = sub_1C0ECB208();
  qword_1ED78D988 = result;
  return result;
}

uint64_t *sub_1C0A8D84C()
{
  if (qword_1ED762790 != -1)
    swift_once();
  return &qword_1ED78D988;
}

unint64_t sub_1C0A8D88C()
{
  sub_1C1070774();
  swift_bridgeObjectRelease();
  sub_1C106AB10();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  return 0xD000000000000011;
}

_QWORD *sub_1C0A8D920()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_1C077AE5C();
  v23 = v2;
  v24 = v3;
  v4 = v0;
  v6 = v5;
  v21[1] = *v4;
  v7 = sub_1C106AB28();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v21 - v12;
  sub_1C07AAEE4();
  sub_1C106AAC8();
  v14 = (char *)v4 + OBJC_IVAR____TtC24IntelligencePlatformCore13GraphDatabase_url;
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))((uint64_t)v4 + OBJC_IVAR____TtC24IntelligencePlatformCore13GraphDatabase_url, v13, v7);
  v15 = (uint64_t)v4 + OBJC_IVAR____TtC24IntelligencePlatformCore13GraphDatabase_config;
  sub_1C078E3E0(v6, (uint64_t)v4 + OBJC_IVAR____TtC24IntelligencePlatformCore13GraphDatabase_config);
  v16 = *(int *)(type metadata accessor for Configuration() + 20);
  v22 = v6;
  v17 = (*(_QWORD *)(v6 + v16) >> 1) & 4 | *(_QWORD *)(v6 + v16) & 3;
  sub_1C07A896C();
  v18 = v17 & 0xFFFFFFFFFFFFFFFELL | static NSUserDefaults.graphDatabaseLoggingEnabled.getter() & 1;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v14, v7);
  type metadata accessor for ErrorHandlingDatabasePool(0);
  swift_allocObject();
  v19 = sub_1C09BB8DC((uint64_t)v11, v18);
  if (v1)
  {
    sub_1C078D09C(v22);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v7);
    sub_1C078D09C(v15);
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(_QWORD *)((char *)v4 + OBJC_IVAR____TtC24IntelligencePlatformCore13GraphDatabase_pool) = v19;
    sub_1C0A8D74C();
    sub_1C078D09C(v22);
  }
  return v4;
}

uint64_t sub_1C0A8DB08()
{
  sub_1C07AAEE4();
  return sub_1C106AAC8();
}

void sub_1C0A8DB2C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1C106AB28();
  sub_1C077B5C8(v1);
  swift_release();
  sub_1C078D09C(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore13GraphDatabase_config);
  sub_1C0778534();
}

uint64_t sub_1C0A8DB7C()
{
  sub_1C0A8DB2C();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0A8DBA0()
{
  return type metadata accessor for GraphDatabase();
}

uint64_t type metadata accessor for GraphDatabase()
{
  uint64_t result;

  result = qword_1ED762798;
  if (!qword_1ED762798)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1C0A8DBE0()
{
  return sub_1C0A8D88C();
}

uint64_t sub_1C0A8DC00()
{
  sub_1C0A8D84C();
  return swift_retain();
}

uint64_t sub_1C0A8DC1C()
{
  return sub_1C0A8DB08();
}

uint64_t sub_1C0A8DC30()
{
  return swift_retain();
}

void sub_1C0A8DC44()
{
  uint64_t v0;
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  sub_1C077AE5C();
  v2 = v1;
  sub_1C07ACF80(&qword_1ED7626C0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  sub_1C0778564();
  v6 = v5 - v4;
  sub_1C106B8FC();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  sub_1C07785B8();
  sub_1C0A8DF38();
  if (v0)
  {
    if (qword_1ED762B20 != -1)
      swift_once();
    v9 = sub_1C077585C();
    sub_1C079E000(v9, (uint64_t)qword_1ED78D9F8);
    sub_1C077D144();
    sub_1C077B72C();
    sub_1C077D144();
    sub_1C077B72C();
    v10 = sub_1C106F538();
    v11 = sub_1C107039C();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = sub_1C0775854();
      sub_1C0775854();
      *(_DWORD *)v12 = 136315394;
      sub_1C077D144();
      v13 = sub_1C106FB5C();
      v15 = sub_1C07A5D4C(v13, v14);
      sub_1C07936A0(v15);
      sub_1C10705AC();
      sub_1C07878F0();
      sub_1C077E584();
      *(_WORD *)(v12 + 12) = 2080;
      sub_1C077B72C();
      sub_1C07ACF80(&qword_1ED7614F0);
      v16 = sub_1C106FB5C();
      sub_1C07A5D4C(v16, v17);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      sub_1C07888BC();
      sub_1C07888BC();
      _os_log_impl(&dword_1C0771000, v10, v11, "StaticSchemaDatabaseProtocol<%s>: check schema error. Database is considered corrupt. Error: %s", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      sub_1C0776778();
    }
    sub_1C07878F0();
    sub_1C07888BC();
    sub_1C07888BC();

    sub_1C106B524();
    v18 = sub_1C0780AEC();
    sub_1C07B2D8C(v6, 1, 1, v18);
    sub_1C106BC38();
    sub_1C0794BAC(&qword_1EF637360, (uint64_t (*)(uint64_t))MEMORY[0x1E0D23CE0], MEMORY[0x1E0D23CF0]);
    sub_1C0775810();
    sub_1C106BBCC();
    swift_willThrow();
    sub_1C07888BC();
  }
  else
  {
    *v2 = v8 & 1;
  }
  sub_1C07757D0();
}

void sub_1C0A8DF38()
{
  uint64_t v0;
  uint64_t v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  NSObject *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  NSObject *v22;
  uint64_t v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  _QWORD v37[6];
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1C077AE5C();
  v41 = v3;
  v42 = v4;
  v40 = v5;
  v6 = v0;
  v8 = v7;
  v9 = sub_1C0780AEC();
  MEMORY[0x1E0C80A78](v9);
  sub_1C07785B8();
  sub_1C079B6F0();
  v10 = sub_1C106C574();
  if (!v1)
  {
    if ((v10 & 1) != 0)
    {
      sub_1C1070774();
      swift_bridgeObjectRelease();
      sub_1C07ACF80(&qword_1ED762C90);
      v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1C1079220;
      sub_1C07965DC(v11, MEMORY[0x1E0DEA968]);
      sub_1C106C010();
      memset(v37, 0, 40);
      v12 = MEMORY[0x1E0CB0338];
      sub_1C106C1E4();
      sub_1C0784B6C((uint64_t)v37, (uint64_t *)&unk_1ED7626A0);
      sub_1C07B8A8C();
      v19 = v38;
      v20 = v39;
      if (v39 >> 60 != 15)
      {
        v21 = sub_1C0A8EDA8();
        v12 = v22;
        sub_1C07B0E28(v19, v20);
        if ((unint64_t)v12 >> 60 == 15)
        {
          sub_1C07B33B8(v19, v20);
          sub_1C07B842C();
        }
        else
        {
          sub_1C07B0E28(v19, v20);
          v2 = MEMORY[0x1C3BA152C](v19, v20, v21, v12);
          sub_1C07B842C();
          sub_1C07AA82C();
          sub_1C07AA82C();
          if ((v2 & 1) != 0)
          {
            if (qword_1ED762B18 != -1)
              swift_once();
            v23 = sub_1C077585C();
            sub_1C07A3AC4(v23, (uint64_t)qword_1ED762AF8);
            sub_1C106F538();
            v24 = sub_1C0784E0C();
            if (sub_1C077F050(v24))
            {
              v40 = v19;
              v25 = (uint8_t *)sub_1C0775854();
              v26 = sub_1C0775854();
              *(_DWORD *)v25 = 136315138;
              v37[0] = v26;
              v38 = v6;
              sub_1C077C14C();
              v27 = sub_1C106FB5C();
              v29 = sub_1C079C5C0(v27, v28);
              sub_1C0789F6C(v29);
              sub_1C10705AC();
              sub_1C07878F0();
              swift_bridgeObjectRelease();
              sub_1C07796F0(&dword_1C0771000, v12, v2, "StaticSchemaDatabaseProtocol<%s>: checkSchema: schema is okay", v25);
              sub_1C0778610();
              sub_1C0776778();
            }
            goto LABEL_22;
          }
        }
      }
      if (qword_1ED762B20 != -1)
        swift_once();
      v30 = sub_1C077585C();
      sub_1C07A3AC4(v30, (uint64_t)qword_1ED78D9F8);
      sub_1C106F538();
      v31 = sub_1C0784E0C();
      if (sub_1C077F050(v31))
      {
        v40 = v19;
        v32 = (uint8_t *)sub_1C0775854();
        v33 = sub_1C0775854();
        *(_DWORD *)v32 = 136315138;
        v37[0] = v33;
        v38 = v6;
        sub_1C077C14C();
        v34 = sub_1C106FB5C();
        v36 = sub_1C079C5C0(v34, v35);
        sub_1C0789F6C(v36);
        sub_1C10705AC();
        sub_1C07878F0();
        swift_bridgeObjectRelease();
        sub_1C07796F0(&dword_1C0771000, v12, v2, "StaticSchemaDatabaseProtocol<%s>: checkSchema: schema mismatch, need to reset", v32);
        sub_1C077D1D0();
        sub_1C0776778();
      }
LABEL_22:
      sub_1C07B33B8(v19, v20);

      sub_1C07878F0();
      return;
    }
    if (qword_1ED762B20 != -1)
      swift_once();
    v13 = sub_1C077585C();
    sub_1C07A3AC4(v13, (uint64_t)qword_1ED78D9F8);
    sub_1C106F538();
    v14 = sub_1C0784E0C();
    if (os_log_type_enabled(v8, v14))
    {
      v15 = (uint8_t *)sub_1C0775854();
      v37[0] = sub_1C0775854();
      *(_DWORD *)v15 = 136315138;
      v38 = v0;
      sub_1C077C14C();
      v16 = sub_1C106FB5C();
      v18 = sub_1C079C5C0(v16, v17);
      sub_1C0789F6C(v18);
      sub_1C10705AC();
      sub_1C07878F0();
      swift_bridgeObjectRelease();
      sub_1C07796F0(&dword_1C0771000, v8, v14, "StaticSchemaDatabaseProtocol<%s>: checkSchema: metadata table is missing", v15);
      sub_1C0778610();
      sub_1C0776778();
    }

    sub_1C07878F0();
    if (!sub_1C0A8E4FC(v8))
      sub_1C0A8E9EC();
  }
}

BOOL sub_1C0A8E4FC(NSObject *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _BOOL8 v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  const char *v46;
  uint64_t v47;
  os_log_type_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD v64[5];
  uint64_t v65;

  v4 = v1;
  v6 = *v4;
  sub_1C08EEF7C(0, 0, 0x656C626174, 0xE500000000000000);
  if (v2)
    return v3;
  v61 = (uint64_t)v4;
  v60 = v6;
  sub_1C0861BD0(v64);
  v7 = v64[0];
  v63 = v64[1];
  v8 = v64[3];
  v9 = v64[4];
  v10 = (unint64_t)(v64[2] + 64) >> 6;
  v62 = MEMORY[0x1E0DEE9D8];
LABEL_3:
  v11 = 0xE500000000000000;
  if (v9)
  {
LABEL_4:
    v12 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v13 = v12 | (v8 << 6);
    goto LABEL_23;
  }
  while (1)
  {
    v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_51:
      sub_1C07B7730();
      v62 = v57;
      goto LABEL_35;
    }
    if (v14 >= v10)
      goto LABEL_31;
    v15 = *(_QWORD *)(v63 + 8 * v14);
    v16 = v8 + 1;
    if (!v15)
    {
      if (v8 + 2 >= v10)
        goto LABEL_31;
      sub_1C07A9F90();
      if (!v15)
      {
        if (v17 + 2 >= v10)
          goto LABEL_31;
        sub_1C07A9F90();
        if (!v15)
        {
          if (v18 + 3 >= v10)
            goto LABEL_31;
          sub_1C07A9F90();
          if (!v15)
          {
            if (v19 + 4 >= v10)
              goto LABEL_31;
            sub_1C07A9F90();
            if (!v15)
            {
              v16 = v20 + 5;
              if (v20 + 5 >= v10)
                goto LABEL_31;
              v15 = *(_QWORD *)(v63 + 8 * v16);
              if (!v15)
                break;
            }
          }
        }
      }
    }
LABEL_22:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v16 << 6);
    v8 = v16;
LABEL_23:
    v22 = (uint64_t *)(*(_QWORD *)(v7 + 48) + 16 * v13);
    v23 = *v22;
    v24 = v22[1];
    sub_1C07B1280();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    if ((sub_1C1070624() & 1) == 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v26 = v62;
      v65 = v62;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1C09D30E0();
        v26 = v65;
      }
      v27 = *(_QWORD *)(v26 + 16);
      v28 = v27 + 1;
      if (v27 >= *(_QWORD *)(v26 + 24) >> 1)
      {
        sub_1C09D30E0();
        v28 = v27 + 1;
        v26 = v65;
      }
      *(_QWORD *)(v26 + 16) = v28;
      v62 = v26;
      v29 = v26 + 16 * v27;
      *(_QWORD *)(v29 + 32) = v23;
      *(_QWORD *)(v29 + 40) = v24;
      goto LABEL_3;
    }
    sub_1C077E584();
    if (v9)
      goto LABEL_4;
  }
  v21 = v8 + 7;
  while (v21 < v10)
  {
    v15 = *(_QWORD *)(v63 + 8 * v21++);
    if (v15)
    {
      v16 = v21 - 1;
      goto LABEL_22;
    }
  }
LABEL_31:
  v11 = 0xEF736E6F69746172;
  v9 = 0x67696D5F62647267;
  swift_release();
  v30 = sub_1C106C574();
  if ((v30 & 1) == 0)
  {
    v3 = *(_QWORD *)(v62 + 16) != 0;
    goto LABEL_39;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    goto LABEL_51;
LABEL_35:
  v32 = v62;
  v33 = *(_QWORD *)(v62 + 16);
  a1 = (v33 + 1);
  if (v33 >= *(_QWORD *)(v62 + 24) >> 1)
  {
    sub_1C07B7730();
    v32 = v58;
  }
  *(_QWORD *)(v32 + 16) = a1;
  v34 = v32 + 16 * v33;
  *(_QWORD *)(v34 + 32) = v9;
  *(_QWORD *)(v34 + 40) = v11;
  v3 = 1;
LABEL_39:
  swift_bridgeObjectRelease();
  if (v3)
  {
    if (qword_1ED762B20 != -1)
      swift_once();
    v35 = sub_1C077585C();
    sub_1C07A3AC4(v35, (uint64_t)qword_1ED78D9F8);
    sub_1C106F538();
    v36 = sub_1C0784E0C();
    if (sub_1C077F050(v36))
    {
      v37 = (uint8_t *)sub_1C0775854();
      sub_1C0775854();
      sub_1C07A5424(4.8149e-34);
      v38 = sub_1C079F5BC();
      sub_1C07B9748(v38, v39, v40, v41, v42, v43, v44, v45, v59, v60, v61);
      sub_1C0793BC0();
      sub_1C07878F0();
      sub_1C077E584();
      v46 = "StaticSchemaDatabaseProtocol<%s>: _performExistingSchemaCheck: need to reset";
      goto LABEL_48;
    }
  }
  else
  {
    if (qword_1ED762B20 != -1)
      swift_once();
    v47 = sub_1C077585C();
    sub_1C07A3AC4(v47, (uint64_t)qword_1ED78D9F8);
    sub_1C106F538();
    v48 = sub_1C0784E0C();
    if (sub_1C077F050(v48))
    {
      v37 = (uint8_t *)sub_1C0775854();
      sub_1C0775854();
      sub_1C07A5424(4.8149e-34);
      v49 = sub_1C079F5BC();
      sub_1C07B9748(v49, v50, v51, v52, v53, v54, v55, v56, v59, v60, v61);
      sub_1C0793BC0();
      sub_1C07878F0();
      sub_1C077E584();
      v46 = "StaticSchemaDatabaseProtocol<%s>: _performExistingSchemaCheck: no existing schema";
LABEL_48:
      sub_1C07796F0(&dword_1C0771000, a1, (os_log_type_t)v7, v46, v37);
      sub_1C077D1D0();
      sub_1C0776778();
    }
  }

  sub_1C07878F0();
  return v3;
}

void sub_1C0A8E9EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22[2];

  sub_1C077AE5C();
  v20 = sub_1C0780AEC();
  v1 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  sub_1C0778564();
  v4 = v3 - v2;
  v21 = sub_1C106BB54();
  MEMORY[0x1E0C80A78](v21);
  sub_1C0778564();
  if (qword_1ED762B18 != -1)
    swift_once();
  v5 = sub_1C077585C();
  v6 = sub_1C079E000(v5, (uint64_t)qword_1ED762AF8);
  sub_1C079381C();
  sub_1C106F538();
  v7 = sub_1C0784E0C();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)sub_1C0775854();
    v22[0] = sub_1C0775854();
    *(_DWORD *)v8 = 136315138;
    swift_retain();
    v9 = sub_1C106FB5C();
    sub_1C0788DAC(v9, v10, v22);
    sub_1C10705AC();
    sub_1C07878F0();
    swift_bridgeObjectRelease();
    sub_1C07796F0(&dword_1C0771000, v6, v7, "StaticSchemaDatabaseProtocol<%s>: creating schema", v8);
    sub_1C077D1D0();
    sub_1C0776778();
  }

  sub_1C07878F0();
  v22[0] = MEMORY[0x1E0DEE9D8];
  sub_1C0794BAC((unint64_t *)&unk_1ED75E9C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D23C10], MEMORY[0x1E0D23C20]);
  sub_1C07ACF80((uint64_t *)&unk_1ED760080);
  sub_1C0A8F4B4();
  sub_1C1070660();
  sub_1C079B6F0();
  sub_1C106C670();
  if (v0)
  {
    v11 = sub_1C07B72C0();
    v12(v11);
  }
  else
  {
    v13 = sub_1C07B72C0();
    v14(v13);
    sub_1C0A8F17C();
    v22[0] = 0;
    v22[1] = 0xE000000000000000;
    sub_1C1070774();
    swift_bridgeObjectRelease();
    sub_1C07ACF80(&qword_1ED762C90);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1C1078FC0;
    sub_1C07965DC(v15, MEMORY[0x1E0DEA968]);
    v16 = sub_1C0A8EDA8();
    if (v17 >> 60 == 15)
    {
      v16 = 0;
      v17 = 0;
      v18 = 0;
      v19 = 0;
      *(_QWORD *)(v15 + 88) = 0;
    }
    else
    {
      v19 = MEMORY[0x1E0D235A8];
      v18 = MEMORY[0x1E0CB0338];
    }
    *(_QWORD *)(v15 + 72) = v16;
    *(_QWORD *)(v15 + 80) = v17;
    *(_QWORD *)(v15 + 96) = v18;
    *(_QWORD *)(v15 + 104) = v19;
    sub_1C106C010();
    sub_1C106C694();
    (*(void (**)(uint64_t))(v1 + 8))(v4);
  }
  sub_1C07757D0();
}

uint64_t sub_1C0A8EDA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v0 = sub_1C106F874();
  MEMORY[0x1E0C80A78](v0);
  sub_1C0778564();
  sub_1C106F868();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v1);
  sub_1C07785B8();
  v2 = sub_1C106FB50();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1C0778564();
  v6 = v5 - v4;
  sub_1C106FB44();
  v7 = sub_1C106FB20();
  v9 = v8;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
  if (v9 >> 60 != 15)
  {
    sub_1C0794BAC((unint64_t *)&qword_1ED762B30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9940], MEMORY[0x1E0CA9930]);
    sub_1C106F85C();
    __asm { BR              X10 }
  }
  return v7;
}

void sub_1C0A8F01C()
{
  sub_1C0A8F030();
}

void sub_1C0A8F030()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1C077AE5C();
  sub_1C07ACF80(&qword_1ED761500);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v1);
  sub_1C07785B8();
  sub_1C07ACF80((uint64_t *)&unk_1ED75E9F0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v2);
  sub_1C077962C();
  sub_1C106C514();
  sub_1C106C55C();
  sub_1C0799C8C();
  sub_1C079BEF4();
  sub_1C0794658();
  v3 = sub_1C106C604();
  sub_1C0792FAC();
  swift_release();
  sub_1C0797C04();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(v0, *MEMORY[0x1E0D247F8], v3);
  sub_1C07B2D8C(v0, 0, 1, v3);
  sub_1C106BE84();
  swift_release();
  swift_release();
  sub_1C0797C04();
  sub_1C106C4FC();
  sub_1C0799C8C();
  sub_1C079BEF4();
  sub_1C0794658();
  sub_1C0792FAC();
  swift_release();
  swift_release();
  sub_1C0797C04();
  sub_1C07757D0();
}

void sub_1C0A8F17C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  sub_1C077AE5C();
  v1 = sub_1C0780AEC();
  MEMORY[0x1E0C80A78](v1);
  sub_1C077962C();
  if (qword_1ED762B20 != -1)
    swift_once();
  v2 = sub_1C077585C();
  sub_1C079E000(v2, (uint64_t)qword_1ED78D9F8);
  sub_1C079381C();
  v3 = sub_1C106F538();
  v4 = sub_1C1070384();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)sub_1C0775854();
    sub_1C0775854();
    *(_DWORD *)v5 = 136315138;
    sub_1C07A31C0();
    v6 = sub_1C106FB5C();
    v8 = sub_1C07A5D4C(v6, v7);
    sub_1C07936A0(v8);
    sub_1C10705AC();
    sub_1C07878F0();
    swift_bridgeObjectRelease();
    sub_1C07796F0(&dword_1C0771000, v3, v4, "StaticSchemaDatabaseProtocol<%s>: executeSchemaSQL: starting.", v5);
    sub_1C077D1D0();
    sub_1C0776778();
  }

  sub_1C07878F0();
  sub_1C106C034();
  sub_1C106C694();
  if (v0)
  {
    sub_1C0789E40();
  }
  else
  {
    sub_1C0789E40();
    sub_1C079381C();
    v9 = sub_1C106F538();
    v10 = sub_1C1070384();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)sub_1C0775854();
      sub_1C0775854();
      *(_DWORD *)v11 = 136315138;
      sub_1C07A31C0();
      v12 = sub_1C106FB5C();
      v14 = sub_1C07A5D4C(v12, v13);
      sub_1C07936A0(v14);
      sub_1C10705AC();
      sub_1C07878F0();
      sub_1C077E584();
      sub_1C07796F0(&dword_1C0771000, v9, v10, "StaticSchemaDatabaseProtocol<%s>: executeSchemaSQL: completed.", v11);
      sub_1C0778610();
      sub_1C0776778();
    }

    sub_1C07878F0();
  }
  sub_1C07757D0();
}

void sub_1C0A8F42C()
{
  sub_1C0A8DC44();
}

void sub_1C0A8F464()
{
  sub_1C0A8DC44();
}

void sub_1C0A8F49C()
{
  sub_1C0A8F464();
}

unint64_t sub_1C0A8F4B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED760090;
  if (!qword_1ED760090)
  {
    v1 = sub_1C07D4BEC((uint64_t *)&unk_1ED760080);
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED760090);
  }
  return result;
}

void sub_1C0A8F4F8()
{
  sub_1C0A8F42C();
}

uint64_t sub_1C0A8F510(uint64_t a1)
{
  uint64_t v1;

  strcpy((char *)(v1 + 16), "GraphDiffPhase");
  *(_BYTE *)(v1 + 31) = -18;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC24IntelligencePlatformCore14GraphDiffPhase_pipelineType) = 1;
  sub_1C07E563C(a1, v1 + OBJC_IVAR____TtC24IntelligencePlatformCore14GraphDiffPhase_stores, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  return v1;
}

uint64_t sub_1C0A8F570()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

uint64_t sub_1C0A8F588()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 24);
  type metadata accessor for KeyValueStore();
  if (sub_1C0BB8EF8(v1 + OBJC_IVAR____TtC24IntelligencePlatformCore14GraphDiffPhase_stores)
    && (v2 = sub_1C07F7EC0(), sub_1C07785A8(), v2 != 2))
  {
    swift_bridgeObjectRelease();
    if (qword_1ED761458 != -1)
      swift_once();
    v5 = sub_1C106F544();
    sub_1C079E000(v5, (uint64_t)qword_1ED78D818);
    swift_retain_n();
    v6 = sub_1C106F538();
    v7 = sub_1C10703A8();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)sub_1C0775854();
      v13 = sub_1C0775854();
      *(_DWORD *)v8 = 136315138;
      swift_retain();
      sub_1C0A912D4(&qword_1EF63A000);
      v10 = v9;
      v12 = v11;
      sub_1C07785A8();
      *(_QWORD *)(v0 + 16) = sub_1C0788DAC(v10, v12, &v13);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      sub_1C07863E8();
      _os_log_impl(&dword_1C0771000, v6, v7, "%s - Skip GraphDiffPhase due to graph rebuild", v8, 0xCu);
      swift_arrayDestroy();
      sub_1C0776778();
    }
    sub_1C07863E8();

  }
  else
  {
    v3 = *(_QWORD *)(v0 + 24);
    swift_bridgeObjectRelease();
    type metadata accessor for PhaseStores();
    sub_1C0A9088C((uint64_t)sub_1C0A911FC, v3, (uint64_t)sub_1C0A93B7C);
    sub_1C0A9088C((uint64_t)sub_1C0A9121C, v3, (uint64_t)sub_1C0A93B60);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C0A8F7FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  double v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  int64_t v64;
  unint64_t v65;
  int64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  int64_t v70;
  unint64_t v71;
  int64_t v72;
  int64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t result;
  uint64_t v94;
  int64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD v99[5];

  sub_1C07ACF80(&qword_1EF638E40);
  sub_1C07BB218(&qword_1EF63A038, &qword_1EF638E40);
  sub_1C07803F8(&qword_1ED750DF0, (void (*)(uint64_t))type metadata accessor for ConstructionGraphTriple);
  v3 = sub_1C106FDA8();
  v99[0] = a2;
  sub_1C07ACF80(&qword_1ED758CD8);
  sub_1C07BB218(&qword_1EF63A040, &qword_1ED758CD8);
  sub_1C07803F8(&qword_1ED7606F0, (void (*)(uint64_t))type metadata accessor for GraphTriple);
  v4 = sub_1C106FDA8();
  v97 = MEMORY[0x1E0DEE9D8];
  v98 = MEMORY[0x1E0DEE9D8];
  sub_1C106AC6C();
  v5 = 0;
  v7 = v6;
  v94 = v3 + 64;
  v8 = 1 << *(_BYTE *)(v3 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(v3 + 64);
  v95 = (unint64_t)(v8 + 63) >> 6;
  while (v10)
  {
    v11 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v12 = v11 | (v5 << 6);
LABEL_20:
    v16 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v12);
    if (*(_QWORD *)(v4 + 16)
      && (v17 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v12), v18 = sub_1C0778AEC(v17), (v19 & 1) != 0)
      && (v20 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v18), *(_QWORD *)(v20 + 16) == *(_QWORD *)(v16 + 16)))
    {
      sub_1C0778AEC(v17);
      if ((v62 & 1) != 0)
      {
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        swift_isUniquelyReferenced_nonNull_native();
        v99[0] = v4;
        sub_1C07ACF80(&qword_1ED748130);
        sub_1C107090C();
        sub_1C1070924();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      }
      sub_1C0A90B80(v20, v16, type metadata accessor for GraphTriple, type metadata accessor for ConstructionGraphTriple, (uint64_t)sub_1C07EC154);
      swift_bridgeObjectRelease();
      sub_1C0BDB0DC();
      sub_1C0BDB0DC();
    }
    else
    {
      v21 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v22 = sub_1C0A9091C(v21, type metadata accessor for ConstructionGraphTriple, (void (*)(_QWORD, _QWORD, _QWORD, double))sub_1C09D3EE4, v7);
      v23 = *(_QWORD *)(v22 + 16);
      v24 = v98;
      v25 = *(_QWORD *)(v98 + 16);
      if (__OFADD__(v25, v23))
      {
        __break(1u);
LABEL_100:
        __break(1u);
LABEL_101:
        __break(1u);
LABEL_102:
        __break(1u);
        goto LABEL_103;
      }
      v26 = v22;
      if (!swift_isUniquelyReferenced_nonNull_native() || v25 + v23 > *(_QWORD *)(v98 + 24) >> 1)
      {
        sub_1C07EC154();
        v24 = v27;
      }
      if (*(_QWORD *)(v26 + 16))
      {
        v28 = *(_QWORD *)(v24 + 16);
        v29 = (*(_QWORD *)(v24 + 24) >> 1) - v28;
        v30 = type metadata accessor for ConstructionGraphTriple(0);
        if (v29 < v23)
          goto LABEL_105;
        v31 = *(_QWORD *)(v30 - 8);
        v32 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
        v33 = *(_QWORD *)(v31 + 72);
        v34 = v24 + v32 + v33 * v28;
        v35 = v26 + v32;
        v36 = v33 * v23;
        v37 = v34 + v36;
        v38 = v35 + v36;
        if (v35 < v37 && v34 < v38)
          goto LABEL_114;
        swift_arrayInitWithCopy();
        if (v23)
        {
          v40 = *(_QWORD *)(v24 + 16);
          v41 = __OFADD__(v40, v23);
          v42 = v40 + v23;
          if (v41)
            goto LABEL_108;
          *(_QWORD *)(v24 + 16) = v42;
        }
      }
      else if (v23)
      {
        goto LABEL_100;
      }
      swift_bridgeObjectRelease();
      v98 = v24;
      v43 = *(_QWORD *)(v16 + 16);
      v44 = v97;
      v45 = *(_QWORD *)(v97 + 16);
      if (__OFADD__(v45, v43))
        goto LABEL_101;
      if (!swift_isUniquelyReferenced_nonNull_native()
        || (v46 = *(_QWORD *)(v97 + 24) >> 1, v46 < v45 + v43))
      {
        sub_1C07EC154();
        v44 = v47;
        v46 = *(_QWORD *)(v47 + 24) >> 1;
      }
      if (*(_QWORD *)(v16 + 16))
      {
        v48 = *(_QWORD *)(v44 + 16);
        v49 = v46 - v48;
        v50 = type metadata accessor for ConstructionGraphTriple(0);
        if (v49 < v43)
          goto LABEL_106;
        v51 = *(_QWORD *)(v50 - 8);
        v52 = (*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
        v53 = *(_QWORD *)(v51 + 72);
        v54 = v44 + v52 + v53 * v48;
        v55 = v16 + v52;
        v56 = v53 * v43;
        v57 = v54 + v56;
        v58 = v55 + v56;
        if (v55 < v57 && v54 < v58)
          goto LABEL_114;
        swift_arrayInitWithCopy();
        if (v43)
        {
          v60 = *(_QWORD *)(v44 + 16);
          v41 = __OFADD__(v60, v43);
          v61 = v60 + v43;
          if (v41)
            goto LABEL_109;
          *(_QWORD *)(v44 + 16) = v61;
        }
      }
      else if (v43)
      {
        goto LABEL_102;
      }
      swift_bridgeObjectRelease();
      v97 = v44;
    }
  }
  v13 = v5 + 1;
  if (__OFADD__(v5, 1))
    goto LABEL_110;
  if (v13 < v95)
  {
    v14 = *(_QWORD *)(v94 + 8 * v13);
    ++v5;
    if (!v14)
    {
      v5 = v13 + 1;
      if (v13 + 1 >= v95)
        goto LABEL_58;
      v14 = *(_QWORD *)(v94 + 8 * v5);
      if (!v14)
      {
        v5 = v13 + 2;
        if (v13 + 2 >= v95)
          goto LABEL_58;
        v14 = *(_QWORD *)(v94 + 8 * v5);
        if (!v14)
        {
          v15 = v13 + 3;
          if (v15 >= v95)
            goto LABEL_58;
          v14 = *(_QWORD *)(v94 + 8 * v15);
          if (!v14)
          {
            while (1)
            {
              v5 = v15 + 1;
              if (__OFADD__(v15, 1))
                break;
              if (v5 >= v95)
                goto LABEL_58;
              v14 = *(_QWORD *)(v94 + 8 * v5);
              ++v15;
              if (v14)
                goto LABEL_19;
            }
LABEL_113:
            __break(1u);
LABEL_114:
            result = sub_1C10709F0();
            __break(1u);
            return result;
          }
          v5 = v15;
        }
      }
    }
LABEL_19:
    v10 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v5 << 6);
    goto LABEL_20;
  }
LABEL_58:
  swift_release();
  if (*(_QWORD *)(v4 + 16))
  {
    sub_1C0861BD0(v99);
    v63 = v99[0];
    v96 = v99[1];
    v64 = v99[3];
    v65 = v99[4];
    v66 = (unint64_t)(v99[2] + 64) >> 6;
    swift_bridgeObjectRetain_n();
    v67 = MEMORY[0x1E0DEE9D8];
    if (!v65)
      goto LABEL_61;
LABEL_60:
    v68 = __clz(__rbit64(v65));
    v65 &= v65 - 1;
    v69 = v68 | (v64 << 6);
    while (1)
    {
      v74 = *(_QWORD *)(*(_QWORD *)(v63 + 56) + 8 * v69);
      v75 = *(_QWORD *)(v74 + 16);
      v76 = *(_QWORD *)(v67 + 16);
      if (__OFADD__(v76, v75))
        break;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v76 + v75 > *(_QWORD *)(v67 + 24) >> 1)
      {
        sub_1C07EB774();
        v67 = v77;
      }
      if (*(_QWORD *)(v74 + 16))
      {
        v78 = *(_QWORD *)(v67 + 16);
        v79 = (*(_QWORD *)(v67 + 24) >> 1) - v78;
        v80 = type metadata accessor for GraphTriple(0);
        if (v79 < v75)
          goto LABEL_107;
        v81 = *(_QWORD *)(v80 - 8);
        v82 = (*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80);
        v83 = *(_QWORD *)(v81 + 72);
        v84 = v67 + v82 + v83 * v78;
        v85 = v74 + v82;
        v86 = v83 * v75;
        v87 = v84 + v86;
        v88 = v85 + v86;
        if (v85 < v87 && v84 < v88)
          goto LABEL_114;
        swift_arrayInitWithCopy();
        if (v75)
        {
          v90 = *(_QWORD *)(v67 + 16);
          v41 = __OFADD__(v90, v75);
          v91 = v90 + v75;
          if (v41)
            goto LABEL_111;
          *(_QWORD *)(v67 + 16) = v91;
        }
      }
      else if (v75)
      {
        goto LABEL_104;
      }
      swift_bridgeObjectRelease();
      if (v65)
        goto LABEL_60;
LABEL_61:
      v70 = v64 + 1;
      if (__OFADD__(v64, 1))
        goto LABEL_112;
      if (v70 >= v66)
        goto LABEL_96;
      v71 = *(_QWORD *)(v96 + 8 * v70);
      v72 = v64 + 1;
      if (!v71)
      {
        v72 = v64 + 2;
        if (v64 + 2 >= v66)
          goto LABEL_96;
        v71 = *(_QWORD *)(v96 + 8 * v72);
        if (!v71)
        {
          v72 = v64 + 3;
          if (v64 + 3 >= v66)
            goto LABEL_96;
          v71 = *(_QWORD *)(v96 + 8 * v72);
          if (!v71)
          {
            v72 = v64 + 4;
            if (v64 + 4 >= v66)
              goto LABEL_96;
            v71 = *(_QWORD *)(v96 + 8 * v72);
            if (!v71)
            {
              v72 = v64 + 5;
              if (v64 + 5 >= v66)
                goto LABEL_96;
              v71 = *(_QWORD *)(v96 + 8 * v72);
              if (!v71)
              {
                v72 = v64 + 6;
                if (v64 + 6 >= v66)
                  goto LABEL_96;
                v71 = *(_QWORD *)(v96 + 8 * v72);
                if (!v71)
                {
                  v73 = v64 + 7;
                  while (v73 < v66)
                  {
                    v71 = *(_QWORD *)(v96 + 8 * v73++);
                    if (v71)
                    {
                      v72 = v73 - 1;
                      goto LABEL_78;
                    }
                  }
LABEL_96:
                  swift_bridgeObjectRelease();
                  swift_release();
                  v92 = v98;
                  swift_bridgeObjectRelease();
                  return v92;
                }
              }
            }
          }
        }
      }
LABEL_78:
      v65 = (v71 - 1) & v71;
      v69 = __clz(__rbit64(v71)) + (v72 << 6);
      v64 = v72;
    }
LABEL_103:
    __break(1u);
LABEL_104:
    __break(1u);
LABEL_105:
    __break(1u);
LABEL_106:
    __break(1u);
LABEL_107:
    __break(1u);
LABEL_108:
    __break(1u);
LABEL_109:
    __break(1u);
LABEL_110:
    __break(1u);
LABEL_111:
    __break(1u);
LABEL_112:
    __break(1u);
    goto LABEL_113;
  }
  swift_bridgeObjectRelease();
  return v98;
}

uint64_t sub_1C0A90044(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  double v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  int64_t v64;
  unint64_t v65;
  int64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  int64_t v70;
  unint64_t v71;
  int64_t v72;
  int64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t result;
  uint64_t v94;
  int64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD v99[5];

  sub_1C07ACF80(&qword_1EF63A010);
  sub_1C07BB218(&qword_1EF63A018, &qword_1EF63A010);
  sub_1C07803F8(&qword_1EF63A020, (void (*)(uint64_t))type metadata accessor for ConstructionEventTriple);
  v3 = sub_1C106FDA8();
  v99[0] = a2;
  sub_1C07ACF80(&qword_1ED7462A8);
  sub_1C07BB218(&qword_1ED7462B0, &qword_1ED7462A8);
  sub_1C07803F8(&qword_1ED75F058, (void (*)(uint64_t))type metadata accessor for EventTriple);
  v4 = sub_1C106FDA8();
  v97 = MEMORY[0x1E0DEE9D8];
  v98 = MEMORY[0x1E0DEE9D8];
  sub_1C106AC6C();
  v5 = 0;
  v7 = v6;
  v94 = v3 + 64;
  v8 = 1 << *(_BYTE *)(v3 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(v3 + 64);
  v95 = (unint64_t)(v8 + 63) >> 6;
  while (v10)
  {
    v11 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v12 = v11 | (v5 << 6);
LABEL_20:
    v16 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v12);
    if (*(_QWORD *)(v4 + 16)
      && (v17 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v12), v18 = sub_1C0778AEC(v17), (v19 & 1) != 0)
      && (v20 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v18), *(_QWORD *)(v20 + 16) == *(_QWORD *)(v16 + 16)))
    {
      sub_1C0778AEC(v17);
      if ((v62 & 1) != 0)
      {
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        swift_isUniquelyReferenced_nonNull_native();
        v99[0] = v4;
        sub_1C07ACF80(&qword_1EF63A028);
        sub_1C107090C();
        sub_1C1070924();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      }
      sub_1C0A90B80(v20, v16, type metadata accessor for EventTriple, type metadata accessor for ConstructionEventTriple, (uint64_t)sub_1C07EC8EC);
      swift_bridgeObjectRelease();
      sub_1C0BDB114();
      sub_1C0BDB114();
    }
    else
    {
      v21 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v22 = sub_1C0A9091C(v21, type metadata accessor for ConstructionEventTriple, (void (*)(_QWORD, _QWORD, _QWORD, double))sub_1C09D4734, v7);
      v23 = *(_QWORD *)(v22 + 16);
      v24 = v98;
      v25 = *(_QWORD *)(v98 + 16);
      if (__OFADD__(v25, v23))
      {
        __break(1u);
LABEL_100:
        __break(1u);
LABEL_101:
        __break(1u);
LABEL_102:
        __break(1u);
        goto LABEL_103;
      }
      v26 = v22;
      if (!swift_isUniquelyReferenced_nonNull_native() || v25 + v23 > *(_QWORD *)(v98 + 24) >> 1)
      {
        sub_1C07EC8EC();
        v24 = v27;
      }
      if (*(_QWORD *)(v26 + 16))
      {
        v28 = *(_QWORD *)(v24 + 16);
        v29 = (*(_QWORD *)(v24 + 24) >> 1) - v28;
        v30 = type metadata accessor for ConstructionEventTriple(0);
        if (v29 < v23)
          goto LABEL_105;
        v31 = *(_QWORD *)(v30 - 8);
        v32 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
        v33 = *(_QWORD *)(v31 + 72);
        v34 = v24 + v32 + v33 * v28;
        v35 = v26 + v32;
        v36 = v33 * v23;
        v37 = v34 + v36;
        v38 = v35 + v36;
        if (v35 < v37 && v34 < v38)
          goto LABEL_114;
        swift_arrayInitWithCopy();
        if (v23)
        {
          v40 = *(_QWORD *)(v24 + 16);
          v41 = __OFADD__(v40, v23);
          v42 = v40 + v23;
          if (v41)
            goto LABEL_108;
          *(_QWORD *)(v24 + 16) = v42;
        }
      }
      else if (v23)
      {
        goto LABEL_100;
      }
      swift_bridgeObjectRelease();
      v98 = v24;
      v43 = *(_QWORD *)(v16 + 16);
      v44 = v97;
      v45 = *(_QWORD *)(v97 + 16);
      if (__OFADD__(v45, v43))
        goto LABEL_101;
      if (!swift_isUniquelyReferenced_nonNull_native()
        || (v46 = *(_QWORD *)(v97 + 24) >> 1, v46 < v45 + v43))
      {
        sub_1C07EC8EC();
        v44 = v47;
        v46 = *(_QWORD *)(v47 + 24) >> 1;
      }
      if (*(_QWORD *)(v16 + 16))
      {
        v48 = *(_QWORD *)(v44 + 16);
        v49 = v46 - v48;
        v50 = type metadata accessor for ConstructionEventTriple(0);
        if (v49 < v43)
          goto LABEL_106;
        v51 = *(_QWORD *)(v50 - 8);
        v52 = (*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
        v53 = *(_QWORD *)(v51 + 72);
        v54 = v44 + v52 + v53 * v48;
        v55 = v16 + v52;
        v56 = v53 * v43;
        v57 = v54 + v56;
        v58 = v55 + v56;
        if (v55 < v57 && v54 < v58)
          goto LABEL_114;
        swift_arrayInitWithCopy();
        if (v43)
        {
          v60 = *(_QWORD *)(v44 + 16);
          v41 = __OFADD__(v60, v43);
          v61 = v60 + v43;
          if (v41)
            goto LABEL_109;
          *(_QWORD *)(v44 + 16) = v61;
        }
      }
      else if (v43)
      {
        goto LABEL_102;
      }
      swift_bridgeObjectRelease();
      v97 = v44;
    }
  }
  v13 = v5 + 1;
  if (__OFADD__(v5, 1))
    goto LABEL_110;
  if (v13 < v95)
  {
    v14 = *(_QWORD *)(v94 + 8 * v13);
    ++v5;
    if (!v14)
    {
      v5 = v13 + 1;
      if (v13 + 1 >= v95)
        goto LABEL_58;
      v14 = *(_QWORD *)(v94 + 8 * v5);
      if (!v14)
      {
        v5 = v13 + 2;
        if (v13 + 2 >= v95)
          goto LABEL_58;
        v14 = *(_QWORD *)(v94 + 8 * v5);
        if (!v14)
        {
          v15 = v13 + 3;
          if (v15 >= v95)
            goto LABEL_58;
          v14 = *(_QWORD *)(v94 + 8 * v15);
          if (!v14)
          {
            while (1)
            {
              v5 = v15 + 1;
              if (__OFADD__(v15, 1))
                break;
              if (v5 >= v95)
                goto LABEL_58;
              v14 = *(_QWORD *)(v94 + 8 * v5);
              ++v15;
              if (v14)
                goto LABEL_19;
            }
LABEL_113:
            __break(1u);
LABEL_114:
            result = sub_1C10709F0();
            __break(1u);
            return result;
          }
          v5 = v15;
        }
      }
    }
LABEL_19:
    v10 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v5 << 6);
    goto LABEL_20;
  }
LABEL_58:
  swift_release();
  if (*(_QWORD *)(v4 + 16))
  {
    sub_1C0861BD0(v99);
    v63 = v99[0];
    v96 = v99[1];
    v64 = v99[3];
    v65 = v99[4];
    v66 = (unint64_t)(v99[2] + 64) >> 6;
    swift_bridgeObjectRetain_n();
    v67 = MEMORY[0x1E0DEE9D8];
    if (!v65)
      goto LABEL_61;
LABEL_60:
    v68 = __clz(__rbit64(v65));
    v65 &= v65 - 1;
    v69 = v68 | (v64 << 6);
    while (1)
    {
      v74 = *(_QWORD *)(*(_QWORD *)(v63 + 56) + 8 * v69);
      v75 = *(_QWORD *)(v74 + 16);
      v76 = *(_QWORD *)(v67 + 16);
      if (__OFADD__(v76, v75))
        break;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v76 + v75 > *(_QWORD *)(v67 + 24) >> 1)
      {
        sub_1C07EBE64();
        v67 = v77;
      }
      if (*(_QWORD *)(v74 + 16))
      {
        v78 = *(_QWORD *)(v67 + 16);
        v79 = (*(_QWORD *)(v67 + 24) >> 1) - v78;
        v80 = type metadata accessor for EventTriple(0);
        if (v79 < v75)
          goto LABEL_107;
        v81 = *(_QWORD *)(v80 - 8);
        v82 = (*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80);
        v83 = *(_QWORD *)(v81 + 72);
        v84 = v67 + v82 + v83 * v78;
        v85 = v74 + v82;
        v86 = v83 * v75;
        v87 = v84 + v86;
        v88 = v85 + v86;
        if (v85 < v87 && v84 < v88)
          goto LABEL_114;
        swift_arrayInitWithCopy();
        if (v75)
        {
          v90 = *(_QWORD *)(v67 + 16);
          v41 = __OFADD__(v90, v75);
          v91 = v90 + v75;
          if (v41)
            goto LABEL_111;
          *(_QWORD *)(v67 + 16) = v91;
        }
      }
      else if (v75)
      {
        goto LABEL_104;
      }
      swift_bridgeObjectRelease();
      if (v65)
        goto LABEL_60;
LABEL_61:
      v70 = v64 + 1;
      if (__OFADD__(v64, 1))
        goto LABEL_112;
      if (v70 >= v66)
        goto LABEL_96;
      v71 = *(_QWORD *)(v96 + 8 * v70);
      v72 = v64 + 1;
      if (!v71)
      {
        v72 = v64 + 2;
        if (v64 + 2 >= v66)
          goto LABEL_96;
        v71 = *(_QWORD *)(v96 + 8 * v72);
        if (!v71)
        {
          v72 = v64 + 3;
          if (v64 + 3 >= v66)
            goto LABEL_96;
          v71 = *(_QWORD *)(v96 + 8 * v72);
          if (!v71)
          {
            v72 = v64 + 4;
            if (v64 + 4 >= v66)
              goto LABEL_96;
            v71 = *(_QWORD *)(v96 + 8 * v72);
            if (!v71)
            {
              v72 = v64 + 5;
              if (v64 + 5 >= v66)
                goto LABEL_96;
              v71 = *(_QWORD *)(v96 + 8 * v72);
              if (!v71)
              {
                v72 = v64 + 6;
                if (v64 + 6 >= v66)
                  goto LABEL_96;
                v71 = *(_QWORD *)(v96 + 8 * v72);
                if (!v71)
                {
                  v73 = v64 + 7;
                  while (v73 < v66)
                  {
                    v71 = *(_QWORD *)(v96 + 8 * v73++);
                    if (v71)
                    {
                      v72 = v73 - 1;
                      goto LABEL_78;
                    }
                  }
LABEL_96:
                  swift_bridgeObjectRelease();
                  swift_release();
                  v92 = v98;
                  swift_bridgeObjectRelease();
                  return v92;
                }
              }
            }
          }
        }
      }
LABEL_78:
      v65 = (v71 - 1) & v71;
      v69 = __clz(__rbit64(v71)) + (v72 << 6);
      v64 = v72;
    }
LABEL_103:
    __break(1u);
LABEL_104:
    __break(1u);
LABEL_105:
    __break(1u);
LABEL_106:
    __break(1u);
LABEL_107:
    __break(1u);
LABEL_108:
    __break(1u);
LABEL_109:
    __break(1u);
LABEL_110:
    __break(1u);
LABEL_111:
    __break(1u);
LABEL_112:
    __break(1u);
    goto LABEL_113;
  }
  swift_bridgeObjectRelease();
  return v98;
}

uint64_t sub_1C0A9088C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v5;
  _QWORD v7[6];

  v5 = *v3;
  v7[2] = a1;
  v7[3] = a2;
  v7[4] = v5;
  swift_retain();
  sub_1C077FF50(a3, (uint64_t)v7);
  return sub_1C07785A8();
}

uint64_t sub_1C0A908E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t sub_1C0A90908()
{
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

uint64_t sub_1C0A9091C(uint64_t a1, uint64_t (*a2)(_QWORD), void (*a3)(_QWORD, _QWORD, _QWORD, double), double a4)
{
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  void (*v44)(_QWORD, _QWORD, _QWORD, double);
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;

  v8 = (int *)a2(0);
  v9 = *((_QWORD *)v8 - 1);
  MEMORY[0x1E0C80A78](v8);
  sub_1C077AF80();
  v12 = v10 - v11;
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v44 - v15;
  v17 = *(_QWORD *)(a1 + 16);
  v18 = MEMORY[0x1E0DEE9D8];
  if (v17)
  {
    v47 = MEMORY[0x1E0DEE9D8];
    v44 = a3;
    a3(0, v17, 0, v14);
    v46 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v19 = a1 + v46;
    v45 = *(_QWORD *)(v9 + 72);
    do
    {
      sub_1C07E6C80(v19, v12, a2);
      sub_1C106E590();
      sub_1C078C714();
      v20(v16, v12);
      v21 = v8[5];
      v22 = v12 + v21;
      v23 = &v16[v21];
      v24 = sub_1C106E41C();
      v25 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
      v25(v23, v22, v24);
      v26 = v8[6];
      v27 = v12 + v26;
      v28 = &v16[v26];
      sub_1C106EB24();
      sub_1C078C714();
      v29(v28, v27);
      v25(&v16[v8[7]], v12 + v8[7], v24);
      v30 = v8[8];
      v31 = *(_QWORD *)(v12 + v8[9]);
      v33 = *(_QWORD *)(v12 + v30);
      v32 = *(_QWORD *)(v12 + v30 + 8);
      v34 = *(_QWORD *)(v12 + v8[10]);
      v35 = (uint64_t *)(v12 + v8[11]);
      v36 = *v35;
      v37 = v35[1];
      v38 = &v16[v30];
      *(_QWORD *)v38 = v33;
      *((_QWORD *)v38 + 1) = v32;
      *(_QWORD *)&v16[v8[9]] = v31;
      *(_QWORD *)&v16[v8[10]] = v34;
      v39 = &v16[v8[11]];
      *(_QWORD *)v39 = v36;
      *((_QWORD *)v39 + 1) = v37;
      *(double *)&v16[v8[12]] = a4;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C07B1F90(v12, a2);
      v18 = v47;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C079CDE4(0, *(_QWORD *)(v18 + 16) + 1);
        v18 = v47;
      }
      v41 = *(_QWORD *)(v18 + 16);
      v40 = *(_QWORD *)(v18 + 24);
      if (v41 >= v40 >> 1)
      {
        sub_1C079CDE4(v40 > 1, v41 + 1);
        v18 = v47;
      }
      *(_QWORD *)(v18 + 16) = v41 + 1;
      v42 = v45;
      sub_1C07E563C((uint64_t)v16, v18 + v46 + v41 * v45, a2);
      v19 += v42;
      --v17;
    }
    while (v17);
  }
  return v18;
}

uint64_t sub_1C0A90B80(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v5;
  uint64_t (*v8)(_QWORD);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t);
  int *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t);
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  uint8_t *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  _QWORD v72[3];
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(_QWORD);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;

  v8 = a3;
  v11 = a3(0);
  v78 = *(_QWORD *)(v11 - 8);
  v79 = v11;
  MEMORY[0x1E0C80A78](v11);
  v84 = (uint64_t)v72 - v12;
  v13 = sub_1C077CF58();
  v80 = a4(v13);
  v14 = *(_QWORD *)(v80 - 8);
  MEMORY[0x1E0C80A78](v80);
  sub_1C077AED0();
  v83 = v15;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v16);
  sub_1C077E3E0();
  MEMORY[0x1E0C80A78](v17);
  sub_1C0778674();
  v85 = v18;
  v19 = *(_QWORD *)(a2 + 16);
  if (v19 == *(_QWORD *)(a1 + 16))
  {
    sub_1C07767C4();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v72[2] = a2;
    if (v19)
    {
      v20 = a2;
      v72[1] = a5;
      v21 = 0;
      v22 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
      v73 = *(_QWORD *)(v14 + 72);
      v74 = v22;
      v23 = v20 + v22;
      v24 = MEMORY[0x1E0DEE9D8];
      v25 = v85;
      v76 = v8;
      v77 = a1;
      v75 = v19;
      while (1)
      {
        sub_1C07E6C80(v23, v25, a4);
        if (v19 == v21)
          break;
        v81 = v23;
        sub_1C078233C();
        v28 = a1 + v26 + *(_QWORD *)(v27 + 72) * v21;
        v29 = v84;
        sub_1C07E6C80(v28, v84, v8);
        sub_1C106E590();
        v30 = sub_1C07908EC();
        v31(v30, v25);
        v32 = (int *)v80;
        v33 = *(int *)(v80 + 20);
        v34 = v25 + v33;
        v35 = v5 + v33;
        v36 = a4;
        v37 = sub_1C106E41C();
        v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
        v38(v35, v34, v37);
        v82 = v24;
        v39 = v79;
        v40 = v29 + *(int *)(v79 + 24);
        v41 = v5 + v32[6];
        sub_1C106EB24();
        sub_1C078C714();
        v42(v41, v40);
        v43 = v37;
        a4 = v36;
        v25 = v85;
        v38(v5 + v32[7], v85 + v32[7], v43);
        v44 = v32[8];
        v45 = *(_QWORD *)(v25 + v44);
        v46 = *(_QWORD *)(v25 + v44 + 8);
        v47 = *(_QWORD *)(v25 + v32[9]);
        v48 = *(_QWORD *)(v25 + v32[10]);
        v49 = (uint64_t *)(v25 + v32[11]);
        v50 = *v49;
        v51 = v49[1];
        v52 = *(int *)(v39 + 48);
        v24 = v82;
        v53 = v83;
        v54 = *(_QWORD *)(v29 + v52);
        v55 = (_QWORD *)(v5 + v44);
        *v55 = v45;
        v55[1] = v46;
        *(_QWORD *)(v5 + v32[9]) = v47;
        *(_QWORD *)(v5 + v32[10]) = v48;
        v56 = (_QWORD *)(v5 + v32[11]);
        *v56 = v50;
        v56[1] = v51;
        *(_QWORD *)(v5 + v32[12]) = v54;
        sub_1C07E6C80(v5, v53, a4);
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          v60 = sub_1C077EE6C();
          v24 = sub_1C07AD220(v60, v61, v62);
        }
        v58 = *(_QWORD *)(v24 + 16);
        v57 = *(_QWORD *)(v24 + 24);
        a1 = v77;
        v19 = v75;
        if (v58 >= v57 >> 1)
          v24 = sub_1C07AD220(v57 > 1, v58 + 1, 1);
        ++v21;
        *(_QWORD *)(v24 + 16) = v58 + 1;
        v59 = v73;
        sub_1C07E563C(v83, v24 + v74 + v58 * v73, a4);
        sub_1C078AC18(v5);
        v8 = v76;
        sub_1C07B1F90(v84, v76);
        sub_1C078AC18(v25);
        v23 = v81 + v59;
        if (v19 == v21)
          goto LABEL_18;
      }
      sub_1C078AC18(v25);
    }
    else
    {
      v24 = MEMORY[0x1E0DEE9D8];
    }
LABEL_18:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v24;
  }
  else
  {
    if (qword_1ED761458 != -1)
      swift_once();
    v63 = sub_1C106F544();
    sub_1C079E000(v63, (uint64_t)qword_1ED78D818);
    swift_bridgeObjectRetain_n();
    v64 = sub_1C106F538();
    v65 = sub_1C1070390();
    if (os_log_type_enabled(v64, v65))
    {
      v66 = (uint8_t *)sub_1C0775854();
      v87 = sub_1C0775854();
      *(_DWORD *)v66 = 136315138;
      v67 = sub_1C07767C4();
      v68 = MEMORY[0x1C3BA683C](v67, v80);
      v70 = v69;
      swift_bridgeObjectRelease();
      v86 = sub_1C0788DAC(v68, v70, &v87);
      sub_1C10705AC();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C0771000, v64, v65, "%s: revertTimestamp error", v66, 0xCu);
      swift_arrayDestroy();
      sub_1C0776778();
    }

    swift_bridgeObjectRelease_n();
    sub_1C07767C4();
  }
  return a2;
}

uint64_t sub_1C0A91050()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1C07B1F90(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore14GraphDiffPhase_stores, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  return swift_deallocClassInstance();
}

uint64_t sub_1C0A91090()
{
  return type metadata accessor for GraphDiffPhase();
}

uint64_t type metadata accessor for GraphDiffPhase()
{
  uint64_t result;

  result = qword_1ED750928;
  if (!qword_1ED750928)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C0A910D0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for PhaseStores();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1C0A91150()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C0806670;
  return sub_1C0A8F570();
}

void sub_1C0A91198()
{
  sub_1C0A912D4(&qword_1EF63A000);
}

void sub_1C0A911C0(uint64_t a1)
{
  uint64_t v2;

  sub_1C07803F8(&qword_1ED750918, (void (*)(uint64_t))type metadata accessor for GraphDiffPhase);
  *(_QWORD *)(a1 + 8) = v2;
}

uint64_t sub_1C0A911FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1C0A908E8(a1, a2, v2, (uint64_t (*)(void))sub_1C0A8F7FC);
}

uint64_t sub_1C0A9121C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1C0A908E8(a1, a2, v2, (uint64_t (*)(void))sub_1C0A90044);
}

void sub_1C0A9123C()
{
  sub_1C0A912D4(&qword_1EF63A048);
}

void sub_1C0A91248()
{
  sub_1C0A91270((void (*)(_QWORD))type metadata accessor for ViewGenerationFullPipelinePhase, &qword_1EF63A050);
}

void sub_1C0A9125C()
{
  sub_1C0A91270((void (*)(_QWORD))type metadata accessor for ViewGenerationDeltaPipelinePhase, &qword_1ED74CCF0);
}

void sub_1C0A91270(void (*a1)(_QWORD), uint64_t *a2)
{
  a1(0);
  sub_1C07ACF80(a2);
  sub_1C078ACCC();
  sub_1C079E228();
  swift_bridgeObjectRelease();
  sub_1C07BC7F8();
  sub_1C0779CF8();
}

void sub_1C0A912C8()
{
  sub_1C0A912D4(&qword_1ED74CDD8);
}

void sub_1C0A912D4(uint64_t *a1)
{
  sub_1C07ACF80(a1);
  sub_1C078ACCC();
  sub_1C079E228();
  swift_bridgeObjectRelease();
  sub_1C07BC7F8();
  sub_1C0779CF8();
}

uint64_t sub_1C0A9131C(uint64_t a1, void (*a2)(char *, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void (*v23)(_QWORD, _QWORD, _QWORD);
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t);
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  void (*v73)(_QWORD, _QWORD, _QWORD);
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t);
  char *v85;
  __int128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  int *v91;
  uint64_t v92;
  uint64_t v93;

  v93 = a1;
  v82 = a3;
  v83 = a4;
  v84 = a2;
  v4 = type metadata accessor for ConstructionEventTriple(0);
  v81 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v76 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v80 = (char *)&v72 - v7;
  v91 = (int *)type metadata accessor for ExpiredConstructionEventTriple(0);
  MEMORY[0x1E0C80A78](v91);
  v90 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = type metadata accessor for EventTriple(0);
  v77 = *(_QWORD *)(v89 - 8);
  MEMORY[0x1E0C80A78](v89);
  v79 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v78 = (char *)&v72 - v11;
  v12 = sub_1C07ACF80(&qword_1ED75E4F8);
  v13 = *(_QWORD *)(v12 - 8);
  v87 = v12;
  v88 = v13;
  MEMORY[0x1E0C80A78](v12);
  v85 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1C07ACF80(&qword_1ED7505F8);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07ACF80(&qword_1ED761300);
  v19 = swift_allocObject();
  v86 = xmmword_1C1079220;
  *(_OWORD *)(v19 + 16) = xmmword_1C1079220;
  *(_QWORD *)(v19 + 56) = &type metadata for FusedTripleColumn;
  v20 = sub_1C0A56034();
  *(_QWORD *)(v19 + 64) = v20;
  *(_BYTE *)(v19 + 32) = 0;
  sub_1C07803F8(&qword_1ED750D68, (void (*)(uint64_t))type metadata accessor for ConstructionEventTriple);
  sub_1C106B950();
  swift_bridgeObjectRelease();
  sub_1C07BB218(&qword_1ED7505E8, &qword_1ED7505F8);
  sub_1C07803F8(&qword_1ED750D78, (void (*)(uint64_t))type metadata accessor for ConstructionEventTriple);
  v21 = v92;
  sub_1C106BAAC();
  if (v21)
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  v92 = v4;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  v23 = (void (*)(_QWORD, _QWORD, _QWORD))sub_1C106BB30();
  swift_release();
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = v86;
  *(_QWORD *)(v24 + 56) = &type metadata for FusedTripleColumn;
  *(_QWORD *)(v24 + 64) = v20;
  *(_BYTE *)(v24 + 32) = 0;
  sub_1C07803F8(&qword_1ED75E620, (void (*)(uint64_t))type metadata accessor for EventTriple);
  v25 = v85;
  sub_1C106B950();
  swift_bridgeObjectRelease();
  sub_1C07BB218(&qword_1ED75E4F0, &qword_1ED75E4F8);
  sub_1C07803F8(&qword_1ED756858, (void (*)(uint64_t))type metadata accessor for EventTriple);
  v26 = v87;
  sub_1C106BAAC();
  (*(void (**)(char *, uint64_t))(v88 + 8))(v25, v26);
  v27 = (char *)sub_1C106BB30();
  swift_release();
  v28 = v82;
  sub_1C0A926AC(v23, v27, v84, v82, type metadata accessor for EventTriple, type metadata accessor for ConstructionEventTriple, &qword_1ED7606E8, &qword_1ED750DB8, (uint64_t)sub_1C07EC8EC, (void (*)(_QWORD, _QWORD, _QWORD))sub_1C09D4734, (uint64_t (*)(uint64_t))sub_1C07EBE64);
  v32 = v31;
  v33 = type metadata accessor for EventTriple;
  v73 = v23;
  v72 = v27;
  while (v32)
  {
    v34 = *(_QWORD *)(v29 + 16);
    v74 = v29;
    v75 = v32;
    v85 = v30;
    if (v34)
    {
      v88 = v34;
      v35 = v77;
      v36 = v29 + ((*(unsigned __int8 *)(v77 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80));
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      *(_QWORD *)&v86 = *(_QWORD *)(v35 + 72);
      v38 = (uint64_t)v90;
      v37 = v91;
      v39 = (uint64_t)v78;
      v40 = (uint64_t)v79;
      do
      {
        v87 = v36;
        sub_1C07E6C80(v36, v39, v33);
        sub_1C07E6C80(v39, v40, v33);
        v41 = sub_1C106E590();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v38, v40, v41);
        v42 = (int *)v89;
        v43 = v40 + *(int *)(v89 + 20);
        v44 = v33;
        v45 = v38 + v37[5];
        v46 = sub_1C106E41C();
        v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16);
        v47(v45, v43, v46);
        v48 = v40 + v42[6];
        v49 = &v90[v91[6]];
        v50 = sub_1C106EB24();
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v49, v48, v50);
        v47((uint64_t)&v90[v91[7]], v40 + v42[7], v46);
        v51 = (uint64_t *)(v40 + v42[8]);
        v53 = *v51;
        v52 = v51[1];
        v54 = *(_QWORD *)(v40 + v42[9]);
        v55 = v42[11];
        v56 = *(_QWORD *)(v40 + v42[10]);
        v58 = *(_QWORD *)(v40 + v55);
        v57 = *(_QWORD *)(v40 + v55 + 8);
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        sub_1C106AC6C();
        v59 = &v90[v91[8]];
        *(_QWORD *)v59 = v53;
        *((_QWORD *)v59 + 1) = v52;
        *(_QWORD *)&v90[v91[9]] = v54;
        v38 = (uint64_t)v90;
        v37 = v91;
        *(_QWORD *)&v90[v91[10]] = v56;
        v60 = (_QWORD *)(v38 + v37[11]);
        *v60 = v58;
        v60[1] = v57;
        *(_QWORD *)(v38 + v37[12]) = v61;
        sub_1C07803F8(&qword_1EF63A008, (void (*)(uint64_t))type metadata accessor for ExpiredConstructionEventTriple);
        sub_1C106BFC8();
        sub_1C07B1F90(v38, type metadata accessor for ExpiredConstructionEventTriple);
        sub_1C07B1F90(v40, v44);
        sub_1C07B1F90(v39, v44);
        v36 = v87 + v86;
        --v88;
        v33 = v44;
      }
      while (v88);
      swift_bridgeObjectRelease();
      v28 = v82;
      v32 = v75;
      v30 = v85;
    }
    v62 = *((_QWORD *)v30 + 2);
    v63 = (uint64_t)v80;
    v64 = v81;
    if (v62)
    {
      v65 = (uint64_t)&v30[(*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80)];
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v66 = *(_QWORD *)(v64 + 72);
      do
      {
        sub_1C07E6C80(v65, v63, type metadata accessor for ConstructionEventTriple);
        sub_1C07803F8(&qword_1ED750D88, (void (*)(uint64_t))type metadata accessor for ConstructionEventTriple);
        sub_1C106C274();
        sub_1C07B1F90(v63, type metadata accessor for ConstructionEventTriple);
        v65 += v66;
        --v62;
      }
      while (v62);
      swift_bridgeObjectRelease();
      v64 = v81;
      v32 = v75;
    }
    v67 = *(_QWORD *)(v32 + 16);
    v68 = (uint64_t)v76;
    if (v67)
    {
      v69 = v32 + ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80));
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v70 = *(_QWORD *)(v64 + 72);
      do
      {
        sub_1C07E6C80(v69, v68, type metadata accessor for ConstructionEventTriple);
        sub_1C07803F8(&qword_1ED750D80, (void (*)(uint64_t))type metadata accessor for ConstructionEventTriple);
        sub_1C106BFB0();
        sub_1C07B1F90(v68, type metadata accessor for ConstructionEventTriple);
        v69 += v70;
        --v67;
      }
      while (v67);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C0A926AC(v73, v72, v84, v28, type metadata accessor for EventTriple, type metadata accessor for ConstructionEventTriple, &qword_1ED7606E8, &qword_1ED750DB8, (uint64_t)sub_1C07EC8EC, (void (*)(_QWORD, _QWORD, _QWORD))sub_1C09D4734, (uint64_t (*)(uint64_t))sub_1C07EBE64);
    v33 = type metadata accessor for EventTriple;
    v32 = v71;
  }
  swift_release();
  return swift_release();
}

uint64_t sub_1C0A91CE4(uint64_t a1, void (*a2)(char *, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void (*v23)(_QWORD, _QWORD, _QWORD);
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t);
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  void (*v73)(_QWORD, _QWORD, _QWORD);
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t);
  char *v85;
  __int128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  int *v91;
  uint64_t v92;
  uint64_t v93;

  v93 = a1;
  v82 = a3;
  v83 = a4;
  v84 = a2;
  v4 = type metadata accessor for ConstructionGraphTriple(0);
  v81 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v76 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v80 = (char *)&v72 - v7;
  v91 = (int *)type metadata accessor for ExpiredConstructionGraphTriple(0);
  MEMORY[0x1E0C80A78](v91);
  v90 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = type metadata accessor for GraphTriple(0);
  v77 = *(_QWORD *)(v89 - 8);
  MEMORY[0x1E0C80A78](v89);
  v79 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v78 = (char *)&v72 - v11;
  v12 = sub_1C07ACF80(&qword_1ED75E500);
  v13 = *(_QWORD *)(v12 - 8);
  v87 = v12;
  v88 = v13;
  MEMORY[0x1E0C80A78](v12);
  v85 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1C07ACF80(&qword_1ED750620);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07ACF80(&qword_1ED761300);
  v19 = swift_allocObject();
  v86 = xmmword_1C1079220;
  *(_OWORD *)(v19 + 16) = xmmword_1C1079220;
  *(_QWORD *)(v19 + 56) = &type metadata for FusedTripleColumn;
  v20 = sub_1C0A56034();
  *(_QWORD *)(v19 + 64) = v20;
  *(_BYTE *)(v19 + 32) = 0;
  sub_1C07803F8(&qword_1ED750DF8, (void (*)(uint64_t))type metadata accessor for ConstructionGraphTriple);
  sub_1C106B950();
  swift_bridgeObjectRelease();
  sub_1C07BB218(&qword_1ED750600, &qword_1ED750620);
  sub_1C07803F8(&qword_1ED750E08, (void (*)(uint64_t))type metadata accessor for ConstructionGraphTriple);
  v21 = v92;
  sub_1C106BAAC();
  if (v21)
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  v92 = v4;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  v23 = (void (*)(_QWORD, _QWORD, _QWORD))sub_1C106BB30();
  swift_release();
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = v86;
  *(_QWORD *)(v24 + 56) = &type metadata for FusedTripleColumn;
  *(_QWORD *)(v24 + 64) = v20;
  *(_BYTE *)(v24 + 32) = 0;
  sub_1C07803F8(&qword_1ED75E628, (void (*)(uint64_t))type metadata accessor for GraphTriple);
  v25 = v85;
  sub_1C106B950();
  swift_bridgeObjectRelease();
  sub_1C07BB218(&qword_1ED75E9D0, &qword_1ED75E500);
  sub_1C07803F8(&qword_1ED756860, (void (*)(uint64_t))type metadata accessor for GraphTriple);
  v26 = v87;
  sub_1C106BAAC();
  (*(void (**)(char *, uint64_t))(v88 + 8))(v25, v26);
  v27 = (char *)sub_1C106BB30();
  swift_release();
  v28 = v82;
  sub_1C0A926AC(v23, v27, v84, v82, type metadata accessor for GraphTriple, type metadata accessor for ConstructionGraphTriple, &qword_1ED75F138, &qword_1ED750E40, (uint64_t)sub_1C07EC154, (void (*)(_QWORD, _QWORD, _QWORD))sub_1C09D3EE4, (uint64_t (*)(uint64_t))sub_1C07EB774);
  v32 = v31;
  v33 = type metadata accessor for GraphTriple;
  v73 = v23;
  v72 = v27;
  while (v32)
  {
    v34 = *(_QWORD *)(v29 + 16);
    v74 = v29;
    v75 = v32;
    v85 = v30;
    if (v34)
    {
      v88 = v34;
      v35 = v77;
      v36 = v29 + ((*(unsigned __int8 *)(v77 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80));
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      *(_QWORD *)&v86 = *(_QWORD *)(v35 + 72);
      v38 = (uint64_t)v90;
      v37 = v91;
      v39 = (uint64_t)v78;
      v40 = (uint64_t)v79;
      do
      {
        v87 = v36;
        sub_1C07E6C80(v36, v39, v33);
        sub_1C07E6C80(v39, v40, v33);
        v41 = sub_1C106E590();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v38, v40, v41);
        v42 = (int *)v89;
        v43 = v40 + *(int *)(v89 + 20);
        v44 = v33;
        v45 = v38 + v37[5];
        v46 = sub_1C106E41C();
        v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16);
        v47(v45, v43, v46);
        v48 = v40 + v42[6];
        v49 = &v90[v91[6]];
        v50 = sub_1C106EB24();
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v49, v48, v50);
        v47((uint64_t)&v90[v91[7]], v40 + v42[7], v46);
        v51 = (uint64_t *)(v40 + v42[8]);
        v53 = *v51;
        v52 = v51[1];
        v54 = *(_QWORD *)(v40 + v42[9]);
        v55 = v42[11];
        v56 = *(_QWORD *)(v40 + v42[10]);
        v58 = *(_QWORD *)(v40 + v55);
        v57 = *(_QWORD *)(v40 + v55 + 8);
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        sub_1C106AC6C();
        v59 = &v90[v91[8]];
        *(_QWORD *)v59 = v53;
        *((_QWORD *)v59 + 1) = v52;
        *(_QWORD *)&v90[v91[9]] = v54;
        v38 = (uint64_t)v90;
        v37 = v91;
        *(_QWORD *)&v90[v91[10]] = v56;
        v60 = (_QWORD *)(v38 + v37[11]);
        *v60 = v58;
        v60[1] = v57;
        *(_QWORD *)(v38 + v37[12]) = v61;
        sub_1C07803F8(&qword_1EF63A030, (void (*)(uint64_t))type metadata accessor for ExpiredConstructionGraphTriple);
        sub_1C106BFC8();
        sub_1C07B1F90(v38, type metadata accessor for ExpiredConstructionGraphTriple);
        sub_1C07B1F90(v40, v44);
        sub_1C07B1F90(v39, v44);
        v36 = v87 + v86;
        --v88;
        v33 = v44;
      }
      while (v88);
      swift_bridgeObjectRelease();
      v28 = v82;
      v32 = v75;
      v30 = v85;
    }
    v62 = *((_QWORD *)v30 + 2);
    v63 = (uint64_t)v80;
    v64 = v81;
    if (v62)
    {
      v65 = (uint64_t)&v30[(*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80)];
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v66 = *(_QWORD *)(v64 + 72);
      do
      {
        sub_1C07E6C80(v65, v63, type metadata accessor for ConstructionGraphTriple);
        sub_1C07803F8(&qword_1ED750E18, (void (*)(uint64_t))type metadata accessor for ConstructionGraphTriple);
        sub_1C106C274();
        sub_1C07B1F90(v63, type metadata accessor for ConstructionGraphTriple);
        v65 += v66;
        --v62;
      }
      while (v62);
      swift_bridgeObjectRelease();
      v64 = v81;
      v32 = v75;
    }
    v67 = *(_QWORD *)(v32 + 16);
    v68 = (uint64_t)v76;
    if (v67)
    {
      v69 = v32 + ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80));
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v70 = *(_QWORD *)(v64 + 72);
      do
      {
        sub_1C07E6C80(v69, v68, type metadata accessor for ConstructionGraphTriple);
        sub_1C07803F8(&qword_1ED750E10, (void (*)(uint64_t))type metadata accessor for ConstructionGraphTriple);
        sub_1C106BFB0();
        sub_1C07B1F90(v68, type metadata accessor for ConstructionGraphTriple);
        v69 += v70;
        --v67;
      }
      while (v67);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C0A926AC(v73, v72, v84, v28, type metadata accessor for GraphTriple, type metadata accessor for ConstructionGraphTriple, &qword_1ED75F138, &qword_1ED750E40, (uint64_t)sub_1C07EC154, (void (*)(_QWORD, _QWORD, _QWORD))sub_1C09D3EE4, (uint64_t (*)(uint64_t))sub_1C07EB774);
    v33 = type metadata accessor for GraphTriple;
    v32 = v71;
  }
  swift_release();
  return swift_release();
}

void sub_1C0A926AC(void (*a1)(_QWORD, _QWORD, _QWORD), char *a2, void (*a3)(char *, uint64_t), uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t (*a6)(_QWORD), uint64_t *a7, uint64_t *a8, uint64_t a9, void (*a10)(_QWORD, _QWORD, _QWORD), uint64_t (*a11)(uint64_t))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(_QWORD);
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t, uint64_t);
  uint64_t (*v76)(_QWORD);
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t (*v81)(_QWORD);
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t (*v85)(_QWORD);
  uint64_t v86;
  uint64_t (*v87)(_QWORD);
  uint64_t *v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  double v104;
  double v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(_QWORD, _QWORD, _QWORD);
  void (*v111)(char *, uint64_t);
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void (*v115)(char *, uint64_t, uint64_t);
  uint64_t (*v116)(_QWORD);
  uint64_t v117;
  uint64_t v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t (*v124)(_QWORD);
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t *v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t *v136;
  uint64_t (*v137)(uint64_t);
  char *v138;
  void (*v139)(_QWORD, _QWORD, _QWORD);
  uint64_t v140;

  v112 = a4;
  v111 = a3;
  v132 = a2;
  v139 = a1;
  v116 = a5;
  v16 = a5(0);
  v123 = *(_QWORD *)(v16 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v17);
  v113 = (uint64_t)&v109 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v19);
  v135 = (uint64_t)&v109 - v20;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v21);
  v125 = (uint64_t)&v109 - v22;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v23);
  sub_1C0778674();
  v117 = v24;
  sub_1C077CF58();
  v25 = sub_1C106E590();
  v120 = *(_QWORD *)(v25 - 8);
  v121 = v25;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v26);
  sub_1C077AED0();
  v131 = v27;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v28);
  sub_1C0778674();
  v134 = v29;
  v30 = sub_1C077CF58();
  v124 = a6;
  v128 = *(_QWORD *)(a6(v30) - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v31);
  v115 = (void (*)(char *, uint64_t, uint64_t))((char *)&v109 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v33);
  sub_1C0779728();
  v137 = v34;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v35);
  sub_1C077E3E0();
  MEMORY[0x1E0C80A78](v36);
  sub_1C0778674();
  v118 = v37;
  v130 = a7;
  sub_1C07ACF80(a7);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v38);
  sub_1C077AED0();
  v114 = v39;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v40);
  sub_1C0779728();
  v122 = v41;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v42);
  v126 = (char *)&v109 - v43;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v44);
  sub_1C0779728();
  v119 = (uint64_t *)v45;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v46);
  v48 = (char *)&v109 - v47;
  v136 = a8;
  sub_1C07ACF80(a8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v49);
  sub_1C077AF80();
  v52 = v50 - v51;
  MEMORY[0x1E0C80A78](v53);
  sub_1C0779728();
  v127 = v54;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v55);
  v57 = (char *)&v109 - v56;
  MEMORY[0x1E0C80A78](v58);
  sub_1C07816D0();
  MEMORY[0x1E0C80A78](v59);
  v61 = (char *)&v109 - v60;
  sub_1C106E89C();
  v62 = (uint64_t *)v132;
  sub_1C106E89C();
  v138 = v61;
  sub_1C07A0A1C((uint64_t)v61);
  if (v67)
  {
    sub_1C077AEEC((uint64_t)v48, 1, v16);
    if (v67)
    {
      sub_1C0784B6C((uint64_t)v48, v130);
      sub_1C0784B6C((uint64_t)v138, v136);
      goto LABEL_59;
    }
  }
  v133 = v48;
  v110 = a10;
  v109 = a9;
  v63 = (uint64_t)v138;
  sub_1C077B218((uint64_t)v138, v11);
  sub_1C07A0A1C(v11);
  if (v67)
  {
    sub_1C0784B6C(v11, v62);
    v64 = v129;
    v66 = v124;
  }
  else
  {
    v65 = v118;
    v66 = v124;
    sub_1C079F5CC(v11, v118);
    sub_1C077AEEC((uint64_t)v133, 1, v16);
    if (v67)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v120 + 16))(v134, v65, v121);
      sub_1C106E89C();
      sub_1C07A0A1C((uint64_t)v57);
      v68 = v129;
      v69 = MEMORY[0x1E0DEE9D8];
      if (!v67)
      {
        v88 = v136;
        while (1)
        {
          sub_1C079F5CC((uint64_t)v57, v12);
          if ((sub_1C106E560() & 1) == 0)
          {
            sub_1C0787D94(v12);
            goto LABEL_52;
          }
          sub_1C07E6C80(v12, (uint64_t)v137, v66);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C077EE6C();
            v69 = sub_1C0780B78((uint64_t)&v140);
          }
          v89 = *(_QWORD *)(v69 + 16);
          if (v89 >= *(_QWORD *)(v69 + 24) >> 1)
            v69 = sub_1C0780B78((uint64_t)&v140);
          *(_QWORD *)(v69 + 16) = v89 + 1;
          sub_1C078233C();
          sub_1C079F5CC((uint64_t)v137, v69 + v90 + *(_QWORD *)(v91 + 72) * v89);
          sub_1C106E890();
          if (v68)
            break;
          sub_1C078B01C();
          sub_1C0787D94(v12);
          sub_1C106E89C();
          sub_1C07A0A1C((uint64_t)v57);
          if (v67)
            goto LABEL_14;
        }
        sub_1C0787D94(v12);
        swift_bridgeObjectRelease();
        sub_1C07B4194();
        sub_1C0787D94(v118);
        v107 = (uint64_t)v133;
        goto LABEL_58;
      }
      v88 = v136;
LABEL_14:
      sub_1C0784B6C((uint64_t)v57, v88);
LABEL_52:
      v103 = v118;
      sub_1C106AC6C();
      v105 = v104;
      v106 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C0A9091C(v106, v66, (void (*)(_QWORD, _QWORD, _QWORD, double))v110, v105);
      swift_bridgeObjectRelease();
      sub_1C07B4194();
      sub_1C0787D94(v103);
      sub_1C0784B6C((uint64_t)v133, v130);
      sub_1C078B01C();
      goto LABEL_59;
    }
    sub_1C0787D94(v65);
    v64 = v129;
  }
  v137 = a11;
  sub_1C07A0A1C(v63);
  v70 = v130;
  v71 = v119;
  if (!v67)
  {
LABEL_20:
    sub_1C077B218(v63, v52);
    sub_1C07A0A1C(v52);
    if (v67)
    {
      sub_1C079FFA4((uint64_t)v133);
      sub_1C07AA838();
      v72 = v52;
      v73 = v71;
    }
    else
    {
      v74 = v52;
      v75 = v115;
      sub_1C079F5CC(v74, (uint64_t)v115);
      v76 = v66;
      v77 = (uint64_t)v133;
      v78 = v114;
      sub_1C078A8CC((uint64_t)v133, v114, v70);
      sub_1C077AEEC(v78, 1, v16);
      if (!v79)
      {
        v84 = v113;
        v85 = v116;
        sub_1C07E563C(v78, v113, v116);
        sub_1C0A92FE4(v139, v75, v132, v84, v111, v112, v70, v85, v71, v76, v109, v110, v137);
        if (v64)
        {
          sub_1C07B7BB8(v84);
          v86 = (uint64_t)v75;
          v87 = v76;
LABEL_57:
          sub_1C07B1F90(v86, v87);
          v107 = (uint64_t)v133;
LABEL_58:
          sub_1C079FFA4(v107);
          sub_1C078B01C();
          goto LABEL_59;
        }
        sub_1C07B7BB8(v84);
        sub_1C0787D94((uint64_t)v75);
        sub_1C079FFA4((uint64_t)v133);
        sub_1C07B4830();
        goto LABEL_59;
      }
      sub_1C07B1F90((uint64_t)v75, v76);
      sub_1C079FFA4(v77);
      sub_1C07AA838();
      v72 = v78;
      v73 = v70;
    }
    sub_1C0784B6C(v72, v73);
    goto LABEL_59;
  }
  sub_1C078A8CC((uint64_t)v133, (uint64_t)v119, v130);
  sub_1C077AEEC((uint64_t)v71, 1, v16);
  if (v67)
  {
    sub_1C079FFA4((uint64_t)v71);
    goto LABEL_20;
  }
  v80 = v117;
  v81 = v116;
  sub_1C07B1818((uint64_t)v71, v117);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v120 + 16))(v131, v80, v121);
  v82 = (uint64_t)v126;
  sub_1C106E89C();
  sub_1C077AEEC(v82, 1, v16);
  if (!v83)
  {
    v92 = v16;
    v93 = MEMORY[0x1E0DEE9D8];
    v94 = v125;
    while (1)
    {
      sub_1C07B1818(v82, v94);
      if ((sub_1C106E560() & 1) == 0)
      {
        sub_1C07A1BC4(v94);
        goto LABEL_55;
      }
      sub_1C07E6C80(v94, v135, v81);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v100 = sub_1C077EE6C();
        v93 = sub_1C077C3B8(v100, v101, v102);
      }
      v96 = *(_QWORD *)(v93 + 16);
      v95 = *(_QWORD *)(v93 + 24);
      if (v96 >= v95 >> 1)
        v93 = sub_1C077C3B8(v95 > 1, v96 + 1, 1);
      *(_QWORD *)(v93 + 16) = v96 + 1;
      sub_1C078233C();
      sub_1C07B1818(v135, v93 + v97 + *(_QWORD *)(v98 + 72) * v96);
      v99 = v122;
      sub_1C106E890();
      if (v64)
        break;
      sub_1C079FFA4(v99);
      v94 = v125;
      sub_1C07A1BC4(v125);
      v82 = (uint64_t)v126;
      sub_1C106E89C();
      sub_1C077AEEC(v82, 1, v92);
      if (v67)
        goto LABEL_29;
    }
    sub_1C07A1BC4(v125);
    swift_bridgeObjectRelease();
    sub_1C079D540();
    v86 = v117;
    v87 = v81;
    goto LABEL_57;
  }
LABEL_29:
  sub_1C079FFA4(v82);
LABEL_55:
  v108 = (uint64_t)v133;
  sub_1C079D540();
  sub_1C07A1BC4(v117);
  sub_1C079FFA4(v108);
  sub_1C07B4830();
LABEL_59:
  sub_1C077F074();
}

void sub_1C0A92FE4(void (*a1)(_QWORD, _QWORD, _QWORD), void (*a2)(char *, uint64_t, uint64_t), char *a3, uint64_t a4, void (*a5)(char *, uint64_t), uint64_t a6, uint64_t *a7, uint64_t (*a8)(_QWORD), uint64_t *a9, uint64_t (*a10)(_QWORD), uint64_t a11, void (*a12)(_QWORD, _QWORD, _QWORD), uint64_t (*a13)(uint64_t))
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  uint64_t v41;
  char *v42;
  int *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  double v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t, uint64_t);
  char v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t (*v83)(_QWORD);
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t (*v90)(_QWORD);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  void (*v111)(char *, uint64_t, uint64_t);
  uint64_t v112;
  uint64_t v113;
  void (*v114)(uint64_t, uint64_t);
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t *v127;
  char *v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  int v132;
  uint64_t v133;
  uint64_t (*v134)(_QWORD);
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  void (*v145)(uint64_t, uint64_t);
  uint64_t v146;
  void (*v147)(uint64_t, uint64_t);
  uint64_t v148;
  _QWORD v149[3];
  void (*v150)(char *, uint64_t);
  uint64_t *v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t (*v157)(_QWORD);
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  void (*v170)(_QWORD, _QWORD, _QWORD);
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t *v174;
  uint64_t v175;
  void (*v176)(char *, uint64_t, uint64_t);
  uint64_t v177;
  uint64_t (*v178)(_QWORD);
  uint64_t v179;
  char v180[8];

  v149[2] = a6;
  v150 = a5;
  v176 = a2;
  v177 = a4;
  v169 = a3;
  v170 = a1;
  v149[1] = a11;
  v151 = a7;
  sub_1C07ACF80(a7);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v16);
  v153 = (char *)v149 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v18);
  sub_1C0779728();
  v168 = v19;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v20);
  sub_1C0779728();
  v156 = v21;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v22);
  sub_1C0778674();
  v160 = v23;
  v24 = sub_1C077CF58();
  v157 = a8;
  v167 = a8(v24);
  v163 = *(_QWORD *)(v167 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v25);
  sub_1C077AED0();
  v162 = v26;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v27);
  sub_1C0779728();
  v154 = v28;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v29);
  v165 = (uint64_t)v149 - v30;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v31);
  sub_1C0778674();
  v159 = v32;
  v174 = a9;
  sub_1C07ACF80(a9);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v33);
  v155 = (char *)v149 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v35);
  sub_1C0779728();
  v161 = v36;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v37);
  v166 = (char *)v149 - v38;
  sub_1C077F02C();
  v40 = MEMORY[0x1E0C80A78](v39);
  v42 = (char *)v149 - v41;
  v178 = a10;
  v43 = (int *)((uint64_t (*)(_QWORD, double))a10)(0, v40);
  v171 = *((_QWORD *)v43 - 1);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v44);
  sub_1C077AED0();
  v164 = v45;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v46);
  sub_1C0779728();
  v158 = v47;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v48);
  sub_1C07816D0();
  MEMORY[0x1E0C80A78](v49);
  v51 = (char *)v149 - v50;
  MEMORY[0x1E0C80A78](v52);
  v175 = (uint64_t)v149 - v53;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v54);
  v56 = (char *)v149 - v55;
  v57 = sub_1C106E590();
  MEMORY[0x1E0C80A78](v57);
  sub_1C077AF80();
  v60 = v58 - v59;
  v62 = MEMORY[0x1E0C80A78](v61);
  v64 = (char *)v149 - v63;
  v152 = v65;
  v66 = *(void (**)(char *, uint64_t, uint64_t))(v65 + 16);
  ((void (*)(char *, void (*)(char *, uint64_t, uint64_t), uint64_t, double))v66)((char *)v149 - v63, v176, v57, v62);
  v176 = v66;
  v66((char *)v60, v177, v57);
  v67 = sub_1C106E554();
  v177 = v57;
  v172 = v64;
  if ((v67 & 1) != 0)
  {
    v168 = v60;
    sub_1C106E89C();
    v68 = sub_1C07B2D80((uint64_t)v42, 1, (uint64_t)v43);
    v69 = MEMORY[0x1E0DEE9D8];
    if (v68 == 1)
    {
LABEL_3:
      sub_1C07A805C((uint64_t)v42);
LABEL_41:
      sub_1C106AC6C();
      v100 = (char *)v69;
      v101 = *(_QWORD *)(v69 + 16);
      v166 = v100;
      if (v101)
      {
        v102 = v99;
        v179 = MEMORY[0x1E0DEE9D8];
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v170 = a12;
        a12(0, v101, 0);
        sub_1C078233C();
        v175 = v103;
        v104 = (uint64_t)&v100[v103];
        v174 = *(uint64_t **)(v105 + 72);
        v106 = (unint64_t)v178;
        do
        {
          sub_1C07E6C80(v104, v14, (uint64_t (*)(_QWORD))v106);
          v176(v51, v14, v57);
          v107 = v43[5];
          v108 = v14 + v107;
          v109 = &v51[v107];
          v110 = sub_1C106E41C();
          v111 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v110 - 8) + 16);
          v111(v109, v108, v110);
          v112 = v14 + v43[6];
          sub_1C106EB24();
          v113 = sub_1C07908EC();
          v114(v113, v112);
          v111(&v51[v43[7]], v14 + v43[7], v110);
          v115 = v43[8];
          v116 = *(_QWORD *)(v14 + v43[9]);
          v118 = *(_QWORD *)(v14 + v115);
          v117 = *(_QWORD *)(v14 + v115 + 8);
          v119 = *(_QWORD *)(v14 + v43[10]);
          v120 = (uint64_t *)(v14 + v43[11]);
          v121 = *v120;
          v122 = v120[1];
          v123 = &v51[v115];
          *(_QWORD *)v123 = v118;
          *((_QWORD *)v123 + 1) = v117;
          *(_QWORD *)&v51[v43[9]] = v116;
          *(_QWORD *)&v51[v43[10]] = v119;
          v124 = &v51[v43[11]];
          *(_QWORD *)v124 = v121;
          *((_QWORD *)v124 + 1) = v122;
          *(_QWORD *)&v51[v43[12]] = v102;
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          sub_1C07B1F90(v14, v178);
          v125 = v179;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C0785054(0, *(_QWORD *)(v125 + 16) + 1);
            v125 = v179;
          }
          v106 = *(_QWORD *)(v125 + 16);
          v126 = *(_QWORD *)(v125 + 24);
          v57 = v177;
          if (v106 >= v126 >> 1)
          {
            sub_1C0785054(v126 > 1, v106 + 1);
            v125 = v179;
          }
          *(_QWORD *)(v125 + 16) = v106 + 1;
          v127 = v174;
          sub_1C07B8A9C((uint64_t)v51, v125 + v175 + v106 * (_QWORD)v174);
          v104 += (uint64_t)v127;
          --v101;
        }
        while (v101);
        swift_bridgeObjectRelease();
      }
      v128 = v172;
      v129 = v152;
      v70 = v168;
      goto LABEL_71;
    }
    v74 = (unint64_t)v178;
    v169 = v42;
    while (1)
    {
      sub_1C07E563C((uint64_t)v42, (uint64_t)v56, (uint64_t (*)(_QWORD))v74);
      if ((sub_1C106E560() & 1) == 0)
      {
        sub_1C0793BD8();
        goto LABEL_41;
      }
      sub_1C07E6C80((uint64_t)v56, v175, (uint64_t (*)(_QWORD))v74);
      if ((sub_1C0778698() & 1) == 0)
        v69 = sub_1C078F624(0, *(_QWORD *)(v69 + 16) + 1);
      v74 = *(_QWORD *)(v69 + 16);
      v75 = *(_QWORD *)(v69 + 24);
      if (v74 >= v75 >> 1)
        v69 = sub_1C078F624(v75 > 1, v74 + 1);
      *(_QWORD *)(v69 + 16) = v74 + 1;
      sub_1C079C5C8();
      sub_1C07B8A9C(v175, v76 + v77 * v74);
      v78 = (uint64_t)v166;
      v79 = v173;
      sub_1C106E890();
      v173 = v79;
      if (v79)
        break;
      sub_1C07A805C(v78);
      sub_1C0793BD8();
      v42 = v169;
      sub_1C106E89C();
      sub_1C07A0A1C((uint64_t)v42);
      if (v73)
        goto LABEL_3;
    }
    sub_1C0793BD8();
    v130 = v172;
    v70 = v168;
LABEL_74:
    swift_bridgeObjectRelease();
    v147 = *(void (**)(uint64_t, uint64_t))(v152 + 8);
    v148 = v177;
    v147(v70, v177);
    v147((uint64_t)v130, v148);
    goto LABEL_75;
  }
  sub_1C07803F8(&qword_1ED750678, (void (*)(uint64_t))MEMORY[0x1E0D3CE28]);
  v70 = v60;
  if ((sub_1C106FA6C() & 1) != 0)
  {
    v71 = v160;
    sub_1C106E89C();
    sub_1C077AEEC(v71, 1, v167);
    v72 = MEMORY[0x1E0DEE9D8];
    if (!v73)
    {
      v83 = v157;
      v84 = v159;
      while (1)
      {
        sub_1C07E563C(v71, v84, v83);
        if ((sub_1C106E560() & 1) == 0)
        {
          sub_1C077B830(v84);
          goto LABEL_52;
        }
        sub_1C07E6C80(v84, v165, v83);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          v89 = sub_1C077EE6C();
          v72 = a13(v89);
        }
        v86 = *(_QWORD *)(v72 + 16);
        v85 = *(_QWORD *)(v72 + 24);
        if (v86 >= v85 >> 1)
          v72 = ((uint64_t (*)(BOOL, unint64_t, uint64_t, uint64_t))a13)(v85 > 1, v86 + 1, 1, v72);
        *(_QWORD *)(v72 + 16) = v86 + 1;
        sub_1C078233C();
        sub_1C07E563C(v165, v72 + v87 + *(_QWORD *)(v88 + 72) * v86, v83);
        sub_1C078D6C4();
        if (v13)
          break;
        sub_1C07A9F9C();
        v84 = v159;
        sub_1C077B830(v159);
        v71 = v160;
        sub_1C106E89C();
        sub_1C077AEEC(v71, 1, v167);
        if (v73)
          goto LABEL_7;
      }
      sub_1C077B830(v159);
LABEL_73:
      v130 = v172;
      goto LABEL_74;
    }
LABEL_7:
    sub_1C07A9F9C();
LABEL_52:
    v166 = (char *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v176 = (void (*)(char *, uint64_t, uint64_t))a13;
    v80 = v161;
    sub_1C106E89C();
    sub_1C07A0A1C(v80);
    v81 = v173;
    v82 = MEMORY[0x1E0DEE9D8];
    if (!v73)
    {
      v90 = v178;
      v91 = v161;
      v92 = v158;
      while (1)
      {
        sub_1C0792FD0(v91, v92);
        if ((sub_1C106E560() & 1) == 0)
        {
          sub_1C079D510(v92);
          goto LABEL_54;
        }
        sub_1C07E6C80(v92, v164, v90);
        if ((sub_1C0778698() & 1) == 0)
          v82 = sub_1C078F624(0, *(_QWORD *)(v82 + 16) + 1);
        v93 = (uint64_t)v155;
        v94 = *(_QWORD *)(v82 + 16);
        v95 = v82;
        if (v94 >= *(_QWORD *)(v82 + 24) >> 1)
          v95 = sub_1C0780B78((uint64_t)v180);
        *(_QWORD *)(v95 + 16) = v94 + 1;
        v82 = v95;
        sub_1C078233C();
        v90 = v178;
        sub_1C0792FD0(v164, v96 + v97 + *(_QWORD *)(v98 + 72) * v94);
        v13 = v81;
        sub_1C106E890();
        if (v81)
          break;
        sub_1C07A805C(v93);
        v92 = v158;
        sub_1C079D510(v158);
        v91 = v161;
        sub_1C106E89C();
        sub_1C07A0A1C(v91);
        if (v73)
          goto LABEL_21;
      }
      sub_1C079D510(v158);
      goto LABEL_73;
    }
    v91 = v161;
LABEL_21:
    sub_1C07A805C(v91);
LABEL_54:
    v166 = (char *)v82;
    sub_1C106E89C();
    v131 = v168;
    v132 = sub_1C07B2D80(v168, 1, v167);
    v133 = MEMORY[0x1E0DEE9D8];
    if (v132 != 1)
    {
      v134 = v157;
      v135 = v154;
      while (1)
      {
        sub_1C0792FD0(v131, v135);
        if ((sub_1C106E560() & 1) == 0)
        {
          sub_1C079D510(v135);
          goto LABEL_69;
        }
        sub_1C07E6C80(v135, v162, v134);
        if ((sub_1C0778698() & 1) == 0)
          v133 = sub_1C0794668(0, *(_QWORD *)(v133 + 16) + 1);
        v136 = (uint64_t)v153;
        v138 = *(_QWORD *)(v133 + 16);
        v137 = *(_QWORD *)(v133 + 24);
        if (v138 >= v137 >> 1)
          v133 = sub_1C0794668(v137 > 1, v138 + 1);
        *(_QWORD *)(v133 + 16) = v138 + 1;
        sub_1C079C5C8();
        v141 = v139 + v140 * v138;
        v134 = v157;
        sub_1C0792FD0(v142, v141);
        sub_1C078D6C4();
        if (v13)
          break;
        sub_1C079FFA4(v136);
        v135 = v154;
        sub_1C079D510(v154);
        v131 = v168;
        sub_1C106E89C();
        sub_1C077AEEC(v131, 1, v167);
        if (v73)
          goto LABEL_55;
      }
      sub_1C079D510(v154);
      swift_bridgeObjectRelease();
      goto LABEL_73;
    }
LABEL_55:
    sub_1C079FFA4(v131);
LABEL_69:
    v150(v166, v133);
    v144 = v143;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v166 = v144;
  }
  v129 = v152;
  v128 = v172;
LABEL_71:
  v145 = *(void (**)(uint64_t, uint64_t))(v129 + 8);
  v146 = v177;
  v145(v70, v177);
  v145((uint64_t)v128, v146);
LABEL_75:
  sub_1C077F074();
}

uint64_t sub_1C0A93B60(uint64_t a1)
{
  uint64_t v1;

  return sub_1C0A9131C(a1, *(void (**)(char *, uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1C0A93B7C(uint64_t a1)
{
  uint64_t v1;

  return sub_1C0A91CE4(a1, *(void (**)(char *, uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1C0A93B98()
{
  return sub_1C0A90908();
}

void sub_1C0A93BAC()
{
  sub_1C07AEBD8();
  swift_bridgeObjectRelease();
  type metadata accessor for SubgraphDatabaseTable.SubgraphComparableTriple();
  sub_1C07ACF80((uint64_t *)&unk_1EF63A610);
  sub_1C0AA4534();
  sub_1C0789F80();
  sub_1C0778580();
  sub_1C0AA4224();
  sub_1C078784C();
  sub_1C0794BAC((unint64_t *)&qword_1ED7625A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE60]);
  sub_1C1070C0C();
  sub_1C0789F80();
  sub_1C0778580();
  sub_1C0782E08();
  sub_1C0779688();
  sub_1C0794BAC(&qword_1EF632CD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC90]);
  sub_1C078935C();
  sub_1C078F17C();
  sub_1C0775834();
  sub_1C0786558();
  sub_1C077D8EC();
  sub_1C0794BAC(&qword_1EF639B28, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D450], MEMORY[0x1E0D3D488]);
  sub_1C07AC380();
  sub_1C078F17C();
  sub_1C0775834();
  sub_1C07AD6D8();
  sub_1C078935C();
  sub_1C0789F80();
  sub_1C0778580();
  sub_1C07A53E8();
  sub_1C077AEBC();
  sub_1C077F298();
  sub_1C077B5B4();
  sub_1C07AD6D8();
  sub_1C07BC11C();
  sub_1C077F298();
  sub_1C0775834();
  sub_1C077B5B4();
  sub_1C07BA224();
  sub_1C07A53E8();
  sub_1C0AA4304();
  sub_1C07A53E8();
  sub_1C07B483C();
  sub_1C0786558();
  sub_1C07767C4();
  sub_1C0AA44CC();
  swift_bridgeObjectRelease();
  sub_1C07767C4();
  sub_1C0AA4218();
  sub_1C0775894();
  sub_1C0775B1C();
  sub_1C07B6AA8();
  sub_1C0775894();
  sub_1C077589C();
  sub_1C0AA4240();
  sub_1C07B483C();
  sub_1C0775B1C();
  sub_1C077584C();
  sub_1C0AA42B4();
  sub_1C0778580();
  sub_1C0775844();
  sub_1C0781AD8();
}

void sub_1C0A93E48(uint64_t a1, uint64_t *a2)
{
  sub_1C07AEBD8();
  swift_bridgeObjectRelease();
  sub_1C0AA4540();
  sub_1C07ACF80(a2);
  sub_1C0AA4534();
  sub_1C0789F80();
  sub_1C0778580();
  sub_1C0AA4224();
  sub_1C078784C();
  sub_1C0794BAC((unint64_t *)&qword_1ED7625A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE60]);
  sub_1C1070C0C();
  sub_1C0789F80();
  sub_1C0778580();
  sub_1C0782E08();
  sub_1C0779688();
  sub_1C0794BAC(&qword_1EF632CD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC90]);
  sub_1C078935C();
  sub_1C078F17C();
  sub_1C0775834();
  sub_1C0786558();
  sub_1C077D8EC();
  sub_1C0794BAC(&qword_1EF639B28, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D450], MEMORY[0x1E0D3D488]);
  sub_1C07AC380();
  sub_1C078F17C();
  sub_1C0775834();
  sub_1C07AD6D8();
  sub_1C078935C();
  sub_1C0789F80();
  sub_1C0778580();
  sub_1C07A53E8();
  sub_1C077AEBC();
  sub_1C077F298();
  sub_1C077B5B4();
  sub_1C07AD6D8();
  sub_1C07BC11C();
  sub_1C077F298();
  sub_1C0775834();
  sub_1C077B5B4();
  sub_1C07BA224();
  sub_1C07A53E8();
  sub_1C0AA4304();
  sub_1C07A53E8();
  sub_1C07B483C();
  sub_1C0786558();
  sub_1C07767C4();
  sub_1C0AA44CC();
  swift_bridgeObjectRelease();
  sub_1C07767C4();
  sub_1C0AA4218();
  sub_1C0775894();
  sub_1C0775B1C();
  sub_1C07B6AA8();
  sub_1C0775894();
  sub_1C077589C();
  sub_1C0AA4240();
  sub_1C07B483C();
  sub_1C0775B1C();
  sub_1C077584C();
  sub_1C0AA42B4();
  sub_1C0778580();
  sub_1C0775844();
  sub_1C0781AD8();
}

void EntityTriple.init(subject:predicate:relationshipId:relationshipPredicate:object:source:sourceId:timestamp:pipelineType:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, uint64_t a11, char *a12)
{
  void (*v20)(uint64_t, uint64_t);
  int *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  _QWORD *v27;
  _QWORD *v28;
  char v30;

  v30 = *a12;
  sub_1C078784C();
  sub_1C0AA43B0();
  v20(a9, a1);
  v21 = (int *)type metadata accessor for EntityTriple(0);
  v22 = a9 + v21[5];
  v23 = sub_1C0779688();
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32);
  v24(v22, a2, v23);
  v25 = a9 + v21[6];
  sub_1C077D8EC();
  sub_1C0AA43B0();
  v26(v25, a3);
  v24(a9 + v21[7], a4, v23);
  v27 = (_QWORD *)(a9 + v21[8]);
  *v27 = a5;
  v27[1] = a6;
  sub_1C0845A08(a7, a9 + v21[9]);
  v28 = (_QWORD *)(a9 + v21[10]);
  *v28 = a8;
  v28[1] = a11;
  *(double *)(a9 + v21[11]) = a10;
  *(_BYTE *)(a9 + v21[12]) = v30;
  sub_1C0781E3C();
}

uint64_t type metadata accessor for EntityTriple(uint64_t a1)
{
  return sub_1C0784B00(a1, qword_1ED75A4B0);
}

unint64_t static GraphTriple.ftsTableName.getter()
{
  return sub_1C07A9FA8(16);
}

void sub_1C0A94234(uint64_t a1)
{
  sub_1C0A9CD24(a1, qword_1ED747B88);
}

uint64_t static GraphTriple.persistenceConflictPolicy.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0A946EC(&qword_1ED749398, (uint64_t)qword_1ED747B88, a1);
}

uint64_t GraphTriple.predicate.getter()
{
  return sub_1C0A94760(type metadata accessor for GraphTriple);
}

uint64_t type metadata accessor for GraphTriple(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1ED75E7E8);
}

uint64_t GraphTriple.relationshipId.getter()
{
  return sub_1C0A94794(type metadata accessor for GraphTriple);
}

uint64_t GraphTriple.relationshipPredicate.getter()
{
  return sub_1C0A947C8(type metadata accessor for GraphTriple);
}

uint64_t GraphTriple.object.getter()
{
  return sub_1C0A947FC(type metadata accessor for GraphTriple);
}

void GraphTriple.sources.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1C0779920();
  v1 = type metadata accessor for GraphTriple(v0);
  sub_1C07B8AA8(v1);
  sub_1C0778534();
}

double GraphTriple.confidence.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for GraphTriple(0);
  return sub_1C0AA425C(v0);
}

uint64_t GraphTriple.sourceDuplicates.getter()
{
  return sub_1C0A9486C(type metadata accessor for GraphTriple);
}

double GraphTriple.timestamp.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for GraphTriple(0);
  return sub_1C077C8C8(v0);
}

void GraphTriple.init(subject:predicate:relationshipId:relationshipPredicate:object:sources:confidence:sourceDuplicates:timestamp:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>)
{
  sub_1C07A9624(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
  sub_1C0796570();
}

uint64_t GraphTriple.hash(into:)()
{
  return sub_1C0A965B8();
}

void static GraphTriple.== infix(_:_:)()
{
  sub_1C0A94A04();
}

uint64_t sub_1C0A94340()
{
  sub_1C0A9DD00();
  return sub_1C1070EE8();
}

uint64_t sub_1C0A94368()
{
  sub_1C0A9DD00();
  return sub_1C1070EF4();
}

void GraphTriple.encode(to:)()
{
  sub_1C0A96AEC();
}

void GraphTriple.hashValue.getter()
{
  sub_1C0A94BA0((void (*)(_BYTE *))GraphTriple.hash(into:));
}

void GraphTriple.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0A96DD0(a1, &qword_1ED7601E0, type metadata accessor for GraphTriple, (void (*)(void))sub_1C0A9DD00, a2);
}

void sub_1C0A9440C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  double v9;
  double v10;

  sub_1C0795A8C();
  GraphTriple.init(subject:predicate:relationshipId:relationshipPredicate:object:sources:confidence:sourceDuplicates:timestamp:)(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10);
  sub_1C0796570();
}

unint64_t sub_1C0A94428()
{
  static GraphTriple.ftsTableName.getter();
  return 0xD000000000000010;
}

void sub_1C0A94444(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  GraphTriple.init(from:)(a1, a2);
}

void sub_1C0A94458()
{
  GraphTriple.encode(to:)();
}

void sub_1C0A94474()
{
  sub_1C0A93E48((uint64_t)type metadata accessor for GraphTriple, &qword_1EF63A590);
}

void sub_1C0A944A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C0A94C90(a1, a2, a3, (void (*)(_BYTE *))GraphTriple.hash(into:));
}

uint64_t sub_1C0A944BC()
{
  sub_1C0794BAC(qword_1ED75F0E8, type metadata accessor for GraphTriple, (uint64_t)&protocol conformance descriptor for GraphTriple);
  return sub_1C106BDDC();
}

uint64_t sub_1C0A94540()
{
  sub_1C0794BAC((unint64_t *)&unk_1ED7493B8, type metadata accessor for GraphTriple, (uint64_t)&protocol conformance descriptor for GraphTriple);
  return sub_1C106BFD4();
}

uint64_t sub_1C0A945A8()
{
  sub_1C0794BAC((unint64_t *)&unk_1ED7493B8, type metadata accessor for GraphTriple, (uint64_t)&protocol conformance descriptor for GraphTriple);
  return sub_1C106BFC8();
}

uint64_t sub_1C0A94604()
{
  sub_1C0794BAC((unint64_t *)&unk_1ED7493B8, type metadata accessor for GraphTriple, (uint64_t)&protocol conformance descriptor for GraphTriple);
  return sub_1C106BFBC();
}

uint64_t sub_1C0A94660()
{
  sub_1C0794BAC(&qword_1ED7493D0, type metadata accessor for GraphTriple, (uint64_t)&protocol conformance descriptor for GraphTriple);
  return sub_1C106BD58();
}

void sub_1C0A946C4(uint64_t a1)
{
  sub_1C0A9CD24(a1, qword_1ED7414C8);
}

uint64_t static EventTriple.persistenceConflictPolicy.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0A946EC(&qword_1ED749360, (uint64_t)qword_1ED7414C8, a1);
}

uint64_t sub_1C0A946EC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_1C0AA4548();
  v6 = sub_1C079E000(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t EventTriple.predicate.getter()
{
  return sub_1C0A94760(type metadata accessor for EventTriple);
}

uint64_t sub_1C0A94760(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_1C07A31CC(a1);
  sub_1C0779688();
  v1 = sub_1C07759A0();
  return sub_1C077C20C(v1, v2, v3, v4);
}

uint64_t EventTriple.relationshipId.getter()
{
  return sub_1C0A94794(type metadata accessor for EventTriple);
}

uint64_t sub_1C0A94794(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_1C07A31CC(a1);
  sub_1C077D8EC();
  v1 = sub_1C07759A0();
  return sub_1C077C20C(v1, v2, v3, v4);
}

uint64_t EventTriple.relationshipPredicate.getter()
{
  return sub_1C0A947C8(type metadata accessor for EventTriple);
}

uint64_t sub_1C0A947C8(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_1C07A31CC(a1);
  sub_1C0779688();
  v1 = sub_1C07759A0();
  return sub_1C077C20C(v1, v2, v3, v4);
}

uint64_t EventTriple.object.getter()
{
  return sub_1C0A947FC(type metadata accessor for EventTriple);
}

uint64_t sub_1C0A947FC(uint64_t (*a1)(_QWORD))
{
  sub_1C0AA44F4(a1);
  sub_1C07989AC();
  return sub_1C077CEF4();
}

void EventTriple.sources.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1C0779920();
  v1 = type metadata accessor for EventTriple(v0);
  sub_1C07B8AA8(v1);
  sub_1C0778534();
}

double EventTriple.confidence.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for EventTriple(0);
  return sub_1C0AA425C(v0);
}

uint64_t EventTriple.sourceDuplicates.getter()
{
  return sub_1C0A9486C(type metadata accessor for EventTriple);
}

uint64_t sub_1C0A9486C(uint64_t (*a1)(_QWORD))
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v2 + *(int *)(sub_1C07A31CC(a1) + 44));
  v4 = v3[1];
  *v1 = *v3;
  v1[1] = v4;
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

double EventTriple.timestamp.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for EventTriple(0);
  return sub_1C077C8C8(v0);
}

void EventTriple.init(subject:predicate:relationshipId:relationshipPredicate:object:sources:confidence:sourceDuplicates:timestamp:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>)
{
  sub_1C07A9624(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
  sub_1C0796570();
}

void sub_1C0A948D4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, uint64_t (*a12)(_QWORD))
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;

  v19 = *a7;
  v20 = *a8;
  v30 = a8[1];
  v21 = sub_1C078784C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(a9, a1, v21);
  v22 = (int *)a12(0);
  v23 = a9 + v22[5];
  v24 = sub_1C0779688();
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 32);
  v25(v23, a2, v24);
  v26 = a9 + v22[6];
  sub_1C077D8EC();
  sub_1C0AA43B0();
  v27(v26, a3);
  v25(a9 + v22[7], a4, v24);
  v28 = (_QWORD *)(a9 + v22[8]);
  *v28 = a5;
  v28[1] = a6;
  *(_QWORD *)(a9 + v22[9]) = v19;
  *(double *)(a9 + v22[10]) = a10;
  v29 = (_QWORD *)(a9 + v22[11]);
  *v29 = v20;
  v29[1] = v30;
  *(double *)(a9 + v22[12]) = a11;
  sub_1C0781E3C();
}

uint64_t EventTriple.hash(into:)()
{
  return sub_1C0A965B8();
}

void static EventTriple.== infix(_:_:)()
{
  sub_1C0A94A04();
}

void sub_1C0A94A04()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;

  sub_1C0781E5C();
  if ((sub_1C106E560() & 1) != 0)
  {
    v2 = (int *)sub_1C0AA4540();
    if ((sub_1C077D1FC(v2[5]) & 1) != 0 && (sub_1C106EB00() & 1) != 0 && (sub_1C077D1FC(v2[7]) & 1) != 0)
    {
      sub_1C078A79C(v2[8]);
      v5 = v5 && v3 == v4;
      if ((v5 || (sub_1C07785B0() & 1) != 0) && *(_QWORD *)(v1 + v2[9]) == *(_QWORD *)(v0 + v2[9]))
      {
        sub_1C077EBE8(v2[10]);
        if (v5)
        {
          sub_1C078A79C(v2[11]);
          v8 = v5 && v6 == v7;
          if (v8 || (sub_1C07785B0() & 1) != 0)
            sub_1C077EBE8(v2[12]);
        }
      }
    }
  }
  sub_1C077671C();
}

uint64_t sub_1C0A94AD4()
{
  unsigned __int8 *v0;

  return sub_1C0A9699C(*v0);
}

void sub_1C0A94AEC(_BYTE *a1@<X8>)
{
  char v2;

  sub_1C0A966E8();
  *a1 = v2;
}

uint64_t sub_1C0A94B10()
{
  sub_1C0A9DDC8();
  return sub_1C1070EE8();
}

uint64_t sub_1C0A94B38()
{
  sub_1C0A9DDC8();
  return sub_1C1070EF4();
}

void EventTriple.encode(to:)()
{
  sub_1C0A96AEC();
}

void EventTriple.hashValue.getter()
{
  sub_1C0A94BA0((void (*)(_BYTE *))EventTriple.hash(into:));
}

void sub_1C0A94BA0(void (*a1)(_BYTE *))
{
  _BYTE v2[72];

  sub_1C077C06C();
  a1(v2);
  sub_1C077AE74();
  sub_1C0775804();
}

void EventTriple.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0A96DD0(a1, &qword_1ED7601D8, type metadata accessor for EventTriple, (void (*)(void))sub_1C0A9DDC8, a2);
}

void sub_1C0A94C08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  double v9;
  double v10;

  sub_1C0795A8C();
  EventTriple.init(subject:predicate:relationshipId:relationshipPredicate:object:sources:confidence:sourceDuplicates:timestamp:)(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10);
  sub_1C0796570();
}

void sub_1C0A94C28(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  EventTriple.init(from:)(a1, a2);
}

void sub_1C0A94C3C()
{
  EventTriple.encode(to:)();
}

void sub_1C0A94C58()
{
  sub_1C0A93E48((uint64_t)type metadata accessor for EventTriple, &qword_1EF63A588);
}

void sub_1C0A94C84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C0A94C90(a1, a2, a3, (void (*)(_BYTE *))EventTriple.hash(into:));
}

void sub_1C0A94C90(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *))
{
  _BYTE v5[72];

  sub_1C1070DF8();
  a4(v5);
  sub_1C077AE74();
  sub_1C0775804();
}

uint64_t sub_1C0A94CD0()
{
  sub_1C0794BAC(&qword_1ED75F060, type metadata accessor for EventTriple, (uint64_t)&protocol conformance descriptor for EventTriple);
  return sub_1C106BDDC();
}

uint64_t sub_1C0A94D50()
{
  sub_1C0794BAC(&qword_1ED749370, type metadata accessor for EventTriple, (uint64_t)&protocol conformance descriptor for EventTriple);
  return sub_1C106BFD4();
}

uint64_t sub_1C0A94DB8()
{
  sub_1C0794BAC(&qword_1ED749370, type metadata accessor for EventTriple, (uint64_t)&protocol conformance descriptor for EventTriple);
  return sub_1C106BFC8();
}

uint64_t sub_1C0A94E14()
{
  sub_1C0794BAC(&qword_1ED749370, type metadata accessor for EventTriple, (uint64_t)&protocol conformance descriptor for EventTriple);
  return sub_1C106BFBC();
}

uint64_t sub_1C0A94E70()
{
  sub_1C0794BAC(&qword_1ED749380, type metadata accessor for EventTriple, (uint64_t)&protocol conformance descriptor for EventTriple);
  return sub_1C106BD58();
}

unint64_t static ExpiredGraphTriple.databaseTableName.getter()
{
  return sub_1C07A9FA8(20);
}

uint64_t ExpiredGraphTriple.predicate.getter()
{
  return sub_1C0A94760(type metadata accessor for ExpiredGraphTriple);
}

uint64_t ExpiredGraphTriple.relationshipId.getter()
{
  return sub_1C0A94794(type metadata accessor for ExpiredGraphTriple);
}

uint64_t ExpiredGraphTriple.relationshipPredicate.getter()
{
  return sub_1C0A947C8(type metadata accessor for ExpiredGraphTriple);
}

uint64_t ExpiredGraphTriple.object.getter()
{
  return sub_1C0A947FC(type metadata accessor for ExpiredGraphTriple);
}

void ExpiredGraphTriple.sources.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1C0779920();
  v1 = type metadata accessor for ExpiredGraphTriple(v0);
  sub_1C07B8AA8(v1);
  sub_1C0778534();
}

double ExpiredGraphTriple.confidence.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ExpiredGraphTriple(0);
  return sub_1C0AA425C(v0);
}

uint64_t ExpiredGraphTriple.sourceDuplicates.getter()
{
  return sub_1C0A9486C(type metadata accessor for ExpiredGraphTriple);
}

double ExpiredGraphTriple.timestamp.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ExpiredGraphTriple(0);
  return sub_1C077C8C8(v0);
}

void ExpiredGraphTriple.init(subject:predicate:relationshipId:relationshipPredicate:object:sources:confidence:sourceDuplicates:timestamp:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>)
{
  sub_1C07A9624(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
  sub_1C0796570();
}

uint64_t ExpiredGraphTriple.hash(into:)()
{
  return sub_1C0A965B8();
}

void static ExpiredGraphTriple.== infix(_:_:)()
{
  sub_1C0A94A04();
}

uint64_t sub_1C0A94FB4()
{
  sub_1C0A9DE18();
  return sub_1C1070EE8();
}

uint64_t sub_1C0A94FDC()
{
  sub_1C0A9DE18();
  return sub_1C1070EF4();
}

void ExpiredGraphTriple.encode(to:)()
{
  sub_1C0A96AEC();
}

void ExpiredGraphTriple.hashValue.getter()
{
  sub_1C0A94BA0((void (*)(_BYTE *))ExpiredGraphTriple.hash(into:));
}

void ExpiredGraphTriple.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0A96DD0(a1, &qword_1EF63A058, type metadata accessor for ExpiredGraphTriple, (void (*)(void))sub_1C0A9DE18, a2);
}

void sub_1C0A95078(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  ExpiredGraphTriple.init(from:)(a1, a2);
}

void sub_1C0A9508C()
{
  ExpiredGraphTriple.encode(to:)();
}

void sub_1C0A950A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  double v9;
  double v10;

  sub_1C0795A8C();
  ExpiredGraphTriple.init(subject:predicate:relationshipId:relationshipPredicate:object:sources:confidence:sourceDuplicates:timestamp:)(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10);
  sub_1C0796570();
}

uint64_t sub_1C0A950C4()
{
  sub_1C0794BAC(&qword_1EF63A580, type metadata accessor for ExpiredGraphTriple, (uint64_t)&protocol conformance descriptor for ExpiredGraphTriple);
  return sub_1C106BDDC();
}

void sub_1C0A95134()
{
  sub_1C0A93E48((uint64_t)type metadata accessor for ExpiredGraphTriple, &qword_1EF63A578);
}

void sub_1C0A95160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C0A94C90(a1, a2, a3, (void (*)(_BYTE *))ExpiredGraphTriple.hash(into:));
}

uint64_t sub_1C0A9517C()
{
  sub_1C0794BAC(&qword_1ED747E00, type metadata accessor for ExpiredGraphTriple, (uint64_t)&protocol conformance descriptor for ExpiredGraphTriple);
  return sub_1C106BFD4();
}

uint64_t sub_1C0A951E4()
{
  sub_1C0794BAC(&qword_1ED747E00, type metadata accessor for ExpiredGraphTriple, (uint64_t)&protocol conformance descriptor for ExpiredGraphTriple);
  return sub_1C106BFC8();
}

uint64_t sub_1C0A95240()
{
  sub_1C0794BAC(&qword_1ED747E00, type metadata accessor for ExpiredGraphTriple, (uint64_t)&protocol conformance descriptor for ExpiredGraphTriple);
  return sub_1C106BFBC();
}

uint64_t sub_1C0A952B0()
{
  sub_1C0794BAC(&qword_1ED74A490, type metadata accessor for ExpiredGraphTriple, (uint64_t)&protocol conformance descriptor for ExpiredGraphTriple);
  return sub_1C106BD58();
}

unint64_t sub_1C0A95308()
{
  static ExpiredGraphTriple.databaseTableName.getter();
  return 0xD000000000000014;
}

unint64_t static ExpiredEventTriple.databaseTableName.getter()
{
  return sub_1C07A9FA8(19);
}

uint64_t ExpiredEventTriple.predicate.getter()
{
  return sub_1C0A94760(type metadata accessor for ExpiredEventTriple);
}

uint64_t ExpiredEventTriple.relationshipId.getter()
{
  return sub_1C0A94794(type metadata accessor for ExpiredEventTriple);
}

uint64_t ExpiredEventTriple.relationshipPredicate.getter()
{
  return sub_1C0A947C8(type metadata accessor for ExpiredEventTriple);
}

uint64_t ExpiredEventTriple.object.getter()
{
  return sub_1C0A947FC(type metadata accessor for ExpiredEventTriple);
}

void ExpiredEventTriple.sources.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1C0779920();
  v1 = type metadata accessor for ExpiredEventTriple(v0);
  sub_1C07B8AA8(v1);
  sub_1C0778534();
}

double ExpiredEventTriple.confidence.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ExpiredEventTriple(0);
  return sub_1C0AA425C(v0);
}

uint64_t ExpiredEventTriple.sourceDuplicates.getter()
{
  return sub_1C0A9486C(type metadata accessor for ExpiredEventTriple);
}

double ExpiredEventTriple.timestamp.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ExpiredEventTriple(0);
  return sub_1C077C8C8(v0);
}

void ExpiredEventTriple.init(subject:predicate:relationshipId:relationshipPredicate:object:sources:confidence:sourceDuplicates:timestamp:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>)
{
  sub_1C07A9624(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
  sub_1C0796570();
}

uint64_t ExpiredEventTriple.hash(into:)()
{
  return sub_1C0A965B8();
}

void static ExpiredEventTriple.== infix(_:_:)()
{
  sub_1C0A94A04();
}

uint64_t sub_1C0A9540C()
{
  sub_1C0A9DE68();
  return sub_1C1070EE8();
}

uint64_t sub_1C0A95434()
{
  sub_1C0A9DE68();
  return sub_1C1070EF4();
}

void ExpiredEventTriple.encode(to:)()
{
  sub_1C0A96AEC();
}

void ExpiredEventTriple.hashValue.getter()
{
  sub_1C0A94BA0((void (*)(_BYTE *))ExpiredEventTriple.hash(into:));
}

void ExpiredEventTriple.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0A96DD0(a1, qword_1ED760DF0, type metadata accessor for ExpiredEventTriple, (void (*)(void))sub_1C0A9DE68, a2);
}

void sub_1C0A954D0(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  ExpiredEventTriple.init(from:)(a1, a2);
}

void sub_1C0A954E4()
{
  ExpiredEventTriple.encode(to:)();
}

void sub_1C0A95500()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  double v9;
  double v10;

  sub_1C0795A8C();
  ExpiredEventTriple.init(subject:predicate:relationshipId:relationshipPredicate:object:sources:confidence:sourceDuplicates:timestamp:)(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10);
  sub_1C0796570();
}

uint64_t sub_1C0A9551C()
{
  sub_1C0794BAC(&qword_1ED760DD0, type metadata accessor for ExpiredEventTriple, (uint64_t)&protocol conformance descriptor for ExpiredEventTriple);
  return sub_1C106BDDC();
}

void sub_1C0A9558C()
{
  sub_1C0A93E48((uint64_t)type metadata accessor for ExpiredEventTriple, &qword_1EF63A570);
}

void sub_1C0A955B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C0A94C90(a1, a2, a3, (void (*)(_BYTE *))ExpiredEventTriple.hash(into:));
}

uint64_t sub_1C0A955D4()
{
  sub_1C0794BAC(&qword_1EF63A0D0, type metadata accessor for ExpiredEventTriple, (uint64_t)&protocol conformance descriptor for ExpiredEventTriple);
  return sub_1C106BFD4();
}

uint64_t sub_1C0A9563C()
{
  sub_1C0794BAC(&qword_1EF63A0D0, type metadata accessor for ExpiredEventTriple, (uint64_t)&protocol conformance descriptor for ExpiredEventTriple);
  return sub_1C106BFC8();
}

uint64_t sub_1C0A95698()
{
  sub_1C0794BAC(&qword_1EF63A0D0, type metadata accessor for ExpiredEventTriple, (uint64_t)&protocol conformance descriptor for ExpiredEventTriple);
  return sub_1C106BFBC();
}

uint64_t sub_1C0A95708()
{
  sub_1C0794BAC(&qword_1ED754EA8, type metadata accessor for ExpiredEventTriple, (uint64_t)&protocol conformance descriptor for ExpiredEventTriple);
  return sub_1C106BD58();
}

unint64_t sub_1C0A95760()
{
  static ExpiredEventTriple.databaseTableName.getter();
  return 0xD000000000000013;
}

unint64_t static ConstructionGraphTriple.databaseTableName.getter()
{
  return sub_1C07A9FA8(25);
}

void sub_1C0A95794(uint64_t a1)
{
  sub_1C0A9CD24(a1, qword_1ED750DD8);
}

uint64_t static ConstructionGraphTriple.persistenceConflictPolicy.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0A946EC(&qword_1ED741EC8, (uint64_t)qword_1ED750DD8, a1);
}

uint64_t ConstructionGraphTriple.predicate.getter()
{
  return sub_1C0A94760(type metadata accessor for ConstructionGraphTriple);
}

uint64_t ConstructionGraphTriple.relationshipId.getter()
{
  return sub_1C0A94794(type metadata accessor for ConstructionGraphTriple);
}

uint64_t ConstructionGraphTriple.relationshipPredicate.getter()
{
  return sub_1C0A947C8(type metadata accessor for ConstructionGraphTriple);
}

uint64_t ConstructionGraphTriple.object.getter()
{
  return sub_1C0A947FC(type metadata accessor for ConstructionGraphTriple);
}

void ConstructionGraphTriple.sources.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1C0779920();
  v1 = type metadata accessor for ConstructionGraphTriple(v0);
  sub_1C07B8AA8(v1);
  sub_1C0778534();
}

double ConstructionGraphTriple.confidence.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ConstructionGraphTriple(0);
  return sub_1C0AA425C(v0);
}

uint64_t ConstructionGraphTriple.sourceDuplicates.getter()
{
  return sub_1C0A9486C(type metadata accessor for ConstructionGraphTriple);
}

double ConstructionGraphTriple.timestamp.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ConstructionGraphTriple(0);
  return sub_1C077C8C8(v0);
}

void ConstructionGraphTriple.init(subject:predicate:relationshipId:relationshipPredicate:object:sources:confidence:sourceDuplicates:timestamp:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>)
{
  sub_1C07A9624(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
  sub_1C0796570();
}

uint64_t ConstructionGraphTriple.hash(into:)()
{
  return sub_1C0A965B8();
}

void static ConstructionGraphTriple.== infix(_:_:)()
{
  sub_1C0A94A04();
}

uint64_t sub_1C0A9588C()
{
  sub_1C0A9DEB8();
  return sub_1C1070EE8();
}

uint64_t sub_1C0A958B4()
{
  sub_1C0A9DEB8();
  return sub_1C1070EF4();
}

void ConstructionGraphTriple.encode(to:)()
{
  sub_1C0A96AEC();
}

void ConstructionGraphTriple.hashValue.getter()
{
  sub_1C0A94BA0((void (*)(_BYTE *))ConstructionGraphTriple.hash(into:));
}

void ConstructionGraphTriple.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0A96DD0(a1, &qword_1ED751330, type metadata accessor for ConstructionGraphTriple, (void (*)(void))sub_1C0A9DEB8, a2);
}

void sub_1C0A95958()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  double v9;
  double v10;

  sub_1C0795A8C();
  ConstructionGraphTriple.init(subject:predicate:relationshipId:relationshipPredicate:object:sources:confidence:sourceDuplicates:timestamp:)(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10);
  sub_1C0796570();
}

void sub_1C0A95974(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  ConstructionGraphTriple.init(from:)(a1, a2);
}

void sub_1C0A95988()
{
  ConstructionGraphTriple.encode(to:)();
}

void sub_1C0A959A4()
{
  sub_1C0A93E48((uint64_t)type metadata accessor for ConstructionGraphTriple, &qword_1EF63A568);
}

void sub_1C0A959D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C0A94C90(a1, a2, a3, (void (*)(_BYTE *))ConstructionGraphTriple.hash(into:));
}

uint64_t sub_1C0A959EC()
{
  sub_1C0794BAC(&qword_1ED741ED8, type metadata accessor for ConstructionGraphTriple, (uint64_t)&protocol conformance descriptor for ConstructionGraphTriple);
  return sub_1C106BDDC();
}

uint64_t sub_1C0A95A6C()
{
  sub_1C0794BAC(&qword_1ED750E10, type metadata accessor for ConstructionGraphTriple, (uint64_t)&protocol conformance descriptor for ConstructionGraphTriple);
  return sub_1C106BFD4();
}

uint64_t sub_1C0A95AD4()
{
  sub_1C0794BAC(&qword_1ED750E10, type metadata accessor for ConstructionGraphTriple, (uint64_t)&protocol conformance descriptor for ConstructionGraphTriple);
  return sub_1C106BFC8();
}

uint64_t sub_1C0A95B30()
{
  sub_1C0794BAC(&qword_1ED750E10, type metadata accessor for ConstructionGraphTriple, (uint64_t)&protocol conformance descriptor for ConstructionGraphTriple);
  return sub_1C106BFBC();
}

uint64_t sub_1C0A95B8C()
{
  sub_1C0794BAC(&qword_1ED750E20, type metadata accessor for ConstructionGraphTriple, (uint64_t)&protocol conformance descriptor for ConstructionGraphTriple);
  return sub_1C106BD58();
}

unint64_t sub_1C0A95BE4()
{
  static ConstructionGraphTriple.databaseTableName.getter();
  return 0xD000000000000019;
}

unint64_t static ConstructionEventTriple.databaseTableName.getter()
{
  return sub_1C07A9FA8(24);
}

void sub_1C0A95C18(uint64_t a1)
{
  sub_1C0A9CD24(a1, qword_1ED750D48);
}

uint64_t static ConstructionEventTriple.persistenceConflictPolicy.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0A946EC(&qword_1ED750D60, (uint64_t)qword_1ED750D48, a1);
}

uint64_t ConstructionEventTriple.predicate.getter()
{
  return sub_1C0A94760(type metadata accessor for ConstructionEventTriple);
}

uint64_t ConstructionEventTriple.relationshipId.getter()
{
  return sub_1C0A94794(type metadata accessor for ConstructionEventTriple);
}

uint64_t ConstructionEventTriple.relationshipPredicate.getter()
{
  return sub_1C0A947C8(type metadata accessor for ConstructionEventTriple);
}

uint64_t ConstructionEventTriple.object.getter()
{
  return sub_1C0A947FC(type metadata accessor for ConstructionEventTriple);
}

void ConstructionEventTriple.sources.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1C0779920();
  v1 = type metadata accessor for ConstructionEventTriple(v0);
  sub_1C07B8AA8(v1);
  sub_1C0778534();
}

double ConstructionEventTriple.confidence.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ConstructionEventTriple(0);
  return sub_1C0AA425C(v0);
}

uint64_t ConstructionEventTriple.sourceDuplicates.getter()
{
  return sub_1C0A9486C(type metadata accessor for ConstructionEventTriple);
}

double ConstructionEventTriple.timestamp.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ConstructionEventTriple(0);
  return sub_1C077C8C8(v0);
}

void ConstructionEventTriple.init(subject:predicate:relationshipId:relationshipPredicate:object:sources:confidence:sourceDuplicates:timestamp:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>)
{
  sub_1C07A9624(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
  sub_1C0796570();
}

uint64_t ConstructionEventTriple.hash(into:)()
{
  return sub_1C0A965B8();
}

void static ConstructionEventTriple.== infix(_:_:)()
{
  sub_1C0A94A04();
}

uint64_t sub_1C0A95D10()
{
  sub_1C0A9DF08();
  return sub_1C1070EE8();
}

uint64_t sub_1C0A95D38()
{
  sub_1C0A9DF08();
  return sub_1C1070EF4();
}

void ConstructionEventTriple.encode(to:)()
{
  sub_1C0A96AEC();
}

void ConstructionEventTriple.hashValue.getter()
{
  sub_1C0A94BA0((void (*)(_BYTE *))ConstructionEventTriple.hash(into:));
}

void ConstructionEventTriple.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0A96DD0(a1, &qword_1EF63A060, type metadata accessor for ConstructionEventTriple, (void (*)(void))sub_1C0A9DF08, a2);
}

void sub_1C0A95DDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  double v9;
  double v10;

  sub_1C0795A8C();
  ConstructionEventTriple.init(subject:predicate:relationshipId:relationshipPredicate:object:sources:confidence:sourceDuplicates:timestamp:)(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10);
  sub_1C0796570();
}

void sub_1C0A95DF8(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  ConstructionEventTriple.init(from:)(a1, a2);
}

void sub_1C0A95E0C()
{
  ConstructionEventTriple.encode(to:)();
}

void sub_1C0A95E28()
{
  sub_1C0A93E48((uint64_t)type metadata accessor for ConstructionEventTriple, &qword_1EF63A560);
}

void sub_1C0A95E54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C0A94C90(a1, a2, a3, (void (*)(_BYTE *))ConstructionEventTriple.hash(into:));
}

uint64_t sub_1C0A95E70()
{
  sub_1C0794BAC(&qword_1EF63A558, type metadata accessor for ConstructionEventTriple, (uint64_t)&protocol conformance descriptor for ConstructionEventTriple);
  return sub_1C106BDDC();
}

uint64_t sub_1C0A95EF0()
{
  sub_1C0794BAC(&qword_1ED750D80, type metadata accessor for ConstructionEventTriple, (uint64_t)&protocol conformance descriptor for ConstructionEventTriple);
  return sub_1C106BFD4();
}

uint64_t sub_1C0A95F58()
{
  sub_1C0794BAC(&qword_1ED750D80, type metadata accessor for ConstructionEventTriple, (uint64_t)&protocol conformance descriptor for ConstructionEventTriple);
  return sub_1C106BFC8();
}

uint64_t sub_1C0A95FB4()
{
  sub_1C0794BAC(&qword_1ED750D80, type metadata accessor for ConstructionEventTriple, (uint64_t)&protocol conformance descriptor for ConstructionEventTriple);
  return sub_1C106BFBC();
}

uint64_t sub_1C0A96010()
{
  sub_1C0794BAC(&qword_1ED750D90, type metadata accessor for ConstructionEventTriple, (uint64_t)&protocol conformance descriptor for ConstructionEventTriple);
  return sub_1C106BD58();
}

unint64_t sub_1C0A96068()
{
  static ConstructionEventTriple.databaseTableName.getter();
  return 0xD000000000000018;
}

unint64_t static ExpiredConstructionGraphTriple.databaseTableName.getter()
{
  return sub_1C07A9FA8(33);
}

uint64_t ExpiredConstructionGraphTriple.predicate.getter()
{
  return sub_1C0A94760(type metadata accessor for ExpiredConstructionGraphTriple);
}

uint64_t ExpiredConstructionGraphTriple.relationshipId.getter()
{
  return sub_1C0A94794(type metadata accessor for ExpiredConstructionGraphTriple);
}

uint64_t ExpiredConstructionGraphTriple.relationshipPredicate.getter()
{
  return sub_1C0A947C8(type metadata accessor for ExpiredConstructionGraphTriple);
}

uint64_t ExpiredConstructionGraphTriple.object.getter()
{
  return sub_1C0A947FC(type metadata accessor for ExpiredConstructionGraphTriple);
}

void ExpiredConstructionGraphTriple.sources.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1C0779920();
  v1 = type metadata accessor for ExpiredConstructionGraphTriple(v0);
  sub_1C07B8AA8(v1);
  sub_1C0778534();
}

double ExpiredConstructionGraphTriple.confidence.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ExpiredConstructionGraphTriple(0);
  return sub_1C0AA425C(v0);
}

uint64_t ExpiredConstructionGraphTriple.sourceDuplicates.getter()
{
  return sub_1C0A9486C(type metadata accessor for ExpiredConstructionGraphTriple);
}

double ExpiredConstructionGraphTriple.timestamp.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ExpiredConstructionGraphTriple(0);
  return sub_1C077C8C8(v0);
}

void ExpiredConstructionGraphTriple.init(subject:predicate:relationshipId:relationshipPredicate:object:sources:confidence:sourceDuplicates:timestamp:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>)
{
  sub_1C07A9624(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
  sub_1C0796570();
}

uint64_t ExpiredConstructionGraphTriple.hash(into:)()
{
  return sub_1C0A965B8();
}

void static ExpiredConstructionGraphTriple.== infix(_:_:)()
{
  sub_1C0A94A04();
}

uint64_t sub_1C0A9616C()
{
  sub_1C0A9DF58();
  return sub_1C1070EE8();
}

uint64_t sub_1C0A96194()
{
  sub_1C0A9DF58();
  return sub_1C1070EF4();
}

void ExpiredConstructionGraphTriple.encode(to:)()
{
  sub_1C0A96AEC();
}

void ExpiredConstructionGraphTriple.hashValue.getter()
{
  sub_1C0A94BA0((void (*)(_BYTE *))ExpiredConstructionGraphTriple.hash(into:));
}

void ExpiredConstructionGraphTriple.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0A96DD0(a1, &qword_1EF63A078, type metadata accessor for ExpiredConstructionGraphTriple, (void (*)(void))sub_1C0A9DF58, a2);
}

void sub_1C0A96230(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  ExpiredConstructionGraphTriple.init(from:)(a1, a2);
}

void sub_1C0A96244()
{
  ExpiredConstructionGraphTriple.encode(to:)();
}

void sub_1C0A96260()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  double v9;
  double v10;

  sub_1C0795A8C();
  ExpiredConstructionGraphTriple.init(subject:predicate:relationshipId:relationshipPredicate:object:sources:confidence:sourceDuplicates:timestamp:)(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10);
  sub_1C0796570();
}

uint64_t sub_1C0A9627C()
{
  sub_1C0794BAC(&qword_1EF63A550, type metadata accessor for ExpiredConstructionGraphTriple, (uint64_t)&protocol conformance descriptor for ExpiredConstructionGraphTriple);
  return sub_1C106BDDC();
}

void sub_1C0A962EC()
{
  sub_1C0A93E48((uint64_t)type metadata accessor for ExpiredConstructionGraphTriple, &qword_1EF63A548);
}

void sub_1C0A96318(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C0A94C90(a1, a2, a3, (void (*)(_BYTE *))ExpiredConstructionGraphTriple.hash(into:));
}

uint64_t sub_1C0A96334()
{
  sub_1C0794BAC(&qword_1EF63A030, type metadata accessor for ExpiredConstructionGraphTriple, (uint64_t)&protocol conformance descriptor for ExpiredConstructionGraphTriple);
  return sub_1C106BFD4();
}

uint64_t sub_1C0A9639C()
{
  sub_1C0794BAC(&qword_1EF63A030, type metadata accessor for ExpiredConstructionGraphTriple, (uint64_t)&protocol conformance descriptor for ExpiredConstructionGraphTriple);
  return sub_1C106BFC8();
}

uint64_t sub_1C0A963F8()
{
  sub_1C0794BAC(&qword_1EF63A030, type metadata accessor for ExpiredConstructionGraphTriple, (uint64_t)&protocol conformance descriptor for ExpiredConstructionGraphTriple);
  return sub_1C106BFBC();
}

uint64_t sub_1C0A96468()
{
  sub_1C0794BAC(&qword_1EF63A540, type metadata accessor for ExpiredConstructionGraphTriple, (uint64_t)&protocol conformance descriptor for ExpiredConstructionGraphTriple);
  return sub_1C106BD58();
}

unint64_t sub_1C0A964C0()
{
  static ExpiredConstructionGraphTriple.databaseTableName.getter();
  return 0xD000000000000021;
}

unint64_t static ExpiredConstructionEventTriple.databaseTableName.getter()
{
  return sub_1C07A9FA8(32);
}

uint64_t ExpiredConstructionEventTriple.predicate.getter()
{
  return sub_1C0A94760(type metadata accessor for ExpiredConstructionEventTriple);
}

uint64_t ExpiredConstructionEventTriple.relationshipId.getter()
{
  return sub_1C0A94794(type metadata accessor for ExpiredConstructionEventTriple);
}

uint64_t ExpiredConstructionEventTriple.relationshipPredicate.getter()
{
  return sub_1C0A947C8(type metadata accessor for ExpiredConstructionEventTriple);
}

uint64_t ExpiredConstructionEventTriple.object.getter()
{
  return sub_1C0A947FC(type metadata accessor for ExpiredConstructionEventTriple);
}

void ExpiredConstructionEventTriple.sources.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1C0779920();
  v1 = type metadata accessor for ExpiredConstructionEventTriple(v0);
  sub_1C07B8AA8(v1);
  sub_1C0778534();
}

double ExpiredConstructionEventTriple.confidence.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ExpiredConstructionEventTriple(0);
  return sub_1C0AA425C(v0);
}

uint64_t ExpiredConstructionEventTriple.sourceDuplicates.getter()
{
  return sub_1C0A9486C(type metadata accessor for ExpiredConstructionEventTriple);
}

double ExpiredConstructionEventTriple.timestamp.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ExpiredConstructionEventTriple(0);
  return sub_1C077C8C8(v0);
}

void ExpiredConstructionEventTriple.init(subject:predicate:relationshipId:relationshipPredicate:object:sources:confidence:sourceDuplicates:timestamp:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>)
{
  sub_1C07A9624(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
  sub_1C0796570();
}

uint64_t ExpiredConstructionEventTriple.hash(into:)()
{
  return sub_1C0A965B8();
}

uint64_t sub_1C0A965B8()
{
  sub_1C077B61C();
  sub_1C078784C();
  sub_1C0794BAC((unint64_t *)&qword_1ED7618F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE40]);
  sub_1C0AA43A0();
  sub_1C07A84F8();
  sub_1C0779688();
  sub_1C0794BAC(&qword_1ED75EA28, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC68]);
  sub_1C078D6D0();
  sub_1C077D8EC();
  sub_1C0794BAC(&qword_1ED761910, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D450], MEMORY[0x1E0D3D468]);
  sub_1C0AA4390();
  sub_1C078D6D0();
  sub_1C07AAEFC();
  sub_1C077D1EC();
  sub_1C077B5B4();
  sub_1C1070E04();
  sub_1C1070E34();
  sub_1C07AAEFC();
  sub_1C077D1EC();
  sub_1C077B5B4();
  return sub_1C0AA42A0();
}

void static ExpiredConstructionEventTriple.== infix(_:_:)()
{
  sub_1C0A94A04();
}

void sub_1C0A966E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  BOOL v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v13;

  sub_1C0782A00();
  v3 = v3 && v2 == 0xE700000000000000;
  if (!v3)
  {
    v4 = v2;
    v5 = v1;
    if ((sub_1C079373C() & 1) == 0)
    {
      sub_1C0AA4268();
      v6 = v3 && v4 == v0;
      if (!v6 && (sub_1C079373C() & 1) == 0)
      {
        sub_1C078A410();
        if (v3 && v4 == v7)
        {
          sub_1C07ABD0C();
        }
        else if ((sub_1C079373C() & 1) == 0)
        {
          if (v5 != 0xD000000000000015 || (sub_1C0791A68((uint64_t)"relationshipPredicate"), !v3))
          {
            if ((sub_1C079373C() & 1) == 0)
            {
              sub_1C0AA455C();
              v9 = v3 && v4 == 0xE600000000000000;
              if (!v9 && (sub_1C079373C() & 1) == 0)
              {
                sub_1C0AA43F8();
                v11 = v5 == (v10 & 0xFFFFFFFFFFFFLL | 0x73000000000000) && v4 == 0xE700000000000000;
                if (!v11
                  && (sub_1C079373C() & 1) == 0
                  && (v5 != 0x6E656469666E6F63 || v4 != 0xEA00000000006563)
                  && (sub_1C079373C() & 1) == 0)
                {
                  if (v5 != 0xD000000000000010 || (sub_1C0791A68((uint64_t)"sourceDuplicates"), !v3))
                  {
                    if ((sub_1C079373C() & 1) == 0)
                    {
                      sub_1C0781B94();
                      if (!v3 || v4 != v13)
                      {
                        sub_1C079373C();
                        sub_1C07767AC();
                        goto LABEL_7;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_7:
  sub_1C077671C();
}

uint64_t sub_1C0A9699C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0A969D0 + 4 * byte_1C109A010[a1]))(0x7463656A627573, 0xE700000000000000);
}

unint64_t sub_1C0A969D8()
{
  return 0xD000000000000015;
}

uint64_t sub_1C0A96A00()
{
  return 0x73656372756F73;
}

uint64_t sub_1C0A96A14()
{
  return 0x6E656469666E6F63;
}

unint64_t sub_1C0A96A30()
{
  return sub_1C07A9FA8(16);
}

uint64_t sub_1C0A96A48()
{
  return 0x6D617473656D6974;
}

uint64_t sub_1C0A96A68()
{
  sub_1C0A9DFA8();
  return sub_1C1070EE8();
}

uint64_t sub_1C0A96A90()
{
  sub_1C0A9DFA8();
  return sub_1C1070EF4();
}

void ExpiredConstructionEventTriple.encode(to:)()
{
  sub_1C0A96AEC();
}

void sub_1C0A96AEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  char v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1C077AE5C();
  v19 = v3;
  v20 = v1;
  sub_1C0780784(v4, v5);
  sub_1C077E58C();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v0 + 32);
  sub_1C0AA41FC();
  sub_1C0776A40();
  LOBYTE(v21) = 0;
  sub_1C078784C();
  sub_1C0794BAC(&qword_1ED759FB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE38]);
  sub_1C0AA44AC();
  sub_1C07AB59C();
  if (v1)
  {
    v10 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8);
    v13 = (uint64_t)v8;
  }
  else
  {
    v11 = v2;
    sub_1C0AA4550();
    sub_1C07BA034();
    LOBYTE(v21) = v12;
    sub_1C106E41C();
    sub_1C0794BAC(&qword_1ED7606D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC60]);
    sub_1C078F64C();
    v19 = v2;
    v20 = v9;
    v14 = v8;
    LOBYTE(v21) = 2;
    sub_1C077D8EC();
    sub_1C0794BAC(&qword_1ED759FC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D450], MEMORY[0x1E0D3D460]);
    sub_1C0AA44B8();
    sub_1C077F7D8();
    v15 = v19;
    LOBYTE(v21) = 3;
    sub_1C077F7D8();
    LOBYTE(v21) = 4;
    sub_1C077FB04();
    v21 = *(_QWORD *)(v20 + *(int *)(v15 + 36));
    sub_1C0A0F550();
    sub_1C077F7D8();
    LOBYTE(v21) = 6;
    sub_1C07821C4();
    v16 = (uint64_t *)(v20 + *(int *)(v15 + 44));
    v18 = *v16;
    v17 = v16[1];
    v21 = v18;
    v22 = v17;
    sub_1C0A9DD3C();
    sub_1C077F7D8();
    LOBYTE(v21) = 8;
    sub_1C07821C4();
    v10 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    v13 = (uint64_t)v14;
  }
  sub_1C078303C(v13, v10);
  sub_1C077EEFC();
  sub_1C07757D0();
}

void ExpiredConstructionEventTriple.hashValue.getter()
{
  sub_1C0A94BA0((void (*)(_BYTE *))ExpiredConstructionEventTriple.hash(into:));
}

void ExpiredConstructionEventTriple.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0A96DD0(a1, &qword_1EF63A090, type metadata accessor for ExpiredConstructionEventTriple, (void (*)(void))sub_1C0A9DFA8, a2);
}

void sub_1C0A96DD0(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, void (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(void);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  char *v39;
  void (*v40)(void);
  int *v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, void (*)(void), uint64_t);
  uint64_t v54;
  uint64_t (*v55)(_QWORD);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(void);
  uint64_t v67;
  int *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char v72;

  v66 = a4;
  v54 = a5;
  v10 = sub_1C077D8EC();
  v60 = *(_QWORD *)(v10 - 8);
  v61 = v10;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v11);
  v13 = sub_1C07B7FA8(v12, (uint64_t)v53);
  v64 = *(_QWORD *)(v13 - 8);
  v65 = v13;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v14);
  sub_1C077AF80();
  v17 = (void (*)(void))(v15 - v16);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v53 - v19;
  v21 = sub_1C078784C();
  v62 = *(_QWORD *)(v21 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v22);
  sub_1C078258C(v23, (uint64_t)v53);
  v58 = sub_1C07ACF80(a2);
  sub_1C077E58C();
  MEMORY[0x1E0C80A78](v24);
  sub_1C07785B8();
  v55 = a3;
  v68 = (int *)a3(0);
  sub_1C078B9A4();
  MEMORY[0x1E0C80A78](v25);
  v69 = (char *)&v53 - v26;
  v27 = a1[3];
  v63 = a1;
  sub_1C07A9480(a1, v27);
  v66();
  v28 = v67;
  sub_1C1070E94();
  v59 = v21;
  if (v28)
  {
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v63);
  }
  else
  {
    v29 = v20;
    v30 = v57;
    v66 = v17;
    v67 = v6;
    LOBYTE(v70) = 0;
    sub_1C0794BAC((unint64_t *)&unk_1ED761900, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE58]);
    v31 = v56;
    sub_1C1070AE0();
    v32 = v5;
    v33 = v69;
    (*(void (**)(char *, uint64_t, uint64_t))(v62 + 32))(v69, v31, v21);
    LOBYTE(v70) = 1;
    sub_1C0794BAC((unint64_t *)&qword_1ED7618D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC88]);
    v34 = v29;
    v35 = v65;
    v56 = v32;
    sub_1C1070AE0();
    v36 = &v33[v68[5]];
    v37 = *(void (**)(char *, char *, uint64_t))(v64 + 32);
    v37(v36, v34, v35);
    LOBYTE(v70) = 2;
    sub_1C0794BAC(&qword_1ED761918, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D450], MEMORY[0x1E0D3D480]);
    v38 = v61;
    sub_1C078244C();
    v53 = (void (*)(char *, void (*)(void), uint64_t))v37;
    v39 = v69;
    (*(void (**)(char *, uint64_t, uint64_t))(v60 + 32))(&v69[v68[6]], v30, v38);
    LOBYTE(v70) = 3;
    v40 = v66;
    sub_1C078244C();
    v41 = v68;
    v53(&v39[v68[7]], v40, v35);
    sub_1C0AA4408(4);
    v42 = sub_1C1070AA4();
    v43 = (uint64_t *)&v39[v41[8]];
    *v43 = v42;
    v43[1] = v44;
    v72 = 5;
    sub_1C0A0F608();
    sub_1C078244C();
    *(_QWORD *)&v39[v41[9]] = v70;
    sub_1C0AA4408(6);
    sub_1C1070ABC();
    v45 = (uint64_t)v63;
    *(_QWORD *)&v39[v41[10]] = v46;
    v72 = 7;
    sub_1C0A9DD78();
    sub_1C078244C();
    v47 = v71;
    v48 = &v69[v41[11]];
    *(_QWORD *)v48 = v70;
    *((_QWORD *)v48 + 1) = v47;
    LOBYTE(v70) = 8;
    sub_1C1070ABC();
    v50 = v49;
    sub_1C077E9A4(v32, *(uint64_t (**)(uint64_t, _QWORD))(v67 + 8));
    v51 = v41[12];
    v52 = (uint64_t)v69;
    *(_QWORD *)&v69[v51] = v50;
    sub_1C0AA4328(v52, v54);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v45);
    sub_1C07B6C30();
  }
}

void sub_1C0A9739C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  ExpiredConstructionEventTriple.init(from:)(a1, a2);
}

void sub_1C0A973B0()
{
  ExpiredConstructionEventTriple.encode(to:)();
}

void sub_1C0A973CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  double v9;
  double v10;

  sub_1C0795A8C();
  ExpiredConstructionEventTriple.init(subject:predicate:relationshipId:relationshipPredicate:object:sources:confidence:sourceDuplicates:timestamp:)(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10);
  sub_1C0796570();
}

uint64_t sub_1C0A973E8()
{
  sub_1C0794BAC(&qword_1EF63A538, type metadata accessor for ExpiredConstructionEventTriple, (uint64_t)&protocol conformance descriptor for ExpiredConstructionEventTriple);
  return sub_1C106BDDC();
}

void sub_1C0A97458()
{
  sub_1C0A93E48((uint64_t)type metadata accessor for ExpiredConstructionEventTriple, &qword_1EF63A530);
}

void sub_1C0A97484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C0A94C90(a1, a2, a3, (void (*)(_BYTE *))ExpiredConstructionEventTriple.hash(into:));
}

uint64_t sub_1C0A974A0()
{
  sub_1C0794BAC(&qword_1EF63A008, type metadata accessor for ExpiredConstructionEventTriple, (uint64_t)&protocol conformance descriptor for ExpiredConstructionEventTriple);
  return sub_1C106BFD4();
}

uint64_t sub_1C0A97508()
{
  sub_1C0794BAC(&qword_1EF63A008, type metadata accessor for ExpiredConstructionEventTriple, (uint64_t)&protocol conformance descriptor for ExpiredConstructionEventTriple);
  return sub_1C106BFC8();
}

uint64_t sub_1C0A97564()
{
  sub_1C0794BAC(&qword_1EF63A008, type metadata accessor for ExpiredConstructionEventTriple, (uint64_t)&protocol conformance descriptor for ExpiredConstructionEventTriple);
  return sub_1C106BFBC();
}

uint64_t sub_1C0A975D4()
{
  sub_1C0794BAC(&qword_1EF63A528, type metadata accessor for ExpiredConstructionEventTriple, (uint64_t)&protocol conformance descriptor for ExpiredConstructionEventTriple);
  return sub_1C106BD58();
}

unint64_t sub_1C0A9762C()
{
  static ExpiredConstructionEventTriple.databaseTableName.getter();
  return 0xD000000000000020;
}

uint64_t EntityTriple.predicate.getter()
{
  return sub_1C0A94760(type metadata accessor for EntityTriple);
}

uint64_t EntityTriple.relationshipId.getter()
{
  return sub_1C0A94794(type metadata accessor for EntityTriple);
}

uint64_t EntityTriple.relationshipPredicate.getter()
{
  return sub_1C0A947C8(type metadata accessor for EntityTriple);
}

uint64_t EntityTriple.object.getter()
{
  return sub_1C0A947FC(type metadata accessor for EntityTriple);
}

void EntityTriple.source.getter()
{
  sub_1C0A97E4C(type metadata accessor for EntityTriple);
}

uint64_t EntityTriple.sourceId.getter()
{
  return sub_1C0A97E88(type metadata accessor for EntityTriple);
}

double EntityTriple.timestamp.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for EntityTriple(0) + 44));
}

void EntityTriple.pipelineType.getter()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1C0779920();
  *v0 = *(_BYTE *)(v1 + *(int *)(type metadata accessor for EntityTriple(v2) + 48));
  sub_1C0778534();
}

uint64_t static EntityTriple.databaseTableName.getter()
{
  return 0x797469746E65;
}

void sub_1C0A976F0(uint64_t a1)
{
  sub_1C0A9CD24(a1, qword_1ED759CA0);
}

uint64_t static EntityTriple.persistenceConflictPolicy.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0A946EC(&qword_1ED75A478, (uint64_t)qword_1ED759CA0, a1);
}

void EntityTriple.hash(into:)()
{
  sub_1C0A97F48();
}

void static EntityTriple.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_1C0A98070(a1, a2);
}

uint64_t sub_1C0A97730()
{
  unsigned __int8 *v0;

  return sub_1C0A98418(*v0);
}

void sub_1C0A97748(_BYTE *a1@<X8>)
{
  char v2;

  sub_1C0A9815C();
  *a1 = v2;
}

uint64_t sub_1C0A9776C()
{
  sub_1C0A9DFE4();
  return sub_1C1070EE8();
}

uint64_t sub_1C0A97794()
{
  sub_1C0A9DFE4();
  return sub_1C1070EF4();
}

void EntityTriple.encode(to:)()
{
  sub_1C0A98560();
}

void EntityTriple.hashValue.getter()
{
  sub_1C0A94BA0((void (*)(_BYTE *))EntityTriple.hash(into:));
}

void EntityTriple.init(from:)()
{
  sub_1C0A9885C();
}

void sub_1C0A9783C()
{
  EntityTriple.init(from:)();
}

void sub_1C0A97850()
{
  EntityTriple.encode(to:)();
}

uint64_t sub_1C0A97868()
{
  return sub_1C0A9788C((uint64_t)type metadata accessor for EntityTriple, &qword_1EF63A520);
}

uint64_t sub_1C0A9788C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v7;

  sub_1C077674C();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v5);
  sub_1C07785B8();
  sub_1C1070774();
  sub_1C077866C();
  v7 = sub_1C07A84F8();
  sub_1C07ACF80(a2);
  sub_1C106FB5C();
  sub_1C106FC94();
  sub_1C0775834();
  sub_1C106FC94();
  sub_1C078784C();
  sub_1C0794BAC((unint64_t *)&qword_1ED7625A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE60]);
  sub_1C07AC380();
  sub_1C0782158();
  sub_1C0775834();
  sub_1C07A53E8();
  sub_1C0779688();
  sub_1C0794BAC(&qword_1EF632CD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC90]);
  sub_1C07A26C4();
  sub_1C0782158();
  sub_1C077589C();
  sub_1C0793020();
  sub_1C1070774();
  sub_1C077866C();
  sub_1C077D8EC();
  sub_1C0794BAC(&qword_1EF639B28, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D450], MEMORY[0x1E0D3D488]);
  sub_1C1070C0C();
  sub_1C0782158();
  swift_bridgeObjectRelease();
  sub_1C0786558();
  sub_1C07A26C4();
  sub_1C0782158();
  sub_1C0775834();
  sub_1C0793020();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  sub_1C077589C();
  sub_1C0775894();
  sub_1C1070774();
  sub_1C077866C();
  sub_1C07767C4();
  sub_1C0AA4218();
  sub_1C0775894();
  sub_1C106FC94();
  sub_1C080ABC4(v2 + *(int *)(v7 + 36), v3, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C07767C4();
  sub_1C0AA4218();
  sub_1C0775894();
  sub_1C07B1F90(v3, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C106FC94();
  sub_1C077AEBC();
  sub_1C106FC94();
  sub_1C077B5B4();
  sub_1C0786558();
  PipelineType.description.getter();
  sub_1C0782158();
  sub_1C07767AC();
  sub_1C0775B1C();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AA42B4();
  sub_1C0775834();
  sub_1C0775844();
  return 60;
}

void sub_1C0A97BC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C0A94C90(a1, a2, a3, (void (*)(_BYTE *))EntityTriple.hash(into:));
}

uint64_t sub_1C0A97BE0()
{
  sub_1C0794BAC(&qword_1ED75A4A0, type metadata accessor for EntityTriple, (uint64_t)&protocol conformance descriptor for EntityTriple);
  return sub_1C106BDDC();
}

uint64_t sub_1C0A97C60()
{
  sub_1C0794BAC(&qword_1ED759CC0, type metadata accessor for EntityTriple, (uint64_t)&protocol conformance descriptor for EntityTriple);
  return sub_1C106BFD4();
}

uint64_t sub_1C0A97CC8()
{
  sub_1C0794BAC(&qword_1ED759CC0, type metadata accessor for EntityTriple, (uint64_t)&protocol conformance descriptor for EntityTriple);
  return sub_1C106BFC8();
}

uint64_t sub_1C0A97D24()
{
  sub_1C0794BAC(&qword_1ED759CC0, type metadata accessor for EntityTriple, (uint64_t)&protocol conformance descriptor for EntityTriple);
  return sub_1C106BFBC();
}

uint64_t sub_1C0A97D80()
{
  sub_1C0794BAC(&qword_1ED75A498, type metadata accessor for EntityTriple, (uint64_t)&protocol conformance descriptor for EntityTriple);
  return sub_1C106BD58();
}

uint64_t sub_1C0A97DD8()
{
  return 0x797469746E65;
}

uint64_t _s24IntelligencePlatformCore11GraphTripleV7subject0aB016EntityIdentifierVvg_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_1C078784C();
  v0 = sub_1C07759A0();
  return sub_1C077C20C(v0, v1, v2, v3);
}

uint64_t TranslatedEntityTriple.predicate.getter()
{
  return sub_1C0A94760(type metadata accessor for TranslatedEntityTriple);
}

uint64_t TranslatedEntityTriple.relationshipId.getter()
{
  return sub_1C0A94794(type metadata accessor for TranslatedEntityTriple);
}

uint64_t TranslatedEntityTriple.relationshipPredicate.getter()
{
  return sub_1C0A947C8(type metadata accessor for TranslatedEntityTriple);
}

uint64_t TranslatedEntityTriple.object.getter()
{
  return sub_1C0A947FC(type metadata accessor for TranslatedEntityTriple);
}

void TranslatedEntityTriple.source.getter()
{
  sub_1C0A97E4C(type metadata accessor for TranslatedEntityTriple);
}

void sub_1C0A97E4C(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = sub_1C07A31CC(a1);
  sub_1C080ABC4(v2 + *(int *)(v3 + 36), v1, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0778534();
}

uint64_t TranslatedEntityTriple.sourceId.getter()
{
  return sub_1C0A97E88(type metadata accessor for TranslatedEntityTriple);
}

uint64_t sub_1C0A97E88(uint64_t (*a1)(_QWORD))
{
  sub_1C0AA44F4(a1);
  sub_1C07989AC();
  return sub_1C077CEF4();
}

double TranslatedEntityTriple.timestamp.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for TranslatedEntityTriple(0) + 44));
}

void TranslatedEntityTriple.pipelineType.getter()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1C0779920();
  *v0 = *(_BYTE *)(v1 + *(int *)(type metadata accessor for TranslatedEntityTriple(v2) + 48));
  sub_1C0778534();
}

uint64_t static TranslatedEntityTriple.databaseTableName.getter()
{
  return 0x74616C736E617274;
}

void sub_1C0A97F14(uint64_t a1)
{
  sub_1C0A9CD24(a1, qword_1ED759CF8);
}

uint64_t static TranslatedEntityTriple.persistenceConflictPolicy.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0A946EC(&qword_1ED75C310, (uint64_t)qword_1ED759CF8, a1);
}

void TranslatedEntityTriple.hash(into:)()
{
  sub_1C0A97F48();
}

void sub_1C0A97F48()
{
  sub_1C077B61C();
  sub_1C078784C();
  sub_1C0794BAC((unint64_t *)&qword_1ED7618F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE40]);
  sub_1C0AA43A0();
  sub_1C07A84F8();
  sub_1C0779688();
  sub_1C0794BAC(&qword_1ED75EA28, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC68]);
  sub_1C078D6D0();
  sub_1C077D8EC();
  sub_1C0794BAC(&qword_1ED761910, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D450], MEMORY[0x1E0D3D468]);
  sub_1C0AA4390();
  sub_1C078D6D0();
  sub_1C07AAEFC();
  sub_1C077D1EC();
  sub_1C077B5B4();
  sub_1C07AAEFC();
  sub_1C077D1EC();
  sub_1C077B5B4();
  sub_1C07AAEFC();
  sub_1C077D1EC();
  sub_1C077B5B4();
  sub_1C0AA42A0();
  sub_1C08CA590();
}

void static TranslatedEntityTriple.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_1C0A98070(a1, a2);
}

void sub_1C0A98070(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;

  if ((sub_1C106E560() & 1) == 0)
    goto LABEL_22;
  v4 = (int *)sub_1C0AA4540();
  if ((sub_1C077E5FC(v4[5]) & 1) == 0 || (sub_1C106EB00() & 1) == 0 || (sub_1C077E5FC(v4[7]) & 1) == 0)
    goto LABEL_22;
  sub_1C0AA4378(v4[8]);
  v7 = v7 && v5 == v6;
  if ((v7 || (sub_1C07785B0() & 1) != 0)
    && ((v8 = v4[9], v9 = (_QWORD *)(a1 + v8), v10 = (_QWORD *)(a2 + v8), *v9 == *v10)
      ? (v11 = v9[1] == v10[1])
      : (v11 = 0),
        (v11 || (sub_1C07785B0() & 1) != 0)
     && ((sub_1C0AA4378(v4[10]), v7) ? (v14 = v12 == v13) : (v14 = 0),
         (v14 || (sub_1C07785B0() & 1) != 0) && *(double *)(a1 + v4[11]) == *(double *)(a2 + v4[11]))))
  {
    sub_1C08C428C();
  }
  else
  {
LABEL_22:
    sub_1C077671C();
  }
}

void sub_1C0A9815C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  BOOL v14;

  sub_1C0782A00();
  v3 = v3 && v2 == 0xE700000000000000;
  if (!v3)
  {
    v4 = v2;
    v5 = v1;
    if ((sub_1C079373C() & 1) == 0)
    {
      sub_1C0AA4268();
      v6 = v3 && v4 == v0;
      if (!v6 && (sub_1C079373C() & 1) == 0)
      {
        sub_1C078A410();
        if (v3 && v4 == v7)
        {
          sub_1C07ABD0C();
        }
        else if ((sub_1C079373C() & 1) == 0)
        {
          if (v5 != 0xD000000000000015 || (sub_1C0791A68((uint64_t)"relationshipPredicate"), !v3))
          {
            if ((sub_1C079373C() & 1) == 0)
            {
              sub_1C0AA455C();
              v9 = v3 && v4 == 0xE600000000000000;
              if (!v9 && (sub_1C079373C() & 1) == 0)
              {
                sub_1C0AA4520();
                v10 = v3 && v4 == 0xE600000000000000;
                if (!v10 && (sub_1C079373C() & 1) == 0)
                {
                  sub_1C0AA43F8();
                  v12 = v5 == (v11 & 0xFFFFFFFFFFFFLL | 0x6449000000000000) && v4 == 0xE800000000000000;
                  if (!v12 && (sub_1C079373C() & 1) == 0)
                  {
                    sub_1C0781B94();
                    v14 = v3 && v4 == v13;
                    if (!v14
                      && (sub_1C079373C() & 1) == 0
                      && (v5 != 0x656E696C65706970 || v4 != 0xEC00000065707954))
                    {
                      sub_1C079373C();
                      sub_1C07767AC();
                      goto LABEL_7;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_7:
  sub_1C077671C();
}

uint64_t sub_1C0A98418(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0A9844C + 4 * byte_1C109A019[a1]))(0x7463656A627573, 0xE700000000000000);
}

unint64_t sub_1C0A98454()
{
  return sub_1C07A9FA8(21);
}

uint64_t sub_1C0A98470()
{
  return 0x656372756F73;
}

uint64_t sub_1C0A98484()
{
  return 0x6449656372756F73;
}

uint64_t sub_1C0A9849C()
{
  return 0x6D617473656D6974;
}

uint64_t sub_1C0A984BC()
{
  return 0x656E696C65706970;
}

uint64_t sub_1C0A984DC()
{
  sub_1C0A9E070();
  return sub_1C1070EE8();
}

uint64_t sub_1C0A98504()
{
  sub_1C0A9E070();
  return sub_1C1070EF4();
}

void TranslatedEntityTriple.encode(to:)()
{
  sub_1C0A98560();
}

void sub_1C0A98560()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(_QWORD);
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void (*v9)(_QWORD);
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  void (*v12)(_QWORD);
  uint64_t v13;
  uint64_t v14;
  void (*v15)(_QWORD);
  char *v16;
  char v17;
  char v18;

  sub_1C077AE5C();
  v15 = v3;
  sub_1C0780784(v4, v5);
  sub_1C077E58C();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void (**)(_QWORD))(v0 + 32);
  sub_1C0AA41FC();
  sub_1C0776A40();
  sub_1C078784C();
  sub_1C0794BAC(&qword_1ED759FB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE38]);
  sub_1C0781E68();
  sub_1C1070BB8();
  if (v1)
  {
    v10 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8);
    v11 = (uint64_t)v8;
  }
  else
  {
    v15(0);
    sub_1C07AEF24();
    sub_1C106E41C();
    sub_1C0794BAC(&qword_1ED7606D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC60]);
    sub_1C078F64C();
    v15 = v9;
    v16 = v8;
    sub_1C0AA4498();
    sub_1C077D8EC();
    sub_1C0794BAC(&qword_1ED759FC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D450], MEMORY[0x1E0D3D460]);
    sub_1C077F7D8();
    sub_1C0AA447C();
    sub_1C077F7D8();
    sub_1C077FB04();
    sub_1C077674C();
    sub_1C0794BAC((unint64_t *)&qword_1ED75CC30, (uint64_t (*)(uint64_t))type metadata accessor for Source, (uint64_t)&protocol conformance descriptor for Source);
    sub_1C077F7D8();
    v12 = v15;
    sub_1C077FB04();
    sub_1C07821C4();
    v18 = *((_BYTE *)v12 + *(int *)(v2 + 48));
    v17 = 8;
    sub_1C0A9E020();
    v13 = (uint64_t)v16;
    sub_1C077F7D8();
    v10 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8);
    v11 = v13;
  }
  sub_1C078303C(v11, v10);
  sub_1C077EEFC();
  sub_1C07757D0();
}

void TranslatedEntityTriple.hashValue.getter()
{
  sub_1C0A94BA0((void (*)(_BYTE *))TranslatedEntityTriple.hash(into:));
}

void TranslatedEntityTriple.init(from:)()
{
  sub_1C0A9885C();
}

void sub_1C0A9885C()
{
  uint64_t v0;
  void (*v1)(void);
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void);
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t (*v7)(_QWORD);
  uint64_t *v8;
  uint64_t *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, char *, uint64_t);
  uint64_t v51;
  uint64_t (*v52)(_QWORD);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(void);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  char v70;

  sub_1C077AE5C();
  v65 = v4;
  v66 = v5;
  v7 = v6;
  v9 = v8;
  v67 = v0;
  v11 = v10;
  v51 = v12;
  v53 = sub_1C077674C();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v13);
  sub_1C078258C(v14, v49);
  v15 = sub_1C077D8EC();
  v58 = *(_QWORD *)(v15 - 8);
  v59 = v15;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v16);
  v64 = sub_1C07B7FA8(v17, v49);
  v68 = *(_QWORD *)(v64 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v18);
  sub_1C077AF80();
  v21 = v19 - v20;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v49 - v23;
  v25 = sub_1C078784C();
  v60 = *(_QWORD *)(v25 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v26);
  sub_1C07785B8();
  v56 = sub_1C07ACF80(v9);
  sub_1C0779CC0();
  MEMORY[0x1E0C80A78](v27);
  v28 = sub_1C077F1C8();
  v52 = v7;
  v63 = v7(v28);
  sub_1C078B9A4();
  MEMORY[0x1E0C80A78](v29);
  v61 = v11;
  v62 = (char *)&v49 - v30;
  sub_1C07A9480(v11, v11[3]);
  v65();
  v31 = v67;
  sub_1C1070E94();
  v57 = v25;
  if (v31)
  {
    v67 = v31;
    sub_1C07A99EC();
  }
  else
  {
    v66 = v3;
    v67 = v21;
    sub_1C0794BAC((unint64_t *)&unk_1ED761900, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE58]);
    sub_1C07A869C();
    v32 = (uint64_t)v62;
    (*(void (**)(char *, uint64_t, uint64_t))(v60 + 32))(v62, v2, v25);
    sub_1C0794BAC((unint64_t *)&qword_1ED7618D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC88]);
    v33 = v24;
    v34 = v64;
    v65 = v1;
    sub_1C07A869C();
    v35 = (int *)v63;
    v36 = v32 + *(int *)(v63 + 20);
    v50 = *(void (**)(uint64_t, char *, uint64_t))(v68 + 32);
    v50(v36, v33, v34);
    sub_1C0AA4498();
    sub_1C0794BAC(&qword_1ED761918, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D450], MEMORY[0x1E0D3D480]);
    v37 = v55;
    v38 = v59;
    sub_1C078114C();
    v39 = (void (*)(uint64_t, uint64_t, uint64_t))v50;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 32))(v32 + v35[6], v37, v38);
    v40 = v67;
    sub_1C1070AE0();
    v39(v32 + v35[7], v40, v34);
    sub_1C07BA950();
    v41 = sub_1C0AA4348();
    v42 = (uint64_t *)(v32 + v35[8]);
    *v42 = v41;
    v42[1] = v43;
    sub_1C0794BAC(&qword_1ED7625B0, (uint64_t (*)(uint64_t))type metadata accessor for Source, (uint64_t)&protocol conformance descriptor for Source);
    v44 = v54;
    sub_1C07A869C();
    sub_1C0845A08(v44, v32 + v35[9]);
    v45 = sub_1C0AA4348();
    v46 = (uint64_t *)(v32 + v35[10]);
    *v46 = v45;
    v46[1] = v47;
    sub_1C1070ABC();
    *(_QWORD *)(v32 + v35[11]) = v48;
    v69 = 8;
    sub_1C07FD324();
    sub_1C1070AE0();
    sub_1C0780528();
    *(_BYTE *)(v32 + v35[12]) = v70;
    sub_1C0AA4468(v32, v51);
    sub_1C07A99EC();
    sub_1C077B100(v32);
  }
  sub_1C07757D0();
}

void sub_1C0A98E74()
{
  TranslatedEntityTriple.init(from:)();
}

void sub_1C0A98E88()
{
  TranslatedEntityTriple.encode(to:)();
}

uint64_t sub_1C0A98EA0()
{
  return sub_1C0A9788C((uint64_t)type metadata accessor for TranslatedEntityTriple, &qword_1EF63A518);
}

void sub_1C0A98ECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C0A94C90(a1, a2, a3, (void (*)(_BYTE *))TranslatedEntityTriple.hash(into:));
}

uint64_t sub_1C0A98EE8()
{
  sub_1C0794BAC(&qword_1ED7560A8, type metadata accessor for TranslatedEntityTriple, (uint64_t)&protocol conformance descriptor for TranslatedEntityTriple);
  return sub_1C106BDDC();
}

uint64_t sub_1C0A98F68()
{
  sub_1C0794BAC(&qword_1ED759D18, type metadata accessor for TranslatedEntityTriple, (uint64_t)&protocol conformance descriptor for TranslatedEntityTriple);
  return sub_1C106BFD4();
}

uint64_t sub_1C0A98FD0()
{
  sub_1C0794BAC(&qword_1ED759D18, type metadata accessor for TranslatedEntityTriple, (uint64_t)&protocol conformance descriptor for TranslatedEntityTriple);
  return sub_1C106BFC8();
}

uint64_t sub_1C0A9902C()
{
  sub_1C0794BAC(&qword_1ED759D18, type metadata accessor for TranslatedEntityTriple, (uint64_t)&protocol conformance descriptor for TranslatedEntityTriple);
  return sub_1C106BFBC();
}

uint64_t sub_1C0A99088()
{
  sub_1C0794BAC(&qword_1ED75C330, type metadata accessor for TranslatedEntityTriple, (uint64_t)&protocol conformance descriptor for TranslatedEntityTriple);
  return sub_1C106BD58();
}

uint64_t sub_1C0A990E0()
{
  return 0x74616C736E617274;
}

uint64_t static EntityBlock.databaseTableName.getter()
{
  return 0x736B636F6C62;
}

uint64_t sub_1C0A99110(uint64_t a1)
{
  return sub_1C078F664(a1, qword_1ED78D0A8, (uint64_t)&type metadata for EntityBlock.CodingKeys, (void (*)(void))sub_1C0A9E0AC);
}

uint64_t sub_1C0A9912C(uint64_t a1)
{
  return sub_1C07ABA90(a1, qword_1EF6D1368, (uint64_t)&type metadata for EntityBlock.CodingKeys, (void (*)(void))sub_1C0A9E0AC);
}

uint64_t sub_1C0A99148(uint64_t a1)
{
  return sub_1C0780B80(a1, qword_1ED78D0C0, (uint64_t)&type metadata for EntityBlock.CodingKeys, (void (*)(void))sub_1C0A9E0AC);
}

uint64_t sub_1C0A99164(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v10;

  v2 = a1 == 0x676E696B636F6C62 && a2 == 0xEB0000000079654BLL;
  if (v2 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6C43797469746E65 && a2 == 0xEB00000000737361;
    if (v6 || (sub_1C1070CB4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6449797469746E65 && a2 == 0xE900000000000073;
      if (v7 || (sub_1C1070CB4() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070;
        if (v8 || (sub_1C1070CB4() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0x656E696C65706970 && a2 == 0xEC00000065707954)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v10 = sub_1C1070CB4();
          swift_bridgeObjectRelease();
          if ((v10 & 1) != 0)
            return 4;
          else
            return 5;
        }
      }
    }
  }
}

uint64_t sub_1C0A993CC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0A99408 + 4 * byte_1C109A022[a1]))(0x676E696B636F6C62, 0xEB0000000079654BLL);
}

uint64_t sub_1C0A99408()
{
  return 0x6C43797469746E65;
}

uint64_t sub_1C0A99428()
{
  return 0x6449797469746E65;
}

uint64_t sub_1C0A99448()
{
  return 0x6D617473656D6974;
}

uint64_t sub_1C0A99464()
{
  return 0x656E696C65706970;
}

uint64_t sub_1C0A99484()
{
  unsigned __int8 *v0;

  return sub_1C0A993CC(*v0);
}

uint64_t sub_1C0A9948C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0A99164(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0A994B0()
{
  sub_1C0A9E0AC();
  return sub_1C1070EE8();
}

uint64_t sub_1C0A994D8()
{
  sub_1C0A9E0AC();
  return sub_1C1070EF4();
}

void EntityBlock.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C0780538();
  sub_1C07ACF80(&qword_1EF63A098);
  sub_1C0778688();
  MEMORY[0x1E0C80A78](v2);
  sub_1C077B838();
  sub_1C0A9E0AC();
  sub_1C078D65C();
  sub_1C077C330();
  if (!v0)
  {
    type metadata accessor for EntityBlock(0);
    sub_1C07AEF24();
    sub_1C106D1F8();
    sub_1C0794BAC(&qword_1ED759F50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3BB08], MEMORY[0x1E0D3BB18]);
    sub_1C077F744();
    sub_1C0AA4498();
    sub_1C077C330();
    sub_1C07BA804();
    sub_1C07A1DCC();
    sub_1C0A9E020();
    sub_1C077F744();
  }
  sub_1C078C76C(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_1C0797DE0();
}

void EntityBlock.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int16 a10, char a11, char a12)
{
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  _QWORD *v38;

  sub_1C077AE5C();
  v38 = (_QWORD *)v12;
  v15 = v14;
  v33 = v16;
  v17 = sub_1C0776744();
  v34 = *(_QWORD *)(v17 - 8);
  v35 = v17;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v18);
  sub_1C077864C();
  v37 = sub_1C07ACF80(&qword_1ED75D238);
  MEMORY[0x1E0C80A78](v37);
  v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (int *)type metadata accessor for EntityBlock(0);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v22);
  v24 = (uint64_t *)((char *)&v33 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C07A9480(v15, v15[3]);
  sub_1C0A9E0AC();
  v36 = v20;
  v25 = (uint64_t)v38;
  sub_1C0AA44A4();
  if (v25)
  {
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v15);
  }
  else
  {
    v38 = v15;
    v27 = v34;
    v26 = v35;
    *v24 = sub_1C1070AA4();
    v24[1] = v28;
    sub_1C0794BAC(&qword_1ED759F60, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3BB08], MEMORY[0x1E0D3BB38]);
    sub_1C078114C();
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 32))((char *)v24 + v21[5], v13, v26);
    sub_1C0AA4498();
    v29 = sub_1C1070AA4();
    v30 = (uint64_t *)((char *)v24 + v21[6]);
    *v30 = v29;
    v30[1] = v31;
    sub_1C07BA804();
    sub_1C1070ABC();
    *(uint64_t *)((char *)v24 + v21[7]) = v32;
    sub_1C07FD324();
    sub_1C078114C();
    sub_1C07816E4();
    *((_BYTE *)v24 + v21[8]) = a12;
    sub_1C0AA4328((uint64_t)v24, v33);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v38);
    sub_1C07B1F90((uint64_t)v24, type metadata accessor for EntityBlock);
  }
  sub_1C07757D0();
}

void sub_1C0A99928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  int vars8;

  EntityBlock.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SBYTE2(vars8), SHIBYTE(vars8));
}

void sub_1C0A9993C()
{
  EntityBlock.encode(to:)();
}

uint64_t sub_1C0A99950()
{
  sub_1C0794BAC(&qword_1ED755FC0, type metadata accessor for EntityBlock, (uint64_t)&protocol conformance descriptor for EntityBlock);
  return sub_1C106BDDC();
}

uint64_t sub_1C0A999B8()
{
  sub_1C0794BAC(&qword_1EF63A218, type metadata accessor for EntityBlock, (uint64_t)&protocol conformance descriptor for EntityBlock);
  return sub_1C106BFD4();
}

uint64_t sub_1C0A99A20()
{
  sub_1C0794BAC(&qword_1EF63A218, type metadata accessor for EntityBlock, (uint64_t)&protocol conformance descriptor for EntityBlock);
  return sub_1C106BFC8();
}

uint64_t sub_1C0A99A7C()
{
  sub_1C0794BAC(&qword_1EF63A218, type metadata accessor for EntityBlock, (uint64_t)&protocol conformance descriptor for EntityBlock);
  return sub_1C106BFBC();
}

uint64_t sub_1C0A99AD8()
{
  sub_1C0794BAC(&qword_1EF63A510, type metadata accessor for EntityBlock, (uint64_t)&protocol conformance descriptor for EntityBlock);
  return sub_1C106BD58();
}

uint64_t sub_1C0A99B30()
{
  return 0x736B636F6C62;
}

uint64_t sub_1C0A99B44()
{
  sub_1C0AA3098();
  return sub_1C106FE98();
}

uint64_t sub_1C0A99BA0()
{
  sub_1C0AA3098();
  return sub_1C106FE5C();
}

unint64_t static ConstructionPhaseStatus.databaseTableName.getter()
{
  return sub_1C07A9FA8(25);
}

uint64_t sub_1C0A99C04(uint64_t a1)
{
  return sub_1C0798AE4(a1, qword_1ED78C438, (uint64_t)&type metadata for ConstructionPhaseStatus.CodingKeys, (void (*)(void))sub_1C0A9E0FC);
}

uint64_t sub_1C0A99C20()
{
  sub_1C0A9E0FC();
  return sub_1C1070EE8();
}

uint64_t sub_1C0A99C48()
{
  sub_1C0A9E0FC();
  return sub_1C1070EF4();
}

void ConstructionPhaseStatus.encode(to:)()
{
  sub_1C0A9A0A8();
}

void ConstructionPhaseStatus.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  _BYTE vars8[7];

  sub_1C0A9A1F4(a1, (uint64_t)&unk_1ED751338, (uint64_t)type metadata accessor for ConstructionPhaseStatus, (uint64_t)sub_1C0A9E0FC, (uint64_t)&type metadata for ConstructionPhaseStatus.CodingKeys, a6, a7, a8, vars0, *(int *)vars8, *(__int16 *)&vars8[4], vars8[6]);
}

void sub_1C0A99CD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  ConstructionPhaseStatus.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8);
}

void sub_1C0A99CEC()
{
  ConstructionPhaseStatus.encode(to:)();
}

uint64_t sub_1C0A99D00()
{
  sub_1C0794BAC(&qword_1ED750E98, type metadata accessor for ConstructionPhaseStatus, (uint64_t)&protocol conformance descriptor for ConstructionPhaseStatus);
  return sub_1C106BDDC();
}

uint64_t sub_1C0A99D68()
{
  sub_1C0794BAC(&qword_1ED750E80, type metadata accessor for ConstructionPhaseStatus, (uint64_t)&protocol conformance descriptor for ConstructionPhaseStatus);
  return sub_1C106BFD4();
}

uint64_t sub_1C0A99DD0()
{
  sub_1C0794BAC(&qword_1ED750E80, type metadata accessor for ConstructionPhaseStatus, (uint64_t)&protocol conformance descriptor for ConstructionPhaseStatus);
  return sub_1C106BFC8();
}

uint64_t sub_1C0A99E2C()
{
  sub_1C0794BAC(&qword_1ED750E80, type metadata accessor for ConstructionPhaseStatus, (uint64_t)&protocol conformance descriptor for ConstructionPhaseStatus);
  return sub_1C106BFBC();
}

uint64_t sub_1C0A99E88()
{
  sub_1C0794BAC(&qword_1ED750E90, type metadata accessor for ConstructionPhaseStatus, (uint64_t)&protocol conformance descriptor for ConstructionPhaseStatus);
  return sub_1C106BD58();
}

unint64_t sub_1C0A99EE0()
{
  static ConstructionPhaseStatus.databaseTableName.getter();
  return 0xD000000000000019;
}

uint64_t static PhaseStatus.databaseTableName.getter()
{
  return 0x74735F6573616870;
}

void sub_1C0A99F1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  BOOL v6;

  sub_1C0AA43F8();
  v5 = v3 == v4 && v2 == 0xE600000000000000;
  if (v5
    || (sub_1C0781E5C(), (sub_1C079373C() & 1) != 0)
    || (v1 == 0x737574617473 ? (v6 = v0 == 0xE600000000000000) : (v6 = 0), v6))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C079373C();
    sub_1C07767AC();
  }
  sub_1C077671C();
}

uint64_t sub_1C0A99FD0(char a1)
{
  if ((a1 & 1) != 0)
    return 0x737574617473;
  else
    return 0x656372756F73;
}

uint64_t sub_1C0A99FF8()
{
  char *v0;

  return sub_1C0A99FD0(*v0);
}

void sub_1C0A9A000(_BYTE *a1@<X8>)
{
  char v2;

  sub_1C0A99F1C();
  *a1 = v2;
}

uint64_t sub_1C0A9A024()
{
  sub_1C0A9E1C4();
  return sub_1C1070EE8();
}

uint64_t sub_1C0A9A04C()
{
  sub_1C0A9E1C4();
  return sub_1C1070EF4();
}

void PhaseStatus.encode(to:)()
{
  sub_1C0A9A0A8();
}

void sub_1C0A9A0A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);

  sub_1C077AE5C();
  v6 = v2;
  sub_1C0780784(v3, v4);
  sub_1C0779CC0();
  MEMORY[0x1E0C80A78](v5);
  sub_1C0AA41FC();
  sub_1C07B64C8();
  sub_1C1070EB8();
  sub_1C077674C();
  sub_1C0794BAC((unint64_t *)&qword_1ED75CC30, (uint64_t (*)(uint64_t))type metadata accessor for Source, (uint64_t)&protocol conformance descriptor for Source);
  sub_1C0781E68();
  sub_1C1070BB8();
  if (!v0)
  {
    v6(0);
    sub_1C0A9E14C();
    sub_1C1070BB8();
  }
  sub_1C078C76C(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_1C07757D0();
}

void PhaseStatus.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  _BYTE vars8[7];

  sub_1C0A9A1F4(a1, (uint64_t)&unk_1EF63A0B0, (uint64_t)type metadata accessor for PhaseStatus, (uint64_t)sub_1C0A9E1C4, (uint64_t)&type metadata for PhaseStatus.CodingKeys, a6, a7, a8, vars0, *(int *)vars8, *(__int16 *)&vars8[4], vars8[6]);
}

void sub_1C0A9A1F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12)
{
  uint64_t v12;
  void (*v13)(void);
  uint64_t (*v14)(_QWORD);
  uint64_t (*v15)(_QWORD);
  uint64_t *v16;
  uint64_t *v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(_QWORD);
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(_QWORD);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(void);
  uint64_t v37;

  sub_1C077AE5C();
  v36 = v13;
  v37 = v12;
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v31 = v20;
  v33 = sub_1C077674C();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v21);
  sub_1C078A2B4(v22, v30);
  v35 = sub_1C07ACF80(v17);
  MEMORY[0x1E0C80A78](v35);
  sub_1C077864C();
  v32 = v15;
  v23 = v15(0);
  sub_1C078B9A4();
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v30 - v25;
  sub_1C07A9480(v19, v19[3]);
  v36();
  v27 = v37;
  sub_1C1070E94();
  if (v27)
  {
    sub_1C079D4D4();
  }
  else
  {
    sub_1C0794BAC(&qword_1ED7625B0, (uint64_t (*)(uint64_t))type metadata accessor for Source, (uint64_t)&protocol conformance descriptor for Source);
    sub_1C0781E68();
    v28 = v34;
    sub_1C0AA42DC();
    sub_1C0845A08(v28, (uint64_t)v26);
    sub_1C0A9E188();
    sub_1C0AA42DC();
    sub_1C078F384();
    v26[*(int *)(v23 + 20)] = a12;
    v29 = v32;
    sub_1C0AA4328((uint64_t)v26, v31);
    sub_1C079D4D4();
    sub_1C07B1F90((uint64_t)v26, v29);
  }
  sub_1C07757D0();
}

void sub_1C0A9A3B0()
{
  sub_1C1070A2C();
  sub_1C07767AC();
  sub_1C0778534();
}

uint64_t sub_1C0A9A3F0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0A9A420 + 4 * byte_1C109A027[a1]))(0x656372756F73, 0xE600000000000000);
}

uint64_t sub_1C0A9A420()
{
  return 0x6C43797469746E65;
}

uint64_t sub_1C0A9A440()
{
  return 0x6574656C706D6F63;
}

uint64_t sub_1C0A9A458()
{
  return 0x6D614E6567617473;
}

uint64_t sub_1C0A9A474()
{
  return 0x6E656B6F74;
}

void sub_1C0A9A488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  PhaseStatus.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8);
}

void sub_1C0A9A49C()
{
  PhaseStatus.encode(to:)();
}

uint64_t sub_1C0A9A4B0()
{
  sub_1C0794BAC(&qword_1EF63A508, type metadata accessor for PhaseStatus, (uint64_t)&protocol conformance descriptor for PhaseStatus);
  return sub_1C106BDDC();
}

uint64_t sub_1C0A9A518()
{
  sub_1C0794BAC(&qword_1EF63A238, type metadata accessor for PhaseStatus, (uint64_t)&protocol conformance descriptor for PhaseStatus);
  return sub_1C106BFD4();
}

uint64_t sub_1C0A9A580()
{
  sub_1C0794BAC(&qword_1EF63A238, type metadata accessor for PhaseStatus, (uint64_t)&protocol conformance descriptor for PhaseStatus);
  return sub_1C106BFC8();
}

uint64_t sub_1C0A9A5DC()
{
  sub_1C0794BAC(&qword_1EF63A238, type metadata accessor for PhaseStatus, (uint64_t)&protocol conformance descriptor for PhaseStatus);
  return sub_1C106BFBC();
}

uint64_t sub_1C0A9A638()
{
  sub_1C0794BAC(&qword_1EF63A500, type metadata accessor for PhaseStatus, (uint64_t)&protocol conformance descriptor for PhaseStatus);
  return sub_1C106BD58();
}

uint64_t sub_1C0A9A690()
{
  return 0x74735F6573616870;
}

void sub_1C0A9A6B0()
{
  sub_1C08C65FC();
}

void sub_1C0A9A6BC()
{
  unsigned __int8 *v0;

  sub_1C0A53ECC(*v0);
}

void sub_1C0A9A6C4()
{
  sub_1C08C9CA4();
}

void sub_1C0A9A6CC(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1C0A54824(a1, *v1);
}

void sub_1C0A9A6D4(_BYTE *a1@<X8>)
{
  char v2;

  sub_1C0A9A3B0();
  *a1 = v2;
}

void sub_1C0A9A700(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t v3;

  *a1 = sub_1C0A9A3F0(*v1);
  a1[1] = v3;
  sub_1C0778534();
}

uint64_t sub_1C0A9A724()
{
  sub_1C0AA40C0();
  return sub_1C106BEE4();
}

uint64_t sub_1C0A9A75C()
{
  sub_1C0AA4174();
  return sub_1C106BECC();
}

uint64_t sub_1C0A9A794()
{
  sub_1C0AA3FC4();
  return sub_1C106C16C();
}

uint64_t sub_1C0A9A7CC()
{
  sub_1C0AA3FC4();
  return sub_1C106C160();
}

uint64_t static ProgressTokens.databaseTableName.getter()
{
  return 0x73736572676F7270;
}

uint64_t sub_1C0A9A828()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for ProgressTokens(0) + 32));
}

uint64_t sub_1C0A9A848()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ProgressTokens(0) + 36));
}

uint64_t sub_1C0A9A868(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0A9A8A4 + 4 * byte_1C109A02C[a1]))(0x6C43797469746E65, 0xEB00000000737361);
}

uint64_t sub_1C0A9A8A4()
{
  return 0x6D614E6567617473;
}

uint64_t sub_1C0A9A8C0()
{
  return 0x656372756F73;
}

uint64_t sub_1C0A9A8D4()
{
  return 0x6E656B6F74;
}

uint64_t sub_1C0A9A8E8()
{
  return 0x747441664F6D756ELL;
}

uint64_t sub_1C0A9A90C()
{
  return 0x6574656C706D6F63;
}

uint64_t sub_1C0A9A924()
{
  unsigned __int8 *v0;

  return sub_1C0A9A868(*v0);
}

void sub_1C0A9A92C(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_1C0A9ACBC(a1, a2);
  *a3 = v4;
}

uint64_t sub_1C0A9A950()
{
  sub_1C0A9E214();
  return sub_1C1070EE8();
}

uint64_t sub_1C0A9A978()
{
  sub_1C0A9E214();
  return sub_1C1070EF4();
}

void ProgressTokens.encode(to:)()
{
  sub_1C0A9AF84();
}

void ProgressTokens.init(from:)()
{
  sub_1C0A9B198();
}

void sub_1C0A9AA10()
{
  ProgressTokens.init(from:)();
}

void sub_1C0A9AA24()
{
  ProgressTokens.encode(to:)();
}

uint64_t sub_1C0A9AA38()
{
  sub_1C0794BAC(qword_1ED7415C8, type metadata accessor for ProgressTokens, (uint64_t)&protocol conformance descriptor for ProgressTokens);
  return sub_1C106BDDC();
}

uint64_t sub_1C0A9AAA0()
{
  sub_1C0794BAC(&qword_1ED749A50, type metadata accessor for ProgressTokens, (uint64_t)&protocol conformance descriptor for ProgressTokens);
  return sub_1C106BFD4();
}

uint64_t sub_1C0A9AB08()
{
  sub_1C0794BAC(&qword_1ED749A50, type metadata accessor for ProgressTokens, (uint64_t)&protocol conformance descriptor for ProgressTokens);
  return sub_1C106BFC8();
}

uint64_t sub_1C0A9AB64()
{
  sub_1C0794BAC(&qword_1ED749A50, type metadata accessor for ProgressTokens, (uint64_t)&protocol conformance descriptor for ProgressTokens);
  return sub_1C106BFBC();
}

uint64_t sub_1C0A9ABC0()
{
  sub_1C0794BAC(qword_1ED749A60, type metadata accessor for ProgressTokens, (uint64_t)&protocol conformance descriptor for ProgressTokens);
  return sub_1C106BD58();
}

uint64_t sub_1C0A9AC18()
{
  return 0x73736572676F7270;
}

unint64_t static ConstructionProgressTokens.databaseTableName.getter()
{
  return sub_1C07A9FA8(28);
}

void sub_1C0A9AC54(uint64_t a1)
{
  sub_1C0A9CD24(a1, qword_1ED751020);
}

uint64_t static ConstructionProgressTokens.persistenceConflictPolicy.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0A946EC(&qword_1ED741EE8, (uint64_t)qword_1ED751020, a1);
}

uint64_t sub_1C0A9AC7C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for ConstructionProgressTokens(0) + 32));
}

uint64_t sub_1C0A9AC9C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ConstructionProgressTokens(0) + 36));
}

void sub_1C0A9ACBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  BOOL v5;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;

  v4 = a1 == 0x6C43797469746E65 && a2 == 0xEB00000000737361;
  if (v4
    || (sub_1C0781E5C(), (sub_1C079373C() & 1) != 0)
    || (v3 == 0x6D614E6567617473 ? (v5 = v2 == 0xE900000000000065) : (v5 = 0),
        v5
     || (sub_1C079373C() & 1) != 0
     || ((sub_1C0AA4520(), v4) ? (v6 = v2 == 0xE600000000000000) : (v6 = 0),
         v6
      || (sub_1C079373C() & 1) != 0
      || (v3 == 0x6E656B6F74 ? (v7 = v2 == 0xE500000000000000) : (v7 = 0),
          v7
       || (sub_1C079373C() & 1) != 0
       || (v3 == 0x747441664F6D756ELL ? (v8 = v2 == 0xED00007374706D65) : (v8 = 0),
           v8
        || (sub_1C079373C() & 1) != 0
        || (v3 == 0x6574656C706D6F63 ? (v9 = v2 == 0xE800000000000000) : (v9 = 0), v9))))))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C079373C();
    sub_1C07767AC();
  }
  sub_1C0778534();
}

uint64_t sub_1C0A9AF00()
{
  sub_1C0A9E2DC();
  return sub_1C1070EE8();
}

uint64_t sub_1C0A9AF28()
{
  sub_1C0A9E2DC();
  return sub_1C1070EF4();
}

void ConstructionProgressTokens.encode(to:)()
{
  sub_1C0A9AF84();
}

void sub_1C0A9AF84()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(_QWORD *, uint64_t);
  void (*v4)(_QWORD *, uint64_t);
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);

  sub_1C077AE5C();
  v4 = v3;
  sub_1C0780784(v5, v6);
  sub_1C077E58C();
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1C07A9480(v0, v0[3]);
  v4(v8, v9);
  sub_1C07B64C8();
  sub_1C1070EB8();
  sub_1C0776744();
  sub_1C0794BAC(&qword_1ED759F50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3BB08], MEMORY[0x1E0D3BB18]);
  sub_1C0AA44AC();
  sub_1C07AB59C();
  if (v1)
  {
    v10 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8);
  }
  else
  {
    sub_1C0AA4550();
    sub_1C0A9E264();
    sub_1C077D19C();
    sub_1C077674C();
    sub_1C0794BAC((unint64_t *)&qword_1ED75CC30, (uint64_t (*)(uint64_t))type metadata accessor for Source, (uint64_t)&protocol conformance descriptor for Source);
    sub_1C0AA44B8();
    sub_1C077D19C();
    sub_1C08C131C();
    sub_1C0AA4368();
    sub_1C1070B64();
    sub_1C0AA4368();
    sub_1C1070BAC();
    sub_1C0AA4368();
    sub_1C1070B88();
    v10 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8);
  }
  sub_1C078C76C(v10);
  sub_1C07757D0();
}

void ConstructionProgressTokens.init(from:)()
{
  sub_1C0A9B198();
}

void sub_1C0A9B198()
{
  uint64_t v0;
  void (*v1)(void);
  uint64_t (*v2)(uint64_t);
  uint64_t (*v3)(uint64_t);
  uint64_t *v4;
  uint64_t *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  _QWORD *v33;
  void (*v34)(void);
  uint64_t v35;
  __int128 v36;

  sub_1C077AE5C();
  v34 = v1;
  v35 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v26 = v8;
  v27 = sub_1C077674C();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1C0776744();
  v32 = *(_QWORD *)(v12 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v13);
  sub_1C077AE40();
  v28 = v14;
  v29 = sub_1C07ACF80(v5);
  sub_1C0778688();
  MEMORY[0x1E0C80A78](v15);
  v16 = sub_1C077F1C8();
  v25[1] = v3;
  v30 = v3(v16);
  sub_1C078B9A4();
  MEMORY[0x1E0C80A78](v17);
  v31 = (char *)v25 - v18;
  v19 = v7[3];
  v33 = v7;
  sub_1C07A9480(v7, v19);
  v34();
  v20 = v35;
  sub_1C0AA44A4();
  if (v20)
  {
    sub_1C0AA44D8();
  }
  else
  {
    v21 = (uint64_t)v11;
    LOBYTE(v36) = 0;
    sub_1C0794BAC(&qword_1ED759F60, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3BB08], MEMORY[0x1E0D3BB38]);
    sub_1C0AA44AC();
    v22 = v28;
    sub_1C078077C();
    v23 = (uint64_t)v31;
    (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v31, v22, v12);
    sub_1C0A9E2A0();
    sub_1C078077C();
    v24 = (int *)v30;
    *(_BYTE *)(v23 + *(int *)(v30 + 20)) = v36;
    LOBYTE(v36) = 2;
    sub_1C0794BAC(&qword_1ED7625B0, (uint64_t (*)(uint64_t))type metadata accessor for Source, (uint64_t)&protocol conformance descriptor for Source);
    sub_1C0AA44AC();
    sub_1C078077C();
    sub_1C0845A08(v21, v23 + v24[6]);
    sub_1C07FD0D8();
    sub_1C1070A8C();
    *(_OWORD *)(v23 + v24[7]) = v36;
    sub_1C07BFCC8(4);
    *(_QWORD *)(v23 + v24[8]) = sub_1C1070AD4();
    sub_1C07BFCC8(5);
    LOBYTE(v22) = sub_1C1070AB0();
    sub_1C07BBF38();
    *(_BYTE *)(v23 + v24[9]) = v22 & 1;
    sub_1C0AA4328(v23, v26);
    sub_1C0AA44D8();
    sub_1C07B6C30();
  }
  sub_1C07757D0();
}

void sub_1C0A9B50C()
{
  ConstructionProgressTokens.init(from:)();
}

void sub_1C0A9B520()
{
  ConstructionProgressTokens.encode(to:)();
}

uint64_t sub_1C0A9B534()
{
  sub_1C0794BAC(&qword_1ED751060, type metadata accessor for ConstructionProgressTokens, (uint64_t)&protocol conformance descriptor for ConstructionProgressTokens);
  return sub_1C106BDDC();
}

uint64_t sub_1C0A9B5A0()
{
  sub_1C0794BAC(&qword_1ED751048, type metadata accessor for ConstructionProgressTokens, (uint64_t)&protocol conformance descriptor for ConstructionProgressTokens);
  return sub_1C106BFD4();
}

uint64_t sub_1C0A9B608()
{
  sub_1C0794BAC(&qword_1ED751048, type metadata accessor for ConstructionProgressTokens, (uint64_t)&protocol conformance descriptor for ConstructionProgressTokens);
  return sub_1C106BFC8();
}

uint64_t sub_1C0A9B664()
{
  sub_1C0794BAC(&qword_1ED751048, type metadata accessor for ConstructionProgressTokens, (uint64_t)&protocol conformance descriptor for ConstructionProgressTokens);
  return sub_1C106BFBC();
}

uint64_t sub_1C0A9B6C0()
{
  sub_1C0794BAC(&qword_1ED751058, type metadata accessor for ConstructionProgressTokens, (uint64_t)&protocol conformance descriptor for ConstructionProgressTokens);
  return sub_1C106BD58();
}

unint64_t sub_1C0A9B718()
{
  static ConstructionProgressTokens.databaseTableName.getter();
  return 0xD00000000000001CLL;
}

void sub_1C0A9B734()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1C078784C();
  sub_1C0800A9C(v0, qword_1ED78D3D0);
  v1 = sub_1C077CEF4();
  sub_1C079E000(v1, v2);
  sub_1C106E56C();
  sub_1C0778534();
}

void sub_1C0A9B770(uint64_t a1)
{
  sub_1C0A9CD24(a1, qword_1ED78D040);
}

uint64_t sub_1C0A9B77C()
{
  uint64_t v0;

  if (qword_1ED759FF8 != -1)
    swift_once();
  v0 = sub_1C0AA4548();
  return sub_1C079E000(v0, (uint64_t)qword_1ED78D040);
}

uint64_t sub_1C0A9B7C0(uint64_t a1)
{
  return sub_1C0798AE4(a1, qword_1ED78D3B8, (uint64_t)&type metadata for EntityPair.CodingKeys, (void (*)(void))sub_1C0AA3110);
}

uint64_t sub_1C0A9B7DC(uint64_t a1)
{
  return sub_1C07ABA90(a1, &qword_1ED78D590, (uint64_t)&type metadata for EntityPair.CodingKeys, (void (*)(void))sub_1C0AA3110);
}

uint64_t sub_1C0A9B7F8(uint64_t a1)
{
  return sub_1C0780B80(a1, qword_1EF6D1380, (uint64_t)&type metadata for EntityPair.CodingKeys, (void (*)(void))sub_1C0AA3110);
}

uint64_t sub_1C0A9B814(uint64_t a1)
{
  return sub_1C07BB2A0(a1, qword_1ED78D090, (uint64_t)&type metadata for EntityPair.CodingKeys, (void (*)(void))sub_1C0AA3110);
}

uint64_t sub_1C0A9B830(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  char v11;

  v2 = a1 == 0x6C43797469746E65 && a2 == 0xEB00000000737361;
  if (v2 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6449656372756F73 && a2 == 0xE800000000000000;
    if (v6 || (sub_1C1070CB4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6449746567726174 && a2 == 0xE800000000000000;
      if (v7 || (sub_1C1070CB4() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x7349746567726174 && a2 == 0xEF64496870617247;
        if (v8 || (sub_1C1070CB4() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070;
          if (v9 || (sub_1C1070CB4() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0x656E696C65706970 && a2 == 0xEC00000065707954)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            v11 = sub_1C1070CB4();
            swift_bridgeObjectRelease();
            if ((v11 & 1) != 0)
              return 5;
            else
              return 6;
          }
        }
      }
    }
  }
}

uint64_t sub_1C0A9BB04(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0A9BB40 + 4 * byte_1C109A032[a1]))(0x6C43797469746E65, 0xEB00000000737361);
}

uint64_t sub_1C0A9BB40()
{
  return 0x6449656372756F73;
}

uint64_t sub_1C0A9BB6C()
{
  return 0x7349746567726174;
}

uint64_t sub_1C0A9BB90()
{
  return 0x6D617473656D6974;
}

uint64_t sub_1C0A9BBAC()
{
  return 0x656E696C65706970;
}

void sub_1C0A9BBCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C077AE5C();
  sub_1C0780538();
  sub_1C07ACF80(&qword_1ED75D2A0);
  sub_1C077591C();
  MEMORY[0x1E0C80A78](v2);
  sub_1C077B838();
  sub_1C0AA3110();
  sub_1C078D65C();
  sub_1C0776744();
  sub_1C0794BAC(&qword_1ED759F50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3BB08], MEMORY[0x1E0D3BB18]);
  sub_1C0781E68();
  sub_1C077F744();
  if (!v0)
  {
    type metadata accessor for EntityPair(0);
    sub_1C07AEF24();
    sub_1C106E590();
    sub_1C0794BAC(&qword_1ED759FB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE38]);
    sub_1C078F64C();
    sub_1C078F64C();
    sub_1C0AA447C();
    sub_1C1070B88();
    sub_1C07BA950();
    sub_1C07A1DCC();
    sub_1C0A9E020();
    sub_1C077F744();
  }
  sub_1C078C76C(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_1C077EEFC();
  sub_1C07757D0();
}

void sub_1C0A9BD60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int16 a10, char a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;

  sub_1C077AE5C();
  v49 = v11;
  v15 = v14;
  v39 = v16;
  v46 = sub_1C078784C();
  v41 = *(_QWORD *)(v46 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v17);
  sub_1C077AF80();
  v20 = (char *)(v18 - v19);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v38 - v22;
  v24 = sub_1C0776744();
  v45 = *(_QWORD *)(v24 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v25);
  sub_1C07785B8();
  v42 = sub_1C07ACF80(&qword_1ED75D230);
  sub_1C077E58C();
  MEMORY[0x1E0C80A78](v26);
  v27 = sub_1C0782B30();
  v40 = type metadata accessor for EntityPair(v27);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v28);
  sub_1C077AE40();
  v44 = v29;
  v30 = v15[3];
  v48 = v15;
  sub_1C07A9480(v15, v30);
  sub_1C0AA3110();
  v47 = v13;
  v31 = v49;
  sub_1C1070E94();
  v43 = v24;
  if (v31)
  {
    sub_1C079D550();
  }
  else
  {
    v49 = v12;
    sub_1C0794BAC(&qword_1ED759F60, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3BB08], MEMORY[0x1E0D3BB38]);
    sub_1C078077C();
    v32 = v44;
    (*(void (**)(void))(v45 + 32))();
    sub_1C0794BAC((unint64_t *)&unk_1ED761900, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE58]);
    v33 = v23;
    v34 = v46;
    sub_1C0AA4500();
    sub_1C078077C();
    v35 = (int *)v40;
    v36 = v32 + *(int *)(v40 + 20);
    v38 = *(void (**)(uint64_t, char *, uint64_t))(v41 + 32);
    v38(v36, v33, v34);
    sub_1C0AA4500();
    sub_1C078077C();
    v38(v32 + v35[6], v20, v34);
    sub_1C07BA804();
    *(_BYTE *)(v32 + v35[7]) = sub_1C1070AB0() & 1;
    sub_1C07BA950();
    sub_1C1070ABC();
    *(_QWORD *)(v32 + v35[8]) = v37;
    sub_1C07FD324();
    sub_1C078077C();
    sub_1C0AA4430(v49);
    *(_BYTE *)(v32 + v35[9]) = a11;
    sub_1C0AA4468(v32, v39);
    sub_1C079D550();
    sub_1C077B100(v32);
  }
  sub_1C07757D0();
}

uint64_t sub_1C0A9C120()
{
  unsigned __int8 *v0;

  return sub_1C0A9BB04(*v0);
}

uint64_t sub_1C0A9C128@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0A9B830(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0A9C14C()
{
  sub_1C0AA3110();
  return sub_1C1070EE8();
}

uint64_t sub_1C0A9C174()
{
  sub_1C0AA3110();
  return sub_1C1070EF4();
}

void sub_1C0A9C19C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  _BYTE vars8[3];

  sub_1C0A9BD60(a1, a2, a3, a4, a5, a6, a7, a8, vars0, *(__int16 *)vars8, vars8[2]);
}

void sub_1C0A9C1B0()
{
  sub_1C0A9BBCC();
}

uint64_t sub_1C0A9C1C4()
{
  sub_1C0794BAC(&qword_1ED75A040, type metadata accessor for EntityPair, (uint64_t)&unk_1C109E58C);
  return sub_1C106BDDC();
}

uint64_t sub_1C0A9C22C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1C0A9B77C();
  v3 = sub_1C106C2EC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v2, v3);
}

uint64_t sub_1C0A9C26C()
{
  sub_1C0794BAC(&qword_1ED759C60, type metadata accessor for EntityPair, (uint64_t)&unk_1C109EA9C);
  return sub_1C106BFD4();
}

uint64_t sub_1C0A9C2D4()
{
  sub_1C0794BAC(&qword_1ED759C60, type metadata accessor for EntityPair, (uint64_t)&unk_1C109EA9C);
  return sub_1C106BFC8();
}

uint64_t sub_1C0A9C330()
{
  sub_1C0794BAC(&qword_1ED759C60, type metadata accessor for EntityPair, (uint64_t)&unk_1C109EA9C);
  return sub_1C106BFBC();
}

uint64_t sub_1C0A9C38C()
{
  sub_1C0794BAC(&qword_1ED75A038, type metadata accessor for EntityPair, (uint64_t)&unk_1C109E564);
  return sub_1C106BD58();
}

uint64_t sub_1C0A9C3E4()
{
  return 0x7372696170;
}

uint64_t sub_1C0A9C3F8(uint64_t a1)
{
  return sub_1C0798AE4(a1, qword_1EF6D1398, (uint64_t)&type metadata for EntityEmbedding.CodingKeys, (void (*)(void))sub_1C0AA30D4);
}

uint64_t sub_1C0A9C414(uint64_t a1)
{
  return sub_1C078F664(a1, qword_1EF6D13B0, (uint64_t)&type metadata for EntityEmbedding.CodingKeys, (void (*)(void))sub_1C0AA30D4);
}

uint64_t sub_1C0A9C430()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  sub_1C077584C();
  sub_1C077E764();
  sub_1C0778580();
  sub_1C077584C();
  sub_1C077E764();
  sub_1C0778580();
  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(_QWORD *)(v0 + 40);
  sub_1C07B0E28(v2, v1);
  sub_1C106AC24();
  return sub_1C07B3374(v2, v1);
}

void sub_1C0A9C49C()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  BOOL v3;
  BOOL v4;

  sub_1C0781E5C();
  v3 = *v2 == *v0 && v1[1] == v0[1];
  if (v3 || (sub_1C07785B0() & 1) != 0)
  {
    v4 = v1[2] == v0[2] && v1[3] == v0[3];
    if (v4 || (sub_1C07785B0() & 1) != 0)
      JUMPOUT(0x1C3BA152CLL);
  }
  sub_1C0778534();
}

uint64_t sub_1C0A9C508(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x6E69646465626D65 && a2 == 0xED00006570795467;
  if (v2 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 7955819 && a2 == 0xE300000000000000;
    if (v6 || (sub_1C1070CB4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6E69646465626D65 && a2 == 0xE900000000000067)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1C1070CB4();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1C0A9C66C(char a1)
{
  uint64_t result;

  result = 0x6E69646465626D65;
  if (a1 == 1)
    return 7955819;
  return result;
}

void sub_1C0A9C6C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C07ACF80(&qword_1EF63A600);
  sub_1C0778688();
  MEMORY[0x1E0C80A78](v2);
  sub_1C077B838();
  sub_1C0AA30D4();
  sub_1C078D65C();
  sub_1C0799CA0();
  if (!v0)
  {
    sub_1C0799CA0();
    sub_1C08C131C();
    sub_1C077D19C();
  }
  sub_1C078C76C(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_1C0797DE0();
}

uint64_t sub_1C0A9C7AC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;

  sub_1C077C06C();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C07A0D24();
  sub_1C0775844();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C07A0D24();
  sub_1C0775844();
  v0 = sub_1C077CEF4();
  sub_1C07B0E28(v0, v1);
  sub_1C106AC24();
  v2 = sub_1C077CEF4();
  sub_1C07B3374(v2, v3);
  return sub_1C077AE74();
}

void sub_1C0A9C828()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  sub_1C077AE5C();
  v2 = v1;
  v4 = v3;
  sub_1C07ACF80(&qword_1EF63A5F8);
  sub_1C077591C();
  MEMORY[0x1E0C80A78](v5);
  sub_1C077864C();
  sub_1C07A9480(v2, v2[3]);
  sub_1C0AA30D4();
  sub_1C1070E94();
  if (v0)
  {
    sub_1C0775880();
  }
  else
  {
    v6 = sub_1C077E434();
    v8 = v7;
    v14 = v6;
    LOBYTE(v15) = 1;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v9 = sub_1C077E434();
    v11 = v10;
    v13 = v9;
    v12 = sub_1C07FD0D8();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C078077C();
    sub_1C077C2F4();
    if (v12)
    {
      sub_1C0775834();
      swift_bridgeObjectRelease();
      sub_1C0775880();
      sub_1C0775834();
      swift_bridgeObjectRelease();
    }
    else
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C07767C4();
      sub_1C07B0E28(v15, v16);
      sub_1C0775834();
      swift_bridgeObjectRelease();
      sub_1C0775880();
      swift_bridgeObjectRelease();
      sub_1C0775834();
      sub_1C07B3374(v15, v16);
      *v4 = v14;
      v4[1] = v8;
      v4[2] = v13;
      v4[3] = v11;
      v4[4] = v15;
      v4[5] = v16;
    }
  }
  sub_1C077EEFC();
  sub_1C07757D0();
}

uint64_t sub_1C0A9C9EC()
{
  char *v0;

  return sub_1C0A9C66C(*v0);
}

uint64_t sub_1C0A9C9F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0A9C508(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0A9CA18()
{
  sub_1C0AA30D4();
  return sub_1C1070EE8();
}

uint64_t sub_1C0A9CA40()
{
  sub_1C0AA30D4();
  return sub_1C1070EF4();
}

double sub_1C0A9CA68@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  double result;
  __int128 v4;
  __int128 v5;
  __int128 v6;

  sub_1C0A9C828();
  if (!v1)
  {
    *a1 = v4;
    a1[1] = v5;
    result = *(double *)&v6;
    a1[2] = v6;
  }
  return result;
}

void sub_1C0A9CAA8()
{
  sub_1C0A9C6C0();
}

uint64_t sub_1C0A9CAC4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(_QWORD *)(v0 + 40);
  sub_1C1070DF8();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC28();
  swift_bridgeObjectRelease();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC28();
  swift_bridgeObjectRelease();
  sub_1C07B0E28(v2, v1);
  sub_1C106AC24();
  sub_1C07B3374(v2, v1);
  return sub_1C1070E4C();
}

uint64_t sub_1C0A9CB78()
{
  sub_1C0AA40FC();
  return sub_1C106BDDC();
}

uint64_t sub_1C0A9CBCC()
{
  sub_1C07D8E94();
  return sub_1C106BFD4();
}

uint64_t sub_1C0A9CC1C()
{
  sub_1C07D8E94();
  return sub_1C106BFC8();
}

uint64_t sub_1C0A9CC60()
{
  sub_1C07D8E94();
  return sub_1C106BFBC();
}

uint64_t sub_1C0A9CCA4()
{
  sub_1C0AA4138();
  return sub_1C106BD58();
}

uint64_t sub_1C0A9CCE4()
{
  return 0x6E69646465626D65;
}

uint64_t static EntityMatch.databaseTableName.getter()
{
  return 0x7365686374616DLL;
}

void sub_1C0A9CD18(uint64_t a1)
{
  sub_1C0A9CD24(a1, qword_1ED759C70);
}

void sub_1C0A9CD24(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  sub_1C106C604();
  sub_1C0779CC0();
  MEMORY[0x1E0C80A78](v3);
  sub_1C077AF80();
  v6 = v4 - v5;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v11 - v8;
  v10 = sub_1C0AA4548();
  sub_1C0800A9C(v10, a2);
  sub_1C079E000(v10, (uint64_t)a2);
  sub_1C07A95C8((uint64_t)v9);
  sub_1C07A95C8(v6);
  sub_1C106C2E0();
  sub_1C07785E4();
}

uint64_t static EntityMatch.persistenceConflictPolicy.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0A946EC(&qword_1ED75A2A0, (uint64_t)qword_1ED759C70, a1);
}

uint64_t sub_1C0A9CDF8(uint64_t a1)
{
  return sub_1C0798AE4(a1, qword_1ED78D5B0, (uint64_t)&type metadata for EntityMatch.CodingKeys, (void (*)(void))sub_1C0A9E340);
}

uint64_t sub_1C0A9CE14(uint64_t a1)
{
  return sub_1C078F664(a1, qword_1ED78D058, (uint64_t)&type metadata for EntityMatch.CodingKeys, (void (*)(void))sub_1C0A9E340);
}

uint64_t sub_1C0A9CE30(uint64_t a1)
{
  return sub_1C0780B80(a1, qword_1EF6D13C8, (uint64_t)&type metadata for EntityMatch.CodingKeys, (void (*)(void))sub_1C0A9E340);
}

uint64_t sub_1C0A9CE4C(uint64_t a1)
{
  return sub_1C07BB2A0(a1, qword_1ED78D0D8, (uint64_t)&type metadata for EntityMatch.CodingKeys, (void (*)(void))sub_1C0A9E340);
}

uint64_t sub_1C0A9CE68(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v6;

  v6 = sub_1C106C49C();
  sub_1C0800A9C(v6, a2);
  sub_1C079E000(v6, (uint64_t)a2);
  a4();
  return sub_1C106C4B4();
}

void static EntityMatch.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1C0781E5C();
  if ((sub_1C08C72A0(v2, v3) & 1) != 0)
  {
    v4 = (int *)type metadata accessor for EntityMatch(0);
    if ((sub_1C0AA4450() & 1) != 0 && (sub_1C0AA4450() & 1) != 0 && *(float *)(v1 + v4[7]) == *(float *)(v0 + v4[7]))
    {
      sub_1C077EBE8(v4[8]);
      if (v5)
      {
        sub_1C08C428C();
        if ((v6 & 1) != 0)
        {
          v7 = v4[10];
          v8 = *(_QWORD *)(v0 + v7);
          if (*(_QWORD *)(v1 + v7))
          {
            if (v8)
            {
              _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
              v9 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
              sub_1C0A0EDAC(v9, v8);
              swift_bridgeObjectRelease();
              sub_1C07767AC();
            }
          }
        }
      }
    }
  }
  sub_1C077671C();
}

uint64_t sub_1C0A9CFB4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  char v12;

  v2 = a1 == 0x6C43797469746E65 && a2 == 0xEB00000000737361;
  if (v2 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6449656372756F73 && a2 == 0xE800000000000000;
    if (v6 || (sub_1C1070CB4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6449746567726174 && a2 == 0xE800000000000000;
      if (v7 || (sub_1C1070CB4() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x6E656469666E6F63 && a2 == 0xEA00000000006563;
        if (v8 || (sub_1C1070CB4() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070;
          if (v9 || (sub_1C1070CB4() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x656E696C65706970 && a2 == 0xEC00000065707954;
            if (v10 || (sub_1C1070CB4() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              v12 = sub_1C1070CB4();
              swift_bridgeObjectRelease();
              if ((v12 & 1) != 0)
                return 6;
              else
                return 7;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1C0A9D2D0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0A9D30C + 4 * byte_1C109A038[a1]))(0x6C43797469746E65, 0xEB00000000737361);
}

uint64_t sub_1C0A9D30C()
{
  return 0x6449656372756F73;
}

uint64_t sub_1C0A9D338()
{
  return 0x6E656469666E6F63;
}

uint64_t sub_1C0A9D354()
{
  return 0x6D617473656D6974;
}

uint64_t sub_1C0A9D370()
{
  return 0x656E696C65706970;
}

uint64_t sub_1C0A9D390()
{
  return 0x617461646174656DLL;
}

uint64_t sub_1C0A9D3A8()
{
  unsigned __int8 *v0;

  return sub_1C0A9D2D0(*v0);
}

uint64_t sub_1C0A9D3B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0A9CFB4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0A9D3D4()
{
  sub_1C0A9E340();
  return sub_1C1070EE8();
}

uint64_t sub_1C0A9D3FC()
{
  sub_1C0A9E340();
  return sub_1C1070EF4();
}

void EntityMatch.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C077AE5C();
  sub_1C0780538();
  sub_1C07ACF80(&qword_1ED75D2A8);
  sub_1C077591C();
  MEMORY[0x1E0C80A78](v2);
  sub_1C077B838();
  sub_1C0A9E340();
  sub_1C078D65C();
  sub_1C0776744();
  sub_1C0794BAC(&qword_1ED759F50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3BB08], MEMORY[0x1E0D3BB18]);
  sub_1C077F744();
  if (!v0)
  {
    type metadata accessor for EntityMatch(0);
    sub_1C07BA034();
    sub_1C078784C();
    sub_1C0794BAC(&qword_1ED759FB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE38]);
    sub_1C078F64C();
    sub_1C078F64C();
    sub_1C1070BA0();
    sub_1C07A1DCC();
    sub_1C0A9E020();
    sub_1C077F744();
    sub_1C07ACF80(&qword_1ED762410);
    sub_1C0A9E37C(&qword_1ED75D0A8, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEA0B8]);
    sub_1C1070B64();
  }
  sub_1C078C76C(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_1C077EEFC();
  sub_1C07757D0();
}

void EntityMatch.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, char *, uint64_t);
  uint64_t v24;
  char *v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, char *, uint64_t);
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  sub_1C077AE5C();
  v43 = v0;
  v4 = v3;
  v35 = v5;
  v44 = sub_1C078784C();
  v38 = *(_QWORD *)(v44 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C077AF80();
  v9 = (char *)(v7 - v8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v34 - v11;
  sub_1C0776744();
  sub_1C0AA4514();
  v37 = v13;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_1C07ACF80(&qword_1ED75D240);
  v17 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v18 = sub_1C0782B30();
  v41 = type metadata accessor for EntityMatch(v18);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v19);
  sub_1C078A2B4(v20, v34);
  v21 = v4[3];
  v40 = v4;
  sub_1C07A9480(v4, v21);
  sub_1C0A9E340();
  v36 = v2;
  v22 = v43;
  sub_1C0AA44A4();
  if (v22)
  {
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v40);
  }
  else
  {
    v43 = v17;
    LOBYTE(v45) = 0;
    sub_1C0794BAC(&qword_1ED759F60, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3BB08], MEMORY[0x1E0D3BB38]);
    sub_1C078077C();
    v23 = *(void (**)(uint64_t, char *, uint64_t))(v37 + 32);
    v24 = v42;
    v34 = v1;
    v23(v42, v16, v1);
    LOBYTE(v45) = 1;
    sub_1C0794BAC((unint64_t *)&unk_1ED761900, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE58]);
    v25 = v12;
    v26 = v44;
    sub_1C078077C();
    v27 = (int *)v41;
    v28 = v24 + *(int *)(v41 + 20);
    v29 = v24;
    v30 = *(void (**)(uint64_t, char *, uint64_t))(v38 + 32);
    v30(v28, v25, v26);
    LOBYTE(v45) = 2;
    sub_1C078077C();
    v31 = v43;
    v30(v29 + v27[6], v9, v26);
    LOBYTE(v45) = 3;
    sub_1C1070AC8();
    *(_DWORD *)(v29 + v27[7]) = v32;
    LOBYTE(v45) = 4;
    sub_1C1070ABC();
    *(_QWORD *)(v29 + v27[8]) = v33;
    sub_1C07FD324();
    sub_1C078077C();
    *(_BYTE *)(v29 + v27[9]) = v45;
    sub_1C07ACF80(&qword_1ED762410);
    sub_1C0A9E37C((unint64_t *)&qword_1ED762418, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA0D8]);
    sub_1C1070A8C();
    sub_1C0781140(*(uint64_t (**)(uint64_t, _QWORD))(v31 + 8));
    *(_QWORD *)(v29 + v27[10]) = v45;
    sub_1C0AA4468(v29, v35);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v40);
    sub_1C077B100(v29);
  }
  sub_1C07757D0();
}

void sub_1C0A9DAD8()
{
  EntityMatch.init(from:)();
}

void sub_1C0A9DAEC()
{
  EntityMatch.encode(to:)();
}

uint64_t sub_1C0A9DB04()
{
  sub_1C0794BAC(&qword_1ED75A2D0, type metadata accessor for EntityMatch, (uint64_t)&protocol conformance descriptor for EntityMatch);
  return sub_1C106BDDC();
}

uint64_t sub_1C0A9DB70()
{
  sub_1C0794BAC(&qword_1ED759C90, type metadata accessor for EntityMatch, (uint64_t)&protocol conformance descriptor for EntityMatch);
  return sub_1C106BFD4();
}

uint64_t sub_1C0A9DBD8()
{
  sub_1C0794BAC(&qword_1ED759C90, type metadata accessor for EntityMatch, (uint64_t)&protocol conformance descriptor for EntityMatch);
  return sub_1C106BFC8();
}

uint64_t sub_1C0A9DC34()
{
  sub_1C0794BAC(&qword_1ED759C90, type metadata accessor for EntityMatch, (uint64_t)&protocol conformance descriptor for EntityMatch);
  return sub_1C106BFBC();
}

uint64_t sub_1C0A9DC90()
{
  sub_1C0794BAC(&qword_1ED75A2C8, type metadata accessor for EntityMatch, (uint64_t)&protocol conformance descriptor for EntityMatch);
  return sub_1C106BD58();
}

uint64_t sub_1C0A9DCE8()
{
  return 0x7365686374616DLL;
}

unint64_t sub_1C0A9DD00()
{
  unint64_t result;

  result = qword_1ED75F0D0;
  if (!qword_1ED75F0D0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109E314, &type metadata for GraphTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED75F0D0);
  }
  return result;
}

unint64_t sub_1C0A9DD3C()
{
  unint64_t result;

  result = qword_1ED75BA40;
  if (!qword_1ED75BA40)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for SourceDuplicates, &type metadata for SourceDuplicates);
    atomic_store(result, (unint64_t *)&qword_1ED75BA40);
  }
  return result;
}

unint64_t sub_1C0A9DD78()
{
  unint64_t result;

  result = qword_1ED761FE0;
  if (!qword_1ED761FE0)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for SourceDuplicates, &type metadata for SourceDuplicates);
    atomic_store(result, (unint64_t *)&qword_1ED761FE0);
  }
  return result;
}

uint64_t type metadata accessor for EventTriple(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1ED75F068);
}

unint64_t sub_1C0A9DDC8()
{
  unint64_t result;

  result = qword_1ED75F040;
  if (!qword_1ED75F040)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109E2C4, &type metadata for EventTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED75F040);
  }
  return result;
}

uint64_t type metadata accessor for ExpiredGraphTriple(uint64_t a1)
{
  return sub_1C0784B00(a1, qword_1ED75F970);
}

unint64_t sub_1C0A9DE18()
{
  unint64_t result;

  result = qword_1ED74A478;
  if (!qword_1ED74A478)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109E274, &type metadata for ExpiredGraphTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED74A478);
  }
  return result;
}

uint64_t type metadata accessor for ExpiredEventTriple(uint64_t a1)
{
  return sub_1C0784B00(a1, qword_1ED75E648);
}

unint64_t sub_1C0A9DE68()
{
  unint64_t result;

  result = qword_1ED760D98;
  if (!qword_1ED760D98)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109E224, &type metadata for ExpiredEventTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED760D98);
  }
  return result;
}

uint64_t type metadata accessor for ConstructionGraphTriple(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1ED750E30);
}

unint64_t sub_1C0A9DEB8()
{
  unint64_t result;

  result = qword_1ED750DC0;
  if (!qword_1ED750DC0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109E1D4, &type metadata for ConstructionGraphTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED750DC0);
  }
  return result;
}

uint64_t type metadata accessor for ConstructionEventTriple(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1ED750DA8);
}

unint64_t sub_1C0A9DF08()
{
  unint64_t result;

  result = qword_1ED750D30;
  if (!qword_1ED750D30)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109E184, &type metadata for ConstructionEventTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED750D30);
  }
  return result;
}

uint64_t type metadata accessor for ExpiredConstructionGraphTriple(uint64_t a1)
{
  return sub_1C0784B00(a1, qword_1EF63A2B0);
}

unint64_t sub_1C0A9DF58()
{
  unint64_t result;

  result = qword_1EF63A070;
  if (!qword_1EF63A070)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109E134, &type metadata for ExpiredConstructionGraphTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF63A070);
  }
  return result;
}

uint64_t type metadata accessor for ExpiredConstructionEventTriple(uint64_t a1)
{
  return sub_1C0784B00(a1, qword_1EF63A360);
}

unint64_t sub_1C0A9DFA8()
{
  unint64_t result;

  result = qword_1EF63A088;
  if (!qword_1EF63A088)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109E0E4, &type metadata for ExpiredConstructionEventTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF63A088);
  }
  return result;
}

unint64_t sub_1C0A9DFE4()
{
  unint64_t result;

  result = qword_1ED75A458;
  if (!qword_1ED75A458)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109E094, &type metadata for EntityTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED75A458);
  }
  return result;
}

unint64_t sub_1C0A9E020()
{
  unint64_t result;

  result = qword_1ED75A6C0;
  if (!qword_1ED75A6C0)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PipelineType, &type metadata for PipelineType);
    atomic_store(result, (unint64_t *)&qword_1ED75A6C0);
  }
  return result;
}

uint64_t type metadata accessor for TranslatedEntityTriple(uint64_t a1)
{
  return sub_1C0784B00(a1, qword_1ED75C338);
}

unint64_t sub_1C0A9E070()
{
  unint64_t result;

  result = qword_1ED75C2F0;
  if (!qword_1ED75C2F0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109E044, &type metadata for TranslatedEntityTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED75C2F0);
  }
  return result;
}

unint64_t sub_1C0A9E0AC()
{
  unint64_t result;

  result = qword_1ED75A198;
  if (!qword_1ED75A198)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109DFF4, &type metadata for EntityBlock.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED75A198);
  }
  return result;
}

uint64_t type metadata accessor for EntityBlock(uint64_t a1)
{
  return sub_1C0784B00(a1, qword_1ED75A1E0);
}

unint64_t sub_1C0A9E0FC()
{
  unint64_t result;

  result = qword_1ED750E48;
  if (!qword_1ED750E48)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109DFA4, &type metadata for ConstructionPhaseStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED750E48);
  }
  return result;
}

uint64_t type metadata accessor for ConstructionPhaseStatus(uint64_t a1)
{
  return sub_1C0784B00(a1, qword_1ED75C3F8);
}

unint64_t sub_1C0A9E14C()
{
  unint64_t result;

  result = qword_1ED750AD8;
  if (!qword_1ED750AD8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109DF7C, &unk_1E7A1DB10);
    atomic_store(result, (unint64_t *)&qword_1ED750AD8);
  }
  return result;
}

unint64_t sub_1C0A9E188()
{
  unint64_t result;

  result = qword_1ED750AE8;
  if (!qword_1ED750AE8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109DF54, &unk_1E7A1DB10);
    atomic_store(result, (unint64_t *)&qword_1ED750AE8);
  }
  return result;
}

unint64_t sub_1C0A9E1C4()
{
  unint64_t result;

  result = qword_1EF63A0A8;
  if (!qword_1EF63A0A8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109DF04, &type metadata for PhaseStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF63A0A8);
  }
  return result;
}

uint64_t type metadata accessor for PhaseStatus(uint64_t a1)
{
  return sub_1C0784B00(a1, qword_1EF63A410);
}

unint64_t sub_1C0A9E214()
{
  unint64_t result;

  result = qword_1ED749A28;
  if (!qword_1ED749A28)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109DEB4, &type metadata for ProgressTokens.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED749A28);
  }
  return result;
}

uint64_t type metadata accessor for ProgressTokens(uint64_t a1)
{
  return sub_1C0784B00(a1, qword_1ED75ACB0);
}

unint64_t sub_1C0A9E264()
{
  unint64_t result;

  result = qword_1ED75D098;
  if (!qword_1ED75D098)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for StageName, &type metadata for StageName);
    atomic_store(result, (unint64_t *)&qword_1ED75D098);
  }
  return result;
}

unint64_t sub_1C0A9E2A0()
{
  unint64_t result;

  result = qword_1ED75D0A0;
  if (!qword_1ED75D0A0)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for StageName, &type metadata for StageName);
    atomic_store(result, (unint64_t *)&qword_1ED75D0A0);
  }
  return result;
}

unint64_t sub_1C0A9E2DC()
{
  unint64_t result;

  result = qword_1ED751008;
  if (!qword_1ED751008)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109DE64, &type metadata for ConstructionProgressTokens.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED751008);
  }
  return result;
}

uint64_t type metadata accessor for ConstructionProgressTokens(uint64_t a1)
{
  return sub_1C0784B00(a1, qword_1ED75C6E0);
}

uint64_t type metadata accessor for EntityMatch(uint64_t a1)
{
  return sub_1C0784B00(a1, qword_1ED75A2D8);
}

unint64_t sub_1C0A9E340()
{
  unint64_t result;

  result = qword_1ED75A288;
  if (!qword_1ED75A288)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109DE14, &type metadata for EntityMatch.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED75A288);
  }
  return result;
}

uint64_t sub_1C0A9E37C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  _QWORD v8[2];

  result = *a1;
  if (!result)
  {
    v7 = sub_1C07D4BEC(&qword_1ED762410);
    v8[0] = a2;
    v8[1] = a2;
    result = MEMORY[0x1C3BA8174](a3, v7, v8);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C0A9E3DC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1C0794BAC((unint64_t *)&unk_1ED75DB38, type metadata accessor for GraphTriple, (uint64_t)&protocol conformance descriptor for GraphTriple);
  a1[1] = v2;
  sub_1C0794BAC(&qword_1ED75DB28, type metadata accessor for GraphTriple, (uint64_t)&protocol conformance descriptor for GraphTriple);
  a1[2] = v3;
  sub_1C0794BAC(&qword_1ED75DB30, type metadata accessor for GraphTriple, (uint64_t)&protocol conformance descriptor for GraphTriple);
  a1[3] = v4;
  sub_1C0794BAC(&qword_1ED7606F8, type metadata accessor for GraphTriple, (uint64_t)&protocol conformance descriptor for GraphTriple);
  a1[4] = v5;
}

void sub_1C0A9E470(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_1C0794BAC(&qword_1ED756860, type metadata accessor for GraphTriple, (uint64_t)&protocol conformance descriptor for GraphTriple);
  *(_QWORD *)(a1 + 8) = v2;
  sub_1C0794BAC((unint64_t *)&unk_1ED7493B8, type metadata accessor for GraphTriple, (uint64_t)&protocol conformance descriptor for GraphTriple);
  *(_QWORD *)(a1 + 16) = v3;
}

void sub_1C0A9E4CC(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1ED7606F0, type metadata accessor for GraphTriple, (uint64_t)&protocol conformance descriptor for GraphTriple);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0A9E508()
{
  sub_1C0794BAC(&qword_1ED760700, type metadata accessor for GraphTriple, (uint64_t)&protocol conformance descriptor for GraphTriple);
}

void sub_1C0A9E534()
{
  sub_1C0794BAC(&qword_1ED7493C8, type metadata accessor for GraphTriple, (uint64_t)&protocol conformance descriptor for GraphTriple);
}

void sub_1C0A9E560()
{
  sub_1C0794BAC((unint64_t *)&unk_1ED7493A8, type metadata accessor for GraphTriple, (uint64_t)&protocol conformance descriptor for GraphTriple);
}

void sub_1C0A9E58C()
{
  sub_1C0794BAC(&qword_1ED75E628, type metadata accessor for GraphTriple, (uint64_t)&protocol conformance descriptor for GraphTriple);
}

void sub_1C0A9E5B8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1C0794BAC(&qword_1ED760D78, type metadata accessor for EventTriple, (uint64_t)&protocol conformance descriptor for EventTriple);
  a1[1] = v2;
  sub_1C0794BAC(&qword_1ED760D68, type metadata accessor for EventTriple, (uint64_t)&protocol conformance descriptor for EventTriple);
  a1[2] = v3;
  sub_1C0794BAC(&qword_1ED760D70, type metadata accessor for EventTriple, (uint64_t)&protocol conformance descriptor for EventTriple);
  a1[3] = v4;
  sub_1C0794BAC(&qword_1ED7606D8, type metadata accessor for EventTriple, (uint64_t)&protocol conformance descriptor for EventTriple);
  a1[4] = v5;
}

void sub_1C0A9E64C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_1C0794BAC(&qword_1ED756858, type metadata accessor for EventTriple, (uint64_t)&protocol conformance descriptor for EventTriple);
  *(_QWORD *)(a1 + 8) = v2;
  sub_1C0794BAC(&qword_1ED749370, type metadata accessor for EventTriple, (uint64_t)&protocol conformance descriptor for EventTriple);
  *(_QWORD *)(a1 + 16) = v3;
}

void sub_1C0A9E6A8(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1ED75F058, type metadata accessor for EventTriple, (uint64_t)&protocol conformance descriptor for EventTriple);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0A9E6E4()
{
  sub_1C0794BAC(&qword_1ED7606E0, type metadata accessor for EventTriple, (uint64_t)&protocol conformance descriptor for EventTriple);
}

void sub_1C0A9E710()
{
  sub_1C0794BAC(&qword_1ED749378, type metadata accessor for EventTriple, (uint64_t)&protocol conformance descriptor for EventTriple);
}

void sub_1C0A9E73C()
{
  sub_1C0794BAC(&qword_1ED749368, type metadata accessor for EventTriple, (uint64_t)&protocol conformance descriptor for EventTriple);
}

void sub_1C0A9E768()
{
  sub_1C0794BAC(&qword_1ED75E620, type metadata accessor for EventTriple, (uint64_t)&protocol conformance descriptor for EventTriple);
}

void sub_1C0A9E794(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1EF63A0B8, type metadata accessor for ExpiredGraphTriple, (uint64_t)&protocol conformance descriptor for ExpiredGraphTriple);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0A9E7D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_1C0794BAC(&qword_1EF63A0C0, type metadata accessor for ExpiredGraphTriple, (uint64_t)&protocol conformance descriptor for ExpiredGraphTriple);
  *(_QWORD *)(a1 + 8) = v2;
  sub_1C0794BAC(&qword_1ED747E00, type metadata accessor for ExpiredGraphTriple, (uint64_t)&protocol conformance descriptor for ExpiredGraphTriple);
  *(_QWORD *)(a1 + 16) = v3;
}

void sub_1C0A9E82C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1C0794BAC(&qword_1ED75DB80, type metadata accessor for ExpiredGraphTriple, (uint64_t)&protocol conformance descriptor for ExpiredGraphTriple);
  a1[1] = v2;
  sub_1C0794BAC(&qword_1ED75DB68, type metadata accessor for ExpiredGraphTriple, (uint64_t)&protocol conformance descriptor for ExpiredGraphTriple);
  a1[2] = v3;
  sub_1C0794BAC(&qword_1ED75DB78, type metadata accessor for ExpiredGraphTriple, (uint64_t)&protocol conformance descriptor for ExpiredGraphTriple);
  a1[3] = v4;
  sub_1C0794BAC(&qword_1ED75DB60, type metadata accessor for ExpiredGraphTriple, (uint64_t)&protocol conformance descriptor for ExpiredGraphTriple);
  a1[4] = v5;
}

void sub_1C0A9E8C0()
{
  sub_1C0794BAC(&qword_1ED747E08, type metadata accessor for ExpiredGraphTriple, (uint64_t)&protocol conformance descriptor for ExpiredGraphTriple);
}

void sub_1C0A9E8EC(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1ED75DB58, type metadata accessor for ExpiredGraphTriple, (uint64_t)&protocol conformance descriptor for ExpiredGraphTriple);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0A9E928()
{
  sub_1C0794BAC(&qword_1ED75DB70, type metadata accessor for ExpiredGraphTriple, (uint64_t)&protocol conformance descriptor for ExpiredGraphTriple);
}

void sub_1C0A9E954()
{
  sub_1C0794BAC(&qword_1ED747DF8, type metadata accessor for ExpiredGraphTriple, (uint64_t)&protocol conformance descriptor for ExpiredGraphTriple);
}

void sub_1C0A9E980()
{
  sub_1C0794BAC(&qword_1ED75E6F8, type metadata accessor for ExpiredGraphTriple, (uint64_t)&protocol conformance descriptor for ExpiredGraphTriple);
}

void sub_1C0A9E9AC(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC((unint64_t *)&unk_1ED754A38, type metadata accessor for ExpiredEventTriple, (uint64_t)&protocol conformance descriptor for ExpiredEventTriple);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0A9E9E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_1C0794BAC(&qword_1EF63A0C8, type metadata accessor for ExpiredEventTriple, (uint64_t)&protocol conformance descriptor for ExpiredEventTriple);
  *(_QWORD *)(a1 + 8) = v2;
  sub_1C0794BAC(&qword_1EF63A0D0, type metadata accessor for ExpiredEventTriple, (uint64_t)&protocol conformance descriptor for ExpiredEventTriple);
  *(_QWORD *)(a1 + 16) = v3;
}

void sub_1C0A9EA44(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1C0794BAC(&qword_1ED760DE0, type metadata accessor for ExpiredEventTriple, (uint64_t)&protocol conformance descriptor for ExpiredEventTriple);
  a1[1] = v2;
  sub_1C0794BAC(&qword_1ED760DC0, type metadata accessor for ExpiredEventTriple, (uint64_t)&protocol conformance descriptor for ExpiredEventTriple);
  a1[2] = v3;
  sub_1C0794BAC(&qword_1ED760DD8, type metadata accessor for ExpiredEventTriple, (uint64_t)&protocol conformance descriptor for ExpiredEventTriple);
  a1[3] = v4;
  sub_1C0794BAC(&qword_1ED760DB8, type metadata accessor for ExpiredEventTriple, (uint64_t)&protocol conformance descriptor for ExpiredEventTriple);
  a1[4] = v5;
}

void sub_1C0A9EAD8()
{
  sub_1C0794BAC(&qword_1EF63A0D8, type metadata accessor for ExpiredEventTriple, (uint64_t)&protocol conformance descriptor for ExpiredEventTriple);
}

void sub_1C0A9EB04(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1ED760DB0, type metadata accessor for ExpiredEventTriple, (uint64_t)&protocol conformance descriptor for ExpiredEventTriple);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0A9EB40()
{
  sub_1C0794BAC(&qword_1ED760DC8, type metadata accessor for ExpiredEventTriple, (uint64_t)&protocol conformance descriptor for ExpiredEventTriple);
}

void sub_1C0A9EB6C()
{
  sub_1C0794BAC(&qword_1EF63A0E0, type metadata accessor for ExpiredEventTriple, (uint64_t)&protocol conformance descriptor for ExpiredEventTriple);
}

void sub_1C0A9EB98()
{
  sub_1C0794BAC(&qword_1ED757408, type metadata accessor for ExpiredEventTriple, (uint64_t)&protocol conformance descriptor for ExpiredEventTriple);
}

void sub_1C0A9EBC4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1C0794BAC(&qword_1EF63A0E8, type metadata accessor for ConstructionGraphTriple, (uint64_t)&protocol conformance descriptor for ConstructionGraphTriple);
  a1[1] = v2;
  sub_1C0794BAC(&qword_1EF63A0F0, type metadata accessor for ConstructionGraphTriple, (uint64_t)&protocol conformance descriptor for ConstructionGraphTriple);
  a1[2] = v3;
  sub_1C0794BAC(&qword_1EF63A0F8, type metadata accessor for ConstructionGraphTriple, (uint64_t)&protocol conformance descriptor for ConstructionGraphTriple);
  a1[3] = v4;
  sub_1C0794BAC(&qword_1ED750E28, type metadata accessor for ConstructionGraphTriple, (uint64_t)&protocol conformance descriptor for ConstructionGraphTriple);
  a1[4] = v5;
}

void sub_1C0A9EC58(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_1C0794BAC(&qword_1ED750E08, type metadata accessor for ConstructionGraphTriple, (uint64_t)&protocol conformance descriptor for ConstructionGraphTriple);
  *(_QWORD *)(a1 + 8) = v2;
  sub_1C0794BAC(&qword_1ED750E10, type metadata accessor for ConstructionGraphTriple, (uint64_t)&protocol conformance descriptor for ConstructionGraphTriple);
  *(_QWORD *)(a1 + 16) = v3;
}

void sub_1C0A9ECB4(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1ED750DF0, type metadata accessor for ConstructionGraphTriple, (uint64_t)&protocol conformance descriptor for ConstructionGraphTriple);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0A9ECF0()
{
  sub_1C0794BAC(&qword_1ED741ED0, type metadata accessor for ConstructionGraphTriple, (uint64_t)&protocol conformance descriptor for ConstructionGraphTriple);
}

void sub_1C0A9ED1C()
{
  sub_1C0794BAC(&qword_1ED750E18, type metadata accessor for ConstructionGraphTriple, (uint64_t)&protocol conformance descriptor for ConstructionGraphTriple);
}

void sub_1C0A9ED48()
{
  sub_1C0794BAC(&qword_1ED750E00, type metadata accessor for ConstructionGraphTriple, (uint64_t)&protocol conformance descriptor for ConstructionGraphTriple);
}

void sub_1C0A9ED74()
{
  sub_1C0794BAC(&qword_1ED750DF8, type metadata accessor for ConstructionGraphTriple, (uint64_t)&protocol conformance descriptor for ConstructionGraphTriple);
}

void sub_1C0A9EDA0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1C0794BAC(&qword_1EF63A100, type metadata accessor for ConstructionEventTriple, (uint64_t)&protocol conformance descriptor for ConstructionEventTriple);
  a1[1] = v2;
  sub_1C0794BAC(&qword_1EF63A108, type metadata accessor for ConstructionEventTriple, (uint64_t)&protocol conformance descriptor for ConstructionEventTriple);
  a1[2] = v3;
  sub_1C0794BAC(&qword_1EF63A110, type metadata accessor for ConstructionEventTriple, (uint64_t)&protocol conformance descriptor for ConstructionEventTriple);
  a1[3] = v4;
  sub_1C0794BAC(&qword_1ED750D98, type metadata accessor for ConstructionEventTriple, (uint64_t)&protocol conformance descriptor for ConstructionEventTriple);
  a1[4] = v5;
}

void sub_1C0A9EE34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_1C0794BAC(&qword_1ED750D78, type metadata accessor for ConstructionEventTriple, (uint64_t)&protocol conformance descriptor for ConstructionEventTriple);
  *(_QWORD *)(a1 + 8) = v2;
  sub_1C0794BAC(&qword_1ED750D80, type metadata accessor for ConstructionEventTriple, (uint64_t)&protocol conformance descriptor for ConstructionEventTriple);
  *(_QWORD *)(a1 + 16) = v3;
}

void sub_1C0A9EE90(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1EF63A020, type metadata accessor for ConstructionEventTriple, (uint64_t)&protocol conformance descriptor for ConstructionEventTriple);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0A9EECC()
{
  sub_1C0794BAC(&qword_1ED750DA0, type metadata accessor for ConstructionEventTriple, (uint64_t)&protocol conformance descriptor for ConstructionEventTriple);
}

void sub_1C0A9EEF8()
{
  sub_1C0794BAC(&qword_1ED750D88, type metadata accessor for ConstructionEventTriple, (uint64_t)&protocol conformance descriptor for ConstructionEventTriple);
}

void sub_1C0A9EF24()
{
  sub_1C0794BAC(&qword_1ED750D70, type metadata accessor for ConstructionEventTriple, (uint64_t)&protocol conformance descriptor for ConstructionEventTriple);
}

void sub_1C0A9EF50()
{
  sub_1C0794BAC(&qword_1ED750D68, type metadata accessor for ConstructionEventTriple, (uint64_t)&protocol conformance descriptor for ConstructionEventTriple);
}

void sub_1C0A9EF7C(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1EF63A118, type metadata accessor for ExpiredConstructionGraphTriple, (uint64_t)&protocol conformance descriptor for ExpiredConstructionGraphTriple);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0A9EFB8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_1C0794BAC(&qword_1EF63A120, type metadata accessor for ExpiredConstructionGraphTriple, (uint64_t)&protocol conformance descriptor for ExpiredConstructionGraphTriple);
  *(_QWORD *)(a1 + 8) = v2;
  sub_1C0794BAC(&qword_1EF63A030, type metadata accessor for ExpiredConstructionGraphTriple, (uint64_t)&protocol conformance descriptor for ExpiredConstructionGraphTriple);
  *(_QWORD *)(a1 + 16) = v3;
}

void sub_1C0A9F014(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1C0794BAC(&qword_1EF63A128, type metadata accessor for ExpiredConstructionGraphTriple, (uint64_t)&protocol conformance descriptor for ExpiredConstructionGraphTriple);
  a1[1] = v2;
  sub_1C0794BAC(&qword_1EF63A130, type metadata accessor for ExpiredConstructionGraphTriple, (uint64_t)&protocol conformance descriptor for ExpiredConstructionGraphTriple);
  a1[2] = v3;
  sub_1C0794BAC(&qword_1EF63A138, type metadata accessor for ExpiredConstructionGraphTriple, (uint64_t)&protocol conformance descriptor for ExpiredConstructionGraphTriple);
  a1[3] = v4;
  sub_1C0794BAC(&qword_1EF63A140, type metadata accessor for ExpiredConstructionGraphTriple, (uint64_t)&protocol conformance descriptor for ExpiredConstructionGraphTriple);
  a1[4] = v5;
}

void sub_1C0A9F0A8()
{
  sub_1C0794BAC(&qword_1EF63A148, type metadata accessor for ExpiredConstructionGraphTriple, (uint64_t)&protocol conformance descriptor for ExpiredConstructionGraphTriple);
}

void sub_1C0A9F0D4(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1EF63A150, type metadata accessor for ExpiredConstructionGraphTriple, (uint64_t)&protocol conformance descriptor for ExpiredConstructionGraphTriple);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0A9F110()
{
  sub_1C0794BAC(&qword_1EF63A158, type metadata accessor for ExpiredConstructionGraphTriple, (uint64_t)&protocol conformance descriptor for ExpiredConstructionGraphTriple);
}

void sub_1C0A9F13C()
{
  sub_1C0794BAC(&qword_1EF63A160, type metadata accessor for ExpiredConstructionGraphTriple, (uint64_t)&protocol conformance descriptor for ExpiredConstructionGraphTriple);
}

void sub_1C0A9F168()
{
  sub_1C0794BAC(&qword_1EF63A168, type metadata accessor for ExpiredConstructionGraphTriple, (uint64_t)&protocol conformance descriptor for ExpiredConstructionGraphTriple);
}

void sub_1C0A9F194(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1EF63A170, type metadata accessor for ExpiredConstructionEventTriple, (uint64_t)&protocol conformance descriptor for ExpiredConstructionEventTriple);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0A9F1D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_1C0794BAC(&qword_1EF63A178, type metadata accessor for ExpiredConstructionEventTriple, (uint64_t)&protocol conformance descriptor for ExpiredConstructionEventTriple);
  *(_QWORD *)(a1 + 8) = v2;
  sub_1C0794BAC(&qword_1EF63A008, type metadata accessor for ExpiredConstructionEventTriple, (uint64_t)&protocol conformance descriptor for ExpiredConstructionEventTriple);
  *(_QWORD *)(a1 + 16) = v3;
}

void sub_1C0A9F22C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1C0794BAC(&qword_1EF63A180, type metadata accessor for ExpiredConstructionEventTriple, (uint64_t)&protocol conformance descriptor for ExpiredConstructionEventTriple);
  a1[1] = v2;
  sub_1C0794BAC(&qword_1EF63A188, type metadata accessor for ExpiredConstructionEventTriple, (uint64_t)&protocol conformance descriptor for ExpiredConstructionEventTriple);
  a1[2] = v3;
  sub_1C0794BAC(&qword_1EF63A190, type metadata accessor for ExpiredConstructionEventTriple, (uint64_t)&protocol conformance descriptor for ExpiredConstructionEventTriple);
  a1[3] = v4;
  sub_1C0794BAC(&qword_1EF63A198, type metadata accessor for ExpiredConstructionEventTriple, (uint64_t)&protocol conformance descriptor for ExpiredConstructionEventTriple);
  a1[4] = v5;
}

void sub_1C0A9F2C0()
{
  sub_1C0794BAC(&qword_1EF63A1A0, type metadata accessor for ExpiredConstructionEventTriple, (uint64_t)&protocol conformance descriptor for ExpiredConstructionEventTriple);
}

void sub_1C0A9F2EC(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1EF63A1A8, type metadata accessor for ExpiredConstructionEventTriple, (uint64_t)&protocol conformance descriptor for ExpiredConstructionEventTriple);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0A9F328()
{
  sub_1C0794BAC(&qword_1EF63A1B0, type metadata accessor for ExpiredConstructionEventTriple, (uint64_t)&protocol conformance descriptor for ExpiredConstructionEventTriple);
}

void sub_1C0A9F354()
{
  sub_1C0794BAC(&qword_1EF63A1B8, type metadata accessor for ExpiredConstructionEventTriple, (uint64_t)&protocol conformance descriptor for ExpiredConstructionEventTriple);
}

void sub_1C0A9F380()
{
  sub_1C0794BAC(&qword_1EF63A1C0, type metadata accessor for ExpiredConstructionEventTriple, (uint64_t)&protocol conformance descriptor for ExpiredConstructionEventTriple);
}

void sub_1C0A9F3AC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1C0794BAC(&qword_1EF63A1C8, type metadata accessor for EntityTriple, (uint64_t)&protocol conformance descriptor for EntityTriple);
  a1[1] = v2;
  sub_1C0794BAC(&qword_1EF63A1D0, type metadata accessor for EntityTriple, (uint64_t)&protocol conformance descriptor for EntityTriple);
  a1[2] = v3;
  sub_1C0794BAC(&qword_1EF63A1D8, type metadata accessor for EntityTriple, (uint64_t)&protocol conformance descriptor for EntityTriple);
  a1[3] = v4;
  sub_1C0794BAC(&qword_1EF63A1E0, type metadata accessor for EntityTriple, (uint64_t)&protocol conformance descriptor for EntityTriple);
  a1[4] = v5;
}

void sub_1C0A9F440(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_1C0794BAC(&qword_1ED75A490, type metadata accessor for EntityTriple, (uint64_t)&protocol conformance descriptor for EntityTriple);
  *(_QWORD *)(a1 + 8) = v2;
  sub_1C0794BAC(&qword_1ED759CC0, type metadata accessor for EntityTriple, (uint64_t)&protocol conformance descriptor for EntityTriple);
  *(_QWORD *)(a1 + 16) = v3;
}

void sub_1C0A9F49C(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1ED75A480, type metadata accessor for EntityTriple, (uint64_t)&protocol conformance descriptor for EntityTriple);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0A9F4D8()
{
  sub_1C0794BAC(&qword_1EF63A1E8, type metadata accessor for EntityTriple, (uint64_t)&protocol conformance descriptor for EntityTriple);
}

void sub_1C0A9F504()
{
  sub_1C0794BAC((unint64_t *)&unk_1ED759CC8, type metadata accessor for EntityTriple, (uint64_t)&protocol conformance descriptor for EntityTriple);
}

void sub_1C0A9F530()
{
  sub_1C0794BAC(&qword_1ED759CB8, type metadata accessor for EntityTriple, (uint64_t)&protocol conformance descriptor for EntityTriple);
}

void sub_1C0A9F55C()
{
  sub_1C0794BAC(&qword_1ED75A488, type metadata accessor for EntityTriple, (uint64_t)&protocol conformance descriptor for EntityTriple);
}

void sub_1C0A9F588(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1C0794BAC(&qword_1EF63A1F0, type metadata accessor for TranslatedEntityTriple, (uint64_t)&protocol conformance descriptor for TranslatedEntityTriple);
  a1[1] = v2;
  sub_1C0794BAC(&qword_1EF63A1F8, type metadata accessor for TranslatedEntityTriple, (uint64_t)&protocol conformance descriptor for TranslatedEntityTriple);
  a1[2] = v3;
  sub_1C0794BAC(&qword_1EF63A200, type metadata accessor for TranslatedEntityTriple, (uint64_t)&protocol conformance descriptor for TranslatedEntityTriple);
  a1[3] = v4;
  sub_1C0794BAC(&qword_1EF63A208, type metadata accessor for TranslatedEntityTriple, (uint64_t)&protocol conformance descriptor for TranslatedEntityTriple);
  a1[4] = v5;
}

void sub_1C0A9F61C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_1C0794BAC(&qword_1ED75C328, type metadata accessor for TranslatedEntityTriple, (uint64_t)&protocol conformance descriptor for TranslatedEntityTriple);
  *(_QWORD *)(a1 + 8) = v2;
  sub_1C0794BAC(&qword_1ED759D18, type metadata accessor for TranslatedEntityTriple, (uint64_t)&protocol conformance descriptor for TranslatedEntityTriple);
  *(_QWORD *)(a1 + 16) = v3;
}

void sub_1C0A9F678(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1ED75C318, type metadata accessor for TranslatedEntityTriple, (uint64_t)&protocol conformance descriptor for TranslatedEntityTriple);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0A9F6B4()
{
  sub_1C0794BAC(&qword_1EF63A210, type metadata accessor for TranslatedEntityTriple, (uint64_t)&protocol conformance descriptor for TranslatedEntityTriple);
}

void sub_1C0A9F6E0()
{
  sub_1C0794BAC(&qword_1ED759D20, type metadata accessor for TranslatedEntityTriple, (uint64_t)&protocol conformance descriptor for TranslatedEntityTriple);
}

void sub_1C0A9F70C()
{
  sub_1C0794BAC(&qword_1ED759D10, type metadata accessor for TranslatedEntityTriple, (uint64_t)&protocol conformance descriptor for TranslatedEntityTriple);
}

void sub_1C0A9F738()
{
  sub_1C0794BAC((unint64_t *)&qword_1ED75C320, type metadata accessor for TranslatedEntityTriple, (uint64_t)&protocol conformance descriptor for TranslatedEntityTriple);
}

void sub_1C0A9F764(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_1C0794BAC(&qword_1ED75A1D8, type metadata accessor for EntityBlock, (uint64_t)&protocol conformance descriptor for EntityBlock);
  *(_QWORD *)(a1 + 8) = v2;
  sub_1C0794BAC(&qword_1EF63A218, type metadata accessor for EntityBlock, (uint64_t)&protocol conformance descriptor for EntityBlock);
  *(_QWORD *)(a1 + 16) = v3;
}

void sub_1C0A9F7C0()
{
  sub_1C0794BAC(&qword_1EF63A220, type metadata accessor for EntityBlock, (uint64_t)&protocol conformance descriptor for EntityBlock);
}

void sub_1C0A9F7EC()
{
  sub_1C0794BAC(&qword_1EF63A228, type metadata accessor for EntityBlock, (uint64_t)&protocol conformance descriptor for EntityBlock);
}

void sub_1C0A9F818()
{
  sub_1C0794BAC(&qword_1ED75A1D0, type metadata accessor for EntityBlock, (uint64_t)&protocol conformance descriptor for EntityBlock);
}

void sub_1C0A9F844(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_1C0794BAC(&qword_1ED750E78, type metadata accessor for ConstructionPhaseStatus, (uint64_t)&protocol conformance descriptor for ConstructionPhaseStatus);
  *(_QWORD *)(a1 + 8) = v2;
  sub_1C0794BAC(&qword_1ED750E80, type metadata accessor for ConstructionPhaseStatus, (uint64_t)&protocol conformance descriptor for ConstructionPhaseStatus);
  *(_QWORD *)(a1 + 16) = v3;
}

void sub_1C0A9F8A0()
{
  sub_1C0794BAC(&qword_1ED750E88, type metadata accessor for ConstructionPhaseStatus, (uint64_t)&protocol conformance descriptor for ConstructionPhaseStatus);
}

void sub_1C0A9F8CC()
{
  sub_1C0794BAC(&qword_1ED750E70, type metadata accessor for ConstructionPhaseStatus, (uint64_t)&protocol conformance descriptor for ConstructionPhaseStatus);
}

void sub_1C0A9F8F8()
{
  sub_1C0794BAC(&qword_1ED750E68, type metadata accessor for ConstructionPhaseStatus, (uint64_t)&protocol conformance descriptor for ConstructionPhaseStatus);
}

void sub_1C0A9F924(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_1C0794BAC(&qword_1EF63A230, type metadata accessor for PhaseStatus, (uint64_t)&protocol conformance descriptor for PhaseStatus);
  *(_QWORD *)(a1 + 8) = v2;
  sub_1C0794BAC(&qword_1EF63A238, type metadata accessor for PhaseStatus, (uint64_t)&protocol conformance descriptor for PhaseStatus);
  *(_QWORD *)(a1 + 16) = v3;
}

void sub_1C0A9F980()
{
  sub_1C0794BAC(&qword_1EF63A240, type metadata accessor for PhaseStatus, (uint64_t)&protocol conformance descriptor for PhaseStatus);
}

void sub_1C0A9F9AC()
{
  sub_1C0794BAC(&qword_1EF63A248, type metadata accessor for PhaseStatus, (uint64_t)&protocol conformance descriptor for PhaseStatus);
}

void sub_1C0A9F9D8()
{
  sub_1C0794BAC(&qword_1EF63A250, type metadata accessor for PhaseStatus, (uint64_t)&protocol conformance descriptor for PhaseStatus);
}

void sub_1C0A9FA04(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_1C0794BAC(&qword_1ED749A48, type metadata accessor for ProgressTokens, (uint64_t)&protocol conformance descriptor for ProgressTokens);
  *(_QWORD *)(a1 + 8) = v2;
  sub_1C0794BAC(&qword_1ED749A50, type metadata accessor for ProgressTokens, (uint64_t)&protocol conformance descriptor for ProgressTokens);
  *(_QWORD *)(a1 + 16) = v3;
}

void sub_1C0A9FA60()
{
  sub_1C0794BAC(&qword_1ED749A58, type metadata accessor for ProgressTokens, (uint64_t)&protocol conformance descriptor for ProgressTokens);
}

void sub_1C0A9FA8C()
{
  sub_1C0794BAC(&qword_1ED749A40, type metadata accessor for ProgressTokens, (uint64_t)&protocol conformance descriptor for ProgressTokens);
}

void sub_1C0A9FAB8()
{
  sub_1C0794BAC(&qword_1ED75ACA8, type metadata accessor for ProgressTokens, (uint64_t)&protocol conformance descriptor for ProgressTokens);
}

void sub_1C0A9FAE4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_1C0794BAC(&qword_1ED751040, type metadata accessor for ConstructionProgressTokens, (uint64_t)&protocol conformance descriptor for ConstructionProgressTokens);
  *(_QWORD *)(a1 + 8) = v2;
  sub_1C0794BAC(&qword_1ED751048, type metadata accessor for ConstructionProgressTokens, (uint64_t)&protocol conformance descriptor for ConstructionProgressTokens);
  *(_QWORD *)(a1 + 16) = v3;
}

void sub_1C0A9FB40()
{
  sub_1C0794BAC(&qword_1ED751050, type metadata accessor for ConstructionProgressTokens, (uint64_t)&protocol conformance descriptor for ConstructionProgressTokens);
}

void sub_1C0A9FB6C()
{
  sub_1C0794BAC(&qword_1ED741EF0, type metadata accessor for ConstructionProgressTokens, (uint64_t)&protocol conformance descriptor for ConstructionProgressTokens);
}

void sub_1C0A9FB98()
{
  sub_1C0794BAC(&qword_1ED751038, type metadata accessor for ConstructionProgressTokens, (uint64_t)&protocol conformance descriptor for ConstructionProgressTokens);
}

void sub_1C0A9FBC4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_1C0794BAC(&qword_1ED75A2C0, type metadata accessor for EntityMatch, (uint64_t)&protocol conformance descriptor for EntityMatch);
  *(_QWORD *)(a1 + 8) = v2;
  sub_1C0794BAC(&qword_1ED759C90, type metadata accessor for EntityMatch, (uint64_t)&protocol conformance descriptor for EntityMatch);
  *(_QWORD *)(a1 + 16) = v3;
}

void sub_1C0A9FC20()
{
  sub_1C0794BAC(&qword_1ED759C98, type metadata accessor for EntityMatch, (uint64_t)&protocol conformance descriptor for EntityMatch);
}

void sub_1C0A9FC4C()
{
  sub_1C0794BAC(&qword_1ED759C88, type metadata accessor for EntityMatch, (uint64_t)&protocol conformance descriptor for EntityMatch);
}

void sub_1C0A9FC78()
{
  sub_1C0794BAC(&qword_1ED75A2B8, type metadata accessor for EntityMatch, (uint64_t)&protocol conformance descriptor for EntityMatch);
}

uint64_t getEnumTagSinglePayload for GraphTriple()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for GraphTriple()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for EventTriple()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for EventTriple()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for ExpiredGraphTriple()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ExpiredGraphTriple()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for ExpiredEventTriple()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ExpiredEventTriple()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for ConstructionGraphTriple()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ConstructionGraphTriple()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for ConstructionEventTriple()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ConstructionEventTriple()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for ExpiredConstructionGraphTriple()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ExpiredConstructionGraphTriple()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void _s24IntelligencePlatformCore11GraphTripleVwCP_0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C077B61C();
  sub_1C07B00E8();
  if ((v0 & 0x20000) != 0)
  {
    sub_1C078CB00();
  }
  else
  {
    v1 = sub_1C078784C();
    sub_1C0775828(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 16));
    sub_1C078F638();
    sub_1C079E53C();
    v2 = sub_1C07ADDA8();
    sub_1C0781614(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16));
    sub_1C07A3AE0();
    sub_1C0792FD8();
    sub_1C077584C();
  }
  sub_1C077C798();
}

uint64_t _s24IntelligencePlatformCore11GraphTripleVwxx_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1C078784C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  v7 = sub_1C0779688();
  sub_1C0AA4288(v7);
  v8 = sub_1C077D8EC();
  sub_1C077F7E0(v8);
  v3(a1 + *(int *)(a2 + 28), v2);
  swift_bridgeObjectRelease();
  return sub_1C07A868C();
}

void _s24IntelligencePlatformCore11GraphTripleVwcp_0()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C077B61C();
  v0 = sub_1C078784C();
  sub_1C0775828(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16));
  sub_1C078F638();
  sub_1C079E53C();
  v1 = sub_1C07ADDA8();
  sub_1C0781614(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 16));
  sub_1C07A3AE0();
  sub_1C0792FD8();
  sub_1C077584C();
  sub_1C077C798();
}

void _s24IntelligencePlatformCore11GraphTripleVwca_0()
{
  int *v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1C077B61C();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v6 = sub_1C078784C();
  sub_1C0775828(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24));
  sub_1C078F638();
  sub_1C079E53C();
  v7 = sub_1C07ADDA8();
  sub_1C0781614(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 24));
  sub_1C07A3AE0();
  sub_1C07A52E0(v1[8]);
  sub_1C0778580();
  *(_QWORD *)(v5 + v1[9]) = *(_QWORD *)(v3 + v1[9]);
  *(_QWORD *)(v5 + v1[10]) = *(_QWORD *)(v3 + v1[10]);
  sub_1C07A52E0(v1[11]);
  sub_1C0778580();
  sub_1C07AB480();
  sub_1C077C798();
}

void _s24IntelligencePlatformCore11GraphTripleVwtk_0()
{
  int *v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1C077B61C();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v6 = sub_1C078784C();
  sub_1C0775828(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32));
  sub_1C078F638();
  sub_1C079E53C();
  v7 = sub_1C07ADDA8();
  sub_1C0781614(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32));
  sub_1C07A3AE0();
  sub_1C07A9C28(v1[8]);
  v8 = v1[11];
  *(_QWORD *)(v5 + v1[10]) = *(_QWORD *)(v3 + v1[10]);
  *(_OWORD *)(v5 + v8) = *(_OWORD *)(v3 + v8);
  *(_QWORD *)(v5 + v1[12]) = *(_QWORD *)(v3 + v1[12]);
  sub_1C077C798();
}

void _s24IntelligencePlatformCore11GraphTripleVwta_0()
{
  int *v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1C077B61C();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v6 = sub_1C078784C();
  sub_1C0775828(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40));
  sub_1C078F638();
  sub_1C079E53C();
  v7 = sub_1C07ADDA8();
  sub_1C0781614(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40));
  sub_1C07A3AE0();
  sub_1C07806FC(v1[8]);
  v8 = v1[10];
  *(_QWORD *)(v5 + v1[9]) = *(_QWORD *)(v3 + v1[9]);
  *(_QWORD *)(v5 + v8) = *(_QWORD *)(v3 + v8);
  sub_1C07806FC(v1[11]);
  sub_1C07AB480();
  sub_1C077C798();
}

uint64_t getEnumTagSinglePayload for ExpiredConstructionEventTriple()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1C0AA00E8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;

  sub_1C078784C();
  sub_1C0786404();
  if (v8)
  {
    v6 = sub_1C077EBDC();
  }
  else
  {
    sub_1C0779688();
    sub_1C0786404();
    if (v8)
    {
      v7 = v9;
      v10 = a3[5];
    }
    else
    {
      sub_1C077D8EC();
      sub_1C0786404();
      if (!v11)
      {
        sub_1C077F018(*(_QWORD *)(a1 + a3[8] + 8));
        sub_1C077671C();
        return;
      }
      v7 = v12;
      v10 = a3[6];
    }
    v6 = a1 + v10;
  }
  sub_1C0776754(v6, a2, v7);
}

uint64_t storeEnumTagSinglePayload for ExpiredConstructionEventTriple()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1C0AA017C()
{
  char v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1C078784C();
  sub_1C077AFFC();
  if (v0)
  {
    sub_1C07AB370();
  }
  else
  {
    sub_1C0779688();
    sub_1C077AFFC();
    if (!v0)
    {
      sub_1C077D8EC();
      sub_1C077AFFC();
      if (!v1)
      {
        sub_1C0AA44E0();
        sub_1C077671C();
        return;
      }
    }
  }
  sub_1C077E224();
  sub_1C077F00C(v2, v3, v4, v5);
}

void sub_1C0AA01F8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1C07B9E2C();
  if (v0 <= 0x3F)
  {
    sub_1C07B6974();
    if (v1 <= 0x3F)
    {
      sub_1C0789BB0();
      if (v2 <= 0x3F)
      {
        sub_1C07AC13C();
        sub_1C0779E10();
        sub_1C0795028();
      }
    }
  }
  sub_1C0775804();
}

uint64_t getEnumTagSinglePayload for EntityTriple()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for EntityTriple()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

#error "1C0AA0364: call analysis failed (funcsize=66)"

uint64_t _s24IntelligencePlatformCore12EntityTripleVwxx_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1C078784C();
  sub_1C077B5C8(v6);
  v7 = sub_1C0779688();
  sub_1C0AA4288(v7);
  v8 = sub_1C077D8EC();
  sub_1C077F7E0(v8);
  v3(a1 + *(int *)(a2 + 28), v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C077674C();
  v9 = sub_1C0776744();
  sub_1C077F7E0(v9);
  return sub_1C07A868C();
}

#error "1C0AA0538: call analysis failed (funcsize=77)"

void _s24IntelligencePlatformCore12EntityTripleVwca_0()
{
  uint64_t v0;
  int *v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1C077B61C();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v7 = sub_1C078784C();
  sub_1C0775828(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 24));
  v8 = *(_QWORD *)(*(_QWORD *)(sub_1C078F638() - 8) + 24);
  sub_1C079E53C();
  v9 = sub_1C07ADDA8();
  sub_1C0781614(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24));
  sub_1C07A3AE0();
  sub_1C07A52E0(v2[8]);
  sub_1C0778580();
  *(_QWORD *)(v8 + 8) = sub_1C0AA4330(v2[9]);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0778580();
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v0 + 16);
  v10 = sub_1C077674C();
  v11 = sub_1C0776744();
  sub_1C0785060(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24));
  *(_BYTE *)(v8 + *(int *)(v10 + 28)) = *(_BYTE *)(v0 + *(int *)(v10 + 28));
  sub_1C07A52E0(v2[10]);
  sub_1C0778580();
  *(_QWORD *)(v6 + v2[11]) = *(_QWORD *)(v4 + v2[11]);
  sub_1C0AA4358(v2[12]);
  sub_1C077C798();
}

void _s24IntelligencePlatformCore12EntityTripleVwtk_0()
{
  int *v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1C077B61C();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v6 = sub_1C078784C();
  sub_1C0775828(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32));
  sub_1C078F638();
  sub_1C079E53C();
  v7 = sub_1C07ADDA8();
  sub_1C0781614(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32));
  sub_1C07A3AE0();
  v8 = v1[9];
  *(_OWORD *)(v5 + v1[8]) = *(_OWORD *)(v3 + v1[8]);
  v9 = v5 + v8;
  v10 = v3 + v8;
  *(_OWORD *)v9 = *(_OWORD *)(v3 + v8);
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v3 + v8 + 16);
  v11 = sub_1C077674C();
  v12 = sub_1C0776744();
  sub_1C0785060(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32));
  *(_BYTE *)(v9 + *(int *)(v11 + 28)) = *(_BYTE *)(v10 + *(int *)(v11 + 28));
  sub_1C07A9C28(v1[10]);
  sub_1C0AA4358(v1[12]);
  sub_1C077C798();
}

void _s24IntelligencePlatformCore12EntityTripleVwta_0()
{
  int *v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_1C077B61C();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v6 = sub_1C078784C();
  sub_1C0775828(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40));
  sub_1C078F638();
  sub_1C079E53C();
  v7 = sub_1C07ADDA8();
  sub_1C0781614(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40));
  sub_1C07A3AE0();
  sub_1C07806FC(v1[8]);
  v8 = v1[9];
  v9 = v5 + v8;
  v10 = v3 + v8;
  sub_1C0AA4318();
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  v11 = sub_1C077674C();
  v12 = sub_1C0776744();
  sub_1C0785060(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40));
  *(_BYTE *)(v9 + *(int *)(v11 + 28)) = *(_BYTE *)(v10 + *(int *)(v11 + 28));
  sub_1C07806FC(v1[10]);
  v13 = v1[12];
  *(_QWORD *)(v5 + v1[11]) = *(_QWORD *)(v3 + v1[11]);
  *(_BYTE *)(v5 + v13) = *(_BYTE *)(v3 + v13);
  sub_1C077C798();
}

uint64_t getEnumTagSinglePayload for TranslatedEntityTriple()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1C0AA0824(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;

  sub_1C078784C();
  sub_1C0786404();
  if (v8)
  {
    v6 = sub_1C077EBDC();
  }
  else
  {
    sub_1C0779688();
    sub_1C0786404();
    if (v8)
    {
      v7 = v9;
      v10 = a3[5];
    }
    else
    {
      sub_1C077D8EC();
      sub_1C0786404();
      if (v11)
      {
        v7 = v12;
        v10 = a3[6];
      }
      else
      {
        if ((_DWORD)a2 == 0x7FFFFFFF)
        {
          sub_1C077F018(*(_QWORD *)(a1 + a3[8] + 8));
          sub_1C077671C();
          return;
        }
        v7 = sub_1C077674C();
        v10 = a3[9];
      }
    }
    v6 = a1 + v10;
  }
  sub_1C0776754(v6, a2, v7);
}

uint64_t storeEnumTagSinglePayload for TranslatedEntityTriple()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1C0AA08D4(uint64_t a1, uint64_t a2, int a3)
{
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1C078784C();
  sub_1C077AFFC();
  if (v4)
  {
    sub_1C07AB370();
  }
  else
  {
    sub_1C0779688();
    sub_1C077AFFC();
    if (!v4)
    {
      sub_1C077D8EC();
      sub_1C077AFFC();
      if (!v5)
      {
        if (a3 == 0x7FFFFFFF)
        {
          sub_1C0AA44E0();
          sub_1C077671C();
          return;
        }
        sub_1C077674C();
      }
    }
  }
  sub_1C077E224();
  sub_1C077F00C(v6, v7, v8, v9);
}

void sub_1C0AA096C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1C07B9E2C();
  if (v0 <= 0x3F)
  {
    sub_1C07B6974();
    if (v1 <= 0x3F)
    {
      sub_1C0789BB0();
      if (v2 <= 0x3F)
      {
        sub_1C0AA4490();
        if (v3 <= 0x3F)
        {
          sub_1C07AC13C();
          sub_1C0779E10();
          sub_1C0795028();
        }
      }
    }
  }
  sub_1C0775804();
}

_QWORD *initializeBufferWithCopyOfBuffer for EntityBlock(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1C106D1F8();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = a3[7];
    v15 = (_QWORD *)((char *)v4 + v13);
    v16 = (_QWORD *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    *(_QWORD *)((char *)v4 + v14) = *(_QWORD *)((char *)a2 + v14);
    *((_BYTE *)v4 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  return v4;
}

uint64_t destroy for EntityBlock(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1C106D1F8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for EntityBlock(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1C106D1F8();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = a3[7];
  v14 = (_QWORD *)((char *)a1 + v12);
  v15 = (_QWORD *)((char *)a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  *(_QWORD *)((char *)a1 + v13) = *(_QWORD *)((char *)a2 + v13);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

_QWORD *assignWithCopy for EntityBlock(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  *a1 = *a2;
  a1[1] = a2[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C106D1F8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

_OWORD *initializeWithTake for EntityBlock(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C106D1F8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v10) = *(_QWORD *)((char *)a2 + v10);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

_QWORD *assignWithTake for EntityBlock(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1C106D1F8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v16 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  *((_BYTE *)a1 + v16) = *((_BYTE *)a2 + v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for EntityBlock()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1C0AA0DE4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_1C077F018(*(_QWORD *)(a1 + 8));
    sub_1C077671C();
  }
  else
  {
    sub_1C0776744();
    v3 = sub_1C07BAA80();
    sub_1C0776754(v3, a2, v4);
  }
}

uint64_t storeEnumTagSinglePayload for EntityBlock()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1C0AA0E3C(uint64_t a1, int a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(a1 + 8) = (a2 - 1);
    sub_1C077671C();
  }
  else
  {
    sub_1C0776744();
    sub_1C0AA43D8();
    sub_1C077E224();
    sub_1C077F00C(v3, v4, v5, v6);
  }
}

uint64_t sub_1C0AA0E88()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C106D1F8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ConstructionPhaseStatus()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ConstructionPhaseStatus()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void _s24IntelligencePlatformCore23ConstructionPhaseStatusVwCP_0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C07B00E8();
  if ((v3 & 0x20000) != 0)
  {
    sub_1C078CB00();
  }
  else
  {
    v4 = v2;
    v5 = v1[1];
    *v0 = *v1;
    v0[1] = v5;
    v0[2] = v1[2];
    v6 = sub_1C077674C();
    sub_1C0776744();
    sub_1C077584C();
    sub_1C077ED44();
    sub_1C0AA445C(*(int *)(v6 + 28));
    sub_1C0AA445C(*(int *)(v4 + 20));
  }
  sub_1C0776760();
}

uint64_t _s24IntelligencePlatformCore23ConstructionPhaseStatusVwxx_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(sub_1C077674C() + 24);
  v3 = sub_1C0776744();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

void _s24IntelligencePlatformCore23ConstructionPhaseStatusVwcp_0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  sub_1C078C2B8();
  v1 = v0[1];
  *v2 = *v0;
  v2[1] = v1;
  v2[2] = v0[2];
  v3 = sub_1C077674C();
  sub_1C0776744();
  sub_1C077584C();
  sub_1C077ED44();
  sub_1C0794678(*(int *)(v3 + 28));
  sub_1C0776760();
}

void _s24IntelligencePlatformCore23ConstructionPhaseStatusVwca_0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  sub_1C078C2B8();
  *v3 = *v2;
  *(_QWORD *)(v1 + 8) = v2[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0778580();
  *(_QWORD *)(v1 + 16) = *(_QWORD *)(v0 + 16);
  v4 = sub_1C077674C();
  v5 = sub_1C0776744();
  sub_1C0785060(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24));
  sub_1C0794678(*(int *)(v4 + 28));
  sub_1C07785E4();
}

void _s24IntelligencePlatformCore23ConstructionPhaseStatusVwtk_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1C078C2B8();
  *(_OWORD *)v1 = *(_OWORD *)v0;
  *(_QWORD *)(v1 + 16) = *(_QWORD *)(v0 + 16);
  v2 = sub_1C077674C();
  v3 = sub_1C0776744();
  sub_1C0785060(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  sub_1C0794678(*(int *)(v2 + 28));
  sub_1C07785E4();
}

void _s24IntelligencePlatformCore23ConstructionPhaseStatusVwta_0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1C078C2B8();
  v3 = v2[1];
  *v1 = *v2;
  v1[1] = v3;
  swift_bridgeObjectRelease();
  v1[2] = *(_QWORD *)(v0 + 16);
  v4 = sub_1C077674C();
  v5 = sub_1C0776744();
  sub_1C0785060(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40));
  sub_1C0794678(*(int *)(v4 + 28));
  sub_1C07785E4();
}

uint64_t getEnumTagSinglePayload for PhaseStatus()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1C0AA11D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C077674C();
  if (*(_DWORD *)(*(_QWORD *)(v4 - 8) + 84) == (_DWORD)a2)
    sub_1C0776754(a1, a2, v4);
  else
    sub_1C077671C();
}

uint64_t storeEnumTagSinglePayload for PhaseStatus()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1C0AA1244(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1C077674C();
  sub_1C077AFFC();
  if (v7)
  {
    sub_1C07AB370();
    sub_1C077E224();
    sub_1C077F00C(v8, v9, v10, v11);
  }
  else
  {
    *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 3;
    sub_1C077671C();
  }
}

uint64_t sub_1C0AA1294()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C0AA4490();
  if (v1 <= 0x3F)
  {
    sub_1C07AC13C();
    swift_initStructMetadata();
    return sub_1C0795028();
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ProgressTokens()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ProgressTokens()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

#error "1C0AA1394: call analysis failed (funcsize=43)"

void _s24IntelligencePlatformCore14ProgressTokensVwxx_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  unint64_t v9;

  v4 = sub_1C0776744();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v6 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  v7 = sub_1C077674C();
  v5(v6 + *(int *)(v7 + 24), v4);
  v8 = (uint64_t *)(a1 + *(int *)(a2 + 28));
  v9 = v8[1];
  if (v9 >> 60 == 15)
    sub_1C07785E4();
  else
    sub_1C07B3374(*v8, v9);
}

#error "1C0AA14D4: call analysis failed (funcsize=36)"

void _s24IntelligencePlatformCore14ProgressTokensVwca_0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;

  sub_1C077B61C();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  sub_1C0776744();
  sub_1C0AA4514();
  sub_1C07AA844(v8, v6);
  sub_1C0AA445C(v4[5]);
  *(_QWORD *)(v1 + 8) = sub_1C0AA4330(v4[6]);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C077B5B4();
  *(_QWORD *)(v1 + 16) = *(_QWORD *)(v2 + 16);
  v9 = sub_1C077674C();
  sub_1C077B224(v9);
  sub_1C0AA43C0();
  v11 = (_OWORD *)(v6 + v10);
  v12 = *(_QWORD *)(v6 + v10 + 8);
  if ((unint64_t)v0[1] >> 60 != 15)
  {
    if (v12 >> 60 != 15)
    {
      sub_1C07AB37C();
      v13 = *v0;
      v14 = v0[1];
      *v0 = (uint64_t)v11;
      v0[1] = v12;
      sub_1C07B3374(v13, v14);
      goto LABEL_8;
    }
    sub_1C09E3F90((uint64_t)v0);
    goto LABEL_6;
  }
  if (v12 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)v0 = *v11;
    goto LABEL_8;
  }
  sub_1C07AB37C();
  *v0 = (uint64_t)v11;
  v0[1] = v12;
LABEL_8:
  *(_QWORD *)(v8 + v4[8]) = *(_QWORD *)(v6 + v4[8]);
  sub_1C0AA4358(v4[9]);
  sub_1C077C798();
}

void _s24IntelligencePlatformCore14ProgressTokensVwtk_0()
{
  int *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1C077B61C();
  sub_1C078C2B8();
  sub_1C0776744();
  sub_1C0AA4514();
  sub_1C07AA844(v2, v1);
  v4 = v0[6];
  *(_BYTE *)(v2 + v0[5]) = *(_BYTE *)(v1 + v0[5]);
  v5 = v2 + v4;
  v6 = v1 + v4;
  *(_OWORD *)v5 = *(_OWORD *)(v1 + v4);
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v1 + v4 + 16);
  v7 = sub_1C077674C();
  sub_1C077B224(v7);
  *(_BYTE *)(v5 + *(int *)(v3 + 28)) = *(_BYTE *)(v6 + *(int *)(v3 + 28));
  v8 = v0[8];
  *(_OWORD *)(v2 + v0[7]) = *(_OWORD *)(v1 + v0[7]);
  *(_QWORD *)(v2 + v8) = *(_QWORD *)(v1 + v8);
  *(_BYTE *)(v2 + v0[9]) = *(_BYTE *)(v1 + v0[9]);
  sub_1C077C798();
}

void _s24IntelligencePlatformCore14ProgressTokensVwta_0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;

  sub_1C077B61C();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  sub_1C0776744();
  sub_1C0AA4514();
  sub_1C07AA844(v6, v4);
  v7 = *(int *)(v2 + 24);
  *(_BYTE *)(v6 + *(int *)(v2 + 20)) = *(_BYTE *)(v4 + *(int *)(v2 + 20));
  v8 = v6 + v7;
  v9 = v4 + v7;
  sub_1C0AA4318();
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  v10 = sub_1C077674C();
  sub_1C077B224(v10);
  sub_1C0AA43C0();
  v12 = (uint64_t *)(v4 + v11);
  v13 = v0[1];
  if (v13 >> 60 != 15)
  {
    v14 = v12[1];
    if (v14 >> 60 != 15)
    {
      v15 = *v0;
      *v0 = *v12;
      v0[1] = v14;
      sub_1C07B3374(v15, v13);
      goto LABEL_6;
    }
    sub_1C09E3F90((uint64_t)v0);
  }
  *(_OWORD *)v0 = *(_OWORD *)v12;
LABEL_6:
  sub_1C0AA42C0();
  sub_1C077C798();
}

uint64_t getEnumTagSinglePayload for ConstructionProgressTokens()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1C0AA1744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  unsigned int v10;

  sub_1C0776744();
  sub_1C0786404();
  if (v8)
  {
    v6 = sub_1C077EBDC();
LABEL_7:
    sub_1C0776754(v6, a2, v7);
    return;
  }
  sub_1C077674C();
  sub_1C0786404();
  if (v8)
  {
    v7 = v9;
    v6 = a1 + *(int *)(a3 + 24);
    goto LABEL_7;
  }
  v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 36));
  if (v10 >= 2)
    sub_1C07BA0EC(v10);
  sub_1C077671C();
}

uint64_t storeEnumTagSinglePayload for ConstructionProgressTokens()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1C0AA17CC(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1C0776744();
  sub_1C077AFFC();
  if (v7)
  {
    sub_1C07AB370();
  }
  else
  {
    sub_1C077674C();
    sub_1C077AFFC();
    if (!v7)
    {
      *(_BYTE *)(a1 + *(int *)(a4 + 36)) = a2 + 1;
      sub_1C077671C();
      return;
    }
  }
  sub_1C077E224();
  sub_1C077F00C(v8, v9, v10, v11);
}

uint64_t sub_1C0AA1838()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1C106D1F8();
  if (v1 <= 0x3F)
  {
    result = sub_1C0AA4490();
    if (v2 <= 0x3F)
    {
      sub_1C07AC13C();
      swift_initStructMetadata();
      return sub_1C0795028();
    }
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for EntityMatch(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1C106D1F8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = sub_1C106E590();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v12(&a1[a3[6]], &a2[a3[6]], v11);
    v13 = a3[8];
    *(_DWORD *)&a1[a3[7]] = *(_DWORD *)&a2[a3[7]];
    *(_QWORD *)&a1[v13] = *(_QWORD *)&a2[v13];
    v14 = a3[10];
    a1[a3[9]] = a2[a3[9]];
    *(_QWORD *)&a1[v14] = *(_QWORD *)&a2[v14];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  return a1;
}

uint64_t destroy for EntityMatch(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);

  v4 = sub_1C106D1F8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1C106E590();
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(a1 + *(int *)(a2 + 24), v6);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EntityMatch(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;

  v6 = sub_1C106D1F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1C106E590();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  v12 = a3[8];
  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  v13 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

uint64_t assignWithCopy for EntityMatch(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1C106D1F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1C106E590();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for EntityMatch(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;

  v6 = sub_1C106D1F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1C106E590();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  v12 = a3[8];
  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  v13 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  return a1;
}

uint64_t assignWithTake for EntityMatch(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;

  v6 = sub_1C106D1F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1C106E590();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  v12 = a3[8];
  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  v13 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EntityMatch()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1C0AA1DBC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  sub_1C0776744();
  sub_1C0786404();
  if (v5)
  {
    v3 = sub_1C077EBDC();
  }
  else
  {
    sub_1C078784C();
    sub_1C0786404();
    if (!v5)
    {
      sub_1C077671C();
      return;
    }
    v3 = sub_1C07BAA80();
  }
  sub_1C0776754(v3, a2, v4);
}

uint64_t storeEnumTagSinglePayload for EntityMatch()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1C0AA1E40(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1C0776744();
  sub_1C077AFFC();
  if (v7)
  {
    sub_1C07AB370();
  }
  else
  {
    sub_1C078784C();
    sub_1C077AFFC();
    if (!v7)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 40)) = a2;
      sub_1C077671C();
      return;
    }
    sub_1C0AA43D8();
  }
  sub_1C077E224();
  sub_1C077F00C(v8, v9, v10, v11);
}

uint64_t sub_1C0AA1EA4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1C106D1F8();
  if (v1 <= 0x3F)
  {
    result = sub_1C106E590();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for EntityMatch.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1C0AA1FA4 + 4 * byte_1C109A044[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1C0AA1FD8 + 4 * byte_1C109A03F[v4]))();
}

uint64_t sub_1C0AA1FD8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0AA1FE0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0AA1FE8);
  return result;
}

uint64_t sub_1C0AA1FF4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0AA1FFCLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1C0AA2000(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0AA2008(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EntityMatch.CodingKeys()
{
  return &type metadata for EntityMatch.CodingKeys;
}

ValueMetadata *type metadata accessor for ConstructionProgressTokens.CodingKeys()
{
  return &type metadata for ConstructionProgressTokens.CodingKeys;
}

ValueMetadata *type metadata accessor for ProgressTokens.CodingKeys()
{
  return &type metadata for ProgressTokens.CodingKeys;
}

ValueMetadata *type metadata accessor for PhaseStatus.CodingKeys()
{
  return &type metadata for PhaseStatus.CodingKeys;
}

uint64_t _s24IntelligencePlatformCore11PhaseStatusV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return sub_1C078BFF0(-1);
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return sub_1C078BFF0((*a1 | (v4 << 8)) - 2);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return sub_1C078BFF0((*a1 | (v4 << 8)) - 2);
    }
    v4 = a1[1];
    if (a1[1])
      return sub_1C078BFF0((*a1 | (v4 << 8)) - 2);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return sub_1C078BFF0(v8);
}

uint64_t _s24IntelligencePlatformCore11PhaseStatusV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C0AA2134 + 4 * byte_1C109A04E[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C0AA2168 + 4 * byte_1C109A049[v4]))();
}

uint64_t sub_1C0AA216C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0AA2174);
  return result;
}

_BYTE *sub_1C0AA217C(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0AA2184);
  return sub_1C078BFE8((_BYTE *)a1, a2 + 1);
}

ValueMetadata *type metadata accessor for ConstructionPhaseStatus.CodingKeys()
{
  return &type metadata for ConstructionPhaseStatus.CodingKeys;
}

ValueMetadata *type metadata accessor for EntityBlock.CodingKeys()
{
  return &type metadata for EntityBlock.CodingKeys;
}

ValueMetadata *type metadata accessor for TranslatedEntityTriple.CodingKeys()
{
  return &type metadata for TranslatedEntityTriple.CodingKeys;
}

ValueMetadata *type metadata accessor for EntityTriple.CodingKeys()
{
  return &type metadata for EntityTriple.CodingKeys;
}

ValueMetadata *type metadata accessor for ExpiredConstructionEventTriple.CodingKeys()
{
  return &type metadata for ExpiredConstructionEventTriple.CodingKeys;
}

ValueMetadata *type metadata accessor for ExpiredConstructionGraphTriple.CodingKeys()
{
  return &type metadata for ExpiredConstructionGraphTriple.CodingKeys;
}

ValueMetadata *type metadata accessor for ConstructionEventTriple.CodingKeys()
{
  return &type metadata for ConstructionEventTriple.CodingKeys;
}

ValueMetadata *type metadata accessor for ConstructionGraphTriple.CodingKeys()
{
  return &type metadata for ConstructionGraphTriple.CodingKeys;
}

ValueMetadata *type metadata accessor for ExpiredEventTriple.CodingKeys()
{
  return &type metadata for ExpiredEventTriple.CodingKeys;
}

ValueMetadata *type metadata accessor for ExpiredGraphTriple.CodingKeys()
{
  return &type metadata for ExpiredGraphTriple.CodingKeys;
}

ValueMetadata *type metadata accessor for EventTriple.CodingKeys()
{
  return &type metadata for EventTriple.CodingKeys;
}

uint64_t _s24IntelligencePlatformCore22TranslatedEntityTripleV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return sub_1C078BFF0(-1);
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return sub_1C078BFF0((*a1 | (v4 << 8)) - 9);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return sub_1C078BFF0((*a1 | (v4 << 8)) - 9);
    }
    v4 = a1[1];
    if (a1[1])
      return sub_1C078BFF0((*a1 | (v4 << 8)) - 9);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return sub_1C078BFF0(v8);
}

uint64_t _s24IntelligencePlatformCore22TranslatedEntityTripleV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1C0AA2320 + 4 * byte_1C109A058[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1C0AA2354 + 4 * byte_1C109A053[v4]))();
}

uint64_t sub_1C0AA2358(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0AA2360);
  return result;
}

_BYTE *sub_1C0AA2368(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0AA2370);
  return sub_1C078BFE8((_BYTE *)a1, a2 + 8);
}

ValueMetadata *type metadata accessor for GraphTriple.CodingKeys()
{
  return &type metadata for GraphTriple.CodingKeys;
}

uint64_t sub_1C0AA2390(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1C0AA23DC + 4 * byte_1C109A062[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1C0AA2410 + 4 * byte_1C109A05D[v4]))();
}

uint64_t sub_1C0AA2410(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0AA2418(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0AA2420);
  return result;
}

uint64_t sub_1C0AA242C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0AA2434);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1C0AA2438(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0AA2440(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ConstructionStatus()
{
  sub_1C0779604();
}

unint64_t sub_1C0AA245C()
{
  unint64_t result;

  result = qword_1EF63A448;
  if (!qword_1EF63A448)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109D26C, &unk_1E7A1DB10);
    atomic_store(result, (unint64_t *)&qword_1EF63A448);
  }
  return result;
}

unint64_t sub_1C0AA249C()
{
  unint64_t result;

  result = qword_1EF63A450;
  if (!qword_1EF63A450)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109D324, &type metadata for GraphTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF63A450);
  }
  return result;
}

unint64_t sub_1C0AA24DC()
{
  unint64_t result;

  result = qword_1EF63A458;
  if (!qword_1EF63A458)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109D3DC, &type metadata for EventTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF63A458);
  }
  return result;
}

unint64_t sub_1C0AA251C()
{
  unint64_t result;

  result = qword_1EF63A460;
  if (!qword_1EF63A460)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109D494, &type metadata for ExpiredGraphTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF63A460);
  }
  return result;
}

unint64_t sub_1C0AA255C()
{
  unint64_t result;

  result = qword_1EF63A468;
  if (!qword_1EF63A468)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109D54C, &type metadata for ExpiredEventTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF63A468);
  }
  return result;
}

unint64_t sub_1C0AA259C()
{
  unint64_t result;

  result = qword_1EF63A470;
  if (!qword_1EF63A470)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109D604, &type metadata for ConstructionGraphTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF63A470);
  }
  return result;
}

unint64_t sub_1C0AA25DC()
{
  unint64_t result;

  result = qword_1EF63A478;
  if (!qword_1EF63A478)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109D6BC, &type metadata for ConstructionEventTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF63A478);
  }
  return result;
}

unint64_t sub_1C0AA261C()
{
  unint64_t result;

  result = qword_1EF63A480;
  if (!qword_1EF63A480)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109D774, &type metadata for ExpiredConstructionGraphTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF63A480);
  }
  return result;
}

unint64_t sub_1C0AA265C()
{
  unint64_t result;

  result = qword_1EF63A488;
  if (!qword_1EF63A488)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109D82C, &type metadata for ExpiredConstructionEventTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF63A488);
  }
  return result;
}

unint64_t sub_1C0AA269C()
{
  unint64_t result;

  result = qword_1EF63A490;
  if (!qword_1EF63A490)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109D8E4, &type metadata for EntityTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF63A490);
  }
  return result;
}

unint64_t sub_1C0AA26DC()
{
  unint64_t result;

  result = qword_1EF63A498;
  if (!qword_1EF63A498)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109D99C, &type metadata for TranslatedEntityTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF63A498);
  }
  return result;
}

unint64_t sub_1C0AA271C()
{
  unint64_t result;

  result = qword_1EF63A4A0;
  if (!qword_1EF63A4A0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109DA54, &type metadata for EntityBlock.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF63A4A0);
  }
  return result;
}

unint64_t sub_1C0AA275C()
{
  unint64_t result;

  result = qword_1EF63A4A8;
  if (!qword_1EF63A4A8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109DB0C, &type metadata for ConstructionPhaseStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF63A4A8);
  }
  return result;
}

unint64_t sub_1C0AA279C()
{
  unint64_t result;

  result = qword_1EF63A4B0;
  if (!qword_1EF63A4B0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109DBC4, &type metadata for PhaseStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF63A4B0);
  }
  return result;
}

unint64_t sub_1C0AA27DC()
{
  unint64_t result;

  result = qword_1EF63A4B8;
  if (!qword_1EF63A4B8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109DC7C, &type metadata for ProgressTokens.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF63A4B8);
  }
  return result;
}

unint64_t sub_1C0AA281C()
{
  unint64_t result;

  result = qword_1EF63A4C0;
  if (!qword_1EF63A4C0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109DD34, &type metadata for ConstructionProgressTokens.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF63A4C0);
  }
  return result;
}

unint64_t sub_1C0AA285C()
{
  unint64_t result;

  result = qword_1EF63A4C8;
  if (!qword_1EF63A4C8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109DDEC, &type metadata for EntityMatch.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF63A4C8);
  }
  return result;
}

unint64_t sub_1C0AA289C()
{
  unint64_t result;

  result = qword_1ED75A298;
  if (!qword_1ED75A298)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109DD5C, &type metadata for EntityMatch.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED75A298);
  }
  return result;
}

unint64_t sub_1C0AA28DC()
{
  unint64_t result;

  result = qword_1ED75A290;
  if (!qword_1ED75A290)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109DD84, &type metadata for EntityMatch.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED75A290);
  }
  return result;
}

unint64_t sub_1C0AA291C()
{
  unint64_t result;

  result = qword_1ED751018;
  if (!qword_1ED751018)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109DCA4, &type metadata for ConstructionProgressTokens.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED751018);
  }
  return result;
}

unint64_t sub_1C0AA295C()
{
  unint64_t result;

  result = qword_1ED751010;
  if (!qword_1ED751010)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109DCCC, &type metadata for ConstructionProgressTokens.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED751010);
  }
  return result;
}

unint64_t sub_1C0AA299C()
{
  unint64_t result;

  result = qword_1ED749A38;
  if (!qword_1ED749A38)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109DBEC, &type metadata for ProgressTokens.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED749A38);
  }
  return result;
}

unint64_t sub_1C0AA29DC()
{
  unint64_t result;

  result = qword_1ED749A30;
  if (!qword_1ED749A30)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109DC14, &type metadata for ProgressTokens.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED749A30);
  }
  return result;
}

unint64_t sub_1C0AA2A1C()
{
  unint64_t result;

  result = qword_1EF63A4D0;
  if (!qword_1EF63A4D0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109DB34, &type metadata for PhaseStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF63A4D0);
  }
  return result;
}

unint64_t sub_1C0AA2A5C()
{
  unint64_t result;

  result = qword_1EF63A4D8;
  if (!qword_1EF63A4D8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109DB5C, &type metadata for PhaseStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF63A4D8);
  }
  return result;
}

unint64_t sub_1C0AA2A9C()
{
  unint64_t result;

  result = qword_1ED750E58;
  if (!qword_1ED750E58)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109DA7C, &type metadata for ConstructionPhaseStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED750E58);
  }
  return result;
}

unint64_t sub_1C0AA2ADC()
{
  unint64_t result;

  result = qword_1ED750E50;
  if (!qword_1ED750E50)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109DAA4, &type metadata for ConstructionPhaseStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED750E50);
  }
  return result;
}

unint64_t sub_1C0AA2B1C()
{
  unint64_t result;

  result = qword_1ED75A1A8;
  if (!qword_1ED75A1A8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109D9C4, &type metadata for EntityBlock.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED75A1A8);
  }
  return result;
}

unint64_t sub_1C0AA2B5C()
{
  unint64_t result;

  result = qword_1ED75A1A0;
  if (!qword_1ED75A1A0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109D9EC, &type metadata for EntityBlock.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED75A1A0);
  }
  return result;
}

unint64_t sub_1C0AA2B9C()
{
  unint64_t result;

  result = qword_1ED75C300;
  if (!qword_1ED75C300)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109D90C, &type metadata for TranslatedEntityTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED75C300);
  }
  return result;
}

unint64_t sub_1C0AA2BDC()
{
  unint64_t result;

  result = qword_1ED75C2F8;
  if (!qword_1ED75C2F8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109D934, &type metadata for TranslatedEntityTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED75C2F8);
  }
  return result;
}

unint64_t sub_1C0AA2C1C()
{
  unint64_t result;

  result = qword_1ED75A468;
  if (!qword_1ED75A468)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109D854, &type metadata for EntityTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED75A468);
  }
  return result;
}

unint64_t sub_1C0AA2C5C()
{
  unint64_t result;

  result = qword_1ED75A460;
  if (!qword_1ED75A460)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109D87C, &type metadata for EntityTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED75A460);
  }
  return result;
}

unint64_t sub_1C0AA2C9C()
{
  unint64_t result;

  result = qword_1EF63A4E0;
  if (!qword_1EF63A4E0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109D79C, &type metadata for ExpiredConstructionEventTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF63A4E0);
  }
  return result;
}

unint64_t sub_1C0AA2CDC()
{
  unint64_t result;

  result = qword_1EF63A4E8;
  if (!qword_1EF63A4E8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109D7C4, &type metadata for ExpiredConstructionEventTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF63A4E8);
  }
  return result;
}

unint64_t sub_1C0AA2D1C()
{
  unint64_t result;

  result = qword_1EF63A4F0;
  if (!qword_1EF63A4F0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109D6E4, &type metadata for ExpiredConstructionGraphTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF63A4F0);
  }
  return result;
}

unint64_t sub_1C0AA2D5C()
{
  unint64_t result;

  result = qword_1EF63A4F8;
  if (!qword_1EF63A4F8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109D70C, &type metadata for ExpiredConstructionGraphTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF63A4F8);
  }
  return result;
}

unint64_t sub_1C0AA2D9C()
{
  unint64_t result;

  result = qword_1ED750D40;
  if (!qword_1ED750D40)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109D62C, &type metadata for ConstructionEventTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED750D40);
  }
  return result;
}

unint64_t sub_1C0AA2DDC()
{
  unint64_t result;

  result = qword_1ED750D38;
  if (!qword_1ED750D38)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109D654, &type metadata for ConstructionEventTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED750D38);
  }
  return result;
}

unint64_t sub_1C0AA2E1C()
{
  unint64_t result;

  result = qword_1ED750DD0;
  if (!qword_1ED750DD0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109D574, &type metadata for ConstructionGraphTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED750DD0);
  }
  return result;
}

unint64_t sub_1C0AA2E5C()
{
  unint64_t result;

  result = qword_1ED750DC8;
  if (!qword_1ED750DC8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109D59C, &type metadata for ConstructionGraphTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED750DC8);
  }
  return result;
}

unint64_t sub_1C0AA2E9C()
{
  unint64_t result;

  result = qword_1ED760DA8;
  if (!qword_1ED760DA8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109D4BC, &type metadata for ExpiredEventTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED760DA8);
  }
  return result;
}

unint64_t sub_1C0AA2EDC()
{
  unint64_t result;

  result = qword_1ED760DA0;
  if (!qword_1ED760DA0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109D4E4, &type metadata for ExpiredEventTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED760DA0);
  }
  return result;
}

unint64_t sub_1C0AA2F1C()
{
  unint64_t result;

  result = qword_1ED74A488;
  if (!qword_1ED74A488)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109D404, &type metadata for ExpiredGraphTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED74A488);
  }
  return result;
}

unint64_t sub_1C0AA2F5C()
{
  unint64_t result;

  result = qword_1ED74A480;
  if (!qword_1ED74A480)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109D42C, &type metadata for ExpiredGraphTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED74A480);
  }
  return result;
}

unint64_t sub_1C0AA2F9C()
{
  unint64_t result;

  result = qword_1ED75F050;
  if (!qword_1ED75F050)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109D34C, &type metadata for EventTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED75F050);
  }
  return result;
}

unint64_t sub_1C0AA2FDC()
{
  unint64_t result;

  result = qword_1ED75F048;
  if (!qword_1ED75F048)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109D374, &type metadata for EventTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED75F048);
  }
  return result;
}

unint64_t sub_1C0AA301C()
{
  unint64_t result;

  result = qword_1ED75F0E0;
  if (!qword_1ED75F0E0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109D294, &type metadata for GraphTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED75F0E0);
  }
  return result;
}

unint64_t sub_1C0AA305C()
{
  unint64_t result;

  result = qword_1ED75F0D8;
  if (!qword_1ED75F0D8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109D2BC, &type metadata for GraphTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED75F0D8);
  }
  return result;
}

unint64_t sub_1C0AA3098()
{
  unint64_t result;

  result = qword_1ED750AE0;
  if (!qword_1ED750AE0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109D1F4, &unk_1E7A1DB10);
    atomic_store(result, (unint64_t *)&qword_1ED750AE0);
  }
  return result;
}

unint64_t sub_1C0AA30D4()
{
  unint64_t result;

  result = qword_1EF63A598;
  if (!qword_1EF63A598)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109E9D4, &type metadata for EntityEmbedding.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF63A598);
  }
  return result;
}

unint64_t sub_1C0AA3110()
{
  unint64_t result;

  result = qword_1ED759FE0;
  if (!qword_1ED759FE0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109E8CC, &type metadata for EntityPair.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED759FE0);
  }
  return result;
}

uint64_t _s24IntelligencePlatformCore26ConstructionProgressTokensV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return sub_1C078BFF0(-1);
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return sub_1C078BFF0((*a1 | (v4 << 8)) - 6);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return sub_1C078BFF0((*a1 | (v4 << 8)) - 6);
    }
    v4 = a1[1];
    if (a1[1])
      return sub_1C078BFF0((*a1 | (v4 << 8)) - 6);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return sub_1C078BFF0(v8);
}

uint64_t _s24IntelligencePlatformCore26ConstructionProgressTokensV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1C0AA321C + 4 * byte_1C109A06C[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1C0AA3250 + 4 * byte_1C109A067[v4]))();
}

uint64_t sub_1C0AA3254(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0AA325CLL);
  return result;
}

_BYTE *sub_1C0AA3264(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0AA326CLL);
  return sub_1C078BFE8((_BYTE *)a1, a2 + 5);
}

ValueMetadata *type metadata accessor for EntityPair.CodingKeys()
{
  return &type metadata for EntityPair.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for EntityEmbedding.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C0AA32D8 + 4 * byte_1C109A076[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C0AA330C + 4 * byte_1C109A071[v4]))();
}

uint64_t sub_1C0AA330C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0AA3314(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0AA331CLL);
  return result;
}

uint64_t sub_1C0AA3328(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0AA3330);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C0AA3334(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0AA333C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EntityEmbedding.CodingKeys()
{
  return &type metadata for EntityEmbedding.CodingKeys;
}

uint64_t destroy for KeyValuePair(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1C07B3374(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
}

_QWORD *initializeWithCopy for KeyValuePair(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[4];
  v6 = a2[5];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C07B0E28(v5, v6);
  a1[4] = v5;
  a1[5] = v6;
  return a1;
}

_QWORD *assignWithCopy for KeyValuePair(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  v5 = a2[4];
  v4 = a2[5];
  sub_1C07B0E28(v5, v4);
  v6 = a1[4];
  v7 = a1[5];
  a1[4] = v5;
  a1[5] = v4;
  sub_1C07B3374(v6, v7);
  return a1;
}

_QWORD *assignWithTake for KeyValuePair(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a1[4];
  v7 = a1[5];
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  sub_1C07B3374(v6, v7);
  return a1;
}

void type metadata accessor for EntityEmbedding()
{
  sub_1C0779604();
}

char *sub_1C0AA34C8(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1C106D1F8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = sub_1C106E590();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v12(&a1[a3[6]], &a2[a3[6]], v11);
    v13 = a3[8];
    a1[a3[7]] = a2[a3[7]];
    *(_QWORD *)&a1[v13] = *(_QWORD *)&a2[v13];
    a1[a3[9]] = a2[a3[9]];
  }
  return a1;
}

uint64_t sub_1C0AA35B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v8)(uint64_t, uint64_t);

  v4 = sub_1C106D1F8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1C106E590();
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v8(v5, v6);
  return ((uint64_t (*)(uint64_t, uint64_t))v8)(a1 + *(int *)(a2 + 24), v6);
}

uint64_t sub_1C0AA3644(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v6 = sub_1C106D1F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1C106E590();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  v12 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_1C0AA3708(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1C106D1F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1C106E590();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_1C0AA37D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v6 = sub_1C106D1F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1C106E590();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  v12 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_1C0AA3894(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v6 = sub_1C106D1F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1C106E590();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  v12 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_1C0AA3958()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1C0AA3964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  unsigned int v9;

  sub_1C0776744();
  sub_1C0786404();
  if (v8)
  {
    v6 = sub_1C077EBDC();
LABEL_7:
    sub_1C0776754(v6, a2, v7);
    return;
  }
  sub_1C078784C();
  sub_1C0786404();
  if (v8)
  {
    v6 = sub_1C07BAA80();
    goto LABEL_7;
  }
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 2)
    sub_1C07BA0EC(v9);
  sub_1C077671C();
}

uint64_t sub_1C0AA39D4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1C0AA39E0(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1C0776744();
  sub_1C077AFFC();
  if (v7)
  {
    sub_1C07AB370();
  }
  else
  {
    sub_1C078784C();
    sub_1C077AFFC();
    if (!v7)
    {
      *(_BYTE *)(a1 + *(int *)(a4 + 28)) = a2 + 1;
      sub_1C077671C();
      return;
    }
    sub_1C0AA43D8();
  }
  sub_1C077E224();
  sub_1C077F00C(v8, v9, v10, v11);
}

uint64_t type metadata accessor for EntityPair(uint64_t a1)
{
  return sub_1C0784B00(a1, qword_1ED75A048);
}

uint64_t sub_1C0AA3A58()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1C106D1F8();
  if (v1 <= 0x3F)
  {
    result = sub_1C106E590();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t _s24IntelligencePlatformCore11EntityBlockV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1C0AA3B4C + 4 * byte_1C109A080[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1C0AA3B80 + 4 * byte_1C109A07B[v4]))();
}

uint64_t sub_1C0AA3B84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0AA3B8CLL);
  return result;
}

_BYTE *sub_1C0AA3B94(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0AA3B9CLL);
  return sub_1C078BFE8((_BYTE *)a1, a2 + 4);
}

void type metadata accessor for ProgressTokenColumn()
{
  sub_1C0779604();
}

unint64_t sub_1C0AA3BBC()
{
  unint64_t result;

  result = qword_1EF63A5A0;
  if (!qword_1EF63A5A0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109E484, &unk_1E7A1DD48);
    atomic_store(result, (unint64_t *)&qword_1EF63A5A0);
  }
  return result;
}

void sub_1C0AA3BF8()
{
  sub_1C0794BAC(&qword_1ED759C58, type metadata accessor for EntityPair, (uint64_t)&unk_1C109E4AC);
}

void sub_1C0AA3C24()
{
  sub_1C0794BAC(&qword_1ED75A028, type metadata accessor for EntityPair, (uint64_t)&unk_1C109E964);
}

void sub_1C0AA3C50(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_1C0794BAC(&qword_1ED75A030, type metadata accessor for EntityPair, (uint64_t)&unk_1C109E91C);
  *(_QWORD *)(a1 + 8) = v2;
  sub_1C0794BAC(&qword_1ED759C60, type metadata accessor for EntityPair, (uint64_t)&unk_1C109EA9C);
  *(_QWORD *)(a1 + 16) = v3;
}

unint64_t sub_1C0AA3CB0()
{
  unint64_t result;

  result = qword_1EF63A5A8;
  if (!qword_1EF63A5A8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109E5D0, &unk_1E7A1DCA8);
    atomic_store(result, (unint64_t *)&qword_1EF63A5A8);
  }
  return result;
}

unint64_t sub_1C0AA3CF0()
{
  unint64_t result;

  result = qword_1EF63A5B0;
  if (!qword_1EF63A5B0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109EA6C, &unk_1E7A1DCA8);
    atomic_store(result, (unint64_t *)&qword_1EF63A5B0);
  }
  return result;
}

unint64_t sub_1C0AA3D30()
{
  unint64_t result;

  result = qword_1EF63A5B8;
  if (!qword_1EF63A5B8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109E688, &unk_1E7A1DCA8);
    atomic_store(result, (unint64_t *)&qword_1EF63A5B8);
  }
  return result;
}

unint64_t sub_1C0AA3D6C(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1C0AA3D98();
  result = sub_1C07D8E94();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0AA3D98()
{
  unint64_t result;

  result = qword_1EF63A5C0;
  if (!qword_1EF63A5C0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109EA24, &unk_1E7A1DCA8);
    atomic_store(result, (unint64_t *)&qword_1EF63A5C0);
  }
  return result;
}

unint64_t sub_1C0AA3DD8()
{
  unint64_t result;

  result = qword_1EF63A5C8;
  if (!qword_1EF63A5C8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109E7EC, &type metadata for EntityEmbedding.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF63A5C8);
  }
  return result;
}

unint64_t sub_1C0AA3E18()
{
  unint64_t result;

  result = qword_1EF63A5D0;
  if (!qword_1EF63A5D0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109E8A4, &type metadata for EntityPair.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF63A5D0);
  }
  return result;
}

unint64_t sub_1C0AA3E58()
{
  unint64_t result;

  result = qword_1ED759FF0;
  if (!qword_1ED759FF0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109E814, &type metadata for EntityPair.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED759FF0);
  }
  return result;
}

unint64_t sub_1C0AA3E98()
{
  unint64_t result;

  result = qword_1ED759FE8;
  if (!qword_1ED759FE8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109E83C, &type metadata for EntityPair.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED759FE8);
  }
  return result;
}

unint64_t sub_1C0AA3ED8()
{
  unint64_t result;

  result = qword_1EF63A5D8;
  if (!qword_1EF63A5D8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109E620, &unk_1E7A1DCA8);
    atomic_store(result, (unint64_t *)&qword_1EF63A5D8);
  }
  return result;
}

unint64_t sub_1C0AA3F18()
{
  unint64_t result;

  result = qword_1EF63A5E0;
  if (!qword_1EF63A5E0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109E75C, &type metadata for EntityEmbedding.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF63A5E0);
  }
  return result;
}

unint64_t sub_1C0AA3F58()
{
  unint64_t result;

  result = qword_1EF63A5E8;
  if (!qword_1EF63A5E8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109E784, &type metadata for EntityEmbedding.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF63A5E8);
  }
  return result;
}

void sub_1C0AA3F94()
{
  sub_1C0794BAC(&qword_1ED759C68, type metadata accessor for EntityPair, (uint64_t)&unk_1C109E4FC);
}

unint64_t sub_1C0AA3FC4()
{
  unint64_t result;

  result = qword_1ED75BDA8;
  if (!qword_1ED75BDA8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109EB0C, &unk_1E7A1DD48);
    atomic_store(result, (unint64_t *)&qword_1ED75BDA8);
  }
  return result;
}

unint64_t sub_1C0AA4004()
{
  unint64_t result;

  result = qword_1ED75BD98;
  if (!qword_1ED75BD98)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109E3E4, &unk_1E7A1DD48);
    atomic_store(result, (unint64_t *)&qword_1ED75BD98);
  }
  return result;
}

unint64_t sub_1C0AA4044()
{
  unint64_t result;

  result = qword_1ED75BDA0;
  if (!qword_1ED75BDA0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109E394, &unk_1E7A1DD48);
    atomic_store(result, (unint64_t *)&qword_1ED75BDA0);
  }
  return result;
}

unint64_t sub_1C0AA4084()
{
  unint64_t result;

  result = qword_1ED75BD90;
  if (!qword_1ED75BD90)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109E3BC, &unk_1E7A1DD48);
    atomic_store(result, (unint64_t *)&qword_1ED75BD90);
  }
  return result;
}

unint64_t sub_1C0AA40C0()
{
  unint64_t result;

  result = qword_1ED75BDB0;
  if (!qword_1ED75BDB0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109E40C, &unk_1E7A1DD48);
    atomic_store(result, (unint64_t *)&qword_1ED75BDB0);
  }
  return result;
}

unint64_t sub_1C0AA40FC()
{
  unint64_t result;

  result = qword_1EF63A5F0;
  if (!qword_1EF63A5F0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109E718, &unk_1E7A1DCA8);
    atomic_store(result, (unint64_t *)&qword_1EF63A5F0);
  }
  return result;
}

unint64_t sub_1C0AA4138()
{
  unint64_t result;

  result = qword_1EF63A608;
  if (!qword_1EF63A608)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109E6F0, &unk_1E7A1DCA8);
    atomic_store(result, (unint64_t *)&qword_1EF63A608);
  }
  return result;
}

unint64_t sub_1C0AA4174()
{
  unint64_t result;

  result = qword_1ED75BD88;
  if (!qword_1ED75BD88)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109EADC, &unk_1E7A1DD48);
    atomic_store(result, (unint64_t *)&qword_1ED75BD88);
  }
  return result;
}

uint64_t _s24IntelligencePlatformCore11EventTripleV17databaseTableNameSSvgZ_0()
{
  return 0x72675F746E657665;
}

uint64_t sub_1C0AA41FC()
{
  _QWORD *v0;
  uint64_t (*v1)(void);
  uint64_t v2;

  sub_1C07A9480(v0, v2);
  return v1();
}

uint64_t sub_1C0AA4218()
{
  return sub_1C106FC94();
}

uint64_t sub_1C0AA4224()
{
  return sub_1C106FC94();
}

uint64_t sub_1C0AA4240()
{
  return sub_1C106FC94();
}

double sub_1C0AA425C(uint64_t a1)
{
  uint64_t v1;

  return *(double *)(v1 + *(int *)(a1 + 40));
}

uint64_t sub_1C0AA4288(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t sub_1C0AA42A0()
{
  return sub_1C1070E34();
}

uint64_t sub_1C0AA42B4()
{
  return sub_1C106FC94();
}

uint64_t sub_1C0AA42C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(int *)(v2 + 36);
  *(_QWORD *)(v0 + *(int *)(v2 + 32)) = *(_QWORD *)(v1 + *(int *)(v2 + 32));
  *(_BYTE *)(v0 + v3) = *(_BYTE *)(v1 + v3);
  return v0;
}

uint64_t sub_1C0AA42DC()
{
  return sub_1C1070AE0();
}

uint64_t sub_1C0AA42F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 104) + 8))(v1 + a1, v2);
}

uint64_t sub_1C0AA4304()
{
  return sub_1C10708F4();
}

uint64_t sub_1C0AA4318()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *v0 = *v1;
  v0[1] = v2;
  return swift_bridgeObjectRelease();
}

void sub_1C0AA4328(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_1C080ABC4(a1, a2, v2);
}

uint64_t sub_1C0AA4330@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + a1) = *(_QWORD *)(v2 + a1);
  return *(_QWORD *)(v2 + a1 + 8);
}

uint64_t sub_1C0AA4348()
{
  return sub_1C1070AA4();
}

uint64_t sub_1C0AA4358@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + a1) = *(_BYTE *)(v2 + a1);
  return v1;
}

uint64_t sub_1C0AA4378@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + a1);
}

uint64_t sub_1C0AA4390()
{
  return sub_1C106FA0C();
}

uint64_t sub_1C0AA43A0()
{
  return sub_1C106FA0C();
}

void sub_1C0AA43C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + *(int *)(v0 + 28)) = *(_BYTE *)(v2 + *(int *)(v0 + 28));
}

uint64_t sub_1C0AA43D8()
{
  uint64_t v0;
  uint64_t v1;

  return v0 + *(int *)(v1 + 20);
}

uint64_t sub_1C0AA43E8@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v1;

  return sub_1C07B0E28(*a1, v1);
}

uint64_t sub_1C0AA4408@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 104) = a1;
  return v1 - 104;
}

uint64_t sub_1C0AA4420@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v3 + a1, v2);
}

uint64_t sub_1C0AA4430@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(a1 + 8))(*(_QWORD *)(v1 - 104), *(_QWORD *)(v1 - 144));
}

uint64_t sub_1C0AA4440()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 216);
}

uint64_t sub_1C0AA4450()
{
  return sub_1C106E560();
}

void sub_1C0AA445C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + a1) = *(_BYTE *)(v2 + a1);
}

void sub_1C0AA4468(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_1C080ABC4(a1, a2, v2);
}

uint64_t sub_1C0AA4470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;

  return v10(a10, a9, v11);
}

void sub_1C0AA447C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 68) = 3;
}

uint64_t sub_1C0AA4490()
{
  return type metadata accessor for Source();
}

void sub_1C0AA4498()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 2;
}

uint64_t sub_1C0AA44A4()
{
  return sub_1C1070E94();
}

uint64_t sub_1C0AA44B8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1C0AA44CC()
{
  return sub_1C1070774();
}

uint64_t sub_1C0AA44D8()
{
  uint64_t v0;

  return _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(*(_QWORD *)(v0 - 120));
}

void sub_1C0AA44E0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + *(int *)(v2 + 32) + 8) = (v0 - 1);
}

uint64_t sub_1C0AA44F4(uint64_t (*a1)(_QWORD))
{
  return a1(0);
}

uint64_t sub_1C0AA4500()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1C0AA4534()
{
  return sub_1C106FB5C();
}

uint64_t sub_1C0AA4540()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

uint64_t sub_1C0AA4548()
{
  return sub_1C106C2EC();
}

uint64_t sub_1C0AA4550()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 - 112))(0);
}

uint64_t sub_1C0AA4570(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 184) + 8))(a1, *(_QWORD *)(v1 - 176));
}

uint64_t sub_1C0AA457C()
{
  return sub_1C0AA4ABC();
}

void sub_1C0AA4588(uint64_t a1)
{
  id v1;

  if (*(_QWORD *)(a1 + 16))
    v1 = *(id *)(a1 + 32);
  sub_1C0778534();
}

double sub_1C0AA45C0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  if (*(_QWORD *)(a1 + 16))
  {
    sub_1C0A51F50(a1 + 32, a2);
  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

void sub_1C0AA45E4(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 16))
    sub_1C077AE90();
  sub_1C0778534();
}

uint64_t sub_1C0AA461C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0AA4B78(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870], a2);
}

void sub_1C0AA4628(uint64_t a1)
{
  char v1;
  char v2;
  uint64_t v3;

  sub_1C0F2239C(a1);
  if ((v1 & 1) != 0)
    goto LABEL_7;
  sub_1C0781E74();
  if (!v2)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return;
  }
  sub_1C078B028();
  if (!v2)
  {
    sub_1C078DBC8();
    sub_1C0F225E8(v3);
  }
  sub_1C0778534();
}

uint64_t sub_1C0AA4674@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0AA4B78(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0D3B6B0], a2);
}

void sub_1C0AA4680(uint64_t a1)
{
  char v1;
  char v2;

  sub_1C0F2239C(a1);
  if ((v1 & 1) != 0)
    goto LABEL_7;
  sub_1C0781E74();
  if (!v2)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return;
  }
  sub_1C078B028();
  if (!v2)
  {
    sub_1C078DBC8();
    sub_1C0F22FD0();
  }
}

void sub_1C0AA46D0(uint64_t a1)
{
  char v1;
  char v2;
  uint64_t v3;

  sub_1C0F2239C(a1);
  if ((v1 & 1) != 0)
    goto LABEL_7;
  sub_1C0781E74();
  if (!v2)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return;
  }
  sub_1C078B028();
  if (!v2)
  {
    sub_1C078DBC8();
    sub_1C0F22FD4(v3);
  }
}

uint64_t sub_1C0AA4724@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0AA48A4(a1, (uint64_t (*)(void))sub_1C0F2239C, (void (*)(void))sub_1C0F23050, (uint64_t (*)(_QWORD))MEMORY[0x1E0D3CE28], a2);
}

void sub_1C0AA4740(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  char v3;
  char v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  sub_1C08CE490(a1);
  if ((v3 & 1) != 0)
    goto LABEL_7;
  sub_1C0781E74();
  if (!v4)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return;
  }
  sub_1C078B028();
  if (v4)
  {
    a2[1] = 0u;
    a2[2] = 0u;
    *a2 = 0u;
  }
  else
  {
    sub_1C078DBC8();
    sub_1C0E2B7C0(v5, v6, v7, v8);
  }
}

uint64_t sub_1C0AA47A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0AA4B78(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0D3D450], a2);
}

void sub_1C0AA47AC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[8];

  sub_1C08CE490(a1);
  if ((v6 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v5)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return;
  }
  sub_1C078BDEC();
  if (v7)
  {
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  else
  {
    v8 = sub_1C077F7F4();
    sub_1C0E62120(v8, v9);
    v12[0] = v10;
    v12[1] = v11;
    *(_QWORD *)a2 = v10;
    *(_QWORD *)(a2 + 8) = v11;
    sub_1C0853A7C(v2, a2 + 16);
    sub_1C077AE90();
    sub_1C0784B6C((uint64_t)v12, &qword_1ED744758);
  }
  sub_1C07A09FC();
}

void sub_1C0AA4840(uint64_t a1)
{
  char v1;
  char v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C0945CB4(a1);
  if ((v1 & 1) != 0)
    goto LABEL_7;
  sub_1C0781E74();
  if (!v2)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return;
  }
  sub_1C078B028();
  if (!v2)
  {
    sub_1C078DBC8();
    sub_1C0AA9A78(v3, v4, v5, v6);
  }
  sub_1C0778534();
}

uint64_t sub_1C0AA4888@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0AA48A4(a1, (uint64_t (*)(void))sub_1C08CE490, (void (*)(void))sub_1C0E2B81C, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0C48], a2);
}

uint64_t sub_1C0AA48A4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, void (*a3)(void)@<X2>, uint64_t (*a4)(_QWORD)@<X3>, uint64_t a5@<X8>)
{
  uint64_t result;
  int v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  result = a2();
  if ((v11 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v10)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
  {
    v12 = 1;
  }
  else
  {
    a3();
    v12 = 0;
  }
  v13 = a4(0);
  return sub_1C077F00C(a5, v12, 1, v13);
}

uint64_t sub_1C0AA4930@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0AA4B78(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0D3C430], a2);
}

void sub_1C0AA493C(uint64_t a1)
{
  char v1;
  char v2;

  sub_1C0F2239C(a1);
  if ((v1 & 1) != 0)
    goto LABEL_7;
  sub_1C0781E74();
  if (!v2)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return;
  }
  sub_1C078B028();
  if (!v2)
  {
    sub_1C078DBC8();
    sub_1C0F22FD0();
  }
}

uint64_t sub_1C0AA498C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0AA4B78(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0D3DA00], a2);
}

uint64_t sub_1C0AA4998()
{
  return sub_1C0AA49B0();
}

uint64_t sub_1C0AA49A4()
{
  return sub_1C0AA49B0();
}

uint64_t sub_1C0AA49B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1C0AA9CAC();
  sub_1C07B64E4(v1, v2);
  if (v0)
  {
    v3 = sub_1C078E044();
    sub_1C0845A4C(v3, v4, v5);
  }
  v6 = sub_1C07AF278();
  return sub_1C079BD5C(v6, v7, v8, v9);
}

uint64_t sub_1C0AA49F4()
{
  return sub_1C0AA49B0();
}

uint64_t sub_1C0AA4A00()
{
  return sub_1C0AA49B0();
}

uint64_t sub_1C0AA4A0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0AA4B78(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0D3CE28], a2);
}

void sub_1C0AA4A18(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[7];

  sub_1C08CE490(a1);
  if ((v6 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v5)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return;
  }
  sub_1C078BDEC();
  if (v7)
  {
    *(_QWORD *)(a2 + 48) = 0;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
  }
  else
  {
    v8 = sub_1C077F7F4();
    sub_1C0E62220(v8, v9);
    v12[0] = v10;
    v12[1] = v11;
    *(_QWORD *)a2 = v10;
    *(_QWORD *)(a2 + 8) = v11;
    sub_1C0784AC0(v2, a2 + 16);
    sub_1C077AE90();
    sub_1C0784B6C((uint64_t)v12, &qword_1ED744760);
  }
  sub_1C07A09FC();
}

uint64_t sub_1C0AA4AB0()
{
  return sub_1C0AA4ABC();
}

uint64_t sub_1C0AA4ABC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1C0AA9CAC();
  sub_1C07ACF80(v1);
  if (v0)
  {
    v2 = sub_1C078E044();
    sub_1C078A8CC(v2, v3, v4);
  }
  v5 = sub_1C07AF278();
  return sub_1C079BD5C(v5, v6, v7, v8);
}

double sub_1C0AA4B04@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  if (*(_QWORD *)(a1 + 16))
  {
    sub_1C0784AC0(a1 + 32, a2);
  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1C0AA4B3C()
{
  return sub_1C0AA49B0();
}

uint64_t sub_1C0AA4B48()
{
  return sub_1C0AA49B0();
}

uint64_t sub_1C0AA4B54()
{
  return sub_1C0AA49B0();
}

uint64_t sub_1C0AA4B60()
{
  return sub_1C0AA49B0();
}

uint64_t sub_1C0AA4B6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0AA4B78(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0D3D608], a2);
}

uint64_t sub_1C0AA4B78@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = sub_1C07B64E4(a1, a2);
  if (v5)
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a3, a1+ ((*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80)), v6);
  v7 = sub_1C07AF278();
  return sub_1C077F00C(v7, v8, v9, v10);
}

uint64_t sub_1C0AA4BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0AA4BF4(a1, a2, a3, a4, (uint64_t)sub_1C0AA9C30);
}

uint64_t sub_1C0AA4BE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0AA4BF4(a1, a2, a3, a4, (uint64_t)sub_1C0AA9BD4);
}

uint64_t sub_1C0AA4BF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v7[7];
  uint64_t v8;

  v7[2] = &v8;
  v7[3] = a1;
  v7[4] = a2;
  v7[5] = a3;
  v7[6] = a4;
  swift_retain();
  sub_1C07C050C(a5, (uint64_t)v7);
  return swift_release();
}

uint64_t sub_1C0AA4C5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1C07ACF80(&qword_1ED75E630);
  sub_1C0800A9C(v0, qword_1ED78C320);
  v1 = sub_1C079E000(v0, (uint64_t)qword_1ED78C320);
  v2 = type metadata accessor for Configuration();
  return sub_1C07B2D8C(v1, 1, 1, v2);
}

void sub_1C0AA4CBC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  os_log_type_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;

  v2 = sub_1C07ACF80(&qword_1ED75E630);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED75E808 != -1)
    swift_once();
  v5 = sub_1C077585C();
  v6 = sub_1C079E000(v5, (uint64_t)qword_1ED78D7A0);
  v7 = sub_1C077C0FC();
  v8 = sub_1C10703A8();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)sub_1C0775854();
    *(_WORD *)v9 = 0;
    sub_1C077F048(&dword_1C0771000, v7, v8, "GraphSimulationXPC: starting...", v9);
    sub_1C0776778();
  }

  if (qword_1ED741508 != -1)
    swift_once();
  sub_1C079E000(v2, (uint64_t)qword_1ED78C320);
  sub_1C0845A4C(a1, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v10 = sub_1C0779D10();
  sub_1C0794D1C((uint64_t)v4, 0, v11, v10);
  swift_beginAccess();
  v12 = sub_1C0788970();
  sub_1C0800ADC(v12, v13);
  swift_endAccess();
  sub_1C08A5CAC(0, (unint64_t *)&qword_1ED760690);
  sub_1C077C230();
  v14 = sub_1C0BBE34C();
  v15 = (void *)qword_1ED78C7D0;
  qword_1ED78C7D0 = (uint64_t)v14;

  v16 = (void *)qword_1ED78C7D0;
  if (qword_1ED78C7D0)
  {
    v17 = objc_allocWithZone((Class)type metadata accessor for GraphSimulationXPC.Delegate());
    v18 = v16;
    qword_1ED78C7C8 = (uint64_t)objc_msgSend(v17, sel_init);
    swift_unknownObjectRelease();
    -[NSObject setDelegate:](v18, sel_setDelegate_, qword_1ED78C7C8);
    -[NSObject resume](v18, sel_resume);
  }
  else
  {
    v19 = v6;
    v18 = sub_1C106F538();
    v20 = sub_1C107039C();
    if (sub_1C077F60C(v20))
    {
      v21 = (uint8_t *)sub_1C0775854();
      *(_WORD *)v21 = 0;
      sub_1C077F048(&dword_1C0771000, v18, v19, "Failed to create KGSimulation XPC service", v21);
      sub_1C0776778();
    }
  }

}

uint64_t sub_1C0AA4F78(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)();
  uint64_t v23;

  v3 = sub_1C07ACF80(&qword_1ED75E630);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED741508 != -1)
    swift_once();
  v6 = sub_1C079E000(v3, (uint64_t)qword_1ED78C320);
  sub_1C0775864();
  sub_1C078A8CC(v6, (uint64_t)v5, &qword_1ED75E630);
  v7 = sub_1C0779D10();
  result = sub_1C07BFF44();
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v9 = *(_QWORD *)&v5[*(int *)(v7 + 20)];
    sub_1C0AA9B98((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    if ((v9 & 1) != 0)
    {
      if (qword_1ED75E808 != -1)
        swift_once();
      v15 = sub_1C077585C();
      sub_1C079E000(v15, (uint64_t)qword_1ED78D7A0);
      v16 = sub_1C077C0FC();
      v17 = sub_1C10703A8();
      if (sub_1C077F60C(v17))
      {
        v18 = (uint8_t *)sub_1C0775854();
        *(_WORD *)v18 = 0;
        sub_1C077F048(&dword_1C0771000, v16, (os_log_type_t)a2, "GraphSimulationXPC: service is in no-op mode.", v18);
        sub_1C0776778();
      }

    }
    else
    {
      sub_1C077C230();
      if ((sub_1C0C47FA8() & 1) != 0)
      {
        v10 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_1EF6D4EA8);
        sub_1C0784EE0((uint64_t)v10, sel_setExportedInterface_);

        v11 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for GraphSimulationXPC.Server()), sel_init);
        sub_1C0784EE0((uint64_t)v11, sel_setExportedObject_);

        v22 = sub_1C0AA523C;
        v23 = 0;
        v12 = MEMORY[0x1E0C809B0];
        v20 = MEMORY[0x1E0C809B0];
        v21 = 1107296256;
        v13 = sub_1C077E8F4((uint64_t)&unk_1E7A1E068);
        sub_1C0784EE0((uint64_t)v13, sel_setInterruptionHandler_);
        _Block_release(v13);
        v22 = sub_1C0AA5250;
        v23 = 0;
        v20 = v12;
        v21 = 1107296256;
        v14 = sub_1C077E8F4((uint64_t)&unk_1E7A1E090);
        sub_1C0784EE0((uint64_t)v14, sel_setInvalidationHandler_);
        _Block_release(v14);
        objc_msgSend(a2, sel_resume);
        return 1;
      }
    }
    return 0;
  }
  return result;
}

id GraphSimulationXPC.Server.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void sub_1C0AA523C()
{
  sub_1C08E2704(MEMORY[0x1E0DF2280], "GraphSimulationXPC: connection interrupted.");
}

void sub_1C0AA5250()
{
  sub_1C08E2704(MEMORY[0x1E0DF2290], "GraphSimulationXPC: connection invalidated.");
}

uint64_t GraphSimulationXPC.Server.mockTripleEntityTagging(withContactId:inferredRelationshipLabel:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4[18] = a3;
  v4[19] = a4;
  v4[16] = a1;
  v4[17] = a2;
  v5 = sub_1C106EB24();
  v4[20] = v5;
  v4[21] = *(_QWORD *)(v5 - 8);
  v4[22] = sub_1C0779644();
  v6 = sub_1C106E41C();
  v4[23] = v6;
  v4[24] = *(_QWORD *)(v6 - 8);
  v4[25] = sub_1C077CF7C();
  v4[26] = sub_1C0775870();
  v7 = sub_1C106E590();
  v4[27] = v7;
  v4[28] = *(_QWORD *)(v7 - 8);
  v4[29] = sub_1C077CF7C();
  v4[30] = sub_1C0775870();
  v4[31] = sub_1C0775870();
  sub_1C07ACF80(&qword_1ED75F138);
  v4[32] = sub_1C0779644();
  v8 = sub_1C106F874();
  v4[33] = v8;
  v4[34] = *(_QWORD *)(v8 - 8);
  v4[35] = sub_1C0779644();
  v9 = sub_1C106F868();
  v4[36] = v9;
  v4[37] = *(_QWORD *)(v9 - 8);
  v4[38] = sub_1C077CF7C();
  v4[39] = sub_1C0775870();
  v10 = sub_1C106FB50();
  v4[40] = v10;
  v4[41] = *(_QWORD *)(v10 - 8);
  v4[42] = sub_1C0779644();
  v11 = sub_1C106D1F8();
  v4[43] = v11;
  v4[44] = *(_QWORD *)(v11 - 8);
  v4[45] = sub_1C077CF7C();
  v4[46] = sub_1C0775870();
  v4[47] = sub_1C0775870();
  v12 = type metadata accessor for Source();
  v4[48] = v12;
  v4[49] = *(_QWORD *)(v12 - 8);
  v4[50] = sub_1C0779644();
  sub_1C07ACF80(&qword_1ED75EA10);
  v4[51] = sub_1C0779644();
  sub_1C106D990();
  v4[52] = sub_1C0779644();
  v13 = sub_1C106D9A8();
  v4[53] = v13;
  v4[54] = *(_QWORD *)(v13 - 8);
  v4[55] = sub_1C077CF7C();
  v4[56] = sub_1C0775870();
  v4[57] = sub_1C0775870();
  v4[58] = sub_1C0775870();
  v4[59] = sub_1C0775870();
  v4[60] = sub_1C0775870();
  v14 = sub_1C106D9B4();
  v4[61] = v14;
  v4[62] = *(_QWORD *)(v14 - 8);
  v4[63] = sub_1C0779644();
  sub_1C07ACF80((uint64_t *)&unk_1ED75EA40);
  v4[64] = sub_1C077CF7C();
  v4[65] = sub_1C0775870();
  v4[66] = sub_1C0775870();
  v4[67] = sub_1C0775870();
  v4[68] = sub_1C0775870();
  v4[69] = sub_1C07ACF80(&qword_1ED75E630);
  v4[70] = sub_1C0779644();
  return swift_task_switch();
}

void sub_1C0AA5524()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t inited;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, _QWORD);
  uint64_t v38;
  void (*v39)(uint64_t);
  NSObject *v40;
  os_log_type_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(void);
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int *v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(unint64_t, uint64_t, uint64_t);
  uint64_t v93;
  void (*v94)(uint64_t, uint64_t, uint64_t);
  void (*v95)(uint64_t, uint64_t, uint64_t);
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  void (*v150)(uint64_t, uint64_t, uint64_t);
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  _QWORD *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t (*v167)(uint64_t, uint64_t, uint64_t);
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t *v209;
  void (*v210)(uint64_t, uint64_t);
  uint64_t v211;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  void (*v272)(uint64_t, uint64_t);
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  void (*v336)(uint64_t, _QWORD, uint64_t);
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  void (*v376)(_QWORD, uint64_t);
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t (*v421)(void);
  uint64_t v422;
  void (*v423)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v424)(void);
  uint64_t v425;
  uint64_t (*v426)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v427)(void);
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t (*v455)(void);
  uint64_t (*v456)(void);
  uint64_t (*v457)(void);
  uint64_t (*v458)(void);
  uint64_t (*v459)(void);
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  void (*v465)(uint64_t, _QWORD);
  uint64_t v466;
  uint64_t v467;
  void (*v468)(uint64_t, uint64_t);
  uint64_t v469;
  unint64_t v470;
  uint64_t v471;
  unint64_t v472;

  sub_1C08A5CAC(0, (unint64_t *)&qword_1ED762BF0);
  static NSUserDefaults.isGraphStoreManuallyOverridden.setter(1);
  if (qword_1ED762B18 != -1)
    swift_once();
  v1 = sub_1C077585C();
  sub_1C079E000(v1, (uint64_t)qword_1ED762AF8);
  v2 = sub_1C077C0FC();
  v3 = sub_1C1070390();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)sub_1C0775854();
    *(_WORD *)v4 = 0;
    sub_1C0776778();
  }

  if (qword_1ED741508 != -1)
    swift_once();
  v5 = *(_QWORD *)(v0 + 560);
  sub_1C079E000(*(_QWORD *)(v0 + 552), (uint64_t)qword_1ED78C320);
  sub_1C0775864();
  v6 = sub_1C0788970();
  sub_1C078A8CC(v6, v7, v8);
  v9 = sub_1C0779D10();
  if (sub_1C07B2D80(v5, 1, v9) == 1)
  {
    __break(1u);
    JUMPOUT(0x1C0AA6E28);
  }
  v10 = *(_QWORD *)(v0 + 560);
  type metadata accessor for GraphStore();
  swift_allocObject();
  GraphStore.init(config:)(v10);
  sub_1C0794D1C(*(_QWORD *)(v0 + 544), 1, v11, *(_QWORD *)(v0 + 216));
  v12 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0 + 88) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0 + 96) = v12;
  if (qword_1ED756B28 != -1)
    swift_once();
  v13 = *(_QWORD *)(v0 + 392);
  v14 = type metadata accessor for SourceIdPrefix();
  sub_1C079E000(v14, (uint64_t)&unk_1ED78D4E0);
  String.base64EncodedSHA(withPrefix:)();
  v469 = v15;
  v470 = v16;
  v17 = sub_1C07ACF80(&qword_1ED7603F0);
  v18 = *(_QWORD *)(v13 + 72);
  v19 = *(unsigned __int8 *)(v13 + 80);
  v20 = (v19 + 32) & ~v19;
  v433 = v20 + v18;
  v438 = v17;
  v428 = v19 | 7;
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1C1079220;
  v443 = v20;
  v22 = v21 + v20;
  if (qword_1ED7622C8 != -1)
    swift_once();
  v358 = *(_QWORD *)(v0 + 128);
  v393 = *(_QWORD *)(v0 + 544);
  v468 = *(void (**)(uint64_t, uint64_t))(v0 + 504);
  v283 = *(_QWORD *)(v0 + 496);
  v23 = *(_QWORD *)(v0 + 480);
  v24 = *(_QWORD *)(v0 + 464);
  v25 = *(_QWORD *)(v0 + 472);
  v26 = *(_QWORD *)(v0 + 456);
  v462 = *(_QWORD *)(v0 + 448);
  v464 = *(_QWORD *)(v0 + 488);
  v27 = *(_QWORD *)(v0 + 432);
  v448 = *(_QWORD *)(v0 + 440);
  v28 = *(_QWORD *)(v0 + 424);
  v271 = *(_QWORD *)(v0 + 416);
  v461 = *(_QWORD *)(v0 + 408);
  v401 = *(_QWORD *)(v0 + 400);
  v347 = *(_QWORD *)(v0 + 136);
  v467 = sub_1C079E000(*(_QWORD *)(v0 + 384), (uint64_t)&unk_1ED7622B0);
  sub_1C0845A4C(v467, v22, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  SourceSet.init(arrayLiteral:)(&v471, v21);
  v29 = *MEMORY[0x1E0D3C448];
  v336 = *(void (**)(uint64_t, _QWORD, uint64_t))(v27 + 104);
  sub_1C077E250(v23, v29);
  sub_1C077E250(v25, v29);
  sub_1C077E250(v24, v29);
  sub_1C077E250(v26, v29);
  sub_1C077E250(v462, v29);
  sub_1C077E250(v448, v29);
  LOBYTE(v472) = 0;
  sub_1C0CDBB20(v23, 0, v25, 0, v24, 0, v26, 0, v271, v462, 0, v448);
  sub_1C106D9C0();
  v272 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
  sub_1C0797D8C(v448);
  sub_1C0797D8C(v462);
  sub_1C0797D8C(v26);
  sub_1C0797D8C(v24);
  sub_1C0797D8C(v25);
  sub_1C0797D8C(v23);
  v449 = sub_1C106D2DC();
  sub_1C0794D1C(v461, 1, v30, v449);
  v31 = (_QWORD *)swift_task_alloc();
  v31[2] = v469;
  v31[3] = v470;
  v31[4] = v0 + 88;
  v31[5] = v0 + 96;
  sub_1C0AA4BF4((uint64_t)v468, v461, (uint64_t)sub_1C0AA76F8, (uint64_t)v31, (uint64_t)sub_1C0AA9C30);
  sub_1C07758BC();
  sub_1C0784B6C(v461, &qword_1ED75EA10);
  v376 = *(void (**)(_QWORD, uint64_t))(v283 + 8);
  v376(v468, v464);
  v32 = sub_1C07796D8();
  sub_1C0AA7010(v32);
  sub_1C0775844();
  sub_1C07796D8();
  sub_1C0D4124C();
  sub_1C0775844();
  sub_1C07ACF80(&qword_1ED75E838);
  *(_OWORD *)(sub_1C0AA9CA0() + 16) = xmmword_1C1079220;
  sub_1C106DD08();
  sub_1C0AA7870();
  sub_1C07ACF80(&qword_1ED762CB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1079220;
  *(_QWORD *)(inited + 32) = v358;
  *(_QWORD *)(inited + 40) = v347;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AA7704();
  *(_OWORD *)(sub_1C0AA9CA0() + 16) = xmmword_1C1079220;
  sub_1C106DE70();
  sub_1C0AA7870();
  v35 = v34;
  v336(v23, v29, v28);
  sub_1C077E250(v25, v29);
  sub_1C077E250(v24, v29);
  sub_1C077E250(v26, v29);
  v336(v462, v29, v28);
  v213 = v462;
  v223 = v35;
  sub_1C106D864();
  sub_1C0775844();
  sub_1C077589C();
  sub_1C07767AC();
  v272(v462, v28);
  sub_1C078264C(v26);
  sub_1C078264C(v24);
  sub_1C078264C(v25);
  sub_1C078264C(v23);
  sub_1C07B2D8C(v461, 1, 1, v449);
  v36 = sub_1C0794DA4();
  *(_QWORD *)(v36 + 16) = v393;
  sub_1C0AA4BF4((uint64_t)v468, v461, (uint64_t)sub_1C0AA7994, v36, (uint64_t)sub_1C0AA9C30);
  sub_1C07796F8();
  sub_1C0784B6C(v461, &qword_1ED75EA10);
  v376(v468, v464);
  v37 = GraphStore.currentUser()();
  sub_1C0845A4C(v467, v401, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C106D1A4();
  if (qword_1ED761458 != -1)
    swift_once();
  sub_1C079E000(v1, (uint64_t)qword_1ED78D818);
  v38 = sub_1C0788970();
  v39(v38);
  swift_bridgeObjectRetain_n();
  v40 = sub_1C106F538();
  v41 = sub_1C1070378();
  v42 = os_log_type_enabled(v40, v41);
  v43 = *(_QWORD *)(v0 + 352);
  v465 = v37;
  if (v42)
  {
    v44 = sub_1C0775854();
    v471 = sub_1C0775854();
    *(_DWORD *)v44 = 136381187;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    *(_QWORD *)(v0 + 112) = sub_1C0788DAC(v469, v470, &v471);
    sub_1C10705AC();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v44 + 12) = 2080;
    sub_1C0794BAC(&qword_1ED759F68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3BB08], MEMORY[0x1E0D3BB40]);
    v45 = sub_1C1070C0C();
    *(_QWORD *)(v0 + 120) = sub_1C0788DAC(v45, v46, &v471);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    sub_1C0783134(*(uint64_t (**)(uint64_t, uint64_t))(v43 + 8));
    *(_WORD *)(v44 + 22) = 1024;
    *(_DWORD *)(v0 + 568) = 1;
    sub_1C10705AC();
    _os_log_impl(&dword_1C0771000, v40, v41, "Source: generating identifier for: %{private}s : %s : %{BOOL}d", (uint8_t *)v44, 0x1Cu);
    swift_arrayDestroy();
    sub_1C0776778();
  }
  sub_1C07758A4();
  sub_1C0783134(*(uint64_t (**)(uint64_t, uint64_t))(v43 + 8));

  v48 = *(_QWORD *)(v0 + 328);
  v47 = *(_QWORD *)(v0 + 336);
  v49 = *(_QWORD *)(v0 + 320);
  v471 = v469;
  v472 = v470;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  v51 = v471;
  v50 = v472;
  sub_1C106FB44();
  sub_1C106FB20();
  v53 = v52;
  (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v47, v49);
  if (v53 >> 60 != 15)
  {
    sub_1C0775844();
    sub_1C0794BAC((unint64_t *)&qword_1ED762B30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9940], MEMORY[0x1E0CA9930]);
    sub_1C106F85C();
    __asm { BR              X10 }
  }
  sub_1C07796D8();
  v54 = sub_1C106F538();
  v55 = sub_1C1070390();
  if (os_log_type_enabled(v54, v55))
  {
    v56 = (uint8_t *)sub_1C0775854();
    v471 = sub_1C0775854();
    *(_DWORD *)v56 = 136380675;
    sub_1C07796D8();
    *(_QWORD *)(v0 + 104) = sub_1C0788DAC(v51, v50, &v471);
    sub_1C10705AC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C0771000, v54, v55, "Source: failed to encode identifier as UTF8 data: %{private}s", v56, 0xCu);
    swift_arrayDestroy();
    sub_1C0776778();
  }
  sub_1C07758A4();

  v57 = *(_QWORD *)(v0 + 400);
  v58 = *(_QWORD *)(v0 + 376);
  v59 = *(_QWORD *)(v0 + 344);
  sub_1C07B2D8C(*(_QWORD *)(v0 + 536), 1, 1, *(_QWORD *)(v0 + 216));
  v468(v58, v59);
  sub_1C0AA9B98(v57, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  if (*((_QWORD *)v465 + 2))
  {
    v60 = *(_QWORD *)(v0 + 536);
    v61 = *(_QWORD *)(v0 + 256);
    sub_1C0AA49B0();
    sub_1C077589C();
    sub_1C0784B6C(v60, (uint64_t *)&unk_1ED75EA40);
    v62 = type metadata accessor for GraphTriple(0);
    if (sub_1C07B2D80(v61, 1, v62) == 1)
    {
      sub_1C0784B6C(*(_QWORD *)(v0 + 256), &qword_1ED75F138);
      v63 = 1;
    }
    else
    {
      v64 = *(_QWORD *)(v0 + 256);
      (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 224) + 16))(*(_QWORD *)(v0 + 528), v64, *(_QWORD *)(v0 + 216));
      sub_1C0AA9B98(v64, type metadata accessor for GraphTriple);
      v63 = 0;
    }
    v65 = *(_QWORD *)(v0 + 536);
    v66 = *(_QWORD *)(v0 + 528);
    sub_1C07B2D8C(v66, v63, 1, *(_QWORD *)(v0 + 216));
    sub_1C09174F8(v66, v65);
  }
  else
  {
    sub_1C077589C();
  }
  v67 = *(_QWORD *)(v0 + 520);
  v68 = *(_QWORD *)(v0 + 216);
  sub_1C078A8CC(*(_QWORD *)(v0 + 536), v67, (uint64_t *)&unk_1ED75EA40);
  if (sub_1C07B2D80(v67, 1, v68) == 1)
  {
    v69 = (uint64_t *)(v0 + 520);
    sub_1C0784B6C(*(_QWORD *)(v0 + 536), (uint64_t *)&unk_1ED75EA40);
    swift_release();
    sub_1C0775834();
  }
  else
  {
    v70 = *(_QWORD *)(v0 + 544);
    v71 = *(_QWORD *)(v0 + 512);
    v72 = *(void (**)(void))(*(_QWORD *)(v0 + 224) + 32);
    ((void (*)(_QWORD, _QWORD, _QWORD))v72)(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 520), *(_QWORD *)(v0 + 216));
    sub_1C078A8CC(v70, v71, (uint64_t *)&unk_1ED75EA40);
    v73 = sub_1C07BFF44();
    v74 = *(_QWORD *)(v0 + 536);
    if (v73 != 1)
    {
      v79 = *(_QWORD *)(v0 + 360);
      v284 = *(_QWORD *)(v0 + 344);
      v80 = *(_QWORD *)(v0 + 248);
      v463 = v80;
      v359 = *(_QWORD *)(v0 + 240);
      v81 = *(_QWORD *)(v0 + 224);
      v325 = v81;
      v82 = *(_QWORD *)(v0 + 216);
      v377 = *(_QWORD *)(v0 + 208);
      v385 = *(_QWORD *)(v0 + 232);
      v410 = *(_QWORD *)(v0 + 200);
      v419 = *(_QWORD *)(v0 + 192);
      v460 = *(_QWORD *)(v0 + 184);
      v402 = *(_QWORD *)(v0 + 176);
      v295 = *(_QWORD *)(v0 + 168);
      v466 = *(_QWORD *)(v0 + 160);
      v305 = *(_QWORD *)(v0 + 152);
      v348 = *(_QWORD *)(v0 + 144);
      v72();
      sub_1C07ACF80(&qword_1ED74D540);
      v83 = (int *)type metadata accessor for GraphTriple(0);
      v84 = *((_QWORD *)v83 - 1);
      v450 = *(_QWORD *)(v84 + 72);
      v85 = (*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80);
      v315 = swift_allocObject();
      *(_OWORD *)(v315 + 16) = xmmword_1C107A8C0;
      v337 = v74;
      v86 = v315 + v85;
      v455 = *(uint64_t (**)(void))(v81 + 16);
      v368 = v82;
      ((void (*)(uint64_t, uint64_t, uint64_t))v455)(v385, v80, v82);
      sub_1C106E218();
      sub_1C106EB0C();
      sub_1C106E26C();
      sub_1C106D1A4();
      v87 = sub_1C106D090();
      v261 = v88;
      v273 = v87;
      v468(v79, v284);
      v89 = sub_1C0794694();
      *(_OWORD *)(v89 + 16) = xmmword_1C1079220;
      sub_1C0845A4C(v467, v89 + v443, (uint64_t (*)(_QWORD))type metadata accessor for Source);
      sub_1C07AEBF0();
      v285 = v471;
      sub_1C077AE90();
      sub_1C106AC6C();
      v91 = v90;
      sub_1C07AD22C();
      v92 = *(void (**)(unint64_t, uint64_t, uint64_t))(v419 + 32);
      v93 = v377;
      v92(v315 + v85 + v83[5], v377, v460);
      v94 = (void (*)(uint64_t, uint64_t, uint64_t))v92;
      v420 = (uint64_t)v92;
      v95 = (void (*)(uint64_t, uint64_t, uint64_t))v402;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v295 + 32))(v86 + v83[6], v402, v466);
      v94(v86 + v83[7], v410, v460);
      v96 = (uint64_t *)(v86 + v83[8]);
      *v96 = v273;
      v96[1] = v261;
      *(_QWORD *)(v86 + v83[9]) = v285;
      sub_1C078B800();
      *(_QWORD *)(v86 + v97) = v98;
      v99 = (uint64_t *)(v86 + v83[11]);
      *v99 = v469;
      v99[1] = v470;
      *(_QWORD *)(v86 + v83[12]) = v91;
      v100 = v86 + v450;
      v101 = v385;
      v102 = v368;
      sub_1C0788968(v385, v463, v368, v103, v104, v105, v106, v107, v213, v223, v233, (uint64_t)&v471, v0 + 112, v261, v273, v285, v295, v305, v315,
        v325,
        v337,
        v348,
        v359,
        v368,
        v377,
        v385,
        v86,
        v402,
        v410,
        v420,
        v428,
        v433,
        v438,
        v443,
        v450,
        v455);
      sub_1C106DEB8();
      sub_1C106EB0C();
      sub_1C106E26C();
      v108 = sub_1C0794694();
      v109 = sub_1C0793BE4(v108);
      sub_1C0845A4C(v109, v110, (uint64_t (*)(_QWORD))type metadata accessor for Source);
      sub_1C079CDF0();
      v111 = v471;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C106AC6C();
      sub_1C0782458();
      sub_1C07AD22C();
      v112 = sub_1C077E9AC();
      sub_1C0786DE0(v112, v93, v460, v113, v114, v115, v116, v117, v214, v224, v234, v243, v252, v262, v274, v286, v296, v306, v316,
        v326,
        v338,
        v349,
        v360,
        v369,
        v378,
        v386,
        v394,
        v403,
        v411,
        v421);
      v118 = sub_1C07BAE00();
      v119 = v404;
      sub_1C07AA84C(v118, v404);
      v120 = v412;
      v95(v100 + v83[7], v412, v460);
      v121 = (_QWORD *)(v100 + v83[8]);
      *v121 = 1702195828;
      v121[1] = 0xE400000000000000;
      *(_QWORD *)(v100 + v83[9]) = v111;
      sub_1C07B8AB8();
      v122 = v395 + 2 * v451;
      sub_1C0788968(v101, v463, v102, v123, v124, v125, v126, v127, v215, v225, v235, v244, v253, v263, v275, v287, v297, v307, v317,
        v327,
        v339,
        v350,
        v361,
        v370,
        v379,
        v387,
        v395,
        v404,
        v412,
        v422,
        v429,
        v434,
        v439,
        v444,
        v451,
        v456);
      sub_1C106DEF4();
      sub_1C077FE2C();
      sub_1C106DFF0();
      sub_1C106E548();
      v471 = 3826797;
      v472 = 0xE300000000000000;
      sub_1C106FC94();
      swift_bridgeObjectRelease();
      v288 = v472;
      v298 = v471;
      v128 = sub_1C0794694();
      v129 = sub_1C0793BE4(v128);
      sub_1C0845A4C(v129, v130, (uint64_t (*)(_QWORD))type metadata accessor for Source);
      sub_1C07AEBF0();
      v131 = v471;
      sub_1C07796D8();
      sub_1C106AC6C();
      v133 = v132;
      v134 = v388;
      sub_1C07AD22C();
      v423(v122 + v83[5], v380, v460);
      sub_1C07AA84C(v122 + v83[6], v119);
      v423(v122 + v83[7], v120, v460);
      v135 = (uint64_t *)(v122 + v83[8]);
      *v135 = v298;
      v135[1] = v288;
      *(_QWORD *)(v122 + v83[9]) = v131;
      sub_1C078B800();
      *(_QWORD *)(v122 + v136) = v137;
      v138 = (uint64_t *)(v122 + v83[11]);
      *v138 = v469;
      v138[1] = v470;
      *(_QWORD *)(v122 + v83[12]) = v133;
      v139 = v396 + 3 * v452;
      v140 = v371;
      sub_1C0788968(v388, v463, v371, v141, v142, v143, v144, v145, v216, v226, v236, v245, v254, v264, v276, v288, v298, v308, v318,
        v328,
        v340,
        v351,
        v362,
        v371,
        v380,
        v388,
        v396,
        v405,
        v413,
        (uint64_t)v423,
        v430,
        v435,
        v440,
        v445,
        v452,
        v457);
      sub_1C106DEF4();
      sub_1C077FE2C();
      sub_1C106DCCC();
      v146 = sub_1C0794694();
      v147 = sub_1C0793BE4(v146);
      sub_1C0845A4C(v147, v148, (uint64_t (*)(_QWORD))type metadata accessor for Source);
      sub_1C079CDF0();
      v299 = v471;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C106AC6C();
      sub_1C0782458();
      sub_1C07AD22C();
      v149 = sub_1C077E9AC();
      v150 = (void (*)(uint64_t, uint64_t, uint64_t))v381;
      sub_1C0786DE0(v149, v381, v460, v151, v152, v153, v154, v155, v217, v227, v237, v246, v255, v265, v277, v289, v299, v309, v319,
        v329,
        v341,
        v352,
        v363,
        v372,
        v381,
        v389,
        v397,
        v406,
        v414,
        v424);
      v156 = sub_1C07BAE00();
      sub_1C07AA84C(v156, v407);
      v150(v139 + v83[7], v120, v460);
      v157 = (_QWORD *)(v139 + v83[8]);
      *v157 = 3681840;
      v157[1] = 0xE300000000000000;
      *(_QWORD *)(v139 + v83[9]) = v300;
      sub_1C07B8AB8();
      v158 = v398 + 4 * v453;
      sub_1C0788968(v134, v463, v140, v159, v160, v161, v162, v163, v218, v228, v238, v247, v256, v266, v278, v290, v300, v310, v320,
        v330,
        v342,
        v353,
        v364,
        v373,
        v382,
        v390,
        v398,
        v407,
        v415,
        v425,
        v431,
        v436,
        v441,
        v446,
        v453,
        v458);
      sub_1C106DEF4();
      sub_1C106EB0C();
      sub_1C106E038();
      v164 = sub_1C0794694();
      v165 = sub_1C0793BE4(v164);
      sub_1C0845A4C(v165, v166, (uint64_t (*)(_QWORD))type metadata accessor for Source);
      sub_1C0778624();
      sub_1C079CDF0();
      v301 = v471;
      sub_1C07796D8();
      sub_1C106AC6C();
      sub_1C0782458();
      v167 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v391;
      v168 = v374;
      sub_1C07AD22C();
      v169 = sub_1C077E9AC();
      v170 = (uint64_t)v150;
      v426(v169, (uint64_t)v150, v460);
      v171 = sub_1C07BAE00();
      sub_1C07AA84C(v171, v408);
      v172 = v426(v158 + v83[7], v416, v460);
      sub_1C07B5F78(v172, v173, v174, v175, v176, v177, v178, v179, v219, v229, v239, v248, v257, v267, v279, v291, v301, v311, v321,
        v331,
        v343,
        v354);
      *(_QWORD *)(v158 + v180) = v302;
      *(_QWORD *)(v158 + v83[10]) = 0x3FE999999999999ALL;
      v181 = (uint64_t *)(v158 + v83[11]);
      *v181 = v469;
      v181[1] = (uint64_t)v150;
      *(_QWORD *)(v158 + v83[12]) = v133;
      v182 = v399 + 5 * v454;
      v78 = v344;
      sub_1C0788968(v391, v463, v374, v183, v184, v185, v186, v187, v220, v230, v240, v249, v258, v268, v280, v292, v302, v312, v322,
        v332,
        v344,
        v355,
        v365,
        v374,
        v383,
        v391,
        v399,
        v408,
        v416,
        (uint64_t)v426,
        v432,
        v437,
        v442,
        v447,
        v454,
        v459);
      sub_1C106DEF4();
      v188 = v409;
      sub_1C077FE2C();
      sub_1C106E1D0();
      v189 = sub_1C0794694();
      v190 = sub_1C0793BE4(v189);
      sub_1C0845A4C(v190, v191, (uint64_t (*)(_QWORD))type metadata accessor for Source);
      sub_1C0778624();
      sub_1C079CDF0();
      v192 = v471;
      sub_1C106AC6C();
      sub_1C0782458();
      sub_1C07AD22C();
      v193 = sub_1C077E9AC();
      sub_1C0786DE0(v193, v170, v460, v194, v195, v196, v197, v198, v221, v231, v241, v250, v259, v269, v281, v293, v303, v313, v323,
        v333,
        v345,
        v356,
        v366,
        v375,
        v384,
        v392,
        v400,
        v409,
        v417,
        v427);
      v199 = sub_1C07BAE00();
      sub_1C07AA84C(v199, v188);
      v200 = v167(v182 + v83[7], v418, v460);
      sub_1C07B5F78(v200, v201, v202, v203, v204, v205, v206, v207, v222, v232, v242, v251, v260, v270, v282, v294, v304, v314, v324,
        v334,
        v346,
        v357);
      *(_QWORD *)(v182 + v208) = v192;
      *(_QWORD *)(v182 + v83[10]) = 0x3FE999999999999ALL;
      v209 = (uint64_t *)(v182 + v83[11]);
      *v209 = v469;
      v209[1] = v470;
      *(_QWORD *)(v182 + v83[12]) = v133;
      sub_1C0D4124C();
      swift_release();
      swift_setDeallocating();
      sub_1C0BE8EC4();
      v210 = *(void (**)(uint64_t, uint64_t))(v335 + 8);
      v210(v367, v168);
      v210(v463, v168);
LABEL_32:
      sub_1C0784B6C(v78, (uint64_t *)&unk_1ED75EA40);
      swift_bridgeObjectRelease();
      v211 = *(_QWORD *)(v0 + 544);
      sub_1C07B41A4();
      swift_bridgeObjectRelease();
      sub_1C0784B6C(v211, (uint64_t *)&unk_1ED75EA40);
      swift_task_dealloc();
      sub_1C07767BC();
      sub_1C07796F8();
      sub_1C07758BC();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      sub_1C077F2A8();
      __asm { BR              X1 }
    }
    v69 = (uint64_t *)(v0 + 512);
    v75 = *(_QWORD *)(v0 + 248);
    v76 = *(_QWORD *)(v0 + 216);
    v77 = *(_QWORD *)(v0 + 224);
    swift_release();
    sub_1C0775834();
    (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v75, v76);
    sub_1C0784B6C(v74, (uint64_t *)&unk_1ED75EA40);
  }
  v78 = *v69;
  goto LABEL_32;
}

void sub_1C0AA6E38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t inited;

  v5 = type metadata accessor for GraphTriple(0);
  MEMORY[0x1E0C80A78](v5);
  if (qword_1ED7622C8 != -1)
    swift_once();
  v6 = type metadata accessor for Source();
  sub_1C079E000(v6, (uint64_t)&unk_1ED7622B0);
  sub_1C07ACF80(&qword_1ED762CB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1079220;
  *(_QWORD *)(inited + 32) = a2;
  *(_QWORD *)(inited + 40) = a3;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0D48670();
}

uint64_t sub_1C0AA7010(uint64_t a1)
{
  uint64_t v1;
  _QWORD v3[4];

  v3[2] = a1;
  swift_retain();
  v1 = sub_1C0BB9B94((uint64_t)sub_1C0AA9C18, (uint64_t)v3);
  swift_release();
  return v1;
}

uint64_t sub_1C0AA7070(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1C0784B6C(a2, (uint64_t *)&unk_1ED75EA40);
  v4 = sub_1C106E590();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  sub_1C07B2D8C(a2, 0, 1, v4);
  return 1;
}

uint64_t sub_1C0AA715C(int a1, int a2, void *aBlock, void *a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  _QWORD *v13;

  v4[2] = a4;
  v4[3] = _Block_copy(aBlock);
  v6 = sub_1C106FB14();
  v8 = v7;
  v4[4] = v7;
  v9 = sub_1C106FB14();
  v11 = v10;
  v4[5] = v10;
  v12 = a4;
  v13 = (_QWORD *)swift_task_alloc();
  v4[6] = v13;
  *v13 = v4;
  v13[1] = sub_1C0AA720C;
  return GraphSimulationXPC.Server.mockTripleEntityTagging(withContactId:inferredRelationshipLabel:)(v6, v8, v9, v11);
}

uint64_t sub_1C0AA720C(char a1)
{
  void *v1;
  uint64_t *v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v4 = *(void **)(*v2 + 16);
  v5 = *v2;
  swift_task_dealloc();

  sub_1C0775844();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v5 + 24);
  if (v1)
  {
    v7 = (void *)sub_1C106AA08();

    (*(void (**)(uint64_t, _QWORD, void *))(v6 + 16))(v6, 0, v7);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v6 + 16))(*(_QWORD *)(v5 + 24), a1 & 1, 0);
  }
  _Block_release(*(const void **)(v5 + 24));
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_1C0AA72F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v3 = *(_QWORD *)(a2 + 16);
  if (v3)
  {
    v5 = *(_QWORD *)(type metadata accessor for GraphTriple(0) - 8);
    v6 = a2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v7 = *(_QWORD *)(v5 + 72);
    sub_1C0794BAC(&qword_1ED7493C8, type metadata accessor for GraphTriple, (uint64_t)&protocol conformance descriptor for GraphTriple);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v8 = 0;
    while (1)
    {
      result = sub_1C106C274();
      if (v2)
      {
LABEL_9:
        swift_bridgeObjectRelease();
        return v8;
      }
      if ((result & 1) != 0 && __OFADD__(v8++, 1))
        break;
      v6 += v7;
      if (!--v3)
        goto LABEL_9;
    }
    __break(1u);
  }
  else
  {
    return 0;
  }
  return result;
}

uint64_t sub_1C0AA73E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v18 = a5;
  v19 = a6;
  v9 = sub_1C07ACF80(qword_1ED755A58);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1C106E968();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106E95C();
  v16 = sub_1C106D9B4();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v11, a3, v16);
  sub_1C07B2D8C((uint64_t)v11, 0, 1, v16);
  sub_1C0E3DD30(a1, (uint64_t)v15, (uint64_t)v11, a4, v18, v19);
  sub_1C0784B6C((uint64_t)v11, qword_1ED755A58);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_1C0AA756C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v18 = a5;
  v19 = a6;
  v9 = sub_1C07ACF80(qword_1ED755A58);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1C106E968();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106E95C();
  v16 = sub_1C106D9B4();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v11, a3, v16);
  sub_1C07B2D8C((uint64_t)v11, 0, 1, v16);
  sub_1C0E3E088(a1, (uint64_t)v15, (uint64_t)v11, a4, v18, v19);
  sub_1C0784B6C((uint64_t)v11, qword_1ED755A58);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

void sub_1C0AA76F8(uint64_t a1)
{
  uint64_t v1;

  sub_1C0AA6E38(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1C0AA7704()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  BOOL v18;
  uint64_t v19;
  _QWORD *v20;
  BOOL v21;
  _QWORD *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;

  sub_1C07768C4();
  if (!v1 || (sub_1C07ACF80(&qword_1ED762CE8), sub_1C0798AEC(), sub_1C07AA3E0(), !v3))
  {
LABEL_23:
    sub_1C07767AC();
    sub_1C078C198();
    return;
  }
  v4 = 0;
  v5 = v2 + 56;
  while (1)
  {
    sub_1C0AA9C60();
    if (v6)
      break;
    v7 = (uint64_t *)(v0 + 32 + 16 * v4);
    v9 = *v7;
    v8 = v7[1];
    sub_1C0790900();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0AA9CC0();
    v10 = sub_1C1070E4C();
    v11 = -1 << *(_BYTE *)(v2 + 32);
    v12 = v10 & ~v11;
    v13 = v12 >> 6;
    v14 = *(_QWORD *)(v5 + 8 * (v12 >> 6));
    v15 = 1 << v12;
    if (((1 << v12) & v14) != 0)
    {
      v16 = *(_QWORD *)(v2 + 48);
      v17 = (_QWORD *)(v16 + 16 * v12);
      v18 = *v17 == v9 && v17[1] == v8;
      if (v18 || (sub_1C0795A9C() & 1) != 0)
      {
LABEL_11:
        sub_1C0778580();
        goto LABEL_22;
      }
      v19 = ~v11;
      while (1)
      {
        v12 = (v12 + 1) & v19;
        v13 = v12 >> 6;
        v14 = *(_QWORD *)(v5 + 8 * (v12 >> 6));
        v15 = 1 << v12;
        if ((v14 & (1 << v12)) == 0)
          break;
        v20 = (_QWORD *)(v16 + 16 * v12);
        v21 = *v20 == v9 && v20[1] == v8;
        if (v21 || (sub_1C0795A9C() & 1) != 0)
          goto LABEL_11;
      }
    }
    *(_QWORD *)(v5 + 8 * v13) = v15 | v14;
    v22 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v12);
    *v22 = v9;
    v22[1] = v8;
    sub_1C07B9754();
    if (v24)
      goto LABEL_25;
    *(_QWORD *)(v2 + 16) = v23;
LABEL_22:
    if (++v4 == v25)
      goto LABEL_23;
  }
  __break(1u);
LABEL_25:
  __break(1u);
}

void sub_1C0AA7870()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;

  sub_1C0779670();
  sub_1C07B1DBC();
  v3 = sub_1C106E41C();
  v4 = sub_1C079FFAC(v3);
  MEMORY[0x1E0C80A78](v4);
  sub_1C0780698();
  MEMORY[0x1E0C80A78](v5);
  sub_1C07A543C();
  if (v0 && (sub_1C07ACF80(&qword_1ED75E830), sub_1C0798AEC(), sub_1C07AAF0C(), v6))
  {
    sub_1C0799CB4();
    while (1)
    {
      sub_1C07B00FC();
      if (v7)
        break;
      sub_1C07A3AF4();
      v8 = *(_QWORD *)(v1 + 40);
      sub_1C0794BAC(&qword_1ED75EA28, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC68]);
      sub_1C0797394();
      sub_1C07A0D34();
      if (v10)
      {
LABEL_11:
        sub_1C07A6CE8(v9);
        sub_1C07AFA98();
        if (v12)
          goto LABEL_18;
        *(_QWORD *)(v1 + 16) = v11;
      }
      else
      {
        sub_1C078A438();
        while (1)
        {
          sub_1C07A26D0();
          sub_1C0794BAC((unint64_t *)&qword_1ED75EA30, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC78]);
          sub_1C0796608();
          sub_1C079AB58();
          if ((v8 & 1) != 0)
            break;
          sub_1C07ADDBC();
          if (v10)
          {
            sub_1C07A5E54();
            goto LABEL_11;
          }
        }
        sub_1C0794F2C(v2);
        sub_1C07A5E54();
      }
      sub_1C07BCEE4();
      if (v10)
        goto LABEL_16;
    }
    __break(1u);
LABEL_18:
    __break(1u);
  }
  else
  {
LABEL_16:
    sub_1C07785A0();
    sub_1C07B6284();
    sub_1C0776760();
  }
}

uint64_t sub_1C0AA7994(uint64_t a1)
{
  uint64_t v1;

  return sub_1C0AA7070(a1, *(_QWORD *)(v1 + 16));
}

void sub_1C0AA799C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_1C07768C4();
  if (v0)
  {
    sub_1C07ACF80(&qword_1ED7462E8);
    sub_1C0798AEC();
    sub_1C07AA3E0();
    if (v1)
    {
      sub_1C0AA9C8C();
      sub_1C0AA9C60();
      if (!v2)
      {
        sub_1C0790900();
        sub_1C07ABCF8();
        __asm { BR              X8 }
      }
      __break(1u);
      JUMPOUT(0x1C0AA7D28);
    }
  }
  sub_1C07767AC();
  sub_1C078C198();
}

uint64_t sub_1C0AA7DC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1C07768C4();
  if (v1)
  {
    sub_1C07ACF80(&qword_1ED758E00);
    v2 = sub_1C0798AEC();
    if (*(_QWORD *)(v0 + 16))
    {
      v3 = *(unsigned __int8 *)(v0 + 40);
      sub_1C1070DF8();
      __asm { BR              X8 }
    }
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E8];
  }
  sub_1C07767AC();
  return v2;
}

uint64_t sub_1C0AA8768()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  sub_1C07768C4();
  if (v1)
  {
    sub_1C07ACF80(&qword_1ED7462E0);
    v2 = sub_1C0798AEC();
    if (*(_QWORD *)(v0 + 16))
    {
      sub_1C0AA9C60();
      if (!v3)
      {
        v4 = *(unsigned __int8 *)(v0 + 32);
        sub_1C1070DF8();
        __asm { BR              X8 }
      }
      __break(1u);
      JUMPOUT(0x1C0AA8B20);
    }
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E8];
  }
  sub_1C07767AC();
  return v2;
}

void sub_1C0AA8B78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  sub_1C07768C4();
  if (v0)
  {
    sub_1C07ACF80(&qword_1ED7462D8);
    sub_1C0798AEC();
    sub_1C07AA3E0();
    if (v2)
    {
      sub_1C0AA9C8C();
      sub_1C0AA9C60();
      if (!v3)
      {
        v4 = *(unsigned __int8 *)(v5 + v1);
        sub_1C0AA9C80();
        __asm { BR              X8 }
      }
      __break(1u);
      JUMPOUT(0x1C0AA8EE8);
    }
  }
  sub_1C07767AC();
  sub_1C07892E0();
}

void sub_1C0AA8F40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;

  sub_1C0779670();
  sub_1C07B1DBC();
  v3 = sub_1C106E590();
  v4 = sub_1C079FFAC(v3);
  MEMORY[0x1E0C80A78](v4);
  sub_1C0780698();
  MEMORY[0x1E0C80A78](v5);
  sub_1C07A543C();
  if (v0 && (sub_1C07ACF80(&qword_1ED760198), sub_1C0798AEC(), sub_1C07AAF0C(), v6))
  {
    sub_1C0799CB4();
    while (1)
    {
      sub_1C07B00FC();
      if (v7)
        break;
      sub_1C07A3AF4();
      v8 = *(_QWORD *)(v1 + 40);
      sub_1C0794BAC((unint64_t *)&qword_1ED7618F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE40]);
      sub_1C0797394();
      sub_1C07A0D34();
      if (v10)
      {
LABEL_11:
        sub_1C07A6CE8(v9);
        sub_1C07AFA98();
        if (v12)
          goto LABEL_18;
        *(_QWORD *)(v1 + 16) = v11;
      }
      else
      {
        sub_1C078A438();
        while (1)
        {
          sub_1C07A26D0();
          sub_1C0794BAC(&qword_1ED75EA38, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE50]);
          sub_1C0796608();
          sub_1C079AB58();
          if ((v8 & 1) != 0)
            break;
          sub_1C07ADDBC();
          if (v10)
          {
            sub_1C07A5E54();
            goto LABEL_11;
          }
        }
        sub_1C0794F2C(v2);
        sub_1C07A5E54();
      }
      sub_1C07BCEE4();
      if (v10)
        goto LABEL_16;
    }
    __break(1u);
LABEL_18:
    __break(1u);
  }
  else
  {
LABEL_16:
    sub_1C07785A0();
    sub_1C07B6284();
    sub_1C0776760();
  }
}

void sub_1C0AA9064()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  sub_1C07768C4();
  if (!v1 || (sub_1C07ACF80(&qword_1EF63A6B8), v2 = sub_1C0798AEC(), v3 = v2, (v4 = *(_QWORD *)(v0 + 16)) == 0))
  {
LABEL_14:
    sub_1C07767AC();
    return;
  }
  v5 = 0;
  v6 = v2 + 56;
  while (v5 < *(_QWORD *)(v0 + 16))
  {
    v7 = *(_QWORD *)(v0 + 32 + 8 * v5);
    sub_1C1070DF8();
    sub_1C1070E04();
    v8 = sub_1C1070E4C();
    v9 = -1 << *(_BYTE *)(v3 + 32);
    v10 = v8 & ~v9;
    v11 = v10 >> 6;
    v12 = *(_QWORD *)(v6 + 8 * (v10 >> 6));
    v13 = 1 << v10;
    v14 = *(_QWORD *)(v3 + 48);
    if (((1 << v10) & v12) != 0)
    {
      if (*(_QWORD *)(v14 + 8 * v10) == v7)
        goto LABEL_13;
      v15 = ~v9;
      while (1)
      {
        v10 = (v10 + 1) & v15;
        v11 = v10 >> 6;
        v12 = *(_QWORD *)(v6 + 8 * (v10 >> 6));
        v13 = 1 << v10;
        if ((v12 & (1 << v10)) == 0)
          break;
        if (*(_QWORD *)(v14 + 8 * v10) == v7)
          goto LABEL_13;
      }
    }
    *(_QWORD *)(v6 + 8 * v11) = v13 | v12;
    *(_QWORD *)(v14 + 8 * v10) = v7;
    sub_1C07B9754();
    if (v17)
      goto LABEL_16;
    *(_QWORD *)(v3 + 16) = v16;
LABEL_13:
    if (++v5 == v4)
      goto LABEL_14;
  }
  __break(1u);
LABEL_16:
  __break(1u);
}

void sub_1C0AA91AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;

  sub_1C0779670();
  sub_1C07B1DBC();
  v3 = sub_1C106EB24();
  v4 = sub_1C079FFAC(v3);
  MEMORY[0x1E0C80A78](v4);
  sub_1C0780698();
  MEMORY[0x1E0C80A78](v5);
  sub_1C07A543C();
  if (v0 && (sub_1C07ACF80(&qword_1ED744830), sub_1C0798AEC(), sub_1C07AAF0C(), v6))
  {
    sub_1C0799CB4();
    while (1)
    {
      sub_1C07B00FC();
      if (v7)
        break;
      sub_1C07A3AF4();
      v8 = *(_QWORD *)(v1 + 40);
      sub_1C0794BAC(&qword_1ED761910, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D450], MEMORY[0x1E0D3D468]);
      sub_1C0797394();
      sub_1C07A0D34();
      if (v10)
      {
LABEL_11:
        sub_1C07A6CE8(v9);
        sub_1C07AFA98();
        if (v12)
          goto LABEL_18;
        *(_QWORD *)(v1 + 16) = v11;
      }
      else
      {
        sub_1C078A438();
        while (1)
        {
          sub_1C07A26D0();
          sub_1C0794BAC(qword_1ED75EA50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D450], MEMORY[0x1E0D3D478]);
          sub_1C0796608();
          sub_1C079AB58();
          if ((v8 & 1) != 0)
            break;
          sub_1C07ADDBC();
          if (v10)
          {
            sub_1C07A5E54();
            goto LABEL_11;
          }
        }
        sub_1C0794F2C(v2);
        sub_1C07A5E54();
      }
      sub_1C07BCEE4();
      if (v10)
        goto LABEL_16;
    }
    __break(1u);
LABEL_18:
    __break(1u);
  }
  else
  {
LABEL_16:
    sub_1C07785A0();
    sub_1C07B6284();
    sub_1C0776760();
  }
}

void sub_1C0AA92D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;

  sub_1C0779670();
  sub_1C07B1DBC();
  v3 = sub_1C106AFCC();
  v4 = sub_1C079FFAC(v3);
  MEMORY[0x1E0C80A78](v4);
  sub_1C0780698();
  MEMORY[0x1E0C80A78](v5);
  sub_1C07A543C();
  if (v0 && (sub_1C07ACF80((uint64_t *)&unk_1EF63A6C0), sub_1C0798AEC(), sub_1C07AAF0C(), v6))
  {
    sub_1C0799CB4();
    while (1)
    {
      sub_1C07B00FC();
      if (v7)
        break;
      sub_1C07A3AF4();
      v8 = *(_QWORD *)(v1 + 40);
      sub_1C0794BAC(&qword_1ED759DF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], MEMORY[0x1E0CB11D0]);
      sub_1C0797394();
      sub_1C07A0D34();
      if (v10)
      {
LABEL_11:
        sub_1C07A6CE8(v9);
        sub_1C07AFA98();
        if (v12)
          goto LABEL_18;
        *(_QWORD *)(v1 + 16) = v11;
      }
      else
      {
        sub_1C078A438();
        while (1)
        {
          sub_1C07A26D0();
          sub_1C0794BAC((unint64_t *)&unk_1ED759E00, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], MEMORY[0x1E0CB11D8]);
          sub_1C0796608();
          sub_1C079AB58();
          if ((v8 & 1) != 0)
            break;
          sub_1C07ADDBC();
          if (v10)
          {
            sub_1C07A5E54();
            goto LABEL_11;
          }
        }
        sub_1C0794F2C(v2);
        sub_1C07A5E54();
      }
      sub_1C07BCEE4();
      if (v10)
        goto LABEL_16;
    }
    __break(1u);
LABEL_18:
    __break(1u);
  }
  else
  {
LABEL_16:
    sub_1C07785A0();
    sub_1C07B6284();
    sub_1C0776760();
  }
}

void sub_1C0AA93F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = a1;
  if (*(_QWORD *)(a1 + 16)
    && (sub_1C07ACF80(&qword_1ED74D3F8), v2 = sub_1C0798AEC(), (v22 = *(_QWORD *)(v1 + 16)) != 0))
  {
    v3 = 0;
    v20 = v1;
    v21 = v1 + 32;
    while (v3 < *(_QWORD *)(v1 + 16))
    {
      v4 = *(unsigned __int8 *)(v21 + v3);
      sub_1C0AA9C80();
      if (v4)
        v5 = 0x617247746E657665;
      else
        v5 = 0x7247656C62617473;
      if (v4)
        v6 = 0xEA00000000006870;
      else
        v6 = 0xEB00000000687061;
      sub_1C0AA9CC0();
      sub_1C0778580();
      v7 = sub_1C1070E4C() & ~(-1 << *(_BYTE *)(v2 + 32));
      sub_1C0AA9C6C();
      if ((v10 & v9) != 0)
      {
        v19 = v4;
        v12 = ~v11;
        while (1)
        {
          v13 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v7) ? 0x617247746E657665 : 0x7247656C62617473;
          v14 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v7) ? 0xEA00000000006870 : 0xEB00000000687061;
          if (v13 == v5 && v14 == v6)
            break;
          v16 = sub_1C0795A9C();
          sub_1C077960C();
          sub_1C0778580();
          if ((v16 & 1) != 0)
            goto LABEL_29;
          v7 = (v7 + 1) & v12;
          sub_1C0AA9C6C();
          if ((v9 & v10) == 0)
          {
            LOBYTE(v4) = v19;
            goto LABEL_26;
          }
        }
        sub_1C07758A4();
      }
      else
      {
LABEL_26:
        *(_QWORD *)(v2 + 56 + 8 * v8) = v10 | v9;
        *(_BYTE *)(*(_QWORD *)(v2 + 48) + v7) = v4;
        sub_1C07B9754();
        if (v18)
          goto LABEL_32;
        *(_QWORD *)(v2 + 16) = v17;
      }
LABEL_29:
      ++v3;
      v1 = v20;
      if (v3 == v22)
        goto LABEL_30;
    }
    __break(1u);
LABEL_32:
    __break(1u);
  }
  else
  {
LABEL_30:
    sub_1C0778580();
    sub_1C07892E0();
  }
}

void sub_1C0AA95B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;

  sub_1C0779670();
  sub_1C07B1DBC();
  v3 = sub_1C106D6CC();
  v4 = sub_1C079FFAC(v3);
  MEMORY[0x1E0C80A78](v4);
  sub_1C0780698();
  MEMORY[0x1E0C80A78](v5);
  sub_1C07A543C();
  if (v0 && (sub_1C07ACF80((uint64_t *)&unk_1EF63A6D0), sub_1C0798AEC(), sub_1C07AAF0C(), v6))
  {
    sub_1C0799CB4();
    while (1)
    {
      sub_1C07B00FC();
      if (v7)
        break;
      sub_1C07A3AF4();
      v8 = *(_QWORD *)(v1 + 40);
      sub_1C0794BAC((unint64_t *)&qword_1ED744A48, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C130], MEMORY[0x1E0D3C148]);
      sub_1C0797394();
      sub_1C07A0D34();
      if (v10)
      {
LABEL_11:
        sub_1C07A6CE8(v9);
        sub_1C07AFA98();
        if (v12)
          goto LABEL_18;
        *(_QWORD *)(v1 + 16) = v11;
      }
      else
      {
        sub_1C078A438();
        while (1)
        {
          sub_1C07A26D0();
          sub_1C0794BAC(qword_1ED744A50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C130], MEMORY[0x1E0D3C150]);
          sub_1C0796608();
          sub_1C079AB58();
          if ((v8 & 1) != 0)
            break;
          sub_1C07ADDBC();
          if (v10)
          {
            sub_1C07A5E54();
            goto LABEL_11;
          }
        }
        sub_1C0794F2C(v2);
        sub_1C07A5E54();
      }
      sub_1C07BCEE4();
      if (v10)
        goto LABEL_16;
    }
    __break(1u);
LABEL_18:
    __break(1u);
  }
  else
  {
LABEL_16:
    sub_1C07785A0();
    sub_1C07B6284();
    sub_1C0776760();
  }
}

void sub_1C0AA96DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;

  sub_1C0779670();
  sub_1C07B1DBC();
  v3 = sub_1C106E4AC();
  v4 = sub_1C079FFAC(v3);
  MEMORY[0x1E0C80A78](v4);
  sub_1C0780698();
  MEMORY[0x1E0C80A78](v5);
  sub_1C07A543C();
  if (v0 && (sub_1C07ACF80(&qword_1ED7531B0), sub_1C0798AEC(), sub_1C07AAF0C(), v6))
  {
    sub_1C0799CB4();
    while (1)
    {
      sub_1C07B00FC();
      if (v7)
        break;
      sub_1C07A3AF4();
      v8 = *(_QWORD *)(v1 + 40);
      sub_1C0794BAC((unint64_t *)&qword_1ED7531C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CD48], MEMORY[0x1E0D3CD58]);
      sub_1C0797394();
      sub_1C07A0D34();
      if (v10)
      {
LABEL_11:
        sub_1C07A6CE8(v9);
        sub_1C07AFA98();
        if (v12)
          goto LABEL_18;
        *(_QWORD *)(v1 + 16) = v11;
      }
      else
      {
        sub_1C078A438();
        while (1)
        {
          sub_1C07A26D0();
          sub_1C0794BAC(qword_1ED753180, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CD48], MEMORY[0x1E0D3CD60]);
          sub_1C0796608();
          sub_1C079AB58();
          if ((v8 & 1) != 0)
            break;
          sub_1C07ADDBC();
          if (v10)
          {
            sub_1C07A5E54();
            goto LABEL_11;
          }
        }
        sub_1C0794F2C(v2);
        sub_1C07A5E54();
      }
      sub_1C07BCEE4();
      if (v10)
        goto LABEL_16;
    }
    __break(1u);
LABEL_18:
    __break(1u);
  }
  else
  {
LABEL_16:
    sub_1C07785A0();
    sub_1C07B6284();
    sub_1C0776760();
  }
}

void sub_1C0AA9800(unint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;

  v1 = a1;
  v2 = a1 >> 62;
  if (a1 >> 62)
  {
    sub_1C07B7FC8();
    v5 = sub_1C10709B4();
    sub_1C07785A0();
    if (v5)
    {
LABEL_3:
      sub_1C07ACF80(&qword_1ED74D400);
      v3 = sub_1C0798AEC();
      if (!v2)
        goto LABEL_4;
LABEL_8:
      sub_1C07B7FC8();
      v4 = sub_1C10709B4();
      sub_1C07785A0();
      if (!v4)
      {
LABEL_25:
        sub_1C07785A0();
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v3 = MEMORY[0x1E0DEE9E8];
  if (v2)
    goto LABEL_8;
LABEL_4:
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    goto LABEL_25;
LABEL_9:
  v6 = 0;
  v7 = v3 + 56;
  v24 = v1;
  v25 = v1 & 0xC000000000000001;
  v21 = (char *)(v1 + 32);
  v22 = v1 & 0xFFFFFFFFFFFFFF8;
  v23 = v4;
  while (1)
  {
    if (v25)
    {
      v8 = (id)MEMORY[0x1C3BA70DC](v6, v1);
    }
    else
    {
      if (v6 >= *(_QWORD *)(v22 + 16))
        goto LABEL_28;
      v8 = *(id *)&v21[8 * v6];
    }
    v9 = v8;
    v10 = __OFADD__(v6++, 1);
    if (v10)
      break;
    v11 = sub_1C1070510();
    v12 = -1 << *(_BYTE *)(v3 + 32);
    v13 = v11 & ~v12;
    v14 = v13 >> 6;
    v15 = *(_QWORD *)(v7 + 8 * (v13 >> 6));
    v16 = 1 << v13;
    if (((1 << v13) & v15) != 0)
    {
      sub_1C08A5CAC(0, (unint64_t *)&qword_1ED762C00);
      sub_1C0780548();
      v17 = sub_1C07821CC();

      if ((v17 & 1) != 0)
      {
LABEL_20:

        v4 = v23;
        v1 = v24;
        goto LABEL_24;
      }
      v18 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v18;
        v14 = v13 >> 6;
        v15 = *(_QWORD *)(v7 + 8 * (v13 >> 6));
        v16 = 1 << v13;
        if ((v15 & (1 << v13)) == 0)
          break;
        sub_1C0780548();
        v19 = sub_1C07821CC();

        if ((v19 & 1) != 0)
          goto LABEL_20;
      }
      v4 = v23;
      v1 = v24;
    }
    *(_QWORD *)(v7 + 8 * v14) = v16 | v15;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v13) = v9;
    sub_1C07B9754();
    if (v10)
      goto LABEL_27;
    *(_QWORD *)(v3 + 16) = v20;
LABEL_24:
    if (v6 == v4)
      goto LABEL_25;
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
}

uint64_t type metadata accessor for GraphSimulationXPC()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for GraphSimulationXPC.Delegate()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for GraphSimulationXPC.Server()
{
  return objc_opt_self();
}

uint64_t sub_1C0AA9A5C(uint64_t a1)
{
  return 1 << *(_BYTE *)(a1 + 32);
}

uint64_t sub_1C0AA9A78(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
    return (uint64_t)*(id *)(*(_QWORD *)(a4 + 48) + 8 * result);
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1C0AA9ACC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1C0AA73E8(a1, *a2, a3, a4, a5, a6);
}

uint64_t sub_1C0AA9AE4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 32));
  return swift_deallocObject();
}

uint64_t sub_1C0AA9B20()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  _QWORD *v6;

  v2 = v0[2];
  v3 = v0[3];
  v5 = (void *)v0[4];
  v4 = (void *)v0[5];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_1C0806670;
  return ((uint64_t (*)(int, int, void *, void *))((char *)&dword_1EF63A6E0 + dword_1EF63A6E0))(v2, v3, v5, v4);
}

void sub_1C0AA9B98(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = sub_1C07B64E4(a1, a2);
  sub_1C077B5C8(v2);
  sub_1C0778534();
}

uint64_t sub_1C0AA9BBC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1C0AA756C(a1, *a2, a3, a4, a5, a6);
}

uint64_t sub_1C0AA9BD4(uint64_t a1)
{
  return sub_1C08B551C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0AA9BBC);
}

uint64_t sub_1C0AA9BF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = sub_1C0AA72F8(a1, a2);
  if (!v3)
    *a3 = result;
  return result;
}

uint64_t sub_1C0AA9C18@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1C0AA9BF0(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1C0AA9C30(uint64_t a1)
{
  return sub_1C08B551C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0AA9ACC);
}

uint64_t sub_1C0AA9C80()
{
  return sub_1C1070DF8();
}

uint64_t sub_1C0AA9CA0()
{
  return swift_allocObject();
}

uint64_t sub_1C0AA9CC0()
{
  return sub_1C106FC28();
}

uint64_t sub_1C0AA9CCC()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C077E764();
  sub_1C0778580();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C077E764();
  sub_1C0778580();
  sub_1C077AE90();
  sub_1C07888B4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0AA9D30(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  char v5;
  uint64_t result;
  BOOL v7;
  char v8;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = sub_1C1070CB4(), result = 0, (v5 & 1) != 0))
  {
    v7 = a1[2] == a2[2] && a1[3] == a2[3];
    if (v7 || (v8 = sub_1C1070CB4(), result = 0, (v8 & 1) != 0))
    {
      if (a1[4] == a2[4] && a1[5] == a2[5])
        return 1;
      else
        return sub_1C1070CB4();
    }
  }
  return result;
}

uint64_t sub_1C0AA9DCC()
{
  sub_1C1070DF8();
  sub_1C07796D8();
  sub_1C07A0D24();
  sub_1C0775844();
  sub_1C07796D8();
  sub_1C07A0D24();
  sub_1C0775844();
  sub_1C077AE90();
  sub_1C07888B4();
  sub_1C077960C();
  return sub_1C1070E4C();
}

uint64_t sub_1C0AA9E48()
{
  sub_1C1070DF8();
  sub_1C07796D8();
  sub_1C07A0D24();
  sub_1C0775844();
  sub_1C077AEBC();
  sub_1C106FC28();
  sub_1C077B5B4();
  sub_1C077AE90();
  sub_1C07888B4();
  sub_1C077960C();
  return sub_1C1070E4C();
}

uint64_t sub_1C0AA9ED0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1C0AAA55C((int64_t)sub_1C0AACB9C, (uint64_t)sub_1C0AA4BDC, (uint64_t)sub_1C0AACE00, (uint64_t)sub_1C0AACBC0);
  sub_1C0AAA55C((int64_t)sub_1C0AACB00, (uint64_t)sub_1C0AA4BE8, (uint64_t)sub_1C0AACB24, (uint64_t)sub_1C0AACB30);
  v0 = sub_1C079AB70();
  sub_1C0AA9F60(v0, v1, v2, v3);
  sub_1C077B5B4();
  sub_1C0778580();
  sub_1C0775844();
  return swift_bridgeObjectRelease();
}

void sub_1C0AA9F60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t inited;
  char v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  _QWORD *v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;

  sub_1C07ACF80((uint64_t *)&unk_1ED748198);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1078FC0;
  *(_QWORD *)(inited + 32) = a1;
  v38 = inited + 32;
  v39 = inited;
  *(_QWORD *)(inited + 40) = a2;
  *(_QWORD *)(inited + 48) = a3;
  *(_QWORD *)(inited + 56) = a4;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v9 = 0;
  v10 = 0;
  while (2)
  {
    if (v10 >= *(_QWORD *)(v39 + 16))
    {
LABEL_38:
      __break(1u);
      return;
    }
    v40 = v9;
    v11 = (_QWORD *)(v38 + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    v15 = (_QWORD *)(*v11 + 64);
    v14 = *v15;
    v41 = v15;
    v16 = 1 << *(_BYTE *)(v12 + 32);
    if (v16 < 64)
      v17 = ~(-1 << v16);
    else
      v17 = -1;
    v18 = v17 & v14;
    v42 = (unint64_t)(v16 + 63) >> 6;
    v43 = v12;
    swift_bridgeObjectRetain_n();
    v44 = v13;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v19 = 0;
    while (1)
    {
      if (v18)
      {
        v20 = __clz(__rbit64(v18));
        v18 &= v18 - 1;
        v45 = v19;
        v21 = v20 | (v19 << 6);
        v22 = v44;
        goto LABEL_23;
      }
      v23 = v19 + 1;
      v22 = v44;
      if (__OFADD__(v19, 1))
      {
        __break(1u);
LABEL_37:
        __break(1u);
        goto LABEL_38;
      }
      if (v23 >= v42)
        goto LABEL_34;
      v24 = v41[v23];
      v25 = v19 + 1;
      if (!v24)
      {
        v25 = v19 + 2;
        if (v19 + 2 >= v42)
          goto LABEL_34;
        v24 = v41[v25];
        if (!v24)
        {
          v25 = v19 + 3;
          if (v19 + 3 >= v42)
            goto LABEL_34;
          v24 = v41[v25];
          if (!v24)
            break;
        }
      }
LABEL_22:
      v18 = (v24 - 1) & v24;
      v45 = v25;
      v21 = __clz(__rbit64(v24)) + (v25 << 6);
LABEL_23:
      v27 = (uint64_t *)(*(_QWORD *)(v43 + 48) + 48 * v21);
      v28 = *v27;
      v29 = v27[1];
      v30 = *(_QWORD *)(v22 + 16);
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      if (!v30)
      {
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        goto LABEL_28;
      }
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C077D774(v28, v29);
      if ((v31 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        sub_1C07ACF80((uint64_t *)&unk_1ED7614C0);
        v32 = swift_initStackObject();
        *(_OWORD *)(v32 + 16) = xmmword_1C107DE20;
        *(_QWORD *)(v32 + 32) = 0x6C43797469746E65;
        *(_QWORD *)(v32 + 40) = 0xEB00000000737361;
        *(_QWORD *)(v32 + 48) = sub_1C106FAF0();
        *(_QWORD *)(v32 + 56) = 0x7461636964657270;
        *(_QWORD *)(v32 + 64) = 0xE900000000000065;
        *(_QWORD *)(v32 + 72) = sub_1C106FAF0();
        *(_QWORD *)(v32 + 80) = 0xD000000000000015;
        *(_QWORD *)(v32 + 88) = 0x80000001C10DE890;
        *(_QWORD *)(v32 + 96) = sub_1C106FAF0();
        *(_QWORD *)(v32 + 104) = 0xD000000000000019;
        *(_QWORD *)(v32 + 112) = 0x80000001C10FB390;
        *(_QWORD *)(v32 + 120) = sub_1C1070294();
        *(_QWORD *)(v32 + 128) = 0xD000000000000010;
        *(_QWORD *)(v32 + 136) = 0x80000001C10FB3B0;
        *(_QWORD *)(v32 + 144) = sub_1C1070294();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C077CA90();
        sub_1C106F97C();
        sub_1C106F244();
        sub_1C106F22C();
        swift_bridgeObjectRelease();
        v19 = v45;
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_28:
        if (qword_1ED762B18 != -1)
          swift_once();
        v33 = sub_1C106F544();
        sub_1C079E000(v33, (uint64_t)qword_1ED762AF8);
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v34 = sub_1C106F538();
        v35 = sub_1C1070390();
        if (os_log_type_enabled(v34, v35))
        {
          v36 = swift_slowAlloc();
          v37 = swift_slowAlloc();
          v46 = v37;
          *(_DWORD *)v36 = 136315138;
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          *(_QWORD *)(v36 + 4) = sub_1C0788DAC(v28, v29, &v46);
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1C0771000, v34, v35, "Unable to get the count for entityClass %s", (uint8_t *)v36, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C3BA8270](v37, -1, -1);
          MEMORY[0x1C3BA8270](v36, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
        }
        v19 = v45;
      }
    }
    v26 = v19 + 4;
    if (v19 + 4 < v42)
    {
      v24 = v41[v26];
      if (!v24)
      {
        while (1)
        {
          v25 = v26 + 1;
          if (__OFADD__(v26, 1))
            goto LABEL_37;
          if (v25 >= v42)
            goto LABEL_34;
          v24 = v41[v25];
          ++v26;
          if (v24)
            goto LABEL_22;
        }
      }
      v25 = v19 + 4;
      goto LABEL_22;
    }
LABEL_34:
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v9 = 1;
    v10 = 1;
    if ((v40 & 1) == 0)
      continue;
    break;
  }
  swift_setDeallocating();
  sub_1C0BE8EF4();
}

uint64_t sub_1C0AAA55C(int64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t i;
  int64_t v36;
  unint64_t v37;
  int64_t v38;
  char v39;
  BOOL v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  unint64_t v51;
  char v52;
  unint64_t v53;
  char v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t result;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int64_t v73;
  char v74[16];
  uint64_t *v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;

  v70 = a3;
  v71 = a4;
  v72 = a2;
  v69 = a1;
  v4 = sub_1C07ACF80(&qword_1ED75EA10);
  MEMORY[0x1E0C80A78](v4);
  sub_1C077AE40();
  v68 = v5;
  v6 = sub_1C106D9A8();
  MEMORY[0x1E0C80A78](v6);
  v65 = (uint64_t)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v63 - v9;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v63 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v63 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v63 - v18;
  v64 = (char *)&v63 - v18;
  v20 = sub_1C106D9B4();
  v66 = *(_QWORD *)(v20 - 8);
  v67 = v20;
  MEMORY[0x1E0C80A78](v20);
  sub_1C077AE40();
  v73 = v21;
  v22 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v78 = MEMORY[0x1E0DEE9E0];
  sub_1C07ACF80(&qword_1ED75E838);
  sub_1C106E41C();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C1079220;
  sub_1C106E218();
  sub_1C0AA7870();
  sub_1C07A6D10((uint64_t)v19);
  sub_1C07A6D10((uint64_t)v16);
  sub_1C07A6D10((uint64_t)v13);
  v23 = (uint64_t)v10;
  sub_1C07A6D10((uint64_t)v10);
  v24 = v65;
  sub_1C07A6D10(v65);
  v61 = v24;
  v62 = 0;
  v25 = (uint64_t)v64;
  sub_1C106D864();
  swift_bridgeObjectRelease();
  sub_1C0796620(v24);
  sub_1C0796620(v23);
  sub_1C0796620((uint64_t)v13);
  sub_1C0796620((uint64_t)v16);
  sub_1C0796620(v25);
  v26 = sub_1C106D2DC();
  v27 = v68;
  sub_1C07B2D8C(v68, 1, 1, v26);
  v75 = &v78;
  v28 = v73;
  ((void (*)(int64_t, uint64_t, int64_t, char *))v72)(v73, v27, v69, v74);
  sub_1C0784B6C(v27, &qword_1ED75EA10);
  (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v28, v67);
  v77 = v22;
  v29 = *(_QWORD *)(v78 + 64);
  v68 = v78 + 64;
  v30 = 1 << *(_BYTE *)(v78 + 32);
  v31 = -1;
  if (v30 < 64)
    v31 = ~(-1 << v30);
  v32 = v31 & v29;
  v69 = (unint64_t)(v30 + 63) >> 6;
  v72 = v78;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v33 = 0;
  if (!v32)
    goto LABEL_5;
LABEL_4:
  v34 = __clz(__rbit64(v32));
  v32 &= v32 - 1;
  v73 = v33;
  for (i = v34 | (v33 << 6); ; i = __clz(__rbit64(v37)) + (v38 << 6))
  {
    v44 = (uint64_t *)(*(_QWORD *)(v72 + 48) + 16 * i);
    v46 = *v44;
    v45 = v44[1];
    v47 = *(_QWORD *)(*(_QWORD *)(v72 + 56) + 8 * i);
    v48 = *(_QWORD *)(v47 + 16);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_isUniquelyReferenced_nonNull_native();
    v76 = v22;
    v49 = sub_1C077D774(v46, v45);
    if (__OFADD__(v22[2], (v50 & 1) == 0))
    {
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    v51 = v49;
    v52 = v50;
    sub_1C07ACF80(&qword_1ED75D860);
    if ((sub_1C107090C() & 1) != 0)
    {
      v53 = sub_1C077D774(v46, v45);
      if ((v52 & 1) != (v54 & 1))
        goto LABEL_40;
      v51 = v53;
    }
    v22 = v76;
    if ((v52 & 1) != 0)
    {
      *(_QWORD *)(v76[7] + 8 * v51) = v48;
    }
    else
    {
      v76[(v51 >> 6) + 8] |= 1 << v51;
      v55 = (uint64_t *)(v22[6] + 16 * v51);
      *v55 = v46;
      v55[1] = v45;
      *(_QWORD *)(v22[7] + 8 * v51) = v48;
      v56 = v22[2];
      v40 = __OFADD__(v56, 1);
      v57 = v56 + 1;
      if (v40)
        goto LABEL_37;
      v22[2] = v57;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    }
    v58 = swift_bridgeObjectRelease();
    MEMORY[0x1E0C80A78](v58);
    *(&v63 - 4) = (uint64_t)&v77;
    *(&v63 - 3) = v46;
    v61 = v45;
    sub_1C0AAB250(1, 3, v47, v70, (uint64_t)(&v63 - 6), v71);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v33 = v73;
    if (v32)
      goto LABEL_4;
LABEL_5:
    v36 = v33 + 1;
    if (__OFADD__(v33, 1))
      goto LABEL_38;
    if (v36 >= v69)
      goto LABEL_35;
    v37 = *(_QWORD *)(v68 + 8 * v36);
    v38 = v33 + 1;
    if (!v37)
    {
      sub_1C07911F0();
      if (v39 == v40)
        goto LABEL_35;
      sub_1C07911E4();
      if (!v37)
      {
        sub_1C07911F0();
        if (v39 == v40)
          goto LABEL_35;
        sub_1C07911E4();
        if (!v37)
        {
          sub_1C07911F0();
          if (v39 == v40)
            goto LABEL_35;
          sub_1C07911E4();
          if (!v37)
            break;
        }
      }
    }
LABEL_24:
    v32 = (v37 - 1) & v37;
    v73 = v38;
  }
  v42 = v41 + 4;
  if (v42 >= v69)
  {
LABEL_35:
    swift_release();
    v59 = v77;
    swift_bridgeObjectRelease();
    return (uint64_t)v59;
  }
  v37 = *(_QWORD *)(v68 + 8 * v42);
  if (v37)
  {
    v38 = v42;
    goto LABEL_24;
  }
  while (!__OFADD__(v42, 1))
  {
    sub_1C07911F0();
    if (v39 == v40)
      goto LABEL_35;
    sub_1C07911E4();
    v42 = v43 + 1;
    if (v37)
      goto LABEL_24;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  result = sub_1C1070D44();
  __break(1u);
  return result;
}

uint64_t sub_1C0AAAB04(uint64_t a1, uint64_t *a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v36 = sub_1C106E590();
  v6 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  sub_1C077AE40();
  v37 = v7;
  v8 = a3(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v35 - v9;
  v11 = sub_1C07ACF80(&qword_1ED7618D0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C077AEBC();
  sub_1C106D084();
  v14 = sub_1C106D1F8();
  if (sub_1C07B2D80((uint64_t)v13, 1, v14) == 1)
  {
    sub_1C0784B6C((uint64_t)v13, &qword_1ED7618D0);
    v15 = 0;
    v16 = 0;
  }
  else
  {
    v15 = sub_1C106D0FC();
    v16 = v17;
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  }
  sub_1C083F944(a1, (uint64_t)v10, a3);
  if (!v16)
  {
    v18 = (uint64_t *)&v10[*(int *)(v8 + 32)];
    v15 = *v18;
    v16 = v18[1];
    sub_1C077AEBC();
  }
  sub_1C07B1F90((uint64_t)v10, a3);
  v19 = v36;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v37, a1, v36);
  swift_isUniquelyReferenced_nonNull_native();
  v38 = *a2;
  v20 = v38;
  *a2 = 0x8000000000000000;
  v21 = sub_1C078B03C();
  if (__OFADD__(*(_QWORD *)(v20 + 16), (v22 & 1) == 0))
  {
    __break(1u);
    goto LABEL_14;
  }
  v23 = v21;
  v24 = v22;
  sub_1C07ACF80(&qword_1EF63A6F0);
  v25 = sub_1C107090C();
  v26 = v38;
  if ((v25 & 1) != 0)
  {
    v27 = sub_1C078B03C();
    if ((v24 & 1) == (v28 & 1))
    {
      v23 = v27;
      goto LABEL_10;
    }
LABEL_14:
    result = sub_1C1070D44();
    __break(1u);
    return result;
  }
LABEL_10:
  *a2 = v26;
  swift_bridgeObjectRelease();
  v29 = *a2;
  sub_1C077AE90();
  if ((v24 & 1) == 0)
  {
    sub_1C077CA74(v23, v15, v16, MEMORY[0x1E0DEE9D8], v29);
    sub_1C077AEBC();
  }
  v30 = *(_QWORD *)(v29 + 56);
  sub_1C077960C();
  v31 = (uint64_t *)(v30 + 8 * v23);
  sub_1C07E9FA0();
  v32 = *(_QWORD *)(*v31 + 16);
  sub_1C07EA654();
  v33 = *v31;
  *(_QWORD *)(v33 + 16) = v32 + 1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 32))(v33+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v32, v37, v19);
  sub_1C077B5B4();
  return 1;
}

void sub_1C0AAADD4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[3];
  uint64_t v40;
  uint64_t v41[6];

  v39[2] = a5;
  v15 = sub_1C07ACF80(&qword_1ED759F70);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v39 - v19;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106E1DC();
  v21 = sub_1C106E41C();
  if (sub_1C07B2D80((uint64_t)v20, 1, v21) == 1)
  {
    sub_1C0784B6C((uint64_t)v20, &qword_1ED759F70);
    if (qword_1ED762B18 != -1)
      swift_once();
    v22 = sub_1C106F544();
    sub_1C079E000(v22, (uint64_t)qword_1ED762AF8);
    swift_bridgeObjectRetain_n();
    v23 = sub_1C106F538();
    v24 = sub_1C1070390();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      v41[0] = v26;
      *(_DWORD *)v25 = 136315138;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v40 = sub_1C0788DAC(a1, a2, v41);
      sub_1C10705AC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C0771000, v23, v24, "Unable to encode %s to EntityPredicate", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v26, -1, -1);
      MEMORY[0x1C3BA8270](v25, -1, -1);

      return;
    }

  }
  else
  {
    v39[1] = a6;
    v27 = sub_1C106E254();
    v29 = v28;
    v30 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v21 - 8) + 8);
    v30(v20, v21);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C106E1DC();
    if (sub_1C07B2D80((uint64_t)v17, 1, v21) != 1)
    {
      v36 = sub_1C106E254();
      v38 = v37;
      v30(v17, v21);
      v41[0] = a7;
      v41[1] = a8;
      v41[2] = v27;
      v41[3] = v29;
      v41[4] = v36;
      v41[5] = v38;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C08A0128();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    swift_bridgeObjectRelease();
    sub_1C0784B6C((uint64_t)v17, &qword_1ED759F70);
    if (qword_1ED762B18 != -1)
      swift_once();
    v31 = sub_1C106F544();
    sub_1C079E000(v31, (uint64_t)qword_1ED762AF8);
    swift_bridgeObjectRetain_n();
    v32 = sub_1C106F538();
    v33 = sub_1C1070390();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      v35 = swift_slowAlloc();
      v41[0] = v35;
      *(_DWORD *)v34 = 136315138;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v40 = sub_1C0788DAC(a3, a4, v41);
      sub_1C10705AC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C0771000, v32, v33, "Unable to encode %s to EntityPredicate", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v35, -1, -1);
      MEMORY[0x1C3BA8270](v34, -1, -1);

      return;
    }

  }
  swift_bridgeObjectRelease_n();
}

uint64_t sub_1C0AAB250(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[3];
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;

  if (a3)
  {
    MEMORY[0x1E0C80A78](result);
    v12[2] = v7;
    v13 = v8;
    v14 = v9;
    v15 = v10;
    v16 = v11;
    swift_retain();
    sub_1C07C050C(a6, (uint64_t)v12);
    return swift_release();
  }
  return result;
}

uint64_t sub_1C0AAB2E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C0AAA55C((int64_t)sub_1C0AACB9C, (uint64_t)sub_1C0AA4BDC, (uint64_t)sub_1C0AACE00, (uint64_t)sub_1C0AACBC0);
  sub_1C0AAA55C((int64_t)sub_1C0AACB00, (uint64_t)sub_1C0AA4BE8, (uint64_t)sub_1C0AACB24, (uint64_t)sub_1C0AACB30);
  v0 = sub_1C079AB70();
  v4 = sub_1C0AAB37C(v0, v1, v2, v3);
  sub_1C077B5B4();
  sub_1C0778580();
  sub_1C0775844();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1C0AAB37C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t inited;
  char v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  unint64_t v46;
  char v47;
  char v48;
  unint64_t v49;
  char v50;
  _QWORD *v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t result;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(_QWORD *@<X8>);
  uint64_t v69;
  char v70;
  _QWORD *v71;
  _QWORD *v72;
  int64_t v73;
  uint64_t v74;
  int64_t v75;
  uint64_t v76[2];

  sub_1C07ACF80((uint64_t *)&unk_1ED748198);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1078FC0;
  *(_QWORD *)(inited + 32) = a1;
  v64 = inited + 32;
  v65 = inited;
  *(_QWORD *)(inited + 40) = a2;
  *(_QWORD *)(inited + 48) = a3;
  *(_QWORD *)(inited + 56) = a4;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v68 = 0;
  v9 = 0;
  v10 = 0;
  v71 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  while (2)
  {
    if (v10 >= *(_QWORD *)(v65 + 16))
    {
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      result = sub_1C1070D44();
      __break(1u);
      return result;
    }
    v70 = v9;
    v11 = (_QWORD *)(v64 + 16 * v10);
    v13 = *v11;
    v12 = v11[1];
    v15 = (_QWORD *)(*v11 + 64);
    v14 = *v15;
    v72 = v15;
    v16 = 1 << *(_BYTE *)(v13 + 32);
    if (v16 < 64)
      v17 = ~(-1 << v16);
    else
      v17 = -1;
    v18 = v17 & v14;
    v73 = (unint64_t)(v16 + 63) >> 6;
    swift_bridgeObjectRetain_n();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v19 = 0;
    v74 = v12;
    while (v18)
    {
      v20 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v75 = v19;
      v21 = v20 | (v19 << 6);
LABEL_23:
      v26 = (uint64_t *)(*(_QWORD *)(v13 + 48) + 48 * v21);
      v28 = *v26;
      v27 = v26[1];
      v29 = v26[3];
      v30 = v26[5];
      if (*(_QWORD *)(v12 + 16))
      {
        v31 = v13;
        v32 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v21);
        v33 = v26[4];
        v34 = v26[2];
        swift_bridgeObjectRetain_n();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        sub_1C077D774(v28, v27);
        if ((v35 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          v13 = v31;
          goto LABEL_27;
        }
        swift_bridgeObjectRelease();
        v76[0] = 0;
        v76[1] = 0xE000000000000000;
        sub_1C1070774();
        swift_bridgeObjectRelease();
        strcpy((char *)v76, "EntityClass: ");
        HIWORD(v76[1]) = -4864;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        sub_1C106FC94();
        swift_bridgeObjectRelease();
        sub_1C106FC94();
        sub_1C1070C0C();
        sub_1C106FC94();
        swift_bridgeObjectRelease();
        v66 = v76[1];
        v67 = v76[0];
        sub_1C07ACF80(&qword_1ED75E840);
        v41 = swift_initStackObject();
        *(_OWORD *)(v41 + 16) = xmmword_1C1078A20;
        *(_QWORD *)(v41 + 32) = 0x7461636964657270;
        *(_QWORD *)(v41 + 40) = 0xE900000000000065;
        *(_QWORD *)(v41 + 48) = v34;
        *(_QWORD *)(v41 + 56) = v29;
        *(_QWORD *)(v41 + 64) = 0xD000000000000015;
        *(_QWORD *)(v41 + 72) = 0x80000001C10DE890;
        swift_bridgeObjectRelease();
        *(_QWORD *)(v41 + 80) = v33;
        *(_QWORD *)(v41 + 88) = v30;
        *(_QWORD *)(v41 + 96) = 0xD000000000000019;
        *(_QWORD *)(v41 + 104) = 0x80000001C10FB390;
        v76[0] = v32;
        *(_QWORD *)(v41 + 112) = sub_1C1070C0C();
        *(_QWORD *)(v41 + 120) = v42;
        v43 = sub_1C106F97C();
        sub_1C077AB58((uint64_t)v68);
        swift_isUniquelyReferenced_nonNull_native();
        v76[0] = (uint64_t)v71;
        v44 = sub_1C077D774(v67, v66);
        if (__OFADD__(v71[2], (v45 & 1) == 0))
          goto LABEL_53;
        v46 = v44;
        v47 = v45;
        v69 = v43;
        sub_1C07ACF80(&qword_1ED748128);
        v48 = sub_1C107090C();
        v71 = (_QWORD *)v76[0];
        v13 = v31;
        if ((v48 & 1) != 0)
        {
          v49 = sub_1C077D774(v67, v66);
          if ((v47 & 1) != (v50 & 1))
            goto LABEL_55;
          v46 = v49;
        }
        swift_bridgeObjectRelease();
        v51 = v71;
        if ((v47 & 1) == 0)
        {
          v71[(v46 >> 6) + 8] |= 1 << v46;
          v52 = (uint64_t *)(v71[6] + 16 * v46);
          *v52 = v67;
          v52[1] = v66;
          *(_QWORD *)(v71[7] + 8 * v46) = MEMORY[0x1E0DEE9D8];
          v53 = v71[2];
          v54 = v53 + 1;
          v55 = __OFADD__(v53, 1);
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          if (v55)
            goto LABEL_54;
          v71[2] = v54;
          v51 = v71;
        }
        v56 = v51;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v57 = v56[7];
        swift_bridgeObjectRelease();
        v58 = *(_QWORD *)(v57 + 8 * v46);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v57 + 8 * v46) = v58;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1C07EC908();
          v58 = v61;
          *(_QWORD *)(v57 + 8 * v46) = v61;
        }
        v60 = *(_QWORD *)(v58 + 16);
        if (v60 >= *(_QWORD *)(v58 + 24) >> 1)
        {
          sub_1C07EC908();
          v58 = v62;
          *(_QWORD *)(v57 + 8 * v46) = v62;
        }
        v19 = v75;
        *(_QWORD *)(v58 + 16) = v60 + 1;
        *(_QWORD *)(v58 + 8 * v60 + 32) = v69;
        swift_bridgeObjectRelease();
        v68 = sub_1C08B5130;
        v12 = v74;
      }
      else
      {
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
LABEL_27:
        if (qword_1ED762B18 != -1)
          swift_once();
        v36 = sub_1C106F544();
        sub_1C079E000(v36, (uint64_t)qword_1ED762AF8);
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v37 = sub_1C106F538();
        v38 = sub_1C1070390();
        if (os_log_type_enabled(v37, v38))
        {
          v39 = swift_slowAlloc();
          v40 = swift_slowAlloc();
          v76[0] = v40;
          *(_DWORD *)v39 = 136315138;
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          *(_QWORD *)(v39 + 4) = sub_1C0788DAC(v28, v27, v76);
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1C0771000, v37, v38, "Unable to get the count for entityClass %s", (uint8_t *)v39, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C3BA8270](v40, -1, -1);
          MEMORY[0x1C3BA8270](v39, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
        }
        v12 = v74;
        v19 = v75;
      }
    }
    v22 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
LABEL_51:
      __break(1u);
      goto LABEL_52;
    }
    if (v22 >= v73)
      goto LABEL_48;
    v23 = v72[v22];
    v24 = v19 + 1;
    if (v23)
      goto LABEL_22;
    v24 = v19 + 2;
    if (v19 + 2 >= v73)
      goto LABEL_48;
    v23 = v72[v24];
    if (v23)
      goto LABEL_22;
    v24 = v19 + 3;
    if (v19 + 3 >= v73)
      goto LABEL_48;
    v23 = v72[v24];
    if (v23)
    {
LABEL_22:
      v18 = (v23 - 1) & v23;
      v75 = v24;
      v21 = __clz(__rbit64(v23)) + (v24 << 6);
      goto LABEL_23;
    }
    v25 = v19 + 4;
    if (v19 + 4 < v73)
    {
      v23 = v72[v25];
      if (!v23)
      {
        while (1)
        {
          v24 = v25 + 1;
          if (__OFADD__(v25, 1))
            goto LABEL_51;
          if (v24 >= v73)
            goto LABEL_48;
          v23 = v72[v24];
          ++v25;
          if (v23)
            goto LABEL_22;
        }
      }
      v24 = v19 + 4;
      goto LABEL_22;
    }
LABEL_48:
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v9 = 1;
    v10 = 1;
    if ((v70 & 1) == 0)
      continue;
    break;
  }
  swift_setDeallocating();
  sub_1C0BE8EF4();
  sub_1C077AB58((uint64_t)v68);
  return (uint64_t)v71;
}

uint64_t sub_1C0AABB88(uint64_t a1, uint64_t a2, int a3, int a4, void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  sqlite3_stmt *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  sqlite3_stmt *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  sqlite3_stmt *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  char *v48;
  int v49;
  int v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  char v57[24];
  ValueMetadata *v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  ValueMetadata *v62;
  unint64_t v63;
  uint64_t v64;

  v55 = a6;
  v56 = a5;
  v49 = a3;
  v50 = a4;
  v53 = a1;
  v7 = sub_1C07ACF80(&qword_1ED760E68);
  v47 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C07ACF80((uint64_t *)&unk_1ED75E9E0);
  v51 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v48 = (char *)&v45 - v14;
  MEMORY[0x1E0C80A78](v15);
  v52 = (char *)&v45 - v16;
  sub_1C106C484();
  v64 = a2;
  v58 = &type metadata for FusedTripleColumn;
  v46 = sub_1C080ABFC();
  v59 = v46;
  v57[0] = 0;
  v17 = sub_1C106BCBC();
  v62 = (ValueMetadata *)v17;
  v63 = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(&v60);
  sub_1C07ACF80(&qword_1ED760098);
  sub_1C07E6EDC(&qword_1ED7600A0, &qword_1ED760098, MEMORY[0x1E0DEAF38]);
  sub_1C0AACB4C();
  sub_1C106FD6C();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v57);
  sub_1C106C454();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v9, v7);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)&v60);
  sub_1C07ACF80((uint64_t *)&unk_1ED7614B0);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1C1078A20;
  *(_QWORD *)(v18 + 56) = &type metadata for FusedTripleColumn;
  v19 = sub_1C0A56074();
  *(_QWORD *)(v18 + 64) = v19;
  v20 = v49;
  LOBYTE(v9) = v50;
  *(_BYTE *)(v18 + 32) = v49;
  *(_QWORD *)(v18 + 96) = &type metadata for FusedTripleColumn;
  *(_QWORD *)(v18 + 104) = v19;
  *(_BYTE *)(v18 + 72) = (_BYTE)v9;
  v62 = &type metadata for FusedTripleColumn;
  v63 = v46;
  LOBYTE(v60) = v20;
  v21 = MEMORY[0x1E0D23DB0];
  *(_QWORD *)(v18 + 136) = v17;
  *(_QWORD *)(v18 + 144) = v21;
  sub_1C079DFC4((uint64_t *)(v18 + 112));
  sub_1C106C490();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)&v60);
  sub_1C07E6EDC(&qword_1ED756600, (uint64_t *)&unk_1ED75E9E0, MEMORY[0x1E0D242B8]);
  v22 = v48;
  sub_1C106BF98();
  swift_bridgeObjectRelease();
  v23 = *(void (**)(char *, uint64_t))(v51 + 8);
  v23(v12, v10);
  sub_1C07ACF80(&qword_1ED74D520);
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1C1078FC0;
  *(_QWORD *)(v24 + 56) = &type metadata for FusedTripleColumn;
  v25 = sub_1C0A55FF4();
  *(_QWORD *)(v24 + 64) = v25;
  *(_BYTE *)(v24 + 32) = v20;
  *(_QWORD *)(v24 + 96) = &type metadata for FusedTripleColumn;
  *(_QWORD *)(v24 + 104) = v25;
  *(_BYTE *)(v24 + 72) = (_BYTE)v9;
  sub_1C07E6EDC(&qword_1ED748270, (uint64_t *)&unk_1ED75E9E0, MEMORY[0x1E0D24288]);
  v26 = v52;
  sub_1C106BFE0();
  swift_bridgeObjectRelease();
  v23(v22, v10);
  sub_1C07E6EDC(&qword_1ED75E9D8, (uint64_t *)&unk_1ED75E9E0, MEMORY[0x1E0D24290]);
  v27 = v54;
  v28 = sub_1C106BAE8();
  result = ((uint64_t (*)(char *, uint64_t))v23)(v26, v10);
  if (v27)
    return result;
  v30 = sub_1C09D674C();
  v54 = v28;
  while (1)
  {
    if (!v30)
      return swift_release();
    sub_1C106C370();
    v31 = sub_1C106C3A0();
    if (v31)
    {
      MEMORY[0x1E0C80A78](v31);
      *(&v45 - 2) = v30;
      *(&v45 - 1) = 0;
      v33 = sqlite3_column_type(v32, 0);
      if ((_DWORD)v33 == 5)
        goto LABEL_19;
      v60 = sub_1C106FB98();
      v61 = v34;
    }
    else
    {
      sub_1C106C364();
    }
    v36 = v60;
    v35 = v61;
    sub_1C106C370();
    v37 = sub_1C106C3A0();
    if (v37)
    {
      MEMORY[0x1E0C80A78](v37);
      *(&v45 - 2) = v30;
      *(&v45 - 1) = 1;
      v33 = sqlite3_column_type(v38, 1);
      if ((_DWORD)v33 == 5)
      {
LABEL_19:
        MEMORY[0x1E0C80A78](v33);
        *(&v45 - 2) = (uint64_t)sub_1C0AACDF8;
        *(&v45 - 1) = (uint64_t)(&v45 - 4);
        sub_1C106C1C0();
        goto LABEL_22;
      }
      v60 = sub_1C106FB98();
      v61 = v39;
    }
    else
    {
      sub_1C106C364();
    }
    v40 = v60;
    v41 = v61;
    sub_1C106C370();
    v42 = sub_1C106C3A0();
    if (v42)
      break;
    sub_1C106C364();
    v56(v36, v35, v40, v41, v60);
LABEL_16:
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v30 = sub_1C09D674C();
  }
  MEMORY[0x1E0C80A78](v42);
  *(&v45 - 2) = v30;
  *(&v45 - 1) = 2;
  v44 = sqlite3_column_type(v43, 2);
  if ((_DWORD)v44 != 5)
  {
    v60 = sub_1C1070DC8();
    v56(v36, v35, v40, v41, v60);
    goto LABEL_16;
  }
  MEMORY[0x1E0C80A78](v44);
  *(&v45 - 2) = (uint64_t)sub_1C0AACB8C;
  *(&v45 - 1) = (uint64_t)(&v45 - 4);
  sub_1C106C1C0();
LABEL_22:
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1C0AAC344(uint64_t a1, uint64_t a2, int a3, int a4, void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  sqlite3_stmt *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  sqlite3_stmt *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  sqlite3_stmt *v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  char *v47;
  int v48;
  int v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  char v56[24];
  ValueMetadata *v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  ValueMetadata *v61;
  unint64_t v62;
  uint64_t v63;

  v54 = a6;
  v55 = a5;
  v48 = a3;
  v49 = a4;
  v52 = a1;
  v7 = sub_1C07ACF80(&qword_1ED760E68);
  v46 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C07ACF80((uint64_t *)&unk_1ED75E9E0);
  v50 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v47 = (char *)&v44 - v14;
  MEMORY[0x1E0C80A78](v15);
  v51 = (char *)&v44 - v16;
  sub_1C106C484();
  v63 = a2;
  v57 = &type metadata for FusedTripleColumn;
  v45 = sub_1C080ABFC();
  v58 = v45;
  v56[0] = 0;
  v17 = sub_1C106BCBC();
  v61 = (ValueMetadata *)v17;
  v62 = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(&v59);
  sub_1C07ACF80(&qword_1ED760098);
  sub_1C07E6EDC(&qword_1ED7600A0, &qword_1ED760098, MEMORY[0x1E0DEAF38]);
  sub_1C0AACB4C();
  sub_1C106FD6C();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v56);
  sub_1C106C454();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v9, v7);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)&v59);
  sub_1C07ACF80((uint64_t *)&unk_1ED7614B0);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1C1078A20;
  *(_QWORD *)(v18 + 56) = &type metadata for FusedTripleColumn;
  v19 = sub_1C0A56074();
  *(_QWORD *)(v18 + 64) = v19;
  v20 = v48;
  LOBYTE(v9) = v49;
  *(_BYTE *)(v18 + 32) = v48;
  *(_QWORD *)(v18 + 96) = &type metadata for FusedTripleColumn;
  *(_QWORD *)(v18 + 104) = v19;
  *(_BYTE *)(v18 + 72) = (_BYTE)v9;
  v61 = &type metadata for FusedTripleColumn;
  v62 = v45;
  LOBYTE(v59) = v20;
  v21 = MEMORY[0x1E0D23DB0];
  *(_QWORD *)(v18 + 136) = v17;
  *(_QWORD *)(v18 + 144) = v21;
  sub_1C079DFC4((uint64_t *)(v18 + 112));
  sub_1C106C490();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)&v59);
  sub_1C07E6EDC(&qword_1ED756600, (uint64_t *)&unk_1ED75E9E0, MEMORY[0x1E0D242B8]);
  v22 = v47;
  sub_1C106BF98();
  swift_bridgeObjectRelease();
  v23 = *(void (**)(char *, uint64_t))(v50 + 8);
  v23(v12, v10);
  sub_1C07ACF80(&qword_1ED74D520);
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1C1078FC0;
  *(_QWORD *)(v24 + 56) = &type metadata for FusedTripleColumn;
  v25 = sub_1C0A55FF4();
  *(_QWORD *)(v24 + 64) = v25;
  *(_BYTE *)(v24 + 32) = v20;
  *(_QWORD *)(v24 + 96) = &type metadata for FusedTripleColumn;
  *(_QWORD *)(v24 + 104) = v25;
  *(_BYTE *)(v24 + 72) = (_BYTE)v9;
  sub_1C07E6EDC(&qword_1ED748270, (uint64_t *)&unk_1ED75E9E0, MEMORY[0x1E0D24288]);
  v26 = v51;
  sub_1C106BFE0();
  swift_bridgeObjectRelease();
  v23(v22, v10);
  sub_1C07E6EDC(&qword_1ED75E9D8, (uint64_t *)&unk_1ED75E9E0, MEMORY[0x1E0D24290]);
  v27 = v53;
  v28 = sub_1C106BAE8();
  result = ((uint64_t (*)(char *, uint64_t))v23)(v26, v10);
  if (!v27)
  {
    v30 = sub_1C09D674C();
    v53 = v28;
    while (1)
    {
      if (!v30)
        return swift_release();
      sub_1C106C370();
      v31 = sub_1C106C3A0();
      if (v31)
      {
        MEMORY[0x1E0C80A78](v31);
        *(&v44 - 2) = v30;
        *(&v44 - 1) = 0;
        v33 = sqlite3_column_type(v32, 0);
        if ((_DWORD)v33 == 5)
          goto LABEL_19;
        v59 = sub_1C106FB98();
        v60 = v34;
      }
      else
      {
        sub_1C106C364();
      }
      v36 = v59;
      v35 = v60;
      sub_1C106C370();
      v37 = sub_1C106C3A0();
      if (v37)
      {
        MEMORY[0x1E0C80A78](v37);
        *(&v44 - 2) = v30;
        *(&v44 - 1) = 1;
        v33 = sqlite3_column_type(v38, 1);
        if ((_DWORD)v33 == 5)
          goto LABEL_19;
        v59 = sub_1C106FB98();
        v60 = v39;
      }
      else
      {
        sub_1C106C364();
      }
      v40 = v59;
      v41 = v60;
      sub_1C106C370();
      v42 = sub_1C106C3A0();
      if (v42)
      {
        MEMORY[0x1E0C80A78](v42);
        *(&v44 - 2) = v30;
        *(&v44 - 1) = 2;
        v33 = sqlite3_column_type(v43, 2);
        if ((_DWORD)v33 == 5)
        {
LABEL_19:
          MEMORY[0x1E0C80A78](v33);
          *(&v44 - 2) = (uint64_t)sub_1C0AACDF8;
          *(&v44 - 1) = (uint64_t)(&v44 - 4);
          sub_1C106C1C0();
          result = swift_unexpectedError();
          __break(1u);
          return result;
        }
        v59 = sub_1C1070DC8();
        v55(v36, v35, v40, v41, v59);
      }
      else
      {
        sub_1C106C364();
        v55(v36, v35, v40, v41, v59);
      }
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v30 = sub_1C09D674C();
    }
  }
  return result;
}

uint64_t sub_1C0AACB00(uint64_t a1)
{
  uint64_t v1;

  return sub_1C0AAAB04(a1, *(uint64_t **)(v1 + 16), type metadata accessor for EventTriple) & 1;
}

void sub_1C0AACB24(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t *v5;

  sub_1C0AAADD4(a1, a2, a3, a4, a5, v5[2], v5[3], v5[4]);
}

uint64_t sub_1C0AACB30(uint64_t a1)
{
  return sub_1C0AACBDC(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0AABB88);
}

unint64_t sub_1C0AACB4C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED75E940;
  if (!qword_1ED75E940)
  {
    v1 = sub_1C106E590();
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0D3CDE0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED75E940);
  }
  return result;
}

uint64_t sub_1C0AACB8C()
{
  uint64_t v0;

  return sub_1C0D8A650(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1C0AACB94()
{
  uint64_t v0;

  return sub_1C0D8A704(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1C0AACB9C(uint64_t a1)
{
  uint64_t v1;

  return sub_1C0AAAB04(a1, *(uint64_t **)(v1 + 16), type metadata accessor for GraphTriple) & 1;
}

uint64_t sub_1C0AACBC0(uint64_t a1)
{
  return sub_1C0AACBDC(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0AAC344);
}

uint64_t sub_1C0AACBDC(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 + 16), *(unsigned __int8 *)(v2 + 24), *(unsigned __int8 *)(v2 + 25), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t _s14descr1E7A1E1C1V11OntologyKeyVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s14descr1E7A1E1C1V11OntologyKeyVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

_QWORD *_s14descr1E7A1E1C1V11OntologyKeyVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *_s14descr1E7A1E1C1V11OntologyKeyVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *_s14descr1E7A1E1C1V11OntologyKeyVMa()
{
  return &_s14descr1E7A1E1C1V11OntologyKeyVN;
}

void sub_1C0AACD7C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C077AE90();
  sub_1C0778534();
}

ValueMetadata *_s14descr1E7A1E1C1V14PredicateStatsVMa()
{
  return &_s14descr1E7A1E1C1V14PredicateStatsVN;
}

unint64_t sub_1C0AACDBC()
{
  unint64_t result;

  result = qword_1EF63A6F8;
  if (!qword_1EF63A6F8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109EBB4, &_s14descr1E7A1E1C1V11OntologyKeyVN);
    atomic_store(result, (unint64_t *)&qword_1EF63A6F8);
  }
  return result;
}

uint64_t GraphStore.loadConstructionGraphTriples(subject:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD v3[4];

  v3[2] = a1;
  sub_1C0779758();
  sub_1C0BB9980((uint64_t)sub_1C0AAD038, (uint64_t)v3);
  sub_1C07A0D60();
  return v1;
}

uint64_t sub_1C0AACE58@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v13[5];
  char v14[24];
  ValueMetadata *v15;
  unint64_t v16;
  uint64_t v17[5];
  uint64_t *v18;

  v18 = a2;
  v4 = sub_1C07ACF80(&qword_1ED750620);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v13[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ConstructionGraphTriple(0);
  v15 = &type metadata for FusedTripleColumn;
  v16 = sub_1C080ABFC();
  v14[0] = 0;
  v8 = sub_1C106E590();
  v13[3] = v8;
  v13[4] = sub_1C07803B8((unint64_t *)&qword_1ED75E940, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CDE0]);
  v9 = sub_1C079DFC4(v13);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v9, a1, v8);
  v17[3] = sub_1C106BCBC();
  v17[4] = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v17);
  sub_1C106C310();
  sub_1C0784B30((uint64_t)v13, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v14);
  sub_1C07803B8(&qword_1ED750DF8, type metadata accessor for ConstructionGraphTriple, (uint64_t)&protocol conformance descriptor for ConstructionGraphTriple);
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v17);
  sub_1C0AAD600();
  sub_1C07803B8(&qword_1ED750E08, type metadata accessor for ConstructionGraphTriple, (uint64_t)&protocol conformance descriptor for ConstructionGraphTriple);
  v10 = sub_1C106BAB8();
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (!v2)
    *v18 = v10;
  return result;
}

uint64_t sub_1C0AAD038@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1C0AACE58(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1C0AAD050()
{
  return sub_1C0AAD0A4((uint64_t)sub_1C0AAD064, "GraphStore: clearConstructionGraphTriples: %ld deleted.");
}

uint64_t sub_1C0AAD064@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C0AAD204(type metadata accessor for ConstructionGraphTriple, &qword_1ED750DF8, (uint64_t)&protocol conformance descriptor for ConstructionGraphTriple, a1);
}

uint64_t sub_1C0AAD090()
{
  return sub_1C0AAD0A4((uint64_t)sub_1C0AAD1D8, "GraphStore: clearConstructionEventTriples: %ld deleted.");
}

uint64_t sub_1C0AAD0A4(uint64_t a1, const char *a2)
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;

  sub_1C0779758();
  sub_1C0BB9B94(a1, 0);
  sub_1C07A0D60();
  if (qword_1ED762B20 != -1)
    swift_once();
  v4 = sub_1C106F544();
  sub_1C079E000(v4, (uint64_t)qword_1ED78D9F8);
  v5 = sub_1C106F538();
  v6 = sub_1C10703A8();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v7 = 134217984;
    sub_1C10705AC();
    _os_log_impl(&dword_1C0771000, v5, v6, a2, v7, 0xCu);
    MEMORY[0x1C3BA8270](v7, -1, -1);
  }

  return a1;
}

uint64_t sub_1C0AAD1D8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C0AAD204(type metadata accessor for ConstructionEventTriple, &qword_1ED750D68, (uint64_t)&protocol conformance descriptor for ConstructionEventTriple, a1);
}

uint64_t sub_1C0AAD204@<X0>(uint64_t (*a1)(uint64_t)@<X1>, unint64_t *a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t result;

  a1(0);
  sub_1C07803B8(a2, a1, a3);
  result = sub_1C106B9B0();
  if (!v4)
    *a4 = result;
  return result;
}

uint64_t sub_1C0AAD288(uint64_t a1, uint64_t a2)
{
  _QWORD v3[4];

  v3[2] = a1;
  v3[3] = a2;
  sub_1C0779758();
  sub_1C0BB9B94((uint64_t)sub_1C0AAD5E8, (uint64_t)v3);
  return swift_release();
}

uint64_t sub_1C0AAD2E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  void (*v16)(uint64_t *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29[5];
  char v30[24];
  ValueMetadata *v31;
  unint64_t v32;
  uint64_t v33[3];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v26 = a1;
  v23 = a4;
  v24 = a3;
  v36 = sub_1C106BE78();
  v28 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C07ACF80(&qword_1ED761500);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C07ACF80(&qword_1ED750620);
  v25 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ConstructionGraphTriple(0);
  v31 = &type metadata for FusedTripleColumn;
  v32 = sub_1C080ABFC();
  v30[0] = 0;
  v13 = sub_1C106E590();
  v29[3] = v13;
  v14 = sub_1C07803B8((unint64_t *)&qword_1ED75E940, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CDE0]);
  v29[4] = v14;
  v15 = sub_1C079DFC4(v29);
  v16 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  v16(v15, a2, v13);
  v34 = sub_1C106BCBC();
  v35 = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v33);
  sub_1C106C310();
  sub_1C0784B30((uint64_t)v29, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v30);
  sub_1C07803B8(&qword_1ED750DF8, type metadata accessor for ConstructionGraphTriple, (uint64_t)&protocol conformance descriptor for ConstructionGraphTriple);
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v33);
  v17 = sub_1C106C604();
  sub_1C07B2D8C((uint64_t)v9, 1, 1, v17);
  v30[0] = 0;
  v34 = v13;
  v35 = v14;
  v18 = sub_1C079DFC4(v33);
  v16(v18, v24, v13);
  sub_1C0A560EC();
  sub_1C106BED8();
  sub_1C0784B30((uint64_t)v33, (uint64_t *)&unk_1ED7626B0);
  v19 = v27;
  v20 = sub_1C106C13C();
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v36);
    sub_1C0784B30((uint64_t)v9, &qword_1ED761500);
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v12, v10);
  }
  else
  {
    v22 = v20;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v36);
    sub_1C0784B30((uint64_t)v9, &qword_1ED761500);
    result = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v12, v10);
    *v23 = v22;
  }
  return result;
}

uint64_t sub_1C0AAD5E8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1C0AAD2E4(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

unint64_t sub_1C0AAD600()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED750600;
  if (!qword_1ED750600)
  {
    v1 = sub_1C07D4BEC(&qword_1ED750620);
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0D24290], v1);
    atomic_store(result, (unint64_t *)&qword_1ED750600);
  }
  return result;
}

void sub_1C0AAD644()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v0 = sub_1C07ACF80(&qword_1ED756690);
  MEMORY[0x1E0C80A78](v0);
  sub_1C077AE40();
  v27 = v1;
  v2 = sub_1C106D9A8();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v23 - v6;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v23 - v9;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v23 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v23 - v15;
  v17 = sub_1C106D9B4();
  v25 = *(_QWORD *)(v17 - 8);
  v26 = v17;
  MEMORY[0x1E0C80A78](v17);
  sub_1C077AE40();
  v24 = v18;
  sub_1C07ACF80(&qword_1ED75E838);
  sub_1C106E41C();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C1079220;
  sub_1C106DEB8();
  sub_1C0AA7870();
  sub_1C07A6D1C((uint64_t)v16);
  sub_1C07A6D1C((uint64_t)v13);
  sub_1C07A6D1C((uint64_t)v10);
  sub_1C07A6D1C((uint64_t)v7);
  sub_1C07A6D1C((uint64_t)v4);
  v19 = v24;
  sub_1C106D864();
  swift_bridgeObjectRelease();
  sub_1C078B048((uint64_t)v4);
  sub_1C078B048((uint64_t)v7);
  sub_1C078B048((uint64_t)v10);
  sub_1C078B048((uint64_t)v13);
  sub_1C078B048((uint64_t)v16);
  v20 = sub_1C106EB78();
  v21 = v27;
  sub_1C07B2D8C(v27, 1, 1, v20);
  v22 = sub_1C0BA46B8(v19, v21);
  sub_1C0A6D714(v21);
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v19, v26);
  sub_1C0A5DCE4(v22);
  swift_bridgeObjectRelease();
  sub_1C0898DB0();
}

double sub_1C0AAD904@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _OWORD *a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  void (*v18)(uint64_t *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  double result;
  __int128 v26;
  __int128 v27;
  _OWORD *v28;
  uint64_t v29;
  _OWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38[3];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41[3];
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;

  v33 = a5;
  v31 = a3;
  v30 = a6;
  v9 = sub_1C07ACF80(&qword_1EF63A700);
  v32 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v29 - v13;
  if (qword_1EF62DDD0 != -1)
    swift_once();
  v15 = sub_1C106C49C();
  v16 = sub_1C079E000(v15, (uint64_t)qword_1EF6D1398);
  v39 = v15;
  v40 = MEMORY[0x1E0D24668];
  v17 = sub_1C079DFC4(v38);
  v18 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  v18(v17, v16, v15);
  v36 = MEMORY[0x1E0DEA968];
  v37 = MEMORY[0x1E0D24960];
  v34 = a1;
  v35 = a2;
  v19 = sub_1C106BCBC();
  v20 = MEMORY[0x1E0D23DC0];
  v42 = v19;
  v43 = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v41);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C07A6D28();
  sub_1C0A77678((uint64_t)&v34);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v38);
  sub_1C0AA3CF0();
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v41);
  if (qword_1EF62DDD8 != -1)
    swift_once();
  v21 = sub_1C079E000(v15, (uint64_t)qword_1EF6D13B0);
  v39 = v15;
  v40 = MEMORY[0x1E0D24668];
  v22 = sub_1C079DFC4(v38);
  v18(v22, v21, v15);
  v36 = MEMORY[0x1E0DEA968];
  v37 = MEMORY[0x1E0D24960];
  v34 = v31;
  v35 = a4;
  v42 = v19;
  v43 = v20;
  sub_1C079DFC4(v41);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C07A6D28();
  sub_1C0A77678((uint64_t)&v34);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v38);
  sub_1C0AADC38(&qword_1EF63A708, MEMORY[0x1E0D242A0]);
  sub_1C106BDF4();
  v23 = *(void (**)(char *, uint64_t))(v32 + 8);
  v23(v11, v9);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v41);
  sub_1C0AADC38(&qword_1EF63A710, MEMORY[0x1E0D24290]);
  sub_1C0AA3D98();
  v24 = v47;
  sub_1C106BAC4();
  v23(v14, v9);
  if (!v24)
  {
    result = *(double *)&v44;
    v26 = v45;
    v27 = v46;
    v28 = v30;
    *v30 = v44;
    v28[1] = v26;
    v28[2] = v27;
  }
  return result;
}

uint64_t sub_1C0AADC38(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1C07D4BEC(&qword_1EF63A700);
    result = MEMORY[0x1C3BA8174](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0AADC7C(uint64_t a1)
{
  uint64_t v1;
  _QWORD v3[4];

  v3[2] = a1;
  swift_retain();
  sub_1C0BB998C((uint64_t)sub_1C0AADEBC, (uint64_t)v3);
  sub_1C07A0D60();
  return v1;
}

uint64_t sub_1C0AADCD4@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v13[5];
  char v14[24];
  ValueMetadata *v15;
  unint64_t v16;
  uint64_t v17[5];
  uint64_t *v18;

  v18 = a2;
  v4 = sub_1C07ACF80(&qword_1ED759F00);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v13[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for EntityTriple(0);
  v15 = &type metadata for SourcedTripleColumn;
  v16 = sub_1C091755C();
  v14[0] = 0;
  v8 = sub_1C106E590();
  v13[3] = v8;
  v13[4] = sub_1C0AADED4(&qword_1ED75E940, (void (*)(uint64_t))MEMORY[0x1E0D3CE28]);
  v9 = sub_1C079DFC4(v13);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v9, a1, v8);
  v17[3] = sub_1C106BCBC();
  v17[4] = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v17);
  sub_1C106C310();
  sub_1C0A77678((uint64_t)v13);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v14);
  sub_1C0AADED4(&qword_1ED75A488, (void (*)(uint64_t))type metadata accessor for EntityTriple);
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v17);
  sub_1C0AAE2FC(&qword_1ED759ED8);
  sub_1C0AADED4(&qword_1ED75A490, (void (*)(uint64_t))type metadata accessor for EntityTriple);
  v10 = sub_1C106BAB8();
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (!v2)
    *v18 = v10;
  return result;
}

uint64_t sub_1C0AADEBC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1C0AADCD4(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1C0AADED4(uint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result;

  result = *a1;
  if (!result)
  {
    a2(255);
    sub_1C077D8A0();
  }
  return result;
}

uint64_t sub_1C0AADF0C(_BYTE *a1)
{
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _BYTE v7[24];
  uint64_t v8;

  v7[16] = *a1;
  swift_retain();
  sub_1C0BB9B94((uint64_t)sub_1C0AAE2E4, (uint64_t)v7);
  sub_1C07A0D60();
  if (qword_1ED762B20 != -1)
    swift_once();
  v2 = sub_1C106F544();
  sub_1C079E000(v2, (uint64_t)qword_1ED78D9F8);
  v3 = sub_1C106F538();
  v4 = sub_1C10703A8();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v5 = 134217984;
    v8 = v1;
    sub_1C10705AC();
    _os_log_impl(&dword_1C0771000, v3, v4, "GraphStore: clearEntityTriples: %ld deleted.", v5, 0xCu);
    MEMORY[0x1C3BA8270](v5, -1, -1);
  }

  return v1;
}

uint64_t sub_1C0AAE04C@<X0>(unsigned __int8 a1@<W1>, uint64_t *a2@<X8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t *v15;
  char v16;
  ValueMetadata *v17;
  unint64_t v18;
  uint64_t v19;

  v15 = a2;
  v3 = a1;
  v4 = sub_1C07ACF80(&qword_1ED759F00);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v15 - v10;
  type metadata accessor for EntityTriple(0);
  sub_1C0AADED4(&qword_1ED75A488, (void (*)(uint64_t))type metadata accessor for EntityTriple);
  sub_1C106B944();
  if (v3 != 4)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v11, v4);
    v17 = &type metadata for SourcedTripleColumn;
    v18 = sub_1C091755C();
    v16 = 8;
    __asm { BR              X12 }
  }
  v12 = v19;
  v13 = sub_1C106C124();
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v11, v4);
  if (!v12)
    *v15 = v13;
  return result;
}

uint64_t sub_1C0AAE2E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1C0AAE04C(*(_BYTE *)(v1 + 16), a1);
}

uint64_t sub_1C0AAE2FC(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (!result)
  {
    sub_1C07D4BEC(&qword_1ED759F00);
    sub_1C077D8A0();
  }
  return result;
}

void (*GraphStore.loadEventTriples()())(uint64_t, _QWORD)
{
  return sub_1C0AAE3B4((uint64_t)sub_1C0AAE47C, (void (*)(uint64_t, _QWORD))sub_1C0BB9644);
}

uint64_t sub_1C0AAE34C(uint64_t a1)
{
  uint64_t v1;
  _QWORD v3[4];

  v3[2] = a1;
  sub_1C0779758();
  sub_1C0BB9644((uint64_t)sub_1C0AAF250, (uint64_t)v3);
  sub_1C07A0D60();
  return v1;
}

Swift::Int __swiftcall GraphStore.eventTripleCount()()
{
  return (Swift::Int)sub_1C0AAE3B4((uint64_t)sub_1C0AAE408, (void (*)(uint64_t, _QWORD))sub_1C0BB97A8);
}

void (*sub_1C0AAE3B4(uint64_t a1, void (*a2)(uint64_t, _QWORD)))(uint64_t, _QWORD)
{
  sub_1C0779758();
  a2(a1, 0);
  sub_1C07A0D60();
  return a2;
}

uint64_t sub_1C0AAE408@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  type metadata accessor for EventTriple(0);
  sub_1C0AADED4(&qword_1ED75E620, (void (*)(uint64_t))type metadata accessor for EventTriple);
  result = sub_1C106B92C();
  if (!v1)
    *a1 = result;
  return result;
}

uint64_t sub_1C0AAE47C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  type metadata accessor for EventTriple(0);
  sub_1C0AADED4(&qword_1ED756858, (void (*)(uint64_t))type metadata accessor for EventTriple);
  sub_1C0AADED4(&qword_1ED75E620, (void (*)(uint64_t))type metadata accessor for EventTriple);
  result = sub_1C106BD70();
  if (!v1)
    *a1 = result;
  return result;
}

uint64_t sub_1C0AAE51C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD v20[2];
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24[5];
  char v25[24];
  ValueMetadata *v26;
  unint64_t v27;
  uint64_t v28;

  v3 = sub_1C106E590();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1C106BCBC();
  v7 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = MEMORY[0x1E0DEE9D8];
  if (v11)
  {
    v20[1] = v1;
    v28 = MEMORY[0x1E0DEE9D8];
    sub_1C09D3CC0();
    v13 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v21 = *(_QWORD *)(v4 + 72);
    v22 = v10;
    v14 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    v15 = v4;
    do
    {
      v14(v6, v13, v3);
      v26 = &type metadata for FusedTripleColumn;
      v27 = sub_1C080ABFC();
      v25[0] = 0;
      v24[3] = v3;
      v24[4] = sub_1C0AADED4(&qword_1ED75E940, (void (*)(uint64_t))MEMORY[0x1E0D3CE28]);
      v16 = sub_1C079DFC4(v24);
      v14((char *)v16, (uint64_t)v6, v3);
      sub_1C106C310();
      sub_1C0A77678((uint64_t)v24);
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v25);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v6, v3);
      v12 = v28;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C09D3CC0();
        v12 = v28;
      }
      v17 = *(_QWORD *)(v12 + 16);
      if (v17 >= *(_QWORD *)(v12 + 24) >> 1)
      {
        sub_1C09D3CC0();
        v12 = v28;
      }
      *(_QWORD *)(v12 + 16) = v17 + 1;
      v8 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v7 + 32))(v12+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v17, v22, v23);
      v28 = v12;
      v13 += v21;
      --v11;
    }
    while (v11);
  }
  MEMORY[0x1E0C80A78](v8);
  v20[-2] = v12;
  sub_1C0779758();
  v18 = sub_1C0BB9644((uint64_t)sub_1C0AAF200, (uint64_t)&v20[-4]);
  swift_bridgeObjectRelease();
  swift_release();
  return v18;
}

uint64_t sub_1C0AAE7C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19[7];

  v17 = a1;
  v15 = a3;
  v4 = sub_1C106BCB0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C07ACF80(&qword_1ED75E4F8);
  v16 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for EventTriple(0);
  v19[6] = a2;
  sub_1C106BC98();
  v19[3] = sub_1C106BCBC();
  v19[4] = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v19);
  sub_1C07ACF80(&qword_1ED744790);
  sub_1C0AAF218(&qword_1ED744798, &qword_1ED744790);
  sub_1C106FD78();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1C0AADED4(&qword_1ED75E620, (void (*)(uint64_t))type metadata accessor for EventTriple);
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v19);
  sub_1C0AAF218(&qword_1ED75E4F0, &qword_1ED75E4F8);
  sub_1C0AADED4(&qword_1ED756858, (void (*)(uint64_t))type metadata accessor for EventTriple);
  v11 = v18;
  v12 = sub_1C106BAB8();
  result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v10, v8);
  if (!v11)
    *v15 = v12;
  return result;
}

uint64_t sub_1C0AAE9DC@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v13[5];
  char v14[24];
  ValueMetadata *v15;
  unint64_t v16;
  uint64_t v17[5];
  uint64_t *v18;

  v18 = a2;
  v4 = sub_1C07ACF80(&qword_1ED75E4F8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v13[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for EventTriple(0);
  v15 = &type metadata for FusedTripleColumn;
  v16 = sub_1C080ABFC();
  v14[0] = 0;
  v8 = sub_1C106E590();
  v13[3] = v8;
  v13[4] = sub_1C0AADED4(&qword_1ED75E940, (void (*)(uint64_t))MEMORY[0x1E0D3CE28]);
  v9 = sub_1C079DFC4(v13);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v9, a1, v8);
  v17[3] = sub_1C106BCBC();
  v17[4] = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v17);
  sub_1C106C310();
  sub_1C0A77678((uint64_t)v13);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v14);
  sub_1C0AADED4(&qword_1ED75E620, (void (*)(uint64_t))type metadata accessor for EventTriple);
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v17);
  sub_1C0AAF218(&qword_1ED75E4F0, &qword_1ED75E4F8);
  sub_1C0AADED4(&qword_1ED756858, (void (*)(uint64_t))type metadata accessor for EventTriple);
  v10 = sub_1C106BAB8();
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (!v2)
    *v18 = v10;
  return result;
}

uint64_t sub_1C0AAEBCC(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  _QWORD v5[6];

  *(double *)&v5[2] = a3;
  v5[3] = a1;
  v5[4] = a2;
  sub_1C0779758();
  sub_1C0BB9644((uint64_t)sub_1C0AAF1E4, (uint64_t)v5);
  sub_1C07A0D60();
  return v3;
}

uint64_t sub_1C0AAEC24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>, double a5@<D0>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  unint64_t v24;
  ValueMetadata *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, uint64_t);
  char *v35;
  uint64_t *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  ValueMetadata *v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46[3];
  ValueMetadata *v47;
  unint64_t v48;
  uint64_t v49[3];
  ValueMetadata *v50;
  unint64_t v51;
  uint64_t v52[3];
  ValueMetadata *v53;
  unint64_t v54;

  v38 = a3;
  v39 = a1;
  v36 = a4;
  v7 = sub_1C07ACF80(&qword_1ED75E4F8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v41 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v32 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v32 - v14;
  type metadata accessor for EventTriple(0);
  sub_1C07ACF80(&qword_1ED761300);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1C1079220;
  *(_QWORD *)(v16 + 56) = &type metadata for FusedTripleColumn;
  *(_QWORD *)(v16 + 64) = sub_1C0A56034();
  *(_BYTE *)(v16 + 32) = 8;
  sub_1C0AADED4(&qword_1ED75E620, (void (*)(uint64_t))type metadata accessor for EventTriple);
  sub_1C106B950();
  swift_bridgeObjectRelease();
  v50 = &type metadata for FusedTripleColumn;
  v43 = sub_1C080ABFC();
  v51 = v43;
  LOBYTE(v49[0]) = 8;
  v17 = a2;
  v47 = (ValueMetadata *)MEMORY[0x1E0DEB070];
  v48 = MEMORY[0x1E0D249C8];
  *(double *)v46 = a5;
  v18 = sub_1C106BCBC();
  v19 = MEMORY[0x1E0D23DC0];
  v42 = (ValueMetadata *)v18;
  v53 = (ValueMetadata *)v18;
  v54 = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v52);
  sub_1C106C0B8();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v46);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v49);
  v20 = sub_1C0AAF218(&qword_1ED7565E0, &qword_1ED75E4F8);
  sub_1C106BDF4();
  v21 = v41;
  v44 = v8;
  v22 = *(void (**)(char *, uint64_t))(v8 + 8);
  v22(v12, v7);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v52);
  if (v17)
  {
    (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v21, v15, v7);
    v46[0] = v17;
    v50 = &type metadata for FusedTripleColumn;
    v51 = v43;
    LOBYTE(v49[0]) = 0;
    v53 = v42;
    v54 = v19;
    v37 = sub_1C079DFC4(v52);
    sub_1C07ACF80(&qword_1ED760098);
    sub_1C0AAF218((uint64_t *)&qword_1ED7600A0, &qword_1ED760098);
    sub_1C0AADED4(&qword_1ED75E940, (void (*)(uint64_t))MEMORY[0x1E0D3CE28]);
    v19 = MEMORY[0x1E0D23DC0];
    sub_1C106FD6C();
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v49);
    sub_1C106BDF4();
    v22(v21, v7);
    v22(v15, v7);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v52);
    (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v15, v12, v7);
  }
  v23 = v7;
  v24 = v43;
  v37 = (uint64_t *)v20;
  v25 = v42;
  v26 = v38;
  if (v38)
  {
    (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v21, v15, v23);
    v46[0] = v26;
    v53 = &type metadata for FusedTripleColumn;
    v54 = v24;
    LOBYTE(v52[0]) = 1;
    v50 = v25;
    v51 = v19;
    sub_1C079DFC4(v49);
    v33 = v12;
    v34 = v22;
    sub_1C07ACF80(&qword_1ED746288);
    v35 = v15;
    sub_1C0AAF218(&qword_1ED746290, &qword_1ED746288);
    sub_1C0AADED4(&qword_1ED7564A0, (void (*)(uint64_t))MEMORY[0x1E0D3CC50]);
    v22 = v34;
    sub_1C106FD6C();
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v52);
    v45 = v26;
    v53 = &type metadata for FusedTripleColumn;
    v54 = v43;
    LOBYTE(v52[0]) = 3;
    v47 = v25;
    v48 = v19;
    sub_1C079DFC4(v46);
    v15 = v35;
    sub_1C106FD6C();
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v52);
    v53 = v25;
    v54 = v19;
    sub_1C079DFC4(v52);
    sub_1C106C34C();
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v46);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v49);
    v27 = v33;
    v28 = v41;
    sub_1C106BDF4();
    v22(v28, v23);
    v22(v15, v23);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v52);
    (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v15, v27, v23);
  }
  sub_1C0AAF218(&qword_1ED75E4F0, &qword_1ED75E4F8);
  sub_1C0AADED4(&qword_1ED756858, (void (*)(uint64_t))type metadata accessor for EventTriple);
  v29 = v40;
  v30 = sub_1C106BAB8();
  result = ((uint64_t (*)(char *, uint64_t))v22)(v15, v23);
  if (!v29)
    *v36 = v30;
  return result;
}

uint64_t sub_1C0AAF1E4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1C0AAEC24(a1, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a2, *(double *)(v2 + 16));
}

uint64_t sub_1C0AAF200@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1C0AAE7C8(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1C0AAF218(uint64_t *a1, uint64_t *a2)
{
  uint64_t result;

  result = *a1;
  if (!result)
  {
    sub_1C07D4BEC(a2);
    sub_1C077D8A0();
  }
  return result;
}

uint64_t sub_1C0AAF250@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1C0AAE9DC(*(_QWORD *)(v1 + 16), a1);
}

Swift::Int __swiftcall GraphStore.expiredGraphTripleCount()()
{
  return sub_1C0AAF2AC((uint64_t)sub_1C0AAF274);
}

uint64_t sub_1C0AAF274@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C0AAF32C(type metadata accessor for ExpiredGraphTriple, &qword_1ED75E6F8, (uint64_t)&protocol conformance descriptor for ExpiredGraphTriple, a1);
}

Swift::Int __swiftcall GraphStore.expiredEventTripleCount()()
{
  return sub_1C0AAF2AC((uint64_t)sub_1C0AAF300);
}

uint64_t sub_1C0AAF2AC(uint64_t a1)
{
  uint64_t v2;

  swift_retain();
  v2 = sub_1C0BB97A8(a1, 0);
  swift_release();
  return v2;
}

uint64_t sub_1C0AAF300@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C0AAF32C(type metadata accessor for ExpiredEventTriple, &qword_1ED757408, (uint64_t)&protocol conformance descriptor for ExpiredEventTriple, a1);
}

uint64_t sub_1C0AAF32C@<X0>(uint64_t (*a1)(uint64_t)@<X1>, unint64_t *a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t result;

  a1(0);
  sub_1C07803B8(a2, a1, a3);
  result = sub_1C106B92C();
  if (!v4)
    *a4 = result;
  return result;
}

uint64_t sub_1C0AAF3B0(uint64_t a1)
{
  return sub_1C0AAF3E4(a1, qword_1ED7557A8);
}

uint64_t sub_1C0AAF3C8(uint64_t a1)
{
  return sub_1C0AAF3E4(a1, qword_1ED7557C8);
}

uint64_t sub_1C0AAF3E4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_1C106C49C();
  sub_1C0800A9C(v3, a2);
  sub_1C079E000(v3, (uint64_t)a2);
  return sub_1C106C4A8();
}

double sub_1C0AAF440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  char *v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  double result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  _QWORD v28[5];
  uint64_t v29[5];
  double v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v24 = a2;
  v27 = a1;
  v4 = sub_1C07ACF80(&qword_1ED760E68);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1C0778564();
  v8 = v7 - v6;
  v9 = sub_1C07ACF80((uint64_t *)&unk_1ED75E9E0);
  v25 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v26 = (char *)&v23 - v13;
  sub_1C106C484();
  if (qword_1ED7557C0 != -1)
    swift_once();
  v14 = sub_1C106C49C();
  sub_1C079E000(v14, (uint64_t)qword_1ED7557A8);
  v29[3] = v14;
  v29[4] = MEMORY[0x1E0D24668];
  v15 = sub_1C079DFC4(v29);
  sub_1C07A26E4((uint64_t)v15);
  v28[3] = MEMORY[0x1E0DEA968];
  v28[4] = MEMORY[0x1E0D24960];
  v28[0] = v24;
  v28[1] = a3;
  v32 = sub_1C106BCBC();
  v33 = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4((uint64_t *)&v30);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C310();
  sub_1C0A77678((uint64_t)v28);
  sub_1C07A9C3C();
  sub_1C106C454();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)&v30);
  sub_1C07ACF80((uint64_t *)&unk_1ED7614B0);
  v16 = sub_1C0787A5C();
  *(_OWORD *)(v16 + 16) = xmmword_1C1079220;
  if (qword_1ED7566A8 != -1)
    swift_once();
  sub_1C079E000(v14, (uint64_t)qword_1ED7557C8);
  v17 = MEMORY[0x1E0D24650];
  *(_QWORD *)(v16 + 56) = v14;
  *(_QWORD *)(v16 + 64) = v17;
  v18 = sub_1C079DFC4((uint64_t *)(v16 + 32));
  sub_1C07A26E4((uint64_t)v18);
  sub_1C0AAF218((uint64_t *)&qword_1ED756600, (uint64_t *)&unk_1ED75E9E0);
  v19 = v26;
  sub_1C106BF98();
  swift_bridgeObjectRelease();
  v20 = *(void (**)(char *, uint64_t))(v25 + 8);
  v20(v11, v9);
  sub_1C0AAF218(&qword_1ED75E9D8, (uint64_t *)&unk_1ED75E9E0);
  v21 = v34;
  sub_1C106C1FC();
  v20(v19, v9);
  if (!v21)
  {
    result = v30;
    if (v31)
      return 0.0;
  }
  return result;
}

uint64_t sub_1C0AAF784(double a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v7 = sub_1C106C040();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  sub_1C0778564();
  v11 = v10 - v9;
  sub_1C1070774();
  swift_bridgeObjectRelease();
  sub_1C07ACF80(&qword_1ED762C90);
  v12 = swift_allocObject();
  v13 = MEMORY[0x1E0DEA968];
  v14 = MEMORY[0x1E0D24968];
  *(_OWORD *)(v12 + 16) = xmmword_1C1078FC0;
  *(_QWORD *)(v12 + 56) = v13;
  *(_QWORD *)(v12 + 64) = v14;
  v15 = MEMORY[0x1E0DEB070];
  *(_QWORD *)(v12 + 32) = a3;
  *(_QWORD *)(v12 + 40) = a4;
  v16 = MEMORY[0x1E0D249D0];
  *(_QWORD *)(v12 + 96) = v15;
  *(_QWORD *)(v12 + 104) = v16;
  *(double *)(v12 + 72) = a1;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C010();
  sub_1C106C694();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v11, v7);
}

double sub_1C0AAF8D0(uint64_t a1)
{
  double v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  char v14;
  double v15;
  uint64_t v16;
  uint64_t *v17;
  double v19;
  uint64_t v20;
  uint64_t *v21;
  double v22;
  double v23;
  uint64_t v24;
  uint64_t *v25;
  double v26;
  double v27;
  uint64_t inited;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  char v35;

  v30 = sub_1C07ACF80(&qword_1ED755788);
  MEMORY[0x1E0C80A78](v30);
  sub_1C077AE40();
  v31 = sub_1C07ACF80(&qword_1ED755790);
  MEMORY[0x1E0C80A78](v31);
  sub_1C0778564();
  v32 = sub_1C07ACF80(&qword_1ED75E4F8);
  v3 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  sub_1C077AE40();
  v4 = sub_1C07ACF80(&qword_1ED75E500);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1C0778564();
  v8 = v7 - v6;
  type metadata accessor for GraphTriple(0);
  sub_1C07ACF80((uint64_t *)&unk_1ED7614B0);
  v9 = sub_1C0787A5C();
  *(_OWORD *)(v9 + 16) = xmmword_1C1079220;
  sub_1C080ABFC();
  v10 = sub_1C106BCBC();
  v11 = MEMORY[0x1E0D23DB0];
  *(_QWORD *)(v9 + 56) = v10;
  *(_QWORD *)(v9 + 64) = v11;
  sub_1C079DFC4((uint64_t *)(v9 + 32));
  sub_1C0798AFC();
  sub_1C07A9C3C();
  sub_1C0AADED4(&qword_1ED75E628, (void (*)(uint64_t))type metadata accessor for GraphTriple);
  sub_1C106B980();
  swift_bridgeObjectRelease();
  sub_1C0AAF218(&qword_1ED75E9D0, &qword_1ED75E500);
  sub_1C106C1FC();
  if (v33)
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
  }
  else
  {
    v12 = sub_1C0787E48();
    v13 = 0.0;
    if (v14)
      v15 = v12;
    else
      v15 = 0.0;
    type metadata accessor for EventTriple(0);
    v16 = sub_1C0787A5C();
    sub_1C07A3B14(v16);
    sub_1C07973A8();
    sub_1C07A47D8();
    sub_1C07A5450(v17, MEMORY[0x1E0D23DB0]);
    sub_1C0798AFC();
    sub_1C07A9C3C();
    sub_1C07911FC(&qword_1ED75E620);
    sub_1C078F66C();
    sub_1C0775834();
    sub_1C0AAF218(&qword_1ED75E4F0, &qword_1ED75E4F8);
    sub_1C0796628();
    v19 = sub_1C0787E48();
    if (v14)
      v13 = v19;
    type metadata accessor for ExpiredGraphTriple(0);
    v20 = sub_1C0787A5C();
    sub_1C07A3B14(v20);
    sub_1C07973A8();
    sub_1C07A47D8();
    sub_1C07A5450(v21, MEMORY[0x1E0D23DB0]);
    sub_1C0798AFC();
    sub_1C07A9C3C();
    sub_1C07911FC((uint64_t *)&qword_1ED75E6F8);
    sub_1C078F66C();
    sub_1C0775834();
    sub_1C0AAF218(&qword_1ED7565F8, &qword_1ED755790);
    sub_1C0796628();
    v22 = sub_1C0787E48();
    if (v14)
      v23 = v22;
    else
      v23 = 0.0;
    type metadata accessor for ExpiredEventTriple(0);
    v24 = sub_1C0787A5C();
    sub_1C07A3B14(v24);
    sub_1C07973A8();
    LOBYTE(v34) = 8;
    sub_1C07A47D8();
    sub_1C07A5450(v25, MEMORY[0x1E0D23DB0]);
    sub_1C0798AFC();
    sub_1C07A9C3C();
    sub_1C07911FC((uint64_t *)&qword_1ED757408);
    sub_1C078F66C();
    sub_1C0775834();
    sub_1C0AAF218(&qword_1ED7565F0, &qword_1ED755788);
    sub_1C0796628();
    v26 = v34;
    v27 = sub_1C0AAF440(a1, 0xD00000000000001CLL, 0x80000001C10FB460);
    if (v35)
      v26 = 0.0;
    sub_1C07ACF80((uint64_t *)&unk_1ED7614D0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1078FC0;
    *(double *)(inited + 32) = v26;
    *(double *)(inited + 40) = v27;
    sub_1C0AAFF3C(inited, v15, v13, v23);
    v1 = v29;
    swift_setDeallocating();
    sub_1C07A0D6C();
    sub_1C079AB8C();
    sub_1C079E54C(*(uint64_t (**)(_QWORD, uint64_t))(v3 + 8));
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
  }
  return v1;
}

uint64_t sub_1C0AAFF3C(uint64_t result, double a2, double a3, double a4)
{
  uint64_t v4;
  double *v5;
  double v6;
  double v7;

  if (a2 <= a3)
    a2 = a3;
  if (a2 <= a4)
    a2 = a4;
  v4 = *(_QWORD *)(result + 16);
  if (v4)
  {
    v5 = (double *)(result + 32);
    do
    {
      v6 = *v5++;
      v7 = v6;
      if (a2 <= v6)
        a2 = v7;
      --v4;
    }
    while (v4);
  }
  return result;
}

double sub_1C0AAFF70()
{
  double v0;
  double v1;

  swift_retain();
  sub_1C0BB9680();
  v1 = v0;
  swift_release();
  return v1;
}

void sub_1C0AAFFF8(uint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t v2;
  double v5;
  double v6;
  double v7;
  double v8;

  v5 = sub_1C0AAF8D0(a1);
  if (!v2)
  {
    v6 = v5;
    v7 = sub_1C0AAF440(a1, 0xD000000000000019, 0x80000001C10FB480);
    v8 = sub_1C0AAF440(a1, 0xD00000000000001CLL, 0x80000001C10FB460);
    *a2 = v6;
    a2[1] = v7;
    a2[2] = v8;
  }
}

void sub_1C0AB0090(uint64_t a1@<X0>, double *a2@<X8>)
{
  sub_1C0AAFFF8(a1, a2);
}

void GraphStore.loadGraphTriples(subject:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1C0779758();
  sub_1C07A3B28((uint64_t)sub_1C0AB03D8, v0, v1, v2, v3, v4, v5, v6, v7);
  sub_1C07A0D60();
  sub_1C0779CF8();
}

void (*GraphStore.loadGraphTriples()())(uint64_t, _QWORD)
{
  return sub_1C0AAE3B4((uint64_t)sub_1C0AB0148, (void (*)(uint64_t, _QWORD))sub_1C0BB9638);
}

void (*GraphStore.currentUser()())(uint64_t, _QWORD)
{
  return sub_1C0AAE3B4((uint64_t)sub_1C0AB0C30, (void (*)(uint64_t, _QWORD))sub_1C0BB9638);
}

Swift::Int __swiftcall GraphStore.graphTripleCount()()
{
  return (Swift::Int)sub_1C0AAE3B4((uint64_t)sub_1C0AB012C, (void (*)(uint64_t, _QWORD))sub_1C0BB97A8);
}

uint64_t sub_1C0AB012C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C0AB1FD0(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D23A08], a2);
}

uint64_t sub_1C0AB0148@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  type metadata accessor for GraphTriple(0);
  sub_1C0AADED4(&qword_1ED756860, (void (*)(uint64_t))type metadata accessor for GraphTriple);
  sub_1C0AADED4(&qword_1ED75E628, (void (*)(uint64_t))type metadata accessor for GraphTriple);
  result = sub_1C106BD70();
  if (!v1)
    *a1 = result;
  return result;
}

uint64_t sub_1C0AB01E8@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v13[5];
  char v14[24];
  ValueMetadata *v15;
  unint64_t v16;
  uint64_t v17[5];
  uint64_t *v18;

  v18 = a2;
  v4 = sub_1C07ACF80(&qword_1ED75E500);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v13[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for GraphTriple(0);
  v15 = &type metadata for FusedTripleColumn;
  v16 = sub_1C080ABFC();
  v14[0] = 0;
  v8 = sub_1C106E590();
  v13[3] = v8;
  v13[4] = sub_1C0AADED4(&qword_1ED75E940, (void (*)(uint64_t))MEMORY[0x1E0D3CE28]);
  v9 = sub_1C079DFC4(v13);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v9, a1, v8);
  v17[3] = sub_1C106BCBC();
  v17[4] = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v17);
  sub_1C106C310();
  sub_1C0A77678((uint64_t)v13);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v14);
  sub_1C0AADED4(&qword_1ED75E628, (void (*)(uint64_t))type metadata accessor for GraphTriple);
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v17);
  sub_1C0AAF218(&qword_1ED75E9D0, &qword_1ED75E500);
  sub_1C0AADED4(&qword_1ED756860, (void (*)(uint64_t))type metadata accessor for GraphTriple);
  v10 = sub_1C106BAB8();
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (!v2)
    *v18 = v10;
  return result;
}

uint64_t sub_1C0AB03D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1C0AB01E8(*(_QWORD *)(v1 + 16), a1);
}

uint64_t GraphStore.loadGraphTriples(subject:objectPrefix:)()
{
  uint64_t v0;
  uint64_t v1;

  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  sub_1C0AB0460();
  v1 = v0;
  swift_bridgeObjectRelease();
  return v1;
}

void sub_1C0AB0460()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1C0779758();
  sub_1C07A3B28((uint64_t)sub_1C0AB2084, v0, v1, v2, v3, v4, v5, v6, v7);
  sub_1C07A0D60();
  sub_1C0796634();
}

void GraphStore.loadGraphTriples(globPattern:)(uint64_t a1, uint64_t a2)
{
  sub_1C0AB0A14(a1, a2, (uint64_t)sub_1C0AB0E0C);
}

uint64_t sub_1C0AB04BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v20 = a2;
  v21 = a1;
  v19 = a4;
  v5 = sub_1C106C040();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C07ACF80(&qword_1ED75E500);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for GraphTriple(0);
  sub_1C07ACF80(&qword_1ED762C90);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1C1079220;
  v14 = MEMORY[0x1E0D24968];
  *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v13 + 64) = v14;
  *(_QWORD *)(v13 + 32) = v20;
  *(_QWORD *)(v13 + 40) = a3;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C010();
  sub_1C0AADED4(&qword_1ED75E628, (void (*)(uint64_t))type metadata accessor for GraphTriple);
  sub_1C106B95C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1C0AAF218(&qword_1ED75E9D0, &qword_1ED75E500);
  sub_1C0AADED4(&qword_1ED756860, (void (*)(uint64_t))type metadata accessor for GraphTriple);
  v15 = v22;
  v16 = sub_1C106BAB8();
  result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (!v15)
    *v19 = v16;
  return result;
}

void GraphStore.loadGraphTriples(subject:predicates:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1C0779758();
  sub_1C07A3B28((uint64_t)sub_1C0AB0E24, v0, v1, v2, v3, v4, v5, v6, v7);
  sub_1C07A0D60();
  sub_1C0779CF8();
}

uint64_t sub_1C0AB070C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24[5];
  _BYTE v25[24];
  ValueMetadata *v26;
  unint64_t v27;
  uint64_t v28[3];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v22 = a3;
  v23 = a1;
  v21 = a4;
  v5 = sub_1C07ACF80(&qword_1ED75E500);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v21 - v10;
  type metadata accessor for GraphTriple(0);
  v26 = &type metadata for FusedTripleColumn;
  v12 = sub_1C080ABFC();
  v27 = v12;
  v25[0] = 0;
  v13 = sub_1C106E590();
  v24[3] = v13;
  v24[4] = sub_1C0AADED4(&qword_1ED75E940, (void (*)(uint64_t))MEMORY[0x1E0D3CE28]);
  v14 = sub_1C079DFC4(v24);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v14, a2, v13);
  v15 = sub_1C106BCBC();
  v16 = MEMORY[0x1E0D23DC0];
  v29 = v15;
  v30 = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v28);
  sub_1C106C310();
  sub_1C0A77678((uint64_t)v24);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v25);
  sub_1C0AADED4(&qword_1ED75E628, (void (*)(uint64_t))type metadata accessor for GraphTriple);
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v28);
  v24[0] = v22;
  v26 = &type metadata for FusedTripleColumn;
  v27 = v12;
  v25[0] = 1;
  v29 = v15;
  v30 = v16;
  sub_1C079DFC4(v28);
  sub_1C07ACF80(&qword_1ED746288);
  sub_1C0AAF218(&qword_1ED746290, &qword_1ED746288);
  sub_1C0AADED4(&qword_1ED7564A0, (void (*)(uint64_t))MEMORY[0x1E0D3CC50]);
  sub_1C106FD6C();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v25);
  sub_1C0AAF218(&qword_1ED7565E8, &qword_1ED75E500);
  sub_1C106BDF4();
  v17 = *(void (**)(char *, uint64_t))(v6 + 8);
  v17(v8, v5);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v28);
  sub_1C0AAF218(&qword_1ED75E9D0, &qword_1ED75E500);
  sub_1C0AADED4(&qword_1ED756860, (void (*)(uint64_t))type metadata accessor for GraphTriple);
  v18 = v31;
  v19 = sub_1C106BAB8();
  result = ((uint64_t (*)(char *, uint64_t))v17)(v11, v5);
  if (!v18)
    *v21 = v19;
  return result;
}

void GraphStore.loadGraphTriples(object:)(uint64_t a1, uint64_t a2)
{
  sub_1C0AB0A14(a1, a2, (uint64_t)sub_1C0AB0E3C);
}

void sub_1C0AB0A14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD v4[4];

  v4[2] = a1;
  v4[3] = a2;
  sub_1C0779758();
  sub_1C0BB9638(a3, (uint64_t)v4);
  sub_1C07A0D60();
  sub_1C0779CF8();
}

uint64_t sub_1C0AB0A60@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t result;
  _QWORD v13[5];
  char v14[24];
  ValueMetadata *v15;
  unint64_t v16;
  uint64_t v17[5];
  uint64_t *v18;

  v18 = a3;
  v6 = sub_1C07ACF80(&qword_1ED75E500);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v13[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for GraphTriple(0);
  v15 = &type metadata for FusedTripleColumn;
  v16 = sub_1C080ABFC();
  v14[0] = 4;
  v13[3] = MEMORY[0x1E0DEA968];
  v13[4] = MEMORY[0x1E0D24960];
  v13[0] = a1;
  v13[1] = a2;
  v17[3] = sub_1C106BCBC();
  v17[4] = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v17);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C310();
  sub_1C0A77678((uint64_t)v13);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v14);
  sub_1C0AADED4(&qword_1ED75E628, (void (*)(uint64_t))type metadata accessor for GraphTriple);
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v17);
  sub_1C0AAF218(&qword_1ED75E9D0, &qword_1ED75E500);
  sub_1C0AADED4(&qword_1ED756860, (void (*)(uint64_t))type metadata accessor for GraphTriple);
  v10 = sub_1C106BAB8();
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (!v3)
    *v18 = v10;
  return result;
}

uint64_t sub_1C0AB0C30@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v10[5];
  char v11[24];
  ValueMetadata *v12;
  unint64_t v13;
  uint64_t v14[5];

  v3 = sub_1C07ACF80(&qword_1ED75E500);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v10[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for GraphTriple(0);
  v12 = &type metadata for FusedTripleColumn;
  v13 = sub_1C080ABFC();
  v11[0] = 1;
  v10[3] = sub_1C106E41C();
  v10[4] = sub_1C0AADED4(&qword_1ED7564A0, (void (*)(uint64_t))MEMORY[0x1E0D3CC50]);
  sub_1C079DFC4(v10);
  sub_1C106DEB8();
  v14[3] = sub_1C106BCBC();
  v14[4] = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v14);
  sub_1C106C310();
  sub_1C0A77678((uint64_t)v10);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v11);
  sub_1C0AADED4(&qword_1ED75E628, (void (*)(uint64_t))type metadata accessor for GraphTriple);
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v14);
  sub_1C0AAF218(&qword_1ED75E9D0, &qword_1ED75E500);
  sub_1C0AADED4(&qword_1ED756860, (void (*)(uint64_t))type metadata accessor for GraphTriple);
  v7 = sub_1C106BAB8();
  result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (!v1)
    *a1 = v7;
  return result;
}

uint64_t sub_1C0AB0E0C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1C0AB04BC(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1C0AB0E24@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1C0AB070C(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1C0AB0E3C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1C0AB0A60(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1C0AB0E54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30[5];
  char v31[24];
  ValueMetadata *v32;
  unint64_t v33;
  uint64_t v34[8];

  v24 = a5;
  v25 = a3;
  v29 = a1;
  v7 = sub_1C106C040();
  v27 = *(_QWORD *)(v7 - 8);
  v28 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C07ACF80(&qword_1ED75E500);
  v26 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v24 - v14;
  type metadata accessor for GraphTriple(0);
  v32 = &type metadata for FusedTripleColumn;
  v33 = sub_1C080ABFC();
  v31[0] = 0;
  v16 = sub_1C106E590();
  v30[3] = v16;
  v30[4] = sub_1C0AADED4(&qword_1ED75E940, (void (*)(uint64_t))MEMORY[0x1E0D3CE28]);
  v17 = sub_1C079DFC4(v30);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v17, a2, v16);
  v34[3] = sub_1C106BCBC();
  v34[4] = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v34);
  sub_1C106C310();
  sub_1C0A77678((uint64_t)v30);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v31);
  sub_1C0AADED4(&qword_1ED75E628, (void (*)(uint64_t))type metadata accessor for GraphTriple);
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v34);
  sub_1C07ACF80(&qword_1ED762C90);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1C1079220;
  v19 = MEMORY[0x1E0D24968];
  *(_QWORD *)(v18 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v18 + 64) = v19;
  *(_QWORD *)(v18 + 32) = v25;
  *(_QWORD *)(v18 + 40) = a4;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C010();
  sub_1C0AAF218(&qword_1ED7565E8, &qword_1ED75E500);
  sub_1C106BDE8();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v28);
  v20 = *(void (**)(char *, uint64_t))(v26 + 8);
  v20(v12, v10);
  sub_1C0AAF218(&qword_1ED75E9D0, &qword_1ED75E500);
  sub_1C0AADED4(&qword_1ED756860, (void (*)(uint64_t))type metadata accessor for GraphTriple);
  v21 = v34[7];
  v22 = sub_1C106BAB8();
  result = ((uint64_t (*)(char *, uint64_t))v20)(v15, v10);
  if (!v21)
    *v24 = v22;
  return result;
}

void sub_1C0AB116C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t *v18;
  unint64_t v19;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24[5];
  _BYTE v25[24];
  ValueMetadata *v26;
  unint64_t v27;
  uint64_t v28;

  v3 = sub_1C106E590();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1C0778564();
  v7 = v6 - v5;
  v23 = sub_1C106BCBC();
  v8 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  sub_1C0778564();
  v12 = v11 - v10;
  v13 = *(_QWORD *)(a1 + 16);
  v14 = MEMORY[0x1E0DEE9D8];
  if (v13)
  {
    v20[1] = v1;
    v28 = MEMORY[0x1E0DEE9D8];
    sub_1C09D3CC0();
    v15 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v21 = *(_QWORD *)(v4 + 72);
    v22 = v12;
    v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    v17 = v4;
    do
    {
      v16(v7, v15, v3);
      v26 = &type metadata for FusedTripleColumn;
      v27 = sub_1C080ABFC();
      v25[0] = 0;
      v24[3] = v3;
      v24[4] = sub_1C0AADED4(&qword_1ED75E940, (void (*)(uint64_t))MEMORY[0x1E0D3CE28]);
      v18 = sub_1C079DFC4(v24);
      v16((uint64_t)v18, v7, v3);
      sub_1C106C310();
      sub_1C0A77678((uint64_t)v24);
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v25);
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v7, v3);
      v14 = v28;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C09D3CC0();
        v14 = v28;
      }
      v19 = *(_QWORD *)(v14 + 16);
      if (v19 >= *(_QWORD *)(v14 + 24) >> 1)
      {
        sub_1C09D3CC0();
        v14 = v28;
      }
      *(_QWORD *)(v14 + 16) = v19 + 1;
      v9 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v8 + 32))(v14+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v19, v22, v23);
      v28 = v14;
      v15 += v21;
      --v13;
    }
    while (v13);
  }
  MEMORY[0x1E0C80A78](v9);
  v20[-2] = v14;
  sub_1C0779758();
  sub_1C0BB9638((uint64_t)sub_1C0AB206C, (uint64_t)&v20[-4]);
  swift_bridgeObjectRelease();
  swift_release();
  sub_1C0776760();
}

uint64_t sub_1C0AB13F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19[7];

  v17 = a1;
  v15 = a3;
  v4 = sub_1C106BCB0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C07ACF80(&qword_1ED75E500);
  v16 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for GraphTriple(0);
  v19[6] = a2;
  sub_1C106BC98();
  v19[3] = sub_1C106BCBC();
  v19[4] = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v19);
  sub_1C07ACF80(&qword_1ED744790);
  sub_1C0AAF218(&qword_1ED744798, &qword_1ED744790);
  sub_1C106FD78();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1C0AADED4(&qword_1ED75E628, (void (*)(uint64_t))type metadata accessor for GraphTriple);
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v19);
  sub_1C0AAF218(&qword_1ED75E9D0, &qword_1ED75E500);
  sub_1C0AADED4(&qword_1ED756860, (void (*)(uint64_t))type metadata accessor for GraphTriple);
  v11 = v18;
  v12 = sub_1C106BAB8();
  result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v10, v8);
  if (!v11)
    *v15 = v12;
  return result;
}

void sub_1C0AB1608()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1C0779758();
  sub_1C07A3B28((uint64_t)sub_1C0AB2050, v0, v1, v2, v3, v4, v5, v6, v7);
  sub_1C07A0D60();
  sub_1C0796634();
}

uint64_t sub_1C0AB1658@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>, double a5@<D0>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  unint64_t v24;
  ValueMetadata *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, uint64_t);
  char *v35;
  uint64_t *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  ValueMetadata *v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46[3];
  ValueMetadata *v47;
  unint64_t v48;
  uint64_t v49[3];
  ValueMetadata *v50;
  unint64_t v51;
  uint64_t v52[3];
  ValueMetadata *v53;
  unint64_t v54;

  v38 = a3;
  v39 = a1;
  v36 = a4;
  v7 = sub_1C07ACF80(&qword_1ED75E500);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v41 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v32 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v32 - v14;
  type metadata accessor for GraphTriple(0);
  sub_1C07ACF80(&qword_1ED761300);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1C1079220;
  *(_QWORD *)(v16 + 56) = &type metadata for FusedTripleColumn;
  *(_QWORD *)(v16 + 64) = sub_1C0A56034();
  *(_BYTE *)(v16 + 32) = 8;
  sub_1C0AADED4(&qword_1ED75E628, (void (*)(uint64_t))type metadata accessor for GraphTriple);
  sub_1C106B950();
  swift_bridgeObjectRelease();
  v50 = &type metadata for FusedTripleColumn;
  v43 = sub_1C080ABFC();
  v51 = v43;
  LOBYTE(v49[0]) = 8;
  v17 = a2;
  v47 = (ValueMetadata *)MEMORY[0x1E0DEB070];
  v48 = MEMORY[0x1E0D249C8];
  *(double *)v46 = a5;
  v18 = sub_1C106BCBC();
  v19 = MEMORY[0x1E0D23DC0];
  v42 = (ValueMetadata *)v18;
  v53 = (ValueMetadata *)v18;
  v54 = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v52);
  sub_1C106C0B8();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v46);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v49);
  v20 = sub_1C0AAF218(&qword_1ED7565E8, &qword_1ED75E500);
  sub_1C106BDF4();
  v21 = v41;
  v44 = v8;
  v22 = *(void (**)(char *, uint64_t))(v8 + 8);
  v22(v12, v7);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v52);
  if (v17)
  {
    (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v21, v15, v7);
    v46[0] = v17;
    v50 = &type metadata for FusedTripleColumn;
    v51 = v43;
    LOBYTE(v49[0]) = 0;
    v53 = v42;
    v54 = v19;
    v37 = sub_1C079DFC4(v52);
    sub_1C07ACF80(&qword_1ED760098);
    sub_1C0AAF218((uint64_t *)&qword_1ED7600A0, &qword_1ED760098);
    sub_1C0AADED4(&qword_1ED75E940, (void (*)(uint64_t))MEMORY[0x1E0D3CE28]);
    v19 = MEMORY[0x1E0D23DC0];
    sub_1C106FD6C();
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v49);
    sub_1C106BDF4();
    v22(v21, v7);
    v22(v15, v7);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v52);
    (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v15, v12, v7);
  }
  v23 = v7;
  v24 = v43;
  v37 = (uint64_t *)v20;
  v25 = v42;
  v26 = v38;
  if (v38)
  {
    (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v21, v15, v23);
    v46[0] = v26;
    v53 = &type metadata for FusedTripleColumn;
    v54 = v24;
    LOBYTE(v52[0]) = 1;
    v50 = v25;
    v51 = v19;
    sub_1C079DFC4(v49);
    v33 = v12;
    v34 = v22;
    sub_1C07ACF80(&qword_1ED746288);
    v35 = v15;
    sub_1C0AAF218(&qword_1ED746290, &qword_1ED746288);
    sub_1C0AADED4(&qword_1ED7564A0, (void (*)(uint64_t))MEMORY[0x1E0D3CC50]);
    v22 = v34;
    sub_1C106FD6C();
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v52);
    v45 = v26;
    v53 = &type metadata for FusedTripleColumn;
    v54 = v43;
    LOBYTE(v52[0]) = 3;
    v47 = v25;
    v48 = v19;
    sub_1C079DFC4(v46);
    v15 = v35;
    sub_1C106FD6C();
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v52);
    v53 = v25;
    v54 = v19;
    sub_1C079DFC4(v52);
    sub_1C106C34C();
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v46);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v49);
    v27 = v33;
    v28 = v41;
    sub_1C106BDF4();
    v22(v28, v23);
    v22(v15, v23);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v52);
    (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v15, v27, v23);
  }
  sub_1C0AAF218(&qword_1ED75E9D0, &qword_1ED75E500);
  sub_1C0AADED4(&qword_1ED756860, (void (*)(uint64_t))type metadata accessor for GraphTriple);
  v29 = v40;
  v30 = sub_1C106BAB8();
  result = ((uint64_t (*)(char *, uint64_t))v22)(v15, v23);
  if (!v29)
    *v36 = v30;
  return result;
}

Swift::OpaquePointer_optional __swiftcall GraphStore.loadGraphTriplesGroupedBySubject(groupsContainingObject:)(Swift::String groupsContainingObject)
{
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  void *v28;
  Swift::Bool v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  Swift::OpaquePointer_optional result;

  object = groupsContainingObject._object;
  countAndFlagsBits = groupsContainingObject._countAndFlagsBits;
  v3 = sub_1C106E590();
  v4 = (void (*)(uint64_t))MEMORY[0x1E0D3CE28];
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1C0778564();
  v30 = v7 - v6;
  GraphStore.loadGraphTriples(object:)(countAndFlagsBits, (uint64_t)object);
  v9 = v8;
  sub_1C07ACF80(&qword_1ED758CD8);
  sub_1C0AADED4(&qword_1ED7618F0, v4);
  v31 = v3;
  v10 = (_QWORD *)sub_1C106F97C();
  v11 = *(_QWORD *)(v9 + 16);
  if (v11)
  {
    v12 = *(_QWORD *)(type metadata accessor for GraphTriple(0) - 8);
    v13 = v9 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v32 = *(_QWORD *)(v12 + 72);
    v14 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    while (1)
    {
      v15 = (void *)MEMORY[0x1C3BA79F4](v14);
      GraphStore.loadGraphTriples(subject:)();
      v17 = v16;
      swift_isUniquelyReferenced_nonNull_native();
      sub_1C07DCD84();
      if (__OFADD__(v10[2], (v19 & 1) == 0))
        break;
      v20 = v18;
      v21 = v19;
      sub_1C07ACF80(&qword_1EF630AC0);
      if ((sub_1C107090C() & 1) != 0)
      {
        sub_1C07DCD84();
        if ((v21 & 1) != (v23 & 1))
          goto LABEL_17;
        v20 = v22;
      }
      if ((v21 & 1) != 0)
      {
        v24 = v10[7];
        swift_bridgeObjectRelease();
        *(_QWORD *)(v24 + 8 * v20) = v17;
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v30, v13, v31);
        v10[(v20 >> 6) + 8] |= 1 << v20;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))(v10[6] + *(_QWORD *)(v5 + 72) * v20, v30, v31);
        *(_QWORD *)(v10[7] + 8 * v20) = v17;
        v25 = v10[2];
        v26 = __OFADD__(v25, 1);
        v27 = v25 + 1;
        if (v26)
          goto LABEL_16;
        v10[2] = v27;
      }
      swift_bridgeObjectRelease();
      objc_autoreleasePoolPop(v15);
      v13 += v32;
      if (!--v11)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    v28 = (void *)sub_1C1070D44();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_14:
    sub_1C0776760();
  }
  result.value._rawValue = v28;
  result.is_nil = v29;
  return result;
}

Swift::Int __swiftcall GraphStore.clearGraphTriples()()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  Swift::Int result;

  sub_1C0779758();
  sub_1C0BB9B94((uint64_t)sub_1C0AB1FB4, 0);
  sub_1C07A0D60();
  if (qword_1ED762B20 != -1)
    swift_once();
  v0 = sub_1C106F544();
  sub_1C079E000(v0, (uint64_t)qword_1ED78D9F8);
  v1 = sub_1C106F538();
  v2 = sub_1C10703A8();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v3 = 134217984;
    sub_1C10705AC();
    _os_log_impl(&dword_1C0771000, v1, v2, "GraphStore: clearGraphTriples: %ld deleted.", v3, 0xCu);
    MEMORY[0x1C3BA8270](v3, -1, -1);
  }

  sub_1C0796634();
  return result;
}

uint64_t sub_1C0AB1FB4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C0AB1FD0(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D23A68], a2);
}

uint64_t sub_1C0AB1FD0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v7 = type metadata accessor for GraphTriple(0);
  v8 = sub_1C0AADED4(&qword_1ED75E628, (void (*)(uint64_t))type metadata accessor for GraphTriple);
  result = a2(a1, v7, v8);
  if (!v3)
    *a3 = result;
  return result;
}

uint64_t sub_1C0AB2050@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1C0AB1658(a1, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a2, *(double *)(v2 + 16));
}

uint64_t sub_1C0AB206C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1C0AB13F4(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1C0AB2084@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_1C0AB0E54(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_1C0AB20A0(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  int64_t v6;
  unint64_t v7;
  uint64_t result;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  _QWORD v22[5];
  int64_t v23;

  v3 = v2;
  sub_1C0861BD0(v22);
  v5 = v22[0];
  v21 = v22[1];
  v6 = v22[3];
  v7 = v22[4];
  v23 = (unint64_t)(v22[2] + 64) >> 6;
  result = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  if (!v7)
    goto LABEL_3;
LABEL_2:
  v9 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  v10 = v9 | (v6 << 6);
  while (1)
  {
    v14 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v10);
    v15 = *v14;
    v16 = v14[1];
    v17 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 16 * v10);
    v19 = *v17;
    v18 = v17[1];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    a2(v15, v16, v19, v18);
    if (v3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if (v7)
      goto LABEL_2;
LABEL_3:
    v11 = v6 + 1;
    if (__OFADD__(v6, 1))
      break;
    if (v11 >= v23)
      return swift_release();
    v12 = *(_QWORD *)(v21 + 8 * v11);
    if (!v12)
    {
      v13 = v6 + 2;
      if (v6 + 2 >= v23)
        return swift_release();
      v12 = *(_QWORD *)(v21 + 8 * v13);
      if (v12)
        goto LABEL_12;
      v13 = v6 + 3;
      if (v6 + 3 >= v23)
        return swift_release();
      v12 = *(_QWORD *)(v21 + 8 * v13);
      if (v12)
        goto LABEL_12;
      v13 = v6 + 4;
      if (v6 + 4 >= v23)
        return swift_release();
      v12 = *(_QWORD *)(v21 + 8 * v13);
      if (v12)
      {
LABEL_12:
        v11 = v13;
      }
      else
      {
        v11 = v6 + 5;
        if (v6 + 5 >= v23)
          return swift_release();
        v12 = *(_QWORD *)(v21 + 8 * v11);
        if (!v12)
        {
          v20 = v6 + 6;
          while (v20 < v23)
          {
            v12 = *(_QWORD *)(v21 + 8 * v20++);
            if (v12)
            {
              v11 = v20 - 1;
              goto LABEL_13;
            }
          }
          return swift_release();
        }
      }
    }
LABEL_13:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v11 << 6);
    v6 = v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0AB2294(char *a1, uint64_t a2)
{
  return sub_1C0AB231C(a1, a2, (uint64_t)sub_1C0ABA648, "GraphStore: clearEntityBlocks: p:%s e:%s, %ld deleted.");
}

uint64_t sub_1C0AB22A8(_BYTE *a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE v4[24];
  uint64_t v5;

  v4[16] = *a1;
  v5 = a2;
  sub_1C0779758();
  v2 = sub_1C0BB9848((uint64_t)sub_1C0ABA584, (uint64_t)v4);
  sub_1C07785A8();
  return v2;
}

uint64_t sub_1C0AB2308(char *a1, uint64_t a2)
{
  return sub_1C0AB231C(a1, a2, (uint64_t)sub_1C0ABA5FC, "GraphStore: clearEntityMatches: p:%s e:%s, %ld deleted.");
}

uint64_t sub_1C0AB231C(char *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  const char *v26;
  uint64_t v27;
  _BYTE v28[24];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_1C07ACF80(&qword_1ED7618D0);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v26 - v12;
  v14 = *a1;
  v28[16] = *a1;
  v29 = a2;
  sub_1C0779758();
  v15 = sub_1C0BB9B94(a3, (uint64_t)v28);
  sub_1C07785A8();
  if (qword_1ED762B20 != -1)
    swift_once();
  v16 = sub_1C077585C();
  sub_1C079E000(v16, (uint64_t)qword_1ED78D9F8);
  sub_1C0ABA59C(a2, (uint64_t)v13);
  v17 = sub_1C106F538();
  v18 = sub_1C10703A8();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = sub_1C0775854();
    v31 = sub_1C0775854();
    *(_DWORD *)v19 = 136315650;
    v26 = a4;
    LOBYTE(v30) = v14;
    sub_1C07ACF80((uint64_t *)&unk_1ED755B00);
    v20 = sub_1C106FB5C();
    v27 = v15;
    v30 = sub_1C0787E58(v20, v21);
    sub_1C079D558();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2080;
    sub_1C0ABA59C((uint64_t)v13, (uint64_t)v10);
    v22 = sub_1C106FB5C();
    v30 = sub_1C0787E58(v22, v23);
    sub_1C079D558();
    v24 = v27;
    swift_bridgeObjectRelease();
    sub_1C0784B6C((uint64_t)v13, &qword_1ED7618D0);
    *(_WORD *)(v19 + 22) = 2048;
    v30 = v24;
    sub_1C10705AC();
    _os_log_impl(&dword_1C0771000, v17, v18, v26, (uint8_t *)v19, 0x20u);
    swift_arrayDestroy();
    sub_1C0776778();
  }
  sub_1C0784B6C((uint64_t)v13, &qword_1ED7618D0);

  return v15;
}

uint64_t sub_1C0AB25AC(char *a1, uint64_t a2)
{
  return sub_1C0AB231C(a1, a2, (uint64_t)sub_1C0ABA5E4, "GraphStore: clearEntityPairs: p:%s e:%s, %ld deleted.");
}

uint64_t sub_1C0AB25C0@<X0>(uint64_t a1@<X0>, unsigned __int8 a2@<W1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t result;
  uint64_t *v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[5];
  uint64_t v48[3];
  uint64_t v49;
  uint64_t v50;
  uint64_t v51[8];

  v43 = a3;
  v46 = a1;
  v39 = a4;
  v5 = a2;
  v6 = sub_1C07ACF80(&qword_1ED7618D0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C106D1F8();
  v44 = *(_QWORD *)(v9 - 8);
  v45 = v9;
  MEMORY[0x1E0C80A78](v9);
  v42 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1C07ACF80(&qword_1ED759ED0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v40 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v41 = (char *)&v39 - v15;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v39 - v17;
  MEMORY[0x1E0C80A78](v19);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v39 - v21;
  type metadata accessor for EntityMatch(0);
  sub_1C07803F8(&qword_1ED75A2B8, (void (*)(uint64_t))type metadata accessor for EntityMatch);
  sub_1C106B944();
  if (v5 != 4)
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v18, v22, v11);
    if (qword_1ED755AF0 != -1)
      swift_once();
    v23 = sub_1C106C49C();
    v24 = sub_1C079E000(v23, (uint64_t)qword_1ED78D0D8);
    v49 = v23;
    v50 = MEMORY[0x1E0D24668];
    v25 = sub_1C079DFC4(v48);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v25, v24, v23);
    __asm { BR              X12 }
  }
  sub_1C0ABA59C(v43, (uint64_t)v8);
  v26 = v45;
  if (sub_1C07B2D80((uint64_t)v8, 1, v45) == 1)
  {
    sub_1C0784B6C((uint64_t)v8, &qword_1ED7618D0);
  }
  else
  {
    v27 = v42;
    (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v42, v8, v26);
    v28 = v40;
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v40, v22, v11);
    if (qword_1ED75A2A8 != -1)
      swift_once();
    v29 = sub_1C106C49C();
    v30 = sub_1C079E000(v29, (uint64_t)qword_1ED78D5B0);
    v49 = v29;
    v50 = MEMORY[0x1E0D24668];
    v31 = sub_1C079DFC4(v48);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v31, v30, v29);
    v32 = sub_1C106D0FC();
    v47[3] = MEMORY[0x1E0DEA968];
    v47[4] = MEMORY[0x1E0D24960];
    v47[0] = v32;
    v47[1] = v33;
    v51[3] = sub_1C106BCBC();
    v51[4] = MEMORY[0x1E0D23DC0];
    sub_1C079DFC4(v51);
    sub_1C106C310();
    sub_1C0784B6C((uint64_t)v47, (uint64_t *)&unk_1ED7626B0);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v48);
    sub_1C07BB218(&qword_1ED759EC8, &qword_1ED759ED0);
    v34 = v41;
    sub_1C106BDF4();
    v35 = *(void (**)(char *, uint64_t))(v12 + 8);
    v35(v28, v11);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v27, v26);
    v35(v22, v11);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v51);
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v22, v34, v11);
  }
  sub_1C07BB218(&qword_1ED759EC0, &qword_1ED759ED0);
  sub_1C07803F8(&qword_1ED75A2C0, (void (*)(uint64_t))type metadata accessor for EntityMatch);
  v36 = v51[7];
  v37 = sub_1C106BAB8();
  result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v22, v11);
  if (!v36)
    *v39 = v37;
  return result;
}

uint64_t sub_1C0AB2BA0(uint64_t a1, char a2)
{
  _QWORD v3[3];
  char v4;

  v3[2] = a1;
  v4 = a2;
  sub_1C0779758();
  sub_1C077FF50((uint64_t)sub_1C0ABA614, (uint64_t)v3);
  return sub_1C07785A8();
}

void sub_1C0AB2BF4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  v5 = type metadata accessor for ConstructionPhaseStatus(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07E05C8(a2, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  v7[*(int *)(v5 + 20)] = a3;
  sub_1C07803F8(&qword_1ED750E80, (void (*)(uint64_t))type metadata accessor for ConstructionPhaseStatus);
  sub_1C106BFC8();
  sub_1C07B1F90((uint64_t)v7, type metadata accessor for ConstructionPhaseStatus);
}

uint64_t sub_1C0AB2CD8()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C0779758();
  sub_1C0BB97CC();
  v1 = v0;
  sub_1C07785A8();
  return v1;
}

void sub_1C0AB2D30(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24[5];
  uint64_t v25[5];
  uint64_t v26[7];

  v22 = a3;
  v23 = a1;
  v4 = sub_1C07ACF80(&qword_1ED750EA0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ConstructionPhaseStatus(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C07ACF80(&qword_1ED750630);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED750E60 != -1)
    swift_once();
  v14 = sub_1C106C49C();
  v15 = sub_1C079E000(v14, (uint64_t)qword_1ED78C438);
  v25[3] = v14;
  v25[4] = MEMORY[0x1E0D24668];
  v16 = sub_1C079DFC4(v25);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v16, v15, v14);
  v24[3] = type metadata accessor for Source();
  sub_1C07803F8(&qword_1ED75CC18, (void (*)(uint64_t))type metadata accessor for Source);
  v24[4] = v17;
  v18 = sub_1C079DFC4(v24);
  sub_1C07E05C8(a2, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  v26[3] = sub_1C106BCBC();
  v26[4] = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v26);
  sub_1C106C310();
  sub_1C0784B6C((uint64_t)v24, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v25);
  sub_1C07803F8(&qword_1ED750E68, (void (*)(uint64_t))type metadata accessor for ConstructionPhaseStatus);
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v26);
  sub_1C07BB218(&qword_1ED750628, &qword_1ED750630);
  sub_1C07803F8(&qword_1ED750E78, (void (*)(uint64_t))type metadata accessor for ConstructionPhaseStatus);
  v19 = v26[6];
  sub_1C106BAC4();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (!v19)
  {
    if (sub_1C07B2D80((uint64_t)v6, 1, v7) == 1)
    {
      sub_1C0784B6C((uint64_t)v6, &qword_1ED750EA0);
      v20 = 0;
    }
    else
    {
      sub_1C07E05F4((uint64_t)v6, (uint64_t)v9, type metadata accessor for ConstructionPhaseStatus);
      v20 = v9[*(int *)(v7 + 20)];
      sub_1C07B1F90((uint64_t)v9, type metadata accessor for ConstructionPhaseStatus);
    }
    *v22 = v20;
  }
}

uint64_t sub_1C0AB3030()
{
  sub_1C0779758();
  sub_1C077FF50((uint64_t)sub_1C0AB3080, 0);
  return swift_release();
}

uint64_t sub_1C0AB3080()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for ProgressTokens(0);
  sub_1C07803F8(&qword_1ED75ACA8, (void (*)(uint64_t))type metadata accessor for ProgressTokens);
  result = sub_1C106B9B0();
  if (!v0)
  {
    type metadata accessor for ConstructionProgressTokens(0);
    sub_1C07803F8(&qword_1ED751038, (void (*)(uint64_t))type metadata accessor for ConstructionProgressTokens);
    sub_1C106B9B0();
    type metadata accessor for ConstructionPhaseStatus(0);
    sub_1C07803F8(&qword_1ED750E68, (void (*)(uint64_t))type metadata accessor for ConstructionPhaseStatus);
    return sub_1C106B9B0();
  }
  return result;
}

uint64_t sub_1C0AB3174@<X0>(uint64_t a1@<X0>, unsigned __int8 a2@<W1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t result;
  uint64_t *v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[5];
  uint64_t v48[3];
  uint64_t v49;
  uint64_t v50;
  uint64_t v51[8];

  v43 = a3;
  v46 = a1;
  v39 = a4;
  v5 = a2;
  v6 = sub_1C07ACF80(&qword_1ED7618D0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C106D1F8();
  v44 = *(_QWORD *)(v9 - 8);
  v45 = v9;
  MEMORY[0x1E0C80A78](v9);
  v42 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1C07ACF80(&qword_1ED759EB8);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v40 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v41 = (char *)&v39 - v15;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v39 - v17;
  MEMORY[0x1E0C80A78](v19);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v39 - v21;
  type metadata accessor for EntityBlock(0);
  sub_1C07803F8(&qword_1ED75A1D0, (void (*)(uint64_t))type metadata accessor for EntityBlock);
  sub_1C106B944();
  if (v5 != 4)
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v18, v22, v11);
    if (qword_1ED75A1C8 != -1)
      swift_once();
    v23 = sub_1C106C49C();
    v24 = sub_1C079E000(v23, (uint64_t)qword_1ED78D0C0);
    v49 = v23;
    v50 = MEMORY[0x1E0D24668];
    v25 = sub_1C079DFC4(v48);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v25, v24, v23);
    __asm { BR              X12 }
  }
  sub_1C0ABA59C(v43, (uint64_t)v8);
  v26 = v45;
  if (sub_1C07B2D80((uint64_t)v8, 1, v45) == 1)
  {
    sub_1C0784B6C((uint64_t)v8, &qword_1ED7618D0);
  }
  else
  {
    v27 = v42;
    (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v42, v8, v26);
    v28 = v40;
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v40, v22, v11);
    if (qword_1ED75A1B8 != -1)
      swift_once();
    v29 = sub_1C106C49C();
    v30 = sub_1C079E000(v29, (uint64_t)qword_1ED78D0A8);
    v49 = v29;
    v50 = MEMORY[0x1E0D24668];
    v31 = sub_1C079DFC4(v48);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v31, v30, v29);
    v32 = sub_1C106D0FC();
    v47[3] = MEMORY[0x1E0DEA968];
    v47[4] = MEMORY[0x1E0D24960];
    v47[0] = v32;
    v47[1] = v33;
    v51[3] = sub_1C106BCBC();
    v51[4] = MEMORY[0x1E0D23DC0];
    sub_1C079DFC4(v51);
    sub_1C106C310();
    sub_1C0784B6C((uint64_t)v47, (uint64_t *)&unk_1ED7626B0);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v48);
    sub_1C07BB218(&qword_1ED759EB0, &qword_1ED759EB8);
    v34 = v41;
    sub_1C106BDF4();
    v35 = *(void (**)(char *, uint64_t))(v12 + 8);
    v35(v28, v11);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v27, v26);
    v35(v22, v11);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v51);
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v22, v34, v11);
  }
  v36 = v51[7];
  v37 = sub_1C106C124();
  result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v22, v11);
  if (!v36)
    *v39 = v37;
  return result;
}

uint64_t sub_1C0AB3710@<X0>(uint64_t a1@<X0>, unsigned __int8 a2@<W1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t result;
  uint64_t *v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[5];
  uint64_t v48[3];
  uint64_t v49;
  uint64_t v50;
  uint64_t v51[8];

  v43 = a3;
  v46 = a1;
  v39 = a4;
  v5 = a2;
  v6 = sub_1C07ACF80(&qword_1ED7618D0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C106D1F8();
  v44 = *(_QWORD *)(v9 - 8);
  v45 = v9;
  MEMORY[0x1E0C80A78](v9);
  v42 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1C07ACF80(&qword_1ED759EA0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v40 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v41 = (char *)&v39 - v15;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v39 - v17;
  MEMORY[0x1E0C80A78](v19);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v39 - v21;
  type metadata accessor for EntityPair(0);
  sub_1C07803F8(&qword_1ED75A028, (void (*)(uint64_t))type metadata accessor for EntityPair);
  sub_1C106B944();
  if (v5 != 4)
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v18, v22, v11);
    if (qword_1ED75A008 != -1)
      swift_once();
    v23 = sub_1C106C49C();
    v24 = sub_1C079E000(v23, (uint64_t)qword_1ED78D090);
    v49 = v23;
    v50 = MEMORY[0x1E0D24668];
    v25 = sub_1C079DFC4(v48);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v25, v24, v23);
    __asm { BR              X12 }
  }
  sub_1C0ABA59C(v43, (uint64_t)v8);
  v26 = v45;
  if (sub_1C07B2D80((uint64_t)v8, 1, v45) == 1)
  {
    sub_1C0784B6C((uint64_t)v8, &qword_1ED7618D0);
  }
  else
  {
    v27 = v42;
    (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v42, v8, v26);
    v28 = v40;
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v40, v22, v11);
    if (qword_1ED75A000 != -1)
      swift_once();
    v29 = sub_1C106C49C();
    v30 = sub_1C079E000(v29, (uint64_t)qword_1ED78D3B8);
    v49 = v29;
    v50 = MEMORY[0x1E0D24668];
    v31 = sub_1C079DFC4(v48);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v31, v30, v29);
    v32 = sub_1C106D0FC();
    v47[3] = MEMORY[0x1E0DEA968];
    v47[4] = MEMORY[0x1E0D24960];
    v47[0] = v32;
    v47[1] = v33;
    v51[3] = sub_1C106BCBC();
    v51[4] = MEMORY[0x1E0D23DC0];
    sub_1C079DFC4(v51);
    sub_1C106C310();
    sub_1C0784B6C((uint64_t)v47, (uint64_t *)&unk_1ED7626B0);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v48);
    sub_1C07BB218(&qword_1ED759E98, &qword_1ED759EA0);
    v34 = v41;
    sub_1C106BDF4();
    v35 = *(void (**)(char *, uint64_t))(v12 + 8);
    v35(v28, v11);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v27, v26);
    v35(v22, v11);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v51);
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v22, v34, v11);
  }
  v36 = v51[7];
  v37 = sub_1C106C124();
  result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v22, v11);
  if (!v36)
    *v39 = v37;
  return result;
}

uint64_t sub_1C0AB3CAC@<X0>(uint64_t a1@<X0>, unsigned __int8 a2@<W1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t result;
  uint64_t *v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[5];
  uint64_t v48[3];
  uint64_t v49;
  uint64_t v50;
  uint64_t v51[8];

  v43 = a3;
  v46 = a1;
  v39 = a4;
  v5 = a2;
  v6 = sub_1C07ACF80(&qword_1ED7618D0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C106D1F8();
  v44 = *(_QWORD *)(v9 - 8);
  v45 = v9;
  MEMORY[0x1E0C80A78](v9);
  v42 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1C07ACF80(&qword_1ED759ED0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v40 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v41 = (char *)&v39 - v15;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v39 - v17;
  MEMORY[0x1E0C80A78](v19);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v39 - v21;
  type metadata accessor for EntityMatch(0);
  sub_1C07803F8(&qword_1ED75A2B8, (void (*)(uint64_t))type metadata accessor for EntityMatch);
  sub_1C106B944();
  if (v5 != 4)
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v18, v22, v11);
    if (qword_1ED755AF0 != -1)
      swift_once();
    v23 = sub_1C106C49C();
    v24 = sub_1C079E000(v23, (uint64_t)qword_1ED78D0D8);
    v49 = v23;
    v50 = MEMORY[0x1E0D24668];
    v25 = sub_1C079DFC4(v48);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v25, v24, v23);
    __asm { BR              X12 }
  }
  sub_1C0ABA59C(v43, (uint64_t)v8);
  v26 = v45;
  if (sub_1C07B2D80((uint64_t)v8, 1, v45) == 1)
  {
    sub_1C0784B6C((uint64_t)v8, &qword_1ED7618D0);
  }
  else
  {
    v27 = v42;
    (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v42, v8, v26);
    v28 = v40;
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v40, v22, v11);
    if (qword_1ED75A2A8 != -1)
      swift_once();
    v29 = sub_1C106C49C();
    v30 = sub_1C079E000(v29, (uint64_t)qword_1ED78D5B0);
    v49 = v29;
    v50 = MEMORY[0x1E0D24668];
    v31 = sub_1C079DFC4(v48);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v31, v30, v29);
    v32 = sub_1C106D0FC();
    v47[3] = MEMORY[0x1E0DEA968];
    v47[4] = MEMORY[0x1E0D24960];
    v47[0] = v32;
    v47[1] = v33;
    v51[3] = sub_1C106BCBC();
    v51[4] = MEMORY[0x1E0D23DC0];
    sub_1C079DFC4(v51);
    sub_1C106C310();
    sub_1C0784B6C((uint64_t)v47, (uint64_t *)&unk_1ED7626B0);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v48);
    sub_1C07BB218(&qword_1ED759EC8, &qword_1ED759ED0);
    v34 = v41;
    sub_1C106BDF4();
    v35 = *(void (**)(char *, uint64_t))(v12 + 8);
    v35(v28, v11);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v27, v26);
    v35(v22, v11);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v51);
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v22, v34, v11);
  }
  v36 = v51[7];
  v37 = sub_1C106C124();
  result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v22, v11);
  if (!v36)
    *v39 = v37;
  return result;
}

uint64_t sub_1C0AB4248(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD v4[6];

  v4[2] = a1;
  v4[3] = a2;
  v4[4] = a3;
  sub_1C0779758();
  sub_1C077FF50((uint64_t)sub_1C0ABA500, (uint64_t)v4);
  return sub_1C07785A8();
}

void sub_1C0AB429C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void *), uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t (*v28)(void *);
  uint64_t v29;
  uint64_t i;

  v28 = a3;
  v29 = a4;
  v6 = type metadata accessor for EntityTriple(0);
  v25 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  for (i = a2; ; a2 = i)
  {
    v10 = *(_QWORD *)(a2 + 8);
    if (v10)
    {
      v11 = *(_QWORD *)(v10 + 16);
      if (!v11)
        return;
      v12 = *(id *)(v10 + 32);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(a2 + 8) = v10;
      if (!isUniquelyReferenced_nonNull_native || (unint64_t)(v11 - 1) > *(_QWORD *)(v10 + 24) >> 1)
      {
        sub_1C07EABC0();
        v10 = v14;
        *(_QWORD *)(a2 + 8) = v14;
      }
      sub_1C07ACF80(&qword_1EF62FF70);
      swift_arrayDestroy();
      v15 = *(_QWORD *)(v10 + 16);
      if (!v15)
      {
        sub_1C10709F0();
        __break(1u);
        return;
      }
      memmove((void *)(v10 + 32), (const void *)(v10 + 48), 16 * v15 - 16);
      *(_QWORD *)(v10 + 16) = v15 - 1;
      *(_QWORD *)(i + 8) = v10;
      v16 = v12;
    }
    else
    {
      if (!*(_QWORD *)a2)
        return;
      v17 = objc_msgSend(*(id *)a2, sel_nextEvent, v7);
      if (!v17)
        return;
      v12 = v17;
      v18 = objc_msgSend(v17, sel_eventBody);
      if (!v18)
      {

        return;
      }
      v16 = v18;
      objc_msgSend(v12, sel_timestamp);
    }

    v19 = (void *)MEMORY[0x1C3BA79F4]();
    v20 = v28(v16);
    objc_autoreleasePoolPop(v19);
    v21 = *(_QWORD *)(v20 + 16);
    if (v21)
      break;

LABEL_19:
    swift_bridgeObjectRelease();
  }
  v26 = v20;
  v27 = v16;
  v22 = v20 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
  v23 = *(_QWORD *)(v25 + 72);
  while (1)
  {
    sub_1C07E05C8(v22, (uint64_t)v9, type metadata accessor for EntityTriple);
    sub_1C07803F8(&qword_1ED759CC0, (void (*)(uint64_t))type metadata accessor for EntityTriple);
    sub_1C106BFC8();
    if (v4)
      break;
    sub_1C07B1F90((uint64_t)v9, type metadata accessor for EntityTriple);
    v22 += v23;
    if (!--v21)
    {

      goto LABEL_19;
    }
  }

  sub_1C07B1F90((uint64_t)v9, type metadata accessor for EntityTriple);
  swift_bridgeObjectRelease();
}

void sub_1C0AB4578()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unsigned __int8 *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[2];
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  char v39;

  sub_1C077AE5C();
  v33 = v0;
  v3 = v2;
  v37 = v4;
  v36 = v5;
  v35 = v6;
  v8 = v7;
  v10 = v9;
  v11 = sub_1C106D1F8();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v8;
  if (qword_1ED762B20 != -1)
    swift_once();
  v16 = sub_1C077585C();
  sub_1C079E000(v16, (uint64_t)qword_1ED78D9F8);
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v34 = v10;
  v17(v14, v10, v11);
  v18 = sub_1C106F538();
  v19 = sub_1C10703A8();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = sub_1C0775854();
    v32 = v15;
    v21 = v20;
    sub_1C0775854();
    v31[1] = v1;
    *(_DWORD *)v21 = 136315650;
    v31[0] = v3;
    sub_1C07803F8(&qword_1ED759F68, (void (*)(uint64_t))MEMORY[0x1E0D3BB08]);
    v22 = sub_1C1070C0C();
    v38 = sub_1C07A5D4C(v22, v23);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    sub_1C079B714();
    *(_WORD *)(v21 + 12) = 2080;
    LOBYTE(v38) = v32;
    PipelineType.description.getter();
    v38 = sub_1C07A5D4C(v24, v25);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 22) = 2080;
    v38 = v35;
    v39 = v36 & 1;
    sub_1C07ACF80(&qword_1ED75E828);
    v26 = sub_1C106FB5C();
    v38 = sub_1C07A5D4C(v26, v27);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0771000, v18, v19, "GraphStore: blockPairingMap: e:%s p:%s t:%s", (uint8_t *)v21, 0x20u);
    swift_arrayDestroy();
    sub_1C0776778();
  }
  sub_1C079B714();

  v28 = v36;
  v29 = v35;
  MEMORY[0x1E0C80A78](v30);
  v31[-6] = v34;
  LOBYTE(v31[-5]) = v15;
  v31[-4] = v29;
  LOBYTE(v31[-3]) = v28 & 1;
  v31[-2] = v37;
  v31[-1] = v3;
  sub_1C0779758();
  sub_1C078017C();
  swift_release();
  sub_1C07757D0();
}

void sub_1C0AB489C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *, uint64_t, uint64_t), uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  void (*v22)(uint64_t *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  _QWORD v28[7];
  void (*v29)(uint64_t *, uint64_t, uint64_t);
  uint64_t v30;
  int v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[5];
  uint64_t v36[3];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39[8];

  v28[2] = a7;
  v33 = a6;
  v31 = a5;
  v28[6] = a4;
  v29 = a3;
  v39[7] = a1;
  v7 = sub_1C07ACF80(&qword_1ED75A228);
  MEMORY[0x1E0C80A78](v7);
  v28[3] = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for EntityBlock(0);
  MEMORY[0x1E0C80A78](v9);
  v28[1] = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1C07ACF80(&qword_1ED759EB8);
  v30 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v28[4] = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v28[5] = (char *)v28 - v14;
  MEMORY[0x1E0C80A78](v15);
  MEMORY[0x1E0C80A78](v16);
  v32 = (char *)v28 - v17;
  if (qword_1ED75A1B8 != -1)
    swift_once();
  v18 = sub_1C106C49C();
  v19 = sub_1C079E000(v18, (uint64_t)qword_1ED78D0A8);
  v20 = MEMORY[0x1E0D24668];
  v37 = v18;
  v38 = MEMORY[0x1E0D24668];
  v21 = sub_1C079DFC4(v36);
  v22 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  v22(v21, v19, v18);
  v23 = sub_1C106D0FC();
  v35[3] = MEMORY[0x1E0DEA968];
  v35[4] = MEMORY[0x1E0D24960];
  v35[0] = v23;
  v35[1] = v24;
  v39[3] = sub_1C106BCBC();
  v39[4] = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v39);
  sub_1C106C310();
  sub_1C0784B6C((uint64_t)v35, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v36);
  sub_1C07803F8(&qword_1ED75A1D0, (void (*)(uint64_t))type metadata accessor for EntityBlock);
  v34 = v9;
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v39);
  if (qword_1ED75A1C8 != -1)
    swift_once();
  v25 = sub_1C079E000(v18, (uint64_t)qword_1ED78D0C0);
  v37 = v18;
  v38 = v20;
  v26 = sub_1C079DFC4(v36);
  v22(v26, v25, v18);
  v27 = v29;
  v29 = v22;
  __asm { BR              X12 }
}

void sub_1C0AB4F80(uint64_t (*a1)(uint64_t, uint64_t (*)(), uint64_t, double), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v8 = type metadata accessor for EntityBlock(0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)((char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = a1(a3, sub_1C0ABA56C, a4, v9);
  if (!v4)
  {
    v13 = v12;
    if (qword_1ED762B20 != -1)
      swift_once();
    v14 = sub_1C106F544();
    sub_1C079E000(v14, (uint64_t)qword_1ED78D9F8);
    sub_1C07E05C8(a3, (uint64_t)v11, type metadata accessor for EntityBlock);
    v15 = sub_1C106F538();
    v16 = sub_1C1070378();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = swift_slowAlloc();
      v18 = swift_slowAlloc();
      v23 = v18;
      *(_DWORD *)v17 = 134218243;
      v22 = v13;
      sub_1C10705AC();
      *(_WORD *)(v17 + 12) = 2085;
      v19 = *v11;
      v20 = v11[1];
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v22 = sub_1C0788DAC(v19, v20, &v23);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      sub_1C07B1F90((uint64_t)v11, type metadata accessor for EntityBlock);
      _os_log_impl(&dword_1C0771000, v15, v16, "GraphStore: blockPairingMap: inserted %ld pairs for '%{sensitive}s'", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v18, -1, -1);
      MEMORY[0x1C3BA8270](v17, -1, -1);
    }
    else
    {
      sub_1C07B1F90((uint64_t)v11, type metadata accessor for EntityBlock);
    }

  }
}

uint64_t sub_1C0AB51C4()
{
  type metadata accessor for EntityPair(0);
  sub_1C07803F8(&qword_1ED759C60, (void (*)(uint64_t))type metadata accessor for EntityPair);
  return sub_1C106BFC8();
}

void sub_1C0AB5230()
{
  int v0;
  uint64_t v1;
  int v2;
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  void (*v17)(uint64_t *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  _QWORD v22[2];
  uint64_t v23;
  int v24;
  int v25;
  char *v26;
  uint64_t v27;
  void (*v28)(uint64_t *, uint64_t, uint64_t);
  _QWORD v29[5];
  uint64_t v30[11];

  sub_1C077AE5C();
  v25 = v0;
  v22[0] = v1;
  v24 = v2;
  v4 = v3;
  v27 = v5;
  sub_1C07ACF80(&qword_1ED759EA0);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  v26 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v22[1] = (char *)v22 - v9;
  MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v12);
  v23 = *v4;
  v13 = type metadata accessor for EntityPair(0);
  if (qword_1ED75A000 != -1)
    swift_once();
  v14 = sub_1C106C49C();
  v15 = sub_1C079E000(v14, (uint64_t)qword_1ED78D3B8);
  v30[3] = v14;
  v30[4] = MEMORY[0x1E0D24668];
  v16 = sub_1C079DFC4(v30);
  v17 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  v17(v16, v15, v14);
  v18 = sub_1C106D0FC();
  v29[3] = MEMORY[0x1E0DEA968];
  v29[4] = MEMORY[0x1E0D24960];
  v29[0] = v18;
  v29[1] = v19;
  v30[8] = sub_1C106BCBC();
  v30[9] = MEMORY[0x1E0D23DC0];
  sub_1C07B410C();
  sub_1C077F22C();
  sub_1C0784B6C((uint64_t)v29, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v30);
  sub_1C07803F8(&qword_1ED75A028, (void (*)(uint64_t))type metadata accessor for EntityPair);
  sub_1C106B968();
  v20 = sub_1C0784E74();
  if (qword_1ED75A008 != -1)
    v20 = swift_once();
  sub_1C0791D18(v20, (uint64_t)qword_1ED78D090);
  v21 = sub_1C0780790(MEMORY[0x1E0D24668]);
  v17(v21, v13, v14);
  sub_1C0793BFC();
  v28 = v17;
  __asm { BR              X11 }
}

uint64_t sub_1C0AB5754(uint64_t a1, char *a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD v26[4];
  char v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  char v39;
  uint64_t v40;

  v35 = a6;
  v36 = a3;
  v33 = a5;
  v37 = a4;
  v10 = sub_1C106D1F8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  sub_1C0778544();
  v12 = *a2;
  if (qword_1ED762B20 != -1)
    swift_once();
  v13 = sub_1C077585C();
  sub_1C079E000(v13, (uint64_t)qword_1ED78D9F8);
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
  v34 = a1;
  v14(v7, a1, v10);
  v15 = sub_1C106F538();
  v16 = sub_1C10703A8();
  if (os_log_type_enabled(v15, v16))
  {
    v32 = v6;
    v17 = sub_1C0775854();
    v40 = sub_1C0775854();
    *(_DWORD *)v17 = 136315650;
    sub_1C07803F8(&qword_1ED759F68, (void (*)(uint64_t))MEMORY[0x1E0D3BB08]);
    v18 = sub_1C1070C0C();
    sub_1C0787E58(v18, v19);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    sub_1C0797EF4();
    *(_WORD *)(v17 + 12) = 2080;
    PipelineType.description.getter();
    sub_1C0787E58(v20, v21);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 22) = 2080;
    v39 = v37 & 1;
    sub_1C07ACF80(&qword_1ED75E828);
    v22 = sub_1C106FB5C();
    v38 = sub_1C0787E58(v22, v23);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0771000, v15, v16, "GraphStore: tripleTranslatingMap: e:%s p:%s t:%s", (uint8_t *)v17, 0x20u);
    swift_arrayDestroy();
    sub_1C0776778();
  }
  sub_1C0797EF4();

  MEMORY[0x1E0C80A78](v24);
  v26[2] = v6;
  v26[3] = v34;
  v27 = v12;
  v28 = v36;
  v29 = v37 & 1;
  v30 = v33;
  v31 = v35;
  sub_1C0779758();
  sub_1C077FF50((uint64_t)sub_1C0ABA51C, (uint64_t)v26);
  return sub_1C07785A8();
}

uint64_t sub_1C0AB5A58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  _QWORD v41[9];
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;

  v58 = a8;
  v44 = a7;
  v42 = a6;
  v45 = a5;
  v54 = a3;
  v55 = a1;
  v10 = sub_1C106E590();
  v11 = *(_QWORD *)(v10 - 8);
  v49 = v10;
  v50 = v11;
  MEMORY[0x1E0C80A78](v10);
  v41[8] = (char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v48 = (char *)v41 - v14;
  MEMORY[0x1E0C80A78](v15);
  v46 = (char *)v41 - v16;
  v17 = sub_1C07ACF80(&qword_1ED75A508);
  MEMORY[0x1E0C80A78](v17);
  v47 = (char *)v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v51 = (char *)v41 - v20;
  v21 = type metadata accessor for EntityTriple(0);
  v43 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v52 = (char *)v41 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v57 = (char *)v41 - v24;
  MEMORY[0x1E0C80A78](v25);
  v53 = (char *)v41 - v26;
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)v41 - v28;
  v30 = sub_1C07ACF80(&qword_1ED759F00);
  v31 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v33 = (char *)v41 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v34);
  v36 = (char *)v41 - v35;
  sub_1C07803F8(&qword_1ED75A488, (void (*)(uint64_t))type metadata accessor for EntityTriple);
  sub_1C106B944();
  v37 = v54;
  LODWORD(v54) = a4;
  sub_1C0D49670((uint64_t)v33, v37, a4, 0, 1, (uint64_t)v36);
  v38 = *(void (**)(char *, uint64_t))(v31 + 8);
  v38(v33, v30);
  sub_1C07BB218(&qword_1ED759ED8, &qword_1ED759F00);
  sub_1C07803F8(&qword_1ED75A490, (void (*)(uint64_t))type metadata accessor for EntityTriple);
  v39 = v56;
  sub_1C106BAAC();
  if (!v39)
  {
    v56 = v21;
    v41[6] = a2;
    v41[5] = v29;
    v41[7] = v38;
    sub_1C09D637C();
  }
  return ((uint64_t (*)(char *, uint64_t))v38)(v36, v30);
}

void sub_1C0AB67DC(uint64_t a1, unsigned __int8 *a2, uint64_t a3, int a4, void (*a5)(uint64_t *, uint64_t, uint64_t), uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  void (*v44)(uint64_t *, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t *v51;
  _QWORD v52[4];
  uint64_t v53;
  int v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  void (*v60)(uint64_t *, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  void (*v68)(uint64_t *, _QWORD, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73[3];
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v54 = a4;
  v52[3] = a3;
  v55 = a1;
  v9 = sub_1C07ACF80(&qword_1ED75A328);
  MEMORY[0x1E0C80A78](v9);
  v63 = (char *)v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = type metadata accessor for EntityMatch(0);
  v62 = *(_QWORD *)(v64 - 8);
  MEMORY[0x1E0C80A78](v64);
  v66 = (char *)v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v65 = (char *)v52 - v13;
  v14 = sub_1C07ACF80((uint64_t *)&unk_1ED75EA40);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1C106E590();
  v69 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v67 = (char *)v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)v52 - v20;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)v52 - v23;
  v57 = sub_1C07ACF80(&qword_1ED759ED0);
  v61 = *(_QWORD *)(v57 - 8);
  MEMORY[0x1E0C80A78](v57);
  MEMORY[0x1E0C80A78](v25);
  v52[2] = (char *)v52 - v26;
  MEMORY[0x1E0C80A78](v27);
  v58 = (char *)v52 - v28;
  MEMORY[0x1E0C80A78](v29);
  v56 = (char *)v52 - v30;
  v53 = *a2;
  v31 = *(_QWORD *)(a6 + 16);
  v32 = MEMORY[0x1E0DEE9D8];
  v52[1] = v33;
  if (v31)
  {
    v60 = a5;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v59 = a6;
    v34 = a6 + 40;
    v68 = (void (*)(uint64_t *, _QWORD, uint64_t))v17;
    do
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C106E59C();
      if (sub_1C07B2D80((uint64_t)v16, 1, v17) == 1)
      {
        sub_1C0784B6C((uint64_t)v16, (uint64_t *)&unk_1ED75EA40);
      }
      else
      {
        v35 = *(void (**)(char *, char *, uint64_t))(v69 + 32);
        v35(v24, v16, v17);
        v35(v21, v24, v17);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C07EBE48();
          v32 = v38;
        }
        v36 = *(_QWORD *)(v32 + 16);
        if (v36 >= *(_QWORD *)(v32 + 24) >> 1)
        {
          sub_1C07EBE48();
          v32 = v39;
        }
        *(_QWORD *)(v32 + 16) = v36 + 1;
        v37 = v32
            + ((*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80))
            + *(_QWORD *)(v69 + 72) * v36;
        v17 = (uint64_t)v68;
        v35((char *)v37, v21, (uint64_t)v68);
      }
      v34 += 16;
      --v31;
    }
    while (v31);
    swift_bridgeObjectRelease();
    a5 = v60;
  }
  if (qword_1ED75A2B0 != -1)
    swift_once();
  v40 = sub_1C106C49C();
  v41 = sub_1C079E000(v40, (uint64_t)qword_1ED78D058);
  v42 = MEMORY[0x1E0D24668];
  v77 = v40;
  v78 = MEMORY[0x1E0D24668];
  v43 = sub_1C079DFC4(&v76);
  v44 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 16);
  v44(v43, v41, v40);
  v71 = v17;
  sub_1C07803F8(&qword_1ED75E940, (void (*)(uint64_t))MEMORY[0x1E0D3CE28]);
  v72 = v45;
  v46 = sub_1C079DFC4(&v70);
  v68 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v69 + 16);
  v68(v46, a5, v17);
  v47 = sub_1C106BCBC();
  v48 = MEMORY[0x1E0D23DC0];
  v74 = v47;
  v75 = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v73);
  sub_1C106C310();
  sub_1C0784B6C((uint64_t)&v70, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)&v76);
  v79 = v32;
  v77 = v40;
  v78 = v42;
  v49 = sub_1C079DFC4(&v76);
  v60 = v44;
  v44(v49, v41, v40);
  v71 = v47;
  v72 = v48;
  sub_1C079DFC4(&v70);
  sub_1C07ACF80(&qword_1ED760098);
  sub_1C07BB218(&qword_1ED7600A0, &qword_1ED760098);
  sub_1C106FD6C();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)&v76);
  swift_bridgeObjectRelease();
  v59 = v47;
  v77 = v47;
  v78 = v48;
  sub_1C079DFC4(&v76);
  sub_1C106C34C();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)&v70);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v73);
  sub_1C07803F8(&qword_1ED75A2B8, (void (*)(uint64_t))type metadata accessor for EntityMatch);
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)&v76);
  if (qword_1ED755AF0 != -1)
    swift_once();
  v50 = sub_1C079E000(v40, (uint64_t)qword_1ED78D0D8);
  v74 = v40;
  v75 = MEMORY[0x1E0D24668];
  v51 = sub_1C079DFC4(v73);
  v60(v51, v50, v40);
  __asm { BR              X11 }
}

void sub_1C0AB7490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  uint64_t (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  sub_1C077AE5C();
  a19 = v22;
  a20 = v23;
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v52 = *(_QWORD *)(type metadata accessor for TranslatedEntityTriple(0) - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v32);
  v33 = sub_1C07A3B30();
  v50 = *(_QWORD *)(v33 - 8);
  v51 = v33;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v34);
  sub_1C077AE40();
  v49 = v35;
  v36 = *v27;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v37 = v31(v29, v36);
  swift_bridgeObjectRelease();
  if (qword_1ED762B20 != -1)
    swift_once();
  v38 = sub_1C077585C();
  sub_1C079E000(v38, (uint64_t)qword_1ED78D9F8);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v39 = sub_1C106F538();
  v40 = sub_1C1070378();
  if (os_log_type_enabled(v39, v40))
  {
    v41 = sub_1C0775854();
    a10 = sub_1C0775854();
    *(_DWORD *)v41 = 134218242;
    sub_1C07A47E8(*(_QWORD *)(v37 + 16));
    sub_1C077B5B4();
    *(_WORD *)(v41 + 12) = 2080;
    sub_1C0775864();
    sub_1C077C228(v49, v25, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v50 + 16));
    sub_1C07803F8(&qword_1ED7625A0, (void (*)(uint64_t))MEMORY[0x1E0D3CE28]);
    v42 = sub_1C1070C0C();
    v44 = v43;
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v49, v51);
    v45 = sub_1C0788DAC(v42, v44, &a10);
    sub_1C079DB84(v45);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0771000, v39, v40, "GraphStore: tripleTranslatingMap: %ld translated triples for %s", (uint8_t *)v41, 0x16u);
    swift_arrayDestroy();
    sub_1C0776778();
  }

  sub_1C077B5B4();
  v46 = *(_QWORD *)(v37 + 16);
  if (v46)
  {
    v47 = v37 + ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80));
    v48 = *(_QWORD *)(v52 + 72);
    do
    {
      sub_1C07E05C8(v47, v21, type metadata accessor for TranslatedEntityTriple);
      sub_1C07803F8(&qword_1ED759D18, (void (*)(uint64_t))type metadata accessor for TranslatedEntityTriple);
      sub_1C106BFC8();
      sub_1C07B1F90(v21, type metadata accessor for TranslatedEntityTriple);
      if (v20)
        break;
      v47 += v48;
      --v46;
    }
    while (v46);
  }
  swift_bridgeObjectRelease();
  sub_1C07757D0();
}

void sub_1C0AB7790(char a1)
{
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _BYTE v5[32];

  v5[24] = a1;
  swift_retain();
  sub_1C077FF50((uint64_t)sub_1C0AB7CD4, (uint64_t)v5);
  swift_release();
  if (qword_1ED762B20 != -1)
    swift_once();
  v1 = sub_1C077585C();
  sub_1C079E000(v1, (uint64_t)qword_1ED78D9F8);
  v2 = sub_1C106F538();
  v3 = sub_1C10703A8();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)sub_1C0775854();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1C0771000, v2, v3, "GraphStore: promoteConstructionGraphToProduction: completed", v4, 2u);
    sub_1C0776778();
  }

}

void sub_1C0AB7894(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  double v16;
  void *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  uint64_t v23;
  char v24[8];
  __int128 v25;
  __int128 v26;
  char v27[8];

  if (qword_1ED762B20 != -1)
    swift_once();
  v7 = sub_1C106F544();
  sub_1C079E000(v7, (uint64_t)qword_1ED78D9F8);
  v8 = sub_1C106F538();
  v9 = sub_1C10703A8();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_1C0771000, v8, v9, "GraphStore: promoteConstructionGraphToProduction: starting", v10, 2u);
    MEMORY[0x1C3BA8270](v10, -1, -1);
  }

  sub_1C0AB7CF0(a1, 0xD000000000000010, 0x80000001C10FB4A0, (uint8_t *)0x675F656C62617473, (uint8_t *)0xEC00000068706172, 0xD000000000000019, 0x80000001C10FB160);
  if (!v3)
  {
    sub_1C0AB7CF0(a1, 0x6E6576655F646C6FLL, 0xEF68706172675F74, (uint8_t *)0x72675F746E657665, (uint8_t *)0xEB00000000687061, 0xD000000000000018, 0x80000001C10FB180);
    sub_1C0AB7CF0(a1, 0xD000000000000013, 0x80000001C10FB4C0, (uint8_t *)0x73736572676F7270, (uint8_t *)0xEF736E656B6F745FLL, 0xD00000000000001CLL, 0x80000001C10FB220);
    sub_1C0AB7CF0(a1, 0xD000000000000010, 0x80000001C10FB4E0, (uint8_t *)0x74735F6573616870, (uint8_t *)0xEC00000073757461, 0xD000000000000019, 0x80000001C10FB200);
    sub_1C0AB8A40(a1);
    if ((a3 & 1) == 0)
    {
      type metadata accessor for KeyValueStore();
      v11 = a2 + OBJC_IVAR____TtC24IntelligencePlatformCore10GraphStore_config;
      v12 = sub_1C0BB8EF8(a2 + OBJC_IVAR____TtC24IntelligencePlatformCore10GraphStore_config);
      v23 = v13;
      v15 = v14;
      v16 = sub_1C0AAF440(a1, 0xD000000000000019, 0x80000001C10FB480);
      if (v12)
      {
        v17 = v15;
        v18 = sub_1C07F7EC0();
        v19 = v12;
        if (v18 != 2)
        {
          v20 = v11;
          goto LABEL_11;
        }
      }
      else
      {
        v17 = v15;
        v19 = 0;
      }
      v20 = v11;
      if (v16 != 0.0)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        swift_release();
        return;
      }
LABEL_11:
      sub_1C106AC6C();
      v22 = v21;
      sub_1C0BB8F84(v20, (uint64_t)v24);
      sub_1C0AB9600();
      sub_1C0ABA44C((uint64_t)v24, (uint64_t)v27);
      sub_1C086229C((uint64_t)v27);
      v26 = v25;
      sub_1C07B2F5C((uint64_t)&v26);
      sub_1C0AAF784(v22, a1, 0xD000000000000019, 0x80000001C10FB480);
      sub_1C0AB9910(v19, v23, v17);
      goto LABEL_12;
    }
  }
}

void sub_1C0AB7CD4(uint64_t a1)
{
  uint64_t v1;

  sub_1C0AB7894(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

uint64_t sub_1C0AB7CF0(uint64_t a1, uint64_t a2, uint64_t a3, uint8_t *a4, uint8_t *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint8_t *v26;
  uint8_t *v27;
  uint8_t *v28;
  uint64_t v29;
  uint8_t *v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint8_t *v41;
  uint8_t *v42;
  uint8_t *v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint8_t *v69;
  uint64_t v70;
  NSObject *v71;
  os_log_type_t v72;
  uint8_t *v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint8_t *v90;
  uint8_t *v91;
  uint8_t *v92;
  uint8_t *v93;
  uint8_t *v94;
  unint64_t v95;
  uint64_t v96;

  v92 = (uint8_t *)a6;
  v93 = (uint8_t *)a7;
  v13 = sub_1C07ACF80(&qword_1ED760E68);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_1C106C574();
  if (!v7)
  {
    v85 = v16;
    v89 = a1;
    v90 = a5;
    v91 = a4;
    v88 = a2;
    if ((result & 1) != 0)
      sub_1C106C628();
    v18 = (uint64_t)v90;
    v87 = 0;
    v83 = v13;
    v84 = a3;
    v82 = v14;
    v94 = v91;
    v95 = (unint64_t)v90;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C106FC94();
    v20 = (uint64_t)v94;
    v19 = v95;
    if (qword_1ED762B20 != -1)
      swift_once();
    v21 = sub_1C106F544();
    v22 = sub_1C079E000(v21, (uint64_t)qword_1ED78D9F8);
    swift_bridgeObjectRetain_n();
    v23 = sub_1C106F538();
    v24 = sub_1C1070378();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = v20;
      v26 = (uint8_t *)swift_slowAlloc();
      v27 = (uint8_t *)swift_slowAlloc();
      v86 = v22;
      v28 = v27;
      v94 = v27;
      *(_DWORD *)v26 = 136315138;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v96 = sub_1C0788DAC(v25, v19, (uint64_t *)&v94);
      sub_1C10705AC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C0771000, v23, v24, "GraphStore: promoteConstructionGraphToProduction: fetching FTS data for %s", v26, 0xCu);
      swift_arrayDestroy();
      v18 = (uint64_t)v90;
      v29 = v86;
      MEMORY[0x1C3BA8270](v28, -1, -1);
      v30 = v26;
      v20 = v25;
      MEMORY[0x1C3BA8270](v30, -1, -1);

      v31 = v91;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v31 = v91;
      v29 = v22;
    }
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v32 = v87;
    sub_1C08EEF7C(v20, v19, 0x656C626174, 0xE500000000000000);
    if (v32)
    {
      return swift_bridgeObjectRelease_n();
    }
    else
    {
      v34 = v20;
      v35 = v33;
      v86 = v29;
      v81 = v34;
      swift_bridgeObjectRelease();
      sub_1C08EEF7C((uint64_t)v31, v18, 0x72656767697274, 0xE700000000000000);
      v37 = v36;
      swift_bridgeObjectRetain_n();
      v38 = sub_1C106F538();
      v39 = sub_1C1070378();
      if (os_log_type_enabled(v38, v39))
      {
        v79 = v35;
        v40 = swift_slowAlloc();
        v80 = v37;
        v41 = (uint8_t *)v40;
        v42 = (uint8_t *)swift_slowAlloc();
        v94 = v42;
        *(_DWORD *)v41 = 136315138;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v96 = sub_1C0788DAC(v81, v19, (uint64_t *)&v94);
        v35 = v79;
        v31 = v91;
        sub_1C10705AC();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1C0771000, v38, v39, "GraphStore: promoteConstructionGraphToProduction: dropping FTS objects for %s", v41, 0xCu);
        swift_arrayDestroy();
        v18 = (uint64_t)v90;
        MEMORY[0x1C3BA8270](v42, -1, -1);
        v43 = v41;
        v37 = v80;
        MEMORY[0x1C3BA8270](v43, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      sub_1C0AB20A0(v35, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C0ABA494);
      sub_1C0AB20A0(v37, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C0ABA4A8);
      v80 = v37;
      v44 = sub_1C106F538();
      v45 = sub_1C1070378();
      if (os_log_type_enabled(v44, v45))
      {
        v46 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v46 = 0;
        _os_log_impl(&dword_1C0771000, v44, v45, "GraphStore: promoteConstructionGraphToProduction: fetching index data", v46, 2u);
        MEMORY[0x1C3BA8270](v46, -1, -1);
      }

      sub_1C08EEF7C((uint64_t)v31, v18, 0x7865646E69, 0xE500000000000000);
      v48 = v47;
      v79 = v35;
      sub_1C08EEF7C((uint64_t)v92, (uint64_t)v93, 0x7865646E69, 0xE500000000000000);
      v50 = v49;
      v51 = sub_1C106F538();
      v52 = sub_1C1070378();
      if (os_log_type_enabled(v51, v52))
      {
        v53 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v53 = 0;
        _os_log_impl(&dword_1C0771000, v51, v52, "GraphStore: promoteConstructionGraphToProduction: dropping indexes", v53, 2u);
        MEMORY[0x1C3BA8270](v53, -1, -1);
      }

      sub_1C0AB20A0(v48, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C0ABA4C0);
      sub_1C0AB20A0(v50, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C0ABA660);
      v87 = 0;
      v54 = sub_1C106F538();
      v55 = sub_1C1070378();
      if (os_log_type_enabled(v54, v55))
      {
        v56 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v56 = 0;
        _os_log_impl(&dword_1C0771000, v54, v55, "GraphStore: promoteConstructionGraphToProduction: renaming tables", v56, 2u);
        MEMORY[0x1C3BA8270](v56, -1, -1);
      }

      v57 = v87;
      sub_1C106C688();
      if (v57)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1C106C688();
        sub_1C106C688();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        sub_1C106C484();
        sub_1C106C478();
        (*(void (**)(char *, uint64_t))(v82 + 8))(v85, v83);
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v58 = sub_1C106F538();
        v59 = sub_1C1070378();
        if (os_log_type_enabled(v58, v59))
        {
          v61 = (uint8_t *)swift_slowAlloc();
          v93 = (uint8_t *)swift_slowAlloc();
          v94 = v93;
          *(_DWORD *)v61 = 136315138;
          v92 = v61 + 4;
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          v96 = sub_1C0788DAC(v81, v19, (uint64_t *)&v94);
          sub_1C10705AC();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1C0771000, v58, v59, "GraphStore: promoteConstructionGraphToProduction: recreating FTS table: %s", v61, 0xCu);
          v62 = (uint64_t)v93;
          swift_arrayDestroy();
          MEMORY[0x1C3BA8270](v62, -1, -1);
          MEMORY[0x1C3BA8270](v61, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        sub_1C0AB20A0(v79, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C0ABA4D4);
        sub_1C0AB20A0(v80, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C0ABA4D4);
        swift_bridgeObjectRelease();
        sub_1C0AB20A0(v79, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C0ABA4E8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain_n();
        v63 = sub_1C106F538();
        v64 = sub_1C1070378();
        LODWORD(v93) = v64;
        if (os_log_type_enabled(v63, v64))
        {
          v65 = (uint8_t *)swift_slowAlloc();
          v92 = (uint8_t *)swift_slowAlloc();
          v94 = v92;
          v91 = v65;
          *(_DWORD *)v65 = 136315138;
          v90 = v65 + 4;
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          v66 = sub_1C106F994();
          v68 = v67;
          swift_bridgeObjectRelease();
          v96 = sub_1C0788DAC(v66, v68, (uint64_t *)&v94);
          sub_1C10705AC();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          v69 = v91;
          _os_log_impl(&dword_1C0771000, v63, (os_log_type_t)v93, "GraphStore: promoteConstructionGraphToProduction: recreating indexes: %s", v91, 0xCu);
          v70 = (uint64_t)v92;
          swift_arrayDestroy();
          MEMORY[0x1C3BA8270](v70, -1, -1);
          MEMORY[0x1C3BA8270](v69, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        sub_1C0AB20A0(v48, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C0ABA4D4);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain_n();
        v71 = sub_1C106F538();
        v72 = sub_1C1070378();
        LODWORD(v93) = v72;
        if (os_log_type_enabled(v71, v72))
        {
          v73 = (uint8_t *)swift_slowAlloc();
          v92 = (uint8_t *)swift_slowAlloc();
          v94 = v92;
          *(_DWORD *)v73 = 136315138;
          v91 = v73 + 4;
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          v74 = sub_1C106F994();
          v76 = v75;
          swift_bridgeObjectRelease();
          v96 = sub_1C0788DAC(v74, v76, (uint64_t *)&v94);
          sub_1C10705AC();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C0771000, v71, (os_log_type_t)v93, "GraphStore: promoteConstructionGraphToProduction: recreating indexes: %s", v73, 0xCu);
          v77 = (uint64_t)v92;
          swift_arrayDestroy();
          MEMORY[0x1C3BA8270](v77, -1, -1);
          MEMORY[0x1C3BA8270](v73, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        sub_1C0AB20A0(v50, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C0ABA4D4);
      }
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_1C0AB8A40(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  double v21;
  double v22;
  uint64_t v23;
  double v24;
  char *v25;
  double v26;
  double v27;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  unint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[3];
  uint64_t v54;
  uint64_t v55;
  _BYTE v56[24];
  ValueMetadata *v57;
  unint64_t v58;
  uint64_t v59[2];
  uint64_t v60;
  uint64_t v61;

  v44 = type metadata accessor for ExpiredEventTriple(0);
  MEMORY[0x1E0C80A78](v44);
  v43 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1C07ACF80(&qword_1EF637F88);
  MEMORY[0x1E0C80A78](v3);
  v41 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for ExpiredConstructionEventTriple(0);
  MEMORY[0x1E0C80A78](v40);
  v46 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = type metadata accessor for ExpiredGraphTriple(0);
  MEMORY[0x1E0C80A78](v51);
  v45 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C07ACF80(&qword_1EF637FA8);
  MEMORY[0x1E0C80A78](v7);
  v48 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = type metadata accessor for ExpiredConstructionGraphTriple(0);
  MEMORY[0x1E0C80A78](v49);
  v47 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_1C07ACF80(&qword_1ED755788);
  v42 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1C07ACF80(&qword_1ED755790);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1C106ADE0();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = v52;
  v21 = sub_1C0AAF8D0(a1);
  if (!v20)
  {
    v22 = v21;
    v36 = v19;
    v37 = v17;
    v38 = v16;
    v39 = v15;
    v52 = v13;
    v35 = v11;
    v23 = v50;
    v24 = sub_1C0AAF440(a1, 0xD00000000000001CLL, 0x80000001C10FB460);
    v34 = a1;
    if (v24 < v22)
    {
      v33 = (unint64_t)"h_state VALUES (?, ?)";
      v25 = v36;
      sub_1C106AD68();
      sub_1C106AC60();
      v27 = v26;
      (*(void (**)(char *, uint64_t))(v37 + 8))(v25, v38);
      if (v22 >= v27)
        v22 = v27;
      v57 = &type metadata for FusedTripleColumn;
      v28 = sub_1C080ABFC();
      v58 = v28;
      v56[0] = 8;
      v54 = MEMORY[0x1E0DEB070];
      v55 = MEMORY[0x1E0D249C8];
      *(double *)v53 = v22;
      v29 = sub_1C106BCBC();
      v60 = v29;
      v61 = MEMORY[0x1E0D23DC0];
      sub_1C079DFC4(v59);
      sub_1C106C334();
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v53);
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v56);
      sub_1C07803F8(&qword_1ED75E6F8, (void (*)(uint64_t))type metadata accessor for ExpiredGraphTriple);
      v30 = v39;
      sub_1C106B968();
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v59);
      v31 = v34;
      sub_1C106C124();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v30, v12);
      v57 = &type metadata for FusedTripleColumn;
      v58 = v28;
      v56[0] = 8;
      v54 = MEMORY[0x1E0DEB070];
      v55 = MEMORY[0x1E0D249C8];
      *(double *)v53 = v22;
      v60 = v29;
      v61 = MEMORY[0x1E0D23DC0];
      sub_1C079DFC4(v59);
      sub_1C106C334();
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v53);
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v56);
      sub_1C07803F8(&qword_1ED757408, (void (*)(uint64_t))type metadata accessor for ExpiredEventTriple);
      v32 = v35;
      sub_1C106B968();
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v59);
      sub_1C106C124();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v32, v23);
      sub_1C0AAF784(v22, v31, 0xD00000000000001CLL, v33 | 0x8000000000000000);
    }
    sub_1C07803F8(&qword_1EF63A120, (void (*)(uint64_t))type metadata accessor for ExpiredConstructionGraphTriple);
    sub_1C07803F8(&qword_1EF63A168, (void (*)(uint64_t))type metadata accessor for ExpiredConstructionGraphTriple);
    sub_1C106BD64();
    sub_1C09D6D8C();
  }
}

void sub_1C0AB9058()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;

  if (v2)
  {
    swift_release();
    JUMPOUT(0x1C0AB8D28);
  }
  *(_QWORD *)(v6 - 232) = v0;
  *(_QWORD *)(v6 - 72) = v1;
  v7 = *(_QWORD *)(v6 - 240);
  if (sub_1C07B2D80(v5, 1, v3) != 1)
  {
    sub_1C07E05F4(v5, v4, type metadata accessor for ExpiredConstructionGraphTriple);
    v8 = sub_1C106E590();
    v9 = *(_QWORD *)(v6 - 288);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v9, v4, v8);
    v10 = v4 + *(int *)(v3 + 20);
    v11 = v9 + *(int *)(v7 + 20);
    v12 = (int *)v3;
    v13 = sub_1C106E41C();
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    v14(v11, v10, v13);
    v15 = v4 + v12[6];
    v16 = v9 + *(int *)(*(_QWORD *)(v6 - 240) + 24);
    v17 = sub_1C106EB24();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v16, v15, v17);
    v14(v9 + *(int *)(*(_QWORD *)(v6 - 240) + 28), v4 + v12[7], v13);
    v18 = (uint64_t *)(v4 + v12[8]);
    v20 = *v18;
    v19 = v18[1];
    v21 = *(_QWORD *)(v4 + v12[9]);
    v22 = v12[11];
    v23 = *(_QWORD *)(v4 + v12[10]);
    v24 = *(_QWORD *)(v4 + v22);
    v25 = *(_QWORD *)(v4 + v22 + 8);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C106AC6C();
    v26 = (_QWORD *)(v9 + *(int *)(*(_QWORD *)(v6 - 240) + 32));
    *v26 = v20;
    v26[1] = v19;
    *(_QWORD *)(v9 + *(int *)(*(_QWORD *)(v6 - 240) + 36)) = v21;
    *(_QWORD *)(v9 + *(int *)(*(_QWORD *)(v6 - 240) + 40)) = v23;
    v27 = (_QWORD *)(v9 + *(int *)(*(_QWORD *)(v6 - 240) + 44));
    *v27 = v24;
    v27[1] = v25;
    *(_QWORD *)(v9 + *(int *)(*(_QWORD *)(v6 - 240) + 48)) = v28;
    sub_1C07803F8(&qword_1ED747E00, (void (*)(uint64_t))type metadata accessor for ExpiredGraphTriple);
    sub_1C106BFC8();
    sub_1C07B1F90(v9, type metadata accessor for ExpiredGraphTriple);
    sub_1C07B1F90(v4, type metadata accessor for ExpiredConstructionGraphTriple);
    sub_1C09D6D8C();
  }
  sub_1C0784B6C(v5, &qword_1EF637FA8);
  sub_1C07803F8(&qword_1EF63A178, (void (*)(uint64_t))type metadata accessor for ExpiredConstructionEventTriple);
  sub_1C07803F8(&qword_1EF63A1C0, (void (*)(uint64_t))type metadata accessor for ExpiredConstructionEventTriple);
  sub_1C106BD64();
  sub_1C09D6E80();
}

void sub_1C0AB932C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  int *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;

  if (!v0)
  {
    *(_QWORD *)(v4 - 248) = v1;
    v5 = *(_QWORD *)(v4 - 304);
    v6 = *(_QWORD *)(v4 - 296);
    *(_QWORD *)(v4 - 240) = v2;
    v7 = *(_QWORD *)(v4 - 328);
    if (sub_1C07B2D80(*(_QWORD *)(v4 - 320), 1, v7) != 1)
    {
      sub_1C07E05F4(*(_QWORD *)(v4 - 320), v3, type metadata accessor for ExpiredConstructionEventTriple);
      v8 = sub_1C106E590();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v5, v3, v8);
      v9 = (int *)v7;
      v10 = v3 + *(int *)(v7 + 20);
      v11 = v5 + *(int *)(v6 + 20);
      v12 = sub_1C106E41C();
      v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
      v13(v11, v10, v12);
      v14 = v3 + v9[6];
      v15 = *(_QWORD *)(v4 - 304) + *(int *)(*(_QWORD *)(v4 - 296) + 24);
      v16 = sub_1C106EB24();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v15, v14, v16);
      v13(*(_QWORD *)(v4 - 304) + *(int *)(*(_QWORD *)(v4 - 296) + 28), v3 + v9[7], v12);
      v17 = (uint64_t *)(v3 + v9[8]);
      v19 = *v17;
      v18 = v17[1];
      v20 = *(_QWORD *)(v3 + v9[9]);
      v21 = v9[11];
      v22 = *(_QWORD *)(v3 + v9[10]);
      v23 = *(_QWORD *)(v3 + v21);
      v24 = *(_QWORD *)(v3 + v21 + 8);
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C106AC6C();
      v25 = (_QWORD *)(*(_QWORD *)(v4 - 304) + *(int *)(*(_QWORD *)(v4 - 296) + 32));
      *v25 = v19;
      v25[1] = v18;
      v26 = *(int **)(v4 - 296);
      *(_QWORD *)(*(_QWORD *)(v4 - 304) + v26[9]) = v20;
      *(_QWORD *)(*(_QWORD *)(v4 - 304) + v26[10]) = v22;
      v27 = (_QWORD *)(*(_QWORD *)(v4 - 304) + v26[11]);
      *v27 = v23;
      v27[1] = v24;
      v28 = *(_QWORD *)(v4 - 304);
      *(_QWORD *)(v28 + v26[12]) = v29;
      sub_1C07803F8(&qword_1EF63A0D0, (void (*)(uint64_t))type metadata accessor for ExpiredEventTriple);
      sub_1C106BFC8();
      sub_1C07B1F90(v28, type metadata accessor for ExpiredEventTriple);
      sub_1C07B1F90(v3, type metadata accessor for ExpiredConstructionEventTriple);
      sub_1C09D6E80();
    }
    sub_1C0784B6C(*(_QWORD *)(v4 - 320), &qword_1EF637F88);
    sub_1C106B9B0();
    sub_1C106B9B0();
  }
  swift_release();
  JUMPOUT(0x1C0AB9064);
}

void sub_1C0AB9600()
{
  _QWORD *v0;
  uint64_t v1;
  os_log_type_t v2;
  uint8_t *v3;
  NSObject *oslog;

  if (*v0)
  {
    swift_retain();
    sub_1C0B79C98();
    swift_release();
  }
  else
  {
    if (qword_1ED762B20 != -1)
      swift_once();
    v1 = sub_1C106F544();
    sub_1C079E000(v1, (uint64_t)qword_1ED78D9F8);
    oslog = sub_1C106F538();
    v2 = sub_1C1070378();
    if (os_log_type_enabled(oslog, v2))
    {
      v3 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v3 = 0;
      _os_log_impl(&dword_1C0771000, oslog, v2, "keyValueStore is nil", v3, 2u);
      MEMORY[0x1C3BA8270](v3, -1, -1);
    }

  }
}

void sub_1C0AB9910(uint64_t a1, uint64_t a2, void *a3)
{
  Swift::String v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  os_log_type_t v17;
  uint8_t *v18;
  NSObject *oslog;
  uint64_t v20;

  if (a1)
  {
    swift_retain();
    v5._countAndFlagsBits = a2;
    v5._object = a3;
    KeyValueStore.delete(key:)(v5);
    if (!v6)
    {
      swift_release();
      return;
    }
    if (qword_1ED762B20 != -1)
      swift_once();
    v7 = sub_1C106F544();
    sub_1C079E000(v7, (uint64_t)qword_1ED78D9F8);
    v8 = v6;
    v9 = v6;
    oslog = sub_1C106F538();
    v10 = sub_1C1070390();
    if (os_log_type_enabled(oslog, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v20 = v12;
      *(_DWORD *)v11 = 136315138;
      v13 = v6;
      sub_1C07ACF80(&qword_1ED7614F0);
      v14 = sub_1C106FB5C();
      sub_1C0788DAC(v14, v15, &v20);
      sub_1C10705AC();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C0771000, oslog, v10, "Can't remove value due to: %s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v12, -1, -1);
      MEMORY[0x1C3BA8270](v11, -1, -1);

      swift_release();
      return;
    }
    swift_release();

  }
  else
  {
    if (qword_1ED762B20 != -1)
      swift_once();
    v16 = sub_1C106F544();
    sub_1C079E000(v16, (uint64_t)qword_1ED78D9F8);
    oslog = sub_1C106F538();
    v17 = sub_1C1070378();
    if (os_log_type_enabled(oslog, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_1C0771000, oslog, v17, "keyValueStore is nil", v18, 2u);
      MEMORY[0x1C3BA8270](v18, -1, -1);
    }
  }

}

uint64_t sub_1C0AB9C10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _WORD v5[8];

  v0 = sub_1C106C040();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  strcpy((char *)v5, "DROP TRIGGER ");
  v5[7] = -4864;
  sub_1C106FC94();
  sub_1C106C034();
  sub_1C106C694();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0AB9D08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _QWORD v5[2];

  v0 = sub_1C106C040();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5[0] = 0;
  v5[1] = 0xE000000000000000;
  sub_1C1070774();
  swift_bridgeObjectRelease();
  strcpy((char *)v5, "INSERT INTO ");
  BYTE5(v5[1]) = 0;
  HIWORD(v5[1]) = -5120;
  sub_1C106FC94();
  sub_1C106FC94();
  sub_1C106FC94();
  sub_1C106FC94();
  sub_1C106C034();
  sub_1C106C694();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0AB9E48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_1C106C040();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  sub_1C0778544();
  sub_1C106C034();
  sub_1C106C694();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

void sub_1C0AB9EE8()
{
  sub_1C0779758();
  sub_1C0BB97A8((uint64_t)sub_1C0AB9F30, 0);
  sub_1C07785A8();
  sub_1C0778534();
}

uint64_t sub_1C0AB9F30@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  type metadata accessor for EntityTriple(0);
  sub_1C07803F8(&qword_1ED75A488, (void (*)(uint64_t))type metadata accessor for EntityTriple);
  result = sub_1C106B92C();
  if (!v1)
    *a1 = result;
  return result;
}

#error "1C0AB9FAC: call analysis failed (funcsize=5)"

void sub_1C0AB9FB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  _BOOL4 v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v66;
  os_log_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  sub_1C077AE5C();
  a19 = v22;
  a20 = v23;
  v77 = v24;
  v73 = v26;
  *(_QWORD *)&v74 = v25;
  v27 = sub_1C106C040();
  v78 = *(_QWORD *)(v27 - 8);
  v79 = v27;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v28);
  sub_1C077AE40();
  v76 = v29;
  v30 = type metadata accessor for EntityBlock(0);
  v31 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v32 = sub_1C07A3B30();
  v33 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v35 = (char *)&v66 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v37 = ((uint64_t (*)(uint64_t))v74)(v36);
  swift_bridgeObjectRelease();
  if (!v20)
  {
    v75 = v30;
    v69 = v35;
    v70 = v33;
    v72 = v32;
    *(_QWORD *)&v74 = v31;
    if (qword_1ED762B20 != -1)
      swift_once();
    v38 = sub_1C077585C();
    sub_1C079E000(v38, (uint64_t)qword_1ED78D9F8);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v39 = sub_1C106F538();
    v40 = sub_1C1070378();
    v41 = os_log_type_enabled(v39, v40);
    v42 = v72;
    v43 = v73;
    v71 = v37;
    if (v41)
    {
      v44 = sub_1C0775854();
      v67 = v39;
      v45 = v44;
      v68 = sub_1C0775854();
      a10 = v68;
      *(_DWORD *)v45 = 134218242;
      sub_1C07A47E8(*(_QWORD *)(v37 + 16));
      sub_1C077B5B4();
      *(_WORD *)(v45 + 12) = 2080;
      v66 = v45 + 14;
      sub_1C0775864();
      v46 = v69;
      v47 = v70;
      (*(void (**)(char *, unint64_t, uint64_t))(v70 + 16))(v69, v43, v42);
      sub_1C07803F8(&qword_1ED7625A0, (void (*)(uint64_t))MEMORY[0x1E0D3CE28]);
      v48 = sub_1C1070C0C();
      v50 = v49;
      (*(void (**)(char *, uint64_t))(v47 + 8))(v46, v42);
      v51 = sub_1C0788DAC(v48, v50, &a10);
      sub_1C079DB84(v51);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C0771000, v67, v40, "GraphStore: batchMappingInsert: %ld blocks for %s", (uint8_t *)v45, 0x16u);
      swift_arrayDestroy();
      sub_1C0776778();
    }

    sub_1C077B5B4();
    if (*(_QWORD *)(v37 + 16))
    {
      v52 = v37 + ((*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80));
      v72 = *(_QWORD *)(v74 + 72);
      v74 = xmmword_1C107DE20;
      v73 = 0x80000001C10FB500;
      v53 = MEMORY[0x1E0DEA968];
      sub_1C07E05C8(v52, (uint64_t)v21, type metadata accessor for EntityBlock);
      sub_1C07ACF80(&qword_1ED762C90);
      v54 = swift_allocObject();
      *(_OWORD *)(v54 + 16) = v74;
      v56 = *v21;
      v55 = v21[1];
      *(_QWORD *)(v54 + 56) = v53;
      v57 = MEMORY[0x1E0D24968];
      *(_QWORD *)(v54 + 64) = MEMORY[0x1E0D24968];
      *(_QWORD *)(v54 + 32) = v56;
      *(_QWORD *)(v54 + 40) = v55;
      v58 = v75;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v59 = sub_1C106D0FC();
      *(_QWORD *)(v54 + 96) = v53;
      *(_QWORD *)(v54 + 104) = v57;
      *(_QWORD *)(v54 + 72) = v59;
      *(_QWORD *)(v54 + 80) = v60;
      v61 = (uint64_t *)((char *)v21 + *(int *)(v58 + 24));
      v63 = *v61;
      v62 = v61[1];
      *(_QWORD *)(v54 + 136) = v53;
      *(_QWORD *)(v54 + 144) = v57;
      *(_QWORD *)(v54 + 112) = v63;
      *(_QWORD *)(v54 + 120) = v62;
      v64 = *(uint64_t *)((char *)v21 + *(int *)(v58 + 28));
      *(_QWORD *)(v54 + 176) = MEMORY[0x1E0DEB070];
      *(_QWORD *)(v54 + 184) = MEMORY[0x1E0D249D0];
      *(_QWORD *)(v54 + 152) = v64;
      sub_1C0793BFC();
      __asm { BR              X11 }
    }
    swift_bridgeObjectRelease();
  }
  sub_1C07757D0();
}

uint64_t sub_1C0ABA44C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1EF63A718);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0ABA494()
{
  return sub_1C106C628();
}

uint64_t sub_1C0ABA4A8()
{
  return sub_1C0AB9C10();
}

uint64_t sub_1C0ABA4C0()
{
  return sub_1C106C61C();
}

uint64_t sub_1C0ABA4D4()
{
  return sub_1C078CB1C();
}

uint64_t sub_1C0ABA4E8()
{
  return sub_1C0AB9D08();
}

void sub_1C0ABA500(uint64_t a1)
{
  uint64_t v1;

  sub_1C0AB429C(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(void *))(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1C0ABA51C(uint64_t a1)
{
  uint64_t v1;

  return sub_1C0AB5A58(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(_QWORD *)(v1 + 40), *(unsigned __int8 *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64));
}

void sub_1C0ABA544(uint64_t a1)
{
  uint64_t v1;

  sub_1C0AB489C(a1, *(_QWORD *)(v1 + 16), (void (*)(uint64_t *, uint64_t, uint64_t))*(unsigned __int8 *)(v1 + 24), *(_QWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_1C0ABA56C()
{
  return sub_1C0AB51C4();
}

uint64_t sub_1C0ABA584()
{
  uint64_t v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t *v3;

  sub_1C0795AA8();
  return sub_1C0AB25C0(v0, v1, v2, v3);
}

uint64_t sub_1C0ABA59C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1ED7618D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0ABA5E4()
{
  uint64_t v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t *v3;

  sub_1C0795AA8();
  return sub_1C0AB3710(v0, v1, v2, v3);
}

uint64_t sub_1C0ABA5FC()
{
  uint64_t v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t *v3;

  sub_1C0795AA8();
  return sub_1C0AB3CAC(v0, v1, v2, v3);
}

void sub_1C0ABA614(uint64_t a1)
{
  uint64_t v1;

  sub_1C0AB2BF4(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

void sub_1C0ABA630(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;

  sub_1C0AB2D30(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1C0ABA648()
{
  uint64_t v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t *v3;

  sub_1C0795AA8();
  return sub_1C0AB3174(v0, v1, v2, v3);
}

uint64_t sub_1C0ABA660()
{
  return sub_1C0ABA4C0();
}

uint64_t sub_1C0ABA674(_BYTE *a1)
{
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _BYTE v7[24];
  uint64_t v8;

  v7[16] = *a1;
  swift_retain();
  v1 = sub_1C0BB9B94((uint64_t)sub_1C0ABAA2C, (uint64_t)v7);
  swift_release();
  if (qword_1ED762B20 != -1)
    swift_once();
  v2 = sub_1C106F544();
  sub_1C079E000(v2, (uint64_t)qword_1ED78D9F8);
  v3 = sub_1C106F538();
  v4 = sub_1C10703A8();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v5 = 134217984;
    v8 = v1;
    sub_1C10705AC();
    _os_log_impl(&dword_1C0771000, v3, v4, "GraphStore: clearTranslatedEntityTriples: %ld deleted.", v5, 0xCu);
    MEMORY[0x1C3BA8270](v5, -1, -1);
  }

  return v1;
}

uint64_t sub_1C0ABA7BC@<X0>(unsigned __int8 a1@<W1>, uint64_t *a2@<X8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t *v15;
  char v16;
  ValueMetadata *v17;
  unint64_t v18;
  uint64_t v19;

  v15 = a2;
  v3 = a1;
  v4 = sub_1C07ACF80(&qword_1ED755A48);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v15 - v10;
  type metadata accessor for TranslatedEntityTriple(0);
  sub_1C0ABAA44();
  sub_1C106B944();
  if (v3 != 4)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v11, v4);
    v17 = &type metadata for SourcedTripleColumn;
    v18 = sub_1C091755C();
    v16 = 8;
    __asm { BR              X12 }
  }
  v12 = v19;
  v13 = sub_1C106C124();
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v11, v4);
  if (!v12)
    *v15 = v13;
  return result;
}

uint64_t sub_1C0ABAA2C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1C0ABA7BC(*(_BYTE *)(v1 + 16), a1);
}

unint64_t sub_1C0ABAA44()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED75C320;
  if (!qword_1ED75C320)
  {
    v1 = type metadata accessor for TranslatedEntityTriple(255);
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for TranslatedEntityTriple, v1);
    atomic_store(result, (unint64_t *)&qword_1ED75C320);
  }
  return result;
}

unint64_t sub_1C0ABAA84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED759F20;
  if (!qword_1ED759F20)
  {
    v1 = sub_1C07D4BEC(&qword_1ED755A48);
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0D242A0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED759F20);
  }
  return result;
}

uint64_t sub_1C0ABAAC8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;

  v2 = sub_1C106D1F8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - v7;
  v9 = *(_QWORD *)(a1 + 56);
  v22 = a1 + 56;
  v10 = 1 << *(_BYTE *)(a1 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v9;
  v23 = (unint64_t)(v10 + 63) >> 6;
  result = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v14 = 0;
  if (!v12)
    goto LABEL_5;
LABEL_4:
  v15 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (i = v15 | (v14 << 6); ; i = __clz(__rbit64(v18)) + (v14 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v8, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v3 + 72) * i, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    v20 = sub_1C106D1C8();
    sub_1C07AF3F4(&v24, v20);
    result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if (v12)
      goto LABEL_4;
LABEL_5:
    v17 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v17 >= v23)
      return swift_release();
    v18 = *(_QWORD *)(v22 + 8 * v17);
    ++v14;
    if (!v18)
    {
      v14 = v17 + 1;
      if (v17 + 1 >= v23)
        return swift_release();
      v18 = *(_QWORD *)(v22 + 8 * v14);
      if (!v18)
      {
        v14 = v17 + 2;
        if (v17 + 2 >= v23)
          return swift_release();
        v18 = *(_QWORD *)(v22 + 8 * v14);
        if (!v18)
        {
          v14 = v17 + 3;
          if (v17 + 3 >= v23)
            return swift_release();
          v18 = *(_QWORD *)(v22 + 8 * v14);
          if (!v18)
            break;
        }
      }
    }
LABEL_20:
    v12 = (v18 - 1) & v18;
  }
  v19 = v17 + 4;
  if (v19 >= v23)
    return swift_release();
  v18 = *(_QWORD *)(v22 + 8 * v19);
  if (v18)
  {
    v14 = v19;
    goto LABEL_20;
  }
  while (1)
  {
    v14 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v14 >= v23)
      return swift_release();
    v18 = *(_QWORD *)(v22 + 8 * v14);
    ++v19;
    if (v18)
      goto LABEL_20;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_1C0ABAD10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  _QWORD v6[8];

  v6[2] = a1;
  v6[3] = a3;
  *(double *)&v6[4] = a5;
  v6[5] = a2;
  v6[6] = a4;
  *(double *)&v6[7] = a6;
  swift_retain();
  sub_1C0BB9674((uint64_t)sub_1C0AC1348, (uint64_t)v6);
  sub_1C079ABA0();
  sub_1C079663C();
}

_QWORD *sub_1C0ABAD74(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  uint64_t v5;
  __int128 v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v7 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v5 + 24) = *(_OWORD *)a3;
  *(_QWORD *)(v5 + 16) = 0;
  *(_OWORD *)(v5 + 40) = v7;
  *(_QWORD *)(v5 + 56) = *(_QWORD *)(a3 + 32);
  *(_BYTE *)(v5 + 136) = a4;
  *(_BYTE *)(v5 + 137) = a5;
  *(_QWORD *)(v5 + 128) = 0;
  if ((*(_BYTE *)(a3 + 16) & 1) != 0)
  {
    sub_1C0AC142C(a3);
    sub_1C07B7730();
    v10 = v11;
    v12 = *(_QWORD *)(v11 + 16);
    if (v12 >= *(_QWORD *)(v11 + 24) >> 1)
    {
      sub_1C07B7730();
      v10 = v39;
    }
    *(_QWORD *)(v10 + 16) = v12 + 1;
    v13 = v10 + 16 * v12;
    *(_QWORD *)(v13 + 32) = 0x6D617473656D6974;
    *(_QWORD *)(v13 + 40) = 0xE900000000000070;
    *(_QWORD *)(v5 + 64) = 1;
    if ((*(_BYTE *)(a3 + 8) & 1) == 0)
    {
      v9 = 1;
      *(_QWORD *)(v5 + 72) = 1;
      if ((*(_BYTE *)(a3 + 9) & 1) == 0)
      {
        v9 = 1;
        *(_QWORD *)(v5 + 80) = 1;
        if ((*(_BYTE *)(a3 + 10) & 1) == 0)
        {
          *(_QWORD *)(v5 + 88) = 1;
          if ((*(_BYTE *)(a3 + 11) & 1) == 0)
          {
            v9 = 1;
            *(_QWORD *)(v5 + 96) = 1;
            if ((*(_BYTE *)(a3 + 12) & 1) == 0)
            {
              v9 = 1;
              *(_QWORD *)(v5 + 104) = 1;
              if ((*(_BYTE *)(a3 + 13) & 1) == 0)
              {
                v9 = 1;
                goto LABEL_46;
              }
              goto LABEL_43;
            }
            goto LABEL_39;
          }
          v9 = 1;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
            goto LABEL_35;
          goto LABEL_62;
        }
        goto LABEL_30;
      }
      goto LABEL_26;
    }
    v9 = 2;
    goto LABEL_21;
  }
  *(_QWORD *)(v5 + 64) = 0;
  if ((*(_BYTE *)(a3 + 8) & 1) != 0)
  {
    sub_1C0AC142C(a3);
    v9 = 1;
    sub_1C07B7730();
    v10 = v14;
LABEL_21:
    v15 = *(_QWORD *)(v10 + 16);
    if (v15 >= *(_QWORD *)(v10 + 24) >> 1)
    {
      sub_1C07B7730();
      v10 = v40;
    }
    *(_QWORD *)(v10 + 16) = v15 + 1;
    v16 = v10 + 16 * v15;
    *(_QWORD *)(v16 + 32) = 0x7463656A627573;
    *(_QWORD *)(v16 + 40) = 0xE700000000000000;
    *(_QWORD *)(v5 + 72) = v9;
    if ((*(_BYTE *)(a3 + 9) & 1) == 0)
    {
LABEL_29:
      *(_QWORD *)(v5 + 80) = v9;
      if ((*(_BYTE *)(a3 + 10) & 1) == 0)
        goto LABEL_33;
      goto LABEL_30;
    }
LABEL_26:
    v18 = *(_QWORD *)(v10 + 16);
    if (v18 >= *(_QWORD *)(v10 + 24) >> 1)
    {
      sub_1C07B7730();
      v10 = v41;
    }
    *(_QWORD *)(v10 + 16) = v18 + 1;
    v19 = v10 + 16 * v18;
    *(_QWORD *)(v19 + 32) = 0x7461636964657270;
    *(_QWORD *)(v19 + 40) = 0xE900000000000065;
    ++v9;
    goto LABEL_29;
  }
  *(_QWORD *)(v5 + 72) = 0;
  if ((*(_BYTE *)(a3 + 9) & 1) != 0)
  {
    sub_1C0AC142C(a3);
    sub_1C07B7730();
    v10 = v17;
    v9 = 0;
    goto LABEL_26;
  }
  *(_QWORD *)(v5 + 80) = 0;
  if ((*(_BYTE *)(a3 + 10) & 1) != 0)
  {
    sub_1C0AC142C(a3);
    sub_1C07B7730();
    v10 = v34;
    v9 = 0;
LABEL_30:
    v20 = *(_QWORD *)(v10 + 16);
    if (v20 >= *(_QWORD *)(v10 + 24) >> 1)
    {
      sub_1C07B7730();
      v10 = v42;
    }
    *(_QWORD *)(v10 + 16) = v20 + 1;
    v21 = v10 + 16 * v20;
    strcpy((char *)(v21 + 32), "relationshipId");
    *(_BYTE *)(v21 + 47) = -18;
    ++v9;
LABEL_33:
    *(_QWORD *)(v5 + 88) = v9;
    if ((*(_BYTE *)(a3 + 11) & 1) == 0)
      goto LABEL_38;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      goto LABEL_62;
    goto LABEL_35;
  }
  *(_QWORD *)(v5 + 88) = 0;
  if ((*(_BYTE *)(a3 + 11) & 1) != 0)
  {
    sub_1C0AC142C(a3);
    v10 = MEMORY[0x1E0DEE9D8];
    v9 = 0;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
LABEL_62:
      sub_1C07B7730();
      v10 = v35;
    }
LABEL_35:
    v22 = *(_QWORD *)(v10 + 16);
    if (v22 >= *(_QWORD *)(v10 + 24) >> 1)
    {
      sub_1C07B7730();
      v10 = v43;
    }
    *(_QWORD *)(v10 + 16) = v22 + 1;
    v23 = v10 + 16 * v22;
    *(_QWORD *)(v23 + 32) = 0xD000000000000015;
    *(_QWORD *)(v23 + 40) = 0x80000001C10DE890;
    ++v9;
LABEL_38:
    *(_QWORD *)(v5 + 96) = v9;
    if ((*(_BYTE *)(a3 + 12) & 1) == 0)
      goto LABEL_42;
    goto LABEL_39;
  }
  *(_QWORD *)(v5 + 96) = 0;
  if ((*(_BYTE *)(a3 + 12) & 1) != 0)
  {
    sub_1C0AC142C(a3);
    sub_1C07B7730();
    v10 = v36;
    v9 = 0;
LABEL_39:
    v24 = *(_QWORD *)(v10 + 16);
    if (v24 >= *(_QWORD *)(v10 + 24) >> 1)
    {
      sub_1C07B7730();
      v10 = v44;
    }
    *(_QWORD *)(v10 + 16) = v24 + 1;
    v25 = v10 + 16 * v24;
    *(_QWORD *)(v25 + 32) = 0x7463656A626FLL;
    *(_QWORD *)(v25 + 40) = 0xE600000000000000;
    ++v9;
LABEL_42:
    *(_QWORD *)(v5 + 104) = v9;
    if ((*(_BYTE *)(a3 + 13) & 1) == 0)
      goto LABEL_46;
    goto LABEL_43;
  }
  *(_QWORD *)(v5 + 104) = 0;
  if ((*(_BYTE *)(a3 + 13) & 1) != 0)
  {
    sub_1C0AC142C(a3);
    sub_1C07B7730();
    v10 = v37;
    v9 = 0;
LABEL_43:
    v26 = *(_QWORD *)(v10 + 16);
    if (v26 >= *(_QWORD *)(v10 + 24) >> 1)
    {
      sub_1C07B7730();
      v10 = v45;
    }
    *(_QWORD *)(v10 + 16) = v26 + 1;
    v27 = v10 + 16 * v26;
    *(_QWORD *)(v27 + 32) = 0x73656372756F73;
    *(_QWORD *)(v27 + 40) = 0xE700000000000000;
    ++v9;
LABEL_46:
    *(_QWORD *)(v5 + 112) = v9;
    if ((*(_BYTE *)(a3 + 14) & 1) == 0)
      goto LABEL_50;
    goto LABEL_47;
  }
  *(_QWORD *)(v5 + 112) = 0;
  v8 = *(_BYTE *)(a3 + 14);
  sub_1C0AC142C(a3);
  if ((v8 & 1) == 0)
  {
    v9 = 0;
    v10 = MEMORY[0x1E0DEE9D8];
    goto LABEL_50;
  }
  sub_1C07B7730();
  v10 = v38;
  v9 = 0;
LABEL_47:
  v28 = *(_QWORD *)(v10 + 16);
  if (v28 >= *(_QWORD *)(v10 + 24) >> 1)
  {
    sub_1C07B7730();
    v10 = v46;
  }
  *(_QWORD *)(v10 + 16) = v28 + 1;
  v29 = v10 + 16 * v28;
  *(_QWORD *)(v29 + 32) = 0x6E656469666E6F63;
  *(_QWORD *)(v29 + 40) = 0xEA00000000006563;
  ++v9;
LABEL_50:
  *(_QWORD *)(v5 + 120) = v9;
  sub_1C0AC13F8(a3);
  if ((*(_BYTE *)(a3 + 15) & 1) != 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C07B7730();
      v10 = v47;
    }
    v31 = *(_QWORD *)(v10 + 16);
    if (v31 >= *(_QWORD *)(v10 + 24) >> 1)
    {
      sub_1C07B7730();
      v10 = v48;
    }
    v30 = (_QWORD *)v5;
    *(_QWORD *)(v10 + 16) = v31 + 1;
    v32 = v10 + 16 * v31;
    *(_QWORD *)(v32 + 32) = 0xD000000000000010;
    *(_QWORD *)(v32 + 40) = 0x80000001C10DE8C0;
  }
  else
  {
    v30 = (_QWORD *)v5;
  }
  sub_1C1070774();
  sub_1C106FC94();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C07ACF80(&qword_1ED762B70);
  sub_1C07E6EDC((unint64_t *)&qword_1ED762430, &qword_1ED762B70, MEMORY[0x1E0DEAF20]);
  sub_1C106FA54();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  sub_1C106FC94();
  sub_1C106FC94();
  v30[18] = 0;
  v30[19] = 0xE000000000000000;
  sub_1C1070774();
  sub_1C106FC94();
  sub_1C106FA54();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  v30[20] = 0;
  v30[21] = 0xE000000000000000;
  return v30;
}

_QWORD *sub_1C0ABB5E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __int128 v11;
  char v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  _OWORD v29[2];
  uint64_t v30;
  _OWORD v31[2];
  uint64_t v32;
  uint64_t v33;

  v5 = v3;
  v8 = sub_1C07ACF80(&qword_1ED7626C0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_OWORD *)(v5 + 40);
  v31[0] = *(_OWORD *)(v5 + 24);
  v31[1] = v11;
  v32 = *(_QWORD *)(v5 + 56);
  v12 = *(_BYTE *)(v5 + 136);
  _s14descr1E7A1E2A9V9RawTripleCMa();
  swift_allocObject();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AC142C((uint64_t)v31);
  v13 = sub_1C0ABAD74(a2, a3, (uint64_t)v31, v12, 0);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C5C8();
  if (v4)
  {
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v33 = sub_1C106C3F4();
    sub_1C07ACF80(&qword_1ED762C90);
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1C107DE20;
    v15 = sub_1C0ABB89C(v14);
    v16 = MEMORY[0x1E0D24A60];
    *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEDC60];
    *(_QWORD *)(v14 + 64) = v16;
    *(_QWORD *)(v14 + 32) = v15;
    v17 = sub_1C0ABBA54(v15);
    v18 = MEMORY[0x1E0DEA968];
    v19 = MEMORY[0x1E0D24968];
    *(_QWORD *)(v14 + 96) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v14 + 104) = v19;
    *(_QWORD *)(v14 + 72) = v17;
    *(_QWORD *)(v14 + 80) = v20;
    v21 = sub_1C0ABBC1C(v17);
    *(_QWORD *)(v14 + 136) = MEMORY[0x1E0DEDC60];
    *(_QWORD *)(v14 + 144) = MEMORY[0x1E0D24A60];
    *(_QWORD *)(v14 + 112) = v21;
    v22 = sub_1C0ABBDD4(v21);
    *(_QWORD *)(v14 + 176) = v18;
    *(_QWORD *)(v14 + 184) = v19;
    *(_QWORD *)(v14 + 152) = v22;
    *(_QWORD *)(v14 + 160) = v23;
    v24 = sub_1C0ABBF9C(v22);
    *(_QWORD *)(v14 + 216) = v18;
    *(_QWORD *)(v14 + 224) = v19;
    *(_QWORD *)(v14 + 192) = v24;
    *(_QWORD *)(v14 + 200) = v25;
    sub_1C106C010();
    v26 = sub_1C106C040();
    sub_1C07B2D8C((uint64_t)v10, 0, 1, v26);
    v30 = 0;
    memset(v29, 0, sizeof(v29));
    v28 = sub_1C106C3E8();
    swift_release();
    sub_1C0784B6C((uint64_t)v29, (uint64_t *)&unk_1ED7626A0);
    sub_1C0784B6C((uint64_t)v10, &qword_1ED7626C0);
    v13[2] = v28;
    swift_release();
    if (!v13[2])
    {
      swift_release();
      return 0;
    }
  }
  return v13;
}

uint64_t sub_1C0ABB89C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  sqlite3_stmt *v4;
  uint64_t result;
  uint64_t v6;

  v2 = 0;
  if (*(_BYTE *)(v1 + 32) != 1)
    return v2;
  if (!*(_QWORD *)(v1 + 16))
    goto LABEL_13;
  v3 = *(_QWORD *)(v1 + 64);
  swift_retain();
  sub_1C106C370();
  a1 = sub_1C106C3A0();
  v4 = (sqlite3_stmt *)a1;
  if (!a1)
  {
    sub_1C106C364();
    swift_release();
    return v6;
  }
  if (v3 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v3 > 0x7FFFFFFF)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  MEMORY[0x1E0C80A78](a1);
  a1 = sqlite3_column_type(v4, v3);
  if ((_DWORD)a1 != 5)
  {
    v2 = sub_1C1070DC8();
    swift_release();
    return v2;
  }
LABEL_14:
  MEMORY[0x1E0C80A78](a1);
  sub_1C106C1C0();
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1C0ABBA54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  sqlite3_stmt *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  if (*(_BYTE *)(v1 + 33) != 1)
    return 0;
  if (!*(_QWORD *)(v1 + 16))
    goto LABEL_14;
  v2 = *(_QWORD *)(v1 + 72);
  swift_retain();
  sub_1C106C370();
  a1 = sub_1C106C3A0();
  v3 = (sqlite3_stmt *)a1;
  if (!a1)
  {
    sub_1C106C364();
    swift_release();
    return v6;
  }
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  MEMORY[0x1E0C80A78](a1);
  a1 = sqlite3_column_type(v3, v2);
  if ((_DWORD)a1 != 5)
  {
    v4 = sub_1C106FB98();
    swift_release();
    return v4;
  }
LABEL_15:
  MEMORY[0x1E0C80A78](a1);
  sub_1C106C1C0();
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1C0ABBC1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  sqlite3_stmt *v4;
  uint64_t result;
  uint64_t v6;

  v2 = 0;
  if (*(_BYTE *)(v1 + 34) != 1)
    return v2;
  if (!*(_QWORD *)(v1 + 16))
    goto LABEL_13;
  v3 = *(_QWORD *)(v1 + 80);
  swift_retain();
  sub_1C106C370();
  a1 = sub_1C106C3A0();
  v4 = (sqlite3_stmt *)a1;
  if (!a1)
  {
    sub_1C106C364();
    swift_release();
    return v6;
  }
  if (v3 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v3 > 0x7FFFFFFF)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  MEMORY[0x1E0C80A78](a1);
  a1 = sqlite3_column_type(v4, v3);
  if ((_DWORD)a1 != 5)
  {
    v2 = sub_1C1070DC8();
    swift_release();
    return v2;
  }
LABEL_14:
  MEMORY[0x1E0C80A78](a1);
  sub_1C106C1C0();
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1C0ABBDD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  sqlite3_stmt *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  if (*(_BYTE *)(v1 + 35) != 1)
    return 0;
  if (!*(_QWORD *)(v1 + 16))
    goto LABEL_14;
  v2 = *(_QWORD *)(v1 + 88);
  swift_retain();
  sub_1C106C370();
  a1 = sub_1C106C3A0();
  v3 = (sqlite3_stmt *)a1;
  if (!a1)
  {
    sub_1C106C364();
    swift_release();
    return v6;
  }
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  MEMORY[0x1E0C80A78](a1);
  a1 = sqlite3_column_type(v3, v2);
  if ((_DWORD)a1 != 5)
  {
    v4 = sub_1C106FB98();
    swift_release();
    return v4;
  }
LABEL_15:
  MEMORY[0x1E0C80A78](a1);
  sub_1C106C1C0();
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1C0ABBF9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  sqlite3_stmt *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  if (*(_BYTE *)(v1 + 36) != 1)
    return 0;
  if (!*(_QWORD *)(v1 + 16))
    goto LABEL_14;
  v2 = *(_QWORD *)(v1 + 96);
  swift_retain();
  sub_1C106C370();
  a1 = sub_1C106C3A0();
  v3 = (sqlite3_stmt *)a1;
  if (!a1)
  {
    sub_1C106C364();
    swift_release();
    return v6;
  }
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  MEMORY[0x1E0C80A78](a1);
  a1 = sqlite3_column_type(v3, v2);
  if ((_DWORD)a1 != 5)
  {
    v4 = sub_1C106FB98();
    swift_release();
    return v4;
  }
LABEL_15:
  MEMORY[0x1E0C80A78](a1);
  sub_1C106C1C0();
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1C0ABC164()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C0ABC1AC()
{
  sub_1C0ABC164();
  return swift_deallocClassInstance();
}

uint64_t _s14descr1E7A1E2A9V9RawTripleCMa()
{
  return objc_opt_self();
}

uint64_t sub_1C0ABC1E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  sqlite3_stmt *v4;
  uint64_t result;
  uint64_t v6;

  v2 = 0;
  if (*(_BYTE *)(v1 + 37) != 1)
    return v2;
  if (!*(_QWORD *)(v1 + 16))
    goto LABEL_13;
  v3 = *(_QWORD *)(v1 + 104);
  swift_retain();
  sub_1C106C370();
  a1 = sub_1C106C3A0();
  v4 = (sqlite3_stmt *)a1;
  if (!a1)
  {
    sub_1C106C364();
    swift_release();
    return v6;
  }
  if (v3 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v3 > 0x7FFFFFFF)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  MEMORY[0x1E0C80A78](a1);
  a1 = sqlite3_column_type(v4, v3);
  if ((_DWORD)a1 != 5)
  {
    v2 = sub_1C1070DC8();
    swift_release();
    return v2;
  }
LABEL_14:
  MEMORY[0x1E0C80A78](a1);
  sub_1C106C1C0();
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1C0ABC3A0(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  sqlite3_stmt *v3;

  if (*(_BYTE *)(v1 + 38) == 1)
  {
    if (!*(_QWORD *)(v1 + 16))
      goto LABEL_12;
    v2 = *(_QWORD *)(v1 + 112);
    swift_retain();
    sub_1C106C370();
    result = sub_1C106C3A0();
    v3 = (sqlite3_stmt *)result;
    if (result)
    {
      if (v2 < (uint64_t)0xFFFFFFFF80000000)
      {
        __break(1u);
      }
      else if (v2 <= 0x7FFFFFFF)
      {
        MEMORY[0x1E0C80A78](result);
        result = sqlite3_column_type(v3, v2);
        if ((_DWORD)result != 5)
        {
          sub_1C1070198();
          return swift_release();
        }
        goto LABEL_13;
      }
      __break(1u);
LABEL_12:
      __break(1u);
LABEL_13:
      MEMORY[0x1E0C80A78](result);
      sub_1C106C1C0();
      result = swift_unexpectedError();
      __break(1u);
      return result;
    }
    sub_1C106C364();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C0ABC560(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  sqlite3_stmt *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  if (*(_BYTE *)(v1 + 39) != 1)
    return 23899;
  if (!*(_QWORD *)(v1 + 16))
    goto LABEL_14;
  v2 = *(_QWORD *)(v1 + 120);
  swift_retain();
  sub_1C106C370();
  a1 = sub_1C106C3A0();
  v3 = (sqlite3_stmt *)a1;
  if (!a1)
  {
    sub_1C106C364();
    swift_release();
    return v6;
  }
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  MEMORY[0x1E0C80A78](a1);
  a1 = sqlite3_column_type(v3, v2);
  if ((_DWORD)a1 != 5)
  {
    v4 = sub_1C106FB98();
    swift_release();
    return v4;
  }
LABEL_15:
  MEMORY[0x1E0C80A78](a1);
  sub_1C106C1C0();
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1C0ABC728(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  sqlite3_stmt *v3;

  if (*(_BYTE *)(v1 + 40) == 1)
  {
    if (!*(_QWORD *)(v1 + 16))
    {
      __break(1u);
LABEL_9:
      MEMORY[0x1E0C80A78](result);
      sub_1C106C1C0();
      result = swift_unexpectedError();
      __break(1u);
      return result;
    }
    swift_retain();
    sub_1C106C370();
    v2 = sub_1C106C3A0();
    if (v2)
    {
      MEMORY[0x1E0C80A78](v2);
      result = sqlite3_column_type(v3, 0);
      if ((_DWORD)result != 5)
      {
        sub_1C1070198();
        return swift_release();
      }
      goto LABEL_9;
    }
    sub_1C106C364();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C0ABC8C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;

  v3 = *(_QWORD *)(v1 + 24);
  v37 = *(_BYTE *)(v1 + 33);
  v38 = *(_BYTE *)(v1 + 32);
  v35 = *(_BYTE *)(v1 + 35);
  v36 = *(_BYTE *)(v1 + 34);
  v33 = *(_BYTE *)(v1 + 37);
  v34 = *(_BYTE *)(v1 + 36);
  v31 = *(_BYTE *)(v1 + 39);
  v32 = *(_BYTE *)(v1 + 38);
  v30 = *(_BYTE *)(v1 + 40);
  v4 = *(_QWORD *)(v1 + 56);
  v29 = *(_QWORD *)(v1 + 48);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v5 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v28 = sub_1C0ABB89C(v5);
  v6 = sub_1C0ABBA54(v28);
  v26 = v7;
  v27 = v6;
  v25 = sub_1C0ABBC1C(v6);
  v24 = sub_1C0ABBDD4(v25);
  v9 = v8;
  v10 = sub_1C0ABBF9C(v24);
  v12 = v11;
  v13 = sub_1C0ABC1E8(v10);
  v14 = sub_1C0ABC3A0(v13);
  v16 = v15;
  v17 = sub_1C0ABC560(v14);
  v19 = v18;
  result = sub_1C0ABC728(v17);
  v21 = *(_BYTE *)(v1 + 136);
  v22 = *(_BYTE *)(v1 + 137);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v38;
  *(_BYTE *)(a1 + 9) = v37;
  *(_BYTE *)(a1 + 10) = v36;
  *(_BYTE *)(a1 + 11) = v35;
  *(_BYTE *)(a1 + 12) = v34;
  *(_BYTE *)(a1 + 13) = v33;
  *(_BYTE *)(a1 + 14) = v32;
  *(_BYTE *)(a1 + 15) = v31;
  *(_BYTE *)(a1 + 16) = v30;
  *(_QWORD *)(a1 + 24) = v29;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v28;
  *(_QWORD *)(a1 + 48) = v27;
  *(_QWORD *)(a1 + 56) = v26;
  *(_QWORD *)(a1 + 64) = v25;
  *(_QWORD *)(a1 + 72) = v24;
  *(_QWORD *)(a1 + 80) = v9;
  *(_QWORD *)(a1 + 88) = v10;
  *(_QWORD *)(a1 + 96) = v12;
  *(_QWORD *)(a1 + 104) = v13;
  *(_QWORD *)(a1 + 112) = v16;
  *(_QWORD *)(a1 + 120) = v17;
  *(_QWORD *)(a1 + 128) = v19;
  *(_QWORD *)(a1 + 136) = v23;
  *(_BYTE *)(a1 + 144) = v21;
  *(_BYTE *)(a1 + 145) = v22;
  return result;
}

uint64_t sub_1C0ABCA4C(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  _OWORD v25[2];
  uint64_t v26;
  _BYTE v27[40];
  _BYTE v28[40];

  v9 = v7;
  v16 = sub_1C07ACF80(&qword_1ED7626C0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0D759EC((uint64_t)&unk_1E7A040F8, (uint64_t)v27);
  sub_1C0ABCCCC(v27, (uint64_t)v28);
  sub_1C0AC13F8(a5);
  sub_1C0AC13F8((uint64_t)v27);
  _s14descr1E7A1E2A9V9RawTripleCMa();
  swift_allocObject();
  *(_QWORD *)(v9 + 24) = sub_1C0ABAD74(a3, a4, (uint64_t)v28, a6, a7);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C5C8();
  swift_bridgeObjectRelease();
  if (v8)
  {
    swift_release();
    swift_release();
    _s14descr1E7A1E2A9V15RawTripleCursorCMa();
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_1C106C3F4();
    sub_1C07ACF80(&qword_1ED762C90);
    v19 = swift_allocObject();
    v20 = MEMORY[0x1E0DEB070];
    *(_OWORD *)(v19 + 16) = xmmword_1C1079220;
    v21 = MEMORY[0x1E0D249D0];
    *(_QWORD *)(v19 + 56) = v20;
    *(_QWORD *)(v19 + 64) = v21;
    *(double *)(v19 + 32) = a1;
    sub_1C106C010();
    v22 = sub_1C106C040();
    sub_1C07B2D8C((uint64_t)v18, 0, 1, v22);
    v26 = 0;
    memset(v25, 0, sizeof(v25));
    v24 = sub_1C106C388();
    swift_release();
    swift_release();
    sub_1C0784B6C((uint64_t)v25, (uint64_t *)&unk_1ED7626A0);
    sub_1C0784B6C((uint64_t)v18, &qword_1ED7626C0);
    *(_QWORD *)(v9 + 16) = v24;
    *(_BYTE *)(v9 + 32) = 1;
  }
  return v9;
}

double sub_1C0ABCCCC@<D0>(_BYTE *a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  double result;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _OWORD v36[2];
  uint64_t v37;

  if ((v2[8] & 1) != 0 || (a1[8] & 1) != 0)
  {
    sub_1C07EC924();
    v5 = v6;
    if (*(_QWORD *)(v6 + 16) >= *(_QWORD *)(v6 + 24) >> 1)
    {
      sub_1C07A0D88();
      v5 = v19;
    }
    sub_1C07A3B4C();
    *(_BYTE *)(v7 + 32) = 0;
  }
  else
  {
    v5 = MEMORY[0x1E0DEE9D8];
  }
  if ((v2[9] & 1) != 0 || (a1[9] & 1) != 0)
  {
    if ((sub_1C07815F4() & 1) == 0)
    {
      sub_1C07A6D38();
      v5 = v20;
    }
    sub_1C0798B08();
    if (v8)
    {
      sub_1C07A0D88();
      v5 = v21;
    }
    sub_1C07A3B4C();
    *(_BYTE *)(v9 + 32) = 1;
  }
  if ((v2[10] & 1) != 0 || (a1[10] & 1) != 0)
  {
    if ((sub_1C07815F4() & 1) == 0)
    {
      sub_1C07A6D38();
      v5 = v22;
    }
    sub_1C0798B08();
    if (v8)
    {
      sub_1C07A0D88();
      v5 = v23;
    }
    sub_1C07A3B4C();
    *(_BYTE *)(v10 + 32) = 2;
  }
  if ((v2[11] & 1) != 0 || (a1[11] & 1) != 0)
  {
    if ((sub_1C07815F4() & 1) == 0)
    {
      sub_1C07A6D38();
      v5 = v24;
    }
    sub_1C0798B08();
    if (v8)
    {
      sub_1C07A0D88();
      v5 = v25;
    }
    sub_1C07A3B4C();
    *(_BYTE *)(v11 + 32) = 3;
  }
  if ((v2[12] & 1) != 0 || (a1[12] & 1) != 0)
  {
    if ((sub_1C07815F4() & 1) == 0)
    {
      sub_1C07A6D38();
      v5 = v26;
    }
    sub_1C0798B08();
    if (v8)
    {
      sub_1C07A0D88();
      v5 = v27;
    }
    sub_1C07A3B4C();
    *(_BYTE *)(v12 + 32) = 4;
  }
  if ((v2[13] & 1) != 0 || (a1[13] & 1) != 0)
  {
    if ((sub_1C07815F4() & 1) == 0)
    {
      sub_1C07A6D38();
      v5 = v28;
    }
    sub_1C0798B08();
    if (v8)
    {
      sub_1C07A0D88();
      v5 = v29;
    }
    sub_1C07A3B4C();
    *(_BYTE *)(v13 + 32) = 5;
  }
  if ((v2[14] & 1) != 0 || (a1[14] & 1) != 0)
  {
    if ((sub_1C07815F4() & 1) == 0)
    {
      sub_1C07A6D38();
      v5 = v30;
    }
    sub_1C0798B08();
    if (v8)
    {
      sub_1C07A0D88();
      v5 = v31;
    }
    sub_1C07A3B4C();
    *(_BYTE *)(v14 + 32) = 6;
  }
  if ((v2[15] & 1) != 0 || (a1[15] & 1) != 0)
  {
    if ((sub_1C07815F4() & 1) == 0)
    {
      sub_1C07A6D38();
      v5 = v32;
    }
    sub_1C0798B08();
    if (v8)
    {
      sub_1C07A0D88();
      v5 = v33;
    }
    sub_1C07A3B4C();
    *(_BYTE *)(v15 + 32) = 7;
  }
  if ((v2[16] & 1) != 0 || (a1[16] & 1) != 0)
  {
    if ((sub_1C07815F4() & 1) == 0)
    {
      sub_1C07A6D38();
      v5 = v34;
    }
    v16 = *(_QWORD *)(v5 + 16);
    if (v16 >= *(_QWORD *)(v5 + 24) >> 1)
    {
      sub_1C07EC924();
      v5 = v35;
    }
    *(_QWORD *)(v5 + 16) = v16 + 1;
    *(_BYTE *)(v5 + v16 + 32) = 8;
  }
  sub_1C0D759EC(v5, (uint64_t)v36);
  result = *(double *)v36;
  v18 = v36[1];
  *(_OWORD *)a2 = v36[0];
  *(_OWORD *)(a2 + 16) = v18;
  *(_QWORD *)(a2 + 32) = v37;
  return result;
}

uint64_t sub_1C0ABCFC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (*(_BYTE *)(v0 + 32) == 1)
  {
    v2 = *(_QWORD *)(v0 + 24);
    swift_retain();
    v3 = sub_1C0ABD054();
    if (v1)
      return swift_release();
    *(_QWORD *)(v2 + 16) = v3;
    swift_release();
    swift_release();
  }
  *(_BYTE *)(v0 + 32) = 1;
  if (*(_QWORD *)(*(_QWORD *)(v0 + 24) + 16))
    return swift_retain();
  else
    return 0;
}

uint64_t sub_1C0ABD054()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  sqlite3_stmt *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  char v11;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = sub_1C09D674C();
  if (!v1)
  {
    v4 = v3;
    if (v3)
    {
      swift_retain();
      sub_1C106C370();
      v5 = (sqlite3_stmt *)sub_1C106C3A0();
      if (v5)
      {
        if (sqlite3_column_type(v5, 0) != 5)
        {
          sub_1C1070198();
          v2 = v4;
LABEL_13:
          swift_release();
          return v2;
        }
      }
      else
      {
        sub_1C106C3AC();
        v2 = v4;
        if ((v11 & 1) == 0)
          goto LABEL_13;
      }
      if (qword_1ED762AF0 != -1)
        swift_once();
      v6 = sub_1C106F544();
      sub_1C079E000(v6, (uint64_t)qword_1ED78D9E0);
      v7 = sub_1C106F538();
      v8 = sub_1C1070390();
      if (os_log_type_enabled(v7, v8))
      {
        v9 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v9 = 0;
        _os_log_impl(&dword_1C0771000, v7, v8, "ViewUpdate: RawTripleCursor: Unexpectently found row with NULL values", v9, 2u);
        MEMORY[0x1C3BA8270](v9, -1, -1);
      }

      swift_release();
      v2 = 0;
      goto LABEL_13;
    }
    return 0;
  }
  return v2;
}

uint64_t sub_1C0ABD22C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (*(_BYTE *)(v0 + 32) == 1)
  {
    v2 = *(_QWORD *)(v0 + 24);
    swift_retain();
    v3 = sub_1C0ABD054();
    if (v1)
      return swift_release();
    *(_QWORD *)(v2 + 16) = v3;
    swift_release();
    swift_release();
    *(_BYTE *)(v0 + 32) = 0;
  }
  if (*(_QWORD *)(*(_QWORD *)(v0 + 24) + 16))
    return swift_retain();
  else
    return 0;
}

uint64_t sub_1C0ABD2BC()
{
  sub_1C0AC07E0((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
  return swift_deallocClassInstance();
}

uint64_t _s14descr1E7A1E2A9V15RawTripleCursorCMa()
{
  return objc_opt_self();
}

uint64_t sub_1C0ABD300(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v3 = sub_1C07ACF80(&qword_1ED7618D0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C106D1F8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C106D084();
    if (sub_1C07B2D80((uint64_t)v5, 1, v6) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
      v10 = sub_1C106D1C8();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      return v10;
    }
    sub_1C0784B6C((uint64_t)v5, &qword_1ED7618D0);
  }
  return 0;
}

uint64_t sub_1C0ABD42C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  unsigned __int8 v11;
  uint64_t v12;
  _BYTE v13[16];
  uint64_t v14;
  uint64_t v15;

  v3 = sub_1C07ACF80(&qword_1ED7618D0);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_1C106D1F8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!a2)
    return 0;
  v15 = MEMORY[0x1E0DEE9E8];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106D084();
  if (sub_1C07B2D80((uint64_t)v5, 1, v6) == 1)
  {
    sub_1C0784B6C((uint64_t)v5, &qword_1ED7618D0);
    return MEMORY[0x1E0DEE9E8];
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 32))(v9, v5, v6);
    v11 = sub_1C106D1C8();
    sub_1C07AF3F4(&v14, v11);
    v12 = sub_1C106CEF8();
    sub_1C0ABAAC8(v12);
    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
    return v15;
  }
}

void sub_1C0ABD598(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __int128 v8;
  uint64_t v9;
  unint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  unint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD v25[2];
  __int128 v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;

  v2 = sub_1C07ACF80(&qword_1ED7623F8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Source();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    SourceSet.init(arrayLiteral:)(&v29, MEMORY[0x1E0DEE9D8]);
    v9 = *(_QWORD *)(a1 + 16);
    if (!v9)
    {
LABEL_20:
      swift_bridgeObjectRelease();
      return;
    }
    v25[0] = a1;
    v10 = (unint64_t *)(a1 + 40);
    *(_QWORD *)&v8 = 136315138;
    v26 = v8;
    v25[1] = MEMORY[0x1E0DEE9B8] + 8;
    v27 = v7;
    while (1)
    {
      v11 = *(v10 - 1);
      v12 = *v10;
      swift_bridgeObjectRetain_n();
      Source.init(rawValue:)(v11, v12, (uint64_t)v4);
      if (sub_1C07B2D80((uint64_t)v4, 1, v5) == 1)
      {
        sub_1C0784B6C((uint64_t)v4, &qword_1ED7623F8);
        if (qword_1ED762AF0 != -1)
          swift_once();
        v13 = sub_1C106F544();
        sub_1C079E000(v13, (uint64_t)qword_1ED78D9E0);
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v14 = sub_1C106F538();
        v15 = sub_1C1070384();
        if (os_log_type_enabled(v14, v15))
        {
          v16 = v5;
          v17 = swift_slowAlloc();
          v18 = swift_slowAlloc();
          v28 = v18;
          *(_DWORD *)v17 = v26;
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          *(_QWORD *)(v17 + 4) = sub_1C0788DAC(v11, v12, &v28);
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1C0771000, v14, v15, "GraphStore: ResolvedKnowledgeGraphFilter: Invalid source %s", (uint8_t *)v17, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C3BA8270](v18, -1, -1);
          v19 = v17;
          v5 = v16;
          v7 = v27;
          MEMORY[0x1C3BA8270](v19, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1C0838FBC((uint64_t)v4, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Source);
        v20 = *((_QWORD *)v7 + 2);
        v21 = __OFSUB__(v20, 1);
        v22 = v20 - 1;
        if (v21)
        {
          __break(1u);
          return;
        }
        v23 = v22 > 0x40;
        if (v22 >= 0x40)
          v24 = 0;
        else
          v24 = 1 << v22;
        if (v23)
          v24 = 0;
        if ((v29 & v24) == 0)
          v29 |= v24;
        sub_1C07B1F90((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Source);
      }
      v10 += 2;
      if (!--v9)
        goto LABEL_20;
    }
  }
}

uint64_t sub_1C0ABD8B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v4 = sub_1C07ACF80(qword_1ED75E510);
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1C07ACF80(&qword_1ED75E4B8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(a1 + 16) & 1) != 0)
  {
    *(_QWORD *)a2 = 0;
    *(_BYTE *)(a2 + 8) = 1;
    v9 = sub_1C0ABD42C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  }
  else
  {
    v8 = sub_1C0ABD300(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
    v9 = 0;
    *(_QWORD *)a2 = v8;
    *(_BYTE *)(a2 + 8) = v10 & 1;
  }
  *(_QWORD *)(a2 + 16) = v9;
  v11 = *(_QWORD *)(a1 + 24);
  if (v11)
  {
    v12 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0898D28(v12);
  }
  *(_QWORD *)(a2 + 24) = v11;
  sub_1C0ABD598(*(_QWORD *)(a1 + 32));
  *(_QWORD *)(a2 + 32) = v13;
  *(_BYTE *)(a2 + 40) = v14 & 1;
  if (*(_QWORD *)(a1 + 48))
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0AC12B0(a1);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C106CBB0();
    swift_bridgeObjectRelease();
    v17 = sub_1C07ACF80(&qword_1ED75E930);
    sub_1C07B2D8C((uint64_t)v7, 0, 1, v17);
    v18 = _s14descr1E7A1E2A9V28ResolvedKnowledgeGraphFilterVMa();
    return sub_1C0AC1300((uint64_t)v7, a2 + *(int *)(v18 + 32));
  }
  else
  {
    sub_1C0AC12B0(a1);
    v15 = a2 + *(int *)(_s14descr1E7A1E2A9V28ResolvedKnowledgeGraphFilterVMa() + 32);
    v16 = sub_1C07ACF80(&qword_1ED75E930);
    return sub_1C07B2D8C(v15, 1, 1, v16);
  }
}

_QWORD *sub_1C0ABDD00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;
  _OWORD v20[3];
  uint64_t v21;

  v4 = v3;
  v8 = _s14descr1E7A1E2A9V28ResolvedKnowledgeGraphFilterVMa();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4[2] = a1;
  v4[4] = a3;
  v12 = *(_QWORD *)(a2 + 16);
  v13 = MEMORY[0x1E0DEE9D8];
  if (v12)
  {
    v18 = a1;
    v19 = MEMORY[0x1E0DEE9D8];
    swift_retain();
    sub_1C09D4768();
    v13 = v19;
    v14 = a2 + 32;
    do
    {
      v15 = *(_OWORD *)(v14 + 16);
      v20[0] = *(_OWORD *)v14;
      v20[1] = v15;
      v20[2] = *(_OWORD *)(v14 + 32);
      v21 = *(_QWORD *)(v14 + 48);
      sub_1C0AC1260((uint64_t)v20);
      sub_1C0ABD8B8((uint64_t)v20, (uint64_t)v11);
      v19 = v13;
      v16 = *(_QWORD *)(v13 + 16);
      if (v16 >= *(_QWORD *)(v13 + 24) >> 1)
      {
        sub_1C09D4768();
        v13 = v19;
      }
      *(_QWORD *)(v13 + 16) = v16 + 1;
      sub_1C0838FBC((uint64_t)v11, v13+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v16, (uint64_t (*)(_QWORD))_s14descr1E7A1E2A9V28ResolvedKnowledgeGraphFilterVMa);
      v14 += 56;
      --v12;
    }
    while (v12);
    swift_release();
  }
  swift_bridgeObjectRelease();
  v4[3] = v13;
  return v4;
}

uint64_t sub_1C0ABDE7C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t a5, double *a6, double a7)
{
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  sqlite3_stmt *v42;
  uint64_t v43;
  double v44;
  double v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t result;
  uint64_t v51;
  uint64_t *v52;
  double *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  double v61;
  unint64_t v62;

  v58 = a3;
  v53 = a6;
  v54 = a5;
  v52 = a4;
  v57 = a1;
  v9 = 0;
  v10 = 0;
  v62 = MEMORY[0x1E0DEE9D8];
  v11 = a2 + 56;
  v55 = 0x80000001C10FB120;
  v56 = 0x80000001C10FB140;
  do
  {
    LODWORD(v60) = v9;
    if (*(_QWORD *)(a2 + 16))
    {
      v12 = *((unsigned __int8 *)&unk_1E7A04120 + v10 + 32);
      sub_1C1070DF8();
      v13 = v12 ? 0x617247746E657665 : 0x7247656C62617473;
      v14 = v12 ? 0xEA00000000006870 : 0xEB00000000687061;
      sub_1C106FC28();
      swift_bridgeObjectRelease();
      v15 = sub_1C1070E4C();
      v16 = -1 << *(_BYTE *)(a2 + 32);
      v17 = v15 & ~v16;
      if (((*(_QWORD *)(v11 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) != 0)
      {
        v18 = ~v16;
        while (1)
        {
          v19 = *(_BYTE *)(*(_QWORD *)(a2 + 48) + v17) ? 0x617247746E657665 : 0x7247656C62617473;
          v20 = *(_BYTE *)(*(_QWORD *)(a2 + 48) + v17) ? 0xEA00000000006870 : 0xEB00000000687061;
          if (v19 == v13 && v20 == v14)
            break;
          v22 = sub_1C1070CB4();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v22 & 1) != 0)
            goto LABEL_25;
          v17 = (v17 + 1) & v18;
          if (((*(_QWORD *)(v11 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
            goto LABEL_37;
        }
        swift_bridgeObjectRelease_n();
LABEL_25:
        v23 = v58[2];
        _s14descr1E7A1E2A9V15RawTripleCursorCMa();
        swift_allocObject();
        if ((v12 & 1) != 0)
        {
          sub_1C0AC142C(v57);
          v24 = swift_retain();
          sub_1C0ABCA4C(a7, v24, 0x72675F746E657665, 0xEB00000000687061, v57, 0, 0);
          if (v59)
            goto LABEL_73;
          MEMORY[0x1C3BA6800]();
          if (*(_QWORD *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1C106FF58();
          sub_1C106FFC4();
          sub_1C106FF28();
          swift_allocObject();
          sub_1C0AC142C(v57);
          v25 = swift_retain();
          v26 = 0xD000000000000013;
          v27 = v56;
          v28 = v57;
          v29 = a7;
          v30 = 0;
        }
        else
        {
          swift_retain();
          sub_1C0AC142C(v57);
          sub_1C0ABCA4C(a7, v23, 0x675F656C62617473, 0xEC00000068706172, v57, 1, 0);
          if (v59)
          {
LABEL_73:
            swift_release();
            return swift_bridgeObjectRelease();
          }
          MEMORY[0x1C3BA6800]();
          if (*(_QWORD *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1C106FF58();
          sub_1C106FFC4();
          sub_1C106FF28();
          swift_allocObject();
          swift_retain();
          sub_1C0AC142C(v57);
          v26 = 0xD000000000000014;
          v25 = v23;
          v27 = v55;
          v28 = v57;
          v29 = a7;
          v30 = 1;
        }
        sub_1C0ABCA4C(v29, v25, v26, v27, v28, v30, 1);
        v59 = 0;
        MEMORY[0x1C3BA6800]();
        if (*(_QWORD *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1C106FF58();
        sub_1C106FFC4();
        sub_1C106FF28();
      }
    }
LABEL_37:
    v9 = 1;
    v10 = 1u;
  }
  while ((v60 & 1) == 0);
  v31 = v62;
  v56 = v62 >> 62;
  if (v62 >> 62)
    goto LABEL_78;
  v32 = *(_QWORD *)((v62 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
LABEL_40:
  v33 = v59;
  if (!v32)
    goto LABEL_69;
  v34 = v31 & 0xFFFFFFFFFFFFFF8;
  v55 = v31 & 0xFFFFFFFFFFFFFF8;
  if (v31 < 0)
    v34 = v31;
  v51 = v34;
  while (2)
  {
    v60 = 0;
    v35 = INFINITY;
    v36 = 4;
    v57 = v32;
    do
    {
      if ((v31 & 0xC000000000000001) != 0)
      {
        v37 = MEMORY[0x1C3BA70DC](v36 - 4, v31);
      }
      else
      {
        v37 = *(_QWORD *)(v31 + 8 * v36);
        swift_retain();
      }
      v38 = v36 - 3;
      if (__OFADD__(v36 - 4, 1))
      {
        __break(1u);
LABEL_78:
        swift_bridgeObjectRetain_n();
        v32 = sub_1C10709B4();
        swift_bridgeObjectRelease();
        goto LABEL_40;
      }
      v39 = sub_1C0ABD22C();
      if (v33)
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
LABEL_72:
        swift_release();
        return swift_bridgeObjectRelease_n();
      }
      if (v39)
      {
        v40 = *(_QWORD *)(v39 + 16);
        if (v40)
        {
          swift_retain();
          sub_1C106C370();
          v41 = sub_1C106C3A0();
          if (v41)
          {
            v58 = &v51;
            v59 = 0;
            MEMORY[0x1E0C80A78](v41);
            *(&v51 - 2) = v40;
            *(&v51 - 1) = 0;
            v43 = sqlite3_column_type(v42, 0);
            if ((_DWORD)v43 == 5)
            {
              MEMORY[0x1E0C80A78](v43);
              *(&v51 - 2) = (uint64_t)sub_1C0AACDF8;
              *(&v51 - 1) = (uint64_t)(&v51 - 4);
              sub_1C106C1C0();
              result = swift_unexpectedError();
              __break(1u);
              return result;
            }
            sub_1C1070198();
            v45 = v44;
            swift_release();
            swift_release();
            v61 = v45;
            v33 = v59;
          }
          else
          {
            sub_1C106C364();
            swift_release();
            swift_release();
          }
          v32 = v57;
          v46 = v61;
          if (v61 < v35)
          {
            swift_release();
            v35 = v46;
            v60 = v37;
            goto LABEL_60;
          }
        }
        else
        {
          swift_release();
        }
      }
      swift_release();
LABEL_60:
      ++v36;
    }
    while (v38 != v32);
    swift_bridgeObjectRelease();
    if (!v60)
    {
      swift_bridgeObjectRelease();
      break;
    }
    swift_retain();
    v47 = sub_1C0ABCFC0();
    if (v33)
    {
      swift_release_n();
      goto LABEL_72;
    }
    v48 = v47;
    swift_bridgeObjectRelease();
    swift_release_n();
    if (v48)
    {
      v49 = sub_1C0ABF5B0(v48, v52, v54, v53);
      swift_release();
      if ((v49 & 1) != 0)
      {
        if (v56)
        {
          swift_bridgeObjectRetain_n();
          v32 = sub_1C10709B4();
          swift_bridgeObjectRelease();
          if (v32)
            continue;
        }
        else
        {
          v32 = *(_QWORD *)(v55 + 16);
          swift_bridgeObjectRetain_n();
          if (v32)
            continue;
        }
LABEL_69:
        swift_bridgeObjectRelease_n();
      }
    }
    break;
  }
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0ABE6BC(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t *a4, uint64_t a5, double *a6, uint64_t *a7, _QWORD *a8, double a9, double a10)
{
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  sqlite3_stmt *v46;
  uint64_t v47;
  double v48;
  double v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t result;
  _QWORD v55[2];
  uint64_t *v56;
  double *v57;
  uint64_t *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  double v67;
  unint64_t v68;

  v58 = a7;
  v59 = a8;
  v57 = a6;
  v60 = a5;
  v56 = a4;
  v63 = a1;
  v64 = a3;
  v13 = 0;
  v14 = 0;
  v68 = MEMORY[0x1E0DEE9D8];
  v15 = a2 + 56;
  v61 = 0x80000001C10FB120;
  v62 = 0x80000001C10FB140;
  do
  {
    LODWORD(v66) = v13;
    if (*(_QWORD *)(a2 + 16))
    {
      v16 = *((unsigned __int8 *)&unk_1E7A04148 + v14 + 32);
      sub_1C1070DF8();
      v17 = v16 ? 0x617247746E657665 : 0x7247656C62617473;
      v18 = v16 ? 0xEA00000000006870 : 0xEB00000000687061;
      sub_1C106FC28();
      swift_bridgeObjectRelease();
      v19 = sub_1C1070E4C();
      v20 = -1 << *(_BYTE *)(a2 + 32);
      v21 = v19 & ~v20;
      if (((*(_QWORD *)(v15 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
      {
        v22 = ~v20;
        while (1)
        {
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + 48) + v21) ? 0x617247746E657665 : 0x7247656C62617473;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + 48) + v21) ? 0xEA00000000006870 : 0xEB00000000687061;
          if (v23 == v17 && v24 == v18)
            break;
          v26 = sub_1C1070CB4();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v26 & 1) != 0)
            goto LABEL_25;
          v21 = (v21 + 1) & v22;
          if (((*(_QWORD *)(v15 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
            goto LABEL_37;
        }
        swift_bridgeObjectRelease_n();
LABEL_25:
        v27 = v64[2];
        _s14descr1E7A1E2A9V15RawTripleCursorCMa();
        swift_allocObject();
        if ((v16 & 1) != 0)
        {
          sub_1C0AC142C(v63);
          v28 = swift_retain();
          sub_1C0ABCA4C(a9, v28, 0x72675F746E657665, 0xEB00000000687061, v63, 0, 0);
          if (v65)
            goto LABEL_73;
          MEMORY[0x1C3BA6800]();
          if (*(_QWORD *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1C106FF58();
          sub_1C106FFC4();
          sub_1C106FF28();
          swift_allocObject();
          sub_1C0AC142C(v63);
          v29 = swift_retain();
          v30 = 0xD000000000000013;
          v31 = v62;
          v32 = v63;
          v33 = a9;
          v34 = 0;
        }
        else
        {
          swift_retain();
          sub_1C0AC142C(v63);
          sub_1C0ABCA4C(a9, v27, 0x675F656C62617473, 0xEC00000068706172, v63, 1, 0);
          if (v65)
          {
LABEL_73:
            swift_release();
            return swift_bridgeObjectRelease();
          }
          MEMORY[0x1C3BA6800]();
          if (*(_QWORD *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1C106FF58();
          sub_1C106FFC4();
          sub_1C106FF28();
          swift_allocObject();
          swift_retain();
          sub_1C0AC142C(v63);
          v30 = 0xD000000000000014;
          v29 = v27;
          v31 = v61;
          v32 = v63;
          v33 = a9;
          v34 = 1;
        }
        sub_1C0ABCA4C(v33, v29, v30, v31, v32, v34, 1);
        v65 = 0;
        MEMORY[0x1C3BA6800]();
        if (*(_QWORD *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1C106FF58();
        sub_1C106FFC4();
        sub_1C106FF28();
      }
    }
LABEL_37:
    v13 = 1;
    v14 = 1u;
  }
  while ((v66 & 1) == 0);
  v35 = v68;
  v62 = v68 >> 62;
  if (v68 >> 62)
    goto LABEL_78;
  v36 = *(_QWORD *)((v68 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
LABEL_40:
  v37 = v65;
  if (!v36)
    goto LABEL_69;
  v38 = v35 & 0xFFFFFFFFFFFFFF8;
  v61 = v35 & 0xFFFFFFFFFFFFFF8;
  if (v35 < 0)
    v38 = v35;
  v55[1] = v38;
  while (2)
  {
    v66 = 0;
    v39 = INFINITY;
    v40 = 4;
    v63 = v36;
    do
    {
      if ((v35 & 0xC000000000000001) != 0)
      {
        v41 = MEMORY[0x1C3BA70DC](v40 - 4, v35);
      }
      else
      {
        v41 = *(_QWORD *)(v35 + 8 * v40);
        swift_retain();
      }
      v42 = v40 - 3;
      if (__OFADD__(v40 - 4, 1))
      {
        __break(1u);
LABEL_78:
        swift_bridgeObjectRetain_n();
        v36 = sub_1C10709B4();
        swift_bridgeObjectRelease();
        goto LABEL_40;
      }
      v43 = sub_1C0ABD22C();
      if (v37)
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
LABEL_72:
        swift_release();
        return swift_bridgeObjectRelease_n();
      }
      if (v43)
      {
        v44 = *(_QWORD *)(v43 + 16);
        if (v44)
        {
          swift_retain();
          sub_1C106C370();
          v45 = sub_1C106C3A0();
          if (v45)
          {
            v64 = v55;
            v65 = 0;
            MEMORY[0x1E0C80A78](v45);
            v55[-2] = v44;
            v55[-1] = 0;
            v47 = sqlite3_column_type(v46, 0);
            if ((_DWORD)v47 == 5)
            {
              MEMORY[0x1E0C80A78](v47);
              v55[-2] = sub_1C0AACDF8;
              v55[-1] = &v55[-4];
              sub_1C106C1C0();
              result = swift_unexpectedError();
              __break(1u);
              return result;
            }
            sub_1C1070198();
            v49 = v48;
            swift_release();
            swift_release();
            v67 = v49;
            v37 = v65;
          }
          else
          {
            sub_1C106C364();
            swift_release();
            swift_release();
          }
          v36 = v63;
          v50 = v67;
          if (v67 < v39)
          {
            swift_release();
            v39 = v50;
            v66 = v41;
            goto LABEL_60;
          }
        }
        else
        {
          swift_release();
        }
      }
      swift_release();
LABEL_60:
      ++v40;
    }
    while (v42 != v36);
    swift_bridgeObjectRelease();
    if (!v66)
    {
      swift_bridgeObjectRelease();
      break;
    }
    swift_retain();
    v51 = sub_1C0ABCFC0();
    if (v37)
    {
      swift_release_n();
      goto LABEL_72;
    }
    v52 = v51;
    swift_bridgeObjectRelease();
    swift_release_n();
    if (v52)
    {
      v53 = sub_1C0ABFBBC(v52, v56, v60, v57, v58, v59, a10);
      swift_release();
      if ((v53 & 1) != 0)
      {
        if (v62)
        {
          swift_bridgeObjectRetain_n();
          v36 = sub_1C10709B4();
          swift_bridgeObjectRelease();
          if (v36)
            continue;
        }
        else
        {
          v36 = *(_QWORD *)(v61 + 16);
          swift_bridgeObjectRetain_n();
          if (v36)
            continue;
        }
LABEL_69:
        swift_bridgeObjectRelease_n();
      }
    }
    break;
  }
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0ABEF34(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)();
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  uint64_t (*v26)();
  uint64_t (*v27)();
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)();
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)();
  unint64_t v35;
  int64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  _QWORD v59[2];
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  char *v63;
  uint64_t (*v64)();
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t (*v68)();
  uint64_t v69;
  double v70;
  _BYTE v71[40];
  _BYTE v72[48];

  v5 = v4;
  v6 = v3;
  v10 = sub_1C07ACF80(&qword_1ED75E4B8);
  MEMORY[0x1E0C80A78](v10);
  v63 = (char *)v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = _s14descr1E7A1E2A9V28ResolvedKnowledgeGraphFilterVMa();
  v12 = *(_QWORD *)(v66 - 8);
  MEMORY[0x1E0C80A78](v66);
  v65 = (char *)v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v67 = (char *)v59 - v15;
  MEMORY[0x1E0C80A78](v16);
  v18 = (uint64_t (*)())((char *)v59 - v17);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)v59 - v20;
  v70 = a3;
  v22 = MEMORY[0x1E0DEE9D8];
  v69 = MEMORY[0x1E0DEE9D8];
  v23 = v6[3];
  v24 = *(uint64_t (**)())(v23 + 16);
  if (v24)
  {
    v59[1] = a1;
    v60 = a2;
    v61 = v6;
    v62 = v4;
    v68 = (uint64_t (*)())(v23
                        + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)));
    v64 = (uint64_t (*)())v23;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v25 = 0;
    v26 = _s14descr1E7A1E2A9V28ResolvedKnowledgeGraphFilterVMa;
    while (1)
    {
      v27 = (uint64_t (*)())(v25 + 1);
      if (__OFADD__(v25, 1))
      {
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
        goto LABEL_54;
      }
      a1 = *(_QWORD *)(v12 + 72);
      sub_1C0AC136C((uint64_t)v68 + a1 * v25, (uint64_t)v21);
      v28 = v21[8];
      sub_1C07B1F90((uint64_t)v21, (uint64_t (*)(_QWORD))_s14descr1E7A1E2A9V28ResolvedKnowledgeGraphFilterVMa);
      if (v28 != 1)
        break;
      ++v25;
      if (v27 == v24)
      {
        v27 = v64;
        swift_bridgeObjectRelease();
        v22 = MEMORY[0x1E0DEE9D8];
        v29 = (uint64_t)v63;
        goto LABEL_9;
      }
    }
    v27 = v64;
    swift_bridgeObjectRelease();
    sub_1C07EC924();
    v22 = v30;
    v21 = *(char **)(v30 + 16);
    v26 = (uint64_t (*)())(v21 + 1);
    if ((unint64_t)v21 < *(_QWORD *)(v30 + 24) >> 1)
      goto LABEL_8;
LABEL_54:
    sub_1C07EC924();
    v22 = v50;
LABEL_8:
    v29 = (uint64_t)v63;
    *(_QWORD *)(v22 + 16) = v26;
    v21[v22 + 32] = 0;
LABEL_9:
    v31 = (uint64_t (*)())*((_QWORD *)v27 + 2);
    v26 = v68;
    if (v31)
    {
      v63 = (char *)v22;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v32 = 0;
      v21 = (char *)_s14descr1E7A1E2A9V28ResolvedKnowledgeGraphFilterVMa;
      while (1)
      {
        v27 = (uint64_t (*)())(v32 + 1);
        if (__OFADD__(v32, 1))
          goto LABEL_51;
        sub_1C0AC136C((uint64_t)v26, (uint64_t)v18);
        v33 = *((_QWORD *)v18 + 3);
        sub_1C07B1F90((uint64_t)v18, (uint64_t (*)(_QWORD))_s14descr1E7A1E2A9V28ResolvedKnowledgeGraphFilterVMa);
        if (v33)
          break;
        ++v32;
        v26 = (uint64_t (*)())((char *)v26 + a1);
        if (v27 == v31)
        {
          v34 = v64;
          swift_bridgeObjectRelease();
          v22 = (uint64_t)v63;
          goto LABEL_24;
        }
      }
      v34 = v64;
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      {
        v22 = (uint64_t)v63;
      }
      else
      {
        sub_1C07EC924();
        v22 = v51;
      }
      v35 = *(_QWORD *)(v22 + 16);
      v36 = *(_QWORD *)(v22 + 24) >> 1;
      v37 = v35 + 1;
      if (v36 <= v35)
      {
        sub_1C07EC924();
        v22 = v52;
        v36 = *(_QWORD *)(v52 + 24) >> 1;
      }
      *(_QWORD *)(v22 + 16) = v37;
      *(_BYTE *)(v22 + v35 + 32) = 1;
      v38 = v35 + 2;
      if (v36 < (uint64_t)(v35 + 2))
      {
        sub_1C07EC924();
        v22 = v53;
        v36 = *(_QWORD *)(v53 + 24) >> 1;
      }
      *(_QWORD *)(v22 + 16) = v38;
      *(_BYTE *)(v22 + v37 + 32) = 2;
      v39 = v35 + 3;
      if (v36 < v39)
      {
        sub_1C07EC924();
        v22 = v54;
      }
      *(_QWORD *)(v22 + 16) = v39;
      *(_BYTE *)(v22 + v38 + 32) = 3;
LABEL_24:
      v26 = (uint64_t (*)())*((_QWORD *)v34 + 2);
      if (v26)
      {
        v63 = (char *)v22;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v40 = 0;
        v18 = _s14descr1E7A1E2A9V28ResolvedKnowledgeGraphFilterVMa;
        v41 = (uint64_t)v67;
        v21 = (char *)v68;
        while (1)
        {
          v27 = (uint64_t (*)())(v40 + 1);
          if (__OFADD__(v40, 1))
            goto LABEL_52;
          sub_1C0AC136C((uint64_t)v21, v41);
          v42 = *(unsigned __int8 *)(v41 + 40);
          sub_1C07B1F90(v41, (uint64_t (*)(_QWORD))_s14descr1E7A1E2A9V28ResolvedKnowledgeGraphFilterVMa);
          if (v42 != 1)
            break;
          ++v40;
          v21 += a1;
          if (v27 == v26)
          {
            v21 = (char *)v64;
            swift_bridgeObjectRelease();
            v22 = (uint64_t)v63;
LABEL_35:
            v44 = (char *)*((_QWORD *)v21 + 2);
            v26 = v68;
            if (!v44)
              goto LABEL_41;
            v63 = (char *)v22;
            _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
            v18 = 0;
            v27 = _s14descr1E7A1E2A9V28ResolvedKnowledgeGraphFilterVMa;
            v45 = (uint64_t)v65;
            while (1)
            {
              v46 = (char *)v18 + 1;
              if (__OFADD__(v18, 1))
                goto LABEL_53;
              sub_1C0AC136C((uint64_t)v26, v45);
              sub_1C0AC13B0(v45 + *(int *)(v66 + 32), v29);
              v47 = sub_1C07ACF80(&qword_1ED75E930);
              v21 = (char *)sub_1C07B2D80(v29, 1, v47);
              sub_1C0784B6C(v29, &qword_1ED75E4B8);
              sub_1C07B1F90(v45, (uint64_t (*)(_QWORD))_s14descr1E7A1E2A9V28ResolvedKnowledgeGraphFilterVMa);
              if ((_DWORD)v21 != 1)
              {
                swift_bridgeObjectRelease();
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                {
                  sub_1C07EC924();
                  v63 = v57;
                }
                v6 = v61;
                v5 = v62;
                a2 = v60;
                v22 = (uint64_t)v63;
                v49 = *((_QWORD *)v63 + 2);
                if (v49 >= *((_QWORD *)v63 + 3) >> 1)
                {
                  sub_1C07EC924();
                  v22 = v58;
                }
                *(_QWORD *)(v22 + 16) = v49 + 1;
                *(_BYTE *)(v22 + v49 + 32) = 4;
                goto LABEL_42;
              }
              v18 = (uint64_t (*)())((char *)v18 + 1);
              v26 = (uint64_t (*)())((char *)v26 + a1);
              if (v46 == v44)
              {
                swift_bridgeObjectRelease();
                v6 = v61;
                v5 = v62;
                a2 = v60;
                v22 = (uint64_t)v63;
                goto LABEL_42;
              }
            }
          }
        }
        v21 = (char *)v64;
        swift_bridgeObjectRelease();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C07EC924();
          v63 = v55;
        }
        v22 = (uint64_t)v63;
        v43 = *((_QWORD *)v63 + 2);
        if (v43 >= *((_QWORD *)v63 + 3) >> 1)
        {
          sub_1C07EC924();
          v22 = v56;
        }
        *(_QWORD *)(v22 + 16) = v43 + 1;
        *(_BYTE *)(v22 + v43 + 32) = 5;
        goto LABEL_35;
      }
    }
LABEL_41:
    v6 = v61;
    v5 = v62;
    a2 = v60;
  }
LABEL_42:
  sub_1C0D759EC(v22, (uint64_t)v71);
  sub_1C0ABCCCC(v71, (uint64_t)v72);
  sub_1C0AC13F8((uint64_t)v71);
  swift_retain();
  sub_1C0ABDE7C((uint64_t)v72, a2, v6, &v69, (uint64_t)v6, &v70, a3);
  sub_1C0AC13F8((uint64_t)v72);
  if (v5)
    return swift_bridgeObjectRelease();
  else
    return v69;
}

uint64_t sub_1C0ABF5B0(uint64_t a1, uint64_t *a2, uint64_t a3, double *a4)
{
  uint64_t v4;
  uint64_t v7;
  double v8;
  uint64_t v9;
  BOOL v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE __src[152];

  v7 = a1;
  if (*(_QWORD *)(*a2 + 16) < *(_QWORD *)(a3 + 32) || (a1 = sub_1C0ABC728(a1), v8 == *a4))
  {
    sub_1C0ABC728(a1);
    *(_QWORD *)a4 = v9;
    v10 = sub_1C0ABFDD8(v7);
    if (!v4)
    {
      if (v10)
      {
        sub_1C0ABC8C4((uint64_t)__src);
        sub_1C07EA210();
        v12 = *(_QWORD *)(*a2 + 16);
        sub_1C07EA924();
        v13 = *a2;
        *(_QWORD *)(v13 + 16) = v12 + 1;
        memcpy((void *)(v13 + 152 * v12 + 32), __src, 0x92uLL);
      }
      v11 = 1;
    }
  }
  else
  {
    v11 = 0;
  }
  return v11 & 1;
}

uint64_t sub_1C0ABF6A8(uint64_t a1, _QWORD *a2, double a3, double a4)
{
  uint64_t (*v4)();
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)();
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t (*v50)();
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE v60[40];
  double v61;

  v6 = v5;
  v53 = a1;
  v10 = sub_1C07ACF80(&qword_1ED75E4B8);
  MEMORY[0x1E0C80A78](v10);
  v52 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = _s14descr1E7A1E2A9V28ResolvedKnowledgeGraphFilterVMa();
  v12 = *(_QWORD *)(v57 - 8);
  MEMORY[0x1E0C80A78](v57);
  v56 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v49 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (uint64_t (*)())((char *)&v49 - v18);
  v61 = a3;
  v59 = 0;
  v58 = MEMORY[0x1E0DEE9D8];
  sub_1C07EC924();
  v21 = v20;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = v22 + 1;
  if (v22 >= *(_QWORD *)(v20 + 24) >> 1)
    goto LABEL_39;
  while (1)
  {
    *(_QWORD *)(v21 + 16) = v23;
    *(_BYTE *)(v21 + v22 + 32) = 0;
    v24 = *((_QWORD *)v4 + 3);
    v25 = *(_QWORD *)(v24 + 16);
    if (!v25)
      break;
    v54 = *((_QWORD *)v4 + 3);
    v55 = v21;
    v49 = a2;
    v50 = v4;
    v51 = v6;
    v22 = v24 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    a2 = *(_QWORD **)(v12 + 72);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v26 = v22;
    while (1)
    {
      sub_1C0AC136C(v26, (uint64_t)v19);
      v27 = *((_QWORD *)v19 + 3);
      sub_1C07B1F90((uint64_t)v19, (uint64_t (*)(_QWORD))_s14descr1E7A1E2A9V28ResolvedKnowledgeGraphFilterVMa);
      if (v27)
        break;
      v26 += (uint64_t)a2;
      if (!--v25)
      {
        v28 = v54;
        swift_bridgeObjectRelease();
        v29 = v28;
        v21 = v55;
        goto LABEL_14;
      }
    }
    swift_bridgeObjectRelease();
    v21 = v55;
    v30 = *(_QWORD *)(v55 + 16);
    v31 = *(_QWORD *)(v55 + 24) >> 1;
    v32 = v30 + 1;
    if (v31 <= v30)
    {
      sub_1C07EC924();
      v21 = v44;
      v31 = *(_QWORD *)(v44 + 24) >> 1;
    }
    *(_QWORD *)(v21 + 16) = v32;
    *(_BYTE *)(v21 + v30 + 32) = 1;
    v33 = v30 + 2;
    if (v31 < (uint64_t)(v30 + 2))
    {
      sub_1C07EC924();
      v21 = v45;
      v31 = *(_QWORD *)(v45 + 24) >> 1;
    }
    *(_QWORD *)(v21 + 16) = v33;
    *(_BYTE *)(v21 + v32 + 32) = 2;
    v34 = v30 + 3;
    if (v31 < v34)
    {
      sub_1C07EC924();
      v21 = v46;
    }
    *(_QWORD *)(v21 + 16) = v34;
    *(_BYTE *)(v21 + v33 + 32) = 3;
    v29 = v54;
LABEL_14:
    v23 = *(_QWORD *)(v29 + 16);
    if (!v23)
    {
LABEL_29:
      v4 = v50;
      v6 = v51;
      a2 = v49;
      break;
    }
    v55 = v21;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v35 = 0;
    v4 = _s14descr1E7A1E2A9V28ResolvedKnowledgeGraphFilterVMa;
    v19 = (uint64_t (*)())v22;
    while (1)
    {
      v6 = v35 + 1;
      if (__OFADD__(v35, 1))
      {
        __break(1u);
        goto LABEL_38;
      }
      sub_1C0AC136C((uint64_t)v19, (uint64_t)v16);
      v12 = v16[40];
      sub_1C07B1F90((uint64_t)v16, (uint64_t (*)(_QWORD))_s14descr1E7A1E2A9V28ResolvedKnowledgeGraphFilterVMa);
      if ((_DWORD)v12 != 1)
        break;
      ++v35;
      v19 = (uint64_t (*)())((char *)a2 + (_QWORD)v19);
      if (v6 == v23)
      {
        v23 = v54;
        swift_bridgeObjectRelease();
        v36 = v23;
        v6 = (uint64_t)v52;
        v21 = v55;
        goto LABEL_23;
      }
    }
    swift_bridgeObjectRelease();
    v21 = v55;
    v37 = *(_QWORD *)(v55 + 16);
    v23 = v37 + 1;
    if (v37 >= *(_QWORD *)(v55 + 24) >> 1)
    {
      sub_1C07EC924();
      v21 = v47;
    }
    v6 = (uint64_t)v52;
    *(_QWORD *)(v21 + 16) = v23;
    *(_BYTE *)(v21 + v37 + 32) = 5;
    v36 = v54;
LABEL_23:
    v38 = *(char **)(v36 + 16);
    if (!v38)
      goto LABEL_29;
    v55 = v21;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v4 = 0;
    v19 = _s14descr1E7A1E2A9V28ResolvedKnowledgeGraphFilterVMa;
    v12 = (uint64_t)v56;
    while (1)
    {
      v16 = (char *)v4 + 1;
      if (__OFADD__(v4, 1))
        break;
      sub_1C0AC136C(v22, v12);
      sub_1C0AC13B0(v12 + *(int *)(v57 + 32), v6);
      v39 = sub_1C07ACF80(&qword_1ED75E930);
      v23 = sub_1C07B2D80(v6, 1, v39);
      sub_1C0784B6C(v6, &qword_1ED75E4B8);
      sub_1C07B1F90(v12, (uint64_t (*)(_QWORD))_s14descr1E7A1E2A9V28ResolvedKnowledgeGraphFilterVMa);
      if ((_DWORD)v23 != 1)
      {
        swift_bridgeObjectRelease();
        v21 = v55;
        v42 = *(_QWORD *)(v55 + 16);
        if (v42 >= *(_QWORD *)(v55 + 24) >> 1)
        {
          sub_1C07EC924();
          v21 = v48;
        }
        v4 = v50;
        v6 = v51;
        a2 = v49;
        v40 = v53;
        *(_QWORD *)(v21 + 16) = v42 + 1;
        *(_BYTE *)(v21 + v42 + 32) = 4;
        goto LABEL_31;
      }
      v4 = (uint64_t (*)())((char *)v4 + 1);
      v22 += (unint64_t)a2;
      if (v16 == v38)
      {
        swift_bridgeObjectRelease();
        v4 = v50;
        v6 = v51;
        a2 = v49;
        v40 = v53;
        v21 = v55;
        goto LABEL_31;
      }
    }
LABEL_38:
    __break(1u);
LABEL_39:
    sub_1C07EC924();
    v21 = v43;
  }
  v40 = v53;
LABEL_31:
  sub_1C0D759EC(v21, (uint64_t)v60);
  swift_retain();
  sub_1C0ABE6BC((uint64_t)v60, v40, v4, &v58, (uint64_t)v4, &v61, &v59, a2, a3, a4);
  sub_1C0AC13F8((uint64_t)v60);
  if (v6)
    return swift_bridgeObjectRelease();
  else
    return v58;
}

uint64_t sub_1C0ABFBBC(uint64_t a1, uint64_t *a2, uint64_t a3, double *a4, uint64_t *a5, _QWORD *a6, double a7)
{
  uint64_t v7;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _BOOL8 v23;
  _QWORD *v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;

  v37 = a6;
  v38 = sub_1C106E590();
  v14 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(*a2 + 16) >= *(_QWORD *)(a3 + 32))
  {
    v15 = sub_1C0ABC728(v15);
    if (v18 != *a4)
    {
      v15 = sub_1C0ABB89C(v15);
      if (v15 != *a5)
      {
        v22 = 0;
        return v22 & 1;
      }
    }
  }
  v19 = sub_1C0ABC728(v15);
  *(_QWORD *)a4 = v20;
  v36 = a5;
  v21 = *a5;
  if (v21 != sub_1C0ABB89C(v19))
  {
    v23 = sub_1C0ABFDD8(a1);
    if (v7)
      return v22 & 1;
    if (v23)
    {
      sub_1C0ABC728(v23);
      v24 = v37;
      if (v25 >= a7
        || (v26 = *(_QWORD *)(*v37 + 16),
            sub_1C07A896C(),
            v27 = static NSUserDefaults.maxSubjectIdSetSize.getter(),
            v26 == v27))
      {
        v27 = swift_bridgeObjectRelease();
        *v24 = MEMORY[0x1E0DEE9E8];
      }
      sub_1C0ABB89C(v27);
      sub_1C106E584();
      v28 = sub_1C106E578();
      v29 = sub_1C0A7ECEC(&v39, v28);
      v30 = v36;
      v31 = v38;
      if ((v29 & 1) != 0)
      {
        sub_1C07E9FA0();
        v32 = *(_QWORD *)(*a2 + 16);
        sub_1C07EA654();
        v33 = *a2;
        *(_QWORD *)(v33 + 16) = v32 + 1;
        v29 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v14 + 16))(v33+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72) * v32, v17, v31);
      }
      v34 = sub_1C0ABB89C(v29);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v31);
      *v30 = v34;
    }
  }
  v22 = 1;
  return v22 & 1;
}

BOOL sub_1C0ABFDD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  BOOL v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  BOOL v9;

  v4 = sub_1C0ABFEC4(a1);
  if (!v2)
  {
    v5 = 0;
    if (v4)
    {
      if (*(_BYTE *)(a1 + 137) != 1)
        return 1;
      if (*(_BYTE *)(a1 + 136) == 1)
      {
        v6 = 0x675F656C62617473;
        v7 = 0xEC00000068706172;
      }
      else
      {
        v6 = 0x72675F746E657665;
        v7 = 0xEB00000000687061;
      }
      if ((v8 = sub_1C0ABB5E0(*(_QWORD *)(v1 + 16), v6, v7)) == 0)
        return 1;
      v9 = sub_1C0ABFEC4((uint64_t)v8);
      swift_release();
      if (!v9)
        return 1;
    }
  }
  return v5;
}

BOOL sub_1C0ABFEC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  _QWORD v17[2];

  v3 = v2;
  v5 = _s14descr1E7A1E2A9V28ResolvedKnowledgeGraphFilterVMa();
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v1 + 24);
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    v17[1] = v3;
    v11 = v9 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v12 = *(_QWORD *)(v6 + 72);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v13 = v10 - 1;
    do
    {
      v14 = v13;
      sub_1C0AC136C(v11, (uint64_t)v8);
      v15 = sub_1C0ABFFC8(a1, (uint64_t)v8);
      sub_1C07B1F90((uint64_t)v8, (uint64_t (*)(_QWORD))_s14descr1E7A1E2A9V28ResolvedKnowledgeGraphFilterVMa);
      if (v15)
        break;
      v13 = v14 - 1;
      v11 += v12;
    }
    while (v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    return 1;
  }
  return v15;
}

BOOL sub_1C0ABFFC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  BOOL v13;
  BOOL v14;
  char v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v19;
  uint64_t v20;

  v4 = _s14descr1E7A1E2A9V28ResolvedKnowledgeGraphFilterVMa();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v20 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v20 - v11;
  v13 = sub_1C0AC0160(a2, a1);
  sub_1C0AC136C(a2, (uint64_t)v12);
  if (!v13)
  {
    sub_1C07B1F90((uint64_t)v12, (uint64_t (*)(_QWORD))_s14descr1E7A1E2A9V28ResolvedKnowledgeGraphFilterVMa);
    sub_1C0AC136C(a2, (uint64_t)v9);
    goto LABEL_7;
  }
  v14 = sub_1C0AC03B4((uint64_t)v12);
  sub_1C07B1F90((uint64_t)v12, (uint64_t (*)(_QWORD))_s14descr1E7A1E2A9V28ResolvedKnowledgeGraphFilterVMa);
  sub_1C0AC136C(a2, (uint64_t)v9);
  if (!v14)
  {
LABEL_7:
    sub_1C07B1F90((uint64_t)v9, (uint64_t (*)(_QWORD))_s14descr1E7A1E2A9V28ResolvedKnowledgeGraphFilterVMa);
    sub_1C0AC136C(a2, (uint64_t)v6);
    goto LABEL_8;
  }
  v15 = sub_1C0AC05E4((uint64_t)v9);
  sub_1C07B1F90((uint64_t)v9, (uint64_t (*)(_QWORD))_s14descr1E7A1E2A9V28ResolvedKnowledgeGraphFilterVMa);
  v16 = sub_1C0AC136C(a2, (uint64_t)v6);
  if ((v15 & 1) == 0)
  {
LABEL_8:
    v17 = 0;
    goto LABEL_9;
  }
  if ((v6[40] & 1) != 0)
  {
    v17 = 1;
  }
  else
  {
    v19 = *((_QWORD *)v6 + 4);
    v17 = (sub_1C0ABC1E8(v16) & v19) != 0;
  }
LABEL_9:
  sub_1C07B1F90((uint64_t)v6, (uint64_t (*)(_QWORD))_s14descr1E7A1E2A9V28ResolvedKnowledgeGraphFilterVMa);
  return v17;
}

BOOL sub_1C0AC0160(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  unsigned __int8 v22;
  BOOL v23;
  uint64_t v24;
  unsigned __int8 v25;
  _QWORD v27[2];

  v27[1] = a2;
  v3 = sub_1C07ACF80(&qword_1ED7618D0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C106E590();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C106D1F8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = _s14descr1E7A1E2A9V28ResolvedKnowledgeGraphFilterVMa();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_BYTE *)(a1 + 8);
  sub_1C0AC136C(a1, (uint64_t)v16);
  if ((v17 & 1) != 0)
  {
    v18 = *((_QWORD *)v16 + 2);
    sub_1C07B1F90((uint64_t)v16, (uint64_t (*)(_QWORD))_s14descr1E7A1E2A9V28ResolvedKnowledgeGraphFilterVMa);
    if (!v18)
      return 1;
  }
  else
  {
    sub_1C07B1F90((uint64_t)v16, (uint64_t (*)(_QWORD))_s14descr1E7A1E2A9V28ResolvedKnowledgeGraphFilterVMa);
  }
  sub_1C0ABB89C(v19);
  sub_1C106E584();
  sub_1C106E524();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (sub_1C07B2D80((uint64_t)v5, 1, v10) == 1)
  {
    sub_1C0784B6C((uint64_t)v5, &qword_1ED7618D0);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v5, v10);
    if ((*(_BYTE *)(a1 + 8) & 1) != 0)
    {
      v21 = *(_QWORD *)(a1 + 16);
      if (!v21)
      {
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
        return 1;
      }
      v22 = sub_1C106D1C8();
      sub_1C07AF408(v22, v21);
      v20 = v23;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    }
    else
    {
      v24 = *(_QWORD *)a1;
      v25 = sub_1C106D1C8();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      return v24 == v25;
    }
  }
  return v20;
}

BOOL sub_1C0AC03B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v2 = sub_1C07ACF80(&qword_1ED7618D0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C106EB24();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C106D1F8();
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a1 + 24);
  if (!v14)
    return 1;
  v28 = v11;
  v15 = sub_1C0ABBA54(v10);
  sub_1C0A791CC(v15, v16, v14);
  v18 = v17;
  v19 = swift_bridgeObjectRelease();
  if ((v18 & 1) != 0)
    return 1;
  sub_1C0ABBC1C(v19);
  sub_1C106EB18();
  sub_1C106EAC4();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (sub_1C07B2D80((uint64_t)v4, 1, v9) != 1)
  {
    v20 = v28;
    v21 = (*(uint64_t (**)(char *, char *, uint64_t))(v28 + 32))(v13, v4, v9);
    v29 = sub_1C0ABBA54(v21);
    v30 = v22;
    sub_1C106FC94();
    sub_1C106D090();
    sub_1C106FC94();
    swift_bridgeObjectRelease();
    v23 = sub_1C106FC94();
    sub_1C0ABBDD4(v23);
    sub_1C106FC94();
    swift_bridgeObjectRelease();
    sub_1C0A791CC(v29, v30, v14);
    v25 = v24;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v13, v9);
    return (v25 & 1) != 0;
  }
  sub_1C0784B6C((uint64_t)v4, &qword_1ED7618D0);
  return 0;
}

uint64_t sub_1C0AC05E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[2];

  v2 = sub_1C07ACF80(&qword_1ED755778);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C07ACF80(&qword_1ED75E4B8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C07ACF80(&qword_1ED75E930);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = _s14descr1E7A1E2A9V28ResolvedKnowledgeGraphFilterVMa();
  sub_1C0AC13B0(a1 + *(int *)(v12 + 32), (uint64_t)v7);
  if (sub_1C07B2D80((uint64_t)v7, 1, v8) == 1)
  {
    sub_1C0784B6C((uint64_t)v7, &qword_1ED75E4B8);
    return 1;
  }
  else
  {
    v14 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    v18[0] = sub_1C0ABBF9C(v14);
    v18[1] = v15;
    sub_1C106CB20();
    sub_1C0A22DC4();
    sub_1C07E6EDC(&qword_1EF63A720, &qword_1ED75E930, MEMORY[0x1E0DF1F60]);
    sub_1C106FA3C();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v16 = sub_1C07ACF80(qword_1EF63A728);
    v13 = sub_1C07B2D80((uint64_t)v4, 1, v16) != 1;
    sub_1C0784B6C((uint64_t)v4, &qword_1ED755778);
  }
  return v13;
}

void sub_1C0AC07E0(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release();
  a1(*(_QWORD *)(v1 + 24));
  sub_1C0778534();
}

uint64_t sub_1C0AC080C()
{
  sub_1C0AC07E0((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
  return swift_deallocClassInstance();
}

uint64_t _s14descr1E7A1E2A9V19FilteredBatchLoaderCMa()
{
  return objc_opt_self();
}

_QWORD *sub_1C0AC0850(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v5 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v5;
    *(_QWORD *)(a1 + 32) = a2[4];
    v6 = *(int *)(a3 + 32);
    v7 = (char *)a2 + v6;
    v8 = (void *)(a1 + v6);
    *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v9 = sub_1C07ACF80(&qword_1ED75E930);
    if (sub_1C07B2D80((uint64_t)v7, 1, v9))
    {
      v10 = sub_1C07ACF80(&qword_1ED75E4B8);
      memcpy(v8, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v8, v7, v9);
      sub_1C07B2D8C((uint64_t)v8, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t sub_1C0AC0958(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 32);
  v5 = sub_1C07ACF80(&qword_1ED75E930);
  result = sub_1C07B2D80(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return result;
}

uint64_t sub_1C0AC09D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  const void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = *(int *)(a3 + 32);
  v6 = (const void *)(a2 + v5);
  v7 = (void *)(a1 + v5);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v8 = sub_1C07ACF80(&qword_1ED75E930);
  if (sub_1C07B2D80((uint64_t)v6, 1, v8))
  {
    v9 = sub_1C07ACF80(&qword_1ED75E4B8);
    memcpy(v7, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v7, v6, v8);
    sub_1C07B2D8C((uint64_t)v7, 0, 1, v8);
  }
  return a1;
}

uint64_t sub_1C0AC0AAC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char *v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 16) = a2[2];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = a2[3];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  v7 = a2[4];
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  *(_QWORD *)(a1 + 32) = v7;
  v8 = *(int *)(a3 + 32);
  v9 = (void *)(a1 + v8);
  v10 = (char *)a2 + v8;
  v11 = sub_1C07ACF80(&qword_1ED75E930);
  v12 = sub_1C07B2D80((uint64_t)v9, 1, v11);
  v13 = sub_1C07B2D80((uint64_t)v10, 1, v11);
  if (!v12)
  {
    v14 = *(_QWORD *)(v11 - 8);
    if (!v13)
    {
      (*(void (**)(void *, char *, uint64_t))(v14 + 24))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v15 = sub_1C07ACF80(&qword_1ED75E4B8);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  sub_1C07B2D8C((uint64_t)v9, 0, 1, v11);
  return a1;
}

uint64_t sub_1C0AC0BFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v4 = *(int *)(a3 + 32);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_1C07ACF80(&qword_1ED75E930);
  if (sub_1C07B2D80((uint64_t)v6, 1, v7))
  {
    v8 = sub_1C07ACF80(&qword_1ED75E4B8);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
    sub_1C07B2D8C((uint64_t)v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_1C0AC0CCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v6 = *(int *)(a3 + 32);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_1C07ACF80(&qword_1ED75E930);
  v10 = sub_1C07B2D80((uint64_t)v7, 1, v9);
  v11 = sub_1C07B2D80((uint64_t)v8, 1, v9);
  if (!v10)
  {
    v12 = *(_QWORD *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(void *, const void *, uint64_t))(v12 + 40))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v13 = sub_1C07ACF80(&qword_1ED75E4B8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  sub_1C07B2D8C((uint64_t)v7, 0, 1, v9);
  return a1;
}

uint64_t sub_1C0AC0E0C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0AC0E18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = sub_1C07ACF80(&qword_1ED75E4B8);
    return sub_1C07B2D80(a1 + *(int *)(a3 + 32), a2, v9);
  }
}

uint64_t sub_1C0AC0E9C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0AC0EA8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 16) = a2;
  }
  else
  {
    v7 = sub_1C07ACF80(&qword_1ED75E4B8);
    return sub_1C07B2D8C(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

uint64_t _s14descr1E7A1E2A9V28ResolvedKnowledgeGraphFilterVMa()
{
  uint64_t result;

  result = qword_1ED75E4C0;
  if (!qword_1ED75E4C0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1C0AC0F50()
{
  unint64_t v0;

  sub_1C0AC0FD0();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1C0AC0FD0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED75E938)
  {
    sub_1C07D4BEC(&qword_1ED75E930);
    v0 = sub_1C1070564();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED75E938);
  }
}

void sub_1C0AC1028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  _QWORD v5[8];

  v5[2] = a2;
  v5[3] = a4;
  *(double *)&v5[4] = a5;
  v5[5] = a1;
  v5[6] = a3;
  swift_retain();
  sub_1C0BB9708((uint64_t)sub_1C0AC1160, (uint64_t)v5);
  sub_1C079ABA0();
  sub_1C079663C();
}

uint64_t sub_1C0AC1088@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>, double a7@<D0>)
{
  uint64_t v7;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;

  _s14descr1E7A1E2A9V19FilteredBatchLoaderCMa();
  swift_initStackObject();
  swift_retain();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0ABDD00(a1, a2, a3);
  v15 = sub_1C0ABEF34(a4, a5, a7);
  v17 = v16;
  v18 = v15;
  result = swift_release();
  if (!v7)
  {
    *a6 = v17;
    a6[1] = v18;
  }
  return result;
}

uint64_t sub_1C0AC1160@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1C0AC1088(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), a2, *(double *)(v2 + 32));
}

uint64_t sub_1C0AC1180@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X4>, _QWORD *a6@<X8>, double a7@<D0>, double a8@<D1>)
{
  uint64_t v8;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;

  _s14descr1E7A1E2A9V19FilteredBatchLoaderCMa();
  swift_initStackObject();
  swift_retain();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0ABDD00(a1, a2, a3);
  v17 = sub_1C0ABF6A8(a4, a5, a7, a8);
  v19 = v18;
  v20 = v17;
  result = swift_release();
  if (!v8)
  {
    *a6 = v19;
    a6[1] = v20;
  }
  return result;
}

uint64_t sub_1C0AC1260(uint64_t a1)
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

uint64_t sub_1C0AC12B0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0AC1300(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1ED75E4B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0AC1348@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1C0AC1180(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 40), *(_QWORD **)(v2 + 48), a2, *(double *)(v2 + 32), *(double *)(v2 + 56));
}

uint64_t sub_1C0AC136C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s14descr1E7A1E2A9V28ResolvedKnowledgeGraphFilterVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0AC13B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1ED75E4B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0AC13F8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0AC142C(uint64_t a1)
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

uint64_t _s14descr1E7A1E2A9V17StorableRawTripleVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s14descr1E7A1E2A9V17StorableRawTripleVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v3 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  v4 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v4;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  v5 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v5;
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_WORD *)(a1 + 144) = *(_WORD *)(a2 + 144);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

uint64_t _s14descr1E7A1E2A9V17StorableRawTripleVwca(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  *(_BYTE *)(a1 + 11) = *(_BYTE *)(a2 + 11);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_BYTE *)(a1 + 13) = *(_BYTE *)(a2 + 13);
  *(_BYTE *)(a1 + 14) = *(_BYTE *)(a2 + 14);
  *(_BYTE *)(a1 + 15) = *(_BYTE *)(a2 + 15);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  *(_BYTE *)(a1 + 145) = *(_BYTE *)(a2 + 145);
  return a1;
}

void *_s14descr1E7A1E2A9V17StorableRawTripleVwtk(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x92uLL);
}

uint64_t _s14descr1E7A1E2A9V17StorableRawTripleVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  *(_BYTE *)(a1 + 11) = *(_BYTE *)(a2 + 11);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_BYTE *)(a1 + 13) = *(_BYTE *)(a2 + 13);
  *(_BYTE *)(a1 + 14) = *(_BYTE *)(a2 + 14);
  *(_BYTE *)(a1 + 15) = *(_BYTE *)(a2 + 15);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  v6 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  *(_BYTE *)(a1 + 145) = *(_BYTE *)(a2 + 145);
  return a1;
}

uint64_t _s14descr1E7A1E2A9V17StorableRawTripleVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 146))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s14descr1E7A1E2A9V17StorableRawTripleVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 144) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 146) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 146) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s14descr1E7A1E2A9V17StorableRawTripleVMa()
{
  return &_s14descr1E7A1E2A9V17StorableRawTripleVN;
}

uint64_t GraphStore.__allocating_init(config:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  GraphStore.init(config:)(a1);
  return v2;
}

void GraphStore.tripleInsertingTransaction(transactionBody:)()
{
  void *v0;
  id v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  sub_1C0779758();
  sub_1C078017C();
  if (v0)
  {
    swift_release();
    v1 = v0;
    sub_1C07ACF80(&qword_1ED7614F0);
    if (swift_dynamicCast())
    {

      if (qword_1ED762B20 != -1)
        swift_once();
      v2 = sub_1C106F544();
      sub_1C079E000(v2, (uint64_t)qword_1ED78D9F8);
      v3 = sub_1C106F538();
      v4 = sub_1C10703A8();
      if (os_log_type_enabled(v3, v4))
      {
        v5 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v5 = 0;
        _os_log_impl(&dword_1C0771000, v3, v4, "GraphStore: tripleInsertingTransaction rolled back transaction.", v5, 2u);
        MEMORY[0x1C3BA8270](v5, -1, -1);
      }

    }
    else
    {

    }
  }
  else
  {
    swift_release();
  }
}

uint64_t GraphStore.store<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD v14[9];
  uint64_t v15;

  if (qword_1ED762B20 != -1)
    swift_once();
  v6 = sub_1C106F544();
  sub_1C079E000(v6, (uint64_t)qword_1ED78D9F8);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v7 = sub_1C106F538();
  v8 = sub_1C10703A8();
  if (os_log_type_enabled(v7, v8))
  {
    v14[7] = a3;
    v9 = swift_slowAlloc();
    v15 = swift_slowAlloc();
    *(_DWORD *)v9 = 134218242;
    MEMORY[0x1C3BA68F0](a1, a2);
    sub_1C07A9FB0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    v10 = sub_1C1070F00();
    v14[8] = sub_1C0788DAC(v10, v11, &v15);
    sub_1C07A9FB0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0771000, v7, v8, "GraphStore: store: %ld %s records.", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    sub_1C0776778();
  }

  v12 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v12);
  v14[2] = a2;
  v14[3] = a3;
  v14[4] = a1;
  sub_1C0779758();
  sub_1C077FF50((uint64_t)sub_1C0AC4230, (uint64_t)v14);
  return swift_release();
}

BOOL static GraphStore.TransactionOperation.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void sub_1C0AC1C70()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8[3];
  uint64_t v9;

  sub_1C077AE5C();
  v8[2] = *v0;
  v9 = sub_1C07A1D48();
  v8[0] = *(_QWORD *)(v9 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v2);
  v8[1] = (uint64_t)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v4);
  sub_1C07B41E0();
  sub_1C07AAF1C();
  MEMORY[0x1E0C80A78](v5);
  sub_1C07766EC();
  sub_1C079ABB0();
  sub_1C07946A0();
  if (!v1)
  {
    sub_1C07A5E60();
    goto LABEL_8;
  }
  sub_1C078DF38();
  sub_1C07A1E00();
  v6 = sub_1C07A0B4C();
  sub_1C078D530();
  sub_1C07A3B58();
  if ((v6 & 1) != 0
    || (sub_1C078DF38(), sub_1C079303C(), v7 = sub_1C07A0B4C(), sub_1C078D530(), sub_1C07A3B58(), (v7 & 1) != 0))
  {
    sub_1C078D530();
    sub_1C09BD294();
    sub_1C0775810();
    sub_1C07A47FC();
LABEL_8:
    sub_1C077A31C();
    sub_1C07757D0();
    return;
  }
  sub_1C078DF38();
  sub_1C07ACF80(&qword_1ED7614F0);
  if (!sub_1C078B064())
  {
    sub_1C078D5FC();
    goto LABEL_8;
  }
  sub_1C078D530();
  sub_1C0791D34(v8[0]);
  sub_1C079BF00(OBJC_IVAR____TtC24IntelligencePlatformCore25ErrorHandlingDatabasePool_databaseFileURL);
  __break(1u);
}

void sub_1C0AC1E00()
{
  sub_1C0AC2664();
}

void sub_1C0AC1E1C()
{
  uint64_t *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18[4];
  id v19;
  char v20;
  __int128 v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  __int128 v26;

  sub_1C077AE5C();
  v3 = v2;
  v18[2] = *v0;
  v18[0] = *(_QWORD *)(sub_1C07A1D48() - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v4);
  sub_1C077AED0();
  v18[1] = v5;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v6);
  v18[3] = (uint64_t)v18 - v7;
  v8 = sub_1C079D424();
  MEMORY[0x1E0C80A78](v8);
  sub_1C0778564();
  sub_1C079ABB0();
  sub_1C106BCE0();
  if (!v1)
  {
    sub_1C07A5E60();
    v11 = v20;
    v12 = v22;
    v13 = v23;
    v14 = v24;
    v15 = v25;
    *(_QWORD *)v3 = v19;
    *(_BYTE *)(v3 + 8) = v11;
    *(_OWORD *)(v3 + 16) = v21;
    *(_QWORD *)(v3 + 32) = v12;
    *(_BYTE *)(v3 + 40) = v13;
    *(_BYTE *)(v3 + 41) = v14;
    *(_BYTE *)(v3 + 42) = v15;
    *(_OWORD *)(v3 + 48) = v26;
    goto LABEL_8;
  }
  sub_1C078F21C();
  sub_1C106B47C();
  v9 = sub_1C07B7BD0();
  sub_1C0781540();
  sub_1C078E064();
  if ((v9 & 1) != 0
    || (sub_1C078F21C(), sub_1C106B6E0(), v10 = sub_1C07B7BD0(), sub_1C0781540(), sub_1C078E064(), (v10 & 1) != 0))
  {
    sub_1C0781540();
    sub_1C09BD294();
    sub_1C0775810();
    swift_willThrow();
LABEL_8:
    sub_1C07757D0();
    return;
  }
  v19 = v1;
  sub_1C078F21C();
  sub_1C07ACF80(&qword_1ED7614F0);
  if (!sub_1C078B064())
  {

    goto LABEL_8;
  }
  sub_1C0781540();
  sub_1C0797F04(v18[0]);
  v16 = sub_1C077F2C8(OBJC_IVAR____TtC24IntelligencePlatformCore25ErrorHandlingDatabasePool_databaseFileURL);
  sub_1C09B79AC(v16, v17);
  __break(1u);
}

void sub_1C0AC2024()
{
  sub_1C0AC2664();
}

void sub_1C0AC2040()
{
  sub_1C0AC2664();
}

void sub_1C0AC205C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1C077AE5C();
  v17 = *(_QWORD *)(sub_1C079D568() - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v1);
  sub_1C078F4D4(v2, v17);
  MEMORY[0x1E0C80A78](v3);
  sub_1C079E55C(v4, v5, v6, v7, v8, v9, v10, v11, v18);
  sub_1C0789F8C();
  MEMORY[0x1E0C80A78](v12);
  sub_1C07766EC();
  sub_1C079ABB0();
  sub_1C07ACF80(&qword_1ED753758);
  sub_1C07AA858();
  if (!v0)
  {
    sub_1C07A5E60();
    goto LABEL_8;
  }
  sub_1C078DF38();
  sub_1C07A1E00();
  v13 = sub_1C07A0B4C();
  sub_1C078D530();
  sub_1C07A3B58();
  if ((v13 & 1) != 0
    || (sub_1C078DF38(), sub_1C079303C(), v14 = sub_1C07A0B4C(), sub_1C078D530(), sub_1C07A3B58(), (v14 & 1) != 0))
  {
    sub_1C078D530();
    sub_1C09BD294();
    sub_1C0775810();
    sub_1C07A47FC();
LABEL_8:
    sub_1C077A31C();
    return;
  }
  sub_1C078DF38();
  sub_1C07ACF80(&qword_1ED7614F0);
  if (!sub_1C078B064())
  {

    goto LABEL_8;
  }
  sub_1C078D530();
  sub_1C0797F04(v19);
  v15 = sub_1C077F2C8(OBJC_IVAR____TtC24IntelligencePlatformCore25ErrorHandlingDatabasePool_databaseFileURL);
  sub_1C09B79AC(v15, v16);
  __break(1u);
}

void sub_1C0AC21F0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;

  sub_1C077AE5C();
  sub_1C079C5E0();
  v14 = v1;
  v17 = sub_1C07A1D48();
  v12 = *(_QWORD *)(v17 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v2);
  sub_1C077AED0();
  v13 = v3;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v4);
  v15 = (char *)&v11 - v5;
  sub_1C079D424();
  sub_1C0789F8C();
  MEMORY[0x1E0C80A78](v6);
  sub_1C07766EC();
  sub_1C079ABB0();
  sub_1C07ACF80(&qword_1ED753070);
  sub_1C07AA858();
  if (!v0)
  {
    sub_1C07A5E60();
    goto LABEL_8;
  }
  sub_1C078DF38();
  sub_1C07A1E00();
  v7 = sub_1C07A0B4C();
  sub_1C078D530();
  sub_1C07A3B58();
  if ((v7 & 1) != 0
    || (sub_1C078DF38(), sub_1C079303C(), v8 = sub_1C07A0B4C(), sub_1C078D530(), sub_1C07A3B58(), (v8 & 1) != 0))
  {
    sub_1C078D530();
    sub_1C09BD294();
    sub_1C0775810();
    sub_1C07A47FC();
LABEL_8:
    sub_1C077A31C();
    return;
  }
  v16 = v0;
  sub_1C078DF38();
  sub_1C07ACF80(&qword_1ED7614F0);
  if (!sub_1C078B064())
  {

    goto LABEL_8;
  }
  sub_1C078D530();
  sub_1C0797F04(v12);
  v9 = sub_1C077F2C8(OBJC_IVAR____TtC24IntelligencePlatformCore25ErrorHandlingDatabasePool_databaseFileURL);
  sub_1C09B79AC(v9, v10);
  __break(1u);
}

void sub_1C0AC2394()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;

  sub_1C077AE5C();
  v15 = *(_QWORD *)(sub_1C079D568() - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v1);
  sub_1C078F4D4(v2, v15);
  v4 = MEMORY[0x1E0C80A78](v3);
  sub_1C079E55C(v4, v5, v6, v7, v8, v9, v10, v11, v16);
  sub_1C078D6E0();
  MEMORY[0x1E0C80A78](v12);
  sub_1C07766EC();
  sub_1C079ABB0();
  sub_1C07ACF80(&qword_1ED7530B0);
  sub_1C07BC808();
  if (!v0)
  {
    sub_1C07AE8C8();
    goto LABEL_8;
  }
  sub_1C078DF38();
  sub_1C07A1E00();
  v13 = sub_1C07A0B4C();
  sub_1C078D530();
  sub_1C0792EAC();
  if ((v13 & 1) != 0
    || (sub_1C078DF38(), sub_1C079303C(), v14 = sub_1C07A0B4C(), sub_1C078D530(), sub_1C0792EAC(), (v14 & 1) != 0))
  {
    sub_1C078D530();
    sub_1C09BD294();
    sub_1C0775810();
    sub_1C07A47FC();
LABEL_8:
    sub_1C077A31C();
    sub_1C07757D0();
    return;
  }
  sub_1C078DF38();
  sub_1C07ACF80(&qword_1ED7614F0);
  if (!sub_1C07A26F0())
  {
    sub_1C078D5FC();
    goto LABEL_8;
  }
  sub_1C078D530();
  sub_1C0793998();
  sub_1C0795AB4(OBJC_IVAR____TtC24IntelligencePlatformCore25ErrorHandlingDatabasePool_databaseFileURL);
  __break(1u);
}

void sub_1C0AC24F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;

  sub_1C077AE5C();
  v15 = *(_QWORD *)(sub_1C079D568() - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v1);
  sub_1C078F4D4(v2, v15);
  MEMORY[0x1E0C80A78](v3);
  sub_1C079E55C(v4, v5, v6, v7, v8, v9, v10, v11, v16);
  sub_1C078D6E0();
  MEMORY[0x1E0C80A78](v12);
  sub_1C07766EC();
  sub_1C079ABB0();
  _s10ViewConfigVMa();
  sub_1C07BC808();
  if (!v0)
  {
    sub_1C07AE8C8();
    goto LABEL_8;
  }
  sub_1C078DF38();
  sub_1C07A1E00();
  v13 = sub_1C07A0B4C();
  sub_1C078D530();
  sub_1C0792EAC();
  if ((v13 & 1) != 0
    || (sub_1C078DF38(), sub_1C079303C(), v14 = sub_1C07A0B4C(), sub_1C078D530(), sub_1C0792EAC(), (v14 & 1) != 0))
  {
    sub_1C078D530();
    sub_1C09BD294();
    sub_1C0775810();
    sub_1C07A47FC();
LABEL_8:
    sub_1C077A31C();
    sub_1C07757D0();
    return;
  }
  sub_1C078DF38();
  sub_1C07ACF80(&qword_1ED7614F0);
  if (!sub_1C07A26F0())
  {
    sub_1C078D5FC();
    goto LABEL_8;
  }
  sub_1C078D530();
  sub_1C0793998();
  sub_1C0795AB4(OBJC_IVAR____TtC24IntelligencePlatformCore25ErrorHandlingDatabasePool_databaseFileURL);
  __break(1u);
}

void sub_1C0AC2648()
{
  sub_1C0AC2664();
}

void sub_1C0AC2664()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;

  sub_1C077AE5C();
  v2 = v1;
  v17 = *(_QWORD *)(sub_1C079D568() - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v3);
  sub_1C078F4D4(v4, v17);
  v6 = MEMORY[0x1E0C80A78](v5);
  sub_1C079E55C(v6, v7, v8, v9, v10, v11, v12, v13, v18);
  sub_1C078D6E0();
  MEMORY[0x1E0C80A78](v14);
  sub_1C07766EC();
  sub_1C079ABB0();
  sub_1C07ACF80(v2);
  sub_1C07BC808();
  if (!v0)
  {
    sub_1C07AE8C8();
    goto LABEL_8;
  }
  sub_1C078DF38();
  sub_1C07A1E00();
  v15 = sub_1C07A0B4C();
  sub_1C078D530();
  sub_1C0792EAC();
  if ((v15 & 1) != 0
    || (sub_1C078DF38(), sub_1C079303C(), v16 = sub_1C07A0B4C(), sub_1C078D530(), sub_1C0792EAC(), (v16 & 1) != 0))
  {
    sub_1C078D530();
    sub_1C09BD294();
    sub_1C0775810();
    sub_1C07A47FC();
LABEL_8:
    sub_1C077A31C();
    sub_1C07757D0();
    return;
  }
  sub_1C078DF38();
  sub_1C07ACF80(&qword_1ED7614F0);
  if (!sub_1C07A26F0())
  {
    sub_1C078D5FC();
    goto LABEL_8;
  }
  sub_1C078D530();
  sub_1C0793998();
  sub_1C0795AB4(OBJC_IVAR____TtC24IntelligencePlatformCore25ErrorHandlingDatabasePool_databaseFileURL);
  __break(1u);
}

uint64_t GraphStore.delete<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD v5[6];

  v5[2] = a2;
  v5[3] = a3;
  v5[4] = a1;
  sub_1C0779758();
  v3 = sub_1C0BB9B94((uint64_t)sub_1C0AC42C8, (uint64_t)v5);
  swift_release();
  return v3;
}

uint64_t GraphStore.init(config:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v1 + OBJC_IVAR____TtC24IntelligencePlatformCore10GraphStore_config;
  sub_1C083F944(a1, v1 + OBJC_IVAR____TtC24IntelligencePlatformCore10GraphStore_config, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  if (qword_1ED762790 != -1)
    swift_once();
  swift_retain();
  v5 = sub_1C0CBD7FC();
  swift_release();
  sub_1C07B1F90(a1, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  if (v2)
  {
    sub_1C07B1F90(v4, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(_QWORD *)(v1 + 16) = v5;
  }
  return v1;
}

uint64_t GraphStore.deinit()
{
  uint64_t v0;

  swift_release();
  sub_1C07B1F90(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore10GraphStore_config, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  return v0;
}

uint64_t GraphStore.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  sub_1C07B1F90(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore10GraphStore_config, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  return swift_deallocClassInstance();
}

BOOL static GraphStore.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a1 + OBJC_IVAR____TtC24IntelligencePlatformCore10GraphStore_config;
  v3 = a2 + OBJC_IVAR____TtC24IntelligencePlatformCore10GraphStore_config;
  if ((MEMORY[0x1C3BA140C](a1 + OBJC_IVAR____TtC24IntelligencePlatformCore10GraphStore_config, a2 + OBJC_IVAR____TtC24IntelligencePlatformCore10GraphStore_config) & 1) == 0)return 0;
  v4 = *(int *)(sub_1C0779D10() + 20);
  v6 = *(_QWORD *)(v2 + v4);
  v5 = *(_QWORD *)(v2 + v4 + 8);
  v7 = (uint64_t *)(v3 + v4);
  v9 = *v7;
  v8 = v7[1];
  return v6 == v9 && v5 == v8;
}

uint64_t GraphStore.hash(into:)()
{
  sub_1C079464C();
  sub_1C07803F8(&qword_1ED762670, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  sub_1C106FA0C();
  sub_1C0779D10();
  sub_1C1070E04();
  return sub_1C1070E04();
}

void GraphStore.hashValue.getter()
{
  sub_1C077C06C();
  sub_1C079464C();
  sub_1C07803F8(&qword_1ED762670, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  sub_1C106FA0C();
  sub_1C0779D10();
  sub_1C1070E04();
  sub_1C0778574();
  sub_1C1070E4C();
  sub_1C0775804();
}

void sub_1C0AC2AF4()
{
  GraphStore.hashValue.getter();
}

uint64_t sub_1C0AC2B14()
{
  return GraphStore.hash(into:)();
}

uint64_t sub_1C0AC2B34()
{
  sub_1C1070DF8();
  sub_1C106AB28();
  sub_1C07803F8(&qword_1ED762670, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  sub_1C106FA0C();
  type metadata accessor for Configuration();
  sub_1C1070E04();
  sub_1C1070E04();
  return sub_1C1070E4C();
}

uint64_t sub_1C0AC2BD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t inited;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __int128 v82;
  _QWORD v83[4];
  _QWORD v84[4];
  _QWORD v85[4];
  _QWORD v86[4];
  _QWORD v87[4];
  _QWORD v88[66];
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD v93[2];

  sub_1C07ACF80(&qword_1ED75EA10);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v0);
  sub_1C077AE40();
  v79 = v1;
  v2 = sub_1C106D9A8();
  v70 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1C077AED0();
  v78 = v3;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v4);
  v77 = (uint64_t)&v65 - v5;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v65 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v65 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v65 - v13;
  v81 = sub_1C106D9B4();
  v76 = *(_QWORD *)(v81 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v15);
  sub_1C077AE40();
  *(_QWORD *)&v82 = v16;
  v93[0] = MEMORY[0x1E0DEE9E0];
  v75 = sub_1C07ACF80(&qword_1ED75E838);
  v17 = *(_QWORD *)(sub_1C106E41C() - 8);
  v18 = *(_QWORD *)(v17 + 72);
  v19 = *(unsigned __int8 *)(v17 + 80);
  v72 = (v19 + 32) & ~v19;
  v73 = v19 | 7;
  v74 = v72 + v18;
  v20 = swift_allocObject();
  v71 = xmmword_1C1079220;
  *(_OWORD *)(v20 + 16) = xmmword_1C1079220;
  sub_1C106E218();
  sub_1C0AA7870();
  v68 = v21;
  v67 = v14;
  sub_1C07ADDE0((uint64_t)v14);
  sub_1C07ADDE0((uint64_t)v11);
  sub_1C07ADDE0((uint64_t)v8);
  v22 = v77;
  sub_1C07ADDE0(v77);
  v23 = v78;
  sub_1C07ADDE0(v78);
  v24 = (uint64_t)v11;
  v69 = v8;
  sub_1C106D864();
  sub_1C077589C();
  sub_1C07919F4(v23);
  sub_1C07919F4(v22);
  sub_1C07919F4((uint64_t)v8);
  v66 = v11;
  sub_1C07919F4((uint64_t)v11);
  v25 = (uint64_t)v67;
  sub_1C07919F4((uint64_t)v67);
  v70 = sub_1C106D2DC();
  v26 = v79;
  sub_1C07B2D8C(v79, 1, 1, v70);
  v88[2] = v93;
  v27 = v82;
  sub_1C0AA4BDC(v82, v26, (uint64_t)sub_1C0AC4508, (uint64_t)v88);
  sub_1C0784B6C(v26, &qword_1ED75EA10);
  v76 = *(_QWORD *)(v76 + 8);
  ((void (*)(uint64_t, uint64_t))v76)(v27, v81);
  *(_OWORD *)(swift_allocObject() + 16) = v71;
  sub_1C106E218();
  sub_1C0AA7870();
  sub_1C07ADDE0(v25);
  sub_1C07ADDE0(v24);
  v28 = (uint64_t)v69;
  sub_1C07ADDE0((uint64_t)v69);
  v29 = v77;
  sub_1C07ADDE0(v77);
  v30 = v78;
  sub_1C07ADDE0(v78);
  v31 = (uint64_t)v66;
  sub_1C106D864();
  sub_1C077589C();
  sub_1C07919F4(v30);
  sub_1C07919F4(v29);
  sub_1C07919F4(v28);
  sub_1C07919F4(v31);
  sub_1C07919F4(v25);
  v32 = v79;
  sub_1C07B2D8C(v79, 1, 1, v70);
  v87[2] = v93;
  v33 = v82;
  sub_1C0AA4BE8(v82, v32, (uint64_t)sub_1C0AC452C, (uint64_t)v87);
  sub_1C0784B6C(v32, &qword_1ED75EA10);
  ((void (*)(uint64_t, uint64_t))v76)(v33, v81);
  v34 = MEMORY[0x1E0DEE9E0];
  v92 = MEMORY[0x1E0DEE9E0];
  type metadata accessor for GraphTriple(0);
  sub_1C07803F8(&qword_1ED7493D8, (void (*)(uint64_t))type metadata accessor for GraphTriple);
  v86[2] = &v92;
  v38 = sub_1C079090C(v35, v36, v37, (uint64_t)sub_1C0AC4550, (uint64_t)v86);
  v91 = v34;
  v85[2] = &v91;
  sub_1C079EF18(v38, v39, v40, (uint64_t)sub_1C0AC45F4, (uint64_t)v85);
  v90 = v34;
  type metadata accessor for EventTriple(0);
  sub_1C07803F8(qword_1ED749388, (void (*)(uint64_t))type metadata accessor for EventTriple);
  v84[2] = &v90;
  v44 = sub_1C079090C(v41, v42, v43, (uint64_t)sub_1C0AC45F4, (uint64_t)v84);
  v89 = v34;
  v83[2] = &v89;
  sub_1C079EF18(v44, v45, v46, (uint64_t)sub_1C0AC45F4, (uint64_t)v83);
  sub_1C07ACF80(&qword_1ED761310);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1078A20;
  *(_QWORD *)(inited + 32) = 0x73656C70697254;
  *(_QWORD *)(inited + 40) = 0xE700000000000000;
  sub_1C07ACF80(qword_1ED755950);
  v48 = swift_initStackObject();
  v82 = xmmword_1C1078FC0;
  *(_OWORD *)(v48 + 16) = xmmword_1C1078FC0;
  *(_QWORD *)(v48 + 32) = 0x6870617247;
  *(_QWORD *)(v48 + 40) = 0xE500000000000000;
  *(_QWORD *)(v48 + 48) = GraphStore.graphTripleCount()();
  *(_QWORD *)(v48 + 56) = 0x746E657645;
  *(_QWORD *)(v48 + 64) = 0xE500000000000000;
  *(_QWORD *)(v48 + 72) = GraphStore.eventTripleCount()();
  v49 = sub_1C106F97C();
  v50 = sub_1C07ACF80(&qword_1ED75D0B0);
  *(_QWORD *)(inited + 48) = v49;
  *(_QWORD *)(inited + 72) = v50;
  *(_QWORD *)(inited + 80) = 0x7365697469746E45;
  v51 = v93[0];
  *(_QWORD *)(inited + 88) = 0xE800000000000000;
  *(_QWORD *)(inited + 96) = v51;
  v81 = v51;
  sub_1C07AEF40();
  *(_QWORD *)(inited + 120) = v52;
  *(_QWORD *)(inited + 128) = v53;
  *(_QWORD *)(inited + 136) = 0xEA00000000007365;
  sub_1C07ACF80(&qword_1ED74D588);
  v54 = swift_initStackObject();
  *(_OWORD *)(v54 + 16) = v82;
  *(_QWORD *)(v54 + 32) = 0x6870617247;
  *(_QWORD *)(v54 + 40) = 0xE500000000000000;
  sub_1C07ACF80(&qword_1ED74D590);
  v55 = swift_initStackObject();
  *(_OWORD *)(v55 + 16) = v82;
  *(_QWORD *)(v55 + 32) = 0x7461636964657250;
  *(_QWORD *)(v55 + 40) = 0xEA00000000007365;
  v57 = v91;
  v56 = v92;
  *(_QWORD *)(v55 + 48) = v92;
  *(_QWORD *)(v55 + 56) = 0xD000000000000017;
  v80 = v56;
  *(_QWORD *)(v55 + 64) = 0x80000001C10FB9A0;
  *(_QWORD *)(v55 + 72) = v57;
  sub_1C077584C();
  sub_1C077C0B8();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  *(_QWORD *)(v54 + 48) = sub_1C07B8438();
  *(_QWORD *)(v54 + 56) = 0x746E657645;
  *(_QWORD *)(v54 + 64) = 0xE500000000000000;
  *(_OWORD *)(swift_initStackObject() + 16) = v82;
  sub_1C07AEF40();
  v58[4] = v59;
  v60 = v89;
  v61 = v90;
  v58[5] = 0xEA00000000007365;
  v58[6] = v61;
  v58[7] = 0xD000000000000017;
  v58[8] = 0x80000001C10FB9A0;
  v58[9] = v60;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  *(_QWORD *)(v54 + 72) = sub_1C07B8438();
  sub_1C07ACF80(&qword_1ED74D280);
  v62 = sub_1C07B8438();
  *(_QWORD *)(inited + 168) = sub_1C07ACF80(&qword_1ED74D278);
  *(_QWORD *)(inited + 144) = v62;
  v63 = sub_1C07B8438();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v63;
}

void sub_1C0AC3394(uint64_t *a1@<X8>)
{
  *a1 = sub_1C0905A74();
  sub_1C0778534();
}

BOOL sub_1C0AC33B8(uint64_t *a1, uint64_t *a2)
{
  return static GraphStore.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1C0AC33D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v18 = a4;
  v7 = *(_QWORD *)(a3 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v16 - v11;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v13 = sub_1C106FF10();
  v20 = v13;
  if (v13 == MEMORY[0x1C3BA6908](a2, a3))
    return swift_bridgeObjectRelease();
  v17 = v8;
  while (1)
  {
    v15 = sub_1C106FFB8();
    sub_1C106FF40();
    if ((v15 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v12, a2+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v13, a3);
      goto LABEL_6;
    }
    result = sub_1C10707B0();
    if (v17 != 8)
      break;
    v19 = result;
    (*(void (**)(char *, uint64_t *, uint64_t))(v7 + 16))(v12, &v19, a3);
    swift_unknownObjectRelease();
LABEL_6:
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    MEMORY[0x1C3BA6914](&v20, a2, a3);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, a3);
    sub_1C106BFB0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, a3);
    if (!v4)
    {
      v13 = v20;
      if (v13 != MEMORY[0x1C3BA6908](a2, a3))
        continue;
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0AC35CC()
{
  uint64_t v0;

  v0 = sub_1C107000C();
  MEMORY[0x1C3BA8174](MEMORY[0x1E0DEAF38], v0);
  return sub_1C106FE14();
}

uint64_t sub_1C0AC365C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  BOOL v6;

  v4 = *a1;
  result = sub_1C106C274();
  if (!v2)
  {
    if ((result & 1) != 0 && (v6 = __OFADD__(v4, 1), ++v4, v6))
      __break(1u);
    else
      *a2 = v4;
  }
  return result;
}

uint64_t sub_1C0AC36B8(uint64_t a1, uint64_t *a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;

  v6 = a3(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - v7;
  sub_1C07ACF80(&qword_1ED7618D0);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v9);
  sub_1C0778564();
  v12 = v11 - v10;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106D084();
  v13 = sub_1C106D1F8();
  if (sub_1C07B2D80(v12, 1, v13) == 1)
  {
    sub_1C0784B6C(v12, &qword_1ED7618D0);
    v14 = 0;
    v15 = 0;
  }
  else
  {
    v14 = sub_1C106D0FC();
    v15 = v16;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  }
  sub_1C083F944(a1, (uint64_t)v8, a3);
  if (!v15)
  {
    v17 = (uint64_t *)&v8[*(int *)(v6 + 32)];
    v14 = *v17;
    v15 = v17[1];
    sub_1C077C0B8();
  }
  sub_1C07B1F90((uint64_t)v8, a3);
  v18 = *a2;
  if (*(_QWORD *)(*a2 + 16))
  {
    sub_1C077C0B8();
    v19 = sub_1C077D774(v14, v15);
    if ((v20 & 1) != 0)
      v21 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 8 * v19);
    else
      v21 = 0;
    sub_1C077589C();
  }
  else
  {
    v21 = 0;
  }
  result = v21 + 1;
  if (__OFADD__(v21, 1))
  {
    __break(1u);
  }
  else
  {
    sub_1C08A00EC(result, v14, v15);
    sub_1C077589C();
    return 1;
  }
  return result;
}

uint64_t sub_1C0AC3874(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[4];
  char v7;
  uint64_t v8;
  uint64_t v9;

  v6[2] = a1;
  v6[3] = a2;
  v7 = a3;
  v8 = a4;
  v9 = a5;
  swift_retain();
  sub_1C07C050C((uint64_t)sub_1C0AC4568, (uint64_t)v6);
  return swift_release();
}

uint64_t sub_1C0AC38D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1C07ACF80(&qword_1ED759F70);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0778564();
  v9 = v8 - v7;
  sub_1C077584C();
  sub_1C106E1DC();
  v10 = sub_1C106E41C();
  if (sub_1C07B2D80(v9, 1, v10) == 1)
  {
    sub_1C0784B6C(v9, &qword_1ED759F70);
    sub_1C077584C();
  }
  else
  {
    a1 = sub_1C106E254();
    a2 = v11;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  sub_1C08A00EC(a3, a1, a2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0AC39CC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(uint64_t, uint64_t, uint64_t), uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  sqlite3_stmt *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  sqlite3_stmt *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  ValueMetadata *v41;
  unint64_t v42;
  uint64_t v43;

  v38 = a5;
  v43 = a6;
  v36 = a1;
  v7 = sub_1C07ACF80(&qword_1ED760E68);
  v34 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C07ACF80((uint64_t *)&unk_1ED75E9E0);
  v35 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v34 - v14;
  sub_1C106B914();
  sub_1C106C484();
  sub_1C07ACF80((uint64_t *)&unk_1ED7614B0);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1C1078FC0;
  *(_QWORD *)(v16 + 56) = &type metadata for FusedTripleColumn;
  *(_QWORD *)(v16 + 64) = sub_1C0A56074();
  *(_BYTE *)(v16 + 32) = a4;
  v41 = &type metadata for FusedTripleColumn;
  v42 = sub_1C080ABFC();
  LOBYTE(v39) = a4;
  v17 = sub_1C106BCBC();
  v18 = MEMORY[0x1E0D23DB0];
  *(_QWORD *)(v16 + 96) = v17;
  *(_QWORD *)(v16 + 104) = v18;
  sub_1C079DFC4((uint64_t *)(v16 + 72));
  sub_1C106C490();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)&v39);
  sub_1C106C46C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v7);
  sub_1C07ACF80(&qword_1ED74D520);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1C1079220;
  *(_QWORD *)(v19 + 56) = &type metadata for FusedTripleColumn;
  *(_QWORD *)(v19 + 64) = sub_1C0A55FF4();
  *(_BYTE *)(v19 + 32) = a4;
  sub_1C0AC4588(&qword_1ED748270);
  sub_1C106BFE0();
  swift_bridgeObjectRelease();
  v20 = *(void (**)(char *, uint64_t))(v35 + 8);
  v20(v12, v10);
  sub_1C0AC4588(&qword_1ED75E9D8);
  v21 = v37;
  sub_1C106BAE8();
  result = ((uint64_t (*)(char *, uint64_t))v20)(v15, v10);
  if (v21)
    return result;
  v23 = sub_1C09D674C();
  v24 = v38;
  while (1)
  {
    if (!v23)
      return swift_release();
    sub_1C106C370();
    v25 = sub_1C106C3A0();
    if (v25)
    {
      MEMORY[0x1E0C80A78](v25);
      *(&v34 - 2) = v23;
      *(&v34 - 1) = 0;
      v27 = sqlite3_column_type(v26, 0);
      if ((_DWORD)v27 == 5)
      {
        MEMORY[0x1E0C80A78](v27);
        *(&v34 - 2) = (uint64_t)sub_1C0AACDF8;
        *(&v34 - 1) = (uint64_t)(&v34 - 4);
        sub_1C106C1C0();
        goto LABEL_17;
      }
      v39 = sub_1C106FB98();
      v40 = v28;
    }
    else
    {
      sub_1C106C364();
    }
    v30 = v39;
    v29 = v40;
    sub_1C106C370();
    v31 = sub_1C106C3A0();
    if (v31)
      break;
    sub_1C106C364();
    v24(v30, v29, v39);
LABEL_12:
    swift_release();
    swift_bridgeObjectRelease();
    v23 = sub_1C09D674C();
  }
  MEMORY[0x1E0C80A78](v31);
  *(&v34 - 2) = v23;
  *(&v34 - 1) = 1;
  v33 = sqlite3_column_type(v32, 1);
  if ((_DWORD)v33 != 5)
  {
    v39 = sub_1C1070DC8();
    v24 = v38;
    v38(v30, v29, v39);
    goto LABEL_12;
  }
  MEMORY[0x1E0C80A78](v33);
  *(&v34 - 2) = (uint64_t)sub_1C0AACB8C;
  *(&v34 - 1) = (uint64_t)(&v34 - 4);
  sub_1C106C1C0();
LABEL_17:
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

void GraphStore.TransactionOperation.hash(into:)()
{
  sub_1C1070E04();
  sub_1C0778534();
}

void GraphStore.TransactionOperation.hashValue.getter()
{
  sub_1C077C06C();
  sub_1C0778574();
  sub_1C1070E4C();
  sub_1C0775804();
}

void sub_1C0AC3F74(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t (*)(uint64_t a1), uint64_t))
{
  uint64_t v2;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  const char *v12;
  uint64_t v13;

  if (qword_1ED762B20 != -1)
    swift_once();
  v5 = sub_1C106F544();
  sub_1C079E000(v5, (uint64_t)qword_1ED78D9F8);
  v6 = sub_1C106F538();
  v7 = sub_1C1070384();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_1C0771000, v6, v7, "GraphStore: tripleInsertingTransaction beginning.", v8, 2u);
    MEMORY[0x1C3BA8270](v8, -1, -1);
  }

  swift_retain();
  a2(&v13, sub_1C0AC45DC, a1);
  swift_release();
  if (!v2)
  {
    if ((v13 & 1) != 0)
    {
      sub_1C106C6B8();
      v9 = sub_1C106F538();
      v10 = sub_1C1070384();
      if (os_log_type_enabled(v9, v10))
      {
        v11 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v11 = 0;
        v12 = "GraphStore: tripleInsertingTransaction rolled back.";
LABEL_11:
        _os_log_impl(&dword_1C0771000, v9, v10, v12, v11, 2u);
        MEMORY[0x1C3BA8270](v11, -1, -1);
      }
    }
    else
    {
      v9 = sub_1C106F538();
      v10 = sub_1C1070384();
      if (os_log_type_enabled(v9, v10))
      {
        v11 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v11 = 0;
        v12 = "GraphStore: tripleInsertingTransaction complete.";
        goto LABEL_11;
      }
    }

  }
}

void sub_1C0AC417C(uint64_t a1)
{
  uint64_t v1;

  sub_1C0AC3F74(a1, *(void (**)(uint64_t *__return_ptr, uint64_t (*)(uint64_t), uint64_t))(v1 + 16));
}

uint64_t sub_1C0AC4194(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = v1;
  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v4 = (_QWORD *)(result + 32);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v5 = v3 - 1;
    do
    {
      v6 = v5;
      sub_1C07A9480(v4, v4[3]);
      sub_1C106BFB0();
      if (v2)
        break;
      v5 = v6 - 1;
      v4 += 5;
    }
    while (v6);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C0AC4230(uint64_t a1)
{
  uint64_t *v1;

  return sub_1C0AC33D8(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_1C0AC424C(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr))
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  a4(&v7);
  v5 = *a1 + 8;
  result = sub_1C10705AC();
  *a1 = v5;
  return result;
}

void sub_1C0AC42A4(uint64_t (*a1)(void)@<X0>, _QWORD *a2@<X8>)
{
  *a2 = a1();
  sub_1C0778534();
}

uint64_t sub_1C0AC42C8()
{
  return sub_1C0AC35CC();
}

void sub_1C0AC42E4()
{
  sub_1C07803F8(qword_1ED752240, (void (*)(uint64_t))type metadata accessor for GraphStore);
}

uint64_t type metadata accessor for GraphStore()
{
  uint64_t result;

  result = qword_1ED761338;
  if (!qword_1ED761338)
    return swift_getSingletonMetadata();
  return result;
}

_UNKNOWN **sub_1C0AC4348()
{
  return &off_1E7A1CAD0;
}

unint64_t sub_1C0AC4358()
{
  unint64_t result;

  result = qword_1EF63A768;
  if (!qword_1EF63A768)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for GraphStore.TransactionOperation, &type metadata for GraphStore.TransactionOperation);
    atomic_store(result, (unint64_t *)&qword_1EF63A768);
  }
  return result;
}

uint64_t sub_1C0AC4394()
{
  return type metadata accessor for GraphStore();
}

uint64_t sub_1C0AC439C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Configuration();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for GraphStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of GraphStore.__allocating_init(config:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t storeEnumTagSinglePayload for GraphStore.TransactionOperation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C0AC4488 + 4 * byte_1C109EDA5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C0AC44BC + 4 * asc_1C109EDA0[v4]))();
}

uint64_t sub_1C0AC44BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0AC44C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0AC44CCLL);
  return result;
}

uint64_t sub_1C0AC44D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0AC44E0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C0AC44E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0AC44EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GraphStore.TransactionOperation()
{
  return &type metadata for GraphStore.TransactionOperation;
}

uint64_t sub_1C0AC4508(uint64_t a1)
{
  uint64_t v1;

  return sub_1C0AC36B8(a1, *(uint64_t **)(v1 + 16), type metadata accessor for GraphTriple) & 1;
}

uint64_t sub_1C0AC452C(uint64_t a1)
{
  uint64_t v1;

  return sub_1C0AC36B8(a1, *(uint64_t **)(v1 + 16), type metadata accessor for EventTriple) & 1;
}

uint64_t sub_1C0AC4550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0AC38D4(a1, a2, a3);
}

uint64_t sub_1C0AC4568(uint64_t a1)
{
  uint64_t v1;

  return sub_1C0AC39CC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 40), *(_QWORD *)(v1 + 48));
}

void sub_1C0AC4588(_QWORD *a1)
{
  if (!*a1)
  {
    sub_1C07D4BEC((uint64_t *)&unk_1ED75E9E0);
    sub_1C077D8A0();
  }
  sub_1C0778534();
}

uint64_t sub_1C0AC45C0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1C0AC365C(a1, a2);
}

uint64_t sub_1C0AC45DC(uint64_t a1)
{
  return sub_1C0AC4194(a1);
}

uint64_t GraphValidator.__allocating_init(config:)(uint64_t a1)
{
  uint64_t v2;

  sub_1C077D228();
  v2 = swift_allocObject();
  GraphValidator.init(config:)(a1);
  return v2;
}

uint64_t GraphValidator.init(config:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];

  v3 = v1;
  type metadata accessor for Configuration();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v15 - v9;
  sub_1C083F944(a1, (uint64_t)v15 - v9, v11);
  type metadata accessor for GraphStore();
  sub_1C077B5BC();
  v12 = GraphStore.init(config:)((uint64_t)v10);
  if (v2)
  {
    sub_1C07B2018(a1, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v12;
    sub_1C083F944(a1, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    type metadata accessor for OntologyStore();
    sub_1C077B5BC();
    v13 = OntologyStore.init(config:)((uint64_t)v7);
    sub_1C07B2018(a1, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    *(_QWORD *)(v3 + 24) = v13;
  }
  return v3;
}

void sub_1C0AC4798()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t (*v2)(_QWORD);
  uint64_t (*v3)(_QWORD);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(_QWORD *@<X8>);
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  char v54;
  char v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(uint64_t, uint64_t);
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t (*v88)(uint64_t, uint64_t);
  uint64_t v89;
  void (*v90)(uint64_t, uint64_t);
  uint64_t v91;
  void (*v92)(unint64_t);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t (*v99)(_QWORD);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;

  sub_1C0779670();
  v88 = v1;
  v3 = v2;
  v100 = sub_1C07ABD20();
  v4 = *(_QWORD *)(v100 - 8);
  v82 = v4;
  MEMORY[0x1E0C80A78](v100);
  sub_1C077AE40();
  v91 = v5;
  v99 = v3;
  v6 = v3(0);
  v89 = *(_QWORD *)(v6 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v7);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v8);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v9);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v10);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v11);
  sub_1C0778674();
  v78 = v12;
  sub_1C07ACF80(&qword_1ED756690);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v13);
  sub_1C077AE40();
  v87 = v14;
  v15 = sub_1C0778768();
  sub_1C0787718(*(_QWORD *)(v15 - 8));
  MEMORY[0x1E0C80A78](v16);
  sub_1C077AED0();
  v86 = v17;
  MEMORY[0x1E0C80A78](v18);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v19);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v20);
  sub_1C0779728();
  v97 = v21;
  MEMORY[0x1E0C80A78](v22);
  sub_1C0778674();
  v95 = v23;
  v24 = sub_1C106D9B4();
  sub_1C077B58C(v24, (uint64_t)&v104);
  sub_1C0787718(v25);
  MEMORY[0x1E0C80A78](v26);
  sub_1C077AE40();
  v94 = v27;
  sub_1C07ACF80(&qword_1ED7603D8);
  v28 = sub_1C106E590();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_1C1079220;
  v101 = v0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v29 + 16))(v31 + v30, v0, v28);
  sub_1C0AA8F40();
  sub_1C07ACF80(&qword_1ED75E838);
  v32 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v33 = sub_1C0776A60();
  *(_OWORD *)(v33 + 16) = xmmword_1C1079220;
  v92 = *(void (**)(unint64_t))(v4 + 16);
  v93 = v6;
  v92(v33 + v32);
  sub_1C0AA7870();
  sub_1C07ACF80(&qword_1ED755268);
  v34 = *(_QWORD *)(sub_1C106EB24() - 8);
  v35 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_1C1079220;
  (*(void (**)(unint64_t))(v34 + 16))(v36 + v35);
  sub_1C0AA91AC();
  *(_OWORD *)(sub_1C0776A60() + 16) = xmmword_1C1079220;
  sub_1C106E218();
  sub_1C0AA7870();
  sub_1C07A270C(v95);
  sub_1C07A270C(v97);
  sub_1C07A270C(v84);
  sub_1C07A270C(v85);
  sub_1C07A270C(v86);
  sub_1C106D864();
  sub_1C0775844();
  sub_1C077B5B4();
  sub_1C07785A0();
  sub_1C0778580();
  sub_1C07A5E68(v86);
  sub_1C07A5E68(v85);
  sub_1C07A5E68(v84);
  v37 = (void (*)(uint64_t, uint64_t, uint64_t))v92;
  sub_1C07A5E68(v97);
  sub_1C07A5E68(v95);
  v38 = sub_1C106EB78();
  sub_1C0AC70AC(v87, v39, v40, v38);
  v41 = v88(v94, v87);
  sub_1C0A6D714(v87);
  swift_release();
  v42 = v89;
  v43 = 0;
  v98 = v41;
  if (!*(_QWORD *)(v41 + 16))
  {
    v44 = v79;
    if (qword_1ED762B18 != -1)
      goto LABEL_31;
    while (1)
    {
      v45 = sub_1C106F544();
      sub_1C079E000(v45, (uint64_t)qword_1ED762AF8);
      sub_1C07A9FC0(v101, (uint64_t)v78);
      sub_1C07A9FC0(v101, v44);
      v46 = sub_1C106F538();
      v47 = sub_1C1070390();
      if (os_log_type_enabled(v46, v47))
      {
        v48 = sub_1C0775854();
        v102 = sub_1C0775854();
        *(_DWORD *)v48 = 136315394;
        sub_1C0794BAC(&qword_1EF639B28, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D450], MEMORY[0x1E0D3D488]);
        v49 = sub_1C1070C0C();
        sub_1C079BDF0(v49, v50);
        sub_1C10705AC();
        sub_1C077960C();
        sub_1C07B41E8((uint64_t)v78);
        *(_WORD *)(v48 + 12) = 2080;
        sub_1C0794BAC((unint64_t *)&qword_1ED7625A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE60]);
        v51 = sub_1C1070C0C();
        sub_1C079BDF0(v51, v52);
        sub_1C10705AC();
        sub_1C077960C();
        sub_1C07B41E8(v44);
        _os_log_impl(&dword_1C0771000, v46, v47, "GraphValidator: PS1 predicate does not exist for nested predicate %s with IntelligencePlatformID %s", (uint8_t *)v48, 0x16u);
        swift_arrayDestroy();
        sub_1C0776778();
      }
      sub_1C07B41E8((uint64_t)v78);
      sub_1C07B41E8(v44);

      v102 = 0;
      v103 = 0xE000000000000000;
      sub_1C1070774();
      sub_1C077C244();
      v102 = 0x3A7463656A627573;
      v103 = 0xE900000000000020;
      sub_1C0794BAC((unint64_t *)&qword_1ED7625A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE60]);
      sub_1C1070C0C();
      sub_1C079108C();
      sub_1C07767AC();
      sub_1C106FC94();
      sub_1C0794BAC(&qword_1EF639B28, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D450], MEMORY[0x1E0D3D488]);
      sub_1C1070C0C();
      sub_1C079108C();
      sub_1C07767AC();
      sub_1C106FC94();
      sub_1C0794BAC(&qword_1EF632CD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC90]);
      sub_1C1070C0C();
      sub_1C079108C();
      sub_1C07767AC();
      sub_1C077992C();
      sub_1C07AB820();
      sub_1C078E070();
      sub_1C079DCB8(0xD000000000000021);
      sub_1C079E574();
      if (v55)
        break;
      v56 = v53;
      v57 = v54;
      sub_1C07ACF80(&qword_1ED7601B0);
      if ((sub_1C07BC81C() & 1) != 0)
      {
        sub_1C079DCB8(0xD000000000000021);
        sub_1C0789DBC();
        if (!v59)
          goto LABEL_34;
        v56 = v58;
      }
      sub_1C077B23C();
      v60 = *v78;
      sub_1C077AE90();
      if ((v57 & 1) == 0)
        sub_1C07B5F90(v56, 0xD000000000000021, 0x80000001C10FBAE0, MEMORY[0x1E0DEE9E8]);
      v44 = *(_QWORD *)(v60 + 56);
      sub_1C077960C();
      sub_1C07A1E08((uint64_t)&v102);
      sub_1C077C244();
      v41 = v98;
      if (*(_QWORD *)(v98 + 16))
      {
        v43 = sub_1C095BAE8;
        v37 = (void (*)(uint64_t, uint64_t, uint64_t))v92;
        v42 = v89;
        goto LABEL_14;
      }
      __break(1u);
LABEL_31:
      swift_once();
    }
    __break(1u);
    goto LABEL_33;
  }
LABEL_14:
  v96 = (uint64_t)v43;
  v61 = v41 + ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80));
  sub_1C078DBD4(v61, v83);
  v37(v91, v83 + *(int *)(v93 + 20), v100);
  sub_1C07816F0();
  sub_1C106E1E8();
  v90 = *(void (**)(uint64_t, uint64_t))(v82 + 8);
  v90(v91, v100);
  sub_1C078DBD4(v61, v81);
  sub_1C077AEBC();
  sub_1C07B2018(v81, v99);
  v62 = sub_1C0C515D4();
  sub_1C077B5B4();
  sub_1C0775894();
  sub_1C106E1E8();
  sub_1C078DBD4(v61, v83);
  sub_1C077C0B8();
  sub_1C07816F0();
  v63 = sub_1C0C512A8();
  swift_bridgeObjectRelease();
  sub_1C077B5B4();
  v64 = *(_QWORD *)(v63 + 16);
  sub_1C077960C();
  if (v64)
  {
    v65 = *(_QWORD *)(v62 + 16);
    sub_1C0778580();
    sub_1C079FFC4();
    if (v65)
    {
      sub_1C078C2C8();
      sub_1C07AD234(v64);
LABEL_20:
      v67 = sub_1C078BE04();
      goto LABEL_29;
    }
  }
  else
  {
    sub_1C0778580();
    sub_1C079FFC4();
  }
  sub_1C106E218();
  sub_1C0794BAC((unint64_t *)&qword_1ED75EA30, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC78]);
  v66 = sub_1C106FAA8();
  v90(v91, v100);
  sub_1C07AD234(v64);
  if ((v66 & 1) != 0)
  {
    sub_1C078C2C8();
    goto LABEL_20;
  }
  v102 = 0;
  v103 = 0xE000000000000000;
  sub_1C079EF28();
  ((void (*)(uint64_t, uint64_t, uint64_t))v92)(v91, v83 + *(int *)(v93 + 20), v100);
  sub_1C07AD234(v83);
  sub_1C0794BAC(&qword_1EF632CD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC90]);
  v70 = sub_1C078897C();
  v72 = v71;
  sub_1C077C244();
  v102 = v70;
  v103 = v72;
  v90(v91, v100);
  sub_1C077992C();
  sub_1C079EF28();
  sub_1C078C2C8();
  sub_1C077AEBC();
  sub_1C07AD234(v83);
  sub_1C106FC94();
  sub_1C077B5B4();
  sub_1C077992C();
  sub_1C078897C();
  sub_1C079108C();
  sub_1C07767AC();
  sub_1C07AB820();
  sub_1C078E070();
  sub_1C07AEF54();
  sub_1C079E574();
  if (!v55)
  {
    v75 = v73;
    v76 = v74;
    sub_1C07ACF80(&qword_1ED7601B0);
    if ((sub_1C07BC81C() & 1) != 0)
    {
      sub_1C07AEF54();
      sub_1C0789DBC();
      if (!v59)
        goto LABEL_34;
      v75 = v77;
    }
    sub_1C077B23C();
    sub_1C077AE90();
    if ((v76 & 1) == 0)
      sub_1C07B5F90(v75, 0xD000000000000019, 0x80000001C10FBB40, MEMORY[0x1E0DEE9E8]);
    sub_1C077960C();
    sub_1C07A1E08((uint64_t)&v102);
    sub_1C077C244();
    v67 = sub_1C078BE04();
    v68 = v80;
LABEL_29:
    v69(v67, v68);
    sub_1C077AB58(v96);
    sub_1C0776760();
    return;
  }
LABEL_33:
  __break(1u);
LABEL_34:
  sub_1C1070D44();
  __break(1u);
}

void sub_1C0AC5410()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t (*v4)(_QWORD);
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  void (*v43)(unint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  __n128 *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(_QWORD);
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  void (*v78)(uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  NSObject *v82;
  os_log_type_t v83;
  uint8_t *v84;
  uint64_t v85;
  unint64_t v86;
  __n128 *v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  char v91;
  uint64_t v92;
  char v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  uint64_t v98;
  _QWORD *v99;
  __n128 *inited;
  unint64_t v101;
  _QWORD v102[2];
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t (*v119)(_QWORD);
  uint64_t v120;
  uint64_t (*v121)(uint64_t, uint64_t);
  __int128 v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131[4];
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;

  sub_1C0779670();
  v110 = v1;
  v109 = v2;
  v121 = v3;
  v5 = v4;
  v123 = v0;
  v108 = v6;
  v8 = v7;
  v9 = sub_1C106EB24();
  sub_1C077B58C(v9, (uint64_t)&v130);
  sub_1C0787718(v10);
  MEMORY[0x1E0C80A78](v11);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v12);
  sub_1C0778674();
  v104 = v13;
  v119 = v5;
  v14 = v5(0);
  sub_1C077B58C(v14, (uint64_t)&v132);
  sub_1C0787718(v15);
  MEMORY[0x1E0C80A78](v16);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v17);
  sub_1C0778674();
  v103 = v18;
  sub_1C07ACF80(&qword_1ED756690);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v19);
  sub_1C077AE40();
  v118 = v20;
  v21 = sub_1C0778768();
  sub_1C0787718(*(_QWORD *)(v21 - 8));
  MEMORY[0x1E0C80A78](v22);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)v102 - v24;
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)v102 - v27;
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)v102 - v30;
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)v102 - v33;
  v35 = sub_1C106D9B4();
  sub_1C077B58C(v35, (uint64_t)&v133);
  sub_1C0787718(v36);
  MEMORY[0x1E0C80A78](v37);
  sub_1C077AE40();
  v124 = v38;
  sub_1C07ACF80(&qword_1ED762B80);
  v134 = sub_1C106F97C();
  sub_1C07ACF80(&qword_1ED7603D8);
  v39 = sub_1C106E590();
  v40 = *(_QWORD *)(v39 - 8);
  v41 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  v42 = swift_allocObject();
  v122 = xmmword_1C1079220;
  *(_OWORD *)(v42 + 16) = xmmword_1C1079220;
  v43 = *(void (**)(unint64_t, uint64_t, uint64_t))(v40 + 16);
  v120 = v8;
  v102[1] = v39;
  v43(v42 + v41, v8, v39);
  sub_1C0AA8F40();
  v116 = v44;
  sub_1C07ACF80(&qword_1ED75E838);
  v45 = sub_1C106E41C();
  sub_1C077B58C(v45, (uint64_t)&v125);
  v46 = (__n128 *)swift_allocObject();
  sub_1C07B8440(v46);
  sub_1C106E218();
  sub_1C0AA7870();
  v115 = v34;
  sub_1C0797258((uint64_t)v34);
  sub_1C0797258((uint64_t)v31);
  v47 = (uint64_t)v28;
  sub_1C0797258((uint64_t)v28);
  v48 = (uint64_t)v25;
  sub_1C0797258((uint64_t)v25);
  v49 = v117;
  sub_1C0797258(v117);
  v50 = v124;
  sub_1C106D864();
  swift_bridgeObjectRelease();
  sub_1C0778580();
  sub_1C0796620(v49);
  sub_1C0796620(v48);
  sub_1C0796620(v47);
  sub_1C0796620((uint64_t)v31);
  sub_1C0796620((uint64_t)v115);
  v51 = sub_1C106EB78();
  v52 = v118;
  sub_1C0AC70AC(v118, v53, v54, v51);
  v55 = v50;
  v56 = v52;
  v57 = v121(v55, v52);
  sub_1C0A6D714(v56);
  swift_release();
  if (*(_QWORD *)(v57 + 16))
  {
    sub_1C07787F0();
    v59 = v111;
    v60 = v119;
    sub_1C083F944(v57 + v58, v111, v119);
    sub_1C07767AC();
    v61 = v112;
    v62 = (uint64_t *)(v59 + *(int *)(v112 + 32));
    v64 = *v62;
    v63 = v62[1];
    sub_1C07767B4();
    sub_1C07B2018(v59, v60);
    v65 = sub_1C0C4FE6C();
    if (v65 >> 62)
      v66 = sub_1C10709B4();
    else
      v66 = *(_QWORD *)((v65 & 0xFFFFFFFFFFFFF8) + 0x10);
    v67 = v120;
    sub_1C077960C();
    if (v66)
    {
      sub_1C106E1E8();
      v68 = sub_1C0C512A8();
      sub_1C077B5B4();
      v69 = *(_QWORD *)(v68 + 16);
      sub_1C077960C();
      if (!v69)
      {
        v98 = sub_1C089AA80(0xD000000000000012, 0x80000001C10FBAA0, v134);
        swift_bridgeObjectRelease();
        if (v98)
        {
          sub_1C0D56AC8(&v128, 0xD000000000000012, 0x80000001C10FBAA0);
          if (!*v99)
          {
            sub_1C07767AC();
            sub_1C07AFD8C();
            goto LABEL_7;
          }
          v126 = 40;
          v127 = 0xE100000000000000;
          sub_1C0793C30();
          sub_1C07767AC();
          sub_1C0780B88();
          sub_1C0794BAC(&qword_1EF632CD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC90]);
          sub_1C07946B0();
          sub_1C106FC94();
          sub_1C07767AC();
          sub_1C077992C();
          sub_1C0A7D28C((uint64_t)v131, v126, v127);
          sub_1C07AFD8C();
        }
        else
        {
          sub_1C07ACF80(&qword_1ED762CB0);
          inited = (__n128 *)swift_initStackObject();
          sub_1C07B8440(inited);
          v128 = 40;
          v129 = 0xE100000000000000;
          sub_1C0793C30();
          sub_1C07767AC();
          sub_1C0780B88();
          sub_1C0794BAC(&qword_1EF632CD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC90]);
          sub_1C07946B0();
          sub_1C106FC94();
          sub_1C07767AC();
          sub_1C077992C();
          v101 = v129;
          inited[2].n128_u64[0] = v128;
          inited[2].n128_u64[1] = v101;
          sub_1C0898D28((uint64_t)inited);
          sub_1C0795AC4();
          v128 = (uint64_t)&v128;
          sub_1C08A12C4();
          v134 = v128;
        }
      }
      swift_bridgeObjectRelease();
LABEL_7:
      v70 = v114;
      v71 = v113;
      v72 = v67 + *(int *)(v61 + 24);
      v73 = v106;
      v74 = v104;
      v75 = v107;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v106 + 16))(v104, v72, v107);
      v76 = v105;
      sub_1C106EB0C();
      sub_1C0794BAC(qword_1ED75EA50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D450], MEMORY[0x1E0D3D478]);
      v77 = sub_1C106FAA8();
      v78 = *(void (**)(uint64_t, uint64_t))(v73 + 8);
      v78(v76, v75);
      v78(v74, v75);
      if ((v77 & 1) == 0)
        sub_1C0AC4798();
      sub_1C0AC6980();
      (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v124, v70);
      goto LABEL_24;
    }
    sub_1C07ACF80(&qword_1ED762CB0);
    v87 = (__n128 *)swift_initStackObject();
    sub_1C07B8440(v87);
    *(_QWORD *)(v88 + 32) = v64;
    *(_QWORD *)(v88 + 40) = v63;
    sub_1C0898D28(v88);
    sub_1C0795AC4();
    v128 = v65;
    sub_1C08A12C4();
    v134 = v128;
LABEL_23:
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v124, v114);
LABEL_24:
    sub_1C0776760();
    return;
  }
  v79 = v103;
  sub_1C07767AC();
  if (qword_1ED762B18 != -1)
    swift_once();
  v80 = sub_1C106F544();
  sub_1C079E000(v80, (uint64_t)qword_1ED762AF8);
  v81 = v120;
  sub_1C07A9FC0(v120, v79);
  v82 = sub_1C106F538();
  v83 = sub_1C1070390();
  if (os_log_type_enabled(v82, v83))
  {
    v84 = (uint8_t *)sub_1C0775854();
    v128 = sub_1C0775854();
    *(_DWORD *)v84 = 136315138;
    sub_1C0794BAC((unint64_t *)&qword_1ED7625A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE60]);
    v85 = sub_1C1070C0C();
    v131[0] = sub_1C0788DAC(v85, v86, &v128);
    sub_1C10705AC();
    sub_1C077960C();
    sub_1C07B41E8(v79);
    _os_log_impl(&dword_1C0771000, v82, v83, "GraphValidator: PS1 predicate does not exist for %s", v84, 0xCu);
    swift_arrayDestroy();
    sub_1C0776778();
  }
  sub_1C07B41E8(v79);

  sub_1C0794BAC((unint64_t *)&qword_1ED7625A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE60]);
  sub_1C1070C0C();
  sub_1C0795AC4();
  v128 = v81;
  sub_1C079DCB8(0xD000000000000021);
  sub_1C079E574();
  if (!v91)
  {
    v92 = v89;
    v93 = v90;
    sub_1C07ACF80(&qword_1ED7601B0);
    v94 = sub_1C07BC81C();
    v95 = v128;
    if ((v94 & 1) != 0)
    {
      sub_1C079DCB8(0xD000000000000021);
      sub_1C0789DBC();
      if (!v97)
        goto LABEL_32;
      v92 = v96;
    }
    v134 = v95;
    sub_1C077970C();
    sub_1C077AE90();
    if ((v93 & 1) == 0)
      sub_1C07B5F90(v92, 0xD000000000000021, 0x80000001C10FBAE0, MEMORY[0x1E0DEE9E8]);
    sub_1C077960C();
    sub_1C07A1E08((uint64_t)&v128);
    goto LABEL_23;
  }
  __break(1u);
LABEL_32:
  sub_1C1070D44();
  __break(1u);
}

void sub_1C0AC5EF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void (*v9)(uint64_t, _QWORD);
  uint64_t v10;
  uint64_t inited;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  char v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  void (*v39)(uint64_t, _QWORD);
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char v55;
  unint64_t v56;
  char v57;
  unint64_t v58;
  char v59;
  char v60;
  unint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t, _QWORD);
  void (*v66)(uint64_t, _QWORD);
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD v78[9];

  sub_1C0779670();
  v1 = type metadata accessor for EventTriple(0);
  sub_1C0787718(*(_QWORD *)(v1 - 8));
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for GraphTriple(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = GraphStore.loadGraphTriples()();
  v65 = GraphStore.loadEventTriples()();
  v71 = sub_1C07ACF80(&qword_1ED762B80);
  v10 = sub_1C106F97C();
  sub_1C07ACF80(&qword_1EF63A8C8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1079220;
  *(_QWORD *)(inited + 32) = 0xD00000000000001DLL;
  *(_QWORD *)(inited + 40) = 0x80000001C10FBA80;
  v73 = v0;
  v12 = type metadata accessor for GraphValidator.TriplePredicateCountValidator();
  v13 = swift_allocObject();
  swift_retain();
  sub_1C0AC669C();
  *(_QWORD *)(inited + 48) = v13;
  v74 = sub_1C106F97C();
  v69 = (char *)*((_QWORD *)v9 + 2);
  v70 = v4;
  if (v69)
  {
    v14 = 0;
    v68 = (char *)v9 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v66 = v9;
    v67 = v6;
    v72 = v8;
    while (1)
    {
      if (v14 >= *((_QWORD *)v9 + 2))
        goto LABEL_104;
      v15 = *(_QWORD *)(v6 + 72);
      v75 = v14;
      sub_1C083F944((uint64_t)&v68[v15 * v14], (uint64_t)v8, type metadata accessor for GraphTriple);
      sub_1C089C7F4();
      sub_1C0AC5410();
      v17 = v16;
      sub_1C07767AC();
      if (*(_QWORD *)(v17 + 16))
        break;
      sub_1C07B2018((uint64_t)v8, type metadata accessor for GraphTriple);
      sub_1C0778580();
LABEL_48:
      v14 = v75 + 1;
      v9 = v66;
      v6 = v67;
      if ((char *)(v75 + 1) == v69)
        goto LABEL_49;
    }
    v18 = 0;
    v19 = v17 + 64;
    sub_1C07A4808();
    while (1)
    {
      while (1)
      {
        while (1)
        {
          if (v12)
          {
            sub_1C07A86A4();
          }
          else
          {
            if (__OFADD__(v18, 1))
            {
              __break(1u);
LABEL_99:
              __break(1u);
              goto LABEL_100;
            }
            sub_1C07AA3F0();
            if (v22 == v23)
              goto LABEL_46;
            v18 = v21;
            if (!*(_QWORD *)(v19 + 8 * v21))
            {
              v18 = v21 + 1;
              sub_1C07BCEF4();
              if (v22 == v23)
                goto LABEL_46;
              if (!*(_QWORD *)(v19 + 8 * v18))
              {
                v18 = v24 + 2;
                sub_1C07BCEF4();
                if (v22 == v23)
                  goto LABEL_46;
                if (!*(_QWORD *)(v19 + 8 * v18))
                {
                  sub_1C07AA3F0();
                  if (v22 == v23)
                  {
LABEL_46:
                    sub_1C07767F4();
                    sub_1C07B2018((uint64_t)v8, type metadata accessor for GraphTriple);
                    v4 = v70;
                    goto LABEL_48;
                  }
                  if (!*(_QWORD *)(v19 + 8 * v25))
                  {
                    while (1)
                    {
                      v18 = v25 + 1;
                      if (__OFADD__(v25, 1))
                        break;
                      sub_1C07BCEF4();
                      if (v22 == v23)
                        goto LABEL_46;
                      v25 = v26 + 1;
                      if (*(_QWORD *)(v19 + 8 * v18))
                        goto LABEL_26;
                    }
LABEL_100:
                    __break(1u);
                    goto LABEL_101;
                  }
                  v18 = v25;
                }
              }
            }
LABEL_26:
            sub_1C079CDFC();
          }
          v27 = *(_QWORD *)(*(_QWORD *)(v17 + 56) + 8 * v20);
          v28 = *(_QWORD *)(v10 + 16);
          sub_1C077E6D0();
          sub_1C07767B4();
          if (v28)
          {
            sub_1C07A0DA0();
            if ((v29 & 1) != 0)
              break;
          }
          sub_1C079AAA4();
          v78[0] = v10;
          sub_1C07A0DA0();
          sub_1C079E574();
          if (v23)
            goto LABEL_102;
          v33 = v31;
          v34 = v32;
          sub_1C07ACF80(&qword_1ED7601B0);
          v35 = sub_1C07BC81C();
          v8 = v72;
          if ((v35 & 1) != 0)
          {
            v36 = sub_1C07B9760();
            if ((v34 & 1) != (v37 & 1))
              goto LABEL_108;
            v33 = v36;
          }
          v10 = v78[0];
          if ((v34 & 1) != 0)
          {
            sub_1C07B1DC8();
            v78[v33] = v27;
          }
          else
          {
            sub_1C07A3B64();
            if (v23)
              goto LABEL_105;
            *(_QWORD *)(v10 + 16) = v38;
            sub_1C077E6D0();
          }
          sub_1C07785A0();
          sub_1C077970C();
          v19 = v76;
          v17 = v77;
        }
        if (*(_QWORD *)(v10 + 16))
          break;
LABEL_32:
        sub_1C07767AC();
        sub_1C077C0B8();
        sub_1C07A0DA0();
        sub_1C07B72D4();
        if ((v28 & 1) != 0)
        {
          v19 = sub_1C079AAA4();
          v78[0] = v10;
          v17 = *(_QWORD *)(v10 + 24);
          sub_1C07ACF80(&qword_1ED7601B0);
          sub_1C078CB24();
          sub_1C079C5F8();
          sub_1C0775B28();
          sub_1C1070924();
          sub_1C077960C();
          goto LABEL_45;
        }
        sub_1C07785A0();
      }
      sub_1C077E6D0();
      sub_1C07A0DA0();
      if ((v30 & 1) == 0)
      {
        sub_1C07767AC();
        goto LABEL_32;
      }
      sub_1C077AE90();
      sub_1C07785A0();
      sub_1C078A444();
      sub_1C079AAA4();
      sub_1C0793C14();
      v10 = v78[0];
LABEL_45:
      sub_1C07785A0();
      sub_1C077970C();
    }
  }
LABEL_49:
  sub_1C07767AC();
  v39 = v65;
  v72 = (char *)*((_QWORD *)v65 + 2);
  if (!v72)
  {
LABEL_97:
    swift_bridgeObjectRelease();
    sub_1C07767AC();
    sub_1C0776760();
    return;
  }
  sub_1C07787F0();
  v69 = (char *)v39 + v41;
  while (1)
  {
    if (v40 >= *((_QWORD *)v39 + 2))
      goto LABEL_106;
    v42 = *(_QWORD *)(v64 + 72);
    v75 = v40;
    sub_1C083F944((uint64_t)&v69[v42 * v40], (uint64_t)v4, type metadata accessor for EventTriple);
    sub_1C089C7F4();
    sub_1C0AC5410();
    v44 = v43;
    sub_1C07767AC();
    if (*(_QWORD *)(v44 + 16))
      break;
    sub_1C0779934();
    sub_1C0775844();
LABEL_96:
    v40 = v75 + 1;
    v39 = v65;
    if ((char *)(v75 + 1) == v72)
      goto LABEL_97;
  }
  v45 = 0;
  v46 = v44 + 64;
  sub_1C07A4808();
  while (1)
  {
    if (v12)
    {
      sub_1C07A86A4();
      goto LABEL_75;
    }
    if (__OFADD__(v45, 1))
      goto LABEL_99;
    sub_1C07AA3F0();
    if (v22 == v23)
    {
LABEL_94:
      swift_release();
      v4 = v70;
      sub_1C0779934();
      goto LABEL_96;
    }
    v45 = v48;
    if (!*(_QWORD *)(v46 + 8 * v48))
    {
      v45 = v48 + 1;
      sub_1C07BCEF4();
      if (v22 == v23)
        goto LABEL_94;
      if (!*(_QWORD *)(v46 + 8 * v45))
      {
        v45 = v49 + 2;
        sub_1C07BCEF4();
        if (v22 == v23)
          goto LABEL_94;
        if (!*(_QWORD *)(v46 + 8 * v45))
          break;
      }
    }
LABEL_74:
    sub_1C079CDFC();
LABEL_75:
    v52 = *(_QWORD *)(*(_QWORD *)(v44 + 56) + 8 * v47);
    v53 = *(_QWORD *)(v10 + 16);
    sub_1C077E6D0();
    sub_1C07767B4();
    if (v53 && (sub_1C07A0DA0(), (v54 & 1) != 0))
    {
      if (!*(_QWORD *)(v10 + 16))
        goto LABEL_80;
      sub_1C077E6D0();
      sub_1C07A0DA0();
      if ((v55 & 1) != 0)
      {
        sub_1C077AE90();
        sub_1C07785A0();
        sub_1C078A444();
        sub_1C079AAA4();
        sub_1C0793C14();
        v10 = v78[0];
LABEL_93:
        sub_1C07785A0();
        sub_1C077970C();
      }
      else
      {
        sub_1C07767AC();
LABEL_80:
        sub_1C07767AC();
        sub_1C077C0B8();
        sub_1C07A0DA0();
        sub_1C07B72D4();
        if ((v53 & 1) != 0)
        {
          v44 = sub_1C079AAA4();
          v78[0] = v10;
          v46 = *(_QWORD *)(v10 + 24);
          sub_1C07ACF80(&qword_1ED7601B0);
          sub_1C078CB24();
          sub_1C079C5F8();
          sub_1C0775B28();
          sub_1C1070924();
          sub_1C077960C();
          goto LABEL_93;
        }
        sub_1C07785A0();
      }
    }
    else
    {
      sub_1C079AAA4();
      v78[0] = v10;
      sub_1C07A0DA0();
      sub_1C079E574();
      if (v23)
        goto LABEL_103;
      v58 = v56;
      v59 = v57;
      sub_1C07ACF80(&qword_1ED7601B0);
      v60 = sub_1C07BC81C();
      v46 = v77;
      if ((v60 & 1) != 0)
      {
        v61 = sub_1C07B9760();
        if ((v59 & 1) != (v62 & 1))
          goto LABEL_108;
        v58 = v61;
      }
      v10 = v78[0];
      if ((v59 & 1) != 0)
      {
        sub_1C07B1DC8();
        v78[v58] = v52;
      }
      else
      {
        sub_1C07A3B64();
        if (v23)
          goto LABEL_107;
        *(_QWORD *)(v10 + 16) = v63;
        sub_1C077E6D0();
      }
      sub_1C07785A0();
      sub_1C077970C();
      v44 = v76;
    }
  }
  sub_1C07AA3F0();
  if (v22 == v23)
    goto LABEL_94;
  if (*(_QWORD *)(v46 + 8 * v50))
  {
    v45 = v50;
    goto LABEL_74;
  }
  while (1)
  {
    v45 = v50 + 1;
    if (__OFADD__(v50, 1))
      break;
    sub_1C07BCEF4();
    if (v22 == v23)
      goto LABEL_94;
    v50 = v51 + 1;
    if (*(_QWORD *)(v46 + 8 * v45))
      goto LABEL_74;
  }
LABEL_101:
  __break(1u);
LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  __break(1u);
LABEL_105:
  __break(1u);
LABEL_106:
  __break(1u);
LABEL_107:
  __break(1u);
LABEL_108:
  sub_1C1070D44();
  __break(1u);
}

void sub_1C0AC669C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v0 = sub_1C0C50470();
  v1 = *(_QWORD *)(v0 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v3 = (_BYTE *)(v0 + 72);
    do
    {
      if ((*v3 & 1) == 0)
      {
        v4 = *((_QWORD *)v3 - 4);
        v21 = *((_QWORD *)v3 - 5);
        v5 = *((_QWORD *)v3 - 3);
        v6 = *((_QWORD *)v3 - 2);
        v7 = *((_QWORD *)v3 - 1);
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        sub_1C077C0B8();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1C09D47D0();
        v8 = *(_QWORD *)(v2 + 16);
        if (v8 >= *(_QWORD *)(v2 + 24) >> 1)
          sub_1C09D47D0();
        *(_QWORD *)(v2 + 16) = v8 + 1;
        v9 = v2 + 48 * v8;
        *(_QWORD *)(v9 + 32) = v21;
        *(_QWORD *)(v9 + 40) = v4;
        *(_QWORD *)(v9 + 48) = v5;
        *(_QWORD *)(v9 + 56) = v6;
        *(_QWORD *)(v9 + 64) = v7;
        *(_BYTE *)(v9 + 72) = 0;
      }
      v3 += 48;
      --v1;
    }
    while (v1);
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(v2 + 16);
  if (v10)
  {
    v22 = MEMORY[0x1E0DEE9D8];
    sub_1C09D479C();
    v11 = v22;
    v12 = (_BYTE *)(v2 + 72);
    while ((*v12 & 1) == 0)
    {
      v14 = *((_QWORD *)v12 - 5);
      v13 = *((_QWORD *)v12 - 4);
      v15 = *((_QWORD *)v12 - 1);
      v17 = *(_QWORD *)(v22 + 16);
      v16 = *(_QWORD *)(v22 + 24);
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      if (v17 >= v16 >> 1)
        sub_1C09D479C();
      *(_QWORD *)(v22 + 16) = v17 + 1;
      v18 = (_QWORD *)(v22 + 24 * v17);
      v18[4] = v14;
      v18[5] = v13;
      v18[6] = v15;
      v12 += 48;
      if (!--v10)
      {
        sub_1C07767F4();
        goto LABEL_18;
      }
    }
    __break(1u);
  }
  else
  {
    sub_1C07767F4();
    v11 = MEMORY[0x1E0DEE9D8];
LABEL_18:
    v19 = sub_1C0D9A038(v11);
    swift_release();
    *(_QWORD *)(v20 + 16) = v19;
    *(_QWORD *)(v20 + 24) = v19;
    sub_1C077AE90();
  }
}

uint64_t sub_1C0AC68AC()
{
  sub_1C0AC68D8((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
  sub_1C077D228();
  return swift_deallocClassInstance();
}

void GraphValidator.deinit()
{
  sub_1C0AC68D8((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

void sub_1C0AC68D8(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16));
  a1(*(_QWORD *)(v1 + 24));
  sub_1C0778534();
}

uint64_t GraphValidator.__deallocating_deinit()
{
  GraphValidator.deinit();
  sub_1C077D228();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for GraphValidator()
{
  return objc_opt_self();
}

uint64_t method lookup function for GraphValidator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of GraphValidator.__allocating_init(config:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t type metadata accessor for GraphValidator.TriplePredicateCountValidator()
{
  return objc_opt_self();
}

void sub_1C0AC6980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  uint64_t (*v3)(_QWORD);
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  char v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  _QWORD *v35;
  _QWORD *v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  char v40;
  unint64_t v41;
  char v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  int64_t v50;
  uint64_t (*v51)(_QWORD);
  int64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  _QWORD *v57;
  _QWORD v58[4];
  uint64_t v59;

  sub_1C0779670();
  v54 = v0;
  v55 = v1;
  v3 = v2;
  v57 = v4;
  v6 = v5;
  v8 = v7;
  v9 = v2(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v48 - v10;
  sub_1C083F944(v6, (uint64_t)&v48 - v10, v3);
  v12 = *(_QWORD *)(v8 + 64);
  v49 = v8 + 64;
  v13 = 1 << *(_BYTE *)(v8 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v50 = (unint64_t)(v13 + 63) >> 6;
  sub_1C077AEBC();
  v16 = 0;
  v51 = v3;
  v48 = v11;
  while (v15)
  {
    v17 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    v18 = v17 | (v16 << 6);
LABEL_29:
    v29 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    v30 = *v29;
    v31 = v29[1];
    sub_1C07767C4();
    swift_unknownObjectRetain();
    sub_1C0AC6D88();
    if (v32)
    {
      v56 = v15;
      if (*(_QWORD *)(*v57 + 16) && (sub_1C07767C4(), sub_1C0781E80(v30), v34 = v33, sub_1C0775894(), (v34 & 1) != 0))
      {
        sub_1C0D56AC8(v58, v30, v31);
        if (*v35)
        {
          sub_1C077F810((uint64_t)&v59);
          sub_1C07B9B28();
          sub_1C0775894();
          sub_1C077E6B4();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1C0775844();
          sub_1C07B9B28();
          sub_1C0775894();
          sub_1C077E6B4();
        }
        v15 = v56;
        v3 = v51;
      }
      else
      {
        v52 = v16;
        v59 = sub_1C1070234();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        sub_1C077F810((uint64_t)v58);
        sub_1C0775844();
        sub_1C07767AC();
        v53 = v59;
        v36 = v57;
        swift_isUniquelyReferenced_nonNull_native();
        v58[0] = *v36;
        *v36 = 0x8000000000000000;
        sub_1C0781E80(v30);
        sub_1C079E574();
        if (v22)
        {
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
          goto LABEL_50;
        }
        v39 = v37;
        v40 = v38;
        sub_1C07ACF80(&qword_1ED7601B0);
        if ((sub_1C07BC81C() & 1) != 0)
        {
          v41 = sub_1C0781E80(v30);
          if ((v40 & 1) != (v42 & 1))
            goto LABEL_51;
          v39 = v41;
        }
        v43 = (_QWORD *)v58[0];
        if ((v40 & 1) != 0)
        {
          v44 = *(_QWORD *)(v58[0] + 56);
          swift_bridgeObjectRelease();
          *(_QWORD *)(v44 + 8 * v39) = v53;
        }
        else
        {
          *(_QWORD *)(v58[0] + 8 * (v39 >> 6) + 64) |= 1 << v39;
          v45 = (uint64_t *)(v43[6] + 16 * v39);
          *v45 = v30;
          v45[1] = v31;
          *(_QWORD *)(v43[7] + 8 * v39) = v53;
          v46 = v43[2];
          v22 = __OFADD__(v46, 1);
          v47 = v46 + 1;
          if (v22)
            goto LABEL_49;
          v43[2] = v47;
          sub_1C07767C4();
        }
        *v57 = v43;
        sub_1C077E6B4();
        sub_1C0775894();
        sub_1C07767AC();
        v3 = v51;
        v16 = v52;
        v11 = v48;
        v15 = v56;
      }
    }
    else
    {
      sub_1C077E6B4();
      sub_1C0775894();
    }
  }
  v19 = v16 + 1;
  if (__OFADD__(v16, 1))
    goto LABEL_48;
  if (v19 >= v50)
  {
LABEL_46:
    swift_release();
    sub_1C07B2018((uint64_t)v11, v3);
    sub_1C0776760();
    return;
  }
  v20 = *(_QWORD *)(v49 + 8 * v19);
  ++v16;
  if (v20)
    goto LABEL_28;
  v16 = v19 + 1;
  sub_1C07B7BDC();
  if (v21 == v22)
    goto LABEL_46;
  sub_1C077C3C4();
  if (v20)
    goto LABEL_28;
  v16 = v23 + 2;
  sub_1C07B7BDC();
  if (v21 == v22)
    goto LABEL_46;
  sub_1C077C3C4();
  if (v20)
    goto LABEL_28;
  v16 = v24 + 3;
  sub_1C07B7BDC();
  if (v21 == v22)
    goto LABEL_46;
  sub_1C077C3C4();
  if (v20)
    goto LABEL_28;
  v16 = v25 + 4;
  sub_1C07B7BDC();
  if (v21 == v22)
    goto LABEL_46;
  sub_1C077C3C4();
  if (v20)
  {
LABEL_28:
    v15 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v16 << 6);
    goto LABEL_29;
  }
  v27 = v26 + 5;
  if (v27 >= v50)
    goto LABEL_46;
  v20 = *(_QWORD *)(v49 + 8 * v27);
  if (v20)
  {
    v16 = v27;
    goto LABEL_28;
  }
  while (1)
  {
    v16 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    sub_1C07B7BDC();
    if (v21 == v22)
      goto LABEL_46;
    sub_1C077C3C4();
    v27 = v28 + 1;
    if (v20)
      goto LABEL_28;
  }
LABEL_50:
  __break(1u);
LABEL_51:
  sub_1C1070D44();
  __break(1u);
}

uint64_t sub_1C0AC6D88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t *v6;
  uint64_t (*v7)(uint64_t);
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53[3];
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  sub_1C0779670();
  v56 = v1;
  v57 = v2;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v11 = sub_1C07ABD20();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  sub_1C077AED0();
  v46 = v13;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v45 - v15;
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v45 - v19;
  v21 = ((uint64_t (*)(_QWORD, double))v8)(0, v18);
  v54 = v21;
  sub_1C0794BAC(v6, v8, v4);
  v55 = v22;
  v23 = sub_1C079DFC4(v53);
  sub_1C07A9FC0(v0, (uint64_t)v23);
  v48 = sub_1C07A9480(v53, v54);
  sub_1C078506C((uint64_t)v20, (uint64_t)v23 + *(int *)(v21 + 20));
  v24 = sub_1C106E1E8();
  v26 = v25;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v20, v11);
  sub_1C077F040();
  v47 = v10;
  sub_1C089AA50(v24, v26, *(_QWORD *)(v10 + 16));
  v28 = v27;
  LOBYTE(v10) = v29;
  sub_1C07785A0();
  sub_1C07826F0();
  v30 = 0;
  if ((v10 & 1) == 0)
  {
    v31 = v28 - 1;
    if (v28 < 1)
    {
      v51 = 0;
      v52 = 0xE000000000000000;
      sub_1C1070774();
      v49 = v51;
      v50 = v52;
      sub_1C106FC94();
      v35 = (uint64_t)v48 + *(int *)(v21 + 20);
      sub_1C078506C((uint64_t)v16, v35);
      sub_1C07B0108();
      sub_1C078D63C();
      sub_1C106FC94();
      sub_1C0775894();
      sub_1C106FC94();
      sub_1C078506C(v46, v35);
      v36 = sub_1C07B0108();
      v38 = v37;
      sub_1C078D63C();
      v39 = v47;
      sub_1C077F040();
      sub_1C089AA50(v36, v38, *(_QWORD *)(v39 + 24));
      v41 = v40;
      LOBYTE(v36) = v42;
      sub_1C07826F0();
      sub_1C0778580();
      v43 = 0x7FFFFFFFFFFFFFFFLL;
      if ((v36 & 1) == 0)
        v43 = v41;
      v51 = v43;
      sub_1C1070C0C();
      sub_1C106FC94();
      sub_1C07767AC();
      sub_1C106FC94();
      v30 = v49;
    }
    else
    {
      sub_1C078506C((uint64_t)v16, (uint64_t)v48 + *(int *)(v21 + 20));
      v32 = sub_1C07B0108();
      v34 = v33;
      sub_1C078D63C();
      sub_1C077F040();
      sub_1C08A00EC(v31, v32, v34);
      sub_1C07826F0();
      sub_1C0778580();
      v30 = 0;
    }
  }
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v53);
  return v30;
}

uint64_t sub_1C0AC70AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C07B2D8C(a1, 1, 1, a4);
  return swift_retain();
}

void GroupMatcher.stores.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1C07E05C8(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
}

void GroupMatcher.source.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1C0799CDC();
  sub_1C07E05C8(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(_QWORD))type metadata accessor for Source);
}

uint64_t type metadata accessor for GroupMatcher()
{
  uint64_t result;

  result = qword_1ED755A18;
  if (!qword_1ED755A18)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t GroupMatcher.pipelineType.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_1C0799CDC();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t GroupMatcher.stateStore.getter()
{
  sub_1C0799CDC();
  return swift_retain();
}

void GroupMatcher.stageName.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t GroupMatcher.entityClass.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(sub_1C0799CDC() + 32);
  v4 = sub_1C0776744();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

void GroupMatcher.init(stores:source:pipelineType:)(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  char v7;
  int *v8;
  uint64_t v9;

  v7 = *a3;
  v8 = (int *)sub_1C0799CDC();
  sub_1C106CDFC();
  *(_DWORD *)(a4 + v8[9]) = 1056964608;
  sub_1C07E05C8(a1, a4, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C07E05F4(a2, a4 + v8[5], (uint64_t (*)(_QWORD))type metadata accessor for Source);
  *(_BYTE *)(a4 + v8[6]) = v7;
  v9 = *(_QWORD *)(a1 + *(int *)(sub_1C078A314() + 28));
  swift_retain();
  sub_1C07B1F90(a1, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  *(_QWORD *)(a4 + v8[7]) = v9;
}

float sub_1C0AC72A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  float v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  char v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  char *v51;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  char v66;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(char *, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  v4 = sub_1C106E41C();
  v80 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v68 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v68 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v68 - v14;
  v84 = type metadata accessor for EntityTriple(0);
  MEMORY[0x1E0C80A78](v84);
  MEMORY[0x1E0C80A78](v16);
  v76 = (uint64_t)&v68 - v17;
  MEMORY[0x1E0C80A78](v18);
  MEMORY[0x1E0C80A78](v19);
  v79 = (uint64_t)&v68 - v20;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v68 - v22;
  MEMORY[0x1E0C80A78](v24);
  v29 = *(_QWORD *)(a1 + 16);
  v30 = 0.0;
  if (v29)
  {
    v70 = (uint64_t)&v68 - v26;
    v77 = v12;
    v74 = v28;
    v75 = v9;
    v73 = v6;
    v68 = v27;
    v72 = a2;
    v69 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
    v31 = a1 + v69;
    v81 = *(_QWORD *)(v25 + 72);
    v71 = a1;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v78 = v23;
    while (1)
    {
      sub_1C07E05C8(v31, (uint64_t)v23, type metadata accessor for EntityTriple);
      sub_1C106DE70();
      sub_1C0794BAC(&qword_1ED75E7E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC80]);
      v33 = v32;
      sub_1C106FE44();
      v83 = v33;
      sub_1C106FE44();
      v34 = v87 == v85 && v88 == v86;
      v35 = v34 ? 1 : sub_1C1070CB4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v82 = *(void (**)(char *, uint64_t))(v80 + 8);
      v82(v15, v4);
      v36 = v79;
      sub_1C07E05C8((uint64_t)v23, v79, type metadata accessor for EntityTriple);
      if ((v35 & 1) != 0)
        break;
      v37 = v15;
      v38 = v77;
      sub_1C106DFE4();
      sub_1C106FE44();
      sub_1C106FE44();
      if (v87 == v85 && v88 == v86)
      {
        swift_bridgeObjectRelease_n();
        v82(v38, v4);
        break;
      }
      v40 = sub_1C1070CB4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v41 = v4;
      v82(v38, v4);
      sub_1C07B1F90(v36, type metadata accessor for EntityTriple);
      if ((v40 & 1) != 0)
        goto LABEL_19;
      v42 = (uint64_t)v78;
      sub_1C07B1F90((uint64_t)v78, type metadata accessor for EntityTriple);
      v31 += v81;
      --v29;
      v15 = v37;
      v23 = (char *)v42;
      if (!v29)
        goto LABEL_33;
    }
    v41 = v4;
    sub_1C07B1F90(v36, type metadata accessor for EntityTriple);
LABEL_19:
    swift_bridgeObjectRelease();
    v43 = v70;
    sub_1C07E05F4((uint64_t)v78, v70, type metadata accessor for EntityTriple);
    v44 = (uint64_t *)(v43 + *(int *)(v84 + 32));
    v46 = *v44;
    v45 = v44[1];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C07B1F90(v43, type metadata accessor for EntityTriple);
    v47 = *(_QWORD *)(v72 + 16);
    if (!v47)
    {
LABEL_33:
      swift_bridgeObjectRelease();
      return v30;
    }
    v79 = v46;
    v80 = v45;
    v48 = v72 + v69;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v49 = v76;
    v50 = v82;
    while (1)
    {
      sub_1C07E05C8(v48, v49, type metadata accessor for EntityTriple);
      v51 = v75;
      sub_1C106DE70();
      sub_1C106FE44();
      sub_1C106FE44();
      if (v87 == v85 && v88 == v86)
      {
        swift_bridgeObjectRelease_n();
        v50(v51, v41);
        v60 = v49;
        v55 = v74;
        sub_1C07E05C8(v60, v74, type metadata accessor for EntityTriple);
        goto LABEL_36;
      }
      v53 = sub_1C1070CB4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v50(v51, v41);
      v54 = v49;
      v55 = v74;
      sub_1C07E05C8(v54, v74, type metadata accessor for EntityTriple);
      if ((v53 & 1) != 0)
        goto LABEL_36;
      v56 = v55;
      v57 = v73;
      sub_1C106DFE4();
      sub_1C106FE44();
      sub_1C106FE44();
      if (v87 == v85 && v88 == v86)
        break;
      v59 = sub_1C1070CB4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v50(v57, v41);
      sub_1C07B1F90(v56, type metadata accessor for EntityTriple);
      if ((v59 & 1) != 0)
        goto LABEL_37;
      v49 = v76;
      sub_1C07B1F90(v76, type metadata accessor for EntityTriple);
      v48 += v81;
      if (!--v47)
      {
        swift_bridgeObjectRelease();
        goto LABEL_33;
      }
    }
    swift_bridgeObjectRelease_n();
    v50(v57, v41);
LABEL_36:
    sub_1C07B1F90(v55, type metadata accessor for EntityTriple);
LABEL_37:
    swift_bridgeObjectRelease();
    v61 = v68;
    sub_1C07E05F4(v76, v68, type metadata accessor for EntityTriple);
    v62 = (uint64_t *)(v61 + *(int *)(v84 + 32));
    v64 = *v62;
    v63 = v62[1];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C07B1F90(v61, type metadata accessor for EntityTriple);
    if (v64 == v79 && v63 == v80)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v66 = sub_1C1070CB4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v66 & 1) == 0)
        return v30;
    }
    return 1.0;
  }
  return v30;
}

float sub_1C0AC7994(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  float v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t);
  uint64_t (*v35)(uint64_t);
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  char v39;
  uint64_t v40;
  char v42;
  uint64_t v43;
  char **v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(_QWORD);
  uint64_t v50;
  uint64_t v51;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  char **v62;
  char *v63;
  char *v64;
  char v66;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t (*v75)(_QWORD);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;

  v79 = a3(0);
  v6 = *(_QWORD *)(v79 - 8);
  MEMORY[0x1E0C80A78](v79);
  sub_1C077AED0();
  v77 = v7;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v8);
  v78 = (uint64_t)&v68 - v9;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v68 - v11;
  v13 = sub_1C106E41C();
  v83 = *(char **)(v13 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v14);
  sub_1C077AED0();
  v76 = v15;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v68 - v17;
  MEMORY[0x1E0C80A78](v19);
  v82 = (char *)&v68 - v20;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v21);
  v84 = (char *)&v68 - v22;
  v85 = type metadata accessor for EntityTriple(0);
  MEMORY[0x1E0C80A78](v85);
  v24 = (char *)&v68 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v68 - v26;
  MEMORY[0x1E0C80A78](v28);
  v31 = *(_QWORD *)(a1 + 16);
  v32 = 0.0;
  if (v31)
  {
    v71 = (uint64_t)&v68 - v30;
    v70 = v6;
    v74 = v18;
    v69 = v12;
    v72 = a1;
    v73 = a2;
    v75 = a3;
    v33 = a1 + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
    v80 = *(_QWORD *)(v29 + 72);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v34 = type metadata accessor for EntityTriple;
    v81 = v27;
    while (1)
    {
      v35 = v34;
      sub_1C07E05C8(v33, (uint64_t)v27, v34);
      sub_1C106DE70();
      sub_1C0794BAC(&qword_1ED75E7E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC80]);
      v37 = v36;
      sub_1C106FE44();
      v86 = v37;
      sub_1C106FE44();
      v38 = v89 == v87 && v90 == v88;
      v39 = v38 ? 1 : sub_1C07785B0();
      sub_1C0775834();
      sub_1C077960C();
      (*((void (**)(char *, uint64_t))v83 + 1))(v84, v13);
      sub_1C07E05C8((uint64_t)v27, (uint64_t)v24, v34);
      if ((v39 & 1) != 0)
        break;
      v40 = (uint64_t)v82;
      sub_1C106DFE4();
      sub_1C106FE44();
      sub_1C106FE44();
      if (v89 == v87 && v90 == v88)
      {
        sub_1C0782990();
        sub_1C07A3BA0(v40);
        break;
      }
      v42 = sub_1C07785B0();
      sub_1C077960C();
      sub_1C0778580();
      sub_1C07A3BA0(v40);
      v34 = v35;
      sub_1C07B1F90((uint64_t)v24, v35);
      if ((v42 & 1) != 0)
        goto LABEL_19;
      v27 = v81;
      sub_1C07B1F90((uint64_t)v81, v35);
      v33 += v80;
      if (!--v31)
        goto LABEL_33;
    }
    sub_1C07B1F90((uint64_t)v24, type metadata accessor for EntityTriple);
LABEL_19:
    swift_bridgeObjectRelease();
    v43 = v71;
    sub_1C07E05F4((uint64_t)v81, v71, type metadata accessor for EntityTriple);
    v44 = (char **)(v43 + *(int *)(v85 + 32));
    v46 = *v44;
    v45 = v44[1];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C07B1F90(v43, type metadata accessor for EntityTriple);
    v47 = *(_QWORD *)(v73 + 16);
    if (!v47)
    {
LABEL_33:
      swift_bridgeObjectRelease();
      return v32;
    }
    v82 = v46;
    v83 = v45;
    v48 = v73 + ((*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80));
    v84 = *(char **)(v70 + 72);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v50 = (uint64_t)v74;
    v49 = v75;
    v51 = v78;
    while (1)
    {
      v85 = v47;
      sub_1C0787E60(v48);
      sub_1C106DE70();
      sub_1C07ADDEC();
      sub_1C0797F18();
      if (v89 == v87 && v90 == v88)
      {
        sub_1C0782990();
        sub_1C07A3BA0(v50);
        v60 = v51;
        v55 = v77;
        sub_1C0787E60(v60);
        goto LABEL_36;
      }
      v53 = sub_1C07785B0();
      sub_1C077960C();
      sub_1C0775834();
      sub_1C07A3BA0(v50);
      v54 = v51;
      v55 = v77;
      sub_1C0787E60(v54);
      if ((v53 & 1) != 0)
        goto LABEL_36;
      v56 = v76;
      sub_1C106DFE4();
      sub_1C07ADDEC();
      sub_1C0797F18();
      if (v89 == v87 && v90 == v88)
        break;
      v58 = v55;
      v59 = sub_1C07785B0();
      sub_1C077960C();
      sub_1C0775834();
      sub_1C07A3BA0(v56);
      v49 = v75;
      sub_1C078AC18(v58);
      if ((v59 & 1) != 0)
        goto LABEL_37;
      v51 = v78;
      sub_1C078AC18(v78);
      v48 += (uint64_t)v84;
      v47 = v85 - 1;
      if (v85 == 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_33;
      }
    }
    sub_1C0782990();
    sub_1C07A3BA0(v56);
    v49 = v75;
LABEL_36:
    sub_1C078AC18(v55);
LABEL_37:
    swift_bridgeObjectRelease();
    v61 = (uint64_t)v69;
    sub_1C07E05F4(v78, (uint64_t)v69, v49);
    v62 = (char **)(v61 + *(int *)(v79 + 32));
    v64 = *v62;
    v63 = v62[1];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C078AC18(v61);
    if (v64 == v82 && v63 == v83)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v66 = sub_1C07785B0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v66 & 1) == 0)
        return v32;
    }
    return 1.0;
  }
  return v32;
}

void sub_1C0AC7FB8(void (*a1)(char *, uint64_t, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  _BYTE *v46;
  char *v47;
  uint64_t v48;
  float v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int *v66;
  char *v67;
  void (*v68)(uint64_t, char *, uint64_t);
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t, uint64_t);
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;

  v83 = a2;
  v84 = a1;
  v75 = a3;
  v4 = sub_1C106ADE0();
  v78 = *(_QWORD *)(v4 - 8);
  v79 = v4;
  MEMORY[0x1E0C80A78](v4);
  v76 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = sub_1C106D1F8();
  v81 = *(_QWORD *)(v86 - 8);
  MEMORY[0x1E0C80A78](v86);
  v80 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = sub_1C106E590();
  v87 = *(_QWORD *)(v82 - 8);
  MEMORY[0x1E0C80A78](v82);
  v85 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v77 = (char *)&v69 - v9;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v69 - v11;
  v13 = type metadata accessor for EntityTriple(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1C07ACF80(&qword_1ED75A508);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v69 - v20;
  v22 = sub_1C07ACF80((uint64_t *)&unk_1ED75EA40);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v69 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v69 - v26;
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v69 - v29;
  v31 = (uint64_t)v88;
  sub_1C0CCB99C();
  if (v31)
    return;
  v73 = 0;
  v74 = v18;
  v70 = v27;
  v71 = v24;
  v88 = v15;
  v32 = v87;
  v33 = v82;
  v72 = v3;
  if (v83)
  {
    v34 = v83;
    sub_1C0AA49F4();
    v35 = v13;
    v36 = sub_1C07B2D80((uint64_t)v21, 1, v13);
    v37 = (uint64_t)v30;
    if (v36 == 1)
    {
      sub_1C0784B6C((uint64_t)v21, &qword_1ED75A508);
      v38 = 1;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v30, v21, v33);
      sub_1C07B1F90((uint64_t)v21, type metadata accessor for EntityTriple);
      v38 = 0;
    }
    v40 = (uint64_t)v84;
  }
  else
  {
    v34 = 0;
    v38 = 1;
    v39 = v30;
    v40 = (uint64_t)v84;
    v35 = v13;
    v37 = (uint64_t)v39;
  }
  sub_1C07B2D8C(v37, v38, 1, v33);
  v41 = (uint64_t)v74;
  sub_1C0AA49F4();
  if (sub_1C07B2D80(v41, 1, v35) != 1)
  {
    v47 = v12;
    sub_1C07E05F4(v41, (uint64_t)v88, type metadata accessor for EntityTriple);
    if (v34)
    {
      v48 = v72;
      v49 = sub_1C0AC72A8(v40, v34);
      v50 = type metadata accessor for GroupMatcher();
      v51 = (uint64_t)v70;
      if (v49 > *(float *)(v48 + *(int *)(v50 + 36)))
        goto LABEL_17;
    }
    else
    {
      v50 = type metadata accessor for GroupMatcher();
      v48 = v72;
      v49 = 0.0;
      v51 = (uint64_t)v70;
      if (*(float *)(v72 + *(int *)(v50 + 36)) < 0.0)
      {
LABEL_17:
        v52 = (uint64_t)v71;
        sub_1C07E0238(v37, (uint64_t)v71);
        v53 = sub_1C07B2D80(v52, 1, v33);
        v83 = v37;
        if (v53 == 1)
        {
          sub_1C0784B6C(v52, (uint64_t *)&unk_1ED75EA40);
          sub_1C1070954();
          __break(1u);
        }
        else
        {
          v54 = v87;
          v84 = *(void (**)(char *, uint64_t, uint64_t))(v87 + 32);
          v84(v47, v52, v33);
          v82 = type metadata accessor for GroupMatcher();
          v55 = v33;
          v56 = v47;
          v57 = v80;
          v58 = v81;
          (*(void (**)(char *, uint64_t, uint64_t))(v81 + 16))(v80, v48 + *(int *)(v82 + 32), v86);
          v59 = *(void (**)(char *, char *, uint64_t))(v54 + 16);
          v60 = v77;
          v61 = (uint64_t)v88;
          v59(v77, v88, v55);
          v59(v85, v56, v55);
          v62 = v76;
          sub_1C106ADA4();
          sub_1C106AC60();
          v64 = v63;
          (*(void (**)(char *, uint64_t))(v78 + 8))(v62, v79);
          (*(void (**)(char *, uint64_t))(v54 + 8))(v56, v55);
          sub_1C07B1F90(v61, type metadata accessor for EntityTriple);
          sub_1C0784B6C(v83, (uint64_t *)&unk_1ED75EA40);
          LOBYTE(v62) = *(_BYTE *)(v48 + *(int *)(v82 + 24));
          v65 = v75;
          (*(void (**)(uint64_t, char *, uint64_t))(v58 + 32))(v75, v57, v86);
          v66 = (int *)type metadata accessor for EntityMatch(0);
          v67 = v60;
          v68 = (void (*)(uint64_t, char *, uint64_t))v84;
          v84((char *)(v65 + v66[5]), (uint64_t)v67, v55);
          v68(v65 + v66[6], v85, v55);
          *(float *)(v65 + v66[7]) = v49;
          *(_QWORD *)(v65 + v66[8]) = v64;
          *(_BYTE *)(v65 + v66[9]) = (_BYTE)v62;
          *(_QWORD *)(v65 + v66[10]) = 0;
        }
        return;
      }
    }
    sub_1C106E500();
    sub_1C0784B6C(v37, (uint64_t *)&unk_1ED75EA40);
    sub_1C07B2D8C(v51, 0, 1, v33);
    sub_1C09174F8(v51, v37);
    type metadata accessor for GroupMatcher();
    v49 = *(float *)(v48 + *(int *)(v50 + 36));
    goto LABEL_17;
  }
  sub_1C0784B6C(v41, &qword_1ED75A508);
  if (qword_1ED761458 != -1)
    swift_once();
  v42 = sub_1C106F544();
  sub_1C079E000(v42, (uint64_t)qword_1ED78D818);
  v43 = sub_1C106F538();
  v44 = sub_1C1070390();
  if (os_log_type_enabled(v43, v44))
  {
    v45 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v45 = 0;
    _os_log_impl(&dword_1C0771000, v43, v44, "Group Matcher: skipping entityTriples are empty", v45, 2u);
    MEMORY[0x1C3BA8270](v45, -1, -1);
  }

  sub_1C08C1878();
  swift_allocError();
  *v46 = 0;
  swift_willThrow();
  sub_1C0784B6C(v37, (uint64_t *)&unk_1ED75EA40);
}

void sub_1C0AC8698(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, void (*a4)(void)@<X3>, uint64_t (*a5)(_QWORD)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t (*v47)(_QWORD);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  _BYTE *v57;
  uint64_t v58;
  uint64_t v59;
  float v60;
  uint64_t v61;
  float v62;
  uint64_t v63;
  void (*v64)(_QWORD, _QWORD, _QWORD);
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t, _QWORD);
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int *v79;
  void (*v80)(uint64_t, uint64_t, _QWORD);
  float v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(void);
  uint64_t v97;
  uint64_t v98;
  uint64_t (*v99)(_QWORD);
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;

  v98 = a1;
  v99 = a5;
  v95 = a6;
  v96 = a4;
  v103 = a2;
  v8 = sub_1C106ADE0();
  v91 = *(_QWORD *)(v8 - 8);
  v92 = v8;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v9);
  sub_1C077AE40();
  v90 = v10;
  v97 = sub_1C106D1F8();
  v94 = *(_QWORD *)(v97 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v11);
  sub_1C077AE40();
  v101 = v12;
  v104 = (_QWORD *)sub_1C106E590();
  v102 = *(v104 - 1);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v13);
  sub_1C077AED0();
  v93 = v14;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v15);
  v100 = (char *)&v82 - v16;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v17);
  v89 = (char *)&v82 - v18;
  sub_1C07ACF80(&qword_1ED75A508);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v19);
  sub_1C0778564();
  v22 = v21 - v20;
  v23 = type metadata accessor for EntityTriple(0);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v24);
  sub_1C0778564();
  v27 = v26 - v25;
  v88 = a3;
  sub_1C07ACF80(a3);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v28);
  sub_1C0778564();
  v31 = v30 - v29;
  sub_1C07ACF80((uint64_t *)&unk_1ED75EA40);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)&v82 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v35);
  v37 = (char *)&v82 - v36;
  MEMORY[0x1E0C80A78](v38);
  v40 = (char *)&v82 - v39;
  v41 = v6;
  v42 = v105;
  sub_1C0CCB99C();
  if (v42)
    return;
  v87 = v23;
  v83 = v37;
  v85 = v34;
  v105 = v27;
  v86 = 0;
  v43 = v101;
  v44 = v102;
  v45 = v40;
  v46 = v41;
  if (v103)
  {
    v96();
    v47 = v99;
    v48 = v99(0);
    v49 = (uint64_t)v45;
    if (sub_1C07B2D80(v31, 1, v48) == 1)
    {
      sub_1C0784B6C(v31, v88);
      v50 = 1;
    }
    else
    {
      (*(void (**)(char *, uint64_t, _QWORD *))(v44 + 16))(v45, v31, v104);
      sub_1C07B1F90(v31, v47);
      v50 = 0;
    }
  }
  else
  {
    v50 = 1;
    v49 = (uint64_t)v40;
    v47 = v99;
  }
  v51 = v98;
  v52 = v22;
  sub_1C07B2D8C(v49, v50, 1, (uint64_t)v104);
  sub_1C0AA49F4();
  if (sub_1C07B2D80(v22, 1, v87) != 1)
  {
    v58 = v43;
    v59 = v49;
    sub_1C07E05F4(v52, v105, type metadata accessor for EntityTriple);
    v84 = v46;
    if (v103)
    {
      v60 = sub_1C0AC7994(v51, v103, v47);
      v61 = sub_1C0799CDC();
      v62 = *(float *)(v46 + *(int *)(v61 + 36));
      v63 = v95;
      v64 = (void (*)(_QWORD, _QWORD, _QWORD))v104;
      v65 = v89;
      if (v60 > v62)
        goto LABEL_16;
    }
    else
    {
      v61 = sub_1C0799CDC();
      v81 = *(float *)(v46 + *(int *)(v61 + 36));
      v60 = 0.0;
      v63 = v95;
      v64 = (void (*)(_QWORD, _QWORD, _QWORD))v104;
      v65 = v89;
      if (v81 < 0.0)
      {
LABEL_16:
        v82 = v59;
        v69 = (uint64_t)v85;
        sub_1C07E0238(v59, (uint64_t)v85);
        if (sub_1C07B2D80(v69, 1, (uint64_t)v64) == 1)
        {
          sub_1C0784B6C(v69, (uint64_t *)&unk_1ED75EA40);
          sub_1C1070954();
          __break(1u);
        }
        else
        {
          v70 = v102;
          v104 = *(_QWORD **)(v102 + 32);
          ((void (*)(char *, uint64_t, _QWORD))v104)(v65, v69, v64);
          v103 = sub_1C0799CDC();
          v71 = v84;
          v72 = v94;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v94 + 16))(v58, v84 + *(int *)(v103 + 32), v97);
          v73 = *(void (**)(char *, uint64_t, _QWORD))(v70 + 16);
          v74 = v105;
          v73(v100, v105, v64);
          v75 = v93;
          v73(v93, (uint64_t)v65, v64);
          v76 = v90;
          sub_1C106ADA4();
          sub_1C106AC60();
          v78 = v77;
          (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v76, v92);
          (*(void (**)(char *, void (*)(_QWORD, _QWORD, _QWORD)))(v70 + 8))(v65, v64);
          sub_1C07B1F90(v74, type metadata accessor for EntityTriple);
          sub_1C0784B6C(v82, (uint64_t *)&unk_1ED75EA40);
          LOBYTE(v76) = *(_BYTE *)(v71 + *(int *)(v103 + 24));
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v72 + 32))(v63, v101, v97);
          v79 = (int *)sub_1C0789FA0();
          v80 = (void (*)(uint64_t, uint64_t, _QWORD))v104;
          ((void (*)(uint64_t, char *, _QWORD))v104)(v63 + v79[5], v100, v64);
          v80(v63 + v79[6], (uint64_t)v75, v64);
          *(float *)(v63 + v79[7]) = v60;
          *(_QWORD *)(v63 + v79[8]) = v78;
          *(_BYTE *)(v63 + v79[9]) = v76;
          *(_QWORD *)(v63 + v79[10]) = 0;
        }
        return;
      }
    }
    v66 = v58;
    v67 = (uint64_t)v83;
    sub_1C106E500();
    sub_1C0784B6C(v59, (uint64_t *)&unk_1ED75EA40);
    sub_1C07B2D8C(v67, 0, 1, (uint64_t)v64);
    v68 = v67;
    v58 = v66;
    sub_1C09174F8(v68, v59);
    sub_1C0799CDC();
    v60 = *(float *)(v84 + *(int *)(v61 + 36));
    goto LABEL_16;
  }
  sub_1C0784B6C(v22, &qword_1ED75A508);
  if (qword_1ED761458 != -1)
    swift_once();
  v53 = sub_1C106F544();
  sub_1C079E000(v53, (uint64_t)qword_1ED78D818);
  v54 = sub_1C106F538();
  v55 = sub_1C1070390();
  if (os_log_type_enabled(v54, v55))
  {
    v56 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v56 = 0;
    _os_log_impl(&dword_1C0771000, v54, v55, "Group Matcher: skipping entityTriples are empty", v56, 2u);
    MEMORY[0x1C3BA8270](v56, -1, -1);
  }

  sub_1C08C1878();
  swift_allocError();
  *v57 = 0;
  swift_willThrow();
  sub_1C0784B6C(v49, (uint64_t *)&unk_1ED75EA40);
}

uint64_t GroupMatcher.execute()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[3] = v0;
  v1[4] = sub_1C0799CDC();
  v1[5] = sub_1C0779D74();
  v2 = sub_1C0776744();
  v1[6] = v2;
  v1[7] = *(_QWORD *)(v2 - 8);
  v1[8] = sub_1C0775870();
  v1[9] = sub_1C0775870();
  v1[10] = sub_1C0775870();
  v1[11] = sub_1C0775870();
  sub_1C07ACF80(&qword_1ED7618D0);
  v1[12] = sub_1C0779D74();
  return swift_task_switch();
}

void sub_1C0AC8E10()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7[32];

  v1 = v0[12];
  v2 = v0[6];
  v3 = v0[7];
  v5 = v0[3];
  v4 = v0[4];
  sub_1C078A314();
  v6 = *(int *)(v4 + 24);
  v7[0] = *(_BYTE *)(v5 + v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v5 + *(int *)(v4 + 32), v2);
  sub_1C07B2D8C(v1, 0, 1, v2);
  sub_1C0AB2308(v7, v1);
  sub_1C0784B6C(v1, &qword_1ED7618D0);
  __asm { BR              X9 }
}

uint64_t sub_1C0AC8EC4()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(void);
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t, uint64_t);
  char v35;

  v7 = v6;
  v8 = v2[7];
  v9 = v0;
  v10 = v2[3];
  v32 = v7;
  v11 = *(_QWORD *)(v5 + v7);
  sub_1C07973B8(v9);
  v33 = v3;
  v12 = sub_1C0794DA4();
  *(_QWORD *)(v12 + 16) = v10;
  sub_1C0791D48();
  sub_1C09144FC(v13);
  v14 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  sub_1C0779940();
  sub_1C07767D4();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1C077C104();
    sub_1C07767D4();
    v24 = (uint64_t (*)(void))v2[1];
  }
  else
  {
    v15 = sub_1C07946C4();
    if (*(_BYTE *)(v11 + *(int *)(v15 + 28)) == 1)
    {
      v23 = v2[10];
      sub_1C078F678(v15, v16, v17, v18, v19, v20, v21, v22, v28, v29, v30, v31, v32, v33, v34);
      *(_QWORD *)(sub_1C0794DA4() + 16) = v12;
      sub_1C0914518(v23);
      v14(v23, v10);
      sub_1C077C104();
    }
    v25 = v2[12];
    v26 = v2[6];
    sub_1C106AC6C();
    sub_1C08892C0();
    v35 = *(_BYTE *)(v5 + v4);
    v34(v25, v33, v26);
    sub_1C07B2D8C(v25, 0, 1, v26);
    sub_1C0AB25AC(&v35, v25);
    sub_1C0784B6C(v25, &qword_1ED7618D0);
    sub_1C07767D4();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1C077C104();
    swift_task_dealloc();
    swift_task_dealloc();
    v24 = (uint64_t (*)(void))v2[1];
  }
  return v24();
}

void sub_1C0AC921C(void (*a1)(char *, uint64_t, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  sub_1C0AC7FB8(a1, a2, a3);
  if (!v3)
  {
    v4 = sub_1C0789FA0();
    sub_1C078D56C(v4);
  }
}

void sub_1C0AC9254(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X4>, void (*a4)(void)@<X5>, uint64_t (*a5)(_QWORD)@<X6>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  sub_1C0AC8698(a1, a2, a3, a4, a5, a6);
  if (!v6)
  {
    v7 = sub_1C0789FA0();
    sub_1C078D56C(v7);
  }
}

void sub_1C0AC92A0(_BYTE *a1@<X8>)
{
  GroupMatcher.stageName.getter(a1);
}

uint64_t sub_1C0AC92BC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C0806670;
  return GroupMatcher.execute()();
}

void sub_1C0AC9304(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C0AC9254(a1, a2, &qword_1ED75F138, (void (*)(void))sub_1C0AA4998, type metadata accessor for GraphTriple, a3);
}

void sub_1C0AC9334(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C0AC9254(a1, a2, &qword_1ED750E40, (void (*)(void))sub_1C0AA49A4, type metadata accessor for ConstructionGraphTriple, a3);
}

void sub_1C0AC9364(void (*a1)(char *, uint64_t, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C0AC921C(a1, a2, a3);
}

void sub_1C0AC937C(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1ED7506E0, (uint64_t (*)(uint64_t))type metadata accessor for GroupMatcher, (uint64_t)&protocol conformance descriptor for GroupMatcher);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0AC93B8(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1ED7506D0, (uint64_t (*)(uint64_t))type metadata accessor for GroupMatcher, (uint64_t)&protocol conformance descriptor for GroupMatcher);
  *(_QWORD *)(a1 + 8) = v2;
}

_QWORD *initializeBufferWithCopyOfBuffer for GroupMatcher(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  char *v24;
  uint64_t v25;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1C106AB28();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = type metadata accessor for Configuration();
    *(_OWORD *)((char *)a1 + *(int *)(v8 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v8 + 20));
    v9 = (int *)type metadata accessor for PhaseStores();
    *(_QWORD *)((char *)a1 + v9[5]) = *(_QWORD *)((char *)a2 + v9[5]);
    *(_QWORD *)((char *)a1 + v9[6]) = *(_QWORD *)((char *)a2 + v9[6]);
    *(_QWORD *)((char *)a1 + v9[7]) = *(_QWORD *)((char *)a2 + v9[7]);
    *(_QWORD *)((char *)a1 + v9[8]) = *(_QWORD *)((char *)a2 + v9[8]);
    *(_QWORD *)((char *)a1 + v9[9]) = *(_QWORD *)((char *)a2 + v9[9]);
    *(_QWORD *)((char *)a1 + v9[10]) = *(_QWORD *)((char *)a2 + v9[10]);
    *(_QWORD *)((char *)a1 + v9[11]) = *(_QWORD *)((char *)a2 + v9[11]);
    v10 = a3[5];
    v11 = (_QWORD *)((char *)a1 + v10);
    v12 = (char *)a2 + v10;
    v13 = *(_QWORD *)((char *)a2 + v10 + 8);
    *v11 = *(_QWORD *)((char *)a2 + v10);
    v11[1] = v13;
    v11[2] = *(_QWORD *)((char *)a2 + v10 + 16);
    v25 = type metadata accessor for Source();
    v14 = *(int *)(v25 + 24);
    v23 = &v12[v14];
    v24 = (char *)v11 + v14;
    v15 = sub_1C106D1F8();
    v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v22(v24, v23, v15);
    *((_BYTE *)v11 + *(int *)(v25 + 28)) = v12[*(int *)(v25 + 28)];
    v16 = a3[7];
    *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    *(_QWORD *)((char *)a1 + v16) = *(_QWORD *)((char *)a2 + v16);
    v17 = a3[8];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    swift_retain();
    v22(v18, v19, v15);
    *(_DWORD *)((char *)a1 + a3[9]) = *(_DWORD *)((char *)a2 + a3[9]);
  }
  return a1;
}

uint64_t destroy for GroupMatcher(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v9)(uint64_t, uint64_t);

  v4 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  type metadata accessor for PhaseStores();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v5 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  v6 = v5 + *(int *)(type metadata accessor for Source() + 24);
  v7 = sub_1C106D1F8();
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v9(v6, v7);
  swift_release();
  return ((uint64_t (*)(uint64_t, uint64_t))v9)(a1 + *(int *)(a2 + 32), v7);
}

uint64_t initializeWithCopy for GroupMatcher(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  char *v23;
  uint64_t v24;

  v6 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = type metadata accessor for Configuration();
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  v8 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(a1 + v8[5]) = *(_QWORD *)(a2 + v8[5]);
  *(_QWORD *)(a1 + v8[6]) = *(_QWORD *)(a2 + v8[6]);
  *(_QWORD *)(a1 + v8[7]) = *(_QWORD *)(a2 + v8[7]);
  *(_QWORD *)(a1 + v8[8]) = *(_QWORD *)(a2 + v8[8]);
  *(_QWORD *)(a1 + v8[9]) = *(_QWORD *)(a2 + v8[9]);
  *(_QWORD *)(a1 + v8[10]) = *(_QWORD *)(a2 + v8[10]);
  *(_QWORD *)(a1 + v8[11]) = *(_QWORD *)(a2 + v8[11]);
  v9 = a3[5];
  v10 = (_QWORD *)(a1 + v9);
  v11 = a2 + v9;
  v12 = *(_QWORD *)(a2 + v9 + 8);
  *v10 = *(_QWORD *)(a2 + v9);
  v10[1] = v12;
  v10[2] = *(_QWORD *)(a2 + v9 + 16);
  v13 = type metadata accessor for Source();
  v14 = *(int *)(v13 + 24);
  v23 = (char *)v10 + v14;
  v24 = v13;
  v22 = v11 + v14;
  v15 = sub_1C106D1F8();
  v21 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v21(v23, v22, v15);
  *((_BYTE *)v10 + *(int *)(v24 + 28)) = *(_BYTE *)(v11 + *(int *)(v24 + 28));
  v16 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  v17 = a3[8];
  v18 = (char *)(a1 + v17);
  v19 = a2 + v17;
  swift_retain();
  v21(v18, v19, v15);
  *(_DWORD *)(a1 + a3[9]) = *(_DWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithCopy for GroupMatcher(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);

  v6 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for Configuration() + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  v10 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(a1 + v10[5]) = *(_QWORD *)(a2 + v10[5]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[6]) = *(_QWORD *)(a2 + v10[6]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[7]) = *(_QWORD *)(a2 + v10[7]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[8]) = *(_QWORD *)(a2 + v10[8]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[9]) = *(_QWORD *)(a2 + v10[9]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[10]) = *(_QWORD *)(a2 + v10[10]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[11]) = *(_QWORD *)(a2 + v10[11]);
  swift_retain();
  swift_release();
  v11 = a3[5];
  v12 = (_QWORD *)(a1 + v11);
  v13 = a2 + v11;
  *v12 = *(_QWORD *)(a2 + v11);
  v12[1] = *(_QWORD *)(a2 + v11 + 8);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  v12[2] = *(_QWORD *)(v13 + 16);
  v14 = type metadata accessor for Source();
  v15 = *(int *)(v14 + 24);
  v16 = (char *)v12 + v15;
  v17 = v13 + v15;
  v18 = sub_1C106D1F8();
  v19 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24);
  v19(v16, v17, v18);
  *((_BYTE *)v12 + *(int *)(v14 + 28)) = *(_BYTE *)(v13 + *(int *)(v14 + 28));
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_retain();
  swift_release();
  v19((char *)(a1 + a3[8]), a2 + a3[8], v18);
  *(_DWORD *)(a1 + a3[9]) = *(_DWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t initializeWithTake for GroupMatcher(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;

  v6 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = type metadata accessor for Configuration();
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  v8 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(a1 + v8[5]) = *(_QWORD *)(a2 + v8[5]);
  *(_QWORD *)(a1 + v8[6]) = *(_QWORD *)(a2 + v8[6]);
  *(_QWORD *)(a1 + v8[7]) = *(_QWORD *)(a2 + v8[7]);
  *(_QWORD *)(a1 + v8[8]) = *(_QWORD *)(a2 + v8[8]);
  *(_QWORD *)(a1 + v8[9]) = *(_QWORD *)(a2 + v8[9]);
  *(_QWORD *)(a1 + v8[10]) = *(_QWORD *)(a2 + v8[10]);
  *(_QWORD *)(a1 + v8[11]) = *(_QWORD *)(a2 + v8[11]);
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_OWORD *)v10 = *(_OWORD *)(a2 + v9);
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(a2 + v9 + 16);
  v12 = type metadata accessor for Source();
  v13 = *(int *)(v12 + 24);
  v14 = v10 + v13;
  v15 = v11 + v13;
  v16 = sub_1C106D1F8();
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32);
  v17(v14, v15, v16);
  *(_BYTE *)(v10 + *(int *)(v12 + 28)) = *(_BYTE *)(v11 + *(int *)(v12 + 28));
  v18 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v18) = *(_QWORD *)(a2 + v18);
  v17(a1 + a3[8], a2 + a3[8], v16);
  *(_DWORD *)(a1 + a3[9]) = *(_DWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithTake for GroupMatcher(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;

  v6 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = type metadata accessor for Configuration();
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  v8 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(a1 + v8[5]) = *(_QWORD *)(a2 + v8[5]);
  swift_release();
  *(_QWORD *)(a1 + v8[6]) = *(_QWORD *)(a2 + v8[6]);
  swift_release();
  *(_QWORD *)(a1 + v8[7]) = *(_QWORD *)(a2 + v8[7]);
  swift_release();
  *(_QWORD *)(a1 + v8[8]) = *(_QWORD *)(a2 + v8[8]);
  swift_release();
  *(_QWORD *)(a1 + v8[9]) = *(_QWORD *)(a2 + v8[9]);
  swift_release();
  *(_QWORD *)(a1 + v8[10]) = *(_QWORD *)(a2 + v8[10]);
  swift_release();
  *(_QWORD *)(a1 + v8[11]) = *(_QWORD *)(a2 + v8[11]);
  swift_release();
  v9 = a3[5];
  v10 = (_QWORD *)(a1 + v9);
  v11 = a2 + v9;
  v12 = *(_QWORD *)(a2 + v9 + 8);
  *v10 = *(_QWORD *)(a2 + v9);
  v10[1] = v12;
  swift_bridgeObjectRelease();
  v10[2] = *(_QWORD *)(v11 + 16);
  v13 = type metadata accessor for Source();
  v14 = *(int *)(v13 + 24);
  v15 = (char *)v10 + v14;
  v16 = v11 + v14;
  v17 = sub_1C106D1F8();
  v18 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 40);
  v18(v15, v16, v17);
  *((_BYTE *)v10 + *(int *)(v13 + 28)) = *(_BYTE *)(v11 + *(int *)(v13 + 28));
  v19 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v19) = *(_QWORD *)(a2 + v19);
  swift_release();
  v18((char *)(a1 + a3[8]), a2 + a3[8], v17);
  *(_DWORD *)(a1 + a3[9]) = *(_DWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t getEnumTagSinglePayload for GroupMatcher()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0AC9E50(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v6 = sub_1C078A314();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
    return sub_1C07B2D80(v8, a2, v7);
  }
  v9 = type metadata accessor for Source();
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v9;
    v10 = a3[5];
LABEL_10:
    v8 = a1 + v10;
    return sub_1C07B2D80(v8, a2, v7);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v7 = sub_1C0776744();
    v10 = a3[8];
    goto LABEL_10;
  }
  v11 = *(_QWORD *)(a1 + a3[7]);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for GroupMatcher()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0AC9F14(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v8 = sub_1C078A314();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
  }
  else
  {
    result = type metadata accessor for Source();
    if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    {
      v9 = result;
      v12 = a4[5];
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        *(_QWORD *)(a1 + a4[7]) = (a2 - 1);
        return result;
      }
      v9 = sub_1C0776744();
      v12 = a4[8];
    }
    v10 = a1 + v12;
  }
  return sub_1C07B2D8C(v10, a2, a2, v9);
}

uint64_t sub_1C0AC9FC8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = type metadata accessor for PhaseStores();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Source();
    if (v2 <= 0x3F)
    {
      result = sub_1C106D1F8();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

void sub_1C0ACA08C(void (*a1)(char *, uint64_t, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C0AC9364(a1, a2, a3);
}

ValueMetadata *type metadata accessor for Handle()
{
  return &type metadata for Handle;
}

uint64_t sub_1C0ACA0B0()
{
  if (qword_1EF62E2D0 != -1)
    swift_once();
  qword_1EF6D13E0 = qword_1EF648208;
  unk_1EF6D13E8 = *(_OWORD *)&qword_1EF648210;
  qword_1EF6D13F8 = qword_1EF648220;
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

uint64_t *sub_1C0ACA114()
{
  if (qword_1EF62DDF0 != -1)
    swift_once();
  return &qword_1EF6D13E0;
}

uint64_t sub_1C0ACA154(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  uint64_t v11;
  char v12;
  char v13;

  v3 = v1;
  v5 = sub_1C07ACF80(&qword_1EF63A930);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C07A9480(a1, a1[3]);
  sub_1C0ACA6D4();
  sub_1C1070EB8();
  v13 = 0;
  sub_1C1070B7C();
  if (!v2)
  {
    v12 = 1;
    sub_1C1070B34();
    v11 = *(_QWORD *)(v3 + 32);
    v10[15] = 2;
    sub_1C07ACF80(&qword_1EF62FE38);
    sub_1C07EB158(&qword_1EF62FE40, (uint64_t (*)(void))sub_1C07EB11C, MEMORY[0x1E0DEAF10]);
    sub_1C1070BB8();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1C0ACA2CC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = sub_1C07ACF80(&qword_1EF63A920);
  MEMORY[0x1E0C80A78](v5);
  sub_1C07A9480(a1, a1[3]);
  sub_1C0ACA6D4();
  sub_1C1070E94();
  if (v2)
    return sub_1C0775880();
  v6 = sub_1C1070AA4();
  v8 = v7;
  v14 = v6;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v9 = sub_1C1070A5C();
  v11 = v10;
  v13 = v9;
  sub_1C07ACF80(&qword_1EF62FE38);
  sub_1C07EB158(&qword_1EF62FE58, (uint64_t (*)(void))sub_1C07EB1C0, MEMORY[0x1E0DEAF40]);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C1070AE0();
  sub_1C078F32C();
  sub_1C077AE90();
  sub_1C0775880();
  sub_1C077960C();
  swift_bridgeObjectRelease();
  result = sub_1C077589C();
  *a2 = v14;
  a2[1] = v8;
  a2[2] = v13;
  a2[3] = v11;
  a2[4] = v15;
  return result;
}

uint64_t sub_1C0ACA4E4()
{
  sub_1C0ACA6D4();
  return sub_1C1070EE8();
}

uint64_t sub_1C0ACA50C()
{
  sub_1C0ACA6D4();
  return sub_1C1070EF4();
}

uint64_t sub_1C0ACA534@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  sub_1C0ACA114();
  v2 = qword_1EF6D13F8;
  *(_QWORD *)a1 = qword_1EF6D13E0;
  *(_OWORD *)(a1 + 8) = unk_1EF6D13E8;
  *(_QWORD *)(a1 + 24) = v2;
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

double sub_1C0ACA578@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_1C0ACA2CC(a1, (uint64_t *)v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1C0ACA5BC(_QWORD *a1)
{
  return sub_1C0ACA154(a1);
}

unint64_t sub_1C0ACA5D0(uint64_t a1)
{
  unint64_t result;

  result = sub_1C0ACA5F4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0ACA5F4()
{
  unint64_t result;

  result = qword_1EF63A908;
  if (!qword_1EF63A908)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109F10C, &type metadata for Handle);
    atomic_store(result, (unint64_t *)&qword_1EF63A908);
  }
  return result;
}

unint64_t sub_1C0ACA630(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1C0ACA65C();
  result = sub_1C0ACA698();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0ACA65C()
{
  unint64_t result;

  result = qword_1EF63A910;
  if (!qword_1EF63A910)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109F0C8, &type metadata for Handle);
    atomic_store(result, (unint64_t *)&qword_1EF63A910);
  }
  return result;
}

unint64_t sub_1C0ACA698()
{
  unint64_t result;

  result = qword_1EF63A918;
  if (!qword_1EF63A918)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109F0A0, &type metadata for Handle);
    atomic_store(result, (unint64_t *)&qword_1EF63A918);
  }
  return result;
}

unint64_t sub_1C0ACA6D4()
{
  unint64_t result;

  result = qword_1EF63A928;
  if (!qword_1EF63A928)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109F1EC, &type metadata for Handle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF63A928);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for Handle.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C0ACA75C + 4 * byte_1C109F085[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C0ACA790 + 4 * byte_1C109F080[v4]))();
}

uint64_t sub_1C0ACA790(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0ACA798(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0ACA7A0);
  return result;
}

uint64_t sub_1C0ACA7AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0ACA7B4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C0ACA7B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0ACA7C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Handle.CodingKeys()
{
  return &type metadata for Handle.CodingKeys;
}

unint64_t sub_1C0ACA7E0()
{
  unint64_t result;

  result = qword_1EF63A938;
  if (!qword_1EF63A938)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109F1C4, &type metadata for Handle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF63A938);
  }
  return result;
}

unint64_t sub_1C0ACA820()
{
  unint64_t result;

  result = qword_1EF63A940;
  if (!qword_1EF63A940)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109F134, &type metadata for Handle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF63A940);
  }
  return result;
}

unint64_t sub_1C0ACA860()
{
  unint64_t result;

  result = qword_1EF63A948;
  if (!qword_1EF63A948)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C109F15C, &type metadata for Handle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF63A948);
  }
  return result;
}

uint64_t sub_1C0ACA89C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  int v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  _QWORD v53[3];
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;

  v62 = a3;
  v67 = *MEMORY[0x1E0C80C00];
  v61 = sub_1C106F874();
  v56 = *(_QWORD *)(v61 - 8);
  MEMORY[0x1E0C80A78](v61);
  sub_1C0778564();
  v60 = v6 - v5;
  v7 = sub_1C106F868();
  v58 = *(_QWORD *)(v7 - 8);
  v59 = v7;
  v8 = MEMORY[0x1E0C80A78](v7);
  v55 = (char *)v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v57 = (char *)v53 - v10;
  v11 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v11);
  sub_1C0778564();
  v14 = v13 - v12;
  v15 = sub_1C106ADE0();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  sub_1C0778564();
  v19 = v18 - v17;
  v20 = sub_1C106FB50();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  sub_1C0778564();
  v24 = v23 - v22;
  v25 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v25 = a1 & 0xFFFFFFFFFFFFLL;
  if (v25)
  {
    sub_1C106FB44();
    v54 = sub_1C106FB20();
    v26 = v24;
    v28 = v27;
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v26, v20);
    if (v28 >> 60 == 15)
    {
      if (qword_1ED760048 != -1)
        swift_once();
      v29 = sub_1C106F544();
      sub_1C079E000(v29, (uint64_t)qword_1ED78D800);
      swift_bridgeObjectRetain_n();
      v30 = sub_1C106F538();
      v31 = sub_1C107039C();
      if (os_log_type_enabled(v30, v31))
      {
        v32 = (uint8_t *)swift_slowAlloc();
        v65 = swift_slowAlloc();
        *(_DWORD *)v32 = 136315138;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v63 = sub_1C0788DAC(a1, a2, &v65);
        sub_1C10705AC();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1C0771000, v30, v31, "HashGenerator: Unable to convert identifier to UTF-8 data: %s", v32, 0xCu);
        swift_arrayDestroy();
        sub_1C0776778();
      }

      swift_bridgeObjectRelease_n();
    }
    else
    {
      v33 = sub_1C0ACAF70();
      if (v34 >> 60 != 15)
      {
        v35 = v33;
        v36 = v34;
        v65 = v54;
        v66 = v28;
        sub_1C07B3594(v54, v28);
        v37 = sub_1C079987C();
        sub_1C07B3594(v37, v38);
        v39 = sub_1C079987C();
        sub_1C0D8A4F8(v39, v40);
        v41 = sub_1C079987C();
        sub_1C07B33B8(v41, v42);
        sub_1C077CD6C(v62, v14);
        v43 = sub_1C07B2D80(v14, 1, v15);
        v53[1] = v36;
        v53[2] = v35;
        if (v43 == 1)
        {
          sub_1C077CDB4(v14);
          v44 = v66;
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(v19, v14, v15);
          sub_1C106AC60();
          v63 = v45;
          v46 = sub_1C07B2D9C((uint64_t)&v63, (uint64_t)&v64);
          v47 = v65;
          v48 = v66;
          v63 = v46;
          v64 = v49;
          sub_1C07B0E28(v65, v66);
          v50 = sub_1C079987C();
          sub_1C07B0E28(v50, v51);
          sub_1C0D8A4F8(v47, v48);
          sub_1C07B3374(v47, v48);
          sub_1C079664C();
          (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v19, v15);
          sub_1C07B3374(v65, v66);
          v44 = v64;
          v65 = v63;
          v66 = v64;
        }
        sub_1C07A0DB0();
        sub_1C0ACB224();
        sub_1C106F85C();
        __asm { BR              X9 }
      }
      sub_1C07ADE00();
    }
  }
  return 0;
}

void sub_1C0ACAEAC()
{
  id v0;
  id v1;

  v0 = sub_1C08FFA34();
  sub_1C0ACAF08();
  v1 = (id)sub_1C106FAF0();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_removeObjectForKey_, v1);

}

unint64_t sub_1C0ACAF08()
{
  uint64_t v0;
  unint64_t v1;

  if (*(_QWORD *)(v0 + 32))
  {
    v1 = *(_QWORD *)(v0 + 24);
  }
  else
  {
    v1 = 0xD000000000000012;
    *(_QWORD *)(v0 + 24) = 0xD000000000000012;
    *(_QWORD *)(v0 + 32) = 0x80000001C10FBC40;
    swift_bridgeObjectRelease();
  }
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return v1;
}

uint64_t sub_1C0ACAF70()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;

  v0 = sub_1C08FFA34();
  sub_1C0ACAF08();
  v1 = (void *)sub_1C106FAF0();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_dataForKey_, v1);

  if (v2)
  {
    v3 = sub_1C106AC18();
LABEL_5:

    return v3;
  }
  v3 = sub_1C0ACB06C();
  if (v4 >> 60 != 15)
  {
    v5 = sub_1C08FFA34();
    v6 = (void *)sub_1C106ABF4();
    sub_1C0ACAF08();
    v2 = (id)sub_1C106FAF0();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_setObject_forKey_, v6, v2);

    goto LABEL_5;
  }
  return v3;
}

uint64_t sub_1C0ACB06C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;

  v0 = sub_1C106FFAC();
  *(_QWORD *)(v0 + 16) = 32;
  *(_OWORD *)(v0 + 32) = 0u;
  v1 = v0 + 32;
  *(_OWORD *)(v0 + 48) = 0u;
  if (SecRandomCopyBytes((SecRandomRef)*MEMORY[0x1E0CD7000], 0x20uLL, (void *)(v0 + 32)))
  {
    swift_bridgeObjectRelease();
    if (qword_1ED760048 != -1)
      swift_once();
    v2 = sub_1C106F544();
    sub_1C079E000(v2, (uint64_t)qword_1ED78D800);
    v3 = sub_1C106F538();
    v4 = sub_1C107039C();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v5 = 67109120;
      sub_1C10705AC();
      _os_log_impl(&dword_1C0771000, v3, v4, "HashGenerator: Unable to generate salt from SecRandomCopyBytes: %d", v5, 8u);
      MEMORY[0x1C3BA8270](v5, -1, -1);
    }

    return 0;
  }
  else
  {
    v6 = MEMORY[0x1C3BA1550](v1, 32);
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t type metadata accessor for HashGenerator()
{
  return objc_opt_self();
}

_QWORD *sub_1C0ACB214()
{
  _QWORD *v0;
  _QWORD *result;

  result = v0;
  v0[2] = 0;
  v0[3] = 0;
  v0[4] = 0;
  return result;
}

unint64_t sub_1C0ACB224()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED762B30;
  if (!qword_1ED762B30)
  {
    v1 = sub_1C106F874();
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0CA9930], v1);
    atomic_store(result, (unint64_t *)&qword_1ED762B30);
  }
  return result;
}

void sub_1C0ACB264(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v5 = sub_1C106E590();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    v19 = v2;
    v27 = MEMORY[0x1E0DEE9D8];
    sub_1C09D32B4();
    v10 = v27;
    v11 = (unint64_t *)(a1 + 32);
    v18 = a2;
    v12 = *a2;
    v21 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v22 = v12;
    v20 = v12 + v21;
    while (1)
    {
      v14 = *v11++;
      v13 = v14;
      if ((v14 & 0x8000000000000000) != 0)
        break;
      if (v13 >= *(_QWORD *)(v22 + 16))
        goto LABEL_11;
      v15 = *(_QWORD *)(v6 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v20 + v15 * v13, v5);
      v27 = v10;
      v16 = *(_QWORD *)(v10 + 16);
      if (v16 >= *(_QWORD *)(v10 + 24) >> 1)
      {
        sub_1C09D32B4();
        v10 = v27;
      }
      *(_QWORD *)(v10 + 16) = v16 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v10 + v21 + v16 * v15, v8, v5);
      if (!--v9)
      {
        a2 = v18;
        goto LABEL_9;
      }
    }
    __break(1u);
LABEL_11:
    __break(1u);
  }
  else
  {
LABEL_9:
    v27 = *a2;
    sub_1C08EE9A0((uint64_t)&v27);
    v26 = a2[1];
    sub_1C08EE9A0((uint64_t)&v26);
    v25 = a2[2];
    sub_1C08EE9A0((uint64_t)&v25);
    v24 = a2[3];
    sub_1C08EE9A0((uint64_t)&v24);
    v23 = a2[5];
    sub_1C08EE9A0((uint64_t)&v23);
  }
}

uint64_t sub_1C0ACB434(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  unint64_t v12;
  uint64_t result;
  char *v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char v34;
  void (*v35)(char *, uint64_t);
  unint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t, uint64_t);
  _QWORD v59[5];
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v4 = v3;
  v44 = a3;
  v6 = sub_1C106E590();
  v56 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v55 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v41 - v9;
  sub_1C0861BD0(v59);
  v43 = v59[0];
  v41 = v59[1];
  v11 = v59[3];
  v12 = v59[4];
  v42 = (unint64_t)(v59[2] + 64) >> 6;
  result = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v14 = v55;
  if (!v12)
    goto LABEL_3;
LABEL_2:
  v50 = (v12 - 1) & v12;
  v15 = __clz(__rbit64(v12)) | (v11 << 6);
  while (1)
  {
    v19 = *(_QWORD *)(*(_QWORD *)(v43 + 56) + 8 * v15);
    v20 = v44;
    v21 = *v44;
    v63 = v44[1];
    v64 = v21;
    v22 = v44[2];
    v61 = v44[3];
    v62 = v22;
    v60 = v44[5];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C08FD4A0((uint64_t)&v64);
    sub_1C08FD4A0((uint64_t)&v63);
    sub_1C08FD4A0((uint64_t)&v62);
    sub_1C08FD4A0((uint64_t)&v61);
    sub_1C08FD4A0((uint64_t)&v60);
    v49 = v19;
    sub_1C0ACB264(v19, v20);
    v24 = v23;
    v53 = sub_1C0ACCE70((unint64_t *)&qword_1ED7618F0, MEMORY[0x1E0D3CE40]);
    v25 = sub_1C1070234();
    v52 = *(_QWORD *)(v24 + 16);
    if (v52)
    {
      v46 = v11;
      v47 = a1;
      v48 = v4;
      v26 = 0;
      v27 = (*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
      v45 = v24;
      v51 = v24 + v27;
      v28 = *(void (**)(char *, uint64_t, uint64_t))(v56 + 16);
      v57 = *(_QWORD *)(v56 + 72);
      v58 = v28;
      do
      {
        v54 = v26;
        v58(v10, v51 + v57 * v26, v6);
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v29 = v10;
        v30 = sub_1C106FA00();
        v31 = -1 << *(_BYTE *)(v25 + 32);
        v32 = v30 & ~v31;
        if (((*(_QWORD *)(v25 + 56 + ((v32 >> 3) & 0xFFFFFFFFFFFFF8)) >> v32) & 1) != 0)
        {
          v33 = ~v31;
          while (1)
          {
            v58(v14, *(_QWORD *)(v25 + 48) + v32 * v57, v6);
            sub_1C0ACCE70(&qword_1ED75EA38, MEMORY[0x1E0D3CE50]);
            v34 = sub_1C106FAA8();
            v35 = *(void (**)(char *, uint64_t))(v56 + 8);
            v35(v14, v6);
            if ((v34 & 1) != 0)
              break;
            v32 = (v32 + 1) & v33;
            if (((*(_QWORD *)(v25 + 56 + ((v32 >> 3) & 0xFFFFFFFFFFFFF8)) >> v32) & 1) == 0)
              goto LABEL_20;
          }
          swift_bridgeObjectRelease();
          v10 = v29;
          v35(v29, v6);
        }
        else
        {
LABEL_20:
          swift_bridgeObjectRelease();
          swift_isUniquelyReferenced_nonNull_native();
          v10 = v29;
          v58(v55, (uint64_t)v29, v6);
          v69 = v25;
          sub_1C0A84218();
          v25 = v69;
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v56 + 8))(v29, v6);
        }
        v26 = v54 + 1;
      }
      while (v54 + 1 != v52);
      swift_bridgeObjectRelease();
      v4 = v48;
      a1 = v47;
      v11 = v46;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C07ECA2C();
      a1 = v38;
    }
    v36 = *(_QWORD *)(a1 + 16);
    if (v36 >= *(_QWORD *)(a1 + 24) >> 1)
    {
      sub_1C07ECA2C();
      a1 = v39;
    }
    *(_QWORD *)(a1 + 16) = v36 + 1;
    *(_QWORD *)(a1 + 8 * v36 + 32) = v25;
    result = swift_bridgeObjectRelease();
    v12 = v50;
    if (v50)
      goto LABEL_2;
LABEL_3:
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v16 >= v42)
      goto LABEL_37;
    v17 = *(_QWORD *)(v41 + 8 * v16);
    if (!v17)
    {
      v18 = v11 + 2;
      if (v11 + 2 >= v42)
        goto LABEL_37;
      v17 = *(_QWORD *)(v41 + 8 * v18);
      if (v17)
        goto LABEL_12;
      v18 = v11 + 3;
      if (v11 + 3 >= v42)
        goto LABEL_37;
      v17 = *(_QWORD *)(v41 + 8 * v18);
      if (v17)
        goto LABEL_12;
      v18 = v11 + 4;
      if (v11 + 4 >= v42)
        goto LABEL_37;
      v17 = *(_QWORD *)(v41 + 8 * v18);
      if (v17)
      {
LABEL_12:
        v16 = v18;
      }
      else
      {
        v16 = v11 + 5;
        if (v11 + 5 >= v42)
          goto LABEL_37;
        v17 = *(_QWORD *)(v41 + 8 * v16);
        if (!v17)
        {
          v37 = v11 + 6;
          while (v37 < v42)
          {
            v17 = *(_QWORD *)(v41 + 8 * v37++);
            if (v17)
            {
              v16 = v37 - 1;
              goto LABEL_13;
            }
          }
LABEL_37:
          swift_release();
          v40 = v44;
          v69 = *v44;
          sub_1C08EE9A0((uint64_t)&v69);
          v68 = v40[1];
          sub_1C08EE9A0((uint64_t)&v68);
          v67 = v40[2];
          sub_1C08EE9A0((uint64_t)&v67);
          v66 = v40[3];
          sub_1C08EE9A0((uint64_t)&v66);
          v65 = v40[5];
          sub_1C08EE9A0((uint64_t)&v65);
          return a1;
        }
      }
    }
LABEL_13:
    v50 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v16 << 6);
    v11 = v16;
  }
  __break(1u);
  return result;
}

float sub_1C0ACBA14@<S0>(uint64_t a1@<X0>, uint64_t a2@<X8>, float a3@<S0>)
{
  float result;
  __int128 v5;
  __int128 v6;
  uint64_t v8;

  v8 = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)&v5 = MEMORY[0x1E0DEE9D8];
  *((_QWORD *)&v5 + 1) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v6 = MEMORY[0x1E0DEE9D8];
  *((_QWORD *)&v6 + 1) = MEMORY[0x1E0DEE9D8];
  sub_1C0ACC330(a1);
  swift_bridgeObjectRelease();
  result = a3;
  *(_OWORD *)a2 = v5;
  *(_OWORD *)(a2 + 16) = v6;
  *(float *)(a2 + 32) = a3;
  *(_QWORD *)(a2 + 40) = v8;
  return result;
}

void sub_1C0ACBA8C()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  _DWORD *v7;
  unint64_t v8;
  float v9;
  unint64_t v10;
  int64_t v11;
  float v12;
  float v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  float v19;
  uint64_t v21;
  unint64_t v22;
  float v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v1 = (uint64_t)sub_1C07A3BA8(*v0);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2 <= 1)
  {
    sub_1C0793C3C();
    swift_release();
  }
  else
  {
    v54 = v0[1];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
LABEL_92:
      sub_1C0C6EEE8();
      v54 = v50;
    }
    v3 = v54 + 32;
    v51 = v0;
    while (1)
    {
      v4 = v0[2];
      v5 = *(_QWORD *)(v4 + 16);
      if (!v5)
        break;
      v6 = 0;
      v7 = (_DWORD *)(v4 + 40);
      v8 = -1;
      v9 = 0.0;
      v10 = -1;
      do
      {
        v11 = *((_QWORD *)v7 - 1);
        v12 = *(float *)v7;
        v7 += 4;
        v13 = v12;
        if (v11 <= v6)
          v14 = v6;
        else
          v14 = v11;
        if (v11 >= v6)
          v11 = v6;
        if (v9 < v13)
        {
          v9 = v13;
          v8 = v14;
          v10 = v11;
        }
        ++v6;
      }
      while (v5 != v6);
      if (v10 == -1)
        goto LABEL_67;
      v15 = v0[3];
      v52 = v2;
      if ((sub_1C077B7D4() & 1) == 0)
      {
        sub_1C078F6A4();
        v15 = v33;
      }
      v2 = *(_QWORD *)(v15 + 16);
      if (v2 >= *(_QWORD *)(v15 + 24) >> 1)
      {
        sub_1C078F6A4();
        v15 = v34;
      }
      *(_QWORD *)(v15 + 16) = v2 + 1;
      v16 = v15 + 24 * v2;
      *(_QWORD *)(v16 + 32) = v10;
      *(_QWORD *)(v16 + 40) = v8;
      *(float *)(v16 + 48) = v9;
      v0[3] = v15;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      {
        if ((v8 & 0x8000000000000000) != 0)
          goto LABEL_87;
      }
      else
      {
        sub_1C0C6EDEC();
        v1 = v35;
        if ((v8 & 0x8000000000000000) != 0)
          goto LABEL_87;
      }
      if (v8 >= *(_QWORD *)(v1 + 16))
      {
LABEL_88:
        __break(1u);
LABEL_89:
        __break(1u);
LABEL_90:
        __break(1u);
LABEL_91:
        __break(1u);
        goto LABEL_92;
      }
      v17 = v1 + 32;
      *(_QWORD *)(v1 + 32 + 8 * v8) = -1;
      if ((sub_1C07815F4() & 1) == 0)
      {
        sub_1C0C6EEF8();
        v4 = v36;
      }
      if (v8 >= *(_QWORD *)(v4 + 16))
        goto LABEL_89;
      v18 = v4 + 32;
      *(_DWORD *)(v4 + 32 + 16 * v8 + 8) = -1082130432;
      v53 = v1;
      v0 = *(uint64_t **)(v1 + 16);
      if (v0)
      {
        v2 = 0;
        v1 = -1;
        v19 = 0.0;
        while (1)
        {
          if (*(_QWORD *)(v17 + 8 * v2) != -1 && v10 != v2)
          {
            if (v2 >= *(_QWORD *)(v54 + 16))
              goto LABEL_80;
            if ((v10 & 0x8000000000000000) != 0)
            {
LABEL_81:
              __break(1u);
LABEL_82:
              __break(1u);
LABEL_83:
              __break(1u);
LABEL_84:
              __break(1u);
LABEL_85:
              __break(1u);
LABEL_86:
              __break(1u);
LABEL_87:
              __break(1u);
              goto LABEL_88;
            }
            v21 = *(_QWORD *)(v3 + 8 * v2);
            v22 = *(_QWORD *)(v21 + 16);
            if (v10 >= v22)
              goto LABEL_82;
            if ((uint64_t)v8 >= (uint64_t)v22)
              goto LABEL_83;
            if (*(float *)(v21 + 32 + 4 * v10) > *(float *)(v21 + 32 + 4 * v8))
              v23 = *(float *)(v21 + 32 + 4 * v10);
            else
              v23 = *(float *)(v21 + 32 + 4 * v8);
            v24 = sub_1C077B7D4();
            *(_QWORD *)(v3 + 8 * v2) = v21;
            if ((v24 & 1) == 0)
            {
              sub_1C0C6EED8();
              v21 = v27;
              *(_QWORD *)(v3 + 8 * v2) = v27;
            }
            if (v10 >= *(_QWORD *)(v21 + 16))
              goto LABEL_84;
            *(float *)(v21 + 4 * v10 + 32) = v23;
            if (v10 >= *(_QWORD *)(v54 + 16))
              goto LABEL_85;
            v25 = *(_QWORD *)(v3 + 8 * v10);
            v26 = sub_1C077B7D4();
            *(_QWORD *)(v3 + 8 * v10) = v25;
            if ((v26 & 1) == 0)
            {
              sub_1C0C6EED8();
              v25 = v28;
              *(_QWORD *)(v3 + 8 * v10) = v28;
            }
            if (v2 >= *(_QWORD *)(v25 + 16))
              goto LABEL_86;
            *(float *)(v25 + 4 * v2 + 32) = v23;
            if (v19 < v23)
            {
              v19 = v23;
              v1 = v2;
            }
          }
          if (v0 == (uint64_t *)++v2)
            goto LABEL_50;
        }
      }
      v1 = -1;
      v19 = 0.0;
LABEL_50:
      if ((v10 & 0x8000000000000000) != 0)
        goto LABEL_90;
      if (v10 >= *(_QWORD *)(v4 + 16))
        goto LABEL_91;
      v29 = v18 + 16 * v10;
      *(_QWORD *)v29 = v1;
      *(float *)(v29 + 8) = v19;
      v0 = v51;
      v51[2] = v4;
      v1 = v53;
      v2 = *(_QWORD *)(v53 + 16);
      if (v2)
      {
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v30 = 0;
        while (1)
        {
          v31 = *(_QWORD *)(v53 + 8 * v30 + 32);
          if (v31 != -1)
          {
            if ((v31 & 0x8000000000000000) != 0)
            {
              __break(1u);
LABEL_79:
              __break(1u);
LABEL_80:
              __break(1u);
              goto LABEL_81;
            }
            if (v31 >= *(_QWORD *)(v4 + 16))
              goto LABEL_79;
            v32 = 16 * v31;
            if (*(_QWORD *)(v18 + v32) == v8)
            {
              *(_QWORD *)(v18 + v32) = v10;
              v51[2] = v4;
            }
          }
          if (v2 == ++v30)
          {
            sub_1C0775844();
            break;
          }
        }
      }
      v2 = v52 - 1;
      if (v52 <= 2)
      {
        sub_1C0775844();
        v51[1] = v54;
LABEL_77:
        sub_1C0793C3C();
        return;
      }
    }
    v9 = 0.0;
LABEL_67:
    v0[1] = v54;
    v37 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0ACCD50(v37);
    v39 = *(_QWORD *)(v38 + 16);
    if (v39)
    {
      v40 = v38;
      v41 = v39 - 1;
      if (v39 == 1)
      {
        swift_bridgeObjectRelease();
        sub_1C0793C3C();
        swift_bridgeObjectRelease();
        return;
      }
      v42 = *(_QWORD *)(v38 + 32);
      v43 = v0[3];
      v44 = 56;
      do
      {
        v45 = *(_QWORD *)(v40 + v44);
        if ((sub_1C07815F4() & 1) == 0)
        {
          sub_1C0796658();
          v43 = v48;
        }
        v46 = *(_QWORD *)(v43 + 16);
        if (v46 >= *(_QWORD *)(v43 + 24) >> 1)
        {
          sub_1C0796658();
          v43 = v49;
        }
        *(_QWORD *)(v43 + 16) = v46 + 1;
        v47 = v43 + 24 * v46;
        *(_QWORD *)(v47 + 32) = v42;
        *(_QWORD *)(v47 + 40) = v45;
        *(float *)(v47 + 48) = v9;
        v44 += 24;
        --v41;
      }
      while (v41);
      swift_bridgeObjectRelease();
      sub_1C0775844();
      v51[3] = v43;
      goto LABEL_77;
    }
    __break(1u);
  }
}

uint64_t sub_1C0ACBF28(float a1)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  BOOL v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  float *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t result;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v49 = *v1;
  v3 = sub_1C07A3BA8(v49);
  v4 = v3[2];
  v5 = MEMORY[0x1E0DEE9E0];
  if (v4)
  {
    v6 = v3 + 4;
    while (1)
    {
      v8 = *v6++;
      v7 = v8;
      sub_1C07ACF80(&qword_1ED7614E0);
      v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_1C1079220;
      *(_QWORD *)(v9 + 32) = v8;
      sub_1C07815F4();
      v48 = v5;
      sub_1C07A0DBC(v8);
      sub_1C077F0AC();
      if (v12)
        break;
      v13 = v10;
      v14 = v11;
      sub_1C07ACF80(&qword_1ED759D88);
      if ((sub_1C107090C() & 1) != 0)
      {
        v15 = sub_1C0778AEC(v7);
        if ((v14 & 1) != (v16 & 1))
          goto LABEL_36;
        v13 = v15;
      }
      v5 = v48;
      if ((v14 & 1) != 0)
      {
        v17 = *(_QWORD *)(v48 + 56);
        swift_bridgeObjectRelease();
        *(_QWORD *)(v17 + 8 * v13) = v9;
      }
      else
      {
        sub_1C0799A30(v48 + 8 * (v13 >> 6));
        *(_QWORD *)(v18 + 8 * v13) = v7;
        *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v13) = v9;
        v19 = *(_QWORD *)(v5 + 16);
        v12 = __OFADD__(v19, 1);
        v20 = v19 + 1;
        if (v12)
          goto LABEL_32;
        *(_QWORD *)(v5 + 16) = v20;
      }
      sub_1C077970C();
      if (!--v4)
        goto LABEL_12;
    }
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    sub_1C1070954();
    __break(1u);
LABEL_36:
    result = sub_1C1070D44();
    __break(1u);
  }
  else
  {
LABEL_12:
    swift_release();
    v48 = v44[3];
    v21 = *(_QWORD *)(v48 + 16);
    if (v21)
    {
      v22 = (float *)(_s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0() + 48);
      do
      {
        if (*v22 > a1)
        {
          if (!*(_QWORD *)(v5 + 16))
            goto LABEL_35;
          v24 = *((_QWORD *)v22 - 2);
          v23 = *((_QWORD *)v22 - 1);
          v25 = sub_1C07A0DBC(v24);
          if ((v26 & 1) == 0)
            goto LABEL_35;
          v27 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v25);
          sub_1C07A0DBC(v23);
          if ((v28 & 1) == 0)
            goto LABEL_35;
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          sub_1C0BDA72C();
          v29 = v27;
          sub_1C07815F4();
          v47 = v5;
          sub_1C07A0DBC(v24);
          sub_1C077F0AC();
          if (v12)
            goto LABEL_33;
          v32 = v30;
          v33 = v31;
          sub_1C07ACF80(&qword_1ED759D88);
          if ((sub_1C107090C() & 1) != 0)
          {
            v34 = sub_1C0778AEC(v24);
            if ((v33 & 1) != (v35 & 1))
              goto LABEL_36;
            v32 = v34;
          }
          v5 = v47;
          if ((v33 & 1) != 0)
          {
            v36 = *(_QWORD *)(v47 + 56);
            swift_bridgeObjectRelease();
            *(_QWORD *)(v36 + 8 * v32) = v29;
          }
          else
          {
            sub_1C0799A30(v47 + 8 * (v32 >> 6));
            *(_QWORD *)(v37 + 8 * v32) = v24;
            *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v32) = v27;
            v38 = *(_QWORD *)(v5 + 16);
            v12 = __OFADD__(v38, 1);
            v39 = v38 + 1;
            if (v12)
              goto LABEL_34;
            *(_QWORD *)(v5 + 16) = v39;
          }
          sub_1C077970C();
          sub_1C07A0DBC(v23);
          if ((v40 & 1) != 0)
          {
            sub_1C07815F4();
            v47 = v5;
            sub_1C107090C();
            sub_1C07ACF80(&qword_1ED761468);
            sub_1C1070924();
            swift_bridgeObjectRelease();
            sub_1C077970C();
          }
        }
        v22 += 6;
        --v21;
      }
      while (v21);
      sub_1C08EE9A0((uint64_t)&v48);
    }
    v41 = v44[1];
    v46 = v44[2];
    v47 = v41;
    v45 = v44[5];
    sub_1C08FD4A0((uint64_t)&v48);
    sub_1C08FD4A0((uint64_t)&v49);
    sub_1C08FD4A0((uint64_t)&v47);
    sub_1C08FD4A0((uint64_t)&v46);
    sub_1C08FD4A0((uint64_t)&v45);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v42 = sub_1C0ACB434(MEMORY[0x1E0DEE9D8], v5, v44);
    swift_bridgeObjectRelease_n();
    return v42;
  }
  return result;
}

uint64_t sub_1C0ACC330(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  char v32;
  _QWORD *v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  char *v47;
  _QWORD *v48;
  unint64_t v49;
  char v50;
  unint64_t v51;
  char v52;
  unint64_t v53;
  char v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  int v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _DWORD *v87;
  unint64_t v88;
  unint64_t v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  float v107;
  unint64_t v108;
  float *v109;
  uint64_t v110;
  uint64_t result;
  uint64_t v112;
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  int *v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;

  v123 = sub_1C106E590();
  v121 = *(_QWORD *)(v123 - 8);
  MEMORY[0x1E0C80A78](v123);
  v113 = (char *)&v112 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v114 = (char *)&v112 - v4;
  MEMORY[0x1E0C80A78](v5);
  v116 = (char *)&v112 - v6;
  MEMORY[0x1E0C80A78](v7);
  v115 = (char *)&v112 - v8;
  v124 = (int *)type metadata accessor for EntityMatch(0);
  MEMORY[0x1E0C80A78](v124);
  v126 = (uint64_t)&v112 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = MEMORY[0x1E0DEE9E8];
  v11 = *(_QWORD *)(a1 + 16);
  v12 = MEMORY[0x1E0DEE9D8];
  if (!v11)
  {
    v122 = 0;
LABEL_52:
    v81 = v122;
    v82 = sub_1C0C6C5E8(v122, 0.0);
    v83 = sub_1C0C6C67C(v82, v81);
    v84 = v125;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v84 + 8) = v83;
    v85 = *(_QWORD *)(v12 + 16);
    if (v85)
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v86 = v12;
      v87 = (_DWORD *)(v12 + 48);
      while (1)
      {
        v88 = *((_QWORD *)v87 - 2);
        v89 = *((_QWORD *)v87 - 1);
        v90 = *v87;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        {
          if ((v88 & 0x8000000000000000) != 0)
            goto LABEL_86;
        }
        else
        {
          sub_1C0C6EEE8();
          v83 = v96;
          if ((v88 & 0x8000000000000000) != 0)
          {
LABEL_86:
            __break(1u);
LABEL_87:
            __break(1u);
LABEL_88:
            __break(1u);
LABEL_89:
            __break(1u);
LABEL_90:
            __break(1u);
LABEL_91:
            __break(1u);
LABEL_92:
            __break(1u);
            goto LABEL_93;
          }
        }
        if (v88 >= *(_QWORD *)(v83 + 16))
          goto LABEL_87;
        v91 = v83 + 32;
        v92 = *(_QWORD *)(v83 + 32 + 8 * v88);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v83 + 32 + 8 * v88) = v92;
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          if ((v89 & 0x8000000000000000) != 0)
            goto LABEL_88;
        }
        else
        {
          sub_1C0C6EED8();
          v92 = v97;
          *(_QWORD *)(v91 + 8 * v88) = v97;
          if ((v89 & 0x8000000000000000) != 0)
            goto LABEL_88;
        }
        if (v89 >= *(_QWORD *)(v92 + 16))
          goto LABEL_89;
        *(_DWORD *)(v92 + 4 * v89 + 32) = v90;
        if (v89 >= *(_QWORD *)(v83 + 16))
          goto LABEL_90;
        v94 = *(_QWORD *)(v91 + 8 * v89);
        v95 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v91 + 8 * v89) = v94;
        if ((v95 & 1) == 0)
        {
          sub_1C0C6EED8();
          v94 = v98;
          *(_QWORD *)(v91 + 8 * v89) = v98;
        }
        if (v88 >= *(_QWORD *)(v94 + 16))
          goto LABEL_91;
        v87 += 6;
        *(_DWORD *)(v94 + 4 * v88 + 32) = v90;
        if (!--v85)
        {
          swift_bridgeObjectRelease();
          *(_QWORD *)(v125 + 8) = v83;
          goto LABEL_71;
        }
      }
    }
    v86 = v12;
LABEL_71:
    v99 = *(_QWORD *)(v83 + 16);
    if (v99)
    {
      v117 = v86;
      v127 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C09D3FB4();
      v100 = 0;
      v101 = v127;
      do
      {
        v102 = *(_QWORD *)(v83 + 32 + 8 * v100);
        v103 = *(_QWORD *)(v102 + 16);
        if (v103)
        {
          v104 = 0;
          v105 = 0;
          v106 = v102 + 32;
          v107 = 0.0;
          do
          {
            if (v107 < *(float *)(v106 + 4 * v104))
            {
              v107 = *(float *)(v106 + 4 * v104);
              v105 = v104;
            }
            ++v104;
          }
          while (v103 != v104);
        }
        else
        {
          v105 = 0;
          v107 = 0.0;
        }
        v127 = v101;
        v108 = v101[2];
        if (v108 >= v101[3] >> 1)
        {
          sub_1C09D3FB4();
          v101 = v127;
        }
        ++v100;
        v101[2] = v108 + 1;
        v109 = (float *)&v101[2 * v108];
        *((_QWORD *)v109 + 4) = v105;
        v109[10] = v107;
      }
      while (v100 != v99);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v101 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    v110 = v125;
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(v110 + 16) = v101;
    return result;
  }
  v13 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  v120 = *(_QWORD *)(v9 + 72);
  v112 = a1;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v122 = 0;
  while (1)
  {
    v14 = v126;
    sub_1C0ACCEB0(v13, v126);
    if (*(float *)(v125 + 32) > *(float *)(v14 + v124[7]))
      goto LABEL_49;
    v118 = v124[7];
    v15 = v126 + v124[5];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0A794F0();
    v17 = v16;
    swift_bridgeObjectRelease();
    v119 = v11;
    if ((v17 & 1) == 0)
    {
      v18 = v13;
      v19 = v15;
      v20 = v121;
      v21 = *(void (**)(char *, uint64_t, uint64_t))(v121 + 16);
      v22 = v123;
      v21(v116, v19, v123);
      v23 = v115;
      sub_1C0A7D4C4();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v22);
      v24 = v125;
      swift_isUniquelyReferenced_nonNull_native();
      v25 = v24;
      v26 = *(_QWORD **)(v24 + 40);
      v127 = v26;
      *(_QWORD *)(v25 + 40) = 0x8000000000000000;
      sub_1C07DCD84();
      if (__OFADD__(v26[2], (v28 & 1) == 0))
        goto LABEL_100;
      v29 = v27;
      v30 = v28;
      sub_1C07ACF80(&qword_1ED759D80);
      v13 = v18;
      if ((sub_1C107090C() & 1) != 0)
      {
        sub_1C07DCD84();
        if ((v30 & 1) != (v32 & 1))
          goto LABEL_106;
        v29 = v31;
      }
      v33 = v127;
      if ((v30 & 1) != 0)
      {
        *(_QWORD *)(v127[7] + 8 * v29) = v122;
      }
      else
      {
        v127[(v29 >> 6) + 8] |= 1 << v29;
        v21((char *)(v33[6] + *(_QWORD *)(v121 + 72) * v29), v19, v123);
        *(_QWORD *)(v33[7] + 8 * v29) = v122;
        v34 = v33[2];
        v35 = __OFADD__(v34, 1);
        v36 = v34 + 1;
        if (v35)
          goto LABEL_104;
        v33[2] = v36;
      }
      v37 = (uint64_t *)v125;
      *(_QWORD *)(v125 + 40) = v33;
      swift_bridgeObjectRelease();
      v21(v114, v19, v123);
      v38 = *v37;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C07EBE48();
        v38 = v77;
      }
      v39 = *(_QWORD *)(v38 + 16);
      if (v39 >= *(_QWORD *)(v38 + 24) >> 1)
      {
        sub_1C07EBE48();
        v38 = v78;
      }
      *(_QWORD *)(v38 + 16) = v39 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v121 + 32))(v38+ ((*(unsigned __int8 *)(v121 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v121 + 80))+ *(_QWORD *)(v121 + 72) * v39, v114, v123);
      *(_QWORD *)v125 = v38;
      v35 = __OFADD__(v122++, 1);
      if (v35)
        goto LABEL_102;
    }
    v40 = v126 + v124[6];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0A794F0();
    v42 = v41;
    swift_bridgeObjectRelease();
    if ((v42 & 1) == 0)
    {
      v117 = v12;
      v43 = v121;
      v44 = *(void (**)(char *, uint64_t, uint64_t))(v121 + 16);
      v45 = v123;
      v44(v116, v40, v123);
      v46 = v125;
      v47 = v115;
      sub_1C0A7D4C4();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v47, v45);
      swift_isUniquelyReferenced_nonNull_native();
      v127 = *(_QWORD **)(v46 + 40);
      v48 = v127;
      *(_QWORD *)(v46 + 40) = 0x8000000000000000;
      sub_1C07DCD84();
      if (__OFADD__(v48[2], (v50 & 1) == 0))
        goto LABEL_101;
      v51 = v49;
      v52 = v50;
      sub_1C07ACF80(&qword_1ED759D80);
      if ((sub_1C107090C() & 1) != 0)
      {
        sub_1C07DCD84();
        if ((v52 & 1) != (v54 & 1))
          goto LABEL_106;
        v51 = v53;
      }
      v55 = v127;
      if ((v52 & 1) != 0)
      {
        *(_QWORD *)(v127[7] + 8 * v51) = v122;
      }
      else
      {
        v127[(v51 >> 6) + 8] |= 1 << v51;
        v44((char *)(v55[6] + *(_QWORD *)(v121 + 72) * v51), v40, v123);
        *(_QWORD *)(v55[7] + 8 * v51) = v122;
        v56 = v55[2];
        v35 = __OFADD__(v56, 1);
        v57 = v56 + 1;
        if (v35)
          goto LABEL_105;
        v55[2] = v57;
      }
      v58 = (uint64_t *)v125;
      *(_QWORD *)(v125 + 40) = v55;
      swift_bridgeObjectRelease();
      v44(v113, v40, v123);
      v59 = *v58;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C07EBE48();
        v59 = v79;
      }
      v12 = v117;
      v60 = *(_QWORD *)(v59 + 16);
      if (v60 >= *(_QWORD *)(v59 + 24) >> 1)
      {
        sub_1C07EBE48();
        v59 = v80;
      }
      *(_QWORD *)(v59 + 16) = v60 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v121 + 32))(v59+ ((*(unsigned __int8 *)(v121 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v121 + 80))+ *(_QWORD *)(v121 + 72) * v60, v113, v123);
      *(_QWORD *)v125 = v59;
      v35 = __OFADD__(v122++, 1);
      if (v35)
        goto LABEL_103;
    }
    v61 = *(_QWORD *)(v125 + 40);
    if (!*(_QWORD *)(v61 + 16))
      goto LABEL_92;
    sub_1C07DCD84();
    if ((v63 & 1) == 0)
      break;
    if (!*(_QWORD *)(v61 + 16))
      goto LABEL_94;
    v64 = *(_QWORD *)(*(_QWORD *)(v61 + 56) + 8 * v62);
    sub_1C07DCD84();
    if ((v66 & 1) == 0)
      goto LABEL_95;
    if (*(_QWORD *)(*(_QWORD *)(v61 + 56) + 8 * v65) < v64)
      v64 = *(_QWORD *)(*(_QWORD *)(v61 + 56) + 8 * v65);
    if (!*(_QWORD *)(v61 + 16))
      goto LABEL_96;
    sub_1C07DCD84();
    if ((v68 & 1) == 0)
      goto LABEL_97;
    if (!*(_QWORD *)(v61 + 16))
      goto LABEL_98;
    v69 = *(_QWORD *)(*(_QWORD *)(v61 + 56) + 8 * v67);
    sub_1C07DCD84();
    if ((v71 & 1) == 0)
      goto LABEL_99;
    if (*(_QWORD *)(*(_QWORD *)(v61 + 56) + 8 * v70) > v69)
      v69 = *(_QWORD *)(*(_QWORD *)(v61 + 56) + 8 * v70);
    v72 = *(_DWORD *)(v126 + v118);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C07EC32C();
      v12 = v75;
    }
    v11 = v119;
    v73 = *(_QWORD *)(v12 + 16);
    if (v73 >= *(_QWORD *)(v12 + 24) >> 1)
    {
      sub_1C07EC32C();
      v12 = v76;
    }
    *(_QWORD *)(v12 + 16) = v73 + 1;
    v74 = v12 + 24 * v73;
    *(_QWORD *)(v74 + 32) = v64;
    *(_QWORD *)(v74 + 40) = v69;
    *(_DWORD *)(v74 + 48) = v72;
LABEL_49:
    sub_1C0904908(v126);
    v13 += v120;
    if (!--v11)
    {
      swift_bridgeObjectRelease();
      goto LABEL_52;
    }
  }
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
LABEL_96:
  __break(1u);
LABEL_97:
  __break(1u);
LABEL_98:
  __break(1u);
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
LABEL_101:
  __break(1u);
LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  __break(1u);
LABEL_105:
  __break(1u);
LABEL_106:
  result = sub_1C1070D44();
  __break(1u);
  return result;
}

void sub_1C0ACCD50(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  int v8;
  unint64_t v9;
  uint64_t v10;

  v2 = 0;
  v3 = *(_QWORD *)(a1 + 16);
  v4 = a1 + 32;
  v5 = MEMORY[0x1E0DEE9D8];
LABEL_2:
  v6 = (_QWORD *)(v4 + 16 * v2);
  while (1)
  {
    if (v3 == v2)
    {
      swift_bridgeObjectRelease();
      return;
    }
    if (v2 >= *(_QWORD *)(a1 + 16))
      break;
    ++v2;
    v7 = *v6;
    v6 += 2;
    if (v7 == -1)
    {
      v8 = *((_DWORD *)v6 - 2);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_1C09D3FE8();
      v9 = *(_QWORD *)(v5 + 16);
      if (v9 >= *(_QWORD *)(v5 + 24) >> 1)
        sub_1C09D3FE8();
      *(_QWORD *)(v5 + 16) = v9 + 1;
      v10 = v5 + 24 * v9;
      *(_QWORD *)(v10 + 32) = v2 - 1;
      *(_QWORD *)(v10 + 40) = -1;
      *(_DWORD *)(v10 + 48) = v8;
      goto LABEL_2;
    }
  }
  __break(1u);
}

uint64_t sub_1C0ACCE70(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1C106E590();
    result = MEMORY[0x1C3BA8174](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0ACCEB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EntityMatch(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t getEnumTagSinglePayload for GraphEdge(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 20))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for GraphEdge(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_DWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 20) = v3;
  return result;
}

ValueMetadata *type metadata accessor for GraphEdge()
{
  return &type metadata for GraphEdge;
}

uint64_t sub_1C0ACCF50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  _BOOL4 v59;
  uint64_t v60;
  uint64_t v61;
  uint8_t *v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  int *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t *v71;
  uint64_t *v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  int *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;

  v111 = a1;
  v2 = type metadata accessor for CNContactStructs.AgentAffiliationRelationshipType(0);
  v3 = *(_QWORD *)(v2 - 8);
  v108 = (int *)v2;
  v109 = v3;
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v99 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = type metadata accessor for CNContactStructs.Person(0);
  MEMORY[0x1E0C80A78](v110);
  v112 = (char *)&v99 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED75F4C8 != -1)
    swift_once();
  v7 = type metadata accessor for SourceIdPrefix();
  sub_1C079E000(v7, (uint64_t)&unk_1ED78D7B8);
  String.base64EncodedSHA(withPrefix:)();
  v9 = v8;
  v11 = v10;
  type metadata accessor for HKEmergencyContactStructs.Person(0);
  sub_1C077B5BC();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0FAEFA0();
  if (v1)
    return swift_bridgeObjectRelease();
  v14 = v12;
  v103 = v5;
  v104 = v9;
  v106 = 0;
  v107 = v11;
  *(_OWORD *)(v12 + OBJC_IVAR____TtCO24IntelligencePlatformCore25HKEmergencyContactStructs6Person_isCurrentUser) = xmmword_1C10812C0;
  swift_bridgeObjectRelease();
  type metadata accessor for HKEmergencyContactStructs.AgentAffiliationRelationshipType(0);
  sub_1C077B5BC();
  sub_1C0FAD234();
  v16 = v15;
  v17 = sub_1C07973CC();
  sub_1C078F6B0(v17, v18);
  v19 = sub_1C07973CC();
  sub_1C078F6B0(v19, v20);
  *(_OWORD *)(v16
            + OBJC_IVAR____TtCO24IntelligencePlatformCore25HKEmergencyContactStructs32AgentAffiliationRelationshipType_confidence) = xmmword_1C10793A0;
  v21 = swift_bridgeObjectRelease();
  v22 = sub_1C07A0DC4(v21, (SEL *)&selRef_name);
  sub_1C07A0DC4(v22, (SEL *)&selRef_nameContactIdentifier);
  sub_1C0787E6C();
  sub_1C0796664();
  swift_bridgeObjectRelease();
  v23 = swift_bridgeObjectRelease();
  sub_1C07A0DC4(v23, (SEL *)&selRef_phoneNumberContactIdentifier);
  sub_1C0787E6C();
  sub_1C0796664();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v24 = HIBYTE(v114) & 0xF;
  if ((v114 & 0x2000000000000000) == 0)
    v24 = v113 & 0xFFFFFFFFFFFFLL;
  if (!v24)
  {
    swift_bridgeObjectRelease();
    sub_1C079DC90();
    sub_1C0898824();
    swift_allocError();
    *v27 = 0;
    swift_willThrow();
    sub_1C077AF1C();
    return swift_release();
  }
  v105 = v16;
  if (qword_1ED75ADE0 != -1)
    swift_once();
  sub_1C079E000(v7, (uint64_t)&unk_1ED78D460);
  String.base64EncodedSHA(withPrefix:)();
  swift_bridgeObjectRelease();
  swift_allocObject();
  v25 = v106;
  sub_1C0FAEFA0();
  if (v25)
  {
    sub_1C079DC90();
    swift_release();
    return swift_release();
  }
  v28 = v26;
  v29 = sub_1C106E530();
  v31 = sub_1C078F6B0(v29, v30);
  v32 = sub_1C07A0DC4(v31, (SEL *)&selRef_name);
  sub_1C078F6B0(v32, v33);
  type metadata accessor for HKEmergencyContactStructs.AddressRelationshipType(0);
  sub_1C077B5BC();
  sub_1C0FAB230();
  v35 = v34;
  v36 = sub_1C07A0DC4(v34, (SEL *)&selRef_phoneNumberLabel);
  v38 = sub_1C078F6B0(v36, v37);
  v39 = sub_1C07A0DC4(v38, (SEL *)&selRef_phoneNumber);
  sub_1C078F6B0(v39, v40);
  v41 = swift_retain();
  v102 = v35;
  sub_1C0FA9A00(v41);
  v42 = swift_retain();
  sub_1C0FA9A1C(v42);
  v43 = swift_retain();
  v44 = sub_1C0FA9A9C(v43);
  v45 = sub_1C07A0DC4(v44, (SEL *)&selRef_nameContactIdentifier);
  if (!v46)
  {
    v45 = sub_1C07A0DC4(v45, (SEL *)&selRef_phoneNumberContactIdentifier);
    if (!v46)
    {
      v45 = 0;
      v46 = 0xE000000000000000;
    }
  }
  v115 = MEMORY[0x1E0DEE9D8];
  v47 = HIBYTE(v46) & 0xF;
  if ((v46 & 0x2000000000000000) == 0)
    v47 = v45 & 0xFFFFFFFFFFFFLL;
  if (!v47)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED761458 != -1)
      swift_once();
    v56 = sub_1C106F544();
    sub_1C079E000(v56, (uint64_t)qword_1ED78D818);
    v57 = sub_1C106F538();
    v58 = sub_1C1070390();
    v59 = os_log_type_enabled(v57, v58);
    v60 = v107;
    v61 = v104;
    if (v59)
    {
      v62 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v62 = 0;
      _os_log_impl(&dword_1C0771000, v57, v58, "An ingested emergency contact did not have a valid ContactID.", v62, 2u);
      MEMORY[0x1C3BA8270](v62, -1, -1);
    }

    goto LABEL_28;
  }
  v106 = v14;
  v100 = v45;
  v101 = v46;
  if (qword_1ED75AE38 != -1)
    swift_once();
  v48 = (uint64_t *)sub_1C079E000(v7, (uint64_t)&unk_1ED75AE18);
  v49 = v48[1];
  v113 = *v48;
  v114 = v49;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C079ABBC();
  sub_1C106FC94();
  sub_1C0F4049C(v113, v114, v50, v51, v52, v53, v54, v55, v99, v100, v101, v102, (uint64_t)v103, v104, v105, v106, v107, (uint64_t)v108, v109,
    v110);
  v63 = v48;
  v99 = v28;
  v106 = 0;
  v64 = sub_1C106E41C();
  v65 = (uint64_t)v103;
  sub_1C07B2D8C((uint64_t)v103, 1, 1, v64);
  v66 = v108;
  sub_1C106D09C();
  v67 = v65 + v66[6];
  if (qword_1ED761438 != -1)
    swift_once();
  v68 = type metadata accessor for Source();
  v69 = sub_1C079E000(v68, (uint64_t)byte_1ED761420);
  sub_1C0893744(v69, v67, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C106DFF0();
  v70 = (uint64_t *)(v65 + v66[8]);
  sub_1C106E038();
  v71 = (uint64_t *)(v65 + v66[10]);
  sub_1C106E1D0();
  v72 = (uint64_t *)(v65 + v66[12]);
  sub_1C106DD74();
  v73 = v66[14];
  *(_QWORD *)(v65 + v73) = 0;
  sub_1C106DCCC();
  v74 = (_QWORD *)(v65 + v66[16]);
  *v74 = 0;
  v74[1] = 0;
  *v71 = sub_1C0799CE4();
  v71[1] = v75;
  *v72 = sub_1C0799CE4();
  v72[1] = v76;
  *v70 = sub_1C106E530();
  v70[1] = v77;
  v78 = sub_1C0799CE4();
  if (v79)
  {
    v80 = v78;
    v81 = v79;
    sub_1C07ACF80(&qword_1ED762CB0);
    v82 = swift_allocObject();
    *(_OWORD *)(v82 + 16) = xmmword_1C1079220;
    *(_QWORD *)(v82 + 32) = v80;
    *(_QWORD *)(v82 + 40) = v81;
    *(_QWORD *)(v65 + v73) = v82;
  }
  sub_1C07ACF80((uint64_t *)&unk_1EF633720);
  v83 = (*(unsigned __int8 *)(v109 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v109 + 80);
  v84 = swift_allocObject();
  *(_OWORD *)(v84 + 16) = xmmword_1C1079220;
  sub_1C0893744(v65, v84 + v83, type metadata accessor for CNContactStructs.AgentAffiliationRelationshipType);
  v85 = v110;
  v86 = *(int *)(v110 + 232);
  v87 = (uint64_t)v112;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v87 + v86) = v84;
  sub_1C0F506BC();
  sub_1C07D9AD0();
  v89 = v88;
  v90 = *(int *)(v85 + 244);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v87 + v90) = v89;
  sub_1C0F50924();
  v91 = v63[1];
  v113 = *v63;
  v114 = v91;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C079ABBC();
  sub_1C106FC94();
  sub_1C077B5B4();
  v92 = v113;
  LOBYTE(v113) = 1;
  v93 = v106;
  sub_1C0F42704(v92, v114, (uint64_t)&v113, v94, v95, v96, v97, v98, v99, v100, v101, v102, (uint64_t)v103, v104, v105, v106, v107, (uint64_t)v108, v109,
    v110);
  if (!v93)
  {
    sub_1C077B5B4();
    sub_1C0BD9D34();
    sub_1C07B1FDC(v87, type metadata accessor for CNContactStructs.Person);
    sub_1C07B1FDC(v65, type metadata accessor for CNContactStructs.AgentAffiliationRelationshipType);
    v61 = v104;
    v60 = v107;
LABEL_28:
    LOBYTE(v113) = 1;
    sub_1C0FA9AB8(v61, v60, (unsigned __int8 *)&v113);
    swift_bridgeObjectRelease();
    sub_1C0BD9D34();
    sub_1C077ED08();
    sub_1C077AF1C();
    sub_1C07814FC();
    sub_1C079D578();
    return v115;
  }
  sub_1C079DC90();
  sub_1C079D578();
  swift_release();
  swift_release();
  sub_1C077ED08();
  sub_1C077B5B4();
  sub_1C07B1FDC(v87, type metadata accessor for CNContactStructs.Person);
  swift_bridgeObjectRelease();
  return sub_1C07B1FDC(v65, type metadata accessor for CNContactStructs.AgentAffiliationRelationshipType);
}

uint64_t sub_1C0ACD8C0(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v2;
  type metadata accessor for Fuser();
  *(_QWORD *)(v3 + 32) = sub_1C0779D74();
  type metadata accessor for Linker();
  *(_QWORD *)(v3 + 40) = sub_1C0779D74();
  sub_1C07ACF80(&qword_1ED762590);
  *(_QWORD *)(v3 + 48) = sub_1C0779D74();
  sub_1C07ACF80(&qword_1ED759C40);
  *(_QWORD *)(v3 + 56) = sub_1C0779D74();
  *(_QWORD *)(v3 + 64) = type metadata accessor for HKEmergencyContactSourceIngestor();
  *(_QWORD *)(v3 + 72) = sub_1C0786414();
  *(_QWORD *)(v3 + 80) = sub_1C0775870();
  *(_QWORD *)(v3 + 88) = sub_1C0775870();
  *(_QWORD *)(v3 + 96) = type metadata accessor for Source();
  *(_QWORD *)(v3 + 104) = sub_1C0786414();
  *(_QWORD *)(v3 + 112) = sub_1C0775870();
  type metadata accessor for PhaseStores();
  *(_QWORD *)(v3 + 120) = sub_1C0786414();
  *(_QWORD *)(v3 + 128) = sub_1C0775870();
  *(_QWORD *)(v3 + 136) = sub_1C0775870();
  *(_BYTE *)(v3 + 161) = *a2;
  return swift_task_switch();
}

uint64_t sub_1C0ACD9AC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char v20;

  sub_1C0893744(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 136), (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  if (qword_1ED7622A8 != -1)
    swift_once();
  v1 = *(_BYTE *)(v0 + 161);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 48);
  v7 = *(_QWORD *)(v0 + 16);
  v8 = sub_1C079E000(*(_QWORD *)(v0 + 96), (uint64_t)&unk_1ED762288);
  *(_QWORD *)(v0 + 144) = v8;
  sub_1C0893744(v8, v3, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0893744(v7, v2, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C0893744(v8, v4 + *(int *)(v5 + 20), (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0893744(v2, v4, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  *(_BYTE *)(v4 + *(int *)(v5 + 24)) = v1;
  v9 = sub_1C106AEF4();
  sub_1C07B2D8C(v6, 1, 1, v9);
  sub_1C106E620();
  v20 = *(_BYTE *)(v0 + 161);
  v10 = *(_QWORD *)(v0 + 120);
  v11 = *(_QWORD *)(v0 + 104);
  v13 = *(_QWORD *)(v0 + 80);
  v12 = *(_QWORD *)(v0 + 88);
  v14 = *(_QWORD *)(v0 + 56);
  v15 = *(_QWORD *)(v0 + 64);
  v16 = *(_QWORD *)(v0 + 16);
  sub_1C07B1FDC(*(_QWORD *)(v0 + 128), (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  v17 = sub_1C106E638();
  sub_1C07B2D8C(v14, 0, 1, v17);
  sub_1C0ACDE0C(v14, v13 + *(int *)(v15 + 28));
  sub_1C0ACDE54(v13, v12);
  sub_1C0893744(v8, v11, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0893744(v16, v10, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  *(_BYTE *)(v0 + 160) = v20;
  v18 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v18;
  *v18 = v0;
  v18[1] = sub_1C0ACDBD0;
  return Linker.init(source:stores:pipelineType:)(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 120), (_BYTE *)(v0 + 160));
}

uint64_t sub_1C0ACDBD0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1C0ACDC24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 112);
  v10 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 32);
  v11 = *(_QWORD *)(v0 + 24);
  v6 = *(_QWORD *)(v0 + 16);
  sub_1C0893744(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 104), (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0893744(v6, v1, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  Fuser.init(source:stores:pipelineType:)();
  sub_1C07B1FDC(v6, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C0893744(v2, v3, (uint64_t (*)(_QWORD))type metadata accessor for HKEmergencyContactSourceIngestor);
  sub_1C0A5BBD0(v10, v9, v3, v4, v5, 1, v11);
  v12 = v7;
  sub_1C07B1FDC(v2, (uint64_t (*)(_QWORD))type metadata accessor for HKEmergencyContactSourceIngestor);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v12);
}

void sub_1C0ACDDA0()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1C0ACDDCC()
{
  return type metadata accessor for HKEmergencyContactPhase();
}

uint64_t type metadata accessor for HKEmergencyContactPhase()
{
  uint64_t result;

  result = qword_1ED750ED8;
  if (!qword_1ED750ED8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C0ACDE0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1ED759C40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0ACDE54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HKEmergencyContactSourceIngestor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1C0ACDE98(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v23)(char *, char *, uint64_t);
  char *v24;
  char *v25;
  uint64_t v26;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1C106AB28();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = type metadata accessor for Configuration();
    *(_OWORD *)((char *)a1 + *(int *)(v8 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v8 + 20));
    v9 = (int *)type metadata accessor for PhaseStores();
    *(_QWORD *)((char *)a1 + v9[5]) = *(_QWORD *)((char *)a2 + v9[5]);
    *(_QWORD *)((char *)a1 + v9[6]) = *(_QWORD *)((char *)a2 + v9[6]);
    *(_QWORD *)((char *)a1 + v9[7]) = *(_QWORD *)((char *)a2 + v9[7]);
    *(_QWORD *)((char *)a1 + v9[8]) = *(_QWORD *)((char *)a2 + v9[8]);
    *(_QWORD *)((char *)a1 + v9[9]) = *(_QWORD *)((char *)a2 + v9[9]);
    *(_QWORD *)((char *)a1 + v9[10]) = *(_QWORD *)((char *)a2 + v9[10]);
    *(_QWORD *)((char *)a1 + v9[11]) = *(_QWORD *)((char *)a2 + v9[11]);
    v10 = a3[5];
    v11 = (_QWORD *)((char *)a1 + v10);
    v12 = (char *)a2 + v10;
    v13 = *(_QWORD *)((char *)a2 + v10 + 8);
    *v11 = *(_QWORD *)((char *)a2 + v10);
    v11[1] = v13;
    v11[2] = *(_QWORD *)((char *)a2 + v10 + 16);
    v26 = type metadata accessor for Source();
    v14 = *(int *)(v26 + 24);
    v24 = &v12[v14];
    v25 = (char *)v11 + v14;
    v15 = sub_1C106D1F8();
    v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v23(v25, v24, v15);
    *((_BYTE *)v11 + *(int *)(v26 + 28)) = v12[*(int *)(v26 + 28)];
    v16 = a3[7];
    *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = sub_1C106E638();
    if (sub_1C07B2D80((uint64_t)v18, 1, v19))
    {
      v20 = sub_1C07ACF80(&qword_1ED759C40);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
      sub_1C07B2D8C((uint64_t)v17, 0, 1, v19);
    }
  }
  return a1;
}

uint64_t sub_1C0ACE0E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v4 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  type metadata accessor for PhaseStores();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v5 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  v6 = v5 + *(int *)(type metadata accessor for Source() + 24);
  v7 = sub_1C106D1F8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = a1 + *(int *)(a2 + 28);
  v9 = sub_1C106E638();
  result = sub_1C07B2D80(v8, 1, v9);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  return result;
}

uint64_t sub_1C0ACE210(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  char *v24;
  uint64_t v25;

  v6 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = type metadata accessor for Configuration();
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  v8 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(a1 + v8[5]) = *(_QWORD *)(a2 + v8[5]);
  *(_QWORD *)(a1 + v8[6]) = *(_QWORD *)(a2 + v8[6]);
  *(_QWORD *)(a1 + v8[7]) = *(_QWORD *)(a2 + v8[7]);
  *(_QWORD *)(a1 + v8[8]) = *(_QWORD *)(a2 + v8[8]);
  *(_QWORD *)(a1 + v8[9]) = *(_QWORD *)(a2 + v8[9]);
  *(_QWORD *)(a1 + v8[10]) = *(_QWORD *)(a2 + v8[10]);
  *(_QWORD *)(a1 + v8[11]) = *(_QWORD *)(a2 + v8[11]);
  v9 = a3[5];
  v10 = (_QWORD *)(a1 + v9);
  v11 = a2 + v9;
  v12 = *(_QWORD *)(a2 + v9 + 8);
  *v10 = *(_QWORD *)(a2 + v9);
  v10[1] = v12;
  v10[2] = *(_QWORD *)(a2 + v9 + 16);
  v13 = type metadata accessor for Source();
  v14 = *(int *)(v13 + 24);
  v24 = (char *)v10 + v14;
  v25 = v13;
  v23 = v11 + v14;
  v15 = sub_1C106D1F8();
  v22 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v22(v24, v23, v15);
  *((_BYTE *)v10 + *(int *)(v25 + 28)) = *(_BYTE *)(v11 + *(int *)(v25 + 28));
  v16 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  v19 = sub_1C106E638();
  if (sub_1C07B2D80((uint64_t)v18, 1, v19))
  {
    v20 = sub_1C07ACF80(&qword_1ED759C40);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    sub_1C07B2D8C((uint64_t)v17, 0, 1, v19);
  }
  return a1;
}

uint64_t sub_1C0ACE438(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;

  v6 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for Configuration() + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  v10 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(a1 + v10[5]) = *(_QWORD *)(a2 + v10[5]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[6]) = *(_QWORD *)(a2 + v10[6]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[7]) = *(_QWORD *)(a2 + v10[7]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[8]) = *(_QWORD *)(a2 + v10[8]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[9]) = *(_QWORD *)(a2 + v10[9]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[10]) = *(_QWORD *)(a2 + v10[10]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[11]) = *(_QWORD *)(a2 + v10[11]);
  swift_retain();
  swift_release();
  v11 = a3[5];
  v12 = (_QWORD *)(a1 + v11);
  v13 = a2 + v11;
  *v12 = *(_QWORD *)(a2 + v11);
  v12[1] = *(_QWORD *)(a2 + v11 + 8);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  v12[2] = *(_QWORD *)(v13 + 16);
  v14 = type metadata accessor for Source();
  v15 = *(int *)(v14 + 24);
  v16 = (char *)v12 + v15;
  v17 = v13 + v15;
  v18 = sub_1C106D1F8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  *((_BYTE *)v12 + *(int *)(v14 + 28)) = *(_BYTE *)(v13 + *(int *)(v14 + 28));
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v19 = a3[7];
  v20 = (void *)(a1 + v19);
  v21 = (const void *)(a2 + v19);
  v22 = sub_1C106E638();
  LODWORD(v16) = sub_1C07B2D80((uint64_t)v20, 1, v22);
  v23 = sub_1C07B2D80((uint64_t)v21, 1, v22);
  if (!(_DWORD)v16)
  {
    v24 = *(_QWORD *)(v22 - 8);
    if (!v23)
    {
      (*(void (**)(void *, const void *, uint64_t))(v24 + 24))(v20, v21, v22);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v24 + 8))(v20, v22);
    goto LABEL_6;
  }
  if (v23)
  {
LABEL_6:
    v25 = sub_1C07ACF80(&qword_1ED759C40);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  sub_1C07B2D8C((uint64_t)v20, 0, 1, v22);
  return a1;
}

uint64_t sub_1C0ACE6D4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = type metadata accessor for Configuration();
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  v8 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(a1 + v8[5]) = *(_QWORD *)(a2 + v8[5]);
  *(_QWORD *)(a1 + v8[6]) = *(_QWORD *)(a2 + v8[6]);
  *(_QWORD *)(a1 + v8[7]) = *(_QWORD *)(a2 + v8[7]);
  *(_QWORD *)(a1 + v8[8]) = *(_QWORD *)(a2 + v8[8]);
  *(_QWORD *)(a1 + v8[9]) = *(_QWORD *)(a2 + v8[9]);
  *(_QWORD *)(a1 + v8[10]) = *(_QWORD *)(a2 + v8[10]);
  *(_QWORD *)(a1 + v8[11]) = *(_QWORD *)(a2 + v8[11]);
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_OWORD *)v10 = *(_OWORD *)(a2 + v9);
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(a2 + v9 + 16);
  v12 = type metadata accessor for Source();
  v13 = *(int *)(v12 + 24);
  v14 = v10 + v13;
  v15 = v11 + v13;
  v16 = sub_1C106D1F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  *(_BYTE *)(v10 + *(int *)(v12 + 28)) = *(_BYTE *)(v11 + *(int *)(v12 + 28));
  v17 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  v20 = sub_1C106E638();
  if (sub_1C07B2D80((uint64_t)v19, 1, v20))
  {
    v21 = sub_1C07ACF80(&qword_1ED759C40);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
    sub_1C07B2D8C((uint64_t)v18, 0, 1, v20);
  }
  return a1;
}

uint64_t sub_1C0ACE888(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = type metadata accessor for Configuration();
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  v8 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(a1 + v8[5]) = *(_QWORD *)(a2 + v8[5]);
  swift_release();
  *(_QWORD *)(a1 + v8[6]) = *(_QWORD *)(a2 + v8[6]);
  swift_release();
  *(_QWORD *)(a1 + v8[7]) = *(_QWORD *)(a2 + v8[7]);
  swift_release();
  *(_QWORD *)(a1 + v8[8]) = *(_QWORD *)(a2 + v8[8]);
  swift_release();
  *(_QWORD *)(a1 + v8[9]) = *(_QWORD *)(a2 + v8[9]);
  swift_release();
  *(_QWORD *)(a1 + v8[10]) = *(_QWORD *)(a2 + v8[10]);
  swift_release();
  *(_QWORD *)(a1 + v8[11]) = *(_QWORD *)(a2 + v8[11]);
  swift_release();
  v9 = a3[5];
  v10 = (_QWORD *)(a1 + v9);
  v11 = a2 + v9;
  v12 = *(_QWORD *)(a2 + v9 + 8);
  *v10 = *(_QWORD *)(a2 + v9);
  v10[1] = v12;
  swift_bridgeObjectRelease();
  v10[2] = *(_QWORD *)(v11 + 16);
  v13 = type metadata accessor for Source();
  v14 = *(int *)(v13 + 24);
  v15 = (char *)v10 + v14;
  v16 = v11 + v14;
  v17 = sub_1C106D1F8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v15, v16, v17);
  *((_BYTE *)v10 + *(int *)(v13 + 28)) = *(_BYTE *)(v11 + *(int *)(v13 + 28));
  v18 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v19 = (void *)(a1 + v18);
  v20 = (const void *)(a2 + v18);
  v21 = sub_1C106E638();
  LODWORD(v15) = sub_1C07B2D80((uint64_t)v19, 1, v21);
  v22 = sub_1C07B2D80((uint64_t)v20, 1, v21);
  if (!(_DWORD)v15)
  {
    v23 = *(_QWORD *)(v21 - 8);
    if (!v22)
    {
      (*(void (**)(void *, const void *, uint64_t))(v23 + 40))(v19, v20, v21);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v23 + 8))(v19, v21);
    goto LABEL_6;
  }
  if (v22)
  {
LABEL_6:
    v24 = sub_1C07ACF80(&qword_1ED759C40);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
  sub_1C07B2D8C((uint64_t)v19, 0, 1, v21);
  return a1;
}

uint64_t sub_1C0ACEAC8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0ACEAD4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;

  v6 = sub_1C078A314();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
    return sub_1C07B2D80(v8, a2, v7);
  }
  v9 = type metadata accessor for Source();
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v9;
    v10 = a3[5];
LABEL_10:
    v8 = a1 + v10;
    return sub_1C07B2D80(v8, a2, v7);
  }
  if ((_DWORD)a2 != 252)
  {
    v7 = sub_1C07ACF80(&qword_1ED759C40);
    v10 = a3[7];
    goto LABEL_10;
  }
  v11 = *(unsigned __int8 *)(a1 + a3[6]);
  if (v11 >= 4)
    return v11 - 3;
  else
    return 0;
}

uint64_t sub_1C0ACEB8C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0ACEB98(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v8 = sub_1C078A314();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
  }
  else
  {
    result = type metadata accessor for Source();
    if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    {
      v9 = result;
      v12 = a4[5];
    }
    else
    {
      if (a3 == 252)
      {
        *(_BYTE *)(a1 + a4[6]) = a2 + 3;
        return result;
      }
      v9 = sub_1C07ACF80(&qword_1ED759C40);
      v12 = a4[7];
    }
    v10 = a1 + v12;
  }
  return sub_1C07B2D8C(v10, a2, a2, v9);
}

uint64_t type metadata accessor for HKEmergencyContactSourceIngestor()
{
  uint64_t result;

  result = qword_1ED7511C0;
  if (!qword_1ED7511C0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1C0ACEC88()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for PhaseStores();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Source();
    if (v1 <= 0x3F)
    {
      sub_1C08C0260();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t sub_1C0ACED30()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 152) = v0;
  return swift_task_switch();
}

uint64_t sub_1C0ACED48()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;

  *(_QWORD *)(v0 + 136) = 0;
  *(_QWORD *)(v0 + 144) = 0;
  if ((objc_msgSend((id)objc_opt_self(), sel_isHealthDataAvailable) & 1) != 0)
  {
    v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6780]), sel_init);
    *(_QWORD *)(v0 + 160) = v1;
    v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6848]), sel_initWithHealthStore_, v1);
    *(_QWORD *)(v0 + 168) = v2;
    *(_QWORD *)(v0 + 120) = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v0 + 56) = v0 + 128;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_1C0ACEF44;
    v3 = swift_continuation_init();
    *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
    v4 = (_QWORD *)(v0 + 80);
    v4[1] = 0x40000000;
    v4[2] = sub_1C0ACF3D0;
    v4[3] = &unk_1E7A1E740;
    v4[4] = v3;
    objc_msgSend(v2, sel_fetchMedicalIDEmergencyContactsWithCompletion_, v4);
    return swift_continuation_await();
  }
  else
  {
    if (qword_1ED761458 != -1)
      swift_once();
    v6 = sub_1C106F544();
    sub_1C079E000(v6, (uint64_t)qword_1ED78D818);
    v7 = sub_1C106F538();
    v8 = sub_1C1070390();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_1C0771000, v7, v8, "HealthKit data unavailable on this device", v9, 2u);
      MEMORY[0x1C3BA8270](v9, -1, -1);
    }

    sub_1C0796674();
    sub_1C07A0DCC();
    sub_1C0ACF190((uint64_t)v7, (_QWORD *)(v0 + 136), (_QWORD *)(v0 + 144));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1C0ACEF44()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 176) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1C0ACEFA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  void *v4;
  uint64_t (*v5)(void);

  v1 = *(_QWORD *)(v0 + 128);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 120) = v1;
  *(_BYTE *)(v0 + 80) = 0;
  v2 = *(_QWORD *)(v0 + 152);
  sub_1C078A314();
  v3 = (_QWORD *)sub_1C0799990();
  v3[2] = v0 + 120;
  v3[3] = v2;
  v3[4] = v0 + 144;
  v3[5] = v0 + 136;
  v3[6] = v0 + 80;
  sub_1C077D0BC();
  v4 = *(void **)(v0 + 168);

  sub_1C077C104();
  sub_1C0789FA8();
  if (v0 == -80)
  {
    sub_1C0796674();
    sub_1C07A0DCC();
    sub_1C07A6D50();
    v5 = (uint64_t (*)(void))MEMORY[0xFFFFFFFFFFFFFFB8];
  }
  else
  {
    sub_1C07A6D50();
    v5 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v5();
}

uint64_t sub_1C0ACF080()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  uint64_t (*v6)(void);
  unsigned __int8 v8[9];

  v1 = *(void **)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 152);
  swift_willThrow();
  v8[0] = 1;
  static Transformers.reportError(error:context:config:pipelineType:)((uint64_t)v1, 0xD000000000000012, 0x80000001C10FBD70, v2, v8);

  *(_BYTE *)(v0 + 80) = 0;
  v3 = *(_QWORD *)(v0 + 152);
  sub_1C078A314();
  v4 = (_QWORD *)sub_1C0799990();
  v4[2] = v0 + 120;
  v4[3] = v3;
  v4[4] = v0 + 144;
  v4[5] = v0 + 136;
  v4[6] = v0 + 80;
  sub_1C077D0BC();
  v5 = *(void **)(v0 + 168);

  sub_1C077C104();
  sub_1C0789FA8();
  if (v0 == -120)
  {
    sub_1C0796674();
    sub_1C07A0DCC();
    sub_1C07A6D50();
    v6 = (uint64_t (*)(void))MEMORY[0xFFFFFFFFFFFFFF90];
  }
  else
  {
    sub_1C07A6D50();
    v6 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v6();
}

uint64_t sub_1C0ACF190(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t inited;
  uint64_t v10;
  uint64_t result;
  _BYTE v12[128];

  v6 = type metadata accessor for Pipeline.StatusStore();
  MEMORY[0x1E0C80A78](v6);
  v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C0893744(a1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v8[*(int *)(v6 + 20)] = 1;
  Pipeline.StatusStore.currentSessionId()();
  sub_1C0A157EC((uint64_t)v8);
  sub_1C106F244();
  sub_1C07ACF80((uint64_t *)&unk_1ED7614C0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C10795A0;
  *(_QWORD *)(inited + 32) = 0x496E6F6973736573;
  *(_QWORD *)(inited + 40) = 0xE900000000000064;
  v10 = sub_1C106FAF0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 48) = v10;
  *(_QWORD *)(inited + 56) = 0x614E656372756F73;
  *(_QWORD *)(inited + 64) = 0xEA0000000000656DLL;
  sub_1C07D4B70(0, &qword_1ED760190);
  *(_QWORD *)(inited + 72) = sub_1C1070528();
  *(_QWORD *)(inited + 80) = 0x756F436E656B6174;
  *(_QWORD *)(inited + 88) = 0xEA0000000000746ELL;
  *(_QWORD *)(inited + 96) = sub_1C1070294();
  strcpy((char *)(inited + 104), "droppedCount");
  *(_BYTE *)(inited + 117) = 0;
  *(_WORD *)(inited + 118) = -5120;
  result = *a3 - *a2;
  if (__OFSUB__(*a3, *a2))
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(inited + 120) = sub_1C1070294();
    sub_1C07D4B70(0, (unint64_t *)&qword_1ED761490);
    sub_1C106F97C();
    sub_1C106F22C();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C0ACF3D0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
    return sub_1C0E59318(v3, a3);
  sub_1C07D4B70(0, &qword_1ED7512D8);
  v5 = sub_1C106FF04();
  return sub_1C0E593B4(v3, v5);
}

uint64_t sub_1C0ACF438@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t *a2@<X2>, uint64_t a3@<X3>, _QWORD *a4@<X4>, _QWORD *a5@<X5>, _BYTE *a6@<X6>, _BYTE *a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  _BYTE *v18;
  uint64_t v22;
  unint64_t v23;

  v8 = v7;
  v10 = *a2;
  if ((unint64_t)*a2 >> 62)
    goto LABEL_17;
  v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  for (; v11; v11 = sub_1C10709B4())
  {
    v18 = a7;
    v23 = v10 & 0xC000000000000001;
    v12 = 4;
    v22 = v10;
    while (1)
    {
      v13 = v23 ? (_BYTE *)MEMORY[0x1C3BA70DC](v12 - 4, v10) : *(id *)(v10 + 8 * v12);
      a7 = v13;
      v14 = v12 - 3;
      if (__OFADD__(v12 - 4, 1))
        break;
      sub_1C0CCBD8C();
      if (v8)
      {

        return swift_bridgeObjectRelease();
      }
      if (__OFADD__(*a4, 1))
        goto LABEL_15;
      ++*a4;
      v15 = type metadata accessor for HKEmergencyContactSourceIngestor();
      sub_1C0ACCF50(a3 + *(int *)(v15 + 28));
      sub_1C0A56D74();
      v10 = v16;
      swift_bridgeObjectRelease();
      a1(v10);
      v8 = 0;
      swift_bridgeObjectRelease();

      if (__OFADD__(*a5, 1))
        goto LABEL_16;
      ++*a5;
      v10 = v22;
      ++v12;
      if (v14 == v11)
      {
        result = swift_bridgeObjectRelease();
        a7 = v18;
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  result = swift_bridgeObjectRelease();
LABEL_19:
  *a7 = *a6;
  return result;
}

uint64_t sub_1C0ACF734()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C0806670;
  return sub_1C0ACED30();
}

uint64_t sub_1C0ACF77C(uint64_t a1)
{
  uint64_t result;

  result = sub_1C0ACF818(&qword_1ED7511A0, (uint64_t)&unk_1C109F2E0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0ACF7B0(uint64_t a1)
{
  uint64_t result;

  result = sub_1C0ACF818(&qword_1ED7511B8, (uint64_t)&unk_1C109F308);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0ACF7E4(uint64_t a1)
{
  uint64_t result;

  result = sub_1C0ACF818(&qword_1ED7511B0, (uint64_t)&unk_1C109F324);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0ACF818(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for HKEmergencyContactSourceIngestor();
    result = MEMORY[0x1C3BA8174](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0ACF858@<X0>(void (*a1)(uint64_t)@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_1C0ACF438(a1, *(uint64_t **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD **)(v2 + 32), *(_QWORD **)(v2 + 40), *(_BYTE **)(v2 + 48), a2);
}

ValueMetadata *type metadata accessor for HomeKitDataProvider()
{
  return &type metadata for HomeKitDataProvider;
}

uint64_t sub_1C0ACF888()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C0ACF898(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v16;
  uint64_t v17;

  v4 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07D97D4();
  v17 = sub_1C106F97C();
  if (a2)
  {
    v7 = sub_1C0846380();
    if (v7)
    {
      v8 = v7;
      v9 = sub_1C077AE98();
      sub_1C07B2D8C((uint64_t)v6, 1, 1, v9);
      sub_1C0ACA89C(a1, a2, (uint64_t)v6);
      v11 = v10;
      sub_1C077CDB4((uint64_t)v6);
      sub_1C07F4DDC(v8);
      if (v11)
      {
        sub_1C07F5FD8();
        if (v12)
        {
          v13 = v17;
          swift_isUniquelyReferenced_nonNull_native();
          v16 = v13;
          sub_1C08A07B0();
          v17 = v16;
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1C07F2B9C();

        }
      }
    }
  }
  return v17;
}

uint64_t sub_1C0ACFA3C()
{
  uint64_t v0;

  return sub_1C0ACF898(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
}

void sub_1C0ACFA44()
{
  void *v0;
  id v1;
  id v2;
  id v3;

  v1 = objc_msgSend((id)BiomeLibrary(), sel_HomeKit);
  sub_1C07987FC();
  v2 = objc_msgSend(v0, sel_Client);
  swift_unknownObjectRelease();
  v3 = objc_msgSend(v2, sel_AccessoryControl);
  sub_1C07987FC();
  sub_1C07E1E88();

}

void sub_1C0ACFB00()
{
  sub_1C0ACFA44();
}

uint64_t *sub_1C0ACFB14(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1C106ADE0();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  return a1;
}

uint64_t sub_1C0ACFBC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v4 = sub_1C106ADE0();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0ACFC2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v6 = sub_1C106ADE0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

uint64_t sub_1C0ACFCB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;

  v6 = sub_1C106ADE0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v9[1] = v10[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0ACFD50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1C106ADE0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 24)) = *(_OWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1C0ACFDCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_1C106ADE0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0ACFE58()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0ACFE64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;
  int v9;

  v6 = sub_1C077AE98();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return sub_1C07B2D80(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  v9 = v8 - 1;
  if (v9 < 0)
    v9 = -1;
  return (v9 + 1);
}

uint64_t sub_1C0ACFEE8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0ACFEF4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = sub_1C077AE98();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return sub_1C07B2D8C(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = a2;
  return result;
}

uint64_t type metadata accessor for HomeKitEvent()
{
  uint64_t result;

  result = qword_1EF63AAB0;
  if (!qword_1EF63AAB0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C0ACFFA0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C106ADE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1C0AD0018()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF63AAF0;
  if (!qword_1EF63AAF0)
  {
    v1 = sub_1C07D4BEC(qword_1EF63AAF8);
    result = MEMORY[0x1C3BA8174](&unk_1C10B5B14, v1);
    atomic_store(result, (unint64_t *)&qword_1EF63AAF0);
  }
  return result;
}

ValueMetadata *type metadata accessor for HomeKitContent()
{
  return &type metadata for HomeKitContent;
}

void HomeMatcher.stores.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1C07E05C8(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
}

void HomeMatcher.source.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1C0799CF0();
  sub_1C07E05C8(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(_QWORD))type metadata accessor for Source);
}

uint64_t type metadata accessor for HomeMatcher()
{
  uint64_t result;

  result = qword_1EF63ABC8;
  if (!qword_1EF63ABC8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t HomeMatcher.pipelineType.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_1C0799CF0();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t HomeMatcher.stateStore.getter()
{
  sub_1C0799CF0();
  return swift_retain();
}

void HomeMatcher.stageName.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t HomeMatcher.entityClass.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(sub_1C0799CF0() + 32);
  v4 = sub_1C0776744();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

void HomeMatcher.init(stores:source:pipelineType:)(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  char v7;
  int *v8;
  uint64_t v9;

  v7 = *a3;
  v8 = (int *)sub_1C0799CF0();
  sub_1C106D0E4();
  *(_DWORD *)(a4 + v8[9]) = 1056964608;
  sub_1C07E05C8(a1, a4, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C07E05F4(a2, a4 + v8[5], (uint64_t (*)(_QWORD))type metadata accessor for Source);
  *(_BYTE *)(a4 + v8[6]) = v7;
  v9 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PhaseStores() + 28));
  swift_retain();
  sub_1C07B1F90(a1, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  *(_QWORD *)(a4 + v8[7]) = v9;
}

float sub_1C0AD0250(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  float v19;
  unint64_t v20;
  uint64_t v21;
  BOOL v22;
  char v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v36;
  char v37;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  char v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v4 = sub_1C106E41C();
  v53 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v50 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v45 - v7;
  v56 = type metadata accessor for EntityTriple(0);
  MEMORY[0x1E0C80A78](v56);
  MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v45 - v11;
  MEMORY[0x1E0C80A78](v13);
  v18 = *(_QWORD *)(a1 + 16);
  v19 = 0.0;
  if (v18)
  {
    v48 = (uint64_t)&v45 - v15;
    v49 = a2;
    v51 = a1;
    v52 = v17;
    v20 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    v46 = v16;
    v47 = v20;
    v21 = a1 + v20;
    v54 = *(_QWORD *)(v14 + 72);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v55 = v4;
    while (1)
    {
      sub_1C07E05C8(v21, (uint64_t)v12, type metadata accessor for EntityTriple);
      sub_1C106DE70();
      sub_1C0794BAC(&qword_1ED75E7E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC80]);
      sub_1C106FE44();
      sub_1C106FE44();
      v22 = v59 == v57 && v60 == v58;
      v23 = v22 ? 1 : sub_1C1070CB4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v24 = *(void (**)(char *, uint64_t))(v53 + 8);
      v25 = v55;
      v24(v8, v55);
      if ((v23 & 1) != 0)
        break;
      sub_1C07B1F90((uint64_t)v12, type metadata accessor for EntityTriple);
      v21 += v54;
      if (!--v18)
        goto LABEL_21;
    }
    swift_bridgeObjectRelease();
    v26 = (uint64_t)v12;
    v27 = v48;
    sub_1C07E05F4(v26, v48, type metadata accessor for EntityTriple);
    v28 = (uint64_t *)(v27 + *(int *)(v56 + 32));
    v30 = *v28;
    v29 = v28[1];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C07B1F90(v27, type metadata accessor for EntityTriple);
    v31 = *(_QWORD *)(v49 + 16);
    if (!v31)
    {
LABEL_21:
      swift_bridgeObjectRelease();
      return v19;
    }
    v51 = v30;
    v53 = v29;
    v32 = v49 + v47;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v33 = v50;
    v34 = v52;
    while (1)
    {
      sub_1C07E05C8(v32, v34, type metadata accessor for EntityTriple);
      sub_1C106DE70();
      sub_1C106FE44();
      sub_1C106FE44();
      if (v59 == v57 && v60 == v58)
        break;
      v36 = v25;
      v37 = sub_1C1070CB4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v24(v33, v36);
      if ((v37 & 1) != 0)
        goto LABEL_24;
      v34 = v52;
      sub_1C07B1F90(v52, type metadata accessor for EntityTriple);
      v25 = v55;
      v32 += v54;
      if (!--v31)
      {
        swift_bridgeObjectRelease();
        goto LABEL_21;
      }
    }
    swift_bridgeObjectRelease_n();
    v24(v33, v25);
LABEL_24:
    swift_bridgeObjectRelease();
    v39 = v46;
    sub_1C07E05F4(v52, v46, type metadata accessor for EntityTriple);
    v40 = (uint64_t *)(v39 + *(int *)(v56 + 32));
    v42 = *v40;
    v41 = v40[1];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C07B1F90(v39, type metadata accessor for EntityTriple);
    if (v42 == v51 && v41 == v53)
    {
      swift_bridgeObjectRelease_n();
      return 1.0;
    }
    v44 = sub_1C1070CB4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v44 & 1) != 0)
      return 1.0;
  }
  return v19;
}

float sub_1C0AD06C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  float v24;
  uint64_t v25;
  BOOL v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(_QWORD);
  uint64_t v37;
  char v39;
  uint64_t v41;
  uint64_t (*v42)(_QWORD);
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  char v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t (*v54)(_QWORD);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v55 = a3(0);
  v6 = *(_QWORD *)(v55 - 8);
  MEMORY[0x1E0C80A78](v55);
  sub_1C077AED0();
  v56 = v7;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v48 - v9;
  v11 = sub_1C106E41C();
  v58 = *(_QWORD *)(v11 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v48 - v16;
  v59 = type metadata accessor for EntityTriple(0);
  MEMORY[0x1E0C80A78](v59);
  v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v23 = *(_QWORD *)(a1 + 16);
  v24 = 0.0;
  if (v23)
  {
    v49 = v6;
    v50 = (uint64_t)&v48 - v22;
    v53 = v14;
    v54 = a3;
    v48 = v10;
    v51 = a2;
    v52 = a1;
    v25 = a1 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
    v57 = *(_QWORD *)(v21 + 72);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    while (1)
    {
      sub_1C07E05C8(v25, (uint64_t)v19, type metadata accessor for EntityTriple);
      sub_1C106DE70();
      sub_1C0794BAC(&qword_1ED75E7E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC80]);
      sub_1C0798840();
      sub_1C0798840();
      v26 = v62 == v60 && v63 == v61;
      v27 = v26 ? 1 : sub_1C07785B0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v17, v11);
      if ((v27 & 1) != 0)
        break;
      sub_1C07B1F90((uint64_t)v19, type metadata accessor for EntityTriple);
      v25 += v57;
      if (!--v23)
        goto LABEL_21;
    }
    swift_bridgeObjectRelease();
    v28 = (uint64_t)v19;
    v29 = v50;
    sub_1C07E05F4(v28, v50, type metadata accessor for EntityTriple);
    v30 = (uint64_t *)(v29 + *(int *)(v59 + 32));
    v32 = *v30;
    v31 = v30[1];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C07B1F90(v29, type metadata accessor for EntityTriple);
    v33 = *(_QWORD *)(v51 + 16);
    if (!v33)
    {
LABEL_21:
      swift_bridgeObjectRelease();
      return v24;
    }
    v58 = v32;
    v59 = v31;
    v34 = v51 + ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80));
    v35 = *(_QWORD *)(v49 + 72);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v36 = v54;
    v37 = v56;
    while (1)
    {
      sub_1C07E05C8(v34, v37, v36);
      sub_1C106DE70();
      sub_1C0798840();
      sub_1C0798840();
      if (v62 == v60 && v63 == v61)
        break;
      v39 = sub_1C07785B0();
      swift_bridgeObjectRelease();
      sub_1C0778580();
      sub_1C078CB3C();
      if ((v39 & 1) != 0)
        goto LABEL_24;
      v37 = v56;
      v36 = v54;
      sub_1C07B1F90(v56, v54);
      v34 += v35;
      if (!--v33)
      {
        swift_bridgeObjectRelease();
        goto LABEL_21;
      }
    }
    swift_bridgeObjectRelease_n();
    sub_1C078CB3C();
LABEL_24:
    swift_bridgeObjectRelease();
    v41 = (uint64_t)v48;
    v42 = v54;
    sub_1C07E05F4(v56, (uint64_t)v48, v54);
    v43 = (uint64_t *)(v41 + *(int *)(v55 + 32));
    v45 = *v43;
    v44 = v43[1];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C07B1F90(v41, v42);
    if (v45 == v58 && v44 == v59)
    {
      swift_bridgeObjectRelease_n();
      return 1.0;
    }
    v47 = sub_1C07785B0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v47 & 1) != 0)
      return 1.0;
  }
  return v24;
}

void sub_1C0AD0AEC(void (*a1)(char *, uint64_t, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  _BYTE *v46;
  char *v47;
  uint64_t v48;
  float v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int *v66;
  char *v67;
  void (*v68)(uint64_t, char *, uint64_t);
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t, uint64_t);
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;

  v83 = a2;
  v84 = a1;
  v75 = a3;
  v4 = sub_1C106ADE0();
  v78 = *(_QWORD *)(v4 - 8);
  v79 = v4;
  MEMORY[0x1E0C80A78](v4);
  v76 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = sub_1C106D1F8();
  v81 = *(_QWORD *)(v86 - 8);
  MEMORY[0x1E0C80A78](v86);
  v80 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = sub_1C106E590();
  v87 = *(_QWORD *)(v82 - 8);
  MEMORY[0x1E0C80A78](v82);
  v85 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v77 = (char *)&v69 - v9;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v69 - v11;
  v13 = type metadata accessor for EntityTriple(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1C07ACF80(&qword_1ED75A508);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v69 - v20;
  v22 = sub_1C07ACF80((uint64_t *)&unk_1ED75EA40);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v69 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v69 - v26;
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v69 - v29;
  v31 = (uint64_t)v88;
  sub_1C0CCB734();
  if (v31)
    return;
  v73 = 0;
  v74 = v18;
  v70 = v27;
  v71 = v24;
  v88 = v15;
  v32 = v87;
  v33 = v82;
  v72 = v3;
  if (v83)
  {
    v34 = v83;
    sub_1C0AA49F4();
    v35 = v13;
    v36 = sub_1C07B2D80((uint64_t)v21, 1, v13);
    v37 = (uint64_t)v30;
    if (v36 == 1)
    {
      sub_1C0784B6C((uint64_t)v21, &qword_1ED75A508);
      v38 = 1;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v30, v21, v33);
      sub_1C07B1F90((uint64_t)v21, type metadata accessor for EntityTriple);
      v38 = 0;
    }
    v40 = (uint64_t)v84;
  }
  else
  {
    v34 = 0;
    v38 = 1;
    v39 = v30;
    v40 = (uint64_t)v84;
    v35 = v13;
    v37 = (uint64_t)v39;
  }
  sub_1C07B2D8C(v37, v38, 1, v33);
  v41 = (uint64_t)v74;
  sub_1C0AA49F4();
  if (sub_1C07B2D80(v41, 1, v35) != 1)
  {
    v47 = v12;
    sub_1C07E05F4(v41, (uint64_t)v88, type metadata accessor for EntityTriple);
    if (v34)
    {
      v48 = v72;
      v49 = sub_1C0AD0250(v40, v34);
      v50 = type metadata accessor for HomeMatcher();
      v51 = (uint64_t)v70;
      if (v49 > *(float *)(v48 + *(int *)(v50 + 36)))
        goto LABEL_17;
    }
    else
    {
      v50 = type metadata accessor for HomeMatcher();
      v48 = v72;
      v49 = 0.0;
      v51 = (uint64_t)v70;
      if (*(float *)(v72 + *(int *)(v50 + 36)) < 0.0)
      {
LABEL_17:
        v52 = (uint64_t)v71;
        sub_1C07E0238(v37, (uint64_t)v71);
        v53 = sub_1C07B2D80(v52, 1, v33);
        v83 = v37;
        if (v53 == 1)
        {
          sub_1C0784B6C(v52, (uint64_t *)&unk_1ED75EA40);
          sub_1C1070954();
          __break(1u);
        }
        else
        {
          v54 = v87;
          v84 = *(void (**)(char *, uint64_t, uint64_t))(v87 + 32);
          v84(v47, v52, v33);
          v82 = type metadata accessor for HomeMatcher();
          v55 = v33;
          v56 = v47;
          v57 = v80;
          v58 = v81;
          (*(void (**)(char *, uint64_t, uint64_t))(v81 + 16))(v80, v48 + *(int *)(v82 + 32), v86);
          v59 = *(void (**)(char *, char *, uint64_t))(v54 + 16);
          v60 = v77;
          v61 = (uint64_t)v88;
          v59(v77, v88, v55);
          v59(v85, v56, v55);
          v62 = v76;
          sub_1C106ADA4();
          sub_1C106AC60();
          v64 = v63;
          (*(void (**)(char *, uint64_t))(v78 + 8))(v62, v79);
          (*(void (**)(char *, uint64_t))(v54 + 8))(v56, v55);
          sub_1C07B1F90(v61, type metadata accessor for EntityTriple);
          sub_1C0784B6C(v83, (uint64_t *)&unk_1ED75EA40);
          LOBYTE(v62) = *(_BYTE *)(v48 + *(int *)(v82 + 24));
          v65 = v75;
          (*(void (**)(uint64_t, char *, uint64_t))(v58 + 32))(v75, v57, v86);
          v66 = (int *)type metadata accessor for EntityMatch(0);
          v67 = v60;
          v68 = (void (*)(uint64_t, char *, uint64_t))v84;
          v84((char *)(v65 + v66[5]), (uint64_t)v67, v55);
          v68(v65 + v66[6], v85, v55);
          *(float *)(v65 + v66[7]) = v49;
          *(_QWORD *)(v65 + v66[8]) = v64;
          *(_BYTE *)(v65 + v66[9]) = (_BYTE)v62;
          *(_QWORD *)(v65 + v66[10]) = 0;
        }
        return;
      }
    }
    sub_1C106E500();
    sub_1C0784B6C(v37, (uint64_t *)&unk_1ED75EA40);
    sub_1C07B2D8C(v51, 0, 1, v33);
    sub_1C09174F8(v51, v37);
    type metadata accessor for HomeMatcher();
    v49 = *(float *)(v48 + *(int *)(v50 + 36));
    goto LABEL_17;
  }
  sub_1C0784B6C(v41, &qword_1ED75A508);
  if (qword_1ED761458 != -1)
    swift_once();
  v42 = sub_1C106F544();
  sub_1C079E000(v42, (uint64_t)qword_1ED78D818);
  v43 = sub_1C106F538();
  v44 = sub_1C1070390();
  if (os_log_type_enabled(v43, v44))
  {
    v45 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v45 = 0;
    _os_log_impl(&dword_1C0771000, v43, v44, "Home Matcher: skipping entityTriples are empty", v45, 2u);
    MEMORY[0x1C3BA8270](v45, -1, -1);
  }

  sub_1C08C1878();
  swift_allocError();
  *v46 = 0;
  swift_willThrow();
  sub_1C0784B6C(v37, (uint64_t *)&unk_1ED75EA40);
}

void sub_1C0AD11CC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, void (*a4)(void)@<X3>, uint64_t (*a5)(_QWORD)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t (*v47)(_QWORD);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  _BYTE *v57;
  uint64_t v58;
  uint64_t v59;
  float v60;
  uint64_t v61;
  float v62;
  uint64_t v63;
  void (*v64)(_QWORD, _QWORD, _QWORD);
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t, _QWORD);
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int *v79;
  void (*v80)(uint64_t, uint64_t, _QWORD);
  float v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(void);
  uint64_t v97;
  uint64_t v98;
  uint64_t (*v99)(_QWORD);
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;

  v98 = a1;
  v99 = a5;
  v95 = a6;
  v96 = a4;
  v103 = a2;
  v8 = sub_1C106ADE0();
  v91 = *(_QWORD *)(v8 - 8);
  v92 = v8;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v9);
  sub_1C077AE40();
  v90 = v10;
  v97 = sub_1C106D1F8();
  v94 = *(_QWORD *)(v97 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v11);
  sub_1C077AE40();
  v101 = v12;
  v104 = (_QWORD *)sub_1C106E590();
  v102 = *(v104 - 1);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v13);
  sub_1C077AED0();
  v93 = v14;
  MEMORY[0x1E0C80A78](v15);
  v100 = (char *)&v82 - v16;
  MEMORY[0x1E0C80A78](v17);
  v89 = (char *)&v82 - v18;
  sub_1C07ACF80(&qword_1ED75A508);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v19);
  sub_1C0778564();
  v22 = v21 - v20;
  v23 = type metadata accessor for EntityTriple(0);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v24);
  sub_1C0778564();
  v27 = v26 - v25;
  v88 = a3;
  sub_1C07ACF80(a3);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v28);
  sub_1C0778564();
  v31 = v30 - v29;
  sub_1C07ACF80((uint64_t *)&unk_1ED75EA40);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)&v82 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v35);
  v37 = (char *)&v82 - v36;
  MEMORY[0x1E0C80A78](v38);
  v40 = (char *)&v82 - v39;
  v41 = v6;
  v42 = v105;
  sub_1C0CCB734();
  if (v42)
    return;
  v87 = v23;
  v83 = v37;
  v85 = v34;
  v105 = v27;
  v86 = 0;
  v43 = v101;
  v44 = v102;
  v45 = v40;
  v46 = v41;
  if (v103)
  {
    v96();
    v47 = v99;
    v48 = v99(0);
    v49 = (uint64_t)v45;
    if (sub_1C07B2D80(v31, 1, v48) == 1)
    {
      sub_1C0784B6C(v31, v88);
      v50 = 1;
    }
    else
    {
      (*(void (**)(char *, uint64_t, _QWORD *))(v44 + 16))(v45, v31, v104);
      sub_1C07B1F90(v31, v47);
      v50 = 0;
    }
  }
  else
  {
    v50 = 1;
    v49 = (uint64_t)v40;
    v47 = v99;
  }
  v51 = v98;
  v52 = v22;
  sub_1C07B2D8C(v49, v50, 1, (uint64_t)v104);
  sub_1C0AA49F4();
  if (sub_1C07B2D80(v22, 1, v87) != 1)
  {
    v58 = v43;
    v59 = v49;
    sub_1C07E05F4(v52, v105, type metadata accessor for EntityTriple);
    v84 = v46;
    if (v103)
    {
      v60 = sub_1C0AD06C0(v51, v103, v47);
      v61 = sub_1C0799CF0();
      v62 = *(float *)(v46 + *(int *)(v61 + 36));
      v63 = v95;
      v64 = (void (*)(_QWORD, _QWORD, _QWORD))v104;
      v65 = v89;
      if (v60 > v62)
        goto LABEL_16;
    }
    else
    {
      v61 = sub_1C0799CF0();
      v81 = *(float *)(v46 + *(int *)(v61 + 36));
      v60 = 0.0;
      v63 = v95;
      v64 = (void (*)(_QWORD, _QWORD, _QWORD))v104;
      v65 = v89;
      if (v81 < 0.0)
      {
LABEL_16:
        v82 = v59;
        v69 = (uint64_t)v85;
        sub_1C07E0238(v59, (uint64_t)v85);
        if (sub_1C07B2D80(v69, 1, (uint64_t)v64) == 1)
        {
          sub_1C0784B6C(v69, (uint64_t *)&unk_1ED75EA40);
          sub_1C1070954();
          __break(1u);
        }
        else
        {
          v70 = v102;
          v104 = *(_QWORD **)(v102 + 32);
          ((void (*)(char *, uint64_t, _QWORD))v104)(v65, v69, v64);
          v103 = sub_1C0799CF0();
          v71 = v84;
          v72 = v94;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v94 + 16))(v58, v84 + *(int *)(v103 + 32), v97);
          v73 = *(void (**)(char *, uint64_t, _QWORD))(v70 + 16);
          v74 = v105;
          v73(v100, v105, v64);
          v75 = v93;
          v73(v93, (uint64_t)v65, v64);
          v76 = v90;
          sub_1C106ADA4();
          sub_1C106AC60();
          v78 = v77;
          (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v76, v92);
          (*(void (**)(char *, void (*)(_QWORD, _QWORD, _QWORD)))(v70 + 8))(v65, v64);
          sub_1C07B1F90(v74, type metadata accessor for EntityTriple);
          sub_1C0784B6C(v82, (uint64_t *)&unk_1ED75EA40);
          LOBYTE(v76) = *(_BYTE *)(v71 + *(int *)(v103 + 24));
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v72 + 32))(v63, v101, v97);
          v79 = (int *)sub_1C0789FA0();
          v80 = (void (*)(uint64_t, uint64_t, _QWORD))v104;
          ((void (*)(uint64_t, char *, _QWORD))v104)(v63 + v79[5], v100, v64);
          v80(v63 + v79[6], (uint64_t)v75, v64);
          *(float *)(v63 + v79[7]) = v60;
          *(_QWORD *)(v63 + v79[8]) = v78;
          *(_BYTE *)(v63 + v79[9]) = v76;
          *(_QWORD *)(v63 + v79[10]) = 0;
        }
        return;
      }
    }
    v66 = v58;
    v67 = (uint64_t)v83;
    sub_1C106E500();
    sub_1C0784B6C(v59, (uint64_t *)&unk_1ED75EA40);
    sub_1C07B2D8C(v67, 0, 1, (uint64_t)v64);
    v68 = v67;
    v58 = v66;
    sub_1C09174F8(v68, v59);
    sub_1C0799CF0();
    v60 = *(float *)(v84 + *(int *)(v61 + 36));
    goto LABEL_16;
  }
  sub_1C0784B6C(v22, &qword_1ED75A508);
  if (qword_1ED761458 != -1)
    swift_once();
  v53 = sub_1C106F544();
  sub_1C079E000(v53, (uint64_t)qword_1ED78D818);
  v54 = sub_1C106F538();
  v55 = sub_1C1070390();
  if (os_log_type_enabled(v54, v55))
  {
    v56 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v56 = 0;
    _os_log_impl(&dword_1C0771000, v54, v55, "Home Matcher: skipping entityTriples are empty", v56, 2u);
    MEMORY[0x1C3BA8270](v56, -1, -1);
  }

  sub_1C08C1878();
  swift_allocError();
  *v57 = 0;
  swift_willThrow();
  sub_1C0784B6C(v49, (uint64_t *)&unk_1ED75EA40);
}

uint64_t HomeMatcher.execute()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[3] = v0;
  v1[4] = sub_1C0799CF0();
  v1[5] = sub_1C0779D74();
  v2 = sub_1C0776744();
  v1[6] = v2;
  v1[7] = *(_QWORD *)(v2 - 8);
  v1[8] = sub_1C0775870();
  v1[9] = sub_1C0775870();
  v1[10] = sub_1C0775870();
  v1[11] = sub_1C0775870();
  sub_1C07ACF80(&qword_1ED7618D0);
  v1[12] = sub_1C0779D74();
  return swift_task_switch();
}

void sub_1C0AD194C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7[32];

  v1 = v0[12];
  v2 = v0[6];
  v3 = v0[7];
  v5 = v0[3];
  v4 = v0[4];
  type metadata accessor for PhaseStores();
  v6 = *(int *)(v4 + 24);
  v7[0] = *(_BYTE *)(v5 + v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v5 + *(int *)(v4 + 32), v2);
  sub_1C07B2D8C(v1, 0, 1, v2);
  sub_1C0AB2308(v7, v1);
  sub_1C0784B6C(v1, &qword_1ED7618D0);
  __asm { BR              X9 }
}

uint64_t sub_1C0AD1A04()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(void);
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t, uint64_t);
  char v35;

  v7 = v6;
  v8 = v2[7];
  v9 = v0;
  v10 = v2[3];
  v32 = v7;
  v11 = *(_QWORD *)(v5 + v7);
  sub_1C07973B8(v9);
  v33 = v3;
  v12 = sub_1C0794DA4();
  *(_QWORD *)(v12 + 16) = v10;
  sub_1C0791D48();
  sub_1C09144FC(v13);
  v14 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  sub_1C0779940();
  sub_1C07767D4();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1C077C104();
    sub_1C07767D4();
    v24 = (uint64_t (*)(void))v2[1];
  }
  else
  {
    v15 = sub_1C07946C4();
    if (*(_BYTE *)(v11 + *(int *)(v15 + 28)) == 1)
    {
      v23 = v2[10];
      sub_1C078F678(v15, v16, v17, v18, v19, v20, v21, v22, v28, v29, v30, v31, v32, v33, v34);
      *(_QWORD *)(sub_1C0794DA4() + 16) = v12;
      sub_1C0914518(v23);
      v14(v23, v10);
      sub_1C077C104();
    }
    v25 = v2[12];
    v26 = v2[6];
    sub_1C106AC6C();
    sub_1C0888EBC();
    v35 = *(_BYTE *)(v5 + v4);
    v34(v25, v33, v26);
    sub_1C07B2D8C(v25, 0, 1, v26);
    sub_1C0AB25AC(&v35, v25);
    sub_1C0784B6C(v25, &qword_1ED7618D0);
    sub_1C07767D4();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1C077C104();
    swift_task_dealloc();
    swift_task_dealloc();
    v24 = (uint64_t (*)(void))v2[1];
  }
  return v24();
}

void sub_1C0AD1D5C(void (*a1)(char *, uint64_t, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  sub_1C0AD0AEC(a1, a2, a3);
  if (!v3)
  {
    v4 = sub_1C0789FA0();
    sub_1C078D56C(v4);
  }
}

void sub_1C0AD1D94(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X4>, void (*a4)(void)@<X5>, uint64_t (*a5)(_QWORD)@<X6>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  sub_1C0AD11CC(a1, a2, a3, a4, a5, a6);
  if (!v6)
  {
    v7 = sub_1C0789FA0();
    sub_1C078D56C(v7);
  }
}

void sub_1C0AD1DE0(_BYTE *a1@<X8>)
{
  HomeMatcher.stageName.getter(a1);
}

uint64_t sub_1C0AD1DFC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C0806670;
  return HomeMatcher.execute()();
}

void sub_1C0AD1E44(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C0AD1D94(a1, a2, &qword_1ED75F138, (void (*)(void))sub_1C0AA4998, type metadata accessor for GraphTriple, a3);
}

void sub_1C0AD1E74(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C0AD1D94(a1, a2, &qword_1ED750E40, (void (*)(void))sub_1C0AA49A4, type metadata accessor for ConstructionGraphTriple, a3);
}

void sub_1C0AD1EA4(void (*a1)(char *, uint64_t, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C0AD1D5C(a1, a2, a3);
}

void sub_1C0AD1EBC(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC((unint64_t *)&unk_1EF63AB58, (uint64_t (*)(uint64_t))type metadata accessor for HomeMatcher, (uint64_t)&protocol conformance descriptor for HomeMatcher);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0AD1EF8(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1EF63AB68, (uint64_t (*)(uint64_t))type metadata accessor for HomeMatcher, (uint64_t)&protocol conformance descriptor for HomeMatcher);
  *(_QWORD *)(a1 + 8) = v2;
}

uint64_t getEnumTagSinglePayload for HomeMatcher()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0AD1F40(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v6 = sub_1C077D0AC();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = v4;
    return sub_1C07B2D80(v8, v3, v7);
  }
  v9 = type metadata accessor for Source();
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v9;
    v10 = a3[5];
LABEL_10:
    v8 = v4 + v10;
    return sub_1C07B2D80(v8, v3, v7);
  }
  if ((_DWORD)v3 != 0x7FFFFFFF)
  {
    v7 = sub_1C0776744();
    v10 = a3[8];
    goto LABEL_10;
  }
  v11 = *(_QWORD *)(v4 + a3[7]);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for HomeMatcher()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0AD1FFC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v8 = sub_1C077D0AC();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = v5;
  }
  else
  {
    result = type metadata accessor for Source();
    if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    {
      v9 = result;
      v12 = a4[5];
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        *(_QWORD *)(v5 + a4[7]) = (v4 - 1);
        return result;
      }
      v9 = sub_1C0776744();
      v12 = a4[8];
    }
    v10 = v5 + v12;
  }
  return sub_1C07B2D8C(v10, v4, v4, v9);
}

uint64_t sub_1C0AD20A8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = type metadata accessor for PhaseStores();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Source();
    if (v2 <= 0x3F)
    {
      result = sub_1C106D1F8();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

void sub_1C0AD216C(void (*a1)(char *, uint64_t, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C0AD1EA4(a1, a2, a3);
}

uint64_t sub_1C0AD2180()
{
  uint64_t v0;

  v0 = qword_1EF63AC10;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return v0;
}

uint64_t sub_1C0AD21B4()
{
  uint64_t v0;

  v0 = qword_1EF6D1400;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return v0;
}

unint64_t sub_1C0AD21E8(uint64_t a1)
{
  unint64_t result;

  result = sub_1C0AD220C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0AD220C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF63AC20;
  if (!qword_1EF63AC20)
  {
    v1 = type metadata accessor for HUTenPointDataCollection(255);
    result = MEMORY[0x1C3BA8174](&unk_1C10A1C4C, v1);
    atomic_store(result, (unint64_t *)&qword_1EF63AC20);
  }
  return result;
}

uint64_t sub_1C0AD224C(uint64_t a1, unint64_t a2)
{
  return ((uint64_t (*)(void))((char *)sub_1C0AD2270 + 4 * byte_1C109F540[a2 >> 62]))();
}

BOOL sub_1C0AD2270(uint64_t a1, uint64_t a2)
{
  return BYTE6(a2) == 0;
}

void sub_1C0AD2298(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1C079BD54();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for HUTenPointDataCollection(0);
  sub_1C07B72E4(v1 + *(int *)(v4 + 36));
  v5 = sub_1C0786DE8();
  v6 = sub_1C07946D8(v5);
  if (v8)
  {
    sub_1C0784F10();
    v9 = a1 + dword_1EF63EC5C;
    v10 = type metadata accessor for HUTenPointContext(0);
    sub_1C0794D1C(v9, 1, v11, v10);
    v12 = a1 + dword_1EF63EC60;
    v13 = type metadata accessor for HUTenPointBehaviors(0);
    v15 = sub_1C0794D1C(v12, 1, v14, v13);
    sub_1C0789ED8(v15, (uint64_t *)&unk_1EF63EC48);
  }
  else
  {
    sub_1C07A1D00(v6, v7, type metadata accessor for HUTenPointSessionSample);
  }
  sub_1C077671C();
}

uint64_t sub_1C0AD2368(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = v1 + *(int *)(type metadata accessor for HUTenPointDataCollection(0) + 36);
  sub_1C0784B6C(v3, (uint64_t *)&unk_1EF63EC48);
  sub_1C09B0344(a1, v3, type metadata accessor for HUTenPointSessionSample);
  type metadata accessor for HUTenPointSessionSample(0);
  v4 = sub_1C0782A18();
  return sub_1C077F6FC(v4, v5, v6, v7);
}

void sub_1C0AD23C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  sub_1C079BD54();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v1);
  v2 = sub_1C0B49048();
  sub_1C07B72E4(v0 + *(int *)(v2 + 24));
  v3 = type metadata accessor for HUTenPointBehaviors(0);
  v4 = sub_1C07946D8(v3);
  if (v6)
  {
    sub_1C0784F10();
    if (qword_1EF62DE10 != -1)
      swift_once();
    v7 = sub_1C077FE04(qword_1EF63AC28);
    sub_1C0789ED8(v7, &qword_1EF63EC40);
  }
  else
  {
    sub_1C07A1D00(v4, v5, type metadata accessor for HUTenPointBehaviors);
  }
  sub_1C077671C();
}

uint64_t sub_1C0AD2478(uint64_t a1)
{
  return sub_1C0AD9738(a1, type metadata accessor for HUTenPointSessionSample);
}

void sub_1C0AD2494()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD24C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 16) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD252C()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD2560()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 24) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD25C4()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD25F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 32) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD265C()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD2690()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 40) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD26F4()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD2728()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 48) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD278C()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD27C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 56) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD2824()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD2858()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 200) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD28BC()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD28F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 208) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD2954()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD2988()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 64) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD29EC()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD2A20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 184) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD2A84()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD2AB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 192) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD2B1C()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD2B50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 104) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD2BB4()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD2BE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 112) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD2C4C()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD2C80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 72) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD2CE4()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD2D18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 368) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD2D7C()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD2DB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 88) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD2E14()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD2E48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 168) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD2EAC()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD2EE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 248) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD2F44()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD2F78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 120) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD2FDC()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD3010()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 136) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD3074()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD30A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 152) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD310C()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD3140()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 216) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD31A4()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD31D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 232) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD323C()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD3270()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 264) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD32D4()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD3308()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 80) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD336C()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD33A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 376) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD3404()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD3438()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 96) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD349C()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD34D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 176) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD3534()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD3568()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 256) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD35CC()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD3600()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 128) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD3664()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD3698()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 144) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD36FC()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD3730()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 160) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD3794()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD37C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 224) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD382C()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD3860()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 240) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD38C4()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD38F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 272) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD395C()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD3990()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 280) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD39F4()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD3A28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 288) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD3A8C()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD3AC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 296) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD3B24()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD3B58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 336) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD3BBC()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD3BF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 304) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD3C54()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD3C88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 312) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD3CEC()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD3D20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 320) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD3D84()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD3DB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 328) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD3E1C()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD3E50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 344) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD3EB4()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD3EE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 352) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD3F4C()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD3F80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 360) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD3FE4()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD4018()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 632) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD407C()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD40B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 640) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD4114()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD4148()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 656) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD41AC()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD41E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 664) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD4244()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD4278()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 648) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD42DC()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD4310()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 680) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD4374()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD43A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 688) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD440C()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD4440()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 672) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD44A4()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD44D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 704) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD453C()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD4570()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 712) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD45D4()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD4608()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 696) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD466C()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD46A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 728) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD4704()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD4738()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 736) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD479C()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD47D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 720) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD4834()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD4868()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 752) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD48CC()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD4900()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 760) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD4964()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD4998()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 744) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD49FC()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD4A30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 776) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD4A94()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD4AC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 784) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD4B2C()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD4B60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 768) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD4BC4()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD4BF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 384) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD4C5C()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD4C90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 392) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD4CF4()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD4D28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 400) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD4D8C()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD4DC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 440) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD4E24()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD4E58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 408) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD4EBC()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD4EF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 416) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD4F54()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD4F88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 424) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD4FEC()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD5020()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 432) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD5084()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD50B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 448) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD511C()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD5150()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 456) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD51B4()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD51E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 464) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD524C()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD5280()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 472) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD52E4()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD5318()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 496) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD537C()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD53B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 488) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD5414()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD5448()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 504) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD54AC()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD54E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 480) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD5544()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD5578()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 536) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD55DC()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD5610()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 560) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD5674()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD56A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 512) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD570C()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD5740()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 544) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD57A4()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD57D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 568) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD583C()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD5870()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 520) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD58D4()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD5908()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 552) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD596C()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD59A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 576) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD5A04()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD5A38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 528) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD5A9C()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD5AD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 584) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD5B34()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD5B68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 592) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD5BCC()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD5C00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 600) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD5C64()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD5C98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 608) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD5CFC()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD5D30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 616) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD5D94()
{
  sub_1C078B070();
  sub_1C077F040();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0779CF8();
}

void sub_1C0AD5DC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C079F2C0();
  if ((sub_1C079667C() & 1) == 0)
  {
    sub_1C0797F24();
    sub_1C0791D5C();
    v3 = sub_1C0779758();
    *(_QWORD *)(v1 + v2) = sub_1C079C60C(v3);
    sub_1C0793954();
  }
  v4 = *(_QWORD *)(v1 + v2);
  sub_1C077F040();
  *(_QWORD *)(v4 + 624) = v0;
  swift_bridgeObjectRelease();
  sub_1C079B3E0();
}

void sub_1C0AD5E2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  sub_1C079BD54();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v1);
  v2 = sub_1C0B49048();
  sub_1C07B72E4(v0 + *(int *)(v2 + 20));
  v3 = type metadata accessor for HUTenPointContext(0);
  v4 = sub_1C07946D8(v3);
  if (v6)
  {
    sub_1C0784F10();
    if (qword_1EF62DE20 != -1)
      swift_once();
    v7 = sub_1C077FE04(qword_1EF63AC30);
    sub_1C0789ED8(v7, &qword_1EF63EC38);
  }
  else
  {
    sub_1C07A1D00(v4, v5, type metadata accessor for HUTenPointContext);
  }
  sub_1C077671C();
}

uint64_t sub_1C0AD5EE0(uint64_t a1)
{
  return sub_1C0AD9628(a1, type metadata accessor for HUTenPointSessionSample);
}

void sub_1C0AD5EFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  sub_1C079BD54();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C07A31DC();
  sub_1C077F040();
  sub_1C077D120();
  v1 = type metadata accessor for HUTenPointContext.TimeAndDate(0);
  v2 = sub_1C07946D8(v1);
  if (v4)
  {
    sub_1C0784F10();
    if (qword_1EF62DE38 != -1)
      swift_once();
    v5 = sub_1C077FE04(qword_1EF63AC38);
    sub_1C0789ED8(v5, &qword_1EF63FDA8);
  }
  else
  {
    sub_1C07A1D00(v2, v3, type metadata accessor for HUTenPointContext.TimeAndDate);
  }
  sub_1C077671C();
}

void sub_1C0AD5FDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1EF63FDA8);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C0775B3C(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for HUTenPointContext.TimeAndDate);
  v6 = type metadata accessor for HUTenPointContext.TimeAndDate(0);
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD60B0(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext11TimeAndDateP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__month, a1);
}

void sub_1C0AD60C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.TimeAndDate(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.TimeAndDate._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C0B49040(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD6194(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext11TimeAndDateP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__dayOfMonth, a1);
}

void sub_1C0AD61A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.TimeAndDate(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.TimeAndDate._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C0B49040(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD6278(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext11TimeAndDateP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__dayOfWeek, a1);
}

void sub_1C0AD628C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.TimeAndDate(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.TimeAndDate._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C0B49040(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD635C(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext11TimeAndDateP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__isWeekend, a1);
}

void sub_1C0AD6370()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.TimeAndDate(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.TimeAndDate._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C0B49040(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD6440(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext11TimeAndDateP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__hourOfDay, a1);
}

void sub_1C0AD6454()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.TimeAndDate(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.TimeAndDate._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C0B49040(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD6524(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext11TimeAndDateP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__partOfDay, a1);
}

void sub_1C0AD6538()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.TimeAndDate(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.TimeAndDate._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C0B49040(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD6608(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext11TimeAndDateP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__fiveMinBucketOfHour, a1);
}

void sub_1C0AD661C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.TimeAndDate(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.TimeAndDate._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C0B49040(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD66EC(uint64_t a1@<X8>)
{
  sub_1C0AD9194(&qword_1EF63FD98, &OBJC_IVAR____TtCV24IntelligencePlatformCore17HUTenPointContextP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__motionState, type metadata accessor for HUTenPointContext.MotionState, a1);
}

void sub_1C0AD6708()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1EF63FD98);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C0775B3C(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for HUTenPointContext.MotionState);
  v6 = type metadata accessor for HUTenPointContext.MotionState(0);
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD67DC(uint64_t a1@<X8>)
{
  sub_1C0AD9560(a1);
}

uint64_t sub_1C0AD67E8(uint64_t a1)
{
  return sub_1C0AD9628(a1, type metadata accessor for HUTenPointContext.MotionState);
}

void sub_1C0AD6804(uint64_t a1@<X8>)
{
  sub_1C0AD9388((uint64_t *)&unk_1EF63FD88, &OBJC_IVAR____TtCV24IntelligencePlatformCore17HUTenPointContextP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__semanticLocation, type metadata accessor for HUTenPointContext.SemanticLocation, a1);
}

void sub_1C0AD6820()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80((uint64_t *)&unk_1EF63FD88);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C0775B3C(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for HUTenPointContext.SemanticLocation);
  v6 = type metadata accessor for HUTenPointContext.SemanticLocation(0);
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD68F4(uint64_t a1@<X8>)
{
  sub_1C0AD9560(a1);
}

uint64_t sub_1C0AD6900(uint64_t a1)
{
  return sub_1C0AD9628(a1, type metadata accessor for HUTenPointContext.SemanticLocation);
}

void sub_1C0AD691C(uint64_t a1@<X8>)
{
  sub_1C0AD9670(a1);
}

uint64_t sub_1C0AD6928(uint64_t a1)
{
  return sub_1C0AD9738(a1, type metadata accessor for HUTenPointContext.SemanticLocation);
}

void sub_1C0AD6944()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  sub_1C079BD54();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C07A31DC();
  sub_1C077F040();
  sub_1C077D120();
  v1 = type metadata accessor for HUTenPointContext.POICategory(0);
  v2 = sub_1C07946D8(v1);
  if (v4)
  {
    sub_1C0784F10();
    if (qword_1EF62DE70 != -1)
      swift_once();
    v5 = sub_1C077FE04(qword_1EF63AC40);
    sub_1C0789ED8(v5, (uint64_t *)&unk_1EF63FD78);
  }
  else
  {
    sub_1C07A1D00(v2, v3, type metadata accessor for HUTenPointContext.POICategory);
  }
  sub_1C077671C();
}

void sub_1C0AD6A24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80((uint64_t *)&unk_1EF63FD78);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C0775B3C(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for HUTenPointContext.POICategory);
  v6 = type metadata accessor for HUTenPointContext.POICategory(0);
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD6AF8(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext11POICategoryP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__restaurantReciprocalRank, a1);
}

void sub_1C0AD6B0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.POICategory(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.POICategory._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C0795AD0(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD6BDC(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext11POICategoryP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__groceryReciprocalRank, a1);
}

void sub_1C0AD6BF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.POICategory(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.POICategory._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C0795AD0(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD6CC0(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext11POICategoryP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__coffeeReciprocalRank, a1);
}

void sub_1C0AD6CD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.POICategory(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.POICategory._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C0795AD0(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD6DA4(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext11POICategoryP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__gymReciprocalRank, a1);
}

void sub_1C0AD6DB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.POICategory(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.POICategory._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C0795AD0(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD6E88(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext11POICategoryP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__stadiumReciprocalRank, a1);
}

void sub_1C0AD6E9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.POICategory(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.POICategory._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C0795AD0(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD6F6C(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext11POICategoryP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__hikeReciprocalRank, a1);
}

void sub_1C0AD6F80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.POICategory(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.POICategory._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C0795AD0(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD7050(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext11POICategoryP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__parkReciprocalRank, a1);
}

void sub_1C0AD7064()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.POICategory(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.POICategory._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C0795AD0(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD7134(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext11POICategoryP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__libraryReciprocalRank, a1);
}

void sub_1C0AD7148()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.POICategory(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.POICategory._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C0795AD0(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD7218(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext11POICategoryP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__religiousReciprocalRank, a1);
}

void sub_1C0AD722C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.POICategory(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.POICategory._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C0795AD0(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD72FC(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext11POICategoryP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__movieReciprocalRank, a1);
}

void sub_1C0AD7310()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.POICategory(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.POICategory._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C0795AD0(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD73E0(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext11POICategoryP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__busReciprocalRank, a1);
}

void sub_1C0AD73F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.POICategory(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.POICategory._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C0795AD0(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD74C4(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext11POICategoryP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__trainReciprocalRank, a1);
}

void sub_1C0AD74D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.POICategory(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.POICategory._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C0795AD0(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD75A8(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext11POICategoryP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__airportReciprocalRank, a1);
}

void sub_1C0AD75BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.POICategory(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.POICategory._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C0795AD0(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD768C(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext11POICategoryP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__evReciprocalRank, a1);
}

void sub_1C0AD76A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.POICategory(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.POICategory._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C0795AD0(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD7770(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext11POICategoryP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__gasReciprocalRank, a1);
}

void sub_1C0AD7784()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.POICategory(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.POICategory._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C0795AD0(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD7854(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext11POICategoryP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__laundryReciprocalRank, a1);
}

void sub_1C0AD7868()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.POICategory(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.POICategory._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C0795AD0(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD7938(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext11POICategoryP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__museumReciprocalRank, a1);
}

void sub_1C0AD794C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.POICategory(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.POICategory._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C0795AD0(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD7A1C(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext11POICategoryP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__unknown, a1);
}

void sub_1C0AD7A30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.POICategory(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.POICategory._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C0795AD0(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD7B00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  sub_1C079BD54();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C07A31DC();
  sub_1C077F040();
  sub_1C077D120();
  v1 = type metadata accessor for HUTenPointContext.UserFocusComputedMode(0);
  v2 = sub_1C07946D8(v1);
  if (v4)
  {
    sub_1C0784F10();
    if (qword_1EF62DE88 != -1)
      swift_once();
    v5 = sub_1C077FE04(qword_1EF63AC48);
    sub_1C0789ED8(v5, &qword_1EF63FD68);
  }
  else
  {
    sub_1C07A1D00(v2, v3, type metadata accessor for HUTenPointContext.UserFocusComputedMode);
  }
  sub_1C077671C();
}

void sub_1C0AD7BE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1EF63FD68);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C0775B3C(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for HUTenPointContext.UserFocusComputedMode);
  v6 = type metadata accessor for HUTenPointContext.UserFocusComputedMode(0);
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD7CB4(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext21UserFocusComputedModeP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__semanticType, a1);
}

void sub_1C0AD7CC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.UserFocusComputedMode(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.UserFocusComputedMode._StorageClass(0);
    sub_1C077B5BC();
    sub_1C0779758();
    sub_1C078E088();
    v2 = sub_1C0796494(v4);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v5 = sub_1C078C038();
  sub_1C0799AFC(v5);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD7DB0(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext21UserFocusComputedModeP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__updateReason, a1);
}

void sub_1C0AD7DC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.UserFocusComputedMode(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.UserFocusComputedMode._StorageClass(0);
    sub_1C077B5BC();
    sub_1C0779758();
    sub_1C078E088();
    v2 = sub_1C0796494(v4);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v5 = sub_1C078C038();
  sub_1C0799AFC(v5);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD7EAC(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext21UserFocusComputedModeP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__updateSource, a1);
}

void sub_1C0AD7EC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.UserFocusComputedMode(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.UserFocusComputedMode._StorageClass(0);
    sub_1C077B5BC();
    sub_1C0779758();
    sub_1C078E088();
    v2 = sub_1C0796494(v4);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v5 = sub_1C078C038();
  sub_1C0799AFC(v5);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD7FA8(uint64_t a1@<X8>)
{
  sub_1C0AD9194((uint64_t *)&unk_1EF63FD58, &OBJC_IVAR____TtCV24IntelligencePlatformCore17HUTenPointContextP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__inferredMode, type metadata accessor for HUTenPointContext.InferredMode, a1);
}

void sub_1C0AD7FC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80((uint64_t *)&unk_1EF63FD58);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C0775B3C(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for HUTenPointContext.InferredMode);
  v6 = type metadata accessor for HUTenPointContext.InferredMode(0);
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD8098(uint64_t a1@<X8>)
{
  sub_1C0AD9560(a1);
}

uint64_t sub_1C0AD80A4(uint64_t a1)
{
  return sub_1C0AD9628(a1, type metadata accessor for HUTenPointContext.InferredMode);
}

void sub_1C0AD80C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  sub_1C079BD54();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C07A31DC();
  sub_1C077F040();
  sub_1C077D120();
  v1 = type metadata accessor for HUTenPointContext.DeviceWireless(0);
  v2 = sub_1C07946D8(v1);
  if (v4)
  {
    sub_1C0784F10();
    if (qword_1EF62DEB0 != -1)
      swift_once();
    v5 = sub_1C077FE04(qword_1EF63AC50);
    sub_1C0789ED8(v5, &qword_1EF63FD48);
  }
  else
  {
    sub_1C07A1D00(v2, v3, type metadata accessor for HUTenPointContext.DeviceWireless);
  }
  sub_1C077671C();
}

void sub_1C0AD81A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1EF63FD48);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C0775B3C(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for HUTenPointContext.DeviceWireless);
  v6 = type metadata accessor for HUTenPointContext.DeviceWireless(0);
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD8274(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext14DeviceWirelessP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__wifiConnected, a1);
}

void sub_1C0AD8288()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.DeviceWireless(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.DeviceWireless._StorageClass(0);
    sub_1C077B5BC();
    sub_1C0779758();
    sub_1C078E088();
    v2 = sub_1C0796494(v4);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v5 = sub_1C078C038();
  sub_1C0799AFC(v5);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD8370(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext14DeviceWirelessP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__airplaneMode, a1);
}

void sub_1C0AD8384()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.DeviceWireless(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.DeviceWireless._StorageClass(0);
    sub_1C077B5BC();
    sub_1C0779758();
    sub_1C078E088();
    v2 = sub_1C0796494(v4);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v5 = sub_1C078C038();
  sub_1C0799AFC(v5);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD846C(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext14DeviceWirelessP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__wearingHeadphones, a1);
}

void sub_1C0AD8480()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.DeviceWireless(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.DeviceWireless._StorageClass(0);
    sub_1C077B5BC();
    sub_1C0779758();
    sub_1C078E088();
    v2 = sub_1C0796494(v4);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v5 = sub_1C078C038();
  sub_1C0799AFC(v5);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD8568()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  sub_1C079BD54();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C07A31DC();
  sub_1C077F040();
  sub_1C077D120();
  v1 = type metadata accessor for HUTenPointContext.DevicePower(0);
  v2 = sub_1C07946D8(v1);
  if (v4)
  {
    sub_1C0784F10();
    if (qword_1EF62DEC8 != -1)
      swift_once();
    v5 = sub_1C077FE04(qword_1EF63AC58);
    sub_1C0789ED8(v5, (uint64_t *)&unk_1EF63FCA8);
  }
  else
  {
    sub_1C07A1D00(v2, v3, type metadata accessor for HUTenPointContext.DevicePower);
  }
  sub_1C077671C();
}

void sub_1C0AD8648()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80((uint64_t *)&unk_1EF63FCA8);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C0775B3C(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for HUTenPointContext.DevicePower);
  v6 = type metadata accessor for HUTenPointContext.DevicePower(0);
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD871C(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext11DevicePowerP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__devicePluggedIn, a1);
}

void sub_1C0AD8730()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.DevicePower(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.DevicePower._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C0781A08(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD8800(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext11DevicePowerP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__lowPowerMode, a1);
}

void sub_1C0AD8814()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.DevicePower(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.DevicePower._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C0781A08(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD88E4(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext11DevicePowerP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__batteryPercentage, a1);
}

void sub_1C0AD88F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.DevicePower(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.DevicePower._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C0781A08(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD89C8(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext11DevicePowerP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__batteryFullyCharged, a1);
}

void sub_1C0AD89DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.DevicePower(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.DevicePower._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C0781A08(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD8AAC(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext11DevicePowerP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__minsSinceLastDeviceChargeStart, a1);
}

void sub_1C0AD8AC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.DevicePower(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.DevicePower._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C0781A08(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD8B90(uint64_t a1@<X8>)
{
  sub_1C0AD9388((uint64_t *)&unk_1EF63FD38, &OBJC_IVAR____TtCV24IntelligencePlatformCore17HUTenPointContextP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__microLocation, type metadata accessor for HUTenPointContext.MicroLocation, a1);
}

void sub_1C0AD8BAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80((uint64_t *)&unk_1EF63FD38);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C0775B3C(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for HUTenPointContext.MicroLocation);
  v6 = type metadata accessor for HUTenPointContext.MicroLocation(0);
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD8C80(uint64_t a1@<X8>)
{
  sub_1C0AD9560(a1);
}

uint64_t sub_1C0AD8C8C(uint64_t a1)
{
  return sub_1C0AD9628(a1, type metadata accessor for HUTenPointContext.MicroLocation);
}

void sub_1C0AD8CA8(uint64_t a1@<X8>)
{
  sub_1C0AD9670(a1);
}

uint64_t sub_1C0AD8CB4(uint64_t a1)
{
  return sub_1C0AD9738(a1, type metadata accessor for HUTenPointContext.MicroLocation);
}

void sub_1C0AD8CD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  sub_1C079BD54();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C07A31DC();
  sub_1C077F040();
  sub_1C077D120();
  v1 = type metadata accessor for HUTenPointContext.AppLaunch(0);
  v2 = sub_1C07946D8(v1);
  if (v4)
  {
    sub_1C0784F10();
    if (qword_1EF62DEF0 != -1)
      swift_once();
    v5 = sub_1C077FE04(qword_1EF63AC60);
    sub_1C0789ED8(v5, &qword_1EF63FD28);
  }
  else
  {
    sub_1C07A1D00(v2, v3, type metadata accessor for HUTenPointContext.AppLaunch);
  }
  sub_1C077671C();
}

void sub_1C0AD8DB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1EF63FD28);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C0775B3C(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for HUTenPointContext.AppLaunch);
  v6 = type metadata accessor for HUTenPointContext.AppLaunch(0);
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD8E84(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext9AppLaunchP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__lastActiveAppbundle, a1);
}

void sub_1C0AD8E98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.AppLaunch(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.AppLaunch._StorageClass(0);
    sub_1C077B5BC();
    sub_1C0779758();
    sub_1C078E088();
    v2 = sub_1C0796494(v4);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v5 = sub_1C078C038();
  sub_1C0799AFC(v5);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD8F80(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext9AppLaunchP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__lastActiveAppcategory, a1);
}

void sub_1C0AD8F94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.AppLaunch(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.AppLaunch._StorageClass(0);
    sub_1C077B5BC();
    sub_1C0779758();
    sub_1C078E088();
    v2 = sub_1C0796494(v4);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v5 = sub_1C078C038();
  sub_1C0799AFC(v5);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD907C(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext9AppLaunchP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__lastActiveAppManualCategory, a1);
}

void sub_1C0AD9090()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.AppLaunch(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.AppLaunch._StorageClass(0);
    sub_1C077B5BC();
    sub_1C0779758();
    sub_1C078E088();
    v2 = sub_1C0796494(v4);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v5 = sub_1C078C038();
  sub_1C0799AFC(v5);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD9178(uint64_t a1@<X8>)
{
  sub_1C0AD9194(&qword_1EF63FD18, &OBJC_IVAR____TtCV24IntelligencePlatformCore17HUTenPointContextP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__ambientLight, type metadata accessor for HUTenPointContext.AmbientLight, a1);
}

void sub_1C0AD9194(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1C07ACF80(a1);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v10);
  v11 = sub_1C0776A6C();
  v12 = *(_QWORD *)(v4 + *(int *)(type metadata accessor for HUTenPointContext(v11) + 20)) + *a2;
  sub_1C077F040();
  sub_1C0A06890(v12, v5, a1);
  v13 = sub_1C07A84F8();
  sub_1C077AEEC(v5, 1, v13);
  if (v14)
  {
    sub_1C106F2B0();
    v15 = a4 + *(int *)(v13 + 20);
    v16 = sub_1C078C038();
    sub_1C0794D1C(v15, 1, v17, v16);
    sub_1C0779D34(v5);
  }
  else
  {
    sub_1C09B0344(v5, a4, a3);
  }
  sub_1C07785E4();
}

void sub_1C0AD9270()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1EF63FD18);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C0775B3C(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for HUTenPointContext.AmbientLight);
  v6 = type metadata accessor for HUTenPointContext.AmbientLight(0);
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD9344(uint64_t a1@<X8>)
{
  sub_1C0AD9560(a1);
}

uint64_t sub_1C0AD9350(uint64_t a1)
{
  return sub_1C0AD9628(a1, type metadata accessor for HUTenPointContext.AmbientLight);
}

void sub_1C0AD936C(uint64_t a1@<X8>)
{
  sub_1C0AD9388((uint64_t *)&unk_1EF63FCF8, &OBJC_IVAR____TtCV24IntelligencePlatformCore17HUTenPointContextP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__activityInterval, type metadata accessor for HUTenPointContext.ActivityInterval, a1);
}

void sub_1C0AD9388(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;

  sub_1C07ACF80(a1);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v4 + *(int *)(type metadata accessor for HUTenPointContext(0) + 20)) + *a2;
  sub_1C077F040();
  sub_1C0A06890(v12, (uint64_t)v11, a1);
  v13 = sub_1C07A84F8();
  sub_1C077AEEC((uint64_t)v11, 1, v13);
  if (v14)
  {
    sub_1C106F2B0();
    v15 = a4 + *(int *)(v13 + 20);
    sub_1C078C038();
    sub_1C0787D3C(v15);
    sub_1C0787D3C(a4 + *(int *)(v13 + 24));
    sub_1C0779D34((uint64_t)v11);
  }
  else
  {
    sub_1C09B0344((uint64_t)v11, a4, a3);
  }
  sub_1C07785E4();
}

void sub_1C0AD9480()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80((uint64_t *)&unk_1EF63FCF8);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C0775B3C(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for HUTenPointContext.ActivityInterval);
  v6 = type metadata accessor for HUTenPointContext.ActivityInterval(0);
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD9554(uint64_t a1@<X8>)
{
  sub_1C0AD9560(a1);
}

void sub_1C0AD9560(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  v4 = sub_1C077E938();
  sub_1C07BFDB0(*(int *)(v4 + 20));
  v5 = sub_1C078C038();
  v6 = sub_1C0797E50(v1);
  if (v8)
  {
    sub_1C077FAD8(MEMORY[0x1E0DEE9D8]);
    v9 = a1 + *(int *)(v5 + 32);
    v10 = sub_1C077D8D0();
    v12 = sub_1C0794D1C(v9, 1, v11, v10);
    sub_1C077C7AC(v12, &qword_1ED756980);
  }
  else
  {
    sub_1C077E5D0(v6, v7, type metadata accessor for FeatureValue);
  }
  sub_1C07785E4();
}

uint64_t sub_1C0AD960C(uint64_t a1)
{
  return sub_1C0AD9628(a1, type metadata accessor for HUTenPointContext.ActivityInterval);
}

uint64_t sub_1C0AD9628(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = sub_1C07BA238(a1, a2);
  sub_1C0775A74(v2 + *(int *)(v3 + 20));
  sub_1C077ED54();
  sub_1C07AC470();
  v4 = sub_1C0782A18();
  return sub_1C077F00C(v4, v5, v6, v7);
}

void sub_1C0AD9664(uint64_t a1@<X8>)
{
  sub_1C0AD9670(a1);
}

void sub_1C0AD9670(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  v4 = sub_1C077E938();
  sub_1C07BFDB0(*(int *)(v4 + 24));
  v5 = sub_1C078C038();
  v6 = sub_1C0797E50(v1);
  if (v8)
  {
    sub_1C077FAD8(MEMORY[0x1E0DEE9D8]);
    v9 = a1 + *(int *)(v5 + 32);
    v10 = sub_1C077D8D0();
    v12 = sub_1C0794D1C(v9, 1, v11, v10);
    sub_1C077C7AC(v12, &qword_1ED756980);
  }
  else
  {
    sub_1C077E5D0(v6, v7, type metadata accessor for FeatureValue);
  }
  sub_1C07785E4();
}

uint64_t sub_1C0AD971C(uint64_t a1)
{
  return sub_1C0AD9738(a1, type metadata accessor for HUTenPointContext.ActivityInterval);
}

uint64_t sub_1C0AD9738(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = sub_1C07BA238(a1, a2);
  sub_1C0775A74(v2 + *(int *)(v3 + 24));
  sub_1C077ED54();
  sub_1C07AC470();
  v4 = sub_1C0782A18();
  return sub_1C077F00C(v4, v5, v6, v7);
}

void sub_1C0AD9774()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  sub_1C079BD54();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C07A31DC();
  sub_1C077F040();
  sub_1C077D120();
  v1 = type metadata accessor for HUTenPointContext.AppCategoryDistribution(0);
  v2 = sub_1C07946D8(v1);
  if (v4)
  {
    sub_1C0784F10();
    if (qword_1EF62DF40 != -1)
      swift_once();
    v5 = sub_1C077FE04(qword_1EF63AC70);
    sub_1C0789ED8(v5, (uint64_t *)&unk_1EF63FCE8);
  }
  else
  {
    sub_1C07A1D00(v2, v3, type metadata accessor for HUTenPointContext.AppCategoryDistribution);
  }
  sub_1C077671C();
}

void sub_1C0AD9854()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80((uint64_t *)&unk_1EF63FCE8);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C0775B3C(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for HUTenPointContext.AppCategoryDistribution);
  v6 = type metadata accessor for HUTenPointContext.AppCategoryDistribution(0);
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD9928(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext23AppCategoryDistributionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__remoteDeviceAppCategoryDistributionInActivityInterval, a1);
}

void sub_1C0AD993C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.AppCategoryDistribution(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.AppCategoryDistribution._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C07A99F4(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD9A0C(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext23AppCategoryDistributionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__remoteDeviceAppCategoryDistributionInPrev30Minutes, a1);
}

void sub_1C0AD9A20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.AppCategoryDistribution(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.AppCategoryDistribution._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C07A99F4(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD9AF0(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext23AppCategoryDistributionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__remoteDeviceAppCategoryDistributionInPrev5Minutes, a1);
}

void sub_1C0AD9B04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.AppCategoryDistribution(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.AppCategoryDistribution._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C07A99F4(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD9BD4(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext23AppCategoryDistributionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__remoteDeviceAppManualCategoryDistributionInActivityInterval, a1);
}

void sub_1C0AD9BE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.AppCategoryDistribution(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.AppCategoryDistribution._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C07A99F4(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD9CB8(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext23AppCategoryDistributionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__remoteDeviceAppManualCategoryDistributionInPrev30Minutes, a1);
}

void sub_1C0AD9CCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.AppCategoryDistribution(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.AppCategoryDistribution._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C07A99F4(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD9D9C(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext23AppCategoryDistributionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__remoteDeviceAppManualCategoryDistributionInPrev5Minutes, a1);
}

void sub_1C0AD9DB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.AppCategoryDistribution(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.AppCategoryDistribution._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C07A99F4(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD9E80(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext23AppCategoryDistributionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__localDeviceAppCategoryDistributionInActivityInterval, a1);
}

void sub_1C0AD9E94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.AppCategoryDistribution(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.AppCategoryDistribution._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C07A99F4(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0AD9F64(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext23AppCategoryDistributionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__localDeviceAppCategoryDistributionInPrev30Minutes, a1);
}

void sub_1C0AD9F78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.AppCategoryDistribution(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.AppCategoryDistribution._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C07A99F4(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADA048(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext23AppCategoryDistributionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__localDeviceAppCategoryDistributionInPrev5Minutes, a1);
}

void sub_1C0ADA05C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.AppCategoryDistribution(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.AppCategoryDistribution._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C07A99F4(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADA12C(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext23AppCategoryDistributionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__localDeviceAppManualCategoryDistributionInActivityInterval, a1);
}

void sub_1C0ADA140()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.AppCategoryDistribution(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.AppCategoryDistribution._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C07A99F4(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADA210(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext23AppCategoryDistributionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__localDeviceAppManualCategoryDistributionInPrev30Minutes, a1);
}

void sub_1C0ADA224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.AppCategoryDistribution(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.AppCategoryDistribution._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C07A99F4(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADA2F4(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext23AppCategoryDistributionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__localDeviceAppManualCategoryDistributionInPrev5Minutes, a1);
}

void sub_1C0ADA308()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.AppCategoryDistribution(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.AppCategoryDistribution._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C07A99F4(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADA3D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  sub_1C079BD54();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C07A31DC();
  sub_1C077F040();
  sub_1C077D120();
  v1 = type metadata accessor for HUTenPointContext.MotionStateDistribution(0);
  v2 = sub_1C07946D8(v1);
  if (v4)
  {
    sub_1C0784F10();
    if (qword_1EF62DF58 != -1)
      swift_once();
    v5 = sub_1C077FE04(qword_1EF63AC78);
    sub_1C0789ED8(v5, (uint64_t *)&unk_1EF63FCD8);
  }
  else
  {
    sub_1C07A1D00(v2, v3, type metadata accessor for HUTenPointContext.MotionStateDistribution);
  }
  sub_1C077671C();
}

void sub_1C0ADA4B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80((uint64_t *)&unk_1EF63FCD8);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C0775B3C(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for HUTenPointContext.MotionStateDistribution);
  v6 = type metadata accessor for HUTenPointContext.MotionStateDistribution(0);
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADA58C(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext23MotionStateDistributionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__motionStateDistributionInActivityInterval, a1);
}

void sub_1C0ADA5A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.MotionStateDistribution(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.MotionStateDistribution._StorageClass(0);
    sub_1C077B5BC();
    sub_1C0779758();
    sub_1C078E088();
    v2 = sub_1C0796494(v4);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v5 = sub_1C078C038();
  sub_1C0799AFC(v5);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADA688(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext23MotionStateDistributionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__motionStateDistributionInPrev30Minutes, a1);
}

void sub_1C0ADA69C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.MotionStateDistribution(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.MotionStateDistribution._StorageClass(0);
    sub_1C077B5BC();
    sub_1C0779758();
    sub_1C078E088();
    v2 = sub_1C0796494(v4);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v5 = sub_1C078C038();
  sub_1C0799AFC(v5);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADA784(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext23MotionStateDistributionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__motionStateDistributionInPrev5Minutes, a1);
}

void sub_1C0ADA798()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.MotionStateDistribution(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext.MotionStateDistribution._StorageClass(0);
    sub_1C077B5BC();
    sub_1C0779758();
    sub_1C078E088();
    v2 = sub_1C0796494(v4);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v5 = sub_1C078C038();
  sub_1C0799AFC(v5);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADA880()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  sub_1C079BD54();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C07A31DC();
  sub_1C077F040();
  sub_1C077D120();
  v1 = type metadata accessor for HUTenPointContext.VirtualInteraction(0);
  v2 = sub_1C07946D8(v1);
  if (v4)
  {
    sub_1C0784F10();
    if (qword_1EF62DF70 != -1)
      swift_once();
    v5 = sub_1C077FE04(qword_1EF63AC80);
    sub_1C0789ED8(v5, (uint64_t *)&unk_1EF63FCC8);
  }
  else
  {
    sub_1C07A1D00(v2, v3, type metadata accessor for HUTenPointContext.VirtualInteraction);
  }
  sub_1C077671C();
}

void sub_1C0ADA960()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80((uint64_t *)&unk_1EF63FCC8);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    type metadata accessor for HUTenPointContext._StorageClass(0);
    sub_1C077B5BC();
    v4 = sub_1C0779758();
    v5 = sub_1C0775B3C(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for HUTenPointContext.VirtualInteraction);
  v6 = type metadata accessor for HUTenPointContext.VirtualInteraction(0);
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADAA34(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext18VirtualInteractionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__incomingEmailCountInPrev5Mins, a1);
}

void sub_1C0ADAA48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.VirtualInteraction(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    sub_1C079E584();
    v4 = sub_1C0779758();
    v5 = sub_1C07A1E14(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADAB0C(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext18VirtualInteractionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__incomingPhoneCountInPrev5Mins, a1);
}

void sub_1C0ADAB20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.VirtualInteraction(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    sub_1C079E584();
    v4 = sub_1C0779758();
    v5 = sub_1C07A1E14(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADABE4(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext18VirtualInteractionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__incomingInstantMessageCountInPrev5Mins, a1);
}

void sub_1C0ADABF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.VirtualInteraction(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    sub_1C079E584();
    v4 = sub_1C0779758();
    v5 = sub_1C07A1E14(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADACBC(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext18VirtualInteractionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__incomingAudioCallCountInPrev5Mins, a1);
}

void sub_1C0ADACD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.VirtualInteraction(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    sub_1C079E584();
    v4 = sub_1C0779758();
    v5 = sub_1C07A1E14(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADAD94(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext18VirtualInteractionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__incomingMeetingCountInPrev5Mins, a1);
}

void sub_1C0ADADA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.VirtualInteraction(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    sub_1C079E584();
    v4 = sub_1C0779758();
    v5 = sub_1C07A1E14(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADAE6C(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext18VirtualInteractionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__incomingSmsCountInPrev5Mins, a1);
}

void sub_1C0ADAE80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.VirtualInteraction(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    sub_1C079E584();
    v4 = sub_1C0779758();
    v5 = sub_1C07A1E14(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADAF44(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext18VirtualInteractionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__incomingMmsCountInPrev5Mins, a1);
}

void sub_1C0ADAF58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.VirtualInteraction(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    sub_1C079E584();
    v4 = sub_1C0779758();
    v5 = sub_1C07A1E14(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADB01C(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext18VirtualInteractionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__incomingVoipCountInPrev5Mins, a1);
}

void sub_1C0ADB030()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.VirtualInteraction(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    sub_1C079E584();
    v4 = sub_1C0779758();
    v5 = sub_1C07A1E14(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADB0F4(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext18VirtualInteractionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__incomingFacetimeCountInPrev5Mins, a1);
}

void sub_1C0ADB108()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.VirtualInteraction(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    sub_1C079E584();
    v4 = sub_1C0779758();
    v5 = sub_1C07A1E14(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADB1CC(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext18VirtualInteractionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__incomingFacetimeAudioCountInPrev5Mins, a1);
}

void sub_1C0ADB1E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.VirtualInteraction(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    sub_1C079E584();
    v4 = sub_1C0779758();
    v5 = sub_1C07A1E14(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADB2A4(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext18VirtualInteractionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__incomingFacetimeVideoCountInPrev5Mins, a1);
}

void sub_1C0ADB2B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.VirtualInteraction(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    sub_1C079E584();
    v4 = sub_1C0779758();
    v5 = sub_1C07A1E14(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADB37C(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext18VirtualInteractionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__incomingVideoCallCountInPrev5Mins, a1);
}

void sub_1C0ADB390()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.VirtualInteraction(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    sub_1C079E584();
    v4 = sub_1C0779758();
    v5 = sub_1C07A1E14(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADB454(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext18VirtualInteractionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__incomingShareplayCountInPrev5Mins, a1);
}

void sub_1C0ADB468()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.VirtualInteraction(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    sub_1C079E584();
    v4 = sub_1C0779758();
    v5 = sub_1C07A1E14(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADB52C(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext18VirtualInteractionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__outgoingEmailCountInPrev5Mins, a1);
}

void sub_1C0ADB540()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.VirtualInteraction(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    sub_1C079E584();
    v4 = sub_1C0779758();
    v5 = sub_1C07A1E14(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADB604(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext18VirtualInteractionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__outgoingPhoneCountInPrev5Mins, a1);
}

void sub_1C0ADB618()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.VirtualInteraction(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    sub_1C079E584();
    v4 = sub_1C0779758();
    v5 = sub_1C07A1E14(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADB6DC(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext18VirtualInteractionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__outgoingInstantMessageCountInPrev5Mins, a1);
}

void sub_1C0ADB6F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.VirtualInteraction(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    sub_1C079E584();
    v4 = sub_1C0779758();
    v5 = sub_1C07A1E14(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADB7B4(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext18VirtualInteractionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__outgoingAudioCallCountInPrev5Mins, a1);
}

void sub_1C0ADB7C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.VirtualInteraction(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    sub_1C079E584();
    v4 = sub_1C0779758();
    v5 = sub_1C07A1E14(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADB88C(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext18VirtualInteractionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__outgoingMeetingCountInPrev5Mins, a1);
}

void sub_1C0ADB8A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.VirtualInteraction(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    sub_1C079E584();
    v4 = sub_1C0779758();
    v5 = sub_1C07A1E14(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADB964(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext18VirtualInteractionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__outgoingSmsCountInPrev5Mins, a1);
}

void sub_1C0ADB978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.VirtualInteraction(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    sub_1C079E584();
    v4 = sub_1C0779758();
    v5 = sub_1C07A1E14(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADBA3C(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext18VirtualInteractionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__outgoingMmsCountInPrev5Mins, a1);
}

void sub_1C0ADBA50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.VirtualInteraction(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    sub_1C079E584();
    v4 = sub_1C0779758();
    v5 = sub_1C07A1E14(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADBB14(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext18VirtualInteractionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__outgoingVoipCountInPrev5Mins, a1);
}

void sub_1C0ADBB28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.VirtualInteraction(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    sub_1C079E584();
    v4 = sub_1C0779758();
    v5 = sub_1C07A1E14(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADBBEC(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext18VirtualInteractionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__outgoingFacetimeCountInPrev5Mins, a1);
}

void sub_1C0ADBC00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.VirtualInteraction(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    sub_1C079E584();
    v4 = sub_1C0779758();
    v5 = sub_1C07A1E14(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADBCC4(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext18VirtualInteractionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__outgoingFacetimeAudioCountInPrev5Mins, a1);
}

void sub_1C0ADBCD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.VirtualInteraction(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    sub_1C079E584();
    v4 = sub_1C0779758();
    v5 = sub_1C07A1E14(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADBD9C(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext18VirtualInteractionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__outgoingFacetimeVideoCountInPrev5Mins, a1);
}

void sub_1C0ADBDB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.VirtualInteraction(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    sub_1C079E584();
    v4 = sub_1C0779758();
    v5 = sub_1C07A1E14(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADBE74(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext18VirtualInteractionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__outgoingVideoCallCountInPrev5Mins, a1);
}

void sub_1C0ADBE88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.VirtualInteraction(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    sub_1C079E584();
    v4 = sub_1C0779758();
    v5 = sub_1C07A1E14(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADBF4C(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext18VirtualInteractionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__outgoingShareplayCountInPrev5Mins, a1);
}

void sub_1C0ADBF60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.VirtualInteraction(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    sub_1C079E584();
    v4 = sub_1C0779758();
    v5 = sub_1C07A1E14(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADC024(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext18VirtualInteractionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__phoneDurationInPrev5Mins, a1);
}

void sub_1C0ADC038()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.VirtualInteraction(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    sub_1C079E584();
    v4 = sub_1C0779758();
    v5 = sub_1C07A1E14(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADC0FC(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext18VirtualInteractionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__audioCallDurationInPrev5Mins, a1);
}

void sub_1C0ADC110()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.VirtualInteraction(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    sub_1C079E584();
    v4 = sub_1C0779758();
    v5 = sub_1C07A1E14(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADC1D4(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext18VirtualInteractionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__meetingDurationInPrev5Mins, a1);
}

void sub_1C0ADC1E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.VirtualInteraction(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    sub_1C079E584();
    v4 = sub_1C0779758();
    v5 = sub_1C07A1E14(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADC2AC(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext18VirtualInteractionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__voipDurationInPrev5Mins, a1);
}

void sub_1C0ADC2C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.VirtualInteraction(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    sub_1C079E584();
    v4 = sub_1C0779758();
    v5 = sub_1C07A1E14(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADC384(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext18VirtualInteractionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__facetimeDurationInPrev5Mins, a1);
}

void sub_1C0ADC398()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.VirtualInteraction(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    sub_1C079E584();
    v4 = sub_1C0779758();
    v5 = sub_1C07A1E14(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADC45C(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext18VirtualInteractionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__facetimeAudioDurationInPrev5Mins, a1);
}

void sub_1C0ADC470()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.VirtualInteraction(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    sub_1C079E584();
    v4 = sub_1C0779758();
    v5 = sub_1C07A1E14(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADC534(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext18VirtualInteractionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__facetimeVideoDurationInPrev5Mins, a1);
}

void sub_1C0ADC548()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.VirtualInteraction(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    sub_1C079E584();
    v4 = sub_1C0779758();
    v5 = sub_1C07A1E14(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADC60C(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext18VirtualInteractionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__videoCallDurationInPrev5Mins, a1);
}

void sub_1C0ADC620()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.VirtualInteraction(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    sub_1C079E584();
    v4 = sub_1C0779758();
    v5 = sub_1C07A1E14(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADC6E4(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext18VirtualInteractionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__incomingEmailCountInPrev30Mins, a1);
}

void sub_1C0ADC6F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.VirtualInteraction(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    sub_1C079E584();
    v4 = sub_1C0779758();
    v5 = sub_1C07A1E14(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADC7BC(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext18VirtualInteractionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__incomingPhoneCountInPrev30Mins, a1);
}

void sub_1C0ADC7D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.VirtualInteraction(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    sub_1C079E584();
    v4 = sub_1C0779758();
    v5 = sub_1C07A1E14(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADC894(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext18VirtualInteractionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__incomingInstantMessageCountInPrev30Mins, a1);
}

void sub_1C0ADC8A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.VirtualInteraction(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    sub_1C079E584();
    v4 = sub_1C0779758();
    v5 = sub_1C07A1E14(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADC96C(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext18VirtualInteractionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__incomingAudioCallCountInPrev30Mins, a1);
}

void sub_1C0ADC980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.VirtualInteraction(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    sub_1C079E584();
    v4 = sub_1C0779758();
    v5 = sub_1C07A1E14(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADCA44(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext18VirtualInteractionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__incomingMeetingCountInPrev30Mins, a1);
}

void sub_1C0ADCA58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.VirtualInteraction(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    sub_1C079E584();
    v4 = sub_1C0779758();
    v5 = sub_1C07A1E14(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADCB1C(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext18VirtualInteractionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__incomingSmsCountInPrev30Mins, a1);
}

void sub_1C0ADCB30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.VirtualInteraction(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    sub_1C079E584();
    v4 = sub_1C0779758();
    v5 = sub_1C07A1E14(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADCBF4(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext18VirtualInteractionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__incomingMmsCountInPrev30Mins, a1);
}

void sub_1C0ADCC08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.VirtualInteraction(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    sub_1C079E584();
    v4 = sub_1C0779758();
    v5 = sub_1C07A1E14(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADCCCC(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext18VirtualInteractionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__incomingVoipCountInPrev30Mins, a1);
}

void sub_1C0ADCCE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.VirtualInteraction(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    sub_1C079E584();
    v4 = sub_1C0779758();
    v5 = sub_1C07A1E14(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADCDA4(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext18VirtualInteractionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__incomingFacetimeCountInPrev30Mins, a1);
}

void sub_1C0ADCDB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.VirtualInteraction(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    sub_1C079E584();
    v4 = sub_1C0779758();
    v5 = sub_1C07A1E14(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADCE7C(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext18VirtualInteractionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__incomingFacetimeAudioCountInPrev30Mins, a1);
}

void sub_1C0ADCE90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.VirtualInteraction(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    sub_1C079E584();
    v4 = sub_1C0779758();
    v5 = sub_1C07A1E14(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADCF54(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext18VirtualInteractionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__incomingFacetimeVideoCountInPrev30Mins, a1);
}

void sub_1C0ADCF68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.VirtualInteraction(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    sub_1C079E584();
    v4 = sub_1C0779758();
    v5 = sub_1C07A1E14(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADD02C(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext18VirtualInteractionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__incomingVideoCallCountInPrev30Mins, a1);
}

void sub_1C0ADD040()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.VirtualInteraction(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    sub_1C079E584();
    v4 = sub_1C0779758();
    v5 = sub_1C07A1E14(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

void sub_1C0ADD104(_QWORD *a1@<X8>)
{
  sub_1C0AE3484(&OBJC_IVAR____TtCVV24IntelligencePlatformCore17HUTenPointContext18VirtualInteractionP33_8F23906CC80185DFEA5325F37BF9D5C713_StorageClass__incomingShareplayCountInPrev30Mins, a1);
}

void sub_1C0ADD118()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077B61C();
  sub_1C07798CC();
  sub_1C07ACF80(&qword_1ED756980);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HUTenPointContext.VirtualInteraction(0);
  v2 = sub_1C07910E8();
  if ((v2 & 1) == 0)
  {
    sub_1C079E584();
    v4 = sub_1C0779758();
    v5 = sub_1C07A1E14(v4);
    v2 = sub_1C0796494(v5);
  }
  sub_1C07910DC(v2, v3, type metadata accessor for FeatureValue);
  v6 = sub_1C078C038();
  sub_1C0799AFC(v6);
  sub_1C0787D2C();
  sub_1C07989BC();
  sub_1C0779758();
  sub_1C079AA8C();
  sub_1C0784FB0();
  sub_1C07785A8();
  sub_1C077C798();
}

