void sub_1C0C86408(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  __int128 v5;
  uint64_t v6;

  v5 = *a1;
  v6 = *((_QWORD *)a1 + 2);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC24IntelligencePlatformCore17PeopleEmailSignal____lazy_storage___featureNames) = 0;
  *(_OWORD *)(v3 + 16) = v5;
  *(_QWORD *)(v3 + 32) = v6;
  *(_OWORD *)(v3 + 40) = *(__int128 *)((char *)a1 + 24);
  sub_1C07E05F4(a2, v3 + OBJC_IVAR____TtC24IntelligencePlatformCore17PeopleEmailSignal_config, (uint64_t (*)(_QWORD))_s10ViewConfigVMa);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC24IntelligencePlatformCore17PeopleEmailSignal_store) = a3;
  sub_1C0778534();
}

uint64_t sub_1C0C86474()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[8];

  v1 = v0[2];
  v2 = v0[3];
  v3 = v0[5];
  v4 = v0[6];
  v6[2] = v0[4];
  v6[3] = v3;
  v6[4] = v4;
  v6[5] = v1;
  v6[6] = v2;
  sub_1C07767B4();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  sub_1C077FF50((uint64_t)sub_1C08B5414, (uint64_t)v6);
  swift_bridgeObjectRelease();
  swift_release_n();
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1C0C86504()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OBJC_IVAR____TtC24IntelligencePlatformCore17PeopleEmailSignal____lazy_storage___featureNames;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore17PeopleEmailSignal____lazy_storage___featureNames))
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore17PeopleEmailSignal____lazy_storage___featureNames);
  }
  else
  {
    v3 = sub_1C0C862B8((uint64_t)&unk_1E7A05230);
    sub_1C0898D28(v3);
    v2 = v4;
    *(_QWORD *)(v0 + v1) = v4;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_bridgeObjectRelease();
  }
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return v2;
}

uint64_t sub_1C0C86580()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, _QWORD, uint64_t);
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(uint64_t);
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(uint64_t);
  uint64_t v62;
  unint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  _QWORD *v91;
  BOOL v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  _QWORD *v98;
  BOOL v99;
  char v100;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  unint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t inited;
  uint64_t v147;
  uint64_t v148;
  void (*v149)(uint64_t);
  uint64_t v150;
  uint64_t v152;
  uint64_t *v153;
  NSObject *v154;
  os_log_type_t v155;
  BOOL v156;
  uint64_t v157;
  uint8_t *v158;
  uint64_t v159;
  unint64_t v160;
  void (*v161)(uint64_t);
  uint64_t v162;
  uint64_t *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  void (*v177)(uint64_t, uint64_t);
  unsigned int v178;
  void (*v179)(char *, _QWORD, uint64_t);
  char *v180;
  char *v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t *v185;
  uint64_t v186;
  __int128 v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  _QWORD v207[2];
  uint64_t v208;

  v172 = *v0;
  sub_1C07ACF80(&qword_1ED75EA10);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v1);
  sub_1C077AE40();
  sub_1C0787A68(v2);
  v166 = sub_1C106E590();
  v200 = *(_QWORD *)(v166 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v3);
  sub_1C077AE40();
  sub_1C0787A68(v4);
  v171 = sub_1C106D1F8();
  v170 = *(_QWORD *)(v171 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v5);
  sub_1C077AE40();
  v7 = sub_1C0787A68(v6);
  v202 = type metadata accessor for GraphTriple(v7);
  v190 = *(_QWORD *)(v202 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v8);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v9);
  v199 = (char *)&v165 - v10;
  sub_1C07ACF80(&qword_1ED756690);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v11);
  sub_1C077AE40();
  sub_1C0787A68(v12);
  v13 = sub_1C106D9A8();
  v204 = *(_QWORD *)(v13 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v14);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v165 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v165 - v19;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v165 - v22;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v165 - v25;
  v193 = sub_1C106D9B4();
  v186 = *(_QWORD *)(v193 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v27);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v28);
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v29);
  v196 = (char *)&v165 - v30;
  v185 = v0;
  v195 = *(uint64_t *)((char *)v0 + OBJC_IVAR____TtC24IntelligencePlatformCore17PeopleEmailSignal_store);
  sub_1C0AAD644();
  v203 = v31;
  v32 = sub_1C07ACF80(&qword_1ED75E838);
  v33 = *(_QWORD *)(sub_1C106E41C() - 8);
  v34 = *(_QWORD *)(v33 + 72);
  v35 = *(unsigned __int8 *)(v33 + 80);
  v36 = (v35 + 32) & ~v35;
  v176 = v32;
  v174 = v36 + v34;
  v173 = v35 | 7;
  v37 = swift_allocObject();
  v187 = xmmword_1C1079220;
  *(_OWORD *)(v37 + 16) = xmmword_1C1079220;
  v175 = v36;
  sub_1C106DE58();
  sub_1C0AA7870();
  v39 = v38;
  v40 = *MEMORY[0x1E0D3C448];
  v41 = *(void (**)(char *, _QWORD, uint64_t))(v204 + 104);
  v191 = v26;
  sub_1C0788148((uint64_t)v26, v40);
  sub_1C0788148((uint64_t)v23, v40);
  sub_1C0788148((uint64_t)v20, v40);
  sub_1C0788148((uint64_t)v17, v40);
  v42 = (uint64_t)v192;
  v178 = v40;
  v179 = v41;
  v41(v192, v40, v13);
  v163 = (uint64_t *)v42;
  v164 = v39;
  sub_1C106D864();
  sub_1C07767AC();
  sub_1C077960C();
  v43 = *(void (**)(uint64_t, uint64_t))(v204 + 8);
  sub_1C0792E8C(v42);
  v182 = v17;
  sub_1C0792E8C((uint64_t)v17);
  v181 = v20;
  sub_1C0792E8C((uint64_t)v20);
  v180 = v23;
  sub_1C0792E8C((uint64_t)v23);
  v183 = v13;
  v177 = v43;
  v43((uint64_t)v191, v13);
  v44 = sub_1C106EB78();
  v45 = v189;
  v167 = v44;
  sub_1C07B2D8C(v189, 1, 1, v44);
  sub_1C077C14C();
  v46 = sub_1C079F744();
  v48 = sub_1C0BA46B8(v46, v47);
  sub_1C0784B6C(v45, &qword_1ED756690);
  swift_release();
  v49 = *(_QWORD *)(v48 + 16);
  if (v49)
  {
    v50 = v48 + ((*(unsigned __int8 *)(v190 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v190 + 80));
    v201 = *(_QWORD *)(v190 + 72);
    v165 = v48;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v204 = MEMORY[0x1E0DEE9D8];
    v51 = type metadata accessor for GraphTriple;
    v52 = (uint64_t)v199;
    do
    {
      sub_1C07E05C8(v50, v52, v51);
      v53 = (_QWORD *)(v52 + *(int *)(v202 + 32));
      v54 = v53[1];
      v207[0] = *v53;
      v207[1] = v54;
      sub_1C07B1280();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v55 = sub_1C1070630();
      swift_bridgeObjectRelease();
      v56 = *(_QWORD *)(v55 + 16);
      if (v56)
      {
        v57 = (uint64_t *)(v55 + 32 * v56);
        v58 = v57[1];
        v203 = *v57;
        v60 = v57[2];
        v59 = v57[3];
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        sub_1C0775834();
        v61 = v51;
        sub_1C07B1F90(v52, v51);
        v62 = v204;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C079F020();
          v62 = v65;
        }
        v63 = *(_QWORD *)(v62 + 16);
        if (v63 >= *(_QWORD *)(v62 + 24) >> 1)
        {
          sub_1C079F020();
          v62 = v66;
        }
        *(_QWORD *)(v62 + 16) = v63 + 1;
        v204 = v62;
        v64 = (_QWORD *)(v62 + 32 * v63);
        v64[4] = v203;
        v64[5] = v58;
        v64[6] = v60;
        v64[7] = v59;
        v52 = (uint64_t)v199;
        v51 = v61;
      }
      else
      {
        sub_1C0775834();
        sub_1C07B1F90(v52, v51);
      }
      v50 += v201;
      --v49;
    }
    while (v49);
    sub_1C07758A4();
    v67 = v204;
  }
  else
  {
    sub_1C077960C();
    v67 = MEMORY[0x1E0DEE9D8];
  }
  v68 = *(_QWORD *)(v67 + 16);
  if (v68)
  {
    v207[0] = MEMORY[0x1E0DEE9D8];
    sub_1C09D30E0();
    v69 = v207[0];
    v70 = (uint64_t *)(v67 + 56);
    do
    {
      v72 = *(v70 - 3);
      v71 = *(v70 - 2);
      v73 = *(v70 - 1);
      v74 = *v70;
      sub_1C0778624();
      v75 = MEMORY[0x1C3BA64D0](v72, v71, v73, v74);
      v77 = v76;
      sub_1C0775834();
      v207[0] = v69;
      v79 = *(_QWORD *)(v69 + 16);
      v78 = *(_QWORD *)(v69 + 24);
      if (v79 >= v78 >> 1)
      {
        sub_1C07A5FE0(v78);
        sub_1C09D30E0();
        v69 = v207[0];
      }
      *(_QWORD *)(v69 + 16) = v79 + 1;
      v80 = v69 + 16 * v79;
      *(_QWORD *)(v80 + 32) = v75;
      *(_QWORD *)(v80 + 40) = v77;
      v70 += 4;
      --v68;
    }
    while (v68);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v69 = MEMORY[0x1E0DEE9D8];
  }
  v204 = *(_QWORD *)(v69 + 16);
  if (v204)
  {
    v81 = 0;
    v203 = v69 + 32;
    v82 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v83 = (uint64_t *)(v203 + 16 * v81);
      v85 = *v83;
      v84 = v83[1];
      v86 = qword_1EF62E218;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      if (v86 != -1)
        swift_once();
      v87 = qword_1EF6D1D18;
      if (!*(_QWORD *)(qword_1EF6D1D18 + 16))
        break;
      sub_1C1070DF8();
      sub_1C106FC28();
      v88 = sub_1C1070E4C();
      v89 = -1 << *(_BYTE *)(v87 + 32);
      v90 = v88 & ~v89;
      if (((*(_QWORD *)(v87 + 56 + ((v90 >> 3) & 0xFFFFFFFFFFFFF8)) >> v90) & 1) == 0)
        break;
      v202 = *(_QWORD *)(v87 + 48);
      v91 = (_QWORD *)(v202 + 16 * v90);
      v92 = *v91 == v85 && v91[1] == v84;
      if (!v92 && (sub_1C079B8CC() & 1) == 0)
      {
        v93 = (v90 + 1) & ~v89;
        sub_1C07AB8AC();
        v95 = v202;
        if ((v96 & 1) == 0)
          break;
        v97 = v94;
        while (1)
        {
          v98 = (_QWORD *)(v95 + 16 * v93);
          v99 = *v98 == v85 && v98[1] == v84;
          if (v99 || (sub_1C079B8CC() & 1) != 0)
            break;
          v93 = (v93 + 1) & v97;
          sub_1C07AB8AC();
          if ((v100 & 1) == 0)
            goto LABEL_40;
        }
      }
      sub_1C077589C();
LABEL_45:
      if (++v81 == v204)
      {
        sub_1C077B5B4();
        goto LABEL_48;
      }
    }
LABEL_40:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v208 = v82;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1C09D30E0();
      v82 = v208;
    }
    v102 = *(_QWORD *)(v82 + 16);
    if (v102 >= *(_QWORD *)(v82 + 24) >> 1)
    {
      sub_1C09D30E0();
      v82 = v208;
    }
    *(_QWORD *)(v82 + 16) = v102 + 1;
    v103 = v82 + 16 * v102;
    *(_QWORD *)(v103 + 32) = v85;
    *(_QWORD *)(v103 + 40) = v84;
    goto LABEL_45;
  }
  sub_1C077B5B4();
  v82 = MEMORY[0x1E0DEE9D8];
LABEL_48:
  sub_1C0898D28(v82);
  v105 = v104;
  v106 = v188;
  v107 = v200;
  v108 = v190;
  if (!*(_QWORD *)(v104 + 16))
  {
    (*(void (**)(char *, uint64_t))(v186 + 8))(v196, v193);
    return swift_bridgeObjectRelease();
  }
  v109 = sub_1C07767B4();
  v110 = v172;
  v202 = sub_1C0C87A18(v109, v172, (uint64_t)sub_1C0C87D70);
  v201 = sub_1C0C87A18(v105, v110, (uint64_t)sub_1C0C87B34);
  v203 = v106;
  sub_1C07B7458();
  v111 = v169;
  sub_1C106D1A4();
  v112 = v168;
  sub_1C106D858();
  (*(void (**)(uint64_t, uint64_t))(v170 + 8))(v111, v171);
  v113 = v189;
  sub_1C07B2D8C(v189, 1, 1, v167);
  v114 = sub_1C0BA46B8(v112, v113);
  sub_1C0784B6C(v113, &qword_1ED756690);
  v204 = *(_QWORD *)(v186 + 8);
  ((void (*)(uint64_t, uint64_t))v204)(v112, v193);
  swift_release();
  v115 = *(_QWORD *)(v114 + 16);
  if (v115)
  {
    v207[0] = MEMORY[0x1E0DEE9D8];
    sub_1C09D32B4();
    v116 = v114 + ((*(unsigned __int8 *)(v108 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80));
    v117 = *(_QWORD *)(v108 + 72);
    v118 = v166;
    v119 = v198;
    do
    {
      v120 = v197;
      sub_1C07E05C8(v116, v197, type metadata accessor for GraphTriple);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v107 + 16))(v119, v120, v118);
      sub_1C07B1F90(v120, type metadata accessor for GraphTriple);
      v121 = v207[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C09D32B4();
        v121 = v207[0];
      }
      v123 = *(_QWORD *)(v121 + 16);
      v122 = *(_QWORD *)(v121 + 24);
      if (v123 >= v122 >> 1)
      {
        sub_1C07A5FE0(v122);
        sub_1C09D32B4();
        v121 = v207[0];
      }
      *(_QWORD *)(v121 + 16) = v123 + 1;
      v107 = v200;
      v124 = v121
           + ((*(unsigned __int8 *)(v107 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v107 + 80))
           + *(_QWORD *)(v107 + 72) * v123;
      v119 = v198;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v200 + 32))(v124, v198, v118);
      v207[0] = v121;
      v116 += v117;
      --v115;
    }
    while (v115);
  }
  sub_1C07767AC();
  sub_1C0898DB0();
  v200 = v125;
  *(_OWORD *)(swift_allocObject() + 16) = v187;
  sub_1C106DE58();
  sub_1C0AA7870();
  v127 = v126;
  v128 = (uint64_t)v191;
  v129 = v178;
  v130 = v183;
  v179(v191, v178, v183);
  v131 = (uint64_t)v180;
  sub_1C0788148((uint64_t)v180, v129);
  v132 = (uint64_t)v181;
  sub_1C0788148((uint64_t)v181, v129);
  v133 = (uint64_t)v182;
  sub_1C0788148((uint64_t)v182, v129);
  v134 = (uint64_t)v192;
  sub_1C0788148((uint64_t)v192, v129);
  v164 = v127;
  sub_1C106D864();
  sub_1C07767AC();
  sub_1C077960C();
  v177(v134, v130);
  sub_1C079077C(v133);
  sub_1C079077C(v132);
  sub_1C079077C(v131);
  sub_1C079077C(v128);
  v207[0] = MEMORY[0x1E0DEE9D8];
  v208 = MEMORY[0x1E0DEE9D8];
  v135 = sub_1C106D2DC();
  v136 = v184;
  v137 = sub_1C07B2D8C(v184, 1, 1, v135);
  MEMORY[0x1E0C80A78](v137);
  v138 = v201;
  *(&v165 - 6) = v202;
  *(&v165 - 5) = (uint64_t)v207;
  v139 = v185;
  *(&v165 - 4) = (uint64_t)v185;
  *(&v165 - 3) = v138;
  v163 = &v208;
  sub_1C07B7458();
  sub_1C0AA4BDC(v194, v136, (uint64_t)sub_1C0C8942C, (uint64_t)(&v165 - 8));
  sub_1C0784B6C(v136, &qword_1ED75EA10);
  swift_release();
  swift_release();
  swift_release();
  v141 = v139[2];
  v140 = v139[3];
  v143 = v139[4];
  v142 = v139[5];
  v144 = v139[6];
  v206 = v207[0];
  sub_1C077AEBC();
  sub_1C07767B4();
  sub_1C077C14C();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0778624();
  sub_1C0BDA308();
  v145 = v206;
  sub_1C07ACF80(&qword_1ED762CB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = v187;
  *(_QWORD *)(inited + 32) = v141;
  *(_QWORD *)(inited + 40) = v140;
  MEMORY[0x1E0C80A78](inited);
  *(&v165 - 6) = v147;
  *(&v165 - 5) = v143;
  *(&v165 - 4) = v142;
  *(&v165 - 3) = v144;
  v163 = (uint64_t *)v145;
  sub_1C07767B4();
  sub_1C077C14C();
  sub_1C077AEBC();
  v148 = v203;
  sub_1C078017C();
  if (v148)
  {
    sub_1C077B5B4();
    sub_1C0775834();
    sub_1C077589C();
    sub_1C07878F0();
    sub_1C07758A4();
    v149 = (void (*)(uint64_t))v204;
    ((void (*)(uint64_t, uint64_t))v204)(v194, v193);
    v150 = sub_1C079F744();
    v149(v150);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v188 = 0;
  sub_1C0775834();
  sub_1C077B5B4();
  sub_1C077589C();
  sub_1C07878F0();
  sub_1C07758A4();
  if (qword_1ED762AF0 != -1)
    swift_once();
  v152 = sub_1C106F544();
  sub_1C079E000(v152, (uint64_t)qword_1ED78D9E0);
  v153 = v185;
  swift_retain_n();
  v154 = sub_1C106F538();
  v155 = sub_1C1070378();
  v156 = os_log_type_enabled(v154, v155);
  v157 = v194;
  if (v156)
  {
    v158 = (uint8_t *)sub_1C0775854();
    v206 = sub_1C0775854();
    *(_DWORD *)v158 = 136315138;
    v159 = *(uint64_t *)((char *)v153 + OBJC_IVAR____TtC24IntelligencePlatformCore17PeopleEmailSignal_config);
    v160 = *(uint64_t *)((char *)v153 + OBJC_IVAR____TtC24IntelligencePlatformCore17PeopleEmailSignal_config + 8);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v205 = sub_1C0788DAC(v159, v160, &v206);
    sub_1C10705AC();
    sub_1C07878F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0771000, v154, v155, "SignalView %s: Wrote features", v158, 0xCu);
    swift_arrayDestroy();
    sub_1C0776778();
  }
  sub_1C07878F0();

  v161 = (void (*)(uint64_t))v204;
  ((void (*)(uint64_t, uint64_t))v204)(v157, v193);
  v162 = sub_1C079F744();
  v161(v162);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0C8759C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v36[4];
  _BYTE v37[16];
  uint64_t v38;

  v38 = a1;
  sub_1C08B2630((uint64_t (*)(_QWORD *))sub_1C0C8943C, (uint64_t)v37, a2);
  if ((v11 & 1) != 0)
  {
    v12 = *(_QWORD *)(a4 + OBJC_IVAR____TtC24IntelligencePlatformCore17PeopleEmailSignal_config);
    v13 = *(_QWORD *)(a4 + OBJC_IVAR____TtC24IntelligencePlatformCore17PeopleEmailSignal_config + 8);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v14 = sub_1C106E530();
    v16 = v15;
    v17 = objc_allocWithZone(MEMORY[0x1E0D3DFA8]);
    v18 = sub_1C08B5430(v12, v13, 0xD000000000000011, 0x80000001C1106CD0, v14, v16);
    v19 = objc_msgSend((id)objc_opt_self(), sel_featureValueWithInt64_, 1);
    sub_1C07E9F58();
    v20 = *(_QWORD *)(*a3 + 16);
    sub_1C07EA60C();
    v21 = *a3;
    *(_QWORD *)(v21 + 16) = v20 + 1;
    v22 = v21 + 16 * v20;
    *(_QWORD *)(v22 + 32) = v18;
    *(_QWORD *)(v22 + 40) = v19;
    *a3 = v21;
  }
  MEMORY[0x1E0C80A78](v11);
  v36[2] = a1;
  sub_1C08B2630((uint64_t (*)(_QWORD *))sub_1C0C32284, (uint64_t)v36, a5);
  if ((v23 & 1) != 0)
  {
    v24 = *(_QWORD *)(a4 + OBJC_IVAR____TtC24IntelligencePlatformCore17PeopleEmailSignal_config);
    v25 = *(_QWORD *)(a4 + OBJC_IVAR____TtC24IntelligencePlatformCore17PeopleEmailSignal_config + 8);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v26 = sub_1C106E530();
    v28 = v27;
    v29 = objc_allocWithZone(MEMORY[0x1E0D3DFA8]);
    v30 = sub_1C08B5430(v24, v25, 0x6B726F57656D6173, 0xEF6C69616D457942, v26, v28);
    v31 = objc_msgSend((id)objc_opt_self(), sel_featureValueWithInt64_, 1);
    sub_1C07E9F58();
    v32 = *(_QWORD *)(*a6 + 16);
    sub_1C07EA60C();
    v33 = *a6;
    *(_QWORD *)(v33 + 16) = v32 + 1;
    v34 = v33 + 16 * v32;
    *(_QWORD *)(v34 + 32) = v30;
    *(_QWORD *)(v34 + 40) = v31;
    *a6 = v33;
  }
  return 1;
}

uint64_t sub_1C0C877E0()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C07B1F90(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore17PeopleEmailSignal_config, (uint64_t (*)(_QWORD))_s10ViewConfigVMa);
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C0C87858()
{
  sub_1C0C877E0();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0C8787C()
{
  return type metadata accessor for PeopleEmailSignal();
}

uint64_t type metadata accessor for PeopleEmailSignal()
{
  uint64_t result;

  result = qword_1EF646138;
  if (!qword_1EF646138)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C0C878BC()
{
  uint64_t result;
  unint64_t v1;

  result = _s10ViewConfigVMa();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1C0C8794C()
{
  uint64_t v0;

  sub_1C0C86580();
  return sub_1C0882DB4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0C87998()
{
  uint64_t v0;

  sub_1C0C86474();
  return sub_1C0882D8C(*(uint64_t (**)(void))(v0 + 8));
}

void sub_1C0C879C8(uint64_t a1@<X8>)
{
  _QWORD *v1;

  sub_1C07E05C8(*v1 + OBJC_IVAR____TtC24IntelligencePlatformCore17PeopleEmailSignal_config, a1, (uint64_t (*)(_QWORD))_s10ViewConfigVMa);
}

uint64_t sub_1C0C879F8()
{
  return sub_1C0C86504();
}

uint64_t sub_1C0C87A18(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  if ((*(_BYTE *)(isStackAllocationSafe + 32) & 0x3Fu) > 0xD)
  {
    isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if ((isStackAllocationSafe & 1) == 0)
    {
      sub_1C0775854();
      sub_1C0795C04();
      sub_1C0793E90();
      sub_1C07B8BC8();
      sub_1C0776778();
    }
  }
  MEMORY[0x1E0C80A78](isStackAllocationSafe);
  sub_1C0795C04();
  sub_1C0793E90();
  sub_1C07B8BC8();
  if (a3)
    swift_willThrow();
  return v3;
}

void sub_1C0C87B34(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  unint64_t v12;
  int64_t v13;
  char v14;
  uint64_t v17;
  int64_t v18;

  v17 = 0;
  v4 = 0;
  v5 = a3 + 56;
  v6 = 1 << *(_BYTE *)(a3 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a3 + 56);
  v18 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    v9 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v10 = v9 | (v4 << 6);
LABEL_17:
    sub_1C07B1280();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    if ((sub_1C1070624() & 1) != 0)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v14 = sub_1C106FD30();
      swift_bridgeObjectRelease();
      if ((v14 & 1) == 0)
      {
        *(uint64_t *)((char *)a1 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        v11 = __OFADD__(v17++, 1);
        if (v11)
          goto LABEL_30;
      }
    }
  }
  v11 = __OFADD__(v4++, 1);
  if (v11)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v4 >= v18)
    goto LABEL_27;
  v12 = *(_QWORD *)(v5 + 8 * v4);
  if (v12)
  {
LABEL_16:
    v8 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v4 << 6);
    goto LABEL_17;
  }
  v13 = v4 + 1;
  if (v4 + 1 >= v18)
    goto LABEL_27;
  v12 = *(_QWORD *)(v5 + 8 * v13);
  if (v12)
    goto LABEL_15;
  v13 = v4 + 2;
  if (v4 + 2 >= v18)
    goto LABEL_27;
  v12 = *(_QWORD *)(v5 + 8 * v13);
  if (v12)
    goto LABEL_15;
  v13 = v4 + 3;
  if (v4 + 3 >= v18)
  {
LABEL_27:
    swift_retain();
    sub_1C0C87FA0(a1, a2, v17, a3);
    return;
  }
  v12 = *(_QWORD *)(v5 + 8 * v13);
  if (v12)
  {
LABEL_15:
    v4 = v13;
    goto LABEL_16;
  }
  while (1)
  {
    v4 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v4 >= v18)
      goto LABEL_27;
    v12 = *(_QWORD *)(v5 + 8 * v4);
    ++v13;
    if (v12)
      goto LABEL_16;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
}

void sub_1C0C87D70(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  char v14;
  uint64_t v18;
  int64_t v19;

  v18 = 0;
  v4 = 0;
  v5 = a3 + 56;
  v6 = 1 << *(_BYTE *)(a3 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a3 + 56);
  v19 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    v9 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v10 = v9 | (v4 << 6);
LABEL_20:
    sub_1C07B1280();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    if ((sub_1C1070624() & 1) != 0)
    {
      swift_bridgeObjectRelease();
LABEL_24:
      *(uint64_t *)((char *)a1 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
      if (__OFADD__(v18++, 1))
      {
        __break(1u);
LABEL_27:
        swift_retain();
        sub_1C0C87FA0(a1, a2, v18, a3);
        return;
      }
    }
    else
    {
      v14 = sub_1C106FD30();
      swift_bridgeObjectRelease();
      if ((v14 & 1) != 0)
        goto LABEL_24;
    }
  }
  v11 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v11 >= v19)
    goto LABEL_27;
  v12 = *(_QWORD *)(v5 + 8 * v11);
  ++v4;
  if (v12)
    goto LABEL_19;
  v4 = v11 + 1;
  if (v11 + 1 >= v19)
    goto LABEL_27;
  v12 = *(_QWORD *)(v5 + 8 * v4);
  if (v12)
    goto LABEL_19;
  v4 = v11 + 2;
  if (v11 + 2 >= v19)
    goto LABEL_27;
  v12 = *(_QWORD *)(v5 + 8 * v4);
  if (v12)
  {
LABEL_19:
    v8 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v4 << 6);
    goto LABEL_20;
  }
  v13 = v11 + 3;
  if (v13 >= v19)
    goto LABEL_27;
  v12 = *(_QWORD *)(v5 + 8 * v13);
  if (v12)
  {
    v4 = v13;
    goto LABEL_19;
  }
  while (1)
  {
    v4 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v4 >= v19)
      goto LABEL_27;
    v12 = *(_QWORD *)(v5 + 8 * v4);
    ++v13;
    if (v12)
      goto LABEL_19;
  }
LABEL_29:
  __break(1u);
}

void sub_1C0C87FA0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char v35;
  uint64_t v36;

  if (!a3)
  {
LABEL_36:
    sub_1C077AF1C();
    goto LABEL_37;
  }
  sub_1C079AE68();
  if (v7)
  {
LABEL_37:
    sub_1C078C198();
    return;
  }
  v8 = v6;
  sub_1C07ACF80(&qword_1ED762CE8);
  v9 = sub_1C07AE084();
  v10 = v9;
  v36 = v8;
  if (v8 < 1)
    v11 = 0;
  else
    v11 = *a1;
  v12 = 0;
  v13 = v9 + 56;
  while (1)
  {
    if (v11)
    {
      sub_1C079C564();
      goto LABEL_24;
    }
    v15 = v12 + 1;
    if (__OFADD__(v12, 1))
      goto LABEL_40;
    if (v15 >= v36)
      goto LABEL_36;
    ++v12;
    if (!a1[v15])
    {
      v12 = v15 + 1;
      if (v15 + 1 >= v36)
        goto LABEL_36;
      sub_1C07851B8();
      if (!v18)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v17)
          goto LABEL_36;
        sub_1C07851B8();
        if (!v21)
          break;
      }
    }
LABEL_23:
    sub_1C0797EB0();
LABEL_24:
    v25 = (uint64_t *)(*(_QWORD *)(a4 + 48) + 16 * v14);
    v26 = *v25;
    v27 = v25[1];
    sub_1C0790900();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C106FC28();
    v28 = sub_1C1070E4C() & ~(-1 << *(_BYTE *)(v10 + 32));
    if (((-1 << v28) & ~*(_QWORD *)(v13 + 8 * (v28 >> 6))) == 0)
    {
      sub_1C0797B50();
      while (1)
      {
        sub_1C0793670();
        if (v7)
        {
          if ((v30 & 1) != 0)
            break;
        }
        if (v31 == v32)
          v31 = 0;
        if (*(_QWORD *)(v13 + 8 * v31) != -1)
        {
          sub_1C0791970();
          goto LABEL_34;
        }
      }
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    sub_1C0792CBC();
LABEL_34:
    sub_1C07952EC(v29);
    v34 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v33);
    *v34 = v26;
    v34[1] = v27;
    sub_1C07A5690();
    if (v35)
      goto LABEL_39;
    if (!v4)
      goto LABEL_36;
  }
  if (v19 + 3 >= v20)
    goto LABEL_36;
  sub_1C079CEE4();
  if (v24)
  {
    v12 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v12 >= v23)
      goto LABEL_36;
    ++v22;
    if (a1[v12])
      goto LABEL_23;
  }
LABEL_41:
  __break(1u);
}

void sub_1C0C88180(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C0C886C4(a1, a2, a3, a4, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C188], &qword_1EF639F08, (unint64_t *)&qword_1ED747AA0, MEMORY[0x1E0D3C198]);
}

uint64_t sub_1C0C881A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (!a3)
  {
    v10 = MEMORY[0x1E0DEE9E8];
    goto LABEL_23;
  }
  sub_1C079AE68();
  if (!v7)
  {
    v8 = v6;
    v9 = v5;
    sub_1C07ACF80(&qword_1ED7462E0);
    v10 = sub_1C07AE084();
    if (v8 < 1)
      v11 = 0;
    else
      v11 = *v9;
    if (v11)
    {
      sub_1C0782E24();
      goto LABEL_22;
    }
    if (v8 > 1)
    {
      v13 = 1;
      if (v9[1])
        goto LABEL_21;
      v13 = 2;
      if (v8 > 2)
      {
        if (v9[2])
          goto LABEL_21;
        v13 = 3;
        if (v8 > 3)
        {
          if (!v9[3])
          {
            v14 = 4;
            if (v8 > 4)
            {
              if (v9[4])
              {
                v13 = 4;
                goto LABEL_21;
              }
              while (1)
              {
                v13 = v14 + 1;
                if (__OFADD__(v14, 1))
                {
                  __break(1u);
                  JUMPOUT(0x1C0C8848CLL);
                }
                if (v13 >= v8)
                  break;
                ++v14;
                if (v9[v13])
                  goto LABEL_21;
              }
            }
            goto LABEL_23;
          }
LABEL_21:
          sub_1C07B984C();
          v12 = v15 + (v13 << 6);
LABEL_22:
          v16 = *(unsigned __int8 *)(*(_QWORD *)(a4 + 48) + v12);
          sub_1C1070DF8();
          __asm { BR              X8 }
        }
      }
    }
LABEL_23:
    sub_1C077AF1C();
    return v10;
  }
  return a4;
}

void sub_1C0C884A8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;

  if (!a3)
  {
LABEL_36:
    sub_1C077AF1C();
    goto LABEL_37;
  }
  sub_1C079AE68();
  if (v7)
  {
LABEL_37:
    sub_1C078C198();
    return;
  }
  v8 = v6;
  sub_1C07ACF80(&qword_1ED758E08);
  v9 = sub_1C07AE084();
  v10 = v9;
  v38 = v8;
  if (v8 < 1)
    v11 = 0;
  else
    v11 = *a1;
  v12 = 0;
  v13 = v9 + 56;
  while (1)
  {
    if (v11)
    {
      sub_1C079C564();
      goto LABEL_24;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
      goto LABEL_40;
    if (v16 >= v38)
      goto LABEL_36;
    ++v12;
    if (!a1[v16])
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v38)
        goto LABEL_36;
      sub_1C07851B8();
      if (!v19)
      {
        v12 = v17 + 2;
        if (v17 + 2 >= v18)
          goto LABEL_36;
        sub_1C07851B8();
        if (!v22)
          break;
      }
    }
LABEL_23:
    sub_1C0797EB0();
LABEL_24:
    v26 = *(_QWORD *)(a4 + 48) + v14 * v15;
    v27 = *(_QWORD *)v26;
    v28 = *(_QWORD *)(v26 + 8);
    v29 = *(_BYTE *)(v26 + 16);
    sub_1C0790900();
    sub_1C0834F18(v27, v28, v29);
    sub_1C0B6EB60();
    sub_1C1070E4C();
    sub_1C0799804();
    sub_1C077B1F4();
    if (v7)
    {
      sub_1C0797B50();
      while (1)
      {
        sub_1C0793670();
        if (v7)
        {
          if ((v30 & 1) != 0)
            break;
        }
        if (v31 == v32)
          v31 = 0;
        if (*(_QWORD *)(v13 + 8 * v31) != -1)
        {
          sub_1C0791970();
          goto LABEL_34;
        }
      }
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    sub_1C0792CBC();
LABEL_34:
    sub_1C0786D70();
    *(_QWORD *)(v13 + v33) |= v34;
    v36 = *(_QWORD *)(v10 + 48) + 24 * v35;
    *(_QWORD *)v36 = v27;
    *(_QWORD *)(v36 + 8) = v28;
    *(_BYTE *)(v36 + 16) = v29;
    sub_1C07A5690();
    if (v37)
      goto LABEL_39;
    if (!v4)
      goto LABEL_36;
  }
  if (v20 + 3 >= v21)
    goto LABEL_36;
  sub_1C079CEE4();
  if (v25)
  {
    v12 = v23;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v12 >= v24)
      goto LABEL_36;
    ++v23;
    if (a1[v12])
      goto LABEL_23;
  }
LABEL_41:
  __break(1u);
}

void sub_1C0C886A0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C0C886C4(a1, a2, a3, a4, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], &qword_1ED75E830, &qword_1ED75EA28, MEMORY[0x1E0D3CC68]);
}

void sub_1C0C886C4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), uint64_t *a6, unint64_t *a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t *v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t);
  unint64_t *v40;
  uint64_t v41;
  uint64_t v42;

  v40 = a7;
  v41 = a8;
  v39 = a5;
  v13 = a5(0);
  v42 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v37 - v14;
  if (!a3)
  {
LABEL_37:
    sub_1C077AF1C();
LABEL_38:
    sub_1C0776760();
    return;
  }
  if (*(_QWORD *)(a4 + 16) == a3)
    goto LABEL_38;
  sub_1C07ACF80(a6);
  v16 = sub_1C1070744();
  v17 = v16;
  v37 = a1;
  v38 = a2;
  if (a2 < 1)
    v18 = 0;
  else
    v18 = *a1;
  v19 = 0;
  v20 = v16 + 56;
  while (1)
  {
    if (v18)
    {
      v21 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v22 = v21 | (v19 << 6);
      goto LABEL_25;
    }
    v23 = v19 + 1;
    if (__OFADD__(v19, 1))
      goto LABEL_41;
    if (v23 >= v38)
      goto LABEL_37;
    v24 = v37[v23];
    ++v19;
    if (!v24)
    {
      v19 = v23 + 1;
      if (v23 + 1 >= v38)
        goto LABEL_37;
      v24 = v37[v19];
      if (!v24)
      {
        v19 = v23 + 2;
        if (v23 + 2 >= v38)
          goto LABEL_37;
        v24 = v37[v19];
        if (!v24)
          break;
      }
    }
LABEL_24:
    v18 = (v24 - 1) & v24;
    v22 = __clz(__rbit64(v24)) + (v19 << 6);
LABEL_25:
    v26 = a4;
    v27 = *(_QWORD *)(a4 + 48);
    v28 = *(_QWORD *)(v42 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v42 + 16))(v15, v27 + v28 * v22, v13);
    sub_1C0794BAC(v40, v39, v41);
    sub_1C106FA00();
    sub_1C0799804();
    sub_1C077B1F4();
    if (v29)
    {
      sub_1C0797B50();
      while (1)
      {
        sub_1C0793670();
        if (v29)
        {
          if ((v30 & 1) != 0)
            break;
        }
        if (v31 == v32)
          v31 = 0;
        if (*(_QWORD *)(v20 + 8 * v31) != -1)
        {
          sub_1C0791970();
          goto LABEL_35;
        }
      }
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    sub_1C0792CBC();
LABEL_35:
    sub_1C0786D70();
    *(_QWORD *)(v20 + v33) |= v34;
    (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(*(_QWORD *)(v17 + 48) + v35 * v28, v15, v13);
    ++*(_QWORD *)(v17 + 16);
    if (__OFSUB__(a3--, 1))
      goto LABEL_40;
    a4 = v26;
    if (!a3)
      goto LABEL_37;
  }
  v25 = v23 + 3;
  if (v25 >= v38)
    goto LABEL_37;
  v24 = v37[v25];
  if (v24)
  {
    v19 = v25;
    goto LABEL_24;
  }
  while (1)
  {
    v19 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v19 >= v38)
      goto LABEL_37;
    v24 = v37[v19];
    ++v25;
    if (v24)
      goto LABEL_24;
  }
LABEL_42:
  __break(1u);
}

void sub_1C0C8894C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C0C886C4(a1, a2, a3, a4, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], &qword_1ED760198, (unint64_t *)&qword_1ED7618F0, MEMORY[0x1E0D3CE40]);
}

void sub_1C0C88970(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  int v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  if (!a3)
  {
LABEL_35:
    sub_1C077AF1C();
    return;
  }
  sub_1C079AE68();
  if (v6)
    return;
  sub_1C07ACF80(&qword_1ED7512F8);
  v7 = sub_1C07AE084();
  v8 = v7;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = v7 + 56;
  v12 = 56;
  v37 = a4;
  while (1)
  {
    if (v9)
    {
      v38 = (v9 - 1) & v9;
      v39 = v10;
      v13 = __clz(__rbit64(v9)) | (v10 << 6);
      goto LABEL_23;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_39;
    if (v14 >= a2)
      goto LABEL_35;
    if (!a1[v14])
    {
      if (v10 + 2 >= a2)
        goto LABEL_35;
      if (!a1[v10 + 2])
      {
        if (v10 + 3 >= a2)
          goto LABEL_35;
        if (!a1[v10 + 3])
        {
          v15 = v10 + 4;
          if (v10 + 4 >= a2)
            goto LABEL_35;
          if (!a1[v15])
            break;
        }
      }
    }
LABEL_22:
    sub_1C07B85E4();
    v38 = v17;
    v39 = v18;
    v13 = v19 + (v18 << 6);
LABEL_23:
    v20 = *(_QWORD *)(a4 + 48) + v13 * v12;
    v21 = *(_QWORD *)v20;
    v22 = *(_QWORD *)(v20 + 8);
    v23 = *(_QWORD *)(v20 + 16);
    v24 = *(_QWORD *)(v20 + 24);
    v26 = *(_QWORD *)(v20 + 32);
    v25 = *(_QWORD *)(v20 + 40);
    v27 = *(_BYTE *)(v20 + 48);
    v28 = *(_DWORD *)(v20 + 52);
    sub_1C1070DF8();
    swift_bridgeObjectRetain_n();
    sub_1C07796E0();
    sub_1C077AEBC();
    sub_1C106FC28();
    swift_bridgeObjectRelease();
    sub_1C07796E0();
    sub_1C106FC28();
    swift_bridgeObjectRelease();
    sub_1C077AEBC();
    sub_1C106FC28();
    sub_1C077B5B4();
    sub_1C1070E04();
    sub_1C1070E28();
    sub_1C1070E4C();
    sub_1C0799804();
    sub_1C077B1F4();
    if (v6)
    {
      sub_1C0797B50();
      while (1)
      {
        sub_1C0793670();
        if (v6)
        {
          if ((v30 & 1) != 0)
            break;
        }
        if (v31 == v32)
          v31 = 0;
        if (*(_QWORD *)(v11 + 8 * v31) != -1)
        {
          sub_1C0791970();
          goto LABEL_33;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    sub_1C0792CBC();
LABEL_33:
    *(_QWORD *)(v11 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
    v33 = *(_QWORD *)(v8 + 48) + 56 * v29;
    *(_QWORD *)v33 = v21;
    *(_QWORD *)(v33 + 8) = v22;
    *(_QWORD *)(v33 + 16) = v23;
    *(_QWORD *)(v33 + 24) = v24;
    *(_QWORD *)(v33 + 32) = v26;
    *(_QWORD *)(v33 + 40) = v25;
    *(_BYTE *)(v33 + 48) = v27;
    *(_DWORD *)(v33 + 52) = v28;
    sub_1C07AD314();
    if (v34)
      goto LABEL_38;
    a4 = v37;
    v9 = v38;
    v10 = v39;
    if (!v4)
      goto LABEL_35;
  }
  while (1)
  {
    v16 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v16 >= a2)
      goto LABEL_35;
    ++v15;
    if (a1[v16])
      goto LABEL_22;
  }
LABEL_40:
  __break(1u);
}

void sub_1C0C88C6C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  if (!a3)
  {
LABEL_36:
    sub_1C077AF1C();
    goto LABEL_37;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
LABEL_37:
    sub_1C0776760();
    return;
  }
  sub_1C07ACF80(&qword_1ED7601A0);
  v8 = sub_1C1070744();
  v9 = v8;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = v8 + 56;
  while (1)
  {
    if (v10)
    {
      sub_1C0782E24();
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_40;
    if (v15 >= a2)
      goto LABEL_36;
    ++v11;
    if (!a1[v15])
    {
      v11 = v15 + 1;
      if (v15 + 1 >= a2)
        goto LABEL_36;
      if (!a1[v11])
      {
        v11 = v15 + 2;
        if (v15 + 2 >= a2)
          goto LABEL_36;
        if (!a1[v11])
          break;
      }
    }
LABEL_23:
    sub_1C07B984C();
    v14 = v17 + (v11 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v14);
    v19 = sub_1C1070DEC() & ~(-1 << *(_BYTE *)(v9 + 32));
    if (((-1 << v19) & ~*(_QWORD *)(v12 + 8 * (v19 >> 6))) == 0)
    {
      sub_1C0797B50();
      while (1)
      {
        sub_1C0793670();
        if (v23)
        {
          if ((v20 & 1) != 0)
            break;
        }
        if (v21 == v22)
          v21 = 0;
        if (*(_QWORD *)(v12 + 8 * v21) != -1)
        {
          sub_1C0791970();
          goto LABEL_34;
        }
      }
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    sub_1C0792CBC();
LABEL_34:
    sub_1C0786D70();
    *(_QWORD *)(v12 + v24) |= v25;
    *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v26) = v18;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
      goto LABEL_39;
    if (!v5)
      goto LABEL_36;
  }
  v16 = v15 + 3;
  if (v16 >= a2)
    goto LABEL_36;
  if (a1[v16])
  {
    v11 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v11 >= a2)
      goto LABEL_36;
    ++v16;
    if (a1[v11])
      goto LABEL_23;
  }
LABEL_41:
  __break(1u);
}

void sub_1C0C88E44(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v33 = a1;
  v7 = type metadata accessor for OntologyTriple();
  v35 = *(_QWORD *)(v7 - 8);
  v36 = v7;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
LABEL_37:
    swift_release();
LABEL_38:
    sub_1C0776760();
    return;
  }
  if (*(_QWORD *)(a4 + 16) == a3)
    goto LABEL_38;
  sub_1C07ACF80(&qword_1EF639F10);
  v11 = sub_1C07AE084();
  v12 = v11;
  v32 = a2;
  if (a2 < 1)
    v13 = 0;
  else
    v13 = *v33;
  v14 = 0;
  v15 = v11 + 56;
  v34 = a4;
  while (1)
  {
    if (v13)
    {
      sub_1C079BFA4();
      v37 = v17;
      v38 = v16;
      v19 = v18 | (v16 << 6);
      goto LABEL_25;
    }
    v20 = v14 + 1;
    if (__OFADD__(v14, 1))
      goto LABEL_41;
    if (v20 >= v32)
      goto LABEL_37;
    v21 = v33[v20];
    v22 = v14 + 1;
    if (!v21)
    {
      v22 = v14 + 2;
      if (v14 + 2 >= v32)
        goto LABEL_37;
      v21 = v33[v22];
      if (!v21)
      {
        v22 = v14 + 3;
        if (v14 + 3 >= v32)
          goto LABEL_37;
        v21 = v33[v22];
        if (!v21)
          break;
      }
    }
LABEL_24:
    v37 = (v21 - 1) & v21;
    v38 = v22;
    v19 = __clz(__rbit64(v21)) + (v22 << 6);
LABEL_25:
    v24 = *(_QWORD *)(v35 + 72);
    sub_1C07E05C8(*(_QWORD *)(a4 + 48) + v24 * v19, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for OntologyTriple);
    sub_1C1070DF8();
    sub_1C07796E0();
    sub_1C106FC28();
    swift_bridgeObjectRelease();
    sub_1C106E41C();
    sub_1C0794BAC(&qword_1ED75EA28, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC68]);
    sub_1C0791F24();
    sub_1C077AEBC();
    sub_1C078CD1C();
    sub_1C077B5B4();
    sub_1C0791F24();
    sub_1C077AEBC();
    sub_1C078CD1C();
    sub_1C077B5B4();
    sub_1C1070E4C();
    sub_1C0799804();
    sub_1C077B1F4();
    if (v25)
    {
      sub_1C0797B50();
      while (1)
      {
        sub_1C0793670();
        if (v25)
        {
          if ((v27 & 1) != 0)
            break;
        }
        if (v28 == v29)
          v28 = 0;
        if (*(_QWORD *)(v15 + 8 * v28) != -1)
        {
          sub_1C0791970();
          goto LABEL_35;
        }
      }
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    sub_1C0792CBC();
LABEL_35:
    sub_1C07952EC(v26);
    sub_1C07E05F4((uint64_t)v10, *(_QWORD *)(v12 + 48) + v30 * v24, (uint64_t (*)(_QWORD))type metadata accessor for OntologyTriple);
    sub_1C07AD314();
    if (v31)
      goto LABEL_40;
    a4 = v34;
    v13 = v37;
    v14 = v38;
  }
  v23 = v14 + 4;
  if (v14 + 4 >= v32)
    goto LABEL_37;
  v21 = v33[v23];
  if (v21)
  {
    v22 = v14 + 4;
    goto LABEL_24;
  }
  while (1)
  {
    v22 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v22 >= v32)
      goto LABEL_37;
    v21 = v33[v22];
    ++v23;
    if (v21)
      goto LABEL_24;
  }
LABEL_42:
  __break(1u);
}

void sub_1C0C89158(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  if (!a3)
  {
LABEL_38:
    sub_1C077AF1C();
    return;
  }
  sub_1C079AE68();
  if (v7)
    return;
  v8 = v6;
  sub_1C07ACF80(&qword_1ED7512F0);
  v9 = sub_1C07AE084();
  v41 = v8;
  if (v8 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = v9 + 56;
  v43 = a4;
  v44 = v9;
  while (1)
  {
    v48 = v4;
    if (v10)
    {
      sub_1C079BFA4();
      v45 = v14;
      v46 = v13;
      v16 = v15 | (v13 << 6);
      goto LABEL_23;
    }
    if (__OFADD__(v11, 1))
      goto LABEL_42;
    if (v11 + 1 >= v41)
      goto LABEL_38;
    sub_1C079CEE4();
    if (!v19)
    {
      if (v17 + 1 >= v18)
        goto LABEL_38;
      if (!a1[v17 + 1])
      {
        if (v17 + 2 >= v18)
          goto LABEL_38;
        if (!a1[v17 + 2])
        {
          if (v17 + 3 >= v18)
            goto LABEL_38;
          sub_1C079CEE4();
          if (!v22)
            break;
        }
      }
    }
LABEL_22:
    sub_1C07B85E4();
    v45 = v24;
    v46 = v25;
    v16 = v26 + (v25 << 6);
LABEL_23:
    v27 = (uint64_t *)(*(_QWORD *)(a4 + 48) + (v16 << 6));
    v28 = *v27;
    v29 = v27[1];
    v30 = v27[3];
    v47 = v27[2];
    v31 = v27[4];
    v32 = v27[5];
    v33 = v27[6];
    v34 = v27[7];
    sub_1C1070DF8();
    if (v32)
    {
      v35 = v28;
      sub_1C077E6D0();
      sub_1C0778624();
      sub_1C07A878C(v31, v32);
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C106FC28();
      swift_bridgeObjectRelease();
      sub_1C077AEBC();
    }
    else
    {
      sub_1C077E6D0();
      sub_1C0778624();
      sub_1C07A878C(v31, 0);
      sub_1C077E6D0();
      v35 = v28;
    }
    sub_1C106FC28();
    swift_bridgeObjectRelease();
    sub_1C1070E4C();
    sub_1C0799804();
    sub_1C077B1F4();
    if (v7)
    {
      sub_1C0797B50();
      while (1)
      {
        sub_1C0793670();
        if (v7)
        {
          if ((v37 & 1) != 0)
            break;
        }
        if (v38 == v39)
          v38 = 0;
        if (*(_QWORD *)(v12 + 8 * v38) != -1)
        {
          sub_1C0791970();
          goto LABEL_36;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    sub_1C0792CBC();
LABEL_36:
    *(_QWORD *)(v12 + ((v36 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v36;
    v40 = (_QWORD *)(*(_QWORD *)(v44 + 48) + (v36 << 6));
    *v40 = v35;
    v40[1] = v29;
    v40[2] = v47;
    v40[3] = v30;
    v40[4] = v31;
    v40[5] = v32;
    v40[6] = v33;
    v40[7] = v34;
    ++*(_QWORD *)(v44 + 16);
    v4 = v48 - 1;
    if (__OFSUB__(v48, 1))
      goto LABEL_41;
    a4 = v43;
    v10 = v45;
    v11 = v46;
    if (v48 == 1)
      goto LABEL_38;
  }
  while (1)
  {
    v23 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v23 >= v21)
      goto LABEL_38;
    ++v20;
    if (a1[v23])
      goto LABEL_22;
  }
LABEL_43:
  __break(1u);
}

uint64_t sub_1C0C8942C(uint64_t a1)
{
  uint64_t v1;

  return sub_1C0C8759C(a1, *(_QWORD *)(v1 + 16), *(uint64_t **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(uint64_t **)(v1 + 48));
}

uint64_t sub_1C0C8943C()
{
  return sub_1C0C32284() & 1;
}

float sub_1C0C89454()
{
  vDSP_Length v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  float v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v21;
  int v22;
  float v23;
  float __C;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  sub_1C077C854();
  sub_1C07A1E5C(&qword_1EF646228);
  v0 = *(_QWORD *)(sub_1C0781274() + 16);
  swift_bridgeObjectRelease();
  __C = NAN;
  v1 = sub_1C07AB5CC();
  v2 = sub_1C0781274();
  vDSP_dotpr((const float *)(v1 + 32), 1, (const float *)(v2 + 32), 1, &__C, v0);
  sub_1C077589C();
  sub_1C077960C();
  v3 = sub_1C0781274();
  sub_1C07B8048(v3, v4, v5, v6, v7, v8, v9, v10, v21);
  sub_1C077960C();
  v11 = *(float *)&v22;
  v12 = sub_1C07AB5CC();
  sub_1C07B8048(v12, v13, v14, v15, v16, v17, v18, v19, v22);
  sub_1C07767AC();
  return __C / (float)((float)(sqrtf(v11) * sqrtf(v23)) + 0.00000011921);
}

uint64_t sub_1C0C89578(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  unint64_t i;
  int64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  float v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  float v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  char v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  BOOL v47;
  uint64_t v48;
  uint64_t result;
  uint64_t v50;
  uint64_t v51;
  int64_t v52;
  uint64_t v54;
  int64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int v62;
  _QWORD *v63;

  v51 = a1 + 56;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 56);
  v52 = (unint64_t)(v3 + 63) >> 6;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v6 = 0;
  if (!v5)
    goto LABEL_5;
LABEL_4:
  v54 = (v5 - 1) & v5;
  v55 = v6;
  for (i = __clz(__rbit64(v5)) | (v6 << 6); ; i = __clz(__rbit64(v9)) + (v10 << 6))
  {
    v12 = *(_QWORD *)(a1 + 48) + 56 * i;
    v14 = *(_QWORD *)v12;
    v13 = *(_QWORD *)(v12 + 8);
    v15 = *(_QWORD *)(v12 + 24);
    v16 = *(_QWORD *)(v12 + 40);
    v58 = *(_QWORD *)(v12 + 32);
    v59 = *(_QWORD *)(v12 + 16);
    v62 = *(unsigned __int8 *)(v12 + 48);
    v17 = *(float *)(v12 + 52);
    v18 = *a2;
    v19 = *(_QWORD *)(*a2 + 16);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    if (v19)
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v20 = sub_1C077D774(v14, v13);
      if ((v21 & 1) != 0)
      {
        v22 = v15;
        v23 = *(_QWORD *)(v18 + 56) + 56 * v20;
        v24 = *(_QWORD *)(v23 + 8);
        v57 = *(_QWORD *)v23;
        v25 = *(_QWORD *)(v23 + 24);
        v50 = *(_QWORD *)(v23 + 16);
        v26 = *(_QWORD *)(v23 + 32);
        v27 = *(_QWORD *)(v23 + 40);
        v28 = *(unsigned __int8 *)(v23 + 48);
        v29 = *(float *)(v23 + 52);
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v61 = v25;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v60 = v27;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        swift_bridgeObjectRelease();
        if (v62 >= v28)
        {
          if (v28 == v62)
          {
            v31 = v27;
            v30 = v25;
            v32 = v24;
            v33 = v57;
            if (v17 >= v29)
            {
              v33 = v14;
              v32 = v13;
            }
            v56 = v32;
            v57 = v33;
            if (v17 >= v29)
              v34 = v59;
            else
              v34 = v50;
            if (v17 >= v29)
              v30 = v22;
            v35 = v58;
            if (v17 < v29)
              v35 = v26;
            v58 = v35;
            v59 = v34;
            if (v17 >= v29)
              v31 = v16;
            v60 = v31;
            v61 = v30;
            if (v17 >= v29)
              v29 = v17;
          }
          else
          {
            v56 = v13;
            v57 = v14;
            v60 = v16;
            v61 = v22;
            v29 = v17;
          }
        }
        else
        {
          v56 = v24;
          v58 = v26;
          v59 = v50;
          LOBYTE(v62) = v28;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v17 = v29;
      }
      else
      {
        v56 = v13;
        v57 = v14;
        v60 = v16;
        v61 = v15;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v56 = v13;
      v57 = v14;
      v60 = v16;
      v61 = v15;
    }
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_isUniquelyReferenced_nonNull_native();
    v36 = *a2;
    v63 = (_QWORD *)*a2;
    *a2 = 0x8000000000000000;
    v37 = sub_1C077D774(v14, v13);
    if (__OFADD__(*(_QWORD *)(v36 + 16), (v38 & 1) == 0))
    {
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
      goto LABEL_59;
    }
    v39 = v37;
    v40 = v38;
    sub_1C07ACF80(&qword_1ED751300);
    if ((sub_1C107090C() & 1) != 0)
    {
      v41 = sub_1C077D774(v14, v13);
      if ((v40 & 1) != (v42 & 1))
        goto LABEL_60;
      v39 = v41;
    }
    if ((v40 & 1) != 0)
    {
      v43 = v63[7] + 56 * v39;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_QWORD *)v43 = v57;
      *(_QWORD *)(v43 + 8) = v56;
      *(_QWORD *)(v43 + 16) = v59;
      *(_QWORD *)(v43 + 24) = v61;
      *(_QWORD *)(v43 + 32) = v58;
      *(_QWORD *)(v43 + 40) = v60;
      *(_BYTE *)(v43 + 48) = v62;
      *(float *)(v43 + 52) = v17;
    }
    else
    {
      v63[(v39 >> 6) + 8] |= 1 << v39;
      v44 = (uint64_t *)(v63[6] + 16 * v39);
      *v44 = v14;
      v44[1] = v13;
      v45 = v63[7] + 56 * v39;
      *(_QWORD *)v45 = v57;
      *(_QWORD *)(v45 + 8) = v56;
      *(_QWORD *)(v45 + 16) = v59;
      *(_QWORD *)(v45 + 24) = v61;
      *(_QWORD *)(v45 + 32) = v58;
      *(_QWORD *)(v45 + 40) = v60;
      *(_BYTE *)(v45 + 48) = v62;
      *(float *)(v45 + 52) = v17;
      v46 = v63[2];
      v47 = __OFADD__(v46, 1);
      v48 = v46 + 1;
      if (v47)
        goto LABEL_57;
      v63[2] = v48;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    }
    *a2 = (uint64_t)v63;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v5 = v54;
    v6 = v55;
    if (v54)
      goto LABEL_4;
LABEL_5:
    v8 = v6 + 1;
    if (__OFADD__(v6, 1))
      goto LABEL_58;
    if (v8 >= v52)
      return swift_release();
    v9 = *(_QWORD *)(v51 + 8 * v8);
    v10 = v6 + 1;
    if (!v9)
    {
      v10 = v6 + 2;
      if (v6 + 2 >= v52)
        return swift_release();
      v9 = *(_QWORD *)(v51 + 8 * v10);
      if (!v9)
      {
        v10 = v6 + 3;
        if (v6 + 3 >= v52)
          return swift_release();
        v9 = *(_QWORD *)(v51 + 8 * v10);
        if (!v9)
        {
          v10 = v6 + 4;
          if (v6 + 4 >= v52)
            return swift_release();
          v9 = *(_QWORD *)(v51 + 8 * v10);
          if (!v9)
            break;
        }
      }
    }
LABEL_20:
    v54 = (v9 - 1) & v9;
    v55 = v10;
  }
  v11 = v6 + 5;
  if (v6 + 5 >= v52)
    return swift_release();
  v9 = *(_QWORD *)(v51 + 8 * v11);
  if (v9)
  {
    v10 = v6 + 5;
    goto LABEL_20;
  }
  while (1)
  {
    v10 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v10 >= v52)
      return swift_release();
    v9 = *(_QWORD *)(v51 + 8 * v10);
    ++v11;
    if (v9)
      goto LABEL_20;
  }
LABEL_59:
  __break(1u);
LABEL_60:
  result = sub_1C1070D44();
  __break(1u);
  return result;
}

void sub_1C0C89A74(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1C0861CE0();
    v2 = v3;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v4;
  sub_1C0C943A4(v5);
  *a1 = v2;
}

uint64_t PeopleMatcher.init(stores:source:pipelineType:)(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  uint64_t v4;
  uint64_t v6;

  *(_QWORD *)(v4 + 24) = a2;
  *(_QWORD *)(v4 + 32) = a3;
  *(_QWORD *)(v4 + 16) = a1;
  v6 = sub_1C106F064();
  *(_QWORD *)(v4 + 40) = v6;
  *(_QWORD *)(v4 + 48) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v4 + 56) = swift_task_alloc();
  *(_QWORD *)(v4 + 64) = swift_task_alloc();
  *(_BYTE *)(v4 + 104) = *a4;
  sub_1C077862C();
  return swift_task_switch();
}

uint64_t sub_1C0C89B58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  _QWORD *v8;

  v3 = *(_BYTE *)(v2 + 104);
  v4 = *(_QWORD *)(v2 + 32);
  v5 = *(_QWORD *)(v2 + 16);
  sub_1C0C95488(*(_QWORD *)(v2 + 24), a2, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  v6 = (int *)sub_1C077D2AC();
  *(_QWORD *)(v2 + 72) = v6;
  v7 = v6[5];
  *(_DWORD *)(v2 + 96) = v7;
  sub_1C0845A4C(v4, v5 + v7, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  *(_DWORD *)(v2 + 100) = v6[6];
  sub_1C106D1A4();
  *(_BYTE *)(v5 + v6[7]) = 2;
  *(_BYTE *)(v5 + v6[8]) = v3;
  type metadata accessor for Nicknames();
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 80) = v8;
  *v8 = v2;
  v8[1] = sub_1C0C89C14;
  return sub_1C0C43CC0();
}

uint64_t sub_1C0C89C14(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = a1;
  swift_task_dealloc();
  sub_1C077862C();
  return sub_1C077AEC4();
}

void sub_1C0C89C64()
{
  _QWORD *v0;

  *(_QWORD *)(v0[2] + *(int *)(v0[9] + 36)) = v0[11];
  sub_1C106E458();
  swift_allocObject();
  sub_1C106E44C();
  __asm { BR              X10 }
}

uint64_t sub_1C0C8A088()
{
  unint64_t v0;

  v0 = sub_1C1070A2C();
  sub_1C07767AC();
  if (v0 >= 0xA)
    return 10;
  else
    return v0;
}

uint64_t sub_1C0C8A0CC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0C8A108 + 4 * byte_1C10B0A78[a1]))(0x5F746E6572727563, 0xEC00000072657375);
}

unint64_t sub_1C0C8A108()
{
  return 0xD000000000000010;
}

void sub_1C0C8A1F8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  sub_1C08C5B34(*a1, *a2);
}

void sub_1C0C8A204()
{
  unsigned __int8 *v0;

  sub_1C0A5402C(*v0);
}

uint64_t sub_1C0C8A20C(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1C08C98FC(a1, *v1);
}

void sub_1C0C8A214(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1C0A546E4(a1, *v1);
}

uint64_t sub_1C0C8A21C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C0C8A088();
  *a1 = result;
  return result;
}

void sub_1C0C8A248(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t v3;

  *a1 = sub_1C0C8A0CC(*v1);
  a1[1] = v3;
  sub_1C0778534();
}

uint64_t sub_1C0C8A26C()
{
  sub_1C0C95378();
  return sub_1C106FE8C();
}

uint64_t sub_1C0C8A2C8()
{
  sub_1C0C95378();
  return sub_1C106FE50();
}

uint64_t sub_1C0C8A314()
{
  sub_1C1070774();
  sub_1C106FC94();
  sub_1C10708F4();
  sub_1C106FC94();
  sub_1C07767B4();
  sub_1C106FC94();
  sub_1C0778580();
  sub_1C106FC94();
  return 0;
}

void PeopleMatcher.stores.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1C0845A4C(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
}

void PeopleMatcher.source.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_1C077B94C();
  sub_1C0C95488(v0 + *(int *)(v1 + 20), v2, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0778534();
}

uint64_t PeopleMatcher.entityClass.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1 + *(int *)(sub_1C077B94C() + 24);
  v3 = sub_1C0776744();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v0, v2, v3);
}

void PeopleMatcher.stageName.getter()
{
  _BYTE *v0;
  uint64_t v1;

  *v0 = *(_BYTE *)(v1 + *(int *)(sub_1C077B94C() + 28));
  sub_1C0778534();
}

void PeopleMatcher.pipelineType.getter()
{
  _BYTE *v0;
  uint64_t v1;

  *v0 = *(_BYTE *)(v1 + *(int *)(sub_1C077B94C() + 32));
  sub_1C0778534();
}

uint64_t sub_1C0C8A4E0@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  Swift::String_optional v20;
  id v21;
  void *v22;
  id v23;
  unint64_t v24;
  id v25;
  id v26;
  void *v27;
  uint64_t v28;
  id v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t result;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  _OWORD *v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  __int128 *v107;
  _OWORD *v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  id v114;
  uint64_t v115;
  _BOOL4 v116;
  uint64_t countAndFlagsBits;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  void *object;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _OWORD v128[2];
  uint64_t v129;
  uint64_t v130;
  _QWORD v131[5];
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  uint64_t v136[8];
  uint64_t v137[10];
  uint64_t v138;

  v3 = v2;
  v108 = a2;
  v5 = sub_1C106E41C();
  v119 = *(_QWORD *)(v5 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C077AF80();
  MEMORY[0x1E0C80A78](v7);
  sub_1C0779728();
  v118 = v8;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  *(_QWORD *)&v132 = MEMORY[0x1E0DEE9E8];
  *((_QWORD *)&v132 + 1) = MEMORY[0x1E0DEE9E8];
  v107 = &v133;
  *(_QWORD *)&v133 = MEMORY[0x1E0DEE9E8];
  *((_QWORD *)&v133 + 1) = MEMORY[0x1E0DEE9E8];
  v134 = 0u;
  v135 = 0u;
  v14 = *(_QWORD *)(a1 + 16);
  if (v14)
  {
    v126 = (uint64_t)&v100 - v11;
    v122 = v13;
    v113 = v12;
    v100 = (char *)&v133 + 8;
    v15 = a1;
    v16 = a1 + 32;
    v102 = (char *)&v132 + 8;
    v103 = v15;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v109 = 0;
    v110 = 0;
    v17 = 0;
    v101 = 0;
    v18 = 0xE000000000000000;
    v105 = 0xE000000000000000;
    v106 = 0xE000000000000000;
    v104 = 0xE000000000000000;
    v111 = 0xE000000000000000;
    v112 = 0;
    v127 = v5;
    while (1)
    {
      v138 = v14;
      sub_1C07D6D1C(v16, (uint64_t)v131);
      sub_1C07A3DF4();
      swift_bridgeObjectRelease();
      sub_1C0C9545C();
      if (v19)
      {
        v125 = v17;
        sub_1C0CCBA08();
        if (v3)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1C07785A0();
          swift_bridgeObjectRelease();
          _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v131);
          swift_bridgeObjectRelease();
          sub_1C077B5B4();
          swift_bridgeObjectRelease();
          sub_1C077960C();
          sub_1C0775834();
          return sub_1C077589C();
        }
        v123 = v18;
        sub_1C07A3DF4();
        v20 = String.normalizedContactHandle()();
        countAndFlagsBits = v20.value._countAndFlagsBits;
        object = v20.value._object;
        sub_1C077960C();
        sub_1C07A3DF4();
        v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D13A70]), sel_init);
        v22 = (void *)sub_1C106FAF0();
        v23 = objc_msgSend(v21, sel_typeOfHandleString_, v22);
        sub_1C077589C();

        sub_1C07A3DF4();
        v115 = sub_1C106FB68();
        v120 = v24;
        sub_1C077960C();
        sub_1C07A3DF4();
        v25 = objc_allocWithZone(MEMORY[0x1E0CB3560]);
        v26 = sub_1C0B6A550(2048);
        v124 = 0;
        v27 = (void *)sub_1C106FAF0();
        sub_1C07767C4();
        v28 = sub_1C106FD0C();
        sub_1C0775894();
        v29 = objc_msgSend(v26, sel_matchesInString_options_range_, v27, 0, 0, v28);

        sub_1C0BFE87C();
        v30 = sub_1C106FF04();

        if (v30 >> 62)
        {
          sub_1C077E6D0();
          v31 = sub_1C10709B4();

          sub_1C07758A4();
        }
        else
        {
          v31 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
          sub_1C07785A0();

        }
        sub_1C0775894();
        v116 = v31 != 0;
        sub_1C0C95420();
        v32 = v122;
        sub_1C106EA7C();
        v33 = sub_1C106E2FC();
        (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v32, v127);
        sub_1C07A9480(v131, v131[3]);
        sub_1C0C954A8();
        if ((v33 & 1) != 0)
          sub_1C106EAA0();
        else
          sub_1C106EA7C();
        sub_1C0C95420();
        v34 = v122;
        sub_1C106EAA0();
        v35 = v118;
        sub_1C106E170();
        v36 = sub_1C08C4D74(v34, v35);
        v37 = v35;
        v38 = v127;
        sub_1C0798FC0(v37);
        sub_1C0798FC0(v34);
        if ((v36 & 1) != 0)
        {
          sub_1C0798FC0(v126);
          sub_1C07A1F1C();
          sub_1C07B9860();
          goto LABEL_13;
        }
        v114 = v23;
        v39 = v113;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v119 + 16))(v113, v126, v38);
        sub_1C106DE70();
        sub_1C07803F8(&qword_1ED75EA30, (void (*)(uint64_t))MEMORY[0x1E0D3CC50]);
        sub_1C07A73C4();
        sub_1C07A1260();
        sub_1C106DEB8();
        sub_1C07A73C4();
        sub_1C07A1260();
        v40 = v114;
        sub_1C106E0EC();
        sub_1C07A73C4();
        sub_1C07A1260();
        sub_1C106DDEC();
        sub_1C07A73C4();
        sub_1C07A1260();
        if ((v36 & 1) != 0)
        {
          sub_1C0798FC0(v39);
          sub_1C07A1F1C();
          sub_1C0793220();
          if (v42)
            v45 = 0;
          else
            v45 = v43;
          if (v42)
            v46 = 0xE000000000000000;
          else
            v46 = v44;
          sub_1C0A7D28C((uint64_t)v128, v45, v46);
          sub_1C0794864();
          goto LABEL_26;
        }
        sub_1C106DE58();
        sub_1C07A73C4();
        sub_1C07A1260();
        sub_1C106E248();
        sub_1C07A73C4();
        sub_1C07A1260();
        sub_1C106DD74();
        sub_1C07A73C4();
        sub_1C07A1260();
        sub_1C106DCE4();
        sub_1C07A73C4();
        sub_1C07A1260();
        if ((v36 & 1) != 0)
        {
          sub_1C0798FC0(v39);
          if (v40 == (id)1)
          {
            sub_1C07A1F1C();
            sub_1C0793220();
            sub_1C077C0B8();
            sub_1C07A2A2C();
            sub_1C0794864();
            sub_1C079C01C(v136);
            sub_1C0A7F3E4(v128, (uint64_t)v136);
            v47 = v129;
            v48 = v130;
            swift_bridgeObjectRelease();
            sub_1C077960C();
            sub_1C07A94A4(v47, v48);
LABEL_26:
            sub_1C0798FC0(v126);
LABEL_13:
            v3 = v124;
LABEL_14:
            v18 = v123;
            v17 = v125;
            goto LABEL_15;
          }
          v3 = v124;
          if (!v116)
          {
            sub_1C0798FC0(v126);
            swift_bridgeObjectRelease();
            sub_1C07B9860();
            v17 = v115;
            v106 = v120;
LABEL_51:
            v18 = v123;
            goto LABEL_15;
          }
LABEL_38:
          sub_1C07A1F1C();
          sub_1C0793220();
          if (v51)
            v54 = 0;
          else
            v54 = v52;
          if (v51)
            v55 = 0xE000000000000000;
          else
            v55 = v53;
          sub_1C0A7D28C((uint64_t)v128, v54, v55);
          sub_1C0794864();
          goto LABEL_45;
        }
        sub_1C106E3B0();
        sub_1C07A73C4();
        sub_1C07A1260();
        v3 = v124;
        sub_1C106DD20();
        sub_1C07A73C4();
        sub_1C07A1260();
        if ((v36 & 1) != 0)
        {
          sub_1C0798FC0(v39);
          if (v114 != (id)1)
          {
            if (!v116)
            {
              sub_1C0798FC0(v126);
              swift_bridgeObjectRelease();
              sub_1C07B9860();
              v101 = v115;
              v104 = v120;
              goto LABEL_14;
            }
            goto LABEL_38;
          }
          sub_1C07A1F1C();
          sub_1C0793220();
          sub_1C077C0B8();
          sub_1C07A2A2C();
          sub_1C0794864();
          sub_1C079C01C(v137);
          sub_1C0A7F3E4(v128, (uint64_t)v137);
          v49 = v129;
          v50 = v130;
          swift_bridgeObjectRelease();
          sub_1C077960C();
          v3 = v124;
          sub_1C07A94A4(v49, v50);
LABEL_45:
          sub_1C0798FC0(v126);
          goto LABEL_14;
        }
        sub_1C07B9860();
        sub_1C106DD2C();
        sub_1C07A73C4();
        sub_1C07A1260();
        sub_1C106DD38();
        sub_1C07A73C4();
        sub_1C07A1260();
        sub_1C0798FC0(v39);
        sub_1C0798FC0(v126);
        v17 = v125;
        if ((v36 & 1) == 0)
        {
          sub_1C07A1F1C();
          goto LABEL_51;
        }
        swift_bridgeObjectRelease();
        v109 = v115;
        v18 = v120;
      }
LABEL_15:
      v41 = v138;
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v131);
      v16 += 40;
      v14 = v41 - 1;
      if (!v14)
      {
        swift_bridgeObjectRelease();
        v56 = v101;
        v58 = v104;
        v57 = v105;
        v123 = v18;
        v60 = v110;
        v59 = v111;
        v61 = v112;
        v125 = v17;
        v62 = v106;
        goto LABEL_53;
      }
    }
  }
  v109 = 0;
  v61 = 0;
  v125 = 0;
  v56 = 0;
  v60 = 0;
  v123 = 0xE000000000000000;
  v57 = 0xE000000000000000;
  v62 = 0xE000000000000000;
  v58 = 0xE000000000000000;
  v59 = 0xE000000000000000;
LABEL_53:
  v124 = v3;
  sub_1C07ACF80(&qword_1ED762CB0);
  v63 = sub_1C0778598();
  *(_OWORD *)(v63 + 16) = xmmword_1C107DE20;
  *(_QWORD *)(v63 + 32) = v61;
  *(_QWORD *)(v63 + 40) = v57;
  *(_QWORD *)(v63 + 48) = v60;
  *(_QWORD *)(v63 + 56) = v59;
  *(_QWORD *)(v63 + 64) = v56;
  *(_QWORD *)(v63 + 72) = v58;
  *(_QWORD *)(v63 + 80) = v125;
  *(_QWORD *)(v63 + 88) = v62;
  v64 = v123;
  *(_QWORD *)(v63 + 96) = v109;
  *(_QWORD *)(v63 + 104) = v64;
  v65 = HIBYTE(v57) & 0xF;
  v112 = v61;
  if ((v57 & 0x2000000000000000) == 0)
    v65 = v61 & 0xFFFFFFFFFFFFLL;
  v66 = MEMORY[0x1E0DEE9D8];
  v67 = v60;
  if (v65)
  {
    v110 = v60;
    v111 = v59;
    *(_QWORD *)&v128[0] = MEMORY[0x1E0DEE9D8];
    sub_1C077584C();
    sub_1C07963E4();
    v66 = *(_QWORD *)&v128[0];
    sub_1C07B699C();
    if (v68)
    {
      sub_1C079F754();
      v66 = *(_QWORD *)&v128[0];
    }
    *(_QWORD *)(v66 + 16) = v58;
    v69 = v66 + 16 * v57;
    v59 = v111;
    *(_QWORD *)(v69 + 32) = v112;
    *(_QWORD *)(v69 + 40) = v57;
    v67 = v110;
  }
  v70 = HIBYTE(v59) & 0xF;
  if ((v59 & 0x2000000000000000) == 0)
    v70 = v67 & 0xFFFFFFFFFFFFLL;
  if (v70)
  {
    sub_1C077AE90();
    v71 = sub_1C07A3A40();
    *(_QWORD *)&v128[0] = v66;
    if ((v71 & 1) == 0)
    {
      sub_1C0793EA8();
      v66 = *(_QWORD *)&v128[0];
    }
    sub_1C07B699C();
    v72 = v67;
    if (v68)
    {
      sub_1C079F754();
      v72 = v67;
      v66 = *(_QWORD *)&v128[0];
    }
    *(_QWORD *)(v66 + 16) = v58;
    v73 = v66 + 16 * v57;
    *(_QWORD *)(v73 + 32) = v72;
    *(_QWORD *)(v73 + 40) = v59;
    v56 = *(_QWORD *)(v63 + 64);
    v58 = *(_QWORD *)(v63 + 72);
  }
  sub_1C0C9545C();
  if (v74)
  {
    sub_1C077C0B8();
    v75 = sub_1C07A3A40();
    *(_QWORD *)&v128[0] = v66;
    if ((v75 & 1) == 0)
    {
      sub_1C0793EA8();
      v66 = *(_QWORD *)&v128[0];
    }
    sub_1C07B699C();
    v76 = v56;
    v77 = v58;
    if (v68)
    {
      sub_1C079F754();
      v77 = v58;
      v76 = v56;
      v66 = *(_QWORD *)&v128[0];
    }
    *(_QWORD *)(v66 + 16) = v58;
    v78 = v66 + 16 * v57;
    *(_QWORD *)(v78 + 32) = v76;
    *(_QWORD *)(v78 + 40) = v77;
  }
  v79 = *(_QWORD *)(v63 + 80);
  v80 = *(_QWORD *)(v63 + 88);
  sub_1C0C9545C();
  if (v81)
  {
    sub_1C077C0B8();
    v82 = sub_1C07A3A40();
    *(_QWORD *)&v128[0] = v66;
    if ((v82 & 1) == 0)
    {
      sub_1C0793EA8();
      v66 = *(_QWORD *)&v128[0];
    }
    v83 = *(_QWORD *)(v66 + 16);
    if (v83 >= *(_QWORD *)(v66 + 24) >> 1)
    {
      sub_1C07963E4();
      v66 = *(_QWORD *)&v128[0];
    }
    *(_QWORD *)(v66 + 16) = v83 + 1;
    v84 = v66 + 16 * v83;
    *(_QWORD *)(v84 + 32) = v79;
    *(_QWORD *)(v84 + 40) = v80;
  }
  v85 = *(_QWORD *)(v63 + 96);
  v86 = *(_QWORD *)(v63 + 104);
  sub_1C0C9545C();
  if (v87)
  {
    sub_1C077C0B8();
    v88 = sub_1C07A3A40();
    *(_QWORD *)&v128[0] = v66;
    if ((v88 & 1) == 0)
    {
      sub_1C0793EA8();
      v66 = *(_QWORD *)&v128[0];
    }
    v89 = *(_QWORD *)(v66 + 16);
    if (v89 >= *(_QWORD *)(v66 + 24) >> 1)
    {
      sub_1C07963E4();
      v66 = *(_QWORD *)&v128[0];
    }
    *(_QWORD *)(v66 + 16) = v89 + 1;
    v90 = v66 + 16 * v89;
    *(_QWORD *)(v90 + 32) = v85;
    *(_QWORD *)(v90 + 40) = v86;
  }
  swift_setDeallocating();
  sub_1C0BE8D64();
  *(_QWORD *)&v128[0] = v66;
  sub_1C07ACF80(&qword_1ED762B70);
  sub_1C07BB218(&qword_1ED762430, &qword_1ED762B70);
  v91 = sub_1C106FA54();
  v93 = v92;
  swift_release();
  v94 = HIBYTE(v93) & 0xF;
  if ((v93 & 0x2000000000000000) == 0)
    v94 = v91 & 0xFFFFFFFFFFFFLL;
  if (v94)
    sub_1C0A7D28C((uint64_t)v128, v91, v93);
  result = swift_bridgeObjectRelease();
  v96 = v134;
  v97 = v135;
  v98 = v133;
  v99 = v108;
  *v108 = v132;
  v99[1] = v98;
  v99[2] = v96;
  v99[3] = v97;
  return result;
}

uint64_t sub_1C0C8B1F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t inited;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;

  v2 = sub_1C106FB68();
  v4 = v3;
  sub_1C07B1280();
  sub_1C07796D8();
  v5 = (_QWORD *)sub_1C07B4948();
  v30 = v4;
  if (v5[2] != 2)
  {
    v29 = v2;
    if (qword_1ED761458 == -1)
      goto LABEL_5;
    goto LABEL_27;
  }
  sub_1C077589C();
  if (!v5[2])
    goto LABEL_26;
  v6 = v5[4];
  v7 = v5[5];
  sub_1C077C0B8();
  while (1)
  {
    sub_1C077862C();
    sub_1C07A94A4(v15, v16);
    sub_1C07ACF80(&qword_1ED762CB0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1078A20;
    *(_QWORD *)(inited + 32) = 43;
    *(_QWORD *)(inited + 40) = 0xE100000000000000;
    *(_QWORD *)(inited + 48) = 11565;
    *(_QWORD *)(inited + 56) = 0xE200000000000000;
    *(_QWORD *)(inited + 64) = 46;
    *(_QWORD *)(inited + 72) = 0xE100000000000000;
    if ((sub_1C077F0D4() & 1) != 0)
    {
      v18 = (_QWORD *)sub_1C07B4948();
      if (v18[2] == 2)
        goto LABEL_13;
      sub_1C07785A0();
    }
    if ((sub_1C077F0D4() & 1) != 0)
    {
      v18 = (_QWORD *)sub_1C07B4948();
      if (v18[2] == 2)
      {
LABEL_13:
        sub_1C07814FC();
        goto LABEL_17;
      }
      sub_1C07785A0();
    }
    if ((sub_1C077F0D4() & 1) == 0)
    {
      sub_1C07814FC();
      goto LABEL_22;
    }
    v18 = (_QWORD *)sub_1C07B4948();
    v19 = v18[2];
    sub_1C07814FC();
    if (v19 != 2)
      break;
LABEL_17:
    if (v18[2])
    {
      v20 = v18[4];
      v21 = v18[5];
      sub_1C0778624();
      sub_1C07785A0();
      if (v5[2] >= 2uLL)
      {
        v22 = v5[6];
        v23 = v5[7];
        sub_1C077E6D0();
        goto LABEL_23;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    swift_once();
LABEL_5:
    v8 = sub_1C106F544();
    sub_1C079E000(v8, (uint64_t)qword_1ED78D818);
    sub_1C077C0B8();
    v9 = sub_1C106F538();
    v10 = sub_1C1070390();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)sub_1C0775854();
      sub_1C0775854();
      *(_DWORD *)v11 = 136380675;
      sub_1C077C0B8();
      v12 = sub_1C0789B08();
      sub_1C0788DAC(v12, v13, v14);
      sub_1C10705AC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C0771000, v9, v10, "Invalid Email: %{private}s does not contain single '@'. Treating as empty.", v11, 0xCu);
      swift_arrayDestroy();
      sub_1C0776778();
    }

    sub_1C07758A4();
    v6 = 0;
    v7 = 0xE000000000000000;
    v2 = v29;
  }
  sub_1C07785A0();
LABEL_22:
  v20 = 0;
  v21 = 0;
  v22 = 0;
  v23 = 0;
LABEL_23:
  sub_1C077B5B4();
  sub_1C077584C();
  sub_1C077C0B8();
  v24 = sub_1C077E274();
  sub_1C080E9A0(v24, v25);
  sub_1C077589C();
  sub_1C07758A4();
  v26 = sub_1C077E274();
  result = sub_1C07A94A4(v26, v27);
  *a1 = v2;
  a1[1] = v30;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v20;
  a1[5] = v21;
  a1[6] = v22;
  a1[7] = v23;
  return result;
}

uint64_t PeopleMatcher.execute()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[3] = v0;
  v1[4] = sub_1C077D2AC();
  v1[5] = sub_1C0779D74();
  v2 = sub_1C0776744();
  v1[6] = v2;
  v1[7] = *(_QWORD *)(v2 - 8);
  v1[8] = sub_1C0775870();
  v1[9] = sub_1C0775870();
  v1[10] = sub_1C0775870();
  v1[11] = sub_1C0775870();
  sub_1C07ACF80(&qword_1ED7618D0);
  v1[12] = sub_1C0779D74();
  sub_1C077862C();
  return sub_1C077AEC4();
}

void sub_1C0C8B660()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10[32];

  v1 = v0[12];
  v2 = v0[6];
  v3 = v0[7];
  v5 = v0[3];
  v4 = v0[4];
  type metadata accessor for PhaseStores();
  v6 = *(int *)(v4 + 32);
  v10[0] = *(_BYTE *)(v5 + v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v5 + *(int *)(v4 + 24), v2);
  sub_1C077B118();
  sub_1C07B2D8C(v7, v8, v9, v2);
  sub_1C0AB2308(v10, v1);
  sub_1C0784B6C(v1, &qword_1ED7618D0);
  __asm { BR              X9 }
}

uint64_t sub_1C0C8B714()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(void);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t, uint64_t);
  char v38;

  v7 = v6;
  v8 = v2[7];
  v9 = v0;
  v10 = v2[3];
  v35 = v7;
  v11 = *(_QWORD *)(v5 + v7);
  sub_1C07973B8(v9);
  v36 = v3;
  v12 = sub_1C0794DA4();
  *(_QWORD *)(v12 + 16) = v10;
  sub_1C0791D48();
  sub_1C09144FC(v13);
  v14 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  sub_1C0779940();
  sub_1C07767D4();
  if (v1)
  {
    swift_task_dealloc();
    sub_1C07767BC();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1C077C104();
    sub_1C07767D4();
    v24 = (uint64_t (*)(void))v2[1];
  }
  else
  {
    v15 = sub_1C07946C4();
    if (*(_BYTE *)(v11 + *(int *)(v15 + 28)) == 1)
    {
      v23 = v2[10];
      sub_1C078F678(v15, v16, v17, v18, v19, v20, v21, v22, v31, v32, v33, v34, v35, v36, v37);
      *(_QWORD *)(sub_1C0794DA4() + 16) = v12;
      sub_1C0914518(v23);
      v14(v23, v10);
      sub_1C077C104();
    }
    v25 = v2[12];
    v26 = v2[6];
    sub_1C106AC6C();
    sub_1C077B118();
    sub_1C0889ABC();
    v38 = *(_BYTE *)(v5 + v4);
    v37(v25, v36, v26);
    sub_1C077B118();
    sub_1C07B2D8C(v27, v28, v29, v26);
    sub_1C0AB25AC(&v38, v25);
    sub_1C0784B6C(v25, &qword_1ED7618D0);
    sub_1C07767D4();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1C077C104();
    swift_task_dealloc();
    swift_task_dealloc();
    v24 = (uint64_t (*)(void))v2[1];
  }
  return v24();
}

void sub_1C0C8BA50(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  const char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  NSObject *v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  const char *v53;
  uint64_t v54;
  const char *v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  const char *v67;
  char *v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(const char *, uint64_t, uint64_t);
  uint64_t v74;
  const char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unsigned __int8 *v81;
  uint64_t v82;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  __int128 v88;
  uint64_t v89;
  NSObject *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  BOOL v97;
  const char *v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  NSObject *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  os_log_type_t v110;
  uint8_t *v111;
  uint64_t v112;
  NSObject *v113;
  uint64_t v114;
  const char *v115;
  char v117;
  char v119;
  uint64_t v120;
  char v122;
  int v123;
  const char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  NSObject *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  const char *v152;
  uint64_t inited;
  uint64_t v154;
  uint64_t v155;
  const char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  const char *v172;
  const char *v173;
  uint64_t v174;
  _QWORD *v175;
  _QWORD *v176;
  char v178;
  uint64_t v179;
  char *v180;
  unsigned int v181;
  uint64_t v182;
  uint64_t v183;
  const char *v184;
  char v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  unint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  unint64_t v208;
  uint64_t v209;
  float v210;
  char v211;
  char v212;
  char v213;
  char v214;
  char v215;
  char v216;
  char v217;
  char v218;
  NSObject *v219;
  os_log_type_t v220;
  uint8_t *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  char *v226;
  uint64_t v227;
  void (*v228)(char *, char *, uint64_t);
  uint64_t v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  char v233;
  uint64_t v234;
  uint64_t v235;
  int *v236;
  uint64_t v237;
  NSObject *v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  int v248;
  _BOOL4 v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  const char *v263;
  const char *v264;
  const char *v265;
  const char *v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  const char *v274;
  char *v275;
  char *v276;
  uint64_t v277;
  const char *v278;
  _QWORD *v279;
  const char *v280;
  const char *v281;
  uint64_t v282;
  char *v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  char *v288;
  uint64_t v289;
  char *v290;
  char *v291;
  char *v292;
  char *v293;
  uint64_t v294;
  uint64_t v295;
  char *v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302[4];
  float v303;
  __int128 v304;
  uint64_t v305;
  uint64_t v306;
  const char *v307;
  uint64_t v308;
  const char *v309;
  const char *v310;
  __int128 v311;
  NSObject *v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  NSObject *v318;

  v298 = a2;
  v301 = a1;
  v287 = a3;
  v300 = sub_1C106F544();
  v289 = *(_QWORD *)(v300 - 8);
  MEMORY[0x1E0C80A78](v300);
  v288 = (char *)&v247 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C106ADE0();
  v284 = *(_QWORD *)(v5 - 8);
  v285 = v5;
  MEMORY[0x1E0C80A78](v5);
  v283 = (char *)&v247 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C106D1F8();
  v294 = *(_QWORD *)(v7 - 8);
  v295 = v7;
  MEMORY[0x1E0C80A78](v7);
  v293 = (char *)&v247 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v286 = type metadata accessor for Source();
  MEMORY[0x1E0C80A78](v286);
  v281 = (char *)&v247 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v278 = (char *)&v247 - v11;
  MEMORY[0x1E0C80A78](v12);
  v279 = (uint64_t *)((char *)&v247 - v13);
  v299 = sub_1C106E590();
  v297 = *(_QWORD *)(v299 - 8);
  MEMORY[0x1E0C80A78](v299);
  v292 = (char *)&v247 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v291 = (char *)&v247 - v16;
  MEMORY[0x1E0C80A78](v17);
  v296 = (char *)&v247 - v18;
  MEMORY[0x1E0C80A78](v19);
  v280 = (char *)&v247 - v20;
  v21 = sub_1C07ACF80((uint64_t *)&unk_1ED75EA40);
  MEMORY[0x1E0C80A78](v21);
  v290 = (char *)&v247 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v282 = (uint64_t)&v247 - v24;
  MEMORY[0x1E0C80A78](v25);
  v27 = ((char *)&v247 - v26);
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v247 - v29;
  v31 = sub_1C07ACF80(&qword_1ED75A508);
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&v247 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v34);
  v36 = (char *)&v247 - v35;
  v37 = type metadata accessor for EntityTriple(0);
  MEMORY[0x1E0C80A78](v37);
  v39 = (char *)&v247 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = v318;
  sub_1C0CCBA08();
  if (v40)
    return;
  v274 = v33;
  v318 = v27;
  v276 = v39;
  v277 = v3;
  v275 = v30;
  sub_1C0AA49F4();
  if (sub_1C07B2D80((uint64_t)v36, 1, v37) != 1)
  {
    v45 = v37;
    v46 = (uint64_t)v276;
    sub_1C0C94290((uint64_t)v36, (uint64_t)v276);
    v47 = *(_QWORD *)(v46 + *(int *)(v37 + 40) + 8);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0A57528();
    sub_1C0C8A4E0(v48, &v304);
    v270 = v47;
    v271 = 0;
    swift_bridgeObjectRelease();
    v49 = v304;
    v51 = v305;
    v50 = v306;
    v52 = v308;
    v53 = v309;
    v265 = v307;
    v266 = v310;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v268 = *((_QWORD *)&v49 + 1);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v267 = v50;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v301 = v52;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0C942D4((uint64_t)&v304);
    v269 = v49;
    sub_1C0C910E8(v49);
    v272 = v54;
    v273 = v51;
    v264 = (const char *)v37;
    if (v298)
    {
      v55 = v274;
      sub_1C0AA49F4();
      v56 = sub_1C07B2D80((uint64_t)v55, 1, v45);
      v57 = v299;
      v58 = (uint64_t)v275;
      v60 = v296;
      v59 = v297;
      if (v56 != 1)
      {
        (*(void (**)(char *, const char *, uint64_t))(v297 + 16))(v275, v55, v299);
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        sub_1C07B1F90((uint64_t)v55, type metadata accessor for EntityTriple);
        sub_1C07B2D8C(v58, 0, 1, v57);
        goto LABEL_15;
      }
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C0784B6C((uint64_t)v55, &qword_1ED75A508);
    }
    else
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v57 = v299;
      v58 = (uint64_t)v275;
      v60 = v296;
      v59 = v297;
    }
    sub_1C07B2D8C(v58, 1, 1, v57);
    if (!v298)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v61 = (uint64_t)v290;
      goto LABEL_17;
    }
LABEL_15:
    v274 = v53;
    v62 = v58;
    v63 = v58;
    v64 = (uint64_t)v318;
    sub_1C0845A78(v63, (uint64_t)v318, (uint64_t *)&unk_1ED75EA40);
    if (sub_1C07B2D80(v64, 1, v57) == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C0784B6C(v64, (uint64_t *)&unk_1ED75EA40);
      v61 = (uint64_t)v290;
      v58 = v62;
      goto LABEL_17;
    }
    v73 = *(void (**)(const char *, uint64_t, uint64_t))(v59 + 32);
    v74 = v59;
    v75 = v280;
    v73(v280, v64, v57);
    sub_1C0A57528();
    v76 = v271;
    sub_1C0C8A4E0(v77, &v311);
    if (v76)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      (*(void (**)(const char *, uint64_t))(v74 + 8))(v75, v57);
      swift_bridgeObjectRelease();
      v78 = v62;
LABEL_27:
      sub_1C0784B6C(v78, (uint64_t *)&unk_1ED75EA40);
      sub_1C07B1F90((uint64_t)v276, type metadata accessor for EntityTriple);
      return;
    }
    v271 = 0;
    swift_bridgeObjectRelease();
    v88 = v311;
    v90 = v312;
    v89 = v313;
    v91 = v315;
    v92 = v317;
    v258 = v314;
    v259 = v316;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v260 = *((_QWORD *)&v88 + 1);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v298 = v89;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0C942D4((uint64_t)&v311);
    v263 = (const char *)v88;
    sub_1C0C910E8(v88);
    v94 = v93;
    v318 = v90;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C106E530();
    v96 = v95;
    if (v301)
    {
      v97 = v265 == (const char *)1702195828 && v301 == 0xE400000000000000;
      v98 = v274;
      if (v97)
        v99 = 1;
      else
        v99 = sub_1C1070CB4();
      v115 = v266;
    }
    else
    {
      v99 = 0;
      v115 = v266;
      v98 = v274;
    }
    if (v115)
    {
      if (v98 == (const char *)1702195828 && v115 == (const char *)0xE400000000000000)
        v117 = 1;
      else
        v117 = sub_1C1070CB4();
      swift_bridgeObjectRelease();
    }
    else
    {
      v117 = 0;
    }
    v261 = v94;
    v262 = v96;
    if (v91)
    {
      if (v258 == 1702195828 && v91 == 0xE400000000000000)
        v119 = 1;
      else
        v119 = sub_1C1070CB4();
      swift_bridgeObjectRelease();
    }
    else
    {
      v119 = 0;
    }
    v120 = (uint64_t)v318;
    if (v92)
    {
      if (v259 == 1702195828 && v92 == 0xE400000000000000)
        v122 = 1;
      else
        v122 = sub_1C1070CB4();
      swift_bridgeObjectRelease();
    }
    else
    {
      v122 = 0;
    }
    sub_1C0C9135C(v99 & 1, v117 & 1, v273, v119 & 1, v122 & 1, v120);
    v248 = v123;
    v274 = v124;
    v125 = v269;
    v126 = (uint64_t)v263;
    if (*(_QWORD *)(v269 + 16) && *((_QWORD *)v263 + 2))
    {
      swift_bridgeObjectRetain_n();
      v127 = v267;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      swift_bridgeObjectRelease();
      v128 = v127;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v129 = sub_1C0C94DD4(v126, v125);
      v249 = *(_QWORD *)(v129 + 16) != 0;
      v302[0] = v129;
      v266 = (const char *)sub_1C07ACF80(&qword_1ED762B80);
      sub_1C07BB218(&qword_1ED761480, &qword_1ED762B80);
      sub_1C07B1280();
      v266 = (const char *)sub_1C106FE38();
      v255 = v130;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v131 = v268;
      swift_release();
      v259 = 1;
    }
    else
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v128 = v267;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v131 = v268;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v249 = 0;
      v259 = 0;
      v266 = 0;
      v255 = 1;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v132 = v125;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v133 = v298;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v134 = v260;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v135 = v261;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0C913E0(v273, v128, v132, v131, v136, v137, v138, v139, v133, v246, v134);
    v252 = v140;
    v253 = v141;
    v256 = v142;
    v254 = v143;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v144 = v272;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v145 = v318;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v146 = v144;
    sub_1C0C91698(v144, v135);
    v250 = v148;
    v251 = v147;
    v257 = v149;
    v258 = v150;
    v151 = (uint64_t)v145;
    if (v301)
    {
      v61 = (uint64_t)v290;
      v152 = v266;
      if ((v248 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C0C94D88(v252, v253, v256, v254);
        sub_1C0945F6C(v259, (uint64_t)v152, v255);
        sub_1C07ACF80(&qword_1ED75E840);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1C1079220;
        strcpy((char *)(inited + 32), "isCurrentUser");
        *(_WORD *)(inited + 46) = -4864;
        v154 = v301;
        *(_QWORD *)(inited + 48) = v265;
        *(_QWORD *)(inited + 56) = v154;
        v72 = sub_1C106F97C();
        swift_bridgeObjectRelease();
        v155 = 0;
        v152 = 0;
        v210 = 1.0;
        v69 = v296;
        v156 = v274;
        goto LABEL_100;
      }
      sub_1C0945F6C(0, 0, (uint64_t)v274);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C0945F6C(0, 0, (uint64_t)v274);
      v61 = (uint64_t)v290;
      v152 = v266;
    }
    v157 = v256;
    v57 = v299;
    if (v249)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C0C94D88(v252, v253, v157, v254);
      v210 = 1.0;
      v72 = MEMORY[0x1E0DEE9E0];
      v156 = (const char *)v255;
      v69 = v296;
LABEL_92:
      v155 = v259;
      goto LABEL_100;
    }
    sub_1C0945F6C(v259, (uint64_t)v152, v255);
    v158 = *(_QWORD *)(v273 + 16);
    swift_bridgeObjectRelease();
    if (v158)
    {
      v159 = *(_QWORD *)(v151 + 16);
      swift_bridgeObjectRelease();
      v160 = v254;
      if (v159)
      {
        v161 = v273;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v245 = v160;
        v162 = v160;
        v163 = v256;
        v164 = v253;
        v165 = v252;
        v166 = v271;
        sub_1C0C919CC(v161, v151, (uint64_t)v302, v239, v240, v241, v242, v243, v244, v252, v253, v256, v245, v251, v257, v250, v258);
        if (v166)
        {
          sub_1C0C94D88(v165, v164, v163, v162);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1C0C94D88(v251, v257, v250, v258);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          (*(void (**)(const char *, uint64_t))(v297 + 8))(v280, v57);
          swift_bridgeObjectRelease();
          v78 = (uint64_t)v275;
          goto LABEL_27;
        }
        v271 = 0;
        LODWORD(v301) = LOBYTE(v302[0]);
        v259 = v302[1];
        v266 = (const char *)v302[2];
        v274 = (const char *)v302[3];
        v210 = v303;
        sub_1C0C94D88(v165, v164, v163, v162);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v301 & 1) != 0)
        {
          v72 = MEMORY[0x1E0DEE9E0];
          v69 = v296;
          v156 = v274;
          v152 = v266;
          goto LABEL_92;
        }
        sub_1C0C94D88(v251, v257, v250, v258);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C0945F6C(v259, (uint64_t)v266, (uint64_t)v274);
        v60 = v296;
        v58 = (uint64_t)v275;
        v61 = (uint64_t)v290;
LABEL_116:
        v184 = v280;
        v185 = sub_1C106E4F4();
        (*(void (**)(const char *, uint64_t))(v297 + 8))(v184, v57);
        if ((v185 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1C0784B6C(v58, (uint64_t *)&unk_1ED75EA40);
          sub_1C07B1F90((uint64_t)v276, type metadata accessor for EntityTriple);
          v186 = type metadata accessor for EntityMatch(0);
          v187 = v287;
          v188 = 1;
LABEL_166:
          sub_1C07B2D8C(v187, v188, 1, v186);
          return;
        }
LABEL_17:
        sub_1C106E500();
        sub_1C0784B6C(v58, (uint64_t *)&unk_1ED75EA40);
        sub_1C07B2D8C(v61, 0, 1, v57);
        sub_1C078A6A8(v61, v58, (uint64_t *)&unk_1ED75EA40);
        v65 = (_QWORD *)(v277 + *(int *)(type metadata accessor for PeopleMatcher() + 20));
        if (qword_1ED7623A8 != -1)
          swift_once();
        v66 = sub_1C079E000(v286, (uint64_t)&unk_1ED762388);
        v67 = v281;
        sub_1C0845A4C(v66, (uint64_t)v281, (uint64_t (*)(_QWORD))type metadata accessor for Source);
        if (*v65 == *(_QWORD *)v67 && v65[1] == *((_QWORD *)v67 + 1))
        {
          sub_1C07B1F90((uint64_t)v67, (uint64_t (*)(_QWORD))type metadata accessor for Source);
          v71 = v272;
        }
        else
        {
          v69 = v60;
          v70 = sub_1C1070CB4();
          sub_1C07B1F90((uint64_t)v67, (uint64_t (*)(_QWORD))type metadata accessor for Source);
          v71 = v272;
          if ((v70 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            v72 = MEMORY[0x1E0DEE9E0];
            v210 = 0.8;
LABEL_149:
            if (*(_QWORD *)(v72 + 16))
            {
              _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
              sub_1C077D774(0xD000000000000010, 0x80000001C1106D80);
              v212 = v211;
              swift_bridgeObjectRelease();
              if ((v212 & 1) != 0)
              {
                if (!*(_QWORD *)(v72 + 16))
                  goto LABEL_157;
                _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
                sub_1C077D774(0xD000000000000011, 0x80000001C1106DA0);
                v214 = v213;
                swift_bridgeObjectRelease();
                if ((v214 & 1) == 0)
                  goto LABEL_157;
              }
              if (*(_QWORD *)(v72 + 16))
              {
                _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
                sub_1C077D774(0xD000000000000010, 0x80000001C1106D80);
                v216 = v215;
                swift_bridgeObjectRelease();
                if ((v216 & 1) == 0)
                {
                  if (*(_QWORD *)(v72 + 16))
                  {
                    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
                    sub_1C077D774(0xD000000000000011, 0x80000001C1106DA0);
                    v218 = v217;
                    swift_bridgeObjectRelease();
                    if ((v218 & 1) != 0)
                    {
LABEL_157:
                      if (qword_1ED761458 != -1)
                        swift_once();
                      sub_1C079E000(v300, (uint64_t)qword_1ED78D818);
                      v219 = sub_1C106F538();
                      v220 = sub_1C1070390();
                      if (os_log_type_enabled(v219, v220))
                      {
                        v221 = (uint8_t *)swift_slowAlloc();
                        *(_WORD *)v221 = 0;
                        _os_log_impl(&dword_1C0771000, v219, v220, "Metadata invalid. Visual identifier and association reason were not simultaneously set on metadata.", v221, 2u);
                        MEMORY[0x1C3BA8270](v221, -1, -1);
                      }

                    }
                  }
                }
              }
            }
            v222 = v282;
            sub_1C0845A78((uint64_t)v275, v282, (uint64_t *)&unk_1ED75EA40);
            v223 = v299;
            if (sub_1C07B2D80(v222, 1, v299) != 1)
            {
              v224 = v297;
              v318 = *(NSObject **)(v297 + 32);
              ((void (*)(char *, uint64_t, uint64_t))v318)(v69, v222, v223);
              v225 = type metadata accessor for PeopleMatcher();
              v226 = v69;
              v227 = v277;
              (*(void (**)(char *, uint64_t, uint64_t))(v294 + 16))(v293, v277 + *(int *)(v225 + 24), v295);
              v228 = *(void (**)(char *, char *, uint64_t))(v224 + 16);
              v229 = (uint64_t)v276;
              v228(v291, v276, v223);
              v228(v292, v226, v223);
              v230 = v283;
              sub_1C106ADA4();
              sub_1C106AC60();
              v232 = v231;
              (*(void (**)(char *, uint64_t))(v284 + 8))(v230, v285);
              v233 = *(_BYTE *)(v227 + *(int *)(v225 + 32));
              v234 = *(_QWORD *)(v72 + 16);
              (*(void (**)(char *, uint64_t))(v224 + 8))(v226, v223);
              sub_1C0784B6C((uint64_t)v275, (uint64_t *)&unk_1ED75EA40);
              sub_1C07B1F90(v229, type metadata accessor for EntityTriple);
              if (!v234)
              {
                swift_bridgeObjectRelease();
                v72 = 0;
              }
              v235 = v287;
              (*(void (**)(uint64_t, char *, uint64_t))(v294 + 32))(v287, v293, v295);
              v236 = (int *)type metadata accessor for EntityMatch(0);
              v237 = v299;
              v238 = v318;
              ((void (*)(uint64_t, char *, uint64_t))v318)(v235 + v236[5], v291, v299);
              ((void (*)(uint64_t, char *, uint64_t))v238)(v235 + v236[6], v292, v237);
              *(float *)(v235 + v236[7]) = v210;
              *(_QWORD *)(v235 + v236[8]) = v232;
              *(_BYTE *)(v235 + v236[9]) = v233;
              *(_QWORD *)(v235 + v236[10]) = v72;
              v187 = v235;
              v188 = 0;
              v186 = (uint64_t)v236;
              goto LABEL_166;
            }
            sub_1C0784B6C(v222, (uint64_t *)&unk_1ED75EA40);
            sub_1C1070954();
            __break(1u);
LABEL_171:
            swift_release();
            __break(1u);
            JUMPOUT(0x1C0C8EAE8);
          }
        }
        v79 = *(_QWORD *)(v71 + 16);
        if (v79)
        {
          v80 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          v290 = 0;
          v72 = MEMORY[0x1E0DEE9E0];
          v81 = (unsigned __int8 *)(v80 + 80);
          v286 = 0xD00000000000001BLL;
          v281 = "association:identifierNoMatch";
          v278 = "association:userTaggedPhotos";
          v318 = 0xD000000000000011;
          v280 = "visualIdentifier";
          v279 = (_QWORD *)0x80000001C1106DA0;
          v274 = "num_rejected_suggestions";
          v265 = "association:contactsInferred";
          v266 = "association:messages";
          v263 = "association:contactsConfirmed";
          v264 = "suggestedRelationshipConfidence";
          do
          {
            v82 = *v81;
            if (v82 <= 6 && ((1 << v82) & 0x45) != 0)
            {
              v298 = v79;
              v84 = *((_QWORD *)v81 - 5);
              v290 = (char *)*((_QWORD *)v81 - 6);
              v301 = v84;
              _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
              _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
              _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
              swift_bridgeObjectRelease();
              __asm { BR              X8 }
            }
            v81 += 56;
            --v79;
          }
          while (v79);
          v85 = v272;
          swift_bridgeObjectRelease();
          v87 = v288;
          v86 = v289;
        }
        else
        {
          v72 = MEMORY[0x1E0DEE9E0];
          v85 = v71;
          v87 = v288;
          v86 = v289;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v100 = v300;
        v101 = v85;
        if (qword_1ED761458 != -1)
          swift_once();
        v102 = sub_1C079E000(v100, (uint64_t)qword_1ED78D818);
        (*(void (**)(char *, uint64_t, uint64_t))(v86 + 16))(v87, v102, v100);
        v103 = swift_allocObject();
        *(_QWORD *)(v103 + 16) = v101;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v104 = sub_1C106F538();
        LODWORD(v318) = sub_1C107039C();
        v105 = swift_allocObject();
        *(_BYTE *)(v105 + 16) = 0;
        v106 = swift_allocObject();
        *(_BYTE *)(v106 + 16) = 8;
        v107 = swift_allocObject();
        *(_QWORD *)(v107 + 16) = sub_1C0C94364;
        *(_QWORD *)(v107 + 24) = v103;
        v108 = swift_allocObject();
        *(_QWORD *)(v108 + 16) = sub_1C0C9439C;
        *(_QWORD *)(v108 + 24) = v107;
        sub_1C07ACF80(&qword_1ED762CC8);
        v109 = swift_initStackObject();
        *(_OWORD *)(v109 + 16) = xmmword_1C1078A20;
        *(_QWORD *)(v109 + 32) = sub_1C0788B6C;
        *(_QWORD *)(v109 + 40) = v105;
        *(_QWORD *)(v109 + 48) = sub_1C0959698;
        *(_QWORD *)(v109 + 56) = v106;
        *(_QWORD *)(v109 + 64) = sub_1C09591B0;
        *(_QWORD *)(v109 + 72) = v108;
        swift_setDeallocating();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        sub_1C0BE8D58();
        v110 = v318;
        v318 = v104;
        if (os_log_type_enabled(v104, v110))
        {
          v111 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v111 = 256;
          v111[2] = 0;
          swift_release();
          v111[3] = 8;
          swift_release();
          v112 = *(_QWORD *)(v272 + 16);
          swift_bridgeObjectRelease();
          swift_release();
          v302[0] = v112;
          sub_1C10705AC();
          swift_release();
          swift_release();
          v113 = v318;
          _os_log_impl(&dword_1C0771000, v318, v110, "Vision KVS should have vid-vid association as an entry. Source vision signals count: %ld", v111, 0xCu);
          v114 = v300;
          MEMORY[0x1C3BA8270](v111, -1, -1);

        }
        else
        {

          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          v114 = v300;
        }
        (*(void (**)(char *, uint64_t))(v289 + 8))(v288, v114);
        v210 = 0.8;
        v69 = v296;
        goto LABEL_149;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      v160 = v254;
    }
    v167 = v250;
    v169 = v252;
    v168 = v253;
    v170 = v256;
    LODWORD(v301) = sub_1C0C917FC(v251, v257, v250, v258, v252, v253, v256, v160);
    v259 = v171;
    v266 = v172;
    v274 = v173;
    sub_1C0C94D88(v169, v168, v170, v160);
    if ((v301 & 1) != 0)
    {
      v210 = 1.0;
      v72 = MEMORY[0x1E0DEE9E0];
      v69 = v296;
      v156 = v274;
      v152 = v266;
      v155 = v259;
      v146 = v272;
LABEL_100:
      if (v156 != (const char *)1)
      {
        sub_1C0C8A314();
        sub_1C0945F6C(v155, (uint64_t)v152, (uint64_t)v156);
        swift_isUniquelyReferenced_nonNull_native();
        v302[0] = v72;
        v146 = v272;
        sub_1C08A0E40();
        v72 = v302[0];
        swift_bridgeObjectRelease();
      }
      v174 = v286;
      v175 = (_QWORD *)(v277 + *(int *)(type metadata accessor for PeopleMatcher() + 20));
      if (qword_1ED7623A8 != -1)
        swift_once();
      v301 = sub_1C079E000(v174, (uint64_t)&unk_1ED762388);
      v176 = v279;
      sub_1C0845A4C(v301, (uint64_t)v279, (uint64_t (*)(_QWORD))type metadata accessor for Source);
      if (*v175 == *v176 && v175[1] == v176[1])
      {
        sub_1C07B1F90((uint64_t)v176, (uint64_t (*)(_QWORD))type metadata accessor for Source);
        v179 = v297;
      }
      else
      {
        v178 = sub_1C1070CB4();
        sub_1C07B1F90((uint64_t)v176, (uint64_t (*)(_QWORD))type metadata accessor for Source);
        v179 = v297;
        if ((v178 & 1) == 0)
          goto LABEL_134;
      }
      if (!*(_QWORD *)(v146 + 16))
      {
LABEL_134:
        if (v258 != 2 && (v199 = v251, sub_1C0C94D88(v251, v257, v250, v258), (v199 & 1) != 0))
        {
          v200 = sub_1C0C91D10(v261, v146);
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(v200 + 16))
          {
            sub_1C0BE8D34(0, 1, v200);
            v201 = *(char **)(v200 + 56);
            v202 = *(unsigned __int8 *)(v200 + 80);
            swift_bridgeObjectRetain_n();
            v290 = v201;
            _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
            _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
            swift_bridgeObjectRelease();
            swift_isUniquelyReferenced_nonNull_native();
            v302[0] = v72;
            sub_1C08A0E40();
            swift_bridgeObjectRelease();
            __asm { BR              X9 }
          }
          swift_bridgeObjectRelease();
          (*(void (**)(const char *, uint64_t))(v179 + 8))(v280, v299);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          (*(void (**)(const char *, uint64_t))(v179 + 8))(v280, v299);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
        }
        goto LABEL_149;
      }
      sub_1C0BE8D34(0, 1, v146);
      v180 = *(char **)(v146 + 56);
      v181 = *(unsigned __int8 *)(v146 + 80);
      swift_bridgeObjectRetain_n();
      v290 = v180;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      swift_isUniquelyReferenced_nonNull_native();
      v302[0] = v72;
      sub_1C08A0E40();
      v182 = v302[0];
      swift_bridgeObjectRelease();
      if (v181 > 1)
        __asm { BR              X10 }
      v183 = v273;
      swift_isUniquelyReferenced_nonNull_native();
      v302[0] = v182;
      sub_1C08A0E40();
      v72 = v302[0];
      swift_bridgeObjectRelease();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v189 = *(_QWORD *)(v183 + 16);
      swift_bridgeObjectRelease();
      if (!v189)
      {
        v190 = *(_QWORD *)(_s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0() + 16);
        swift_bridgeObjectRelease();
        v146 = v272;
        if (v190)
          goto LABEL_123;
        type metadata accessor for PhaseStores();
        VisionKeyValueStore.fetchNameEntities(for:)();
        sub_1C08A3500();
        v204 = v203;
        swift_bridgeObjectRelease();
        v302[0] = v204;
        swift_retain();
        v205 = v271;
        sub_1C0C89A74(v302);
        v271 = v205;
        if (v205)
          goto LABEL_171;
        swift_release();
        v206 = *(_QWORD *)(v302[0] + 16);
        if (!v206)
        {
          swift_release();
          goto LABEL_123;
        }
        v207 = v302[0] + 72;
        while (1)
        {
          v208 = *(_QWORD *)(v207 - 16);
          v209 = HIBYTE(v208) & 0xF;
          if ((v208 & 0x2000000000000000) == 0)
            v209 = *(_QWORD *)(v207 - 24) & 0xFFFFFFFFFFFFLL;
          if (v209)
            break;
          v207 += 56;
          if (!--v206)
          {
            swift_release();
            goto LABEL_121;
          }
        }
        v289 = *(_QWORD *)(v207 - 32);
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        swift_bridgeObjectRetain_n();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        swift_release();
        swift_isUniquelyReferenced_nonNull_native();
        v302[0] = v72;
        sub_1C08A0E40();
        v72 = v302[0];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
LABEL_121:
      v146 = v272;
LABEL_123:
      type metadata accessor for PhaseStores();
      VisionKeyValueStore.fetchRelationshipEntities(for:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C08A3500();
      v192 = v191;
      swift_bridgeObjectRelease();
      v302[0] = v192;
      swift_retain();
      v193 = v271;
      sub_1C0C89A74(v302);
      v271 = v193;
      if (v193)
        goto LABEL_171;
      swift_release();
      v194 = *(_QWORD *)(v302[0] + 16);
      v69 = v296;
      v179 = v297;
      if (v194)
      {
        v195 = v302[0] + 56;
        while (1)
        {
          v196 = *(_QWORD *)(v195 + 16);
          v197 = HIBYTE(v196) & 0xF;
          if ((v196 & 0x2000000000000000) == 0)
            v197 = *(_QWORD *)(v195 + 8) & 0xFFFFFFFFFFFFLL;
          if (v197)
            break;
          v195 += 56;
          if (!--v194)
          {
            swift_release();
            goto LABEL_133;
          }
        }
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        swift_bridgeObjectRetain_n();
        swift_release();
        swift_isUniquelyReferenced_nonNull_native();
        v302[0] = v72;
        sub_1C08A0E40();
        v198 = v302[0];
        swift_bridgeObjectRelease();
        sub_1C10701EC();
        swift_bridgeObjectRelease();
        v179 = v297;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_isUniquelyReferenced_nonNull_native();
        v302[0] = v198;
        sub_1C08A0E40();
        v72 = v302[0];
        swift_bridgeObjectRelease();
LABEL_133:
        v146 = v272;
      }
      else
      {
        swift_release();
      }
      goto LABEL_134;
    }
    sub_1C0C94D88(v251, v257, v167, v258);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C0945F6C(v259, (uint64_t)v266, (uint64_t)v274);
    v60 = v296;
    v58 = (uint64_t)v275;
    goto LABEL_116;
  }
  sub_1C0784B6C((uint64_t)v36, &qword_1ED75A508);
  if (qword_1ED761458 != -1)
    swift_once();
  sub_1C079E000(v300, (uint64_t)qword_1ED78D818);
  v41 = sub_1C106F538();
  v42 = sub_1C1070390();
  if (os_log_type_enabled(v41, v42))
  {
    v43 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v43 = 0;
    _os_log_impl(&dword_1C0771000, v41, v42, "People Matcher: skipping entityTriples are empty", v43, 2u);
    MEMORY[0x1C3BA8270](v43, -1, -1);
  }

  sub_1C08C1878();
  swift_allocError();
  *v44 = 0;
  swift_willThrow();
}

void sub_1C0C8EB50(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X3>, void (*a4)(void)@<X4>, const char *a5@<X5>, const char *a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, const char *a12, unint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, NSObject *a17)
{
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  const char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  NSObject *v64;
  uint64_t v65;
  void *v66;
  os_log_type_t v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  const char *v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  BOOL v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(uint64_t);
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unsigned __int8 *v117;
  uint64_t v118;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  NSObject *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  os_log_type_t v129;
  uint8_t *v130;
  uint64_t v131;
  __int128 v132;
  NSObject *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  const char *v138;
  const char *v139;
  uint64_t v140;
  void (*v141)(void);
  void (*v142)(void);
  BOOL v143;
  uint64_t v144;
  char v146;
  char v148;
  char v150;
  uint64_t v151;
  int v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  const char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t inited;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v196;
  char v197;
  uint64_t v198;
  unsigned int v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  const char *v221;
  char v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  unint64_t v237;
  uint64_t v238;
  float v239;
  char v240;
  char v241;
  char v242;
  char v243;
  char v244;
  char v245;
  char v246;
  char v247;
  void *v248;
  os_log_type_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  void (*v258)(uint64_t, uint64_t, uint64_t);
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  char v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  int *v267;
  uint64_t v268;
  NSObject *v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  int v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  const char *v300;
  char *v301;
  char *v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  const char *v306;
  const char *v307;
  uint64_t v308;
  uint64_t v309;
  const char *v310;
  const char *v311;
  uint64_t v312;
  uint64_t v313;
  unint64_t v314;
  void (*v315)(void);
  const char *v316;
  unint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  _QWORD v334[4];
  float v335;
  __int128 v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  __int128 v343;
  uint64_t v344;
  NSObject *v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  NSObject *v350;

  v308 = a7;
  v310 = a6;
  v315 = a4;
  v316 = a5;
  v328 = a2;
  v332 = a1;
  v322 = a8;
  v331 = sub_1C106F544();
  v313 = *(_QWORD *)(v331 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v19);
  sub_1C077AE40();
  v312 = v20;
  sub_1C077CF58();
  v21 = sub_1C106ADE0();
  v319 = *(_QWORD *)(v21 - 8);
  v320 = v21;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v22);
  sub_1C077AE40();
  v318 = v23;
  sub_1C077CF58();
  v329 = sub_1C106D1F8();
  v326 = *(_QWORD *)(v329 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v24);
  sub_1C077AE40();
  v325 = v25;
  sub_1C077CF58();
  v321 = type metadata accessor for Source();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v26);
  sub_1C077AED0();
  v317 = v27;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v28);
  sub_1C0779728();
  v306 = v29;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v30);
  v307 = (char *)&v280 - v31;
  sub_1C077CF58();
  v330 = sub_1C106E590();
  v327 = *(_QWORD *)(v330 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v32);
  sub_1C077AED0();
  v324 = v33;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v34);
  sub_1C0779728();
  v323 = v35;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v36);
  sub_1C0779728();
  v333 = v37;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v38);
  v311 = (char *)&v280 - v39;
  v309 = (uint64_t)a3;
  sub_1C07ACF80(a3);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v40);
  sub_1C077AE40();
  v314 = v41;
  sub_1C07ACF80((uint64_t *)&unk_1ED75EA40);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v42);
  sub_1C077AF80();
  v45 = (const char *)(v43 - v44);
  MEMORY[0x1E0C80A78](v46);
  v48 = (char *)&v280 - v47;
  MEMORY[0x1E0C80A78](v49);
  v51 = ((char *)&v280 - v50);
  MEMORY[0x1E0C80A78](v52);
  v54 = (char *)&v280 - v53;
  sub_1C07ACF80(&qword_1ED75A508);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v55);
  sub_1C0778564();
  v58 = v57 - v56;
  v59 = type metadata accessor for EntityTriple(0);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v60);
  sub_1C0778564();
  v63 = v62 - v61;
  v64 = v350;
  sub_1C0CCBA08();
  if (v64)
    return;
  v350 = v51;
  v300 = v45;
  v301 = v48;
  v304 = v63;
  v305 = 0;
  v302 = v54;
  v303 = v17;
  sub_1C0AA49F4();
  if (sub_1C07B2D80(v58, 1, v59) != 1)
  {
    v71 = v59;
    v72 = v304;
    sub_1C0C94290(v58, v304);
    v73 = *(_QWORD *)(v72 + *(int *)(v59 + 40) + 8);
    sub_1C077584C();
    sub_1C0A57528();
    sub_1C0C95470(v74, &v336);
    v305 = 0;
    v290 = v71;
    v296 = v73;
    sub_1C077B5B4();
    v75 = v336;
    v77 = v337;
    v76 = v338;
    v78 = v340;
    v291 = v339;
    v292 = v341;
    v293 = v342;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C077AE90();
    v295 = *((_QWORD *)&v75 + 1);
    sub_1C077AEBC();
    v297 = v76;
    sub_1C07796D8();
    sub_1C077584C();
    sub_1C077C0B8();
    sub_1C0C942D4((uint64_t)&v336);
    v294 = v75;
    sub_1C0C910E8(v75);
    v80 = v79;
    v299 = v77;
    v332 = v78;
    if (v328)
    {
      v81 = v79;
      v82 = v314;
      v315();
      v83 = v316;
      v84 = ((uint64_t (*)(_QWORD))v316)(0);
      v85 = sub_1C07B2D80(v82, 1, v84);
      v86 = (uint64_t)v302;
      v87 = v333;
      if (v85 != 1)
      {
        v92 = v82;
        v93 = (char *)v83;
        v94 = v82;
        v88 = v330;
        sub_1C078A3A0((uint64_t)v302, v92, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v327 + 16));
        sub_1C077584C();
        sub_1C07767C4();
        v95 = v94;
        v80 = v81;
        sub_1C07B1F90(v95, (uint64_t (*)(_QWORD))v93);
        sub_1C078AF64(v86, 0);
        v90 = v87;
        v91 = (uint64_t)v350;
        v89 = v329;
        goto LABEL_15;
      }
      sub_1C077584C();
      v80 = v81;
      sub_1C07767C4();
      sub_1C0784B6C(v82, (uint64_t *)v309);
      v89 = v329;
      v88 = v330;
      v90 = v87;
    }
    else
    {
      sub_1C077584C();
      sub_1C077E6D0();
      v89 = v329;
      v88 = v330;
      v86 = (uint64_t)v302;
      v90 = v333;
    }
    sub_1C078AF64(v86, 1);
    v91 = (uint64_t)v350;
    if (!v328)
    {
      sub_1C0C95468();
      sub_1C079C7BC();
      sub_1C0778580();
      goto LABEL_17;
    }
LABEL_15:
    sub_1C0845A78(v86, v91, (uint64_t *)&unk_1ED75EA40);
    if (sub_1C07B2D80(v91, 1, v88) == 1)
    {
      sub_1C0C95468();
      sub_1C079C7BC();
      sub_1C0778580();
      sub_1C0784B6C(v91, (uint64_t *)&unk_1ED75EA40);
      goto LABEL_17;
    }
    sub_1C078A3A0((uint64_t)v311, v91, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v327 + 32));
    v111 = ((uint64_t (*)(uint64_t))v310)(v328);
    sub_1C0C95470(v111, &v343);
    if (v76)
    {
      swift_bridgeObjectRelease();
      sub_1C0C95468();
      sub_1C0790A08();
      sub_1C07758A4();
      sub_1C079F02C();
      sub_1C07AD328();
      sub_1C079C7B4();
      sub_1C07758A4();
      sub_1C0778580();
      v112 = sub_1C0789B08();
      v113(v112);
      v114 = swift_bridgeObjectRelease();
      sub_1C07BABEC(v114, (uint64_t *)&unk_1ED75EA40);
      sub_1C078B858(v115, type metadata accessor for EntityTriple);
      return;
    }
    v298 = v80;
    v305 = 0;
    sub_1C0778580();
    v132 = v343;
    v134 = v344;
    v133 = v345;
    v136 = v346;
    v135 = v347;
    v137 = v349;
    v289 = v348;
    sub_1C077584C();
    sub_1C077E6D0();
    v314 = *((_QWORD *)&v132 + 1);
    sub_1C077AEBC();
    v350 = v133;
    sub_1C07796D8();
    sub_1C07796E0();
    sub_1C0778624();
    sub_1C0C942D4((uint64_t)&v343);
    v316 = (const char *)v132;
    sub_1C0C910E8(v132);
    v139 = v138;
    v328 = v134;
    v140 = v332;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v310 = v139;
    sub_1C07796D8();
    sub_1C106E530();
    v142 = v141;
    if (v140)
    {
      v143 = v291 == 1702195828 && v140 == 0xE400000000000000;
      v144 = v293;
      if (v143)
        LODWORD(v309) = 1;
      else
        LODWORD(v309) = sub_1C07B4350();
    }
    else
    {
      LODWORD(v309) = 0;
      v144 = v293;
    }
    if (v144)
    {
      if (v292 == 1702195828 && v144 == 0xE400000000000000)
        v146 = 1;
      else
        v146 = sub_1C07B4350();
      sub_1C07785A0();
    }
    else
    {
      v146 = 0;
    }
    v315 = v142;
    if (v135)
    {
      if (v136 == 1702195828 && v135 == 0xE400000000000000)
        v148 = 1;
      else
        v148 = sub_1C07B4350();
      sub_1C0775834();
    }
    else
    {
      v148 = 0;
    }
    if (v137)
    {
      if (v289 == 1702195828 && v137 == 0xE400000000000000)
        v150 = 1;
      else
        v150 = sub_1C07B4350();
      v151 = v328;
      sub_1C0778580();
    }
    else
    {
      v150 = 0;
      v151 = v328;
    }
    sub_1C0C9135C(v309 & 1, v146 & 1, v299, v148 & 1, v150 & 1, v151);
    LODWORD(v281) = v152;
    v293 = v153;
    v154 = v294;
    if (*(_QWORD *)(v294 + 16) && *((_QWORD *)v316 + 2))
    {
      sub_1C07767CC();
      sub_1C07767CC();
      sub_1C07767CC();
      sub_1C07767CC();
      sub_1C0778624();
      sub_1C0C954F4();
      sub_1C07796E0();
      sub_1C07BA838();
      v155 = (uint64_t)v316;
      sub_1C07767C4();
      sub_1C07796E0();
      sub_1C077C0B8();
      sub_1C0778624();
      sub_1C0778580();
      sub_1C07785A0();
      sub_1C077960C();
      v156 = sub_1C0C94DD4(v155, v154);
      LODWORD(v282) = *(_QWORD *)(v156 + 16) != 0;
      v334[0] = v156;
      sub_1C07ACF80(&qword_1ED762B80);
      sub_1C07BB218(&qword_1ED761480, &qword_1ED762B80);
      sub_1C07B1280();
      v157 = sub_1C106FE38();
      v158 = v294;
      v292 = v157;
      v285 = v159;
      sub_1C077E584();
      sub_1C077B5B4();
      swift_bridgeObjectRelease();
      swift_release();
      v309 = 1;
    }
    else
    {
      sub_1C077584C();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C077AEBC();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C0778624();
      sub_1C0C954F4();
      sub_1C07796E0();
      sub_1C07BA838();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      LODWORD(v282) = 0;
      v158 = v154;
      v309 = 0;
      v292 = 0;
      v285 = 1;
    }
    sub_1C077B5B4();
    v160 = v297;
    sub_1C077E584();
    sub_1C077960C();
    v161 = v295;
    sub_1C0775834();
    sub_1C07785A0();
    sub_1C0778580();
    sub_1C077589C();
    sub_1C077978C();
    sub_1C0775894();
    sub_1C077AEBC();
    sub_1C07796E0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0778624();
    sub_1C077E6D0();
    sub_1C077584C();
    sub_1C077C0B8();
    v162 = (uint64_t)v350;
    sub_1C07796D8();
    sub_1C07767C4();
    v163 = v314;
    sub_1C077584C();
    v164 = v310;
    sub_1C077E6D0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0C913E0(v299, v160, v158, v161, v165, v166, v167, v168, v162, v277, v163);
    v286 = v169;
    v170 = v298;
    v284 = v171;
    v288 = v172;
    v289 = v173;
    sub_1C077589C();
    sub_1C077E584();
    sub_1C077B5B4();
    sub_1C0778580();
    sub_1C0775834();
    sub_1C077960C();
    sub_1C078E1BC();
    sub_1C077978C();
    sub_1C0775894();
    sub_1C07AD7B4();
    sub_1C07785A0();
    sub_1C07AA184();
    sub_1C0C91698(v170, (uint64_t)v164);
    v176 = v174;
    v177 = v175;
    v287 = v178;
    v283 = v179;
    if (v332)
    {
      v180 = v293;
      if ((v281 & 1) != 0)
      {
        v281 = v175;
        v282 = v174;
        sub_1C078E1BC();
        sub_1C07B62F8();
        sub_1C0C94D88(v286, v284, v288, v289);
        sub_1C0945F6C(v309, v292, v285);
        sub_1C07ACF80(&qword_1ED75E840);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1C1079220;
        strcpy((char *)(inited + 32), "isCurrentUser");
        *(_WORD *)(inited + 46) = -4864;
        v182 = v332;
        *(_QWORD *)(inited + 48) = v291;
        *(_QWORD *)(inited + 56) = v182;
        v110 = sub_1C106F97C();
        swift_bridgeObjectRelease();
        v309 = 0;
        v183 = 0;
        v239 = 1.0;
LABEL_89:
        v107 = v329;
        v90 = v333;
        v80 = v298;
        goto LABEL_90;
      }
      sub_1C0945F6C(0, 0, v293);
      sub_1C079C7BC();
    }
    else
    {
      sub_1C0945F6C(0, 0, v293);
    }
    v184 = v328;
    v183 = v292;
    v186 = v288;
    v185 = v289;
    if ((_DWORD)v282)
    {
      v281 = v177;
      v282 = v176;
      sub_1C0775834();
      sub_1C07B62F8();
      sub_1C0C94D88(v286, v284, v186, v185);
      v239 = 1.0;
      v110 = MEMORY[0x1E0DEE9E0];
      v180 = v285;
      goto LABEL_89;
    }
    sub_1C0945F6C(v309, v292, v285);
    sub_1C0789BFC();
    if (v185)
    {
      v200 = *(_QWORD *)(v184 + 16);
      sub_1C0775834();
      v90 = v333;
      v201 = v286;
      if (v200)
      {
        v202 = v184;
        v203 = v299;
        sub_1C077AE90();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        sub_1C077584C();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        sub_1C0C954F4();
        sub_1C0778624();
        sub_1C07BA838();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v281 = v177;
        v204 = v283;
        v282 = v176;
        v276 = v176;
        v205 = v289;
        v206 = v288;
        v207 = v284;
        v208 = v202;
        v162 = v305;
        sub_1C0C919CC(v203, v208, (uint64_t)v334, v270, v271, v272, v273, v274, v275, v201, v284, v288, v289, v276, v283, v177, v287);
        v305 = v162;
        if (v162)
        {
          sub_1C0C94D88(v201, v207, v206, v205);
          sub_1C07785A0();
          sub_1C079C7B4();
          sub_1C07785A0();
          sub_1C0775834();
          sub_1C077960C();
          sub_1C0778580();
          sub_1C078E1BC();
          sub_1C077978C();
          sub_1C077B360();
          sub_1C077589C();
          sub_1C077E584();
          sub_1C0775894();
          sub_1C0C94D88(v282, v204, v281, v287);
          sub_1C0778580();
          sub_1C07758A4();
          sub_1C0775834();
          sub_1C07785A0();
          sub_1C079C7B4();
          sub_1C07B62F8();
          sub_1C0775894();
          sub_1C07758A4();
          sub_1C077589C();
          sub_1C077B360();
          sub_1C077978C();
          sub_1C078E1BC();
          sub_1C07A4A84();
          v209 = swift_bridgeObjectRelease();
          sub_1C07BABEC(v209, (uint64_t *)&unk_1ED75EA40);
          sub_1C078B858(v210, type metadata accessor for EntityTriple);
          return;
        }
        LODWORD(v332) = LOBYTE(v334[0]);
        v228 = (uint64_t *)v334[1];
        v292 = v334[2];
        v293 = v334[3];
        v239 = v335;
        sub_1C0C94D88(v201, v207, v206, v205);
        sub_1C07785A0();
        sub_1C079C7B4();
        sub_1C07AD328();
        sub_1C079F02C();
        v80 = v298;
        sub_1C07785A0();
        sub_1C0790A08();
        sub_1C0775834();
        sub_1C077960C();
        sub_1C077E584();
        sub_1C0778580();
        sub_1C077589C();
        sub_1C07AA184();
        if ((v332 & 1) != 0)
        {
          v309 = (uint64_t)v228;
          v110 = MEMORY[0x1E0DEE9E0];
          v107 = v329;
          goto LABEL_112;
        }
        sub_1C0C94D88(v282, v283, v281, v287);
        sub_1C07AA184();
        sub_1C07758A4();
        sub_1C0778580();
        sub_1C077E584();
        sub_1C077960C();
        sub_1C0775834();
        sub_1C0945F6C((uint64_t)v228, v292, v293);
        v220 = v327;
        v86 = (uint64_t)v302;
        v89 = v329;
        goto LABEL_114;
      }
    }
    else
    {
      sub_1C0775834();
      v90 = v333;
      v201 = v286;
    }
    v212 = v287;
    v213 = v288;
    v214 = v201;
    v215 = v284;
    v216 = v289;
    LODWORD(v332) = sub_1C0C917FC(v176, v283, v177, v287, v214, v284, v288, v289);
    v309 = (uint64_t)v217;
    v292 = v218;
    v293 = v219;
    sub_1C0C94D88(v286, v215, v213, v216);
    if ((v332 & 1) != 0)
    {
      v281 = v177;
      v282 = v176;
      v239 = 1.0;
      v110 = MEMORY[0x1E0DEE9E0];
      v107 = v329;
      v80 = v298;
LABEL_112:
      v183 = v292;
      v180 = v293;
LABEL_90:
      if (v180 != 1)
      {
        v187 = v107;
        v188 = v309;
        v332 = sub_1C0C8A314();
        v189 = v188;
        v107 = v187;
        sub_1C0945F6C(v189, v183, v180);
        sub_1C07A3A40();
        sub_1C07AFB08();
        sub_1C08A0E40();
        v110 = v334[0];
        sub_1C077970C();
      }
      v190 = v321;
      sub_1C077D2AC();
      if (qword_1ED7623A8 != -1)
        swift_once();
      v332 = sub_1C079E000(v190, (uint64_t)&unk_1ED762388);
      v101 = (unint64_t)v307;
      sub_1C0786E1C(v332, v191, (uint64_t (*)(_QWORD))type metadata accessor for Source);
      v192 = sub_1C0779E50();
      if (v106 && v193 == v194)
      {
        sub_1C07A86C4(v192, (uint64_t (*)(_QWORD))type metadata accessor for Source);
      }
      else
      {
        v196 = sub_1C07785B0();
        v197 = v196;
        sub_1C07A86C4(v196, (uint64_t (*)(_QWORD))type metadata accessor for Source);
        if ((v197 & 1) == 0)
        {
LABEL_132:
          if (v287 != 2 && (v101 = v282, sub_1C0C94D88(v282, v283, v281, v287), (v101 & 1) != 0))
          {
            v101 = (unint64_t)v310;
            v232 = sub_1C0C91D10((uint64_t)v310, v80);
            sub_1C077B5B4();
            if (*(_QWORD *)(v232 + 16))
            {
              sub_1C0C954D4();
              sub_1C0BE8D34(0, 1, v232);
              v233 = *(_QWORD *)(v232 + 56);
              v234 = *(unsigned __int8 *)(v232 + 80);
              sub_1C07767CC();
              v321 = v233;
              sub_1C077E6D0();
              sub_1C077C0B8();
              sub_1C077960C();
              sub_1C07A3A40();
              v334[0] = v110;
              sub_1C078A07C();
              sub_1C08A0E40();
              sub_1C077970C();
              __asm { BR              X9 }
            }
            sub_1C077960C();
            sub_1C07A4A84();
            sub_1C0790A08();
            sub_1C079F02C();
            sub_1C07AD328();
            sub_1C079C7B4();
            sub_1C0778580();
            sub_1C07758A4();
            sub_1C07AA184();
            sub_1C077B5B4();
            sub_1C07AD7B4();
            sub_1C077B360();
            sub_1C077978C();
            sub_1C078E1BC();
          }
          else
          {
            sub_1C07A4A84();
            sub_1C0790A08();
            sub_1C079F02C();
            sub_1C077960C();
            sub_1C079C7B4();
            sub_1C0778580();
            sub_1C07758A4();
            sub_1C07AA184();
            sub_1C07AD7B4();
            sub_1C077B360();
            sub_1C077978C();
            sub_1C078E1BC();
            sub_1C07758A4();
          }
          goto LABEL_147;
        }
      }
      if (*(_QWORD *)(v80 + 16))
      {
        sub_1C0BE8D34(0, 1, v80);
        v101 = *(_QWORD *)(v80 + 40);
        v198 = *(_QWORD *)(v80 + 56);
        v199 = *(unsigned __int8 *)(v80 + 80);
        sub_1C07767CC();
        v321 = v198;
        sub_1C077AE90();
        sub_1C07767C4();
        sub_1C07A3A40();
        v334[0] = v110;
        sub_1C078A07C();
        sub_1C08A0E40();
        sub_1C077970C();
        if (v199 > 1)
          __asm { BR              X10 }
        v211 = v299;
        sub_1C077C09C();
        sub_1C0C9549C();
        sub_1C078BBA4();
        sub_1C08A0E40();
        v110 = v334[0];
        sub_1C077970C();
        sub_1C077584C();
        v229 = *(_QWORD *)(v211 + 16);
        swift_bridgeObjectRelease();
        if (!v229)
        {
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          sub_1C0789BFC();
          sub_1C078A314();
          sub_1C0782494();
          VisionKeyValueStore.fetchNameEntities(for:)();
          sub_1C08A3500();
          sub_1C0778580();
          sub_1C0795C14();
          sub_1C07AF020();
          v305 = v162;
          if (v162)
            goto LABEL_168;
          sub_1C07785A8();
          v235 = *(_QWORD *)(v334[0] + 16);
          if (v235)
          {
            v236 = v334[0] + 72;
            while (1)
            {
              v237 = *(_QWORD *)(v236 - 16);
              v238 = HIBYTE(v237) & 0xF;
              if ((v237 & 0x2000000000000000) == 0)
                v238 = *(_QWORD *)(v236 - 24) & 0xFFFFFFFFFFFFLL;
              if (v238)
                break;
              v236 += 56;
              if (!--v235)
                goto LABEL_145;
            }
            v317 = *(_QWORD *)(v236 - 32);
            _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
            sub_1C07767CC();
            sub_1C077C0B8();
            sub_1C07785A8();
            sub_1C07A3A40();
            sub_1C07AFB08();
            sub_1C0797690();
            v110 = v334[0];
            sub_1C077589C();
            sub_1C077E584();
            swift_bridgeObjectRelease();
            sub_1C077970C();
          }
          else
          {
LABEL_145:
            sub_1C07785A8();
          }
        }
        v107 = v329;
        sub_1C078A314();
        sub_1C0782494();
        VisionKeyValueStore.fetchRelationshipEntities(for:)();
        sub_1C0775894();
        sub_1C0C954FC();
        sub_1C077B5B4();
        sub_1C08A3500();
        sub_1C0778580();
        sub_1C0795C14();
        sub_1C07AF020();
        v305 = v162;
        if (v162)
          goto LABEL_168;
        sub_1C07785A8();
        v80 = v298;
        if (*(_QWORD *)(v334[0] + 16))
        {
          v230 = v334[0] + 56;
          while (1)
          {
            v101 = *(_QWORD *)(v230 + 16);
            v231 = HIBYTE(v101) & 0xF;
            if ((v101 & 0x2000000000000000) == 0)
              v231 = *(_QWORD *)(v230 + 8) & 0xFFFFFFFFFFFFLL;
            if (v231)
              break;
            sub_1C0C9547C();
            if (v106)
              goto LABEL_129;
          }
          sub_1C077C0B8();
          sub_1C077584C();
          sub_1C07767CC();
          sub_1C07785A8();
          sub_1C07A3A40();
          sub_1C0C95408();
          sub_1C078A07C();
          sub_1C08A0E40();
          sub_1C077970C();
          sub_1C07BC300();
          sub_1C077B5B4();
          swift_bridgeObjectRelease();
          sub_1C077589C();
          sub_1C077C09C();
          sub_1C0C953F0();
          sub_1C078BBA4();
          sub_1C08A0E40();
          v110 = v334[0];
          sub_1C077970C();
        }
        else
        {
LABEL_129:
          sub_1C07785A8();
        }
        v90 = v333;
      }
      goto LABEL_132;
    }
    sub_1C0C94D88(v176, v283, v177, v212);
    sub_1C07AA184();
    sub_1C07758A4();
    sub_1C07AD7B4();
    sub_1C077B360();
    sub_1C077978C();
    sub_1C0775834();
    sub_1C0945F6C(v309, v292, v293);
    v220 = v327;
    v86 = (uint64_t)v302;
    v89 = v329;
    v80 = v298;
LABEL_114:
    v221 = v311;
    v222 = sub_1C106E4F4();
    (*(void (**)(const char *, uint64_t))(v220 + 8))(v221, v330);
    v223 = v322;
    if ((v222 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      sub_1C0790A08();
      sub_1C07758A4();
      sub_1C079F02C();
      sub_1C07AD328();
      sub_1C079C7B4();
      sub_1C07B62F8();
      sub_1C0784B6C(v86, (uint64_t *)&unk_1ED75EA40);
      sub_1C078B858(v224, type metadata accessor for EntityTriple);
      v225 = type metadata accessor for EntityMatch(0);
      v226 = v223;
      v227 = 1;
LABEL_164:
      sub_1C07B2D8C(v226, v227, 1, v225);
      return;
    }
LABEL_17:
    v96 = (uint64_t)v300;
    sub_1C106E500();
    sub_1C0784B6C(v86, (uint64_t *)&unk_1ED75EA40);
    sub_1C077B118();
    sub_1C07B2D8C(v97, v98, v99, v330);
    sub_1C078A6A8(v96, v86, (uint64_t *)&unk_1ED75EA40);
    sub_1C077D2AC();
    if (qword_1ED7623A8 != -1)
      swift_once();
    v100 = sub_1C079E000(v321, (uint64_t)&unk_1ED762388);
    v101 = v317;
    sub_1C0786E1C(v100, v102, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    v103 = sub_1C0779E50();
    v106 = v106 && v104 == v105;
    if (v106)
    {
      sub_1C07A86C4(v103, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    }
    else
    {
      v107 = v89;
      v108 = sub_1C07785B0();
      v109 = v108;
      sub_1C07A86C4(v108, (uint64_t (*)(_QWORD))type metadata accessor for Source);
      if ((v109 & 1) == 0)
      {
        sub_1C0790A08();
        sub_1C079F02C();
        sub_1C07AD328();
        sub_1C079C7B4();
        sub_1C0778580();
        sub_1C07758A4();
        v110 = MEMORY[0x1E0DEE9E0];
        v239 = 0.8;
LABEL_147:
        if (*(_QWORD *)(v110 + 16))
        {
          sub_1C0C954D4();
          sub_1C0778624();
          sub_1C07A96A4(v101 - 13, 0x80000001C1106D80);
          v241 = v240;
          sub_1C0775834();
          if ((v241 & 1) != 0)
          {
            if (!*(_QWORD *)(v110 + 16))
              goto LABEL_155;
            sub_1C0778624();
            sub_1C07A96A4(v101 - 12, 0x80000001C1106DA0);
            v243 = v242;
            sub_1C0775834();
            if ((v243 & 1) == 0)
              goto LABEL_155;
          }
          if (*(_QWORD *)(v110 + 16))
          {
            sub_1C0778624();
            sub_1C07A96A4(v101 - 13, 0x80000001C1106D80);
            v245 = v244;
            sub_1C0775834();
            if ((v245 & 1) == 0)
            {
              if (*(_QWORD *)(v110 + 16))
              {
                sub_1C0778624();
                sub_1C07A96A4(v101 - 12, 0x80000001C1106DA0);
                v247 = v246;
                sub_1C0775834();
                if ((v247 & 1) != 0)
                {
LABEL_155:
                  if (qword_1ED761458 != -1)
                    swift_once();
                  sub_1C079E000(v331, (uint64_t)qword_1ED78D818);
                  v248 = (void *)sub_1C106F538();
                  v249 = sub_1C1070390();
                  if (sub_1C07892C0(v249))
                  {
                    *(_WORD *)sub_1C0780FC8() = 0;
                    sub_1C0794CE8(&dword_1C0771000, v250, v251, "Metadata invalid. Visual identifier and association reason were not simultaneously set on metadata.");
                    sub_1C0776778();
                  }

                }
              }
            }
          }
        }
        v252 = (uint64_t)v301;
        sub_1C0845A78((uint64_t)v302, (uint64_t)v301, (uint64_t *)&unk_1ED75EA40);
        v253 = v330;
        if (sub_1C07B2D80(v252, 1, v330) != 1)
        {
          v254 = v327;
          v350 = *(NSObject **)(v327 + 32);
          ((void (*)(uint64_t, uint64_t, uint64_t))v350)(v90, v252, v253);
          v255 = sub_1C077D2AC();
          v256 = v90;
          v257 = v303;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v326 + 16))(v325, v303 + *(int *)(v255 + 24), v107);
          v258 = *(void (**)(uint64_t, uint64_t, uint64_t))(v254 + 16);
          v259 = v304;
          v258(v323, v304, v253);
          v258(v324, v256, v253);
          v260 = v318;
          sub_1C106ADA4();
          sub_1C106AC60();
          v262 = v261;
          (*(void (**)(uint64_t, uint64_t))(v319 + 8))(v260, v320);
          v263 = *(_BYTE *)(v257 + *(int *)(v255 + 32));
          v264 = *(_QWORD *)(v110 + 16);
          v265 = (*(uint64_t (**)(uint64_t, uint64_t))(v254 + 8))(v256, v253);
          sub_1C07BABEC(v265, (uint64_t *)&unk_1ED75EA40);
          sub_1C07B1F90(v259, type metadata accessor for EntityTriple);
          if (!v264)
          {
            sub_1C0775834();
            v110 = 0;
          }
          v266 = v322;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v326 + 32))(v322, v325, v329);
          v267 = (int *)type metadata accessor for EntityMatch(0);
          v268 = v330;
          v269 = v350;
          ((void (*)(uint64_t, uint64_t, uint64_t))v350)(v266 + v267[5], v323, v330);
          ((void (*)(uint64_t, uint64_t, uint64_t))v269)(v266 + v267[6], v324, v268);
          *(float *)(v266 + v267[7]) = v239;
          *(_QWORD *)(v266 + v267[8]) = v262;
          *(_BYTE *)(v266 + v267[9]) = v263;
          *(_QWORD *)(v266 + v267[10]) = v110;
          v226 = v266;
          v227 = 0;
          v225 = (uint64_t)v267;
          goto LABEL_164;
        }
        sub_1C0784B6C(v252, (uint64_t *)&unk_1ED75EA40);
        sub_1C0C95440();
        v279 = 0;
        v278 = 416;
        sub_1C07BA6EC();
        sub_1C1070954();
        __break(1u);
LABEL_168:
        swift_release();
        __break(1u);
        JUMPOUT(0x1C0C91080);
      }
    }
    v116 = *(_QWORD *)(v80 + 16);
    v298 = v80;
    if (v116)
    {
      sub_1C077E6D0();
      v321 = 0;
      v110 = MEMORY[0x1E0DEE9E0];
      v117 = (unsigned __int8 *)(v80 + 80);
      v316 = "association:identifierNoMatch";
      v317 = 0xD00000000000001BLL;
      v311 = "association:userTaggedPhotos";
      v350 = 0xD000000000000011;
      v315 = (void (*)(void))"visualIdentifier";
      v314 = 0x80000001C1106DA0;
      v309 = (uint64_t)"association:messages";
      v310 = "num_rejected_suggestions";
      v300 = "association:contactsConfirmed";
      v306 = "suggestedRelationshipConfidence";
      v307 = "association:contactsInferred";
      do
      {
        v118 = *v117;
        if (v118 <= 6 && ((1 << v118) & 0x45) != 0)
        {
          v328 = v116;
          v120 = *((_QWORD *)v117 - 5);
          v321 = *((_QWORD *)v117 - 6);
          v332 = v120;
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          sub_1C077AE90();
          sub_1C077C0B8();
          sub_1C0778580();
          __asm { BR              X8 }
        }
        v117 += 56;
        --v116;
      }
      while (v116);
      sub_1C077B5B4();
    }
    else
    {
      v110 = MEMORY[0x1E0DEE9E0];
    }
    v350 = a17;
    v332 = a16;
    v328 = a15;
    v317 = a13;
    v321 = a14;
    v316 = a12;
    sub_1C0790A08();
    swift_bridgeObjectRelease();
    sub_1C079F02C();
    sub_1C07AD328();
    sub_1C079C7B4();
    sub_1C07B62F8();
    v121 = v313;
    if (qword_1ED761458 != -1)
      swift_once();
    v122 = sub_1C079E000(v331, (uint64_t)qword_1ED78D818);
    sub_1C078A3A0(v312, v122, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v121 + 16));
    v101 = sub_1C0778598();
    *(_QWORD *)(v101 + 16) = v298;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v123 = sub_1C106F538();
    LODWORD(v315) = sub_1C107039C();
    v124 = sub_1C0778598();
    *(_BYTE *)(v124 + 16) = 0;
    v125 = sub_1C0778598();
    *(_BYTE *)(v125 + 16) = 8;
    v126 = sub_1C0778598();
    *(_QWORD *)(v126 + 16) = v316;
    *(_QWORD *)(v126 + 24) = v101;
    v127 = sub_1C0778598();
    *(_QWORD *)(v127 + 16) = v321;
    *(_QWORD *)(v127 + 24) = v126;
    sub_1C07ACF80(&qword_1ED762CC8);
    v128 = swift_initStackObject();
    *(_OWORD *)(v128 + 16) = xmmword_1C1078A20;
    *(_QWORD *)(v128 + 32) = v328;
    *(_QWORD *)(v128 + 40) = v124;
    *(_QWORD *)(v128 + 48) = v332;
    *(_QWORD *)(v128 + 56) = v125;
    *(_QWORD *)(v128 + 64) = v350;
    *(_QWORD *)(v128 + 72) = v127;
    swift_setDeallocating();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1C0BE8D58();
    v129 = v315;
    v350 = v123;
    if (os_log_type_enabled(v123, (os_log_type_t)v315))
    {
      v130 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v130 = 256;
      v130[2] = 0;
      swift_release();
      v130[3] = 8;
      swift_release();
      v131 = *(_QWORD *)(v298 + 16);
      swift_bridgeObjectRelease();
      swift_release();
      v334[0] = v131;
      sub_1C10705AC();
      swift_release();
      swift_release();
      _os_log_impl(&dword_1C0771000, v350, v129, "Vision KVS should have vid-vid association as an entry. Source vision signals count: %ld", v130, 0xCu);
      sub_1C0776778();
    }

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v313 + 8))(v312, v331);
    v239 = 0.8;
    v107 = v329;
    v90 = v333;
    goto LABEL_147;
  }
  sub_1C0784B6C(v58, &qword_1ED75A508);
  v65 = v331;
  if (qword_1ED761458 != -1)
    swift_once();
  sub_1C079E000(v65, (uint64_t)qword_1ED78D818);
  v66 = (void *)sub_1C106F538();
  v67 = sub_1C1070390();
  if (sub_1C07892C0(v67))
  {
    *(_WORD *)sub_1C0780FC8() = 0;
    sub_1C0794CE8(&dword_1C0771000, v68, v69, "People Matcher: skipping entityTriples are empty");
    sub_1C0776778();
  }

  sub_1C08C1878();
  swift_allocError();
  *v70 = 0;
  swift_willThrow();
}

void sub_1C0C910E8(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  int64_t v6;
  unint64_t v7;
  int64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  int64_t v30;
  char v31[16];
  uint64_t *v32;
  uint64_t v33;
  _QWORD v34[6];

  v33 = MEMORY[0x1E0DEE9E0];
  v32 = &v33;
  sub_1C0DD39D0((void (*)(_QWORD *))sub_1C0C94F08, (uint64_t)v31, a1);
  sub_1C0861BD0(v34);
  v29 = v34[0];
  v30 = v34[3];
  v1 = v34[4];
  v27 = v34[1];
  v28 = (unint64_t)(v34[2] + 64) >> 6;
  sub_1C07767CC();
  v2 = MEMORY[0x1E0DEE9D8];
  v3 = 56;
  if (!v1)
    goto LABEL_3;
LABEL_2:
  v4 = __clz(__rbit64(v1));
  v1 &= v1 - 1;
  v5 = v4 | (v30 << 6);
  while (1)
  {
    v13 = *(_QWORD *)(v29 + 56) + v5 * v3;
    v15 = *(_QWORD *)v13;
    v14 = *(_QWORD *)(v13 + 8);
    v16 = *(_QWORD *)(v13 + 16);
    v17 = *(_QWORD *)(v13 + 24);
    v19 = *(_QWORD *)(v13 + 32);
    v18 = *(_QWORD *)(v13 + 40);
    v20 = *(_BYTE *)(v13 + 48);
    v21 = *(_DWORD *)(v13 + 52);
    sub_1C077584C();
    sub_1C077AEBC();
    sub_1C0778624();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C077EE6C();
      sub_1C07ED1C4();
      v2 = v25;
    }
    v22 = *(_QWORD *)(v2 + 16);
    v23 = v2;
    if (v22 >= *(_QWORD *)(v2 + 24) >> 1)
    {
      sub_1C07ED1C4();
      v23 = v26;
    }
    *(_QWORD *)(v23 + 16) = v22 + 1;
    v2 = v23;
    v24 = v23 + 56 * v22;
    v3 = 56;
    *(_QWORD *)(v24 + 32) = v15;
    *(_QWORD *)(v24 + 40) = v14;
    *(_QWORD *)(v24 + 48) = v16;
    *(_QWORD *)(v24 + 56) = v17;
    *(_QWORD *)(v24 + 64) = v19;
    *(_QWORD *)(v24 + 72) = v18;
    *(_BYTE *)(v24 + 80) = v20;
    *(_DWORD *)(v24 + 84) = v21;
    if (v1)
      goto LABEL_2;
LABEL_3:
    v6 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v6 >= v28)
      goto LABEL_31;
    v7 = *(_QWORD *)(v27 + 8 * v6);
    v8 = v30 + 1;
    if (!v7)
    {
      sub_1C077EE58();
      if (v9 == v10)
        goto LABEL_31;
      sub_1C0776ACC();
      if (!v7)
      {
        sub_1C077EE58();
        if (v9 == v10)
          goto LABEL_31;
        sub_1C0776ACC();
        if (!v7)
        {
          sub_1C077EE58();
          if (v9 == v10)
            goto LABEL_31;
          sub_1C0776ACC();
          if (!v7)
          {
            sub_1C077EE58();
            if (v9 == v10)
              goto LABEL_31;
            sub_1C0776ACC();
            if (!v7)
            {
              v8 = v11 + 5;
              if (v11 + 5 >= v28)
                goto LABEL_31;
              v7 = *(_QWORD *)(v27 + 8 * v8);
              if (!v7)
              {
                v12 = v30 + 7;
                while (v12 < v28)
                {
                  v7 = *(_QWORD *)(v27 + 8 * v12++);
                  if (v7)
                  {
                    v8 = v12 - 1;
                    goto LABEL_24;
                  }
                }
LABEL_31:
                sub_1C0782BD8();
                sub_1C07758A4();
                return;
              }
            }
          }
        }
      }
    }
LABEL_24:
    v1 = (v7 - 1) & v7;
    v5 = __clz(__rbit64(v7)) + (v8 << 6);
    v30 = v8;
  }
  __break(1u);
}

void sub_1C0C9135C(char a1, char a2, uint64_t a3, char a4, char a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if ((a1 & 1) != 0)
  {
    if ((a4 & 1) != 0)
      goto LABEL_12;
LABEL_8:
    if ((a5 & 1) == 0)
      goto LABEL_12;
    goto LABEL_9;
  }
  if ((a4 & 1) == 0)
  {
    if ((a2 & 1) == 0)
      goto LABEL_12;
    goto LABEL_8;
  }
  if ((a2 & 1) == 0)
    goto LABEL_12;
LABEL_9:
  if (*(_QWORD *)(a3 + 16) && *(_QWORD *)(a6 + 16))
  {
    sub_1C0C92494(a3, a6);
    sub_1C0945F6C(v6, v7, v8);
  }
LABEL_12:
  sub_1C077862C();
}

void sub_1C0C913E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  if (*(_QWORD *)(a4 + 16) && *(_QWORD *)(a11 + 16) || *(_QWORD *)(a2 + 16) && *(_QWORD *)(a9 + 16))
  {
    sub_1C077584C();
    sub_1C077AE90();
    sub_1C0778624();
    sub_1C07767B4();
    sub_1C0778580();
    sub_1C077960C();
    sub_1C0775834();
    v13 = sub_1C0C94DD4(a11, a4);
    sub_1C077584C();
    sub_1C077AE90();
    sub_1C0778580();
    v14 = sub_1C0C94DD4(a9, a2);
    v15 = *(_QWORD *)(v14 + 16);
    v16 = MEMORY[0x1E0DEE9D8];
    if (v15)
    {
      v36 = v13;
      v38 = MEMORY[0x1E0DEE9D8];
      sub_1C077E464();
      v16 = v38;
      v17 = sub_1C0F22414(v14);
      v19 = v18;
      v37 = v14 + 56;
      while ((v17 & 0x8000000000000000) == 0 && v17 < 1 << *(_BYTE *)(v14 + 32))
      {
        if (((*(_QWORD *)(v37 + (((unint64_t)v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
          goto LABEL_18;
        if (*(_DWORD *)(v14 + 36) != v19)
          goto LABEL_19;
        v20 = (uint64_t *)(*(_QWORD *)(v14 + 48) + (v17 << 6));
        v21 = *v20;
        v22 = v20[1];
        v23 = v14;
        v25 = *(_QWORD *)(v38 + 16);
        v24 = *(_QWORD *)(v38 + 24);
        sub_1C07767C4();
        if (v25 >= v24 >> 1)
          sub_1C09D30E0();
        *(_QWORD *)(v38 + 16) = v25 + 1;
        v26 = v38 + 16 * v25;
        *(_QWORD *)(v26 + 32) = v21;
        *(_QWORD *)(v26 + 40) = v22;
        v27 = sub_1C077FE70();
        v17 = sub_1C0F22500(v27, v28, v29, v23);
        v19 = v30;
        --v15;
        v14 = v23;
        if (!v15)
        {
          v31 = sub_1C077FE70();
          sub_1C0834E68(v31, v32, v33);
          v13 = v36;
          goto LABEL_15;
        }
      }
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      __break(1u);
    }
    else
    {
LABEL_15:
      sub_1C0898D28(v16);
      v35 = v34;
      swift_retain();
      sub_1C089ED40(v35, v13);
      sub_1C077C854();
      sub_1C07A1E5C(&qword_1ED761480);
      sub_1C07B1280();
      sub_1C106FE38();
      sub_1C077B5B4();
      swift_release();
      swift_release();
    }
  }
  else
  {
    sub_1C077C938();
  }
}

void sub_1C0C91698(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (*(_QWORD *)(a1 + 16) && *(_QWORD *)(a2 + 16))
  {
    v2 = sub_1C0C91D10(a2, a1);
    v3 = *(_QWORD *)(v2 + 16);
    if (v3)
    {
      v10 = MEMORY[0x1E0DEE9D8];
      sub_1C077E464();
      v4 = (uint64_t *)(v2 + 40);
      do
      {
        v6 = *(v4 - 1);
        v5 = *v4;
        v8 = *(_QWORD *)(v10 + 16);
        v7 = *(_QWORD *)(v10 + 24);
        sub_1C077AEBC();
        if (v8 >= v7 >> 1)
          sub_1C09D30E0();
        v4 += 7;
        *(_QWORD *)(v10 + 16) = v8 + 1;
        v9 = v10 + 16 * v8;
        *(_QWORD *)(v9 + 32) = v6;
        *(_QWORD *)(v9 + 40) = v5;
        --v3;
      }
      while (v3);
      sub_1C0775844();
      sub_1C077C854();
      sub_1C07A1E5C(&qword_1ED762430);
      sub_1C106FA54();
      sub_1C077AF1C();
    }
    else
    {
      sub_1C0775844();
      sub_1C077C938();
    }
  }
  else
  {
    sub_1C077C938();
  }
}

uint64_t sub_1C0C917FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (a4 == 2)
  {
    result = 0;
    if (a8 != 2 && (a5 & 1) != 0)
    {
      a1 = a5;
      a2 = a6;
      a3 = a7;
      a4 = a8;
LABEL_14:
      sub_1C0C94DA4(a1, a2, a3, a4);
      return 1;
    }
  }
  else
  {
    v9 = a4;
    v10 = a3;
    v11 = a2;
    v12 = a1;
    if (a8 == 2)
    {
      if ((a1 & 1) == 0)
        return 0;
      goto LABEL_14;
    }
    result = 0;
    if ((v12 & 1) != 0 && (a5 & 1) != 0)
    {
      if (a8)
      {
        if (a8 != 1)
          sub_1C07767C4();
      }
      else
      {
        sub_1C0C94D88(a5, a6, a7, 0);
      }
      sub_1C106FC94();
      sub_1C0778580();
      sub_1C106FC94();
      if (v9)
      {
        if (v9 != 1)
          sub_1C07796D8();
      }
      else
      {
        sub_1C0C94D88(v12, v11, v10, 0);
      }
      sub_1C077B200();
      sub_1C106FC94();
      sub_1C0775844();
      if (sub_1C106FC34() < 2)
        sub_1C077960C();
      return 1;
    }
  }
  return result;
}

void sub_1C0C919CC(uint64_t a1@<X0>, uint64_t a2@<X7>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  float v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v19 = a10 & 1;
  if (a13 == 2)
    v19 = 0;
  v20 = a10 & 1;
  if (a13 == 2)
    v20 = 0;
  v21 = (a13 != 2) & a10;
  if ((a14 & 1) != 0)
    v20 = 1;
  else
    v21 = 0;
  if (a17 == 2)
    v22 = 0;
  else
    v22 = v21;
  if (a17 == 2)
    v23 = v19;
  else
    v23 = v20;
  v24 = a17 == 2 && a13 == 2;
  sub_1C0C921A4(a1, a2);
  v28 = v26;
  v29 = v27;
  if ((v30 & 1) != 0)
  {
    v31 = 1.0;
    if (v24 || (v23 & 1) != 0)
    {
      v32 = 1;
LABEL_29:
      v45 = a3;
      goto LABEL_48;
    }
  }
  sub_1C0945F6C(v25, v26, v27);
  sub_1C0C92494(a1, a2);
  if ((v36 & v23) == 1)
  {
    if (!v35)
      sub_1C0945F6C(v33, v34, 0);
    sub_1C078E1C4();
    sub_1C07767AC();
    v46 = sub_1C07ABDDC();
    if ((unint64_t)(a13 - 1) >= 2)
    {
      if (a13)
        sub_1C0C94DC0(a11, a12, a13);
      else
        sub_1C0C95430(v46, v47, v48, v49, v50, v51, v52, v53, v54, a11, a12);
    }
    v45 = a3;
    sub_1C106FC94();
    sub_1C07785A0();
    sub_1C07ABDDC();
    if ((unint64_t)(a17 - 1) >= 2)
    {
      if (a17)
        sub_1C0C94DC0(a15, a16, a17);
      else
        sub_1C0C94D88(a14, a15, a16, 0);
    }
    sub_1C078E1C4();
    sub_1C07767AC();
    v28 = 0;
    v29 = 0xE000000000000000;
    v31 = 1.0;
    v32 = 1;
    v25 = 9;
  }
  else
  {
    v37 = sub_1C0945F6C(v33, v34, v35);
    if (!v22)
    {
      sub_1C077C938();
      v31 = 0.0;
      v29 = 1;
      goto LABEL_29;
    }
    if ((unint64_t)(a13 - 1) >= 2)
    {
      if (a13)
        sub_1C0C94DC0(a11, a12, a13);
      else
        sub_1C0C95430(v37, v38, v39, v40, v41, v42, v43, v44, v54, a11, a12);
    }
    v45 = a3;
    sub_1C078E1C4();
    sub_1C07767AC();
    sub_1C07ABDDC();
    if ((unint64_t)(a17 - 1) >= 2)
    {
      if (a17)
        sub_1C0C94DC0(a15, a16, a17);
      else
        sub_1C0C94D88(a14, a15, a16, 0);
    }
    sub_1C106FC94();
    sub_1C0775834();
    v28 = 0;
    v29 = 0xE000000000000000;
    if (sub_1C106FC34() < 2)
    {
      sub_1C0775834();
      v28 = 0;
      v29 = 0;
    }
    v31 = 1.0;
    v32 = 1;
    v25 = 5;
  }
LABEL_48:
  *(_BYTE *)v45 = v32;
  *(_QWORD *)(v45 + 8) = v25;
  *(_QWORD *)(v45 + 16) = v28;
  *(_QWORD *)(v45 + 24) = v29;
  *(float *)(v45 + 32) = v31;
}

uint64_t sub_1C0C91D10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  float v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int v38;
  float v39;
  uint64_t v40;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t result;
  uint64_t v47;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  _QWORD *v64;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
  {
    v23 = a1;
    v5 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_14:
    v24 = *(_QWORD *)(v23 + 16);
    if (!v24)
    {
      sub_1C077960C();
      v26 = MEMORY[0x1E0DEE9D8];
LABEL_36:
      v64 = (_QWORD *)v26;
      sub_1C07767CC();
      sub_1C0C89A74((uint64_t *)&v64);
      sub_1C07758A4();
      return (uint64_t)v64;
    }
    sub_1C077C0B8();
    v25 = 0;
    v26 = MEMORY[0x1E0DEE9D8];
    while (!v5[2])
    {
LABEL_33:
      v25 += 56;
      if (!--v24)
      {
        sub_1C077960C();
        sub_1C077589C();
        goto LABEL_36;
      }
    }
    v28 = *(_QWORD *)(v23 + v25 + 32);
    v27 = *(_QWORD *)(v23 + v25 + 40);
    v29 = *(_QWORD *)(v23 + v25 + 56);
    v30 = *(_QWORD *)(v23 + v25 + 72);
    v52 = *(_QWORD *)(v23 + v25 + 64);
    v53 = *(_QWORD *)(v23 + v25 + 48);
    v31 = *(unsigned __int8 *)(v23 + v25 + 80);
    v32 = *(float *)(v23 + v25 + 84);
    sub_1C07767CC();
    sub_1C077AEBC();
    sub_1C0778624();
    v33 = sub_1C077D774(v28, v27);
    if ((v34 & 1) == 0)
    {
      sub_1C0775834();
LABEL_32:
      sub_1C0775834();
      sub_1C077B5B4();
      sub_1C0775844();
      goto LABEL_33;
    }
    v47 = v28;
    v51 = v26;
    v35 = v5[7] + 56 * v33;
    v49 = *(_QWORD *)v35;
    v36 = *(_QWORD *)(v35 + 24);
    v37 = *(_QWORD *)(v35 + 40);
    v55 = *(_QWORD *)(v35 + 32);
    v57 = *(_QWORD *)(v35 + 16);
    v38 = *(unsigned __int8 *)(v35 + 48);
    v39 = *(float *)(v35 + 52);
    v63 = *(_QWORD *)(v35 + 8);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v61 = v36;
    sub_1C07796E0();
    v59 = v37;
    sub_1C077C0B8();
    sub_1C0775844();
    if (v31 >= v38)
    {
      v40 = v49;
      v50 = v31;
      if (v38 != v31 || v32 >= v39)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C07796D8();
        sub_1C077AEBC();
        sub_1C0778624();
        v61 = v29;
        v63 = v27;
        v26 = v51;
        v55 = v52;
        v57 = v53;
        v59 = v30;
        v40 = v47;
LABEL_27:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C077EE6C();
          sub_1C07ED1C4();
          v26 = v44;
        }
        v42 = *(_QWORD *)(v26 + 16);
        if (v42 >= *(_QWORD *)(v26 + 24) >> 1)
        {
          sub_1C07ED1C4();
          v26 = v45;
        }
        *(_QWORD *)(v26 + 16) = v42 + 1;
        v43 = v26 + 56 * v42;
        *(_QWORD *)(v43 + 32) = v40;
        *(_QWORD *)(v43 + 40) = v63;
        *(_QWORD *)(v43 + 48) = v57;
        *(_QWORD *)(v43 + 56) = v61;
        *(_QWORD *)(v43 + 64) = v55;
        *(_QWORD *)(v43 + 72) = v59;
        *(_BYTE *)(v43 + 80) = v50;
        *(float *)(v43 + 84) = v32;
        v23 = a1;
        goto LABEL_32;
      }
    }
    else
    {
      v40 = v49;
      v50 = v38;
    }
    v32 = v39;
    v26 = v51;
    goto LABEL_27;
  }
  v3 = a2;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v4 = 0;
  v5 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v54 = v3;
  while (1)
  {
    v7 = *(_QWORD *)(v3 + v4 + 32);
    v6 = *(_QWORD *)(v3 + v4 + 40);
    v8 = *(_QWORD *)(v3 + v4 + 56);
    v56 = v2;
    v58 = *(_QWORD *)(v3 + v4 + 48);
    v9 = *(_QWORD *)(v3 + v4 + 72);
    v60 = *(_QWORD *)(v3 + v4 + 64);
    v62 = *(_BYTE *)(v3 + v4 + 80);
    v10 = *(_DWORD *)(v3 + v4 + 84);
    sub_1C07767CC();
    sub_1C077C0B8();
    sub_1C0778624();
    swift_isUniquelyReferenced_nonNull_native();
    v64 = v5;
    v11 = sub_1C078B03C();
    if (__OFADD__(v5[2], (v12 & 1) == 0))
      break;
    v13 = v11;
    v14 = v12;
    sub_1C07ACF80(&qword_1ED751300);
    if ((sub_1C107090C() & 1) != 0)
    {
      v15 = sub_1C078B03C();
      if ((v14 & 1) != (v16 & 1))
        goto LABEL_39;
      v13 = v15;
    }
    v5 = v64;
    if ((v14 & 1) != 0)
    {
      v17 = v64[7] + 56 * v13;
      swift_bridgeObjectRelease();
      sub_1C0778580();
      sub_1C07767AC();
      *(_QWORD *)v17 = v7;
      *(_QWORD *)(v17 + 8) = v6;
      *(_QWORD *)(v17 + 16) = v58;
      *(_QWORD *)(v17 + 24) = v8;
      *(_QWORD *)(v17 + 32) = v60;
      *(_QWORD *)(v17 + 40) = v9;
      *(_BYTE *)(v17 + 48) = v62;
      *(_DWORD *)(v17 + 52) = v10;
    }
    else
    {
      v64[(v13 >> 6) + 8] |= 1 << v13;
      v18 = (_QWORD *)(v5[6] + 16 * v13);
      *v18 = v7;
      v18[1] = v6;
      v19 = v5[7] + 56 * v13;
      *(_QWORD *)v19 = v7;
      *(_QWORD *)(v19 + 8) = v6;
      *(_QWORD *)(v19 + 16) = v58;
      *(_QWORD *)(v19 + 24) = v8;
      *(_QWORD *)(v19 + 32) = v60;
      *(_QWORD *)(v19 + 40) = v9;
      *(_BYTE *)(v19 + 48) = v62;
      *(_DWORD *)(v19 + 52) = v10;
      v20 = v5[2];
      v21 = __OFADD__(v20, 1);
      v22 = v20 + 1;
      if (v21)
        goto LABEL_38;
      v5[2] = v22;
      sub_1C077AEBC();
    }
    sub_1C077B5B4();
    swift_bridgeObjectRelease();
    v4 += 56;
    v3 = v54;
    --v2;
    if (v56 == 1)
    {
      sub_1C07767AC();
      v23 = a1;
      goto LABEL_14;
    }
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  sub_1C1070D44();
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1C0C9215C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C0806670;
  return PeopleMatcher.execute()();
}

void sub_1C0C921A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t *v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;

  v41 = a1 + 56;
  v2 = 1 << *(_BYTE *)(a1 + 32);
  if (v2 < 64)
    v3 = ~(-1 << v2);
  else
    v3 = -1;
  v4 = v3 & *(_QWORD *)(a1 + 56);
  v44 = a2 + 56;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v5 = 0;
  if (!v4)
    goto LABEL_6;
LABEL_5:
  sub_1C07A31AC();
  v42 = v4;
  v43 = v7;
  v9 = v8 | (v7 << 6);
  while (2)
  {
    v18 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v9);
    v20 = *v18;
    v19 = v18[1];
    v21 = 1 << *(_BYTE *)(a2 + 32);
    if (v21 < 64)
      v22 = ~(-1 << v21);
    else
      v22 = -1;
    v23 = v22 & *(_QWORD *)(a2 + 56);
    v45 = (unint64_t)(v21 + 63) >> 6;
    sub_1C077584C();
    sub_1C07796D8();
    v24 = 0;
    if (v23)
    {
LABEL_28:
      sub_1C07A31AC();
      v26 = v25 | (v24 << 6);
      goto LABEL_45;
    }
    while (1)
    {
      if (__OFADD__(v24, 1))
      {
        __break(1u);
        goto LABEL_53;
      }
      sub_1C07AB3D4();
      if (v11 == v12)
        goto LABEL_48;
      sub_1C0C95490();
      v24 = v27;
      if (!v28)
      {
        v24 = v27 + 1;
        if (v27 + 1 >= v45)
          goto LABEL_48;
        v28 = *(_QWORD *)(v44 + 8 * v24);
        if (!v28)
        {
          v24 = v27 + 2;
          if (v27 + 2 >= v45)
            goto LABEL_48;
          v28 = *(_QWORD *)(v44 + 8 * v24);
          if (!v28)
            break;
        }
      }
LABEL_44:
      v23 = (v28 - 1) & v28;
      v26 = __clz(__rbit64(v28)) + (v24 << 6);
LABEL_45:
      v30 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v26);
      v31 = *v30;
      v32 = v30[1];
      sub_1C077E6D0();
      sub_1C0C9288C(v20, v19, v31, v32);
      v34 = v33;
      v36 = v35;
      v38 = v37;
      v40 = v39;
      sub_1C07785A0();
      if ((v34 & 1) != 0)
      {
        sub_1C0782BD8();
        swift_release();
        sub_1C0778580();
        return;
      }
      sub_1C0945F6C(v36, v38, v40);
      if (v23)
        goto LABEL_28;
    }
    sub_1C07AB3D4();
    if (v11 == v12)
    {
LABEL_48:
      sub_1C0778580();
      swift_release();
      v5 = v43;
      v4 = v42;
      if (!v42)
      {
LABEL_6:
        if (__OFADD__(v5, 1))
          goto LABEL_54;
        sub_1C077ED38();
        if (v11 == v12)
          goto LABEL_51;
        if (!*(_QWORD *)(v41 + 8 * v10))
        {
          sub_1C0780770();
          if (v11 == v12)
          {
LABEL_51:
            swift_release();
            return;
          }
          sub_1C0C954BC();
          if (!v13)
          {
            sub_1C0780770();
            if (v11 == v12)
              goto LABEL_51;
            sub_1C0C954BC();
            if (!v14)
            {
              sub_1C077ED38();
              if (v11 == v12)
                goto LABEL_51;
              if (!*(_QWORD *)(v41 + 8 * v15))
              {
                while (!__OFADD__(v15, 1))
                {
                  sub_1C0780770();
                  if (v11 == v12)
                    goto LABEL_51;
                  v15 = v16 + 1;
                  if (*(_QWORD *)(v41 + 8 * v17))
                    goto LABEL_23;
                }
                goto LABEL_55;
              }
            }
          }
        }
LABEL_23:
        sub_1C078316C();
        continue;
      }
      goto LABEL_5;
    }
    break;
  }
  sub_1C0C95490();
  if (v28)
  {
    v24 = v29;
    goto LABEL_44;
  }
  while (1)
  {
    v24 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v24 >= v45)
      goto LABEL_48;
    v28 = *(_QWORD *)(v44 + 8 * v24);
    ++v29;
    if (v28)
      goto LABEL_44;
  }
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
}

void sub_1C0C92494(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  int64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  id v41;
  uint64_t v42;

  v41 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3858]), sel_init);
  v35 = a1 + 56;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 56);
  v42 = a2;
  v39 = a2 + 56;
  sub_1C07767B4();
  v7 = 0;
  v38 = a1;
  if (!v6)
    goto LABEL_6;
LABEL_5:
  v36 = (v6 - 1) & v6;
  v37 = v7;
  v8 = __clz(__rbit64(v6)) | (v7 << 6);
  while (2)
  {
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v8);
    v18 = *v17;
    v19 = v17[1];
    v20 = 1 << *(_BYTE *)(v42 + 32);
    if (v20 < 64)
      v21 = ~(-1 << v20);
    else
      v21 = -1;
    v22 = v21 & *(_QWORD *)(v42 + 56);
    v40 = (unint64_t)(v20 + 63) >> 6;
    if ((v19 & 0x2000000000000000) != 0)
      v23 = HIBYTE(v19) & 0xF;
    else
      v23 = v18 & 0xFFFFFFFFFFFFLL;
    sub_1C077AEBC();
    sub_1C07767B4();
    v24 = 0;
    if (v22)
    {
LABEL_31:
      v22 &= v22 - 1;
      goto LABEL_48;
    }
    while (1)
    {
      if (__OFADD__(v24, 1))
      {
        __break(1u);
        goto LABEL_59;
      }
      sub_1C07AB3D4();
      if (v10 == v11)
        goto LABEL_54;
      sub_1C0C95490();
      v24 = v25;
      if (!v26)
      {
        v24 = v25 + 1;
        if (v25 + 1 >= v40)
          goto LABEL_54;
        v26 = *(_QWORD *)(v39 + 8 * v24);
        if (!v26)
        {
          v24 = v25 + 2;
          if (v25 + 2 >= v40)
            goto LABEL_54;
          v26 = *(_QWORD *)(v39 + 8 * v24);
          if (!v26)
            break;
        }
      }
LABEL_47:
      v22 = (v26 - 1) & v26;
LABEL_48:
      if (v23 || (sub_1C0C9545C(), v28))
      {
        sub_1C077C0B8();
        v29 = sub_1C0C92BDC(v41);
        v30 = sub_1C0C92BDC(v41);
        sub_1C077E6D0();
        v31 = *(_QWORD *)(sub_1C0C94DD4(v30, v29) + 16);
        swift_release();
        sub_1C077E6D0();
        v32 = sub_1C07796E0();
        sub_1C089ED40(v32, v29);
        v34 = *(_QWORD *)(v33 + 16);
        swift_bridgeObjectRelease();
        sub_1C07785A0();
        sub_1C07767AC();
        if ((float)((float)v31 / (float)v34) > 0.5)
        {
          sub_1C077AEBC();
          sub_1C106FC94();
          sub_1C0789B08();
          sub_1C106FC94();
          sub_1C077589C();
          sub_1C0782BD8();
          swift_release();
          sub_1C077B5B4();

          return;
        }
        sub_1C077589C();
      }
      sub_1C0945F6C(0, 0, 1);
      if (v22)
        goto LABEL_31;
    }
    sub_1C07AB3D4();
    if (v10 == v11)
    {
LABEL_54:
      sub_1C077B5B4();
      swift_release();
      v7 = v37;
      a1 = v38;
      v6 = v36;
      if (!v36)
      {
LABEL_6:
        if (__OFADD__(v7, 1))
          goto LABEL_60;
        sub_1C077ED38();
        if (v10 == v11)
          goto LABEL_57;
        if (!*(_QWORD *)(v35 + 8 * v9))
        {
          sub_1C0780770();
          if (v10 == v11)
          {
LABEL_57:

            sub_1C077AF1C();
            sub_1C077C938();
            return;
          }
          sub_1C0C954BC();
          if (!v12)
          {
            sub_1C0780770();
            if (v10 == v11)
              goto LABEL_57;
            sub_1C0C954BC();
            if (!v13)
            {
              sub_1C077ED38();
              if (v10 == v11)
                goto LABEL_57;
              if (!*(_QWORD *)(v35 + 8 * v14))
              {
                while (!__OFADD__(v14, 1))
                {
                  sub_1C0780770();
                  if (v10 == v11)
                    goto LABEL_57;
                  v14 = v15 + 1;
                  if (*(_QWORD *)(v35 + 8 * v16))
                    goto LABEL_23;
                }
                goto LABEL_61;
              }
            }
          }
        }
LABEL_23:
        sub_1C078316C();
        continue;
      }
      goto LABEL_5;
    }
    break;
  }
  sub_1C0C95490();
  if (v26)
  {
    v24 = v27;
    goto LABEL_47;
  }
  while (1)
  {
    v24 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v24 >= v40)
      goto LABEL_54;
    v26 = *(_QWORD *)(v39 + 8 * v24);
    ++v27;
    if (v26)
      goto LABEL_47;
  }
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
}

void sub_1C0C9288C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  uint64_t v22;

  v4 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v4)
  {
    v5 = HIBYTE(a4) & 0xF;
    if ((a4 & 0x2000000000000000) == 0)
      v5 = a3 & 0xFFFFFFFFFFFFLL;
    if (!v5)
      goto LABEL_34;
  }
  v6 = a1 == a3 && a2 == a4;
  if (v6 || (sub_1C07785B0() & 1) != 0)
  {
    sub_1C077AE90();
    sub_1C07B7CD4();
    sub_1C106FC94();
    return;
  }
  sub_1C07B1280();
  v7 = sub_1C077C500();
  v8 = sub_1C077C500();
  sub_1C077C854();
  sub_1C07A1E5C(&qword_1ED762430);
  v9 = sub_1C07B0134();
  v11 = v10;
  v13 = v9 == sub_1C07B0134() && v11 == v12;
  if (v13 || (sub_1C07785B0() & 1) != 0)
  {
    sub_1C0778580();
    sub_1C0775834();
    sub_1C07B7CD4();
    sub_1C106FC94();
LABEL_19:
    swift_bridgeObjectRelease();
    return;
  }
  sub_1C077B5B4();
  sub_1C0775844();
  v14 = *(_QWORD *)(v7 + 16);
  if (v14 > 1)
    goto LABEL_24;
  if (*(_QWORD *)(v8 + 16) <= 1uLL)
  {
    sub_1C0778580();
LABEL_33:
    swift_bridgeObjectRelease();
LABEL_34:
    sub_1C077862C();
    return;
  }
  if (v14)
  {
LABEL_24:
    sub_1C0E1D258(1, v7);
    sub_1C07796D8();
    sub_1C0775834();
    sub_1C077C854();
    sub_1C07A1E5C(&qword_1ED7624D8);
    v21 = sub_1C07788B0();
    v22 = v15;
    swift_unknownObjectRelease();
    if (*(_QWORD *)(v8 + 16))
    {
      sub_1C0E1D258(1, v8);
      sub_1C0778624();
      sub_1C0778580();
      v16 = sub_1C07788B0();
      v18 = v17;
      swift_unknownObjectRelease();
      sub_1C077D2AC();
      if ((sub_1C0C443B4() & 1) == 0)
      {
        sub_1C0775834();
        sub_1C0775844();
        sub_1C0778580();
        goto LABEL_33;
      }
      if (v21 == v16 && v22 == v18)
      {
        sub_1C07758A4();
      }
      else
      {
        v20 = sub_1C07785B0();
        sub_1C0778580();
        sub_1C077589C();
        if ((v20 & 1) == 0)
        {
          sub_1C0775834();
          goto LABEL_33;
        }
      }
      sub_1C07B7CD4();
      sub_1C106FC94();
      goto LABEL_19;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1C0C92BDC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v30[24];
  uint64_t v31;

  v2 = sub_1C106A9FC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1C0778564();
  v6 = v5 - v4;
  sub_1C07ACF80(&qword_1ED741E68);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v7);
  sub_1C077AF80();
  v10 = v8 - v9;
  MEMORY[0x1E0C80A78](v11);
  v13 = &v30[-v12];
  MEMORY[0x1E0C80A78](v14);
  v16 = &v30[-v15];
  v31 = MEMORY[0x1E0DEE9E8];
  sub_1C0789B08();
  v17 = (void *)sub_1C106FAF0();
  v18 = objc_msgSend(a1, sel_personNameComponentsFromString_, v17);

  if (v18)
  {
    sub_1C106A9E4();

    v19 = 0;
  }
  else
  {
    v19 = 1;
  }
  sub_1C07B2D8C((uint64_t)v13, v19, 1, v2);
  sub_1C077E790((uint64_t)v13, (uint64_t)v16);
  sub_1C0845A78((uint64_t)v16, v10, &qword_1ED741E68);
  if (sub_1C07B2D80(v10, 1, v2) == 1)
  {
    sub_1C0784B6C((uint64_t)v16, &qword_1ED741E68);
    v20 = v10;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v6, v10, v2);
    v21 = sub_1C106A9B4();
    if (v22)
    {
      sub_1C079AE78(v21, v22);
      sub_1C077C244();
    }
    v23 = sub_1C106A9CC();
    if (v24)
    {
      sub_1C079AE78(v23, v24);
      sub_1C077C244();
    }
    v25 = sub_1C106A9C0();
    if (v26)
    {
      sub_1C079AE78(v25, v26);
      sub_1C077C244();
    }
    v27 = sub_1C106A9F0();
    if (v28)
    {
      sub_1C079AE78(v27, v28);
      sub_1C077C244();
    }
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
    v20 = (uint64_t)v16;
  }
  sub_1C0784B6C(v20, &qword_1ED741E68);
  return v31;
}

uint64_t sub_1C0C92E0C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;

  type metadata accessor for PhaseStores();
  VisionKeyValueStore.fetchVisualIdentifiers(for:)();
  sub_1C0C89578(v4, a3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0C92E80()
{
  uint64_t v0;
  _BYTE v2[32];
  _QWORD v3[2];

  sub_1C078A6A8(v0 + 32, (uint64_t)v2, &qword_1ED750728);
  sub_1C078A6A8((uint64_t)v2, (uint64_t)v3, &qword_1ED750728);
  if (v3[1])
  {
    sub_1C07796D8();
    sub_1C079B8DC();
    sub_1C0775844();
    sub_1C077AE90();
  }
  else
  {
    sub_1C077AE90();
    sub_1C077B200();
  }
  sub_1C106FC28();
  return sub_1C077960C();
}

uint64_t sub_1C0C92F24(_QWORD *a1, _QWORD *a2)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  _BYTE v16[32];
  _BYTE v17[32];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  if (*a1 == *a2 && a1[1] == a2[1])
    v5 = 1;
  else
    v5 = sub_1C07785B0();
  sub_1C078A6A8((uint64_t)(a1 + 4), (uint64_t)v17, &qword_1ED750728);
  sub_1C078A6A8((uint64_t)v17, (uint64_t)&v18, &qword_1ED750728);
  v6 = v19;
  if (v19)
  {
    v7 = v18;
    v8 = (uint64_t)(a2 + 4);
    v9 = v20;
    v10 = v21;
    sub_1C077E790(v8, (uint64_t)v16);
    sub_1C077E790((uint64_t)v16, (uint64_t)&v22);
    if (v23)
    {
      if ((v5 & 1) != 0)
        goto LABEL_20;
      v11 = v24;
      v12 = v25;
      v13 = v7 == v22 && v6 == v23;
      if (v13 || (v5 = 0, (sub_1C07785B0() & 1) != 0))
      {
        if (v9 != v11 || v10 != v12)
        {
          v5 = sub_1C07785B0();
          return v5 & 1;
        }
LABEL_20:
        v5 = 1;
      }
    }
  }
  return v5 & 1;
}

void sub_1C0C93048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  BOOL v12;
  BOOL v13;

  v12 = a1 == a5 && a2 == a6;
  if ((v12 || (sub_1C07785B0() & 1) != 0) && (a3 == a7 ? (v13 = a4 == a8) : (v13 = 0), !v13))
    sub_1C1070CB4();
  else
    sub_1C077671C();
}

uint64_t sub_1C0C930C8()
{
  sub_1C077C06C();
  sub_1C0C92E80();
  return sub_1C077AE74();
}

uint64_t sub_1C0C930F8(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[4];
  _OWORD v8[4];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = a1[3];
  v7[2] = a1[2];
  v7[3] = v3;
  v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  v5 = a2[3];
  v8[2] = a2[2];
  v8[3] = v5;
  return sub_1C0C92F24(v7, v8) & 1;
}

uint64_t sub_1C0C93140()
{
  return sub_1C0C930C8();
}

uint64_t sub_1C0C93178()
{
  return sub_1C0C92E80();
}

uint64_t sub_1C0C931B0()
{
  sub_1C1070DF8();
  sub_1C0C92E80();
  return sub_1C077AE74();
}

uint64_t sub_1C0C931F8()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C079B8DC();
  sub_1C0775844();
  sub_1C07767B4();
  sub_1C078BA1C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0C93258()
{
  sub_1C077C06C();
  sub_1C07796D8();
  sub_1C079B8DC();
  sub_1C0775844();
  sub_1C07767B4();
  sub_1C078BA1C();
  sub_1C07767AC();
  return sub_1C077AE74();
}

void sub_1C0C932B8(uint64_t *a1, uint64_t *a2)
{
  sub_1C0C93048(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

uint64_t sub_1C0C932D4()
{
  return sub_1C0C93258();
}

uint64_t sub_1C0C932E0()
{
  return sub_1C0C931F8();
}

uint64_t sub_1C0C932EC()
{
  sub_1C1070DF8();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC28();
  swift_bridgeObjectRelease();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC28();
  swift_bridgeObjectRelease();
  return sub_1C1070E4C();
}

uint64_t type metadata accessor for PeopleMatcher()
{
  uint64_t result;

  result = qword_1ED75A9F8;
  if (!qword_1ED75A9F8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1C0C933A4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C0C8EB50(a1, a2, &qword_1ED75F138, (void (*)(void))sub_1C0AA4998, (const char *)type metadata accessor for GraphTriple, (const char *)sub_1C0A575E8, (uint64_t)&unk_1E7A28140, a3, (uint64_t)&unk_1E7A28168, (uint64_t)&unk_1E7A28190, (uint64_t)&unk_1E7A281B8, (const char *)sub_1C0C953B4, (unint64_t)&unk_1E7A281E0, (uint64_t)sub_1C0C953EC, (uint64_t)sub_1C0959698, (uint64_t)sub_1C0959698, sub_1C0C953B8);
  sub_1C07BA24C();
}

void sub_1C0C93448(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C0C8EB50(a1, a2, &qword_1ED750E40, (void (*)(void))sub_1C0AA49A4, (const char *)type metadata accessor for ConstructionGraphTriple, (const char *)sub_1C0A576A8, (uint64_t)&unk_1E7A28078, a3, (uint64_t)&unk_1E7A280A0, (uint64_t)&unk_1E7A280C8, (uint64_t)&unk_1E7A280F0, (const char *)sub_1C0C953B4, (unint64_t)&unk_1E7A28118, (uint64_t)sub_1C0C953EC, (uint64_t)sub_1C0959698, (uint64_t)sub_1C0959698, sub_1C0C953B8);
  sub_1C07BA24C();
}

void sub_1C0C934EC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C0C8BA50(a1, a2, a3);
}

void sub_1C0C9350C(uint64_t a1)
{
  uint64_t v2;

  sub_1C07803F8(&qword_1ED75A9F0, (void (*)(uint64_t))type metadata accessor for PeopleMatcher);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0C93548(uint64_t a1)
{
  uint64_t v2;

  sub_1C07803F8(&qword_1ED75A9E0, (void (*)(uint64_t))type metadata accessor for PeopleMatcher);
  *(_QWORD *)(a1 + 8) = v2;
}

char *initializeBufferWithCopyOfBuffer for PeopleMatcher(char *a1, char *a2, int *a3)
{
  char *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v20)(char *, char *, uint64_t);
  char *v21;
  char *v22;
  uint64_t v23;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v4 = (char *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_1C106AB28();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = type metadata accessor for Configuration();
    *(_OWORD *)&v4[*(int *)(v8 + 20)] = *(_OWORD *)&a2[*(int *)(v8 + 20)];
    v9 = (int *)type metadata accessor for PhaseStores();
    *(_QWORD *)&v4[v9[5]] = *(_QWORD *)&a2[v9[5]];
    *(_QWORD *)&v4[v9[6]] = *(_QWORD *)&a2[v9[6]];
    *(_QWORD *)&v4[v9[7]] = *(_QWORD *)&a2[v9[7]];
    *(_QWORD *)&v4[v9[8]] = *(_QWORD *)&a2[v9[8]];
    *(_QWORD *)&v4[v9[9]] = *(_QWORD *)&a2[v9[9]];
    *(_QWORD *)&v4[v9[10]] = *(_QWORD *)&a2[v9[10]];
    *(_QWORD *)&v4[v9[11]] = *(_QWORD *)&a2[v9[11]];
    v10 = a3[5];
    v11 = &v4[v10];
    v12 = &a2[v10];
    v13 = *(_QWORD *)&a2[v10 + 8];
    *(_QWORD *)v11 = *(_QWORD *)&a2[v10];
    *((_QWORD *)v11 + 1) = v13;
    *((_QWORD *)v11 + 2) = *(_QWORD *)&a2[v10 + 16];
    v23 = type metadata accessor for Source();
    v14 = *(int *)(v23 + 24);
    v21 = &v12[v14];
    v22 = &v11[v14];
    v15 = sub_1C106D1F8();
    v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v20(v22, v21, v15);
    v11[*(int *)(v23 + 28)] = v12[*(int *)(v23 + 28)];
    v20(&v4[a3[6]], &a2[a3[6]], v15);
    v16 = a3[8];
    v4[a3[7]] = a2[a3[7]];
    v4[v16] = a2[v16];
    v17 = a3[10];
    *(_QWORD *)&v4[a3[9]] = *(_QWORD *)&a2[a3[9]];
    *(_QWORD *)&v4[v17] = *(_QWORD *)&a2[v17];
    *(_QWORD *)&v4[a3[11]] = *(_QWORD *)&a2[a3[11]];
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t destroy for PeopleMatcher(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);

  v4 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  type metadata accessor for PhaseStores();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v5 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  v6 = v5 + *(int *)(type metadata accessor for Source() + 24);
  v7 = sub_1C106D1F8();
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  v8(a1 + *(int *)(a2 + 24), v7);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for PeopleMatcher(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  char *v20;
  uint64_t v21;

  v6 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = type metadata accessor for Configuration();
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  v8 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(a1 + v8[5]) = *(_QWORD *)(a2 + v8[5]);
  *(_QWORD *)(a1 + v8[6]) = *(_QWORD *)(a2 + v8[6]);
  *(_QWORD *)(a1 + v8[7]) = *(_QWORD *)(a2 + v8[7]);
  *(_QWORD *)(a1 + v8[8]) = *(_QWORD *)(a2 + v8[8]);
  *(_QWORD *)(a1 + v8[9]) = *(_QWORD *)(a2 + v8[9]);
  *(_QWORD *)(a1 + v8[10]) = *(_QWORD *)(a2 + v8[10]);
  *(_QWORD *)(a1 + v8[11]) = *(_QWORD *)(a2 + v8[11]);
  v9 = a3[5];
  v10 = (_QWORD *)(a1 + v9);
  v11 = a2 + v9;
  v12 = *(_QWORD *)(a2 + v9 + 8);
  *v10 = *(_QWORD *)(a2 + v9);
  v10[1] = v12;
  v10[2] = *(_QWORD *)(a2 + v9 + 16);
  v21 = type metadata accessor for Source();
  v13 = *(int *)(v21 + 24);
  v19 = v11 + v13;
  v20 = (char *)v10 + v13;
  v14 = sub_1C106D1F8();
  v18 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v18(v20, v19, v14);
  *((_BYTE *)v10 + *(int *)(v21 + 28)) = *(_BYTE *)(v11 + *(int *)(v21 + 28));
  v18((char *)(a1 + a3[6]), a2 + a3[6], v14);
  v15 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v15) = *(_BYTE *)(a2 + v15);
  v16 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for PeopleMatcher(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);

  v6 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for Configuration() + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  v10 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(a1 + v10[5]) = *(_QWORD *)(a2 + v10[5]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[6]) = *(_QWORD *)(a2 + v10[6]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[7]) = *(_QWORD *)(a2 + v10[7]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[8]) = *(_QWORD *)(a2 + v10[8]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[9]) = *(_QWORD *)(a2 + v10[9]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[10]) = *(_QWORD *)(a2 + v10[10]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[11]) = *(_QWORD *)(a2 + v10[11]);
  swift_retain();
  swift_release();
  v11 = a3[5];
  v12 = (_QWORD *)(a1 + v11);
  v13 = a2 + v11;
  *v12 = *(_QWORD *)(a2 + v11);
  v12[1] = *(_QWORD *)(a2 + v11 + 8);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  v12[2] = *(_QWORD *)(v13 + 16);
  v14 = type metadata accessor for Source();
  v15 = *(int *)(v14 + 24);
  v16 = (char *)v12 + v15;
  v17 = v13 + v15;
  v18 = sub_1C106D1F8();
  v19 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24);
  v19(v16, v17, v18);
  *((_BYTE *)v12 + *(int *)(v14 + 28)) = *(_BYTE *)(v13 + *(int *)(v14 + 28));
  v19((char *)(a1 + a3[6]), a2 + a3[6], v18);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for PeopleMatcher(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;

  v6 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = type metadata accessor for Configuration();
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  v8 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(a1 + v8[5]) = *(_QWORD *)(a2 + v8[5]);
  *(_QWORD *)(a1 + v8[6]) = *(_QWORD *)(a2 + v8[6]);
  *(_QWORD *)(a1 + v8[7]) = *(_QWORD *)(a2 + v8[7]);
  *(_QWORD *)(a1 + v8[8]) = *(_QWORD *)(a2 + v8[8]);
  *(_QWORD *)(a1 + v8[9]) = *(_QWORD *)(a2 + v8[9]);
  *(_QWORD *)(a1 + v8[10]) = *(_QWORD *)(a2 + v8[10]);
  *(_QWORD *)(a1 + v8[11]) = *(_QWORD *)(a2 + v8[11]);
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_OWORD *)v10 = *(_OWORD *)(a2 + v9);
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(a2 + v9 + 16);
  v12 = type metadata accessor for Source();
  v13 = *(int *)(v12 + 24);
  v14 = v10 + v13;
  v15 = v11 + v13;
  v16 = sub_1C106D1F8();
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32);
  v17(v14, v15, v16);
  *(_BYTE *)(v10 + *(int *)(v12 + 28)) = *(_BYTE *)(v11 + *(int *)(v12 + 28));
  v17(a1 + a3[6], a2 + a3[6], v16);
  v18 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v18) = *(_BYTE *)(a2 + v18);
  v19 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v19) = *(_QWORD *)(a2 + v19);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  return a1;
}

uint64_t assignWithTake for PeopleMatcher(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;

  v6 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = type metadata accessor for Configuration();
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  v8 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(a1 + v8[5]) = *(_QWORD *)(a2 + v8[5]);
  swift_release();
  *(_QWORD *)(a1 + v8[6]) = *(_QWORD *)(a2 + v8[6]);
  swift_release();
  *(_QWORD *)(a1 + v8[7]) = *(_QWORD *)(a2 + v8[7]);
  swift_release();
  *(_QWORD *)(a1 + v8[8]) = *(_QWORD *)(a2 + v8[8]);
  swift_release();
  *(_QWORD *)(a1 + v8[9]) = *(_QWORD *)(a2 + v8[9]);
  swift_release();
  *(_QWORD *)(a1 + v8[10]) = *(_QWORD *)(a2 + v8[10]);
  swift_release();
  *(_QWORD *)(a1 + v8[11]) = *(_QWORD *)(a2 + v8[11]);
  swift_release();
  v9 = a3[5];
  v10 = (_QWORD *)(a1 + v9);
  v11 = a2 + v9;
  v12 = *(_QWORD *)(a2 + v9 + 8);
  *v10 = *(_QWORD *)(a2 + v9);
  v10[1] = v12;
  swift_bridgeObjectRelease();
  v10[2] = *(_QWORD *)(v11 + 16);
  v13 = type metadata accessor for Source();
  v14 = *(int *)(v13 + 24);
  v15 = (char *)v10 + v14;
  v16 = v11 + v14;
  v17 = sub_1C106D1F8();
  v18 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 40);
  v18(v15, v16, v17);
  *((_BYTE *)v10 + *(int *)(v13 + 28)) = *(_BYTE *)(v11 + *(int *)(v13 + 28));
  v18((char *)(a1 + a3[6]), a2 + a3[6], v17);
  v19 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v19) = *(_BYTE *)(a2 + v19);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_release();
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  swift_release();
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for PeopleMatcher()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1C0C9408C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  sub_1C077D0AC();
  sub_1C0786404();
  if (v9)
  {
    v7 = v6;
    v8 = v4;
  }
  else
  {
    type metadata accessor for Source();
    sub_1C0786404();
    if (v9)
    {
      v7 = v10;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      sub_1C0776744();
      sub_1C0786404();
      if (!v12)
      {
        sub_1C077671C();
        return;
      }
      v7 = v13;
      v11 = *(int *)(a3 + 24);
    }
    v8 = v4 + v11;
  }
  sub_1C07B2D80(v8, v3, v7);
}

uint64_t storeEnumTagSinglePayload for PeopleMatcher()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1C0C9412C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  sub_1C077D0AC();
  sub_1C077AFFC();
  if (v10)
  {
    v8 = v7;
    v9 = v5;
  }
  else
  {
    type metadata accessor for Source();
    sub_1C077AFFC();
    if (v10)
    {
      v8 = v11;
      v12 = a4[5];
    }
    else
    {
      sub_1C0776744();
      sub_1C077AFFC();
      if (!v13)
      {
        *(_QWORD *)(v5 + a4[9]) = (v4 - 1);
        return;
      }
      v8 = v14;
      v12 = a4[6];
    }
    v9 = v5 + v12;
  }
  sub_1C07B2D8C(v9, v4, v4, v8);
}

uint64_t sub_1C0C941C4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = type metadata accessor for PhaseStores();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Source();
    if (v2 <= 0x3F)
    {
      result = sub_1C106D1F8();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1C0C94290(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EntityTriple(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0C942D4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0C94340()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0C94364()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16);
}

uint64_t sub_1C0C94378()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1C0C9439C(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1C0AC42A4(*(uint64_t (**)(void))(v1 + 16), a1);
}

void sub_1C0C943A4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  float v18;
  uint64_t v19;
  unsigned int v20;
  _BOOL4 v21;
  uint64_t v22;
  float *v23;
  float v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  int v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int v46;
  uint64_t v48;
  _OWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  char *v60;
  char *v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  BOOL v73;
  unint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  BOOL v83;
  uint64_t v84;
  char v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  BOOL v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  unint64_t v106;
  char *v107;
  int64_t v108;
  char v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  unint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;

  v3 = a1[1];
  v4 = sub_1C1070BE8();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_1C0C94A98(0, v3, 1, a1);
      return;
    }
    goto LABEL_145;
  }
  v5 = v4;
  sub_1C08CC018(v3 / 2);
  v138 = v11;
  v142 = v12;
  v140 = v3;
  v136 = a1;
  if (v3 <= 0)
  {
    v14 = (char *)MEMORY[0x1E0DEE9D8];
    v59 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_111:
    v119 = v14;
    if (v59 < 2)
    {
LABEL_122:
      v127 = swift_bridgeObjectRelease();
      if (v140 >= -1)
      {
        sub_1C078DC4C(v127, v128, v129, v130, v131, v132, v133, v134, v135, (uint64_t)v136, v137, v138);
        return;
      }
      goto LABEL_151;
    }
    v120 = *v136;
    while (1)
    {
      v121 = v59 - 2;
      if (v59 < 2)
        break;
      if (!v120)
        goto LABEL_154;
      v122 = v119;
      v123 = *(_QWORD *)&v119[16 * v121 + 32];
      v124 = *(_QWORD *)&v119[16 * v59 + 24];
      sub_1C07BA980((char *)(v120 + 56 * v123), (char *)(v120 + 56 * *(_QWORD *)&v119[16 * v59 + 16]), v120 + 56 * v124, v6, v7, v8, v9, v10, v135, (uint64_t)v136, v137, v138, v139, v140, v141, v142);
      if (v1)
        goto LABEL_107;
      if (v124 < v123)
        goto LABEL_140;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v122 = sub_1C0861BC0();
      if (v121 >= *((_QWORD *)v122 + 2))
        goto LABEL_141;
      v125 = &v122[16 * v121 + 32];
      *(_QWORD *)v125 = v123;
      *((_QWORD *)v125 + 1) = v124;
      v126 = *((_QWORD *)v122 + 2);
      if (v59 > v126)
        goto LABEL_142;
      memmove(&v122[16 * v59 + 16], &v122[16 * v59 + 32], 16 * (v126 - v59));
      v119 = v122;
      *((_QWORD *)v122 + 2) = v126 - 1;
      v59 = v126 - 1;
      if (v126 <= 2)
        goto LABEL_122;
    }
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
LABEL_154:
    __break(1u);
    return;
  }
  v13 = 0;
  v6 = *a1;
  v137 = *a1 + 52;
  v14 = (char *)MEMORY[0x1E0DEE9D8];
  v139 = v5;
  v141 = v6;
  while (1)
  {
    v15 = v13++;
    if (v13 >= v3)
      goto LABEL_34;
    v16 = v6 + 56 * v13;
    v17 = *(unsigned __int8 *)(v16 + 48);
    v18 = *(float *)(v16 + 52);
    v19 = v6 + 56 * v15;
    v20 = *(unsigned __int8 *)(v19 + 48);
    if (v20 >= v17)
    {
      if (v17 == v20)
      {
        v21 = *(float *)(v19 + 52) < v18;
        v13 = v15 + 2;
        if (v15 + 2 >= v3)
          goto LABEL_26;
      }
      else
      {
        v13 = v15 + 2;
        if (v15 + 2 >= v3)
          goto LABEL_34;
        v21 = 0;
      }
    }
    else
    {
      v13 = v15 + 2;
      if (v15 + 2 >= v3)
        goto LABEL_28;
      v21 = 1;
    }
    v22 = v3 <= v13 + 1 ? v13 + 1 : v3;
    v23 = (float *)(v137 + 56 * v13);
    do
    {
      v24 = v18;
      v25 = *((unsigned __int8 *)v23 - 4);
      v18 = *v23;
      if (v17 >= v25)
      {
        if (v25 == v17)
        {
          if (((v21 ^ (v24 >= v18)) & 1) == 0)
            goto LABEL_26;
        }
        else if (v21)
        {
          goto LABEL_27;
        }
      }
      else if (!v21)
      {
        goto LABEL_34;
      }
      ++v13;
      v23 += 14;
      v17 = v25;
    }
    while (v13 < v3);
    v13 = v22;
LABEL_26:
    if (v21)
    {
LABEL_27:
      if (v13 < v15)
        goto LABEL_147;
LABEL_28:
      if (v15 < v13)
      {
        v26 = 56 * v13;
        v27 = v13;
        v28 = v15;
        v29 = 56 * v15;
        do
        {
          if (v28 != --v27)
          {
            if (!v6)
              goto LABEL_153;
            v30 = v6 + v29;
            v31 = v6 + v26;
            v32 = *(_OWORD *)(v6 + v29);
            v33 = *(_OWORD *)(v6 + v29 + 16);
            v34 = *(_QWORD *)(v6 + v29 + 32);
            v35 = *(_QWORD *)(v6 + v29 + 40);
            v36 = *(_BYTE *)(v6 + v29 + 48);
            v37 = *(_DWORD *)(v6 + v29 + 52);
            v38 = *(_OWORD *)(v6 + v26 - 40);
            v39 = *(_OWORD *)(v6 + v26 - 24);
            v40 = *(_OWORD *)(v6 + v26 - 56);
            *(_QWORD *)(v30 + 48) = *(_QWORD *)(v6 + v26 - 8);
            *(_OWORD *)(v30 + 16) = v38;
            *(_OWORD *)(v30 + 32) = v39;
            *(_OWORD *)v30 = v40;
            *(_OWORD *)(v31 - 56) = v32;
            *(_OWORD *)(v31 - 40) = v33;
            *(_QWORD *)(v31 - 24) = v34;
            *(_QWORD *)(v31 - 16) = v35;
            *(_BYTE *)(v31 - 8) = v36;
            *(_DWORD *)(v31 - 4) = v37;
          }
          ++v28;
          v26 -= 56;
          v29 += 56;
        }
        while (v28 < v27);
      }
    }
LABEL_34:
    if (v13 < v3)
    {
      if (__OFSUB__(v13, v15))
        goto LABEL_144;
      if (v13 - v15 < v5)
      {
        v41 = v15 + v5;
        if (__OFADD__(v15, v5))
          goto LABEL_148;
        if (v41 >= v3)
          v41 = v3;
        if (v41 < v15)
          goto LABEL_149;
        if (v13 != v41)
        {
          v42 = v137 + 56 * v13;
          do
          {
            v43 = *(unsigned __int8 *)(v6 + 56 * v13 + 48);
            v44 = v15;
            v45 = v42;
            do
            {
              v46 = *(unsigned __int8 *)(v45 - 60);
              if (v46 >= v43 && (v43 != v46 || *(float *)(v45 - 56) >= *(float *)v45))
                break;
              if (!v6)
                goto LABEL_150;
              v48 = v45 - 52;
              v49 = (_OWORD *)(v45 - 108);
              v50 = *(_QWORD *)(v45 - 60);
              *(_DWORD *)(v45 - 56) = *(_DWORD *)v45;
              v45 -= 56;
              v51 = *(_QWORD *)(v45 + 4);
              v52 = *(_QWORD *)(v45 + 12);
              v1 = *(_QWORD *)(v45 + 20);
              v53 = *(_QWORD *)(v45 + 28);
              v54 = *(_QWORD *)(v45 + 36);
              v55 = *(_QWORD *)(v45 + 44);
              v56 = v49[1];
              *(_OWORD *)v48 = *v49;
              *(_OWORD *)(v48 + 16) = v56;
              *(_OWORD *)(v48 + 32) = v49[2];
              *(_QWORD *)(v48 + 48) = v50;
              *(_QWORD *)(v45 - 52) = v51;
              *(_QWORD *)(v45 - 44) = v52;
              *(_QWORD *)(v45 - 36) = v1;
              *(_QWORD *)(v45 - 28) = v53;
              *(_QWORD *)(v45 - 20) = v54;
              *(_QWORD *)(v45 - 12) = v55;
              ++v44;
              *(_BYTE *)(v45 - 4) = v43;
            }
            while (v13 != v44);
            ++v13;
            v42 += 56;
          }
          while (v13 != v41);
          v13 = v41;
        }
      }
    }
    if (v13 < v15)
      goto LABEL_143;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v107 = (char *)sub_1C077EE6C();
      v14 = sub_1C0861AD0(v107, v108, v109, v14);
    }
    v58 = *((_QWORD *)v14 + 2);
    v57 = *((_QWORD *)v14 + 3);
    v59 = v58 + 1;
    v6 = v141;
    if (v58 >= v57 >> 1)
    {
      v110 = sub_1C0861AD0((char *)(v57 > 1), v58 + 1, 1, v14);
      v6 = v141;
      v14 = v110;
    }
    *((_QWORD *)v14 + 2) = v59;
    v60 = v14 + 32;
    v61 = &v14[16 * v58 + 32];
    *(_QWORD *)v61 = v15;
    *((_QWORD *)v61 + 1) = v13;
    if (v58)
      break;
    v59 = 1;
LABEL_102:
    v5 = v139;
    v3 = v140;
    if (v13 >= v140)
      goto LABEL_111;
  }
  while (1)
  {
    v62 = v59 - 1;
    if (v59 >= 4)
    {
      v67 = &v60[16 * v59];
      v68 = *((_QWORD *)v67 - 8);
      v69 = *((_QWORD *)v67 - 7);
      v73 = __OFSUB__(v69, v68);
      v70 = v69 - v68;
      if (v73)
        goto LABEL_128;
      v72 = *((_QWORD *)v67 - 6);
      v71 = *((_QWORD *)v67 - 5);
      v73 = __OFSUB__(v71, v72);
      v65 = v71 - v72;
      v66 = v73;
      if (v73)
        goto LABEL_129;
      v74 = v59 - 2;
      v75 = &v60[16 * v59 - 32];
      v77 = *(_QWORD *)v75;
      v76 = *((_QWORD *)v75 + 1);
      v73 = __OFSUB__(v76, v77);
      v78 = v76 - v77;
      if (v73)
        goto LABEL_130;
      v73 = __OFADD__(v65, v78);
      v79 = v65 + v78;
      if (v73)
        goto LABEL_132;
      if (v79 >= v70)
      {
        v97 = &v60[16 * v62];
        v99 = *(_QWORD *)v97;
        v98 = *((_QWORD *)v97 + 1);
        v73 = __OFSUB__(v98, v99);
        v100 = v98 - v99;
        if (v73)
          goto LABEL_138;
        v90 = v65 < v100;
        goto LABEL_91;
      }
    }
    else
    {
      if (v59 != 3)
      {
        v91 = *((_QWORD *)v14 + 4);
        v92 = *((_QWORD *)v14 + 5);
        v73 = __OFSUB__(v92, v91);
        v84 = v92 - v91;
        v85 = v73;
        goto LABEL_85;
      }
      v64 = *((_QWORD *)v14 + 4);
      v63 = *((_QWORD *)v14 + 5);
      v73 = __OFSUB__(v63, v64);
      v65 = v63 - v64;
      v66 = v73;
    }
    if ((v66 & 1) != 0)
      goto LABEL_131;
    v74 = v59 - 2;
    v80 = &v60[16 * v59 - 32];
    v82 = *(_QWORD *)v80;
    v81 = *((_QWORD *)v80 + 1);
    v83 = __OFSUB__(v81, v82);
    v84 = v81 - v82;
    v85 = v83;
    if (v83)
      goto LABEL_133;
    v86 = &v60[16 * v62];
    v88 = *(_QWORD *)v86;
    v87 = *((_QWORD *)v86 + 1);
    v73 = __OFSUB__(v87, v88);
    v89 = v87 - v88;
    if (v73)
      goto LABEL_135;
    if (__OFADD__(v84, v89))
      goto LABEL_137;
    if (v84 + v89 >= v65)
    {
      v90 = v65 < v89;
LABEL_91:
      if (v90)
        v62 = v74;
      goto LABEL_93;
    }
LABEL_85:
    if ((v85 & 1) != 0)
      goto LABEL_134;
    v93 = &v60[16 * v62];
    v95 = *(_QWORD *)v93;
    v94 = *((_QWORD *)v93 + 1);
    v73 = __OFSUB__(v94, v95);
    v96 = v94 - v95;
    if (v73)
      goto LABEL_136;
    if (v96 < v84)
      goto LABEL_102;
LABEL_93:
    v101 = v62 - 1;
    if (v62 - 1 >= v59)
    {
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
      goto LABEL_139;
    }
    if (!v6)
      goto LABEL_152;
    v102 = &v60[16 * v101];
    v103 = *(_QWORD *)v102;
    v104 = &v60[16 * v62];
    v105 = *((_QWORD *)v104 + 1);
    sub_1C07BA980((char *)(v6 + 56 * *(_QWORD *)v102), (char *)(v6 + 56 * *(_QWORD *)v104), v6 + 56 * v105, v6, v7, v8, v9, v10, v135, (uint64_t)v136, v137, v138, v139, v140, v141, v142);
    if (v1)
      break;
    if (v105 < v103)
      goto LABEL_125;
    if (v62 > *((_QWORD *)v14 + 2))
      goto LABEL_126;
    *(_QWORD *)v102 = v103;
    *(_QWORD *)&v60[16 * v101 + 8] = v105;
    v106 = *((_QWORD *)v14 + 2);
    if (v62 >= v106)
      goto LABEL_127;
    v59 = v106 - 1;
    memmove(&v60[16 * v62], v104 + 16, 16 * (v106 - 1 - v62));
    *((_QWORD *)v14 + 2) = v106 - 1;
    v6 = v141;
    if (v106 <= 2)
      goto LABEL_102;
  }
LABEL_107:
  v111 = sub_1C077B5B4();
  if (v140 < -1)
    goto LABEL_146;
  sub_1C078DC4C(v111, v112, v113, v114, v115, v116, v117, v118, v135, (uint64_t)v136, v137, v138);
}

uint64_t sub_1C0C94A98(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v11;
  _OWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = *a4 + 56 * a3 + 52;
    while (2)
    {
      v6 = *(unsigned __int8 *)(v4 + 56 * a3 + 48);
      v7 = result;
      v8 = v5;
      do
      {
        v9 = *(unsigned __int8 *)(v8 - 60);
        if (v9 >= v6 && (v6 != v9 || *(float *)(v8 - 56) >= *(float *)v8))
          break;
        if (!v4)
        {
          __break(1u);
          return result;
        }
        v11 = v8 - 52;
        v12 = (_OWORD *)(v8 - 108);
        v13 = *(_QWORD *)(v8 - 60);
        *(_DWORD *)(v8 - 56) = *(_DWORD *)v8;
        v8 -= 56;
        v14 = *(_QWORD *)(v8 + 4);
        v15 = *(_QWORD *)(v8 + 12);
        v16 = *(_QWORD *)(v8 + 20);
        v17 = *(_QWORD *)(v8 + 28);
        v18 = *(_QWORD *)(v8 + 36);
        v19 = *(_QWORD *)(v8 + 44);
        v20 = v12[1];
        *(_OWORD *)v11 = *v12;
        *(_OWORD *)(v11 + 16) = v20;
        *(_OWORD *)(v11 + 32) = v12[2];
        *(_QWORD *)(v11 + 48) = v13;
        *(_QWORD *)(v8 - 52) = v14;
        *(_QWORD *)(v8 - 44) = v15;
        *(_QWORD *)(v8 - 36) = v16;
        *(_QWORD *)(v8 - 28) = v17;
        *(_QWORD *)(v8 - 20) = v18;
        *(_QWORD *)(v8 - 12) = v19;
        ++v7;
        *(_BYTE *)(v8 - 4) = v6;
      }
      while (a3 != v7);
      ++a3;
      v5 += 56;
      if (a3 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_1C0C94B64(char *a1, char *a2, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unsigned int v13;
  unsigned int v14;
  BOOL v15;
  BOOL v16;
  char *v17;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  unint64_t v24;
  char *v25;
  unsigned int v26;
  unsigned int v27;
  BOOL v28;
  char *v29;
  BOOL v30;
  BOOL v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = a2 - a1;
  v9 = (a2 - a1) / 56;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 56;
  if (v9 >= v11)
  {
    sub_1C09D285C(a2, (uint64_t)(a3 - (_QWORD)a2) / 56, a4);
    v12 = &v4[56 * v11];
    if (v7 >= v6 || v10 < 56)
      goto LABEL_49;
    v24 = a3 - 56;
    while (1)
    {
      v25 = (char *)(v24 + 56);
      v26 = *(v12 - 8);
      v27 = *(v6 - 8);
      if (v27 < v26 || (v26 == v27 ? (v28 = *((float *)v6 - 1) < *((float *)v12 - 1)) : (v28 = 0), v28))
      {
        v29 = v6 - 56;
        v31 = v25 != v6 || v24 >= (unint64_t)v6;
        v6 -= 56;
        if (!v31)
          goto LABEL_45;
      }
      else
      {
        v29 = v12 - 56;
        v30 = v25 != v12 || v24 >= (unint64_t)v12;
        v12 -= 56;
        if (!v30)
          goto LABEL_45;
      }
      v32 = *(_OWORD *)v29;
      v33 = *((_OWORD *)v29 + 1);
      v34 = *((_OWORD *)v29 + 2);
      *(_QWORD *)(v24 + 48) = *((_QWORD *)v29 + 6);
      *(_OWORD *)(v24 + 16) = v33;
      *(_OWORD *)(v24 + 32) = v34;
      *(_OWORD *)v24 = v32;
LABEL_45:
      v24 -= 56;
      if (v6 <= v7 || v12 <= v4)
        goto LABEL_49;
    }
  }
  sub_1C09D285C(a1, (a2 - a1) / 56, a4);
  v12 = &v4[56 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 56)
  {
    do
    {
      v13 = v6[48];
      v14 = v4[48];
      if (v14 < v13 || (v13 == v14 ? (v15 = *((float *)v4 + 13) < *((float *)v6 + 13)) : (v15 = 0), v15))
      {
        v16 = v7 == v6;
        v17 = v6;
        v6 += 56;
        if (v16 && v7 < v6)
          goto LABEL_20;
      }
      else
      {
        v16 = v7 == v4;
        v17 = v4;
        v4 += 56;
        if (v16 && v7 < v4)
          goto LABEL_20;
      }
      v20 = *(_OWORD *)v17;
      v21 = *((_OWORD *)v17 + 1);
      v22 = *((_OWORD *)v17 + 2);
      *((_QWORD *)v7 + 6) = *((_QWORD *)v17 + 6);
      *((_OWORD *)v7 + 1) = v21;
      *((_OWORD *)v7 + 2) = v22;
      *(_OWORD *)v7 = v20;
LABEL_20:
      v7 += 56;
    }
    while (v4 < v12 && (unint64_t)v6 < a3);
  }
  v6 = v7;
LABEL_49:
  sub_1C09D285C(v4, (v12 - v4) / 56, v6);
  return 1;
}

uint64_t sub_1C0C94D3C(uint64_t isStackAllocationSafe, uint64_t a2)
{
  return sub_1C0C94DD4(isStackAllocationSafe, a2);
}

uint64_t sub_1C0C94D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a4 != 2)
    return sub_1C0945F6C(a2, a3, a4);
  return result;
}

void sub_1C0C94DA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4 != 2)
    sub_1C0C94DC0(a2, a3, a4);
}

uint64_t sub_1C0C94DC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3 != 1)
    return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return result;
}

uint64_t sub_1C0C94DD4(uint64_t isStackAllocationSafe, uint64_t a2)
{
  void *v2;
  uint64_t v3;

  v2 = (void *)isStackAllocationSafe;
  if ((*(_BYTE *)(a2 + 32) & 0x3Fu) > 0xD)
  {
    isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if ((isStackAllocationSafe & 1) == 0)
      goto LABEL_5;
  }
  MEMORY[0x1E0C80A78](isStackAllocationSafe);
  sub_1C079F5E4();
  v3 = sub_1C07AA450();
  sub_1C077AF1C();
  if (v2)
  {
    swift_willThrow();

    __break(1u);
LABEL_5:
    sub_1C0775854();
    sub_1C079F5E4();
    sub_1C07AA450();
    sub_1C077AF1C();
    if (!v2)
      sub_1C0776778();

    sub_1C0776778();
  }
  return v3;
}

uint64_t sub_1C0C94F08(uint64_t a1)
{
  uint64_t v1;

  return sub_1C0C92E0C(a1, *(_QWORD *)(v1 + 16), *(uint64_t **)(v1 + 24));
}

void type metadata accessor for SubAddressing()
{
  sub_1C0779604();
}

uint64_t sub_1C0C94F3C(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 40);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *sub_1C0C94F84(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  if (v6)
  {
    a1[4] = a2[4];
    a1[5] = v6;
    v7 = a2[6];
    v8 = a2[7];
    a1[6] = v7;
    a1[7] = v8;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  else
  {
    v9 = *((_OWORD *)a2 + 3);
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    *((_OWORD *)a1 + 3) = v9;
  }
  return a1;
}

_QWORD *sub_1C0C95008(_QWORD *a1, _QWORD *a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;

  *a1 = *a2;
  a1[1] = a2[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  v4 = a1 + 4;
  v5 = a2 + 4;
  v6 = a2[5];
  if (a1[5])
  {
    if (v6)
    {
      a1[4] = a2[4];
      a1[5] = a2[5];
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      swift_bridgeObjectRelease();
      a1[6] = a2[6];
      a1[7] = a2[7];
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C0C95124((uint64_t)(a1 + 4));
      v7 = *((_OWORD *)a2 + 3);
      *v4 = *v5;
      *((_OWORD *)a1 + 3) = v7;
    }
  }
  else if (v6)
  {
    a1[4] = a2[4];
    a1[5] = a2[5];
    a1[6] = a2[6];
    a1[7] = a2[7];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  else
  {
    v8 = *((_OWORD *)a2 + 3);
    *v4 = *v5;
    *((_OWORD *)a1 + 3) = v8;
  }
  return a1;
}

uint64_t sub_1C0C95124(uint64_t a1)
{
  destroy for AppIntentContent();
  return a1;
}

uint64_t sub_1C0C95150(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 40))
    goto LABEL_5;
  v6 = *(_QWORD *)(a2 + 40);
  if (!v6)
  {
    sub_1C0C95124(a1 + 32);
LABEL_5:
    v8 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v8;
    return a1;
  }
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for MatcherEmail()
{
  sub_1C0779604();
}

uint64_t sub_1C0C951F0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1C0C9523C + 4 * byte_1C10B0A8B[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1C0C95270 + 4 * byte_1C10B0A86[v4]))();
}

uint64_t sub_1C0C95270(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0C95278(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0C95280);
  return result;
}

uint64_t sub_1C0C9528C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0C95294);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1C0C95298(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0C952A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for PersonMatchReasonType()
{
  sub_1C0779604();
}

unint64_t sub_1C0C952BC()
{
  unint64_t result;

  result = qword_1EF646230;
  if (!qword_1EF646230)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B0C80, &unk_1E7A28380);
    atomic_store(result, (unint64_t *)&qword_1EF646230);
  }
  return result;
}

unint64_t sub_1C0C952FC()
{
  unint64_t result;

  result = qword_1ED750710;
  if (!qword_1ED750710)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B0CE8, &unk_1E7A282E0);
    atomic_store(result, (unint64_t *)&qword_1ED750710);
  }
  return result;
}

unint64_t sub_1C0C9533C()
{
  unint64_t result;

  result = qword_1EF646238;
  if (!qword_1EF646238)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B0D50, &unk_1E7A28260);
    atomic_store(result, (unint64_t *)&qword_1EF646238);
  }
  return result;
}

unint64_t sub_1C0C95378()
{
  unint64_t result;

  result = qword_1EF646240;
  if (!qword_1EF646240)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B0C08, &unk_1E7A28380);
    atomic_store(result, (unint64_t *)&qword_1EF646240);
  }
  return result;
}

void sub_1C0C953D8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C0C934EC(a1, a2, a3);
}

void sub_1C0C953F0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 496) = v1;
}

void sub_1C0C95408()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 496) = v1;
}

_QWORD *sub_1C0C95420()
{
  uint64_t v0;

  return sub_1C07A9480((_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 320));
}

uint64_t sub_1C0C95430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;

  return sub_1C0C94D88(v11, a10, a11, 0);
}

uint64_t sub_1C0C9544C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_1C0C95468()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0C95470@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1C0C8A4E0(a1, a2);
}

void sub_1C0C95488(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_1C0845A4C(a1, v3, a3);
}

void sub_1C0C9549C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 496) = v1;
}

uint64_t sub_1C0C954A8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1C0C954C8()
{
  return swift_bridgeObjectRelease();
}

void sub_1C0C954E0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 296) = 0xD00000000000001CLL;
}

uint64_t sub_1C0C954F4()
{
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

uint64_t sub_1C0C954FC()
{
  return swift_bridgeObjectRelease();
}

void sub_1C0C95504(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, double))
{
  uint64_t v2;
  uint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v21;
  int v22;
  uint64_t v23;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v23 = MEMORY[0x1E0DEE9D8];
    sub_1C09D3A8C();
    v4 = sub_1C08CE490(a1);
    if ((v4 & 0x8000000000000000) == 0)
    {
      v6 = v4;
      if (v4 < 1 << *(_BYTE *)(a1 + 32))
      {
        v7 = a1 + 64;
        while ((*(_QWORD *)(v7 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
        {
          if (v5 != *(_DWORD *)(a1 + 36))
            goto LABEL_18;
          v21 = v2;
          v22 = v5;
          v8 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v6);
          v9 = *v8;
          v10 = v8[1];
          v11 = *(double *)(*(_QWORD *)(a1 + 56) + 8 * v6);
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          v12 = a2(v9, v10, v11);
          v14 = v13;
          v16 = v15;
          swift_bridgeObjectRelease();
          v17 = *(_QWORD *)(v23 + 16);
          if (v17 >= *(_QWORD *)(v23 + 24) >> 1)
            sub_1C09D3A8C();
          *(_QWORD *)(v23 + 16) = v17 + 1;
          v18 = (_QWORD *)(v23 + 24 * v17);
          v18[4] = v12;
          v18[5] = v14;
          v18[6] = v16;
          if ((uint64_t)v6 >= -(-1 << *(_BYTE *)(a1 + 32)))
            goto LABEL_19;
          v7 = a1 + 64;
          if ((*(_QWORD *)(a1 + 64 + 8 * (v6 >> 6)) & (1 << v6)) == 0)
            goto LABEL_20;
          if (v22 != *(_DWORD *)(a1 + 36))
            goto LABEL_21;
          v19 = sub_1C1070678();
          v2 = v21 - 1;
          if (v21 == 1)
            return;
          v6 = v19;
          if ((v19 & 0x8000000000000000) == 0)
          {
            v5 = *(_DWORD *)(a1 + 36);
            if (v19 < 1 << *(_BYTE *)(a1 + 32))
              continue;
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
      }
    }
LABEL_22:
    __break(1u);
  }
}

void sub_1C0C95704(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t, __n128);
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  void (*v21)(char *, uint64_t);
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;

  v4 = sub_1C106E590();
  v32 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v28 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v25 - v7;
  v10.n128_f64[0] = MEMORY[0x1E0C80A78](v9);
  v33 = (char *)&v25 - v11;
  v34 = MEMORY[0x1E0DEE9D8];
  v27 = *(_QWORD *)(a1 + 16);
  if (v27)
  {
    v12 = 0;
    v31 = a2 + 56;
    v26 = a1;
    while (v12 < *(_QWORD *)(a1 + 16))
    {
      v13 = *(_QWORD *)(v32 + 72);
      v29 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
      v30 = v12;
      v14 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v32 + 16);
      v14(v33, a1 + v29 + v13 * v12, v4, v10);
      if (*(_QWORD *)(a2 + 16)
        && (sub_1C0794BAC((unint64_t *)&qword_1ED7618F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE40]), v15 = sub_1C106FA00(), v16 = -1 << *(_BYTE *)(a2 + 32), v17 = v15 & ~v16, ((*(_QWORD *)(v31 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) != 0))
      {
        v18 = ~v16;
        while (1)
        {
          v19 = a2;
          ((void (*)(char *, unint64_t, uint64_t))v14)(v8, *(_QWORD *)(a2 + 48) + v17 * v13, v4);
          sub_1C0794BAC(&qword_1ED75EA38, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE50]);
          v20 = sub_1C106FAA8();
          v21 = *(void (**)(char *, uint64_t))(v32 + 8);
          v21(v8, v4);
          if ((v20 & 1) != 0)
            break;
          v17 = (v17 + 1) & v18;
          a2 = v19;
          if (((*(_QWORD *)(v31 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
            goto LABEL_9;
        }
        v21(v33, v4);
        a2 = v19;
      }
      else
      {
LABEL_9:
        v22 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
        v22(v28, v33, v4);
        v23 = v34;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C09D32B4();
          v23 = v34;
        }
        v24 = *(_QWORD *)(v23 + 16);
        if (v24 >= *(_QWORD *)(v23 + 24) >> 1)
        {
          sub_1C09D32B4();
          v23 = v34;
        }
        *(_QWORD *)(v23 + 16) = v24 + 1;
        v22((char *)(v23 + v29 + v24 * v13), v28, v4);
        v34 = v23;
      }
      v12 = v30 + 1;
      a1 = v26;
      if (v30 + 1 == v27)
        goto LABEL_17;
    }
    __break(1u);
  }
  else
  {
LABEL_17:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C0C959F8()
{
  return sub_1C0C95A1C();
}

uint64_t sub_1C0C95A04()
{
  return sub_1C0C95A1C();
}

uint64_t sub_1C0C95A10()
{
  return sub_1C0C95A1C();
}

uint64_t sub_1C0C95A1C()
{
  swift_retain();
  sub_1C106B9D4();
  return swift_release();
}

uint64_t sub_1C0C95A5C()
{
  uint64_t result;

  result = sub_1C106F97C();
  qword_1EF6D1D30 = result;
  return result;
}

uint64_t sub_1C0C95A94(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v29;
  __int128 v30;

  v6 = sub_1C106F544();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0778564();
  v7 = type metadata accessor for Configuration();
  MEMORY[0x1E0C80A78](v7);
  sub_1C0778564();
  v10 = v9 - v8;
  v30 = *a1;
  v29 = *((_QWORD *)a1 + 2);
  v11 = OBJC_IVAR____TtC24IntelligencePlatformCore16PeopleNameSignal_localizedRelationshipTopicMap;
  sub_1C07ACF80(&qword_1EF646338);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C10819B0;
  *(_QWORD *)(inited + 32) = 0x30333838383151;
  *(_QWORD *)(inited + 40) = 0xE700000000000000;
  sub_1C0AA7704();
  *(_QWORD *)(inited + 48) = v13;
  *(_QWORD *)(inited + 56) = 0x38373832313251;
  *(_QWORD *)(inited + 64) = 0xE700000000000000;
  sub_1C0AA7704();
  *(_QWORD *)(inited + 72) = v14;
  *(_QWORD *)(inited + 80) = 0x3036353751;
  *(_QWORD *)(inited + 88) = 0xE500000000000000;
  sub_1C0AA7704();
  *(_QWORD *)(inited + 96) = v15;
  *(_QWORD *)(inited + 104) = 0x3536353751;
  *(_QWORD *)(inited + 112) = 0xE500000000000000;
  sub_1C0AA7704();
  *(_QWORD *)(inited + 120) = v16;
  *(_QWORD *)(inited + 128) = 0x32333237373151;
  *(_QWORD *)(inited + 136) = 0xE700000000000000;
  sub_1C0AA7704();
  *(_QWORD *)(inited + 144) = v17;
  *(_QWORD *)(inited + 152) = 0x34393138303351;
  *(_QWORD *)(inited + 160) = 0xE700000000000000;
  sub_1C0AA7704();
  *(_QWORD *)(inited + 168) = v18;
  *(_QWORD *)(inited + 176) = 0x3634313638303151;
  *(_QWORD *)(inited + 184) = 0xE900000000000035;
  sub_1C0AA7704();
  *(_QWORD *)(inited + 192) = v19;
  *(_QWORD *)(inited + 200) = 0x34393035393551;
  *(_QWORD *)(inited + 208) = 0xE700000000000000;
  sub_1C0AA7704();
  *(_QWORD *)(inited + 216) = v20;
  *(_QWORD *)(inited + 224) = 0x3434333833323951;
  *(_QWORD *)(inited + 232) = 0xE800000000000000;
  sub_1C0AA7704();
  *(_QWORD *)(inited + 240) = v21;
  *(_QWORD *)(inited + 248) = 0x3835373533323951;
  *(_QWORD *)(inited + 256) = 0xE800000000000000;
  sub_1C0AA7704();
  *(_QWORD *)(inited + 264) = v22;
  *(_QWORD *)(inited + 272) = 0x373035363751;
  *(_QWORD *)(inited + 280) = 0xE600000000000000;
  sub_1C0AA7704();
  *(_QWORD *)(inited + 288) = v23;
  *(_QWORD *)(inited + 296) = 0x373535363751;
  *(_QWORD *)(inited + 304) = 0xE600000000000000;
  sub_1C0AA7704();
  *(_QWORD *)(inited + 312) = v24;
  *(_QWORD *)(inited + 320) = 0x3738393030333251;
  *(_QWORD *)(inited + 328) = 0xE900000000000030;
  sub_1C0AA7704();
  *(_QWORD *)(inited + 336) = v25;
  sub_1C07ACF80(&qword_1ED762B80);
  *(_QWORD *)(v3 + v11) = sub_1C106F97C();
  *(_QWORD *)(v3 + OBJC_IVAR____TtC24IntelligencePlatformCore16PeopleNameSignal____lazy_storage___featureNames) = 0;
  *(_OWORD *)(v3 + 16) = v30;
  *(_QWORD *)(v3 + 32) = v29;
  *(_OWORD *)(v3 + 40) = *(__int128 *)((char *)a1 + 24);
  sub_1C083F944(a2, v3 + OBJC_IVAR____TtC24IntelligencePlatformCore16PeopleNameSignal_config, (uint64_t (*)(_QWORD))_s10ViewConfigVMa);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC24IntelligencePlatformCore16PeopleNameSignal_store) = a3;
  type metadata accessor for GlobalKnowledgeStore(0);
  sub_1C083F944(a3 + OBJC_IVAR____TtC24IntelligencePlatformCore10GraphStore_config, v10, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  swift_retain();
  sub_1C0A736B0(v10);
  swift_retain();
  sub_1C0A71AB4();
  *(_QWORD *)(v3 + OBJC_IVAR____TtC24IntelligencePlatformCore16PeopleNameSignal_localizedRelationshipTopicMap) = v26;
  swift_bridgeObjectRelease();
  sub_1C0779758();
  sub_1C0C95A1C();
  swift_release();
  swift_release();
  swift_release();
  sub_1C07B2018(a2, (uint64_t (*)(_QWORD))_s10ViewConfigVMa);
  swift_release();
  return v3;
}

void sub_1C0C95F44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OBJC_IVAR____TtC24IntelligencePlatformCore16PeopleNameSignal____lazy_storage___featureNames;
  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore16PeopleNameSignal____lazy_storage___featureNames))
  {
    sub_1C0AA7704();
    *(_QWORD *)(v0 + v1) = v2;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_bridgeObjectRelease();
  }
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C077671C();
}

uint64_t sub_1C0C95FA4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  NSObject *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t isa;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  BOOL v73;
  uint64_t v74;
  unint64_t v75;
  char v76;
  uint64_t v77;
  void (*v78)(uint64_t, unint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  NSObject *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  NSObject *v89;
  uint64_t v90;
  NSObject *v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  NSObject *v95;
  BOOL v96;
  char v97;
  uint64_t (*v98)(uint64_t);
  Class v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  unint64_t v110;
  char v111;
  unint64_t v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t *v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t (*v130)(uint64_t);
  char v132;
  char v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  char v147;
  unint64_t v148;
  char v149;
  unint64_t v150;
  char v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t *v154;
  uint64_t v155;
  uint64_t v156;
  _QWORD *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  int64_t v166;
  uint64_t v167;
  NSObject *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char v173;
  char v174;
  char v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  NSObject *v179;
  unint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char v183;
  char v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char v190;
  uint64_t v191;
  uint64_t v192;
  NSObject *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  unint64_t v198;
  uint64_t v199;
  _QWORD *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  unint64_t v205;
  _QWORD *v206;
  double *v207;
  double v208;
  double v209;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v211;
  uint64_t v212;
  unint64_t v213;
  uint64_t v214;
  uint64_t v215;
  unint64_t v216;
  unint64_t v217;
  unint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  char v227;
  _QWORD *v228;
  BOOL v229;
  unint64_t v230;
  char v231;
  uint64_t *v232;
  uint64_t v233;
  uint64_t v234;
  unint64_t v235;
  char v236;
  double v237;
  unint64_t v238;
  char v239;
  unint64_t v240;
  char v241;
  char v242;
  unint64_t v243;
  char v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  char v249;
  _QWORD *v250;
  BOOL v251;
  unint64_t v252;
  char v253;
  char v254;
  char v255;
  unint64_t v256;
  char v257;
  unint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  _QWORD *v274;
  _QWORD *v275;
  uint64_t inited;
  uint64_t v277;
  uint64_t v278;
  uint64_t result;
  uint64_t v280;
  _QWORD *v281;
  os_log_type_t v282;
  uint8_t *v283;
  uint64_t v284;
  unint64_t v285;
  _QWORD *v286;
  unint64_t v287;
  uint64_t v288;
  uint64_t v289;
  void (*v290)(uint64_t, uint64_t);
  uint64_t v291;
  char *v292;
  uint64_t v293;
  __int128 v294;
  uint64_t v295;
  char v296;
  unsigned int v297;
  uint64_t v298;
  NSObject *v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  __int128 v306;
  uint64_t v307;
  uint64_t v308;
  unint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  _QWORD *v320;
  uint64_t v321;
  uint64_t v322;
  unint64_t v323;
  uint64_t v324;
  uint64_t v325;
  NSObject *v326;
  uint64_t (*v327)(uint64_t);
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  double v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  char *v339;
  uint64_t v340;
  uint64_t v341;
  NSObject *v342;
  char v343[8];
  NSObject *v344;
  uint64_t (*v345)(uint64_t);
  uint64_t v346;
  NSObject *v347;
  NSObject *v348;
  uint64_t v349;
  uint64_t v350;

  v1 = sub_1C106E41C();
  sub_1C077B58C(v1, (uint64_t)&v349);
  sub_1C0787718(v2);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v288 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v7);
  v339 = (char *)&v288 - v8;
  v9 = sub_1C106D9A8();
  sub_1C077B58C(v9, (uint64_t)&v333);
  sub_1C0787718(v10);
  MEMORY[0x1E0C80A78](v11);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v12);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v13);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v14);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v15);
  v313 = (uint64_t)&v288 - v16;
  v17 = type metadata accessor for GraphTriple(0);
  sub_1C077B58C(v17, (uint64_t)&v350);
  sub_1C0787718(v18);
  MEMORY[0x1E0C80A78](v19);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v20);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v21);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v22);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v23);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v24);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v25);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v288 - v27;
  v29 = sub_1C106E590();
  sub_1C077B58C(v29, (uint64_t)v343);
  sub_1C0787718(v30);
  MEMORY[0x1E0C80A78](v31);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v32);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v33);
  v342 = ((char *)&v288 - v34);
  v35 = sub_1C07ACF80(&qword_1ED756690);
  MEMORY[0x1E0C80A78](v35);
  sub_1C0778564();
  v38 = v37 - v36;
  v39 = sub_1C106D1F8();
  v40 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  sub_1C0778564();
  v43 = v42 - v41;
  v44 = sub_1C106D9B4();
  sub_1C0787718(*(_QWORD *)(v44 - 8));
  MEMORY[0x1E0C80A78](v45);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v46);
  v48 = (char *)&v288 - v47;
  v350 = MEMORY[0x1E0DEE9D8];
  v320 = v0;
  v49 = *(NSObject **)((char *)v0 + OBJC_IVAR____TtC24IntelligencePlatformCore16PeopleNameSignal_store);
  sub_1C0779758();
  sub_1C106D1A4();
  sub_1C106D858();
  v50 = v39;
  v51 = v330;
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v43, v50);
  v298 = sub_1C106EB78();
  sub_1C07B2D8C(v38, 1, 1, v298);
  v52 = sub_1C0BA46B8((uint64_t)v48, v38);
  v300 = v38;
  sub_1C0A6D714(v38);
  v53 = *(void (**)(uint64_t, uint64_t))(v340 + 8);
  v291 = v44;
  v290 = v53;
  v53((uint64_t)v48, v44);
  sub_1C07785A8();
  v299 = v49;
  sub_1C0AAD644();
  v55 = v54;
  isa = *(_QWORD *)(v52 + 16);
  v292 = v5;
  if (isa)
  {
    v340 = v54;
    v344 = MEMORY[0x1E0DEE9D8];
    sub_1C09D32B4();
    v57 = (*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
    v338 = v52;
    v58 = v52 + v57;
    v59 = *(_QWORD *)(v51 + 72);
    v60 = v316;
    v61 = v315;
    v62 = v342;
    do
    {
      sub_1C083F944(v58, (uint64_t)v28, type metadata accessor for GraphTriple);
      (*(void (**)(NSObject *, char *, uint64_t))(v61 + 16))(v62, v28, v60);
      sub_1C07B2018((uint64_t)v28, type metadata accessor for GraphTriple);
      v63 = (uint64_t)v344;
      if ((sub_1C077C09C() & 1) == 0)
      {
        sub_1C09D32B4();
        v63 = (uint64_t)v344;
      }
      v64 = *(_QWORD *)(v63 + 16);
      if (v64 >= *(_QWORD *)(v63 + 24) >> 1)
      {
        sub_1C09D32B4();
        v63 = (uint64_t)v344;
      }
      *(_QWORD *)(v63 + 16) = v64 + 1;
      v61 = v315;
      v65 = v63
          + ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80))
          + *(_QWORD *)(v61 + 72) * v64;
      v62 = v342;
      v60 = v316;
      (*(void (**)(unint64_t, NSObject *, uint64_t))(v315 + 32))(v65, v342, v316);
      v344 = v63;
      v58 += v59;
      --isa;
    }
    while (isa);
    sub_1C078F230();
    v55 = v340;
  }
  else
  {
    sub_1C077B5B4();
    v63 = MEMORY[0x1E0DEE9D8];
  }
  v66 = v341;
  sub_1C0C95704(v63, v55);
  v293 = v66;
  sub_1C0898DB0();
  v67 = 0;
  v288 = v68 + 56;
  v305 = v68;
  sub_1C0789DCC();
  v317 = OBJC_IVAR____TtC24IntelligencePlatformCore16PeopleNameSignal_localizedRelationshipTopicMap;
  v289 = (unint64_t)(v69 + 63) >> 6;
  v297 = *MEMORY[0x1E0D3C448];
  v306 = xmmword_1C1079220;
  v294 = xmmword_1C1078A20;
  sub_1C07B7CE4();
  sub_1C077CFD8();
  v71 = v315;
  if (!v70)
    goto LABEL_12;
LABEL_11:
  v307 = (v70 - 1) & v70;
  v308 = v67;
  v72 = __clz(__rbit64(v70)) | (v67 << 6);
LABEL_26:
  v78 = *(void (**)(uint64_t, unint64_t, uint64_t))(v71 + 16);
  v79 = v301;
  v80 = v316;
  v78(v301, *(_QWORD *)(v305 + 48) + *(_QWORD *)(v71 + 72) * v72, v316);
  v81 = v309;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v71 + 32))(v309, v79, v80);
  sub_1C07ACF80(&qword_1ED7603D8);
  v82 = (*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
  v83 = swift_allocObject();
  *(_OWORD *)(v83 + 16) = v306;
  v78(v83 + v82, v81, v80);
  sub_1C0AA8F40();
  v342 = v84;
  sub_1C07ACF80(&qword_1ED75E838);
  *(_OWORD *)(swift_allocObject() + 16) = v294;
  sub_1C106E248();
  sub_1C106E3B0();
  sub_1C106DCE4();
  sub_1C0AA7870();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v311 + 104))(v313, v297, v304);
  sub_1C07A46EC(v314);
  sub_1C07A46EC(v310);
  v85 = v302;
  sub_1C07A46EC(v302);
  v86 = v303;
  sub_1C07A46EC(v303);
  v286 = (_QWORD *)v86;
  v287 = 0;
  v87 = v310;
  sub_1C106D864();
  sub_1C07767AC();
  sub_1C077960C();
  sub_1C0797D8C(v86);
  sub_1C0797D8C(v85);
  sub_1C0797D8C(v87);
  sub_1C0797D8C(v314);
  sub_1C0797D8C(v313);
  v88 = v300;
  sub_1C07B2D8C(v300, 1, 1, v298);
  v89 = v299;
  sub_1C0779758();
  v90 = sub_1C0BA46B8(v312, v88);
  sub_1C0A6D714(v88);
  sub_1C07785A8();
  v91 = MEMORY[0x1E0DEE9D8];
  v348 = MEMORY[0x1E0DEE9D8];
  v92 = *(_QWORD *)(v90 + 16);
  v340 = v90;
  sub_1C077584C();
  v341 = v92;
  if (v92)
  {
    v93 = sub_1C07AB064();
    while (1)
    {
      if (!*(_QWORD *)(v93 + 16))
        goto LABEL_254;
      v94 = sub_1C079C7C4(v93);
      sub_1C083F944(v94, v329, type metadata accessor for GraphTriple);
      sub_1C106E3B0();
      sub_1C0794BAC(&qword_1ED75E7E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC80]);
      sub_1C0791484();
      sub_1C0791484();
      v95 = v345;
      v89 = v347;
      v96 = v344 == v346 && (char *)v345 == (char *)v347;
      if (v96)
        break;
      v97 = sub_1C07785B0();
      sub_1C07767AC();
      sub_1C077960C();
      sub_1C07A1270();
      if ((v97 & 1) != 0)
        goto LABEL_36;
      sub_1C07B2018(v329, type metadata accessor for GraphTriple);
LABEL_41:
      sub_1C079C028();
      v98 = v327;
      v93 = v340;
      if (v96)
      {
        v89 = v348;
        goto LABEL_45;
      }
    }
    sub_1C07758A4();
    sub_1C07A1270();
LABEL_36:
    sub_1C080AC74(v329, v325);
    if ((sub_1C0793B6C() & 1) == 0)
    {
      sub_1C07A56A4();
      v95 = v348;
    }
    isa = (uint64_t)v95[2].isa;
    if (isa >= (unint64_t)v95[3].isa >> 1)
    {
      sub_1C0793EC0();
      v95 = v348;
    }
    v95[2].isa = (Class)(isa + 1);
    sub_1C080AC74(v325, (uint64_t)v95 + v85 + isa * v86);
    sub_1C07B7CE4();
    goto LABEL_41;
  }
  v89 = v91;
  v98 = v327;
  sub_1C07AB064();
LABEL_45:
  swift_bridgeObjectRelease();
  v99 = v89[2].isa;
  if (v99)
  {
    sub_1C07B7468();
    v101 = (uint64_t)v89 + v100;
    v335 = (uint64_t)v89;
    sub_1C0779758();
    v336 = (uint64_t)v91[9].isa;
    v342 = MEMORY[0x1E0DEE9E0];
    v86 = v322;
    do
    {
      v337 = (uint64_t)v99;
      sub_1C083F944(v101, v86, type metadata accessor for GraphTriple);
      v102 = v334;
      v103 = (uint64_t *)(v86 + *(int *)(v334 + 44));
      v105 = *v103;
      v104 = v103[1];
      isa = sub_1C077D2F0();
      v338 = v106;
      v107 = *(_QWORD *)(v86 + *(int *)(v102 + 40));
      sub_1C077AEBC();
      v89 = v342;
      sub_1C077C09C();
      v344 = v89;
      v108 = sub_1C079DD9C();
      if (__OFADD__(v89[2].isa, (v109 & 1) == 0))
        goto LABEL_255;
      v110 = v108;
      v85 = v109;
      sub_1C07ACF80(&qword_1EF646330);
      v89 = &v344;
      v111 = sub_1C107090C();
      v86 = v322;
      if ((v111 & 1) != 0)
      {
        v89 = v344;
        v112 = sub_1C079DD9C();
        if ((v85 & 1) != (v113 & 1))
        {
LABEL_271:
          result = sub_1C1070D44();
          __break(1u);
          return result;
        }
        v110 = v112;
      }
      v342 = v344;
      if ((v85 & 1) != 0)
      {
        sub_1C077B368();
        v116 = (uint64_t *)(v114 + v110 * v115);
        swift_bridgeObjectRelease();
        v117 = v338;
        *v116 = isa;
        v116[1] = v117;
        v116[2] = v107;
      }
      else
      {
        sub_1C07AD330((uint64_t)&v344[v110 >> 6]);
        v119 = (_QWORD *)(v118 + 16 * v110);
        *v119 = v105;
        v119[1] = v104;
        sub_1C077B368();
        v123 = (uint64_t *)(v121 + v110 * v122);
        v124 = v338;
        *v123 = isa;
        v123[1] = v124;
        v123[2] = v107;
        v125 = *(_QWORD *)(v120 + 16);
        v73 = __OFADD__(v125, 1);
        v126 = v125 + 1;
        if (v73)
          goto LABEL_262;
        *(_QWORD *)(v120 + 16) = v126;
        sub_1C077AEBC();
      }
      sub_1C077B5B4();
      swift_bridgeObjectRelease();
      v98 = type metadata accessor for GraphTriple;
      sub_1C07B2018(v86, type metadata accessor for GraphTriple);
      v101 += v336;
      v99 = (Class)(v337 - 1);
    }
    while (v337 != 1);
    v89 = v335;
    sub_1C07785A8();
    sub_1C078E1CC();
    sub_1C077CFD8();
  }
  else
  {
    v342 = MEMORY[0x1E0DEE9E0];
  }
  sub_1C07785A8();
  v127 = MEMORY[0x1E0DEE9D8];
  v348 = MEMORY[0x1E0DEE9D8];
  sub_1C07AB064();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  if (v341)
  {
    v128 = sub_1C07AB064();
    while (1)
    {
      if (!*(_QWORD *)(v128 + 16))
        goto LABEL_256;
      v129 = sub_1C079C7C4(v128);
      sub_1C083F944(v129, v328, type metadata accessor for GraphTriple);
      sub_1C07AA18C();
      sub_1C106DCE4();
      sub_1C0794BAC(&qword_1ED75E7E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC80]);
      v130 = v98;
      sub_1C0791484();
      sub_1C0791484();
      v98 = v345;
      v89 = v347;
      if (v344 == v346 && (char *)v345 == (char *)v347)
        break;
      v132 = sub_1C07785B0();
      sub_1C07767AC();
      sub_1C077960C();
      sub_1C07A1270();
      if ((v132 & 1) != 0)
        goto LABEL_68;
      v98 = v130;
      sub_1C07B2018(v328, type metadata accessor for GraphTriple);
      sub_1C077CFD8();
LABEL_73:
      sub_1C079C028();
      v128 = v340;
      if (v96)
      {
        v134 = (uint64_t)v348;
        goto LABEL_77;
      }
    }
    sub_1C07758A4();
    sub_1C07A1270();
LABEL_68:
    sub_1C080AC74(v328, v324);
    sub_1C0793B6C();
    sub_1C077CFD8();
    if ((v133 & 1) == 0)
    {
      sub_1C07A56A4();
      v98 = (uint64_t (*)(uint64_t))v348;
    }
    isa = *((_QWORD *)v98 + 2);
    if ((unint64_t)isa >= *((_QWORD *)v98 + 3) >> 1)
    {
      sub_1C0793EC0();
      v98 = (uint64_t (*)(uint64_t))v348;
    }
    *((_QWORD *)v98 + 2) = isa + 1;
    sub_1C080AC74(v324, (uint64_t)v98 + v85 + isa * v86);
    sub_1C078E1CC();
    goto LABEL_73;
  }
  v134 = v127;
  sub_1C07AB064();
LABEL_77:
  swift_bridgeObjectRelease();
  v135 = *(_QWORD *)(v134 + 16);
  if (v135)
  {
    sub_1C07B7468();
    v137 = v134 + v136;
    v335 = v134;
    swift_retain();
    v336 = *(_QWORD *)(v127 + 72);
    isa = MEMORY[0x1E0DEE9E0];
    v138 = v321;
    do
    {
      v337 = v135;
      sub_1C083F944(v137, v138, type metadata accessor for GraphTriple);
      v139 = v334;
      v140 = (uint64_t *)(v138 + *(int *)(v334 + 44));
      v141 = *v140;
      v142 = v140[1];
      v143 = sub_1C077D2F0();
      v338 = v144;
      v145 = *(_QWORD *)(v138 + *(int *)(v139 + 40));
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v89 = isa;
      swift_isUniquelyReferenced_nonNull_native();
      v344 = isa;
      v146 = sub_1C07A87AC();
      if (__OFADD__(*(_QWORD *)(isa + 16), (v147 & 1) == 0))
        goto LABEL_257;
      v148 = v146;
      v149 = v147;
      sub_1C07ACF80(&qword_1EF646330);
      v89 = &v344;
      if ((sub_1C107090C() & 1) != 0)
      {
        v89 = v344;
        v150 = sub_1C07A87AC();
        if ((v149 & 1) != (v151 & 1))
          goto LABEL_271;
        v148 = v150;
      }
      if ((v149 & 1) != 0)
      {
        isa = (uint64_t)v344;
        sub_1C077B368();
        v154 = (uint64_t *)(v152 + v148 * v153);
        swift_bridgeObjectRelease();
        v155 = v338;
        *v154 = v143;
        v154[1] = v155;
        v154[2] = v145;
      }
      else
      {
        sub_1C07AD330((uint64_t)&v344[v148 >> 6]);
        v157 = (_QWORD *)(v156 + 16 * v148);
        *v157 = v141;
        v157[1] = v142;
        sub_1C077B368();
        v161 = (uint64_t *)(v159 + v148 * v160);
        v162 = v338;
        *v161 = v143;
        v161[1] = v162;
        v161[2] = v145;
        v163 = *(_QWORD *)(v158 + 16);
        v73 = __OFADD__(v163, 1);
        v164 = v163 + 1;
        if (v73)
          goto LABEL_263;
        isa = v158;
        *(_QWORD *)(v158 + 16) = v164;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v138 = v321;
      sub_1C07B2018(v321, type metadata accessor for GraphTriple);
      v137 += v336;
      v135 = v337 - 1;
    }
    while (v337 != 1);
    swift_release();
    sub_1C077CFD8();
    v89 = isa;
  }
  else
  {
    v89 = MEMORY[0x1E0DEE9E0];
  }
  swift_release();
  v338 = sub_1C07B4958() + 64;
  sub_1C07A01D8();
  v166 = v165 >> 6;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v167 = 0;
  v332 = MEMORY[0x1E0DEE9D8];
  v168 = v89;
  if (isa)
  {
LABEL_91:
    sub_1C07AA998();
    goto LABEL_103;
  }
  while (1)
  {
    v73 = __OFADD__(v167++, 1);
    if (v73)
      goto LABEL_258;
    if (v167 >= v166)
      break;
    if (!*(_QWORD *)(v338 + 8 * v167))
    {
      if (v167 + 1 >= v166)
        break;
      sub_1C0796A08();
      if (!v170)
      {
        if (v167 + 2 >= v166)
          break;
        sub_1C0796A08();
        if (!v171)
        {
          if (v167 + 3 >= v166)
            break;
          sub_1C0796A08();
          if (!v172)
          {
            while (1)
            {
              v167 = v169 + 1;
              if (__OFADD__(v169, 1))
              {
LABEL_266:
                __break(1u);
                goto LABEL_267;
              }
              if (v167 >= v166)
                goto LABEL_118;
              ++v169;
              if (*(_QWORD *)(v338 + 8 * v167))
                goto LABEL_102;
            }
          }
        }
      }
      v167 = v169;
    }
LABEL_102:
    sub_1C07A5FF8();
LABEL_103:
    sub_1C07B85F8();
    if (!v89[2].isa)
    {
      sub_1C077584C();
LABEL_113:
      if ((sub_1C079486C() & 1) == 0)
      {
        sub_1C079A028();
        sub_1C0795C20(v176);
      }
      sub_1C07A3378();
      if (v175)
      {
        sub_1C079E78C();
        sub_1C0795C20(v177);
      }
      sub_1C07BC9B0();
      goto LABEL_106;
    }
    sub_1C077584C();
    sub_1C07767B4();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C07851C4();
    v174 = v173;
    sub_1C07767AC();
    sub_1C077960C();
    if ((v174 & 1) == 0)
      goto LABEL_113;
    sub_1C0778580();
LABEL_106:
    v89 = v168;
    if (isa)
      goto LABEL_91;
  }
LABEL_118:
  sub_1C07B4958();
  swift_release();
  sub_1C07B4958();
  v178 = 0;
  v179 = v89 + 8;
  sub_1C07A01D8();
  v338 = v180 >> 6;
  while (isa)
  {
    sub_1C07AA998();
LABEL_135:
    sub_1C07B85F8();
    if (*(_QWORD *)(v182 + 16))
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C077584C();
      sub_1C07767B4();
      sub_1C07851C4();
      v184 = v183;
      sub_1C07767AC();
      v89 = v168;
      swift_bridgeObjectRelease();
      if ((v184 & 1) == 0)
        goto LABEL_143;
      sub_1C0778580();
      sub_1C077CFD8();
      sub_1C07B4958();
    }
    else
    {
      sub_1C077584C();
LABEL_143:
      if ((sub_1C079486C() & 1) == 0)
      {
        sub_1C079A028();
        sub_1C0795C20(v185);
      }
      sub_1C07A3378();
      if (v175)
      {
        sub_1C079E78C();
        sub_1C0795C20(v186);
        sub_1C07B4958();
      }
      sub_1C07BC9B0();
      v89 = v168;
    }
  }
  v73 = __OFADD__(v178++, 1);
  if (v73)
    goto LABEL_259;
  if (v178 >= v338)
  {
    swift_bridgeObjectRelease();
    sub_1C07B7CE4();
    goto LABEL_150;
  }
  isa = v331;
  if (v179[v178].isa)
  {
LABEL_134:
    sub_1C07A5FF8();
    goto LABEL_135;
  }
  sub_1C07A3E1C();
  if (v76 == v73)
    goto LABEL_149;
  if (v179[v181].isa)
    goto LABEL_133;
  sub_1C07A3E1C();
  if (v76 == v73)
    goto LABEL_149;
  if (v179[v181].isa)
  {
LABEL_133:
    v178 = v181;
    goto LABEL_134;
  }
  sub_1C07A3E1C();
  if (v76 != v73)
  {
    if (!v179[v181].isa)
    {
      while (1)
      {
        v178 = v181 + 1;
        if (__OFADD__(v181, 1))
          break;
        if (v178 >= v338)
          goto LABEL_149;
        ++v181;
        if (v179[v178].isa)
          goto LABEL_134;
      }
LABEL_267:
      __break(1u);
LABEL_268:
      __break(1u);
LABEL_269:
      __break(1u);
LABEL_270:
      swift_once();
LABEL_250:
      v280 = sub_1C106F544();
      sub_1C079E000(v280, (uint64_t)qword_1ED78D9E0);
      v281 = v320;
      swift_retain();
      v89 = sub_1C106F538();
      v282 = sub_1C1070378();
      if (os_log_type_enabled(v89, v282))
      {
        v283 = (uint8_t *)swift_slowAlloc();
        v344 = swift_slowAlloc();
        *(_DWORD *)v283 = 136315138;
        v284 = *(_QWORD *)((char *)v281 + OBJC_IVAR____TtC24IntelligencePlatformCore16PeopleNameSignal_config);
        v285 = *(_QWORD *)((char *)v281 + OBJC_IVAR____TtC24IntelligencePlatformCore16PeopleNameSignal_config + 8);
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v346 = sub_1C0788DAC(v284, v285, (uint64_t *)&v344);
        sub_1C10705AC();
        swift_release();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C0771000, v89, v282, "SignalView %s: Wrote features", v283, 0xCu);
        swift_arrayDestroy();
        sub_1C0776778();
      }
      goto LABEL_264;
    }
    goto LABEL_133;
  }
LABEL_149:
  swift_bridgeObjectRelease();
LABEL_150:
  sub_1C07785A8();
  if (v341)
  {
    v187 = v340 + ((*(unsigned __int8 *)(v330 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v330 + 80));
    v188 = *(_QWORD *)(v330 + 72);
    v89 = v326;
    while (1)
    {
      sub_1C083F944(v187, (uint64_t)v89, type metadata accessor for GraphTriple);
      sub_1C07AA18C();
      sub_1C106E248();
      sub_1C0794BAC(&qword_1ED75E7E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC80]);
      sub_1C07AEE18();
      sub_1C07AEE18();
      if (v344 == v346 && (char *)v345 == (char *)v347)
        break;
      v190 = sub_1C07785B0();
      sub_1C077960C();
      sub_1C0778580();
      sub_1C07B4364();
      if ((v190 & 1) != 0)
        goto LABEL_159;
      v191 = (uint64_t)v326;
LABEL_164:
      v89 = v191;
      sub_1C07B2018(v191, type metadata accessor for GraphTriple);
      v187 += v188;
      if (!--v341)
        goto LABEL_165;
    }
    sub_1C07758A4();
    sub_1C07B4364();
LABEL_159:
    v192 = v334;
    v193 = v326;
    v194 = sub_1C077D2F0();
    v196 = v195;
    v197 = *(uint64_t *)((char *)&v193->isa + *(int *)(v192 + 40));
    if ((sub_1C079486C() & 1) == 0)
    {
      sub_1C079A028();
      sub_1C0795C20(v201);
    }
    v198 = *(_QWORD *)(v332 + 16);
    v191 = (uint64_t)v326;
    if (v198 >= *(_QWORD *)(v332 + 24) >> 1)
    {
      sub_1C07EBCDC();
      sub_1C0795C20(v202);
      v191 = (uint64_t)v326;
    }
    v199 = v332;
    *(_QWORD *)(v332 + 16) = v198 + 1;
    v200 = (_QWORD *)(v199 + 24 * v198);
    v200[4] = v194;
    v200[5] = v196;
    v200[6] = v197;
    goto LABEL_164;
  }
LABEL_165:
  sub_1C078F230();
  v203 = sub_1C106F97C();
  v204 = v332;
  v319 = *(_QWORD *)(v332 + 16);
  if (!v319)
    goto LABEL_237;
  v318 = v332 + 32;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v205 = 0;
  v206 = v320;
LABEL_167:
  if (v205 >= *(_QWORD *)(v332 + 16))
    goto LABEL_260;
  v335 = v203;
  v207 = (double *)(v318 + 24 * v205);
  v208 = *v207;
  v209 = v207[2];
  isUniquelyReferenced_nonNull_native = *(_QWORD *)((char *)v206 + v317);
  v323 = v205 + 1;
  v337 = isUniquelyReferenced_nonNull_native + 64;
  sub_1C0789DCC();
  v213 = v212 & v211;
  v338 = (unint64_t)(v214 + 63) >> 6;
  v340 = v215;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0778624();
  isa = 0;
  v336 = isUniquelyReferenced_nonNull_native;
  v333 = v208;
  while (1)
  {
    do
    {
      if (v213)
      {
        v216 = __clz(__rbit64(v213));
        v213 &= v213 - 1;
        v217 = v216 | (isa << 6);
      }
      else
      {
        v73 = __OFADD__(isa++, 1);
        if (v73)
        {
          __break(1u);
LABEL_247:
          __break(1u);
          goto LABEL_248;
        }
        if (isa >= v338)
          goto LABEL_235;
        v218 = *(_QWORD *)(v337 + 8 * isa);
        if (!v218)
        {
          sub_1C07A3E1C();
          if (v76 == v73)
            goto LABEL_235;
          sub_1C0796A08();
          if (!v218)
          {
            sub_1C07A3E1C();
            if (v76 == v73)
              goto LABEL_235;
            sub_1C0796A08();
            if (!v218)
            {
              sub_1C07A3E1C();
              if (v76 == v73)
              {
LABEL_235:
                sub_1C078F230();
                swift_release();
                sub_1C07B7CE4();
                v205 = v323;
                v206 = v320;
                v203 = v335;
                if (v323 != v319)
                  goto LABEL_167;
                v204 = sub_1C078F230();
                v203 = v335;
LABEL_237:
                if (*(_QWORD *)(v203 + 16))
                {
                  MEMORY[0x1E0C80A78](v204);
                  v258 = v309;
                  v286 = v320;
                  v287 = v309;
                  v259 = sub_1C077AEBC();
                  v260 = v293;
                  sub_1C0C95504(v259, (uint64_t (*)(uint64_t, uint64_t, double))sub_1C0C9810C);
                  v293 = v260;
                  sub_1C078F230();
                  sub_1C077B5B4();
                  sub_1C0BDA25C();
                }
                else
                {
                  sub_1C078F230();
                  v258 = v309;
                }
                v67 = v308;
                v290(v312, v291);
                v71 = v315;
                (*(void (**)(unint64_t, uint64_t))(v315 + 8))(v258, v316);
                sub_1C077B5B4();
                v70 = v307;
                if (!v307)
                {
LABEL_12:
                  v73 = __OFADD__(v67, 1);
                  v74 = v67 + 1;
                  if (v73)
                    goto LABEL_268;
                  if (v74 >= v289)
                    goto LABEL_248;
                  v75 = *(_QWORD *)(v288 + 8 * v74);
                  if (v75)
                    goto LABEL_25;
                  sub_1C07BD094();
                  if (v76 == v73)
                    goto LABEL_248;
                  sub_1C0796A08();
                  if (v75)
                    goto LABEL_24;
                  sub_1C07BD094();
                  if (v76 == v73)
                    goto LABEL_248;
                  sub_1C0796A08();
                  if (v75)
                    goto LABEL_24;
                  sub_1C07BD094();
                  if (v76 == v73)
                  {
LABEL_248:
                    swift_release();
                    v261 = v320[2];
                    v262 = v320[3];
                    v264 = v320[4];
                    v263 = v320[5];
                    v265 = v320[6];
                    v266 = v350;
                    sub_1C0778624();
                    sub_1C077584C();
                    swift_retain();
                    sub_1C0A567D4(v266, v267, v268, v269, v270, v271, v272, v273, v288, v289, (uint64_t)v290, v291, (uint64_t)v292, v293, v294, v295, v296);
                    v275 = v274;
                    sub_1C07767AC();
                    sub_1C07ACF80(&qword_1ED762CB0);
                    inited = swift_initStackObject();
                    *(_OWORD *)(inited + 16) = v306;
                    *(_QWORD *)(inited + 32) = v261;
                    *(_QWORD *)(inited + 40) = v262;
                    MEMORY[0x1E0C80A78](inited);
                    *(&v288 - 6) = v277;
                    *(&v288 - 5) = v264;
                    *(&v288 - 4) = v263;
                    *(&v288 - 3) = v265;
                    v286 = v275;
                    sub_1C077584C();
                    swift_retain();
                    sub_1C0778624();
                    v278 = v293;
                    sub_1C078017C();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_release_n();
                    result = sub_1C07758A4();
                    if (v278)
                      return result;
                    if (qword_1ED762AF0 != -1)
                      goto LABEL_270;
                    goto LABEL_250;
                  }
                  sub_1C0796A08();
                  if (!v75)
                  {
                    while (1)
                    {
                      v74 = v77 + 1;
                      if (__OFADD__(v77, 1))
                        goto LABEL_269;
                      if (v74 >= v289)
                        goto LABEL_248;
                      v75 = *(_QWORD *)(v288 + 8 * v74);
                      ++v77;
                      if (v75)
                        goto LABEL_25;
                    }
                  }
LABEL_24:
                  v74 = v77;
LABEL_25:
                  v307 = (v75 - 1) & v75;
                  v308 = v74;
                  v72 = __clz(__rbit64(v75)) + (v74 << 6);
                  goto LABEL_26;
                }
                goto LABEL_11;
              }
              sub_1C0796A08();
              if (!v218)
              {
                while (1)
                {
                  isa = v219 + 1;
                  if (__OFADD__(v219, 1))
                    goto LABEL_247;
                  if (isa >= v338)
                    goto LABEL_235;
                  v218 = *(_QWORD *)(v337 + 8 * isa);
                  ++v219;
                  if (v218)
                    goto LABEL_184;
                }
              }
            }
          }
          isa = v219;
        }
LABEL_184:
        v213 = (v218 - 1) & v218;
        v217 = __clz(__rbit64(v218)) + (isa << 6);
      }
      v220 = *(_QWORD *)(*(_QWORD *)(isUniquelyReferenced_nonNull_native + 56) + 8 * v217);
    }
    while (!*(_QWORD *)(v220 + 16));
    v342 = v213;
    v221 = (uint64_t *)(*(_QWORD *)(isUniquelyReferenced_nonNull_native + 48) + 16 * v217);
    v222 = v221[1];
    v341 = *v221;
    sub_1C1070DF8();
    sub_1C077584C();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v223 = v340;
    sub_1C106FC28();
    v224 = sub_1C1070E4C();
    v225 = -1 << *(_BYTE *)(v220 + 32);
    v226 = v224 & ~v225;
    v89 = (v220 + 56);
    sub_1C07B1990();
    if ((v227 & 1) == 0)
    {
      sub_1C0778580();
      sub_1C077E584();
      sub_1C077CFD8();
      goto LABEL_233;
    }
    isUniquelyReferenced_nonNull_native = *(_QWORD *)(v220 + 48);
    v228 = (_QWORD *)(isUniquelyReferenced_nonNull_native + 16 * v226);
    v229 = *v228 == *(_QWORD *)&v208 && v228[1] == v223;
    if (v229 || (sub_1C07785B0() & 1) != 0)
      break;
    v248 = ~v225;
    while (1)
    {
      v226 = (v226 + 1) & v248;
      sub_1C07B1990();
      if ((v249 & 1) == 0)
        break;
      v250 = (_QWORD *)(isUniquelyReferenced_nonNull_native + 16 * v226);
      v251 = *v250 == *(_QWORD *)&v208 && v250[1] == v340;
      if (v251 || (sub_1C07785B0() & 1) != 0)
        goto LABEL_192;
    }
    sub_1C0778580();
    sub_1C077E584();
    sub_1C0790A10();
LABEL_233:
    v213 = (unint64_t)v342;
  }
LABEL_192:
  sub_1C077E584();
  sub_1C0790A10();
  if (qword_1EF62E220 != -1)
    swift_once();
  v89 = qword_1EF6D1D30;
  if (!*(_QWORD *)(qword_1EF6D1D30 + 16) || (v230 = sub_1C077D774(v341, v222), (v231 & 1) == 0))
  {
    sub_1C0778580();
    goto LABEL_233;
  }
  v232 = (uint64_t *)((char *)v89[7].isa + 16 * v230);
  v234 = *v232;
  v233 = v232[1];
  sub_1C077AEBC();
  sub_1C0778580();
  v89 = v335;
  if (*(_QWORD *)(v335 + 16))
  {
    sub_1C077AEBC();
    v235 = sub_1C077D774(v234, v233);
    if ((v236 & 1) != 0)
    {
      v237 = *((double *)v89[7].isa + v235);
      sub_1C077B5B4();
      if (v237 >= v209)
        goto LABEL_232;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v344 = v89;
      v238 = sub_1C077D774(v234, v233);
      if (__OFADD__(v89[2].isa, (v239 & 1) == 0))
        goto LABEL_261;
      v240 = v238;
      v241 = v239;
      sub_1C07ACF80(&qword_1ED760850);
      v89 = &v344;
      sub_1C107090C();
      sub_1C0790A10();
      if ((v242 & 1) != 0)
      {
        v89 = v344;
        v243 = sub_1C07A1F24();
        if ((v241 & 1) != (v244 & 1))
          goto LABEL_271;
        v240 = v243;
      }
      v245 = (uint64_t)v344;
      v335 = (uint64_t)v344;
      if ((v241 & 1) == 0)
      {
        sub_1C0798FC8();
        if (v73)
        {
          __break(1u);
          goto LABEL_266;
        }
LABEL_230:
        *(_QWORD *)(v247 + 16) = v246;
        sub_1C077AEBC();
        goto LABEL_231;
      }
      goto LABEL_228;
    }
    sub_1C077B5B4();
  }
  isUniquelyReferenced_nonNull_native = sub_1C077C09C();
  v344 = v89;
  v252 = sub_1C07A1F24();
  if (!__OFADD__(v89[2].isa, (v253 & 1) == 0))
  {
    v240 = v252;
    v254 = v253;
    sub_1C07ACF80(&qword_1ED760850);
    v89 = &v344;
    sub_1C107090C();
    sub_1C0790A10();
    if ((v255 & 1) != 0)
    {
      v89 = v344;
      v256 = sub_1C07A1F24();
      if ((v254 & 1) != (v257 & 1))
        goto LABEL_271;
      v240 = v256;
    }
    v245 = (uint64_t)v344;
    v335 = (uint64_t)v344;
    if ((v254 & 1) == 0)
    {
      sub_1C0798FC8();
      if (v73)
        goto LABEL_253;
      goto LABEL_230;
    }
LABEL_228:
    *(double *)(*(_QWORD *)(v245 + 56) + 8 * v240) = v209;
LABEL_231:
    sub_1C077B5B4();
LABEL_232:
    swift_bridgeObjectRelease();
    v208 = v333;
    goto LABEL_233;
  }
  __break(1u);
LABEL_253:
  __break(1u);
LABEL_254:
  __break(1u);
LABEL_255:
  __break(1u);
LABEL_256:
  __break(1u);
LABEL_257:
  __break(1u);
LABEL_258:
  __break(1u);
LABEL_259:
  __break(1u);
LABEL_260:
  __break(1u);
LABEL_261:
  __break(1u);
LABEL_262:
  __break(1u);
LABEL_263:
  __break(1u);
LABEL_264:

  return swift_release();
}

double sub_1C0C97E1C(double a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  v5 = *(_QWORD *)(a4 + OBJC_IVAR____TtC24IntelligencePlatformCore16PeopleNameSignal_config);
  v6 = *(_QWORD *)(a4 + OBJC_IVAR____TtC24IntelligencePlatformCore16PeopleNameSignal_config + 8);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v7 = sub_1C106E530();
  v9 = v8;
  v10 = objc_allocWithZone(MEMORY[0x1E0D3DFA8]);
  sub_1C08B5430(v5, v6, 0xD000000000000012, 0x80000001C10DED40, v7, v9);
  sub_1C07D97D4();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C07F5FD8();
  return a1;
}

void sub_1C0C97EF0()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C07B2018(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore16PeopleNameSignal_config, (uint64_t (*)(_QWORD))_s10ViewConfigVMa);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C077671C();
}

uint64_t sub_1C0C97F70()
{
  sub_1C0C97EF0();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0C97F94()
{
  return type metadata accessor for PeopleNameSignal();
}

uint64_t type metadata accessor for PeopleNameSignal()
{
  uint64_t result;

  result = qword_1EF646278;
  if (!qword_1EF646278)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C0C97FD4()
{
  uint64_t result;
  unint64_t v1;

  result = _s10ViewConfigVMa();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1C0C98070()
{
  uint64_t v0;

  sub_1C0C95FA4();
  return sub_1C0882DB4(*(uint64_t (**)(void))(v0 + 8));
}

void sub_1C0C980BC(uint64_t a1@<X8>)
{
  _QWORD *v1;

  sub_1C083F944(*v1 + OBJC_IVAR____TtC24IntelligencePlatformCore16PeopleNameSignal_config, a1, (uint64_t (*)(_QWORD))_s10ViewConfigVMa);
}

void sub_1C0C980EC()
{
  sub_1C0C95F44();
}

double sub_1C0C9810C(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;

  return sub_1C0C97E1C(a3, a1, a2, *(_QWORD *)(v3 + 16));
}

uint64_t sub_1C0C98114(uint64_t a1)
{
  return sub_1C08B551C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0A1BA54);
}

uint64_t Person.mapLocation.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1C077AE90();
  return v1;
}

uint64_t sub_1C0C98158()
{
  if (qword_1EF62E2C8 != -1)
    swift_once();
  qword_1EF646340 = qword_1EF6481E8;
  unk_1EF646348 = *(_OWORD *)&qword_1EF6481F0;
  qword_1EF646358 = qword_1EF648200;
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

uint64_t static Person.type.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  if (qword_1EF62E228 != -1)
    swift_once();
  v2 = qword_1EF646358;
  *(_QWORD *)a1 = qword_1EF646340;
  *(_OWORD *)(a1 + 8) = unk_1EF646348;
  *(_QWORD *)(a1 + 24) = v2;
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

uint64_t Person.basicProperties.getter()
{
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

uint64_t Person.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_1C077AE90();
  return v1;
}

void __swiftcall Person.init(mapLocation:identifier:name:isCurrentUser:localIdentifier:contactIdentifier:birthday:anniversary:isFav:)(IntelligencePlatformCore::Person *__return_ptr retstr, Swift::String mapLocation, Swift::String_optional identifier, Swift::String_optional name, Swift::Bool_optional isCurrentUser, Swift::String_optional localIdentifier, Swift::String_optional contactIdentifier, Swift::String_optional birthday, Swift::String_optional anniversary, Swift::String_optional isFav)
{
  char *v10;
  uint64_t countAndFlagsBits;
  unint64_t object;
  uint64_t v13;
  IntelligencePlatformCore::Person *v14;
  void *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  void *v21;
  char v22;
  _QWORD *v23;
  uint64_t v24;
  Swift::String_optional *v25;
  uint64_t v26;
  Swift::String_optional *v27;
  Swift::String_optional *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  _QWORD *v34;
  _QWORD *v35;
  _QWORD *v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  _QWORD *v41;
  _QWORD *v42;
  _QWORD *v43;
  _QWORD *v44;
  _QWORD *v45;
  _QWORD *v46;

  countAndFlagsBits = localIdentifier.value._countAndFlagsBits;
  object = (unint64_t)identifier.value._object;
  v13 = identifier.value._countAndFlagsBits;
  v14 = retstr;
  if (name.value._object)
  {
    v16 = identifier.value._object;
    sub_1C077AE90();
    sub_1C078F4FC();
    v18 = v17;
    object = v17[2];
    v10 = (char *)(object + 1);
    if (object >= v17[3] >> 1)
    {
      sub_1C07A73DC();
      v18 = v32;
    }
    sub_1C078FA50();
    sub_1C0793ED8(v19);
    *(_BYTE *)(v20 + 88) = 1;
    v21 = v16;
    v14 = retstr;
  }
  else
  {
    sub_1C077AE90();
    v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v21 = (void *)object;
  }
  if (localIdentifier.value._object)
  {
    if ((sub_1C07A3A40() & 1) == 0)
    {
      sub_1C07A1288();
      v18 = v33;
    }
    sub_1C079A044();
    if (v22)
    {
      sub_1C07A73DC();
      v18 = v34;
    }
    sub_1C078FA50();
    v23[4] = 0x6564496C61636F6CLL;
    v23[5] = 0xEF7265696669746ELL;
    v23[6] = countAndFlagsBits;
    v23[7] = localIdentifier.value._object;
    sub_1C077B630((uint64_t)v23);
  }
  if (contactIdentifier.value._object)
  {
    if ((sub_1C07A3A40() & 1) == 0)
    {
      sub_1C07A1288();
      v18 = v35;
    }
    sub_1C079A044();
    if (v22)
    {
      sub_1C07A73DC();
      v18 = v36;
    }
    sub_1C078FA50();
    sub_1C078B2E4(v24);
    v25[3] = contactIdentifier;
    sub_1C077B630((uint64_t)v25);
  }
  if (birthday.value._object)
  {
    if ((sub_1C07A3A40() & 1) == 0)
    {
      sub_1C07A1288();
      v18 = v37;
    }
    sub_1C079A044();
    if (v22)
    {
      sub_1C07A73DC();
      v18 = v38;
    }
    sub_1C078FA50();
    strcpy((char *)(v26 + 32), "birthdayDate");
    *(_BYTE *)(v26 + 45) = 0;
    *(_WORD *)(v26 + 46) = -5120;
    *(Swift::String_optional *)(v26 + 48) = birthday;
    sub_1C077B630(v26);
  }
  if (anniversary.value._object)
  {
    if ((sub_1C07A3A40() & 1) == 0)
    {
      sub_1C07A1288();
      v18 = v39;
    }
    sub_1C079A044();
    if (v22)
    {
      sub_1C07A73DC();
      v18 = v40;
    }
    sub_1C078FA50();
    v27[2].value._countAndFlagsBits = 0x73726576696E6E61;
    v27[2].value._object = (void *)0xEF65746144797261;
    v27[3] = anniversary;
    sub_1C077B630((uint64_t)v27);
  }
  if (isFav.value._object)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    if ((sub_1C07A3A40() & 1) == 0)
    {
      sub_1C07A1288();
      v18 = v41;
    }
    sub_1C079A044();
    if (v22)
    {
      sub_1C07A73DC();
      v18 = v42;
    }
    v18[2] = v10;
    v28 = (Swift::String_optional *)&v18[8 * object];
    v28[2].value._countAndFlagsBits = 0x69726F7661467369;
    v28[2].value._object = (void *)0xEA00000000006574;
    v28[3] = isFav;
    v28[4] = isFav;
    v28[5].value._countAndFlagsBits = 0;
    LOBYTE(v28[5].value._object) = 1;
  }
  if (v21)
  {
    if ((sub_1C07A3A40() & 1) == 0)
    {
      sub_1C07A1288();
      v18 = v43;
    }
    sub_1C079A044();
    if (v22)
    {
      sub_1C07A73DC();
      v18 = v44;
    }
    sub_1C078FA50();
    sub_1C07A01FC();
    v29[4] = v30;
    v29[5] = 0xEA00000000007265;
    v29[6] = v13;
    v29[7] = v21;
    sub_1C077B630((uint64_t)v29);
  }
  if (isCurrentUser.value)
  {
    if ((sub_1C07A3A40() & 1) == 0)
    {
      sub_1C07A1288();
      v18 = v45;
    }
    sub_1C079A044();
    if (v22)
    {
      sub_1C07A73DC();
      v18 = v46;
    }
    v18[2] = v10;
    v31 = (uint64_t)&v18[8 * object];
    strcpy((char *)(v31 + 32), "isCurrentUser");
    *(_WORD *)(v31 + 46) = -4864;
    *(_QWORD *)(v31 + 48) = 1702195828;
    *(_QWORD *)(v31 + 56) = 0xE400000000000000;
    sub_1C077B630(v31);
  }
  v14->mapLocation = mapLocation;
  v14->basicProperties._rawValue = v18;
  v14->identifier.value._countAndFlagsBits = v13;
  v14->identifier.value._object = v21;
}

void __swiftcall Person.init(mapLocation:identifier:displayName:customIdentifier:relationship:aliases:personHandle:)(IntelligencePlatformCore::Person *__return_ptr retstr, Swift::String mapLocation, Swift::String_optional identifier, Swift::String displayName, Swift::String_optional customIdentifier, Swift::String_optional relationship, Swift::OpaquePointer_optional aliases, INPersonHandle_optional personHandle)
{
  uint64_t v8;
  uint64_t v9;
  void *object;
  uint64_t countAndFlagsBits;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD *v23;
  id v24;
  uint64_t v25;
  uint64_t rawValue;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  Swift::String_optional v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char *v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  _QWORD *v50;
  _QWORD *v51;
  _QWORD *v52;
  _QWORD *v53;
  _QWORD *v54;
  _QWORD *v55;
  _QWORD *v56;
  _QWORD *v57;
  _QWORD *v58;
  _QWORD *v59;
  void *v60;
  uint64_t v61;
  void *v62;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  unint64_t v68;

  object = customIdentifier.value._object;
  countAndFlagsBits = customIdentifier.value._countAndFlagsBits;
  v12 = (unint64_t)displayName._object;
  v13 = displayName._countAndFlagsBits;
  v14 = identifier.value._object;
  v15 = identifier.value._countAndFlagsBits;
  if (identifier.value._object)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v9 = 1;
    sub_1C078F4FC();
    v17 = v16;
    v18 = v16[2];
    v8 = v18 + 1;
    if (v18 >= v16[3] >> 1)
    {
      sub_1C0799004();
      v17 = v51;
    }
    v17[2] = v8;
    sub_1C07A01FC();
    sub_1C0793ED8(v19);
    *(_BYTE *)(v20 + 88) = 1;
  }
  else
  {
    v17 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v21 = HIBYTE(v12) & 0xF;
  if ((v12 & 0x2000000000000000) == 0)
    v21 = v13 & 0xFFFFFFFFFFFFLL;
  if (v21)
  {
    if ((sub_1C079AAA4() & 1) == 0)
    {
      sub_1C0799004();
      v17 = v52;
    }
    sub_1C07976B4();
    if (v22)
    {
      sub_1C0799004();
      v17 = v53;
    }
    v17[2] = v8;
    v23 = &v17[8 * v9];
    v23[4] = 0x4E79616C70736964;
    v23[5] = 0xEB00000000656D61;
    v23[6] = v13;
    v23[7] = v12;
    sub_1C077B630((uint64_t)v23);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v24 = relationship.value._object;
  if (object)
  {
    if ((sub_1C079AAA4() & 1) == 0)
    {
      sub_1C0799004();
      v17 = v54;
    }
    sub_1C07976B4();
    if (v22)
    {
      sub_1C0799004();
      v17 = v55;
    }
    v17[2] = v8;
    sub_1C078B2E4((uint64_t)&v17[8 * v9]);
    *(_QWORD *)(v25 + 48) = countAndFlagsBits;
    *(_QWORD *)(v25 + 56) = object;
    sub_1C077B630(v25);
  }
  rawValue = (uint64_t)aliases.value._rawValue;
  v27 = *(void **)&aliases.is_nil;
  if (relationship.value._object)
  {
    if ((sub_1C079AAA4() & 1) == 0)
    {
      sub_1C0799004();
      v17 = v56;
    }
    sub_1C07976B4();
    if (v22)
    {
      sub_1C0799004();
      v17 = v57;
    }
    v17[2] = v8;
    v28 = (uint64_t)&v17[8 * v9];
    strcpy((char *)(v28 + 32), "relationship");
    *(_BYTE *)(v28 + 45) = 0;
    *(_WORD *)(v28 + 46) = -5120;
    *(Swift::String_optional *)(v28 + 48) = relationship;
    sub_1C077B630(v28);
  }
  if (!*(_QWORD *)&aliases.is_nil)
  {
LABEL_39:
    if (aliases.value._rawValue)
      goto LABEL_40;
    goto LABEL_56;
  }
  v24 = *(id *)&aliases.is_nil;
  sub_1C0C98F2C(v24);
  if (!v29
    || (v30 = String.normalizedContactHandle()(),
        v13 = v30.value._countAndFlagsBits,
        v8 = (uint64_t)v30.value._object,
        swift_bridgeObjectRelease(),
        !v30.value._object))
  {

    goto LABEL_39;
  }
  v31 = ((unint64_t)v30.value._object >> 56) & 0xF;
  if (((uint64_t)v30.value._object & 0x2000000000000000) == 0)
    v31 = v30.value._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  if (v31)
  {
    v67 = aliases.value._rawValue;
    objc_msgSend(v24, sel_type);
    sub_1C1070C0C();
    v65 = sub_1C106FB38();
    v9 = v32;
    sub_1C0775834();
    v33 = *(_QWORD *)&aliases.is_nil;
    if ((sub_1C079AAA4() & 1) == 0)
      goto LABEL_64;
    while (1)
    {
      v34 = v17[2];
      if (v34 >= v17[3] >> 1)
      {
        sub_1C0799004();
        v17 = v59;
      }
      v17[2] = v34 + 1;
      v35 = (char *)&v17[8 * v34];
      strcpy(v35 + 32, "personHandle");
      v35[45] = 0;
      *((_WORD *)v35 + 23) = -5120;
      *((_QWORD *)v35 + 6) = v13;
      *((_QWORD *)v35 + 7) = v8;
      *((_QWORD *)v35 + 8) = v65;
      *((_QWORD *)v35 + 9) = v9;
      *((_QWORD *)v35 + 10) = 0;
      v35[88] = 1;

      v27 = (void *)v33;
      rawValue = (uint64_t)v67;
      if (!v67)
        break;
LABEL_40:
      v61 = v15;
      v62 = v14;
      if ((unint64_t)rawValue >> 62)
      {
        if (rawValue >= 0)
          v8 = rawValue & 0xFFFFFFFFFFFFFF8;
        else
          v8 = rawValue;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v33 = sub_1C10709B4();
        sub_1C0775834();
      }
      else
      {
        v33 = *(_QWORD *)((rawValue & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      v60 = v27;
      if (!v33)
        goto LABEL_55;
      if (v33 >= 1)
      {
        v36 = 0;
        v66 = v33;
        v68 = rawValue & 0xC000000000000001;
        do
        {
          if (v68)
            v37 = (id)MEMORY[0x1C3BA70DC](v36, rawValue);
          else
            v37 = *(id *)(rawValue + 8 * v36 + 32);
          v38 = v37;
          v39 = sub_1C0C98F2C(v37);
          if (v40)
          {
            v41 = v39;
            v42 = v40;
            v43 = rawValue;
            objc_msgSend(v38, sel_type);
            sub_1C1070C0C();
            v44 = sub_1C106FB38();
            v46 = v45;
            swift_bridgeObjectRelease();
            if ((sub_1C079AAA4() & 1) == 0)
            {
              sub_1C0799004();
              v17 = v49;
            }
            v47 = v17[2];
            if (v47 >= v17[3] >> 1)
            {
              sub_1C0799004();
              v17 = v50;
            }
            v17[2] = v47 + 1;
            v48 = &v17[8 * v47];
            v48[4] = 0x73657361696C61;
            v48[5] = 0xE700000000000000;
            v48[6] = v41;
            v48[7] = v42;
            v48[8] = v44;
            v48[9] = v46;
            v48[10] = 0;
            *((_BYTE *)v48 + 88) = 1;
            rawValue = v43;
            v33 = v66;
          }
          ++v36;

        }
        while (v33 != v36);
LABEL_55:
        sub_1C0775834();
        v15 = v61;
        v14 = v62;
        v27 = v60;
        break;
      }
      __break(1u);
LABEL_64:
      sub_1C0799004();
      v17 = v58;
    }
  }
  else
  {

    swift_bridgeObjectRelease();
    if (aliases.value._rawValue)
      goto LABEL_40;
  }
LABEL_56:

  retstr->mapLocation = mapLocation;
  retstr->basicProperties._rawValue = v17;
  retstr->identifier.value._countAndFlagsBits = v15;
  retstr->identifier.value._object = v14;
}

uint64_t sub_1C0C98B08()
{
  sub_1C0C98F8C();
  return sub_1C1070EE8();
}

uint64_t sub_1C0C98B30()
{
  sub_1C0C98F8C();
  return sub_1C1070EF4();
}

void Person.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;

  v3 = sub_1C07ACF80(&qword_1EF646360);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[2];
  v9[2] = v1[3];
  v10 = v7;
  v9[1] = v1[4];
  sub_1C07A9480(a1, a1[3]);
  sub_1C0C98F8C();
  sub_1C1070EB8();
  v15 = 0;
  v8 = v11;
  sub_1C1070B7C();
  if (!v8)
  {
    v12 = v10;
    v14 = 1;
    sub_1C07ACF80(&qword_1EF62FE38);
    sub_1C07EB158(&qword_1EF62FE40, (uint64_t (*)(void))sub_1C07EB11C, MEMORY[0x1E0DEAF10]);
    sub_1C1070BB8();
    v13 = 2;
    sub_1C1070B34();
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1C07757D0();
}

void Person.init(from:)(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;

  v5 = sub_1C07ACF80(&qword_1EF646370);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07A9480(a1, a1[3]);
  sub_1C0C98F8C();
  sub_1C1070E94();
  if (v2)
  {
    sub_1C0775880();
  }
  else
  {
    v23 = 0;
    v9 = sub_1C1070AA4();
    v11 = v10;
    v19 = v9;
    sub_1C07ACF80(&qword_1EF62FE38);
    v22 = 1;
    sub_1C07EB158(&qword_1EF62FE58, (uint64_t (*)(void))sub_1C07EB1C0, MEMORY[0x1E0DEAF40]);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C1070AE0();
    v21 = 2;
    v18 = v20;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v12 = sub_1C1070A5C();
    v14 = v13;
    v15 = v12;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_1C077AE90();
    v16 = v18;
    *a2 = v19;
    a2[1] = v11;
    a2[2] = v16;
    a2[3] = v15;
    a2[4] = v14;
    sub_1C0775880();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1C07757D0();
}

void sub_1C0C98F04(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  Person.init(from:)(a1, a2);
}

void sub_1C0C98F18(_QWORD *a1)
{
  Person.encode(to:)(a1);
}

uint64_t sub_1C0C98F2C(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_value);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1C106FB14();

  return v3;
}

unint64_t sub_1C0C98F8C()
{
  unint64_t result;

  result = qword_1EF646368;
  if (!qword_1EF646368)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B0F84, &type metadata for Person.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF646368);
  }
  return result;
}

unint64_t sub_1C0C98FC8(uint64_t a1)
{
  unint64_t result;

  result = sub_1C0C98FEC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0C98FEC()
{
  unint64_t result;

  result = qword_1EF646378;
  if (!qword_1EF646378)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for Person, &type metadata for Person);
    atomic_store(result, (unint64_t *)&qword_1EF646378);
  }
  return result;
}

unint64_t sub_1C0C99028(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1C0C99054();
  result = sub_1C0C99090();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0C99054()
{
  unint64_t result;

  result = qword_1EF646380;
  if (!qword_1EF646380)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for Person, &type metadata for Person);
    atomic_store(result, (unint64_t *)&qword_1EF646380);
  }
  return result;
}

unint64_t sub_1C0C99090()
{
  unint64_t result;

  result = qword_1EF646388;
  if (!qword_1EF646388)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for Person, &type metadata for Person);
    atomic_store(result, (unint64_t *)&qword_1EF646388);
  }
  return result;
}

ValueMetadata *type metadata accessor for Person()
{
  return &type metadata for Person;
}

uint64_t storeEnumTagSinglePayload for Person.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C0C99128 + 4 * byte_1C10B0E15[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C0C9915C + 4 * byte_1C10B0E10[v4]))();
}

uint64_t sub_1C0C9915C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0C99164(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0C9916CLL);
  return result;
}

uint64_t sub_1C0C99178(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0C99180);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C0C99184(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0C9918C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Person.CodingKeys()
{
  return &type metadata for Person.CodingKeys;
}

unint64_t sub_1C0C991AC()
{
  unint64_t result;

  result = qword_1EF646390;
  if (!qword_1EF646390)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B0F5C, &type metadata for Person.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF646390);
  }
  return result;
}

unint64_t sub_1C0C991EC()
{
  unint64_t result;

  result = qword_1EF646398;
  if (!qword_1EF646398)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B0ECC, &type metadata for Person.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF646398);
  }
  return result;
}

unint64_t sub_1C0C9922C()
{
  unint64_t result;

  result = qword_1EF6463A0;
  if (!qword_1EF6463A0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B0EF4, &type metadata for Person.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF6463A0);
  }
  return result;
}

uint64_t sub_1C0C9926C(uint64_t result, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  unsigned __int8 v11;
  char v12;
  char v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  char v22;

  v3 = HIBYTE(a2) & 0xF;
  v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v5 = v3;
  else
    v5 = result & 0xFFFFFFFFFFFFLL;
  if (!v5)
  {
    sub_1C07767AC();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0)
        v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v6 = (unsigned __int8 *)sub_1C10707F8();
      v7 = (uint64_t)sub_1C0C9F72C(v6, v4);
      v9 = v8 & 1;
      goto LABEL_39;
    }
    if (result == 43)
    {
      if (!v3)
        goto LABEL_53;
      if (v3 == 1)
        goto LABEL_36;
      sub_1C0795C2C();
      if (!v13 & v12)
        goto LABEL_36;
      v7 = v17;
      if (v16 != 2)
      {
        while (1)
        {
          sub_1C07B860C();
          if (!v13 & v12)
            goto LABEL_36;
          sub_1C0780C20();
          if (!v13)
            goto LABEL_36;
          v7 = v19 + v18;
          if (__OFADD__(v19, v18))
            goto LABEL_36;
          v9 = 0;
          sub_1C07788C8();
          if (v13)
            goto LABEL_39;
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1)
          {
            sub_1C0795C2C();
            if (!(!v13 & v12))
            {
              v7 = -(uint64_t)v11;
              if (v10 != 2)
              {
                while (1)
                {
                  sub_1C07B860C();
                  if (!v13 & v12)
                    goto LABEL_36;
                  sub_1C0780C20();
                  if (!v13)
                    goto LABEL_36;
                  v7 = v15 - v14;
                  if (__OFSUB__(v15, v14))
                    goto LABEL_36;
                  v9 = 0;
                  sub_1C07788C8();
                  if (v13)
                    goto LABEL_39;
                }
              }
              goto LABEL_38;
            }
          }
LABEL_36:
          v7 = 0;
          v9 = 1;
          goto LABEL_39;
        }
        __break(1u);
LABEL_53:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u)
        goto LABEL_36;
      v7 = (result - 48);
      if (v3 != 1)
      {
        while (1)
        {
          sub_1C07B860C();
          if (!v13 & v12)
            goto LABEL_36;
          sub_1C0780C20();
          if (!v13)
            goto LABEL_36;
          v7 = v21 + v20;
          if (__OFADD__(v21, v20))
            goto LABEL_36;
          v9 = 0;
          sub_1C07788C8();
          if (v13)
            goto LABEL_39;
        }
      }
    }
LABEL_38:
    v9 = 0;
    goto LABEL_39;
  }
  v7 = sub_1C0C9D888(result, a2, 10, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_1C0C9F4A4);
  v9 = v22;
LABEL_39:
  sub_1C07767AC();
  if ((v9 & 1) != 0)
    return 0;
  else
    return v7;
}

uint64_t sub_1C0C99450(uint64_t a1)
{
  return sub_1C0C9CEBC(a1, qword_1EF6463A8);
}

void static PersonalKnowledgeResult.typeDisplayRepresentation.getter(uint64_t a1@<X8>)
{
  sub_1C0C9C2C4(&qword_1EF62E230, (uint64_t)qword_1EF6463A8, a1);
}

void static PersonalKnowledgeResult.typeDisplayRepresentation.setter(uint64_t a1)
{
  sub_1C0C9C358(a1, &qword_1EF62E230, (uint64_t)qword_1EF6463A8);
}

void static PersonalKnowledgeResult.typeDisplayRepresentation.modify()
{
  uint64_t v0;

  if (qword_1EF62E230 != -1)
    swift_once();
  v0 = sub_1C077D2F8();
  sub_1C0791F34(v0, (uint64_t)qword_1EF6463A8);
  sub_1C0778534();
}

void PersonalKnowledgeResult.answerValue.getter()
{
  sub_1C079D7DC();
  sub_1C07806B4();
}

void sub_1C0C9952C()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  PersonalKnowledgeResult.answerValue.setter();
}

void PersonalKnowledgeResult.answerValue.setter()
{
  sub_1C07976C4();
  sub_1C07806B4();
}

void PersonalKnowledgeResult.answerValue.modify()
{
  uint64_t v0;
  void *v1;

  v1 = sub_1C07AE090();
  sub_1C07A0210((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = sub_1C106A57C();
  sub_1C077671C();
}

void PersonalKnowledgeResult.$answerValue.getter()
{
  sub_1C106A5A0();
  sub_1C0778534();
}

void PersonalKnowledgeResult.answerValueInteger.getter()
{
  sub_1C079D7DC();
  sub_1C07806B4();
}

void sub_1C0C99604(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;

  PersonalKnowledgeResult.answerValueInteger.getter();
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3 & 1;
}

void sub_1C0C99634()
{
  PersonalKnowledgeResult.answerValueInteger.setter();
}

void PersonalKnowledgeResult.answerValueInteger.setter()
{
  sub_1C07B014C();
  sub_1C07806B4();
}

void PersonalKnowledgeResult.answerValueInteger.modify()
{
  uint64_t v0;
  void *v1;

  v1 = sub_1C07AE090();
  sub_1C07A0210((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = sub_1C106A57C();
  sub_1C077671C();
}

void PersonalKnowledgeResult.$answerValueInteger.getter()
{
  sub_1C106A5A0();
  sub_1C0778534();
}

void PersonalKnowledgeResult.answerValueDouble.getter()
{
  sub_1C079D7DC();
  sub_1C07806B4();
}

void sub_1C0C996F8(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;

  PersonalKnowledgeResult.answerValueDouble.getter();
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3 & 1;
}

void sub_1C0C99728()
{
  PersonalKnowledgeResult.answerValueDouble.setter();
}

void PersonalKnowledgeResult.answerValueDouble.setter()
{
  sub_1C07B014C();
  sub_1C07806B4();
}

void PersonalKnowledgeResult.answerValueDouble.modify()
{
  uint64_t v0;
  void *v1;

  v1 = sub_1C07AE090();
  sub_1C07A0210((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = sub_1C106A57C();
  sub_1C077671C();
}

void PersonalKnowledgeResult.$answerValueDouble.getter()
{
  sub_1C106A5A0();
  sub_1C0778534();
}

void PersonalKnowledgeResult.answerValueDate.getter()
{
  sub_1C106A588();
  sub_1C0778534();
}

void PersonalKnowledgeResult.answerValueDate.setter()
{
  uint64_t v0;

  sub_1C079BD54();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C0778544();
  sub_1C0790A1C();
  sub_1C0782780();
  sub_1C077F38C();
  sub_1C077671C();
}

void PersonalKnowledgeResult.answerValueDate.modify()
{
  uint64_t v0;
  void *v1;

  v1 = sub_1C07AE090();
  sub_1C07A0210((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = sub_1C106A57C();
  sub_1C077671C();
}

void PersonalKnowledgeResult.$answerValueDate.getter()
{
  sub_1C106A5A0();
  sub_1C0778534();
}

void PersonalKnowledgeResult.answerValueDuration.getter()
{
  sub_1C106A588();
  sub_1C0778534();
}

void sub_1C0C9989C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void (*a6)(uint64_t))
{
  uint64_t v6;
  uint64_t v10;

  sub_1C07ACF80(a5);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v10);
  sub_1C07785B8();
  sub_1C078A924(a1, v6, a5);
  a6(v6);
  sub_1C07785E4();
}

void PersonalKnowledgeResult.answerValueDuration.setter()
{
  uint64_t v0;

  sub_1C079BD54();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C0778544();
  sub_1C0790A1C();
  sub_1C0782780();
  sub_1C077F38C();
  sub_1C077671C();
}

void PersonalKnowledgeResult.answerValueDuration.modify()
{
  uint64_t v0;
  void *v1;

  v1 = sub_1C07AE090();
  sub_1C07A0210((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = sub_1C106A57C();
  sub_1C077671C();
}

void PersonalKnowledgeResult.$answerValueDuration.getter()
{
  sub_1C106A5A0();
  sub_1C0778534();
}

void PersonalKnowledgeResult.answerValueType.getter()
{
  sub_1C106A588();
  sub_1C0778534();
}

void sub_1C0C999C0(_BYTE *a1@<X8>)
{
  char v2;

  PersonalKnowledgeResult.answerValueType.getter();
  *a1 = v2;
}

void sub_1C0C999F8()
{
  PersonalKnowledgeResult.answerValueType.setter();
}

void PersonalKnowledgeResult.answerValueType.setter()
{
  sub_1C077F87C();
  sub_1C07806B4();
}

void PersonalKnowledgeResult.answerValueType.modify()
{
  uint64_t v0;
  void *v1;

  v1 = sub_1C07AE090();
  sub_1C07A0210((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = sub_1C106A57C();
  sub_1C077671C();
}

void PersonalKnowledgeResult.$answerValueType.getter()
{
  sub_1C106A5A0();
  sub_1C0778534();
}

void PersonalKnowledgeResult.answerAttribute.getter()
{
  sub_1C106A588();
  sub_1C0778534();
}

void sub_1C0C99ABC(_BYTE *a1@<X8>)
{
  char v2;

  PersonalKnowledgeResult.answerAttribute.getter();
  *a1 = v2;
}

void sub_1C0C99AF4()
{
  PersonalKnowledgeResult.answerAttribute.setter();
}

void PersonalKnowledgeResult.answerAttribute.setter()
{
  sub_1C077F87C();
  sub_1C07806B4();
}

void PersonalKnowledgeResult.answerAttribute.modify()
{
  uint64_t v0;
  void *v1;

  v1 = sub_1C07AE090();
  sub_1C07A0210((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = sub_1C106A57C();
  sub_1C077671C();
}

void PersonalKnowledgeResult.$answerAttribute.getter()
{
  sub_1C106A5A0();
  sub_1C0778534();
}

void PersonalKnowledgeResult.answerComputation.getter()
{
  sub_1C106A588();
  sub_1C0778534();
}

void sub_1C0C99BB8(_BYTE *a1@<X8>)
{
  char v2;

  PersonalKnowledgeResult.answerComputation.getter();
  *a1 = v2;
}

void sub_1C0C99BF0()
{
  PersonalKnowledgeResult.answerComputation.setter();
}

void PersonalKnowledgeResult.answerComputation.setter()
{
  sub_1C077F87C();
  sub_1C07806B4();
}

void PersonalKnowledgeResult.answerComputation.modify()
{
  uint64_t v0;
  void *v1;

  v1 = sub_1C07AE090();
  sub_1C07A0210((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = sub_1C106A57C();
  sub_1C077671C();
}

void PersonalKnowledgeResult.$answerComputation.getter()
{
  sub_1C106A5A0();
  sub_1C0778534();
}

void PersonalKnowledgeResult.answerSource.getter()
{
  sub_1C106A588();
  sub_1C07806B4();
}

void sub_1C0C99CC0()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  PersonalKnowledgeResult.answerSource.setter();
}

void PersonalKnowledgeResult.answerSource.setter()
{
  sub_1C106A594();
  sub_1C07806B4();
}

void PersonalKnowledgeResult.answerSource.modify()
{
  uint64_t v0;
  void *v1;

  v1 = sub_1C07AE090();
  sub_1C07A0210((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = sub_1C106A57C();
  sub_1C077671C();
}

void PersonalKnowledgeResult.$answerSource.getter()
{
  sub_1C106A5A0();
  sub_1C0778534();
}

uint64_t PersonalKnowledgeResult.displayRepresentation.getter()
{
  const void *v0;
  void *v1;
  uint64_t v2;
  _BYTE v4[176];

  v1 = sub_1C0C9F708(v4, v0);
  sub_1C077EA18((uint64_t)v1, v2);
  sub_1C079D7DC();
  sub_1C0C99DAC((uint64_t)v4);
  return sub_1C106A63C();
}

uint64_t sub_1C0C99DAC(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t PersonalKnowledgeResult.description.getter()
{
  const void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v4;
  _BYTE v5[176];

  v1 = sub_1C0C9F708(v5, v0);
  sub_1C077EA18((uint64_t)v1, v2);
  sub_1C079D7DC();
  sub_1C0C99DAC((uint64_t)v5);
  return v4;
}

void PersonalKnowledgeResult.name.getter()
{
  sub_1C079D7DC();
  sub_1C07806B4();
}

void PersonalKnowledgeResult.name.setter()
{
  sub_1C07976C4();
  sub_1C07806B4();
}

void PersonalKnowledgeResult.name.modify()
{
  uint64_t v0;
  void *v1;

  v1 = sub_1C07AE090();
  sub_1C07A0210((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = sub_1C106A57C();
  sub_1C077671C();
}

void PersonalKnowledgeResult.$name.getter()
{
  sub_1C106A5A0();
  sub_1C0778534();
}

void PersonalKnowledgeResult.firstName.getter()
{
  sub_1C079D7DC();
  sub_1C07806B4();
}

void PersonalKnowledgeResult.firstName.setter()
{
  sub_1C07976C4();
  sub_1C07806B4();
}

void PersonalKnowledgeResult.firstName.modify()
{
  uint64_t v0;
  void *v1;

  v1 = sub_1C07AE090();
  sub_1C07A0210((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = sub_1C106A57C();
  sub_1C077671C();
}

void PersonalKnowledgeResult.$firstName.getter()
{
  sub_1C106A5A0();
  sub_1C0778534();
}

void PersonalKnowledgeResult.lastName.getter()
{
  sub_1C079D7DC();
  sub_1C07806B4();
}

void PersonalKnowledgeResult.lastName.setter()
{
  sub_1C07976C4();
  sub_1C07806B4();
}

void PersonalKnowledgeResult.lastName.modify()
{
  uint64_t v0;
  void *v1;

  v1 = sub_1C07AE090();
  sub_1C07A0210((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = sub_1C106A57C();
  sub_1C077671C();
}

void PersonalKnowledgeResult.$lastName.getter()
{
  sub_1C106A5A0();
  sub_1C0778534();
}

void PersonalKnowledgeResult.phoneNumber.getter()
{
  sub_1C079D7DC();
  sub_1C07806B4();
}

void PersonalKnowledgeResult.phoneNumber.setter()
{
  sub_1C07976C4();
  sub_1C07806B4();
}

void PersonalKnowledgeResult.phoneNumber.modify()
{
  uint64_t v0;
  void *v1;

  v1 = sub_1C07AE090();
  sub_1C07A0210((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = sub_1C106A57C();
  sub_1C077671C();
}

void PersonalKnowledgeResult.$phoneNumber.getter()
{
  sub_1C106A5A0();
  sub_1C0778534();
}

void PersonalKnowledgeResult.emailAddress.getter()
{
  sub_1C079D7DC();
  sub_1C07806B4();
}

void PersonalKnowledgeResult.emailAddress.setter()
{
  sub_1C07976C4();
  sub_1C07806B4();
}

void PersonalKnowledgeResult.emailAddress.modify()
{
  uint64_t v0;
  void *v1;

  v1 = sub_1C07AE090();
  sub_1C07A0210((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = sub_1C106A57C();
  sub_1C077671C();
}

void PersonalKnowledgeResult.$emailAddress.getter()
{
  sub_1C106A5A0();
  sub_1C0778534();
}

void PersonalKnowledgeResult.to.getter()
{
  sub_1C079D7DC();
  sub_1C07806B4();
}

void PersonalKnowledgeResult.to.setter()
{
  sub_1C07976C4();
  sub_1C07806B4();
}

void PersonalKnowledgeResult.to.modify()
{
  uint64_t v0;
  void *v1;

  v1 = sub_1C07AE090();
  sub_1C07A0210((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = sub_1C106A57C();
  sub_1C077671C();
}

void PersonalKnowledgeResult.$to.getter()
{
  sub_1C106A5A0();
  sub_1C0778534();
}

void PersonalKnowledgeResult.from.getter()
{
  sub_1C079D7DC();
  sub_1C07806B4();
}

void PersonalKnowledgeResult.from.setter()
{
  sub_1C07976C4();
  sub_1C07806B4();
}

void PersonalKnowledgeResult.from.modify()
{
  uint64_t v0;
  void *v1;

  v1 = sub_1C07AE090();
  sub_1C07A0210((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = sub_1C106A57C();
  sub_1C077671C();
}

void PersonalKnowledgeResult.$from.getter()
{
  sub_1C106A5A0();
  sub_1C0778534();
}

void PersonalKnowledgeResult.relationshipName.getter()
{
  sub_1C079D7DC();
  sub_1C07806B4();
}

void PersonalKnowledgeResult.relationshipName.setter()
{
  sub_1C07976C4();
  sub_1C07806B4();
}

void PersonalKnowledgeResult.relationshipName.modify()
{
  uint64_t v0;
  void *v1;

  v1 = sub_1C07AE090();
  sub_1C07A0210((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = sub_1C106A57C();
  sub_1C077671C();
}

void PersonalKnowledgeResult.$relationshipName.getter()
{
  sub_1C106A5A0();
  sub_1C0778534();
}

void PersonalKnowledgeResult.address.getter()
{
  sub_1C079D7DC();
  sub_1C07806B4();
}

void PersonalKnowledgeResult.address.setter()
{
  sub_1C07976C4();
  sub_1C07806B4();
}

void PersonalKnowledgeResult.address.modify()
{
  uint64_t v0;
  void *v1;

  v1 = sub_1C07AE090();
  sub_1C07A0210((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = sub_1C106A57C();
  sub_1C077671C();
}

void PersonalKnowledgeResult.$address.getter()
{
  sub_1C106A5A0();
  sub_1C0778534();
}

void PersonalKnowledgeResult.startDate.getter()
{
  sub_1C106A588();
  sub_1C0778534();
}

void PersonalKnowledgeResult.startDate.setter()
{
  uint64_t v0;

  sub_1C079BD54();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C0778544();
  sub_1C0790A1C();
  sub_1C0782780();
  sub_1C077F38C();
  sub_1C077671C();
}

void PersonalKnowledgeResult.startDate.modify()
{
  uint64_t v0;
  void *v1;

  v1 = sub_1C07AE090();
  sub_1C07A0210((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = sub_1C106A57C();
  sub_1C077671C();
}

void PersonalKnowledgeResult.$startDate.getter()
{
  sub_1C106A5A0();
  sub_1C0778534();
}

void PersonalKnowledgeResult.endDate.getter()
{
  sub_1C106A588();
  sub_1C0778534();
}

void PersonalKnowledgeResult.endDate.setter()
{
  uint64_t v0;

  sub_1C079BD54();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C0778544();
  sub_1C0790A1C();
  sub_1C0782780();
  sub_1C077F38C();
  sub_1C077671C();
}

void PersonalKnowledgeResult.endDate.modify()
{
  uint64_t v0;
  void *v1;

  v1 = sub_1C07AE090();
  sub_1C07A0210((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = sub_1C106A57C();
  sub_1C077671C();
}

void PersonalKnowledgeResult.$endDate.getter()
{
  sub_1C106A5A0();
  sub_1C0778534();
}

void PersonalKnowledgeResult.app.getter()
{
  sub_1C079D7DC();
  sub_1C07806B4();
}

void PersonalKnowledgeResult.app.setter()
{
  sub_1C07976C4();
  sub_1C07806B4();
}

void PersonalKnowledgeResult.app.modify()
{
  uint64_t v0;
  void *v1;

  v1 = sub_1C07AE090();
  sub_1C07A0210((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = sub_1C106A57C();
  sub_1C077671C();
}

void PersonalKnowledgeResult.$app.getter()
{
  sub_1C106A5A0();
  sub_1C0778534();
}

void PersonalKnowledgeResult.interest.getter()
{
  sub_1C079D7DC();
  sub_1C07806B4();
}

void sub_1C0C9A6A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v6;

  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v6 = sub_1C079987C();
  a5(v6);
  sub_1C077671C();
}

void PersonalKnowledgeResult.interest.setter()
{
  sub_1C07976C4();
  sub_1C07806B4();
}

void PersonalKnowledgeResult.interest.modify()
{
  uint64_t v0;
  void *v1;

  v1 = sub_1C07AE090();
  sub_1C07A0210((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = sub_1C106A57C();
  sub_1C077671C();
}

void sub_1C0C9A728(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 32))(*a1, 0);
  free(v1);
}

void PersonalKnowledgeResult.$interest.getter()
{
  sub_1C106A5A0();
  sub_1C0778534();
}

void PersonalKnowledgeResult.init()()
{
  uint64_t v0;

  sub_1C0779670();
  sub_1C079B940();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C0780A08();
  sub_1C07ACF80(&qword_1EF646410);
  sub_1C07851D0();
  sub_1C07AD344();
}

void sub_1C0C9A7C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 88) = a1;
  sub_1C07ACF80(&qword_1EF646418);
  sub_1C07A56BC();
  *(_QWORD *)(v2 - 96) = MEMORY[0x1C3BA0F08](v1);
  sub_1C07ACF80(&qword_1EF646420);
  sub_1C078B2F8();
  *(_QWORD *)(v2 - 104) = MEMORY[0x1C3BA0EFC](v1);
  sub_1C07ACF80(&qword_1EF646428);
  sub_1C07B1E40();
  sub_1C079CEF0();
  sub_1C07B5AB8();
}

void sub_1C0C9A830(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 112) = a1;
  sub_1C07ACF80(&qword_1EF646430);
  sub_1C0793EEC();
  *(_QWORD *)(v2 - 120) = MEMORY[0x1C3BA0ED8](v1);
  sub_1C07ACF80(&qword_1EF646438);
  sub_1C07A81E8();
  sub_1C0C9AAC4();
  sub_1C07B6300();
}

void sub_1C0C9A878(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 128) = a1;
  sub_1C07ACF80(&qword_1EF646448);
  sub_1C07A4A98();
  sub_1C0C9AB00();
  sub_1C07B6300();
}

void sub_1C0C9A8AC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 136) = a1;
  sub_1C07ACF80(&qword_1EF646458);
  sub_1C07A4A98();
  sub_1C0C9AB3C();
  sub_1C07B6300();
}

void sub_1C0C9A8D8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 144) = a1;
  sub_1C07ACF80(&qword_1EF646468);
  sub_1C079530C();
  sub_1C07AD344();
}

void sub_1C0C9A8F8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 152) = a1;
  sub_1C07ACF80(&qword_1EF646470);
  sub_1C07A4A98();
  sub_1C07B6034();
}

void sub_1C0C9A920(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 160) = a1;
  sub_1C0781EFC();
  sub_1C07AD344();
}

void sub_1C0C9A938(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 168) = a1;
  sub_1C07A4A98();
  sub_1C07AD344();
}

void sub_1C0C9A950(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 176) = a1;
  sub_1C07A4A98();
  sub_1C07AD344();
}

void sub_1C0C9A968(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 184) = a1;
  sub_1C07A4A98();
  sub_1C07AD344();
}

void sub_1C0C9A980(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 192) = a1;
  sub_1C0776AE4();
  sub_1C07AD344();
}

void sub_1C0C9A998(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 200) = a1;
  sub_1C07A4A98();
  sub_1C07AD344();
}

void sub_1C0C9A9B0()
{
  sub_1C0781EFC();
  sub_1C07AD344();
}

void sub_1C0C9A9C4()
{
  sub_1C07A4A98();
  sub_1C07AD344();
}

void sub_1C0C9A9DC()
{
  sub_1C0776AE4();
  sub_1C07B5AB8();
}

void sub_1C0C9A9F0()
{
  uint64_t v0;

  sub_1C07A4A98();
  MEMORY[0x1C3BA0EE4](v0);
  sub_1C078D864();
  sub_1C07B6034();
}

void sub_1C0C9AA30()
{
  sub_1C078D864();
  sub_1C07B6034();
}

void sub_1C0C9AA50(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v9 = *(_QWORD *)(v8 - 96);
  *v1 = *(_QWORD *)(v8 - 88);
  v1[1] = v9;
  v10 = *(_QWORD *)(v8 - 112);
  v1[2] = *(_QWORD *)(v8 - 104);
  v1[3] = v10;
  v11 = *(_QWORD *)(v8 - 128);
  v1[4] = *(_QWORD *)(v8 - 120);
  v1[5] = v11;
  v12 = *(_QWORD *)(v8 - 144);
  v1[6] = *(_QWORD *)(v8 - 136);
  v1[7] = v12;
  v13 = *(_QWORD *)(v8 - 160);
  v1[8] = *(_QWORD *)(v8 - 152);
  v1[9] = v13;
  v14 = *(_QWORD *)(v8 - 176);
  v1[10] = *(_QWORD *)(v8 - 168);
  v1[11] = v14;
  v15 = *(_QWORD *)(v8 - 192);
  v1[12] = *(_QWORD *)(v8 - 184);
  v1[13] = v15;
  v1[14] = *(_QWORD *)(v8 - 200);
  v1[15] = v7;
  v1[16] = v2;
  v1[17] = v3;
  v1[18] = v6;
  v1[19] = v4;
  v1[20] = v5;
  v1[21] = a1;
  sub_1C0776760();
}

unint64_t sub_1C0C9AAC4()
{
  unint64_t result;

  result = qword_1EF646440;
  if (!qword_1EF646440)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PersonalKnowledgeResult.AnswerValueType, &type metadata for PersonalKnowledgeResult.AnswerValueType);
    atomic_store(result, (unint64_t *)&qword_1EF646440);
  }
  return result;
}

unint64_t sub_1C0C9AB00()
{
  unint64_t result;

  result = qword_1EF646450;
  if (!qword_1EF646450)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PersonalKnowledgeResult.AnswerAttribute, &type metadata for PersonalKnowledgeResult.AnswerAttribute);
    atomic_store(result, (unint64_t *)&qword_1EF646450);
  }
  return result;
}

unint64_t sub_1C0C9AB3C()
{
  unint64_t result;

  result = qword_1EF646460;
  if (!qword_1EF646460)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PersonalKnowledgeResult.AnswerComputation, &type metadata for PersonalKnowledgeResult.AnswerComputation);
    atomic_store(result, (unint64_t *)&qword_1EF646460);
  }
  return result;
}

void PersonalKnowledgeResult.init(answerValue:)()
{
  uint64_t v0;

  sub_1C0779670();
  sub_1C079B940();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C0778564();
  sub_1C07ACF80(&qword_1EF646410);
  sub_1C07851D0();
  sub_1C07B7480();
}

void sub_1C0C9ABE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 408) = a1;
  sub_1C07ACF80(&qword_1EF646418);
  sub_1C078A08C();
  sub_1C07A56BC();
  MEMORY[0x1C3BA0F08](v1);
  sub_1C07ACF80(&qword_1EF646420);
  swift_retain();
  sub_1C078B2F8();
  MEMORY[0x1C3BA0EFC](v1);
  sub_1C07ACF80(&qword_1EF646428);
  swift_retain();
  sub_1C07B1E40();
  sub_1C079CEF0();
  sub_1C0C9F738();
}

void sub_1C0C9AC70()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C07ACF80(&qword_1EF646430);
  swift_retain();
  sub_1C0793EEC();
  *(_QWORD *)(v1 - 416) = MEMORY[0x1C3BA0ED8](v0);
  sub_1C07ACF80(&qword_1EF646438);
  sub_1C078A08C();
  sub_1C07A81E8();
  sub_1C0C9AAC4();
  sub_1C0788A04();
}

void sub_1C0C9ACCC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 424) = a1;
  sub_1C07ACF80(&qword_1EF646448);
  sub_1C078A08C();
  sub_1C079E7A8();
  sub_1C0C9AB00();
  sub_1C0788A04();
}

void sub_1C0C9AD08(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 432) = a1;
  sub_1C07ACF80(&qword_1EF646458);
  sub_1C078A08C();
  sub_1C079E7A8();
  sub_1C0C9AB3C();
  sub_1C0788A04();
}

void sub_1C0C9AD3C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 312) = a1;
  sub_1C07ACF80(&qword_1EF646468);
  sub_1C078A08C();
  sub_1C079530C();
  sub_1C07B7480();
}

void sub_1C0C9AD64(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 328) = a1;
  sub_1C07ACF80(&qword_1EF646470);
  swift_retain();
  sub_1C079E7A8();
  sub_1C0C9F744();
}

void sub_1C0C9AD9C(uint64_t a1)
{
  uint64_t v1;

  sub_1C07B4964(a1, v1 - 32);
  sub_1C078A4D0();
  sub_1C07B7480();
}

void sub_1C0C9ADB8(uint64_t a1)
{
  uint64_t v1;

  sub_1C07B4964(a1, v1 - 40);
  sub_1C079E7A8();
  sub_1C07B7480();
}

void sub_1C0C9ADD4(uint64_t a1)
{
  uint64_t v1;

  sub_1C07B4964(a1, v1 - 48);
  sub_1C079E7A8();
  sub_1C07B7480();
}

void sub_1C0C9ADF0(uint64_t a1)
{
  uint64_t v1;

  sub_1C07B4964(a1, v1 - 64);
  sub_1C079E7A8();
  sub_1C07B7480();
}

void sub_1C0C9AE0C(uint64_t a1)
{
  uint64_t v1;

  sub_1C07B4964(a1, v1 - 80);
  sub_1C078DC58();
  sub_1C07B7480();
}

void sub_1C0C9AE28(uint64_t a1)
{
  uint64_t v1;

  sub_1C07B4964(a1, v1 - 88);
  sub_1C079E7A8();
  sub_1C07B7480();
}

void sub_1C0C9AE44(uint64_t a1)
{
  uint64_t v1;

  sub_1C07B4964(a1, v1 - 96);
  sub_1C078A4D0();
  sub_1C07B7480();
}

void sub_1C0C9AE5C(uint64_t a1)
{
  uint64_t v1;

  sub_1C07B4964(a1, v1 - 104);
  sub_1C079E7A8();
  sub_1C07B7480();
}

void sub_1C0C9AE78(uint64_t a1)
{
  uint64_t v1;

  sub_1C07B4964(a1, v1 - 112);
  sub_1C078DC58();
  sub_1C0C9F738();
}

void sub_1C0C9AE90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1C07B4964(a1, v2 - 120);
  sub_1C079E7A8();
  v3 = MEMORY[0x1C3BA0EE4](v1);
  sub_1C07B4964(v3, v2 - 184);
  sub_1C078D864();
  sub_1C0C9F744();
}

void sub_1C0C9AEDC()
{
  swift_retain();
  sub_1C078D864();
  sub_1C07B7480();
}

void sub_1C0C9AF00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)(v6 - 264) = *(_QWORD *)(v6 - 408);
  *(_QWORD *)(v6 - 256) = v3;
  *(_QWORD *)(v6 - 248) = v4;
  *(_QWORD *)(v6 - 240) = v5;
  v7 = *(_QWORD *)(v6 - 424);
  *(_QWORD *)(v6 - 232) = *(_QWORD *)(v6 - 416);
  *(_QWORD *)(v6 - 224) = v7;
  v8 = *(_QWORD *)(v6 - 312);
  *(_QWORD *)(v6 - 216) = *(_QWORD *)(v6 - 432);
  *(_QWORD *)(v6 - 208) = v8;
  v9 = *(_QWORD *)(v6 - 288);
  *(_QWORD *)(v6 - 200) = *(_QWORD *)(v6 - 328);
  *(_QWORD *)(v6 - 192) = v9;
  v10 = *(_QWORD *)(v6 - 304);
  *(_QWORD *)(v6 - 184) = *(_QWORD *)(v6 - 296);
  *(_QWORD *)(v6 - 176) = v10;
  v11 = *(_QWORD *)(v6 - 336);
  *(_QWORD *)(v6 - 168) = *(_QWORD *)(v6 - 320);
  *(_QWORD *)(v6 - 160) = v11;
  v12 = *(_QWORD *)(v6 - 352);
  *(_QWORD *)(v6 - 152) = *(_QWORD *)(v6 - 344);
  *(_QWORD *)(v6 - 144) = v12;
  v13 = *(_QWORD *)(v6 - 368);
  *(_QWORD *)(v6 - 136) = *(_QWORD *)(v6 - 360);
  *(_QWORD *)(v6 - 128) = v13;
  *(_QWORD *)(v6 - 120) = *(_QWORD *)(v6 - 376);
  *(_QWORD *)(v6 - 112) = v2;
  *(_QWORD *)(v6 - 104) = v1;
  *(_QWORD *)(v6 - 96) = a1;
  *(_QWORD *)(v6 - 280) = *(_QWORD *)(v6 - 400);
  *(_QWORD *)(v6 - 272) = *(_QWORD *)(v6 - 392);
  swift_retain();
  sub_1C0A5B12C(v6 - 264);
  sub_1C106A594();
  sub_1C0C99DAC(v6 - 264);
  sub_1C0C99DAC(v6 - 264);
  sub_1C0A5B12C(v6 - 264);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1C07797A4();
  sub_1C07797A4();
  sub_1C07797A4();
  sub_1C07797A4();
  sub_1C07797A4();
  sub_1C07797A4();
  sub_1C07797A4();
  sub_1C07797A4();
  sub_1C07797A4();
  sub_1C07797A4();
  sub_1C07797A4();
  sub_1C07797A4();
  sub_1C07797A4();
  swift_release();
  swift_release();
  sub_1C0C9F708(*(void **)(v6 - 384), (const void *)(v6 - 264));
  sub_1C0776760();
}

void static PersonalKnowledgeResult.buildBasedOnKnosisAnswer(answer:resultAttribute:dateComponentsFormatter:)(uint64_t a1@<X1>, void *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[176];

  sub_1C07ACF80(&qword_1EF646478);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  sub_1C07785B8();
  v8 = sub_1C106D768();
  if (v9)
  {
    v10 = v8;
    v11 = v9;
    sub_1C078A924(a1, v3, &qword_1EF646478);
    PersonalKnowledgeResult.init(_:resultAttribute:dateComponentsFormatter:)(v10, v11, v3, (uint64_t)a2, (uint64_t)v12);
  }
  sub_1C0C9B194(v12);
  sub_1C0C9B19C((uint64_t)v12, a3);
  sub_1C07785E4();
}

void sub_1C0C9B194(void *a1)
{
  bzero(a1, 0xB0uLL);
}

uint64_t sub_1C0C9B19C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1EF641BB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void PersonalKnowledgeResult.init(_:resultAttribute:dateComponentsFormatter:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[19];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v21[18] = a4;
  v23 = a3;
  v24 = a2;
  v21[15] = a1;
  v21[13] = a5;
  sub_1C07ACF80(&qword_1EF646408);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  sub_1C077AED0();
  v21[3] = v6;
  MEMORY[0x1E0C80A78](v7);
  v21[2] = (char *)v21 - v8;
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v9);
  sub_1C077AED0();
  v21[1] = v10;
  MEMORY[0x1E0C80A78](v11);
  v21[0] = (char *)v21 - v12;
  v13 = sub_1C106F0C4();
  v21[10] = *(_QWORD *)(v13 - 8);
  v21[11] = v13;
  MEMORY[0x1E0C80A78](v13);
  sub_1C077AE40();
  v21[9] = v14;
  v15 = sub_1C106F0DC();
  v21[7] = *(_QWORD *)(v15 - 8);
  v21[8] = v15;
  MEMORY[0x1E0C80A78](v15);
  sub_1C077AE40();
  v21[6] = v16;
  sub_1C07ACF80(&qword_1EF646478);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v17);
  sub_1C077AE40();
  v21[14] = v18;
  v22 = sub_1C106F088();
  v21[12] = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  sub_1C077AE40();
  v21[5] = v19;
  sub_1C079B940();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v20);
  sub_1C0778564();
  sub_1C07ACF80(&qword_1EF646410);
  sub_1C07851D0();
  sub_1C07B19A4();
}

void sub_1C0C9B3A8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C07ACF80(&qword_1EF646418);
  swift_retain();
  sub_1C07A56BC();
  v0[34] = MEMORY[0x1C3BA0F08](v1);
  sub_1C07ACF80(&qword_1EF646420);
  sub_1C079D7E4();
  sub_1C078B2F8();
  v0[35] = MEMORY[0x1C3BA0EFC](v1);
  v0[22] = sub_1C07ACF80(&qword_1EF646428);
  swift_retain();
  sub_1C07B1E40();
  sub_1C079CEF0();
  v0[28] = MEMORY[0x1C3BA0EE4](v1);
  sub_1C07ACF80(&qword_1EF646430);
  sub_1C079D7E4();
  sub_1C0793EEC();
  v0[21] = MEMORY[0x1C3BA0ED8](v1);
  sub_1C07ACF80(&qword_1EF646438);
  sub_1C079D7E4();
  sub_1C07A81E8();
  sub_1C0C9AAC4();
  sub_1C07B8060();
}

void sub_1C0C9B484(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 304) = a1;
  sub_1C07ACF80(&qword_1EF646448);
  sub_1C079D7E4();
  sub_1C07881BC();
  sub_1C0C9AB00();
  sub_1C07B8060();
}

void sub_1C0C9B4BC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 296) = a1;
  sub_1C07ACF80(&qword_1EF646458);
  sub_1C079D7E4();
  sub_1C07881BC();
  sub_1C0C9AB3C();
  sub_1C07B8060();
}

void sub_1C0C9B4EC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 256) = a1;
  sub_1C07ACF80(&qword_1EF646468);
  sub_1C079D7E4();
  sub_1C079530C();
  sub_1C07B19A4();
}

void sub_1C0C9B510(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 264) = a1;
  sub_1C07ACF80(&qword_1EF646470);
  swift_retain();
  sub_1C07881BC();
  sub_1C0782E78();
}

void sub_1C0C9B544(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 288) = a1;
  swift_retain();
  sub_1C07AFB18();
  sub_1C07B19A4();
}

void sub_1C0C9B560(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 232) = a1;
  swift_retain();
  sub_1C07881BC();
  sub_1C07B19A4();
}

void sub_1C0C9B57C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 200) = a1;
  swift_retain();
  sub_1C07881BC();
  sub_1C07B19A4();
}

void sub_1C0C9B598(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 216) = a1;
  swift_retain();
  sub_1C07881BC();
  sub_1C07B19A4();
}

void sub_1C0C9B5B4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 192) = a1;
  swift_retain();
  sub_1C07893BC();
  sub_1C106AA20();
  sub_1C07B19A4();
}

void sub_1C0C9B5D4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 184) = a1;
  swift_retain();
  sub_1C07881BC();
  sub_1C07B19A4();
}

void sub_1C0C9B5F0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 248) = a1;
  swift_retain();
  sub_1C07AFB18();
  sub_1C07B19A4();
}

void sub_1C0C9B608(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 240) = a1;
  swift_retain();
  sub_1C07881BC();
  sub_1C07B19A4();
}

void sub_1C0C9B624()
{
  uint64_t v0;

  swift_retain();
  sub_1C07893BC();
  sub_1C106AA20();
  MEMORY[0x1C3BA0EE4](v0);
  swift_retain();
  sub_1C07881BC();
  MEMORY[0x1C3BA0EE4](v0);
  swift_retain();
  sub_1C078D864();
  sub_1C0782E78();
}

void *sub_1C0C9B694(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  Swift::String v34;
  int v35;
  void *v36;
  uint64_t v37;
  char v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  Swift::String v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  swift_retain();
  sub_1C078D864();
  v8 = v6;
  v9 = *(_QWORD *)(v1 + 168);
  v10 = MEMORY[0x1C3BA0EF0](v8);
  v11 = *(_QWORD *)(v1 + 272);
  *(_QWORD *)(v1 + 504) = v3;
  *(_QWORD *)(v1 + 512) = v11;
  *(_QWORD *)(v1 + 520) = *(_QWORD *)(v1 + 280);
  v12 = *(_QWORD *)(v1 + 232);
  *(_QWORD *)(v1 + 528) = *(_QWORD *)(v1 + 224);
  *(_QWORD *)(v1 + 536) = v9;
  *(_QWORD *)(v1 + 544) = *(_QWORD *)(v1 + 304);
  *(_QWORD *)(v1 + 552) = *(_QWORD *)(v1 + 296);
  *(_QWORD *)(v1 + 560) = *(_QWORD *)(v1 + 256);
  *(_QWORD *)(v1 + 568) = *(_QWORD *)(v1 + 264);
  *(_QWORD *)(v1 + 576) = *(_QWORD *)(v1 + 288);
  *(_QWORD *)(v1 + 584) = v12;
  *(_QWORD *)(v1 + 592) = *(_QWORD *)(v1 + 200);
  v13 = *(_QWORD *)(v1 + 216);
  *(_QWORD *)(v1 + 600) = v13;
  *(_QWORD *)(v1 + 608) = *(_QWORD *)(v1 + 192);
  *(_QWORD *)(v1 + 616) = *(_QWORD *)(v1 + 184);
  *(_QWORD *)(v1 + 624) = *(_QWORD *)(v1 + 248);
  *(_QWORD *)(v1 + 632) = *(_QWORD *)(v1 + 240);
  *(_QWORD *)(v1 + 176) = v2;
  *(_QWORD *)(v1 + 640) = v2;
  *(_QWORD *)(v1 + 648) = v4;
  *(_QWORD *)(v1 + 128) = v5;
  *(_QWORD *)(v1 + 136) = a1;
  *(_QWORD *)(v1 + 656) = v5;
  *(_QWORD *)(v1 + 664) = a1;
  *(_QWORD *)(v1 + 672) = v10;
  v14 = *(_QWORD *)(v1 + 208);
  *(_QWORD *)(v1 + 328) = *(_QWORD *)(v1 + 120);
  *(_QWORD *)(v1 + 336) = v14;
  swift_retain();
  sub_1C078CD2C();
  *(_QWORD *)(v1 + 208) = v3;
  v15 = *(_QWORD *)(v1 + 160);
  sub_1C106A594();
  sub_1C0786674();
  v16 = *(_QWORD *)(v1 + 112);
  sub_1C078A924(v15, v16, &qword_1EF646478);
  v17 = v16;
  v18 = v16;
  v19 = *(_QWORD *)(v1 + 152);
  if (sub_1C07B2D80(v18, 1, v19) == 1)
  {
    sub_1C077C51C();
    sub_1C0784B94(v15, &qword_1EF646478);
    sub_1C07AA1A0();
    v20 = *(_QWORD *)(v1 + 304);
    *(_QWORD *)(v1 + 360) = v9;
    *(_QWORD *)(v1 + 368) = v20;
    v21 = *(_QWORD *)(v1 + 256);
    *(_QWORD *)(v1 + 376) = *(_QWORD *)(v1 + 296);
    *(_QWORD *)(v1 + 384) = v21;
    v22 = *(_QWORD *)(v1 + 288);
    *(_QWORD *)(v1 + 392) = *(_QWORD *)(v1 + 264);
    *(_QWORD *)(v1 + 400) = v22;
    v24 = *(_QWORD *)(v1 + 192);
    v23 = *(_QWORD *)(v1 + 200);
    *(_QWORD *)(v1 + 408) = *(_QWORD *)(v1 + 232);
    *(_QWORD *)(v1 + 416) = v23;
    *(_QWORD *)(v1 + 424) = v13;
    *(_QWORD *)(v1 + 432) = v24;
    sub_1C07B9868();
    v25 = *(_QWORD *)(v1 + 128);
    v26 = *(_QWORD *)(v1 + 136);
    *(_QWORD *)(v1 + 472) = v4;
    *(_QWORD *)(v1 + 480) = v25;
    *(_QWORD *)(v1 + 488) = v26;
    *(_QWORD *)(v1 + 496) = v10;
    sub_1C07B9B6C();
    sub_1C0784B94(v17, &qword_1EF646478);
    v27 = *(void **)(v1 + 104);
  }
  else
  {
    *(_QWORD *)(v1 + 32) = v10;
    *(_QWORD *)(v1 + 120) = v4;
    v28 = *(_QWORD *)(v1 + 96);
    v29 = *(_QWORD *)(v1 + 40);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32))(v29, v17, v19);
    v30 = *(_QWORD *)(v1 + 48);
    sub_1C106F070();
    v31 = sub_1C106F0D0();
    v33 = v32;
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 56) + 8))(v30, *(_QWORD *)(v1 + 64));
    v34._countAndFlagsBits = v31;
    v34._object = v33;
    PersonalKnowledgeResult.AnswerAttribute.init(rawValue:)(v34);
    v35 = *(unsigned __int8 *)(v1 + 328);
    v36 = *(void **)(v1 + 144);
    if (v35 != 18)
    {
      *(_BYTE *)(v1 + 328) = v35;
      sub_1C078CD2C();
      sub_1C106A594();
      sub_1C0786674();
      if (v35 == 15)
      {
        sub_1C078CD2C();
        sub_1C07A87B8();
        sub_1C0786674();
        v37 = sub_1C07AA468();
        if ((v38 & 1) == 0)
        {
          v39 = objc_msgSend(v36, sel_stringFromTimeInterval_, *(double *)&v37);
          if (v39)
          {
            v40 = v39;
            v41 = sub_1C106FB14();
            v43 = v42;

            *(_QWORD *)(v1 + 328) = v41;
            *(_QWORD *)(v1 + 336) = v43;
            v36 = *(void **)(v1 + 144);
            sub_1C078CD2C();
            sub_1C106A594();
            sub_1C0786674();
          }
        }
      }
    }
    v44 = *(_QWORD *)(v1 + 72);
    sub_1C106F07C();
    v45 = sub_1C106F0B8();
    v47 = v46;
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 80) + 8))(v44, *(_QWORD *)(v1 + 88));
    v48._countAndFlagsBits = v45;
    v48._object = v47;
    PersonalKnowledgeResult.AnswerValueType.init(rawValue:)(v48);
    v49 = *(unsigned __int8 *)(v1 + 320);
    if ((_DWORD)v49 != 5)
    {
      *(_BYTE *)(v1 + 328) = v49;
      sub_1C078CD2C();
      sub_1C106A594();
      sub_1C0786674();
      __asm { BR              X9 }
    }

    sub_1C077B374(v50, &qword_1EF646478);
    (*(void (**)(uint64_t, _QWORD))(v28 + 8))(v29, *(_QWORD *)(v1 + 152));
    sub_1C07AA1A0();
    sub_1C079F034();
    *(_QWORD *)(v1 + 424) = *(_QWORD *)(v1 + 216);
    sub_1C07AD7BC();
    v51 = *(_QWORD *)(v1 + 136);
    *(_QWORD *)(v1 + 480) = v49;
    *(_QWORD *)(v1 + 488) = v51;
    *(_QWORD *)(v1 + 496) = *(_QWORD *)(v1 + 32);
    sub_1C0C99DAC(v1 + 328);
    v27 = *(void **)(v1 + 104);
  }
  sub_1C078CD2C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return sub_1C0C9F708(v27, (const void *)(v1 + 504));
}

IntelligencePlatformCore::PersonalKnowledgeResult::AnswerAttribute_optional __swiftcall PersonalKnowledgeResult.AnswerAttribute.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  unint64_t v2;
  char v3;
  IntelligencePlatformCore::PersonalKnowledgeResult::AnswerAttribute_optional result;

  sub_1C0C9F710();
  v2 = sub_1C1070D08();
  sub_1C07767AC();
  v3 = 18;
  if (v2 < 0x12)
    v3 = v2;
  *v1 = v3;
  sub_1C077671C();
  return result;
}

IntelligencePlatformCore::PersonalKnowledgeResult::AnswerValueType_optional __swiftcall PersonalKnowledgeResult.AnswerValueType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  unint64_t v2;
  char v3;
  IntelligencePlatformCore::PersonalKnowledgeResult::AnswerValueType_optional result;

  sub_1C0C9F710();
  v2 = sub_1C1070A2C();
  sub_1C07767AC();
  v3 = 5;
  if (v2 < 5)
    v3 = v2;
  *v1 = v3;
  sub_1C077671C();
  return result;
}

uint64_t sub_1C0C9C198()
{
  sub_1C0C9F468();
  return sub_1C106A4EC();
}

uint64_t sub_1C0C9C1D0()
{
  sub_1C0C9F468();
  return sub_1C106A4E0();
}

uint64_t sub_1C0C9C210()
{
  sub_1C0A5B27C();
  return sub_1C106A504();
}

uint64_t sub_1C0C9C24C()
{
  sub_1C0C9DC34();
  return sub_1C106A6C0();
}

uint64_t sub_1C0C9C284(uint64_t a1)
{
  return sub_1C0C9CEBC(a1, qword_1EF6463C0);
}

void static PersonalKnowledgeResult.AnswerAttribute.typeDisplayRepresentation.getter(uint64_t a1@<X8>)
{
  sub_1C0C9C2C4(&qword_1EF62E238, (uint64_t)qword_1EF6463C0, a1);
}

void sub_1C0C9C2C4(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_1C077D2F8();
  v6 = sub_1C079E000(v5, a2);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
  sub_1C077C0D8();
}

void static PersonalKnowledgeResult.AnswerAttribute.typeDisplayRepresentation.setter(uint64_t a1)
{
  sub_1C0C9C358(a1, &qword_1EF62E238, (uint64_t)qword_1EF6463C0);
}

void sub_1C0C9C358(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (*a2 != -1)
    swift_once();
  v5 = sub_1C077D2F8();
  v6 = sub_1C079E000(v5, a3);
  swift_beginAccess();
  v7 = *(_QWORD *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(v6, a1, v5);
  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v5);
  sub_1C077C0D8();
}

void static PersonalKnowledgeResult.AnswerAttribute.typeDisplayRepresentation.modify()
{
  uint64_t v0;

  if (qword_1EF62E238 != -1)
    swift_once();
  v0 = sub_1C077D2F8();
  sub_1C0791F34(v0, (uint64_t)qword_1EF6463C0);
  sub_1C0778534();
}

void static PersonalKnowledgeResult.AnswerAttribute.caseDisplayRepresentations.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  _BYTE *v11;
  _BYTE *v12;
  _BYTE *v13;
  _BYTE *v14;
  _BYTE *v15;
  _BYTE *v16;
  __n128 *v17;

  sub_1C0779670();
  sub_1C07ACF80(&qword_1EF646490);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v4);
  sub_1C077B6C0();
  sub_1C07ACF80(&qword_1EF646498);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1C0793230();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  sub_1C0780A08();
  sub_1C07ACF80(&qword_1EF6464A0);
  sub_1C07ACF80(&qword_1EF6464A8);
  sub_1C07A3390();
  v17 = (__n128 *)sub_1C07A9A1C();
  sub_1C079C03C(v17, (__n128)xmmword_1C10819A0);
  sub_1C0779A30();
  v8 = sub_1C07AB070();
  sub_1C07A12A0();
  sub_1C07AEA04();
  *v9 = 1;
  sub_1C07B6748();
  sub_1C07AFE60();
  sub_1C07A73F4();
  sub_1C0794878((_BYTE *)(v3 + 2 * v2));
  sub_1C0C9F720();
  sub_1C07A73F4();
  sub_1C0794878((_BYTE *)(v3 + 3 * v2));
  sub_1C106AA20();
  sub_1C07A73F4();
  sub_1C07AEA04();
  sub_1C0794878(v10);
  sub_1C106AA20();
  sub_1C07A73F4();
  sub_1C07AEA04();
  sub_1C0794878(v11);
  sub_1C07AF02C();
  sub_1C07A73F4();
  sub_1C07A1F30(6);
  sub_1C07AF02C();
  sub_1C07A73F4();
  sub_1C07AEA04();
  sub_1C0794878(v12);
  sub_1C07AFE60();
  sub_1C07A73F4();
  sub_1C07AEA04();
  sub_1C0794878(v13);
  sub_1C07AFE60();
  sub_1C07A73F4();
  sub_1C07AEA04();
  *v14 = 9;
  sub_1C07B6748();
  sub_1C07AF2E8();
  sub_1C07A73F4();
  sub_1C07A1F30(10);
  sub_1C07AF02C();
  sub_1C07A73F4();
  sub_1C0780594(11);
  sub_1C106AA20();
  sub_1C07A73F4();
  sub_1C07A1F30(12);
  sub_1C07AF02C();
  sub_1C07A73F4();
  sub_1C0780594(13);
  sub_1C106AA20();
  sub_1C07A73F4();
  sub_1C07A1F30(14);
  sub_1C07AF02C();
  sub_1C07A73F4();
  sub_1C07AEA04();
  sub_1C078E1E0(v15);
  sub_1C07A73F4();
  sub_1C07AEA04();
  sub_1C0794878(v16);
  sub_1C106AA20();
  sub_1C07A73F4();
  sub_1C0794878((_BYTE *)(v3 + 17 * v2));
  sub_1C07AFE60();
  sub_1C07B2D8C(v1, 1, 1, v6);
  sub_1C07B2D8C(v0, 1, 1, v8);
  sub_1C0799010();
  sub_1C07824AC();
  sub_1C0C9D97C();
  sub_1C07BFF20();
  sub_1C0776760();
}

void *static PersonalKnowledgeResult.AnswerAttribute.allCases.getter()
{
  return &unk_1E7A05F10;
}

uint64_t PersonalKnowledgeResult.AnswerAttribute.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0C9C860 + 4 * byte_1C10B0FE0[*v0]))(0x6E6F73726570, 0xE600000000000000);
}

uint64_t sub_1C0C9C860()
{
  return 0x49746361746E6F63;
}

uint64_t sub_1C0C9C880()
{
  return 0x746E657665;
}

uint64_t sub_1C0C9C894()
{
  return 1701667182;
}

uint64_t sub_1C0C9C8A4()
{
  return 0x6D614E7473726966;
}

uint64_t sub_1C0C9C998()
{
  return 0x65746144646E65;
}

void sub_1C0C9C9B0()
{
  JUMPOUT(0x1C0C9C9BCLL);
}

uint64_t sub_1C0C9C9C0()
{
  return 0x69746E6565726373;
}

uint64_t sub_1C0C9C9DC()
{
  return 0x6765746143707061;
}

uint64_t sub_1C0C9C9FC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C08C5404(*a1, *a2);
}

void sub_1C0C9CA08()
{
  unsigned __int8 *v0;

  sub_1C0A54038(*v0);
}

uint64_t sub_1C0C9CA10(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1C08C973C(a1, *v1);
}

void sub_1C0C9CA18(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1C0A545F4(a1, *v1);
}

IntelligencePlatformCore::PersonalKnowledgeResult::AnswerAttribute_optional sub_1C0C9CA20(Swift::String *a1)
{
  return PersonalKnowledgeResult.AnswerAttribute.init(rawValue:)(*a1);
}

void sub_1C0C9CA2C(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = PersonalKnowledgeResult.AnswerAttribute.rawValue.getter();
  a1[1] = v2;
  sub_1C0778534();
}

uint64_t sub_1C0C9CA50()
{
  sub_1C0C9AB00();
  return sub_1C106A4F8();
}

uint64_t sub_1C0C9CA8C()
{
  sub_1C0C9DEAC();
  return sub_1C106A678();
}

void sub_1C0C9CAC4(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7A05F10;
}

uint64_t sub_1C0C9CAD4(uint64_t a1)
{
  return sub_1C0C9CEBC(a1, qword_1EF6463D8);
}

void static PersonalKnowledgeResult.AnswerValueType.typeDisplayRepresentation.getter(uint64_t a1@<X8>)
{
  sub_1C0C9C2C4(&qword_1EF62E240, (uint64_t)qword_1EF6463D8, a1);
}

void static PersonalKnowledgeResult.AnswerValueType.typeDisplayRepresentation.setter(uint64_t a1)
{
  sub_1C0C9C358(a1, &qword_1EF62E240, (uint64_t)qword_1EF6463D8);
}

void static PersonalKnowledgeResult.AnswerValueType.typeDisplayRepresentation.modify()
{
  uint64_t v0;

  if (qword_1EF62E240 != -1)
    swift_once();
  v0 = sub_1C077D2F8();
  sub_1C0791F34(v0, (uint64_t)qword_1EF6463D8);
  sub_1C0778534();
}

void static PersonalKnowledgeResult.AnswerValueType.caseDisplayRepresentations.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 *v8;
  uint64_t v9;

  sub_1C0779670();
  sub_1C07ACF80(&qword_1EF646490);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v4);
  sub_1C077B6C0();
  sub_1C07ACF80(&qword_1EF646498);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1C0793230();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  sub_1C0780A08();
  sub_1C07ACF80(&qword_1EF6464B8);
  sub_1C07ACF80(&qword_1EF6464C0);
  sub_1C07A3390();
  v8 = (__n128 *)sub_1C07A9A1C();
  sub_1C079C03C(v8, (__n128)xmmword_1C107DE20);
  sub_1C0779A30();
  v9 = sub_1C07AB070();
  sub_1C07A12A0();
  sub_1C0794878((_BYTE *)(v3 + v2));
  sub_1C07AF2E8();
  sub_1C07A73F4();
  sub_1C0794878((_BYTE *)(v3 + 2 * v2));
  sub_1C0779A30();
  sub_1C07A73F4();
  sub_1C078E1E0((_BYTE *)(v3 + 3 * v2));
  sub_1C07A73F4();
  sub_1C0794878((_BYTE *)(v3 + 4 * v2));
  sub_1C106AA20();
  sub_1C07B2D8C(v1, 1, 1, v6);
  sub_1C07B2D8C(v0, 1, 1, v9);
  sub_1C0799010();
  sub_1C07824AC();
  sub_1C0C9D9B8();
  sub_1C07BFF20();
  sub_1C0776760();
}

void *static PersonalKnowledgeResult.AnswerValueType.allCases.getter()
{
  return &unk_1E7A05F48;
}

uint64_t PersonalKnowledgeResult.AnswerValueType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0C9CD78 + 4 * byte_1C10B0FF2[*v0]))(0x676E69727473, 0xE600000000000000);
}

uint64_t sub_1C0C9CD78()
{
  return 0x72656765746E69;
}

uint64_t sub_1C0C9CD90()
{
  return 0x656C62756F64;
}

uint64_t sub_1C0C9CDA0()
{
  return sub_1C07BBFA0(0x61727564u);
}

uint64_t sub_1C0C9CDB0()
{
  return 1702125924;
}

void sub_1C0C9CDC0(char *a1)
{
  sub_1C08C52D4(*a1);
}

void sub_1C0C9CDCC()
{
  sub_1C0A54058();
}

void sub_1C0C9CDD4(uint64_t a1)
{
  char *v1;

  sub_1C08C96A4(a1, *v1);
}

void sub_1C0C9CDDC()
{
  sub_1C0A545E8();
}

IntelligencePlatformCore::PersonalKnowledgeResult::AnswerValueType_optional sub_1C0C9CDE4(Swift::String *a1)
{
  return PersonalKnowledgeResult.AnswerValueType.init(rawValue:)(*a1);
}

void sub_1C0C9CDF0(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = PersonalKnowledgeResult.AnswerValueType.rawValue.getter();
  a1[1] = v2;
  sub_1C0778534();
}

uint64_t sub_1C0C9CE14()
{
  sub_1C0C9AAC4();
  return sub_1C106A4F8();
}

uint64_t sub_1C0C9CE50()
{
  sub_1C0C9E168();
  return sub_1C106A678();
}

void sub_1C0C9CE88(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7A05F48;
}

uint64_t sub_1C0C9CE98(uint64_t a1)
{
  return sub_1C0C9CEBC(a1, qword_1EF6463F0);
}

uint64_t sub_1C0C9CEBC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1C07ACF80(&qword_1EF646498);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v4);
  sub_1C0778544();
  v5 = sub_1C079B940();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0778564();
  v7 = sub_1C077D2F8();
  sub_1C0800A9C(v7, a2);
  sub_1C079E000(v7, (uint64_t)a2);
  sub_1C106AA20();
  sub_1C07B2D8C(v2, 1, 1, v5);
  return sub_1C106A69C();
}

void static PersonalKnowledgeResult.AnswerComputation.typeDisplayRepresentation.getter(uint64_t a1@<X8>)
{
  sub_1C0C9C2C4(&qword_1EF62E248, (uint64_t)qword_1EF6463F0, a1);
}

void static PersonalKnowledgeResult.AnswerComputation.typeDisplayRepresentation.setter(uint64_t a1)
{
  sub_1C0C9C358(a1, &qword_1EF62E248, (uint64_t)qword_1EF6463F0);
}

void static PersonalKnowledgeResult.AnswerComputation.typeDisplayRepresentation.modify()
{
  uint64_t v0;

  if (qword_1EF62E248 != -1)
    swift_once();
  v0 = sub_1C077D2F8();
  sub_1C0791F34(v0, (uint64_t)qword_1EF6463F0);
  sub_1C0778534();
}

void static PersonalKnowledgeResult.AnswerComputation.caseDisplayRepresentations.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 *v8;
  uint64_t v9;

  sub_1C0779670();
  sub_1C07ACF80(&qword_1EF646490);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v4);
  sub_1C077B6C0();
  sub_1C07ACF80(&qword_1EF646498);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1C0793230();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  sub_1C0780A08();
  sub_1C07ACF80(&qword_1EF6464D0);
  sub_1C07ACF80(&qword_1EF6464D8);
  sub_1C07A3390();
  v8 = (__n128 *)sub_1C07A9A1C();
  sub_1C079C03C(v8, (__n128)xmmword_1C10795A0);
  sub_1C106AA20();
  v9 = sub_1C07AB070();
  sub_1C07A12A0();
  sub_1C0794878((_BYTE *)(v3 + v2));
  sub_1C07AF2E8();
  sub_1C07A73F4();
  *(_BYTE *)(v3 + 2 * v2) = 2;
  sub_1C0C9F720();
  sub_1C07A73F4();
  sub_1C0794878((_BYTE *)(v3 + 3 * v2));
  sub_1C07AFE60();
  sub_1C07B2D8C(v1, 1, 1, v6);
  sub_1C07B2D8C(v0, 1, 1, v9);
  sub_1C0799010();
  sub_1C07824AC();
  sub_1C0C9D9F4();
  sub_1C07BFF20();
  sub_1C0776760();
}

IntelligencePlatformCore::PersonalKnowledgeResult::AnswerComputation_optional __swiftcall PersonalKnowledgeResult.AnswerComputation.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  unint64_t v2;
  char v3;
  IntelligencePlatformCore::PersonalKnowledgeResult::AnswerComputation_optional result;

  sub_1C0C9F710();
  v2 = sub_1C1070A2C();
  sub_1C07767AC();
  v3 = 4;
  if (v2 < 4)
    v3 = v2;
  *v1 = v3;
  sub_1C077671C();
  return result;
}

void *static PersonalKnowledgeResult.AnswerComputation.allCases.getter()
{
  return &unk_1E7A05FF0;
}

uint64_t PersonalKnowledgeResult.AnswerComputation.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0C9D250 + 4 * byte_1C10B0FF7[*v0]))(7173491, 0xE300000000000000);
}

uint64_t sub_1C0C9D250()
{
  return 6780513;
}

uint64_t sub_1C0C9D25C()
{
  return 0x746E756F63;
}

uint64_t sub_1C0C9D270()
{
  return 0x756F635F71696E75;
}

void sub_1C0C9D28C(char *a1)
{
  sub_1C08C51D4(*a1);
}

void sub_1C0C9D298()
{
  sub_1C0A54064();
}

void sub_1C0C9D2A0(uint64_t a1)
{
  char *v1;

  sub_1C08C9624(a1, *v1);
}

void sub_1C0C9D2A8()
{
  sub_1C0A545DC();
}

IntelligencePlatformCore::PersonalKnowledgeResult::AnswerComputation_optional sub_1C0C9D2B0(Swift::String *a1)
{
  return PersonalKnowledgeResult.AnswerComputation.init(rawValue:)(*a1);
}

void sub_1C0C9D2BC(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = PersonalKnowledgeResult.AnswerComputation.rawValue.getter();
  a1[1] = v2;
  sub_1C0778534();
}

uint64_t sub_1C0C9D2E0()
{
  sub_1C0C9AB3C();
  return sub_1C106A4F8();
}

uint64_t sub_1C0C9D31C()
{
  sub_1C0C9E424();
  return sub_1C106A678();
}

void sub_1C0C9D354(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7A05FF0;
}

void sub_1C0C9D364()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v0 = sub_1C0C9D3B4();
  sub_1C0C9D3E8(v0, v1, v2, v3);
  sub_1C07767AC();
  sub_1C077671C();
}

uint64_t sub_1C0C9D3B4()
{
  return sub_1C106FD60();
}

uint64_t sub_1C0C9D3E8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    sub_1C0C9D52C(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      sub_1C078922C(v9, 0);
      v12 = v11;
      sub_1C0C9D618(v16, v11 + 32, v10, a1, a2, a3, a4);
      v14 = v13;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      swift_bridgeObjectRelease();
      if (v14 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v12 = MEMORY[0x1E0DEE9D8];
    }
    v15 = MEMORY[0x1C3BA6518](v12 + 32, *(_QWORD *)(v12 + 16));
    swift_release();
    return v15;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x1C3BA6518);
LABEL_9:
      sub_1C10707F8();
      goto LABEL_12;
    }
    v16[0] = a3;
    v16[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1C3BA6518]((char *)v16 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

void sub_1C0C9D52C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;

  v7 = a1;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    sub_1C0D93FA8(a1, a3, a4);
    v7 = v10;
  }
  if ((a2 & 0xC) == v9)
  {
    sub_1C0D93FA8(a2, a3, a4);
    a2 = v11;
    if ((a4 & 0x1000000000000000) == 0)
      return;
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return;
  }
  v12 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v12 = a3 & 0xFFFFFFFFFFFFLL;
  if (v12 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v12 >= a2 >> 16)
  {
    sub_1C106FCDC();
    return;
  }
  __break(1u);
}

void sub_1C0C9D618(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v28;
  unint64_t v29;
  _QWORD v30[2];

  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v11 = a4;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v29 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = a4;
LABEL_33:
    *a1 = a4;
    a1[1] = a5;
    a1[2] = a6;
    a1[3] = a7;
    a1[4] = v11;
    return;
  }
  v13 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v23 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v24 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v25 = v16;
  v28 = a3 - 1;
  v11 = a4;
  while (1)
  {
    v17 = v11;
    if ((v11 & 0xC) == v15)
      sub_1C0D93FA8(v11, a6, a7);
    if (v17 >> 14 < v29 || v17 >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      v21 = sub_1C106FCE8();
    }
    else
    {
      v19 = v17 >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v30[0] = a6;
        v30[1] = v24;
        v21 = *((_BYTE *)v30 + v19);
      }
      else
      {
        v20 = v23;
        if ((a6 & 0x1000000000000000) == 0)
          v20 = sub_1C10707F8();
        v21 = *(_BYTE *)(v20 + v19);
      }
    }
    if ((v11 & 0xC) == v15)
    {
      sub_1C0D93FA8(v11, a6, a7);
      v11 = v22;
      if ((a7 & 0x1000000000000000) == 0)
      {
LABEL_27:
        v11 = (v11 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_31;
      }
    }
    else if ((a7 & 0x1000000000000000) == 0)
    {
      goto LABEL_27;
    }
    if (v25 <= v11 >> 16)
      goto LABEL_35;
    v11 = sub_1C106FCC4();
LABEL_31:
    *(_BYTE *)(a2 + v13) = v21;
    if (v28 != v13)
    {
      ++v13;
      if (v10 != v11 >> 14)
        continue;
    }
    goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
}

unsigned __int8 *sub_1C0C9D818(unsigned __int8 *a1, uint64_t a2)
{
  return sub_1C0C9F204(a1, a2);
}

unsigned __int8 *sub_1C0C9D82C(unsigned __int8 *a1, uint64_t a2)
{
  return sub_1C0C9F4A4(a1, a2);
}

unint64_t sub_1C0C9D840()
{
  unint64_t result;

  result = qword_1EF646480;
  if (!qword_1EF646480)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF646480);
  }
  return result;
}

uint64_t sub_1C0C9D87C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0C9D888(a1, a2, a3, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_1C0C9F204);
}

uint64_t sub_1C0C9D888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD *, uint64_t, uint64_t))
{
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v16 = a1;
  v17 = a2;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v7 = sub_1C106FD54();
  v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v10 = HIBYTE(v8) & 0xF;
    v16 = v7;
    v17 = v8 & 0xFFFFFFFFFFFFFFLL;
    v9 = &v16;
    goto LABEL_7;
  }
  sub_1C079987C();
  sub_1C0C9D364();
  v7 = v11;
  v13 = v12;
  swift_bridgeObjectRelease();
  v8 = v13;
  if ((v13 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    v9 = (_QWORD *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    sub_1C079987C();
    v9 = (_QWORD *)sub_1C10707F8();
  }
LABEL_7:
  v14 = a4(v9, v10, a3);
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1C0C9D970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0C9D888(a1, a2, a3, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_1C0C9F4A4);
}

unint64_t sub_1C0C9D97C()
{
  unint64_t result;

  result = qword_1EF6464B0;
  if (!qword_1EF6464B0)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PersonalKnowledgeResult.AnswerAttribute, &type metadata for PersonalKnowledgeResult.AnswerAttribute);
    atomic_store(result, (unint64_t *)&qword_1EF6464B0);
  }
  return result;
}

unint64_t sub_1C0C9D9B8()
{
  unint64_t result;

  result = qword_1EF6464C8;
  if (!qword_1EF6464C8)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PersonalKnowledgeResult.AnswerValueType, &type metadata for PersonalKnowledgeResult.AnswerValueType);
    atomic_store(result, (unint64_t *)&qword_1EF6464C8);
  }
  return result;
}

unint64_t sub_1C0C9D9F4()
{
  unint64_t result;

  result = qword_1EF6464E0;
  if (!qword_1EF6464E0)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PersonalKnowledgeResult.AnswerComputation, &type metadata for PersonalKnowledgeResult.AnswerComputation);
    atomic_store(result, (unint64_t *)&qword_1EF6464E0);
  }
  return result;
}

unint64_t sub_1C0C9DA38()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF6464E8;
  if (!qword_1EF6464E8)
  {
    v1 = sub_1C106AE28();
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0CB09C8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF6464E8);
  }
  return result;
}

unint64_t sub_1C0C9DA7C()
{
  unint64_t result;

  result = qword_1EF6464F0;
  if (!qword_1EF6464F0)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PersonalKnowledgeResult, &type metadata for PersonalKnowledgeResult);
    atomic_store(result, (unint64_t *)&qword_1EF6464F0);
  }
  return result;
}

unint64_t sub_1C0C9DABC()
{
  unint64_t result;

  result = qword_1EF6464F8;
  if (!qword_1EF6464F8)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PersonalKnowledgeResult, &type metadata for PersonalKnowledgeResult);
    atomic_store(result, (unint64_t *)&qword_1EF6464F8);
  }
  return result;
}

unint64_t sub_1C0C9DAFC()
{
  unint64_t result;

  result = qword_1EF646500;
  if (!qword_1EF646500)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PersonalKnowledgeResult, &type metadata for PersonalKnowledgeResult);
    atomic_store(result, (unint64_t *)&qword_1EF646500);
  }
  return result;
}

void sub_1C0C9DB38()
{
  sub_1C07E6EDC(&qword_1EF646508, &qword_1EF646510, MEMORY[0x1E0C902F8]);
}

uint64_t sub_1C0C9DB64()
{
  return MEMORY[0x1E0C91C48];
}

unint64_t sub_1C0C9DB74()
{
  unint64_t result;

  result = qword_1EF646518;
  if (!qword_1EF646518)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PersonalKnowledgeResult, &type metadata for PersonalKnowledgeResult);
    atomic_store(result, (unint64_t *)&qword_1EF646518);
  }
  return result;
}

unint64_t sub_1C0C9DBB4()
{
  unint64_t result;

  result = qword_1EF646520;
  if (!qword_1EF646520)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PersonalKnowledgeResult, &type metadata for PersonalKnowledgeResult);
    atomic_store(result, (unint64_t *)&qword_1EF646520);
  }
  return result;
}

unint64_t sub_1C0C9DBF4()
{
  unint64_t result;

  result = qword_1EF646528;
  if (!qword_1EF646528)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PersonalKnowledgeResult, &type metadata for PersonalKnowledgeResult);
    atomic_store(result, (unint64_t *)&qword_1EF646528);
  }
  return result;
}

unint64_t sub_1C0C9DC34()
{
  unint64_t result;

  result = qword_1EF646530;
  if (!qword_1EF646530)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PersonalKnowledgeResult, &type metadata for PersonalKnowledgeResult);
    atomic_store(result, (unint64_t *)&qword_1EF646530);
  }
  return result;
}

void sub_1C0C9DC70()
{
  sub_1C07E6EDC(&qword_1EF646538, &qword_1EF646540, MEMORY[0x1E0C91998]);
}

unint64_t sub_1C0C9DCA0()
{
  unint64_t result;

  result = qword_1EF646548;
  if (!qword_1EF646548)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PersonalKnowledgeResult, &type metadata for PersonalKnowledgeResult);
    atomic_store(result, (unint64_t *)&qword_1EF646548);
  }
  return result;
}

unint64_t sub_1C0C9DCE0()
{
  unint64_t result;

  result = qword_1EF646550;
  if (!qword_1EF646550)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PersonalKnowledgeResult.AnswerAttribute, &type metadata for PersonalKnowledgeResult.AnswerAttribute);
    atomic_store(result, (unint64_t *)&qword_1EF646550);
  }
  return result;
}

unint64_t sub_1C0C9DD20()
{
  unint64_t result;

  result = qword_1EF646558;
  if (!qword_1EF646558)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PersonalKnowledgeResult.AnswerAttribute, &type metadata for PersonalKnowledgeResult.AnswerAttribute);
    atomic_store(result, (unint64_t *)&qword_1EF646558);
  }
  return result;
}

unint64_t sub_1C0C9DD60()
{
  unint64_t result;

  result = qword_1EF646560;
  if (!qword_1EF646560)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PersonalKnowledgeResult.AnswerAttribute, &type metadata for PersonalKnowledgeResult.AnswerAttribute);
    atomic_store(result, (unint64_t *)&qword_1EF646560);
  }
  return result;
}

unint64_t sub_1C0C9DDA0()
{
  unint64_t result;

  result = qword_1EF646568;
  if (!qword_1EF646568)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PersonalKnowledgeResult.AnswerAttribute, &type metadata for PersonalKnowledgeResult.AnswerAttribute);
    atomic_store(result, (unint64_t *)&qword_1EF646568);
  }
  return result;
}

uint64_t sub_1C0C9DDDC()
{
  return MEMORY[0x1E0DEA9E0];
}

unint64_t sub_1C0C9DDEC()
{
  unint64_t result;

  result = qword_1EF646570;
  if (!qword_1EF646570)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PersonalKnowledgeResult.AnswerAttribute, &type metadata for PersonalKnowledgeResult.AnswerAttribute);
    atomic_store(result, (unint64_t *)&qword_1EF646570);
  }
  return result;
}

unint64_t sub_1C0C9DE2C()
{
  unint64_t result;

  result = qword_1EF646578;
  if (!qword_1EF646578)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PersonalKnowledgeResult.AnswerAttribute, &type metadata for PersonalKnowledgeResult.AnswerAttribute);
    atomic_store(result, (unint64_t *)&qword_1EF646578);
  }
  return result;
}

unint64_t sub_1C0C9DE6C()
{
  unint64_t result;

  result = qword_1EF646580;
  if (!qword_1EF646580)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PersonalKnowledgeResult.AnswerAttribute, &type metadata for PersonalKnowledgeResult.AnswerAttribute);
    atomic_store(result, (unint64_t *)&qword_1EF646580);
  }
  return result;
}

unint64_t sub_1C0C9DEAC()
{
  unint64_t result;

  result = qword_1EF646588;
  if (!qword_1EF646588)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PersonalKnowledgeResult.AnswerAttribute, &type metadata for PersonalKnowledgeResult.AnswerAttribute);
    atomic_store(result, (unint64_t *)&qword_1EF646588);
  }
  return result;
}

void sub_1C0C9DEE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C0C9E46C(a1, a2, a3, (void (*)(void))sub_1C0C9AB00);
}

unint64_t sub_1C0C9DEF8()
{
  unint64_t result;

  result = qword_1EF646590;
  if (!qword_1EF646590)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PersonalKnowledgeResult.AnswerAttribute, &type metadata for PersonalKnowledgeResult.AnswerAttribute);
    atomic_store(result, (unint64_t *)&qword_1EF646590);
  }
  return result;
}

unint64_t sub_1C0C9DF38()
{
  unint64_t result;

  result = qword_1EF646598;
  if (!qword_1EF646598)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PersonalKnowledgeResult.AnswerAttribute, &type metadata for PersonalKnowledgeResult.AnswerAttribute);
    atomic_store(result, (unint64_t *)&qword_1EF646598);
  }
  return result;
}

void sub_1C0C9DF78()
{
  sub_1C07E6EDC(&qword_1EF6465A0, &qword_1EF6465A8, MEMORY[0x1E0DEAF50]);
}

unint64_t sub_1C0C9DFA8()
{
  unint64_t result;

  result = qword_1EF6465B0;
  if (!qword_1EF6465B0)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PersonalKnowledgeResult.AnswerValueType, &type metadata for PersonalKnowledgeResult.AnswerValueType);
    atomic_store(result, (unint64_t *)&qword_1EF6465B0);
  }
  return result;
}

unint64_t sub_1C0C9DFE8()
{
  unint64_t result;

  result = qword_1EF6465B8;
  if (!qword_1EF6465B8)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PersonalKnowledgeResult.AnswerValueType, &type metadata for PersonalKnowledgeResult.AnswerValueType);
    atomic_store(result, (unint64_t *)&qword_1EF6465B8);
  }
  return result;
}

unint64_t sub_1C0C9E028()
{
  unint64_t result;

  result = qword_1EF6465C0;
  if (!qword_1EF6465C0)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PersonalKnowledgeResult.AnswerValueType, &type metadata for PersonalKnowledgeResult.AnswerValueType);
    atomic_store(result, (unint64_t *)&qword_1EF6465C0);
  }
  return result;
}

unint64_t sub_1C0C9E068()
{
  unint64_t result;

  result = qword_1EF6465C8;
  if (!qword_1EF6465C8)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PersonalKnowledgeResult.AnswerValueType, &type metadata for PersonalKnowledgeResult.AnswerValueType);
    atomic_store(result, (unint64_t *)&qword_1EF6465C8);
  }
  return result;
}

unint64_t sub_1C0C9E0A8()
{
  unint64_t result;

  result = qword_1EF6465D0;
  if (!qword_1EF6465D0)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PersonalKnowledgeResult.AnswerValueType, &type metadata for PersonalKnowledgeResult.AnswerValueType);
    atomic_store(result, (unint64_t *)&qword_1EF6465D0);
  }
  return result;
}

unint64_t sub_1C0C9E0E8()
{
  unint64_t result;

  result = qword_1EF6465D8;
  if (!qword_1EF6465D8)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PersonalKnowledgeResult.AnswerValueType, &type metadata for PersonalKnowledgeResult.AnswerValueType);
    atomic_store(result, (unint64_t *)&qword_1EF6465D8);
  }
  return result;
}

unint64_t sub_1C0C9E128()
{
  unint64_t result;

  result = qword_1EF6465E0;
  if (!qword_1EF6465E0)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PersonalKnowledgeResult.AnswerValueType, &type metadata for PersonalKnowledgeResult.AnswerValueType);
    atomic_store(result, (unint64_t *)&qword_1EF6465E0);
  }
  return result;
}

unint64_t sub_1C0C9E168()
{
  unint64_t result;

  result = qword_1EF6465E8;
  if (!qword_1EF6465E8)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PersonalKnowledgeResult.AnswerValueType, &type metadata for PersonalKnowledgeResult.AnswerValueType);
    atomic_store(result, (unint64_t *)&qword_1EF6465E8);
  }
  return result;
}

void sub_1C0C9E1A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C0C9E46C(a1, a2, a3, (void (*)(void))sub_1C0C9AAC4);
}

unint64_t sub_1C0C9E1B4()
{
  unint64_t result;

  result = qword_1EF6465F0;
  if (!qword_1EF6465F0)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PersonalKnowledgeResult.AnswerValueType, &type metadata for PersonalKnowledgeResult.AnswerValueType);
    atomic_store(result, (unint64_t *)&qword_1EF6465F0);
  }
  return result;
}

unint64_t sub_1C0C9E1F4()
{
  unint64_t result;

  result = qword_1EF6465F8;
  if (!qword_1EF6465F8)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PersonalKnowledgeResult.AnswerValueType, &type metadata for PersonalKnowledgeResult.AnswerValueType);
    atomic_store(result, (unint64_t *)&qword_1EF6465F8);
  }
  return result;
}

void sub_1C0C9E234()
{
  sub_1C07E6EDC(&qword_1EF646600, &qword_1EF646608, MEMORY[0x1E0DEAF50]);
}

unint64_t sub_1C0C9E264()
{
  unint64_t result;

  result = qword_1EF646610;
  if (!qword_1EF646610)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PersonalKnowledgeResult.AnswerComputation, &type metadata for PersonalKnowledgeResult.AnswerComputation);
    atomic_store(result, (unint64_t *)&qword_1EF646610);
  }
  return result;
}

unint64_t sub_1C0C9E2A4()
{
  unint64_t result;

  result = qword_1EF646618;
  if (!qword_1EF646618)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PersonalKnowledgeResult.AnswerComputation, &type metadata for PersonalKnowledgeResult.AnswerComputation);
    atomic_store(result, (unint64_t *)&qword_1EF646618);
  }
  return result;
}

unint64_t sub_1C0C9E2E4()
{
  unint64_t result;

  result = qword_1EF646620;
  if (!qword_1EF646620)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PersonalKnowledgeResult.AnswerComputation, &type metadata for PersonalKnowledgeResult.AnswerComputation);
    atomic_store(result, (unint64_t *)&qword_1EF646620);
  }
  return result;
}

unint64_t sub_1C0C9E324()
{
  unint64_t result;

  result = qword_1EF646628;
  if (!qword_1EF646628)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PersonalKnowledgeResult.AnswerComputation, &type metadata for PersonalKnowledgeResult.AnswerComputation);
    atomic_store(result, (unint64_t *)&qword_1EF646628);
  }
  return result;
}

unint64_t sub_1C0C9E364()
{
  unint64_t result;

  result = qword_1EF646630;
  if (!qword_1EF646630)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PersonalKnowledgeResult.AnswerComputation, &type metadata for PersonalKnowledgeResult.AnswerComputation);
    atomic_store(result, (unint64_t *)&qword_1EF646630);
  }
  return result;
}

unint64_t sub_1C0C9E3A4()
{
  unint64_t result;

  result = qword_1EF646638;
  if (!qword_1EF646638)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PersonalKnowledgeResult.AnswerComputation, &type metadata for PersonalKnowledgeResult.AnswerComputation);
    atomic_store(result, (unint64_t *)&qword_1EF646638);
  }
  return result;
}

unint64_t sub_1C0C9E3E4()
{
  unint64_t result;

  result = qword_1EF646640;
  if (!qword_1EF646640)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PersonalKnowledgeResult.AnswerComputation, &type metadata for PersonalKnowledgeResult.AnswerComputation);
    atomic_store(result, (unint64_t *)&qword_1EF646640);
  }
  return result;
}

unint64_t sub_1C0C9E424()
{
  unint64_t result;

  result = qword_1EF646648;
  if (!qword_1EF646648)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PersonalKnowledgeResult.AnswerComputation, &type metadata for PersonalKnowledgeResult.AnswerComputation);
    atomic_store(result, (unint64_t *)&qword_1EF646648);
  }
  return result;
}

void sub_1C0C9E460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C0C9E46C(a1, a2, a3, (void (*)(void))sub_1C0C9AB3C);
}

void sub_1C0C9E46C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4();
  swift_getOpaqueTypeConformance2();
  sub_1C07806B4();
}

unint64_t sub_1C0C9E4A8()
{
  unint64_t result;

  result = qword_1EF646650;
  if (!qword_1EF646650)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PersonalKnowledgeResult.AnswerComputation, &type metadata for PersonalKnowledgeResult.AnswerComputation);
    atomic_store(result, (unint64_t *)&qword_1EF646650);
  }
  return result;
}

unint64_t sub_1C0C9E4E8()
{
  unint64_t result;

  result = qword_1EF646658;
  if (!qword_1EF646658)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PersonalKnowledgeResult.AnswerComputation, &type metadata for PersonalKnowledgeResult.AnswerComputation);
    atomic_store(result, (unint64_t *)&qword_1EF646658);
  }
  return result;
}

void sub_1C0C9E528()
{
  sub_1C07E6EDC(&qword_1EF646660, &qword_1EF646668, MEMORY[0x1E0DEAF50]);
}

void sub_1C0C9E554()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C0793810();
  PersonalKnowledgeResult.answerValue.getter();
  *v0 = v1;
  v0[1] = v2;
  sub_1C0778534();
}

void sub_1C0C9E588()
{
  PersonalKnowledgeResult.answerValueDate.getter();
  sub_1C0778534();
}

void sub_1C0C9E5A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C0C9989C(a1, a2, a3, a4, (uint64_t *)&unk_1ED762690, (void (*)(uint64_t))PersonalKnowledgeResult.answerValueDate.setter);
}

void sub_1C0C9E5C8()
{
  PersonalKnowledgeResult.answerValueDuration.getter();
  sub_1C0778534();
}

void sub_1C0C9E5E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C0C9989C(a1, a2, a3, a4, &qword_1EF646408, (void (*)(uint64_t))PersonalKnowledgeResult.answerValueDuration.setter);
}

void sub_1C0C9E620()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  PersonalKnowledgeResult.answerSource.getter();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C0C9E644()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C0793810();
  PersonalKnowledgeResult.name.getter();
  *v0 = v1;
  v0[1] = v2;
  sub_1C0778534();
}

void sub_1C0C9E664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C0C9A6A0(a1, a2, a3, a4, (void (*)(uint64_t))PersonalKnowledgeResult.name.setter);
}

void sub_1C0C9E680()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C0793810();
  PersonalKnowledgeResult.firstName.getter();
  *v0 = v1;
  v0[1] = v2;
  sub_1C0778534();
}

void sub_1C0C9E6A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C0C9A6A0(a1, a2, a3, a4, (void (*)(uint64_t))PersonalKnowledgeResult.firstName.setter);
}

void sub_1C0C9E6BC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C0793810();
  PersonalKnowledgeResult.lastName.getter();
  *v0 = v1;
  v0[1] = v2;
  sub_1C0778534();
}

void sub_1C0C9E6DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C0C9A6A0(a1, a2, a3, a4, (void (*)(uint64_t))PersonalKnowledgeResult.lastName.setter);
}

void sub_1C0C9E6F8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C0793810();
  PersonalKnowledgeResult.phoneNumber.getter();
  *v0 = v1;
  v0[1] = v2;
  sub_1C0778534();
}

void sub_1C0C9E718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C0C9A6A0(a1, a2, a3, a4, (void (*)(uint64_t))PersonalKnowledgeResult.phoneNumber.setter);
}

void sub_1C0C9E734()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C0793810();
  PersonalKnowledgeResult.emailAddress.getter();
  *v0 = v1;
  v0[1] = v2;
  sub_1C0778534();
}

void sub_1C0C9E754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C0C9A6A0(a1, a2, a3, a4, (void (*)(uint64_t))PersonalKnowledgeResult.emailAddress.setter);
}

void sub_1C0C9E770()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C0793810();
  PersonalKnowledgeResult.to.getter();
  *v0 = v1;
  v0[1] = v2;
  sub_1C0778534();
}

void sub_1C0C9E790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C0C9A6A0(a1, a2, a3, a4, (void (*)(uint64_t))PersonalKnowledgeResult.to.setter);
}

void sub_1C0C9E7AC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C0793810();
  PersonalKnowledgeResult.from.getter();
  *v0 = v1;
  v0[1] = v2;
  sub_1C0778534();
}

void sub_1C0C9E7CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C0C9A6A0(a1, a2, a3, a4, (void (*)(uint64_t))PersonalKnowledgeResult.from.setter);
}

void sub_1C0C9E7E8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C0793810();
  PersonalKnowledgeResult.relationshipName.getter();
  *v0 = v1;
  v0[1] = v2;
  sub_1C0778534();
}

void sub_1C0C9E808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C0C9A6A0(a1, a2, a3, a4, (void (*)(uint64_t))PersonalKnowledgeResult.relationshipName.setter);
}

void sub_1C0C9E824()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C0793810();
  PersonalKnowledgeResult.address.getter();
  *v0 = v1;
  v0[1] = v2;
  sub_1C0778534();
}

void sub_1C0C9E844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C0C9A6A0(a1, a2, a3, a4, (void (*)(uint64_t))PersonalKnowledgeResult.address.setter);
}

void sub_1C0C9E860()
{
  PersonalKnowledgeResult.startDate.getter();
  sub_1C0778534();
}

void sub_1C0C9E87C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C0C9989C(a1, a2, a3, a4, (uint64_t *)&unk_1ED762690, (void (*)(uint64_t))PersonalKnowledgeResult.startDate.setter);
}

void sub_1C0C9E8A0()
{
  PersonalKnowledgeResult.endDate.getter();
  sub_1C0778534();
}

void sub_1C0C9E8BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C0C9989C(a1, a2, a3, a4, (uint64_t *)&unk_1ED762690, (void (*)(uint64_t))PersonalKnowledgeResult.endDate.setter);
}

void sub_1C0C9E8E0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C0793810();
  PersonalKnowledgeResult.app.getter();
  *v0 = v1;
  v0[1] = v2;
  sub_1C0778534();
}

void sub_1C0C9E900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C0C9A6A0(a1, a2, a3, a4, (void (*)(uint64_t))PersonalKnowledgeResult.app.setter);
}

void sub_1C0C9E91C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C0793810();
  PersonalKnowledgeResult.interest.getter();
  *v0 = v1;
  v0[1] = v2;
  sub_1C0778534();
}

void sub_1C0C9E93C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C0C9A6A0(a1, a2, a3, a4, (void (*)(uint64_t))PersonalKnowledgeResult.interest.setter);
}

uint64_t destroy for PersonalKnowledgeResult()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *initializeWithCopy for PersonalKnowledgeResult(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  v12 = a2[17];
  a1[16] = a2[16];
  a1[17] = v12;
  v13 = a2[19];
  a1[18] = a2[18];
  a1[19] = v13;
  v14 = a2[21];
  a1[20] = a2[20];
  a1[21] = v14;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for PersonalKnowledgeResult(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  a1[8] = a2[8];
  swift_retain();
  swift_release();
  a1[9] = a2[9];
  swift_retain();
  swift_release();
  a1[10] = a2[10];
  swift_retain();
  swift_release();
  a1[11] = a2[11];
  swift_retain();
  swift_release();
  a1[12] = a2[12];
  swift_retain();
  swift_release();
  a1[13] = a2[13];
  swift_retain();
  swift_release();
  a1[14] = a2[14];
  swift_retain();
  swift_release();
  a1[15] = a2[15];
  swift_retain();
  swift_release();
  a1[16] = a2[16];
  swift_retain();
  swift_release();
  a1[17] = a2[17];
  swift_retain();
  swift_release();
  a1[18] = a2[18];
  swift_retain();
  swift_release();
  a1[19] = a2[19];
  swift_retain();
  swift_release();
  a1[20] = a2[20];
  swift_retain();
  swift_release();
  a1[21] = a2[21];
  swift_retain();
  swift_release();
  return a1;
}

void *initializeWithTake for PersonalKnowledgeResult(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xB0uLL);
}

_OWORD *assignWithTake for PersonalKnowledgeResult(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_release();
  swift_release();
  a1[1] = a2[1];
  swift_release();
  swift_release();
  a1[2] = a2[2];
  swift_release();
  swift_release();
  a1[3] = a2[3];
  swift_release();
  swift_release();
  a1[4] = a2[4];
  swift_release();
  swift_release();
  a1[5] = a2[5];
  swift_release();
  swift_release();
  a1[6] = a2[6];
  swift_release();
  swift_release();
  a1[7] = a2[7];
  swift_release();
  swift_release();
  a1[8] = a2[8];
  swift_release();
  swift_release();
  a1[9] = a2[9];
  swift_release();
  swift_release();
  a1[10] = a2[10];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for PersonalKnowledgeResult(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 176))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PersonalKnowledgeResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 176) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 176) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for PersonalKnowledgeResult()
{
  sub_1C0779604();
}

uint64_t storeEnumTagSinglePayload for PersonalKnowledgeResult.AnswerAttribute(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 17 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 17) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEE)
    return ((uint64_t (*)(void))((char *)&loc_1C0C9EFF8 + 4 * byte_1C10B1000[v4]))();
  *a1 = a2 + 17;
  return ((uint64_t (*)(void))((char *)sub_1C0C9F02C + 4 * byte_1C10B0FFB[v4]))();
}

uint64_t sub_1C0C9F02C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0C9F034(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0C9F03CLL);
  return result;
}

uint64_t sub_1C0C9F048(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0C9F050);
  *(_BYTE *)result = a2 + 17;
  return result;
}

uint64_t sub_1C0C9F054(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0C9F05C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for PersonalKnowledgeResult.AnswerAttribute()
{
  sub_1C0779604();
}

uint64_t storeEnumTagSinglePayload for PersonalKnowledgeResult.AnswerValueType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1C0C9F0C0 + 4 * byte_1C10B100A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1C0C9F0F4 + 4 * byte_1C10B1005[v4]))();
}

uint64_t sub_1C0C9F0F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0C9F0FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0C9F104);
  return result;
}

uint64_t sub_1C0C9F110(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0C9F118);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1C0C9F11C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0C9F124(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for PersonalKnowledgeResult.AnswerValueType()
{
  sub_1C0779604();
}

uint64_t storeEnumTagSinglePayload for PersonalKnowledgeResult.AnswerComputation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1C0C9F188 + 4 * byte_1C10B1014[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1C0C9F1BC + 4 * byte_1C10B100F[v4]))();
}

uint64_t sub_1C0C9F1BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0C9F1C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0C9F1CCLL);
  return result;
}

uint64_t sub_1C0C9F1D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0C9F1E0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1C0C9F1E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0C9F1EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for PersonalKnowledgeResult.AnswerComputation()
{
  sub_1C0779604();
}

unsigned __int8 *sub_1C0C9F204(unsigned __int8 *result, uint64_t a2)
{
  int v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  unsigned __int8 v10;
  unsigned __int8 v11;
  unsigned __int8 v12;
  unint64_t v13;
  unsigned __int8 *i;
  unsigned int v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  unsigned __int8 v19;
  BOOL v20;
  char v21;
  char v22;
  char v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  unsigned __int8 v28;
  unsigned __int8 v29;
  unsigned __int8 v30;
  unsigned __int8 *v31;
  unsigned int v32;
  char v33;
  unint64_t v34;
  unsigned __int8 v35;
  char v36;
  char v37;
  char v38;
  unsigned __int8 *v39;
  unint64_t v40;
  uint64_t v41;
  unsigned __int8 v42;
  unsigned __int8 v43;
  unsigned __int8 v44;
  unsigned __int8 v45;
  unint64_t v46;
  unsigned int v47;
  char v48;
  unint64_t v49;
  unsigned __int8 v50;

  v2 = *result;
  if (v2 == 43)
  {
    if (a2 >= 1)
    {
      if (a2 != 1)
      {
        sub_1C07B7CF0();
        if (v22 ^ v23 | v21)
          v27 = v30;
        if (v22 ^ v23 | v21)
          v28 = 65;
        if (!(v22 ^ v23 | v21))
          v29 = 58;
        if (v24)
        {
          v13 = 0;
          v31 = (unsigned __int8 *)(v24 + 1);
          do
          {
            v32 = *v31;
            if (v32 < 0x30 || v32 >= v29)
            {
              if (v32 < 0x41 || v32 >= v28)
              {
                v17 = 0;
                if (v32 < 0x61 || v32 >= v27)
                  return (unsigned __int8 *)v17;
                v33 = -87;
              }
              else
              {
                v33 = -55;
              }
            }
            else
            {
              v33 = -48;
            }
            if (!is_mul_ok(v13, v25))
              return 0;
            v34 = v13 * v25;
            v35 = v32 + v33;
            v20 = __CFADD__(v34, v35);
            v13 = v34 + v35;
            if (v20)
              return 0;
            ++v31;
            --v26;
          }
          while (v26);
          return (unsigned __int8 *)v13;
        }
        return 0;
      }
      return 0;
    }
  }
  else
  {
    if (v2 != 45)
    {
      if (a2)
      {
        sub_1C07B7CF0();
        if (v37 ^ v38 | v36)
          v42 = v45;
        if (v37 ^ v38 | v36)
          v43 = 65;
        if (!(v37 ^ v38 | v36))
          v44 = 58;
        if (v39)
        {
          v46 = 0;
          do
          {
            v47 = *v39;
            if (v47 < 0x30 || v47 >= v44)
            {
              if (v47 < 0x41 || v47 >= v43)
              {
                v17 = 0;
                if (v47 < 0x61 || v47 >= v42)
                  return (unsigned __int8 *)v17;
                v48 = -87;
              }
              else
              {
                v48 = -55;
              }
            }
            else
            {
              v48 = -48;
            }
            if (!is_mul_ok(v46, v40))
              return 0;
            v49 = v46 * v40;
            v50 = v47 + v48;
            v20 = __CFADD__(v49, v50);
            v46 = v49 + v50;
            if (v20)
              return 0;
            ++v39;
            --v41;
          }
          while (v41);
          return (unsigned __int8 *)v46;
        }
        return 0;
      }
      return 0;
    }
    if (a2 >= 1)
    {
      if (a2 != 1)
      {
        sub_1C07B7CF0();
        if (v4 ^ v5 | v3)
          v9 = v12;
        if (v4 ^ v5 | v3)
          v10 = 65;
        if (!(v4 ^ v5 | v3))
          v11 = 58;
        if (v6)
        {
          v13 = 0;
          for (i = (unsigned __int8 *)(v6 + 1); ; ++i)
          {
            v15 = *i;
            if (v15 < 0x30 || v15 >= v11)
            {
              if (v15 < 0x41 || v15 >= v10)
              {
                v17 = 0;
                if (v15 < 0x61 || v15 >= v9)
                  return (unsigned __int8 *)v17;
                v16 = -87;
              }
              else
              {
                v16 = -55;
              }
            }
            else
            {
              v16 = -48;
            }
            if (!is_mul_ok(v13, v7))
              return 0;
            v18 = v13 * v7;
            v19 = v15 + v16;
            v20 = v18 >= v19;
            v13 = v18 - v19;
            if (!v20)
              return 0;
            if (!--v8)
              return (unsigned __int8 *)v13;
          }
        }
        return 0;
      }
      return 0;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_1C0C9F468()
{
  unint64_t result;

  result = qword_1EF646670;
  if (!qword_1EF646670)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PersonalKnowledgeResult, &type metadata for PersonalKnowledgeResult);
    atomic_store(result, (unint64_t *)&qword_1EF646670);
  }
  return result;
}

unsigned __int8 *sub_1C0C9F4A4(unsigned __int8 *result, uint64_t a2)
{
  int v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  unsigned __int8 v10;
  unsigned __int8 v11;
  unsigned __int8 v12;
  uint64_t v13;
  unsigned __int8 *i;
  unsigned int v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  unsigned __int8 v28;
  unsigned __int8 *v29;
  unsigned int v30;
  char v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  unsigned __int8 *v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 v39;
  unsigned __int8 v40;
  unsigned __int8 v41;
  unsigned __int8 v42;
  uint64_t v43;
  unsigned int v44;
  char v45;
  uint64_t v46;

  v2 = *result;
  if (v2 == 43)
  {
    if (a2 >= 1)
    {
      if (a2 != 1)
      {
        sub_1C07B7CF0();
        if (v20 ^ v21 | v19)
          v25 = v28;
        if (v20 ^ v21 | v19)
          v26 = 65;
        if (!(v20 ^ v21 | v19))
          v27 = 58;
        if (v22)
        {
          v13 = 0;
          v29 = (unsigned __int8 *)(v22 + 1);
          do
          {
            v30 = *v29;
            if (v30 < 0x30 || v30 >= v27)
            {
              if (v30 < 0x41 || v30 >= v26)
              {
                v17 = 0;
                if (v30 < 0x61 || v30 >= v25)
                  return (unsigned __int8 *)v17;
                v31 = -87;
              }
              else
              {
                v31 = -55;
              }
            }
            else
            {
              v31 = -48;
            }
            v32 = v13 * v23;
            if ((unsigned __int128)(v13 * (__int128)v23) >> 64 != (v13 * v23) >> 63)
              return 0;
            v13 = v32 + (v30 + v31);
            if (__OFADD__(v32, (v30 + v31)))
              return 0;
            ++v29;
            --v24;
          }
          while (v24);
          return (unsigned __int8 *)v13;
        }
        return 0;
      }
      return 0;
    }
  }
  else
  {
    if (v2 != 45)
    {
      if (a2)
      {
        sub_1C07B7CF0();
        if (v34 ^ v35 | v33)
          v39 = v42;
        if (v34 ^ v35 | v33)
          v40 = 65;
        if (!(v34 ^ v35 | v33))
          v41 = 58;
        if (v36)
        {
          v43 = 0;
          do
          {
            v44 = *v36;
            if (v44 < 0x30 || v44 >= v41)
            {
              if (v44 < 0x41 || v44 >= v40)
              {
                v17 = 0;
                if (v44 < 0x61 || v44 >= v39)
                  return (unsigned __int8 *)v17;
                v45 = -87;
              }
              else
              {
                v45 = -55;
              }
            }
            else
            {
              v45 = -48;
            }
            v46 = v43 * v37;
            if ((unsigned __int128)(v43 * (__int128)v37) >> 64 != (v43 * v37) >> 63)
              return 0;
            v43 = v46 + (v44 + v45);
            if (__OFADD__(v46, (v44 + v45)))
              return 0;
            ++v36;
            --v38;
          }
          while (v38);
          return (unsigned __int8 *)(v46 + (v44 + v45));
        }
        return 0;
      }
      return 0;
    }
    if (a2 >= 1)
    {
      if (a2 != 1)
      {
        sub_1C07B7CF0();
        if (v4 ^ v5 | v3)
          v9 = v12;
        if (v4 ^ v5 | v3)
          v10 = 65;
        if (!(v4 ^ v5 | v3))
          v11 = 58;
        if (v6)
        {
          v13 = 0;
          for (i = (unsigned __int8 *)(v6 + 1); ; ++i)
          {
            v15 = *i;
            if (v15 < 0x30 || v15 >= v11)
            {
              if (v15 < 0x41 || v15 >= v10)
              {
                v17 = 0;
                if (v15 < 0x61 || v15 >= v9)
                  return (unsigned __int8 *)v17;
                v16 = -87;
              }
              else
              {
                v16 = -55;
              }
            }
            else
            {
              v16 = -48;
            }
            v18 = v13 * v7;
            if ((unsigned __int128)(v13 * (__int128)v7) >> 64 != (v13 * v7) >> 63)
              return 0;
            v13 = v18 - (v15 + v16);
            if (__OFSUB__(v18, (v15 + v16)))
              return 0;
            if (!--v8)
              return (unsigned __int8 *)v13;
          }
        }
        return 0;
      }
      return 0;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_1C0C9F708(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xB0uLL);
}

uint64_t sub_1C0C9F720()
{
  return sub_1C106AA20();
}

unsigned __int8 *sub_1C0C9F72C(unsigned __int8 *result, uint64_t a2)
{
  return sub_1C0C9F4A4(result, a2);
}

void sub_1C0C9F738()
{
  JUMPOUT(0x1C3BA0EE4);
}

void sub_1C0C9F744()
{
  JUMPOUT(0x1C3BA0EF0);
}

uint64_t sub_1C0C9F750()
{
  uint64_t v0;

  v0 = sub_1C106AA2C();
  sub_1C0800A9C(v0, qword_1EF646678);
  sub_1C079E000(v0, (uint64_t)qword_1EF646678);
  return sub_1C106AA20();
}

void static PersonalKnowledgeTool.title.getter(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EF62E250 != -1)
    swift_once();
  v2 = sub_1C079B940();
  v3 = sub_1C079E000(v2, (uint64_t)qword_1EF646678);
  sub_1C077F040();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
  sub_1C077C0D8();
}

void static PersonalKnowledgeTool.title.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF62E250 != -1)
    swift_once();
  v2 = sub_1C079B940();
  v3 = sub_1C079E000(v2, (uint64_t)qword_1EF646678);
  sub_1C077F040();
  v4 = *(_QWORD *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
  sub_1C077C0D8();
}

uint64_t (*static PersonalKnowledgeTool.title.modify())()
{
  uint64_t v0;

  if (qword_1EF62E250 != -1)
    swift_once();
  v0 = sub_1C079B940();
  sub_1C079E000(v0, (uint64_t)qword_1EF646678);
  sub_1C077F040();
  return j_j__swift_endAccess;
}

uint64_t static PersonalKnowledgeTool.isDiscoverable.getter()
{
  sub_1C077F040();
  return byte_1EF646690;
}

uint64_t static PersonalKnowledgeTool.isDiscoverable.setter(char a1)
{
  uint64_t result;

  result = sub_1C077F040();
  byte_1EF646690 = a1;
  return result;
}

uint64_t (*static PersonalKnowledgeTool.isDiscoverable.modify())()
{
  sub_1C077F040();
  return j__swift_endAccess;
}

uint64_t static PersonalKnowledgeTool.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_1C07ACF80(&qword_1EF646498);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v11 - v6;
  sub_1C079B940();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v8);
  sub_1C0778564();
  sub_1C077B66C();
  sub_1C106AA20();
  sub_1C077B66C();
  sub_1C106AA20();
  sub_1C079962C((uint64_t)v7);
  sub_1C106AA20();
  sub_1C079962C((uint64_t)v4);
  sub_1C106A618();
  v9 = sub_1C106A60C();
  return sub_1C07B2D8C(a1, 0, 1, v9);
}

uint64_t PersonalKnowledgeTool.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = sub_1C106A66C();
  MEMORY[0x1E0C80A78](v1);
  sub_1C0778564();
  sub_1C07ACF80(&qword_1EF646698);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v2);
  sub_1C0778564();
  v5 = v4 - v3;
  sub_1C07ACF80(&qword_1EF6466A0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0778564();
  sub_1C07ACF80(&qword_1EF646498);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  sub_1C0778564();
  v10 = v9 - v8;
  v21 = sub_1C079B940();
  MEMORY[0x1E0C80A78](v21);
  sub_1C0778564();
  sub_1C07ACF80(&qword_1EF6466A8);
  sub_1C077B66C();
  sub_1C106AA20();
  sub_1C079E7A8();
  sub_1C078AB18(v10, 0);
  v20 = sub_1C106FAB4();
  v11 = sub_1C0794884();
  sub_1C07B2D8C(v11, v12, v13, v14);
  sub_1C106A564();
  sub_1C078AB18(v5, 1);
  sub_1C0795330();
  sub_1C07A4AA8();
  v19 = sub_1C106A600();
  sub_1C07ACF80(&qword_1EF6466B0);
  sub_1C077B66C();
  sub_1C106AA20();
  sub_1C079E7A8();
  sub_1C07B2D8C(v10, 0, 1, v21);
  v15 = sub_1C0794884();
  sub_1C07B2D8C(v15, v16, v17, v20);
  sub_1C078AB18(v5, 1);
  sub_1C0795330();
  sub_1C07A4AA8();
  result = sub_1C106A600();
  *a1 = v19;
  a1[1] = result;
  return result;
}

uint64_t PersonalKnowledgeTool.perform()(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 160) = a1;
  sub_1C07ACF80(&qword_1EF6466C0);
  *(_QWORD *)(v2 + 168) = sub_1C0779644();
  sub_1C07ACF80(&qword_1EF6466C8);
  *(_QWORD *)(v2 + 176) = sub_1C0779644();
  sub_1C07ACF80(&qword_1EF6466D0);
  *(_QWORD *)(v2 + 184) = sub_1C0779644();
  v3 = sub_1C106A564();
  *(_QWORD *)(v2 + 192) = v3;
  *(_QWORD *)(v2 + 200) = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 + 208) = sub_1C0779644();
  *(_OWORD *)(v2 + 216) = *v1;
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0C9FE20()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;

  if (qword_1ED752E18 != -1)
    swift_once();
  v1 = (void *)qword_1ED78CDC8;
  *(_QWORD *)(v0 + 232) = qword_1ED78CDC8;
  if (v1)
  {
    v2 = qword_1ED751418;
    v3 = v1;
    if (v2 != -1)
      swift_once();
    sub_1C077F040();
    sub_1C078A8F8((uint64_t)&xmmword_1ED78CD98, v0 + 56, &qword_1ED753960);
    if (*(_QWORD *)(v0 + 80))
    {
      sub_1C077DD60((__int128 *)(v0 + 56), v0 + 16);
      swift_retain();
      swift_retain();
      sub_1C106A5F4();
      v4 = *(_QWORD *)(v0 + 120);
      v5 = *(_QWORD *)(v0 + 128);
      *(_QWORD *)(v0 + 240) = v5;
      sub_1C106A5F4();
      swift_release();
      swift_release();
      v6 = *(_QWORD *)(v0 + 136);
      v7 = *(_QWORD *)(v0 + 144);
      *(_QWORD *)(v0 + 248) = v7;
      v8 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 256) = v8;
      *v8 = v0;
      v8[1] = sub_1C0CA01C8;
      return static PersonalKnowledgeTool.perform(knosisServer:ecrServer:kgq:nlQuery:)((uint64_t)v3, v0 + 16, v4, v5, v6, v7);
    }
    sub_1C0784B94(v0 + 56, &qword_1ED753960);
    if (qword_1EF62DFF0 != -1)
      swift_once();
    v16 = sub_1C077585C();
    sub_1C079E000(v16, (uint64_t)qword_1EF6D17F8);
    v17 = sub_1C106F538();
    v18 = sub_1C1070390();
    if (sub_1C07758D8(v18))
    {
      v19 = (uint8_t *)sub_1C0775854();
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_1C0771000, v17, (os_log_type_t)(v0 + 96), "ECR server not initialized", v19, 2u);
      sub_1C0776778();
    }

    sub_1C07B496C();
    sub_1C07803F8(&qword_1EF6466D8, (void (*)(uint64_t))MEMORY[0x1E0D3D790]);
    sub_1C0775810();
    sub_1C078B31C(v20, *MEMORY[0x1E0D3D788]);
    swift_willThrow();

  }
  else
  {
    if (qword_1EF62DFF0 != -1)
      swift_once();
    v10 = sub_1C077585C();
    sub_1C079E000(v10, (uint64_t)qword_1EF6D17F8);
    v11 = sub_1C106F538();
    v12 = sub_1C1070390();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)sub_1C0775854();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_1C0771000, v11, v12, "Knosis server not initialized", v13, 2u);
      sub_1C0776778();
    }

    v14 = sub_1C07B496C();
    sub_1C07803F8(&qword_1EF6466D8, (void (*)(uint64_t))MEMORY[0x1E0D3D790]);
    sub_1C0775810();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v15, *MEMORY[0x1E0D3D788], v14);
    swift_willThrow();
  }
  sub_1C0793F10();
  sub_1C07796F8();
  sub_1C07758BC();
  sub_1C0779D18();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C0CA01C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 264) = a1;
  *(_QWORD *)(v3 + 272) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v1)
    swift_bridgeObjectRelease();
  sub_1C07767AC();
  sub_1C077862C();
  return swift_task_switch();
}

uint64_t sub_1C0CA0254()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 264);
  if (*(_QWORD *)(v1 + 16))
  {
    v2 = *(_QWORD *)(v0 + 176);
    v3 = *(_QWORD *)(v0 + 168);
    v4 = swift_task_alloc();
    *(_QWORD *)(v4 + 16) = v1;
    v5 = sub_1C106A690();
    sub_1C07B2D8C(v2, 1, 1, v5);
    v6 = sub_1C106A6B4();
    sub_1C07B2D8C(v3, 1, 1, v6);
    v7 = sub_1C07ACF80(&qword_1EF6466E8);
    v8 = sub_1C0CA1368();
    v9 = sub_1C0CA13A4();
    MEMORY[0x1C3BA0E60](sub_1C0CA1360, v4, v2, v3, &type metadata for PersonalKnowledgeTool, v7, v8, v9);
    sub_1C077C104();
    sub_1C106A558();
  }
  else
  {
    sub_1C106A54C();
  }
  v10 = *(void **)(v0 + 232);
  v12 = *(_QWORD *)(v0 + 200);
  v11 = *(_QWORD *)(v0 + 208);
  v13 = *(_QWORD *)(v0 + 192);
  *(_QWORD *)(v0 + 152) = *(_QWORD *)(v0 + 264);
  sub_1C07ACF80(&qword_1EF6466E8);
  sub_1C0CA13A4();
  sub_1C106A570();

  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 16);
  sub_1C07767AC();
  sub_1C07758BC();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C0CA042C()
{
  uint64_t v0;

  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 16);
  sub_1C0793F10();
  sub_1C07796F8();
  sub_1C07758BC();
  sub_1C0779D18();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static PersonalKnowledgeTool.perform(knosisServer:ecrServer:kgq:nlQuery:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v6[22] = a5;
  v6[23] = a6;
  v6[20] = a3;
  v6[21] = a4;
  v6[18] = a1;
  v6[19] = a2;
  sub_1C07ACF80(&qword_1EF646700);
  v6[24] = sub_1C0779644();
  v7 = sub_1C106D7A4();
  v6[25] = v7;
  v6[26] = *(_QWORD *)(v7 - 8);
  v6[27] = sub_1C0779644();
  v6[28] = sub_1C07ACF80(&qword_1EF646708);
  v6[29] = sub_1C0775870();
  v6[30] = sub_1C0775870();
  v6[31] = sub_1C0775870();
  v6[32] = sub_1C0775870();
  v6[33] = sub_1C0775870();
  v6[34] = sub_1C0775870();
  v6[35] = sub_1C0775870();
  v8 = sub_1C106EF08();
  v6[36] = v8;
  v6[37] = *(_QWORD *)(v8 - 8);
  v6[38] = sub_1C0779644();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0CA0560()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if (qword_1EF62DFF0 != -1)
    swift_once();
  v1 = sub_1C077585C();
  v2 = sub_1C079E000(v1, (uint64_t)qword_1EF6D17F8);
  *(_QWORD *)(v0 + 312) = v2;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v3 = sub_1C106F538();
  v4 = sub_1C1070384();
  if (sub_1C07758D8(v4))
  {
    v15 = *(_QWORD *)(v0 + 184);
    v16 = *(_QWORD *)(v0 + 176);
    v5 = *(_QWORD *)(v0 + 160);
    v6 = sub_1C0775854();
    v17 = sub_1C0775854();
    *(_DWORD *)v6 = 136315394;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    *(_QWORD *)(v0 + 128) = sub_1C07830C0(v5, v7, &v17);
    sub_1C10705AC();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v6 + 12) = 2080;
    if (v15)
      v8 = v16;
    else
      v8 = 4271950;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    *(_QWORD *)(v0 + 136) = sub_1C07830C0(v8, v9, &v17);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    sub_1C07878E4();
    _os_log_impl(&dword_1C0771000, v3, (os_log_type_t)v2, "kgq: %s, nlQuery: %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    sub_1C0776778();
  }
  swift_bridgeObjectRelease_n();
  sub_1C07878E4();

  v10 = *(_QWORD *)(v0 + 224);
  v11 = *(void **)(v0 + 144);
  sub_1C07D6D1C(*(_QWORD *)(v0 + 152), v0 + 16);
  v12 = v11;
  sub_1C106EEF0();
  *(_DWORD *)(v0 + 336) = *(_DWORD *)(v10 + 48);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 320) = v13;
  *v13 = v0;
  v13[1] = sub_1C0CA07D0;
  return sub_1C106EEFC();
}

uint64_t sub_1C0CA07D0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 328) = v0;
  swift_task_dealloc();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0CA0828()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  void (*v33)(uint64_t);
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  _BOOL4 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint8_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(uint64_t);
  unint64_t v84;
  void (*v85)(uint64_t, uint64_t, uint64_t);
  uint64_t v86;
  uint64_t v87;

  v2 = *(_QWORD *)(v0 + 272);
  v1 = *(_QWORD *)(v0 + 280);
  v3 = *(_QWORD *)(v0 + 264);
  v4 = v1 + *(int *)(v0 + 336);
  v5 = v2 + *(int *)(*(_QWORD *)(v0 + 224) + 48);
  v6 = sub_1C106D7C8();
  v82 = *(_QWORD *)(v6 - 8);
  v85 = *(void (**)(uint64_t, uint64_t, uint64_t))(v82 + 16);
  v85(v2, v1, v6);
  sub_1C078A8F8(v4, v5, &qword_1EF646478);
  sub_1C078A67C(v2, v3, &qword_1EF646708);
  v7 = sub_1C106F538();
  v8 = sub_1C1070384();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(_QWORD *)(v0 + 256);
    v10 = *(_QWORD *)(v0 + 264);
    v11 = *(_QWORD *)(v0 + 224);
    v12 = (uint8_t *)sub_1C0775854();
    v87 = sub_1C0775854();
    *(_DWORD *)v12 = 136315138;
    v13 = *(int *)(v11 + 48);
    v14 = v9 + v13;
    v15 = v10 + v13;
    v16 = sub_1C07A33AC();
    ((void (*)(uint64_t))v85)(v16);
    sub_1C078A8F8(v15, v14, &qword_1EF646478);
    v17 = MEMORY[0x1C3BA40DC]();
    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v9, v6);
    sub_1C0784B94(v14, &qword_1EF646478);
    v18 = sub_1C106D774();
    MEMORY[0x1C3BA683C](v17, v18);
    swift_bridgeObjectRelease();
    v19 = sub_1C07A33AC();
    *(_QWORD *)(v0 + 120) = sub_1C0788DAC(v19, v20, v21);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    sub_1C0784B94(v10, &qword_1EF646708);
    _os_log_impl(&dword_1C0771000, v7, v8, "knosis result: %s", v12, 0xCu);
    swift_arrayDestroy();
    sub_1C0776778();
  }
  sub_1C0784B94(*(_QWORD *)(v0 + 264), &qword_1EF646708);

  v22 = v6;
  v23 = *(_QWORD *)(v0 + 248);
  v24 = *(_QWORD *)(v0 + 216);
  v25 = *(_QWORD *)(v0 + 224);
  v26 = *(_QWORD *)(v0 + 200);
  v27 = *(_QWORD *)(v0 + 208);
  v28 = *(_QWORD *)(v0 + 280) + *(int *)(v0 + 336);
  v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3570]), sel_init);
  objc_msgSend(v29, sel_setUnitsStyle_, 3);
  objc_msgSend(v29, sel_setMaximumUnitCount_, 2);
  *(_QWORD *)(v0 + 104) = MEMORY[0x1E0DEE9D8];
  v30 = v23 + *(int *)(v25 + 48);
  v31 = sub_1C07A33AC();
  v32 = v85;
  ((void (*)(uint64_t))v85)(v31);
  sub_1C078A8F8(v28, v30, &qword_1EF646478);
  sub_1C106D7B0();
  v33 = *(void (**)(uint64_t))(v82 + 8);
  sub_1C07B19AC();
  v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 88))(v24, v26);
  v80 = v29;
  if (v34 == *MEMORY[0x1E0D3C230])
  {
    v79 = v30;
    v35 = v22;
    v36 = *(_QWORD *)(v0 + 280);
    v83 = v33;
    v37 = *(_QWORD *)(v0 + 240);
    v38 = *(_QWORD *)(v0 + 224);
    v39 = v36 + *(int *)(v0 + 336);
    v40 = *(_QWORD *)(v0 + 256) + *(int *)(v38 + 48);
    v85(*(_QWORD *)(v0 + 256), v36, v35);
    sub_1C078A8F8(v39, v40, &qword_1EF646478);
    MEMORY[0x1C3BA40DC]();
    v41 = sub_1C07A33AC();
    v83(v41);
    v42 = v37 + *(int *)(v38 + 48);
    v43 = v36;
    v44 = v35;
    v32 = v85;
    v85(v37, v43, v44);
    sub_1C078A8F8(v39, v42, &qword_1EF646478);
    v45 = swift_task_alloc();
    *(_QWORD *)(v45 + 16) = v37;
    *(_QWORD *)(v45 + 24) = v80;
    sub_1C0BCAC80();
    v47 = v46;
    sub_1C07767AC();
    sub_1C07767BC();
    sub_1C0784B94(v37, &qword_1EF646708);
    sub_1C0784B94(v40, &qword_1EF646478);
    sub_1C079324C();
    *(_QWORD *)(v0 + 104) = v47;
    v48 = v79;
  }
  else
  {
    if (v34 == *MEMORY[0x1E0D3C220])
      goto LABEL_10;
    if (v34 == *MEMORY[0x1E0D3C228])
    {
      v49 = v29;
      v51 = *(_QWORD *)(v0 + 296);
      v50 = *(_QWORD *)(v0 + 304);
      v52 = v30;
      v54 = *(_QWORD *)(v0 + 280);
      v53 = *(_QWORD *)(v0 + 288);
      sub_1C07B496C();
      sub_1C07803F8(&qword_1EF6466D8, (void (*)(uint64_t))MEMORY[0x1E0D3D790]);
      sub_1C0775810();
      sub_1C078B31C(v55, *MEMORY[0x1E0D3D780]);
      swift_willThrow();

      sub_1C0784B94(v54, &qword_1EF646708);
      (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v50, v53);
      sub_1C0784B94(v52, &qword_1EF646478);
      sub_1C079324C();
      sub_1C0796A14();
      sub_1C07796F8();
      sub_1C07758BC();
      sub_1C0779D18();
      sub_1C077C104();
      sub_1C07767D4();
      sub_1C0778638();
      sub_1C0786388();
      sub_1C0779D20();
      sub_1C07767BC();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    if (v34 == *MEMORY[0x1E0D3C238])
    {
LABEL_10:
      sub_1C0784B94(v30, &qword_1EF646478);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 104) = MEMORY[0x1E0DEE9D8];
      goto LABEL_11;
    }
    v77 = *(_QWORD *)(v0 + 208);
    v76 = *(_QWORD *)(v0 + 216);
    v78 = *(_QWORD *)(v0 + 200);
    sub_1C079324C();
    *(_QWORD *)(v0 + 104) = MEMORY[0x1E0DEE9D8];
    (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v76, v78);
    v48 = v30;
  }
  sub_1C0784B94(v48, &qword_1EF646478);
LABEL_11:
  v57 = *(_QWORD *)(v0 + 192);
  v58 = *(_QWORD *)(v0 + 280) + *(int *)(v0 + 336);
  v59 = *(_QWORD *)(v0 + 232) + *(int *)(*(_QWORD *)(v0 + 224) + 48);
  ((void (*)(_QWORD))v32)(*(_QWORD *)(v0 + 232));
  sub_1C078A8F8(v58, v59, &qword_1EF646478);
  sub_1C106D798();
  sub_1C07B19AC();
  v60 = sub_1C106F13C();
  v61 = sub_1C07B2D80(v57, 1, v60);
  v62 = *(_QWORD *)(v0 + 192);
  if (v61 == 1)
  {
    sub_1C0784B94(v59, &qword_1EF646478);
    sub_1C0784B94(v62, &qword_1EF646700);
    v84 = 0xE000000000000000;
    v86 = 0;
  }
  else
  {
    sub_1C07803F8(&qword_1EF646710, (void (*)(uint64_t))MEMORY[0x1E0D3DC38]);
    v63 = sub_1C106F9E8();
    v84 = v64;
    v86 = v63;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 8))(v62, v60);
    sub_1C0784B94(v59, &qword_1EF646478);
  }
  v65 = sub_1C106F538();
  v66 = sub_1C1070384();
  v67 = os_log_type_enabled(v65, v66);
  v69 = *(_QWORD *)(v0 + 296);
  v68 = *(_QWORD *)(v0 + 304);
  v71 = *(_QWORD *)(v0 + 280);
  v70 = *(_QWORD *)(v0 + 288);
  if (v67)
  {
    v72 = (uint8_t *)sub_1C0775854();
    v87 = sub_1C0775854();
    *(_DWORD *)v72 = 136315138;
    sub_1C077F040();
    v73 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v74 = MEMORY[0x1C3BA683C](v73, &type metadata for PersonalKnowledgeResult);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 112) = sub_1C07830C0(v74, v75, &v87);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0771000, v65, v66, "final result: %s", v72, 0xCu);
    swift_arrayDestroy();
    sub_1C0776778();
  }

  sub_1C0784B94(v71, &qword_1EF646708);
  (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v68, v70);
  sub_1C077F040();
  v81 = *(_QWORD *)(v0 + 104);
  sub_1C07767BC();
  sub_1C07796F8();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C07767D4();
  sub_1C0778638();
  sub_1C0786388();
  sub_1C0779D20();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t, unint64_t))(v0 + 8))(v81, v86, v84);
}

uint64_t sub_1C0CA10C0()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 296) + 8))(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 288));
  sub_1C0796A14();
  sub_1C07796F8();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C07767D4();
  sub_1C0778638();
  sub_1C0786388();
  sub_1C0779D20();
  sub_1C07767BC();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C0CA114C(uint64_t a1)
{
  sub_1C0A579B4(a1);
  sub_1C07ACF80(&qword_1EF6466E8);
  sub_1C0CA13A4();
  sub_1C106A630();
  swift_bridgeObjectRelease();
  sub_1C106A624();
  return swift_bridgeObjectRelease();
}

void sub_1C0CA11CC(uint64_t a1@<X1>, void *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[176];

  v6 = sub_1C07ACF80(&qword_1EF646478);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = *(int *)(sub_1C07ACF80(&qword_1EF646708) + 48);
  v10 = sub_1C106D768();
  if (v11)
  {
    v12 = v10;
    v13 = v11;
    sub_1C078A8F8(a1 + v9, (uint64_t)v8, &qword_1EF646478);
    PersonalKnowledgeResult.init(_:resultAttribute:dateComponentsFormatter:)(v12, v13, (uint64_t)v8, (uint64_t)a2, (uint64_t)v14);
  }
  sub_1C0C9B194(v14);
  sub_1C078A67C((uint64_t)v14, a3, &qword_1EF641BB8);
}

uint64_t sub_1C0CA12E4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C0806670;
  return PersonalKnowledgeTool.perform()(a1);
}

uint64_t sub_1C0CA1338()
{
  sub_1C0CA1368();
  return sub_1C106A534();
}

uint64_t sub_1C0CA1360()
{
  uint64_t v0;

  return sub_1C0CA114C(*(_QWORD *)(v0 + 16));
}

unint64_t sub_1C0CA1368()
{
  unint64_t result;

  result = qword_1EF6466F0;
  if (!qword_1EF6466F0)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PersonalKnowledgeTool, &type metadata for PersonalKnowledgeTool);
    atomic_store(result, (unint64_t *)&qword_1EF6466F0);
  }
  return result;
}

unint64_t sub_1C0CA13A4()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1EF6466F8;
  if (!qword_1EF6466F8)
  {
    v1 = sub_1C07D4BEC(&qword_1EF6466E8);
    v2 = sub_1C0C9DBF4();
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0C91CC8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EF6466F8);
  }
  return result;
}

void sub_1C0CA1408(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1C0CA11CC(*(_QWORD *)(v1 + 16), *(void **)(v1 + 24), a1);
}

unint64_t sub_1C0CA1424()
{
  unint64_t result;

  result = qword_1EF646718;
  if (!qword_1EF646718)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PersonalKnowledgeTool, &type metadata for PersonalKnowledgeTool);
    atomic_store(result, (unint64_t *)&qword_1EF646718);
  }
  return result;
}

unint64_t sub_1C0CA1464()
{
  unint64_t result;

  result = qword_1EF646720;
  if (!qword_1EF646720)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PersonalKnowledgeTool, &type metadata for PersonalKnowledgeTool);
    atomic_store(result, (unint64_t *)&qword_1EF646720);
  }
  return result;
}

uint64_t sub_1C0CA14A0()
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1C0CA14C4()
{
  sub_1C0CA1368();
  return swift_getOpaqueTypeConformance2();
}

void sub_1C0CA1508(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  swift_retain();
  swift_retain();
  sub_1C0778534();
}

_QWORD *_s23ScheduleStateStatementsVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *_s23ScheduleStateStatementsVwta(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for PersonalKnowledgeTool()
{
  return &type metadata for PersonalKnowledgeTool;
}

void sub_1C0CA15E0()
{
  sub_1C0CA1628(&qword_1EF646730);
}

void sub_1C0CA1604()
{
  sub_1C0CA1628(qword_1EF646740);
}

void sub_1C0CA1628(_QWORD *a1)
{
  if (!*a1)
  {
    sub_1C07D4BEC(&qword_1EF646738);
    sub_1C077D8A0();
  }
  sub_1C0778534();
}

uint64_t sub_1C0CA1660()
{
  return sub_1C0CA1AE8();
}

void sub_1C0CA1670(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = sub_1C0CA16B4(a1, &qword_1ED7549C0, (uint64_t)&qword_1ED78CE20, (uint64_t (*)(uint64_t))sub_1C0CBD818);
  if (!v2)
    *a2 = v4;
  sub_1C077E8AC();
}

uint64_t sub_1C0CA16B4(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;

  if (*a2 != -1)
    swift_once();
  swift_retain();
  v6 = a4(a1);
  swift_release();
  return v6;
}

void sub_1C0CA1734(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = sub_1C0CA16B4(a1, &qword_1ED762DA8, (uint64_t)&qword_1ED78D9B0, (uint64_t (*)(uint64_t))sub_1C0CBD8A4);
  if (!v2)
    *a2 = v4;
  sub_1C077E8AC();
}

void sub_1C0CA1778(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = sub_1C0CA16B4(a1, &qword_1ED761FF8, (uint64_t)&qword_1ED78D9C8, (uint64_t (*)(uint64_t))sub_1C0CBD8C0);
  if (!v2)
    *a2 = v4;
  sub_1C077E8AC();
}

void sub_1C0CA17BC(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = sub_1C0CA16B4(a1, &qword_1ED762E70, (uint64_t)&qword_1ED78D9D0, (uint64_t (*)(uint64_t))sub_1C0CBD834);
  if (!v2)
    *a2 = v4;
  sub_1C077E8AC();
}

void sub_1C0CA1800(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = sub_1C0CA16B4(a1, &qword_1ED762790, (uint64_t)&qword_1ED78D988, (uint64_t (*)(uint64_t))sub_1C0CBD7FC);
  if (!v2)
    *a2 = v4;
  sub_1C077E8AC();
}

uint64_t sub_1C0CA1844()
{
  return sub_1C106E4B8();
}

uint64_t sub_1C0CA18A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  sub_1C0CA1844();
  return swift_release();
}

void sub_1C0CA18DC(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = sub_1C0CA16B4(a1, &qword_1ED762810, (uint64_t)&qword_1ED78D9B8, (uint64_t (*)(uint64_t))sub_1C0CBD7E0);
  if (!v2)
    *a2 = v4;
  sub_1C077E8AC();
}

void sub_1C0CA1920(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = sub_1C0CA16B4(a1, &qword_1ED762818, (uint64_t)&qword_1ED78D9C0, (uint64_t (*)(uint64_t))sub_1C0CBD850);
  if (!v2)
    *a2 = v4;
  sub_1C077E8AC();
}

uint64_t sub_1C0CA1964()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C0CA1980()
{
  sub_1C0CA1964();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0CA19A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_1C1070564();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v5 - v2;
  swift_beginAccess();
  sub_1C106AB28();
  sub_1C0CA1C14();
  sub_1C106F9DC();
  sub_1C106F958();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1C0CA1A90()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t sub_1C0CA1AAC()
{
  sub_1C0CA1A90();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PerURLSingletonLockBox(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0802884(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PerURLSingletonLockBox);
}

uint64_t sub_1C0CA1AD8()
{
  return sub_1C0CA1AE8();
}

uint64_t sub_1C0CA1AE8()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for PerURLSingletonLockBox.GuardedData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0802884(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PerURLSingletonLockBox.GuardedData);
}

void sub_1C0CA1B2C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = sub_1C0CA16B4(a1, &qword_1EF62E290, (uint64_t)&qword_1EF6D1D98, (uint64_t (*)(uint64_t))sub_1C0CBD94C);
  if (!v2)
    *a2 = v4;
  sub_1C077E8AC();
}

void sub_1C0CA1B70(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = sub_1C0CA16B4(a1, &qword_1ED762D98, (uint64_t)&qword_1ED78D998, (uint64_t (*)(uint64_t))sub_1C0CBD8DC);
  if (!v2)
    *a2 = v4;
  sub_1C077E8AC();
}

void sub_1C0CA1BB4(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = sub_1C0CA16B4(a1, &qword_1ED762750, (uint64_t)&qword_1ED78D980, (uint64_t (*)(uint64_t))sub_1C078E5D8);
  if (!v2)
    *a2 = v4;
  sub_1C077E8AC();
}

uint64_t sub_1C0CA1BF8()
{
  return sub_1C0CA19A0();
}

unint64_t sub_1C0CA1C14()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED762670;
  if (!qword_1ED762670)
  {
    v1 = sub_1C106AB28();
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0CB0018], v1);
    atomic_store(result, (unint64_t *)&qword_1ED762670);
  }
  return result;
}

id sub_1C0CA1C54(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for PhotoRelationshipSet();
  v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id sub_1C0CA1CC8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PhotoRelationshipSet();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for PhotoRelationshipSet()
{
  return objc_opt_self();
}

uint64_t sub_1C0CA1D1C(char *a1, uint64_t a2)
{
  uint64_t v2;
  char v3;

  v3 = *a1;
  *(_QWORD *)(v2 + 16) = MEMORY[0x1E0DEE9D8];
  *(_BYTE *)(v2 + 24) = v3;
  sub_1C0ACDE0C(a2, v2 + OBJC_IVAR____TtC24IntelligencePlatformCore20PGRelationshipEntity_tokenizer);
  return v2;
}

void sub_1C0CA1D5C()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  id v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint8_t *v23;
  id v24;
  id v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  _QWORD v31[2];
  NSObject *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  sub_1C0779670();
  v3 = v2;
  v5 = v4;
  sub_1C077585C();
  sub_1C079F76C();
  MEMORY[0x1E0C80A78](v6);
  sub_1C077AF80();
  v9 = (v7 - v8);
  MEMORY[0x1E0C80A78](v10);
  v12 = ((char *)v31 - v11);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v31 - v14;
  sub_1C077C4B0();
  v16 = sub_1C106F538();
  v17 = sub_1C1070378();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)sub_1C0775854();
    *(_WORD *)v18 = 0;
    sub_1C077F048(&dword_1C0771000, v16, v17, "PGRelationship.completionHandler", v18);
    sub_1C0776778();
  }

  v19 = *(_QWORD *)(v0 + 8);
  sub_1C0799A00((uint64_t)v15);
  sub_1C106F160();
  v20 = v5;
  sub_1C106F538();
  v21 = sub_1C077B0C0();
  v22 = os_log_type_enabled(v12, v21);
  v33 = v19;
  if (v22)
  {
    v23 = (uint8_t *)sub_1C0775854();
    v31[0] = sub_1C0775854();
    v32 = v1;
    *(_DWORD *)v23 = 138412290;
    v35 = (uint64_t)v20;
    v24 = v20;
    v31[1] = v12;
    v25 = v24;
    sub_1C10705AC();
    *(_QWORD *)v31[0] = v20;

    sub_1C07796F0(&dword_1C0771000, v12, v21, "PGRelationship.completionHandler.completion %@", v23);
    sub_1C07ACF80(&qword_1ED7614A0);
    sub_1C0778610();
    sub_1C0776778();
  }

  sub_1C0799A00((uint64_t)v12);
  sub_1C106F160();
  swift_unknownObjectRetain_n();
  sub_1C106F538();
  v26 = sub_1C077B0C0();
  if (sub_1C07767E4(v26))
  {
    v32 = v9;
    v27 = (uint8_t *)sub_1C0775854();
    v28 = sub_1C0775854();
    v34 = v3;
    v35 = v28;
    *(_DWORD *)v27 = 136315138;
    swift_unknownObjectRetain();
    sub_1C07ACF80((uint64_t *)&unk_1ED75E400);
    v29 = sub_1C106FB5C();
    v34 = sub_1C0788DAC(v29, v30, &v35);
    sub_1C10705AC();
    swift_unknownObjectRelease_n();
    sub_1C0778580();
    sub_1C07796F0(&dword_1C0771000, v9, (os_log_type_t)v5, "PGRelationship.completionHandler.bookmark %s", v27);
    sub_1C0778610();
    sub_1C0776778();
  }

  swift_unknownObjectRelease_n();
  sub_1C0799A00((uint64_t)v9);
  sub_1C0776760();
}

void sub_1C0CA20A0()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  id v28;
  unint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  id v36;
  void *v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  char *v55;
  void *ObjCClassFromMetadata;
  uint64_t v57;
  uint64_t v58;
  __int128 *v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char **v80;
  uint64_t v81;
  uint64_t v82;
  unsigned __int8 *v83;
  unsigned __int8 *v84;
  _QWORD v85[2];
  __int128 v86;
  unint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  __int128 v94;
  _QWORD *v95;
  _QWORD *v96;
  id v97;
  uint64_t v98;
  char *v99;
  unint64_t v100;
  unint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;

  sub_1C0779670();
  v2 = v1;
  v96 = v0;
  v92 = *v0;
  sub_1C07ACF80(&qword_1EF646900);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  sub_1C077AE40();
  v91 = v4;
  v90 = type metadata accessor for PGRelationshipStructs.IdentifierRelationshipType(0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  sub_1C0778564();
  v8 = v7 - v6;
  v89 = sub_1C07ACF80(&qword_1EF646908);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v9);
  sub_1C077AED0();
  v88 = v10;
  MEMORY[0x1E0C80A78](v11);
  v95 = (_QWORD *)((char *)v85 - v12);
  v98 = type metadata accessor for PGRelationshipStructs.Person(0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v13);
  sub_1C077AF80();
  v16 = v14 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v85 - v18;
  v20 = sub_1C077585C();
  v105 = *(_QWORD *)(v20 - 8);
  v106 = v20;
  MEMORY[0x1E0C80A78](v20);
  sub_1C077AED0();
  v104 = v21;
  v23 = MEMORY[0x1E0C80A78](v22);
  v107 = (uint64_t)v85 - v24;
  v97 = v2;
  v25 = objc_msgSend(v2, sel_sharedItem, v23);
  v26 = objc_msgSend(v25, sel_content);

  if (!v26
    || (objc_opt_self(), v27 = swift_dynamicCastObjCClass(), v26, !v27)
    || objc_msgSend(v97, sel_sharedItemChangeType))
  {
LABEL_39:
    sub_1C0776760();
    return;
  }
  v28 = objc_msgSend(v97, sel_allLocalInstances);
  sub_1C07ACF80(&qword_1EF646910);
  v29 = sub_1C106FF04();

  v101 = v29;
  if (v29 >> 62)
  {
LABEL_41:
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v31 = sub_1C10709B4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v31 = *(_QWORD *)((v101 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v87 = v8;
  v102 = v19;
  v103 = v16;
  if (!v31)
  {
    swift_bridgeObjectRelease();
    v32 = MEMORY[0x1E0DEE9D8];
LABEL_23:
    if (qword_1ED747BD0 != -1)
      swift_once();
    v99 = (char *)type metadata accessor for SourceIdPrefix();
    sub_1C079E000((uint64_t)v99, (uint64_t)&unk_1ED78C678);
    String.base64EncodedSHA(withPrefix:)();
    v101 = (unint64_t)v49;
    v107 = v50;
    v51 = v32;
    v52 = *(_QWORD *)(v32 + 16);
    if (v52)
    {
      v93 = (uint64_t)v96 + OBJC_IVAR____TtC24IntelligencePlatformCore20PGRelationshipEntity_tokenizer;
      v85[1] = v96 + 2;
      sub_1C07767B4();
      v100 = sub_1C07B1280();
      v85[0] = v51;
      v53 = (uint64_t *)(v51 + 40);
      v94 = xmmword_1C10812C0;
      v86 = xmmword_1C10B1CB0;
      do
      {
        v55 = (char *)*(v53 - 1);
        v54 = *v53;
        v108 = (uint64_t)v55;
        v109 = v54;
        v110 = 47;
        v111 = 0xE100000000000000;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        if ((sub_1C1070624() & 1) == 0)
        {
          sub_1C0CA3F44();
          ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
          v57 = sub_1C0CA3F80((uint64_t)v55, v54, ObjCClassFromMetadata);
          if (!v58)
            goto LABEL_43;
          v55 = (char *)v57;
          v54 = v58;
        }
        sub_1C07767B4();
        sub_1C1025E2C();
        v59 = (__int128 *)&v19[*(int *)(v98 + 36)];
        swift_bridgeObjectRelease();
        *v59 = v94;
        if (qword_1ED75AE10 != -1)
          swift_once();
        v60 = (uint64_t *)sub_1C079E000((uint64_t)v99, (uint64_t)&unk_1ED78D6E8);
        v62 = *v60;
        v61 = v60[1];
        v108 = v62;
        v109 = v61;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        sub_1C106FC94();
        sub_1C106FC94();
        sub_1C1025E2C();
        v63 = v89;
        v64 = v95;
        v65 = (uint64_t)v95 + *(int *)(v89 + 48);
        v66 = sub_1C0CA2A9C();
        *v64 = v66;
        v67 = v88;
        v68 = (uint64_t)v88 + *(int *)(v63 + 48);
        sub_1C078A8CC(v65, v68, (uint64_t *)&unk_1EF646918);
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        sub_1C10267C0(v68);
        v69 = (uint64_t)v67 + *(int *)(v63 + 48);
        *v67 = v66;
        v70 = v103;
        sub_1C078A8CC(v65, v69, (uint64_t *)&unk_1EF646918);
        sub_1C0784B6C(v69, (uint64_t *)&unk_1EF646918);
        v71 = *(int *)(v98 + 40);
        swift_bridgeObjectRelease();
        *(_QWORD *)(v70 + v71) = v66;
        sub_1C102992C();
        v72 = sub_1C0779688();
        v73 = v87;
        sub_1C077A2C4(v87, v74, v75, v72);
        v76 = (int *)v90;
        sub_1C106D030();
        v77 = v76[6];
        if (qword_1ED761870 != -1)
          swift_once();
        v78 = sub_1C077674C();
        v79 = sub_1C079E000(v78, (uint64_t)&unk_1ED761850);
        sub_1C0845A4C(v79, v73 + v77, (uint64_t (*)(_QWORD))type metadata accessor for Source);
        sub_1C106DE70();
        v80 = (char **)(v73 + v76[8]);
        sub_1C106DF00();
        v81 = v76[10];
        *v80 = v55;
        v80[1] = (char *)v54;
        *(_OWORD *)(v73 + v81) = v86;
        v82 = v91;
        sub_1C0845A4C(v73, v91, type metadata accessor for PGRelationshipStructs.IdentifierRelationshipType);
        sub_1C07B2D8C(v82, 0, 1, (uint64_t)v76);
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        sub_1C102685C(v82);
        sub_1C07B7488();
        v19 = v102;
        sub_1C10268F8((char *)v101, v107, v83);
        sub_1C07A3E2C();
        sub_1C0BD9D34();
        swift_endAccess();
        sub_1C07B7488();
        sub_1C10268F8(v55, v54, v84);
        sub_1C0778580();
        sub_1C07A3E2C();
        sub_1C0BD9D34();
        swift_endAccess();
        sub_1C0784B6C((uint64_t)v95, &qword_1EF646908);
        sub_1C07B1F90(v70, type metadata accessor for PGRelationshipStructs.Person);
        sub_1C07B1F90(v87, type metadata accessor for PGRelationshipStructs.IdentifierRelationshipType);
        sub_1C07B1F90((uint64_t)v19, type metadata accessor for PGRelationshipStructs.Person);
        v53 += 2;
        --v52;
      }
      while (v52);
      sub_1C07767AC();
    }
    sub_1C07767AC();
    swift_bridgeObjectRelease();
    goto LABEL_39;
  }
  v100 = v101 & 0xC000000000000001;
  v32 = MEMORY[0x1E0DEE9D8];
  v33 = 4;
  *(_QWORD *)&v30 = 136315138;
  v94 = v30;
  v93 = MEMORY[0x1E0DEE9B8] + 8;
  v99 = (char *)v31;
  while (1)
  {
    if (v100)
      v34 = (id)MEMORY[0x1C3BA70DC](v33 - 4, v101);
    else
      v34 = *(id *)(v101 + 8 * v33);
    v35 = v34;
    v19 = (char *)(v33 - 3);
    if (__OFADD__(v33 - 4, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    v36 = sub_1C07877F4((uint64_t)v34, sel_metaContent);
    if (!v36)
      break;
    v37 = v36;
    v38 = objc_msgSend(v36, sel_sourceItemIdentifier);

    v39 = sub_1C106FB14();
    v41 = v40;

    sub_1C077AEBC();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C0797DC4();
      v32 = v47;
    }
    v8 = *(_QWORD *)(v32 + 16);
    if (v8 >= *(_QWORD *)(v32 + 24) >> 1)
    {
      sub_1C0797DC4();
      v32 = v48;
    }
    *(_QWORD *)(v32 + 16) = v8 + 1;
    v42 = v32 + 16 * v8;
    *(_QWORD *)(v42 + 32) = v39;
    *(_QWORD *)(v42 + 40) = v41;
    sub_1C077C4B0();
    sub_1C077AEBC();
    v43 = sub_1C106F538();
    v44 = sub_1C1070378();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = sub_1C0775854();
      v108 = sub_1C0775854();
      *(_DWORD *)v45 = v94;
      sub_1C077AEBC();
      *(_QWORD *)(v45 + 4) = sub_1C0788DAC(v39, v41, &v108);
      swift_bridgeObjectRelease_n();
      sub_1C07796F0(&dword_1C0771000, v43, v44, "PGRelationship.itemField.sourceIdentifier %s", (uint8_t *)v45);
      swift_arrayDestroy();
      sub_1C0776778();
    }

    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v107, v106);
    ++v33;
    v46 = v19 == v99;
    v19 = v102;
    v16 = v103;
    if (v46)
    {
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
  }
  __break(1u);
LABEL_43:
  __break(1u);
}

_QWORD *sub_1C0CA2A9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  unint64_t v39;
  id v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  id v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  _QWORD *v58;
  _QWORD *v59;
  _QWORD *v60;
  NSObject *v61;
  uint64_t *v62;
  os_log_type_t v63;
  _BOOL4 v64;
  uint8_t *v65;
  uint64_t *v66;
  NSObject *v67;
  os_log_type_t v68;
  uint8_t *v69;
  uint64_t *v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  int64_t v93;
  uint64_t v94;
  int *v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  _QWORD *v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  uint8_t *v111;
  _QWORD *v112;
  uint8_t *v113;
  _QWORD *v114;
  _QWORD *v115;
  uint64_t *v116;
  id v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  NSObject *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  int64_t v125;
  int *v126;
  uint64_t *v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;

  sub_1C0779670();
  v132 = v0;
  v133 = v1;
  v120 = v2;
  v4 = v3;
  LOBYTE(v6) = v5;
  v124 = v7;
  v8 = type metadata accessor for PGRelationshipStructs.EntityAliasRelationshipType(0);
  v128 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  sub_1C077AED0();
  v129 = v9;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v111 - v11;
  v127 = (uint64_t *)sub_1C077585C();
  v125 = *(v127 - 1);
  MEMORY[0x1E0C80A78](v127);
  sub_1C077AF80();
  v15 = v13 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v111 - v17;
  MEMORY[0x1E0C80A78](v19);
  v121 = ((char *)&v111 - v20);
  v126 = (int *)type metadata accessor for PGRelationshipStructs.AgentAffiliationRelationshipType(0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v21);
  sub_1C077AE40();
  v123 = v22;
  sub_1C07ACF80(&qword_1ED759C40);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v23);
  sub_1C0778564();
  v26 = v25 - v24;
  v27 = sub_1C106E638();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  sub_1C0778564();
  v31 = (char *)(v30 - v29);
  sub_1C078A8CC(v4, v26, &qword_1ED759C40);
  if (sub_1C07B2D80(v26, 1, v27) == 1)
  {
    sub_1C0784B6C(v26, &qword_1ED759C40);
    sub_1C106F160();
    v32 = sub_1C106F538();
    v33 = sub_1C1070390();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)sub_1C0775854();
      *(_WORD *)v34 = 0;
      sub_1C077F048(&dword_1C0771000, v32, v33, "Tokenizer was not intialized for current system locale. Not emitting aliases.", v34);
      sub_1C0776778();
    }

    sub_1C0788A10(v15, *(uint64_t (**)(uint64_t, _QWORD))(v125 + 8));
    v35 = v124;
    v36 = (uint64_t)v126;
  }
  else
  {
    v118 = v27;
    v119 = v28;
    v37 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 32);
    v122 = v31;
    v38 = v37(v31, v26, v27);
    v39 = (unint64_t)&selRef_sequenceValue;
    v40 = sub_1C07877F4(v38, sel_sharedItem);
    v41 = (uint64_t *)objc_msgSend(v40, sel_content);

    v42 = (uint64_t)v126;
    if (v41)
    {
      objc_opt_self();
      v43 = swift_dynamicCastObjCClass();
      v44 = v123;
      if (v43)
      {
        v45 = (_QWORD *)v43;
        v46 = sub_1C07877F4(v43, sel_allLocalInstances);
        sub_1C07ACF80(&qword_1EF646910);
        v47 = sub_1C106FF04();

        if (v47 >> 62)
          goto LABEL_73;
        v48 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10);
        while (1)
        {
          v49 = sub_1C077589C();
          if (!v48)
            break;
          v50 = sub_1C07877F4(v49, *(const char **)(v39 + 1720));
          v117 = objc_msgSend(v50, sel_sharedIdentifier);

          v51 = sub_1C0779688();
          sub_1C077A2C4(v44, v52, v53, v51);
          sub_1C106D09C();
          v54 = v44 + *(int *)(v42 + 24);
          if (qword_1ED761870 != -1)
            swift_once();
          v55 = sub_1C077674C();
          v56 = sub_1C079E000(v55, (uint64_t)&unk_1ED761850);
          sub_1C0845A4C(v56, v54, (uint64_t (*)(_QWORD))type metadata accessor for Source);
          sub_1C106DFF0();
          v57 = (uint64_t *)(v44 + *(int *)(v42 + 32));
          *v57 = 0;
          v57[1] = 0;
          sub_1C106E038();
          v58 = (_QWORD *)(v44 + *(int *)(v42 + 40));
          *v58 = 0;
          v58[1] = 0;
          v115 = v58;
          sub_1C106DCCC();
          v59 = (_QWORD *)(v44 + *(int *)(v42 + 48));
          *v59 = 0;
          v59[1] = 0;
          sub_1C106E1D0();
          v60 = (_QWORD *)(v44 + *(int *)(v42 + 56));
          *v60 = 0;
          v60[1] = 0;
          v61 = v121;
          sub_1C077C4B0();
          v62 = v41;
          sub_1C106F538();
          v63 = sub_1C077B0C0();
          v64 = sub_1C07767E4(v63);
          v116 = v62;
          if (v64)
          {
            v65 = (uint8_t *)sub_1C0775854();
            v112 = (_QWORD *)sub_1C0775854();
            v113 = v65;
            v114 = v60;
            *(_DWORD *)v65 = 138412290;
            v111 = v65 + 4;
            v130 = v45;
            v66 = v62;
            sub_1C10705AC();
            *v112 = v45;

            sub_1C07796F0(&dword_1C0771000, v61, (os_log_type_t)v6, "PGRelationship.content: %@", v113);
            sub_1C07ACF80(&qword_1ED7614A0);
            sub_1C0778610();
            sub_1C0776778();
          }

          v71 = v62;
          v72 = v119;

          sub_1C0788A10((uint64_t)v121, *(uint64_t (**)(uint64_t, _QWORD))(v125 + 8));
          v73 = objc_msgSend(v45, sel_isUsersPet);
          if (!(_DWORD)v73)
          {
            (*(void (**)(char *, uint64_t))(v72 + 8))(v122, v118);

            v45 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_69:
            v110 = v123;
            v109 = v124;
            sub_1C0845A4C(v123, v124, type metadata accessor for PGRelationshipStructs.AgentAffiliationRelationshipType);
            sub_1C07B2D8C(v109, 0, 1, (uint64_t)v126);
            sub_1C07B1F90(v110, type metadata accessor for PGRelationshipStructs.AgentAffiliationRelationshipType);
            return v45;
          }
          v127 = v45;
          if (qword_1EF62E260 != -1)
            v73 = (id)swift_once();
          v74 = qword_1EF6D1D58;
          v41 = v127;
          v75 = sub_1C07879EC((uint64_t)v73, sel_type);
          sub_1C089B2CC((uint64_t)v75, v74);
          v77 = v76;
          v79 = v78;
          v6 = (uint64_t)v115;
          v80 = swift_bridgeObjectRelease();
          *(_QWORD *)v6 = v77;
          *(_QWORD *)(v6 + 8) = v79;
          v81 = qword_1EF6D1D58;
          v82 = sub_1C07879EC(v80, sel_type);
          sub_1C089B2CC((uint64_t)v82, v81);
          v84 = v83;
          v86 = v85;
          swift_bridgeObjectRelease();
          *v60 = v84;
          v60[1] = v86;
          v87 = sub_1C106E530();
          v89 = v88;
          swift_bridgeObjectRelease();
          *v57 = v87;
          v57[1] = v89;
          v90 = swift_bridgeObjectRelease();
          *(_OWORD *)v59 = xmmword_1C10B1CC0;
          v131 = (char *)MEMORY[0x1E0DEE9E8];
          if (qword_1EF62E258 != -1)
            v90 = swift_once();
          v91 = qword_1EF6D1D50;
          v92 = sub_1C07879EC(v90, sel_type);
          sub_1C089B310((uint64_t)v92, v91);
          v18 = v122;
          if (!v93)
            goto LABEL_42;
          v45 = (_QWORD *)v93;
          v94 = *(_QWORD *)(v93 + 16);
          if (!v94)
          {
            sub_1C07767AC();
LABEL_42:
            v44 = 0;
            v18 = (char *)MEMORY[0x1E0DEE9E8];
LABEL_43:
            v42 = 0;
            v100 = v18 + 56;
            v101 = 1 << v18[32];
            v102 = -1;
            if (v101 < 64)
              v102 = ~(-1 << v101);
            v39 = v102 & *((_QWORD *)v18 + 7);
            v125 = (unint64_t)(v101 + 63) >> 6;
            v45 = (_QWORD *)MEMORY[0x1E0DEE9D8];
            v6 = (uint64_t)type metadata accessor for PGRelationshipStructs.EntityAliasRelationshipType;
            if (v39)
            {
LABEL_46:
              v39 &= v39 - 1;
              goto LABEL_58;
            }
            while (1)
            {
              if (__OFADD__(v42++, 1))
              {
                __break(1u);
                goto LABEL_71;
              }
              if (v42 >= v125)
                goto LABEL_68;
              v104 = *(_QWORD *)&v100[8 * v42];
              if (!v104)
              {
                v105 = v42 + 1;
                if (v42 + 1 >= v125)
                  goto LABEL_68;
                v104 = *(_QWORD *)&v100[8 * v105];
                if (!v104)
                {
                  v105 = v42 + 2;
                  if (v42 + 2 >= v125)
                    goto LABEL_68;
                  v104 = *(_QWORD *)&v100[8 * v105];
                  if (!v104)
                  {
                    v105 = v42 + 3;
                    if (v42 + 3 >= v125)
                    {
LABEL_68:

                      swift_release();
                      sub_1C07A56E0();
                      goto LABEL_69;
                    }
                    v104 = *(_QWORD *)&v100[8 * v105];
                    if (!v104)
                    {
                      while (1)
                      {
                        v42 = v105 + 1;
                        if (__OFADD__(v105, 1))
                          goto LABEL_72;
                        if (v42 >= v125)
                          goto LABEL_68;
                        v104 = *(_QWORD *)&v100[8 * v42];
                        ++v105;
                        if (v104)
                          goto LABEL_57;
                      }
                    }
                  }
                }
                v42 = v105;
              }
LABEL_57:
              v39 = (v104 - 1) & v104;
LABEL_58:
              sub_1C077AEBC();
              objc_msgSend(v127, sel_type);
              sub_1C0CA3C58();
              swift_bridgeObjectRelease();
              sub_1C0845A4C((uint64_t)v12, v129, type metadata accessor for PGRelationshipStructs.EntityAliasRelationshipType);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1C0793254();
                v45 = v107;
              }
              v106 = v45[2];
              v41 = (uint64_t *)(v106 + 1);
              if (v106 >= v45[3] >> 1)
              {
                sub_1C0793254();
                v45 = v108;
              }
              v45[2] = v41;
              sub_1C0CA4008(v129, (uint64_t)v45+ ((*(unsigned __int8 *)(v128 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v128 + 80))+ *(_QWORD *)(v128 + 72) * v106);
              sub_1C07B1F90((uint64_t)v12, type metadata accessor for PGRelationshipStructs.EntityAliasRelationshipType);
              if (v39)
                goto LABEL_46;
            }
          }
          v39 = 0;
          v44 = 0;
          v42 = v93 + 32;
          v121 = *(NSObject **)(v93 + 16);
          v125 = v93;
          while (v39 < v45[2])
          {
            v6 = *(_QWORD *)(v42 + 16 * v39 + 8);
            _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
            sub_1C106E608();
            v41 = (uint64_t *)sub_1C106E614();
            v95 = (int *)v42;
            sub_1C077589C();
            swift_bridgeObjectRelease();
            v96 = v41[2];
            if (v96)
            {
              v97 = v41 + 5;
              do
              {
                v6 = *(v97 - 1);
                v98 = *v97;
                v99 = HIBYTE(*v97) & 0xF;
                if ((*v97 & 0x2000000000000000) == 0)
                  v99 = v6 & 0xFFFFFFFFFFFFLL;
                if (v99)
                {
                  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
                  sub_1C0A7D28C((uint64_t)&v130, v6, v98);
                  swift_bridgeObjectRelease();
                }
                v97 += 2;
                --v96;
              }
              while (v96);
              sub_1C0778580();
              v94 = (uint64_t)v121;
              v18 = v122;
            }
            else
            {
              sub_1C0778580();
              v18 = v122;
            }
            v42 = (uint64_t)v95;
            v45 = (_QWORD *)v125;
            if (++v39 == v94)
            {
              sub_1C07767AC();
              v18 = v131;
              goto LABEL_43;
            }
          }
LABEL_71:
          __break(1u);
LABEL_72:
          __break(1u);
LABEL_73:
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          v48 = sub_1C10709B4();
          sub_1C077589C();
        }
      }

    }
    sub_1C077C4B0();
    v67 = sub_1C106F538();
    v68 = sub_1C1070390();
    if (os_log_type_enabled(v67, v68))
    {
      v69 = (uint8_t *)sub_1C0775854();
      *(_WORD *)v69 = 0;
      sub_1C077F048(&dword_1C0771000, v67, v68, "No content available from Cascade set change, not emitting aliases.", v69);
      sub_1C0776778();
    }

    sub_1C0788A10((uint64_t)v18, *(uint64_t (**)(uint64_t, _QWORD))(v125 + 8));
    sub_1C07A56E0();
    v35 = v124;
    v36 = v42;
  }
  sub_1C07B2D8C(v35, 1, 1, v36);
  return (_QWORD *)MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1C0CA3554()
{
  uint64_t v0;
  uint8_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  void (*v15)(char *, uint8_t *);
  void *v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  uint8_t *v21;
  unint64_t v22;
  id v23;
  uint64_t v24;
  os_log_type_t v25;
  unint64_t v26;
  uint8_t *v27;
  void *v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  _QWORD *v33;
  void *v34;
  uint64_t v35;
  unint64_t v36;
  void *v37;
  id v38;
  void *v39;
  id v40;
  uint64_t v41;
  void *v42;
  void *v43;
  id v44;
  uint64_t v46;
  id v47;
  uint8_t *v48;
  unint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  void (*v53)();
  uint64_t v54;
  uint64_t v55;

  v55 = *MEMORY[0x1E0C80C00];
  sub_1C106F544();
  sub_1C079F76C();
  MEMORY[0x1E0C80A78](v2);
  sub_1C077AF80();
  v5 = v3 - v4;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v46 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v46 - v10;
  sub_1C106F160();
  v12 = sub_1C106F538();
  v13 = sub_1C1070378();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)sub_1C0775854();
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_1C0771000, v12, v13, "PGRelationship.ingestEvents", v14, 2u);
    sub_1C0776778();
  }

  v15 = *(void (**)(char *, uint8_t *))(v0 + 8);
  v15(v11, v1);
  v16 = (void *)sub_1C106FAF0();
  type metadata accessor for PhotoRelationshipSet();
  v17 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_setEnumeratorWithUseCase_, v16);
  v51 = 0;
  v18 = objc_msgSend(v17, sel_allSets_, &v51);
  v19 = v51;
  if (v18)
  {
    v20 = v18;
    v47 = v16;
    v48 = (uint8_t *)v17;
    v21 = v1;
    sub_1C07ACF80(&qword_1EF6468F8);
    v22 = sub_1C106FF04();
    v23 = v19;

    sub_1C106F160();
    swift_bridgeObjectRetain_n();
    v24 = sub_1C106F538();
    v25 = sub_1C1070378();
    v26 = v22 >> 62;
    if (os_log_type_enabled((os_log_t)v24, v25))
    {
      v27 = (uint8_t *)sub_1C0775854();
      *(_DWORD *)v27 = 134217984;
      if (!v26)
      {
        v28 = *(void **)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_7;
      }
LABEL_24:
      sub_1C077AEBC();
      v28 = (void *)sub_1C10709B4();
      sub_1C077B5B4();
LABEL_7:
      sub_1C077B5B4();
      v51 = v28;
      sub_1C10705AC();
      sub_1C077B5B4();
      _os_log_impl(&dword_1C0771000, (os_log_t)v24, v25, "PGRelationship.allsets.count %ld", v27, 0xCu);
      sub_1C0776778();
    }

    swift_bridgeObjectRelease_n();
    v15(v8, v21);
    v27 = v48;
    v49 = v22;
    if (v26)
    {
      sub_1C077AEBC();
      v24 = sub_1C10709B4();
      sub_1C077B5B4();
      if (v24)
        goto LABEL_12;
    }
    else
    {
      v24 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v24)
      {
LABEL_12:
        if (v24 < 1)
        {
          __break(1u);
          goto LABEL_24;
        }
        v35 = 0;
        v36 = v49 & 0xC000000000000001;
        v37 = (void *)MEMORY[0x1E0C809B0];
        do
        {
          if (v36)
            v38 = (id)MEMORY[0x1C3BA70DC](v35, v49);
          else
            v38 = *(id *)(v49 + 8 * v35 + 32);
          v39 = v38;
          ++v35;
          v40 = objc_msgSend(v38, sel_changePublisherWithUseCase_, v47);
          v41 = v50;
          v53 = sub_1C0CA3F2C;
          v54 = v50;
          v51 = v37;
          v52 = 1107296256;
          v42 = sub_1C07BD0A4((uint64_t)&unk_1E7A28F58);
          sub_1C07AB094();
          swift_release();
          v53 = sub_1C0CA3F40;
          v54 = v41;
          v51 = v37;
          v52 = 1107296256;
          v43 = sub_1C07BD0A4((uint64_t)&unk_1E7A28F80);
          sub_1C07AB094();
          swift_release();
          v44 = objc_msgSend(v40, sel_sinkWithBookmark_completion_receiveInput_, 0, v42, v43);
          _Block_release(v43);
          _Block_release(v42);

        }
        while (v24 != v35);
      }
    }

    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    goto LABEL_20;
  }
  v49 = (unint64_t)v15;
  v29 = v51;
  sub_1C106AA14();

  swift_willThrow();
  swift_unknownObjectRelease();

  sub_1C106F160();
  sub_1C077B72C();
  sub_1C077B72C();
  v30 = sub_1C106F538();
  v31 = sub_1C1070390();
  if (os_log_type_enabled(v30, v31))
  {
    v32 = (uint8_t *)sub_1C0775854();
    v33 = (_QWORD *)sub_1C0775854();
    v48 = v1;
    *(_DWORD *)v32 = 138412290;
    sub_1C077B72C();
    v34 = (void *)_swift_stdlib_bridgeErrorToNSError();
    v51 = v34;
    sub_1C10705AC();
    *v33 = v34;
    sub_1C07888BC();
    sub_1C07888BC();
    _os_log_impl(&dword_1C0771000, v30, v31, "PGRelationship.ingestEvents %@", v32, 0xCu);
    sub_1C07ACF80(&qword_1ED7614A0);
    swift_arrayDestroy();
    sub_1C0776778();
  }
  sub_1C07888BC();
  sub_1C07888BC();
  sub_1C07888BC();

  ((void (*)(uint64_t, uint8_t *))v49)(v5, v1);
LABEL_20:
  swift_beginAccess();
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

uint64_t sub_1C0CA3B4C()
{
  uint64_t inited;
  uint64_t result;

  sub_1C07ACF80((uint64_t *)&unk_1EF646928);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1078A20;
  *(_DWORD *)(inited + 32) = 0;
  *(_QWORD *)(inited + 40) = &unk_1E7A060B0;
  *(_DWORD *)(inited + 48) = 1;
  *(_QWORD *)(inited + 56) = &unk_1E7A060E0;
  *(_DWORD *)(inited + 64) = 2;
  *(_QWORD *)(inited + 72) = &unk_1E7A06150;
  type metadata accessor for CCPhotosPetType(0);
  sub_1C07ACF80(&qword_1ED762B70);
  sub_1C0CA404C();
  result = sub_1C106F97C();
  qword_1EF6D1D50 = result;
  return result;
}

uint64_t sub_1C0CA3C0C()
{
  uint64_t result;

  type metadata accessor for CCPhotosPetType(0);
  sub_1C0CA404C();
  result = sub_1C106F97C();
  qword_1EF6D1D58 = result;
  return result;
}

void sub_1C0CA3C58()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1C0779670();
  v1 = v0;
  v3 = v2;
  v26 = v4;
  v6 = v5;
  v7 = sub_1C106D1F8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  sub_1C0778564();
  v11 = v10 - v9;
  v12 = sub_1C0779688();
  sub_1C077A2C4(v6, v13, v14, v12);
  v15 = (int *)type metadata accessor for PGRelationshipStructs.EntityAliasRelationshipType(0);
  sub_1C106D03C();
  v16 = v6 + v15[6];
  if (qword_1ED761870 != -1)
    swift_once();
  v17 = sub_1C077674C();
  v18 = sub_1C079E000(v17, (uint64_t)&unk_1ED761850);
  sub_1C0845A4C(v18, v16, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C106DD74();
  v19 = (_QWORD *)(v6 + v15[8]);
  *v19 = 0;
  v19[1] = 0;
  sub_1C106DE10();
  v20 = (_QWORD *)(v6 + v15[10]);
  *v20 = 0;
  v20[1] = 0;
  sub_1C106DF00();
  v21 = (uint64_t *)(v6 + v15[12]);
  *v21 = 0;
  v21[1] = 0;
  sub_1C106E164();
  v22 = (_QWORD *)(v6 + v15[14]);
  *v22 = 0;
  v22[1] = 0;
  if (v1 == 2)
  {
    sub_1C106D150();
  }
  else if (v1 == 1)
  {
    sub_1C106D15C();
  }
  else
  {
    sub_1C106D168();
  }
  v23 = sub_1C106D090();
  v25 = v24;
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11, v7);
  swift_bridgeObjectRelease();
  *v21 = v23;
  v21[1] = v25;
  swift_bridgeObjectRelease();
  *(_OWORD *)v20 = xmmword_1C10B1CD0;
  sub_1C07767B4();
  swift_bridgeObjectRelease();
  *v19 = v26;
  v19[1] = v3;
  swift_bridgeObjectRelease();
  *(_OWORD *)v22 = xmmword_1C10793A0;
  sub_1C0776760();
}

uint64_t sub_1C0CA3E28()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1C0784B6C(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore20PGRelationshipEntity_tokenizer, &qword_1ED759C40);
  return swift_deallocClassInstance();
}

uint64_t sub_1C0CA3E68()
{
  return type metadata accessor for PGRelationshipEntity();
}

uint64_t type metadata accessor for PGRelationshipEntity()
{
  uint64_t result;

  result = qword_1EF646808;
  if (!qword_1EF646808)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1C0CA3EA8()
{
  unint64_t v0;

  sub_1C08C0260();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_1C0CA3F2C()
{
  sub_1C0CA1D5C();
}

unint64_t sub_1C0CA3F44()
{
  unint64_t result;

  result = qword_1EF633710;
  if (!qword_1EF633710)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF633710);
  }
  return result;
}

uint64_t sub_1C0CA3F80(uint64_t a1, uint64_t a2, void *a3)
{
  void *v4;
  id v5;
  uint64_t v6;

  v4 = (void *)sub_1C106FAF0();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(a3, sel_localIdentifierWithUUID_, v4);

  if (!v5)
    return 0;
  v6 = sub_1C106FB14();

  return v6;
}

uint64_t sub_1C0CA4008(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PGRelationshipStructs.EntityAliasRelationshipType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C0CA404C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF646938;
  if (!qword_1EF646938)
  {
    type metadata accessor for CCPhotosPetType(255);
    result = MEMORY[0x1C3BA8174](&unk_1C1078908, v1);
    atomic_store(result, &qword_1EF646938);
  }
  return result;
}

uint64_t sub_1C0CA4094(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v2;
  type metadata accessor for Fuser();
  *(_QWORD *)(v3 + 32) = sub_1C0779D74();
  type metadata accessor for Linker();
  *(_QWORD *)(v3 + 40) = sub_1C0779D74();
  sub_1C07ACF80(&qword_1ED762590);
  *(_QWORD *)(v3 + 48) = sub_1C0779D74();
  sub_1C07ACF80(&qword_1ED759C40);
  *(_QWORD *)(v3 + 56) = sub_1C0779D74();
  *(_QWORD *)(v3 + 64) = type metadata accessor for PGRelationshipFullSourceIngestor();
  *(_QWORD *)(v3 + 72) = sub_1C0786414();
  *(_QWORD *)(v3 + 80) = sub_1C0775870();
  *(_QWORD *)(v3 + 88) = type metadata accessor for Source();
  *(_QWORD *)(v3 + 96) = sub_1C0786414();
  *(_QWORD *)(v3 + 104) = sub_1C0775870();
  type metadata accessor for PhaseStores();
  *(_QWORD *)(v3 + 112) = sub_1C0786414();
  *(_QWORD *)(v3 + 120) = sub_1C0775870();
  *(_QWORD *)(v3 + 128) = sub_1C0775870();
  *(_BYTE *)(v3 + 153) = *a2;
  return swift_task_switch();
}

uint64_t sub_1C0CA4178()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  sub_1C0893744(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 128), (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  if (qword_1ED761870 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 16);
  v7 = sub_1C079E000(*(_QWORD *)(v0 + 88), (uint64_t)&unk_1ED761850);
  *(_QWORD *)(v0 + 136) = v7;
  sub_1C0893744(v7, v2, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C079A054(v6, v1);
  *(_BYTE *)(v3 + *(int *)(v4 + 24)) = 1;
  sub_1C0893744(v7, v3, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C079A054(v1, v3 + *(int *)(v4 + 20));
  v8 = sub_1C106AEF4();
  sub_1C07B2D8C(v5, 1, 1, v8);
  sub_1C106E620();
  v9 = *(_BYTE *)(v0 + 153);
  v10 = *(_QWORD *)(v0 + 112);
  v11 = *(_QWORD *)(v0 + 96);
  v12 = *(_QWORD *)(v0 + 80);
  v13 = *(_QWORD *)(v0 + 56);
  v14 = *(_QWORD *)(v0 + 64);
  v15 = *(_QWORD *)(v0 + 16);
  sub_1C07B1FDC(*(_QWORD *)(v0 + 120), (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  v16 = sub_1C106E638();
  sub_1C07B2D8C(v13, 0, 1, v16);
  sub_1C0ACDE0C(v13, v12 + *(int *)(v14 + 28));
  sub_1C0893744(v7, v11, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0893744(v15, v10, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  *(_BYTE *)(v0 + 152) = v9;
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v17;
  *v17 = v0;
  v17[1] = sub_1C0CA4378;
  return Linker.init(source:stores:pipelineType:)(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 112), (_BYTE *)(v0 + 152));
}

uint64_t sub_1C0CA4378()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1C0CA43CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 112);
  v9 = *(_QWORD *)(v0 + 104);
  v10 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 32);
  v11 = *(_QWORD *)(v0 + 24);
  v6 = *(_QWORD *)(v0 + 16);
  sub_1C0893744(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 96), (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C079A054(v6, v1);
  Fuser.init(source:stores:pipelineType:)();
  sub_1C07B1FDC(v6, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C0893744(v3, v2, (uint64_t (*)(_QWORD))type metadata accessor for PGRelationshipFullSourceIngestor);
  sub_1C0A5BCA0(v10, v9, v2, v4, v5, 1, v11);
  v12 = v7;
  sub_1C07B1FDC(v3, (uint64_t (*)(_QWORD))type metadata accessor for PGRelationshipFullSourceIngestor);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v12);
}

void sub_1C0CA4538()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1C0CA4564()
{
  return type metadata accessor for PGRelationshipPhase();
}

uint64_t type metadata accessor for PGRelationshipPhase()
{
  uint64_t result;

  result = qword_1ED750B30;
  if (!qword_1ED750B30)
    return swift_getSingletonMetadata();
  return result;
}

_QWORD *sub_1C0CA45A4(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    v8 = type metadata accessor for Source();
    v9 = *(int *)(v8 + 24);
    v10 = (char *)v4 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_1C106D1F8();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v13(v10, v11, v12);
    *((_BYTE *)v4 + *(int *)(v8 + 28)) = *((_BYTE *)a2 + *(int *)(v8 + 28));
    v14 = a3[5];
    v15 = (char *)v4 + v14;
    v16 = (char *)a2 + v14;
    v17 = sub_1C106AB28();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v18 = type metadata accessor for Configuration();
    *(_OWORD *)&v15[*(int *)(v18 + 20)] = *(_OWORD *)&v16[*(int *)(v18 + 20)];
    v19 = (int *)type metadata accessor for PhaseStores();
    *(_QWORD *)&v15[v19[5]] = *(_QWORD *)&v16[v19[5]];
    *(_QWORD *)&v15[v19[6]] = *(_QWORD *)&v16[v19[6]];
    *(_QWORD *)&v15[v19[7]] = *(_QWORD *)&v16[v19[7]];
    *(_QWORD *)&v15[v19[8]] = *(_QWORD *)&v16[v19[8]];
    *(_QWORD *)&v15[v19[9]] = *(_QWORD *)&v16[v19[9]];
    *(_QWORD *)&v15[v19[10]] = *(_QWORD *)&v16[v19[10]];
    *(_QWORD *)&v15[v19[11]] = *(_QWORD *)&v16[v19[11]];
    v20 = a3[7];
    *((_BYTE *)v4 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    v21 = (char *)v4 + v20;
    v22 = (char *)a2 + v20;
    v23 = sub_1C106E638();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    if (sub_1C07B2D80((uint64_t)v22, 1, v23))
    {
      v24 = sub_1C07ACF80(&qword_1ED759C40);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
      sub_1C07B2D8C((uint64_t)v21, 0, 1, v23);
    }
  }
  return v4;
}

uint64_t sub_1C0CA47DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(type metadata accessor for Source() + 24);
  v5 = sub_1C106D1F8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 20);
  v7 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  type metadata accessor for PhaseStores();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v8 = a1 + *(int *)(a2 + 28);
  v9 = sub_1C106E638();
  result = sub_1C07B2D80(v8, 1, v9);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  return result;
}

_QWORD *sub_1C0CA4904(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *__dst;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = type metadata accessor for Source();
  v8 = *(int *)(v7 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1C106D1F8();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v12(v9, v10, v11);
  *((_BYTE *)a1 + *(int *)(v7 + 28)) = *((_BYTE *)a2 + *(int *)(v7 + 28));
  v13 = a3[5];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_1C106AB28();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  v17 = type metadata accessor for Configuration();
  *(_OWORD *)&v14[*(int *)(v17 + 20)] = *(_OWORD *)&v15[*(int *)(v17 + 20)];
  v18 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)&v14[v18[5]] = *(_QWORD *)&v15[v18[5]];
  *(_QWORD *)&v14[v18[6]] = *(_QWORD *)&v15[v18[6]];
  *(_QWORD *)&v14[v18[7]] = *(_QWORD *)&v15[v18[7]];
  *(_QWORD *)&v14[v18[8]] = *(_QWORD *)&v15[v18[8]];
  *(_QWORD *)&v14[v18[9]] = *(_QWORD *)&v15[v18[9]];
  *(_QWORD *)&v14[v18[10]] = *(_QWORD *)&v15[v18[10]];
  *(_QWORD *)&v14[v18[11]] = *(_QWORD *)&v15[v18[11]];
  v19 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  __dst = (char *)a1 + v19;
  v20 = (char *)a2 + v19;
  v21 = sub_1C106E638();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (sub_1C07B2D80((uint64_t)v20, 1, v21))
  {
    v22 = sub_1C07ACF80(&qword_1ED759C40);
    memcpy(__dst, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(__dst, v20, v21);
    sub_1C07B2D8C((uint64_t)__dst, 0, 1, v21);
  }
  return a1;
}

_QWORD *sub_1C0CA4B1C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;

  *a1 = *a2;
  a1[1] = a2[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v6 = type metadata accessor for Source();
  v7 = *(int *)(v6 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1C106D1F8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *((_BYTE *)a1 + *(int *)(v6 + 28)) = *((_BYTE *)a2 + *(int *)(v6 + 28));
  v11 = a3[5];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_1C106AB28();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = *(int *)(type metadata accessor for Configuration() + 20);
  v16 = &v12[v15];
  v17 = &v13[v15];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
  v18 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)&v12[v18[5]] = *(_QWORD *)&v13[v18[5]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v12[v18[6]] = *(_QWORD *)&v13[v18[6]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v12[v18[7]] = *(_QWORD *)&v13[v18[7]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v12[v18[8]] = *(_QWORD *)&v13[v18[8]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v12[v18[9]] = *(_QWORD *)&v13[v18[9]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v12[v18[10]] = *(_QWORD *)&v13[v18[10]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v12[v18[11]] = *(_QWORD *)&v13[v18[11]];
  swift_retain();
  swift_release();
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v19 = a3[7];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = sub_1C106E638();
  LODWORD(v13) = sub_1C07B2D80((uint64_t)v20, 1, v22);
  v23 = sub_1C07B2D80((uint64_t)v21, 1, v22);
  if (!(_DWORD)v13)
  {
    v24 = *(_QWORD *)(v22 - 8);
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 24))(v20, v21, v22);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v24 + 8))(v20, v22);
    goto LABEL_6;
  }
  if (v23)
  {
LABEL_6:
    v25 = sub_1C07ACF80(&qword_1ED759C40);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  sub_1C07B2D8C((uint64_t)v20, 0, 1, v22);
  return a1;
}

uint64_t sub_1C0CA4DB8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = type metadata accessor for Source();
  v7 = *(int *)(v6 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1C106D1F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_BYTE *)(a1 + *(int *)(v6 + 28)) = *(_BYTE *)(a2 + *(int *)(v6 + 28));
  v11 = a3[5];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = type metadata accessor for Configuration();
  *(_OWORD *)(v12 + *(int *)(v15 + 20)) = *(_OWORD *)(v13 + *(int *)(v15 + 20));
  v16 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(v12 + v16[5]) = *(_QWORD *)(v13 + v16[5]);
  *(_QWORD *)(v12 + v16[6]) = *(_QWORD *)(v13 + v16[6]);
  *(_QWORD *)(v12 + v16[7]) = *(_QWORD *)(v13 + v16[7]);
  *(_QWORD *)(v12 + v16[8]) = *(_QWORD *)(v13 + v16[8]);
  *(_QWORD *)(v12 + v16[9]) = *(_QWORD *)(v13 + v16[9]);
  *(_QWORD *)(v12 + v16[10]) = *(_QWORD *)(v13 + v16[10]);
  *(_QWORD *)(v12 + v16[11]) = *(_QWORD *)(v13 + v16[11]);
  v17 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  v20 = sub_1C106E638();
  if (sub_1C07B2D80((uint64_t)v19, 1, v20))
  {
    v21 = sub_1C07ACF80(&qword_1ED759C40);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
    sub_1C07B2D8C((uint64_t)v18, 0, 1, v20);
  }
  return a1;
}

_QWORD *sub_1C0CA4F64(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v7 = type metadata accessor for Source();
  v8 = *(int *)(v7 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1C106D1F8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  *((_BYTE *)a1 + *(int *)(v7 + 28)) = *((_BYTE *)a2 + *(int *)(v7 + 28));
  v12 = a3[5];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_1C106AB28();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = type metadata accessor for Configuration();
  *(_OWORD *)&v13[*(int *)(v16 + 20)] = *(_OWORD *)&v14[*(int *)(v16 + 20)];
  v17 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)&v13[v17[5]] = *(_QWORD *)&v14[v17[5]];
  swift_release();
  *(_QWORD *)&v13[v17[6]] = *(_QWORD *)&v14[v17[6]];
  swift_release();
  *(_QWORD *)&v13[v17[7]] = *(_QWORD *)&v14[v17[7]];
  swift_release();
  *(_QWORD *)&v13[v17[8]] = *(_QWORD *)&v14[v17[8]];
  swift_release();
  *(_QWORD *)&v13[v17[9]] = *(_QWORD *)&v14[v17[9]];
  swift_release();
  *(_QWORD *)&v13[v17[10]] = *(_QWORD *)&v14[v17[10]];
  swift_release();
  *(_QWORD *)&v13[v17[11]] = *(_QWORD *)&v14[v17[11]];
  swift_release();
  v18 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_1C106E638();
  LODWORD(v14) = sub_1C07B2D80((uint64_t)v19, 1, v21);
  v22 = sub_1C07B2D80((uint64_t)v20, 1, v21);
  if (!(_DWORD)v14)
  {
    v23 = *(_QWORD *)(v21 - 8);
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 40))(v19, v20, v21);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v19, v21);
    goto LABEL_6;
  }
  if (v22)
  {
LABEL_6:
    v24 = sub_1C07ACF80(&qword_1ED759C40);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
  sub_1C07B2D8C((uint64_t)v19, 0, 1, v21);
  return a1;
}

uint64_t sub_1C0CA519C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0CA51A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;

  v6 = sub_1C078BD20();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = v4;
    return sub_1C07B2D80(v8, v3, v7);
  }
  v9 = sub_1C078A314();
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v9;
    v10 = a3[5];
LABEL_10:
    v8 = v4 + v10;
    return sub_1C07B2D80(v8, v3, v7);
  }
  if ((_DWORD)v3 != 252)
  {
    v7 = sub_1C07ACF80(&qword_1ED759C40);
    v10 = a3[7];
    goto LABEL_10;
  }
  v11 = *(unsigned __int8 *)(v4 + a3[6]);
  if (v11 >= 4)
    return v11 - 3;
  else
    return 0;
}

uint64_t sub_1C0CA5254()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0CA5260(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v8 = sub_1C078BD20();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = v5;
  }
  else
  {
    result = sub_1C078A314();
    if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    {
      v9 = result;
      v12 = a4[5];
    }
    else
    {
      if (a3 == 252)
      {
        *(_BYTE *)(v5 + a4[6]) = v4 + 3;
        return result;
      }
      v9 = sub_1C07ACF80(&qword_1ED759C40);
      v12 = a4[7];
    }
    v10 = v5 + v12;
  }
  return sub_1C07B2D8C(v10, v4, v4, v9);
}

uint64_t type metadata accessor for PGRelationshipFullSourceIngestor()
{
  uint64_t result;

  result = qword_1ED7511F0;
  if (!qword_1ED7511F0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1C0CA5344()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for Source();
  if (v0 <= 0x3F)
  {
    type metadata accessor for PhaseStores();
    if (v1 <= 0x3F)
    {
      sub_1C08C0260();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t sub_1C0CA53EC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[4] = v0;
  v2 = sub_1C106F544();
  v1[5] = v2;
  v1[6] = *(_QWORD *)(v2 - 8);
  v1[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C0CA544C()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  sub_1C106F160();
  v1 = sub_1C106F538();
  v2 = sub_1C1070378();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_1C0771000, v1, v2, "PGRelationshipFullSourceIngestor", v3, 2u);
    MEMORY[0x1C3BA8270](v3, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 56);
  v7 = *(_QWORD *)(v0 + 32);
  v6 = *(_QWORD *)(v0 + 40);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  *(_BYTE *)(v0 + 64) = 0;
  type metadata accessor for PGRelationshipFullSourceIngestor();
  sub_1C078A314();
  v8 = (_QWORD *)swift_task_alloc();
  v8[2] = v0 + 16;
  v8[3] = v7;
  v8[4] = v0 + 24;
  v8[5] = v0 + 64;
  GraphStore.tripleInsertingTransaction(transactionBody:)();
  swift_task_dealloc();
  sub_1C106AC6C();
  sub_1C088C840();
  sub_1C07A12D0();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C0CA55D0(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t result;
  _BYTE v13[128];

  v6 = type metadata accessor for Pipeline.StatusStore();
  MEMORY[0x1E0C80A78](v6);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for PGRelationshipFullSourceIngestor();
  sub_1C0893744(a1 + *(int *)(v9 + 20), (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v8[*(int *)(v6 + 20)] = 1;
  Pipeline.StatusStore.currentSessionId()();
  sub_1C0A157EC((uint64_t)v8);
  sub_1C106F244();
  sub_1C07ACF80((uint64_t *)&unk_1ED7614C0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C10795A0;
  *(_QWORD *)(inited + 32) = 0x496E6F6973736573;
  *(_QWORD *)(inited + 40) = 0xE900000000000064;
  v11 = sub_1C106FAF0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 48) = v11;
  *(_QWORD *)(inited + 56) = 0x614E656372756F73;
  *(_QWORD *)(inited + 64) = 0xEA0000000000656DLL;
  sub_1C07D4B70(0, &qword_1ED760190);
  *(_QWORD *)(inited + 72) = sub_1C1070528();
  *(_QWORD *)(inited + 80) = 0x756F436E656B6174;
  *(_QWORD *)(inited + 88) = 0xEA0000000000746ELL;
  *(_QWORD *)(inited + 96) = sub_1C1070294();
  strcpy((char *)(inited + 104), "droppedCount");
  *(_BYTE *)(inited + 117) = 0;
  *(_WORD *)(inited + 118) = -5120;
  result = *a3 - *a2;
  if (__OFSUB__(*a3, *a2))
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(inited + 120) = sub_1C1070294();
    sub_1C07D4B70(0, (unint64_t *)&qword_1ED761490);
    sub_1C106F97C();
    sub_1C106F22C();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1C0CA581C(void (*a1)(uint64_t)@<X0>, uint64_t *a2@<X2>, uint64_t a3@<X3>, _QWORD *a4@<X4>, _BYTE *a5@<X5>, _BYTE *a6@<X8>)
{
  void *v6;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  unsigned __int8 v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  void *v30;
  unsigned __int8 *v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  _QWORD *v39;
  void (*v40)(uint64_t);
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  _BYTE *v44;
  id v45;
  unsigned __int8 v46;
  unsigned __int8 v47[2];
  char v48;

  v39 = a4;
  v40 = a1;
  v11 = sub_1C106F544();
  v41 = *(_QWORD *)(v11 - 8);
  v42 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v38 - v15;
  v17 = sub_1C07ACF80(&qword_1ED759C40);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *a2 + 1;
  if (__OFADD__(*a2, 1))
  {
    __break(1u);
  }
  else
  {
    v43 = a6;
    v44 = a5;
    *a2 = v20;
    v21 = (int *)type metadata accessor for PGRelationshipFullSourceIngestor();
    v22 = v21[7];
    v48 = *(_BYTE *)(a3 + v21[6]);
    sub_1C07DBC30(a3 + v22, (uint64_t)v19);
    type metadata accessor for PGRelationshipEntity();
    swift_allocObject();
    sub_1C0CA1D1C(&v48, (uint64_t)v19);
    sub_1C0CA3554();
    if (v6)
    {
      swift_release();
      v45 = v6;
      v25 = v6;
      sub_1C07ACF80(&qword_1ED7614F0);
      if (!swift_dynamicCast())
      {

        sub_1C106F160();
        v33 = sub_1C106F538();
        v34 = sub_1C1070390();
        if (os_log_type_enabled(v33, v34))
        {
          v35 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v35 = 0;
          _os_log_impl(&dword_1C0771000, v33, v34, "PGRelationshipFullSourceIngestor.error", v35, 2u);
          MEMORY[0x1C3BA8270](v35, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v41 + 8))(v13, v42);
        v36 = a3 + v21[5];
        v47[0] = 1;
        static Transformers.reportError(error:context:config:pipelineType:)((uint64_t)v6, 0xD000000000000020, 0x80000001C10B1D40, v36, v47);

        v37 = v44;
        *v44 = 1;
        goto LABEL_15;
      }

      v26 = v47[1];
      sub_1C106F160();
      v27 = sub_1C106F538();
      v28 = sub_1C1070390();
      if (os_log_type_enabled(v27, v28))
      {
        v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v29 = 0;
        _os_log_impl(&dword_1C0771000, v27, v28, "PGRelationshipFullSourceIngestor.error", v29, 2u);
        MEMORY[0x1C3BA8270](v29, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v41 + 8))(v16, v42);
      sub_1C0898824();
      v30 = (void *)swift_allocError();
      *v31 = v26;
      v32 = a3 + v21[5];
      v46 = 1;
      static Transformers.reportError(error:context:config:pipelineType:)((uint64_t)v30, 0xD000000000000020, 0x80000001C10B1D40, v32, &v46);

LABEL_14:
      v37 = v44;
LABEL_15:
      *v43 = *v37;
      return;
    }
    swift_release();
    sub_1C0A56D74();
    v24 = v23;
    swift_bridgeObjectRelease();
    v40(v24);
    swift_bridgeObjectRelease();
    if (!__OFADD__(*v39, 1))
    {
      ++*v39;
      goto LABEL_14;
    }
  }
  __break(1u);
}

uint64_t sub_1C0CA5C0C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C0806670;
  return sub_1C0CA53EC();
}

uint64_t sub_1C0CA5C50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1C0893744(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for Source);
}

uint64_t sub_1C0CA5C74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1C0893744(v2 + *(int *)(a1 + 20), a2, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
}

uint64_t sub_1C0CA5CA0(uint64_t a1)
{
  uint64_t result;

  result = sub_1C0CA5D3C(&qword_1ED7511D8, (uint64_t)&unk_1C10B1DA0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0CA5CD4(uint64_t a1)
{
  uint64_t result;

  result = sub_1C0CA5D3C(&qword_1ED7511E8, (uint64_t)&unk_1C10B1DC8);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0CA5D08(uint64_t a1)
{
  uint64_t result;

  result = sub_1C0CA5D3C(&qword_1ED7511E0, (uint64_t)&unk_1C10B1DE4);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0CA5D3C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for PGRelationshipFullSourceIngestor();
    result = MEMORY[0x1C3BA8174](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C0CA5D7C(void (*a1)(uint64_t)@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  sub_1C0CA581C(a1, *(uint64_t **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD **)(v2 + 32), *(_BYTE **)(v2 + 40), a2);
}

uint64_t dispatch thunk of PhaseBase.phaseName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PhaseBase.run()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 24) + *(_QWORD *)(a2 + 24));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1C0928A6C;
  return v7(a1, a2);
}

uint64_t dispatch thunk of PhaseBase.clearAllData()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t storeEnumTagSinglePayload for PipelineSignal(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1C0CA5E54 + 4 * byte_1C10B1E20[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1C0CA5E74 + 4 * byte_1C10B1E25[v4]))();
}

_BYTE *sub_1C0CA5E54(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1C0CA5E74(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C0CA5E7C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C0CA5E84(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C0CA5E8C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C0CA5E94(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PipelineSignal()
{
  return &type metadata for PipelineSignal;
}

uint64_t storeEnumTagSinglePayload for PhaseSignal(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C0CA5EFC + 4 * byte_1C10B1E2F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C0CA5F30 + 4 * byte_1C10B1E2A[v4]))();
}

uint64_t sub_1C0CA5F30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0CA5F38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0CA5F40);
  return result;
}

uint64_t sub_1C0CA5F4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0CA5F54);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C0CA5F58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0CA5F60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PhaseSignal()
{
  return &type metadata for PhaseSignal;
}

uint64_t sub_1C0CA5F7C()
{
  swift_getMetatypeMetadata();
  sub_1C106FB5C();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  return 60;
}

uint64_t sub_1C0CA5FE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  v3[7] = *(_QWORD *)(a1 - 8);
  v3[8] = swift_task_alloc();
  v3[9] = swift_task_alloc();
  return sub_1C077AEC4();
}

uint64_t sub_1C0CA6044()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  unint64_t v14;
  void (*v15)(uint64_t, _QWORD);
  _QWORD *v16;
  uint64_t v18;
  uint64_t (*v19)(_QWORD, _QWORD);
  uint64_t v20;

  if (qword_1ED761458 != -1)
    swift_once();
  v1 = v0[4];
  v2 = v0[9];
  v3 = v0[6];
  v4 = v0[7];
  v5 = sub_1C106F544();
  v0[10] = sub_1C079E000(v5, (uint64_t)qword_1ED78D818);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v0[11] = v6;
  v6(v2, v3, v1);
  v7 = sub_1C106F538();
  v8 = sub_1C10703A8();
  v9 = sub_1C07825D0(v8);
  v10 = v0[9];
  v11 = v0[7];
  if (v9)
  {
    v18 = v0[4];
    v12 = (uint8_t *)sub_1C0775854();
    v20 = sub_1C0775854();
    *(_DWORD *)v12 = 136315138;
    v13 = sub_1C1070C0C();
    v0[3] = sub_1C0788DAC(v13, v14, &v20);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v18);
    _os_log_impl(&dword_1C0771000, v7, (os_log_type_t)v3, "PhaseStart %s", v12, 0xCu);
    swift_arrayDestroy();
    sub_1C0776778();
  }
  v15 = *(void (**)(uint64_t, _QWORD))(v11 + 8);
  v15(v10, v0[4]);

  v0[12] = v15;
  v19 = (uint64_t (*)(_QWORD, _QWORD))(**(int **)(v0[5] + 24) + *(_QWORD *)(v0[5] + 24));
  v16 = (_QWORD *)swift_task_alloc();
  v0[13] = v16;
  *v16 = v0;
  v16[1] = sub_1C0CA6250;
  return v19(v0[4], v0[5]);
}

uint64_t sub_1C0CA6250()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (!v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1C0CA62C8()
{
  uint64_t v0;
  os_log_type_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  unint64_t v8;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 88))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 32));
  v2 = sub_1C106F538();
  v3 = sub_1C10703A8();
  if (sub_1C07825D0(v3))
  {
    v10 = *(void (**)(uint64_t, uint64_t))(v0 + 96);
    v4 = *(_QWORD *)(v0 + 64);
    v5 = *(_QWORD *)(v0 + 32);
    v6 = (uint8_t *)sub_1C0775854();
    v11 = sub_1C0775854();
    *(_DWORD *)v6 = 136315138;
    v7 = sub_1C1070C0C();
    *(_QWORD *)(v0 + 16) = sub_1C0788DAC(v7, v8, &v11);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    v10(v4, v5);
    _os_log_impl(&dword_1C0771000, v2, v1, "PhaseFinish %s", v6, 0xCu);
    swift_arrayDestroy();
    sub_1C0776778();
  }
  (*(void (**)(_QWORD, _QWORD))(v0 + 96))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 32));

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1C0CA6440(char a1)
{
  if (!a1)
    return 0xD000000000000036;
  if (a1 == 1)
    return 0xD00000000000002CLL;
  return 0xD000000000000022;
}

void sub_1C0CA64A0()
{
  sub_1C077C06C();
  sub_1C1070E04();
  sub_1C1070E4C();
  sub_1C0775804();
}

void sub_1C0CA64D4()
{
  sub_1C0CA64A0();
}

unint64_t sub_1C0CA64DC()
{
  char *v0;

  return sub_1C0CA6440(*v0);
}

unint64_t sub_1C0CA64E8()
{
  unint64_t result;

  result = qword_1EF646988;
  if (!qword_1EF646988)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B1F18, &type metadata for PhaseSignal);
    atomic_store(result, (unint64_t *)&qword_1EF646988);
  }
  return result;
}

unint64_t sub_1C0CA6524()
{
  return 0xD000000000000049;
}

void sub_1C0CA6540()
{
  sub_1C077C06C();
  sub_1C1070E04();
  sub_1C1070E4C();
  sub_1C0775804();
}

unint64_t sub_1C0CA6574()
{
  sub_1C0CA6524();
  return 0xD000000000000049;
}

unint64_t sub_1C0CA6594()
{
  unint64_t result;

  result = qword_1EF646990;
  if (!qword_1EF646990)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B1FA8, &type metadata for PipelineSignal);
    atomic_store(result, &qword_1EF646990);
  }
  return result;
}

uint64_t sub_1C0CA65D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_1C0CA65EC()
{
  uint64_t *v0;
  _QWORD *v1;

  sub_1C0CA6708(v0[2], v0[3], v0[4]);
  v1 = (_QWORD *)swift_task_alloc();
  v0[6] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_1C0CA6668;
  return sub_1C0CA5FE4(v0[3], v0[4]);
}

uint64_t sub_1C0CA6668()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
    return sub_1C077CF28(*(uint64_t (**)(void))(v2 + 8));
  else
    return sub_1C077AEC4();
}

uint64_t sub_1C0CA66C4()
{
  uint64_t v0;

  sub_1C0CA6DB8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  return sub_1C07AE09C(*(uint64_t (**)(void))(v0 + 8));
}

void sub_1C0CA6708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  _DWORD *v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  NSObject *v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD v51[3];
  uint64_t (*v52)(_QWORD, _QWORD);
  NSObject *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(_QWORD, _QWORD);
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __int128 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __int128 v90;
  uint64_t v91;

  v61 = a1;
  v62 = a3;
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C077AE40();
  v55 = v7;
  v8 = sub_1C077AE98();
  v54 = *(_QWORD *)(v8 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v9);
  sub_1C077AE40();
  v57 = v10;
  v11 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](v12);
  sub_1C077FD28();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v51 - v14;
  if (qword_1ED761458 != -1)
    swift_once();
  v16 = sub_1C106F544();
  sub_1C079E000(v16, (uint64_t)qword_1ED78D818);
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v59 = v3;
  v17(v15, v3, a2);
  v18 = sub_1C106F538();
  v19 = sub_1C10703A8();
  v20 = os_log_type_enabled(v18, v19);
  v56 = v8;
  v58 = a2;
  if (v20)
  {
    v53 = v18;
    v21 = (_DWORD *)sub_1C0775854();
    v52 = (uint64_t (*)(_QWORD, _QWORD))sub_1C0775854();
    v64 = v52;
    v51[2] = v21;
    *v21 = 136315138;
    v51[1] = v21 + 1;
    v17(v4, (uint64_t)v15, a2);
    v22 = *(void (**)(char *, uint64_t))(v11 + 8);
    v22(v15, a2);
    v23 = sub_1C1070C0C();
    v25 = v24;
    v22(v4, a2);
    v63 = sub_1C0788DAC(v23, v25, (uint64_t *)&v64);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    sub_1C078D7DC(&dword_1C0771000, v53, v19, "PhaseMetricsStart %s");
    sub_1C078CBD0();
    sub_1C0776778();
  }
  sub_1C0776A94((uint64_t)v15, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));

  v26 = v60;
  v27 = sub_1C0CBC1D4();
  if (!v26)
  {
    v60 = 0;
    v53 = v27;
    if (qword_1ED75AC08 != -1)
      swift_once();
    v28 = xmmword_1ED78D1B8;
    v29 = qword_1ED78D1C8;
    v30 = unk_1ED78D1D0;
    v31 = qword_1ED78D1D8;
    v32 = *(uint64_t (**)(uint64_t))(v62 + 16);
    v33 = v32(v58);
    v82 = v28;
    v83 = v29;
    v84 = v30;
    v85 = v31;
    v86 = v33;
    v87 = v34;
    v88 = v30;
    v89 = v31;
    sub_1C07914A4(v30);
    sub_1C07914A4(v30);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C077AEBC();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C07A4AC4((__n128 *)&v82);
    v60 = 0;
    v52 = (uint64_t (*)(_QWORD, _QWORD))v32;
    swift_bridgeObjectRelease();
    sub_1C077B5B4();
    sub_1C07A12E0(v30);
    sub_1C07A12E0(v30);
    if (qword_1ED75AC18 != -1)
      swift_once();
    v35 = xmmword_1ED78D1E0;
    v37 = qword_1ED78D1F0;
    v36 = qword_1ED78D1F8;
    v38 = qword_1ED78D200;
    v39 = v52(v58, v62);
    v74 = v35;
    v75 = v37;
    v76 = v36;
    v77 = v38;
    v78 = v39;
    v79 = v40;
    v80 = v36;
    v81 = v38;
    sub_1C0795C40();
    sub_1C0795C40();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C077AEBC();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C07A4AC4((__n128 *)&v74);
    swift_bridgeObjectRelease();
    sub_1C077B5B4();
    sub_1C07A12E0(v36);
    sub_1C07A12E0(v36);
    sub_1C106ADD4();
    if (qword_1ED75AC80 != -1)
      swift_once();
    v71 = xmmword_1ED78D320;
    v72 = *(_OWORD *)algn_1ED78D330;
    v41 = qword_1ED78D340;
    v73 = qword_1ED78D340;
    v90 = xmmword_1ED78D320;
    v42 = *(_QWORD *)&algn_1ED78D330[8];
    v91 = *(_QWORD *)algn_1ED78D330;
    sub_1C07B35DC((uint64_t)&v90);
    sub_1C08FD4A0((uint64_t)&v91);
    v60 = v41;
    sub_1C0BCD07C(v42);
    v43 = v62;
    v52(v58, v62);
    sub_1C0CBC1D4();
    v44 = v55;
    sub_1C0793260();
    sub_1C0778580();
    sub_1C07785A8();
    sub_1C079B948();
    sub_1C08EE9A0((uint64_t)&v91);
    sub_1C0791F54();
    LODWORD(v41) = sub_1C07B2D80(v44, 1, v56);
    sub_1C0784B30(v44, (uint64_t *)&unk_1ED762690);
    if ((_DWORD)v41 == 1)
    {
      v68 = xmmword_1ED78D320;
      v69 = *(_OWORD *)algn_1ED78D330;
      v70 = qword_1ED78D340;
      v45 = v43;
      v46 = v52;
      v47 = v52(v58, v43);
      v48 = v57;
      sub_1C07AA9E4(v57, (uint64_t)v53, v47);
      sub_1C0778580();
      v49 = v54;
    }
    else
    {
      v49 = v54;
      v46 = v52;
      v48 = v57;
      v45 = v43;
    }
    if (qword_1ED755CB8 != -1)
      swift_once();
    v65 = xmmword_1ED78D208;
    v66 = *(_OWORD *)&qword_1ED78D218;
    v67 = qword_1ED78D228;
    v50 = v46(v58, v45);
    sub_1C07AA9E4(v48, (uint64_t)v53, v50);
    sub_1C079807C(*(uint64_t (**)(uint64_t, _QWORD))(v49 + 8));
    swift_release();
    sub_1C0778580();
  }
  sub_1C07757D0();
}

uint64_t sub_1C0CA6DB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  unint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  char v41;
  char v42;
  double v43;
  double v44;
  double v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  void (*v59)(uint64_t);
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  _DWORD *v64;
  char *v65;
  void (*v66)(uint64_t);
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t);
  _QWORD v73[2];
  char *v74;
  uint64_t v75;
  char *v76;
  _DWORD *v77;
  unint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  NSObject *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  __int128 v99;
  __int128 v100;
  uint64_t v101;
  __n128 v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  double v106;
  uint64_t v107;
  uint64_t v108;
  _OWORD v109[2];
  uint64_t v110;
  __int128 v111;
  __int128 v112;
  uint64_t v113;
  __int128 v114;
  uint64_t v115;
  __int128 v116;
  uint64_t v117;
  __int128 v118;
  _QWORD v119[2];

  v88 = a2;
  v86 = a3;
  v85 = *(_QWORD *)(a2 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v5);
  v83 = (char *)v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v84 = (char *)v73 - v8;
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v9);
  sub_1C077FD28();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v73 - v11;
  v13 = sub_1C077AE98();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v73 - v18;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)v73 - v21;
  v23 = v89;
  result = sub_1C0CBC1D4();
  if (!v23)
  {
    v76 = v19;
    v77 = v12;
    v89 = a1;
    v74 = v16;
    v75 = v3;
    v78 = 0;
    v79 = result;
    v25 = v86;
    v81 = v13;
    v82 = v14;
    v80 = v22;
    sub_1C106ADD4();
    if (qword_1ED755CB8 != -1)
      swift_once();
    v111 = xmmword_1ED78D208;
    v112 = *(_OWORD *)&qword_1ED78D218;
    v113 = qword_1ED78D228;
    v114 = xmmword_1ED78D208;
    v26 = unk_1ED78D220;
    v115 = qword_1ED78D218;
    v27 = *(void (**)(uint64_t, uint64_t))(v25 + 16);
    sub_1C07B35DC((uint64_t)&v114);
    sub_1C08FD4A0((uint64_t)&v115);
    sub_1C0BCD07C(v26);
    v27(v88, v25);
    v28 = v78;
    sub_1C0CBC1D4();
    if (v28)
    {
      sub_1C07A3E48();
      sub_1C0778580();
      v30 = v80;
      sub_1C07B2F5C((uint64_t)&v114);
      sub_1C08EE9A0((uint64_t)&v115);
      sub_1C079F780();
      return (*(uint64_t (**)(char *, uint64_t))(v82 + 8))(v30, v81);
    }
    else
    {
      v29 = (uint64_t)v77;
      sub_1C0793260();
      sub_1C0778580();
      sub_1C07785A8();
      sub_1C07B2F5C((uint64_t)&v114);
      sub_1C08EE9A0((uint64_t)&v115);
      sub_1C079F780();
      v31 = v81;
      v32 = sub_1C07B2D80(v29, 1, v81);
      v73[1] = v27;
      if (v32 == 1)
      {
        sub_1C0784B30(v29, (uint64_t *)&unk_1ED762690);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v82 + 32))(v76, v29, v31);
        if (qword_1ED75AC28 != -1)
          swift_once();
        v109[0] = xmmword_1ED78D230;
        v109[1] = *(_OWORD *)&qword_1ED78D240;
        v110 = qword_1ED78D250;
        v116 = xmmword_1ED78D230;
        v35 = unk_1ED78D248;
        v117 = qword_1ED78D240;
        sub_1C07B35DC((uint64_t)&v116);
        sub_1C08FD4A0((uint64_t)&v117);
        sub_1C0BCD07C(v35);
        v36 = sub_1C079A05C();
        v38 = v37;
        sub_1C07A021C();
        v40 = COERCE_DOUBLE(sub_1C0CD261C((uint64_t)v109, v36, v38));
        v42 = v41;
        swift_bridgeObjectRelease();
        sub_1C07785A8();
        sub_1C07B2F5C((uint64_t)&v116);
        sub_1C08EE9A0((uint64_t)&v117);
        sub_1C07A2A40(v35);
        if ((v42 & 1) != 0)
          v43 = 0.0;
        else
          v43 = v40;
        sub_1C106ADC8();
        v45 = v43 + v44;
        v46 = *((_QWORD *)&xmmword_1ED78D230 + 1);
        v78 = xmmword_1ED78D230;
        v47 = qword_1ED78D240;
        v48 = unk_1ED78D248;
        v49 = qword_1ED78D250;
        sub_1C079A05C();
        v102.n128_u64[0] = v78;
        v102.n128_u64[1] = v46;
        v103 = v47;
        v104 = v48;
        v105 = v49;
        v106 = v45;
        v107 = v48;
        v108 = v49;
        sub_1C0BCD07C(v48);
        v78 = v46;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        sub_1C077AEBC();
        sub_1C078CD34(&v102);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C0794898();
        v31 = v81;
        sub_1C0776A94((uint64_t)v76, *(uint64_t (**)(uint64_t, uint64_t))(v82 + 8));
        sub_1C0778580();
      }
      if (qword_1ED75AC80 != -1)
        swift_once();
      v99 = xmmword_1ED78D320;
      v100 = *(_OWORD *)algn_1ED78D330;
      v101 = qword_1ED78D340;
      v118 = xmmword_1ED78D320;
      v33 = *(_QWORD *)&algn_1ED78D330[8];
      v119[0] = *(_QWORD *)algn_1ED78D330;
      sub_1C07B35DC((uint64_t)&v118);
      sub_1C08FD4A0((uint64_t)v119);
      v34 = sub_1C07A8208();
      sub_1C0BCD07C(v34);
      sub_1C079A05C();
      sub_1C07A021C();
      sub_1C0793260();
      sub_1C0778580();
      sub_1C07785A8();
      sub_1C079B948();
      sub_1C08EE9A0((uint64_t)v119);
      sub_1C07A2A40(v33);
      v39 = v75;
      if (sub_1C07B2D80(v75, 1, v31) == 1)
      {
        sub_1C0784B30(v39, (uint64_t *)&unk_1ED762690);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v82 + 32))(v74, v39, v31);
        sub_1C106ADC8();
        v51 = v50;
        if (qword_1ED75AC70 != -1)
          swift_once();
        v52 = xmmword_1ED78D2F8;
        v54 = qword_1ED78D308;
        v53 = unk_1ED78D310;
        v55 = qword_1ED78D318;
        sub_1C079A05C();
        v92 = v52;
        v93 = v54;
        v94 = v53;
        v95 = v55;
        v96 = v51;
        v97 = v53;
        v98 = v55;
        sub_1C0BCD07C(v53);
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        sub_1C078CD34((__n128 *)&v92);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C07AB0A0();
        v31 = v81;
        sub_1C0776A94((uint64_t)v74, *(uint64_t (**)(uint64_t, uint64_t))(v82 + 8));
        sub_1C0778580();
      }
      v57 = v84;
      v56 = v85;
      if (qword_1ED761458 != -1)
        swift_once();
      v58 = sub_1C106F544();
      sub_1C079E000(v58, (uint64_t)qword_1ED78D818);
      v59 = *(void (**)(uint64_t))(v56 + 16);
      v60 = sub_1C07A8208();
      v61 = v88;
      v59(v60);
      v62 = sub_1C106F538();
      v63 = sub_1C10703A8();
      LODWORD(v89) = v63;
      if (os_log_type_enabled(v62, v63))
      {
        v87 = v62;
        v64 = (_DWORD *)sub_1C0775854();
        v84 = (char *)sub_1C0775854();
        v91 = v84;
        *v64 = 136315138;
        v77 = v64 + 1;
        v78 = (unint64_t)v64;
        v65 = v83;
        ((void (*)(char *, char *, uint64_t))v59)(v83, v57, v61);
        v66 = *(void (**)(uint64_t))(v56 + 8);
        v67 = sub_1C07A8208();
        v66(v67);
        v68 = sub_1C1070C0C();
        v70 = v69;
        ((void (*)(char *, uint64_t))v66)(v65, v61);
        v90 = sub_1C0788DAC(v68, v70, (uint64_t *)&v91);
        sub_1C10705AC();
        swift_bridgeObjectRelease();
        sub_1C078D7DC(&dword_1C0771000, v87, (os_log_type_t)v89, "PhaseMetricsFinish %s");
        sub_1C078CBD0();
        sub_1C0776778();
      }
      v71 = sub_1C07A8208();
      v72(v71);

      sub_1C07A3E48();
      return (*(uint64_t (**)(char *, uint64_t))(v82 + 8))(v80, v31);
    }
  }
  return result;
}

void sub_1C0CA7678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __int128 *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t *v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;

  v8 = sub_1C07ACF80(&qword_1ED75AB08);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = &v11[*(int *)(v12 + 44)];
  v14 = sub_1C077AE98();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v13, a1, v14);
  v16 = *((_QWORD *)v4 + 3);
  v15 = *((_QWORD *)v4 + 4);
  v17 = *v4;
  v18 = v4[1];
  *(_OWORD *)v11 = *v4;
  *((_OWORD *)v11 + 1) = v18;
  *((_QWORD *)v11 + 4) = v15;
  v19 = (uint64_t *)&v11[*(int *)(v8 + 48)];
  v20 = *((_QWORD *)v4 + 2);
  *v19 = v16;
  v19[1] = v15;
  v21 = v17;
  v22 = v20;
  sub_1C07914A4(v16);
  sub_1C07914A4(v16);
  sub_1C07B35DC((uint64_t)&v21);
  sub_1C08FD4A0((uint64_t)&v22);
  sub_1C0D434D8((uint64_t *)v11, a3, a4);
  sub_1C0784B30((uint64_t)v11, &qword_1ED75AB08);
  sub_1C07757D0();
}

uint64_t static PhaseBuilder.buildExpression(_:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = a1[3];
  v2 = a1[4];
  v3 = sub_1C07A9480(a1, v1);
  return sub_1C0CA79A8((uint64_t)v3, v1, v2);
}

uint64_t static PhaseBuilder.buildOptional(_:)(uint64_t a1)
{
  uint64_t v1;

  if (a1)
    v1 = a1;
  else
    v1 = MEMORY[0x1E0DEE9D8];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return v1;
}

uint64_t _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFd_tFZ_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t result;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v3 = 0;
    v4 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v5 = *(_QWORD *)(a1 + 8 * v3 + 32);
      v6 = *(_QWORD *)(v5 + 16);
      v7 = *(_QWORD *)(v4 + 16);
      if (__OFADD__(v7, v6))
        break;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v7 + v6 > *(_QWORD *)(v4 + 24) >> 1)
      {
        sub_1C07ED318();
        v4 = v8;
      }
      if (*(_QWORD *)(v5 + 16))
      {
        v9 = *(_QWORD *)(v4 + 16);
        if ((*(_QWORD *)(v4 + 24) >> 1) - v9 < v6)
          goto LABEL_24;
        v10 = v4 + 40 * v9 + 32;
        if (v5 + 32 < v10 + 40 * v6 && v10 < v5 + 32 + 40 * v6)
          goto LABEL_26;
        sub_1C07ACF80(&qword_1ED751240);
        swift_arrayInitWithCopy();
        if (v6)
        {
          v12 = *(_QWORD *)(v4 + 16);
          v13 = __OFADD__(v12, v6);
          v14 = v12 + v6;
          if (v13)
            goto LABEL_25;
          *(_QWORD *)(v4 + 16) = v14;
        }
      }
      else if (v6)
      {
        goto LABEL_23;
      }
      swift_bridgeObjectRelease();
      if (v1 == ++v3)
      {
        swift_bridgeObjectRelease();
        return v4;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    result = sub_1C10709F0();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

uint64_t sub_1C0CA79A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v5;
  uint64_t v6;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;

  v9 = a2;
  v10 = a3;
  v5 = sub_1C079DFC4((uint64_t *)&v8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(v5, a1, a2);
  sub_1C07ACF80(&qword_1ED741F28);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C1079220;
  sub_1C077DD60(&v8, v6 + 32);
  return v6;
}

ValueMetadata *type metadata accessor for PhaseBuilder()
{
  return &type metadata for PhaseBuilder;
}

uint64_t sub_1C0CA7A40()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RegisteredViewsGenerationFullPhase()
{
  return objc_opt_self();
}

uint64_t sub_1C0CA7A8C()
{
  return type metadata accessor for RegisteredViewsGenerationDeltaPhase(0);
}

uint64_t type metadata accessor for RegisteredViewsGenerationDeltaPhase(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1ED74CD00);
}

uint64_t sub_1C0CA7AAC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C0CA7AF0;
  return sub_1C0E7B56C();
}

uint64_t sub_1C0CA7AF0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  sub_1C07A7438();
  *v2 = v1;
  *(_QWORD *)(v3 + 24) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1C0CA7B4C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;

  if (qword_1ED761458 != -1)
    swift_once();
  v1 = sub_1C106F544();
  sub_1C079E000(v1, (uint64_t)qword_1ED78D818);
  v2 = sub_1C106F538();
  v3 = sub_1C1070390();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1C0771000, v2, v3, "Pipeline: Error while executing Delta pipeline via Fastpass.", v4, 2u);
    MEMORY[0x1C3BA8270](v4, -1, -1);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C0CA7C30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v4 = type metadata accessor for Source();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Configuration();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0893744(a1, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  sub_1C0893744(a2, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  v10 = sub_1C0E7B858((uint64_t)v9, (uint64_t)v6);
  sub_1C07B1FDC(a2, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C07B1FDC(a1, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  return v10;
}

uint64_t sub_1C0CA7D30()
{
  sub_1C0E7B510();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0CA7D50()
{
  return type metadata accessor for FastpassViewsGenerationPhase(0);
}

uint64_t type metadata accessor for FastpassViewsGenerationPhase(uint64_t a1)
{
  return sub_1C0784B00(a1, qword_1EF6469D0);
}

uint64_t sub_1C0CA7D6C()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1C0CA7DA0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C0CA7DE4;
  return sub_1C0CA7AAC();
}

uint64_t sub_1C0CA7DE4()
{
  uint64_t v0;

  sub_1C07A7438();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PhaseStores.config.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1C078E3E0(v1, a1);
}

uint64_t PhaseStores.globalKnowledgeStore.getter()
{
  sub_1C078A314();
  return swift_retain();
}

uint64_t type metadata accessor for PhaseStores()
{
  uint64_t result;

  result = qword_1ED75A388;
  if (!qword_1ED75A388)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t PhaseStores.graphStore.getter()
{
  sub_1C078A314();
  return swift_retain();
}

uint64_t PhaseStores.stateStore.getter()
{
  sub_1C078A314();
  return swift_retain();
}

uint64_t PhaseStores.visionKeyValueStore.getter()
{
  sub_1C078A314();
  return swift_retain();
}

uint64_t PhaseStores.resolverKeyValueStore.getter()
{
  sub_1C078A314();
  return swift_retain();
}

uint64_t PhaseStores.relationshipKeyValueStore.getter()
{
  sub_1C078A314();
  return swift_retain();
}

uint64_t PhaseStores.portraitTopicKeyValueStore.getter()
{
  sub_1C078A314();
  return swift_retain();
}

uint64_t PhaseStores.init(config:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  int v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t result;
  uint64_t v46;
  _QWORD v47[4];
  char *v48;

  v4 = type metadata accessor for Configuration();
  MEMORY[0x1E0C80A78](v4);
  v47[3] = (char *)v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v47 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v47 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v47 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v47 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v47 - v19;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)v47 - v22;
  v24 = a2;
  sub_1C078E3E0(a1, a2);
  v25 = type metadata accessor for GlobalKnowledgeStore(0);
  sub_1C078E3E0(a1, (uint64_t)v23);
  v26 = v48;
  v27 = sub_1C0A736B0((uint64_t)v23);
  if (!v26)
  {
    v28 = v27;
    v48 = v17;
    v47[1] = v11;
    v47[2] = v14;
    v47[0] = v8;
    v29 = (int *)sub_1C078A314();
    *(_QWORD *)(v24 + v29[5]) = v28;
    sub_1C078E3E0(a1, (uint64_t)v20);
    type metadata accessor for GraphStore();
    sub_1C077B5BC();
    v30 = GraphStore.init(config:)((uint64_t)v20);
    v31 = sub_1C0796A34(v30, v29[6]);
    sub_1C078FA5C(v31);
    type metadata accessor for StateStore();
    sub_1C077B5BC();
    v32 = sub_1C07A7450();
    v33 = StateStore.init(config:)(v32);
    v34 = sub_1C0796A34(v33, v29[7]);
    sub_1C078FA5C(v34);
    type metadata accessor for VisionKeyValueStore();
    swift_allocObject();
    v35 = sub_1C07A7450();
    v36 = VisionKeyValueStore.init(config:)(v35);
    v37 = sub_1C0796A34((uint64_t)v36, v29[8]);
    sub_1C078FA5C(v37);
    type metadata accessor for ResolverKeyValueStore();
    sub_1C0788000();
    v38 = sub_1C07A7450();
    v39 = ResolverKeyValueStore.init(config:)(v38);
    v40 = sub_1C0796A34(v39, v29[9]);
    sub_1C078FA5C(v40);
    type metadata accessor for RelationshipKeyValueStore();
    sub_1C0788000();
    v41 = sub_1C07A7450();
    v42 = RelationshipKeyValueStore.init(config:)(v41);
    v43 = sub_1C0796A34(v42, v29[10]);
    sub_1C078FA5C(v43);
    type metadata accessor for PortraitTopicKeyValueStore();
    sub_1C0788000();
    v44 = sub_1C07A7450();
    v46 = PortraitTopicKeyValueStore.init(config:)(v44);
    result = sub_1C078D09C(a1);
    *(_QWORD *)(v24 + v29[11]) = v46;
    return result;
  }
  sub_1C07A3E50();
  v48 = v26;
  sub_1C078D09C(a1);
  result = sub_1C078D09C(v24);
  if ((_DWORD)v8)
  {
    sub_1C078A314();
    result = sub_1C0789C04();
    if (!(_DWORD)v20)
    {
LABEL_6:
      if (!(_DWORD)v14)
        goto LABEL_7;
      goto LABEL_12;
    }
  }
  else if (!(_DWORD)v20)
  {
    goto LABEL_6;
  }
  sub_1C078A314();
  result = sub_1C0789C04();
  if (!(_DWORD)v14)
  {
LABEL_7:
    if (!v25)
      return result;
    goto LABEL_8;
  }
LABEL_12:
  sub_1C078A314();
  result = sub_1C0789C04();
  if (!v25)
    return result;
LABEL_8:
  sub_1C078A314();
  return sub_1C0789C04();
}

uint64_t sub_1C0CA82F4()
{
  sub_1C078A314();
  sub_1C079AE94();
  sub_1C0779758();
  sub_1C0C959F8();
  swift_release();
  swift_release();
  sub_1C079AE94();
  sub_1C0779758();
  sub_1C0C95A04();
  swift_release();
  swift_release();
  swift_retain();
  sub_1C0779758();
  sub_1C0C95A10();
  swift_release();
  return swift_release();
}

uint64_t *initializeBufferWithCopyOfBuffer for PhaseStores(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_1C106AB28();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = type metadata accessor for Configuration();
    *(_OWORD *)((char *)v4 + *(int *)(v8 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v8 + 20));
    v9 = a3[6];
    *(uint64_t *)((char *)v4 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)v4 + v9) = *(uint64_t *)((char *)a2 + v9);
    v10 = a3[8];
    *(uint64_t *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)v4 + v10) = *(uint64_t *)((char *)a2 + v10);
    v11 = a3[10];
    *(uint64_t *)((char *)v4 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    *(uint64_t *)((char *)v4 + v11) = *(uint64_t *)((char *)a2 + v11);
    *(uint64_t *)((char *)v4 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t destroy for PhaseStores(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for PhaseStores(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = type metadata accessor for Configuration();
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  v8 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  v10 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for PhaseStores(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for Configuration() + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for PhaseStores(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = type metadata accessor for Configuration();
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  v8 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  v10 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  return a1;
}

uint64_t assignWithTake for PhaseStores(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = type metadata accessor for Configuration();
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_release();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_release();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_release();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_release();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_release();
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  swift_release();
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for PhaseStores()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0CA8904(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = type metadata accessor for Configuration();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return sub_1C07B2D80(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PhaseStores()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0CA8988(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = type metadata accessor for Configuration();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return sub_1C07B2D8C(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1C0CA89FC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Configuration();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C0CA8A7C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C0CA8A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  char v31;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v9 = *(_QWORD *)(a2 + 16);
  v10 = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v38 = MEMORY[0x1E0DEE9D8];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C09D39C4();
    v10 = v38;
    v11 = sub_1C0F2239C(a2);
    v13 = v12;
    v15 = v14 & 1;
    while ((v11 & 0x8000000000000000) == 0 && v11 < 1 << *(_BYTE *)(a2 + 32))
    {
      if (((*(_QWORD *)(a2 + 56 + (((unint64_t)v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
        goto LABEL_26;
      if (*(_DWORD *)(a2 + 36) != (_DWORD)v13)
        goto LABEL_27;
      v16 = *(_BYTE *)(*(_QWORD *)(a2 + 48) + 24 * v11 + 16);
      v37 = v10;
      v17 = *(_QWORD *)(v10 + 16);
      if (v17 >= *(_QWORD *)(v10 + 24) >> 1)
        sub_1C09D39C4();
      *(_QWORD *)(v10 + 16) = v17 + 1;
      *(_BYTE *)(v10 + v17 + 32) = 0x4060503020100uLL >> (8 * v16);
      v18 = sub_1C0F22500(v11, v13, v15 & 1, a2);
      v11 = v18;
      v13 = v19;
      v15 = v20 & 1;
      if (!--v9)
      {
        sub_1C0834E68(v18, v19, v20 & 1);
        swift_bridgeObjectRelease();
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
  }
  else
  {
LABEL_11:
    sub_1C0899214(v10, a2, a3, a4, a5, a6, a7, a8, v35, SWORD2(v35), SBYTE6(v35), SHIBYTE(v35), a1, v37, v39, v40, v41, v42, v43,
      v44,
      v45);
    v10 = v21;
    if (qword_1ED755208 == -1)
      goto LABEL_12;
  }
  swift_once();
LABEL_12:
  sub_1C0C75E78(qword_1ED755200, v10);
  v23 = *(_QWORD *)(v22 + 16);
  swift_bridgeObjectRelease();
  if (v23)
    return 0;
  v24 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v25 = sub_1C0CA9774(v24);
  if (!*(_QWORD *)(v25 + 16))
  {
LABEL_22:
    sub_1C07758C4();
    goto LABEL_23;
  }
  sub_1C1070DF8();
  sub_1C1070E04();
  sub_1C106FC28();
  v26 = sub_1C1070E4C();
  v27 = -1 << *(_BYTE *)(v25 + 32);
  v28 = v26 & ~v27;
  if (((*(_QWORD *)(v25 + 56 + ((v28 >> 3) & 0xFFFFFFFFFFFFF8)) >> v28) & 1) == 0)
  {
LABEL_20:
    sub_1C07758C4();
    return 0;
  }
  v29 = ~v27;
  while (1)
  {
    v30 = (_BYTE *)(*(_QWORD *)(v25 + 48) + 24 * v28);
    if (v30[16] == 4)
      break;
LABEL_19:
    v28 = (v28 + 1) & v29;
    if (((*(_QWORD *)(v25 + 56 + ((v28 >> 3) & 0xFFFFFFFFFFFFF8)) >> v28) & 1) == 0)
      goto LABEL_20;
  }
  if ((*v30 & 1) == 0)
  {
    v31 = sub_1C1070CB4();
    swift_bridgeObjectRelease();
    if ((v31 & 1) != 0)
      goto LABEL_22;
    goto LABEL_19;
  }
  sub_1C07758C4();
  swift_bridgeObjectRelease();
LABEL_23:
  sub_1C0AA8B78();
  sub_1C0A7C19C();
  v34 = v33;
  swift_bridgeObjectRelease();
  return v34 & 1;
}

uint64_t sub_1C0CA8DE8()
{
  uint64_t result;

  result = sub_1C0AA8768();
  qword_1ED755200 = result;
  return result;
}

uint64_t sub_1C0CA8E0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v59 = a2;
  v58 = a1;
  v55 = a6;
  v54 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v52 = v9;
  v57 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v10 + 16);
  v12 = *(_QWORD *)(v10 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v53 = sub_1C107078C();
  v51 = *(_QWORD *)(v53 - 8);
  MEMORY[0x1E0C80A78](v53);
  v56 = (char *)&v45 - v14;
  sub_1C07D4BEC((uint64_t *)&unk_1ED7453B0);
  v15 = sub_1C10708D0();
  MEMORY[0x1C3BA8174](MEMORY[0x1E0DEC858], v15);
  v16 = sub_1C10709A8();
  v17 = type metadata accessor for InteractionEvent(255);
  MEMORY[0x1C3BA8174](MEMORY[0x1E0DECCA8], v16);
  v50 = v17;
  v18 = sub_1C10708D0();
  v49 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v46 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v47 = (char *)&v45 - v21;
  v48 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v45 - v23;
  if ((sub_1C0CA8A8C(a3, a4, v25, v26, v27, v28, v29, v30) & 1) != 0)
  {
    v45 = v18;
    v31 = v61;
    v32 = v60;
    result = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v12 + 24))(v58, v59, 0, 0, v11, v12);
    if (!v32)
    {
      sub_1C106FDE4();
      v34 = v54;
      (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v57, v31, a5);
      v35 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
      v36 = swift_allocObject();
      *(_QWORD *)(v36 + 16) = v11;
      *(_QWORD *)(v36 + 24) = v12;
      (*(void (**)(unint64_t, char *, uint64_t))(v34 + 32))(v36 + v35, v57, a5);
      v37 = v53;
      MEMORY[0x1C3BA8174](MEMORY[0x1E0DEC330], v53);
      v38 = v47;
      v39 = v56;
      sub_1C1070A14();
      swift_release();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v39, v37);
      v40 = v49;
      v41 = v45;
      (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v46, v38, v45);
      MEMORY[0x1C3BA8174](MEMORY[0x1E0DEC858], v41);
      v42 = sub_1C1070714();
      v43 = v55;
      *v55 = sub_1C0CAA240;
      v43[1] = v42;
      (*(void (**)(char *, uint64_t))(v40 + 8))(v38, v41);
      return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v24, AssociatedTypeWitness);
    }
  }
  else
  {
    sub_1C0881ED0();
    swift_allocError();
    *(_QWORD *)v44 = a3;
    *(_QWORD *)(v44 + 8) = a4;
    *(_BYTE *)(v44 + 16) = 0;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1C0CA91FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int16 *v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  uint64_t result;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;

  v51 = a2;
  v52 = a5;
  v49 = sub_1C106ADE0();
  v8 = *(_QWORD *)(v49 - 8);
  MEMORY[0x1E0C80A78](v49);
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PhotosPersonObservation(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1C07ACF80((uint64_t *)&unk_1ED75EA40);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_1C106E590();
  v17 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for PhotoInteractionEventSourceAdapter(0, a3, a4, v20);
  sub_1C07A9480((_QWORD *)(v51 + *(int *)(v21 + 36)), *(_QWORD *)(v51 + *(int *)(v21 + 36) + 24));
  sub_1C106ED10();
  v22 = v19;
  v23 = v17;
  v25 = v49;
  v24 = v50;
  if (sub_1C07B2D80((uint64_t)v16, 1, v50) == 1)
  {
    sub_1C0CAA248((uint64_t)v16);
    if (qword_1ED760048 != -1)
      swift_once();
    v26 = sub_1C106F544();
    sub_1C079E000(v26, (uint64_t)qword_1ED78D800);
    v27 = (uint64_t)v13;
    sub_1C0CAA288(a1, (uint64_t)v13);
    v28 = sub_1C106F538();
    v29 = sub_1C1070390();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      v31 = swift_slowAlloc();
      *(_DWORD *)v30 = 136315138;
      v54 = v31;
      v32 = (uint64_t *)&v13[*(int *)(v11 + 20)];
      v33 = *v32;
      v34 = v32[1];
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v53 = sub_1C0788DAC(v33, v34, &v54);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      sub_1C0CAA2CC(v27);
      _os_log_impl(&dword_1C0771000, v28, v29, "Unable to find mdid for PHPerson ID: %s", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v31, -1, -1);
      MEMORY[0x1C3BA8270](v30, -1, -1);
    }
    else
    {
      sub_1C0CAA2CC((uint64_t)v13);
    }

    result = 0;
  }
  else
  {
    v35 = v23;
    v36 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v37 = v22;
    v36(v22, v16, v24);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v25);
    v38 = sub_1C106E530();
    v40 = v39;
    sub_1C07ACF80(&qword_1ED744938);
    v41 = swift_allocObject();
    v42 = v41;
    *(_OWORD *)(v41 + 16) = xmmword_1C1079220;
    v43 = (unsigned __int16 *)(a1 + *(int *)(v11 + 28));
    v44 = *v43;
    v45 = *((_BYTE *)v43 + 2) == 0;
    v46 = 0x10000;
    if (v45)
      v46 = 0;
    *(_QWORD *)(v41 + 32) = v46 | v44;
    *(_QWORD *)(v41 + 40) = 0;
    *(_BYTE *)(v41 + 48) = 5;
    (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v24);
    type metadata accessor for InteractionEvent(0);
    swift_allocObject();
    result = sub_1C0B70A9C((uint64_t)v10, 3, v38, v40, v42);
  }
  *v52 = result;
  return result;
}

uint64_t sub_1C0CA9760@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  return sub_1C0CA8E0C(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1C0CA9774(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  _QWORD v11[2];

  v2 = isStackAllocationSafe;
  v11[1] = *MEMORY[0x1E0C80C00];
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = (unint64_t)((1 << v3) + 63) >> 6;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    v5 = (_QWORD *)((char *)v11 - ((8 * v4 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_1C07E7D20(0, v4, v5);
    sub_1C0CA98DC(v5, v4, v2);
    v7 = v6;
    swift_release();
    if (v1)
      swift_willThrow();
  }
  else
  {
    v8 = (uint64_t *)swift_slowAlloc();
    sub_1C07E7D20(0, v4, v8);
    sub_1C0CA98DC(v8, v4, v2);
    v7 = v9;
    swift_release();
    MEMORY[0x1C3BA8270](v8, -1, -1);
  }
  return v7;
}

void sub_1C0CA98DC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = 1 << *(_BYTE *)(a3 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a3 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  if (v6)
  {
    v8 = __clz(__rbit64(v6));
    goto LABEL_18;
  }
  if ((unint64_t)(v4 + 63) >> 6 > 1)
  {
    v9 = *(_QWORD *)(a3 + 64);
    v10 = 1;
    if (v9)
      goto LABEL_17;
    v10 = 2;
    if (v7 <= 2)
      goto LABEL_19;
    v9 = *(_QWORD *)(a3 + 72);
    if (v9)
      goto LABEL_17;
    v10 = 3;
    if (v7 <= 3)
      goto LABEL_19;
    v9 = *(_QWORD *)(a3 + 80);
    if (v9)
    {
LABEL_17:
      v8 = __clz(__rbit64(v9)) + (v10 << 6);
LABEL_18:
      __asm { BR              X9 }
    }
    v11 = 4;
    if (v7 > 4)
    {
      v9 = *(_QWORD *)(a3 + 88);
      if (v9)
      {
        v10 = 4;
        goto LABEL_17;
      }
      while (1)
      {
        v10 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
          __break(1u);
          JUMPOUT(0x1C0CA9B8CLL);
        }
        if (v10 >= v7)
          break;
        v9 = *(_QWORD *)(a3 + 56 + 8 * v10);
        ++v11;
        if (v9)
          goto LABEL_17;
      }
    }
  }
LABEL_19:
  swift_retain();
  sub_1C0C884A8(a1, a2, 0, a3);
}

uint64_t sub_1C0CA9BAC()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C0CA9C20(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 40 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v12 = *(_QWORD *)(v11 + 24);
    *(_QWORD *)(v10 + 24) = v12;
    *(_QWORD *)(v10 + 32) = *(_QWORD *)(v11 + 32);
    (**(void (***)(void))(v12 - 8))();
  }
  return v4;
}

uint64_t sub_1C0CA9CE4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  return _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8);
}

uint64_t sub_1C0CA9D20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)(v8 + 24);
  *(_QWORD *)(v7 + 24) = v9;
  *(_QWORD *)(v7 + 32) = *(_QWORD *)(v8 + 32);
  (**(void (***)(void))(v9 - 8))();
  return a1;
}

uint64_t sub_1C0CA9D90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  sub_1C07E6484((uint64_t *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFFFF8), (uint64_t *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFFFF8));
  return a1;
}

uint64_t sub_1C0CA9DE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)(v8 + 32);
  v10 = *(_OWORD *)(v8 + 16);
  *(_OWORD *)v7 = *(_OWORD *)v8;
  *(_OWORD *)(v7 + 16) = v10;
  *(_QWORD *)(v7 + 32) = v9;
  return a1;
}

uint64_t sub_1C0CA9E4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v7);
  v9 = *(_OWORD *)v8;
  v10 = *(_OWORD *)(v8 + 16);
  *(_QWORD *)(v7 + 32) = *(_QWORD *)(v8 + 32);
  *(_OWORD *)v7 = v9;
  *(_OWORD *)(v7 + 16) = v10;
  return a1;
}

uint64_t sub_1C0CA9EB8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v13;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (v7 >= a2)
  {
    if (v6 < 0x7FFFFFFF)
    {
      v13 = *(_QWORD *)(((a1 + v8 + 7) & 0xFFFFFFFFFFFFF8) + 0x18);
      if (v13 >= 0xFFFFFFFF)
        LODWORD(v13) = -1;
      return (v13 + 1);
    }
    else
    {
      return sub_1C07B2D80(a1, v6, v4);
    }
  }
  else
  {
    if (((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 40) & 0xFFFFFFF8) != 0)
      v9 = 2;
    else
      v9 = a2 - v7 + 1;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1C0CA9F34 + 4 * byte_1C10B2110[v11]))();
  }
}

void sub_1C0CA9FB4(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFD8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
  }
  if (a2 > v6)
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFD8)
    {
      v10 = ~v6 + a2;
      bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 40);
      *a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_1C0CAA0A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  unint64_t v8;

  *(_BYTE *)(v5 + v6) = 0;
  if ((_DWORD)a2)
  {
    if (a3 < 0x7FFFFFFF)
    {
      v8 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
      if ((a2 & 0x80000000) != 0)
      {
        *(_OWORD *)(v8 + 8) = 0u;
        *(_OWORD *)(v8 + 24) = 0u;
        *(_QWORD *)v8 = a2 ^ 0x80000000;
      }
      else
      {
        *(_QWORD *)(v8 + 24) = (a2 - 1);
      }
    }
    else
    {
      return sub_1C07B2D8C(v5, a2, a3, a4);
    }
  }
  return result;
}

uint64_t type metadata accessor for PhotoInteractionEventSourceAdapter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0802884(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PhotoInteractionEventSourceAdapter);
}

uint64_t sub_1C0CAA148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for PhotoInteractionEventSourceAdapter(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  v8 = v4 + ((v7 + 32) & ~v7);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v8, v5);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v8 + *(int *)(v6 + 36));
  return swift_deallocObject();
}

uint64_t sub_1C0CAA1D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PhotoInteractionEventSourceAdapter(0, v6, v7, a2)
                                      - 8)
                          + 80);
  return sub_1C0CA91FC(a1, v3 + ((v8 + 32) & ~v8), v6, v7, a3);
}

void sub_1C0CAA238(_QWORD *a1@<X8>)
{
  sub_1C093F594(a1);
}

void sub_1C0CAA240(_QWORD *a1@<X8>)
{
  sub_1C093F594(a1);
}

uint64_t sub_1C0CAA248(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C07ACF80((uint64_t *)&unk_1ED75EA40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0CAA288(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PhotosPersonObservation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0CAA2CC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PhotosPersonObservation(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0CAA308(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = sub_1C0779D10();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](v2);
  v5 = sub_1C07ACF80((uint64_t *)&unk_1ED761470);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C107009C();
  v8 = sub_1C10700C0();
  sub_1C07B2D8C((uint64_t)v7, 0, 1, v8);
  sub_1C078E3E0(a1, (uint64_t)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = 0;
  *(_QWORD *)(v10 + 24) = 0;
  sub_1C078E578((uint64_t)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9);
  sub_1C0CBF844((uint64_t)v7, (uint64_t)&unk_1EF646AB8, v10);
  swift_release();
  return sub_1C0784B30((uint64_t)v7, (uint64_t *)&unk_1ED761470);
}

uint64_t sub_1C0CAA42C()
{
  uint64_t result;

  result = sub_1C106FAF0();
  qword_1ED78C428 = result;
  return result;
}

uint64_t sub_1C0CAA460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[3] = a4;
  sub_1C07ACF80(&qword_1ED741568);
  v4[4] = swift_task_alloc();
  v5 = sub_1C07ACF80(&qword_1ED7419F0);
  v4[5] = v5;
  v4[6] = *(_QWORD *)(v5 - 8);
  v4[7] = swift_task_alloc();
  v6 = sub_1C1070498();
  v4[8] = v6;
  v4[9] = *(_QWORD *)(v6 - 8);
  v4[10] = swift_task_alloc();
  v7 = sub_1C07ACF80(&qword_1ED7419F8);
  v4[11] = v7;
  v4[12] = *(_QWORD *)(v7 - 8);
  v4[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C0CAA53C()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  if (qword_1ED74D3C0 != -1)
    swift_once();
  v2 = v0[10];
  v3 = v0[8];
  v4 = v0[9];
  sub_1C10704A4();

  v5 = sub_1C07803B8(&qword_1ED74D3D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1F30], MEMORY[0x1E0CB1F20]);
  MEMORY[0x1C3BA611C](v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  sub_1C106F70C();
  v0[14] = sub_1C0CAB0D8();
  v6 = (_QWORD *)swift_task_alloc();
  v0[15] = v6;
  *v6 = v0;
  v6[1] = sub_1C0CAA674;
  return sub_1C07A12F4();
}

uint64_t sub_1C0CAA674()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v2 = *v1;
  v4 = *v1;
  sub_1C07878A8(&v4);
  if (v0)
    *(_QWORD *)(v2 + 136) = v0;
  else
    *(_QWORD *)(v2 + 128) = 0;
  return sub_1C0789D28();
}

void sub_1C0CAA6D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = sub_1C106A834();
  if (sub_1C07B2D80(v1, 1, v2) == 1)
  {
    v4 = *(_QWORD *)(v0 + 96);
    v3 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 88);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 8))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 40));
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    (*(void (**)(void))(v0 + 8))();
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 128);
    v7 = *(_QWORD *)(v0 + 24);
    v8 = (void *)MEMORY[0x1C3BA79F4]();
    sub_1C0CAA9D4(v7);
    if (v6)
    {
      objc_autoreleasePoolPop(v8);
    }
    else
    {
      v9 = *(_QWORD *)(v0 + 32);
      objc_autoreleasePoolPop(v8);
      sub_1C0784B30(v9, &qword_1ED741568);
      v10 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 144) = v10;
      *v10 = v0;
      v10[1] = sub_1C0CAA884;
      sub_1C07A12F4();
    }
  }
}

uint64_t sub_1C0CAA824()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 136);
  sub_1C07ACF80(&qword_1ED7614F0);
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

uint64_t sub_1C0CAA884()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v2 = *v1;
  v4 = *v1;
  sub_1C07878A8(&v4);
  if (v0)
    *(_QWORD *)(v2 + 136) = v0;
  else
    *(_QWORD *)(v2 + 128) = 0;
  return sub_1C0789D28();
}

uint64_t sub_1C0CAA8E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1C0779D10() - 8) + 80);
  v2 = (v1 + 32) & ~v1;
  swift_unknownObjectRelease();
  v3 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0 + v2, v3);
  return swift_deallocObject();
}

uint64_t sub_1C0CAA954(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_1C0779D10() - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1C0BAE5E4;
  return sub_1C0CAA460(a1, v5, v6, v7);
}

void sub_1C0CAA9D4(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t *v41;
  uint64_t *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v50 = a1;
  v2 = type metadata accessor for Configuration();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (int *)type metadata accessor for FeedbackLogEntry(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C106E9B0();
  v9 = MEMORY[0x1E0C80A78](v8);
  (*(void (**)(char *, _QWORD, double))(v11 + 104))((char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0D3D2B0], v9);
  v12 = sub_1C106EA04();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D318];
  swift_allocObject();
  v14 = sub_1C106E9EC();
  sub_1C106A9A8();
  swift_allocObject();
  v15 = sub_1C106A99C();
  sub_1C106A984();
  v52 = v14;
  sub_1C07803B8(qword_1EF646AC0, v13, MEMORY[0x1E0D3D328]);
  v16 = sub_1C106A990();
  if (v1)
  {
    swift_release();
    swift_release();
    if (qword_1ED762B18 != -1)
      swift_once();
    v18 = sub_1C106F544();
    sub_1C079E000(v18, (uint64_t)qword_1ED762AF8);
    v19 = v1;
    v20 = v1;
    v21 = sub_1C106F538();
    v22 = sub_1C1070390();
    if (os_log_type_enabled(v21, v22))
    {
      v50 = 0;
      v23 = swift_slowAlloc();
      v24 = (_QWORD *)swift_slowAlloc();
      v25 = swift_slowAlloc();
      v52 = v25;
      *(_DWORD *)v23 = 136315394;
      if (qword_1ED74D3C0 != -1)
        swift_once();
      v26 = sub_1C106FB14();
      v51 = sub_1C0788DAC(v26, v27, &v52);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2112;
      v28 = v1;
      v29 = _swift_stdlib_bridgeErrorToNSError();
      v51 = v29;
      sub_1C10705AC();
      *v24 = v29;

      _os_log_impl(&dword_1C0771000, v21, v22, "Failed to respond to %s: %@", (uint8_t *)v23, 0x16u);
      sub_1C07ACF80(&qword_1ED7614A0);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v24, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v25, -1, -1);
      MEMORY[0x1C3BA8270](v23, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    v30 = v16;
    v31 = v17;
    v49 = v15;
    sub_1C106ADD4();
    sub_1C07B0E28(v30, v31);
    v48 = v4;
    v32 = (uint64_t)v7;
    v33 = v31;
    v34 = v30;
    v35 = sub_1C106E9E0();
    v37 = v36;
    v38 = sub_1C07803B8(&qword_1ED7482A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D318], MEMORY[0x1E0D3D310]);
    v39 = MEMORY[0x1C3BA4EF8](v12, v38);
    v40 = (uint64_t *)(v32 + v5[5]);
    *v40 = v34;
    v40[1] = v33;
    v41 = (uint64_t *)(v32 + v5[6]);
    *v41 = v35;
    v41[1] = v37;
    v42 = (uint64_t *)(v32 + v5[7]);
    *v42 = v39;
    v42[1] = v43;
    v44 = (_QWORD *)(v32 + v5[8]);
    *v44 = 0;
    v44[1] = 0;
    *(_QWORD *)(v32 + v5[9]) = 0;
    sub_1C078E3E0(v50, (uint64_t)v48);
    type metadata accessor for FeedbackProcessingTask();
    sub_1C0A4ADC0();
    type metadata accessor for FeedbackWalker();
    swift_allocObject();
    FeedbackWalker.init(config:processors:)();
    MEMORY[0x1E0C80A78](v45);
    *(&v47 - 2) = v32;
    *(&v47 - 1) = v46;
    sub_1C0A461FC((uint64_t)sub_1C0A4CB38, (uint64_t)(&v47 - 4));
    swift_release();
    swift_release();
    swift_release();
    sub_1C07B3374(v34, v33);
    sub_1C0CAB11C(v32);
  }
}

unint64_t sub_1C0CAB0D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED741548;
  if (!qword_1ED741548)
  {
    v1 = sub_1C07D4BEC(&qword_1ED7419F0);
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0C95E78], v1);
    atomic_store(result, (unint64_t *)&qword_1ED741548);
  }
  return result;
}

uint64_t sub_1C0CAB11C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FeedbackLogEntry(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0CAB158(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for Configuration();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v3);
  sub_1C0776794();
  sub_1C078E3E0(a1, v1);
  type metadata accessor for PhotosAutonamingViewFeedbackProcessor();
  v4 = swift_allocObject();
  sub_1C0CAB1E4(v1);
  sub_1C07B1FDC(a1, (uint64_t (*)(_QWORD))_s11InitContextVMa);
  return v4;
}

_QWORD *sub_1C0CAB1E4(uint64_t a1)
{
  _QWORD *v1;
  void *v2;
  _QWORD *v3;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  _QWORD *v9;

  v3 = v1;
  type metadata accessor for Configuration();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v5);
  sub_1C0776794();
  v1[2] = 0xD000000000000025;
  v1[3] = 0x80000001C10B2200;
  v1[4] = 0xD000000000000018;
  v1[5] = 0x80000001C11078A0;
  *((_BYTE *)v1 + OBJC_IVAR____TtC24IntelligencePlatformCore37PhotosAutonamingViewFeedbackProcessor_changesMade) = 0;
  sub_1C078E3E0(a1, (uint64_t)v1 + OBJC_IVAR____TtC24IntelligencePlatformCore37PhotosAutonamingViewFeedbackProcessor_config);
  v6 = objc_msgSend((id)BiomeLibrary(), sel_Photos);
  sub_1C078CD40();
  v7 = objc_msgSend(v2, sel_AutonamingSuggestions);
  swift_unknownObjectRelease();
  v8 = objc_msgSend(v7, sel_Feedback);
  sub_1C078CD40();
  v1[6] = v2;
  sub_1C078E3E0(a1, (uint64_t)v1);
  type metadata accessor for VisionKeyValueStore();
  swift_allocObject();
  v9 = VisionKeyValueStore.init(config:)((uint64_t)v1);
  sub_1C07B1FDC(a1, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v3[7] = v9;
  return v3;
}

void sub_1C0CAB398()
{
  uint64_t v0;

  *(_BYTE *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore37PhotosAutonamingViewFeedbackProcessor_changesMade) = 0;
}

uint64_t sub_1C0CAB3A8@<X0>(void (*a1)(uint64_t, _BYTE *, uint64_t)@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (**v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  void *v16;
  id v17;
  void (*v18)(uint64_t, _BYTE *, uint64_t);
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t result;
  _BYTE *v38;
  void *v39;
  int v40;
  _BYTE v41[4];
  unsigned int v42;
  id v43;
  uint64_t v44;
  _BYTE *v45;
  uint64_t v46;
  _QWORD aBlock[6];
  uint64_t v48;

  v45 = a2;
  v5 = sub_1C106E9D4();
  v46 = *(_QWORD *)(v5 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C077AE40();
  v44 = v7;
  v8 = sub_1C106E9B0();
  v9 = *(uint64_t (***)(uint64_t, uint64_t))(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  sub_1C07785B8();
  sub_1C07ACF80(&qword_1EF646AF8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v10);
  v12 = &v41[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v13);
  v15 = &v41[-v14];
  v48 = v2;
  v16 = *(void **)(v2 + 48);
  if (v16)
  {
    sub_1C078C780((uint64_t)&v41[-v14], 1);
    v17 = v16;
    v18 = a1;
    sub_1C106E9F8();
    v19 = v9[11](v3, v8);
    if ((_DWORD)v19 == *MEMORY[0x1E0D3D2C8])
    {
      v43 = v17;
      sub_1C07A022C();
      sub_1C079A940(v9[12]);
      v9 = *(uint64_t (***)(uint64_t, uint64_t))v3;
      v20 = *(id *)(v3 + 8);
      v21 = sub_1C07ACF80(&qword_1EF646B00);
      v22 = v46;
      sub_1C07881E0(v21, v3 + *(int *)(v21 + 48));
      v23 = 1;
    }
    else
    {
      v18 = (void (*)(uint64_t, _BYTE *, uint64_t))v19;
      v22 = v46;
      if ((_DWORD)v19 != *MEMORY[0x1E0D3D2C0])
      {
        if ((_DWORD)v19 == *MEMORY[0x1E0D3D2B8])
        {
          v20 = objc_msgSend(v17, sel_pruner);
          aBlock[4] = sub_1C07C7E9C;
          aBlock[5] = 0;
          aBlock[0] = MEMORY[0x1E0C809B0];
          aBlock[1] = 1107296256;
          aBlock[2] = sub_1C080BF4C;
          aBlock[3] = &unk_1E7A29318;
          v28 = _Block_copy(aBlock);
          swift_release();
          objc_msgSend(v20, sel_deleteEventsPassingTest_, v28);

          _Block_release(v28);
          if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
          {
            __break(1u);
            goto LABEL_13;
          }
        }
        else
        {
          v39 = v17;
          v40 = *MEMORY[0x1E0D3D2B0];

          if ((_DWORD)v18 != v40)
            sub_1C079A940(v9[1]);
        }
        result = sub_1C07A022C();
        v38 = v45;
        v26 = v48;
        goto LABEL_19;
      }
      v43 = v17;
      sub_1C07A022C();
      sub_1C079A940(v9[12]);
      v9 = *(uint64_t (***)(uint64_t, uint64_t))v3;
      v20 = *(id *)(v3 + 8);
      v24 = sub_1C07ACF80(&qword_1EF646B00);
      sub_1C07881E0(v24, v3 + *(int *)(v24 + 48));
      v23 = 2;
    }
    v42 = v23;
    sub_1C078C780((uint64_t)v15, 0);
    sub_1C0CAC404((uint64_t)v15, (uint64_t)v12);
    v25 = sub_1C07B2D80((uint64_t)v12, 1, v5);
    v26 = v48;
    v3 = v44;
    if (v25 == 1)
    {
      sub_1C07767AC();
      sub_1C07A56F0();
      sub_1C07A022C();
      v27 = (uint64_t)v12;
LABEL_15:
      result = sub_1C0CAC3C4(v27);
      v38 = v45;
LABEL_19:
      *(_BYTE *)(v26 + OBJC_IVAR____TtC24IntelligencePlatformCore37PhotosAutonamingViewFeedbackProcessor_changesMade) = 1;
      *v38 = 0;
      return result;
    }
    v18(v44, v12, v5);
    sub_1C07767B4();
    sub_1C0CAB838((char *)aBlock);
    v28 = (void *)SLOBYTE(aBlock[0]);
    if (SLOBYTE(aBlock[0]) == 7)
    {
      sub_1C07878E4();
      sub_1C07A56F0();
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v3, v5);
LABEL_14:
      v27 = (uint64_t)v15;
      goto LABEL_15;
    }
LABEL_13:
    v29 = objc_msgSend(v43, sel_source);
    LODWORD(v46) = dword_1C10B22C0[(_QWORD)v28];
    LOBYTE(aBlock[0]) = (_BYTE)v28;
    sub_1C0CABA00((uint64_t)v9, (uint64_t)v20, v3, (unsigned __int8 *)aBlock);
    v31 = v30;
    v32 = (uint64_t)v9;
    v34 = v33;
    sub_1C07767AC();
    v35 = objc_allocWithZone(MEMORY[0x1E0D02118]);
    v26 = v48;
    v36 = sub_1C0CAC308(v42, v46, v31, v34, v32, (uint64_t)v20);
    objc_msgSend(v29, sel_sendEvent_, v36);

    sub_1C07A56F0();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v44, v5);
    goto LABEL_14;
  }
  result = sub_1C1070954();
  __break(1u);
  return result;
}

void sub_1C0CAB838(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  char v21;
  _BYTE v22[56];

  sub_1C106E9C8();
  if (v4)
  {
    sub_1C07A4AD8();
    VisionKeyValueStore.fetchEntityIdentifiers(for:)();
    v6 = sub_1C0CAC778;
LABEL_5:
    v8 = sub_1C0CAC44C(v5, v1, v2, (uint64_t)v6);
    goto LABEL_6;
  }
  sub_1C106E9BC();
  if (v7)
  {
    sub_1C07A4AD8();
    VisionKeyValueStore.fetchNameEntities(for:)();
    v6 = sub_1C0CAC5A8;
    goto LABEL_5;
  }
  v8 = MEMORY[0x1E0DEE9E8];
LABEL_6:
  v9 = sub_1C0F2239C(v8);
  v11 = v10;
  v13 = v12;
  v14 = sub_1C0AA9C54(v8);
  if (((v13 | v16) & 1) == 0)
  {
    if (v11 == v15)
    {
      if (v9 != v14)
      {
        sub_1C0F2311C(v9, v11, v8, (uint64_t)v22);
        sub_1C077960C();
        v21 = v22[48];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C077960C();
LABEL_14:
        *a1 = v21;
        return;
      }
      sub_1C077960C();
      if (qword_1ED761458 == -1)
      {
LABEL_10:
        v17 = sub_1C106F544();
        sub_1C079E000(v17, (uint64_t)qword_1ED78D818);
        v18 = sub_1C106F538();
        v19 = sub_1C1070390();
        if (os_log_type_enabled(v18, v19))
        {
          v20 = (uint8_t *)sub_1C0775854();
          *(_WORD *)v20 = 0;
          _os_log_impl(&dword_1C0771000, v18, v19, "There should be an entry in the vision kvs for an autonaming suggestion.", v20, 2u);
          sub_1C0776778();
        }

        v21 = 7;
        goto LABEL_14;
      }
    }
    else
    {
      __break(1u);
    }
    swift_once();
    goto LABEL_10;
  }
  __break(1u);
}

void sub_1C0CABA00(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v25 = a1;
  v23 = sub_1C106F874();
  v22[1] = *(_QWORD *)(v23 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v8);
  sub_1C077AE40();
  v22[5] = v9;
  v10 = sub_1C106F868();
  v22[3] = *(_QWORD *)(v10 - 8);
  v22[4] = v10;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v11);
  v22[0] = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v22[2] = (char *)v22 - v14;
  sub_1C106FB50();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v15);
  v16 = sub_1C106E9D4();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  sub_1C07785B8();
  v24 = *a4;
  sub_1C106E9C8();
  v19 = v18;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v4, a3, v16);
  if (v19)
  {
    sub_1C0783058(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8));
  }
  else
  {
    sub_1C106E9BC();
    v21 = v20;
    sub_1C0783058(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8));
    if (!v21)
    {
      sub_1C078FA64();
      __break(1u);
      JUMPOUT(0x1C0CABEA4);
    }
  }
  v26 = v25;
  v27 = a2;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  __asm { BR              X9 }
}

void sub_1C0CABED0()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  void *v4;
  unsigned int v5;
  id v6;
  id v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  _QWORD *v12;
  void *v13;
  id v14[2];

  v14[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = OBJC_IVAR____TtC24IntelligencePlatformCore37PhotosAutonamingViewFeedbackProcessor_changesMade;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore37PhotosAutonamingViewFeedbackProcessor_changesMade) == 1)
  {
    v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D3E038]), sel_init);
    v3 = (void *)sub_1C106FAF0();
    v4 = (void *)sub_1C106FAF0();
    v14[0] = 0;
    v5 = objc_msgSend(v2, sel_sourceUpdatedWithSourceType_sourceIdentifier_error_, v3, v4, v14);

    if (v5)
    {
      v6 = v14[0];

      *(_BYTE *)(v0 + v1) = 0;
    }
    else
    {
      v7 = v14[0];
      sub_1C106AA14();

      swift_willThrow();
      if (qword_1ED762B18 != -1)
        swift_once();
      v8 = sub_1C106F544();
      sub_1C079E000(v8, (uint64_t)qword_1ED762AF8);
      sub_1C077C818();
      sub_1C077C818();
      v9 = sub_1C106F538();
      v10 = sub_1C1070390();
      if (os_log_type_enabled(v9, v10))
      {
        v11 = (uint8_t *)sub_1C0775854();
        v12 = (_QWORD *)sub_1C0775854();
        *(_DWORD *)v11 = 138412290;
        sub_1C077C818();
        v13 = (void *)_swift_stdlib_bridgeErrorToNSError();
        v14[0] = v13;
        sub_1C10705AC();
        *v12 = v13;
        sub_1C077C220();
        sub_1C077C220();
        _os_log_impl(&dword_1C0771000, v9, v10, "PhotosAutonamingViewFeedbackProcessor: Could not register sourceUpdated event: %@", v11, 0xCu);
        sub_1C07ACF80(&qword_1ED7614A0);
        swift_arrayDestroy();
        sub_1C0776778();
      }
      sub_1C077C220();
      sub_1C077C220();
      sub_1C077C220();

    }
  }
}

uint64_t sub_1C0CAC134()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  sub_1C07B1FDC(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore37PhotosAutonamingViewFeedbackProcessor_config, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  return v0;
}

uint64_t sub_1C0CAC180()
{
  sub_1C0CAC134();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0CAC1A4()
{
  return type metadata accessor for PhotosAutonamingViewFeedbackProcessor();
}

uint64_t type metadata accessor for PhotosAutonamingViewFeedbackProcessor()
{
  uint64_t result;

  result = qword_1ED74CF38;
  if (!qword_1ED74CF38)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C0CAC1E4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Configuration();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1C0CAC27C@<X0>(void (*a1)(uint64_t, _BYTE *, uint64_t)@<X0>, _BYTE *a2@<X8>)
{
  return sub_1C0CAB3A8(a1, a2);
}

void sub_1C0CAC29C()
{
  sub_1C0CAB398();
}

void sub_1C0CAC2BC()
{
  sub_1C0CABED0();
}

uint64_t sub_1C0CAC2DC()
{
  return sub_1C07803B8(&qword_1ED7482A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D318], MEMORY[0x1E0D3D310]);
}

id sub_1C0CAC308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  void *v10;
  void *v11;
  id v12;

  if (!a4)
  {
    v10 = 0;
    if (a6)
      goto LABEL_3;
LABEL_5:
    v11 = 0;
    goto LABEL_6;
  }
  v10 = (void *)sub_1C106FAF0();
  swift_bridgeObjectRelease();
  if (!a6)
    goto LABEL_5;
LABEL_3:
  v11 = (void *)sub_1C106FAF0();
  swift_bridgeObjectRelease();
LABEL_6:
  v12 = objc_msgSend(v6, sel_initWithFeedbackType_associationType_feedbackId_visualId_, a1, a2, v10, v11);

  return v12;
}

uint64_t sub_1C0CAC3C4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C07ACF80(&qword_1EF646AF8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0CAC404(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1EF646AF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0CAC44C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unsigned int v6;
  uint64_t isStackAllocationSafe;
  uint64_t v8;

  v6 = *(_BYTE *)(a1 + 32) & 0x3F;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    sub_1C079B950();
    sub_1C07767B4();
    sub_1C07A1300();
    sub_1C0793F20();
    if (a4)
      swift_willThrow();
    sub_1C07878E4();
  }
  else
  {
    v8 = swift_slowAlloc();
    sub_1C079B950();
    sub_1C07767B4();
    sub_1C07A1300();
    sub_1C0793F20();
    MEMORY[0x1C3BA8270](v8, -1, -1);
    sub_1C07878E4();
  }
  sub_1C07767AC();
  return v4;
}

uint64_t sub_1C0CAC5A8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  unint64_t *v25;
  uint64_t v26;

  v25 = (unint64_t *)result;
  v8 = 0;
  v9 = 0;
  v10 = a3 + 56;
  v11 = 1 << *(_BYTE *)(a3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(a3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
LABEL_4:
  v26 = v8;
  while (v13)
  {
    v15 = __clz(__rbit64(v13));
    v13 &= v13 - 1;
    v16 = v15 | (v9 << 6);
LABEL_21:
    v20 = *(_QWORD *)(a3 + 48) + 56 * v16;
    result = *(_QWORD *)(v20 + 16);
    if (result != a4 || *(_QWORD *)(v20 + 24) != a5)
    {
      result = sub_1C1070CB4();
      if ((result & 1) == 0)
        continue;
    }
    *(unint64_t *)((char *)v25 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    v8 = v26 + 1;
    if (!__OFADD__(v26, 1))
      goto LABEL_4;
    __break(1u);
LABEL_29:
    swift_retain();
    sub_1C0C88970(v25, a2, v26, a3);
    v23 = v22;
    swift_bridgeObjectRelease();
    return v23;
  }
  v17 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v17 >= v14)
    goto LABEL_29;
  v18 = *(_QWORD *)(v10 + 8 * v17);
  ++v9;
  if (v18)
    goto LABEL_20;
  v9 = v17 + 1;
  if (v17 + 1 >= v14)
    goto LABEL_29;
  v18 = *(_QWORD *)(v10 + 8 * v9);
  if (v18)
    goto LABEL_20;
  v9 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_29;
  v18 = *(_QWORD *)(v10 + 8 * v9);
  if (v18)
  {
LABEL_20:
    v13 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v9 << 6);
    goto LABEL_21;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_29;
  v18 = *(_QWORD *)(v10 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_20;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_29;
    v18 = *(_QWORD *)(v10 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_20;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1C0CAC778(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v22;
  uint64_t v23;
  unint64_t *v25;
  uint64_t v26;

  v25 = (unint64_t *)result;
  v8 = 0;
  v9 = 0;
  v10 = a3 + 56;
  v11 = 1 << *(_BYTE *)(a3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(a3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
LABEL_4:
  v26 = v8;
  while (v13)
  {
    v15 = __clz(__rbit64(v13));
    v13 &= v13 - 1;
    v16 = v15 | (v9 << 6);
LABEL_21:
    v20 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 56 * v16);
    result = *v20;
    if (*v20 != a4 || v20[1] != a5)
    {
      result = sub_1C1070CB4();
      if ((result & 1) == 0)
        continue;
    }
    *(unint64_t *)((char *)v25 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    v8 = v26 + 1;
    if (!__OFADD__(v26, 1))
      goto LABEL_4;
    __break(1u);
LABEL_29:
    swift_retain();
    sub_1C0C88970(v25, a2, v26, a3);
    v23 = v22;
    swift_bridgeObjectRelease();
    return v23;
  }
  v17 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v17 >= v14)
    goto LABEL_29;
  v18 = *(_QWORD *)(v10 + 8 * v17);
  ++v9;
  if (v18)
    goto LABEL_20;
  v9 = v17 + 1;
  if (v17 + 1 >= v14)
    goto LABEL_29;
  v18 = *(_QWORD *)(v10 + 8 * v9);
  if (v18)
    goto LABEL_20;
  v9 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_29;
  v18 = *(_QWORD *)(v10 + 8 * v9);
  if (v18)
  {
LABEL_20:
    v13 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v9 << 6);
    goto LABEL_21;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_29;
  v18 = *(_QWORD *)(v10 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_20;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_29;
    v18 = *(_QWORD *)(v10 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_20;
  }
LABEL_31:
  __break(1u);
  return result;
}

id sub_1C0CAC948()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v1 = (void *)sub_1C106AAB0();
  v2 = objc_msgSend(v0, sel_initWithPhotoLibraryURL_, v1);

  v3 = sub_1C07815A8();
  sub_1C077B5C8(v3);
  return v2;
}

double sub_1C0CAC9B0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  return sub_1C0CB007C(a1, a2, a3, a4, a5);
}

uint64_t sub_1C0CAC9D0()
{
  unint64_t v0;

  v0 = sub_1C1070A2C();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t sub_1C0CACA1C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0CACA50 + 4 * byte_1C10B22E0[a1]))(0x64497465737361, 0xE700000000000000);
}

unint64_t sub_1C0CACA50()
{
  return sub_1C07A4AF0();
}

uint64_t sub_1C0CACA60()
{
  return 0x736E6F73726570;
}

uint64_t sub_1C0CACA74(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0CACAA8 + 4 * byte_1C10B22E4[a1]))(0x64497465737361, 0xE700000000000000);
}

unint64_t sub_1C0CACAA8()
{
  return sub_1C07A4AF0();
}

uint64_t sub_1C0CACAB8()
{
  return 0x736E6F73726570;
}

void sub_1C0CACACC()
{
  sub_1C08C6734();
}

void sub_1C0CACAD8()
{
  sub_1C0A54070();
}

void sub_1C0CACAE0()
{
  sub_1C08C9E04();
}

void sub_1C0CACAE8()
{
  sub_1C0A54868();
}

uint64_t sub_1C0CACAF0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C0CAC9D0();
  *a1 = result;
  return result;
}

void sub_1C0CACB1C(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t v3;

  *a1 = sub_1C0CACA1C(*v1);
  a1[1] = v3;
  sub_1C0778534();
}

uint64_t sub_1C0CACB40()
{
  unsigned __int8 *v0;

  return sub_1C0CACA74(*v0);
}

uint64_t sub_1C0CACB48@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C0CACA18();
  *a1 = result;
  return result;
}

uint64_t sub_1C0CACB6C()
{
  sub_1C0CACD9C();
  return sub_1C1070EE8();
}

uint64_t sub_1C0CACB94()
{
  sub_1C0CACD9C();
  return sub_1C1070EF4();
}

uint64_t AssetPersonMetadata.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1C07ACF80(&qword_1EF646B08);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1C0778544();
  sub_1C07A9480(a1, a1[3]);
  sub_1C0CACD9C();
  sub_1C1070EB8();
  sub_1C1070B7C();
  if (!v1)
  {
    type metadata accessor for AssetPersonMetadata(0);
    sub_1C106ADE0();
    sub_1C0CAD108((uint64_t)&qword_1ED75E7D0);
    sub_1C1070BB8();
    sub_1C07ACF80(&qword_1ED762B70);
    sub_1C0CAD138((uint64_t)&qword_1ED7560B8);
    sub_1C079A06C();
    sub_1C07ACF80(&qword_1EF646B18);
    sub_1C0CAD188((uint64_t)&unk_1EF646B20);
    sub_1C079A06C();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
}

unint64_t sub_1C0CACD9C()
{
  unint64_t result;

  result = qword_1EF646B10;
  if (!qword_1EF646B10)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B2768, &unk_1E7A294E8);
    atomic_store(result, (unint64_t *)&qword_1EF646B10);
  }
  return result;
}

uint64_t type metadata accessor for AssetPersonMetadata(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1ED7442C0);
}

unint64_t sub_1C0CACDEC()
{
  unint64_t result;

  result = qword_1EF646B28;
  if (!qword_1EF646B28)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for AssetPerson, &type metadata for AssetPerson);
    atomic_store(result, (unint64_t *)&qword_1EF646B28);
  }
  return result;
}

void AssetPersonMetadata.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = sub_1C106ADE0();
  v14 = *(_QWORD *)(v3 - 8);
  v15 = v3;
  MEMORY[0x1E0C80A78](v3);
  sub_1C0778564();
  v6 = v5 - v4;
  v16 = sub_1C07ACF80(&qword_1EF646B30);
  MEMORY[0x1E0C80A78](v16);
  sub_1C0778564();
  v7 = (int *)type metadata accessor for AssetPersonMetadata(0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v8);
  sub_1C0778564();
  v11 = (uint64_t *)(v10 - v9);
  sub_1C07A9480(a1, a1[3]);
  sub_1C0CACD9C();
  sub_1C1070E94();
  if (v17)
  {
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)a1);
  }
  else
  {
    *v11 = sub_1C1070AA4();
    v11[1] = v12;
    LOBYTE(v18) = 1;
    sub_1C0CAD108((uint64_t)&qword_1ED75E9A0);
    sub_1C0781EE0();
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))((char *)v11 + v7[5], v6, v15);
    sub_1C07ACF80(&qword_1ED762B70);
    sub_1C0CAD138((uint64_t)&qword_1ED762B78);
    sub_1C07881F0();
    sub_1C0781EE0();
    *(uint64_t *)((char *)v11 + v7[6]) = v18;
    sub_1C07ACF80(&qword_1EF646B18);
    sub_1C0CAD188((uint64_t)&unk_1EF646B38);
    sub_1C07881F0();
    sub_1C0781EE0();
    sub_1C0799020();
    *(uint64_t *)((char *)v11 + v7[7]) = v18;
    sub_1C0CAD21C((uint64_t)v11, a2);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)a1);
    sub_1C0CAD260((uint64_t)v11);
  }
  sub_1C07757D0();
}

void sub_1C0CAD108(uint64_t a1)
{
  void (*v1)(uint64_t);

  if (!sub_1C0780FEC(a1))
  {
    v1(255);
    sub_1C077D8A0();
  }
  sub_1C0778534();
}

void sub_1C0CAD138(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (!sub_1C0780FEC(a1))
  {
    v4 = v3;
    v5 = v2;
    v6 = sub_1C07D4BEC(&qword_1ED762B70);
    v7 = v5;
    atomic_store(MEMORY[0x1C3BA8174](v4, v6, &v7), v1);
  }
  sub_1C0776784();
}

void sub_1C0CAD188(uint64_t a1)
{
  unint64_t *v1;
  uint64_t (*v2)(void);
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v6;
  uint64_t v7;

  if (!sub_1C0780FEC(a1))
  {
    v4 = v3;
    v5 = v2;
    v6 = sub_1C07D4BEC(&qword_1EF646B18);
    v7 = v5();
    atomic_store(MEMORY[0x1C3BA8174](v4, v6, &v7), v1);
  }
  sub_1C0776784();
}

unint64_t sub_1C0CAD1E0()
{
  unint64_t result;

  result = qword_1EF646B40;
  if (!qword_1EF646B40)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for AssetPerson, &type metadata for AssetPerson);
    atomic_store(result, (unint64_t *)&qword_1EF646B40);
  }
  return result;
}

uint64_t sub_1C0CAD21C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AssetPersonMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0CAD260(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AssetPersonMetadata(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0CAD29C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x64496E6F73726570 && a2 == 0xE800000000000000;
  if (v2 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x614E6E6F73726570 && a2 == 0xEA0000000000656DLL;
    if (v6 || (sub_1C1070CB4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x67416E6F73726570 && a2 == 0xE900000000000065)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1C1070CB4();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1C0CAD400(char a1)
{
  if (!a1)
    return 0x64496E6F73726570;
  if (a1 == 1)
    return 0x614E6E6F73726570;
  return 0x67416E6F73726570;
}

void sub_1C0CAD460(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  AssetPersonMetadata.init(from:)(a1, a2);
}

uint64_t sub_1C0CAD474(_QWORD *a1)
{
  return AssetPersonMetadata.encode(to:)(a1);
}

uint64_t sub_1C0CAD488()
{
  char *v0;

  return sub_1C0CAD400(*v0);
}

uint64_t sub_1C0CAD490@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0CAD29C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0CAD4B4()
{
  sub_1C0CAD680();
  return sub_1C1070EE8();
}

uint64_t sub_1C0CAD4DC()
{
  sub_1C0CAD680();
  return sub_1C1070EF4();
}

void AssetPerson.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_1C07ACF80(&qword_1EF646B48);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1C0778544();
  sub_1C07A9480(a1, a1[3]);
  sub_1C0CAD680();
  sub_1C1070EB8();
  sub_1C1070B7C();
  if (!v5)
  {
    sub_1C1070B34();
    type metadata accessor for PHPersonAgeType(0);
    sub_1C0CAD108((uint64_t)&unk_1EF646C10);
    sub_1C1070B64();
  }
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  sub_1C07757D0();
}

unint64_t sub_1C0CAD680()
{
  unint64_t result;

  result = qword_1EF646B50;
  if (!qword_1EF646B50)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B2718, &type metadata for AssetPerson.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF646B50);
  }
  return result;
}

void AssetPerson.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int16 v14;
  char v15;

  v5 = sub_1C07ACF80(&qword_1EF646B58);
  MEMORY[0x1E0C80A78](v5);
  sub_1C07795DC();
  sub_1C07A9480(a1, a1[3]);
  sub_1C0CAD680();
  sub_1C1070E94();
  if (v2)
  {
    sub_1C0775880();
  }
  else
  {
    v6 = sub_1C1070AA4();
    v8 = v7;
    v13 = v6;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v9 = sub_1C1070A5C();
    v11 = v10;
    v12 = v9;
    type metadata accessor for PHPersonAgeType(0);
    sub_1C0CAD108((uint64_t)&unk_1EF6405F0);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C1070A8C();
    sub_1C079B434();
    *(_QWORD *)a2 = v13;
    *(_QWORD *)(a2 + 8) = v8;
    *(_QWORD *)(a2 + 16) = v12;
    *(_QWORD *)(a2 + 24) = v11;
    *(_WORD *)(a2 + 32) = v14;
    *(_BYTE *)(a2 + 34) = v15;
    sub_1C0775880();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1C07757D0();
}

void sub_1C0CAD8B0(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  AssetPerson.init(from:)(a1, a2);
}

void sub_1C0CAD8C4(_QWORD *a1)
{
  AssetPerson.encode(to:)(a1);
}

uint64_t sub_1C0CAD8D8()
{
  uint64_t v1;
  _BYTE v2[24];
  uint64_t v3;

  sub_1C106ECB0();
  if (v3)
  {
    sub_1C07D4B70(0, &qword_1ED744828);
    if (swift_dynamicCast())
      return v1;
    else
      return 0;
  }
  else
  {
    sub_1C0784B6C((uint64_t)v2, &qword_1ED760400);
    return 0;
  }
}

void sub_1C0CAD95C(uint64_t *a1@<X8>)
{
  *a1 = sub_1C0CAD8D8();
  sub_1C0778534();
}

uint64_t sub_1C0CAD97C(void *a1)
{
  id v1;

  v1 = a1;
  return sub_1C106ECC8();
}

void sub_1C0CAD9A0()
{
  void **v0;
  id v1;

  v1 = *v0;
  sub_1C0CAD97C(*v0);

}

void sub_1C0CAD9C8()
{
  void **v0;

  sub_1C0F0E738(*v0);
}

uint64_t sub_1C0CAD9D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  return sub_1C0F0E9E4(a1, a2, a3, *v3);
}

uint64_t sub_1C0CAD9D8(__int16 a1)
{
  uint64_t result;

  switch(a1)
  {
    case 1:
      result = 2036490562;
      break;
    case 2:
      result = 0x646C696843;
      break;
    case 3:
      result = 0x756441676E756F59;
      break;
    case 4:
      result = 0x726F696E6553;
      break;
    case 5:
      result = 0x746C756441;
      break;
    default:
      result = 0x746553746F4ELL;
      break;
  }
  return result;
}

uint64_t sub_1C0CADA7C()
{
  sub_1C0CAD108((uint64_t)&unk_1EF646B98);
  return sub_1C106FEBC();
}

uint64_t sub_1C0CADAF0()
{
  sub_1C0CAD108((uint64_t)&unk_1EF646B98);
  return sub_1C106FE80();
}

uint64_t *initializeBufferWithCopyOfBuffer for AssetPersonMetadata(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1C106ADE0();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v12(v9, v10, v11);
    v13 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)v4 + v13) = *(uint64_t *)((char *)a2 + v13);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  return v4;
}

uint64_t destroy for AssetPersonMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1C106ADE0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for AssetPersonMetadata(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1C106ADE0();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v11(v8, v9, v10);
  v12 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v12) = *(_QWORD *)((char *)a2 + v12);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

_QWORD *assignWithCopy for AssetPersonMetadata(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C106ADE0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for AssetPersonMetadata(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C106ADE0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v10) = *(_QWORD *)((char *)a2 + v10);
  return a1;
}

_QWORD *assignWithTake for AssetPersonMetadata(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1C106ADE0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AssetPersonMetadata()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0CADF0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1C077AE98();
    return sub_1C07B2D80(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for AssetPersonMetadata()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0CADF88(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1C077AE98();
    return sub_1C07B2D8C(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1C0CADFF0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C106ADE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t initializeWithCopy for AssetPerson(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

uint64_t assignWithCopy for AssetPerson(uint64_t a1, uint64_t a2)
{
  __int16 v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  v4 = *(_WORD *)(a2 + 32);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  *(_WORD *)(a1 + 32) = v4;
  return a1;
}

__n128 initializeWithTake for AssetPerson(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 31) = *(_DWORD *)(a2 + 31);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for AssetPerson(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  return a1;
}

uint64_t getEnumTagSinglePayload for AssetPerson(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 35))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AssetPerson(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 34) = 0;
    *(_WORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 35) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 35) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for AssetPerson()
{
  sub_1C0779604();
}

uint64_t sub_1C0CAE238(uint64_t result)
{
  if ((unsigned __int16)result - 1 >= 5)
    return 0;
  else
    return (unsigned __int16)result;
}

void sub_1C0CAE24C(uint64_t a1)
{
  uint64_t v1;
  id v2;
  id v3;

  v2 = objc_msgSend((id)objc_opt_self(), sel_fetchPersonWithFace_options_, v1, a1);
  v3 = objc_msgSend(v2, sel_firstObject);

  sub_1C0778534();
}

uint64_t sub_1C0CAE2B0@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  _QWORD *v16;
  void *v17;
  id v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(uint64_t, char *, uint64_t);
  int v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  _QWORD aBlock[6];

  v4 = v2;
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  sub_1C07795DC();
  v8 = sub_1C077AE98();
  v36 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v32 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v35 = (char *)&v32 - v11;
  v12 = sub_1C0780678();
  v13 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v12 + 16) = MEMORY[0x1E0DEE9D8];
  v38 = v12 + 16;
  v14 = sub_1C0780678();
  *(_QWORD *)(v14 + 16) = v13;
  v34 = v14 + 16;
  v15 = objc_msgSend((id)objc_opt_self(), sel_fetchFacesInAsset_options_, v4, a1);
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a1;
  v16[3] = v12;
  v16[4] = v14;
  aBlock[4] = sub_1C0CB07B4;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C0CAECC8;
  aBlock[3] = &unk_1E7A295D0;
  v17 = _Block_copy(aBlock);
  v18 = a1;
  swift_retain();
  swift_retain();
  swift_release();
  v37 = v15;
  objc_msgSend(v15, sel_enumerateObjectsUsingBlock_, v17);
  _Block_release(v17);
  result = sub_1C080AD1C(v4, (SEL *)&selRef_uuid);
  if (v20)
  {
    v21 = v20;
    v33 = result;
    v22 = objc_msgSend(v4, sel_creationDate);
    if (v22)
    {
      v23 = v22;
      v24 = v32;
      sub_1C106AD98();

      v25 = v36;
      v26 = *(void (**)(uint64_t, char *, uint64_t))(v36 + 32);
      v26(v3, v24, v8);
      sub_1C078AF64(v3, 0);
      v27 = sub_1C07B2D80(v3, 1, v8);
      v28 = v35;
      if (v27 != 1)
      {

        v26((uint64_t)v28, (char *)v3, v8);
LABEL_7:
        sub_1C0775864();
        v29 = *(_QWORD *)(v12 + 16);
        sub_1C0775864();
        v30 = *(_QWORD *)(v14 + 16);
        *(_QWORD *)a2 = v33;
        *((_QWORD *)a2 + 1) = v21;
        v31 = (int *)type metadata accessor for AssetPersonMetadata(0);
        (*(void (**)(char *, char *, uint64_t))(v25 + 32))(&a2[v31[5]], v28, v8);
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        swift_release();
        result = swift_release();
        *(_QWORD *)&a2[v31[6]] = v29;
        *(_QWORD *)&a2[v31[7]] = v30;
        return result;
      }
    }
    else
    {
      sub_1C078AF64(v3, 1);
      v28 = v35;
      v25 = v36;
    }
    sub_1C106AC9C();

    sub_1C0784B6C(v3, (uint64_t *)&unk_1ED762690);
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

void sub_1C0CAE5E0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *v8;
  uint64_t *v9;
  void *v10;

  v8 = (uint64_t *)(a5 + 16);
  v9 = (uint64_t *)(a6 + 16);
  v10 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C0CAE644(a1, a4, v8, v9);
  objc_autoreleasePoolPop(v10);
}

void sub_1C0CAE644(id a1, uint64_t a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63[3];
  uint64_t v64;

  v9 = sub_1C106F544();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0CAE24C(a2);
  if (!v13)
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v23 = sub_1C079E000(v9, (uint64_t)qword_1ED762AF8);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v23, v9);
    a1 = a1;
    v24 = sub_1C106F538();
    v25 = sub_1C1070390();
    if (!os_log_type_enabled(v24, v25))
    {

      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      return;
    }
    v61 = v9;
    v62 = v4;
    v26 = (uint8_t *)swift_slowAlloc();
    v27 = swift_slowAlloc();
    v63[0] = v27;
    *(_DWORD *)v26 = 136315138;
    v28 = sub_1C080AD1C(a1, (SEL *)&selRef_uuid);
    if (v29)
    {
      v64 = sub_1C0788DAC(v28, v29, v63);
      sub_1C10705AC();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C0771000, v24, v25, "PhotosMetadataFetcher: Could not fetch person for face: %s", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v27, -1, -1);
      MEMORY[0x1C3BA8270](v26, -1, -1);

      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v61);
      return;
    }
    goto LABEL_18;
  }
  v14 = v13;
  v61 = v9;
  v62 = v4;
  v15 = sub_1C080AD1C(a1, (SEL *)&selRef_uuid);
  if (!v16)
  {
    __break(1u);
LABEL_18:

    __break(1u);
    return;
  }
  v17 = v15;
  v18 = v16;
  swift_beginAccess();
  sub_1C07E9DB0();
  v19 = *(_QWORD *)(*a3 + 16);
  sub_1C07EA490();
  v20 = *a3;
  *(_QWORD *)(v20 + 16) = v19 + 1;
  v21 = v20 + 16 * v19;
  *(_QWORD *)(v21 + 32) = v17;
  *(_QWORD *)(v21 + 40) = v18;
  swift_endAccess();
  if (objc_msgSend(v14, sel_ageType))
    v22 = objc_msgSend(v14, sel_ageType);
  else
    v22 = sub_1C0CAE238((uint64_t)objc_msgSend(a1, sel_ageType));
  HIDWORD(v60) = v22;
  v30 = objc_msgSend(v14, sel_localIdentifier);
  v31 = sub_1C106FB14();
  v33 = v32;

  v34 = sub_1C080AD1C(v14, (SEL *)&selRef_name);
  v36 = v35;
  swift_beginAccess();
  sub_1C07EA31C();
  v37 = *(_QWORD *)(*a4 + 16);
  sub_1C07EAA18();
  v38 = *a4;
  *(_QWORD *)(v38 + 16) = v37 + 1;
  v39 = v38 + 40 * v37;
  *(_QWORD *)(v39 + 32) = v31;
  *(_QWORD *)(v39 + 40) = v33;
  *(_QWORD *)(v39 + 48) = v34;
  *(_QWORD *)(v39 + 56) = v36;
  *(_WORD *)(v39 + 64) = WORD2(v60);
  *(_BYTE *)(v39 + 66) = 0;
  swift_endAccess();
  if (qword_1ED762B18 != -1)
    swift_once();
  sub_1C079E000(v61, (uint64_t)qword_1ED762AF8);
  v40 = v14;
  v41 = a1;
  v42 = v40;
  v43 = v41;
  v44 = v42;
  v45 = sub_1C106F538();
  v46 = sub_1C1070384();
  if (os_log_type_enabled(v45, v46))
  {
    v47 = swift_slowAlloc();
    v61 = swift_slowAlloc();
    v64 = v61;
    *(_DWORD *)v47 = 136315906;
    v48 = objc_msgSend(v44, sel_localIdentifier);
    v49 = sub_1C106FB14();
    v51 = v50;

    v63[0] = sub_1C0788DAC(v49, v51, &v64);
    sub_1C10705AC();

    swift_bridgeObjectRelease();
    *(_WORD *)(v47 + 12) = 2080;
    v63[0] = sub_1C080AD1C(v44, (SEL *)&selRef_name);
    v63[1] = v52;
    sub_1C07ACF80(&qword_1ED762B50);
    v53 = sub_1C106FB5C();
    v63[0] = sub_1C0788DAC(v53, v54, &v64);
    sub_1C10705AC();

    swift_bridgeObjectRelease();
    *(_WORD *)(v47 + 22) = 2080;
    LOWORD(v63[0]) = (unsigned __int16)objc_msgSend(v44, sel_ageType);
    type metadata accessor for PHPersonAgeType(0);
    v55 = sub_1C106FB5C();
    v63[0] = sub_1C0788DAC(v55, v56, &v64);
    sub_1C10705AC();

    swift_bridgeObjectRelease();
    *(_WORD *)(v47 + 32) = 2080;
    LOWORD(v63[0]) = (unsigned __int16)objc_msgSend(v43, sel_ageType);
    type metadata accessor for PHFaceAgeType(0);
    v57 = sub_1C106FB5C();
    v63[0] = sub_1C0788DAC(v57, v58, &v64);
    sub_1C10705AC();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0771000, v45, v46, "PhotosMetadataFetcher: PersonID: %s, Person name: %s, PersonAgeType: %s, FaceAgeType: %s", (uint8_t *)v47, 0x2Au);
    v59 = v61;
    swift_arrayDestroy();
    MEMORY[0x1C3BA8270](v59, -1, -1);
    MEMORY[0x1C3BA8270](v47, -1, -1);

  }
  else
  {

  }
}

void sub_1C0CAECC8(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t sub_1C0CAED34@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  NSObject *v19;
  NSObject *v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  int v28;
  BOOL v29;
  uint8_t *v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  void *v39;
  NSObject *v40;
  unint64_t v41;
  unint64_t v42;
  id v43;
  uint64_t v44;
  NSObject *v45;
  NSObject *v46;
  id v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v54;
  uint8_t *v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;

  v5 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v54 - v9;
  v11 = sub_1C106F544();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1C0CB07C0(a1);
  if (v15)
  {
    v16 = v15;
    v17 = objc_msgSend(a1, sel_localIdentifier);
    v18 = sub_1C106FB14();
    v20 = v19;

    v21 = objc_msgSend(a1, sel_creationDate);
    if (v21)
    {
      v22 = v21;
      sub_1C106AD98();

      v23 = sub_1C106ADE0();
      v24 = 0;
    }
    else
    {
      v23 = sub_1C106ADE0();
      v24 = 1;
    }
    sub_1C07B2D8C((uint64_t)v10, v24, 1, v23);
    v37 = sub_1C08A3718(v16);
    swift_bridgeObjectRelease();
    v38 = a2;
    v39 = (void *)v18;
    v40 = v20;
    v41 = (unint64_t)v10;
    v42 = v37;
  }
  else
  {
    sub_1C106F190();
    v25 = a1;
    v26 = sub_1C106F538();
    v27 = sub_1C10703A8();
    v28 = v27;
    v29 = os_log_type_enabled(v26, v27);
    v59 = v7;
    v60 = a2;
    if (v29)
    {
      v30 = (uint8_t *)swift_slowAlloc();
      v57 = swift_slowAlloc();
      v62 = v57;
      v56 = v28;
      *(_DWORD *)v30 = 136315138;
      v55 = v30;
      v31 = objc_msgSend(v25, sel_localIdentifier, v30 + 4);
      v32 = sub_1C106FB14();
      v58 = v2;
      v34 = v33;

      v61 = sub_1C0788DAC(v32, v34, &v62);
      sub_1C10705AC();

      swift_bridgeObjectRelease();
      v35 = v55;
      _os_log_impl(&dword_1C0771000, v26, (os_log_type_t)v56, "Couldn't fetch sceneClassifications from asset with ID: %s", v55, 0xCu);
      v36 = v57;
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v36, -1, -1);
      MEMORY[0x1C3BA8270](v35, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    v43 = objc_msgSend(v25, sel_localIdentifier);
    v44 = sub_1C106FB14();
    v46 = v45;

    v47 = objc_msgSend(v25, sel_creationDate);
    if (v47)
    {
      v48 = v47;
      v49 = (uint64_t)v59;
      sub_1C106AD98();

      v50 = 0;
    }
    else
    {
      v50 = 1;
      v49 = (uint64_t)v59;
    }
    v51 = v60;
    v52 = sub_1C106ADE0();
    sub_1C07B2D8C(v49, v50, 1, v52);
    v42 = MEMORY[0x1E0DEE9D8];
    v38 = v51;
    v39 = (void *)v44;
    v40 = v46;
    v41 = v49;
  }
  return sub_1C0CB2D98(v39, v40, v41, v42, v38);
}

uint64_t sub_1C0CAF0EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  char v6;
  uint64_t v7;
  char v10;
  char v11;
  void *v12;
  uint64_t v14;

  sub_1C0793268();
  v11 = v10 & 1;
  v12 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C0CAF170(a5, v6, v7, a6, v11, &v14);
  objc_autoreleasePoolPop(v12);
  return v14;
}

void sub_1C0CAF170(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X4>, uint64_t a4@<X5>, char a5@<W6>, _QWORD *a6@<X8>)
{
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  id v21;

  v8 = objc_msgSend(a1, sel_librarySpecificFetchOptions);
  sub_1C07ACF80(&qword_1ED762CD0);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C10812D0;
  v10 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  *(_QWORD *)(v9 + 32) = sub_1C0F0F584(0x6E6F697461657263, 0xEC00000065746144, (a2 & 1) == 0);
  sub_1C106FF28();
  sub_1C0CB0860(v9, v8);
  sub_1C07D4B70(0, &qword_1ED758D18);
  sub_1C07ACF80(&qword_1ED744990);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C1078FC0;
  v12 = sub_1C106AD38();
  v13 = sub_1C07D4B70(0, &qword_1ED744818);
  *(_QWORD *)(v11 + 56) = v13;
  sub_1C0CB08D0((uint64_t)&unk_1ED744820);
  v15 = v14;
  *(_QWORD *)(v11 + 64) = v14;
  *(_QWORD *)(v11 + 32) = v12;
  v16 = sub_1C106AD38();
  *(_QWORD *)(v11 + 96) = v13;
  *(_QWORD *)(v11 + 104) = v15;
  *(_QWORD *)(v11 + 72) = v16;
  v17 = (void *)sub_1C1070348();
  objc_msgSend(v8, sel_setPredicate_, v17);

  objc_msgSend(v8, sel_setFetchLimit_, a3);
  objc_msgSend(v8, sel_setExcludeScreenshotAssets_, 1);
  v18 = (void *)objc_opt_self();
  v19 = objc_msgSend(v18, sel_fetchAssetsWithOptions_, v8);
  if ((a5 & 1) == 0)
  {
    v20 = v8;
    v21 = objc_msgSend(v18, sel_fetchAssetsWithMediaType_options_, a4, v20);

    v8 = v19;
    v19 = v21;
  }

  *a6 = v19;
}

uint64_t sub_1C0CAF3F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t result;

  sub_1C0793268();
  v5 = v4;
  sub_1C07815A8();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0776794();
  sub_1C07D4B70(0, (unint64_t *)&unk_1ED758D80);
  v7 = objc_msgSend((id)objc_opt_self(), sel_systemPhotoLibraryURL);
  sub_1C106AAF8();

  v8 = sub_1C0CAC948();
  v9 = objc_msgSend(v8, sel_librarySpecificFetchOptions);
  objc_msgSend(v9, sel_setMinimumVerifiedFaceCount_, 0);
  objc_msgSend(v9, sel_setMinimumUnverifiedFaceCount_, 0);
  objc_msgSend(v9, sel_setIncludeTorsoAndFaceDetectionData_, 1);
  v10 = sub_1C0CAF0EC(v3, v2, v1, v0, v8, 0);

  result = sub_1C0780678();
  *(_QWORD *)(result + 16) = v9;
  *v5 = v10;
  v5[1] = (uint64_t)sub_1C0CB0754;
  v5[2] = result;
  return result;
}

uint64_t sub_1C0CAF540@<X0>(void *a1@<X1>, char *a2@<X8>)
{
  return sub_1C0CAE2B0(a1, a2);
}

double sub_1C0CAF564@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  void *v11;
  double result;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;

  v11 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C0CAF608(a1, a2, a3, a4, (uint64_t)&v14);
  objc_autoreleasePoolPop(v11);
  if (!v5)
  {
    v13 = v15;
    result = *(double *)&v14;
    *(_OWORD *)a5 = v14;
    *(_QWORD *)(a5 + 16) = v13;
  }
  return result;
}

uint64_t sub_1C0CAF608@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, int a4@<W4>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  os_log_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void (*isa)(char *, uint64_t);
  char *v48;
  uint64_t v49;
  _QWORD *v50;
  char *v51;
  uint64_t result;
  void (*v53)(char *, uint64_t, uint64_t);
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  void (*v60)(char *, uint64_t, uint64_t);
  char *v61;
  char v62;
  void (*v63)(char *, uint64_t);
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  NSObject *v68;
  os_log_type_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  os_log_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  char *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  NSObject *v84;
  os_log_type_t v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  int v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  _QWORD *v113;
  char *v114;
  os_log_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  char *v125;
  uint64_t v126;
  char *v127;

  v100 = a4;
  v101 = a3;
  v121 = a1;
  v122 = a2;
  v99 = a5;
  v5 = sub_1C106AFCC();
  v107 = *(_QWORD *)(v5 - 8);
  v108 = v5;
  MEMORY[0x1E0C80A78](v5);
  v106 = (char *)&v97 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C106AF48();
  v115 = *(os_log_t *)(v7 - 8);
  v116 = v7;
  MEMORY[0x1E0C80A78](v7);
  v114 = (char *)&v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C106AF60();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v97 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1C106AF24();
  v14 = *(_QWORD *)(v13 - 8);
  v109 = v13;
  v110 = v14;
  v15 = v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v97 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v18);
  v123 = (char *)&v97 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v111 = (char *)&v97 - v21;
  v22 = sub_1C106ADE0();
  v23 = *(_QWORD **)(v22 - 8);
  v112 = v22;
  v113 = v23;
  MEMORY[0x1E0C80A78](v22);
  v117 = (char *)&v97 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v102 = (char *)&v97 - v26;
  MEMORY[0x1E0C80A78](v27);
  v103 = (char *)&v97 - v28;
  MEMORY[0x1E0C80A78](v29);
  v98 = (char *)&v97 - v30;
  MEMORY[0x1E0C80A78](v31);
  v118 = (char *)&v97 - v32;
  MEMORY[0x1E0C80A78](v33);
  v119 = (char *)&v97 - v34;
  MEMORY[0x1E0C80A78](v35);
  v124 = (char *)&v97 - v36;
  MEMORY[0x1E0C80A78](v37);
  v120 = (char *)&v97 - v38;
  v105 = sub_1C106AFE4();
  v104 = *(_QWORD *)(v105 - 8);
  MEMORY[0x1E0C80A78](v105);
  v40 = (char *)&v97 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106AFC0();
  sub_1C106ADA4();
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E0CB0F90], v13);
  v41 = v10;
  v42 = v9;
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0CB1010], v9);
  v44 = v114;
  v43 = v115;
  v45 = v116;
  ((void (*)(char *, _QWORD, uint64_t))v115[13].isa)(v114, *MEMORY[0x1E0CB0FD8], v116);
  v46 = (uint64_t)v111;
  v125 = v40;
  sub_1C106AF78();
  isa = (void (*)(char *, uint64_t))v43[1].isa;
  v48 = v44;
  v49 = v112;
  v50 = v113;
  isa(v48, v45);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v12, v42);
  (*(void (**)(char *, uint64_t))(v110 + 8))(v17, v109);
  v51 = v124;
  v124 = (char *)v50[1];
  ((void (*)(char *, uint64_t))v124)(v51, v49);
  result = sub_1C07B2D80(v46, 1, v49);
  if ((_DWORD)result == 1)
  {
    __break(1u);
    goto LABEL_19;
  }
  v53 = (void (*)(char *, uint64_t, uint64_t))v50[4];
  v54 = v120;
  v53(v120, v46, v49);
  v56 = v106;
  v55 = v107;
  v57 = v108;
  (*(void (**)(char *, _QWORD, uint64_t))(v107 + 104))(v106, *MEMORY[0x1E0CB1130], v108);
  v58 = (uint64_t)v123;
  sub_1C106AF9C();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v57);
  result = sub_1C07B2D80(v58, 1, v49);
  if ((_DWORD)result == 1)
  {
LABEL_19:
    __break(1u);
    return result;
  }
  v59 = v119;
  v53(v119, (uint64_t)v123, v49);
  v60 = (void (*)(char *, uint64_t, uint64_t))v50[2];
  v61 = v118;
  v60(v118, v121, v49);
  v62 = sub_1C106AD50();
  v63 = (void (*)(char *, uint64_t))v124;
  v64 = v125;
  if ((v62 & 1) != 0)
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v65 = sub_1C106F544();
    sub_1C079E000(v65, (uint64_t)qword_1ED762AF8);
    v66 = v98;
    v60(v98, v121, v49);
    v67 = v103;
    v60(v103, (uint64_t)v59, v49);
    v68 = sub_1C106F538();
    v69 = sub_1C1070390();
    LODWORD(v123) = v69;
    if (os_log_type_enabled(v68, v69))
    {
      v70 = swift_slowAlloc();
      v116 = swift_slowAlloc();
      v127 = (char *)v116;
      *(_DWORD *)v70 = 136315394;
      v114 = (char *)(v70 + 4);
      sub_1C0CAD108((uint64_t)&qword_1ED7565B0);
      v115 = v68;
      v71 = sub_1C1070C0C();
      v126 = sub_1C0788DAC(v71, v72, (uint64_t *)&v127);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      v63(v66, v49);
      *(_WORD *)(v70 + 12) = 2080;
      v54 = v120;
      v73 = sub_1C1070C0C();
      v126 = sub_1C0788DAC(v73, v74, (uint64_t *)&v127);
      v64 = v125;
      v61 = v118;
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      v63(v103, v49);
      v75 = v115;
      _os_log_impl(&dword_1C0771000, v115, (os_log_type_t)v123, "SupportedDate Range is 28 days. Resetting startDate: %s to %s", (uint8_t *)v70, 0x16u);
      v76 = v116;
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v76, -1, -1);
      v77 = v70;
      v59 = v119;
      MEMORY[0x1C3BA8270](v77, -1, -1);

      v63(v61, v49);
    }
    else
    {

      v63(v67, v49);
      v63(v66, v49);
      v63(v61, v49);
      v64 = v125;
    }
    v60(v61, (uint64_t)v59, v49);
  }
  v78 = sub_1C106AD50();
  v79 = v117;
  if ((v78 & 1) != 0)
  {
    v80 = v54;
    if (qword_1ED762B18 != -1)
      swift_once();
    v81 = sub_1C106F544();
    sub_1C079E000(v81, (uint64_t)qword_1ED762AF8);
    v82 = v102;
    v60(v102, v122, v49);
    v60(v79, v121, v49);
    v83 = v79;
    v84 = sub_1C106F538();
    v85 = sub_1C1070390();
    v86 = v85;
    if (os_log_type_enabled(v84, v85))
    {
      v87 = swift_slowAlloc();
      v123 = (char *)swift_slowAlloc();
      v127 = v123;
      *(_DWORD *)v87 = 136315394;
      sub_1C0CAD108((uint64_t)&qword_1ED7565B0);
      LODWORD(v122) = v86;
      v88 = sub_1C1070C0C();
      v126 = sub_1C0788DAC(v88, v89, (uint64_t *)&v127);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      v63(v82, v49);
      *(_WORD *)(v87 + 12) = 2080;
      v90 = v117;
      v91 = v120;
      v92 = sub_1C1070C0C();
      v126 = sub_1C0788DAC(v92, v93, (uint64_t *)&v127);
      v94 = v125;
      v61 = v118;
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      v63(v90, v49);
      _os_log_impl(&dword_1C0771000, v84, (os_log_type_t)v122, "endDate: %s cannot be before startDate %s", (uint8_t *)v87, 0x16u);
      v95 = v123;
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v95, -1, -1);
      v96 = v87;
      v59 = v119;
      MEMORY[0x1C3BA8270](v96, -1, -1);

    }
    else
    {
      v63(v82, v49);
      v63(v83, v49);

      v91 = v80;
      v94 = v125;
    }
    sub_1C0CB06F4();
    swift_allocError();
    swift_willThrow();
    v63(v61, v49);
    v63(v59, v49);
    v63(v91, v49);
    return (*(uint64_t (**)(char *, uint64_t))(v104 + 8))(v94, v105);
  }
  else
  {
    sub_1C0CAF3F8();
    v63(v61, v49);
    v63(v59, v49);
    v63(v54, v49);
    return (*(uint64_t (**)(char *, uint64_t))(v104 + 8))(v64, v105);
  }
}

double sub_1C0CB007C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  double result;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  result = sub_1C0CAF564(a1, a2, a3, a4, (uint64_t)&v9);
  if (!v5)
  {
    v8 = v10;
    result = *(double *)&v9;
    *(_OWORD *)a5 = v9;
    *(_QWORD *)(a5 + 16) = v8;
    *(_QWORD *)(a5 + 24) = sub_1C0CB00C8;
    *(_QWORD *)(a5 + 32) = 0;
  }
  return result;
}

uint64_t sub_1C0CB00C8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12[4];
  _BYTE v13[16];

  v4 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for AssetPersonMetadata(0) + 28));
  v12[2] = a1;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C082A150((uint64_t)sub_1C0CB0900, (uint64_t)v12, v4, (uint64_t)v13, v5, v6, v7, v8, v12[0], v12[1]);
  v10 = v9;
  result = swift_bridgeObjectRelease();
  *a2 = v10;
  return result;
}

uint64_t sub_1C0CB0140@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int16 v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v5 = *a1;
  v4 = a1[1];
  v7 = a1[2];
  v6 = a1[3];
  v8 = *((_WORD *)a1 + 16);
  v9 = *((_BYTE *)a1 + 34);
  v10 = a2 + *(int *)(type metadata accessor for AssetPersonMetadata(0) + 20);
  v11 = sub_1C106ADE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a3, v10, v11);
  v12 = (int *)type metadata accessor for PhotosPersonObservation(0);
  v13 = (_QWORD *)(a3 + v12[5]);
  *v13 = v5;
  v13[1] = v4;
  v14 = (_QWORD *)(a3 + v12[6]);
  *v14 = v7;
  v14[1] = v6;
  v15 = a3 + v12[7];
  *(_WORD *)v15 = v8;
  *(_BYTE *)(v15 + 2) = v9;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

void sub_1C0CB0208(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1C07815A8();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v4);
  sub_1C0776794();
  sub_1C07D4B70(0, (unint64_t *)&unk_1ED758D80);
  v5 = objc_msgSend((id)objc_opt_self(), sel_systemPhotoLibraryURL);
  sub_1C106AAF8();

  v6 = sub_1C0CAC948();
  v7 = sub_1C07ACF80(&qword_1ED75D0B8);
  v8 = sub_1C0CAF0EC(a1, a1 + *(int *)(v7 + 36), 0, 0, v6, 1);
  a2[3] = sub_1C07ACF80(&qword_1EF646BA0);
  sub_1C0CB0C34((uint64_t)&unk_1EF646BA8);
  a2[4] = v9;

  *a2 = v8;
  a2[1] = (uint64_t)sub_1C0CB0328;
  a2[2] = 0;
}

void sub_1C0CB0328(void **a1@<X0>, _QWORD *a2@<X8>)
{
  void *v3;
  void *v4;

  v3 = *a1;
  v4 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C0CAED34(v3, a2);
  objc_autoreleasePoolPop(v4);
}

uint64_t type metadata accessor for PhotosMetadataFetcher()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for AssetPerson.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C0CB03E0 + 4 * byte_1C10B22F2[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C0CB0414 + 4 * byte_1C10B22ED[v4]))();
}

uint64_t sub_1C0CB0414(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0CB041C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0CB0424);
  return result;
}

uint64_t sub_1C0CB0430(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0CB0438);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C0CB043C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0CB0444(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AssetPerson.CodingKeys()
{
  return &type metadata for AssetPerson.CodingKeys;
}

uint64_t sub_1C0CB0460(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1C0CB04AC + 4 * byte_1C10B22FC[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1C0CB04E0 + 4 * byte_1C10B22F7[v4]))();
}

uint64_t sub_1C0CB04E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0CB04E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0CB04F0);
  return result;
}

uint64_t sub_1C0CB04FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0CB0504);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1C0CB0508(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0CB0510(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for AssetPersonMetadata.CodingKeys()
{
  sub_1C0779604();
}

void type metadata accessor for PhotosMetadataSequence()
{
  sub_1C0779604();
}

void sub_1C0CB0534()
{
  sub_1C0CAD108((uint64_t)&unk_1ED744410);
}

uint64_t type metadata accessor for PhotosMetadataSequence.Iterator(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1ED744418);
}

unint64_t sub_1C0CB0578()
{
  unint64_t result;

  result = qword_1EF646B60;
  if (!qword_1EF646B60)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B2628, &unk_1E7A294E8);
    atomic_store(result, (unint64_t *)&qword_1EF646B60);
  }
  return result;
}

unint64_t sub_1C0CB05B8()
{
  unint64_t result;

  result = qword_1EF646B68;
  if (!qword_1EF646B68)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B26E0, &type metadata for AssetPerson.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF646B68);
  }
  return result;
}

unint64_t sub_1C0CB05F8()
{
  unint64_t result;

  result = qword_1EF646B70;
  if (!qword_1EF646B70)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B2650, &type metadata for AssetPerson.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF646B70);
  }
  return result;
}

unint64_t sub_1C0CB0638()
{
  unint64_t result;

  result = qword_1EF646B78;
  if (!qword_1EF646B78)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B2678, &type metadata for AssetPerson.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF646B78);
  }
  return result;
}

unint64_t sub_1C0CB0678()
{
  unint64_t result;

  result = qword_1EF646B80;
  if (!qword_1EF646B80)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B2560, &unk_1E7A294E8);
    atomic_store(result, (unint64_t *)&qword_1EF646B80);
  }
  return result;
}

unint64_t sub_1C0CB06B8()
{
  unint64_t result;

  result = qword_1EF646B88;
  if (!qword_1EF646B88)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B2588, &unk_1E7A294E8);
    atomic_store(result, (unint64_t *)&qword_1EF646B88);
  }
  return result;
}

unint64_t sub_1C0CB06F4()
{
  unint64_t result;

  result = qword_1EF646B90;
  if (!qword_1EF646B90)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B284C, &unk_1E7A29678);
    atomic_store(result, (unint64_t *)&qword_1EF646B90);
  }
  return result;
}

uint64_t sub_1C0CB0730()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1C0CB0754@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_1C0CAF540(*(void **)(v1 + 16), a1);
}

uint64_t sub_1C0CB075C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0CB0780()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1C0CB07B4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  sub_1C0CAE5E0(a1, a2, a3, v3[2], v3[3], v3[4]);
}

uint64_t sub_1C0CB07C0(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_sceneClassifications);
  if (!v1)
    return 0;
  v2 = v1;
  sub_1C07D4B70(0, &qword_1EF633250);
  sub_1C0CB08D0((uint64_t)&unk_1EF633258);
  v3 = sub_1C107021C();

  return v3;
}

void sub_1C0CB0860(uint64_t a1, void *a2)
{
  id v3;

  sub_1C07D4B70(0, &qword_1ED758D98);
  v3 = (id)sub_1C106FEEC();
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_setSortDescriptors_, v3);

}

void sub_1C0CB08D0(uint64_t a1)
{
  unint64_t *v1;

  if (!sub_1C0780FEC(a1))
  {
    sub_1C07D4B70(255, v1);
    sub_1C077D8A0();
  }
  sub_1C0778534();
}

uint64_t sub_1C0CB0900@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1C0CB0140(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1C0CB091C(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1C0CB095C + 4 * byte_1C10B2301[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1C0CB097C + 4 * byte_1C10B2306[v4]))();
}

_BYTE *sub_1C0CB095C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1C0CB097C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C0CB0984(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C0CB098C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C0CB0994(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C0CB099C(_DWORD *result)
{
  *result = 0;
  return result;
}

void type metadata accessor for PhotosMetadataFetcher.PhotosMetadataFetcherError()
{
  sub_1C0779604();
}

uint64_t sub_1C0CB09B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C106ECBC();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_1C0CB09F0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C106ECBC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1C0CB0A24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C106ECBC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1C0CB0A68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C106ECBC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1C0CB0AAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C106ECBC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1C0CB0AF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C106ECBC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1C0CB0B34()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0CB0B40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1C07976D0();
  return sub_1C07B2D80(v1, v0, v2);
}

uint64_t sub_1C0CB0B68()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0CB0B74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1C07976D0();
  return sub_1C07B2D8C(v1, v0, v0, v2);
}

uint64_t sub_1C0CB0BA0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C106ECBC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1C0CB0C08()
{
  sub_1C0CB0C34((uint64_t)&unk_1ED744840);
}

void sub_1C0CB0C34(uint64_t a1)
{
  uint64_t *v1;

  if (!sub_1C0780FEC(a1))
  {
    sub_1C07D4BEC(v1);
    sub_1C077D8A0();
  }
  sub_1C0778534();
}

unint64_t sub_1C0CB0C68()
{
  unint64_t result;

  result = qword_1EF646BD8;
  if (!qword_1EF646BD8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B2824, &unk_1E7A29678);
    atomic_store(result, &qword_1EF646BD8);
  }
  return result;
}

uint64_t sub_1C0CB0CA8(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v2;
  type metadata accessor for Fuser();
  *(_QWORD *)(v3 + 32) = sub_1C0779D74();
  type metadata accessor for Linker();
  *(_QWORD *)(v3 + 40) = sub_1C0779D74();
  sub_1C07ACF80(&qword_1ED762590);
  *(_QWORD *)(v3 + 48) = sub_1C0779D74();
  sub_1C07ACF80(&qword_1ED759C40);
  *(_QWORD *)(v3 + 56) = sub_1C0779D74();
  *(_QWORD *)(v3 + 64) = type metadata accessor for PHPersonSourceIngestor();
  *(_QWORD *)(v3 + 72) = sub_1C0786414();
  *(_QWORD *)(v3 + 80) = sub_1C0775870();
  *(_QWORD *)(v3 + 88) = sub_1C0775870();
  *(_QWORD *)(v3 + 96) = type metadata accessor for Source();
  *(_QWORD *)(v3 + 104) = sub_1C0786414();
  *(_QWORD *)(v3 + 112) = sub_1C0775870();
  type metadata accessor for PhaseStores();
  *(_QWORD *)(v3 + 120) = sub_1C0786414();
  *(_QWORD *)(v3 + 128) = sub_1C0775870();
  *(_QWORD *)(v3 + 136) = sub_1C0775870();
  *(_BYTE *)(v3 + 161) = *a2;
  return swift_task_switch();
}

uint64_t sub_1C0CB0D94()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  sub_1C0893744(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 136), (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  if (qword_1ED7623A8 != -1)
    swift_once();
  v1 = *(_BYTE *)(v0 + 161);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 48);
  v7 = *(_QWORD *)(v0 + 16);
  v8 = sub_1C079E000(*(_QWORD *)(v0 + 96), (uint64_t)&unk_1ED762388);
  *(_QWORD *)(v0 + 144) = v8;
  sub_1C0893744(v8, v3, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0893744(v7, v2, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C0893744(v8, v4 + *(int *)(v5 + 20), (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0893744(v2, v4, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  *(_BYTE *)(v4 + *(int *)(v5 + 24)) = v1;
  v9 = sub_1C106AEF4();
  sub_1C07B2D8C(v6, 1, 1, v9);
  sub_1C106E620();
  v10 = *(_QWORD *)(v0 + 120);
  v11 = *(_QWORD *)(v0 + 104);
  v13 = *(_QWORD *)(v0 + 80);
  v12 = *(_QWORD *)(v0 + 88);
  v14 = *(_QWORD *)(v0 + 56);
  v15 = *(_QWORD *)(v0 + 64);
  v16 = *(_QWORD *)(v0 + 16);
  sub_1C07B1FDC(*(_QWORD *)(v0 + 128), (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  v17 = sub_1C106E638();
  sub_1C07B2D8C(v14, 0, 1, v17);
  sub_1C0ACDE0C(v14, v13 + *(int *)(v15 + 28));
  sub_1C0CB11E4(v13, v12);
  sub_1C0893744(v8, v11, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0893744(v16, v10, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  *(_BYTE *)(v0 + 160) = 1;
  v18 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v18;
  *v18 = v0;
  v18[1] = sub_1C0CB0FB0;
  return Linker.init(source:stores:pipelineType:)(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 120), (_BYTE *)(v0 + 160));
}

uint64_t sub_1C0CB0FB0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1C0CB1004()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 32);
  v10 = *(_QWORD *)(v0 + 112);
  v11 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 16);
  sub_1C0893744(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 104), (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0893744(v7, v2, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  Fuser.init(source:stores:pipelineType:)();
  sub_1C07B1FDC(v7, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C0893744(v3, v4, (uint64_t (*)(_QWORD))type metadata accessor for PHPersonSourceIngestor);
  sub_1C0A5BCD4(v1, v10, v4, v5, v6, 1, v11);
  v12 = v8;
  sub_1C07B1FDC(v3, (uint64_t (*)(_QWORD))type metadata accessor for PHPersonSourceIngestor);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v12);
}

void sub_1C0CB1178()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1C0CB11A4()
{
  return type metadata accessor for PhotosPersonPhase();
}

uint64_t type metadata accessor for PhotosPersonPhase()
{
  uint64_t result;

  result = qword_1ED750AB8;
  if (!qword_1ED750AB8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C0CB11E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PHPersonSourceIngestor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0CB1228(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v8;
  void *v10;
  __int128 v11;
  void (*v12)(uint64_t@<X0>, _QWORD *@<X8>);
  uint64_t v13;

  type metadata accessor for PhotosMetadataFetcher();
  swift_initStackObject();
  sub_1C0CB007C(a1, a2, a3, a4, (uint64_t)&v11);
  v10 = (void *)v11;
  v12 = sub_1C0CB2410;
  v13 = 0;
  sub_1C07ACF80(&qword_1EF646C90);
  sub_1C0CB2CF8();
  v8 = sub_1C106FDB4();
  swift_release();
  swift_release();

  return v8;
}

uint64_t PhotosPersonObservation.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C1070774();
  sub_1C106FC94();
  v1 = sub_1C07A4B04();
  sub_1C07ACF80(&qword_1EF646BF0);
  sub_1C106FB5C();
  sub_1C078F17C();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  sub_1C077AE98();
  sub_1C07803B8((unint64_t *)&qword_1ED7565B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
  sub_1C1070C0C();
  sub_1C078F17C();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C07ACF80(&qword_1ED762B50);
  sub_1C079E7CC();
  sub_1C078F17C();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  v2 = v0 + *(int *)(v1 + 28);
  if ((*(_BYTE *)(v2 + 2) & 1) == 0)
    sub_1C0CAD9D8(*(_WORD *)v2);
  sub_1C079E7CC();
  sub_1C078F17C();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  return 0;
}

uint64_t sub_1C0CB1694(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070;
  if (v2 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
    if (v6 || (sub_1C1070CB4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 1701667182 && a2 == 0xE400000000000000;
      if (v7 || (sub_1C1070CB4() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 6645601 && a2 == 0xE300000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_1C1070CB4();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_1C0CB1838(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0CB1870 + 4 * byte_1C10B28B0[a1]))(0x6D617473656D6974, 0xE900000000000070);
}

uint64_t sub_1C0CB1870()
{
  return 0x696669746E656469;
}

uint64_t sub_1C0CB188C()
{
  return 1701667182;
}

uint64_t sub_1C0CB189C()
{
  return 6645601;
}

uint64_t sub_1C0CB18AC()
{
  unsigned __int8 *v0;

  return sub_1C0CB1838(*v0);
}

uint64_t sub_1C0CB18B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0CB1694(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0CB18D8()
{
  sub_1C0CB24EC();
  return sub_1C1070EE8();
}

uint64_t sub_1C0CB1900()
{
  sub_1C0CB24EC();
  return sub_1C1070EF4();
}

uint64_t PhotosPersonObservation.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1C07ACF80(&qword_1EF646BF8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1C0778544();
  sub_1C07A9480(a1, a1[3]);
  sub_1C0CB24EC();
  sub_1C1070EB8();
  sub_1C106ADE0();
  sub_1C07803B8(&qword_1ED75E7D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
  sub_1C0787920();
  sub_1C1070BB8();
  if (!v1)
  {
    type metadata accessor for PhotosPersonObservation(0);
    sub_1C0787920();
    sub_1C1070B7C();
    sub_1C0787920();
    sub_1C1070B34();
    type metadata accessor for PHPersonAgeType(0);
    sub_1C07803B8(&qword_1EF646C10, (uint64_t (*)(uint64_t))type metadata accessor for PHPersonAgeType, (uint64_t)&protocol conformance descriptor for PHPersonAgeType);
    sub_1C0787920();
    sub_1C1070B64();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
}

uint64_t PhotosPersonObservation.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int16 v22;
  char v23;

  v18 = sub_1C106ADE0();
  v4 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  sub_1C0778564();
  v19 = v6 - v5;
  v20 = sub_1C07ACF80(&qword_1EF646C18);
  MEMORY[0x1E0C80A78](v20);
  sub_1C0778564();
  v7 = (int *)type metadata accessor for PhotosPersonObservation(0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v8);
  sub_1C0778544();
  sub_1C07A9480(a1, a1[3]);
  sub_1C0CB24EC();
  sub_1C1070E94();
  if (v21)
    return _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)a1);
  sub_1C07803B8(&qword_1ED75E9A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  sub_1C1070AE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v19, v18);
  v9 = sub_1C1070AA4();
  v10 = (uint64_t *)(v2 + v7[5]);
  *v10 = v9;
  v10[1] = v11;
  v12 = sub_1C1070A5C();
  v13 = (uint64_t *)(v2 + v7[6]);
  *v13 = v12;
  v13[1] = v14;
  type metadata accessor for PHPersonAgeType(0);
  sub_1C07803B8(&qword_1EF6405F0, (uint64_t (*)(uint64_t))type metadata accessor for PHPersonAgeType, (uint64_t)&protocol conformance descriptor for PHPersonAgeType);
  sub_1C1070A8C();
  sub_1C0798F58();
  v15 = v2 + v7[7];
  *(_WORD *)v15 = v22;
  *(_BYTE *)(v15 + 2) = v23;
  sub_1C0CAA288(v2, a2);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)a1);
  return sub_1C0CAA2CC(v2);
}

uint64_t sub_1C0CB1DF0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PhotosPersonObservation.init(from:)(a1, a2);
}

uint64_t sub_1C0CB1E04(_QWORD *a1)
{
  return PhotosPersonObservation.encode(to:)(a1);
}

uint64_t PhotosPersonEvent.photosPerson.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1C0CAA288(v1 + OBJC_IVAR____TtC24IntelligencePlatformCore17PhotosPersonEvent_photosPerson, a1);
}

id sub_1C0CB1E2C(uint64_t a1)
{
  objc_class *v1;
  id v3;
  id v4;
  objc_super v6;

  v3 = objc_allocWithZone(v1);
  sub_1C0CAA288(a1, (uint64_t)v3 + OBJC_IVAR____TtC24IntelligencePlatformCore17PhotosPersonEvent_photosPerson);
  v6.receiver = v3;
  v6.super_class = v1;
  v4 = objc_msgSendSuper2(&v6, sel_init);
  sub_1C0CAA2CC(a1);
  return v4;
}

uint64_t PhotosPersonEvent.dataVersion.getter()
{
  return 1;
}

id static PhotosPersonEvent.event(with:dataVersion:)(uint64_t a1, os_log_type_t a2, int a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  int v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  id v26;
  _DWORD v28[4];

  sub_1C07ACF80(&qword_1EF646C20);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  sub_1C0778564();
  v8 = v7 - v6;
  v9 = sub_1C07A4B04();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v28 - v14;
  if (a3 == 1)
  {
    sub_1C106A978();
    sub_1C077B5BC();
    sub_1C106A96C();
    v16 = (void *)MEMORY[0x1C3BA79F4]();
    sub_1C07803B8(&qword_1EF646C28, type metadata accessor for PhotosPersonObservation, (uint64_t)&protocol conformance descriptor for PhotosPersonObservation);
    sub_1C106A960();
    sub_1C07B2D8C(v8, 0, 1, v9);
    objc_autoreleasePoolPop(v16);
    v21 = sub_1C07B2D80(v8, 1, v9);
    if (v21 != 1)
    {
      sub_1C0CB2568(v8, (uint64_t)v15);
      sub_1C0CAA288((uint64_t)v15, (uint64_t)v12);
      v26 = sub_1C0CB1E2C((uint64_t)v12);
      swift_release();
      sub_1C0CAA2CC((uint64_t)v15);
      return v26;
    }
    sub_1C0CB2528(v8);
    if (qword_1ED762B18 != -1)
      swift_once();
    v22 = sub_1C077585C();
    sub_1C079E000(v22, (uint64_t)qword_1ED762AF8);
    v23 = sub_1C106F538();
    v24 = sub_1C1070390();
    if (sub_1C07758D8(v24))
    {
      v25 = (uint8_t *)sub_1C0775854();
      *(_WORD *)v25 = 0;
      _os_log_impl(&dword_1C0771000, v23, OS_LOG_TYPE_DEFAULT, "PhotosPersonEvent: Decoding failed", v25, 2u);
      sub_1C077B264();
    }

    swift_release();
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v17 = sub_1C077585C();
    sub_1C079E000(v17, (uint64_t)qword_1ED762AF8);
    v18 = sub_1C106F538();
    v19 = sub_1C1070390();
    if (sub_1C07758D8(v19))
    {
      v20 = (uint8_t *)sub_1C0775854();
      *(_DWORD *)v20 = 67109120;
      v28[3] = a3;
      sub_1C10705AC();
      _os_log_impl(&dword_1C0771000, v18, a2, "PhotosPersonEvent: dataVersion = %u not supported", v20, 8u);
      sub_1C077B264();
    }

  }
  return 0;
}

uint64_t PhotosPersonEvent.serialize()()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  sub_1C106A9A8();
  sub_1C077B5BC();
  sub_1C106A99C();
  v0 = sub_1C106A984();
  v1 = (void *)MEMORY[0x1C3BA79F4](v0);
  sub_1C07A4B04();
  sub_1C07803B8((unint64_t *)&unk_1EF646C30, type metadata accessor for PhotosPersonObservation, (uint64_t)&protocol conformance descriptor for PhotosPersonObservation);
  v2 = sub_1C106A990();
  objc_autoreleasePoolPop(v1);
  swift_release();
  return v2;
}

id PhotosPersonEvent.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void PhotosPersonEvent.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id PhotosPersonEvent.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1C0CB2410(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  double v8;
  id v9;
  uint64_t v10;

  v4 = type metadata accessor for PhotosPersonObservation(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PhotosPersonEvent(0);
  sub_1C0CAA288(a1, (uint64_t)v6);
  v7 = sub_1C0CB1E2C((uint64_t)v6);
  sub_1C106AC60();
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D024C8]), sel_initWithEventBody_timestamp_, v7, v8);

  *a2 = v9;
}

uint64_t type metadata accessor for PhotosPersonObservation(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1ED744460);
}

unint64_t sub_1C0CB24EC()
{
  unint64_t result;

  result = qword_1EF646C00;
  if (!qword_1EF646C00)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B2A6C, &type metadata for PhotosPersonObservation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF646C00);
  }
  return result;
}

uint64_t sub_1C0CB2528(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C07ACF80(&qword_1EF646C20);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0CB2568(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PhotosPersonObservation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *initializeBufferWithCopyOfBuffer for PhotosPersonObservation(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1C106ADE0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v17[2] = v18[2];
    *(_WORD *)v17 = *(_WORD *)v18;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  return a1;
}

uint64_t destroy for PhotosPersonObservation(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C106ADE0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PhotosPersonObservation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_1C106ADE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_BYTE *)(v16 + 2) = *(_BYTE *)(v17 + 2);
  *(_WORD *)v16 = *(_WORD *)v17;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

uint64_t assignWithCopy for PhotosPersonObservation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  __int16 *v15;
  __int16 v16;

  v6 = sub_1C106ADE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = (__int16 *)(a2 + v13);
  v16 = *v15;
  *(_BYTE *)(v14 + 2) = *((_BYTE *)v15 + 2);
  *(_WORD *)v14 = v16;
  return a1;
}

uint64_t initializeWithTake for PhotosPersonObservation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1C106ADE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_WORD *)v9 = *(_WORD *)v10;
  *(_BYTE *)(v9 + 2) = *(_BYTE *)(v10 + 2);
  return a1;
}

uint64_t assignWithTake for PhotosPersonObservation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_1C106ADE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  *(_WORD *)v18 = *(_WORD *)v19;
  *(_BYTE *)(v18 + 2) = *(_BYTE *)(v19 + 2);
  return a1;
}

uint64_t getEnumTagSinglePayload for PhotosPersonObservation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0CB295C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = sub_1C077AE98();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return sub_1C07B2D80(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PhotosPersonObservation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0CB29E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = sub_1C077AE98();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return sub_1C07B2D8C(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1C0CB2A54()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C106ADE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C0CB2AD8()
{
  return type metadata accessor for PhotosPersonEvent(0);
}

uint64_t type metadata accessor for PhotosPersonEvent(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1EF646C68);
}

uint64_t sub_1C0CB2AF4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for PhotosPersonObservation(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for PhotosPersonEvent()
{
  return swift_lookUpClassMethod();
}

uint64_t storeEnumTagSinglePayload for PhotosPersonObservation.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1C0CB2BB8 + 4 * byte_1C10B28B9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1C0CB2BEC + 4 * byte_1C10B28B4[v4]))();
}

uint64_t sub_1C0CB2BEC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0CB2BF4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0CB2BFCLL);
  return result;
}

uint64_t sub_1C0CB2C08(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0CB2C10);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1C0CB2C14(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0CB2C1C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PhotosPersonObservation.CodingKeys()
{
  return &type metadata for PhotosPersonObservation.CodingKeys;
}

unint64_t sub_1C0CB2C3C()
{
  unint64_t result;

  result = qword_1EF646C78;
  if (!qword_1EF646C78)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B2A44, &type metadata for PhotosPersonObservation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF646C78);
  }
  return result;
}

unint64_t sub_1C0CB2C7C()
{
  unint64_t result;

  result = qword_1EF646C80;
  if (!qword_1EF646C80)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B29B4, &type metadata for PhotosPersonObservation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF646C80);
  }
  return result;
}

unint64_t sub_1C0CB2CBC()
{
  unint64_t result;

  result = qword_1EF646C88;
  if (!qword_1EF646C88)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B29DC, &type metadata for PhotosPersonObservation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF646C88);
  }
  return result;
}

unint64_t sub_1C0CB2CF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF646C98;
  if (!qword_1EF646C98)
  {
    v1 = sub_1C07D4BEC(&qword_1EF646C90);
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0DEC858], v1);
    atomic_store(result, (unint64_t *)&qword_1EF646C98);
  }
  return result;
}

ValueMetadata *type metadata accessor for PhotosPrivacyChecker()
{
  return &type metadata for PhotosPrivacyChecker;
}

void sub_1C0CB2D4C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  sub_1C07A9480((_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 40));
  sub_1C0CB0208(a1, a2);
}

uint64_t sub_1C0CB2D98@<X0>(void *a1@<X0>, NSObject *a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  NSObject *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v31;
  NSObject *v32;
  _QWORD *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  id v40;

  v10 = sub_1C106F544();
  v35 = *(_QWORD *)(v10 - 8);
  v36 = v10;
  MEMORY[0x1E0C80A78](v10);
  sub_1C077AE40();
  v38 = v11;
  v40 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D75250]), sel_initWithLatestTaxonomy);
  if (a4 >> 62)
    goto LABEL_24;
  v12 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v12)
  {
    v31 = a1;
    v32 = a2;
    v33 = a5;
    v34 = a3;
    v39 = a4 & 0xC000000000000001;
    v13 = MEMORY[0x1E0DEE9D8];
    v14 = 4;
    v37 = a4;
    while (1)
    {
      v15 = v39 ? (id)MEMORY[0x1C3BA70DC](v14 - 4, a4) : *(id *)(a4 + 8 * v14);
      a1 = v15;
      v16 = v14 - 3;
      if (__OFADD__(v14 - 4, 1))
        break;
      if (objc_msgSend(v40, sel_nodeRefForSceneClassId_, objc_msgSend(v15, sel_sceneIdentifier)))
      {
        v17 = (id)PFSceneTaxonomyNodeLocalizedLabel();
        if (v17)
        {
          v18 = v17;
          v19 = sub_1C106FB14();
          a2 = v20;

        }
        else
        {
          v19 = 0;
          a2 = 0;
        }
        a5 = objc_msgSend(a1, sel_sceneIdentifier, v31, v32, v33, v34);
        objc_msgSend(a1, sel_confidence);
        v25 = v24;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C078CD4C();
          v13 = v27;
        }
        a3 = *(_QWORD *)(v13 + 16);
        if (a3 >= *(_QWORD *)(v13 + 24) >> 1)
        {
          sub_1C078CD4C();
          v13 = v28;
        }
        *(_QWORD *)(v13 + 16) = a3 + 1;
        v26 = (_QWORD *)(v13 + 32 * a3);
        v26[4] = v19;
        v26[5] = a2;
        v26[6] = a5;
        v26[7] = v25;

        a4 = v37;
      }
      else
      {
        a3 = v38;
        sub_1C106F190();
        v21 = a1;
        a2 = sub_1C106F538();
        v22 = sub_1C10703A8();
        a5 = (_QWORD *)v22;
        if (os_log_type_enabled(a2, v22))
        {
          v23 = swift_slowAlloc();
          *(_DWORD *)v23 = 67109120;
          *(_DWORD *)(v23 + 4) = -[NSObject sceneIdentifier](v21, sel_sceneIdentifier);

          _os_log_impl(&dword_1C0771000, a2, (os_log_type_t)a5, "Couldn't get sceneNode for %u", (uint8_t *)v23, 8u);
          MEMORY[0x1C3BA8270](v23, -1, -1);
        }
        else
        {

          a2 = v21;
        }

        (*(void (**)(unint64_t, uint64_t))(v35 + 8))(v38, v36);
      }
      ++v14;
      if (v16 == v12)
      {

        sub_1C077589C();
        a5 = v33;
        a3 = v34;
        a1 = v31;
        a2 = v32;
        goto LABEL_26;
      }
    }
    __break(1u);
LABEL_24:
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v12 = sub_1C10709B4();
    sub_1C077589C();
  }

  sub_1C077589C();
  v13 = MEMORY[0x1E0DEE9D8];
LABEL_26:
  *a5 = a1;
  a5[1] = a2;
  v29 = sub_1C07A56F8();
  *(_QWORD *)((char *)a5 + *(int *)(v29 + 24)) = v13;
  return sub_1C07B5E30(a3, (uint64_t)a5 + *(int *)(v29 + 20));
}

BOOL static SceneTag.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  char v10;
  _BOOL8 result;
  BOOL v12;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(double *)(a1 + 24);
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(double *)(a2 + 24);
  if (!v3)
  {
    if (v6)
      v12 = 0;
    else
      v12 = v4 == v7;
    if (v12)
      return v5 == v8;
    return 0;
  }
  if (!v6)
    return 0;
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && v3 == v6)
  {
    if (v4 == v7)
      return v5 == v8;
    return 0;
  }
  v10 = sub_1C1070CB4();
  result = 0;
  if ((v10 & 1) != 0 && v4 == v7)
    return v5 == v8;
  return result;
}

uint64_t sub_1C0CB3180(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  char v7;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001C1107AC0 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v5 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
    if (v5 || (sub_1C1070CB4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6E656469666E6F63 && a2 == 0xEA00000000006563)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = sub_1C1070CB4();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1C0CB32D8(char a1)
{
  if (!a1)
    return 0xD000000000000010;
  if (a1 == 1)
    return 0x696669746E656469;
  return 0x6E656469666E6F63;
}

uint64_t sub_1C0CB3340()
{
  char *v0;

  return sub_1C0CB32D8(*v0);
}

uint64_t sub_1C0CB3348@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0CB3180(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0CB336C()
{
  sub_1C0CB34E0();
  return sub_1C1070EE8();
}

uint64_t sub_1C0CB3394()
{
  sub_1C0CB34E0();
  return sub_1C1070EF4();
}

void SceneTag.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = sub_1C07ACF80(&qword_1EF646CA0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1C0778544();
  sub_1C07A9480(a1, a1[3]);
  sub_1C0CB34E0();
  sub_1C1070EB8();
  sub_1C1070B34();
  if (!v4)
  {
    sub_1C0787920();
    sub_1C1070BAC();
    sub_1C0787920();
    sub_1C1070B94();
  }
  sub_1C078C76C(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_1C077F074();
}

unint64_t sub_1C0CB34E0()
{
  unint64_t result;

  result = qword_1EF646CA8;
  if (!qword_1EF646CA8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B2EF8, &type metadata for SceneTag.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF646CA8);
  }
  return result;
}

void SceneTag.init(from:)(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = sub_1C07ACF80(&qword_1EF646CB0);
  MEMORY[0x1E0C80A78](v5);
  sub_1C0779614();
  sub_1C07A9480(a1, a1[3]);
  sub_1C0CB34E0();
  sub_1C1070E94();
  if (v2)
  {
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_1C07A2A48();
    v6 = sub_1C1070A5C();
    v8 = v7;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C07A2A48();
    v11 = sub_1C1070AD4();
    sub_1C07A2A48();
    sub_1C1070ABC();
    v10 = v9;
    sub_1C0776938();
    *a2 = v6;
    a2[1] = v8;
    a2[2] = v11;
    a2[3] = v10;
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  sub_1C077F074();
}

void sub_1C0CB367C(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  SceneTag.init(from:)(a1, a2);
}

void sub_1C0CB3690(_QWORD *a1)
{
  SceneTag.encode(to:)(a1);
}

uint64_t static PhotosSceneTagsContent.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  BOOL v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  _BYTE v38[12];
  int v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;

  v5 = sub_1C106ADE0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  sub_1C077AE40();
  v8 = v7;
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v9);
  sub_1C077AE40();
  v41 = v10;
  v11 = sub_1C07ACF80(&qword_1EF631F68);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v12);
  sub_1C0779614();
  v43 = sub_1C07A56F8();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v13);
  v42 = &v38[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v15);
  v17 = &v38[-v16];
  MEMORY[0x1E0C80A78](v18);
  v20 = &v38[-v19];
  MEMORY[0x1E0C80A78](v21);
  v23 = &v38[-v22];
  v24 = *a1 == *a2 && a1[1] == a2[1];
  v40 = v6;
  if (v24)
  {
    sub_1C07BC9D0();
    sub_1C07A1F48();
LABEL_8:
    v26 = *(int *)(v43 + 20);
    v27 = (uint64_t)&v20[v26];
    v28 = v2 + *(int *)(v11 + 48);
    sub_1C077CD6C((uint64_t)&v23[v26], v2);
    sub_1C077CD6C(v27, v28);
    sub_1C0779E60(v2);
    if (v24)
    {
      sub_1C07914AC();
      sub_1C0793F30();
      v29 = sub_1C0779E60(v28);
      if (v24)
      {
        sub_1C078C0BC(v29, (uint64_t *)&unk_1ED762690);
        sub_1C079E7D8();
        sub_1C079B960();
        goto LABEL_20;
      }
    }
    else
    {
      v30 = v41;
      sub_1C077CD6C(v2, v41);
      sub_1C0779E60(v28);
      if (!v31)
      {
        v33 = v40;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 32))(v8, v28, v5);
        sub_1C085387C((unint64_t *)&qword_1EF631F80, MEMORY[0x1E0CB08B8]);
        v34 = v41;
        v39 = sub_1C106FAA8();
        v35 = *(uint64_t (**)(uint64_t, uint64_t))(v33 + 8);
        v35(v8, v5);
        sub_1C07914AC();
        sub_1C0793F30();
        v36 = v35(v34, v5);
        sub_1C078C0BC(v36, (uint64_t *)&unk_1ED762690);
        sub_1C079E7D8();
        sub_1C079B960();
        if ((v39 & 1) == 0)
          goto LABEL_18;
LABEL_20:
        v32 = sub_1C0A30D24(*(_QWORD *)&v17[*(int *)(v43 + 24)], *(_QWORD *)(v5 + *(int *)(v43 + 24)));
        goto LABEL_21;
      }
      sub_1C07914AC();
      sub_1C0793F30();
      v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 8))(v30, v5);
    }
    sub_1C078C0BC(v29, &qword_1EF631F68);
    goto LABEL_17;
  }
  v25 = sub_1C1070CB4();
  sub_1C07BC9D0();
  sub_1C07A1F48();
  if ((v25 & 1) != 0)
    goto LABEL_8;
  sub_1C07914AC();
  sub_1C0793F30();
LABEL_17:
  v5 = (uint64_t)v42;
  sub_1C079E7D8();
  sub_1C0CB39E4((uint64_t)a2, v5);
LABEL_18:
  v32 = 0;
LABEL_21:
  sub_1C0CB3A28((uint64_t)v17);
  sub_1C0CB3A28(v5);
  return v32 & 1;
}

uint64_t type metadata accessor for PhotosSceneTagsContent()
{
  uint64_t result;

  result = qword_1EF646D50;
  if (!qword_1EF646D50)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C0CB39E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PhotosSceneTagsContent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0CB3A28(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PhotosSceneTagsContent();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0CB3A64(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  char v7;

  if (a1 == 0xD000000000000014 && a2 == 0x80000001C1107AE0 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v5 = a1 == 0x6E6F697461657263 && a2 == 0xEC00000065746144;
    if (v5 || (sub_1C1070CB4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x676154656E656373 && a2 == 0xE900000000000073)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = sub_1C1070CB4();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1C0CB3BD0(char a1)
{
  if (!a1)
    return 0xD000000000000014;
  if (a1 == 1)
    return 0x6E6F697461657263;
  return 0x676154656E656373;
}

uint64_t sub_1C0CB3C38()
{
  char *v0;

  return sub_1C0CB3BD0(*v0);
}

uint64_t sub_1C0CB3C40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0CB3A64(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0CB3C64()
{
  sub_1C0CB3E48();
  return sub_1C1070EE8();
}

uint64_t sub_1C0CB3C8C()
{
  sub_1C0CB3E48();
  return sub_1C1070EF4();
}

uint64_t PhotosSceneTagsContent.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = sub_1C07ACF80(&qword_1EF646CB8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1C0778544();
  sub_1C07A9480(a1, a1[3]);
  sub_1C0CB3E48();
  sub_1C1070EB8();
  sub_1C0787920();
  sub_1C1070B7C();
  if (!v1)
  {
    type metadata accessor for PhotosSceneTagsContent();
    sub_1C106ADE0();
    sub_1C085387C(&qword_1ED75E7D0, MEMORY[0x1E0CB0890]);
    sub_1C0787920();
    sub_1C1070B64();
    sub_1C07ACF80(&qword_1EF646CC8);
    sub_1C0CB4128(&qword_1EF646CD0, (uint64_t (*)(void))sub_1C0CB3E84, MEMORY[0x1E0DEAF10]);
    sub_1C0787920();
    sub_1C1070BB8();
  }
  return sub_1C078C76C(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
}

unint64_t sub_1C0CB3E48()
{
  unint64_t result;

  result = qword_1EF646CC0;
  if (!qword_1EF646CC0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B2EA8, &type metadata for PhotosSceneTagsContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF646CC0);
  }
  return result;
}

unint64_t sub_1C0CB3E84()
{
  unint64_t result;

  result = qword_1EF646CD8;
  if (!qword_1EF646CD8)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for SceneTag, &type metadata for SceneTag);
    atomic_store(result, (unint64_t *)&qword_1EF646CD8);
  }
  return result;
}

void PhotosSceneTagsContent.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v4);
  sub_1C0778564();
  v7 = v6 - v5;
  v15 = sub_1C07ACF80(&qword_1EF646CE0);
  MEMORY[0x1E0C80A78](v15);
  sub_1C0778564();
  v8 = type metadata accessor for PhotosSceneTagsContent();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v9);
  sub_1C0778564();
  v12 = (uint64_t *)(v11 - v10);
  sub_1C07A9480(a1, a1[3]);
  sub_1C0CB3E48();
  sub_1C1070E94();
  if (v2)
  {
    sub_1C079D550();
  }
  else
  {
    *v12 = sub_1C1070AA4();
    v12[1] = v13;
    sub_1C106ADE0();
    sub_1C085387C(&qword_1ED75E9A0, MEMORY[0x1E0CB08C0]);
    sub_1C07948A4();
    sub_1C1070A8C();
    sub_1C07B5E30(v7, (uint64_t)v12 + *(int *)(v8 + 20));
    sub_1C07ACF80(&qword_1EF646CC8);
    sub_1C0CB4128(&qword_1EF646CE8, (uint64_t (*)(void))sub_1C0CB4190, MEMORY[0x1E0DEAF40]);
    sub_1C07948A4();
    sub_1C1070AE0();
    sub_1C07A7460();
    *(uint64_t *)((char *)v12 + *(int *)(v8 + 24)) = v16;
    sub_1C0CB39E4((uint64_t)v12, a2);
    sub_1C079D550();
    sub_1C0CB3A28((uint64_t)v12);
  }
}

uint64_t sub_1C0CB4128(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = sub_1C07D4BEC(&qword_1EF646CC8);
    v8 = a2();
    result = MEMORY[0x1C3BA8174](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C0CB4190()
{
  unint64_t result;

  result = qword_1EF646CF0;
  if (!qword_1EF646CF0)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for SceneTag, &type metadata for SceneTag);
    atomic_store(result, (unint64_t *)&qword_1EF646CF0);
  }
  return result;
}

void sub_1C0CB41CC(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  PhotosSceneTagsContent.init(from:)(a1, a2);
}

uint64_t sub_1C0CB41E0(_QWORD *a1)
{
  return PhotosSceneTagsContent.encode(to:)(a1);
}

uint64_t initializeWithCopy for SceneTag(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

_QWORD *assignWithCopy for SceneTag(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

_QWORD *assignWithTake for SceneTag(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

void type metadata accessor for SceneTag()
{
  sub_1C0779604();
}

uint64_t *initializeBufferWithCopyOfBuffer for PhotosSceneTagsContent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1C106ADE0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    if (sub_1C07B2D80((uint64_t)v10, 1, v11))
    {
      v12 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      sub_1C07B2D8C((uint64_t)v9, 0, 1, v11);
    }
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  return v4;
}

uint64_t destroy for PhotosSceneTagsContent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1C106ADE0();
  if (!sub_1C07B2D80(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for PhotosSceneTagsContent(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1C106ADE0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  if (sub_1C07B2D80((uint64_t)v9, 1, v10))
  {
    v11 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    sub_1C07B2D8C((uint64_t)v8, 0, 1, v10);
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

_QWORD *assignWithCopy for PhotosSceneTagsContent(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;

  *a1 = *a2;
  a1[1] = a2[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C106ADE0();
  v10 = sub_1C07B2D80((uint64_t)v7, 1, v9);
  v11 = sub_1C07B2D80((uint64_t)v8, 1, v9);
  if (!v10)
  {
    v12 = *(_QWORD *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v13 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  sub_1C07B2D8C((uint64_t)v7, 0, 1, v9);
LABEL_7:
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for PhotosSceneTagsContent(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C106ADE0();
  if (sub_1C07B2D80((uint64_t)v8, 1, v9))
  {
    v10 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    sub_1C07B2D8C((uint64_t)v7, 0, 1, v9);
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *assignWithTake for PhotosSceneTagsContent(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1C106ADE0();
  v11 = sub_1C07B2D80((uint64_t)v8, 1, v10);
  v12 = sub_1C07B2D80((uint64_t)v9, 1, v10);
  if (!v11)
  {
    v13 = *(_QWORD *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    v14 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  sub_1C07B2D8C((uint64_t)v8, 0, 1, v10);
LABEL_7:
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PhotosSceneTagsContent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0CB486C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
    return sub_1C07B2D80(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PhotosSceneTagsContent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0CB48F0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
    return sub_1C07B2D8C(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_1C0CB4960()
{
  unint64_t v0;

  sub_1C0815BFC();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

ValueMetadata *type metadata accessor for PhotosSceneTagsContent.CodingKeys()
{
  return &type metadata for PhotosSceneTagsContent.CodingKeys;
}

uint64_t _s24IntelligencePlatformCore22PhotosSceneTagsContentV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C0CB4A40 + 4 * byte_1C10B2AE5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C0CB4A74 + 4 * asc_1C10B2AE0[v4]))();
}

uint64_t sub_1C0CB4A74(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0CB4A7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0CB4A84);
  return result;
}

uint64_t sub_1C0CB4A90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0CB4A98);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C0CB4A9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0CB4AA4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SceneTag.CodingKeys()
{
  return &type metadata for SceneTag.CodingKeys;
}

void type metadata accessor for PhotosSceneTagsSequence()
{
  sub_1C0779604();
}

unint64_t sub_1C0CB4AD8()
{
  unint64_t result;

  result = qword_1EF646D90[0];
  if (!qword_1EF646D90[0])
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B2CD4, &unk_1E7A29BF8);
    atomic_store(result, qword_1EF646D90);
  }
  return result;
}

void sub_1C0CB4B14(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C0CB2D4C(a1, a2);
}

uint64_t sub_1C0CB4B34@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;
  uint64_t v10[3];
  __int128 v11;

  v3 = sub_1C07A9480(v1, v1[3]);
  MEMORY[0x1E0C80A78](v3);
  sub_1C0778564();
  (*(void (**)(uint64_t))(v6 + 16))(v5 - v4);
  *(_QWORD *)&v11 = swift_getAssociatedTypeWitness();
  *((_QWORD *)&v11 + 1) = swift_getAssociatedConformanceWitness();
  sub_1C07B3E30(v10);
  sub_1C106FD84();
  v9 = v11;
  v7 = v11;
  sub_1C07A9480(v10, v11);
  *(_OWORD *)(a1 + 24) = v9;
  sub_1C07B3E30((uint64_t *)a1);
  (*(void (**)(void))(*(_QWORD *)(v7 - 8) + 16))();
  return _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v10);
}

uint64_t sub_1C0CB4C58(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[6] = a1;
  v2[7] = v1;
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  v2[8] = sub_1C077CF7C();
  v2[9] = swift_task_alloc();
  v3 = sub_1C106ADE0();
  v2[10] = v3;
  v2[11] = *(_QWORD *)(v3 - 8);
  v2[12] = sub_1C077CF7C();
  v2[13] = swift_task_alloc();
  sub_1C07ACF80(&qword_1EF646E00);
  v2[14] = sub_1C079888C();
  v2[15] = sub_1C07A56F8();
  v2[16] = sub_1C079888C();
  return swift_task_switch();
}

uint64_t sub_1C0CB4D10()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);

  sub_1C079D180(*(_QWORD *)(v0 + 56), *(_QWORD *)(*(_QWORD *)(v0 + 56) + 24));
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = sub_1C1070564();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = sub_1C079888C();
  sub_1C10705A0();
  v5 = sub_1C07B2D80(v4, 1, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v0 + 112);
  v7 = *(_QWORD *)(v0 + 120);
  if (v5 == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v2);
    sub_1C0779D18();
    sub_1C07B2D8C(v6, 1, 1, v7);
LABEL_5:
    sub_1C0784B94(*(_QWORD *)(v0 + 112), &qword_1EF646E00);
    v10 = sub_1C07ACF80(&qword_1EF640CB8);
    v11 = 1;
    goto LABEL_13;
  }
  *(_QWORD *)(v0 + 40) = AssociatedTypeWitness;
  sub_1C07B3E30((uint64_t *)(v0 + 16));
  (*(void (**)(void))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))();
  sub_1C0779D18();
  v8 = swift_dynamicCast();
  sub_1C07B2D8C(v6, v8 ^ 1u, 1, v7);
  sub_1C0779E60(v6);
  if (v9)
    goto LABEL_5;
  v13 = *(_QWORD *)(v0 + 72);
  v12 = *(_QWORD *)(v0 + 80);
  sub_1C0CB5280(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 128));
  sub_1C0795C4C();
  if (sub_1C07B2D80(v13, 1, v12) == 1)
  {
    v14 = *(_QWORD *)(v0 + 72);
    sub_1C079534C();
    sub_1C0784B94(v14, (uint64_t *)&unk_1ED762690);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 32))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
  }
  v15 = *(_QWORD *)(v0 + 80);
  v16 = *(_QWORD *)(v0 + 64);
  sub_1C0795C4C();
  if (sub_1C07B2D80(v16, 1, v15) == 1)
  {
    v17 = *(_QWORD *)(v0 + 64);
    sub_1C079534C();
    sub_1C0784B94(v17, (uint64_t *)&unk_1ED762690);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 32))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 80));
  }
  v18 = *(_QWORD *)(v0 + 128);
  v20 = *(_QWORD *)(v0 + 96);
  v19 = *(_QWORD *)(v0 + 104);
  v21 = *(_QWORD *)(v0 + 80);
  v22 = *(_QWORD *)(v0 + 88);
  v23 = *(_QWORD *)(v0 + 48);
  v10 = sub_1C07ACF80(&qword_1EF640CB8);
  sub_1C0CB5280(v18, v23 + *(int *)(v10 + 32));
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32);
  v24(v23, v19, v21);
  v24(v23 + *(int *)(v10 + 28), v20, v21);
  v11 = 0;
LABEL_13:
  sub_1C07B2D8C(*(_QWORD *)(v0 + 48), v11, 1, v10);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1C0779D18();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C0CB4FFC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C0B59E78;
  return sub_1C0CB4C58(a1);
}

uint64_t sub_1C0CB504C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_1EF641170 + dword_1EF641170);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  *v1 = v0;
  v1[1] = sub_1C0C46068;
  return v3();
}

uint64_t sub_1C0CB50D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1C0CB4B34(a1);
  return sub_1C0A5CD78(v1);
}

unint64_t sub_1C0CB50F4()
{
  unint64_t result;

  result = qword_1EF646DA8;
  if (!qword_1EF646DA8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B2DAC, &type metadata for SceneTag.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF646DA8);
  }
  return result;
}

unint64_t sub_1C0CB5134()
{
  unint64_t result;

  result = qword_1EF646DB0;
  if (!qword_1EF646DB0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B2E64, &type metadata for PhotosSceneTagsContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF646DB0);
  }
  return result;
}

uint64_t sub_1C0CB5170()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1C0CB5184()
{
  unint64_t result;

  result = qword_1EF646DD8;
  if (!qword_1EF646DD8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B2DD4, &type metadata for PhotosSceneTagsContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF646DD8);
  }
  return result;
}

unint64_t sub_1C0CB51C4()
{
  unint64_t result;

  result = qword_1EF646DE0;
  if (!qword_1EF646DE0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B2DFC, &type metadata for PhotosSceneTagsContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF646DE0);
  }
  return result;
}

unint64_t sub_1C0CB5204()
{
  unint64_t result;

  result = qword_1EF646DE8;
  if (!qword_1EF646DE8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B2D1C, &type metadata for SceneTag.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF646DE8);
  }
  return result;
}

unint64_t sub_1C0CB5244()
{
  unint64_t result;

  result = qword_1EF646DF0;
  if (!qword_1EF646DF0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B2D44, &type metadata for SceneTag.CodingKeys);
    atomic_store(result, &qword_1EF646DF0);
  }
  return result;
}

uint64_t sub_1C0CB5280(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PhotosSceneTagsContent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void type metadata accessor for PhotosSceneTagsSequence.PhotosSceneTagsAsyncIterator()
{
  sub_1C0779604();
}

unint64_t sub_1C0CB52D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF646E08;
  if (!qword_1EF646E08)
  {
    v1 = sub_1C07D4BEC(&qword_1EF640A18);
    result = MEMORY[0x1C3BA8174](&unk_1C10B5B14, v1);
    atomic_store(result, (unint64_t *)&qword_1EF646E08);
  }
  return result;
}

uint64_t sub_1C0CB5320(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  _UNKNOWN **v10;

  sub_1C0CB5400(a1, (uint64_t)&v6);
  if (v7)
  {
    sub_1C0CB5448(a1);
    sub_1C077DD60(&v6, (uint64_t)&v8);
  }
  else
  {
    v3 = type metadata accessor for PhotosMetadataFetcher();
    v4 = swift_allocObject();
    v9 = v3;
    v10 = &off_1E7A29520;
    *(_QWORD *)&v8 = v4;
    sub_1C0CB5448(a1);
    sub_1C0CB5448((uint64_t)&v6);
  }
  sub_1C077DD60(&v8, v1 + 16);
  return v1;
}

uint64_t sub_1C0CB53BC()
{
  uint64_t v0;

  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PhotosSceneTagsSignal()
{
  return objc_opt_self();
}

uint64_t sub_1C0CB5400(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(qword_1EF646EB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0CB5448(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C07ACF80(qword_1EF646EB0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0CB5488(uint64_t a1)
{
  uint64_t result;

  switch(a1)
  {
    case -1:
      return 0x6E6564646948;
    case 0:
      return 0x7972616E6964724FLL;
    case 1:
      return 0x6E6174726F706D49;
  }
  result = sub_1C1070954();
  __break(1u);
  return result;
}

unint64_t sub_1C0CB553C(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v23[2];

  v3 = v2;
  v23[1] = *(id *)MEMORY[0x1E0C80C00];
  v6 = (void *)objc_opt_self();
  sub_1C07ACF80(&qword_1ED762CB0);
  v7 = sub_1C077B30C();
  *(_OWORD *)(v7 + 16) = xmmword_1C1079220;
  *(_QWORD *)(v7 + 32) = a1;
  *(_QWORD *)(v7 + 40) = a2;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v8 = (void *)sub_1C106FEEC();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v6, sel_predicateForContactsWithIdentifiers_, v8);

  sub_1C07ACF80(&qword_1ED762CD0);
  v10 = sub_1C077B30C();
  *(_OWORD *)(v10 + 16) = xmmword_1C107B050;
  v11 = (void *)*MEMORY[0x1E0C966E8];
  *(_QWORD *)(v10 + 32) = *MEMORY[0x1E0C966E8];
  v12 = (void *)objc_opt_self();
  v13 = v11;
  *(_QWORD *)(v10 + 40) = objc_msgSend(v12, sel_descriptorForRequiredKeysForStyle_, 0);
  sub_1C106FF28();
  sub_1C07ACF80(&qword_1ED755F30);
  v14 = (void *)sub_1C106FEEC();
  sub_1C077960C();
  v23[0] = 0;
  v15 = objc_msgSend(v3, sel_unifiedContactsMatchingPredicate_keysToFetch_error_, v9, v14, v23);

  v16 = v23[0];
  if (!v15)
  {
    v20 = v23[0];
    v21 = (void *)sub_1C106AA14();

    swift_willThrow();
    return 0;
  }
  sub_1C081DB68();
  v17 = sub_1C106FF04();
  v18 = v16;

  if (v17 >> 62)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v19 = sub_1C10709B4();
    sub_1C077960C();
  }
  else
  {
    v19 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
  }

  if (!v19)
  {
    sub_1C077960C();
    return 0;
  }
  return v17;
}

_QWORD *initializeWithCopy for AutonamingMessagesAggregatedInference(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  a1[8] = a2[8];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

_QWORD *assignWithCopy for AutonamingMessagesAggregatedInference(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  return a1;
}

_QWORD *assignWithTake for AutonamingMessagesAggregatedInference(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  return a1;
}

uint64_t getEnumTagSinglePayload for AutonamingMessagesAggregatedInference(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 72))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 56);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AutonamingMessagesAggregatedInference(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AutonamingMessagesAggregatedInference()
{
  return &type metadata for AutonamingMessagesAggregatedInference;
}

uint64_t sub_1C0CB59B4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0CB59C0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;

  v6 = sub_1C078A314();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
    return sub_1C07B2D80(v8, a2, v7);
  }
  v9 = sub_1C077674C();
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v9;
    v10 = a3[5];
LABEL_10:
    v8 = a1 + v10;
    return sub_1C07B2D80(v8, a2, v7);
  }
  if ((_DWORD)a2 != 252)
  {
    v7 = sub_1C07ACF80(&qword_1ED759C40);
    v10 = a3[7];
    goto LABEL_10;
  }
  v11 = *(unsigned __int8 *)(a1 + a3[6]);
  if (v11 >= 4)
    return v11 - 3;
  else
    return 0;
}

uint64_t sub_1C0CB5A74()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0CB5A80(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v8 = sub_1C078A314();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
  }
  else
  {
    result = sub_1C077674C();
    if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    {
      v9 = result;
      v12 = a4[5];
    }
    else
    {
      if (a3 == 252)
      {
        *(_BYTE *)(a1 + a4[6]) = a2 + 3;
        return result;
      }
      v9 = sub_1C07ACF80(&qword_1ED759C40);
      v12 = a4[7];
    }
    v10 = a1 + v12;
  }
  return sub_1C07B2D8C(v10, a2, a2, v9);
}

uint64_t type metadata accessor for PHPersonSourceIngestor()
{
  uint64_t result;

  result = qword_1ED750D18;
  if (!qword_1ED750D18)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1C0CB5B6C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for PhaseStores();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Source();
    if (v1 <= 0x3F)
    {
      sub_1C08C0260();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t sub_1C0CB5C14(void *a1, unint64_t a2, uint64_t (*a3)(uint64_t a1), uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  double v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  void *v47;
  id v48;
  uint64_t v49;
  void (*v50)(uint64_t, unint64_t, uint64_t);
  void (*v51)(uint64_t, unint64_t, uint64_t);
  uint64_t v52;
  id v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  uint64_t v66;
  uint64_t v67;
  int *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  id v89;
  id v90;
  id v91;
  id v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  id v96;
  void *v97;
  void *v98;
  uint64_t v99;
  NSObject *v100;
  os_log_type_t v101;
  uint8_t *v102;
  id v103;
  uint64_t v104;
  int *v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  id v114;
  void *v115;
  uint64_t v116;
  int *v117;
  uint64_t *v118;
  uint64_t v119;
  void *v120;
  id v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  void (*v127)(uint64_t, char);
  _QWORD *v128;
  uint64_t v129;
  uint64_t v130;
  void *v131;
  id v132;
  void *v133;
  uint64_t v134;
  void *v135;
  void *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  int v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  id v146;
  uint64_t v147;
  void *v148;
  void *v149;
  id v150;
  uint64_t v151;
  void *v152;
  void *v153;
  Swift::String_optional v154;
  Swift::String_optional v155;
  Swift::String v156;
  void *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  void (*v161)(uint64_t, unint64_t, uint64_t);
  char v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  uint64_t v169;
  void *v170;
  uint64_t v171;
  void *v172;
  void *v173;
  void *v174;
  id v175;
  uint64_t v176;
  void *v177;
  void *v178;
  Swift::String_optional v179;
  Swift::String_optional v180;
  Swift::String v181;
  void *v182;
  uint64_t v183;
  uint64_t v184;
  NSObject *v185;
  os_log_type_t v186;
  uint8_t *v187;
  uint64_t v188;
  uint64_t v189;
  id v190;
  id v191;
  uint64_t v192;
  void *v193;
  void *v194;
  id v195;
  void *v196;
  id v197;
  uint64_t v198;
  void *v199;
  void *v200;
  Swift::String_optional v201;
  Swift::String_optional v202;
  Swift::String v203;
  uint64_t v204;
  uint64_t result;
  uint64_t v206;
  NSObject *v207;
  os_log_type_t v208;
  uint8_t *v209;
  id v210;
  double v211;
  void *v212;
  uint64_t v213;
  id v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  id v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  NSObject *v225;
  os_log_type_t v226;
  uint8_t *v227;
  id v228;
  id v229;
  void *v230;
  id v231;
  uint64_t v232;
  void *v233;
  void *v234;
  Swift::Float v235;
  Swift::String_optional v236;
  Swift::String_optional v237;
  Swift::String_optional v238;
  Swift::String v239;
  void *v240;
  __int128 v241;
  uint64_t v242;
  unint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  void (*v249)(char *, uint64_t (*)(uint64_t), uint64_t);
  uint64_t v250;
  char *v251;
  uint64_t v252;
  char *v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  char *v257;
  uint64_t v258;
  char *v259;
  uint64_t v260;
  id v261;
  uint64_t v262;
  char *v263;
  uint64_t v264;
  char *v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t (*v270)(uint64_t);
  void (*v271)(uint64_t, unint64_t, uint64_t);
  uint64_t v272;
  int *v273;
  unint64_t v274;
  char *v275;
  uint64_t v276;
  uint64_t v277;
  void *v278;
  char *v279;
  int *v280;
  char *v281;
  uint64_t v282;
  id v283;
  uint64_t v284;
  uint64_t v285;
  id v286;
  uint64_t v287;
  uint64_t v288[15];
  char v289[8];
  uint64_t v290;
  double v291;
  uint64_t v292;
  void *v293;
  char *v294;
  char *v295;
  unint64_t v296;
  int *v297;
  uint64_t v298;

  v256 = a8;
  v260 = a7;
  v261 = a6;
  v266 = a5;
  v269 = a4;
  v270 = a3;
  v274 = a2;
  v298 = *MEMORY[0x1E0C80C00];
  v9 = sub_1C07ACF80(&qword_1ED750650);
  MEMORY[0x1E0C80A78](v9);
  v257 = (char *)&v241 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v258 = sub_1C106CC04();
  v252 = *(_QWORD *)(v258 - 8);
  MEMORY[0x1E0C80A78](v258);
  v253 = (char *)&v241 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v264 = sub_1C106CC34();
  v262 = *(_QWORD *)(v264 - 8);
  MEMORY[0x1E0C80A78](v264);
  v265 = (char *)&v241 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1C07ACF80((uint64_t *)&unk_1ED762680);
  MEMORY[0x1E0C80A78](v13);
  v263 = (char *)&v241 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1C106AB28();
  v267 = *(_QWORD *)(v15 - 8);
  v268 = v15;
  MEMORY[0x1E0C80A78](v15);
  v279 = (char *)&v241 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v273 = (int *)type metadata accessor for PHPersonStructs.IdentifierRelationshipType(0);
  v17 = *((_QWORD *)v273 - 1);
  MEMORY[0x1E0C80A78](v273);
  v272 = (uint64_t)&v241 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v276 = (uint64_t)&v241 - v20;
  v280 = (int *)type metadata accessor for PHPersonStructs.Person(0);
  MEMORY[0x1E0C80A78](v280);
  v255 = (uint64_t)&v241 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v254 = (uint64_t)&v241 - v23;
  MEMORY[0x1E0C80A78](v24);
  v282 = (uint64_t)&v241 - v25;
  v26 = sub_1C07ACF80(&qword_1ED762CE0);
  MEMORY[0x1E0C80A78](v26);
  v275 = (char *)&v241 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28);
  v250 = (uint64_t)&v241 - v29;
  MEMORY[0x1E0C80A78](v30);
  v32 = (uint64_t (*)(uint64_t))((char *)&v241 - v31);
  v33 = sub_1C106AE28();
  v284 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v259 = (char *)&v241 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v35);
  v251 = (char *)&v241 - v36;
  v38 = MEMORY[0x1E0C80A78](v37);
  v281 = (char *)&v241 - v39;
  v40 = objc_msgSend(a1, sel_localIdentifier, v38);
  v41 = sub_1C106FB14();
  v43 = v42;

  swift_bridgeObjectRelease();
  v44 = HIBYTE(v43) & 0xF;
  if ((v43 & 0x2000000000000000) == 0)
    v44 = v41 & 0xFFFFFFFFFFFFLL;
  if (!v44)
  {
    sub_1C0898824();
    swift_allocError();
    *v65 = 0;
    swift_willThrow();
    return (uint64_t)v32;
  }
  v277 = v33;
  v45 = (void *)objc_opt_self();
  v283 = a1;
  v46 = objc_msgSend(a1, sel_localIdentifier);
  sub_1C106FB14();

  v47 = (void *)sub_1C106FAF0();
  swift_bridgeObjectRelease();
  v48 = objc_msgSend(v45, sel_uuidFromLocalIdentifier_, v47);

  if (v48)
  {
    v49 = sub_1C106FB14();
    v51 = v50;

    v248 = v49;
    v271 = v51;
    sub_1C106ADEC();
    v52 = v277;
    if (sub_1C07B2D80((uint64_t)v32, 1, v277) != 1)
    {
      v249 = *(void (**)(char *, uint64_t (*)(uint64_t), uint64_t))(v284 + 32);
      v249(v281, v32, v52);
      v53 = v283;
      v54 = objc_msgSend(v283, sel_localIdentifier);
      sub_1C106FB14();

      if (qword_1ED75AE10 != -1)
        swift_once();
      v55 = type metadata accessor for SourceIdPrefix();
      v56 = sub_1C079E000(v55, (uint64_t)&unk_1ED78D6E8);
      v57 = *(_QWORD *)(v56 + 8);
      v286 = *(id *)v56;
      v287 = v57;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C106FC94();
      v32 = (uint64_t (*)(uint64_t))&v286;
      sub_1C106FC94();
      swift_bridgeObjectRelease();
      v58 = v278;
      sub_1C102E5C0((uint64_t)v286, v287, v59, v60, v61, v62, v63, v64, v241, *((uint64_t *)&v241 + 1), v242, v243, v244, v245, v246, v247, v248, (uint64_t)v249, v250,
        (uint64_t)v251);
      if (v58)
      {
        (*(void (**)(char *, uint64_t))(v284 + 8))(v281, v52);
        swift_bridgeObjectRelease();
        return (uint64_t)v32;
      }
      v247 = v56;
      v66 = sub_1C106E41C();
      v67 = v276;
      v246 = v66;
      sub_1C07B2D8C(v276, 1, 1, v66);
      v68 = v273;
      sub_1C106D030();
      v69 = v67 + v68[6];
      if (qword_1ED7623A8 != -1)
        swift_once();
      v70 = type metadata accessor for Source();
      v245 = sub_1C079E000(v70, (uint64_t)&unk_1ED762388);
      sub_1C080ABC4(v245, v69, (uint64_t (*)(_QWORD))type metadata accessor for Source);
      sub_1C106DE70();
      v71 = (uint64_t *)(v67 + v68[8]);
      sub_1C106DF00();
      v72 = v68[10];
      v73 = objc_msgSend(v53, sel_localIdentifier);
      v74 = sub_1C106FB14();
      v76 = v75;

      *v71 = v74;
      v71[1] = v76;
      v77 = v283;
      *(_OWORD *)(v67 + v72) = xmmword_1C10B1CB0;
      sub_1C07ACF80(&qword_1ED7513C0);
      v78 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
      v244 = *(_QWORD *)(v17 + 72);
      v79 = swift_allocObject();
      v241 = xmmword_1C1079220;
      *(_OWORD *)(v79 + 16) = xmmword_1C1079220;
      v243 = v78;
      sub_1C080ABC4(v67, v79 + v78, type metadata accessor for PHPersonStructs.IdentifierRelationshipType);
      v80 = v280[16];
      v81 = v282;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v81 + v80) = v79;
      sub_1C10331E4();
      v285 = MEMORY[0x1E0DEE9E8];
      v82 = sub_1C09D01AC(v77);
      v84 = v279;
      if (v83)
      {
        v85 = HIBYTE(v83) & 0xF;
        if ((v83 & 0x2000000000000000) == 0)
          v85 = v82 & 0xFFFFFFFFFFFFLL;
        if (v85)
          sub_1C0A7D28C((uint64_t)&v286, v82, v83);
        swift_bridgeObjectRelease();
      }
      v86 = sub_1C0A6266C(v77);
      if (v87)
      {
        v88 = HIBYTE(v87) & 0xF;
        if ((v87 & 0x2000000000000000) == 0)
          v88 = v86 & 0xFFFFFFFFFFFFLL;
        if (v88)
          sub_1C0A7D28C((uint64_t)&v286, v86, v87);
        swift_bridgeObjectRelease();
      }
      v89 = objc_msgSend((id)objc_opt_self(), sel_service);
      v286 = 0;
      v90 = objc_msgSend(v89, sel_requestVUIndexURLForSystemPhotosLibraryWithError_, &v286);

      v91 = v286;
      if (!v90)
      {
        v96 = v286;
        swift_bridgeObjectRelease();
        v97 = (void *)sub_1C106AA14();

        swift_willThrow();
        v98 = 0;
LABEL_28:
        if (qword_1ED761458 != -1)
          swift_once();
        v99 = sub_1C106F544();
        sub_1C079E000(v99, (uint64_t)qword_1ED78D818);
        v100 = sub_1C106F538();
        v101 = sub_1C1070390();
        if (os_log_type_enabled(v100, v101))
        {
          v102 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v102 = 0;
          _os_log_impl(&dword_1C0771000, v100, v101, "PHPerson: Invalid call to VUGallery", v102, 2u);
          MEMORY[0x1C3BA8270](v102, -1, -1);
        }

        goto LABEL_33;
      }
      sub_1C106AAF8();
      v92 = v91;

      v93 = (uint64_t)v263;
      v94 = v84;
      v95 = v268;
      (*(void (**)(char *, char *, uint64_t))(v267 + 16))(v263, v94, v268);
      sub_1C07B2D8C(v93, 0, 1, v95);
      (*(void (**)(char *, _QWORD, uint64_t))(v262 + 104))(v265, *MEMORY[0x1E0DC72A0], v264);
      sub_1C106CC70();
      swift_allocObject();
      v137 = sub_1C106CC1C();
      v138 = (uint64_t)v257;
      sub_1C106CC10();
      v139 = v258;
      v140 = sub_1C07B2D80(v138, 1, v258);
      v141 = v277;
      v278 = 0;
      v263 = (char *)v137;
      if (v140 == 1)
      {
        swift_bridgeObjectRelease();
        sub_1C0784B6C(v138, &qword_1ED750650);
        v142 = v279;
      }
      else
      {
        v144 = v252;
        v143 = v253;
        (*(void (**)(char *, uint64_t, uint64_t))(v252 + 32))(v253, v138, v139);
        v145 = v250;
        sub_1C106CBF8();
        if (sub_1C07B2D80(v145, 1, v141) != 1)
        {
          v249(v251, (uint64_t (*)(uint64_t))v145, v141);
          if (sub_1C106ADF8() == v248 && v161 == v271)
          {
            swift_bridgeObjectRelease_n();
            v142 = v279;
          }
          else
          {
            v163 = sub_1C1070CB4();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v142 = v279;
            if ((v163 & 1) == 0)
            {
              (*(void (**)(char *, uint64_t))(v284 + 8))(v251, v277);
              (*(void (**)(char *, uint64_t))(v144 + 8))(v253, v139);
              goto LABEL_60;
            }
          }
          (*(void (**)(char *, uint64_t))(v284 + 8))(v251, v277);
          (*(void (**)(char *, uint64_t))(v144 + 8))(v253, v139);
          *(_OWORD *)(v282 + v280[11]) = xmmword_1C10812C0;
          swift_bridgeObjectRelease();
          goto LABEL_60;
        }
        (*(void (**)(char *, uint64_t))(v144 + 8))(v143, v139);
        swift_bridgeObjectRelease();
        sub_1C0784B6C(v145, &qword_1ED762CE0);
        v142 = v279;
      }
LABEL_60:
      v264 = sub_1C0CB7554();
      v164 = *(_QWORD *)(v264 + 16);
      v165 = v277;
      v166 = (uint64_t)v259;
      v167 = (uint64_t)v275;
      if (v164)
      {
        v168 = v264 + ((*(unsigned __int8 *)(v284 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v284 + 80));
        v265 = *(char **)(v284 + 72);
        v271 = *(void (**)(uint64_t, unint64_t, uint64_t))(v284 + 16);
        while (1)
        {
          v271(v167, v168, v165);
          sub_1C07B2D8C(v167, 0, 1, v165);
          if (sub_1C07B2D80(v167, 1, v165) == 1)
            break;
          v249((char *)v166, (uint64_t (*)(uint64_t))v167, v165);
          v169 = sub_1C0CB7A18(v166, v274);
          if (v170)
          {
            v171 = v169;
            v172 = v170;
            swift_bridgeObjectRelease();
            v275 = (char *)sub_1C106ADF8();
            v174 = v173;
            v175 = objc_msgSend(v283, sel_localIdentifier);
            v176 = sub_1C106FB14();
            v178 = v177;

            LOBYTE(v286) = 5;
            v179.value._countAndFlagsBits = (uint64_t)v275;
            v179.value._object = v174;
            v180.value._countAndFlagsBits = v171;
            v180.value._object = v172;
            v181._countAndFlagsBits = v176;
            v181._object = v178;
            VisionKeyValueStore.store(entityIdentifier:name:relationship:visualIdentifier:association:confidence:)(v179, v180, (Swift::String_optional)0, v181, (IntelligencePlatformCore::AssociationType)&v286, 1.0);
            v98 = v182;
            if (v182)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_release();
              swift_bridgeObjectRelease();
              (*(void (**)(uint64_t, uint64_t))(v284 + 8))(v166, v277);
              (*(void (**)(char *, uint64_t))(v267 + 8))(v279, v268);
              v97 = v182;
              v98 = 0;
              v81 = v282;
              goto LABEL_28;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            (*(void (**)(uint64_t, uint64_t))(v284 + 8))(v166, v277);
            (*(void (**)(char *, uint64_t))(v267 + 8))(v279, v268);
            v81 = v282;
            goto LABEL_33;
          }
          (*(void (**)(uint64_t, uint64_t))(v284 + 8))(v166, v165);
          v168 += (unint64_t)v265;
          --v164;
          v142 = v279;
          v167 = (uint64_t)v275;
          if (!v164)
            goto LABEL_65;
        }
      }
      else
      {
LABEL_65:
        sub_1C07B2D8C(v167, 1, 1, v165);
      }
      swift_bridgeObjectRelease();
      swift_release();
      (*(void (**)(char *, uint64_t))(v267 + 8))(v142, v268);
      v81 = v282;
      v98 = v278;
LABEL_33:
      v103 = v283;
      v104 = sub_1C0CB5488((uint64_t)objc_msgSend(v283, sel_type));
      v105 = v280;
      v106 = (uint64_t *)(v81 + v280[13]);
      *v106 = v104;
      v106[1] = v107;
      swift_bridgeObjectRelease();
      v108 = sub_1C0CB7BC4((unsigned __int16)objc_msgSend(v103, sel_detectionType));
      v109 = (uint64_t *)(v81 + v105[15]);
      *v109 = v108;
      v109[1] = v110;
      swift_bridgeObjectRelease();
      v111 = sub_1C080E8C0(v103);
      if (v112)
      {
        v113 = sub_1C0CB553C(v111, v112);
        swift_bridgeObjectRelease();
        if (v113)
        {
          if (v113 >> 62)
          {
            _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
            v183 = sub_1C10709B4();
            swift_bridgeObjectRelease();
            if (v183)
            {
LABEL_37:
              sub_1C0783D0C(0, (v113 & 0xC000000000000001) == 0, v113);
              v278 = v98;
              if ((v113 & 0xC000000000000001) != 0)
                v114 = (id)MEMORY[0x1C3BA70DC](0, v113);
              else
                v114 = *(id *)(v113 + 32);
              v115 = v114;
              v116 = v272;
              v117 = v273;
              swift_bridgeObjectRelease();
              sub_1C07B2D8C(v116, 1, 1, v246);
              sub_1C106D030();
              sub_1C080ABC4(v245, v116 + v117[6], (uint64_t (*)(_QWORD))type metadata accessor for Source);
              sub_1C106DE70();
              v118 = (uint64_t *)(v272 + v117[8]);
              sub_1C106DF00();
              v119 = v117[10];
              v120 = v115;
              v121 = objc_msgSend(v115, sel_identifier);
              v122 = sub_1C106FB14();
              v124 = v123;

              *v118 = v122;
              v118[1] = v124;
              v125 = v272;
              *(_OWORD *)(v272 + v119) = xmmword_1C10B3010;
              v127 = sub_1C102F828(&v286);
              if (*v126)
              {
                v128 = v126;
                sub_1C07EA340();
                v129 = *(_QWORD *)(*v128 + 16);
                sub_1C07EAA3C();
                v130 = *v128;
                *(_QWORD *)(v130 + 16) = v129 + 1;
                sub_1C080ABC4(v125, v130 + v243 + v129 * v244, type metadata accessor for PHPersonStructs.IdentifierRelationshipType);
              }
              v127((uint64_t)&v286, 0);
              v131 = v115;
              v132 = objc_msgSend((id)objc_opt_self(), sel_stringFromContact_style_, v115, 0);
              if (v132)
              {
                v133 = v132;
                v134 = sub_1C106FB14();
                v136 = v135;

              }
              else
              {
                v134 = 0;
                v136 = 0;
              }
              v146 = objc_msgSend(v120, sel_identifier);
              v147 = sub_1C106FB14();
              v149 = v148;

              v150 = objc_msgSend(v283, sel_localIdentifier);
              v151 = sub_1C106FB14();
              v153 = v152;

              LOBYTE(v286) = 6;
              v154.value._countAndFlagsBits = v147;
              v154.value._object = v149;
              v155.value._countAndFlagsBits = v134;
              v155.value._object = v136;
              v156._countAndFlagsBits = v151;
              v156._object = v153;
              VisionKeyValueStore.store(entityIdentifier:name:relationship:visualIdentifier:association:confidence:)(v154, v155, (Swift::String_optional)0, v156, (IntelligencePlatformCore::AssociationType)&v286, 1.0);
              v98 = v157;
              if (v157)
              {

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                (*(void (**)(char *, uint64_t))(v284 + 8))(v281, v277);
                v32 = type metadata accessor for PHPersonStructs.IdentifierRelationshipType;
                sub_1C07B1F90(v272, type metadata accessor for PHPersonStructs.IdentifierRelationshipType);
                v158 = v276;
LABEL_85:
                sub_1C07B1F90(v158, type metadata accessor for PHPersonStructs.IdentifierRelationshipType);
                sub_1C07B1F90(v282, type metadata accessor for PHPersonStructs.Person);
                return (uint64_t)v32;
              }

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1C07B1F90(v272, type metadata accessor for PHPersonStructs.IdentifierRelationshipType);
              if (v136)
              {
                _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
                swift_bridgeObjectRelease();
                sub_1C07ACF80(&qword_1ED762CB0);
                v159 = swift_allocObject();
                *(_OWORD *)(v159 + 16) = v241;
                v160 = v134;
                *(_QWORD *)(v159 + 32) = v134;
                *(_QWORD *)(v159 + 40) = v136;
                *(_QWORD *)(v282 + v280[9]) = v159;
LABEL_80:
                v278 = v98;
                swift_bridgeObjectRelease();
                v190 = v283;
                v191 = objc_msgSend(v283, sel_localIdentifier);
                v192 = sub_1C106FB14();
                v194 = v193;

                if (!v136)
                {
                  v195 = v190;
                  v160 = sub_1C0CB7EF0();
                  v136 = v196;

                }
                v197 = objc_msgSend(v190, sel_localIdentifier);
                v198 = sub_1C106FB14();
                v200 = v199;

                LOBYTE(v286) = 0;
                v201.value._countAndFlagsBits = v192;
                v201.value._object = v194;
                v202.value._countAndFlagsBits = v160;
                v202.value._object = v136;
                v203._countAndFlagsBits = v198;
                v203._object = v200;
                v32 = v270;
                VisionKeyValueStore.store(entityIdentifier:name:relationship:visualIdentifier:association:confidence:)(v201, v202, (Swift::String_optional)0, v203, (IntelligencePlatformCore::AssociationType)&v286, 1.0);
                if (v204)
                {
                  (*(void (**)(char *, uint64_t))(v284 + 8))(v281, v277);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
LABEL_84:
                  v158 = v276;
                  goto LABEL_85;
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v81 = v282;
                v215 = v254;
                sub_1C080ABC4(v282, v254, type metadata accessor for PHPersonStructs.Person);
                sub_1C07DA578();
                v217 = v216;
                sub_1C07B1F90(v215, type metadata accessor for PHPersonStructs.Person);
                v218 = v280[17];
                swift_bridgeObjectRelease();
                *(_QWORD *)(v81 + v218) = v217;
                sub_1C1033334();
                v219 = v255;
                sub_1C080ABC4(v81, v255, type metadata accessor for PHPersonStructs.Person);
                v220 = objc_msgSend(v190, sel_localIdentifier);
                sub_1C106FB14();

                v221 = *(_QWORD *)(v247 + 8);
                v286 = *(id *)v247;
                v287 = v221;
                _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
                sub_1C106FC94();
                sub_1C106FC94();
                swift_bridgeObjectRelease();
                v222 = (uint64_t)v286;
                LOBYTE(v286) = 1;
                v223 = sub_1C102F878(v222, v287, (unint64_t)&v286);
                v224 = v284;
                v32 = (uint64_t (*)(uint64_t))v223;
                swift_bridgeObjectRelease();
                sub_1C07B1F90(v219, type metadata accessor for PHPersonStructs.Person);
                (*(void (**)(char *, uint64_t))(v224 + 8))(v281, v277);
LABEL_100:
                sub_1C07B1F90(v276, type metadata accessor for PHPersonStructs.IdentifierRelationshipType);
                sub_1C07B1F90(v81, type metadata accessor for PHPersonStructs.Person);
                return (uint64_t)v32;
              }
              goto LABEL_105;
            }
          }
          else if (*(_QWORD *)((v113 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            goto LABEL_37;
          }
          swift_bridgeObjectRelease();
        }
      }
      if ((*(_BYTE *)(v266 + *(int *)(type metadata accessor for Configuration() + 20) + 11) & 0x10) != 0)
      {
        if (qword_1ED762B18 != -1)
          swift_once();
        v206 = sub_1C106F544();
        sub_1C079E000(v206, (uint64_t)qword_1ED762AF8);
        v207 = sub_1C106F538();
        v208 = sub_1C1070378();
        if (os_log_type_enabled(v207, v208))
        {
          v209 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v209 = 0;
          _os_log_impl(&dword_1C0771000, v207, v208, "Feature flag for KG ingestion of AutonamingMessages enabled", v209, 2u);
          MEMORY[0x1C3BA8270](v209, -1, -1);
        }

        if (!v261)
        {
          swift_bridgeObjectRelease();
          v225 = sub_1C106F538();
          v226 = sub_1C1070390();
          if (os_log_type_enabled(v225, v226))
          {
            v227 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v227 = 0;
            _os_log_impl(&dword_1C0771000, v225, v226, "autonamingMessageInferenceStream should be non-null for iOS/ macOS.", v227, 2u);
            MEMORY[0x1C3BA8270](v227, -1, -1);
          }

          (*(void (**)(char *, uint64_t))(v284 + 8))(v281, v277);
          v32 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEE9D8];
          goto LABEL_100;
        }
        v210 = v261;
        sub_1C0CB7CA4(v210, v260, (uint64_t)v288);
        sub_1C080AD78((uint64_t)v288, (uint64_t)v289, &qword_1EF646EF0);
        if (v290)
        {
          v211 = v291;
          v213 = v292;
          v212 = v293;
          v278 = v98;
          v279 = v294;
          v274 = v296;
          v275 = v295;
          v273 = v297;
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v212)
          {
            v272 = v213;
            v214 = v283;
          }
          else
          {
            v214 = v283;
            v228 = v283;
            v229 = objc_msgSend(v228, sel_localIdentifier);
            v272 = sub_1C106FB14();
            v212 = v230;

          }
          v231 = objc_msgSend(v214, sel_localIdentifier);
          v232 = sub_1C106FB14();
          v234 = v233;

          LOBYTE(v286) = 2;
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v235 = v211;
          v236.value._countAndFlagsBits = v272;
          v237.value._object = v273;
          v236.value._object = v212;
          v238.value._countAndFlagsBits = (uint64_t)v279;
          v237.value._countAndFlagsBits = v274;
          v238.value._object = v275;
          v239._countAndFlagsBits = v232;
          v239._object = v234;
          v32 = v270;
          VisionKeyValueStore.store(entityIdentifier:name:relationship:visualIdentifier:association:confidence:)(v236, v238, v237, v239, (IntelligencePlatformCore::AssociationType)&v286, v235);
          v98 = v240;
          if (v240)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            sub_1C0CBA644(v288);
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v284 + 8))(v281, v277);
            goto LABEL_84;
          }

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1C0CBA644(v288);
          v134 = 0;
LABEL_105:
          v81 = v282;
          goto LABEL_79;
        }

      }
      else
      {
        if (qword_1ED762B18 != -1)
          swift_once();
        v184 = sub_1C106F544();
        sub_1C079E000(v184, (uint64_t)qword_1ED762AF8);
        v185 = sub_1C106F538();
        v186 = sub_1C1070378();
        if (os_log_type_enabled(v185, v186))
        {
          v187 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v187 = 0;
          _os_log_impl(&dword_1C0771000, v185, v186, "Feature flag for KG ingestion of AutonamingMessages disabled.", v187, 2u);
          MEMORY[0x1C3BA8270](v187, -1, -1);
        }

      }
      v134 = 0;
LABEL_79:
      v160 = v134;
      sub_1C08A2E2C();
      v189 = v188;
      swift_bridgeObjectRelease();
      v136 = 0;
      *(_QWORD *)(v81 + v280[9]) = v189;
      goto LABEL_80;
    }
    swift_bridgeObjectRelease();
    sub_1C0784B6C((uint64_t)v32, &qword_1ED762CE0);
  }
  result = sub_1C1070954();
  __break(1u);
  return result;
}

uint64_t sub_1C0CB7554()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  int v28;
  int v29;
  char *v30;
  void (*v31)(char *, uint64_t);
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t);
  char *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  void (*v54)(char *, uint64_t, uint64_t, double);
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unsigned __int16 v63;
  unsigned __int16 v64;
  uint64_t v65;

  v0 = sub_1C106AE28();
  v47 = *(_QWORD *)(v0 - 8);
  v48 = v0;
  MEMORY[0x1E0C80A78](v0);
  v59 = (char *)&v47 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1C106CC64();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v57 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v58 = (char *)&v47 - v6;
  MEMORY[0x1E0C80A78](v7);
  v49 = (char *)&v47 - v8;
  v9 = sub_1C106CC34();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v56 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v47 - v14;
  v16 = *MEMORY[0x1E0DC7298];
  v54 = *(void (**)(char *, uint64_t, uint64_t, double))(v10 + 104);
  v54((char *)&v47 - v14, v16, v9, v13);
  v17 = sub_1C106CC28();
  v18 = *(void (**)(char *, uint64_t))(v10 + 8);
  v55 = v15;
  v53 = v18;
  v18(v15, v9);
  result = v17;
  v20 = MEMORY[0x1E0DEE9D8];
  v65 = MEMORY[0x1E0DEE9D8];
  v21 = *(_QWORD *)(v17 + 16);
  v61 = v3;
  v62 = v2;
  v52 = v21;
  if (v21)
  {
    v22 = 0;
    v50 = *MEMORY[0x1E0DC72A8];
    v23 = v49;
    v51 = result;
    while (v22 < *(_QWORD *)(result + 16))
    {
      v24 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
      v60 = *(_QWORD *)(v3 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v23, result + v24 + v60 * v22, v2);
      v25 = v2;
      v26 = v55;
      sub_1C106CC4C();
      v27 = v56;
      ((void (*)(char *, _QWORD, uint64_t))v54)(v56, v50, v9);
      sub_1C0794BAC(&qword_1ED750658, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC72C0], MEMORY[0x1E0DC72D8]);
      sub_1C106FE44();
      sub_1C106FE44();
      v28 = v64;
      v29 = v63;
      v30 = v27;
      v31 = v53;
      v53(v30, v9);
      v31(v26, v9);
      if (v28 == v29)
      {
        v32 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
        v32(v57, v23, v25);
        v33 = v65;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C09D4C04();
          v33 = v65;
        }
        v34 = *(_QWORD *)(v33 + 16);
        if (v34 >= *(_QWORD *)(v33 + 24) >> 1)
        {
          sub_1C09D4C04();
          v33 = v65;
        }
        *(_QWORD *)(v33 + 16) = v34 + 1;
        v35 = v33 + v24 + v34 * v60;
        v2 = v62;
        v32((char *)v35, v57, v62);
        v65 = v33;
        v3 = v61;
        v23 = v49;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v3 + 8))(v23, v25);
        v2 = v25;
      }
      ++v22;
      result = v51;
      if (v52 == v22)
      {
        v36 = v65;
        v38 = v47;
        v37 = v48;
        v20 = MEMORY[0x1E0DEE9D8];
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
    v36 = MEMORY[0x1E0DEE9D8];
    v38 = v47;
    v37 = v48;
LABEL_14:
    swift_bridgeObjectRelease();
    v39 = *(_QWORD *)(v36 + 16);
    if (v39)
    {
      v65 = v20;
      sub_1C09D4BD0();
      v40 = v3;
      v41 = v36 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
      v42 = *(_QWORD *)(v40 + 72);
      v43 = *(void (**)(char *, uint64_t, uint64_t))(v40 + 16);
      do
      {
        v44 = v58;
        v45 = v62;
        v43(v58, v41, v62);
        sub_1C106CC40();
        (*(void (**)(char *, uint64_t))(v61 + 8))(v44, v45);
        v20 = v65;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C09D4BD0();
          v20 = v65;
        }
        v46 = *(_QWORD *)(v20 + 16);
        if (v46 >= *(_QWORD *)(v20 + 24) >> 1)
        {
          sub_1C09D4BD0();
          v20 = v65;
        }
        *(_QWORD *)(v20 + 16) = v46 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v38 + 32))(v20+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(_QWORD *)(v38 + 72) * v46, v59, v37);
        v65 = v20;
        v41 += v42;
        --v39;
      }
      while (v39);
    }
    swift_release();
    return v20;
  }
  return result;
}

uint64_t sub_1C0CB7A18(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  _QWORD v16[2];

  v16[1] = a1;
  v3 = sub_1C106AE28();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 >> 62)
    goto LABEL_14;
  v7 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  for (; v7; v7 = sub_1C10709B4())
  {
    v8 = 4;
    while (1)
    {
      v9 = (a2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C3BA70DC](v8 - 4, a2) : *(id *)(a2 + 8 * v8);
      v10 = v9;
      v11 = v8 - 3;
      if (__OFADD__(v8 - 4, 1))
        break;
      v12 = objc_msgSend(v9, sel_uuid);
      sub_1C106AE10();

      LOBYTE(v12) = sub_1C106AE04();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      if ((v12 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v14 = objc_msgSend(v10, sel_name);
        v13 = sub_1C106FB14();

        return v13;
      }

      ++v8;
      if (v11 == v7)
        goto LABEL_10;
    }
    __break(1u);
LABEL_14:
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
LABEL_10:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1C0CB7BC4(unsigned __int16 a1)
{
  int v1;
  uint64_t result;

  v1 = a1;
  result = 0x6E776F6E6B6E75;
  switch(v1)
  {
    case 0:
      return result;
    case 1:
      result = 0x6E616D7568;
      break;
    case 2:
      result = 7628144;
      break;
    case 3:
      result = 6778724;
      break;
    case 4:
      result = 7627107;
      break;
    default:
      result = sub_1C1070954();
      __break(1u);
      break;
  }
  return result;
}

void sub_1C0CB7CA4(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  void *v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34[9];
  _OWORD v35[7];
  uint64_t v36;
  _QWORD __src[9];
  _QWORD __dst[9];

  v4 = v3;
  sub_1C0CB7F38(a1, a2, (uint64_t)v34);
  sub_1C080AD78((uint64_t)v34, (uint64_t)__src, qword_1EF646EF8);
  if (!__src[7])
  {
    v18 = 0;
    v19 = 0uLL;
    v20 = 0uLL;
    v21 = 0uLL;
    v22 = 0uLL;
    v23 = 0uLL;
    v24 = 0uLL;
    v25 = 0uLL;
    goto LABEL_19;
  }
  memcpy(__dst, __src, sizeof(__dst));
  v6 = __dst[3];
  if (!__dst[3]
    || (v7 = __dst[2],
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0(),
        v8 = sub_1C0CB553C(v7, v6),
        swift_bridgeObjectRelease(),
        !v8))
  {
    v9 = 0;
    goto LABEL_11;
  }
  if (v8 >> 62)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v9 = (void *)sub_1C10709B4();
    swift_bridgeObjectRelease();
    if (v9)
      goto LABEL_6;
  }
  else
  {
    v9 = *(void **)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v9)
    {
LABEL_6:
      sub_1C0783D0C(0, (v8 & 0xC000000000000001) == 0, v8);
      if ((v8 & 0xC000000000000001) != 0)
        v10 = (id)MEMORY[0x1C3BA70DC](0, v8);
      else
        v10 = *(id *)(v8 + 32);
      v9 = v10;
    }
  }
  swift_bridgeObjectRelease();
LABEL_11:
  v11 = MEMORY[0x1E0DEE9E8];
  v33 = MEMORY[0x1E0DEE9E8];
  v12 = sub_1C09D01AC(v4);
  if (v13)
  {
    v14 = HIBYTE(v13) & 0xF;
    if ((v13 & 0x2000000000000000) == 0)
      v14 = v12 & 0xFFFFFFFFFFFFLL;
    if (v14)
    {
      v15 = sub_1C106FB68();
      v17 = v16;
      swift_bridgeObjectRelease();
      sub_1C0A7D28C((uint64_t)v35, v15, v17);
      swift_bridgeObjectRelease();
      v11 = v33;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  sub_1C0CB8514((uint64_t)__dst, v9, v11, (uint64_t)v35);
  v31 = v35[1];
  v32 = v35[0];
  v29 = v35[3];
  v30 = v35[2];
  v27 = v35[5];
  v28 = v35[4];
  v26 = v35[6];
  v18 = v36;
  swift_bridgeObjectRelease();

  sub_1C0CBA718(v34);
  v25 = v26;
  v24 = v27;
  v23 = v28;
  v22 = v29;
  v21 = v30;
  v20 = v31;
  v19 = v32;
LABEL_19:
  *(_OWORD *)a3 = v19;
  *(_OWORD *)(a3 + 16) = v20;
  *(_OWORD *)(a3 + 32) = v21;
  *(_OWORD *)(a3 + 48) = v22;
  *(_OWORD *)(a3 + 64) = v23;
  *(_OWORD *)(a3 + 80) = v24;
  *(_OWORD *)(a3 + 96) = v25;
  *(_QWORD *)(a3 + 112) = v18;
}

uint64_t sub_1C0CB7EF0()
{
  void *v0;
  uint64_t result;
  unint64_t v2;
  uint64_t v3;

  result = sub_1C09D01AC(v0);
  if (!v2)
    return 0;
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = result & 0xFFFFFFFFFFFFLL;
  if (!v3)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

uint64_t sub_1C0CB7F38@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *v3;
  void *v4;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  _QWORD *v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  uint64_t v45;
  uint64_t v46;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  double v54;
  double v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t result;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  id v66;
  uint64_t aBlock;
  uint64_t v68;
  uint64_t (*v69)();
  void *v70;
  uint64_t (*v71)(_QWORD);
  _QWORD *v72;
  uint64_t v73;

  v4 = v3;
  v6 = (void *)MEMORY[0x1C3BA79F4]();
  v66 = objc_msgSend(a1, sel_publisher);
  objc_autoreleasePoolPop(v6);
  v73 = MEMORY[0x1E0DEE9E8];
  v7 = sub_1C09D01AC(v4);
  if (v8)
  {
    v9 = HIBYTE(v8) & 0xF;
    if ((v8 & 0x2000000000000000) == 0)
      v9 = v7 & 0xFFFFFFFFFFFFLL;
    if (v9)
    {
      v10 = sub_1C106FB68();
      v12 = v11;
      swift_bridgeObjectRelease();
      sub_1C0A7D28C((uint64_t)&aBlock, v10, v12);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_1C106F97C();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = sub_1C106F97C();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_1C106F97C();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = 0;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v4;
  v71 = (uint64_t (*)(_QWORD))sub_1C0CBA840;
  v72 = (_QWORD *)v17;
  v18 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v68 = 1107296256;
  v69 = (uint64_t (*)())sub_1C0808508;
  v70 = &unk_1E7A29FA0;
  v19 = _Block_copy(&aBlock);
  v20 = v4;
  swift_release();
  v21 = objc_msgSend(v66, sel_filterWithIsIncluded_, v19);
  _Block_release(v19);
  v71 = nullsub_1;
  v72 = 0;
  aBlock = v18;
  v68 = 1107296256;
  v69 = sub_1C07BF90C;
  v70 = &unk_1E7A29FC8;
  v22 = _Block_copy(&aBlock);
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = v20;
  v23[3] = v13;
  v23[4] = v15;
  v23[5] = v14;
  v23[6] = v16;
  v71 = (uint64_t (*)(_QWORD))sub_1C0CBA894;
  v72 = v23;
  aBlock = v18;
  v68 = 1107296256;
  v69 = (uint64_t (*)())sub_1C0779530;
  v70 = &unk_1E7A2A018;
  v24 = _Block_copy(&aBlock);
  v25 = v20;
  swift_retain();
  swift_retain();
  swift_retain();
  v63 = v16;
  swift_retain();
  swift_release();
  v26 = objc_msgSend(v21, sel_sinkWithCompletion_receiveInput_, v22, v24);
  _Block_release(v24);
  _Block_release(v22);

  swift_beginAccess();
  v27 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v60 = sub_1C0CB8EB4(v27);
  v29 = v28;
  v31 = v30;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v32 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v61 = sub_1C0CB8EB4(v32);
  v34 = v33;
  v36 = v35;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v37 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v62 = v25;
  v38 = sub_1C0CB8EB4(v37);
  v40 = v39;
  v42 = v41;
  swift_bridgeObjectRelease();
  v43 = (double)a2 * 0.8;
  if (v43 >= (double)v31 || v31 < a2)
  {
    swift_bridgeObjectRelease();
    v46 = 0;
    v45 = 0;
  }
  else
  {
    v45 = v29;
    v46 = v60;
  }
  if (v43 >= (double)v36 || v36 < a2)
  {
    swift_bridgeObjectRelease();
    v61 = 0;
    v34 = 0;
  }
  v48 = v43 >= (double)v42 || v42 < a2;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  if (v48)
  {
    swift_bridgeObjectRelease();
    v49 = 0;
    v40 = 0;
  }
  else
  {
    v49 = v38;
  }
  v50 = v45;
  if (v45 || v34 || v40)
  {
    if (*(_QWORD *)(*(_QWORD *)(v15 + 16) + 16))
      v55 = 0.1;
    else
      v55 = 0.0;
    swift_beginAccess();
    v56 = *(_QWORD *)(v63 + 16);
    if (v56 >= 10)
      v56 = 10;
    v54 = v55 + (double)v56 / 10.0 * 0.85;
    v57 = objc_msgSend(v62, sel_localIdentifier);
    v52 = sub_1C106FB14();
    v53 = v58;
    swift_release();

    swift_bridgeObjectRelease();
    v51 = v61;
  }
  else
  {
    swift_release();

    v46 = 0;
    v50 = 0;
    v51 = 0;
    v34 = 0;
    v49 = 0;
    v52 = 0;
    v53 = 0;
    v54 = 0.0;
  }
  swift_release();
  swift_release();
  result = swift_release();
  *(_QWORD *)a3 = v46;
  *(_QWORD *)(a3 + 8) = v50;
  *(_QWORD *)(a3 + 16) = v51;
  *(_QWORD *)(a3 + 24) = v34;
  *(_QWORD *)(a3 + 32) = v49;
  *(_QWORD *)(a3 + 40) = v40;
  *(_QWORD *)(a3 + 48) = v52;
  *(_QWORD *)(a3 + 56) = v53;
  *(double *)(a3 + 64) = v54;
  return result;
}

void sub_1C0CB8514(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t inited;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _BYTE v36[16];
  uint64_t v37;
  uint64_t v38;

  v6 = *(_QWORD *)a1;
  v7 = *(_OWORD *)(a1 + 8);
  v32 = *(_OWORD *)(a1 + 40);
  v33 = *(_OWORD *)(a1 + 24);
  v35 = *(_QWORD *)(a1 + 56);
  v8 = *(_QWORD *)(a1 + 64);
  v34 = v7;
  if (a2)
  {
    v9 = a2;
    v10 = objc_msgSend(v9, sel_identifier);
    v11 = sub_1C106FB14();
    v13 = v12;

    v14 = objc_msgSend((id)objc_opt_self(), sel_stringFromContact_style_, v9, 0);
    if (v14)
    {
      v15 = v14;
      v16 = sub_1C106FB14();
      v18 = v17;

    }
    else
    {

      v16 = 0;
      v18 = 0;
    }
    v26 = *(_QWORD *)(a1 + 32);
    v25 = *(_QWORD *)(a1 + 40);
    v27 = v8;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0CBA7AC(a1);
    goto LABEL_16;
  }
  v18 = v7;
  if ((_QWORD)v7)
  {
    v19 = BYTE7(v7) & 0xF;
    if ((v7 & 0x2000000000000000) == 0)
      v19 = v6 & 0xFFFFFFFFFFFFLL;
    if (v19)
    {
      sub_1C07ACF80(&qword_1ED762CB0);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C1079220;
      *(_QWORD *)(inited + 32) = sub_1C106FB68();
      *(_QWORD *)(inited + 40) = v22;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C0898D28(inited);
      v24 = sub_1C0C30C8C(a3, v23);
      swift_bridgeObjectRelease();
      if ((v24 & 1) == 0 || !*(_QWORD *)(a3 + 16))
      {
        v26 = *(_QWORD *)(a1 + 32);
        v25 = *(_QWORD *)(a1 + 40);
        v27 = v8;
        sub_1C0CBA7AC(a1);
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v11 = 0;
        v13 = 0;
        v16 = v6;
        goto LABEL_16;
      }
      swift_bridgeObjectRelease();
    }
  }
  sub_1C080AD78(a1 + 32, (uint64_t)v36, &qword_1ED762B50);
  sub_1C080AD78((uint64_t)v36, (uint64_t)&v37, &qword_1ED762B50);
  v25 = v38;
  if (!v38)
  {
    v6 = 0;
    v28 = 0;
    v27 = 0;
    v11 = 0;
    v13 = 0;
    v16 = 0;
    v18 = 0;
    v26 = 0;
LABEL_21:
    v29 = 0uLL;
    v30 = 0uLL;
    v31 = 0uLL;
    goto LABEL_17;
  }
  if (!v18)
  {
    v6 = 0;
    v28 = 0;
    v27 = 0;
    v11 = 0;
    v13 = 0;
    v16 = 0;
    v26 = 0;
    v25 = 0;
    goto LABEL_21;
  }
  v26 = v37;
  v27 = v8;
  sub_1C0CBA7AC(a1);
  sub_1C07B35DC((uint64_t)v36);
  v11 = 0;
  v13 = 0;
  v16 = 0;
  v18 = 0;
LABEL_16:
  v28 = v35;
  v30 = v33;
  v29 = v34;
  v31 = v32;
LABEL_17:
  *(_QWORD *)a4 = v6;
  *(_OWORD *)(a4 + 8) = v29;
  *(_OWORD *)(a4 + 24) = v30;
  *(_OWORD *)(a4 + 40) = v31;
  *(_QWORD *)(a4 + 56) = v28;
  *(_QWORD *)(a4 + 64) = v27;
  *(_QWORD *)(a4 + 72) = v11;
  *(_QWORD *)(a4 + 80) = v13;
  *(_QWORD *)(a4 + 88) = v16;
  *(_QWORD *)(a4 + 96) = v18;
  *(_QWORD *)(a4 + 104) = v26;
  *(_QWORD *)(a4 + 112) = v25;
}

uint64_t sub_1C0CB87C4(void *a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = objc_msgSend(a1, sel_eventBody);
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, sel_photosPersonIdentifier);
    if (v5)
    {
      v6 = v5;
      v7 = sub_1C106FB14();
      v9 = v8;

    }
    else
    {
      v7 = 0;
      v9 = 0;
    }
    v11 = objc_msgSend(a2, sel_localIdentifier);
    v12 = sub_1C106FB14();
    v14 = v13;

    if (v9)
    {
      if (v7 == v12 && v9 == v14)
        v10 = 1;
      else
        v10 = sub_1C1070CB4();
      swift_bridgeObjectRelease();
    }
    else
    {
      v10 = 0;
    }
    swift_bridgeObjectRelease();

  }
  else
  {
    v10 = 0;
  }
  return v10 & 1;
}

void sub_1C0CB88CC(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  id v23;
  void *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  void (*v41)(_QWORD *@<X8>);
  id v42;
  void *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  unint64_t v51;
  char v52;
  unint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(_QWORD *@<X8>);
  id v60;
  void *v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  unint64_t v69;
  char v70;
  unint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(_QWORD *@<X8>);
  uint64_t v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;

  v11 = objc_msgSend(a1, sel_eventBody);
  if (v11)
  {
    v79 = v11;
    v12 = objc_msgSend(v11, sel_photosPersonIdentifier);
    if (!v12)
    {
LABEL_8:

      return;
    }
    v13 = v12;
    v78 = a6;
    v14 = sub_1C106FB14();
    v16 = v15;

    v17 = objc_msgSend(a2, sel_localIdentifier);
    v18 = sub_1C106FB14();
    v20 = v19;

    if (v14 == v18 && v16 == v20)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v22 = sub_1C1070CB4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v22 & 1) == 0)
        goto LABEL_8;
    }
    v23 = objc_msgSend(v79, sel_inferredName);
    if (v23)
    {
      v24 = v23;
      v25 = (uint64_t *)(a3 + 16);
      v26 = sub_1C106FB14();
      v28 = v27;

      swift_beginAccess();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      swift_isUniquelyReferenced_nonNull_native();
      v29 = *v25;
      v80 = *v25;
      *v25 = 0x8000000000000000;
      v30 = sub_1C077D774(v26, v28);
      if (__OFADD__(*(_QWORD *)(v29 + 16), (v31 & 1) == 0))
      {
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
      v32 = v30;
      v33 = v31;
      sub_1C07ACF80(&qword_1ED75D860);
      if ((sub_1C107090C() & 1) != 0)
      {
        v34 = sub_1C077D774(v26, v28);
        if ((v33 & 1) != (v35 & 1))
          goto LABEL_50;
        v32 = v34;
      }
      *v25 = v80;
      swift_bridgeObjectRelease();
      v36 = *v25;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      if ((v33 & 1) == 0)
      {
        sub_1C077CA78(v32, v26, v28, 0, v36);
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      }
      v37 = *(_QWORD *)(v36 + 56);
      v38 = *(_QWORD *)(v37 + 8 * v32);
      v39 = __OFADD__(v38, 1);
      v40 = v38 + 1;
      if (v39)
        goto LABEL_45;
      *(_QWORD *)(v37 + 8 * v32) = v40;
      swift_endAccess();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      v41 = sub_1C07DC9B0;
    }
    else
    {
      v41 = 0;
    }
    v42 = objc_msgSend(v79, sel_inferredContactIdentifier);
    if (v42)
    {
      v43 = v42;
      v44 = (uint64_t *)(a4 + 16);
      v45 = sub_1C106FB14();
      v47 = v46;

      swift_beginAccess();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      swift_isUniquelyReferenced_nonNull_native();
      v48 = *v44;
      v81 = *v44;
      *v44 = 0x8000000000000000;
      v49 = sub_1C077D774(v45, v47);
      if (__OFADD__(*(_QWORD *)(v48 + 16), (v50 & 1) == 0))
      {
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
        goto LABEL_48;
      }
      v51 = v49;
      v52 = v50;
      sub_1C07ACF80(&qword_1ED75D860);
      if ((sub_1C107090C() & 1) != 0)
      {
        v53 = sub_1C077D774(v45, v47);
        if ((v52 & 1) != (v54 & 1))
          goto LABEL_50;
        v51 = v53;
      }
      *v44 = v81;
      swift_bridgeObjectRelease();
      v55 = *v44;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      if ((v52 & 1) == 0)
      {
        sub_1C077CA78(v51, v45, v47, 0, v55);
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      }
      v56 = *(_QWORD *)(v55 + 56);
      v57 = *(_QWORD *)(v56 + 8 * v51);
      v39 = __OFADD__(v57, 1);
      v58 = v57 + 1;
      if (v39)
        goto LABEL_47;
      *(_QWORD *)(v56 + 8 * v51) = v58;
      swift_endAccess();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      v59 = sub_1C07DC9B0;
    }
    else
    {
      v59 = 0;
    }
    v60 = objc_msgSend(v79, sel_inferredRelationshipToDeviceOwner);
    if (!v60)
    {

      v77 = 0;
LABEL_40:
      swift_beginAccess();
      if (!__OFADD__(*(_QWORD *)(v78 + 16), 1))
      {
        ++*(_QWORD *)(v78 + 16);
        sub_1C077AB58((uint64_t)v41);
        sub_1C077AB58((uint64_t)v59);
        sub_1C077AB58((uint64_t)v77);
        return;
      }
      __break(1u);
      goto LABEL_44;
    }
    v61 = v60;
    v62 = (uint64_t *)(a5 + 16);
    v63 = sub_1C106FB14();
    v65 = v64;

    swift_beginAccess();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_isUniquelyReferenced_nonNull_native();
    v66 = *v62;
    v82 = *v62;
    *v62 = 0x8000000000000000;
    v67 = sub_1C077D774(v63, v65);
    if (__OFADD__(*(_QWORD *)(v66 + 16), (v68 & 1) == 0))
    {
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
      goto LABEL_50;
    }
    v69 = v67;
    v70 = v68;
    sub_1C07ACF80(&qword_1ED75D860);
    if ((sub_1C107090C() & 1) == 0)
    {
LABEL_35:
      *v62 = v82;
      swift_bridgeObjectRelease();
      v73 = *v62;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      if ((v70 & 1) == 0)
      {
        sub_1C077CA78(v69, v63, v65, 0, v73);
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      }
      v74 = *(_QWORD *)(v73 + 56);
      v75 = *(_QWORD *)(v74 + 8 * v69);
      v39 = __OFADD__(v75, 1);
      v76 = v75 + 1;
      if (v39)
        goto LABEL_49;
      *(_QWORD *)(v74 + 8 * v69) = v76;
      swift_endAccess();
      swift_bridgeObjectRelease_n();

      swift_bridgeObjectRelease();
      v77 = sub_1C07DC9B0;
      goto LABEL_40;
    }
    v71 = sub_1C077D774(v63, v65);
    if ((v70 & 1) == (v72 & 1))
    {
      v69 = v71;
      goto LABEL_35;
    }
LABEL_50:
    sub_1C1070D44();
    __break(1u);
  }
}

uint64_t sub_1C0CB8EB4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;

  v2 = a1 + 64;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v8 = 0;
  v9 = 0;
  v10 = 0;
  while (v5)
  {
    v11 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    v12 = v11 | (v10 << 6);
LABEL_22:
    v16 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v12);
    if (v8 < v16)
    {
      v9 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v12);
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      result = swift_bridgeObjectRelease();
      v8 = v16;
    }
  }
  v13 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v13 >= v6)
    goto LABEL_24;
  v14 = *(_QWORD *)(v2 + 8 * v13);
  ++v10;
  if (v14)
    goto LABEL_21;
  v10 = v13 + 1;
  if (v13 + 1 >= v6)
    goto LABEL_24;
  v14 = *(_QWORD *)(v2 + 8 * v10);
  if (v14)
    goto LABEL_21;
  v10 = v13 + 2;
  if (v13 + 2 >= v6)
    goto LABEL_24;
  v14 = *(_QWORD *)(v2 + 8 * v10);
  if (v14)
    goto LABEL_21;
  v10 = v13 + 3;
  if (v13 + 3 >= v6)
    goto LABEL_24;
  v14 = *(_QWORD *)(v2 + 8 * v10);
  if (v14)
  {
LABEL_21:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v10 << 6);
    goto LABEL_22;
  }
  v15 = v13 + 4;
  if (v15 >= v6)
  {
LABEL_24:
    swift_release();
    return v9;
  }
  v14 = *(_QWORD *)(v2 + 8 * v15);
  if (v14)
  {
    v10 = v15;
    goto LABEL_21;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v6)
      goto LABEL_24;
    v14 = *(_QWORD *)(v2 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_21;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1C0CB9048()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[5] = v0;
  v2 = sub_1C106AB28();
  v1[6] = v2;
  v1[7] = *(_QWORD *)(v2 - 8);
  v1[8] = swift_task_alloc();
  v1[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C0CB90B8()
{
  _QWORD *v0;
  void *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(void);
  void *v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  id v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  void *v89;
  uint64_t v90;
  _QWORD *v91;

  v1 = (void *)sub_1C106FAF0();
  v2 = sub_1C08C14FC(v1);

  if ((v2 & 1) != 0)
  {
    v4 = v0[8];
    v3 = v0[9];
    v5 = v0[6];
    v6 = v0[7];
    v7 = sub_1C0780678();
    *(_QWORD *)(v7 + 16) = 0;
    v8 = sub_1C0780678();
    *(_QWORD *)(v8 + 16) = 0;
    v91 = (_QWORD *)(v8 + 16);
    v78 = (id)objc_opt_self();
    v9 = objc_msgSend(v78, sel_systemPhotoLibraryURL);
    sub_1C106AAF8();

    sub_1C07D4B70(0, (unint64_t *)&unk_1ED758D80);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v3, v5);
    v10 = sub_1C0CAC948();
    v11 = objc_msgSend((id)objc_opt_self(), sel_fetchOptionsWithInclusiveDefaultsForPhotoLibrary_, v10);
    if (v11)
    {
      v12 = v11;
      v85 = v10;
      v88 = (uint64_t *)(v7 + 16);
      v90 = v8;
      v13 = v0[5];
      sub_1C07ACF80(&qword_1ED762CD0);
      v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1C107B050;
      sub_1C07D4B70(0, (unint64_t *)&qword_1ED762C00);
      v15 = v12;
      *(_QWORD *)(v14 + 32) = sub_1C1070504();
      *(_QWORD *)(v14 + 40) = sub_1C1070504();
      sub_1C106FF28();
      sub_1C0CBA304(v14, v15);
      objc_msgSend(v15, sel_setPersonContext_, 1);
      v89 = v15;
      v16 = objc_msgSend((id)objc_opt_self(), sel_fetchPersonsWithOptions_, v15);
      v17 = sub_1C0780678();
      *(_QWORD *)(v17 + 16) = 0;
      v18 = objc_msgSend((id)BiomeLibrary(), sel_Autonaming);
      sub_1C07914B4();
      v19 = objc_msgSend(v15, sel_Messages);
      swift_unknownObjectRelease();
      v20 = objc_msgSend(v19, sel_Inferences);
      sub_1C07914B4();
      *(_QWORD *)(v17 + 16) = v15;
      v21 = v7;
      v22 = sub_1C0780678();
      *(_QWORD *)(v22 + 16) = 0;
      v23 = (id *)(v22 + 16);
      v24 = swift_allocObject();
      *(_BYTE *)(v24 + 16) = 0;
      sub_1C078A314();
      v25 = (_QWORD *)swift_task_alloc();
      v25[2] = v16;
      v25[3] = v13;
      v25[4] = v22;
      v25[5] = v24;
      v26 = MEMORY[0x1E0DEE9D8];
      v25[6] = v21;
      v25[7] = v26;
      v25[8] = v17;
      v25[9] = v90;
      GraphStore.tripleInsertingTransaction(transactionBody:)();
      v75 = v16;
      swift_task_dealloc();
      v38 = (void *)sub_1C106AAB0();
      objc_msgSend(v78, sel_unsafeShutdownLibraryWithPhotoLibraryURL_, v38);

      swift_beginAccess();
      v39 = v0[5];
      if (*v23)
      {
        v40 = *v23;
        swift_willThrow();

        sub_1C079B408(v41, v42, v43, v44, v45, v46, v47, v48, v72, (uint64_t)v75, (uint64_t)v78, v22, v17, v85);
        sub_1C078FA78();
        swift_release();
        swift_release();
        swift_release();
        sub_1C07A4B0C(v39, v49, v50, v51, v52, v53, v54, v55, v73, v76, (uint64_t)v79, v81, v83, v86, v88, v21, (uint64_t)v89, v90, v91);
        swift_release();
        swift_release();
        swift_task_dealloc();
        swift_task_dealloc();
        v37 = (uint64_t (*)(void))v0[1];
        return v37();
      }
      sub_1C106AC6C();
      sub_1C088B730();

      sub_1C079B408(v57, v58, v59, v60, v61, v62, v63, v64, v72, (uint64_t)v75, (uint64_t)v78, v22, v17, v85);
      sub_1C078FA78();
      swift_release();
      swift_release();
      swift_release();
      sub_1C07A4B0C(v39, v65, v66, v67, v68, v69, v70, v71, v74, v77, (uint64_t)v80, v82, v84, v87, v88, v21, (uint64_t)v89, v90, v91);
      swift_release();
    }
    else
    {
      if (qword_1ED762B18 != -1)
        swift_once();
      v31 = sub_1C106F544();
      sub_1C079E000(v31, (uint64_t)qword_1ED762AF8);
      v32 = sub_1C106F538();
      v33 = sub_1C10703A8();
      if (os_log_type_enabled(v32, v33))
      {
        *(_WORD *)sub_1C0780FC8() = 0;
        sub_1C0796A40(&dword_1C0771000, v32, v34, "Couldn't fetch option for PHPersonSourceIngestor");
        sub_1C0787774();
      }
      v35 = v0[7];
      v36 = v0[5];

      sub_1C07A0AC0(*(uint64_t (**)(uint64_t, uint64_t))(v35 + 8));
      sub_1C0CB96E4(v36, v91, (uint64_t *)(v7 + 16));
      swift_release();
    }
    swift_release();
  }
  else
  {
    if (qword_1ED761458 != -1)
      swift_once();
    v27 = sub_1C106F544();
    sub_1C079E000(v27, (uint64_t)qword_1ED78D818);
    v28 = sub_1C106F538();
    v29 = sub_1C10703A8();
    if (os_log_type_enabled(v28, v29))
    {
      *(_WORD *)sub_1C0780FC8() = 0;
      sub_1C0796A40(&dword_1C0771000, v28, v30, "Siri Toggle: Pipeline is blocked from sourcing Photos");
      sub_1C0787774();
    }

    sub_1C106AC6C();
    sub_1C088B730();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  v37 = (uint64_t (*)(void))v0[1];
  return v37();
}

uint64_t sub_1C0CB96E4(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t inited;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v6 = type metadata accessor for Pipeline.StatusStore();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C080ABC4(a1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v8[*(int *)(v6 + 20)] = 1;
  Pipeline.StatusStore.currentSessionId()();
  sub_1C07B1F90((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for Pipeline.StatusStore);
  sub_1C106F244();
  sub_1C07ACF80((uint64_t *)&unk_1ED7614C0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C10795A0;
  *(_QWORD *)(inited + 32) = 0x496E6F6973736573;
  *(_QWORD *)(inited + 40) = 0xE900000000000064;
  v10 = sub_1C106FAF0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 48) = v10;
  *(_QWORD *)(inited + 56) = 0x614E656372756F73;
  *(_QWORD *)(inited + 64) = 0xEA0000000000656DLL;
  sub_1C07D4B70(0, &qword_1ED760190);
  *(_QWORD *)(inited + 72) = sub_1C1070528();
  *(_QWORD *)(inited + 80) = 0x756F436E656B6174;
  *(_QWORD *)(inited + 88) = 0xEA0000000000746ELL;
  swift_beginAccess();
  *(_QWORD *)(inited + 96) = sub_1C1070294();
  strcpy((char *)(inited + 104), "droppedCount");
  *(_BYTE *)(inited + 117) = 0;
  *(_WORD *)(inited + 118) = -5120;
  swift_beginAccess();
  v11 = *a3;
  swift_beginAccess();
  result = v11 - *a2;
  if (__OFSUB__(v11, *a2))
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(inited + 120) = sub_1C1070294();
    sub_1C07D4B70(0, (unint64_t *)&qword_1ED761490);
    sub_1C106F97C();
    sub_1C106F22C();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C0CB9974@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _BYTE *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t (*v16)(_QWORD);
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  id v34;
  id v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  uint8_t *v43;
  _BYTE *v44;
  uint64_t result;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  _BYTE *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60[3];
  _QWORD aBlock[7];
  uint64_t v62;

  v59 = a6;
  v53 = a2;
  v54 = a8;
  v51 = a1;
  v52 = a7;
  v56 = a3;
  v57 = a9;
  v49 = a10;
  v50 = a5;
  v48 = a11;
  v12 = type metadata accessor for PHPersonSourceIngestor();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = a11 + 16;
  sub_1C080ABC4(a4, (uint64_t)v15, v16);
  v17 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v47 = (v14 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = (v47 + 15) & 0xFFFFFFFFFFFFFFF8;
  v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  v23 = (v22 + 23) & 0xFFFFFFFFFFFFFFF8;
  v24 = swift_allocObject();
  sub_1C0CB11E4((uint64_t)v15, v24 + v17);
  v25 = v51;
  *(_QWORD *)(v24 + v47) = v50;
  v26 = v59;
  *(_QWORD *)(v24 + v18) = v59;
  *(_QWORD *)(v24 + v19) = v52;
  v27 = v26;
  *(_QWORD *)(v24 + v20) = v54;
  *(_QWORD *)(v24 + v21) = v49;
  v28 = (_QWORD *)(v24 + v22);
  v29 = v53;
  *v28 = v25;
  v28[1] = v29;
  v30 = v48;
  *(_QWORD *)(v24 + v23) = v48;
  aBlock[4] = sub_1C0CBA57C;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C0CAECC8;
  aBlock[3] = &unk_1E7A29F28;
  v31 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v56, sel_enumerateObjectsUsingBlock_, v31);
  _Block_release(v31);
  swift_beginAccess();
  if ((*(_QWORD *)(v30 + 16) & 0x8000000000000000) != 0)
  {
    result = sub_1C1070948();
    __break(1u);
  }
  else
  {
    v32 = v58;
    sub_1C106EDDC();
    if (v32)
    {
      if (qword_1ED761458 != -1)
        swift_once();
      v33 = sub_1C106F544();
      sub_1C079E000(v33, (uint64_t)qword_1ED78D818);
      v34 = v32;
      v35 = v32;
      v36 = sub_1C106F538();
      v37 = sub_1C1070390();
      if (os_log_type_enabled(v36, v37))
      {
        v38 = (uint8_t *)swift_slowAlloc();
        v39 = swift_slowAlloc();
        v60[0] = v39;
        *(_DWORD *)v38 = 136315138;
        v62 = (uint64_t)v32;
        v40 = v32;
        sub_1C07ACF80(&qword_1ED7614F0);
        v41 = sub_1C106FB5C();
        v62 = sub_1C0788DAC(v41, v42, v60);
        sub_1C10705AC();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1C0771000, v36, v37, "Failed to send BGST fastpass telemetry due to: %s", v38, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BA8270](v39, -1, -1);
        v43 = v38;
        v27 = v59;
        MEMORY[0x1C3BA8270](v43, -1, -1);

      }
      else
      {

      }
    }
    v44 = v57;
    result = swift_beginAccess();
    *v44 = *(_BYTE *)(v27 + 16);
  }
  return result;
}

void sub_1C0CB9DC4(void *a1, uint64_t a2, _BYTE *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, void (*a10)(uint64_t), uint64_t a11, uint64_t a12)
{
  _QWORD *v18;
  _BYTE *v19;
  _QWORD *v20;
  uint64_t v21;
  void *v22;

  v18 = (_QWORD *)(a5 + 16);
  sub_1C0CCBC24();
  v19 = (_BYTE *)(a6 + 16);
  swift_beginAccess();
  if (*v18)
  {
    *a3 = 1;
    swift_beginAccess();
    *v19 = 1;
  }
  else
  {
    v20 = (_QWORD *)(a7 + 16);
    v21 = swift_beginAccess();
    if (__OFADD__(*v20, 1))
    {
      __break(1u);
    }
    else
    {
      ++*v20;
      v22 = (void *)MEMORY[0x1C3BA79F4](v21);
      sub_1C0CBA030(a1, a4, a8, (void **)(a9 + 16), a10, a11, (_QWORD *)(a12 + 16));
      objc_autoreleasePoolPop(v22);
    }
  }
}

void sub_1C0CBA030(void *a1, uint64_t a2, unint64_t a3, void **a4, void (*a5)(uint64_t), uint64_t a6, _QWORD *a7)
{
  id v11;
  uint64_t (*v12)(uint64_t);
  void *v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;

  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97298]), sel_init);
  v12 = *(uint64_t (**)(uint64_t))(a2 + *(int *)(type metadata accessor for PhaseStores() + 32));
  swift_beginAccess();
  v13 = *a4;
  v14 = a2 + *(int *)(type metadata accessor for PHPersonSourceIngestor() + 28);
  v15 = v13;
  v16 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C0CB5C14(a1, a3, v12, (uint64_t)v11, a2, v13, 3, v14);
  if (v21)
  {
    objc_autoreleasePoolPop(v16);

  }
  else
  {
    objc_autoreleasePoolPop(v16);

    sub_1C0A56D74();
    v18 = v17;
    swift_bridgeObjectRelease();
    a5(v18);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    if (__OFADD__(*a7, 1))
      __break(1u);
    else
      ++*a7;
  }
}

uint64_t sub_1C0CBA1B0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C0806670;
  return sub_1C0CB9048();
}

void sub_1C0CBA1F4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1C080ABC4(v2 + *(int *)(a1 + 20), a2, (uint64_t (*)(_QWORD))type metadata accessor for Source);
}

void sub_1C0CBA21C(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1C080ABC4(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
}

void sub_1C0CBA244(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1ED750CF8, (uint64_t (*)(uint64_t))type metadata accessor for PHPersonSourceIngestor, (uint64_t)&unk_1C10B3060);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0CBA280(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1ED750D10, (uint64_t (*)(uint64_t))type metadata accessor for PHPersonSourceIngestor, (uint64_t)&unk_1C10B3088);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0CBA2BC(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1ED750D08, (uint64_t (*)(uint64_t))type metadata accessor for PHPersonSourceIngestor, (uint64_t)&unk_1C10B30A4);
  *(_QWORD *)(a1 + 8) = v2;
}

uint64_t sub_1C0CBA2F8()
{
  return sub_1C078F06C();
}

void sub_1C0CBA304(uint64_t a1, void *a2)
{
  id v3;

  sub_1C07D4B70(0, (unint64_t *)&qword_1ED762C00);
  v3 = (id)sub_1C106FEEC();
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_setIncludedDetectionTypes_, v3);

}

uint64_t sub_1C0CBA374()
{
  uint64_t v0;

  sub_1C07A9D70();
  return swift_deallocObject();
}

uint64_t sub_1C0CBA390()
{
  return sub_1C078F06C();
}

uint64_t sub_1C0CBA39C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v3;

  return sub_1C0CB9974(a1, a2, *(void **)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48), *(_QWORD *)(v3 + 56), a3, *(_QWORD *)(v3 + 64), *(_QWORD *)(v3 + 72));
}

uint64_t sub_1C0CBA3CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for PHPersonSourceIngestor();
  v2 = v0
     + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80));
  v3 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  sub_1C078A314();
  sub_1C0792DE8();
  sub_1C0792DE8();
  sub_1C0792DE8();
  sub_1C0792DE8();
  sub_1C0792DE8();
  sub_1C0792DE8();
  sub_1C0792DE8();
  v4 = v2 + *(int *)(v1 + 20);
  swift_bridgeObjectRelease();
  v5 = v4 + *(int *)(sub_1C077674C() + 24);
  v6 = sub_1C106D1F8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = v2 + *(int *)(v1 + 28);
  v8 = sub_1C106E638();
  if (!sub_1C07B2D80(v7, 1, v8))
    sub_1C07A0AC0(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8));
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1C0CBA57C(void *a1, uint64_t a2, _BYTE *a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v7 = *(_QWORD *)(type metadata accessor for PHPersonSourceIngestor() - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF8;
  v12 = (v11 + 15) & 0xFFFFFFFFFFFFFFF8;
  v13 = (v12 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_1C0CB9DC4(a1, a2, a3, v3 + v8, *(_QWORD *)(v3 + v9), *(_QWORD *)(v3 + v10), *(_QWORD *)(v3 + v11), *(_QWORD *)(v3 + v12), *(_QWORD *)(v3 + v13), *(void (**)(uint64_t))(v3 + ((v13 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v3 + ((v13 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v3 + ((((v13 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8)));
}

uint64_t *sub_1C0CBA644(uint64_t *a1)
{
  sub_1C0CBA69C(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7]);
  return a1;
}

uint64_t sub_1C0CBA69C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result;

  if (a8)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t *sub_1C0CBA718(uint64_t *a1)
{
  sub_1C0CBA75C(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7]);
  return a1;
}

uint64_t sub_1C0CBA75C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result;

  if (a8)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C0CBA7AC(uint64_t a1)
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

uint64_t sub_1C0CBA800()
{
  swift_bridgeObjectRelease();
  sub_1C07A9D70();
  return swift_deallocObject();
}

uint64_t sub_1C0CBA81C(void *a1, void **a2)
{
  return sub_1C0CB87C4(a1, *a2);
}

uint64_t sub_1C0CBA824()
{
  uint64_t v0;

  sub_1C07A9D70();
  return swift_deallocObject();
}

uint64_t sub_1C0CBA840(void *a1)
{
  uint64_t v1;

  return sub_1C0CBA81C(a1, (void **)(v1 + 16));
}

void sub_1C0CBA848(void *a1, void **a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1C0CB88CC(a1, *a2, a3, a4, a5, a6);
}

uint64_t sub_1C0CBA850()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1C0CBA894(void *a1)
{
  uint64_t v1;

  sub_1C0CBA848(a1, (void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

void sub_1C0CBA910()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v6 = MEMORY[0x1E0DEE9D8];
  sub_1C09D30E0();
  v0 = v6;
  v1 = *(_QWORD *)(v6 + 16);
  v2 = *(_QWORD *)(v6 + 24) >> 1;
  v3 = v1 + 1;
  if (v2 <= v1)
  {
    sub_1C09D30E0();
    v0 = v6;
    v2 = *(_QWORD *)(v6 + 24) >> 1;
  }
  *(_QWORD *)(v0 + 16) = v3;
  v4 = v0 + 16 * v1;
  *(_QWORD *)(v4 + 32) = 0xD000000000000013;
  *(_QWORD *)(v4 + 40) = 0x80000001C1107CF0;
  if (v2 <= v3)
  {
    sub_1C09D30E0();
    v0 = v6;
  }
  *(_QWORD *)(v0 + 16) = v1 + 2;
  v5 = v0 + 16 * v3;
  *(_QWORD *)(v5 + 32) = 0xD000000000000014;
  *(_QWORD *)(v5 + 40) = 0x80000001C1107D10;
  sub_1C0898D28(v0);
}

uint64_t sub_1C0CBAA44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;

  v1 = sub_1C106ADE0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  sub_1C0778564();
  v5 = v4 - v3;
  v6 = *(_QWORD *)(v0 + 16);
  sub_1C106ADA4();
  v7 = sub_1C08A639C(v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v5, v1);
  if (v7)
  {
    objc_opt_self();
    result = swift_dynamicCastObjCClass();
    if (result)
      return result;
    swift_unknownObjectRelease();
  }
  if (qword_1ED762B18 != -1)
    swift_once();
  v9 = sub_1C077585C();
  sub_1C079E000(v9, (uint64_t)qword_1ED762AF8);
  v10 = sub_1C077C0FC();
  v11 = sub_1C10703A8();
  if (sub_1C077F60C(v11))
  {
    *(_WORD *)sub_1C0780FC8() = 0;
    sub_1C077AF3C(&dword_1C0771000, v10, (os_log_type_t)v6, "Unable to fetch recent event from BMContextualUnderstandingPhysicalSocial Stream");
    sub_1C0787774();
  }

  return 0;
}

void sub_1C0CBAB70()
{
  os_log_type_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;

  v1 = (void *)sub_1C0CBAA44();
  if (v1)
  {
    v2 = v1;
    sub_1C0CBAC60(v1);

    sub_1C077671C();
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v3 = sub_1C077585C();
    sub_1C079E000(v3, (uint64_t)qword_1ED762AF8);
    v4 = sub_1C077C0FC();
    v5 = sub_1C10703A8();
    if (sub_1C077F60C(v5))
    {
      *(_WORD *)sub_1C0780FC8() = 0;
      sub_1C077AF3C(&dword_1C0771000, v4, v0, "PhysicalSocialEvent is nil");
      sub_1C0787774();
    }

    sub_1C077583C(v6, (unint64_t *)&qword_1ED758D30);
    sub_1C106F97C();
  }
}

void sub_1C0CBAC60(void *a1)
{
  uint64_t v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;

  sub_1C077583C((uint64_t)a1, (unint64_t *)&qword_1ED758D30);
  v2 = sub_1C106F97C();
  v3 = objc_msgSend(a1, sel_discoveredPeople);
  sub_1C077583C((uint64_t)v3, &qword_1EF646F60);
  v4 = sub_1C106FF04();

  if (v4 >> 62)
    goto LABEL_20;
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v5)
  {
    if (v5 < 1)
    {
      __break(1u);
      return;
    }
    v6 = 0;
    v7 = 0;
    v8 = 0;
    while (1)
    {
      v9 = (v4 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C3BA70DC](v8, v4) : *(id *)(v4 + 8 * v8 + 32);
      v10 = v9;
      sub_1C0CBB678(v9);
      v12 = v11;
      swift_bridgeObjectRelease();
      if (v12)
        break;
      v14 = objc_msgSend(v10, sel_unknownPersonID);
      if (v14)
      {

        v13 = __OFADD__(v6++, 1);
        if (v13)
          goto LABEL_19;
      }
      else
      {

      }
LABEL_17:
      if (v5 == ++v8)
        goto LABEL_22;
    }

    v13 = __OFADD__(v7++, 1);
    if (!v13)
      goto LABEL_17;
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v5 = sub_1C10709B4();
    sub_1C077960C();
  }
  v6 = 0;
  v7 = 0;
LABEL_22:
  sub_1C077960C();
  v15 = (void *)objc_opt_self();
  if (objc_msgSend(v15, sel_featureValueWithInt64_, v7))
  {
    swift_isUniquelyReferenced_nonNull_native();
    v18 = v2;
    sub_1C08A07B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C07F2B9C();

  }
  if (objc_msgSend(v15, sel_featureValueWithInt64_, v6, v18))
  {
    swift_isUniquelyReferenced_nonNull_native();
    sub_1C08A07B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C07F2B9C();

  }
}

void sub_1C0CBAF4C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v4 = v3;
  v28 = a1;
  v32 = a3;
  v31 = sub_1C07ACF80(&qword_1ED7482B0);
  MEMORY[0x1E0C80A78](v31);
  sub_1C0778564();
  v6 = sub_1C07ACF80(&qword_1EF646F68);
  v29 = *(_QWORD *)(v6 - 8);
  v30 = v6;
  MEMORY[0x1E0C80A78](v6);
  sub_1C0778564();
  v9 = v8 - v7;
  v10 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v27 - v14;
  v16 = *(void **)(v4 + 16);
  v17 = sub_1C106ADE0();
  v18 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
  v18(v15, a2, v17);
  sub_1C07A298C((uint64_t)v15);
  v19 = sub_1C07ACF80(&qword_1ED75D0B8);
  v18(v12, a2 + *(int *)(v19 + 36), v17);
  sub_1C07A298C((uint64_t)v12);
  v20 = objc_allocWithZone(MEMORY[0x1E0D026F0]);
  v21 = sub_1C07DC9F8((uint64_t)v15, (uint64_t)v12, 0, 0, 0);
  v22 = objc_msgSend(v16, sel_publisherWithOptions_, v21);

  v23 = v22;
  sub_1C07ACF80((uint64_t *)&unk_1ED74D318);
  v24 = v33;
  sub_1C106ED88();
  if (v24)
  {

  }
  else
  {
    v25 = swift_allocObject();
    v26 = v28;
    *(_QWORD *)(v25 + 16) = v4;
    *(_QWORD *)(v25 + 24) = v26;
    type metadata accessor for FeatureProviderChange(0);
    sub_1C0AAF218(&qword_1EF646F80, &qword_1ED7482B0);
    swift_retain();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_retain();
    sub_1C1070C00();
    swift_release();

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))(v32, v9, v30);
  }
}

uint64_t sub_1C0CBB1EC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[2] = a1;
  v4[3] = a3;
  v5 = *a2;
  v4[4] = a4;
  v4[5] = v5;
  return swift_task_switch();
}

uint64_t sub_1C0CBB20C()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;

  v1 = objc_msgSend(*(id *)(v0 + 40), sel_eventBody);
  if (v1)
  {
    v2 = v1;
    v3 = *(_QWORD *)(v0 + 32);
    v4 = *(_QWORD *)(v0 + 16);
    objc_msgSend(*(id *)(v0 + 40), sel_timestamp);
    sub_1C106AC54();
    sub_1C0CBAC60(v2);
    v6 = v5;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C07E7D3C(v6, v3);
    swift_bridgeObjectRelease();
    sub_1C089B840();
    v8 = v7;
    swift_release();

    v9 = type metadata accessor for FeatureProviderChange(0);
    v10 = 0;
    *(_BYTE *)(v4 + *(int *)(v9 + 20)) = 2;
    *(_QWORD *)(v4 + *(int *)(v9 + 24)) = v8;
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v11 = sub_1C077585C();
    sub_1C079E000(v11, (uint64_t)qword_1ED762AF8);
    v12 = sub_1C077C0FC();
    v13 = sub_1C10703A8();
    if (os_log_type_enabled(v12, v13))
    {
      *(_WORD *)sub_1C0780FC8() = 0;
      sub_1C077AF3C(&dword_1C0771000, v12, v13, "Unable to parse eventBody from read event in physical social featurizer");
      sub_1C0787774();
    }

    v9 = type metadata accessor for FeatureProviderChange(0);
    v10 = 1;
  }
  sub_1C07B2D8C(*(_QWORD *)(v0 + 16), v10, 1, v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1C0CBB398(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  id v10;

  sub_1C0CBAB70();
  v5 = v4;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v6 = sub_1C089A990(a1, a2, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v6)
  {
    sub_1C0CBA910();
    sub_1C0A791CC(a1, a2, v7);
    v9 = v8;
    sub_1C077960C();
    if ((v9 & 1) != 0)
      v10 = objc_msgSend((id)objc_opt_self(), sel_featureValueWithDouble_, 0.0);
  }
  sub_1C077671C();
}

uint64_t type metadata accessor for PhysicalSocialSignal()
{
  return objc_opt_self();
}

void sub_1C0CBB4C8()
{
  uint64_t v0;
  id v1;
  id v2;

  v1 = objc_msgSend((id)BiomeLibrary(), sel_ContextualUnderstanding);
  swift_unknownObjectRelease();
  v2 = objc_msgSend(v1, sel_PhysicalSocial);
  swift_unknownObjectRelease();
  *(_QWORD *)(v0 + 16) = v2;
  sub_1C077671C();
}

uint64_t sub_1C0CBB53C()
{
  return sub_1C0CBB394();
}

void sub_1C0CBB55C(_QWORD *a1@<X8>)
{
  sub_1C08B5130(a1);
}

void sub_1C0CBB570(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C0CBAF4C(a1, a2, a3);
}

void sub_1C0CBB590()
{
  sub_1C0CBA910();
}

uint64_t sub_1C0CBB5A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C0CBB5B4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C0CBB5C4(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1C0CBB610(&qword_1EF646F50);
  result = sub_1C0CBB610(&qword_1EF646F58);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1C0CBB610(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (!result)
  {
    type metadata accessor for PhysicalSocialSignal();
    sub_1C077D8A0();
  }
  return result;
}

uint64_t sub_1C0CBB644(uint64_t a1)
{
  uint64_t result;

  result = sub_1C0CBB610(&qword_1EF646F58);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1C0CBB678(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_cnContactID);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1C106FB14();

  return v3;
}

uint64_t sub_1C0CBB6D8()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0CBB704(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v7 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_1C0806670;
  return sub_1C0CBB1EC(a1, a2, v7, v6);
}

uint64_t sub_1C0CBB770()
{
  return sub_1C0AAF218(&qword_1EF62FDE8, &qword_1EF62FDF0);
}

uint64_t sub_1C0CBB79C()
{
  return sub_1C0AAF218(&qword_1EF646F88, &qword_1EF646F90);
}

uint64_t sub_1C0CBB7C8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = a1;
  return swift_task_switch();
}

uint64_t sub_1C0CBB7E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t (*v10)(_QWORD, uint64_t, uint64_t);

  if (qword_1ED761518 != -1)
    swift_once();
  swift_beginAccess();
  if (qword_1ED7627B8)
  {
    v1 = (*((uint64_t (**)(void))off_1ED7627C0 + 1))();
    v3 = v2;
    v10 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))(**(int **)(v2 + 8) + *(_QWORD *)(v2 + 8));
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 56) = v4;
    *v4 = v0;
    v4[1] = sub_1C0CBB970;
    return v10(*(_QWORD *)(v0 + 48), v1, v3);
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v6 = sub_1C106F544();
    sub_1C079E000(v6, (uint64_t)qword_1ED762AF8);
    v7 = sub_1C106F538();
    v8 = sub_1C10703A8();
    if (sub_1C077C10C(v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_1C0771000, v7, (os_log_type_t)&qword_1ED7627B8, "InternalPlugin: Pipeline: loadPhasePlugins: failed to load phases", v9, 2u);
      sub_1C0776778();
    }

    return (*(uint64_t (**)(_QWORD))(v0 + 8))(MEMORY[0x1E0DEE9D8]);
  }
}

uint64_t sub_1C0CBB970(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1C0CBB9CC()
{
  uint64_t v0;
  uint64_t v1;
  os_log_type_t v2;
  NSObject *v3;
  os_log_type_t v4;
  _BOOL4 v5;
  uint64_t v6;
  uint8_t *v7;

  if (qword_1ED762B18 != -1)
    swift_once();
  v1 = sub_1C106F544();
  v2 = sub_1C079E000(v1, (uint64_t)qword_1ED762AF8);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v3 = sub_1C106F538();
  v4 = sub_1C10703A8();
  v5 = sub_1C077C10C(v4);
  v6 = *(_QWORD *)(v0 + 64);
  if (v5)
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v7 = 134217984;
    *(_QWORD *)(v0 + 40) = *(_QWORD *)(v6 + 16);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0771000, v3, v2, "InternalPlugin: Pipeline: loadPhasePlugins: loaded %ld phases", v7, 0xCu);
    sub_1C0776778();
  }
  swift_bridgeObjectRelease();

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 64));
}

uint64_t sub_1C0CBBAF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t result;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  _QWORD v22[3];
  _QWORD v23[5];
  int64_t v24;

  sub_1C0861BD0(v23);
  v8 = v23[0];
  v21 = v23[1];
  v9 = v23[3];
  v10 = v23[4];
  v24 = (unint64_t)(v23[2] + 64) >> 6;
  result = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  if (!v10)
    goto LABEL_3;
LABEL_2:
  v12 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  v13 = v12 | (v9 << 6);
  while (1)
  {
    v17 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v13);
    v18 = v17[1];
    v19 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v13);
    v22[0] = *v17;
    v22[1] = v18;
    v22[2] = v19;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0CBC9C8((uint64_t)v22, a2, a3, a4);
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if (v10)
      goto LABEL_2;
LABEL_3:
    v14 = v9 + 1;
    if (__OFADD__(v9, 1))
      break;
    if (v14 >= v24)
      goto LABEL_24;
    v15 = *(_QWORD *)(v21 + 8 * v14);
    if (!v15)
    {
      v16 = v9 + 2;
      if (v9 + 2 >= v24)
        goto LABEL_24;
      v15 = *(_QWORD *)(v21 + 8 * v16);
      if (v15)
        goto LABEL_12;
      v16 = v9 + 3;
      if (v9 + 3 >= v24)
        goto LABEL_24;
      v15 = *(_QWORD *)(v21 + 8 * v16);
      if (v15)
        goto LABEL_12;
      v16 = v9 + 4;
      if (v9 + 4 >= v24)
        goto LABEL_24;
      v15 = *(_QWORD *)(v21 + 8 * v16);
      if (v15)
      {
LABEL_12:
        v14 = v16;
      }
      else
      {
        v14 = v9 + 5;
        if (v9 + 5 >= v24)
          goto LABEL_24;
        v15 = *(_QWORD *)(v21 + 8 * v14);
        if (!v15)
        {
          v20 = v9 + 6;
          while (v20 < v24)
          {
            v15 = *(_QWORD *)(v21 + 8 * v20++);
            if (v15)
            {
              v14 = v20 - 1;
              goto LABEL_13;
            }
          }
LABEL_24:
          swift_bridgeObjectRelease();
          return swift_release();
        }
      }
    }
LABEL_13:
    v10 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v14 << 6);
    v9 = v14;
  }
  __break(1u);
  return result;
}

uint64_t Pipeline.StatusStore.init(config:pipelineType:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v4;
  uint64_t result;

  v4 = *a2;
  sub_1C078E578(a1, a3);
  result = type metadata accessor for Pipeline.StatusStore();
  *(_BYTE *)(a3 + *(int *)(result + 20)) = v4;
  return result;
}

uint64_t type metadata accessor for Pipeline.StatusStore()
{
  uint64_t result;

  result = qword_1ED75CDC0;
  if (!qword_1ED75CDC0)
    return swift_getSingletonMetadata();
  return result;
}

_QWORD *_s11StatusStoreVwCP(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1C106AB28();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = type metadata accessor for Configuration();
    *(_OWORD *)((char *)a1 + *(int *)(v8 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v8 + 20));
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t _s11StatusStoreVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = type metadata accessor for Configuration();
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t _s11StatusStoreVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for Configuration() + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t _s11StatusStoreVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = type metadata accessor for Configuration();
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t _s11StatusStoreVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = type metadata accessor for Configuration();
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t _s11StatusStoreVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0CBBFE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unsigned int v8;

  v6 = type metadata accessor for Configuration();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return sub_1C07B2D80(a1, a2, v6);
  v8 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 4)
    return v8 - 3;
  else
    return 0;
}

uint64_t _s11StatusStoreVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0CBC068(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = type metadata accessor for Configuration();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return sub_1C07B2D8C(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 3;
  return result;
}

uint64_t sub_1C0CBC0DC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Configuration();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C0CBC14C@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1C0CBC1D4();
  if (!v2)
  {
    sub_1C0D69328(a1, a2);
    return sub_1C07785A8();
  }
  return result;
}

uint64_t sub_1C0CBC1D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;

  v1 = type metadata accessor for Configuration();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C078E3E0(v0, (uint64_t)v3);
  v10 = *(_BYTE *)(v0 + *(int *)(type metadata accessor for Pipeline.StatusStore() + 20));
  sub_1C0CBC29C((uint64_t)&v10);
  v5 = v4;
  v7 = v6;
  type metadata accessor for KeyValueStore();
  swift_allocObject();
  return KeyValueStore.init(config:domain:)((uint64_t)v3, v5, v7);
}

void sub_1C0CBC29C(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1C0CBC300()
{
  uint64_t v1;

  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C0CBC3B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;

  result = sub_1C0CBC1D4();
  if (!v3)
  {
    v8 = a3();
    v9 = *(_QWORD *)(v8 + 16);
    if (v9)
    {
      v10 = (_QWORD *)(v8 + 32);
      do
      {
        v11 = sub_1C07A9480(v10, v10[3]);
        sub_1C0D68FF4((uint64_t)v11, a1, a2);
        v10 += 5;
        --v9;
      }
      while (v9);
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1C0CBC47C(unsigned __int8 *a1, uint64_t a2, int a3)
{
  uint64_t v3;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25[2];
  uint64_t v26;
  _OWORD v27[2];
  uint64_t v28;
  _OWORD v29[2];
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  _QWORD v34[3];
  int v35;

  v5 = *a1;
  if (qword_1ED75AC08 != -1)
    swift_once();
  v29[0] = xmmword_1ED78D1B8;
  v29[1] = *(_OWORD *)&qword_1ED78D1C8;
  v30 = qword_1ED78D1D8;
  v31 = xmmword_1ED78D1B8;
  v6 = unk_1ED78D1D0;
  v32 = qword_1ED78D1C8;
  sub_1C07B35DC((uint64_t)&v31);
  sub_1C08FD4A0((uint64_t)&v32);
  sub_1C0BCD07C(v6);
  v7 = sub_1C0CD04EC(v29, v5, 0);
  sub_1C07B2F5C((uint64_t)&v31);
  sub_1C08EE9A0((uint64_t)&v32);
  sub_1C077AB58(v6);
  if (!*(_QWORD *)(v7 + 16))
    goto LABEL_8;
  v35 = a3;
  if (qword_1ED75ACA0 != -1)
    swift_once();
  v27[0] = xmmword_1ED78D370;
  v27[1] = *(_OWORD *)&qword_1ED78D380;
  v28 = qword_1ED78D390;
  v33 = xmmword_1ED78D370;
  v8 = unk_1ED78D388;
  v34[0] = qword_1ED78D380;
  sub_1C07B35DC((uint64_t)&v33);
  sub_1C08FD4A0((uint64_t)v34);
  sub_1C0BCD07C(v8);
  sub_1C0CBC1D4();
  if (v3)
  {
    sub_1C0775894();
    sub_1C07B2F5C((uint64_t)&v33);
    sub_1C08EE9A0((uint64_t)v34);
    sub_1C07AE0AC();
    if (qword_1ED762B18 != -1)
      swift_once();
    v9 = sub_1C106F544();
    sub_1C079E000(v9, (uint64_t)qword_1ED762AF8);
    sub_1C078F21C();
    sub_1C078F21C();
    v10 = sub_1C106F538();
    v11 = sub_1C1070390();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)sub_1C0775854();
      v13 = (_QWORD *)sub_1C0775854();
      *(_DWORD *)v12 = 138412290;
      sub_1C078F21C();
      v25[0] = _swift_stdlib_bridgeErrorToNSError();
      sub_1C10705AC();
      *v13 = v25[0];
      sub_1C0781540();
      sub_1C0781540();
      _os_log_impl(&dword_1C0771000, v10, v11, "Encountered an error while fetch phase status per phase: %@", v12, 0xCu);
      sub_1C07ACF80(&qword_1ED7614A0);
      swift_arrayDestroy();
      sub_1C0776778();
    }
    sub_1C0781540();
    sub_1C0781540();
    sub_1C0781540();

    return;
  }
  v14 = sub_1C0CD24CC((uint64_t)v27, 0, 0);
  v16 = v15;
  sub_1C07785A8();
  sub_1C07B2F5C((uint64_t)&v33);
  sub_1C08EE9A0((uint64_t)v34);
  sub_1C07AE0AC();
  if (v16)
  {
    v26 = MEMORY[0x1E0DEE9D8];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0CBBAF4(v7, v14, v16, &v26);
    sub_1C0775894();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
    {
      v17 = 0x73756F6976657250;
      v18 = 0xEA0000000000203ALL;
    }
    else
    {
      v17 = 0x3A746E6572727543;
      v18 = 0xE900000000000020;
    }
    v25[0] = v17;
    v25[1] = v18;
    PipelineType.description.getter();
    sub_1C106FC94();
    swift_bridgeObjectRelease();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C08A02F4();
    swift_bridgeObjectRelease();
LABEL_8:
    swift_bridgeObjectRelease();
    return;
  }
  sub_1C0775894();
  if (qword_1ED762B18 != -1)
    swift_once();
  v19 = sub_1C106F544();
  sub_1C079E000(v19, (uint64_t)qword_1ED762AF8);
  v20 = sub_1C106F538();
  v21 = sub_1C1070390();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = sub_1C0775854();
    v25[0] = sub_1C0775854();
    *(_DWORD *)v22 = 67109378;
    LODWORD(v26) = v5;
    sub_1C10705AC();
    *(_WORD *)(v22 + 8) = 2080;
    LOBYTE(v26) = v35;
    PipelineType.description.getter();
    v26 = sub_1C0788DAC(v23, v24, v25);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0771000, v20, v21, "Session id unavailable for %{BOOL}d %s ", (uint8_t *)v22, 0x12u);
    swift_arrayDestroy();
    sub_1C0776778();
  }

}

void sub_1C0CBC9C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = sub_1C0CBCEDC(*(_QWORD *)(a1 + 16));
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_isUniquelyReferenced_nonNull_native();
  sub_1C08A0E40();
  swift_bridgeObjectRelease();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_isUniquelyReferenced_nonNull_native();
  sub_1C08A0E40();
  swift_bridgeObjectRelease();
  sub_1C07EA1EC();
  v6 = *(_QWORD *)(*a4 + 16);
  sub_1C07EA900();
  v7 = *a4;
  *(_QWORD *)(v7 + 16) = v6 + 1;
  *(_QWORD *)(v7 + 8 * v6 + 32) = v5;
}

uint64_t sub_1C0CBCAE4(uint64_t a1, int a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t inited;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  int v26;
  uint64_t v27;

  v26 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = sub_1C1070564();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v23 - v11;
  v25 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](v13);
  v24 = (char *)&v23 - v14;
  sub_1C07ACF80(&qword_1ED762CB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1079220;
  *(_QWORD *)(inited + 32) = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 32))(a4, a5);
  *(_QWORD *)(inited + 40) = v16;
  v27 = inited;
  if ((a3 & 1) != 0)
  {
    (*(void (**)(uint64_t, uint64_t))(a5 + 40))(a4, a5);
    sub_1C0BD9D50();
  }
  sub_1C0CBC14C(0, (uint64_t)v12);
  if (sub_1C07B2D80((uint64_t)v12, 1, AssociatedTypeWitness) == 1)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    return MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v19 = v24;
    v18 = v25;
    v20 = (*(uint64_t (**)(char *, char *, uint64_t))(v25 + 32))(v24, v12, AssociatedTypeWitness);
    v21 = v27;
    MEMORY[0x1E0C80A78](v20);
    *(&v23 - 4) = a4;
    *(&v23 - 3) = a5;
    *(&v23 - 2) = (uint64_t)v19;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v17 = sub_1C082A294((uint64_t)sub_1C0CBCEBC, (uint64_t)(&v23 - 6), v21);
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v19, AssociatedTypeWitness);
  }
  return v17;
}

uint64_t sub_1C0CBCD40@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t AssociatedTypeWitness;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v9 = *a1;
  v8 = a1[1];
  (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))((char *)&v15 - v11, a2, AssociatedTypeWitness, v7);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v12 = v15;
    *a3 = v9;
    a3[1] = v8;
    __asm { BR              X12 }
  }
  *a3 = v9;
  a3[1] = v8;
  v15 = 0;
  v16 = 0xE000000000000000;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  result = sub_1C1070C6C();
  v14 = v16;
  a3[2] = v15;
  a3[3] = v14;
  return result;
}

uint64_t sub_1C0CBCEBC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1C0CBCD40(a1, *(_QWORD *)(v2 + 32), a2);
}

uint64_t sub_1C0CBCEDC(uint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;

  sub_1C07ACF80(&qword_1ED761580);
  result = sub_1C10709CC();
  v3 = (_QWORD *)result;
  v4 = 0;
  v5 = *(_QWORD *)(a1 + 64);
  v24 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v5;
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = result + 64;
  if ((v7 & v5) == 0)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v11 | (v4 << 6); ; i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v18 = *v16;
    v17 = v16[1];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    result = sub_1C10701B0();
    *(_QWORD *)(v10 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v19 = (_QWORD *)(v3[6] + 16 * i);
    *v19 = v18;
    v19[1] = v17;
    v20 = (_QWORD *)(v3[7] + 16 * i);
    *v20 = 0;
    v20[1] = 0xE000000000000000;
    v21 = v3[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v23;
    if (v8)
      goto LABEL_4;
LABEL_5:
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_24;
    if (v13 >= v9)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v24 + 8 * v13);
    ++v4;
    if (!v14)
    {
      v4 = v13 + 1;
      if (v13 + 1 >= v9)
        return (uint64_t)v3;
      v14 = *(_QWORD *)(v24 + 8 * v4);
      if (!v14)
      {
        v4 = v13 + 2;
        if (v13 + 2 >= v9)
          return (uint64_t)v3;
        v14 = *(_QWORD *)(v24 + 8 * v4);
        if (!v14)
          break;
      }
    }
LABEL_18:
    v8 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v9)
    return (uint64_t)v3;
  v14 = *(_QWORD *)(v24 + 8 * v15);
  if (v14)
  {
    v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v4 >= v9)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v24 + 8 * v4);
    ++v15;
    if (v14)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_1C0CBD0E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  _QWORD v25[5];
  uint64_t v26;

  v24 = a3;
  v5 = sub_1C07ACF80(&qword_1EF6470D0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v22 - v9;
  v26 = a1;
  sub_1C0861BD0(v25);
  v11 = v25[0];
  v12 = v25[3];
  v13 = v25[4];
  v22 = v25[1];
  v23 = (unint64_t)(v25[2] + 64) >> 6;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  if (!v13)
    goto LABEL_3;
LABEL_2:
  v14 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  v15 = v14 | (v12 << 6);
  while (1)
  {
    v19 = *(_QWORD *)(v11 + 48);
    v20 = sub_1C106D1F8();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v10, v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v15, v20);
    *(_QWORD *)&v10[*(int *)(v5 + 48)] = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v15);
    sub_1C0CCABD0((uint64_t)v10, (uint64_t)v7);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0C2E7BC(&v26, (uint64_t)v7, v24);
    if (v3)
    {
      swift_bridgeObjectRelease();
      sub_1C0784B6C((uint64_t)v7, &qword_1EF6470D0);
      swift_release();
      return;
    }
    sub_1C0784B6C((uint64_t)v7, &qword_1EF6470D0);
    if (v13)
      goto LABEL_2;
LABEL_3:
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v16 >= v23)
      goto LABEL_24;
    v17 = *(_QWORD *)(v22 + 8 * v16);
    if (!v17)
    {
      v18 = v12 + 2;
      if (v12 + 2 >= v23)
        goto LABEL_24;
      v17 = *(_QWORD *)(v22 + 8 * v18);
      if (v17)
        goto LABEL_12;
      v18 = v12 + 3;
      if (v12 + 3 >= v23)
        goto LABEL_24;
      v17 = *(_QWORD *)(v22 + 8 * v18);
      if (v17)
        goto LABEL_12;
      v18 = v12 + 4;
      if (v12 + 4 >= v23)
        goto LABEL_24;
      v17 = *(_QWORD *)(v22 + 8 * v18);
      if (v17)
      {
LABEL_12:
        v16 = v18;
      }
      else
      {
        v16 = v12 + 5;
        if (v12 + 5 >= v23)
          goto LABEL_24;
        v17 = *(_QWORD *)(v22 + 8 * v16);
        if (!v17)
        {
          v21 = v12 + 6;
          while (v21 < v23)
          {
            v17 = *(_QWORD *)(v22 + 8 * v21++);
            if (v17)
            {
              v16 = v21 - 1;
              goto LABEL_13;
            }
          }
LABEL_24:
          swift_release();
          return;
        }
      }
    }
LABEL_13:
    v13 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v16 << 6);
    v12 = v16;
  }
  __break(1u);
}

uint64_t static Pipeline.sharedPipeline(for:)()
{
  if (qword_1ED755EC8 != -1)
    swift_once();
  return sub_1C078E5F4();
}

uint64_t Pipeline.runAppleMusicDelta(reason:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return sub_1C078C868();
}

uint64_t sub_1C0CBD3E0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1ED761418 != -1)
    swift_once();
  v1 = sub_1C077674C();
  sub_1C079E000(v1, (uint64_t)&unk_1ED761400);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v2;
  *v2 = v0;
  v2[1] = sub_1C0CCAFB8;
  v3 = sub_1C07B4974(*(_QWORD *)(v0 + 16));
  return sub_1C07BD0B0(v3, v4);
}

uint64_t Pipeline.runCNContactDelta(reason:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return sub_1C078C868();
}

uint64_t sub_1C0CBD46C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1ED761438 != -1)
    swift_once();
  v1 = sub_1C077674C();
  sub_1C079E000(v1, (uint64_t)byte_1ED761420);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v2;
  *v2 = v0;
  v2[1] = sub_1C0CCAFB8;
  v3 = sub_1C07B4974(*(_QWORD *)(v0 + 16));
  return sub_1C07BD0B0(v3, v4);
}

uint64_t Pipeline.runEntityTaggingDelta(reason:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return sub_1C078C868();
}

uint64_t sub_1C0CBD4F8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1ED7622C8 != -1)
    swift_once();
  v1 = sub_1C077674C();
  sub_1C079E000(v1, (uint64_t)&unk_1ED7622B0);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v2;
  *v2 = v0;
  v2[1] = sub_1C0CCAFB8;
  v3 = sub_1C07B4974(*(_QWORD *)(v0 + 16));
  return sub_1C07BD0B0(v3, v4);
}

uint64_t Pipeline.runDeltaUpdate(reason:source:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return sub_1C078C868();
}

uint64_t sub_1C0CBD588()
{
  os_log_type_t v0;
  uint64_t *v1;
  NSObject *v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t (*v6)(void);
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  if (v1[2] == 1
    || (v2 = (v1[4] + OBJC_IVAR____TtC24IntelligencePlatformCore8Pipeline_stores),
        (*((_BYTE *)&v2[1].isa + *(int *)(sub_1C0779D10() + 20)) & 2) != 0))
  {
    v8 = (_QWORD *)swift_task_alloc();
    v1[5] = (uint64_t)v8;
    *v8 = v1;
    v8[1] = sub_1C0CBD69C;
    v9 = sub_1C07864B8(v1[2]);
    return sub_1C0CC8F84(v9, v10);
  }
  else
  {
    if (qword_1ED761458 != -1)
      swift_once();
    v3 = sub_1C077585C();
    sub_1C077965C(v3, (uint64_t)qword_1ED78D818);
    v4 = sub_1C077C13C();
    if (sub_1C077C10C(v4))
    {
      v5 = (uint8_t *)sub_1C0775854();
      *(_WORD *)v5 = 0;
      sub_1C077F048(&dword_1C0771000, v2, v0, "This SPI can only be used while running deltas through internal app or when livable source flag is turned on", v5);
      sub_1C0776778();
    }

    v6 = (uint64_t (*)(void))sub_1C0779830();
    return sub_1C078D870(v6);
  }
}

uint64_t sub_1C0CBD69C()
{
  uint64_t v0;

  sub_1C077B0C8();
  sub_1C07862EC();
  return sub_1C077CF28(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0CBD6C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return sub_1C078C868();
}

uint64_t sub_1C0CBD6D8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v0 + 48) = 3;
  swift_retain();
  v1 = (_QWORD *)sub_1C0793600();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_1C0CBD734;
  v2 = sub_1C0CCB028(*(_QWORD *)(v0 + 16));
  return sub_1C078A098(v2, v3, v4, v5);
}

uint64_t sub_1C0CBD734()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C07B749C();
  if (v0)
  {
    sub_1C077862C();
    return sub_1C0789D28();
  }
  else
  {
    sub_1C078BBB8();
    return sub_1C0795770(*(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t sub_1C0CBD774()
{
  uint64_t v0;

  swift_release();
  return sub_1C077CF28(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0CBD7A0()
{
  return sub_1C106E4B8();
}

uint64_t sub_1C0CBD7E0()
{
  return sub_1C078E5F4();
}

uint64_t sub_1C0CBD7FC()
{
  return sub_1C078E5F4();
}

uint64_t sub_1C0CBD818()
{
  return sub_1C078E5F4();
}

uint64_t sub_1C0CBD834()
{
  return sub_1C078E5F4();
}

uint64_t sub_1C0CBD850()
{
  return sub_1C078E5F4();
}

uint64_t sub_1C0CBD86C()
{
  return sub_1C078E5F4();
}

uint64_t sub_1C0CBD888()
{
  return sub_1C078E5F4();
}

uint64_t sub_1C0CBD8A4()
{
  return sub_1C078E5F4();
}

uint64_t sub_1C0CBD8C0()
{
  return sub_1C078E5F4();
}

uint64_t sub_1C0CBD8DC()
{
  return sub_1C078E5F4();
}

uint64_t sub_1C0CBD8F8()
{
  return sub_1C078E5F4();
}

uint64_t sub_1C0CBD914()
{
  return sub_1C078E5F4();
}

uint64_t sub_1C0CBD930()
{
  return sub_1C078E5F4();
}

uint64_t sub_1C0CBD94C()
{
  return sub_1C078E5F4();
}

uint64_t sub_1C0CBD968()
{
  return sub_1C078E5F4();
}

uint64_t sub_1C0CBD984(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return sub_1C078C868();
}

uint64_t sub_1C0CBD994()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v0 + 48) = 1;
  swift_retain();
  v1 = (_QWORD *)sub_1C0793600();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_1C0CBD9F0;
  v2 = sub_1C0CCB028(*(_QWORD *)(v0 + 16));
  return sub_1C078A098(v2, v3, v4, v5);
}

uint64_t sub_1C0CBD9F0()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C07B749C();
  if (v0)
  {
    sub_1C077862C();
    return sub_1C0789D28();
  }
  else
  {
    sub_1C078BBB8();
    return sub_1C0795770(*(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t sub_1C0CBDA30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return sub_1C078C868();
}

uint64_t sub_1C0CBDA40()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v0 + 48) = 2;
  swift_retain();
  v1 = (_QWORD *)sub_1C0793600();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_1C0CBD9F0;
  v2 = sub_1C0CCB028(*(_QWORD *)(v0 + 16));
  return sub_1C078A098(v2, v3, v4, v5);
}

uint64_t sub_1C0CBDA9C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = v0;
  return swift_task_switch();
}

#error "1C0CBDB64: call analysis failed (funcsize=76)"

uint64_t sub_1C0CBDC08()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C07862EC();
  if (v0)
    return sub_1C077CF28(*(uint64_t (**)(void))(v1 + 8));
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0CBDC54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  NSObject *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(void);

  sub_1C077B704();
  a19 = v22;
  a20 = v23;
  a18 = v21;
  sub_1C0CCB160();
  sub_1C106F538();
  v24 = sub_1C0776928();
  if (sub_1C07B6518(v20))
  {
    v25 = (uint8_t *)sub_1C0775854();
    a9 = sub_1C0775854();
    *(_DWORD *)v25 = 136315138;
    sub_1C0779758();
    v26 = sub_1C0CCE1C8();
    sub_1C07785A8();
    v28 = sub_1C0781B20(v26, v27, &a9);
    sub_1C0783188(v28);
    sub_1C077E584();
    sub_1C07863E8();
    sub_1C07796F0(&dword_1C0771000, v20, v24, "PhaseFinish %s", v25);
    sub_1C0778610();
    sub_1C0776778();
  }
  sub_1C0CCB210();

  v29 = (uint64_t (*)(void))sub_1C0779830();
  return sub_1C0781074(v29);
}

uint64_t sub_1C0CBDD48()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = v0;
  return swift_task_switch();
}

#error "1C0CBDE10: call analysis failed (funcsize=76)"

uint64_t sub_1C0CBDEB4()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C07862EC();
  if (v0)
    return sub_1C077CF28(*(uint64_t (**)(void))(v1 + 8));
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0CBDF00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  NSObject *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(void);

  sub_1C077B704();
  a19 = v22;
  a20 = v23;
  a18 = v21;
  sub_1C0CCB160();
  sub_1C106F538();
  v24 = sub_1C0776928();
  if (sub_1C07B6518(v20))
  {
    v25 = (uint8_t *)sub_1C0775854();
    a9 = sub_1C0775854();
    *(_DWORD *)v25 = 136315138;
    sub_1C0779758();
    sub_1C0A912C8();
    v27 = v26;
    sub_1C07785A8();
    v29 = sub_1C0781B20(v27, v28, &a9);
    sub_1C0783188(v29);
    sub_1C077E584();
    sub_1C07863E8();
    sub_1C07796F0(&dword_1C0771000, v20, v24, "PhaseFinish %s", v25);
    sub_1C0778610();
    sub_1C0776778();
  }
  sub_1C0CCB210();

  v30 = (uint64_t (*)(void))sub_1C0779830();
  return sub_1C0781074(v30);
}

uint64_t Pipeline.runLifeEventsDelta(reason:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return sub_1C078C868();
}

uint64_t sub_1C0CBE004()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1ED761448 != -1)
    swift_once();
  v1 = sub_1C077674C();
  sub_1C079E000(v1, (uint64_t)&unk_1ED762E88);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v2;
  *v2 = v0;
  v2[1] = sub_1C0CCAFB8;
  v3 = sub_1C07B4974(*(_QWORD *)(v0 + 16));
  return sub_1C07BD0B0(v3, v4);
}

uint64_t sub_1C0CBE080(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v7 = sub_1C106AB28();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Configuration();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v14 = *(_QWORD *)(a1 + 16);
  if (*(_QWORD *)(v14 + 16) && (sub_1C07A35E4(), (v16 & 1) != 0))
  {
    v17 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v15);
    swift_endAccess();
    swift_retain();
    result = swift_release();
    *a3 = v17;
  }
  else
  {
    swift_endAccess();
    sub_1C07E6C80(a2, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    type metadata accessor for Pipeline();
    v19 = swift_allocObject();
    result = (uint64_t)sub_1C0CBFF20((uint64_t)v13);
    if (!v3)
    {
      *a3 = v19;
      swift_release();
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
      v20 = *a3;
      swift_beginAccess();
      if (v20)
      {
        swift_retain();
        sub_1C089FEE8();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      }
      else
      {
        sub_1C07F313C();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        swift_release();
      }
      return swift_endAccess();
    }
  }
  return result;
}

uint64_t sub_1C0CBE278(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_1C106AB28();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Configuration();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v13 = *(_QWORD *)(a1 + 16);
  if (*(_QWORD *)(v13 + 16) && (sub_1C07A35E4(), (v15 & 1) != 0))
  {
    v16 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v14);
    swift_endAccess();
    swift_retain();
    result = swift_release();
    *a3 = v16;
  }
  else
  {
    swift_endAccess();
    sub_1C07E6C80(a2, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    _s14descr1E7A407D1O12JobSchedulerCMa(0);
    swift_allocObject();
    *a3 = sub_1C0EBB6F8((uint64_t)v12);
    swift_release();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
    v18 = *a3;
    swift_beginAccess();
    if (v18)
    {
      swift_retain();
      sub_1C08A02E0();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    else
    {
      sub_1C07F35D4();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      swift_release();
    }
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_1C0CBE468(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;

  v7 = type metadata accessor for Configuration();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v10 = *(_QWORD *)(a1 + 16);
  if (*(_QWORD *)(v10 + 16) && (sub_1C07A35E4(), (v12 & 1) != 0))
  {
    v13 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v11);
    swift_endAccess();
    swift_retain();
    result = swift_release();
    *a3 = v13;
  }
  else
  {
    swift_endAccess();
    sub_1C07E6C80(a2, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    type metadata accessor for QIDDatabase();
    swift_allocObject();
    result = (uint64_t)sub_1C0CDAEB4((uint64_t)v9);
    if (!v3)
    {
      v15 = result;
      swift_release();
      *a3 = v15;
      swift_beginAccess();
      swift_retain();
      sub_1C08A0310();
      return swift_endAccess();
    }
  }
  return result;
}

uint64_t sub_1C0CBE5C4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;

  v7 = type metadata accessor for Configuration();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v10 = *(_QWORD *)(a1 + 16);
  if (*(_QWORD *)(v10 + 16) && (sub_1C07A35E4(), (v12 & 1) != 0))
  {
    v13 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v11);
    swift_endAccess();
    swift_retain();
    result = swift_release();
    *a3 = v13;
  }
  else
  {
    swift_endAccess();
    type metadata accessor for ViewUpdate.ViewInProcessRunner();
    sub_1C07E6C80(a2, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    result = ViewUpdate.ViewInProcessRunner.__allocating_init(config:)((uint64_t)v9);
    if (!v3)
    {
      v15 = result;
      swift_release();
      *a3 = v15;
      swift_beginAccess();
      swift_retain();
      sub_1C08A04C8();
      return swift_endAccess();
    }
  }
  return result;
}

uint64_t sub_1C0CBE714(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_1C0CBE72C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(void);

  sub_1C0CBE82C(*(_QWORD *)(v0 + 16));
  v1 = (_QWORD *)sub_1C077FDD8();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_1C0CBE794;
  return sub_1C078D870(v3);
}

uint64_t sub_1C0CBE794()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C07B4220();
  *(_QWORD *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
    return sub_1C077CF28(*(uint64_t (**)(void))(v1 + 8));
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0CBE7E8()
{
  uint64_t v0;

  sub_1C0CBEF08(*(_QWORD *)(v0 + 16));
  return sub_1C078D870(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0CBE82C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  BOOL v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _OWORD v71[2];
  uint64_t v72;

  v3 = v2;
  v4 = v1;
  v6 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_1C106ADE0();
  v9 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v41 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED761458 != -1)
    swift_once();
  v11 = sub_1C106F544();
  sub_1C079E000(v11, (uint64_t)qword_1ED78D818);
  swift_retain();
  v12 = sub_1C106F538();
  v13 = sub_1C10703A8();
  v14 = os_log_type_enabled(v12, v13);
  v39 = v8;
  v40 = v9;
  if (v14)
  {
    v15 = swift_slowAlloc();
    v38 = v2;
    v16 = (uint8_t *)v15;
    v17 = swift_slowAlloc();
    v43 = a1;
    v18 = v17;
    v45 = v17;
    *(_DWORD *)v16 = 136315138;
    sub_1C0A912C8();
    v44 = sub_1C0788DAC(v19, v20, &v45);
    sub_1C10705AC();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0771000, v12, v13, "PhaseMetricsStart %s", v16, 0xCu);
    swift_arrayDestroy();
    v21 = v18;
    a1 = v43;
    MEMORY[0x1C3BA8270](v21, -1, -1);
    v22 = v16;
    v3 = v38;
    MEMORY[0x1C3BA8270](v22, -1, -1);

  }
  else
  {

    swift_release();
  }
  result = sub_1C0CBC1D4();
  if (!v3)
  {
    v24 = result;
    v43 = a1;
    if (qword_1ED75AC08 != -1)
      swift_once();
    v25 = unk_1ED78D1D0;
    v26 = *(_QWORD *)(v4 + 16);
    v27 = *(_QWORD *)(v4 + 24);
    v63 = xmmword_1ED78D1B8;
    v64 = qword_1ED78D1C8;
    v65 = unk_1ED78D1D0;
    v66 = qword_1ED78D1D8;
    v67 = v26;
    v68 = v27;
    v69 = unk_1ED78D1D0;
    v70 = qword_1ED78D1D8;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0BCD07C(v25);
    sub_1C0BCD07C(v25);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0D4359C((__n128 *)&v63);
    v37 = v26;
    v38 = v24;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C077AB58(v25);
    swift_bridgeObjectRelease();
    sub_1C077AB58(v25);
    swift_bridgeObjectRelease();
    if (qword_1ED75AC18 != -1)
      swift_once();
    v28 = qword_1ED78D1F8;
    v55 = xmmword_1ED78D1E0;
    v56 = qword_1ED78D1F0;
    v57 = qword_1ED78D1F8;
    v58 = qword_1ED78D200;
    v59 = v37;
    v60 = v27;
    v61 = qword_1ED78D1F8;
    v62 = qword_1ED78D200;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0BCD07C(v28);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0BCD07C(v28);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0D4359C((__n128 *)&v55);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C077AB58(v28);
    swift_bridgeObjectRelease();
    sub_1C077AB58(v28);
    swift_bridgeObjectRelease();
    v29 = (uint64_t)v41;
    sub_1C106ADD4();
    if (qword_1ED75AC80 != -1)
      swift_once();
    v52 = xmmword_1ED78D320;
    v53 = *(_OWORD *)algn_1ED78D330;
    v54 = qword_1ED78D340;
    v71[0] = xmmword_1ED78D320;
    v30 = *(_QWORD *)&algn_1ED78D330[8];
    v72 = *(_QWORD *)algn_1ED78D330;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C07B35DC((uint64_t)v71);
    sub_1C08FD4A0((uint64_t)&v72);
    sub_1C0BCD07C(v30);
    sub_1C0CBC1D4();
    v31 = (uint64_t)v39;
    sub_1C0CD2580();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1C07B2F5C((uint64_t)v71);
    sub_1C08EE9A0((uint64_t)&v72);
    sub_1C077AB58(v30);
    v32 = sub_1C07B2D80(v31, 1, v42);
    sub_1C0784B6C(v31, (uint64_t *)&unk_1ED762690);
    if (v32 == 1)
    {
      v49 = xmmword_1ED78D320;
      v50 = *(_OWORD *)algn_1ED78D330;
      v51 = qword_1ED78D340;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v33 = v37;
      sub_1C0CA7678(v29, v38, v37, v27);
      swift_bridgeObjectRelease();
      v34 = v40;
      v35 = v33;
    }
    else
    {
      v34 = v40;
      v35 = v37;
    }
    if (qword_1ED755CB8 != -1)
    {
      swift_once();
      v35 = v37;
    }
    v46 = xmmword_1ED78D208;
    v47 = *(_OWORD *)&qword_1ED78D218;
    v48 = qword_1ED78D228;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0CA7678(v29, v38, v35, v27);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v29, v42);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C0CBEF08(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  int v36;
  void (*v37)(_BYTE *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(_BYTE *, uint64_t);
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  _BYTE v56[12];
  int v57;
  uint64_t v58;
  _BYTE *v59;
  _BYTE *v60;
  _BYTE *v61;
  _BYTE *v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _BYTE *v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  __int128 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  double v86;
  uint64_t v87;
  uint64_t v88;
  _OWORD v89[2];
  uint64_t v90;
  __int128 v91;
  __int128 v92;
  uint64_t v93;
  __int128 v94;
  uint64_t v95;
  __int128 v96;
  uint64_t v97;
  __int128 v98;
  _QWORD v99[2];

  v2 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v2);
  v4 = &v56[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v7 = &v56[-v6];
  v8 = sub_1C106ADE0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = &v56[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v12);
  v14 = &v56[-v13];
  MEMORY[0x1E0C80A78](v15);
  v17 = &v56[-v16];
  v18 = v69;
  result = sub_1C0CBC1D4();
  if (v18)
    return result;
  v61 = v14;
  v62 = v7;
  v66 = v8;
  v67 = a1;
  v59 = v11;
  v60 = v4;
  v69 = 0;
  v63 = result;
  v64 = v9;
  v65 = v17;
  sub_1C106ADD4();
  if (qword_1ED755CB8 != -1)
    swift_once();
  v91 = xmmword_1ED78D208;
  v92 = *(_OWORD *)&qword_1ED78D218;
  v93 = qword_1ED78D228;
  v94 = xmmword_1ED78D208;
  v20 = unk_1ED78D220;
  v95 = qword_1ED78D218;
  v21 = *(_QWORD *)(v68 + 16);
  v22 = *(_QWORD *)(v68 + 24);
  sub_1C07B35DC((uint64_t)&v94);
  sub_1C08FD4A0((uint64_t)&v95);
  sub_1C0BCD07C(v20);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v23 = v69;
  sub_1C0CBC1D4();
  v24 = v64;
  if (v23)
  {
    v69 = v23;
    swift_release();
    swift_bridgeObjectRelease();
    sub_1C07B2F5C((uint64_t)&v94);
    sub_1C08EE9A0((uint64_t)&v95);
    sub_1C077AB58(v20);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v24 + 8))(v65, v66);
  }
  v25 = (uint64_t)v62;
  sub_1C0CD2580();
  v69 = 0;
  swift_bridgeObjectRelease();
  swift_release();
  sub_1C07B2F5C((uint64_t)&v94);
  sub_1C08EE9A0((uint64_t)&v95);
  sub_1C077AB58(v20);
  v26 = v66;
  v27 = sub_1C07B2D80(v25, 1, v66);
  v58 = v21;
  if (v27 != 1)
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v24 + 32))(v61, v25, v26);
    if (qword_1ED75AC28 != -1)
      swift_once();
    v89[0] = xmmword_1ED78D230;
    v89[1] = *(_OWORD *)&qword_1ED78D240;
    v90 = qword_1ED78D250;
    v96 = xmmword_1ED78D230;
    v31 = unk_1ED78D248;
    v97 = qword_1ED78D240;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C07B35DC((uint64_t)&v96);
    sub_1C08FD4A0((uint64_t)&v97);
    sub_1C0BCD07C(v31);
    v32 = v69;
    sub_1C0CBC1D4();
    if (v32)
    {
      v69 = v32;
      swift_release();
      swift_bridgeObjectRelease();
      sub_1C07B2F5C((uint64_t)&v96);
      sub_1C08EE9A0((uint64_t)&v97);
      sub_1C077AB58(v31);
    }
    else
    {
      v35 = sub_1C0CD261C((uint64_t)v89, v58, v22);
      v69 = 0;
      v62 = (_BYTE *)v35;
      v57 = v36;
      swift_bridgeObjectRelease();
      swift_release();
      sub_1C07B2F5C((uint64_t)&v96);
      sub_1C08EE9A0((uint64_t)&v97);
      sub_1C077AB58(v31);
      if ((v57 & 1) != 0)
        v40 = 0.0;
      else
        v40 = *(double *)&v62;
      sub_1C106ADC8();
      v41 = qword_1ED78D240;
      v42 = unk_1ED78D248;
      v82 = xmmword_1ED78D230;
      v83 = qword_1ED78D240;
      v84 = unk_1ED78D248;
      v85 = qword_1ED78D250;
      v86 = v40 + v43;
      v87 = unk_1ED78D248;
      v88 = qword_1ED78D250;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C0BCD07C(v42);
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v62 = (_BYTE *)v41;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v44 = v69;
      sub_1C0D43648((__n128 *)&v82);
      v69 = v44;
      if (!v44)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C077AB58(v42);
        v26 = v66;
        (*(void (**)(_BYTE *, uint64_t))(v24 + 8))(v61, v66);
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C077AB58(v42);
      swift_release();
      swift_bridgeObjectRelease();
    }
    v37 = *(void (**)(_BYTE *, uint64_t))(v24 + 8);
    v38 = v66;
    v37(v61, v66);
    return ((uint64_t (*)(_BYTE *, uint64_t))v37)(v65, v38);
  }
  sub_1C0784B6C(v25, (uint64_t *)&unk_1ED762690);
LABEL_10:
  if (qword_1ED75AC80 != -1)
    swift_once();
  v79 = xmmword_1ED78D320;
  v80 = *(_OWORD *)algn_1ED78D330;
  v81 = qword_1ED78D340;
  v98 = xmmword_1ED78D320;
  v28 = *(_QWORD *)&algn_1ED78D330[8];
  v99[0] = *(_QWORD *)algn_1ED78D330;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C07B35DC((uint64_t)&v98);
  sub_1C08FD4A0((uint64_t)v99);
  sub_1C0BCD07C(v28);
  v29 = v69;
  sub_1C0CBC1D4();
  if (v29)
  {
    v69 = v29;
    swift_release();
    swift_bridgeObjectRelease();
    v30 = v65;
    sub_1C07B2F5C((uint64_t)&v98);
    sub_1C08EE9A0((uint64_t)v99);
    sub_1C077AB58(v28);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v24 + 8))(v30, v26);
  }
  sub_1C0CD2580();
  v33 = v22;
  v34 = v65;
  v69 = 0;
  v67 = v33;
  swift_bridgeObjectRelease();
  swift_release();
  sub_1C07B2F5C((uint64_t)&v98);
  sub_1C08EE9A0((uint64_t)v99);
  sub_1C077AB58(v28);
  v39 = (uint64_t)v60;
  if (sub_1C07B2D80((uint64_t)v60, 1, v26) == 1)
  {
    sub_1C0784B6C(v39, (uint64_t *)&unk_1ED762690);
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v24 + 32))(v59, v39, v26);
    sub_1C106ADC8();
    if (qword_1ED75AC70 != -1)
    {
      v62 = v45;
      swift_once();
      v45 = v62;
    }
    v46 = unk_1ED78D310;
    v72 = xmmword_1ED78D2F8;
    v73 = qword_1ED78D308;
    v74 = unk_1ED78D310;
    v75 = qword_1ED78D318;
    v76 = v45;
    v77 = unk_1ED78D310;
    v78 = qword_1ED78D318;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0BCD07C(v46);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v47 = v69;
    sub_1C0D43648((__n128 *)&v72);
    v69 = v47;
    if (v47)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C077AB58(v46);
      swift_release();
      swift_bridgeObjectRelease();
      v48 = *(void (**)(_BYTE *, uint64_t))(v64 + 8);
      v48(v59, v26);
      return ((uint64_t (*)(_BYTE *, uint64_t))v48)(v34, v26);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C077AB58(v46);
    (*(void (**)(_BYTE *, uint64_t))(v64 + 8))(v59, v26);
    swift_bridgeObjectRelease();
  }
  if (qword_1ED761458 != -1)
    swift_once();
  v49 = sub_1C106F544();
  sub_1C079E000(v49, (uint64_t)qword_1ED78D818);
  swift_retain();
  v50 = sub_1C106F538();
  v51 = sub_1C10703A8();
  if (os_log_type_enabled(v50, v51))
  {
    v52 = (uint8_t *)swift_slowAlloc();
    v53 = swift_slowAlloc();
    v71 = v53;
    *(_DWORD *)v52 = 136315138;
    sub_1C0A912C8();
    v70 = sub_1C0788DAC(v54, v55, &v71);
    sub_1C10705AC();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0771000, v50, v51, "PhaseMetricsFinish %s", v52, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BA8270](v53, -1, -1);
    MEMORY[0x1C3BA8270](v52, -1, -1);

    swift_release();
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v64 + 8))(v65, v66);
  }
  else
  {
    swift_release();

    swift_release();
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v64 + 8))(v34, v26);
  }
}

void sub_1C0CBF844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C0CBF9A4(a1, a2, a3);
}

void sub_1C0CBF854(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  sub_1C07ACF80((uint64_t *)&unk_1ED761470);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0776794();
  sub_1C078A8CC(a1, v3, (uint64_t *)&unk_1ED761470);
  v7 = sub_1C10700C0();
  if (sub_1C07B2D80(v3, 1, v7) == 1)
  {
    sub_1C0784B6C(v3, (uint64_t *)&unk_1ED761470);
  }
  else
  {
    sub_1C10700B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v3, v7);
  }
  if (*(_QWORD *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1C1070048();
    swift_unknownObjectRelease();
  }
  sub_1C07ACF80(&qword_1EF64D080);
  swift_task_create();
  sub_1C077C798();
}

void sub_1C0CBF9A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  sub_1C07ACF80((uint64_t *)&unk_1ED761470);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0776794();
  sub_1C078A8CC(a1, v3, (uint64_t *)&unk_1ED761470);
  v7 = sub_1C10700C0();
  if (sub_1C07B2D80(v3, 1, v7) == 1)
  {
    sub_1C0784B6C(v3, (uint64_t *)&unk_1ED761470);
  }
  else
  {
    sub_1C10700B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v3, v7);
  }
  if (*(_QWORD *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1C1070048();
    swift_unknownObjectRelease();
  }
  swift_task_create();
  sub_1C077C798();
}

uint64_t sub_1C0CBFAEC()
{
  uint64_t result;

  sub_1C07ACF80((uint64_t *)&unk_1ED75C2E0);
  sub_1C0778598();
  result = sub_1C0ECB304();
  qword_1ED78D3A0 = result;
  return result;
}

uint64_t sub_1C0CBFB28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  *(_BYTE *)(v1 + 24) = 4;
  *(_QWORD *)(v1 + 32) = 0;
  v3 = sub_1C0CBFB78(a1);
  sub_1C07B1F90(a1, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  *(_QWORD *)(v1 + 16) = v3;
  return v1;
}

uint64_t sub_1C0CBFB78(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v2 = sub_1C106F814();
  v21 = *(_QWORD *)(v2 - 8);
  v22 = v2;
  MEMORY[0x1E0C80A78](v2);
  sub_1C0778564();
  v5 = v4 - v3;
  v20 = sub_1C106F838();
  v6 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  sub_1C0778564();
  v9 = v8 - v7;
  v10 = sub_1C0779D10();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  sub_1C077583C(v13, (unint64_t *)&unk_1ED75E7B0);
  v14 = sub_1C1070450();
  swift_getObjectType();
  sub_1C07E6C80(a1, (uint64_t)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v15 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v16 = swift_allocObject();
  sub_1C07E563C((uint64_t)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  aBlock[4] = sub_1C0CCAF90;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C0F09A20;
  aBlock[3] = &unk_1E7A2A260;
  v17 = _Block_copy(aBlock);
  sub_1C09E0C08();
  sub_1C09E0C0C();
  sub_1C107045C();
  _Block_release(v17);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v5, v22);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v20);
  swift_release();
  sub_1C1070474();
  return v14;
}

void sub_1C0CBFD74()
{
  swift_getObjectType();
  sub_1C1070468();
  swift_unknownObjectRelease();
  swift_release();
  sub_1C0778534();
}

uint64_t sub_1C0CBFDB0()
{
  sub_1C0CBFD74();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0CBFDD0()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  if (qword_1ED762B18 != -1)
    swift_once();
  v0 = sub_1C106F544();
  sub_1C079E000(v0, (uint64_t)qword_1ED762AF8);
  v1 = sub_1C106F538();
  v2 = sub_1C10703A8();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_1C0771000, v1, v2, "Pipeline: handling SIGTERM", v3, 2u);
    MEMORY[0x1C3BA8270](v3, -1, -1);
  }

  if (qword_1ED755EC8 != -1)
    swift_once();
  sub_1C078E5F4();
  sub_1C0CBD7A0();
  return swift_release();
}

_QWORD *sub_1C0CBFF20(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[4];

  v3 = v1;
  v19[1] = *v1;
  type metadata accessor for Configuration();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v19 - v9;
  type metadata accessor for PhaseStores();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v11);
  sub_1C0778564();
  v14 = v13 - v12;
  sub_1C106CA9C();
  v1[2] = sub_1C106CA90();
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC24IntelligencePlatformCore8Pipeline_geoMapService) = 0;
  v15 = (uint64_t)v1 + OBJC_IVAR____TtC24IntelligencePlatformCore8Pipeline_config;
  sub_1C07E6C80(a1, v15, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  sub_1C07E6C80(a1, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  PhaseStores.init(config:)((uint64_t)v10, v14);
  if (v2)
  {
    sub_1C07B1F90(a1, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    swift_release();
    sub_1C07B1F90(v15, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);

    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_1C07E563C(v14, (uint64_t)v3 + OBJC_IVAR____TtC24IntelligencePlatformCore8Pipeline_stores, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
    sub_1C07E6C80(a1, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    type metadata accessor for Pipeline.GuardedData();
    v16 = swift_allocObject();
    sub_1C0CBFB28((uint64_t)v7);
    v19[3] = v16;
    sub_1C07ACF80(&qword_1ED759FA0);
    sub_1C077B5BC();
    v17 = sub_1C106E4C4();
    sub_1C07B1F90(a1, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC24IntelligencePlatformCore8Pipeline_lockbox) = v17;
  }
  return v3;
}

uint64_t Pipeline.deinit()
{
  uint64_t v0;

  swift_release();
  sub_1C07B1F90(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore8Pipeline_config, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  sub_1C07B1F90(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore8Pipeline_stores, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);

  swift_release();
  return v0;
}

uint64_t Pipeline.__deallocating_deinit()
{
  Pipeline.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0CC01C0(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  *(_QWORD *)(v5 + 720) = v4;
  *(_QWORD *)(v5 + 712) = a4;
  *(_QWORD *)(v5 + 704) = a3;
  *(_QWORD *)(v5 + 696) = a1;
  v7 = sub_1C107006C();
  *(_QWORD *)(v5 + 728) = v7;
  *(_QWORD *)(v5 + 736) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v5 + 744) = swift_task_alloc();
  *(_QWORD *)(v5 + 752) = swift_task_alloc();
  *(_BYTE *)(v5 + 578) = *a2;
  return swift_task_switch();
}

uint64_t sub_1C0CC0248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  uint64_t v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  _QWORD *v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t (*v32)(void);
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t);
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  sub_1C07796A0();
  v19 = sub_1C077583C(v18, (unint64_t *)&qword_1ED762BF0);
  if ((static NSUserDefaults.isGraphStoreManuallyOverridden.getter() & 1) != 0)
  {
    if (qword_1ED761458 != -1)
      swift_once();
    v20 = sub_1C077585C();
    sub_1C077965C(v20, (uint64_t)qword_1ED78D818);
    v21 = sub_1C077C13C();
    if (sub_1C077C10C(v21))
    {
      v22 = (uint8_t *)sub_1C0775854();
      *(_WORD *)v22 = 0;
      sub_1C0776778();
    }
    v23 = *(_QWORD *)(v17 + 696);

    if (v23 == 1)
    {
      sub_1C0CCA82C();
      sub_1C0775810();
      *v24 = 0xD000000000000061;
      v24[1] = 0x80000001C1107E50;
      sub_1C078820C((uint64_t)v24, 1);
      sub_1C07AC8D0();
      sub_1C07767BC();
      return sub_1C07785F4(*(uint64_t (**)(void))(v17 + 8));
    }
    else
    {
      sub_1C07AC8D0();
      sub_1C07767BC();
      v32 = (uint64_t (*)(void))sub_1C0779830();
      return sub_1C07785F4(v32);
    }
  }
  else
  {
    v25 = *(_BYTE *)(v17 + 578);
    v26 = *(_QWORD *)(v17 + 720);
    v27 = *(_QWORD *)(v17 + 696);
    *(_QWORD *)(v17 + 688) = 0;
    v28 = swift_task_alloc();
    v29 = *(_OWORD *)(v17 + 704);
    *(_QWORD *)(v28 + 16) = v26;
    *(_BYTE *)(v28 + 24) = v25;
    *(_QWORD *)(v28 + 32) = v27;
    *(_OWORD *)(v28 + 40) = v29;
    *(_QWORD *)(v28 + 56) = v17 + 688;
    sub_1C106E4B8();
    sub_1C07796F8();
    v30 = *(_QWORD *)(v17 + 688);
    *(_QWORD *)(v17 + 760) = v30;
    if (v30)
    {
      sub_1C0779758();
      v33 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v17 + 768) = v33;
      sub_1C07ACF80(&qword_1ED7614F0);
      *v33 = v17;
      v33[1] = sub_1C0CC0990;
      sub_1C077C524();
      return sub_1C10700F0();
    }
    else
    {
      sub_1C0CCA82C();
      v34 = sub_1C0775810();
      *v35 = 0;
      v35[1] = 0;
      sub_1C078820C((uint64_t)v35, 2);
      *(_QWORD *)(v17 + 672) = v34;
      sub_1C077C818();
      sub_1C07ACF80(&qword_1ED7614F0);
      if ((sub_1C077EE64() & 1) != 0)
      {
        v36 = *(unsigned __int8 *)(v17 + 578);
        sub_1C077C220();
        v37 = sub_1C078667C();
        v38(v37);
        objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
        v39 = (void *)*MEMORY[0x1E0D3E058];
        sub_1C07ACF80(&qword_1ED755F70);
        *(_OWORD *)(sub_1C078B860() + 16) = xmmword_1C1079220;
        sub_1C07BFFA4();
        *(_QWORD *)(v17 + 600) = v40;
        sub_1C077E288();
        v39;
        sub_1C07BA840();
        sub_1C0793BFC();
        return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_1C0CC0570 + *((int *)qword_1C0CC0980 + v36)))(v41, v42, v43, v44, v45, v46, v47, v48, a9, a10, a11, a12, a13, a14, a15, a16);
      }
      else
      {

        *(_QWORD *)(v17 + 680) = v34;
        sub_1C077C818();
        v49 = sub_1C077EE64();
        v71 = *(unsigned __int8 *)(v17 + 578);
        if (v49)
        {
          sub_1C077C220();
          v69 = *(_QWORD *)(v17 + 568);
          v70 = *(_QWORD *)(v17 + 560);
          HIDWORD(a9) = *(unsigned __int8 *)(v17 + 576);
          objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
          v50 = (void *)*MEMORY[0x1E0D3E068];
          sub_1C07ACF80(&qword_1ED755F70);
          *(_OWORD *)(sub_1C078B860() + 16) = xmmword_1C1079220;
          sub_1C07BFFA4();
          *(_QWORD *)(v17 + 632) = v51;
          sub_1C07BBE30();
          v50;
          sub_1C10706FC();
          sub_1C0793BFC();
          return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_1C0CC067C + *((int *)qword_1C0CC0970 + v71)))(v52, v53, v54, v55, v56, v57, v58, v59, a9, v69, v70, v71, a13, a14, a15, a16);
        }
        else
        {

          objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
          sub_1C07ACF80(&qword_1ED755F70);
          *(_OWORD *)(swift_initStackObject() + 16) = xmmword_1C1079220;
          sub_1C07BFFA4();
          *(_QWORD *)(v17 + 616) = v60;
          sub_1C0CCB054();
          sub_1C10706FC();
          sub_1C0793BFC();
          return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_1C0CC0748 + *((int *)qword_1C0CC0960 + v71)))(v61, v62, v63, v64, v65, v66, v67, v68, a9, a10, v17 + 536, v71, a13, a14, a15, a16);
        }
      }
    }
  }
}

uint64_t sub_1C0CC0990()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_1C077E88C();
  sub_1C0780AE0(v2);
  *(_QWORD *)(v0 + 776) = v1;
  swift_task_dealloc();
  swift_release();
  sub_1C077862C();
  return sub_1C0789D28();
}

uint64_t sub_1C0CC09E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1C077B704();
  sub_1C0CCB1F0();
  v14 = *(unsigned __int8 *)(v12 + 577);
  objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  sub_1C07ACF80(&qword_1ED755F70);
  v15 = *(unsigned __int8 *)(v12 + 578);
  if (v14 == 1)
  {
    v16 = (void *)*MEMORY[0x1E0D3E058];
    *(_OWORD *)(swift_initStackObject() + 16) = xmmword_1C1079220;
    *(_QWORD *)(v12 + 584) = v13;
    *(_QWORD *)(v12 + 592) = 0xEC00000065707954;
    v16;
    sub_1C0CCB1AC();
    sub_1C0793BFC();
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_1C0CC0AB0 + dword_1C0CC0BA4[v15]))(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10, a11, a12);
  }
  else
  {
    v26 = (void *)*MEMORY[0x1E0D3E060];
    *(_OWORD *)(swift_initStackObject() + 16) = xmmword_1C1079220;
    *(_QWORD *)(v12 + 648) = v13;
    *(_QWORD *)(v12 + 656) = 0xEC00000065707954;
    v26;
    sub_1C0CCB1AC();
    sub_1C0793BFC();
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_1C0CC0B1C + dword_1C0CC0B94[v15]))(v27, v28, v29, v30, v31, v32, v33, v34, a9, a10, a11, a12);
  }
}

uint64_t sub_1C0CC0B2C()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  sub_1C07AD34C();
  v0[12] = v3;
  v0[9] = v5;
  v0[10] = v4;
  v6 = sub_1C106F97C();
  sub_1C078225C(v6);

  swift_release();
  sub_1C07AC8D0();
  sub_1C07767BC();
  v7 = (uint64_t (*)(void))sub_1C0779830();
  return sub_1C0781074(v7);
}

uint64_t sub_1C0CC0BB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  sub_1C07796A0();
  sub_1C0CCB1F0();
  v18 = *(_QWORD *)(v16 + 776);
  *(_QWORD *)(v16 + 672) = v18;
  sub_1C077C818();
  sub_1C07ACF80(&qword_1ED7614F0);
  if (sub_1C077EE64())
  {
    v19 = *(unsigned __int8 *)(v16 + 578);
    v20 = *(_QWORD *)(v16 + 752);
    v21 = *(_QWORD *)(v16 + 744);
    v22 = *(_QWORD *)(v16 + 736);
    v23 = *(_QWORD *)(v16 + 728);
    sub_1C077C220();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v21, v20, v23);
    objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
    v24 = (void *)*MEMORY[0x1E0D3E058];
    sub_1C07ACF80(&qword_1ED755F70);
    *(_OWORD *)(sub_1C078B860() + 16) = xmmword_1C1079220;
    *(_QWORD *)(v16 + 600) = v17;
    sub_1C077E288();
    v24;
    sub_1C07BA840();
    sub_1C0793BFC();
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_1C0CC0CCC + dword_1C0CC10D4[v19]))(v25, v26, v27, v28, v29, v30, v31, v32, a9, a10, a11, a12, a13, a14, a15, a16);
  }
  else
  {

    *(_QWORD *)(v16 + 680) = v18;
    sub_1C077C818();
    v34 = sub_1C077EE64();
    v54 = *(unsigned __int8 *)(v16 + 578);
    if (v34)
    {
      sub_1C077C220();
      v52 = *(_QWORD *)(v16 + 568);
      v53 = *(_QWORD *)(v16 + 560);
      objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
      v35 = (void *)*MEMORY[0x1E0D3E068];
      sub_1C07ACF80(&qword_1ED755F70);
      *(_OWORD *)(sub_1C078B860() + 16) = xmmword_1C1079220;
      *(_QWORD *)(v16 + 632) = v17;
      sub_1C07BBE30();
      v35;
      sub_1C10706FC();
      sub_1C0793BFC();
      return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_1C0CC0DD0 + dword_1C0CC10C4[v54]))(v36, v37, v38, v39, v40, v41, v42, v43, a9, v52, v53, v54, a13, a14, a15, a16);
    }
    else
    {

      objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
      sub_1C07ACF80(&qword_1ED755F70);
      *(_OWORD *)(swift_initStackObject() + 16) = xmmword_1C1079220;
      *(_QWORD *)(v16 + 616) = v17;
      sub_1C0CCB054();
      sub_1C10706FC();
      sub_1C0793BFC();
      return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_1C0CC0E98 + dword_1C0CC10B4[v54]))(v44, v45, v46, v47, v48, v49, v50, v51, a9, a10, v16 + 536, v54, a13, a14, a15, a16);
    }
  }
}

void sub_1C0CC0EA8()
{
  void *v0;
  void *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1C07AD34C();
  v2[12] = v3;
  v2[9] = v5;
  v2[10] = v4;
  v6 = sub_1C106F97C();
  sub_1C0CCA3E4((uint64_t)v1, 0, v6, v0);

  sub_1C077B200();
  swift_getErrorValue();
  sub_1C0CCA82C();
  sub_1C0775810();
  sub_1C0CCB234(v7);
  swift_willThrow();
  JUMPOUT(0x1C0CC1090);
}

void sub_1C0CC0EB0()
{
  void *v0;
  void *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_1C07A1DEC();
  v5 = v2[93];
  v6 = v2[92];
  v7 = v2[91];
  v3[12] = v4;
  v3[9] = v9;
  v3[10] = v8;
  v10 = sub_1C106F97C();
  sub_1C078225C(v10);

  sub_1C0CCA82C();
  sub_1C0775810();
  v12 = v11;
  sub_1C0794BAC(&qword_1ED759800, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF05E0], MEMORY[0x1E0DF05E8]);
  *(_QWORD *)v12 = sub_1C1070D74();
  *(_QWORD *)(v12 + 8) = v13;
  *(_BYTE *)(v12 + 16) = 1;
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  JUMPOUT(0x1C0CC1090);
}

void sub_1C0CC0F74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  void *v11;
  void *v12;
  _QWORD *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1C07A1DEC();
  v13[12] = v14;
  v13[9] = v17;
  v13[10] = v16;
  v18 = sub_1C106F97C();
  sub_1C07817C8(v18);

  sub_1C0CCA82C();
  sub_1C0775810();
  *(_QWORD *)v19 = a11;
  *(_QWORD *)(v19 + 8) = a10;
  *(_BYTE *)(v19 + 16) = v15;
  swift_willThrow();
  JUMPOUT(0x1C0CC1090);
}

void sub_1C0CC0FF0()
{
  void *v0;
  void *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1C07A1DEC();
  v2[12] = v3;
  v2[9] = v5;
  v2[10] = v4;
  v6 = sub_1C106F97C();
  sub_1C0CCA3E4((uint64_t)v1, 0, v6, v0);

  sub_1C077B200();
  swift_getErrorValue();
  sub_1C0CCA82C();
  sub_1C0775810();
  sub_1C0CCB234(v7);
  swift_willThrow();
  JUMPOUT(0x1C0CC1090);
}

void sub_1C0CC10E4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  id v27;
  void *v28;
  id v29;
  _QWORD v30[10];
  uint64_t v31;
  uint64_t v32;
  _WORD v33[8];
  char *v34;

  v30[8] = a6;
  v30[9] = a7;
  v30[7] = a5;
  v31 = a3;
  v32 = a4;
  v9 = sub_1C07ACF80((uint64_t *)&unk_1ED761470);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Pipeline.StatusStore();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v30 - v16;
  v18 = *a1;
  v19 = a2 + OBJC_IVAR____TtC24IntelligencePlatformCore8Pipeline_config;
  v20 = v34;
  sub_1C0CC1618(a2 + OBJC_IVAR____TtC24IntelligencePlatformCore8Pipeline_config);
  if (!v20)
  {
    v30[3] = v13;
    v30[4] = v14;
    v30[5] = (char *)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    v30[6] = v18;
    v34 = v11;
    sub_1C07E6C80(v19, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    v21 = v31;
    v22 = v32;
    v17[*(int *)(v12 + 20)] = v31;
    sub_1C0CC18F0((uint64_t)v17, v22);
    v30[2] = a2;
    if (qword_1ED761458 != -1)
      swift_once();
    v23 = sub_1C106F544();
    sub_1C079E000(v23, (uint64_t)qword_1ED78D818);
    v24 = sub_1C106F538();
    v25 = sub_1C10703A8();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_1C0771000, v24, v25, "Pipeline: run starting.", v26, 2u);
      MEMORY[0x1C3BA8270](v26, -1, -1);
    }

    v27 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
    v28 = (void *)*MEMORY[0x1E0D3E070];
    sub_1C07ACF80(&qword_1ED755F70);
    *(_OWORD *)(swift_initStackObject() + 16) = xmmword_1C1079220;
    strcpy((char *)v33, "pipelineType");
    HIBYTE(v33[6]) = 0;
    v33[7] = -5120;
    v29 = v28;
    sub_1C10706FC();
    __asm { BR              X12 }
  }
}

uint64_t sub_1C0CC1618(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  if (*(_QWORD *)(v1 + 32))
  {
    v3 = *(unsigned __int8 *)(v1 + 24);
    if (v3 == 4)
    {
      if (qword_1ED761458 != -1)
        swift_once();
      v4 = sub_1C106F544();
      sub_1C079E000(v4, (uint64_t)qword_1ED78D818);
      v5 = sub_1C106F538();
      v6 = sub_1C107039C();
      if (os_log_type_enabled(v5, v6))
      {
        v7 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v7 = 0;
        _os_log_impl(&dword_1C0771000, v5, v6, "Pipeline: pipelineType was nil when task was not nil.", v7, 2u);
        MEMORY[0x1C3BA8270](v7, -1, -1);
      }

      sub_1C0CCA82C();
      swift_allocError();
      *(_QWORD *)v8 = 0;
      *(_QWORD *)(v8 + 8) = 0;
    }
    else
    {
      if (qword_1ED761458 != -1)
        swift_once();
      v11 = sub_1C106F544();
      sub_1C079E000(v11, (uint64_t)qword_1ED78D818);
      v12 = sub_1C106F538();
      v13 = sub_1C10703A8();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc();
        v15 = swift_slowAlloc();
        v18 = v15;
        *(_DWORD *)v14 = 136315138;
        PipelineType.description.getter();
        sub_1C0788DAC(v16, v17, &v18);
        sub_1C10705AC();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C0771000, v12, v13, "Pipeline: already running %s pipeline.", v14, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BA8270](v15, -1, -1);
        MEMORY[0x1C3BA8270](v14, -1, -1);
      }

      sub_1C0CCA82C();
      swift_allocError();
      *(_QWORD *)v8 = v3;
      *(_QWORD *)(v8 + 8) = 0;
    }
    *(_BYTE *)(v8 + 16) = 0;
    return swift_willThrow();
  }
  result = sub_1C0BAE9E0(a1, 1);
  if (!v2 && (result & 1) == 0)
  {
    sub_1C0CCA82C();
    swift_allocError();
    *(_OWORD *)v10 = xmmword_1C10AF610;
    *(_BYTE *)(v10 + 16) = 2;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1C0CC18F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *object;
  BOOL v6;
  char v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v27;

  object = Pipeline.StatusStore.currentSessionId()().value._object;
  swift_bridgeObjectRelease();
  if (object)
  {
    v6 = sub_1C0CD291C(10);
    sub_1C0CD2A28();
    if (v6 && (v7 & 1) == 0)
    {
      if (qword_1ED761458 != -1)
        swift_once();
      v8 = sub_1C106F544();
      sub_1C079E000(v8, (uint64_t)qword_1ED78D818);
      v9 = sub_1C106F538();
      v10 = sub_1C1070390();
      if (os_log_type_enabled(v9, v10))
      {
        v11 = (uint8_t *)swift_slowAlloc();
        v12 = swift_slowAlloc();
        v27 = v12;
        *(_DWORD *)v11 = 136315138;
        v13 = sub_1C08D873C();
        sub_1C0788DAC(v13, v14, &v27);
        sub_1C10705AC();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C0771000, v9, v10, "%s pipeline failure: Tried too many times for current session", v11, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BA8270](v12, -1, -1);
        MEMORY[0x1C3BA8270](v11, -1, -1);
      }

      sub_1C07D4B70(0, (unint64_t *)&qword_1ED762BF0);
      if ((static NSUserDefaults.testTelemetry.getter() & 1) != 0 || a2 != 1)
        sub_1C0CD0E44();
      sub_1C0CD2B50();
      if ((v15 & 1) == 0)
      {
        v16 = sub_1C106F538();
        v17 = sub_1C10703A8();
        if (os_log_type_enabled(v16, v17))
        {
          v18 = (uint8_t *)swift_slowAlloc();
          v19 = swift_slowAlloc();
          v27 = v19;
          *(_DWORD *)v18 = 136315138;
          v20 = sub_1C08D873C();
          sub_1C0788DAC(v20, v21, &v27);
          sub_1C10705AC();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C0771000, v16, v17, "%s reset intermediate data", v18, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C3BA8270](v19, -1, -1);
          MEMORY[0x1C3BA8270](v18, -1, -1);
        }

        LOBYTE(v27) = *(_BYTE *)(a1 + *(int *)(type metadata accessor for Pipeline.StatusStore() + 20));
        sub_1C0CC2C94((unsigned __int8 *)&v27);
        type metadata accessor for PhaseStores();
        sub_1C0AB3030();
        if (!v2)
        {
          sub_1C0CBC1D4();
          v22 = sub_1C0CC300C();
          v23 = *(_QWORD *)(v22 + 16);
          if (v23)
          {
            v24 = (_QWORD *)(v22 + 32);
            do
            {
              v25 = sub_1C07A9480(v24, v24[3]);
              sub_1C0D68FF4((uint64_t)v25, 0, 0);
              v24 += 5;
              --v23;
            }
            while (v23);
          }
          swift_release();
          swift_bridgeObjectRelease();
        }
      }
    }
  }
  return sub_1C0CC2B7C();
}

uint64_t sub_1C0CC1CD4(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  void *object;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(_QWORD, _QWORD);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t inited;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  void (*v60)(_QWORD, _QWORD);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v76;
  BOOL v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t *v87;
  uint64_t result;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  void (*v92)(char *, uint64_t, uint64_t);
  void (*v93)(_QWORD, _QWORD);
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  __int128 v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  __int128 v104;
  uint64_t v105;
  uint64_t v106;
  __int128 v107;
  __int128 v108;
  uint64_t v109;
  __int128 v110;
  uint64_t v111;

  LODWORD(v2) = a2;
  v4 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v4);
  v100 = (char *)&v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C106AE28();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_1C106ADE0();
  v102 = *(_QWORD *)(v103 - 8);
  MEMORY[0x1E0C80A78](v103);
  v95 = (char *)&v89 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (uint64_t)&v89 - v12;
  v14 = sub_1C07ACF80(&qword_1ED75AB08);
  MEMORY[0x1E0C80A78](v14);
  v16 = (uint64_t *)((char *)&v89 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v97 = a1;
  object = Pipeline.StatusStore.currentSessionId()().value._object;
  swift_bridgeObjectRelease();
  v101 = MEMORY[0x1E0DEE9D8];
  if (!object)
  {
    v93 = (void (*)(_QWORD, _QWORD))v9;
    v96 = v7;
    *(_QWORD *)&v98 = v6;
    LODWORD(v99) = v2;
    if (qword_1ED75AC38 != -1)
      swift_once();
    v18 = *((_QWORD *)&xmmword_1ED78D258 + 1);
    v19 = xmmword_1ED78D258;
    v20 = qword_1ED78D268;
    v21 = unk_1ED78D270;
    v22 = qword_1ED78D278;
    sub_1C106ADD4();
    v23 = v13;
    v24 = v102;
    v25 = v103;
    (*(void (**)(char *, uint64_t, uint64_t))(v102 + 16))((char *)v16 + *(int *)(v14 + 44), v23, v103);
    *v16 = v19;
    v16[1] = v18;
    v16[2] = v20;
    v16[3] = v21;
    v16[4] = v22;
    v26 = (uint64_t *)((char *)v16 + *(int *)(v14 + 48));
    *v26 = v21;
    v26[1] = v22;
    sub_1C0BCD07C(v21);
    sub_1C0BCD07C(v21);
    v27 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
    v13 = v23;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v27(v23, v25);
    v94 = v14;
    *((_QWORD *)&v108 + 1) = v14;
    sub_1C0CCA9F4((unint64_t *)&unk_1ED755C98, &qword_1ED75AB08);
    v109 = v28;
    v29 = sub_1C079DFC4((uint64_t *)&v107);
    sub_1C078A8CC((uint64_t)v16, (uint64_t)v29, &qword_1ED75AB08);
    v92 = (void (*)(char *, uint64_t, uint64_t))sub_1C07ACF80(&qword_1ED75D340);
    v2 = swift_allocObject();
    v91 = xmmword_1C1079220;
    *(_OWORD *)(v2 + 16) = xmmword_1C1079220;
    sub_1C077DD60(&v107, v2 + 32);
    sub_1C0784B6C((uint64_t)v16, &qword_1ED75AB08);
    if (qword_1ED75ACA0 != -1)
      swift_once();
    v30 = *((_QWORD *)&xmmword_1ED78D370 + 1);
    v90 = xmmword_1ED78D370;
    v32 = qword_1ED78D380;
    v31 = unk_1ED78D388;
    v33 = qword_1ED78D390;
    v34 = v93;
    sub_1C106A4EC();
    v35 = sub_1C106ADF8();
    v37 = v36;
    (*(void (**)(_QWORD, _QWORD))(v96 + 8))(v34, v98);
    *((_QWORD *)&v108 + 1) = sub_1C07ACF80(&qword_1ED749880);
    sub_1C0CCA9F4(&qword_1ED749878, &qword_1ED749880);
    v109 = v38;
    v39 = (_QWORD *)swift_allocObject();
    *(_QWORD *)&v107 = v39;
    v39[2] = v90;
    v39[3] = v30;
    v39[4] = v32;
    v39[5] = v31;
    v39[6] = v33;
    v39[7] = v35;
    v39[8] = v37;
    v39[9] = v31;
    v39[10] = v33;
    v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = v91;
    sub_1C077DD60(&v107, v40 + 32);
    sub_1C07ACF80(&qword_1ED75D360);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1078FC0;
    *(_QWORD *)(inited + 32) = v2;
    *(_QWORD *)(inited + 40) = v40;
    *(_QWORD *)&v107 = MEMORY[0x1E0DEE9D8];
    sub_1C0BCD07C(v31);
    sub_1C0BCD07C(v31);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0BDBA50();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0BDBA50();
    swift_setDeallocating();
    sub_1C0BE8E70();
    v101 = v107;
    v14 = v94;
    LOBYTE(v2) = v99;
  }
  if (qword_1ED75AC00 != -1)
LABEL_40:
    swift_once();
  v42 = xmmword_1ED78D190;
  v43 = qword_1ED78D1A0;
  v44 = qword_1ED78D1A8;
  v45 = qword_1ED78D1B0;
  *((_QWORD *)&v108 + 1) = sub_1C07ACF80(&qword_1ED75AB30);
  sub_1C0CCA9F4(&qword_1ED75AB28, &qword_1ED75AB30);
  v109 = v46;
  v47 = swift_allocObject();
  *(_QWORD *)&v107 = v47;
  *(_OWORD *)(v47 + 16) = v42;
  *(_QWORD *)(v47 + 32) = v43;
  *(_QWORD *)(v47 + 40) = v44;
  *(_QWORD *)(v47 + 48) = v45;
  *(_BYTE *)(v47 + 56) = v2;
  *(_QWORD *)(v47 + 64) = v44;
  *(_QWORD *)(v47 + 72) = v45;
  v99 = sub_1C07ACF80(&qword_1ED75D340);
  v48 = swift_allocObject();
  v98 = xmmword_1C1079220;
  *(_OWORD *)(v48 + 16) = xmmword_1C1079220;
  v96 = v48;
  sub_1C077DD60(&v107, v48 + 32);
  sub_1C0BCD07C(v44);
  sub_1C0BCD07C(v44);
  v49 = qword_1ED755CA8;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  if (v49 != -1)
    swift_once();
  v50 = xmmword_1ED78D648;
  v51 = qword_1ED78D658;
  v52 = unk_1ED78D660;
  v53 = qword_1ED78D668;
  sub_1C106ADD4();
  v54 = (char *)v16 + *(int *)(v14 + 44);
  v55 = v14;
  v56 = v13;
  v57 = v102;
  v58 = v103;
  v92 = *(void (**)(char *, uint64_t, uint64_t))(v102 + 16);
  v92(v54, v56, v103);
  *(_OWORD *)v16 = v50;
  v16[2] = v51;
  v16[3] = v52;
  v16[4] = v53;
  v59 = (uint64_t *)((char *)v16 + *(int *)(v55 + 48));
  *v59 = v52;
  v59[1] = v53;
  sub_1C0BCD07C(v52);
  sub_1C0BCD07C(v52);
  v60 = *(void (**)(_QWORD, _QWORD))(v57 + 8);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v61 = v58;
  v93 = v60;
  v60(v56, v58);
  *((_QWORD *)&v108 + 1) = v55;
  sub_1C0CCA9F4((unint64_t *)&unk_1ED755C98, &qword_1ED75AB08);
  v63 = v62;
  v109 = v62;
  v64 = sub_1C079DFC4((uint64_t *)&v107);
  sub_1C078A8CC((uint64_t)v16, (uint64_t)v64, &qword_1ED75AB08);
  v65 = swift_allocObject();
  *(_OWORD *)(v65 + 16) = v98;
  sub_1C077DD60(&v107, v65 + 32);
  sub_1C0784B6C((uint64_t)v16, &qword_1ED75AB08);
  if (qword_1ED75ABC0 != -1)
    swift_once();
  v107 = xmmword_1ED78D140;
  v108 = *(_OWORD *)&qword_1ED78D150;
  v109 = qword_1ED78D160;
  v110 = xmmword_1ED78D140;
  v66 = unk_1ED78D158;
  v111 = qword_1ED78D150;
  sub_1C07B35DC((uint64_t)&v110);
  sub_1C08FD4A0((uint64_t)&v111);
  sub_1C0BCD07C(v66);
  sub_1C0CBC1D4();
  v94 = v55;
  v14 = (uint64_t)v100;
  sub_1C0CD2580();
  v67 = v96;
  swift_release();
  sub_1C07B2F5C((uint64_t)&v110);
  sub_1C08EE9A0((uint64_t)&v111);
  sub_1C077AB58(v66);
  v79 = sub_1C07B2D80(v14, 1, v61);
  if (v79 == 1)
  {
    sub_1C0784B6C(v14, (uint64_t *)&unk_1ED762690);
    v68 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v102 + 32))(v95, v14, v61);
    v80 = v61;
    if (qword_1ED75AC98 != -1)
    {
      swift_once();
      v80 = v61;
    }
    v82 = qword_1ED78D348;
    v81 = unk_1ED78D350;
    v83 = qword_1ED78D358;
    v84 = unk_1ED78D360;
    v85 = qword_1ED78D368;
    v14 = v94;
    v92((char *)v16 + *(int *)(v94 + 44), (uint64_t)v95, v80);
    *v16 = v82;
    v16[1] = v81;
    v16[2] = v83;
    v16[3] = v84;
    v16[4] = v85;
    v86 = (uint64_t *)((char *)v16 + *(int *)(v14 + 48));
    *v86 = v84;
    v86[1] = v85;
    v105 = v14;
    v106 = v63;
    v87 = sub_1C079DFC4((uint64_t *)&v104);
    sub_1C078A8CC((uint64_t)v16, (uint64_t)v87, &qword_1ED75AB08);
    v68 = swift_allocObject();
    *(_OWORD *)(v68 + 16) = v98;
    sub_1C077DD60(&v104, v68 + 32);
    sub_1C0BCD07C(v84);
    sub_1C0BCD07C(v84);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0784B6C((uint64_t)v16, &qword_1ED75AB08);
    v93(v95, v103);
  }
  sub_1C07ACF80(&qword_1ED75D360);
  v69 = swift_initStackObject();
  *(_OWORD *)(v69 + 16) = xmmword_1C10795A0;
  *(_QWORD *)(v69 + 32) = v101;
  *(_QWORD *)(v69 + 40) = v67;
  *(_QWORD *)(v69 + 48) = v65;
  *(_QWORD *)(v69 + 56) = v68;
  v70 = MEMORY[0x1E0DEE9D8];
  v13 = 32;
  LOBYTE(v2) = 40;
  do
  {
    v71 = *(_QWORD *)(v69 + v13);
    v72 = *(_QWORD *)(v71 + 16);
    v16 = *(uint64_t **)(v70 + 16);
    if (__OFADD__(v16, v72))
    {
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    if (!swift_isUniquelyReferenced_nonNull_native() || (uint64_t)v16 + v72 > *(_QWORD *)(v70 + 24) >> 1)
    {
      sub_1C07ED398();
      v70 = v73;
    }
    if (*(_QWORD *)(v71 + 16))
    {
      v74 = *(_QWORD *)(v70 + 16);
      if ((*(_QWORD *)(v70 + 24) >> 1) - v74 < v72)
        goto LABEL_38;
      v16 = (uint64_t *)(v70 + 40 * v74 + 32);
      if (v71 + 32 < (unint64_t)&v16[5 * v72] && (unint64_t)v16 < v71 + 32 + 40 * v72)
      {
        result = sub_1C10709F0();
        __break(1u);
        return result;
      }
      sub_1C07ACF80(&qword_1ED75C0F0);
      swift_arrayInitWithCopy();
      if (v72)
      {
        v76 = *(_QWORD *)(v70 + 16);
        v77 = __OFADD__(v76, v72);
        v78 = v76 + v72;
        if (v77)
          goto LABEL_39;
        *(_QWORD *)(v70 + 16) = v78;
      }
    }
    else if (v72)
    {
      goto LABEL_37;
    }
    swift_bridgeObjectRelease();
    v13 += 8;
  }
  while (v13 != 64);
  swift_setDeallocating();
  sub_1C0BE8E70();
  return v70;
}

uint64_t sub_1C0CC2814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int *a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t);

  v8[3] = a4;
  v8[4] = a5;
  v8[2] = a1;
  v12 = (uint64_t (*)(uint64_t))((char *)a6 + *a6);
  v10 = (_QWORD *)swift_task_alloc();
  v8[5] = v10;
  *v10 = v8;
  v10[1] = sub_1C0CC2880;
  return v12(a8);
}

uint64_t sub_1C0CC2880(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v6;

  v6 = *v2;
  v4 = v6;
  sub_1C0780AE0(&v6);
  *(_QWORD *)(v4 + 48) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_BYTE *)(v4 + 56) = a1 & 1;
  sub_1C077862C();
  return swift_task_switch();
}

uint64_t sub_1C0CC28F0()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  **(_BYTE **)(v0 + 16) = *(_BYTE *)(v0 + 56);
  sub_1C1070120();
  sub_1C077ED94();
  sub_1C077EC40(OBJC_IVAR____TtC24IntelligencePlatformCore8Pipeline_config);
  v1 = (uint64_t (*)(void))sub_1C0779830();
  return sub_1C0795770(v1);
}

uint64_t sub_1C0CC2934()
{
  uint64_t v0;

  sub_1C1070120();
  sub_1C077ED94();
  sub_1C077EC40(OBJC_IVAR____TtC24IntelligencePlatformCore8Pipeline_config);
  return sub_1C0795770(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0CC2970(uint64_t a1)
{
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;

  if (*(_QWORD *)(*(_QWORD *)a1 + 32))
  {
    swift_retain();
    sub_1C07ACF80(&qword_1ED7614F0);
    sub_1C10700FC();
    if (qword_1ED761458 != -1)
      swift_once();
    v1 = sub_1C106F544();
    sub_1C079E000(v1, (uint64_t)qword_1ED78D818);
    v2 = sub_1C106F538();
    v3 = sub_1C10703A8();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_1C0771000, v2, v3, "Pipeline: task cancelled.", v4, 2u);
      MEMORY[0x1C3BA8270](v4, -1, -1);
    }

    return swift_release();
  }
  else
  {
    if (qword_1ED761458 != -1)
      swift_once();
    v6 = sub_1C106F544();
    sub_1C079E000(v6, (uint64_t)qword_1ED78D818);
    v7 = sub_1C106F538();
    v8 = sub_1C10703A8();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_1C0771000, v7, v8, "Pipeline: stop called but pipeline is not running.", v9, 2u);
      MEMORY[0x1C3BA8270](v9, -1, -1);
    }

    sub_1C0CCA82C();
    swift_allocError();
    *(_OWORD *)v10 = xmmword_1C107E790;
    *(_BYTE *)(v10 + 16) = 2;
    return swift_willThrow();
  }
}

uint64_t sub_1C0CC2B7C()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;

  if (qword_1ED75AB90 != -1)
    swift_once();
  v1 = qword_1ED78D0F0;
  v0 = *(_QWORD *)algn_1ED78D0F8;
  v3 = qword_1ED78D100;
  v2 = qword_1ED78D108;
  v4 = qword_1ED78D110;
  sub_1C0CBC1D4();
  v6.n128_u64[0] = v1;
  v6.n128_u64[1] = v0;
  v7 = v3;
  v8 = v2;
  v9 = v4;
  v10 = 0;
  v11 = v2;
  v12 = v4;
  sub_1C0BCD07C(v2);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0D433C8(&v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C077AB58(v2);
  return swift_release();
}

void sub_1C0CC2C94(unsigned __int8 *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = sub_1C07ACF80(&qword_1ED7618D0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *a1;
  if (qword_1ED761458 != -1)
    swift_once();
  v6 = sub_1C106F544();
  sub_1C079E000(v6, (uint64_t)qword_1ED78D818);
  v7 = sub_1C106F538();
  v8 = sub_1C10703A8();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v17 = v10;
    *(_DWORD *)v9 = 136315394;
    v11 = sub_1C08D873C();
    v16 = sub_1C0788DAC(v11, v12, &v17);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    LOBYTE(v16) = v5;
    sub_1C07ACF80((uint64_t *)&unk_1ED755B00);
    v13 = sub_1C106FB5C();
    v16 = sub_1C0788DAC(v13, v14, &v17);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0771000, v7, v8, "%s - clear intermidate data for pipelineType: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3BA8270](v10, -1, -1);
    MEMORY[0x1C3BA8270](v9, -1, -1);
  }

  type metadata accessor for PhaseStores();
  LOBYTE(v17) = v5;
  sub_1C0ABA674(&v17);
  LOBYTE(v17) = v5;
  sub_1C0AADF0C(&v17);
  LOBYTE(v17) = v5;
  v15 = sub_1C106D1F8();
  sub_1C07B2D8C((uint64_t)v4, 1, 1, v15);
  sub_1C0AB2308((char *)&v17, (uint64_t)v4);
  sub_1C0784B6C((uint64_t)v4, &qword_1ED7618D0);
  LOBYTE(v17) = v5;
  sub_1C07B2D8C((uint64_t)v4, 1, 1, v15);
  sub_1C0AB25AC((char *)&v17, (uint64_t)v4);
  sub_1C0784B6C((uint64_t)v4, &qword_1ED7618D0);
  LOBYTE(v17) = v5;
  sub_1C07B2D8C((uint64_t)v4, 1, 1, v15);
  sub_1C0AB2294((char *)&v17, (uint64_t)v4);
  sub_1C0784B6C((uint64_t)v4, &qword_1ED7618D0);
  __asm { BR              X9 }
}

uint64_t sub_1C0CC300C()
{
  __int128 *inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t i;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  inited = &v34;
  if (qword_1ED75AC50 != -1)
LABEL_30:
    swift_once();
  v1 = qword_1ED78D2D0[0];
  v2 = qword_1ED78D2E8;
  v3 = unk_1ED78D2F0;
  *(__int128 *)((char *)inited + 136) = unk_1ED78D2D8;
  *(_QWORD *)&v46 = v1;
  v47 = v2;
  v48 = v3;
  v49 = 0;
  v50 = v2;
  v51 = v3;
  v4 = sub_1C0D55284(&v46);
  if (qword_1ED75AC58 != -1)
    swift_once();
  v5 = qword_1ED78D670[0];
  v6 = qword_1ED78D688;
  v7 = unk_1ED78D690;
  *(__int128 *)((char *)inited + 72) = unk_1ED78D678;
  *(_QWORD *)&v40 = v5;
  v41 = v6;
  v42 = v7;
  v43 = 0;
  v44 = v6;
  v45 = v7;
  v8 = sub_1C0D55284(&v40);
  if (qword_1ED75AC60 != -1)
    swift_once();
  v9 = qword_1ED78D698[0];
  v10 = qword_1ED78D6B0;
  v11 = unk_1ED78D6B8;
  *(__int128 *)((char *)inited + 8) = unk_1ED78D6A0;
  *(_QWORD *)&v34 = v9;
  v35 = v10;
  v36 = v11;
  v37 = 0;
  v38 = v10;
  v39 = v11;
  v12 = sub_1C0D55284(&v34);
  if (qword_1ED756098 != -1)
    swift_once();
  v27 = qword_1ED78D2A8;
  v28 = unk_1ED78D2B0;
  v29 = qword_1ED78D2C0;
  v30 = qword_1ED78D2C8;
  v31 = 1;
  v32 = qword_1ED78D2C0;
  v33 = qword_1ED78D2C8;
  v13 = sub_1C0D55300((__int128 *)&v27);
  sub_1C07ACF80(&qword_1ED75D360);
  inited = (__int128 *)swift_initStackObject();
  inited[1] = xmmword_1C10795A0;
  *((_QWORD *)inited + 4) = v4;
  *((_QWORD *)inited + 5) = v8;
  *((_QWORD *)inited + 6) = v12;
  *((_QWORD *)inited + 7) = v13;
  v14 = MEMORY[0x1E0DEE9D8];
  for (i = 32; i != 64; i += 8)
  {
    v16 = *(_QWORD *)((char *)inited + i);
    v17 = *(_QWORD *)(v16 + 16);
    v18 = *(_QWORD *)(v14 + 16);
    if (__OFADD__(v18, v17))
    {
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    if (!swift_isUniquelyReferenced_nonNull_native() || v18 + v17 > *(_QWORD *)(v14 + 24) >> 1)
    {
      sub_1C07ED398();
      v14 = v19;
    }
    if (*(_QWORD *)(v16 + 16))
    {
      v20 = *(_QWORD *)(v14 + 16);
      if ((*(_QWORD *)(v14 + 24) >> 1) - v20 < v17)
        goto LABEL_28;
      v21 = v14 + 40 * v20 + 32;
      if (v16 + 32 < v21 + 40 * v17 && v21 < v16 + 32 + 40 * v17)
      {
        result = sub_1C10709F0();
        __break(1u);
        return result;
      }
      sub_1C07ACF80(&qword_1ED75C0F0);
      swift_arrayInitWithCopy();
      if (v17)
      {
        v23 = *(_QWORD *)(v14 + 16);
        v24 = __OFADD__(v23, v17);
        v25 = v23 + v17;
        if (v24)
          goto LABEL_29;
        *(_QWORD *)(v14 + 16) = v25;
      }
    }
    else if (v17)
    {
      goto LABEL_27;
    }
    swift_bridgeObjectRelease();
  }
  swift_setDeallocating();
  sub_1C0BE8E70();
  return v14;
}

uint64_t sub_1C0CC3348()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1ED761458 != -1)
    swift_once();
  v0 = sub_1C106F544();
  sub_1C079E000(v0, (uint64_t)qword_1ED78D818);
  v1 = sub_1C106F538();
  v2 = sub_1C1070378();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = swift_slowAlloc();
    *(_DWORD *)v3 = 67109376;
    sub_1C10705AC();
    *(_WORD *)(v3 + 8) = 2048;
    sub_1C10705AC();
    _os_log_impl(&dword_1C0771000, v1, v2, "Pipeline: run will finish. c:%{BOOL}d,r:%lu", (uint8_t *)v3, 0x12u);
    MEMORY[0x1C3BA8270](v3, -1, -1);
  }

  MEMORY[0x1E0C80A78](v4);
  return sub_1C106E4B8();
}

void sub_1C0CC34D4(uint64_t *a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _QWORD v22[2];
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  const char *v31;
  char *v32;
  int v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;

  v25 = a4;
  v33 = a3;
  v6 = sub_1C106ADE0();
  v26 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v29 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v8);
  v32 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Configuration();
  MEMORY[0x1E0C80A78](v10);
  v24 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v22[1] = (char *)v22 - v13;
  MEMORY[0x1E0C80A78](v14);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v22 - v16;
  v18 = type metadata accessor for Pipeline.StatusStore();
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v22 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = *a1;
  if (*(_BYTE *)(v27 + 24) == 4)
    v21 = 0;
  else
    v21 = *(unsigned __int8 *)(v27 + 24);
  v28 = a2;
  v22[0] = a2 + OBJC_IVAR____TtC24IntelligencePlatformCore8Pipeline_config;
  sub_1C07E6C80(a2 + OBJC_IVAR____TtC24IntelligencePlatformCore8Pipeline_config, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v23 = *(int *)(v18 + 20);
  v20[v23] = v21;
  if (qword_1ED75ABA0 != -1)
    swift_once();
  v30 = v6;
  v37 = xmmword_1ED78D5F8;
  v38 = *(_OWORD *)algn_1ED78D608;
  v39 = qword_1ED78D618;
  sub_1C07E6C80((uint64_t)v20, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v31 = "lastFullRebuildMaxTimestamp";
  v35 = 0xD000000000000010;
  v36 = 0x80000001C11031D0;
  v34 = v21;
  __asm { BR              X9 }
}

uint64_t sub_1C0CC4374(char a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t inited;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v50;
  BOOL v51;
  uint64_t v52;
  uint64_t result;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  int v57;
  uint64_t v58;
  __int128 v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;

  v55 = a5;
  v58 = a4;
  v57 = a3;
  v61 = a2;
  LOBYTE(v5) = a1;
  v6 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v6);
  *(_QWORD *)&v59 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C106ADE0();
  v62 = *(_QWORD *)(v8 - 8);
  v63 = v8;
  MEMORY[0x1E0C80A78](v8);
  v60 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C07ACF80(&qword_1ED75AB08);
  MEMORY[0x1E0C80A78](v10);
  v12 = (uint64_t)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED75ABD0 != -1)
LABEL_35:
    swift_once();
  v13 = qword_1ED78D168;
  v14 = unk_1ED78D170;
  v15 = qword_1ED78D178;
  v16 = unk_1ED78D180;
  v17 = qword_1ED78D188;
  v80 = sub_1C07ACF80(&qword_1ED75AB30);
  sub_1C0CCA9F4(&qword_1ED75AB28, &qword_1ED75AB30);
  v81 = v18;
  v19 = swift_allocObject();
  v78 = v19;
  *(_QWORD *)(v19 + 16) = v13;
  *(_QWORD *)(v19 + 24) = v14;
  *(_QWORD *)(v19 + 32) = v15;
  *(_QWORD *)(v19 + 40) = v16;
  *(_QWORD *)(v19 + 48) = v17;
  *(_BYTE *)(v19 + 56) = v5;
  *(_QWORD *)(v19 + 64) = v16;
  *(_QWORD *)(v19 + 72) = v17;
  v20 = sub_1C07ACF80(&qword_1ED75D340);
  v21 = swift_allocObject();
  v56 = xmmword_1C1079220;
  *(_OWORD *)(v21 + 16) = xmmword_1C1079220;
  v54 = v21;
  sub_1C077DD60((__int128 *)&v78, v21 + 32);
  sub_1C0BCD07C(v16);
  sub_1C0BCD07C(v16);
  v22 = qword_1ED75ABC0;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  if (v22 != -1)
    swift_once();
  v23 = xmmword_1ED78D140;
  v24 = qword_1ED78D150;
  v25 = unk_1ED78D158;
  v26 = qword_1ED78D160;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 16))(v12 + *(int *)(v10 + 44), v61, v63);
  *(_OWORD *)v12 = v23;
  *(_QWORD *)(v12 + 16) = v24;
  *(_QWORD *)(v12 + 24) = v25;
  *(_QWORD *)(v12 + 32) = v26;
  v27 = (uint64_t *)(v12 + *(int *)(v10 + 48));
  *v27 = v25;
  v27[1] = v26;
  v80 = v10;
  sub_1C0CCA9F4((unint64_t *)&unk_1ED755C98, &qword_1ED75AB08);
  v81 = v28;
  v29 = sub_1C079DFC4(&v78);
  sub_1C078A8CC(v12, (uint64_t)v29, &qword_1ED75AB08);
  v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = v56;
  sub_1C077DD60((__int128 *)&v78, v30 + 32);
  sub_1C0BCD07C(v25);
  sub_1C0BCD07C(v25);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0784B6C(v12, &qword_1ED75AB08);
  if (qword_1ED75AB90 != -1)
    swift_once();
  v79 = *(_OWORD *)algn_1ED78D0F8;
  v78 = qword_1ED78D0F0;
  v80 = qword_1ED78D108;
  v81 = qword_1ED78D110;
  v82 = v57;
  v83 = qword_1ED78D108;
  v84 = qword_1ED78D110;
  v31 = sub_1C0D5541C((__int128 *)&v78);
  v32 = v60;
  v33 = v59;
  if (qword_1ED75ABA0 != -1)
    swift_once();
  v35 = v62;
  v34 = v63;
  if (__OFADD__(v58, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  v72 = *(__int128 *)((char *)&xmmword_1ED78D5F8 + 8);
  v71 = xmmword_1ED78D5F8;
  v73 = qword_1ED78D610;
  v74 = qword_1ED78D618;
  v75 = v58 + 1;
  v76 = qword_1ED78D610;
  v77 = qword_1ED78D618;
  v20 = sub_1C0D55284((__int128 *)&v71);
  sub_1C078A8CC(v55, v33, (uint64_t *)&unk_1ED762690);
  if (sub_1C07B2D80(v33, 1, v34) != 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v32, v33, v34);
    if (qword_1ED75AC90 == -1)
    {
LABEL_12:
      v37 = qword_1ED78D6C0[0];
      v38 = qword_1ED78D6D8;
      v39 = unk_1ED78D6E0;
      v59 = unk_1ED78D6C8;
      sub_1C106ADC8();
      v64 = v37;
      v65 = v59;
      v66 = v38;
      v67 = v39;
      v68 = v40;
      v69 = v38;
      v70 = v39;
      v36 = sub_1C0D55440((__int128 *)&v64);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v34);
      goto LABEL_13;
    }
LABEL_37:
    swift_once();
    goto LABEL_12;
  }
  sub_1C0784B6C(v33, (uint64_t *)&unk_1ED762690);
  v36 = MEMORY[0x1E0DEE9D8];
LABEL_13:
  sub_1C07ACF80(&qword_1ED75D360);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C107DE20;
  *(_QWORD *)(inited + 32) = v54;
  *(_QWORD *)(inited + 40) = v30;
  *(_QWORD *)(inited + 48) = v31;
  *(_QWORD *)(inited + 56) = v20;
  *(_QWORD *)(inited + 64) = v36;
  v42 = MEMORY[0x1E0DEE9D8];
  v43 = 32;
  v10 = 40;
  do
  {
    v44 = *(_QWORD *)(inited + v43);
    v12 = *(_QWORD *)(v44 + 16);
    v45 = *(_QWORD *)(v42 + 16);
    v5 = v45 + v12;
    if (__OFADD__(v45, v12))
    {
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    if (!swift_isUniquelyReferenced_nonNull_native() || v5 > *(_QWORD *)(v42 + 24) >> 1)
    {
      sub_1C07ED398();
      v42 = v46;
    }
    if (*(_QWORD *)(v44 + 16))
    {
      v47 = *(_QWORD *)(v42 + 16);
      if ((*(_QWORD *)(v42 + 24) >> 1) - v47 < v12)
        goto LABEL_33;
      v48 = v42 + 40 * v47 + 32;
      LOBYTE(v5) = v44 + 32;
      if (v44 + 32 < v48 + 40 * v12 && v48 < v44 + 32 + 40 * v12)
      {
        result = sub_1C10709F0();
        __break(1u);
        return result;
      }
      sub_1C07ACF80(&qword_1ED75C0F0);
      swift_arrayInitWithCopy();
      if (v12)
      {
        v50 = *(_QWORD *)(v42 + 16);
        v51 = __OFADD__(v50, v12);
        v52 = v50 + v12;
        if (v51)
          goto LABEL_34;
        *(_QWORD *)(v42 + 16) = v52;
      }
    }
    else if (v12)
    {
      goto LABEL_32;
    }
    swift_bridgeObjectRelease();
    v43 += 8;
  }
  while (v43 != 72);
  swift_setDeallocating();
  sub_1C0BE8E70();
  return v42;
}

uint64_t sub_1C0CC49C0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[131] = a2;
  v2[125] = a1;
  type metadata accessor for Configuration();
  v2[137] = swift_task_alloc();
  v3 = type metadata accessor for Pipeline.StatusStore();
  v2[138] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[139] = v4;
  v2[140] = *(_QWORD *)(v4 + 64);
  v2[141] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C0CC4A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;

  sub_1C0789E7C();
  if (qword_1ED75ABA8 != -1)
    swift_once();
  v16 = *(uint64_t **)(v15 + 1048);
  v18 = qword_1ED78D118;
  v17 = unk_1ED78D120;
  v20 = qword_1ED78D128;
  v19 = unk_1ED78D130;
  v21 = qword_1ED78D138;
  v22 = *v16;
  v23 = *(_QWORD *)(*v16 + 16);
  sub_1C0775C10();
  if (v14)
  {
    sub_1C07AA470();
    sub_1C07767BC();
LABEL_6:
    sub_1C07907C8();
    return v24(v24, v25, v26, v27, v28, v29, v30, v31, a9, a10, a11, a12, a13, a14);
  }
  a10 = v15 + 696;
  *(_QWORD *)(v15 + 696) = v18;
  *(_QWORD *)(v15 + 704) = v17;
  *(_QWORD *)(v15 + 712) = v20;
  *(_QWORD *)(v15 + 720) = v19;
  *(_QWORD *)(v15 + 728) = v21;
  *(_QWORD *)(v15 + 736) = v23;
  *(_QWORD *)(v15 + 744) = v19;
  *(_QWORD *)(v15 + 752) = v21;
  sub_1C0BCD07C(v19);
  sub_1C077C0B8();
  sub_1C0778624();
  sub_1C0795C58((__n128 *)(v15 + 696));
  sub_1C077589C();
  sub_1C0775834();
  sub_1C077AB58(v19);
  sub_1C07785A8();
  if (!*(_QWORD *)(v22 + 16))
  {
    sub_1C07AA470();
    sub_1C07767BC();
    sub_1C0779830();
    goto LABEL_6;
  }
  *(_QWORD *)(v15 + 1136) = 0;
  sub_1C07D6D1C(v22 + 32, v15 + 904);
  sub_1C0CCB1D8();
  sub_1C0CCB180();
  v33 = *(_QWORD *)(v15 + 1128);
  v34 = *(_QWORD *)(v15 + 1112);
  sub_1C078C0C4();
  v35 = sub_1C078667C();
  sub_1C07A1ED8(v35, v36);
  v37 = (*(unsigned __int8 *)(v34 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  v38 = swift_allocObject();
  *(_QWORD *)(v15 + 1144) = v38;
  sub_1C077DD60((__int128 *)(v15 + 824), v38 + 16);
  sub_1C0792FD0(v33, v38 + v37);
  swift_retain();
  sub_1C0CCB1E4();
  swift_asyncLet_begin();
  sub_1C07907C8();
  return swift_asyncLet_get_throwing();
}

uint64_t sub_1C0CC4C48()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 1152) = v0;
  if (v0)
    return swift_asyncLet_finish();
  else
    return sub_1C078C868();
}

uint64_t sub_1C0CC4C70()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C07796A0();
  v1 = v0[142];
  v0[145] = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
    goto LABEL_5;
  }
  if (qword_1ED75ABB8 != -1)
LABEL_5:
    swift_once();
  v2 = v0[138];
  v3 = v0[125];
  sub_1C07E6C80(v3, v0[137], (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v4 = *(unsigned __int8 *)(v3 + *(int *)(v2 + 20));
  v0[123] = 0xD000000000000010;
  v0[124] = 0x80000001C11031D0;
  return ((uint64_t (*)(uint64_t))((char *)&loc_1C0CC4D30 + dword_1C0CC4E94[v4]))(0x6E776F6E6B6E75);
}

uint64_t sub_1C0CC4EA4()
{
  return sub_1C078C868();
}

uint64_t sub_1C0CC4EB0()
{
  uint64_t v0;

  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 904);
  sub_1C07863E8();
  sub_1C0CCB080();
  sub_1C07796F8();
  return sub_1C0795770(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0CC4EEC()
{
  return sub_1C078C868();
}

uint64_t sub_1C0CC4EF8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v5)(void);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  sub_1C077B704();
  v1 = *(uint64_t **)(v0 + 1048);
  sub_1C07A99EC();
  sub_1C07785A8();
  v2 = *v1;
  if (*(_QWORD *)(*v1 + 16))
  {
    v3 = *(_QWORD *)(v0 + 1176);
    *(_QWORD *)(v0 + 1136) = *(_QWORD *)(v0 + 1160);
    sub_1C07D6D1C(v2 + 32, v0 + 904);
    sub_1C0CCB1D8();
    sub_1C1070138();
    if (v3)
    {
      sub_1C07A99EC();
      sub_1C077AB58((uint64_t)&unk_1EF647078);
      sub_1C07AA470();
      sub_1C07767BC();
      return sub_1C0781074(*(uint64_t (**)(void))(v0 + 8));
    }
    else
    {
      v6 = *(_QWORD *)(v0 + 1128);
      v7 = *(_QWORD *)(v0 + 1112);
      v8 = *(_QWORD *)(v0 + 1000);
      sub_1C07D6D1C(v0 + 904, v0 + 824);
      sub_1C07A1ED8(v8, v6);
      v9 = (*(unsigned __int8 *)(v7 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      v10 = swift_allocObject();
      *(_QWORD *)(v0 + 1144) = v10;
      sub_1C077DD60((__int128 *)(v0 + 824), v10 + 16);
      sub_1C0792FD0(v6, v10 + v9);
      swift_retain();
      sub_1C0CCB03C();
      swift_asyncLet_begin();
      return swift_asyncLet_get_throwing();
    }
  }
  else
  {
    sub_1C077AF1C();
    sub_1C07AA470();
    sub_1C07767BC();
    v5 = (uint64_t (*)(void))sub_1C0779830();
    return sub_1C0781074(v5);
  }
}

uint64_t sub_1C0CC507C()
{
  return sub_1C078C868();
}

uint64_t sub_1C0CC5088()
{
  uint64_t v0;

  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 904);
  sub_1C07863E8();
  sub_1C0CCB080();
  sub_1C07796F8();
  return sub_1C0795770(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0CC50C4()
{
  return sub_1C078C868();
}

uint64_t sub_1C0CC50D0()
{
  uint64_t v0;

  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 904);
  sub_1C07863E8();
  sub_1C0CCB080();
  sub_1C07796F8();
  return sub_1C0795770(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0CC510C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a2;
  *(_QWORD *)(v3 + 24) = a3;
  return swift_task_switch();
}

uint64_t sub_1C0CC5124()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C07A9480(*(_QWORD **)(v0 + 16), *(_QWORD *)(*(_QWORD *)(v0 + 16) + 24));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_1C0CC5188;
  v2 = sub_1C079CF04(*(_QWORD *)(v0 + 24));
  return sub_1C0CA65D0(v2, v3, v4);
}

uint64_t sub_1C0CC5188()
{
  uint64_t v0;

  sub_1C07862EC();
  return sub_1C077CF28(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0CC51BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return swift_task_switch();
}

uint64_t sub_1C0CC51D4()
{
  _QWORD *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  void *v4;
  _QWORD *v5;

  v1 = v0[4];
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D27218]), sel_init);
  v3 = OBJC_IVAR____TtC24IntelligencePlatformCore8Pipeline_geoMapService;
  v0[5] = OBJC_IVAR____TtC24IntelligencePlatformCore8Pipeline_geoMapService;
  v4 = *(void **)(v1 + v3);
  *(_QWORD *)(v1 + v3) = v2;

  v5 = (_QWORD *)swift_task_alloc();
  v0[6] = v5;
  sub_1C0CCB11C(v5, (uint64_t)sub_1C0CC5248);
  return sub_1C0CC5360();
}

uint64_t sub_1C0CC5248(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  sub_1C077E88C();
  sub_1C0780AE0(v4);
  swift_task_dealloc();
  *(_QWORD *)(v1 + 16) = a1;
  v5 = v1 + 16;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 40) = v6;
  *v6 = v2;
  v6[1] = sub_1C0CC52A8;
  v7 = sub_1C07B4974(*(_QWORD *)(v5 + 8));
  return sub_1C0CC49C0(v7, v8);
}

uint64_t sub_1C0CC52A8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_1C077E88C();
  sub_1C0780AE0(v2);
  *(_QWORD *)(v0 + 64) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_1C077862C();
  return sub_1C0789D28();
}

uint64_t sub_1C0CC52FC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)(void);
  char v7;

  v1 = v0[8];
  v3 = v0[4];
  v2 = v0[5];
  v4 = *(void **)(v3 + v2);
  *(_QWORD *)(v3 + v2) = 0;

  sub_1C106EDE8();
  if (v1)
  {
    v5 = sub_1C079C6C0();
  }
  else
  {
    v7 = sub_1C1070120();
    v6 = (uint64_t (*)(void))v0[1];
    v5 = v7 & 1;
  }
  return sub_1C07A601C(v5, v6);
}

uint64_t sub_1C0CC5358()
{
  return sub_1C07805A8();
}

uint64_t sub_1C0CC5360()
{
  _QWORD *v0;
  _QWORD *v1;

  v1[107] = v0;
  v1[108] = *v0;
  v1[109] = type metadata accessor for PhaseStores();
  v1[110] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C0CC53C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _BYTE *v6;

  v1 = *(_QWORD *)(v0 + 880);
  v2 = *(_QWORD *)(v0 + 856);
  v3 = OBJC_IVAR____TtC24IntelligencePlatformCore8Pipeline_stores;
  *(_QWORD *)(v0 + 888) = OBJC_IVAR____TtC24IntelligencePlatformCore8Pipeline_stores;
  sub_1C07E6C80(v2 + v3, v1, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  *(_BYTE *)(v0 + 1504) = 1;
  *(_QWORD *)(v0 + 896) = type metadata accessor for RelationshipPhase();
  sub_1C077B5BC();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 904) = v4;
  v5 = sub_1C079A08C(v4, (uint64_t)sub_1C0CC5440);
  return sub_1C0CCB01C(v5, v6);
}

uint64_t sub_1C0CC5440()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C078D3A4();
  sub_1C078AADC();
  *(_QWORD *)(v1 + 912) = v0;
  sub_1C078DEDC();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0CC547C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 912);
  *(_QWORD *)(v0 + 80) = *(_QWORD *)(v0 + 896);
  sub_1C0794BAC(&qword_1ED750AD0, (uint64_t (*)(uint64_t))type metadata accessor for RelationshipPhase, (uint64_t)&protocol conformance descriptor for PipelinePhase);
  *(_QWORD *)(v0 + 88) = v2;
  *(_QWORD *)(v0 + 56) = v1;
  *(_QWORD *)(v0 + 920) = sub_1C07ACF80(&qword_1ED741F28);
  v3 = (__n128 *)sub_1C0787A5C();
  *(_QWORD *)(v0 + 928) = v3;
  v4 = sub_1C07BA258(v3, (__n128)xmmword_1C1079220);
  sub_1C0CCB188(v4, v5, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  *(_BYTE *)(v0 + 1503) = 1;
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97298]), sel_init);
  *(_QWORD *)(v0 + 936) = sub_1C0CCB1CC();
  sub_1C077B5BC();
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 944) = v6;
  *v6 = v0;
  v6[1] = sub_1C0CC557C;
  v7 = sub_1C079CF04(*(_QWORD *)(v0 + 880));
  return sub_1C08D6FA8(v7, v8, v9);
}

uint64_t sub_1C0CC557C()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C078D3A4();
  sub_1C078AADC();
  *(_QWORD *)(v1 + 952) = v0;
  sub_1C078DEDC();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0CC55B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _BYTE *v9;

  sub_1C0CCAFD8();
  v1 = *(_QWORD *)(v0 + 952);
  sub_1C0788A18();
  *(_QWORD *)(v0 + 160) = v2;
  sub_1C0794BAC((unint64_t *)&unk_1ED750B18, (uint64_t (*)(uint64_t))type metadata accessor for ContactsPersonPhase, (uint64_t)&protocol conformance descriptor for PipelinePhase);
  *(_QWORD *)(v0 + 960) = v3;
  *(_QWORD *)(v0 + 168) = v3;
  *(_QWORD *)(v0 + 136) = v1;
  v4 = (__n128 *)sub_1C0787A5C();
  *(_QWORD *)(v0 + 968) = v4;
  v5 = sub_1C07AB8C0(v4, (__n128)xmmword_1C1079220);
  sub_1C07ABDEC(v5, v6, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  *(_BYTE *)(v0 + 1501) = 1;
  *(_QWORD *)(v0 + 976) = type metadata accessor for HKEmergencyContactPhase();
  sub_1C077B5BC();
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 984) = v7;
  sub_1C079A08C(v7, (uint64_t)sub_1C0CC5680);
  sub_1C0CCB08C();
  return sub_1C0ACD8C0(v8, v9);
}

uint64_t sub_1C0CC5680()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C078D3A4();
  sub_1C078AADC();
  *(_QWORD *)(v1 + 992) = v0;
  sub_1C078DEDC();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0CC56BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _BYTE *v9;

  sub_1C0CCAFD8();
  v1 = *(_QWORD *)(v0 + 992);
  sub_1C0788A18();
  *(_QWORD *)(v0 + 240) = v2;
  sub_1C0794BAC(&qword_1ED750ED0, (uint64_t (*)(uint64_t))type metadata accessor for HKEmergencyContactPhase, (uint64_t)&protocol conformance descriptor for PipelinePhase);
  *(_QWORD *)(v0 + 248) = v3;
  *(_QWORD *)(v0 + 216) = v1;
  v4 = (__n128 *)sub_1C0787A5C();
  *(_QWORD *)(v0 + 1000) = v4;
  v5 = sub_1C07AB8C0(v4, (__n128)xmmword_1C1079220);
  sub_1C07ABDEC(v5, v6, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  *(_BYTE *)(v0 + 1500) = 1;
  *(_QWORD *)(v0 + 1008) = type metadata accessor for IntentsPersonPhase();
  sub_1C077B5BC();
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1016) = v7;
  sub_1C079A08C(v7, (uint64_t)sub_1C0CC5780);
  sub_1C0CCB08C();
  return sub_1C0B6D1E8(v8, v9);
}

uint64_t sub_1C0CC5780()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C078D3A4();
  sub_1C078AADC();
  *(_QWORD *)(v1 + 1024) = v0;
  sub_1C078DEDC();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0CC57BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _BYTE *v9;

  sub_1C0CCAFD8();
  v1 = *(_QWORD *)(v0 + 1024);
  sub_1C07BC9DC();
  *(_QWORD *)(v0 + 320) = v2;
  sub_1C0794BAC(&qword_1ED750AF8, (uint64_t (*)(uint64_t))type metadata accessor for IntentsPersonPhase, (uint64_t)&protocol conformance descriptor for PipelinePhase);
  *(_QWORD *)(v0 + 328) = v3;
  *(_QWORD *)(v0 + 296) = v1;
  v4 = (__n128 *)sub_1C0787A5C();
  *(_QWORD *)(v0 + 1032) = v4;
  v5 = sub_1C079D7F0(v4, (__n128)xmmword_1C1079220);
  sub_1C07A6010(v5, v6, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  *(_BYTE *)(v0 + 1498) = 1;
  *(_QWORD *)(v0 + 1040) = type metadata accessor for BMAppleMusicEventPhase();
  sub_1C077B5BC();
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1048) = v7;
  sub_1C079A08C(v7, (uint64_t)sub_1C0CC5880);
  sub_1C0CCB08C();
  return sub_1C08930E0(v8, v9);
}

uint64_t sub_1C0CC5880()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C078D3A4();
  sub_1C078AADC();
  *(_QWORD *)(v1 + 1056) = v0;
  sub_1C078DEDC();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0CC58BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _BYTE *v9;

  sub_1C0CCAFD8();
  v1 = *(_QWORD *)(v0 + 1056);
  sub_1C07BC9DC();
  *(_QWORD *)(v0 + 400) = v2;
  sub_1C0794BAC(&qword_1ED750C40, (uint64_t (*)(uint64_t))type metadata accessor for BMAppleMusicEventPhase, (uint64_t)&protocol conformance descriptor for PipelinePhase);
  *(_QWORD *)(v0 + 1064) = v3;
  *(_QWORD *)(v0 + 408) = v3;
  *(_QWORD *)(v0 + 376) = v1;
  v4 = (__n128 *)sub_1C0787A5C();
  *(_QWORD *)(v0 + 1072) = v4;
  v5 = sub_1C079D7F0(v4, (__n128)xmmword_1C1079220);
  sub_1C07A6010(v5, v6, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  *(_BYTE *)(v0 + 1496) = 1;
  *(_QWORD *)(v0 + 1080) = type metadata accessor for INGroupPhase();
  sub_1C077B5BC();
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1088) = v7;
  sub_1C079A08C(v7, (uint64_t)sub_1C0CC5984);
  sub_1C0CCB08C();
  return sub_1C0B62068(v8, v9);
}

uint64_t sub_1C0CC5984()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C078D3A4();
  sub_1C078AADC();
  *(_QWORD *)(v1 + 1096) = v0;
  sub_1C078DEDC();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0CC59C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _BYTE *v9;

  sub_1C0CCAFD8();
  v1 = *(_QWORD *)(v0 + 1096);
  sub_1C07BC9DC();
  *(_QWORD *)(v0 + 480) = v2;
  sub_1C0794BAC(&qword_1ED7506F8, (uint64_t (*)(uint64_t))type metadata accessor for INGroupPhase, (uint64_t)&protocol conformance descriptor for PipelinePhase);
  *(_QWORD *)(v0 + 488) = v3;
  *(_QWORD *)(v0 + 456) = v1;
  v4 = (__n128 *)sub_1C0787A5C();
  *(_QWORD *)(v0 + 1104) = v4;
  v5 = sub_1C079D7F0(v4, (__n128)xmmword_1C1079220);
  sub_1C07A6010(v5, v6, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  *(_BYTE *)(v0 + 1495) = 1;
  *(_QWORD *)(v0 + 1112) = type metadata accessor for PhotosPersonPhase();
  sub_1C077B5BC();
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1120) = v7;
  sub_1C079A08C(v7, (uint64_t)sub_1C0CC5A84);
  sub_1C0CCB08C();
  return sub_1C0CB0CA8(v8, v9);
}

uint64_t sub_1C0CC5A84()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C078D3A4();
  sub_1C078AADC();
  *(_QWORD *)(v1 + 1128) = v0;
  sub_1C078DEDC();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0CC5AC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _BYTE *v9;

  sub_1C0CCAFD8();
  v1 = *(_QWORD *)(v0 + 1128);
  sub_1C07BC9DC();
  *(_QWORD *)(v0 + 560) = v2;
  sub_1C0794BAC(&qword_1ED750AB0, (uint64_t (*)(uint64_t))type metadata accessor for PhotosPersonPhase, (uint64_t)&protocol conformance descriptor for PipelinePhase);
  *(_QWORD *)(v0 + 568) = v3;
  *(_QWORD *)(v0 + 536) = v1;
  v4 = (__n128 *)sub_1C0787A5C();
  *(_QWORD *)(v0 + 1136) = v4;
  v5 = sub_1C079D7F0(v4, (__n128)xmmword_1C1079220);
  sub_1C07A6010(v5, v6, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  *(_BYTE *)(v0 + 1494) = 1;
  *(_QWORD *)(v0 + 1144) = type metadata accessor for FamilyCircleGroupPhase();
  sub_1C077B5BC();
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1152) = v7;
  sub_1C079A08C(v7, (uint64_t)sub_1C0CC5B84);
  sub_1C0CCB08C();
  return sub_1C0A15870(v8, v9);
}

uint64_t sub_1C0CC5B84()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C078D3A4();
  sub_1C078AADC();
  *(_QWORD *)(v1 + 1160) = v0;
  sub_1C078DEDC();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0CC5BC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;

  v1 = *(_QWORD *)(v0 + 1160);
  v2 = *(_QWORD *)(v0 + 856);
  *(_QWORD *)(v0 + 640) = *(_QWORD *)(v0 + 1144);
  sub_1C0794BAC(&qword_1ED750C90, (uint64_t (*)(uint64_t))type metadata accessor for FamilyCircleGroupPhase, (uint64_t)&protocol conformance descriptor for PipelinePhase);
  *(_QWORD *)(v0 + 648) = v3;
  *(_QWORD *)(v0 + 616) = v1;
  v4 = (__n128 *)sub_1C0787A5C();
  *(_QWORD *)(v0 + 1168) = v4;
  v5 = sub_1C079D7F0(v4, (__n128)xmmword_1C1079220);
  sub_1C07A6010(v5, v6, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  v7 = OBJC_IVAR____TtC24IntelligencePlatformCore8Pipeline_geoMapService;
  *(_QWORD *)(v0 + 1176) = OBJC_IVAR____TtC24IntelligencePlatformCore8Pipeline_geoMapService;
  v8 = *(void **)(v2 + v7);
  *(_BYTE *)(v0 + 1492) = 1;
  *(_QWORD *)(v0 + 1184) = type metadata accessor for EventKitEventPhase();
  sub_1C077B5BC();
  v9 = v8;
  v10 = (_QWORD *)sub_1C0797BC4();
  *(_QWORD *)(v0 + 1192) = v10;
  *v10 = v0;
  v10[1] = sub_1C0CC5CC0;
  v11 = sub_1C0CCAFC0(*(_QWORD *)(v0 + 880));
  return sub_1C09CF92C(v11, v12, v13);
}

uint64_t sub_1C0CC5CC0()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C078D3A4();
  sub_1C078AADC();
  *(_QWORD *)(v1 + 1200) = v0;
  sub_1C078DEDC();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0CC5CFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _BYTE *v9;

  sub_1C0CCAFD8();
  v1 = *(_QWORD *)(v0 + 1200);
  sub_1C07BC9DC();
  *(_QWORD *)(v0 + 720) = v2;
  sub_1C0794BAC(&qword_1ED750698, (uint64_t (*)(uint64_t))type metadata accessor for EventKitEventPhase, (uint64_t)&protocol conformance descriptor for PipelinePhase);
  *(_QWORD *)(v0 + 728) = v3;
  *(_QWORD *)(v0 + 696) = v1;
  v4 = (__n128 *)sub_1C0787A5C();
  *(_QWORD *)(v0 + 1208) = v4;
  v5 = sub_1C079D7F0(v4, (__n128)xmmword_1C1079220);
  sub_1C07A6010(v5, v6, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  *(_BYTE *)(v0 + 1490) = 1;
  *(_QWORD *)(v0 + 1216) = type metadata accessor for LSBundleRecordSoftwarePhase();
  sub_1C077B5BC();
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1224) = v7;
  sub_1C079A08C(v7, (uint64_t)sub_1C0CC5DC0);
  sub_1C0CCB08C();
  return sub_1C0C2B58C(v8, v9);
}

uint64_t sub_1C0CC5DC0()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C078D3A4();
  sub_1C078AADC();
  *(_QWORD *)(v1 + 1232) = v0;
  sub_1C078DEDC();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0CC5DFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _BYTE *v9;

  sub_1C0CCAFD8();
  v1 = *(_QWORD *)(v0 + 1232);
  sub_1C0788A18();
  *(_QWORD *)(v0 + 40) = v2;
  sub_1C0794BAC(&qword_1ED7510B0, (uint64_t (*)(uint64_t))type metadata accessor for LSBundleRecordSoftwarePhase, (uint64_t)&protocol conformance descriptor for PipelinePhase);
  *(_QWORD *)(v0 + 48) = v3;
  *(_QWORD *)(v0 + 16) = v1;
  v4 = (__n128 *)sub_1C0787A5C();
  *(_QWORD *)(v0 + 1240) = v4;
  v5 = sub_1C07AB8C0(v4, (__n128)xmmword_1C1079220);
  sub_1C07ABDEC(v5, v6, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  *(_BYTE *)(v0 + 1488) = 1;
  *(_QWORD *)(v0 + 1248) = type metadata accessor for PGRelationshipPhase();
  sub_1C077B5BC();
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1256) = v7;
  v8 = sub_1C079A08C(v7, (uint64_t)sub_1C0CC5EB4);
  return sub_1C07B806C(v8, v9);
}

uint64_t sub_1C0CC5EB4()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C078D3A4();
  sub_1C078AADC();
  *(_QWORD *)(v1 + 1264) = v0;
  sub_1C078DEDC();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0CC5EF0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  _QWORD *v6;
  uint64_t v7;

  v1 = v0[158];
  v2 = v0[111];
  v3 = v0[107];
  v0[105] = v0[156];
  sub_1C0794BAC(&qword_1ED750B28, (uint64_t (*)(uint64_t))type metadata accessor for PGRelationshipPhase, (uint64_t)&protocol conformance descriptor for PipelinePhase);
  v0[106] = v4;
  v0[102] = v1;
  v5 = (__n128 *)sub_1C0787A5C();
  v0[159] = v5;
  sub_1C0CCB0D4(v5, (__n128)xmmword_1C1079220);
  v6 = (_QWORD *)swift_task_alloc();
  v0[160] = v6;
  *v6 = v0;
  v6[1] = sub_1C0CC5FA4;
  v7 = sub_1C07864B8(v3 + v2);
  return sub_1C0CBB7C8(v7);
}

uint64_t sub_1C0CC5FA4()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C078D3A4();
  sub_1C078AADC();
  *(_QWORD *)(v1 + 1288) = v0;
  sub_1C078DEDC();
  sub_1C077862C();
  return sub_1C077AEC4();
}

void sub_1C0CC5FE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char v20;
  BOOL v21;
  unint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _BYTE *v29;
  _QWORD *v30;
  uint64_t v31;
  _BYTE *v32;

  sub_1C0789E7C();
  v1 = *(_QWORD *)(v0 + 1288);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
  {
    v13 = MEMORY[0x1E0DEE9D8];
LABEL_33:
    *(_QWORD *)(v0 + 1296) = v13;
    v26 = *(_QWORD *)(v0 + 856) + *(_QWORD *)(v0 + 888);
    if ((*(_BYTE *)(v26 + *(int *)(sub_1C0779D10() + 20) + 8) & 0x11) != 0)
    {
      sub_1C07E6C80(v26, *(_QWORD *)(v0 + 880), (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
      *(_BYTE *)(v0 + 1502) = 1;
      *(_QWORD *)(v0 + 1304) = type metadata accessor for LifeEventPhase();
      sub_1C077B5BC();
      v27 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 1312) = v27;
      *v27 = v0;
      v27[1] = sub_1C0CC62E0;
      sub_1C07B4974(*(_QWORD *)(v0 + 880));
      sub_1C07907C8();
      sub_1C0BD105C(v28, v29);
    }
    else
    {
      *(_QWORD *)(v0 + 1328) = v2;
      sub_1C07E6C80(v26, *(_QWORD *)(v0 + 880), (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
      *(_QWORD *)(v0 + 1336) = sub_1C07B0500();
      sub_1C077B5BC();
      v30 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 1344) = v30;
      *v30 = v0;
      v30[1] = sub_1C0CC63E8;
      sub_1C07B4974(*(_QWORD *)(v0 + 880));
      sub_1C07907C8();
      sub_1C0A17BCC(v31, v32);
    }
    return;
  }
  v3 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    v4 = v1 + 32;
    v5 = MEMORY[0x1E0DEE9D8];
    do
    {
      sub_1C078C0C4();
      v6 = *(_QWORD *)(v0 + 800);
      v7 = *(_QWORD *)(v0 + 808);
      v8 = sub_1C07A9480((_QWORD *)(v0 + 776), v6);
      v9 = sub_1C0CA79A8((uint64_t)v8, v6, v7);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C0CCB194();
        v5 = v11;
      }
      v10 = *(_QWORD *)(v5 + 16);
      if (v10 >= *(_QWORD *)(v5 + 24) >> 1)
      {
        sub_1C0CCB194();
        v5 = v12;
      }
      *(_QWORD *)(v5 + 16) = v10 + 1;
      *(_QWORD *)(v5 + 8 * v10 + 32) = v9;
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 776);
      v4 += 40;
      --v3;
    }
    while (v3);
  }
  else
  {
    v5 = MEMORY[0x1E0DEE9D8];
  }
  sub_1C07767AC();
  v14 = *(_QWORD *)(v5 + 16);
  if (!v14)
  {
    v13 = MEMORY[0x1E0DEE9D8];
LABEL_32:
    v2 = MEMORY[0x1E0DEE9D8];
    sub_1C077960C();
    goto LABEL_33;
  }
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v15 = 0;
  v13 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v16 = *(_QWORD *)(v5 + 8 * v15 + 32);
    v17 = *(_QWORD *)(v16 + 16);
    v18 = *(_QWORD *)(v13 + 16);
    if (__OFADD__(v18, v17))
      break;
    sub_1C077AEBC();
    if (!sub_1C0778698() || (int64_t)(v18 + v17) > *(_QWORD *)(v13 + 24) >> 1)
    {
      sub_1C077FB58();
      v13 = v19;
    }
    if (*(_QWORD *)(v16 + 16))
    {
      sub_1C0780824();
      if (v20 != v21)
        goto LABEL_38;
      sub_1C07AEC18();
      v23 = v23 || v18 >= v22;
      if (!v23)
        goto LABEL_40;
      sub_1C079BD54();
      sub_1C0CCB048();
      if (v17)
      {
        v24 = *(_QWORD *)(v13 + 16);
        v21 = __OFADD__(v24, v17);
        v25 = v24 + v17;
        if (v21)
          goto LABEL_39;
        *(_QWORD *)(v13 + 16) = v25;
      }
    }
    else if (v17)
    {
      goto LABEL_37;
    }
    sub_1C077B5B4();
    if (v14 == ++v15)
    {
      sub_1C077960C();
      goto LABEL_32;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  sub_1C0776AF8();
  sub_1C0786314();
  sub_1C07907C8();
}

uint64_t sub_1C0CC62E0()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C078D3A4();
  sub_1C078AADC();
  *(_QWORD *)(v1 + 1320) = v0;
  sub_1C078DEDC();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0CC631C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  _QWORD *v4;
  uint64_t v5;
  _BYTE *v6;

  v1 = v0[165];
  v0[15] = v0[163];
  sub_1C0794BAC(&qword_1ED750938, (uint64_t (*)(uint64_t))type metadata accessor for LifeEventPhase, (uint64_t)&protocol conformance descriptor for PipelinePhase);
  v0[16] = v2;
  v0[12] = v1;
  v3 = (__n128 *)sub_1C0787A5C();
  sub_1C0782BE0(v3, (__n128)xmmword_1C1079220);
  v0[166] = v3;
  sub_1C07E6C80(v0[107] + v0[111], v0[110], (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  v0[167] = sub_1C07B0500();
  sub_1C077B5BC();
  v4 = (_QWORD *)swift_task_alloc();
  v0[168] = v4;
  v5 = sub_1C079A08C(v4, (uint64_t)sub_1C0CC63E8);
  return sub_1C0A17BCC(v5, v6);
}

uint64_t sub_1C0CC63E8()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C078D3A4();
  sub_1C078AADC();
  *(_QWORD *)(v1 + 1352) = v0;
  sub_1C078DEDC();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0CC6424()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;

  v1 = *(_QWORD *)(v0 + 1352);
  v2 = *(_QWORD *)(v0 + 1176);
  v3 = *(_QWORD *)(v0 + 856);
  *(_QWORD *)(v0 + 760) = *(_QWORD *)(v0 + 1336);
  sub_1C0794BAC(&qword_1ED750EB8, (uint64_t (*)(uint64_t))type metadata accessor for FavoriteSportsTeamPhase, (uint64_t)&protocol conformance descriptor for PipelinePhase);
  *(_QWORD *)(v0 + 768) = v4;
  *(_QWORD *)(v0 + 736) = v1;
  v5 = (__n128 *)sub_1C0787A5C();
  *(_QWORD *)(v0 + 1360) = v5;
  v6 = sub_1C079D7F0(v5, (__n128)xmmword_1C1079220);
  sub_1C07A6010(v6, v7, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  v8 = *(void **)(v3 + v2);
  *(_BYTE *)(v0 + 1491) = 1;
  *(_QWORD *)(v0 + 1368) = type metadata accessor for FoundInAppsEventPhase();
  sub_1C077B5BC();
  v9 = v8;
  v10 = (_QWORD *)sub_1C0797BC4();
  *(_QWORD *)(v0 + 1376) = v10;
  *v10 = v0;
  v10[1] = sub_1C0CC651C;
  v11 = sub_1C0CCAFC0(*(_QWORD *)(v0 + 880));
  return sub_1C0A526EC(v11, v12, v13);
}

uint64_t sub_1C0CC651C()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C078D3A4();
  sub_1C078AADC();
  *(_QWORD *)(v1 + 1384) = v0;
  sub_1C078DEDC();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0CC6558()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _BYTE *v9;

  sub_1C0CCAFD8();
  v1 = *(_QWORD *)(v0 + 1384);
  sub_1C07BC9DC();
  *(_QWORD *)(v0 + 680) = v2;
  sub_1C0794BAC(&qword_1ED750B90, (uint64_t (*)(uint64_t))type metadata accessor for FoundInAppsEventPhase, (uint64_t)&protocol conformance descriptor for PipelinePhase);
  *(_QWORD *)(v0 + 688) = v3;
  *(_QWORD *)(v0 + 656) = v1;
  v4 = (__n128 *)sub_1C0787A5C();
  *(_QWORD *)(v0 + 1392) = v4;
  v5 = sub_1C079D7F0(v4, (__n128)xmmword_1C1079220);
  sub_1C07A6010(v5, v6, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  *(_BYTE *)(v0 + 1493) = 1;
  *(_QWORD *)(v0 + 1400) = type metadata accessor for FoundInAppsPersonPhase();
  sub_1C077B5BC();
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1408) = v7;
  sub_1C079A08C(v7, (uint64_t)sub_1C0CC661C);
  sub_1C0CCB08C();
  return sub_1C0A53180(v8, v9);
}

uint64_t sub_1C0CC661C()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C078D3A4();
  sub_1C078AADC();
  *(_QWORD *)(v1 + 1416) = v0;
  sub_1C078DEDC();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0CC6658()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  _QWORD *v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;

  sub_1C07796A0();
  v1 = *(_QWORD *)(v0 + 1416);
  v2 = *(_QWORD *)(v0 + 880);
  v3 = *(_QWORD *)(v0 + 872);
  v4 = *(_QWORD *)(v0 + 856) + *(_QWORD *)(v0 + 888);
  *(_QWORD *)(v0 + 600) = *(_QWORD *)(v0 + 1400);
  sub_1C0794BAC(&qword_1ED750CA8, (uint64_t (*)(uint64_t))type metadata accessor for FoundInAppsPersonPhase, (uint64_t)&protocol conformance descriptor for PipelinePhase);
  *(_QWORD *)(v0 + 608) = v5;
  *(_QWORD *)(v0 + 576) = v1;
  v6 = (__n128 *)sub_1C0787A5C();
  *(_QWORD *)(v0 + 1424) = v6;
  sub_1C0CCB0D4(v6, (__n128)xmmword_1C1079220);
  v7 = sub_1C078667C();
  sub_1C07E6C80(v7, v8, v9);
  v10 = type metadata accessor for GraphDiffPhase();
  sub_1C077B5BC();
  v11 = sub_1C0A8F510(v2);
  *(_QWORD *)(v0 + 520) = v10;
  sub_1C0794BAC(&qword_1ED750920, (uint64_t (*)(uint64_t))type metadata accessor for GraphDiffPhase, (uint64_t)&unk_1C1099FF0);
  *(_QWORD *)(v0 + 528) = v12;
  *(_QWORD *)(v0 + 496) = v11;
  v13 = sub_1C0787A5C();
  *(_QWORD *)(v0 + 1432) = v13;
  *(_OWORD *)(v13 + 16) = xmmword_1C1079220;
  sub_1C077DD60((__int128 *)(v0 + 496), v13 + 32);
  v14 = *(_QWORD *)(v4 + *(int *)(v3 + 24));
  v15 = *(_QWORD *)(v4 + *(int *)(v3 + 36));
  v16 = type metadata accessor for PromoteConstructionPhase();
  sub_1C0778598();
  v17 = sub_1C0CDA8DC(v14, v15, 0);
  *(_QWORD *)(v0 + 440) = v16;
  sub_1C0794BAC(&qword_1ED750F58, (uint64_t (*)(uint64_t))type metadata accessor for PromoteConstructionPhase, (uint64_t)&unk_1C10B4014);
  *(_QWORD *)(v0 + 448) = v18;
  *(_QWORD *)(v0 + 416) = v17;
  v19 = sub_1C0787A5C();
  *(_QWORD *)(v0 + 1440) = v19;
  *(_OWORD *)(v19 + 16) = xmmword_1C1079220;
  sub_1C077DD60((__int128 *)(v0 + 416), v19 + 32);
  v20 = sub_1C078667C();
  sub_1C07E6C80(v20, v21, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  *(_BYTE *)(v0 + 1497) = 2;
  v22 = objc_allocWithZone(MEMORY[0x1E0C97298]);
  sub_1C077E884();
  swift_retain();
  objc_msgSend(v22, sel_init);
  sub_1C0786E24();
  v23 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1448) = v23;
  *v23 = v0;
  v23[1] = sub_1C0CC6884;
  sub_1C07864B8(*(_QWORD *)(v0 + 880));
  sub_1C077C524();
  return sub_1C08D6FA8(v24, v25, v26);
}

uint64_t sub_1C0CC6884()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C078D3A4();
  sub_1C078AADC();
  *(_QWORD *)(v1 + 1456) = v0;
  sub_1C078DEDC();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0CC68C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _BYTE *v8;

  v1 = *(_QWORD *)(v0 + 1456);
  v2 = *(_QWORD *)(v0 + 960);
  *(_QWORD *)(v0 + 360) = *(_QWORD *)(v0 + 936);
  *(_QWORD *)(v0 + 368) = v2;
  *(_QWORD *)(v0 + 336) = v1;
  v3 = (__n128 *)sub_1C0787A5C();
  *(_QWORD *)(v0 + 1464) = v3;
  v4 = sub_1C079D7F0(v3, (__n128)xmmword_1C1079220);
  sub_1C07A6010(v4, v5, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  *(_BYTE *)(v0 + 1499) = 2;
  sub_1C0786E24();
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1472) = v6;
  v7 = sub_1C079A08C(v6, (uint64_t)sub_1C0CC6974);
  return sub_1C08930E0(v7, v8);
}

uint64_t sub_1C0CC6974()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C078D3A4();
  sub_1C078AADC();
  *(_QWORD *)(v1 + 1480) = v0;
  sub_1C078DEDC();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0CC69B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  BOOL v19;
  unint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v1 = *(_QWORD *)(v0 + 1480);
  v38 = *(_QWORD *)(v0 + 1440);
  v39 = *(_QWORD *)(v0 + 1464);
  v36 = *(_QWORD *)(v0 + 1360);
  v37 = *(_QWORD *)(v0 + 1392);
  v34 = *(_QWORD *)(v0 + 1296);
  v35 = *(_QWORD *)(v0 + 1328);
  v32 = *(_QWORD *)(v0 + 1240);
  v33 = *(_QWORD *)(v0 + 1272);
  v30 = *(_QWORD *)(v0 + 1168);
  v31 = *(_QWORD *)(v0 + 1208);
  v28 = *(_QWORD *)(v0 + 1104);
  v29 = *(_QWORD *)(v0 + 1136);
  v27 = *(_QWORD *)(v0 + 1072);
  v2 = *(_QWORD *)(v0 + 1064);
  v26 = *(_QWORD *)(v0 + 1032);
  v3 = *(_QWORD *)(v0 + 1000);
  v4 = *(_QWORD *)(v0 + 968);
  v5 = *(_QWORD *)(v0 + 928);
  *(_QWORD *)(v0 + 280) = *(_QWORD *)(v0 + 1040);
  *(_QWORD *)(v0 + 288) = v2;
  *(_QWORD *)(v0 + 256) = v1;
  v6 = sub_1C0787A5C();
  *(_OWORD *)(v6 + 16) = xmmword_1C1079220;
  v25 = *(_OWORD *)(v0 + 1424);
  sub_1C077DD60((__int128 *)(v0 + 256), v6 + 32);
  v7 = type metadata accessor for RegisteredViewsGenerationFullPhase();
  v8 = 32;
  v9 = sub_1C0778598();
  *(_QWORD *)(v9 + 16) = 0xD00000000000001FLL;
  *(_QWORD *)(v9 + 24) = 0x80000001C1107EC0;
  *(_QWORD *)(v0 + 200) = v7;
  sub_1C0794BAC((unint64_t *)&unk_1ED751230, (uint64_t (*)(uint64_t))type metadata accessor for RegisteredViewsGenerationFullPhase, (uint64_t)&unk_1C10C31BC);
  *(_QWORD *)(v0 + 176) = v9;
  *(_QWORD *)(v0 + 208) = v10;
  v11 = (__n128 *)sub_1C0787A5C();
  sub_1C0782BE0(v11, (__n128)xmmword_1C1079220);
  sub_1C07ACF80(&qword_1ED7513F0);
  v12 = sub_1C0778598();
  *(_OWORD *)(v12 + 16) = xmmword_1C10819F0;
  *(_QWORD *)(v12 + 32) = v5;
  *(_QWORD *)(v12 + 40) = v4;
  *(_QWORD *)(v12 + 48) = v3;
  *(_QWORD *)(v12 + 56) = v26;
  *(_QWORD *)(v12 + 64) = v27;
  *(_QWORD *)(v12 + 72) = v28;
  *(_QWORD *)(v12 + 80) = v29;
  *(_QWORD *)(v12 + 88) = v30;
  *(_QWORD *)(v12 + 96) = v31;
  *(_QWORD *)(v12 + 104) = v32;
  *(_QWORD *)(v12 + 112) = v33;
  *(_QWORD *)(v12 + 120) = v34;
  *(_QWORD *)(v12 + 128) = v35;
  *(_QWORD *)(v12 + 136) = v36;
  *(_QWORD *)(v12 + 144) = v37;
  *(_OWORD *)(v12 + 152) = v25;
  *(_QWORD *)(v12 + 168) = v38;
  *(_QWORD *)(v12 + 176) = v39;
  *(_QWORD *)(v12 + 184) = v6;
  *(_QWORD *)(v12 + 192) = v11;
  v13 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v14 = *(_QWORD *)(v12 + v8);
    v15 = *(_QWORD *)(v14 + 16);
    v16 = *(_QWORD *)(v13 + 16);
    if (__OFADD__(v16, v15))
      break;
    sub_1C077AEBC();
    if (!sub_1C0778698() || (int64_t)(v16 + v15) > *(_QWORD *)(v13 + 24) >> 1)
    {
      sub_1C077FB58();
      v13 = v17;
    }
    if (*(_QWORD *)(v14 + 16))
    {
      sub_1C0780824();
      if (v18 != v19)
        goto LABEL_21;
      sub_1C07AEC18();
      v21 = v21 || v16 >= v20;
      if (!v21)
        goto LABEL_23;
      sub_1C079BD54();
      sub_1C0CCB048();
      if (v15)
      {
        v22 = *(_QWORD *)(v13 + 16);
        v19 = __OFADD__(v22, v15);
        v23 = v22 + v15;
        if (v19)
          goto LABEL_22;
        *(_QWORD *)(v13 + 16) = v23;
      }
    }
    else if (v15)
    {
      goto LABEL_20;
    }
    sub_1C077B5B4();
    v8 += 8;
    if (v8 == 200)
    {
      swift_setDeallocating();
      sub_1C0BE8F3C();
      sub_1C07758BC();
      return (*(uint64_t (**)(uint64_t))(v0 + 8))(v13);
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  sub_1C0776AF8();
  return sub_1C0786314();
}

uint64_t sub_1C0CC6CBC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v2[11] = a1;
  v2[12] = a2;
  v3 = (_QWORD *)swift_task_alloc();
  v2[13] = v3;
  *v3 = v2;
  v3[1] = sub_1C0CC6D08;
  return sub_1C0CC6F18();
}

uint64_t sub_1C0CC6D08()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C078D3A4();
  sub_1C078AADC();
  *(_QWORD *)(v1 + 112) = v0;
  sub_1C078DEDC();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0CC6D44()
{
  uint64_t v0;
  __n128 *v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  sub_1C0789E7C();
  v2 = v1[7].n128_u64[0];
  v1[5].n128_u64[0] = v2;
  if (qword_1ED75ABA8 != -1)
  {
    swift_once();
    v2 = v1[7].n128_u64[0];
  }
  v4 = qword_1ED78D118;
  v3 = unk_1ED78D120;
  v6 = qword_1ED78D128;
  v5 = unk_1ED78D130;
  v7 = qword_1ED78D138;
  v8 = *(_QWORD *)(v2 + 16);
  sub_1C0775C10();
  if (v0)
  {
    swift_bridgeObjectRelease();
    v9 = sub_1C079C6C0();
    return sub_1C078C7A8(v9, v10);
  }
  else
  {
    v1[1].n128_u64[0] = v4;
    v1[1].n128_u64[1] = v3;
    v1[2].n128_u64[0] = v6;
    v1[2].n128_u64[1] = v5;
    v1[3].n128_u64[0] = v7;
    v1[3].n128_u64[1] = v8;
    v1[4].n128_u64[0] = v5;
    v1[4].n128_u64[1] = v7;
    sub_1C079327C();
    sub_1C077C0B8();
    sub_1C0795C58(v1 + 1);
    sub_1C0775894();
    sub_1C077589C();
    sub_1C077AB58(v5);
    sub_1C07785A8();
    v12 = (_QWORD *)swift_task_alloc();
    v1[7].n128_u64[1] = (unint64_t)v12;
    *v12 = v1;
    v12[1] = sub_1C0CC6E70;
    sub_1C07B4974(v1[5].n128_i64[1]);
    sub_1C07907C8();
    return sub_1C0CC49C0(v13, v14);
  }
}

uint64_t sub_1C0CC6E70()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_1C077E88C();
  sub_1C0780AE0(v2);
  *(_QWORD *)(v0 + 128) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_1C077862C();
  return sub_1C0789D28();
}

uint64_t sub_1C0CC6EC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  char v4;

  v1 = *(_QWORD *)(v0 + 128);
  sub_1C106EDE8();
  if (v1)
  {
    v2 = sub_1C079C6C0();
  }
  else
  {
    v4 = sub_1C1070120();
    v3 = *(uint64_t (**)(void))(v0 + 8);
    v2 = v4 & 1;
  }
  return sub_1C07A601C(v2, v3);
}

uint64_t sub_1C0CC6F10()
{
  return sub_1C07805A8();
}

uint64_t sub_1C0CC6F18()
{
  uint64_t v0;
  _QWORD *v1;

  v1[42] = v0;
  v1[43] = type metadata accessor for Source();
  v1[44] = swift_task_alloc();
  type metadata accessor for Configuration();
  v1[45] = swift_task_alloc();
  v1[46] = type metadata accessor for PhaseStores();
  v1[47] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C0CC6FB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _BYTE *v6;

  v1 = *(_QWORD *)(v0 + 376);
  v2 = *(_QWORD *)(v0 + 336);
  v3 = OBJC_IVAR____TtC24IntelligencePlatformCore8Pipeline_stores;
  *(_QWORD *)(v0 + 384) = OBJC_IVAR____TtC24IntelligencePlatformCore8Pipeline_stores;
  sub_1C07E6C80(v2 + v3, v1, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  *(_BYTE *)(v0 + 490) = 1;
  *(_QWORD *)(v0 + 392) = type metadata accessor for RelationshipPhase();
  sub_1C077B5BC();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 400) = v4;
  *v4 = v0;
  v4[1] = sub_1C0CC703C;
  v5 = sub_1C079AEA0(*(_QWORD *)(v0 + 376));
  return sub_1C0CCB01C(v5, v6);
}

uint64_t sub_1C0CC703C()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C078D3A4();
  sub_1C078AADC();
  *(_QWORD *)(v1 + 408) = v0;
  sub_1C078DEDC();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0CC7078()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _BYTE *v8;

  v1 = *(_QWORD *)(v0 + 408);
  *(_QWORD *)(v0 + 120) = *(_QWORD *)(v0 + 392);
  sub_1C0794BAC(&qword_1ED750AD0, (uint64_t (*)(uint64_t))type metadata accessor for RelationshipPhase, (uint64_t)&protocol conformance descriptor for PipelinePhase);
  *(_QWORD *)(v0 + 128) = v2;
  *(_QWORD *)(v0 + 96) = v1;
  *(_QWORD *)(v0 + 416) = sub_1C07ACF80(&qword_1ED741F28);
  v3 = (__n128 *)sub_1C0787A5C();
  *(_QWORD *)(v0 + 424) = v3;
  v4 = sub_1C07BA258(v3, (__n128)xmmword_1C1079220);
  sub_1C0CCB188(v4, v5, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  *(_BYTE *)(v0 + 488) = 1;
  *(_QWORD *)(v0 + 432) = type metadata accessor for PhotosPersonPhase();
  sub_1C077B5BC();
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 440) = v6;
  *v6 = v0;
  v6[1] = sub_1C0CC7160;
  v7 = sub_1C079AEA0(*(_QWORD *)(v0 + 376));
  return sub_1C0CB0CA8(v7, v8);
}

uint64_t sub_1C0CC7160()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C078D3A4();
  sub_1C078AADC();
  *(_QWORD *)(v1 + 448) = v0;
  sub_1C078DEDC();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0CC719C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _BYTE *v8;

  sub_1C0CCAFD8();
  v1 = *(_QWORD *)(v0 + 448);
  *(_QWORD *)(v0 + 200) = *(_QWORD *)(v0 + 432);
  sub_1C0794BAC(&qword_1ED750AB0, (uint64_t (*)(uint64_t))type metadata accessor for PhotosPersonPhase, (uint64_t)&protocol conformance descriptor for PipelinePhase);
  *(_QWORD *)(v0 + 208) = v2;
  *(_QWORD *)(v0 + 176) = v1;
  v3 = (__n128 *)sub_1C0787A5C();
  *(_QWORD *)(v0 + 456) = v3;
  v4 = sub_1C07AB8C0(v3, (__n128)xmmword_1C1079220);
  sub_1C07ABDEC(v4, v5, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  *(_BYTE *)(v0 + 489) = 1;
  *(_QWORD *)(v0 + 464) = type metadata accessor for PGRelationshipPhase();
  sub_1C077B5BC();
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 472) = v6;
  *v6 = v0;
  v6[1] = sub_1C0CC7268;
  v7 = sub_1C079AEA0(*(_QWORD *)(v0 + 376));
  return sub_1C07B806C(v7, v8);
}

uint64_t sub_1C0CC7268()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C078D3A4();
  sub_1C078AADC();
  *(_QWORD *)(v1 + 480) = v0;
  sub_1C078DEDC();
  sub_1C077862C();
  return sub_1C077AEC4();
}

void sub_1C0CC72A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  uint64_t inited;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  BOOL v64;
  unint64_t v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __int128 *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 480);
  v3 = *(_QWORD *)(v0 + 376);
  v4 = *(_QWORD *)(v0 + 368);
  v79 = *(_QWORD *)(v0 + 336);
  v82 = *(_QWORD *)(v0 + 360);
  v5 = v79 + *(_QWORD *)(v0 + 384);
  *(_QWORD *)(v0 + 280) = *(_QWORD *)(v0 + 464);
  sub_1C0794BAC(&qword_1ED750B28, (uint64_t (*)(uint64_t))type metadata accessor for PGRelationshipPhase, (uint64_t)&protocol conformance descriptor for PipelinePhase);
  *(_QWORD *)(v0 + 288) = v6;
  *(_QWORD *)(v0 + 256) = v2;
  v7 = sub_1C0787A5C();
  *(_OWORD *)(v7 + 16) = xmmword_1C1079220;
  v90 = v7;
  sub_1C077DD60((__int128 *)(v0 + 256), v7 + 32);
  sub_1C07E6C80(v5, v3, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  v8 = type metadata accessor for GraphDiffPhase();
  sub_1C077B5BC();
  v9 = sub_1C0A8F510(v3);
  *(_QWORD *)(v1 + 160) = v8;
  sub_1C0794BAC(&qword_1ED750920, (uint64_t (*)(uint64_t))type metadata accessor for GraphDiffPhase, (uint64_t)&unk_1C1099FF0);
  *(_QWORD *)(v1 + 136) = v9;
  *(_QWORD *)(v1 + 168) = v10;
  v11 = (__n128 *)sub_1C0787A5C();
  sub_1C07ABADC(v11, v12, v13, v14, v15, v16, v17, v18, v70, v73, v76, v79, v82, v1 + 216, v1 + 16, v90, v19);
  sub_1C077DD60((__int128 *)(v1 + 136), v20);
  v21 = *(_QWORD *)(v5 + *(int *)(v4 + 24));
  v22 = *(_QWORD *)(v5 + *(int *)(v4 + 36));
  v23 = type metadata accessor for PromoteConstructionPhase();
  sub_1C0778598();
  v24 = sub_1C0CDA8DC(v21, v22, 1);
  *(_QWORD *)(v1 + 320) = v23;
  sub_1C0794BAC(&qword_1ED750F58, (uint64_t (*)(uint64_t))type metadata accessor for PromoteConstructionPhase, (uint64_t)&unk_1C10B4014);
  *(_QWORD *)(v1 + 328) = v25;
  *(_QWORD *)(v1 + 296) = v24;
  v26 = (__n128 *)sub_1C0787A5C();
  sub_1C07ABADC(v26, v27, v28, v29, v30, v31, v32, v33, v71, v74, v77, v80, v83, v85, v88, v91, v34);
  sub_1C077DD60((__int128 *)(v1 + 296), v35);
  sub_1C07E6C80(v81 + OBJC_IVAR____TtC24IntelligencePlatformCore8Pipeline_config, v84, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v36 = qword_1ED7623A8;
  swift_retain();
  swift_retain();
  if (v36 != -1)
    swift_once();
  v37 = *(_QWORD *)(v1 + 456);
  v38 = *(_QWORD *)(v1 + 424);
  v39 = *(_QWORD *)(v1 + 352);
  v40 = *(_QWORD *)(v1 + 360);
  v41 = sub_1C079E000(*(_QWORD *)(v1 + 344), (uint64_t)&unk_1ED762388);
  sub_1C07E6C80(v41, v39, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  v42 = type metadata accessor for FastpassViewsGenerationPhase(0);
  sub_1C077B5BC();
  v43 = sub_1C0CA7A84(v40, v39);
  *(_QWORD *)(v1 + 240) = v42;
  sub_1C0794BAC(&qword_1EF647080, type metadata accessor for FastpassViewsGenerationPhase, (uint64_t)&unk_1C10C3178);
  *(_QWORD *)(v1 + 248) = v44;
  *(_QWORD *)(v1 + 216) = v43;
  v45 = (__n128 *)sub_1C0787A5C();
  sub_1C07ABADC(v45, v46, v47, v48, v49, v50, v51, v52, v72, v75, v78, v81, v84, v86, v89, v92, v53);
  sub_1C077DD60(v87, v54);
  sub_1C07ACF80(&qword_1ED7513F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C107A8C0;
  *(_QWORD *)(inited + 32) = v38;
  *(_QWORD *)(inited + 40) = v37;
  *(_QWORD *)(inited + 48) = v93;
  *(_QWORD *)(inited + 56) = v11;
  *(_QWORD *)(inited + 64) = v26;
  *(_QWORD *)(inited + 72) = v45;
  v56 = MEMORY[0x1E0DEE9D8];
  v57 = 32;
  while (1)
  {
    v58 = *(_QWORD *)(inited + v57);
    v59 = *(_QWORD *)(v58 + 16);
    v60 = *(_QWORD *)(v56 + 16);
    if (__OFADD__(v60, v59))
      break;
    sub_1C077AEBC();
    if (!sub_1C0778698() || v60 + v59 > *(_QWORD *)(v56 + 24) >> 1)
    {
      sub_1C07ED318();
      v56 = v61;
    }
    if (*(_QWORD *)(v58 + 16))
    {
      sub_1C0780824();
      if (v63 != v64)
        goto LABEL_23;
      v65 = v56 + 40 * v62 + 32;
      if (v58 + 32 < v65 + 40 * v59 && v65 < v58 + 32 + 40 * v59)
        goto LABEL_25;
      sub_1C079BD54();
      sub_1C0CCB048();
      if (v59)
      {
        v67 = *(_QWORD *)(v56 + 16);
        v64 = __OFADD__(v67, v59);
        v68 = v67 + v59;
        if (v64)
          goto LABEL_24;
        *(_QWORD *)(v56 + 16) = v68;
      }
    }
    else if (v59)
    {
      goto LABEL_22;
    }
    sub_1C077B5B4();
    v57 += 8;
    if (v57 == 80)
    {
      swift_setDeallocating();
      sub_1C0BE8F3C();
      swift_task_dealloc();
      sub_1C07758BC();
      sub_1C0779D18();
      sub_1C078D610();
      __asm { BR              X1 }
    }
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  sub_1C0776AF8();
  sub_1C0786314();
  sub_1C078D610();
}

uint64_t sub_1C0CC76C4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2[45] = a1;
  v2[46] = a2;
  type metadata accessor for MatchExtractorService();
  v2[47] = swift_task_alloc();
  type metadata accessor for PhaseStores();
  v2[48] = swift_task_alloc();
  v2[49] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C0CC774C()
{
  uint64_t v0;
  __n128 *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;

  if (qword_1ED75ABA8 != -1)
    swift_once();
  v3 = qword_1ED78D118;
  v2 = unk_1ED78D120;
  v5 = qword_1ED78D128;
  v4 = unk_1ED78D130;
  v6 = qword_1ED78D138;
  sub_1C0775C10();
  if (v0)
  {
    sub_1C0782788();
    sub_1C07767BC();
    sub_1C07796F8();
    v7 = sub_1C079C6C0();
    return sub_1C079B970(v7, v8);
  }
  else
  {
    v1[1].n128_u64[0] = v3;
    v1[1].n128_u64[1] = v2;
    v1[2].n128_u64[0] = v5;
    v1[2].n128_u64[1] = v4;
    v1[3].n128_u64[0] = v6;
    v1[3].n128_u64[1] = 7;
    v1[4].n128_u64[0] = v4;
    v1[4].n128_u64[1] = v6;
    sub_1C0BCD07C(v4);
    sub_1C077C0B8();
    sub_1C0778624();
    sub_1C0795C58(v1 + 1);
    sub_1C077589C();
    sub_1C0775834();
    sub_1C077AB58(v4);
    sub_1C07785A8();
    sub_1C1070138();
    v9 = v1[24].n128_i64[1];
    v10 = v1[23].n128_u64[0];
    v11 = OBJC_IVAR____TtC24IntelligencePlatformCore8Pipeline_stores;
    v1[25].n128_u64[0] = OBJC_IVAR____TtC24IntelligencePlatformCore8Pipeline_stores;
    sub_1C07E6C80(v10 + v11, v9, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
    v1[37].n128_u8[1] = 3;
    objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97298]), sel_init);
    sub_1C0CCB1CC();
    sub_1C077B5BC();
    v12 = (_QWORD *)swift_task_alloc();
    v1[25].n128_u64[1] = (unint64_t)v12;
    *v12 = v1;
    v12[1] = sub_1C0CC78D4;
    v13 = sub_1C079CF04(v1[24].n128_i64[1]);
    return sub_1C08D6FA8(v13, v14, v15);
  }
}

uint64_t sub_1C0CC78D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  sub_1C077E88C();
  sub_1C0780AE0(v4);
  *(_QWORD *)(v1 + 416) = a1;
  swift_task_dealloc();
  v7 = (uint64_t (*)(void))((char *)&dword_1EF6470C8 + dword_1EF6470C8);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 424) = v5;
  *v5 = v2;
  v5[1] = sub_1C0CC7940;
  return sub_1C078D870(v7);
}

uint64_t sub_1C0CC7940()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C077B0C8();
  sub_1C07B4220();
  *(_QWORD *)(v1 + 432) = v0;
  swift_task_dealloc();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0CC798C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, unsigned __int8 a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(void);
  __n128 *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  _BYTE *v43;

  sub_1C0789E7C();
  a24 = v29;
  a25 = v30;
  a23 = v25;
  v31 = *(_QWORD *)(v25 + 432);
  sub_1C1070138();
  if (v31)
  {
    swift_release();
    sub_1C0782788();
    sub_1C07767BC();
    sub_1C07796F8();
    v34 = sub_1C079C6C0();
    return sub_1C078C7A8(v34, v35);
  }
  else
  {
    if (qword_1ED75ABB8 != -1)
      swift_once();
    v33 = qword_1ED78D620;
    v32 = *(_QWORD *)algn_1ED78D628;
    sub_1C07AEA10();
    *(_QWORD *)(v25 + 80) = v33;
    *(_QWORD *)(v25 + 88) = v32;
    *(_QWORD *)(v25 + 96) = v28;
    *(_QWORD *)(v25 + 104) = v27;
    *(_QWORD *)(v25 + 112) = v26;
    *(_QWORD *)(v25 + 120) = 1;
    *(_QWORD *)(v25 + 128) = v27;
    *(_QWORD *)(v25 + 136) = v26;
    sub_1C079327C();
    sub_1C077C0B8();
    sub_1C077862C();
    sub_1C0D436C0(v36);
    *(_QWORD *)(v25 + 440) = 0;
    v37 = *(_QWORD *)(v25 + 400);
    v38 = *(_QWORD *)(v25 + 384);
    v39 = *(_QWORD *)(v25 + 368);
    sub_1C0775894();
    sub_1C077589C();
    sub_1C078E200();
    a13 = 3;
    sub_1C0CC2C94(&a13);
    sub_1C07ACF80(&qword_1ED762CD0);
    v40 = sub_1C0778598();
    *(_QWORD *)(v25 + 448) = v40;
    *(_OWORD *)(v40 + 16) = xmmword_1C107B050;
    sub_1C07E6C80(v39 + v37, v38, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
    *(_BYTE *)(v25 + 595) = 3;
    type metadata accessor for INPersonMatchExtractor();
    sub_1C077B5BC();
    v41 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v25 + 456) = v41;
    *v41 = v25;
    v41[1] = sub_1C0CC7B24;
    sub_1C07B4974(*(_QWORD *)(v25 + 384));
    sub_1C07907C8();
    return sub_1C0B6CDC0(v42, v43);
  }
}

uint64_t sub_1C0CC7B24()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C078D3A4();
  sub_1C078AADC();
  *(_QWORD *)(v1 + 464) = v0;
  sub_1C078DEDC();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0CC7B60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;

  v1 = *(_QWORD *)(v0 + 384);
  v2 = *(_QWORD *)(v0 + 368);
  v3 = v2 + *(_QWORD *)(v0 + 400);
  *(_QWORD *)(*(_QWORD *)(v0 + 448) + 32) = *(_QWORD *)(v0 + 464);
  sub_1C07E6C80(v3, v1, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  v4 = OBJC_IVAR____TtC24IntelligencePlatformCore8Pipeline_geoMapService;
  *(_QWORD *)(v0 + 472) = OBJC_IVAR____TtC24IntelligencePlatformCore8Pipeline_geoMapService;
  v5 = *(void **)(v2 + v4);
  *(_BYTE *)(v0 + 592) = 3;
  type metadata accessor for EventKitEventMatchExtractor();
  sub_1C077B5BC();
  v6 = v5;
  v7 = (_QWORD *)sub_1C0797BC4();
  *(_QWORD *)(v0 + 480) = v7;
  *v7 = v0;
  v7[1] = sub_1C0CC7C08;
  v8 = sub_1C0CCAFC0(*(_QWORD *)(v0 + 384));
  return sub_1C09CF488(v8, v9, v10);
}

uint64_t sub_1C0CC7C08()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C078D3A4();
  sub_1C078AADC();
  *(_QWORD *)(v1 + 488) = v0;
  sub_1C078DEDC();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0CC7C44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 472);
  v2 = *(_QWORD *)(v0 + 448);
  v3 = *(_QWORD *)(v0 + 368);
  *(_QWORD *)(v2 + 40) = *(_QWORD *)(v0 + 488);
  v13 = v2;
  v4 = sub_1C106FF28();
  *(_QWORD *)(v0 + 496) = v13;
  *(_QWORD *)(v0 + 336) = v13;
  sub_1C07ABDEC(v4, v5, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  v6 = *(void **)(v3 + v1);
  *(_BYTE *)(v0 + 596) = 3;
  type metadata accessor for FoundInAppsEventMatchExtractor();
  sub_1C077B5BC();
  v7 = v6;
  v8 = (_QWORD *)sub_1C0797BC4();
  *(_QWORD *)(v0 + 504) = v8;
  *v8 = v0;
  v8[1] = sub_1C0CC7D0C;
  v9 = sub_1C079CF04(*(_QWORD *)(v0 + 384));
  return sub_1C0A52290(v9, v10, v11);
}

uint64_t sub_1C0CC7D0C()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C078D3A4();
  sub_1C078AADC();
  *(_QWORD *)(v1 + 512) = v0;
  sub_1C078DEDC();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0CC7D48()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _BYTE *v3;

  sub_1C07E6C80(*(_QWORD *)(v0 + 368) + *(_QWORD *)(v0 + 400), *(_QWORD *)(v0 + 384), (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  *(_BYTE *)(v0 + 594) = 3;
  type metadata accessor for FoundInAppsPersonMatchExtractor();
  sub_1C077B5BC();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 520) = v1;
  *v1 = v0;
  v1[1] = sub_1C0CC7DC8;
  v2 = sub_1C079AEA0(*(_QWORD *)(v0 + 384));
  return sub_1C0A52B14(v2, v3);
}

uint64_t sub_1C0CC7DC8()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C078D3A4();
  sub_1C078AADC();
  *(_QWORD *)(v1 + 528) = v0;
  sub_1C078DEDC();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0CC7E04()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v22;
  int64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 *v49;
  __n128 *v50;
  uint64_t v51;
  _QWORD *v52;
  int64_t v53;
  uint64_t v54;

  v1 = *(_QWORD *)(v0 + 496);
  if (v1 >> 62)
    goto LABEL_52;
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  if (__OFADD__(v2, 2))
  {
    __break(1u);
  }
  else
  {
    sub_1C0CCA328(v2 + 2, 1);
    sub_1C106FF28();
    v3 = sub_1C077E884();
    MEMORY[0x1C3BA6800](v3);
    sub_1C0CCB16C();
    if (!v4)
      goto LABEL_5;
  }
  sub_1C079C818();
LABEL_5:
  sub_1C106FFC4();
  sub_1C106FF28();
  v5 = swift_retain();
  MEMORY[0x1C3BA6800](v5);
  sub_1C0CCB16C();
  if (v4)
    sub_1C079C818();
  v6 = *(_QWORD *)(v0 + 512);
  v8 = *(_QWORD *)(v0 + 376);
  v7 = *(_QWORD *)(v0 + 384);
  v9 = *(_QWORD *)(v0 + 368) + *(_QWORD *)(v0 + 400);
  sub_1C077B200();
  sub_1C106FFC4();
  sub_1C106FF28();
  swift_release();
  swift_release();
  sub_1C07E6C80(v9, v7, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C0C2DF54(v7, v8);
  v10 = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(v0 + 352) = MEMORY[0x1E0DEE9E0];
  v11 = *(_QWORD *)(v0 + 336);
  *(_QWORD *)(v0 + 536) = v11;
  if (v11 >> 62)
  {
    sub_1C07B69AC();
    v12 = sub_1C10709B4();
    sub_1C077960C();
  }
  else
  {
    v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_QWORD *)(v0 + 544) = v12;
  if (!v12)
  {
    v49 = (__n128 *)(v0 + 272);
    v50 = (__n128 *)(v0 + 208);
    sub_1C077960C();
    v51 = *(_QWORD *)(v0 + 440);
    v52 = (_QWORD *)v0;
    v16 = -1;
    v17 = -1 << *(_BYTE *)(v10 + 32);
    if (-v17 < 64)
      v16 = ~(-1 << -(char)v17);
    v0 = v16 & *(_QWORD *)(v10 + 64);
    v53 = (unint64_t)(63 - v17) >> 6;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v18 = 0;
    while (1)
    {
      if (v0)
      {
        v19 = __clz(__rbit64(v0));
        v0 &= v0 - 1;
        v20 = v19 | (v18 << 6);
      }
      else
      {
        if (__OFADD__(v18++, 1))
        {
          __break(1u);
          goto LABEL_50;
        }
        if (v18 >= v53)
          goto LABEL_37;
        v22 = *(_QWORD *)(v10 + 8 * v18 + 64);
        if (!v22)
        {
          v23 = v18 + 1;
          if (v18 + 1 >= v53)
            goto LABEL_37;
          v22 = *(_QWORD *)(v10 + 8 * v23 + 64);
          if (!v22)
          {
            v23 = v18 + 2;
            if (v18 + 2 >= v53)
              goto LABEL_37;
            v22 = *(_QWORD *)(v10 + 8 * v23 + 64);
            if (!v22)
            {
              v23 = v18 + 3;
              if (v18 + 3 >= v53)
              {
LABEL_37:
                swift_release();
                sub_1C1070138();
                if (v51)
                {
                  sub_1C0CCB154();
                  sub_1C07AFB2C();
                  v40 = v11;
                  goto LABEL_44;
                }
                v0 = (unint64_t)v52;
                v36 = qword_1ED78D620;
                v35 = *(_QWORD *)algn_1ED78D628;
                v38 = qword_1ED78D630;
                v37 = unk_1ED78D638;
                v39 = qword_1ED78D640;
                sub_1C078C330();
                v52[26] = v36;
                v52[27] = v35;
                v52[28] = v38;
                v52[29] = v37;
                v52[30] = v39;
                v52[31] = 2;
                v52[32] = v37;
                v52[33] = v39;
                sub_1C0BCD07C(v37);
                sub_1C077C0B8();
                sub_1C0778624();
                sub_1C0CCB134(v50);
                sub_1C077589C();
                sub_1C0775834();
                sub_1C077AB58(v37);
                sub_1C077980C();
                v42 = v52[44];
                v43 = sub_1C07767B4();
                v44 = sub_1C0C2E14C(v43);
                sub_1C07767AC();
                if ((v44 & 1) == 0)
                  sub_1C0C2E254(v42);
                sub_1C07767AC();
                v46 = qword_1ED78D620;
                v45 = *(_QWORD *)algn_1ED78D628;
                v47 = qword_1ED78D630;
                v6 = unk_1ED78D638;
                v48 = qword_1ED78D640;
                sub_1C0775C10();
                v52[34] = v46;
                v52[35] = v45;
                v52[36] = v47;
                v52[37] = v6;
                v52[38] = v48;
                v52[39] = 3;
                v52[40] = v6;
                v52[41] = v48;
                sub_1C0BCD07C(v6);
                sub_1C077C0B8();
                sub_1C0778624();
                sub_1C0795C58(v49);
LABEL_50:
                sub_1C077589C();
                sub_1C0775834();
                sub_1C077AB58(v6);
                sub_1C07785A8();
                sub_1C1070120();
                sub_1C0CCB21C();
                sub_1C07B1F90(*(_QWORD *)(v0 + 376), (uint64_t (*)(_QWORD))type metadata accessor for MatchExtractorService);
                sub_1C0779D18();
                sub_1C07796F8();
                sub_1C07758BC();
                sub_1C0782E84();
LABEL_45:
                sub_1C078D610();
                __asm { BR              X1 }
              }
              v22 = *(_QWORD *)(v10 + 8 * v23 + 64);
              if (!v22)
              {
                while (1)
                {
                  v18 = v23 + 1;
                  if (__OFADD__(v23, 1))
                    break;
                  if (v18 >= v53)
                    goto LABEL_37;
                  v22 = *(_QWORD *)(v10 + 8 * v18 + 64);
                  ++v23;
                  if (v22)
                    goto LABEL_27;
                }
                __break(1u);
LABEL_52:
                sub_1C07B69AC();
                v2 = sub_1C10709B4();
                sub_1C077960C();
                goto LABEL_3;
              }
            }
          }
          v18 = v23;
        }
LABEL_27:
        v0 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v18 << 6);
      }
      v24 = (uint64_t *)(*(_QWORD *)(v10 + 48) + 16 * v20);
      v25 = *v24;
      v6 = v24[1];
      v26 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v20);
      v27 = qword_1ED761458;
      sub_1C077AEBC();
      sub_1C07767B4();
      if (v27 != -1)
        swift_once();
      v28 = sub_1C077585C();
      v11 = sub_1C079E000(v28, (uint64_t)qword_1ED78D818);
      sub_1C077AEBC();
      sub_1C07767B4();
      sub_1C106F538();
      v29 = sub_1C0784E0C();
      if (os_log_type_enabled((os_log_t)v11, v29))
      {
        v30 = sub_1C0775854();
        v54 = sub_1C0775854();
        *(_DWORD *)v30 = 136315394;
        sub_1C077AEBC();
        *(_QWORD *)(v30 + 4) = sub_1C0788DAC(v25, v6, &v54);
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v30 + 12) = 2048;
        v31 = *(_QWORD *)(v26 + 16);
        sub_1C07767AC();
        *(_QWORD *)(v30 + 14) = v31;
        sub_1C07767AC();
        _os_log_impl(&dword_1C0771000, (os_log_t)v11, v29, "Pipeline: For entity type %s, %ld pairs were extracted.", (uint8_t *)v30, 0x16u);
        sub_1C08FF954();
        sub_1C0776778();
      }
      sub_1C07758A4();
      sub_1C07758A4();

    }
  }
  v13 = *(_QWORD *)(v0 + 440);
  *(_QWORD *)(v0 + 560) = 0;
  *(_QWORD *)(v0 + 552) = 1;
  v14 = *(_QWORD *)(v0 + 536);
  if ((v14 & 0xC000000000000001) != 0)
  {
    v15 = MEMORY[0x1C3BA70DC](0);
  }
  else
  {
    v15 = *(_QWORD *)(v14 + 32);
    sub_1C0779758();
  }
  *(_QWORD *)(v0 + 568) = v15;
  sub_1C1070138();
  if (v13)
  {
    v32 = *(_QWORD *)(v0 + 376);
    sub_1C07785A8();
    sub_1C077AF1C();
    sub_1C0775834();
    sub_1C07AFB2C();
    v40 = v32;
LABEL_44:
    sub_1C07B1F90(v40, (uint64_t (*)(_QWORD))type metadata accessor for MatchExtractorService);
    sub_1C0782788();
    sub_1C07767BC();
    sub_1C07796F8();
    sub_1C079C6C0();
    goto LABEL_45;
  }
  v33 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 576) = v33;
  *v33 = v0;
  v33[1] = sub_1C0CC8558;
  sub_1C078D610();
  return sub_1C0C2D440();
}

uint64_t sub_1C0CC8558()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_1C077E88C();
  sub_1C0780AE0(v2);
  *(_QWORD *)(v0 + 584) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1C077862C();
  return sub_1C0789D28();
}

uint64_t sub_1C0CC85B4()
{
  __n128 *v0;
  unint64_t v1;
  uint64_t *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  unint64_t v29;
  unint64_t v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(uint64_t);
  __n128 *v54;
  uint64_t v55;
  uint64_t v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __n128 *v64;
  unint64_t v65;
  __n128 *v66;
  __n128 *v67;
  int64_t v68;
  uint64_t v69;
  uint64_t v70[2];

  v2 = (uint64_t *)&v0[22];
  v3 = v0[36].n128_u64[1];
  v4 = v0[23].n128_i64[1];
  v5 = *(_QWORD *)(v0[35].n128_u64[1] + OBJC_IVAR____TtC24IntelligencePlatformCore14MatchExtractor_matchesDict);
  sub_1C07767B4();
  sub_1C0CBD0E4(MEMORY[0x1E0DEE9E0], v5, v4);
  v7 = v6;
  sub_1C07767AC();
  if (qword_1ED761458 != -1)
LABEL_51:
    swift_once();
  v69 = sub_1C077585C();
  v8 = sub_1C079E000(v69, (uint64_t)qword_1ED78D818);
  swift_bridgeObjectRetain_n();
  sub_1C106F538();
  v9 = sub_1C0784E0C();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)sub_1C0775854();
    v70[0] = sub_1C0775854();
    *(_DWORD *)v10 = 136315138;
    sub_1C0778624();
    sub_1C07ACF80(&qword_1EF639FD8);
    v11 = sub_1C106F94C();
    v13 = v12;
    sub_1C0775834();
    v0[21].n128_u64[1] = sub_1C0788DAC(v11, v13, v70);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    sub_1C07758A4();
    sub_1C07796F0(&dword_1C0771000, v8, v9, "Pipeline: for this extractor, linked pairs are: %s", v10);
    sub_1C0778610();
    sub_1C0776778();
  }
  sub_1C07758A4();

  v14 = v0[35].n128_u64[0];
  v15 = v0[34].n128_u64[1];
  sub_1C0C2F89C(v2, v7);
  sub_1C0775834();
  if (v14 == 0x7FFFFFFFFFFFFFFELL)
  {
    __break(1u);
LABEL_53:
    sub_1C077589C();
    sub_1C0775834();
    sub_1C077AB58((uint64_t)v2);
    sub_1C07785A8();
    sub_1C1070120();
    v59 = sub_1C0CCB21C();
    goto LABEL_54;
  }
  v17 = qword_1ED78D620;
  v16 = *(_QWORD *)algn_1ED78D628;
  v18 = sub_1C07AEA10();
  if (v3)
  {
    v19 = v0[23].n128_i64[1];
    swift_release();
    sub_1C077AF1C();
    sub_1C077960C();
    sub_1C07AFB2C();
    v20 = v19;
    goto LABEL_41;
  }
  v21 = v18;
  v22 = v15 + 1;
  v0[9].n128_u64[0] = v17;
  v0[9].n128_u64[1] = v16;
  v0[10].n128_u64[0] = v1;
  v0[10].n128_u64[1] = v7;
  v0[11].n128_u64[0] = (unint64_t)v2;
  v0[11].n128_u64[1] = v22;
  v0[12].n128_u64[0] = v7;
  v0[12].n128_u64[1] = (unint64_t)v2;
  sub_1C079327C();
  sub_1C077C0B8();
  sub_1C0795C58(v0 + 9);
  v23 = v0[35].n128_u64[0];
  v24 = v0[34].n128_u64[0];
  sub_1C0775894();
  sub_1C077589C();
  v25 = v23 + 1;
  sub_1C078E200();
  sub_1C07785A8();
  if (v25 != v24)
  {
    v40 = v0[35].n128_u64[0] + 1;
    v0[35].n128_u64[0] = v40;
    v0[34].n128_u64[1] = v22;
    v41 = v0[33].n128_u64[1];
    if ((v41 & 0xC000000000000001) != 0)
    {
      v42 = MEMORY[0x1C3BA70DC]();
    }
    else
    {
      v42 = *(_QWORD *)(v41 + 8 * v40 + 32);
      sub_1C0779758();
    }
    v0[35].n128_u64[1] = v42;
    sub_1C0CCB180();
    if (!v25)
    {
      v44 = (_QWORD *)swift_task_alloc();
      v0[36].n128_u64[0] = (unint64_t)v44;
      *v44 = v0;
      v44[1] = sub_1C0CC8558;
      return sub_1C0C2D440();
    }
    v43 = v0[23].n128_i64[1];
    sub_1C07785A8();
    swift_release();
    sub_1C07767AC();
    sub_1C07AFB2C();
    v20 = v43;
LABEL_41:
    sub_1C07B1F90(v20, (uint64_t (*)(_QWORD))type metadata accessor for MatchExtractorService);
    sub_1C0782788();
    sub_1C07767BC();
    sub_1C07796F8();
    v52 = sub_1C079C6C0();
    return v53(v52);
  }
  v65 = v22;
  v64 = v0 + 17;
  swift_bridgeObjectRelease();
  v66 = v0;
  v0 = (__n128 *)v0[22].n128_u64[0];
  v67 = v0 + 4;
  v26 = -1;
  v27 = -1 << v0[2].n128_i8[0];
  if (-v27 < 64)
    v26 = ~(-1 << -(char)v27);
  v3 = v26 & v0[4].n128_u64[0];
  v68 = (unint64_t)(63 - v27) >> 6;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v28 = 0;
  while (1)
  {
    if (v3)
    {
      v29 = __clz(__rbit64(v3));
      v3 &= v3 - 1;
      v30 = v29 | (v28 << 6);
      goto LABEL_27;
    }
    v31 = v28 + 1;
    if (__OFADD__(v28, 1))
    {
      __break(1u);
      goto LABEL_51;
    }
    if (v31 >= v68)
      break;
    v32 = v67->n128_u64[v31];
    ++v28;
    if (!v32)
    {
      v28 = v31 + 1;
      if (v31 + 1 >= v68)
        break;
      v32 = v67->n128_u64[v28];
      if (!v32)
      {
        v28 = v31 + 2;
        if (v31 + 2 >= v68)
          break;
        v32 = v67->n128_u64[v28];
        if (!v32)
        {
          v33 = v31 + 3;
          if (v33 >= v68)
            break;
          v32 = v67->n128_u64[v33];
          if (!v32)
          {
            while (1)
            {
              v28 = v33 + 1;
              if (__OFADD__(v33, 1))
                break;
              if (v28 >= v68)
                goto LABEL_34;
              v32 = v67->n128_u64[v28];
              ++v33;
              if (v32)
                goto LABEL_26;
            }
            __break(1u);
            goto LABEL_56;
          }
          v28 = v33;
        }
      }
    }
LABEL_26:
    v3 = (v32 - 1) & v32;
    v30 = __clz(__rbit64(v32)) + (v28 << 6);
LABEL_27:
    v34 = (uint64_t *)(v0[3].n128_u64[0] + 16 * v30);
    v35 = *v34;
    v7 = v34[1];
    v2 = *(uint64_t **)(v0[3].n128_u64[1] + 8 * v30);
    v36 = qword_1ED761458;
    sub_1C0778624();
    sub_1C077AEBC();
    if (v36 != -1)
      swift_once();
    v21 = sub_1C079E000(v69, (uint64_t)qword_1ED78D818);
    sub_1C0778624();
    sub_1C077AEBC();
    sub_1C106F538();
    v37 = sub_1C0784E0C();
    v1 = v37;
    if (os_log_type_enabled((os_log_t)v21, v37))
    {
      v38 = sub_1C0775854();
      v70[0] = sub_1C0775854();
      *(_DWORD *)v38 = 136315394;
      sub_1C0778624();
      *(_QWORD *)(v38 + 4) = sub_1C0788DAC(v35, v7, v70);
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v38 + 12) = 2048;
      v39 = v2[2];
      sub_1C077B5B4();
      *(_QWORD *)(v38 + 14) = v39;
      sub_1C077B5B4();
      _os_log_impl(&dword_1C0771000, (os_log_t)v21, (os_log_type_t)v1, "Pipeline: For entity type %s, %ld pairs were extracted.", (uint8_t *)v38, 0x16u);
      sub_1C08FF954();
      sub_1C0776778();
    }
    sub_1C07758A4();
    sub_1C07758A4();

  }
LABEL_34:
  swift_release();
  sub_1C0CCB180();
  v46 = v65 + 1;
  if (__OFADD__(v65, 1))
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  v48 = qword_1ED78D620;
  v47 = *(_QWORD *)algn_1ED78D628;
  v50 = qword_1ED78D630;
  v49 = unk_1ED78D638;
  v51 = qword_1ED78D640;
  sub_1C078C330();
  v66[13].n128_u64[0] = v48;
  v66[13].n128_u64[1] = v47;
  v66[14].n128_u64[0] = v50;
  v66[14].n128_u64[1] = v49;
  v66[15].n128_u64[0] = v51;
  v66[15].n128_u64[1] = v46;
  v66[16].n128_u64[0] = v49;
  v66[16].n128_u64[1] = v51;
  sub_1C079327C();
  sub_1C077C0B8();
  sub_1C077862C();
  sub_1C0D436C0(v54);
  sub_1C0775894();
  sub_1C077589C();
  sub_1C077AB58(v49);
  sub_1C077AF1C();
  v55 = v66[22].n128_i64[0];
  v56 = sub_1C077AEBC();
  v21 = sub_1C0C2E14C(v56);
  sub_1C077B5B4();
  if ((v21 & 1) == 0)
  {
    v21 = v66[23].n128_i64[1];
    sub_1C0C2E254(v55);
  }
  sub_1C077B5B4();
  if (!__OFADD__(v46, 1))
  {
    v61 = qword_1ED78D620;
    v60 = *(_QWORD *)algn_1ED78D628;
    v62 = qword_1ED78D630;
    v2 = (uint64_t *)unk_1ED78D638;
    v63 = qword_1ED78D640;
    sub_1C0775C10();
    v66[17].n128_u64[0] = v61;
    v66[17].n128_u64[1] = v60;
    v66[18].n128_u64[0] = v62;
    v66[18].n128_u64[1] = (unint64_t)v2;
    v66[19].n128_u64[0] = v63;
    v66[19].n128_u64[1] = v65 + 2;
    v66[20].n128_u64[0] = (unint64_t)v2;
    v66[20].n128_u64[1] = v63;
    sub_1C0BCD07C((uint64_t)v2);
    sub_1C077C0B8();
    sub_1C0778624();
    sub_1C0795C58(v64);
    goto LABEL_53;
  }
LABEL_57:
  __break(1u);
  swift_once();
  sub_1C077965C(v69, (uint64_t)qword_1ED78D818);
  v57 = sub_1C0784E0C();
  if (sub_1C07B6518(v21))
  {
    v58 = (uint8_t *)sub_1C0775854();
    *(_WORD *)v58 = 0;
    sub_1C077F048(&dword_1C0771000, v21, v57, "Pipeline: Error while writing linked pairs to json.", v58);
    sub_1C0776778();
  }
  sub_1C077AF1C();

LABEL_54:
  sub_1C07A86C4(v59, (uint64_t (*)(_QWORD))type metadata accessor for MatchExtractorService);
  sub_1C07796F8();
  sub_1C07758BC();
  sub_1C0779D18();
  v52 = sub_1C0782E84();
  return v53(v52);
}

uint64_t sub_1C0CC8EE8()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  swift_release();
  sub_1C077E798();
  sub_1C07796F8();
  sub_1C07758BC();
  v0 = sub_1C07BABF4();
  return sub_1C07A601C(v0, v1);
}

uint64_t sub_1C0CC8F28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  v1 = *(_QWORD *)(v0 + 376);
  swift_release();
  sub_1C07785A8();
  sub_1C07B1F90(v1, (uint64_t (*)(_QWORD))type metadata accessor for MatchExtractorService);
  sub_1C077E798();
  sub_1C07796F8();
  sub_1C07758BC();
  v2 = sub_1C07BABF4();
  return sub_1C07A601C(v2, v3);
}

uint64_t sub_1C0CC8F84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  sub_1C077674C();
  v3[6] = sub_1C0775870();
  v3[7] = sub_1C0775870();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0CC8FD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,_QWORD *a22,uint64_t a23,uint64_t a24)
{
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  os_log_type_t v30;
  _BOOL8 v31;
  uint64_t v32;
  uint64_t v33;
  _DWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t (*v44)(void);

  sub_1C07796A0();
  a23 = v25;
  a24 = v26;
  a22 = v24;
  sub_1C077583C(v26, (unint64_t *)&qword_1ED762BF0);
  if ((static NSUserDefaults.isGraphStoreManuallyOverridden.getter() & 1) != 0)
  {
    if (qword_1ED761458 != -1)
      swift_once();
    v27 = sub_1C077585C();
    v28 = (void *)sub_1C079E000(v27, (uint64_t)qword_1ED78D818);
    sub_1C07AB3E0((uint64_t)v28, v29, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    sub_1C106F538();
    v30 = sub_1C077C13C();
    v31 = sub_1C07758D8(v30);
    v32 = v24[7];
    if (v31)
    {
      v33 = v24[6];
      v34 = (_DWORD *)sub_1C0775854();
      a13 = sub_1C0775854();
      *v34 = 136315138;
      sub_1C0CCB0B4();
      sub_1C07AA740();
      sub_1C0789F1C(v33);
      v24[2] = sub_1C0781B20(12, v35, &a13);
      sub_1C077B958();
      sub_1C077E584();
      sub_1C0789F1C(v32);
      sub_1C0778610();
      sub_1C0776778();
    }
    sub_1C07A86C4(v31, (uint64_t (*)(_QWORD))type metadata accessor for Source);

    swift_task_dealloc();
    sub_1C07767BC();
    v44 = (uint64_t (*)(void))sub_1C0779830();
    return sub_1C07785F4(v44);
  }
  else
  {
    v39 = v24[4];
    v38 = v24[5];
    v40 = v24[3];
    v41 = (_QWORD *)swift_task_alloc();
    v24[8] = v41;
    v41[2] = v38;
    v41[3] = v40;
    v41[4] = v39;
    v42 = (_QWORD *)swift_task_alloc();
    v24[9] = v42;
    *v42 = v24;
    v42[1] = sub_1C0CC91F4;
    sub_1C077862C();
    sub_1C077C524();
    return sub_1C1070D14();
  }
}

uint64_t sub_1C0CC91F4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_1C077E88C();
  sub_1C0780AE0(v2);
  *(_QWORD *)(v0 + 80) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_task_dealloc();
  sub_1C077862C();
  return sub_1C0789D28();
}

uint64_t sub_1C0CC9248()
{
  uint64_t (*v0)(void);

  swift_task_dealloc();
  sub_1C07767BC();
  v0 = (uint64_t (*)(void))sub_1C0779830();
  return sub_1C077CF28(v0);
}

uint64_t sub_1C0CC9274()
{
  uint64_t v0;

  swift_task_dealloc();
  sub_1C07767BC();
  sub_1C07796F8();
  return sub_1C0795770(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0CC92AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD);
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v20 = a3;
  v7 = sub_1C07ACF80(&qword_1ED75E820);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  v10 = type metadata accessor for Source();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  v19 = *(_QWORD *)(a2 + 16);
  sub_1C07E6C80(a4, (uint64_t)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  v14 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v15 = (v12 + *(unsigned __int8 *)(v8 + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v16 = swift_allocObject();
  v17 = v20;
  *(_QWORD *)(v16 + 16) = a2;
  *(_QWORD *)(v16 + 24) = v17;
  sub_1C07E563C((uint64_t)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v14, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v16 + v15, (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  swift_retain();
  sub_1C106CA84();
  return swift_release();
}

uint64_t sub_1C0CC9428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[7] = a3;
  v4[8] = a4;
  v4[5] = a1;
  v4[6] = a2;
  v5 = *(_QWORD *)(type metadata accessor for Source() - 8);
  v4[9] = v5;
  v4[10] = *(_QWORD *)(v5 + 64);
  v4[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C0CC948C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *(_QWORD *)(v0 + 80);
  v1 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 40);
  *(_BYTE *)(v0 + 120) = 2;
  sub_1C07A1ED8(v4, v1);
  v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v7 = (v2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = swift_allocObject();
  *(_QWORD *)(v0 + 96) = v8;
  sub_1C0792FD0(v1, v8 + v6);
  *(_QWORD *)(v8 + v7) = v5;
  sub_1C077E884();
  v9 = (_QWORD *)sub_1C0775870();
  *(_QWORD *)(v0 + 104) = v9;
  *v9 = v0;
  v9[1] = sub_1C0CC9570;
  v10 = sub_1C07864B8(*(_QWORD *)(v0 + 48));
  return sub_1C0CC01C0(v10, (_BYTE *)(v0 + 120), v11, v8);
}

uint64_t sub_1C0CC9570()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_1C077E88C();
  sub_1C0780AE0(v2);
  *(_QWORD *)(v0 + 112) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_release();
  sub_1C077862C();
  return sub_1C0789D28();
}

uint64_t sub_1C0CC95C4()
{
  uint64_t v0;

  sub_1C07ACF80(&qword_1ED75E820);
  sub_1C1070060();
  swift_task_dealloc();
  return sub_1C077CF28(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0CC9604()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  os_log_type_t v7;
  BOOL v8;
  void *v9;
  _DWORD *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1C077B704();
  v19 = v1;
  v20 = v2;
  v18 = v0;
  swift_release();
  if (qword_1ED761458 != -1)
    swift_once();
  v3 = *(void **)(v0 + 112);
  v4 = sub_1C077585C();
  sub_1C079E000(v4, (uint64_t)qword_1ED78D818);
  v5 = v3;
  v6 = v3;
  sub_1C077B740();
  v7 = sub_1C0784E0C();
  v8 = sub_1C07758D8(v7);
  v9 = *(void **)(v0 + 112);
  if (v8)
  {
    v10 = (_DWORD *)sub_1C0775854();
    v17 = sub_1C0775854();
    *v10 = 136315138;
    *(_QWORD *)(v0 + 24) = v9;
    v11 = v9;
    sub_1C07ACF80(&qword_1ED7614F0);
    v12 = sub_1C106FB5C();
    *(_QWORD *)(v0 + 32) = sub_1C0788DAC(v12, v13, &v17);
    sub_1C077B958();
    sub_1C077589C();
    sub_1C0780A2C();
    sub_1C0780A2C();
    sub_1C079C3D8(&dword_1C0771000, v14, v15, "Pipeline: error while running delta update: %s");
    sub_1C0778610();
    sub_1C0776778();
  }
  sub_1C0780A2C();
  sub_1C0780A2C();

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 112);
  sub_1C07ACF80(&qword_1ED75E820);
  sub_1C1070054();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C0CC97B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  _QWORD *v6;

  v3[56] = a2;
  v3[57] = a3;
  v3[55] = a1;
  type metadata accessor for Configuration();
  v3[58] = swift_task_alloc();
  type metadata accessor for Source();
  v3[59] = swift_task_alloc();
  v3[60] = swift_task_alloc();
  v3[61] = swift_task_alloc();
  v5 = a3 + OBJC_IVAR____TtC24IntelligencePlatformCore8Pipeline_stores;
  v6 = (_QWORD *)swift_task_alloc();
  v3[62] = v6;
  *v6 = v3;
  v6[1] = sub_1C0CC9888;
  return sub_1C0905E20((uint64_t)(v3 + 49), v5);
}

uint64_t sub_1C0CC9888()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C077B0C8();
  sub_1C07B4220();
  *(_QWORD *)(v1 + 504) = v0;
  swift_task_dealloc();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0CC98D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  os_log_type_t v11;
  _BOOL8 v12;
  uint64_t v13;
  uint64_t v14;
  _DWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v34;
  _QWORD *v35;
  uint64_t v36[2];

  v4 = (__int128 *)(v0 + 392);
  if (!*(_QWORD *)(v0 + 416))
  {
    sub_1C0784B6C((uint64_t)v4, &qword_1EF633D50);
    if (qword_1ED761458 != -1)
      swift_once();
    v8 = sub_1C077585C();
    v9 = (void *)sub_1C079E000(v8, (uint64_t)qword_1ED78D818);
    sub_1C07AB3E0((uint64_t)v9, v10, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    sub_1C106F538();
    v11 = sub_1C0784E0C();
    v12 = sub_1C07758D8(v11);
    v13 = *(_QWORD *)(v0 + 488);
    if (v12)
    {
      v14 = *(_QWORD *)(v0 + 472);
      v15 = (_DWORD *)sub_1C0775854();
      v36[0] = sub_1C0775854();
      *v15 = 136315138;
      sub_1C0CCB0B4();
      sub_1C07AA740();
      sub_1C0789F1C(v14);
      *(_QWORD *)(v0 + 432) = sub_1C0781B20(12, v16, v36);
      sub_1C077B958();
      sub_1C077E584();
      sub_1C0789F1C(v13);
      sub_1C079C3D8(&dword_1C0771000, v17, v18, "Delta Pipeline not setup for %s");
      sub_1C0778610();
      sub_1C0776778();
    }
    sub_1C07A86C4(v12, (uint64_t (*)(_QWORD))type metadata accessor for Source);

    sub_1C1070120();
    sub_1C07788D4();
    sub_1C07796F8();
    sub_1C07758BC();
    sub_1C0779D18();
    v19 = sub_1C0782E84();
    return v20(v19);
  }
  sub_1C077DD60(v4, v0 + 352);
  if (qword_1ED75ABA8 != -1)
    swift_once();
  v5 = *(_QWORD *)(v0 + 504);
  v6 = qword_1ED78D118;
  v7 = unk_1ED78D120;
  sub_1C07AEA10();
  if (v5)
  {
    sub_1C0CCB068(v0 + 352);
    sub_1C07767BC();
    sub_1C07796F8();
    sub_1C0779D18();
    v19 = sub_1C079C6C0();
    return v20(v19);
  }
  v35 = (_QWORD *)(v0 + 352);
  *(_QWORD *)(v0 + 224) = v6;
  *(_QWORD *)(v0 + 232) = v7;
  *(_QWORD *)(v0 + 240) = v3;
  *(_QWORD *)(v0 + 248) = v2;
  *(_QWORD *)(v0 + 256) = v1;
  *(_QWORD *)(v0 + 264) = 2;
  *(_QWORD *)(v0 + 272) = v2;
  *(_QWORD *)(v0 + 280) = v1;
  sub_1C079327C();
  sub_1C077C0B8();
  sub_1C0CCB134((__n128 *)(v0 + 224));
  sub_1C0775894();
  sub_1C077589C();
  sub_1C077AB58(v2);
  sub_1C077980C();
  LOBYTE(v36[0]) = 2;
  sub_1C0CC2C94((unsigned __int8 *)v36);
  v22 = *(_QWORD *)(v0 + 376);
  v21 = *(_QWORD *)(v0 + 384);
  sub_1C07A9480(v35, v22);
  (*(void (**)(uint64_t))(*(_QWORD *)(v21 + 8) + 32))(v22);
  if (qword_1ED75AC18 != -1)
    swift_once();
  v23 = qword_1ED78D1F0;
  v34 = xmmword_1ED78D1E0;
  v24 = qword_1ED78D1F8;
  v25 = qword_1ED78D200;
  sub_1C07A9480(v35, *(_QWORD *)(v0 + 376));
  v26 = sub_1C1070C0C();
  v28 = v27;
  sub_1C0CBC1D4();
  *(_OWORD *)(v0 + 88) = v34;
  *(_QWORD *)(v0 + 104) = v23;
  *(_QWORD *)(v0 + 112) = v24;
  *(_QWORD *)(v0 + 120) = v25;
  *(_QWORD *)(v0 + 128) = v26;
  *(_QWORD *)(v0 + 136) = v28;
  *(_QWORD *)(v0 + 144) = v24;
  *(_QWORD *)(v0 + 152) = v25;
  sub_1C07BA98C();
  sub_1C07BA98C();
  sub_1C077C0B8();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C077E6D0();
  sub_1C0CCB204((__n128 *)(v0 + 88));
  sub_1C0775894();
  sub_1C07785A0();
  sub_1C07AB0A0();
  sub_1C077589C();
  sub_1C07AB0A0();
  sub_1C07785A8();
  sub_1C077589C();
  sub_1C07A9480(v35, *(_QWORD *)(v0 + 376));
  v29 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 512) = v29;
  *v29 = v0;
  v29[1] = sub_1C0CC9CE4;
  v30 = sub_1C079AEA0(*(_QWORD *)(v0 + 440));
  return sub_1C0CA65D0(v30, v31, v32);
}

uint64_t sub_1C0CC9CE4()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C077B0C8();
  sub_1C07B4220();
  *(_QWORD *)(v1 + 520) = v0;
  swift_task_dealloc();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0CC9D30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  __n128 *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(void);
  _QWORD *v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  unint64_t v46;

  sub_1C0789E7C();
  if (qword_1ED75ABB8 != -1)
    swift_once();
  v15 = v14[32].n128_u64[1];
  v17 = qword_1ED78D620;
  v16 = *(_QWORD *)algn_1ED78D628;
  v19 = qword_1ED78D630;
  v18 = unk_1ED78D638;
  v20 = qword_1ED78D640;
  sub_1C078C330();
  if (v15)
  {
    sub_1C0CCB068((uint64_t)&v14[22]);
    sub_1C07767BC();
    sub_1C07796F8();
    sub_1C0779D18();
    v33 = sub_1C079C6C0();
    return sub_1C078C7A8(v33, v34);
  }
  else
  {
    v14[10].n128_u64[0] = v17;
    v14[10].n128_u64[1] = v16;
    v14[11].n128_u64[0] = v19;
    v14[11].n128_u64[1] = v18;
    v14[12].n128_u64[0] = v20;
    v14[12].n128_u64[1] = 1;
    v14[13].n128_u64[0] = v18;
    v14[13].n128_u64[1] = v20;
    sub_1C0BCD07C(v18);
    sub_1C077C0B8();
    sub_1C0778624();
    sub_1C0795C58(v14 + 10);
    v21 = v14[30].n128_i64[0];
    v23 = v14[28].n128_u64[1];
    v22 = v14[29].n128_i64[0];
    v45 = v14[28].n128_i64[0];
    sub_1C077589C();
    sub_1C0775834();
    sub_1C077AB58(v18);
    sub_1C07785A8();
    sub_1C07E6C80(v23 + OBJC_IVAR____TtC24IntelligencePlatformCore8Pipeline_config, v22, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    sub_1C07E6C80(v45, v21, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    type metadata accessor for RegisteredViewsGenerationDeltaPhase(0);
    sub_1C077B5BC();
    v24 = sub_1C0CA7A84(v22, v21);
    v14[33].n128_u64[0] = v24;
    v25 = *((_QWORD *)&xmmword_1ED78D1E0 + 1);
    v46 = xmmword_1ED78D1E0;
    v27 = qword_1ED78D1F0;
    v26 = qword_1ED78D1F8;
    v28 = qword_1ED78D200;
    sub_1C0A912C8();
    v30 = v29;
    v32 = v31;
    sub_1C0CBC1D4();
    v14[1].n128_u64[0] = v46;
    v14[1].n128_u64[1] = v25;
    v14[2].n128_u64[0] = v27;
    v14[2].n128_u64[1] = v26;
    v14[3].n128_u64[0] = v28;
    v14[3].n128_u64[1] = v30;
    v14[4].n128_u64[0] = v32;
    v14[4].n128_u64[1] = v26;
    v14[5].n128_u64[0] = v28;
    sub_1C077E474();
    sub_1C077E474();
    sub_1C077AEBC();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C077E6D0();
    sub_1C0CCB204(v14 + 1);
    sub_1C077E584();
    sub_1C07785A0();
    sub_1C0789C0C();
    sub_1C077B5B4();
    sub_1C0789C0C();
    sub_1C07785A8();
    sub_1C077B5B4();
    v35 = (_QWORD *)sub_1C077FDD8();
    v14[33].n128_u64[1] = (unint64_t)v35;
    *v35 = v14;
    v35[1] = sub_1C0CC9F84;
    sub_1C07864B8(v14[27].n128_i64[1]);
    sub_1C07907C8();
    return v37(v36, v37, v38, v39, v40, v41, v42, v43, v46, v24, a11, a12, a13, a14);
  }
}

uint64_t sub_1C0CC9F84()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C077B0C8();
  sub_1C07B4220();
  *(_QWORD *)(v1 + 544) = v0;
  swift_task_dealloc();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0CC9FD0()
{
  __n128 *v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;

  sub_1C077B704();
  v4 = v0[34].n128_u64[0];
  v6 = qword_1ED78D620;
  v5 = *(_QWORD *)algn_1ED78D628;
  v7 = sub_1C07AEA10();
  if (v4)
  {
    sub_1C07785A8();
    sub_1C0CCB068((uint64_t)&v0[22]);
    sub_1C07767BC();
    sub_1C07796F8();
    sub_1C0779D18();
    v9 = sub_1C079C6C0();
  }
  else
  {
    v8 = v7;
    v0[18].n128_u64[0] = v6;
    v0[18].n128_u64[1] = v5;
    v0[19].n128_u64[0] = v3;
    v0[19].n128_u64[1] = v2;
    v0[20].n128_u64[0] = v1;
    v0[20].n128_u64[1] = 2;
    v0[21].n128_u64[0] = v2;
    v0[21].n128_u64[1] = v1;
    sub_1C079327C();
    sub_1C077C0B8();
    sub_1C0795C58(v0 + 18);
    sub_1C0775894();
    sub_1C077589C();
    sub_1C077AB58(v2);
    sub_1C07785A8();
    if (qword_1ED761458 != -1)
      swift_once();
    v12 = sub_1C077585C();
    sub_1C077965C(v12, (uint64_t)qword_1ED78D818);
    v13 = sub_1C0784E0C();
    if (sub_1C07758D8(v13))
    {
      v14 = (uint8_t *)sub_1C0775854();
      *(_WORD *)v14 = 0;
      sub_1C077F048(&dword_1C0771000, v8, OS_LOG_TYPE_DEFAULT, "Pipeline: delta update completed.", v14);
      sub_1C0776778();
    }

    sub_1C1070120();
    swift_release();
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)&v0[22]);
    sub_1C07788D4();
    sub_1C07796F8();
    sub_1C07758BC();
    sub_1C0779D18();
    v9 = sub_1C0782E84();
  }
  return sub_1C079B970(v9, v10);
}

uint64_t sub_1C0CCA150()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  sub_1C07788D4();
  sub_1C07796F8();
  sub_1C07758BC();
  sub_1C0779D18();
  v0 = sub_1C07BABF4();
  return sub_1C07B861C(v0, v1);
}

uint64_t sub_1C0CCA188()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 352);
  sub_1C07788D4();
  sub_1C07796F8();
  sub_1C07758BC();
  sub_1C0779D18();
  v1 = sub_1C07BABF4();
  return sub_1C07B861C(v1, v2);
}

uint64_t sub_1C0CCA1C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  swift_release();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 352);
  sub_1C07788D4();
  sub_1C07796F8();
  sub_1C07758BC();
  sub_1C0779D18();
  v1 = sub_1C07BABF4();
  return sub_1C07B861C(v1, v2);
}

uint64_t sub_1C0CCA214()
{
  return type metadata accessor for Pipeline();
}

uint64_t type metadata accessor for Pipeline()
{
  uint64_t result;

  result = qword_1ED755ED8;
  if (!qword_1ED755ED8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C0CCA254()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for Configuration();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for PhaseStores();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for Pipeline()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for Pipeline.GuardedData()
{
  return objc_opt_self();
}

uint64_t sub_1C0CCA328(uint64_t a1, char a2)
{
  uint64_t *v2;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *v2;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v5;
  v7 = 0;
  if ((result & 1) != 0 && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    if (a1 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x18) >> 1)
      return result;
    v7 = 1;
  }
  if (v5 >> 62)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v8 = sub_1C10709B4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 <= a1)
    v9 = a1;
  else
    v9 = v8;
  result = MEMORY[0x1C3BA70E8](v7, v9, a2 & 1, v5);
  *v2 = result;
  return result;
}

void sub_1C0CCA3E4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v7;

  v7 = (id)sub_1C106F934();
  swift_bridgeObjectRelease();
  objc_msgSend(a4, sel_postNotificationName_object_userInfo_, a1, a2, v7);

}

void sub_1C0CCA46C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_1C078D204(*a1, a2, a3, (uint64_t)type metadata accessor for KeyValueDatabase, (uint64_t)sub_1C0BB8958, (uint64_t)sub_1C089FA78, (uint64_t)sub_1C07F2C3C);
}

void sub_1C0CCA4A4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_1C078D204(*a1, a2, a3, (uint64_t)type metadata accessor for GraphDatabase, (uint64_t)sub_1C0A8D920, (uint64_t)sub_1C089FA8C, (uint64_t)sub_1C07F2C50);
}

void sub_1C0CCA4DC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_1C078D204(*a1, a2, a3, (uint64_t)type metadata accessor for BehaviorDatabase, (uint64_t)sub_1C0839FB4, (uint64_t)sub_1C089FCAC, (uint64_t)sub_1C07F2EC0);
}

void sub_1C0CCA514(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_1C078D204(*a1, a2, a3, (uint64_t)type metadata accessor for GlobalKnowledgeDatabase, (uint64_t)sub_1C0A6C4E8, (uint64_t)sub_1C089FD0C, (uint64_t)sub_1C07F2ED4);
}

void sub_1C0CCA54C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_1C078D10C(*a1, a2, a3, (uint64_t)type metadata accessor for OntologyDatabase, (uint64_t)sub_1C0C4F4E8, (uint64_t)sub_1C089FD20, (uint64_t)sub_1C07F2EE8);
}

void sub_1C0CCA584(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_1C078D10C(*a1, a2, a3, (uint64_t)type metadata accessor for ViewGeneration.ViewClients, (uint64_t)sub_1C0E7746C, (uint64_t)sub_1C089FD70, (uint64_t)sub_1C07F2F88);
}

uint64_t sub_1C0CCA5BC(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  return sub_1C0CBE080(*a1, a2, a3);
}

void sub_1C0CCA5D4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_1C078D204(*a1, a2, a3, (uint64_t)type metadata accessor for EventLogDatabase, (uint64_t)EventLogDatabase.init(config:), (uint64_t)sub_1C08A002C, (uint64_t)sub_1C07F320C);
}

void sub_1C0CCA60C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_1C078D204(*a1, a2, a3, (uint64_t)type metadata accessor for FeedbackLogDatabase, (uint64_t)FeedbackLogDatabase.init(config:), (uint64_t)sub_1C08A0040, (uint64_t)sub_1C07F3220);
}

void sub_1C0CCA644(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_1C078D204(*a1, a2, a3, (uint64_t)type metadata accessor for StateDatabase, (uint64_t)sub_1C0D6090C, (uint64_t)sub_1C08A0188, (uint64_t)sub_1C07F34B4);
}

void sub_1C0CCA67C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_1C078D204(*a1, a2, a3, (uint64_t)type metadata accessor for InterprocessLockDescriptors, (uint64_t)sub_1C0BAF8E4, (uint64_t)sub_1C08A0228, (uint64_t)sub_1C07F3504);
}

void sub_1C0CCA6B4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_1C078D204(*a1, a2, a3, (uint64_t)type metadata accessor for ViewUpdate.FrontEventQueue, (uint64_t)sub_1C0ECEAA8, (uint64_t)sub_1C08A02CC, (uint64_t)sub_1C07F35C0);
}

uint64_t sub_1C0CCA6EC(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  return sub_1C0CBE278(*a1, a2, a3);
}

uint64_t sub_1C0CCA704(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  return sub_1C0CBE468(*a1, a2, a3);
}

uint64_t sub_1C0CCA71C(uint64_t *a1)
{
  uint64_t v1;

  return sub_1C0CCA704(a1, *(_QWORD *)(v1 + 16), *(uint64_t **)(v1 + 24));
}

void sub_1C0CCA734(uint64_t *a1)
{
  uint64_t v1;

  sub_1C0CCA60C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1C0CCA74C(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  return sub_1C0CBE5C4(*a1, a2, a3);
}

uint64_t sub_1C0CCA764(uint64_t *a1)
{
  uint64_t v1;

  return sub_1C0CCA74C(a1, *(_QWORD *)(v1 + 16), *(uint64_t **)(v1 + 24));
}

void sub_1C0CCA77C(uint64_t *a1)
{
  uint64_t v1;

  sub_1C0CCA6B4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1C0CCA794(uint64_t *a1)
{
  uint64_t v1;

  sub_1C0CCA644(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1C0CCA7AC(uint64_t *a1)
{
  uint64_t v1;

  sub_1C0CCA54C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1C0CCA7C4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1C077C944(v1, (uint64_t)sub_1C0CCAFBC);
  return sub_1C0CC6CBC(v2, v3);
}

void sub_1C0CCA808(uint64_t *a1)
{
  uint64_t v1;

  sub_1C0CC10E4(a1, *(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

unint64_t sub_1C0CCA82C()
{
  unint64_t result;

  result = qword_1ED75D368;
  if (!qword_1ED75D368)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PipelineError, &type metadata for PipelineError);
    atomic_store(result, (unint64_t *)&qword_1ED75D368);
  }
  return result;
}

uint64_t sub_1C0CCA868()
{
  uint64_t v0;

  return sub_1C0CC1CD4(*(_QWORD *)(v0 + 16), *(unsigned __int8 *)(v0 + 24));
}

uint64_t sub_1C0CCA874()
{
  uint64_t v0;

  sub_1C0CCB12C();
  sub_1C07B6AF8();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  v0 = sub_1C078BA5C();
  sub_1C0780A94(v0);
  sub_1C0CCB0F4();
  return sub_1C0787CC4();
}

uint64_t sub_1C0CCA8C4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  sub_1C0CCB12C();
  sub_1C0CCB1A0();
  v3 = v0[3];
  v4 = v0[4];
  v5 = v0[5];
  v6 = (int *)v0[6];
  v7 = v0[7];
  v8 = (uint64_t)v0 + ((v2 + 64) & ~v2);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v9;
  v10 = sub_1C07B2654(v9);
  return sub_1C0CC2814(v10, v11, v3, v4, v5, v6, v7, v8);
}

void sub_1C0CCA95C(uint64_t *a1)
{
  uint64_t v1;

  sub_1C0CCA67C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1C0CCA974(uint64_t *a1)
{
  uint64_t v1;

  sub_1C0CC34D4(a1, *(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1C0CCA994()
{
  uint64_t v0;

  return sub_1C0CC4374(*(_BYTE *)(v0 + 16), *(_QWORD *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_1C0CCA9A8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 40))
    swift_release();
  if (*(_QWORD *)(v0 + 64))
    swift_release();
  return swift_deallocObject();
}

void sub_1C0CCA9F4(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  if (!*a1)
  {
    v3 = sub_1C07D4BEC(a2);
    atomic_store(MEMORY[0x1C3BA8174](&unk_1C10B9F80, v3), a1);
  }
  sub_1C0778534();
}

uint64_t sub_1C0CCAA30()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 40))
    swift_release();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 72))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0CCAA84()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C0CCB12C();
  sub_1C07B6AF8();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 16);
  v1 = sub_1C078BA5C();
  sub_1C0780A94(v1);
  sub_1C0CCB0F4();
  return sub_1C0787CC4();
}

uint64_t sub_1C0CCAAC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C0CCB12C();
  sub_1C0CCB1A0();
  v3 = v0 + ((v2 + 56) & ~v2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  v5 = sub_1C07B2654(v4);
  return sub_1C0CC510C(v5, v6, v3);
}

uint64_t sub_1C0CCAB30()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1C077C944(v1, (uint64_t)sub_1C0CCAFBC);
  return sub_1C0CC51BC(v2, v3);
}

void sub_1C0CCAB74(uint64_t *a1)
{
  uint64_t v1;

  sub_1C0CCA46C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1C0CCAB8C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1C077C944(v1, (uint64_t)sub_1C0CCAFBC);
  return sub_1C0CC76C4(v2, v3);
}

uint64_t sub_1C0CCABD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1EF6470D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C0CCAC18(uint64_t *a1)
{
  uint64_t v1;

  sub_1C0CCA4DC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1C0CCAC30(uint64_t *a1)
{
  uint64_t v1;

  sub_1C0CCA4A4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1C0CCAC48(uint64_t *a1)
{
  uint64_t v1;

  sub_1C0CCA514(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1C0CCAC60(uint64_t *a1)
{
  uint64_t v1;

  sub_1C0CCA5D4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1C0CCAC78(uint64_t *a1)
{
  uint64_t v1;

  sub_1C0CCA584(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1C0CCAC90(uint64_t *a1)
{
  uint64_t v1;

  return sub_1C0CCA6EC(a1, *(_QWORD *)(v1 + 16), *(uint64_t **)(v1 + 24));
}

uint64_t sub_1C0CCACA8(uint64_t a1)
{
  uint64_t *v1;

  return sub_1C0CC92AC(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1C0CCACB4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v1 = sub_1C077674C();
  v2 = ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80))
     + *(_QWORD *)(*(_QWORD *)(v1 - 8) + 64);
  v3 = sub_1C07ACF80(&qword_1ED75E820);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (v2 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  swift_release();
  swift_bridgeObjectRelease();
  v6 = sub_1C07BC308();
  sub_1C077B5C8(v6);
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v5, v3);
  return swift_deallocObject();
}

uint64_t sub_1C0CCAD6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(sub_1C077674C() - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  sub_1C07ACF80(&qword_1ED75E820);
  sub_1C0CCB1A0();
  v6 = v0 + v3;
  v7 = v0 + ((v4 + v5) & ~v5);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v8;
  *v8 = v1;
  v8[1] = sub_1C09D35E4;
  v9 = sub_1C077B200();
  return sub_1C0CC9428(v9, v10, v6, v7);
}

uint64_t sub_1C0CCAE04()
{
  uint64_t v0;

  sub_1C077674C();
  sub_1C0CCB104();
  swift_bridgeObjectRelease();
  v0 = sub_1C07BC308();
  sub_1C077B5C8(v0);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0CCAE74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_1C077674C();
  v3 = *(_QWORD *)(v0
                 + ((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64)
                   + ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80))
                   + 7) & 0xFFFFFFFFFFFFF8));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1C0CCAEF8;
  v5 = sub_1C077B200();
  return sub_1C0CC97B0(v5, v6, v3);
}

uint64_t sub_1C0CCAEF8(uint64_t a1)
{
  uint64_t v1;

  sub_1C07862EC();
  return (*(uint64_t (**)(uint64_t))(v1 + 8))(a1);
}

uint64_t sub_1C0CCAF3C(uint64_t *a1)
{
  uint64_t v1;

  return sub_1C0CCA5BC(a1, *(_QWORD *)(v1 + 16), *(uint64_t **)(v1 + 24));
}

uint64_t sub_1C0CCAF54()
{
  uint64_t v0;

  sub_1C0779D10();
  sub_1C0CCB104();
  v0 = sub_1C106AB28();
  sub_1C0780A94(v0);
  sub_1C0CCB0F4();
  return sub_1C0787CC4();
}

uint64_t sub_1C0CCAF90()
{
  sub_1C0779D10();
  sub_1C0CCB1A0();
  return sub_1C0CBFDD0();
}

uint64_t sub_1C0CCAFC0@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t sub_1C0CCAFEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _QWORD *a10)
{
  *a10 = a1;
  return sub_1C10705AC();
}

uint64_t sub_1C0CCB004()
{
  return swift_beginAccess();
}

uint64_t sub_1C0CCB01C(uint64_t a1, _BYTE *a2)
{
  return sub_1C0CDC934(a1, a2);
}

uint64_t sub_1C0CCB028@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t sub_1C0CCB03C()
{
  uint64_t v0;

  return sub_1C077AB58(v0);
}

uint64_t sub_1C0CCB048()
{
  return swift_arrayInitWithCopy();
}

id sub_1C0CCB054()
{
  void *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 624) = 0xEC00000065707954;
  return v0;
}

uint64_t sub_1C0CCB068(uint64_t a1)
{
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(a1);
  return swift_task_dealloc();
}

uint64_t sub_1C0CCB080()
{
  return swift_task_dealloc();
}

uint64_t sub_1C0CCB0A0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = a1;
  return swift_retain_n();
}

void sub_1C0CCB0B4()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  sub_1C07E6C80(v0, v2, v1);
}

uint64_t sub_1C0CCB0C4(uint64_t a1, uint64_t a2, ...)
{
  unint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  return sub_1C0788DAC(v3, v2, (uint64_t *)va);
}

uint64_t sub_1C0CCB0D4(__n128 *a1, __n128 a2)
{
  __int128 *v2;

  a1[1] = a2;
  return sub_1C077DD60(v2, (uint64_t)&a1[2]);
}

uint64_t sub_1C0CCB0E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 120))(a1, v1);
}

uint64_t sub_1C0CCB0F4()
{
  uint64_t v0;

  return v0;
}

_QWORD *sub_1C0CCB11C@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *result = v2;
  result[1] = a2;
  return result;
}

uint64_t sub_1C0CCB12C()
{
  return type metadata accessor for Pipeline.StatusStore();
}

void sub_1C0CCB134(__n128 *a1)
{
  sub_1C0D436C0(a1);
}

uint64_t sub_1C0CCB144()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(v1 - 72))(v0);
}

uint64_t sub_1C0CCB154()
{
  return swift_release();
}

uint64_t sub_1C0CCB160()
{
  return swift_retain_n();
}

uint64_t sub_1C0CCB180()
{
  return sub_1C1070138();
}

void sub_1C0CCB188(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_1C07E6C80(v4, v3, a3);
}

void sub_1C0CCB194()
{
  sub_1C07ED3BC();
}

uint64_t sub_1C0CCB1AC()
{
  return sub_1C10706FC();
}

uint64_t sub_1C0CCB1B8(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 112) = result;
  return result;
}

uint64_t sub_1C0CCB1CC()
{
  return type metadata accessor for ContactsPersonPhase();
}

void sub_1C0CCB1D8()
{
  sub_1C0E08DB4();
}

uint64_t sub_1C0CCB1E4()
{
  return sub_1C077AB58(0);
}

uint64_t sub_1C0CCB204(__n128 *a1)
{
  return sub_1C0D4359C(a1);
}

uint64_t sub_1C0CCB210()
{
  return swift_release_n();
}

uint64_t sub_1C0CCB21C()
{
  return swift_release();
}

void sub_1C0CCB228(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_1C07E6C80(v4, v3, a3);
}

uint64_t sub_1C0CCB234@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1C1070D74();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = 1;
  return result;
}

uint64_t PipelineError.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *v0;
  if (!*((_BYTE *)v0 + 16))
  {
    sub_1C1070774();
    sub_1C106FC94();
    __asm { BR              X10 }
  }
  v2 = v0[1];
  if (*((_BYTE *)v0 + 16) == 1)
  {
    sub_1C1070774();
    swift_bridgeObjectRelease();
    sub_1C106FC94();
    return 0xD000000000000015;
  }
  else
  {
    if (v1 ^ 1 | v2)
      v3 = 0xD000000000000027;
    else
      v3 = 0xD000000000000034;
    if (v1 | v2)
      return v3;
    else
      return 0x206E776F6E6B6E55;
  }
}

unint64_t static PipelineError.errorDomain.getter()
{
  return 0xD000000000000026;
}

uint64_t PipelineError.errorCode.getter()
{
  uint64_t v0;

  if (!*(_BYTE *)(v0 + 16))
    return 2;
  if (*(_BYTE *)(v0 + 16) == 1)
    return 4;
  return qword_1C10B3360[*(_QWORD *)v0];
}

uint64_t PipelineError.errorUserInfo.getter()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1C07ACF80(&qword_1ED761310);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1079220;
  *(_QWORD *)(inited + 32) = sub_1C106FB14();
  *(_QWORD *)(inited + 40) = v1;
  v2 = PipelineError.description.getter();
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = v2;
  *(_QWORD *)(inited + 56) = v3;
  return sub_1C106F97C();
}

uint64_t sub_1C0CCB524()
{
  sub_1C0CCB6D4();
  return sub_1C1070D68();
}

uint64_t sub_1C0CCB54C()
{
  sub_1C0CCB6D4();
  return sub_1C1070D5C();
}

unint64_t sub_1C0CCB578()
{
  static PipelineError.errorDomain.getter();
  return 0xD000000000000026;
}

uint64_t sub_1C0CCB5A4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (a3 == 1)
    return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return result;
}

uint64_t destroy for PipelineError(uint64_t a1)
{
  return sub_1C0CCB5CC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_1C0CCB5CC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (a3 == 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s24IntelligencePlatformCore13PipelineErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1C0CCB5A4(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for PipelineError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1C0CCB5A4(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1C0CCB5CC(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for PipelineError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1C0CCB5CC(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for PipelineError()
{
  return &type metadata for PipelineError;
}

unint64_t sub_1C0CCB6D4()
{
  unint64_t result;

  result = qword_1EF647110;
  if (!qword_1EF647110)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PipelineError, &type metadata for PipelineError);
    atomic_store(result, &qword_1EF647110);
  }
  return result;
}

uint64_t sub_1C0CCB710()
{
  return sub_1C0CCB758((uint64_t (*)(_QWORD))type metadata accessor for Blocker, (uint64_t (*)(void))sub_1C08870A4);
}

uint64_t sub_1C0CCB734()
{
  return sub_1C0CCB758((uint64_t (*)(_QWORD))type metadata accessor for HomeMatcher, (uint64_t (*)(void))sub_1C0888804);
}

uint64_t sub_1C0CCB758(uint64_t (*a1)(_QWORD), uint64_t (*a2)(void))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD v15[2];
  uint64_t v16;

  v5 = a1(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v15 - v6;
  result = sub_1C1070120();
  if ((result & 1) != 0)
  {
    if (qword_1ED761458 != -1)
      swift_once();
    v9 = sub_1C106F544();
    sub_1C079E000(v9, (uint64_t)qword_1ED78D818);
    sub_1C07E05C8(v2, (uint64_t)v7, a1);
    v10 = sub_1C106F538();
    v11 = sub_1C10703A8();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      *(_DWORD *)v12 = 136315138;
      v13 = a2();
      v15[1] = sub_1C0788DAC(v13, v14, &v16);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      sub_1C07805B4();
      _os_log_impl(&dword_1C0771000, v10, v11, "%s going to defer", v12, 0xCu);
      swift_arrayDestroy();
      sub_1C0776778();
    }
    sub_1C07805B4();

    sub_1C107006C();
    sub_1C0794BAC(&qword_1ED759800, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF05E0], MEMORY[0x1E0DF05E8]);
    swift_allocError();
    sub_1C106F91C();
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1C0CCB978()
{
  return sub_1C0CCB758((uint64_t (*)(_QWORD))type metadata accessor for EventMatcher, (uint64_t (*)(void))sub_1C0888710);
}

uint64_t sub_1C0CCB99C()
{
  return sub_1C0CCB758((uint64_t (*)(_QWORD))type metadata accessor for GroupMatcher, (uint64_t (*)(void))sub_1C08886FC);
}

uint64_t sub_1C0CCB9C0()
{
  return sub_1C0CCB758((uint64_t (*)(_QWORD))type metadata accessor for TopicMatcher, (uint64_t (*)(void))sub_1C0888610);
}

uint64_t sub_1C0CCB9E4()
{
  return sub_1C0CCB758((uint64_t (*)(_QWORD))type metadata accessor for PairGenerator, (uint64_t (*)(void))sub_1C0888524);
}

uint64_t sub_1C0CCBA08()
{
  return sub_1C0CCB758((uint64_t (*)(_QWORD))type metadata accessor for PeopleMatcher, (uint64_t (*)(void))sub_1C0888438);
}

uint64_t sub_1C0CCBA2C()
{
  return sub_1C0CCB758((uint64_t (*)(_QWORD))type metadata accessor for DocumentMatcher, (uint64_t (*)(void))sub_1C0888348);
}

uint64_t sub_1C0CCBA50()
{
  return sub_1C0CCB758((uint64_t (*)(_QWORD))type metadata accessor for LocationMatcher, (uint64_t (*)(void))sub_1C0888250);
}

uint64_t sub_1C0CCBA74()
{
  return sub_1C0CCB758((uint64_t (*)(_QWORD))type metadata accessor for SoftwareMatcher, (uint64_t (*)(void))sub_1C0888134);
}

uint64_t sub_1C0CCBA98()
{
  return sub_1C0CCB758((uint64_t (*)(_QWORD))type metadata accessor for PassthroughMatcher, (uint64_t (*)(void))sub_1C0888034);
}

uint64_t sub_1C0CCBABC()
{
  return sub_1C0CCB758((uint64_t (*)(_QWORD))type metadata accessor for OrganizationMatcher, (uint64_t (*)(void))sub_1C0887F44);
}

uint64_t sub_1C0CCBAE0()
{
  return sub_1C0CCB758((uint64_t (*)(_QWORD))type metadata accessor for StandardTransformer, (uint64_t (*)(void))sub_1C0887DB0);
}

uint64_t sub_1C0CCBB04()
{
  return sub_1C0CCB758((uint64_t (*)(_QWORD))type metadata accessor for StandardEntityFusion, (uint64_t (*)(void))sub_1C0887CC4);
}

uint64_t sub_1C0CCBB28()
{
  return sub_1C0CCB758((uint64_t (*)(_QWORD))type metadata accessor for StandardEntityMapper, (uint64_t (*)(void))sub_1C0887BDC);
}

uint64_t sub_1C0CCBB4C()
{
  return sub_1C0CCB758((uint64_t (*)(_QWORD))type metadata accessor for EKEventSourceIngestor, (uint64_t (*)(void))sub_1C0887BC8);
}

uint64_t sub_1C0CCBB70()
{
  return sub_1C0CCB758((uint64_t (*)(_QWORD))type metadata accessor for INGroupSourceIngestor, (uint64_t (*)(void))sub_1C0887BB4);
}

uint64_t sub_1C0CCBB94()
{
  return sub_1C0CCB758((uint64_t (*)(_QWORD))type metadata accessor for SGEventSourceIngestor, (uint64_t (*)(void))sub_1C0887BA0);
}

uint64_t sub_1C0CCBBB8()
{
  return sub_1C0CCB758((uint64_t (*)(_QWORD))type metadata accessor for FAFamilySourceIngestor, (uint64_t (*)(void))sub_1C0887B8C);
}

uint64_t sub_1C0CCBBDC()
{
  return sub_1C0CCB758((uint64_t (*)(_QWORD))type metadata accessor for INPersonSourceIngestor, (uint64_t (*)(void))sub_1C0887B78);
}

uint64_t sub_1C0CCBC00()
{
  return sub_1C0CCB758((uint64_t (*)(_QWORD))type metadata accessor for IdentifierBasedMatcher, (uint64_t (*)(void))sub_1C0887B64);
}

uint64_t sub_1C0CCBC24()
{
  return sub_1C0CCB758((uint64_t (*)(_QWORD))type metadata accessor for PHPersonSourceIngestor, (uint64_t (*)(void))sub_1C0887B50);
}

uint64_t sub_1C0CCBC48()
{
  return sub_1C0CCB758(type metadata accessor for LifeEventSourceIngestor, (uint64_t (*)(void))sub_1C0887A64);
}

uint64_t sub_1C0CCBC6C()
{
  return sub_1C0CCB758((uint64_t (*)(_QWORD))type metadata accessor for SGContactSourceIngestor, (uint64_t (*)(void))sub_1C0887A50);
}

uint64_t sub_1C0CCBC90()
{
  return sub_1C0CCB758(type metadata accessor for CNContactFullSourceIngestor, (uint64_t (*)(void))sub_1C0887964);
}

uint64_t sub_1C0CCBCB4()
{
  return sub_1C0CCB758(type metadata accessor for CNContactDeltaSourceIngestor, (uint64_t (*)(void))sub_1C0887878);
}

uint64_t sub_1C0CCBCD8()
{
  return sub_1C0CCB758((uint64_t (*)(_QWORD))type metadata accessor for LSBundleRecordSourceIngestor, (uint64_t (*)(void))sub_1C0887864);
}

uint64_t sub_1C0CCBCFC()
{
  return sub_1C0CCB758(type metadata accessor for LifeEventDeltaSourceIngestor, (uint64_t (*)(void))sub_1C088777C);
}

uint64_t sub_1C0CCBD20()
{
  return sub_1C0CCB758((uint64_t (*)(_QWORD))type metadata accessor for RelationshipFullSourceIngestor, (uint64_t (*)(void))sub_1C0887688);
}

uint64_t sub_1C0CCBD44()
{
  return sub_1C0CCB758(type metadata accessor for BMAppleMusicEventSourceIngestor, (uint64_t (*)(void))sub_1C08875AC);
}

uint64_t sub_1C0CCBD68()
{
  return sub_1C0CCB758((uint64_t (*)(_QWORD))type metadata accessor for FavoriteSportsTeamSourceIngestor, (uint64_t (*)(void))sub_1C0887598);
}

uint64_t sub_1C0CCBD8C()
{
  return sub_1C0CCB758((uint64_t (*)(_QWORD))type metadata accessor for HKEmergencyContactSourceIngestor, (uint64_t (*)(void))sub_1C08874A8);
}

uint64_t sub_1C0CCBDB0()
{
  return sub_1C0CCB758((uint64_t (*)(_QWORD))type metadata accessor for PGRelationshipFullSourceIngestor, (uint64_t (*)(void))sub_1C0887494);
}

uint64_t sub_1C0CCBDD4()
{
  return sub_1C0CCB758((uint64_t (*)(_QWORD))type metadata accessor for FutureLifeEventDeltaSourceIngestor, (uint64_t (*)(void))sub_1C08873BC);
}

uint64_t sub_1C0CCBDF8()
{
  return sub_1C0CCB758(type metadata accessor for BMAppleMusicEventDeltaSourceIngestor, (uint64_t (*)(void))sub_1C08872E4);
}

uint64_t sub_1C0CCBE1C()
{
  return sub_1C0CCB758((uint64_t (*)(_QWORD))type metadata accessor for IPEntityTaggingPersonInferenceSourceIngestor, (uint64_t (*)(void))sub_1C08872D0);
}

uint64_t sub_1C0CCBE40()
{
  return sub_1C0CCB758((uint64_t (*)(_QWORD))type metadata accessor for Fuser, (uint64_t (*)(void))sub_1C08872AC);
}

uint64_t sub_1C0CCBE64()
{
  return sub_1C0CCB758((uint64_t (*)(_QWORD))type metadata accessor for Linker, (uint64_t (*)(void))sub_1C0887190);
}

uint64_t sub_1C0CCBE88()
{
  return sub_1C0CCB758((uint64_t (*)(_QWORD))type metadata accessor for Deduper, (uint64_t (*)(void))sub_1C0886FB0);
}

uint64_t sub_1C0CCBEAC()
{
  return sub_1C0CCB758((uint64_t (*)(_QWORD))type metadata accessor for Resolver, (uint64_t (*)(void))sub_1C0886EBC);
}

void PipelinePhase.init(stores:phaseSource:sourceIngestor:linker:fusion:pipelineType:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1C078DC6C();
  sub_1C079D180(v1, *(_QWORD *)(v1 + 24));
  sub_1C0780838();
  MEMORY[0x1E0C80A78](v2);
  v5 = sub_1C078F1E4(v3, v4, v13);
  sub_1C07A6028(v5, v6, v7, v8, v9, v10, v11, v12, v14);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0);
  sub_1C0776760();
}

uint64_t PipelinePhase.deinit()
{
  uint64_t v0;

  sub_1C07B2018(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore13PipelinePhase_source, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C07B2018(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore13PipelinePhase_stores, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore13PipelinePhase_sourceIngestor);
  sub_1C07B2018(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore13PipelinePhase_linker, (uint64_t (*)(_QWORD))type metadata accessor for Linker);
  sub_1C07B2018(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore13PipelinePhase_fusion, (uint64_t (*)(_QWORD))type metadata accessor for Fuser);
  return v0;
}

void sub_1C0CCBFBC()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1C07947C4();
  sub_1C07AFB34(v0, v1, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0779CF8();
}

void sub_1C0CCBFF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC24IntelligencePlatformCore13PipelinePhase_source;
  sub_1C077F040();
  sub_1C0912904(a1, v3);
  swift_endAccess();
  sub_1C0779CF8();
}

uint64_t (*sub_1C0CCC044())()
{
  sub_1C077F040();
  return j__swift_endAccess;
}

uint64_t sub_1C0CCC084()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v3;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore13PipelinePhase_source);
  sub_1C07947C4();
  v3 = *v1;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  PipelineType.description.getter();
  sub_1C106FC94();
  sub_1C07767AC();
  return v3;
}

void sub_1C0CCC104()
{
  uint64_t v0;

  v0 = sub_1C077674C();
  MEMORY[0x1E0C80A78](v0);
  sub_1C0780A08();
  sub_1C077F0E4();
  __asm { BR              X10 }
}

void sub_1C0CCC16C()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  sub_1C078A314();
  v3 = v1 + OBJC_IVAR____TtC24IntelligencePlatformCore13PipelinePhase_source;
  sub_1C07947C4();
  sub_1C07E05C8(v3, v2, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0AB2BA0(v2, v0);
  sub_1C07B2018(v2, (uint64_t (*)(_QWORD))type metadata accessor for Source);
}

uint64_t sub_1C0CCC228()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 176) = v0;
  sub_1C077674C();
  *(_QWORD *)(v1 + 184) = sub_1C0779644();
  sub_1C077862C();
  return sub_1C077AEC4();
}

void sub_1C0CCC264()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(v0 + 176)
                          + OBJC_IVAR____TtC24IntelligencePlatformCore13PipelinePhase_pipelineType);
  *(_BYTE *)(v0 + 243) = v1;
  sub_1C077F0E4();
  __asm { BR              X9 }
}

uint64_t sub_1C0CCC2FC()
{
  uint64_t v0;
  _QWORD *v1;
  char v2;
  os_log_type_t *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t (*v35)(void);
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40[13];

  swift_bridgeObjectRelease();
  v37 = v1;
  v5 = *(_QWORD *)(v0 + 176);
  v6 = *(_QWORD *)(v0 + 184);
  sub_1C078A314();
  v7 = v5 + OBJC_IVAR____TtC24IntelligencePlatformCore13PipelinePhase_source;
  sub_1C077F040();
  sub_1C07E05C8(v7, v6, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  v8 = sub_1C0AB2CD8();
  sub_1C07B2018(v6, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  if (v8 - 2 >= 2)
  {
    if (v8)
    {
      if (qword_1ED761458 != -1)
        swift_once();
      v21 = sub_1C077585C();
      sub_1C078FA88(v21, (uint64_t)qword_1ED78D818);
      sub_1C07919FC();
      v22 = sub_1C07893D0();
      if (sub_1C07A8214(v22))
      {
        v23 = (uint8_t *)sub_1C0775854();
        v40[0] = sub_1C0775854();
        *(_DWORD *)v23 = 136315138;
        sub_1C0779758();
        v24 = sub_1C0CCE094();
        v26 = v25;
        sub_1C07785A8();
        v27 = sub_1C0788DAC(v24, v26, v40);
        sub_1C07788E0(v27, v37);
        sub_1C0CD0498();
        sub_1C0775894();
        sub_1C07863E8();
        sub_1C07796F0(&dword_1C0771000, type metadata accessor for Source, v8, "Resuming already started phase for %s", v23);
        sub_1C0778610();
        sub_1C0776778();
      }
      sub_1C07863E8();

    }
    else
    {
      v20 = *(_QWORD *)(v0 + 184);
      sub_1C07E05C8(v7, v20, (uint64_t (*)(_QWORD))type metadata accessor for Source);
      sub_1C0AB2BA0(v20, 1);
      sub_1C07B2018(v20, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    }
    v28 = *(_QWORD *)(v0 + 176) + OBJC_IVAR____TtC24IntelligencePlatformCore13PipelinePhase_sourceIngestor;
    sub_1C07D6D1C(v28, (uint64_t)v4);
    v30 = *(_QWORD *)(v0 + 40);
    v29 = *(_QWORD *)(v0 + 48);
    sub_1C07A9480(v4, v30);
    (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v29 + 8) + 8) + 56))(v30);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v4);
    sub_1C07D6D1C(v28, v0 + 56);
    v31 = *(_QWORD *)(v0 + 80);
    v32 = *(_QWORD *)(v0 + 88);
    sub_1C07A9480((_QWORD *)(v0 + 56), v31);
    *(_BYTE *)(v0 + 242) = v2;
    v33 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 192) = v33;
    v34 = *(_QWORD *)(v32 + 8);
    *v33 = v0;
    v33[1] = sub_1C0CCCB24;
    return ResumableStage.executeIfRequired(_:)((_BYTE *)(v0 + 242), v31, v34);
  }
  else
  {
    if (qword_1ED761458 != -1)
      swift_once();
    v9 = sub_1C077585C();
    sub_1C078FA88(v9, (uint64_t)qword_1ED78D818);
    v10 = sub_1C07919FC();
    v11 = sub_1C10703A8();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = sub_1C0775854();
      v40[0] = sub_1C0775854();
      *(_DWORD *)v12 = 136315394;
      *v3 = v8;
      v13 = sub_1C106FB5C();
      v15 = sub_1C0788DAC(v13, v14, v40);
      sub_1C07788E0(v15, v39);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 12) = 2080;
      sub_1C0779758();
      v16 = sub_1C0CCE094();
      v18 = v17;
      sub_1C07785A8();
      v19 = sub_1C0788DAC(v16, v18, v40);
      sub_1C07788E0(v19, v38);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      sub_1C07863E8();
      _os_log_impl(&dword_1C0771000, v10, v11, "Phase already ran with status: %s, skipping %s", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      sub_1C0776778();
    }
    sub_1C07863E8();

    sub_1C077D300();
    v35 = (uint64_t (*)(void))sub_1C0779830();
    return v35();
  }
}

uint64_t sub_1C0CCCB24()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0CCCB7C()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C07796A0();
  v1 = *(unsigned __int8 *)(v0 + 243);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 56);
  return ((uint64_t (*)(uint64_t))((char *)sub_1C0CCCBD8 + 4 * byte_1C10B3388[v1]))(1819047270);
}

uint64_t sub_1C0CCCBD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  NSObject **v16;
  _BYTE *v17;
  char v18;
  uint64_t v19;
  NSObject *v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t (*v30)(void);
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  NSObject *v37;
  _DWORD *v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(void);

  sub_1C077F0E4();
  v18 = sub_1C1070CB4();
  swift_bridgeObjectRelease();
  if ((v18 & 1) != 0 && (sub_1C078A314(), sub_1C0AB9EE8(), !v19))
  {
    if (qword_1ED761458 != -1)
      swift_once();
    v32 = sub_1C077585C();
    sub_1C079E000(v32, (uint64_t)qword_1ED78D818);
    v33 = sub_1C106F538();
    v34 = sub_1C1070390();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)sub_1C0775854();
      *(_WORD *)v35 = 0;
      _os_log_impl(&dword_1C0771000, v33, v34, "Delta source Ingestion resulted in zero entity triples, skipping", v35, 2u);
      sub_1C0776778();
    }

  }
  else
  {
    v20 = *(NSObject **)(v13 + 200);
    sub_1C0CCB758((uint64_t (*)(_QWORD))type metadata accessor for Linker, (uint64_t (*)(void))sub_1C0887190);
    if (!v20)
    {
      v28 = (_QWORD *)sub_1C078A4E4();
      *(_QWORD *)(v13 + 208) = v28;
      v29 = sub_1C07B9B74(v28, (uint64_t)sub_1C0CCD114);
      return sub_1C079F78C(v29, v30);
    }
    *v16 = v20;
    sub_1C077CF64();
    sub_1C07ACF80(&qword_1ED7614F0);
    if (!sub_1C077EE64())
    {
      sub_1C07BC9F4();
      sub_1C07767BC();
      return sub_1C07785F4(*(uint64_t (**)(void))(v13 + 8));
    }
    sub_1C077E6C8();
    if (*v17)
    {
      if (*v17 == 1)
      {
        if (qword_1ED761458 != -1)
          swift_once();
        v21 = sub_1C07A4B18();
        v22 = sub_1C079E000(v21, (uint64_t)qword_1ED78D818);
        sub_1C0796500();
        sub_1C077B740();
        v23 = sub_1C0776928();
        if (sub_1C07AA47C(v22))
        {
          v24 = (uint8_t *)sub_1C0775854();
          a12 = sub_1C0775854();
          *(_DWORD *)v24 = 136315138;
          sub_1C0779758();
          sub_1C0CCE094();
          v25 = sub_1C07785A8();
          *v14 = sub_1C078C338(v25, v26, v27);
          sub_1C077B958();
          sub_1C0775894();
          sub_1C07863E8();
          sub_1C07796F0(&dword_1C0771000, v22, v23, "%s phase had no data to process", v24);
          sub_1C0778610();
          sub_1C0776778();
        }
        sub_1C07863E8();

      }
      else
      {
        if (qword_1ED761458 != -1)
          swift_once();
        v43 = sub_1C07A4B18();
        sub_1C078FA88(v43, (uint64_t)qword_1ED78D818);
        sub_1C07919FC();
        v44 = sub_1C07893D0();
        if (sub_1C077AF48(v20))
        {
          v45 = (uint8_t *)sub_1C0775854();
          a12 = sub_1C0775854();
          *(_DWORD *)v45 = 136315138;
          sub_1C0779758();
          sub_1C0CCE094();
          v46 = sub_1C07785A8();
          *v15 = sub_1C078C338(v46, v47, v48);
          sub_1C077B958();
          sub_1C0775894();
          sub_1C07863E8();
          sub_1C07796F0(&dword_1C0771000, v20, v44, "%s source is disabled due to privacy setting", v45);
          sub_1C0778610();
          sub_1C0776778();
        }
        sub_1C07863E8();

      }
    }
    else
    {
      if (qword_1ED761458 != -1)
        swift_once();
      v36 = sub_1C07A4B18();
      sub_1C078FA88(v36, (uint64_t)qword_1ED78D818);
      v37 = sub_1C07919FC();
      sub_1C1070390();
      if (sub_1C077AF48(v37))
      {
        v38 = (_DWORD *)sub_1C0775854();
        a12 = sub_1C0775854();
        *v38 = 136315138;
        sub_1C07966A0();
        v39 = sub_1C0779A38();
        v41 = v40;
        swift_release();
        *v12 = sub_1C0788DAC(v39, v41, &a12);
        sub_1C10705AC();
        sub_1C0775894();
        sub_1C07878F0();
        sub_1C0790D94(&dword_1C0771000, v37, v42, "%s caught unrecoverable error, phase was skipped");
        sub_1C0778610();
        sub_1C0776778();
      }
      sub_1C07878F0();

    }
    sub_1C07A33B8();
    sub_1C07BC9F4();
  }
  sub_1C077D300();
  v49 = (uint64_t (*)(void))sub_1C0779830();
  return sub_1C07785F4(v49);
}

uint64_t sub_1C0CCD114()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 216) = v0;
  swift_task_dealloc();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0CCD16C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  _BYTE *v29;
  uint64_t v30;
  NSObject *v31;
  _DWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t (*v38)(void);
  uint64_t v40;
  _DWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(void);

  sub_1C07796A0();
  a23 = v26;
  a24 = v27;
  a22 = v24;
  v28 = *(NSObject **)(v24 + 216);
  sub_1C0CCB758((uint64_t (*)(_QWORD))type metadata accessor for Fuser, (uint64_t (*)(void))sub_1C08872AC);
  if (v28)
  {
    v29 = (_BYTE *)(v24 + 241);
    *(_QWORD *)(v24 + 144) = v28;
    sub_1C077CF64();
    sub_1C07ACF80(&qword_1ED7614F0);
    if (sub_1C077EE64())
    {
      sub_1C077E6C8();
      if (*v29)
      {
        if (*v29 == 1)
        {
          if (qword_1ED761458 != -1)
            swift_once();
          v30 = sub_1C07A4B18();
          v31 = sub_1C079E000(v30, (uint64_t)qword_1ED78D818);
          sub_1C0796500();
          sub_1C077B740();
          sub_1C0776928();
          if (sub_1C077AF48(v31))
          {
            v32 = (_DWORD *)sub_1C0775854();
            a12 = sub_1C0775854();
            *v32 = 136315138;
            sub_1C0779758();
            sub_1C0CCE094();
            v33 = sub_1C07A0240();
            *(_QWORD *)(v24 + 136) = sub_1C0776B10(v33, v34, &a12);
            sub_1C10705AC();
            sub_1C07785A0();
            sub_1C07863E8();
            sub_1C0790D94(&dword_1C0771000, v31, v35, "%s phase had no data to process");
            sub_1C0778610();
            sub_1C0776778();
          }
          sub_1C07863E8();

        }
        else
        {
          if (qword_1ED761458 != -1)
            swift_once();
          v45 = sub_1C07A4B18();
          sub_1C079E000(v45, (uint64_t)qword_1ED78D818);
          sub_1C0796500();
          sub_1C077B740();
          v46 = sub_1C07893D0();
          if (sub_1C07A8214(v46))
          {
            v47 = (uint8_t *)sub_1C0775854();
            a12 = sub_1C0775854();
            *(_DWORD *)v47 = 136315138;
            sub_1C0779758();
            sub_1C0CCE094();
            v48 = sub_1C07A0240();
            *(_QWORD *)(v24 + 120) = sub_1C0776B10(v48, v49, &a12);
            sub_1C10705AC();
            sub_1C07785A0();
            sub_1C07863E8();
            sub_1C07796F0(&dword_1C0771000, v28, v25, "%s source is disabled due to privacy setting", v47);
            sub_1C0778610();
            sub_1C0776778();
          }
          sub_1C07863E8();

        }
      }
      else
      {
        if (qword_1ED761458 != -1)
          swift_once();
        v40 = sub_1C07A4B18();
        sub_1C078FA88(v40, (uint64_t)qword_1ED78D818);
        sub_1C07919FC();
        sub_1C07AC8DC();
        if (sub_1C077AF48((v24 + 144)))
        {
          v41 = (_DWORD *)sub_1C0775854();
          a12 = sub_1C0775854();
          *v41 = 136315138;
          sub_1C07966A0();
          sub_1C0779A38();
          v42 = sub_1C0795C64();
          *(_QWORD *)(v24 + 128) = sub_1C077B37C(v42, v43, &a12);
          sub_1C10705AC();
          sub_1C07767AC();
          sub_1C07878F0();
          sub_1C0790D94(&dword_1C0771000, (v24 + 144), v44, "%s caught unrecoverable error, phase was skipped");
          sub_1C0778610();
          sub_1C0776778();
        }
        sub_1C07878F0();

      }
      sub_1C07A33B8();
      sub_1C07BC9F4();
      sub_1C077D300();
      v50 = (uint64_t (*)(void))sub_1C0779830();
      return sub_1C07785F4(v50);
    }
    else
    {
      sub_1C07BC9F4();
      sub_1C07767BC();
      return sub_1C07785F4(*(uint64_t (**)(void))(v24 + 8));
    }
  }
  else
  {
    v36 = (_QWORD *)sub_1C078A4E4();
    *(_QWORD *)(v24 + 224) = v36;
    v37 = sub_1C07B9B74(v36, (uint64_t)sub_1C0CCD59C);
    return sub_1C079F78C(v37, v38);
  }
}

uint64_t sub_1C0CCD59C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 232) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1C077862C();
    return swift_task_switch();
  }
  else
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v2 + 8))();
  }
}

uint64_t sub_1C0CCD60C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  NSObject *v22;
  uint64_t v23;
  NSObject *v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  _DWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(void);

  sub_1C0789E7C();
  a21 = v26;
  a22 = v27;
  a20 = v23;
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v23 + 56);
  sub_1C07B8BD8();
  sub_1C07ACF80(&qword_1ED7614F0);
  if (sub_1C07AA1BC())
  {
    sub_1C079C058();
    if (*v25)
    {
      if (*v25 == 1)
      {
        if (qword_1ED761458 != -1)
          swift_once();
        v28 = sub_1C07A4B18();
        v29 = sub_1C079E000(v28, (uint64_t)qword_1ED78D818);
        sub_1C0796500();
        sub_1C077B740();
        sub_1C0776928();
        if (sub_1C077AF48(v29))
        {
          v30 = (_DWORD *)sub_1C0775854();
          a11 = sub_1C0775854();
          *v30 = 136315138;
          sub_1C0779758();
          sub_1C0CCE094();
          v31 = sub_1C07785A8();
          v33 = sub_1C078E21C(v31, v32);
          sub_1C078CD58(v33);
          sub_1C077E584();
          sub_1C07863E8();
          sub_1C0790D94(&dword_1C0771000, v29, v34, "%s phase had no data to process");
          sub_1C0778610();
          sub_1C0776778();
        }
        sub_1C07863E8();

      }
      else
      {
        if (qword_1ED761458 != -1)
          swift_once();
        v41 = sub_1C07A4B18();
        sub_1C079E000(v41, (uint64_t)qword_1ED78D818);
        sub_1C0796500();
        sub_1C077B740();
        v42 = sub_1C07893D0();
        if (sub_1C07A8214(v42))
        {
          v43 = (uint8_t *)sub_1C0775854();
          a11 = sub_1C0775854();
          *(_DWORD *)v43 = 136315138;
          sub_1C0779758();
          sub_1C0CCE094();
          v44 = sub_1C07A0240();
          v46 = sub_1C0776B10(v44, v45, &a11);
          sub_1C078D87C(v46);
          sub_1C07785A0();
          sub_1C07863E8();
          sub_1C07796F0(&dword_1C0771000, v22, (os_log_type_t)v25, "%s source is disabled due to privacy setting", v43);
          sub_1C0778610();
          sub_1C0776778();
        }
        sub_1C07863E8();

      }
    }
    else
    {
      if (qword_1ED761458 != -1)
        swift_once();
      v36 = sub_1C07A4B18();
      sub_1C078FA88(v36, (uint64_t)qword_1ED78D818);
      sub_1C07919FC();
      sub_1C07AC8DC();
      if (sub_1C077AF48(v24))
      {
        sub_1C0775854();
        a11 = sub_1C0775854();
        sub_1C0791F60(4.8149e-34);
        sub_1C0779A38();
        v37 = sub_1C0795C64();
        v39 = sub_1C077B37C(v37, v38, &a11);
        sub_1C07AB0AC(v39);
        sub_1C07767AC();
        sub_1C07878F0();
        sub_1C0790D94(&dword_1C0771000, v24, v40, "%s caught unrecoverable error, phase was skipped");
        sub_1C0778610();
        sub_1C0776778();
      }
      sub_1C07878F0();

    }
    sub_1C07A33B8();
    sub_1C07BC9F4();
    sub_1C077D300();
    v47 = (uint64_t (*)(void))sub_1C0779830();
    return sub_1C07759B8(v47);
  }
  else
  {
    sub_1C07BC9F4();
    sub_1C07796F8();
    return sub_1C07759B8(*(uint64_t (**)(void))(v23 + 8));
  }
}

uint64_t sub_1C0CCD994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  NSObject *v22;
  uint64_t v23;
  NSObject *v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  _DWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(void);

  sub_1C0789E7C();
  a21 = v26;
  a22 = v27;
  a20 = v23;
  sub_1C07B8BD8();
  sub_1C07ACF80(&qword_1ED7614F0);
  if (sub_1C07AA1BC())
  {
    sub_1C079C058();
    if (*v25)
    {
      if (*v25 == 1)
      {
        if (qword_1ED761458 != -1)
          swift_once();
        v28 = sub_1C07A4B18();
        v29 = sub_1C079E000(v28, (uint64_t)qword_1ED78D818);
        sub_1C0796500();
        sub_1C077B740();
        sub_1C0776928();
        if (sub_1C077AF48(v29))
        {
          v30 = (_DWORD *)sub_1C0775854();
          a11 = sub_1C0775854();
          *v30 = 136315138;
          sub_1C0779758();
          sub_1C0CCE094();
          v31 = sub_1C07785A8();
          v33 = sub_1C078E21C(v31, v32);
          sub_1C078CD58(v33);
          sub_1C077E584();
          sub_1C07863E8();
          sub_1C0790D94(&dword_1C0771000, v29, v34, "%s phase had no data to process");
          sub_1C0778610();
          sub_1C0776778();
        }
        sub_1C07863E8();

      }
      else
      {
        if (qword_1ED761458 != -1)
          swift_once();
        v41 = sub_1C07A4B18();
        sub_1C079E000(v41, (uint64_t)qword_1ED78D818);
        sub_1C0796500();
        sub_1C077B740();
        v42 = sub_1C07893D0();
        if (sub_1C07A8214(v42))
        {
          v43 = (uint8_t *)sub_1C0775854();
          a11 = sub_1C0775854();
          *(_DWORD *)v43 = 136315138;
          sub_1C0779758();
          sub_1C0CCE094();
          v44 = sub_1C07A0240();
          v46 = sub_1C0776B10(v44, v45, &a11);
          sub_1C078D87C(v46);
          sub_1C07785A0();
          sub_1C07863E8();
          sub_1C07796F0(&dword_1C0771000, v22, (os_log_type_t)v25, "%s source is disabled due to privacy setting", v43);
          sub_1C0778610();
          sub_1C0776778();
        }
        sub_1C07863E8();

      }
    }
    else
    {
      if (qword_1ED761458 != -1)
        swift_once();
      v36 = sub_1C07A4B18();
      sub_1C078FA88(v36, (uint64_t)qword_1ED78D818);
      sub_1C07919FC();
      sub_1C07AC8DC();
      if (sub_1C077AF48(v24))
      {
        sub_1C0775854();
        a11 = sub_1C0775854();
        sub_1C0791F60(4.8149e-34);
        sub_1C0779A38();
        v37 = sub_1C0795C64();
        v39 = sub_1C077B37C(v37, v38, &a11);
        sub_1C07AB0AC(v39);
        sub_1C07767AC();
        sub_1C07878F0();
        sub_1C0790D94(&dword_1C0771000, v24, v40, "%s caught unrecoverable error, phase was skipped");
        sub_1C0778610();
        sub_1C0776778();
      }
      sub_1C07878F0();

    }
    sub_1C07A33B8();
    sub_1C07BC9F4();
    sub_1C077D300();
    v47 = (uint64_t (*)(void))sub_1C0779830();
    return sub_1C07759B8(v47);
  }
  else
  {
    sub_1C07BC9F4();
    sub_1C07796F8();
    return sub_1C07759B8(*(uint64_t (**)(void))(v23 + 8));
  }
}

uint64_t sub_1C0CCDD14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  NSObject *v22;
  uint64_t v23;
  NSObject *v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  _DWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(void);

  sub_1C0789E7C();
  a21 = v26;
  a22 = v27;
  a20 = v23;
  sub_1C07B8BD8();
  sub_1C07ACF80(&qword_1ED7614F0);
  if (sub_1C07AA1BC())
  {
    sub_1C079C058();
    if (*v25)
    {
      if (*v25 == 1)
      {
        if (qword_1ED761458 != -1)
          swift_once();
        v28 = sub_1C07A4B18();
        v29 = sub_1C079E000(v28, (uint64_t)qword_1ED78D818);
        sub_1C0796500();
        sub_1C077B740();
        sub_1C0776928();
        if (sub_1C077AF48(v29))
        {
          v30 = (_DWORD *)sub_1C0775854();
          a11 = sub_1C0775854();
          *v30 = 136315138;
          sub_1C0779758();
          sub_1C0CCE094();
          v31 = sub_1C07785A8();
          v33 = sub_1C078E21C(v31, v32);
          sub_1C078CD58(v33);
          sub_1C077E584();
          sub_1C07863E8();
          sub_1C0790D94(&dword_1C0771000, v29, v34, "%s phase had no data to process");
          sub_1C0778610();
          sub_1C0776778();
        }
        sub_1C07863E8();

      }
      else
      {
        if (qword_1ED761458 != -1)
          swift_once();
        v41 = sub_1C07A4B18();
        sub_1C079E000(v41, (uint64_t)qword_1ED78D818);
        sub_1C0796500();
        sub_1C077B740();
        v42 = sub_1C07893D0();
        if (sub_1C07A8214(v42))
        {
          v43 = (uint8_t *)sub_1C0775854();
          a11 = sub_1C0775854();
          *(_DWORD *)v43 = 136315138;
          sub_1C0779758();
          sub_1C0CCE094();
          v44 = sub_1C07A0240();
          v46 = sub_1C0776B10(v44, v45, &a11);
          sub_1C078D87C(v46);
          sub_1C07785A0();
          sub_1C07863E8();
          sub_1C07796F0(&dword_1C0771000, v22, (os_log_type_t)v25, "%s source is disabled due to privacy setting", v43);
          sub_1C0778610();
          sub_1C0776778();
        }
        sub_1C07863E8();

      }
    }
    else
    {
      if (qword_1ED761458 != -1)
        swift_once();
      v36 = sub_1C07A4B18();
      sub_1C078FA88(v36, (uint64_t)qword_1ED78D818);
      sub_1C07919FC();
      sub_1C07AC8DC();
      if (sub_1C077AF48(v24))
      {
        sub_1C0775854();
        a11 = sub_1C0775854();
        sub_1C0791F60(4.8149e-34);
        sub_1C0779A38();
        v37 = sub_1C0795C64();
        v39 = sub_1C077B37C(v37, v38, &a11);
        sub_1C07AB0AC(v39);
        sub_1C07767AC();
        sub_1C07878F0();
        sub_1C0790D94(&dword_1C0771000, v24, v40, "%s caught unrecoverable error, phase was skipped");
        sub_1C0778610();
        sub_1C0776778();
      }
      sub_1C07878F0();

    }
    sub_1C07A33B8();
    sub_1C07BC9F4();
    sub_1C077D300();
    v47 = (uint64_t (*)(void))sub_1C0779830();
    return sub_1C07759B8(v47);
  }
  else
  {
    sub_1C07BC9F4();
    sub_1C07796F8();
    return sub_1C07759B8(*(uint64_t (**)(void))(v23 + 8));
  }
}

uint64_t sub_1C0CCE094()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  _QWORD v6[4];
  uint64_t v7;
  unint64_t v8;

  v1 = type metadata accessor for Source();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = 60;
  v8 = 0xE100000000000000;
  v6[1] = type metadata accessor for PipelinePhase();
  sub_1C07ACF80(&qword_1ED755A28);
  sub_1C106FB5C();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  v4 = v0 + OBJC_IVAR____TtC24IntelligencePlatformCore13PipelinePhase_source;
  swift_beginAccess();
  sub_1C07E05C8(v4, (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C07B2018((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C106FC94();
  return v7;
}

uint64_t sub_1C0CCE1C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1C077674C();
  MEMORY[0x1E0C80A78](v2);
  sub_1C0780A08();
  sub_1C07ACF80(&qword_1EF647140);
  sub_1C106FB5C();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  v3 = v0 + OBJC_IVAR____TtC24IntelligencePlatformCore13PipelinePhase_source;
  sub_1C07947C4();
  sub_1C07E05C8(v3, v1, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C07B2018(v1, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C106FC94();
  return 60;
}

uint64_t sub_1C0CCE2D8(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v2 + 32) = v1;
  *(_BYTE *)(v2 + 200) = a1;
  type metadata accessor for Linker();
  *(_QWORD *)(v2 + 40) = sub_1C077CF7C();
  v3 = sub_1C0775870();
  v4 = sub_1C0CD04D4(v3);
  *(_QWORD *)(v2 + 56) = v4;
  *(_QWORD *)(v2 + 64) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v2 + 72) = sub_1C077CF7C();
  v5 = sub_1C0775870();
  v6 = sub_1C0CD04C8(v5);
  *(_QWORD *)(v2 + 88) = v6;
  *(_QWORD *)(v2 + 96) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v2 + 104) = sub_1C077CF7C();
  *(_QWORD *)(v2 + 112) = sub_1C0775870();
  v7 = sub_1C077585C();
  *(_QWORD *)(v2 + 120) = v7;
  *(_QWORD *)(v2 + 128) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v2 + 136) = sub_1C077CF7C();
  v8 = sub_1C0775870();
  v9 = sub_1C07824CC(v8);
  *(_QWORD *)(v2 + 152) = v9;
  *(_QWORD *)(v2 + 160) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v2 + 168) = sub_1C0779644();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0CCE390()
{
  uint64_t v0;
  _QWORD *v1;
  os_signpost_type_t v2;
  NSObject *v3;
  _WORD *v4;
  os_signpost_id_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  _BOOL8 v20;
  uint8_t *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1C07796A0();
  sub_1C07ABDF8();
  sub_1C077F888();
  sub_1C0782E94();
  sub_1C106F4CC();
  sub_1C106F49C();
  v3 = sub_1C106F4CC();
  sub_1C107048C();
  if ((sub_1C07BAE68() & 1) != 0)
  {
    sub_1C0781284();
    v4 = (_WORD *)sub_1C0775854();
    v5 = sub_1C07BFFB8(v4);
    sub_1C07A9A28(&dword_1C0771000, v6, v2, v5, "graphConstruction", "");
    sub_1C0788A30();
    sub_1C0776778();
  }
  v7 = v1[8];

  sub_1C078B32C(*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v7 + 16));
  sub_1C106F520();
  sub_1C077B5BC();
  sub_1C07AFCE8();
  sub_1C0780C34();
  sub_1C077B960();
  sub_1C07B675C();
  v8 = sub_1C0CD04A0();
  sub_1C079F4A8(v8, v9, v10, v11, v12, v13, v14, v15, v31, v32, v33, v34);
  if (qword_1ED761458 != -1)
    swift_once();
  v16 = sub_1C077EA24();
  v17 = sub_1C079E000(v16, (uint64_t)qword_1ED78D818);
  *(_QWORD *)(v0 + 144) = v17;
  sub_1C07AFB34(v17, v18, (uint64_t (*)(_QWORD))type metadata accessor for Linker);
  sub_1C106F538();
  v19 = sub_1C0776928();
  v20 = sub_1C07AA47C(v3);
  if (v20)
  {
    v21 = (uint8_t *)sub_1C0775854();
    sub_1C0775854();
    *(_DWORD *)v21 = 136315138;
    sub_1C0887190();
    v1[3] = sub_1C0CD04E0(v22, v23, v24, v25, v26, v27);
    sub_1C077B958();
    v28 = sub_1C0775894();
    sub_1C0775ADC(v28, (uint64_t (*)(_QWORD))type metadata accessor for Linker);
    sub_1C07796F0(&dword_1C0771000, v3, v19, "StageStart %s", v21);
    sub_1C0778610();
    sub_1C0776778();
  }
  sub_1C0775ADC(v20, (uint64_t (*)(_QWORD))type metadata accessor for Linker);

  v29 = (_QWORD *)swift_task_alloc();
  v1[23] = v29;
  *v29 = v1;
  v29[1] = sub_1C0CCE5D4;
  return Linker.execute()();
}

uint64_t sub_1C0CCE5D4()
{
  sub_1C079F064();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0CCE610()
{
  NSObject *v0;
  uint64_t v1;
  os_log_type_t v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  const char *v13;
  uint64_t (*v14)(void);

  sub_1C0789E7C();
  sub_1C07E05C8(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), (uint64_t (*)(_QWORD))type metadata accessor for Linker);
  sub_1C106F538();
  v3 = sub_1C0776928();
  if (sub_1C07825D0(v3))
  {
    v4 = (uint8_t *)sub_1C0775854();
    sub_1C0775854();
    *(_DWORD *)v4 = 136315138;
    sub_1C0887190();
    v9 = sub_1C0CD04BC(v5, v6, v7, v8);
    sub_1C0783188(v9);
    v10 = sub_1C07785A0();
    sub_1C0775ADC(v10, (uint64_t (*)(_QWORD))type metadata accessor for Linker);
    sub_1C07796F0(&dword_1C0771000, v0, v2, "StageFinish %s", v4);
    sub_1C0778610();
    sub_1C0776778();
  }
  sub_1C07B2018(*(_QWORD *)(v1 + 40), (uint64_t (*)(_QWORD))type metadata accessor for Linker);

  v11 = sub_1C07AA9F0();
  sub_1C0CCF750(v11, v12, v13);
  sub_1C07A1F54();
  sub_1C07767BC();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C07767D4();
  sub_1C0778638();
  sub_1C0786388();
  swift_task_dealloc();
  sub_1C0786390();
  v14 = (uint64_t (*)(void))sub_1C0779830();
  return sub_1C07759B8(v14);
}

uint64_t sub_1C0CCE73C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  const char *v3;

  sub_1C0789E7C();
  v1 = sub_1C07BD0BC();
  sub_1C0CCF750(v1, v2, v3);
  sub_1C07A1F54();
  sub_1C07767BC();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C07767D4();
  sub_1C0778638();
  sub_1C0786388();
  sub_1C0786390();
  swift_task_dealloc();
  return sub_1C07759B8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0CCE798(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v2 + 32) = v1;
  *(_BYTE *)(v2 + 200) = a1;
  type metadata accessor for Fuser();
  *(_QWORD *)(v2 + 40) = sub_1C077CF7C();
  v3 = sub_1C0775870();
  v4 = sub_1C0CD04D4(v3);
  *(_QWORD *)(v2 + 56) = v4;
  *(_QWORD *)(v2 + 64) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v2 + 72) = sub_1C077CF7C();
  v5 = sub_1C0775870();
  v6 = sub_1C0CD04C8(v5);
  *(_QWORD *)(v2 + 88) = v6;
  *(_QWORD *)(v2 + 96) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v2 + 104) = sub_1C077CF7C();
  *(_QWORD *)(v2 + 112) = sub_1C0775870();
  v7 = sub_1C077585C();
  *(_QWORD *)(v2 + 120) = v7;
  *(_QWORD *)(v2 + 128) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v2 + 136) = sub_1C077CF7C();
  v8 = sub_1C0775870();
  v9 = sub_1C07824CC(v8);
  *(_QWORD *)(v2 + 152) = v9;
  *(_QWORD *)(v2 + 160) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v2 + 168) = sub_1C0779644();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0CCE850()
{
  uint64_t v0;
  _QWORD *v1;
  os_signpost_type_t v2;
  NSObject *v3;
  _WORD *v4;
  os_signpost_id_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  _BOOL8 v20;
  uint8_t *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1C07796A0();
  sub_1C07ABDF8();
  sub_1C077F888();
  sub_1C0782E94();
  sub_1C106F4CC();
  sub_1C106F49C();
  v3 = sub_1C106F4CC();
  sub_1C107048C();
  if ((sub_1C07BAE68() & 1) != 0)
  {
    sub_1C0781284();
    v4 = (_WORD *)sub_1C0775854();
    v5 = sub_1C07BFFB8(v4);
    sub_1C07A9A28(&dword_1C0771000, v6, v2, v5, "graphConstruction", "");
    sub_1C0788A30();
    sub_1C0776778();
  }
  v7 = v1[8];

  sub_1C078B32C(*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v7 + 16));
  sub_1C106F520();
  sub_1C077B5BC();
  sub_1C07AFCE8();
  sub_1C0780C34();
  sub_1C077B960();
  sub_1C07B675C();
  v8 = sub_1C0CD04A0();
  sub_1C079F4A8(v8, v9, v10, v11, v12, v13, v14, v15, v31, v32, v33, v34);
  if (qword_1ED761458 != -1)
    swift_once();
  v16 = sub_1C077EA24();
  v17 = sub_1C079E000(v16, (uint64_t)qword_1ED78D818);
  *(_QWORD *)(v0 + 144) = v17;
  sub_1C07AFB34(v17, v18, (uint64_t (*)(_QWORD))type metadata accessor for Fuser);
  sub_1C106F538();
  v19 = sub_1C0776928();
  v20 = sub_1C07AA47C(v3);
  if (v20)
  {
    v21 = (uint8_t *)sub_1C0775854();
    sub_1C0775854();
    *(_DWORD *)v21 = 136315138;
    sub_1C08872AC();
    v1[3] = sub_1C0CD04E0(v22, v23, v24, v25, v26, v27);
    sub_1C077B958();
    v28 = sub_1C0775894();
    sub_1C0775ADC(v28, (uint64_t (*)(_QWORD))type metadata accessor for Fuser);
    sub_1C07796F0(&dword_1C0771000, v3, v19, "StageStart %s", v21);
    sub_1C0778610();
    sub_1C0776778();
  }
  sub_1C0775ADC(v20, (uint64_t (*)(_QWORD))type metadata accessor for Fuser);

  v29 = (_QWORD *)swift_task_alloc();
  v1[23] = v29;
  *v29 = v1;
  v29[1] = sub_1C0CCEA94;
  return Fuser.execute()();
}

uint64_t sub_1C0CCEA94()
{
  sub_1C079F064();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0CCEAD0()
{
  NSObject *v0;
  uint64_t v1;
  os_log_type_t v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  const char *v13;
  uint64_t (*v14)(void);

  sub_1C0789E7C();
  sub_1C07E05C8(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), (uint64_t (*)(_QWORD))type metadata accessor for Fuser);
  sub_1C106F538();
  v3 = sub_1C0776928();
  if (sub_1C07825D0(v3))
  {
    v4 = (uint8_t *)sub_1C0775854();
    sub_1C0775854();
    *(_DWORD *)v4 = 136315138;
    sub_1C08872AC();
    v9 = sub_1C0CD04BC(v5, v6, v7, v8);
    sub_1C0783188(v9);
    v10 = sub_1C07785A0();
    sub_1C0775ADC(v10, (uint64_t (*)(_QWORD))type metadata accessor for Fuser);
    sub_1C07796F0(&dword_1C0771000, v0, v2, "StageFinish %s", v4);
    sub_1C0778610();
    sub_1C0776778();
  }
  sub_1C07B2018(*(_QWORD *)(v1 + 40), (uint64_t (*)(_QWORD))type metadata accessor for Fuser);

  v11 = sub_1C07AA9F0();
  sub_1C0CCEE34(v11, v12, v13);
  sub_1C07A1F54();
  sub_1C07767BC();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C07767D4();
  sub_1C0778638();
  sub_1C0786388();
  swift_task_dealloc();
  sub_1C0786390();
  v14 = (uint64_t (*)(void))sub_1C0779830();
  return sub_1C07759B8(v14);
}

uint64_t sub_1C0CCEBFC()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  const char *v3;

  sub_1C0789E7C();
  v1 = sub_1C07BD0BC();
  sub_1C0CCEE34(v1, v2, v3);
  sub_1C07A1F54();
  sub_1C07767BC();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C07767D4();
  sub_1C0778638();
  sub_1C0786388();
  sub_1C0786390();
  swift_task_dealloc();
  return sub_1C07759B8(*(uint64_t (**)(void))(v0 + 8));
}

void sub_1C0CCEC58(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;

  v2 = type metadata accessor for Source();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07E05C8(a1, (uint64_t)v4, v5);
  sub_1C0CCBFF8((uint64_t)v4);
}

void PipelinePhase.__allocating_init(stores:phaseSource:sourceIngestor:linker:fusion:pipelineType:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_1C078DC6C();
  swift_allocObject();
  sub_1C079D180(v0, *(_QWORD *)(v0 + 24));
  sub_1C0780838();
  MEMORY[0x1E0C80A78](v1);
  v4 = sub_1C078F1E4(v2, v3, v12);
  sub_1C07A6028(v4, v5, v6, v7, v8, v9, v10, v11, v13);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0);
  sub_1C0776760();
}

uint64_t PipelinePhase.__deallocating_deinit()
{
  PipelinePhase.deinit();
  return swift_deallocClassInstance();
}

void sub_1C0CCED78()
{
  sub_1C0CCBFBC();
}

uint64_t sub_1C0CCED98()
{
  return sub_1C0CCC084();
}

uint64_t sub_1C0CCEDB8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C0801424;
  return sub_1C0CCC228();
}

uint64_t sub_1C0CCEE00(uint64_t a1)
{
  uint64_t v2;

  v2 = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PipelinePhase, a1);
  return ConstructionPhase.description.getter(a1, v2);
}

uint64_t sub_1C0CCEE34(uint64_t a1, int a2, const char *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  Swift::String_optional v22;
  uint64_t countAndFlagsBits;
  void *object;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t inited;
  char *v36;
  char *v37;
  const char *v38;
  char v39;
  char v40;
  NSObject *v41;
  int v42;
  uint64_t result;
  uint64_t v44;
  const char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char v49;
  char v50;
  uint64_t v51;
  void (*v52)(char *, char *, const char *);
  char *v53;
  uint8_t *v54;
  uint64_t v55;
  void (*v56)(uint64_t *, uint64_t *, uint64_t *);
  void (*v57)(uint64_t *, uint64_t *, uint64_t *);
  void (*v58)(uint64_t *, uint64_t *, uint64_t *);
  void (*v59)(uint64_t *, uint64_t *, uint64_t *);
  void (*v60)(uint64_t *, uint64_t *, uint64_t *);
  void (*v61)(uint64_t *, uint64_t *, uint64_t *);
  void (*v62)(uint64_t *, uint64_t *, uint64_t *);
  void (*v63)(uint64_t *, uint64_t *, uint64_t *);
  void (*v64)(uint64_t *, uint64_t *, uint64_t *);
  os_signpost_id_t v65;
  void (*v66)(char *, const char *);
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  const char *v74;
  int v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  unint64_t v83;

  v76 = (char *)a3;
  v75 = a2;
  v70 = sub_1C106F4F0();
  v69 = *(_QWORD *)(v70 - 8);
  MEMORY[0x1E0C80A78](v70);
  v68 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = (const char *)sub_1C106F4B4();
  v73 = *((_QWORD *)v74 - 1);
  MEMORY[0x1E0C80A78](v74);
  v67 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v77 = (char *)&v67 - v7;
  v71 = sub_1C106F4E4();
  v72 = *(_QWORD *)(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  v78 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Pipeline.StatusStore();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1C106D1F8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Source();
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = 0x5F6E6F69737566;
  v83 = 0xE700000000000000;
  v19 = type metadata accessor for Fuser();
  sub_1C07E05C8(a1 + *(int *)(v19 + 20), (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C07B2018((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  _s24IntelligencePlatformCore5StagePAAE11entityClass0aB006EntityF0Vvg_0();
  sub_1C106D0FC();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  v20 = v82;
  v21 = v83;
  sub_1C07E05C8(a1, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v11[*(int *)(v9 + 20)] = v75;
  v22 = Pipeline.StatusStore.currentSessionId()();
  countAndFlagsBits = v22.value._countAndFlagsBits;
  object = v22.value._object;
  sub_1C07B2018((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Pipeline.StatusStore);
  if (!v22.value._object)
  {
    countAndFlagsBits = 0;
    object = (void *)0xE000000000000000;
  }
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = v20;
  *(_QWORD *)(v25 + 24) = v21;
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = countAndFlagsBits;
  *(_QWORD *)(v26 + 24) = object;
  v27 = swift_allocObject();
  *(_BYTE *)(v27 + 16) = 34;
  v28 = swift_allocObject();
  *(_BYTE *)(v28 + 16) = 8;
  v29 = swift_allocObject();
  *(_QWORD *)(v29 + 16) = sub_1C0CD0410;
  *(_QWORD *)(v29 + 24) = v25;
  v30 = swift_allocObject();
  *(_BYTE *)(v30 + 16) = 34;
  v31 = swift_allocObject();
  *(_BYTE *)(v31 + 16) = 8;
  v32 = swift_allocObject();
  *(_QWORD *)(v32 + 16) = sub_1C0CD0418;
  *(_QWORD *)(v32 + 24) = v26;
  v33 = swift_allocObject();
  *(_BYTE *)(v33 + 16) = 32;
  v34 = swift_allocObject();
  *(_BYTE *)(v34 + 16) = 8;
  sub_1C07ACF80(&qword_1ED762CC8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C108BB50;
  *(_QWORD *)(inited + 32) = sub_1C0788B6C;
  *(_QWORD *)(inited + 40) = v27;
  *(_QWORD *)(inited + 48) = sub_1C0959698;
  *(_QWORD *)(inited + 56) = v28;
  *(_QWORD *)(inited + 64) = sub_1C0788D34;
  *(_QWORD *)(inited + 72) = v29;
  *(_QWORD *)(inited + 80) = sub_1C0959698;
  *(_QWORD *)(inited + 88) = v30;
  *(_QWORD *)(inited + 96) = sub_1C0959698;
  *(_QWORD *)(inited + 104) = v31;
  v36 = v77;
  *(_QWORD *)(inited + 112) = sub_1C0CD047C;
  *(_QWORD *)(inited + 120) = v32;
  *(_QWORD *)(inited + 128) = sub_1C0959698;
  *(_QWORD *)(inited + 136) = v33;
  *(_QWORD *)(inited + 144) = sub_1C0959698;
  *(_QWORD *)(inited + 152) = v34;
  v37 = v78;
  *(_QWORD *)(inited + 160) = sub_1C0D44E60;
  *(_QWORD *)(inited + 168) = 0;
  sub_1C106D258();
  v38 = (const char *)sub_1C106D27C();
  v40 = v39;
  sub_1C106D288();
  v41 = sub_1C106F4CC();
  sub_1C106F508();
  v42 = sub_1C1070480();
  result = sub_1C107054C();
  if ((result & 1) == 0)
  {
    swift_release();

    swift_bridgeObjectRelease();
    (*(void (**)(char *, const char *))(v73 + 8))(v36, v74);
    return (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v37, v71);
  }
  v75 = v42;
  v76 = (char *)v38;
  v44 = v73;
  v45 = v74;
  if ((v40 & 1) != 0)
  {
    if (!((unint64_t)v76 >> 32))
    {
      if (v76 >> 11 == 27)
      {
LABEL_19:
        __break(1u);
        return result;
      }
      v46 = v70;
      v47 = v69;
      v48 = v68;
      if (v76 >> 16 <= 0x10)
      {
        v76 = &v81;
        goto LABEL_12;
      }
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (!v76)
  {
    __break(1u);
    goto LABEL_17;
  }
  v46 = v70;
  v47 = v69;
  v48 = v68;
LABEL_12:
  swift_retain();
  sub_1C106F52C();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t))(v47 + 88))(v48, v46) == *MEMORY[0x1E0DF2190])
  {
    v49 = 0;
    v50 = 0;
    v74 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v47 + 8))(v48, v46);
    v74 = "stage=%{signpost.telemetry:string1,public}s sessionId=%{signpost.telemetry:string2,public}s %s";
    v50 = 2;
    v49 = 3;
  }
  v51 = v44;
  v52 = *(void (**)(char *, char *, const char *))(v44 + 16);
  v53 = v67;
  v52(v67, v36, v45);
  v54 = (uint8_t *)swift_slowAlloc();
  v55 = swift_slowAlloc();
  v80 = 0;
  v79 = v55;
  *v54 = v50;
  v54[1] = v49;
  v82 = (uint64_t)(v54 + 2);
  v56 = *(void (**)(uint64_t *, uint64_t *, uint64_t *))(inited + 32);
  swift_retain();
  v56(&v82, &v80, &v79);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_release();
  v57 = *(void (**)(uint64_t *, uint64_t *, uint64_t *))(inited + 48);
  swift_retain();
  v57(&v82, &v80, &v79);
  swift_release();
  v58 = *(void (**)(uint64_t *, uint64_t *, uint64_t *))(inited + 64);
  swift_retain();
  v58(&v82, &v80, &v79);
  swift_release();
  v59 = *(void (**)(uint64_t *, uint64_t *, uint64_t *))(inited + 80);
  swift_retain();
  v59(&v82, &v80, &v79);
  swift_release();
  v60 = *(void (**)(uint64_t *, uint64_t *, uint64_t *))(inited + 96);
  swift_retain();
  v60(&v82, &v80, &v79);
  swift_release();
  v61 = *(void (**)(uint64_t *, uint64_t *, uint64_t *))(inited + 112);
  swift_retain();
  v61(&v82, &v80, &v79);
  swift_release();
  v62 = *(void (**)(uint64_t *, uint64_t *, uint64_t *))(inited + 128);
  swift_retain();
  v62(&v82, &v80, &v79);
  swift_release();
  v63 = *(void (**)(uint64_t *, uint64_t *, uint64_t *))(inited + 144);
  swift_retain();
  v63(&v82, &v80, &v79);
  swift_release();
  v64 = *(void (**)(uint64_t *, uint64_t *, uint64_t *))(inited + 160);
  swift_retain();
  v64(&v82, &v80, &v79);
  swift_bridgeObjectRelease_n();
  swift_release();
  v65 = sub_1C106F4A8();
  _os_signpost_emit_with_name_impl(&dword_1C0771000, v41, (os_signpost_type_t)v75, v65, v76, v74, v54, 0x20u);
  v66 = *(void (**)(char *, const char *))(v51 + 8);
  v66(v53, v45);
  swift_arrayDestroy();
  MEMORY[0x1C3BA8270](v55, -1, -1);
  MEMORY[0x1C3BA8270](v54, -1, -1);
  swift_release();

  v66(v77, v45);
  return (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v78, v71);
}

uint64_t sub_1C0CCF750(uint64_t a1, int a2, const char *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  Swift::String_optional v21;
  uint64_t countAndFlagsBits;
  void *object;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t inited;
  char *v35;
  char *v36;
  const char *v37;
  char v38;
  char v39;
  NSObject *v40;
  int v41;
  uint64_t result;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  BOOL v48;
  char v49;
  char v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  char *v53;
  uint8_t *v54;
  uint64_t v55;
  void (*v56)(uint64_t *, uint64_t *, uint64_t *);
  void (*v57)(uint64_t *, uint64_t *, uint64_t *);
  void (*v58)(uint64_t *, uint64_t *, uint64_t *);
  void (*v59)(uint64_t *, uint64_t *, uint64_t *);
  void (*v60)(uint64_t *, uint64_t *, uint64_t *);
  void (*v61)(uint64_t *, uint64_t *, uint64_t *);
  void (*v62)(uint64_t *, uint64_t *, uint64_t *);
  void (*v63)(uint64_t *, uint64_t *, uint64_t *);
  void (*v64)(uint64_t *, uint64_t *, uint64_t *);
  os_signpost_id_t v65;
  void (*v66)(char *, uint64_t);
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  const char *v76;
  int v77;
  char *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  unint64_t v85;

  v78 = (char *)a3;
  v77 = a2;
  v71 = sub_1C106F4F0();
  v70 = *(_QWORD *)(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  v69 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = sub_1C106F4B4();
  v74 = *(_QWORD *)(v75 - 8);
  MEMORY[0x1E0C80A78](v75);
  v68 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v79 = (char *)&v67 - v7;
  v72 = sub_1C106F4E4();
  v73 = *(_QWORD *)(v72 - 8);
  MEMORY[0x1E0C80A78](v72);
  v80 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = (const char *)type metadata accessor for Pipeline.StatusStore();
  MEMORY[0x1E0C80A78](v76);
  v10 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1C106D1F8();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Source();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = 0x2D676E696B6E696CLL;
  v85 = 0xE800000000000000;
  sub_1C106FC94();
  sub_1C106FC94();
  v18 = type metadata accessor for Linker();
  sub_1C07E05C8(a1 + *(int *)(v18 + 20), (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C07B2018((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  _s24IntelligencePlatformCore5StagePAAE11entityClass0aB006EntityF0Vvg_0();
  sub_1C106D0FC();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  v19 = v84;
  v20 = v85;
  sub_1C07E05C8(a1, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v10[*((int *)v76 + 5)] = v77;
  v21 = Pipeline.StatusStore.currentSessionId()();
  countAndFlagsBits = v21.value._countAndFlagsBits;
  object = v21.value._object;
  sub_1C07B2018((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Pipeline.StatusStore);
  if (!v21.value._object)
  {
    countAndFlagsBits = 0;
    object = (void *)0xE000000000000000;
  }
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = v19;
  *(_QWORD *)(v24 + 24) = v20;
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = countAndFlagsBits;
  *(_QWORD *)(v25 + 24) = object;
  v26 = swift_allocObject();
  *(_BYTE *)(v26 + 16) = 34;
  v27 = swift_allocObject();
  *(_BYTE *)(v27 + 16) = 8;
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = sub_1C0CD0474;
  *(_QWORD *)(v28 + 24) = v24;
  v29 = swift_allocObject();
  *(_BYTE *)(v29 + 16) = 34;
  v30 = swift_allocObject();
  *(_BYTE *)(v30 + 16) = 8;
  v31 = swift_allocObject();
  *(_QWORD *)(v31 + 16) = sub_1C0CD0478;
  *(_QWORD *)(v31 + 24) = v25;
  v32 = swift_allocObject();
  *(_BYTE *)(v32 + 16) = 32;
  v33 = swift_allocObject();
  *(_BYTE *)(v33 + 16) = 8;
  sub_1C07ACF80(&qword_1ED762CC8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C108BB50;
  *(_QWORD *)(inited + 32) = sub_1C0959698;
  *(_QWORD *)(inited + 40) = v26;
  *(_QWORD *)(inited + 48) = sub_1C0959698;
  *(_QWORD *)(inited + 56) = v27;
  *(_QWORD *)(inited + 64) = sub_1C0CD047C;
  *(_QWORD *)(inited + 72) = v28;
  *(_QWORD *)(inited + 80) = sub_1C0959698;
  *(_QWORD *)(inited + 88) = v29;
  *(_QWORD *)(inited + 96) = sub_1C0959698;
  *(_QWORD *)(inited + 104) = v30;
  v35 = v79;
  *(_QWORD *)(inited + 112) = sub_1C0CD047C;
  *(_QWORD *)(inited + 120) = v31;
  *(_QWORD *)(inited + 128) = sub_1C0959698;
  *(_QWORD *)(inited + 136) = v32;
  *(_QWORD *)(inited + 144) = sub_1C0959698;
  *(_QWORD *)(inited + 152) = v33;
  v36 = v80;
  *(_QWORD *)(inited + 160) = sub_1C0D44E60;
  *(_QWORD *)(inited + 168) = 0;
  sub_1C106D258();
  v37 = (const char *)sub_1C106D27C();
  v39 = v38;
  sub_1C106D288();
  v40 = sub_1C106F4CC();
  sub_1C106F508();
  v41 = sub_1C1070480();
  result = sub_1C107054C();
  if ((result & 1) == 0)
  {
    swift_release();

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v74 + 8))(v35, v75);
    return (*(uint64_t (**)(char *, uint64_t))(v73 + 8))(v36, v72);
  }
  v78 = (char *)v37;
  v43 = v74;
  v44 = v75;
  if ((v39 & 1) != 0)
  {
    if (!((unint64_t)v78 >> 32))
    {
      if (v78 >> 11 == 27)
      {
LABEL_19:
        __break(1u);
        return result;
      }
      v45 = v71;
      v46 = v70;
      v47 = v69;
      if (v78 >> 16 <= 0x10)
      {
        v78 = &v83;
        goto LABEL_12;
      }
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (!v78)
  {
    __break(1u);
    goto LABEL_17;
  }
  v45 = v71;
  v46 = v70;
  v47 = v69;
LABEL_12:
  swift_retain();
  sub_1C106F52C();
  swift_release();
  v48 = (*(unsigned int (**)(char *, uint64_t))(v46 + 88))(v47, v45) == *MEMORY[0x1E0DF2190];
  v77 = v41;
  if (v48)
  {
    v50 = 0;
    v49 = 0;
    v76 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v45);
    v76 = "stage=%{signpost.telemetry:string1,public}s sessionId=%{signpost.telemetry:string2,public}s %s";
    v49 = 2;
    v50 = 3;
  }
  v51 = v43;
  v52 = *(void (**)(char *, char *, uint64_t))(v43 + 16);
  v53 = v68;
  v52(v68, v35, v44);
  v54 = (uint8_t *)swift_slowAlloc();
  v55 = swift_slowAlloc();
  v82 = 0;
  v81 = v55;
  *v54 = v49;
  v54[1] = v50;
  v84 = (uint64_t)(v54 + 2);
  v56 = *(void (**)(uint64_t *, uint64_t *, uint64_t *))(inited + 32);
  swift_retain();
  v56(&v84, &v82, &v81);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_release();
  v57 = *(void (**)(uint64_t *, uint64_t *, uint64_t *))(inited + 48);
  swift_retain();
  v57(&v84, &v82, &v81);
  swift_release();
  v58 = *(void (**)(uint64_t *, uint64_t *, uint64_t *))(inited + 64);
  swift_retain();
  v58(&v84, &v82, &v81);
  swift_release();
  v59 = *(void (**)(uint64_t *, uint64_t *, uint64_t *))(inited + 80);
  swift_retain();
  v59(&v84, &v82, &v81);
  swift_release();
  v60 = *(void (**)(uint64_t *, uint64_t *, uint64_t *))(inited + 96);
  swift_retain();
  v60(&v84, &v82, &v81);
  swift_release();
  v61 = *(void (**)(uint64_t *, uint64_t *, uint64_t *))(inited + 112);
  swift_retain();
  v61(&v84, &v82, &v81);
  swift_release();
  v62 = *(void (**)(uint64_t *, uint64_t *, uint64_t *))(inited + 128);
  swift_retain();
  v62(&v84, &v82, &v81);
  swift_release();
  v63 = *(void (**)(uint64_t *, uint64_t *, uint64_t *))(inited + 144);
  swift_retain();
  v63(&v84, &v82, &v81);
  swift_release();
  v64 = *(void (**)(uint64_t *, uint64_t *, uint64_t *))(inited + 160);
  swift_retain();
  v64(&v84, &v82, &v81);
  swift_bridgeObjectRelease_n();
  swift_release();
  v65 = sub_1C106F4A8();
  _os_signpost_emit_with_name_impl(&dword_1C0771000, v40, (os_signpost_type_t)v77, v65, v78, v76, v54, 0x20u);
  v66 = *(void (**)(char *, uint64_t))(v51 + 8);
  v66(v53, v44);
  swift_arrayDestroy();
  MEMORY[0x1C3BA8270](v55, -1, -1);
  MEMORY[0x1C3BA8270](v54, -1, -1);
  swift_release();

  v66(v79, v44);
  return (*(uint64_t (**)(char *, uint64_t))(v73 + 8))(v80, v72);
}

uint64_t sub_1C0CD00A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _BYTE *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t *v17;
  uint64_t *v18;

  v9 = a8;
  v17 = (uint64_t *)(a7 + OBJC_IVAR____TtC24IntelligencePlatformCore13PipelinePhase_sourceIngestor);
  v17[3] = a8;
  v17[4] = a9;
  v18 = sub_1C079DFC4(v17);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v18, a3, v9);
  LOBYTE(v9) = *a6;
  sub_1C07E05F4(a2, a7 + OBJC_IVAR____TtC24IntelligencePlatformCore13PipelinePhase_source, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C07E05F4(a1, a7 + OBJC_IVAR____TtC24IntelligencePlatformCore13PipelinePhase_stores, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C07E05F4(a4, a7 + OBJC_IVAR____TtC24IntelligencePlatformCore13PipelinePhase_linker, (uint64_t (*)(_QWORD))type metadata accessor for Linker);
  sub_1C07E05F4(a5, a7 + OBJC_IVAR____TtC24IntelligencePlatformCore13PipelinePhase_fusion, (uint64_t (*)(_QWORD))type metadata accessor for Fuser);
  *(_BYTE *)(a7 + OBJC_IVAR____TtC24IntelligencePlatformCore13PipelinePhase_pipelineType) = v9;
  return a7;
}

void sub_1C0CD01A4(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1ED75AAA8, (uint64_t (*)(uint64_t))type metadata accessor for PipelinePhase, (uint64_t)&protocol conformance descriptor for PipelinePhase);
  *(_QWORD *)(a1 + 8) = v2;
}

uint64_t type metadata accessor for PipelinePhase()
{
  uint64_t result;

  result = qword_1ED75AAB0;
  if (!qword_1ED75AAB0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1C0CD0218(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1ED75AAA0, (uint64_t (*)(uint64_t))type metadata accessor for PipelinePhase, (uint64_t)&protocol conformance descriptor for PipelinePhase);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0CD0254()
{
  sub_1C0CCBFBC();
}

uint64_t sub_1C0CD0278()
{
  return type metadata accessor for PipelinePhase();
}

uint64_t sub_1C0CD0280()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  result = type metadata accessor for Source();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for PhaseStores();
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for Linker();
      if (v3 <= 0x3F)
      {
        result = type metadata accessor for Fuser();
        if (v4 <= 0x3F)
          return swift_updateClassMetadata2();
      }
    }
  }
  return result;
}

uint64_t method lookup function for PipelinePhase()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PipelinePhase.source.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of PipelinePhase.source.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of PipelinePhase.source.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of PipelinePhase.phaseName.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of PipelinePhase.__allocating_init(stores:phaseSource:sourceIngestor:linker:fusion:pipelineType:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of PipelinePhase.run()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 200) + *(_QWORD *)(*(_QWORD *)v0 + 200));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_1C0801424;
  return sub_1C077CF28(v4);
}

uint64_t dispatch thunk of PipelinePhase.clearAllData()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t sub_1C0CD03EC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0CD0410()
{
  uint64_t v0;

  return sub_1C0CD8008(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1C0CD0418()
{
  uint64_t v0;

  return sub_1C0D45134(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1C0CD0428()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0CD0498()
{
  return sub_1C10705AC();
}

uint64_t sub_1C0CD04A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t sub_1C0CD04B0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0CD04BC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  return sub_1C0788DAC(a1, a2, (uint64_t *)va);
}

uint64_t sub_1C0CD04C8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 80) = a1;
  return sub_1C106F4E4();
}

uint64_t sub_1C0CD04D4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = a1;
  return sub_1C106F4B4();
}

uint64_t sub_1C0CD04E0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  return sub_1C0788DAC(a1, a2, (uint64_t *)va);
}

uint64_t sub_1C0CD04EC(_QWORD *a1, int a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t result;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  char v28;
  int64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  int v36;
  uint64_t v37;
  uint64_t AssociatedTypeWitness;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  unint64_t v54;
  char v55;
  unint64_t v56;
  char v57;
  _QWORD *v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  BOOL v64;
  unint64_t v65;
  char v66;
  unint64_t v67;
  char v68;
  unint64_t v69;
  char v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int64_t v77;
  uint64_t v78;
  __int128 v79;
  uint64_t v80;
  int64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94[6];
  _QWORD v95[3];
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;

  v4 = v3;
  sub_1C07ACF80(&qword_1ED762CB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1079220;
  v9 = a1[1];
  *(_QWORD *)(inited + 32) = *a1;
  *(_QWORD *)(inited + 40) = v9;
  v98 = inited;
  sub_1C077584C();
  if ((a3 & 1) != 0)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0BD9D50();
  }
  swift_bridgeObjectRelease();
  v10 = 0;
  sub_1C0CBC1D4();
  sub_1C077584C();
  v19 = sub_1C07F8030();
  swift_release();
  swift_bridgeObjectRelease();
  if (!v19)
    goto LABEL_7;
  sub_1C07ACF80(&qword_1ED75E818);
  v17 = (_QWORD *)sub_1C106F97C();
  v20 = 0;
  v21 = *(_QWORD *)(v19 + 56);
  v76 = v19 + 56;
  v22 = 1 << *(_BYTE *)(v19 + 32);
  v23 = -1;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  v24 = v23 & v21;
  v77 = (unint64_t)(v22 + 63) >> 6;
  v79 = xmmword_1C1078FC0;
  v86 = v4;
  v85 = a2;
  v78 = v19;
  if (!v24)
    goto LABEL_14;
  while (2)
  {
    v80 = (v24 - 1) & v24;
    v81 = v20;
    v25 = __clz(__rbit64(v24)) | (v20 << 6);
LABEL_31:
    v82 = v17;
    v30 = (uint64_t *)(*(_QWORD *)(v19 + 48) + 16 * v25);
    v31 = *v30;
    v89 = v30[1];
    v90 = v31;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v83 = sub_1C106F97C();
    sub_1C07ACF80(&qword_1ED755F50);
    v32 = swift_initStackObject();
    *(_OWORD *)(v32 + 16) = v79;
    if (qword_1ED75AC28 != -1)
      swift_once();
    v92 = (uint64_t *)sub_1C07ACF80(&qword_1ED75A180);
    *(_QWORD *)(v32 + 56) = v92;
    v33 = sub_1C0CD22C8();
    *(_QWORD *)(v32 + 64) = v33;
    v34 = (_QWORD *)sub_1C079902C();
    *(_QWORD *)(v32 + 32) = v34;
    sub_1C07A131C(v34);
    sub_1C077C0B8();
    sub_1C0788218();
    if (qword_1ED75AC70 != -1)
      swift_once();
    v88 = v32 + 32;
    *(_QWORD *)(v32 + 96) = v92;
    *(_QWORD *)(v32 + 104) = v33;
    v35 = (_QWORD *)sub_1C079902C();
    *(_QWORD *)(v32 + 72) = v35;
    sub_1C07A131C(v35);
    sub_1C077C0B8();
    sub_1C0788218();
    v36 = 0;
    v37 = 0;
    v87 = v32;
    do
    {
      v91 = v36;
      sub_1C07D6D1C(v88 + 40 * v37, (uint64_t)v95);
      sub_1C07A9480(v95, v96);
      AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      v39 = sub_1C1070564();
      v92 = &v75;
      v40 = *(_QWORD *)(v39 - 8);
      MEMORY[0x1E0C80A78](v39);
      v42 = (char *)&v75 - v41;
      v43 = v89;
      sub_1C077C0B8();
      sub_1C0CBC14C(v43, (uint64_t)v42);
      if (v10)
      {
        sub_1C077E6C8();
        sub_1C077589C();
        v10 = 0;
        goto LABEL_48;
      }
      v84 = 0;
      sub_1C077589C();
      if (sub_1C07B2D80((uint64_t)v42, 1, AssociatedTypeWitness) == 1)
      {
        (*(void (**)(char *, uint64_t))(v40 + 8))(v42, v39);
LABEL_47:
        v10 = v84;
        goto LABEL_48;
      }
      v94[3] = AssociatedTypeWitness;
      v94[4] = swift_getAssociatedConformanceWitness();
      v94[5] = swift_getAssociatedConformanceWitness();
      v44 = sub_1C079DFC4(v94);
      (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(v44, v42, AssociatedTypeWitness);
      sub_1C07ACF80(&qword_1ED75D130);
      if ((swift_dynamicCast() & 1) == 0)
        goto LABEL_47;
      v45 = v93;
      v46 = v96;
      v47 = v97;
      sub_1C07A9480(v95, v96);
      v48 = (*(uint64_t (**)(uint64_t, uint64_t))(v47 + 32))(v46, v47);
      v50 = v49;
      v51 = v83;
      swift_isUniquelyReferenced_nonNull_native();
      v94[0] = v51;
      sub_1C0796A50();
      sub_1C07976E0();
      v10 = v84;
      if (v64)
      {
        __break(1u);
LABEL_69:
        __break(1u);
LABEL_70:
        __break(1u);
LABEL_71:
        __break(1u);
        goto LABEL_72;
      }
      v54 = v52;
      v55 = v53;
      sub_1C07ACF80(&qword_1ED760850);
      if ((sub_1C107090C() & 1) != 0)
      {
        v56 = sub_1C0796A50();
        if ((v55 & 1) != (v57 & 1))
          goto LABEL_74;
        v54 = v56;
      }
      v58 = (_QWORD *)v94[0];
      v83 = v94[0];
      if ((v55 & 1) != 0)
      {
        *(_QWORD *)(*(_QWORD *)(v94[0] + 56) + 8 * v54) = v45;
      }
      else
      {
        *(_QWORD *)(v94[0] + 8 * (v54 >> 6) + 64) |= 1 << v54;
        v59 = (uint64_t *)(v58[6] + 16 * v54);
        *v59 = v48;
        v59[1] = v50;
        *(_QWORD *)(v58[7] + 8 * v54) = v45;
        v60 = v58[2];
        v64 = __OFADD__(v60, 1);
        v61 = v60 + 1;
        if (v64)
          goto LABEL_69;
        v58[2] = v61;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_48:
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v95);
      v36 = 1;
      v37 = 1;
    }
    while ((v91 & 1) == 0);
    swift_setDeallocating();
    sub_1C0BE8F18();
    v62 = (uint64_t)v82;
    swift_isUniquelyReferenced_nonNull_native();
    v94[0] = v62;
    v63 = v89;
    sub_1C077D774(v90, v89);
    sub_1C07976E0();
    if (v64)
      goto LABEL_70;
    v67 = v65;
    v68 = v66;
    sub_1C07ACF80(&qword_1ED75D220);
    if ((sub_1C107090C() & 1) != 0)
    {
      v69 = sub_1C077D774(v90, v63);
      if ((v68 & 1) != (v70 & 1))
        goto LABEL_74;
      v67 = v69;
    }
    v17 = (_QWORD *)v94[0];
    if ((v68 & 1) == 0)
    {
      *(_QWORD *)(v94[0] + 8 * (v67 >> 6) + 64) |= 1 << v67;
      v72 = (_QWORD *)(v17[6] + 16 * v67);
      *v72 = v90;
      v72[1] = v63;
      *(_QWORD *)(v17[7] + 8 * v67) = v83;
      v73 = v17[2];
      v64 = __OFADD__(v73, 1);
      v74 = v73 + 1;
      if (!v64)
      {
        v17[2] = v74;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        goto LABEL_61;
      }
      goto LABEL_71;
    }
    v71 = *(_QWORD *)(v94[0] + 56);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v71 + 8 * v67) = v83;
LABEL_61:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v19 = v78;
    v24 = v80;
    v20 = v81;
    if (v80)
      continue;
    break;
  }
LABEL_14:
  v64 = __OFADD__(v20, 1);
  v26 = v20 + 1;
  if (v64)
  {
LABEL_72:
    __break(1u);
    swift_once();
    v11 = sub_1C106F544();
    sub_1C079E000(v11, (uint64_t)qword_1ED762AF8);
    sub_1C077CF64();
    sub_1C077CF64();
    v12 = sub_1C106F538();
    v13 = sub_1C1070390();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v14 = 138412290;
      sub_1C077CF64();
      v16 = _swift_stdlib_bridgeErrorToNSError();
      v94[0] = v16;
      sub_1C10705AC();
      *v15 = v16;
      sub_1C077E6C8();
      sub_1C077E6C8();
      _os_log_impl(&dword_1C0771000, v12, v13, "Encountered an error while fetching for phase status %@", v14, 0xCu);
      sub_1C07ACF80(&qword_1ED7614A0);
      swift_arrayDestroy();
      sub_1C0776778();
    }
    sub_1C077E6C8();
    sub_1C077E6C8();
    sub_1C077E6C8();

LABEL_7:
    sub_1C07ACF80(&qword_1ED75E818);
    return sub_1C106F97C();
  }
  if (v26 >= v77)
    goto LABEL_67;
  v27 = *(_QWORD *)(v76 + 8 * v26);
  if (v27)
    goto LABEL_30;
  sub_1C07A3E70();
  if (v28 == v64)
    goto LABEL_67;
  sub_1C079A0A8();
  if (v27)
    goto LABEL_29;
  sub_1C07A3E70();
  if (v28 == v64)
    goto LABEL_67;
  sub_1C079A0A8();
  if (v27)
    goto LABEL_29;
  sub_1C07A3E70();
  if (v28 == v64)
    goto LABEL_67;
  sub_1C079A0A8();
  if (v27)
    goto LABEL_29;
  sub_1C07A3E70();
  if (v28 != v64)
  {
    sub_1C079A0A8();
    if (!v27)
    {
      while (1)
      {
        v26 = v29 + 1;
        if (__OFADD__(v29, 1))
          break;
        if (v26 >= v77)
          goto LABEL_67;
        v27 = *(_QWORD *)(v76 + 8 * v26);
        ++v29;
        if (v27)
          goto LABEL_30;
      }
      __break(1u);
LABEL_74:
      result = sub_1C1070D44();
      __break(1u);
      return result;
    }
LABEL_29:
    v26 = v29;
LABEL_30:
    v80 = (v27 - 1) & v27;
    v81 = v26;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    goto LABEL_31;
  }
LABEL_67:
  swift_release();
  return (uint64_t)v17;
}

uint64_t sub_1C0CD0E44()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  sub_1C0CD2A28();
  v1 = 0xD00000000000001ALL;
  if ((v0 & 1) != 0)
    v2 = 0xD000000000000018;
  else
    v2 = 0xD00000000000001ALL;
  if ((v0 & 1) != 0)
    v3 = 0x80000001C1108110;
  else
    v3 = 0x80000001C1108050;
  sub_1C0CD2A28();
  if ((v4 & 1) != 0)
  {
    v1 = 0xD000000000000018;
    v5 = 0x80000001C11080F0;
  }
  else
  {
    v5 = 0x80000001C1108070;
  }
  sub_1C0CD2A28();
  if ((v6 & 1) != 0)
    v7 = 0xD000000000000020;
  else
    v7 = 0xD000000000000022;
  if ((v6 & 1) != 0)
    v8 = 0x80000001C11080C0;
  else
    v8 = 0x80000001C1108090;
  v9 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C0CD0F5C(v2, v3);
  sub_1C0CD0F5C(v1, v5);
  sub_1C0CD13D8(v7, v8);
  objc_autoreleasePoolPop(v9);
  sub_1C077589C();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0CD0F5C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t result;
  uint64_t v34[2];

  v2 = sub_1C0CD2D2C();
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = (_QWORD *)(v2 + 32);
    v5 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v6 = v4[3];
      v7 = v4[4];
      v8 = sub_1C07A9480(v4, v6);
      v9 = sub_1C0CBCAE4((uint64_t)v8, 0, 1, v6, v7);
      v10 = *(_QWORD *)(v9 + 16);
      v11 = *(_QWORD *)(v5 + 16);
      v12 = v11 + v10;
      if (__OFADD__(v11, v10))
        break;
      v13 = v9;
      if (!swift_isUniquelyReferenced_nonNull_native() || (int64_t)v12 > *(_QWORD *)(v5 + 24) >> 1)
      {
        sub_1C07ED374();
        v5 = v14;
      }
      if (*(_QWORD *)(v13 + 16))
      {
        v15 = *(_QWORD *)(v5 + 16);
        if ((*(_QWORD *)(v5 + 24) >> 1) - v15 < v10)
          goto LABEL_28;
        v12 = v5 + 32 * v15 + 32;
        if (v13 + 32 < v12 + 32 * v10 && v12 < v13 + 32 + 32 * v10)
        {
          result = sub_1C10709F0();
          __break(1u);
          return result;
        }
        sub_1C07ACF80(&qword_1ED760070);
        swift_arrayInitWithCopy();
        if (v10)
        {
          v17 = *(_QWORD *)(v5 + 16);
          v18 = __OFADD__(v17, v10);
          v19 = v17 + v10;
          if (v18)
            goto LABEL_29;
          *(_QWORD *)(v5 + 16) = v19;
        }
      }
      else if (v10)
      {
        goto LABEL_27;
      }
      swift_bridgeObjectRelease();
      v4 += 5;
      if (!--v3)
        goto LABEL_21;
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
  }
  else
  {
    v5 = MEMORY[0x1E0DEE9D8];
LABEL_21:
    swift_bridgeObjectRelease();
    v20 = sub_1C0D99F50(v5);
    sub_1C0CD20B8(v20);
    swift_bridgeObjectRelease();
    sub_1C106F244();
    sub_1C089D438();
    v12 = a2;
    sub_1C106F22C();
    swift_bridgeObjectRelease();
    if (qword_1ED762B18 == -1)
      goto LABEL_22;
  }
  swift_once();
LABEL_22:
  v21 = sub_1C106F544();
  sub_1C079E000(v21, (uint64_t)qword_1ED762AF8);
  swift_bridgeObjectRetain_n();
  swift_retain();
  v22 = sub_1C106F538();
  v23 = sub_1C1070384();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = swift_slowAlloc();
    v25 = swift_slowAlloc();
    v34[0] = v25;
    *(_DWORD *)v24 = 136315651;
    type metadata accessor for Pipeline.StatusStore();
    sub_1C07ACF80(&qword_1EF647148);
    v26 = sub_1C106FB5C();
    sub_1C0788DAC(v26, v27, v34);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2080;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0788DAC(a1, v12, v34);
    sub_1C10705AC();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v24 + 22) = 2081;
    sub_1C07D4B70(0, &qword_1ED760190);
    swift_retain();
    v28 = sub_1C106F94C();
    v30 = v29;
    swift_release();
    sub_1C0788DAC(v28, v30, v34);
    sub_1C10705AC();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0771000, v22, v23, "%s sent CA event:%s, payload:%{private}s", (uint8_t *)v24, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1C3BA8270](v25, -1, -1);
    MEMORY[0x1C3BA8270](v24, -1, -1);

  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  return 1;
}

uint64_t sub_1C0CD13D8(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  const char *v11;
  int64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t inited;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  _QWORD v49[6];
  char v50[16];
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  _BYTE v59[24];
  uint64_t v60;
  _BYTE v61[24];
  _QWORD v62[3];

  v4 = (unint64_t)v49;
  if (qword_1ED75AC00 != -1)
    swift_once();
  v54 = xmmword_1ED78D190;
  v55 = *(_OWORD *)&qword_1ED78D1A0;
  v56 = qword_1ED78D1B0;
  v57 = xmmword_1ED78D190;
  v5 = qword_1ED78D1A8;
  v58 = qword_1ED78D1A0;
  sub_1C07B35DC((uint64_t)&v57);
  sub_1C08FD4A0((uint64_t)&v58);
  sub_1C0BCD07C(v5);
  v6 = 0;
  sub_1C0CBC1D4();
  sub_1C0CD27D0();
  swift_release();
  sub_1C07B2F5C((uint64_t)&v57);
  sub_1C08EE9A0((uint64_t)&v58);
  sub_1C077AB58(v5);
  v13 = v50[0];
  if (v50[0] != 4)
  {
    if (qword_1ED75ACA0 != -1)
      goto LABEL_55;
    while (1)
    {
      v15 = xmmword_1ED78D370;
      v14 = *(_OWORD *)&qword_1ED78D380;
      *(_OWORD *)(v4 + 48) = xmmword_1ED78D370;
      *(_OWORD *)(v4 + 64) = v14;
      v53 = qword_1ED78D390;
      *(_OWORD *)(v4 + 176) = v15;
      v16 = v52;
      v60 = v51;
      sub_1C07B35DC((uint64_t)v59);
      sub_1C08FD4A0((uint64_t)&v60);
      sub_1C0BCD07C(v16);
      sub_1C0CBC1D4();
      if (v6)
      {

        sub_1C07B2F5C((uint64_t)v59);
        sub_1C08EE9A0((uint64_t)&v60);
        sub_1C077AB58(v16);
LABEL_14:
        if (qword_1ED762B18 != -1)
          swift_once();
        v17 = sub_1C106F544();
        sub_1C079E000(v17, (uint64_t)qword_1ED762AF8);
        v8 = sub_1C106F538();
        v9 = sub_1C1070390();
        if (os_log_type_enabled(v8, v9))
        {
          v10 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v10 = 0;
          v11 = "SessionID isn't available while submitting to per phase latency CA event";
LABEL_8:
          _os_log_impl(&dword_1C0771000, v8, v9, v11, v10, 2u);
          MEMORY[0x1C3BA8270](v10, -1, -1);
        }
        goto LABEL_9;
      }
      sub_1C0CD24CC((uint64_t)v50, 0, 0);
      v43 = v18;
      swift_release();
      sub_1C07B2F5C((uint64_t)v59);
      sub_1C08EE9A0((uint64_t)&v60);
      sub_1C077AB58(v16);
      if (!v43)
        goto LABEL_14;
      if (a1 != 0xD000000000000022 || a2 != 0x80000001C1108090)
        sub_1C1070CB4();
      v42 = v13;
      if (qword_1ED75AC08 != -1)
LABEL_57:
        swift_once();
      v20 = xmmword_1ED78D1B8;
      v19 = *(_OWORD *)&qword_1ED78D1C8;
      *(_OWORD *)v4 = xmmword_1ED78D1B8;
      *(_OWORD *)(v4 + 16) = v19;
      v6 = (void *)qword_1ED78D1D8;
      v49[4] = qword_1ED78D1D8;
      *(_OWORD *)(v4 + 208) = v20;
      v21 = v49[3];
      v62[0] = v49[2];
      sub_1C07B35DC((uint64_t)v61);
      sub_1C08FD4A0((uint64_t)v62);
      sub_1C0BCD07C(v21);
      v22 = sub_1C0CD04EC(v49, 0, 1);
      sub_1C07B2F5C((uint64_t)v61);
      sub_1C08EE9A0((uint64_t)v62);
      sub_1C077AB58(v21);
      v13 = 0;
      v44 = v22 + 64;
      v23 = 1 << *(_BYTE *)(v22 + 32);
      v24 = -1;
      if (v23 < 64)
        v24 = ~(-1 << v23);
      v4 = v24 & *(_QWORD *)(v22 + 64);
      v45 = (unint64_t)(v23 + 63) >> 6;
      v46 = v22;
      while (1)
      {
        if (v4)
        {
          v25 = __clz(__rbit64(v4));
          v4 &= v4 - 1;
          v26 = v25 | (v13 << 6);
          goto LABEL_42;
        }
        v27 = v13 + 1;
        if (__OFADD__(v13, 1))
          break;
        if (v27 >= v45)
          goto LABEL_53;
        v28 = *(_QWORD *)(v44 + 8 * v27);
        ++v13;
        if (!v28)
        {
          v13 = v27 + 1;
          if (v27 + 1 >= v45)
            goto LABEL_53;
          v28 = *(_QWORD *)(v44 + 8 * v13);
          if (!v28)
          {
            v13 = v27 + 2;
            if (v27 + 2 >= v45)
              goto LABEL_53;
            v28 = *(_QWORD *)(v44 + 8 * v13);
            if (!v28)
            {
              v29 = v27 + 3;
              if (v29 >= v45)
              {
LABEL_53:
                swift_bridgeObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
                return 1;
              }
              v28 = *(_QWORD *)(v44 + 8 * v29);
              if (!v28)
              {
                while (1)
                {
                  v13 = v29 + 1;
                  if (__OFADD__(v29, 1))
                    break;
                  if (v13 >= v45)
                    goto LABEL_53;
                  v28 = *(_QWORD *)(v44 + 8 * v13);
                  ++v29;
                  if (v28)
                    goto LABEL_41;
                }
                __break(1u);
                goto LABEL_57;
              }
              v13 = v29;
            }
          }
        }
LABEL_41:
        v4 = (v28 - 1) & v28;
        v26 = __clz(__rbit64(v28)) + (v13 << 6);
LABEL_42:
        v30 = (uint64_t *)(*(_QWORD *)(v46 + 48) + 16 * v26);
        v31 = *v30;
        v6 = (void *)v30[1];
        v32 = *(_QWORD *)(*(_QWORD *)(v46 + 56) + 8 * v26);
        v33 = *(_QWORD *)(v32 + 16);
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        if (v33)
        {
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          sub_1C077D774(0x6D69546573616870, 0xEE00746E65705365);
          if ((v34 & 1) != 0)
          {
            if (*(_QWORD *)(v32 + 16))
            {
              sub_1C077D774(0xD000000000000015, 0x80000001C1108130);
              if ((v35 & 1) != 0)
              {
                swift_bridgeObjectRelease();
                sub_1C07ACF80((uint64_t *)&unk_1ED7614C0);
                inited = swift_initStackObject();
                *(_OWORD *)(inited + 16) = xmmword_1C107DE20;
                *(_QWORD *)(inited + 32) = 0x6D614E6573616850;
                *(_QWORD *)(inited + 40) = 0xE900000000000065;
                v37 = sub_1C106FAF0();
                swift_bridgeObjectRelease();
                *(_QWORD *)(inited + 48) = v37;
                strcpy((char *)(inited + 56), "phaseTimeSpent");
                *(_BYTE *)(inited + 71) = -18;
                *(_QWORD *)(inited + 72) = sub_1C1070168();
                *(_QWORD *)(inited + 80) = 0xD000000000000015;
                *(_QWORD *)(inited + 88) = 0x80000001C1108130;
                *(_QWORD *)(inited + 96) = sub_1C1070168();
                *(_QWORD *)(inited + 104) = 0x496E6F6973736573;
                *(_QWORD *)(inited + 112) = 0xE900000000000064;
                *(_QWORD *)(inited + 120) = sub_1C106FAF0();
                strcpy((char *)(inited + 128), "pipelineType");
                *(_BYTE *)(inited + 141) = 0;
                *(_WORD *)(inited + 142) = -5120;
                v47 = 0;
                v48 = 0xE000000000000000;
                sub_1C1070774();
                swift_bridgeObjectRelease();
                v47 = 0x6E696C657069503CLL;
                v48 = 0xEF203A6570795465;
                __asm { BR              X8 }
              }
            }
          }
          swift_bridgeObjectRelease();
        }
        if (qword_1ED762B18 != -1)
          swift_once();
        v38 = sub_1C106F544();
        sub_1C079E000(v38, (uint64_t)qword_1ED762AF8);
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v39 = sub_1C106F538();
        v40 = sub_1C1070390();
        if (os_log_type_enabled(v39, v40))
        {
          v41 = swift_slowAlloc();
          a1 = swift_slowAlloc();
          v47 = a1;
          *(_DWORD *)v41 = 136315138;
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          *(_QWORD *)(v41 + 4) = sub_1C0788DAC(v31, (unint64_t)v6, &v47);
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1C0771000, v39, v40, "Latency unavailable while submitting phase latency to CA event for phase: %s", (uint8_t *)v41, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C3BA8270](a1, -1, -1);
          MEMORY[0x1C3BA8270](v41, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
      }
      __break(1u);
LABEL_55:
      swift_once();
    }
  }
  if (qword_1ED762B18 != -1)
    swift_once();
  v7 = sub_1C106F544();
  sub_1C079E000(v7, (uint64_t)qword_1ED762AF8);
  v8 = sub_1C106F538();
  v9 = sub_1C1070390();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    v11 = "Pipeline type isn't available while submitting to per phase latency CA event";
    goto LABEL_8;
  }
LABEL_9:

  return 0;
}

uint64_t sub_1C0CD20B8(uint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;

  sub_1C07ACF80(&qword_1ED755F48);
  result = sub_1C10709CC();
  v3 = (_QWORD *)result;
  v4 = 0;
  v27 = a1;
  v7 = *(_QWORD *)(a1 + 64);
  v6 = a1 + 64;
  v5 = v7;
  v8 = 1 << *(_BYTE *)(v6 - 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v5;
  v25 = v6;
  v26 = (unint64_t)(v8 + 63) >> 6;
  v11 = result + 64;
  if ((v9 & v5) == 0)
    goto LABEL_5;
LABEL_4:
  v12 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v12 | (v4 << 6); ; i = __clz(__rbit64(v15)) + (v4 << 6))
  {
    v17 = (uint64_t *)(*(_QWORD *)(v27 + 48) + 16 * i);
    v18 = *v17;
    v19 = v17[1];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v20 = sub_1C106FAF0();
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(v11 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v21 = (_QWORD *)(v3[6] + 16 * i);
    *v21 = v18;
    v21[1] = v19;
    *(_QWORD *)(v3[7] + 8 * i) = v20;
    v22 = v3[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v24;
    if (v10)
      goto LABEL_4;
LABEL_5:
    v14 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_24;
    if (v14 >= v26)
      return (uint64_t)v3;
    v15 = *(_QWORD *)(v25 + 8 * v14);
    ++v4;
    if (!v15)
    {
      v4 = v14 + 1;
      if (v14 + 1 >= v26)
        return (uint64_t)v3;
      v15 = *(_QWORD *)(v25 + 8 * v4);
      if (!v15)
      {
        v4 = v14 + 2;
        if (v14 + 2 >= v26)
          return (uint64_t)v3;
        v15 = *(_QWORD *)(v25 + 8 * v4);
        if (!v15)
          break;
      }
    }
LABEL_18:
    v10 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 >= v26)
    return (uint64_t)v3;
  v15 = *(_QWORD *)(v25 + 8 * v16);
  if (v15)
  {
    v4 = v16;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v4 >= v26)
      return (uint64_t)v3;
    v15 = *(_QWORD *)(v25 + 8 * v4);
    ++v16;
    if (v15)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

unint64_t sub_1C0CD22C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED75A178;
  if (!qword_1ED75A178)
  {
    v1 = sub_1C07D4BEC(&qword_1ED75A180);
    result = MEMORY[0x1C3BA8174](&unk_1C10B9F9C, v1);
    atomic_store(result, (unint64_t *)&qword_1ED75A178);
  }
  return result;
}

uint64_t sub_1C0CD230C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 40))
    swift_release();
  return swift_deallocObject();
}

Swift::Bool __swiftcall Pipeline.StatusStore.isLongRunningPipelineActivated()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Bool result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;

  if (qword_1EF62E270 != -1)
    swift_once();
  sub_1C07A7470((__int128 *)&qword_1EF6D1D70, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  sub_1C07A0250();
  sub_1C0BCD07C(v1);
  v2 = sub_1C0775C10();
  if (v0)
  {
    sub_1C077E6C8();
  }
  else
  {
    sub_1C07A2A58(v2, v3);
    v4 = sub_1C077FA84();
  }
  sub_1C079903C(v4, v5, v6, v7, v8, v9, v10, v11);
  sub_1C078FAA4();
  sub_1C077AB58(v1);
  sub_1C07A1330();
  return result;
}

uint64_t sub_1C0CD23FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;

  if (a3)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C106FC94();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C106FC94();
    swift_bridgeObjectRelease();
  }
  else
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  v4 = sub_1C07F7EC0();
  if (v3)
  {

    v5 = 2;
  }
  else
  {
    v5 = v4;
  }
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1C0CD24CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;

  if (a3)
  {
    sub_1C0788224();
    sub_1C07AE0B8();
    sub_1C07B437C();
    sub_1C106FC94();
    sub_1C077B5B4();
  }
  else
  {
    sub_1C07B437C();
  }
  v4 = sub_1C07F7CA4();
  if (v3)
  {

    sub_1C077B5B4();
    return 0;
  }
  else
  {
    v5 = v4;
    sub_1C077B5B4();
  }
  return v5;
}

void sub_1C0CD2580()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  sub_1C07A8224();
  if (v2)
  {
    sub_1C0788224();
    sub_1C07AE0B8();
    sub_1C079A0B4();
    sub_1C079AEB4();
    sub_1C0775834();
  }
  else
  {
    sub_1C079A0B4();
  }
  sub_1C079B97C();
  sub_1C07F7D44();
  if (v1)
  {

    sub_1C0775834();
    v3 = sub_1C106ADE0();
    sub_1C07B2D8C(v0, 1, 1, v3);
  }
  else
  {
    sub_1C0775834();
  }
  sub_1C07914DC();
}

uint64_t sub_1C0CD261C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0CD2654(a1, a2, a3, sub_1C07F7F98);
}

uint64_t sub_1C0CD2638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0CD2654(a1, a2, a3, sub_1C07F7E54);
}

uint64_t sub_1C0CD2654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  void *v4;
  uint64_t v6;
  uint64_t v7;

  if (a3)
  {
    sub_1C0788224();
    sub_1C07AE0B8();
    sub_1C079A0B4();
    sub_1C079AEB4();
    sub_1C0775834();
  }
  else
  {
    sub_1C079A0B4();
  }
  sub_1C079B97C();
  v6 = a4();
  if (v4)
  {

    sub_1C0775834();
    return 0;
  }
  else
  {
    v7 = v6;
    sub_1C0775834();
  }
  return v7;
}

uint64_t sub_1C0CD2700(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;

  if (a3)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C106FC94();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C106FC94();
    swift_bridgeObjectRelease();
  }
  else
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  v4 = sub_1C07F80BC();
  if (v3)
  {

    v5 = 4;
  }
  else
  {
    v5 = v4;
  }
  swift_bridgeObjectRelease();
  return v5;
}

void sub_1C0CD27D0()
{
  _BYTE *v0;
  void *v1;
  uint64_t v2;

  sub_1C07A8224();
  if (v2)
  {
    sub_1C0788224();
    sub_1C07AE0B8();
    sub_1C079A0B4();
    sub_1C079AEB4();
    sub_1C0775834();
  }
  else
  {
    sub_1C079A0B4();
  }
  sub_1C079B97C();
  sub_1C07F80E0();
  if (v1)
  {

    sub_1C0775834();
    *v0 = 4;
  }
  else
  {
    sub_1C0775834();
  }
  sub_1C07914DC();
}

Swift::String_optional __swiftcall Pipeline.StatusStore.currentSessionId()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  Swift::String_optional result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;

  if (qword_1ED75ACA0 != -1)
    swift_once();
  sub_1C07A7470(&xmmword_1ED78D370, v27, v29, v31, v33, v34, v35, v36, v37, v38);
  sub_1C07A0250();
  sub_1C0BCD07C(v1);
  v2 = sub_1C0775C10();
  if (v0)
  {
    sub_1C077E6C8();
    v13 = 0;
    v15 = 0;
  }
  else
  {
    v10 = sub_1C07BC9FC(v2, v3, v4, v5, v6, v7, v8, v9, v28, v30, v32);
    v13 = sub_1C0CD24CC((uint64_t)v10, v11, v12);
    v15 = v14;
    v16 = swift_release();
  }
  sub_1C079903C(v16, v17, v18, v19, v20, v21, v22, v23);
  sub_1C078FAA4();
  sub_1C077AB58(v1);
  v24 = v13;
  v25 = v15;
  result.value._object = v25;
  result.value._countAndFlagsBits = v24;
  return result;
}

BOOL sub_1C0CD291C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;

  if (qword_1ED75ABA0 != -1)
    swift_once();
  v38 = xmmword_1ED78D5F8;
  v39 = xmmword_1ED78D5F8;
  v3 = qword_1ED78D610;
  v40 = *(_QWORD *)algn_1ED78D608;
  sub_1C07B35DC((uint64_t)&v39);
  sub_1C08FD4A0((uint64_t)&v40);
  sub_1C0BCD07C(v3);
  v4 = sub_1C0775C10();
  if (v1)
  {
    sub_1C077E6C8();
    sub_1C079903C(v19, v20, v21, v22, v23, v24, v25, v26);
    sub_1C08EE9A0((uint64_t)&v40);
    sub_1C0795358();
    return 0;
  }
  else
  {
    v11 = sub_1C07BC9FC(v4, v5, v6, (uint64_t)sub_1C07F7E54, v7, v8, v9, v10, v36, v37, v38);
    v15 = sub_1C0CD2654((uint64_t)v11, v12, v13, v14);
    v17 = v16;
    v18 = swift_release();
    sub_1C079903C(v18, v28, v29, v30, v31, v32, v33, v34);
    sub_1C08EE9A0((uint64_t)&v40);
    sub_1C0795358();
    return (v17 & 1) == 0 && v15 > a1;
  }
}

void sub_1C0CD2A28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;

  if (qword_1ED75AB90 != -1)
    swift_once();
  sub_1C07A7470((__int128 *)&qword_1ED78D0F0, v21, v22, v23, v24, v25, v26, v27, v28, v29);
  sub_1C07A0250();
  sub_1C0BCD07C(v1);
  v2 = sub_1C0775C10();
  if (!v0)
  {
    sub_1C07976F4(v2, v3);
    v4 = sub_1C077FA84();
    sub_1C079903C(v4, v13, v14, v15, v16, v17, v18, v19);
    sub_1C078FAA4();
    sub_1C079E7E4();
    __asm { BR              X10 }
  }
  sub_1C077E6C8();
  sub_1C079903C(v5, v6, v7, v8, v9, v10, v11, v12);
  sub_1C078FAA4();
  sub_1C077AB58(v1);
  sub_1C07A1330();
}

void sub_1C0CD2B50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;

  if (qword_1ED756098 != -1)
    swift_once();
  sub_1C07A7470((__int128 *)&qword_1ED78D2A8, v12, v13, v14, v15, v16, v17, v18, v19, v20);
  sub_1C07A0250();
  sub_1C0BCD07C(v1);
  v2 = sub_1C0775C10();
  if (v0)
  {
    sub_1C077E6C8();
  }
  else
  {
    sub_1C07A2A58(v2, v3);
    v4 = sub_1C077FA84();
  }
  sub_1C079903C(v4, v5, v6, v7, v8, v9, v10, v11);
  sub_1C078FAA4();
  sub_1C077AB58(v1);
  sub_1C07A1330();
}

void sub_1C0CD2C04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;

  if (qword_1ED75AB90 != -1)
    swift_once();
  sub_1C07A7470((__int128 *)&qword_1ED78D0F0, v21, v22, v23, v24, v25, v26, v27, v28, v29);
  sub_1C07A0250();
  sub_1C0BCD07C(v1);
  v2 = sub_1C0775C10();
  if (!v0)
  {
    sub_1C07976F4(v2, v3);
    v4 = sub_1C077FA84();
    sub_1C079903C(v4, v13, v14, v15, v16, v17, v18, v19);
    sub_1C078FAA4();
    sub_1C079E7E4();
    __asm { BR              X10 }
  }
  sub_1C077E6C8();
  sub_1C079903C(v5, v6, v7, v8, v9, v10, v11, v12);
  sub_1C078FAA4();
  sub_1C077AB58(v1);
  sub_1C07A1330();
}

uint64_t sub_1C0CD2D2C()
{
  uint64_t v0;
  __int128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_1C07ACF80(&qword_1ED755F50);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C10819A0;
  if (qword_1ED75AC00 != -1)
    swift_once();
  v1 = xmmword_1ED78D190;
  v2 = qword_1ED78D1A0;
  v3 = qword_1ED78D1A8;
  v4 = qword_1ED78D1B0;
  v45 = sub_1C07ACF80(&qword_1ED75A150);
  *(_QWORD *)(v0 + 56) = v45;
  v44 = sub_1C0CD4770(&qword_1ED75A148, &qword_1ED75A150);
  *(_QWORD *)(v0 + 64) = v44;
  v5 = sub_1C07A0FAC();
  *(_QWORD *)(v0 + 32) = v5;
  *(_OWORD *)(v5 + 16) = v1;
  *(_QWORD *)(v5 + 32) = v2;
  *(_QWORD *)(v5 + 40) = v3;
  *(_QWORD *)(v5 + 48) = v4;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C077E474();
  if (qword_1ED75AC38 != -1)
    swift_once();
  v6 = xmmword_1ED78D258;
  v7 = qword_1ED78D268;
  v8 = unk_1ED78D270;
  v9 = qword_1ED78D278;
  v46 = sub_1C079BD54();
  *(_QWORD *)(v0 + 96) = v46;
  v10 = sub_1C079770C(&qword_1ED75A128);
  *(_QWORD *)(v0 + 104) = v10;
  v11 = sub_1C07A0FAC();
  *(_QWORD *)(v0 + 72) = v11;
  *(_OWORD *)(v11 + 16) = v6;
  *(_QWORD *)(v11 + 32) = v7;
  *(_QWORD *)(v11 + 40) = v8;
  *(_QWORD *)(v11 + 48) = v9;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0788218();
  if (qword_1ED75ACA0 != -1)
    swift_once();
  v12 = xmmword_1ED78D370;
  v13 = qword_1ED78D380;
  v14 = unk_1ED78D388;
  v15 = qword_1ED78D390;
  v16 = sub_1C07ACF80(&qword_1ED75A160);
  *(_QWORD *)(v0 + 136) = v16;
  v17 = sub_1C0CD4770(&qword_1ED75A158, &qword_1ED75A160);
  *(_QWORD *)(v0 + 144) = v17;
  v18 = sub_1C07A0FAC();
  *(_QWORD *)(v0 + 112) = v18;
  *(_OWORD *)(v18 + 16) = v12;
  *(_QWORD *)(v18 + 32) = v13;
  *(_QWORD *)(v18 + 40) = v14;
  *(_QWORD *)(v18 + 48) = v15;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0BCD07C(v14);
  if (qword_1ED756098 != -1)
    swift_once();
  v19 = qword_1ED78D2A8;
  v20 = unk_1ED78D2B0;
  v21 = qword_1ED78D2B8;
  v22 = qword_1ED78D2C0;
  v23 = qword_1ED78D2C8;
  *(_QWORD *)(v0 + 176) = sub_1C07ACF80(&qword_1ED75A170);
  *(_QWORD *)(v0 + 184) = sub_1C0CD4770(&qword_1ED75A168, &qword_1ED75A170);
  v24 = (_QWORD *)sub_1C07A0FAC();
  *(_QWORD *)(v0 + 152) = v24;
  v24[2] = v19;
  v24[3] = v20;
  v24[4] = v21;
  v24[5] = v22;
  v24[6] = v23;
  sub_1C077584C();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0BCD07C(v22);
  if (qword_1ED75AB90 != -1)
    swift_once();
  sub_1C0788230();
  *(_QWORD *)(v0 + 216) = sub_1C07ACF80(&qword_1ED75A140);
  *(_QWORD *)(v0 + 224) = sub_1C0CD4770(&qword_1ED75A138, &qword_1ED75A140);
  v25 = (_QWORD *)sub_1C07A0FAC();
  *(_QWORD *)(v0 + 192) = v25;
  v25[2] = v19;
  v25[3] = v20;
  v25[4] = &qword_1ED75A170;
  v25[5] = v21;
  v25[6] = v22;
  sub_1C077584C();
  sub_1C077AEBC();
  sub_1C0788218();
  if (qword_1ED75AC98 != -1)
    swift_once();
  sub_1C0788230();
  *(_QWORD *)(v0 + 256) = v46;
  *(_QWORD *)(v0 + 264) = v10;
  v26 = (_QWORD *)sub_1C07A0FAC();
  *(_QWORD *)(v0 + 232) = v26;
  v26[2] = v19;
  v26[3] = v20;
  v26[4] = &qword_1ED75A170;
  v26[5] = v21;
  v26[6] = v22;
  sub_1C077584C();
  sub_1C077AEBC();
  sub_1C0788218();
  if (qword_1ED75AC18 != -1)
    swift_once();
  sub_1C0788230();
  *(_QWORD *)(v0 + 296) = v16;
  *(_QWORD *)(v0 + 304) = v17;
  v27 = (_QWORD *)sub_1C07A0FAC();
  *(_QWORD *)(v0 + 272) = v27;
  v27[2] = v19;
  v27[3] = v20;
  v27[4] = &qword_1ED75A170;
  v27[5] = v21;
  v27[6] = v22;
  sub_1C077584C();
  sub_1C077AEBC();
  sub_1C0788218();
  if (qword_1ED75ABD0 != -1)
    swift_once();
  sub_1C079E814();
  *(_QWORD *)(v0 + 336) = v45;
  *(_QWORD *)(v0 + 344) = v44;
  v28 = (_QWORD *)sub_1C07A0FAC();
  *(_QWORD *)(v0 + 312) = v28;
  v28[2] = v19;
  v28[3] = v20;
  sub_1C07A1344(v28);
  sub_1C077AEBC();
  sub_1C077E474();
  if (qword_1ED755CA8 != -1)
    swift_once();
  sub_1C079E814();
  *(_QWORD *)(v0 + 376) = v46;
  *(_QWORD *)(v0 + 384) = v10;
  v29 = (_QWORD *)sub_1C07A0FAC();
  *(_QWORD *)(v0 + 352) = v29;
  v29[2] = v19;
  v29[3] = v20;
  sub_1C07A1344(v29);
  sub_1C077AEBC();
  sub_1C077E474();
  if (qword_1ED75ABC0 != -1)
    swift_once();
  sub_1C079E814();
  *(_QWORD *)(v0 + 416) = v46;
  *(_QWORD *)(v0 + 424) = v10;
  v30 = (_QWORD *)sub_1C07A0FAC();
  *(_QWORD *)(v0 + 392) = v30;
  v30[2] = v19;
  v30[3] = v20;
  sub_1C07A1344(v30);
  sub_1C077AEBC();
  sub_1C077E474();
  if (qword_1ED75AC48 != -1)
    swift_once();
  sub_1C078FAAC();
  v31 = sub_1C079BD54();
  *(_QWORD *)(v0 + 456) = v31;
  v32 = sub_1C079770C((unint64_t *)&qword_1ED75A178);
  *(_QWORD *)(v0 + 464) = v32;
  v33 = (_QWORD *)sub_1C07A0FAC();
  *(_QWORD *)(v0 + 432) = v33;
  v33[2] = v21;
  v33[3] = v20;
  sub_1C07A1344(v33);
  sub_1C077AEBC();
  sub_1C077E474();
  if (qword_1ED75AC90 != -1)
    swift_once();
  sub_1C078FAAC();
  *(_QWORD *)(v0 + 496) = v31;
  *(_QWORD *)(v0 + 504) = v32;
  v34 = (_QWORD *)sub_1C07A0FAC();
  *(_QWORD *)(v0 + 472) = v34;
  v34[2] = v21;
  v34[3] = v20;
  sub_1C07A1344(v34);
  sub_1C077AEBC();
  sub_1C077E474();
  if (qword_1ED75ABA8 != -1)
    swift_once();
  sub_1C078FAAC();
  v35 = sub_1C079BD54();
  *(_QWORD *)(v0 + 536) = v35;
  v36 = sub_1C079770C(&qword_1ED75A188);
  *(_QWORD *)(v0 + 544) = v36;
  v37 = (_QWORD *)sub_1C07A0FAC();
  *(_QWORD *)(v0 + 512) = v37;
  v37[2] = v21;
  v37[3] = v20;
  sub_1C07A1344(v37);
  sub_1C077AEBC();
  sub_1C077E474();
  if (qword_1ED75ABB8 != -1)
    swift_once();
  sub_1C078FAAC();
  *(_QWORD *)(v0 + 576) = v35;
  *(_QWORD *)(v0 + 584) = v36;
  v38 = (_QWORD *)sub_1C07A0FAC();
  *(_QWORD *)(v0 + 552) = v38;
  v38[2] = v21;
  v38[3] = v20;
  sub_1C07A1344(v38);
  sub_1C077AEBC();
  sub_1C077E474();
  if (qword_1ED75ABA0 != -1)
    swift_once();
  sub_1C078FAAC();
  *(_QWORD *)(v0 + 616) = v35;
  *(_QWORD *)(v0 + 624) = v36;
  v39 = (_QWORD *)sub_1C07A0FAC();
  *(_QWORD *)(v0 + 592) = v39;
  v39[2] = v21;
  v39[3] = v20;
  sub_1C07A1344(v39);
  sub_1C077AEBC();
  sub_1C077E474();
  if (qword_1ED75AC50 != -1)
    swift_once();
  sub_1C078FAAC();
  *(_QWORD *)(v0 + 656) = v35;
  *(_QWORD *)(v0 + 664) = v36;
  v40 = (_QWORD *)sub_1C07A0FAC();
  *(_QWORD *)(v0 + 632) = v40;
  v40[2] = v21;
  v40[3] = v20;
  sub_1C07A1344(v40);
  sub_1C077AEBC();
  sub_1C077E474();
  if (qword_1ED75AC58 != -1)
    swift_once();
  sub_1C078FAAC();
  *(_QWORD *)(v0 + 696) = v35;
  *(_QWORD *)(v0 + 704) = v36;
  v41 = (_QWORD *)sub_1C07A0FAC();
  *(_QWORD *)(v0 + 672) = v41;
  v41[2] = v21;
  v41[3] = v20;
  sub_1C07A1344(v41);
  sub_1C077AEBC();
  sub_1C077E474();
  if (qword_1ED75AC60 != -1)
    swift_once();
  sub_1C078FAAC();
  *(_QWORD *)(v0 + 736) = v35;
  *(_QWORD *)(v0 + 744) = v36;
  v42 = (_QWORD *)sub_1C07A0FAC();
  *(_QWORD *)(v0 + 712) = v42;
  v42[2] = v21;
  v42[3] = v20;
  sub_1C07A1344(v42);
  sub_1C077AEBC();
  sub_1C077E474();
  return v0;
}

void sub_1C0CD3578()
{
  *(_QWORD *)&xmmword_1ED78D190 = 0xD000000000000013;
  *((_QWORD *)&xmmword_1ED78D190 + 1) = 0x80000001C1108210;
  qword_1ED78D1A8 = 0;
  qword_1ED78D1B0 = 0;
  qword_1ED78D1A0 = (uint64_t)&unk_1E7A04330;
}

void sub_1C0CD35B0()
{
  *(_QWORD *)&xmmword_1ED78D258 = 0xD000000000000010;
  *((_QWORD *)&xmmword_1ED78D258 + 1) = 0x80000001C1108270;
  sub_1C0799044(&xmmword_1ED78D258);
}

void sub_1C0CD35E0()
{
  *(_QWORD *)&xmmword_1ED78D370 = 0x496E6F6973736573;
  *((_QWORD *)&xmmword_1ED78D370 + 1) = 0xE900000000000064;
  sub_1C0799044(&xmmword_1ED78D370);
}

void sub_1C0CD3610()
{
  qword_1ED78D2A8 = 0xD000000000000011;
  unk_1ED78D2B0 = 0x80000001C11082D0;
  sub_1C0799044(&qword_1ED78D2A8);
}

void sub_1C0CD3640()
{
  qword_1ED78D0F0 = 0xD000000000000014;
  *(_QWORD *)algn_1ED78D0F8 = 0x80000001C1108360;
  sub_1C0799044(&qword_1ED78D0F0);
}

void sub_1C0CD3670()
{
  qword_1ED78D348 = 0xD000000000000019;
  unk_1ED78D350 = 0x80000001C11082B0;
  sub_1C0799044(&qword_1ED78D348);
}

void sub_1C0CD36A0()
{
  qword_1EF6D1D70 = 0xD00000000000001CLL;
  *(_QWORD *)algn_1EF6D1D78 = 0x80000001C1108380;
  sub_1C0799044(&qword_1EF6D1D70);
}

void sub_1C0CD36D0()
{
  strcpy((char *)&qword_1ED78D1E0, "currentPhase");
  BYTE5(qword_1ED78D1E8) = 0;
  HIWORD(qword_1ED78D1E8) = -5120;
  sub_1C0799044(&qword_1ED78D1E0);
}

void sub_1C0CD3704()
{
  qword_1ED78D168 = 0xD000000000000010;
  unk_1ED78D170 = 0x80000001C1108250;
  sub_1C0799044(&qword_1ED78D168);
}

void sub_1C0CD3734()
{
  *(_QWORD *)&xmmword_1ED78D648 = 0xD000000000000018;
  *((_QWORD *)&xmmword_1ED78D648 + 1) = 0x80000001C11081F0;
  sub_1C0799044(&xmmword_1ED78D648);
}

void sub_1C0CD3764()
{
  *(_QWORD *)&xmmword_1ED78D140 = 0xD000000000000019;
  *((_QWORD *)&xmmword_1ED78D140 + 1) = 0x80000001C11081B0;
  sub_1C07A3E7C(&xmmword_1ED78D140);
}

void sub_1C0CD379C()
{
  sub_1C0CD37B0();
}

void sub_1C0CD37B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  double v18;
  char v19;
  char v20;
  double v21;
  double v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD v37[2];
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  _OWORD v44[2];
  uint64_t v45;

  v1 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1C106ADE0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0B79648();
  if (!v0)
  {
    v27 = v5;
    if (qword_1ED755CA8 != -1)
      swift_once();
    v39 = xmmword_1ED78D648;
    v40 = *(_OWORD *)&qword_1ED78D658;
    v41 = qword_1ED78D668;
    v42 = xmmword_1ED78D648;
    v8 = unk_1ED78D660;
    v43 = qword_1ED78D658;
    sub_1C07B35DC((uint64_t)&v42);
    sub_1C08FD4A0((uint64_t)&v43);
    sub_1C0BCD07C(v8);
    sub_1C0CD2580();
    sub_1C07B2F5C((uint64_t)&v42);
    sub_1C08EE9A0((uint64_t)&v43);
    sub_1C077AB58(v8);
    v9 = v27;
    if (sub_1C07B2D80((uint64_t)v3, 1, v4) == 1)
    {
      sub_1C077CDB4((uint64_t)v3);
      if (qword_1ED762B18 != -1)
        swift_once();
      v10 = sub_1C106F544();
      sub_1C079E000(v10, (uint64_t)qword_1ED762AF8);
      v11 = sub_1C106F538();
      v12 = sub_1C1070390();
      if (os_log_type_enabled(v11, v12))
      {
        v13 = (uint8_t *)swift_slowAlloc();
        v14 = swift_slowAlloc();
        *(_DWORD *)v13 = 136315138;
        v29 = v14;
        v28 = &unk_1E7A2A980;
        sub_1C07ACF80(&qword_1EF647150);
        v15 = sub_1C106FB5C();
        v28 = (void *)sub_1C0788DAC(v15, v16, &v29);
        sub_1C10705AC();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C0771000, v11, v12, "%s lastPipelineRunStartDate is nil", v13, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BA8270](v14, -1, -1);
        MEMORY[0x1C3BA8270](v13, -1, -1);
      }

    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v7, v3, v4);
      if (qword_1ED75AC48 != -1)
        swift_once();
      v37[0] = xmmword_1ED78D280;
      v37[1] = *(_OWORD *)&qword_1ED78D290;
      v38 = qword_1ED78D2A0;
      v44[0] = xmmword_1ED78D280;
      v17 = qword_1ED78D298;
      v45 = qword_1ED78D290;
      sub_1C07B35DC((uint64_t)v44);
      sub_1C08FD4A0((uint64_t)&v45);
      sub_1C0BCD07C(v17);
      v18 = COERCE_DOUBLE(sub_1C0CD261C((uint64_t)v37, 0, 0));
      v20 = v19;
      sub_1C07B2F5C((uint64_t)v44);
      sub_1C08EE9A0((uint64_t)&v45);
      sub_1C077AB58(v17);
      if ((v20 & 1) != 0)
        v21 = 0.0;
      else
        v21 = v18;
      sub_1C106AC60();
      v23 = v22;
      sub_1C106AC60();
      v25 = qword_1ED78D298;
      v30 = xmmword_1ED78D280;
      v31 = qword_1ED78D290;
      v32 = qword_1ED78D298;
      v33 = qword_1ED78D2A0;
      v34 = v21 + v23 - v24;
      v35 = qword_1ED78D298;
      v36 = qword_1ED78D2A0;
      sub_1C0BCD07C(qword_1ED78D298);
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C0D43648((__n128 *)&v30);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C077AB58(v25);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v4);
    }
  }
}

void sub_1C0CD3C94()
{
  *(_QWORD *)&xmmword_1ED78D280 = 0xD000000000000010;
  *((_QWORD *)&xmmword_1ED78D280 + 1) = 0x80000001C11081D0;
  qword_1ED78D298 = 0;
  qword_1ED78D2A0 = 0;
  qword_1ED78D290 = (uint64_t)&unk_1E7A04360;
}

void sub_1C0CD3CCC()
{
  qword_1ED78D6C0[0] = 0xD000000000000017;
  unk_1ED78D6C8 = 0x80000001C1108230;
  sub_1C0799044(qword_1ED78D6C0);
}

void sub_1C0CD3CFC()
{
  qword_1ED78D118 = 0xD00000000000001CLL;
  unk_1ED78D120 = 0x80000001C1108340;
  sub_1C0799044(&qword_1ED78D118);
}

void sub_1C0CD3D2C()
{
  *(_QWORD *)&xmmword_1ED78D5F8 = 0xD00000000000001CLL;
  *((_QWORD *)&xmmword_1ED78D5F8 + 1) = 0x80000001C1108290;
  sub_1C0799044(&xmmword_1ED78D5F8);
}

void sub_1C0CD3D5C()
{
  qword_1ED78D620 = 0xD000000000000025;
  *(_QWORD *)algn_1ED78D628 = 0x80000001C11082F0;
  sub_1C0799044(&qword_1ED78D620);
}

void sub_1C0CD3D8C()
{
  qword_1ED78D2D0[0] = 0xD000000000000013;
  unk_1ED78D2D8 = 0x80000001C1108190;
  sub_1C07A3E7C(qword_1ED78D2D0);
}

void sub_1C0CD3DC4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v4 = *a3;
  v5 = sub_1C0CD2638(a2, 0, 0);
  if (!v3)
  {
    if ((v6 & 1) == 0 && __OFADD__(v4, v5))
      __break(1u);
    else
      sub_1C0B79934();
  }
}

void sub_1C0CD3E28()
{
  qword_1ED78D670[0] = 0xD000000000000015;
  unk_1ED78D678 = 0x80000001C1108170;
  sub_1C07A3E7C(qword_1ED78D670);
}

void sub_1C0CD3E60(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v4 = *a3;
  v5 = sub_1C0CD2638(a2, 0, 0);
  if (!v3)
  {
    if ((v6 & 1) == 0 && __OFADD__(v4, v5))
      __break(1u);
    else
      sub_1C0B79934();
  }
}

void sub_1C0CD3EC4()
{
  qword_1ED78D698[0] = 0xD000000000000015;
  unk_1ED78D6A0 = 0x80000001C1108150;
  sub_1C07A3E7C(qword_1ED78D698);
}

void sub_1C0CD3EFC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v4 = *a3;
  v5 = sub_1C0CD2638(a2, 0, 0);
  if (!v3)
  {
    if ((v6 & 1) == 0 && __OFADD__(v4, v5))
      __break(1u);
    else
      sub_1C0B79934();
  }
}

void sub_1C0CD3F60()
{
  *(_QWORD *)&xmmword_1ED78D1B8 = 0x6D614E6573616870;
  *((_QWORD *)&xmmword_1ED78D1B8 + 1) = 0xEA00000000007365;
  sub_1C07A3E7C(&xmmword_1ED78D1B8);
}

uint64_t sub_1C0CD3F98(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_1C0CD3FCC(a1, a2, *a3, a3[1]);
}

uint64_t sub_1C0CD3FCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1C07ACF80(&qword_1ED762CB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1079220;
  *(_QWORD *)(inited + 32) = a3;
  *(_QWORD *)(inited + 40) = a4;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AA7704();
  v9 = v8;
  v10 = sub_1C07F8030();
  if (!v4)
  {
    if (v10)
      sub_1C089ED40(v10, v9);
    sub_1C0B7A244();
  }
  return swift_bridgeObjectRelease();
}

void sub_1C0CD409C()
{
  *(_QWORD *)&xmmword_1ED78D320 = 0xD000000000000015;
  *((_QWORD *)&xmmword_1ED78D320 + 1) = 0x80000001C1108320;
  sub_1C07A3E7C(&xmmword_1ED78D320);
}

uint64_t sub_1C0CD40D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  _BYTE *v10;

  if (a5)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C106FC94();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C106FC94();
    swift_bridgeObjectRelease();
    sub_1C0B79648();
    return swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v6 = sub_1C106F544();
    sub_1C079E000(v6, (uint64_t)qword_1ED762AF8);
    v7 = sub_1C106F538();
    v8 = sub_1C1070390();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_1C0771000, v7, v8, "<PipelineStatus> Phase specific status should always have a keyPrefix", v9, 2u);
      MEMORY[0x1C3BA8270](v9, -1, -1);
    }

    sub_1C0CD471C();
    swift_allocError();
    *v10 = 0;
    return swift_willThrow();
  }
}

uint64_t sub_1C0CD425C(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _BYTE *v11;

  if (a5)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C106FC94();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C106FC94();
    swift_bridgeObjectRelease();
    sub_1C0B7A134(a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v7 = sub_1C106F544();
    sub_1C079E000(v7, (uint64_t)qword_1ED762AF8);
    v8 = sub_1C106F538();
    v9 = sub_1C1070390();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_1C0771000, v8, v9, "<PipelineStatus> Phase specific status should always have a keyPrefix", v10, 2u);
      MEMORY[0x1C3BA8270](v10, -1, -1);
    }

    sub_1C0CD471C();
    swift_allocError();
    *v11 = 0;
    return swift_willThrow();
  }
}

void sub_1C0CD43E4()
{
  strcpy((char *)&xmmword_1ED78D208, "phaseStartTime");
  HIBYTE(xmmword_1ED78D208) = -18;
  sub_1C07A3E7C(&xmmword_1ED78D208);
}

uint64_t sub_1C0CD4424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C0CD40D4(a1, a2, a3, a4, a5);
}

void sub_1C0CD4438()
{
  qword_1ED78D2F8 = 0xD000000000000015;
  unk_1ED78D300 = 0x80000001C1108130;
  sub_1C07A3E7C(&qword_1ED78D2F8);
}

void sub_1C0CD4470()
{
  strcpy((char *)&xmmword_1ED78D230, "phaseTimeSpent");
  HIBYTE(xmmword_1ED78D230) = -18;
  sub_1C07A3E7C(&xmmword_1ED78D230);
}

uint64_t sub_1C0CD44B0(uint64_t a1, uint64_t a2, double *a3, uint64_t a4, uint64_t a5)
{
  return sub_1C0CD425C(*a3, a1, a2, a4, a5);
}

uint64_t sub_1C0CD44D0()
{
  unint64_t v0;

  v0 = sub_1C1070A2C();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t sub_1C0CD4518(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0CD454C + 4 * byte_1C10B3460[a1]))(0x676E696E6E7572, 0xE700000000000000);
}

uint64_t sub_1C0CD454C()
{
  return 0x656C6C65636E6163;
}

unint64_t sub_1C0CD457C()
{
  return 0xD000000000000018;
}

void sub_1C0CD4598()
{
  sub_1C08C6EE8();
}

void sub_1C0CD45A4()
{
  sub_1C0A5407C();
}

void sub_1C0CD45AC()
{
  sub_1C08CA3E8();
}

void sub_1C0CD45B4()
{
  sub_1C0A54B8C();
}

uint64_t sub_1C0CD45BC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C0CD44D0();
  *a1 = result;
  return result;
}

uint64_t sub_1C0CD45E8@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1C0CD4518(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C0CD4610()
{
  sub_1C0CD49D0();
  return sub_1C106FE8C();
}

uint64_t sub_1C0CD466C()
{
  sub_1C0CD49D0();
  return sub_1C106FE50();
}

unint64_t sub_1C0CD46B8(char a1)
{
  if (!a1)
    return 0xD000000000000039;
  if (a1 == 1)
    return 0xD00000000000001DLL;
  return 0xD000000000000044;
}

unint64_t sub_1C0CD4714()
{
  char *v0;

  return sub_1C0CD46B8(*v0);
}

unint64_t sub_1C0CD471C()
{
  unint64_t result;

  result = qword_1EF647158;
  if (!qword_1EF647158)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B3644, &unk_1E7A2A960);
    atomic_store(result, (unint64_t *)&qword_1EF647158);
  }
  return result;
}

uint64_t sub_1C0CD4770(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_1C07D4BEC(a2);
    result = MEMORY[0x1C3BA8174](&unk_1C10B9F9C, v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0CD47B4(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1C0CD4800 + 4 * byte_1C10B3469[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1C0CD4834 + 4 * byte_1C10B3464[v4]))();
}

uint64_t sub_1C0CD4834(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0CD483C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0CD4844);
  return result;
}

uint64_t sub_1C0CD4850(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0CD4858);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1C0CD485C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0CD4864(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for PipelineStatus.FinishStatusOfRun()
{
  sub_1C0779604();
}

uint64_t sub_1C0CD487C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C0CD48C8 + 4 * byte_1C10B3473[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C0CD48FC + 4 * byte_1C10B346E[v4]))();
}

uint64_t sub_1C0CD48FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0CD4904(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0CD490CLL);
  return result;
}

uint64_t sub_1C0CD4918(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0CD4920);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C0CD4924(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0CD492C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for PipelineStatusError()
{
  sub_1C0779604();
}

void type metadata accessor for PipelineStatus()
{
  sub_1C0779604();
}

unint64_t sub_1C0CD4954()
{
  unint64_t result;

  result = qword_1EF647160;
  if (!qword_1EF647160)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B352C, &unk_1E7A2A960);
    atomic_store(result, (unint64_t *)&qword_1EF647160);
  }
  return result;
}

unint64_t sub_1C0CD4994()
{
  unint64_t result;

  result = qword_1EF647168;
  if (!qword_1EF647168)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B35CC, &unk_1E7A2A8D0);
    atomic_store(result, (unint64_t *)&qword_1EF647168);
  }
  return result;
}

unint64_t sub_1C0CD49D0()
{
  unint64_t result;

  result = qword_1ED75ABE0;
  if (!qword_1ED75ABE0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B3554, &unk_1E7A2A8D0);
    atomic_store(result, (unint64_t *)&qword_1ED75ABE0);
  }
  return result;
}

uint64_t sub_1C0CD4A0C(uint64_t a1, uint64_t a2, double *a3, uint64_t a4, uint64_t a5)
{
  return sub_1C0CD44B0(a1, a2, a3, a4, a5);
}

uint64_t sub_1C0CD4A20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C0CD4424(a1, a2, a3, a4, a5);
}

uint64_t PipelineType.rawValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1C077F0E4();
  return ((uint64_t (*)(uint64_t))((char *)sub_1C0CD4A60 + 4 * byte_1C10B3690[v1]))(v0);
}

uint64_t sub_1C0CD4A60()
{
  return 1819047270;
}

uint64_t sub_1C0CD4A70()
{
  return 0x61746C6564;
}

uint64_t sub_1C0CD4A84()
{
  return sub_1C078AC04();
}

void *static PipelineType.allCases.getter()
{
  return &unk_1E7A04308;
}

void PipelineType.description.getter()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1C1070774();
  swift_bridgeObjectRelease();
  sub_1C077F0E4();
  __asm { BR              X9 }
}

uint64_t sub_1C0CD4B20()
{
  uint64_t v1;

  sub_1C106FC94();
  sub_1C07767AC();
  sub_1C106FC94();
  return v1;
}

void static PipelineType.< infix(_:_:)()
{
  sub_1C077F0E4();
  __asm { BR              X11 }
}

uint64_t sub_1C0CD4BC4@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1C0CD4C04 + 4 * byte_1C10B369C[a1]))(1819047270);
}

uint64_t sub_1C0CD4C04(uint64_t a1)
{
  uint64_t v1;
  char v3;

  if (a1 == 1819047270 && v1 == 0xE400000000000000)
    v3 = 0;
  else
    v3 = sub_1C1070CB4();
  sub_1C07767AC();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

IntelligencePlatformCore::PipelineType_optional __swiftcall PipelineType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  IntelligencePlatformCore::PipelineType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1C1070A2C();
  result.value = sub_1C07767AC();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

void sub_1C0CD4CE0()
{
  sub_1C08C428C();
}

void sub_1C0CD4CEC()
{
  sub_1C0A54088();
}

void sub_1C0CD4CF4()
{
  sub_1C08CA590();
}

void sub_1C0CD4CFC()
{
  sub_1C0A54D1C();
}

IntelligencePlatformCore::PipelineType_optional sub_1C0CD4D04(Swift::String *a1)
{
  return PipelineType.init(rawValue:)(*a1);
}

uint64_t sub_1C0CD4D10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = PipelineType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C0CD4D38()
{
  sub_1C0CD4F6C();
  return sub_1C106FE8C();
}

uint64_t sub_1C0CD4D94()
{
  sub_1C0CD4F6C();
  return sub_1C106FE50();
}

void sub_1C0CD4DE4()
{
  sub_1C0C6470C();
}

void sub_1C0CD4DF0()
{
  sub_1C0C64424();
}

void sub_1C0CD4DFC()
{
  sub_1C0F1D938();
}

void sub_1C0CD4E08(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7A04308;
}

unint64_t sub_1C0CD4E1C()
{
  unint64_t result;

  result = qword_1EF647170;
  if (!qword_1EF647170)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PipelineType, &type metadata for PipelineType);
    atomic_store(result, (unint64_t *)&qword_1EF647170);
  }
  return result;
}

unint64_t sub_1C0CD4E5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF647178;
  if (!qword_1EF647178)
  {
    v1 = sub_1C07D4BEC((uint64_t *)&unk_1ED755EF0);
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF647178);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PipelineType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1C0CD4EEC + 4 * byte_1C10B36A5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1C0CD4F20 + 4 * byte_1C10B36A0[v4]))();
}

uint64_t sub_1C0CD4F20(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0CD4F28(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0CD4F30);
  return result;
}

uint64_t sub_1C0CD4F3C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0CD4F44);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1C0CD4F48(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0CD4F50(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PipelineType()
{
  return &type metadata for PipelineType;
}

unint64_t sub_1C0CD4F6C()
{
  unint64_t result;

  result = qword_1ED75A6C8;
  if (!qword_1ED75A6C8)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PipelineType, &type metadata for PipelineType);
    atomic_store(result, (unint64_t *)&qword_1ED75A6C8);
  }
  return result;
}

uint64_t sub_1C0CD4FA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v4 = v3;
  v26 = a3;
  v6 = type metadata accessor for FeatureProviderSnapshot(0);
  v24 = *(_QWORD *)(v6 - 8);
  v25 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    v27 = MEMORY[0x1E0DEE9D8];
    sub_1C09D3218();
    v10 = v27;
    v11 = sub_1C106ADE0();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v22 = *(_QWORD *)(v12 + 72);
    v23 = v11;
    v21 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    do
    {
      v21(v8, v13, v23);
      v14 = sub_1C0CD52F4();
      v15 = sub_1C0CD5978(v14);
      swift_bridgeObjectRelease();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v16 = v4;
      sub_1C0CD6604(v15);
      swift_bridgeObjectRelease();
      sub_1C089B840();
      v18 = v17;
      swift_release();
      *(_QWORD *)&v8[*(int *)(v25 + 20)] = v18;
      v27 = v10;
      v19 = *(_QWORD *)(v10 + 16);
      if (v19 >= *(_QWORD *)(v10 + 24) >> 1)
      {
        sub_1C09D3218();
        v10 = v27;
      }
      *(_QWORD *)(v10 + 16) = v19 + 1;
      sub_1C07E7EF8((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(_QWORD *)(v24 + 72) * v19);
      v13 += v22;
      --v9;
      v4 = v16;
    }
    while (v9);
    swift_release();
  }
  else
  {
    swift_release();
    v10 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  return v10;
}

void sub_1C0CD5208()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v0 = sub_1C0CD7BE4();
  v1 = v0[2];
  if (v1)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1C09D30E0();
    v2 = 0;
    v3 = v9;
    do
    {
      v4 = sub_1C0CD7BF0(*((_BYTE *)v0 + v2 + 32));
      v6 = v5;
      v7 = *(_QWORD *)(v9 + 16);
      if (v7 >= *(_QWORD *)(v9 + 24) >> 1)
        sub_1C09D30E0();
      ++v2;
      *(_QWORD *)(v9 + 16) = v7 + 1;
      v8 = v9 + 16 * v7;
      *(_QWORD *)(v8 + 32) = v4;
      *(_QWORD *)(v8 + 40) = v6;
    }
    while (v1 != v2);
    sub_1C07767AC();
  }
  else
  {
    sub_1C07767AC();
    v3 = MEMORY[0x1E0DEE9D8];
  }
  sub_1C0898D28(v3);
}

uint64_t sub_1C0CD52F4()
{
  uint64_t v0;
  void *v1;
  uint64_t v3;

  v1 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C0CD5348(v0, &v3);
  objc_autoreleasePoolPop(v1);
  return v3;
}

uint64_t sub_1C0CD5348@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, void *);
  void *v19;
  void (*v20)(void *);
  uint64_t v21;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = 0;
  *(_BYTE *)(v4 + 24) = 1;
  v5 = *(void **)(a1 + 16);
  sub_1C106AC60();
  v6 = (void *)sub_1C1070168();
  v7 = objc_msgSend(v5, sel_publisherWithStartTime_endTime_maxEvents_reversed_, v6, 0, 0, 1);

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = MEMORY[0x1E0DEE9D8];
  v20 = sub_1C0CD5554;
  v21 = 0;
  v9 = MEMORY[0x1E0C809B0];
  v16 = MEMORY[0x1E0C809B0];
  v17 = 1107296256;
  v18 = (void (*)(uint64_t, void *))sub_1C07BF90C;
  v19 = &unk_1E7A2AC50;
  v10 = _Block_copy(&v16);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v4;
  *(_QWORD *)(v11 + 24) = v8;
  v20 = sub_1C0CD65FC;
  v21 = v11;
  v16 = v9;
  v17 = 1107296256;
  v18 = sub_1C0779530;
  v19 = &unk_1E7A2ACA0;
  v12 = _Block_copy(&v16);
  v13 = v7;
  swift_retain();
  swift_retain();
  swift_release();
  v14 = objc_msgSend(v13, sel_sinkWithCompletion_receiveInput_, v10, v12);

  _Block_release(v12);
  _Block_release(v10);

  swift_beginAccess();
  *a2 = *(_QWORD *)(v8 + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_release();
  return swift_release();
}

void sub_1C0CD5554(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;

  v1 = objc_msgSend(a1, sel_error);
  if (v1)
  {
    v2 = v1;
    if (qword_1ED762B18 != -1)
      swift_once();
    v3 = sub_1C106F544();
    sub_1C079E000(v3, (uint64_t)qword_1ED762AF8);
    v11 = v2;
    v4 = sub_1C106F538();
    v5 = sub_1C1070390();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      v7 = swift_slowAlloc();
      v12 = v7;
      *(_DWORD *)v6 = 136315138;
      v8 = v11;
      sub_1C07ACF80(&qword_1ED7614F0);
      v9 = sub_1C106FB5C();
      sub_1C0788DAC(v9, v10, &v12);
      sub_1C10705AC();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C0771000, v4, v5, "Fetching POICategoryEvent from BMPOICategoryEvent failed with error: %s", v6, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v7, -1, -1);
      MEMORY[0x1C3BA8270](v6, -1, -1);

    }
    else
    {

    }
  }
}

void sub_1C0CD5754(void *a1, uint64_t a2, uint64_t a3)
{
  id v5;
  id v6;
  double *v7;
  double v8;
  double v9;
  uint64_t v10;
  os_log_type_t v11;
  uint8_t *v12;
  double v13;
  double v14;
  NSObject *oslog;

  v5 = objc_msgSend(a1, sel_eventBody);
  if (v5)
  {
    v6 = v5;
    v7 = (double *)(a2 + 16);
    swift_beginAccess();
    if ((*(_BYTE *)(a2 + 24) & 1) != 0)
    {
      objc_msgSend(v6, sel_timeIntervalSince1970);
      v9 = v8;
    }
    else
    {
      v9 = *v7;
    }
    swift_beginAccess();
    *(double *)(a2 + 16) = v9;
    *(_BYTE *)(a2 + 24) = 0;
    objc_msgSend(v6, sel_timeIntervalSince1970);
    v14 = v13;
    swift_beginAccess();
    if ((*(_BYTE *)(a2 + 24) & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      if (v14 >= *v7 && (uint64_t)objc_msgSend(v6, sel_rank) <= 4)
      {
        swift_beginAccess();
        v6 = v6;
        MEMORY[0x1C3BA6800]();
        sub_1C078442C(*(_QWORD *)((*(_QWORD *)(a3 + 16) & 0xFFFFFFFFFFFFF8) + 0x10));
        sub_1C106FFC4();
        sub_1C106FF28();
        swift_endAccess();
      }

    }
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v10 = sub_1C106F544();
    sub_1C079E000(v10, (uint64_t)qword_1ED762AF8);
    oslog = sub_1C106F538();
    v11 = sub_1C10703A8();
    if (os_log_type_enabled(oslog, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_1C0771000, oslog, v11, "Unable to parse eventBody from read event in poi category featurizer", v12, 2u);
      MEMORY[0x1C3BA8270](v12, -1, -1);
    }

  }
}

uint64_t sub_1C0CD5978(unint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  unint64_t v10;
  unint64_t v11;
  unsigned __int8 v12;
  id v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  uint64_t result;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  id v63;
  unint64_t v64;
  uint64_t v65;
  void *v66;

  v61 = sub_1C07D97D4();
  v2 = (_QWORD *)sub_1C106F97C();
  if (a1 >> 62)
  {
LABEL_29:
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v3 = sub_1C10709B4();
    if (v3)
      goto LABEL_3;
LABEL_24:
    swift_bridgeObjectRelease();
    return (uint64_t)v2;
  }
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  if (!v3)
    goto LABEL_24;
LABEL_3:
  v63 = (id)objc_opt_self();
  v64 = a1 & 0xC000000000000001;
  v4 = 4;
  v62 = v3;
  while (1)
  {
    if (v64)
      v5 = (id)MEMORY[0x1C3BA70DC](v4 - 4, a1);
    else
      v5 = *(id *)(a1 + 8 * v4);
    v6 = v5;
    v7 = v4 - 3;
    if (__OFADD__(v4 - 4, 1))
    {
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    v8 = objc_msgSend(v5, sel_poiCategory);
    v9 = sub_1C106FB14();
    v11 = v10;

    v12 = sub_1C0CD6870(v9, v11);
    v13 = objc_msgSend(v6, sel_rank);
    if (__OFADD__(v13, 1))
      goto LABEL_26;
    v66 = v6;
    v14 = round(1.0 / (double)((uint64_t)v13 + 1) * 100.0) / 100.0;
    v15 = sub_1C0CD7BF0(v12);
    v17 = v16;
    v18 = objc_msgSend(v63, sel_featureValueWithDouble_, v14);
    if (!v18)
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v35 = sub_1C079AEC4();
      v37 = v36;
      v38 = sub_1C077960C();
      if ((v37 & 1) != 0)
      {
        swift_isUniquelyReferenced_nonNull_native();
        sub_1C07ACF80(&qword_1ED758E28);
        sub_1C107090C();
        swift_bridgeObjectRelease();
        v46 = *(void **)(v2[7] + 8 * v35);
        v47 = sub_1C1070924();
        sub_1C07A4B24(v47, v48, v49, v50, v51, v52, v53, v54, v60, v61, v62, (uint64_t)v63, v64, v65, v66);

        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1C07A4B24(v38, v39, v40, v41, v42, v43, v44, v45, v60, v61, v62, (uint64_t)v63, v64, v65, v66);
      }
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
    v19 = v18;
    v65 = v4 - 3;
    v20 = a1;
    swift_isUniquelyReferenced_nonNull_native();
    v21 = sub_1C077D774(v15, v17);
    if (__OFADD__(v2[2], (v22 & 1) == 0))
      goto LABEL_27;
    v23 = v21;
    a1 = v22;
    sub_1C07ACF80(&qword_1ED758E28);
    if ((sub_1C107090C() & 1) != 0)
      break;
LABEL_14:
    if ((a1 & 1) != 0)
    {
      v26 = v2[7];

      *(_QWORD *)(v26 + 8 * v23) = v19;
    }
    else
    {
      v2[(v23 >> 6) + 8] |= 1 << v23;
      v55 = (uint64_t *)(v2[6] + 16 * v23);
      *v55 = v15;
      v55[1] = v17;
      *(_QWORD *)(v2[7] + 8 * v23) = v19;
      v56 = v2[2];
      v57 = __OFADD__(v56, 1);
      v58 = v56 + 1;
      if (v57)
        goto LABEL_28;
      v2[2] = v58;
      v27 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    }
    sub_1C07A4B24(v27, v28, v29, v30, v31, v32, v33, v34, v60, v61, v62, (uint64_t)v63, v64, v7, v66);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a1 = v20;
    v3 = v62;
    v7 = v65;
LABEL_23:
    ++v4;
    if (v7 == v3)
      goto LABEL_24;
  }
  v24 = sub_1C079AEC4();
  if ((a1 & 1) == (v25 & 1))
  {
    v23 = v24;
    goto LABEL_14;
  }
  result = sub_1C1070D44();
  __break(1u);
  return result;
}

uint64_t sub_1C0CD5D30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  swift_retain();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  result = sub_1C0CD4FA8(a2, v3, a1);
  *a3 = result;
  return result;
}

uint64_t sub_1C0CD5D84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v0 = sub_1C106ADE0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  sub_1C0778564();
  v4 = v3 - v2;
  sub_1C106ADA4();
  v5 = sub_1C0CD52F4();
  v6 = sub_1C0CD5978(v5);
  sub_1C077960C();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v4, v0);
  return v6;
}

void sub_1C0CD5E14(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v17;

  v4 = v2;
  v17 = sub_1C07ACF80(&qword_1ED7482B0);
  MEMORY[0x1E0C80A78](v17);
  sub_1C0778564();
  v5 = sub_1C07ACF80(&qword_1EF646F68);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  sub_1C0778564();
  v9 = v8 - v7;
  v10 = *(void **)(v2 + 16);
  sub_1C106AC60();
  v11 = (void *)sub_1C1070168();
  sub_1C07ACF80(&qword_1ED75D0B8);
  sub_1C106AC60();
  v12 = (void *)sub_1C1070168();
  v13 = objc_msgSend(v10, sel_publisherWithStartTime_endTime_maxEvents_reversed_, v11, v12, 0, 0);

  v14 = v13;
  sub_1C07ACF80((uint64_t *)&unk_1ED74D318);
  sub_1C106ED88();
  if (v3)
  {

  }
  else
  {
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = v4;
    *(_QWORD *)(v15 + 24) = a1;
    type metadata accessor for FeatureProviderChange(0);
    sub_1C0AAF218(&qword_1EF6471F0, &qword_1ED7482B0);
    swift_retain();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_retain();
    sub_1C1070C00();
    swift_release();

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(a2, v9, v5);
  }
}

uint64_t sub_1C0CD6020(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[8] = a3;
  v4[9] = a4;
  v4[7] = a1;
  v6 = sub_1C106ADE0();
  v4[10] = v6;
  v4[11] = *(_QWORD *)(v6 - 8);
  v7 = swift_task_alloc();
  v8 = *a2;
  v4[12] = v7;
  v4[13] = v8;
  return swift_task_switch();
}

uint64_t sub_1C0CD608C()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t inited;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v23;

  v1 = objc_msgSend(*(id *)(v0 + 104), sel_eventBody);
  if (!v1)
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v5 = sub_1C106F544();
    sub_1C079E000(v5, (uint64_t)qword_1ED762AF8);
    v6 = sub_1C106F538();
    v7 = sub_1C10703A8();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_1C0771000, v6, v7, "Unable to parse eventBody from read event in POI category featurizer", v8, 2u);
      MEMORY[0x1C3BA8270](v8, -1, -1);
    }
    v9 = *(_QWORD *)(v0 + 56);

    v10 = sub_1C0788240();
    v11 = v9;
    v12 = 1;
    goto LABEL_10;
  }
  v2 = v1;
  if (!objc_msgSend(v1, sel_rank))
  {
    v13 = *(_QWORD *)(v0 + 96);
    v14 = *(_QWORD *)(v0 + 80);
    v15 = *(_QWORD *)(v0 + 88);
    v16 = *(_QWORD *)(v0 + 56);
    objc_msgSend(*(id *)(v0 + 104), sel_timestamp);
    sub_1C106AC54();
    sub_1C07ACF80(&qword_1ED762CD0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C10812D0;
    *(_QWORD *)(inited + 32) = v2;
    v23 = inited;
    sub_1C106FF28();
    v18 = v2;
    v19 = sub_1C0CD5978(v23);
    sub_1C077960C();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0CD6604(v19);
    swift_bridgeObjectRelease();
    sub_1C089B840();
    v21 = v20;

    swift_release();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v16, v13, v14);
    v10 = sub_1C0788240();
    *(_BYTE *)(v16 + *(int *)(v10 + 20)) = 2;
    *(_QWORD *)(v16 + *(int *)(v10 + 24)) = v21;
    v11 = v16;
    v12 = 0;
LABEL_10:
    sub_1C07B2D8C(v11, v12, 1, v10);
    goto LABEL_11;
  }
  v3 = *(_QWORD *)(v0 + 56);
  v4 = sub_1C0788240();
  sub_1C07B2D8C(v3, 1, 1, v4);

LABEL_11:
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1C0CD62E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;

  v4 = sub_1C106ADE0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1C0778564();
  v8 = v7 - v6;
  sub_1C106ADA4();
  v9 = sub_1C0CD52F4();
  sub_1C0CD5978(v9);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
  sub_1C07767B4();
  v10 = (void *)sub_1C07A3EA0();
  sub_1C07767AC();

  if (v10)
  {
    sub_1C07767B4();
    v11 = sub_1C07A3EA0();
    sub_1C07767AC();
    sub_1C077960C();
  }
  else
  {
    sub_1C077960C();
    sub_1C0CD5208();
    sub_1C0A791CC(a1, a2, v12);
    v14 = v13;
    sub_1C077960C();
    if ((v14 & 1) != 0)
      return objc_msgSend((id)objc_opt_self(), sel_featureValueWithDouble_, 0.0);
    else
      return 0;
  }
  return (id)v11;
}

uint64_t sub_1C0CD6470()
{
  return sub_1C0CD5D84();
}

uint64_t sub_1C0CD6490@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C0CD5D30(a1, a2, a3);
}

void sub_1C0CD64B0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0CD5E14(a1, a2);
}

void sub_1C0CD64D0()
{
  sub_1C0CD5208();
}

uint64_t sub_1C0CD64E4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C0CD64F4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C0CD6504(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1C0CD6550(&qword_1EF6471D0);
  result = sub_1C0CD6550(&qword_1EF6471D8);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1C0CD6550(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (!result)
  {
    type metadata accessor for PoiCategorySignal();
    sub_1C077D8A0();
  }
  return result;
}

uint64_t sub_1C0CD6588(uint64_t a1)
{
  uint64_t result;

  result = sub_1C0CD6550(&qword_1EF6471D8);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1C0CD65BC()
{
  return swift_deallocObject();
}

uint64_t sub_1C0CD65CC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0CD65F0()
{
  return sub_1C0CD676C((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

void sub_1C0CD65FC(void *a1)
{
  uint64_t v1;

  sub_1C0CD5754(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1C0CD6604(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t isStackAllocationSafe;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1;
  v3 = *(_BYTE *)(a1 + 32) & 0x3F;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v3 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    sub_1C078ACF0();
    sub_1C07767B4();
    sub_1C07A3E88();
    if (v1)
      swift_willThrow();
    else
      v2 = v5;
    sub_1C07878E4();
  }
  else
  {
    v6 = swift_slowAlloc();
    sub_1C078ACF0();
    sub_1C07767B4();
    sub_1C07A3E88();
    v2 = v7;
    MEMORY[0x1C3BA8270](v6, -1, -1);
    sub_1C07878E4();
  }
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1C0CD6760()
{
  return sub_1C0CD676C((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1C0CD676C(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release();
  a1(*(_QWORD *)(v1 + 24));
  return swift_deallocObject();
}

uint64_t sub_1C0CD67A4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v7 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_1C0806670;
  return sub_1C0CD6020(a1, a2, v7, v6);
}

uint64_t sub_1C0CD6810()
{
  return sub_1C0AAF218(&qword_1EF62FDE8, &qword_1EF62FDF0);
}

uint64_t sub_1C0CD683C()
{
  return sub_1C0AAF218(&qword_1EF6471F8, &qword_1EF646F90);
}

uint64_t sub_1C0CD6870(NSObject *a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  BOOL v8;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;
  BOOL v21;
  BOOL v22;
  BOOL v23;
  BOOL v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t inited;
  _QWORD *v39;
  uint8_t *v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  NSObject *v46;
  uint64_t v47;
  uint64_t v48;

  v4 = sub_1C106F544();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1 == 0x6172756174736572 && a2 == 0xEA0000000000746ELL;
  if (v8 || (sub_1C07A7494() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v10 = a1 == 0x797265636F7267 && a2 == 0xE700000000000000;
    if (v10 || (sub_1C07A7494() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v11 = a1 == 0x656566666F63 && a2 == 0xE600000000000000;
      if (v11 || (sub_1C07A7494() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v12 = a1 == 7174503 && a2 == 0xE300000000000000;
        if (v12 || (sub_1C07A7494() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v13 = a1 == 0x6D756964617473 && a2 == 0xE700000000000000;
          if (v13 || (sub_1C07A7494() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v14 = a1 == 1701538152 && a2 == 0xE400000000000000;
            if (v14 || (sub_1C07A7494() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              v15 = a1 == 1802658160 && a2 == 0xE400000000000000;
              if (v15 || (sub_1C07A7494() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else
              {
                v16 = a1 == 0x7972617262696CLL && a2 == 0xE700000000000000;
                if (v16 || (sub_1C07A7494() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 7;
                }
                else
                {
                  v17 = a1 == 0x756F6967696C6572 && a2 == 0xE900000000000073;
                  if (v17 || (sub_1C07A7494() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 8;
                  }
                  else
                  {
                    v18 = a1 == 0x6569766F6DLL && a2 == 0xE500000000000000;
                    if (v18 || (sub_1C07A7494() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 9;
                    }
                    else
                    {
                      v19 = a1 == 7566690 && a2 == 0xE300000000000000;
                      if (v19 || (sub_1C07A7494() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 10;
                      }
                      else
                      {
                        v20 = a1 == 0x6E69617274 && a2 == 0xE500000000000000;
                        if (v20 || (sub_1C07A7494() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 11;
                        }
                        else
                        {
                          v21 = a1 == 0x74726F70726961 && a2 == 0xE700000000000000;
                          if (v21 || (sub_1C07A7494() & 1) != 0)
                          {
                            swift_bridgeObjectRelease();
                            return 12;
                          }
                          else
                          {
                            v22 = a1 == 30309 && a2 == 0xE200000000000000;
                            if (v22 || (sub_1C07A7494() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 13;
                            }
                            else
                            {
                              v23 = a1 == 7561575 && a2 == 0xE300000000000000;
                              if (v23 || (sub_1C07A7494() & 1) != 0)
                              {
                                swift_bridgeObjectRelease();
                                return 14;
                              }
                              else
                              {
                                v24 = a1 == 0x7972646E75616CLL && a2 == 0xE700000000000000;
                                if (v24 || (sub_1C07A7494() & 1) != 0)
                                {
                                  swift_bridgeObjectRelease();
                                  return 15;
                                }
                                else
                                {
                                  v25 = a1 == 0x6D756573756DLL && a2 == 0xE600000000000000;
                                  if (v25 || (sub_1C07A7494() & 1) != 0)
                                  {
                                    swift_bridgeObjectRelease();
                                    return 16;
                                  }
                                  else if (a1 == 0xD000000000000015
                                         && (sub_1C0791A68((uint64_t)"GEOPOICategoryAirport"), v8)
                                         || (sub_1C07A7494() & 1) != 0)
                                  {
                                    swift_bridgeObjectRelease();
                                    return 17;
                                  }
                                  else if (a1 == 0xD00000000000001BLL
                                         && (sub_1C0791A68((uint64_t)"GEOPOICategoryAmusementPark"), v8)
                                         || (sub_1C077B66C(), (sub_1C07A7494() & 1) != 0))
                                  {
                                    swift_bridgeObjectRelease();
                                    return 18;
                                  }
                                  else if (a1 == 0xD000000000000016
                                         && (sub_1C0791A68((uint64_t)"GEOPOICategoryAquarium"), v8)
                                         || (sub_1C077B66C(), (sub_1C07A7494() & 1) != 0))
                                  {
                                    swift_bridgeObjectRelease();
                                    return 19;
                                  }
                                  else if (a1 == 0xD000000000000011
                                         && (sub_1C0791A68((uint64_t)"GEOPOICategoryATM"), v8)
                                         || (sub_1C07A7494() & 1) != 0)
                                  {
                                    swift_bridgeObjectRelease();
                                    return 20;
                                  }
                                  else if (a1 == 0xD000000000000014
                                         && (sub_1C0791A68((uint64_t)"GEOPOICategoryBakery"), v8)
                                         || (sub_1C07A7494() & 1) != 0)
                                  {
                                    swift_bridgeObjectRelease();
                                    return 21;
                                  }
                                  else
                                  {
                                    v46 = 0xD000000000000012;
                                    if (a1 == 0xD000000000000012
                                      && (sub_1C0791A68((uint64_t)"GEOPOICategoryBank"), v8)
                                      || (sub_1C07A7494() & 1) != 0)
                                    {
                                      swift_bridgeObjectRelease();
                                      return 22;
                                    }
                                    else
                                    {
                                      v45 = 0xD000000000000013;
                                      if (a1 == 0xD000000000000013
                                        && (sub_1C0791A68((uint64_t)"GEOPOICategoryBeach"), v8)
                                        || (sub_1C07A7494() & 1) != 0)
                                      {
                                        swift_bridgeObjectRelease();
                                        return 23;
                                      }
                                      else if (a1 == 0xD000000000000015
                                             && (sub_1C0791A68((uint64_t)"GEOPOICategoryBrewery"), v8)
                                             || (sub_1C07A7494() & 1) != 0)
                                      {
                                        swift_bridgeObjectRelease();
                                        return 24;
                                      }
                                      else if (a1 == v46 && (sub_1C0791A68((uint64_t)"GEOPOICategoryCafe"), v8)
                                             || (sub_1C07A7494() & 1) != 0)
                                      {
                                        swift_bridgeObjectRelease();
                                        return 25;
                                      }
                                      else
                                      {
                                        v44 = 0xD000000000000018;
                                        if (a1 == 0xD000000000000018
                                          && (sub_1C0791A68((uint64_t)"GEOPOICategoryCampground"), v8)
                                          || (sub_1C077B66C(), (sub_1C07A7494() & 1) != 0))
                                        {
                                          swift_bridgeObjectRelease();
                                          return 26;
                                        }
                                        else
                                        {
                                          v43 = 0xD000000000000017;
                                          if (a1 == 0xD000000000000017
                                            && (sub_1C0791A68((uint64_t)"GEOPOICategoryCarRental"), v8)
                                            || (sub_1C077B66C(), (sub_1C07A7494() & 1) != 0))
                                          {
                                            swift_bridgeObjectRelease();
                                            return 27;
                                          }
                                          else if (a1 == v43
                                                 && (sub_1C0791A68((uint64_t)"GEOPOICategoryEVCharger"), v8)
                                                 || (sub_1C07A7494() & 1) != 0)
                                          {
                                            swift_bridgeObjectRelease();
                                            return 28;
                                          }
                                          else
                                          {
                                            v42 = 0xD000000000000019;
                                            if (a1 == 0xD000000000000019
                                              && (sub_1C0791A68((uint64_t)"GEOPOICategoryFireStation"), v8)
                                              || (sub_1C077B66C(), (sub_1C07A7494() & 1) != 0))
                                            {
                                              swift_bridgeObjectRelease();
                                              return 29;
                                            }
                                            else if (a1 == 0xD00000000000001BLL
                                                   && (sub_1C0791A68((uint64_t)"GEOPOICategoryFitnessCenter"), v8)
                                                   || (sub_1C07A7494() & 1) != 0)
                                            {
                                              swift_bridgeObjectRelease();
                                              return 30;
                                            }
                                            else
                                            {
                                              sub_1C079A0C0();
                                              if (v8 && (sub_1C0791A68(v26), v8) || (sub_1C07A7494() & 1) != 0)
                                              {
                                                swift_bridgeObjectRelease();
                                                return 31;
                                              }
                                              else
                                              {
                                                sub_1C079A0C0();
                                                if (v8 && (sub_1C0791A68(v27), v8) || (sub_1C07A7494() & 1) != 0)
                                                {
                                                  swift_bridgeObjectRelease();
                                                  return 32;
                                                }
                                                else if (a1 == 0xD000000000000016
                                                       && (sub_1C0791A68((uint64_t)"GEOPOICategoryHospital"), v8)
                                                       || (sub_1C07A7494() & 1) != 0)
                                                {
                                                  swift_bridgeObjectRelease();
                                                  return 33;
                                                }
                                                else if (a1 == v45
                                                       && (sub_1C0791A68((uint64_t)"GEOPOICategoryHotel"), v8)
                                                       || (sub_1C07A7494() & 1) != 0)
                                                {
                                                  swift_bridgeObjectRelease();
                                                  return 34;
                                                }
                                                else if (a1 == 0xD000000000000015
                                                       && (sub_1C0791A68((uint64_t)"GEOPOICategoryLaundry"), v8)
                                                       || (sub_1C07A7494() & 1) != 0)
                                                {
                                                  swift_bridgeObjectRelease();
                                                  return 35;
                                                }
                                                else if (a1 == 0xD000000000000015
                                                       && (sub_1C0791A68((uint64_t)"GEOPOICategoryLibrary"), v8)
                                                       || (sub_1C07A7494() & 1) != 0)
                                                {
                                                  swift_bridgeObjectRelease();
                                                  return 36;
                                                }
                                                else if (a1 == 0xD000000000000014
                                                       && (sub_1C0791A68((uint64_t)"GEOPOICategoryMarina"), v8)
                                                       || (sub_1C07A7494() & 1) != 0)
                                                {
                                                  swift_bridgeObjectRelease();
                                                  return 37;
                                                }
                                                else
                                                {
                                                  v41 = 0xD00000000000001ALL;
                                                  if (a1 == 0xD00000000000001ALL
                                                    && (sub_1C0791A68((uint64_t)"GEOPOICategoryMovieTheater"), v8)
                                                    || (sub_1C077B66C(), (sub_1C07A7494() & 1) != 0))
                                                  {
                                                    swift_bridgeObjectRelease();
                                                    return 38;
                                                  }
                                                  else if (a1 == 0xD000000000000014
                                                         && (sub_1C0791A68((uint64_t)"GEOPOICategoryMuseum"), v8)
                                                         || (sub_1C07A7494() & 1) != 0)
                                                  {
                                                    swift_bridgeObjectRelease();
                                                    return 39;
                                                  }
                                                  else if (a1 == v41
                                                         && (sub_1C0791A68((uint64_t)"GEOPOICategoryNationalPark"), v8)
                                                         || (sub_1C07A7494() & 1) != 0)
                                                  {
                                                    swift_bridgeObjectRelease();
                                                    return 40;
                                                  }
                                                  else if (a1 == v43
                                                         && (sub_1C0791A68((uint64_t)"GEOPOICategoryNightlife"), v8)
                                                         || (sub_1C07A7494() & 1) != 0)
                                                  {
                                                    swift_bridgeObjectRelease();
                                                    return 41;
                                                  }
                                                  else if (a1 == v46
                                                         && (sub_1C0791A68((uint64_t)"GEOPOICategoryPark"), v8)
                                                         || (sub_1C07A7494() & 1) != 0)
                                                  {
                                                    swift_bridgeObjectRelease();
                                                    return 42;
                                                  }
                                                  else if (a1 == 0xD000000000000015
                                                         && (sub_1C0791A68((uint64_t)"GEOPOICategoryParking"), v8)
                                                         || (sub_1C07A7494() & 1) != 0)
                                                  {
                                                    swift_bridgeObjectRelease();
                                                    return 43;
                                                  }
                                                  else if (a1 == 0xD000000000000016
                                                         && (sub_1C0791A68((uint64_t)"GEOPOICategoryPharmacy"), v8)
                                                         || (sub_1C07A7494() & 1) != 0)
                                                  {
                                                    swift_bridgeObjectRelease();
                                                    return 44;
                                                  }
                                                  else
                                                  {
                                                    sub_1C079A0C0();
                                                    if (v8 && (sub_1C0791A68(v28), v8) || (sub_1C07A7494() & 1) != 0)
                                                    {
                                                      swift_bridgeObjectRelease();
                                                      return 45;
                                                    }
                                                    else if (a1 == 0xD000000000000014
                                                           && (sub_1C0791A68((uint64_t)"GEOPOICategoryPolice"), v8)
                                                           || (sub_1C07A7494() & 1) != 0)
                                                    {
                                                      swift_bridgeObjectRelease();
                                                      return 46;
                                                    }
                                                    else
                                                    {
                                                      sub_1C079A0C0();
                                                      if (v8 && (sub_1C0791A68(v29), v8) || (sub_1C07A7494() & 1) != 0)
                                                      {
                                                        swift_bridgeObjectRelease();
                                                        return 47;
                                                      }
                                                      else
                                                      {
                                                        v46 = 0xD00000000000001DLL;
                                                        if (a1 == 0xD00000000000001DLL
                                                          && (sub_1C0791A68((uint64_t)"GEOPOICategoryPublicTransport"), v8)
                                                          || (sub_1C07A7494() & 1) != 0)
                                                        {
                                                          swift_bridgeObjectRelease();
                                                          return 48;
                                                        }
                                                        else if (a1 == 0xD00000000000001BLL
                                                               && (sub_1C0791A68((uint64_t)"GEOPOICategoryReligiousSite"),
                                                                   v8)
                                                               || (sub_1C07A7494() & 1) != 0)
                                                        {
                                                          swift_bridgeObjectRelease();
                                                          return 49;
                                                        }
                                                        else
                                                        {
                                                          sub_1C079A0C0();
                                                          if (v8 && (sub_1C0791A68(v30), v8)
                                                            || (sub_1C07A7494() & 1) != 0)
                                                          {
                                                            swift_bridgeObjectRelease();
                                                            return 50;
                                                          }
                                                          else if (a1 == 0xD000000000000016
                                                                 && (sub_1C0791A68((uint64_t)"GEOPOICategoryRestroom"), v8)
                                                                 || (sub_1C07A7494() & 1) != 0)
                                                          {
                                                            swift_bridgeObjectRelease();
                                                            return 51;
                                                          }
                                                          else if (a1 == 0xD000000000000014
                                                                 && (sub_1C0791A68((uint64_t)"GEOPOICategorySchool"), v8)
                                                                 || (sub_1C07A7494() & 1) != 0)
                                                          {
                                                            swift_bridgeObjectRelease();
                                                            return 52;
                                                          }
                                                          else if (a1 == 0xD000000000000015
                                                                 && (sub_1C0791A68((uint64_t)"GEOPOICategoryStadium"), v8)
                                                                 || (sub_1C07A7494() & 1) != 0)
                                                          {
                                                            swift_bridgeObjectRelease();
                                                            return 53;
                                                          }
                                                          else if (a1 == v45
                                                                 && (sub_1C0791A68((uint64_t)"GEOPOICategoryStore"), v8)
                                                                 || (sub_1C07A7494() & 1) != 0)
                                                          {
                                                            swift_bridgeObjectRelease();
                                                            return 54;
                                                          }
                                                          else if (a1 == 0xD000000000000015
                                                                 && (sub_1C0791A68((uint64_t)"GEOPOICategoryTheater"), v8)
                                                                 || (sub_1C07A7494() & 1) != 0)
                                                          {
                                                            swift_bridgeObjectRelease();
                                                            return 55;
                                                          }
                                                          else
                                                          {
                                                            sub_1C079A0C0();
                                                            if (v8 && (sub_1C0791A68(v31), v8)
                                                              || (sub_1C07A7494() & 1) != 0)
                                                            {
                                                              swift_bridgeObjectRelease();
                                                              return 56;
                                                            }
                                                            else if (a1 == 0xD000000000000014
                                                                   && (sub_1C0791A68((uint64_t)"GEOPOICategoryWinery"), v8)
                                                                   || (sub_1C07A7494() & 1) != 0)
                                                            {
                                                              swift_bridgeObjectRelease();
                                                              return 57;
                                                            }
                                                            else if (a1 == 0xD000000000000011
                                                                   && (sub_1C0791A68((uint64_t)"GEOPOICategoryZoo"), v8)
                                                                   || (sub_1C07A7494() & 1) != 0)
                                                            {
                                                              swift_bridgeObjectRelease();
                                                              return 58;
                                                            }
                                                            else if (a1 == v42
                                                                   && (sub_1C0791A68((uint64_t)"GEOPOICategoryAirportGate"),
                                                                       v8)
                                                                   || (sub_1C07A7494() & 1) != 0)
                                                            {
                                                              swift_bridgeObjectRelease();
                                                              return 59;
                                                            }
                                                            else if (a1 == v46
                                                                   && (sub_1C0791A68((uint64_t)"GEOPOICategoryAirportTerminal"),
                                                                       v8)
                                                                   || (sub_1C07A7494() & 1) != 0)
                                                            {
                                                              swift_bridgeObjectRelease();
                                                              return 60;
                                                            }
                                                            else
                                                            {
                                                              if (a1 == v42
                                                                && (sub_1C0791A68((uint64_t)"ATXDefaultHeroPOICategory"),
                                                                    v8)
                                                                || (sub_1C07A7494() & 1) != 0)
                                                              {
                                                                swift_bridgeObjectRelease();
                                                              }
                                                              else
                                                              {
                                                                if (qword_1ED762B18 != -1)
                                                                  swift_once();
                                                                v32 = sub_1C079E000(v4, (uint64_t)qword_1ED762AF8);
                                                                (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v32, v4);
                                                                v33 = sub_1C0778598();
                                                                *(_QWORD *)(v33 + 16) = a1;
                                                                *(_QWORD *)(v33 + 24) = a2;
                                                                _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
                                                                v46 = sub_1C106F538();
                                                                LODWORD(v43) = sub_1C107039C();
                                                                v34 = sub_1C0778598();
                                                                *(_BYTE *)(v34 + 16) = 32;
                                                                v35 = sub_1C0778598();
                                                                *(_BYTE *)(v35 + 16) = 8;
                                                                v36 = sub_1C0778598();
                                                                *(_QWORD *)(v36 + 16) = sub_1C0CD0410;
                                                                *(_QWORD *)(v36 + 24) = v33;
                                                                v37 = sub_1C0778598();
                                                                *(_QWORD *)(v37 + 16) = sub_1C0CD813C;
                                                                *(_QWORD *)(v37 + 24) = v36;
                                                                sub_1C07ACF80(&qword_1ED762CC8);
                                                                inited = swift_initStackObject();
                                                                v42 = sub_1C08A5DB8(inited, 3);
                                                                *v39 = sub_1C0788B6C;
                                                                v39[1] = v34;
                                                                v39[2] = sub_1C0959698;
                                                                v39[3] = v35;
                                                                v39[4] = sub_1C0788D34;
                                                                v39[5] = v37;
                                                                v45 = v33;
                                                                swift_retain();
                                                                swift_retain();
                                                                v44 = v34;
                                                                swift_retain();
                                                                swift_retain();
                                                                swift_retain();
                                                                swift_bridgeObjectRelease();
                                                                LODWORD(v43) = v43;
                                                                if (os_log_type_enabled(v46, (os_log_type_t)v43))
                                                                {
                                                                  v40 = (uint8_t *)sub_1C0775854();
                                                                  v48 = swift_slowAlloc();
                                                                  *(_WORD *)v40 = 258;
                                                                  v40[2] = 32;
                                                                  swift_release();
                                                                  v40[3] = 8;
                                                                  swift_release();
                                                                  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
                                                                  v47 = sub_1C0788DAC((uint64_t)a1, a2, &v48);
                                                                  sub_1C10705AC();
                                                                  swift_release();
                                                                  swift_release();
                                                                  swift_release();
                                                                  swift_bridgeObjectRelease_n();
                                                                  _os_log_impl(&dword_1C0771000, v46, (os_log_type_t)v43, "Unknown POI category string with value: %s", v40, 0xCu);
                                                                  swift_arrayDestroy();
                                                                  sub_1C0776778();
                                                                }

                                                                swift_bridgeObjectRelease();
                                                                swift_release();
                                                                swift_release();
                                                                swift_release();
                                                                swift_release();
                                                                swift_release();
                                                                (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
                                                              }
                                                              return 61;
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void *sub_1C0CD7BE4()
{
  return &unk_1E79FC498;
}

uint64_t sub_1C0CD7BF0(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1C0CD7C2C + 4 * byte_1C10B394C[a1]))(0xD00000000000001ALL, 0x80000001C10DF0F0);
}

void sub_1C0CD7C2C()
{
  sub_1C077B66C();
}

uint64_t sub_1C0CD7FF0()
{
  return 0x6E776F6E6B6E75;
}

uint64_t sub_1C0CD8008(uint64_t a1)
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

uint64_t sub_1C0CD8038()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0CD805C()
{
  unint64_t v0;

  v0 = sub_1C1070D08();
  swift_bridgeObjectRelease();
  if (v0 >= 0x3E)
    return 62;
  else
    return v0;
}

void sub_1C0CD80AC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  sub_1C08C68B4(*a1, *a2);
}

void sub_1C0CD80B8()
{
  unsigned __int8 *v0;

  sub_1C0A54094(*v0);
}

uint64_t sub_1C0CD80C0(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1C08C9EB8(a1, *v1);
}

void sub_1C0CD80C8(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1C0A548CC(a1, *v1);
}

uint64_t sub_1C0CD80D0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C0CD805C();
  *a1 = result;
  return result;
}

uint64_t sub_1C0CD80FC@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1C0CD7BF0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_1C0CD8124(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E79FC498;
}

void sub_1C0CD813C()
{
  uint64_t v0;

  sub_1C0D3B9CC(*(void (**)(void))(v0 + 16));
}

uint64_t sub_1C0CD8144()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t _s7FeatureOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xC3)
  {
    if (a2 + 61 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 61) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 62;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x3E;
  v5 = v6 - 62;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s7FeatureOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 61 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 61) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xC3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xC2)
    return ((uint64_t (*)(void))((char *)&loc_1C0CD823C + 4 * byte_1C10B398F[v4]))();
  *a1 = a2 + 61;
  return ((uint64_t (*)(void))((char *)sub_1C0CD8270 + 4 * byte_1C10B398A[v4]))();
}

uint64_t sub_1C0CD8270(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0CD8278(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0CD8280);
  return result;
}

uint64_t sub_1C0CD828C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0CD8294);
  *(_BYTE *)result = a2 + 61;
  return result;
}

uint64_t sub_1C0CD8298(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0CD82A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s7FeatureOMa()
{
  return &_s7FeatureON;
}

unint64_t sub_1C0CD82C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF647200;
  if (!qword_1EF647200)
  {
    v1 = sub_1C07D4BEC(&qword_1EF647208);
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF647200);
  }
  return result;
}

unint64_t sub_1C0CD8308()
{
  unint64_t result;

  result = qword_1EF647210;
  if (!qword_1EF647210)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B3A4C, &_s7FeatureON);
    atomic_store(result, (unint64_t *)&qword_1EF647210);
  }
  return result;
}

uint64_t sub_1C0CD8348()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C0CD8358(uint64_t a1, uint64_t a2)
{
  uint64_t inited;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  id v13;

  sub_1C07ACF80(&qword_1ED755050);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1079220;
  *(_QWORD *)(inited + 32) = 0x6B6E6152696F70;
  *(_QWORD *)(inited + 40) = 0xE700000000000000;
  v5 = (void *)objc_opt_self();
  *(_QWORD *)(inited + 48) = objc_msgSend(v5, sel_featureValueWithInt64_, a1);
  sub_1C07D97D4();
  v6 = sub_1C106F97C();
  if ((sub_1C09E7AB8(a2, (uint64_t)&unk_1E7A03308) & 1) == 0)
  {
    v7 = sub_1C0CD7BE4();
    sub_1C0D73FCC(a2, (uint64_t)v7);
    v9 = v8;
    v11 = v10;
    swift_bridgeObjectRelease();
    if ((v11 & 1) != 0)
      v12 = -1;
    else
      v12 = v9;
    if (objc_msgSend(v5, sel_featureValueWithInt64_, v12))
    {
      swift_isUniquelyReferenced_nonNull_native();
      sub_1C08A07B0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C07F2B9C();

    }
  }
  return v6;
}

uint64_t sub_1C0CD84F8()
{
  uint64_t v0;

  return sub_1C0CD8358(*(_QWORD *)v0, *(unsigned __int8 *)(v0 + 8));
}

uint64_t sub_1C0CD8504@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)(v2 + *(int *)(result + 24));
  v4 = *v3;
  LOBYTE(v3) = *((_BYTE *)v3 + 8);
  *(_QWORD *)a2 = v4;
  *(_BYTE *)(a2 + 8) = (_BYTE)v3;
  return result;
}

void sub_1C0CD8520()
{
  void *v0;
  id v1;
  id v2;
  id v3;

  v1 = objc_msgSend((id)BiomeLibrary(), sel_Location);
  sub_1C07987FC();
  v2 = objc_msgSend(v0, sel_PointOfInterest);
  swift_unknownObjectRelease();
  v3 = objc_msgSend(v2, sel_Category);
  sub_1C07987FC();
  sub_1C07E1D18();

}

void sub_1C0CD85DC()
{
  sub_1C0CD8520();
}

uint64_t *sub_1C0CD85F0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1C106ADE0();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
  }
  return a1;
}

uint64_t sub_1C0CD86A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1C106ADE0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  return a1;
}

uint64_t sub_1C0CD8734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1C106ADE0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  return a1;
}

uint64_t sub_1C0CD87C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1C106ADE0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  return a1;
}

uint64_t sub_1C0CD884C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1C106ADE0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  return a1;
}

uint64_t sub_1C0CD88D8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0CD88E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unsigned int v8;

  v6 = sub_1C106ADE0();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return sub_1C07B2D80(a1, a2, v6);
  v8 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24) + 8);
  if (v8 >= 0x3E)
    return v8 - 61;
  else
    return 0;
}

uint64_t sub_1C0CD895C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0CD8968(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = sub_1C106ADE0();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return sub_1C07B2D8C(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 24) + 8) = a2 + 61;
  return result;
}

uint64_t type metadata accessor for PoiCategoryEvent()
{
  uint64_t result;

  result = qword_1ED749FE8;
  if (!qword_1ED749FE8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C0CD8A18()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C106ADE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1C0CD8A90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED74CC78;
  if (!qword_1ED74CC78)
  {
    v1 = sub_1C07D4BEC(&qword_1ED74CC28);
    result = MEMORY[0x1C3BA8174](&unk_1C10B5B14, v1);
    atomic_store(result, (unint64_t *)&qword_1ED74CC78);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PoiCategoryContent(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xC3 && *(_BYTE *)(a1 + 9))
    {
      v2 = *(_DWORD *)a1 + 194;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      v4 = v3 >= 0x3E;
      v2 = v3 - 62;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PoiCategoryContent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC2)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 195;
    if (a3 >= 0xC3)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xC3)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 61;
  }
  return result;
}

ValueMetadata *type metadata accessor for PoiCategoryContent()
{
  return &type metadata for PoiCategoryContent;
}

uint64_t type metadata accessor for PoiCategorySignal()
{
  return objc_opt_self();
}

uint64_t PortraitTopicKeyValueStore.__allocating_init(config:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  PortraitTopicKeyValueStore.init(config:)(a1);
  return v2;
}

uint64_t PortraitTopicKeyValueStore.portraitTopicAliasStore.getter()
{
  return swift_retain();
}

uint64_t PortraitTopicKeyValueStore.portraitTopicHighLevelMappingStore.getter()
{
  return swift_retain();
}

uint64_t PortraitTopicKeyValueStore.init(config:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = v1;
  v5 = type metadata accessor for Configuration();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v14 - v9;
  sub_1C078E3E0(a1, (uint64_t)&v14 - v9);
  type metadata accessor for KeyValueStore();
  swift_allocObject();
  v11 = KeyValueStore.init(config:domain:)((uint64_t)v10, 0xD000000000000014, 0x80000001C1108990);
  if (v2)
  {
    sub_1C078D09C(a1);
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v11;
    sub_1C078E3E0(a1, (uint64_t)v7);
    swift_allocObject();
    v12 = KeyValueStore.init(config:domain:)((uint64_t)v7, 0xD000000000000020, 0x80000001C11089B0);
    sub_1C078D09C(a1);
    *(_QWORD *)(v3 + 24) = v12;
  }
  return v3;
}

uint64_t PortraitTopicKeyValueStore.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return v0;
}

uint64_t PortraitTopicKeyValueStore.__deallocating_deinit()
{
  PortraitTopicKeyValueStore.deinit();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PortraitTopicKeyValueStore()
{
  return objc_opt_self();
}

uint64_t method lookup function for PortraitTopicKeyValueStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PortraitTopicKeyValueStore.__allocating_init(config:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

void PostalAddress.mapLocation.getter()
{
  sub_1C077AE90();
  sub_1C0778534();
}

void PostalAddress.identifier.getter()
{
  sub_1C077AE90();
  sub_1C0778534();
}

uint64_t sub_1C0CD8E34()
{
  if (qword_1EF62E2D8 != -1)
    swift_once();
  qword_1EF647260 = qword_1EF648228;
  *(_OWORD *)&qword_1EF647268 = *(_OWORD *)algn_1EF648230;
  qword_1EF647278 = qword_1EF648240;
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

uint64_t static PostalAddress.type.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  if (qword_1EF62E280 != -1)
    swift_once();
  sub_1C077F040();
  v2 = qword_1EF647278;
  *(_QWORD *)a1 = qword_1EF647260;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)&qword_1EF647268;
  *(_QWORD *)(a1 + 24) = v2;
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

uint64_t static PostalAddress.type.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v4;

  v1 = *(_QWORD *)a1;
  v4 = *(_OWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 24);
  if (qword_1EF62E280 != -1)
    swift_once();
  sub_1C077F040();
  qword_1EF647260 = v1;
  *(_OWORD *)&qword_1EF647268 = v4;
  qword_1EF647278 = v2;
  return swift_bridgeObjectRelease();
}

void static PostalAddress.type.modify()
{
  if (qword_1EF62E280 != -1)
    swift_once();
  sub_1C077F040();
  sub_1C0778534();
}

uint64_t PostalAddress.basicProperties.getter()
{
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

uint64_t PostalAddress.basicProperties.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = a1;
  return result;
}

uint64_t (*PostalAddress.basicProperties.modify())(_QWORD)
{
  return nullsub_1;
}

void __swiftcall PostalAddress.init(mapLocation:identifier:subPremises:subThoroughfare:thoroughfare:subLocality:locality:subAdministrativeArea:administrativeArea:administrativeAreaCode:postalCode:country:ISOCountryCode:label:category:name:latitude:longitude:isHome:horizontalAccuracy:)(IntelligencePlatformCore::PostalAddress *__return_ptr retstr, Swift::String mapLocation, Swift::String_optional identifier, Swift::OpaquePointer_optional subPremises, Swift::String_optional subThoroughfare, Swift::String_optional thoroughfare, Swift::String_optional subLocality, Swift::String_optional locality, Swift::String_optional subAdministrativeArea, Swift::String_optional administrativeArea, Swift::String_optional administrativeAreaCode, Swift::String_optional postalCode, Swift::String_optional country, Swift::String_optional ISOCountryCode, Swift::String_optional label, Swift::String_optional category, Swift::String_optional name, Swift::String_optional latitude, Swift::String_optional longitude, Swift::String_optional isHome,Swift::String_optional horizontalAccuracy)
{
  unint64_t v21;
  unint64_t v22;
  void *object;
  uint64_t countAndFlagsBits;
  void *v25;
  void *rawValue;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  _QWORD *v35;
  unint64_t v36;
  _QWORD *v37;
  unint64_t v38;
  uint64_t v39;
  char v40;
  _QWORD *v41;
  _QWORD *v42;
  _QWORD *v43;
  _QWORD *v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  _QWORD *v52;
  _QWORD *v53;
  _QWORD *v54;
  _QWORD *v55;
  _QWORD *v56;
  _QWORD *v57;
  _QWORD *v58;
  _QWORD *v59;
  _QWORD *v60;
  _QWORD *v61;
  _QWORD *v62;
  _QWORD *v63;
  _QWORD *v64;
  _QWORD *v65;
  _QWORD *v66;
  _QWORD *v67;
  _QWORD *v68;
  _QWORD *v69;
  _QWORD *v70;
  _QWORD *v71;
  _QWORD *v72;
  _QWORD *v73;
  _QWORD *v74;
  _QWORD *v75;
  _QWORD *v76;
  _QWORD *v77;
  _QWORD *v78;
  _QWORD *v79;
  _QWORD *v80;
  _QWORD *v81;
  _QWORD *v82;
  _QWORD *v83;
  _QWORD *v84;
  _QWORD *v85;
  _QWORD *v86;
  _QWORD *v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v93;

  object = subThoroughfare.value._object;
  countAndFlagsBits = subThoroughfare.value._countAndFlagsBits;
  v90 = *(_QWORD *)&subPremises.is_nil;
  v25 = identifier.value._object;
  v93 = identifier.value._countAndFlagsBits;
  if (!identifier.value._object)
  {
    v28 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (!subPremises.value._rawValue)
      goto LABEL_15;
    goto LABEL_7;
  }
  rawValue = subPremises.value._rawValue;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C07EB0C4();
  v28 = v27;
  v21 = v27[2];
  v22 = v21 + 1;
  if (v21 >= v27[3] >> 1)
  {
    sub_1C07A73DC();
    v28 = v54;
  }
  sub_1C078FA50();
  *(_QWORD *)(v29 + 32) = 0x696669746E656469;
  *(_QWORD *)(v29 + 40) = 0xEA00000000007265;
  *(_QWORD *)(v29 + 48) = v93;
  *(_QWORD *)(v29 + 56) = v25;
  *(_QWORD *)(v29 + 72) = 0;
  *(_QWORD *)(v29 + 80) = 0;
  *(_QWORD *)(v29 + 64) = 0;
  *(_BYTE *)(v29 + 88) = 1;
  subPremises.value._rawValue = rawValue;
  if (rawValue)
  {
LABEL_7:
    v89 = countAndFlagsBits;
    v21 = *((_QWORD *)subPremises.value._rawValue + 2);
    if (v21)
    {
      v30 = (uint64_t *)((char *)subPremises.value._rawValue + 40);
      do
      {
        v31 = *(v30 - 1);
        v22 = *v30;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        if ((sub_1C07A3A40() & 1) == 0)
        {
          sub_1C07A1288();
          v28 = v34;
        }
        v32 = v28[2];
        if (v32 >= v28[3] >> 1)
        {
          sub_1C07EB0C4();
          v28 = v35;
        }
        v30 += 2;
        v28[2] = v32 + 1;
        v33 = &v28[8 * v32];
        v33[4] = 0x696D657250627573;
        v33[5] = 0xEB00000000736573;
        v33[6] = v31;
        v33[7] = v22;
        v33[9] = 0;
        v33[10] = 0;
        v33[8] = 0;
        *((_BYTE *)v33 + 88) = 1;
        --v21;
      }
      while (v21);
    }
    swift_bridgeObjectRelease();
    countAndFlagsBits = v89;
  }
LABEL_15:
  if (countAndFlagsBits)
  {
    if ((sub_1C07A3A40() & 1) == 0)
    {
      sub_1C07A1288();
      v28 = v55;
    }
    v36 = v28[2];
    v22 = v36 + 1;
    if (v36 >= v28[3] >> 1)
    {
      sub_1C07A73DC();
      v28 = v56;
    }
    v28[2] = v22;
    v37 = &v28[8 * v36];
    v37[4] = 0x6F726F6854627573;
    v37[5] = 0xEF65726166686775;
    v37[6] = v90;
    v37[7] = countAndFlagsBits;
    sub_1C077B630((uint64_t)v37);
  }
  if (thoroughfare.value._countAndFlagsBits)
  {
    if ((sub_1C07A3A40() & 1) == 0)
    {
      sub_1C07A1288();
      v28 = v57;
    }
    v38 = v28[2];
    v22 = v38 + 1;
    if (v38 >= v28[3] >> 1)
    {
      sub_1C07A73DC();
      v28 = v58;
    }
    v28[2] = v22;
    v39 = (uint64_t)&v28[8 * v38];
    strcpy((char *)(v39 + 32), "thoroughfare");
    *(_BYTE *)(v39 + 45) = 0;
    *(_WORD *)(v39 + 46) = -5120;
    *(_QWORD *)(v39 + 48) = object;
    *(_QWORD *)(v39 + 56) = thoroughfare.value._countAndFlagsBits;
    sub_1C077B630(v39);
  }
  if (subLocality.value._countAndFlagsBits)
  {
    if ((sub_1C07A3A40() & 1) == 0)
    {
      sub_1C07A1288();
      v28 = v59;
    }
    sub_1C079A044();
    if (v40)
    {
      sub_1C07A73DC();
      v28 = v60;
    }
    sub_1C078FA50();
    v41[4] = 0x6C61636F4C627573;
    v41[5] = 0xEB00000000797469;
    v41[6] = thoroughfare.value._object;
    v41[7] = subLocality.value._countAndFlagsBits;
    sub_1C077B630((uint64_t)v41);
  }
  if (locality.value._countAndFlagsBits)
  {
    if ((sub_1C07A3A40() & 1) == 0)
    {
      sub_1C07A1288();
      v28 = v61;
    }
    sub_1C079A044();
    if (v40)
    {
      sub_1C07A73DC();
      v28 = v62;
    }
    v28[2] = v22;
    v42 = &v28[8 * v21];
    v42[4] = 0x7974696C61636F6CLL;
    v42[5] = 0xE800000000000000;
    v42[6] = subLocality.value._object;
    v42[7] = locality.value._countAndFlagsBits;
    sub_1C077B630((uint64_t)v42);
  }
  if (subAdministrativeArea.value._countAndFlagsBits)
  {
    if ((sub_1C07A3A40() & 1) == 0)
    {
      sub_1C07A1288();
      v28 = v63;
    }
    sub_1C079A044();
    if (v40)
    {
      sub_1C07A73DC();
      v28 = v64;
    }
    sub_1C078FA50();
    v43[4] = 0xD000000000000015;
    v43[5] = 0x80000001C1108AF0;
    v43[6] = locality.value._object;
    v43[7] = subAdministrativeArea.value._countAndFlagsBits;
    sub_1C077B630((uint64_t)v43);
  }
  if (administrativeArea.value._countAndFlagsBits)
  {
    if ((sub_1C07A3A40() & 1) == 0)
    {
      sub_1C07A1288();
      v28 = v65;
    }
    sub_1C079A044();
    if (v40)
    {
      sub_1C07A73DC();
      v28 = v66;
    }
    v28[2] = v22;
    sub_1C0796A5C((uint64_t)"administrativeArea");
  }
  if (administrativeAreaCode.value._countAndFlagsBits)
  {
    if ((sub_1C07A3A40() & 1) == 0)
    {
      sub_1C07A1288();
      v28 = v67;
    }
    sub_1C079A044();
    if (v40)
    {
      sub_1C07A73DC();
      v28 = v68;
    }
    sub_1C078FA50();
    v44[4] = 0xD000000000000016;
    v44[5] = 0x80000001C1108AB0;
    v44[6] = administrativeArea.value._object;
    v44[7] = administrativeAreaCode.value._countAndFlagsBits;
    sub_1C077B630((uint64_t)v44);
  }
  if (postalCode.value._countAndFlagsBits)
  {
    if ((sub_1C07A3A40() & 1) == 0)
    {
      sub_1C07A1288();
      v28 = v69;
    }
    sub_1C079A044();
    if (v40)
    {
      sub_1C07A73DC();
      v28 = v70;
    }
    sub_1C078FA50();
    v45[4] = 0x6F436C6174736F70;
    v45[5] = 0xEA00000000006564;
    v45[6] = administrativeAreaCode.value._object;
    v45[7] = postalCode.value._countAndFlagsBits;
    sub_1C077B630((uint64_t)v45);
  }
  if (country.value._countAndFlagsBits)
  {
    if ((sub_1C07A3A40() & 1) == 0)
    {
      sub_1C07A1288();
      v28 = v71;
    }
    sub_1C079A044();
    if (v40)
    {
      sub_1C07A73DC();
      v28 = v72;
    }
    sub_1C078FA50();
    v46[4] = 0x7972746E756F63;
    v46[5] = 0xE700000000000000;
    v46[6] = postalCode.value._object;
    v46[7] = country.value._countAndFlagsBits;
    sub_1C077B630((uint64_t)v46);
  }
  if (ISOCountryCode.value._countAndFlagsBits)
  {
    if ((sub_1C07A3A40() & 1) == 0)
    {
      sub_1C07A1288();
      v28 = v73;
    }
    sub_1C079A044();
    if (v40)
    {
      sub_1C07A73DC();
      v28 = v74;
    }
    sub_1C078FA50();
    strcpy((char *)(v47 + 32), "ISOCountryCode");
    *(_BYTE *)(v47 + 47) = -18;
    *(_QWORD *)(v47 + 48) = country.value._object;
    *(_QWORD *)(v47 + 56) = ISOCountryCode.value._countAndFlagsBits;
    sub_1C077B630(v47);
  }
  if (label.value._countAndFlagsBits)
  {
    if ((sub_1C07A3A40() & 1) == 0)
    {
      sub_1C07A1288();
      v28 = v75;
    }
    sub_1C079A044();
    if (v40)
    {
      sub_1C07A73DC();
      v28 = v76;
    }
    v28[2] = v22;
    v48 = &v28[8 * v21];
    v48[4] = 0x6C6562616CLL;
    v48[5] = 0xE500000000000000;
    v48[6] = ISOCountryCode.value._object;
    v48[7] = label.value._countAndFlagsBits;
    sub_1C077B630((uint64_t)v48);
  }
  if (category.value._countAndFlagsBits)
  {
    if ((sub_1C07A3A40() & 1) == 0)
    {
      sub_1C07A1288();
      v28 = v77;
    }
    sub_1C079A044();
    if (v40)
    {
      sub_1C07A73DC();
      v28 = v78;
    }
    sub_1C078FA50();
    *(_QWORD *)(v49 + 32) = 0x79726F6765746163;
    *(_QWORD *)(v49 + 40) = 0xE800000000000000;
    *(_QWORD *)(v49 + 48) = 0;
    *(_QWORD *)(v49 + 56) = 0xE000000000000000;
    *(_QWORD *)(v49 + 64) = label.value._object;
    *(_QWORD *)(v49 + 72) = category.value._countAndFlagsBits;
    *(_QWORD *)(v49 + 80) = 0;
    *(_BYTE *)(v49 + 88) = 1;
  }
  if (name.value._countAndFlagsBits)
  {
    if ((sub_1C07A3A40() & 1) == 0)
    {
      sub_1C07A1288();
      v28 = v79;
    }
    sub_1C079A044();
    if (v40)
    {
      sub_1C07A73DC();
      v28 = v80;
    }
    sub_1C078FA50();
    v50[4] = 1701667182;
    v50[5] = 0xE400000000000000;
    v50[6] = category.value._object;
    v50[7] = name.value._countAndFlagsBits;
    sub_1C077B630((uint64_t)v50);
  }
  if (latitude.value._countAndFlagsBits)
  {
    if ((sub_1C07A3A40() & 1) == 0)
    {
      sub_1C07A1288();
      v28 = v81;
    }
    sub_1C079A044();
    if (v40)
    {
      sub_1C07A73DC();
      v28 = v82;
    }
    v28[2] = v22;
    v51 = &v28[8 * v21];
    v51[4] = 0x656475746974616CLL;
    v51[5] = 0xE800000000000000;
    v51[6] = name.value._object;
    v51[7] = latitude.value._countAndFlagsBits;
    sub_1C077B630((uint64_t)v51);
  }
  if (longitude.value._countAndFlagsBits)
  {
    if ((sub_1C07A3A40() & 1) == 0)
    {
      sub_1C07A1288();
      v28 = v83;
    }
    sub_1C079A044();
    if (v40)
    {
      sub_1C07A73DC();
      v28 = v84;
    }
    v28[2] = v22;
    v52 = &v28[8 * v21];
    v52[4] = 0x64757469676E6F6CLL;
    v52[5] = 0xE900000000000065;
    v52[6] = latitude.value._object;
    v52[7] = longitude.value._countAndFlagsBits;
    sub_1C077B630((uint64_t)v52);
  }
  if (isHome.value._countAndFlagsBits)
  {
    if ((sub_1C07A3A40() & 1) == 0)
    {
      sub_1C07A1288();
      v28 = v85;
    }
    sub_1C079A044();
    if (v40)
    {
      sub_1C07A73DC();
      v28 = v86;
    }
    sub_1C078FA50();
    v53[4] = 0xD000000000000018;
    v53[5] = 0x80000001C1108A90;
    v53[6] = longitude.value._object;
    v53[7] = isHome.value._countAndFlagsBits;
    sub_1C077B630((uint64_t)v53);
  }
  if (horizontalAccuracy.value._countAndFlagsBits)
  {
    if ((sub_1C07A3A40() & 1) == 0)
    {
      sub_1C07A1288();
      v28 = v87;
    }
    sub_1C079A044();
    if (v40)
    {
      sub_1C07A73DC();
      v28 = v88;
    }
    v28[2] = v22;
    sub_1C0796A5C((uint64_t)"horizontalAccuracy");
  }
  retstr->mapLocation = mapLocation;
  retstr->identifier.value._countAndFlagsBits = v93;
  retstr->identifier.value._object = v25;
  retstr->basicProperties._rawValue = v28;
}

uint64_t sub_1C0CD9830()
{
  sub_1C0CD9C58();
  return sub_1C1070EE8();
}

uint64_t sub_1C0CD9858()
{
  sub_1C0CD9C58();
  return sub_1C1070EF4();
}

void PostalAddress.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;

  v3 = sub_1C07ACF80(&qword_1EF647280);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[2];
  v12 = v1[3];
  v13 = v7;
  v11 = v1[4];
  sub_1C07A9480(a1, a1[3]);
  sub_1C0CD9C58();
  sub_1C1070EB8();
  v18 = 0;
  v8 = v14;
  sub_1C1070B7C();
  if (!v8)
  {
    v9 = v11;
    v17 = 1;
    sub_1C1070B34();
    v15 = v9;
    v16 = 2;
    sub_1C07ACF80(&qword_1EF62FE38);
    sub_1C07EB158(&qword_1EF62FE40, (uint64_t (*)(void))sub_1C07EB11C, MEMORY[0x1E0DEAF10]);
    sub_1C1070BB8();
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1C07757D0();
}

void PostalAddress.init(from:)(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = sub_1C07ACF80(&qword_1EF647290);
  MEMORY[0x1E0C80A78](v5);
  sub_1C07A9480(a1, a1[3]);
  sub_1C0CD9C58();
  sub_1C1070E94();
  if (v2)
  {
    sub_1C0775880();
  }
  else
  {
    v6 = sub_1C1070AA4();
    v8 = v7;
    v13 = v6;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v9 = sub_1C1070A5C();
    v11 = v10;
    v12 = v9;
    sub_1C07ACF80(&qword_1EF62FE38);
    sub_1C07EB158(&qword_1EF62FE58, (uint64_t (*)(void))sub_1C07EB1C0, MEMORY[0x1E0DEAF40]);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C1070AE0();
    sub_1C078F1D4();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C077AE90();
    sub_1C077589C();
    *a2 = v13;
    a2[1] = v8;
    a2[2] = v12;
    a2[3] = v11;
    a2[4] = v14;
    sub_1C0775880();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1C07757D0();
}

void sub_1C0CD9C28(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  PostalAddress.init(from:)(a1, a2);
}

void sub_1C0CD9C3C(_QWORD *a1)
{
  PostalAddress.encode(to:)(a1);
}

unint64_t sub_1C0CD9C58()
{
  unint64_t result;

  result = qword_1EF647288;
  if (!qword_1EF647288)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B3D1C, &type metadata for PostalAddress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF647288);
  }
  return result;
}

unint64_t sub_1C0CD9C94(uint64_t a1)
{
  unint64_t result;

  result = sub_1C0CD9CB8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0CD9CB8()
{
  unint64_t result;

  result = qword_1EF647298;
  if (!qword_1EF647298)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PostalAddress, &type metadata for PostalAddress);
    atomic_store(result, (unint64_t *)&qword_1EF647298);
  }
  return result;
}

unint64_t sub_1C0CD9CF4(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1C0CD9D20();
  result = sub_1C0CD9D5C();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0CD9D20()
{
  unint64_t result;

  result = qword_1EF6472A0;
  if (!qword_1EF6472A0)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PostalAddress, &type metadata for PostalAddress);
    atomic_store(result, (unint64_t *)&qword_1EF6472A0);
  }
  return result;
}

unint64_t sub_1C0CD9D5C()
{
  unint64_t result;

  result = qword_1EF6472A8;
  if (!qword_1EF6472A8)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for PostalAddress, &type metadata for PostalAddress);
    atomic_store(result, (unint64_t *)&qword_1EF6472A8);
  }
  return result;
}

ValueMetadata *type metadata accessor for PostalAddress()
{
  return &type metadata for PostalAddress;
}

uint64_t storeEnumTagSinglePayload for PostalAddress.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C0CD9DF4 + 4 * byte_1C10B3BA5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C0CD9E28 + 4 * byte_1C10B3BA0[v4]))();
}

uint64_t sub_1C0CD9E28(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0CD9E30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0CD9E38);
  return result;
}

uint64_t sub_1C0CD9E44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0CD9E4CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C0CD9E50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0CD9E58(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PostalAddress.CodingKeys()
{
  return &type metadata for PostalAddress.CodingKeys;
}

unint64_t sub_1C0CD9E78()
{
  unint64_t result;

  result = qword_1EF6472B0;
  if (!qword_1EF6472B0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B3CF4, &type metadata for PostalAddress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF6472B0);
  }
  return result;
}

unint64_t sub_1C0CD9EB8()
{
  unint64_t result;

  result = qword_1EF6472B8;
  if (!qword_1EF6472B8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B3C64, &type metadata for PostalAddress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF6472B8);
  }
  return result;
}

unint64_t sub_1C0CD9EF8()
{
  unint64_t result;

  result = qword_1EF6472C0;
  if (!qword_1EF6472C0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B3C8C, &type metadata for PostalAddress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF6472C0);
  }
  return result;
}

uint64_t sub_1C0CD9F34()
{
  void *v0;
  void *v1;
  uint64_t v2;

  v0 = (void *)sub_1C106FAF0();
  v1 = (void *)sub_1C106FAF0();
  v2 = PPSCreateTelemetryIdentifier();

  if (!v2)
    swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1C0CD9FCC()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = sub_1C0CD9F34();
  qword_1ED78CFA8 = result;
  unk_1ED78CFB0 = v1;
  qword_1ED78CFB8 = v2;
  return result;
}

uint64_t PredicatePresenceBlockingFunction.predicates.getter()
{
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

uint64_t PredicatePresenceBlockingFunction.relationshipPredicates.getter()
{
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

uint64_t PredicatePresenceBlockingFunction.init(predicates:relationshipPredicates:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

void *PredicatePresenceBlockingFunction.blockValue(_:)()
{
  return &unk_1E7A00980;
}

void *sub_1C0CDA034()
{
  return &unk_1E7A00980;
}

ValueMetadata *type metadata accessor for PredicatePresenceBlockingFunction()
{
  return &type metadata for PredicatePresenceBlockingFunction;
}

void Double.progressToken.getter(double *a1@<X8>, double a2@<D0>)
{
  *a1 = a2;
}

uint64_t ProgressToken.token.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t sub_1C0CDA070(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6E656B6F74 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1C1070CB4();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1C0CDA0EC()
{
  return 0x6E656B6F74;
}

uint64_t sub_1C0CDA100()
{
  return sub_1C0798424();
}

uint64_t sub_1C0CDA10C()
{
  return sub_1C07D6DF0();
}

uint64_t sub_1C0CDA11C()
{
  return sub_1C07C7B58();
}

uint64_t sub_1C0CDA12C()
{
  sub_1C1070DF8();
  sub_1C07C7B58();
  return sub_1C1070E4C();
}

uint64_t sub_1C0CDA170()
{
  return sub_1C0CDA0EC();
}

uint64_t sub_1C0CDA180@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0CDA070(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1C0CDA1B4()
{
  return sub_1C0782AF4();
}

uint64_t sub_1C0CDA1D8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C0798424();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1C0CDA20C(uint64_t a1)
{
  MEMORY[0x1C3BA8174](&unk_1C10B3F60, a1);
  return sub_1C1070EE8();
}

uint64_t sub_1C0CDA240(uint64_t a1)
{
  MEMORY[0x1C3BA8174](&unk_1C10B3F60, a1);
  return sub_1C1070EF4();
}

void ProgressToken.encode(to:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;

  v3 = a2[3];
  v9 = a2[2];
  v4 = type metadata accessor for ProgressToken.CodingKeys(255, v9, v3, a2[4]);
  MEMORY[0x1C3BA8174](&unk_1C10B3F60, v4);
  sub_1C0799050();
  v5 = sub_1C1070BD0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v9 - v7;
  sub_1C07A9480(a1, a1[3]);
  sub_1C1070EB8();
  sub_1C1070BB8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1C07757D0();
}

uint64_t type metadata accessor for ProgressToken.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0802884(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ProgressToken.CodingKeys);
}

void ProgressToken.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;

  v25 = a5;
  v30 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v31 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ProgressToken.CodingKeys(255, v10, v11, v12);
  MEMORY[0x1C3BA8174](&unk_1C10B3F60, v13);
  sub_1C0799050();
  v32 = sub_1C1070B10();
  v26 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v15 = (char *)&v23 - v14;
  v28 = a2;
  v29 = a3;
  v24 = type metadata accessor for ProgressToken(0, a2, a3, a4);
  v16 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v18 = (char *)&v23 - v17;
  sub_1C07A9480(a1, a1[3]);
  v27 = v15;
  v19 = v33;
  sub_1C1070E94();
  if (!v19)
  {
    v33 = v16;
    v20 = v30;
    v21 = v31;
    v22 = v28;
    sub_1C1070AE0();
    sub_1C07A1354();
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v18, v21, v22);
    (*(void (**)(uint64_t, char *, uint64_t))(v33 + 32))(v25, v18, v24);
  }
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)a1);
  sub_1C07757D0();
}

uint64_t type metadata accessor for ProgressToken(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0802884(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ProgressToken);
}

void sub_1C0CDA548(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  ProgressToken.init(from:)(a1, a2[2], a2[3], a2[4], a3);
}

void sub_1C0CDA568(_QWORD *a1, _QWORD *a2)
{
  ProgressToken.encode(to:)(a1, a2);
}

uint64_t sub_1C0CDA57C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_18;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return sub_1C07B2D80(a1, v6, v4);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return (v6 + v12 + 1);
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1C0CDA62C + 4 * byte_1C10B3DE0[(v8 - 1)]))();
}

void sub_1C0CDA678(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      v14 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0u;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v15 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t sub_1C0CDA820(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1C0CDA860 + 4 * byte_1C10B3DEE[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1C0CDA880 + 4 * byte_1C10B3DF3[v4]))();
}

_BYTE *sub_1C0CDA860(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1C0CDA880(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C0CDA888(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C0CDA890(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C0CDA898(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C0CDA8A0(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_1C0CDA8AC()
{
  JUMPOUT(0x1C3BA8174);
}

void sub_1C0CDA8BC()
{
  JUMPOUT(0x1C3BA8174);
}

void sub_1C0CDA8CC()
{
  JUMPOUT(0x1C3BA8174);
}

uint64_t sub_1C0CDA8DC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = 0xD000000000000018;
  *(_QWORD *)(v3 + 24) = 0x80000001C10B3FB0;
  *(_QWORD *)(v3 + 32) = a1;
  *(_QWORD *)(v3 + 40) = a2;
  *(_BYTE *)(v3 + 48) = a3;
  return v3;
}

uint64_t sub_1C0CDA908()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

uint64_t sub_1C0CDA920()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  Swift::String v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v18;

  if (qword_1ED761458 != -1)
    swift_once();
  v1 = sub_1C106F544();
  sub_1C079E000(v1, (uint64_t)qword_1ED78D818);
  swift_retain_n();
  v2 = sub_1C106F538();
  v3 = sub_1C10703A8();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)sub_1C0775854();
    v18 = sub_1C0775854();
    *(_DWORD *)v4 = 136315138;
    swift_retain();
    sub_1C0A9123C();
    v6 = v5;
    v8 = v7;
    swift_release();
    *(_QWORD *)(v0 + 16) = sub_1C0788DAC(v6, v8, &v18);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    sub_1C07863E8();
    _os_log_impl(&dword_1C0771000, v2, v3, "Pipeline: %s: promoting Resolver KVStore to production...", v4, 0xCu);
    swift_arrayDestroy();
    sub_1C0776778();
  }
  sub_1C07863E8();

  v9._object = (void *)0x80000001C1108B90;
  v9._countAndFlagsBits = 0xD000000000000017;
  KeyValueStore.copyAllKeyValues(to:clearCurrentDomain:clearNewDomain:)(v9, 1, 1);
  swift_retain_n();
  v10 = sub_1C106F538();
  v11 = sub_1C10703A8();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)sub_1C0775854();
    v18 = sub_1C0775854();
    *(_DWORD *)v12 = 136315138;
    swift_retain();
    sub_1C0A9123C();
    v14 = v13;
    v16 = v15;
    swift_release();
    *(_QWORD *)(v0 + 16) = sub_1C0788DAC(v14, v16, &v18);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    sub_1C07863E8();
    _os_log_impl(&dword_1C0771000, v10, v11, "Pipeline: %s: promoting construction table to production...", v12, 0xCu);
    swift_arrayDestroy();
    sub_1C0776778();
  }
  sub_1C07863E8();

  sub_1C0AB7790(*(_BYTE *)(*(_QWORD *)(v0 + 24) + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C0CDAC34()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1C0CDAC60()
{
  sub_1C0CDAC34();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PromoteConstructionPhase()
{
  return objc_opt_self();
}

uint64_t sub_1C0CDACA0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C0806670;
  return sub_1C0CDA908();
}

void sub_1C0CDACE8()
{
  sub_1C0A9123C();
}

unint64_t sub_1C0CDAD08(uint64_t a1)
{
  unint64_t result;

  result = sub_1C0CDAD2C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0CDAD2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED750F48;
  if (!qword_1ED750F48)
  {
    v1 = type metadata accessor for PromoteConstructionPhase();
    result = MEMORY[0x1C3BA8174](&unk_1C10B3FEC, v1);
    atomic_store(result, (unint64_t *)&qword_1ED750F48);
  }
  return result;
}

uint64_t sub_1C0CDAD68()
{
  uint64_t result;

  sub_1C07ACF80(&qword_1EF647398);
  swift_allocObject();
  result = sub_1C0ECB124();
  qword_1EF6D1D98 = result;
  return result;
}

uint64_t *sub_1C0CDADA8()
{
  if (qword_1EF62E290 != -1)
    swift_once();
  return &qword_1EF6D1D98;
}

uint64_t sub_1C0CDADE8()
{
  uint64_t result;

  sub_1C07A896C();
  result = static NSUserDefaults.sqlite3ReducedCacheSpillSize.getter();
  qword_1EF6D1DA0 = result;
  return result;
}

uint64_t sub_1C0CDAE18()
{
  sub_1C1070774();
  swift_bridgeObjectRelease();
  sub_1C106AB10();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  return 0x617461444449513CLL;
}

_QWORD *sub_1C0CDAEB4(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = v1;
  v25 = *v1;
  v4 = sub_1C106F838();
  MEMORY[0x1E0C80A78](v4);
  v28 = sub_1C106BBC0();
  v26 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v20 - v8;
  v10 = sub_1C106AB28();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07A1364();
  sub_1C106AAC8();
  v14 = (char *)v1 + OBJC_IVAR____TtC24IntelligencePlatformCore11QIDDatabase_url;
  v23 = v11;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v13, v10);
  v21 = (uint64_t)v2 + OBJC_IVAR____TtC24IntelligencePlatformCore11QIDDatabase_config;
  sub_1C078E3E0(a1, (uint64_t)v2 + OBJC_IVAR____TtC24IntelligencePlatformCore11QIDDatabase_config);
  v22 = v14;
  sub_1C106AB10();
  sub_1C106BBB4();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106BB90();
  sub_1C106F820();
  sub_1C106BB78();
  sub_1C106BB6C();
  v15 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for Configuration() + 20));
  v24 = v10;
  if ((v15 & 2) != 0)
  {
    sub_1C106BB60();
  }
  else if ((v15 & 8) != 0)
  {
    *(_QWORD *)(swift_allocObject() + 16) = v25;
    sub_1C106BB60();
    swift_release();
  }
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v6, v9, v28);
  sub_1C106BAA0();
  swift_allocObject();
  v16 = v27;
  v17 = sub_1C106BA58();
  if (v16)
  {
    sub_1C078D09C(a1);
    sub_1C07A74A4();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v22, v24);
    sub_1C078D09C(v21);
    swift_deallocPartialClassInstance();
  }
  else
  {
    v18 = v17;
    sub_1C078D09C(a1);
    sub_1C07A74A4();
    *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC24IntelligencePlatformCore11QIDDatabase_pool) = v18;
  }
  return v2;
}

uint64_t sub_1C0CDB184()
{
  sub_1C07A1364();
  return sub_1C106AAC8();
}

uint64_t sub_1C0CDB1A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v0 = sub_1C106C040();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = 0;
  v6 = 0xE000000000000000;
  sub_1C1070774();
  swift_bridgeObjectRelease();
  v5 = 0xD000000000000015;
  v6 = 0x80000001C10E5A00;
  if (qword_1EF62E298 != -1)
    swift_once();
  v7 = qword_1EF6D1DA0;
  sub_1C1070C0C();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106C034();
  sub_1C106C694();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0CDB2FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC24IntelligencePlatformCore11QIDDatabase_url;
  v2 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1C078D09C(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore11QIDDatabase_config);
  swift_release();
  return v0;
}

uint64_t sub_1C0CDB360()
{
  sub_1C0CDB2FC();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0CDB384()
{
  return type metadata accessor for QIDDatabase();
}

uint64_t type metadata accessor for QIDDatabase()
{
  uint64_t result;

  result = qword_1EF647300;
  if (!qword_1EF647300)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C0CDB3C4()
{
  sub_1C0CDADA8();
  return swift_retain();
}

uint64_t sub_1C0CDB3E0()
{
  return sub_1C0CDB184();
}

uint64_t sub_1C0CDB3F4()
{
  return sub_1C0CDAE18();
}

uint64_t sub_1C0CDB414()
{
  return swift_deallocObject();
}

uint64_t sub_1C0CDB424()
{
  return sub_1C0CDB1A8();
}

uint64_t sub_1C0CDB43C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t AssociatedConformanceWitness;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[16];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v19 = a6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v14 = (char *)&v18 - v13;
  (*(void (**)(uint64_t, uint64_t))(a5 + 24))(a3, a5);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 8))(AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, AssociatedTypeWitness);
  v21 = a3;
  v22 = a4;
  v23 = a5;
  v24 = v19;
  v25 = a2;
  v26 = a1;
  v16 = sub_1C107000C();
  sub_1C09BB5D0((uint64_t)sub_1C0CDBAB8, (uint64_t)v20, v16);
  swift_release();
  return v27;
}

uint64_t sub_1C0CDB57C()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1C0CDB588()
{
  return sub_1C0CDB57C();
}

uint64_t sub_1C0CDB5A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t *a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  int v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t result;
  uint64_t v43;
  char v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65[6];
  uint64_t v66;

  v55 = a1;
  v66 = a5;
  v64 = a3;
  v49 = a6;
  v63 = sub_1C106D2DC();
  v51 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  v50 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_1C106C148();
  v62 = *(_QWORD *)(v58 - 8);
  v9 = MEMORY[0x1E0C80A78](v58);
  v52 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v49 - v11;
  v13 = sub_1C106E968();
  v53 = *(_QWORD *)(v13 - 8);
  v54 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1C07ACF80(&qword_1ED75EA10);
  v17 = MEMORY[0x1E0C80A78](v16);
  v57 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v49 - v19;
  v21 = sub_1C07ACF80(&qword_1ED756690);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1C106EB78();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v49 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0CDBAD8(a2, (uint64_t)v23);
  v28 = sub_1C07B2D80((uint64_t)v23, 1, v24);
  v60 = v24;
  v61 = v12;
  v59 = v25;
  v29 = v15;
  if (v28 == 1)
  {
    sub_1C07B2D8C((uint64_t)v20, 1, 1, v63);
    sub_1C106EB54();
    sub_1C0784B30((uint64_t)v23, &qword_1ED756690);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v27, v23, v24);
  }
  v30 = v66;
  sub_1C106B914();
  (*(void (**)(uint64_t, uint64_t))(v30 + 24))(a4, v30);
  v31 = v29;
  sub_1C106E95C();
  v65[3] = sub_1C106BCBC();
  v65[4] = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v65);
  sub_1C106D840();
  v32 = v61;
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v65);
  v33 = (uint64_t)v57;
  v64 = v27;
  sub_1C106EB6C();
  v34 = v63;
  v35 = sub_1C07B2D80(v33, 1, v63);
  v36 = v58;
  if (v35 == 1)
  {
    sub_1C0784B30(v33, &qword_1ED75EA10);
    v37 = v62;
  }
  else
  {
    v39 = v50;
    v38 = v51;
    (*(void (**)(char *, uint64_t, uint64_t))(v51 + 32))(v50, v33, v34);
    sub_1C106D2C4();
    MEMORY[0x1C3BA8174](MEMORY[0x1E0D24298], v36);
    v40 = v52;
    sub_1C106BD10();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v34);
    v37 = v62;
    (*(void (**)(char *, uint64_t))(v62 + 8))(v32, v36);
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v32, v40, v36);
  }
  v41 = v59;
  result = sub_1C106EB60();
  v43 = v60;
  if ((v44 & 1) == 0)
  {
    if (result < 0)
    {
      __break(1u);
      return result;
    }
    MEMORY[0x1C3BA8174](MEMORY[0x1E0D242B0], v36);
    v45 = v52;
    sub_1C106BF38();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v32, v36);
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v32, v45, v36);
  }
  MEMORY[0x1C3BA8174](MEMORY[0x1E0D24290], v36);
  v46 = v56;
  v47 = sub_1C106BAB8();
  if (v46)
  {
    (*(void (**)(char *, uint64_t))(v37 + 8))(v32, v36);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v31, v54);
    return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v64, v43);
  }
  else
  {
    v48 = v47;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v32, v36);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v31, v54);
    result = (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v64, v43);
    *v49 = v48;
  }
  return result;
}

uint64_t sub_1C0CDBAB8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1C0CDB5A8(a1, *(_QWORD *)(v2 + 48), *(char **)(v2 + 56), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 40), a2);
}

uint64_t sub_1C0CDBAD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1ED756690);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0CDBB20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  _QWORD v32[4];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v43 = a8;
  v44 = a2;
  v45 = a6;
  v46 = a4;
  v37 = a5;
  v35 = a3;
  v33 = a1;
  v47 = a9;
  v39 = a10;
  v40 = a7;
  v41 = a12;
  v42 = a11;
  v12 = sub_1C106D9A8();
  MEMORY[0x1E0C80A78](v12);
  v34 = (uint64_t)v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v32 - v15;
  v32[0] = (char *)v32 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v32 - v18;
  v32[1] = (char *)v32 - v18;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)v32 - v21;
  v32[2] = (char *)v32 - v21;
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)v32 - v24;
  v32[3] = (char *)v32 - v24;
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)v32 - v27;
  v38 = sub_1C106D954();
  v36 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v30 = (char *)v32 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07A137C((uint64_t)v28, v33);
  sub_1C07A137C((uint64_t)v25, v35);
  sub_1C07A137C((uint64_t)v22, v37);
  sub_1C07A137C((uint64_t)v19, v40);
  sub_1C07A137C((uint64_t)v16, v39);
  sub_1C07A137C(v34, v41);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106D8AC();
  (*(void (**)(char *, _QWORD, uint64_t))(v36 + 104))(v30, *MEMORY[0x1E0D3C3F8], v38);
  return sub_1C106D960();
}

ValueMetadata *type metadata accessor for Relationship()
{
  return &type metadata for Relationship;
}

uint64_t sub_1C0CDBDBC()
{
  if (qword_1EF62E2E0 != -1)
    swift_once();
  qword_1EF6D1DC0 = qword_1EF648248;
  unk_1EF6D1DC8 = *(_OWORD *)algn_1EF648250;
  qword_1EF6D1DD8 = qword_1EF648260;
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

uint64_t *sub_1C0CDBE20()
{
  if (qword_1EF62E2A0 != -1)
    swift_once();
  return &qword_1EF6D1DC0;
}

uint64_t sub_1C0CDBE60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 *a7)
{
  __int128 *v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  _BYTE v20[16];

  v16 = *v7;
  v17 = v7[1];
  v18 = *((_QWORD *)v7 + 4);
  v12 = v18;
  v19 = v16;
  v13 = *a7;
  sub_1C08137E4((uint64_t)&v17, (uint64_t)v20);
  sub_1C07B35DC((uint64_t)&v19);
  sub_1C07B35DC((uint64_t)v20);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v14 = sub_1C0D16180(a2, a3, a4, a5, v12, 0, 0, v13);
  sub_1C07B2F5C((uint64_t)&v19);
  sub_1C07B2F5C((uint64_t)v20);
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1C0CDBF30(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  uint64_t v11;
  char v12;
  char v13;

  v3 = v1;
  v5 = sub_1C07ACF80(&qword_1EF6473C8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C07A9480(a1, a1[3]);
  sub_1C0CDC504();
  sub_1C1070EB8();
  v13 = 0;
  sub_1C1070B7C();
  if (!v2)
  {
    v12 = 1;
    sub_1C1070B34();
    v11 = *(_QWORD *)(v3 + 32);
    v10[15] = 2;
    sub_1C07ACF80(&qword_1EF62FE38);
    sub_1C07EB158(&qword_1EF62FE40, (uint64_t (*)(void))sub_1C07EB11C, MEMORY[0x1E0DEAF10]);
    sub_1C1070BB8();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1C0CDC0A8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = sub_1C07ACF80(&qword_1EF6473B8);
  MEMORY[0x1E0C80A78](v5);
  sub_1C07A9480(a1, a1[3]);
  sub_1C0CDC504();
  sub_1C1070E94();
  if (v2)
    return sub_1C0775880();
  v6 = sub_1C1070AA4();
  v8 = v7;
  v14 = v6;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v9 = sub_1C1070A5C();
  v11 = v10;
  v13 = v9;
  sub_1C07ACF80(&qword_1EF62FE38);
  sub_1C07EB158(&qword_1EF62FE58, (uint64_t (*)(void))sub_1C07EB1C0, MEMORY[0x1E0DEAF40]);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C1070AE0();
  sub_1C078F32C();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0775880();
  sub_1C077960C();
  swift_bridgeObjectRelease();
  result = sub_1C077589C();
  *a2 = v14;
  a2[1] = v8;
  a2[2] = v13;
  a2[3] = v11;
  a2[4] = v15;
  return result;
}

uint64_t sub_1C0CDC2C4()
{
  sub_1C0CDC504();
  return sub_1C1070EE8();
}

uint64_t sub_1C0CDC2EC()
{
  sub_1C0CDC504();
  return sub_1C1070EF4();
}

uint64_t sub_1C0CDC314()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return v1;
}

uint64_t sub_1C0CDC340@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  sub_1C0CDBE20();
  v2 = qword_1EF6D1DD8;
  *(_QWORD *)a1 = qword_1EF6D1DC0;
  *(_OWORD *)(a1 + 8) = unk_1EF6D1DC8;
  *(_QWORD *)(a1 + 24) = v2;
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

uint64_t sub_1C0CDC384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 *a7)
{
  return sub_1C0CDBE60(a1, a2, a3, a4, a5, a6, a7);
}

double sub_1C0CDC3A8@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_1C0CDC0A8(a1, (uint64_t *)v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1C0CDC3EC(_QWORD *a1)
{
  return sub_1C0CDBF30(a1);
}

unint64_t sub_1C0CDC400(uint64_t a1)
{
  unint64_t result;

  result = sub_1C0CDC424();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0CDC424()
{
  unint64_t result;

  result = qword_1EF6473A0;
  if (!qword_1EF6473A0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B4174, &type metadata for Relationship);
    atomic_store(result, (unint64_t *)&qword_1EF6473A0);
  }
  return result;
}

unint64_t sub_1C0CDC460(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1C0CDC48C();
  result = sub_1C0CDC4C8();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0CDC48C()
{
  unint64_t result;

  result = qword_1EF6473A8;
  if (!qword_1EF6473A8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B4130, &type metadata for Relationship);
    atomic_store(result, (unint64_t *)&qword_1EF6473A8);
  }
  return result;
}

unint64_t sub_1C0CDC4C8()
{
  unint64_t result;

  result = qword_1EF6473B0;
  if (!qword_1EF6473B0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B4108, &type metadata for Relationship);
    atomic_store(result, (unint64_t *)&qword_1EF6473B0);
  }
  return result;
}

unint64_t sub_1C0CDC504()
{
  unint64_t result;

  result = qword_1EF6473C0;
  if (!qword_1EF6473C0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B4254, &type metadata for Relationship.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF6473C0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for Relationship.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C0CDC58C + 4 * byte_1C10B40E5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C0CDC5C0 + 4 * asc_1C10B40E0[v4]))();
}

uint64_t sub_1C0CDC5C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0CDC5C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0CDC5D0);
  return result;
}

uint64_t sub_1C0CDC5DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0CDC5E4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C0CDC5E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0CDC5F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Relationship.CodingKeys()
{
  return &type metadata for Relationship.CodingKeys;
}

unint64_t sub_1C0CDC610()
{
  unint64_t result;

  result = qword_1EF6473D0;
  if (!qword_1EF6473D0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B422C, &type metadata for Relationship.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF6473D0);
  }
  return result;
}

unint64_t sub_1C0CDC650()
{
  unint64_t result;

  result = qword_1EF6473D8;
  if (!qword_1EF6473D8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B419C, &type metadata for Relationship.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF6473D8);
  }
  return result;
}

unint64_t sub_1C0CDC690()
{
  unint64_t result;

  result = qword_1EF6473E0;
  if (!qword_1EF6473E0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B41C4, &type metadata for Relationship.CodingKeys);
    atomic_store(result, &qword_1EF6473E0);
  }
  return result;
}

uint64_t RelationshipKeyValueStore.__allocating_init(config:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  RelationshipKeyValueStore.init(config:)(a1);
  return v2;
}

uint64_t RelationshipKeyValueStore.aliasToIdentifierStore.getter()
{
  return swift_retain();
}

uint64_t RelationshipKeyValueStore.identifierToRelationship.getter()
{
  return swift_retain();
}

uint64_t RelationshipKeyValueStore.init(config:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = v1;
  v5 = type metadata accessor for Configuration();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v14 - v9;
  sub_1C078E3E0(a1, (uint64_t)&v14 - v9);
  type metadata accessor for KeyValueStore();
  swift_allocObject();
  v11 = KeyValueStore.init(config:domain:)((uint64_t)v10, 0xD000000000000013, 0x80000001C1108BF0);
  if (v2)
  {
    sub_1C078D09C(a1);
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v11;
    sub_1C078E3E0(a1, (uint64_t)v7);
    swift_allocObject();
    v12 = KeyValueStore.init(config:domain:)((uint64_t)v7, 0xD000000000000018, 0x80000001C1108C10);
    sub_1C078D09C(a1);
    *(_QWORD *)(v3 + 24) = v12;
  }
  return v3;
}

uint64_t RelationshipKeyValueStore.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return v0;
}

uint64_t RelationshipKeyValueStore.__deallocating_deinit()
{
  RelationshipKeyValueStore.deinit();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RelationshipKeyValueStore()
{
  return objc_opt_self();
}

uint64_t method lookup function for RelationshipKeyValueStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RelationshipKeyValueStore.__allocating_init(config:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1C0CDC934(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v2;
  type metadata accessor for Fuser();
  *(_QWORD *)(v3 + 32) = sub_1C0779D74();
  type metadata accessor for Linker();
  *(_QWORD *)(v3 + 40) = sub_1C0779D74();
  *(_QWORD *)(v3 + 48) = type metadata accessor for RelationshipFullSourceIngestor();
  *(_QWORD *)(v3 + 56) = sub_1C0786414();
  *(_QWORD *)(v3 + 64) = sub_1C0775870();
  *(_QWORD *)(v3 + 72) = type metadata accessor for Source();
  *(_QWORD *)(v3 + 80) = sub_1C0786414();
  *(_QWORD *)(v3 + 88) = sub_1C0775870();
  type metadata accessor for PhaseStores();
  *(_QWORD *)(v3 + 96) = sub_1C0786414();
  *(_QWORD *)(v3 + 104) = sub_1C0775870();
  *(_BYTE *)(v3 + 129) = *a2;
  return swift_task_switch();
}

uint64_t sub_1C0CDC9E8()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  sub_1C0893744(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 104), (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  if (qword_1ED761598 != -1)
    swift_once();
  v1 = *(_BYTE *)(v0 + 129);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 48);
  v7 = *(_QWORD *)(v0 + 16);
  v8 = sub_1C079E000(*(_QWORD *)(v0 + 72), (uint64_t)&unk_1ED761838);
  *(_QWORD *)(v0 + 112) = v8;
  sub_1C079898C(v8, v2);
  sub_1C0799AC8(v7, v5 + *(int *)(v6 + 20));
  *(_BYTE *)(v5 + *(int *)(v6 + 24)) = 1;
  sub_1C079898C(v8, v5);
  sub_1C079898C(v8, v4);
  sub_1C0799AC8(v7, v3);
  *(_BYTE *)(v0 + 128) = v1;
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v9;
  *v9 = v0;
  v9[1] = sub_1C0CDCB2C;
  return Linker.init(source:stores:pipelineType:)(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 96), (_BYTE *)(v0 + 128));
}

uint64_t sub_1C0CDCB2C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1C0CDCB80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 32);
  v9 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 16);
  v10 = *(_QWORD *)(v0 + 24);
  v12 = *(_QWORD *)(v0 + 88);
  sub_1C0893744(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 80), (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0893744(v6, v2, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  Fuser.init(source:stores:pipelineType:)();
  sub_1C07B1FDC(v6, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C0799AC8(v4, v3);
  sub_1C0A5BD08(v1, v12, v3, v9, v5, 1, v10);
  v11 = v7;
  sub_1C07B1FDC(v4, (uint64_t (*)(_QWORD))type metadata accessor for RelationshipFullSourceIngestor);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v11);
}

void sub_1C0CDCCC4()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1C0CDCCF0()
{
  return type metadata accessor for RelationshipPhase();
}

uint64_t type metadata accessor for RelationshipPhase()
{
  uint64_t result;

  result = qword_1ED741E80;
  if (!qword_1ED741E80)
    return swift_getSingletonMetadata();
  return result;
}

_QWORD *sub_1C0CDCD30(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    v4 = (_QWORD *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    v8 = type metadata accessor for Source();
    v9 = *(int *)(v8 + 24);
    v10 = (char *)v4 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_1C106D1F8();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v13(v10, v11, v12);
    *((_BYTE *)v4 + *(int *)(v8 + 28)) = *((_BYTE *)a2 + *(int *)(v8 + 28));
    v14 = *(int *)(a3 + 20);
    v15 = (char *)v4 + v14;
    v16 = (char *)a2 + v14;
    v17 = sub_1C106AB28();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v18 = type metadata accessor for Configuration();
    *(_OWORD *)&v15[*(int *)(v18 + 20)] = *(_OWORD *)&v16[*(int *)(v18 + 20)];
    v19 = (int *)type metadata accessor for PhaseStores();
    *(_QWORD *)&v15[v19[5]] = *(_QWORD *)&v16[v19[5]];
    *(_QWORD *)&v15[v19[6]] = *(_QWORD *)&v16[v19[6]];
    *(_QWORD *)&v15[v19[7]] = *(_QWORD *)&v16[v19[7]];
    *(_QWORD *)&v15[v19[8]] = *(_QWORD *)&v16[v19[8]];
    *(_QWORD *)&v15[v19[9]] = *(_QWORD *)&v16[v19[9]];
    *(_QWORD *)&v15[v19[10]] = *(_QWORD *)&v16[v19[10]];
    *(_QWORD *)&v15[v19[11]] = *(_QWORD *)&v16[v19[11]];
    *((_BYTE *)v4 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1C0CDCEE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(type metadata accessor for Source() + 24);
  v5 = sub_1C106D1F8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 20);
  v7 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  type metadata accessor for PhaseStores();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *sub_1C0CDCFBC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = type metadata accessor for Source();
  v8 = *(int *)(v7 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1C106D1F8();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v12(v9, v10, v11);
  *((_BYTE *)a1 + *(int *)(v7 + 28)) = *((_BYTE *)a2 + *(int *)(v7 + 28));
  v13 = *(int *)(a3 + 20);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_1C106AB28();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  v17 = type metadata accessor for Configuration();
  *(_OWORD *)&v14[*(int *)(v17 + 20)] = *(_OWORD *)&v15[*(int *)(v17 + 20)];
  v18 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)&v14[v18[5]] = *(_QWORD *)&v15[v18[5]];
  *(_QWORD *)&v14[v18[6]] = *(_QWORD *)&v15[v18[6]];
  *(_QWORD *)&v14[v18[7]] = *(_QWORD *)&v15[v18[7]];
  *(_QWORD *)&v14[v18[8]] = *(_QWORD *)&v15[v18[8]];
  *(_QWORD *)&v14[v18[9]] = *(_QWORD *)&v15[v18[9]];
  *(_QWORD *)&v14[v18[10]] = *(_QWORD *)&v15[v18[10]];
  *(_QWORD *)&v14[v18[11]] = *(_QWORD *)&v15[v18[11]];
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_1C0CDD144(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int *v18;

  *a1 = *a2;
  a1[1] = a2[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v6 = type metadata accessor for Source();
  v7 = *(int *)(v6 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1C106D1F8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *((_BYTE *)a1 + *(int *)(v6 + 28)) = *((_BYTE *)a2 + *(int *)(v6 + 28));
  v11 = *(int *)(a3 + 20);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_1C106AB28();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = *(int *)(type metadata accessor for Configuration() + 20);
  v16 = &v12[v15];
  v17 = &v13[v15];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
  v18 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)&v12[v18[5]] = *(_QWORD *)&v13[v18[5]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v12[v18[6]] = *(_QWORD *)&v13[v18[6]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v12[v18[7]] = *(_QWORD *)&v13[v18[7]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v12[v18[8]] = *(_QWORD *)&v13[v18[8]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v12[v18[9]] = *(_QWORD *)&v13[v18[9]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v12[v18[10]] = *(_QWORD *)&v13[v18[10]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v12[v18[11]] = *(_QWORD *)&v13[v18[11]];
  swift_retain();
  swift_release();
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1C0CDD31C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = type metadata accessor for Source();
  v7 = *(int *)(v6 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1C106D1F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_BYTE *)(a1 + *(int *)(v6 + 28)) = *(_BYTE *)(a2 + *(int *)(v6 + 28));
  v11 = *(int *)(a3 + 20);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = type metadata accessor for Configuration();
  *(_OWORD *)(v12 + *(int *)(v15 + 20)) = *(_OWORD *)(v13 + *(int *)(v15 + 20));
  v16 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(v12 + v16[5]) = *(_QWORD *)(v13 + v16[5]);
  *(_QWORD *)(v12 + v16[6]) = *(_QWORD *)(v13 + v16[6]);
  *(_QWORD *)(v12 + v16[7]) = *(_QWORD *)(v13 + v16[7]);
  *(_QWORD *)(v12 + v16[8]) = *(_QWORD *)(v13 + v16[8]);
  *(_QWORD *)(v12 + v16[9]) = *(_QWORD *)(v13 + v16[9]);
  *(_QWORD *)(v12 + v16[10]) = *(_QWORD *)(v13 + v16[10]);
  *(_QWORD *)(v12 + v16[11]) = *(_QWORD *)(v13 + v16[11]);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *sub_1C0CDD450(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v7 = type metadata accessor for Source();
  v8 = *(int *)(v7 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1C106D1F8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  *((_BYTE *)a1 + *(int *)(v7 + 28)) = *((_BYTE *)a2 + *(int *)(v7 + 28));
  v12 = *(int *)(a3 + 20);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_1C106AB28();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = type metadata accessor for Configuration();
  *(_OWORD *)&v13[*(int *)(v16 + 20)] = *(_OWORD *)&v14[*(int *)(v16 + 20)];
  v17 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)&v13[v17[5]] = *(_QWORD *)&v14[v17[5]];
  swift_release();
  *(_QWORD *)&v13[v17[6]] = *(_QWORD *)&v14[v17[6]];
  swift_release();
  *(_QWORD *)&v13[v17[7]] = *(_QWORD *)&v14[v17[7]];
  swift_release();
  *(_QWORD *)&v13[v17[8]] = *(_QWORD *)&v14[v17[8]];
  swift_release();
  *(_QWORD *)&v13[v17[9]] = *(_QWORD *)&v14[v17[9]];
  swift_release();
  *(_QWORD *)&v13[v17[10]] = *(_QWORD *)&v14[v17[10]];
  swift_release();
  *(_QWORD *)&v13[v17[11]] = *(_QWORD *)&v14[v17[11]];
  swift_release();
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1C0CDD5C8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0CDD5D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v11;

  v6 = sub_1C078BD20();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = v4;
    return sub_1C07B2D80(v8, v3, v7);
  }
  v9 = type metadata accessor for PhaseStores();
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v9;
    v8 = v4 + *(int *)(a3 + 20);
    return sub_1C07B2D80(v8, v3, v7);
  }
  v11 = *(unsigned __int8 *)(v4 + *(int *)(a3 + 24));
  if (v11 >= 4)
    return v11 - 3;
  else
    return 0;
}

uint64_t sub_1C0CDD664()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0CDD670(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v8 = sub_1C078BD20();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = v5;
    return sub_1C07B2D8C(v10, v4, v4, v9);
  }
  result = type metadata accessor for PhaseStores();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
  {
    v9 = result;
    v10 = v5 + *(int *)(a4 + 20);
    return sub_1C07B2D8C(v10, v4, v4, v9);
  }
  *(_BYTE *)(v5 + *(int *)(a4 + 24)) = v4 + 3;
  return result;
}

uint64_t type metadata accessor for RelationshipFullSourceIngestor()
{
  uint64_t result;

  result = qword_1ED751118;
  if (!qword_1ED751118)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C0CDD738()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for Source();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for PhaseStores();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C0CDD7C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  NSObject *v61;
  os_log_type_t v62;
  uint64_t v63;
  uint8_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  BOOL v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  int *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char v100;
  unint64_t v101;
  char v102;
  char v103;
  uint64_t v104;
  unint64_t v105;
  char v106;
  uint64_t *v107;
  uint64_t v108;
  BOOL v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  NSObject *v114;
  os_log_type_t v115;
  uint8_t *v116;
  void *v117;
  _BYTE *v118;
  uint64_t result;
  char *v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  _QWORD *v141;
  unint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  _QWORD *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  uint64_t v159;

  v121 = a2;
  v3 = sub_1C106F544();
  v127 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v136 = (char *)&v120 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v120 = (char *)&v120 - v6;
  v150 = type metadata accessor for RelationshipStructs.LocalizedNameRelationshipType(0);
  v124 = *(_QWORD *)(v150 - 8);
  MEMORY[0x1E0C80A78](v150);
  v123 = (uint64_t)&v120 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v120 - v9;
  MEMORY[0x1E0C80A78](v11);
  v159 = (uint64_t)&v120 - v12;
  MEMORY[0x1E0C80A78](v13);
  v146 = (uint64_t)&v120 - v14;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v120 - v16;
  v18 = sub_1C07ACF80(&qword_1ED759F70);
  MEMORY[0x1E0C80A78](v18);
  v148 = (uint64_t)&v120 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1C07ACF80(&qword_1ED750B50);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v120 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for RelationshipStructs.LivingBeingRelationship(0);
  v129 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v130 = (uint64_t)&v120 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v28 = (char *)&v120 - v27;
  if (*(_QWORD *)(a1 + 24))
    v29 = *(_QWORD *)(a1 + 24);
  else
    v29 = MEMORY[0x1E0DEE9D8];
  v134 = *(_QWORD *)(v29 + 16);
  if (v134)
  {
    v140 = v26;
    v122 = v10;
    v132 = v29 + 32;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v126 = v3;
    v133 = v22;
    v30 = 0;
    v31 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v131 = v29;
    v139 = v28;
    while (1)
    {
      if (v30 >= *(_QWORD *)(v29 + 16))
      {
        __break(1u);
LABEL_77:
        __break(1u);
LABEL_78:
        __break(1u);
LABEL_79:
        result = sub_1C1070D44();
        __break(1u);
        return result;
      }
      v142 = v30;
      v32 = (_QWORD *)(v132 + 88 * v30);
      v33 = (_QWORD *)v32[2];
      v149 = v32[1];
      v34 = v32[4];
      v152 = v32[5];
      v35 = v32[6];
      v138 = v32[7];
      v36 = v32[8];
      v37 = v32[9];
      v38 = v32[10];
      v39 = v31[2];
      v144 = v36;
      v145 = v38;
      v143 = v34;
      if (v39)
      {
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        swift_bridgeObjectRetain_n();
        v40 = v33;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v41 = v35;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v42 = v37;
        v43 = sub_1C077D774(v37, v38);
        v45 = (uint64_t)v133;
        if ((v44 & 1) != 0)
        {
          sub_1C07E05C8(v31[7] + *(_QWORD *)(v129 + 72) * v43, (uint64_t)v133, type metadata accessor for RelationshipStructs.LivingBeingRelationship);
          v46 = v45;
          v47 = 0;
        }
        else
        {
          v46 = (uint64_t)v133;
          v47 = 1;
        }
        v49 = v140;
        sub_1C07B2D8C(v46, v47, 1, v140);
        swift_bridgeObjectRelease();
        v50 = v31;
      }
      else
      {
        v42 = v37;
        v141 = v31;
        v48 = (uint64_t)v133;
        v49 = v140;
        sub_1C07B2D8C((uint64_t)v133, 1, 1, v140);
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        swift_bridgeObjectRetain_n();
        v40 = v33;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v41 = v35;
        v45 = v48;
        v50 = v141;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      }
      v51 = sub_1C07B2D80(v45, 1, v49);
      v137 = v42;
      if (v51 == 1)
      {
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v52 = (uint64_t)v139;
        v53 = v135;
        sub_1C105DEE0();
        v135 = v53;
        v31 = v40;
        if (v53)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1C08D6F14(v45, &qword_1ED750B50);
          swift_bridgeObjectRelease();
          return (uint64_t)v31;
        }
        sub_1C08D6F14(v45, &qword_1ED750B50);
      }
      else
      {
        v52 = (uint64_t)v139;
        sub_1C07E05F4(v45, (uint64_t)v139, type metadata accessor for RelationshipStructs.LivingBeingRelationship);
        v31 = v40;
      }
      v54 = v41;
      if (!v144)
      {
        v60 = v50;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
LABEL_23:
        swift_bridgeObjectRelease();
        sub_1C106F160();
        v61 = sub_1C106F538();
        v62 = sub_1C1070378();
        v63 = v52;
        if (os_log_type_enabled(v61, v62))
        {
          v64 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v64 = 0;
          _os_log_impl(&dword_1C0771000, v61, v62, "No relationship predicate for this triple. Skipping", v64, 2u);
          MEMORY[0x1C3BA8270](v64, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v127 + 8))(v136, v126);
        v31 = v60;
        goto LABEL_68;
      }
      if (!v41)
      {
        v60 = v50;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_23;
      }
      v147 = v31;
      v141 = v50;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v55 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v56 = (void *)MEMORY[0x1C3BA79F4](v55);
      v153 = v152;
      v154 = v54;
      v157 = 95;
      v158 = 0xE100000000000000;
      sub_1C07B1280();
      v57 = sub_1C10705D0();
      v58 = *(_QWORD *)(v57 + 16);
      if (v58 >= 2)
      {
        v153 = v57;
        v154 = v57 + 32;
        v155 = 1;
        v156 = (2 * v58) | 1;
        sub_1C07ACF80(qword_1ED7615A0);
        sub_1C0CDFFB0();
        v151 = sub_1C106FA54();
        v59 = v65;
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        v151 = 0;
        v59 = 0;
      }
      v66 = MEMORY[0x1E0DEE9D8];
      v67 = v52;
      objc_autoreleasePoolPop(v56);
      swift_bridgeObjectRelease();
      if (!v59)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        v113 = v120;
        sub_1C106F160();
        v114 = sub_1C106F538();
        v115 = sub_1C1070390();
        if (os_log_type_enabled(v114, v115))
        {
          v116 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v116 = 0;
          _os_log_impl(&dword_1C0771000, v114, v115, "Relationship ID on asset does not conform to ID_LOCALE expectation.", v116, 2u);
          MEMORY[0x1C3BA8270](v116, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v127 + 8))(v113, v126);
        sub_1C0898824();
        v117 = (void *)swift_allocError();
        *v118 = 0;
        LOBYTE(v153) = 1;
        static Transformers.reportError(error:context:config:pipelineType:)((uint64_t)v117, 0x6E6F6974616C6552, 0xEC00000070696873, v121, (unsigned __int8 *)&v153);
        sub_1C08D6F78(v67, type metadata accessor for RelationshipStructs.LivingBeingRelationship);

        swift_bridgeObjectRelease();
        return 0;
      }
      v152 = v59;
      v128 = v54;
      sub_1C106E1DC();
      v68 = *(int *)(v140 + 32);
      if (*(_QWORD *)(v52 + v68))
        v69 = *(_QWORD *)(v52 + v68);
      else
        v69 = v66;
      v70 = *(_QWORD *)(v69 + 16);
      if (v70)
      {
        v138 = *(int *)(v140 + 32);
        v71 = v124;
        v72 = (*(unsigned __int8 *)(v124 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v124 + 80);
        v125 = v69;
        v73 = v69 + v72;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v74 = 0;
        v75 = *(_QWORD *)(v71 + 72);
        do
        {
          sub_1C07E05C8(v73, (uint64_t)v17, type metadata accessor for RelationshipStructs.LocalizedNameRelationshipType);
          v76 = &v17[*(int *)(v150 + 32)];
          v77 = *((_QWORD *)v76 + 1);
          if (v77)
          {
            v78 = *(_QWORD *)v76 == v151 && v77 == v152;
            if (v78 || (sub_1C1070CB4() & 1) != 0)
            {
              v79 = v146;
              sub_1C0CDE65C(v148, v149, (uint64_t)v147, (uint64_t)v17, v146);
              sub_1C08D6F78((uint64_t)v17, type metadata accessor for RelationshipStructs.LocalizedNameRelationshipType);
              sub_1C07E05F4(v79, (uint64_t)v17, type metadata accessor for RelationshipStructs.LocalizedNameRelationshipType);
              v74 = 1;
            }
          }
          sub_1C07E05C8((uint64_t)v17, v159, type metadata accessor for RelationshipStructs.LocalizedNameRelationshipType);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C07EC2BC();
            v66 = v81;
          }
          v80 = *(_QWORD *)(v66 + 16);
          if (v80 >= *(_QWORD *)(v66 + 24) >> 1)
          {
            sub_1C07EC2BC();
            v66 = v82;
          }
          *(_QWORD *)(v66 + 16) = v80 + 1;
          sub_1C07E05F4(v159, v66 + v72 + v80 * v75, type metadata accessor for RelationshipStructs.LocalizedNameRelationshipType);
          sub_1C08D6F78((uint64_t)v17, type metadata accessor for RelationshipStructs.LocalizedNameRelationshipType);
          v73 += v75;
          --v70;
        }
        while (v70);
        swift_bridgeObjectRelease();
        v68 = v138;
      }
      else
      {
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        swift_bridgeObjectRelease();
        v74 = 0;
      }
      sub_1C0898D28((uint64_t)&unk_1E7A00A28);
      if ((v74 & 1) != 0)
      {
        v84 = v145;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1C0A791CC(v151, v152, v83);
        v86 = v85;
        swift_bridgeObjectRelease();
        if ((v86 & 1) != 0)
        {
          v138 = v68;
          v87 = sub_1C106E41C();
          v88 = (uint64_t)v122;
          sub_1C07B2D8C((uint64_t)v122, 1, 1, v87);
          v89 = (int *)v150;
          sub_1C106D06C();
          v90 = v89[6];
          v63 = (uint64_t)v139;
          if (qword_1ED761598 != -1)
            swift_once();
          v91 = type metadata accessor for Source();
          v92 = sub_1C079E000(v91, (uint64_t)&unk_1ED761838);
          sub_1C07E05C8(v92, v88 + v90, (uint64_t (*)(_QWORD))type metadata accessor for Source);
          sub_1C106DFD8();
          v93 = (_QWORD *)(v88 + v89[8]);
          sub_1C106DD74();
          *(_QWORD *)(v88 + v89[10]) = 0;
          v94 = v152;
          *v93 = v151;
          v93[1] = v94;
          v95 = v146;
          sub_1C0CDE65C(v148, v149, (uint64_t)v147, v88, v146);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1C08A5BCC(v95, v88, type metadata accessor for RelationshipStructs.LocalizedNameRelationshipType);
          sub_1C07E05C8(v88, v123, type metadata accessor for RelationshipStructs.LocalizedNameRelationshipType);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C07EC2BC();
            v66 = v111;
          }
          v68 = v138;
          v96 = *(_QWORD *)(v66 + 16);
          if (v96 >= *(_QWORD *)(v66 + 24) >> 1)
          {
            sub_1C07EC2BC();
            v66 = v112;
          }
          *(_QWORD *)(v66 + 16) = v96 + 1;
          sub_1C07E05F4(v123, v66+ ((*(unsigned __int8 *)(v124 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v124 + 80))+ *(_QWORD *)(v124 + 72) * v96, type metadata accessor for RelationshipStructs.LocalizedNameRelationshipType);
          sub_1C08D6F78((uint64_t)v122, type metadata accessor for RelationshipStructs.LocalizedNameRelationshipType);
          v84 = v145;
          goto LABEL_59;
        }
        v84 = v145;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      v63 = (uint64_t)v139;
LABEL_59:
      v97 = v137;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v63 + v68) = v66;
      sub_1C105F9B0();
      sub_1C07E05C8(v63, v130, type metadata accessor for RelationshipStructs.LivingBeingRelationship);
      v98 = (uint64_t)v141;
      swift_isUniquelyReferenced_nonNull_native();
      v153 = v98;
      v99 = sub_1C077D774(v97, v84);
      if (__OFADD__(*(_QWORD *)(v98 + 16), (v100 & 1) == 0))
        goto LABEL_77;
      v101 = v99;
      v102 = v100;
      sub_1C07ACF80(&qword_1ED751310);
      v103 = sub_1C107090C();
      v104 = v145;
      if ((v103 & 1) != 0)
      {
        v105 = sub_1C077D774(v97, v145);
        if ((v102 & 1) != (v106 & 1))
          goto LABEL_79;
        v101 = v105;
      }
      v31 = (_QWORD *)v153;
      if ((v102 & 1) != 0)
      {
        sub_1C08A5BCC(v130, *(_QWORD *)(v153 + 56) + *(_QWORD *)(v129 + 72) * v101, type metadata accessor for RelationshipStructs.LivingBeingRelationship);
      }
      else
      {
        *(_QWORD *)(v153 + 8 * (v101 >> 6) + 64) |= 1 << v101;
        v107 = (uint64_t *)(v31[6] + 16 * v101);
        *v107 = v97;
        v107[1] = v104;
        sub_1C07E05F4(v130, v31[7] + *(_QWORD *)(v129 + 72) * v101, type metadata accessor for RelationshipStructs.LivingBeingRelationship);
        v108 = v31[2];
        v109 = __OFADD__(v108, 1);
        v110 = v108 + 1;
        if (v109)
          goto LABEL_78;
        v31[2] = v110;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C08D6F14(v148, &qword_1ED759F70);
LABEL_68:
      v29 = v131;
      v30 = v142 + 1;
      sub_1C08D6F78(v63, type metadata accessor for RelationshipStructs.LivingBeingRelationship);
      if (v30 == v134)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v31;
      }
    }
  }
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9E0];
}

uint64_t sub_1C0CDE65C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t result;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char v53;
  void (*v54)(char *, uint64_t);
  char *v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v70 = a3;
  v67 = a2;
  v8 = sub_1C106F544();
  v64 = *(_QWORD *)(v8 - 8);
  v65 = v8;
  MEMORY[0x1E0C80A78](v8);
  v63 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C106E41C();
  v72 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v66 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1C07ACF80(&qword_1ED750660);
  MEMORY[0x1E0C80A78](v12);
  v69 = (uint64_t)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v61 - v15;
  v17 = sub_1C07ACF80(&qword_1ED759F70);
  MEMORY[0x1E0C80A78](v17);
  v68 = (uint64_t)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v61 - v20;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v61 - v23;
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v61 - v26;
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v61 - v29;
  v71 = a5;
  v31 = a5;
  v32 = v12;
  sub_1C07E05C8(a4, v31, type metadata accessor for RelationshipStructs.LocalizedNameRelationshipType);
  sub_1C0A13288(a1, (uint64_t)v30);
  sub_1C106DD74();
  sub_1C07B2D8C((uint64_t)v27, 0, 1, v10);
  v33 = (uint64_t)&v16[*(int *)(v12 + 48)];
  sub_1C0A13288((uint64_t)v27, (uint64_t)v16);
  sub_1C0A13288((uint64_t)v30, v33);
  if (sub_1C07B2D80((uint64_t)v16, 1, v10) == 1)
  {
    sub_1C08D6F14((uint64_t)v27, &qword_1ED759F70);
    if (sub_1C07B2D80(v33, 1, v10) == 1)
    {
      sub_1C08D6F14((uint64_t)v16, &qword_1ED759F70);
LABEL_14:
      sub_1C08D6F14((uint64_t)v30, &qword_1ED759F70);
      v42 = v70;
      v41 = v71;
      goto LABEL_15;
    }
    goto LABEL_6;
  }
  sub_1C0A13288((uint64_t)v16, (uint64_t)v24);
  if (sub_1C07B2D80(v33, 1, v10) == 1)
  {
    sub_1C08D6F14((uint64_t)v27, &qword_1ED759F70);
    (*(void (**)(char *, uint64_t))(v72 + 8))(v24, v10);
LABEL_6:
    sub_1C08D6F14((uint64_t)v16, &qword_1ED750660);
    goto LABEL_7;
  }
  v62 = v12;
  v37 = v72;
  v38 = v66;
  (*(void (**)(char *, uint64_t, uint64_t))(v72 + 32))(v66, v33, v10);
  sub_1C0794BAC((unint64_t *)&qword_1ED75EA30, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC78]);
  v39 = sub_1C106FAA8();
  v40 = *(void (**)(char *, uint64_t))(v37 + 8);
  v32 = v62;
  v40(v38, v10);
  sub_1C08D6F14((uint64_t)v27, &qword_1ED759F70);
  v40(v24, v10);
  sub_1C08D6F14((uint64_t)v16, &qword_1ED759F70);
  if ((v39 & 1) != 0)
    goto LABEL_14;
LABEL_7:
  sub_1C106E248();
  sub_1C07B2D8C((uint64_t)v21, 0, 1, v10);
  v34 = *(int *)(v32 + 48);
  v35 = v69;
  v36 = v69 + v34;
  sub_1C0A13288((uint64_t)v21, v69);
  sub_1C080AD78((uint64_t)v30, v36, &qword_1ED759F70);
  if (sub_1C07B2D80(v35, 1, v10) == 1)
  {
    sub_1C08D6F14((uint64_t)v21, &qword_1ED759F70);
    if (sub_1C07B2D80(v36, 1, v10) == 1)
    {
      v30 = (char *)v35;
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  sub_1C0A13288(v35, v68);
  if (sub_1C07B2D80(v36, 1, v10) == 1)
  {
    sub_1C08D6F14((uint64_t)v21, &qword_1ED759F70);
    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v68, v10);
LABEL_12:
    sub_1C08D6F14(v35, &qword_1ED750660);
    goto LABEL_23;
  }
  v50 = v68;
  v51 = v72;
  v52 = v66;
  (*(void (**)(char *, uint64_t, uint64_t))(v72 + 32))(v66, v36, v10);
  sub_1C0794BAC((unint64_t *)&qword_1ED75EA30, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC78]);
  v53 = sub_1C106FAA8();
  v54 = *(void (**)(char *, uint64_t))(v51 + 8);
  v54(v52, v10);
  sub_1C08D6F14((uint64_t)v21, &qword_1ED759F70);
  v54((char *)v50, v10);
  sub_1C08D6F14(v35, &qword_1ED759F70);
  v42 = v70;
  v41 = v71;
  if ((v53 & 1) != 0)
  {
LABEL_15:
    v43 = *(int *)(type metadata accessor for RelationshipStructs.LocalizedNameRelationshipType(0) + 40);
    v44 = *(_QWORD *)(v41 + v43);
    if (v44)
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v45 = v44;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C07B7730();
        v45 = v59;
      }
      v46 = *(_QWORD *)(v45 + 16);
      if (v46 >= *(_QWORD *)(v45 + 24) >> 1)
      {
        sub_1C07B7730();
        v45 = v60;
      }
      *(_QWORD *)(v45 + 16) = v46 + 1;
      v47 = v45 + 16 * v46;
      *(_QWORD *)(v47 + 32) = v67;
      *(_QWORD *)(v47 + 40) = v42;
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v41 + v43) = v45;
    }
    else
    {
      sub_1C07ACF80(&qword_1ED762CB0);
      v49 = swift_allocObject();
      *(_OWORD *)(v49 + 16) = xmmword_1C1079220;
      *(_QWORD *)(v49 + 32) = v67;
      *(_QWORD *)(v49 + 40) = v42;
      *(_QWORD *)(v41 + v43) = v49;
      return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    }
    return result;
  }
LABEL_23:
  v55 = v63;
  sub_1C106F160();
  v56 = sub_1C106F538();
  v57 = sub_1C1070378();
  if (os_log_type_enabled(v56, v57))
  {
    v58 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v58 = 0;
    _os_log_impl(&dword_1C0771000, v56, v57, "Found triple, but not mapping during source ingestion.", v58, 2u);
    MEMORY[0x1C3BA8270](v58, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v55, v65);
}

uint64_t sub_1C0CDECDC(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t (*v15)(uint64_t);
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t);
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  unint64_t v48;
  char v49;
  unint64_t v50;
  char v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t result;
  int64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  int64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  int64_t v77;
  unint64_t v78;
  uint64_t v79;
  _QWORD *v80;

  v63 = type metadata accessor for RelationshipStructs.LocalizedNameRelationshipType(0);
  v73 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  v72 = (uint64_t)&v62 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = &qword_1ED751250;
  v4 = sub_1C07ACF80(&qword_1ED751250);
  MEMORY[0x1E0C80A78](v4);
  v6 = (int64_t *)((char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v7);
  v9 = (int64_t *)((char *)&v62 - v8);
  v10 = *(_QWORD *)(a1 + 64);
  v64 = a1 + 64;
  v11 = 1 << *(_BYTE *)(a1 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v67 = (unint64_t)(v11 + 63) >> 6;
  v62 = v67 - 1;
  v74 = a1;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v77 = 0;
  v14 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v15 = type metadata accessor for RelationshipStructs.LivingBeingRelationship;
  if (!v13)
    goto LABEL_6;
LABEL_4:
  v16 = __clz(__rbit64(v13));
  v17 = (v13 - 1) & v13;
  v18 = v16 | (v77 << 6);
LABEL_5:
  v19 = *(_QWORD *)(v74 + 56);
  v20 = (_QWORD *)(*(_QWORD *)(v74 + 48) + 16 * v18);
  v21 = v20[1];
  *v6 = *v20;
  v6[1] = v21;
  v22 = v19
      + *(_QWORD *)(*(_QWORD *)(type metadata accessor for RelationshipStructs.LivingBeingRelationship(0) - 8) + 72)
      * v18;
  v23 = sub_1C07ACF80(&qword_1ED751248);
  sub_1C07E05C8(v22, (uint64_t)v6 + *(int *)(v23 + 48), v15);
  sub_1C07B2D8C((uint64_t)v6, 0, 1, v23);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  while (1)
  {
    sub_1C080AD78((uint64_t)v6, (uint64_t)v9, v3);
    v28 = sub_1C07ACF80(&qword_1ED751248);
    if (sub_1C07B2D80((uint64_t)v9, 1, v28) == 1)
    {
      swift_release();
      return (uint64_t)v14;
    }
    v78 = v17;
    v29 = *v9;
    v30 = v9[1];
    v31 = (uint64_t)v9 + *(int *)(v28 + 48);
    v32 = *(_QWORD *)(v31 + *(int *)(type metadata accessor for RelationshipStructs.LivingBeingRelationship(0) + 32));
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C08D6F78(v31, v15);
    v33 = v32 ? v32 : MEMORY[0x1E0DEE9D8];
    v34 = *(_QWORD *)(v33 + 16);
    if (v34)
      break;
LABEL_29:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v13 = v78;
    if (v78)
      goto LABEL_4;
LABEL_6:
    v24 = v77 + 1;
    if (__OFADD__(v77, 1))
      goto LABEL_53;
    if (v24 < v67)
    {
      v25 = *(_QWORD *)(v64 + 8 * v24);
      if (v25)
        goto LABEL_9;
      v26 = v77 + 2;
      ++v77;
      if (v24 + 1 < v67)
      {
        v25 = *(_QWORD *)(v64 + 8 * v26);
        if (v25)
          goto LABEL_12;
        v77 = v24 + 1;
        if (v24 + 2 < v67)
        {
          v25 = *(_QWORD *)(v64 + 8 * (v24 + 2));
          if (v25)
          {
            v24 += 2;
            goto LABEL_9;
          }
          v26 = v24 + 3;
          v77 = v24 + 2;
          if (v24 + 3 < v67)
          {
            v25 = *(_QWORD *)(v64 + 8 * v26);
            if (!v25)
            {
              while (1)
              {
                v24 = v26 + 1;
                if (__OFADD__(v26, 1))
                  goto LABEL_54;
                if (v24 >= v67)
                {
                  v77 = v62;
                  goto LABEL_23;
                }
                v25 = *(_QWORD *)(v64 + 8 * v24);
                ++v26;
                if (v25)
                  goto LABEL_9;
              }
            }
LABEL_12:
            v24 = v26;
LABEL_9:
            v17 = (v25 - 1) & v25;
            v18 = __clz(__rbit64(v25)) + (v24 << 6);
            v77 = v24;
            goto LABEL_5;
          }
        }
      }
    }
LABEL_23:
    v27 = sub_1C07ACF80(&qword_1ED751248);
    sub_1C07B2D8C((uint64_t)v6, 1, 1, v27);
    v17 = 0;
  }
  v79 = v30;
  v35 = 0;
  v36 = *(int *)(v63 + 40);
  v70 = v33 + ((*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80));
  v71 = v36;
  v65 = v9;
  v66 = v6;
  v68 = v34;
  v69 = v33;
  while (v35 < *(_QWORD *)(v33 + 16))
  {
    v37 = v15;
    v38 = v3;
    v39 = v72;
    sub_1C07E05C8(v70 + *(_QWORD *)(v73 + 72) * v35, v72, type metadata accessor for RelationshipStructs.LocalizedNameRelationshipType);
    v40 = *(_QWORD *)(v39 + v71);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C08D6F78(v39, type metadata accessor for RelationshipStructs.LocalizedNameRelationshipType);
    if (v40)
    {
      v75 = v40;
      v76 = v35;
      v41 = *(_QWORD *)(v40 + 16);
      if (v41)
      {
        v42 = (uint64_t *)(v40 + 40);
        while (1)
        {
          v43 = v29;
          v44 = *(v42 - 1);
          v45 = *v42;
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          swift_isUniquelyReferenced_nonNull_native();
          v80 = v14;
          v46 = sub_1C077D774(v44, v45);
          if (__OFADD__(v14[2], (v47 & 1) == 0))
            break;
          v48 = v46;
          v49 = v47;
          sub_1C07ACF80(&qword_1ED762C48);
          if ((sub_1C107090C() & 1) != 0)
          {
            v50 = sub_1C077D774(v44, v45);
            if ((v49 & 1) != (v51 & 1))
              goto LABEL_55;
            v48 = v50;
          }
          v14 = v80;
          if ((v49 & 1) != 0)
          {
            v52 = (_QWORD *)(v80[7] + 16 * v48);
            swift_bridgeObjectRelease();
            v29 = v43;
            v53 = v79;
            *v52 = v43;
            v52[1] = v53;
          }
          else
          {
            v80[(v48 >> 6) + 8] |= 1 << v48;
            v54 = (uint64_t *)(v14[6] + 16 * v48);
            *v54 = v44;
            v54[1] = v45;
            v55 = (_QWORD *)(v14[7] + 16 * v48);
            v56 = v79;
            *v55 = v43;
            v55[1] = v56;
            v57 = v14[2];
            v58 = __OFADD__(v57, 1);
            v59 = v57 + 1;
            if (v58)
              goto LABEL_51;
            v29 = v43;
            v14[2] = v59;
            _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          }
          v42 += 2;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!--v41)
            goto LABEL_45;
        }
        __break(1u);
LABEL_51:
        __break(1u);
        break;
      }
LABEL_45:
      swift_bridgeObjectRelease();
      v3 = &qword_1ED751250;
      v9 = v65;
      v6 = v66;
      v15 = type metadata accessor for RelationshipStructs.LivingBeingRelationship;
      v60 = v68;
      v35 = v76;
    }
    else
    {
      v60 = v68;
      v3 = v38;
      v15 = v37;
    }
    ++v35;
    v33 = v69;
    if (v35 == v60)
      goto LABEL_29;
  }
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  result = sub_1C1070D44();
  __break(1u);
  return result;
}

uint64_t sub_1C0CDF298(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  char v39;
  char v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  BOOL v47;
  uint64_t v48;
  uint64_t result;
  uint64_t v50;
  int64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *i;
  uint64_t v62;
  int64_t v63;
  unint64_t v64;
  _QWORD *v65;

  v2 = type metadata accessor for RelationshipStructs.LocalizedNameRelationshipType(0);
  v54 = *(_QWORD *)(v2 - 8);
  v55 = v2;
  MEMORY[0x1E0C80A78](v2);
  v60 = (uint64_t)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1C07ACF80(&qword_1ED751250);
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t *)((char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v7);
  v9 = (uint64_t *)((char *)&v50 - v8);
  v10 = *(_QWORD *)(a1 + 64);
  v56 = a1 + 64;
  v11 = 1 << *(_BYTE *)(a1 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v64 = v12 & v10;
  v57 = (unint64_t)(v11 + 63) >> 6;
  v51 = v57 - 1;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v63 = 0;
  v13 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  for (i = v9; ; v9 = i)
  {
    if (v64)
    {
      v14 = __clz(__rbit64(v64));
      v64 &= v64 - 1;
      v15 = v14 | (v63 << 6);
LABEL_6:
      v16 = *(_QWORD *)(a1 + 56);
      v17 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v15);
      v18 = v17[1];
      *v6 = *v17;
      v6[1] = v18;
      v19 = v16
          + *(_QWORD *)(*(_QWORD *)(type metadata accessor for RelationshipStructs.LivingBeingRelationship(0) - 8)
                      + 72)
          * v15;
      v20 = sub_1C07ACF80(&qword_1ED751248);
      sub_1C07E05C8(v19, (uint64_t)v6 + *(int *)(v20 + 48), type metadata accessor for RelationshipStructs.LivingBeingRelationship);
      sub_1C07B2D8C((uint64_t)v6, 0, 1, v20);
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      goto LABEL_25;
    }
    v21 = v63 + 1;
    if (__OFADD__(v63, 1))
    {
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
    if (v21 < v57)
    {
      v22 = *(_QWORD *)(v56 + 8 * v21);
      if (v22)
        goto LABEL_10;
      v23 = v63 + 2;
      ++v63;
      if (v21 + 1 < v57)
      {
        v22 = *(_QWORD *)(v56 + 8 * v23);
        if (v22)
          goto LABEL_13;
        v63 = v21 + 1;
        if (v21 + 2 < v57)
        {
          v22 = *(_QWORD *)(v56 + 8 * (v21 + 2));
          if (v22)
          {
            v21 += 2;
            goto LABEL_10;
          }
          v23 = v21 + 3;
          v63 = v21 + 2;
          if (v21 + 3 < v57)
            break;
        }
      }
    }
LABEL_24:
    v24 = sub_1C07ACF80(&qword_1ED751248);
    sub_1C07B2D8C((uint64_t)v6, 1, 1, v24);
    v64 = 0;
LABEL_25:
    sub_1C080AD78((uint64_t)v6, (uint64_t)v9, &qword_1ED751250);
    v25 = sub_1C07ACF80(&qword_1ED751248);
    if (sub_1C07B2D80((uint64_t)v9, 1, v25) == 1)
    {
      swift_release();
      return (uint64_t)v13;
    }
    v27 = *v9;
    v26 = v9[1];
    v28 = (uint64_t)v9 + *(int *)(v25 + 48);
    v29 = *(_QWORD *)(v28 + *(int *)(type metadata accessor for RelationshipStructs.LivingBeingRelationship(0) + 32));
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C08D6F78(v28, type metadata accessor for RelationshipStructs.LivingBeingRelationship);
    if (v29)
      v30 = v29;
    else
      v30 = MEMORY[0x1E0DEE9D8];
    v31 = *(_QWORD *)(v30 + 16);
    if (v31)
    {
      v52 = v6;
      v53 = a1;
      v32 = *(int *)(v55 + 40);
      v33 = v30 + ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80));
      v58 = *(_QWORD *)(v54 + 72);
      v59 = v32;
      while (1)
      {
        v34 = v60;
        sub_1C07E05C8(v33, v60, type metadata accessor for RelationshipStructs.LocalizedNameRelationshipType);
        v35 = *(_QWORD *)(v34 + v59);
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        sub_1C08D6F78(v34, type metadata accessor for RelationshipStructs.LocalizedNameRelationshipType);
        if (v35)
        {
          v62 = v35;
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          swift_isUniquelyReferenced_nonNull_native();
          v65 = v13;
          v36 = sub_1C077D774(v27, v26);
          if (__OFADD__(v13[2], (v37 & 1) == 0))
          {
            __break(1u);
            goto LABEL_47;
          }
          v38 = v36;
          v39 = v37;
          sub_1C07ACF80(&qword_1ED751318);
          v40 = sub_1C107090C();
          v41 = v62;
          if ((v40 & 1) != 0)
          {
            v42 = sub_1C077D774(v27, v26);
            if ((v39 & 1) != (v43 & 1))
              goto LABEL_50;
            v38 = v42;
          }
          v13 = v65;
          if ((v39 & 1) != 0)
          {
            v44 = v65[7];
            swift_bridgeObjectRelease();
            *(_QWORD *)(v44 + 8 * v38) = v41;
          }
          else
          {
            v65[(v38 >> 6) + 8] |= 1 << v38;
            v45 = (uint64_t *)(v13[6] + 16 * v38);
            *v45 = v27;
            v45[1] = v26;
            *(_QWORD *)(v13[7] + 8 * v38) = v41;
            v46 = v13[2];
            v47 = __OFADD__(v46, 1);
            v48 = v46 + 1;
            if (v47)
              goto LABEL_48;
            v13[2] = v48;
            _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v33 += v58;
        if (!--v31)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v6 = v52;
          a1 = v53;
          goto LABEL_31;
        }
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_31:
    ;
  }
  v22 = *(_QWORD *)(v56 + 8 * v23);
  if (v22)
  {
LABEL_13:
    v21 = v23;
LABEL_10:
    v63 = v21;
    v64 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v21 << 6);
    goto LABEL_6;
  }
  while (1)
  {
    v21 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v21 >= v57)
    {
      v63 = v51;
      goto LABEL_24;
    }
    v22 = *(_QWORD *)(v56 + 8 * v21);
    ++v23;
    if (v22)
      goto LABEL_10;
  }
LABEL_49:
  __break(1u);
LABEL_50:
  result = sub_1C1070D44();
  __break(1u);
  return result;
}

void sub_1C0CDF7D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = sub_1C106F544();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (void *)MEMORY[0x1C3BA79F4](v6);
  v10 = sub_1C106AB58();
  if (v2)
  {
    objc_autoreleasePoolPop(v9);
  }
  else
  {
    v12 = v10;
    v13 = v11;
    sub_1C106A708();
    swift_allocObject();
    sub_1C106A6FC();
    sub_1C0A6BE9C();
    sub_1C106A6F0();
    sub_1C07B3374(v12, v13);
    sub_1C07785A8();
    v14 = v27;
    v25 = v26;
    v31 = a2;
    v16 = v28;
    v15 = v29;
    v17 = v30;
    objc_autoreleasePoolPop(v9);
    v26 = v25;
    v27 = v14;
    v28 = v16;
    v29 = v15;
    v30 = v17;
    v18 = sub_1C0CDD7C4((uint64_t)&v26, v31);
    v19 = v18;
    if (v18)
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C08A3164();
      swift_release();
      swift_bridgeObjectRelease();
      v20 = sub_1C0CDF298(v19);
      type metadata accessor for PhaseStores();
      swift_retain();
      sub_1C0CE3D80(v20);
      sub_1C07785A8();
      swift_bridgeObjectRelease();
      v24 = sub_1C0CDECDC(v19);
      swift_bridgeObjectRelease();
      swift_retain();
      sub_1C0CE3DA4(v24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C07785A8();
    }
    else
    {
      v31 = v14;
      sub_1C106F160();
      v21 = sub_1C106F538();
      v22 = sub_1C1070390();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v23 = 0;
        _os_log_impl(&dword_1C0771000, v21, v22, "Nil relationshipObjects returned during source ingestion. Ending Relationship source ingestion.", v23, 2u);
        MEMORY[0x1C3BA8270](v23, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C0CDFAB0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[3] = v0;
  v2 = sub_1C106F544();
  v1[4] = v2;
  v1[5] = *(_QWORD *)(v2 - 8);
  v1[6] = sub_1C0779644();
  sub_1C07ACF80((uint64_t *)&unk_1ED762680);
  v1[7] = sub_1C0779644();
  v3 = sub_1C106AB28();
  v1[8] = v3;
  v1[9] = *(_QWORD *)(v3 - 8);
  v1[10] = swift_task_alloc();
  v1[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C0CDFB54()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  sub_1C0B79420();
  v1 = (void *)sub_1C10704D4();
  v2 = sub_1C0CDFF34(0xD000000000000037, 0x80000001C1108D20, 1852797802, 0xE400000000000000, v1);

  if (v2)
  {
    v4 = *(_QWORD *)(v0 + 72);
    v3 = *(_QWORD *)(v0 + 80);
    v6 = *(_QWORD *)(v0 + 56);
    v5 = *(_QWORD *)(v0 + 64);
    sub_1C106AAF8();

    v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
    v7(v6, v3, v5);
    sub_1C07B2D8C(v6, 0, 1, v5);
    if (sub_1C07B2D80(v6, 1, v5) != 1)
    {
      v8 = *(_QWORD *)(v0 + 88);
      v9 = *(_QWORD *)(v0 + 24);
      v7(v8, *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
      v10 = type metadata accessor for RelationshipFullSourceIngestor();
      sub_1C0CDF7D4(v8, v9 + *(int *)(v10 + 20));
      v11 = *(_QWORD *)(v0 + 88);
      v19 = *(_QWORD *)(v0 + 64);
      v20 = *(_QWORD *)(v0 + 72);
      sub_1C106AC6C();
      sub_1C088C418();
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v11, v19);
      goto LABEL_8;
    }
  }
  else
  {
    sub_1C07B2D8C(*(_QWORD *)(v0 + 56), 1, 1, *(_QWORD *)(v0 + 64));
  }
  sub_1C08D6F14(*(_QWORD *)(v0 + 56), (uint64_t *)&unk_1ED762680);
  sub_1C106F160();
  v12 = sub_1C106F538();
  v13 = sub_1C1070390();
  v14 = os_log_type_enabled(v12, v13);
  v15 = *(_QWORD *)(v0 + 40);
  v16 = *(_QWORD *)(v0 + 48);
  v17 = *(_QWORD *)(v0 + 32);
  if (v14)
  {
    v18 = (uint8_t *)swift_slowAlloc();
    v22 = swift_slowAlloc();
    *(_DWORD *)v18 = 136315138;
    *(_QWORD *)(v0 + 16) = sub_1C0788DAC(0xD000000000000037, 0x80000001C1108D20, &v22);
    sub_1C10705AC();
    _os_log_impl(&dword_1C0771000, v12, v13, "Could not find asset: %s", v18, 0xCu);
    swift_arrayDestroy();
    sub_1C0776778();
  }

  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v17);
LABEL_8:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C0CDFE38()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C0806670;
  return sub_1C0CDFAB0();
}

void sub_1C0CDFE80(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1ED751100, (uint64_t (*)(uint64_t))type metadata accessor for RelationshipFullSourceIngestor, (uint64_t)&unk_1C10B4358);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0CDFEBC(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1ED751110, (uint64_t (*)(uint64_t))type metadata accessor for RelationshipFullSourceIngestor, (uint64_t)&unk_1C10B4380);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0CDFEF8(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1ED751108, (uint64_t (*)(uint64_t))type metadata accessor for RelationshipFullSourceIngestor, (uint64_t)&unk_1C10B439C);
  *(_QWORD *)(a1 + 8) = v2;
}

id sub_1C0CDFF34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *v6;
  void *v7;
  id v8;

  v6 = (void *)sub_1C106FAF0();
  v7 = (void *)sub_1C106FAF0();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(a5, sel_URLForResource_withExtension_, v6, v7);

  return v8;
}

unint64_t sub_1C0CDFFB0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED7624D8;
  if (!qword_1ED7624D8)
  {
    v1 = sub_1C07D4BEC(qword_1ED7615A0);
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0DEBF68], v1);
    atomic_store(result, (unint64_t *)&qword_1ED7624D8);
  }
  return result;
}

id sub_1C0CDFFF4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id result;
  uint64_t v9;

  v5 = sub_1C07ACF80(&qword_1ED75D0B8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C09456DC(a1, (uint64_t)v7);
  result = sub_1C0CE05D0((uint64_t)v7, 0);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1C0CE0080(unsigned __int8 a1)
{
  uint64_t inited;

  sub_1C07ACF80(&qword_1ED755050);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1079220;
  *(_QWORD *)(inited + 32) = 0xD000000000000011;
  *(_QWORD *)(inited + 40) = 0x80000001C10F30F0;
  *(_QWORD *)(inited + 48) = objc_msgSend((id)objc_opt_self(), sel_featureValueWithInt64_, a1);
  sub_1C07D97D4();
  return sub_1C106F97C();
}

uint64_t sub_1C0CE0138(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6765746143707061 && a2 == 0xEF6570795479726FLL;
  if (v2 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6449656C646E7562 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1C1070CB4();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1C0CE0248(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6449656C646E7562;
  else
    return 0x6765746143707061;
}

uint64_t sub_1C0CE028C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1C07ACF80(qword_1EF647458);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1C07795DC();
  sub_1C07A9480(a1, a1[3]);
  sub_1C0CE0E48();
  sub_1C1070EB8();
  sub_1C07F4904();
  sub_1C1070BB8();
  if (!v1)
    sub_1C1070B7C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
}

uint64_t sub_1C0CE03B8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v6;

  v3 = sub_1C07ACF80(&qword_1EF647448);
  MEMORY[0x1E0C80A78](v3);
  sub_1C07795DC();
  v4 = a1[3];
  sub_1C07A9480(a1, v4);
  sub_1C0CE0E48();
  sub_1C1070E94();
  if (!v1)
  {
    sub_1C07F48C8();
    sub_1C1070AE0();
    v4 = v6;
    sub_1C1070AA4();
    sub_1C0787764();
  }
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)a1);
  return v4;
}

uint64_t sub_1C0CE04FC()
{
  char *v0;

  return sub_1C0CE0248(*v0);
}

uint64_t sub_1C0CE0504@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0CE0138(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0CE0528()
{
  sub_1C0CE0E48();
  return sub_1C1070EE8();
}

uint64_t sub_1C0CE0550()
{
  sub_1C0CE0E48();
  return sub_1C1070EF4();
}

uint64_t sub_1C0CE0578@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_1C0CE03B8(a1);
  if (!v2)
  {
    *(_BYTE *)a2 = result;
    *(_QWORD *)(a2 + 8) = v5;
    *(_QWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1C0CE05A4(_QWORD *a1)
{
  return sub_1C0CE028C(a1);
}

uint64_t sub_1C0CE05C0()
{
  unsigned __int8 *v0;

  return sub_1C0CE0080(*v0);
}

uint64_t sub_1C0CE05C8()
{
  unsigned __int8 *v0;

  return sub_1C0CE0134(*v0);
}

id sub_1C0CE05D0(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v13;
  _QWORD aBlock[6];

  if (a2)
  {
    v3 = a2;
    v4 = objc_msgSend(v3, sel_startWithSubscriber_, 0);

  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D025D0]), sel_init);
    v5 = objc_msgSend(v4, sel_remoteDevices);
    if (!v5)
    {
      sub_1C106FF04();
      v5 = (id)sub_1C106FEEC();
      swift_bridgeObjectRelease();
    }
    sub_1C106AC60();
    v6 = (void *)sub_1C1070168();
    sub_1C07ACF80(&qword_1ED75D0B8);
    sub_1C106AC60();
    v7 = (void *)sub_1C1070168();
    aBlock[4] = j__swift_unknownObjectRetain;
    aBlock[5] = 0;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C0CE07E4;
    aBlock[3] = &unk_1E7A2B7F8;
    v8 = _Block_copy(aBlock);
    LOBYTE(v13) = 0;
    v9 = objc_msgSend(v4, sel_publishersForRemoteDevices_startTime_endTime_maxEvents_lastN_reversed_includeLocal_pipeline_, v5, v6, v7, 0, 0, 0, v13, v8);
    _Block_release(v8);

    v10 = objc_msgSend(v9, sel_merge);
    v3 = v10;
    v11 = objc_msgSend(v3, sel_startWithSubscriber_, 0);

  }
  sub_1C0BCD8D4(a1);
  return v3;
}

id sub_1C0CE07CC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1C0CDFFF4(a1, a2);
}

id sub_1C0CE07E4(uint64_t a1, void *a2)
{
  uint64_t (*v3)(void);
  id v4;
  void *v5;

  v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v5 = (void *)v3();
  swift_release();

  return v5;
}

uint64_t sub_1C0CE0834(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[20] = a1;
  v2[21] = v1;
  v3 = sub_1C106ADE0();
  v2[22] = v3;
  v2[23] = *(_QWORD *)(v3 - 8);
  v2[24] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C0CE0894()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  char v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  if (!objc_msgSend(**(id **)(v0 + 168), sel_nextEvent))
  {
LABEL_13:
    v24 = *(_QWORD *)(v0 + 160);
    v17 = sub_1C07ACF80(&qword_1ED747DF0);
    v15 = v24;
    v16 = 1;
    goto LABEL_14;
  }
  sub_1C107063C();
  swift_unknownObjectRelease();
  sub_1C07C010C((_OWORD *)(v0 + 48), (_OWORD *)(v0 + 16));
  sub_1C0788E98(v0 + 16, v0 + 80);
  sub_1C07ACF80((uint64_t *)&unk_1ED74D318);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_8:
    if (qword_1ED762B18 != -1)
      swift_once();
    v18 = sub_1C106F544();
    sub_1C079E000(v18, (uint64_t)qword_1ED762AF8);
    sub_1C0788E98(v0 + 16, v0 + 112);
    v19 = sub_1C106F538();
    v20 = sub_1C10703A8();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v28 = swift_slowAlloc();
      *(_DWORD *)v21 = 136315138;
      sub_1C07A9480((_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136));
      swift_getDynamicType();
      v22 = sub_1C1070F00();
      *(_QWORD *)(v0 + 152) = sub_1C0788DAC(v22, v23, &v28);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 112);
      _os_log_impl(&dword_1C0771000, v19, v20, "Unable to convert the nextEvent to BMStoreEvent - %s", v21, 0xCu);
      swift_arrayDestroy();
      sub_1C0776778();
    }

    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 112);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 16);
    goto LABEL_13;
  }
  v1 = *(void **)(v0 + 144);
  v2 = objc_msgSend(v1, sel_eventBody);
  if (!v2)
  {

    goto LABEL_8;
  }
  v3 = v2;
  v4 = objc_msgSend(v2, sel_bundleID);
  if (!v4)
  {
    sub_1C106FB14();
    v4 = (id)sub_1C106FAF0();
    swift_bridgeObjectRelease();
  }
  v5 = *(_QWORD *)(v0 + 192);
  v26 = *(_QWORD *)(v0 + 184);
  v27 = *(_QWORD *)(v0 + 176);
  v6 = *(_QWORD *)(v0 + 160);
  v7 = objc_msgSend((id)objc_opt_self(), sel_categoryForBundleId_, v4);

  v8 = sub_1C07F3BE8(v7);
  v9 = objc_msgSend(v3, sel_bundleID);
  v10 = sub_1C106FB14();
  v12 = v11;

  objc_msgSend(v1, sel_timestamp);
  sub_1C106AC54();
  LOBYTE(v9) = objc_msgSend(v3, sel_isStarting);

  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 16);
  v13 = sub_1C07ACF80(&qword_1ED747DF0);
  v14 = v6 + *(int *)(v13 + 32);
  *(_BYTE *)v14 = v8;
  *(_QWORD *)(v14 + 8) = v10;
  *(_QWORD *)(v14 + 16) = v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 32))(v6, v5, v27);
  *(_BYTE *)(v6 + *(int *)(v13 + 28)) = (_BYTE)v9;
  v15 = v6;
  v16 = 0;
  v17 = v13;
LABEL_14:
  sub_1C07B2D8C(v15, v16, 1, v17);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1C0CE0C64(_QWORD *a1@<X8>)
{
  void **v1;
  void *v3;
  id v4;

  v3 = *v1;
  v4 = v3;

  *a1 = v3;
}

uint64_t sub_1C0CE0C94(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C0B59E78;
  return sub_1C0CE0834(a1);
}

uint64_t sub_1C0CE0CE4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_1EF6411C8 + dword_1EF6411C8);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  *v1 = v0;
  v1[1] = sub_1C0C46068;
  return v3();
}

void type metadata accessor for RemoteAppCategoryAsyncSequence()
{
  sub_1C0779604();
}

uint64_t sub_1C0CE0D7C(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1C0CE0DBC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for RemoteAppCategoryContent()
{
  sub_1C0779604();
}

unint64_t sub_1C0CE0E0C()
{
  unint64_t result;

  result = qword_1EF647440;
  if (!qword_1EF647440)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B449C, &unk_1E7A2B830);
    atomic_store(result, (unint64_t *)&qword_1EF647440);
  }
  return result;
}

unint64_t sub_1C0CE0E48()
{
  unint64_t result;

  result = qword_1EF647450;
  if (!qword_1EF647450)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B4634, &type metadata for RemoteAppCategoryContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF647450);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for RemoteAppCategoryContent.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C0CE0ED0 + 4 * byte_1C10B43E5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C0CE0F04 + 4 * byte_1C10B43E0[v4]))();
}

uint64_t sub_1C0CE0F04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0CE0F0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0CE0F14);
  return result;
}

uint64_t sub_1C0CE0F20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0CE0F28);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C0CE0F2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0CE0F34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RemoteAppCategoryContent.CodingKeys()
{
  return &type metadata for RemoteAppCategoryContent.CodingKeys;
}

void type metadata accessor for RemoteAppCategoryDataProvider()
{
  sub_1C0779604();
}

uint64_t sub_1C0CE0F5C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1C0CE0F70()
{
  unint64_t result;

  result = qword_1EF647480;
  if (!qword_1EF647480)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B460C, &type metadata for RemoteAppCategoryContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF647480);
  }
  return result;
}

unint64_t sub_1C0CE0FB0()
{
  unint64_t result;

  result = qword_1EF647488;
  if (!qword_1EF647488)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B457C, &type metadata for RemoteAppCategoryContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF647488);
  }
  return result;
}

unint64_t sub_1C0CE0FF0()
{
  unint64_t result;

  result = qword_1EF647490;
  if (!qword_1EF647490)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B45A4, &type metadata for RemoteAppCategoryContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF647490);
  }
  return result;
}

uint64_t sub_1C0CE102C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C0CE103C()
{
  return sub_1C07F52E0(&qword_1ED7480A8, &qword_1ED7480B0, (uint64_t)&unk_1C1091558);
}

uint64_t sub_1C0CE1068()
{
  return sub_1C07F52E0(&qword_1EF6474B8, &qword_1EF6474C0, (uint64_t)&unk_1C1091490);
}

void AsyncSequence.removeDuplicates(by:)(uint64_t a1)
{
  uint64_t v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *, uint64_t, double))(v4 + 16))((char *)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v1, v2);
  sub_1C0CE112C();
  swift_retain();
  sub_1C077C798();
}

uint64_t sub_1C0CE112C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  _QWORD *v10;

  sub_1C0793F38();
  v5 = v4;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v4, v7, v6);
  result = type metadata accessor for RemoveDuplicatesAsyncSequence(0, v1, v0, v8);
  v10 = (_QWORD *)(v5 + *(int *)(result + 36));
  *v10 = v3;
  v10[1] = v2;
  return result;
}

void RemoveDuplicatesAsyncSequence.makeAsyncIterator()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t AssociatedTypeWitness;
  double v8;
  uint64_t v9;

  v2 = v1;
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16))(v6, v2, v3, v8);
  sub_1C1070150();
  sub_1C0CE128C();
  swift_retain();
  sub_1C077C798();
}

uint64_t sub_1C0CE128C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD *v13;

  sub_1C0793F38();
  v3 = v2;
  v5 = v4;
  v8 = type metadata accessor for RemoveDuplicatesAsyncSequence.Iterator(0, v6, v7, v6);
  v9 = v5 + *(int *)(v8 + 40);
  v10 = sub_1C0788248();
  sub_1C07B2D8C(v9, 1, 1, v10);
  v11 = sub_1C0788248();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v5, v3, v11);
  v13 = (_QWORD *)(v5 + *(int *)(v8 + 36));
  *v13 = v1;
  v13[1] = v0;
  return result;
}

uint64_t RemoveDuplicatesAsyncSequence.Iterator.next()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = *(_QWORD *)(a2 + 24);
  v3[6] = *(_QWORD *)(a2 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3[7] = AssociatedTypeWitness;
  v5 = sub_1C1070564();
  v3[8] = v5;
  v3[9] = *(_QWORD *)(v5 - 8);
  v3[10] = sub_1C0793600();
  v3[11] = sub_1C0793600();
  v3[12] = sub_1C0793600();
  v3[13] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  sub_1C077862C();
  return swift_task_switch();
}

uint64_t sub_1C0CE1418()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  _QWORD *v13;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = *(int *)(*(_QWORD *)(v0 + 24) + 40);
  *(_DWORD *)(v0 + 184) = v6;
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 128) = v7;
  v7(v1, v5 + v6, v2);
  if (sub_1C07B2D80(v1, 1, v4) == 1)
  {
    sub_1C07A5274(*(_QWORD *)(v0 + 72));
    sub_1C07960A8();
    sub_1C07A36E0();
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 168) = v8;
    *v8 = v0;
    v8[1] = sub_1C0CE1854;
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 120);
    v10 = *(_QWORD *)(v0 + 96);
    v11 = *(_QWORD *)(v0 + 56);
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 104) + 32);
    *(_QWORD *)(v0 + 136) = v12;
    v12(v9, v10, v11);
    sub_1C07960A8();
    sub_1C07A36E0();
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 144) = v13;
    *v13 = v0;
    v13[1] = sub_1C0CE1558;
  }
  sub_1C079B98C();
  return sub_1C07960BC();
}

uint64_t sub_1C0CE1558()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_1C077B0C8();
  *v2 = *v1;
  *(_QWORD *)(v3 + 152) = v0;
  swift_task_dealloc();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0CE15A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v10)(_QWORD, _QWORD);

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 56);
  if (sub_1C07B2D80(v1, 1, v2) == 1)
  {
    v3 = *(_QWORD *)(v0 + 64);
    v4 = *(_QWORD *)(v0 + 72);
    v5 = *(_QWORD *)(v0 + 16);
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 120), v2);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
    sub_1C07B2D8C(v5, 1, 1, v2);
    sub_1C07AE0C8();
    sub_1C07767BC();
    sub_1C07796F8();
    sub_1C07758BC();
    sub_1C0779D18();
    return sub_1C0787BC8(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 24);
    v7 = *(_QWORD *)(v0 + 32);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v0 + 136))(*(_QWORD *)(v0 + 112), v1, v2);
    v10 = (uint64_t (*)(_QWORD, _QWORD))(**(int **)(v7 + *(int *)(v8 + 36))
                                                 + *(_QWORD *)(v7 + *(int *)(v8 + 36)));
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 160) = v9;
    *v9 = v0;
    v9[1] = sub_1C0CE16B8;
    return v10(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 112));
  }
}

uint64_t sub_1C0CE16B8(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 188) = a1;
  swift_task_dealloc();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0CE1708()
{
  uint64_t v0;
  _QWORD *v1;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((*(_BYTE *)(v0 + 188) & 1) != 0)
  {
    sub_1C07A5274(*(_QWORD *)(v0 + 104));
    sub_1C07960A8();
    sub_1C07A36E0();
    v1 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 144) = v1;
    *v1 = v0;
    v1[1] = sub_1C0CE1558;
    sub_1C079B98C();
    return sub_1C07960BC();
  }
  else
  {
    v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 136);
    v4 = *(_QWORD *)(v0 + 112);
    v5 = *(_QWORD *)(v0 + 104);
    v6 = *(_QWORD *)(v0 + 64);
    v7 = *(_QWORD *)(v0 + 72);
    v8 = *(_QWORD *)(v0 + 56);
    v9 = *(_QWORD *)(v0 + 16);
    v10 = *(_QWORD *)(v0 + 32) + *(int *)(v0 + 184);
    (*(void (**)(_QWORD, uint64_t))(v5 + 8))(*(_QWORD *)(v0 + 120), v8);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v6);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v10, v4, v8);
    sub_1C077994C(v10);
    v3(v9, v4, v8);
    sub_1C077994C(v9);
    sub_1C07AE0C8();
    sub_1C07767BC();
    sub_1C07796F8();
    sub_1C07758BC();
    sub_1C0779D18();
    return sub_1C078F470(*(uint64_t (**)(void))(v0 + 8));
  }
}

uint64_t sub_1C0CE1854()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_1C077B0C8();
  *v2 = *v1;
  *(_QWORD *)(v3 + 176) = v0;
  swift_task_dealloc();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0CE18A4()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 128);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 32) + *(int *)(v0 + 184);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 + 72) + 40))(v4, *(_QWORD *)(v0 + 80), v2);
  v1(v3, v4, v2);
  sub_1C07AE0C8();
  sub_1C07767BC();
  sub_1C07796F8();
  sub_1C07758BC();
  sub_1C0779D18();
  return sub_1C078F470(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0CE1924()
{
  uint64_t v0;

  sub_1C07914F0();
  sub_1C07796F8();
  sub_1C07758BC();
  sub_1C0779D18();
  swift_task_dealloc();
  return sub_1C0787BC8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0CE1968()
{
  uint64_t v0;

  sub_1C07A5274(*(_QWORD *)(v0 + 104));
  sub_1C07914F0();
  sub_1C07796F8();
  sub_1C07758BC();
  sub_1C0779D18();
  swift_task_dealloc();
  return sub_1C0787BC8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0CE19BC()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1C0CE1A48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1C09C8DA8;
  return RemoveDuplicatesAsyncSequence.Iterator.next()(a1, a2);
}

uint64_t sub_1C0CE1AA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t AssociatedTypeWitness;
  _QWORD *v6;

  v4[2] = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[3] = AssociatedTypeWitness;
  v4[4] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4[5] = swift_task_alloc();
  v6 = (_QWORD *)swift_task_alloc();
  v4[6] = v6;
  *v6 = v4;
  v6[1] = sub_1C0CE1B7C;
  return sub_1C1070090();
}

uint64_t sub_1C0CE1B7C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;

  v2 = (_QWORD *)*v1;
  v3 = (_QWORD *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v2[4] + 32))(v2[2], v2[5], v2[3]);
    sub_1C07767BC();
  }
  else
  {
    swift_task_dealloc();
  }
  return sub_1C078F470((uint64_t (*)(void))v3[1]);
}

void sub_1C0CE1BEC()
{
  JUMPOUT(0x1C3BA8174);
}

uint64_t sub_1C0CE1BFC(uint64_t a1)
{
  uint64_t v1;

  RemoveDuplicatesAsyncSequence.makeAsyncIterator()(a1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t sub_1C0CE1C2C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C0CE1CA4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v11 = v10[1];
    v12 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v12 = *v10;
    v12[1] = v11;
  }
  swift_retain();
  return v4;
}

uint64_t sub_1C0CE1D54(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  return swift_release();
}

uint64_t sub_1C0CE1D94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  swift_retain();
  return a1;
}

uint64_t sub_1C0CE1DF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1C0CE1E60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1C0CE1EBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1C0CE1F20(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v13;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (v7 >= a2)
  {
    if (v6 < 0x7FFFFFFF)
    {
      v13 = *(_QWORD *)((a1 + v8 + 7) & 0xFFFFFFFFFFFFF8);
      if (v13 >= 0xFFFFFFFF)
        LODWORD(v13) = -1;
      return (v13 + 1);
    }
    else
    {
      return sub_1C07B2D80(a1, v6, v4);
    }
  }
  else
  {
    if (((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v9 = 2;
    else
      v9 = a2 - v7 + 1;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1C0CE1F9C + 4 * byte_1C10B46A0[v11]))();
  }
}

void sub_1C0CE201C(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
  }
  if (a2 > v6)
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      v10 = ~v6 + a2;
      bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_1C0CE2108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _QWORD *v8;
  uint64_t v9;

  *(_BYTE *)(v5 + v6) = 0;
  if ((_DWORD)a2)
  {
    if (a3 < 0x7FFFFFFF)
    {
      v8 = (_QWORD *)((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
      if ((a2 & 0x80000000) != 0)
      {
        v9 = a2 ^ 0x80000000;
        v8[1] = 0;
      }
      else
      {
        v9 = (a2 - 1);
      }
      *v8 = v9;
    }
    else
    {
      return sub_1C07B2D8C(v5, a2, a3, a4);
    }
  }
  return result;
}

uint64_t type metadata accessor for RemoveDuplicatesAsyncSequence(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0802884(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RemoveDuplicatesAsyncSequence);
}

uint64_t sub_1C0CE21A4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    result = sub_1C1070564();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1C0CE227C(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  size_t v11;
  unsigned int v12;
  BOOL v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = v9;
  if (*(_DWORD *)(v8 + 84))
    v11 = *(_QWORD *)(v8 + 64);
  else
    v11 = *(_QWORD *)(v8 + 64) + 1;
  v12 = v9 | *(_DWORD *)(v5 + 80) & 0xF8;
  if (((*(_DWORD *)(v5 + 80) | v9) & 0x100000) != 0
    || (v11 + ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + v9 + 16) & ~(unint64_t)v9) <= 0x18
      ? (v13 = v12 > 7)
      : (v13 = 1),
        v13))
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + (((v12 | 7) + 16) & ~(unint64_t)(v12 | 7)));
    swift_retain();
  }
  else
  {
    v14 = v7;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    v15 = (_QWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v16 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = (void *)(((unint64_t)v15 + v10 + 16) & ~v10);
    v19 = (const void *)(((unint64_t)v16 + v10 + 16) & ~v10);
    swift_retain();
    if (sub_1C07B2D80((uint64_t)v19, 1, v14))
    {
      memcpy(v18, v19, v11);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v18, v19, v14);
      sub_1C07B2D8C((uint64_t)v18, 0, 1, v14);
    }
  }
  return a1;
}

uint64_t sub_1C0CE2428(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
  v4 = (a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  v5 = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  result = sub_1C07B2D80(v7, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v6 + 8))(v7, v5);
  return result;
}

uint64_t sub_1C0CE2510(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  size_t v15;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  v10 = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (void *)(((unint64_t)v7 + v12 + 16) & ~v12);
  v14 = (const void *)(((unint64_t)v8 + v12 + 16) & ~v12);
  swift_retain();
  if (sub_1C07B2D80((uint64_t)v14, 1, v10))
  {
    if (*(_DWORD *)(v11 + 84))
      v15 = *(_QWORD *)(v11 + 64);
    else
      v15 = *(_QWORD *)(v11 + 64) + 1;
    memcpy(v13, v14, v15);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v13, v14, v10);
    sub_1C07B2D8C((uint64_t)v13, 0, 1, v10);
  }
  return a1;
}

uint64_t sub_1C0CE264C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  int v15;
  int v16;
  size_t v17;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  swift_retain();
  swift_release();
  v10 = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (void *)(((unint64_t)v7 + v12 + 16) & ~v12);
  v14 = (const void *)(((unint64_t)v8 + v12 + 16) & ~v12);
  v15 = sub_1C07B2D80((uint64_t)v13, 1, v10);
  v16 = sub_1C07B2D80((uint64_t)v14, 1, v10);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v13, v14, v10);
      sub_1C07B2D8C((uint64_t)v13, 0, 1, v10);
      return a1;
    }
  }
  else
  {
    if (!v16)
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 24))(v13, v14, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v13, v10);
  }
  if (*(_DWORD *)(v11 + 84))
    v17 = *(_QWORD *)(v11 + 64);
  else
    v17 = *(_QWORD *)(v11 + 64) + 1;
  memcpy(v13, v14, v17);
  return a1;
}

uint64_t sub_1C0CE27D4(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  size_t v14;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (void *)(((unint64_t)v7 + v11 + 16) & ~v11);
  v13 = (const void *)(((unint64_t)v8 + v11 + 16) & ~v11);
  if (sub_1C07B2D80((uint64_t)v13, 1, v9))
  {
    if (*(_DWORD *)(v10 + 84))
      v14 = *(_QWORD *)(v10 + 64);
    else
      v14 = *(_QWORD *)(v10 + 64) + 1;
    memcpy(v12, v13, v14);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v12, v13, v9);
    sub_1C07B2D8C((uint64_t)v12, 0, 1, v9);
  }
  return a1;
}

uint64_t sub_1C0CE2908(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  int v14;
  int v15;
  size_t v16;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  swift_release();
  v9 = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (void *)(((unint64_t)v7 + v11 + 16) & ~v11);
  v13 = (const void *)(((unint64_t)v8 + v11 + 16) & ~v11);
  v14 = sub_1C07B2D80((uint64_t)v12, 1, v9);
  v15 = sub_1C07B2D80((uint64_t)v13, 1, v9);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v12, v13, v9);
      sub_1C07B2D8C((uint64_t)v12, 0, 1, v9);
      return a1;
    }
  }
  else
  {
    if (!v15)
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 40))(v12, v13, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v12, v9);
  }
  if (*(_DWORD *)(v10 + 84))
    v16 = *(_QWORD *)(v10 + 64);
  else
    v16 = *(_QWORD *)(v10 + 64) + 1;
  memcpy(v12, v13, v16);
  return a1;
}

uint64_t sub_1C0CE2A88(uint64_t a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;
  unint64_t *v22;
  unint64_t v23;
  unsigned int v24;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int *)(v8 + 84);
  v10 = v9 - 1;
  if (!(_DWORD)v9)
    v10 = 0;
  if (v6 <= v10)
    v11 = v10;
  else
    v11 = v6;
  if (v11 <= 0x7FFFFFFF)
    v12 = 0x7FFFFFFF;
  else
    v12 = v11;
  if ((_DWORD)v9)
    v13 = *(_QWORD *)(v8 + 64);
  else
    v13 = *(_QWORD *)(v8 + 64) + 1;
  if (!a2)
    return 0;
  v14 = *(_QWORD *)(v5 + 64);
  v15 = *(unsigned __int8 *)(v8 + 80);
  if (a2 <= v12)
    goto LABEL_31;
  v16 = v13 + ((v15 + ((v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v15);
  v17 = 8 * v16;
  if (v16 > 3)
    goto LABEL_15;
  v19 = ((a2 - v12 + ~(-1 << v17)) >> v17) + 1;
  if (HIWORD(v19))
  {
    v18 = *(_DWORD *)(a1 + v16);
    if (v18)
      goto LABEL_22;
LABEL_31:
    if ((_DWORD)v6 == v12)
      return sub_1C07B2D80(a1, v6, AssociatedTypeWitness);
    v22 = (unint64_t *)((a1 + v14 + 7) & 0xFFFFFFFFFFFFFFF8);
    if ((v11 & 0x80000000) == 0)
    {
      v23 = *v22;
      if (v23 >= 0xFFFFFFFF)
        LODWORD(v23) = -1;
      return (v23 + 1);
    }
    if (v9 >= 2)
    {
      v24 = sub_1C07B2D80(((unint64_t)v22 + v15 + 16) & ~v15, v9, v7);
      if (v24 >= 2)
        return v24 - 1;
      else
        return 0;
    }
    return 0;
  }
  if (v19 > 0xFF)
  {
    v18 = *(unsigned __int16 *)(a1 + v16);
    if (*(_WORD *)(a1 + v16))
      goto LABEL_22;
    goto LABEL_31;
  }
  if (v19 < 2)
    goto LABEL_31;
LABEL_15:
  v18 = *(unsigned __int8 *)(a1 + v16);
  if (!*(_BYTE *)(a1 + v16))
    goto LABEL_31;
LABEL_22:
  v20 = (v18 - 1) << v17;
  if (v16 > 3)
    v20 = 0;
  if ((_DWORD)v16)
  {
    if (v16 <= 3)
      v21 = v16;
    else
      v21 = 4;
    __asm { BR              X12 }
  }
  return v12 + v20 + 1;
}

void sub_1C0CE2CC8(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  unint64_t v13;
  uint64_t v14;
  size_t v15;
  char v16;
  unsigned int v17;
  int v18;
  int v19;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = 0u;
  v9 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v10 = *(_DWORD *)(v9 + 84);
  v11 = v10 - 1;
  if (!v10)
    v11 = 0;
  if (v7 > v11)
    v11 = v7;
  if (v11 <= 0x7FFFFFFF)
    v12 = 0x7FFFFFFF;
  else
    v12 = v11;
  v13 = (*(unsigned __int8 *)(v9 + 80) + ((*(_QWORD *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v14 = *(_QWORD *)(v9 + 64);
  if (!v10)
    ++v14;
  v15 = v14 + v13;
  v16 = 8 * (v14 + v13);
  if (a3 > v12)
  {
    if (v15 <= 3)
    {
      v17 = ((a3 - v12 + ~(-1 << v16)) >> v16) + 1;
      if (HIWORD(v17))
      {
        v8 = 4u;
      }
      else if (v17 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v17 > 1;
      }
    }
    else
    {
      v8 = 1u;
    }
  }
  if (v12 < a2)
  {
    v18 = ~v12 + a2;
    if (v15 < 4)
    {
      if ((_DWORD)v15)
      {
        v19 = v18 & ~(-1 << v16);
        bzero(a1, v15);
        if ((_DWORD)v15 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if ((_DWORD)v15 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v15);
      *(_DWORD *)a1 = v18;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X15 }
}

void sub_1C0CE2F38()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
  JUMPOUT(0x1C0CE2F5CLL);
}

void sub_1C0CE2F40()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
  JUMPOUT(0x1C0CE2F5CLL);
}

void sub_1C0CE2F48()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = v1;
  JUMPOUT(0x1C0CE2F5CLL);
}

uint64_t type metadata accessor for RemoveDuplicatesAsyncSequence.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0802884(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RemoveDuplicatesAsyncSequence.Iterator);
}

uint64_t sub_1C0CE2F88(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t i;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  void (*v22)(char *, unint64_t, uint64_t);
  char *v23;
  _QWORD *v24;
  uint64_t v25;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  char v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;

  v37 = a2;
  v38 = a3;
  v4 = sub_1C106E590();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v42 = (char *)&v36 - v9;
  v10 = *(_QWORD *)(a1 + 56);
  v39 = a1 + 56;
  v11 = 1 << *(_BYTE *)(a1 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v40 = (unint64_t)(v11 + 63) >> 6;
  v43 = a1;
  result = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v15 = 0;
  v41 = v4;
  if (!v13)
    goto LABEL_5;
LABEL_4:
  v16 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v16 | (v15 << 6); ; i = __clz(__rbit64(v19)) + (v15 << 6))
  {
    v21 = *(_QWORD *)(v5 + 72);
    v22 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    v23 = v42;
    v22(v42, *(_QWORD *)(v43 + 48) + v21 * i, v4);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v23, v4);
    if ((sub_1C106E4F4() & 1) != 0)
    {
      v24 = v37;
      v25 = *v37;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v24 = v25;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1C07EBE48();
        v25 = v34;
        *v37 = v34;
      }
      v27 = *(_QWORD *)(v25 + 16);
      v28 = v27 + 1;
      if (v27 >= *(_QWORD *)(v25 + 24) >> 1)
      {
        sub_1C07EBE48();
        v25 = v29;
        v30 = v37;
LABEL_32:
        *v30 = v29;
      }
    }
    else
    {
      v31 = v38;
      v25 = *v38;
      v32 = swift_isUniquelyReferenced_nonNull_native();
      *v31 = v25;
      if ((v32 & 1) == 0)
      {
        sub_1C07EBE48();
        v25 = v35;
        *v38 = v35;
      }
      v27 = *(_QWORD *)(v25 + 16);
      v28 = v27 + 1;
      if (v27 >= *(_QWORD *)(v25 + 24) >> 1)
      {
        sub_1C07EBE48();
        v25 = v29;
        v30 = v38;
        goto LABEL_32;
      }
    }
    *(_QWORD *)(v25 + 16) = v28;
    v33 = v25 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)) + v27 * v21;
    v4 = v41;
    v22((char *)v33, (unint64_t)v7, v41);
    result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if (v13)
      goto LABEL_4;
LABEL_5:
    v18 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v18 >= v40)
      return swift_release();
    v19 = *(_QWORD *)(v39 + 8 * v18);
    ++v15;
    if (!v19)
    {
      v15 = v18 + 1;
      if (v18 + 1 >= v40)
        return swift_release();
      v19 = *(_QWORD *)(v39 + 8 * v15);
      if (!v19)
      {
        v15 = v18 + 2;
        if (v18 + 2 >= v40)
          return swift_release();
        v19 = *(_QWORD *)(v39 + 8 * v15);
        if (!v19)
        {
          v15 = v18 + 3;
          if (v18 + 3 >= v40)
            return swift_release();
          v19 = *(_QWORD *)(v39 + 8 * v15);
          if (!v19)
            break;
        }
      }
    }
LABEL_20:
    v13 = (v19 - 1) & v19;
  }
  v20 = v18 + 4;
  if (v20 >= v40)
    return swift_release();
  v19 = *(_QWORD *)(v39 + 8 * v20);
  if (v19)
  {
    v15 = v20;
    goto LABEL_20;
  }
  while (1)
  {
    v15 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v15 >= v40)
      return swift_release();
    v19 = *(_QWORD *)(v39 + 8 * v15);
    ++v20;
    if (v19)
      goto LABEL_20;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1C0CE32E8(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  void (*v21)(void);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  unint64_t v41;
  char v42;
  unint64_t v43;
  char v44;
  unint64_t v45;
  char v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t result;
  uint64_t v55;
  uint64_t v56;
  int64_t v57;
  char *v58;
  uint64_t v59;
  int64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  void (*v66)(char *, uint64_t);
  char *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD v71[6];
  _QWORD *v72;

  v68 = a2;
  v69 = sub_1C07ACF80(&qword_1ED759FB0);
  MEMORY[0x1E0C80A78](v69);
  v67 = (char *)&v55 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v65 = (char *)&v55 - v4;
  MEMORY[0x1E0C80A78](v5);
  v64 = (char *)&v55 - v6;
  MEMORY[0x1E0C80A78](v7);
  v70 = (uint64_t)&v55 - v8;
  MEMORY[0x1E0C80A78](v9);
  v58 = (char *)&v55 - v10;
  sub_1C0861BD0(v71);
  v59 = v71[0];
  v60 = v71[3];
  v11 = v71[4];
  v56 = v71[1];
  v57 = (unint64_t)(v71[2] + 64) >> 6;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  if (!v11)
    goto LABEL_3;
LABEL_2:
  v62 = (v11 - 1) & v11;
  v12 = __clz(__rbit64(v11)) | (v60 << 6);
  while (1)
  {
    v17 = v59;
    v18 = *(_QWORD *)(v59 + 48);
    v19 = sub_1C106E590();
    v20 = *(_QWORD **)(v19 - 8);
    v61 = v20[9];
    v21 = (void (*)(void))v20[2];
    v22 = (uint64_t)v58;
    ((void (*)(char *, unint64_t, uint64_t))v21)(v58, v18 + v61 * v12, v19);
    v23 = *(_QWORD *)(v17 + 56);
    v24 = *(_QWORD *)(type metadata accessor for EntityMatch(0) - 8);
    v63 = *(_QWORD *)(v24 + 72);
    v25 = v23 + v63 * v12;
    v26 = v69;
    sub_1C07E05C8(v25, v22 + *(int *)(v69 + 48), type metadata accessor for EntityMatch);
    v27 = v70;
    sub_1C080AD78(v22, v70, &qword_1ED759FB0);
    v28 = *(int *)(v26 + 48);
    v29 = (uint64_t)&v64[v28];
    v30 = v27 + v28;
    ((void (*)(char *, uint64_t, uint64_t))v21)(v64, v27, v19);
    sub_1C07E05C8(v30, v29, type metadata accessor for EntityMatch);
    v31 = *v68;
    if (*(_QWORD *)(*v68 + 16))
    {
      sub_1C07DCD84();
      v33 = MEMORY[0x1E0DEE9D8];
      if ((v34 & 1) != 0)
      {
        v33 = *(_QWORD *)(*(_QWORD *)(v31 + 56) + 8 * v32);
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      }
    }
    else
    {
      v33 = MEMORY[0x1E0DEE9D8];
    }
    sub_1C07B1F90(v29, type metadata accessor for EntityMatch);
    v66 = (void (*)(char *, uint64_t))v20[1];
    v66(v64, v19);
    v35 = (uint64_t)&v65[*(int *)(v69 + 48)];
    v21();
    sub_1C07E05C8(v30, v35, type metadata accessor for EntityMatch);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C07EC444();
      v33 = v52;
    }
    v36 = v63;
    v37 = *(_QWORD *)(v33 + 16);
    if (v37 >= *(_QWORD *)(v33 + 24) >> 1)
    {
      sub_1C07EC444();
      v33 = v53;
    }
    *(_QWORD *)(v33 + 16) = v37 + 1;
    sub_1C07E05F4(v35, v33 + ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80)) + v37 * v36, type metadata accessor for EntityMatch);
    v66(v65, v19);
    v38 = (uint64_t)&v67[*(int *)(v69 + 48)];
    ((void (*)(char *, uint64_t, uint64_t))v21)(v67, v70, v19);
    sub_1C07E05C8(v30, v38, type metadata accessor for EntityMatch);
    v39 = v68;
    swift_isUniquelyReferenced_nonNull_native();
    v72 = (_QWORD *)*v39;
    v40 = v72;
    *v39 = 0x8000000000000000;
    sub_1C07DCD84();
    if (__OFADD__(v40[2], (v42 & 1) == 0))
      break;
    v43 = v41;
    v44 = v42;
    sub_1C07ACF80(&qword_1ED75D210);
    if ((sub_1C107090C() & 1) != 0)
    {
      sub_1C07DCD84();
      if ((v44 & 1) != (v46 & 1))
        goto LABEL_41;
      v43 = v45;
    }
    v47 = v72;
    if ((v44 & 1) != 0)
    {
      v48 = v72[7];
      swift_bridgeObjectRelease();
      *(_QWORD *)(v48 + 8 * v43) = v33;
    }
    else
    {
      v72[(v43 >> 6) + 8] |= 1 << v43;
      ((void (*)(unint64_t, char *, uint64_t))v21)(v47[6] + v43 * v61, v67, v19);
      *(_QWORD *)(v47[7] + 8 * v43) = v33;
      v49 = v47[2];
      v50 = __OFADD__(v49, 1);
      v51 = v49 + 1;
      if (v50)
        goto LABEL_39;
      v47[2] = v51;
    }
    *v68 = v47;
    swift_bridgeObjectRelease();
    v66(v67, v19);
    sub_1C07B1F90(v38, type metadata accessor for EntityMatch);
    sub_1C0784B6C(v70, &qword_1ED759FB0);
    v11 = v62;
    if (v62)
      goto LABEL_2;
LABEL_3:
    v13 = v60 + 1;
    if (__OFADD__(v60, 1))
      goto LABEL_40;
    if (v13 >= v57)
      return swift_release();
    v14 = *(_QWORD *)(v56 + 8 * v13);
    v15 = v60 + 1;
    if (!v14)
    {
      v15 = v60 + 2;
      if (v60 + 2 >= v57)
        return swift_release();
      v14 = *(_QWORD *)(v56 + 8 * v15);
      if (!v14)
      {
        v15 = v60 + 3;
        if (v60 + 3 >= v57)
          return swift_release();
        v14 = *(_QWORD *)(v56 + 8 * v15);
        if (!v14)
        {
          v15 = v60 + 4;
          if (v60 + 4 >= v57)
            return swift_release();
          v14 = *(_QWORD *)(v56 + 8 * v15);
          if (!v14)
          {
            v15 = v60 + 5;
            if (v60 + 5 >= v57)
              return swift_release();
            v14 = *(_QWORD *)(v56 + 8 * v15);
            if (!v14)
            {
              v16 = v60 + 6;
              while (v16 < v57)
              {
                v14 = *(_QWORD *)(v56 + 8 * v16++);
                if (v14)
                {
                  v15 = v16 - 1;
                  goto LABEL_18;
                }
              }
              return swift_release();
            }
          }
        }
      }
    }
LABEL_18:
    v62 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v60 = v15;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  result = sub_1C1070D44();
  __break(1u);
  return result;
}

void sub_1C0CE388C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[2];

  v2 = *(_QWORD *)(sub_1C106E590() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1C0C6EF08();
    v3 = v5;
  }
  v4 = *(_QWORD *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  sub_1C0CEAF54((unint64_t)v6);
  *a1 = v3;
}

uint64_t sub_1C0CE3910()
{
  swift_retain();
  sub_1C078017C();
  return sub_1C077C7C0();
}

uint64_t sub_1C0CE3980(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v3 = v2;
  v4 = *(_QWORD *)(a2 + 16);
  if (v4)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v6 = (uint64_t *)(a2 + 56);
    while (1)
    {
      v14 = v4;
      v7 = *(v6 - 1);
      v8 = *v6;
      sub_1C07ACF80(&qword_1ED762CB0);
      v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_1C1079220;
      *(_QWORD *)(v9 + 32) = v7;
      *(_QWORD *)(v9 + 40) = v8;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      sub_1C07ACF80(&qword_1ED762B70);
      sub_1C0CEC030();
      v10 = sub_1C106A990();
      if (v3)
        break;
      v12 = v10;
      v13 = v11;
      swift_bridgeObjectRelease();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C07B0E28(v12, v13);
      sub_1C0BBCB68();
      sub_1C106BFC8();
      sub_1C07B3374(v12, v13);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C07B3374(v12, v13);
      v6 += 4;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 = v14 - 1;
      if (v14 == 1)
        return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

uint64_t sub_1C0CE3B80(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *i;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v3 = v2;
  v4 = *(_QWORD *)(a2 + 16);
  if (v4)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    for (i = (uint64_t *)(a2 + 48); ; i += 3)
    {
      v13 = v4;
      v7 = *i;
      sub_1C07ACF80((uint64_t *)&unk_1ED7560C8);
      v8 = swift_allocObject();
      *(_OWORD *)(v8 + 16) = xmmword_1C1079220;
      *(_QWORD *)(v8 + 32) = v7;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      sub_1C07ACF80(&qword_1ED755F88);
      sub_1C0CEC0A4();
      v9 = sub_1C106A990();
      if (v3)
        break;
      v11 = v9;
      v12 = v10;
      swift_bridgeObjectRelease();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C07B0E28(v11, v12);
      sub_1C0BBCB68();
      sub_1C106BFC8();
      sub_1C07B3374(v11, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C07B3374(v11, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      --v4;
      if (v13 == 1)
        return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

uint64_t sub_1C0CE3D80(uint64_t a1)
{
  return sub_1C0CE3DC8(a1, (void (*)(uint64_t))sub_1C08A3148);
}

uint64_t sub_1C0CE3DA4(uint64_t a1)
{
  return sub_1C0CE3DC8(a1, (void (*)(uint64_t))sub_1C08A30D8);
}

uint64_t sub_1C0CE3DC8(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3;

  v3 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  a2(v3);
  swift_bridgeObjectRelease();
  sub_1C0CE3910();
  return sub_1C077C7C0();
}

void Resolver.init(stores:source:pipelineType:)(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1C07ACF80(&qword_1ED762590);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v9);
  sub_1C0778564();
  v12 = v11 - v10;
  sub_1C07ACF80(&qword_1ED759C40);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v13);
  sub_1C07785B8();
  v14 = *a3;
  v15 = (int *)sub_1C078D890();
  *(_BYTE *)(a4 + v15[6]) = 4;
  sub_1C0796740(a1, v16, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C07E05C8(a2, a4 + v15[5], (uint64_t (*)(_QWORD))type metadata accessor for Source);
  *(_BYTE *)(a4 + v15[7]) = v14;
  v17 = sub_1C106AEF4();
  sub_1C07B2D8C(v12, 1, 1, v17);
  v18 = sub_1C106E620();
  sub_1C077EB5C(v18, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C07825F4(v19, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  v20 = sub_1C106E638();
  sub_1C07B2D8C(v4, 0, 1, v20);
  sub_1C080AD78(v4, a4 + v15[8], &qword_1ED759C40);
}

uint64_t type metadata accessor for Resolver()
{
  uint64_t result;

  result = qword_1ED75CE90;
  if (!qword_1ED75CE90)
    return swift_getSingletonMetadata();
  return result;
}

void Resolver.stores.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1C07E05C8(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
}

void Resolver.source.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_1C078D890();
  sub_1C0796740(v0 + *(int *)(v1 + 20), v2, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0778534();
}

void Resolver.stageName.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + *(int *)(sub_1C078D890() + 24));
  sub_1C0778534();
}

void Resolver.pipelineType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + *(int *)(sub_1C078D890() + 28));
  sub_1C0778534();
}

void sub_1C0CE4064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  float v66;
  uint64_t v67;
  char v68;
  unint64_t *v69;
  unint64_t v70;
  BOOL v71;
  char v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  unint64_t v79;
  _QWORD *v80;
  unint64_t v81;
  uint64_t v82;
  BOOL v83;
  char v84;
  unint64_t v85;
  char v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  float v101;
  uint64_t v102;
  unint64_t v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  char v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  unint64_t v119;
  char v120;
  unint64_t v121;
  char v122;
  char v123;
  unint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  void (*v129)(uint64_t, _QWORD, uint64_t);
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  float v151;
  _QWORD *v152;
  uint64_t v153;
  char v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char v159;
  uint64_t *v160;
  char v162;
  float v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  uint64_t v167;
  void (*v168)(unint64_t, unint64_t, _QWORD *);
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  void (*v172)(unint64_t, _QWORD *);
  unint64_t v173;
  char v174;
  char v175;
  _QWORD *v176;
  char v177;
  unint64_t v178;
  char v179;
  uint64_t v180;
  unint64_t v181;
  uint64_t v182;
  uint64_t v183;
  unint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  unint64_t v190;
  _QWORD *v191;
  uint64_t v192;
  uint64_t v193;
  _QWORD *v194;
  uint64_t v195;
  unint64_t v196;
  unint64_t v197;
  uint64_t v198;
  _QWORD *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  int v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  unint64_t v212;
  uint64_t v213;
  uint64_t v214;
  _QWORD *v215;
  unint64_t v216;
  char v217;
  unint64_t v218;
  char v219;
  char v220;
  unint64_t v221;
  char v222;
  _QWORD *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t i;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  __int128 v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  char *v247;
  _QWORD *v248;
  unint64_t v249;
  uint64_t v250;
  uint64_t v251;
  unint64_t v252;
  uint64_t v253;
  uint64_t v254;
  unint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  unint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  _QWORD *v264;
  _QWORD *v265;
  uint64_t v266;
  uint64_t v267;
  __int128 v268;
  __int128 v269;
  __int128 v270;
  _QWORD *v271;
  __int128 v272;
  _OWORD v273[2];
  __int128 v274;
  __int128 v275;
  _QWORD v276[2];

  sub_1C0776838();
  a21 = v24;
  a22 = v25;
  v240 = v22;
  v27 = v26;
  sub_1C07ACF80((uint64_t *)&unk_1ED75EA40);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v28);
  sub_1C07785B8();
  sub_1C07ACF80(&qword_1ED75A328);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v29);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v30);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v31);
  sub_1C0778674();
  v237 = v32;
  v264 = (_QWORD *)sub_1C077EA38();
  v255 = *(v264 - 1);
  MEMORY[0x1E0C80A78](v264);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v33);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v34);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v35);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v36);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v37);
  v39 = (char *)&i - v38;
  MEMORY[0x1E0C80A78](v40);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v41);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v42);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v43);
  sub_1C0778674();
  v234 = v44;
  v45 = sub_1C0789FA0();
  v46 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v48 = (uint64_t)&i - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v49);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v50);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v51);
  v53 = (uint64_t)&i - v52;
  MEMORY[0x1E0C80A78](v54);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v55);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v56);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v57);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v58);
  v60 = (char *)&i - v59;
  v61 = MEMORY[0x1E0DEE9E0];
  v271 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v62 = *(_QWORD *)(v27 + 16);
  v241 = v23;
  v260 = v45;
  v258 = v46;
  v262 = v48;
  v259 = v53;
  if (v62)
  {
    sub_1C0779D28();
    v63 = v27;
    v242 = v64;
    v65 = v27 + v64;
    v261 = *(_QWORD *)(v46 + 72);
    sub_1C07B0160(v63, (uint64_t)&v262);
    v238 = MEMORY[0x1E0DEE9E0];
    v248 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    *(_QWORD *)&v243 = v39;
    while (1)
    {
      v263 = v65;
      sub_1C078A764(v65, (uint64_t)v60);
      v23 = *(int *)(v45 + 28);
      v66 = *(float *)&v60[v23];
      if (v66 >= 0.99)
      {
        v73 = (uint64_t)&v60[*(int *)(v45 + 20)];
        v74 = v271;
        if (v271[2])
        {
          sub_1C07AC1C4();
          v76 = MEMORY[0x1E0DEE9D8];
          v77 = v244;
          if ((v78 & 1) != 0)
          {
            v76 = *(_QWORD *)(v74[7] + 8 * v75);
            sub_1C077584C();
          }
        }
        else
        {
          v76 = MEMORY[0x1E0DEE9D8];
          v77 = v244;
        }
        sub_1C07E05C8((uint64_t)v60, v77, type metadata accessor for EntityMatch);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C07AC8E4();
          v76 = v135;
        }
        v79 = *(_QWORD *)(v76 + 16);
        if (v79 >= *(_QWORD *)(v76 + 24) >> 1)
        {
          sub_1C07AC8E4();
          v76 = v136;
        }
        *(_QWORD *)(v76 + 16) = v79 + 1;
        sub_1C07E05F4(v77, v76 + v242 + v79 * v261, type metadata accessor for EntityMatch);
        sub_1C077F89C();
        sub_1C0782EA0(v256, v73);
        v80 = v271;
        v53 = sub_1C077C09C();
        v271 = (_QWORD *)0x8000000000000000;
        *(_QWORD *)&v272 = v80;
        sub_1C07DCD84();
        sub_1C07B9B8C();
        if (v83)
          goto LABEL_173;
        v45 = v81;
        v46 = v82;
        sub_1C07ACF80(&qword_1ED75D210);
        sub_1C107090C();
        sub_1C07A1F64();
        if ((v84 & 1) != 0)
        {
          sub_1C077C540();
          if ((v46 & 1) != (v86 & 1))
            goto LABEL_183;
          v45 = v85;
        }
        v87 = (_QWORD *)v272;
        if ((v46 & 1) != 0)
        {
          v88 = *(_QWORD *)(v272 + 56);
          swift_bridgeObjectRelease();
          *(_QWORD *)(v88 + 8 * v45) = v76;
        }
        else
        {
          sub_1C07ABE10(v272 + 8 * (v45 >> 6));
          sub_1C0782EA0(v87[6] + *(_QWORD *)(v255 + 72) * v45, v256);
          *(_QWORD *)(v87[7] + 8 * v45) = v76;
          sub_1C07AEE24();
          if (v83)
            goto LABEL_176;
          v87[2] = v89;
        }
        v271 = v87;
        swift_bridgeObjectRelease();
        v23 = v241;
        sub_1C07A0258();
        sub_1C0CEC11C();
        goto LABEL_50;
      }
      v67 = *(_QWORD *)&v60[*(int *)(v45 + 40)];
      if (v67 && *(_QWORD *)(v67 + 16))
      {
        sub_1C077AE90();
        sub_1C079E824();
        if ((v68 & 1) != 0)
        {
          sub_1C07B8080();
          v45 = *v69;
          v70 = v69[1];
          sub_1C077584C();
          sub_1C077960C();
          v71 = v45 == 1702195828 && v70 == 0xE400000000000000;
          if (v71)
          {
            swift_bridgeObjectRelease();
            sub_1C07B676C();
LABEL_52:
            if (v66 <= 0.0)
            {
LABEL_59:
              sub_1C07AF2F0();
              goto LABEL_60;
            }
            (*(void (**)(uint64_t, char *, _QWORD *))(v255 + 16))(v234, &v60[*(int *)(v45 + 20)], v264);
            sub_1C0775AB8((uint64_t)v60, v232);
            sub_1C07A8238();
            *(_QWORD *)&v272 = type metadata accessor for EntityMatch;
            sub_1C07DCD84();
            sub_1C07B8BEC();
            if (v83)
              goto LABEL_180;
            v45 = v113;
            sub_1C07ACF80(&qword_1ED75D208);
            sub_1C07B7D08();
            v46 = v258;
            sub_1C07A1F64();
            if ((v114 & 1) != 0)
            {
              sub_1C077C540();
              sub_1C0775978();
              if (!v71)
              {
LABEL_183:
                sub_1C1070D44();
                __break(1u);
                goto LABEL_184;
              }
            }
            if ((v45 & 1) != 0)
            {
              v238 = v272;
              v115 = sub_1C0790A2C();
              sub_1C09049EC(v115, v116);
              goto LABEL_49;
            }
            v132 = sub_1C07A5700();
            sub_1C079C82C(v132, (uint64_t)&v265);
            v133 = sub_1C0790A2C();
            sub_1C07E05F4(v133, v134, type metadata accessor for EntityMatch);
            sub_1C07AEE24();
            if (v83)
              goto LABEL_181;
LABEL_48:
            sub_1C07831A4(v110);
            goto LABEL_49;
          }
          v72 = sub_1C07785B0();
          sub_1C0778580();
          sub_1C07B676C();
          if ((v72 & 1) != 0)
            goto LABEL_52;
        }
        else
        {
          sub_1C077960C();
        }
      }
      v90 = v238;
      v91 = *(_QWORD *)(v238 + 16);
      v247 = &v60[*(int *)(v45 + 20)];
      if (v91)
      {
        sub_1C07DCD84();
        if ((v93 & 1) != 0)
        {
          v94 = *(_QWORD *)(v90 + 56) + v92 * v261;
          v95 = v237;
          sub_1C078A764(v94, v237);
          v96 = 0;
        }
        else
        {
          v96 = 1;
          v95 = v237;
        }
        v39 = (char *)v243;
      }
      else
      {
        v96 = 1;
        v95 = v237;
      }
      sub_1C077CF40(v95, v96);
      if (sub_1C078C348(v95))
      {
        sub_1C0784B6C(v95, &qword_1ED75A328);
        if (*(float *)&v60[v23] <= 0.0)
          goto LABEL_59;
      }
      else
      {
        v97 = v62;
        v98 = v60;
        v99 = v39;
        v100 = v235;
        sub_1C07E05C8(v95, v235, type metadata accessor for EntityMatch);
        sub_1C0784B6C(v95, &qword_1ED75A328);
        v101 = *(float *)(v100 + *(int *)(v45 + 28));
        v102 = v100;
        v39 = v99;
        v60 = v98;
        v62 = v97;
        sub_1C07B1F90(v102, type metadata accessor for EntityMatch);
        if (v101 >= *(float *)&v60[v23])
          goto LABEL_59;
      }
      sub_1C079C82C(v250, (uint64_t)v273 + 8);
      sub_1C078A764((uint64_t)v60, v236);
      sub_1C07A8238();
      *(_QWORD *)&v272 = v95;
      sub_1C07DCD84();
      sub_1C07B8BEC();
      if (v83)
        goto LABEL_178;
      v45 = v103;
      sub_1C07ACF80(&qword_1ED75D208);
      sub_1C07B7D08();
      v46 = v258;
      sub_1C07A1F64();
      if ((v104 & 1) != 0)
      {
        sub_1C077C540();
        sub_1C0775978();
        if (!v71)
          goto LABEL_183;
      }
      if ((v45 & 1) == 0)
      {
        v107 = sub_1C07A5700();
        sub_1C079C82C(v107, (uint64_t)&v274);
        v108 = sub_1C079F084();
        sub_1C07E05F4(v108, v109, type metadata accessor for EntityMatch);
        sub_1C07AEE24();
        if (v83)
          goto LABEL_179;
        goto LABEL_48;
      }
      v238 = v272;
      v105 = sub_1C079F084();
      sub_1C09049EC(v105, v106);
LABEL_49:
      sub_1C077970C();
      v23 = v241;
      sub_1C07B676C();
LABEL_50:
      sub_1C07788EC();
      sub_1C077B980(v112, *(uint64_t (**)(uint64_t, _QWORD))(v111 + 8));
LABEL_60:
      v117 = &v60[*(int *)(v45 + 24)];
      if ((sub_1C106E4F4() & 1) != 0)
      {
        sub_1C077F89C();
        v23 = v251;
        v118 = (uint64_t)v264;
        ((void (*)(uint64_t, char *, _QWORD *))v48)(v251, v117, v264);
        ((void (*)(char *, char *, uint64_t))v48)(v39, v117, v118);
        sub_1C07A8238();
        *(_QWORD *)&v272 = v117;
        sub_1C07DCD84();
        sub_1C07B9B8C();
        if (v83)
          goto LABEL_174;
        v121 = v119;
        v122 = v120;
        sub_1C07ACF80((uint64_t *)&unk_1ED755F98);
        sub_1C107090C();
        sub_1C07AF2F0();
        v46 = v258;
        if ((v123 & 1) != 0)
        {
          sub_1C077C540();
          sub_1C0775978();
          if (!v71)
            goto LABEL_183;
          v121 = v124;
        }
        v125 = v272;
        if ((v122 & 1) != 0)
        {
          v45 = v255;
          v125 = (uint64_t)v264;
          sub_1C078A3A0(*(_QWORD *)(v272 + 56) + *(_QWORD *)(v255 + 72) * v121, (uint64_t)v39, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v255 + 40));
        }
        else
        {
          *(_QWORD *)(v272 + 8 * (v121 >> 6) + 64) |= 1 << v121;
          v126 = v255;
          v127 = *(_QWORD *)(v255 + 72) * v121;
          v128 = (uint64_t)v264;
          ((void (*)(uint64_t, uint64_t, _QWORD *))v48)(*(_QWORD *)(v125 + 48) + v127, v251, v264);
          v129 = *(void (**)(uint64_t, _QWORD, uint64_t))(v126 + 32);
          v39 = (char *)v243;
          v129(*(_QWORD *)(v125 + 56) + v127, v243, v128);
          sub_1C07AEE24();
          if (v83)
            goto LABEL_177;
          sub_1C0CEC128(v130);
          v45 = *(_QWORD *)(v131 - 256);
        }
        v248 = (_QWORD *)v272;
        sub_1C077970C();
        (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v251, v125);
        sub_1C07B676C();
        sub_1C0CEC11C();
      }
      sub_1C07B1F90((uint64_t)v60, type metadata accessor for EntityMatch);
      v65 = v263 + v261;
      if (!--v62)
      {
        sub_1C077960C();
        v61 = v238;
        goto LABEL_76;
      }
    }
  }
  v248 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_76:
  v137 = v61;
  v138 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v62 = 0;
  sub_1C0CE32E8(v138, &v271);
  v247 = 0;
  v238 = v137;
  sub_1C07767AC();
  v139 = sub_1C077AE90();
  sub_1C0ACBA14(v139, (uint64_t)&v268, 0.99);
  sub_1C0ACBA8C();
  v272 = v268;
  v273[0] = v269;
  v274 = v268;
  v275 = v269;
  v273[1] = v270;
  v276[0] = *((_QWORD *)&v270 + 1);
  sub_1C08FD4A0((uint64_t)&v274);
  sub_1C08FD4A0((uint64_t)&v274 + 8);
  sub_1C08FD4A0((uint64_t)&v275);
  sub_1C08FD4A0((uint64_t)&v275 + 8);
  sub_1C08FD4A0((uint64_t)v276);
  v140 = sub_1C0ACBF28(0.99);
  sub_1C08EE9A0((uint64_t)&v274);
  sub_1C08EE9A0((uint64_t)&v274 + 8);
  sub_1C08EE9A0((uint64_t)&v275);
  sub_1C08EE9A0((uint64_t)&v275 + 8);
  sub_1C08EE9A0((uint64_t)v276);
  v235 = *(_QWORD *)(v140 + 16);
  if (!v235)
    goto LABEL_167;
  v141 = 0;
  v236 = v140 + 32;
  v243 = xmmword_1C1079220;
  v234 = v140;
  do
  {
    if (v141 >= *(_QWORD *)(v140 + 16))
      goto LABEL_175;
    v237 = v141;
    v267 = MEMORY[0x1E0DEE9D8];
    v266 = MEMORY[0x1E0DEE9D8];
    v142 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v62 = (unint64_t)v247;
    sub_1C0CE2F88(v142, &v266, &v267);
    sub_1C07767AC();
    sub_1C077F3A8();
    if (!v143)
    {
      v247 = (char *)v62;
      swift_bridgeObjectRelease();
      goto LABEL_166;
    }
    sub_1C0CE388C(&v266);
    sub_1C0CE388C(&v267);
    v247 = (char *)v62;
    v144 = v266;
    sub_1C0AA4A0C(v266, v23);
    v145 = (uint64_t)v264;
    if (sub_1C07B2D80(v23, 1, (uint64_t)v264) != 1)
    {
      v166 = v255;
      v261 = *(_QWORD *)(v255 + 32);
      ((void (*)(uint64_t, uint64_t, uint64_t))v261)(v253, v23, v145);
      v23 = *(_QWORD *)(v144 + 16);
      if (v23)
      {
        sub_1C0779D28();
        v46 = v144 + v167;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        sub_1C07B630C(*(_QWORD *)(v166 + 72));
        v168 = *(void (**)(unint64_t, unint64_t, _QWORD *))(v166 + 16);
        v169 = (uint64_t)v264;
        v45 = v252;
        do
        {
          sub_1C078DB54(v45, v46);
          sub_1C0794BAC(&qword_1ED75EA38, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE50]);
          v170 = v253;
          if ((sub_1C106FAA8() & 1) != 0)
          {
            sub_1C07788EC();
            v172 = *(void (**)(unint64_t, _QWORD *))(v171 + 8);
          }
          else
          {
            v62 = v249;
            sub_1C078DB54(v249, v45);
            sub_1C078DB54(v245, v170);
            sub_1C07A8238();
            v265 = (_QWORD *)v169;
            sub_1C07DCD84();
            sub_1C07B8BEC();
            if (v83)
              goto LABEL_170;
            v62 = v173;
            v175 = v174;
            sub_1C07ACF80((uint64_t *)&unk_1ED755F98);
            v176 = &v265;
            sub_1C107090C();
            sub_1C07A1F64();
            if ((v177 & 1) != 0)
            {
              sub_1C07B4984();
              sub_1C077C540();
              if ((v175 & 1) != (v179 & 1))
                goto LABEL_183;
              v62 = v178;
            }
            sub_1C07B4984();
            if ((v175 & 1) != 0)
            {
              v180 = v270 + v62 * v263;
              v181 = v255;
              v176 = v264;
              sub_1C078A3A0(v180, v245, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v255 + 40));
            }
            else
            {
              *((_QWORD *)&v270 + (v62 >> 6) + 1) |= 1 << v62;
              v62 *= v263;
              v168(*((_QWORD *)&v269 + 1) + v62, v249, v264);
              sub_1C0780B78((uint64_t)&a14);
              sub_1C07AEE24();
              if (v83)
                goto LABEL_172;
              sub_1C0CEC128(v182);
              v181 = *(_QWORD *)(v183 - 256);
            }
            v248 = v265;
            sub_1C077970C();
            v172 = *(void (**)(unint64_t, _QWORD *))(v181 + 8);
            v172(v249, v176);
            type metadata accessor for PhaseStores();
            v62 = (unint64_t)v247;
            sub_1C0AAD288(v252, v253);
            if (v62)
              goto LABEL_187;
            v247 = 0;
            v169 = (uint64_t)v264;
          }
          v45 = v252;
          v172(v252, (_QWORD *)v169);
          sub_1C0CEC108();
        }
        while (!v71);
        swift_bridgeObjectRelease();
        sub_1C07A0258();
      }
      sub_1C077F3A8();
      v184 = v255;
      v244 = v185;
      if (!v185)
      {
        v192 = v253;
        goto LABEL_164;
      }
      sub_1C0779D28();
      v256 = v186;
      v242 = v187 + v186;
      v232 = v187;
      v189 = v188;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v190 = 0;
      v23 = *(_QWORD *)(v189 + 72);
      v191 = v271;
      v192 = v253;
LABEL_129:
      v251 = v190;
      v250 = v242 + v23 * v190;
      sub_1C089AEBC(v250, (uint64_t)v191);
      if (v193)
      {
        v265 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        sub_1C07B630C(*(_QWORD *)(v193 + 16));
        if (!v195)
          goto LABEL_146;
        v196 = 0;
        v261 = (uint64_t)v194;
        while (v196 < v194[2])
        {
          v197 = (*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
          v48 = *(_QWORD *)(v46 + 72);
          sub_1C0775AB8((uint64_t)v194 + v197 + v48 * v196, v53);
          v62 = *(_QWORD *)(v266 + 16);
          if (!v62)
            goto LABEL_138;
          v45 = v53 + *(int *)(v45 + 24);
          v46 = v266 + v256;
          sub_1C0794BAC(&qword_1ED75EA38, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE50]);
          v53 = v198;
          sub_1C077584C();
          do
          {
            v199 = v264;
            if ((sub_1C106FAA8() & 1) != 0)
            {
              sub_1C0778580();
              sub_1C07A1F64();
              sub_1C07E05F4(v53, v257, type metadata accessor for EntityMatch);
              if ((sub_1C07A8238() & 1) == 0)
              {
                v199 = &v265;
                sub_1C09D401C();
                sub_1C07B4984();
              }
              sub_1C07A0258();
              v62 = v199[2];
              if (v62 >= v199[3] >> 1)
              {
                v199 = &v265;
                sub_1C09D401C();
                sub_1C07B4984();
              }
              v199[2] = v62 + 1;
              sub_1C07AFB40(v257, (uint64_t)v199 + v197 + v62 * v48);
              goto LABEL_144;
            }
            v46 += v23;
            --v62;
          }
          while (v62);
          sub_1C0778580();
          sub_1C07A0258();
          sub_1C07A1F64();
LABEL_138:
          sub_1C077F06C(v53);
LABEL_144:
          sub_1C0CEC11C();
          ++v196;
          v194 = (_QWORD *)v261;
          if (v196 == v263)
          {
            v191 = v271;
            v192 = v253;
LABEL_146:
            swift_bridgeObjectRelease();
            v62 = v251 + 1;
            sub_1C077C09C();
            v265 = v191;
            v191 = &v265;
            sub_1C08A14C0();
            sub_1C07B4984();
            v271 = &v265;
            sub_1C077970C();
            v190 = v62;
            if (v62 == v244)
            {
              sub_1C078F230();
              v184 = v255;
LABEL_164:
              sub_1C077B980(v192, *(uint64_t (**)(uint64_t, _QWORD))(v184 + 8));
              sub_1C07AF2F0();
              goto LABEL_165;
            }
            goto LABEL_129;
          }
        }
        __break(1u);
LABEL_169:
        __break(1u);
LABEL_170:
        __break(1u);
LABEL_171:
        __break(1u);
LABEL_172:
        __break(1u);
LABEL_173:
        __break(1u);
LABEL_174:
        __break(1u);
LABEL_175:
        __break(1u);
LABEL_176:
        __break(1u);
LABEL_177:
        __break(1u);
LABEL_178:
        __break(1u);
LABEL_179:
        __break(1u);
LABEL_180:
        __break(1u);
LABEL_181:
        __break(1u);
LABEL_182:
        sub_1C07807F8();
        v230 = 358;
      }
      else
      {
LABEL_184:
        sub_1C07807F8();
        v230 = 342;
      }
      for (i = v230; ; i = 335)
      {
LABEL_186:
        sub_1C07BBFAC();
        __break(1u);
LABEL_187:

        sub_1C07807F8();
      }
    }
    sub_1C0784B6C(v23, (uint64_t *)&unk_1ED75EA40);
    sub_1C077CF40(v254, 1);
    sub_1C077F3A8();
    sub_1C07B630C(v146);
    if (!v147)
      goto LABEL_148;
    sub_1C07788EC();
    sub_1C0779D28();
    v261 = v148 + v149;
    sub_1C07B0160(v148, (uint64_t)&a9);
    v150 = 0;
    v151 = 0.0;
    do
    {
      v152 = v271;
      if (!v271[2])
        goto LABEL_182;
      sub_1C07788EC();
      sub_1C07DCD84();
      if ((v154 & 1) == 0)
        goto LABEL_182;
      v62 = *(_QWORD *)(v152[7] + 8 * v153);
      v155 = *(_QWORD *)(v62 + 16);
      if (!v155)
        goto LABEL_105;
      sub_1C0779D28();
      v157 = v62 + v156;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v53 = *(_QWORD *)(v46 + 72);
      while (1)
      {
        sub_1C0775AB8(v157, v48);
        if ((sub_1C106E4F4() & 1) != 0)
          break;
        sub_1C07B1F90(v48, type metadata accessor for EntityMatch);
LABEL_102:
        v157 += v53;
        if (!--v155)
        {
          sub_1C0775844();
          goto LABEL_104;
        }
      }
      v158 = *(_QWORD *)(v48 + *(int *)(v45 + 40));
      if (!v158 || !*(_QWORD *)(v158 + 16))
        goto LABEL_99;
      sub_1C077AE90();
      sub_1C079E824();
      if ((v159 & 1) == 0)
      {
        sub_1C077960C();
LABEL_99:
        v163 = *(float *)(v48 + *(int *)(v45 + 28));
        if (v151 >= v163)
        {
          sub_1C077F06C(v48);
        }
        else
        {
          v164 = v254;
          sub_1C0784B6C(v254, &qword_1ED75A328);
          sub_1C07AFB40(v48, v164);
          sub_1C077CF40(v164, 0);
          v151 = v163;
        }
        goto LABEL_102;
      }
      sub_1C07B8080();
      v46 = *v160;
      v45 = v160[1];
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C077960C();
      if (v46 != 1702195828 || v45 != 0xE400000000000000)
      {
        v162 = sub_1C07785B0();
        sub_1C0775834();
        sub_1C07A0258();
        if ((v162 & 1) != 0)
        {
          sub_1C0775844();
          goto LABEL_108;
        }
        goto LABEL_99;
      }
      sub_1C0775844();
      swift_bridgeObjectRelease();
      sub_1C07A0258();
LABEL_108:
      v165 = v254;
      sub_1C0784B6C(v254, &qword_1ED75A328);
      sub_1C07AFB40(v48, v165);
      sub_1C077CF40(v165, 0);
LABEL_104:
      sub_1C07A1F64();
LABEL_105:
      ++v150;
    }
    while (v150 != v263);
    sub_1C078F230();
LABEL_148:
    v200 = v233;
    sub_1C0904944(v254, v233);
    if (sub_1C078C348(v200) == 1)
    {
      sub_1C0784B6C(v200, &qword_1ED75A328);
      sub_1C07807F8();
      i = 377;
      goto LABEL_186;
    }
    v201 = v200;
    v202 = v246;
    sub_1C07AFB40(v201, v246);
    v23 = *(_QWORD *)(v267 + 16);
    if (v23)
    {
      sub_1C0779D28();
      v203 = *(int *)(v45 + 28);
      v261 = v202 + *(int *)(v45 + 24);
      v204 = *(_DWORD *)(v202 + v203);
      v205 = *(_QWORD *)(v202 + *(int *)(v45 + 32));
      LODWORD(v256) = *(unsigned __int8 *)(v202 + *(int *)(v45 + 36));
      v251 = *(_QWORD *)(v202 + *(int *)(v45 + 40));
      sub_1C07B630C(*(_QWORD *)(v206 + 72));
      v208 = *(unsigned __int8 *)(v207 + 80);
      v209 = (v208 + 32) & ~v208;
      v250 = v209 + *(_QWORD *)(v207 + 72);
      v244 = v208 | 7;
      sub_1C07B0160(v210, (uint64_t)&v270 + 8);
      v211 = v202;
      do
      {
        sub_1C07ACF80(&qword_1ED75D2F8);
        v62 = swift_allocObject();
        *(_OWORD *)(v62 + 16) = v243;
        v212 = v62 + v209;
        v213 = sub_1C0776744();
        sub_1C0775828(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v213 - 8) + 16));
        sub_1C077F89C();
        sub_1C078E22C(v214);
        ((void (*)(unint64_t, uint64_t, uint64_t))v48)(v62 + v209 + *(int *)(v45 + 24), v261, v211);
        *(_DWORD *)(v212 + *(int *)(v45 + 28)) = v204;
        *(_QWORD *)(v212 + *(int *)(v45 + 32)) = v205;
        *(_BYTE *)(v212 + *(int *)(v45 + 36)) = v256;
        *(_QWORD *)(v212 + *(int *)(v45 + 40)) = v251;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v215 = v271;
        v53 = sub_1C077C09C();
        v265 = v215;
        v271 = (_QWORD *)0x8000000000000000;
        sub_1C07AC1C4();
        if (__OFADD__(v215[2], (v217 & 1) == 0))
          goto LABEL_169;
        v218 = v216;
        v219 = v217;
        sub_1C07ACF80(&qword_1ED75D210);
        sub_1C107090C();
        sub_1C07A1F64();
        if ((v220 & 1) != 0)
        {
          sub_1C07B4984();
          sub_1C07AC1C4();
          if ((v219 & 1) != (v222 & 1))
            goto LABEL_183;
          v218 = v221;
        }
        v223 = v265;
        if ((v219 & 1) != 0)
        {
          v224 = v265[7];
          swift_bridgeObjectRelease();
          *(_QWORD *)(v224 + 8 * v218) = v62;
        }
        else
        {
          v225 = v239;
          sub_1C078E22C(v239);
          sub_1C07ABE10((uint64_t)&v223[v218 >> 6]);
          sub_1C07788EC();
          sub_1C078A3A0(v227, v225, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v226 + 32));
          *(_QWORD *)(v223[7] + 8 * v218) = v62;
          v228 = v223[2];
          v83 = __OFADD__(v228, 1);
          v229 = v228 + 1;
          if (v83)
            goto LABEL_171;
          v223[2] = v229;
        }
        v271 = v223;
        swift_bridgeObjectRelease();
        sub_1C0CEC108();
        v45 = v260;
        v211 = v246;
      }
      while (!v71);
      sub_1C078F230();
      v46 = v258;
      v202 = v211;
      sub_1C0CEC11C();
    }
    sub_1C077F06C(v202);
    sub_1C0784B6C(v254, &qword_1ED75A328);
    sub_1C07AF2F0();
LABEL_165:
    sub_1C078F230();
LABEL_166:
    swift_bridgeObjectRelease();
    v140 = v234;
    v141 = v237 + 1;
  }
  while (v237 + 1 != v235);
LABEL_167:
  sub_1C07767AC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C078F230();
  swift_bridgeObjectRelease();
  sub_1C078D424();
}

uint64_t sub_1C0CE5990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  unint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  void (*v61)(char *, uint64_t);
  void (*v62)(char *, uint64_t);
  void (*v64)(char *, char *, uint64_t);
  uint64_t v65;
  uint64_t v66;
  char *v67;
  _QWORD v68[11];
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  void (*v86)(char *, char *, uint64_t);
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;

  v68[7] = a8;
  v68[8] = a7;
  v75 = a6;
  v91 = a5;
  v85 = a4;
  v74 = a1;
  v10 = sub_1C106EB24();
  v81 = *(_QWORD *)(v10 - 8);
  v82 = v10;
  MEMORY[0x1E0C80A78](v10);
  v79 = (char *)v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_1C106E41C();
  v77 = *(_QWORD *)(v80 - 8);
  MEMORY[0x1E0C80A78](v80);
  v78 = (char *)v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v76 = (char *)v68 - v14;
  v69 = sub_1C106D1F8();
  v68[10] = *(_QWORD *)(v69 - 8);
  MEMORY[0x1E0C80A78](v69);
  v68[9] = (char *)v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = type metadata accessor for Source();
  MEMORY[0x1E0C80A78](v70);
  v83 = (char *)v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v71 = (char *)v68 - v18;
  v19 = sub_1C07ACF80((uint64_t *)&unk_1ED75EA40);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1C07ACF80(&qword_1ED75A328);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)v68 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for EntityMatch(0);
  v72 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v88 = (uint64_t)v68 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_1C106E590();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v30 = (char *)v68 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v31);
  v73 = (char *)v68 - v32;
  MEMORY[0x1E0C80A78](v33);
  v92 = (char *)v68 - v34;
  MEMORY[0x1E0C80A78](v35);
  v37 = (char *)v68 - v36;
  v38 = type metadata accessor for EntityTriple(0);
  MEMORY[0x1E0C80A78](v38);
  v42 = (char *)v68 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v40 + 16))
  {
    v43 = (*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
    v68[6] = v40;
    sub_1C07E05C8(v40 + v43, (uint64_t)v42, type metadata accessor for EntityTriple);
    v89 = v28;
    v86 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
    v86(v37, v42, v27);
    v44 = *(int *)(v38 + 40);
    v84 = v42;
    v45 = &v42[v44];
    v46 = *((_QWORD *)v45 + 1);
    v90 = *(_QWORD *)v45;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v87 = v37;
    sub_1C089AEBC((uint64_t)v37, a3);
    if (v47)
    {
      v48 = v47;
      sub_1C0AA4B3C();
      if (sub_1C07B2D80((uint64_t)v24, 1, v25) == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v49 = &qword_1ED75A328;
        v50 = (uint64_t)v24;
      }
      else
      {
        v51 = (uint64_t)v24;
        v52 = v88;
        sub_1C07E05F4(v51, v88, type metadata accessor for EntityMatch);
        sub_1C089B344();
        if (sub_1C07B2D80((uint64_t)v21, 1, v27) != 1)
        {
          v85 = a9;
          v64 = *(void (**)(char *, char *, uint64_t))(v89 + 32);
          v64(v92, v21, v27);
          v65 = type metadata accessor for Resolver();
          v66 = *(int *)(v65 + 28);
          v67 = (char *)&loc_1C0CE6038 + dword_1C0CE6764[*(unsigned __int8 *)(v91 + v66)];
          v68[5] = v48;
          v68[4] = v46;
          v68[3] = v64;
          v68[2] = v66;
          v68[1] = v65;
          __asm { BR              X10 }
        }
        sub_1C07B1F90(v52, type metadata accessor for EntityMatch);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v49 = (uint64_t *)&unk_1ED75EA40;
        v50 = (uint64_t)v21;
      }
      sub_1C0784B6C(v50, v49);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v53 = v87;
    if (qword_1ED761458 != -1)
      swift_once();
    v54 = sub_1C106F544();
    sub_1C079E000(v54, (uint64_t)qword_1ED78D818);
    v86(v30, v53, v27);
    v55 = sub_1C106F538();
    v56 = sub_1C1070390();
    if (os_log_type_enabled(v55, v56))
    {
      v57 = (uint8_t *)swift_slowAlloc();
      v58 = swift_slowAlloc();
      v94 = v58;
      *(_DWORD *)v57 = 136380675;
      sub_1C0794BAC((unint64_t *)&qword_1ED7625A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE60]);
      v59 = sub_1C1070C0C();
      v93 = sub_1C0788DAC(v59, v60, &v94);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      v61 = *(void (**)(char *, uint64_t))(v89 + 8);
      v61(v30, v27);
      _os_log_impl(&dword_1C0771000, v55, v56, "Resolver: No match found for entity %{private}s. Not translating", v57, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v58, -1, -1);
      MEMORY[0x1C3BA8270](v57, -1, -1);

      v61(v53, v27);
    }
    else
    {

      v62 = *(void (**)(char *, uint64_t))(v89 + 8);
      v62(v30, v27);
      v62(v53, v27);
    }
    sub_1C07B1F90((uint64_t)v84, type metadata accessor for EntityTriple);
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1C0CE6774@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  int *v40;
  uint64_t v41;
  int *v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t result;
  char v55;
  uint64_t *v56;
  _QWORD *v57;
  _QWORD v58[8];
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v65 = a6;
  v58[3] = a5;
  v58[7] = a4;
  v61 = a3;
  v67 = a2;
  v63 = a7;
  v8 = sub_1C106D1F8();
  v58[5] = *(_QWORD *)(v8 - 8);
  v58[6] = v8;
  MEMORY[0x1E0C80A78](v8);
  v58[4] = (char *)v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = type metadata accessor for Source();
  MEMORY[0x1E0C80A78](v59);
  v60 = (char *)v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1C07ACF80(&qword_1ED75A328);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1C07ACF80((uint64_t *)&unk_1ED75EA40);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1C106E590();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v58[2] = (char *)v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)v58 - v21;
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)v58 - v24;
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)v58 - v27;
  v64 = type metadata accessor for EntityTriple(0);
  v29 = *(int *)(v64 + 32);
  v62 = a1;
  v30 = (uint64_t *)(a1 + v29);
  v31 = *v30;
  v32 = v30[1];
  swift_bridgeObjectRetain_n();
  v66 = v31;
  sub_1C106E59C();
  if (sub_1C07B2D80((uint64_t)v16, 1, v17) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1C0784B6C((uint64_t)v16, (uint64_t *)&unk_1ED75EA40);
  }
  else
  {
    v58[1] = v32;
    v33 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    v33(v28, v16, v17);
    sub_1C089AEBC((uint64_t)v28, v61);
    sub_1C0CE6F98();
    swift_bridgeObjectRelease();
    v34 = type metadata accessor for EntityMatch(0);
    if (sub_1C07B2D80((uint64_t)v13, 1, v34) == 1)
    {
      v61 = v17;
      sub_1C0784B6C((uint64_t)v13, &qword_1ED75A328);
      v35 = (char *)&loc_1C0CE6A5C
          + 4 * byte_1C10B47A0[*(unsigned __int8 *)(v67 + *(int *)(type metadata accessor for Resolver() + 28))];
      __asm { BR              X10 }
    }
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v22, &v13[*(int *)(v34 + 24)], v17);
    sub_1C07B1F90((uint64_t)v13, type metadata accessor for EntityMatch);
    swift_bridgeObjectRelease();
    v33(v25, v22, v17);
    v66 = sub_1C106E530();
    v32 = v36;
    swift_bridgeObjectRelease();
    v37 = *(void (**)(char *, uint64_t))(v18 + 8);
    v37(v25, v17);
    v37(v28, v17);
  }
  v38 = v62;
  v39 = v63;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v63, v65, v17);
  v40 = (int *)v64;
  v41 = v38 + *(int *)(v64 + 20);
  v42 = (int *)type metadata accessor for TranslatedEntityTriple(0);
  v43 = v39 + v42[5];
  v44 = sub_1C106E41C();
  v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 16);
  v45(v43, v41, v44);
  v46 = v38 + v40[6];
  v47 = v39 + v42[6];
  v48 = sub_1C106EB24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v47, v46, v48);
  v45(v39 + v42[7], v38 + v40[7], v44);
  sub_1C07E05C8(v38 + v40[9], v39 + v42[9], (uint64_t (*)(_QWORD))type metadata accessor for Source);
  v49 = (uint64_t *)(v38 + v40[10]);
  v51 = *v49;
  v50 = v49[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106AC6C();
  v53 = v52;
  result = type metadata accessor for Resolver();
  v55 = *(_BYTE *)(v67 + *(int *)(result + 28));
  v56 = (uint64_t *)(v39 + v42[8]);
  *v56 = v66;
  v56[1] = v32;
  v57 = (_QWORD *)(v39 + v42[10]);
  *v57 = v51;
  v57[1] = v50;
  *(_QWORD *)(v39 + v42[11]) = v53;
  *(_BYTE *)(v39 + v42[12]) = v55;
  return result;
}

void sub_1C0CE6F98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  float v13;
  uint64_t *v14;
  uint64_t v15;
  char v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  uint64_t v23;
  uint64_t v24;

  sub_1C0776838();
  v1 = v0;
  v3 = v2;
  v4 = sub_1C0789FA0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1C0778564();
  v8 = v7 - v6;
  sub_1C0791AE8(v3, 1);
  if (!v1)
    goto LABEL_19;
  v9 = *(_QWORD *)(v1 + 16);
  if (!v9)
    goto LABEL_19;
  sub_1C0779D28();
  v11 = v1 + v10;
  v12 = *(_QWORD *)(v5 + 72);
  sub_1C077C0B8();
  v13 = 0.0;
  v14 = &qword_1ED75A328;
  v24 = v3;
  while (1)
  {
    sub_1C07E05C8(v11, v8, type metadata accessor for EntityMatch);
    if ((sub_1C106E4F4() & 1) != 0)
      break;
LABEL_17:
    sub_1C07B1F90(v8, type metadata accessor for EntityMatch);
    v11 += v12;
    if (!--v9)
    {
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
  }
  v15 = *(_QWORD *)(v8 + *(int *)(v4 + 40));
  if (!v15 || !*(_QWORD *)(v15 + 16))
  {
LABEL_15:
    v23 = *(int *)(v4 + 28);
    if (v13 < *(float *)(v8 + v23))
    {
      sub_1C0784B6C(v3, v14);
      sub_1C07E05C8(v8, v3, type metadata accessor for EntityMatch);
      sub_1C0791AE8(v3, 0);
      v13 = *(float *)(v8 + v23);
    }
    goto LABEL_17;
  }
  sub_1C077AE90();
  sub_1C079E824();
  if ((v16 & 1) == 0)
  {
    sub_1C077960C();
    goto LABEL_15;
  }
  v17 = v14;
  sub_1C07B8080();
  v20 = *v18;
  v19 = v18[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C077960C();
  if (v20 != 1702195828 || v19 != 0xE400000000000000)
  {
    v22 = sub_1C07785B0();
    swift_bridgeObjectRelease();
    v14 = v17;
    v3 = v24;
    if ((v22 & 1) != 0)
      goto LABEL_21;
    goto LABEL_15;
  }
  swift_bridgeObjectRelease();
  v3 = v24;
LABEL_21:
  swift_bridgeObjectRelease();
  sub_1C0784B6C(v3, &qword_1ED75A328);
  sub_1C0775AB8(v8, v3);
  sub_1C0791AE8(v3, 0);
  sub_1C077F06C(v8);
LABEL_19:
  sub_1C078D424();
}

void sub_1C0CE71A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t *v50;
  unsigned __int8 *v51;
  uint64_t v52;
  uint64_t v53;
  int *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t, uint64_t);
  uint64_t *v64;
  uint64_t *v65;
  uint64_t *v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unsigned __int8 **v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unsigned __int8 *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(uint64_t, uint64_t, uint64_t);
  uint64_t v117;
  uint64_t v118;
  char v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char v135;
  uint64_t v136;

  sub_1C0776838();
  a21 = v23;
  a22 = v24;
  v121 = v22;
  v26 = v25;
  v128 = v28;
  v129 = v27;
  v30 = v29;
  sub_1C077674C();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v31);
  sub_1C077AE40();
  v130 = v32;
  v124 = sub_1C106E41C();
  v33 = *(_QWORD *)(v124 - 8);
  MEMORY[0x1E0C80A78](v124);
  sub_1C077AED0();
  v131 = v34;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v35);
  sub_1C0778674();
  v127 = v36;
  v126 = sub_1C077EA38();
  v37 = *(_QWORD *)(v126 - 8);
  MEMORY[0x1E0C80A78](v126);
  sub_1C077AE40();
  v125 = v38;
  v39 = sub_1C0776744();
  v40 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  sub_1C0778564();
  v43 = v42 - v41;
  v133 = sub_1C106EB24();
  v123 = *(_QWORD *)(v133 - 8);
  MEMORY[0x1E0C80A78](v133);
  sub_1C077AED0();
  v134 = v44;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v45);
  sub_1C0778674();
  v132 = v46;
  v136 = MEMORY[0x1E0DEE9D8];
  v47 = *(int *)(sub_1C0789FA0() + 40);
  v48 = *(_QWORD *)(v30 + v47);
  if (v48)
  {
    if (*(_QWORD *)(v48 + 16))
    {
      sub_1C077D774(0xD000000000000010, 0x80000001C1106D80);
      if ((v49 & 1) != 0)
      {
        sub_1C07B8080();
        v112 = *v50;
        sub_1C07B0160(v50[1], (uint64_t)&a15);
        sub_1C089A994(0xD000000000000011, 0x80000001C1106DA0, v48);
        if (!v52)
        {
          sub_1C078F230();
          goto LABEL_17;
        }
        v111 = v51;
        v110 = v52;
        sub_1C106D0A8();
        sub_1C106EAD0();
        v53 = sub_1C07ACF80(&qword_1ED75D350);
        v120 = v26;
        v54 = (int *)type metadata accessor for TranslatedEntityTriple(0);
        v55 = *((_QWORD *)v54 - 1);
        v118 = *(_QWORD *)(v55 + 72);
        v56 = *(unsigned __int8 *)(v55 + 80);
        v57 = (v56 + 32) & ~v56;
        v106 = v53;
        v104 = v56 | 7;
        v109 = swift_allocObject();
        *(_OWORD *)(v109 + 16) = xmmword_1C1078A20;
        v105 = v57;
        v58 = v109 + v57;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v125, v129, v126);
        sub_1C106E0B0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v123 + 16))(v134, v132, v133);
        sub_1C106E218();
        sub_1C106D0A8();
        v108 = sub_1C106D090();
        v107 = v59;
        (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v43, v39);
        v60 = sub_1C078D890();
        v117 = v121 + *(int *)(v60 + 20);
        sub_1C07E05C8(v117, v130, (uint64_t (*)(_QWORD))type metadata accessor for Source);
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        sub_1C106AC6C();
        v62 = v61;
        v103 = v60;
        v119 = *(_BYTE *)(v121 + *(int *)(v60 + 28));
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 32))(v58, v125, v126);
        v63 = *(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 32);
        v63(v58 + v54[5], v127, v124);
        v116 = v63;
        sub_1C078A3A0(v58 + v54[6], v134, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v123 + 32));
        v63(v58 + v54[7], v131, v124);
        v64 = (uint64_t *)(v58 + v54[8]);
        *v64 = v108;
        v64[1] = v107;
        sub_1C07E05F4(v130, v58 + v54[9], (uint64_t (*)(_QWORD))type metadata accessor for Source);
        v65 = (uint64_t *)(v58 + v54[10]);
        *v65 = v128;
        v65[1] = v120;
        *(_QWORD *)(v58 + v54[11]) = v62;
        *(_BYTE *)(v58 + v54[12]) = v119;
        sub_1C07B8408();
        sub_1C106E0B0();
        sub_1C0780B78((uint64_t)&a20);
        sub_1C106E008();
        sub_1C07E05C8(v117, v130, (uint64_t (*)(_QWORD))type metadata accessor for Source);
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        sub_1C106AC6C();
        sub_1C0780B78((uint64_t)&a18);
        sub_1C07AA484();
        sub_1C0780B78((uint64_t)&a17);
        sub_1C077B978(v58 + v118 + v54[7], v131);
        v66 = (uint64_t *)(v58 + v118 + v54[8]);
        *v66 = v112;
        v66[1] = v113;
        sub_1C07E05F4(v130, v58 + v118 + v54[9], (uint64_t (*)(_QWORD))type metadata accessor for Source);
        v67 = (uint64_t *)(v58 + v118 + v54[10]);
        *v67 = v128;
        v67[1] = v120;
        sub_1C079C068();
        v69 = v58 + 2 * v68;
        sub_1C07B8408();
        sub_1C106E0B0();
        sub_1C0780B78((uint64_t)&a20);
        sub_1C106E014();
        sub_1C07E05C8(v117, v130, (uint64_t (*)(_QWORD))type metadata accessor for Source);
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        sub_1C106AC6C();
        v71 = v70;
        sub_1C0780B78((uint64_t)&a18);
        v63(v69 + v54[5], v127, v124);
        sub_1C0780B78((uint64_t)&a17);
        sub_1C078DB54(v69 + v54[7], v131);
        v72 = (unsigned __int8 **)(v69 + v54[8]);
        *v72 = v111;
        v72[1] = (unsigned __int8 *)v110;
        sub_1C07E05F4(v130, v69 + v54[9], (uint64_t (*)(_QWORD))type metadata accessor for Source);
        v73 = (uint64_t *)(v69 + v54[10]);
        *v73 = v128;
        v73[1] = v120;
        *(_QWORD *)(v69 + v54[11]) = v71;
        *(_BYTE *)(v69 + v54[12]) = v119;
        sub_1C0BDBA64();
        if (!*(_QWORD *)(v30 + v47))
          goto LABEL_15;
        sub_1C089A994(0x6574736567677573, 0xED0000656D614E64, *(_QWORD *)(v30 + v47));
        if (v75)
        {
          v76 = v75;
          v114 = sub_1C07948B8(v74);
          *(_OWORD *)(v114 + 16) = xmmword_1C1079220;
          v77 = v114 + v105;
          sub_1C07B8408();
          sub_1C07824D8();
          sub_1C0780B78((uint64_t)&a20);
          v78 = sub_1C106DED0();
          sub_1C07AB8D0(v78, v79, (uint64_t (*)(_QWORD))type metadata accessor for Source);
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          sub_1C106AC6C();
          v81 = v80;
          sub_1C0780B78((uint64_t)&a18);
          v116(v114 + v105 + v54[5], v120, v124);
          sub_1C0780B78((uint64_t)&a17);
          v116(v114 + v105 + v54[7], v131, v124);
          v82 = (uint64_t *)(v114 + v105 + v54[8]);
          *v82 = v112;
          v82[1] = v76;
          sub_1C07E05F4(v130, v114 + v105 + v54[9], (uint64_t (*)(_QWORD))type metadata accessor for Source);
          v83 = (uint64_t *)(v114 + v105 + v54[10]);
          *v83 = v128;
          v83[1] = v120;
          *(_QWORD *)(v77 + v54[11]) = v81;
          *(_BYTE *)(v77 + v54[12]) = v119;
          sub_1C0BDBA64();
          v84 = v121 + *(int *)(v103 + 32);
          v135 = v119;
          sub_1C07DAD3C(v112, v76, (uint64_t)v111, v110, 3485232, 0xE300000000000000, v129, v84, v128, v120, (uint64_t)&v135, v101, v102, v103, v104, v105, v106, v107, v47,
            v30,
            v109,
            v110,
            v111);
          sub_1C077B5B4();
          sub_1C077960C();
          sub_1C0BDBA64();
        }
        else
        {
          sub_1C0775834();
        }
        sub_1C07817DC(0xD000000000000015, (uint64_t)"suggestedRelationship");
        if (!v86)
          goto LABEL_16;
        v87 = v85;
        v88 = v86;
        sub_1C07817DC(0xD00000000000001FLL, (uint64_t)"suggestedRelationshipConfidence");
        if (v90)
        {
          v115 = v90;
          v122 = sub_1C07948B8(v89);
          *(_OWORD *)(v122 + 16) = xmmword_1C1078FC0;
          sub_1C07B8408();
          sub_1C07824D8();
          sub_1C0780B78((uint64_t)&a20);
          v91 = sub_1C106E200();
          sub_1C07AB8D0(v91, v92, (uint64_t (*)(_QWORD))type metadata accessor for Source);
          sub_1C077C0B8();
          sub_1C106AC6C();
          sub_1C0780B78((uint64_t)&a18);
          sub_1C07AA484();
          sub_1C0780B78((uint64_t)&a17);
          sub_1C077B978(v122 + v105 + v54[7], v131);
          v93 = (_QWORD *)(v122 + v105 + v54[8]);
          *v93 = v87;
          v93[1] = v88;
          sub_1C07E05F4(v130, v122 + v105 + v54[9], (uint64_t (*)(_QWORD))type metadata accessor for Source);
          v94 = (uint64_t *)(v122 + v105 + v54[10]);
          *v94 = v128;
          v94[1] = v120;
          sub_1C079C068();
          v96 = v122 + v105 + v95;
          sub_1C07B8408();
          sub_1C106E0B0();
          sub_1C0780B78((uint64_t)&a20);
          sub_1C106E1F4();
          sub_1C07E05C8(v117, v130, (uint64_t (*)(_QWORD))type metadata accessor for Source);
          sub_1C077C0B8();
          sub_1C106AC6C();
          v98 = v97;
          sub_1C0780B78((uint64_t)&a18);
          sub_1C077B978(v96 + v54[5], v127);
          sub_1C0780B78((uint64_t)&a17);
          sub_1C077B978(v96 + v54[7], v131);
          v99 = (uint64_t *)(v96 + v54[8]);
          *v99 = v112;
          v99[1] = v115;
          sub_1C07E05F4(v130, v96 + v54[9], (uint64_t (*)(_QWORD))type metadata accessor for Source);
          v100 = (uint64_t *)(v96 + v54[10]);
          *v100 = v128;
          v100[1] = v120;
          *(_QWORD *)(v96 + v54[11]) = v98;
          *(_BYTE *)(v96 + v54[12]) = v119;
          sub_1C0BDBA64();
        }
        else
        {
LABEL_15:
          swift_bridgeObjectRelease();
        }
LABEL_16:
        (*(void (**)(uint64_t, uint64_t))(v123 + 8))(v132, v133);
      }
    }
  }
LABEL_17:
  sub_1C078D424();
}

uint64_t Resolver.execute()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[4] = v0;
  v1[5] = sub_1C078D890();
  v1[6] = sub_1C0775870();
  v1[7] = sub_1C0775870();
  sub_1C07ACF80(&qword_1ED7618D0);
  v1[8] = sub_1C0779644();
  v2 = sub_1C0776744();
  v1[9] = v2;
  v1[10] = *(_QWORD *)(v2 - 8);
  v1[11] = sub_1C0779644();
  v1[12] = sub_1C077674C();
  v1[13] = sub_1C0775870();
  v1[14] = sub_1C0775870();
  v1[15] = sub_1C0775870();
  v1[16] = sub_1C0775870();
  v1[17] = sub_1C0775870();
  v1[18] = sub_1C0775870();
  v1[19] = sub_1C0775870();
  v1[20] = sub_1C0775870();
  v1[21] = sub_1C0775870();
  v1[22] = sub_1C0775870();
  v1[23] = sub_1C0775870();
  v1[24] = sub_1C0775870();
  v1[25] = sub_1C0775870();
  v1[26] = sub_1C0775870();
  v1[27] = sub_1C0775870();
  v1[28] = sub_1C0775870();
  v1[29] = sub_1C0775870();
  v1[30] = sub_1C0775870();
  return swift_task_switch();
}

void sub_1C0CE7E08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v4[24];

  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(_QWORD *)(v0 + 40);
  type metadata accessor for PhaseStores();
  v4[0] = *(_BYTE *)(v2 + *(int *)(v1 + 28));
  v3 = v4[0];
  sub_1C0ABA674(v4);
  __asm { BR              X9 }
}

uint64_t sub_1C0CE7E9C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  char v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v108;
  char v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v122;
  char v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v129;
  char v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  void (*v139)(uint64_t, uint64_t, uint64_t);
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  _QWORD *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  int v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  void (*v189)(uint64_t, uint64_t, uint64_t);
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  _QWORD *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  int v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;

  v8 = sub_1C07785B0();
  swift_retain();
  sub_1C077960C();
  if ((v8 & 1) != 0)
  {
    swift_release();
    v4 = *(_QWORD *)(v2 + 24);
    swift_retain();
  }
  v296 = v3;
  v9 = v0[4] + *(int *)(v0[5] + 20);
  sub_1C07E05C8(v9, v0[30], (uint64_t (*)(_QWORD))type metadata accessor for Source);
  if (qword_1ED761438 != -1)
    swift_once();
  v293 = v4;
  v10 = (_QWORD *)v0[29];
  v12 = (_QWORD *)v0[30];
  v11 = v0 + 29;
  v13 = sub_1C079E000(v0[12], (uint64_t)byte_1ED761420);
  sub_1C0796740(v13, v14, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  v15 = *v10 == *v12 && v10[1] == v12[1];
  if (v15)
    goto LABEL_130;
  v16 = sub_1C07785B0();
  v17 = v16;
  sub_1C0791DDC(v16, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  if ((v17 & 1) != 0)
    goto LABEL_131;
  if (qword_1ED762380 != -1)
    swift_once();
  v11 = v0 + 28;
  v18 = sub_1C079E000(v0[12], (uint64_t)&unk_1ED762360);
  sub_1C0796740(v18, v19, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0791500();
  if (v15 && v20 == v21)
    goto LABEL_130;
  v23 = sub_1C07785B0();
  v24 = v23;
  sub_1C0791DDC(v23, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  if ((v24 & 1) != 0)
    goto LABEL_131;
  if (qword_1ED761448 != -1)
    swift_once();
  v11 = v0 + 27;
  v25 = sub_1C079E000(v0[12], (uint64_t)&unk_1ED762E88);
  sub_1C0796740(v25, v26, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0791500();
  if (v15 && v27 == v28)
    goto LABEL_130;
  v30 = sub_1C07785B0();
  v31 = v30;
  sub_1C0791DDC(v30, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  if ((v31 & 1) != 0)
    goto LABEL_131;
  if (qword_1ED762E80 != -1)
    swift_once();
  v11 = v0 + 26;
  v32 = sub_1C079E000(v0[12], (uint64_t)&unk_1ED762268);
  sub_1C0796740(v32, v33, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0791500();
  if (v15 && v34 == v35)
    goto LABEL_130;
  v37 = sub_1C07785B0();
  v38 = v37;
  sub_1C0791DDC(v37, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  if ((v38 & 1) != 0)
    goto LABEL_131;
  if (qword_1ED761418 != -1)
    swift_once();
  v11 = v0 + 25;
  v39 = sub_1C079E000(v0[12], (uint64_t)&unk_1ED761400);
  sub_1C0796740(v39, v40, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0791500();
  if (v15 && v41 == v42)
    goto LABEL_130;
  v44 = sub_1C07785B0();
  v45 = v44;
  sub_1C0791DDC(v44, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  if ((v45 & 1) != 0)
    goto LABEL_131;
  if (qword_1ED762330 != -1)
    swift_once();
  v11 = v0 + 24;
  v46 = sub_1C079E000(v0[12], (uint64_t)&unk_1ED762318);
  sub_1C0796740(v46, v47, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0791500();
  if (v15 && v48 == v49)
    goto LABEL_130;
  v51 = sub_1C07785B0();
  v52 = v51;
  sub_1C0791DDC(v51, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  if ((v52 & 1) != 0)
    goto LABEL_131;
  if (qword_1ED7623C8 != -1)
    swift_once();
  v11 = v0 + 23;
  v53 = sub_1C079E000(v0[12], (uint64_t)&unk_1ED7623B0);
  sub_1C0796740(v53, v54, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0791500();
  if (v15 && v55 == v56)
  {
LABEL_130:
    sub_1C07B1F90(*v11, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    goto LABEL_131;
  }
  v58 = sub_1C07785B0();
  v59 = v58;
  sub_1C0791DDC(v58, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  if ((v59 & 1) != 0)
    goto LABEL_131;
  v294 = v5;
  v60 = v0;
  if (qword_1ED762310 != -1)
    swift_once();
  v11 = v0 + 22;
  v0 = (uint64_t *)v0[30];
  v61 = sub_1C079E000(v60[12], (uint64_t)&unk_1ED7622F8);
  sub_1C0796740(v61, v62, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C07AE0D8();
  if (v15 && v63 == v64)
    goto LABEL_129;
  v66 = sub_1C07785B0();
  v67 = v66;
  sub_1C0791DDC(v66, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0795364();
  if ((v67 & 1) != 0)
    goto LABEL_131;
  if (qword_1ED7623A8 != -1)
    swift_once();
  v11 = v60 + 21;
  v0 = (uint64_t *)v60[30];
  v68 = sub_1C079E000(v60[12], (uint64_t)&unk_1ED762388);
  sub_1C0796740(v68, v69, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C07AE0D8();
  if (v15 && v70 == v71)
    goto LABEL_129;
  v73 = sub_1C07785B0();
  v74 = v73;
  sub_1C0791DDC(v73, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0795364();
  if ((v74 & 1) != 0)
    goto LABEL_131;
  if (qword_1ED7622C8 != -1)
    swift_once();
  v11 = v60 + 20;
  v0 = (uint64_t *)v60[30];
  v75 = sub_1C079E000(v60[12], (uint64_t)&unk_1ED7622B0);
  sub_1C0796740(v75, v76, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C07AE0D8();
  if (v15 && v77 == v78)
    goto LABEL_129;
  v80 = sub_1C07785B0();
  v81 = v80;
  sub_1C0791DDC(v80, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0795364();
  if ((v81 & 1) != 0)
    goto LABEL_131;
  if (qword_1ED762358 != -1)
    swift_once();
  v11 = v60 + 19;
  v0 = (uint64_t *)v60[30];
  v82 = sub_1C079E000(v60[12], (uint64_t)&unk_1ED762338);
  sub_1C0796740(v82, v83, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C07AE0D8();
  if (v15 && v84 == v85)
    goto LABEL_129;
  v87 = sub_1C07785B0();
  v88 = v87;
  sub_1C0791DDC(v87, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0795364();
  if ((v88 & 1) != 0)
    goto LABEL_131;
  if (qword_1ED7622F0 != -1)
    swift_once();
  v11 = v60 + 18;
  v0 = (uint64_t *)v60[30];
  v89 = sub_1C079E000(v60[12], (uint64_t)byte_1ED7622D0);
  sub_1C0796740(v89, v90, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C07AE0D8();
  if (v15 && v91 == v92)
    goto LABEL_129;
  v94 = sub_1C07785B0();
  v95 = v94;
  sub_1C0791DDC(v94, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0795364();
  if ((v95 & 1) != 0)
    goto LABEL_131;
  if (qword_1ED762260 != -1)
    swift_once();
  v11 = v60 + 17;
  v0 = (uint64_t *)v60[30];
  v96 = sub_1C079E000(v60[12], (uint64_t)&unk_1ED762240);
  sub_1C0796740(v96, v97, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C07AE0D8();
  if (v15 && v98 == v99)
    goto LABEL_129;
  v101 = sub_1C07785B0();
  v102 = v101;
  sub_1C0791DDC(v101, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0795364();
  if ((v102 & 1) != 0)
    goto LABEL_131;
  if (qword_1ED7622A8 != -1)
    swift_once();
  v11 = v60 + 16;
  v0 = (uint64_t *)v60[30];
  v103 = sub_1C079E000(v60[12], (uint64_t)&unk_1ED762288);
  sub_1C0796740(v103, v104, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C07AE0D8();
  if (v15 && v105 == v106)
    goto LABEL_129;
  v108 = sub_1C07785B0();
  v109 = v108;
  sub_1C0791DDC(v108, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0795364();
  if ((v109 & 1) != 0)
    goto LABEL_131;
  if (qword_1ED762280 != -1)
    swift_once();
  v11 = v60 + 15;
  v0 = (uint64_t *)v60[30];
  v110 = sub_1C079E000(v60[12], (uint64_t)&unk_1ED761548);
  sub_1C0796740(v110, v111, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C07AE0D8();
  if (v15 && v112 == v113)
    goto LABEL_129;
  v115 = sub_1C07785B0();
  v116 = v115;
  sub_1C0791DDC(v115, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0795364();
  if ((v116 & 1) != 0)
    goto LABEL_131;
  if (qword_1ED761598 != -1)
    swift_once();
  v11 = v60 + 14;
  v0 = (uint64_t *)v60[30];
  v117 = sub_1C079E000(v60[12], (uint64_t)&unk_1ED761838);
  sub_1C0796740(v117, v118, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C07AE0D8();
  if (v15 && v119 == v120)
    goto LABEL_129;
  v122 = sub_1C07785B0();
  v123 = v122;
  sub_1C0791DDC(v122, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0795364();
  if ((v123 & 1) != 0)
    goto LABEL_131;
  if (qword_1ED761870 != -1)
    swift_once();
  v11 = v60 + 13;
  v0 = (uint64_t *)v60[30];
  v124 = sub_1C079E000(v60[12], (uint64_t)&unk_1ED761850);
  sub_1C0796740(v124, v125, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C07AE0D8();
  if (v15 && v126 == v127)
  {
LABEL_129:
    sub_1C0795364();
    goto LABEL_130;
  }
  v129 = sub_1C07785B0();
  v130 = v129;
  sub_1C0791DDC(v129, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0795364();
  if ((v130 & 1) == 0)
  {
    v274 = sub_1C0CE8DD0(v9);
    if (v274)
    {
      sub_1C07B1F90(v60[30], (uint64_t (*)(_QWORD))type metadata accessor for Source);
      v132 = *(_QWORD *)(v274 + 16);
      *(_QWORD *)(v7 - 104) = v132;
      if (v132)
      {
        sub_1C0779D28();
        v134 = v274 + v133;
        *(_QWORD *)(v7 - 120) = *(_QWORD *)(v135 + 72);
        v259 = v135;
        *(_QWORD *)(v7 - 128) = *(_QWORD *)(v135 + 16);
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        *(_QWORD *)(v7 - 112) = v134;
        v287 = *(_QWORD *)(v7 - 104);
        do
        {
          v136 = v60[11];
          v137 = v60[8];
          v138 = v60[9];
          v268 = v60[4];
          v139 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 - 128);
          v139(v136, v134, v138);
          v60[2] = MEMORY[0x1E0DEE9E0];
          *(_BYTE *)(v7 - 96) = *(_BYTE *)(v294 + v295);
          v139(v137, v136, v138);
          sub_1C07B2D8C(v137, 0, 1, v138);
          v140 = sub_1C07893D8();
          sub_1C0784B6C(v137, &qword_1ED7618D0);
          v141 = v268;
          sub_1C0CE4064(v140, v142, v143, v144, v145, v146, v147, v148, v233, v236, v239, v242, v246, v250, v254, v259, v263, v268, v274,
            v138,
            v284,
            v287);
          v150 = v149;
          v152 = v151;
          sub_1C0775834();
          v264 = *(_QWORD *)(v294 + v296);
          v153 = (_QWORD *)sub_1C07BAE74(*(_BYTE *)(v294 + v295));
          v153[2] = v152;
          v153[3] = v150;
          v153[4] = v141;
          v153[5] = v136;
          v153[6] = v1;
          v153[7] = 100;
          v161 = sub_1C079DDD4((uint64_t)v153, v154, v155, v156, v157, v158, v159, v160, v234, v237, v240, v243, v247, v251, v255, v260, v264, v269, v275,
                   v279,
                   v285,
                   v288,
                   v293);
          sub_1C0AB5754(v161, v162, v163, v164, (uint64_t)sub_1C0CE9FF0, (uint64_t)v153);
          swift_bridgeObjectRelease();
          sub_1C07767AC();
          sub_1C077C104();
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v259 + 8))(v136, v280);
          v134 += *(_QWORD *)(v7 - 120);
          v287 = v289 - 1;
        }
        while (v287);
        v165 = sub_1C077B5B4();
        v0 = v60;
        do
        {
          v173 = v60[8];
          v174 = v60[9];
          sub_1C077B388(v165, v166, v167, v168, v169, v170, v171, v172, v233, v236, v239, v242, v246, v250, v254, v259, v263, v270, v274,
            v280,
            v284,
            v287,
            v293,
            v294,
            v295);
          v175 = *(_QWORD *)(v7 - 112);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 - 128))(v173, v175, v174);
          sub_1C07AB0C0();
          sub_1C07A96AC();
          v176 = *(_QWORD *)(v7 - 104) - 1;
          *(_QWORD *)(v7 - 112) = v175 + *(_QWORD *)(v7 - 120);
          *(_QWORD *)(v7 - 104) = v176;
        }
        while (v176);
      }
      else
      {
        v0 = v60;
      }
LABEL_137:
      sub_1C077B5B4();
      v245 = v0[22];
      v249 = v0[21];
      v253 = v0[20];
      v257 = v0[19];
      v262 = v0[18];
      v267 = v0[17];
      v273 = v0[16];
      v278 = v0[15];
      v283 = v0[14];
      v292 = v0[13];
      v220 = v0[8];
      *(_QWORD *)(v7 - 128) = v0[11];
      *(_QWORD *)(v7 - 120) = v220;
      v221 = v0[6];
      *(_QWORD *)(v7 - 112) = v0[7];
      *(_QWORD *)(v7 - 104) = v221;
      sub_1C106AC6C();
      sub_1C088E054();
      sub_1C077B388(v222, v223, v224, v225, v226, v227, v228, v229, v233, v236, v239, v245, v249, v253, v257, v262, v267, v273, v278,
        v283,
        v284,
        v292,
        v293,
        v294,
        v295);
      sub_1C0AADF0C((_BYTE *)(v7 - 96));
      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      sub_1C077C104();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return ((uint64_t (*)(void))v0[1])();
    }
    sub_1C0796740(v60[4], v131, (uint64_t (*)(_QWORD))type metadata accessor for Resolver);
    sub_1C07A87C4();
    v232 = *(_QWORD *)(v7 - 88);
    *(_QWORD *)(v7 - 96) = *(_QWORD *)(v7 - 96);
    *(_QWORD *)(v7 - 88) = v232;
    sub_1C079F7A8();
    sub_1C07851E4();
    sub_1C0CEC144();
    sub_1C07767AC();
    sub_1C0796F80();
    return sub_1C07BBFAC();
  }
LABEL_131:
  sub_1C07B1F90(v0[30], (uint64_t (*)(_QWORD))type metadata accessor for Source);
  v177 = sub_1C0CE9170(v9);
  if (v177)
  {
    v179 = v177;
    v180 = *(_QWORD *)(v177 + 16);
    v294 = v5;
    if (v180)
    {
      sub_1C0779D28();
      v182 = v179 + v181;
      v184 = *(_QWORD *)(v183 + 72);
      v290 = v183;
      *(_QWORD *)(v7 - 112) = *(_QWORD *)(v183 + 16);
      v276 = v179;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v265 = v182;
      v271 = v180;
      v185 = v180;
      v281 = v6;
      *(_QWORD *)(v7 - 104) = v184;
      v284 = (uint64_t)v0;
      do
      {
        v186 = v0[11];
        v187 = v0[8];
        v188 = v0[9];
        *(_QWORD *)(v7 - 128) = v0[4];
        *(_QWORD *)(v7 - 120) = v188;
        v189 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 - 112);
        v189(v186, v182, v188);
        v0[3] = MEMORY[0x1E0DEE9E0];
        *(_BYTE *)(v7 - 96) = *(_BYTE *)(v294 + v295);
        v189(v187, v186, v188);
        sub_1C07B2D8C(v187, 0, 1, v188);
        v190 = sub_1C07893D8();
        sub_1C0784B6C(v187, &qword_1ED7618D0);
        v191 = *(_QWORD *)(v7 - 128);
        sub_1C0CE4064(v190, v192, v193, v194, v195, v196, v197, v198, v233, v236, v239, v242, v246, v250, v254, v258, v265, v271, v276,
          v281,
          v284,
          v290);
        v200 = v199;
        v202 = v201;
        sub_1C0775834();
        v203 = (_QWORD *)sub_1C07BAE74(*(_BYTE *)(v294 + v295));
        v203[2] = v202;
        v203[3] = v200;
        v203[4] = v191;
        v203[5] = v186;
        v204 = *(_QWORD *)(v7 - 104);
        v203[6] = v282;
        v203[7] = 100;
        v212 = sub_1C079DDD4((uint64_t)v203, v205, v206, v207, v208, v209, v210, v211, v235, v238, v241, v244, v248, v252, v256, v261, v266, v272, v277,
                 v282,
                 v286,
                 v291,
                 v293);
        sub_1C0AB5754(v212, v213, v214, v215, (uint64_t)sub_1C0CE9FF0, (uint64_t)v203);
        v0 = (uint64_t *)v284;
        swift_bridgeObjectRelease();
        sub_1C07767AC();
        sub_1C077C104();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, _QWORD))(v290 + 8))(v186, *(_QWORD *)(v7 - 120));
        v182 += v204;
        --v185;
      }
      while (v185);
      swift_bridgeObjectRelease();
      v217 = v265;
      v216 = v271;
      do
      {
        v218 = *(_QWORD *)(v284 + 64);
        v219 = *(_QWORD *)(v284 + 72);
        *(_BYTE *)(v7 - 96) = *(_BYTE *)(v294 + v295);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 - 112))(v218, v217, v219);
        sub_1C07AB0C0();
        sub_1C07A96AC();
        v217 += *(_QWORD *)(v7 - 104);
        --v216;
      }
      while (v216);
    }
    goto LABEL_137;
  }
  sub_1C0796740(v0[4], v178, (uint64_t (*)(_QWORD))type metadata accessor for Resolver);
  sub_1C07A87C4();
  v231 = *(_QWORD *)(v7 - 88);
  *(_QWORD *)(v7 - 96) = *(_QWORD *)(v7 - 96);
  *(_QWORD *)(v7 - 88) = v231;
  sub_1C079F7A8();
  sub_1C07851E4();
  sub_1C0CEC144();
  sub_1C07767AC();
  sub_1C0796F80();
  return sub_1C07BBFAC();
}

uint64_t sub_1C0CE8DD0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = type metadata accessor for Source();
  MEMORY[0x1E0C80A78](v2);
  v4 = (uint64_t *)((char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v24 - v6;
  if (qword_1ED761518 != -1)
    swift_once();
  swift_beginAccess();
  if (qword_1ED7627B8
    && (v8 = (*((uint64_t (**)(void))off_1ED7627C0 + 1))(),
        (v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 40))(a1, v8, v9)) != 0))
  {
    v11 = v10;
    if (qword_1ED762B18 != -1)
      swift_once();
    v12 = sub_1C106F544();
    sub_1C079E000(v12, (uint64_t)qword_1ED762AF8);
    sub_1C07E05C8(a1, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v13 = sub_1C106F538();
    v14 = sub_1C10703A8();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = swift_slowAlloc();
      v24 = swift_slowAlloc();
      v26 = v24;
      *(_DWORD *)v15 = 136315394;
      sub_1C07E05C8((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for Source);
      v17 = *v4;
      v16 = v4[1];
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C07B1F90((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for Source);
      v25 = sub_1C0788DAC(v17, v16, &v26);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      sub_1C07B1F90((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Source);
      *(_WORD *)(v15 + 12) = 2048;
      v25 = *(_QWORD *)(v11 + 16);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C0771000, v13, v14, "InternalPlugin: Resolver: loadEntityClasses: %s has %ld classes", (uint8_t *)v15, 0x16u);
      v18 = v24;
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v18, -1, -1);
      MEMORY[0x1C3BA8270](v15, -1, -1);

    }
    else
    {
      sub_1C07B1F90((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Source);

      swift_bridgeObjectRelease();
    }
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v19 = sub_1C106F544();
    sub_1C079E000(v19, (uint64_t)qword_1ED762AF8);
    v20 = sub_1C106F538();
    v21 = sub_1C10703A8();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_1C0771000, v20, v21, "InternalPlugin: Resolver: loadEntityClasses: failed to load plugin", v22, 2u);
      MEMORY[0x1C3BA8270](v22, -1, -1);
    }

    return 0;
  }
  return v11;
}

uint64_t sub_1C0CE9170(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t (*v43)(_QWORD);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char v166;
  uint64_t v167;
  __n128 *v168;
  __n128 *v169;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  _QWORD v174[2];
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  __n128 *v188;

  v2 = sub_1C0776744();
  v187 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1C0778564();
  v3 = sub_1C077674C();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v4);
  sub_1C077AED0();
  v179 = v5;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0779728();
  v178 = v7;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v8);
  sub_1C0779728();
  v177 = v9;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v10);
  sub_1C0779728();
  v176 = v11;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v12);
  sub_1C0779728();
  v175 = v13;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v14);
  sub_1C0779728();
  v180 = v15;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v16);
  sub_1C0779728();
  v181 = v17;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v18);
  sub_1C0779728();
  v182 = v19;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v20);
  sub_1C0779728();
  v183 = v21;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v22);
  sub_1C0779728();
  v184 = v23;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v24);
  sub_1C0779728();
  v185 = v25;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v26);
  sub_1C0779728();
  v186 = v27;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)v174 - v29;
  MEMORY[0x1E0C80A78](v31);
  MEMORY[0x1E0C80A78](v32);
  MEMORY[0x1E0C80A78](v33);
  v35 = (char *)v174 - v34;
  MEMORY[0x1E0C80A78](v36);
  v38 = (char *)v174 - v37;
  MEMORY[0x1E0C80A78](v39);
  v41 = (char *)v174 - v40;
  sub_1C0796740(a1, v42, v43);
  if (qword_1ED761448 != -1)
    swift_once();
  v44 = sub_1C079E000(v3, (uint64_t)&unk_1ED762E88);
  sub_1C07E05C8(v44, (uint64_t)v38, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0797714();
  v48 = v48 && v46 == v47;
  if (v48)
    goto LABEL_121;
  v174[1] = v3;
  v49 = sub_1C07785B0();
  v50 = v49;
  sub_1C077EB5C(v49, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  if ((v50 & 1) != 0)
  {
LABEL_122:
    sub_1C0791DDC(v51, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    sub_1C07ACF80((uint64_t *)&unk_1ED75D2D0);
    v168 = (__n128 *)swift_allocObject();
    sub_1C0788A40(v168, (__n128)xmmword_1C108CFE0);
    sub_1C106D1A4();
    _s24IntelligencePlatformCore12EventMatcherV11entityClass0aB006EntityG0Vvg_0();
    sub_1C106CDB4();
    sub_1C106CE50();
    sub_1C106D180();
    sub_1C106D1B0();
    sub_1C106D1EC();
    _s24IntelligencePlatformCore12EventMatcherV11entityClass0aB006EntityG0Vvg_0();
    sub_1C106CEF8();
    sub_1C078B0E8();
    v188 = v168;
    sub_1C0BDA7C0();
    v169 = v188;
    sub_1C106CE44();
    sub_1C106CEF8();
    sub_1C078B0E8();
    v188 = v169;
    sub_1C0BDA7C0();
    return (uint64_t)v188;
  }
  if (qword_1ED762E80 != -1)
    v51 = swift_once();
  v52 = sub_1C078B364(v51, (uint64_t)&unk_1ED762268);
  sub_1C07E05C8(v52, (uint64_t)v35, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0797714();
  if (v48 && v53 == v54)
  {
LABEL_121:
    sub_1C077EB5C(v45, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    goto LABEL_122;
  }
  v56 = sub_1C07785B0();
  sub_1C07B1F90((uint64_t)v35, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  if ((v56 & 1) != 0)
    goto LABEL_122;
  if (qword_1ED761438 != -1)
    v51 = swift_once();
  v57 = sub_1C07B9884(v51, (uint64_t)byte_1ED761420);
  sub_1C07805C0(v57, v58, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0797714();
  if (v48 && v60 == v61)
  {
    sub_1C07AD35C(v59, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    goto LABEL_125;
  }
  v63 = sub_1C07785B0();
  v64 = v63;
  sub_1C07AD35C(v63, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  if ((v64 & 1) != 0)
  {
LABEL_125:
    sub_1C0791DDC(v65, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    sub_1C07ACF80((uint64_t *)&unk_1ED75D2D0);
    v167 = swift_allocObject();
    sub_1C0788A40((__n128 *)v167, (__n128)xmmword_1C10795A0);
    _s24IntelligencePlatformCore19OrganizationMatcherV11entityClass0aB006EntityG0Vvg_0();
    sub_1C106D18C();
LABEL_126:
    sub_1C106D1A4();
    return v167;
  }
  if (qword_1ED762380 != -1)
    v65 = swift_once();
  v66 = sub_1C07B9884(v65, (uint64_t)&unk_1ED762360);
  sub_1C07826E0(v66, v67, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  v68 = sub_1C078825C();
  if (v48 && v69 == v70)
  {
    sub_1C07825F4(v68, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    goto LABEL_128;
  }
  v72 = sub_1C07785B0();
  v73 = v72;
  sub_1C07825F4(v72, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  if ((v73 & 1) != 0)
  {
LABEL_128:
    sub_1C0791DDC(v74, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    sub_1C07ACF80((uint64_t *)&unk_1ED75D2D0);
    v167 = sub_1C0799064();
    sub_1C07B4388((__n128 *)v167, (__n128)xmmword_1C1078FC0);
    sub_1C0CEC13C();
    return v167;
  }
  if (qword_1ED761418 != -1)
    v74 = swift_once();
  v75 = sub_1C07B9884(v74, (uint64_t)&unk_1ED761400);
  sub_1C07E05C8(v75, (uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0797714();
  if (v48 && v76 == v77)
  {
    sub_1C07B1F90((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    goto LABEL_130;
  }
  v79 = sub_1C07785B0();
  sub_1C07B1F90((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  if ((v79 & 1) != 0)
  {
LABEL_130:
    sub_1C0791DDC(v80, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    sub_1C07ACF80((uint64_t *)&unk_1ED75D2D0);
    v167 = sub_1C0799064();
    sub_1C07B74BC((__n128 *)v167, (__n128)xmmword_1C1078FC0);
    _s24IntelligencePlatformCore12EventMatcherV11entityClass0aB006EntityG0Vvg_0();
    sub_1C106D108();
    return v167;
  }
  if (qword_1ED762330 != -1)
    v80 = swift_once();
  v81 = sub_1C07B9884(v80, (uint64_t)&unk_1ED762318);
  v82 = v186;
  sub_1C07805C0(v81, v83, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0797714();
  if (v48 && v84 == v85)
  {
    v171 = v82;
LABEL_132:
    sub_1C07B1F90(v171, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    goto LABEL_133;
  }
  v87 = sub_1C07785B0();
  v88 = v87;
  sub_1C07AD35C(v87, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  if ((v88 & 1) != 0)
  {
LABEL_133:
    sub_1C0791DDC(v89, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    sub_1C07ACF80((uint64_t *)&unk_1ED75D2D0);
    v167 = sub_1C07A4B2C();
    sub_1C07B74BC((__n128 *)v167, (__n128)xmmword_1C1078A20);
    sub_1C106CDE4();
    sub_1C106D1A4();
LABEL_134:
    _s24IntelligencePlatformCore15LocationMatcherV11entityClass0aB006EntityG0Vvg_0();
    return v167;
  }
  if (qword_1ED7623C8 != -1)
    v89 = swift_once();
  v90 = sub_1C07B9884(v89, (uint64_t)&unk_1ED7623B0);
  sub_1C07805C0(v90, v91, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0797714();
  if (v48 && v93 == v94)
  {
    sub_1C07AD35C(v92, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    goto LABEL_136;
  }
  v96 = sub_1C07785B0();
  v97 = v96;
  sub_1C07AD35C(v96, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  if ((v97 & 1) != 0)
  {
LABEL_136:
    sub_1C0791DDC(v98, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    sub_1C07ACF80((uint64_t *)&unk_1ED75D2D0);
    v167 = sub_1C07A4B2C();
    sub_1C07B4388((__n128 *)v167, (__n128)xmmword_1C1078A20);
    sub_1C0CEC13C();
    goto LABEL_134;
  }
  if (qword_1ED762310 != -1)
    v98 = swift_once();
  v99 = sub_1C078B364(v98, (uint64_t)&unk_1ED7622F8);
  sub_1C07826E0(v99, v100, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C078825C();
  if (v48 && v101 == v102)
  {
    sub_1C07B1F90(v184, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    goto LABEL_138;
  }
  v104 = sub_1C07785B0();
  sub_1C07B1F90(v184, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  if ((v104 & 1) != 0)
  {
LABEL_138:
    sub_1C0791DDC(v105, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    sub_1C07ACF80((uint64_t *)&unk_1ED75D2D0);
    v167 = sub_1C07A4B2C();
    sub_1C07B4388((__n128 *)v167, (__n128)xmmword_1C1078A20);
    sub_1C0CEC13C();
LABEL_139:
    sub_1C106CDFC();
    return v167;
  }
  if (qword_1ED7622C8 != -1)
    v105 = swift_once();
  v106 = sub_1C078B364(v105, (uint64_t)&unk_1ED7622B0);
  sub_1C07826E0(v106, v107, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C078825C();
  if (v48 && v108 == v109)
    goto LABEL_142;
  v111 = sub_1C07785B0();
  sub_1C07B1F90(v183, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  if ((v111 & 1) != 0)
    goto LABEL_143;
  if (qword_1ED7623A8 != -1)
    v112 = swift_once();
  v113 = sub_1C078B364(v112, (uint64_t)&unk_1ED762388);
  sub_1C07826E0(v113, v114, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C078825C();
  if (v48 && v115 == v116)
  {
    v172 = v182;
LABEL_141:
    v183 = v172;
LABEL_142:
    sub_1C07B1F90(v183, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    goto LABEL_143;
  }
  v118 = sub_1C07785B0();
  sub_1C07B1F90(v182, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  if ((v118 & 1) != 0)
  {
LABEL_143:
    v173 = (uint64_t)v41;
LABEL_144:
    sub_1C07B1F90(v173, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    goto LABEL_145;
  }
  if (qword_1ED7622A8 != -1)
    v119 = swift_once();
  v120 = sub_1C078B364(v119, (uint64_t)&unk_1ED762288);
  sub_1C07826E0(v120, v121, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C078825C();
  if (v48 && v122 == v123)
  {
    v172 = v181;
    goto LABEL_141;
  }
  v125 = sub_1C07785B0();
  sub_1C07B1F90(v181, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  if ((v125 & 1) != 0)
    goto LABEL_143;
  if (qword_1ED762358 != -1)
    v126 = swift_once();
  v127 = sub_1C078B364(v126, (uint64_t)&unk_1ED762338);
  sub_1C07826E0(v127, v128, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C078825C();
  if (v48 && v129 == v130)
  {
    sub_1C07B1F90(v180, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    goto LABEL_148;
  }
  v132 = sub_1C07785B0();
  sub_1C07B1F90(v180, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  if ((v132 & 1) != 0)
  {
LABEL_148:
    sub_1C0791DDC(v133, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    sub_1C07ACF80((uint64_t *)&unk_1ED75D2D0);
    v167 = sub_1C0799064();
    sub_1C07B4388((__n128 *)v167, (__n128)xmmword_1C1078FC0);
    goto LABEL_139;
  }
  if (qword_1ED7622F0 != -1)
    v133 = swift_once();
  v134 = sub_1C078B364(v133, (uint64_t)byte_1ED7622D0);
  sub_1C07826E0(v134, v135, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C078825C();
  if (v48 && v136 == v137)
  {
    v171 = v175;
    goto LABEL_132;
  }
  v139 = sub_1C07785B0();
  sub_1C07B1F90(v175, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  if ((v139 & 1) != 0)
    goto LABEL_133;
  if (qword_1ED762260 != -1)
    v89 = swift_once();
  v140 = sub_1C078B364(v89, (uint64_t)&unk_1ED762240);
  sub_1C07826E0(v140, v141, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C078825C();
  if (v48 && v142 == v143)
  {
    sub_1C07B1F90(v176, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    goto LABEL_151;
  }
  v145 = sub_1C07785B0();
  sub_1C07B1F90(v176, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  if ((v145 & 1) != 0)
  {
LABEL_151:
    sub_1C0791DDC(v146, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    sub_1C07ACF80((uint64_t *)&unk_1ED75D2D0);
    v167 = sub_1C0799064();
    sub_1C07B74BC((__n128 *)v167, (__n128)xmmword_1C1078FC0);
    sub_1C106D1EC();
    _s24IntelligencePlatformCore19OrganizationMatcherV11entityClass0aB006EntityG0Vvg_0();
    return v167;
  }
  if (qword_1ED762280 != -1)
    v146 = swift_once();
  v147 = sub_1C078B364(v146, (uint64_t)&unk_1ED761548);
  sub_1C07826E0(v147, v148, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C078825C();
  if (v48 && v149 == v150)
  {
    sub_1C07B1F90(v177, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    goto LABEL_153;
  }
  v152 = sub_1C07785B0();
  sub_1C07B1F90(v177, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  if ((v152 & 1) != 0)
  {
LABEL_153:
    sub_1C0791DDC(v153, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    sub_1C07ACF80((uint64_t *)&unk_1ED75D2D0);
    v167 = sub_1C0799064();
    sub_1C07B74BC((__n128 *)v167, (__n128)xmmword_1C1078FC0);
    sub_1C106CDC0();
    goto LABEL_126;
  }
  if (qword_1ED761598 != -1)
    v153 = swift_once();
  v154 = sub_1C078B364(v153, (uint64_t)&unk_1ED761838);
  sub_1C07826E0(v154, v155, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C078825C();
  if (v48 && v156 == v157)
  {
    sub_1C07B1F90(v178, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    goto LABEL_155;
  }
  v159 = sub_1C07785B0();
  sub_1C07B1F90(v178, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  if ((v159 & 1) != 0)
  {
LABEL_155:
    sub_1C0791DDC(v160, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    sub_1C07ACF80((uint64_t *)&unk_1ED75D2D0);
    v167 = sub_1C0798088();
    *(_OWORD *)(v167 + 16) = xmmword_1C1079220;
    sub_1C106CFE8();
    return v167;
  }
  if (qword_1ED761870 != -1)
    v160 = swift_once();
  v161 = sub_1C078B364(v160, (uint64_t)&unk_1ED761850);
  sub_1C07826E0(v161, v162, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C078825C();
  if (v48 && v163 == v164)
  {
    sub_1C077F06C(v179);
    v173 = (uint64_t)v41;
    goto LABEL_144;
  }
  v166 = sub_1C07785B0();
  sub_1C07B1F90(v179, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C07B1F90((uint64_t)v41, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  if ((v166 & 1) != 0)
  {
LABEL_145:
    sub_1C07ACF80((uint64_t *)&unk_1ED75D2D0);
    v167 = sub_1C0798088();
    *(_OWORD *)(v167 + 16) = xmmword_1C1079220;
    goto LABEL_126;
  }
  return 0;
}

uint64_t sub_1C0CE9FA8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C0806670;
  return Resolver.execute()();
}

uint64_t sub_1C0CE9FF4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1C0CE5990(a1, a2, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8]);
}

void sub_1C0CEA024(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1ED75CE88, (uint64_t (*)(uint64_t))type metadata accessor for Resolver, (uint64_t)&protocol conformance descriptor for Resolver);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0CEA060(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1ED75CE78, (uint64_t (*)(uint64_t))type metadata accessor for Resolver, (uint64_t)&protocol conformance descriptor for Resolver);
  *(_QWORD *)(a1 + 8) = v2;
}

_QWORD *initializeBufferWithCopyOfBuffer for Resolver(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  char *v26;
  uint64_t v27;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1C106AB28();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = type metadata accessor for Configuration();
    *(_OWORD *)((char *)a1 + *(int *)(v8 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v8 + 20));
    v9 = (int *)type metadata accessor for PhaseStores();
    *(_QWORD *)((char *)a1 + v9[5]) = *(_QWORD *)((char *)a2 + v9[5]);
    *(_QWORD *)((char *)a1 + v9[6]) = *(_QWORD *)((char *)a2 + v9[6]);
    *(_QWORD *)((char *)a1 + v9[7]) = *(_QWORD *)((char *)a2 + v9[7]);
    *(_QWORD *)((char *)a1 + v9[8]) = *(_QWORD *)((char *)a2 + v9[8]);
    *(_QWORD *)((char *)a1 + v9[9]) = *(_QWORD *)((char *)a2 + v9[9]);
    *(_QWORD *)((char *)a1 + v9[10]) = *(_QWORD *)((char *)a2 + v9[10]);
    *(_QWORD *)((char *)a1 + v9[11]) = *(_QWORD *)((char *)a2 + v9[11]);
    v10 = a3[5];
    v11 = (_QWORD *)((char *)a1 + v10);
    v12 = (char *)a2 + v10;
    v13 = *(_QWORD *)((char *)a2 + v10 + 8);
    *v11 = *(_QWORD *)((char *)a2 + v10);
    v11[1] = v13;
    v11[2] = *(_QWORD *)((char *)a2 + v10 + 16);
    v27 = type metadata accessor for Source();
    v14 = *(int *)(v27 + 24);
    v25 = &v12[v14];
    v26 = (char *)v11 + v14;
    v15 = sub_1C106D1F8();
    v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v24(v26, v25, v15);
    *((_BYTE *)v11 + *(int *)(v27 + 28)) = v12[*(int *)(v27 + 28)];
    v16 = a3[7];
    *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    *((_BYTE *)a1 + v16) = *((_BYTE *)a2 + v16);
    v17 = a3[8];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = sub_1C106E638();
    if (sub_1C07B2D80((uint64_t)v19, 1, v20))
    {
      v21 = sub_1C07ACF80(&qword_1ED759C40);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
      sub_1C07B2D8C((uint64_t)v18, 0, 1, v20);
    }
  }
  return a1;
}

uint64_t destroy for Resolver(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v4 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  type metadata accessor for PhaseStores();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v5 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  v6 = v5 + *(int *)(type metadata accessor for Source() + 24);
  v7 = sub_1C106D1F8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = a1 + *(int *)(a2 + 32);
  v9 = sub_1C106E638();
  result = sub_1C07B2D80(v8, 1, v9);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  return result;
}

uint64_t initializeWithCopy for Resolver(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  char *v25;
  uint64_t v26;

  v6 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = type metadata accessor for Configuration();
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  v8 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(a1 + v8[5]) = *(_QWORD *)(a2 + v8[5]);
  *(_QWORD *)(a1 + v8[6]) = *(_QWORD *)(a2 + v8[6]);
  *(_QWORD *)(a1 + v8[7]) = *(_QWORD *)(a2 + v8[7]);
  *(_QWORD *)(a1 + v8[8]) = *(_QWORD *)(a2 + v8[8]);
  *(_QWORD *)(a1 + v8[9]) = *(_QWORD *)(a2 + v8[9]);
  *(_QWORD *)(a1 + v8[10]) = *(_QWORD *)(a2 + v8[10]);
  *(_QWORD *)(a1 + v8[11]) = *(_QWORD *)(a2 + v8[11]);
  v9 = a3[5];
  v10 = (_QWORD *)(a1 + v9);
  v11 = a2 + v9;
  v12 = *(_QWORD *)(a2 + v9 + 8);
  *v10 = *(_QWORD *)(a2 + v9);
  v10[1] = v12;
  v10[2] = *(_QWORD *)(a2 + v9 + 16);
  v13 = type metadata accessor for Source();
  v14 = *(int *)(v13 + 24);
  v25 = (char *)v10 + v14;
  v26 = v13;
  v24 = v11 + v14;
  v15 = sub_1C106D1F8();
  v23 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v23(v25, v24, v15);
  *((_BYTE *)v10 + *(int *)(v26 + 28)) = *(_BYTE *)(v11 + *(int *)(v26 + 28));
  v16 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v16) = *(_BYTE *)(a2 + v16);
  v17 = a3[8];
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  v20 = sub_1C106E638();
  if (sub_1C07B2D80((uint64_t)v19, 1, v20))
  {
    v21 = sub_1C07ACF80(&qword_1ED759C40);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    sub_1C07B2D8C((uint64_t)v18, 0, 1, v20);
  }
  return a1;
}

uint64_t assignWithCopy for Resolver(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;

  v6 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for Configuration() + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  v10 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(a1 + v10[5]) = *(_QWORD *)(a2 + v10[5]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[6]) = *(_QWORD *)(a2 + v10[6]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[7]) = *(_QWORD *)(a2 + v10[7]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[8]) = *(_QWORD *)(a2 + v10[8]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[9]) = *(_QWORD *)(a2 + v10[9]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[10]) = *(_QWORD *)(a2 + v10[10]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[11]) = *(_QWORD *)(a2 + v10[11]);
  swift_retain();
  swift_release();
  v11 = a3[5];
  v12 = (_QWORD *)(a1 + v11);
  v13 = a2 + v11;
  *v12 = *(_QWORD *)(a2 + v11);
  v12[1] = *(_QWORD *)(a2 + v11 + 8);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  v12[2] = *(_QWORD *)(v13 + 16);
  v14 = type metadata accessor for Source();
  v15 = *(int *)(v14 + 24);
  v16 = (char *)v12 + v15;
  v17 = v13 + v15;
  v18 = sub_1C106D1F8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  *((_BYTE *)v12 + *(int *)(v14 + 28)) = *(_BYTE *)(v13 + *(int *)(v14 + 28));
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v19 = a3[8];
  v20 = (void *)(a1 + v19);
  v21 = (const void *)(a2 + v19);
  v22 = sub_1C106E638();
  LODWORD(v16) = sub_1C07B2D80((uint64_t)v20, 1, v22);
  v23 = sub_1C07B2D80((uint64_t)v21, 1, v22);
  if (!(_DWORD)v16)
  {
    v24 = *(_QWORD *)(v22 - 8);
    if (!v23)
    {
      (*(void (**)(void *, const void *, uint64_t))(v24 + 24))(v20, v21, v22);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v24 + 8))(v20, v22);
    goto LABEL_6;
  }
  if (v23)
  {
LABEL_6:
    v25 = sub_1C07ACF80(&qword_1ED759C40);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  sub_1C07B2D8C((uint64_t)v20, 0, 1, v22);
  return a1;
}

uint64_t initializeWithTake for Resolver(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = type metadata accessor for Configuration();
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  v8 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(a1 + v8[5]) = *(_QWORD *)(a2 + v8[5]);
  *(_QWORD *)(a1 + v8[6]) = *(_QWORD *)(a2 + v8[6]);
  *(_QWORD *)(a1 + v8[7]) = *(_QWORD *)(a2 + v8[7]);
  *(_QWORD *)(a1 + v8[8]) = *(_QWORD *)(a2 + v8[8]);
  *(_QWORD *)(a1 + v8[9]) = *(_QWORD *)(a2 + v8[9]);
  *(_QWORD *)(a1 + v8[10]) = *(_QWORD *)(a2 + v8[10]);
  *(_QWORD *)(a1 + v8[11]) = *(_QWORD *)(a2 + v8[11]);
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_OWORD *)v10 = *(_OWORD *)(a2 + v9);
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(a2 + v9 + 16);
  v12 = type metadata accessor for Source();
  v13 = *(int *)(v12 + 24);
  v14 = v10 + v13;
  v15 = v11 + v13;
  v16 = sub_1C106D1F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  *(_BYTE *)(v10 + *(int *)(v12 + 28)) = *(_BYTE *)(v11 + *(int *)(v12 + 28));
  v17 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v17) = *(_BYTE *)(a2 + v17);
  v18 = a3[8];
  v19 = (void *)(a1 + v18);
  v20 = (const void *)(a2 + v18);
  v21 = sub_1C106E638();
  if (sub_1C07B2D80((uint64_t)v20, 1, v21))
  {
    v22 = sub_1C07ACF80(&qword_1ED759C40);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
    sub_1C07B2D8C((uint64_t)v19, 0, 1, v21);
  }
  return a1;
}

uint64_t assignWithTake for Resolver(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;

  v6 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = type metadata accessor for Configuration();
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  v8 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(a1 + v8[5]) = *(_QWORD *)(a2 + v8[5]);
  swift_release();
  *(_QWORD *)(a1 + v8[6]) = *(_QWORD *)(a2 + v8[6]);
  swift_release();
  *(_QWORD *)(a1 + v8[7]) = *(_QWORD *)(a2 + v8[7]);
  swift_release();
  *(_QWORD *)(a1 + v8[8]) = *(_QWORD *)(a2 + v8[8]);
  swift_release();
  *(_QWORD *)(a1 + v8[9]) = *(_QWORD *)(a2 + v8[9]);
  swift_release();
  *(_QWORD *)(a1 + v8[10]) = *(_QWORD *)(a2 + v8[10]);
  swift_release();
  *(_QWORD *)(a1 + v8[11]) = *(_QWORD *)(a2 + v8[11]);
  swift_release();
  v9 = a3[5];
  v10 = (_QWORD *)(a1 + v9);
  v11 = a2 + v9;
  v12 = *(_QWORD *)(a2 + v9 + 8);
  *v10 = *(_QWORD *)(a2 + v9);
  v10[1] = v12;
  swift_bridgeObjectRelease();
  v10[2] = *(_QWORD *)(v11 + 16);
  v13 = type metadata accessor for Source();
  v14 = *(int *)(v13 + 24);
  v15 = (char *)v10 + v14;
  v16 = v11 + v14;
  v17 = sub_1C106D1F8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v15, v16, v17);
  *((_BYTE *)v10 + *(int *)(v13 + 28)) = *(_BYTE *)(v11 + *(int *)(v13 + 28));
  v18 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v18) = *(_BYTE *)(a2 + v18);
  v19 = a3[8];
  v20 = (void *)(a1 + v19);
  v21 = (const void *)(a2 + v19);
  v22 = sub_1C106E638();
  LODWORD(v15) = sub_1C07B2D80((uint64_t)v20, 1, v22);
  v23 = sub_1C07B2D80((uint64_t)v21, 1, v22);
  if (!(_DWORD)v15)
  {
    v24 = *(_QWORD *)(v22 - 8);
    if (!v23)
    {
      (*(void (**)(void *, const void *, uint64_t))(v24 + 40))(v20, v21, v22);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v24 + 8))(v20, v22);
    goto LABEL_6;
  }
  if (v23)
  {
LABEL_6:
    v25 = sub_1C07ACF80(&qword_1ED759C40);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  sub_1C07B2D8C((uint64_t)v20, 0, 1, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for Resolver()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0CEAD18(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;

  v6 = sub_1C077D0AC();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = v4;
    return sub_1C07B2D80(v8, v3, v7);
  }
  v9 = sub_1C077674C();
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v9;
    v10 = a3[5];
LABEL_10:
    v8 = v4 + v10;
    return sub_1C07B2D80(v8, v3, v7);
  }
  if ((_DWORD)v3 != 252)
  {
    v7 = sub_1C07ACF80(&qword_1ED759C40);
    v10 = a3[8];
    goto LABEL_10;
  }
  v11 = *(unsigned __int8 *)(v4 + a3[7]);
  if (v11 >= 4)
    return v11 - 3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Resolver()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0CEADD0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v8 = sub_1C077D0AC();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = v5;
  }
  else
  {
    result = sub_1C077674C();
    if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    {
      v9 = result;
      v12 = a4[5];
    }
    else
    {
      if (a3 == 252)
      {
        *(_BYTE *)(v5 + a4[7]) = v4 + 3;
        return result;
      }
      v9 = sub_1C07ACF80(&qword_1ED759C40);
      v12 = a4[8];
    }
    v10 = v5 + v12;
  }
  return sub_1C07B2D8C(v10, v4, v4, v9);
}

void sub_1C0CEAE7C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for PhaseStores();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Source();
    if (v1 <= 0x3F)
    {
      sub_1C08C0260();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t sub_1C0CEAF30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_1C0CE6774(a1, v2[2], v2[3], v2[4], v2[5], v2[6], a2);
}

void sub_1C0CEAF54(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  char **v19;
  uint64_t v20;
  char *v21;
  _QWORD *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char **v60;
  void (*v61)(char *, char *, uint64_t);
  char *v62;
  void (*v63)(char *, uint64_t);
  char *v64;
  char *v65;
  void (*v66)(char *, char *, uint64_t);
  uint64_t v67;
  void (*v68)(char *, char *, uint64_t);
  char **v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  char *v73;
  char *v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  BOOL v86;
  unint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  BOOL v96;
  uint64_t v97;
  char v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  BOOL v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  char *v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  char *v140;
  char *v141;
  char *v142;
  void (*v143)(char *, char *, uint64_t);
  char **v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  _QWORD *v149;

  v2 = v1;
  v145 = sub_1C106E590();
  v149 = *(_QWORD **)(v145 - 8);
  MEMORY[0x1E0C80A78](v145);
  v134 = (char *)&v128 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v146 = (char *)&v128 - v6;
  MEMORY[0x1E0C80A78](v7);
  v142 = (char *)&v128 - v8;
  MEMORY[0x1E0C80A78](v9);
  v141 = (char *)&v128 - v10;
  v11 = a1;
  v12 = *(_QWORD *)(a1 + 8);
  v13 = sub_1C1070BE8();
  if (v13 >= v12)
  {
    if ((v12 & 0x8000000000000000) == 0)
    {
      if (v12)
        sub_1C0CEB948(0, v12, 1, (_QWORD *)v11);
      return;
    }
    goto LABEL_140;
  }
  v14 = v13;
  sub_1C08CBEAC(v12 / 2);
  v130 = v15;
  v131 = v12;
  v136 = v16;
  if (v12 <= 0)
  {
LABEL_104:
    v18 = (char *)MEMORY[0x1E0DEE9D8];
    v72 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    v19 = (char **)v11;
LABEL_105:
    if (v72 < 2)
    {
LABEL_116:
      swift_bridgeObjectRelease();
      if (v131 >= -1)
        goto LABEL_117;
      goto LABEL_144;
    }
    v121 = *v19;
    while (1)
    {
      v11 = v72 - 2;
      if (v72 < 2)
        break;
      if (!v121)
        goto LABEL_148;
      v122 = v18;
      v123 = v18 + 32;
      v124 = *(_QWORD *)&v18[16 * v11 + 32];
      v125 = *(_QWORD *)&v18[16 * v72 + 24];
      sub_1C0CEBBB0((unint64_t)&v121[v149[9] * v124], (unint64_t)&v121[v149[9] * *(_QWORD *)&v123[16 * v72 - 16]], (unint64_t)&v121[v149[9] * v125], v136);
      if (v2)
        goto LABEL_102;
      if (v125 < v124)
        goto LABEL_135;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v122 = sub_1C0861BC0();
      if (v11 >= *((_QWORD *)v122 + 2))
        goto LABEL_136;
      v126 = &v122[16 * v11 + 32];
      *(_QWORD *)v126 = v124;
      *((_QWORD *)v126 + 1) = v125;
      v127 = *((_QWORD *)v122 + 2);
      if (v72 > v127)
        goto LABEL_137;
      v18 = v122;
      memmove(&v122[16 * v72 + 16], &v122[16 * v72 + 32], 16 * (v127 - v72));
      *((_QWORD *)v122 + 2) = v127 - 1;
      v72 = v127 - 1;
      if (v127 <= 2)
        goto LABEL_116;
    }
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
    return;
  }
  v129 = v14;
  v17 = 0;
  v18 = (char *)MEMORY[0x1E0DEE9D8];
  v19 = (char **)v11;
  v144 = (char **)v11;
  while (1)
  {
    v20 = v17 + 1;
    v135 = v17;
    if (v17 + 1 >= v12)
    {
      v31 = v17 + 1;
      v39 = v145;
    }
    else
    {
      v21 = *v19;
      v137 = v2;
      v138 = v21;
      v147 = v12;
      v22 = v149;
      v23 = v149[9];
      v24 = (void (*)(char *, char *, uint64_t))v149[2];
      v25 = v141;
      v26 = v145;
      v24(v141, &v21[v23 * v20], v145);
      v27 = &v21[v23 * v135];
      v28 = v142;
      v24(v142, v27, v26);
      sub_1C0794BAC(&qword_1ED750678, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE48]);
      v140 = v29;
      LODWORD(v143) = sub_1C106FA6C();
      v30 = (void (*)(char *, uint64_t))v22[1];
      v30(v28, v26);
      v17 = v135;
      v30(v25, v26);
      v31 = v17 + 2;
      v148 = v23;
      if (v17 + 2 >= v147)
      {
        v12 = v147;
        v2 = v137;
      }
      else
      {
        v132 = v18;
        v139 = v23 * v20;
        v32 = v138;
        v33 = v23 * v31;
        while (1)
        {
          v34 = v31;
          v35 = v141;
          v36 = v145;
          v24(v141, &v32[v33], v145);
          v37 = v142;
          v24(v142, &v32[v139], v36);
          v38 = sub_1C106FA6C();
          v30(v37, v36);
          v30(v35, v36);
          if (((v143 ^ v38) & 1) != 0)
            break;
          v31 = v34 + 1;
          v32 += v148;
          if (v34 + 1 >= v147)
          {
            v12 = v147;
            v31 = v147;
            v2 = v137;
            v18 = v132;
            v17 = v135;
            goto LABEL_13;
          }
        }
        v2 = v137;
        v18 = v132;
        v31 = v34;
        v17 = v135;
        v12 = v147;
      }
LABEL_13:
      v19 = v144;
      v39 = v145;
      if ((v143 & 1) != 0)
      {
        if (v31 < v17)
          goto LABEL_141;
        if (v17 < v31)
        {
          v132 = v18;
          v137 = v2;
          v40 = 0;
          v41 = v148;
          v42 = v148 * (v31 - 1);
          v43 = v31 * v148;
          v44 = v17;
          v45 = v17 * v148;
          do
          {
            if (v44 != v31 + v40 - 1)
            {
              v46 = v138;
              if (!v138)
                goto LABEL_147;
              v47 = v31;
              v48 = &v138[v45];
              v140 = &v138[v42];
              v49 = v145;
              v143 = (void (*)(char *, char *, uint64_t))v149[4];
              v143(v134, &v138[v45], v145);
              if (v45 < v42 || v48 >= &v46[v43])
              {
                v51 = v140;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                v51 = v140;
                if (v45 != v42)
                  swift_arrayInitWithTakeBackToFront();
              }
              v143(v51, v134, v49);
              v19 = v144;
              v31 = v47;
              v41 = v148;
            }
            ++v44;
            --v40;
            v42 -= v41;
            v43 -= v41;
            v45 += v41;
          }
          while (v44 < v31 + v40);
          v2 = v137;
          v18 = v132;
          v39 = v145;
          v17 = v135;
          v12 = v147;
        }
      }
    }
    if (v31 < v12)
    {
      if (__OFSUB__(v31, v17))
        goto LABEL_139;
      if (v31 - v17 < v129)
      {
        if (__OFADD__(v17, v129))
          goto LABEL_142;
        if (v17 + v129 >= v12)
          v52 = v12;
        else
          v52 = v17 + v129;
        if (v52 < v17)
          goto LABEL_143;
        if (v31 != v52)
        {
          v132 = v18;
          v133 = v52;
          v53 = v149[9];
          v54 = (char *)v149[2];
          v137 = v2;
          v138 = v54;
          v148 = v53 * (v31 - 1);
          v139 = v53;
          v55 = v31 * v53;
          do
          {
            v56 = 0;
            v143 = (void (*)(char *, char *, uint64_t))v31;
            v140 = (char *)v55;
            while (1)
            {
              v147 = v17;
              v57 = *v19;
              v58 = (uint64_t)&(*v19)[v55 + v56];
              v59 = v141;
              v60 = v19;
              v61 = (void (*)(char *, char *, uint64_t))v138;
              ((void (*)(char *, uint64_t, uint64_t))v138)(v141, v58, v39);
              v62 = v142;
              v61(v142, &v57[v148 + v56], v39);
              sub_1C0794BAC(&qword_1ED750678, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE48]);
              LOBYTE(v57) = sub_1C106FA6C();
              v63 = (void (*)(char *, uint64_t))v149[1];
              v63(v62, v39);
              v63(v59, v39);
              if ((v57 & 1) == 0)
                break;
              v64 = *v60;
              if (!*v60)
                goto LABEL_145;
              v55 = (uint64_t)v140;
              v65 = &v64[v148 + v56];
              v66 = (void (*)(char *, char *, uint64_t))v149[4];
              v67 = v145;
              v66(v146, &v140[(_QWORD)v64 + v56], v145);
              v39 = v67;
              swift_arrayInitWithTakeFrontToBack();
              v66(v65, v146, v67);
              v56 -= v139;
              v17 = v147 + 1;
              v68 = v143;
              v19 = v144;
              if (v143 == (void (*)(char *, char *, uint64_t))(v147 + 1))
                goto LABEL_46;
            }
            v39 = v145;
            v68 = v143;
            v19 = v60;
            v55 = (uint64_t)v140;
LABEL_46:
            v31 = (uint64_t)v68 + 1;
            v148 += v139;
            v55 += v139;
            v17 = v135;
          }
          while (v31 != v133);
          v31 = v133;
          v2 = v137;
          v18 = v132;
        }
      }
    }
    if (v31 < v17)
      goto LABEL_138;
    v69 = v19;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v18 = sub_1C0861AD0(0, *((_QWORD *)v18 + 2) + 1, 1, v18);
    v71 = *((_QWORD *)v18 + 2);
    v70 = *((_QWORD *)v18 + 3);
    v72 = v71 + 1;
    v137 = v2;
    if (v71 >= v70 >> 1)
      v18 = sub_1C0861AD0((char *)(v70 > 1), v71 + 1, 1, v18);
    v19 = v69;
    *((_QWORD *)v18 + 2) = v72;
    v73 = v18 + 32;
    v74 = &v18[16 * v71 + 32];
    *(_QWORD *)v74 = v17;
    *((_QWORD *)v74 + 1) = v31;
    v143 = (void (*)(char *, char *, uint64_t))v31;
    if (v71)
      break;
    v72 = 1;
LABEL_96:
    v12 = (uint64_t)v19[1];
    v17 = (uint64_t)v143;
    v2 = v137;
    if ((uint64_t)v143 >= v12)
      goto LABEL_105;
  }
  while (1)
  {
    v75 = v72 - 1;
    if (v72 >= 4)
    {
      v80 = &v73[16 * v72];
      v81 = *((_QWORD *)v80 - 8);
      v82 = *((_QWORD *)v80 - 7);
      v86 = __OFSUB__(v82, v81);
      v83 = v82 - v81;
      if (v86)
        goto LABEL_123;
      v85 = *((_QWORD *)v80 - 6);
      v84 = *((_QWORD *)v80 - 5);
      v86 = __OFSUB__(v84, v85);
      v78 = v84 - v85;
      v79 = v86;
      if (v86)
        goto LABEL_124;
      v87 = v72 - 2;
      v88 = &v73[16 * v72 - 32];
      v90 = *(_QWORD *)v88;
      v89 = *((_QWORD *)v88 + 1);
      v86 = __OFSUB__(v89, v90);
      v91 = v89 - v90;
      if (v86)
        goto LABEL_125;
      v86 = __OFADD__(v78, v91);
      v92 = v78 + v91;
      if (v86)
        goto LABEL_127;
      if (v92 >= v83)
      {
        v110 = &v73[16 * v75];
        v112 = *(_QWORD *)v110;
        v111 = *((_QWORD *)v110 + 1);
        v86 = __OFSUB__(v111, v112);
        v113 = v111 - v112;
        if (v86)
          goto LABEL_133;
        v103 = v78 < v113;
        goto LABEL_85;
      }
    }
    else
    {
      if (v72 != 3)
      {
        v104 = *((_QWORD *)v18 + 4);
        v105 = *((_QWORD *)v18 + 5);
        v86 = __OFSUB__(v105, v104);
        v97 = v105 - v104;
        v98 = v86;
        goto LABEL_79;
      }
      v77 = *((_QWORD *)v18 + 4);
      v76 = *((_QWORD *)v18 + 5);
      v86 = __OFSUB__(v76, v77);
      v78 = v76 - v77;
      v79 = v86;
    }
    if ((v79 & 1) != 0)
      goto LABEL_126;
    v87 = v72 - 2;
    v93 = &v73[16 * v72 - 32];
    v95 = *(_QWORD *)v93;
    v94 = *((_QWORD *)v93 + 1);
    v96 = __OFSUB__(v94, v95);
    v97 = v94 - v95;
    v98 = v96;
    if (v96)
      goto LABEL_128;
    v99 = &v73[16 * v75];
    v101 = *(_QWORD *)v99;
    v100 = *((_QWORD *)v99 + 1);
    v86 = __OFSUB__(v100, v101);
    v102 = v100 - v101;
    if (v86)
      goto LABEL_130;
    if (__OFADD__(v97, v102))
      goto LABEL_132;
    if (v97 + v102 >= v78)
    {
      v103 = v78 < v102;
LABEL_85:
      if (v103)
        v75 = v87;
      goto LABEL_87;
    }
LABEL_79:
    if ((v98 & 1) != 0)
      goto LABEL_129;
    v106 = &v73[16 * v75];
    v108 = *(_QWORD *)v106;
    v107 = *((_QWORD *)v106 + 1);
    v86 = __OFSUB__(v107, v108);
    v109 = v107 - v108;
    if (v86)
      goto LABEL_131;
    if (v109 < v97)
      goto LABEL_96;
LABEL_87:
    v11 = v75 - 1;
    if (v75 - 1 >= v72)
    {
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
      goto LABEL_134;
    }
    if (!*v19)
      goto LABEL_146;
    v114 = v18;
    v115 = &v73[16 * v11];
    v116 = *(_QWORD *)v115;
    v117 = &v73[16 * v75];
    v118 = *((_QWORD *)v117 + 1);
    v119 = v137;
    sub_1C0CEBBB0((unint64_t)&(*v19)[v149[9] * *(_QWORD *)v115], (unint64_t)&(*v19)[v149[9] * *(_QWORD *)v117], (unint64_t)&(*v19)[v149[9] * v118], v136);
    v137 = v119;
    if (v119)
      break;
    if (v118 < v116)
      goto LABEL_120;
    if (v75 > *((_QWORD *)v114 + 2))
      goto LABEL_121;
    *(_QWORD *)v115 = v116;
    *(_QWORD *)&v73[16 * v11 + 8] = v118;
    v120 = *((_QWORD *)v114 + 2);
    if (v75 >= v120)
      goto LABEL_122;
    v18 = v114;
    v72 = v120 - 1;
    memmove(&v73[16 * v75], v117 + 16, 16 * (v120 - 1 - v75));
    *((_QWORD *)v114 + 2) = v120 - 1;
    v19 = v144;
    if (v120 <= 2)
      goto LABEL_96;
  }
  v2 = v137;
LABEL_102:
  swift_bridgeObjectRelease();
  if (v131 < -1)
  {
    __break(1u);
    goto LABEL_104;
  }
LABEL_117:
  *(_QWORD *)(v130 + 16) = 0;
  swift_bridgeObjectRelease();
}

void sub_1C0CEB948(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t);
  char *v20;
  void (*v21)(char *, uint64_t);
  char *v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  _QWORD *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;

  v28 = a1;
  v7 = sub_1C106E590();
  v36 = *(_QWORD **)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v35 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v32 = (char *)&v26 - v10;
  v12.n128_f64[0] = MEMORY[0x1E0C80A78](v11);
  v31 = (char *)&v26 - v13;
  v34 = a3;
  v27 = a2;
  if (a3 != a2)
  {
    v14 = v36[9];
    v29 = (void (*)(char *, uint64_t, uint64_t))v36[2];
    v30 = a4;
    v38 = v14 * (v34 - 1);
    v33 = v14;
    v37 = v14 * v34;
    while (2)
    {
      v15 = 0;
      v16 = v28;
      do
      {
        v17 = *a4;
        v18 = v31;
        v19 = v29;
        ((void (*)(char *, uint64_t, uint64_t, __n128))v29)(v31, v37 + v15 + *a4, v7, v12);
        v20 = v32;
        v19(v32, v38 + v15 + v17, v7);
        sub_1C0794BAC(&qword_1ED750678, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE48]);
        LOBYTE(v17) = sub_1C106FA6C();
        v21 = (void (*)(char *, uint64_t))v36[1];
        v22 = v20;
        a4 = v30;
        v21(v22, v7);
        v21(v18, v7);
        if ((v17 & 1) == 0)
          break;
        v23 = *a4;
        if (!*a4)
        {
          __break(1u);
          return;
        }
        v24 = (char *)(v23 + v38 + v15);
        v25 = (void (*)(char *, uint64_t, uint64_t))v36[4];
        v25(v35, v23 + v37 + v15, v7);
        swift_arrayInitWithTakeFrontToBack();
        v25(v24, (uint64_t)v35, v7);
        v15 -= v33;
        ++v16;
      }
      while (v34 != v16);
      v38 += v33;
      v37 += v33;
      if (++v34 != v27)
        continue;
      break;
    }
  }
}

void sub_1C0CEBBB0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  int64_t v17;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;
  char *v24;
  void (*v26)(char *);
  char *v27;
  uint64_t v28;
  void (*v29)(char *);
  unint64_t v30;
  unint64_t v31;
  char *v32;
  void (*v33)(char *, uint64_t);
  unint64_t v35;
  unint64_t v37;
  char *v39;
  char *v40;
  unint64_t v41;
  char *v42;
  char v43;
  void (*v44)(char *, uint64_t);
  unint64_t v45;
  unint64_t v47;
  BOOL v49;
  int64_t v50;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  void (*v55)(char *);
  uint64_t v56;
  char *v57;
  unint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;

  v9 = sub_1C106E590();
  MEMORY[0x1E0C80A78](v9);
  v60 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v59 = (char *)&v52 - v13;
  v61 = v12;
  v14 = *(_QWORD *)(v12 + 72);
  if (!v14)
  {
    __break(1u);
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
    goto LABEL_81;
  }
  v15 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v14 == -1)
    goto LABEL_79;
  v17 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v14 == -1)
    goto LABEL_80;
  v19 = v15 / v14;
  v20 = v17 / v14;
  v62 = *(_QWORD *)(v12 + 72);
  if (v15 / v14 >= v17 / v14)
  {
    sub_1C09D223C(a2, v17 / v14);
    v23 = v20 * v14;
    v24 = (char *)a2;
    v21 = a4 + v23;
    if (v23 < 1 || a1 >= a2)
      goto LABEL_73;
    v52 = v4;
    v53 = a1;
    v56 = -v14;
    v26 = *(void (**)(char *))(v61 + 16);
    v54 = a4;
    v55 = v26;
    v27 = v59;
    while (1)
    {
      v29 = v55;
      v28 = v56;
      v30 = a3 + v56;
      v58 = v21 + v56;
      v31 = v21;
      v55(v27);
      v32 = v60;
      v57 = &v24[v28];
      v29(v60);
      sub_1C0794BAC(&qword_1ED750678, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE48]);
      LOBYTE(v28) = sub_1C106FA6C();
      v33 = *(void (**)(char *, uint64_t))(v61 + 8);
      v33(v32, v9);
      v33(v27, v9);
      if ((v28 & 1) != 0)
      {
        if (a3 < (unint64_t)v24 || v30 >= (unint64_t)v24)
        {
          v24 = v57;
          swift_arrayInitWithTakeFrontToBack();
          v35 = v53;
          a4 = v54;
          v14 = v62;
LABEL_41:
          a3 = v30;
          goto LABEL_42;
        }
        v35 = v53;
        a4 = v54;
        v14 = v62;
        if ((char *)a3 == v24)
        {
          v24 = v57;
          goto LABEL_41;
        }
        a3 = v30;
        v24 = v57;
      }
      else
      {
        if (a3 < v31 || v30 >= v31)
        {
          v37 = v58;
          swift_arrayInitWithTakeFrontToBack();
          v21 = v37;
          v35 = v53;
          a4 = v54;
          v14 = v62;
LABEL_44:
          a3 = v30;
          goto LABEL_45;
        }
        v35 = v53;
        a4 = v54;
        v14 = v62;
        if (a3 == v31)
        {
          v21 = v58;
          goto LABEL_44;
        }
        a3 = v30;
        v31 = v58;
      }
      swift_arrayInitWithTakeBackToFront();
LABEL_42:
      v21 = v31;
LABEL_45:
      if (v21 <= a4 || (unint64_t)v24 <= v35)
        goto LABEL_73;
    }
  }
  sub_1C09D223C(a1, v15 / v14);
  v21 = a4 + v19 * v14;
  if (v19 * v14 >= 1 && a2 < a3)
  {
    v52 = v4;
    v39 = v60;
    v57 = *(char **)(v61 + 16);
    v58 = a3;
    v40 = v59;
    do
    {
      v41 = v21;
      v42 = v57;
      ((void (*)(char *, unint64_t, uint64_t))v57)(v40, a2, v9);
      ((void (*)(char *, unint64_t, uint64_t))v42)(v39, a4, v9);
      sub_1C0794BAC(&qword_1ED750678, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE48]);
      v43 = sub_1C106FA6C();
      v44 = *(void (**)(char *, uint64_t))(v61 + 8);
      v44(v39, v9);
      v44(v40, v9);
      if ((v43 & 1) != 0)
      {
        v14 = v62;
        v45 = a2 + v62;
        if (a1 < a2 || a1 >= v45)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a2)
        {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      else
      {
        v47 = a4 + v62;
        if (a1 < a4 || a1 >= v47)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a4)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        v45 = a2;
        a4 = v47;
        v14 = v62;
      }
      v21 = v41;
      a1 += v14;
      v49 = a4 >= v41 || v45 >= v58;
      a2 = v45;
    }
    while (!v49);
  }
LABEL_73:
  v50 = v21 - a4;
  if (v14 != -1 || v50 != 0x8000000000000000)
  {
    sub_1C09D223C(a4, v50 / v14);
    return;
  }
LABEL_81:
  __break(1u);
}

uint64_t sub_1C0CEC018(uint64_t a1)
{
  uint64_t v1;

  return sub_1C0CE3980(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_1C0CEC030()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED7560B8;
  if (!qword_1ED7560B8)
  {
    v1 = sub_1C07D4BEC(&qword_1ED762B70);
    v2 = MEMORY[0x1E0DEA970];
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED7560B8);
  }
  return result;
}

uint64_t sub_1C0CEC08C(uint64_t a1)
{
  uint64_t v1;

  return sub_1C0CE3B80(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_1C0CEC0A4()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1ED751268;
  if (!qword_1ED751268)
  {
    v1 = sub_1C07D4BEC(&qword_1ED755F88);
    v2 = sub_1C0CEC030();
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED751268);
  }
  return result;
}

void sub_1C0CEC128(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
}

uint64_t sub_1C0CEC13C()
{
  return sub_1C106D1EC();
}

uint64_t sub_1C0CEC144()
{
  return sub_1C106FC94();
}

uint64_t ResolverKeyValueStore.__allocating_init(config:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  ResolverKeyValueStore.init(config:)(a1);
  return v2;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ResolverKeyValueStore.promoteStore()()
{
  Swift::String v0;

  v0._object = (void *)0x80000001C1108B90;
  v0._countAndFlagsBits = 0xD000000000000017;
  KeyValueStore.copyAllKeyValues(to:clearCurrentDomain:clearNewDomain:)(v0, 1, 1);
}

unint64_t static ResolverKeyValueStore.constructionDomain.getter()
{
  return 0xD000000000000023;
}

unint64_t static ResolverKeyValueStore.productionDomain.getter()
{
  return 0xD000000000000017;
}

uint64_t ResolverKeyValueStore.entityToGraphIdConstruction.getter()
{
  return swift_retain();
}

uint64_t ResolverKeyValueStore.entityToGraphId.getter()
{
  return swift_retain();
}

uint64_t ResolverKeyValueStore.init(config:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = v1;
  v5 = type metadata accessor for Configuration();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v14 - v9;
  sub_1C078E3E0(a1, (uint64_t)&v14 - v9);
  type metadata accessor for KeyValueStore();
  swift_allocObject();
  v11 = KeyValueStore.init(config:domain:)((uint64_t)v10, 0xD000000000000017, 0x80000001C1108B90);
  if (v2)
  {
    sub_1C078D09C(a1);
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(_QWORD *)(v3 + 24) = v11;
    sub_1C078E3E0(a1, (uint64_t)v7);
    swift_allocObject();
    v12 = KeyValueStore.init(config:domain:)((uint64_t)v7, 0xD000000000000023, 0x80000001C1108EC0);
    sub_1C078D09C(a1);
    *(_QWORD *)(v3 + 16) = v12;
  }
  return v3;
}

uint64_t ResolverKeyValueStore.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return v0;
}

uint64_t ResolverKeyValueStore.__deallocating_deinit()
{
  ResolverKeyValueStore.deinit();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ResolverKeyValueStore()
{
  return objc_opt_self();
}

uint64_t method lookup function for ResolverKeyValueStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ResolverKeyValueStore.__allocating_init(config:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1C0CEC440(uint64_t a1, uint64_t a2)
{
  const void *v2;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  _QWORD v11[7];
  _QWORD __dst[9];

  memcpy(__dst, v2, sizeof(__dst));
  if (qword_1ED762B20 != -1)
    swift_once();
  v5 = sub_1C106F544();
  sub_1C079E000(v5, (uint64_t)qword_1ED78D9F8);
  v6 = sub_1C106F538();
  v7 = sub_1C1070384();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_1C0771000, v6, v7, "RowUpdatableDatabaseTable: clearAndInsert with callback", v8, 2u);
    MEMORY[0x1C3BA8270](v8, -1, -1);
  }

  MEMORY[0x1E0C80A78](v9);
  v11[2] = __dst;
  v11[3] = a1;
  v11[4] = a2;
  swift_retain();
  sub_1C077FF50((uint64_t)sub_1C0CEE550, (uint64_t)v11);
  return swift_release();
}

uint64_t sub_1C0CEC58C(uint64_t a1, uint64_t a2)
{
  const void *v2;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  _QWORD v11[7];
  _QWORD __dst[9];

  memcpy(__dst, v2, sizeof(__dst));
  if (qword_1ED762B20 != -1)
    swift_once();
  v5 = sub_1C106F544();
  sub_1C079E000(v5, (uint64_t)qword_1ED78D9F8);
  v6 = sub_1C106F538();
  v7 = sub_1C1070384();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_1C0771000, v6, v7, "RowUpdatableDatabaseTable: clearAndInsert with callback", v8, 2u);
    MEMORY[0x1C3BA8270](v8, -1, -1);
  }

  MEMORY[0x1E0C80A78](v9);
  v11[2] = __dst;
  v11[3] = a1;
  v11[4] = a2;
  swift_retain();
  sub_1C077FF50((uint64_t)sub_1C0CEE444, (uint64_t)v11);
  return swift_release();
}

uint64_t sub_1C0CEC6D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  _QWORD v16[6];
  _QWORD v17[4];

  v17[0] = a3;
  v17[1] = a4;
  v17[2] = a5;
  v17[3] = a6;
  if (qword_1ED762B20 != -1)
    swift_once();
  v10 = sub_1C106F544();
  sub_1C079E000(v10, (uint64_t)qword_1ED78D9F8);
  v11 = sub_1C106F538();
  v12 = sub_1C1070384();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)sub_1C0780FC8();
    *(_WORD *)v13 = 0;
    _os_log_impl(&dword_1C0771000, v11, v12, "RowUpdatableDatabaseTable: clearAndInsert with callback", v13, 2u);
    sub_1C0776778();
  }

  MEMORY[0x1E0C80A78](v14);
  v16[2] = v17;
  v16[3] = a1;
  v16[4] = a2;
  swift_retain();
  sub_1C077FF50(a7, (uint64_t)v16);
  return swift_release();
}

uint64_t sub_1C0CEC814(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  _QWORD v12[6];

  v3 = v2;
  if (qword_1ED762B20 != -1)
    swift_once();
  v6 = sub_1C106F544();
  sub_1C079E000(v6, (uint64_t)qword_1ED78D9F8);
  v7 = sub_1C106F538();
  v8 = sub_1C1070384();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_1C0771000, v7, v8, "RowUpdatableDatabaseTable: clearAndInsert with callback", v9, 2u);
    MEMORY[0x1C3BA8270](v9, -1, -1);
  }

  MEMORY[0x1E0C80A78](v10);
  v12[2] = v3;
  v12[3] = a1;
  v12[4] = a2;
  swift_retain();
  sub_1C077FF50((uint64_t)sub_1C0CEE588, (uint64_t)v12);
  return swift_release();
}

uint64_t sub_1C0CEC944(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __int128 v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  _QWORD v12[6];
  _OWORD v13[2];
  uint64_t v14;

  v5 = *(_OWORD *)(v2 + 16);
  v13[0] = *(_OWORD *)v2;
  v13[1] = v5;
  v14 = *(_QWORD *)(v2 + 32);
  if (qword_1ED762B20 != -1)
    swift_once();
  v6 = sub_1C106F544();
  sub_1C079E000(v6, (uint64_t)qword_1ED78D9F8);
  v7 = sub_1C106F538();
  v8 = sub_1C1070384();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_1C0771000, v7, v8, "RowUpdatableDatabaseTable: clearAndInsert with callback", v9, 2u);
    MEMORY[0x1C3BA8270](v9, -1, -1);
  }

  MEMORY[0x1E0C80A78](v10);
  v12[2] = v13;
  v12[3] = a1;
  v12[4] = a2;
  swift_retain();
  sub_1C077FF50((uint64_t)sub_1C0CEE534, (uint64_t)v12);
  return swift_release();
}

uint64_t sub_1C0CECA90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  _QWORD v12[6];

  v3 = v2;
  if (qword_1ED762B20 != -1)
    swift_once();
  v6 = sub_1C106F544();
  sub_1C079E000(v6, (uint64_t)qword_1ED78D9F8);
  v7 = sub_1C106F538();
  v8 = sub_1C1070384();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_1C0771000, v7, v8, "RowUpdatableDatabaseTable: clearAndInsert with callback", v9, 2u);
    MEMORY[0x1C3BA8270](v9, -1, -1);
  }

  MEMORY[0x1E0C80A78](v10);
  v12[2] = v3;
  v12[3] = a1;
  v12[4] = a2;
  swift_retain();
  sub_1C077FF50((uint64_t)sub_1C0CEE56C, (uint64_t)v12);
  return swift_release();
}

void sub_1C0CECBC0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_1C07A74CC(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_1C0799084();
  sub_1C0E3BF30();
  sub_1C077E868();
}

void sub_1C0CECBE8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  char v17;

  sub_1C07A74CC(a1, a2, a3, a4, a5, a6, a7, a8, v16, v17);
  v8 = sub_1C0799084();
  sub_1C0DC6A2C(v8, v9, v10, v11, v12, v13, v14, v15);
  sub_1C077E868();
}

void sub_1C0CECC10(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_1C07A3EB0(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_1C0DC23E0();
  sub_1C0775804();
}

void sub_1C0CECC38(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  sub_1C07A74CC(a1, a2, a3, a4, a5, a6, a7, a8, v10, v11);
  v8 = sub_1C0799084();
  sub_1C0CEC440(v8, v9);
  sub_1C077E868();
}

void sub_1C0CECC68()
{
  sub_1C07A1384();
  sub_1C0DC24F0();
  sub_1C0794378();
}

void sub_1C0CECC88()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C07A1384();
  sub_1C0CEC944(v0, v1);
  sub_1C0794378();
}

uint64_t sub_1C0CECCA8(uint64_t a1)
{
  uint64_t *v1;

  return sub_1C0DC2470(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1C0CECCB4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1C0CEC6D8(a1, a2, *v2, v2[1], v2[2], v2[3], (uint64_t)sub_1C0CEE4E8);
}

void sub_1C0CECCD8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_1C07A74CC(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_1C0799084();
  sub_1C0E3BEDC();
  sub_1C077E868();
}

void sub_1C0CECD00(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  char v17;

  sub_1C07A74CC(a1, a2, a3, a4, a5, a6, a7, a8, v16, v17);
  v8 = sub_1C0799084();
  sub_1C0DC69E0(v8, v9, v10, v11, v12, v13, v14, v15);
  sub_1C077E868();
}

void sub_1C0CECD28(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9;

  sub_1C07A3EB0(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  sub_1C0DC2428();
  sub_1C0775804();
}

void sub_1C0CECD50(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  sub_1C07A74CC(a1, a2, a3, a4, a5, a6, a7, a8, v10, v11);
  v8 = sub_1C0799084();
  sub_1C0CEC58C(v8, v9);
  sub_1C077E868();
}

uint64_t type metadata accessor for EscapeBlockMonitor()
{
  return objc_opt_self();
}

uint64_t sub_1C0CECD98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;
  _QWORD v12[2];

  sub_1C1070774();
  swift_bridgeObjectRelease();
  strcpy((char *)v12, "INSERT INTO ");
  BYTE5(v12[1]) = 0;
  HIWORD(v12[1]) = -5120;
  (*(void (**)(uint64_t, uint64_t))(a3 + 8))(a1, a3);
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  v5 = *(_QWORD *)((*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(a1, a3) + 16);
  if (v5)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1C09D30E0();
    v6 = *(_QWORD *)(v11 + 16);
    v7 = 16 * v6;
    do
    {
      v8 = v6 + 1;
      if (v6 >= *(_QWORD *)(v11 + 24) >> 1)
        sub_1C09D30E0();
      *(_QWORD *)(v11 + 16) = v8;
      v9 = v11 + v7;
      *(_QWORD *)(v9 + 32) = 63;
      *(_QWORD *)(v9 + 40) = 0xE100000000000000;
      v7 += 16;
      v6 = v8;
      --v5;
    }
    while (v5);
  }
  swift_bridgeObjectRelease();
  sub_1C07ACF80(&qword_1ED762B70);
  sub_1C07F52E0((unint64_t *)&qword_1ED762430, &qword_1ED762B70, MEMORY[0x1E0DEAF20]);
  sub_1C106FA54();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  return v12[0];
}

uint64_t sub_1C0CECFA8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t (*)(uint64_t a1), _QWORD *))
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t inited;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v5 = sub_1C07ACF80(&qword_1ED760E68);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C484();
  sub_1C106C478();
  result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (!v3)
  {
    sub_1C0DC256C(result, v10, v11, v12, v13, v14, v15, v16, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35,
      v36,
      v37);
    v25 = v17;
    v19 = v18;
    type metadata accessor for EscapeBlockMonitor();
    v20 = swift_allocObject();
    sub_1C07ACF80(&qword_1ED762CD0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C10812D0;
    *(_QWORD *)(inited + 32) = v20;
    v31 = inited;
    sub_1C106FF28();
    v22 = swift_allocObject();
    swift_weakInit();
    v23 = swift_allocObject();
    swift_weakInit();
    v24 = (_QWORD *)swift_allocObject();
    v24[2] = v22;
    v24[3] = v23;
    v24[4] = v25;
    v24[5] = v19;
    swift_retain();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    a3(sub_1C0CEE5D8, v24);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C0CED194(uint64_t a1, uint64_t a2, void (*a3)(uint64_t (*)(uint64_t a1), _QWORD *))
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD v18[8];

  v5 = sub_1C07ACF80(&qword_1ED760E68);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C484();
  sub_1C106C478();
  result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (!v3)
  {
    sub_1C0DC2670();
    v18[0] = v10;
    v12 = v11;
    type metadata accessor for EscapeBlockMonitor();
    v13 = swift_allocObject();
    sub_1C07ACF80(&qword_1ED762CD0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C10812D0;
    *(_QWORD *)(inited + 32) = v13;
    v18[7] = inited;
    sub_1C106FF28();
    v15 = swift_allocObject();
    swift_weakInit();
    v16 = swift_allocObject();
    swift_weakInit();
    v17 = (_QWORD *)swift_allocObject();
    v17[2] = v15;
    v17[3] = v16;
    v17[4] = v18[0];
    v17[5] = v12;
    swift_retain();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    a3(sub_1C0CEE460, v17);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C0CED380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t inited;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v31 = a7;
  *(_QWORD *)&v32 = a6;
  v12 = sub_1C07ACF80(&qword_1ED760E68);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C484();
  sub_1C106C478();
  result = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if (!v7)
  {
    sub_1C0DC2568(a2, a3, a4, a5, v17, v18, v19, v20, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42);
    v22 = v21;
    v24 = v23;
    type metadata accessor for EscapeBlockMonitor();
    v25 = swift_allocObject();
    sub_1C07ACF80(&qword_1ED762CD0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C10812D0;
    *(_QWORD *)(inited + 32) = v25;
    v38 = inited;
    sub_1C106FF28();
    v27 = swift_allocObject();
    swift_weakInit();
    v28 = swift_allocObject();
    swift_weakInit();
    v29 = (_QWORD *)swift_allocObject();
    v29[2] = v27;
    v29[3] = v28;
    v29[4] = v22;
    v29[5] = v24;
    swift_retain();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    ((void (*)(uint64_t (*)(uint64_t), _QWORD *))v32)(sub_1C0CEE5D8, v29);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C0CED578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t inited;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v31 = a7;
  *(_QWORD *)&v32 = a6;
  v12 = sub_1C07ACF80(&qword_1ED760E68);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C484();
  sub_1C106C478();
  result = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if (!v7)
  {
    sub_1C0DC2568(a2, a3, a4, a5, v17, v18, v19, v20, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42);
    v22 = v21;
    v24 = v23;
    type metadata accessor for EscapeBlockMonitor();
    v25 = swift_allocObject();
    sub_1C07ACF80(&qword_1ED762CD0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C10812D0;
    *(_QWORD *)(inited + 32) = v25;
    v38 = inited;
    sub_1C106FF28();
    v27 = swift_allocObject();
    swift_weakInit();
    v28 = swift_allocObject();
    swift_weakInit();
    v29 = (_QWORD *)swift_allocObject();
    v29[2] = v27;
    v29[3] = v28;
    v29[4] = v22;
    v29[5] = v24;
    swift_retain();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    ((void (*)(uint64_t (*)(uint64_t), _QWORD *))v32)(sub_1C0CEE5D8, v29);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C0CED770(uint64_t a1, uint64_t a2, void (*a3)(uint64_t (*)(uint64_t a1), _QWORD *))
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD v18[8];

  v5 = sub_1C07ACF80(&qword_1ED760E68);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C484();
  sub_1C106C478();
  result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (!v3)
  {
    sub_1C0DC28A0();
    v18[0] = v10;
    v12 = v11;
    type metadata accessor for EscapeBlockMonitor();
    v13 = swift_allocObject();
    sub_1C07ACF80(&qword_1ED762CD0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C10812D0;
    *(_QWORD *)(inited + 32) = v13;
    v18[7] = inited;
    sub_1C106FF28();
    v15 = swift_allocObject();
    swift_weakInit();
    v16 = swift_allocObject();
    swift_weakInit();
    v17 = (_QWORD *)swift_allocObject();
    v17[2] = v15;
    v17[3] = v16;
    v17[4] = v18[0];
    v17[5] = v12;
    swift_retain();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    a3(sub_1C0CEE5D8, v17);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C0CED95C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t (*)(uint64_t a1), _QWORD *))
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD v18[8];

  v5 = sub_1C07ACF80(&qword_1ED760E68);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C484();
  sub_1C106C478();
  result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (!v3)
  {
    sub_1C0DC2990();
    v18[0] = v10;
    v12 = v11;
    type metadata accessor for EscapeBlockMonitor();
    v13 = swift_allocObject();
    sub_1C07ACF80(&qword_1ED762CD0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C10812D0;
    *(_QWORD *)(inited + 32) = v13;
    v18[7] = inited;
    sub_1C106FF28();
    v15 = swift_allocObject();
    swift_weakInit();
    v16 = swift_allocObject();
    swift_weakInit();
    v17 = (_QWORD *)swift_allocObject();
    v17[2] = v15;
    v17[3] = v16;
    v17[4] = v18[0];
    v17[5] = v12;
    swift_retain();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    a3(sub_1C0CEE5D8, v17);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C0CEDB48(uint64_t a1, uint64_t a2, void (*a3)(uint64_t (*)(uint64_t a1), _QWORD *))
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD v18[8];

  v5 = sub_1C07ACF80(&qword_1ED760E68);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106C484();
  sub_1C106C478();
  result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (!v3)
  {
    sub_1C0DC2A6C();
    v18[0] = v10;
    v12 = v11;
    type metadata accessor for EscapeBlockMonitor();
    v13 = swift_allocObject();
    sub_1C07ACF80(&qword_1ED762CD0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C10812D0;
    *(_QWORD *)(inited + 32) = v13;
    v18[7] = inited;
    sub_1C106FF28();
    v15 = swift_allocObject();
    swift_weakInit();
    v16 = swift_allocObject();
    swift_weakInit();
    v17 = (_QWORD *)swift_allocObject();
    v17[2] = v15;
    v17[3] = v16;
    v17[4] = v18[0];
    v17[5] = v12;
    swift_retain();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    a3(sub_1C0CEE5D8, v17);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C0CEDD34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  _QWORD v18[8];

  v6 = v5;
  if (qword_1ED762B20 != -1)
    swift_once();
  v12 = sub_1C106F544();
  sub_1C079E000(v12, (uint64_t)qword_1ED78D9F8);
  v13 = sub_1C106F538();
  v14 = sub_1C1070384();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)sub_1C0780FC8();
    *(_WORD *)v15 = 0;
    _os_log_impl(&dword_1C0771000, v13, v14, "RowUpdatableDatabaseTable: insert with callback", v15, 2u);
    sub_1C0776778();
  }

  (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 16))(a3, a5);
  swift_retain();
  v16 = swift_release();
  MEMORY[0x1E0C80A78](v16);
  v18[2] = a3;
  v18[3] = a4;
  v18[4] = a5;
  v18[5] = v6;
  v18[6] = a1;
  v18[7] = a2;
  sub_1C077FF50((uint64_t)sub_1C0CEE324, (uint64_t)v18);
  return swift_release();
}

uint64_t sub_1C0CEDE90(uint64_t a1, uint64_t a2, void (*a3)(uint64_t (*)(uint64_t a1), _QWORD *), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v8 = sub_1C0CECD98(a5, a2, a7);
  v10 = v9;
  type metadata accessor for EscapeBlockMonitor();
  v11 = swift_allocObject();
  sub_1C07ACF80(&qword_1ED762CD0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C10812D0;
  *(_QWORD *)(inited + 32) = v11;
  sub_1C106FF28();
  v13 = swift_allocObject();
  swift_weakInit();
  v14 = swift_allocObject();
  swift_weakInit();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v13;
  v15[3] = v14;
  v15[4] = v8;
  v15[5] = v10;
  swift_retain();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  a3(sub_1C0CEE5D8, v15);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0CEDFFC(uint64_t a1)
{
  return sub_1C0CEE010(a1);
}

uint64_t sub_1C0CEE010(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  _QWORD v14[5];
  uint64_t v15;

  v2 = sub_1C106C040();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0775864();
  if (swift_weakLoadStrong())
  {
    sub_1C0775864();
    Strong = swift_weakLoadStrong();
    swift_release();
    if (Strong)
    {
      sub_1C0A566D0(a1);
      v15 = v7;
      sub_1C07ACF80(&qword_1ED755238);
      sub_1C07F52E0(&qword_1ED7447A8, &qword_1ED755238, MEMORY[0x1E0DEAF38]);
      sub_1C106C070();
      sub_1C106C694();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return swift_release();
    }
    swift_release();
  }
  if (qword_1ED762AF0 != -1)
    swift_once();
  v9 = sub_1C106F544();
  sub_1C079E000(v9, (uint64_t)qword_1ED78D9E0);
  v10 = sub_1C106F538();
  v11 = sub_1C107039C();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    *(_DWORD *)v12 = 136315138;
    v14[4] = sub_1C0788DAC(0xD000000000000106, 0x80000001C1108FC0, &v15);
    sub_1C10705AC();
    _os_log_impl(&dword_1C0771000, v10, v11, "%s", v12, 0xCu);
    swift_arrayDestroy();
    sub_1C0776778();
  }

  sub_1C08E29B4();
  swift_allocError();
  *(_OWORD *)v13 = xmmword_1C1081A00;
  *(_QWORD *)(v13 + 16) = 0xD000000000000106;
  *(_QWORD *)(v13 + 24) = 0x80000001C1108FC0;
  *(_OWORD *)(v13 + 32) = 0u;
  *(_OWORD *)(v13 + 48) = 0u;
  *(_BYTE *)(v13 + 64) = 9;
  return swift_willThrow();
}

uint64_t sub_1C0CEE2F4(uint64_t a1)
{
  uint64_t *v1;

  return sub_1C0DC23D4(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1C0CEE300(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1C0CEC6D8(a1, a2, *v2, v2[1], v2[2], v2[3], (uint64_t)sub_1C0CEE4A4);
}

uint64_t sub_1C0CEE324(uint64_t a1)
{
  uint64_t v1;

  return sub_1C0CEDE90(a1, *(_QWORD *)(v1 + 40), *(void (**)(uint64_t (*)(uint64_t), _QWORD *))(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1C0CEE344()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C0CEE36C(uint64_t a1, const void *a2, void (*a3)(uint64_t (*)(uint64_t a1), _QWORD *))
{
  _BYTE __dst[72];

  memcpy(__dst, a2, sizeof(__dst));
  return sub_1C0CECFA8(a1, (uint64_t)__dst, a3);
}

uint64_t sub_1C0CEE3D8(uint64_t a1, const void *a2, void (*a3)(uint64_t (*)(uint64_t a1), _QWORD *))
{
  _BYTE __dst[72];

  memcpy(__dst, a2, sizeof(__dst));
  return sub_1C0CED194(a1, (uint64_t)__dst, a3);
}

uint64_t sub_1C0CEE444()
{
  uint64_t v0;
  const void *v1;
  void (*v2)(uint64_t (*)(uint64_t), _QWORD *);

  sub_1C0788880();
  return sub_1C0CEE3D8(v0, v1, v2);
}

uint64_t sub_1C0CEE460(uint64_t a1)
{
  return sub_1C0CEE010(a1);
}

uint64_t sub_1C0CEE47C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0CED380(a1, *a2, a2[1], a2[2], a2[3], a3, a4);
}

uint64_t sub_1C0CEE4A4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  sub_1C0788880();
  return sub_1C0CEE47C(v0, v1, v2, v3);
}

uint64_t sub_1C0CEE4C0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0CED578(a1, *a2, a2[1], a2[2], a2[3], a3, a4);
}

uint64_t sub_1C0CEE4E8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  sub_1C0788880();
  return sub_1C0CEE4C0(v0, v1, v2, v3);
}

uint64_t sub_1C0CEE504(uint64_t a1, uint64_t a2, void (*a3)(uint64_t (*)(uint64_t a1), _QWORD *))
{
  __int128 v3;
  _OWORD v5[2];
  uint64_t v6;

  v3 = *(_OWORD *)(a2 + 16);
  v5[0] = *(_OWORD *)a2;
  v5[1] = v3;
  v6 = *(_QWORD *)(a2 + 32);
  return sub_1C0CED95C(a1, (uint64_t)v5, a3);
}

uint64_t sub_1C0CEE534()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t (*)(uint64_t), _QWORD *);

  sub_1C0788880();
  return sub_1C0CEE504(v0, v1, v2);
}

uint64_t sub_1C0CEE550()
{
  uint64_t v0;
  const void *v1;
  void (*v2)(uint64_t (*)(uint64_t), _QWORD *);

  sub_1C0788880();
  return sub_1C0CEE36C(v0, v1, v2);
}

uint64_t sub_1C0CEE56C()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t (*)(uint64_t), _QWORD *);

  sub_1C0788880();
  return sub_1C0CEDB48(v0, v1, v2);
}

uint64_t sub_1C0CEE588()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t (*)(uint64_t), _QWORD *);

  sub_1C0788880();
  return sub_1C0CED770(v0, v1, v2);
}

uint64_t sub_1C0CEE5A4()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0CEE5D8(uint64_t a1)
{
  return sub_1C0CEE460(a1);
}

uint64_t RTAddress.rtSubPremises.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;

  if (!sub_1C0CEE980(v0))
    return 0;
  sub_1C0A57AD4();
  v2 = v1;
  swift_bridgeObjectRelease();
  return v2;
}

void sub_1C0CEE634()
{
  sub_1C0CEE654();
}

void sub_1C0CEE654()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(v0, sel_identifier);
  sub_1C106AE10();

}

uint64_t sub_1C0CEE6A0()
{
  return RTAddress.rtSubPremises.getter();
}

uint64_t sub_1C0CEE6C0()
{
  return sub_1C0CEE6E0();
}

uint64_t sub_1C0CEE6E0()
{
  void *v0;

  return sub_1C080AD1C(v0, (SEL *)&selRef_subThoroughfare);
}

uint64_t sub_1C0CEE700()
{
  return sub_1C0CEE720();
}

uint64_t sub_1C0CEE720()
{
  void *v0;

  return sub_1C080AD1C(v0, (SEL *)&selRef_thoroughfare);
}

uint64_t sub_1C0CEE740()
{
  return sub_1C0CEE760();
}

uint64_t sub_1C0CEE760()
{
  void *v0;

  return sub_1C080AD1C(v0, (SEL *)&selRef_subLocality);
}

uint64_t sub_1C0CEE780()
{
  return sub_1C0CEE7A0();
}

uint64_t sub_1C0CEE7A0()
{
  void *v0;

  return sub_1C080AD1C(v0, (SEL *)&selRef_locality);
}

uint64_t sub_1C0CEE7C0()
{
  return sub_1C0CEE7E0();
}

uint64_t sub_1C0CEE7E0()
{
  void *v0;

  return sub_1C080AD1C(v0, (SEL *)&selRef_subAdministrativeArea);
}

uint64_t sub_1C0CEE800()
{
  return sub_1C0CEE820();
}

uint64_t sub_1C0CEE820()
{
  void *v0;

  return sub_1C080AD1C(v0, (SEL *)&selRef_administrativeArea);
}

uint64_t sub_1C0CEE840()
{
  return sub_1C0CEE860();
}

uint64_t sub_1C0CEE860()
{
  void *v0;

  return sub_1C080AD1C(v0, (SEL *)&selRef_administrativeAreaCode);
}

uint64_t sub_1C0CEE880()
{
  return sub_1C0CEE8A0();
}

uint64_t sub_1C0CEE8A0()
{
  void *v0;

  return sub_1C080AD1C(v0, (SEL *)&selRef_postalCode);
}

uint64_t sub_1C0CEE8C0()
{
  return sub_1C0CEE8E0();
}

uint64_t sub_1C0CEE8E0()
{
  void *v0;

  return sub_1C080AD1C(v0, (SEL *)&selRef_country);
}

uint64_t sub_1C0CEE900()
{
  return sub_1C0CEE920();
}

uint64_t sub_1C0CEE920()
{
  void *v0;

  return sub_1C080AD1C(v0, (SEL *)&selRef_iso3166CountryCode);
}

uint64_t sub_1C0CEE940()
{
  return sub_1C0CEE960();
}

uint64_t sub_1C0CEE960()
{
  void *v0;

  return sub_1C080AD1C(v0, (SEL *)&selRef_subPremise);
}

uint64_t sub_1C0CEE980(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_subPremises);
  if (!v1)
    return 0;
  v2 = v1;
  sub_1C0CEEA44();
  v3 = sub_1C106FF04();

  return v3;
}

uint64_t dispatch thunk of RTAddressComplying.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of RTAddressComplying.rtSubPremises.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of RTAddressComplying.subThoroughfare.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of RTAddressComplying.thoroughfare.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of RTAddressComplying.subLocality.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of RTAddressComplying.locality.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of RTAddressComplying.subAdministrativeArea.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of RTAddressComplying.administrativeArea.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of RTAddressComplying.administrativeAreaCode.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of RTAddressComplying.postalCode.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of RTAddressComplying.country.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of RTAddressComplying.iso3166CountryCode.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of RTAddressSubPremiseComplying.subPremise.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

unint64_t sub_1C0CEEA44()
{
  unint64_t result;

  result = qword_1EF639B68;
  if (!qword_1EF639B68)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF639B68);
  }
  return result;
}

id sub_1C0CEEA80()
{
  return sub_1C0CEEAA0();
}

id sub_1C0CEEAA0()
{
  void *v0;

  return objc_msgSend(v0, sel_latitude);
}

id sub_1C0CEEAB0()
{
  return sub_1C0CEEAD0();
}

id sub_1C0CEEAD0()
{
  void *v0;

  return objc_msgSend(v0, sel_longitude);
}

id sub_1C0CEEAE0()
{
  return sub_1C0CEEB00();
}

id sub_1C0CEEB00()
{
  void *v0;

  return objc_msgSend(v0, sel_horizontalUncertainty);
}

uint64_t RTLocationOfInterestType.description.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD v14[2];
  uint64_t v15;
  uint64_t v16;

  v2 = sub_1C106F544();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = 1802661751;
  switch(a1)
  {
    case -1:
      sub_1C07A139C();
      break;
    case 0:
      v6 = 1701670760;
      break;
    case 1:
      return v6;
    case 2:
      v6 = 0x6C6F6F686373;
      break;
    case 3:
      v6 = 7174503;
      break;
    default:
      sub_1C07A139C();
      sub_1C106F154();
      v7 = sub_1C106F538();
      v8 = sub_1C107039C();
      if (os_log_type_enabled(v7, v8))
      {
        v9 = (uint8_t *)swift_slowAlloc();
        v10 = swift_slowAlloc();
        v15 = a1;
        v16 = v10;
        *(_DWORD *)v9 = 136315138;
        v14[1] = v9 + 4;
        type metadata accessor for RTLocationOfInterestType(0);
        v11 = sub_1C106FB5C();
        v15 = sub_1C0788DAC(v11, v12, &v16);
        sub_1C10705AC();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C0771000, v7, v8, "RTLocationOfInterestType has unexpected case: %s", v9, 0xCu);
        swift_arrayDestroy();
        sub_1C0776778();
      }

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      break;
  }
  return v6;
}

uint64_t dispatch thunk of RTLocationComplying.latitude.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of RTLocationComplying.longitude.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of RTLocationComplying.horizontalUncertainty.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t RTLocationOfInterest.rtMapItem.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1C0CEED70((SEL *)&selRef_mapItem, (unint64_t *)&qword_1ED748110, (uint64_t)&protocol witness table for RTMapItem, a1);
}

uint64_t RTLocationOfInterest.rtLocation.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1C0CEED70((SEL *)&selRef_location, (unint64_t *)&qword_1ED748100, (uint64_t)&protocol witness table for RTLocation, a1);
}

uint64_t sub_1C0CEED70@<X0>(SEL *a1@<X0>, unint64_t *a2@<X1>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  void *v4;
  id v8;
  uint64_t result;

  v8 = objc_msgSend(v4, *a1);
  result = sub_1C07D4B70(0, a2);
  a4[3] = result;
  a4[4] = a3;
  *a4 = v8;
  return result;
}

id RTLocationOfInterest.loiType.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_type);
}

uint64_t RTLocationOfInterest.rtVisits.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;

  v1 = objc_msgSend(v0, sel_visits);
  sub_1C07D4B70(0, &qword_1EF639B60);
  sub_1C106FF04();

  sub_1C0A57BC0();
  v3 = v2;
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1C0CEEE60()
{
  return sub_1C0CEEE80();
}

uint64_t sub_1C0CEEE80()
{
  void *v0;

  return sub_1C080AD1C(v0, (SEL *)&selRef_preferredName);
}

uint64_t sub_1C0CEEEA0()
{
  return sub_1C0CEEEC0();
}

uint64_t sub_1C0CEEEC0()
{
  void *v0;

  return sub_1C080AD1C(v0, (SEL *)&selRef_customLabel);
}

uint64_t sub_1C0CEEEE0@<X0>(_QWORD *a1@<X8>)
{
  return RTLocationOfInterest.rtLocation.getter(a1);
}

id sub_1C0CEEF00()
{
  return sub_1C0CEEF20();
}

id sub_1C0CEEF20()
{
  void *v0;

  return objc_msgSend(v0, sel_confidence);
}

id sub_1C0CEEF30()
{
  return RTLocationOfInterest.loiType.getter();
}

id sub_1C0CEEF50()
{
  return sub_1C0CEEF70();
}

id sub_1C0CEEF70()
{
  void *v0;

  return objc_msgSend(v0, sel_typeSource);
}

uint64_t sub_1C0CEEF80@<X0>(_QWORD *a1@<X8>)
{
  return RTLocationOfInterest.rtMapItem.getter(a1);
}

uint64_t sub_1C0CEEFA0()
{
  return RTLocationOfInterest.rtVisits.getter();
}

uint64_t dispatch thunk of RTLocationOfInterestComplying.preferredName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of RTLocationOfInterestComplying.customLabel.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of RTLocationOfInterestComplying.rtLocation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of RTLocationOfInterestComplying.confidence.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of RTLocationOfInterestComplying.loiType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of RTLocationOfInterestComplying.typeSource.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of RTLocationOfInterestComplying.rtMapItem.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of RTLocationOfInterestComplying.rtVisits.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of RTLocationOfInterestComplying.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

unint64_t RTLocationOfInterestVisit.rtLocation.getter@<X0>(_QWORD *a1@<X8>)
{
  void *v1;
  id v3;
  unint64_t result;

  v3 = objc_msgSend(v1, sel_location);
  result = sub_1C0CEF058();
  a1[3] = result;
  a1[4] = &protocol witness table for RTLocation;
  *a1 = v3;
  return result;
}

unint64_t sub_1C0CEF058()
{
  unint64_t result;

  result = qword_1ED748100;
  if (!qword_1ED748100)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED748100);
  }
  return result;
}

void sub_1C0CEF094()
{
  sub_1C0CEF144((SEL *)&selRef_entryDate, (void (*)(void))MEMORY[0x1E0CB07E8]);
}

void sub_1C0CEF0C4()
{
  sub_1C0CEF144((SEL *)&selRef_exitDate, (void (*)(void))MEMORY[0x1E0CB07E8]);
}

unint64_t sub_1C0CEF0F4@<X0>(_QWORD *a1@<X8>)
{
  return RTLocationOfInterestVisit.rtLocation.getter(a1);
}

void sub_1C0CEF114()
{
  sub_1C0CEF144((SEL *)&selRef_identifier, (void (*)(void))MEMORY[0x1E0CB0958]);
}

void sub_1C0CEF144(SEL *a1, void (*a2)(void))
{
  void *v2;
  id v4;

  v4 = objc_msgSend(v2, *a1);
  a2();

}

id sub_1C0CEF198()
{
  return sub_1C0CEF1E0();
}

uint64_t dispatch thunk of RTLocationOfInterestVisitComplying.entryDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of RTLocationOfInterestVisitComplying.exitDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of RTLocationOfInterestVisitComplying.rtLocation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of RTLocationOfInterestVisitComplying.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of RTLocationOfInterestVisitComplying.locationOfInterestConfidence.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

id sub_1C0CEF1E0()
{
  void *v0;

  return objc_msgSend(v0, sel_locationOfInterestConfidence);
}

id RTMapItem.geoMuid.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_muid);
}

unint64_t RTMapItem.rtAddress.getter@<X0>(_QWORD *a1@<X8>)
{
  void *v1;
  id v3;
  unint64_t result;

  v3 = objc_msgSend(v1, sel_address);
  result = sub_1C0CEF250();
  a1[3] = result;
  a1[4] = &protocol witness table for RTAddress;
  *a1 = v3;
  return result;
}

unint64_t sub_1C0CEF250()
{
  unint64_t result;

  result = qword_1ED748108;
  if (!qword_1ED748108)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED748108);
  }
  return result;
}

unint64_t sub_1C0CEF28C@<X0>(_QWORD *a1@<X8>)
{
  return RTMapItem.rtAddress.getter(a1);
}

id sub_1C0CEF2AC()
{
  return RTMapItem.geoMuid.getter();
}

uint64_t sub_1C0CEF2CC()
{
  return sub_1C0CEF30C();
}

uint64_t dispatch thunk of RTMapItemComplying.rtAddress.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of RTMapItemComplying.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of RTMapItemComplying.geoMuid.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of RTMapItemComplying.category.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1C0CEF30C()
{
  void *v0;

  return sub_1C080AD1C(v0, (SEL *)&selRef_category);
}

double RTPlaceInference.rtMapItem.getter@<D0>(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  id v4;
  double result;

  v3 = objc_msgSend(v1, sel_mapItem);
  if (v3)
  {
    v4 = v3;
    *(_QWORD *)(a1 + 24) = sub_1C0CEF390();
    *(_QWORD *)(a1 + 32) = &protocol witness table for RTMapItem;
    *(_QWORD *)a1 = v4;
  }
  else
  {
    *(_QWORD *)(a1 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

unint64_t sub_1C0CEF390()
{
  unint64_t result;

  result = qword_1ED748110;
  if (!qword_1ED748110)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED748110);
  }
  return result;
}

uint64_t sub_1C0CEF3CC()
{
  return sub_1C0CEF3EC();
}

uint64_t sub_1C0CEF3EC()
{
  void *v0;

  return sub_1C0CEF6F4(v0);
}

double sub_1C0CEF3F4@<D0>(uint64_t a1@<X8>)
{
  return RTPlaceInference.rtMapItem.getter(a1);
}

id sub_1C0CEF414()
{
  return sub_1C0CEF434();
}

id sub_1C0CEF434()
{
  void *v0;

  return objc_msgSend(v0, sel_userType);
}

uint64_t sub_1C0CEF444@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0CEF464(a1);
}

uint64_t sub_1C0CEF464@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(v1, sel_loiIdentifier);
  if (v3)
  {
    v4 = v3;
    sub_1C106AE10();

    v5 = 0;
  }
  else
  {
    v5 = 1;
  }
  v6 = sub_1C106AE28();
  return sub_1C07B2D8C(a1, v5, 1, v6);
}

uint64_t RTPlaceInferenceUserSpecificPlaceType.description.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD v14[2];
  uint64_t v15;
  uint64_t v16;

  v2 = sub_1C106F544();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = 1802661751;
  switch(a1)
  {
    case 0:
      sub_1C07A139C();
      break;
    case 1:
      v6 = 1701670760;
      break;
    case 2:
      return v6;
    case 3:
      v6 = 0x6C6F6F686373;
      break;
    case 4:
      v6 = 7174503;
      break;
    default:
      sub_1C07A139C();
      sub_1C106F154();
      v7 = sub_1C106F538();
      v8 = sub_1C107039C();
      if (os_log_type_enabled(v7, v8))
      {
        v9 = (uint8_t *)swift_slowAlloc();
        v10 = swift_slowAlloc();
        v15 = a1;
        v16 = v10;
        *(_DWORD *)v9 = 136315138;
        v14[1] = v9 + 4;
        type metadata accessor for RTPlaceInferenceUserSpecificPlaceType(0);
        v11 = sub_1C106FB5C();
        v15 = sub_1C0788DAC(v11, v12, &v16);
        sub_1C10705AC();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C0771000, v7, v8, "RTPlaceInferenceUserSpecificPlaceType has unexpected case: %s", v9, 0xCu);
        swift_arrayDestroy();
        sub_1C0776778();
      }

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      break;
  }
  return v6;
}

uint64_t dispatch thunk of RTPlaceInferenceComplying.preferredName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of RTPlaceInferenceComplying.rtMapItem.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of RTPlaceInferenceComplying.userType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of RTPlaceInferenceComplying.confidence.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of RTPlaceInferenceComplying.loiIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_1C0CEF6F4(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_preferredName);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1C106FB14();

  return v3;
}

double RTVisit.rtLocation.getter()
{
  return sub_1C09D001C((SEL *)&selRef_location, (unint64_t *)&qword_1ED748100, 0x1E0D183B0, (uint64_t)&protocol witness table for RTLocation);
}

double RTVisit.inferredLocation.getter()
{
  return sub_1C09D001C((SEL *)&selRef_placeInference, &qword_1ED741550, 0x1E0D18420, (uint64_t)&protocol witness table for RTPlaceInference);
}

uint64_t sub_1C0CEF79C()
{
  return sub_1C0CEF7EC((SEL *)&selRef_entry);
}

uint64_t sub_1C0CEF7C4()
{
  return sub_1C0CEF7EC((SEL *)&selRef_exit);
}

uint64_t sub_1C0CEF7EC(SEL *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = sub_1C078F50C(a1);
  if (v2)
  {
    v3 = v2;
    sub_1C106AD98();

    v4 = 0;
  }
  else
  {
    v4 = 1;
  }
  v5 = sub_1C106ADE0();
  return sub_1C07B2D8C(v1, v4, 1, v5);
}

double sub_1C0CEF848()
{
  return RTVisit.rtLocation.getter();
}

double sub_1C0CEF868()
{
  return RTVisit.inferredLocation.getter();
}

uint64_t dispatch thunk of RTVisitComplying.entry.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of RTVisitComplying.exit.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of RTVisitComplying.rtLocation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of RTVisitComplying.inferredLocation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of RTVisitComplying.confidence.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

void sub_1C0CEF8B0(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  __int128 v5;
  uint64_t v6;

  v5 = *a1;
  v6 = *((_QWORD *)a1 + 2);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC24IntelligencePlatformCore18SameEmployerSignal____lazy_storage___featureNames) = 0;
  *(_OWORD *)(v3 + 16) = v5;
  *(_QWORD *)(v3 + 32) = v6;
  *(_OWORD *)(v3 + 40) = *(__int128 *)((char *)a1 + 24);
  sub_1C0882E74(a2, v3 + OBJC_IVAR____TtC24IntelligencePlatformCore18SameEmployerSignal_config);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC24IntelligencePlatformCore18SameEmployerSignal_store) = a3;
  sub_1C0778534();
}

void sub_1C0CEF914()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OBJC_IVAR____TtC24IntelligencePlatformCore18SameEmployerSignal____lazy_storage___featureNames;
  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore18SameEmployerSignal____lazy_storage___featureNames))
  {
    sub_1C0AA7704();
    *(_QWORD *)(v0 + v1) = v2;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_bridgeObjectRelease();
  }
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C077671C();
}

void sub_1C0CEF974()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(unint64_t, uint64_t, uint64_t);
  unint64_t v28;
  uint64_t v29;
  void (*v30)(_QWORD, _QWORD, _QWORD);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, _QWORD, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __n128 *v69;
  uint64_t v70;
  int *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  __int128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  __int128 v104;
  uint64_t v105;
  uint64_t inited;
  __int128 v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  NSObject *v112;
  os_log_type_t v113;
  uint8_t *v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unsigned int v124;
  void (*v125)(uint64_t, _QWORD, uint64_t);
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  __int128 v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  void (*v139)(uint64_t, uint64_t);
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  void (*v143)(unint64_t, uint64_t, uint64_t);
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  int *v148;
  void (*v149)(_QWORD, _QWORD, _QWORD);
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  __int128 v154;
  __int128 v155;
  uint64_t v156;
  __int128 v157;
  uint64_t v158;

  v148 = (int *)type metadata accessor for GraphTriple(0);
  v130 = *((_QWORD *)v148 - 1);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v1);
  sub_1C077AE40();
  v152 = v2;
  sub_1C07ACF80(&qword_1ED756690);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v3);
  sub_1C077AE40();
  v138 = v4;
  v5 = sub_1C106D9A8();
  v139 = *(void (**)(uint64_t, uint64_t))(v5 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v7);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v8);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v9);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v10);
  v140 = (uint64_t)&v119 - v11;
  v12 = sub_1C106D9B4();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  sub_1C077AE40();
  v137 = v14;
  sub_1C07ACF80((uint64_t *)&unk_1ED75EA40);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v119 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1C106E590();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v20);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v119 - v22;
  v129 = v0;
  v24 = *(_QWORD *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore18SameEmployerSignal_store);
  sub_1C0AAD644();
  sub_1C0AA4724(v25, (uint64_t)v17);
  v26 = v18;
  swift_bridgeObjectRelease();
  if (sub_1C07B2D80((uint64_t)v17, 1, v18) == 1)
  {
    sub_1C0784B6C((uint64_t)v17, (uint64_t *)&unk_1ED75EA40);
  }
  else
  {
    v27 = *(void (**)(unint64_t, uint64_t, uint64_t))(v19 + 32);
    v131 = v23;
    v143 = v27;
    v27((unint64_t)v23, (uint64_t)v17, v18);
    sub_1C07ACF80(&qword_1ED7603D8);
    v28 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    v150 = *(_QWORD *)(v19 + 72);
    v29 = swift_allocObject();
    v132 = xmmword_1C1079220;
    *(_OWORD *)(v29 + 16) = xmmword_1C1079220;
    v144 = v28;
    v30 = *(void (**)(_QWORD, _QWORD, _QWORD))(v19 + 16);
    v151 = v26;
    v149 = v30;
    v30(v29 + v28, v23, v26);
    v133 = v24;
    sub_1C077D144();
    sub_1C0AA8F40();
    v126 = v31;
    v32 = sub_1C07ACF80(&qword_1ED75E838);
    v33 = *(_QWORD *)(sub_1C106E41C() - 8);
    v34 = *(_QWORD *)(v33 + 72);
    v35 = *(unsigned __int8 *)(v33 + 80);
    v36 = (v35 + 32) & ~v35;
    v123 = v32;
    v122 = v36 + v34;
    v121 = v35 | 7;
    v37 = (__n128 *)swift_allocObject();
    sub_1C07910FC(v37);
    *(_QWORD *)(v38 - 256) = v36;
    sub_1C106E32C();
    sub_1C0AA7870();
    v128 = v12;
    v39 = *MEMORY[0x1E0D3C448];
    v127 = v13;
    v147 = v19;
    v40 = (void (*)(uint64_t, _QWORD, uint64_t))*((_QWORD *)v139 + 13);
    v41 = v140;
    sub_1C07A0B94(v140, v39);
    v42 = v141;
    sub_1C07A0B94(v141, v39);
    v43 = v134;
    sub_1C07A0B94(v134, v39);
    v44 = v135;
    sub_1C07A0B94(v135, v39);
    v45 = v136;
    v124 = v39;
    v125 = v40;
    v40(v136, v39, v5);
    v117 = v45;
    v118 = 0;
    v46 = v137;
    sub_1C106D864();
    swift_bridgeObjectRelease();
    sub_1C07767AC();
    v47 = (void (*)(uint64_t, uint64_t))*((_QWORD *)v139 + 1);
    sub_1C0799A00(v45);
    sub_1C0799A00(v44);
    sub_1C0799A00(v43);
    sub_1C0799A00(v42);
    v139 = v47;
    v47(v41, v5);
    v48 = sub_1C106EB78();
    v49 = v138;
    v126 = v48;
    sub_1C07B2D8C(v138, 1, 1, v48);
    v50 = sub_1C07972C0(v46, v49);
    sub_1C0784B6C(v49, &qword_1ED756690);
    v127 = *(_QWORD *)(v127 + 8);
    ((void (*)(uint64_t, uint64_t))v127)(v46, v128);
    swift_release();
    v51 = *(_QWORD *)(v50 + 16);
    v52 = v147;
    v53 = v131;
    if (v51)
    {
      v120 = v5;
      sub_1C0798A1C(MEMORY[0x1E0DEE9D8]);
      sub_1C09D30E0();
      sub_1C079AAAC();
      v119 = v50;
      v55 = v50 + v54;
      v57 = *(_QWORD *)(v56 + 72);
      v58 = v158;
      do
      {
        v59 = v152;
        sub_1C083F944(v55, v152, type metadata accessor for GraphTriple);
        v60 = (uint64_t *)(v59 + v148[8]);
        v61 = *v60;
        v62 = v60[1];
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        sub_1C07B1F90(v59, type metadata accessor for GraphTriple);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C078F568();
          sub_1C09D30E0();
          v58 = v158;
        }
        v64 = *(_QWORD *)(v58 + 16);
        v63 = *(_QWORD *)(v58 + 24);
        if (v64 >= v63 >> 1)
        {
          sub_1C079E4B8(v63);
          sub_1C09D30E0();
          v58 = v158;
        }
        *(_QWORD *)(v58 + 16) = v64 + 1;
        v65 = v58 + 16 * v64;
        *(_QWORD *)(v65 + 32) = v61;
        *(_QWORD *)(v65 + 40) = v62;
        v55 += v57;
        --v51;
      }
      while (v51);
      swift_bridgeObjectRelease();
      v52 = v147;
      v53 = v131;
      v5 = v120;
      v66 = v136;
    }
    else
    {
      v66 = v45;
      sub_1C077B5B4();
      v58 = MEMORY[0x1E0DEE9D8];
    }
    v67 = v141;
    v68 = v140;
    if (*(_QWORD *)(v58 + 16))
    {
      v69 = (__n128 *)swift_allocObject();
      v70 = v66;
      sub_1C07910FC(v69);
      sub_1C077D144();
      sub_1C106E32C();
      sub_1C0AA7870();
      v148 = v71;
      sub_1C0898D28(v58);
      v72 = v124;
      v125(v68, v124, v5);
      sub_1C07A0B94(v67, v72);
      v73 = v67;
      v74 = v134;
      sub_1C07A0B94(v134, v72);
      v75 = v135;
      sub_1C07A0B94(v135, v72);
      sub_1C07A0B94(v70, v72);
      v117 = v70;
      v118 = 0;
      v76 = v137;
      sub_1C106D864();
      sub_1C07767AC();
      swift_bridgeObjectRelease();
      v139(v70, v5);
      sub_1C0799A00(v75);
      sub_1C0799A00(v74);
      sub_1C0799A00(v73);
      sub_1C0799A00(v68);
      v77 = v138;
      sub_1C07B2D8C(v138, 1, 1, v126);
      v78 = (int *)sub_1C07972C0(v76, v77);
      sub_1C0784B6C(v77, &qword_1ED756690);
      ((void (*)(uint64_t, uint64_t))v127)(v76, v128);
      swift_release();
      v79 = *((_QWORD *)v78 + 2);
      if (v79)
      {
        sub_1C0798A1C(MEMORY[0x1E0DEE9D8]);
        sub_1C09D32B4();
        sub_1C079AAAC();
        v148 = v78;
        v81 = (uint64_t)v78 + v80;
        v83 = *(_QWORD *)(v82 + 72);
        v84 = v151;
        v85 = v146;
        do
        {
          v86 = v152;
          sub_1C083F944(v81, v152, type metadata accessor for GraphTriple);
          sub_1C0793A98(v85, v86);
          sub_1C07B1F90(v86, type metadata accessor for GraphTriple);
          v87 = v158;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C078F568();
            sub_1C09D32B4();
            v84 = v151;
            v87 = v158;
          }
          v89 = *(_QWORD *)(v87 + 16);
          v88 = *(_QWORD *)(v87 + 24);
          if (v89 >= v88 >> 1)
          {
            sub_1C079E4B8(v88);
            sub_1C09D32B4();
            v84 = v151;
            v87 = v158;
          }
          *(_QWORD *)(v87 + 16) = v89 + 1;
          v85 = v146;
          v143(v87 + v144 + v89 * v150, v146, v84);
          v158 = v87;
          v81 += v83;
          --v79;
        }
        while (v79);
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1C0778580();
        v87 = MEMORY[0x1E0DEE9D8];
      }
      v90 = v129;
      v156 = *(_QWORD *)(v129 + 48);
      v91 = *(_OWORD *)(v129 + 32);
      v154 = *(_OWORD *)(v129 + 16);
      v155 = v91;
      v92 = *(_QWORD *)(v87 + 16);
      if (v92)
      {
        sub_1C0797D70();
        sub_1C0798A1C(MEMORY[0x1E0DEE9D8]);
        sub_1C09D3AF4();
        v148 = (int *)objc_opt_self();
        v93 = v87 + v144;
        do
        {
          v94 = v145;
          sub_1C0793A98(v145, v93);
          v95 = sub_1C106E530();
          v96 = v151;
          v97 = v95;
          v152 = v98;
          v99 = objc_msgSend(v148, sel_featureValueWithInt64_, 1);
          (*(void (**)(uint64_t, uint64_t))(v147 + 8))(v94, v96);
          v100 = v158;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C078F568();
            sub_1C09D3AF4();
            v100 = v158;
          }
          v102 = *(_QWORD *)(v100 + 16);
          v101 = *(_QWORD *)(v100 + 24);
          if (v102 >= v101 >> 1)
          {
            sub_1C079E4B8(v101);
            sub_1C09D3AF4();
            v100 = v158;
          }
          *(_QWORD *)(v100 + 16) = v102 + 1;
          v103 = v100 + 40 * v102;
          strcpy((char *)(v103 + 32), "sameEmployer");
          *(_BYTE *)(v103 + 45) = 0;
          *(_WORD *)(v103 + 46) = -5120;
          *(_QWORD *)(v103 + 48) = v97;
          *(_QWORD *)(v103 + 56) = v152;
          *(_QWORD *)(v103 + 64) = v99;
          v93 += v150;
          --v92;
        }
        while (v92);
        sub_1C07767AC();
        v90 = v129;
      }
      else
      {
        sub_1C0797D70();
        sub_1C07767AC();
        v100 = MEMORY[0x1E0DEE9D8];
      }
      v104 = v155;
      v105 = v156;
      sub_1C07ACF80(&qword_1ED762CB0);
      inited = swift_initStackObject();
      v107 = v154;
      v157 = v154;
      *(_OWORD *)(inited + 16) = v132;
      *(_OWORD *)(inited + 32) = v107;
      sub_1C0797D70();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C077D144();
      sub_1C07B35DC((uint64_t)&v157);
      v108 = v142;
      v109 = sub_1C0A16460(v100, (uint64_t *)&v154);
      MEMORY[0x1E0C80A78](v109);
      *(&v119 - 6) = inited;
      *(_OWORD *)(&v119 - 5) = v104;
      *(&v119 - 3) = v105;
      v117 = v110;
      sub_1C078017C();
      if (v108)
      {
        sub_1C0778580();
        swift_bridgeObjectRelease();
        sub_1C077B5B4();
        swift_release();
        sub_1C07767AC();
        sub_1C08EC9F4((uint64_t)&v154);
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1C077B5B4();
        swift_release();
        sub_1C07767AC();
        sub_1C08EC9F4((uint64_t)&v154);
        sub_1C0778580();
        if (qword_1ED762AF0 != -1)
          swift_once();
        v111 = sub_1C106F544();
        sub_1C079E000(v111, (uint64_t)qword_1ED78D9E0);
        swift_retain_n();
        v112 = sub_1C106F538();
        v113 = sub_1C1070378();
        if (os_log_type_enabled(v112, v113))
        {
          v114 = (uint8_t *)swift_slowAlloc();
          v158 = swift_slowAlloc();
          *(_DWORD *)v114 = 136315138;
          v115 = *(_QWORD *)(v90 + OBJC_IVAR____TtC24IntelligencePlatformCore18SameEmployerSignal_config);
          v116 = *(_QWORD *)(v90 + OBJC_IVAR____TtC24IntelligencePlatformCore18SameEmployerSignal_config + 8);
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          v153 = sub_1C0788DAC(v115, v116, &v158);
          sub_1C10705AC();
          sub_1C07A2634();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C0771000, v112, v113, "SignalView %s: wrote features", v114, 0xCu);
          swift_arrayDestroy();
          sub_1C0776778();
        }
        sub_1C07A2634();

      }
      (*(void (**)(char *, uint64_t))(v147 + 8))(v131, v151);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v151);
      swift_bridgeObjectRelease();
    }
  }
}

void sub_1C0CF06C8()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C07B1F90(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore18SameEmployerSignal_config, (uint64_t (*)(_QWORD))_s10ViewConfigVMa);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C077671C();
}

uint64_t sub_1C0CF0738()
{
  sub_1C0CF06C8();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0CF075C()
{
  return type metadata accessor for SameEmployerSignal();
}

uint64_t type metadata accessor for SameEmployerSignal()
{
  uint64_t result;

  result = qword_1EF647628;
  if (!qword_1EF647628)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C0CF079C()
{
  uint64_t result;
  unint64_t v1;

  result = _s10ViewConfigVMa();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1C0CF082C()
{
  uint64_t v0;

  sub_1C0CEF974();
  return sub_1C0882DB4(*(uint64_t (**)(void))(v0 + 8));
}

void sub_1C0CF0878(uint64_t a1@<X8>)
{
  _QWORD *v1;

  sub_1C083F944(*v1 + OBJC_IVAR____TtC24IntelligencePlatformCore18SameEmployerSignal_config, a1, (uint64_t (*)(_QWORD))_s10ViewConfigVMa);
}

void sub_1C0CF08A8()
{
  sub_1C0CEF914();
}

uint64_t static Daemon.confstr(_:)()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  sub_1C106A87C();
  swift_allocObject();
  v0 = sub_1C106A858();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    if (sub_1C106A84C())
    {
      result = sub_1C106A870();
      if (__OFSUB__(0, result))
        goto LABEL_12;
    }
    swift_allocObject();
    v2 = sub_1C106A840();
    swift_release();
    v0 = v2;
  }
  result = sub_1C106A84C();
  if (!result)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  v3 = result;
  result = sub_1C106A870();
  v4 = -result;
  if (__OFSUB__(0, result))
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v5 = sub_1C106A864();
  if (v5 >= 1024)
    v6 = 1024;
  else
    v6 = v5;
  bzero((void *)(v3 + v4), v6);
  v9 = 0x40000000000;
  v10 = v0 | 0x4000000000000000;
  sub_1C0CF0D80((uint64_t)&v9);
  v8 = v7;
  sub_1C07B3374(v9, v10);
  return v8;
}

uint64_t sub_1C0CF0A18@<X0>(char *a1@<X0>, int a2@<W2>, _QWORD *a3@<X8>)
{
  uint64_t result;
  uint64_t v6;

  result = confstr(a2, a1, 0x400uLL);
  if (result >= 1 && a1)
  {
    result = sub_1C106FCA0();
    *a3 = result;
    a3[1] = v6;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
  }
  return result;
}

uint64_t static Daemon.enterSandbox(identifier:macOSProfile:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  NSObject *v19;
  os_log_type_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;

  v0 = sub_1C106CD3C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v23 - v5;
  v7 = sub_1C106F544();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v23 - v12;
  sub_1C106FB80();
  v14 = _set_user_dir_suffix();
  swift_release();
  if (!v14)
  {
    sub_1C106F154();
    v21 = sub_1C106F538();
    v22 = sub_1C1070390();
    if (os_log_type_enabled(v21, v22))
    {
      *(_WORD *)sub_1C0780FC8() = 0;
      sub_1C07A13B0(&dword_1C0771000, v21, v22, "Sandbox: _set_user_dir_suffix returned nil");
      sub_1C0776778();
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0D3B748], v0);
    goto LABEL_10;
  }
  static Daemon.confstr(_:)();
  if (!v15
    || (String.realpath.getter(), v17 = v16, swift_bridgeObjectRelease(), result = swift_bridgeObjectRelease(), !v17))
  {
    sub_1C106F154();
    v19 = sub_1C106F538();
    v20 = sub_1C1070390();
    if (os_log_type_enabled(v19, v20))
    {
      *(_WORD *)sub_1C0780FC8() = 0;
      sub_1C07A13B0(&dword_1C0771000, v19, v20, "Sandbox: confstr(_CS_DARWIN_USER_TEMP_DIR) failed");
      sub_1C0776778();
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v6, *MEMORY[0x1E0D3B740], v0);
LABEL_10:
    result = sub_1C106F0E8();
    __break(1u);
  }
  return result;
}

uint64_t String.realpath.getter()
{
  uint64_t v0;
  char *v1;

  v0 = sub_1C106FB80();
  v1 = realpath_DARWIN_EXTSN((const char *)(v0 + 32), 0);
  swift_release();
  if (v1)
  {
    sub_1C106FCA0();
    sub_1C0776778();
  }
  return 0;
}

uint64_t sub_1C0CF0D50(char *a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  result = sub_1C0CF0A18(a1, a3, &v5);
  if (!v3)
    return v5;
  return result;
}

void sub_1C0CF0D80(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1C0CF0DDC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  int v2;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned __int8 v8;
  unsigned __int8 v9;
  unsigned __int8 v10;

  v6 = v3;
  LOWORD(v7) = a1;
  BYTE2(v7) = BYTE2(a1);
  HIBYTE(v7) = BYTE3(a1);
  v8 = BYTE4(a1);
  v9 = BYTE5(a1);
  v10 = BYTE6(a1);
  result = sub_1C0CF0D50((char *)&v6, BYTE6(a1), v2);
  v5 = v7 | ((unint64_t)v8 << 32) | ((unint64_t)v9 << 40) | ((unint64_t)v10 << 48);
  *v1 = v6;
  v1[1] = v5;
  return result;
}

uint64_t sub_1C0CF1010(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = sub_1C106A84C();
  if (!result)
    goto LABEL_9;
  v9 = result;
  result = sub_1C106A870();
  v10 = a1 - result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_8;
  }
  if (__OFSUB__(a2, a1))
  {
LABEL_8:
    __break(1u);
LABEL_9:
    __break(1u);
    return result;
  }
  sub_1C106A864();
  result = sub_1C0CF0A18((char *)(v9 + v10), a4, &v11);
  if (!v4)
    return v11;
  return result;
}

uint64_t sub_1C0CF10B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  int v9;
  unint64_t v10;
  int v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = sub_1C106D6FC();
  v14 = *(_QWORD *)(v2 - 8);
  v15 = v2;
  MEMORY[0x1E0C80A78](v2);
  sub_1C0778564();
  v5 = v4 - v3;
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    v17 = MEMORY[0x1E0DEE9D8];
    sub_1C09D40DC();
    v7 = v17;
    result = sub_1C0945CB4(a1);
    if ((result & 0x8000000000000000) == 0)
    {
      v10 = result;
      if (result < 1 << *(_BYTE *)(a1 + 32))
      {
        v11 = v9;
        v12 = a1 + 64;
        while ((*(_QWORD *)(v12 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
        {
          if (v11 != *(_DWORD *)(a1 + 36))
            goto LABEL_20;
          v16 = v6;
          sub_1C077C0B8();
          sub_1C07767B4();
          sub_1C106D6D8();
          v13 = *(_QWORD *)(v17 + 16);
          if (v13 >= *(_QWORD *)(v17 + 24) >> 1)
            sub_1C09D40DC();
          *(_QWORD *)(v17 + 16) = v13 + 1;
          result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v14 + 32))(v17+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72) * v13, v5, v15);
          if ((uint64_t)v10 >= -(-1 << *(_BYTE *)(a1 + 32)))
            goto LABEL_21;
          v12 = a1 + 64;
          if ((*(_QWORD *)(a1 + 64 + 8 * (v10 >> 6)) & (1 << v10)) == 0)
            goto LABEL_22;
          if (v11 != *(_DWORD *)(a1 + 36))
            goto LABEL_23;
          result = sub_1C1070678();
          --v6;
          if (v16 == 1)
          {
            swift_bridgeObjectRelease();
            return v7;
          }
          v10 = result;
          if ((result & 0x8000000000000000) == 0)
          {
            v11 = *(_DWORD *)(a1 + 36);
            if (result < 1 << *(_BYTE *)(a1 + 32))
              continue;
          }
          goto LABEL_24;
        }
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
      }
    }
LABEL_24:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

uint64_t sub_1C0CF1310()
{
  int64_t v0;
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  int64_t v26;
  uint64_t result;
  uint64_t v28;
  int64_t v29;
  _QWORD v30[5];

  sub_1C0861BD0(v30);
  v0 = v30[3];
  v1 = v30[4];
  v28 = v30[1];
  v29 = (unint64_t)(v30[2] + 64) >> 6;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    goto LABEL_3;
LABEL_2:
  v1 &= v1 - 1;
  while (1)
  {
    swift_bridgeObjectRetain_n();
    v6 = sub_1C077C0B8();
    v7 = sub_1C0CF10B8(v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 = *(_QWORD *)(v7 + 16);
    v9 = *(_QWORD *)(v2 + 16);
    if (__OFADD__(v9, v8))
      break;
    if (!swift_isUniquelyReferenced_nonNull_native() || v9 + v8 > *(_QWORD *)(v2 + 24) >> 1)
    {
      sub_1C07EB944();
      v2 = v10;
    }
    if (*(_QWORD *)(v7 + 16))
    {
      v11 = *(_QWORD *)(v2 + 16);
      v12 = (*(_QWORD *)(v2 + 24) >> 1) - v11;
      v13 = sub_1C106D6FC();
      if (v12 < v8)
        goto LABEL_40;
      v14 = *(_QWORD *)(v13 - 8);
      v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
      v16 = *(_QWORD *)(v14 + 72);
      v17 = v2 + v15 + v16 * v11;
      v18 = v7 + v15;
      v19 = v16 * v8;
      v20 = v17 + v19;
      v21 = v18 + v19;
      if (v18 < v20 && v17 < v21)
        goto LABEL_43;
      swift_arrayInitWithCopy();
      if (v8)
      {
        v23 = *(_QWORD *)(v2 + 16);
        v24 = __OFADD__(v23, v8);
        v25 = v23 + v8;
        if (v24)
          goto LABEL_41;
        *(_QWORD *)(v2 + 16) = v25;
      }
    }
    else if (v8)
    {
      goto LABEL_39;
    }
    swift_bridgeObjectRelease();
    if (v1)
      goto LABEL_2;
LABEL_3:
    v3 = v0 + 1;
    if (__OFADD__(v0, 1))
      goto LABEL_42;
    if (v3 >= v29)
      goto LABEL_37;
    v4 = *(_QWORD *)(v28 + 8 * v3);
    if (!v4)
    {
      v5 = v0 + 2;
      if (v0 + 2 >= v29)
        goto LABEL_37;
      v4 = *(_QWORD *)(v28 + 8 * v5);
      if (v4)
        goto LABEL_12;
      v5 = v0 + 3;
      if (v0 + 3 >= v29)
        goto LABEL_37;
      v4 = *(_QWORD *)(v28 + 8 * v5);
      if (v4)
        goto LABEL_12;
      v5 = v0 + 4;
      if (v0 + 4 >= v29)
        goto LABEL_37;
      v4 = *(_QWORD *)(v28 + 8 * v5);
      if (v4)
      {
LABEL_12:
        v3 = v5;
      }
      else
      {
        v3 = v0 + 5;
        if (v0 + 5 >= v29)
          goto LABEL_37;
        v4 = *(_QWORD *)(v28 + 8 * v3);
        if (!v4)
        {
          v26 = v0 + 6;
          while (v26 < v29)
          {
            v4 = *(_QWORD *)(v28 + 8 * v26++);
            if (v4)
            {
              v3 = v26 - 1;
              goto LABEL_13;
            }
          }
LABEL_37:
          swift_release();
          return v2;
        }
      }
    }
LABEL_13:
    v1 = (v4 - 1) & v4;
    v0 = v3;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  result = sub_1C10709F0();
  __break(1u);
  return result;
}

id sub_1C0CF1604(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v3 = v1(v2);
  sub_1C07785A8();
  if (v3)
  {
    sub_1C077CA90();
    v4 = (void *)sub_1C106F934();
    sub_1C07767AC();
  }
  else
  {
    v4 = 0;
  }
  return v4;
}

uint64_t sub_1C0CF1670(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = a2;
  sub_1C0CFB600(a1, (uint64_t)sub_1C0CFB5CC, 0, isUniquelyReferenced_nonNull_native, &v8);
  v6 = v8;
  swift_bridgeObjectRelease();
  if (v2)
    swift_bridgeObjectRelease();
  return v6;
}

void sub_1C0CF16EC(double a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  double v17;
  BOOL v18;
  double v19;
  BOOL v20;
  unint64_t v21;
  _BOOL4 v22;
  double v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = sub_1C106ADE0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v25 - v11;
  v13 = sub_1C0CFBC08(a1, a2, a3);
  v27 = MEMORY[0x1E0DEE9D8];
  sub_1C09D337C();
  if (v13 < 0)
    goto LABEL_30;
  v14 = v27;
  v15 = 0;
  v16 = 0;
  if (!v13)
  {
    v19 = a1;
    goto LABEL_16;
  }
  v17 = a1;
  v26 = v6;
  do
  {
    v18 = v17 <= a2;
    if (a3 > 0.0)
      v18 = v17 >= a2;
    if (v18)
    {
      if (v15 & 1 | (v17 != a2))
        goto LABEL_28;
      v15 = 1;
      v19 = v17;
    }
    else
    {
      v20 = __OFADD__(v16++, 1);
      if (v20)
        goto LABEL_29;
      v19 = a1 + (double)v16 * a3;
    }
    sub_1C106AC54();
    v27 = v14;
    v21 = *(_QWORD *)(v14 + 16);
    if (v21 >= *(_QWORD *)(v14 + 24) >> 1)
    {
      sub_1C09D337C();
      v14 = v27;
    }
    *(_QWORD *)(v14 + 16) = v21 + 1;
    v6 = v26;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v14+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v21, v9, v26);
    v17 = v19;
    --v13;
  }
  while (v13);
  while (1)
  {
LABEL_16:
    v22 = v19 <= a2;
    if (a3 > 0.0)
      v22 = v19 >= a2;
    if (!v22)
      break;
    if ((v19 != a2) | v15 & 1)
      return;
    v15 = 1;
    v23 = v19;
LABEL_23:
    sub_1C106AC54();
    v27 = v14;
    v24 = *(_QWORD *)(v14 + 16);
    if (v24 >= *(_QWORD *)(v14 + 24) >> 1)
    {
      sub_1C09D337C();
      v14 = v27;
    }
    *(_QWORD *)(v14 + 16) = v24 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v14+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v24, v12, v6);
    v19 = v23;
  }
  v20 = __OFADD__(v16++, 1);
  if (!v20)
  {
    v23 = a1 + (double)v16 * a3;
    goto LABEL_23;
  }
  __break(1u);
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
}

void sub_1C0CF199C()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  int64_t v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41[6];
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45[7];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48[7];
  uint64_t v49[7];
  _QWORD __dst[9];
  _QWORD __src[9];
  _QWORD v52[2];
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;

  v0 = MEMORY[0x1E0DEE9E0];
  v56 = MEMORY[0x1E0DEE9E0];
  sub_1C0861BD0(v52);
  v1 = v52[0];
  v2 = v54;
  v3 = v55;
  v35 = v53;
  v37 = v52[1];
  v38 = (unint64_t)(v53 + 64) >> 6;
  v39 = &__src[2];
  v40 = v48;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  if (!v3)
    goto LABEL_3;
LABEL_2:
  v4 = __clz(__rbit64(v3));
  v3 &= v3 - 1;
  v5 = v4 | (v2 << 6);
  while (1)
  {
    v10 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v5);
    v12 = *v10;
    v11 = v10[1];
    sub_1C078A8F8(*(_QWORD *)(v1 + 56) + 56 * v5, (uint64_t)v39, (uint64_t *)&unk_1EF6479D0);
    __src[0] = v12;
    __src[1] = v11;
    memcpy(__dst, __src, 0x41uLL);
    sub_1C078A8F8((uint64_t)&__dst[2], (uint64_t)v41, (uint64_t *)&unk_1EF6479D0);
    if (v42 == 255)
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C0784B6C((uint64_t)__dst, &qword_1EF6479E0);
      v16 = v41;
      goto LABEL_34;
    }
    sub_1C08A5D78((uint64_t)v41, (uint64_t)v49);
    v13 = __dst[0];
    v14 = __dst[1];
    v46 = __dst[0];
    v47 = __dst[1];
    sub_1C078A67C((uint64_t)&__dst[2], (uint64_t)v40, (uint64_t *)&unk_1EF6479D0);
    sub_1C08A5D78((uint64_t)v49, (uint64_t)v45);
    v15 = *(_QWORD *)(v0 + 16);
    if (*(_QWORD *)(v0 + 24) <= v15)
    {
      v17 = v15 + 1;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C0A4D258(v17, 1, v18, v19, v20, v21, v22, v23, v35, v36, v37, v38, (int)v39, SBYTE4(v39), (uint64_t)v40, v41[0], v41[1], v41[2], v41[3],
        v41[4],
        v41[5],
        v42,
        v43,
        v44,
        v45[0],
        v45[1],
        v45[2],
        v45[3],
        v45[4],
        v45[5],
        v45[6],
        v46,
        v47,
        v48[0],
        v48[1],
        v48[2],
        v48[3],
        v48[4],
        v48[5],
        v48[6],
        v49[0],
        v49[1],
        v49[2]);
      v0 = v56;
    }
    else
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    }
    sub_1C1070DF8();
    sub_1C106FC28();
    v24 = sub_1C1070E4C();
    v25 = v0 + 64;
    v26 = -1 << *(_BYTE *)(v0 + 32);
    v27 = v24 & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v0 + 64 + 8 * (v27 >> 6))) == 0)
      break;
    v29 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v0 + 64 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
LABEL_33:
    *(_QWORD *)(v25 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
    v34 = (_QWORD *)(*(_QWORD *)(v0 + 48) + 16 * v29);
    *v34 = v13;
    v34[1] = v14;
    sub_1C08A5D78((uint64_t)v45, *(_QWORD *)(v0 + 56) + 56 * v29);
    ++*(_QWORD *)(v0 + 16);
    v16 = v40;
LABEL_34:
    sub_1C0784B6C((uint64_t)v16, (uint64_t *)&unk_1EF6479D0);
    if (v3)
      goto LABEL_2;
LABEL_3:
    v6 = v2 + 1;
    if (__OFADD__(v2, 1))
      goto LABEL_38;
    if (v6 >= v38)
      goto LABEL_36;
    v7 = *(_QWORD *)(v37 + 8 * v6);
    v8 = v2 + 1;
    if (!v7)
    {
      v8 = v2 + 2;
      if (v2 + 2 >= v38)
        goto LABEL_36;
      v7 = *(_QWORD *)(v37 + 8 * v8);
      if (!v7)
      {
        v8 = v2 + 3;
        if (v2 + 3 >= v38)
          goto LABEL_36;
        v7 = *(_QWORD *)(v37 + 8 * v8);
        if (!v7)
        {
          v8 = v2 + 4;
          if (v2 + 4 >= v38)
            goto LABEL_36;
          v7 = *(_QWORD *)(v37 + 8 * v8);
          if (!v7)
          {
            v8 = v2 + 5;
            if (v2 + 5 >= v38)
              goto LABEL_36;
            v7 = *(_QWORD *)(v37 + 8 * v8);
            if (!v7)
            {
              v9 = v2 + 6;
              while (v9 < v38)
              {
                v7 = *(_QWORD *)(v37 + 8 * v9++);
                if (v7)
                {
                  v8 = v9 - 1;
                  goto LABEL_18;
                }
              }
LABEL_36:
              sub_1C0827370();
              return;
            }
          }
        }
      }
    }
LABEL_18:
    v3 = (v7 - 1) & v7;
    v5 = __clz(__rbit64(v7)) + (v8 << 6);
    v2 = v8;
  }
  v30 = 0;
  v31 = (unint64_t)(63 - v26) >> 6;
  while (++v28 != v31 || (v30 & 1) == 0)
  {
    v32 = v28 == v31;
    if (v28 == v31)
      v28 = 0;
    v30 |= v32;
    v33 = *(_QWORD *)(v25 + 8 * v28);
    if (v33 != -1)
    {
      v29 = __clz(__rbit64(~v33)) + (v28 << 6);
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_38:
  __break(1u);
}

uint64_t sub_1C0CF1D34(uint64_t a1)
{
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;

  v4 = type metadata accessor for ScheduledTasks.AutonamingMetricsLoggingRunner();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v32 - v7);
  v9 = sub_1C07ACF80(&qword_1ED75E630);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v10);
  sub_1C0778564();
  v13 = v12 - v11;
  if (qword_1ED761458 != -1)
    swift_once();
  v14 = sub_1C077585C();
  sub_1C077965C(v14, (uint64_t)qword_1ED78D818);
  v15 = sub_1C0784E0C();
  if (sub_1C077F050(v15))
  {
    v16 = (uint8_t *)sub_1C0775854();
    *(_WORD *)v16 = 0;
    sub_1C077F048(&dword_1C0771000, v1, v2, "IntelligencePlatformTasks: registering all tasks.", v16);
    sub_1C0776778();
  }

  if (qword_1ED75E638 != -1)
    swift_once();
  sub_1C0781988(v9, (uint64_t)qword_1ED78D780);
  sub_1C0789B14(a1, v13);
  v17 = sub_1C0779D10();
  sub_1C07B2D8C(v13, 0, 1, v17);
  sub_1C077F040();
  sub_1C078A98C(v13, (uint64_t)v1, &qword_1ED75E630);
  swift_endAccess();
  type metadata accessor for SimpleScheduledTask();
  v18 = sub_1C078DB90();
  sub_1C07AF2FC(0xD000000000000027, v18, (uint64_t)&type metadata for ScheduledTasks.AssetRegistryOverrideStoreWeeklyCleanupRunner, (uint64_t)&off_1E7A2CB70, (uint64_t)"v16@?0@\"BGSystemTask\"8");
  sub_1C078A0A4();
  sub_1C07785A8();
  v19 = sub_1C078DB90();
  sub_1C07AF2FC(0xD00000000000001BLL, v19, (uint64_t)&type metadata for ScheduledTasks.GlobalKnowledgeTwoHourPruneRunner, (uint64_t)&off_1E7A2CB90, (uint64_t)"rrideStoreWeeklyCleanup");
  sub_1C078A0A4();
  sub_1C07785A8();
  v20 = sub_1C078DB90();
  sub_1C07AF2FC(0xD00000000000001FLL, v20, (uint64_t)&type metadata for ScheduledTasks.EventAndFeedbackDailyProcessingRunner, (uint64_t)&off_1E7A2CBB0, (uint64_t)"GlobalKnowledgeTwoHourPrune");
  sub_1C078A0A4();
  sub_1C07785A8();
  v21 = sub_1C078DB90();
  sub_1C07AF2FC(0xD000000000000021, v21, (uint64_t)&type metadata for ScheduledTasks.LongitudinalFeatureRunner, (uint64_t)&off_1E7A2CBD0, (uint64_t)"EventAndFeedbackDailyProcessing");
  sub_1C078A0A4();
  sub_1C07785A8();
  v22 = sub_1C078DB90();
  sub_1C07AF2FC(0xD000000000000013, v22, (uint64_t)&type metadata for ScheduledTasks.BehaviorSequenceLogRunner, (uint64_t)&off_1E7A2CBF0, (uint64_t)"ureDataCollection");
  sub_1C078A0A4();
  sub_1C07785A8();
  v23 = sub_1C078DB90();
  sub_1C07AC1CC(26, 0x80000001C11094F0, v23, (uint64_t)&type metadata for ScheduledTasks.EventStreamsDataCollectionRunner, (uint64_t)&off_1E7A2CC10);
  sub_1C078A0A4();
  sub_1C07785A8();
  v24 = sub_1C078DB90();
  sub_1C07AC1CC(26, 0x80000001C1109510, v24, (uint64_t)&type metadata for ScheduledTasks.LongitudinalDataCollectionRunner, (uint64_t)&off_1E7A2CC30);
  sub_1C078A0A4();
  sub_1C07785A8();
  sub_1C0789B14(a1, (uint64_t)v8 + *(int *)(v4 + 20));
  sub_1C078A340();
  *v8 = v25;
  v8[1] = v26;
  sub_1C078DB90();
  v27 = sub_1C078109C();
  sub_1C07E05C8(v27, v28, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledTasks.AutonamingMetricsLoggingRunner);
  v29 = sub_1C077CEF4();
  sub_1C0CFB858(v29, v30);
  sub_1C07B1F90((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledTasks.AutonamingMetricsLoggingRunner);
  sub_1C0C49C20();
  return sub_1C07785A8();
}

void sub_1C0CF2104(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  os_log_type_t v9;
  _WORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = sub_1C07ACF80(&qword_1ED75E630);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v4);
  sub_1C0778564();
  v7 = v6 - v5;
  if (qword_1ED761458 != -1)
    swift_once();
  v8 = sub_1C077585C();
  sub_1C077965C(v8, (uint64_t)qword_1ED78D818);
  v9 = sub_1C0784E0C();
  if (sub_1C077AF00(v9))
  {
    v10 = (_WORD *)sub_1C0775854();
    sub_1C07A7CA0(v10);
    sub_1C0798520(&dword_1C0771000, v11, v12, "ConstructionTasks: registering all tasks.");
    sub_1C0776778();
  }

  if (qword_1ED75E638 != -1)
    swift_once();
  sub_1C0781988(v3, (uint64_t)qword_1ED78D780);
  sub_1C07E05C8(a1, v7, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v13 = sub_1C0779D10();
  sub_1C07B2D8C(v7, 0, 1, v13);
  sub_1C077F040();
  sub_1C078A98C(v7, (uint64_t)v1, &qword_1ED75E630);
  swift_endAccess();
  type metadata accessor for SimpleScheduledTask();
  v14 = sub_1C078DB90();
  sub_1C0CFB920(0x657069506C6C7546, 0xEC000000656E696CLL, v14, (uint64_t)&type metadata for ScheduledTasks.FullPipelineRunner, (uint64_t)&off_1E7A2CC70);
  sub_1C078A0A4();
  sub_1C07785A8();
  sub_1C0C49FB4();
  sub_1C0CFBAFC(0xD000000000000011, 0x80000001C11093D0);
  sub_1C0CF348C();
  sub_1C07785A8();
  type metadata accessor for ScheduledTasks.AutonamingMessagesPipelineRunner();
  sub_1C0778598();
  v15 = sub_1C0CF8AFC();
  v16 = sub_1C078DB90();
  sub_1C0CFB9A4(v15, v16);
  sub_1C078A0A4();
  sub_1C07785A8();
  sub_1C07785E4();
}

uint64_t sub_1C0CF2308()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  v1 = (_QWORD *)sub_1C077FDD8();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = (uint64_t (*)(void))sub_1C0780C4C(v1, (uint64_t)sub_1C0801424, v4);
  return sub_1C077CF28(v2);
}

uint64_t sub_1C0CF2344()
{
  uint64_t v0;
  _QWORD *v1;

  v1[5] = v0;
  v1[6] = sub_1C07ACF80(&qword_1ED75E630);
  v1[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C0CF23A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  char v5;
  _QWORD *v6;
  uint64_t v7;

  if (qword_1ED75E638 != -1)
    swift_once();
  v1 = sub_1C07AE0EC(*(_QWORD *)(v0 + 48), (uint64_t)qword_1ED78D780);
  sub_1C0791F78(v1, v2, &qword_1ED75E630);
  v3 = sub_1C0779D10();
  result = sub_1C078FABC(v3);
  if (v5)
  {
    __break(1u);
  }
  else
  {
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v6;
    v7 = sub_1C07B988C(v6, (uint64_t)sub_1C0CF2444);
    return sub_1C0C4A1F8(v7);
  }
  return result;
}

uint64_t sub_1C0CF2444()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v3)(void);

  v1 = sub_1C0797238();
  if (v0)
  {
    sub_1C077862C();
    return sub_1C0789D28();
  }
  else
  {
    sub_1C07825F4(v1, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    sub_1C07767BC();
    v3 = (uint64_t (*)(void))sub_1C0779830();
    return sub_1C0795770(v3);
  }
}

uint64_t sub_1C0CF2494()
{
  uint64_t v0;
  _QWORD *v1;

  v1[5] = v0;
  v1[6] = sub_1C07ACF80(&qword_1ED75E630);
  v1[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C0CF24F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  char v5;
  _QWORD *v6;
  uint64_t v7;

  if (qword_1ED75E638 != -1)
    swift_once();
  v1 = sub_1C07AE0EC(*(_QWORD *)(v0 + 48), (uint64_t)qword_1ED78D780);
  sub_1C0791F78(v1, v2, &qword_1ED75E630);
  v3 = sub_1C0779D10();
  result = sub_1C078FABC(v3);
  if (v5)
  {
    __break(1u);
  }
  else
  {
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v6;
    v7 = sub_1C07B988C(v6, (uint64_t)sub_1C0CF2444);
    return sub_1C0C4A414(v7);
  }
  return result;
}

uint64_t sub_1C0CF2594()
{
  uint64_t v0;
  _QWORD *v1;

  v1[5] = v0;
  v1[6] = sub_1C07ACF80(&qword_1ED75E630);
  v1[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C0CF25F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  char v5;
  _QWORD *v6;
  uint64_t v7;

  if (qword_1ED75E638 != -1)
    swift_once();
  v1 = sub_1C07AE0EC(*(_QWORD *)(v0 + 48), (uint64_t)qword_1ED78D780);
  sub_1C0791F78(v1, v2, &qword_1ED75E630);
  v3 = sub_1C0779D10();
  result = sub_1C078FABC(v3);
  if (v5)
  {
    __break(1u);
  }
  else
  {
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v6;
    v7 = sub_1C07B988C(v6, (uint64_t)sub_1C0CF2444);
    return sub_1C0C4A55C(v7);
  }
  return result;
}

uint64_t sub_1C0CF2694()
{
  uint64_t v0;
  _QWORD *v1;

  v1[5] = v0;
  v1[6] = sub_1C07ACF80(&qword_1ED75E630);
  v1[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C0CF26F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  char v5;
  _QWORD *v6;
  uint64_t v7;

  if (qword_1ED75E638 != -1)
    swift_once();
  v1 = sub_1C07AE0EC(*(_QWORD *)(v0 + 48), (uint64_t)qword_1ED78D780);
  sub_1C0791F78(v1, v2, &qword_1ED75E630);
  v3 = sub_1C0779D10();
  result = sub_1C078FABC(v3);
  if (v5)
  {
    __break(1u);
  }
  else
  {
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v6;
    v7 = sub_1C07B988C(v6, (uint64_t)sub_1C0CF2794);
    return sub_1C0C4A664(v7);
  }
  return result;
}

uint64_t sub_1C0CF2794()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v3)(void);

  v1 = sub_1C0797238();
  if (v0)
  {
    sub_1C077862C();
    return sub_1C0789D28();
  }
  else
  {
    sub_1C07825F4(v1, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    sub_1C07767BC();
    v3 = (uint64_t (*)(void))sub_1C0779830();
    return sub_1C0795770(v3);
  }
}

uint64_t sub_1C0CF27E4()
{
  uint64_t v0;
  _QWORD *v1;

  v1[5] = v0;
  v1[6] = sub_1C07ACF80(&qword_1ED75E630);
  v1[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C0CF2844()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  char v5;
  _QWORD *v6;
  uint64_t v7;

  if (qword_1ED75E638 != -1)
    swift_once();
  v1 = sub_1C07AE0EC(*(_QWORD *)(v0 + 48), (uint64_t)qword_1ED78D780);
  sub_1C0791F78(v1, v2, &qword_1ED75E630);
  v3 = sub_1C0779D10();
  result = sub_1C078FABC(v3);
  if (v5)
  {
    __break(1u);
  }
  else
  {
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v6;
    v7 = sub_1C07B988C(v6, (uint64_t)sub_1C0CF2444);
    return sub_1C0C4A800(v7);
  }
  return result;
}

uint64_t sub_1C0CF28E4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2[5] = a1;
  v2[6] = a2;
  v2[7] = sub_1C07ACF80(&qword_1ED75E630);
  v2[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C0CF2944()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  char v5;
  _QWORD *v6;
  uint64_t v7;

  if (qword_1ED75E638 != -1)
    swift_once();
  v1 = sub_1C07AE0EC(*(_QWORD *)(v0 + 56), (uint64_t)qword_1ED78D780);
  sub_1C0791F78(v1, v2, &qword_1ED75E630);
  v3 = sub_1C0779D10();
  result = sub_1C078FABC(v3);
  if (v5)
  {
    __break(1u);
  }
  else
  {
    v6 = (_QWORD *)swift_task_alloc();
    v7 = sub_1C0793F4C(v6, (uint64_t)sub_1C0CF29E0);
    return sub_1C0CF37B0(v7);
  }
  return result;
}

uint64_t sub_1C0CF29E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v3)(void);

  v1 = sub_1C079AED0();
  if (v0)
  {
    sub_1C077862C();
    return sub_1C0789D28();
  }
  else
  {
    sub_1C07825F4(v1, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    sub_1C07767BC();
    v3 = (uint64_t (*)(void))sub_1C0779830();
    return sub_1C0795770(v3);
  }
}

uint64_t sub_1C0CF2A30(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2[5] = a1;
  v2[6] = a2;
  v2[7] = sub_1C07ACF80(&qword_1ED75E630);
  v2[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C0CF2A90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  char v5;
  _QWORD *v6;
  uint64_t v7;

  if (qword_1ED75E638 != -1)
    swift_once();
  v1 = sub_1C07AE0EC(*(_QWORD *)(v0 + 56), (uint64_t)qword_1ED78D780);
  sub_1C0791F78(v1, v2, &qword_1ED75E630);
  v3 = sub_1C0779D10();
  result = sub_1C078FABC(v3);
  if (v5)
  {
    __break(1u);
  }
  else
  {
    v6 = (_QWORD *)swift_task_alloc();
    v7 = sub_1C0793F4C(v6, (uint64_t)sub_1C0CF2B2C);
    return sub_1C0CF393C(v7);
  }
  return result;
}

uint64_t sub_1C0CF2B2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v3)(void);

  v1 = sub_1C079AED0();
  if (v0)
  {
    sub_1C077862C();
    return sub_1C0789D28();
  }
  else
  {
    sub_1C07825F4(v1, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    sub_1C07767BC();
    v3 = (uint64_t (*)(void))sub_1C0779830();
    return sub_1C0795770(v3);
  }
}

uint64_t sub_1C0CF2B7C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2[5] = a1;
  v2[6] = a2;
  v2[7] = sub_1C07ACF80(&qword_1ED75E630);
  v2[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C0CF2BDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  char v5;
  _QWORD *v6;
  uint64_t v7;

  if (qword_1ED75E638 != -1)
    swift_once();
  v1 = sub_1C07AE0EC(*(_QWORD *)(v0 + 56), (uint64_t)qword_1ED78D780);
  sub_1C0791F78(v1, v2, &qword_1ED75E630);
  v3 = sub_1C0779D10();
  result = sub_1C078FABC(v3);
  if (v5)
  {
    __break(1u);
  }
  else
  {
    v6 = (_QWORD *)swift_task_alloc();
    v7 = sub_1C0793F4C(v6, (uint64_t)sub_1C0CF2B2C);
    return sub_1C0CF3A90(v7);
  }
  return result;
}

uint64_t sub_1C0CF2C78(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2[5] = a1;
  v2[6] = a2;
  v2[7] = sub_1C07ACF80(&qword_1ED75E630);
  v2[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C0CF2CD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  char v5;
  _QWORD *v6;
  uint64_t v7;

  if (qword_1ED75E638 != -1)
    swift_once();
  v1 = sub_1C07AE0EC(*(_QWORD *)(v0 + 56), (uint64_t)qword_1ED78D780);
  sub_1C0791F78(v1, v2, &qword_1ED75E630);
  v3 = sub_1C0779D10();
  result = sub_1C078FABC(v3);
  if (v5)
  {
    __break(1u);
  }
  else
  {
    v6 = (_QWORD *)swift_task_alloc();
    v7 = sub_1C0793F4C(v6, (uint64_t)sub_1C0CF2B2C);
    return sub_1C0CF3BA4(v7);
  }
  return result;
}

uint64_t sub_1C0CF2D74(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2[5] = a1;
  v2[6] = a2;
  v2[7] = sub_1C07ACF80(&qword_1ED75E630);
  v2[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C0CF2DD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  char v5;
  _QWORD *v6;
  uint64_t v7;

  if (qword_1ED75E638 != -1)
    swift_once();
  v1 = sub_1C07AE0EC(*(_QWORD *)(v0 + 56), (uint64_t)qword_1ED78D780);
  sub_1C0791F78(v1, v2, &qword_1ED75E630);
  v3 = sub_1C0779D10();
  result = sub_1C078FABC(v3);
  if (v5)
  {
    __break(1u);
  }
  else
  {
    v6 = (_QWORD *)swift_task_alloc();
    v7 = sub_1C0793F4C(v6, (uint64_t)sub_1C0CF2B2C);
    return sub_1C0CF3CB8(v7);
  }
  return result;
}

uint64_t sub_1C0CF2E70(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2[5] = a1;
  v2[6] = a2;
  v2[7] = sub_1C07ACF80(&qword_1ED75E630);
  v2[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C0CF2ED0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  char v5;
  _QWORD *v6;
  uint64_t v7;

  if (qword_1ED75E638 != -1)
    swift_once();
  v1 = sub_1C07AE0EC(*(_QWORD *)(v0 + 56), (uint64_t)qword_1ED78D780);
  sub_1C0791F78(v1, v2, &qword_1ED75E630);
  v3 = sub_1C0779D10();
  result = sub_1C078FABC(v3);
  if (v5)
  {
    __break(1u);
  }
  else
  {
    v6 = (_QWORD *)swift_task_alloc();
    v7 = sub_1C0793F4C(v6, (uint64_t)sub_1C0CF2B2C);
    return sub_1C0CF3DCC(v7);
  }
  return result;
}

uint64_t sub_1C0CF2F6C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2[5] = a1;
  v2[6] = a2;
  v2[7] = sub_1C07ACF80(&qword_1ED75E630);
  v2[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C0CF2FCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  char v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (qword_1ED75E638 != -1)
    swift_once();
  v1 = sub_1C07AE0EC(*(_QWORD *)(v0 + 56), (uint64_t)qword_1ED78D780);
  sub_1C0791F78(v1, v2, &qword_1ED75E630);
  v3 = sub_1C0779D10();
  result = sub_1C078FABC(v3);
  if (v5)
  {
    __break(1u);
  }
  else
  {
    v6 = (_QWORD *)swift_task_alloc();
    v7 = sub_1C0793F4C(v6, (uint64_t)sub_1C0CF2B2C);
    return sub_1C0CF5EFC(v7, v8, v9);
  }
  return result;
}

uint64_t sub_1C0CF3068()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  v1 = (_QWORD *)sub_1C077FDD8();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = (uint64_t (*)(void))sub_1C0780C4C(v1, (uint64_t)sub_1C0804B88, v4);
  return sub_1C077CF28(v2);
}

uint64_t sub_1C0CF30A4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  v1 = (_QWORD *)sub_1C077FDD8();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = (uint64_t (*)(void))sub_1C0780C4C(v1, (uint64_t)sub_1C0804B88, v4);
  return sub_1C077CF28(v2);
}

uint64_t sub_1C0CF30E0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  v1 = (_QWORD *)sub_1C077FDD8();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = (uint64_t (*)(void))sub_1C0780C4C(v1, (uint64_t)sub_1C0804B88, v4);
  return sub_1C077CF28(v2);
}

uint64_t sub_1C0CF311C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  v1 = (_QWORD *)sub_1C077FDD8();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = (uint64_t (*)(void))sub_1C0780C4C(v1, (uint64_t)sub_1C0804B88, v4);
  return sub_1C077CF28(v2);
}

uint64_t sub_1C0CF3158(uint64_t a1)
{
  return nullsub_1(a1);
}

uint64_t sub_1C0CF3178()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = sub_1C07ACF80(&qword_1ED75E630);
  sub_1C0800A9C(v0, qword_1ED78D780);
  v1 = sub_1C077CEF4();
  v3 = sub_1C079E000(v1, v2);
  v4 = sub_1C0779D10();
  return sub_1C07B2D8C(v3, 1, 1, v4);
}

void sub_1C0CF31D0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  _WORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = sub_1C07ACF80(&qword_1ED75E630);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  sub_1C077B6C0();
  if (qword_1ED761458 != -1)
    swift_once();
  v4 = sub_1C077585C();
  sub_1C077965C(v4, (uint64_t)qword_1ED78D818);
  v5 = sub_1C0784E0C();
  if (sub_1C077AF00(v5))
  {
    v6 = (_WORD *)sub_1C0775854();
    sub_1C07A7CA0(v6);
    sub_1C0798520(&dword_1C0771000, v7, v8, "ViewTasks: registering all tasks.");
    sub_1C0776778();
  }

  if (qword_1ED75E638 != -1)
    swift_once();
  sub_1C0781988(v2, (uint64_t)qword_1ED78D780);
  v9 = sub_1C078109C();
  sub_1C07E05C8(v9, v10, v11);
  v12 = sub_1C0779D10();
  sub_1C07B2D8C(v0, 0, 1, v12);
  sub_1C077F040();
  v13 = sub_1C077CEF4();
  sub_1C078A98C(v13, v14, v15);
  swift_endAccess();
  type metadata accessor for SimpleScheduledTask();
  v16 = sub_1C078DB90();
  sub_1C0CFB920(0x6C69614477656956, 0xE900000000000079, v16, (uint64_t)&type metadata for ScheduledTasks.ViewDailyRunner, (uint64_t)&off_1E7A2CCC0);
  sub_1C078A0A4();
  sub_1C07785A8();
  v17 = sub_1C078DB90();
  sub_1C07AC1CC(23, 0x80000001C1109390, v17, (uint64_t)&type metadata for ScheduledTasks.ViewDailyWithNetworkingRunner, (uint64_t)&off_1E7A2CCE0);
  sub_1C078A0A4();
  sub_1C07785A8();
  v18 = sub_1C078DB90();
  sub_1C0CFB920(0x6B65655777656956, 0xEA0000000000796CLL, v18, (uint64_t)&type metadata for ScheduledTasks.ViewWeeklyRunner, (uint64_t)&off_1E7A2CD00);
  sub_1C078A0A4();
  sub_1C07785A8();
  sub_1C078DB90();
  v19 = sub_1C0CFC554();
  sub_1C0CFB920(v19, 0xEF7372756F483279, v20, v21, v22);
  sub_1C078A0A4();
  sub_1C07785A8();
  sub_1C078DB90();
  v23 = sub_1C0CFC554();
  sub_1C0CFB920(v23, v24, v25, v26, v27);
  sub_1C078A0A4();
  sub_1C07785A8();
  v28 = sub_1C078DB90();
  sub_1C07AC1CC(23, 0x80000001C11093B0, v28, (uint64_t)&type metadata for ScheduledTasks.ResetDisabledViewsDailyRunner, (uint64_t)&off_1E7A2CD60);
  sub_1C078A0A4();
  sub_1C07785A8();
  sub_1C07785E4();
}

uint64_t sub_1C0CF348C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  _QWORD *v14;
  void *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t aBlock[6];

  v1 = v0;
  v2 = sub_1C07A9480((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  v4 = *v2;
  v3 = v2[1];
  v5 = qword_1ED761458;
  sub_1C07767B4();
  if (v5 != -1)
    swift_once();
  v6 = sub_1C077585C();
  v7 = sub_1C079E000(v6, (uint64_t)qword_1ED78D818);
  sub_1C0775888();
  sub_1C106F538();
  v8 = sub_1C0784E0C();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)sub_1C0775854();
    aBlock[0] = sub_1C0775854();
    *(_DWORD *)v9 = 136315138;
    v10 = sub_1C07767B4();
    sub_1C079CF1C(v10, v11, aBlock);
    sub_1C0CFC568();
    sub_1C10705AC();
    sub_1C0799F00();
    sub_1C07796F0(&dword_1C0771000, v7, v8, "ScheduledTask: %s: Registering", v9);
    sub_1C0778610();
    sub_1C0776778();
  }

  sub_1C07758A4();
  v12 = objc_msgSend((id)objc_opt_self(), sel_sharedScheduler);
  sub_1C078A340();
  sub_1C078109C();
  sub_1C106FC94();
  v13 = (void *)sub_1C106FAF0();
  sub_1C077589C();
  v14 = (_QWORD *)sub_1C0778598();
  v14[2] = v4;
  v14[3] = v3;
  v14[4] = v1;
  aBlock[4] = (uint64_t)sub_1C0CFBBB4;
  aBlock[5] = (uint64_t)v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1C0779530;
  aBlock[3] = (uint64_t)&unk_1E7A2C148;
  v15 = _Block_copy(aBlock);
  sub_1C07767B4();
  swift_retain();
  swift_release();
  objc_msgSend(v12, sel_registerForTaskWithIdentifier_usingQueue_launchHandler_, v13, 0, v15);
  _Block_release(v15);

  sub_1C07767B4();
  sub_1C106F538();
  v16 = sub_1C0784E0C();
  if (sub_1C077AF00(v16))
  {
    v17 = (uint8_t *)sub_1C0775854();
    aBlock[0] = sub_1C0775854();
    *(_DWORD *)v17 = 136315138;
    v18 = sub_1C07767B4();
    sub_1C079CF1C(v18, v19, aBlock);
    sub_1C0CFC568();
    sub_1C07B1D00();
    sub_1C0799F00();
    sub_1C07796F0(&dword_1C0771000, v7, (os_log_type_t)v7, "SimpleScheduledBackgroundTask: %s: registered", v17);
    sub_1C0778610();
    sub_1C0776778();
  }

  return sub_1C07758A4();
}

uint64_t sub_1C0CF37B0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_1C0CF37C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  _QWORD *v4;
  uint64_t v5;
  __int16 v6;
  char v7;
  char v8;
  char v9;
  _BYTE *v10;

  if (qword_1ED7558C0 != -1)
    swift_once();
  *(_QWORD *)(v1 + 24) = sub_1C07850AC();
  if (v0)
  {
    v2 = (uint64_t (*)(void))sub_1C07759D4();
    return sub_1C0787F88(v2);
  }
  else
  {
    sub_1C07A29A8();
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v1 + 32) = v4;
    sub_1C0779870(v4, (uint64_t)sub_1C0CF385C);
    v5 = sub_1C07AB0E8(2u);
    return sub_1C079D724(v5, v6, v7, v8, v9, v10);
  }
}

uint64_t sub_1C0CF385C()
{
  uint64_t v0;

  sub_1C0791424();
  if (!v0)
    sub_1C07767AC();
  sub_1C077862C();
  return sub_1C0789D28();
}

uint64_t sub_1C0CF389C()
{
  uint64_t (*v0)(void);

  swift_release();
  v0 = (uint64_t (*)(void))sub_1C0779830();
  return sub_1C077CF28(v0);
}

uint64_t sub_1C0CF38C4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t);

  v2 = *v0;
  v3 = v0[1];
  v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EF647A28 + dword_1EF647A28);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1C0804B88;
  return v6(v2, v3);
}

uint64_t sub_1C0CF392C(uint64_t a1)
{
  return nullsub_1(a1);
}

uint64_t sub_1C0CF3934(uint64_t a1)
{
  return nullsub_1(a1);
}

uint64_t sub_1C0CF393C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_1C0CF3954()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  _QWORD *v4;
  uint64_t v5;
  __int16 v6;
  char v7;
  char v8;
  char v9;
  _BYTE *v10;

  if (qword_1ED7558C0 != -1)
    swift_once();
  *(_QWORD *)(v1 + 24) = sub_1C07850AC();
  if (v0)
  {
    v2 = (uint64_t (*)(void))sub_1C07759D4();
    return sub_1C0787F88(v2);
  }
  else
  {
    sub_1C07A29A8();
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v1 + 32) = v4;
    sub_1C0779870(v4, (uint64_t)sub_1C0CF39E8);
    v5 = sub_1C07AB0E8(3u);
    return sub_1C079D724(v5, v6, v7, v8, v9, v10);
  }
}

uint64_t sub_1C0CF39E8()
{
  uint64_t v0;

  sub_1C0791424();
  if (!v0)
    sub_1C07767AC();
  sub_1C077862C();
  return sub_1C0789D28();
}

uint64_t sub_1C0CF3A28()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t);

  v2 = *v0;
  v3 = v0[1];
  v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EF647A38 + dword_1EF647A38);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1C0804B88;
  return v6(v2, v3);
}

uint64_t sub_1C0CF3A90(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_1C0CF3AA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  _QWORD *v4;
  uint64_t v5;
  __int16 v6;
  char v7;
  char v8;
  char v9;
  _BYTE *v10;

  if (qword_1ED7558C0 != -1)
    swift_once();
  *(_QWORD *)(v1 + 24) = sub_1C07850AC();
  if (v0)
  {
    v2 = (uint64_t (*)(void))sub_1C07759D4();
    return sub_1C0787F88(v2);
  }
  else
  {
    sub_1C07A29A8();
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v1 + 32) = v4;
    sub_1C0779870(v4, (uint64_t)sub_1C0CF39E8);
    v5 = sub_1C07AB0E8(4u);
    return sub_1C079D724(v5, v6, v7, v8, v9, v10);
  }
}

uint64_t sub_1C0CF3B3C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t);

  v2 = *v0;
  v3 = v0[1];
  v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EF647A48 + dword_1EF647A48);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1C0804B88;
  return v6(v2, v3);
}

uint64_t sub_1C0CF3BA4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_1C0CF3BBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  _QWORD *v4;
  uint64_t v5;
  __int16 v6;
  char v7;
  char v8;
  char v9;
  _BYTE *v10;

  if (qword_1ED7558C0 != -1)
    swift_once();
  *(_QWORD *)(v1 + 24) = sub_1C07850AC();
  if (v0)
  {
    v2 = (uint64_t (*)(void))sub_1C07759D4();
    return sub_1C0787F88(v2);
  }
  else
  {
    sub_1C07A29A8();
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v1 + 32) = v4;
    sub_1C0779870(v4, (uint64_t)sub_1C0CF39E8);
    v5 = sub_1C07AB0E8(6u);
    return sub_1C079D724(v5, v6, v7, v8, v9, v10);
  }
}

uint64_t sub_1C0CF3C50()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t);

  v2 = *v0;
  v3 = v0[1];
  v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EF647A58 + dword_1EF647A58);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1C0804B88;
  return v6(v2, v3);
}

uint64_t sub_1C0CF3CB8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_1C0CF3CD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  _QWORD *v4;
  uint64_t v5;
  __int16 v6;
  char v7;
  char v8;
  char v9;
  _BYTE *v10;

  if (qword_1ED7558C0 != -1)
    swift_once();
  *(_QWORD *)(v1 + 24) = sub_1C07850AC();
  if (v0)
  {
    v2 = (uint64_t (*)(void))sub_1C07759D4();
    return sub_1C0787F88(v2);
  }
  else
  {
    sub_1C07A29A8();
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v1 + 32) = v4;
    sub_1C0779870(v4, (uint64_t)sub_1C0CF39E8);
    v5 = sub_1C07AB0E8(5u);
    return sub_1C079D724(v5, v6, v7, v8, v9, v10);
  }
}

uint64_t sub_1C0CF3D64()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t);

  v2 = *v0;
  v3 = v0[1];
  v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EF647A68 + dword_1EF647A68);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1C0804B88;
  return v6(v2, v3);
}

uint64_t sub_1C0CF3DCC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  return swift_task_switch();
}

uint64_t sub_1C0CF3DE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,_QWORD *a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  _QWORD *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(void);
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  __int16 v45;

  sub_1C07796A0();
  a23 = v27;
  a24 = v28;
  a22 = v25;
  if (qword_1ED7558C0 != -1)
    swift_once();
  v29 = sub_1C07850AC();
  v25[5] = v29;
  if (v24)
  {
    v30 = (uint64_t (*)(void))sub_1C07759D4();
    return sub_1C07785F4(v30);
  }
  else
  {
    v32 = *(_QWORD *)(v29 + 16);
    v25[6] = v32;
    v33 = (_QWORD *)swift_task_alloc();
    v33[2] = sub_1C0CF4114;
    v33[3] = 0;
    v33[4] = v32;
    swift_retain();
    v34 = sub_1C0BB9C1C((uint64_t)sub_1C0CFC4A8, (uint64_t)v33);
    v25[7] = v34;
    sub_1C0779D18();
    if (qword_1ED762AF0 != -1)
      swift_once();
    v35 = sub_1C077585C();
    v36 = sub_1C079E000(v35, (uint64_t)qword_1ED78D9E0);
    swift_bridgeObjectRetain_n();
    sub_1C106F538();
    v37 = sub_1C0784E0C();
    if (sub_1C07767E4(v37))
    {
      v38 = sub_1C0775854();
      a12 = sub_1C0775854();
      *(_DWORD *)v38 = 134218242;
      v25[2] = *(_QWORD *)(v34 + 16);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v38 + 12) = 2080;
      v39 = sub_1C07796D8();
      v40 = MEMORY[0x1C3BA683C](v39, MEMORY[0x1E0DEA968]);
      v42 = v41;
      swift_bridgeObjectRelease();
      v25[3] = sub_1C0788DAC(v40, v42, &a12);
      sub_1C077EE7C();
      sub_1C077589C();
      sub_1C07758A4();
      sub_1C077E89C(&dword_1C0771000, v36, v26, "Resetting %ld disabled views: %s", (uint8_t *)v38);
      sub_1C0778610();
      sub_1C0776778();
    }
    sub_1C077CF6C();

    v43 = (_QWORD *)swift_task_alloc();
    v25[8] = v43;
    *v43 = v25;
    v43[1] = sub_1C0CF4048;
    sub_1C077C524();
    return sub_1C0EC5264(v44, v45);
  }
}

uint64_t sub_1C0CF4048()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *v1;
  v2 = v4;
  sub_1C0780AE0(&v4);
  *(_QWORD *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    sub_1C07767AC();
    sub_1C077960C();
  }
  sub_1C077862C();
  return sub_1C077F6CC();
}

uint64_t sub_1C0CF40B0()
{
  uint64_t (*v0)(void);

  swift_release();
  sub_1C07785A8();
  v0 = (uint64_t (*)(void))sub_1C0779830();
  return sub_1C077CF28(v0);
}

uint64_t sub_1C0CF40DC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1C07785A8();
  sub_1C077AF1C();
  return sub_1C0795770(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0CF4114@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_1C0DB6D1C();
  if (!v1)
    *a1 = result;
  return result;
}

uint64_t sub_1C0CF413C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t);

  v2 = *v0;
  v3 = v0[1];
  v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EF647A78 + dword_1EF647A78);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1C0804B88;
  return v6(v2, v3);
}

uint64_t sub_1C0CF41A4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[53] = a1;
  v2[54] = a2;
  v3 = sub_1C107006C();
  v2[55] = v3;
  v2[56] = *(_QWORD *)(v3 - 8);
  v2[57] = swift_task_alloc();
  v2[58] = swift_task_alloc();
  v4 = sub_1C07ACF80(&qword_1ED74D310);
  v2[59] = v4;
  v2[60] = *(_QWORD *)(v4 - 8);
  v2[61] = swift_task_alloc();
  v2[62] = swift_task_alloc();
  v2[63] = swift_task_alloc();
  v5 = sub_1C07ACF80(&qword_1ED74D308);
  v2[64] = v5;
  v2[65] = *(_QWORD *)(v5 - 8);
  v2[66] = swift_task_alloc();
  v2[67] = sub_1C07ACF80(&qword_1ED75E630);
  v2[68] = swift_task_alloc();
  v2[69] = swift_task_alloc();
  v6 = sub_1C106ADE0();
  v2[70] = v6;
  v2[71] = *(_QWORD *)(v6 - 8);
  v2[72] = swift_task_alloc();
  v2[73] = swift_task_alloc();
  v2[74] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C0CF4304()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  os_log_type_t v4;
  _WORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  os_log_type_t v19;
  _WORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(void);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t inited;
  uint64_t v31;
  uint64_t v32;
  char v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  os_log_type_t v37;
  _WORD *v38;
  uint64_t v39;
  uint64_t v40;
  double v41;
  double v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t *v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(uint64_t, uint64_t);
  _QWORD *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  if (qword_1ED762B18 != -1)
    swift_once();
  v1 = sub_1C077585C();
  v2 = sub_1C079E000(v1, (uint64_t)qword_1ED762AF8);
  v0[75] = v2;
  v3 = (void *)v2;
  sub_1C106F538();
  v4 = sub_1C077B0C0();
  if (sub_1C077C10C(v4))
  {
    v5 = (_WORD *)sub_1C0775854();
    sub_1C078C17C(v5);
    sub_1C077874C(&dword_1C0771000, v6, v7, "Features: deciding whether to sample.");
    sub_1C0776778();
  }

  if (qword_1ED74B208 != -1)
    swift_once();
  v8 = v0[74];
  v9 = v0[71];
  v10 = v0[70];
  sub_1C106ADD4();
  v11 = sub_1C0920BB4();
  v12 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v0[76] = v12;
  v82 = v12;
  v12(v8, v10);
  if ((v11 & 1) != 0)
  {
    if (qword_1ED75E638 != -1)
      swift_once();
    v13 = v0[69];
    v14 = sub_1C079E000(v0[67], (uint64_t)qword_1ED78D780);
    sub_1C0796A84();
    sub_1C079BF4C(v14, v15, &qword_1ED75E630);
    v16 = sub_1C0779D10();
    sub_1C077AEEC(v13, 1, v16);
    if (v17)
    {
      __break(1u);
    }
    else
    {
      v18 = v0[69];
      type metadata accessor for CUFeatureProvider();
      sub_1C077B5BC();
      sub_1C08E56C0(v18);
      sub_1C08E610C();
      v83 = v0;
      sub_1C07785A8();
      if (qword_1EF62DAE8 != -1)
        swift_once();
      sub_1C077AE90();
      v24 = sub_1C0CF1310();
      sub_1C077960C();
      v0[51] = v24;
      if ((objc_msgSend((id)objc_opt_self(), sel_isBetaBuild) & 1) != 0
        || objc_msgSend((id)objc_opt_self(), sel_isInternalDevice))
      {
        if (qword_1EF62DAF0 != -1)
          swift_once();
        sub_1C077AE90();
        sub_1C0CF1310();
        sub_1C077960C();
        sub_1C0BD9F18();
      }
      v26 = v0[68];
      sub_1C077B888(v14, v25, &qword_1ED75E630);
      sub_1C077AEEC(v26, 1, v16);
      if (!v17)
      {
        sub_1C0CF545C(v0[68]);
        v28 = v27;
        sub_1C07B1F90(v0[68], (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
        sub_1C08AB0A4();
        v0[77] = v28;
        sub_1C07767C4();
        sub_1C0BD9F18();
        sub_1C07ACF80((uint64_t *)&unk_1EF6479C0);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1C1079220;
        *(_QWORD *)(inited + 32) = 0xD00000000000001BLL;
        *(_QWORD *)(inited + 40) = 0x80000001C10E7470;
        if (v28)
        {
          v31 = type metadata accessor for BehaviorsFeatureProvider();
          sub_1C0794BAC(&qword_1EF641838, (uint64_t (*)(uint64_t))type metadata accessor for BehaviorsFeatureProvider, (uint64_t)&unk_1C107DE9C);
          v33 = 1;
        }
        else
        {
          v31 = 0;
          v32 = 0;
          *(_QWORD *)(inited + 88) = 0;
          v33 = -1;
          *(_QWORD *)(inited + 56) = 0;
          *(_QWORD *)(inited + 64) = 0;
        }
        v0[78] = v28;
        *(_QWORD *)(inited + 48) = v28;
        *(_QWORD *)(inited + 72) = v31;
        *(_QWORD *)(inited + 80) = v32;
        *(_BYTE *)(inited + 96) = v33;
        swift_retain();
        sub_1C07ACF80((uint64_t *)&unk_1EF6479D0);
        v34 = (void *)sub_1C106F97C();
        sub_1C089D604();
        v36 = v35;
        sub_1C0775834();
        sub_1C0CF1670(v36, (uint64_t)v34);
        sub_1C07A9550();
        v37 = sub_1C0784E0C();
        if (sub_1C077AF00(v37))
        {
          v38 = (_WORD *)sub_1C0775854();
          sub_1C07A7CA0(v38);
          sub_1C0798520(&dword_1C0771000, v39, v40, "Features: Starting data collection");
          sub_1C0776778();
        }

        sub_1C106ADD4();
        sub_1C106AD2C();
        sub_1C106AC60();
        v42 = v41;
        sub_1C106AC60();
        sub_1C0CF16EC(v42, v43, 300.0);
        sub_1C08454A8();
        v45 = v44;
        sub_1C077960C();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v46 = sub_1C08FFB48();
        v75 = v47;
        v76 = v46;
        sub_1C0CF199C();
        v49 = v48;
        sub_1C077589C();
        v50 = *(_QWORD *)(v45 + 16);
        v51 = MEMORY[0x1E0DEE9D8];
        if (v50)
        {
          v74 = v49;
          v80 = v0[65];
          v81 = v0[71];
          v52 = v0[60];
          v78 = v0[59];
          v79 = v0[64];
          v88 = MEMORY[0x1E0DEE9D8];
          sub_1C09D49C8();
          v53 = v45 + ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80));
          v77 = *(_QWORD *)(v52 + 72);
          v51 = v88;
          v54 = v0;
          do
          {
            v86 = v50;
            v87 = v51;
            v55 = v54[70];
            v56 = (_QWORD *)v54[66];
            v57 = (uint64_t *)v54[62];
            v58 = (uint64_t *)v54[63];
            v84 = v54[61];
            sub_1C078A8F8(v53, (uint64_t)v58, &qword_1ED74D310);
            v85 = (char *)v56 + *(int *)(v79 + 48);
            v59 = (uint64_t)v57 + *(int *)(v78 + 48);
            v60 = *v58;
            *v57 = *v58;
            sub_1C07BC318(v59);
            *v56 = v60;
            v61 = v84 + *(int *)(v78 + 48);
            sub_1C07BC318(v61);
            (*(void (**)(char *, uint64_t, uint64_t))(v81 + 32))(v85, v61, v55);
            v82(v59, v55);
            v62 = (uint64_t)v58;
            v51 = v87;
            sub_1C0784B6C(v62, &qword_1ED74D310);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1C09D49C8();
              v51 = v88;
            }
            v63 = *(_QWORD *)(v51 + 16);
            v54 = v83;
            if (v63 >= *(_QWORD *)(v51 + 24) >> 1)
            {
              sub_1C09D49C8();
              v51 = v88;
            }
            v64 = v83[66];
            *(_QWORD *)(v51 + 16) = v63 + 1;
            sub_1C078A67C(v64, v51+ ((*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80))+ *(_QWORD *)(v80 + 72) * v63, &qword_1ED74D308);
            v53 += v77;
            v50 = v86 - 1;
          }
          while (v86 != 1);
          v49 = v74;
        }
        else
        {
          v54 = v0;
        }
        v65 = v54;
        v68 = v54 + 53;
        v67 = v54[53];
        v66 = v68[1];
        sub_1C0775894();
        swift_release();
        sub_1C0898F1C();
        v70 = v69;
        v71 = sub_1C08A93C0();
        type metadata accessor for HistoricalSampleTaskStandardProto();
        v65[79] = swift_initStackObject();
        *((_QWORD *)&v73 + 1) = v71;
        *(_QWORD *)&v73 = v70;
        v65[80] = sub_1C08F37C4(v67, v66, 0xD00000000000001CLL, 0x80000001C1109550, 12630, 0xE200000000000000, v76, v75, 300.0, v49, v51, v73, 2, 0, 0);
        v72 = (_QWORD *)swift_task_alloc();
        v65[81] = v72;
        sub_1C0779870(v72, (uint64_t)sub_1C0CF50F8);
        return sub_1C08F3814();
      }
    }
    result = sub_1C0775834();
    __break(1u);
    return result;
  }
  sub_1C07A9550();
  v19 = sub_1C077B0C0();
  if (sub_1C077C10C(v19))
  {
    v20 = (_WORD *)sub_1C0775854();
    sub_1C078C17C(v20);
    sub_1C077874C(&dword_1C0771000, v21, v22, "Features: decided not to sample");
    sub_1C0776778();
  }

  swift_task_dealloc();
  sub_1C07767BC();
  sub_1C0779D20();
  sub_1C07796F8();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C07767D4();
  sub_1C0778638();
  sub_1C0786388();
  swift_task_dealloc();
  v23 = (uint64_t (*)(void))sub_1C0779830();
  return v23();
}

uint64_t sub_1C0CF50F8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_1C077E88C();
  sub_1C0780AE0(v2);
  *(_QWORD *)(v0 + 656) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_release();
  sub_1C077862C();
  return sub_1C0789D28();
}

uint64_t sub_1C0CF514C()
{
  _QWORD *v0;
  void *v1;
  os_log_type_t v2;
  _WORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);

  v1 = (void *)v0[75];
  sub_1C106F538();
  v2 = sub_1C0784E0C();
  if (sub_1C077C10C(v2))
  {
    v3 = (_WORD *)sub_1C0775854();
    sub_1C078C17C(v3);
    sub_1C077874C(&dword_1C0771000, v4, v5, "Data collection complete");
    sub_1C0776778();
  }
  v6 = v0[77];
  v7 = (void (*)(uint64_t, uint64_t))v0[76];
  v8 = v0[73];
  v9 = v0[72];
  v10 = v0[70];

  v7(v9, v10);
  v7(v8, v10);
  swift_retain();
  sub_1C0CF5BD4(v6);
  swift_release_n();
  sub_1C07AEA20();
  sub_1C07767BC();
  sub_1C07796F8();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C07767D4();
  sub_1C0778638();
  sub_1C0786388();
  sub_1C0779D20();
  swift_task_dealloc();
  v11 = (uint64_t (*)(void))sub_1C0779830();
  return sub_1C0781074(v11);
}

uint64_t sub_1C0CF5244()
{
  _QWORD *v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;
  os_log_type_t v12;
  _WORD *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void);
  uint64_t v22;

  v1 = (void *)v0[82];
  swift_release();
  v2 = v1;
  v3 = v1;
  v4 = sub_1C106F538();
  v5 = sub_1C1070390();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (void *)v0[82];
    v7 = (uint8_t *)sub_1C0775854();
    v8 = (_QWORD *)sub_1C0775854();
    *(_DWORD *)v7 = 138412290;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[43] = v10;
    sub_1C10705AC();
    *v8 = v10;

    sub_1C07796F0(&dword_1C0771000, v4, v5, "Features: critical error that halted data collection: %@", v7);
    sub_1C07ACF80(&qword_1ED7614A0);
    sub_1C0778610();
    sub_1C0776778();
  }
  sub_1C077C220();
  sub_1C077C220();
  v11 = (void *)v0[75];

  sub_1C106F538();
  v12 = sub_1C077C13C();
  if (sub_1C077C10C(v12))
  {
    v13 = (_WORD *)sub_1C0775854();
    sub_1C078C17C(v13);
    sub_1C077874C(&dword_1C0771000, v14, v15, "Data collection failed");
    sub_1C0776778();
  }
  v22 = v0[77];
  v16 = (void (*)(uint64_t, uint64_t))v0[76];
  v17 = v0[73];
  v18 = v0[72];
  v19 = v0[70];

  sub_1C077C220();
  v16(v18, v19);
  v16(v17, v19);
  swift_retain();
  sub_1C0CF5BD4(v22);
  swift_release_n();
  sub_1C07AEA20();
  sub_1C07767BC();
  sub_1C07796F8();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C07767D4();
  sub_1C0778638();
  sub_1C0786388();
  sub_1C0779D20();
  swift_task_dealloc();
  v20 = (uint64_t (*)(void))sub_1C0779830();
  return sub_1C0781074(v20);
}

void sub_1C0CF545C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  __int128 v56;
  _QWORD *v57;
  uint64_t v58;
  id v59;
  char *v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  void *v65;
  _UNKNOWN **v66;
  _QWORD v67[3];
  void *v68;
  _UNKNOWN **v69;
  _OWORD v70[2];
  uint64_t v71;
  char v72;
  uint64_t v73;

  *(_QWORD *)&v63 = a1;
  v2 = sub_1C106D6CC();
  v73 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C07ACF80(&qword_1ED75E630);
  MEMORY[0x1E0C80A78](v5);
  *(_QWORD *)&v62 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v58 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v58 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v58 - v14;
  if (qword_1ED749400 != -1)
    swift_once();
  v16 = sub_1C079E000(v5, (uint64_t)qword_1ED7493E0);
  swift_beginAccess();
  sub_1C078A8F8(v16, (uint64_t)v15, &qword_1ED75E630);
  v17 = type metadata accessor for Configuration();
  if (sub_1C07B2D80((uint64_t)v15, 1, v17) == 1)
  {
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    return;
  }
  v60 = v4;
  v61 = v2;
  if (qword_1ED762808 != -1)
    swift_once();
  v18 = sub_1C0CBD86C();
  if (v1)
  {
    sub_1C07B1F90((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    return;
  }
  v19 = v18;
  sub_1C07B1F90((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v20 = *(id *)(v19 + OBJC_IVAR____TtCO24IntelligencePlatformCore14ViewGeneration11ViewClients_viewService);
  swift_release();
  sub_1C078A8F8(v16, (uint64_t)v12, &qword_1ED75E630);
  if (sub_1C07B2D80((uint64_t)v12, 1, v17) == 1)
    goto LABEL_20;
  v21 = (void *)type metadata accessor for BehaviorHistoryUtility();
  swift_allocObject();
  v22 = v20;
  sub_1C086AA04();
  v24 = v23;
  v59 = v22;
  if (qword_1ED75E638 != -1)
    swift_once();
  v25 = sub_1C079E000(v5, (uint64_t)qword_1ED78D780);
  swift_beginAccess();
  sub_1C078A8F8(v25, (uint64_t)v9, &qword_1ED75E630);
  if (sub_1C07B2D80((uint64_t)v9, 1, v17) == 1)
    goto LABEL_21;
  type metadata accessor for BehaviorFeaturizer();
  v68 = v21;
  v69 = &off_1E7A0FBC8;
  v67[0] = v24;
  swift_retain();
  v26 = sub_1C084C088((uint64_t)v9, (uint64_t)v67);
  v68 = (void *)type metadata accessor for BehaviorDatabase(0);
  v69 = &off_1E7A10C48;
  if (qword_1ED7549C0 != -1)
    swift_once();
  swift_retain();
  v27 = sub_1C0CBD818();
  swift_release();
  v66 = &off_1E7A0FBC8;
  v67[0] = v27;
  v65 = v21;
  *(_QWORD *)&v64 = v24;
  v28 = v25;
  v29 = v62;
  sub_1C078A8F8(v28, v62, &qword_1ED75E630);
  if (sub_1C07B2D80(v29, 1, v17) == 1)
    goto LABEL_22;
  type metadata accessor for KeyValueStore();
  swift_allocObject();
  swift_retain();
  v30 = KeyValueStore.init(config:domain:)(v29, 1413829954, 0xE400000000000000);
  v31 = sub_1C079D180((uint64_t)v67, (uint64_t)v68);
  v32 = MEMORY[0x1E0C80A78](v31);
  v34 = (uint64_t *)((char *)&v58 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v35 + 16))(v34, v32);
  v36 = sub_1C079D180((uint64_t)&v64, (uint64_t)v65);
  v37 = MEMORY[0x1E0C80A78](v36);
  v39 = (uint64_t)v26;
  v40 = (uint64_t *)((char *)&v58 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v41 + 16))(v40, v37);
  v42 = sub_1C0B8A38C(*v34, *v40, v30);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)&v64);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v67);
  swift_retain();
  swift_retain();
  swift_retain();
  v43 = sub_1C0846380();
  if (v43)
  {
    v47 = v43;
    v48 = v44;
    v49 = v45;
    v50 = v46;
    v65 = &unk_1E7A0E028;
    v66 = &off_1E7A0E048;
    v51 = (_QWORD *)swift_allocObject();
    *(_QWORD *)&v64 = v51;
    v51[2] = v47;
    v51[3] = v48;
    v51[4] = v49;
    v51[5] = v50;
    sub_1C077DD60(&v64, (uint64_t)v67);
  }
  else
  {
    v52 = (uint64_t)v60;
    (*(void (**)(char *, _QWORD, uint64_t))(v73 + 104))(v60, *MEMORY[0x1E0D3C0F0], v61);
    sub_1C0821FFC(v52, 7040629, 0xE300000000000000, (uint64_t)v70);
    v63 = v70[0];
    v62 = v70[1];
    v53 = v71;
    v54 = v72;
    v68 = &unk_1E7A0E0C0;
    v69 = &off_1E7A0E158;
    v55 = swift_allocObject();
    v67[0] = v55;
    v56 = v62;
    *(_OWORD *)(v55 + 16) = v63;
    *(_OWORD *)(v55 + 32) = v56;
    *(_QWORD *)(v55 + 48) = v53;
    *(_BYTE *)(v55 + 56) = v54;
  }

  swift_release();
  swift_release();
  swift_release();
  type metadata accessor for BehaviorsFeatureProvider();
  v57 = (_QWORD *)swift_allocObject();
  sub_1C0BB6B9C(v24, v42, v39, (uint64_t)v67, MEMORY[0x1E0DEE9D8], 100, (uint64_t)sub_1C0798424, 0, v57);
}

uint64_t sub_1C0CF5BD4(uint64_t result)
{
  if (result)
    return sub_1C087BEF4();
  return result;
}

uint64_t sub_1C0CF5E34()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *v0;
  v3 = v0[1];
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1C0804B88;
  return sub_1C0CF41A4(v2, v3);
}

uint64_t sub_1C0CF5E84()
{
  if ((objc_msgSend((id)objc_opt_self(), sel_isInternalDevice) & 1) != 0)
    return 10;
  if (objc_msgSend((id)objc_opt_self(), sel_isBetaBuild))
    return 5;
  return 1;
}

uint64_t sub_1C0CF5EFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  type metadata accessor for Configuration();
  v3[13] = swift_task_alloc();
  return swift_task_switch();
}

void sub_1C0CF5F58()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 112) = sub_1C0CF5E84();
  sub_1C0945C38(0.0, 1.0);
}

uint64_t sub_1C0CF5FA8(double a1)
{
  NSObject *v1;
  uint64_t v2;
  os_log_type_t v3;
  uint64_t v4;
  double v5;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  NSObject *v20;
  os_log_type_t v21;
  const char *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t (*v27)(void);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  __int16 v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52[14];

  if (qword_1ED761458 != -1)
    swift_once();
  v7 = sub_1C077585C();
  *(_QWORD *)(v2 + 120) = sub_1C0781988(v7, (uint64_t)qword_1ED78D818);
  sub_1C0775888();
  v8 = sub_1C106F538();
  v9 = sub_1C1070378();
  v10 = sub_1C0CFC534(v9);
  v11 = *(_QWORD *)(v2 + 96);
  if (v10)
  {
    v12 = *(_QWORD *)(v2 + 88);
    v13 = sub_1C0775854();
    v52[0] = sub_1C0775854();
    *(_DWORD *)v13 = 136315650;
    sub_1C07796D8();
    *(_QWORD *)(v2 + 56) = sub_1C0788DAC(v12, v11, v52);
    sub_1C077EE7C();
    sub_1C077CF6C();
    *(_WORD *)(v13 + 12) = 2048;
    *(double *)(v2 + 64) = v5;
    sub_1C10705AC();
    *(_WORD *)(v13 + 22) = 2048;
    *(double *)(v2 + 72) = a1;
    sub_1C10705AC();
    _os_log_impl(&dword_1C0771000, v8, v3, "%s: deciding whether to sample. Probability = %f, Draw = %f", (uint8_t *)v13, 0x20u);
    sub_1C0778610();
    sub_1C0776778();
  }
  sub_1C07758A4();

  if (a1 >= v5)
  {
    sub_1C07767CC();
    sub_1C106F538();
    v23 = sub_1C077B0C0();
    if (sub_1C07758D8(v23))
    {
      v24 = *(_QWORD *)(v2 + 88);
      v25 = (uint8_t *)sub_1C0775854();
      v52[0] = sub_1C0775854();
      *(_DWORD *)v25 = 136315138;
      sub_1C07767B4();
      *(_QWORD *)(v2 + 16) = sub_1C077B650(v24, v26, v52);
      sub_1C07936B4();
      sub_1C0799F00();
      sub_1C07796F0(&dword_1C0771000, v1, (os_log_type_t)v11, "%s: decided not to sample", v25);
      sub_1C0778610();
      sub_1C0776778();
    }
    sub_1C07758A4();

    goto LABEL_14;
  }
  if (v4 < 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (!v4)
  {
LABEL_14:
    swift_task_dealloc();
    v27 = (uint64_t (*)(void))sub_1C0779830();
    return v27();
  }
  *(_QWORD *)(v2 + 128) = 0;
  if (*(_QWORD *)(v2 + 112))
  {
    v14 = *(void **)(v2 + 120);
    sub_1C07767CC();
    sub_1C106F538();
    v15 = sub_1C077B0C0();
    if (sub_1C07767E4(v15))
    {
      v16 = *(_QWORD *)(v2 + 88);
      v17 = sub_1C0775854();
      v52[0] = sub_1C0775854();
      *(_DWORD *)v17 = 136315394;
      sub_1C07767B4();
      *(_QWORD *)(v2 + 40) = sub_1C077B650(v16, v18, v52);
      sub_1C07B5C88();
      sub_1C0799F00();
      *(_WORD *)(v17 + 12) = 2048;
      *(_QWORD *)(v2 + 48) = 0;
      sub_1C10705AC();
      sub_1C0781BBC();
      sub_1C077E89C(v19, v20, v21, v22, (uint8_t *)v17);
      sub_1C0778610();
      sub_1C0776778();
    }
    sub_1C07758A4();

    v29 = *(_QWORD *)(v2 + 104);
    v30 = *(_QWORD *)(v2 + 80);
    sub_1C07ACF80(&qword_1ED762CD0);
    v31 = sub_1C0778598();
    *(_OWORD *)(v31 + 16) = xmmword_1C107B050;
    *(_QWORD *)(v2 + 24) = 0;
    sub_1C0799E58();
    v32 = objc_allocWithZone(MEMORY[0x1E0D3DFA8]);
    *(_QWORD *)(v31 + 32) = sub_1C0786688((uint64_t)"behaviorSequenceSignal");
    *(_QWORD *)(v2 + 32) = 0;
    sub_1C0799E58();
    v33 = objc_allocWithZone(MEMORY[0x1E0D3DFA8]);
    *(_QWORD *)(v31 + 40) = sub_1C077D308();
    v52[0] = v31;
    sub_1C106FF28();
    sub_1C07E05C8(v30, v29, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    v34 = qword_1ED747E98;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    if (v34 == -1)
      goto LABEL_16;
    goto LABEL_19;
  }
LABEL_18:
  __break(1u);
LABEL_19:
  swift_once();
LABEL_16:
  sub_1C0CFC514();
  sub_1C077B5BC();
  sub_1C078084C();
  sub_1C0CFC588();
  v43 = sub_1C0790A48(v35, v36, v37, v38, v39, v40, v41, v42, v45, v46, v47, v48, SHIBYTE(v48), v49, v50, v51);
  sub_1C0CFC544(v43);
  sub_1C0786E34();
  v44 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 144) = v44;
  sub_1C0779870(v44, (uint64_t)sub_1C0CF649C);
  return sub_1C08F16E8();
}

uint64_t sub_1C0CF649C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_1C077E88C();
  sub_1C0780AE0(v2);
  *(_QWORD *)(v0 + 152) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_release();
  sub_1C077862C();
  return sub_1C0789D28();
}

uint64_t sub_1C0CF64F0()
{
  _QWORD *v0;
  os_log_type_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  __int16 v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v2 = v0[16] + 1;
  if (v2 == v0[14])
  {
    swift_task_dealloc();
    v3 = (uint64_t (*)(void))sub_1C0779830();
    return v3();
  }
  else
  {
    v0[16] = v2;
    v5 = v0[15];
    sub_1C07767CC();
    sub_1C106F538();
    v6 = sub_1C077B0C0();
    if (sub_1C077AF00(v6))
    {
      v7 = v0[11];
      v8 = sub_1C0775854();
      v33 = sub_1C0775854();
      *(_DWORD *)v8 = 136315394;
      sub_1C07767C4();
      v0[5] = sub_1C0782968(v7, v9, &v33);
      sub_1C077EE7C();
      sub_1C077CF6C();
      *(_WORD *)(v8 + 12) = 2048;
      v0[6] = v2;
      sub_1C10705AC();
      sub_1C077E89C(&dword_1C0771000, v5, v1, "%s: logging sequence with subidentifier %ld", (uint8_t *)v8);
      sub_1C0778610();
      sub_1C0776778();
    }
    sub_1C07758A4();

    v32 = v0[13];
    v10 = v0[10];
    sub_1C07ACF80(&qword_1ED762CD0);
    v11 = sub_1C0778598();
    *(_OWORD *)(v11 + 16) = xmmword_1C107B050;
    v0[3] = v2;
    sub_1C0782BF0();
    v12 = objc_allocWithZone(MEMORY[0x1E0D3DFA8]);
    *(_QWORD *)(v11 + 32) = sub_1C0786688((uint64_t)"behaviorSequenceSignal");
    v0[4] = v2;
    sub_1C0782BF0();
    v13 = objc_allocWithZone(MEMORY[0x1E0D3DFA8]);
    *(_QWORD *)(v11 + 40) = sub_1C077D308();
    v33 = v11;
    sub_1C106FF28();
    sub_1C07E05C8(v10, v32, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    v14 = qword_1ED747E98;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    if (v14 != -1)
      swift_once();
    sub_1C0CFC514();
    sub_1C077B5BC();
    sub_1C078084C();
    sub_1C0CFC588();
    v23 = sub_1C0790A48(v15, v16, v17, v18, v19, v20, v21, v22, v25, v26, v27, v28, SHIBYTE(v28), v29, v30, v31);
    sub_1C0CFC544(v23);
    sub_1C0786E34();
    v24 = (_QWORD *)swift_task_alloc();
    v0[18] = v24;
    sub_1C0779870(v24, (uint64_t)sub_1C0CF649C);
    return sub_1C08F16E8();
  }
}

uint64_t sub_1C0CF67D0()
{
  uint64_t v0;

  swift_release();
  sub_1C07767BC();
  return sub_1C077CF28(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0CF6804()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t);

  v2 = *v0;
  v3 = v0[1];
  v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EF6479F0 + dword_1EF6479F0);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1C0804B88;
  return v6(v2, v3);
}

uint64_t sub_1C0CF686C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 104) = sub_1C07ACF80(&qword_1ED75E630);
  *(_QWORD *)(v0 + 112) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C0CF68C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  char v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  if (qword_1ED75E638 != -1)
    swift_once();
  v1 = sub_1C07AE0EC(*(_QWORD *)(v0 + 104), (uint64_t)qword_1ED78D780);
  sub_1C0791F78(v1, v2, &qword_1ED75E630);
  v3 = sub_1C0779D10();
  result = sub_1C078FABC(v3);
  if (v5)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v0 + 16) = 2;
    *(_BYTE *)(v0 + 24) = 0;
    sub_1C078A340();
    *(_QWORD *)(v0 + 32) = v6;
    *(_QWORD *)(v0 + 40) = v7;
    *(_OWORD *)(v0 + 48) = xmmword_1C10B4C60;
    *(int64x2_t *)(v0 + 64) = vdupq_n_s64(0x3BuLL);
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v8;
    *v8 = v0;
    v8[1] = sub_1C0CF69B0;
    return sub_1C0A07B98(*(_QWORD *)(v0 + 112));
  }
  return result;
}

uint64_t sub_1C0CF69B0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v5)(void);

  sub_1C077E88C();
  sub_1C0780AE0(v2);
  *(_QWORD *)(v0 + 128) = v1;
  v3 = swift_task_dealloc();
  if (v1)
  {
    sub_1C077862C();
    return sub_1C0789D28();
  }
  else
  {
    sub_1C07825F4(v3, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    sub_1C07767BC();
    v5 = (uint64_t (*)(void))sub_1C0779830();
    return sub_1C0795770(v5);
  }
}

uint64_t sub_1C0CF6A10(uint64_t a1)
{
  uint64_t v1;

  sub_1C07825F4(a1, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  sub_1C07767BC();
  return sub_1C077CF28(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1C0CF6A48()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C0804B88;
  return sub_1C0CF686C();
}

uint64_t sub_1C0CF6A98()
{
  _QWORD *v0;

  v0[5] = type metadata accessor for LongitudinalDataCollectionTask();
  v0[6] = swift_task_alloc();
  v0[7] = sub_1C07ACF80(&qword_1ED75E630);
  v0[8] = swift_task_alloc();
  v0[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C0CF6B28()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;

  if (qword_1ED75E638 != -1)
    swift_once();
  v1 = v0[9];
  sub_1C0781988(v0[7], (uint64_t)qword_1ED78D780);
  v2 = sub_1C0775864();
  sub_1C07B9F78(v2, v3, &qword_1ED75E630);
  v4 = sub_1C0779D10();
  result = sub_1C077AEEC(v1, 1, v4);
  if (v6)
  {
    __break(1u);
  }
  else
  {
    v7 = v0[9];
    v8 = *(_QWORD *)(v7 + *(int *)(v4 + 20) + 8);
    sub_1C07B1F90(v7, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    if ((v8 & 0x1000) == 0)
    {
      sub_1C0788C60();
      sub_1C07767BC();
      sub_1C07796F8();
      v11 = (uint64_t (*)(void))sub_1C0779830();
      return sub_1C0787F88(v11);
    }
    v12 = v0[8];
    sub_1C07B9F78(v9, v10, &qword_1ED75E630);
    result = sub_1C077AEEC(v12, 1, v4);
    if (!v6)
    {
      v13 = (int *)v0[5];
      v14 = v0[6];
      sub_1C07E05F4(v0[8], v14, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
      v15 = v14 + v13[5];
      *(_QWORD *)v15 = 2;
      *(_BYTE *)(v15 + 8) = 0;
      v16 = (_QWORD *)(v14 + v13[6]);
      *v16 = 0xD00000000000001ALL;
      v16[1] = 0x80000001C1109510;
      *(_QWORD *)(v14 + v13[7]) = 1;
      *(_QWORD *)(v14 + v13[8]) = 23;
      *(_QWORD *)(v14 + v13[9]) = 59;
      *(_QWORD *)(v14 + v13[10]) = 59;
      v17 = (_QWORD *)swift_task_alloc();
      v0[10] = v17;
      *v17 = v0;
      v17[1] = sub_1C0CF6CC8;
      return sub_1C0C280AC();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0CF6CC8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v5)(void);
  uint64_t v6;

  v6 = *v1;
  v2 = v6;
  sub_1C0780AE0(&v6);
  *(_QWORD *)(v2 + 88) = v0;
  v3 = swift_task_dealloc();
  sub_1C0791DDC(v3, (uint64_t (*)(_QWORD))type metadata accessor for LongitudinalDataCollectionTask);
  if (v0)
  {
    sub_1C077862C();
    return sub_1C077F6CC();
  }
  else
  {
    swift_task_dealloc();
    sub_1C07767BC();
    sub_1C07796F8();
    v5 = (uint64_t (*)(void))sub_1C0779830();
    return sub_1C0787F88(v5);
  }
}

uint64_t sub_1C0CF6D44()
{
  uint64_t v0;

  sub_1C0788C60();
  sub_1C07767BC();
  sub_1C07796F8();
  return sub_1C0795770(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0CF6D74()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C0804B88;
  return sub_1C0CF6A98();
}

uint64_t sub_1C0CF6DC4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  type metadata accessor for Configuration();
  *(_QWORD *)(v1 + 24) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C0CF6E1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  v3 = type metadata accessor for ScheduledTasks.AutonamingMetricsLoggingRunner();
  sub_1C07E05C8(v2 + *(int *)(v3 + 20), v1, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  type metadata accessor for AutonamingFeedbackCAEventLogger();
  v4 = sub_1C077B5BC();
  sub_1C07ACF80(&qword_1ED7480E0);
  sub_1C080AC38();
  *(_QWORD *)(v4 + 16) = sub_1C106F97C();
  sub_1C07E05F4(v1, v4 + OBJC_IVAR____TtC24IntelligencePlatformCore31AutonamingFeedbackCAEventLogger_config, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  sub_1C0806934();
  swift_release();
  sub_1C07796F8();
  v5 = (uint64_t (*)(void))sub_1C0779830();
  return v5();
}

uint64_t sub_1C0CF6EE8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C0804B88;
  return sub_1C0CF6DC4();
}

uint64_t sub_1C0CF6F30(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2[8] = a1;
  v2[9] = a2;
  v2[10] = type metadata accessor for Pipeline.StatusStore();
  v2[11] = swift_task_alloc();
  v2[12] = sub_1C07ACF80(&qword_1ED75E630);
  v2[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C0CF6FB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint8_t *v32;
  uint64_t v33;
  void *v34;
  NSObject *v35;
  os_log_type_t v36;
  const char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t result;
  char v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  _BOOL8 v51;
  os_log_type_t v52;
  _BOOL4 v53;
  unint64_t v54;
  uint8_t *v55;
  uint64_t (*v56)(void);
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;

  sub_1C07796A0();
  a23 = v26;
  a24 = v27;
  a22 = v25;
  if (qword_1ED761458 != -1)
    swift_once();
  v28 = sub_1C077585C();
  v29 = sub_1C079E000(v28, (uint64_t)qword_1ED78D818);
  *(_QWORD *)(v25 + 112) = v29;
  sub_1C07767CC();
  sub_1C106F538();
  v30 = sub_1C0784E0C();
  if (sub_1C07767E4(v30))
  {
    v31 = *(_QWORD *)(v25 + 64);
    v32 = (uint8_t *)sub_1C0775854();
    a12 = sub_1C0775854();
    *(_DWORD *)v32 = 136315138;
    sub_1C07767C4();
    *(_QWORD *)(v25 + 56) = sub_1C0782968(v31, v33, &a12);
    sub_1C07B1D00();
    sub_1C077CF6C();
    sub_1C0781BBC();
    sub_1C07796F0(v34, v35, v36, v37, v32);
    sub_1C0778610();
    sub_1C0776778();
  }
  sub_1C07758A4();

  if (qword_1ED75E638 != -1)
    swift_once();
  v38 = *(_QWORD *)(v25 + 104);
  v39 = sub_1C079E000(*(_QWORD *)(v25 + 96), (uint64_t)qword_1ED78D780);
  sub_1C0775864();
  sub_1C077B888(v39, v40, &qword_1ED75E630);
  v41 = sub_1C0779D10();
  result = sub_1C077AEEC(v38, 1, v41);
  if (!v43)
  {
    if (qword_1ED755EC8 != -1)
      swift_once();
    v44 = sub_1C07A5ED0();
    *(_QWORD *)(v25 + 120) = v44;
    v45 = *(_QWORD *)(v25 + 104);
    if (v24)
    {
      sub_1C07B1F90(v45, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
      *(_QWORD *)(v25 + 40) = v24;
      sub_1C077CF64();
      sub_1C07ACF80(&qword_1ED7614F0);
      if ((sub_1C0791E2C() & 1) == 0)
      {
        sub_1C0CFC524();
        sub_1C07767BC();
        sub_1C07796F8();
        v56 = (uint64_t (*)(void))sub_1C07759D4();
        return sub_1C07785F4(v56);
      }
      v46 = *(NSObject **)(v25 + 112);
      sub_1C077E6C8();
      sub_1C106F538();
      v47 = sub_1C0784E0C();
      if (sub_1C07758D8(v47))
      {
        v48 = (uint8_t *)sub_1C0775854();
        *(_WORD *)v48 = 0;
        sub_1C077F048(&dword_1C0771000, v46, (os_log_type_t)v24, "Pipeline retired same phase multiple times. Need to invoke long running construction xpc activity", v48);
        sub_1C0776778();
      }

    }
    else
    {
      v50 = *(_QWORD *)(v25 + 80);
      v49 = *(_QWORD *)(v25 + 88);
      sub_1C07B1F90(v45, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
      sub_1C07E05C8(v44 + OBJC_IVAR____TtC24IntelligencePlatformCore8Pipeline_stores, v49, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
      *(_BYTE *)(v49 + *(int *)(v50 + 20)) = 1;
      v51 = Pipeline.StatusStore.isLongRunningPipelineActivated()();
      sub_1C07825F4(v51, (uint64_t (*)(_QWORD))type metadata accessor for Pipeline.StatusStore);
      if (!v51)
      {
        v57 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v25 + 128) = v57;
        *v57 = v25;
        v57[1] = sub_1C0CF73FC;
        sub_1C077C524();
        return sub_1C0CBD984(v58);
      }
      sub_1C07767CC();
      sub_1C106F538();
      v52 = sub_1C0784E0C();
      v53 = sub_1C07758D8(v52);
      v54 = *(_QWORD *)(v25 + 72);
      if (v53)
      {
        v59 = *(_QWORD *)(v25 + 64);
        v55 = (uint8_t *)sub_1C0775854();
        a12 = sub_1C0775854();
        *(_DWORD *)v55 = 136315138;
        sub_1C077C0B8();
        *(_QWORD *)(v25 + 48) = sub_1C0788DAC(v59, v54, &a12);
        sub_1C10705AC();
        sub_1C077CF6C();
        sub_1C07796F0(&dword_1C0771000, v29, (os_log_type_t)v50, "ConstructionSystemTasks: Need for long running exception activity. Exiting %s", v55);
        sub_1C0778610();
        sub_1C0776778();
      }
      sub_1C0780A00();
      sub_1C07758A4();

    }
    sub_1C078BE48();
    sub_1C07767BC();
    v56 = (uint64_t (*)(void))sub_1C0779830();
    return sub_1C07785F4(v56);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0CF73FC()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_1C077B0C8();
  *v2 = *v1;
  *(_QWORD *)(v3 + 136) = v0;
  swift_task_dealloc();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0CF744C()
{
  uint64_t (*v0)(void);

  swift_release();
  sub_1C078BE48();
  sub_1C07767BC();
  v0 = (uint64_t (*)(void))sub_1C0779830();
  return sub_1C077CF28(v0);
}

uint64_t sub_1C0CF747C()
{
  uint64_t v0;
  void *v1;
  os_log_type_t v2;
  _WORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  swift_release();
  *(_QWORD *)(v0 + 40) = *(_QWORD *)(v0 + 136);
  sub_1C077CF64();
  sub_1C07ACF80(&qword_1ED7614F0);
  if (sub_1C0791E2C())
  {
    v1 = *(void **)(v0 + 112);
    sub_1C077E6C8();
    sub_1C106F538();
    v2 = sub_1C0784E0C();
    if (sub_1C077C10C(v2))
    {
      v3 = (_WORD *)sub_1C0775854();
      sub_1C078C17C(v3);
      sub_1C077874C(&dword_1C0771000, v4, v5, "Pipeline retired same phase multiple times. Need to invoke long running construction xpc activity");
      sub_1C0776778();
    }

    sub_1C078BE48();
    sub_1C07767BC();
    v6 = (uint64_t (*)(void))sub_1C0779830();
  }
  else
  {
    sub_1C0CFC524();
    sub_1C07767BC();
    sub_1C07796F8();
    v6 = (uint64_t (*)(void))sub_1C07759D4();
  }
  return sub_1C0787F88(v6);
}

void sub_1C0CF753C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v6 = (_QWORD *)sub_1C07ACF80(&qword_1ED75E630);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Pipeline.StatusStore();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED761458 != -1)
    goto LABEL_36;
  while (1)
  {
    v12 = sub_1C106F544();
    v41 = sub_1C079E000(v12, (uint64_t)qword_1ED78D818);
    v13 = sub_1C106F538();
    v14 = sub_1C10703A8();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_1C0771000, v13, v14, "ConstructionSystemTasks: FullPipeline: checking in.", v15, 2u);
      MEMORY[0x1C3BA8270](v15, -1, -1);
    }

    if (qword_1ED75E638 != -1)
      swift_once();
    v16 = sub_1C079E000((uint64_t)v6, (uint64_t)qword_1ED78D780);
    swift_beginAccess();
    sub_1C078A8F8(v16, (uint64_t)v8, &qword_1ED75E630);
    v17 = type metadata accessor for Configuration();
    if (sub_1C07B2D80((uint64_t)v8, 1, v17) == 1)
      break;
    v38 = a1;
    v39 = a2;
    v40 = a3;
    sub_1C07E05F4((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    v11[*(int *)(v9 + 20)] = 1;
    v18 = sub_1C0CD2D2C();
    v8 = (char *)v18;
    a2 = *(_QWORD *)(v18 + 16);
    if (!a2)
    {
      v9 = MEMORY[0x1E0DEE9D8];
LABEL_27:
      swift_bridgeObjectRelease();
      v33 = *(_QWORD *)(sub_1C0D99F50(v9) + 16);
      swift_bridgeObjectRelease();
      if (!v33)
      {
        v34 = sub_1C106F538();
        v35 = sub_1C10703A8();
        if (os_log_type_enabled(v34, v35))
        {
          v36 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v36 = 0;
          _os_log_impl(&dword_1C0771000, v34, v35, "ConstructionSystemTasks: FullPipeline: Pipeline status is empty, attempting to expedite next full run.", v36, 2u);
          MEMORY[0x1C3BA8270](v36, -1, -1);
        }

        sub_1C0CF7984((uint64_t)v38);
      }
      sub_1C07B1F90((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Pipeline.StatusStore);
      return;
    }
    v6 = (_QWORD *)(v18 + 32);
    v9 = MEMORY[0x1E0DEE9D8];
    a1 = &qword_1ED760070;
    while (1)
    {
      v19 = v6[3];
      v20 = v6[4];
      v21 = sub_1C07A9480(v6, v19);
      v22 = sub_1C0CBCAE4((uint64_t)v21, 1, 0, v19, v20);
      v23 = *(_QWORD *)(v22 + 16);
      v24 = *(_QWORD *)(v9 + 16);
      a3 = v24 + v23;
      if (__OFADD__(v24, v23))
        break;
      v25 = v22;
      if (!swift_isUniquelyReferenced_nonNull_native() || a3 > *(_QWORD *)(v9 + 24) >> 1)
      {
        sub_1C07ED374();
        v9 = v26;
      }
      if (*(_QWORD *)(v25 + 16))
      {
        v27 = *(_QWORD *)(v9 + 16);
        if ((*(_QWORD *)(v9 + 24) >> 1) - v27 < v23)
          goto LABEL_34;
        v28 = v9 + 32 * v27 + 32;
        a3 = v25 + 32;
        if (v25 + 32 < v28 + 32 * v23 && v28 < v25 + 32 + 32 * v23)
          goto LABEL_38;
        sub_1C07ACF80(&qword_1ED760070);
        swift_arrayInitWithCopy();
        if (v23)
        {
          v30 = *(_QWORD *)(v9 + 16);
          v31 = __OFADD__(v30, v23);
          v32 = v30 + v23;
          if (v31)
            goto LABEL_35;
          *(_QWORD *)(v9 + 16) = v32;
        }
      }
      else if (v23)
      {
        goto LABEL_33;
      }
      swift_bridgeObjectRelease();
      v6 += 5;
      if (!--a2)
        goto LABEL_27;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    swift_once();
  }
  __break(1u);
LABEL_38:
  sub_1C10709F0();
  __break(1u);
}

void sub_1C0CF7984(uint64_t a1)
{
  _xpc_activity_s *v1;
  _xpc_activity_s *v2;
  xpc_object_t v3;
  void *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  NSObject *oslog;

  v1 = *(_xpc_activity_s **)(a1 + 24);
  if (v1)
  {
    v2 = (_xpc_activity_s *)swift_unknownObjectRetain();
    v3 = xpc_activity_copy_criteria(v2);
    if (v3)
    {
      v4 = v3;
      xpc_dictionary_set_int64(v3, (const char *)*MEMORY[0x1E0C80790], 0);
      xpc_dictionary_set_int64(v4, (const char *)*MEMORY[0x1E0C80760], 0);
      xpc_activity_set_criteria(v1, v4);
      if (qword_1ED761458 != -1)
        swift_once();
      v5 = sub_1C106F544();
      sub_1C079E000(v5, (uint64_t)qword_1ED78D818);
      v6 = sub_1C106F538();
      v7 = sub_1C10703A8();
      if (os_log_type_enabled(v6, v7))
      {
        v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v8 = 0;
        _os_log_impl(&dword_1C0771000, v6, v7, "ConstructionSystemTasks: FullPipeline: expedite successful.", v8, 2u);
        MEMORY[0x1C3BA8270](v8, -1, -1);
      }

      swift_unknownObjectRelease();
    }
    else
    {
      if (qword_1ED761458 != -1)
        swift_once();
      v12 = sub_1C106F544();
      sub_1C079E000(v12, (uint64_t)qword_1ED78D818);
      v13 = sub_1C106F538();
      v14 = sub_1C1070390();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v15 = 0;
        _os_log_impl(&dword_1C0771000, v13, v14, "ConstructionSystemTasks: FullPipeline: expedite failed: failed to copy criteria.", v15, 2u);
        MEMORY[0x1C3BA8270](v15, -1, -1);
      }

    }
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_1ED761458 != -1)
      swift_once();
    v9 = sub_1C106F544();
    sub_1C079E000(v9, (uint64_t)qword_1ED78D818);
    oslog = sub_1C106F538();
    v10 = sub_1C1070390();
    if (os_log_type_enabled(oslog, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_1C0771000, oslog, v10, "ConstructionSystemTasks: FullPipeline: expedite failed: no activity is set.", v11, 2u);
      MEMORY[0x1C3BA8270](v11, -1, -1);
    }

  }
}

void sub_1C0CF7C38(int a1, xpc_activity_t activity)
{
  xpc_object_t v3;
  void *v4;
  int64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  os_log_type_t v11;
  uint8_t *v12;
  NSObject *oslog;

  v3 = xpc_activity_copy_criteria(activity);
  if (v3)
  {
    v4 = v3;
    v5 = xpc_dictionary_get_int64(v3, (const char *)*MEMORY[0x1E0C807A8]) / 2;
    xpc_dictionary_set_int64(v4, (const char *)*MEMORY[0x1E0C80790], v5);
    xpc_dictionary_set_int64(v4, (const char *)*MEMORY[0x1E0C80760], v5);
    xpc_activity_set_criteria(activity, v4);
    if (qword_1ED761458 != -1)
      swift_once();
    v6 = sub_1C106F544();
    sub_1C079E000(v6, (uint64_t)qword_1ED78D818);
    v7 = sub_1C106F538();
    v8 = sub_1C10703A8();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_1C0771000, v7, v8, "ConstructionSystemTasks: FullPipeline: handlePostRun successful.", v9, 2u);
      MEMORY[0x1C3BA8270](v9, -1, -1);
    }

    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_1ED761458 != -1)
      swift_once();
    v10 = sub_1C106F544();
    sub_1C079E000(v10, (uint64_t)qword_1ED78D818);
    oslog = sub_1C106F538();
    v11 = sub_1C1070390();
    if (os_log_type_enabled(oslog, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_1C0771000, oslog, v11, "ConstructionSystemTasks: FullPipeline: handlePostRun failed: failed to copy criteria.", v12, 2u);
      MEMORY[0x1C3BA8270](v12, -1, -1);
    }

  }
}

uint64_t sub_1C0CF7E38()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *v0;
  v3 = v0[1];
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1C0804B88;
  return sub_1C0CF6F30(v2, v3);
}

void sub_1C0CF7E88()
{
  uint64_t *v0;

  sub_1C0CF814C(*v0, v0[1], "ConstructionSystemTasks: FullPipeline: asked to defer.");
}

void sub_1C0CF7EA8(uint64_t *a1)
{
  uint64_t *v1;

  sub_1C0CF753C(a1, *v1, v1[1]);
}

void sub_1C0CF7EB0(int a1, xpc_activity_t activity)
{
  sub_1C0CF7C38(a1, activity);
}

uint64_t sub_1C0CF7EB8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 40) = sub_1C07ACF80(&qword_1ED75E630);
  *(_QWORD *)(v0 + 48) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C0CF7F14()
{
  NSObject *v0;
  os_log_type_t v1;
  uint64_t *v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  char v11;
  uint64_t (*v12)(void);
  _QWORD *v13;

  if (qword_1ED761458 != -1)
    swift_once();
  v3 = sub_1C077585C();
  sub_1C077965C(v3, (uint64_t)qword_1ED78D818);
  v4 = sub_1C0784E0C();
  if (sub_1C07758D8(v4))
  {
    v5 = (uint8_t *)sub_1C0775854();
    *(_WORD *)v5 = 0;
    sub_1C077F048(&dword_1C0771000, v0, v1, "ConstructionSystemTasks: FastpassPipeline: starting pipeline run.", v5);
    sub_1C0776778();
  }

  if (qword_1ED75E638 != -1)
    swift_once();
  v6 = v2[6];
  v7 = sub_1C079E000(v2[5], (uint64_t)qword_1ED78D780);
  sub_1C0775864();
  sub_1C077B888(v7, v8, &qword_1ED75E630);
  v9 = sub_1C0779D10();
  result = sub_1C077AEEC(v6, 1, v9);
  if (v11)
  {
    __break(1u);
  }
  else
  {
    if (qword_1ED755EC8 != -1)
      swift_once();
    v2[7] = sub_1C07A5ED0();
    sub_1C07B1F90(v2[6], (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    if (v7)
    {
      swift_task_dealloc();
      v12 = (uint64_t (*)(void))sub_1C07759D4();
      return sub_1C07A026C(v12);
    }
    else
    {
      v13 = (_QWORD *)swift_task_alloc();
      v2[8] = (uint64_t)v13;
      *v13 = v2;
      v13[1] = sub_1C0CF80D0;
      return sub_1C0CBDA30(2);
    }
  }
  return result;
}

uint64_t sub_1C0CF80D0()
{
  uint64_t v0;
  uint64_t (*v2)(void);

  sub_1C0797238();
  if (v0)
  {
    sub_1C077862C();
    return sub_1C0789D28();
  }
  else
  {
    swift_release();
    sub_1C07767BC();
    v2 = (uint64_t (*)(void))sub_1C0779830();
    return sub_1C0795770(v2);
  }
}

uint64_t sub_1C0CF8118()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return sub_1C077CF28(*(uint64_t (**)(void))(v0 + 8));
}

void sub_1C0CF814C(uint64_t a1, uint64_t a2, const char *a3)
{
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_log_type_t v10;
  _WORD *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;

  v7 = sub_1C07ACF80(&qword_1ED75E630);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v8);
  sub_1C077B6C0();
  if (qword_1ED761458 != -1)
    swift_once();
  v9 = sub_1C077585C();
  sub_1C077965C(v9, (uint64_t)qword_1ED78D818);
  v10 = sub_1C0784E0C();
  if (sub_1C077AF00(v10))
  {
    v11 = (_WORD *)sub_1C0775854();
    sub_1C07A7CA0(v11);
    sub_1C077F048(&dword_1C0771000, v3, v4, a3, v5);
    sub_1C0776778();
  }

  if (qword_1ED75E638 != -1)
    swift_once();
  sub_1C0781988(v7, (uint64_t)qword_1ED78D780);
  sub_1C0775864();
  sub_1C079BF4C((uint64_t)v3, v12, &qword_1ED75E630);
  v13 = sub_1C0779D10();
  sub_1C078FABC(v13);
  if (v14)
  {
    __break(1u);
  }
  else
  {
    if (qword_1ED755EC8 != -1)
      swift_once();
    v15 = sub_1C07A5ED0();
    if (v7)
    {
      sub_1C077E6C8();
      sub_1C0791DDC(v16, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    }
    else
    {
      sub_1C0791DDC(v15, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
      sub_1C0CBD7A0();
      sub_1C07785A8();
    }
    sub_1C07785E4();
  }
}

void sub_1C0CF82E0()
{
  uint64_t *v0;

  sub_1C0CF814C(*v0, v0[1], "ConstructionSystemTasks: FastpassPipeline: asked to defer.");
}

uint64_t sub_1C0CF8300()
{
  _QWORD *v0;

  v0[40] = sub_1C07ACF80(&qword_1ED75E630);
  v0[41] = swift_task_alloc();
  v0[42] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C0CF836C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  int v10;
  char v11;
  NSObject *v12;
  void *v13;
  uint64_t v14;
  os_log_type_t v15;
  _WORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  void *v24;
  uint64_t v25;
  os_log_type_t v26;
  uint8_t *v27;
  const char *v28;
  uint64_t (*v29)(void);
  void *v30;
  uint64_t v31;
  os_log_type_t v32;

  if (qword_1ED75E638 != -1)
    swift_once();
  v1 = v0[42];
  v2 = sub_1C079E000(v0[40], (uint64_t)qword_1ED78D780);
  sub_1C0796A84();
  sub_1C077E480(v2, v3, &qword_1ED75E630);
  v4 = sub_1C0779D10();
  result = sub_1C077AEEC(v1, 1, v4);
  if (!v6)
  {
    v7 = v0[42];
    v8 = *(_QWORD *)(v7 + *(int *)(v4 + 20) + 8);
    sub_1C07B1F90(v7, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    if ((v8 & 0x200000) != 0 && (v9 = (void *)sub_1C106FAF0(), v10 = sub_1C08C14FC(v9), v9, v10))
    {
      type metadata accessor for AutonamingMessagesModelHandler();
      v11 = sub_1C0816260();
      v12 = sub_1C0798534();
      if ((v11 & 1) != 0)
      {
        v0[35] = sub_1C0CF881C;
        v0[36] = 0;
        v0[31] = MEMORY[0x1E0C809B0];
        v0[32] = 1107296256;
        v0[33] = sub_1C0CF1604;
        v0[34] = &unk_1E7A2C0F8;
        v13 = _Block_copy(v0 + 31);
        AnalyticsSendEventLazy();
        _Block_release(v13);

        if (qword_1ED762B18 != -1)
          swift_once();
        v14 = sub_1C077585C();
        sub_1C077965C(v14, (uint64_t)qword_1ED762AF8);
        v15 = sub_1C0784E0C();
        if (sub_1C077AF00(v15))
        {
          v16 = (_WORD *)sub_1C0775854();
          sub_1C07A7CA0(v16);
          sub_1C0798520(&dword_1C0771000, v17, v18, "ConstructionSystemTasks: AutonamingMessagesInferenceTask: starting pipeline run.");
          sub_1C0776778();
        }
        v19 = v0[41];

        sub_1C077E480(v2, v20, &qword_1ED75E630);
        result = sub_1C077AEEC(v19, 1, v4);
        if (!v6)
        {
          v21 = v0[41];
          type metadata accessor for AutonamingMessagesUpdateHandler();
          v0[43] = swift_initStackObject();
          AutonamingMessagesUpdateHandler.init(config:)(v21);
          v0[44] = v22;
          v23 = (_QWORD *)swift_task_alloc();
          v0[45] = v23;
          sub_1C0779870(v23, (uint64_t)sub_1C0CF87A8);
          return sub_1C081E15C();
        }
        goto LABEL_24;
      }
      v0[29] = sub_1C0CF8840;
      v0[30] = 0;
      v0[25] = MEMORY[0x1E0C809B0];
      v0[26] = 1107296256;
      v0[27] = sub_1C0CF1604;
      v0[28] = &unk_1E7A2C0D0;
      v30 = _Block_copy(v0 + 25);
      AnalyticsSendEventLazy();
      _Block_release(v30);

      if (qword_1ED762B18 != -1)
        swift_once();
      v31 = sub_1C077585C();
      sub_1C077965C(v31, (uint64_t)qword_1ED762AF8);
      v32 = sub_1C077C13C();
      if (sub_1C07758D8(v32))
      {
        v27 = (uint8_t *)sub_1C0775854();
        *(_WORD *)v27 = 0;
        v28 = "ConstructionSystemTasks: AutonamingMessagesInferenceTask: unavailable - GenerativeModels unavailable on current system.";
LABEL_17:
        sub_1C077F048(&dword_1C0771000, v12, (os_log_type_t)v4, v28, v27);
        sub_1C0776778();
      }
    }
    else
    {
      v24 = (void *)sub_1C0798534();
      v0[23] = sub_1C0CF8920;
      v0[24] = 0;
      v0[19] = MEMORY[0x1E0C809B0];
      v0[20] = 1107296256;
      v0[21] = sub_1C0CF1604;
      v0[22] = &unk_1E7A2C0A8;
      v12 = _Block_copy(v0 + 19);
      sub_1C077CEF4();
      AnalyticsSendEventLazy();
      _Block_release(v12);

      if (qword_1ED762B18 != -1)
        swift_once();
      v25 = sub_1C077585C();
      sub_1C077965C(v25, (uint64_t)qword_1ED762AF8);
      v26 = sub_1C0784E0C();
      if (sub_1C07758D8(v26))
      {
        v27 = (uint8_t *)sub_1C0775854();
        *(_WORD *)v27 = 0;
        v28 = "ConstructionSystemTasks: AutonamingMessagesInferenceTask: feature flag is not enabled.";
        goto LABEL_17;
      }
    }

    swift_task_dealloc();
    sub_1C07767BC();
    v29 = (uint64_t (*)(void))sub_1C0779830();
    return sub_1C07A026C(v29);
  }
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_1C0CF87A8()
{
  sub_1C077B0C8();
  swift_task_dealloc();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0CF87E8()
{
  uint64_t (*v0)(void);

  swift_release();
  swift_task_dealloc();
  sub_1C07767BC();
  v0 = (uint64_t (*)(void))sub_1C0779830();
  return sub_1C077CF28(v0);
}

uint64_t sub_1C0CF881C()
{
  return sub_1C0CF885C(0x696176416B736174, 0xED0000656C62616CLL);
}

uint64_t sub_1C0CF8840()
{
  return sub_1C0CF885C(0xD000000000000013, 0x80000001C1109370);
}

uint64_t sub_1C0CF885C(uint64_t a1, uint64_t a2)
{
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1C07ACF80((uint64_t *)&unk_1ED7614C0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1078FC0;
  sub_1C078A340();
  *(_QWORD *)(v5 + 32) = v6;
  *(_QWORD *)(v5 + 40) = v7;
  *(_QWORD *)(inited + 48) = sub_1C0CFC57C(objc_allocWithZone(MEMORY[0x1E0CB37E8]));
  *(_QWORD *)(inited + 56) = a1;
  *(_QWORD *)(inited + 64) = a2;
  *(_QWORD *)(inited + 72) = sub_1C0CFC57C(objc_allocWithZone(MEMORY[0x1E0CB37E8]));
  sub_1C077CA90();
  return sub_1C106F97C();
}

uint64_t sub_1C0CF8920()
{
  uint64_t inited;

  sub_1C07ACF80((uint64_t *)&unk_1ED7614C0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1079220;
  *(_QWORD *)(inited + 32) = 0xD000000000000015;
  *(_QWORD *)(inited + 40) = 0x80000001C1109350;
  *(_QWORD *)(inited + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, 1);
  sub_1C077CA90();
  return sub_1C106F97C();
}

void sub_1C0CF89C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  v1 = v0;
  if (qword_1ED762B18 != -1)
    swift_once();
  v2 = sub_1C106F544();
  sub_1C079E000(v2, (uint64_t)qword_1ED762AF8);
  v3 = sub_1C106F538();
  v4 = sub_1C10703A8();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1C0771000, v3, v4, "ConstructionSystemTasks: AutonamingMessagessInferenceTask: asked to defer.", v5, 2u);
    MEMORY[0x1C3BA8270](v5, -1, -1);
  }

  *(_BYTE *)(*(_QWORD *)(v1 + 32) + 120) = 0;
}

uint64_t sub_1C0CF8A9C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_1C0CF8AC0()
{
  sub_1C0CF8A9C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ScheduledTasks.AutonamingMessagesPipelineRunner()
{
  return objc_opt_self();
}

uint64_t sub_1C0CF8AFC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  v1 = v0;
  v2 = sub_1C07ACF80(&qword_1ED75E630);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[2] = 0xD00000000000001ALL;
  v1[3] = 0x80000001C11093F0;
  if (qword_1ED75E638 != -1)
    swift_once();
  v5 = sub_1C079E000(v2, (uint64_t)qword_1ED78D780);
  swift_beginAccess();
  sub_1C078A8F8(v5, (uint64_t)v4, &qword_1ED75E630);
  v6 = type metadata accessor for Configuration();
  result = sub_1C07B2D80((uint64_t)v4, 1, v6);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    type metadata accessor for AutonamingMessagesUpdateHandler();
    swift_allocObject();
    AutonamingMessagesUpdateHandler.init(config:)((uint64_t)v4);
    v1[4] = v8;
    return (uint64_t)v1;
  }
  return result;
}

uint64_t sub_1C0CF8C30()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C0804B88;
  return sub_1C0CF8300();
}

void sub_1C0CF8C78()
{
  sub_1C0CF89C4();
}

uint64_t sub_1C0CF8C98()
{
  _QWORD *v0;

  v0[6] = sub_1C07ACF80(&qword_1ED75E630);
  v0[7] = swift_task_alloc();
  v0[8] = swift_task_alloc();
  v0[9] = swift_task_alloc();
  v0[10] = swift_task_alloc();
  return swift_task_switch();
}

#error "1C0CF8F84: call analysis failed (funcsize=241)"

uint64_t sub_1C0CF9158()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C0804B88;
  return sub_1C0CF8C98();
}

uint64_t sub_1C0CF91A8()
{
  _QWORD *v0;

  v0[9] = type metadata accessor for Configuration();
  v0[10] = swift_task_alloc();
  v0[11] = sub_1C07ACF80(&qword_1ED75E630);
  v0[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C0CF9228()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);

  if (qword_1ED75E638 != -1)
    swift_once();
  v1 = v0[9];
  v2 = v0[12];
  v3 = sub_1C079E000(v0[11], (uint64_t)qword_1ED78D780);
  sub_1C0796A84();
  sub_1C077E480(v3, v4, &qword_1ED75E630);
  result = sub_1C077AEEC(v2, 1, v1);
  if (v6)
  {
    __break(1u);
  }
  else
  {
    v7 = v0[12];
    v8 = v0[10];
    type metadata accessor for AssetRegistryFullServer();
    sub_1C0789B14(v7, v8);
    sub_1C106A708();
    sub_1C077B5BC();
    sub_1C106A6FC();
    v9 = sub_1C07F7040(v8);
    sub_1C07B1F90(v0[12], (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    type metadata accessor for AssetRegistryOverrideStoreCleanupTask();
    *(_QWORD *)(swift_initStackObject() + 16) = v9;
    sub_1C07FD7C8();
    swift_release();
    swift_task_dealloc();
    sub_1C07767BC();
    v10 = (uint64_t (*)(void))sub_1C0779830();
    return v10();
  }
  return result;
}

uint64_t sub_1C0CF94A0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C0804B88;
  return sub_1C0CF91A8();
}

uint64_t sub_1C0CF94F0()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = sub_1C106ADE0();
  v0[5] = v1;
  v0[6] = *(_QWORD *)(v1 - 8);
  v0[7] = swift_task_alloc();
  v0[8] = sub_1C07ACF80(&qword_1ED75E630);
  v0[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C0CF9574()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  os_log_type_t v3;
  _WORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  char v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  os_log_type_t v20;
  _WORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(void);

  if (qword_1ED762B18 != -1)
    swift_once();
  v1 = sub_1C077585C();
  v2 = (void *)sub_1C079E000(v1, (uint64_t)qword_1ED762AF8);
  sub_1C106F538();
  v3 = sub_1C0784E0C();
  if (sub_1C077AF00(v3))
  {
    v4 = (_WORD *)sub_1C0775854();
    sub_1C07A7CA0(v4);
    sub_1C0798520(&dword_1C0771000, v5, v6, "Pruning global knowledge store");
    sub_1C0776778();
  }

  if (qword_1ED75E638 != -1)
    swift_once();
  v7 = v0[9];
  v8 = sub_1C079E000(v0[8], (uint64_t)qword_1ED78D780);
  sub_1C0775864();
  sub_1C077B888(v8, v9, &qword_1ED75E630);
  v10 = sub_1C0779D10();
  result = sub_1C077AEEC(v7, 1, v10);
  if (v12)
  {
    __break(1u);
  }
  else
  {
    v13 = v0[9];
    type metadata accessor for GlobalKnowledgeStore(0);
    v14 = (void *)sub_1C0A736B0(v13);
    v16 = v0[6];
    v15 = v0[7];
    v17 = v0[5];
    sub_1C106ADD4();
    sub_1C106AD80();
    v19 = v18;
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    sub_1C0BF6A3C(v19);
    swift_release();
    sub_1C077B740();
    v20 = sub_1C0784E0C();
    if (sub_1C077C10C(v20))
    {
      v21 = (_WORD *)sub_1C0775854();
      sub_1C078C17C(v21);
      sub_1C077874C(&dword_1C0771000, v22, v23, "Pruning global knowledge store completed");
      sub_1C0776778();
    }

    sub_1C07796F8();
    sub_1C07758BC();
    v24 = (uint64_t (*)(void))sub_1C0779830();
    return v24();
  }
  return result;
}

uint64_t sub_1C0CF976C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C0804B88;
  return sub_1C0CF94F0();
}

uint64_t sub_1C0CF97BC()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_BYTE *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  *(_QWORD *)(v0 + 32) = 0;
  *(_BYTE *)(v0 + 40) = 0;
  return result;
}

uint64_t sub_1C0CF97D0()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ScheduledRunnerState()
{
  return objc_opt_self();
}

uint64_t sub_1C0CF9814()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  swift_release();
  *(_BYTE *)(v0 + 32) = 0;
  return v0;
}

uint64_t sub_1C0CF9838()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t sub_1C0CF985C()
{
  sub_1C0CF9838();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BackgroundTaskScheduledRunnerState()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for SimpleScheduledBackgroundTask()
{
  return objc_opt_self();
}

void sub_1C0CF98C0(void *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[5];
  __int128 v35[3];
  uint64_t aBlock[6];

  v8 = sub_1C07ACF80(&qword_1ED75E630);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED75E638 != -1)
    swift_once();
  v11 = sub_1C079E000(v8, (uint64_t)qword_1ED78D780);
  swift_beginAccess();
  sub_1C078A8F8(v11, (uint64_t)v10, &qword_1ED75E630);
  v12 = type metadata accessor for Configuration();
  if (sub_1C07B2D80((uint64_t)v10, 1, v12) == 1)
  {
    __break(1u);
  }
  else
  {
    v13 = *(_QWORD *)&v10[*(int *)(v12 + 20)];
    sub_1C07B1F90((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    if ((v13 & 1) != 0)
    {
      if (qword_1ED761458 != -1)
        swift_once();
      v21 = sub_1C106F544();
      sub_1C079E000(v21, (uint64_t)qword_1ED78D818);
      swift_bridgeObjectRetain_n();
      v22 = sub_1C106F538();
      v23 = sub_1C10703A8();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = (uint8_t *)swift_slowAlloc();
        v25 = swift_slowAlloc();
        aBlock[0] = v25;
        *(_DWORD *)v24 = 136315138;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        *(_QWORD *)&v35[0] = sub_1C0788DAC(a2, a3, aBlock);
        sub_1C10705AC();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1C0771000, v22, v23, "ScheduledTask: %s: registered as a no-op.", v24, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BA8270](v25, -1, -1);
        MEMORY[0x1C3BA8270](v24, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
    else
    {
      aBlock[4] = (uint64_t)sub_1C0CFBBC0;
      aBlock[5] = a4;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1C0F09A20;
      aBlock[3] = (uint64_t)&unk_1E7A2C170;
      v14 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(a1, sel_setExpirationHandler_, v14);
      _Block_release(v14);
      MEMORY[0x1E0C80A78](v15);
      *(&v32 - 2) = (uint64_t)a1;
      sub_1C106E4B8();
      sub_1C0784AC0(a4 + 16, (uint64_t)aBlock);
      sub_1C07ACF80(&qword_1EF6478D8);
      sub_1C07ACF80((uint64_t *)&unk_1EF6478E0);
      if (swift_dynamicCast())
      {
        sub_1C077DD60(v35, (uint64_t)v34);
        if (qword_1ED761458 != -1)
          swift_once();
        v16 = sub_1C106F544();
        sub_1C079E000(v16, (uint64_t)qword_1ED78D818);
        swift_bridgeObjectRetain_n();
        v17 = sub_1C106F538();
        v18 = sub_1C10703A8();
        if (os_log_type_enabled(v17, v18))
        {
          v19 = (uint8_t *)swift_slowAlloc();
          v20 = swift_slowAlloc();
          v33 = v20;
          *(_DWORD *)v19 = 136315138;
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          v32 = sub_1C0788DAC(a2, a3, &v33);
          sub_1C10705AC();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1C0771000, v17, v18, "SimpleScheduledBackgroundTask: %s: task state set, calling async runner", v19, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C3BA8270](v20, -1, -1);
          MEMORY[0x1C3BA8270](v19, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        v31 = sub_1C07A9480(v34, v34[3]);
        sub_1C0CFBC74(*v31, v31[1]);
        _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v34);
      }
      else
      {
        if (qword_1ED761458 != -1)
          swift_once();
        v26 = sub_1C106F544();
        sub_1C079E000(v26, (uint64_t)qword_1ED78D818);
        swift_bridgeObjectRetain_n();
        v27 = sub_1C106F538();
        v28 = sub_1C1070378();
        if (os_log_type_enabled(v27, v28))
        {
          v29 = (uint8_t *)swift_slowAlloc();
          v30 = swift_slowAlloc();
          *(_QWORD *)&v35[0] = v30;
          *(_DWORD *)v29 = 136315138;
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          v34[0] = sub_1C0788DAC(a2, a3, (uint64_t *)v35);
          sub_1C10705AC();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1C0771000, v27, v28, "SimpleScheduledBackgroundTask: %s: has no runner", v29, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C3BA8270](v30, -1, -1);
          MEMORY[0x1C3BA8270](v29, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
      }
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)aBlock);
    }
  }
}

uint64_t sub_1C0CF9F44()
{
  return sub_1C106E4B8();
}

void sub_1C0CF9F90(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6[2];
  uint64_t v7;
  _BYTE v8[40];
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;

  v3 = *a1;
  *(_BYTE *)(v3 + 32) = 1;
  if (*(_QWORD *)(v3 + 24))
  {
    swift_retain();
    sub_1C10700FC();
    swift_release();
  }
  sub_1C0784AC0(a2 + 16, (uint64_t)v8);
  sub_1C07ACF80(&qword_1EF6478D8);
  sub_1C07ACF80(&qword_1ED75E790);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1C077DD60(v6, (uint64_t)v9);
    v4 = v10;
    v5 = v11;
    sub_1C07A9480(v9, v10);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v9);
  }
  else
  {
    v7 = 0;
    memset(v6, 0, sizeof(v6));
    sub_1C0784B6C((uint64_t)v6, &qword_1ED747EA8);
  }
}

id sub_1C0CFA0A4(uint64_t a1, void *a2)
{
  void *v3;

  v3 = *(void **)(*(_QWORD *)a1 + 16);
  *(_QWORD *)(*(_QWORD *)a1 + 16) = a2;

  return a2;
}

void sub_1C0CFA0DC(uint64_t *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26[2];
  uint64_t v27;

  v13 = sub_1C07ACF80((uint64_t *)&unk_1ED761470);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a1;
  if (*(_BYTE *)(*a1 + 32) == 1)
  {
    if (qword_1ED761458 != -1)
      swift_once();
    v17 = sub_1C106F544();
    sub_1C079E000(v17, (uint64_t)qword_1ED78D818);
    swift_bridgeObjectRetain_n();
    v18 = sub_1C106F538();
    v19 = sub_1C10703A8();
    if (os_log_type_enabled(v18, v19))
    {
      v25 = v6;
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      *(_QWORD *)&v26[0] = v21;
      *(_DWORD *)v20 = 136315138;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v27 = sub_1C0788DAC(a2, a3, (uint64_t *)v26);
      sub_1C10705AC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C0771000, v18, v19, "SimpleScheduledBackgroundTask: %s: state was set to be expired before the task was launched.", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v21, -1, -1);
      MEMORY[0x1C3BA8270](v20, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    *(_BYTE *)(v16 + 32) = 0;
  }
  else
  {
    *(_BYTE *)(v16 + 32) = 0;
    sub_1C107009C();
    v22 = sub_1C10700C0();
    sub_1C07B2D8C((uint64_t)v15, 0, 1, v22);
    sub_1C0784AC0(a4, (uint64_t)v26);
    v23 = (_QWORD *)swift_allocObject();
    v23[2] = 0;
    v23[3] = 0;
    sub_1C077DD60(v26, (uint64_t)(v23 + 4));
    v23[9] = a2;
    v23[10] = a3;
    v23[11] = a5;
    v23[12] = a6;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_retain();
    v24 = sub_1C0EBAE60((uint64_t)v15, (uint64_t)&unk_1EF6478F8, (uint64_t)v23);
    sub_1C0784B6C((uint64_t)v15, (uint64_t *)&unk_1ED761470);
    *(_QWORD *)(v16 + 24) = v24;
    swift_release();
  }
}

uint64_t sub_1C0CFA398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[11] = a7;
  v8[12] = a8;
  v8[9] = a5;
  v8[10] = a6;
  v8[8] = a4;
  return swift_task_switch();
}

uint64_t sub_1C0CFA3B8()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = *(_QWORD **)(v0 + 64);
  *(_BYTE *)(v0 + 120) = 0;
  sub_1C07A9480(v1, v1[3]);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v2;
  sub_1C0779870(v2, (uint64_t)sub_1C0CFA414);
  return sub_1C0CF7EB8();
}

uint64_t sub_1C0CFA414()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_1C077B0C8();
  *v2 = *v1;
  *(_QWORD *)(v3 + 112) = v0;
  swift_task_dealloc();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0CFA464()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 88);
  *(_BYTE *)(v0 + 120) = 1;
  v2 = swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v0 + 120;
  *(_QWORD *)(v2 + 24) = v1;
  sub_1C106E4B8();
  sub_1C07796F8();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C0CFA4E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  void *v28;
  uint64_t v29;
  os_log_type_t v30;
  NSObject *v31;
  NSObject *v32;
  os_log_type_t v33;
  BOOL v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v67;

  sub_1C07796A0();
  a23 = v25;
  a24 = v26;
  a22 = v24;
  if (qword_1ED761458 != -1)
    swift_once();
  v27 = *(NSObject **)(v24 + 112);
  v28 = *(void **)(v24 + 80);
  v29 = sub_1C077585C();
  v30 = sub_1C079E000(v29, (uint64_t)qword_1ED78D818);
  sub_1C07796D8();
  v31 = v27;
  sub_1C07796D8();
  v32 = v27;
  sub_1C077B740();
  v33 = sub_1C077C13C();
  v34 = sub_1C07758D8(v33);
  v35 = *(void **)(v24 + 112);
  if (v34)
  {
    v36 = *(_QWORD *)(v24 + 72);
    v37 = sub_1C0775854();
    a12 = sub_1C0775854();
    *(_DWORD *)v37 = 136315394;
    sub_1C07767C4();
    *(_QWORD *)(v24 + 48) = sub_1C0782968(v36, v38, &a12);
    sub_1C10705AC();
    sub_1C077CF6C();
    *(_WORD *)(v37 + 12) = 2080;
    *(_QWORD *)(v24 + 56) = v35;
    v39 = v35;
    sub_1C07ACF80(&qword_1ED7614F0);
    v40 = sub_1C106FB5C();
    *(_QWORD *)(v24 + 40) = sub_1C07AA444(v40, v41, v42, v43, v44);
    sub_1C10705AC();
    sub_1C0775894();
    sub_1C0780A2C();
    sub_1C0780A2C();
    sub_1C077E89C(&dword_1C0771000, v27, (os_log_type_t)v28, "SimpleScheduledBackgroundTask: %s: error: %s", (uint8_t *)v37);
    sub_1C0778664();
    sub_1C0776778();
  }
  sub_1C07758A4();
  sub_1C0780A2C();
  sub_1C0780A2C();

  v45 = *(_QWORD *)(v24 + 96);
  *(_QWORD *)(swift_task_alloc() + 16) = v45;
  sub_1C07889F0();
  if (v28)
  {
    v46 = v28;
    v47 = *(NSObject **)(v24 + 80);
    sub_1C07767D4();
    sub_1C077AE90();
    sub_1C077CF64();
    sub_1C077AE90();
    sub_1C077CF64();
    sub_1C077B740();
    v48 = sub_1C077C13C();
    if (sub_1C077C10C(v48))
    {
      v49 = *(_QWORD *)(v24 + 72);
      v50 = sub_1C0775854();
      v67 = sub_1C0775854();
      *(_DWORD *)v50 = 136315394;
      a12 = v67;
      sub_1C07767C4();
      *(_QWORD *)(v24 + 24) = sub_1C0782968(v49, v51, &a12);
      sub_1C07B5C88();
      sub_1C077CF6C();
      *(_WORD *)(v50 + 12) = 2080;
      *(_QWORD *)(v24 + 32) = v46;
      v52 = v46;
      sub_1C07ACF80(&qword_1ED7614F0);
      v53 = sub_1C106FB5C();
      *(_QWORD *)(v24 + 16) = sub_1C07AA444(v53, v54, v55, v56, v57);
      sub_1C10705AC();
      sub_1C0775894();
      sub_1C0779654();
      sub_1C0779654();
      sub_1C077E89C(&dword_1C0771000, v47, v30, "SimpleScheduledBackgroundTask: %s: Setting task to completed with error: %s", (uint8_t *)v50);
      sub_1C0778664();
      sub_1C0776778();
    }
    sub_1C07758A4();
    sub_1C0779654();
    sub_1C0779654();

    sub_1C07889F0();
    sub_1C077C220();
    sub_1C0779654();
  }
  else
  {

    sub_1C07767D4();
  }
  sub_1C077C524();
  return v58(v58, v59, v60, v61, v62, v63, v64, v65, a9, a10, a11, a12, a13, a14, a15, a16);
}

id sub_1C0CFA880(uint64_t *a1)
{
  uint64_t v1;
  id result;
  id v3;
  id v4[2];

  v4[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = *a1;
  result = *(id *)(*a1 + 16);
  if (!result)
    goto LABEL_4;
  v4[0] = 0;
  if (objc_msgSend(result, sel_setTaskExpiredWithRetryAfter_error_, v4, 300.0))
  {
    result = v4[0];
LABEL_4:
    *(_BYTE *)(v1 + 32) = 0;
    return result;
  }
  v3 = v4[0];
  sub_1C106AA14();

  return (id)swift_willThrow();
}

id sub_1C0CFA938(uint64_t *a1)
{
  uint64_t v1;
  id result;

  v1 = *a1;
  result = *(id *)(*a1 + 16);
  if (result)
    result = objc_msgSend(result, sel_setTaskCompleted);
  *(_BYTE *)(v1 + 32) = 0;
  return result;
}

uint64_t *sub_1C0CFA974(uint64_t *result, _BYTE *a2)
{
  uint64_t v2;

  v2 = *result;
  if (*a2 == 1)
  {
    result = *(uint64_t **)(v2 + 16);
    if (result)
      return (uint64_t *)objc_msgSend(result, sel_setTaskCompleted);
  }
  else if (*(_BYTE *)(v2 + 32) == 1)
  {
    *(_BYTE *)(v2 + 32) = 0;
  }
  return result;
}

xpc_activity_state_t sub_1C0CFA9CC(uint64_t a1, uint64_t a2, xpc_activity_state_t *a3)
{
  _xpc_activity_s *v4;
  xpc_activity_state_t result;

  *(_QWORD *)(*(_QWORD *)a1 + 24) = a2;
  swift_unknownObjectRelease();
  v4 = (_xpc_activity_s *)swift_unknownObjectRetain();
  result = xpc_activity_get_state(v4);
  *a3 = result;
  return result;
}

uint64_t sub_1C0CFAA1C(uint64_t result, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  _xpc_activity_s *v4;
  int v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  const char *v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_xpc_activity_s **)(*(_QWORD *)result + 24);
  if (v4)
  {
    v7 = *a2;
    swift_unknownObjectRetain();
    if (v7 == 1)
    {
      v9 = MEMORY[0x1E0C85DA8];
      v10 = "ScheduledTask: %s: XPC Activity done.";
      v11 = "ScheduledTask: %s: Couldn't transition activity to DONE state.";
      v12 = a3;
      v13 = a4;
      v14 = 0;
    }
    else
    {
      if (!xpc_activity_should_defer(v4))
      {
        sub_1C0CFACFC();
        return swift_unknownObjectRelease();
      }
      v9 = (uint64_t (*)(void))MEMORY[0x1E0C85DB8];
      v10 = "ScheduledTask: %s: XPC Activity deferred.";
      v11 = "ScheduledTask: %s: Couldn't transition activity to DEFER state.";
      v12 = a3;
      v13 = a4;
      v14 = 3;
    }
    sub_1C0CFAB24(v12, v13, v8, v14, (uint64_t)v9, v10, v11);
    return swift_unknownObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_1C0CFAAE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C0CFAB24(a1, a2, a3, 0, (uint64_t)MEMORY[0x1E0C85DA8], "ScheduledTask: %s: XPC Activity done.", "ScheduledTask: %s: Couldn't transition activity to DONE state.");
}

void sub_1C0CFAB04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C0CFAB24(a1, a2, a3, 3, (uint64_t)MEMORY[0x1E0C85DB8], "ScheduledTask: %s: XPC Activity deferred.", "ScheduledTask: %s: Couldn't transition activity to DEFER state.");
}

void sub_1C0CFAB24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, const char *a6, const char *a7)
{
  void *v7;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  void *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  void *v24;
  NSObject *v25;
  os_log_type_t v26;

  v10 = sub_1C07BAE80();
  if (v12(v10, v11))
  {
    if (qword_1ED761458 != -1)
      swift_once();
    v13 = sub_1C077585C();
    sub_1C07B19B8(v13, (uint64_t)qword_1ED78D818);
    sub_1C106F538();
    v14 = sub_1C0784E0C();
    if (sub_1C07767E4(v14))
    {
      v15 = (uint8_t *)sub_1C0775854();
      sub_1C0775854();
      *(_DWORD *)v15 = 136315138;
      v16 = sub_1C07767B4();
      sub_1C07AA1CC(v16);
      sub_1C07B7D1C();
      sub_1C0799F00();
      sub_1C0781BBC();
      sub_1C07796F0(v17, v18, v19, a6, v15);
      sub_1C0778610();
      sub_1C0776778();
    }
  }
  else
  {
    if (qword_1ED761458 != -1)
      swift_once();
    v20 = sub_1C077585C();
    sub_1C07B19B8(v20, (uint64_t)qword_1ED78D818);
    sub_1C106F538();
    v21 = sub_1C077C13C();
    if (sub_1C07767E4(v21))
    {
      v22 = (uint8_t *)sub_1C0775854();
      sub_1C0775854();
      *(_DWORD *)v22 = 136315138;
      v23 = sub_1C07767B4();
      sub_1C07AA1CC(v23);
      sub_1C07B7D1C();
      sub_1C0799F00();
      sub_1C0781BBC();
      sub_1C07796F0(v24, v25, v26, a7, v22);
      sub_1C0778610();
      sub_1C0776778();
    }
  }

  sub_1C07758A4();
  sub_1C0776728();
}

void sub_1C0CFACFC()
{
  NSObject *v0;
  os_log_type_t v1;
  uint64_t v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint64_t v9;

  sub_1C07BAE80();
  if (xpc_activity_set_completion_status())
  {
    if (qword_1ED761458 != -1)
      swift_once();
    v2 = sub_1C077585C();
    sub_1C07B19B8(v2, (uint64_t)qword_1ED78D818);
    sub_1C106F538();
    v3 = sub_1C077C13C();
    if (sub_1C077AF00(v3))
    {
      v4 = (uint8_t *)sub_1C0775854();
      sub_1C0775854();
      sub_1C077FB6C();
      *(_DWORD *)v4 = 136315138;
      v5 = sub_1C07767B4();
      sub_1C07AA1CC(v5);
      sub_1C07B4398();
      sub_1C0799F00();
      v6 = "ScheduledTask: %s: XPC Activity done with error";
      goto LABEL_10;
    }
  }
  else
  {
    if (qword_1ED761458 != -1)
      swift_once();
    v7 = sub_1C077585C();
    sub_1C07B19B8(v7, (uint64_t)qword_1ED78D818);
    sub_1C106F538();
    v8 = sub_1C077C13C();
    if (sub_1C077AF00(v8))
    {
      v4 = (uint8_t *)sub_1C0775854();
      sub_1C0775854();
      sub_1C077FB6C();
      *(_DWORD *)v4 = 136315138;
      v9 = sub_1C07767B4();
      sub_1C07AA1CC(v9);
      sub_1C07B4398();
      sub_1C0799F00();
      v6 = "ScheduledTask: %s: Couldn't transition activity to DONE state.";
LABEL_10:
      sub_1C07796F0(&dword_1C0771000, v0, v1, v6, v4);
      sub_1C0778610();
      sub_1C0776778();
    }
  }

  sub_1C07758A4();
  sub_1C079199C();
}

uint64_t *sub_1C0CFAEA0(uint64_t *result)
{
  uint64_t v1;

  v1 = *result;
  *(_BYTE *)(v1 + 40) = 0;
  *(_QWORD *)(v1 + 32) = 0;
  return result;
}

uint64_t sub_1C0CFAEB0(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)result + 16) = 0;
  return result;
}

BOOL sub_1C0CFAEBC@<W0>(xpc_activity_t activity@<X1>, _BYTE *a2@<X8>)
{
  _BOOL8 result;

  result = xpc_activity_should_defer(activity);
  *a2 = result;
  return result;
}

void sub_1C0CFAEEC()
{
  NSObject *v0;
  os_log_type_t v1;
  _xpc_activity_s *v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  os_log_type_t v9;
  uint64_t v10;

  v2 = (_xpc_activity_s *)sub_1C07BAE80();
  if (xpc_activity_set_state(v2, 4))
  {
    if (qword_1ED761458 != -1)
      swift_once();
    v3 = sub_1C077585C();
    sub_1C07B19B8(v3, (uint64_t)qword_1ED78D818);
    sub_1C106F538();
    v4 = sub_1C0784E0C();
    if (sub_1C077AF00(v4))
    {
      v5 = (uint8_t *)sub_1C0775854();
      sub_1C0775854();
      sub_1C077FB6C();
      *(_DWORD *)v5 = 136315138;
      v6 = sub_1C07767B4();
      sub_1C07AA1CC(v6);
      sub_1C07B4398();
      sub_1C0799F00();
      v7 = "ScheduledTask: %s: XPC Activity continuing.";
      goto LABEL_10;
    }
  }
  else
  {
    if (qword_1ED761458 != -1)
      swift_once();
    v8 = sub_1C077585C();
    sub_1C07B19B8(v8, (uint64_t)qword_1ED78D818);
    sub_1C106F538();
    v9 = sub_1C077C13C();
    if (sub_1C077AF00(v9))
    {
      v5 = (uint8_t *)sub_1C0775854();
      sub_1C0775854();
      sub_1C077FB6C();
      *(_DWORD *)v5 = 136315138;
      v10 = sub_1C07767B4();
      sub_1C07AA1CC(v10);
      sub_1C07B4398();
      sub_1C0799F00();
      v7 = "ScheduledTask: %s: Couldn't transition activity to CONTINUE state.";
LABEL_10:
      sub_1C07796F0(&dword_1C0771000, v0, v1, v7, v5);
      sub_1C0778610();
      sub_1C0776778();
    }
  }

  sub_1C07758A4();
  sub_1C079199C();
}

void sub_1C0CFB090()
{
  sub_1C07889F0();
  sub_1C0776784();
}

uint64_t sub_1C0CFB0CC(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *a1;
  v3 = a2[5];
  v4 = a2[6];
  sub_1C07A9480(a2 + 2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v3, v4);
}

uint64_t sub_1C0CFB124()
{
  uint64_t v0;

  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 16);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SimpleScheduledTask()
{
  return objc_opt_self();
}

void sub_1C0CFB170()
{
  sub_1C07889F0();
  sub_1C0776784();
}

uint64_t sub_1C0CFB1AC(uint64_t result, _QWORD *a2)
{
  _xpc_activity_s *v3;
  BOOL v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (*(_QWORD *)(*(_QWORD *)result + 24))
  {
    if (*(_BYTE *)(*(_QWORD *)result + 16) == 1)
    {
      v3 = (_xpc_activity_s *)swift_unknownObjectRetain();
      if (xpc_activity_copy_criteria(v3)
        && (swift_getObjectType(), v4 = sub_1C0C4ABA4(), swift_unknownObjectRelease(), !v4))
      {
        return swift_unknownObjectRelease();
      }
      else
      {
        v5 = a2 + 8;
        v7 = a2[11];
        v6 = a2[12];
        sub_1C07A9480(v5, v7);
        v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v7, v6);
        MEMORY[0x1E0C80A78](v8);
        sub_1C106E4B8();
        swift_release();
        return swift_unknownObjectRelease();
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1C0CFB2B8(uint64_t a1)
{
  _QWORD *v1;
  os_log_type_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  _xpc_activity_s *v17;
  xpc_object_t v18;
  uint64_t v19;

  v4 = v1[5];
  v5 = v1[6];
  sub_1C07A9480(v1 + 2, v4);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  if (*(_BYTE *)(a1 + 16) == 1)
  {
    if (qword_1ED761458 != -1)
      swift_once();
    v7 = sub_1C077585C();
    v8 = sub_1C079E000(v7, (uint64_t)qword_1ED78D818);
    sub_1C07767B4();
    sub_1C106F538();
    v9 = sub_1C077B0C0();
    if (sub_1C077AF00(v9))
    {
      v10 = (uint8_t *)sub_1C0775854();
      sub_1C0775854();
      sub_1C077FB6C();
      *(_DWORD *)v10 = 136315138;
      sub_1C07767B4();
      sub_1C077B650(v6, v11, &v19);
      sub_1C07B4398();
      sub_1C0799F00();
      sub_1C07796F0(&dword_1C0771000, v8, (os_log_type_t)a1, "ScheduledTask: %s: has outstanding work", v10);
      sub_1C0778610();
      sub_1C0776778();
    }

    sub_1C07758A4();
  }
  else
  {
    if (qword_1ED761458 != -1)
      swift_once();
    v12 = sub_1C077585C();
    v13 = sub_1C079E000(v12, (uint64_t)qword_1ED78D818);
    sub_1C07767B4();
    sub_1C106F538();
    v14 = sub_1C077B0C0();
    if (sub_1C07767E4(v14))
    {
      v15 = (uint8_t *)sub_1C0775854();
      v19 = sub_1C0775854();
      *(_DWORD *)v15 = 136315138;
      sub_1C07767B4();
      sub_1C077B650(v6, v16, &v19);
      sub_1C07B7D1C();
      sub_1C0799F00();
      sub_1C07796F0(&dword_1C0771000, v13, v2, "ScheduledTask: %s: setting OneShotTask to idle criteria", v15);
      sub_1C0778610();
      sub_1C0776778();
    }

    sub_1C07758A4();
    sub_1C0C4AA60();
    v17 = (_xpc_activity_s *)sub_1C078109C();
    xpc_activity_set_criteria(v17, v18);
    swift_unknownObjectRelease();
  }
  sub_1C0776728();
}

uint64_t sub_1C0CFB518()
{
  uint64_t v0;

  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 16);
  swift_release();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 64);
  return v0;
}

uint64_t sub_1C0CFB544()
{
  sub_1C0CFB518();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for OneShotTask()
{
  return objc_opt_self();
}

uint64_t sub_1C0CFB584(uint64_t a1)
{
  _QWORD *v1;

  return sub_1C0CFB1AC(a1, v1);
}

void sub_1C0CFB59C(xpc_object_t *a1)
{
  uint64_t v1;

  xpc_activity_set_criteria(*(xpc_activity_t *)(v1 + 16), *a1);
}

void sub_1C0CFB5CC(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  sub_1C090B48C();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C0CFB600(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34[2];
  int v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41[5];
  char v42;
  uint64_t v43;
  uint64_t v44[7];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47[7];
  uint64_t v48[2];

  sub_1C090A414(v48);
  v33 = a1;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v32 = a3;
  swift_retain();
  sub_1C090B140();
  v9 = v46;
  if (!v46)
  {
LABEL_14:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1C0827370();
    return swift_release();
  }
  while (1)
  {
    v10 = v45;
    sub_1C078A67C((uint64_t)v47, (uint64_t)v44, (uint64_t *)&unk_1EF6479D0);
    v11 = *a5;
    v19 = sub_1C077D774(v10, v9);
    v20 = *(_QWORD *)(v11 + 16);
    v21 = (v12 & 1) == 0;
    v22 = v20 + v21;
    if (__OFADD__(v20, v21))
      break;
    v23 = v12;
    if (*(_QWORD *)(v11 + 24) >= v22)
    {
      if ((a4 & 1) != 0)
      {
        if ((v12 & 1) != 0)
          goto LABEL_9;
      }
      else
      {
        sub_1C07ACF80(&qword_1EF6479E8);
        sub_1C1070918();
        if ((v23 & 1) != 0)
          goto LABEL_9;
      }
    }
    else
    {
      sub_1C0A4D3F0(v22, a4 & 1, v13, v14, v15, v16, v17, v18, v32, v33, v34[0], (_QWORD *)v34[1], v35, v36, v37, v38, v39, v40, v41[0],
        v41[1],
        v41[2],
        v41[3],
        v41[4],
        v42,
        v43,
        v44[0],
        v44[1],
        v44[2],
        v44[3],
        v44[4],
        v44[5],
        v44[6],
        v45,
        v46,
        v47[0],
        v47[1],
        v47[2],
        v47[3],
        v47[4],
        v47[5],
        v47[6],
        v48[0],
        v48[1]);
      v24 = sub_1C077D774(v10, v9);
      if ((v23 & 1) != (v25 & 1))
        goto LABEL_17;
      v19 = v24;
      if ((v23 & 1) != 0)
      {
LABEL_9:
        sub_1C078A8F8(*(_QWORD *)(*a5 + 56) + 56 * v19, (uint64_t)v34, (uint64_t *)&unk_1EF6479D0);
        sub_1C078A8F8((uint64_t)v34, (uint64_t)v41, (uint64_t *)&unk_1EF6479D0);
        sub_1C0784B6C((uint64_t)v34, (uint64_t *)&unk_1EF6479D0);
        sub_1C0784B6C((uint64_t)v44, (uint64_t *)&unk_1EF6479D0);
        swift_bridgeObjectRelease();
        sub_1C078A98C((uint64_t)v41, *(_QWORD *)(*a5 + 56) + 56 * v19, (uint64_t *)&unk_1EF6479D0);
        goto LABEL_13;
      }
    }
    v26 = (_QWORD *)*a5;
    *(_QWORD *)(*a5 + 8 * (v19 >> 6) + 64) |= 1 << v19;
    v27 = (uint64_t *)(v26[6] + 16 * v19);
    *v27 = v10;
    v27[1] = v9;
    sub_1C078A67C((uint64_t)v44, v26[7] + 56 * v19, (uint64_t *)&unk_1EF6479D0);
    v28 = v26[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (v29)
      goto LABEL_16;
    v26[2] = v30;
LABEL_13:
    sub_1C090B140();
    v9 = v46;
    a4 = 1;
    if (!v46)
      goto LABEL_14;
  }
  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  result = sub_1C1070D44();
  __break(1u);
  return result;
}

uint64_t sub_1C0CFB858(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8[5];

  v8[3] = type metadata accessor for ScheduledTasks.AutonamingMetricsLoggingRunner();
  v8[4] = (uint64_t)&off_1E7A2CC50;
  v4 = sub_1C079DFC4(v8);
  sub_1C07E05F4(a1, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledTasks.AutonamingMetricsLoggingRunner);
  sub_1C0784AC0((uint64_t)v8, a2 + 16);
  type metadata accessor for ScheduledRunnerState();
  v5 = swift_allocObject();
  *(_BYTE *)(v5 + 16) = 0;
  *(_QWORD *)(v5 + 24) = 0;
  *(_QWORD *)(v5 + 32) = 0;
  *(_BYTE *)(v5 + 40) = 0;
  sub_1C07ACF80(&qword_1ED760440);
  swift_allocObject();
  v6 = sub_1C106E4C4();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v8);
  *(_QWORD *)(a2 + 56) = v6;
  return a2;
}

uint64_t sub_1C0CFB920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[5];

  v9[3] = a4;
  v9[4] = a5;
  v9[0] = a1;
  v9[1] = a2;
  sub_1C0784AC0((uint64_t)v9, a3 + 16);
  type metadata accessor for ScheduledRunnerState();
  v6 = sub_1C0778598();
  *(_BYTE *)(v6 + 16) = 0;
  *(_QWORD *)(v6 + 24) = 0;
  *(_QWORD *)(v6 + 32) = 0;
  *(_BYTE *)(v6 + 40) = 0;
  sub_1C07ACF80(&qword_1ED760440);
  sub_1C077B5BC();
  v7 = sub_1C106E4C4();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v9);
  *(_QWORD *)(a3 + 56) = v7;
  return a3;
}

uint64_t sub_1C0CFB9A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[5];

  v7[3] = type metadata accessor for ScheduledTasks.AutonamingMessagesPipelineRunner();
  v7[4] = &off_1E7A2C060;
  v7[0] = a1;
  sub_1C0784AC0((uint64_t)v7, a2 + 16);
  type metadata accessor for ScheduledRunnerState();
  v4 = swift_allocObject();
  *(_BYTE *)(v4 + 16) = 0;
  *(_QWORD *)(v4 + 24) = 0;
  *(_QWORD *)(v4 + 32) = 0;
  *(_BYTE *)(v4 + 40) = 0;
  sub_1C07ACF80(&qword_1ED760440);
  swift_allocObject();
  v5 = sub_1C106E4C4();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v7);
  *(_QWORD *)(a2 + 56) = v5;
  return a2;
}

uint64_t sub_1C0CFBA48(uint64_t *a1)
{
  _QWORD *v1;

  return sub_1C0CFB0CC(a1, v1);
}

uint64_t sub_1C0CFBA60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD v6[5];

  v6[3] = &type metadata for ScheduledTasks.FastpassPipelineRunner;
  v6[4] = &off_1E7A2CC90;
  v6[0] = a1;
  v6[1] = a2;
  sub_1C0784AC0((uint64_t)v6, a3 + 16);
  type metadata accessor for BackgroundTaskScheduledRunnerState();
  swift_allocObject();
  sub_1C0CF9814();
  sub_1C07ACF80(&qword_1EF647910);
  swift_allocObject();
  v4 = sub_1C106E4C4();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v6);
  *(_QWORD *)(a3 + 56) = v4;
  return a3;
}

uint64_t sub_1C0CFBAFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[5];

  v8[3] = &type metadata for ScheduledTasks.FastpassPipelineRunner;
  v8[4] = &off_1E7A2CC90;
  v8[0] = a1;
  v8[1] = a2;
  type metadata accessor for SimpleScheduledBackgroundTask();
  v2 = swift_allocObject();
  v3 = (uint64_t *)sub_1C079D180((uint64_t)v8, (uint64_t)&type metadata for ScheduledTasks.FastpassPipelineRunner);
  v4 = *v3;
  v5 = v3[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v6 = sub_1C0CFBA60(v4, v5, v2);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v8);
  return v6;
}

uint64_t sub_1C0CFBB88()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1C0CFBBB4(void *a1)
{
  uint64_t v1;

  sub_1C0CF98C0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1C0CFBBC0()
{
  return sub_1C0CF9F44();
}

id sub_1C0CFBBC8(uint64_t a1)
{
  uint64_t v1;

  return sub_1C0CFA0A4(a1, *(void **)(v1 + 16));
}

uint64_t sub_1C0CFBBE0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_1C0EF5DAC();
  if (!v1)
    *a1 = result;
  return result;
}

uint64_t sub_1C0CFBC08(double a1, double a2, double a3)
{
  uint64_t result;
  char v4;
  uint64_t v5;
  double v6;
  _BOOL4 v7;
  BOOL v8;

  result = 0;
  v4 = 0;
  v5 = 0;
  v6 = a1;
  while (1)
  {
    v7 = v6 <= a2;
    if (a3 > 0.0)
      v7 = v6 >= a2;
    if (v7)
    {
      if ((v6 != a2) | v4 & 1)
        return result;
      v4 = 1;
      goto LABEL_9;
    }
    v8 = __OFADD__(v5++, 1);
    if (v8)
      break;
    v6 = a1 + (double)v5 * a3;
LABEL_9:
    v8 = __OFADD__(result++, 1);
    if (v8)
    {
      __break(1u);
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0CFBC74(uint64_t a1, uint64_t a2)
{
  _QWORD v3[5];

  v3[3] = &type metadata for ScheduledTasks.FastpassPipelineRunner;
  v3[4] = &off_1E7A2CCA8;
  v3[0] = a1;
  v3[1] = a2;
  sub_1C07A9480(v3, (uint64_t)&type metadata for ScheduledTasks.FastpassPipelineRunner);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106E4B8();
  swift_bridgeObjectRelease();
  return _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v3);
}

void sub_1C0CFBD28(uint64_t *a1)
{
  uint64_t v1;

  sub_1C0CFA0DC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_1C0CFBD48()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 32);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0CFBD84(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (uint64_t)(v1 + 4);
  v7 = v1[9];
  v8 = v1[10];
  v10 = v1[11];
  v9 = v1[12];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_1C0776FE4;
  return sub_1C0CFA398(a1, v4, v5, v6, v7, v8, v10, v9);
}

id sub_1C0CFBE18(uint64_t *a1)
{
  return sub_1C0CFA880(a1);
}

uint64_t *sub_1C0CFBE30(uint64_t *a1)
{
  uint64_t v1;

  return sub_1C0CFA974(a1, *(_BYTE **)(v1 + 16));
}

void sub_1C0CFBE48(uint64_t *a1)
{
  uint64_t v1;

  sub_1C0CF9F90(a1, v1);
}

uint64_t type metadata accessor for ScheduledTasks.AutonamingMetricsLoggingRunner()
{
  uint64_t result;

  result = qword_1ED749AA0;
  if (!qword_1ED749AA0)
    return swift_getSingletonMetadata();
  return result;
}

ValueMetadata *type metadata accessor for ScheduledTasks.AssetRegistryOverrideStoreWeeklyCleanupRunner()
{
  return &type metadata for ScheduledTasks.AssetRegistryOverrideStoreWeeklyCleanupRunner;
}

ValueMetadata *type metadata accessor for ScheduledTasks.GlobalKnowledgeTwoHourPruneRunner()
{
  return &type metadata for ScheduledTasks.GlobalKnowledgeTwoHourPruneRunner;
}

ValueMetadata *type metadata accessor for ScheduledTasks.EventAndFeedbackDailyProcessingRunner()
{
  return &type metadata for ScheduledTasks.EventAndFeedbackDailyProcessingRunner;
}

ValueMetadata *type metadata accessor for ScheduledTasks.LongitudinalFeatureRunner()
{
  return &type metadata for ScheduledTasks.LongitudinalFeatureRunner;
}

ValueMetadata *type metadata accessor for ScheduledTasks.BehaviorSequenceLogRunner()
{
  return &type metadata for ScheduledTasks.BehaviorSequenceLogRunner;
}

ValueMetadata *type metadata accessor for ScheduledTasks.EventStreamsDataCollectionRunner()
{
  return &type metadata for ScheduledTasks.EventStreamsDataCollectionRunner;
}

ValueMetadata *type metadata accessor for ScheduledTasks.LongitudinalDataCollectionRunner()
{
  return &type metadata for ScheduledTasks.LongitudinalDataCollectionRunner;
}

uint64_t *sub_1C0CFBF14(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1C106AB28();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v10(v7, v8, v9);
    v11 = type metadata accessor for Configuration();
    *(_OWORD *)&v7[*(int *)(v11 + 20)] = *(_OWORD *)&v8[*(int *)(v11 + 20)];
  }
  return v3;
}

uint64_t sub_1C0CFBFC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1C106AB28();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_1C0CFC00C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1C106AB28();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v9(v6, v7, v8);
  v10 = type metadata accessor for Configuration();
  *(_OWORD *)&v6[*(int *)(v10 + 20)] = *(_OWORD *)&v7[*(int *)(v10 + 20)];
  return a1;
}

_QWORD *sub_1C0CFC090(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;

  *a1 = *a2;
  a1[1] = a2[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C106AB28();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = *(int *)(type metadata accessor for Configuration() + 20);
  v11 = &v7[v10];
  v12 = &v8[v10];
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *((_QWORD *)v11 + 1) = *((_QWORD *)v12 + 1);
  return a1;
}

_OWORD *sub_1C0CFC130(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1C106AB28();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  v8 = type metadata accessor for Configuration();
  *(_OWORD *)&v5[*(int *)(v8 + 20)] = *(_OWORD *)&v6[*(int *)(v8 + 20)];
  return a1;
}

_QWORD *sub_1C0CFC1A0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1C106AB28();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = type metadata accessor for Configuration();
  *(_OWORD *)&v8[*(int *)(v11 + 20)] = *(_OWORD *)&v9[*(int *)(v11 + 20)];
  return a1;
}

uint64_t sub_1C0CFC220()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0CFC22C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1C0779D10();
    return sub_1C07B2D80(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_1C0CFC29C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0CFC2A8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1C0779D10();
    return sub_1C07B2D8C(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1C0CFC310()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Configuration();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ScheduledTasks.FullPipelineRunner()
{
  return &type metadata for ScheduledTasks.FullPipelineRunner;
}

ValueMetadata *type metadata accessor for ScheduledTasks.FastpassPipelineRunner()
{
  return &type metadata for ScheduledTasks.FastpassPipelineRunner;
}

ValueMetadata *type metadata accessor for ScheduledTasks.ViewDailyRunner()
{
  return &type metadata for ScheduledTasks.ViewDailyRunner;
}

ValueMetadata *type metadata accessor for ScheduledTasks.ViewDailyWithNetworkingRunner()
{
  return &type metadata for ScheduledTasks.ViewDailyWithNetworkingRunner;
}

ValueMetadata *type metadata accessor for ScheduledTasks.ViewWeeklyRunner()
{
  return &type metadata for ScheduledTasks.ViewWeeklyRunner;
}

ValueMetadata *type metadata accessor for ScheduledTasks.ViewEvery2HoursRunner()
{
  return &type metadata for ScheduledTasks.ViewEvery2HoursRunner;
}

ValueMetadata *type metadata accessor for ScheduledTasks.ViewEvery4HoursRunner()
{
  return &type metadata for ScheduledTasks.ViewEvery4HoursRunner;
}

void _s24IntelligencePlatformCore14ScheduledTasksO45AssetRegistryOverrideStoreWeeklyCleanupRunnerVwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C077960C();
  sub_1C0778534();
}

ValueMetadata *type metadata accessor for ScheduledTasks.ResetDisabledViewsDailyRunner()
{
  return &type metadata for ScheduledTasks.ResetDisabledViewsDailyRunner;
}

uint64_t sub_1C0CFC43C()
{
  uint64_t v0;

  sub_1C0826F50(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56));
  return swift_deallocObject();
}

uint64_t sub_1C0CFC46C()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0CFC4A8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C0CFBBE0(a1);
}

void sub_1C0CFC4C4(xpc_object_t *a1)
{
  sub_1C0CFB59C(a1);
}

uint64_t sub_1C0CFC514()
{
  return type metadata accessor for SinglePETSampleTask(0);
}

void sub_1C0CFC524()
{
  uint64_t v0;

}

BOOL sub_1C0CFC534(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_1C0CFC544(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 136) = a1;
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

uint64_t sub_1C0CFC554()
{
  return 0x7265764577656956;
}

id sub_1C0CFC57C(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, (SEL)(v1 + 94), 1);
}

uint64_t sub_1C0CFC59C()
{
  return sub_1C0CFC788();
}

uint64_t sub_1C0CFC5B0()
{
  uint64_t v0;
  uint64_t v1;

  swift_retain();
  sub_1C0A1939C();
  v1 = v0;
  swift_release();
  return v1;
}

uint64_t sub_1C0CFC628()
{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE __dst[96];

  memcpy(__dst, v0, sizeof(__dst));
  swift_retain();
  sub_1C0A1939C();
  v2 = v1;
  swift_release();
  return v2;
}

void sub_1C0CFC6A8()
{
  const void *v0;
  _BYTE __dst[72];

  memcpy(__dst, v0, sizeof(__dst));
  sub_1C0779758();
  sub_1C079C83C();
  sub_1C078F7AC();
  sub_1C078B0D8();
}

uint64_t sub_1C0CFC708()
{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE __dst[72];

  memcpy(__dst, v0, sizeof(__dst));
  swift_retain();
  sub_1C0A1939C();
  v2 = v1;
  swift_release();
  return v2;
}

uint64_t sub_1C0CFC788()
{
  uint64_t v0;
  uint64_t v1;

  swift_retain();
  sub_1C0A1939C();
  v1 = v0;
  swift_release();
  return v1;
}

uint64_t sub_1C0CFC7F0()
{
  uint64_t v0;
  uint64_t v1;

  swift_retain();
  sub_1C0A1939C();
  v1 = v0;
  swift_release();
  return v1;
}

uint64_t sub_1C0CFC864()
{
  uint64_t v0;
  uint64_t v1;

  swift_retain();
  sub_1C0A1939C();
  v1 = v0;
  swift_release();
  return v1;
}

void sub_1C0CFC8CC()
{
  sub_1C0779758();
  sub_1C079F7C4();
  sub_1C078F7AC();
  sub_1C0799A28();
}

uint64_t sub_1C0CFC91C()
{
  return sub_1C0CFC930();
}

uint64_t sub_1C0CFC930()
{
  uint64_t v0;
  uint64_t v1;

  swift_retain();
  sub_1C0A1939C();
  v1 = v0;
  swift_release();
  return v1;
}

uint64_t sub_1C0CFC998()
{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE __dst[72];

  memcpy(__dst, v0, sizeof(__dst));
  swift_retain();
  sub_1C0A1939C();
  v2 = v1;
  swift_release();
  return v2;
}

uint64_t sub_1C0CFCA20()
{
  uint64_t v0;
  uint64_t v1;

  swift_retain();
  sub_1C0A1939C();
  v1 = v0;
  swift_release();
  return v1;
}

uint64_t sub_1C0CFCA88()
{
  uint64_t v0;
  uint64_t v1;

  swift_retain();
  sub_1C0A1939C();
  v1 = v0;
  swift_release();
  return v1;
}

uint64_t sub_1C0CFCAFC()
{
  uint64_t v0;
  uint64_t v1;

  swift_retain();
  sub_1C0A1939C();
  v1 = v0;
  swift_release();
  return v1;
}

uint64_t sub_1C0CFCB74()
{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE __dst[96];

  memcpy(__dst, v0, sizeof(__dst));
  swift_retain();
  sub_1C0A1939C();
  v2 = v1;
  swift_release();
  return v2;
}

uint64_t sub_1C0CFCBFC()
{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE __dst[72];

  memcpy(__dst, v0, sizeof(__dst));
  swift_retain();
  sub_1C0A1939C();
  v2 = v1;
  swift_release();
  return v2;
}

void sub_1C0CFCC84()
{
  sub_1C0779758();
  sub_1C079F7C4();
  sub_1C078F7AC();
  sub_1C0799A28();
}

void sub_1C0CFCCD4(int a1, uint64_t a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  const void *v8;
  uint64_t v9;
  char v10;

  sub_1C07AE10C(a1, v8, a3, a4, a5, a6, a7, a8, v9, v10);
  sub_1C0CFC6A8();
  sub_1C0799A28();
}

void sub_1C0CFCD08(int a1, uint64_t a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  const void *v8;
  uint64_t v9;
  char v10;

  sub_1C07AE10C(a1, v8, a3, a4, a5, a6, a7, a8, v9, v10);
  sub_1C0CFC998();
  sub_1C079B774();
}

void sub_1C0CFCD44()
{
  sub_1C07980A8();
  sub_1C0CFC8CC();
}

void sub_1C0CFCD64()
{
  sub_1C0791F84();
  sub_1C0CFCC84();
}

uint64_t sub_1C0CFCD84()
{
  return sub_1C0CFC864();
}

uint64_t sub_1C0CFCD98()
{
  return sub_1C0CFCA20();
}

void sub_1C0CFCDAC()
{
  sub_1C07A1384();
  sub_1C0CFC7F0();
  sub_1C0782714();
}

void sub_1C0CFCDCC()
{
  sub_1C07A1384();
  sub_1C0CFCA88();
  sub_1C0782714();
}

void sub_1C0CFCDEC(int a1, uint64_t a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  const void *v8;
  uint64_t v9;
  char v10;

  sub_1C07AE10C(a1, v8, a3, a4, a5, a6, a7, a8, v9, v10);
  sub_1C0CFC708();
  sub_1C0799A28();
}

void sub_1C0CFCE20(int a1, uint64_t a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  const void *v8;
  uint64_t v9;
  char v10;

  sub_1C07AE10C(a1, v8, a3, a4, a5, a6, a7, a8, v9, v10);
  sub_1C0CFCBFC();
  sub_1C079B774();
}

uint64_t sub_1C0CFCE5C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD v27[2];
  uint64_t v28;
  __int128 v29;
  uint64_t v30;

  v3 = sub_1C106C040();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106C3F4();
  *(_QWORD *)&v27[0] = 0;
  *((_QWORD *)&v27[0] + 1) = 0xE000000000000000;
  sub_1C1070774();
  swift_bridgeObjectRelease();
  strcpy((char *)v27, "SELECT * FROM ");
  HIBYTE(v27[0]) = -18;
  v7 = *(_QWORD *)a2;
  v8 = *(_QWORD *)(a2 + 8);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v24 = v7;
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  v28 = 0;
  memset(v27, 0, sizeof(v27));
  sub_1C106C034();
  v9 = (void *)v25;
  v10 = sub_1C106C3C4();
  if (v9)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_1C08EF2D4((uint64_t)v27);
    if (qword_1ED762AF0 != -1)
      swift_once();
    v11 = sub_1C106F544();
    sub_1C079E000(v11, (uint64_t)qword_1ED78D9E0);
    v30 = *(_QWORD *)(a2 + 24);
    v29 = *(_OWORD *)(a2 + 32);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_retain();
    sub_1C08FD4A0((uint64_t)&v30);
    sub_1C07B35DC((uint64_t)&v29);
    v12 = v9;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_retain();
    sub_1C08FD4A0((uint64_t)&v30);
    sub_1C07B35DC((uint64_t)&v29);
    v13 = v9;
    v14 = sub_1C106F538();
    v15 = sub_1C1070390();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc();
      v23 = (_QWORD *)swift_slowAlloc();
      v25 = swift_slowAlloc();
      *(_QWORD *)&v27[0] = v25;
      *(_DWORD *)v16 = 136315394;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v26 = sub_1C0788DAC(v24, v8, (uint64_t *)v27);
      sub_1C10705AC();
      swift_release();
      swift_bridgeObjectRelease_n();
      sub_1C08EE9A0((uint64_t)&v30);
      sub_1C07B2F5C((uint64_t)&v29);
      swift_release();
      swift_bridgeObjectRelease();
      sub_1C08EE9A0((uint64_t)&v30);
      sub_1C07B2F5C((uint64_t)&v29);
      *(_WORD *)(v16 + 12) = 2112;
      v17 = v9;
      v18 = _swift_stdlib_bridgeErrorToNSError();
      v26 = v18;
      sub_1C10705AC();
      v19 = v23;
      *v23 = v18;

      _os_log_impl(&dword_1C0771000, v14, v15, "Error when reading from table %s: %@", (uint8_t *)v16, 0x16u);
      sub_1C07ACF80(&qword_1ED7614A0);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v19, -1, -1);
      v20 = v25;
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v20, -1, -1);
      MEMORY[0x1C3BA8270](v16, -1, -1);
    }
    else
    {
      swift_release();
      swift_bridgeObjectRelease();
      sub_1C08EE9A0((uint64_t)&v30);
      sub_1C07B2F5C((uint64_t)&v29);
      swift_release();
      swift_bridgeObjectRelease();
      sub_1C08EE9A0((uint64_t)&v30);
      sub_1C07B2F5C((uint64_t)&v29);

    }
    sub_1C0A22EA8();
    swift_allocError();
    *v21 = v9;
    swift_willThrow();
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_1C08EF2D4((uint64_t)v27);
  }
  return v10;
}

uint64_t sub_1C0CFD2C8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD v27[2];
  uint64_t v28;
  uint64_t v29;

  v3 = sub_1C106C040();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106C3F4();
  *(_QWORD *)&v27[0] = 0;
  *((_QWORD *)&v27[0] + 1) = 0xE000000000000000;
  sub_1C1070774();
  swift_bridgeObjectRelease();
  strcpy((char *)v27, "SELECT * FROM ");
  HIBYTE(v27[0]) = -18;
  v7 = *a2;
  v8 = a2[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v25 = v7;
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  v28 = 0;
  memset(v27, 0, sizeof(v27));
  sub_1C106C034();
  v9 = (void *)v26;
  v10 = sub_1C106C3C4();
  if (v9)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_1C08EF2D4((uint64_t)v27);
    if (qword_1ED762AF0 != -1)
      swift_once();
    v11 = sub_1C106F544();
    sub_1C079E000(v11, (uint64_t)qword_1ED78D9E0);
    sub_1C0D01A5C((uint64_t)a2);
    v12 = v9;
    sub_1C0D01A5C((uint64_t)a2);
    v13 = v9;
    v14 = sub_1C106F538();
    v15 = sub_1C1070390();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc();
      v24 = (_QWORD *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      *(_QWORD *)&v27[0] = v26;
      *(_DWORD *)v16 = 136315394;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v29 = sub_1C0788DAC(v25, v8, (uint64_t *)v27);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      sub_1C0D01ACC((uint64_t)a2);
      sub_1C0D01ACC((uint64_t)a2);
      *(_WORD *)(v16 + 12) = 2112;
      v17 = v9;
      v18 = _swift_stdlib_bridgeErrorToNSError();
      v29 = v18;
      sub_1C10705AC();
      v19 = v24;
      *v24 = v18;

      _os_log_impl(&dword_1C0771000, v14, v15, "Error when reading from table %s: %@", (uint8_t *)v16, 0x16u);
      sub_1C07ACF80(&qword_1ED7614A0);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v19, -1, -1);
      v20 = v26;
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v20, -1, -1);
      MEMORY[0x1C3BA8270](v16, -1, -1);
    }
    else
    {
      sub_1C0D01ACC((uint64_t)a2);
      sub_1C0D01ACC((uint64_t)a2);

    }
    sub_1C0A22EA8();
    swift_allocError();
    *v21 = v9;
    swift_willThrow();
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_1C08EF2D4((uint64_t)v27);
  }
  return v10;
}

uint64_t sub_1C0CFD694(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD v27[2];
  uint64_t v28;
  uint64_t v29;

  v3 = sub_1C106C040();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106C3F4();
  *(_QWORD *)&v27[0] = 0;
  *((_QWORD *)&v27[0] + 1) = 0xE000000000000000;
  sub_1C1070774();
  swift_bridgeObjectRelease();
  strcpy((char *)v27, "SELECT * FROM ");
  HIBYTE(v27[0]) = -18;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v25 = v7;
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  v28 = 0;
  memset(v27, 0, sizeof(v27));
  sub_1C106C034();
  v9 = (void *)v26;
  v10 = sub_1C106C3C4();
  if (v9)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_1C08EF2D4((uint64_t)v27);
    if (qword_1ED762AF0 != -1)
      swift_once();
    v11 = sub_1C106F544();
    sub_1C079E000(v11, (uint64_t)qword_1ED78D9E0);
    sub_1C08EE934(a2);
    v12 = v9;
    sub_1C08EE934(a2);
    v13 = v9;
    v14 = sub_1C106F538();
    v15 = sub_1C1070390();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc();
      v24 = (_QWORD *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      *(_QWORD *)&v27[0] = v26;
      *(_DWORD *)v16 = 136315394;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v29 = sub_1C0788DAC(v25, v8, (uint64_t *)v27);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      sub_1C0D019C0(a2);
      sub_1C0D019C0(a2);
      *(_WORD *)(v16 + 12) = 2112;
      v17 = v9;
      v18 = _swift_stdlib_bridgeErrorToNSError();
      v29 = v18;
      sub_1C10705AC();
      v19 = v24;
      *v24 = v18;

      _os_log_impl(&dword_1C0771000, v14, v15, "Error when reading from table %s: %@", (uint8_t *)v16, 0x16u);
      sub_1C07ACF80(&qword_1ED7614A0);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v19, -1, -1);
      v20 = v26;
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v20, -1, -1);
      MEMORY[0x1C3BA8270](v16, -1, -1);
    }
    else
    {
      sub_1C0D019C0(a2);
      sub_1C0D019C0(a2);

    }
    sub_1C0A22EA8();
    swift_allocError();
    *v21 = v9;
    swift_willThrow();
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_1C08EF2D4((uint64_t)v27);
  }
  return v10;
}

uint64_t sub_1C0CFDA60(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD v27[2];
  uint64_t v28;
  uint64_t v29;

  v3 = sub_1C106C040();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106C3F4();
  *(_QWORD *)&v27[0] = 0;
  *((_QWORD *)&v27[0] + 1) = 0xE000000000000000;
  sub_1C1070774();
  swift_bridgeObjectRelease();
  strcpy((char *)v27, "SELECT * FROM ");
  HIBYTE(v27[0]) = -18;
  v7 = *a2;
  v8 = a2[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v25 = v7;
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  v28 = 0;
  memset(v27, 0, sizeof(v27));
  sub_1C106C034();
  v9 = (void *)v26;
  v10 = sub_1C106C3C4();
  if (v9)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_1C08EF2D4((uint64_t)v27);
    if (qword_1ED762AF0 != -1)
      swift_once();
    v11 = sub_1C106F544();
    sub_1C079E000(v11, (uint64_t)qword_1ED78D9E0);
    sub_1C0C49794((uint64_t)a2);
    v12 = v9;
    sub_1C0C49794((uint64_t)a2);
    v13 = v9;
    v14 = sub_1C106F538();
    v15 = sub_1C1070390();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc();
      v24 = (_QWORD *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      *(_QWORD *)&v27[0] = v26;
      *(_DWORD *)v16 = 136315394;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v29 = sub_1C0788DAC(v25, v8, (uint64_t *)v27);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      sub_1C0D018C4((uint64_t)a2);
      sub_1C0D018C4((uint64_t)a2);
      *(_WORD *)(v16 + 12) = 2112;
      v17 = v9;
      v18 = _swift_stdlib_bridgeErrorToNSError();
      v29 = v18;
      sub_1C10705AC();
      v19 = v24;
      *v24 = v18;

      _os_log_impl(&dword_1C0771000, v14, v15, "Error when reading from table %s: %@", (uint8_t *)v16, 0x16u);
      sub_1C07ACF80(&qword_1ED7614A0);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v19, -1, -1);
      v20 = v26;
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v20, -1, -1);
      MEMORY[0x1C3BA8270](v16, -1, -1);
    }
    else
    {
      sub_1C0D018C4((uint64_t)a2);
      sub_1C0D018C4((uint64_t)a2);

    }
    sub_1C0A22EA8();
    swift_allocError();
    *v21 = v9;
    swift_willThrow();
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_1C08EF2D4((uint64_t)v27);
  }
  return v10;
}

uint64_t sub_1C0CFDE2C(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  __int128 v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v22;
  uint64_t v23;
  _OWORD v24[2];
  uint64_t v25;
  uint64_t v26;

  v4 = sub_1C106C040();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106C3F4();
  *(_QWORD *)&v24[0] = 0;
  *((_QWORD *)&v24[0] + 1) = 0xE000000000000000;
  sub_1C1070774();
  swift_bridgeObjectRelease();
  strcpy((char *)v24, "SELECT * FROM ");
  HIBYTE(v24[0]) = -18;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  v25 = 0;
  memset(v24, 0, sizeof(v24));
  sub_1C106C034();
  v8 = sub_1C106C3C4();
  if (v2)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_1C08EF2D4((uint64_t)v24);
    if (qword_1ED762AF0 != -1)
      swift_once();
    v9 = sub_1C106F544();
    sub_1C079E000(v9, (uint64_t)qword_1ED78D9E0);
    sub_1C0D01C78(a2, (uint64_t)v24);
    v10 = v2;
    v11 = v2;
    v12 = sub_1C106F538();
    v13 = sub_1C1070390();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = swift_slowAlloc();
      v15 = (_QWORD *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v26 = v16;
      *(_DWORD *)v14 = 136315394;
      v22 = v8;
      v17 = v24[0];
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v23 = sub_1C0788DAC(v17, *((unint64_t *)&v17 + 1), &v26);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      sub_1C0D01CB4((uint64_t)v24);
      *(_WORD *)(v14 + 12) = 2112;
      v18 = v2;
      v19 = _swift_stdlib_bridgeErrorToNSError();
      v23 = v19;
      v8 = v22;
      sub_1C10705AC();
      *v15 = v19;

      _os_log_impl(&dword_1C0771000, v12, v13, "Error when reading from table %s: %@", (uint8_t *)v14, 0x16u);
      sub_1C07ACF80(&qword_1ED7614A0);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v15, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v16, -1, -1);
      MEMORY[0x1C3BA8270](v14, -1, -1);
    }
    else
    {
      sub_1C0D01CB4((uint64_t)v24);

    }
    sub_1C0A22EA8();
    swift_allocError();
    *v20 = v2;
    swift_willThrow();
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_1C08EF2D4((uint64_t)v24);
  }
  return v8;
}

uint64_t sub_1C0CFE1E0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  _OWORD v27[2];
  uint64_t v28;
  uint64_t v29;

  v3 = sub_1C106C040();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106C3F4();
  *(_QWORD *)&v27[0] = 0;
  *((_QWORD *)&v27[0] + 1) = 0xE000000000000000;
  sub_1C1070774();
  swift_bridgeObjectRelease();
  strcpy((char *)v27, "SELECT * FROM ");
  HIBYTE(v27[0]) = -18;
  v7 = *a2;
  v8 = a2[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v24 = v7;
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  v28 = 0;
  memset(v27, 0, sizeof(v27));
  sub_1C106C034();
  v9 = v25;
  v10 = sub_1C106C3C4();
  if (v9)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_1C08EF2D4((uint64_t)v27);
    if (qword_1ED762AF0 != -1)
      swift_once();
    v11 = sub_1C106F544();
    sub_1C079E000(v11, (uint64_t)qword_1ED78D9E0);
    v29 = a2[4];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_retain();
    sub_1C08FD4A0((uint64_t)&v29);
    v12 = v9;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_retain();
    sub_1C08FD4A0((uint64_t)&v29);
    v13 = v9;
    v14 = sub_1C106F538();
    v15 = sub_1C1070390();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc();
      v17 = (_QWORD *)swift_slowAlloc();
      v23 = swift_slowAlloc();
      *(_QWORD *)&v27[0] = v23;
      *(_DWORD *)v16 = 136315394;
      v25 = (void *)v10;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v26 = sub_1C0788DAC(v24, v8, (uint64_t *)v27);
      sub_1C10705AC();
      swift_release();
      swift_bridgeObjectRelease_n();
      sub_1C08EE9A0((uint64_t)&v29);
      swift_release();
      swift_bridgeObjectRelease();
      sub_1C08EE9A0((uint64_t)&v29);
      *(_WORD *)(v16 + 12) = 2112;
      v18 = v9;
      v19 = _swift_stdlib_bridgeErrorToNSError();
      v26 = v19;
      sub_1C10705AC();
      *v17 = v19;
      v10 = (uint64_t)v25;

      _os_log_impl(&dword_1C0771000, v14, v15, "Error when reading from table %s: %@", (uint8_t *)v16, 0x16u);
      sub_1C07ACF80(&qword_1ED7614A0);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v17, -1, -1);
      v20 = v23;
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v20, -1, -1);
      MEMORY[0x1C3BA8270](v16, -1, -1);
    }
    else
    {
      swift_release();
      swift_bridgeObjectRelease();
      sub_1C08EE9A0((uint64_t)&v29);
      swift_release();
      swift_bridgeObjectRelease();
      sub_1C08EE9A0((uint64_t)&v29);

    }
    sub_1C0A22EA8();
    swift_allocError();
    *v21 = v9;
    swift_willThrow();
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_1C08EF2D4((uint64_t)v27);
  }
  return v10;
}

uint64_t sub_1C0CFE610(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  __int128 v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v22;
  uint64_t v23;
  _OWORD v24[2];
  uint64_t v25;
  uint64_t v26;

  v4 = sub_1C106C040();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106C3F4();
  *(_QWORD *)&v24[0] = 0;
  *((_QWORD *)&v24[0] + 1) = 0xE000000000000000;
  sub_1C1070774();
  swift_bridgeObjectRelease();
  strcpy((char *)v24, "SELECT * FROM ");
  HIBYTE(v24[0]) = -18;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  v25 = 0;
  memset(v24, 0, sizeof(v24));
  sub_1C106C034();
  v8 = sub_1C106C3C4();
  if (v2)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_1C08EF2D4((uint64_t)v24);
    if (qword_1ED762AF0 != -1)
      swift_once();
    v9 = sub_1C106F544();
    sub_1C079E000(v9, (uint64_t)qword_1ED78D9E0);
    sub_1C094BB40(a2, (uint64_t)v24);
    v10 = v2;
    v11 = v2;
    v12 = sub_1C106F538();
    v13 = sub_1C1070390();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = swift_slowAlloc();
      v15 = (_QWORD *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v26 = v16;
      *(_DWORD *)v14 = 136315394;
      v22 = v8;
      v17 = v24[0];
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v23 = sub_1C0788DAC(v17, *((unint64_t *)&v17 + 1), &v26);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      sub_1C094BB94((uint64_t)v24);
      *(_WORD *)(v14 + 12) = 2112;
      v18 = v2;
      v19 = _swift_stdlib_bridgeErrorToNSError();
      v23 = v19;
      v8 = v22;
      sub_1C10705AC();
      *v15 = v19;

      _os_log_impl(&dword_1C0771000, v12, v13, "Error when reading from table %s: %@", (uint8_t *)v14, 0x16u);
      sub_1C07ACF80(&qword_1ED7614A0);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v15, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v16, -1, -1);
      MEMORY[0x1C3BA8270](v14, -1, -1);
    }
    else
    {
      sub_1C094BB94((uint64_t)v24);

    }
    sub_1C0A22EA8();
    swift_allocError();
    *v20 = v2;
    swift_willThrow();
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_1C08EF2D4((uint64_t)v24);
  }
  return v8;
}

void sub_1C0CFEA18(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  _OWORD v18[2];
  uint64_t v19;

  v6 = sub_1C106C040();
  MEMORY[0x1E0C80A78](v6);
  sub_1C106C3F4();
  sub_1C1070774();
  swift_bridgeObjectRelease();
  sub_1C07A74E4();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  v19 = 0;
  memset(v18, 0, sizeof(v18));
  sub_1C106C034();
  sub_1C106C3C4();
  if (v3)
  {
    swift_bridgeObjectRelease();
    sub_1C079D800();
    sub_1C0794E84();
    if (qword_1ED762AF0 != -1)
      swift_once();
    v7 = sub_1C106F544();
    sub_1C079E000(v7, (uint64_t)qword_1ED78D9E0);
    sub_1C077AEBC();
    sub_1C0783050();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C077B72C();
    sub_1C077AEBC();
    sub_1C0783050();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C077B72C();
    v8 = (void *)sub_1C106F538();
    v9 = sub_1C1070390();
    if (sub_1C077C10C(v9))
    {
      v10 = sub_1C0775854();
      v17 = (_QWORD *)sub_1C0775854();
      *(_QWORD *)&v18[0] = sub_1C0775854();
      *(_DWORD *)v10 = 136315394;
      sub_1C077AEBC();
      v11 = sub_1C0788DAC(a2, a3, (uint64_t *)v18);
      sub_1C07A3EC4(v11);
      sub_1C07758A4();
      sub_1C07878F0();
      sub_1C079635C();
      *(_WORD *)(v10 + 12) = 2112;
      sub_1C077B72C();
      v12 = _swift_stdlib_bridgeErrorToNSError();
      sub_1C079AEF0(v12);
      *v17 = v10 + 4;
      sub_1C07888BC();
      sub_1C07888BC();
      sub_1C07A0278(&dword_1C0771000, v13, v14, "Error when reading from table %s: %@");
      sub_1C07ACF80(&qword_1ED7614A0);
      sub_1C078CBD0();
      sub_1C0776778();
    }
    sub_1C07758A4();
    sub_1C07878F0();
    sub_1C07758A4();
    sub_1C07888BC();
    sub_1C07888BC();

    sub_1C0A22EA8();
    v15 = sub_1C0775810();
    sub_1C07A5734(v15, v16);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1C079D800();
    sub_1C0794E84();
  }
  sub_1C07757D0();
}

uint64_t sub_1C0CFECEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  __int128 v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  void *v26;
  uint64_t v27;
  _OWORD v28[2];
  uint64_t v29;
  uint64_t v30;

  v5 = sub_1C106C040();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106C3F4();
  *(_QWORD *)&v28[0] = 0;
  *((_QWORD *)&v28[0] + 1) = 0xE000000000000000;
  sub_1C1070774();
  swift_bridgeObjectRelease();
  strcpy((char *)v28, "SELECT * FROM ");
  HIBYTE(v28[0]) = -18;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  v30 = a3;
  sub_1C1070C0C();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  v29 = 0;
  memset(v28, 0, sizeof(v28));
  sub_1C106C034();
  v9 = v26;
  v10 = sub_1C106C3C4();
  if (v9)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_1C08EF2D4((uint64_t)v28);
    if (qword_1ED762AF0 != -1)
      swift_once();
    v11 = sub_1C106F544();
    sub_1C079E000(v11, (uint64_t)qword_1ED78D9E0);
    sub_1C0D01C78(a2, (uint64_t)v28);
    v12 = v9;
    v13 = v9;
    v14 = sub_1C106F538();
    v15 = sub_1C1070390();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc();
      v17 = swift_slowAlloc();
      v26 = (void *)v10;
      v18 = (_QWORD *)v17;
      v19 = swift_slowAlloc();
      v30 = v19;
      *(_DWORD *)v16 = 136315394;
      v20 = v28[0];
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v27 = sub_1C0788DAC(v20, *((unint64_t *)&v20 + 1), &v30);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      sub_1C0D01CB4((uint64_t)v28);
      *(_WORD *)(v16 + 12) = 2112;
      v21 = v9;
      v22 = _swift_stdlib_bridgeErrorToNSError();
      v27 = v22;
      sub_1C10705AC();
      *v18 = v22;

      _os_log_impl(&dword_1C0771000, v14, v15, "Error when reading from table %s: %@", (uint8_t *)v16, 0x16u);
      sub_1C07ACF80(&qword_1ED7614A0);
      swift_arrayDestroy();
      v23 = v18;
      v10 = (uint64_t)v26;
      MEMORY[0x1C3BA8270](v23, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v19, -1, -1);
      MEMORY[0x1C3BA8270](v16, -1, -1);
    }
    else
    {
      sub_1C0D01CB4((uint64_t)v28);

    }
    sub_1C0A22EA8();
    swift_allocError();
    *v24 = v9;
    swift_willThrow();
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_1C08EF2D4((uint64_t)v28);
  }
  return v10;
}

uint64_t sub_1C0CFF0EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD v29[2];
  uint64_t v30;
  uint64_t v31;

  v5 = sub_1C106C040();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106C3F4();
  *(_QWORD *)&v29[0] = 0;
  *((_QWORD *)&v29[0] + 1) = 0xE000000000000000;
  sub_1C1070774();
  swift_bridgeObjectRelease();
  strcpy((char *)v29, "SELECT * FROM ");
  HIBYTE(v29[0]) = -18;
  v9 = *(_QWORD *)(a2 + 8);
  v10 = *(_QWORD *)(a2 + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v27 = v9;
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  v31 = a3;
  sub_1C1070C0C();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  v30 = 0;
  memset(v29, 0, sizeof(v29));
  sub_1C106C034();
  v11 = (void *)v28;
  v12 = sub_1C106C3C4();
  if (v11)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_1C08EF2D4((uint64_t)v29);
    if (qword_1ED762AF0 != -1)
      swift_once();
    v13 = sub_1C106F544();
    sub_1C079E000(v13, (uint64_t)qword_1ED78D9E0);
    sub_1C08EE934(a2);
    v14 = v11;
    sub_1C08EE934(a2);
    v15 = v11;
    v16 = sub_1C106F538();
    v17 = sub_1C1070390();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v26 = (_QWORD *)swift_slowAlloc();
      v28 = swift_slowAlloc();
      *(_QWORD *)&v29[0] = v28;
      *(_DWORD *)v18 = 136315394;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v31 = sub_1C0788DAC(v27, v10, (uint64_t *)v29);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      sub_1C0D019C0(a2);
      sub_1C0D019C0(a2);
      *(_WORD *)(v18 + 12) = 2112;
      v19 = v11;
      v20 = _swift_stdlib_bridgeErrorToNSError();
      v31 = v20;
      sub_1C10705AC();
      v21 = v26;
      *v26 = v20;

      _os_log_impl(&dword_1C0771000, v16, v17, "Error when reading from table %s: %@", (uint8_t *)v18, 0x16u);
      sub_1C07ACF80(&qword_1ED7614A0);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v21, -1, -1);
      v22 = v28;
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v22, -1, -1);
      MEMORY[0x1C3BA8270](v18, -1, -1);
    }
    else
    {
      sub_1C0D019C0(a2);
      sub_1C0D019C0(a2);

    }
    sub_1C0A22EA8();
    swift_allocError();
    *v23 = v11;
    swift_willThrow();
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_1C08EF2D4((uint64_t)v29);
  }
  return v12;
}

uint64_t sub_1C0CFF504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  __int128 v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  void *v26;
  uint64_t v27;
  _OWORD v28[2];
  uint64_t v29;
  uint64_t v30;

  v5 = sub_1C106C040();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106C3F4();
  *(_QWORD *)&v28[0] = 0;
  *((_QWORD *)&v28[0] + 1) = 0xE000000000000000;
  sub_1C1070774();
  swift_bridgeObjectRelease();
  strcpy((char *)v28, "SELECT * FROM ");
  HIBYTE(v28[0]) = -18;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  v30 = a3;
  sub_1C1070C0C();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  v29 = 0;
  memset(v28, 0, sizeof(v28));
  sub_1C106C034();
  v9 = v26;
  v10 = sub_1C106C3C4();
  if (v9)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_1C08EF2D4((uint64_t)v28);
    if (qword_1ED762AF0 != -1)
      swift_once();
    v11 = sub_1C106F544();
    sub_1C079E000(v11, (uint64_t)qword_1ED78D9E0);
    sub_1C094BB40(a2, (uint64_t)v28);
    v12 = v9;
    v13 = v9;
    v14 = sub_1C106F538();
    v15 = sub_1C1070390();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc();
      v17 = swift_slowAlloc();
      v26 = (void *)v10;
      v18 = (_QWORD *)v17;
      v19 = swift_slowAlloc();
      v30 = v19;
      *(_DWORD *)v16 = 136315394;
      v20 = v28[0];
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v27 = sub_1C0788DAC(v20, *((unint64_t *)&v20 + 1), &v30);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      sub_1C094BB94((uint64_t)v28);
      *(_WORD *)(v16 + 12) = 2112;
      v21 = v9;
      v22 = _swift_stdlib_bridgeErrorToNSError();
      v27 = v22;
      sub_1C10705AC();
      *v18 = v22;

      _os_log_impl(&dword_1C0771000, v14, v15, "Error when reading from table %s: %@", (uint8_t *)v16, 0x16u);
      sub_1C07ACF80(&qword_1ED7614A0);
      swift_arrayDestroy();
      v23 = v18;
      v10 = (uint64_t)v26;
      MEMORY[0x1C3BA8270](v23, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v19, -1, -1);
      MEMORY[0x1C3BA8270](v16, -1, -1);
    }
    else
    {
      sub_1C094BB94((uint64_t)v28);

    }
    sub_1C0A22EA8();
    swift_allocError();
    *v24 = v9;
    swift_willThrow();
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_1C08EF2D4((uint64_t)v28);
  }
  return v10;
}

void *sub_1C0CFF960(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  _QWORD *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  _OWORD v30[2];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v5 = sub_1C106C040();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106C3F4();
  *(_QWORD *)&v30[0] = 0;
  *((_QWORD *)&v30[0] + 1) = 0xE000000000000000;
  sub_1C1070774();
  swift_bridgeObjectRelease();
  strcpy((char *)v30, "SELECT * FROM ");
  HIBYTE(v30[0]) = -18;
  v9 = *a2;
  v10 = a2[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v28 = v9;
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  v32 = a3;
  sub_1C1070C0C();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  v31 = 0;
  memset(v30, 0, sizeof(v30));
  sub_1C106C034();
  v11 = v29;
  v12 = sub_1C106C3C4();
  v13 = v12;
  if (v11)
  {
    v29 = (void *)v12;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_1C08EF2D4((uint64_t)v30);
    if (qword_1ED762AF0 != -1)
      swift_once();
    v14 = sub_1C106F544();
    sub_1C079E000(v14, (uint64_t)qword_1ED78D9E0);
    v33 = a2[4];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_retain();
    sub_1C08FD4A0((uint64_t)&v33);
    v15 = v11;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_retain();
    sub_1C08FD4A0((uint64_t)&v33);
    v16 = v11;
    v17 = sub_1C106F538();
    v18 = sub_1C1070390();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v20 = (_QWORD *)swift_slowAlloc();
      v27 = swift_slowAlloc();
      *(_QWORD *)&v30[0] = v27;
      *(_DWORD *)v19 = 136315394;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v32 = sub_1C0788DAC(v28, v10, (uint64_t *)v30);
      sub_1C10705AC();
      swift_release();
      swift_bridgeObjectRelease_n();
      sub_1C08EE9A0((uint64_t)&v33);
      swift_release();
      swift_bridgeObjectRelease();
      sub_1C08EE9A0((uint64_t)&v33);
      *(_WORD *)(v19 + 12) = 2112;
      v21 = v11;
      v22 = _swift_stdlib_bridgeErrorToNSError();
      v32 = v22;
      sub_1C10705AC();
      *v20 = v22;

      _os_log_impl(&dword_1C0771000, v17, v18, "Error when reading from table %s: %@", (uint8_t *)v19, 0x16u);
      sub_1C07ACF80(&qword_1ED7614A0);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v20, -1, -1);
      v23 = v27;
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v23, -1, -1);
      MEMORY[0x1C3BA8270](v19, -1, -1);
    }
    else
    {
      swift_release();
      swift_bridgeObjectRelease();
      sub_1C08EE9A0((uint64_t)&v33);
      swift_release();
      swift_bridgeObjectRelease();
      sub_1C08EE9A0((uint64_t)&v33);

    }
    sub_1C0A22EA8();
    swift_allocError();
    *v24 = v11;
    swift_willThrow();
    return v29;
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_1C08EF2D4((uint64_t)v30);
  }
  return (void *)v13;
}

void *sub_1C0CFFDE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  _QWORD *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  _OWORD v30[2];
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;

  v5 = sub_1C106C040();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106C3F4();
  *(_QWORD *)&v30[0] = 0;
  *((_QWORD *)&v30[0] + 1) = 0xE000000000000000;
  sub_1C1070774();
  swift_bridgeObjectRelease();
  strcpy((char *)v30, "SELECT * FROM ");
  HIBYTE(v30[0]) = -18;
  v9 = *(_QWORD *)a2;
  v10 = *(_QWORD *)(a2 + 8);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v28 = v9;
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  v32 = a3;
  sub_1C1070C0C();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  v31 = 0;
  memset(v30, 0, sizeof(v30));
  sub_1C106C034();
  v11 = v29;
  v12 = sub_1C106C3C4();
  v13 = v12;
  if (v11)
  {
    v29 = (void *)v12;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_1C08EF2D4((uint64_t)v30);
    if (qword_1ED762AF0 != -1)
      swift_once();
    v14 = sub_1C106F544();
    sub_1C079E000(v14, (uint64_t)qword_1ED78D9E0);
    v34 = *(_QWORD *)(a2 + 24);
    v33 = *(_OWORD *)(a2 + 32);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_retain();
    sub_1C08FD4A0((uint64_t)&v34);
    sub_1C07B35DC((uint64_t)&v33);
    v15 = v11;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_retain();
    sub_1C08FD4A0((uint64_t)&v34);
    sub_1C07B35DC((uint64_t)&v33);
    v16 = v11;
    v17 = sub_1C106F538();
    v18 = sub_1C1070390();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v20 = (_QWORD *)swift_slowAlloc();
      v27 = swift_slowAlloc();
      *(_QWORD *)&v30[0] = v27;
      *(_DWORD *)v19 = 136315394;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v32 = sub_1C0788DAC(v28, v10, (uint64_t *)v30);
      sub_1C10705AC();
      swift_release();
      swift_bridgeObjectRelease_n();
      sub_1C08EE9A0((uint64_t)&v34);
      sub_1C07B2F5C((uint64_t)&v33);
      swift_release();
      swift_bridgeObjectRelease();
      sub_1C08EE9A0((uint64_t)&v34);
      sub_1C07B2F5C((uint64_t)&v33);
      *(_WORD *)(v19 + 12) = 2112;
      v21 = v11;
      v22 = _swift_stdlib_bridgeErrorToNSError();
      v32 = v22;
      sub_1C10705AC();
      *v20 = v22;

      _os_log_impl(&dword_1C0771000, v17, v18, "Error when reading from table %s: %@", (uint8_t *)v19, 0x16u);
      sub_1C07ACF80(&qword_1ED7614A0);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v20, -1, -1);
      v23 = v27;
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v23, -1, -1);
      MEMORY[0x1C3BA8270](v19, -1, -1);
    }
    else
    {
      swift_release();
      swift_bridgeObjectRelease();
      sub_1C08EE9A0((uint64_t)&v34);
      sub_1C07B2F5C((uint64_t)&v33);
      swift_release();
      swift_bridgeObjectRelease();
      sub_1C08EE9A0((uint64_t)&v34);
      sub_1C07B2F5C((uint64_t)&v33);

    }
    sub_1C0A22EA8();
    swift_allocError();
    *v24 = v11;
    swift_willThrow();
    return v29;
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_1C08EF2D4((uint64_t)v30);
  }
  return (void *)v13;
}

uint64_t sub_1C0D00298(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD v29[2];
  uint64_t v30;
  uint64_t v31;

  v5 = sub_1C106C040();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106C3F4();
  *(_QWORD *)&v29[0] = 0;
  *((_QWORD *)&v29[0] + 1) = 0xE000000000000000;
  sub_1C1070774();
  swift_bridgeObjectRelease();
  strcpy((char *)v29, "SELECT * FROM ");
  HIBYTE(v29[0]) = -18;
  v9 = *a2;
  v10 = a2[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v27 = v9;
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  v31 = a3;
  sub_1C1070C0C();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  v30 = 0;
  memset(v29, 0, sizeof(v29));
  sub_1C106C034();
  v11 = (void *)v28;
  v12 = sub_1C106C3C4();
  if (v11)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_1C08EF2D4((uint64_t)v29);
    if (qword_1ED762AF0 != -1)
      swift_once();
    v13 = sub_1C106F544();
    sub_1C079E000(v13, (uint64_t)qword_1ED78D9E0);
    sub_1C0D01A5C((uint64_t)a2);
    v14 = v11;
    sub_1C0D01A5C((uint64_t)a2);
    v15 = v11;
    v16 = sub_1C106F538();
    v17 = sub_1C1070390();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v26 = (_QWORD *)swift_slowAlloc();
      v28 = swift_slowAlloc();
      *(_QWORD *)&v29[0] = v28;
      *(_DWORD *)v18 = 136315394;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v31 = sub_1C0788DAC(v27, v10, (uint64_t *)v29);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      sub_1C0D01ACC((uint64_t)a2);
      sub_1C0D01ACC((uint64_t)a2);
      *(_WORD *)(v18 + 12) = 2112;
      v19 = v11;
      v20 = _swift_stdlib_bridgeErrorToNSError();
      v31 = v20;
      sub_1C10705AC();
      v21 = v26;
      *v26 = v20;

      _os_log_impl(&dword_1C0771000, v16, v17, "Error when reading from table %s: %@", (uint8_t *)v18, 0x16u);
      sub_1C07ACF80(&qword_1ED7614A0);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v21, -1, -1);
      v22 = v28;
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v22, -1, -1);
      MEMORY[0x1C3BA8270](v18, -1, -1);
    }
    else
    {
      sub_1C0D01ACC((uint64_t)a2);
      sub_1C0D01ACC((uint64_t)a2);

    }
    sub_1C0A22EA8();
    swift_allocError();
    *v23 = v11;
    swift_willThrow();
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_1C08EF2D4((uint64_t)v29);
  }
  return v12;
}

uint64_t sub_1C0D006B0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD v29[2];
  uint64_t v30;
  uint64_t v31;

  v5 = sub_1C106C040();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106C3F4();
  *(_QWORD *)&v29[0] = 0;
  *((_QWORD *)&v29[0] + 1) = 0xE000000000000000;
  sub_1C1070774();
  swift_bridgeObjectRelease();
  strcpy((char *)v29, "SELECT * FROM ");
  HIBYTE(v29[0]) = -18;
  v9 = *a2;
  v10 = a2[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v27 = v9;
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  v31 = a3;
  sub_1C1070C0C();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  v30 = 0;
  memset(v29, 0, sizeof(v29));
  sub_1C106C034();
  v11 = (void *)v28;
  v12 = sub_1C106C3C4();
  if (v11)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_1C08EF2D4((uint64_t)v29);
    if (qword_1ED762AF0 != -1)
      swift_once();
    v13 = sub_1C106F544();
    sub_1C079E000(v13, (uint64_t)qword_1ED78D9E0);
    sub_1C0C49794((uint64_t)a2);
    v14 = v11;
    sub_1C0C49794((uint64_t)a2);
    v15 = v11;
    v16 = sub_1C106F538();
    v17 = sub_1C1070390();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v26 = (_QWORD *)swift_slowAlloc();
      v28 = swift_slowAlloc();
      *(_QWORD *)&v29[0] = v28;
      *(_DWORD *)v18 = 136315394;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v31 = sub_1C0788DAC(v27, v10, (uint64_t *)v29);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      sub_1C0D018C4((uint64_t)a2);
      sub_1C0D018C4((uint64_t)a2);
      *(_WORD *)(v18 + 12) = 2112;
      v19 = v11;
      v20 = _swift_stdlib_bridgeErrorToNSError();
      v31 = v20;
      sub_1C10705AC();
      v21 = v26;
      *v26 = v20;

      _os_log_impl(&dword_1C0771000, v16, v17, "Error when reading from table %s: %@", (uint8_t *)v18, 0x16u);
      sub_1C07ACF80(&qword_1ED7614A0);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v21, -1, -1);
      v22 = v28;
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v22, -1, -1);
      MEMORY[0x1C3BA8270](v18, -1, -1);
    }
    else
    {
      sub_1C0D018C4((uint64_t)a2);
      sub_1C0D018C4((uint64_t)a2);

    }
    sub_1C0A22EA8();
    swift_allocError();
    *v23 = v11;
    swift_willThrow();
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_1C08EF2D4((uint64_t)v29);
  }
  return v12;
}

void sub_1C0D00AC8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  void *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _OWORD v22[2];
  uint64_t v23;
  uint64_t v24;

  v9 = sub_1C106C040();
  MEMORY[0x1E0C80A78](v9);
  sub_1C106C3F4();
  sub_1C1070774();
  swift_bridgeObjectRelease();
  sub_1C07A74E4();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  v24 = a6;
  sub_1C1070C0C();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  v23 = 0;
  memset(v22, 0, sizeof(v22));
  sub_1C106C034();
  sub_1C106C3C4();
  if (v21)
  {
    swift_bridgeObjectRelease();
    sub_1C0787B64();
    sub_1C0794E84();
    if (qword_1ED762AF0 != -1)
      swift_once();
    v10 = sub_1C106F544();
    sub_1C079E000(v10, (uint64_t)qword_1ED78D9E0);
    sub_1C077AEBC();
    swift_retain();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C077B72C();
    sub_1C077AEBC();
    swift_retain();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C077B72C();
    v11 = (void *)sub_1C106F538();
    v12 = sub_1C1070390();
    if (sub_1C077C10C(v12))
    {
      v13 = sub_1C0775854();
      v20 = (_QWORD *)sub_1C0775854();
      *(_QWORD *)&v22[0] = sub_1C0775854();
      *(_DWORD *)v13 = 136315394;
      sub_1C077AEBC();
      v14 = sub_1C0788DAC(a2, a3, (uint64_t *)v22);
      sub_1C07A3EC4(v14);
      sub_1C07758A4();
      sub_1C07878F0();
      sub_1C079635C();
      *(_WORD *)(v13 + 12) = 2112;
      sub_1C077B72C();
      v15 = _swift_stdlib_bridgeErrorToNSError();
      sub_1C079AEF0(v15);
      *v20 = v13 + 4;
      sub_1C07888BC();
      sub_1C07888BC();
      sub_1C07A0278(&dword_1C0771000, v16, v17, "Error when reading from table %s: %@");
      sub_1C07ACF80(&qword_1ED7614A0);
      sub_1C078CBD0();
      sub_1C0776778();
    }
    sub_1C07758A4();
    sub_1C07878F0();
    sub_1C07758A4();
    sub_1C07888BC();
    sub_1C07888BC();

    sub_1C0A22EA8();
    v18 = sub_1C0775810();
    sub_1C07A5734(v18, v19);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1C0787B64();
    sub_1C0794E84();
  }
  sub_1C07757D0();
}

uint64_t sub_1C0D00DF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[6];
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[2];

  v6 = a4;
  v8 = a1;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    v19 = a4;
    v20 = a1;
    v21[0] = MEMORY[0x1E0DEE9D8];
    sub_1C09D30E0();
    v10 = v21[0];
    v11 = *(_QWORD *)(v21[0] + 16);
    v12 = 16 * v11;
    do
    {
      v21[0] = v10;
      v13 = v11 + 1;
      if (v11 >= *(_QWORD *)(v10 + 24) >> 1)
      {
        sub_1C09D30E0();
        v10 = v21[0];
      }
      *(_QWORD *)(v10 + 16) = v13;
      v14 = v10 + v12;
      *(_QWORD *)(v14 + 32) = 63;
      *(_QWORD *)(v14 + 40) = 0xE100000000000000;
      v12 += 16;
      v11 = v13;
      --v9;
    }
    while (v9);
    v6 = v19;
    v8 = v20;
  }
  sub_1C07ACF80(&qword_1ED762B70);
  sub_1C0D0143C((unint64_t *)&qword_1ED762430, MEMORY[0x1E0DEAF20]);
  sub_1C106FA54();
  swift_bridgeObjectRelease();
  sub_1C1070774();
  swift_bridgeObjectRelease();
  strcpy((char *)v21, "SELECT * FROM ");
  HIBYTE(v21[1]) = -18;
  (*(void (**)(uint64_t, uint64_t))(a5 + 8))(a2, a5);
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a2, v6);
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 16))(a2, a5);
  swift_retain();
  v15 = swift_release();
  MEMORY[0x1E0C80A78](v15);
  v18[2] = v21[0];
  v18[3] = v21[1];
  v18[4] = v8;
  v16 = sub_1C0BB9668((uint64_t)sub_1C0D01420, (uint64_t)v18);
  swift_bridgeObjectRelease();
  swift_release();
  return v16;
}

uint64_t sub_1C0D01088@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  _OWORD v38[2];
  uint64_t v39;
  uint64_t v40;

  v6 = v5;
  v34 = a2;
  v35 = a3;
  v33 = a1;
  v9 = sub_1C106E590();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1C106C040();
  v32 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v31 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a4 + 16);
  v16 = MEMORY[0x1E0DEE9D8];
  if (v15)
  {
    v28 = v5;
    v29 = v13;
    v30 = a5;
    *(_QWORD *)&v38[0] = MEMORY[0x1E0DEE9D8];
    sub_1C09D30E0();
    v17 = a4 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v18 = *(_QWORD *)(v10 + 72);
    v36 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v37 = v18;
    v40 = v10;
    do
    {
      v36(v12, v17, v9);
      v19 = sub_1C106E548();
      v21 = v20;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      v16 = *(_QWORD *)&v38[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C09D30E0();
        v16 = *(_QWORD *)&v38[0];
      }
      v22 = *(_QWORD *)(v16 + 16);
      if (v22 >= *(_QWORD *)(v16 + 24) >> 1)
      {
        sub_1C09D30E0();
        v16 = *(_QWORD *)&v38[0];
      }
      *(_QWORD *)(v16 + 16) = v22 + 1;
      v23 = v16 + 16 * v22;
      *(_QWORD *)(v23 + 32) = v19;
      *(_QWORD *)(v23 + 40) = v21;
      v17 += v37;
      --v15;
      v10 = v40;
    }
    while (v15);
    v13 = v29;
    a5 = v30;
    v6 = v28;
  }
  sub_1C106C3F4();
  *(_QWORD *)&v38[0] = v16;
  sub_1C07ACF80(&qword_1ED762B70);
  sub_1C0D0143C((unint64_t *)&qword_1ED762440, MEMORY[0x1E0DEAF38]);
  v24 = v31;
  sub_1C106C064();
  v39 = 0;
  memset(v38, 0, sizeof(v38));
  v25 = sub_1C106C3C4();
  if (v6)
  {
    sub_1C08EF2D4((uint64_t)v38);
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v24, v13);
  }
  else
  {
    v27 = v25;
    sub_1C08EF2D4((uint64_t)v38);
    result = (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v24, v13);
    *a5 = v27;
  }
  return result;
}

uint64_t sub_1C0D0132C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  const void *v8;
  uint64_t v10;

  sub_1C0793298(a1, v8, a3, a4, a5, a6, a7, a8, v10);
  return sub_1C0CFC628();
}

void sub_1C0D01364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  const void *v8;
  uint64_t v9;

  sub_1C0793298(a1, v8, a3, a4, a5, a6, a7, a8, v9);
  sub_1C0CFCB74();
  sub_1C078B0D8();
}

void sub_1C0D013A0()
{
  sub_1C07980A8();
  sub_1C0CFC8CC();
}

void sub_1C0D013C0()
{
  sub_1C0791F84();
  sub_1C0CFCC84();
}

void sub_1C0D013E0()
{
  sub_1C07BCA10();
  sub_1C0CFC5B0();
  sub_1C0782714();
}

void sub_1C0D01400()
{
  sub_1C07BCA10();
  sub_1C0CFCAFC();
  sub_1C0782714();
}

uint64_t sub_1C0D01420@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_1C0D01088(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_1C0D0143C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1C07D4BEC(&qword_1ED762B70);
    result = MEMORY[0x1C3BA8174](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0D01480@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  __int128 v5;
  uint64_t result;
  _OWORD v7[3];

  v5 = a2[1];
  v7[0] = *a2;
  v7[1] = v5;
  v7[2] = a2[2];
  result = sub_1C0CFCE5C(a1, (uint64_t)v7);
  if (!v3)
    *a3 = result;
  return result;
}

uint64_t sub_1C0D014C4@<X0>(uint64_t a1@<X0>, const void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v7[12];

  memcpy(v7, a2, sizeof(v7));
  result = sub_1C0CFD2C8(a1, v7);
  if (!v3)
    *a3 = result;
  return result;
}

uint64_t sub_1C0D0151C@<X0>(uint64_t a1@<X0>, const void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;
  _BYTE __dst[72];

  memcpy(__dst, a2, sizeof(__dst));
  result = sub_1C0CFD694(a1, (uint64_t)__dst);
  if (!v3)
    *a3 = result;
  return result;
}

uint64_t sub_1C0D01574@<X0>(uint64_t a1@<X0>, const void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t __dst[9];

  memcpy(__dst, a2, sizeof(__dst));
  result = sub_1C0CFDA60(a1, __dst);
  if (!v3)
    *a3 = result;
  return result;
}

void sub_1C0D015CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  sub_1C0795C74();
  sub_1C0CFEA18(v2, v3, v4);
  if (!v1)
    *v0 = v5;
}

uint64_t sub_1C0D015F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = sub_1C0CFDE2C(a1, a2);
  if (!v3)
    *a3 = result;
  return result;
}

uint64_t sub_1C0D0161C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  __int128 v5;
  uint64_t result;
  _OWORD v7[2];
  uint64_t v8;

  v5 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v5;
  v8 = *(_QWORD *)(a2 + 32);
  result = sub_1C0CFE1E0(a1, (uint64_t *)v7);
  if (!v3)
    *a3 = result;
  return result;
}

uint64_t sub_1C0D01660@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = sub_1C0CFE610(a1, a2);
  if (!v3)
    *a3 = result;
  return result;
}

uint64_t sub_1C0D01688@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t result;

  result = sub_1C0CFECEC(a1, a2, a3);
  if (!v4)
    *a4 = result;
  return result;
}

uint64_t sub_1C0D016B0@<X0>(uint64_t a1@<X0>, const void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t result;
  _BYTE __dst[72];

  memcpy(__dst, a2, sizeof(__dst));
  result = sub_1C0CFF0EC(a1, (uint64_t)__dst, a3);
  if (!v4)
    *a4 = result;
  return result;
}

uint64_t sub_1C0D01710@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t result;

  result = sub_1C0CFF504(a1, a2, a3);
  if (!v4)
    *a4 = result;
  return result;
}

void *sub_1C0D01738@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  __int128 v6;
  void *result;
  _OWORD v8[2];
  uint64_t v9;

  v6 = *(_OWORD *)(a2 + 16);
  v8[0] = *(_OWORD *)a2;
  v8[1] = v6;
  v9 = *(_QWORD *)(a2 + 32);
  result = sub_1C0CFF960(a1, (uint64_t *)v8, a3);
  if (!v4)
    *a4 = result;
  return result;
}

void sub_1C0D0177C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1C0795C74();
  sub_1C0D00AC8(v2, v3, v4, v5, v6, v7);
  if (!v1)
    *v0 = v8;
}

void *sub_1C0D017A8@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  __int128 v6;
  void *result;
  _OWORD v8[3];

  v6 = a2[1];
  v8[0] = *a2;
  v8[1] = v6;
  v8[2] = a2[2];
  result = sub_1C0CFFDE0(a1, (uint64_t)v8, a3);
  if (!v4)
    *a4 = result;
  return result;
}

uint64_t sub_1C0D017EC@<X0>(uint64_t a1@<X0>, const void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v9[12];

  memcpy(v9, a2, sizeof(v9));
  result = sub_1C0D00298(a1, v9, a3);
  if (!v4)
    *a4 = result;
  return result;
}

uint64_t sub_1C0D0184C@<X0>(uint64_t a1@<X0>, const void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t __dst[9];

  memcpy(__dst, a2, sizeof(__dst));
  result = sub_1C0D006B0(a1, __dst, a3);
  if (!v4)
    *a4 = result;
  return result;
}

uint64_t sub_1C0D018AC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1C0D0184C(a1, *(const void **)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1C0D018C4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0D01930@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1C0D01574(a1, *(const void **)(v2 + 16), a2);
}

void sub_1C0D01948()
{
  sub_1C0D0177C();
}

void sub_1C0D01960()
{
  sub_1C0D015CC();
}

void *sub_1C0D01978@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1C0D01738(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1C0D01990@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1C0D0161C(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1C0D019A8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1C0D016B0(a1, *(const void **)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1C0D019C0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

uint64_t sub_1C0D01A2C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1C0D0151C(a1, *(const void **)(v2 + 16), a2);
}

uint64_t sub_1C0D01A44@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1C0D017EC(a1, *(const void **)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1C0D01A5C(uint64_t a1)
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_retain();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

uint64_t sub_1C0D01ACC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0D01B38@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1C0D014C4(a1, *(const void **)(v2 + 16), a2);
}

uint64_t sub_1C0D01B50@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1C0D01710(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1C0D01B68@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1C0D01660(a1, *(_QWORD *)(v2 + 16), a2);
}

_QWORD *initializeBufferWithCopyOfBuffer for SearchableDatabaseError(_QWORD *a1, id *a2)
{
  id v3;
  id v4;

  v3 = *a2;
  v4 = *a2;
  *a1 = v3;
  return a1;
}

void destroy for SearchableDatabaseError(id *a1)
{

}

void **assignWithCopy for SearchableDatabaseError(void **a1, id *a2)
{
  id v3;
  id v4;
  void *v5;

  v3 = *a2;
  v4 = *a2;
  v5 = *a1;
  *a1 = v3;

  return a1;
}

void **assignWithTake for SearchableDatabaseError(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for SearchableDatabaseError()
{
  return &type metadata for SearchableDatabaseError;
}

void *sub_1C0D01C30@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1C0D017A8(a1, *(_OWORD **)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1C0D01C48@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1C0D01480(a1, *(_OWORD **)(v2 + 16), a2);
}

uint64_t sub_1C0D01C60@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1C0D01688(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1C0D01C78(uint64_t a1, uint64_t a2)
{
  _s26ContextualEventsViewClientVwcp(a2, a1);
  return a2;
}

uint64_t sub_1C0D01CB4(uint64_t a1)
{
  _s26ContextualEventsViewClientVwxx(a1);
  return a1;
}

uint64_t sub_1C0D01CE8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1C0D015F4(a1, *(_QWORD *)(v2 + 16), a2);
}

void sub_1C0D01D00()
{
  sub_1C0D01948();
}

void sub_1C0D01D18()
{
  sub_1C0D01960();
}

uint64_t sub_1C0D01D2C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C0D01D3C(__int16 a1)
{
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t inited;
  void *v4;

  v1 = a1;
  v2 = HIBYTE(a1);
  sub_1C07ACF80(&qword_1ED755050);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1078FC0;
  *(_QWORD *)(inited + 32) = 0xD000000000000025;
  *(_QWORD *)(inited + 40) = 0x80000001C10F3440;
  v4 = (void *)objc_opt_self();
  *(_QWORD *)(inited + 48) = objc_msgSend(v4, sel_featureValueWithInt64_, v1);
  *(_QWORD *)(inited + 56) = 0xD000000000000019;
  *(_QWORD *)(inited + 64) = 0x80000001C10F3470;
  *(_QWORD *)(inited + 72) = objc_msgSend(v4, sel_featureValueWithInt64_, v2);
  sub_1C07D97D4();
  return sub_1C106F97C();
}

uint64_t sub_1C0D01E3C(__int16 a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v18;
  uint64_t v19;

  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1C0D01D3C(a1);
  if (a3)
  {
    v9 = sub_1C0846380();
    if (v9)
    {
      v10 = v9;
      v11 = sub_1C077AE98();
      sub_1C07B2D8C((uint64_t)v8, 1, 1, v11);
      sub_1C0ACA89C(a2, a3, (uint64_t)v8);
      v13 = v12;
      sub_1C0784B94((uint64_t)v8, (uint64_t *)&unk_1ED762690);
      sub_1C07F4DDC(v10);
      if (v13)
      {
        sub_1C07D97D4();
        sub_1C07F5FD8();
        if (v14)
        {
          v15 = v19;
          swift_isUniquelyReferenced_nonNull_native();
          v18 = v15;
          sub_1C08A07B0();
          v19 = v18;
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1C07F2B9C();

        }
      }
    }
  }
  return v19;
}

uint64_t sub_1C0D01FCC@<X0>(uint64_t a1@<X0>, char a2@<W1>, unsigned int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char v8;
  unsigned int v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v8 = a3;
  v12 = a3 >> 8;
  v13 = sub_1C077AE98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a6, a1, v13);
  result = type metadata accessor for SemanticLocationEvent();
  *(_BYTE *)(a6 + *(int *)(result + 20)) = a2;
  v15 = a6 + *(int *)(result + 24);
  *(_BYTE *)v15 = v8;
  *(_BYTE *)(v15 + 1) = v12;
  *(_QWORD *)(v15 + 8) = a4;
  *(_QWORD *)(v15 + 16) = a5;
  return result;
}

uint64_t sub_1C0D02058()
{
  __int16 *v0;

  return sub_1C0D01D3C(*v0);
}

uint64_t sub_1C0D02060()
{
  uint64_t v0;

  return sub_1C0D01E3C(*(_WORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16));
}

uint64_t sub_1C0D0206C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v2 + *(int *)(a1 + 24);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  *(_WORD *)a2 = *(_WORD *)v3;
  *(_QWORD *)(a2 + 8) = v5;
  *(_QWORD *)(a2 + 16) = v4;
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

uint64_t sub_1C0D02088@<X0>(uint64_t a1@<X0>, char a2@<W1>, unsigned __int16 *a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1C0D01FCC(a1, a2, *a3, *((_QWORD *)a3 + 1), *((_QWORD *)a3 + 2), a4);
}

uint64_t sub_1C0D02094@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  unsigned int v20;
  uint64_t v21;
  unsigned int v22;
  int v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  int v37;
  int v38;
  uint64_t v39;

  sub_1C07ACF80(&qword_1ED762CE0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v37 - v11;
  v13 = type metadata accessor for SemanticLocationEvent();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v14);
  sub_1C07785B8();
  objc_opt_self();
  v15 = swift_dynamicCastObjCClass();
  if (v15)
  {
    v16 = (void *)v15;
    v39 = a3;
    v17 = sub_1C077AE98();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v3, a2, v17);
    v18 = a1;
    v19 = sub_1C07A3EE4((uint64_t)v18, sel_starting);
    *(_BYTE *)(v3 + *(int *)(v13 + 20)) = (_BYTE)v19;
    v20 = sub_1C07A3EE4((uint64_t)v19, sel_userSpecificPlaceType);
    sub_1C0D02D48(v20);
    v38 = v21;
    v22 = sub_1C07A3EE4(v21, sel_placeType);
    sub_1C0D02DFC(v22);
    v37 = v23;
    v24 = objc_msgSend(v16, sel_loiIdentifier);
    if (v24)
    {
      v25 = v24;
      sub_1C106AE10();

      v26 = sub_1C106AE28();
      v27 = (uint64_t)v9;
      v28 = 0;
    }
    else
    {
      v26 = sub_1C106AE28();
      v27 = (uint64_t)v9;
      v28 = 1;
    }
    sub_1C07B2D8C(v27, v28, 1, v26);
    sub_1C087707C((uint64_t)v9, (uint64_t)v12);
    sub_1C106AE28();
    if (sub_1C07B2D80((uint64_t)v12, 1, v26) == 1)
    {

      sub_1C079A0CC();
      sub_1C0784B94((uint64_t)v12, &qword_1ED762CE0);
      v31 = 0;
      v32 = 0;
    }
    else
    {
      v31 = sub_1C106ADF8();
      v32 = v33;

      sub_1C079A0CC();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v12, v26);
    }
    v34 = v39;
    v35 = v37;
    v36 = v3 + *(int *)(v13 + 24);
    *(_BYTE *)v36 = v38;
    *(_BYTE *)(v36 + 1) = v35;
    *(_QWORD *)(v36 + 8) = v31;
    *(_QWORD *)(v36 + 16) = v32;
    sub_1C0D024E4(v3, v34);
    return sub_1C07B2D8C(v34, 0, 1, v13);
  }
  else
  {

    v29 = sub_1C077AE98();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(a2, v29);
    return sub_1C07B2D8C(a3, 1, 1, v13);
  }
}

void sub_1C0D0233C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  uint64_t v13;

  sub_1C07ACF80(&qword_1ED75D0B8);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v4);
  sub_1C07785B8();
  sub_1C07ACF80(&qword_1ED74C9D0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v13 - v9;
  v11 = objc_msgSend((id)BiomeLibrary(), sel_Location);
  swift_unknownObjectRelease();
  v12 = objc_msgSend(v11, sel_Semantic);
  swift_unknownObjectRelease();
  sub_1C08B5D28();

  if (!v1)
  {
    sub_1C078A924((uint64_t)v10, (uint64_t)v7, &qword_1ED74C9D0);
    sub_1C078A924(a1, v2, &qword_1ED75D0B8);
    sub_1C0B5BF2C();
    sub_1C0784B94((uint64_t)v10, &qword_1ED74C9D0);
  }
}

uint64_t type metadata accessor for SemanticLocationEvent()
{
  uint64_t result;

  result = qword_1ED74B308;
  if (!qword_1ED74B308)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C0D024E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SemanticLocationEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1C0D02528(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1C106ADE0();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *(_WORD *)v9 = *(_WORD *)v10;
    v11 = *((_QWORD *)v10 + 2);
    *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
    *((_QWORD *)v9 + 2) = v11;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  return a1;
}

uint64_t sub_1C0D025CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1C106ADE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_WORD *)v8 = *(_WORD *)v9;
  v10 = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_QWORD *)(v8 + 16) = v10;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

uint64_t sub_1C0D02644(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1C106ADE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  *(_BYTE *)(v8 + 1) = *(_BYTE *)(v9 + 1);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0D026DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1C106ADE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_WORD *)v8 = *(_WORD *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v10 = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 8) = v11;
  *(_QWORD *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0D02758()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0D02764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;
  int v9;

  v6 = sub_1C077AE98();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return sub_1C07B2D80(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 16);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  v9 = v8 - 1;
  if (v9 < 0)
    v9 = -1;
  return (v9 + 1);
}

uint64_t sub_1C0D027E8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0D027F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = sub_1C077AE98();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return sub_1C07B2D8C(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 16) = a2;
  return result;
}

uint64_t sub_1C0D02868()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C106ADE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1C0D028E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF647AB0;
  if (!qword_1EF647AB0)
  {
    v1 = sub_1C07D4BEC(&qword_1ED747B48);
    result = MEMORY[0x1C3BA8174](&unk_1C1091748, v1);
    atomic_store(result, (unint64_t *)&qword_1EF647AB0);
  }
  return result;
}

void sub_1C0D02930(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_WORD *)a1 = *(_WORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0778534();
}

uint64_t assignWithCopy for SemanticLocationContent(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SemanticLocationContent(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_WORD *)a1 = *(_WORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SemanticLocationContent()
{
  return &type metadata for SemanticLocationContent;
}

uint64_t sub_1C0D029F8()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1C0D02A08(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  v5 = sub_1C07ACF80(&qword_1ED747B48);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0D0233C(a1);
  if (!v2)
    sub_1C0D02AC0((uint64_t)v7, a2);
}

void sub_1C0D02AA0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0D02A08(a1, a2);
}

uint64_t sub_1C0D02AC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1ED747B48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C0D02B0C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED748088;
  if (!qword_1ED748088)
  {
    v1 = sub_1C07D4BEC(&qword_1ED748030);
    result = MEMORY[0x1C3BA8174](&unk_1C1091558, v1);
    atomic_store(result, (unint64_t *)&qword_1ED748088);
  }
  return result;
}

uint64_t sub_1C0D02B50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v4 = v3;
  v26 = a3;
  v6 = type metadata accessor for FeatureProviderSnapshot(0);
  v24 = *(_QWORD *)(v6 - 8);
  v25 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    v27 = MEMORY[0x1E0DEE9D8];
    sub_1C09D3218();
    v10 = v27;
    v11 = sub_1C106ADE0();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v22 = *(_QWORD *)(v12 + 72);
    v23 = v11;
    v21 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    do
    {
      v21(v8, v13, v23);
      sub_1C0D0362C(v13);
      v15 = v14;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v16 = v4;
      sub_1C0D0400C(v15);
      swift_bridgeObjectRelease();
      sub_1C089B840();
      v18 = v17;
      swift_release();
      *(_QWORD *)&v8[*(int *)(v25 + 20)] = v18;
      v27 = v10;
      v19 = *(_QWORD *)(v10 + 16);
      if (v19 >= *(_QWORD *)(v10 + 24) >> 1)
      {
        sub_1C09D3218();
        v10 = v27;
      }
      *(_QWORD *)(v10 + 16) = v19 + 1;
      sub_1C07E7EF8((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(_QWORD *)(v24 + 72) * v19);
      v13 += v22;
      --v9;
      v4 = v16;
    }
    while (v9);
    swift_release();
  }
  else
  {
    swift_release();
    v10 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  return v10;
}

void sub_1C0D02D48(unsigned int a1)
{
  uint64_t v1;
  void *v2;
  os_log_type_t v3;
  float *v4;
  uint64_t v5;
  uint64_t v6;

  if (a1 >= 5)
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v1 = sub_1C077585C();
    v2 = (void *)sub_1C077965C(v1, (uint64_t)qword_1ED762AF8);
    v3 = sub_1C107039C();
    if (sub_1C07758D8(v3))
    {
      v4 = (float *)sub_1C0775854();
      sub_1C07A7510(v4, 1.5047e-36);
      sub_1C079AF0C(&dword_1C0771000, v5, v6, "Unknown BMSemanticLocationUserSpecificPlaceType - %d");
      sub_1C077B264();
    }

  }
  sub_1C07892A4();
}

void sub_1C0D02DFC(unsigned int a1)
{
  uint64_t v1;
  void *v2;
  os_log_type_t v3;
  float *v4;
  uint64_t v5;
  uint64_t v6;

  if (a1 >= 4)
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v1 = sub_1C077585C();
    v2 = (void *)sub_1C077965C(v1, (uint64_t)qword_1ED762AF8);
    v3 = sub_1C107039C();
    if (sub_1C07758D8(v3))
    {
      v4 = (float *)sub_1C0775854();
      sub_1C07A7510(v4, 1.5047e-36);
      sub_1C079AF0C(&dword_1C0771000, v5, v6, "Unknown BMSemanticLocationPlaceType - %d");
      sub_1C077B264();
    }

  }
  sub_1C07892A4();
}

void sub_1C0D02EB0(char a1)
{
  uint64_t v1;
  id v3;
  id v4;

  v3 = objc_msgSend((id)BiomeLibrary(), sel_Location);
  swift_unknownObjectRelease();
  v4 = objc_msgSend(v3, sel_Semantic);
  swift_unknownObjectRelease();
  *(_QWORD *)(v1 + 16) = v4;
  *(_BYTE *)(v1 + 24) = a1;
  sub_1C077671C();
}

void sub_1C0D02F84()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  char v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v10 = MEMORY[0x1E0DEE9D8];
  sub_1C09D30E0();
  v0 = 0;
  v1 = 0;
  v2 = v10;
  v3 = *(_QWORD *)(v10 + 16);
  v4 = 16 * v3;
  do
  {
    v5 = v0;
    if (*((_BYTE *)&unk_1E79FC5E8 + v1 + 32))
      v6 = 0xD000000000000018;
    else
      v6 = 0x79745F6563616C70;
    if (*((_BYTE *)&unk_1E79FC5E8 + v1 + 32))
      v7 = 0x80000001C10E9910;
    else
      v7 = 0xEA00000000006570;
    v11 = v2;
    v8 = v3 + 1;
    if (v3 >= *(_QWORD *)(v2 + 24) >> 1)
    {
      sub_1C09D30E0();
      v2 = v11;
    }
    *(_QWORD *)(v2 + 16) = v8;
    v9 = v2 + v4;
    *(_QWORD *)(v9 + 32) = v6;
    *(_QWORD *)(v9 + 40) = v7;
    v4 += 16;
    v0 = 1;
    v3 = v8;
    v1 = 1u;
  }
  while ((v5 & 1) == 0);
  sub_1C0898D28(v2);
}

uint64_t sub_1C0D030A8(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v5;

  v3 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C0D030FC(v1, a1, &v5);
  objc_autoreleasePoolPop(v3);
  return v5;
}

uint64_t sub_1C0D030FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  uint64_t aBlock;
  uint64_t v28;
  uint64_t (*v29)();
  void *v30;
  uint64_t (*v31)(_QWORD);
  uint64_t v32;

  v6 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&aBlock - v10;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = 0;
  v13 = *(void **)(a1 + 16);
  v14 = sub_1C106ADE0();
  sub_1C07B2D8C((uint64_t)v11, 1, 1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v8, a2, v14);
  sub_1C07B2D8C((uint64_t)v8, 0, 1, v14);
  v15 = objc_allocWithZone(MEMORY[0x1E0D026F0]);
  v16 = sub_1C07DC9F8((uint64_t)v11, (uint64_t)v8, 1, 1, 0);
  v17 = objc_msgSend(v13, sel_publisherWithOptions_, v16);

  v31 = (uint64_t (*)(_QWORD))sub_1C0D033C0;
  v32 = 0;
  v18 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v28 = 1107296256;
  v29 = (uint64_t (*)())sub_1C0808508;
  v30 = &unk_1E7A2D008;
  v19 = _Block_copy(&aBlock);
  v20 = objc_msgSend(v17, sel_filterWithIsIncluded_, v19);
  _Block_release(v19);
  v31 = nullsub_1;
  v32 = 0;
  aBlock = v18;
  v28 = 1107296256;
  v29 = sub_1C07BF90C;
  v30 = &unk_1E7A2D030;
  v21 = _Block_copy(&aBlock);
  v31 = (uint64_t (*)(_QWORD))sub_1C0D04004;
  v32 = v12;
  aBlock = v18;
  v28 = 1107296256;
  v29 = (uint64_t (*)())sub_1C0779530;
  v30 = &unk_1E7A2D058;
  v22 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v23 = objc_msgSend(v20, sel_sinkWithCompletion_receiveInput_, v21, v22);

  _Block_release(v22);
  _Block_release(v21);

  swift_beginAccess();
  v24 = *(void **)(v12 + 16);
  *a3 = v24;
  v25 = v24;
  return swift_release();
}

BOOL sub_1C0D033C0(void *a1)
{
  id v1;
  void *v2;
  unsigned __int8 v3;
  _BOOL8 result;

  v1 = objc_msgSend(a1, sel_eventBody);
  result = 0;
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, sel_starting);

    if ((v3 & 1) != 0)
      return 1;
  }
  return result;
}

void sub_1C0D03418(void *a1, uint64_t a2)
{
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  NSObject *oslog;

  v3 = objc_msgSend(a1, sel_eventBody);
  if (v3)
  {
    v4 = v3;
    swift_beginAccess();
    v5 = *(void **)(a2 + 16);
    *(_QWORD *)(a2 + 16) = v4;

  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v6 = sub_1C106F544();
    sub_1C079E000(v6, (uint64_t)qword_1ED762AF8);
    oslog = sub_1C106F538();
    v7 = sub_1C10703A8();
    if (os_log_type_enabled(oslog, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_1C0771000, oslog, v7, "Exception: Unable to parse eventBody from latest event in semantic location stream", v8, 2u);
      MEMORY[0x1C3BA8270](v8, -1, -1);
    }

  }
}

void sub_1C0D03534(void *a1)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  __n128 *inited;
  void *v7;

  sub_1C0D02DFC(objc_msgSend(a1, sel_placeType));
  v3 = v2;
  sub_1C0D02D48(objc_msgSend(a1, sel_userSpecificPlaceType));
  v5 = v4;
  sub_1C07ACF80(&qword_1ED755050);
  inited = (__n128 *)swift_initStackObject();
  sub_1C079A0DC(inited, (__n128)xmmword_1C1078FC0);
  v7 = (void *)objc_opt_self();
  inited[3].n128_u64[0] = (unint64_t)objc_msgSend(v7, sel_featureValueWithInt64_, v3);
  inited[3].n128_u64[1] = 0xD000000000000018;
  inited[4].n128_u64[0] = 0x80000001C10E9910;
  sub_1C078B36C((uint64_t)objc_msgSend(v7, sel_featureValueWithInt64_, v5));
  sub_1C106F97C();
  sub_1C07877C0();
}

void sub_1C0D0362C(uint64_t a1)
{
  __n128 *inited;
  void *v3;
  uint64_t v4;
  NSObject *v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;

  sub_1C07ACF80(&qword_1ED755050);
  inited = (__n128 *)swift_initStackObject();
  sub_1C079A0DC(inited, (__n128)xmmword_1C1078FC0);
  v3 = (void *)objc_opt_self();
  inited[3].n128_u64[0] = (unint64_t)objc_msgSend(v3, sel_featureValueWithInt64_, 0);
  inited[3].n128_u64[1] = 0xD000000000000018;
  inited[4].n128_u64[0] = 0x80000001C10E9910;
  sub_1C078B36C((uint64_t)objc_msgSend(v3, sel_featureValueWithInt64_, 0));
  sub_1C106F97C();
  v4 = sub_1C0D030A8(a1);
  if (v4)
  {
    v5 = v4;
    swift_bridgeObjectRelease();
    sub_1C0D03534(v5);
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v6 = sub_1C077585C();
    v5 = sub_1C077965C(v6, (uint64_t)qword_1ED762AF8);
    v7 = sub_1C10703A8();
    if (sub_1C07758D8(v7))
    {
      v8 = (uint8_t *)sub_1C0775854();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_1C0771000, v5, (os_log_type_t)a1, "Last SemanticLocationEvent is nil", v8, 2u);
      sub_1C077B264();
    }
  }

  sub_1C07877C0();
}

uint64_t sub_1C0D037A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  swift_retain();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  result = sub_1C0D02B50(a2, v3, a1);
  *a3 = result;
  return result;
}

void sub_1C0D037FC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v4 = v3;
  v28 = a1;
  v32 = a3;
  v31 = sub_1C07ACF80(&qword_1ED7482B0);
  MEMORY[0x1E0C80A78](v31);
  sub_1C0778564();
  v6 = sub_1C07ACF80(&qword_1EF646F68);
  v29 = *(_QWORD *)(v6 - 8);
  v30 = v6;
  MEMORY[0x1E0C80A78](v6);
  sub_1C0778564();
  v9 = v8 - v7;
  v10 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v27 - v14;
  v16 = *(void **)(v4 + 16);
  v17 = sub_1C106ADE0();
  v18 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
  v18(v15, a2, v17);
  sub_1C07A298C((uint64_t)v15);
  v19 = sub_1C07ACF80(&qword_1ED75D0B8);
  v18(v12, a2 + *(int *)(v19 + 36), v17);
  sub_1C07A298C((uint64_t)v12);
  v20 = objc_allocWithZone(MEMORY[0x1E0D026F0]);
  v21 = sub_1C07DC9F8((uint64_t)v15, (uint64_t)v12, 0, 0, 0);
  v22 = objc_msgSend(v16, sel_publisherWithOptions_, v21);

  v23 = v22;
  sub_1C07ACF80((uint64_t *)&unk_1ED74D318);
  v24 = v33;
  sub_1C106ED88();
  if (v24)
  {

  }
  else
  {
    v25 = swift_allocObject();
    v26 = v28;
    *(_QWORD *)(v25 + 16) = v4;
    *(_QWORD *)(v25 + 24) = v26;
    type metadata accessor for FeatureProviderChange(0);
    sub_1C0AAF218((uint64_t *)&qword_1ED748310, &qword_1ED7482B0);
    swift_retain();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_retain();
    sub_1C1070C00();
    swift_release();

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))(v32, v9, v30);
  }
}

uint64_t sub_1C0D03A9C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[2] = a1;
  v4[3] = a3;
  v5 = *a2;
  v4[4] = a4;
  v4[5] = v5;
  return swift_task_switch();
}

uint64_t sub_1C0D03ABC()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;

  v1 = objc_msgSend(*(id *)(v0 + 40), sel_eventBody);
  if (v1)
  {
    v2 = v1;
    v3 = *(_QWORD *)(v0 + 16);
    objc_msgSend(*(id *)(v0 + 40), sel_timestamp);
    sub_1C106AC54();
    sub_1C0D03534(v2);
    v5 = v4;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0D0400C(v5);
    swift_bridgeObjectRelease();
    sub_1C089B840();
    v7 = v6;
    swift_release();

    v8 = type metadata accessor for FeatureProviderChange(0);
    v9 = 0;
    *(_BYTE *)(v3 + *(int *)(v8 + 20)) = 2;
    *(_QWORD *)(v3 + *(int *)(v8 + 24)) = v7;
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v10 = sub_1C077585C();
    v11 = sub_1C077965C(v10, (uint64_t)qword_1ED762AF8);
    v12 = sub_1C10703A8();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)sub_1C0775854();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_1C0771000, v11, v12, "Unable to parse eventBody from read event in semantic location featurizer", v13, 2u);
      MEMORY[0x1C3BA8270](v13, -1, -1);
    }

    v8 = type metadata accessor for FeatureProviderChange(0);
    v9 = 1;
  }
  sub_1C07B2D8C(*(_QWORD *)(v0 + 16), v9, 1, v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1C0D03C58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = sub_1C106ADE0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  sub_1C0778564();
  v4 = v3 - v2;
  sub_1C106ADA4();
  sub_1C0D0362C(v4);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v4, v0);
  sub_1C077671C();
}

uint64_t sub_1C0D03CCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = sub_1C106ADE0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1C0778564();
  v8 = v7 - v6;
  sub_1C106ADA4();
  sub_1C0D0362C(v8);
  v10 = v9;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
  v11 = a1 == 0x79745F6563616C70 && a2 == 0xEA00000000006570;
  if (v11 || (sub_1C0796A94(), (sub_1C0797720() & 1) != 0))
  {
    v12 = sub_1C0796A94();
  }
  else
  {
    if (a1 != 0xD000000000000018 || a2 != 0x80000001C10E9910)
    {
      sub_1C0791520();
      if ((sub_1C0797720() & 1) == 0)
      {
        v14 = 0;
        goto LABEL_8;
      }
    }
    v12 = sub_1C0791520();
  }
  v14 = sub_1C089A990(v12, v13, v10);
LABEL_8:
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1C0D03E54()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SemanticLocationSignal()
{
  return objc_opt_self();
}

void sub_1C0D03E98()
{
  sub_1C0D03C58();
}

uint64_t sub_1C0D03EB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C0D037A8(a1, a2, a3);
}

void sub_1C0D03ED8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C0D037FC(a1, a2, a3);
}

void sub_1C0D03EF8()
{
  sub_1C0D02F84();
}

uint64_t sub_1C0D03F0C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C0D03F1C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C0D03F2C(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1C0D03F78(&qword_1EF647B28);
  result = sub_1C0D03F78(&qword_1EF647B30);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1C0D03F78(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (!result)
  {
    type metadata accessor for SemanticLocationSignal();
    sub_1C077D8A0();
  }
  return result;
}

uint64_t sub_1C0D03FAC(uint64_t a1)
{
  uint64_t result;

  result = sub_1C0D03F78(&qword_1EF647B30);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1C0D03FE0()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1C0D04004(void *a1)
{
  uint64_t v1;

  sub_1C0D03418(a1, v1);
}

uint64_t sub_1C0D0400C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t isStackAllocationSafe;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1;
  v3 = *(_BYTE *)(a1 + 32) & 0x3F;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v3 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    sub_1C078ACF0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C07A3E88();
    if (v1)
      swift_willThrow();
    else
      v2 = v5;
    sub_1C07878E4();
  }
  else
  {
    v6 = swift_slowAlloc();
    sub_1C078ACF0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C07A3E88();
    v2 = v7;
    MEMORY[0x1C3BA8270](v6, -1, -1);
    sub_1C07878E4();
  }
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1C0D04170()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0D0419C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v7 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_1C0806670;
  return sub_1C0D03A9C(a1, a2, v7, v6);
}

uint64_t sub_1C0D04208()
{
  return sub_1C0AAF218(&qword_1EF62FDE8, &qword_1EF62FDF0);
}

uint64_t sub_1C0D04234()
{
  return sub_1C0AAF218(&qword_1EF647B48, &qword_1EF646F90);
}

uint64_t storeEnumTagSinglePayload for SemLocPlaceTypeFeatures(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1C0D042AC + 4 * byte_1C10B5605[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1C0D042E0 + 4 * byte_1C10B5600[v4]))();
}

uint64_t sub_1C0D042E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D042E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0D042F0);
  return result;
}

uint64_t sub_1C0D042FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0D04304);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1C0D04308(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D04310(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SemLocPlaceTypeFeatures()
{
  return &type metadata for SemLocPlaceTypeFeatures;
}

uint64_t storeEnumTagSinglePayload for SemLocUserSpecificPlaceTypeFeatures(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1C0D04378 + 4 * byte_1C10B560F[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1C0D043AC + 4 * byte_1C10B560A[v4]))();
}

uint64_t sub_1C0D043AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D043B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0D043BCLL);
  return result;
}

uint64_t sub_1C0D043C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0D043D0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1C0D043D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D043DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SemLocUserSpecificPlaceTypeFeatures()
{
  return &type metadata for SemLocUserSpecificPlaceTypeFeatures;
}

unint64_t sub_1C0D043FC()
{
  unint64_t result;

  result = qword_1EF647B50;
  if (!qword_1EF647B50)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B579C, &type metadata for SemLocUserSpecificPlaceTypeFeatures);
    atomic_store(result, (unint64_t *)&qword_1EF647B50);
  }
  return result;
}

unint64_t sub_1C0D0443C()
{
  unint64_t result;

  result = qword_1EF647B58;
  if (!qword_1EF647B58)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B583C, &type metadata for SemLocPlaceTypeFeatures);
    atomic_store(result, (unint64_t *)&qword_1EF647B58);
  }
  return result;
}

uint64_t Sequence.uniqued<A>(by:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  char *v28;
  char v29;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t AssociatedConformanceWitness;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v46 = a1;
  v47 = a2;
  v45 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1);
  sub_1C077AED0();
  v40 = v9;
  MEMORY[0x1E0C80A78](v10);
  v12 = v11;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v14 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  sub_1C077AED0();
  v39 = v15;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v31 - v17;
  v19 = sub_1C1070564();
  MEMORY[0x1E0C80A78](v19);
  v41 = (char *)&v31 - v20;
  v42 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v21);
  v35 = (char *)&v31 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedConformanceWitness = a5;
  v34 = swift_getAssociatedTypeWitness();
  v36 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v33 = (char *)&v31 - v23;
  v49 = sub_1C106F910();
  v32 = v6;
  sub_1C106FD90();
  v38 = sub_1C107000C();
  sub_1C106FF4C();
  v48 = sub_1C106F928();
  sub_1C106FD90();
  v44 = a6;
  v24 = sub_1C107027C();
  v25 = v34;
  v37 = v24;
  sub_1C1070240();
  v26 = (uint64_t)v41;
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  v28 = v33;
  v31 = v12;
  v27(v35, v32, v12);
  sub_1C106FD84();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_1C10705A0();
  if (sub_1C07B2D80(v26, 1, AssociatedTypeWitness) != 1)
  {
    v42 = *(_QWORD *)(v14 + 32);
    do
    {
      ((void (*)(char *, uint64_t, uint64_t))v42)(v18, v26, AssociatedTypeWitness);
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C07A13BC();
      v29 = sub_1C1070264();
      swift_bridgeObjectRelease();
      sub_1C07A7530();
      if ((v29 & 1) == 0)
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v14 + 16))(v39, v18, AssociatedTypeWitness);
        sub_1C106FFDC();
        sub_1C07A13BC();
        v26 = (uint64_t)v41;
        sub_1C107024C();
        sub_1C07A7530();
      }
      (*(void (**)(char *, uint64_t))(v14 + 8))(v18, AssociatedTypeWitness);
      sub_1C10705A0();
    }
    while (sub_1C07B2D80(v26, 1, AssociatedTypeWitness) != 1);
  }
  (*(void (**)(char *, uint64_t))(v36 + 8))(v28, v25);
  swift_bridgeObjectRelease();
  return v49;
}

uint64_t AsyncSequence<>.sessionDataAsyncSequence()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  sub_1C0778564();
  v6 = v5 - v4;
  sub_1C077CF74(v5 - v4, v7, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  return sub_1C077CF74(a2, v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
}

uint64_t SessionDataComplying.init(startDate:endDate:content:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1C077B61C();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = sub_1C077AE98();
  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v12 = v11(v9, v7, v10);
  v16 = sub_1C07A8244(v12, v13, v14, v15);
  v11(v9 + *(int *)(v16 + 28), v5, v10);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v9 + *(int *)(v16 + 32), v3, v1);
}

void sub_1C0D0498C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_1C0D04AA0(a1, a2, a3, "FutureSessionData", (uint64_t)"FutureSessionData", 17, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C0D05EAC, a4);
}

uint64_t AsyncSequence.toAnySessionAsyncSequence()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  _BYTE v14[64];
  uint64_t v15;
  uint64_t v16;

  sub_1C077B61C();
  v15 = v1;
  v16 = v2;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = *(_QWORD *)(v5 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v5);
  sub_1C078A72C((uint64_t)&v14[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16));
  v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v6;
  *(_QWORD *)(v12 + 24) = v4;
  result = sub_1C078A72C(v12 + v11, (uint64_t)&v14[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 32));
  *v8 = sub_1C0D06B24;
  v8[1] = v12;
  return result;
}

void sub_1C0D04A74(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_1C0D04AA0(a1, a2, a3, "SessionData", (uint64_t)"SessionData", 11, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C0D056BC, a4);
}

void sub_1C0D04AA0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, const char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X6>, uint64_t a8@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t);
  NSObject *v32;
  os_signpost_type_t v33;
  char v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint8_t *v37;
  os_signpost_id_t v38;
  uint64_t v39;
  void (*v40)(uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  const char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v71;

  v70 = a7;
  v64 = a5;
  v65 = a6;
  v49 = a4;
  v68 = a2;
  v66 = a8;
  v67 = a1;
  v50 = sub_1C106F4B4();
  v71 = *(_QWORD *)(v50 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v49 - v13;
  v63 = sub_1C106F4E4();
  v61 = *(_QWORD *)(v63 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v15);
  sub_1C077AED0();
  v54 = v16;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v49 - v18;
  v20 = sub_1C106F544();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v49 - v23;
  v62 = sub_1C106D294();
  v59 = *(_QWORD *)(v62 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v25);
  sub_1C077AE40();
  v58 = v26;
  v27 = sub_1C077AE98();
  v57 = *(_QWORD *)(v27 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v28);
  sub_1C077AE40();
  v56 = v29;
  sub_1C106ADD4();
  sub_1C106F184();
  v52 = v24;
  v53 = v21;
  v30 = sub_1C077995C();
  v55 = v20;
  v31(v30);
  sub_1C106F4C0();
  sub_1C106F4CC();
  sub_1C106F49C();
  v32 = sub_1C106F4CC();
  v33 = sub_1C107048C();
  v34 = sub_1C107054C();
  v69 = a3;
  v60 = v27;
  if ((v34 & 1) != 0)
  {
    v35 = *(void (**)(char *, char *, uint64_t))(v71 + 16);
    v36 = v50;
    v35(v11, v14, v50);
    v37 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v37 = 0;
    v38 = sub_1C106F4A8();
    _os_signpost_emit_with_name_impl(&dword_1C0771000, v32, v33, v38, v49, "", v37, 2u);
    v39 = sub_1C077995C();
    v40(v39);
    MEMORY[0x1C3BA8270](v37, -1, -1);

    v41 = v51;
  }
  else
  {

    v35 = *(void (**)(char *, char *, uint64_t))(v71 + 16);
    v41 = v51;
    v36 = v50;
  }
  v35(v11, v14, v36);
  sub_1C106F520();
  swift_allocObject();
  v42 = v36;
  sub_1C106F514();
  v43 = v61;
  v44 = v63;
  (*(void (**)(uint64_t, char *, uint64_t))(v61 + 16))(v54, v19, v63);
  v45 = v58;
  sub_1C106D270();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v14, v42);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v19, v44);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v52, v55);
  v47 = v68;
  v46 = v69;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 24))(v67, v68, v69);
  v48 = v56;
  v70(v41, v45, v56, v47, v46);
  (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v45, v62);
  (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v48, v60);
  sub_1C07757D0();
}

uint64_t SessionDataComplying.startDate.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_1C077AE98();
  v0 = sub_1C07759A0();
  return sub_1C077C20C(v0, v1, v2, v3);
}

uint64_t SessionDataComplying.startDate.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_1C077AE98();
  v0 = sub_1C07939C8();
  return sub_1C077C20C(v0, v1, v2, v3);
}

uint64_t (*SessionDataComplying.startDate.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SessionDataComplying.endDate.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_1C077AE98();
  v0 = sub_1C07759A0();
  return sub_1C077C20C(v0, v1, v2, v3);
}

uint64_t SessionDataComplying.endDate.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_1C077AE98();
  v0 = sub_1C07939C8();
  return sub_1C077C20C(v0, v1, v2, v3);
}

uint64_t (*SessionDataComplying.endDate.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SessionDataComplying.content.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 32));
}

uint64_t SessionDataComplying.content.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 32), a1);
}

uint64_t (*SessionDataComplying.content.modify())(_QWORD)
{
  return nullsub_1;
}

void SessionDataComplying.init<A>(using:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t);

  v8 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  sub_1C0778564();
  v11 = v10 - v9;
  v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(v13, v12);
  v15 = *(void (**)(uint64_t, uint64_t))(a4 + 24);
  v19 = sub_1C07A8244(v14, v16, v17, v18);
  v15(a3, a4);
  (*(void (**)(uint64_t, uint64_t))(a4 + 32))(a3, a4);
  v20 = sub_1C077995C();
  v21(v20);
  sub_1C077CF74(a5 + *(int *)(v19 + 32), v11, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32));
  sub_1C0776760();
}

uint64_t sub_1C0D05054(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x7461447472617473 && a2 == 0xE900000000000065;
  if (v2 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x65746144646E65 && a2 == 0xE700000000000000;
    if (v6 || (sub_1C1070CB4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1C1070CB4();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1C0D051B4(char a1)
{
  if (!a1)
    return 0x7461447472617473;
  if (a1 == 1)
    return 0x65746144646E65;
  return 0x746E65746E6F63;
}

void sub_1C0D05210(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12[4];
  char v13;
  char v14;
  char v15;

  v3 = a2[3];
  v4 = a2[4];
  v12[0] = a2[2];
  v12[1] = v4;
  v5 = type metadata accessor for SessionCodableDataComplying.CodingKeys(255, v12[0], v3, v4);
  MEMORY[0x1C3BA8174](&unk_1C10B5CF0, v5);
  v6 = sub_1C1070BD0();
  v7 = *(_QWORD *)(v6 - 8);
  sub_1C078C94C();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v12 - v9;
  sub_1C07A9480(a1, a1[3]);
  sub_1C1070EB8();
  v15 = 0;
  sub_1C077AE98();
  sub_1C0902108(&qword_1ED75E7D0, MEMORY[0x1E0CB0890]);
  v11 = v12[3];
  sub_1C1070BB8();
  if (!v11)
  {
    v14 = 1;
    sub_1C07A6050();
    v13 = 2;
    sub_1C07A6050();
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  sub_1C07757D0();
}

void sub_1C0D05390(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  char v50;

  v35 = a5;
  v34 = *(_QWORD *)(a2 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v9);
  sub_1C077AE40();
  v37 = v10;
  v11 = sub_1C077AE98();
  v12 = *(_QWORD *)(v11 - 8);
  v43 = v11;
  v44 = v12;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v13);
  sub_1C077AED0();
  v41 = v14;
  MEMORY[0x1E0C80A78](v15);
  v42 = (char *)&v32 - v16;
  v17 = type metadata accessor for SessionCodableDataComplying.CodingKeys(255, a2, a3, a4);
  MEMORY[0x1C3BA8174](&unk_1C10B5CF0, v17);
  v46 = sub_1C1070B10();
  v39 = *(_QWORD *)(v46 - 8);
  sub_1C078C94C();
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v32 - v19;
  v38 = a2;
  v36 = a3;
  v40 = type metadata accessor for SessionCodableDataComplying(0, a2, a3, a4);
  v21 = *(_QWORD *)(v40 - 8);
  sub_1C078C94C();
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v32 - v23;
  sub_1C07A9480(a1, a1[3]);
  v45 = v20;
  v25 = v47;
  sub_1C1070E94();
  v26 = (uint64_t)a1;
  if (v25)
  {
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)a1);
  }
  else
  {
    v32 = v21;
    v33 = v24;
    v27 = v40;
    v47 = v26;
    v50 = 0;
    sub_1C0902108(&qword_1ED75E9A0, MEMORY[0x1E0CB08C0]);
    sub_1C0791534();
    sub_1C0793830((uint64_t)v33);
    v49 = 1;
    sub_1C0791534();
    v28 = (uint64_t)v33;
    sub_1C0793830((uint64_t)&v33[*(int *)(v27 + 44)]);
    v48 = 2;
    v30 = v37;
    v29 = v38;
    sub_1C1070AE0();
    sub_1C0795370(v39);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 32))(v28 + *(int *)(v27 + 48), v30, v29);
    v31 = v32;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v35, v28, v27);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v47);
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v28, v27);
  }
  sub_1C07757D0();
}

uint64_t sub_1C0D056BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t inited;
  char *v27;
  char *v28;
  char v29;
  char v30;
  NSObject *v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  const char *v36;
  char *v37;
  char v38;
  void (*v39)(char *, char *, uint64_t);
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  os_signpost_id_t v47;
  os_log_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, char *, uint64_t);
  uint64_t v63;
  os_log_t v64;
  unint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  const char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t DynamicType;

  v80 = a3;
  v81 = a2;
  v71 = sub_1C106F4F0();
  v70 = *(const char **)(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  v69 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1C106F4B4();
  v83 = *(_QWORD *)(v4 - 8);
  v84 = v4;
  MEMORY[0x1E0C80A78](v4);
  v68 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v63 - v7;
  v73 = sub_1C106F4E4();
  v72 = *(_QWORD *)(v73 - 8);
  MEMORY[0x1E0C80A78](v73);
  v10 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_1C106ADE0();
  v78 = *(_QWORD *)(v79 - 8);
  MEMORY[0x1E0C80A78](v79);
  v76 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v75 = (char *)&v63 - v13;
  v74 = v14;
  MEMORY[0x1E0C80A78](v15);
  v77 = (char *)&v63 - v16;
  sub_1C106ADD4();
  DynamicType = swift_getDynamicType();
  swift_getMetatypeMetadata();
  v17 = sub_1C106FB5C();
  v19 = v18;
  v20 = swift_allocObject();
  v67 = v17;
  *(_QWORD *)(v20 + 16) = v17;
  *(_QWORD *)(v20 + 24) = v19;
  v21 = swift_allocObject();
  *(_BYTE *)(v21 + 16) = 34;
  v22 = swift_allocObject();
  *(_BYTE *)(v22 + 16) = 8;
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = sub_1C0CD0410;
  *(_QWORD *)(v23 + 24) = v20;
  v24 = swift_allocObject();
  *(_BYTE *)(v24 + 16) = 32;
  v25 = swift_allocObject();
  *(_BYTE *)(v25 + 16) = 8;
  sub_1C07ACF80(&qword_1ED762CC8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C107A8C0;
  *(_QWORD *)(inited + 32) = sub_1C0788B6C;
  *(_QWORD *)(inited + 40) = v21;
  *(_QWORD *)(inited + 48) = sub_1C0959698;
  *(_QWORD *)(inited + 56) = v22;
  *(_QWORD *)(inited + 64) = sub_1C0788D34;
  *(_QWORD *)(inited + 72) = v23;
  *(_QWORD *)(inited + 80) = sub_1C0959698;
  *(_QWORD *)(inited + 88) = v24;
  v27 = v8;
  *(_QWORD *)(inited + 96) = sub_1C0959698;
  *(_QWORD *)(inited + 104) = v25;
  v28 = v10;
  *(_QWORD *)(inited + 112) = sub_1C0D07308;
  *(_QWORD *)(inited + 120) = 0;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_retain();
  sub_1C106D258();
  v82 = sub_1C106D27C();
  v30 = v29;
  sub_1C106D288();
  v31 = sub_1C106F4CC();
  sub_1C106F508();
  LODWORD(v81) = sub_1C1070480();
  result = sub_1C107054C();
  if ((result & 1) == 0)
  {
    swift_release();

    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(char *, uint64_t))(v83 + 8))(v8, v84);
    (*(void (**)(char *, uint64_t))(v72 + 8))(v28, v73);
LABEL_14:
    sub_1C106F244();
    v51 = v78;
    v52 = *(void (**)(char *, uint64_t, uint64_t))(v78 + 16);
    v53 = v75;
    v54 = v79;
    v52(v75, v80, v79);
    v55 = v76;
    v56 = v77;
    v52(v76, (uint64_t)v77, v54);
    v57 = *(unsigned __int8 *)(v51 + 80);
    v58 = (v57 + 16) & ~v57;
    v59 = (v74 + v57 + v58) & ~v57;
    v60 = swift_allocObject();
    v61 = v60 + v58;
    v62 = *(void (**)(uint64_t, char *, uint64_t))(v51 + 32);
    v62(v61, v53, v54);
    v62(v60 + v59, v55, v54);
    sub_1C106F238();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v56, v54);
  }
  v64 = v31;
  v65 = v19;
  v33 = v83;
  v66 = v28;
  v34 = v84;
  if ((v30 & 1) == 0)
  {
    if (v82)
    {
      v35 = v71;
      v36 = v70;
      v37 = v69;
LABEL_10:
      swift_retain();
      sub_1C106F52C();
      swift_release();
      if ((*((unsigned int (**)(char *, uint64_t))v36 + 11))(v37, v35) == *MEMORY[0x1E0DF2190])
      {
        v38 = 0;
        v70 = "[Error] Interval already ended";
      }
      else
      {
        (*((void (**)(char *, uint64_t))v36 + 1))(v37, v35);
        v70 = "type=%{signpost.telemetry:string1,public}s %s";
        v38 = 2;
      }
      v39 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
      v40 = v68;
      v39(v68, v27, v34);
      v41 = swift_slowAlloc();
      v42 = swift_slowAlloc();
      v71 = (uint64_t)v27;
      v43 = v42;
      DynamicType = v42;
      *(_BYTE *)v41 = v38;
      *(_BYTE *)(v41 + 1) = v38;
      *(_WORD *)(v41 + 2) = 2082;
      v44 = v65;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      swift_retain();
      v85 = sub_1C0788DAC(v67, v44, &DynamicType);
      sub_1C10705AC();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v41 + 12) = 2080;
      sub_1C106D264();
      v45 = sub_1C1070798();
      v85 = sub_1C0788DAC(v45, v46, &DynamicType);
      sub_1C10705AC();
      swift_release();
      swift_bridgeObjectRelease();
      v47 = sub_1C106F4A8();
      v48 = v64;
      _os_signpost_emit_with_name_impl(&dword_1C0771000, v64, (os_signpost_type_t)v81, v47, (const char *)v82, v70, (uint8_t *)v41, 0x16u);
      v49 = v84;
      v50 = *(void (**)(char *, uint64_t))(v83 + 8);
      v50(v40, v84);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v43, -1, -1);
      MEMORY[0x1C3BA8270](v41, -1, -1);
      swift_release();

      v50((char *)v71, v49);
      (*(void (**)(char *, uint64_t))(v72 + 8))(v66, v73);
      goto LABEL_14;
    }
    __break(1u);
    goto LABEL_16;
  }
  if (HIDWORD(v82))
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v82 >> 11 != 27)
  {
    v35 = v71;
    v36 = v70;
    v37 = v69;
    if (WORD1(v82) <= 0x10u)
    {
      v82 = (unint64_t)&v86;
      goto LABEL_10;
    }
    goto LABEL_17;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1C0D05EAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t inited;
  char *v27;
  char *v28;
  char v29;
  char v30;
  NSObject *v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  const char *v36;
  char *v37;
  char v38;
  void (*v39)(char *, char *, uint64_t);
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  os_signpost_id_t v47;
  os_log_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, char *, uint64_t);
  uint64_t v63;
  os_log_t v64;
  unint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  const char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t DynamicType;

  v80 = a3;
  v81 = a2;
  v71 = sub_1C106F4F0();
  v70 = *(const char **)(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  v69 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1C106F4B4();
  v83 = *(_QWORD *)(v4 - 8);
  v84 = v4;
  MEMORY[0x1E0C80A78](v4);
  v68 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v63 - v7;
  v73 = sub_1C106F4E4();
  v72 = *(_QWORD *)(v73 - 8);
  MEMORY[0x1E0C80A78](v73);
  v10 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_1C106ADE0();
  v78 = *(_QWORD *)(v79 - 8);
  MEMORY[0x1E0C80A78](v79);
  v76 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v75 = (char *)&v63 - v13;
  v74 = v14;
  MEMORY[0x1E0C80A78](v15);
  v77 = (char *)&v63 - v16;
  sub_1C106ADD4();
  DynamicType = swift_getDynamicType();
  swift_getMetatypeMetadata();
  v17 = sub_1C106FB5C();
  v19 = v18;
  v20 = swift_allocObject();
  v67 = v17;
  *(_QWORD *)(v20 + 16) = v17;
  *(_QWORD *)(v20 + 24) = v19;
  v21 = swift_allocObject();
  *(_BYTE *)(v21 + 16) = 34;
  v22 = swift_allocObject();
  *(_BYTE *)(v22 + 16) = 8;
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = sub_1C0CD0474;
  *(_QWORD *)(v23 + 24) = v20;
  v24 = swift_allocObject();
  *(_BYTE *)(v24 + 16) = 32;
  v25 = swift_allocObject();
  *(_BYTE *)(v25 + 16) = 8;
  sub_1C07ACF80(&qword_1ED762CC8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C107A8C0;
  *(_QWORD *)(inited + 32) = sub_1C0959698;
  *(_QWORD *)(inited + 40) = v21;
  *(_QWORD *)(inited + 48) = sub_1C0959698;
  *(_QWORD *)(inited + 56) = v22;
  *(_QWORD *)(inited + 64) = sub_1C0CD047C;
  *(_QWORD *)(inited + 72) = v23;
  *(_QWORD *)(inited + 80) = sub_1C0959698;
  *(_QWORD *)(inited + 88) = v24;
  v27 = v8;
  *(_QWORD *)(inited + 96) = sub_1C0959698;
  *(_QWORD *)(inited + 104) = v25;
  v28 = v10;
  *(_QWORD *)(inited + 112) = sub_1C0D07308;
  *(_QWORD *)(inited + 120) = 0;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_retain();
  sub_1C106D258();
  v82 = sub_1C106D27C();
  v30 = v29;
  sub_1C106D288();
  v31 = sub_1C106F4CC();
  sub_1C106F508();
  LODWORD(v81) = sub_1C1070480();
  result = sub_1C107054C();
  if ((result & 1) == 0)
  {
    swift_release();

    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(char *, uint64_t))(v83 + 8))(v8, v84);
    (*(void (**)(char *, uint64_t))(v72 + 8))(v28, v73);
LABEL_14:
    sub_1C106F244();
    v51 = v78;
    v52 = *(void (**)(char *, uint64_t, uint64_t))(v78 + 16);
    v53 = v75;
    v54 = v79;
    v52(v75, v80, v79);
    v55 = v76;
    v56 = v77;
    v52(v76, (uint64_t)v77, v54);
    v57 = *(unsigned __int8 *)(v51 + 80);
    v58 = (v57 + 16) & ~v57;
    v59 = (v74 + v57 + v58) & ~v57;
    v60 = swift_allocObject();
    v61 = v60 + v58;
    v62 = *(void (**)(uint64_t, char *, uint64_t))(v51 + 32);
    v62(v61, v53, v54);
    v62(v60 + v59, v55, v54);
    sub_1C106F238();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v56, v54);
  }
  v64 = v31;
  v65 = v19;
  v33 = v83;
  v66 = v28;
  v34 = v84;
  if ((v30 & 1) == 0)
  {
    if (v82)
    {
      v35 = v71;
      v36 = v70;
      v37 = v69;
LABEL_10:
      swift_retain();
      sub_1C106F52C();
      swift_release();
      if ((*((unsigned int (**)(char *, uint64_t))v36 + 11))(v37, v35) == *MEMORY[0x1E0DF2190])
      {
        v38 = 0;
        v70 = "[Error] Interval already ended";
      }
      else
      {
        (*((void (**)(char *, uint64_t))v36 + 1))(v37, v35);
        v70 = "type=%{signpost.telemetry:string1,public}s %s";
        v38 = 2;
      }
      v39 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
      v40 = v68;
      v39(v68, v27, v34);
      v41 = swift_slowAlloc();
      v42 = swift_slowAlloc();
      v71 = (uint64_t)v27;
      v43 = v42;
      DynamicType = v42;
      *(_BYTE *)v41 = v38;
      *(_BYTE *)(v41 + 1) = v38;
      *(_WORD *)(v41 + 2) = 2082;
      v44 = v65;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      swift_retain();
      v85 = sub_1C0788DAC(v67, v44, &DynamicType);
      sub_1C10705AC();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v41 + 12) = 2080;
      sub_1C106D264();
      v45 = sub_1C1070798();
      v85 = sub_1C0788DAC(v45, v46, &DynamicType);
      sub_1C10705AC();
      swift_release();
      swift_bridgeObjectRelease();
      v47 = sub_1C106F4A8();
      v48 = v64;
      _os_signpost_emit_with_name_impl(&dword_1C0771000, v64, (os_signpost_type_t)v81, v47, (const char *)v82, v70, (uint8_t *)v41, 0x16u);
      v49 = v84;
      v50 = *(void (**)(char *, uint64_t))(v83 + 8);
      v50(v40, v84);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v43, -1, -1);
      MEMORY[0x1C3BA8270](v41, -1, -1);
      swift_release();

      v50((char *)v71, v49);
      (*(void (**)(char *, uint64_t))(v72 + 8))(v66, v73);
      goto LABEL_14;
    }
    __break(1u);
    goto LABEL_16;
  }
  if (HIDWORD(v82))
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v82 >> 11 != 27)
  {
    v35 = v71;
    v36 = v70;
    v37 = v69;
    if (WORD1(v82) <= 0x10u)
    {
      v82 = (unint64_t)&v86;
      goto LABEL_10;
    }
    goto LABEL_17;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1C0D0669C()
{
  char *v0;

  return sub_1C0D051B4(*v0);
}

uint64_t sub_1C0D066AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0D05054(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0D066DC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C07E98CC();
  *a1 = result;
  return result;
}

uint64_t sub_1C0D0670C(uint64_t a1)
{
  MEMORY[0x1C3BA8174](&unk_1C10B5CF0, a1);
  return sub_1C1070EE8();
}

uint64_t sub_1C0D06740(uint64_t a1)
{
  MEMORY[0x1C3BA8174](&unk_1C10B5CF0, a1);
  return sub_1C1070EF4();
}

uint64_t sub_1C0D06774@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 44);
  v5 = sub_1C106ADE0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1C0D067B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 48));
}

void sub_1C0D067D0(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C0D05390(a1, a2[2], a2[3], a2[4], a3);
}

void sub_1C0D067F0(_QWORD *a1, _QWORD *a2)
{
  sub_1C0D05210(a1, a2);
}

void sub_1C0D06804(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 16) - 8);
  MEMORY[0x1E0C80A78](a1);
  sub_1C0778564();
  v7 = v6 - v5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  sub_1C078C94C();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v13 - v11;
  sub_1C078A72C(v7, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
  sub_1C1070150();
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2, v12, AssociatedTypeWitness);
  sub_1C0776760();
}

uint64_t type metadata accessor for SessionDataComplying(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0802884(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SessionDataComplying);
}

uint64_t sub_1C0D068E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1C0D06804(a1, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v2, a1);
}

uint64_t sub_1C0D06918()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C0801424;
  return sub_1C1070078();
}

uint64_t sub_1C0D06980()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C0804B88;
  return sub_1C0D06918();
}

_QWORD *sub_1C0D069E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *result;
  uint64_t v13;

  v8 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  v11 = swift_allocBox();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, a2);
  sub_1C1070150();
  result = (_QWORD *)swift_allocObject();
  result[2] = a2;
  result[3] = a3;
  result[4] = v11;
  *a4 = &unk_1EF647BE0;
  a4[1] = result;
  return result;
}

uint64_t sub_1C0D06ACC()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

_QWORD *sub_1C0D06B24@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  return sub_1C0D069E0(v1 + ((v3 + 32) & ~v3), v2, *(_QWORD *)(v1 + 24), a1);
}

uint64_t dispatch thunk of SessionData.startDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of SessionData.endDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of SessionData.content.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1C0D06B58()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1C106ADE0();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t dispatch thunk of SessionDataProvider.sessions(in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of SessionDataDateRangeProvider.dateRange()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SessionDataProviderWithInBuiltRange.sessions()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

void sub_1C0D06C48(uint64_t *a1)
{
  type metadata accessor for SessionDataAsyncSequenceWrapper(255, *a1, a1[1], a1[2]);
  JUMPOUT(0x1C3BA8174);
}

uint64_t type metadata accessor for SessionDataAsyncSequenceWrapper(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0802884(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SessionDataAsyncSequenceWrapper);
}

uint64_t type metadata accessor for SessionDataAsyncIteratorWrapper(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0802884(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SessionDataAsyncIteratorWrapper);
}

uint64_t sub_1C0D06C94(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_18;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return sub_1C07B2D80(a1, v6, v4);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return (v6 + v12 + 1);
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1C0D06D44 + 4 * byte_1C10B5870[(v8 - 1)]))();
}

void sub_1C0D06D90(uint64_t a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  char v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      v14 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0u;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v15 = v13 & ~(-1 << v9);
        sub_1C077B164();
        if ((_DWORD)v8 == 3)
        {
          *(_WORD *)a1 = v15;
          *(_BYTE *)(a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      sub_1C077B164();
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

void sub_1C0D06F10()
{
  JUMPOUT(0x1C3BA8174);
}

uint64_t sub_1C0D06F20(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1C3BA8174](&unk_1C10B5B30);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0D06F4C(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1C3BA8174](&unk_1C10B5AB0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0D06F78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[6] = a3;
  v4[7] = a4;
  v4[5] = a1;
  v4[8] = swift_getAssociatedTypeWitness();
  v5 = sub_1C1070564();
  v4[9] = v5;
  v4[10] = *(_QWORD *)(v5 - 8);
  v4[11] = swift_task_alloc();
  v4[12] = swift_getAssociatedTypeWitness();
  v4[13] = swift_projectBox();
  return swift_task_switch();
}

uint64_t sub_1C0D07044()
{
  uint64_t v0;
  _QWORD *v1;

  swift_beginAccess();
  swift_getAssociatedConformanceWitness();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v1;
  *v1 = v0;
  v1[1] = sub_1C0D070E0;
  return sub_1C1070078();
}

uint64_t sub_1C0D070E0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_endAccess();
  return swift_task_switch();
}

uint64_t sub_1C0D0714C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 88);
  if (sub_1C07B2D80(v1, 1, *(_QWORD *)(v0 + 64)) == 1)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(v1, *(_QWORD *)(v0 + 72));
LABEL_4:
    v2 = *(_QWORD *)(v0 + 40);
    *(_QWORD *)(v2 + 32) = 0;
    *(_OWORD *)v2 = 0u;
    *(_OWORD *)(v2 + 16) = 0u;
    goto LABEL_5;
  }
  sub_1C07ACF80(&qword_1ED749408);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_4;
LABEL_5:
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C0D071F8()
{
  uint64_t v0;

  swift_endAccess();
  swift_task_dealloc();
  return sub_1C077CF28(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0D07230()
{
  uint64_t inited;
  double v1;

  sub_1C07ACF80((uint64_t *)&unk_1ED7614C0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1079220;
  *(_QWORD *)(inited + 32) = 0x6E6F697461727544;
  *(_QWORD *)(inited + 40) = 0xEF73646E6F636553;
  sub_1C106ADC8();
  *(_QWORD *)(inited + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v1);
  sub_1C077CA90();
  return sub_1C106F97C();
}

uint64_t sub_1C0D0730C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0D07340()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0D07378()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  v1 = sub_1C077AE98();
  sub_1C078ABBC();
  v5 = (*(_QWORD *)(v2 + 64) + v3 + v4) & ~v3;
  v6 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v6(v0 + v4, v1);
  v6(v0 + v5, v1);
  sub_1C077995C();
  return swift_deallocObject();
}

uint64_t sub_1C0D073E8()
{
  sub_1C077AE98();
  sub_1C078ABBC();
  return sub_1C0D07230();
}

uint64_t sub_1C0D0741C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0D07440(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1C0801424;
  return sub_1C0D06F78(a1, v6, v4, v5);
}

uint64_t sub_1C0D074AC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1C106ADE0();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1C0D07534(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v6 = *(_QWORD *)(sub_1C077AE98() - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_DWORD *)(v6 + 80);
  v9 = v8;
  v10 = v7 + v8;
  v11 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = v12;
  v14 = (v12 | v8) & 0x100000;
  if ((v12 | v9) > 7
    || v14 != 0
    || ((v7 + v12 + (v10 & ~v9)) & ~(unint64_t)v12) + *(_QWORD *)(v11 + 64) > 0x18)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + (((v12 | v9) + 16) & ~(v12 | v9)));
    swift_retain();
  }
  else
  {
    v18 = ~v9;
    v20 = *(_QWORD *)(a3 + 16);
    sub_1C07A1F70((uint64_t)a1);
    sub_1C07A1F70(((unint64_t)a1 + v10) & v18);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16))(((((unint64_t)a1 + v10) & v18) + v7 + v13) & ~v13, ((((unint64_t)a2 + v10) & v18) + v7 + v13) & ~v13, v20);
  }
  return a1;
}

uint64_t sub_1C0D07654(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v4 = *(_QWORD *)(sub_1C077AE98() - 8);
  sub_1C079C844();
  v5 = *(_QWORD *)(v4 + 64);
  v6 = (v5 + a1 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  sub_1C079C844();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((v6 + v5 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

void sub_1C0D076CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1C077B61C();
  v1 = v0;
  sub_1C077AE98();
  sub_1C0791F90();
  sub_1C0795928(v1);
  sub_1C07A13C8();
  v2 = sub_1C0799094();
  (*(void (**)(uint64_t))(v3 + 16))(v2);
  sub_1C077C798();
}

void sub_1C0D0771C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1C077B61C();
  v1 = v0;
  sub_1C077AE98();
  sub_1C0791F90();
  sub_1C0795928(v1);
  sub_1C07A13C8();
  v2 = sub_1C0799094();
  (*(void (**)(uint64_t))(v3 + 24))(v2);
  sub_1C077C798();
}

void sub_1C0D0776C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1C077B61C();
  v1 = v0;
  sub_1C077AE98();
  sub_1C0791F90();
  sub_1C0795928(v1);
  sub_1C07A13C8();
  v2 = sub_1C0799094();
  (*(void (**)(uint64_t))(v3 + 32))(v2);
  sub_1C077C798();
}

void sub_1C0D077BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1C077B61C();
  v1 = v0;
  sub_1C077AE98();
  sub_1C0791F90();
  sub_1C0795928(v1);
  sub_1C07A13C8();
  v2 = sub_1C0799094();
  (*(void (**)(uint64_t))(v3 + 40))(v2);
  sub_1C077C798();
}

uint64_t sub_1C0D0780C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  int v20;
  unsigned int v21;
  int v22;
  int v23;
  uint64_t v24;

  v6 = sub_1C077AE98();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int *)(v10 + 84);
  if (v11 <= v8)
    v12 = *(_DWORD *)(v7 + 84);
  else
    v12 = *(_DWORD *)(v10 + 84);
  if (!a2)
    return 0;
  v13 = v6;
  v14 = *(_QWORD *)(v7 + 64);
  v15 = *(unsigned __int8 *)(v7 + 80);
  v16 = v14 + v15;
  v17 = *(unsigned __int8 *)(v10 + 80);
  if (a2 <= v12)
    goto LABEL_23;
  v18 = ((v14 + (v16 & ~v15) + v17) & ~v17) + *(_QWORD *)(v10 + 64);
  v19 = 8 * v18;
  if (v18 <= 3)
  {
    v21 = ((a2 - v12 + ~(-1 << v19)) >> v19) + 1;
    if (HIWORD(v21))
    {
      v20 = *(_DWORD *)(a1 + v18);
      if (!v20)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v21 > 0xFF)
    {
      v20 = *(unsigned __int16 *)(a1 + v18);
      if (!*(_WORD *)(a1 + v18))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v21 < 2)
    {
LABEL_23:
      if (v12)
      {
        if (v8 >= v11)
        {
          v24 = a1;
          v11 = v8;
          v9 = v13;
        }
        else
        {
          v24 = (((v16 + a1) & ~v15) + v14 + v17) & ~v17;
        }
        return sub_1C07B2D80(v24, v11, v9);
      }
      return 0;
    }
  }
  v20 = *(unsigned __int8 *)(a1 + v18);
  if (!*(_BYTE *)(a1 + v18))
    goto LABEL_23;
LABEL_14:
  v22 = (v20 - 1) << v19;
  if (v18 > 3)
    v22 = 0;
  if ((_DWORD)v18)
  {
    if (v18 <= 3)
      v23 = v18;
    else
      v23 = 4;
    __asm { BR              X12 }
  }
  return v12 + v22 + 1;
}

void sub_1C0D079B0(uint64_t a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unint64_t v11;
  char v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;

  v8 = *(_QWORD *)(sub_1C077AE98() - 8);
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v9 + 84) <= *(_DWORD *)(v8 + 84))
    v10 = *(_DWORD *)(v8 + 84);
  else
    v10 = *(_DWORD *)(v9 + 84);
  v11 = ((*(_QWORD *)(v8 + 64)
        + ((*(_QWORD *)(v8 + 64) + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))
        + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
      + *(_QWORD *)(v9 + 64);
  v12 = 8 * v11;
  if (a3 <= v10)
  {
    v13 = 0u;
  }
  else if (v11 <= 3)
  {
    v15 = ((a3 - v10 + ~(-1 << v12)) >> v12) + 1;
    if (HIWORD(v15))
    {
      v13 = 4u;
    }
    else if (v15 >= 0x100)
    {
      v13 = 2;
    }
    else
    {
      v13 = v15 > 1;
    }
  }
  else
  {
    v13 = 1u;
  }
  if (v10 < a2)
  {
    v14 = ~v10 + a2;
    if (v11 < 4)
    {
      if ((_DWORD)v11)
      {
        v16 = v14 & ~(-1 << v12);
        sub_1C077B164();
        if ((_DWORD)v11 == 3)
        {
          *(_WORD *)a1 = v16;
          *(_BYTE *)(a1 + 2) = BYTE2(v16);
        }
        else if ((_DWORD)v11 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *(_BYTE *)a1 = v16;
        }
      }
    }
    else
    {
      sub_1C077B164();
      *(_DWORD *)a1 = v14;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X17 }
}

uint64_t type metadata accessor for SessionCodableDataComplying(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0802884(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SessionCodableDataComplying);
}

uint64_t type metadata accessor for SessionCodableDataComplying.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0802884(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SessionCodableDataComplying.CodingKeys);
}

uint64_t sub_1C0D07BC4(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C0D07C10 + 4 * byte_1C10B5891[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C0D07C44 + 4 * byte_1C10B588C[v4]))();
}

uint64_t sub_1C0D07C44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D07C4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0D07C54);
  return result;
}

uint64_t sub_1C0D07C60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0D07C68);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C0D07C6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D07C74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1C0D07C80()
{
  JUMPOUT(0x1C3BA8174);
}

void sub_1C0D07C90()
{
  JUMPOUT(0x1C3BA8174);
}

void sub_1C0D07CA0()
{
  JUMPOUT(0x1C3BA8174);
}

uint64_t dispatch thunk of FutureSessionDataProvider.sessions(in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return dispatch thunk of SessionDataProvider.sessions(in:)(a1, a2, a3);
}

void sub_1C0D07CCC(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1EF647D10, type metadata accessor for FutureLifeEventStructs.CommuteActivity, (uint64_t)&unk_1C10D2970);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0D07D08(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1EF647D18, type metadata accessor for LifeEventStructs.FacetimeActivity, (uint64_t)&unk_1C10D622C);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0D07D44(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1EF647D20, type metadata accessor for LifeEventStructs.OnThePhoneActivity, (uint64_t)&unk_1C10D5DF4);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0D07D80(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1EF647D28, type metadata accessor for LifeEventStructs.BicyclingActivity, (uint64_t)&unk_1C10D64B4);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0D07DBC(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1EF647D30, type metadata accessor for LifeEventStructs.RunningActivity, (uint64_t)&unk_1C10D5B00);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0D07DF8(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1EF647D38, type metadata accessor for LifeEventStructs.WalkingActivity, (uint64_t)&unk_1C10D658C);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0D07E34(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1ED747C80, type metadata accessor for LifeEventStructs.LocationVisitActivity, (uint64_t)&unk_1C10D5D1C);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0D07E70(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1EF647D40, type metadata accessor for LifeEventStructs.StationaryActivity, (uint64_t)&unk_1C10D6298);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0D07EAC(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1EF647D48, type metadata accessor for LifeEventStructs.AttendingAPerformanceActivity, (uint64_t)&unk_1C10D6448);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0D07EE8(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1EF647D50, type metadata accessor for LifeEventStructs.DiningActivity, (uint64_t)&unk_1C10D61C0);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0D07F24(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1EF647D58, type metadata accessor for LifeEventStructs.CommuteActivity, (uint64_t)&unk_1C10D5BD8);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0D07F60(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1EF647D60, type metadata accessor for LifeEventStructs.ExercisingActivity, (uint64_t)&unk_1C10D5CB0);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0D07F9C(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1EF647D68, type metadata accessor for LifeEventStructs.GamingActivity, (uint64_t)&unk_1C10D6304);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0D07FD8(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1EF647D70, type metadata accessor for LifeEventStructs.VacationingActivity, (uint64_t)&unk_1C10D6520);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0D08014(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1EF647D78, type metadata accessor for LifeEventStructs.ReadingActivity, (uint64_t)&unk_1C10D5ECC);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0D08050(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1EF647D80, type metadata accessor for LifeEventStructs.SleepingActivity, (uint64_t)&unk_1C10D5A94);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0D0808C(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1EF647D88, type metadata accessor for LifeEventStructs.ShoppingActivity, (uint64_t)&unk_1C10D5B6C);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0D080C8(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1EF647D90, type metadata accessor for LifeEventStructs.MeetingActivity, (uint64_t)&unk_1C10D5E60);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0D08104(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1EF647D98, type metadata accessor for LifeEventStructs.WorkingActivity, (uint64_t)&unk_1C10D5D88);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0D08140(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1EF647DA0, type metadata accessor for LifeEventStructs.TransportationActivity, (uint64_t)&unk_1C10D5F38);
  *(_QWORD *)(a1 + 8) = v2;
}

char *sub_1C0D0817C(char *result, __int128 *a2, void (*a3)(char *), void (*a4)(_QWORD), uint64_t i)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v12;
  uint64_t v14;
  __int128 *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(_QWORD);
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  _OWORD v41[2];
  uint64_t v42;
  _QWORD *v43;

  v7 = v6;
  v8 = *((_QWORD *)result + 2);
  if (v8)
  {
    v12 = v5;
    v14 = (uint64_t)result;
    if (qword_1ED741520 != -1)
      goto LABEL_23;
    while (1)
    {
      if ((sub_1C09E76A4((uint64_t)a2, qword_1ED78C338) & 1) == 0)
      {
        v43 = v12;
        v37 = (uint64_t (*)(_QWORD))i;
        goto LABEL_13;
      }
      v6 = v7;
      result = sub_1C0D6EF2C(v14);
      if (v7)
        return result;
      v15 = (__int128 *)*v12;
      a3(result);
      if (v8 < 2)
        break;
      sub_1C0C3B4EC(v14, (uint64_t)&v38);
      if (!*((_QWORD *)&v39 + 1))
      {
        v37 = (uint64_t (*)(_QWORD))i;
        sub_1C0784B6C((uint64_t)&v38, &qword_1ED74AB38);
        goto LABEL_11;
      }
      v41[0] = v38;
      v41[1] = v39;
      v42 = v40;
      v16 = sub_1C07B74CC();
      v7 = 0;
      sub_1C07B4990((uint64_t)v16, v17, v18, v19, v20, v21);
      v37 = (uint64_t (*)(_QWORD))i;
LABEL_12:
      v43 = v12;
      v22 = v16;
      a2 = v15;
      a4(v22);
LABEL_13:
      *(_QWORD *)&v38 = MEMORY[0x1E0DEE9D8];
      a4 = (void (*)(_QWORD))(v14 + 32);
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      for (i = 0; ; ++i)
      {
        v12 = (_QWORD *)(i + 1);
        if (__OFADD__(i, 1))
          break;
        sub_1C0A51F50((uint64_t)a4, (uint64_t)v41);
        type metadata accessor for LifeEventStructs.LocationRelationshipType(0);
        sub_1C077B5BC();
        sub_1C0FE15A0();
        v23 = sub_1C07B74CC();
        v7 = v6;
        if (v6)
        {
          v31 = swift_release();
          sub_1C07B4990(v31, v32, v33, v34, v35, v36);
          swift_bridgeObjectRelease();
          return (char *)swift_bridgeObjectRelease();
        }
        v24 = sub_1C0FDE86C((uint64_t)v23);
        v30 = sub_1C07B4990(v24, v25, v26, v27, v28, v29);
        MEMORY[0x1C3BA6800](v30);
        a3 = *(void (**)(char *))((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if ((unint64_t)a3 >= *(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1C106FF58();
        sub_1C106FFC4();
        a2 = &v38;
        sub_1C106FF28();
        a4 = (void (*)(_QWORD))((char *)a4 + 40);
        if (v12 == (_QWORD *)v8)
        {
          swift_bridgeObjectRelease();
          return (char *)v37(v38);
        }
      }
      __break(1u);
LABEL_23:
      swift_once();
    }
    v37 = (uint64_t (*)(_QWORD))i;
LABEL_11:
    v16 = 0;
    goto LABEL_12;
  }
  return result;
}

void sub_1C0D083C8(uint64_t a1, char *a2, uint64_t a3, _QWORD *a4, _QWORD *a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  _BOOL8 v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v65;
  uint64_t v66;
  _QWORD v67[4];
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75[2];
  _BYTE v76[40];

  v63 = sub_1C106A7E0();
  v62 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  sub_1C0778564();
  v61 = v7 - v6;
  v8 = sub_1C07ACF80(&qword_1ED762590);
  MEMORY[0x1E0C80A78](v8);
  sub_1C0778564();
  v11 = v10 - v9;
  v60 = sub_1C106F544();
  v12 = *(_QWORD *)(v60 - 8);
  MEMORY[0x1E0C80A78](v60);
  sub_1C0778564();
  v15 = v14 - v13;
  v65 = *a2;
  sub_1C078A924((uint64_t)(a2 + 24), (uint64_t)v76, &qword_1ED760400);
  v66 = *((_QWORD *)a2 + 7);
  sub_1C106F160();
  sub_1C078A924((uint64_t)v76, (uint64_t)&v68, &qword_1ED760400);
  v16 = sub_1C106F538();
  v17 = sub_1C1070384();
  v18 = os_log_type_enabled(v16, v17);
  if (v18)
  {
    v19 = swift_slowAlloc();
    v75[0] = swift_slowAlloc();
    *(_DWORD *)v19 = 136315394;
    v20 = ActivityType.value.getter();
    v67[0] = sub_1C0788DAC(v20, v21, v75);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2080;
    sub_1C078A924((uint64_t)&v68, (uint64_t)v67, &qword_1ED760400);
    sub_1C07ACF80(&qword_1ED760400);
    v22 = sub_1C106FB5C();
    v67[0] = sub_1C0788DAC(v22, v23, v75);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    sub_1C0784B6C((uint64_t)&v68, &qword_1ED760400);
    _os_log_impl(&dword_1C0771000, v16, v17, "Setting name for activity event with activityType: %s, metadata: %s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    sub_1C0776778();
  }
  sub_1C07B8C00(v18, &qword_1ED760400);

  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v15, v60);
  sub_1C07ACF80(&qword_1ED762CB0);
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1C1079220;
  LOBYTE(v68) = v65;
  v68 = ActivityType.value.getter();
  v69 = v25;
  v67[0] = 0x295D5A2D415B28;
  v67[1] = 0xE700000000000000;
  v75[0] = 3220512;
  v75[1] = 0xE300000000000000;
  v73 = v68;
  v74 = v25;
  v71 = v68;
  v72 = v25;
  v26 = sub_1C106AEF4();
  sub_1C07B2D8C(v11, 1, 1, v26);
  sub_1C07B1280();
  sub_1C107060C();
  sub_1C0784B6C(v11, &qword_1ED762590);
  v27 = sub_1C10705F4();
  v29 = v28;
  swift_bridgeObjectRelease();
  v30 = (_QWORD *)0xE700000000000000;
  sub_1C0778580();
  swift_bridgeObjectRelease();
  v68 = v27;
  v69 = v29;
  sub_1C106A7BC();
  v31 = sub_1C10705E8();
  v33 = v32;
  (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v61, v63);
  swift_bridgeObjectRelease();
  v68 = v31;
  v69 = v33;
  v34 = sub_1C10705DC();
  v36 = v35;
  sub_1C0778580();
  *(_QWORD *)(v24 + 32) = v34;
  *(_QWORD *)(v24 + 40) = v36;
  v37 = *(_QWORD *)(v66 + 16);
  if (v37)
  {
    v68 = 0;
    v69 = 0xE000000000000000;
    v38 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0() + 48;
    do
    {
      v30 = *(_QWORD **)v38;
      v39 = *(_QWORD *)(v38 + 8);
      if ((v69 & 0x2000000000000000) != 0)
        v40 = HIBYTE(v69) & 0xF;
      else
        v40 = v68 & 0xFFFFFFFFFFFFLL;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      if (v40)
        sub_1C106FC94();
      if (v39)
        sub_1C106FC94();
      swift_bridgeObjectRelease();
      v38 += 64;
      sub_1C0778580();
      swift_bridgeObjectRelease();
      sub_1C07767AC();
      --v37;
    }
    while (v37);
    swift_bridgeObjectRelease();
    sub_1C079F7D0(0x2068746977);
    sub_1C07767AC();
    sub_1C0791F9C();
    if (v41)
    {
      sub_1C078CD70();
      v24 = v55;
    }
    sub_1C078D898();
    sub_1C07A605C();
  }
  else
  {
    sub_1C078D898();
  }
  v43 = *(_QWORD *)(*v30 + *v42);
  if (v43
    && (v44 = *(_QWORD *)(v43 + OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs5Place_hasAddress)) != 0
    && *(_QWORD *)(v44 + OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs23AddressRelationshipType_name + 8)
    && (v45 = *(_QWORD *)(*v30 + *a5)) != 0
    && (v46 = *(_QWORD *)(v45 + OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs5Place_hasAddress)) != 0
    && *(_QWORD *)(v46 + OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs23AddressRelationshipType_name + 8))
  {
    v68 = 0x206D6F7266;
    v69 = 0xE500000000000000;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C106FC94();
    swift_bridgeObjectRelease();
    sub_1C106FC94();
    sub_1C106FC94();
  }
  else
  {
    sub_1C0AA45C0(a1, (uint64_t)&v68);
    if (!v70)
    {
      sub_1C07B8C00(v47, &qword_1ED74AB38);
      goto LABEL_30;
    }
    sub_1C0D6EF5C();
    sub_1C091274C((uint64_t)&v68);
    v68 = 2126945;
    v69 = 0xE300000000000000;
    sub_1C106FC94();
  }
  swift_bridgeObjectRelease();
  sub_1C0791F9C();
  if (v41)
  {
    sub_1C078CD70();
    v24 = v56;
  }
  sub_1C07A605C();
LABEL_30:
  sub_1C078A924((uint64_t)v76, (uint64_t)&v68, &qword_1ED760400);
  if (v70)
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      sub_1C079F7D0(8250);
      sub_1C07767AC();
      sub_1C0791F9C();
      if (v41)
      {
        sub_1C078CD70();
        v24 = v57;
      }
      sub_1C07A605C();
    }
  }
  else
  {
    sub_1C07B8C00(v48, &qword_1ED760400);
  }
  v68 = v24;
  sub_1C07ACF80(&qword_1ED762B70);
  sub_1C08243B0();
  v49 = sub_1C106FA54();
  v51 = v50;
  swift_bridgeObjectRelease();
  v68 = v49;
  v69 = v51;
  v52 = sub_1C106FD54();
  v53 = (uint64_t *)(*v30 + *a4);
  *v53 = v52;
  v53[1] = v54;
  swift_bridgeObjectRelease();
  sub_1C0784B6C((uint64_t)v76, &qword_1ED760400);
}

void sub_1C0D08BD4(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  _QWORD v58[3];
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;

  v3 = v2;
  v6 = sub_1C07ACF80(&qword_1ED759F70);
  MEMORY[0x1E0C80A78](v6);
  v59 = (char *)v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C07ACF80(&qword_1EF647DB8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (int *)type metadata accessor for FutureLifeEventStructs.LocationRelationshipType(0);
  v61 = *((_QWORD *)v11 - 1);
  MEMORY[0x1E0C80A78](v11);
  v67 = (uint64_t)v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v73 = (uint64_t)v58 - v14;
  MEMORY[0x1E0C80A78](v15);
  v60 = (uint64_t)v58 - v16;
  v17 = sub_1C07ACF80(&qword_1ED762CE0);
  MEMORY[0x1E0C80A78](v17);
  v69 = (char *)v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)v58 - v20;
  v22 = sub_1C106AE28();
  v71 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v74 = (char *)v58 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v72 = (char *)v58 - v25;
  v26 = sub_1C07ACF80(&qword_1EF647DB0);
  MEMORY[0x1E0C80A78](v26);
  MEMORY[0x1E0C80A78](v27);
  v29 = (int *)((char *)v58 - v28);
  MEMORY[0x1E0C80A78](v30);
  v33 = (char *)v58 - v32;
  v68 = *(_QWORD *)(a1 + 16);
  if (v68)
  {
    v66 = v31;
    if (qword_1ED741520 != -1)
      goto LABEL_33;
    while ((sub_1C09E76A4(a2, qword_1ED78C338) & 1) == 0)
    {
      v72 = v3;
LABEL_11:
      v33 = v69;
      a2 = v71;
      v21 = (char *)(a1 + ((*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80)));
      v62 = *(_QWORD *)(v71 + 72);
      v65 = *(void (**)(char *, char *, uint64_t))(v71 + 16);
      v58[1] = a1;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      a1 = 0;
      v70 = MEMORY[0x1E0DEE9D8];
      v63 = v10;
      v64 = v22;
      while (1)
      {
        v65(v33, v21, v22);
        v3 = (char *)(a1 + 1);
        if (__OFADD__(a1, 1))
          break;
        sub_1C07B2D8C((uint64_t)v33, 0, 1, v22);
        if (sub_1C07B2D80((uint64_t)v33, 1, v22) == 1)
          goto LABEL_29;
        (*(void (**)(char *, char *, uint64_t))(a2 + 32))(v74, v33, v22);
        v36 = sub_1C106E41C();
        v37 = v73;
        sub_1C07B2D8C(v73, 1, 1, v36);
        sub_1C106CFF4();
        v38 = v11[6];
        if (qword_1ED762E80 != -1)
          swift_once();
        v39 = type metadata accessor for Source();
        v40 = sub_1C079E000(v39, (uint64_t)&unk_1ED762268);
        sub_1C0A53D64(v40, v37 + v38);
        sub_1C106DEC4();
        v41 = (_QWORD *)(v37 + v11[8]);
        *v41 = 0;
        v41[1] = 0;
        v29 = v11;
        v42 = v37 + v11[9];
        v43 = type metadata accessor for FutureLifeEventStructs.Place(0);
        sub_1C07B2D8C(v42, 1, 1, v43);
        v44 = v66;
        v45 = v72;
        sub_1C0D8EA8C(v66);
        v72 = v45;
        if (v45)
        {
          sub_1C07B1F90(v73, type metadata accessor for FutureLifeEventStructs.LocationRelationshipType);
          (*(void (**)(char *, uint64_t))(v71 + 8))(v74, v64);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return;
        }
        sub_1C07B2D8C(v44, 0, 1, v43);
        sub_1C0D0B0F8(v44, v42);
        v46 = sub_1C07B2D80(v42, 1, v43);
        a2 = v71;
        if (!v46)
        {
          v47 = (uint64_t)v59;
          sub_1C106DDBC();
          sub_1C07B2D8C(v47, 0, 1, v36);
          v48 = v47;
          a2 = v71;
          sub_1C0B62020(v48, v42 + *(int *)(v43 + 20));
        }
        sub_1C0784B6C(v44, &qword_1EF647DB0);
        v10 = v63;
        sub_1C0D0B140(v73, (uint64_t)v63);
        v11 = v29;
        sub_1C07B2D8C((uint64_t)v10, 0, 1, (uint64_t)v29);
        v22 = v64;
        (*(void (**)(char *, uint64_t))(a2 + 8))(v74, v64);
        if (sub_1C07B2D80((uint64_t)v10, 1, (uint64_t)v29) == 1)
        {
          sub_1C0784B6C((uint64_t)v10, &qword_1EF647DB8);
          v33 = v69;
        }
        else
        {
          v49 = v60;
          sub_1C0D0B140((uint64_t)v10, v60);
          sub_1C0D0B140(v49, v67);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C07EC2F4();
            v70 = v52;
          }
          v50 = *(_QWORD *)(v70 + 16);
          if (v50 >= *(_QWORD *)(v70 + 24) >> 1)
          {
            sub_1C07EC2F4();
            v70 = v53;
          }
          v51 = v70;
          *(_QWORD *)(v70 + 16) = v50 + 1;
          sub_1C0D0B140(v67, v51+ ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80))+ *(_QWORD *)(v61 + 72) * v50);
          v33 = v69;
          a2 = v71;
        }
        ++a1;
        v21 += v62;
        if (v3 == (char *)v68)
        {
          sub_1C07B2D8C((uint64_t)v33, 1, 1, v22);
LABEL_29:
          swift_bridgeObjectRelease();
          v54 = *(int *)(type metadata accessor for FutureLifeEventStructs.CommuteActivity(0) + 68);
          v55 = v58[2];
          swift_bridgeObjectRelease();
          *(_QWORD *)(v55 + v54) = v70;
          sub_1C0F95750();
          return;
        }
      }
      __break(1u);
LABEL_33:
      swift_once();
    }
    sub_1C0D8E928(a1, (uint64_t)v33);
    if (v3)
      return;
    sub_1C0F8D684();
    if (v68 >= 2)
    {
      sub_1C0C3B594(a1, (uint64_t)v21);
      if (sub_1C07B2D80((uint64_t)v21, 1, v22) != 1)
      {
        v56 = v71;
        v57 = v72;
        (*(void (**)(void))(v71 + 32))();
        sub_1C0D8EA8C((uint64_t)v29);
        (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v22);
        v34 = 0;
        goto LABEL_9;
      }
      sub_1C0784B6C((uint64_t)v21, &qword_1ED762CE0);
    }
    v34 = 1;
LABEL_9:
    v72 = 0;
    v35 = type metadata accessor for FutureLifeEventStructs.Place(0);
    sub_1C07B2D8C((uint64_t)v29, v34, 1, v35);
    sub_1C0F8D71C();
    goto LABEL_11;
  }
}

uint64_t sub_1C0D09338(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int *v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t result;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  _QWORD v54[3];
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;

  v2 = v1;
  v4 = sub_1C106A7E0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v56 = (char *)v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C07ACF80(&qword_1ED762590);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C07ACF80(&qword_1EF647DB0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v54 - v14;
  v16 = (int *)type metadata accessor for FutureLifeEventStructs.CommuteActivity(0);
  sub_1C078A924(v2 + v16[14], (uint64_t)v15, &qword_1EF647DB0);
  v17 = type metadata accessor for FutureLifeEventStructs.Place(0);
  v18 = sub_1C07B2D80((uint64_t)v15, 1, v17);
  v57 = v5;
  if (v18
    || (v19 = (uint64_t)&v15[*(int *)(v17 + 36)],
        v20 = type metadata accessor for FutureLifeEventStructs.AddressRelationshipType(0),
        sub_1C07B2D80(v19, 1, v20)))
  {
    v21 = (uint64_t)v15;
LABEL_4:
    sub_1C0784B6C(v21, &qword_1EF647DB0);
    goto LABEL_5;
  }
  v35 = (uint64_t *)(v19 + *(int *)(v20 + 104));
  v36 = v35[1];
  v55 = *v35;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0784B6C((uint64_t)v15, &qword_1EF647DB0);
  if (!v36)
    goto LABEL_5;
  sub_1C078A924(v2 + v16[12], (uint64_t)v12, &qword_1EF647DB0);
  if (sub_1C07B2D80((uint64_t)v12, 1, v17)
    || (v54[2] = v36, v37 = (uint64_t)&v12[*(int *)(v17 + 36)], sub_1C07B2D80(v37, 1, v20)))
  {
    swift_bridgeObjectRelease();
    v21 = (uint64_t)v12;
    goto LABEL_4;
  }
  v38 = (uint64_t *)(v37 + *(int *)(v20 + 104));
  v40 = *v38;
  v39 = v38[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0784B6C((uint64_t)v12, &qword_1EF647DB0);
  if (v39)
  {
    v68 = 0;
    v69 = 0xE000000000000000;
    sub_1C1070774();
    LOBYTE(v66) = a1;
    v66 = ActivityType.value.getter();
    v67 = v41;
    v64 = 0x295D5A2D415B28;
    v65 = 0xE700000000000000;
    v62 = 3220512;
    v63 = 0xE300000000000000;
    v60 = v66;
    v61 = v41;
    v58 = v66;
    v59 = v41;
    v42 = sub_1C106AEF4();
    sub_1C07B2D8C((uint64_t)v9, 1, 1, v42);
    sub_1C07B1280();
    sub_1C107060C();
    v54[0] = v40;
    v54[1] = v39;
    sub_1C0784B6C((uint64_t)v9, &qword_1ED762590);
    v43 = sub_1C10705F4();
    v45 = v44;
    swift_bridgeObjectRelease();
    v46 = v4;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v66 = v43;
    v67 = v45;
    v47 = v56;
    sub_1C106A7BC();
    v48 = sub_1C10705E8();
    v50 = v49;
    (*(void (**)(char *, uint64_t))(v57 + 8))(v47, v46);
    swift_bridgeObjectRelease();
    v66 = v48;
    v67 = v50;
    v51 = sub_1C10705DC();
    v53 = v52;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v68 = v51;
    v69 = v53;
    sub_1C106FC94();
    sub_1C106FC94();
    swift_bridgeObjectRelease();
    sub_1C106FC94();
    sub_1C106FC94();
    swift_bridgeObjectRelease();
    v31 = v68;
    v32 = v69;
    v33 = (uint64_t *)(v2 + v16[9]);
    goto LABEL_6;
  }
  swift_bridgeObjectRelease();
LABEL_5:
  v68 = 0x20657275747546;
  v69 = 0xE700000000000000;
  LOBYTE(v66) = a1;
  v66 = ActivityType.value.getter();
  v67 = v22;
  v64 = 0x295D5A2D415B28;
  v65 = 0xE700000000000000;
  v62 = 3220512;
  v63 = 0xE300000000000000;
  v60 = v66;
  v61 = v22;
  v58 = v66;
  v59 = v22;
  v23 = sub_1C106AEF4();
  sub_1C07B2D8C((uint64_t)v9, 1, 1, v23);
  sub_1C07B1280();
  sub_1C107060C();
  v55 = v2;
  sub_1C0784B6C((uint64_t)v9, &qword_1ED762590);
  v24 = sub_1C10705F4();
  v26 = v25;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v66 = v24;
  v67 = v26;
  v27 = v56;
  sub_1C106A7BC();
  v28 = sub_1C10705E8();
  v30 = v29;
  (*(void (**)(char *, uint64_t))(v57 + 8))(v27, v4);
  swift_bridgeObjectRelease();
  v66 = v28;
  v67 = v30;
  sub_1C10705DC();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  v31 = v68;
  v32 = v69;
  v33 = (uint64_t *)(v55 + v16[9]);
LABEL_6:
  result = swift_bridgeObjectRelease();
  *v33 = v31;
  v33[1] = v32;
  return result;
}

uint64_t sub_1C0D09978()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1C07BCA28();
  if (qword_1ED749BD8 != -1)
    swift_once();
  v3 = sub_1C078DE84();
  sub_1C078FADC(v3, (uint64_t)&unk_1ED78C360);
  v4 = sub_1C07A4B50();
  type metadata accessor for LifeEventStructs.TransportationActivity(v4);
  sub_1C077B5BC();
  sub_1C07990B8();
  sub_1C1001608();
  sub_1C07B43B4();
  if (!v1)
  {
    v5 = (unsigned __int8 *)(v0 + *(int *)(sub_1C07ACF80(&qword_1ED74AF90) + 32));
    v6 = sub_1C079B9A0(v2, (__int128 *)*v5, (void (*)(char *))sub_1C0FDE288, (void (*)(_QWORD))sub_1C0FDE2A4, (uint64_t)sub_1C0FDE2C0);
    sub_1C07A1F7C((uint64_t)v6, v7, (uint64_t)&OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs22TransportationActivity_startingLocation, &OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs22TransportationActivity_name, &OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs22TransportationActivity_endLocation);
    sub_1C077C14C();
    v8 = sub_1C0795C88();
    sub_1C0D85390(v8, v9);
    sub_1C07767F4();
    if (v5 == (unsigned __int8 *)-24)
    {
      if ((MEMORY[0xFFFFFFFFFFFFFFF8] & 1) != 0)
      {
        sub_1C077C14C();
        v11 = sub_1C0795028();
      }
      else
      {
        sub_1C077C14C();
        v11 = sub_1C079FD58();
      }
      sub_1C07A13F4(v11, v12, OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs22TransportationActivity_confidence);
      sub_1C077960C();
      sub_1C077C14C();
      v13 = sub_1C0793F68();
      sub_1C0FDDED0(v13);
      sub_1C07767F4();
      sub_1C077C14C();
      v14 = sub_1C07A5744();
      sub_1C0FDDEEC(v14);
    }
    sub_1C07767F4();
  }
  return sub_1C079D810();
}

void sub_1C0D09B18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1C07A8250();
  sub_1C07AE118();
  if (qword_1ED749BD8 != -1)
    swift_once();
  v2 = sub_1C078DE84();
  sub_1C078FADC(v2, (uint64_t)&unk_1ED78C360);
  v3 = sub_1C07A4B50();
  type metadata accessor for LifeEventStructs.WorkingActivity(v3);
  sub_1C077B5BC();
  sub_1C07990B8();
  sub_1C100A218();
  sub_1C07B43B4();
  if (!v0)
  {
    sub_1C07ACF80(&qword_1ED74AF90);
    sub_1C07A2A70();
    v6 = sub_1C079AF20(v4, v5, (void (*)(char *))sub_1C0FDE32C, (void (*)(_QWORD))sub_1C0FDE348, (uint64_t)sub_1C0FDE364);
    sub_1C0796AB0((uint64_t)v6, v7, (uint64_t)&OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs15WorkingActivity_startingLocation, &OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs15WorkingActivity_name, &OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs15WorkingActivity_endLocation);
    if ((*(_BYTE *)(v1 + 16) & 1) != 0)
    {
      sub_1C077C14C();
      v8 = sub_1C0795028();
    }
    else
    {
      sub_1C077C14C();
      v8 = sub_1C079FD58();
    }
    sub_1C07A13F4(v8, v9, OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs15WorkingActivity_confidence);
    sub_1C077960C();
    sub_1C077C14C();
    v10 = sub_1C0797730();
    sub_1C0FDDF08(v10);
    sub_1C07767F4();
    sub_1C077C14C();
    v11 = sub_1C07A5744();
    sub_1C0FDDF24(v11);
    sub_1C07767F4();
  }
  sub_1C079D810();
  sub_1C07A3EEC();
}

void sub_1C0D09C54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1C07A8250();
  sub_1C07AE118();
  if (qword_1ED749BD8 != -1)
    swift_once();
  v2 = sub_1C078DE84();
  sub_1C078FADC(v2, (uint64_t)&unk_1ED78C360);
  v3 = sub_1C07A4B50();
  type metadata accessor for LifeEventStructs.MeetingActivity(v3);
  sub_1C077B5BC();
  sub_1C07990B8();
  sub_1C1006188();
  sub_1C07B43B4();
  if (!v0)
  {
    sub_1C07ACF80(&qword_1ED74AF90);
    sub_1C07A2A70();
    v6 = sub_1C079AF20(v4, v5, (void (*)(char *))sub_1C0FDE380, (void (*)(_QWORD))sub_1C0FDE39C, (uint64_t)sub_1C0FDE3B8);
    sub_1C0796AB0((uint64_t)v6, v7, (uint64_t)&OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs15MeetingActivity_startingLocation, &OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs15MeetingActivity_name, &OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs15MeetingActivity_endLocation);
    if ((*(_BYTE *)(v1 + 16) & 1) != 0)
    {
      sub_1C077C14C();
      v8 = sub_1C0795028();
    }
    else
    {
      sub_1C077C14C();
      v8 = sub_1C079FD58();
    }
    sub_1C07A13F4(v8, v9, OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs15MeetingActivity_confidence);
    sub_1C077960C();
    sub_1C077C14C();
    v10 = sub_1C0797730();
    sub_1C0FDDF40(v10);
    sub_1C07767F4();
    sub_1C077C14C();
    v11 = sub_1C07A5744();
    sub_1C0FDDF5C(v11);
    sub_1C07767F4();
  }
  sub_1C079D810();
  sub_1C07A3EEC();
}

void sub_1C0D09D90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1C07A8250();
  sub_1C07AE118();
  if (qword_1ED749BD8 != -1)
    swift_once();
  v2 = sub_1C078DE84();
  sub_1C078FADC(v2, (uint64_t)&unk_1ED78C360);
  v3 = sub_1C07A4B50();
  type metadata accessor for LifeEventStructs.ShoppingActivity(v3);
  sub_1C077B5BC();
  sub_1C07990B8();
  sub_1C1013C90();
  sub_1C07B43B4();
  if (!v0)
  {
    sub_1C07ACF80(&qword_1ED74AF90);
    sub_1C07A2A70();
    v6 = sub_1C079AF20(v4, v5, (void (*)(char *))sub_1C0FDE3D4, (void (*)(_QWORD))sub_1C0FDE3F0, (uint64_t)sub_1C0FDE40C);
    sub_1C0796AB0((uint64_t)v6, v7, (uint64_t)&OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs16ShoppingActivity_startingLocation, &OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs16ShoppingActivity_name, &OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs16ShoppingActivity_endLocation);
    if ((*(_BYTE *)(v1 + 16) & 1) != 0)
    {
      sub_1C077C14C();
      v8 = sub_1C0795028();
    }
    else
    {
      sub_1C077C14C();
      v8 = sub_1C079FD58();
    }
    sub_1C07A13F4(v8, v9, OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs16ShoppingActivity_confidence);
    sub_1C077960C();
    sub_1C077C14C();
    v10 = sub_1C0797730();
    sub_1C0FDDF78(v10);
    sub_1C07767F4();
    sub_1C077C14C();
    v11 = sub_1C07A5744();
    sub_1C0FDDF94(v11);
    sub_1C07767F4();
  }
  sub_1C079D810();
  sub_1C07A3EEC();
}

void sub_1C0D09ECC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1C07A8250();
  sub_1C07AE118();
  if (qword_1ED749BD8 != -1)
    swift_once();
  v2 = sub_1C078DE84();
  sub_1C078FADC(v2, (uint64_t)&unk_1ED78C360);
  v3 = sub_1C07A4B50();
  type metadata accessor for LifeEventStructs.SleepingActivity(v3);
  sub_1C077B5BC();
  sub_1C07990B8();
  sub_1C101812C();
  sub_1C07B43B4();
  if (!v0)
  {
    sub_1C07ACF80(&qword_1ED74AF90);
    sub_1C07A2A70();
    v6 = sub_1C079AF20(v4, v5, (void (*)(char *))sub_1C0FDE428, (void (*)(_QWORD))sub_1C0FDE444, (uint64_t)sub_1C0FDE460);
    sub_1C0796AB0((uint64_t)v6, v7, (uint64_t)&OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs16SleepingActivity_startingLocation, &OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs16SleepingActivity_name, &OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs16SleepingActivity_endLocation);
    if ((*(_BYTE *)(v1 + 16) & 1) != 0)
    {
      sub_1C077C14C();
      v8 = sub_1C0795028();
    }
    else
    {
      sub_1C077C14C();
      v8 = sub_1C079FD58();
    }
    sub_1C07A13F4(v8, v9, OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs16SleepingActivity_confidence);
    sub_1C077960C();
    sub_1C077C14C();
    v10 = sub_1C0797730();
    sub_1C0FDDFB0(v10);
    sub_1C07767F4();
    sub_1C077C14C();
    v11 = sub_1C07A5744();
    sub_1C0FDDFCC(v11);
    sub_1C07767F4();
  }
  sub_1C079D810();
  sub_1C07A3EEC();
}

void sub_1C0D0A008()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1C07A8250();
  sub_1C07AE118();
  if (qword_1ED749BD8 != -1)
    swift_once();
  v2 = sub_1C078DE84();
  sub_1C078FADC(v2, (uint64_t)&unk_1ED78C360);
  v3 = sub_1C07A4B50();
  type metadata accessor for LifeEventStructs.ReadingActivity(v3);
  sub_1C077B5BC();
  sub_1C07990B8();
  sub_1C10047C0();
  sub_1C07B43B4();
  if (!v0)
  {
    sub_1C07ACF80(&qword_1ED74AF90);
    sub_1C07A2A70();
    v6 = sub_1C079AF20(v4, v5, (void (*)(char *))sub_1C0FDE47C, (void (*)(_QWORD))sub_1C0FDE498, (uint64_t)sub_1C0FDE4B4);
    sub_1C0796AB0((uint64_t)v6, v7, (uint64_t)&OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs15ReadingActivity_startingLocation, &OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs15ReadingActivity_name, &OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs15ReadingActivity_endLocation);
    if ((*(_BYTE *)(v1 + 16) & 1) != 0)
    {
      sub_1C077C14C();
      v8 = sub_1C0795028();
    }
    else
    {
      sub_1C077C14C();
      v8 = sub_1C079FD58();
    }
    sub_1C07A13F4(v8, v9, OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs15ReadingActivity_confidence);
    sub_1C077960C();
    sub_1C077C14C();
    v10 = sub_1C0797730();
    sub_1C0FDDFE8(v10);
    sub_1C07767F4();
    sub_1C077C14C();
    v11 = sub_1C07A5744();
    sub_1C0FDE004(v11);
    sub_1C07767F4();
  }
  sub_1C079D810();
  sub_1C07A3EEC();
}

void sub_1C0D0A144()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t vars0;
  uint64_t vars8;

  sub_1C07BCA28();
  if (qword_1ED749BD8 != -1)
    swift_once();
  v3 = sub_1C078DE84();
  sub_1C078FADC(v3, (uint64_t)&unk_1ED78C360);
  v4 = sub_1C07A4B50();
  type metadata accessor for LifeEventStructs.GamingActivity(v4);
  sub_1C077B5BC();
  v5 = sub_1C07990B8();
  sub_1C0FF2D08(v5, v6, v7, v8, v9, v10, v11, v12, v21, SHIDWORD(v21), v22, v23, v24, v25, v26, v27, v28, v29, v30,
    vars0,
    vars8);
  sub_1C07B43B4();
  if (!v1)
  {
    v13 = (unsigned __int8 *)(v0 + *(int *)(sub_1C07ACF80(&qword_1ED74AF90) + 32));
    v14 = sub_1C079B9A0(v2, (__int128 *)*v13, (void (*)(char *))sub_1C0FDE4D0, (void (*)(_QWORD))sub_1C0FDE4EC, (uint64_t)sub_1C0FDE508);
    sub_1C07A1F7C((uint64_t)v14, v15, (uint64_t)&OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs14GamingActivity_startingLocation, &OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs14GamingActivity_name, &OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs14GamingActivity_endLocation);
    sub_1C077C14C();
    v16 = sub_1C0795C88();
    sub_1C0A5FC0C(v16);
    sub_1C07767F4();
    if (v13 == (unsigned __int8 *)-24)
    {
      if ((MEMORY[0xFFFFFFFFFFFFFFF8] & 1) != 0)
      {
        sub_1C077C14C();
        v17 = sub_1C0795028();
      }
      else
      {
        sub_1C077C14C();
        v17 = sub_1C079FD58();
      }
      sub_1C07A13F4(v17, v18, OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs14GamingActivity_confidence);
      sub_1C077960C();
      sub_1C077C14C();
      v19 = sub_1C0793F68();
      sub_1C0FDE020(v19);
      sub_1C07767F4();
      sub_1C077C14C();
      v20 = sub_1C07A5744();
      sub_1C0FDE03C(v20);
    }
    sub_1C07767F4();
  }
  sub_1C079D810();
  sub_1C07932A4();
}

void sub_1C0D0A2C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1C07A8250();
  sub_1C07AE118();
  if (qword_1ED749BD8 != -1)
    swift_once();
  v2 = sub_1C078DE84();
  sub_1C078FADC(v2, (uint64_t)&unk_1ED78C360);
  v3 = sub_1C07A4B50();
  type metadata accessor for LifeEventStructs.ExercisingActivity(v3);
  sub_1C077B5BC();
  sub_1C07990B8();
  sub_1C100E210();
  sub_1C07B43B4();
  if (!v0)
  {
    sub_1C07ACF80(&qword_1ED74AF90);
    sub_1C07A2A70();
    v6 = sub_1C079AF20(v4, v5, (void (*)(char *))sub_1C0FDE524, (void (*)(_QWORD))sub_1C0FDE540, (uint64_t)sub_1C0FDE55C);
    sub_1C0796AB0((uint64_t)v6, v7, (uint64_t)&OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs18ExercisingActivity_startingLocation, &OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs18ExercisingActivity_name, &OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs18ExercisingActivity_endLocation);
    if ((*(_BYTE *)(v1 + 16) & 1) != 0)
    {
      sub_1C077C14C();
      v8 = sub_1C0795028();
    }
    else
    {
      sub_1C077C14C();
      v8 = sub_1C079FD58();
    }
    sub_1C07A13F4(v8, v9, OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs18ExercisingActivity_confidence);
    sub_1C077960C();
    sub_1C077C14C();
    v10 = sub_1C0797730();
    sub_1C0FDE058(v10);
    sub_1C07767F4();
    sub_1C077C14C();
    v11 = sub_1C07A5744();
    sub_1C0FDE074(v11);
    sub_1C07767F4();
  }
  sub_1C079D810();
  sub_1C07A3EEC();
}

void sub_1C0D0A3FC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t vars0;
  uint64_t vars8;

  sub_1C07BCA28();
  if (qword_1ED749BD8 != -1)
    swift_once();
  v3 = sub_1C078DE84();
  sub_1C078FADC(v3, (uint64_t)&unk_1ED78C360);
  v4 = sub_1C07A4B50();
  type metadata accessor for LifeEventStructs.CommuteActivity(v4);
  sub_1C077B5BC();
  v5 = sub_1C07990B8();
  sub_1C1011CB8(v5, v6, v7, v8, v9, v10, v11, v12, v20, SHIDWORD(v20), v21, v22, v23, v24, v25, v26, v27, v28, v29,
    vars0,
    vars8);
  sub_1C07B43B4();
  if (!v1)
  {
    v13 = (unsigned __int8 *)(v0 + *(int *)(sub_1C07ACF80(&qword_1ED74AF90) + 32));
    v14 = sub_1C079B9A0(v2, (__int128 *)*v13, (void (*)(char *))sub_1C0FDE578, (void (*)(_QWORD))sub_1C0FDE594, (uint64_t)sub_1C0FDE5B0);
    sub_1C07A1F7C((uint64_t)v14, v15, (uint64_t)&OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs15CommuteActivity_startingLocation, &OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs15CommuteActivity_name, &OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs15CommuteActivity_endLocation);
    sub_1C077C14C();
    sub_1C0795C88();
    sub_1C08C3264();
    sub_1C07767F4();
    if (v13 == (unsigned __int8 *)-24)
    {
      if ((MEMORY[0xFFFFFFFFFFFFFFF8] & 1) != 0)
      {
        sub_1C077C14C();
        v16 = sub_1C0795028();
      }
      else
      {
        sub_1C077C14C();
        v16 = sub_1C079FD58();
      }
      sub_1C07A13F4(v16, v17, OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs15CommuteActivity_confidence);
      sub_1C077960C();
      sub_1C077C14C();
      v18 = sub_1C0793F68();
      sub_1C0FDE090(v18);
      sub_1C07767F4();
      sub_1C077C14C();
      v19 = sub_1C07A5744();
      sub_1C0FDE0AC(v19);
    }
    sub_1C07767F4();
  }
  sub_1C079D810();
  sub_1C07932A4();
}

void sub_1C0D0A578()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1C07A8250();
  sub_1C07AE118();
  if (qword_1ED749BD8 != -1)
    swift_once();
  v2 = sub_1C078DE84();
  sub_1C078FADC(v2, (uint64_t)&unk_1ED78C360);
  v3 = sub_1C07A4B50();
  type metadata accessor for LifeEventStructs.DiningActivity(v3);
  sub_1C077B5BC();
  sub_1C07990B8();
  sub_1C0FF8B44();
  sub_1C07B43B4();
  if (!v0)
  {
    sub_1C07ACF80(&qword_1ED74AF90);
    sub_1C07A2A70();
    v6 = sub_1C079AF20(v4, v5, (void (*)(char *))sub_1C0FDE5CC, (void (*)(_QWORD))sub_1C0FDE5E8, (uint64_t)sub_1C0FDE604);
    sub_1C0796AB0((uint64_t)v6, v7, (uint64_t)&OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs14DiningActivity_startingLocation, &OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs14DiningActivity_name, &OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs14DiningActivity_endLocation);
    if ((*(_BYTE *)(v1 + 16) & 1) != 0)
    {
      sub_1C077C14C();
      v8 = sub_1C0795028();
    }
    else
    {
      sub_1C077C14C();
      v8 = sub_1C079FD58();
    }
    sub_1C07A13F4(v8, v9, OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs14DiningActivity_confidence);
    sub_1C077960C();
    sub_1C077C14C();
    v10 = sub_1C0797730();
    sub_1C0FDE0C8(v10);
    sub_1C07767F4();
    sub_1C077C14C();
    v11 = sub_1C07A5744();
    sub_1C0FDE0E4(v11);
    sub_1C07767F4();
  }
  sub_1C079D810();
  sub_1C07A3EEC();
}

