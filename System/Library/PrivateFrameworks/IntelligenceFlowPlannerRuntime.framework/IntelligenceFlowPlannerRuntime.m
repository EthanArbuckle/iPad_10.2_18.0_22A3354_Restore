void static RequirementStatus.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t *v11;
  int EnumCaseMultiPayload;
  uint64_t *v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_23F362ABC();
  v4 = v3;
  v6 = v5;
  v19 = sub_23F61814C();
  v7 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8]();
  sub_23F362B98();
  type metadata accessor for RequirementStatus();
  sub_23F362850();
  MEMORY[0x24BDAC7A8]();
  sub_23F36298C();
  MEMORY[0x24BDAC7A8]();
  v9 = (uint64_t *)((char *)&v18 - v8);
  sub_23F35D2E8(&qword_256E6F4B0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8]();
  sub_23F362838();
  v11 = (uint64_t *)(v0 + *(int *)(v10 + 48));
  sub_23F362A98(v6, v0);
  sub_23F362A98(v4, (uint64_t)v11);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_23F362600(v0, v2, (uint64_t (*)(_QWORD))type metadata accessor for RequirementStatus);
      if (sub_23F362B48() == 1)
      {
        v13 = v11;
        v14 = v19;
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(v7 + 32))(v1, v13, v19);
        sub_23F618140();
        v15 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
        v15(v1, v14);
        v16 = ((uint64_t (*)(uint64_t, uint64_t))v15)(v2, v14);
LABEL_12:
        sub_23F362D10(v16, (uint64_t (*)(_QWORD))type metadata accessor for RequirementStatus);
        goto LABEL_13;
      }
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v2, v19);
    }
    else
    {
      v16 = sub_23F362B48();
      if ((_DWORD)v16 == 2)
        goto LABEL_12;
    }
  }
  else
  {
    sub_23F362600(v0, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for RequirementStatus);
    v17 = *v9;
    if (!sub_23F362B48())
    {
      sub_23F35DBCC(v17, *v11);
      sub_23F362D08();
      v16 = sub_23F362984();
      goto LABEL_12;
    }
    sub_23F362984();
  }
  sub_23F3625D8(v0, &qword_256E6F4B0);
LABEL_13:
  sub_23F362948();
}

uint64_t type metadata accessor for RequirementStatus()
{
  uint64_t result;

  result = qword_256E6F648;
  if (!qword_256E6F648)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F35D2E8(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x242670A2C]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

void sub_23F35D328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  int v35;
  unint64_t v36;
  BOOL v37;

  sub_23F362BF4();
  if (v12 == v13 || (v14 = v13, v15 = v12, sub_23F362BB4(), !v37))
  {
LABEL_31:
    sub_23F362894();
    return;
  }
  v16 = 0;
  sub_23F3628EC();
  v17 = v14 + 56;
  while (1)
  {
    if (v11)
    {
      sub_23F3629D4();
      v19 = v18 | (v16 << 6);
      goto LABEL_21;
    }
    v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v20 >= a11)
      goto LABEL_31;
    v21 = *(_QWORD *)(a10 + 8 * v20);
    ++v16;
    if (!v21)
    {
      v16 = v20 + 1;
      if (v20 + 1 >= a11)
        goto LABEL_31;
      v21 = *(_QWORD *)(a10 + 8 * v16);
      if (!v21)
      {
        v16 = v20 + 2;
        if (v20 + 2 >= a11)
          goto LABEL_31;
        v21 = *(_QWORD *)(a10 + 8 * v16);
        if (!v21)
          break;
      }
    }
LABEL_20:
    v11 = (v21 - 1) & v21;
    v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_21:
    v23 = *(_QWORD *)(v15 + 48) + 24 * v19;
    v24 = *(_QWORD *)v23;
    v25 = *(_QWORD *)(v23 + 8);
    v26 = *(unsigned __int8 *)(v23 + 16);
    sub_23F362B60();
    sub_23F61CD54();
    v27 = v25 >> 14;
    sub_23F61CD54();
    sub_23F61CD3C();
    v28 = sub_23F362D50();
    v29 = -1 << *(_BYTE *)(v14 + 32);
    v30 = v28 & ~v29;
    if (((*(_QWORD *)(v17 + ((v30 >> 3) & 0xFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
      goto LABEL_31;
    v31 = ~v29;
    while (1)
    {
      v32 = *(_QWORD *)(v14 + 48) + 24 * v30;
      v33 = *(_QWORD *)v32;
      v34 = *(_QWORD *)(v32 + 8);
      v35 = *(unsigned __int8 *)(v32 + 16);
      v36 = v34 >> 14;
      v37 = v24 >> 14 == v33 >> 14 && v36 == v27;
      if (v37 && v35 == v26)
        break;
      v30 = (v30 + 1) & v31;
      if (((*(_QWORD *)(v17 + ((v30 >> 3) & 0xFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
        goto LABEL_31;
    }
  }
  v22 = v20 + 3;
  if (v22 >= a11)
    goto LABEL_31;
  v21 = *(_QWORD *)(a10 + 8 * v22);
  if (v21)
  {
    v16 = v22;
    goto LABEL_20;
  }
  while (1)
  {
    v16 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v16 >= a11)
      goto LABEL_31;
    v21 = *(_QWORD *)(a10 + 8 * v16);
    ++v22;
    if (v21)
      goto LABEL_20;
  }
LABEL_33:
  __break(1u);
}

void sub_23F35D4F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t DecorationTupleParameter;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t (*v32)(uint64_t);
  unint64_t i;
  int64_t v34;
  unint64_t v35;
  int64_t v36;
  int64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t);
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  int EnumCaseMultiPayload;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t DecorationEntity;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t DecorationEntityValue;
  uint64_t v83;

  sub_23F362ABC();
  v3 = v2;
  v5 = v4;
  v72 = sub_23F618D28();
  v71 = *(_QWORD *)(v72 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F36285C();
  v69 = v7;
  v70 = sub_23F618D88();
  v73 = *(_QWORD *)(v70 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_23F362B98();
  DecorationEntityValue = type metadata accessor for QueryDecorationEntityValue(v9);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F362AAC();
  v78 = v11 - v12;
  MEMORY[0x24BDAC7A8](v13);
  v77 = (uint64_t)&v59 - v14;
  v80 = sub_23F35D2E8(&qword_256E6F7F8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F36285C();
  v83 = v16;
  DecorationTupleParameter = type metadata accessor for QueryDecorationTupleParameter(0);
  MEMORY[0x24BDAC7A8](DecorationTupleParameter);
  sub_23F362AAC();
  v20 = v18 - v19;
  MEMORY[0x24BDAC7A8](v21);
  sub_23F362D78();
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v59 - v24;
  if (v5 == v3 || *(_QWORD *)(v5 + 16) != *(_QWORD *)(v3 + 16))
    goto LABEL_46;
  v26 = 0;
  v27 = v5 + 56;
  v28 = 1 << *(_BYTE *)(v5 + 32);
  if (v28 < 64)
    v29 = ~(-1 << v28);
  else
    v29 = -1;
  v30 = v29 & *(_QWORD *)(v5 + 56);
  v31 = (unint64_t)(v28 + 63) >> 6;
  v79 = v3 + 56;
  v32 = type metadata accessor for QueryDecorationTupleParameter;
  v66 = v0;
  v63 = v5;
  v67 = v3;
  v62 = v23;
  v74 = v1;
  v61 = v25;
  v60 = v5 + 56;
  v59 = v31;
  if (v30)
    goto LABEL_7;
LABEL_8:
  v34 = v26 + 1;
  if (!__OFADD__(v26, 1))
  {
    if (v34 < v31)
    {
      v35 = *(_QWORD *)(v27 + 8 * v34);
      v36 = v26 + 1;
      if (v35)
        goto LABEL_21;
      v36 = v34 + 1;
      if (v34 + 1 >= v31)
        goto LABEL_46;
      v35 = *(_QWORD *)(v27 + 8 * v36);
      if (v35)
        goto LABEL_21;
      v36 = v34 + 2;
      if (v34 + 2 >= v31)
        goto LABEL_46;
      v35 = *(_QWORD *)(v27 + 8 * v36);
      if (v35)
      {
LABEL_21:
        v64 = (v35 - 1) & v35;
        v65 = v36;
        for (i = __clz(__rbit64(v35)) + (v36 << 6); ; i = __clz(__rbit64(v30)) | (v26 << 6))
        {
          v38 = *(_QWORD *)(v23 + 72);
          sub_23F362A98(*(_QWORD *)(v5 + 48) + v38 * i, (uint64_t)v25);
          sub_23F36262C((uint64_t)v25, v1, v32);
          sub_23F61CD30();
          sub_23F61BB78();
          sub_23F362CFC();
          sub_23F362984();
          v39 = (_QWORD *)(v1 + *(int *)(DecorationTupleParameter + 20));
          sub_23F61CD3C();
          DecorationEntity = type metadata accessor for QueryDecorationEntity(0);
          v40 = *(int *)(DecorationEntity + 20);
          v81 = v39;
          v75 = (uint64_t)v39 + v40;
          sub_23F55B478();
          sub_23F61CD30();
          sub_23F61CD3C();
          sub_23F61CD60();
          sub_23F61CD3C();
          v41 = sub_23F61CD60();
          v42 = -1 << *(_BYTE *)(v3 + 32);
          v43 = v41 & ~v42;
          v44 = v79;
          if (((*(_QWORD *)(v79 + ((v43 >> 3) & 0xFFFFFFFFFFFFF8)) >> v43) & 1) == 0)
          {
LABEL_45:
            sub_23F362658(v1, type metadata accessor for QueryDecorationTupleParameter);
            goto LABEL_46;
          }
          v45 = ~v42;
          while (1)
          {
            v46 = v32;
            sub_23F362A98(*(_QWORD *)(v3 + 48) + v43 * v38, v20);
            if ((sub_23F61BB6C() & 1) == 0)
              goto LABEL_40;
            v47 = (_QWORD *)(v20 + *(int *)(DecorationTupleParameter + 20));
            if (*v47 != *v81)
              goto LABEL_40;
            v48 = DecorationTupleParameter;
            v49 = v83 + *(int *)(v80 + 48);
            sub_23F362A98((uint64_t)v47 + *(int *)(DecorationEntity + 20), v83);
            sub_23F362A98(v75, v49);
            EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (!EnumCaseMultiPayload)
              break;
            if (EnumCaseMultiPayload == 1)
            {
              sub_23F362600(v83, v78, type metadata accessor for QueryDecorationEntityValue);
              if (sub_23F362AF4() == 1)
              {
                v51 = v69;
                v52 = v71;
                v53 = v72;
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v71 + 32))(v69, v49, v72);
                v68 = sub_23F618CEC();
                v54 = *(void (**)(uint64_t, uint64_t))(v52 + 8);
                v54(v51, v53);
                v55 = v78;
                v56 = v53;
                v3 = v67;
                goto LABEL_37;
              }
              (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v78, v72);
            }
            else if (sub_23F362AF4() == 2)
            {
              goto LABEL_42;
            }
LABEL_35:
            sub_23F3625D8(v83, &qword_256E6F7F8);
LABEL_39:
            v1 = v74;
            v44 = v79;
LABEL_40:
            v32 = v46;
            sub_23F362D70(v20);
            v43 = (v43 + 1) & v45;
            if (((*(_QWORD *)(v44 + ((v43 >> 3) & 0xFFFFFFFFFFFFF8)) >> v43) & 1) == 0)
              goto LABEL_45;
          }
          sub_23F362600(v83, v77, type metadata accessor for QueryDecorationEntityValue);
          if (sub_23F362AF4())
            break;
          v57 = v66;
          v58 = v70;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v73 + 32))(v66, v49, v70);
          v68 = sub_23F618D7C();
          v54 = *(void (**)(uint64_t, uint64_t))(v73 + 8);
          v54(v57, v58);
          v55 = v77;
          v56 = v58;
LABEL_37:
          v54(v55, v56);
          DecorationTupleParameter = v48;
          if ((v68 & 1) == 0)
          {
            sub_23F362658(v83, type metadata accessor for QueryDecorationEntityValue);
            goto LABEL_39;
          }
LABEL_42:
          sub_23F362658(v83, type metadata accessor for QueryDecorationEntityValue);
          sub_23F362D70(v20);
          v1 = v74;
          sub_23F362D70(v74);
          v32 = v46;
          v5 = v63;
          v23 = v62;
          v25 = v61;
          v27 = v60;
          v26 = v65;
          v31 = v59;
          v30 = v64;
          if (!v64)
            goto LABEL_8;
LABEL_7:
          v64 = (v30 - 1) & v30;
          v65 = v26;
        }
        (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v77, v70);
        goto LABEL_35;
      }
      v37 = v34 + 3;
      if (v37 < v31)
      {
        v35 = *(_QWORD *)(v27 + 8 * v37);
        if (v35)
        {
          v36 = v37;
          goto LABEL_21;
        }
        while (1)
        {
          v36 = v37 + 1;
          if (__OFADD__(v37, 1))
            goto LABEL_48;
          if (v36 >= v31)
            break;
          v35 = *(_QWORD *)(v27 + 8 * v36);
          ++v37;
          if (v35)
            goto LABEL_21;
        }
      }
    }
LABEL_46:
    sub_23F362948();
    return;
  }
  __break(1u);
LABEL_48:
  __break(1u);
}

uint64_t sub_23F35DBCC(uint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v4 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(result + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (!v7)
    {
      v9 = v3 + 1;
      if (__OFADD__(v3, 1))
      {
        __break(1u);
        goto LABEL_28;
      }
      if (v9 >= v8)
        return 1;
      v7 = *(_QWORD *)(v4 + 8 * v9);
      ++v3;
      if (!v7)
      {
        v3 = v9 + 1;
        if (v9 + 1 >= v8)
          return 1;
        v7 = *(_QWORD *)(v4 + 8 * v3);
        if (!v7)
        {
          v3 = v9 + 2;
          if (v9 + 2 >= v8)
            return 1;
          v7 = *(_QWORD *)(v4 + 8 * v3);
          if (!v7)
          {
            v3 = v9 + 3;
            if (v9 + 3 >= v8)
              return 1;
            v7 = *(_QWORD *)(v4 + 8 * v3);
            if (!v7)
              break;
          }
        }
      }
    }
LABEL_23:
    v7 &= v7 - 1;
    sub_23F61CD30();
    sub_23F61CD3C();
    result = sub_23F61CD60();
    v11 = result & ~(-1 << *(_BYTE *)(a2 + 32));
    if (((*(_QWORD *)(a2 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
      return 0;
  }
  v10 = v9 + 4;
  if (v10 >= v8)
    return 1;
  v7 = *(_QWORD *)(v4 + 8 * v10);
  if (v7)
  {
    v3 = v10;
    goto LABEL_23;
  }
  while (1)
  {
    v3 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v3 >= v8)
      return 1;
    v7 = *(_QWORD *)(v4 + 8 * v3);
    ++v10;
    if (v7)
      goto LABEL_23;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_23F35DD48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  char v34;
  uint64_t v35;
  char v36;
  char v37;
  char v38;

  sub_23F362BF4();
  if (v13 == v12 || (v14 = v12, sub_23F362BB4(), !v15))
  {
LABEL_35:
    sub_23F362894();
    return;
  }
  v16 = 0;
  sub_23F3628EC();
  if (!v11)
    goto LABEL_6;
LABEL_5:
  sub_23F3629D4();
  while (1)
  {
    sub_23F362B60();
    sub_23F362CDC();
    sub_23F480ED4();
    v29 = sub_23F362D50();
    v30 = -1 << *(_BYTE *)(v14 + 32);
    v31 = v29 & ~v30;
    sub_23F362A58();
    if ((v32 & 1) == 0)
      goto LABEL_34;
    sub_23F362C20();
    sub_23F491114();
    v34 = v33;
    sub_23F362984();
    if ((v34 & 1) == 0)
    {
      v35 = ~v30;
      while (1)
      {
        v31 = (v31 + 1) & v35;
        sub_23F362A58();
        if ((v36 & 1) == 0)
          break;
        sub_23F362C20();
        sub_23F491114();
        v38 = v37;
        sub_23F362984();
        if ((v38 & 1) != 0)
          goto LABEL_31;
      }
LABEL_34:
      sub_23F362C60();
      goto LABEL_35;
    }
LABEL_31:
    sub_23F362C60();
    if (v11)
      goto LABEL_5;
LABEL_6:
    v17 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_37;
    }
    if (v17 >= a11)
      goto LABEL_35;
    ++v16;
    if (!*(_QWORD *)(a10 + 8 * v17))
    {
      v16 = v17 + 1;
      sub_23F362D44();
      if (v18 == v19)
        goto LABEL_35;
      sub_23F362D38();
      if (!v21)
      {
        v16 = v20 + 2;
        sub_23F362D44();
        if (v18 == v19)
          goto LABEL_35;
        sub_23F362D38();
        if (!v23)
        {
          v16 = v22 + 3;
          sub_23F362D44();
          if (v18 == v19)
            goto LABEL_35;
          sub_23F362D38();
          if (!v25)
            break;
        }
      }
    }
LABEL_25:
    sub_23F362A6C();
  }
  v26 = v24 + 4;
  if (v26 >= a11)
    goto LABEL_35;
  if (*(_QWORD *)(a10 + 8 * v26))
  {
    v16 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v16 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    sub_23F362D44();
    if (v18 == v19)
      goto LABEL_35;
    sub_23F362D38();
    v26 = v27 + 1;
    if (v28)
      goto LABEL_25;
  }
LABEL_37:
  __break(1u);
}

void sub_23F35DEE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  int64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  BOOL v33;
  uint64_t v34;
  unint64_t j;
  uint64_t v36;
  char v37;
  _QWORD *v38;
  BOOL v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;

  sub_23F362BF4();
  if (v1 != v0 && (v2 = v0, sub_23F362BB4(), v33))
  {
    v4 = 0;
    v5 = *(_QWORD *)(v3 + 56);
    v40 = v3 + 56;
    v6 = 1 << *(_BYTE *)(v3 + 32);
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v8 = v7 & v5;
    v41 = (unint64_t)(v6 + 63) >> 6;
    if ((v7 & v5) == 0)
      goto LABEL_9;
LABEL_8:
    sub_23F3629D4();
    v42 = v10;
    for (i = v11 | (v10 << 6); ; i = v24 + (v23 << 6))
    {
      v25 = (uint64_t *)(*(_QWORD *)(v9 + 48) + 16 * i);
      v27 = *v25;
      v26 = v25[1];
      sub_23F362B60();
      sub_23F362CDC();
      sub_23F61C22C();
      v28 = sub_23F362D50();
      v29 = -1 << *(_BYTE *)(v2 + 32);
      v30 = v28 & ~v29;
      if (((*(_QWORD *)(v2 + 56 + ((v30 >> 3) & 0xFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
        goto LABEL_45;
      v31 = *(_QWORD *)(v2 + 48);
      v32 = (_QWORD *)(v31 + 16 * v30);
      v33 = *v32 == v27 && v32[1] == v26;
      if (!v33 && (sub_23F362BE4() & 1) == 0)
      {
        v34 = ~v29;
        for (j = v30 + 1; ; j = v36 + 1)
        {
          v36 = j & v34;
          sub_23F362A58();
          if ((v37 & 1) == 0)
            break;
          v38 = (_QWORD *)(v31 + 16 * v36);
          v39 = *v38 == v27 && v38[1] == v26;
          if (v39 || (sub_23F362BE4() & 1) != 0)
            goto LABEL_34;
        }
LABEL_45:
        sub_23F362C60();
        goto LABEL_46;
      }
LABEL_34:
      sub_23F362C60();
      v4 = v42;
      if (v8)
        goto LABEL_8;
LABEL_9:
      v13 = v4 + 1;
      if (__OFADD__(v4, 1))
      {
        __break(1u);
        goto LABEL_48;
      }
      if (v13 >= v41)
        goto LABEL_46;
      if (!*(_QWORD *)(v40 + 8 * v13))
      {
        sub_23F362D2C();
        if (v14 == v15)
          goto LABEL_46;
        sub_23F362CBC();
        if (!v16)
        {
          sub_23F362D2C();
          if (v14 == v15)
            goto LABEL_46;
          sub_23F362CBC();
          if (!v17)
          {
            sub_23F362D2C();
            if (v14 == v15)
              goto LABEL_46;
            sub_23F362CBC();
            if (!v19)
            {
              v20 = v18 + 4;
              if (v20 >= v41)
                goto LABEL_46;
              if (!*(_QWORD *)(v40 + 8 * v20))
                break;
            }
          }
        }
      }
LABEL_27:
      sub_23F362A6C();
      v42 = v23;
    }
    while (!__OFADD__(v20, 1))
    {
      sub_23F362D2C();
      if (v14 == v15)
        goto LABEL_46;
      sub_23F362CBC();
      v20 = v21 + 1;
      if (v22)
        goto LABEL_27;
    }
LABEL_48:
    __break(1u);
  }
  else
  {
LABEL_46:
    sub_23F362894();
  }
}

BOOL sub_23F35E0E4(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_23F35E0F4()
{
  return sub_23F61CD3C();
}

uint64_t sub_23F35E118(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6569667369746173 && a2 == 0xE900000000000064;
  if (v2 || (sub_23F61CC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000023F634250 || (sub_23F61CC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7365726975716572 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v7 = sub_23F61CC64();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23F35E26C()
{
  return 3;
}

uint64_t sub_23F35E274()
{
  sub_23F61CD30();
  sub_23F61CD3C();
  return sub_23F61CD60();
}

uint64_t sub_23F35E2B8()
{
  return 0;
}

uint64_t sub_23F35E2C4(char a1)
{
  if (!a1)
    return 0x6569667369746173;
  if (a1 == 1)
    return 0xD000000000000017;
  return 0x7365726975716572;
}

BOOL sub_23F35E324(char *a1, char *a2)
{
  return sub_23F35E0E4(*a1, *a2);
}

uint64_t sub_23F35E330()
{
  return sub_23F35E274();
}

uint64_t sub_23F35E338()
{
  return sub_23F35E0F4();
}

uint64_t sub_23F35E340()
{
  sub_23F61CD30();
  sub_23F61CD3C();
  return sub_23F61CD60();
}

uint64_t sub_23F35E380()
{
  char *v0;

  return sub_23F35E2C4(*v0);
}

uint64_t sub_23F35E388@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F35E118(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23F35E3AC()
{
  return sub_23F35E2B8();
}

uint64_t sub_23F35E3C8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23F35E26C();
  *a1 = result;
  return result;
}

uint64_t sub_23F35E3EC()
{
  sub_23F35EAC0();
  return sub_23F61CDC0();
}

uint64_t sub_23F35E414()
{
  sub_23F35EAC0();
  return sub_23F61CDCC();
}

uint64_t sub_23F35E43C()
{
  return 1;
}

uint64_t sub_23F35E444()
{
  return sub_23F61CD3C();
}

uint64_t sub_23F35E468(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23F61CC64();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F35E4D4()
{
  return 12383;
}

uint64_t sub_23F35E4E0()
{
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_23F35E4FC()
{
  return 0;
}

uint64_t sub_23F35E508(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6E65766967 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23F61CC64();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23F35E584()
{
  return 0x6E65766967;
}

void sub_23F35E59C()
{
  sub_23F35F2F4();
}

uint64_t sub_23F35E5BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F35E468(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F35E5E4()
{
  return sub_23F35E2B8();
}

uint64_t sub_23F35E5FC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23F35E43C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_23F35E624()
{
  sub_23F35EAFC();
  return sub_23F61CDC0();
}

uint64_t sub_23F35E64C()
{
  sub_23F35EAFC();
  return sub_23F61CDCC();
}

uint64_t sub_23F35E678@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23F35E4E0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_23F35E6A0()
{
  sub_23F35EBF4();
  return sub_23F61CDC0();
}

uint64_t sub_23F35E6C8()
{
  sub_23F35EBF4();
  return sub_23F61CDCC();
}

uint64_t sub_23F35E6F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F35E508(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F35E71C()
{
  sub_23F35EB38();
  return sub_23F61CDC0();
}

uint64_t sub_23F35E744()
{
  sub_23F35EB38();
  return sub_23F61CDCC();
}

void RequirementStatus.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  int EnumCaseMultiPayload;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  sub_23F362C98();
  v38 = v2;
  v35 = v1;
  v6 = v5;
  v34 = sub_23F35D2E8(&qword_256E6F4B8);
  v32 = *(_QWORD *)(v34 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F36285C();
  v31 = v8;
  v33 = sub_23F61814C();
  v30 = *(_QWORD *)(v33 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F36285C();
  v29 = v10;
  v11 = sub_23F35D2E8(&qword_256E6F4C0);
  v27 = *(_QWORD *)(v11 - 8);
  v28 = v11;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F362838();
  v26 = sub_23F35D2E8(&qword_256E6F4C8);
  v13 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  sub_23F362A30();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (uint64_t *)((char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = sub_23F35D2E8(&qword_256E6F4D0);
  v36 = *(_QWORD *)(v17 - 8);
  v37 = v17;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F362930();
  sub_23F35EA9C(v6, v6[3]);
  sub_23F35EAC0();
  sub_23F61CD90();
  sub_23F362600(v35, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for RequirementStatus);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v21 = v29;
      v20 = v30;
      v22 = v33;
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(v30 + 32))(v29, v16, v33);
      sub_23F362D58();
      v23 = v31;
      sub_23F362A80();
      sub_23F3612C0(&qword_256E6F4E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE53378], MEMORY[0x24BE53388]);
      sub_23F61CBE0();
      sub_23F362A28(v23, *(uint64_t (**)(uint64_t, uint64_t))(v32 + 8));
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v21, v22);
    }
    else
    {
      sub_23F35EBF4();
      sub_23F362A80();
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v4, v26);
    }
    sub_23F362B20();
  }
  else
  {
    v24 = *v16;
    sub_23F362CD0();
    sub_23F61CB74();
    v39 = v24;
    sub_23F35D2E8(&qword_256E6F4F8);
    sub_23F3612FC(&qword_256E6F500, (uint64_t (*)(void))sub_23F35EBB8, MEMORY[0x24BEE1700]);
    v25 = v28;
    sub_23F61CBE0();
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v0, v25);
    sub_23F362A28(v3, *(uint64_t (**)(uint64_t, uint64_t))(v36 + 8));
    swift_bridgeObjectRelease();
  }
  sub_23F362870();
}

_QWORD *sub_23F35EA9C(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_23F35EAC0()
{
  unint64_t result;

  result = qword_256E6F4D8;
  if (!qword_256E6F4D8)
  {
    result = MEMORY[0x242670A44](&unk_23F61E35C, &type metadata for RequirementStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E6F4D8);
  }
  return result;
}

unint64_t sub_23F35EAFC()
{
  unint64_t result;

  result = qword_256E6F4E0;
  if (!qword_256E6F4E0)
  {
    result = MEMORY[0x242670A44](&unk_23F61E30C, &type metadata for RequirementStatus.RequiresCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E6F4E0);
  }
  return result;
}

unint64_t sub_23F35EB38()
{
  unint64_t result;

  result = qword_256E6F4F0;
  if (!qword_256E6F4F0)
  {
    result = MEMORY[0x242670A44](&unk_23F61E2BC, &type metadata for RequirementStatus.SatisfiedWithConditionsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E6F4F0);
  }
  return result;
}

uint64_t sub_23F35EB74(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x242670A38](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_23F35EBB8()
{
  unint64_t result;

  result = qword_256E6F508;
  if (!qword_256E6F508)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for SatifisfactionCondition, &type metadata for SatifisfactionCondition);
    atomic_store(result, (unint64_t *)&qword_256E6F508);
  }
  return result;
}

unint64_t sub_23F35EBF4()
{
  unint64_t result;

  result = qword_256E6F510;
  if (!qword_256E6F510)
  {
    result = MEMORY[0x242670A44](&unk_23F61E26C, &type metadata for RequirementStatus.SatisfiedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E6F510);
  }
  return result;
}

void RequirementStatus.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;

  sub_23F362C98();
  v61 = v0;
  v4 = v3;
  v55 = v5;
  v54 = sub_23F35D2E8(&qword_256E6F518);
  v50 = *(_QWORD *)(v54 - 8);
  sub_23F362850();
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  sub_23F36285C();
  v59 = v6;
  v53 = sub_23F35D2E8(&qword_256E6F520);
  v49 = *(_QWORD *)(v53 - 8);
  sub_23F362850();
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  sub_23F36285C();
  v57 = v7;
  v8 = sub_23F35D2E8(&qword_256E6F528);
  v51 = *(_QWORD *)(v8 - 8);
  v52 = v8;
  sub_23F362850();
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  sub_23F36285C();
  v56 = v9;
  v10 = sub_23F35D2E8(&qword_256E6F530);
  v58 = *(_QWORD *)(v10 - 8);
  sub_23F362850();
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v11 = sub_23F362A30();
  sub_23F362850();
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  sub_23F36298C();
  v12 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v14 = (char *)&v45 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v45 - v15;
  v17 = v4[3];
  v60 = v4;
  sub_23F35EA9C(v4, v17);
  sub_23F35EAC0();
  v18 = v61;
  sub_23F61CD84();
  if (v18)
  {
    v19 = (uint64_t)v60;
    goto LABEL_11;
  }
  v46 = v14;
  v47 = v1;
  v20 = v59;
  v48 = v16;
  v61 = v11;
  v21 = v2;
  v22 = sub_23F61CB5C();
  v23 = *(_QWORD *)(v22 + 16);
  v24 = v10;
  if (!v23)
  {
    v59 = v22;
    v19 = (uint64_t)v60;
LABEL_10:
    v31 = v58;
    v32 = v61;
    v33 = sub_23F61C928();
    sub_23F362D64();
    v35 = v34;
    sub_23F35D2E8(&qword_256E6F538);
    *v35 = v32;
    sub_23F61CAD8();
    sub_23F362C80();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v35, *MEMORY[0x24BEE26D0], v33);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v21, v24);
    goto LABEL_11;
  }
  v25 = *(unsigned __int8 *)(v22 + 32);
  v26 = sub_23F362464(1, v23, v22, v22 + 32, 0, (2 * v23) | 1);
  v28 = v27;
  v30 = v29;
  swift_bridgeObjectRelease();
  if (v28 != v30 >> 1)
  {
    v59 = v26;
    v19 = (uint64_t)v60;
    v24 = v10;
    v21 = v2;
    goto LABEL_10;
  }
  if (v25)
  {
    if (v25 == 1)
    {
      sub_23F362CD0();
      sub_23F362B3C();
      sub_23F35D2E8(&qword_256E6F4F8);
      sub_23F3612FC(&qword_256E6F548, (uint64_t (*)(void))sub_23F361364, MEMORY[0x24BEE1720]);
      sub_23F61CB44();
      v19 = (uint64_t)v60;
      v39 = v58;
      sub_23F362B0C();
      sub_23F362B34();
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v2, v10);
      v43 = v46;
      *v46 = v62;
      swift_storeEnumTagMultiPayload();
      v44 = (uint64_t)v43;
    }
    else
    {
      sub_23F362D58();
      v37 = v10;
      v38 = v2;
      sub_23F362B3C();
      v57 = v37;
      sub_23F61814C();
      sub_23F3612C0(&qword_256E6F540, (uint64_t (*)(uint64_t))MEMORY[0x24BE53378], MEMORY[0x24BE53390]);
      v41 = v47;
      sub_23F61CB44();
      v19 = (uint64_t)v60;
      v42 = v58;
      sub_23F362A28(v20, *(uint64_t (**)(uint64_t, uint64_t))(v50 + 8));
      sub_23F362B34();
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v38, v57);
      swift_storeEnumTagMultiPayload();
      v44 = v41;
    }
    v40 = (uint64_t)v48;
    sub_23F36262C(v44, (uint64_t)v48, (uint64_t (*)(_QWORD))type metadata accessor for RequirementStatus);
  }
  else
  {
    sub_23F35EBF4();
    v36 = v56;
    sub_23F362B3C();
    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v36, v52);
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v2, v10);
    v40 = (uint64_t)v48;
    swift_storeEnumTagMultiPayload();
    v19 = (uint64_t)v60;
  }
  sub_23F36262C(v40, v55, (uint64_t (*)(_QWORD))type metadata accessor for RequirementStatus);
LABEL_11:
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v19);
  sub_23F362870();
}

uint64_t _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

void sub_23F35F21C()
{
  RequirementStatus.init(from:)();
}

void sub_23F35F230()
{
  RequirementStatus.encode(to:)();
}

uint64_t static SatifisfactionCondition.== infix(_:_:)()
{
  return 1;
}

void SatifisfactionCondition.hash(into:)()
{
  sub_23F61CD3C();
  sub_23F362928();
}

uint64_t sub_23F35F270(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000018 && a2 == 0x800000023F634270)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_23F61CC64();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

void sub_23F35F2F4()
{
  sub_23F362CB0();
  sub_23F362AE0();
  sub_23F362C10();
  sub_23F362AD4();
}

unint64_t sub_23F35F318()
{
  return 0xD000000000000018;
}

uint64_t sub_23F35F338@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23F35F270(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23F35F360()
{
  sub_23F3613A0();
  return sub_23F61CDC0();
}

uint64_t sub_23F35F388()
{
  sub_23F3613A0();
  return sub_23F61CDCC();
}

uint64_t sub_23F35F3B0()
{
  sub_23F3613DC();
  return sub_23F61CDC0();
}

uint64_t sub_23F35F3D8()
{
  sub_23F3613DC();
  return sub_23F61CDCC();
}

void SatifisfactionCondition.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;

  sub_23F362C98();
  a19 = v22;
  a20 = v23;
  a10 = v20;
  v25 = v24;
  v26 = sub_23F35D2E8(&qword_256E6F558);
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  sub_23F362930();
  v28 = sub_23F35D2E8(&qword_256E6F560);
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)&a9 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F35EA9C(v25, v25[3]);
  sub_23F3613A0();
  sub_23F61CD90();
  sub_23F3613DC();
  sub_23F61CB74();
  sub_23F362A28(v21, *(uint64_t (**)(uint64_t, uint64_t))(v27 + 8));
  (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
  sub_23F362870();
}

void SatifisfactionCondition.hashValue.getter()
{
  sub_23F362CB0();
  sub_23F362AE0();
  sub_23F362C10();
  sub_23F362AD4();
}

void SatifisfactionCondition.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_23F362C98();
  v3 = v2;
  v21 = sub_23F35D2E8(&qword_256E6F578);
  v4 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F35D2E8(&qword_256E6F580);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  sub_23F362930();
  sub_23F35EA9C(v3, v3[3]);
  sub_23F3613A0();
  v9 = v3;
  sub_23F61CD84();
  if (v0)
    goto LABEL_6;
  v20 = v4;
  v10 = sub_23F61CB5C();
  v11 = *(_QWORD *)(v10 + 16);
  if (!v11
    || (sub_23F362464(1, v11, v10, v10 + 32, 0, (2 * v11) | 1),
        v13 = v12,
        v15 = v14,
        swift_bridgeObjectRelease(),
        v13 != v15 >> 1))
  {
    v16 = sub_23F61C928();
    sub_23F362D64();
    v18 = v17;
    sub_23F35D2E8(&qword_256E6F538);
    *v18 = &type metadata for SatifisfactionCondition;
    sub_23F61CAD8();
    sub_23F362C80();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v18, *MEMORY[0x24BEE26D0], v16);
    swift_willThrow();
    v9 = v3;
    swift_unknownObjectRelease();
    sub_23F362A28(v1, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
LABEL_6:
    v19 = (uint64_t)v9;
    goto LABEL_7;
  }
  sub_23F3613DC();
  sub_23F61CACC();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v21);
  swift_unknownObjectRelease();
  sub_23F362A28(v1, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
  v19 = (uint64_t)v3;
LABEL_7:
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v19);
  sub_23F362870();
}

void sub_23F35F790()
{
  SatifisfactionCondition.init(from:)();
}

#error "23F35F7AC: call analysis failed (funcsize=5)"

void sub_23F35F7B8()
{
  SatifisfactionCondition.hashValue.getter();
}

void sub_23F35F7CC()
{
  SatifisfactionCondition.hash(into:)();
}

void sub_23F35F7E0()
{
  sub_23F61CD30();
  sub_23F362AE0();
  sub_23F362C10();
  sub_23F362AD4();
}

uint64_t RequirementStatus.conditions.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  uint64_t EnumCaseMultiPayload;

  sub_23F362C90();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F362838();
  sub_23F362600(v1, v0, v3);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!(_DWORD)EnumCaseMultiPayload)
    return *(_QWORD *)v0;
  if ((_DWORD)EnumCaseMultiPayload == 1)
    sub_23F362D10(EnumCaseMultiPayload, (uint64_t (*)(_QWORD))type metadata accessor for RequirementStatus);
  return MEMORY[0x24BEE4B08];
}

uint64_t sub_23F35F894()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  __int128 v4;
  ValueMetadata *v5;
  _UNKNOWN **v6;

  sub_23F35D2E8(&qword_256E6F800);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_23F61D990;
  v5 = &type metadata for ToolKitDeviceUnlockStateProvider;
  v6 = &protocol witness table for ToolKitDeviceUnlockStateProvider;
  v1 = type metadata accessor for AuthenticationRequirementEvaluator();
  v2 = swift_allocObject();
  swift_defaultActor_initialize();
  sub_23F362678(&v4, v2 + 112);
  *(_QWORD *)(v0 + 56) = v1;
  *(_QWORD *)(v0 + 64) = &protocol witness table for AuthenticationRequirementEvaluator;
  *(_QWORD *)(v0 + 32) = v2;
  *(_QWORD *)(v0 + 96) = &type metadata for CarPlayRequirementEvaluator;
  *(_QWORD *)(v0 + 104) = &protocol witness table for CarPlayRequirementEvaluator;
  result = CarPlayRequirementEvaluator.init()((_QWORD *)(v0 + 72));
  *(_QWORD *)(v0 + 136) = &type metadata for CarBluetoothRequirementEvaluator;
  *(_QWORD *)(v0 + 144) = &protocol witness table for CarBluetoothRequirementEvaluator;
  *(_QWORD *)(v0 + 176) = &type metadata for ResponseModeRequirementEvaluator;
  *(_QWORD *)(v0 + 184) = &protocol witness table for ResponseModeRequirementEvaluator;
  qword_256E7FD90 = v0;
  return result;
}

uint64_t MultiActionRequirementEvaluator.evaluate(tool:transcript:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[9] = a2;
  v4[10] = a3;
  v4[8] = a1;
  v4[11] = sub_23F362C90();
  v4[12] = swift_task_alloc();
  v5 = swift_task_alloc();
  v6 = *v3;
  v4[13] = v5;
  v4[14] = v6;
  return sub_23F362AA0();
}

uint64_t sub_23F35F9E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v12)(void);

  v1 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(v0 + 56) = MEMORY[0x24BEE4B08];
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v0 + 120) = v3;
  if (v3)
  {
    *(_QWORD *)(v0 + 128) = 0;
    v4 = v2 + 32;
    sub_23F617BA0();
    sub_23F361418(v4, v0 + 16);
    v5 = *(_QWORD *)(v0 + 40);
    v6 = *(_QWORD *)(v0 + 48);
    sub_23F35EA9C((_QWORD *)(v0 + 16), v5);
    v7 = (_QWORD *)sub_23F3629C0();
    v8 = sub_23F362C48(v7);
    return sub_23F362A08(v8, v9, v10, v5, v6, v12);
  }
  else
  {
    if (*(_QWORD *)(v1 + 16))
      **(_QWORD **)(v0 + 64) = v1;
    else
      swift_bridgeObjectRelease();
    swift_storeEnumTagMultiPayload();
    swift_task_dealloc();
    sub_23F362CC8();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23F35FAE4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return sub_23F362AA0();
}

uint64_t sub_23F35FB50()
{
  uint64_t v0;
  int EnumCaseMultiPayload;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t (*v12)(uint64_t);

  sub_23F362600(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 96), (uint64_t (*)(_QWORD))type metadata accessor for RequirementStatus);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v2 = *(_QWORD *)(v0 + 104);
      v3 = *(_QWORD *)(v0 + 96);
      v4 = *(_QWORD *)(v0 + 64);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23F36262C(v2, v4, (uint64_t (*)(_QWORD))type metadata accessor for RequirementStatus);
      sub_23F362658(v3, (uint64_t (*)(_QWORD))type metadata accessor for RequirementStatus);
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
      goto LABEL_11;
    }
  }
  else
  {
    sub_23F35FD44(**(_QWORD **)(v0 + 96));
  }
  v5 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 128) + 1;
  sub_23F362658(*(_QWORD *)(v0 + 104), (uint64_t (*)(_QWORD))type metadata accessor for RequirementStatus);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  if (v6 != v5)
  {
    v8 = *(_QWORD *)(v0 + 128) + 1;
    *(_QWORD *)(v0 + 128) = v8;
    sub_23F361418(*(_QWORD *)(v0 + 112) + 40 * v8 + 32, v0 + 16);
    sub_23F35EA9C((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
    v9 = (_QWORD *)sub_23F3629C0();
    v10 = sub_23F362C48(v9);
    return v12(v10);
  }
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(v0 + 56);
  if (*(_QWORD *)(v7 + 16))
    **(_QWORD **)(v0 + 64) = v7;
  else
    swift_bridgeObjectRelease();
  swift_storeEnumTagMultiPayload();
LABEL_11:
  swift_task_dealloc();
  sub_23F362CC8();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F35FD00()
{
  uint64_t v0;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  sub_23F362CC8();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F35FD44(uint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v2 = 0;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (!v6)
    {
      v8 = v2 + 1;
      if (__OFADD__(v2, 1))
      {
        __break(1u);
        goto LABEL_25;
      }
      if (v8 >= v7)
        return swift_release();
      v6 = *(_QWORD *)(v3 + 8 * v8);
      ++v2;
      if (!v6)
      {
        v2 = v8 + 1;
        if (v8 + 1 >= v7)
          return swift_release();
        v6 = *(_QWORD *)(v3 + 8 * v2);
        if (!v6)
        {
          v2 = v8 + 2;
          if (v8 + 2 >= v7)
            return swift_release();
          v6 = *(_QWORD *)(v3 + 8 * v2);
          if (!v6)
          {
            v2 = v8 + 3;
            if (v8 + 3 >= v7)
              return swift_release();
            v6 = *(_QWORD *)(v3 + 8 * v2);
            if (!v6)
              break;
          }
        }
      }
    }
LABEL_21:
    v6 &= v6 - 1;
    v10 = *v1;
    sub_23F61CD30();
    sub_23F61CD3C();
    result = sub_23F61CD60();
    v11 = result & ~(-1 << *(_BYTE *)(v10 + 32));
    if (((*(_QWORD *)(v10 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v11) & 1) == 0)
    {
      swift_isUniquelyReferenced_nonNull_native();
      v12 = *v1;
      *v1 = 0x8000000000000000;
      sub_23F4761A8(v11);
      *v1 = v12;
      result = swift_bridgeObjectRelease();
    }
  }
  v9 = v8 + 4;
  if (v9 >= v7)
    return swift_release();
  v6 = *(_QWORD *)(v3 + 8 * v9);
  if (v6)
  {
    v2 = v9;
    goto LABEL_21;
  }
  while (1)
  {
    v2 = v9 + 1;
    if (__OFADD__(v9, 1))
      break;
    if (v2 >= v7)
      return swift_release();
    v6 = *(_QWORD *)(v3 + 8 * v2);
    ++v9;
    if (v6)
      goto LABEL_21;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_23F35FEEC()
{
  sub_23F3605F0();
}

uint64_t sub_23F35FF00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = a1 + 48;
    do
    {
      v2 += 24;
      sub_23F471B2C();
      --v1;
    }
    while (v1);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F35FF54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = sub_23F362DA8();
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = *(_QWORD *)(v0 + 16);
  if (!v6)
    return swift_bridgeObjectRelease();
  v7 = v0 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  v8 = *(_QWORD *)(v5 + 72);
  do
  {
    sub_23F362600(v7, (uint64_t)v4, type metadata accessor for DependencyId);
    sub_23F362CE4();
    sub_23F362CF0();
    v7 += v8;
    --v6;
  }
  while (v6);
  return sub_23F362D18();
}

void sub_23F360040()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_23F362ABC();
  v4 = sub_23F362DA8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  sub_23F362AAC();
  v8 = v6 - v7;
  MEMORY[0x24BDAC7A8](v9);
  sub_23F362D78();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v22 - v11;
  sub_23F3628B0();
  if (!v1)
    goto LABEL_3;
LABEL_2:
  sub_23F362C30();
  while (1)
  {
    sub_23F362600(*(_QWORD *)(v0 + 48) + *(_QWORD *)(v5 + 72) * v13, (uint64_t)v12, type metadata accessor for DependencyId);
    sub_23F36262C((uint64_t)v12, v8, type metadata accessor for DependencyId);
    sub_23F362CE4();
    sub_23F362CF0();
    if (v1)
      goto LABEL_2;
LABEL_3:
    v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v14 >= v2)
      goto LABEL_21;
    ++v3;
    if (!*(_QWORD *)(v23 + 8 * v14))
    {
      v3 = v14 + 1;
      if (v14 + 1 >= v2)
        goto LABEL_21;
      sub_23F362B00();
      if (!v16)
      {
        v3 = v15 + 2;
        if (v15 + 2 >= v2)
          goto LABEL_21;
        sub_23F362B00();
        if (!v18)
        {
          v3 = v17 + 3;
          if (v17 + 3 >= v2)
            goto LABEL_21;
          sub_23F362B00();
          if (!v20)
            break;
        }
      }
    }
LABEL_18:
    sub_23F362C68();
  }
  v21 = v19 + 4;
  if (v21 >= v2)
  {
LABEL_21:
    swift_release();
    sub_23F362948();
    return;
  }
  if (*(_QWORD *)(v23 + 8 * v21))
  {
    v3 = v21;
    goto LABEL_18;
  }
  while (1)
  {
    v3 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v3 >= v2)
      goto LABEL_21;
    ++v21;
    if (*(_QWORD *)(v23 + 8 * v3))
      goto LABEL_18;
  }
LABEL_23:
  __break(1u);
}

uint64_t sub_23F3601B8(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  int64_t i;
  int64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = result;
  v2 = 0;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  if (!v6)
    goto LABEL_5;
LABEL_4:
  sub_23F3629D4();
  for (i = v8 | (v2 << 6); ; i = v12 + (v2 << 6))
  {
    v13 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * i);
    sub_23F617BA0();
    sub_23F471B08(&v14, v13);
    result = swift_bridgeObjectRelease();
    if (v6)
      goto LABEL_4;
LABEL_5:
    v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v10 >= v7)
      return sub_23F3629A8();
    ++v2;
    if (!*(_QWORD *)(v3 + 8 * v10))
    {
      v2 = v10 + 1;
      if (v10 + 1 >= v7)
        return sub_23F3629A8();
      if (!*(_QWORD *)(v3 + 8 * v2))
      {
        v2 = v10 + 2;
        if (v10 + 2 >= v7)
          return sub_23F3629A8();
        if (!*(_QWORD *)(v3 + 8 * v2))
        {
          v2 = v10 + 3;
          if (v10 + 3 >= v7)
            return sub_23F3629A8();
          if (!*(_QWORD *)(v3 + 8 * v2))
            break;
        }
      }
    }
LABEL_20:
    sub_23F362A6C();
  }
  v11 = v10 + 4;
  if (v11 >= v7)
    return sub_23F3629A8();
  if (*(_QWORD *)(v3 + 8 * v11))
  {
    v2 = v11;
    goto LABEL_20;
  }
  while (1)
  {
    v2 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v2 >= v7)
      return sub_23F3629A8();
    ++v11;
    if (*(_QWORD *)(v3 + 8 * v2))
      goto LABEL_20;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_23F3602F4(uint64_t result)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  int64_t v7;
  uint64_t v8;
  int64_t v9;

  v1 = 0;
  v2 = result + 56;
  v3 = 1 << *(_BYTE *)(result + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(result + 56);
  v6 = (unint64_t)(v3 + 63) >> 6;
  if (!v5)
    goto LABEL_5;
LABEL_4:
  for (v5 &= v5 - 1; ; v5 = (v8 - 1) & v8)
  {
    sub_23F362CDC();
    sub_23F471708();
    result = swift_bridgeObjectRelease();
    if (v5)
      goto LABEL_4;
LABEL_5:
    v7 = v1 + 1;
    if (__OFADD__(v1, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v7 >= v6)
      return sub_23F3629A8();
    v8 = *(_QWORD *)(v2 + 8 * v7);
    ++v1;
    if (!v8)
    {
      v1 = v7 + 1;
      if (v7 + 1 >= v6)
        return sub_23F3629A8();
      v8 = *(_QWORD *)(v2 + 8 * v1);
      if (!v8)
      {
        v1 = v7 + 2;
        if (v7 + 2 >= v6)
          return sub_23F3629A8();
        v8 = *(_QWORD *)(v2 + 8 * v1);
        if (!v8)
        {
          v1 = v7 + 3;
          if (v7 + 3 >= v6)
            return sub_23F3629A8();
          v8 = *(_QWORD *)(v2 + 8 * v1);
          if (!v8)
            break;
        }
      }
    }
LABEL_20:
    ;
  }
  v9 = v7 + 4;
  if (v9 >= v6)
    return sub_23F3629A8();
  v8 = *(_QWORD *)(v2 + 8 * v9);
  if (v8)
  {
    v1 = v9;
    goto LABEL_20;
  }
  while (1)
  {
    v1 = v9 + 1;
    if (__OFADD__(v9, 1))
      break;
    if (v1 >= v6)
      return sub_23F3629A8();
    v8 = *(_QWORD *)(v2 + 8 * v1);
    ++v9;
    if (v8)
      goto LABEL_20;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_23F36044C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_23F362ABC();
  v5 = v4;
  v6 = sub_23F618ED8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  sub_23F36298C();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v23 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v23 - v12;
  sub_23F3628B0();
  if (!v1)
    goto LABEL_3;
LABEL_2:
  sub_23F362C30();
  while (1)
  {
    sub_23F362D94((uint64_t)v13, *(_QWORD *)(v5 + 48) + *(_QWORD *)(v7 + 72) * v14, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16));
    sub_23F362D94(v0, (uint64_t)v13, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 32));
    sub_23F4733B0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
    if (v1)
      goto LABEL_2;
LABEL_3:
    v15 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v15 >= v2)
      goto LABEL_21;
    ++v3;
    if (!*(_QWORD *)(v24 + 8 * v15))
    {
      v3 = v15 + 1;
      if (v15 + 1 >= v2)
        goto LABEL_21;
      sub_23F362B00();
      if (!v17)
      {
        v3 = v16 + 2;
        if (v16 + 2 >= v2)
          goto LABEL_21;
        sub_23F362B00();
        if (!v19)
        {
          v3 = v18 + 3;
          if (v18 + 3 >= v2)
            goto LABEL_21;
          sub_23F362B00();
          if (!v21)
            break;
        }
      }
    }
LABEL_18:
    sub_23F362C68();
  }
  v22 = v20 + 4;
  if (v22 >= v2)
  {
LABEL_21:
    swift_release();
    sub_23F362948();
    return;
  }
  if (*(_QWORD *)(v24 + 8 * v22))
  {
    v3 = v22;
    goto LABEL_18;
  }
  while (1)
  {
    v3 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v3 >= v2)
      goto LABEL_21;
    ++v22;
    if (*(_QWORD *)(v24 + 8 * v3))
      goto LABEL_18;
  }
LABEL_23:
  __break(1u);
}

void sub_23F3605DC()
{
  sub_23F3605F0();
}

void sub_23F3605F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(char *, uint64_t);
  void (*v4)(char *, uint64_t);
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  _QWORD v20[12];
  uint64_t v21;
  uint64_t v22;

  sub_23F362ABC();
  v21 = v1;
  v22 = v2;
  v4 = v3;
  v7 = sub_23F362D9C(v5, v6);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  sub_23F362AAC();
  v11 = v9 - v10;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v20 - v13;
  v15 = *(_QWORD *)(v0 + 16);
  if (v15)
  {
    v16 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v20[1] = v0;
    v17 = v0 + v16;
    v18 = *(_QWORD *)(v8 + 72);
    v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
    do
    {
      v19(v11, v17, v7);
      v4(v14, v11);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v7);
      v17 += v18;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease();
    sub_23F362948();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_23F3606E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23F362820;
  return MultiActionRequirementEvaluator.evaluate(tool:transcript:)(a1, a2, a3);
}

uint64_t static ActionRequirementEvaluating<>.defaultRequirementsEvaluator.getter@<X0>(_QWORD *a1@<X8>)
{
  if (qword_256E6EE40 != -1)
    swift_once();
  *a1 = qword_256E7FD90;
  return sub_23F362AEC();
}

uint64_t AlwaysSatisfiedRequirementEvaluator.evaluate(tool:transcript:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return sub_23F362A4C();
}

uint64_t sub_23F3607B0()
{
  uint64_t v0;

  sub_23F362C90();
  swift_storeEnumTagMultiPayload();
  return sub_23F362888(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F3607EC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23F362820;
  return AlwaysSatisfiedRequirementEvaluator.evaluate(tool:transcript:)(a1);
}

uint64_t AnyActionRequirementEvaluating.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t *v6;

  a4[3] = a2;
  a4[4] = a3;
  v6 = sub_23F36145C(a4);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(v6, a1, a2);
}

uint64_t AnyActionRequirementEvaluating.evaluate(tool:transcript:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return sub_23F362A4C();
}

uint64_t sub_23F360890()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v1 = (_QWORD *)v0[5];
  v2 = v1[3];
  v3 = v1[4];
  sub_23F35EA9C(v1, v2);
  v4 = (_QWORD *)sub_23F3629C0();
  v0[6] = (uint64_t)v4;
  *v4 = v0;
  v4[1] = sub_23F3608F8;
  return sub_23F362A08(v0[2], v0[3], v0[4], v2, v3, v6);
}

uint64_t sub_23F3608F8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return sub_23F362888(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t AnyActionRequirementEvaluating.existentialContainer.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23F361418(v1, a1);
}

uint64_t sub_23F360944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23F3609AC;
  return AnyActionRequirementEvaluating.evaluate(tool:transcript:)(a1, a2, a3);
}

uint64_t sub_23F3609AC()
{
  uint64_t v0;

  sub_23F3629E8();
  return sub_23F362888(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t ActionRequirementEvaluating.eraseToAnyActionRequirementEvaluating()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;

  MEMORY[0x24BDAC7A8](a1);
  sub_23F362930();
  sub_23F362D94(v4, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16));
  return AnyActionRequirementEvaluating.init<A>(_:)(v4, a1, a2, a3);
}

uint64_t default argument 1 of RootedBNFGrammar.init(rootRule:subRules:)()
{
  return MEMORY[0x24BEE4AF8];
}

double default argument 0 of SmithWatermanTokenAligner.init(gapPenalty:)()
{
  return 0.0;
}

uint64_t default argument 3 of static StandaloneGrammarGenerator.defaultGenerator(tokenizer:renderer:toolbox:rootRuleIdentifier:quotableStringIdentifier:staticTools:baseGrammar:printBuiltinSupported:progressiveDisclosureEnabled:)()
{
  return 0x6E6E616C705F6569;
}

uint64_t default argument 5 of static StandaloneGrammarGenerator.defaultGenerator(tokenizer:renderer:toolbox:rootRuleIdentifier:quotableStringIdentifier:staticTools:baseGrammar:printBuiltinSupported:progressiveDisclosureEnabled:)()
{
  if (qword_256E6F060 != -1)
    swift_once();
  return sub_23F617BA0();
}

uint64_t default argument 6 of static StandaloneGrammarGenerator.defaultGenerator(tokenizer:renderer:toolbox:rootRuleIdentifier:quotableStringIdentifier:staticTools:baseGrammar:printBuiltinSupported:progressiveDisclosureEnabled:)()
{
  return sub_23F360C50(&qword_256E6F068, &qword_256E77B20);
}

void default argument 7 of static StandaloneGrammarGenerator.defaultGenerator(tokenizer:renderer:toolbox:rootRuleIdentifier:quotableStringIdentifier:staticTools:baseGrammar:printBuiltinSupported:progressiveDisclosureEnabled:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F362D8C();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F362838();
  if (qword_256E6EE90 != -1)
    v1 = swift_once();
  sub_23F362960(v1, (uint64_t)qword_256E7FE90);
  sub_23F362A18();
  sub_23F35D2E8(&qword_256E6F5A8);
  sub_23F617C48();
  sub_23F362B54();
  sub_23F362B80();
}

void default argument 8 of static StandaloneGrammarGenerator.defaultGenerator(tokenizer:renderer:toolbox:rootRuleIdentifier:quotableStringIdentifier:staticTools:baseGrammar:printBuiltinSupported:progressiveDisclosureEnabled:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F362D8C();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F362838();
  if (qword_256E6EE90 != -1)
    v1 = swift_once();
  sub_23F362960(v1, (uint64_t)qword_256E7FE90);
  sub_23F362A18();
  sub_23F35D2E8(&qword_256E6F5A8);
  sub_23F617C48();
  sub_23F362B54();
  sub_23F362B80();
}

uint64_t default argument 1 of static HybridGrammarGenerator.defaultGenerator(tokenizer:baseGrammar:quotableStringIdentifier:)()
{
  return sub_23F360C50(&qword_256E6F070, &qword_256E77B30);
}

uint64_t sub_23F360C50(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;

  if (*a1 != -1)
    swift_once();
  v3 = *a2;
  sub_23F617BA0();
  return v3;
}

uint64_t _s30IntelligenceFlowPlannerRuntime26StandaloneGrammarGeneratorV07defaultG09tokenizer8renderer7toolbox18rootRuleIdentifier014quotableStringN011staticTools04baseF021printBuiltinSupported28progressiveDisclosureEnabledAcA0P10Tokenizing_p_AA14PromptRendererV0abC7Support7ToolboxVS2SSaySSGSSSgS2btKFZfA3__0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  sub_23F362D8C();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v0);
  sub_23F362838();
  if (qword_256E6EE90 != -1)
    v1 = swift_once();
  sub_23F362960(v1, (uint64_t)qword_256E7FE90);
  sub_23F362A18();
  sub_23F35D2E8(&qword_256E6F5A0);
  sub_23F617C48();
  sub_23F362B54();
  return v3;
}

uint64_t default argument 0 of PromptGrammar.init(pieces:)()
{
  return MEMORY[0x24BEE4AF8];
}

uint64_t _s30IntelligenceFlowPlannerRuntime30ActionResolverRequestEvaluatorV7toolbox18actionRequirementsAC0abC7Support7ToolboxV_xtcAA0E21RequirementEvaluatingRzlufcfA0__0@<X0>(_QWORD *a1@<X8>)
{
  if (qword_256E6EE40 != -1)
    swift_once();
  *a1 = qword_256E7FD90;
  return sub_23F362AEC();
}

uint64_t default argument 0 of PlanOverride.init(statements:)()
{
  return MEMORY[0x24BEE4AF8];
}

void default argument 1 of UtteranceRule.init(pattern:type:spansForNamedCaptureGroups:)(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t default argument 2 of UtteranceRule.init(pattern:type:spansForNamedCaptureGroups:)()
{
  return MEMORY[0x24BEE4AF8];
}

uint64_t default argument 0 of SpansForNamedCaptureGroups.init(captureGroupName:labels:)()
{
  return 0;
}

uint64_t default argument 1 of SpansForNamedCaptureGroups.init(captureGroupName:labels:)()
{
  return MEMORY[0x24BEE4AF8];
}

void default argument 1 of EventRule.init(eventResultOutputEnum:eventMatchOption:)(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

void default argument 2 of QueryDecorator.init(clientApplicationIdentifier:toolbox:selfLoggerFactory:signposter:)(uint64_t a1@<X8>)
{
  *(_QWORD *)(a1 + 24) = &type metadata for QueryDecorationLoggerBuilder;
  *(_QWORD *)(a1 + 32) = &protocol witness table for QueryDecorationLoggerBuilder;
}

void default argument 3 of QueryDecorator.init(clientApplicationIdentifier:toolbox:selfLoggerFactory:signposter:)(uint64_t *a1@<X8>)
{
  uint64_t DecorationSignposter;
  uint64_t v3;

  DecorationSignposter = type metadata accessor for QueryDecorationSignposter(0);
  swift_allocObject();
  v3 = sub_23F557B14();
  a1[3] = DecorationSignposter;
  a1[4] = (uint64_t)&off_250FDC298;
  *a1 = v3;
  sub_23F362B80();
}

uint64_t default argument 1 of QuotableStringGrammarConverter.init(tokenizer:allowEmptyString:)()
{
  return 1;
}

uint64_t sub_23F360E64()
{
  sub_23F362DB4();
  sub_23F362CFC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F360E94(uint64_t a1)
{
  _QWORD *v1;

  return sub_23F375370(a1, *v1);
}

void sub_23F360E9C(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3;

  v3 = sub_23F61C10C();
  a2(v3);
  sub_23F362984();
  sub_23F362928();
}

uint64_t sub_23F360ECC(uint64_t a1, id *a2)
{
  return sub_23F3624DC(a1, a2);
}

uint64_t sub_23F360EE0(uint64_t a1, id *a2)
{
  return sub_23F362540(a1, a2) & 1;
}

void sub_23F360EF8()
{
  uint64_t *v0;

  sub_23F360E9C(*v0, (void (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

void sub_23F360F18(_QWORD *a1@<X8>)
{
  uint64_t v2;

  sub_23F3625AC();
  *a1 = v2;
}

void sub_23F360F3C()
{
  uint64_t *v0;

  sub_23F360E9C(*v0, MEMORY[0x24BEE0CD8]);
}

uint64_t sub_23F360F5C()
{
  return sub_23F36120C();
}

uint64_t sub_23F360F64()
{
  return sub_23F3611AC();
}

uint64_t sub_23F360F6C(_QWORD *a1, _QWORD *a2)
{
  return sub_23F489140(*a1, *a2);
}

void sub_23F360F78()
{
  sub_23F36124C();
}

void sub_23F360F88()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_23F362B8C();
  *v0 = sub_23F360E58(v1);
  v0[1] = v2;
  sub_23F362928();
}

uint64_t sub_23F360FA8()
{
  sub_23F3612C0((unint64_t *)&qword_256E6F850, (uint64_t (*)(uint64_t))type metadata accessor for MLModelMetadataKey, (uint64_t)&unk_23F61E66C);
  sub_23F3612C0(&qword_256E6F858, (uint64_t (*)(uint64_t))type metadata accessor for MLModelMetadataKey, (uint64_t)&unk_23F61E5C0);
  return sub_23F61CAA8();
}

void sub_23F36102C(uint64_t *a1@<X8>)
{
  uint64_t v2;

  v2 = sub_23F61C0E8();
  sub_23F362984();
  *a1 = v2;
  sub_23F362B80();
}

uint64_t sub_23F361064@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_23F360E58(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_23F36108C()
{
  sub_23F3612C0(&qword_256E6F7E8, (uint64_t (*)(uint64_t))type metadata accessor for NLLanguage, (uint64_t)&unk_23F61E13C);
  sub_23F3612C0(&qword_256E6F7F0, (uint64_t (*)(uint64_t))type metadata accessor for NLLanguage, (uint64_t)&unk_23F61E0DC);
  return sub_23F61CAA8();
}

uint64_t sub_23F361110()
{
  sub_23F3612C0(&qword_256E6F860, (uint64_t (*)(uint64_t))type metadata accessor for NLTagScheme, (uint64_t)&unk_23F61E4C0);
  sub_23F3612C0(&qword_256E6F868, (uint64_t (*)(uint64_t))type metadata accessor for NLTagScheme, (uint64_t)&unk_23F61E460);
  return sub_23F61CAA8();
}

uint64_t sub_23F361194()
{
  return sub_23F360E64();
}

uint64_t sub_23F3611AC()
{
  uint64_t v0;

  sub_23F362DB4();
  sub_23F61CD30();
  sub_23F61C22C();
  v0 = sub_23F362C10();
  sub_23F362D08();
  return v0;
}

uint64_t sub_23F36120C()
{
  sub_23F61C10C();
  sub_23F61C22C();
  return swift_bridgeObjectRelease();
}

void sub_23F36124C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = sub_23F61C10C();
  v2 = v1;
  if (v0 != sub_23F61C10C() || v2 != v3)
    sub_23F61CC64();
  sub_23F362D18();
  sub_23F362984();
  sub_23F362B80();
}

void sub_23F3612C0(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v5;

  if (!*a1)
  {
    v5 = a2(255);
    atomic_store(MEMORY[0x242670A44](a3, v5), a1);
  }
  sub_23F362928();
}

uint64_t sub_23F3612FC(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = sub_23F35EB74(&qword_256E6F4F8);
    v8 = a2();
    result = MEMORY[0x242670A44](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23F361364()
{
  unint64_t result;

  result = qword_256E6F550;
  if (!qword_256E6F550)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for SatifisfactionCondition, &type metadata for SatifisfactionCondition);
    atomic_store(result, (unint64_t *)&qword_256E6F550);
  }
  return result;
}

unint64_t sub_23F3613A0()
{
  unint64_t result;

  result = qword_256E6F568;
  if (!qword_256E6F568)
  {
    result = MEMORY[0x242670A44](&unk_23F61E21C, &type metadata for SatifisfactionCondition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E6F568);
  }
  return result;
}

unint64_t sub_23F3613DC()
{
  unint64_t result;

  result = qword_256E6F570;
  if (!qword_256E6F570)
  {
    result = MEMORY[0x242670A44](&unk_23F61E1CC, &type metadata for SatifisfactionCondition.ForegroundingAppDisabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E6F570);
  }
  return result;
}

uint64_t sub_23F361418(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t *sub_23F36145C(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_23F361498(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

unint64_t sub_23F3614B4()
{
  unint64_t result;

  result = qword_256E6F5B0;
  if (!qword_256E6F5B0)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for SatifisfactionCondition, &type metadata for SatifisfactionCondition);
    atomic_store(result, (unint64_t *)&qword_256E6F5B0);
  }
  return result;
}

uint64_t dispatch thunk of ActionRequirementEvaluating.evaluate(tool:transcript:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 8) + *(_QWORD *)(a5 + 8));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_23F3609AC;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t *initializeBufferWithCopyOfBuffer for RequirementStatus(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v9 = sub_23F61814C();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        return a1;
      }
      *a1 = *a2;
      sub_23F617BA0();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for RequirementStatus(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v3 = sub_23F61814C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  else if (!(_DWORD)result)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *initializeWithCopy for RequirementStatus(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v7 = sub_23F61814C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
    }
    *a1 = *a2;
    sub_23F617BA0();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for RequirementStatus(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_23F362658((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for RequirementStatus);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v7 = sub_23F61814C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
      }
      *a1 = *a2;
      sub_23F617BA0();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for RequirementStatus(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_23F61814C();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for RequirementStatus(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_23F362658((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for RequirementStatus);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_23F61814C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_23F36195C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t sub_23F36196C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_23F361980()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23F361990()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F61814C();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_23F361A14()
{
  return 0;
}

void type metadata accessor for SatifisfactionCondition()
{
  sub_23F362C18();
}

void type metadata accessor for MultiActionRequirementEvaluator()
{
  sub_23F362C18();
}

void type metadata accessor for AlwaysSatisfiedRequirementEvaluator()
{
  sub_23F362C18();
}

uint64_t initializeBufferWithCopyOfBuffer for AnyActionRequirementEvaluating(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t initializeWithCopy for AnyActionRequirementEvaluating(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for AnyActionRequirementEvaluating(uint64_t *a1, uint64_t *a2)
{
  sub_23F361AD0(a1, a2);
  return a1;
}

uint64_t *sub_23F361AD0(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

__n128 initializeWithTake for AnyActionRequirementEvaluating(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for AnyActionRequirementEvaluating(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnyActionRequirementEvaluating(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnyActionRequirementEvaluating(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for AnyActionRequirementEvaluating()
{
  sub_23F362C18();
}

void type metadata accessor for NLLanguage(uint64_t a1)
{
  sub_23F3626CC(a1, &qword_256E6F740);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_23F3626CC(a1, &qword_256E6F748);
}

ValueMetadata *type metadata accessor for SatifisfactionCondition.CodingKeys()
{
  return &type metadata for SatifisfactionCondition.CodingKeys;
}

ValueMetadata *type metadata accessor for SatifisfactionCondition.ForegroundingAppDisabledCodingKeys()
{
  return &type metadata for SatifisfactionCondition.ForegroundingAppDisabledCodingKeys;
}

_BYTE *initializeBufferWithCopyOfBuffer for RequirementStatus.CodingKeys(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for RequirementStatus.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 2) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v5 = v6 - 3;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for RequirementStatus.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23F361E40 + 4 * byte_23F61D9A5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23F361E74 + 4 * byte_23F61D9A0[v4]))();
}

uint64_t sub_23F361E74(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F361E7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F361E84);
  return result;
}

uint64_t sub_23F361E90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F361E98);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23F361E9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F361EA4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F361EB0(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_23F361EB8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for RequirementStatus.CodingKeys()
{
  return &type metadata for RequirementStatus.CodingKeys;
}

ValueMetadata *type metadata accessor for RequirementStatus.SatisfiedCodingKeys()
{
  return &type metadata for RequirementStatus.SatisfiedCodingKeys;
}

ValueMetadata *type metadata accessor for RequirementStatus.SatisfiedWithConditionsCodingKeys()
{
  return &type metadata for RequirementStatus.SatisfiedWithConditionsCodingKeys;
}

uint64_t getEnumTagSinglePayload for FullPlannerFeatureStoreTools.CodingKeys(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s30IntelligenceFlowPlannerRuntime23SatifisfactionConditionOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23F361F80 + 4 * byte_23F61D9AA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23F361FA0 + 4 * byte_23F61D9AF[v4]))();
}

_BYTE *sub_23F361F80(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23F361FA0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F361FA8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F361FB0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23F361FB8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23F361FC0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for RequirementStatus.RequiresCodingKeys()
{
  return &type metadata for RequirementStatus.RequiresCodingKeys;
}

unint64_t sub_23F361FE0()
{
  unint64_t result;

  result = qword_256E6F750;
  if (!qword_256E6F750)
  {
    result = MEMORY[0x242670A44](&unk_23F61DD74, &type metadata for RequirementStatus.RequiresCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E6F750);
  }
  return result;
}

unint64_t sub_23F362020()
{
  unint64_t result;

  result = qword_256E6F758;
  if (!qword_256E6F758)
  {
    result = MEMORY[0x242670A44](&unk_23F61DE2C, &type metadata for RequirementStatus.SatisfiedWithConditionsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E6F758);
  }
  return result;
}

unint64_t sub_23F362060()
{
  unint64_t result;

  result = qword_256E6F760;
  if (!qword_256E6F760)
  {
    result = MEMORY[0x242670A44](&unk_23F61DF34, &type metadata for RequirementStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E6F760);
  }
  return result;
}

unint64_t sub_23F3620A0()
{
  unint64_t result;

  result = qword_256E6F768;
  if (!qword_256E6F768)
  {
    result = MEMORY[0x242670A44](&unk_23F61E03C, &type metadata for SatifisfactionCondition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E6F768);
  }
  return result;
}

void sub_23F3620DC()
{
  sub_23F3612C0(&qword_256E6F770, (uint64_t (*)(uint64_t))type metadata accessor for NLLanguage, (uint64_t)&unk_23F61E0A0);
}

void sub_23F362108()
{
  sub_23F3612C0(&qword_256E6F778, (uint64_t (*)(uint64_t))type metadata accessor for NLLanguage, (uint64_t)&unk_23F61E074);
}

void sub_23F362134()
{
  sub_23F3612C0(&qword_256E6F780, (uint64_t (*)(uint64_t))type metadata accessor for NLLanguage, (uint64_t)&unk_23F61E110);
}

unint64_t sub_23F362164()
{
  unint64_t result;

  result = qword_256E6F788;
  if (!qword_256E6F788)
  {
    result = MEMORY[0x242670A44](&unk_23F61DF5C, &type metadata for SatifisfactionCondition.ForegroundingAppDisabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E6F788);
  }
  return result;
}

unint64_t sub_23F3621A4()
{
  unint64_t result;

  result = qword_256E6F790;
  if (!qword_256E6F790)
  {
    result = MEMORY[0x242670A44](&unk_23F61DF84, &type metadata for SatifisfactionCondition.ForegroundingAppDisabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E6F790);
  }
  return result;
}

unint64_t sub_23F3621E4()
{
  unint64_t result;

  result = qword_256E6F798;
  if (!qword_256E6F798)
  {
    result = MEMORY[0x242670A44](&unk_23F61DFAC, &type metadata for SatifisfactionCondition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E6F798);
  }
  return result;
}

unint64_t sub_23F362224()
{
  unint64_t result;

  result = qword_256E6F7A0;
  if (!qword_256E6F7A0)
  {
    result = MEMORY[0x242670A44](&unk_23F61DFD4, &type metadata for SatifisfactionCondition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E6F7A0);
  }
  return result;
}

unint64_t sub_23F362264()
{
  unint64_t result;

  result = qword_256E6F7A8;
  if (!qword_256E6F7A8)
  {
    result = MEMORY[0x242670A44](&unk_23F61DE54, &type metadata for RequirementStatus.SatisfiedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E6F7A8);
  }
  return result;
}

unint64_t sub_23F3622A4()
{
  unint64_t result;

  result = qword_256E6F7B0;
  if (!qword_256E6F7B0)
  {
    result = MEMORY[0x242670A44](&unk_23F61DE7C, &type metadata for RequirementStatus.SatisfiedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E6F7B0);
  }
  return result;
}

unint64_t sub_23F3622E4()
{
  unint64_t result;

  result = qword_256E6F7B8;
  if (!qword_256E6F7B8)
  {
    result = MEMORY[0x242670A44](&unk_23F61DD9C, &type metadata for RequirementStatus.SatisfiedWithConditionsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E6F7B8);
  }
  return result;
}

unint64_t sub_23F362324()
{
  unint64_t result;

  result = qword_256E6F7C0;
  if (!qword_256E6F7C0)
  {
    result = MEMORY[0x242670A44](&unk_23F61DDC4, &type metadata for RequirementStatus.SatisfiedWithConditionsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E6F7C0);
  }
  return result;
}

unint64_t sub_23F362364()
{
  unint64_t result;

  result = qword_256E6F7C8;
  if (!qword_256E6F7C8)
  {
    result = MEMORY[0x242670A44](&unk_23F61DCE4, &type metadata for RequirementStatus.RequiresCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E6F7C8);
  }
  return result;
}

unint64_t sub_23F3623A4()
{
  unint64_t result;

  result = qword_256E6F7D0;
  if (!qword_256E6F7D0)
  {
    result = MEMORY[0x242670A44](&unk_23F61DD0C, &type metadata for RequirementStatus.RequiresCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E6F7D0);
  }
  return result;
}

unint64_t sub_23F3623E4()
{
  unint64_t result;

  result = qword_256E6F7D8;
  if (!qword_256E6F7D8)
  {
    result = MEMORY[0x242670A44](&unk_23F61DEA4, &type metadata for RequirementStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E6F7D8);
  }
  return result;
}

unint64_t sub_23F362424()
{
  unint64_t result;

  result = qword_256E6F7E0;
  if (!qword_256E6F7E0)
  {
    result = MEMORY[0x242670A44](&unk_23F61DECC, &type metadata for RequirementStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256E6F7E0);
  }
  return result;
}

uint64_t sub_23F362464(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (result < a5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((uint64_t)(a6 >> 1) < result || (uint64_t)(a6 >> 1) < a2)
    goto LABEL_10;
  if (a2 < a5)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if ((a2 & 0x8000000000000000) == 0)
    return swift_unknownObjectRetain();
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_23F3624DC(uint64_t a1, id *a2)
{
  _QWORD *v2;
  uint64_t result;

  sub_23F362BD4(a1, a2);
  result = sub_23F61C0F4();
  *v2 = 0;
  return result;
}

uint64_t sub_23F362540(uint64_t a1, id *a2)
{
  _QWORD *v2;
  char v3;

  sub_23F362BD4(a1, a2);
  v3 = sub_23F61C100();
  *v2 = 0;
  return v3 & 1;
}

void sub_23F3625AC()
{
  sub_23F61C10C();
  sub_23F61C0E8();
  sub_23F362D18();
  sub_23F362928();
}

void sub_23F3625D8(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = sub_23F35D2E8(a2);
  sub_23F362B6C(v2);
  sub_23F362928();
}

void sub_23F362600(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = sub_23F362BC4(a1, a2, a3);
  sub_23F362D20(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  sub_23F362928();
}

void sub_23F36262C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = sub_23F362BC4(a1, a2, a3);
  sub_23F362D20(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  sub_23F362928();
}

void sub_23F362658(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = sub_23F362D9C(a1, a2);
  sub_23F362B6C(v2);
  sub_23F362928();
}

uint64_t sub_23F362678(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

void type metadata accessor for CFError(uint64_t a1)
{
  sub_23F3626CC(a1, &qword_256E6F808);
}

void type metadata accessor for MLModelMetadataKey(uint64_t a1)
{
  sub_23F3626CC(a1, &qword_256E6F810);
}

void type metadata accessor for NLTagScheme(uint64_t a1)
{
  sub_23F3626CC(a1, &qword_256E6F818);
}

void sub_23F3626CC(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

void sub_23F362710()
{
  sub_23F3612C0(&qword_256E6F820, (uint64_t (*)(uint64_t))type metadata accessor for NLTagScheme, (uint64_t)&unk_23F61E424);
}

void sub_23F36273C()
{
  sub_23F3612C0(&qword_256E6F828, (uint64_t (*)(uint64_t))type metadata accessor for NLTagScheme, (uint64_t)&unk_23F61E3F8);
}

void sub_23F362768()
{
  sub_23F3612C0(&qword_256E6F830, (uint64_t (*)(uint64_t))type metadata accessor for NLTagScheme, (uint64_t)&unk_23F61E494);
}

void sub_23F362794()
{
  sub_23F3612C0(&qword_256E6F838, (uint64_t (*)(uint64_t))type metadata accessor for MLModelMetadataKey, (uint64_t)&unk_23F61E584);
}

void sub_23F3627C0()
{
  sub_23F3612C0(&qword_256E6F840, (uint64_t (*)(uint64_t))type metadata accessor for MLModelMetadataKey, (uint64_t)&unk_23F61E558);
}

void sub_23F3627EC()
{
  sub_23F3612C0(&qword_256E6F848, (uint64_t (*)(uint64_t))type metadata accessor for MLModelMetadataKey, (uint64_t)&unk_23F61E5F4);
}

uint64_t sub_23F362888(uint64_t (*a1)(void))
{
  return a1();
}

void sub_23F3628B0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = v0 + 56;
}

uint64_t sub_23F362960(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23F361498(v2, a2);
  return swift_beginAccess();
}

uint64_t sub_23F362984()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F3629A8()
{
  return swift_release();
}

uint64_t sub_23F3629C0()
{
  return swift_task_alloc();
}

uint64_t sub_23F3629E8()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
  *(_QWORD *)(v1 - 8) = *v0;
  return swift_task_dealloc();
}

uint64_t sub_23F362A08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  return a6();
}

void sub_23F362A18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);

  sub_23F362600(v1, v0, v2);
}

uint64_t sub_23F362A28@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_23F362A30()
{
  return type metadata accessor for RequirementStatus();
}

uint64_t sub_23F362A4C()
{
  return swift_task_switch();
}

uint64_t sub_23F362A80()
{
  return sub_23F61CB74();
}

void sub_23F362A98(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F362600(a1, a2, v2);
}

uint64_t sub_23F362AA0()
{
  return swift_task_switch();
}

uint64_t sub_23F362AE0()
{
  return sub_23F61CD3C();
}

uint64_t sub_23F362AEC()
{
  return sub_23F617BA0();
}

uint64_t sub_23F362AF4()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_23F362B0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 192) + 8))(v0, v1);
}

uint64_t sub_23F362B20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 112) + 8))(v1, v0);
}

uint64_t sub_23F362B34()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_23F362B3C()
{
  return sub_23F61CACC();
}

uint64_t sub_23F362B48()
{
  return swift_getEnumCaseMultiPayload();
}

void sub_23F362B54()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);

  sub_23F362658(v0, v1);
}

uint64_t sub_23F362B60()
{
  return sub_23F61CD30();
}

uint64_t sub_23F362B6C(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t sub_23F362B8C()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_23F362B98()
{
  return 0;
}

uint64_t sub_23F362BC4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  return a3(0);
}

void sub_23F362BD4(uint64_t a1, id *a2)
{

}

uint64_t sub_23F362BE4()
{
  return sub_23F61CC64();
}

uint64_t sub_23F362C10()
{
  return sub_23F61CD60();
}

uint64_t sub_23F362C20()
{
  return sub_23F617BA0();
}

uint64_t sub_23F362C48(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 136) = a1;
  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 104);
}

uint64_t sub_23F362C60()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F362C80()
{
  return sub_23F61C91C();
}

uint64_t sub_23F362C90()
{
  return type metadata accessor for RequirementStatus();
}

uint64_t sub_23F362CB0()
{
  return sub_23F61CD30();
}

uint64_t sub_23F362CC8()
{
  return swift_task_dealloc();
}

unint64_t sub_23F362CD0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
  return sub_23F35EB38();
}

uint64_t sub_23F362CDC()
{
  return sub_23F617BA0();
}

void sub_23F362CE4()
{
  sub_23F4724C0();
}

void sub_23F362CF0()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);

  sub_23F362658(v0, v1);
}

uint64_t sub_23F362CFC()
{
  return sub_23F61C22C();
}

uint64_t sub_23F362D08()
{
  return swift_bridgeObjectRelease();
}

void sub_23F362D10(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F362658(v2, a2);
}

uint64_t sub_23F362D18()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F362D20@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_23F362D50()
{
  return sub_23F61CD60();
}

unint64_t sub_23F362D58()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 2;
  return sub_23F35EAFC();
}

uint64_t sub_23F362D64()
{
  return swift_allocError();
}

void sub_23F362D70(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_23F362658(a1, v1);
}

uint64_t sub_23F362D8C()
{
  return type metadata accessor for FullPlannerPreferences();
}

uint64_t sub_23F362D94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_23F362D9C(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  return a2(0);
}

uint64_t sub_23F362DA8()
{
  return type metadata accessor for DependencyId(0);
}

uint64_t sub_23F362DB4()
{
  return sub_23F61C10C();
}

uint64_t sub_23F362DC0()
{
  sub_23F366770();
  sub_23F3612C0((unint64_t *)&qword_256E6FA98, (uint64_t (*)(uint64_t))MEMORY[0x24BE55070], MEMORY[0x24BE55080]);
  return sub_23F61C04C();
}

void sub_23F362E18()
{
  sub_23F61CD30();
  sub_23F366770();
  sub_23F3612C0((unint64_t *)&qword_256E6FA98, (uint64_t (*)(uint64_t))MEMORY[0x24BE55070], MEMORY[0x24BE55080]);
  sub_23F366834();
  sub_23F61CD60();
  sub_23F362AD4();
}

void sub_23F362E74()
{
  sub_23F61CD30();
  sub_23F366770();
  sub_23F3612C0((unint64_t *)&qword_256E6FA98, (uint64_t (*)(uint64_t))MEMORY[0x24BE55070], MEMORY[0x24BE55080]);
  sub_23F366834();
  sub_23F61CD60();
  sub_23F362AD4();
}

_QWORD *sub_23F362EC8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  os_signpost_type_t v13;
  uint8_t *v14;
  uint8_t *v15;
  os_signpost_id_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  _UNKNOWN **v30;
  _QWORD *v31;

  v2 = v1;
  v3 = v0;
  v4 = sub_23F619E20();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v27 - v9;
  if (qword_256E6F080 != -1)
    swift_once();
  v11 = sub_23F619E44();
  sub_23F361498(v11, (uint64_t)qword_256E80338);
  sub_23F619E38();
  sub_23F619DFC();
  v12 = sub_23F619E38();
  v13 = sub_23F61C694();
  if ((sub_23F61C718() & 1) != 0)
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v31 = v0;
    v15 = v14;
    *(_WORD *)v14 = 0;
    v16 = sub_23F619E08();
    _os_signpost_emit_with_name_impl(&dword_23F35A000, v12, v13, v16, "ActionResolver.init", "", v15, 2u);
    v17 = v15;
    v2 = v1;
    v3 = v31;
    MEMORY[0x242670B70](v17, -1, -1);
  }

  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
  sub_23F619E74();
  sub_23F3668A0();
  v18 = sub_23F619E68();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  v19 = type metadata accessor for JointResolver();
  v20 = sub_23F4934F0();
  if (v2)
  {
    sub_23F364C80(v18, "ActionResolver.init");
    swift_release();
    type metadata accessor for ActionResolver();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v29 = v19;
    v30 = &off_250FD8318;
    *(_QWORD *)&v28 = v20;
    sub_23F362678(&v28, (uint64_t)(v3 + 2));
    type metadata accessor for JointResolverFeaturizer();
    sub_23F36682C();
    v3[7] = sub_23F497A5C();
    v21 = objc_msgSend((id)objc_opt_self(), sel_clientWithIdentifier_, 336);
    type metadata accessor for TrialManager();
    v22 = sub_23F36682C();
    v23 = sub_23F50BC04((uint64_t)v21, 0xD000000000000021, 0x800000023F634490, v22);
    type metadata accessor for JointResolverTrialConfigProvider();
    sub_23F36682C();
    v3[8] = sub_23F4A1448(v23);
    v24 = type metadata accessor for DeviceContextClient();
    v25 = sub_23F36682C();
    sub_23F6191FC();
    sub_23F3668A0();
    *(_QWORD *)(v25 + 16) = sub_23F6191F0();
    v3[12] = v24;
    v3[13] = &off_250FD5828;
    v3[9] = v25;
    sub_23F364C80(v18, "ActionResolver.init");
    swift_release();
  }
  return v3;
}

uint64_t sub_23F3631EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v9[29] = a8;
  v9[30] = v8;
  v9[27] = a6;
  v9[28] = a7;
  v9[25] = a4;
  v9[26] = a5;
  v9[23] = a2;
  v9[24] = a3;
  v9[22] = a1;
  v9[31] = _s10ModelInputVMa();
  v9[32] = sub_23F366578();
  v10 = sub_23F619E98();
  v9[33] = v10;
  v9[34] = *(_QWORD *)(v10 - 8);
  v9[35] = sub_23F366654();
  v9[36] = sub_23F3666CC();
  v9[37] = sub_23F3666CC();
  sub_23F35D2E8(&qword_256E6FAA0);
  v9[38] = sub_23F366654();
  v9[39] = sub_23F3666CC();
  v9[40] = type metadata accessor for JointResolution.DeviceContext();
  v9[41] = sub_23F366578();
  v11 = _s14TypedCandidateVMa();
  v9[42] = v11;
  v9[43] = *(_QWORD *)(v11 - 8);
  v9[44] = sub_23F366578();
  v12 = sub_23F616FC4();
  v9[45] = v12;
  v9[46] = *(_QWORD *)(v12 - 8);
  v9[47] = sub_23F366578();
  v13 = type metadata accessor for ActionResolver.Parameter(0);
  v9[48] = v13;
  v9[49] = *(_QWORD *)(v13 - 8);
  v9[50] = sub_23F366578();
  v14 = sub_23F619E20();
  v9[51] = v14;
  v9[52] = *(_QWORD *)(v14 - 8);
  v9[53] = sub_23F366654();
  v9[54] = sub_23F3666CC();
  sub_23F36679C();
  return swift_task_switch();
}

void sub_23F363324()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  NSObject *v3;
  os_signpost_type_t v4;
  uint8_t *v5;
  os_signpost_id_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  char v32;
  unint64_t v33;
  unint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  char v47;
  unint64_t v48;
  unint64_t v49;
  _BOOL8 v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v84;
  BOOL v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;

  v1 = v0;
  if (qword_256E6F080 != -1)
    swift_once();
  v2 = sub_23F619E44();
  sub_23F361498(v2, (uint64_t)qword_256E80338);
  sub_23F619E38();
  sub_23F619DFC();
  v3 = sub_23F619E38();
  v4 = sub_23F61C694();
  if ((sub_23F61C718() & 1) != 0)
  {
    v5 = (uint8_t *)sub_23F366668();
    *(_WORD *)v5 = 0;
    v6 = sub_23F619E08();
    _os_signpost_emit_with_name_impl(&dword_23F35A000, v3, v4, v6, "ActionResolver.run", "", v5, 2u);
    sub_23F366530();
  }
  v7 = v0[53];
  v8 = v0[54];
  v10 = v0[51];
  v9 = v0[52];
  v11 = v1[23];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v8, v10);
  sub_23F619E74();
  swift_allocObject();
  v1[55] = sub_23F619E68();
  sub_23F36673C(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
  v12 = *(_QWORD *)(v11 + 16);
  if (v12)
  {
    v13 = v1[23] + 32;
    sub_23F617BA0();
    do
    {
      v13 += 8;
      sub_23F617BA0();
      sub_23F3668F4();
      sub_23F527700();
      sub_23F362D18();
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
  }
  sub_23F470EBC();
  v15 = v14;
  v1[56] = v14;
  sub_23F362984();
  v16 = *(_QWORD *)(v15 + 16);
  v94 = v15;
  if (v16)
  {
    v17 = v1[49];
    v103 = v1[48];
    v18 = sub_23F3667E8(MEMORY[0x24BEE4AF8]);
    sub_23F37B66C(v18, v19, v20);
    v21 = v15 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
    v22 = *(_QWORD *)(v17 + 72);
    v23 = v106;
    v24 = v21;
    v25 = v16;
    do
    {
      v26 = v1[50];
      sub_23F3663D4(v24, v26, type metadata accessor for ActionResolver.Parameter);
      v27 = *(_BYTE *)(v26 + *(int *)(v103 + 24));
      sub_23F3663AC(v26, type metadata accessor for ActionResolver.Parameter);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v29 = v23;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v30 = sub_23F3666F4();
        sub_23F37B66C(v30, v31, v32);
        v29 = v106;
      }
      v34 = *(_QWORD *)(v29 + 16);
      v33 = *(_QWORD *)(v29 + 24);
      if (v34 >= v33 >> 1)
      {
        v35 = sub_23F3667C0(v33);
        sub_23F37B66C(v35, v34 + 1, 1);
        v29 = v106;
      }
      *(_QWORD *)(v29 + 16) = v34 + 1;
      *(_BYTE *)(v29 + v34 + 32) = v27;
      v24 += v22;
      --v25;
      v23 = v29;
    }
    while (v25);
    v92 = v29;
    v36 = v1[48];
    v37 = sub_23F3667E8(MEMORY[0x24BEE4AF8]);
    sub_23F37B650(v37, v38, v39);
    v40 = v106;
    do
    {
      v41 = v40;
      v42 = v1[50];
      sub_23F3663D4(v21, v42, type metadata accessor for ActionResolver.Parameter);
      v43 = *(_BYTE *)(v42 + *(int *)(v36 + 20));
      v44 = v42;
      v40 = v41;
      sub_23F3663AC(v44, type metadata accessor for ActionResolver.Parameter);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v45 = sub_23F3666F4();
        sub_23F37B650(v45, v46, v47);
        v40 = v106;
      }
      v49 = *(_QWORD *)(v40 + 16);
      v48 = *(_QWORD *)(v40 + 24);
      if (v49 >= v48 >> 1)
      {
        v50 = sub_23F3667C0(v48);
        sub_23F37B650(v50, v49 + 1, 1);
        v40 = v106;
      }
      *(_QWORD *)(v40 + 16) = v49 + 1;
      *(_BYTE *)(v40 + v49 + 32) = v43;
      v21 += v22;
      --v16;
    }
    while (v16);
    v93 = v40;
    v15 = v94;
  }
  else
  {
    v92 = MEMORY[0x24BEE4AF8];
    v93 = MEMORY[0x24BEE4AF8];
  }
  v51 = v1[23];
  sub_23F617BA0();
  v52 = sub_23F364F48(v51, v15);
  v53 = *(_QWORD *)(v52 + 16);
  v54 = MEMORY[0x24BEE4AF8];
  v98 = v52;
  if (v53)
  {
    v95 = v1[43];
    v100 = v1[42];
    v101 = v1;
    v105 = MEMORY[0x24BEE4AF8];
    sub_23F37B5E8();
    v55 = 0;
    v96 = v53;
    v97 = v52 + 32;
    do
    {
      v56 = *(_QWORD *)(v97 + 8 * v55);
      v57 = *(_QWORD *)(v56 + 16);
      if (v57)
      {
        v99 = v55;
        v107 = v54;
        sub_23F617BA0();
        sub_23F37B688();
        v58 = v56 + ((*(unsigned __int8 *)(v95 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80));
        v102 = *(_QWORD *)(v95 + 72);
        v59 = v54;
        do
        {
          v60 = v101[44];
          sub_23F3663D4(v58, v60, (uint64_t (*)(_QWORD))_s14TypedCandidateVMa);
          v61 = (uint64_t *)(v60 + *(int *)(v100 + 20));
          v63 = *v61;
          v62 = v61[1];
          v64 = v61[3];
          v104 = v61[2];
          v65 = v61[4];
          sub_23F617BA0();
          sub_23F3668F4();
          sub_23F617BA0();
          sub_23F3663AC(v60, (uint64_t (*)(_QWORD))_s14TypedCandidateVMa);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_23F3666F4();
            sub_23F37B688();
            v59 = v107;
          }
          v67 = *(_QWORD *)(v59 + 16);
          v66 = *(_QWORD *)(v59 + 24);
          if (v67 >= v66 >> 1)
          {
            sub_23F3667C0(v66);
            sub_23F37B688();
            v59 = v107;
          }
          *(_QWORD *)(v59 + 16) = v67 + 1;
          v68 = (_QWORD *)(v59 + 40 * v67);
          v68[4] = v63;
          v68[5] = v62;
          v68[6] = v104;
          v68[7] = v64;
          v68[8] = v65;
          v58 += v102;
          --v57;
        }
        while (v57);
        swift_bridgeObjectRelease();
        v54 = MEMORY[0x24BEE4AF8];
        v53 = v96;
        v55 = v99;
      }
      else
      {
        v59 = v54;
      }
      v69 = v105;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F37B5E8();
        v69 = v105;
      }
      v70 = *(_QWORD *)(v69 + 16);
      if (v70 >= *(_QWORD *)(v69 + 24) >> 1)
      {
        sub_23F37B5E8();
        v69 = v105;
      }
      ++v55;
      *(_QWORD *)(v69 + 16) = v70 + 1;
      *(_QWORD *)(v69 + 8 * v70 + 32) = v59;
    }
    while (v55 != v53);
    v1 = v101;
    v52 = v98;
  }
  else
  {
    v69 = MEMORY[0x24BEE4AF8];
  }
  sub_23F616EF8();
  v71 = *(_QWORD *)(v52 + 16);
  if (v71)
  {
    v72 = v1[43];
    sub_23F617BA0();
    v73 = 0;
    v74 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      v75 = *(_QWORD *)(v98 + 8 * v73 + 32);
      v76 = *(_QWORD *)(v75 + 16);
      v77 = *(_QWORD *)(v74 + 16);
      if (__OFADD__(v77, v76))
        break;
      sub_23F617BA0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v77 + v76 > *(_QWORD *)(v74 + 24) >> 1)
      {
        sub_23F3772EC();
        v74 = v78;
      }
      if (*(_QWORD *)(v75 + 16))
      {
        v79 = *(_QWORD *)(v74 + 16);
        if ((*(_QWORD *)(v74 + 24) >> 1) - v79 < v76)
          goto LABEL_64;
        v80 = (*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80);
        v81 = *(_QWORD *)(v72 + 72);
        v82 = v74 + v80 + v81 * v79;
        if (v75 + v80 < v82 + v81 * v76 && v82 < v75 + v80 + v81 * v76)
          goto LABEL_66;
        swift_arrayInitWithCopy();
        if (v76)
        {
          v84 = *(_QWORD *)(v74 + 16);
          v85 = __OFADD__(v84, v76);
          v86 = v84 + v76;
          if (v85)
            goto LABEL_65;
          *(_QWORD *)(v74 + 16) = v86;
        }
      }
      else if (v76)
      {
        goto LABEL_63;
      }
      sub_23F362D08();
      if (v71 == ++v73)
      {
        swift_bridgeObjectRelease();
        goto LABEL_61;
      }
    }
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    sub_23F61CA9C();
    sub_23F366810();
  }
  else
  {
LABEL_61:
    swift_bridgeObjectRelease();
    sub_23F368AC4();
    v1[57] = v87;
    v1[58] = sub_23F48E3A0(v69, v92, v93);
    v1[59] = v88;
    v1[60] = v89;
    sub_23F35EA9C((_QWORD *)(v1[30] + 72), *(_QWORD *)(v1[30] + 96));
    v90 = (_QWORD *)swift_task_alloc();
    v1[61] = v90;
    *v90 = v1;
    v90[1] = sub_23F363B9C;
    sub_23F366810();
    sub_23F416960(v91);
  }
}

uint64_t sub_23F363B9C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 496) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    sub_23F362984();
    sub_23F362D18();
    sub_23F362D08();
    sub_23F3667A8();
  }
  sub_23F36679C();
  return sub_23F36664C();
}

uint64_t sub_23F363C20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v2 = *(_QWORD *)(v0 + 320);
  v1 = *(_QWORD *)(v0 + 328);
  v4 = *(_QWORD *)(v0 + 304);
  v3 = *(_QWORD *)(v0 + 312);
  v5 = *(_QWORD *)(v0 + 240);
  v13 = *(_OWORD *)(v0 + 32);
  v14 = *(_OWORD *)(v0 + 16);
  v12 = *(_OWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 64);
  v7 = *(_BYTE *)(v0 + 72);
  sub_23F616FA0();
  v8 = v1 + *(int *)(v2 + 20);
  *(_OWORD *)v8 = v14;
  *(_OWORD *)(v8 + 16) = v13;
  *(_OWORD *)(v8 + 32) = v12;
  *(_QWORD *)(v8 + 48) = v6;
  *(_BYTE *)(v8 + 56) = v7;
  *(_QWORD *)(v0 + 504) = *(_QWORD *)(v5 + 56);
  sub_23F36678C(v3);
  sub_23F36678C(v4);
  v9 = sub_23F499504(v3, v4);
  *(_QWORD *)(v0 + 512) = v9;
  sub_23F3625D8(v4, &qword_256E6FAA0);
  sub_23F3625D8(v3, &qword_256E6FAA0);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 520) = v10;
  *v10 = v0;
  v10[1] = sub_23F363D3C;
  return sub_23F497DDC(*(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 472), *(_QWORD *)(v0 + 480), *(_QWORD *)(v0 + 376), v9);
}

uint64_t sub_23F363D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v4 = (_QWORD *)*v3;
  v4[66] = a1;
  v4[67] = a2;
  v4[68] = v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_23F36679C();
  return sub_23F36664C();
}

uint64_t sub_23F363DB0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 368) + 8))(*(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 360));
  sub_23F3668EC(v1, "ActionResolver.run");
  sub_23F366748();
  sub_23F3665B8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3668E4();
  sub_23F3668DC();
  return sub_23F366630(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F363E3C()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  sub_23F619100();
  sub_23F3668F4();
  sub_23F617BA0();
  v1 = sub_23F619E8C();
  v2 = sub_23F61C61C();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(_QWORD *)(v0 + 536);
    v4 = *(_QWORD *)(v0 + 528);
    v5 = sub_23F366668();
    *(_DWORD *)v5 = 134218240;
    *(_QWORD *)(v0 + 160) = *(_QWORD *)(v3 + 16);
    sub_23F61C790();
    *(_WORD *)(v5 + 12) = 2048;
    *(_QWORD *)(v0 + 168) = *(_QWORD *)(v4 + 16);
    sub_23F61C790();
    sub_23F362D08();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23F35A000, v1, v2, "ToolResolver fetched %ld tupleInteractions and %ld candidateInteractions from InteractionStore", (uint8_t *)v5, 0x16u);
    sub_23F366530();
  }
  swift_bridgeObjectRelease();
  sub_23F362D18();

  sub_23F3668C8(*(_QWORD *)(v0 + 296));
  *(_OWORD *)(v0 + 560) = *(_OWORD *)(v0 + 528);
  sub_23F3667B0();
  *(_QWORD *)(v0 + 576) = v6;
  sub_23F362984();
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 584) = v7;
  v8 = sub_23F366884(v7, (uint64_t)sub_23F363FB0);
  return sub_23F499444(v8);
}

uint64_t sub_23F363FB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 592) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_release();
    *(_QWORD *)(v4 + 600) = a1;
  }
  sub_23F36679C();
  return swift_task_switch();
}

uint64_t sub_23F364028()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  unint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = sub_23F366864();
  if ((v2 & 1) != 0)
    v3 = 2;
  else
    v3 = v1;
  v4 = sub_23F48E834(v3);
  if (v4 != 4)
  {
    v9 = *(_QWORD *)(*(_QWORD *)(v0 + 464) + 16);
    if (v9)
    {
      v10 = v4;
      sub_23F3667D0();
      v12 = v11;
      v13 = *(_QWORD *)(v11 + 16);
      v14 = 2 * v13;
      v15 = v9;
      do
      {
        v16 = v13 + 1;
        if (v13 >= *(_QWORD *)(v12 + 24) >> 1)
        {
          sub_23F3772D0();
          v12 = v18;
        }
        *(_QWORD *)(v12 + 16) = v16;
        v17 = v12 + v14;
        *(_BYTE *)(v17 + 32) = v10;
        *(_BYTE *)(v17 + 33) = 0;
        v14 += 2;
        v13 = v16;
        --v15;
      }
      while (v15);
    }
    v19 = *(_QWORD *)(v0 + 256);
    sub_23F36653C();
    sub_23F3663D4(v20, v19, (uint64_t (*)(_QWORD))type metadata accessor for JointResolution.DeviceContext);
    sub_23F50502C(2047);
  }
  v5 = *(_QWORD *)(v0 + 440);
  v23 = *(_QWORD *)(v0 + 376);
  v21 = *(_QWORD *)(v0 + 368);
  v22 = *(_QWORD *)(v0 + 360);
  v6 = *(_QWORD *)(v0 + 328);
  swift_bridgeObjectRelease();
  sub_23F362984();
  sub_23F362D18();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_23F366750();
  sub_23F366710();
  *(_QWORD *)(v0 + 136) = v3;
  sub_23F61CC1C();
  sub_23F61C280();
  sub_23F362D18();
  sub_23F366414();
  sub_23F362D64();
  *v7 = v24;
  v7[1] = v25;
  swift_willThrow();
  sub_23F3663AC(v6, (uint64_t (*)(_QWORD))type metadata accessor for JointResolution.DeviceContext);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v23, v22);
  sub_23F364C80(v5, "ActionResolver.run");
  sub_23F3667A8();
  sub_23F366588();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3668D4();
  sub_23F3667E0();
  return sub_23F3665F0(*(uint64_t (**)(void))(v0 + 8));
}

#error "23F364280: call analysis failed (funcsize=34)"

uint64_t sub_23F3642F8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 616) = v0;
  swift_task_dealloc();
  if (v0)
    swift_release();
  sub_23F36679C();
  return sub_23F36664C();
}

uint64_t sub_23F36435C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v1 = *(_QWORD *)(v0 + 616);
  sub_23F4850B4();
  if (!v1)
  {
    v9 = v2;
    sub_23F366450(v0 + 80);
    __asm { BR              X10 }
  }
  v3 = *(_QWORD *)(v0 + 440);
  v4 = *(_QWORD *)(v0 + 368);
  v5 = *(_QWORD *)(v0 + 376);
  v6 = *(_QWORD *)(v0 + 360);
  v7 = *(_QWORD *)(v0 + 328);
  v8 = *(_QWORD *)(v0 + 256);
  sub_23F366450(v0 + 80);
  sub_23F366748();
  sub_23F3663AC(v8, (uint64_t (*)(_QWORD))_s10ModelInputVMa);
  sub_23F3663AC(v7, (uint64_t (*)(_QWORD))type metadata accessor for JointResolution.DeviceContext);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v6);
  sub_23F364C80(v3, "ActionResolver.run");
  sub_23F3668FC();
  swift_task_dealloc();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3666C4();
  swift_task_dealloc();
  sub_23F3667E0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F3646C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 368);
  sub_23F3663AC(*(_QWORD *)(v0 + 256), (uint64_t (*)(_QWORD))_s10ModelInputVMa);
  sub_23F3668C0(v2, (uint64_t (*)(_QWORD))type metadata accessor for JointResolution.DeviceContext);
  v3 = sub_23F366764(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F3668EC(v3, "ActionResolver.run");
  sub_23F366748();
  sub_23F3665B8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3668E4();
  sub_23F3668DC();
  return sub_23F366630(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F364774()
{
  _QWORD *v0;
  void *v1;
  os_log_type_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  sub_23F619100();
  sub_23F366808();
  sub_23F366808();
  v1 = (void *)sub_23F619E8C();
  v2 = sub_23F61C628();
  if (sub_23F366874(v2))
  {
    sub_23F366668();
    v3 = (_QWORD *)sub_23F366668();
    sub_23F366778(5.7779e-34);
    v4 = _swift_stdlib_bridgeErrorToNSError();
    v0[19] = v4;
    sub_23F366854();
    *v3 = v4;
    sub_23F3665E8();
    sub_23F3665E8();
    sub_23F366728(&dword_23F35A000, v5, v6, "[RECOVERABLE_ERROR]: %@");
    sub_23F35D2E8(&qword_256E6FAB0);
    sub_23F366844();
    sub_23F366530();
  }
  sub_23F3665E8();
  sub_23F3665E8();
  sub_23F3665E8();

  sub_23F3668C8(v0[36]);
  v7 = MEMORY[0x24BEE4AF8];
  v0[71] = MEMORY[0x24BEE4AF8];
  v0[70] = v7;
  sub_23F3667B0();
  v0[72] = v8;
  sub_23F362984();
  v9 = (_QWORD *)swift_task_alloc();
  v0[73] = v9;
  v10 = sub_23F366884(v9, (uint64_t)sub_23F363FB0);
  return sub_23F499444(v10);
}

uint64_t sub_23F3648C8()
{
  uint64_t v0;
  void *v1;
  os_log_type_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  swift_release();
  sub_23F6190DC();
  sub_23F366808();
  sub_23F366808();
  v1 = (void *)sub_23F619E8C();
  v2 = sub_23F61C61C();
  if (sub_23F366874(v2))
  {
    sub_23F366668();
    v3 = (_QWORD *)sub_23F366668();
    sub_23F366778(5.7779e-34);
    v4 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 144) = v4;
    sub_23F366854();
    *v3 = v4;
    sub_23F3665E8();
    sub_23F3665E8();
    sub_23F366728(&dword_23F35A000, v5, v6, "[Recoverable Error]: Candidate similarity scores can't be fetched: %@");
    sub_23F35D2E8(&qword_256E6FAB0);
    sub_23F366844();
    sub_23F366530();
  }
  sub_23F3665E8();
  sub_23F3665E8();
  sub_23F3665E8();

  (*(void (**)(_QWORD, _QWORD))(v0 + 552))(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 264));
  v7 = sub_23F366864();
  if ((v8 & 1) != 0)
    v9 = 2;
  else
    v9 = v7;
  v10 = sub_23F48E834(v9);
  if (v10 != 4)
  {
    v16 = v10;
    v17 = *(_QWORD *)(*(_QWORD *)(v0 + 464) + 16);
    if (v17)
    {
      sub_23F3667D0();
      v19 = v18;
      v20 = *(_QWORD *)(v18 + 16);
      v21 = 2 * v20;
      v22 = v17;
      do
      {
        v23 = v20 + 1;
        if (v20 >= *(_QWORD *)(v19 + 24) >> 1)
        {
          sub_23F3772D0();
          v19 = v25;
        }
        *(_QWORD *)(v19 + 16) = v23;
        v24 = v19 + v21;
        *(_BYTE *)(v24 + 32) = v16;
        *(_BYTE *)(v24 + 33) = 0;
        v21 += 2;
        v20 = v23;
        --v22;
      }
      while (v22);
    }
    v26 = *(_QWORD *)(v0 + 256);
    sub_23F36653C();
    sub_23F3663D4(v27, v26, (uint64_t (*)(_QWORD))type metadata accessor for JointResolution.DeviceContext);
    sub_23F50502C(2047);
  }
  v11 = *(_QWORD *)(v0 + 440);
  v12 = *(_QWORD *)(v0 + 368);
  v29 = *(_QWORD *)(v0 + 376);
  v28 = *(_QWORD *)(v0 + 360);
  swift_bridgeObjectRelease();
  sub_23F362984();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23F3667A8();
  sub_23F366750();
  sub_23F366710();
  *(_QWORD *)(v0 + 136) = v9;
  sub_23F61CC1C();
  sub_23F61C280();
  sub_23F362D08();
  sub_23F366414();
  sub_23F362D64();
  *v13 = v30;
  v13[1] = v31;
  v14 = swift_willThrow();
  sub_23F366898(v14, (uint64_t (*)(_QWORD))type metadata accessor for JointResolution.DeviceContext);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v29, v28);
  sub_23F364C80(v11, "ActionResolver.run");
  sub_23F3668FC();
  sub_23F366588();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3668D4();
  sub_23F3667E0();
  return sub_23F3665F0(*(uint64_t (**)(void))(v0 + 8));
}

#error "23F364C08: call analysis failed (funcsize=34)"

uint64_t sub_23F364C80(uint64_t a1, const char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  NSObject *v14;
  char v15;
  char v16;
  const char *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  os_signpost_id_t v23;
  _BYTE v24[4];
  int v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;

  v26 = a2;
  v2 = sub_23F619E50();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = &v24[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_23F619E20();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = &v24[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v8);
  v12 = &v24[-v11];
  if (qword_256E6F080 != -1)
    swift_once();
  v13 = sub_23F619E44();
  sub_23F361498(v13, (uint64_t)qword_256E80338);
  v14 = sub_23F619E38();
  sub_23F619E5C();
  v25 = sub_23F61C688();
  if ((sub_23F61C718() & 1) != 0)
  {
    swift_retain();
    sub_23F619E80();
    swift_release();
    if ((*(unsigned int (**)(_BYTE *, uint64_t))(v3 + 88))(v5, v2) == *MEMORY[0x24BEE7810])
    {
      v15 = 0;
      v16 = 0;
      v17 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
      v17 = "%s";
      v16 = 2;
      v15 = 1;
    }
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16))(v10, v12, v6);
    v19 = sub_23F366668();
    v28 = sub_23F366668();
    *(_BYTE *)v19 = v16;
    *(_BYTE *)(v19 + 1) = v15;
    *(_WORD *)(v19 + 2) = 2080;
    v20 = sub_23F61C8F8();
    sub_23F37AE00(v20, v21, &v28);
    v27 = v22;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    v23 = sub_23F619E08();
    _os_signpost_emit_with_name_impl(&dword_23F35A000, v14, (os_signpost_type_t)v25, v23, v26, v17, (uint8_t *)v19, 0xCu);
    swift_arrayDestroy();
    sub_23F366530();
  }

  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v12, v6);
}

unint64_t sub_23F364F48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  _QWORD *v34;
  void (*v35)(char *, unint64_t, uint64_t);
  char *v36;
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  void (*v55)(char *, uint64_t);
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD v68[2];
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  unint64_t v89;
  void (*v90)(char *, char *, uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  unint64_t v102;

  v5 = sub_23F35D2E8(&qword_256E6FAB8);
  MEMORY[0x24BDAC7A8](v5);
  v96 = (uint64_t)v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = sub_23F6188C0();
  v77 = *(_QWORD *)(v88 - 8);
  MEMORY[0x24BDAC7A8](v88);
  v76 = (char *)v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F61B92C();
  v94 = *(_QWORD **)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v85 = (char *)v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v87 = (char *)v68 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v68 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v84 = (char *)v68 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v95 = (char *)v68 - v18;
  v19 = _s14TypedCandidateVMa();
  v82 = *(_QWORD *)(v19 - 8);
  v83 = v19;
  MEMORY[0x24BDAC7A8](v19);
  v86 = (char *)v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(_QWORD *)(a1 + 16);
  if (v21)
  {
    v79 = v15;
    v22 = MEMORY[0x24BEE4AF8];
    v102 = MEMORY[0x24BEE4AF8];
    sub_23F37B61C();
    v23 = 0;
    v24 = v102;
    v25 = a1 + 32;
    v75 = 0x800000023F634440;
    v74 = 0x800000023F634460;
    v72 = a2;
    v68[1] = v2;
    v71 = v21;
    v69 = a1 + 32;
    while (1)
    {
      v26 = *(_QWORD *)(a2 + 16);
      if (v26)
        break;
LABEL_14:
      v102 = v24;
      v62 = *(_QWORD *)(v24 + 16);
      if (v62 >= *(_QWORD *)(v24 + 24) >> 1)
      {
        v63 = v23;
        sub_23F37B61C();
        v25 = v69;
        v23 = v63;
        v24 = v102;
      }
      ++v23;
      *(_QWORD *)(v24 + 16) = v62 + 1;
      *(_QWORD *)(v24 + 8 * v62 + 32) = v22;
      v22 = MEMORY[0x24BEE4AF8];
      if (v23 == v71)
      {
        swift_bridgeObjectRelease();
        return v24;
      }
    }
    v73 = v24;
    v70 = v23;
    v27 = *(_QWORD *)(v25 + 8 * v23);
    v101 = v22;
    swift_bridgeObjectRetain_n();
    sub_23F37B6BC();
    v22 = v101;
    v28 = *(_QWORD *)(type metadata accessor for ActionResolver.Parameter(0) - 8);
    v29 = a2 + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80));
    v80 = *(_QWORD *)(v28 + 72);
    v30 = v87;
    v81 = v27;
    while (*(_QWORD *)(v27 + 16))
    {
      v31 = sub_23F37559C(v29);
      if ((v32 & 1) == 0)
        break;
      v91 = v26;
      v92 = v29;
      v93 = v22;
      v33 = *(_QWORD *)(v27 + 56);
      v34 = v94;
      v35 = (void (*)(char *, unint64_t, uint64_t))v94[2];
      v36 = v84;
      v35(v84, v33 + v94[9] * v31, v8);
      v37 = (void (*)(char *, char *, uint64_t))v34[4];
      v38 = v95;
      v90 = v37;
      v37(v95, v36, v8);
      v39 = v79;
      v35(v79, (unint64_t)v38, v8);
      sub_23F3664B0();
      v40 = sub_23F61BFEC();
      v35(v30, (unint64_t)v39, v8);
      v41 = (uint64_t)v85;
      v35(v85, (unint64_t)v30, v8);
      v42 = v96;
      sub_23F4A4BAC(v41, v96);
      if (sub_23F36195C(v42, 1, v88) == 1)
      {
        sub_23F3625D8(v96, &qword_256E6FAB8);
        v99 = 0;
        v100 = 0xE000000000000000;
        v89 = 0xE000000000000000;
        sub_23F61C8E0();
        sub_23F61C280();
        sub_23F61CA00();
        sub_23F61C280();
        v43 = (void (*)(char *, uint64_t))v94[1];
        v43(v30, v8);
        v43(v39, v8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v44 = sub_23F61BFEC();
        v45 = 0;
        v46 = 0;
        v47 = 0xE000000000000000;
      }
      else
      {
        v48 = v8;
        v49 = v77;
        v50 = v76;
        v51 = v88;
        (*(void (**)(char *, uint64_t, uint64_t))(v77 + 32))(v76, v96, v88);
        v45 = sub_23F6188A8();
        v89 = v52;
        v46 = sub_23F6188B4();
        v78 = v40;
        v54 = v53;
        v55 = (void (*)(char *, uint64_t))v94[1];
        v55(v87, v48);
        v56 = *(void (**)(char *, uint64_t))(v49 + 8);
        v8 = v48;
        v30 = v87;
        v57 = v51;
        v47 = v54;
        v56(v50, v57);
        v55(v39, v8);
        v44 = v78;
      }
      v58 = (uint64_t)v86;
      v90(v86, v95, v8);
      v59 = (uint64_t *)(v58 + *(int *)(v83 + 20));
      v60 = v89;
      *v59 = v45;
      v59[1] = v60;
      v59[2] = v46;
      v59[3] = v47;
      v59[4] = v44;
      v22 = v93;
      v101 = v93;
      v61 = *(_QWORD *)(v93 + 16);
      if (v61 >= *(_QWORD *)(v93 + 24) >> 1)
      {
        sub_23F37B6BC();
        v58 = (uint64_t)v86;
        v22 = v101;
      }
      *(_QWORD *)(v22 + 16) = v61 + 1;
      sub_23F3664EC(v58, v22+ ((*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80))+ *(_QWORD *)(v82 + 72) * v61);
      v29 = v92 + v80;
      v26 = v91 - 1;
      v27 = v81;
      if (v91 == 1)
      {
        swift_bridgeObjectRelease_n();
        a2 = v72;
        v24 = v73;
        v23 = v70;
        v25 = v69;
        goto LABEL_14;
      }
    }
    v99 = 0;
    v100 = 0xE000000000000000;
    sub_23F61C8E0();
    sub_23F61A1C8();
    sub_23F61C280();
    swift_bridgeObjectRelease();
    sub_23F61C280();
    v97 = sub_23F61A1A4();
    v98 = v64 & 1;
    sub_23F35D2E8(&qword_256E6FAC0);
    sub_23F61CA00();
    sub_23F61C280();
    v65 = v99;
    v24 = v100;
    sub_23F366414();
    swift_allocError();
    *v66 = v65;
    v66[1] = v24;
    swift_willThrow();
    swift_release();
    swift_bridgeObjectRelease_n();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  return v24;
}

uint64_t sub_23F365704()
{
  uint64_t v0;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  swift_release();
  swift_release();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 72);
  return v0;
}

uint64_t sub_23F365738()
{
  sub_23F365704();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ActionResolver()
{
  return objc_opt_self();
}

uint64_t *sub_23F365778(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      *a1 = *a2;
      sub_23F617BA0();
      v14 = *(int *)(sub_23F35D2E8(qword_256E6F948) + 48);
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = sub_23F61A1D4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
      v18 = type metadata accessor for ActionResolver.Parameter(0);
      v15[*(int *)(v18 + 20)] = v16[*(int *)(v18 + 20)];
      v15[*(int *)(v18 + 24)] = v16[*(int *)(v18 + 24)];
    }
    else
    {
      if (EnumCaseMultiPayload != 2)
      {
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        return a1;
      }
      *a1 = *a2;
      v8 = *(int *)(sub_23F35D2E8(&qword_256E6F940) + 48);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_23F61A1D4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      v12 = type metadata accessor for ActionResolver.Parameter(0);
      v9[*(int *)(v12 + 20)] = v10[*(int *)(v12 + 20)];
      v9[*(int *)(v12 + 24)] = v10[*(int *)(v12 + 24)];
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for ActionResolver.Parameter(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E6FA50);
}

uint64_t sub_23F3658FC(uint64_t a1)
{
  uint64_t result;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 3)
  {
    swift_bridgeObjectRelease();
    v3 = qword_256E6F948;
  }
  else
  {
    if ((_DWORD)result != 2)
      return result;
    v3 = &qword_256E6F940;
  }
  v4 = a1 + *(int *)(sub_23F35D2E8(v3) + 48);
  v5 = sub_23F61A1D4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_23F365978(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    *a1 = *a2;
    sub_23F617BA0();
    v12 = *(int *)(sub_23F35D2E8(qword_256E6F948) + 48);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = sub_23F61A1D4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = type metadata accessor for ActionResolver.Parameter(0);
    v13[*(int *)(v16 + 20)] = v14[*(int *)(v16 + 20)];
    v13[*(int *)(v16 + 24)] = v14[*(int *)(v16 + 24)];
  }
  else
  {
    if (EnumCaseMultiPayload != 2)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
    }
    *a1 = *a2;
    v7 = *(int *)(sub_23F35D2E8(&qword_256E6F940) + 48);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_23F61A1D4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = type metadata accessor for ActionResolver.Parameter(0);
    v8[*(int *)(v11 + 20)] = v9[*(int *)(v11 + 20)];
    v8[*(int *)(v11 + 24)] = v9[*(int *)(v11 + 24)];
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_23F365AC0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  if (a1 != a2)
  {
    sub_23F3663AC((uint64_t)a1, type metadata accessor for ActionResolver.Decision);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      *a1 = *a2;
      sub_23F617BA0();
      v12 = *(int *)(sub_23F35D2E8(qword_256E6F948) + 48);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = sub_23F61A1D4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
      v16 = type metadata accessor for ActionResolver.Parameter(0);
      v13[*(int *)(v16 + 20)] = v14[*(int *)(v16 + 20)];
      v13[*(int *)(v16 + 24)] = v14[*(int *)(v16 + 24)];
    }
    else
    {
      if (EnumCaseMultiPayload != 2)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
      }
      *a1 = *a2;
      v7 = *(int *)(sub_23F35D2E8(&qword_256E6F940) + 48);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_23F61A1D4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
      v11 = type metadata accessor for ActionResolver.Parameter(0);
      v8[*(int *)(v11 + 20)] = v9[*(int *)(v11 + 20)];
      v8[*(int *)(v11 + 24)] = v9[*(int *)(v11 + 24)];
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for ActionResolver.Decision(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E6F9C0);
}

uint64_t sub_23F365C34(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

_QWORD *sub_23F365C64(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    *a1 = *a2;
    v12 = *(int *)(sub_23F35D2E8(qword_256E6F948) + 48);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = sub_23F61A1D4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    v16 = type metadata accessor for ActionResolver.Parameter(0);
    v13[*(int *)(v16 + 20)] = v14[*(int *)(v16 + 20)];
    v13[*(int *)(v16 + 24)] = v14[*(int *)(v16 + 24)];
  }
  else
  {
    if (EnumCaseMultiPayload != 2)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
    }
    *a1 = *a2;
    v7 = *(int *)(sub_23F35D2E8(&qword_256E6F940) + 48);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_23F61A1D4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    v11 = type metadata accessor for ActionResolver.Parameter(0);
    v8[*(int *)(v11 + 20)] = v9[*(int *)(v11 + 20)];
    v8[*(int *)(v11 + 24)] = v9[*(int *)(v11 + 24)];
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_23F365DA8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  if (a1 != a2)
  {
    sub_23F3663AC((uint64_t)a1, type metadata accessor for ActionResolver.Decision);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      *a1 = *a2;
      v12 = *(int *)(sub_23F35D2E8(qword_256E6F948) + 48);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = sub_23F61A1D4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      v16 = type metadata accessor for ActionResolver.Parameter(0);
      v13[*(int *)(v16 + 20)] = v14[*(int *)(v16 + 20)];
      v13[*(int *)(v16 + 24)] = v14[*(int *)(v16 + 24)];
    }
    else
    {
      if (EnumCaseMultiPayload != 2)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
      }
      *a1 = *a2;
      v7 = *(int *)(sub_23F35D2E8(&qword_256E6F940) + 48);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_23F61A1D4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      v11 = type metadata accessor for ActionResolver.Parameter(0);
      v8[*(int *)(v11 + 20)] = v9[*(int *)(v11 + 20)];
      v8[*(int *)(v11 + 24)] = v9[*(int *)(v11 + 24)];
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23F365F04()
{
  uint64_t result;
  unint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t *v7;

  v4 = MEMORY[0x24BEE0178] + 64;
  v5 = MEMORY[0x24BEE0178] + 64;
  result = type metadata accessor for ActionResolver.Parameter(319);
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v6 = &v3;
    swift_getTupleTypeLayout2();
    v7 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

_QWORD *sub_23F365FB4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F61A1D4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
    *((_BYTE *)a1 + v8) = *((_BYTE *)a2 + v8);
  }
  return a1;
}

uint64_t sub_23F366044(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F61A1D4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_23F366078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23F61A1D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  return a1;
}

uint64_t sub_23F3660DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F61A1D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_23F366144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23F61A1D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  return a1;
}

uint64_t sub_23F3661A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23F61A1D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  return a1;
}

uint64_t sub_23F36620C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F366218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unsigned int v8;

  v6 = sub_23F366770();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return sub_23F36195C(a1, a2, v6);
  v8 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 2)
    return v8 - 1;
  else
    return 0;
}

uint64_t sub_23F366288()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F366294(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = sub_23F366770();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return sub_23F36196C(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t sub_23F366304()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F61A1D4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_23F366380()
{
  sub_23F3612C0(&qword_256E6FA90, type metadata accessor for ActionResolver.Parameter, (uint64_t)&unk_23F61E758);
}

void sub_23F3663AC(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = a2(0);
  sub_23F362B6C(v2);
  sub_23F362928();
}

void sub_23F3663D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  sub_23F362928();
}

unint64_t sub_23F366414()
{
  unint64_t result;

  result = qword_256E6FAA8;
  if (!qword_256E6FAA8)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for JointResolverError, &type metadata for JointResolverError);
    atomic_store(result, (unint64_t *)&qword_256E6FAA8);
  }
  return result;
}

uint64_t sub_23F366450(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_23F3664B0()
{
  unint64_t result;

  result = qword_256E6FAC8;
  if (!qword_256E6FAC8)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for JointResolution.CandidateSignalType, &type metadata for JointResolution.CandidateSignalType);
    atomic_store(result, (unint64_t *)&qword_256E6FAC8);
  }
  return result;
}

uint64_t sub_23F3664EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s14TypedCandidateVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_23F366530()
{
  JUMPOUT(0x242670B70);
}

int8x8_t sub_23F36653C()
{
  float64x2_t *v0;
  float32x2_t v1;

  v1 = (float32x2_t)vrev64_s32((int32x2_t)vcvt_f32_f64(v0[2]));
  return vbic_s8((int8x8_t)v1, (int8x8_t)vclez_f32(v1));
}

uint64_t sub_23F366578()
{
  return swift_task_alloc();
}

uint64_t sub_23F366588()
{
  return swift_task_dealloc();
}

uint64_t sub_23F3665B8()
{
  return swift_task_dealloc();
}

void sub_23F3665E8()
{
  void *v0;

}

uint64_t sub_23F3665F0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23F366610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  return sub_23F493CB8(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_23F366630(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23F36664C()
{
  return swift_task_switch();
}

uint64_t sub_23F366654()
{
  return swift_task_alloc();
}

uint64_t sub_23F366668()
{
  return swift_slowAlloc();
}

uint64_t sub_23F366698()
{
  return swift_task_dealloc();
}

uint64_t sub_23F3666A0()
{
  return swift_task_dealloc();
}

uint64_t sub_23F3666A8()
{
  return swift_release();
}

uint64_t sub_23F3666C4()
{
  return swift_task_dealloc();
}

uint64_t sub_23F3666CC()
{
  return swift_task_alloc();
}

uint64_t sub_23F3666D4()
{
  return swift_task_dealloc();
}

uint64_t sub_23F3666DC()
{
  return swift_task_dealloc();
}

uint64_t sub_23F3666E4()
{
  return swift_task_dealloc();
}

uint64_t sub_23F3666EC()
{
  return swift_task_dealloc();
}

uint64_t sub_23F3666F4()
{
  return 0;
}

uint64_t sub_23F366708()
{
  return swift_task_dealloc();
}

uint64_t sub_23F366710()
{
  return sub_23F61C280();
}

void sub_23F366728(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t sub_23F36673C@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_23F366748()
{
  return swift_release();
}

uint64_t sub_23F366750()
{
  return sub_23F61C8E0();
}

uint64_t sub_23F366764@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_23F366770()
{
  return sub_23F61A1D4();
}

id sub_23F366778(float a1)
{
  void *v1;
  float *v2;

  *v2 = a1;
  return v1;
}

uint64_t sub_23F36678C(uint64_t a1)
{
  uint64_t v1;

  return sub_23F36196C(a1, 1, 1, v1);
}

uint64_t sub_23F3667A8()
{
  return swift_release();
}

void sub_23F3667B0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 552) = v0;
  sub_23F470EA0();
}

BOOL sub_23F3667C0@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

void sub_23F3667D0()
{
  sub_23F3772D0();
}

uint64_t sub_23F3667E0()
{
  return swift_task_dealloc();
}

uint64_t sub_23F3667E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = a1;
  return 0;
}

void sub_23F366800(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F3663AC(v2, a2);
}

id sub_23F366808()
{
  void *v0;

  return v0;
}

uint64_t sub_23F36682C()
{
  return swift_allocObject();
}

uint64_t sub_23F366834()
{
  return sub_23F61C04C();
}

uint64_t sub_23F366844()
{
  return swift_arrayDestroy();
}

uint64_t sub_23F366854()
{
  return sub_23F61C790();
}

uint64_t sub_23F366864()
{
  uint64_t v0;

  return sub_23F4A13B4(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 216));
}

BOOL sub_23F366874(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_23F366884@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

void sub_23F366898(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F3663AC(v2, a2);
}

uint64_t sub_23F3668A0()
{
  return swift_allocObject();
}

__n128 sub_23F3668AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, __int128 a11, __int128 a12)
{
  uint64_t v12;

  *(_OWORD *)(v12 + 8) = a11;
  return (__n128)a12;
}

void sub_23F3668C0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F3663AC(v2, a2);
}

uint64_t sub_23F3668C8(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 272) + 8))(a1, *(_QWORD *)(v1 + 264));
}

uint64_t sub_23F3668D4()
{
  return swift_task_dealloc();
}

uint64_t sub_23F3668DC()
{
  return swift_task_dealloc();
}

uint64_t sub_23F3668E4()
{
  return swift_task_dealloc();
}

uint64_t sub_23F3668EC(uint64_t a1, const char *a2)
{
  uint64_t v2;

  return sub_23F364C80(v2, a2);
}

uint64_t sub_23F3668F4()
{
  return sub_23F617BA0();
}

uint64_t sub_23F3668FC()
{
  return swift_release();
}

_QWORD *sub_23F366904(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;

  *result = v2;
  result[1] = v1;
  return result;
}

uint64_t sub_23F36691C(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = MEMORY[0x24BEE4AF8];
  if (!v5)
    return v6;
  v7 = a3;
  v25 = MEMORY[0x24BEE4AF8];
  sub_23F37B6F0();
  v6 = v25;
  result = sub_23F3C0378(v7);
  v9 = result;
  v11 = v10;
  v13 = v12 & 1;
  v20 = v7 + 56;
  while ((v9 & 0x8000000000000000) == 0 && v9 < 1 << *(_BYTE *)(v7 + 32))
  {
    if (((*(_QWORD *)(v20 + (((unint64_t)v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
      goto LABEL_15;
    if (*(_DWORD *)(v7 + 36) != (_DWORD)v11)
      goto LABEL_16;
    v14 = v6;
    v23 = *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v9);
    sub_23F617BA0();
    v6 = a2;
    a1(&v24, &v23);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return v6;
    }
    v15 = v7;
    swift_bridgeObjectRelease();
    v16 = v24;
    v6 = v14;
    v25 = v14;
    v17 = *(_QWORD *)(v14 + 16);
    if (v17 >= *(_QWORD *)(v6 + 24) >> 1)
    {
      sub_23F37B6F0();
      v6 = v25;
    }
    *(_QWORD *)(v6 + 16) = v17 + 1;
    *(_QWORD *)(v6 + 8 * v17 + 32) = v16;
    v7 = v15;
    result = sub_23F3C0290(v9, v11, v13 & 1, v15);
    v9 = result;
    v11 = v18;
    v13 = v19 & 1;
    --v5;
    v4 = 0;
    if (!v5)
    {
      sub_23F382E0C(result, v18, v19 & 1);
      return v6;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

void sub_23F366AE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, unint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, unint64_t, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;

  v55 = sub_23F35D2E8(&qword_256E6FAF8);
  v3 = MEMORY[0x24BDAC7A8](v55);
  v54 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v53 = (char *)&v47 - v6;
  v7 = MEMORY[0x24BDAC7A8](v5);
  v52 = (uint64_t)&v47 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v51 = (char *)&v47 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v50 = (char *)&v47 - v11;
  v12 = *(_QWORD *)(a1 + 16);
  if (v12)
  {
    v47 = v1;
    v65 = MEMORY[0x24BEE4AF8];
    sub_23F37B47C();
    v13 = sub_23F382520(a1);
    if (v13 < 0 || (v16 = v13, v13 >= 1 << *(_BYTE *)(a1 + 32)))
    {
LABEL_20:
      __break(1u);
    }
    else
    {
      v17 = a1 + 64;
      v18 = v15 & 1;
      v48 = a1 + 64;
      v49 = a1;
      while ((*(_QWORD *)(v17 + 8 * (v16 >> 6)) & (1 << v16)) != 0)
      {
        if ((_DWORD)v14 != *(_DWORD *)(a1 + 36))
          goto LABEL_22;
        v57 = 1 << v16;
        v58 = v16 >> 6;
        v64 = v18;
        v56 = v14;
        v19 = v55;
        v20 = (uint64_t)v50;
        v21 = &v50[*(int *)(v55 + 48)];
        v60 = v12;
        v61 = v21;
        v22 = *(_QWORD *)(a1 + 48);
        v23 = sub_23F61A1D4();
        v63 = *(_QWORD *)(v23 - 8);
        v24 = *(void (**)(uint64_t, unint64_t, uint64_t))(v63 + 16);
        v24(v20, v22 + *(_QWORD *)(v63 + 72) * v16, v23);
        v25 = *(_QWORD *)(a1 + 56);
        v26 = sub_23F61B404();
        v62 = *(_QWORD *)(v26 - 8);
        v27 = *(_QWORD *)(v62 + 72);
        v59 = v16;
        v28 = *(void (**)(char *, unint64_t, uint64_t))(v62 + 16);
        v29 = v61;
        v28(v61, v25 + v27 * v16, v26);
        v30 = (uint64_t)v51;
        v24((uint64_t)v51, v20, v23);
        v28((char *)(v30 + *(int *)(v19 + 48)), (unint64_t)v29, v26);
        v31 = v52;
        sub_23F383004(v30, v52, &qword_256E6FAF8);
        sub_23F3625D8(v20, &qword_256E6FAF8);
        v32 = *(int *)(v19 + 48);
        v33 = v53;
        v34 = &v53[v32];
        v35 = v31 + v32;
        v24((uint64_t)v53, v31, v23);
        v28(v34, v35, v26);
        v36 = *(int *)(v19 + 48);
        v37 = (uint64_t)v54;
        v38 = &v54[v36];
        (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v54, v33, v23);
        (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v38, v34, v26);
        v39 = sub_23F61A1C8();
        v41 = v40;
        sub_23F3625D8(v37, &qword_256E6FAF8);
        sub_23F3625D8(v31, &qword_256E6FAF8);
        v42 = v65;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F37B47C();
          v42 = v65;
        }
        v43 = *(_QWORD *)(v42 + 16);
        if (v43 >= *(_QWORD *)(v42 + 24) >> 1)
        {
          sub_23F37B47C();
          v42 = v65;
        }
        *(_QWORD *)(v42 + 16) = v43 + 1;
        v44 = v42 + 16 * v43;
        *(_QWORD *)(v44 + 32) = v39;
        *(_QWORD *)(v44 + 40) = v41;
        if ((v64 & 1) != 0)
          goto LABEL_26;
        v17 = v48;
        a1 = v49;
        v45 = v60;
        if (v59 >= -(-1 << *(_BYTE *)(v49 + 32)))
          goto LABEL_23;
        if ((*(_QWORD *)(v48 + 8 * v58) & v57) == 0)
          goto LABEL_24;
        if ((_DWORD)v56 != *(_DWORD *)(v49 + 36))
          goto LABEL_25;
        v46 = sub_23F61C868();
        v12 = v45 - 1;
        if (!v12)
          return;
        v16 = v46;
        if ((v46 & 0x8000000000000000) == 0)
        {
          v18 = 0;
          v14 = *(unsigned int *)(a1 + 36);
          if (v46 < 1 << *(_BYTE *)(a1 + 32))
            continue;
        }
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
}

uint64_t sub_23F366EF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v3 = v2;
  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    v6 = a1;
    v24 = MEMORY[0x24BEE4AF8];
    sub_23F37B7F4();
    v7 = v24;
    result = sub_23F3C0378(v6);
    v9 = result;
    v11 = v10;
    v13 = v12 & 1;
    v19 = a2;
    v20 = v6 + 56;
    while ((v9 & 0x8000000000000000) == 0 && v9 < 1 << *(_BYTE *)(v6 + 32))
    {
      if (((*(_QWORD *)(v20 + (((unint64_t)v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_16;
      if (*(_DWORD *)(v6 + 36) != (_DWORD)v11)
        goto LABEL_17;
      v22 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v9);
      sub_23F617BA0();
      sub_23F372D70(&v22, a2, &v21, &v23);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        return v7;
      }
      v14 = v6;
      swift_bridgeObjectRelease();
      v15 = v23;
      v24 = v7;
      v16 = *(_QWORD *)(v7 + 16);
      if (v16 >= *(_QWORD *)(v7 + 24) >> 1)
      {
        sub_23F37B7F4();
        v7 = v24;
      }
      *(_QWORD *)(v7 + 16) = v16 + 1;
      *(_QWORD *)(v7 + 8 * v16 + 32) = v15;
      v6 = v14;
      result = sub_23F3C0290(v9, v11, v13 & 1, v14);
      v9 = result;
      v11 = v17;
      v13 = v18 & 1;
      --v5;
      a2 = v19;
      v3 = 0;
      if (!v5)
      {
        sub_23F382E0C(result, v17, v18 & 1);
        swift_bridgeObjectRelease();
        return v7;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

uint64_t sub_23F3670E4(void (*a1)(uint64_t *, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t *, uint64_t *);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = v3;
  v17 = a1;
  v18 = a2;
  v16 = sub_23F61B92C();
  v6 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = MEMORY[0x24BEE4AF8];
  if (v9)
  {
    v21 = MEMORY[0x24BEE4AF8];
    sub_23F37B78C();
    v10 = v21;
    v11 = (uint64_t *)(a3 + 32);
    while (1)
    {
      v12 = *v11++;
      v20 = v12;
      v17(&v20, &v19);
      if (v4)
        break;
      v4 = 0;
      v21 = v10;
      v13 = *(_QWORD *)(v10 + 16);
      if (v13 >= *(_QWORD *)(v10 + 24) >> 1)
      {
        sub_23F37B78C();
        v10 = v21;
      }
      *(_QWORD *)(v10 + 16) = v13 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v13, v8, v16);
      if (!--v9)
        return v10;
    }
    swift_release();
  }
  return v10;
}

void sub_23F367240(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;
  char v5;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_23F383AB4();
    sub_23F37B8DC();
    sub_23F61BAAC();
    sub_23F384168();
    while (1)
    {
      sub_23F383A70();
      if (v3)
        break;
      sub_23F3843B8();
      if (v4)
      {
        sub_23F38413C();
        sub_23F37B8DC();
      }
      sub_23F384348();
      if (v5)
        goto LABEL_10;
    }
    sub_23F383EDC();
  }
LABEL_10:
  sub_23F383EE4();
  sub_23F384024();
}

void sub_23F3672F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F362C98();
  v3 = v2;
  v4 = sub_23F35D2E8(&qword_256E70520);
  MEMORY[0x24BDAC7A8](v4);
  sub_23F384300();
  if (v1)
  {
    sub_23F3845B4();
    sub_23F37B9C0();
    sub_23F384A38();
    v5 = sub_23F61BBA8();
    sub_23F384188(v5);
    while (1)
    {
      sub_23F383A70();
      if (v0)
        break;
      sub_23F38471C();
      if (v6)
        sub_23F37B9C0();
      v7 = sub_23F384000();
      sub_23F383004(v7, v8, &qword_256E70520);
      v3 += v9;
      if (!--v1)
        goto LABEL_9;
    }
    sub_23F383EDC();
  }
LABEL_9:
  sub_23F383A78();
  sub_23F362870();
}

void sub_23F3673D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;
  char v5;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_23F383AB4();
    sub_23F37B47C();
    sub_23F384B44();
    sub_23F384168();
    while (1)
    {
      sub_23F383A70();
      if (v3)
        break;
      sub_23F3843B8();
      if (v4)
      {
        sub_23F38413C();
        sub_23F37B47C();
      }
      sub_23F384348();
      if (v5)
        goto LABEL_10;
    }
    sub_23F383EDC();
  }
LABEL_10:
  sub_23F383EE4();
  sub_23F384024();
}

uint64_t sub_23F367488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  char v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  int64_t v22;
  char v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  char v33;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = MEMORY[0x24BEE4AF8];
  if (v5)
  {
    v7 = a3;
    v8 = sub_23F383AB4();
    sub_23F37B860(v8, v9, v10);
    sub_23F384A38();
    sub_23F61B92C();
    sub_23F384378();
    while (1)
    {
      sub_23F383A70();
      if (v3)
        break;
      v11 = v29;
      v12 = v30;
      v13 = v31;
      v14 = v32;
      v15 = *(_QWORD *)(v6 + 16);
      if (v15 >= *(_QWORD *)(v6 + 24) >> 1)
      {
        sub_23F38413C();
        v27 = v18;
        v28 = v17;
        v25 = v20;
        v26 = v19;
        sub_23F37B860(v21, v22, v23);
        v14 = v25;
        v13 = v26;
        v12 = v27;
        v11 = v28;
      }
      *(_QWORD *)(v6 + 16) = v15 + 1;
      v16 = v6 + 72 * v15;
      *(_OWORD *)(v16 + 32) = v11;
      *(_OWORD *)(v16 + 48) = v12;
      *(_OWORD *)(v16 + 64) = v13;
      *(_OWORD *)(v16 + 80) = v14;
      *(_BYTE *)(v16 + 96) = v33;
      v7 += v4;
      if (!--v5)
        return sub_23F383EE4();
    }
    sub_23F383EDC();
  }
  return sub_23F383EE4();
}

void sub_23F367598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;

  v5 = *(_QWORD *)(a3 + 16);
  if (v5)
  {
    v6 = a3;
    v14 = MEMORY[0x24BEE4AF8];
    sub_23F383AB4();
    sub_23F37B910();
    sub_23F384B44();
    sub_23F384378();
    while (1)
    {
      sub_23F383A70();
      if (v3)
        break;
      v7 = v13;
      v8 = *(_QWORD *)(v14 + 16);
      if (v8 >= *(_QWORD *)(v14 + 24) >> 1)
      {
        sub_23F38413C();
        v11 = v10;
        sub_23F37B910();
        v7 = v11;
      }
      *(_QWORD *)(v14 + 16) = v8 + 1;
      v9 = v14 + 24 * v8;
      *(_QWORD *)(v9 + 32) = v12;
      *(_OWORD *)(v9 + 40) = v7;
      v6 += v4;
      if (!--v5)
        goto LABEL_9;
    }
    sub_23F383EDC();
  }
LABEL_9:
  sub_23F383EE4();
  sub_23F383628();
}

void sub_23F367680()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(_QWORD *__return_ptr, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  int v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(_QWORD);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  char v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(_QWORD *__return_ptr, uint64_t);
  uint64_t v33;
  int64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  _QWORD v43[8];
  char v44;
  uint64_t v45;

  sub_23F362C98();
  sub_23F384B6C();
  v33 = v2;
  v32 = v3;
  v31 = *(_QWORD *)(type metadata accessor for DynamicEnumeration(0) - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F3834D0();
  v30 = v5;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F383780();
  sub_23F384990(v7);
  v8 = *(_QWORD *)(v1 + 16);
  if (v8)
  {
    v45 = MEMORY[0x24BEE4AF8];
    sub_23F37B860(0, v8, 0);
    v9 = sub_23F382520(v1);
    if ((v11 & 1) == 0)
    {
      v12 = v9;
      v13 = v1 + 64;
      v14 = v8 - 1;
      if ((v9 & 0x8000000000000000) == 0)
      {
        while (v12 < 1 << *(_BYTE *)(v1 + 32))
        {
          if ((*(_QWORD *)(v13 + 8 * ((unint64_t)v12 >> 6)) & (1 << v12)) == 0)
            goto LABEL_21;
          if (v10 != *(_DWORD *)(v1 + 36))
            goto LABEL_22;
          v42 = v10;
          sub_23F362600(*(_QWORD *)(v1 + 56) + *(_QWORD *)(v31 + 72) * v12, v29, type metadata accessor for DynamicEnumeration);
          sub_23F36262C(v29, v30, type metadata accessor for DynamicEnumeration);
          v15 = v33;
          v32(v43, v30);
          v16 = sub_23F3848C0();
          sub_23F382F88(v16, v17);
          if (v0)
          {
            swift_release();
            goto LABEL_19;
          }
          v34 = v14;
          v19 = v43[0];
          v18 = v43[1];
          v40 = v43[3];
          v41 = v43[2];
          v38 = v43[5];
          v39 = v43[4];
          v36 = v43[7];
          v37 = v43[6];
          v35 = v44;
          if ((sub_23F3848A8() & 1) == 0)
          {
            v20 = sub_23F384468();
            sub_23F37B860(v20, v21, v22);
            v15 = v45;
          }
          v23 = *(_QWORD *)(v15 + 16);
          if (v23 >= *(_QWORD *)(v15 + 24) >> 1)
          {
            sub_23F3845A4();
            sub_23F37B860(v26, v27, v28);
            v15 = v45;
          }
          *(_QWORD *)(v15 + 16) = v23 + 1;
          v24 = v15 + 72 * v23;
          *(_QWORD *)(v24 + 32) = v19;
          *(_QWORD *)(v24 + 40) = v18;
          *(_QWORD *)(v24 + 48) = v41;
          *(_QWORD *)(v24 + 56) = v40;
          *(_QWORD *)(v24 + 64) = v39;
          *(_QWORD *)(v24 + 72) = v38;
          *(_QWORD *)(v24 + 80) = v37;
          *(_QWORD *)(v24 + 88) = v36;
          *(_BYTE *)(v24 + 96) = v35;
          if (v12 >= -(-1 << *(_BYTE *)(v1 + 32)))
            goto LABEL_23;
          v13 = v1 + 64;
          if ((*(_QWORD *)(v1 + 64 + 8 * ((unint64_t)v12 >> 6)) & (1 << v12)) == 0)
            goto LABEL_24;
          if (v42 != *(_DWORD *)(v1 + 36))
            goto LABEL_25;
          v25 = sub_23F61C868();
          if (!v34)
            goto LABEL_19;
          v12 = v25;
          v10 = *(_DWORD *)(v1 + 36);
          v14 = v34 - 1;
          v0 = 0;
          if (v25 < 0)
            break;
        }
      }
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
    }
    __break(1u);
  }
  else
  {
LABEL_19:
    sub_23F383A78();
    sub_23F362870();
  }
}

uint64_t sub_23F367958(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F3679BC(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BEBA5E0]);
}

void sub_23F367974()
{
  sub_23F3682E8();
}

uint64_t sub_23F3679A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F3679BC(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BEB8FE0]);
}

uint64_t sub_23F3679BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = MEMORY[0x24BEE4AF8];
  if (v5)
  {
    sub_23F383AB4();
    sub_23F37BCC4();
    v9 = sub_23F384A38();
    v10 = *(_QWORD *)(a4(v9) - 8);
    v11 = a3 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v21 = *(_QWORD *)(v10 + 72);
    while (1)
    {
      sub_23F383A70();
      if (v4)
        break;
      v12 = v22;
      v13 = v25;
      v26 = v6;
      v14 = *(_QWORD *)(v6 + 16);
      if (v14 >= *(_QWORD *)(v6 + 24) >> 1)
      {
        sub_23F38413C();
        v17 = v16;
        v20 = v18;
        sub_23F37BCC4();
        v13 = v20;
        v12 = v17;
        v6 = v26;
      }
      *(_QWORD *)(v6 + 16) = v14 + 1;
      v15 = (_QWORD *)(v6 + 32 * v14);
      v15[4] = v12;
      v15[5] = v23;
      v15[6] = v24;
      v15[7] = v13;
      v11 += v21;
      if (!--v5)
        return sub_23F383EE4();
    }
    sub_23F383EDC();
  }
  return sub_23F383EE4();
}

void sub_23F367AE4(void (*a1)(uint64_t *__return_ptr, uint64_t *, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  if (v5)
  {
    v16 = MEMORY[0x24BEE4AF8];
    sub_23F383AB4();
    sub_23F37C0C4();
    v8 = v16;
    v9 = (uint64_t *)(a3 + 32);
    while (1)
    {
      v10 = *v9++;
      v14 = v10;
      swift_retain();
      a1(&v15, &v14, &v13);
      if (v4)
        break;
      v4 = 0;
      sub_23F384AF8();
      v11 = v15;
      v16 = v8;
      v12 = *(_QWORD *)(v8 + 16);
      if (v12 >= *(_QWORD *)(v8 + 24) >> 1)
      {
        sub_23F37C0C4();
        v8 = v16;
      }
      *(_QWORD *)(v8 + 16) = v12 + 1;
      *(_QWORD *)(v8 + 8 * v12 + 32) = v11;
      if (!--v5)
        goto LABEL_9;
    }
    sub_23F383EDC();
    sub_23F384AF8();
  }
LABEL_9:
  sub_23F383EE4();
  sub_23F383F58();
}

void sub_23F367BDC()
{
  sub_23F367DEC();
}

void sub_23F367C08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_23F362C98();
  sub_23F384B6C();
  sub_23F61A408();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F36285C();
  v22 = v3;
  v4 = *(_QWORD *)(v1 + 16);
  if (v4)
  {
    v23 = MEMORY[0x24BEE4AF8];
    sub_23F384128();
    sub_23F37C12C();
    v5 = sub_23F3C0378(v1);
    v7 = v6;
    v21 = v1 + 56;
    while ((v5 & 0x8000000000000000) == 0)
    {
      sub_23F384958();
      if (v5 >= v8)
        break;
      if (((*(_QWORD *)(v21 + (((unint64_t)v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
        goto LABEL_15;
      if (*(_DWORD *)(v1 + 36) != v7)
        goto LABEL_16;
      sub_23F384A00();
      sub_23F383A70();
      if (v0)
      {
        sub_23F384AF8();
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
      v9 = v1;
      swift_bridgeObjectRelease();
      v10 = *(_QWORD *)(v23 + 16);
      if (v10 >= *(_QWORD *)(v23 + 24) >> 1)
      {
        sub_23F38413C();
        sub_23F37C12C();
      }
      *(_QWORD *)(v23 + 16) = v10 + 1;
      sub_23F383E04();
      (*(void (**)(unint64_t, uint64_t))(v12 + 32))(v23 + v11 + *(_QWORD *)(v12 + 72) * v10, v22);
      v13 = sub_23F3848F0();
      v1 = v9;
      v5 = sub_23F3C0290(v13, v14, v15, v9);
      v7 = v16;
      v18 = v17 & 1;
      if (!--v4)
      {
        v19 = sub_23F3848F0();
        sub_23F382E0C(v19, v20, v18);
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
  }
  else
  {
LABEL_13:
    sub_23F383A78();
    sub_23F362870();
  }
}

void sub_23F367DC0()
{
  sub_23F367DEC();
}

void sub_23F367DEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(_QWORD);
  uint64_t v4;
  uint64_t v5;
  void (*v6)(void);
  uint64_t v7;
  char v8;
  unint64_t v9;
  void (*v10)(unint64_t);
  void (*v11)(void);
  uint64_t v12;

  sub_23F362C98();
  sub_23F384B6C();
  v3(0);
  sub_23F384068();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F384A50();
  if (v2)
  {
    v5 = sub_23F384128();
    v11 = v6;
    ((void (*)(uint64_t))v6)(v5);
    sub_23F38476C();
    sub_23F384394();
    v12 = v7;
    while (1)
    {
      sub_23F383A70();
      if (v0)
        break;
      sub_23F384704();
      if (v8)
      {
        sub_23F3845A4();
        v11();
      }
      v9 = sub_23F383D7C();
      v10(v9);
      v1 += v12;
      if (!--v2)
        goto LABEL_9;
    }
    swift_release();
  }
LABEL_9:
  sub_23F383A78();
  sub_23F362870();
}

void sub_23F367ED8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t *);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  uint64_t v22;
  int v23;
  _QWORD *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t *);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  sub_23F362C98();
  v1 = v0;
  v3 = v2;
  v56 = v4;
  v57 = v5;
  v55 = sub_23F35D2E8(&qword_256E6FCD8);
  v51 = *(_QWORD *)(v55 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v6);
  v54 = (uint64_t)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F3838E4();
  v53 = v9;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F3838E4();
  v52 = v11;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v48 - v13;
  v15 = *(_QWORD *)(v3 + 16);
  if (v15)
  {
    v66 = MEMORY[0x24BEE4AF8];
    sub_23F37C300();
    v16 = sub_23F382520(v3);
    if ((v16 & 0x8000000000000000) == 0 && (v17 = v16, sub_23F383E6C(), v20 ^ v21))
    {
      v22 = v3 + 64;
      v23 = v19 & 1;
      v49 = v3 + 64;
      v50 = v3;
      v24 = v52;
      while ((*(_QWORD *)(v22 + 8 * (v17 >> 6)) & (1 << v17)) != 0)
      {
        if ((_DWORD)v18 != *(_DWORD *)(v3 + 36))
          goto LABEL_25;
        v59 = 1 << v17;
        v60 = v17 >> 6;
        v63 = v23;
        v58 = v18;
        v61 = v15;
        v25 = v55;
        v26 = (char *)v24 + *(int *)(v55 + 48);
        v64 = v1;
        v27 = *(_QWORD *)(v3 + 56);
        v28 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v17);
        v29 = *v28;
        v30 = v28[1];
        v31 = sub_23F6184B8();
        sub_23F38380C();
        v62 = v17;
        v33 = v27 + v32 * v17;
        v35 = *(void (**)(char *, uint64_t, uint64_t))(v34 + 16);
        v35(v26, v33, v31);
        *v24 = v29;
        v24[1] = v30;
        v36 = v14;
        v37 = v53;
        *(_QWORD *)v53 = v29;
        *((_QWORD *)v37 + 1) = v30;
        v35(&v37[*(int *)(v25 + 48)], (uint64_t)v26, v31);
        v38 = (uint64_t)v37;
        v14 = v36;
        v39 = v54;
        sub_23F383004(v38, v54, &qword_256E6FCD8);
        swift_bridgeObjectRetain_n();
        sub_23F3625D8((uint64_t)v24, &qword_256E6FCD8);
        v40 = v57;
        v41 = v64;
        v56(v39, &v65);
        v1 = v41;
        sub_23F3625D8(v39, &qword_256E6FCD8);
        if (v41)
        {
          swift_release();
          goto LABEL_22;
        }
        if ((sub_23F3848A8() & 1) == 0)
        {
          sub_23F384468();
          sub_23F37C300();
          v40 = v66;
        }
        v42 = v62;
        v43 = *(_QWORD *)(v40 + 16);
        if (v43 >= *(_QWORD *)(v40 + 24) >> 1)
        {
          sub_23F37C300();
          v40 = v66;
        }
        *(_QWORD *)(v40 + 16) = v43 + 1;
        sub_23F383E04();
        sub_23F383004((uint64_t)v14, v40 + v44 + *(_QWORD *)(v45 + 72) * v43, &qword_256E6FCD8);
        if ((v63 & 1) != 0)
          goto LABEL_29;
        v22 = v49;
        v3 = v50;
        v46 = v61;
        if (v42 >= -(-1 << *(_BYTE *)(v50 + 32)))
          goto LABEL_26;
        if ((*(_QWORD *)(v49 + 8 * v60) & v59) == 0)
          goto LABEL_27;
        if ((_DWORD)v58 != *(_DWORD *)(v50 + 36))
          goto LABEL_28;
        v47 = sub_23F61C868();
        v15 = v46 - 1;
        if (!v15)
          goto LABEL_22;
        v17 = v47;
        if ((v47 & 0x8000000000000000) == 0)
        {
          v23 = 0;
          v18 = *(unsigned int *)(v3 + 36);
          if (v47 < 1 << *(_BYTE *)(v3 + 32))
            continue;
        }
        goto LABEL_23;
      }
    }
    else
    {
LABEL_23:
      __break(1u);
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
  }
  else
  {
LABEL_22:
    sub_23F362870();
  }
}

void sub_23F36820C()
{
  sub_23F3682E8();
}

void sub_23F368238()
{
  sub_23F3682E8();
}

void sub_23F368264()
{
  sub_23F3682E8();
}

void sub_23F368290()
{
  sub_23F3682E8();
}

void sub_23F3682BC()
{
  sub_23F3682E8();
}

void sub_23F3682E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(_QWORD);
  uint64_t v4;
  uint64_t v5;
  void (*v6)(void);
  uint64_t v7;
  char v8;
  unint64_t v9;
  void (*v10)(unint64_t);
  void (*v11)(void);
  uint64_t v12;

  sub_23F362C98();
  sub_23F384B6C();
  v3(0);
  sub_23F384068();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F384A50();
  if (v2)
  {
    v5 = sub_23F384128();
    v11 = v6;
    ((void (*)(uint64_t))v6)(v5);
    sub_23F38476C();
    sub_23F384394();
    v12 = v7;
    while (1)
    {
      sub_23F383A70();
      if (v0)
        break;
      sub_23F384704();
      if (v8)
      {
        sub_23F3845A4();
        v11();
      }
      v9 = sub_23F383D7C();
      v10(v9);
      v1 += v12;
      if (!--v2)
        goto LABEL_9;
    }
    swift_release();
  }
LABEL_9:
  sub_23F383A78();
  sub_23F362870();
}

void sub_23F3683D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F362C98();
  v3 = v2;
  v4 = type metadata accessor for CandidateWithDependencies(0);
  MEMORY[0x24BDAC7A8](v4);
  sub_23F384300();
  if (v1)
  {
    sub_23F3845B4();
    sub_23F37C6F8();
    sub_23F384A38();
    v5 = sub_23F61A408();
    sub_23F384188(v5);
    while (1)
    {
      sub_23F383A70();
      if (v0)
        break;
      sub_23F38471C();
      if (v6)
        sub_23F37C6F8();
      v7 = sub_23F384000();
      sub_23F36262C(v7, v8, type metadata accessor for CandidateWithDependencies);
      v3 += v9;
      if (!--v1)
        goto LABEL_9;
    }
    sub_23F383EDC();
  }
LABEL_9:
  sub_23F383A78();
  sub_23F362870();
}

uint64_t sub_23F3684B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F3684BC(a1, a2, a3);
}

uint64_t sub_23F3684BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (*(_QWORD *)(a3 + 16)
    && (sub_23F37568C(a1, a2, (uint64_t)MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t))sub_23F375BB8),
        (v3 & 1) != 0))
  {
    v4 = sub_23F383850();
    sub_23F383E90(v4);
    v5 = sub_23F383CDC();
  }
  else
  {
    sub_23F383850();
    v5 = sub_23F3835F4();
  }
  return sub_23F38359C(v5, v6, v7, v8);
}

uint64_t sub_23F368524(uint64_t a1, uint64_t a2)
{
  return sub_23F36886C(a1, a2, (uint64_t)MEMORY[0x24BE56EB0], sub_23F375614);
}

void sub_23F368538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_23F37568C(a1, a2, (uint64_t)MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t))sub_23F375BB8);
    if ((v3 & 1) != 0)
      sub_23F383738();
  }
  sub_23F362928();
}

void sub_23F368594(uint64_t a1, uint64_t a2)
{
  char v2;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_23F3756E8();
    if ((v2 & 1) != 0)
      sub_23F383738();
  }
  sub_23F362928();
}

uint64_t sub_23F3685E0(uint64_t a1, uint64_t a2)
{
  return sub_23F36886C(a1, a2, (uint64_t)MEMORY[0x24BE54D48], sub_23F3756E8);
}

uint64_t sub_23F3685F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  char v5;

  if (*(_QWORD *)(a3 + 16)
    && (v4 = sub_23F37568C(a1, a2, (uint64_t)MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t))sub_23F375BB8),
        (v5 & 1) != 0))
  {
    return *(unsigned __int8 *)(*(_QWORD *)(a3 + 56) + v4);
  }
  else
  {
    return 4;
  }
}

void sub_23F368640(uint64_t a1, uint64_t a2)
{
  char v2;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_23F375814();
    if ((v2 & 1) != 0)
      swift_retain();
  }
  sub_23F362928();
}

uint64_t sub_23F36867C(uint64_t a1, uint64_t a2)
{
  return sub_23F3688D8(a1, a2, (uint64_t)type metadata accessor for DialogValuesResolver.CollectedValue, (void (*)(void))sub_23F375878);
}

uint64_t sub_23F368690(uint64_t a1, uint64_t a2)
{
  return sub_23F36886C(a1, a2, (uint64_t)MEMORY[0x24BE56EB0], sub_23F3756E8);
}

uint64_t sub_23F3686A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F3684BC(a1, a2, a3);
}

void sub_23F3686B0(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  unint64_t v5;
  char v6;

  if (*(_QWORD *)(a2 + 16) && (v5 = sub_23F375944(a1), (v6 & 1) != 0))
  {
    sub_23F3842BC(*(_QWORD *)(a2 + 56) + 32 * v5, (uint64_t)a3);
  }
  else
  {
    *a3 = 0u;
    a3[1] = 0u;
    sub_23F362928();
  }
}

void sub_23F3686F8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v6;
  char v7;

  if (*(_QWORD *)(a3 + 16)
    && (v6 = sub_23F37568C(a1, a2, (uint64_t)MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t))sub_23F375BB8),
        (v7 & 1) != 0))
  {
    sub_23F3842BC(*(_QWORD *)(a3 + 56) + 32 * v6, (uint64_t)a4);
  }
  else
  {
    *a4 = 0u;
    a4[1] = 0u;
    sub_23F362928();
  }
}

void sub_23F368750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  char v5;
  id v6;

  if (*(_QWORD *)(a3 + 16))
  {
    v4 = sub_23F37568C(a1, a2, (uint64_t)MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t))sub_23F375BB8);
    if ((v5 & 1) != 0)
      v6 = *(id *)(*(_QWORD *)(a3 + 56) + 8 * v4);
  }
  sub_23F362928();
}

uint64_t sub_23F3687A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F3687F0(a1, a2, a3);
}

uint64_t sub_23F3687AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F3684BC(a1, a2, a3);
}

uint64_t sub_23F3687B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F3684BC(a1, a2, a3);
}

uint64_t sub_23F3687C4(uint64_t a1, uint64_t a2)
{
  return sub_23F36886C(a1, a2, (uint64_t)MEMORY[0x24BE549B8], sub_23F375424);
}

uint64_t sub_23F3687D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F3684BC(a1, a2, a3);
}

uint64_t sub_23F3687E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F3687F0(a1, a2, a3);
}

uint64_t sub_23F3687F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (*(_QWORD *)(a3 + 16)
    && (sub_23F37568C(a1, a2, (uint64_t)MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t))sub_23F375BB8),
        (v3 & 1) != 0))
  {
    v4 = sub_23F383850();
    sub_23F383FE4(v4);
    v5 = sub_23F383CDC();
  }
  else
  {
    sub_23F383850();
    v5 = sub_23F3835F4();
  }
  return sub_23F38359C(v5, v6, v7, v8);
}

uint64_t sub_23F368858(uint64_t a1, uint64_t a2)
{
  return sub_23F36886C(a1, a2, (uint64_t)MEMORY[0x24BEB8F30], (void (*)(void))sub_23F3759C4);
}

uint64_t sub_23F36886C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (*(_QWORD *)(a2 + 16) && (a4(), (v4 & 1) != 0))
  {
    v5 = sub_23F383850();
    sub_23F383E90(v5);
    v6 = sub_23F383CDC();
  }
  else
  {
    sub_23F383850();
    v6 = sub_23F3835F4();
  }
  return sub_23F38359C(v6, v7, v8, v9);
}

uint64_t sub_23F3688C4(uint64_t a1, uint64_t a2)
{
  return sub_23F3688D8(a1, a2, (uint64_t)type metadata accessor for QueryDecorationCacheValue, (void (*)(void))sub_23F375A5C);
}

uint64_t sub_23F3688D8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (*(_QWORD *)(a2 + 16) && (a4(), (v4 & 1) != 0))
  {
    v5 = sub_23F383850();
    sub_23F383FE4(v5);
    v6 = sub_23F383CDC();
  }
  else
  {
    sub_23F383850();
    v6 = sub_23F3835F4();
  }
  return sub_23F38359C(v6, v7, v8, v9);
}

void sub_23F368930(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;

  v1 = a1 + 56;
  sub_23F3839E4();
  v4 = v3 & v2;
  v6 = (unint64_t)(v5 + 63) >> 6;
  sub_23F617BA0();
  v7 = 0;
  if (!v4)
    goto LABEL_3;
LABEL_2:
  sub_23F38499C();
  while (1)
  {
    swift_getKeyPath();
    sub_23F383738();
    swift_getAtKeyPath();
    swift_bridgeObjectRelease();
    swift_release();
    sub_23F385F44();
    if (v4)
      goto LABEL_2;
LABEL_3:
    v8 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v8 >= v6)
      goto LABEL_21;
    v9 = *(_QWORD *)(v1 + 8 * v8);
    ++v7;
    if (!v9)
    {
      v7 = v8 + 1;
      if (v8 + 1 >= v6)
        goto LABEL_21;
      v9 = *(_QWORD *)(v1 + 8 * v7);
      if (!v9)
      {
        v7 = v8 + 2;
        if (v8 + 2 >= v6)
          goto LABEL_21;
        v9 = *(_QWORD *)(v1 + 8 * v7);
        if (!v9)
        {
          v7 = v8 + 3;
          if (v8 + 3 >= v6)
            goto LABEL_21;
          v9 = *(_QWORD *)(v1 + 8 * v7);
          if (!v9)
            break;
        }
      }
    }
LABEL_18:
    v4 = (v9 - 1) & v9;
  }
  v10 = v8 + 4;
  if (v10 >= v6)
  {
LABEL_21:
    sub_23F38496C();
    return;
  }
  v9 = *(_QWORD *)(v1 + 8 * v10);
  if (v9)
  {
    v7 = v10;
    goto LABEL_18;
  }
  while (1)
  {
    v7 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v7 >= v6)
      goto LABEL_21;
    v9 = *(_QWORD *)(v1 + 8 * v7);
    ++v10;
    if (v9)
      goto LABEL_18;
  }
LABEL_23:
  __break(1u);
}

void sub_23F368AC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(uint64_t);
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  BOOL v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(_QWORD);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_23F362ABC();
  v1 = v0;
  v2 = _s14TypedCandidateVMa();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  sub_23F3834D0();
  v45 = v4;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F3838E4();
  v34 = v6;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v34 - v8;
  sub_23F3612C0(&qword_256E70338, v10, (uint64_t)&unk_23F624144);
  v40 = v2;
  v44 = sub_23F61C550();
  v38 = *(_QWORD *)(v1 + 16);
  if (v38)
  {
    v11 = 0;
    sub_23F383EB8();
    v36 = v1;
    v37 = v1 + v12;
    v35 = v3;
    while (v11 < *(_QWORD *)(v1 + 16))
    {
      v13 = *(_QWORD *)(v3 + 72);
      v39 = v11;
      v43 = v13;
      sub_23F384670(v37 + v13 * v11, (uint64_t)v9);
      v14 = v44;
      sub_23F61CD30();
      sub_23F384048();
      sub_23F3612C0(&qword_256E6FE60, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9A18], MEMORY[0x24BEB9A30]);
      sub_23F383EB0();
      sub_23F61C04C();
      v15 = &v9[*(int *)(v40 + 20)];
      sub_23F383738();
      sub_23F61C22C();
      sub_23F362984();
      sub_23F383E5C();
      sub_23F61C22C();
      sub_23F3837B0();
      v16 = sub_23F61CD60();
      v17 = -1 << *(_BYTE *)(v14 + 32);
      v18 = v16 & ~v17;
      v42 = v14 + 56;
      if (((*(_QWORD *)(v14 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) != 0)
      {
        v41 = ~v17;
        v19 = v45;
        while (1)
        {
          sub_23F384670(*(_QWORD *)(v44 + 48) + v18 * v43, v19);
          v20 = v9;
          if ((sub_23F61B920() & 1) != 0)
          {
            v21 = (_QWORD *)(v45 + *(int *)(v40 + 20));
            v22 = v21[2];
            v23 = v21[3];
            v24 = v21[4];
            v25 = *((_QWORD *)v15 + 2);
            v26 = *((_QWORD *)v15 + 3);
            v27 = *((_QWORD *)v15 + 4);
            v28 = *v21 == *(_QWORD *)v15 && v21[1] == *((_QWORD *)v15 + 1);
            if (v28 || (sub_23F61CC64() & 1) != 0)
            {
              v29 = v22 == v25 && v23 == v26;
              if (v29 || (sub_23F384664(), (sub_23F61CC64() & 1) != 0))
              {
                sub_23F4903B0(v24, v27);
                if ((v30 & 1) != 0)
                  break;
              }
            }
          }
          v19 = v45;
          sub_23F384850(v45);
          v18 = (v18 + 1) & v41;
          v9 = v20;
          if (((*(_QWORD *)(v42 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
            goto LABEL_19;
        }
        sub_23F384850(v45);
        swift_bridgeObjectRelease();
        v3 = v35;
        v1 = v36;
        v9 = v20;
      }
      else
      {
LABEL_19:
        v31 = v44;
        sub_23F362984();
        swift_isUniquelyReferenced_nonNull_native();
        sub_23F384670((uint64_t)v9, v34);
        v46 = v31;
        sub_23F476290();
        v44 = v46;
        sub_23F384450();
        v3 = v35;
        v1 = v36;
      }
      v11 = v39 + 1;
      v32 = sub_23F384690();
      sub_23F382F88(v32, v33);
      if (v11 == v38)
        goto LABEL_23;
    }
    __break(1u);
  }
  else
  {
LABEL_23:
    sub_23F362984();
    sub_23F362948();
  }
}

void sub_23F368E14(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_23F61C550();
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v3 = a1 + 40;
    do
    {
      sub_23F362CDC();
      sub_23F471708();
      swift_bridgeObjectRelease();
      v3 += 16;
      --v2;
    }
    while (v2);
  }
  sub_23F362D18();
  sub_23F3837D4();
}

void sub_23F368EA8()
{
  sub_23F368ECC();
}

void sub_23F368ECC()
{
  uint64_t v0;
  void (*v1)(char *, char *);
  void (*v2)(char *, char *);
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t *v6;
  uint64_t (*v7)(uint64_t);
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t);
  uint64_t v22;
  _QWORD v23[2];

  sub_23F362ABC();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  sub_23F3846F4(v9, v7);
  sub_23F3849EC();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v23 - v15;
  sub_23F3612C0(v6, v8, v4);
  v23[1] = sub_23F61C550();
  v17 = *(_QWORD *)(v10 + 16);
  if (v17)
  {
    sub_23F383EB8();
    v23[0] = v10;
    v19 = v10 + v18;
    v20 = *(_QWORD *)(v0 + 72);
    v21 = *(void (**)(uint64_t))(v0 + 16);
    do
    {
      v22 = sub_23F384200();
      v21(v22);
      v2(v16, v14);
      sub_23F362A28((uint64_t)v16, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
      v19 += v20;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23F362D18();
  }
  sub_23F362948();
}

void sub_23F368FE0()
{
  sub_23F368ECC();
}

void sub_23F369004(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_23F382B28();
  sub_23F61C550();
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v3 = a1 + 48;
    do
    {
      v3 += 24;
      sub_23F471B2C();
      --v2;
    }
    while (v2);
  }
  sub_23F362D18();
  sub_23F383F28();
}

void sub_23F369084()
{
  sub_23F368ECC();
}

void sub_23F3690A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_23F383988();
  v1 = v0;
  v2 = sub_23F35D2E8(&qword_256E70238);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  MEMORY[0x24BDAC7A8](v4);
  sub_23F383030();
  sub_23F3848D8();
  sub_23F61C550();
  v5 = *(_QWORD *)(v1 + 16);
  if (v5)
  {
    sub_23F383EB8();
    v7 = v1 + v6;
    v8 = *(_QWORD *)(v3 + 72);
    do
    {
      v9 = sub_23F3848CC();
      sub_23F382EF8(v9, v10, &qword_256E70238);
      sub_23F471D6C();
      sub_23F384288();
      v7 += v8;
      --v5;
    }
    while (v5);
  }
  sub_23F362D18();
  sub_23F383568();
}

uint64_t sub_23F3691A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11[24];
  uint64_t v12;

  v2 = sub_23F61C550();
  v12 = v2;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = (uint64_t *)(a1 + 56);
    do
    {
      v5 = *(v4 - 3);
      v6 = *(v4 - 2);
      v7 = *(v4 - 1);
      v8 = *v4;
      sub_23F383EB0();
      sub_23F4720F8((uint64_t)v11, v5, v6, v7, v8);
      swift_bridgeObjectRelease();
      v4 += 4;
      --v3;
    }
    while (v3);
    sub_23F362D18();
    return v12;
  }
  else
  {
    v9 = v2;
    sub_23F362D18();
  }
  return v9;
}

void sub_23F36925C()
{
  sub_23F368ECC();
}

uint64_t sub_23F369280(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  _OWORD v10[2];
  uint64_t v11;

  sub_23F382BA0();
  v2 = sub_23F61C550();
  v9 = v2;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 32;
    do
    {
      v5 = *(_OWORD *)(a1 + v4 + 16);
      v10[0] = *(_OWORD *)(a1 + v4);
      v10[1] = v5;
      v11 = *(_QWORD *)(a1 + v4 + 32);
      sub_23F382BDC((uint64_t)v10);
      sub_23F4731A4(&v8, (uint64_t *)v10);
      swift_bridgeObjectRelease();
      sub_23F362D08();
      sub_23F362984();
      v4 += 40;
      --v3;
    }
    while (v3);
    sub_23F362D18();
    return v9;
  }
  else
  {
    v6 = v2;
    sub_23F362D18();
  }
  return v6;
}

void sub_23F369344()
{
  sub_23F368ECC();
}

void sub_23F369368()
{
  sub_23F368ECC();
}

void sub_23F36938C()
{
  sub_23F368ECC();
}

uint64_t ActionResolverRequestEvaluator.init<A>(toolbox:actionRequirements:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t *v14;
  uint64_t v15;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;

  sub_23F384780();
  v9 = v8;
  v10 = *(_QWORD *)(sub_23F384B34() - 8);
  v11 = sub_23F3848C0();
  sub_23F38431C(v11, v12, v13);
  v18 = a3;
  v19 = a4;
  v14 = sub_23F36145C((uint64_t *)&v17);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(v14, v4, a3);
  sub_23F383D74(v5, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
  v15 = type metadata accessor for ActionResolverRequestEvaluator();
  return sub_23F362678(&v17, v9 + *(int *)(v15 + 20));
}

uint64_t type metadata accessor for ActionResolverRequestEvaluator()
{
  uint64_t result;

  result = qword_256E6FBD0;
  if (!qword_256E6FBD0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t ActionResolverRequestEvaluator.resolve(actionResolverRequest:sessionState:isDefaultResolverEnabled:contextId:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  *(_QWORD *)(v6 + 312) = a5;
  *(_QWORD *)(v6 + 320) = v5;
  *(_BYTE *)(v6 + 242) = a4;
  *(_QWORD *)(v6 + 296) = a2;
  *(_QWORD *)(v6 + 304) = a3;
  *(_QWORD *)(v6 + 288) = a1;
  v7 = sub_23F618350();
  *(_QWORD *)(v6 + 328) = v7;
  *(_QWORD *)(v6 + 336) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 344) = sub_23F366578();
  v8 = sub_23F6182F0();
  *(_QWORD *)(v6 + 352) = v8;
  *(_QWORD *)(v6 + 360) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v6 + 368) = sub_23F366578();
  sub_23F35D2E8(&qword_256E6FAD8);
  *(_QWORD *)(v6 + 376) = sub_23F366578();
  v9 = sub_23F61B980();
  *(_QWORD *)(v6 + 384) = v9;
  *(_QWORD *)(v6 + 392) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v6 + 400) = sub_23F366578();
  sub_23F35D2E8(&qword_256E6FAE0);
  *(_QWORD *)(v6 + 408) = sub_23F366578();
  v10 = sub_23F61A7E0();
  *(_QWORD *)(v6 + 416) = v10;
  *(_QWORD *)(v6 + 424) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v6 + 432) = sub_23F366578();
  v11 = sub_23F61B080();
  *(_QWORD *)(v6 + 440) = v11;
  *(_QWORD *)(v6 + 448) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v6 + 456) = sub_23F366654();
  *(_QWORD *)(v6 + 464) = sub_23F3666CC();
  *(_QWORD *)(v6 + 472) = sub_23F35D2E8(&qword_256E6FAE8);
  *(_QWORD *)(v6 + 480) = sub_23F366654();
  *(_QWORD *)(v6 + 488) = sub_23F3666CC();
  *(_QWORD *)(v6 + 496) = sub_23F3666CC();
  *(_QWORD *)(v6 + 504) = sub_23F3666CC();
  *(_QWORD *)(v6 + 512) = sub_23F35D2E8(&qword_256E6FAF0);
  *(_QWORD *)(v6 + 520) = sub_23F366654();
  *(_QWORD *)(v6 + 528) = sub_23F3666CC();
  *(_QWORD *)(v6 + 536) = sub_23F3666CC();
  *(_QWORD *)(v6 + 544) = sub_23F3666CC();
  v12 = sub_23F6182A8();
  *(_QWORD *)(v6 + 552) = v12;
  *(_QWORD *)(v6 + 560) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v6 + 568) = sub_23F366578();
  v13 = sub_23F3846E4();
  *(_QWORD *)(v6 + 576) = v13;
  *(_QWORD *)(v6 + 584) = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v6 + 592) = sub_23F366578();
  *(_QWORD *)(v6 + 600) = type metadata accessor for ActionResolver.Decision(0);
  *(_QWORD *)(v6 + 608) = sub_23F366654();
  *(_QWORD *)(v6 + 616) = sub_23F3666CC();
  *(_QWORD *)(v6 + 624) = sub_23F3666CC();
  v14 = type metadata accessor for ActionResolver.Parameter(0);
  *(_QWORD *)(v6 + 632) = v14;
  *(_QWORD *)(v6 + 640) = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v6 + 648) = sub_23F366654();
  *(_QWORD *)(v6 + 656) = sub_23F3666CC();
  *(_QWORD *)(v6 + 664) = sub_23F3666CC();
  *(_QWORD *)(v6 + 672) = sub_23F3666CC();
  *(_QWORD *)(v6 + 680) = sub_23F3666CC();
  *(_QWORD *)(v6 + 688) = sub_23F35D2E8(&qword_256E6FAF8);
  *(_QWORD *)(v6 + 696) = sub_23F366654();
  *(_QWORD *)(v6 + 704) = sub_23F3666CC();
  *(_QWORD *)(v6 + 712) = sub_23F3666CC();
  *(_QWORD *)(v6 + 720) = sub_23F3666CC();
  v15 = sub_23F61B3A4();
  *(_QWORD *)(v6 + 728) = v15;
  *(_QWORD *)(v6 + 736) = *(_QWORD *)(v15 - 8);
  *(_QWORD *)(v6 + 744) = sub_23F366578();
  sub_23F35D2E8(&qword_256E6FB00);
  *(_QWORD *)(v6 + 752) = sub_23F366578();
  *(_QWORD *)(v6 + 760) = type metadata accessor for StepResolution();
  *(_QWORD *)(v6 + 768) = sub_23F366578();
  v16 = sub_23F384048();
  *(_QWORD *)(v6 + 776) = v16;
  *(_QWORD *)(v6 + 784) = *(_QWORD *)(v16 - 8);
  *(_QWORD *)(v6 + 792) = sub_23F366654();
  *(_QWORD *)(v6 + 800) = sub_23F3666CC();
  *(_QWORD *)(v6 + 808) = sub_23F3666CC();
  *(_QWORD *)(v6 + 816) = sub_23F3666CC();
  *(_QWORD *)(v6 + 824) = sub_23F3666CC();
  *(_QWORD *)(v6 + 832) = sub_23F3666CC();
  sub_23F35D2E8(&qword_256E6FB08);
  *(_QWORD *)(v6 + 840) = sub_23F366654();
  *(_QWORD *)(v6 + 848) = sub_23F3666CC();
  v17 = sub_23F3838F0();
  *(_QWORD *)(v6 + 856) = v17;
  *(_QWORD *)(v6 + 864) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(v6 + 872) = sub_23F366654();
  *(_QWORD *)(v6 + 880) = sub_23F3666CC();
  *(_QWORD *)(v6 + 888) = sub_23F3666CC();
  *(_QWORD *)(v6 + 896) = sub_23F3666CC();
  v18 = sub_23F366770();
  *(_QWORD *)(v6 + 904) = v18;
  *(_QWORD *)(v6 + 912) = *(_QWORD *)(v18 - 8);
  *(_QWORD *)(v6 + 920) = sub_23F366654();
  *(_QWORD *)(v6 + 928) = sub_23F3666CC();
  *(_QWORD *)(v6 + 936) = sub_23F3666CC();
  sub_23F35D2E8(&qword_256E6FB10);
  *(_QWORD *)(v6 + 944) = sub_23F366578();
  sub_23F35D2E8(&qword_256E6FB18);
  *(_QWORD *)(v6 + 952) = sub_23F366578();
  v19 = sub_23F3846EC();
  *(_QWORD *)(v6 + 960) = v19;
  *(_QWORD *)(v6 + 968) = *(_QWORD *)(v19 - 8);
  *(_QWORD *)(v6 + 976) = sub_23F366654();
  *(_QWORD *)(v6 + 984) = sub_23F3666CC();
  sub_23F61ACA8();
  *(_QWORD *)(v6 + 992) = sub_23F366578();
  sub_23F35D2E8(&qword_256E6FB20);
  *(_QWORD *)(v6 + 1000) = sub_23F366578();
  v20 = sub_23F61814C();
  *(_QWORD *)(v6 + 1008) = v20;
  *(_QWORD *)(v6 + 1016) = *(_QWORD *)(v20 - 8);
  *(_QWORD *)(v6 + 1024) = sub_23F366578();
  v21 = sub_23F61B164();
  *(_QWORD *)(v6 + 1032) = v21;
  *(_QWORD *)(v6 + 1040) = *(_QWORD *)(v21 - 8);
  *(_QWORD *)(v6 + 1048) = sub_23F366654();
  *(_QWORD *)(v6 + 1056) = sub_23F3666CC();
  *(_QWORD *)(v6 + 1064) = sub_23F3666CC();
  *(_QWORD *)(v6 + 1072) = sub_23F3666CC();
  v22 = sub_23F61B5D8();
  *(_QWORD *)(v6 + 1080) = v22;
  *(_QWORD *)(v6 + 1088) = *(_QWORD *)(v22 - 8);
  *(_QWORD *)(v6 + 1096) = sub_23F366654();
  *(_QWORD *)(v6 + 1104) = sub_23F3666CC();
  *(_QWORD *)(v6 + 1112) = sub_23F3666CC();
  *(_QWORD *)(v6 + 1120) = type metadata accessor for RequirementStatus();
  *(_QWORD *)(v6 + 1128) = sub_23F366654();
  *(_QWORD *)(v6 + 1136) = sub_23F3666CC();
  v23 = sub_23F384040();
  *(_QWORD *)(v6 + 1144) = v23;
  *(_QWORD *)(v6 + 1152) = *(_QWORD *)(v23 - 8);
  *(_QWORD *)(v6 + 1160) = sub_23F366654();
  *(_QWORD *)(v6 + 1168) = sub_23F3666CC();
  *(_QWORD *)(v6 + 1176) = sub_23F3666CC();
  v24 = sub_23F61AA14();
  *(_QWORD *)(v6 + 1184) = v24;
  *(_QWORD *)(v6 + 1192) = *(_QWORD *)(v24 - 8);
  *(_QWORD *)(v6 + 1200) = sub_23F366654();
  *(_QWORD *)(v6 + 1208) = sub_23F3666CC();
  *(_QWORD *)(v6 + 1216) = sub_23F3666CC();
  v25 = sub_23F619E98();
  *(_QWORD *)(v6 + 1224) = v25;
  *(_QWORD *)(v6 + 1232) = *(_QWORD *)(v25 - 8);
  *(_QWORD *)(v6 + 1240) = sub_23F366654();
  *(_QWORD *)(v6 + 1248) = sub_23F3666CC();
  *(_QWORD *)(v6 + 1256) = sub_23F3666CC();
  *(_QWORD *)(v6 + 1264) = sub_23F3666CC();
  *(_QWORD *)(v6 + 1272) = sub_23F3666CC();
  *(_QWORD *)(v6 + 1280) = sub_23F3666CC();
  *(_QWORD *)(v6 + 1288) = sub_23F3666CC();
  sub_23F36679C();
  return swift_task_switch();
}

uint64_t sub_23F369980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  os_log_type_t v49;
  uint64_t v50[2];

  sub_23F3836F0();
  v13 = v12[161];
  v14 = v12[152];
  v15 = v12[149];
  v16 = v12[37];
  sub_23F384060();
  v12[162] = *(_QWORD *)(v15 + 16);
  sub_23F384614(v14, v16);
  v17 = sub_23F384200();
  sub_23F384614(v17, v18);
  v19 = sub_23F619E8C();
  v20 = sub_23F61C61C();
  if (sub_23F384534(v20))
  {
    v21 = v12[152];
    v48 = v12[151];
    v47 = v12[144];
    v22 = sub_23F366668();
    v50[0] = sub_23F366668();
    *(_DWORD *)v22 = 136315394;
    v49 = v13;
    sub_23F61A978();
    sub_23F3612C0((unint64_t *)&qword_256E6FB60, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52170]);
    v23 = sub_23F61CC1C();
    v25 = v24;
    sub_23F3838CC(*(uint64_t (**)(uint64_t, uint64_t))(v47 + 8));
    sub_23F37AE00(v23, v25, v50);
    v12[34] = v26;
    sub_23F61C790();
    sub_23F38458C();
    sub_23F3846FC(v21);
    *(_WORD *)(v22 + 12) = 2080;
    v27 = sub_23F384964();
    sub_23F37AE00(v27, v28, v50);
    v12[35] = v29;
    sub_23F61C790();
    sub_23F362984();
    sub_23F3846FC(v48);
    _os_log_impl(&dword_23F35A000, v19, v49, "Processing actionResolverRequest for request: statementId=%s and toolId=%s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    sub_23F366530();
  }
  v30 = v12[154];
  v31 = v12[151];
  v32 = *(_QWORD *)(v12[149] + 8);
  sub_23F3846FC(v12[152]);
  sub_23F3846FC(v31);

  v33 = *(void (**)(uint64_t))(v30 + 8);
  v34 = sub_23F3840BC();
  v33(v34);
  v12[164] = v33;
  v12[163] = v32;
  v35 = v12[40];
  v36 = type metadata accessor for ActionResolverRequestEvaluator();
  sub_23F382FC4(v35 + *(int *)(v36 + 20), (uint64_t)(v12 + 17));
  sub_23F35EA9C(v12 + 17, v12[20]);
  sub_23F61AA08();
  sub_23F61B338();
  sub_23F384364();
  sub_23F61B128();
  v37 = (_QWORD *)swift_task_alloc();
  v12[165] = v37;
  *v37 = v12;
  v37[1] = sub_23F369F48;
  sub_23F3843EC();
  return v43(v38, v39, v40, v41, v42, v43, v44, v45, a9, a10, a11, a12);
}

uint64_t sub_23F369F48()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t (*v8)(uint64_t, uint64_t);

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 1328) = v0;
  swift_task_dealloc();
  v3 = v2[139];
  v4 = v2[136];
  v5 = v2[134];
  v6 = v2[129];
  v7 = *(void (**)(uint64_t, uint64_t))(v2[130] + 8);
  if (v0)
  {
    v7(v5, v6);
    sub_23F383E88(v3, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  }
  else
  {
    v2[167] = v7;
    v7(v5, v6);
    v8 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
    v2[168] = v8;
    sub_23F383E88(v3, v8);
  }
  sub_23F36679C();
  return sub_23F383F08();
}

uint64_t sub_23F369FEC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_23F3836F0();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)(v0 + 17));
  v1 = sub_23F3840BC();
  sub_23F362600(v1, v2, v3);
  sub_23F384AB4();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = v0[128];
    v5 = v0[127];
    v6 = v0[125];
    v7 = v0[123];
    v8 = v0[121];
    v19 = v0[120];
    v9 = v0[119];
    v20 = v0[142];
    sub_23F38431C(v4, v0[141], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32));
    sub_23F383CC4(v6, 1);
    sub_23F61AA08();
    sub_23F38431C(v7, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 104))(v7, *MEMORY[0x24BE532D0], v19);
    v10 = sub_23F3846CC();
    sub_23F3838D8(v9, v11, v12, v10);
    sub_23F61AC90();
    sub_23F61B134();
    sub_23F384884();
    sub_23F366748();
    sub_23F61A978();
    sub_23F61A4BC();
    sub_23F3838CC(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    sub_23F382F88(v20, (uint64_t (*)(_QWORD))type metadata accessor for RequirementStatus);
    swift_storeEnumTagMultiPayload();
    sub_23F383288();
    swift_task_dealloc();
    sub_23F3666EC();
    sub_23F3666C4();
    sub_23F3666DC();
    sub_23F362CC8();
    sub_23F3666A0();
    sub_23F3666D4();
    sub_23F366698();
    sub_23F3666E4();
    sub_23F366708();
    sub_23F3668DC();
    sub_23F3668D4();
    sub_23F383980();
    sub_23F3667E0();
    sub_23F383898();
    sub_23F383978();
    sub_23F383970();
    sub_23F383890();
    sub_23F383888();
    sub_23F383880();
    sub_23F383878();
    sub_23F383870();
    sub_23F383868();
    sub_23F383C4C();
    sub_23F383C44();
    sub_23F383C3C();
    sub_23F383C34();
    sub_23F383C2C();
    sub_23F383C24();
    sub_23F383C1C();
    sub_23F383C14();
    sub_23F383C0C();
    sub_23F383C04();
    sub_23F383BFC();
    sub_23F383BF4();
    sub_23F383BEC();
    sub_23F383BE4();
    sub_23F383BDC();
    sub_23F383BD4();
    sub_23F383BCC();
    sub_23F383BC4();
    sub_23F383BBC();
    sub_23F383BB4();
    sub_23F383BAC();
    sub_23F383BA4();
    sub_23F383B9C();
    sub_23F383B94();
    sub_23F383B8C();
    sub_23F383B84();
    sub_23F383B7C();
    sub_23F383B74();
    sub_23F383B6C();
    sub_23F383B64();
    sub_23F383B5C();
    sub_23F383B54();
    sub_23F383B4C();
    sub_23F383B44();
    sub_23F383B3C();
    sub_23F383B34();
    sub_23F383B2C();
    sub_23F383B24();
    sub_23F383B1C();
    sub_23F383B14();
    sub_23F383B0C();
    sub_23F383B04();
    sub_23F383C54();
    sub_23F383C5C();
    sub_23F383AFC();
    sub_23F383AF4();
    sub_23F383AEC();
    sub_23F383AE4();
    sub_23F383ADC();
    sub_23F383AD4();
    sub_23F383C6C();
    sub_23F383FDC();
    sub_23F38409C();
    swift_task_dealloc();
    v13 = (uint64_t (*)(void))sub_23F384760();
    return sub_23F38346C(v13);
  }
  else
  {
    sub_23F382F88(v0[141], (uint64_t (*)(_QWORD))type metadata accessor for RequirementStatus);
    sub_23F61B128();
    v15 = (_QWORD *)swift_task_alloc();
    v0[169] = v15;
    *v15 = v0;
    v15[1] = sub_23F36A3BC;
    sub_23F3843EC();
    return sub_23F36DDA8(v16, v17, v18);
  }
}

uint64_t sub_23F36A3BC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 1360) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2 + 1336))(*(_QWORD *)(v2 + 1064), *(_QWORD *)(v2 + 1032));
  sub_23F36679C();
  return swift_task_switch();
}

void sub_23F36A42C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t);
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t, uint64_t, uint64_t);
  void (*v55)(uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t (*v88)(void);
  char v89;
  uint64_t v90;
  unint64_t v91;
  _QWORD *v92;
  unint64_t v93;
  int64_t v94;
  unint64_t v95;
  char v96;
  BOOL v97;
  int64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(unint64_t, uint64_t, uint64_t);
  unint64_t v108;
  char v109;
  unint64_t v110;
  char v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  int64_t v122;
  os_log_type_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t (*v132)(uint64_t);
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void (*v141)(uint64_t);
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t (*v148)(_QWORD);
  os_log_type_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  int64_t v159;
  unint64_t v160;
  unint64_t v161;
  int64_t v162;
  unint64_t v163;
  int64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t (*v173)(uint64_t, uint64_t);
  uint64_t v174;
  unint64_t v175;
  void (*v176)(uint64_t);
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  _QWORD *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  _BYTE *v205;
  _QWORD *v206;
  uint64_t v207;
  int v208;
  uint64_t v209;
  int v210;
  int64_t v211;
  int v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  _QWORD *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  int v222;
  int64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  int64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  void (*v236)(uint64_t, uint64_t);
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  _QWORD *v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  int64_t v246;
  int64_t v247;
  uint64_t v248;
  uint64_t *v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  _QWORD *v255;

  sub_23F3836F0();
  v1 = v0[118];
  sub_23F383740(v1, 1, v0[120]);
  if (!v48)
  {
    v252 = v0[142];
    v77 = v0[123];
    v78 = v0[122];
    v79 = v0[121];
    v80 = v0[119];
    v81 = v0[72];
    sub_23F38426C(v78, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v79 + 32));
    sub_23F3837C8();
    sub_23F36196C(v82, v83, v84, v81);
    sub_23F384964();
    sub_23F38426C(v77, v78, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v79 + 16));
    v85 = sub_23F3846CC();
    sub_23F3838D8(v80, v86, v87, v85);
    sub_23F61AC90();
    sub_23F61B134();
    sub_23F61B17C();
    sub_23F366748();
    sub_23F61A978();
    sub_23F61A4BC();
    sub_23F383E88(v78, *(uint64_t (**)(uint64_t, uint64_t))(v79 + 8));
    sub_23F382F88(v252, (uint64_t (*)(_QWORD))type metadata accessor for RequirementStatus);
    swift_storeEnumTagMultiPayload();
LABEL_41:
    sub_23F383288();
    sub_23F3833D0();
    sub_23F3666EC();
    sub_23F3666C4();
    sub_23F3666DC();
    sub_23F362CC8();
    sub_23F3666A0();
    sub_23F3666D4();
    sub_23F366698();
    sub_23F3666E4();
    sub_23F366708();
    sub_23F3668DC();
    sub_23F3668D4();
    sub_23F383980();
    sub_23F3667E0();
    sub_23F383898();
    sub_23F383978();
    sub_23F383970();
    sub_23F383890();
    sub_23F383888();
    sub_23F383880();
    sub_23F383878();
    sub_23F383870();
    sub_23F383868();
    sub_23F383C4C();
    sub_23F383C44();
    sub_23F383C3C();
    sub_23F383C34();
    sub_23F383C2C();
    sub_23F383C24();
    sub_23F383C1C();
    sub_23F383C14();
    sub_23F383C0C();
    sub_23F383C04();
    sub_23F383BFC();
    sub_23F383BF4();
    sub_23F383BEC();
    sub_23F383BE4();
    sub_23F383BDC();
    sub_23F383BD4();
    sub_23F383BCC();
    sub_23F383BC4();
    sub_23F383BBC();
    sub_23F383BB4();
    sub_23F383BAC();
    sub_23F383BA4();
    sub_23F383B9C();
    sub_23F383B94();
    sub_23F383B8C();
    sub_23F383B84();
    sub_23F383B7C();
    sub_23F383B74();
    sub_23F383B6C();
    sub_23F383B64();
    sub_23F383B5C();
    sub_23F383B54();
    sub_23F383DCC();
    sub_23F383DC4();
    sub_23F383B4C();
    sub_23F383B44();
    sub_23F383B3C();
    sub_23F383B34();
    sub_23F383B2C();
    sub_23F383B24();
    sub_23F383B1C();
    sub_23F383B14();
    sub_23F383B0C();
    sub_23F383B04();
    sub_23F383C54();
    sub_23F383C5C();
    sub_23F383AFC();
    sub_23F383AF4();
    sub_23F383AEC();
    sub_23F383AE4();
    sub_23F383ADC();
    sub_23F383AD4();
    sub_23F383C6C();
    sub_23F383FDC();
    v88 = (uint64_t (*)(void))sub_23F384760();
LABEL_93:
    sub_23F38346C(v88);
    return;
  }
  v2 = v0[170];
  v206 = v0 + 32;
  v205 = (char *)v0 + 241;
  v249 = v0;
  v207 = v0[144];
  v3 = v0[114];
  v250 = v0[108];
  v4 = v0[98];
  v214 = v0[92];
  sub_23F3625D8(v1, &qword_256E6FB10);
  v5 = sub_23F384ACC();
  v6 = v4;
  sub_23F384488(v5, v7);
  v8 = sub_23F61A9CC();
  sub_23F368930(v8);
  sub_23F362984();
  sub_23F368ECC();
  v10 = (_QWORD *)v9;
  v11 = 0;
  v243 = v9 + 56;
  v12 = -1;
  v13 = -1 << *(_BYTE *)(v9 + 32);
  if (-v13 < 64)
    v12 = ~(-1 << -(char)v13);
  v14 = v12 & *(_QWORD *)(v9 + 56);
  v246 = (unint64_t)(63 - v13) >> 6;
  v222 = *MEMORY[0x24BEB9A00];
  v212 = *MEMORY[0x24BEB99E0];
  v210 = *MEMORY[0x24BEB99B0];
  v208 = *MEMORY[0x24BEB9950];
  v225 = v3;
  v216 = (_QWORD *)v9;
  v219 = v6;
  while (v14)
  {
    sub_23F38499C();
    v251 = v15;
    v17 = v16 | (v15 << 6);
LABEL_21:
    v25 = v0[117];
    v26 = v0[116];
    sub_23F383F00(v25, v10[6] + *(_QWORD *)(v3 + 72) * v17, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
    sub_23F383F00(v26, v25, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
    sub_23F61A9CC();
    *(_QWORD *)(sub_23F384908() + 16) = v26;
    sub_23F384AD8();
    sub_23F36EFE0(v27, v28, v29, (uint64_t)&qword_256E6FB08, (uint64_t)MEMORY[0x24BE56EB0], (uint64_t)&unk_256E6FC08, v30, v31, v193, v194, v195, v196, v197, v198, v199, v200, v201, v202, v203,
      v204);
    sub_23F362984();
    swift_task_dealloc();
    sub_23F368ECC();
    if (*(_QWORD *)(v32 + 16) != 1)
    {
      sub_23F362984();
      v37 = sub_23F384664();
      v38(v37);
      goto LABEL_25;
    }
    v33 = v0[107];
    v34 = v0[106];
    sub_23F36FE98(v32, (uint64_t (*)(void))sub_23F3C0378, v34);
    sub_23F362984();
    v35 = sub_23F36195C(v34, 1, v33);
    v36 = v0[106];
    if (v35 == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0[116], v0[113]);
      sub_23F3625D8(v36, &qword_256E6FB08);
      goto LABEL_25;
    }
    v39 = v0[104];
    v40 = v0[97];
    sub_23F362D20(*(uint64_t (**)(uint64_t, uint64_t))(v250 + 32));
    sub_23F61B3E0();
    v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 88))(v39, v40);
    if (v41 == v222)
    {
      v42 = v0[103];
      sub_23F38426C(v42, v0[104], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
      sub_23F383E88(v42, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 96));
      v43 = sub_23F61B8A8();
      v44 = swift_projectBox();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 88))(v44, v43) != v208)
      {
        sub_23F366748();
LABEL_39:
        v236 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
        v236(v0[104], v0[97]);
        v240 = v2;
        goto LABEL_40;
      }
      v45 = v0[116];
      v46 = v0[104];
      sub_23F384274(v250);
      v47 = v45;
      v6 = v219;
      sub_23F383CA8(v47, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
      sub_23F366748();
      (*(void (**)(uint64_t))(v219 + 8))(v46);
LABEL_25:
      v11 = v251;
    }
    else
    {
      v48 = v41 == v212 || v41 == v210;
      if (!v48)
        goto LABEL_39;
      v49 = v0[104];
      v50 = v0[102];
      v51 = v0[97];
      v52 = sub_23F384200();
      sub_23F383F00(v52, v53, v54);
      (*(void (**)(uint64_t, uint64_t))(v6 + 96))(v50, v51);
      swift_release();
      v55 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
      v55(v49, v51);
      sub_23F61AA08();
      sub_23F61B338();
      if (v2)
      {
        sub_23F383818();
        v138 = *(_QWORD *)(v137 + 1136);
        v139 = v0[116];
        sub_23F3837B0();
        sub_23F384A2C();
        v140 = sub_23F384690();
        v141(v140);
        sub_23F384798();
        sub_23F384238();
        sub_23F382F88(v138, (uint64_t (*)(_QWORD))type metadata accessor for RequirementStatus);
        sub_23F383F80(v139, *(uint64_t (**)(uint64_t, uint64_t))(v225 + 8));
        goto LABEL_92;
      }
      v56 = v0[145];
      v236 = v55;
      v57 = v0[101];
      v58 = v0[40];
      sub_23F3837B0();
      sub_23F61A1C8();
      sub_23F61B3E0();
      sub_23F61B398();
      v59 = sub_23F3848F0();
      sub_23F5D7D40(v59, v60, v57, v56, v58, v61);
      v62 = (void (*)(uint64_t, uint64_t))v0[168];
      v63 = v0[145];
      v232 = v0[138];
      v64 = v0[135];
      v239 = v0[95];
      v65 = v0[94];
      sub_23F384120();
      sub_23F383E88(v63, *(uint64_t (**)(uint64_t, uint64_t))(v207 + 8));
      v66 = sub_23F384690();
      ((void (*)(uint64_t))v55)(v66);
      v62(v232, v64);
      sub_23F383740(v65, 1, v239);
      if (!v48)
      {
        sub_23F383818();
        v143 = *(_QWORD *)(v142 + 1136);
        sub_23F384274(v250);
        sub_23F384798();
        sub_23F384238();
        sub_23F382F88(v143, (uint64_t (*)(_QWORD))type metadata accessor for RequirementStatus);
        sub_23F3838CC(*(uint64_t (**)(uint64_t, uint64_t))(v225 + 8));
        v144 = sub_23F38436C();
        sub_23F36262C(v144, v145, (uint64_t (*)(_QWORD))type metadata accessor for StepResolution);
        sub_23F384AD8();
        sub_23F36262C(v146, v147, v148);
        goto LABEL_41;
      }
      sub_23F3625D8(v0[94], &qword_256E6FB00);
      v240 = 0;
LABEL_40:
      v67 = v0[116];
      v68 = v0[112];
      v229 = v0[107];
      v233 = v0[113];
      v69 = v0[102];
      v227 = v0[97];
      v70 = v0[93];
      v71 = v0[38];
      sub_23F61B3E0();
      sub_23F61B3B0();
      sub_23F370344(v67, v69, v70, v71, v72, v73, v74, v75, v193, v194, v195, v196, v197, v198, v199, v200, v201, v202, v203,
        v204);
      sub_23F383CA8(v70, *(uint64_t (**)(uint64_t, uint64_t))(v214 + 8));
      v236(v69, v227);
      sub_23F384A2C();
      v76(v68, v229);
      v3 = v225;
      (*(void (**)(uint64_t, uint64_t))(v225 + 8))(v67, v233);
      v6 = v219;
      v2 = v240;
      v10 = v216;
      v11 = v251;
    }
  }
  v18 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
LABEL_129:
    v0[173] = (uint64_t)v10;
    v176 = (void (*)(uint64_t))v0[167];
    v177 = v0[131];
    v178 = v0[129];
    v179 = v0[74];
    v180 = v0[73];
    v248 = v0[72];
    sub_23F61B128();
    sub_23F61B158();
    v181 = sub_23F384200();
    v176(v181);
    sub_23F616FDC();
    v0[174] = v182;
    (*(void (**)(uint64_t, uint64_t))(v180 + 8))(v179, v248);
    sub_23F61AA08();
    v0[175] = v183;
    sub_23F61B128();
    sub_23F618290();
    ((void (*)(uint64_t, uint64_t))v176)(v177, v178);
    v184 = (_QWORD *)swift_task_alloc();
    v0[176] = (uint64_t)v184;
    *v184 = v0;
    v184[1] = sub_23F36BC50;
    sub_23F3843EC();
    sub_23F3631EC(v185, v186, v187, v188, v189, v190, v191, v192);
    return;
  }
  if (v18 >= v246)
    goto LABEL_42;
  if (*(_QWORD *)(v243 + 8 * v18))
    goto LABEL_20;
  if (v11 + 2 >= v246)
    goto LABEL_42;
  if (*(_QWORD *)(v243 + 8 * (v11 + 2)))
    goto LABEL_20;
  if (v11 + 3 >= v246)
    goto LABEL_42;
  if (*(_QWORD *)(v243 + 8 * (v11 + 3)))
    goto LABEL_20;
  v19 = v11 + 4;
  if (v11 + 4 >= v246)
    goto LABEL_42;
  if (*(_QWORD *)(v243 + 8 * v19))
  {
LABEL_20:
    sub_23F3844C0();
    v14 = v22 & v21;
    v251 = v23;
    v17 = v24 + (v23 << 6);
    goto LABEL_21;
  }
  while (1)
  {
    v20 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
LABEL_134:
      __break(1u);
      goto LABEL_135;
    }
    if (v20 >= v246)
      break;
    ++v19;
    if (*(_QWORD *)(v243 + 8 * v20))
      goto LABEL_20;
  }
LABEL_42:
  v89 = *((_BYTE *)v0 + 242);
  swift_release();
  v241 = v2;
  if ((v89 & 1) == 0)
  {
    sub_23F384060();
    sub_23F619E8C();
    v123 = sub_23F384988();
    if (sub_23F383AC4(v123))
    {
      *(_WORD *)sub_23F366668() = 0;
      sub_23F383D60(&dword_23F35A000, v124, v125, "DefaultResolver is not enabled");
      sub_23F366530();
    }
    sub_23F3838A0();
    sub_23F384AC0();
    v126 = sub_23F384200();
    goto LABEL_82;
  }
  v228 = v0[108];
  v213 = v0[80];
  v215 = v0[79];
  v217 = v0[86];
  v90 = sub_23F61A9A8();
  sub_23F382390(v90, v0 + 12);
  v220 = v0[12];
  v223 = v0[15];
  v91 = v0[16];
  v209 = v0[13];
  v211 = (unint64_t)(v0[14] + 64) >> 6;
  sub_23F383738();
  v92 = (_QWORD *)MEMORY[0x24BEE4B00];
  while (1)
  {
    if (v91)
    {
      v230 = (v91 - 1) & v91;
      v93 = __clz(__rbit64(v91)) | (v223 << 6);
      goto LABEL_63;
    }
    v94 = v223 + 1;
    if (__OFADD__(v223, 1))
      goto LABEL_132;
    if (v94 >= v211)
      goto LABEL_84;
    v95 = *(_QWORD *)(v209 + 8 * v94);
    if (!v95)
      break;
LABEL_62:
    v230 = (v95 - 1) & v95;
    v93 = __clz(__rbit64(v95)) + (v94 << 6);
    v223 = v94;
LABEL_63:
    v244 = v0[111];
    v100 = v0[90];
    v101 = v0[89];
    v102 = v0[88];
    v237 = v0[87];
    v253 = v0[85];
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v3 + 16))(v100, *(_QWORD *)(v220 + 48) + *(_QWORD *)(v3 + 72) * v93, v0[113]);
    v234 = *(_QWORD *)(v228 + 72);
    sub_23F384488(v100 + *(int *)(v217 + 48), *(_QWORD *)(v220 + 56) + v234 * v93);
    sub_23F383004(v100, v101, &qword_256E6FAF8);
    v103 = *(int *)(v217 + 48);
    v104 = v102 + v103;
    v105 = v101 + v103;
    sub_23F384A44(v102);
    sub_23F384488(v104, v105);
    sub_23F383F00(v253, v102, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
    *(_BYTE *)(v253 + *(int *)(v215 + 20)) = 1;
    *(_BYTE *)(v253 + *(int *)(v215 + 24)) = 6;
    sub_23F383CA8(v104, *(uint64_t (**)(uint64_t, uint64_t))(v250 + 8));
    v106 = v237 + *(int *)(v217 + 48);
    sub_23F384A44(v237);
    sub_23F384488(v106, v105);
    v107 = *(void (**)(unint64_t, uint64_t, uint64_t))(v250 + 32);
    sub_23F384480(v244, v106);
    swift_isUniquelyReferenced_nonNull_native();
    v108 = sub_23F37559C(v253);
    if (__OFADD__(v92[2], (v109 & 1) == 0))
    {
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
      goto LABEL_134;
    }
    v110 = v108;
    v111 = v109;
    sub_23F35D2E8(&qword_256E6FB30);
    v0 = v249;
    if ((sub_23F61CA18() & 1) != 0)
    {
      sub_23F37559C(v249[85]);
      sub_23F3843D4();
      if (!v48)
      {
        sub_23F3838F8();
        return;
      }
      v110 = v112;
    }
    v113 = v249[111];
    v114 = v249[107];
    if ((v111 & 1) != 0)
    {
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v228 + 40))(v92[7] + v110 * v234, v249[111], v249[107]);
    }
    else
    {
      v115 = v249[85];
      v92[(v110 >> 6) + 8] |= 1 << v110;
      sub_23F362600(v115, v92[6] + *(_QWORD *)(v213 + 72) * v110, type metadata accessor for ActionResolver.Parameter);
      v107(v92[7] + v110 * v234, v113, v114);
      v116 = v92[2];
      v97 = __OFADD__(v116, 1);
      v117 = v116 + 1;
      if (v97)
        goto LABEL_131;
      v92[2] = v117;
    }
    v118 = v249[113];
    v119 = v249[89];
    v120 = v249[87];
    v121 = v249[85];
    sub_23F384450();
    sub_23F382F88(v121, type metadata accessor for ActionResolver.Parameter);
    v3 = v225;
    (*(void (**)(uint64_t, uint64_t))(v225 + 8))(v120, v118);
    sub_23F3625D8(v119, &qword_256E6FAF8);
    v2 = v241;
    v91 = v230;
  }
  sub_23F3847D8();
  if (v96 == v97)
    goto LABEL_84;
  sub_23F3847CC();
  if (v95)
    goto LABEL_61;
  sub_23F3847D8();
  if (v96 == v97)
    goto LABEL_84;
  sub_23F3847CC();
  if (v95)
    goto LABEL_61;
  sub_23F3847D8();
  if (v96 == v97)
    goto LABEL_84;
  sub_23F3847CC();
  if (v95)
    goto LABEL_61;
  sub_23F3847D8();
  if (v96 == v97)
    goto LABEL_84;
  sub_23F3847CC();
  if (v95)
  {
LABEL_61:
    v94 = v98;
    goto LABEL_62;
  }
  v94 = v99 + 5;
  if (v94 >= v211)
    goto LABEL_84;
  v95 = *(_QWORD *)(v209 + 8 * v94);
  if (v95)
    goto LABEL_62;
  v122 = v223 + 7;
  while (v122 < v211)
  {
    v95 = *(_QWORD *)(v209 + 8 * v122++);
    if (v95)
    {
      v94 = v122 - 1;
      goto LABEL_62;
    }
  }
LABEL_84:
  swift_bridgeObjectRelease();
  swift_release();
  v130 = sub_23F61A9CC();
  sub_23F384A00();
  v131 = sub_23F366EF8(v130, (uint64_t)v92);
  v0[171] = v131;
  if (v2)
  {
    v132 = (uint64_t (*)(uint64_t))v249[163];
    sub_23F362984();
    v133 = sub_23F384ACC();
    v134 = v132(v133);
    v0 = v249;
    sub_23F384490(v134, (uint64_t (*)(_QWORD))type metadata accessor for RequirementStatus);
    sub_23F38458C();
    goto LABEL_92;
  }
  v135 = v131;
  sub_23F362984();
  sub_23F38458C();
  swift_getKeyPath();
  v136 = *(_QWORD *)(v135 + 16);
  if (!v136)
  {
    sub_23F366748();
    sub_23F3837B0();
LABEL_95:
    sub_23F384060();
    sub_23F619E8C();
    v149 = sub_23F384988();
    if (sub_23F383AC4(v149))
    {
      *(_WORD *)sub_23F366668() = 0;
      sub_23F383D60(&dword_23F35A000, v150, v151, "parameterizedTuples is empty, resolving without JointResolver");
      sub_23F366530();
    }
    sub_23F3838A0();
    sub_23F384AC0();
    v0 = v249;
    v126 = sub_23F38474C();
LABEL_82:
    sub_23F370D88(v126, v127, v128);
    v129 = v0[142];
    ((void (*)(uint64_t, uint64_t))v0[163])(v0[150], v0[148]);
    sub_23F382F88(v129, (uint64_t (*)(_QWORD))type metadata accessor for RequirementStatus);
    if (!v2)
      goto LABEL_41;
LABEL_92:
    sub_23F384870();
    sub_23F383A24();
    sub_23F3833D0();
    sub_23F366708();
    sub_23F3666EC();
    sub_23F3666DC();
    sub_23F362CC8();
    sub_23F3666A0();
    sub_23F3666D4();
    sub_23F366698();
    sub_23F3666E4();
    sub_23F3668E4();
    sub_23F3668DC();
    sub_23F3668D4();
    sub_23F383980();
    sub_23F3667E0();
    sub_23F383898();
    sub_23F383978();
    sub_23F383970();
    sub_23F383890();
    sub_23F383888();
    sub_23F383880();
    sub_23F383878();
    sub_23F383870();
    sub_23F383868();
    sub_23F383C4C();
    sub_23F383C44();
    sub_23F383C3C();
    sub_23F383C34();
    sub_23F383C2C();
    sub_23F383C24();
    sub_23F383C1C();
    sub_23F383C14();
    sub_23F383C0C();
    sub_23F383C04();
    sub_23F383BFC();
    sub_23F383BF4();
    sub_23F383BEC();
    sub_23F383BE4();
    sub_23F383BDC();
    sub_23F383BD4();
    sub_23F383BCC();
    sub_23F383BC4();
    sub_23F383BBC();
    sub_23F383BB4();
    sub_23F383BAC();
    sub_23F383BA4();
    sub_23F383B9C();
    sub_23F383B94();
    sub_23F383B8C();
    sub_23F383B84();
    sub_23F383B7C();
    sub_23F383B74();
    sub_23F383B6C();
    sub_23F383B64();
    sub_23F383B5C();
    sub_23F383B54();
    sub_23F383DCC();
    sub_23F383DC4();
    sub_23F383B4C();
    sub_23F383B44();
    sub_23F383B3C();
    sub_23F383B34();
    sub_23F383B2C();
    sub_23F383B24();
    sub_23F383B1C();
    sub_23F383B14();
    sub_23F383B0C();
    sub_23F383B04();
    sub_23F383C54();
    sub_23F383C5C();
    sub_23F383AFC();
    sub_23F383AF4();
    sub_23F383AEC();
    sub_23F383AE4();
    sub_23F383ADC();
    sub_23F383AD4();
    sub_23F383C6C();
    sub_23F383FDC();
    v88 = (uint64_t (*)(void))v0[1];
    goto LABEL_93;
  }
  v221 = v135 + 32;
  sub_23F383E5C();
  v2 = 0;
  while (1)
  {
    *v206 = *(_QWORD *)(v135 + 8 * v2 + 32);
    sub_23F3668F4();
    swift_getAtKeyPath();
    sub_23F362D18();
    if (*v205 != 1)
      break;
    if (v136 == ++v2)
    {
      sub_23F384A80();
      sub_23F366748();
      goto LABEL_95;
    }
  }
  sub_23F3837B0();
  sub_23F366748();
  type metadata accessor for ActionResolver();
  sub_23F36682C();
  v0 = v249;
  v249[172] = (uint64_t)sub_23F362EC8();
  v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (!*(_QWORD *)(v135 + 16))
    goto LABEL_129;
  v235 = v249[98];
  v255 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v218 = *(_QWORD *)(v135 + 16);
  sub_23F37B7C0();
  sub_23F35D2E8(&qword_256E6FB40);
  v152 = 0;
LABEL_100:
  v153 = *(_QWORD *)(v221 + 8 * v152);
  v224 = v152 + 1;
  v154 = sub_23F61CA78();
  sub_23F384958();
  v226 = v153 + 64;
  if (v156 < 64)
    v157 = ~(-1 << v156);
  else
    v157 = -1;
  v158 = v157 & *(_QWORD *)(v153 + 64);
  v231 = (unint64_t)(v156 + 63) >> 6;
  v238 = v155 + 64;
  v245 = v153;
  sub_23F617BA0();
  v159 = 0;
  v242 = (_QWORD *)v154;
  if (v158)
  {
LABEL_104:
    v160 = __clz(__rbit64(v158));
    v158 &= v158 - 1;
    v247 = v159;
    v161 = v160 | (v159 << 6);
    goto LABEL_119;
  }
  while (1)
  {
    v162 = v159 + 1;
    if (__OFADD__(v159, 1))
      break;
    if (v162 >= v231)
      goto LABEL_122;
    v163 = *(_QWORD *)(v226 + 8 * v162);
    v164 = v159 + 1;
    if (!v163)
    {
      v164 = v159 + 2;
      if (v159 + 2 >= v231)
        goto LABEL_122;
      v163 = *(_QWORD *)(v226 + 8 * v164);
      if (!v163)
      {
        v164 = v159 + 3;
        if (v159 + 3 >= v231)
          goto LABEL_122;
        v163 = *(_QWORD *)(v226 + 8 * v164);
        if (!v163)
        {
          v165 = v159 + 4;
          if (v159 + 4 >= v231)
          {
LABEL_122:
            swift_bridgeObjectRelease();
            v10 = v255;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_23F37B7C0();
              v10 = v255;
            }
            v175 = v10[2];
            if (v175 >= v10[3] >> 1)
            {
              sub_23F38413C();
              sub_23F37B7C0();
              v10 = v255;
            }
            v10[2] = v175 + 1;
            v10[v175 + 4] = v154;
            v152 = v224;
            v0 = v249;
            if (v224 != v218)
              goto LABEL_100;
            goto LABEL_129;
          }
          v163 = *(_QWORD *)(v226 + 8 * v165);
          if (!v163)
          {
            while (1)
            {
              v164 = v165 + 1;
              if (__OFADD__(v165, 1))
                goto LABEL_136;
              if (v164 >= v231)
                goto LABEL_122;
              v163 = *(_QWORD *)(v226 + 8 * v164);
              ++v165;
              if (v163)
                goto LABEL_118;
            }
          }
          v164 = v159 + 4;
        }
      }
    }
LABEL_118:
    v158 = (v163 - 1) & v163;
    v247 = v164;
    v161 = __clz(__rbit64(v163)) + (v164 << 6);
LABEL_119:
    v166 = v0[110];
    v167 = v0[102];
    v254 = v0[97];
    v168 = v0[84];
    v169 = v0[83];
    v170 = *(_QWORD *)(v213 + 72) * v161;
    sub_23F362600(*(_QWORD *)(v245 + 48) + v170, v168, type metadata accessor for ActionResolver.Parameter);
    sub_23F38426C(v166, *(_QWORD *)(v245 + 56) + *(_QWORD *)(v228 + 72) * v161, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v228 + 16));
    v171 = sub_23F3848CC();
    sub_23F36262C(v171, v172, type metadata accessor for ActionResolver.Parameter);
    sub_23F61B3E0();
    sub_23F384A2C();
    sub_23F383E88(v166, v173);
    v154 = (uint64_t)v242;
    *(_QWORD *)(v238 + ((v161 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v161;
    sub_23F36262C(v169, v242[6] + v170, type metadata accessor for ActionResolver.Parameter);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v235 + 32))(v242[7] + *(_QWORD *)(v235 + 72) * v161, v167, v254);
    sub_23F38427C();
    if (v97)
      goto LABEL_133;
    v242[2] = v174;
    v159 = v247;
    v0 = v249;
    if (v158)
      goto LABEL_104;
  }
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
}

uint64_t sub_23F36BC50()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 1416) = v0;
  swift_task_dealloc();
  sub_23F3841EC();
  sub_23F362D08();
  sub_23F362D18();
  sub_23F3837B0();
  if (v0)
    sub_23F362984();
  sub_23F36679C();
  return sub_23F383F08();
}

void sub_23F36BCE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;

  sub_23F3836F0();
  sub_23F36262C(*(_QWORD *)(v0 + 616), *(_QWORD *)(v0 + 624), type metadata accessor for ActionResolver.Decision);
  v1 = sub_23F38422C();
  sub_23F384670(v1, v2);
  v3 = (char *)&loc_23F36BD64 + *((int *)qword_23F36D5D8 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

uint64_t sub_23F36BD78()
{
  _QWORD *v0;
  os_log_type_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(unint64_t, uint64_t, uint64_t);
  unint64_t v59;
  char v60;
  unint64_t v61;
  char v62;
  char v63;
  unint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  int64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t *v109;
  _QWORD *v110;
  uint64_t *v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void (*v128)(uint64_t, uint64_t);
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  void (*v134)(uint64_t, uint64_t, uint64_t);
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  char v139;
  unint64_t v140;
  char v141;
  void (*v142)(uint64_t, uint64_t);
  char v143;
  unint64_t v144;
  char v145;
  uint64_t v146;
  uint64_t *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t (*v158)(void);
  void (*v160)(uint64_t);
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  _QWORD *v182;
  uint64_t v183;
  int64_t v184;
  _QWORD *v185;
  unsigned int v186;

  v182 = v2;
  v5 = **(_QWORD **)(v3 + 608);
  sub_23F384060();
  v6 = sub_23F619E8C();
  v7 = sub_23F61C61C();
  if (sub_23F384458(v7))
  {
    v8 = (uint8_t *)sub_23F366668();
    *(_DWORD *)v8 = 134217984;
    *(_QWORD *)(v3 + 264) = v5;
    sub_23F61C790();
    sub_23F38485C(&dword_23F35A000, v6, v1, "Found a confident output of JointResolver (tuples[%ld])", v8);
    sub_23F366530();
  }
  v9 = *(_QWORD *)(v3 + 1368);
  v10 = *(void (**)(uint64_t, uint64_t))(v3 + 1312);
  v11 = *(_QWORD *)(v3 + 1272);
  v12 = *(_QWORD *)(v3 + 1224);
  *(_QWORD *)(v4 - 192) = *(_QWORD *)(v3 + 512);

  v10(v11, v12);
  sub_23F3753E0(v5, 1, v9);
  v13 = *(_QWORD *)(v9 + 8 * v5 + 32);
  sub_23F383738();
  sub_23F362D08();
  sub_23F382390(v13, v0);
  v14 = *(_QWORD *)(v3 + 64);
  v15 = *(_QWORD *)(v3 + 72);
  v16 = *(_QWORD *)(v3 + 80);
  *(_QWORD *)(v4 - 184) = *(_QWORD *)(v3 + 56);
  *(_QWORD *)(v4 - 176) = v16;
  v17 = *(_QWORD *)(v3 + 88);
  *(_QWORD *)(v4 - 208) = v14;
  *(_QWORD *)(v4 - 200) = (unint64_t)(v15 + 64) >> 6;
  sub_23F383738();
  v18 = (_QWORD *)MEMORY[0x24BEE4B00];
  while (1)
  {
    *(_QWORD *)(v4 - 112) = v18;
    if (v17)
    {
      *(_QWORD *)(v4 - 168) = (v17 - 1) & v17;
      v19 = __clz(__rbit64(v17)) | (*(_QWORD *)(v4 - 176) << 6);
      goto LABEL_27;
    }
    v20 = *(_QWORD *)(v4 - 176);
    v21 = v20 + 1;
    if (__OFADD__(v20, 1))
      goto LABEL_79;
    if (v21 >= *(_QWORD *)(v4 - 200))
      goto LABEL_36;
    if (!*(_QWORD *)(*(_QWORD *)(v4 - 208) + 8 * v21))
    {
      sub_23F384864();
      if (v22 == v23)
        goto LABEL_36;
      sub_23F38482C();
      if (!v24)
      {
        sub_23F384864();
        if (v22 == v23)
          goto LABEL_36;
        sub_23F38482C();
        if (!v25)
        {
          sub_23F384864();
          if (v22 == v23)
            goto LABEL_36;
          sub_23F38482C();
          if (!v26)
          {
            sub_23F384864();
            if (v22 == v23)
              goto LABEL_36;
            sub_23F38482C();
            if (!v28)
            {
              if (v27 + 5 >= *(_QWORD *)(v4 - 200))
                goto LABEL_36;
              if (!*(_QWORD *)(*(_QWORD *)(v4 - 208) + 8 * (v27 + 5)))
                break;
            }
          }
        }
      }
    }
LABEL_26:
    sub_23F384818();
    *(_QWORD *)(v4 - 176) = v31;
    *(_QWORD *)(v4 - 168) = v32;
    v19 = v33 + (v31 << 6);
LABEL_27:
    v34 = *(_QWORD *)(v3 + 920);
    *(_QWORD *)(v4 - 144) = *(_QWORD *)(v3 + 912);
    *(_QWORD *)(v4 - 136) = v34;
    v35 = *(_QWORD *)(v3 + 872);
    *(_QWORD *)(v4 - 128) = *(_QWORD *)(v3 + 904);
    *(_QWORD *)(v4 - 120) = v35;
    v36 = *(_QWORD *)(v3 + 864);
    v37 = *(_QWORD *)(v3 + 544);
    v38 = *(_QWORD *)(v3 + 536);
    v39 = *(_QWORD *)(v3 + 528);
    v40 = *(_QWORD *)(v3 + 520);
    v41 = *(_QWORD *)(v4 - 184);
    sub_23F384910(*(_QWORD *)(v41 + 48) + *(_QWORD *)(*(_QWORD *)(v3 + 640) + 72) * v19, v37);
    v42 = *(_QWORD *)(v41 + 56);
    v43 = *(_QWORD *)(v36 + 72);
    *(_QWORD *)(v4 - 152) = v43;
    v44 = *(_QWORD *)(v4 - 192);
    sub_23F3848A0(v37 + *(int *)(v44 + 48), v42 + v43 * v19);
    v45 = sub_23F384A14();
    sub_23F383004(v45, v46, &qword_256E6FAF0);
    v47 = *(int *)(v44 + 48);
    v48 = v39 + v47;
    v49 = v38 + v47;
    sub_23F384910(v38, v39);
    *(_QWORD *)(v4 - 160) = v48;
    sub_23F3848A0(v48, v49);
    v50 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 144) + 16);
    v51 = *(_QWORD *)(v4 - 136);
    v52 = *(_QWORD *)(v4 - 128);
    *(_QWORD *)(v4 - 128) = v50;
    v50(v51, v39, v52);
    sub_23F382F88(v39, type metadata accessor for ActionResolver.Parameter);
    v53 = v40 + *(int *)(v44 + 48);
    v54 = sub_23F38436C();
    sub_23F384910(v54, v55);
    v56 = sub_23F384AB4();
    sub_23F3848A0(v56, v57);
    v58 = *(void (**)(unint64_t, uint64_t, uint64_t))(v36 + 32);
    sub_23F384480(*(_QWORD *)(v4 - 120), v53);
    sub_23F3841E0();
    *(_QWORD *)(v4 - 96) = v44;
    sub_23F375614();
    sub_23F38488C();
    if (v23)
    {
      __break(1u);
LABEL_77:
      __break(1u);
LABEL_78:
      __break(1u);
LABEL_79:
      __break(1u);
LABEL_80:
      __break(1u);
LABEL_81:
      __break(1u);
      JUMPOUT(0x23F36D5D8);
    }
    v61 = v59;
    v62 = v60;
    sub_23F35D2E8(&qword_256E6FB50);
    v63 = sub_23F3841D4();
    v3 = *(_QWORD *)(v4 - 104);
    v18 = *(_QWORD **)(v4 - 96);
    if ((v63 & 1) != 0)
    {
      sub_23F375614();
      if ((v62 & 1) != (v65 & 1))
        return sub_23F3838F8();
      v61 = v64;
    }
    if ((v62 & 1) != 0)
    {
      (*(void (**)(unint64_t, _QWORD, _QWORD))(*(_QWORD *)(v3 + 864) + 40))(v18[7] + v61 * *(_QWORD *)(v4 - 152), *(_QWORD *)(v3 + 872), *(_QWORD *)(v3 + 856));
    }
    else
    {
      v66 = *(_QWORD *)(v3 + 920);
      v67 = *(_QWORD *)(v3 + 912);
      v68 = *(_QWORD *)(v3 + 904);
      v69 = *(_QWORD *)(v3 + 872);
      v70 = *(_QWORD *)(v3 + 856);
      v18[(v61 >> 6) + 8] |= 1 << v61;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 - 128))(v18[6] + *(_QWORD *)(v67 + 72) * v61, v66, v68);
      v58(v18[7] + v61 * *(_QWORD *)(v4 - 152), v69, v70);
      v71 = v18[2];
      v23 = __OFADD__(v71, 1);
      v72 = v71 + 1;
      if (v23)
        goto LABEL_78;
      v18[2] = v72;
    }
    v17 = *(_QWORD *)(v4 - 168);
    v73 = *(_QWORD *)(v3 + 920);
    v74 = *(_QWORD *)(v3 + 912);
    v75 = *(_QWORD *)(v3 + 864);
    v76 = *(_QWORD *)(v3 + 536);
    v77 = *(_QWORD *)(v3 + 520);
    sub_23F384450();
    sub_23F383E88(v73, *(uint64_t (**)(uint64_t, uint64_t))(v74 + 8));
    sub_23F382F88(v77, type metadata accessor for ActionResolver.Parameter);
    sub_23F383E64(*(_QWORD *)(v4 - 160), *(uint64_t (**)(uint64_t, uint64_t))(v75 + 8));
    sub_23F3625D8(v76, &qword_256E6FAF0);
  }
  v29 = *(_QWORD *)(v4 - 176) + 7;
  while (v29 < *(_QWORD *)(v4 - 200))
  {
    if (*(_QWORD *)(*(_QWORD *)(v4 - 208) + 8 * v29++))
      goto LABEL_26;
  }
LABEL_36:
  v78 = *(_QWORD *)(v3 + 504);
  *(_QWORD *)(v4 - 216) = *(_QWORD *)(v3 + 496);
  *(_QWORD *)(v4 - 208) = v78;
  v79 = *(_QWORD *)(v3 + 488);
  *(_QWORD *)(v4 - 232) = *(_QWORD *)(v3 + 480);
  *(_QWORD *)(v4 - 224) = v79;
  v80 = *(_QWORD *)(v3 + 472);
  *(_QWORD *)(v4 - 248) = *(_QWORD *)(v3 + 448);
  *(_QWORD *)(v4 - 240) = v80;
  *(_QWORD *)(v4 - 256) = *(_QWORD *)(v3 + 424);
  swift_bridgeObjectRelease();
  swift_release();
  ActionResolverRequestEvaluator.coalesceCollectionParameters(parameterizedTuple:)((uint64_t)v18, v81, v82, v83, v84, v85, v86, v87, v170, v171, v172, v173, v174, v175, v176, v177, v178, v179, v180,
    v181);
  v89 = v88;
  sub_23F362984();
  v90 = sub_23F61BFEC();
  sub_23F382390(v89, v185);
  *(_QWORD *)(v4 - 200) = *(_QWORD *)(v3 + 16);
  v183 = *(_QWORD *)(v3 + 24);
  v91 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)(v4 - 192) = *(_QWORD *)(v3 + 40);
  v92 = *(_QWORD *)(v3 + 48);
  v184 = (unint64_t)(v91 + 64) >> 6;
  v186 = *MEMORY[0x24BE55998];
  sub_23F3668F4();
  while (2)
  {
    *(_QWORD *)(v4 - 112) = v90;
    if (v92)
    {
      *(_QWORD *)(v4 - 176) = (v92 - 1) & v92;
      v93 = __clz(__rbit64(v92)) | (*(_QWORD *)(v4 - 192) << 6);
LABEL_60:
      v106 = *(_QWORD *)(v3 + 864);
      v107 = *(_QWORD *)(v3 + 856);
      v109 = *(uint64_t **)(v3 + 496);
      v108 = *(char **)(v3 + 504);
      v110 = (_QWORD *)v3;
      v111 = *(uint64_t **)(v3 + 488);
      v112 = (uint64_t *)v110[60];
      *(_QWORD *)(v4 - 136) = v110[58];
      *(_QWORD *)(v4 - 128) = v110[57];
      *(_QWORD *)(v4 - 120) = v110[55];
      v113 = v110[54];
      *(_QWORD *)(v4 - 168) = v106;
      *(_QWORD *)(v4 - 160) = v113;
      v115 = v110 + 51;
      v114 = v110[51];
      *(_QWORD *)(v4 - 152) = v115[1];
      *(_QWORD *)(v4 - 144) = v114;
      v116 = *(_QWORD *)(v4 - 200);
      v117 = (uint64_t *)(*(_QWORD *)(v116 + 48) + 16 * v93);
      v118 = *v117;
      v119 = v117[1];
      v120 = *(_QWORD *)(v4 - 240);
      (*(void (**)(char *, unint64_t, uint64_t))(v106 + 16))(&v108[*(int *)(v120 + 48)], *(_QWORD *)(v116 + 56) + *(_QWORD *)(v106 + 72) * v93, v107);
      *(_QWORD *)v108 = v118;
      *(_QWORD *)(*(_QWORD *)(v4 - 208) + 8) = v119;
      v121 = sub_23F384220();
      sub_23F383004(v121, v122, &qword_256E6FAE8);
      v123 = *(int *)(v120 + 48);
      v124 = *v109;
      v125 = *(_QWORD *)(*(_QWORD *)(v4 - 216) + 8);
      *v111 = *v109;
      *(_QWORD *)(*(_QWORD *)(v4 - 224) + 8) = v125;
      *(_QWORD *)(v4 - 184) = (char *)v111 + v123;
      sub_23F38492C((uint64_t)v111 + v123);
      v126 = (uint64_t)v112 + *(int *)(v120 + 48);
      *v112 = v124;
      *(_QWORD *)(*(_QWORD *)(v4 - 232) + 8) = v125;
      sub_23F38492C(v126);
      sub_23F384324();
      sub_23F3668F4();
      v127 = *(_QWORD *)(v4 - 160);
      sub_23F61B3E0();
      v128 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 168) + 8);
      v128(v126, v107);
      (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v4 - 256) + 104))(v127, v186, *(_QWORD *)(v4 - 152));
      v129 = sub_23F6180BC();
      sub_23F3838D8(*(_QWORD *)(v4 - 144), v130, v131, v129);
      v132 = *(_QWORD *)(v4 - 136);
      sub_23F61B068();
      v133 = *(_QWORD *)(v4 - 248);
      v134 = *(void (**)(uint64_t, uint64_t, uint64_t))(v133 + 32);
      v135 = *(_QWORD *)(v4 - 128);
      v136 = *(_QWORD *)(v4 - 120);
      *(_QWORD *)(v4 - 120) = v134;
      v134(v135, v132, v136);
      sub_23F3841E0();
      *(_QWORD *)(v4 - 96) = v132;
      v137 = v124;
      sub_23F37568C(v124, v125, (uint64_t)MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t))sub_23F375BB8);
      sub_23F38488C();
      if (v23)
        goto LABEL_77;
      v140 = v138;
      v141 = v139;
      v142 = v128;
      sub_23F35D2E8(&qword_256E6FB58);
      v143 = sub_23F3841D4();
      v3 = *(_QWORD *)(v4 - 104);
      v90 = *(_QWORD *)(v4 - 96);
      if ((v143 & 1) != 0)
      {
        sub_23F37568C(v137, v125, (uint64_t)MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t))sub_23F375BB8);
        sub_23F384050();
        if (!v145)
          return sub_23F3838F8();
        v140 = v144;
      }
      if ((v141 & 1) != 0)
      {
        (*(void (**)(unint64_t, _QWORD, _QWORD))(v133 + 40))(*(_QWORD *)(v90 + 56) + *(_QWORD *)(v133 + 72) * v140, *(_QWORD *)(v3 + 456), *(_QWORD *)(v3 + 440));
      }
      else
      {
        sub_23F384B78(v90 + 8 * (v140 >> 6));
        v147 = (uint64_t *)(v146 + 16 * v140);
        *v147 = v137;
        v147[1] = v125;
        (*(void (**)(unint64_t))(v4 - 120))(*(_QWORD *)(v90 + 56) + *(_QWORD *)(v133 + 72) * v140);
        v148 = *(_QWORD *)(v90 + 16);
        v23 = __OFADD__(v148, 1);
        v149 = v148 + 1;
        if (v23)
          goto LABEL_80;
        *(_QWORD *)(v90 + 16) = v149;
        sub_23F3668F4();
      }
      v150 = *(_QWORD *)(v3 + 856);
      v151 = *(_QWORD *)(v3 + 496);
      sub_23F384450();
      sub_23F362D18();
      v142(*(_QWORD *)(v4 - 184), v150);
      sub_23F3625D8(v151, &qword_256E6FAE8);
      v92 = *(_QWORD *)(v4 - 176);
      continue;
    }
    break;
  }
  v94 = *(_QWORD *)(v4 - 192);
  v95 = v94 + 1;
  if (__OFADD__(v94, 1))
    goto LABEL_81;
  if (v95 >= v184)
    goto LABEL_71;
  if (*(_QWORD *)(v183 + 8 * v95))
    goto LABEL_59;
  sub_23F384B14();
  if (v22 == v23)
    goto LABEL_71;
  sub_23F384B08();
  if (v96)
    goto LABEL_59;
  sub_23F384B14();
  if (v22 == v23)
    goto LABEL_71;
  sub_23F384B08();
  if (v97)
    goto LABEL_59;
  sub_23F384B14();
  if (v22 == v23)
    goto LABEL_71;
  sub_23F384B08();
  if (v98)
    goto LABEL_59;
  sub_23F384B14();
  if (v22 == v23)
    goto LABEL_71;
  sub_23F384B08();
  if (v100)
    goto LABEL_59;
  if (v99 + 5 >= v184)
    goto LABEL_71;
  if (*(_QWORD *)(v183 + 8 * (v99 + 5)))
  {
LABEL_59:
    sub_23F384818();
    *(_QWORD *)(v4 - 176) = v103;
    v93 = v105 + (v104 << 6);
    *(_QWORD *)(v4 - 192) = v104;
    goto LABEL_60;
  }
  v101 = *(_QWORD *)(v4 - 192) + 7;
  while (v101 < v184)
  {
    if (*(_QWORD *)(v183 + 8 * v101++))
      goto LABEL_59;
  }
LABEL_71:
  v152 = *(_QWORD *)(v3 + 1416);
  swift_bridgeObjectRelease();
  swift_release();
  sub_23F61B2FC();
  sub_23F35EA9C(v182, *(_QWORD *)(v3 + 200));
  sub_23F61AA08();
  sub_23F384A88();
  if (v152)
  {
    v153 = *(_QWORD *)(v3 + 1200);
    v154 = *(_QWORD *)(v3 + 1192);
    v155 = *(_QWORD *)(v3 + 1184);
    *(_QWORD *)(v4 - 104) = v152;
    sub_23F362D18();
    sub_23F366748();
    v156 = swift_bridgeObjectRelease();
    sub_23F3849C4(v156, type metadata accessor for ActionResolver.Decision);
    v157 = (*(uint64_t (**)(uint64_t, uint64_t))(v154 + 8))(v153, v155);
    sub_23F384490(v157, (uint64_t (*)(_QWORD))type metadata accessor for RequirementStatus);
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v182);
    sub_23F3834F0();
    sub_23F366708();
    sub_23F3666C4();
    sub_23F3666DC();
    sub_23F362CC8();
    sub_23F3666EC();
    sub_23F3666A0();
    sub_23F3666D4();
    sub_23F366698();
    sub_23F3666E4();
    sub_23F3668D4();
    sub_23F383980();
    sub_23F3667E0();
    sub_23F383898();
    sub_23F383978();
    sub_23F383970();
    sub_23F383890();
    sub_23F383888();
    sub_23F383880();
    sub_23F383878();
    sub_23F383870();
    sub_23F383868();
    sub_23F383C4C();
    sub_23F383C44();
    sub_23F383C3C();
    sub_23F383C34();
    sub_23F383C2C();
    sub_23F383C24();
    sub_23F383C1C();
    sub_23F383C14();
    sub_23F383C0C();
    sub_23F383C04();
    sub_23F383BFC();
    sub_23F383BF4();
    sub_23F383BEC();
    sub_23F383BE4();
    sub_23F383BDC();
    sub_23F383BD4();
    sub_23F383BCC();
    sub_23F383BC4();
    sub_23F383BBC();
    sub_23F383BB4();
    sub_23F383BAC();
    sub_23F383BA4();
    sub_23F383B9C();
    sub_23F383B94();
    sub_23F383B8C();
    sub_23F383B84();
    sub_23F383B7C();
    sub_23F383B74();
    sub_23F383B6C();
    sub_23F383B64();
    sub_23F383B5C();
    sub_23F383B54();
    sub_23F383DCC();
    sub_23F383DC4();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_23F383B4C();
    sub_23F383B44();
    sub_23F383B3C();
    sub_23F383B34();
    sub_23F383B2C();
    sub_23F383B24();
    sub_23F383B1C();
    sub_23F383B14();
    sub_23F383B0C();
    sub_23F383B04();
    sub_23F383C54();
    sub_23F383C5C();
    sub_23F383AFC();
    sub_23F383AF4();
    sub_23F383AEC();
    sub_23F383AE4();
    sub_23F383ADC();
    sub_23F383AD4();
    sub_23F383C6C();
    v158 = *(uint64_t (**)(void))(v3 + 8);
  }
  else
  {
    v160 = *(void (**)(uint64_t))(v3 + 1344);
    sub_23F362D18();
    sub_23F61B578();
    v161 = sub_23F384220();
    v160(v161);
    sub_23F374524(0xD00000000000009DLL, 0x800000023F6344E0, 144, 0xD00000000000004FLL, 0x800000023F634580, &qword_256E6FAD8, (uint64_t (*)(_QWORD))MEMORY[0x24BEB9AF8]);
    v162 = *(_QWORD *)(v3 + 1200);
    v163 = *(_QWORD *)(v3 + 1192);
    v164 = *(_QWORD *)(v3 + 760);
    *(_QWORD *)(v4 - 128) = *(_QWORD *)(v3 + 1136);
    *(_QWORD *)(v4 - 120) = v164;
    v165 = *(_QWORD *)(v3 + 624);
    v167 = *(_QWORD *)(v3 + 392);
    v166 = *(_QWORD *)(v3 + 400);
    v168 = *(_QWORD *)(*(_QWORD *)(v4 - 104) + 376);
    *(_QWORD *)(v4 - 144) = *(_QWORD *)(*(_QWORD *)(v4 - 104) + 288);
    *(_QWORD *)(v4 - 136) = v165;
    sub_23F3625D8(v168, &qword_256E6FAD8);
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v182);
    sub_23F61B974();
    sub_23F38456C(v166, *(uint64_t (**)(uint64_t, uint64_t))(v167 + 8));
    sub_23F61A978();
    sub_23F61AA08();
    sub_23F61A930();
    sub_23F61B050();
    v169 = swift_release();
    sub_23F384408(v169, type metadata accessor for ActionResolver.Decision);
    sub_23F383F80(v162, *(uint64_t (**)(uint64_t, uint64_t))(v163 + 8));
    sub_23F382F88(*(_QWORD *)(v4 - 128), (uint64_t (*)(_QWORD))type metadata accessor for RequirementStatus);
    swift_storeEnumTagMultiPayload();
    sub_23F3833D0();
    sub_23F3666EC();
    sub_23F3666C4();
    sub_23F3666DC();
    sub_23F362CC8();
    sub_23F3666A0();
    sub_23F3666D4();
    sub_23F366698();
    sub_23F3666E4();
    sub_23F366708();
    sub_23F383980();
    sub_23F3667E0();
    sub_23F383898();
    sub_23F383978();
    sub_23F383970();
    sub_23F383890();
    sub_23F383888();
    sub_23F383880();
    sub_23F383878();
    sub_23F383870();
    sub_23F383868();
    sub_23F383C4C();
    sub_23F383C44();
    sub_23F383C3C();
    sub_23F383C34();
    sub_23F383C2C();
    sub_23F383C24();
    sub_23F383C1C();
    sub_23F383C14();
    sub_23F383C0C();
    sub_23F383C04();
    sub_23F383BFC();
    sub_23F383BF4();
    sub_23F383BEC();
    sub_23F383BE4();
    sub_23F383BDC();
    sub_23F383BD4();
    sub_23F383BCC();
    sub_23F383BC4();
    sub_23F383BBC();
    sub_23F383BB4();
    sub_23F383BAC();
    sub_23F383BA4();
    sub_23F383B9C();
    sub_23F383B94();
    sub_23F383B8C();
    sub_23F383B84();
    sub_23F383B7C();
    sub_23F383B74();
    sub_23F383B6C();
    sub_23F383B64();
    sub_23F383B5C();
    sub_23F383B54();
    sub_23F383DCC();
    sub_23F383DC4();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_23F383B4C();
    sub_23F383B44();
    sub_23F383B3C();
    sub_23F383B34();
    sub_23F383B2C();
    sub_23F383B24();
    sub_23F383B1C();
    sub_23F383B14();
    sub_23F383B0C();
    sub_23F383B04();
    sub_23F383C54();
    sub_23F383C5C();
    sub_23F383AFC();
    sub_23F383AF4();
    sub_23F383AEC();
    sub_23F383AE4();
    sub_23F383ADC();
    sub_23F383AD4();
    sub_23F383C6C();
    sub_23F383FDC();
    v158 = (uint64_t (*)(void))sub_23F384760();
  }
  return sub_23F38346C(v158);
}

uint64_t sub_23F36D5E8()
{
  uint64_t v0;

  sub_23F3836F0();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 136);
  sub_23F3830C4(*(_QWORD *)(v0 + 1328));
  sub_23F366708();
  sub_23F3666EC();
  sub_23F3666C4();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666A0();
  sub_23F3666D4();
  sub_23F366698();
  sub_23F3666E4();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383878();
  sub_23F383870();
  sub_23F383868();
  sub_23F383C4C();
  sub_23F383C44();
  sub_23F383C3C();
  sub_23F383C34();
  sub_23F383C2C();
  sub_23F383C24();
  sub_23F383C1C();
  sub_23F383C14();
  sub_23F383C0C();
  sub_23F383C04();
  sub_23F383BFC();
  sub_23F383BF4();
  sub_23F383BEC();
  sub_23F383BE4();
  sub_23F383BDC();
  sub_23F383BD4();
  sub_23F383BCC();
  sub_23F383BC4();
  sub_23F383BBC();
  sub_23F383BB4();
  sub_23F383BAC();
  sub_23F383BA4();
  sub_23F383B9C();
  sub_23F383B94();
  sub_23F383B8C();
  sub_23F383B84();
  sub_23F383B7C();
  sub_23F383B74();
  sub_23F383B6C();
  sub_23F383B64();
  sub_23F383B5C();
  sub_23F383B54();
  sub_23F383DCC();
  sub_23F383DC4();
  sub_23F383B4C();
  sub_23F383B44();
  sub_23F383B3C();
  sub_23F383B34();
  sub_23F383B2C();
  sub_23F383B24();
  sub_23F383B1C();
  sub_23F383B14();
  sub_23F383B0C();
  sub_23F383B04();
  sub_23F383C54();
  sub_23F383C5C();
  sub_23F383AFC();
  sub_23F383AF4();
  sub_23F383AEC();
  sub_23F383AE4();
  sub_23F383ADC();
  sub_23F383AD4();
  sub_23F383C6C();
  sub_23F383FDC();
  sub_23F38409C();
  return sub_23F38346C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F36D758()
{
  uint64_t v0;

  sub_23F3836F0();
  sub_23F382F88(*(_QWORD *)(v0 + 1136), (uint64_t (*)(_QWORD))type metadata accessor for RequirementStatus);
  sub_23F3830C4(*(_QWORD *)(v0 + 1360));
  sub_23F366708();
  sub_23F3666EC();
  sub_23F3666C4();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666A0();
  sub_23F3666D4();
  sub_23F366698();
  sub_23F3666E4();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383878();
  sub_23F383870();
  sub_23F383868();
  sub_23F383C4C();
  sub_23F383C44();
  sub_23F383C3C();
  sub_23F383C34();
  sub_23F383C2C();
  sub_23F383C24();
  sub_23F383C1C();
  sub_23F383C14();
  sub_23F383C0C();
  sub_23F383C04();
  sub_23F383BFC();
  sub_23F383BF4();
  sub_23F383BEC();
  sub_23F383BE4();
  sub_23F383BDC();
  sub_23F383BD4();
  sub_23F383BCC();
  sub_23F383BC4();
  sub_23F383BBC();
  sub_23F383BB4();
  sub_23F383BAC();
  sub_23F383BA4();
  sub_23F383B9C();
  sub_23F383B94();
  sub_23F383B8C();
  sub_23F383B84();
  sub_23F383B7C();
  sub_23F383B74();
  sub_23F383B6C();
  sub_23F383B64();
  sub_23F383B5C();
  sub_23F383B54();
  sub_23F383DCC();
  sub_23F383DC4();
  sub_23F383B4C();
  sub_23F383B44();
  sub_23F383B3C();
  sub_23F383B34();
  sub_23F383B2C();
  sub_23F383B24();
  sub_23F383B1C();
  sub_23F383B14();
  sub_23F383B0C();
  sub_23F383B04();
  sub_23F383C54();
  sub_23F383C5C();
  sub_23F383AFC();
  sub_23F383AF4();
  sub_23F383AEC();
  sub_23F383AE4();
  sub_23F383ADC();
  sub_23F383AD4();
  sub_23F383C6C();
  sub_23F383FDC();
  sub_23F38409C();
  return sub_23F38346C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F36D8D0()
{
  os_log_type_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  void *v7;
  uint8_t *v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  void *v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  void *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;

  sub_23F3836F0();
  v2 = *(void **)(v1 + 1416);
  sub_23F619094();
  v3 = v2;
  v4 = v2;
  v5 = sub_23F619E8C();
  v6 = sub_23F61C628();
  if (sub_23F384458(v6))
  {
    v7 = *(void **)(v1 + 1416);
    v8 = (uint8_t *)sub_23F366668();
    v9 = (_QWORD *)sub_23F366668();
    *(_DWORD *)v8 = 138412290;
    v10 = v7;
    v11 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v1 + 248) = v11;
    sub_23F61C790();
    *v9 = v11;

    sub_23F38485C(&dword_23F35A000, v5, v0, "Error calling action resolver: %@", v8);
    sub_23F35D2E8(&qword_256E6FAB0);
    swift_arrayDestroy();
    sub_23F366530();
  }
  v12 = *(void **)(v1 + 1416);

  v13 = *(void (**)(uint64_t))(v1 + 1312);
  v14 = sub_23F384664();
  v13(v14);
  sub_23F619094();
  v15 = (void *)sub_23F619E8C();
  v16 = sub_23F61C628();
  if (sub_23F383AC4(v16))
  {
    *(_WORD *)sub_23F366668() = 0;
    sub_23F383D60(&dword_23F35A000, v17, v18, "Resolving without action resolver");
    sub_23F366530();
  }
  v19 = *(void (**)(uint64_t))(v1 + 1312);

  v20 = sub_23F384AB4();
  v19(v20);
  v21 = sub_23F38474C();
  sub_23F370D88(v21, v22, v23);
  v24 = *(void **)(v1 + 1416);
  v25 = *(uint64_t (**)(uint64_t))(v1 + 1304);
  swift_release();

  v26 = sub_23F384AB4();
  v27 = v25(v26);
  sub_23F384490(v27, (uint64_t (*)(_QWORD))type metadata accessor for RequirementStatus);
  sub_23F384870();
  sub_23F383A24();
  swift_task_dealloc();
  sub_23F366708();
  sub_23F3666EC();
  sub_23F3666DC();
  swift_task_dealloc();
  sub_23F3666E4();
  sub_23F3666A0();
  sub_23F3666D4();
  sub_23F366698();
  sub_23F3668E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383878();
  sub_23F383870();
  sub_23F383868();
  sub_23F383C4C();
  sub_23F383C44();
  sub_23F383C3C();
  sub_23F383C34();
  sub_23F383C2C();
  sub_23F383C24();
  sub_23F383C1C();
  sub_23F383C14();
  sub_23F383C0C();
  sub_23F383C04();
  sub_23F383BFC();
  sub_23F383BF4();
  sub_23F383BEC();
  sub_23F383BE4();
  sub_23F383BDC();
  sub_23F383BD4();
  sub_23F383BCC();
  sub_23F383BC4();
  sub_23F383BBC();
  sub_23F383BB4();
  sub_23F383BAC();
  sub_23F383BA4();
  sub_23F383B9C();
  sub_23F383B94();
  sub_23F383B8C();
  sub_23F383B84();
  sub_23F383B7C();
  sub_23F383B74();
  sub_23F383B6C();
  sub_23F383B64();
  sub_23F383B5C();
  sub_23F383B54();
  sub_23F383DCC();
  sub_23F383DC4();
  sub_23F383B4C();
  sub_23F383B44();
  sub_23F383B3C();
  sub_23F383B34();
  sub_23F383B2C();
  sub_23F383B24();
  sub_23F383B1C();
  sub_23F383B14();
  sub_23F383B0C();
  sub_23F383B04();
  sub_23F383C54();
  sub_23F383C5C();
  sub_23F383AFC();
  sub_23F383AF4();
  sub_23F383AEC();
  sub_23F383AE4();
  sub_23F383ADC();
  sub_23F383AD4();
  sub_23F383C6C();
  sub_23F383FDC();
  sub_23F38409C();
  return sub_23F38346C(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_23F36DDA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4[11] = a3;
  v4[12] = v3;
  v4[9] = a1;
  v4[10] = a2;
  v5 = sub_23F619E98();
  v4[13] = v5;
  v4[14] = *(_QWORD *)(v5 - 8);
  v4[15] = swift_task_alloc();
  v4[16] = swift_task_alloc();
  v4[17] = type metadata accessor for TranscriptValueFetcher(0);
  v4[18] = swift_task_alloc();
  sub_23F35D2E8(&qword_256E701F0);
  v4[19] = swift_task_alloc();
  v6 = sub_23F61B92C();
  v4[20] = v6;
  v4[21] = *(_QWORD *)(v6 - 8);
  v4[22] = swift_task_alloc();
  v4[23] = swift_task_alloc();
  v4[24] = type metadata accessor for ExpressionEvaluator(0);
  v4[25] = swift_task_alloc();
  sub_23F35D2E8(&qword_256E703B8);
  v4[26] = swift_task_alloc();
  v7 = sub_23F61A570();
  v4[27] = v7;
  v4[28] = *(_QWORD *)(v7 - 8);
  v4[29] = swift_task_alloc();
  sub_23F35D2E8(&qword_256E703C0);
  v4[30] = swift_task_alloc();
  v8 = sub_23F617D08();
  v4[31] = v8;
  v4[32] = *(_QWORD *)(v8 - 8);
  v4[33] = swift_task_alloc();
  sub_23F35D2E8(&qword_256E6FB08);
  v4[34] = swift_task_alloc();
  v4[35] = swift_task_alloc();
  v9 = sub_23F61BB54();
  v4[36] = v9;
  v4[37] = *(_QWORD *)(v9 - 8);
  v4[38] = swift_task_alloc();
  v4[39] = swift_task_alloc();
  v4[40] = sub_23F35D2E8(&qword_256E703C8);
  v4[41] = swift_task_alloc();
  v10 = sub_23F61B95C();
  v4[42] = v10;
  v4[43] = *(_QWORD *)(v10 - 8);
  v4[44] = swift_task_alloc();
  v11 = sub_23F61BBA8();
  v4[45] = v11;
  v4[46] = *(_QWORD *)(v11 - 8);
  v4[47] = swift_task_alloc();
  sub_23F35D2E8(&qword_256E70238);
  v4[48] = swift_task_alloc();
  v12 = sub_23F61B5D8();
  v4[49] = v12;
  v4[50] = *(_QWORD *)(v12 - 8);
  v4[51] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F36E088()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  void (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  os_log_type_t v75;
  NSObject *v76;
  os_log_type_t v77;
  uint8_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  NSObject *v91;
  os_log_type_t v92;
  _BOOL4 v93;
  uint64_t v94;
  uint64_t v95;
  uint8_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(uint64_t, uint64_t, uint64_t);
  uint64_t v105;
  uint64_t v106;
  void (*v107)(uint64_t);
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void (*v115)(uint64_t);
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  int v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t *v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;

  sub_23F61B2FC();
  v1 = (_QWORD *)sub_23F384ACC();
  sub_23F35EA9C(v1, v2);
  sub_23F384964();
  sub_23F384A88();
  v4 = v0[48];
  v3 = v0[49];
  sub_23F36196C(v4, 0, 1, v3);
  sub_23F3837B0();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)(v0 + 2));
  sub_23F383740(v4, 1, v3);
  if (v5)
  {
    sub_23F3625D8(v0[48], &qword_256E70238);
LABEL_4:
    sub_23F3846EC();
    goto LABEL_5;
  }
  v9 = v0[12];
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[50] + 32))(v0[51], v0[48], v0[49]);
  v10 = sub_23F374C40();
  v11 = sub_23F384908();
  *(_QWORD *)(v11 + 16) = v9;
  v12 = sub_23F36691C((void (*)(uint64_t *__return_ptr, uint64_t *))sub_23F382F58, v11, v10);
  sub_23F362984();
  sub_23F366708();
  result = sub_23F61B530();
  v14 = result;
  v129 = *(_QWORD *)(result + 16);
  if (!v129)
  {
LABEL_33:
    sub_23F38432C();
    v61 = v0[50];
    v60 = v0[51];
    sub_23F384364();
    sub_23F383E88(v60, *(uint64_t (**)(uint64_t, uint64_t))(v61 + 8));
    goto LABEL_4;
  }
  v15 = 0;
  v16 = v0[46];
  v17 = v0[43];
  v125 = v0[37];
  v127 = v0[40];
  v134 = result + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  v131 = *MEMORY[0x24BEB9AA0];
  v122 = v17;
  v124 = v16;
  v120 = result;
  while (1)
  {
    if (v15 >= *(_QWORD *)(v14 + 16))
    {
      __break(1u);
      return result;
    }
    v137 = v15;
    v18 = (*(uint64_t (**)(_QWORD, unint64_t, _QWORD))(v16 + 16))(v0[47], v134 + *(_QWORD *)(v16 + 72) * v15, v0[45]);
    MEMORY[0x24266F0AC](v18);
    v19 = sub_23F384664();
    if (v20(v19) != v131)
      break;
    v21 = v0[44];
    v22 = v0[41];
    (*(void (**)(_QWORD, _QWORD))(v16 + 8))(v0[47], v0[45]);
    sub_23F383CA8(v21, *(uint64_t (**)(uint64_t, uint64_t))(v17 + 96));
    v23 = swift_projectBox();
    v24 = *(int *)(v127 + 48);
    v25 = v22 + v24;
    v26 = v23 + v24;
    sub_23F383C64(v22, v23, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 16));
    sub_23F382EF8(v26, v25, &qword_256E701F0);
    sub_23F3625D8(v25, &qword_256E701F0);
    sub_23F383CA8(v22, *(uint64_t (**)(uint64_t, uint64_t))(v17 + 8));
    result = sub_23F366748();
LABEL_14:
    v15 = v137 + 1;
    if (v137 + 1 == v129)
      goto LABEL_33;
  }
  (*(void (**)(_QWORD, _QWORD))(v17 + 8))(v0[44], v0[42]);
  sub_23F61BB90();
  sub_23F61BB48();
  sub_23F3612C0(&qword_256E703D0, (uint64_t (*)(uint64_t))MEMORY[0x24BEBA310], MEMORY[0x24BEBA328]);
  v27 = sub_23F61C844();
  v28 = *(void (**)(uint64_t))(v125 + 8);
  v29 = sub_23F3848F0();
  v28(v29);
  v30 = sub_23F384ACC();
  v28(v30);
  if ((v27 & 1) != 0)
  {
    v16 = v124;
    result = (*(uint64_t (**)(_QWORD, _QWORD))(v124 + 8))(v0[47], v0[45]);
    v17 = v122;
    goto LABEL_14;
  }
  v31 = sub_23F61BB78();
  v33 = v32;
  v140 = *(_QWORD *)(v12 + 16);
  if (!v140)
  {
LABEL_34:
    v62 = v0[30];
    swift_bridgeObjectRelease();
    sub_23F384364();
    v63 = sub_23F61A9F0();
    sub_23F3668F4();
    sub_23F3684BC(v31, v33, v63);
    sub_23F362984();
    sub_23F362D18();
    v64 = sub_23F6184F4();
    v65 = sub_23F36195C(v62, 1, v64);
    v66 = v0[30];
    if (v65 == 1)
    {
      sub_23F3625D8(v66, &qword_256E703C0);
    }
    else
    {
      v67 = *(_QWORD *)(v64 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v67 + 88))(v66, v64) == *MEMORY[0x24BE54A38])
      {
        v69 = v0[32];
        v68 = v0[33];
        v70 = v0[30];
        v138 = v0[27];
        sub_23F38456C(v70, *(uint64_t (**)(uint64_t, uint64_t))(v67 + 96));
        sub_23F38431C(v68, v70, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v69 + 32));
        sub_23F453714();
        v71 = sub_23F3842D8();
        sub_23F383740(v71, v72, v138);
        if (v5)
        {
          v73 = v0[26];
          v74 = v0[16];
          sub_23F362D18();
          sub_23F3625D8(v73, &qword_256E703B8);
          sub_23F619094();
          v75 = v74;
          v76 = sub_23F619E8C();
          v77 = sub_23F61C628();
          if (sub_23F384534(v77))
          {
            v78 = (uint8_t *)sub_23F366668();
            *(_WORD *)v78 = 0;
            _os_log_impl(&dword_23F35A000, v76, v75, "Unable to resolve variable name to expression in plan.", v78, 2u);
            sub_23F366530();
          }
          v80 = v0[32];
          v79 = v0[33];
          v81 = v0[14];

          sub_23F3838CC(*(uint64_t (**)(uint64_t, uint64_t))(v81 + 8));
          sub_23F384B58();
          sub_23F3612C0((unint64_t *)&qword_256E6FB48, (uint64_t (*)(uint64_t))type metadata accessor for InterpreterError, (uint64_t)&protocol conformance descriptor for InterpreterError);
          sub_23F362D64();
          sub_23F38426C(v82, v79, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v80 + 16));
          sub_23F3848CC();
          swift_storeEnumTagMultiPayload();
          swift_willThrow();
          v83 = sub_23F3840BC();
          v107(v83);
          goto LABEL_47;
        }
        v98 = v0[29];
        v99 = v0[24];
        v100 = v0[25];
        v101 = v0[18];
        v135 = (uint64_t *)v0[19];
        v132 = v0[17];
        v102 = v0[10];
        (*(void (**)(uint64_t, _QWORD, _QWORD))(v0[28] + 32))(v98, v0[26], v0[27]);
        v103 = sub_23F61B164();
        v104 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 16);
        v104(v100, v102, v103);
        sub_23F3838F0();
        sub_23F3612C0(&qword_256E6FFB0, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52158]);
        v105 = sub_23F61BFEC();
        *(_QWORD *)(v100 + *(int *)(v99 + 20)) = v105;
        v104(v101, v100, v103);
        *(_QWORD *)(v101 + *(int *)(v132 + 20)) = v105;
        sub_23F384B00();
        v106 = sub_23F5F782C(v98, v135);
        sub_23F384A94(v106, type metadata accessor for TranscriptValueFetcher);
        sub_23F374524(0xD000000000000092, 0x800000023F6349A0, 25, 0x6C6176286C617665, 0xEC000000293A6575, &qword_256E701F0, (uint64_t (*)(_QWORD))MEMORY[0x24BEB9A18]);
        v136 = v0[49];
        v139 = v0[51];
        v130 = v0[47];
        v133 = v0[50];
        v126 = v0[33];
        v128 = v0[45];
        v121 = v0[32];
        v123 = v0[31];
        v110 = v0[28];
        v119 = v0[29];
        v111 = v0[23];
        v112 = v0[21];
        v113 = v0[9];
        sub_23F3625D8(v0[19], &qword_256E701F0);
        v114 = sub_23F384A14();
        v115(v114);
        sub_23F618404();
        v116 = sub_23F38456C(v111, *(uint64_t (**)(uint64_t, uint64_t))(v112 + 8));
        sub_23F384A94(v116, type metadata accessor for ExpressionEvaluator);
        sub_23F383E64(v119, *(uint64_t (**)(uint64_t, uint64_t))(v110 + 8));
        (*(void (**)(uint64_t, uint64_t))(v121 + 8))(v126, v123);
        (*(void (**)(uint64_t, uint64_t))(v124 + 8))(v130, v128);
        (*(void (**)(uint64_t, uint64_t))(v133 + 8))(v139, v136);
        v117 = *MEMORY[0x24BE53310];
        v118 = sub_23F3846EC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v118 - 8) + 104))(v113, v117, v118);
        goto LABEL_5;
      }
      sub_23F38456C(v0[30], *(uint64_t (**)(uint64_t, uint64_t))(v67 + 8));
    }
    v85 = v0[50];
    v84 = v0[51];
    v86 = v0[47];
    v87 = v0[9];
    sub_23F618218();
    sub_23F383F80(v86, *(uint64_t (**)(uint64_t, uint64_t))(v124 + 8));
    sub_23F383E64(v84, *(uint64_t (**)(uint64_t, uint64_t))(v85 + 8));
    v88 = *MEMORY[0x24BE532E8];
    v89 = sub_23F3846EC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 104))(v87, v88, v89);
LABEL_5:
    sub_23F38399C();
    sub_23F36196C(v0[9], v6, 1, v7);
    sub_23F3666C4();
    sub_23F3666EC();
    sub_23F366708();
    sub_23F3666E4();
    sub_23F3666D4();
    sub_23F3666A0();
    sub_23F366698();
    sub_23F362CC8();
    sub_23F3666DC();
    sub_23F3667E0();
    sub_23F383898();
    sub_23F383978();
    sub_23F383970();
    sub_23F383890();
    sub_23F383888();
    sub_23F383880();
    sub_23F383878();
    sub_23F383870();
    sub_23F383868();
    sub_23F38409C();
    v8 = (uint64_t (*)(void))sub_23F384760();
    return v8();
  }
  sub_23F384B00();
  v34 = 0;
  while (1)
  {
    v35 = *(_QWORD *)(v12 + 8 * v34 + 32);
    if (*(_QWORD *)(v35 + 16))
      break;
    v49 = v0[35];
    v50 = sub_23F3838F0();
    sub_23F3838D8(v49, v51, v52, v50);
    sub_23F383738();
    sub_23F3625D8(v49, &qword_256E6FB08);
    sub_23F362984();
LABEL_24:
    if (v140 == ++v34)
    {
      swift_bridgeObjectRelease();
      goto LABEL_34;
    }
  }
  sub_23F383738();
  sub_23F3668F4();
  v36 = sub_23F37568C(v31, v33, (uint64_t)MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t))sub_23F375BB8);
  v37 = v0[35];
  if ((v38 & 1) != 0)
  {
    v17 = v36;
    v39 = v33;
    v40 = v12;
    v41 = v31;
    v42 = *(_QWORD *)(v35 + 56);
    v43 = sub_23F3838F0();
    sub_23F38380C();
    v45 = v42 + v44 * v17;
    v31 = v41;
    v12 = v40;
    v33 = v39;
    sub_23F383F00(v37, v45, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v46 + 16));
    v47 = v37;
    v48 = 0;
  }
  else
  {
    v43 = sub_23F3838F0();
    v47 = v37;
    v48 = 1;
  }
  sub_23F383CC4(v47, v48);
  sub_23F362D18();
  sub_23F3838F0();
  sub_23F3840F8();
  sub_23F362984();
  if ((_DWORD)v17 == 1)
    goto LABEL_24;
  v53 = 0;
  while (1)
  {
    v54 = *(_QWORD *)(v12 + 8 * v53 + 32);
    if (!*(_QWORD *)(v54 + 16))
      break;
    sub_23F3668F4();
    sub_23F383738();
    v55 = sub_23F37568C(v31, v33, (uint64_t)MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t))sub_23F375BB8);
    v56 = v0[34];
    if ((v57 & 1) != 0)
    {
      sub_23F383F00(v0[34], *(_QWORD *)(v54 + 56) + *(_QWORD *)(*(_QWORD *)(v43 - 8) + 72) * v55, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 16));
      v58 = 0;
    }
    else
    {
      v58 = 1;
    }
    sub_23F383CC4(v56, v58);
    sub_23F362D18();
    sub_23F3840F8();
    sub_23F362984();
    if (v140 == ++v53)
    {
      v59 = v0[47];
      sub_23F384364();
      v16 = v124;
      sub_23F383CA8(v59, *(uint64_t (**)(uint64_t, uint64_t))(v124 + 8));
      result = sub_23F362D18();
      v14 = v120;
      v17 = v122;
      goto LABEL_14;
    }
  }
  v90 = v0[34];
  sub_23F383CC4(v90, 1);
  sub_23F383738();
  sub_23F3625D8(v90, &qword_256E6FB08);
  sub_23F362984();
  v141 = v31;
  sub_23F384A80();
  swift_bridgeObjectRelease();
  sub_23F384060();
  sub_23F3668F4();
  v91 = sub_23F619E8C();
  v92 = sub_23F61C628();
  v93 = os_log_type_enabled(v91, v92);
  v95 = v0[14];
  v94 = v0[15];
  if (v93)
  {
    v96 = (uint8_t *)sub_23F366668();
    v142 = sub_23F366668();
    *(_DWORD *)v96 = 136315138;
    sub_23F3668F4();
    sub_23F37AE00(v141, v33, &v142);
    v0[8] = v97;
    sub_23F61C790();
    swift_bridgeObjectRelease_n();
    sub_23F38485C(&dword_23F35A000, v91, v92, "invalid parameter set found for key '%s'. Execution cannot proceed.", v96);
    swift_arrayDestroy();
    sub_23F366530();
  }
  sub_23F384A80();

  sub_23F383D74(v94, *(uint64_t (**)(uint64_t, uint64_t))(v95 + 8));
  sub_23F384B58();
  sub_23F3612C0((unint64_t *)&qword_256E6FB48, (uint64_t (*)(uint64_t))type metadata accessor for InterpreterError, (uint64_t)&protocol conformance descriptor for InterpreterError);
  sub_23F362D64();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
LABEL_47:
  v108 = v0[50];
  v109 = v0[47];
  sub_23F38399C();
  (*(void (**)(uint64_t))(v124 + 8))(v109);
  sub_23F3838CC(*(uint64_t (**)(uint64_t, uint64_t))(v108 + 8));
  sub_23F3666EC();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383878();
  sub_23F383870();
  sub_23F383868();
  sub_23F38409C();
  v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_23F36EDCC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *a1;
  if (*(_QWORD *)(*a1 + 16) && (sub_23F375614(), (v5 & 1) != 0))
  {
    v6 = v4;
    v7 = *(_QWORD *)(v3 + 56);
    v8 = sub_23F61B404();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a2, v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * v6, v8);
    v9 = a2;
    v10 = 0;
    v11 = v8;
  }
  else
  {
    v11 = sub_23F61B404();
    v9 = a2;
    v10 = 1;
  }
  return sub_23F36196C(v9, v10, 1, v11);
}

void sub_23F36EE78()
{
  sub_23F36F4A4();
}

void sub_23F36EEAC(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_QWORD *)(a3 + 16);
  if (v5)
  {
    sub_23F61B92C();
    sub_23F3846B4();
    v13 = *(_QWORD *)(v6 + 72);
    sub_23F362CDC();
    v7 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      v8 = sub_23F383EE4();
      a1(v8);
      if (v3)
        break;
      if (v15)
      {
        if ((sub_23F3849CC() & 1) == 0)
        {
          sub_23F383E24();
          sub_23F377F3C();
          v7 = v11;
        }
        v9 = *(_QWORD *)(v7 + 16);
        if (v9 >= *(_QWORD *)(v7 + 24) >> 1)
        {
          sub_23F384594();
          sub_23F377F3C();
          v7 = v12;
        }
        *(_QWORD *)(v7 + 16) = v9 + 1;
        v10 = v7 + 16 * v9;
        *(_QWORD *)(v10 + 32) = v14;
        *(_QWORD *)(v10 + 40) = v15;
      }
      v4 += v13;
      if (!--v5)
      {
        sub_23F38443C();
        goto LABEL_14;
      }
    }
    sub_23F384120();
    sub_23F38443C();
  }
LABEL_14:
  sub_23F383F58();
}

void sub_23F36EFE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  void (*v24)(_QWORD);
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  BOOL v43;
  char v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  void (*v56)(uint64_t, uint64_t, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(_QWORD);
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  int64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  sub_23F362C98();
  a19 = v25;
  a20 = v26;
  sub_23F384574();
  v65 = v27;
  sub_23F35D2E8(v27);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v28);
  v29 = sub_23F383A54();
  v30 = v22(v29);
  v70 = *(_QWORD *)(v30 - 8);
  v71 = v30;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v31);
  sub_23F3834D0();
  v69 = v32;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v33);
  sub_23F383780();
  v63 = v34;
  v67 = v21 + 56;
  sub_23F3839E4();
  v37 = v36 & v35;
  v68 = (unint64_t)(v38 + 63) >> 6;
  sub_23F362CDC();
  v39 = 0;
  v40 = MEMORY[0x24BEE4AF8];
  v66 = v21;
  v64 = v24;
  while (1)
  {
    if (v37)
    {
      v41 = __clz(__rbit64(v37));
      v37 &= v37 - 1;
      v42 = v41 | (v39 << 6);
      goto LABEL_21;
    }
    v43 = __OFADD__(v39++, 1);
    if (v43)
    {
      __break(1u);
      goto LABEL_38;
    }
    if (v39 >= v68)
      goto LABEL_35;
    if (!*(_QWORD *)(v67 + 8 * v39))
      break;
LABEL_20:
    sub_23F3844C0();
    v37 = v51 & v50;
    v42 = v52 + (v39 << 6);
LABEL_21:
    a10 = *(_QWORD *)(*(_QWORD *)(v21 + 48) + 8 * v42);
    sub_23F384B00();
    v24(&a10);
    if (v20)
    {
      swift_bridgeObjectRelease();
      sub_23F38496C();
      swift_bridgeObjectRelease();
LABEL_36:
      sub_23F383A78();
      sub_23F362870();
      return;
    }
    swift_bridgeObjectRelease();
    v53 = sub_23F3842D8();
    sub_23F383740(v53, v54, v71);
    if (v55)
    {
      sub_23F3625D8(v23, v65);
    }
    else
    {
      v56 = *(void (**)(uint64_t, uint64_t, uint64_t))(v70 + 32);
      v56(v63, v23, v71);
      v56(v69, v63, v71);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_23F38463C();
        v40 = v61;
      }
      v58 = *(_QWORD *)(v40 + 16);
      if (v58 >= *(_QWORD *)(v40 + 24) >> 1)
      {
        sub_23F38463C();
        v40 = v62;
      }
      *(_QWORD *)(v40 + 16) = v58 + 1;
      sub_23F383E04();
      ((void (*)(unint64_t))v56)(v40 + v59 + *(_QWORD *)(v60 + 72) * v58);
      v21 = v66;
      v24 = v64;
    }
  }
  sub_23F384A20();
  if (v44 == v43)
    goto LABEL_35;
  sub_23F3848B4();
  if (v46)
    goto LABEL_19;
  sub_23F384A20();
  if (v44 == v43)
    goto LABEL_35;
  sub_23F3848B4();
  if (v47)
    goto LABEL_19;
  sub_23F384A20();
  if (v44 == v43)
    goto LABEL_35;
  sub_23F3848B4();
  if (v48)
    goto LABEL_19;
  sub_23F384A20();
  if (v44 == v43)
  {
LABEL_35:
    sub_23F38496C();
    goto LABEL_36;
  }
  sub_23F3848B4();
  if (v49)
  {
LABEL_19:
    v39 = v45;
    goto LABEL_20;
  }
  while (1)
  {
    v39 = v45 + 1;
    if (__OFADD__(v45, 1))
      break;
    if (v39 >= v68)
      goto LABEL_35;
    ++v45;
    if (*(_QWORD *)(v67 + 8 * v39))
      goto LABEL_20;
  }
LABEL_38:
  __break(1u);
}

void sub_23F36F290(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  void (*v21)(uint64_t *__return_ptr, uint64_t);

  v21 = a1;
  v5 = *(_QWORD *)(a4 + 16);
  if (v5)
  {
    sub_23F6191A8();
    sub_23F383D14();
    v8 = a4 + v7;
    v10 = *(_QWORD *)(v9 + 72);
    swift_retain();
    swift_retain();
    v11 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      v21(&v19, v8);
      if (v4)
        break;
      if ((_QWORD)v20)
      {
        v18 = v20;
        v12 = v19;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F384A9C();
          sub_23F377454();
          v11 = v16;
        }
        v13 = *(_QWORD *)(v11 + 16);
        v14 = v18;
        if (v13 >= *(_QWORD *)(v11 + 24) >> 1)
        {
          sub_23F384A9C();
          sub_23F377454();
          v14 = v18;
          v11 = v17;
        }
        *(_QWORD *)(v11 + 16) = v13 + 1;
        v15 = v11 + 24 * v13;
        *(_QWORD *)(v15 + 32) = v12;
        *(_OWORD *)(v15 + 40) = v14;
      }
      v8 += v10;
      if (!--v5)
      {
        swift_release();
        swift_release();
        goto LABEL_14;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
LABEL_14:
  sub_23F383EE4();
  sub_23F383628();
}

void sub_23F36F420()
{
  sub_23F36F970();
}

void sub_23F36F454(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  sub_23F36F6A4(a1, a2, a3, (void (*)(_QWORD))MEMORY[0x24BEB9AB8]);
}

void sub_23F36F470()
{
  sub_23F36F4A4();
}

void sub_23F36F4A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(_QWORD);
  void (*v4)(_QWORD);
  uint64_t (*v5)(uint64_t);
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(_QWORD);
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[4];
  uint64_t v42;
  void (*v43)(_QWORD);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_23F362C98();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = (void (*)(_QWORD))v9;
  sub_23F3849B0(v9, v11, v7, v12);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v13);
  v14 = sub_23F383A54();
  v41[2] = v6;
  v15 = v6(v14);
  v46 = *(_QWORD *)(v15 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v16);
  v45 = (uint64_t)v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F383780();
  v44 = v19;
  v20 = *(_QWORD *)(v8 + 16);
  if (v20)
  {
    v41[1] = v2;
    v4(0);
    sub_23F383D14();
    v21 = v8;
    v23 = v8 + v22;
    v25 = *(_QWORD *)(v24 + 72);
    v41[3] = v21;
    sub_23F617BA0();
    v26 = MEMORY[0x24BEE4AF8];
    v42 = v15;
    v43 = v10;
    while (1)
    {
      v10(v23);
      if (v0)
        break;
      v27 = sub_23F3842D8();
      sub_23F383740(v27, v28, v15);
      if (v29)
      {
        sub_23F384A08();
      }
      else
      {
        v30 = v44;
        v31 = sub_23F384690();
        sub_23F3847A0(v31, v32);
        sub_23F3847A0(v45, v30);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_23F38462C();
          v26 = v39;
        }
        v34 = *(_QWORD *)(v26 + 16);
        if (v34 >= *(_QWORD *)(v26 + 24) >> 1)
        {
          sub_23F38462C();
          v26 = v40;
        }
        *(_QWORD *)(v26 + 16) = v34 + 1;
        sub_23F383E04();
        v37 = v26 + v35 + *(_QWORD *)(v36 + 72) * v34;
        v15 = v42;
        sub_23F3847A0(v37, v38);
        v10 = v43;
      }
      v23 += v25;
      if (!--v20)
      {
        sub_23F384410();
        goto LABEL_16;
      }
    }
    swift_bridgeObjectRelease();
    sub_23F384410();
  }
LABEL_16:
  sub_23F383A78();
  sub_23F362870();
}

void sub_23F36F688(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  sub_23F36F6A4(a1, a2, a3, (void (*)(_QWORD))MEMORY[0x24BE578B8]);
}

void sub_23F36F6A4(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  v6 = *(_QWORD *)(a3 + 16);
  if (v6)
  {
    a4(0);
    sub_23F3846B4();
    v8 = *(_QWORD *)(v7 + 72);
    sub_23F362CDC();
    v9 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      v10 = sub_23F383EE4();
      a1(v10);
      if (v4)
        break;
      if ((_QWORD)v17)
      {
        if ((sub_23F3849CC() & 1) == 0)
        {
          sub_23F383E24();
          sub_23F377454();
          v9 = v14;
        }
        v11 = *(_QWORD *)(v9 + 16);
        v12 = v17;
        if (v11 >= *(_QWORD *)(v9 + 24) >> 1)
        {
          sub_23F384594();
          sub_23F377454();
          v12 = v17;
          v9 = v15;
        }
        *(_QWORD *)(v9 + 16) = v11 + 1;
        v13 = v9 + 24 * v11;
        *(_QWORD *)(v13 + 32) = v16;
        *(_OWORD *)(v13 + 40) = v12;
      }
      v5 += v8;
      if (!--v6)
      {
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
    }
    sub_23F384120();
    swift_bridgeObjectRelease();
  }
LABEL_14:
  sub_23F383628();
}

void sub_23F36F7F4(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = *(_QWORD *)(a3 + 16);
  if (v4)
  {
    sub_23F384B44();
    sub_23F383D14();
    v7 = a3 + v6;
    v17 = *(_QWORD *)(v8 + 72);
    sub_23F383738();
    v9 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      a1(&v19, v7);
      if (v3)
        break;
      v10 = v20;
      if (v20)
      {
        v11 = v19;
        v12 = v22;
        v23 = v21;
        if ((sub_23F3849CC() & 1) == 0)
        {
          sub_23F383E24();
          sub_23F3775B4();
          v9 = v15;
        }
        v13 = *(_QWORD *)(v9 + 16);
        if (v13 >= *(_QWORD *)(v9 + 24) >> 1)
        {
          sub_23F384594();
          sub_23F3775B4();
          v9 = v16;
        }
        *(_QWORD *)(v9 + 16) = v13 + 1;
        v14 = (_QWORD *)(v9 + 32 * v13);
        v14[4] = v11;
        v14[5] = v10;
        v14[6] = v23;
        v14[7] = v12;
      }
      v7 += v17;
      if (!--v4)
      {
        sub_23F38443C();
        goto LABEL_14;
      }
    }
    sub_23F384120();
    sub_23F38443C();
  }
LABEL_14:
  sub_23F383628();
}

void sub_23F36F93C()
{
  sub_23F36F970();
}

void sub_23F36F970()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  void (*v4)(_QWORD);
  uint64_t v5;
  uint64_t v6;
  void (*v7)(_QWORD);
  void (*v8)(_QWORD);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[2];
  void (*v36)(_QWORD);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(_QWORD);

  sub_23F362C98();
  v6 = v5;
  v8 = v7;
  sub_23F384574();
  sub_23F3849B0(v9, v10, v11, v12);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v13);
  v14 = sub_23F383A54();
  v41 = v2;
  v40 = v2(v14);
  v38 = *(_QWORD *)(v40 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v15);
  v39 = (uint64_t)v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F383780();
  v37 = v18;
  v19 = *(_QWORD *)(v1 + 16);
  if (v19)
  {
    v35[0] = v6;
    v8(0);
    sub_23F383D14();
    v21 = v1 + v20;
    v23 = *(_QWORD *)(v22 + 72);
    v35[1] = v1;
    sub_23F362CDC();
    v24 = MEMORY[0x24BEE4AF8];
    v36 = v4;
    while (1)
    {
      v4(v21);
      if (v0)
        break;
      v25 = sub_23F3842D8();
      sub_23F383740(v25, v26, v40);
      if (v27)
      {
        sub_23F384A08();
      }
      else
      {
        v28 = v37;
        sub_23F36262C(v3, v37, v41);
        sub_23F36262C(v28, v39, v41);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_23F384334();
          v24 = v33;
        }
        v30 = *(_QWORD *)(v24 + 16);
        if (v30 >= *(_QWORD *)(v24 + 24) >> 1)
        {
          sub_23F384334();
          v24 = v34;
        }
        *(_QWORD *)(v24 + 16) = v30 + 1;
        sub_23F383E04();
        sub_23F36262C(v39, v24 + v31 + *(_QWORD *)(v32 + 72) * v30, v41);
        v4 = v36;
      }
      v21 += v23;
      if (!--v19)
      {
        sub_23F384410();
        goto LABEL_16;
      }
    }
    swift_bridgeObjectRelease();
    sub_23F384410();
  }
LABEL_16:
  sub_23F383A78();
  sub_23F362870();
}

void sub_23F36FB40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(_QWORD);
  void (*v5)(_QWORD);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(_QWORD);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_23F362C98();
  v3 = v2;
  v5 = v4;
  sub_23F35D2E8(&qword_256E700A0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F383EC4();
  v26 = sub_23F618C20();
  v28 = *(_QWORD *)(v26 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F3834D0();
  v27 = v8;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F383780();
  v25 = v10;
  v11 = *(_QWORD *)(v3 + 16);
  if (v11)
  {
    v12 = v3 + 32;
    sub_23F383E5C();
    v13 = MEMORY[0x24BEE4AF8];
    v24 = v5;
    v14 = v26;
    while (1)
    {
      v5(v12);
      if (v0)
        break;
      sub_23F383740(v1, 1, v14);
      if (v15)
      {
        sub_23F3625D8(v1, &qword_256E700A0);
      }
      else
      {
        v16 = *(void (**)(uint64_t))(v28 + 32);
        v17 = sub_23F38461C();
        v16(v17);
        ((void (*)(uint64_t, uint64_t, uint64_t))v16)(v27, v25, v14);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_23F3845E4();
          sub_23F376F10();
          v13 = v22;
        }
        v19 = *(_QWORD *)(v13 + 16);
        if (v19 >= *(_QWORD *)(v13 + 24) >> 1)
        {
          sub_23F376F10();
          v13 = v23;
        }
        *(_QWORD *)(v13 + 16) = v19 + 1;
        sub_23F384418();
        v14 = v26;
        ((void (*)(unint64_t, uint64_t, uint64_t))v16)(v20 + v21 * v19, v27, v26);
        v5 = v24;
      }
      v12 += 40;
      if (!--v11)
      {
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_16:
  sub_23F383A78();
  sub_23F362870();
}

uint64_t sub_23F36FD2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23F3702E0(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE577B0], a2);
}

uint64_t sub_23F36FD38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23F3702E0(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BEB9A18], a2);
}

uint64_t sub_23F36FD44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23F3702E0(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BEBA368], a2);
}

void sub_23F36FD50(uint64_t a1)
{
  int v2;
  char v3;
  uint64_t v4;
  int v5;
  char v6;

  sub_23F3C0378();
  if ((v3 & 1) != 0)
    goto LABEL_7;
  if (*(_DWORD *)(a1 + 36) != v2)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return;
  }
  sub_23F383E6C();
  if (!v6)
    sub_23F3823CC(v4, v5, 0, a1);
  sub_23F362928();
}

uint64_t sub_23F36FDA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23F3702E0(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE557B8], a2);
}

uint64_t sub_23F36FDB0()
{
  return sub_23F370020();
}

void sub_23F36FDBC(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (a1[2])
  {
    v2 = a1[5];
    v3 = a1[6];
    v4 = a1[7];
    *a2 = a1[4];
    a2[1] = v2;
    a2[2] = v3;
    a2[3] = v4;
    swift_retain();
    sub_23F383738();
    sub_23F362AEC();
  }
  else
  {
    *(_OWORD *)a2 = 0u;
    *((_OWORD *)a2 + 1) = 0u;
    sub_23F362928();
  }
}

uint64_t sub_23F36FE08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23F3702E0(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE573C8], a2);
}

uint64_t sub_23F36FE14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23F3702E0(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE52DE0], a2);
}

double sub_23F36FE20@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  if (*(_QWORD *)(a1 + 16))
  {
    sub_23F382FC4(a1 + 32, a2);
  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_23F36FE58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23F3702E0(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE55EE8], a2);
}

double sub_23F36FE64@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  double result;

  if (*(_QWORD *)(a1 + 16))
  {
    sub_23F382B64(a1 + 32, (uint64_t)a2);
  }
  else
  {
    result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_23F36FE84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23F36FE98(a1, (uint64_t (*)(void))sub_23F3C0378, a2);
}

uint64_t sub_23F36FE98@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t result;
  int v6;
  char v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  result = a2();
  if ((v7 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v6)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  sub_23F383E6C();
  if (v9)
  {
    v10 = 1;
  }
  else
  {
    sub_23F382420(v8, a3);
    v10 = 0;
  }
  v11 = sub_23F3846D4();
  return sub_23F38370C(a3, v10, 1, v11);
}

void sub_23F36FF18()
{
  sub_23F3700A0();
}

uint64_t sub_23F36FF2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23F3702E0(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE55DB0], a2);
}

uint64_t sub_23F36FF38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23F3702E0(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BEB8288], a2);
}

uint64_t sub_23F36FF44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23F3702E0(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE567C0], a2);
}

void sub_23F36FF50(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (a1[2])
  {
    v2 = a1[5];
    v3 = a1[6];
    *a2 = a1[4];
    a2[1] = v2;
    a2[2] = v3;
    swift_retain();
    sub_23F362AEC();
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
    sub_23F362928();
  }
}

uint64_t sub_23F36FF98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23F3702E0(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE55288], a2);
}

uint64_t sub_23F36FFA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23F3702E0(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE53BB8], a2);
}

uint64_t sub_23F36FFB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23F3702E0(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE562C8], a2);
}

void sub_23F36FFBC(uint64_t a1)
{
  int v2;
  char v3;
  uint64_t v4;
  int v5;
  char v6;

  sub_23F3C0378(a1);
  if ((v3 & 1) != 0)
    goto LABEL_7;
  if (*(_DWORD *)(a1 + 36) != v2)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return;
  }
  sub_23F383E6C();
  if (!v6)
    sub_23F3824A4(v4, v5, 0, a1);
  sub_23F362928();
}

uint64_t sub_23F370014()
{
  return sub_23F370020();
}

uint64_t sub_23F370020()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_23F384780();
  v3 = v2;
  v5 = *(_QWORD *)(v4 + 16);
  sub_23F3846F4(v4, v6);
  if (v5)
  {
    sub_23F383EB8();
    sub_23F362600(v1 + v7, v3, v0);
  }
  v8 = sub_23F38464C();
  return sub_23F38359C(v8, v9, v10, v11);
}

uint64_t sub_23F370080@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23F3702E0(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BEB9D20], a2);
}

void sub_23F37008C()
{
  sub_23F3700A0();
}

void sub_23F3700A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t);
  uint64_t v18;
  uint64_t *v19;

  sub_23F383988();
  v2 = v1;
  v4 = v3;
  v6 = sub_23F35D2E8(v5);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F362930();
  v8 = sub_23F382520(v2);
  if ((v10 & 1) != 0)
    goto LABEL_7;
  if (*(_DWORD *)(v2 + 36) != v9)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return;
  }
  if (v8 == 1 << *(_BYTE *)(v2 + 32))
  {
    sub_23F3837C8();
    sub_23F36196C(v11, v12, v13, v6);
  }
  else
  {
    sub_23F382A80((uint64_t)v0 + *(int *)(v6 + 48), v8);
    *v0 = v14;
    v0[1] = v15;
    *v4 = v14;
    v4[1] = v15;
    sub_23F3843B0();
    v16 = sub_23F38436C();
    v17(v16);
    sub_23F383EB0();
    v18 = sub_23F3848CC();
    sub_23F3625D8(v18, v19);
    sub_23F36196C((uint64_t)v4, 0, 1, v6);
    sub_23F383568();
  }
}

uint64_t sub_23F3701C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23F3702E0(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE69080], a2);
}

uint64_t sub_23F3701D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23F3702E0(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BEB8FE0], a2);
}

uint64_t sub_23F3701DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a1 + 16);
  sub_23F35D2E8(&qword_256E6FF50);
  if (v4)
  {
    sub_23F383EB8();
    sub_23F382EF8(a1 + v5, a2, &qword_256E6FF50);
  }
  v6 = sub_23F38464C();
  return sub_23F38370C(v6, v7, v8, v9);
}

uint64_t sub_23F370244@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  int v5;
  char v6;
  uint64_t v7;
  int v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  result = sub_23F382CB8(a1);
  if ((v6 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v5)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  sub_23F383E6C();
  if (v9)
  {
    v10 = 1;
  }
  else
  {
    sub_23F382C20(v7, v8, a1, a2);
    v10 = 0;
  }
  v11 = sub_23F384B3C();
  return sub_23F36196C(a2, v10, 1, v11);
}

uint64_t sub_23F3702BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23F3702E0(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE555E0], a2);
}

uint64_t sub_23F3702C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23F3702E0(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE56488], a2);
}

uint64_t sub_23F3702D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23F3702E0(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE57AF0], a2);
}

uint64_t sub_23F3702E0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = sub_23F3846F4(a1, a2);
  if (v5)
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a3, a1+ ((*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80)), v6);
  v7 = sub_23F38464C();
  return sub_23F38370C(v7, v8, v9, v10);
}

void sub_23F370344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(_QWORD, _QWORD, _QWORD);
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t (*v83)(uint64_t, uint64_t, uint64_t);
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  void (*v91)(_QWORD, _QWORD, _QWORD);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  void (*v101)(uint64_t);
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void (*v123)(uint64_t, uint64_t, uint64_t);
  void (*v124)(uint64_t, uint64_t, uint64_t);
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void (*v138)(_BYTE *, _QWORD);
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t inited;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char v156;
  char v157;
  void (*v158)(_BYTE *, _QWORD);
  _QWORD *v159;
  _QWORD *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  void (*v169)(uint64_t, uint64_t, uint64_t);
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  int v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t *v200;
  _BYTE v201[32];
  uint64_t v202;

  sub_23F362ABC();
  a19 = v21;
  a20 = v22;
  v175 = v23;
  v174 = v24;
  v192 = v25;
  v181 = v26;
  v27 = sub_23F366770();
  sub_23F383E7C(v27, (uint64_t)&a11);
  v179 = v28;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F36285C();
  v180 = v30;
  sub_23F384040();
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v31);
  sub_23F36285C();
  v33 = sub_23F384514(v32);
  sub_23F383E7C(v33, (uint64_t)&v197);
  v164 = v34;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v35);
  sub_23F36285C();
  v166 = v36;
  v37 = sub_23F61B140();
  sub_23F383E7C(v37, (uint64_t)&v202);
  v176 = v38;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v39);
  sub_23F36285C();
  v177 = sub_23F384524(v40);
  v41 = *(_QWORD *)(v177 - 8);
  MEMORY[0x24BDAC7A8](v177);
  v163 = (uint64_t)&v161 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v43);
  v45 = (char *)&v161 - v44;
  v199 = sub_23F3838F0();
  v188 = *(_QWORD *)(v199 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v46);
  sub_23F3834D0();
  v182 = v47;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v48);
  sub_23F383780();
  v162 = v49;
  v50 = sub_23F384048();
  v51 = *(_QWORD *)(v50 - 8);
  v52 = *(_QWORD *)(v51 + 64);
  MEMORY[0x24BDAC7A8](v50);
  sub_23F384990((uint64_t)&v161 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v53);
  sub_23F383780();
  v193 = v54;
  v56 = MEMORY[0x24BDAC7A8](v55);
  v58 = (char *)&v161 - v57;
  v59 = MEMORY[0x24BDAC7A8](v56);
  v61 = (char *)&v161 - v60;
  MEMORY[0x24BDAC7A8](v59);
  v63 = (char *)&v161 - v62;
  sub_23F35D2E8(&qword_256E6FB08);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v64);
  sub_23F3834D0();
  v173 = v65;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v66);
  sub_23F3838E4();
  v189 = v67;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v68);
  sub_23F3838E4();
  v168 = v69;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v70);
  sub_23F3838E4();
  v186 = v71;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v72);
  sub_23F3838E4();
  v196 = v73;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v74);
  sub_23F3838E4();
  v171 = v75;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v76);
  sub_23F383780();
  v191 = v77;
  v184 = v20;
  v78 = sub_23F61A9CC();
  v79 = *(void (**)(_QWORD, _QWORD, _QWORD))(v51 + 16);
  sub_23F384848((uint64_t)v63, v192);
  v185 = (uint64_t)v61;
  sub_23F384848((uint64_t)v61, (uint64_t)v63);
  v198 = (uint64_t)v58;
  sub_23F384848((uint64_t)v58, (uint64_t)v63);
  v80 = (*(unsigned __int8 *)(v51 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  v170 = swift_allocObject();
  v81 = v170 + v80;
  v82 = v78;
  v187 = v51;
  v83 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 32);
  v194 = v50;
  sub_23F384840(v81, (uint64_t)v63, v83);
  v84 = sub_23F3C0378(v78);
  if ((v86 & 1) == 0)
  {
    v52 = v84;
    v51 = v85;
    v63 = 0;
    v197 = v78 + 56;
    v87 = v196;
    while (1)
    {
      LODWORD(v50) = *(_DWORD *)(v82 + 36);
      if ((_DWORD)v50 != (_DWORD)v51)
        break;
      sub_23F384944();
      if (v90)
        goto LABEL_11;
      if (v52 < 0 || v52 >= v89)
        goto LABEL_26;
      if (((*(_QWORD *)(v197 + (((unint64_t)v52 >> 3) & 0xFFFFFFFFFFFFF8)) >> v52) & 1) == 0)
        goto LABEL_27;
      v195 = v50;
      v91 = v79;
      v50 = (uint64_t)v45;
      v92 = v41;
      v200 = &v161;
      v93 = *(_QWORD *)(*(_QWORD *)(v82 + 48) + 8 * v52);
      MEMORY[0x24BDAC7A8](v88);
      *(&v161 - 2) = v198;
      sub_23F383EB0();
      sub_23F374ED4((uint64_t (*)(char *))sub_23F382EDC, v93, v87);
      sub_23F384120();
      v94 = sub_23F3842D8();
      v97 = sub_23F36195C(v94, v95, v96);
      sub_23F3625D8(v87, &qword_256E6FB08);
      if (v97 != 1)
      {
        v41 = v92;
        v45 = (char *)v50;
        v79 = v91;
        v102 = v186;
        LODWORD(v50) = v195;
        goto LABEL_13;
      }
      v52 = sub_23F3C0290(v52, v51, 0, v82);
      v51 = v98;
      v41 = v92;
      v45 = (char *)v50;
      v79 = v91;
      if ((v99 & 1) != 0)
        goto LABEL_10;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
LABEL_10:
  v100 = sub_23F3844A8();
  v101(v100);
  __break(1u);
LABEL_11:
  v102 = v186;
LABEL_13:
  v103 = sub_23F3844A8();
  v200 = v104;
  ((void (*)(uint64_t))v104)(v103);
  if (*(_DWORD *)(v82 + 36) != (_DWORD)v50)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    return;
  }
  sub_23F384944();
  v169 = v79;
  if (v90)
  {
    v105 = (uint64_t)v45;
    v106 = v194;
    sub_23F3844F0();
    v107 = 1;
    v108 = v171;
  }
  else
  {
    v109 = sub_23F3823CC(v52, v51, 0, v82);
    MEMORY[0x24BDAC7A8](v109);
    *(&v161 - 2) = v185;
    sub_23F374ED4((uint64_t (*)(char *))sub_23F3830AC, v109, v102);
    sub_23F3844F0();
    sub_23F362D18();
    v110 = v168;
    sub_23F382EF8(v102, v168, &qword_256E6FB08);
    sub_23F383740(v110, 1, v199);
    if (v90)
      goto LABEL_29;
    v105 = (uint64_t)v45;
    v111 = v162;
    v112 = sub_23F384220();
    sub_23F384614(v112, v113);
    sub_23F3625D8(v102, &qword_256E6FB08);
    v108 = v171;
    sub_23F384614(v171, v111);
    v107 = 0;
    v106 = v194;
  }
  v114 = v199;
  sub_23F36196C(v108, v107, 1, v199);
  swift_release();
  v115 = sub_23F38432C();
  MEMORY[0x24BDAC7A8](v115);
  v116 = v174;
  *(&v161 - 2) = v174;
  v117 = v191;
  sub_23F446BC0((void (*)(uint64_t))sub_23F382F24, v191);
  v198 = (uint64_t)v63;
  v118 = sub_23F3840BC();
  sub_23F3625D8(v118, v119);
  v120 = v189;
  sub_23F382EF8(v117, v189, &qword_256E6FB08);
  v121 = v106;
  v122 = v106;
  v123 = v169;
  v169(v193, v192, v121);
  v124 = *(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16);
  v125 = v116;
  v126 = v120;
  v127 = v177;
  v124(v105, v125, v177);
  v128 = v176;
  v129 = v178;
  sub_23F384918(v190, v175, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v176 + 16));
  sub_23F383740(v126, 1, v114);
  if (v90)
  {
    v123(v172, v193, v122);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v164 + 104))(v166, *MEMORY[0x24BE56E50], v165);
    v124(v163, v105, v127);
    v130 = v190;
    v122 = v41;
    v131 = v128;
    sub_23F61B134();
    sub_23F384884();
    sub_23F366748();
    v132 = v182;
    sub_23F61B3D4();
    sub_23F362A28(v130, *(uint64_t (**)(uint64_t, uint64_t))(v131 + 8));
    v133 = v105;
    v135 = v132;
    sub_23F383F80(v133, *(uint64_t (**)(uint64_t, uint64_t))(v122 + 8));
    sub_23F3844F0();
    sub_23F3625D8(v189, &qword_256E6FB08);
    sub_23F3841A8();
    v134 = v188;
  }
  else
  {
    sub_23F362A28(v190, *(uint64_t (**)(uint64_t, uint64_t))(v128 + 8));
    sub_23F383F80(v105, *(uint64_t (**)(uint64_t, uint64_t))(v41 + 8));
    sub_23F3844F0();
    v134 = v188;
    v135 = v182;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v188 + 32))(v182, v126, v199);
    sub_23F3841A8();
  }
  v137 = v181;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v136 + 16))(v129, v181, v183);
  sub_23F383F00(v122, v135, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v134 + 16));
  sub_23F383CC4(v122, 0);
  v138 = (void (*)(_BYTE *, _QWORD))sub_23F61A99C();
  sub_23F37261C(v122, v129, v139, v140, v141, v142, v143, v144, v161, v162, v163, v164, v165, v166, v167, v168, (uint64_t)v169, v170);
  v138(v201, 0);
  v145 = sub_23F61A9CC();
  MEMORY[0x24BDAC7A8](v145);
  *(&v161 - 2) = v137;
  v146 = MEMORY[0x24BEE4B08];
  sub_23F51C95C(MEMORY[0x24BEE4B08], (void (*)(uint64_t *, uint64_t *))sub_23F382F40, (uint64_t)(&v161 - 4), v145);
  sub_23F362984();
  sub_23F61A9D8();
  sub_23F61A9CC();
  sub_23F35D2E8(&qword_256E703A8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23F61E7E0;
  sub_23F3612C0((unint64_t *)&qword_256E6FA98, (uint64_t (*)(uint64_t))MEMORY[0x24BE55070], MEMORY[0x24BE55080]);
  *(_QWORD *)(inited + 32) = sub_23F61BFEC();
  sub_23F3E3A44(inited);
  v148 = sub_23F38422C();
  sub_23F35DD48(v148, v149, v150, v151, v152, v153, v154, v155, v161, v162, v163);
  v157 = v156;
  sub_23F362984();
  sub_23F362D08();
  if ((v157 & 1) != 0)
  {
    v158 = (void (*)(_BYTE *, _QWORD))sub_23F61A9C0();
    v160 = v159;
    swift_bridgeObjectRelease();
    *v160 = v146;
    v158(v201, 0);
  }
  (*(void (**)(uint64_t, uint64_t))(v134 + 8))(v135, v199);
  sub_23F3625D8(v191, &qword_256E6FB08);
  sub_23F362948();
}

uint64_t sub_23F370D88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *v3;
  void *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  int64_t v63;
  unint64_t v64;
  unint64_t v65;
  char *v66;
  BOOL v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t result;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  NSObject *v106;
  os_log_type_t v107;
  uint8_t *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t *v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  unint64_t v123;
  int64_t v124;
  unint64_t v125;
  int64_t v126;
  int64_t v127;
  uint64_t v128;
  uint64_t *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  void (*v137)(void);
  uint64_t v138;
  uint64_t *v139;
  uint64_t v140;
  uint64_t *v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t *v146;
  char *v147;
  uint64_t v148;
  char *v149;
  void (*v150)(char *, uint64_t);
  uint64_t v151;
  void (*v152)(char *, uint64_t);
  uint64_t *v153;
  char *v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  int v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  void (*v169)(char *, char *, uint64_t);
  uint64_t v170;
  uint64_t v171;
  char v172;
  unint64_t v173;
  char v174;
  uint64_t v175;
  char v176;
  _QWORD *v177;
  _QWORD *v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  void (**v202)(char *, uint64_t);
  uint64_t v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  int64_t v207;
  uint64_t v208;
  uint64_t v209;
  char *v210;
  char *v211;
  uint64_t *v212;
  uint64_t *v213;
  uint64_t *v214;
  uint64_t v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  _QWORD *v223;
  char *v224;
  uint64_t v225;
  uint64_t *v226;
  char *v227;
  uint64_t v228;
  char *v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  int64_t v233;
  uint64_t v234;
  char *v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239[4];
  _QWORD v240[8];

  v4 = v3;
  v198 = a3;
  v209 = sub_23F61AA14();
  v208 = *(_QWORD *)(v209 - 8);
  MEMORY[0x24BDAC7A8](v209);
  v201 = (char *)&v182 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v203 = sub_23F619E98();
  v202 = *(void (***)(char *, uint64_t))(v203 - 8);
  MEMORY[0x24BDAC7A8](v203);
  v210 = (char *)&v182 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F35D2E8(&qword_256E6FAE0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v223 = (uint64_t *)((char *)&v182 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v10);
  v222 = (uint64_t)&v182 - v12;
  v221 = sub_23F61B3A4();
  v220 = *(_QWORD *)(v221 - 8);
  v13 = MEMORY[0x24BDAC7A8](v221);
  v219 = (char *)&v182 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v230 = (char *)&v182 - v15;
  v218 = sub_23F61A7E0();
  v217 = *(_QWORD *)(v218 - 8);
  MEMORY[0x24BDAC7A8](v218);
  v229 = (char *)&v182 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v231 = sub_23F61B080();
  v228 = *(_QWORD *)(v231 - 8);
  v17 = MEMORY[0x24BDAC7A8](v231);
  v227 = (char *)&v182 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v216 = (char *)&v182 - v19;
  v215 = sub_23F35D2E8(&qword_256E6FAE8);
  v20 = MEMORY[0x24BDAC7A8](v215);
  v214 = (uint64_t *)((char *)&v182 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = MEMORY[0x24BDAC7A8](v20);
  v213 = (uint64_t *)((char *)&v182 - v23);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v212 = (uint64_t *)((char *)&v182 - v25);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v226 = (uint64_t *)((char *)&v182 - v27);
  MEMORY[0x24BDAC7A8](v26);
  v211 = (char *)&v182 - v28;
  v29 = sub_23F35D2E8(&qword_256E6FAD8);
  MEMORY[0x24BDAC7A8](v29);
  v189 = (uint64_t)&v182 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v186 = sub_23F61B980();
  v185 = *(_QWORD *)(v186 - 8);
  MEMORY[0x24BDAC7A8](v186);
  v188 = (uint64_t)&v182 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_23F35D2E8(&qword_256E70238);
  MEMORY[0x24BDAC7A8](v32);
  v204 = (char *)&v182 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v206 = sub_23F61B5D8();
  v34 = *(_QWORD *)(v206 - 8);
  MEMORY[0x24BDAC7A8](v206);
  v224 = (char *)&v182 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_23F617D08();
  v37 = MEMORY[0x24BDAC7A8](v36);
  v187 = (uint64_t)&v182 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = MEMORY[0x24BDAC7A8](v37);
  v41 = (char *)&v182 - v40;
  MEMORY[0x24BDAC7A8](v39);
  v200 = (uint64_t)&v182 - v42;
  v43 = sub_23F35D2E8(&qword_256E6FB18);
  MEMORY[0x24BDAC7A8](v43);
  v199 = (uint64_t)&v182 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v194 = sub_23F618134();
  v191 = *(_QWORD *)(v194 - 8);
  MEMORY[0x24BDAC7A8](v194);
  v196 = (char *)&v182 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_23F61ACA8();
  MEMORY[0x24BDAC7A8](v46);
  v197 = (char *)&v182 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_23F35D2E8(&qword_256E6FB20);
  MEMORY[0x24BDAC7A8](v48);
  v193 = (uint64_t)&v182 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v195 = sub_23F618350();
  v192 = *(_QWORD *)(v195 - 8);
  MEMORY[0x24BDAC7A8](v195);
  v190 = (uint64_t)&v182 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v207 = sub_23F61A1D4();
  v51 = *(_QWORD *)(v207 - 8);
  v52 = MEMORY[0x24BDAC7A8](v207);
  v236 = (char *)&v182 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v52);
  v235 = (char *)&v182 - v54;
  v55 = *(_QWORD *)(sub_23F61A9CC() + 16);
  swift_bridgeObjectRelease();
  v237 = a1;
  v225 = v34;
  if (v55 >= 2)
  {
    v183 = v41;
    v184 = a2;
    v56 = sub_23F61A9CC();
    sub_23F368930(v56);
    swift_bridgeObjectRelease();
    sub_23F368ECC();
    v58 = 0;
    v59 = *(_QWORD *)(v57 + 56);
    v232 = v57 + 56;
    v60 = 1 << *(_BYTE *)(v57 + 32);
    v61 = -1;
    if (v60 < 64)
      v61 = ~(-1 << v60);
    v62 = v61 & v59;
    v233 = (unint64_t)(v60 + 63) >> 6;
    v234 = v57;
    v63 = v207;
    if ((v61 & v59) == 0)
      goto LABEL_6;
LABEL_5:
    v64 = __clz(__rbit64(v62));
    v62 &= v62 - 1;
    v238 = v58;
    v65 = v64 | (v58 << 6);
    v66 = v236;
    while (1)
    {
      v71 = v235;
      (*(void (**)(char *, unint64_t, int64_t))(v51 + 16))(v235, *(_QWORD *)(v234 + 48) + *(_QWORD *)(v51 + 72) * v65, v63);
      (*(void (**)(char *, char *, int64_t))(v51 + 32))(v66, v71, v63);
      v72 = sub_23F61A9CC();
      MEMORY[0x24BDAC7A8](v72);
      v181 = v66;
      sub_23F36EFE0((uint64_t)sub_23F382E20, (uint64_t)(&v182 - 4), v72, (uint64_t)&unk_256E701F0, (uint64_t)MEMORY[0x24BEB9A18], (uint64_t)&unk_256E6FC28, v73, v74, v182, (uint64_t)v183, v184, v185, v186, v187, v188, v189, v190, v191, v192,
        v193);
      swift_bridgeObjectRelease();
      sub_23F368ECC();
      if (*(_QWORD *)(v75 + 16) >= 2uLL)
      {
        v238 = v51;
        sub_23F617BA0();
        sub_23F470F80();
        v77 = v76;
        swift_bridgeObjectRelease();
        v239[0] = v77;
        sub_23F37FBEC(v239);
        v202 = (void (**)(char *, uint64_t))v3;
        if (!v3)
        {
          swift_bridgeObjectRelease();
          sub_23F61A1C8();
          sub_23F61A1A4();
          v78 = v190;
          sub_23F618320();
          v79 = sub_23F617000();
          sub_23F36196C(v193, 1, 1, v79);
          v235 = (char *)sub_23F61AA08();
          v233 = v80;
          v81 = v192;
          v82 = v196;
          v83 = v195;
          (*(void (**)(char *, uint64_t, uint64_t))(v192 + 16))(v196, v78, v195);
          (*(void (**)(char *, _QWORD, uint64_t))(v191 + 104))(v82, *MEMORY[0x24BE53308], v194);
          v84 = sub_23F61811C();
          sub_23F36196C(v199, 1, 1, v84);
          sub_23F61AC90();
          sub_23F61B134();
          sub_23F61B17C();
          swift_release();
          sub_23F61A978();
          sub_23F61A4BC();
          (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v78, v83);
          swift_release();
          (*(void (**)(char *, int64_t))(v238 + 8))(v236, v207);
          goto LABEL_26;
        }
        goto LABEL_84;
      }
      swift_bridgeObjectRelease();
      (*(void (**)(char *, int64_t))(v51 + 8))(v66, v63);
      a1 = v237;
      v58 = v238;
      if (v62)
        goto LABEL_5;
LABEL_6:
      v67 = __OFADD__(v58, 1);
      v68 = v58 + 1;
      v66 = v236;
      if (v67)
      {
        __break(1u);
LABEL_77:
        __break(1u);
LABEL_78:
        __break(1u);
        goto LABEL_79;
      }
      if (v68 >= v233)
        goto LABEL_27;
      v69 = *(_QWORD *)(v232 + 8 * v68);
      if (!v69)
      {
        v70 = v68 + 1;
        if (v68 + 1 >= v233)
          goto LABEL_27;
        v69 = *(_QWORD *)(v232 + 8 * v70);
        if (!v69)
        {
          v70 = v68 + 2;
          if (v68 + 2 >= v233)
            goto LABEL_27;
          v69 = *(_QWORD *)(v232 + 8 * v70);
          if (!v69)
          {
            v70 = v68 + 3;
            if (v68 + 3 >= v233)
            {
LABEL_27:
              v34 = v225;
              swift_release();
              break;
            }
            v69 = *(_QWORD *)(v232 + 8 * v70);
            if (!v69)
            {
              while (1)
              {
                v68 = v70 + 1;
                if (__OFADD__(v70, 1))
                  break;
                if (v68 >= v233)
                  goto LABEL_27;
                v69 = *(_QWORD *)(v232 + 8 * v68);
                ++v70;
                if (v69)
                  goto LABEL_16;
              }
LABEL_79:
              __break(1u);
LABEL_80:
              __break(1u);
LABEL_81:
              sub_23F61CC94();
              __break(1u);
LABEL_82:
              sub_23F61CC58();
              __break(1u);
LABEL_83:
              swift_bridgeObjectRelease();
              __break(1u);
LABEL_84:
              result = swift_release();
              __break(1u);
              return result;
            }
          }
        }
        v68 = v70;
      }
LABEL_16:
      v62 = (v69 - 1) & v69;
      v238 = v68;
      v65 = __clz(__rbit64(v69)) + (v68 << 6);
    }
  }
  v86 = sub_23F61A9A8();
  v87 = sub_23F61A9CC();
  sub_23F36FD50(v87);
  v89 = v88;
  swift_bridgeObjectRelease();
  if (v89)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v239[0] = v86;
    sub_23F37FCC8(v89, (uint64_t)sub_23F47D4EC, 0, isUniquelyReferenced_nonNull_native, v239);
    if (v3)
      goto LABEL_83;
    v4 = 0;
    v86 = v239[0];
    swift_bridgeObjectRelease();
  }
  v91 = sub_23F617BA0();
  ActionResolverRequestEvaluator.coalesceCollectionParameters(parameterizedTuple:)(v91, v92, v93, v94, v95, v96, v97, v98, v182, (uint64_t)v183, v184, v185, v186, v187, v188, v189, v190, v191, v192,
    v193);
  v200 = v99;
  v199 = v86;
  swift_bridgeObjectRelease();
  sub_23F61B2FC();
  sub_23F35EA9C(v239, v239[3]);
  sub_23F61AA08();
  v100 = (uint64_t)v204;
  sub_23F61A024();
  if (v4)
  {

    swift_bridgeObjectRelease();
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v239);
    sub_23F36196C(v100, 1, 1, v206);
LABEL_34:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23F3625D8(v100, &qword_256E70238);
    v102 = v210;
    sub_23F619094();
    v103 = v208;
    v104 = v201;
    v105 = v209;
    (*(void (**)(char *, uint64_t, uint64_t))(v208 + 16))(v201, a1, v209);
    v106 = sub_23F619E8C();
    v107 = sub_23F61C61C();
    if (os_log_type_enabled(v106, v107))
    {
      v108 = (uint8_t *)swift_slowAlloc();
      v109 = swift_slowAlloc();
      v239[0] = v109;
      *(_DWORD *)v108 = 136315138;
      v110 = sub_23F61AA08();
      sub_23F37AE00(v110, v111, v239);
      v240[7] = v112;
      sub_23F61C790();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v208 + 8))(v104, v209);
      _os_log_impl(&dword_23F35A000, v106, v107, "ActionResolverRequest tool not found: %s", v108, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x242670B70](v109, -1, -1);
      MEMORY[0x242670B70](v108, -1, -1);

      v202[1](v210, v203);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v103 + 8))(v104, v105);

      v202[1](v102, v203);
    }
    type metadata accessor for InterpreterError();
    sub_23F3612C0((unint64_t *)&qword_256E6FB48, (uint64_t (*)(uint64_t))type metadata accessor for InterpreterError, (uint64_t)&protocol conformance descriptor for InterpreterError);
    swift_allocError();
    v114 = v113;
    *v113 = sub_23F61AA08();
    v114[1] = v115;
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  v101 = v206;
  sub_23F36196C(v100, 0, 1, v206);
  swift_bridgeObjectRelease();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v239);
  if (sub_23F36195C(v100, 1, v101) == 1)
    goto LABEL_34;
  v116 = v224;
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v224, v100, v101);
  v117 = v189;
  sub_23F61B578();
  v118 = v188;
  sub_23F374524(0xD00000000000009DLL, 0x800000023F6344E0, 279, 0xD000000000000042, 0x800000023F634950, &qword_256E6FAD8, (uint64_t (*)(_QWORD))MEMORY[0x24BEB9AF8]);
  v202 = 0;
  sub_23F3625D8(v117, &qword_256E6FAD8);
  v196 = (char *)sub_23F61B974();
  v195 = v119;
  (*(void (**)(uint64_t, uint64_t))(v185 + 8))(v118, v186);
  sub_23F61A978();
  v194 = sub_23F61AA08();
  v193 = v120;
  v121 = sub_23F61BFEC();
  sub_23F382390(v200, v240);
  v210 = (char *)v240[0];
  v205 = v240[1];
  v232 = v240[3];
  v122 = v240[4];
  v207 = (unint64_t)(v240[2] + 64) >> 6;
  LODWORD(v209) = *MEMORY[0x24BE55998];
  LODWORD(v208) = *MEMORY[0x24BE56E08];
  LODWORD(v204) = *MEMORY[0x24BE56E00];
  LODWORD(v201) = *MEMORY[0x24BE56E10];
  LODWORD(v197) = *MEMORY[0x24BE53150];
  LODWORD(v203) = *MEMORY[0x24BE53140];
  sub_23F617BA0();
  while (1)
  {
    v236 = (char *)v121;
    if (v122)
    {
      v234 = (v122 - 1) & v122;
      v123 = __clz(__rbit64(v122)) | (v232 << 6);
      goto LABEL_59;
    }
    v124 = v232 + 1;
    if (__OFADD__(v232, 1))
      goto LABEL_80;
    if (v124 >= v207)
      goto LABEL_75;
    v125 = *(_QWORD *)(v205 + 8 * v124);
    v126 = v232 + 1;
    if (!v125)
    {
      v126 = v232 + 2;
      if (v232 + 2 >= v207)
        goto LABEL_75;
      v125 = *(_QWORD *)(v205 + 8 * v126);
      if (!v125)
      {
        v126 = v232 + 3;
        if (v232 + 3 >= v207)
          goto LABEL_75;
        v125 = *(_QWORD *)(v205 + 8 * v126);
        if (!v125)
        {
          v126 = v232 + 4;
          if (v232 + 4 >= v207)
            goto LABEL_75;
          v125 = *(_QWORD *)(v205 + 8 * v126);
          if (!v125)
          {
            v126 = v232 + 5;
            if (v232 + 5 >= v207)
              goto LABEL_75;
            v125 = *(_QWORD *)(v205 + 8 * v126);
            if (!v125)
            {
              v126 = v232 + 6;
              if (v232 + 6 >= v207)
                goto LABEL_75;
              v125 = *(_QWORD *)(v205 + 8 * v126);
              if (!v125)
                break;
            }
          }
        }
      }
    }
LABEL_58:
    v234 = (v125 - 1) & v125;
    v123 = __clz(__rbit64(v125)) + (v126 << 6);
    v232 = v126;
LABEL_59:
    v128 = *((_QWORD *)v210 + 7);
    v129 = (uint64_t *)(*((_QWORD *)v210 + 6) + 16 * v123);
    v131 = *v129;
    v235 = (char *)v129[1];
    v130 = v235;
    v132 = sub_23F61B404();
    v133 = *(_QWORD **)(v132 - 8);
    v134 = v128 + v133[9] * v123;
    v135 = v215;
    v136 = v211;
    v137 = (void (*)(void))v133[2];
    ((void (*)(char *, uint64_t, uint64_t))v137)(&v211[*(int *)(v215 + 48)], v134, v132);
    *v136 = v131;
    v136[1] = v130;
    v138 = (uint64_t)v136;
    v139 = v226;
    sub_23F383004(v138, (uint64_t)v226, &qword_256E6FAE8);
    v140 = *(int *)(v135 + 48);
    v141 = v212;
    v142 = (char *)v139 + v140;
    v144 = *v139;
    v143 = (char *)v139[1];
    *v212 = *v139;
    v141[1] = (uint64_t)v143;
    v233 = (int64_t)v141 + v140;
    v137();
    v145 = *(int *)(v135 + 48);
    v146 = v213;
    v147 = (char *)v213 + v145;
    v238 = v144;
    *v213 = v144;
    v146[1] = (uint64_t)v143;
    v148 = v132;
    ((void (*)(char *, char *, uint64_t))v137)((char *)v146 + v145, v142, v132);
    sub_23F617BA0();
    v235 = v143;
    sub_23F617BA0();
    v149 = v229;
    sub_23F61B3E0();
    v150 = (void (*)(char *, uint64_t))v133[1];
    v150(v147, v148);
    (*(void (**)(char *, _QWORD, uint64_t))(v217 + 104))(v149, v209, v218);
    v151 = *(int *)(v135 + 48);
    v152 = v150;
    v153 = v214;
    v154 = (char *)v214 + v151;
    v155 = v139[1];
    *v214 = *v139;
    v153[1] = v155;
    ((void (*)(char *, char *, uint64_t))v137)(v154, v142, v148);
    v156 = v230;
    sub_23F61B3B0();
    v152(v154, v148);
    v157 = v220;
    v158 = v219;
    v159 = v221;
    (*(void (**)(char *, char *, uint64_t))(v220 + 16))(v219, v156, v221);
    v160 = (*(uint64_t (**)(char *, uint64_t))(v157 + 88))(v158, v159);
    if (v160 == (_DWORD)v208)
    {
      (*(void (**)(char *, uint64_t))(v157 + 96))(v158, v159);
      v161 = (uint64_t)v223;
      *v223 = *(_QWORD *)v158;
      v162 = sub_23F6180BC();
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v162 - 8) + 104))(v161, v203, v162);
      sub_23F36196C(v161, 0, 1, v162);
      v163 = (uint64_t)v235;
    }
    else
    {
      v161 = (uint64_t)v223;
      v163 = (uint64_t)v235;
      if (v160 == (_DWORD)v204)
      {
        v164 = sub_23F6180BC();
        v165 = v161;
        v166 = 1;
      }
      else
      {
        if (v160 != (_DWORD)v201)
          goto LABEL_82;
        v167 = sub_23F6180BC();
        (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v167 - 8) + 104))(v161, v197, v167);
        v165 = v161;
        v166 = 0;
        v164 = v167;
      }
      sub_23F36196C(v165, v166, 1, v164);
    }
    sub_23F383004(v161, v222, &qword_256E6FAE0);
    (*(void (**)(char *, uint64_t))(v157 + 8))(v230, v159);
    v168 = v216;
    sub_23F61B068();
    v169 = *(void (**)(char *, char *, uint64_t))(v228 + 32);
    v169(v227, v168, v231);
    v170 = (uint64_t)v236;
    swift_isUniquelyReferenced_nonNull_native();
    v239[0] = v170;
    v171 = sub_23F37568C(v238, v163, (uint64_t)MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t))sub_23F375BB8);
    if (__OFADD__(*(_QWORD *)(v170 + 16), (v172 & 1) == 0))
      goto LABEL_77;
    v173 = v171;
    v174 = v172;
    sub_23F35D2E8(&qword_256E6FB58);
    if ((sub_23F61CA18() & 1) != 0)
    {
      v175 = sub_23F37568C(v238, v163, (uint64_t)MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t))sub_23F375BB8);
      if ((v174 & 1) != (v176 & 1))
        goto LABEL_81;
      v173 = v175;
    }
    v177 = (_QWORD *)v239[0];
    if ((v174 & 1) != 0)
    {
      (*(void (**)(unint64_t, char *, uint64_t))(v228 + 40))(*(_QWORD *)(v239[0] + 56) + *(_QWORD *)(v228 + 72) * v173, v227, v231);
    }
    else
    {
      *(_QWORD *)(v239[0] + 8 * (v173 >> 6) + 64) |= 1 << v173;
      v178 = (_QWORD *)(v177[6] + 16 * v173);
      *v178 = v238;
      v178[1] = v163;
      v169((char *)(v177[7] + *(_QWORD *)(v228 + 72) * v173), v227, v231);
      v179 = v177[2];
      v67 = __OFADD__(v179, 1);
      v180 = v179 + 1;
      if (v67)
        goto LABEL_78;
      v177[2] = v180;
      sub_23F617BA0();
    }
    v121 = v239[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v152((char *)v233, v148);
    sub_23F3625D8((uint64_t)v226, &qword_256E6FAE8);
    v34 = v225;
    v116 = v224;
    v122 = v234;
  }
  v127 = v232 + 7;
  while (v127 < v207)
  {
    v125 = *(_QWORD *)(v205 + 8 * v127++);
    if (v125)
    {
      v126 = v127 - 1;
      goto LABEL_58;
    }
  }
LABEL_75:
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LOBYTE(v181) = sub_23F61A930() & 1;
  sub_23F61B050();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v116, v206);
LABEL_26:
  type metadata accessor for StepResolution();
  return swift_storeEnumTagMultiPayload();
}

void sub_23F372550()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  sub_23F383988();
  v4 = v3;
  v6 = v5;
  sub_23F35D2E8(&qword_256E70060);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F3842E4();
  v8 = sub_23F6188FC();
  sub_23F383DA4();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F383EC4();
  sub_23F383740(v6, 1, v8);
  if (v10)
  {
    sub_23F383838(v6);
    sub_23F37D4B4(v4, v0);
    sub_23F382D8C((uint64_t)v4);
    sub_23F383838(v0);
  }
  else
  {
    sub_23F383C64(v1, v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32));
    sub_23F37E124();
    sub_23F382D8C((uint64_t)v4);
  }
  sub_23F383568();
}

void sub_23F37261C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char v29;
  uint64_t v30;
  uint64_t v31;

  sub_23F383988();
  a17 = v20;
  a18 = v21;
  sub_23F3844F8();
  sub_23F35D2E8(&qword_256E6FB08);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&a9 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_23F3838F0();
  sub_23F383DA4();
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&a9 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F383740(v18, 1, v25);
  if (v29)
  {
    sub_23F383838(v18);
    sub_23F37D60C();
    v30 = sub_23F366770();
    sub_23F362B6C(v30);
    sub_23F383838((uint64_t)v24);
  }
  else
  {
    sub_23F383C64((uint64_t)v28, v18, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 32));
    sub_23F3849E0();
    v31 = sub_23F366770();
    sub_23F362B6C(v31);
  }
  sub_23F383568();
}

void sub_23F37271C()
{
  sub_23F372738();
}

void sub_23F372738()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  _QWORD v12[2];

  sub_23F362ABC();
  v12[1] = v2;
  v4 = v3;
  sub_23F35D2E8(v5);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F3845CC();
  v7 = sub_23F383850();
  sub_23F384A64();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v12 - v9;
  sub_23F383740(v4, 1, v7);
  if (v11)
  {
    sub_23F383838(v4);
    sub_23F37D6F4();
    sub_23F362D18();
    sub_23F383838(v1);
  }
  else
  {
    sub_23F383F00((uint64_t)v10, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 32));
    sub_23F37E484();
    sub_23F362D18();
  }
  sub_23F362948();
}

void sub_23F372824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char v28;
  uint64_t v29;
  uint64_t v30;

  sub_23F383988();
  a17 = v21;
  a18 = v22;
  sub_23F3844F8();
  sub_23F35D2E8(&qword_256E70238);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F362B98();
  v24 = sub_23F61B5D8();
  sub_23F383DA4();
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&a9 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F383740(v19, 1, v24);
  if (v28)
  {
    sub_23F383838(v19);
    sub_23F37D800(v18);
    v29 = sub_23F3846E4();
    sub_23F362B6C(v29);
    sub_23F383838(v18);
  }
  else
  {
    sub_23F383C64((uint64_t)v27, v19, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 32));
    sub_23F3849E0();
    v30 = sub_23F3846E4();
    sub_23F362B6C(v30);
  }
  sub_23F383568();
}

void sub_23F372914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;

  sub_23F383988();
  a17 = v19;
  a18 = v20;
  sub_23F3844F8();
  sub_23F35D2E8(&qword_256E6FD18);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&a9 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_23F6184B8();
  sub_23F383DA4();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F383740(v18, 1, v24);
  if (v26)
  {
    sub_23F384288();
    sub_23F37D978((uint64_t)v23);
    sub_23F383914();
    sub_23F3848FC();
  }
  else
  {
    sub_23F384244();
    sub_23F3849D4();
    sub_23F383914();
  }
  sub_23F383568();
}

void sub_23F3729F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F3844F8();
  sub_23F35D2E8(&qword_256E6FE50);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v3);
  v4 = sub_23F362B98();
  type metadata accessor for DialogValuesResolver.CollectedValue(v4);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F362930();
  sub_23F383740(v1, 1, v6);
  if (v7)
  {
    sub_23F383838(v1);
    sub_23F37DAE8(v0);
    v8 = sub_23F384048();
    sub_23F362B6C(v8);
    sub_23F383838(v0);
  }
  else
  {
    sub_23F36262C(v1, v2, type metadata accessor for DialogValuesResolver.CollectedValue);
    sub_23F3848E4();
    v9 = sub_23F384048();
    sub_23F362B6C(v9);
  }
  sub_23F383488();
}

void sub_23F372ABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD v8[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_23F382A70((_OWORD *)a1, v8);
    sub_23F384920();
    sub_23F37E254(v5, v6, v7);
    sub_23F362D18();
  }
  else
  {
    sub_23F3625D8(a1, &qword_256E6FC98);
    sub_23F37DC60(a2, a3, v8);
    sub_23F362D18();
    sub_23F3625D8((uint64_t)v8, &qword_256E6FC98);
  }
  sub_23F383F28();
}

void sub_23F372B34()
{
  sub_23F372738();
}

void sub_23F372B50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;

  sub_23F383988();
  a17 = v19;
  a18 = v20;
  sub_23F3844F8();
  sub_23F35D2E8(&qword_256E6FFA0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&a9 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_23F384040();
  sub_23F383DA4();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F383740(v18, 1, v24);
  if (v26)
  {
    sub_23F384288();
    sub_23F37DDA8((uint64_t)v23);
    sub_23F383914();
    sub_23F3848FC();
  }
  else
  {
    sub_23F384244();
    sub_23F3849D4();
    sub_23F383914();
  }
  sub_23F383568();
}

void sub_23F372C2C()
{
  sub_23F372738();
}

void sub_23F372C48()
{
  sub_23F372738();
}

void sub_23F372C64()
{
  sub_23F372738();
}

void sub_23F372C80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  sub_23F35D2E8(&qword_256E6FF90);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v4);
  v5 = sub_23F3842E4();
  type metadata accessor for QueryDecorationCacheValue(v5);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F362930();
  sub_23F383740(a1, 1, v7);
  if (v8)
  {
    sub_23F383838(a1);
    v9 = sub_23F37E028();
    sub_23F38465C(v9, type metadata accessor for QueryDecorationCacheKey);
    sub_23F383838(v1);
  }
  else
  {
    sub_23F36262C(a1, v2, type metadata accessor for QueryDecorationCacheValue);
    v10 = sub_23F3848E4();
    sub_23F38465C(v10, type metadata accessor for QueryDecorationCacheKey);
  }
  sub_23F383488();
}

void sub_23F372D54()
{
  sub_23F372738();
}

uint64_t sub_23F372D70@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  _QWORD *v43;
  unint64_t v44;
  char v45;
  unint64_t v46;
  char v47;
  unint64_t v48;
  char v49;
  _QWORD *v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t result;
  uint64_t *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  int64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t, uint64_t);
  uint64_t v74;
  _QWORD *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  void (*v80)(void);
  uint64_t v81;
  _QWORD v82[6];
  _QWORD *v83;

  v57 = a3;
  v58 = a2;
  v56 = a4;
  v77 = sub_23F61B404();
  v68 = *(_QWORD *)(v77 - 8);
  MEMORY[0x24BDAC7A8](v77);
  v78 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = type metadata accessor for ActionResolver.Parameter(0);
  v60 = *(_QWORD *)(v65 - 8);
  MEMORY[0x24BDAC7A8](v65);
  v81 = (uint64_t)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_23F35D2E8(&qword_256E6FAF8);
  v7 = MEMORY[0x24BDAC7A8](v79);
  v76 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v64 = (char *)&v56 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v74 = (uint64_t)&v56 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v63 = (char *)&v56 - v13;
  sub_23F382390(*a1, v82);
  v66 = v82[0];
  v61 = v82[1];
  v67 = v82[3];
  v14 = v82[4];
  v62 = (unint64_t)(v82[2] + 64) >> 6;
  sub_23F617BA0();
  v15 = (_QWORD *)MEMORY[0x24BEE4B00];
  v16 = v68;
  while (1)
  {
    v75 = v15;
    if (v14)
    {
      v70 = (v14 - 1) & v14;
      v17 = __clz(__rbit64(v14)) | (v67 << 6);
      goto LABEL_22;
    }
    v18 = v67 + 1;
    if (__OFADD__(v67, 1))
      goto LABEL_37;
    if (v18 >= v62)
      goto LABEL_31;
    v19 = *(_QWORD *)(v61 + 8 * v18);
    v20 = v67 + 1;
    if (!v19)
    {
      v20 = v67 + 2;
      if (v67 + 2 >= v62)
        goto LABEL_31;
      v19 = *(_QWORD *)(v61 + 8 * v20);
      if (!v19)
      {
        v20 = v67 + 3;
        if (v67 + 3 >= v62)
          goto LABEL_31;
        v19 = *(_QWORD *)(v61 + 8 * v20);
        if (!v19)
        {
          v20 = v67 + 4;
          if (v67 + 4 >= v62)
            goto LABEL_31;
          v19 = *(_QWORD *)(v61 + 8 * v20);
          if (!v19)
          {
            v20 = v67 + 5;
            if (v67 + 5 >= v62)
              goto LABEL_31;
            v19 = *(_QWORD *)(v61 + 8 * v20);
            if (!v19)
            {
              v20 = v67 + 6;
              if (v67 + 6 >= v62)
                goto LABEL_31;
              v19 = *(_QWORD *)(v61 + 8 * v20);
              if (!v19)
                break;
            }
          }
        }
      }
    }
LABEL_21:
    v70 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v20 << 6);
    v67 = v20;
LABEL_22:
    v22 = v66;
    v23 = *(_QWORD *)(v66 + 48);
    v24 = sub_23F61A1D4();
    v25 = *(_QWORD *)(v24 - 8);
    v26 = v23 + *(_QWORD *)(v25 + 72) * v17;
    v80 = *(void (**)(void))(v25 + 16);
    v27 = (uint64_t)v63;
    ((void (*)(char *, uint64_t, uint64_t))v80)(v63, v26, v24);
    v28 = *(_QWORD *)(v22 + 56);
    v71 = *(_QWORD *)(v16 + 72);
    v29 = v28 + v71 * v17;
    v30 = v79;
    v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
    v32 = v77;
    v31(v27 + *(int *)(v79 + 48), v29, v77);
    v73 = (void (*)(char *, uint64_t, uint64_t))v31;
    v33 = v74;
    sub_23F383004(v27, v74, &qword_256E6FAF8);
    v34 = *(int *)(v30 + 48);
    v35 = v64;
    v36 = &v64[v34];
    v37 = v33 + v34;
    v72 = v33 + v34;
    ((void (*)(char *, uint64_t, uint64_t))v80)(v64, v33, v24);
    v31((uint64_t)v36, v37, v32);
    v69 = v25;
    v38 = v81;
    (*(void (**)(uint64_t, char *, uint64_t))(v25 + 32))(v81, v35, v24);
    v39 = v65;
    *(_BYTE *)(v38 + *(int *)(v65 + 20)) = 0;
    *(_BYTE *)(v38 + *(int *)(v39 + 24)) = 6;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v36, v32);
    v40 = &v76[*(int *)(v79 + 48)];
    v41 = v24;
    v80();
    v73(v40, v72, v32);
    v42 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v42(v78, v40, v32);
    v43 = v75;
    swift_isUniquelyReferenced_nonNull_native();
    v83 = v43;
    v44 = sub_23F37559C(v38);
    if (__OFADD__(v43[2], (v45 & 1) == 0))
    {
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      result = sub_23F61CC94();
      __break(1u);
      return result;
    }
    v46 = v44;
    v47 = v45;
    sub_23F35D2E8(&qword_256E6FB30);
    if ((sub_23F61CA18() & 1) != 0)
    {
      v48 = sub_23F37559C(v81);
      if ((v47 & 1) != (v49 & 1))
        goto LABEL_38;
      v46 = v48;
    }
    v50 = v83;
    if ((v47 & 1) != 0)
    {
      (*(void (**)(unint64_t, char *, uint64_t))(v68 + 40))(v83[7] + v46 * v71, v78, v77);
    }
    else
    {
      v83[(v46 >> 6) + 8] |= 1 << v46;
      sub_23F362600(v81, v50[6] + *(_QWORD *)(v60 + 72) * v46, type metadata accessor for ActionResolver.Parameter);
      v42((char *)(v50[7] + v46 * v71), v78, v77);
      v51 = v50[2];
      v52 = __OFADD__(v51, 1);
      v53 = v51 + 1;
      if (v52)
        goto LABEL_36;
      v50[2] = v53;
    }
    v15 = v83;
    swift_bridgeObjectRelease();
    sub_23F382F88(v81, type metadata accessor for ActionResolver.Parameter);
    (*(void (**)(char *, uint64_t))(v69 + 8))(v76, v41);
    sub_23F3625D8(v74, &qword_256E6FAF8);
    v14 = v70;
  }
  v21 = v67 + 7;
  while (v21 < v62)
  {
    v19 = *(_QWORD *)(v61 + 8 * v21++);
    if (v19)
    {
      v20 = v21 - 1;
      goto LABEL_21;
    }
  }
LABEL_31:
  swift_release();
  sub_23F617BA0();
  v54 = v59;
  result = sub_23F3737D0();
  if (v54)
    *v57 = v54;
  else
    *v56 = result;
  return result;
}

uint64_t sub_23F3733D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t);
  NSObject *v15;
  os_log_type_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  os_log_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  _QWORD *v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v34;
  os_log_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;

  v4 = sub_23F61B404();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v34 - v9;
  v11 = sub_23F619E98();
  v39 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F619094();
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v40 = a1;
  v14(v10, a1, v4);
  v41 = a2;
  v14(v8, a2, v4);
  v15 = sub_23F619E8C();
  v16 = sub_23F61C628();
  v17 = v16;
  if (os_log_type_enabled(v15, v16))
  {
    v18 = swift_slowAlloc();
    v36 = v17;
    v19 = v18;
    v37 = swift_slowAlloc();
    v42 = v37;
    *(_DWORD *)v19 = 136315394;
    v34 = v19 + 4;
    sub_23F3612C0(&qword_256E70378, (uint64_t (*)(uint64_t))MEMORY[0x24BE56EB0], MEMORY[0x24BE56ED0]);
    v38 = v11;
    v35 = v15;
    v20 = sub_23F61CC1C();
    sub_23F37AE00(v20, v21, &v42);
    v44 = v22;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    v23 = *(void (**)(char *, uint64_t))(v5 + 8);
    v23(v10, v4);
    *(_WORD *)(v19 + 12) = 2080;
    v24 = sub_23F61CC1C();
    sub_23F37AE00(v24, v25, &v42);
    v44 = v26;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    v23(v8, v4);
    v27 = v35;
    _os_log_impl(&dword_23F35A000, v35, (os_log_type_t)v36, "a parameter may not be both resolved and unresolved: %s vs %s", (uint8_t *)v19, 0x16u);
    v28 = v37;
    swift_arrayDestroy();
    MEMORY[0x242670B70](v28, -1, -1);
    MEMORY[0x242670B70](v19, -1, -1);

    (*(void (**)(char *, uint64_t))(v39 + 8))(v13, v38);
  }
  else
  {
    v29 = *(void (**)(char *, uint64_t))(v5 + 8);
    v29(v10, v4);
    v29(v8, v4);

    (*(void (**)(char *, uint64_t))(v39 + 8))(v13, v11);
  }
  type metadata accessor for InterpreterError();
  sub_23F3612C0((unint64_t *)&qword_256E6FB48, (uint64_t (*)(uint64_t))type metadata accessor for InterpreterError, (uint64_t)&protocol conformance descriptor for InterpreterError);
  swift_allocError();
  v31 = v30;
  v42 = 0;
  v43 = 0xE000000000000000;
  sub_23F61C8E0();
  sub_23F61C280();
  sub_23F3612C0(&qword_256E70378, (uint64_t (*)(uint64_t))MEMORY[0x24BE56EB0], MEMORY[0x24BE56ED0]);
  sub_23F61CC1C();
  sub_23F61C280();
  swift_bridgeObjectRelease();
  sub_23F61C280();
  sub_23F61CC1C();
  sub_23F61C280();
  swift_bridgeObjectRelease();
  v32 = v43;
  *v31 = v42;
  v31[1] = v32;
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

uint64_t sub_23F3737D0()
{
  void (*v0)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t *);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v10;

  sub_23F38478C();
  v4 = v3;
  v6 = v5;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v10 = v4;
  v0(v6, v1, 0, isUniquelyReferenced_nonNull_native, &v10);
  v8 = v10;
  swift_bridgeObjectRelease();
  if (v2)
    swift_bridgeObjectRelease();
  return v8;
}

BOOL sub_23F373854(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16) == 0;
}

void ActionResolverRequestEvaluator.coalesceCollectionParameters(parameterizedTuple:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  BOOL v89;
  int64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void (*v123)(uint64_t, uint64_t, uint64_t);
  uint64_t v124;
  uint64_t (*v125)(uint64_t, _QWORD);
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  uint64_t v132;
  uint64_t v133;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void (*v142)(uint64_t, _BYTE *, uint64_t);
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char v147;
  unint64_t v148;
  char v149;
  char v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char v154;
  unint64_t v155;
  uint64_t v156;
  char **v157;
  uint64_t v158;
  uint64_t v159;
  unsigned int v160;
  int64_t v161;
  uint64_t v162;
  uint64_t (*v163)(uint64_t, uint64_t, _QWORD);
  uint64_t *v164;
  uint64_t (*v165)(uint64_t, uint64_t, _QWORD);
  uint64_t (*v166)(uint64_t, uint64_t, _QWORD);
  uint64_t (*v167)(uint64_t, uint64_t, _QWORD);
  uint64_t v168;
  uint64_t (*v169)(uint64_t, _QWORD);
  uint64_t (*v170)(uint64_t, _QWORD);
  uint64_t (*v171)(uint64_t, _QWORD);
  uint64_t (*v172)(uint64_t, _QWORD);
  uint64_t (*v173)(uint64_t, uint64_t);
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  _BYTE v182[12];
  unsigned int v183;
  _BYTE *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  void (*v202)(uint64_t, uint64_t, uint64_t);
  uint64_t v203;
  int64_t v204;
  void (*v205)(uint64_t, uint64_t, uint64_t);
  uint64_t v206;
  uint64_t v207;
  _BYTE *v208;
  uint64_t v209;
  _BYTE *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  _BYTE *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  unint64_t v225;
  unint64_t v226;

  sub_23F362ABC();
  a19 = v21;
  a20 = v22;
  v24 = v23;
  v25 = sub_23F384048();
  sub_23F383E7C(v25, (uint64_t)&a18);
  v206 = v26;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v27);
  v218 = &v182[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F383780();
  v194 = v30;
  v31 = sub_23F61B9EC();
  sub_23F383E7C(v31, (uint64_t)&v224);
  v192 = v32;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v33);
  sub_23F3834D0();
  v188 = v34;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v35);
  sub_23F383780();
  v198 = v36;
  v37 = sub_23F384040();
  sub_23F383E7C(v37, (uint64_t)&v222);
  v191 = v38;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v39);
  sub_23F3834D0();
  v187 = v40;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F383780();
  v43 = sub_23F384524(v42);
  sub_23F383E7C(v43, (uint64_t)&v220);
  v190 = v44;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v45);
  sub_23F3834D0();
  v186 = v46;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v47);
  sub_23F383780();
  v49 = sub_23F384514(v48);
  sub_23F383E7C(v49, (uint64_t)&v218);
  v189 = v50;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v51);
  sub_23F3834D0();
  v185 = v52;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v53);
  sub_23F383780();
  sub_23F384990(v54);
  v201 = sub_23F35D2E8(&qword_256E6FAF8);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v55);
  sub_23F36285C();
  sub_23F384990(v56);
  sub_23F35D2E8(&qword_256E6FB68);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v57);
  sub_23F3845CC();
  sub_23F35D2E8(&qword_256E6FB08);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v58);
  v184 = &v182[-((v59 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v60);
  sub_23F3838E4();
  v219 = v61;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v62);
  sub_23F3838E4();
  v200 = v63;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v64);
  v66 = &v182[-v65];
  v222 = sub_23F366770();
  v215 = *(_QWORD *)(v222 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v67);
  sub_23F3834D0();
  v224 = v68;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v69);
  sub_23F383780();
  v213 = v70;
  v71 = sub_23F3838F0();
  v72 = *(_QWORD *)(v71 - 8);
  MEMORY[0x24BDAC7A8](v71);
  sub_23F3834D0();
  v217 = v73;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v74);
  sub_23F3838E4();
  v193 = v75;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v76);
  sub_23F3838E4();
  v210 = (_BYTE *)v77;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v78);
  sub_23F383780();
  v209 = v79;
  sub_23F366AE8(v24);
  v211 = 0;
  sub_23F368E14(v80);
  v226 = MEMORY[0x24BEE4B00];
  v203 = v81 + 56;
  v212 = v81;
  sub_23F3839E4();
  v85 = v84 & v83;
  v204 = (unint64_t)(v86 + 63) >> 6;
  v183 = *MEMORY[0x24BEB9988];
  v216 = v24;
  v214 = v20;
  v208 = v66;
  v223 = v72;
  if (!v85)
    goto LABEL_3;
LABEL_2:
  v220 = (v85 - 1) & v85;
  v221 = v82;
  v87 = __clz(__rbit64(v85)) | (v82 << 6);
  v88 = v213;
  while (1)
  {
    v100 = *(_QWORD *)(v212 + 48) + 16 * v87;
    v101 = *(char **)v100;
    v102 = *(_QWORD *)(v100 + 8);
    swift_bridgeObjectRetain_n();
    v103 = 1;
    sub_23F384974();
    sub_23F61A1BC();
    if (*(_QWORD *)(v24 + 16))
    {
      sub_23F384AA8();
      if ((v105 & 1) != 0)
      {
        sub_23F383C64((uint64_t)v66, *(_QWORD *)(v24 + 56) + *(_QWORD *)(v223 + 72) * v104, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v223 + 16));
        v103 = 0;
      }
      else
      {
        v103 = 1;
      }
    }
    sub_23F383CD0((uint64_t)v66, v103);
    sub_23F3849BC(v88);
    sub_23F383740((uint64_t)v66, 1, v71);
    if (v106)
    {
      sub_23F3625D8((uint64_t)v66, &qword_256E6FB08);
      sub_23F384324();
      v107 = sub_23F384A00();
      v108 = v211;
      v109 = sub_23F381CF8(v107, v101, v102);
      v211 = v108;
      sub_23F38458C();
      v110 = v109[32];
      v111 = 1 << v110;
      v112 = *((_QWORD *)v109 + 8);
      v113 = v223;
      if (v112)
      {
        v114 = 0;
      }
      else
      {
        v160 = v110 & 0x3F;
        if (v160 < 7)
          goto LABEL_69;
        v112 = *((_QWORD *)v109 + 9);
        if (v112)
        {
          v114 = 1;
        }
        else
        {
          if (v160 < 8)
            goto LABEL_69;
          v112 = *((_QWORD *)v109 + 10);
          if (v112)
          {
            v114 = 2;
          }
          else
          {
            v175 = 11;
            do
            {
              if (v175 - 8 >= (unint64_t)(v111 + 63) >> 6)
                goto LABEL_69;
              v112 = *(_QWORD *)&v109[8 * v175++];
            }
            while (!v112);
            v114 = v175 - 9;
          }
        }
      }
      v115 = __clz(__rbit64(v112)) + (v114 << 6);
      if (v115 != v111)
      {
        v116 = v201;
        v117 = v199;
        v118 = v199 + *(int *)(v201 + 48);
        sub_23F3825A0(v199, v118, v115, *((_DWORD *)v109 + 9), 0, (uint64_t)v109);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v215 + 16))(v214, v117, v222);
        v119 = v214 + *(int *)(v116 + 48);
        v202 = *(void (**)(uint64_t, uint64_t, uint64_t))(v113 + 16);
        v202(v119, v118, v71);
        swift_retain();
        v120 = v117;
        v20 = v214;
        sub_23F3625D8(v120, &qword_256E6FAF8);
        sub_23F36196C(v20, 0, 1, v116);
        sub_23F384A78();
        sub_23F383740(v20, 1, v116);
        if (!v106)
        {
          v121 = v200;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v113 + 32))(v200, v20 + *(int *)(v201 + 48), v71);
          sub_23F383CD0(v121, 0);
          sub_23F3849BC(v20);
          sub_23F383740(v121, 1, v71);
          if (!v106)
          {
            v122 = sub_23F38422C();
            v205 = v123;
            ((void (*)(uint64_t))v123)(v122);
            sub_23F61B3F8();
            sub_23F61B3B0();
            sub_23F61B398();
            v124 = (uint64_t)v194;
            sub_23F61B3E0();
            sub_23F61B8CC();
            sub_23F384430();
            sub_23F3841CC(v124, v125);
            v126 = *((_QWORD *)v109 + 2);
            sub_23F384A78();
            if (!v126)
              goto LABEL_79;
            v127 = 0;
            v128 = MEMORY[0x24BEE4AF8];
            v129 = v219;
            while (1)
            {
              sub_23F384324();
              sub_23F384974();
              sub_23F61A1BC();
              if (!*(_QWORD *)(v24 + 16))
                break;
              sub_23F384AA8();
              if ((v131 & 1) == 0)
              {
                v133 = 1;
                v129 = v219;
                goto LABEL_34;
              }
              v132 = v223;
              v129 = v219;
              v202(v219, *(_QWORD *)(v24 + 56) + *(_QWORD *)(v223 + 72) * v130, v71);
              v133 = 0;
LABEL_35:
              sub_23F383CD0(v129, v133);
              sub_23F3849BC(v224);
              sub_23F383740(v129, 1, v71);
              if (v106)
              {
                sub_23F3625D8(v129, &qword_256E6FB08);
              }
              else
              {
                v205(v217, v129, v71);
                sub_23F61B3E0();
                isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                {
                  sub_23F3845E4();
                  sub_23F376F10();
                  v128 = v139;
                }
                v135 = *(_QWORD *)(v128 + 16);
                if (v135 >= *(_QWORD *)(v128 + 24) >> 1)
                {
                  sub_23F376F10();
                  v128 = v140;
                }
                *(_QWORD *)(v128 + 16) = v135 + 1;
                sub_23F384418();
                sub_23F3841C4(v136 + v137 * v135, (uint64_t)v218, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v138 + 32));
                sub_23F383CA8(v217, *(uint64_t (**)(uint64_t, uint64_t))(v132 + 8));
                v24 = v216;
                v129 = v219;
              }
              if (v126 == ++v127)
              {
                sub_23F61B6E0();
                v162 = swift_allocBox();
                sub_23F3847B4();
                sub_23F3841C4(v188, v198, v163);
                sub_23F61B6BC();
                v164 = v194;
                *v194 = v162;
                (*(void (**)(uint64_t *, _QWORD, uint64_t))(v206 + 104))(v164, v183, v207);
                sub_23F3847B4();
                sub_23F3841C4(v185, v195, v165);
                sub_23F3847B4();
                sub_23F3841C4(v186, v196, v166);
                sub_23F3847B4();
                sub_23F3841C4(v187, v197, v167);
                v168 = (uint64_t)v184;
                sub_23F61B3D4();
                sub_23F383CD0(v168, 0);
                sub_23F372738();
                sub_23F384430();
                sub_23F3841CC(v198, v169);
                sub_23F384430();
                sub_23F3841CC(v197, v170);
                sub_23F384430();
                sub_23F3841CC(v196, v171);
                sub_23F384430();
                sub_23F3841CC(v195, v172);
                v173 = *(uint64_t (**)(uint64_t, uint64_t))(v132 + 8);
                v174 = v193;
                goto LABEL_54;
              }
            }
            v133 = 1;
LABEL_34:
            v132 = v223;
            goto LABEL_35;
          }
LABEL_71:
          sub_23F38432C();
          sub_23F384A78();
          sub_23F3625D8(v121, &qword_256E6FB08);
          goto LABEL_72;
        }
LABEL_70:
        sub_23F3625D8(v20, &qword_256E6FB68);
        v121 = v200;
        sub_23F3837C8();
        sub_23F36196C(v179, v180, v181, v71);
        goto LABEL_71;
      }
LABEL_69:
      sub_23F3837C8();
      sub_23F36196C(v176, v177, v178, v201);
      goto LABEL_70;
    }
    v141 = v223;
    v142 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v223 + 32);
    v143 = v209;
    v142(v209, v66, v71);
    sub_23F383C64((uint64_t)v210, v143, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v141 + 16));
    sub_23F3841E0();
    v225 = v143;
    v226 = 0x8000000000000000;
    v144 = sub_23F384974();
    v146 = sub_23F37568C(v144, v145, (uint64_t)MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t))sub_23F375BB8);
    if (__OFADD__(*(_QWORD *)(v143 + 16), (v147 & 1) == 0))
      break;
    v148 = v146;
    v149 = v147;
    sub_23F35D2E8(&qword_256E6FB70);
    v150 = sub_23F61CA18();
    v24 = v216;
    if ((v150 & 1) != 0)
    {
      v151 = sub_23F384974();
      v153 = sub_23F37568C(v151, v152, (uint64_t)MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t))sub_23F375BB8);
      if ((v149 & 1) != (v154 & 1))
        goto LABEL_80;
      v148 = v153;
    }
    v155 = v225;
    if ((v149 & 1) != 0)
    {
      sub_23F383C64(*(_QWORD *)(v225 + 56) + *(_QWORD *)(v141 + 72) * v148, (uint64_t)v210, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v141 + 40));
    }
    else
    {
      sub_23F384B78(v225 + 8 * (v148 >> 6));
      v157 = (char **)(v156 + 16 * v148);
      *v157 = v101;
      v157[1] = (char *)v102;
      v142(*(_QWORD *)(v155 + 56) + *(_QWORD *)(v141 + 72) * v148, v210, v71);
      v158 = *(_QWORD *)(v155 + 16);
      v89 = __OFADD__(v158, 1);
      v159 = v158 + 1;
      if (v89)
        goto LABEL_77;
      *(_QWORD *)(v155 + 16) = v159;
      sub_23F384324();
    }
    v226 = v225;
    sub_23F38432C();
    sub_23F362984();
    v173 = *(uint64_t (**)(uint64_t, uint64_t))(v141 + 8);
    v174 = v209;
LABEL_54:
    sub_23F383CA8(v174, v173);
    v20 = v214;
LABEL_72:
    v66 = v208;
    v85 = v220;
    v82 = v221;
    if (v220)
      goto LABEL_2;
LABEL_3:
    v89 = __OFADD__(v82, 1);
    v90 = v82 + 1;
    v88 = v213;
    if (v89)
      goto LABEL_76;
    if (v90 >= v204)
    {
LABEL_74:
      swift_release();
      sub_23F362948();
      return;
    }
    if (!*(_QWORD *)(v203 + 8 * v90))
    {
      sub_23F384498();
      if (v91 == v89)
        goto LABEL_74;
      sub_23F3844E0();
      if (!v92)
      {
        sub_23F384498();
        if (v91 == v89)
          goto LABEL_74;
        sub_23F3844E0();
        if (!v93)
        {
          sub_23F384498();
          if (v91 == v89)
            goto LABEL_74;
          sub_23F3844E0();
          if (!v95)
          {
            do
            {
              v161 = v94 + 1;
              if (__OFADD__(v94, 1))
                goto LABEL_78;
              if (v161 >= v204)
                goto LABEL_74;
              ++v94;
            }
            while (!*(_QWORD *)(v203 + 8 * v161));
          }
        }
      }
    }
    sub_23F3844C0();
    v220 = v97 & v96;
    v221 = v98;
    v87 = v99 + (v98 << 6);
  }
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  sub_23F61CC94();
  __break(1u);
}

void sub_23F374500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_23F374524(a1, a2, a3, a4, a5, &qword_256E701F0, (uint64_t (*)(_QWORD))MEMORY[0x24BEB9A18]);
}

void sub_23F374524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t (*a7)(_QWORD))
{
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_23F384734(a1, a2, a3, a4);
  v11 = v10;
  sub_23F35D2E8(v12);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F382EF8(v7, (uint64_t)v15, a6);
  v16 = a7(0);
  sub_23F383740((uint64_t)v15, 1, v16);
  if (v17)
  {
    sub_23F3625D8((uint64_t)v15, a6);
    sub_23F383EB0();
    sub_23F383E5C();
    sub_23F3840A4();
    sub_23F382DD0();
    v18 = sub_23F362D64();
    sub_23F383E3C(v18, v19);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v11, v15, v16);
  }
  sub_23F38420C();
}

void sub_23F374608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_23F374524(a1, a2, a3, a4, a5, &qword_256E702A0, (uint64_t (*)(_QWORD))MEMORY[0x24BE56660]);
}

void sub_23F37462C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_23F374524(a1, a2, a3, a4, a5, &qword_256E702E0, (uint64_t (*)(_QWORD))MEMORY[0x24BE56CD0]);
}

void sub_23F374650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_23F374524(a1, a2, a3, a4, a5, &qword_256E70228, (uint64_t (*)(_QWORD))MEMORY[0x24BE55BE0]);
}

void sub_23F374674()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(_QWORD);
  _BYTE v15[24];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;

  sub_23F362C98();
  v18 = v1;
  sub_23F35D2E8(&qword_256E6FB00);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F382EF8(v0, (uint64_t)v4, &qword_256E6FB00);
  type metadata accessor for StepResolution();
  v5 = sub_23F3842D8();
  sub_23F383740(v5, v6, v7);
  if (v8)
  {
    sub_23F3625D8((uint64_t)v4, &qword_256E6FB00);
    sub_23F383EB0();
    sub_23F383738();
    sub_23F38461C();
    sub_23F61A78C();
    sub_23F382DD0();
    sub_23F362D64();
    v9 = v17;
    v10 = v16;
    *(_OWORD *)v11 = *(_OWORD *)&v15[8];
    *(_OWORD *)(v11 + 16) = v10;
    *(_QWORD *)(v11 + 32) = v9;
    swift_willThrow();
  }
  else
  {
    v12 = sub_23F384A14();
    sub_23F36262C(v12, v13, v14);
  }
  sub_23F383A78();
}

void sub_23F37479C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_23F374524(a1, a2, a3, a4, a5, &qword_256E70230, (uint64_t (*)(_QWORD))MEMORY[0x24BE56700]);
}

void sub_23F3747C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_23F374524(a1, a2, a3, a4, a5, &qword_256E70238, (uint64_t (*)(_QWORD))MEMORY[0x24BEB8FE0]);
}

void sub_23F3747E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_23F374904(a1, a2, a3, a4, a5, &qword_256E70248, &qword_256E70250);
}

void sub_23F374808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_23F374524(a1, a2, a3, a4, a5, &qword_256E70240, (uint64_t (*)(_QWORD))MEMORY[0x24BE53BB8]);
}

void sub_23F37482C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_23F374524(a1, a2, a3, a4, a5, &qword_256E70220, (uint64_t (*)(_QWORD))MEMORY[0x24BE56D40]);
}

void sub_23F374850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_23F374524(a1, a2, a3, a4, a5, &qword_256E702D8, (uint64_t (*)(_QWORD))MEMORY[0x24BE557B8]);
}

void sub_23F374874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_23F374524(a1, a2, a3, a4, a5, &qword_256E70268, (uint64_t (*)(_QWORD))MEMORY[0x24BEBA368]);
}

void sub_23F374898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_23F374524(a1, a2, a3, a4, a5, &qword_256E702D0, (uint64_t (*)(_QWORD))MEMORY[0x24BE55E48]);
}

void sub_23F3748BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_23F374524(a1, a2, a3, a4, a5, &qword_256E702C8, (uint64_t (*)(_QWORD))MEMORY[0x24BEB9D20]);
}

void sub_23F3748E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_23F374904(a1, a2, a3, a4, a5, &qword_256E701C8, &qword_256E701D0);
}

void sub_23F374904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t *a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_23F384734(a1, a2, a3, a4);
  v10 = v9;
  sub_23F35D2E8(v11);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23F384220();
  sub_23F382EF8(v15, v16, a6);
  v17 = sub_23F35D2E8(a7);
  sub_23F383740((uint64_t)v14, 1, v17);
  if (v18)
  {
    sub_23F3625D8((uint64_t)v14, a6);
    sub_23F383EB0();
    sub_23F383E5C();
    sub_23F3840A4();
    sub_23F382DD0();
    v19 = sub_23F362D64();
    sub_23F383E3C(v19, v20);
  }
  else
  {
    sub_23F383004((uint64_t)v14, v10, a7);
  }
  sub_23F38420C();
}

uint64_t sub_23F3749D8@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t *v29;

  v29 = a4;
  v9 = sub_23F35D2E8(&qword_256E6FB08);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23F61B92C();
  v13 = *(_QWORD *)(v12 - 8);
  result = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *a1;
  if ((*a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v17 >= *(_QWORD *)(a2 + 16))
  {
LABEL_7:
    __break(1u);
    return result;
  }
  v18 = *(_QWORD *)(a2 + 8 * v17 + 32);
  sub_23F617BA0();
  sub_23F36886C(a3, v18, (uint64_t)MEMORY[0x24BE56EB0], (void (*)(void))sub_23F37559C);
  swift_bridgeObjectRelease();
  v19 = sub_23F61B404();
  if (sub_23F36195C((uint64_t)v11, 1, v19) == 1)
  {
    sub_23F3625D8((uint64_t)v11, &qword_256E6FB08);
    type metadata accessor for InterpreterError();
    sub_23F3612C0((unint64_t *)&qword_256E6FB48, (uint64_t (*)(uint64_t))type metadata accessor for InterpreterError, (uint64_t)&protocol conformance descriptor for InterpreterError);
    v20 = swift_allocError();
    v22 = v21;
    v27 = 0;
    v28 = 0xE000000000000000;
    sub_23F61A1C8();
    sub_23F61C280();
    swift_bridgeObjectRelease();
    sub_23F61C280();
    v25 = sub_23F61A1A4();
    v26 = v23 & 1;
    sub_23F35D2E8(&qword_256E6FAC0);
    sub_23F61CA00();
    v24 = v28;
    *v22 = v27;
    v22[1] = v24;
    swift_storeEnumTagMultiPayload();
    result = swift_willThrow();
    *v29 = v20;
  }
  else
  {
    sub_23F61B3E0();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v11, v19);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(a5, v16, v12);
  }
  return result;
}

uint64_t sub_23F374C40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  _QWORD v9[4];

  v1 = *(_QWORD *)(sub_23F61A9A8() + 16);
  swift_bridgeObjectRelease();
  v2 = sub_23F61A9CC();
  v3 = v2;
  if (v1)
  {
    v4 = *(_QWORD *)(v2 + 16);
    swift_bridgeObjectRelease();
    if (v4)
    {
      v5 = sub_23F61A9CC();
      MEMORY[0x24BDAC7A8](v5);
      v9[2] = v0;
      v3 = sub_23F51C95C(MEMORY[0x24BEE4B08], (void (*)(uint64_t *, uint64_t *))sub_23F382FAC, (uint64_t)v9, v5);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23F35D2E8(&qword_256E703A8);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_23F61E7E0;
      *(_QWORD *)(inited + 32) = sub_23F61A9A8();
      sub_23F3E3A44(inited);
      return v7;
    }
  }
  return v3;
}

uint64_t sub_23F374D30@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v4 = sub_23F61B404();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  if (*(_QWORD *)(v8 + 16) && (sub_23F375614(), (v10 & 1) != 0))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, *(_QWORD *)(v8 + 56) + *(_QWORD *)(v5 + 72) * v9, v4);
    sub_23F61B3E0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v11 = sub_23F61B92C();
    v12 = a2;
    v13 = 0;
  }
  else
  {
    v11 = sub_23F61B92C();
    v12 = a2;
    v13 = 1;
  }
  return sub_23F36196C(v12, v13, 1, v11);
}

uint64_t sub_23F374E34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char v4;
  uint64_t v6;

  v0 = sub_23F61B92C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F61B3E0();
  v4 = sub_23F61B920();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4 & 1;
}

uint64_t sub_23F374ED4@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  unint64_t v13;
  uint64_t result;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  void (*v20)(char *, char *, uint64_t);
  char v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t (*v29)(char *);
  _QWORD v30[5];
  uint64_t v31;

  v29 = a1;
  v26 = a3;
  v5 = sub_23F61B404();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v25 - v10;
  sub_23F382390(a2, v30);
  v31 = v30[0];
  v12 = v30[3];
  v13 = v30[4];
  v27 = v30[1];
  v28 = (unint64_t)(v30[2] + 64) >> 6;
  result = sub_23F617BA0();
  if (!v13)
    goto LABEL_3;
LABEL_2:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v11, *(_QWORD *)(v31 + 56) + *(_QWORD *)(v6 + 72) * v16, v5);
    v20 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v20(v9, v11, v5);
    v21 = v29(v9);
    if (v3)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      return swift_release();
    }
    if ((v21 & 1) != 0)
    {
      swift_release();
      v23 = v26;
      v20((char *)v26, v9, v5);
      v24 = 0;
      return sub_23F36196C(v23, v24, 1, v5);
    }
    result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    if (v13)
      goto LABEL_2;
LABEL_3:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v17 >= v28)
      goto LABEL_26;
    v18 = *(_QWORD *)(v27 + 8 * v17);
    if (!v18)
    {
      v19 = v12 + 2;
      if (v12 + 2 >= v28)
        goto LABEL_26;
      v18 = *(_QWORD *)(v27 + 8 * v19);
      if (v18)
        goto LABEL_12;
      v19 = v12 + 3;
      if (v12 + 3 >= v28)
        goto LABEL_26;
      v18 = *(_QWORD *)(v27 + 8 * v19);
      if (v18)
        goto LABEL_12;
      v19 = v12 + 4;
      if (v12 + 4 >= v28)
        goto LABEL_26;
      v18 = *(_QWORD *)(v27 + 8 * v19);
      if (v18)
      {
LABEL_12:
        v17 = v19;
      }
      else
      {
        v17 = v12 + 5;
        if (v12 + 5 >= v28)
          goto LABEL_26;
        v18 = *(_QWORD *)(v27 + 8 * v17);
        if (!v18)
        {
          v22 = v12 + 6;
          while (v22 < v28)
          {
            v18 = *(_QWORD *)(v27 + 8 * v22++);
            if (v18)
            {
              v17 = v22 - 1;
              goto LABEL_13;
            }
          }
LABEL_26:
          v23 = v26;
          swift_release();
          v24 = 1;
          return sub_23F36196C(v23, v24, 1, v5);
        }
      }
    }
LABEL_13:
    v13 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  __break(1u);
  return result;
}

uint64_t sub_23F375170@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v6 = sub_23F61B3A4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F61B404();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a3, a1, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  return sub_23F61B3BC();
}

uint64_t sub_23F375230(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;
  uint64_t v8;

  v3 = sub_23F35D2E8(&qword_256E6FB08);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a2;
  sub_23F617BA0();
  sub_23F37D60C();
  sub_23F3625D8((uint64_t)v5, &qword_256E6FB08);
  sub_23F471B08(&v7, v8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F3752F0()
{
  uint64_t v0;
  uint64_t v2;

  sub_23F617BA0();
  sub_23F61A9A8();
  v0 = sub_23F3737D0();
  sub_23F471B08(&v2, v0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F375374()
{
  uint64_t v0;

  sub_23F61C10C();
  sub_23F61CD30();
  sub_23F61C22C();
  v0 = sub_23F362C10();
  sub_23F362D08();
  return v0;
}

unint64_t sub_23F3753E0(unint64_t result, char a2, uint64_t a3)
{
  if ((a2 & 1) != 0)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)(a3 + 16) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

unint64_t sub_23F375400(unint64_t result, char a2, uint64_t a3)
{
  if ((a2 & 1) != 0)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

void sub_23F375424()
{
  uint64_t v0;

  sub_23F383654();
  sub_23F6184B8();
  sub_23F383FB0(&qword_256E6FCF0, v0, MEMORY[0x24BE549C8]);
  sub_23F383618();
  sub_23F383608();
  sub_23F383488();
}

unint64_t sub_23F375488(unsigned __int8 a1)
{
  uint64_t v2;

  sub_23F383F88();
  sub_23F61CD3C();
  v2 = sub_23F362C10();
  return sub_23F375B18(a1, v2);
}

uint64_t sub_23F3754D4(uint64_t a1, uint64_t a2)
{
  return sub_23F37568C(a1, a2, (uint64_t)MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t))sub_23F375BB8);
}

unint64_t sub_23F3754E8(uint64_t *a1)
{
  uint64_t v2;

  sub_23F383F88();
  sub_23F362CDC();
  sub_23F61C22C();
  swift_bridgeObjectRelease();
  sub_23F383EB0();
  sub_23F61C22C();
  sub_23F384120();
  v2 = sub_23F362C10();
  return sub_23F375C98(a1, v2);
}

unint64_t sub_23F37556C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F61CD24();
  return sub_23F375DB8(a1, v2);
}

unint64_t sub_23F37559C(uint64_t a1)
{
  uint64_t v2;

  sub_23F383F88();
  sub_23F366770();
  sub_23F3612C0((unint64_t *)&qword_256E6FA98, (uint64_t (*)(uint64_t))MEMORY[0x24BE55070], MEMORY[0x24BE55080]);
  sub_23F61C04C();
  v2 = sub_23F362C10();
  return sub_23F375E54(a1, v2);
}

void sub_23F375614()
{
  uint64_t v0;

  sub_23F383654();
  sub_23F61A1D4();
  sub_23F383FB0((unint64_t *)&qword_256E6FA98, v0, MEMORY[0x24BE55080]);
  sub_23F383618();
  sub_23F383608();
  sub_23F383488();
}

uint64_t sub_23F375678(uint64_t a1, uint64_t a2)
{
  return sub_23F37568C(a1, a2, MEMORY[0x24BEE06E0], (uint64_t (*)(uint64_t))sub_23F375BB8);
}

uint64_t sub_23F37568C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  void (*v4)(_BYTE *, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v10[72];

  sub_23F384AE4();
  sub_23F383F88();
  v4(v10, v6, v5);
  sub_23F362C10();
  v7 = sub_23F3848C0();
  return a4(v7);
}

void sub_23F3756E8()
{
  uint64_t v0;

  sub_23F383654();
  sub_23F617D08();
  sub_23F383FB0(&qword_256E6FFB0, v0, MEMORY[0x24BE52158]);
  sub_23F383618();
  sub_23F383608();
  sub_23F383488();
}

void sub_23F37574C()
{
  uint64_t v0;

  sub_23F383654();
  sub_23F61B95C();
  sub_23F383FB0(&qword_256E6FC40, v0, MEMORY[0x24BEB9AD0]);
  sub_23F383618();
  sub_23F383608();
  sub_23F383488();
}

void sub_23F3757B0()
{
  uint64_t v0;

  sub_23F383654();
  sub_23F617000();
  sub_23F383FB0((unint64_t *)&qword_256E70430, v0, MEMORY[0x24BDCEA88]);
  sub_23F383618();
  sub_23F383608();
  sub_23F383488();
}

void sub_23F375814()
{
  uint64_t v0;

  sub_23F383654();
  sub_23F61B7C4();
  sub_23F383FB0(&qword_256E6FE18, v0, MEMORY[0x24BEB9808]);
  sub_23F383618();
  sub_23F383608();
  sub_23F383488();
}

unint64_t sub_23F375878()
{
  sub_23F61B92C();
  sub_23F3612C0(&qword_256E6FE60, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9A18], MEMORY[0x24BEB9A30]);
  sub_23F61C040();
  return sub_23F375F64();
}

unint64_t sub_23F375910(unsigned int a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = MEMORY[0x242670228](*(_QWORD *)(v1 + 40), a1, 4);
  return sub_23F37608C(a1, v3);
}

unint64_t sub_23F375944(uint64_t a1)
{
  uint64_t v2;

  sub_23F61C10C();
  sub_23F61CD30();
  sub_23F61C22C();
  v2 = sub_23F61CD60();
  swift_bridgeObjectRelease();
  return sub_23F376128(a1, v2);
}

unint64_t sub_23F3759C4()
{
  sub_23F61BCE0();
  sub_23F3612C0(&qword_256E6FEB8, (uint64_t (*)(uint64_t))MEMORY[0x24BEBA5E0], MEMORY[0x24BEBA5F8]);
  sub_23F61C040();
  return sub_23F375F64();
}

unint64_t sub_23F375A5C(uint64_t a1)
{
  uint64_t v2;

  sub_23F61CD30();
  QueryDecorationCacheKey.hash(into:)();
  v2 = sub_23F61CD60();
  return sub_23F37629C(a1, v2);
}

void sub_23F375AB4()
{
  uint64_t v0;

  sub_23F383654();
  sub_23F61B9EC();
  sub_23F383FB0(&qword_256E6FDB0, v0, MEMORY[0x24BEB9D38]);
  sub_23F383618();
  sub_23F383608();
  sub_23F383488();
}

unint64_t sub_23F375B18(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_23F375BB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_23F61CC64() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_23F61CC64() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_23F375C98(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  BOOL v15;
  char v16;
  uint64_t v18;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v5 = ~v3;
    v6 = *a1;
    v7 = a1[1];
    v8 = a1[2];
    v9 = a1[3];
    v18 = a1[4];
    do
    {
      v10 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 40 * v4);
      v11 = v10[2];
      v12 = v10[3];
      v13 = v10[4];
      v14 = *v10 == v6 && v10[1] == v7;
      if (v14 || (sub_23F61CC64() & 1) != 0)
      {
        v15 = v11 == v8 && v12 == v9;
        if (v15 || (sub_23F61CC64() & 1) != 0)
        {
          sub_23F4903B0(v13, v18);
          if ((v16 & 1) != 0)
            break;
        }
      }
      v4 = (v4 + 1) & v5;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_23F375DB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_23F375E54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v14;

  v4 = type metadata accessor for ActionResolver.Parameter(0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = -1 << *(_BYTE *)(v2 + 32);
  v9 = a2 & ~v8;
  if (((*(_QWORD *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0)
  {
    v10 = ~v8;
    v11 = *(_QWORD *)(v5 + 72);
    do
    {
      sub_23F362600(*(_QWORD *)(v2 + 48) + v11 * v9, (uint64_t)v7, type metadata accessor for ActionResolver.Parameter);
      v12 = sub_23F61A1B0();
      sub_23F382F88((uint64_t)v7, type metadata accessor for ActionResolver.Parameter);
      if ((v12 & 1) != 0)
        break;
      v9 = (v9 + 1) & v10;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

unint64_t sub_23F375F64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  unint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_23F362ABC();
  v25 = v1;
  v26 = v2;
  v23 = v3;
  v24 = v4;
  v5 = v0;
  v7 = v6;
  v21 = v8;
  v22 = v9;
  v10 = v9(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v21 - v12;
  v14 = -1 << *(_BYTE *)(v5 + 32);
  v15 = v7 & ~v14;
  if (((*(_QWORD *)(v5 + 64 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
  {
    v16 = ~v14;
    v17 = *(_QWORD *)(v11 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
    do
    {
      v18(v13, *(_QWORD *)(v5 + 48) + v17 * v15, v10);
      sub_23F3612C0(v23, v22, v24);
      v19 = sub_23F61C0A0();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      if ((v19 & 1) != 0)
        break;
      v15 = (v15 + 1) & v16;
    }
    while (((*(_QWORD *)(v5 + 64 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0);
  }
  return v15;
}

unint64_t sub_23F37608C(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_DWORD *)(v7 + 4 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_DWORD *)(v7 + 4 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_23F376128(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_23F61C10C();
    v8 = v7;
    if (v6 == sub_23F61C10C() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_23F61CC64();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_23F61C10C();
          v15 = v14;
          if (v13 == sub_23F61C10C() && v15 == v16)
            break;
          v18 = sub_23F61CC64();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_23F37629C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t DecorationCache;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  BOOL v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  BOOL v63;
  char *v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t DecorationCacheKey;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;

  v82 = a1;
  v4 = sub_23F61B4C4();
  v67 = *(_QWORD *)(v4 - 8);
  v68 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v65 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_23F35D2E8(&qword_256E6FF68);
  MEMORY[0x24BDAC7A8](v71);
  v7 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationCache = type metadata accessor for QueryDecorationCacheKey.Input(0);
  v9 = MEMORY[0x24BDAC7A8](DecorationCache);
  v11 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v69 = (uint64_t *)((char *)&v65 - v13);
  MEMORY[0x24BDAC7A8](v12);
  v74 = (uint64_t)&v65 - v14;
  v78 = sub_23F35D2E8(&qword_256E6FF70);
  MEMORY[0x24BDAC7A8](v78);
  v16 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23F35D2E8(&qword_256E6FF78);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v65 - v21;
  DecorationCacheKey = type metadata accessor for QueryDecorationCacheKey(0);
  MEMORY[0x24BDAC7A8](DecorationCacheKey);
  v25 = (char *)&v65 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = v2;
  v26 = -1 << *(_BYTE *)(v2 + 32);
  v27 = a2 & ~v26;
  v77 = v2 + 64;
  if (((*(_QWORD *)(v2 + 64 + ((v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) != 0)
  {
    v28 = ~v26;
    v76 = *(_QWORD *)(v23 + 72);
    v29 = &qword_256E6FF78;
    v72 = v7;
    v73 = ~v26;
    v80 = v20;
    v81 = DecorationCache;
    v70 = v22;
    do
    {
      sub_23F362600(*(_QWORD *)(v79 + 48) + v76 * v27, (uint64_t)v25, type metadata accessor for QueryDecorationCacheKey);
      sub_23F382EF8(v82, (uint64_t)v22, v29);
      v30 = (uint64_t)&v16[*(int *)(v78 + 48)];
      sub_23F382EF8((uint64_t)v25, (uint64_t)v16, v29);
      sub_23F382EF8((uint64_t)v22, v30, v29);
      v31 = v29;
      v32 = v81;
      if (sub_23F36195C((uint64_t)v16, 1, v81) == 1)
      {
        sub_23F3625D8((uint64_t)v22, v31);
        v33 = sub_23F36195C(v30, 1, v32);
        v34 = &qword_256E6FF70;
        v29 = v31;
        if (v33 != 1)
          goto LABEL_23;
      }
      else
      {
        sub_23F382EF8((uint64_t)v16, (uint64_t)v20, v31);
        v35 = (uint64_t)v20;
        v34 = &qword_256E6FF70;
        if (sub_23F36195C(v30, 1, v32) == 1)
          goto LABEL_22;
        v36 = v74;
        sub_23F36262C(v30, v74, type metadata accessor for QueryDecorationCacheKey.Input);
        v37 = (uint64_t)v72;
        v38 = &v72[*(int *)(v71 + 48)];
        sub_23F362600(v35, (uint64_t)v72, type metadata accessor for QueryDecorationCacheKey.Input);
        sub_23F362600(v36, (uint64_t)v38, type metadata accessor for QueryDecorationCacheKey.Input);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          sub_23F362600(v37, (uint64_t)v11, type metadata accessor for QueryDecorationCacheKey.Input);
          if (swift_getEnumCaseMultiPayload() != 1)
          {
            (*(void (**)(char *, uint64_t))(v67 + 8))(v11, v68);
            v48 = v37;
            goto LABEL_14;
          }
          v39 = v67;
          v40 = v65;
          v41 = v38;
          v42 = v68;
          (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v65, v41, v68);
          v66 = sub_23F61B488();
          v43 = *(void (**)(char *, uint64_t))(v39 + 8);
          v44 = (uint64_t)v72;
          v43(v40, v42);
          v43(v11, v42);
          v22 = v70;
          if ((v66 & 1) == 0)
            goto LABEL_20;
        }
        else
        {
          v45 = v69;
          sub_23F362600(v37, (uint64_t)v69, type metadata accessor for QueryDecorationCacheKey.Input);
          v47 = *v45;
          v46 = v45[1];
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            swift_bridgeObjectRelease();
            v48 = (uint64_t)v72;
LABEL_14:
            v22 = v70;
            sub_23F3625D8(v48, &qword_256E6FF68);
LABEL_21:
            sub_23F382F88(v74, type metadata accessor for QueryDecorationCacheKey.Input);
            v34 = v31;
            v35 = (uint64_t)v80;
LABEL_22:
            sub_23F3625D8((uint64_t)v22, v31);
            sub_23F382F88(v35, type metadata accessor for QueryDecorationCacheKey.Input);
            v28 = v73;
            v29 = v31;
LABEL_23:
            sub_23F3625D8((uint64_t)v16, v34);
            v20 = v80;
            goto LABEL_24;
          }
          v49 = *(_QWORD *)v38;
          v50 = *((_QWORD *)v38 + 1);
          if (v47 == v49 && v46 == v50)
          {
            swift_bridgeObjectRelease_n();
            v44 = (uint64_t)v72;
            v22 = v70;
          }
          else
          {
            v52 = sub_23F61CC64();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v44 = (uint64_t)v72;
            v22 = v70;
            if ((v52 & 1) == 0)
            {
LABEL_20:
              sub_23F382F88(v44, type metadata accessor for QueryDecorationCacheKey.Input);
              goto LABEL_21;
            }
          }
        }
        sub_23F382F88(v44, type metadata accessor for QueryDecorationCacheKey.Input);
        sub_23F382F88(v74, type metadata accessor for QueryDecorationCacheKey.Input);
        v29 = v31;
        sub_23F3625D8((uint64_t)v22, v31);
        sub_23F382F88((uint64_t)v80, type metadata accessor for QueryDecorationCacheKey.Input);
        v28 = v73;
      }
      sub_23F3625D8((uint64_t)v16, v29);
      v53 = *(int *)(DecorationCacheKey + 20);
      v54 = *(_QWORD *)&v25[v53];
      v55 = *(_QWORD *)&v25[v53 + 8];
      v56 = (_QWORD *)(v82 + v53);
      v57 = v54 == *v56 && v55 == v56[1];
      v20 = v80;
      if ((v57 || (sub_23F61CC64() & 1) != 0) && (sub_23F618BFC() & 1) != 0)
      {
        v58 = *(int *)(DecorationCacheKey + 28);
        v59 = &v25[v58];
        v60 = *(_QWORD *)&v25[v58 + 8];
        v61 = (_QWORD *)(v82 + v58);
        v62 = v61[1];
        if (v60)
        {
          if (v62)
          {
            v63 = *(_QWORD *)v59 == *v61 && v60 == v62;
            if (v63 || (sub_23F61CC64() & 1) != 0)
            {
LABEL_43:
              sub_23F382F88((uint64_t)v25, type metadata accessor for QueryDecorationCacheKey);
              return v27;
            }
          }
        }
        else if (!v62)
        {
          goto LABEL_43;
        }
      }
LABEL_24:
      sub_23F382F88((uint64_t)v25, type metadata accessor for QueryDecorationCacheKey);
      v27 = (v27 + 1) & v28;
    }
    while (((*(_QWORD *)(v77 + ((v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) != 0);
  }
  return v27;
}

void sub_23F376938()
{
  sub_23F376A8C((uint64_t)&unk_256E6FFF8, (uint64_t)MEMORY[0x24BE59210], (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_23F376F10);
}

void sub_23F376954()
{
  sub_23F376A8C((uint64_t)&unk_256E6FC28, (uint64_t)MEMORY[0x24BEB9A18], (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_23F376F10);
}

void sub_23F376970()
{
  sub_23F376A8C((uint64_t)&unk_256E70418, (uint64_t)&unk_256E70420, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_23F377814);
}

void sub_23F37698C()
{
  uint64_t v0;
  _QWORD *v1;
  int v2;
  uint64_t v3;

  v2 = sub_23F38480C();
  *v1 = v0;
  if (!v2)
  {
    sub_23F377454();
    *v1 = v3;
  }
  sub_23F362928();
}

void sub_23F3769E0()
{
  sub_23F376A8C((uint64_t)&unk_256E70010, (uint64_t)type metadata accessor for LocationEvent, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_23F376F10);
}

void sub_23F3769FC()
{
  uint64_t v0;
  _QWORD *v1;
  int v2;
  uint64_t v3;

  v2 = sub_23F38480C();
  *v1 = v0;
  if (!v2)
  {
    sub_23F377D54();
    *v1 = v3;
  }
  sub_23F362928();
}

void sub_23F376A38()
{
  sub_23F376A8C((uint64_t)&unk_256E6FE90, (uint64_t)MEMORY[0x24BE57608], (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_23F376F10);
}

void sub_23F376A54()
{
  sub_23F376A8C((uint64_t)&unk_256E70188, (uint64_t)MEMORY[0x24BE59750], (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_23F376F10);
}

void sub_23F376A70()
{
  sub_23F376A8C((uint64_t)&unk_256E70170, (uint64_t)type metadata accessor for QueryDecorationCapturingSignposter.Event, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_23F376F10);
}

void sub_23F376A8C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t isUniquelyReferenced_nonNull_native;

  sub_23F384780();
  v7 = *v3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v3 = v7;
  if (!(_DWORD)isUniquelyReferenced_nonNull_native)
    *v3 = a3(isUniquelyReferenced_nonNull_native, *(_QWORD *)(v7 + 16) + 1, 1, v7, v5, v4);
  sub_23F383488();
}

void sub_23F376AE8()
{
  _QWORD *v0;
  char v1;
  char v2;
  char v3;
  uint64_t v4;

  sub_23F3847F8();
  if (!(v2 ^ v3 | v1))
  {
    sub_23F377454();
    *v0 = v4;
  }
}

uint64_t sub_23F376B30(uint64_t a1)
{
  return sub_23F376C24(a1, (uint64_t)&unk_256E6FFF8, (uint64_t)MEMORY[0x24BE59210], (uint64_t (*)(BOOL))sub_23F376F10);
}

uint64_t sub_23F376B4C(uint64_t a1)
{
  return sub_23F376C24(a1, (uint64_t)&unk_256E6FC28, (uint64_t)MEMORY[0x24BEB9A18], (uint64_t (*)(BOOL))sub_23F376F10);
}

uint64_t sub_23F376B68(uint64_t a1)
{
  return sub_23F376C24(a1, (uint64_t)&unk_256E70418, (uint64_t)&unk_256E70420, (uint64_t (*)(BOOL))sub_23F377814);
}

uint64_t sub_23F376B84(uint64_t a1)
{
  return sub_23F376C24(a1, (uint64_t)&unk_256E70010, (uint64_t)type metadata accessor for LocationEvent, (uint64_t (*)(BOOL))sub_23F376F10);
}

void sub_23F376BA0()
{
  _QWORD *v0;
  char v1;
  char v2;
  char v3;
  uint64_t v4;

  sub_23F3847F8();
  if (!(v2 ^ v3 | v1))
  {
    sub_23F377D54();
    *v0 = v4;
  }
}

uint64_t sub_23F376BD0(uint64_t a1)
{
  return sub_23F376C24(a1, (uint64_t)&unk_256E6FE90, (uint64_t)MEMORY[0x24BE57608], (uint64_t (*)(BOOL))sub_23F376F10);
}

uint64_t sub_23F376BEC(uint64_t a1)
{
  return sub_23F376C24(a1, (uint64_t)&unk_256E70188, (uint64_t)MEMORY[0x24BE59750], (uint64_t (*)(BOOL))sub_23F376F10);
}

uint64_t sub_23F376C08(uint64_t a1)
{
  return sub_23F376C24(a1, (uint64_t)&unk_256E70170, (uint64_t)type metadata accessor for QueryDecorationCapturingSignposter.Event, (uint64_t (*)(BOOL))sub_23F376F10);
}

uint64_t sub_23F376C24(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(BOOL))
{
  uint64_t v4;
  unint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)v4 + 24);
  if (result + 1 > (uint64_t)(v5 >> 1))
  {
    result = a4(v5 > 1);
    *(_QWORD *)v4 = result;
  }
  return result;
}

void sub_23F376C6C()
{
  sub_23F377454();
}

void sub_23F376C88()
{
  sub_23F377F3C();
}

void sub_23F376CA4()
{
  sub_23F377234();
}

void sub_23F376CC0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  _QWORD *v7;
  size_t v8;
  char *v9;
  size_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;

  sub_23F383F1C();
  if ((v4 & 1) != 0)
  {
    sub_23F38345C();
    if (v5 != v6)
    {
      sub_23F38357C();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_23F38344C();
    }
  }
  sub_23F383760();
  if (v3)
  {
    sub_23F35D2E8(&qword_256E6FDD8);
    v7 = (_QWORD *)sub_23F36682C();
    v8 = j__malloc_size(v7);
    v7[2] = v2;
    v7[3] = 2 * v8 - 64;
  }
  if ((v1 & 1) != 0)
  {
    v9 = (char *)sub_23F383F74();
    sub_23F37A3E8(v9, v10, v11);
    *(_QWORD *)(v0 + 16) = 0;
    sub_23F362D18();
  }
  else
  {
    v12 = sub_23F383858();
    sub_23F378500(v12, v13, v14, v15);
  }
  sub_23F362B80();
}

void sub_23F376D64()
{
  sub_23F376D70();
}

void sub_23F376D70()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  _QWORD *v12;
  size_t v13;
  char *v14;
  size_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;

  sub_23F383F1C();
  if ((v4 & 1) != 0)
  {
    sub_23F38345C();
    if (v5 != v6)
    {
      sub_23F38357C();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_23F38344C();
    }
  }
  sub_23F383760();
  if (v3)
  {
    sub_23F383594(v7, v8, v9, v10, v11);
    v12 = (_QWORD *)sub_23F36682C();
    v13 = j__malloc_size(v12);
    v12[2] = v2;
    v12[3] = 2 * v13 - 64;
  }
  if ((v1 & 1) != 0)
  {
    v14 = (char *)sub_23F383F74();
    sub_23F37A3E8(v14, v15, v16);
    *(_QWORD *)(v0 + 16) = 0;
    sub_23F362D18();
  }
  else
  {
    v17 = sub_23F383858();
    sub_23F379E94(v17, v18, v19, v20);
  }
  sub_23F362B80();
}

void sub_23F376E0C()
{
  sub_23F377A00();
}

void sub_23F376E28()
{
  sub_23F376E3C();
}

void sub_23F376E3C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  _QWORD *v12;
  size_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  sub_23F383840();
  if ((v4 & 1) != 0)
  {
    sub_23F38345C();
    if (v5 != v6)
    {
      sub_23F38357C();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_23F38344C();
    }
  }
  sub_23F383DD4();
  if (v3)
  {
    sub_23F383594(v7, v8, v9, v10, v11);
    v12 = (_QWORD *)sub_23F36682C();
    v13 = j__malloc_size(v12);
    v12[2] = v2;
    v12[3] = 2 * ((uint64_t)(v13 - 32) / 8);
  }
  if ((v1 & 1) != 0)
  {
    v14 = (char *)sub_23F384444();
    sub_23F37AA44(v14, v15, v16);
    *(_QWORD *)(v0 + 16) = 0;
    sub_23F362D18();
  }
  else
  {
    v17 = sub_23F383D4C();
    sub_23F379F4C(v17, v18);
  }
  sub_23F383488();
}

void sub_23F376EE8()
{
  sub_23F376F10();
}

void sub_23F376EFC()
{
  sub_23F376F10();
}

void sub_23F376F10()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  const void *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(_QWORD);

  sub_23F383840();
  if ((v5 & 1) != 0)
  {
    sub_23F38345C();
    if (v9 != v10)
    {
      sub_23F38357C();
      if (v9)
      {
        __break(1u);
        goto LABEL_22;
      }
      sub_23F38344C();
    }
  }
  else
  {
    v8 = v4;
  }
  v11 = *(_QWORD *)(v0 + 16);
  if (v8 <= v11)
    v12 = *(_QWORD *)(v0 + 16);
  else
    v12 = v8;
  if (!v12)
    goto LABEL_17;
  sub_23F383594(v3, v4, v5, v6, v7);
  sub_23F3846D4();
  v13 = (const void *)sub_23F383D28();
  j__malloc_size(v13);
  if (!v2 || ((sub_23F3847C0(), v15) ? (v15 = v2 == -1) : (v15 = 0), v15))
  {
LABEL_22:
    sub_23F3833BC();
    sub_23F384B60();
    __break(1u);
    return;
  }
  sub_23F383E14(v14);
LABEL_17:
  sub_23F3846D4();
  sub_23F38469C();
  if ((v1 & 1) != 0)
  {
    sub_23F37AD04(v0 + v16, v11);
    *(_QWORD *)(v0 + 16) = 0;
    sub_23F362D18();
  }
  else
  {
    v17 = sub_23F383D4C();
    sub_23F37A0BC(v17, v18, v19, v20, v21);
  }
  sub_23F3840C8();
}

void sub_23F377040()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  sub_23F383F1C();
  if ((v3 & 1) != 0)
  {
    sub_23F38345C();
    if (v4 != v5)
    {
      sub_23F38357C();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_23F38344C();
    }
  }
  sub_23F383760();
  if (v2)
  {
    sub_23F35D2E8(&qword_256E70058);
    v6 = (_QWORD *)sub_23F36682C();
    sub_23F3837E8(v6);
  }
  if ((v1 & 1) != 0)
  {
    v7 = (char *)sub_23F383F74();
    sub_23F37A500(v7, v8, v9);
    *(_QWORD *)(v0 + 16) = 0;
    sub_23F362D18();
  }
  else
  {
    v10 = sub_23F383858();
    sub_23F3786E8(v10, v11, v12, v13);
  }
  sub_23F383488();
}

void sub_23F3770E0()
{
  sub_23F377118();
}

void sub_23F3770FC()
{
  sub_23F377118();
}

void sub_23F377118()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  const void *v11;
  size_t v12;

  sub_23F3835E0();
  if ((v3 & 1) != 0)
  {
    sub_23F38345C();
    if (v4 != v5)
    {
      sub_23F38357C();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_23F38344C();
    }
  }
  sub_23F3835AC();
  if (v2)
  {
    sub_23F383594(v6, v7, v8, v9, v10);
    v11 = (const void *)sub_23F36682C();
    v12 = j__malloc_size(v11);
    sub_23F383644(v12 - 32);
  }
  else
  {
    v11 = (const void *)MEMORY[0x24BEE4AF8];
  }
  if ((v1 & 1) != 0)
  {
    sub_23F38372C();
    *(_QWORD *)(v0 + 16) = 0;
    sub_23F362D18();
  }
  else
  {
    sub_23F3835D0(v6, v7, (uint64_t)v11 + 32);
  }
  sub_23F383488();
}

void sub_23F3771B4()
{
  sub_23F376F10();
}

void sub_23F3771C8()
{
  sub_23F376F10();
}

void sub_23F3771DC()
{
  sub_23F376F10();
}

void sub_23F3771F0()
{
  sub_23F376F10();
}

void sub_23F377204()
{
  sub_23F376E3C();
}

void sub_23F377218()
{
  sub_23F377234();
}

void sub_23F377234()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  const void *v11;
  size_t v12;

  sub_23F3835E0();
  if ((v3 & 1) != 0)
  {
    sub_23F38345C();
    if (v4 != v5)
    {
      sub_23F38357C();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_23F38344C();
    }
  }
  sub_23F3835AC();
  if (v2)
  {
    sub_23F383594(v6, v7, v8, v9, v10);
    v11 = (const void *)sub_23F36682C();
    v12 = j__malloc_size(v11);
    sub_23F383644(v12 - 32);
  }
  else
  {
    v11 = (const void *)MEMORY[0x24BEE4AF8];
  }
  if ((v1 & 1) != 0)
  {
    sub_23F38372C();
    *(_QWORD *)(v0 + 16) = 0;
    sub_23F362D18();
  }
  else
  {
    sub_23F3835D0(v6, v7, (uint64_t)v11 + 32);
  }
  sub_23F383488();
}

void sub_23F3772D0()
{
  sub_23F3780BC();
}

void sub_23F3772EC()
{
  sub_23F376F10();
}

void sub_23F377300()
{
  sub_23F376F10();
}

void sub_23F377314()
{
  sub_23F376F10();
}

void sub_23F377328()
{
  sub_23F376F10();
}

void sub_23F37733C()
{
  sub_23F376F10();
}

void sub_23F377350()
{
  sub_23F376F10();
}

void sub_23F377364()
{
  sub_23F376F10();
}

void sub_23F377378()
{
  sub_23F37738C();
}

void sub_23F37738C()
{
  uint64_t v0;
  void (*v1)(_QWORD, uint64_t, char *, uint64_t);
  char v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  char *v13;
  size_t v14;
  char *v15;
  uint64_t v16;
  char *v17;

  sub_23F383840();
  if ((v5 & 1) != 0)
  {
    sub_23F38345C();
    if (v6 != v7)
    {
      sub_23F38357C();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_23F38344C();
    }
  }
  sub_23F383DD4();
  if (v4)
  {
    sub_23F383594(v8, v9, v10, v11, v12);
    v13 = (char *)sub_23F36682C();
    v14 = j__malloc_size(v13);
    sub_23F383E14(v14 - 32);
  }
  else
  {
    v13 = (char *)MEMORY[0x24BEE4AF8];
  }
  if ((v2 & 1) != 0)
  {
    v15 = (char *)sub_23F384444();
    sub_23F37A9E8(v15, v16, v17);
    *(_QWORD *)(v0 + 16) = 0;
    sub_23F362D18();
  }
  else
  {
    v1(0, v3, v13 + 32, v0);
  }
  sub_23F383488();
}

void sub_23F377438()
{
  sub_23F377454();
}

void sub_23F377454()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  const void *v11;
  size_t v12;

  sub_23F383988();
  sub_23F3835E0();
  if ((v3 & 1) != 0)
  {
    sub_23F38345C();
    if (v4 != v5)
    {
      sub_23F38357C();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_23F38344C();
    }
  }
  sub_23F3835AC();
  if (v2)
  {
    sub_23F383594(v6, v7, v8, v9, v10);
    v11 = (const void *)sub_23F36682C();
    v12 = j__malloc_size(v11);
    sub_23F383754((uint64_t)(v12 - 32) / 24);
  }
  else
  {
    v11 = (const void *)MEMORY[0x24BEE4AF8];
  }
  if ((v1 & 1) != 0)
  {
    sub_23F38372C();
    *(_QWORD *)(v0 + 16) = 0;
    sub_23F362D18();
  }
  else
  {
    sub_23F3835D0(v6, v7, (uint64_t)v11 + 32);
  }
  sub_23F383568();
}

void sub_23F3774F4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  sub_23F383F1C();
  if ((v4 & 1) != 0)
  {
    sub_23F38345C();
    if (v5 != v6)
    {
      sub_23F38357C();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_23F38344C();
    }
  }
  sub_23F383760();
  if (v3)
  {
    sub_23F35D2E8(&qword_256E70508);
    v7 = (_QWORD *)sub_23F36682C();
    j__malloc_size(v7);
    sub_23F3847E4();
    v7[2] = v2;
    v7[3] = v8;
  }
  if ((v1 & 1) != 0)
  {
    v9 = (char *)sub_23F383F74();
    sub_23F37A990(v9, v10, v11);
    *(_QWORD *)(v0 + 16) = 0;
    sub_23F362D18();
  }
  else
  {
    v12 = sub_23F383858();
    sub_23F378BB8(v12, v13, v14, v15);
  }
  sub_23F362B80();
}

void sub_23F377598()
{
  sub_23F3775B4();
}

void sub_23F3775B4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  const void *v11;
  size_t v12;

  sub_23F3835E0();
  if ((v3 & 1) != 0)
  {
    sub_23F38345C();
    if (v4 != v5)
    {
      sub_23F38357C();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_23F38344C();
    }
  }
  sub_23F3835AC();
  if (v2)
  {
    sub_23F383594(v6, v7, v8, v9, v10);
    v11 = (const void *)sub_23F36682C();
    v12 = j__malloc_size(v11);
    sub_23F383644(v12 - 32);
  }
  else
  {
    v11 = (const void *)MEMORY[0x24BEE4AF8];
  }
  if ((v1 & 1) != 0)
  {
    sub_23F38372C();
    *(_QWORD *)(v0 + 16) = 0;
    sub_23F362D18();
  }
  else
  {
    sub_23F3835D0(v6, v7, (uint64_t)v11 + 32);
  }
  sub_23F383488();
}

void sub_23F377650()
{
  sub_23F3776A0();
}

void sub_23F377664()
{
  sub_23F376F10();
}

void sub_23F377678()
{
  sub_23F376E3C();
}

void sub_23F37768C()
{
  sub_23F3776A0();
}

void sub_23F3776A0()
{
  uint64_t v0;
  uint64_t *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  const void *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t *v22;

  sub_23F383840();
  if ((v6 & 1) != 0)
  {
    sub_23F38345C();
    if (v10 != v11)
    {
      sub_23F38357C();
      if (v10)
      {
        __break(1u);
        goto LABEL_22;
      }
      sub_23F38344C();
    }
  }
  else
  {
    v9 = v5;
  }
  v12 = *(_QWORD *)(v0 + 16);
  if (v9 <= v12)
    v13 = *(_QWORD *)(v0 + 16);
  else
    v13 = v9;
  if (!v13)
    goto LABEL_17;
  sub_23F383594(v4, v5, v6, v7, v8);
  sub_23F35D2E8(v1);
  v14 = (const void *)sub_23F383D28();
  j__malloc_size(v14);
  if (!v3 || ((sub_23F3847C0(), v16) ? (v16 = v3 == -1) : (v16 = 0), v16))
  {
LABEL_22:
    sub_23F3833BC();
    sub_23F384B60();
    __break(1u);
    return;
  }
  sub_23F383E14(v15);
LABEL_17:
  sub_23F35D2E8(v1);
  sub_23F38469C();
  if ((v2 & 1) != 0)
  {
    sub_23F37ABEC(v0 + v17, v12);
    *(_QWORD *)(v0 + 16) = 0;
    sub_23F362D18();
  }
  else
  {
    v18 = sub_23F383D4C();
    sub_23F379BFC(v18, v19, v20, v21, v22);
  }
  sub_23F3840C8();
}

void sub_23F3777D8()
{
  sub_23F376F10();
}

void sub_23F3777EC()
{
  sub_23F376F10();
}

void sub_23F377800()
{
  sub_23F377814();
}

void sub_23F377814()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  const void *v11;
  size_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  sub_23F383840();
  if ((v3 & 1) != 0)
  {
    sub_23F38345C();
    if (v4 != v5)
    {
      sub_23F38357C();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_23F38344C();
    }
  }
  sub_23F383DD4();
  if (v2)
  {
    sub_23F383594(v6, v7, v8, v9, v10);
    v11 = (const void *)sub_23F36682C();
    v12 = j__malloc_size(v11);
    sub_23F383E14(v12 - 32);
  }
  if ((v1 & 1) != 0)
  {
    v13 = (char *)sub_23F384444();
    sub_23F37A930(v13, v14, v15);
    *(_QWORD *)(v0 + 16) = 0;
    sub_23F362D18();
  }
  else
  {
    v16 = sub_23F383D4C();
    sub_23F37A000(v16, v17);
  }
  sub_23F383488();
}

void sub_23F3778B8()
{
  sub_23F376F10();
}

void sub_23F3778CC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  sub_23F383F1C();
  if ((v3 & 1) != 0)
  {
    sub_23F38345C();
    if (v4 != v5)
    {
      sub_23F38357C();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_23F38344C();
    }
  }
  sub_23F383760();
  if (v2)
  {
    sub_23F35D2E8(&qword_256E6FD78);
    v6 = (_QWORD *)sub_23F36682C();
    sub_23F3837E8(v6);
  }
  if ((v1 & 1) != 0)
  {
    v7 = (char *)sub_23F383F74();
    sub_23F37A724(v7, v8, v9);
    *(_QWORD *)(v0 + 16) = 0;
    sub_23F362D18();
  }
  else
  {
    v10 = sub_23F383858();
    sub_23F378DC0(v10, v11, v12, v13);
  }
  sub_23F383488();
}

void sub_23F37796C()
{
  sub_23F376F10();
}

void sub_23F377980()
{
  sub_23F376F10();
}

void sub_23F377994()
{
  sub_23F376F10();
}

void sub_23F3779A8()
{
  sub_23F376F10();
}

void sub_23F3779BC()
{
  sub_23F3776A0();
}

void sub_23F3779D0()
{
  sub_23F376F10();
}

void sub_23F3779E4()
{
  sub_23F377A00();
}

void sub_23F377A00()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  const void *v11;
  size_t v12;

  sub_23F383988();
  sub_23F3835E0();
  if ((v3 & 1) != 0)
  {
    sub_23F38345C();
    if (v4 != v5)
    {
      sub_23F38357C();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_23F38344C();
    }
  }
  sub_23F3835AC();
  if (v2)
  {
    sub_23F383594(v6, v7, v8, v9, v10);
    v11 = (const void *)sub_23F36682C();
    v12 = j__malloc_size(v11);
    sub_23F383754((uint64_t)(v12 - 32) / 40);
  }
  else
  {
    v11 = (const void *)MEMORY[0x24BEE4AF8];
  }
  if ((v1 & 1) != 0)
  {
    sub_23F38372C();
    *(_QWORD *)(v0 + 16) = 0;
    sub_23F362D18();
  }
  else
  {
    sub_23F3835D0(v6, v7, (uint64_t)v11 + 32);
  }
  sub_23F383568();
}

void sub_23F377AA0()
{
  sub_23F377A00();
}

void sub_23F377ABC()
{
  sub_23F377234();
}

void sub_23F377AD8()
{
  sub_23F376F10();
}

void sub_23F377AEC()
{
  sub_23F3776A0();
}

void sub_23F377B00()
{
  sub_23F376F10();
}

void sub_23F377B14()
{
  sub_23F377F3C();
}

void sub_23F377B30()
{
  sub_23F376F10();
}

void sub_23F377B44()
{
  sub_23F377F3C();
}

void sub_23F377B60()
{
  sub_23F3776A0();
}

void sub_23F377B74()
{
  sub_23F3775B4();
}

void sub_23F377B90()
{
  sub_23F377814();
}

void sub_23F377BA4()
{
  sub_23F376F10();
}

void sub_23F377BB8()
{
  sub_23F376F10();
}

void sub_23F377BCC()
{
  sub_23F37738C();
}

void sub_23F377BE0()
{
  sub_23F3775B4();
}

void sub_23F377BFC()
{
  sub_23F3776A0();
}

void sub_23F377C10()
{
  sub_23F3776A0();
}

void sub_23F377C24()
{
  sub_23F376E3C();
}

void sub_23F377C38()
{
  sub_23F3776A0();
}

void sub_23F377C4C()
{
  sub_23F376F10();
}

void sub_23F377C60()
{
  sub_23F376F10();
}

void sub_23F377C74()
{
  sub_23F377F3C();
}

void sub_23F377C90()
{
  sub_23F376F10();
}

void sub_23F377CA4()
{
  sub_23F3776A0();
}

void sub_23F377CB8()
{
  sub_23F376F10();
}

void sub_23F377CCC()
{
  sub_23F376F10();
}

void sub_23F377CE0()
{
  sub_23F3775B4();
}

void sub_23F377CFC()
{
  sub_23F377234();
}

void sub_23F377D18()
{
  sub_23F377814();
}

void sub_23F377D2C()
{
  sub_23F377234();
}

void sub_23F377D48()
{
  sub_23F376D70();
}

void sub_23F377D54()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  _QWORD *v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  sub_23F383F1C();
  if ((v4 & 1) != 0)
  {
    sub_23F38345C();
    if (v5 != v6)
    {
      sub_23F38357C();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_23F38344C();
    }
  }
  sub_23F383760();
  if (v3)
  {
    sub_23F35D2E8(&qword_256E6FFE0);
    v7 = (_QWORD *)sub_23F36682C();
    v8 = j__malloc_size(v7);
    v7[2] = v2;
    v7[3] = 2 * ((uint64_t)(v8 - 32) / 192);
  }
  if ((v1 & 1) != 0)
  {
    v9 = (char *)sub_23F383F74();
    sub_23F37AAB4(v9, v10, v11);
    *(_QWORD *)(v0 + 16) = 0;
    sub_23F362D18();
  }
  else
  {
    v12 = sub_23F383858();
    sub_23F379B00(v12, v13, v14, v15);
  }
  sub_23F362B80();
}

void sub_23F377E08()
{
  sub_23F376F10();
}

void sub_23F377E1C()
{
  sub_23F376F10();
}

void sub_23F377E30()
{
  sub_23F376F10();
}

void sub_23F377E44()
{
  sub_23F376E3C();
}

void sub_23F377E58()
{
  sub_23F376F10();
}

void sub_23F377E6C()
{
  sub_23F376F10();
}

void sub_23F377E80()
{
  sub_23F376E3C();
}

void sub_23F377E94()
{
  sub_23F376F10();
}

void sub_23F377EA8()
{
  sub_23F376F10();
}

void sub_23F377EBC()
{
  sub_23F3776A0();
}

void sub_23F377ED0()
{
  sub_23F3776A0();
}

void sub_23F377EE4()
{
  sub_23F376F10();
}

void sub_23F377EF8()
{
  sub_23F376F10();
}

void sub_23F377F0C()
{
  sub_23F376F10();
}

void sub_23F377F20()
{
  sub_23F377F3C();
}

void sub_23F377F3C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  const void *v11;
  size_t v12;

  sub_23F3835E0();
  if ((v3 & 1) != 0)
  {
    sub_23F38345C();
    if (v4 != v5)
    {
      sub_23F38357C();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_23F38344C();
    }
  }
  sub_23F3835AC();
  if (v2)
  {
    sub_23F383594(v6, v7, v8, v9, v10);
    v11 = (const void *)sub_23F36682C();
    v12 = j__malloc_size(v11);
    sub_23F383644(v12 - 32);
  }
  else
  {
    v11 = (const void *)MEMORY[0x24BEE4AF8];
  }
  if ((v1 & 1) != 0)
  {
    sub_23F38372C();
    *(_QWORD *)(v0 + 16) = 0;
    sub_23F362D18();
  }
  else
  {
    sub_23F3835D0(v6, v7, (uint64_t)v11 + 32);
  }
  sub_23F383488();
}

void sub_23F377FD8()
{
  sub_23F376F10();
}

void sub_23F377FEC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  sub_23F383F1C();
  if ((v3 & 1) != 0)
  {
    sub_23F38345C();
    if (v4 != v5)
    {
      sub_23F38357C();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_23F38344C();
    }
  }
  sub_23F383760();
  if (v2)
  {
    sub_23F35D2E8(&qword_256E70118);
    v6 = (_QWORD *)sub_23F36682C();
    sub_23F3837E8(v6);
  }
  if ((v1 & 1) != 0)
  {
    v7 = (char *)sub_23F383F74();
    sub_23F37AC6C(v7, v8, v9);
    *(_QWORD *)(v0 + 16) = 0;
    sub_23F362D18();
  }
  else
  {
    v10 = sub_23F383858();
    sub_23F379D98(v10, v11, v12, v13);
  }
  sub_23F383488();
}

void sub_23F37808C()
{
  sub_23F376F10();
}

void sub_23F3780A0()
{
  sub_23F3780BC();
}

void sub_23F3780BC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  const void *v11;
  size_t v12;

  sub_23F3835E0();
  if ((v3 & 1) != 0)
  {
    sub_23F38345C();
    if (v4 != v5)
    {
      sub_23F38357C();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_23F38344C();
    }
  }
  sub_23F3835AC();
  if (v2)
  {
    sub_23F383594(v6, v7, v8, v9, v10);
    v11 = (const void *)sub_23F36682C();
    v12 = j__malloc_size(v11);
    sub_23F383644(v12 - 32);
  }
  else
  {
    v11 = (const void *)MEMORY[0x24BEE4AF8];
  }
  if ((v1 & 1) != 0)
  {
    sub_23F38372C();
    *(_QWORD *)(v0 + 16) = 0;
    sub_23F362D18();
  }
  else
  {
    sub_23F3835D0(v6, v7, (uint64_t)v11 + 32);
  }
  sub_23F383488();
}

void sub_23F378158()
{
  sub_23F376F10();
}

void sub_23F37816C()
{
  sub_23F376D70();
}

void sub_23F378178()
{
  sub_23F376E3C();
}

void sub_23F37818C()
{
  sub_23F376E3C();
}

void sub_23F3781A0()
{
  sub_23F376F10();
}

void sub_23F3781B4()
{
  sub_23F376F10();
}

void sub_23F3781C8()
{
  sub_23F377814();
}

void sub_23F3781DC()
{
  sub_23F376F10();
}

void sub_23F3781F0()
{
  sub_23F376F10();
}

void sub_23F378204()
{
  sub_23F377454();
}

uint64_t sub_23F378220(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_23F61CA9C();
  __break(1u);
  return result;
}

uint64_t sub_23F37831C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_23F61CA9C();
  __break(1u);
  return result;
}

char *sub_23F378410(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = &__dst[8 * v4];
    if (v5 >= v6 || &v5[8 * v4] <= __dst)
    {
      memcpy(__dst, v5, 8 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_23F61CA9C();
  __break(1u);
  return result;
}

char *sub_23F378500(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_23F61CA9C();
  __break(1u);
  return result;
}

uint64_t sub_23F3785EC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_23F61CA9C();
  __break(1u);
  return result;
}

uint64_t sub_23F3786E8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 88 * a1 + 32;
    v6 = a3 + 88 * v4;
    if (v5 >= v6 || v5 + 88 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_23F61CA9C();
  __break(1u);
  return result;
}

char *sub_23F3787E4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 4 * a1 + 32);
    v6 = &__dst[4 * v4];
    if (v5 >= v6 || &v5[4 * v4] <= __dst)
    {
      memcpy(__dst, v5, 4 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_23F61CA9C();
  __break(1u);
  return result;
}

char *sub_23F3788D4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 2 * a1 + 32);
    v6 = &__dst[2 * v4];
    if (v5 >= v6 || &v5[2 * v4] <= __dst)
    {
      memcpy(__dst, v5, 2 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_23F61CA9C();
  __break(1u);
  return result;
}

char *sub_23F3789C4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 24 * a1 + 32);
    v6 = 3 * v4;
    v7 = &__dst[8 * v6];
    if (v5 >= v7 || &v5[8 * v6] <= __dst)
    {
      memcpy(__dst, v5, 8 * v6);
      swift_bridgeObjectRelease();
      return v7;
    }
  }
  result = (char *)sub_23F61CA9C();
  __break(1u);
  return result;
}

uint64_t sub_23F378ABC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_23F61CA9C();
  __break(1u);
  return result;
}

uint64_t sub_23F378BB8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      sub_23F35D2E8(&qword_256E70510);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_23F61CA9C();
  __break(1u);
  return result;
}

uint64_t sub_23F378CCC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_23F61CA9C();
  __break(1u);
  return result;
}

uint64_t sub_23F378DC0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 72 * a1 + 32;
    v6 = a3 + 72 * v4;
    if (v5 >= v6 || v5 + 72 * v4 <= a3)
    {
      sub_23F35D2E8(&qword_256E70470);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_23F61CA9C();
  __break(1u);
  return result;
}

uint64_t sub_23F378EDC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_23F35D2E8(&qword_256E70558);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_23F61CA9C();
  __break(1u);
  return result;
}

uint64_t sub_23F378FF8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_23F35D2E8(&qword_256E70568);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_23F61CA9C();
  __break(1u);
  return result;
}

uint64_t sub_23F379114(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_23F61CA9C();
  __break(1u);
  return result;
}

uint64_t sub_23F379208(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_23F35D2E8(&qword_256E70410);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_23F61CA9C();
  __break(1u);
  return result;
}

char *sub_23F37931C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 16 * a1 + 32);
    v6 = &__dst[16 * v4];
    if (v5 >= v6 || &v5[16 * v4] <= __dst)
    {
      memcpy(__dst, v5, 16 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_23F61CA9C();
  __break(1u);
  return result;
}

uint64_t sub_23F37940C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_23F61CA9C();
  __break(1u);
  return result;
}

uint64_t sub_23F379500(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_23F61CA9C();
  __break(1u);
  return result;
}

uint64_t sub_23F3795FC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_23F61CA9C();
  __break(1u);
  return result;
}

uint64_t sub_23F3796F4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_23F35D2E8(&qword_256E703F0);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_23F61CA9C();
  __break(1u);
  return result;
}

uint64_t sub_23F379808(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_23F61CA9C();
  __break(1u);
  return result;
}

uint64_t sub_23F3798FC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      type metadata accessor for NLTagScheme(0);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_23F61CA9C();
  __break(1u);
  return result;
}

uint64_t sub_23F379A0C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_23F61CA9C();
  __break(1u);
  return result;
}

uint64_t sub_23F379B00(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 192 * a1 + 32;
    v6 = a3 + 192 * v4;
    if (v5 >= v6 || v5 + 192 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_23F61CA9C();
  __break(1u);
  return result;
}

void sub_23F379BFC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  unint64_t v6;
  char v7;
  BOOL v8;

  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a2 - a1 < 0)
  {
LABEL_9:
    sub_23F3833BC();
    sub_23F383DF4();
    goto LABEL_11;
  }
  sub_23F383594(a1, a2, a3, a4, a5);
  sub_23F383A84();
  if (v7)
    v8 = 0;
  else
    v8 = v6 > a3;
  if (!v8)
  {
    sub_23F38455C();
    sub_23F362D18();
    sub_23F383F28();
    return;
  }
  sub_23F3833BC();
  sub_23F383DE4();
LABEL_11:
  sub_23F3834E4();
  __break(1u);
}

uint64_t sub_23F379CA4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_23F61CA9C();
  __break(1u);
  return result;
}

uint64_t sub_23F379D98(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_23F61CA9C();
  __break(1u);
  return result;
}

char *sub_23F379E94(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if ((v4 & 0x8000000000000000) != 0)
  {
LABEL_9:
    sub_23F3833BC();
    sub_23F383DF4();
    goto LABEL_11;
  }
  v5 = (char *)(a4 + a1 + 32);
  v6 = &__dst[v4];
  if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
  {
    memcpy(__dst, v5, v4);
    sub_23F362D18();
    return v6;
  }
  sub_23F3833BC();
  sub_23F383DE4();
LABEL_11:
  result = (char *)sub_23F3834E4();
  __break(1u);
  return result;
}

void sub_23F379F4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  unint64_t v8;

  v2 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 < 0)
  {
LABEL_9:
    sub_23F3833BC();
    sub_23F383DF4();
    goto LABEL_11;
  }
  sub_23F38478C();
  v8 = v6 + 8 * v3 + 32;
  if (v8 >= v5 + 8 * v2 || v8 + 8 * v2 <= v5)
  {
    sub_23F383594(v3, v4, v5, v6, v7);
    sub_23F3842C4();
    sub_23F362D18();
    sub_23F3837D4();
    return;
  }
  sub_23F3833BC();
  sub_23F383DE4();
LABEL_11:
  sub_23F3834E4();
  __break(1u);
}

void sub_23F37A000(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  unint64_t v8;

  v2 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 < 0)
  {
LABEL_9:
    sub_23F3833BC();
    sub_23F383DF4();
    goto LABEL_11;
  }
  sub_23F38478C();
  v8 = v6 + 40 * v3 + 32;
  if (v8 >= v5 + 40 * v2 || v8 + 40 * v2 <= v5)
  {
    sub_23F383594(v3, v4, v5, v6, v7);
    sub_23F3842C4();
    sub_23F362D18();
    sub_23F3837D4();
    return;
  }
  sub_23F3833BC();
  sub_23F383DE4();
LABEL_11:
  sub_23F3834E4();
  __break(1u);
}

void sub_23F37A0BC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  unint64_t v6;
  char v7;
  BOOL v8;

  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a2 - a1 < 0)
  {
LABEL_9:
    sub_23F3833BC();
    sub_23F383DF4();
    goto LABEL_11;
  }
  sub_23F3846DC(a1, a2, a3, a4, a5);
  sub_23F383A84();
  if (v7)
    v8 = 0;
  else
    v8 = v6 > a3;
  if (!v8)
  {
    sub_23F38455C();
    sub_23F362D18();
    sub_23F383F28();
    return;
  }
  sub_23F3833BC();
  sub_23F383DE4();
LABEL_11:
  sub_23F3834E4();
  __break(1u);
}

uint64_t sub_23F37A164(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_23F35D2E8(&qword_256E70088);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_23F61CA9C();
  __break(1u);
  return result;
}

char *sub_23F37A280(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_23F3833BC();
    result = (char *)sub_23F383498();
    __break(1u);
  }
  else if (a3 != result || &result[16 * a2] <= a3)
  {
    return (char *)sub_23F3834B0(a3, result);
  }
  return result;
}

char *sub_23F37A2D8(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_23F61CA9C();
    __break(1u);
  }
  else if (__dst != __src || &__src[24 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 24 * a2);
  }
  return __src;
}

char *sub_23F37A364(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_23F61CA9C();
    __break(1u);
  }
  else if (__dst != __src || &__src[8 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 8 * a2);
  }
  return __src;
}

char *sub_23F37A3E8(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __src = (char *)sub_23F61CA9C();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

char *sub_23F37A468(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_23F61CA9C();
    __break(1u);
  }
  else if (__dst != __src || &__src[40 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 40 * a2);
  }
  return __src;
}

void sub_23F37A4F4(uint64_t a1, uint64_t a2)
{
  sub_23F37AD04(a1, a2);
}

char *sub_23F37A500(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_23F61CA9C();
    __break(1u);
  }
  else if (__dst != __src || &__src[88 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 88 * a2);
  }
  return __src;
}

char *sub_23F37A58C(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_23F61CA9C();
    __break(1u);
  }
  else if (__dst != __src || &__src[4 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 4 * a2);
  }
  return __src;
}

char *sub_23F37A610(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_23F61CA9C();
    __break(1u);
  }
  else if (__dst != __src || &__src[2 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 2 * a2);
  }
  return __src;
}

void sub_23F37A694(uint64_t a1, uint64_t a2)
{
  sub_23F37AD04(a1, a2);
}

char *sub_23F37A6A0(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_23F61CA9C();
    __break(1u);
  }
  else if (__dst != __src || &__src[64 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, a2 << 6);
  }
  return __src;
}

char *sub_23F37A724(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_23F61CA9C();
    __break(1u);
  }
  else if (__dst != __src || &__src[72 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 72 * a2);
  }
  return __src;
}

char *sub_23F37A7AC(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_23F61CA9C();
    __break(1u);
  }
  else if (__dst != __src || &__src[16 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 16 * a2);
  }
  return __src;
}

char *sub_23F37A830(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_23F3833BC();
    result = (char *)sub_23F383498();
    __break(1u);
  }
  else if (a3 != result || &result[24 * a2] <= a3)
  {
    return (char *)sub_23F3834B0(a3, result);
  }
  return result;
}

char *sub_23F37A890(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_23F61CA9C();
    __break(1u);
  }
  else if (__dst != __src || &__src[32 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 32 * a2);
  }
  return __src;
}

void sub_23F37A914(uint64_t a1, uint64_t a2)
{
  sub_23F37ABEC(a1, a2);
}

void sub_23F37A920(uint64_t a1, uint64_t a2)
{
  sub_23F37AD04(a1, a2);
}

char *sub_23F37A930(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_23F3833BC();
    result = (char *)sub_23F383498();
    __break(1u);
  }
  else if (a3 != result || &result[40 * a2] <= a3)
  {
    return (char *)sub_23F3834B0(a3, result);
  }
  return result;
}

char *sub_23F37A990(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_23F3833BC();
    result = (char *)sub_23F383498();
    __break(1u);
  }
  else if (a3 != result || &result[32 * a2] <= a3)
  {
    return (char *)sub_23F3834B0(a3, result);
  }
  return result;
}

char *sub_23F37A9E8(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_23F3833BC();
    result = (char *)sub_23F383498();
    __break(1u);
  }
  else if (a3 != result || &result[24 * a2] <= a3)
  {
    return (char *)sub_23F3834B0(a3, result);
  }
  return result;
}

char *sub_23F37AA44(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_23F3833BC();
    result = (char *)sub_23F383498();
    __break(1u);
  }
  else if (a3 != result || &result[8 * a2] <= a3)
  {
    return (char *)sub_23F3834B0(a3, result);
  }
  return result;
}

void sub_23F37AA9C(uint64_t a1, uint64_t a2)
{
  sub_23F37AD04(a1, a2);
}

void sub_23F37AAA8(uint64_t a1, uint64_t a2)
{
  sub_23F37ABEC(a1, a2);
}

char *sub_23F37AAB4(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_23F61CA9C();
    __break(1u);
  }
  else if (__dst != __src || &__src[192 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 192 * a2);
  }
  return __src;
}

char *sub_23F37AB3C(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_23F61CA9C();
    __break(1u);
  }
  else if (__dst != __src || &__src[80 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 80 * a2);
  }
  return __src;
}

void sub_23F37ABC8(uint64_t a1, uint64_t a2)
{
  sub_23F37AD04(a1, a2);
}

void sub_23F37ABD4(uint64_t a1, uint64_t a2)
{
  sub_23F37ABEC(a1, a2);
}

void sub_23F37ABE0(uint64_t a1, uint64_t a2)
{
  sub_23F37ABEC(a1, a2);
}

void sub_23F37ABEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;

  if (a2 < 0)
  {
    sub_23F3833BC();
    sub_23F383498();
    __break(1u);
  }
  else
  {
    sub_23F3845FC();
    if (v4 && (sub_23F384980(), sub_23F384B20(), !v5 & v4))
    {
      if (v3 == v2)
      {
        sub_23F383F28();
      }
      else
      {
        sub_23F383CB0();
        sub_23F383F38();
      }
    }
    else
    {
      sub_23F384980();
      sub_23F383CB0();
      sub_23F383F48();
    }
  }
}

char *sub_23F37AC6C(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_23F61CA9C();
    __break(1u);
  }
  else if (__dst != __src || &__src[48 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 48 * a2);
  }
  return __src;
}

void sub_23F37ACF8(uint64_t a1, uint64_t a2)
{
  sub_23F37AD04(a1, a2);
}

void sub_23F37AD04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;

  if (a2 < 0)
  {
    sub_23F3833BC();
    sub_23F383498();
    __break(1u);
  }
  else
  {
    sub_23F3845FC();
    if (v4 && (sub_23F3843B0(), sub_23F384B20(), !v5 & v4))
    {
      if (v3 == v2)
      {
        sub_23F383F28();
      }
      else
      {
        sub_23F383CB0();
        sub_23F383F38();
      }
    }
    else
    {
      sub_23F3843B0();
      sub_23F383CB0();
      sub_23F383F48();
    }
  }
}

void sub_23F37AD84(void (*a1)(void))
{
  a1();
  sub_23F362928();
}

void sub_23F37ADA0(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = a4();
  sub_23F37AE00(v6, v7, a3);
  v8 = *a1 + 8;
  sub_23F61C790();
  sub_23F362984();
  *a1 = v8;
  sub_23F38454C();
}

void sub_23F37AE00(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  unint64_t v3;
  uint64_t v4;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[3];
  uint64_t ObjectType;

  sub_23F384780();
  sub_23F36679C();
  v9 = sub_23F37AEB8(v6, v7, v8, 1, v4, v3);
  if (v9)
  {
    v10 = v9;
    ObjectType = swift_getObjectType();
    v13[0] = v10;
    v11 = *a3;
    if (*a3)
    {
      sub_23F382B64((uint64_t)v13, *a3);
      *a3 = v11 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v13[0] = v4;
    v13[1] = v3;
    v12 = *a3;
    if (*a3)
    {
      sub_23F382B64((uint64_t)v13, *a3);
      *a3 = v12 + 32;
    }
    sub_23F617BA0();
  }
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v13);
  sub_23F3837D4();
}

uint64_t sub_23F37AEB8(_QWORD *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_23F37B00C((char *)__src, HIBYTE(a6) & 0xF, __dst);
      sub_23F61C79C();
      result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    result = sub_23F37B0D0(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    v8 = sub_23F61C934();
    if (!v8)
    {
      result = sub_23F61CA54();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

void *sub_23F37B00C(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) == 0 && (&__dst[__n] <= __src || &__src[__n] <= __dst))
    return memcpy(__dst, __src, __n);
  result = (void *)sub_23F61CA9C();
  __break(1u);
  return result;
}

uint64_t sub_23F37B0D0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_23F37B164(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = (uint64_t)sub_23F37B2D4(0, *(_QWORD *)(v2 + 16) + 1, 1, v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = (uint64_t)sub_23F37B2D4((char *)(v3 > 1), v4 + 1, 1, v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_23F37B164(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
  {
    v2 = sub_23F61C2B0();
    if (v2)
      goto LABEL_6;
    return MEMORY[0x24BEE4AF8];
  }
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
    return MEMORY[0x24BEE4AF8];
LABEL_6:
  sub_23F504DD8(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v4 = v3;
    v5 = sub_23F61C8EC();
    if ((v6 & 1) != 0 || v5 != v2)
      goto LABEL_14;
    return v4;
  }
  sub_23F61CA9C();
  __break(1u);
LABEL_14:
  result = sub_23F61CA54();
  __break(1u);
  return result;
}

char *sub_23F37B2D4(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_23F35D2E8(&qword_256E70320);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_23F37A3E8(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_23F37B3A8(v13, v8, v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_23F37B3A8(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) == 0 && (&__dst[__n] <= __src || &__src[__n] <= __dst))
    return memcpy(__dst, __src, __n);
  result = (void *)sub_23F61CA9C();
  __break(1u);
  return result;
}

_BYTE **sub_23F37B46C(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

void sub_23F37B47C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37D2C0();
  *v0 = v1;
}

void sub_23F37B4B0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C798();
  *v0 = v1;
}

void sub_23F37B4E4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C798();
  *v0 = v1;
}

void sub_23F37B518()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C834();
  *v0 = v1;
}

void sub_23F37B54C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C8F8();
  *v0 = v1;
}

void sub_23F37B580()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C798();
  *v0 = v1;
}

void sub_23F37B5B4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C8F8();
  *v0 = v1;
}

void sub_23F37B5E8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C798();
  *v0 = v1;
}

void sub_23F37B61C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C798();
  *v0 = v1;
}

uint64_t sub_23F37B650(uint64_t a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23F37C994(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

uint64_t sub_23F37B66C(uint64_t a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23F37CA68(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

void sub_23F37B688()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37D204();
  *v0 = v1;
}

void sub_23F37B6BC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C834();
  *v0 = v1;
}

void sub_23F37B6F0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C798();
  *v0 = v1;
}

void sub_23F37B724()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C834();
  *v0 = v1;
}

void sub_23F37B758()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C834();
  *v0 = v1;
}

void sub_23F37B78C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C834();
  *v0 = v1;
}

void sub_23F37B7C0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C798();
  *v0 = v1;
}

void sub_23F37B7F4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C798();
  *v0 = v1;
}

char *sub_23F37B828(char *a1, int64_t a2, char a3)
{
  uint64_t *v3;
  char *result;

  result = sub_23F37CB74(a1, a2, a3, *v3);
  *v3 = (uint64_t)result;
  return result;
}

uint64_t sub_23F37B844(uint64_t a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23F37CC5C(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

uint64_t sub_23F37B860(uint64_t a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23F37CD3C(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

void sub_23F37B87C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37CEDC();
  *v0 = v1;
}

void sub_23F37B8A8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C834();
  *v0 = v1;
}

void sub_23F37B8DC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37D2C0();
  *v0 = v1;
}

void sub_23F37B910()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37CE24();
  *v0 = v1;
}

void sub_23F37B92C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C798();
  *v0 = v1;
}

void sub_23F37B960()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C798();
  *v0 = v1;
}

void sub_23F37B994()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37CEDC();
  *v0 = v1;
}

void sub_23F37B9C0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37CFB0();
  *v0 = v1;
}

void sub_23F37B9F4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C798();
  *v0 = v1;
}

void sub_23F37BA28()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C834();
  *v0 = v1;
}

void sub_23F37BA5C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C798();
  *v0 = v1;
}

void sub_23F37BA90()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37CFB0();
  *v0 = v1;
}

void sub_23F37BAC4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37CFB0();
  *v0 = v1;
}

void sub_23F37BAF8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37D2C0();
  *v0 = v1;
}

void sub_23F37BB2C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C834();
  *v0 = v1;
}

void sub_23F37BB60()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C834();
  *v0 = v1;
}

void sub_23F37BB94()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37D0AC();
  *v0 = v1;
}

void sub_23F37BBC0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C834();
  *v0 = v1;
}

void sub_23F37BBF4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C834();
  *v0 = v1;
}

void sub_23F37BC28()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C798();
  *v0 = v1;
}

void sub_23F37BC5C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C834();
  *v0 = v1;
}

void sub_23F37BC90()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C834();
  *v0 = v1;
}

void sub_23F37BCC4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37D14C();
  *v0 = v1;
}

void sub_23F37BCF8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C834();
  *v0 = v1;
}

void sub_23F37BD2C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37D204();
  *v0 = v1;
}

void sub_23F37BD60()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37CFB0();
  *v0 = v1;
}

void sub_23F37BD94()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C834();
  *v0 = v1;
}

void sub_23F37BDC8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37D0AC();
  *v0 = v1;
}

void sub_23F37BDF4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C834();
  *v0 = v1;
}

void sub_23F37BE28()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37CFB0();
  *v0 = v1;
}

void sub_23F37BE5C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C798();
  *v0 = v1;
}

void sub_23F37BE90()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C834();
  *v0 = v1;
}

void sub_23F37BEC4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C834();
  *v0 = v1;
}

void sub_23F37BEF8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37CFB0();
  *v0 = v1;
}

void sub_23F37BF2C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37D2C0();
  *v0 = v1;
}

void sub_23F37BF60()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37D2C0();
  *v0 = v1;
}

void sub_23F37BF94()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37CEDC();
  *v0 = v1;
}

void sub_23F37BFC0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37D14C();
  *v0 = v1;
}

void sub_23F37BFF4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C834();
  *v0 = v1;
}

void sub_23F37C028()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C834();
  *v0 = v1;
}

void sub_23F37C05C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37CFB0();
  *v0 = v1;
}

void sub_23F37C090()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37D204();
  *v0 = v1;
}

void sub_23F37C0C4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C798();
  *v0 = v1;
}

void sub_23F37C0F8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C834();
  *v0 = v1;
}

void sub_23F37C12C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C834();
  *v0 = v1;
}

void sub_23F37C160()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37CFB0();
  *v0 = v1;
}

void sub_23F37C194()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37D14C();
  *v0 = v1;
}

void sub_23F37C1C8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C834();
  *v0 = v1;
}

void sub_23F37C1FC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C834();
  *v0 = v1;
}

void sub_23F37C230()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C834();
  *v0 = v1;
}

void sub_23F37C264()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C834();
  *v0 = v1;
}

void sub_23F37C298()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C834();
  *v0 = v1;
}

void sub_23F37C2CC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37CFB0();
  *v0 = v1;
}

void sub_23F37C300()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37CFB0();
  *v0 = v1;
}

void sub_23F37C334()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37CFB0();
  *v0 = v1;
}

void sub_23F37C368()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37CFB0();
  *v0 = v1;
}

char *sub_23F37C39C(char *a1, int64_t a2, char a3)
{
  uint64_t *v3;
  char *result;

  result = sub_23F37D394(a1, a2, a3, *v3);
  *v3 = (uint64_t)result;
  return result;
}

void sub_23F37C3B8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C834();
  *v0 = v1;
}

void sub_23F37C3EC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C834();
  *v0 = v1;
}

void sub_23F37C420()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37CFB0();
  *v0 = v1;
}

void sub_23F37C454()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37CFB0();
  *v0 = v1;
}

void sub_23F37C488()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37CFB0();
  *v0 = v1;
}

void sub_23F37C4BC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C834();
  *v0 = v1;
}

void sub_23F37C4F0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C834();
  *v0 = v1;
}

void sub_23F37C524()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C834();
  *v0 = v1;
}

void sub_23F37C558()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C834();
  *v0 = v1;
}

void sub_23F37C58C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C834();
  *v0 = v1;
}

void sub_23F37C5C0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C834();
  *v0 = v1;
}

void sub_23F37C5F4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37D14C();
  *v0 = v1;
}

void sub_23F37C628()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C834();
  *v0 = v1;
}

void sub_23F37C65C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C834();
  *v0 = v1;
}

void sub_23F37C690()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C834();
  *v0 = v1;
}

void sub_23F37C6C4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C834();
  *v0 = v1;
}

void sub_23F37C6F8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C834();
  *v0 = v1;
}

void sub_23F37C72C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F37C798();
  *v0 = v1;
}

void sub_23F37C760()
{
  sub_23F37D2C0();
}

void sub_23F37C77C()
{
  sub_23F37C834();
}

void sub_23F37C798()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  const void *v13;
  size_t v14;
  uint64_t v15;

  sub_23F38367C();
  if ((v5 & 1) != 0)
  {
    sub_23F38345C();
    if (v6 != v7)
    {
      sub_23F38357C();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_23F38344C();
    }
  }
  sub_23F3835AC();
  if (v4)
  {
    sub_23F383594(v8, v9, v10, v11, v12);
    v13 = (const void *)sub_23F36682C();
    v14 = j__malloc_size(v13);
    sub_23F383644(v14 - 32);
  }
  v15 = sub_23F383DB4();
  if ((v3 & 1) != 0)
  {
    v2(v15);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v15);
  }
  sub_23F3668FC();
  sub_23F383488();
}

void sub_23F37C834()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  const void *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_23F362ABC();
  sub_23F38367C();
  if ((v6 & 1) != 0)
  {
    sub_23F38345C();
    if (v10 != v11)
    {
      sub_23F38357C();
      if (v10)
      {
LABEL_23:
        __break(1u);
        return;
      }
      sub_23F38344C();
    }
  }
  else
  {
    v9 = v5;
  }
  if (v9 <= *(_QWORD *)(v0 + 16))
    v12 = *(_QWORD *)(v0 + 16);
  else
    v12 = v9;
  if (!v12)
    goto LABEL_17;
  sub_23F383594(v4, v5, v6, v7, v8);
  sub_23F383850();
  v13 = (const void *)sub_23F383CF0();
  j__malloc_size(v13);
  if (!v3)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  sub_23F3847C0();
  v15 = v15 && v3 == -1;
  if (v15)
    goto LABEL_22;
  sub_23F383754(v14 / v3);
LABEL_17:
  v16 = sub_23F383850();
  v17 = sub_23F384148(v16);
  if ((v2 & 1) != 0)
  {
    sub_23F37AD04(v17, v18);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v17);
  }
  sub_23F3668FC();
  sub_23F362948();
}

void sub_23F37C8F8()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  const void *v13;
  size_t v14;
  uint64_t v15;

  sub_23F38367C();
  if ((v5 & 1) != 0)
  {
    sub_23F38345C();
    if (v6 != v7)
    {
      sub_23F38357C();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_23F38344C();
    }
  }
  sub_23F3835AC();
  if (v4)
  {
    sub_23F383594(v8, v9, v10, v11, v12);
    v13 = (const void *)sub_23F36682C();
    v14 = j__malloc_size(v13);
    sub_23F383644(v14 - 32);
  }
  v15 = sub_23F383DB4();
  if ((v3 & 1) != 0)
  {
    v2(v15);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v15);
  }
  sub_23F3668FC();
  sub_23F383488();
}

uint64_t sub_23F37C994(uint64_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  size_t v11;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_23F35D2E8(&qword_256E6FDD8);
    v10 = swift_allocObject();
    v11 = j__malloc_size((const void *)v10);
    *(_QWORD *)(v10 + 16) = v8;
    *(_QWORD *)(v10 + 24) = 2 * v11 - 64;
  }
  else
  {
    v10 = MEMORY[0x24BEE4AF8];
  }
  if ((v5 & 1) != 0)
  {
    sub_23F37A3E8((char *)(a4 + 32), v8, (char *)(v10 + 32));
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_23F3C18DC();
  }
  swift_release();
  return v10;
}

uint64_t sub_23F37CA68(uint64_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  size_t v11;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_23F35D2E8(&qword_256E6FDE0);
    v10 = swift_allocObject();
    v11 = j__malloc_size((const void *)v10);
    *(_QWORD *)(v10 + 16) = v8;
    *(_QWORD *)(v10 + 24) = 2 * v11 - 64;
  }
  else
  {
    v10 = MEMORY[0x24BEE4AF8];
  }
  if ((v5 & 1) != 0)
  {
    sub_23F37A3E8((char *)(a4 + 32), v8, (char *)(v10 + 32));
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_23F3C18DC();
  }
  swift_release();
  return v10;
}

void sub_23F37CB3C()
{
  sub_23F37C834();
}

void sub_23F37CB58()
{
  sub_23F37C834();
}

char *sub_23F37CB74(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_23F35D2E8(&qword_256E6FD60);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_23F37A9E8(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_23F3C1BB0((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

uint64_t sub_23F37CC5C(uint64_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_23F35D2E8(&qword_256E70468);
    v10 = swift_allocObject();
    v11 = j__malloc_size((const void *)v10);
    *(_QWORD *)(v10 + 16) = v8;
    *(_QWORD *)(v10 + 24) = 2 * ((uint64_t)(v11 - 32) / 64);
  }
  else
  {
    v10 = MEMORY[0x24BEE4AF8];
  }
  if ((v5 & 1) != 0)
  {
    sub_23F37A6A0((char *)(a4 + 32), v8, (char *)(v10 + 32));
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_23F3C1C50();
  }
  swift_release();
  return v10;
}

uint64_t sub_23F37CD3C(uint64_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  char *v12;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_23F35D2E8(&qword_256E6FD78);
    v10 = swift_allocObject();
    v11 = j__malloc_size((const void *)v10);
    *(_QWORD *)(v10 + 16) = v8;
    *(_QWORD *)(v10 + 24) = 2 * ((uint64_t)(v11 - 32) / 72);
  }
  else
  {
    v10 = MEMORY[0x24BEE4AF8];
  }
  v12 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_23F37A724(v12, v8, (char *)(v10 + 32));
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_23F3C1CE4((uint64_t)v12, v8);
  }
  swift_release();
  return v10;
}

void sub_23F37CE24()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  char *v9;

  sub_23F383F1C();
  if ((v3 & 1) != 0)
  {
    sub_23F38345C();
    if (v4 != v5)
    {
      sub_23F38357C();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_23F38344C();
    }
  }
  sub_23F383760();
  if (v2)
  {
    sub_23F35D2E8(&qword_256E6FD50);
    v6 = (_QWORD *)sub_23F36682C();
    sub_23F3837E8(v6);
  }
  v7 = (char *)sub_23F383F74();
  if ((v1 & 1) != 0)
  {
    sub_23F37A830(v7, v8, v9);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    sub_23F3C1E20();
  }
  sub_23F3668FC();
  sub_23F383488();
}

void sub_23F37CEC0()
{
  sub_23F37C798();
}

void sub_23F37CEDC()
{
  uint64_t v0;
  void (*v1)(char *);
  char v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  _QWORD *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;

  sub_23F383840();
  if ((v5 & 1) != 0)
  {
    sub_23F38345C();
    if (v6 != v7)
    {
      sub_23F38357C();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_23F38344C();
    }
  }
  sub_23F383DD4();
  if (v4)
  {
    sub_23F383594(v8, v9, v10, v11, v12);
    v13 = (_QWORD *)sub_23F36682C();
    j__malloc_size(v13);
    sub_23F3847E4();
    v13[2] = v3;
    v13[3] = v14;
  }
  v15 = (char *)sub_23F384444();
  if ((v2 & 1) != 0)
  {
    sub_23F37A990(v15, v16, v17);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v15);
  }
  sub_23F3668FC();
  sub_23F383488();
}

void sub_23F37CF78()
{
  sub_23F37CFB0();
}

void sub_23F37CF94()
{
  sub_23F37CFB0();
}

void sub_23F37CFB0()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  const void *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_23F362ABC();
  sub_23F38367C();
  if ((v6 & 1) != 0)
  {
    sub_23F38345C();
    if (v10 != v11)
    {
      sub_23F38357C();
      if (v10)
      {
LABEL_23:
        __break(1u);
        return;
      }
      sub_23F38344C();
    }
  }
  else
  {
    v9 = v5;
  }
  if (v9 <= *(_QWORD *)(v0 + 16))
    v12 = *(_QWORD *)(v0 + 16);
  else
    v12 = v9;
  if (!v12)
    goto LABEL_17;
  sub_23F383594(v4, v5, v6, v7, v8);
  sub_23F384838();
  v13 = (const void *)sub_23F383CF0();
  j__malloc_size(v13);
  if (!v3)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  sub_23F3847C0();
  v15 = v15 && v3 == -1;
  if (v15)
    goto LABEL_22;
  sub_23F383754(v14 / v3);
LABEL_17:
  v16 = sub_23F384838();
  v17 = sub_23F384148(v16);
  if ((v2 & 1) != 0)
  {
    sub_23F37ABEC(v17, v18);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v17);
  }
  sub_23F3668FC();
  sub_23F362948();
}

void sub_23F37D074()
{
  sub_23F37C834();
}

void sub_23F37D090()
{
  sub_23F37C798();
}

void sub_23F37D0AC()
{
  uint64_t v0;
  void (*v1)(char *);
  char v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  const void *v12;
  size_t v13;
  char *v14;
  uint64_t v15;
  char *v16;

  sub_23F383840();
  if ((v4 & 1) != 0)
  {
    sub_23F38345C();
    if (v5 != v6)
    {
      sub_23F38357C();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_23F38344C();
    }
  }
  sub_23F383DD4();
  if (v3)
  {
    sub_23F383594(v7, v8, v9, v10, v11);
    v12 = (const void *)sub_23F36682C();
    v13 = j__malloc_size(v12);
    sub_23F383E14(v13 - 32);
  }
  v14 = (char *)sub_23F384444();
  if ((v2 & 1) != 0)
  {
    sub_23F37A930(v14, v15, v16);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v14);
  }
  sub_23F3668FC();
  sub_23F383488();
}

void sub_23F37D14C()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  const void *v13;
  size_t v14;
  uint64_t v15;

  sub_23F38367C();
  if ((v5 & 1) != 0)
  {
    sub_23F38345C();
    if (v6 != v7)
    {
      sub_23F38357C();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_23F38344C();
    }
  }
  sub_23F3835AC();
  if (v4)
  {
    sub_23F383594(v8, v9, v10, v11, v12);
    v13 = (const void *)sub_23F36682C();
    v14 = j__malloc_size(v13);
    sub_23F383644(v14 - 32);
  }
  v15 = sub_23F383DB4();
  if ((v3 & 1) != 0)
  {
    v2(v15);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v15);
  }
  sub_23F3668FC();
  sub_23F383488();
}

void sub_23F37D1E8()
{
  sub_23F37D204();
}

void sub_23F37D204()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  const void *v13;
  size_t v14;
  uint64_t v15;

  sub_23F383988();
  sub_23F38367C();
  if ((v5 & 1) != 0)
  {
    sub_23F38345C();
    if (v6 != v7)
    {
      sub_23F38357C();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_23F38344C();
    }
  }
  sub_23F3835AC();
  if (v4)
  {
    sub_23F383594(v8, v9, v10, v11, v12);
    v13 = (const void *)sub_23F36682C();
    v14 = j__malloc_size(v13);
    sub_23F383754((uint64_t)(v14 - 32) / 40);
  }
  v15 = sub_23F383DB4();
  if ((v3 & 1) != 0)
  {
    v2(v15);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v15);
  }
  sub_23F3668FC();
  sub_23F383568();
}

void sub_23F37D2A4()
{
  sub_23F37C798();
}

void sub_23F37D2C0()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  const void *v13;
  size_t v14;
  uint64_t v15;

  sub_23F38367C();
  if ((v5 & 1) != 0)
  {
    sub_23F38345C();
    if (v6 != v7)
    {
      sub_23F38357C();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_23F38344C();
    }
  }
  sub_23F3835AC();
  if (v4)
  {
    sub_23F383594(v8, v9, v10, v11, v12);
    v13 = (const void *)sub_23F36682C();
    v14 = j__malloc_size(v13);
    sub_23F383644(v14 - 32);
  }
  v15 = sub_23F383DB4();
  if ((v3 & 1) != 0)
  {
    v2(v15);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v15);
  }
  sub_23F3668FC();
  sub_23F383488();
}

void sub_23F37D35C()
{
  sub_23F37C834();
}

void sub_23F37D378()
{
  sub_23F37CFB0();
}

char *sub_23F37D394(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_23F35D2E8(&qword_256E70190);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 80);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_23F37AB3C(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_23F3C28B4((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

void sub_23F37D47C()
{
  sub_23F37CFB0();
}

void sub_23F37D498()
{
  sub_23F37CFB0();
}

uint64_t sub_23F37D4B4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v3 = v2;
  sub_23F617BA0();
  v6 = sub_23F3754E8(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    swift_isUniquelyReferenced_nonNull_native();
    v12 = *v3;
    *v3 = 0x8000000000000000;
    sub_23F35D2E8(&qword_256E70068);
    sub_23F61CA18();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 = *(_QWORD *)(v12 + 56);
    v9 = sub_23F6188FC();
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a2, v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v6, v9);
    sub_23F382BA0();
    sub_23F61CA30();
    *v3 = v12;
    swift_bridgeObjectRelease();
    return sub_23F36196C(a2, 0, 1, v9);
  }
  else
  {
    v11 = sub_23F6188FC();
    return sub_23F36196C(a2, 1, 1, v11);
  }
}

uint64_t sub_23F37D60C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  sub_23F383668();
  v1 = v0;
  sub_23F383E5C();
  sub_23F375614();
  v3 = v2;
  v5 = v4;
  sub_23F3837B0();
  if ((v5 & 1) != 0)
  {
    sub_23F384544();
    sub_23F383954();
    sub_23F35D2E8(&qword_256E6FB50);
    sub_23F383C80();
    v6 = *(_QWORD *)(v18 + 48);
    sub_23F366770();
    v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BE55070];
    sub_23F38380C();
    sub_23F383CA8(v6 + v8 * v3, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
    v10 = *(_QWORD *)(v18 + 56);
    sub_23F3838F0();
    sub_23F38380C();
    sub_23F384840(v1, v10 + v11 * v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 32));
    sub_23F3612C0((unint64_t *)&qword_256E6FA98, v7, MEMORY[0x24BE55080]);
    sub_23F3840E0();
    sub_23F3842B0();
    sub_23F384A9C();
  }
  else
  {
    sub_23F3838F0();
    v13 = sub_23F3835F4();
  }
  return sub_23F3836D8(v13, v14, v15, v16);
}

uint64_t sub_23F37D6F4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_23F383668();
  v2 = v1;
  v3 = v0;
  v5 = v4;
  sub_23F384324();
  v6 = sub_23F3848D8();
  v10 = sub_23F37568C(v6, v7, v8, v9);
  v12 = v11;
  sub_23F38432C();
  if ((v12 & 1) != 0)
  {
    sub_23F384544();
    v22 = *v3;
    *v3 = 0x8000000000000000;
    sub_23F35D2E8(v2);
    sub_23F3841D4();
    swift_bridgeObjectRelease();
    v13 = *(_QWORD *)(v22 + 56);
    v14 = sub_23F3843B0();
    sub_23F38380C();
    sub_23F384918(v5, v13 + v15 * v10, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 32));
    sub_23F3848D8();
    sub_23F61CA30();
    sub_23F3842B0();
    return sub_23F3836D8(v5, 0, 1, v14);
  }
  else
  {
    sub_23F3843B0();
    v18 = sub_23F3835F4();
    return sub_23F3836D8(v18, v19, v20, v21);
  }
}

uint64_t sub_23F37D800@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v2 = v1;
  sub_23F617BA0();
  sub_23F3757B0();
  v5 = v4;
  v7 = v6;
  swift_bridgeObjectRelease();
  if ((v7 & 1) != 0)
  {
    swift_isUniquelyReferenced_nonNull_native();
    v15 = *v2;
    *v2 = 0x8000000000000000;
    sub_23F35D2E8(&qword_256E70478);
    sub_23F61CA18();
    v8 = *(_QWORD *)(v15 + 48);
    v9 = sub_23F617000();
    v10 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v5, v9);
    v11 = *(_QWORD *)(v15 + 56);
    v12 = sub_23F61B5D8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, v11 + *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * v5, v12);
    sub_23F3612C0((unint64_t *)&qword_256E70430, v10, MEMORY[0x24BDCEA88]);
    sub_23F61CA30();
    *v2 = v15;
    swift_bridgeObjectRelease();
    return sub_23F36196C(a1, 0, 1, v12);
  }
  else
  {
    v14 = sub_23F61B5D8();
    return sub_23F36196C(a1, 1, 1, v14);
  }
}

uint64_t sub_23F37D978@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v2 = v1;
  sub_23F617BA0();
  sub_23F375424();
  v5 = v4;
  v7 = v6;
  swift_bridgeObjectRelease();
  if ((v7 & 1) != 0)
  {
    swift_isUniquelyReferenced_nonNull_native();
    v15 = *v2;
    *v2 = 0x8000000000000000;
    sub_23F35D2E8(&qword_256E70428);
    sub_23F61CA18();
    v8 = *(_QWORD *)(v15 + 48);
    v9 = sub_23F6184B8();
    v10 = (uint64_t (*)(uint64_t))MEMORY[0x24BE549B8];
    v11 = *(_QWORD *)(v9 - 8);
    v12 = *(_QWORD *)(v11 + 72) * v5;
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v8 + v12, v9);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(a1, *(_QWORD *)(v15 + 56) + v12, v9);
    sub_23F3612C0(&qword_256E6FCF0, v10, MEMORY[0x24BE549C8]);
    sub_23F61CA30();
    *v2 = v15;
    swift_bridgeObjectRelease();
    return sub_23F36196C(a1, 0, 1, v9);
  }
  else
  {
    v14 = sub_23F6184B8();
    return sub_23F36196C(a1, 1, 1, v14);
  }
}

uint64_t sub_23F37DAE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v2 = v1;
  sub_23F617BA0();
  v4 = sub_23F375878();
  v6 = v5;
  swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
  {
    swift_isUniquelyReferenced_nonNull_native();
    v14 = *v2;
    *v2 = 0x8000000000000000;
    sub_23F35D2E8(&qword_256E6FE58);
    sub_23F61CA18();
    v7 = *(_QWORD *)(v14 + 48);
    v8 = sub_23F61B92C();
    v9 = (uint64_t (*)(uint64_t))MEMORY[0x24BEB9A18];
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * v4, v8);
    v10 = *(_QWORD *)(v14 + 56);
    v11 = type metadata accessor for DialogValuesResolver.CollectedValue(0);
    sub_23F36262C(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v4, a1, type metadata accessor for DialogValuesResolver.CollectedValue);
    sub_23F3612C0(&qword_256E6FE60, v9, MEMORY[0x24BEB9A30]);
    sub_23F61CA30();
    *v2 = v14;
    swift_bridgeObjectRelease();
    return sub_23F36196C(a1, 0, 1, v11);
  }
  else
  {
    v13 = type metadata accessor for DialogValuesResolver.CollectedValue(0);
    return sub_23F36196C(a1, 1, 1, v13);
  }
}

double sub_23F37DC60@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  char v9;
  double result;
  uint64_t v11;

  v4 = v3;
  sub_23F617BA0();
  v8 = sub_23F37568C(a1, a2, (uint64_t)MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t))sub_23F375BB8);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    *v4 = 0x8000000000000000;
    sub_23F35D2E8(&qword_256E6FCA0);
    sub_23F61CA18();
    swift_bridgeObjectRelease();
    sub_23F382A70((_OWORD *)(*(_QWORD *)(v11 + 56) + 32 * v8), a3);
    sub_23F61CA30();
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_23F37DD94()
{
  return sub_23F37D6F4();
}

uint64_t sub_23F37DDA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v2 = v1;
  sub_23F617BA0();
  sub_23F3756E8();
  v5 = v4;
  v7 = v6;
  swift_bridgeObjectRelease();
  if ((v7 & 1) != 0)
  {
    swift_isUniquelyReferenced_nonNull_native();
    v15 = *v2;
    *v2 = 0x8000000000000000;
    sub_23F35D2E8(&qword_256E6FFA8);
    sub_23F61CA18();
    v8 = *(_QWORD *)(v15 + 48);
    v9 = sub_23F617D08();
    v10 = (uint64_t (*)(uint64_t))MEMORY[0x24BE52140];
    v11 = *(_QWORD *)(v9 - 8);
    v12 = *(_QWORD *)(v11 + 72) * v5;
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v8 + v12, v9);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(a1, *(_QWORD *)(v15 + 56) + v12, v9);
    sub_23F3612C0(&qword_256E6FFB0, v10, MEMORY[0x24BE52158]);
    sub_23F61CA30();
    *v2 = v15;
    swift_bridgeObjectRelease();
    return sub_23F36196C(a1, 0, 1, v9);
  }
  else
  {
    v14 = sub_23F617D08();
    return sub_23F36196C(a1, 1, 1, v14);
  }
}

uint64_t sub_23F37DF18()
{
  return sub_23F37D6F4();
}

uint64_t sub_23F37DF2C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_23F383668();
  v1 = v0;
  v3 = v2;
  sub_23F383738();
  v4 = sub_23F375A5C(v3);
  LOBYTE(v3) = v5;
  sub_23F362984();
  if ((v3 & 1) == 0)
    return 0;
  sub_23F384544();
  sub_23F383954();
  sub_23F35D2E8(&qword_256E6FF60);
  sub_23F383C80();
  v6 = *(_QWORD *)(v10 + 48);
  v7 = sub_23F384B3C();
  sub_23F382F88(v6 + *(_QWORD *)(*(_QWORD *)(v7 - 8) + 72) * v4, type metadata accessor for QueryDecorationCacheKey);
  v8 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v4);
  sub_23F3612C0(&qword_256E6FF80, type metadata accessor for QueryDecorationCacheKey, (uint64_t)&protocol conformance descriptor for QueryDecorationCacheKey);
  sub_23F61CA30();
  *v1 = v10;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_23F37E028()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t DecorationCacheValue;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_23F383668();
  v1 = v0;
  v3 = v2;
  sub_23F383E5C();
  v4 = sub_23F375A5C(v1);
  LOBYTE(v1) = v5;
  sub_23F3837B0();
  if ((v1 & 1) != 0)
  {
    sub_23F384544();
    sub_23F383954();
    sub_23F35D2E8(&qword_256E6FF88);
    sub_23F383C80();
    v6 = *(_QWORD *)(v15 + 48);
    v7 = sub_23F384B3C();
    sub_23F382F88(v6 + *(_QWORD *)(*(_QWORD *)(v7 - 8) + 72) * v4, type metadata accessor for QueryDecorationCacheKey);
    v8 = *(_QWORD *)(v15 + 56);
    DecorationCacheValue = type metadata accessor for QueryDecorationCacheValue(0);
    sub_23F36262C(v8 + *(_QWORD *)(*(_QWORD *)(DecorationCacheValue - 8) + 72) * v4, v3, type metadata accessor for QueryDecorationCacheValue);
    sub_23F3612C0(&qword_256E6FF80, type metadata accessor for QueryDecorationCacheKey, (uint64_t)&protocol conformance descriptor for QueryDecorationCacheKey);
    sub_23F3840E0();
    sub_23F3842B0();
    sub_23F384A9C();
  }
  else
  {
    type metadata accessor for QueryDecorationCacheValue(0);
    v10 = sub_23F3835F4();
  }
  return sub_23F3836D8(v10, v11, v12, v13);
}

uint64_t sub_23F37E124()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  sub_23F383A1C();
  sub_23F38378C();
  v0 = sub_23F37E4F4();
  sub_23F383EF0(v0, v1, v2, v3, v4, v5, v6, v7, v9, v10);
  return sub_23F3837B8();
}

uint64_t sub_23F37E15C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  sub_23F383A1C();
  sub_23F383FB8();
  sub_23F37E5C4();
  sub_23F383EF0(v0, v1, v2, v3, v4, v5, v6, v7, v9, v10);
  return sub_23F383718();
}

uint64_t sub_23F37E1A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F37E328(a1, a2, a3, (void (*)(uint64_t))sub_23F37E838);
}

uint64_t sub_23F37E1B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  sub_23F383A1C();
  sub_23F38378C();
  sub_23F37E96C();
  sub_23F383EF0(v0, v1, v2, v3, v4, v5, v6, v7, v9, v10);
  return sub_23F3837B8();
}

uint64_t sub_23F37E1EC()
{
  _QWORD *v0;
  uint64_t v2;

  sub_23F383668();
  sub_23F383A1C();
  sub_23F383A00();
  sub_23F38436C();
  sub_23F37EA5C();
  *v0 = v2;
  return sub_23F3836C0();
}

uint64_t sub_23F37E254(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v8;

  swift_isUniquelyReferenced_nonNull_native();
  v8 = *v3;
  *v3 = 0x8000000000000000;
  sub_23F37ED90(a1, a2, a3);
  *v3 = v8;
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F37E2D0()
{
  return sub_23F37E484();
}

uint64_t sub_23F37E2E4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  sub_23F383A1C();
  v0 = sub_23F38378C();
  v2 = sub_23F37EFC8(v0, v1);
  sub_23F383EF0(v2, v3, v4, v5, v6, v7, v8, v9, v11, v12);
  return sub_23F3837B8();
}

uint64_t sub_23F37E31C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F37E328(a1, a2, a3, (void (*)(uint64_t))sub_23F37F0C4);
}

uint64_t sub_23F37E328(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v8;

  sub_23F383A1C();
  v6 = sub_23F383FB8();
  a4(v6);
  *v4 = v8;
  return sub_23F383718();
}

uint64_t sub_23F37E378()
{
  _QWORD *v0;
  uint64_t v2;

  sub_23F383668();
  sub_23F383A1C();
  sub_23F383A00();
  sub_23F37F1F8();
  *v0 = v2;
  return sub_23F3836C0();
}

uint64_t sub_23F37E3DC(uint64_t a1, double a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  sub_23F383A1C();
  v15 = *v2;
  *v2 = 0x8000000000000000;
  sub_23F37F328(a1, a2);
  sub_23F383EF0(v5, v6, v7, v8, v9, v10, v11, v12, v14, v15);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F37E444()
{
  void (*v0)(uint64_t);
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;

  sub_23F384AE4();
  sub_23F383A1C();
  sub_23F383A00();
  v2 = sub_23F3848C0();
  v0(v2);
  *v1 = v4;
  return sub_23F383718();
}

uint64_t sub_23F37E484()
{
  uint64_t *v0;
  uint64_t v2;

  sub_23F383668();
  sub_23F383A1C();
  v2 = *v0;
  *v0 = 0x8000000000000000;
  sub_23F38461C();
  sub_23F37E724();
  *v0 = v2;
  return sub_23F3836C0();
}

uint64_t sub_23F37E4F4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  sub_23F383988();
  v5 = (uint64_t *)sub_23F384294(v3, v4);
  sub_23F3754E8(v5);
  sub_23F3835BC();
  if (v8)
  {
    __break(1u);
LABEL_10:
    result = sub_23F61CC94();
    __break(1u);
    return result;
  }
  v9 = v6;
  v10 = v7;
  sub_23F35D2E8(&qword_256E70068);
  if ((sub_23F384258() & 1) != 0)
  {
    sub_23F3754E8(v1);
    sub_23F384050();
    if (!v12)
      goto LABEL_10;
    v9 = v11;
  }
  if ((v10 & 1) != 0)
  {
    v13 = *(_QWORD *)(*(_QWORD *)v2 + 56);
    sub_23F6188FC();
    sub_23F383770();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 40))(v13 + v14 * v9, v0);
  }
  else
  {
    sub_23F384920();
    sub_23F37F5C0();
    return sub_23F382BDC((uint64_t)v1);
  }
}

void sub_23F37E5C4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD **v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_23F362ABC();
  sub_23F38407C();
  sub_23F383C74(v4, v5, (uint64_t)MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t))sub_23F375BB8);
  sub_23F3835BC();
  if (v7)
  {
    __break(1u);
LABEL_9:
    sub_23F61CC94();
    __break(1u);
    return;
  }
  v8 = v6;
  sub_23F35D2E8(&qword_256E6FCB0);
  v9 = sub_23F383C94();
  if ((v9 & 1) != 0)
  {
    v1 = *v3;
    sub_23F383C74(v9, v10, (uint64_t)MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t))sub_23F375BB8);
    sub_23F3843D4();
    if (!v11)
      goto LABEL_9;
  }
  if ((v8 & 1) != 0)
  {
    sub_23F3844D0();
    *v1 = v2;
    v1[1] = v0;
    sub_23F362948();
  }
  else
  {
    v12 = sub_23F384678();
    sub_23F37F628(v12, v13, v14, v15, v16, v17);
    sub_23F3836A8();
  }
}

void sub_23F37E678()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  sub_23F383988();
  v5 = sub_23F384294(v3, v4);
  sub_23F37556C(v5);
  sub_23F3835BC();
  if (v8)
  {
    __break(1u);
LABEL_10:
    sub_23F61CC94();
    __break(1u);
    return;
  }
  v9 = v6;
  v10 = v7;
  sub_23F35D2E8(&qword_256E70038);
  if ((sub_23F384258() & 1) != 0)
  {
    sub_23F37556C(v1);
    sub_23F384050();
    if (!v12)
      goto LABEL_10;
    v9 = v11;
  }
  if ((v10 & 1) != 0)
  {
    v13 = *(_QWORD *)(*(_QWORD *)v2 + 56);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v13 + 8 * v9) = v0;
    sub_23F383568();
  }
  else
  {
    sub_23F384920();
    sub_23F37F66C(v14, v15, v16, v17);
  }
}

uint64_t sub_23F37E724()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  char v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;

  sub_23F362ABC();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  sub_23F37568C(v5, v3, (uint64_t)MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t))sub_23F375BB8);
  sub_23F3835BC();
  if (v11)
  {
    __break(1u);
    goto LABEL_9;
  }
  v12 = v9;
  v13 = v10;
  sub_23F35D2E8(v2);
  v14 = sub_23F383C94();
  if ((v14 & 1) == 0)
    goto LABEL_5;
  v16 = sub_23F383C74(v14, v15, (uint64_t)MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t))sub_23F375BB8);
  if ((v13 & 1) != (v17 & 1))
  {
LABEL_9:
    result = sub_23F61CC94();
    __break(1u);
    return result;
  }
  v12 = v16;
LABEL_5:
  v18 = *v0;
  if ((v13 & 1) != 0)
  {
    v19 = *(_QWORD *)(v18 + 56);
    sub_23F383850();
    sub_23F383770();
    return sub_23F383690(v19 + v20 * v12, v8, v22, *(uint64_t (**)(void))(v21 + 40));
  }
  else
  {
    sub_23F37FB90(v12, v6, v4, v8, v18);
    return sub_23F3836A8();
  }
}

uint64_t sub_23F37E820@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23F36EDCC(a1, a2);
}

uint64_t sub_23F37E838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t result;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v9 = sub_23F37568C(a2, a3, MEMORY[0x24BEE06E0], (uint64_t (*)(uint64_t))sub_23F375BB8);
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = v9;
  v12 = v10;
  sub_23F35D2E8(&qword_256E6FD48);
  if ((sub_23F61CA18() & 1) == 0)
    goto LABEL_5;
  v13 = sub_23F37568C(a2, a3, MEMORY[0x24BEE06E0], (uint64_t (*)(uint64_t))sub_23F375BB8);
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_9:
    result = sub_23F61CC94();
    __break(1u);
    return result;
  }
  v11 = v13;
LABEL_5:
  v15 = *v4;
  if ((v12 & 1) != 0)
  {
    v16 = v15[7];
    result = swift_release();
    *(_QWORD *)(v16 + 8 * v11) = a1;
  }
  else
  {
    sub_23F37F6B0(v11, a2, a3, a1, v15);
    return sub_23F617BA0();
  }
  return result;
}

void sub_23F37E96C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  char v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;

  sub_23F362ABC();
  v4 = v3;
  v6 = v5;
  sub_23F384040();
  sub_23F3849EC();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F383EC4();
  sub_23F3756E8();
  sub_23F3835BC();
  if (v10)
  {
    __break(1u);
    goto LABEL_10;
  }
  v11 = v8;
  v12 = v9;
  sub_23F35D2E8(&qword_256E70488);
  if ((sub_23F384938() & 1) != 0)
  {
    sub_23F3756E8();
    if ((v12 & 1) == (v14 & 1))
    {
      v11 = v13;
      goto LABEL_5;
    }
LABEL_10:
    sub_23F61CC94();
    __break(1u);
    return;
  }
LABEL_5:
  v15 = *v0;
  if ((v12 & 1) != 0)
  {
    v16 = *(_QWORD *)(v15 + 56);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v16 + 8 * v11) = v6;
  }
  else
  {
    sub_23F384918(v1, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
    sub_23F37F6F8(v11, v1, v6, v15);
  }
  sub_23F362948();
}

void sub_23F37EA5C()
{
  _QWORD **v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(_QWORD);
  void (*v4)(uint64_t);
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  uint64_t v28;
  void (*v29)(_QWORD);

  sub_23F362ABC();
  v28 = v2;
  v29 = v3;
  v5 = v4;
  v7 = v6;
  v27[0] = sub_23F384B4C(v2, v6, v8, v9);
  sub_23F384068();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v27 - v11;
  v5(v7);
  sub_23F3835BC();
  if (v15)
  {
    __break(1u);
    goto LABEL_9;
  }
  v16 = v13;
  v17 = v14;
  sub_23F384980();
  if ((sub_23F61CA18() & 1) == 0)
    goto LABEL_5;
  v18 = ((uint64_t (*)(uint64_t))v5)(v7);
  if ((v17 & 1) != (v19 & 1))
  {
LABEL_9:
    sub_23F61CC94();
    __break(1u);
    return;
  }
  v16 = v18;
LABEL_5:
  v20 = *v0;
  if ((v17 & 1) != 0)
  {
    v21 = v20[7];
    v29(0);
    sub_23F383770();
    sub_23F383690(v21 + v22 * v16, v28, v24, *(uint64_t (**)(void))(v23 + 40));
  }
  else
  {
    (*(void (**)(char *, uint64_t, _QWORD))(v1 + 16))(v12, v7, v27[0]);
    v25 = sub_23F384A14();
    sub_23F37F744(v25, v26, v28, v20, (uint64_t (*)(_QWORD))v27[1]);
    sub_23F362948();
  }
}

void sub_23F37EB80(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD **v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  char v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = (_QWORD **)v2;
  v6 = sub_23F61B92C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (_QWORD *)*v2;
  v11 = sub_23F375878();
  if (__OFADD__(v10[2], (v12 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  v13 = v11;
  v14 = v12;
  sub_23F35D2E8(&qword_256E6FE58);
  if ((sub_23F61CA18() & 1) == 0)
    goto LABEL_5;
  v15 = sub_23F375878();
  if ((v14 & 1) != (v16 & 1))
  {
LABEL_10:
    sub_23F61CC94();
    __break(1u);
    return;
  }
  v13 = v15;
LABEL_5:
  v17 = *v3;
  if ((v14 & 1) != 0)
  {
    v18 = v17[7];
    v19 = type metadata accessor for DialogValuesResolver.CollectedValue(0);
    sub_23F382D60(a1, v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v13, type metadata accessor for DialogValuesResolver.CollectedValue);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
    sub_23F37F7D0(v13, (uint64_t)v9, a1, v17);
  }
}

void sub_23F37ECDC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD **v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  sub_23F362ABC();
  sub_23F38407C();
  sub_23F383C74(v4, v5, (uint64_t)MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t))sub_23F375BB8);
  sub_23F3835BC();
  if (v7)
  {
    __break(1u);
LABEL_9:
    sub_23F61CC94();
    __break(1u);
    return;
  }
  v8 = v6;
  sub_23F35D2E8(&qword_256E6FCA8);
  v9 = sub_23F383C94();
  if ((v9 & 1) != 0)
  {
    v1 = *v3;
    sub_23F383C74(v9, v10, (uint64_t)MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t))sub_23F375BB8);
    sub_23F3843D4();
    if (!v11)
      goto LABEL_9;
  }
  if ((v8 & 1) != 0)
  {
    sub_23F3844D0();
    *v1 = v2;
    v1[1] = v0;
    sub_23F362948();
  }
  else
  {
    v12 = sub_23F384678();
    sub_23F37F888(v12, v13, v14, v15, v16, v17);
    sub_23F3836A8();
  }
}

_OWORD *sub_23F37ED90(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  _QWORD *v15;
  _OWORD *v16;
  _OWORD *result;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v9 = sub_23F37568C(a2, a3, (uint64_t)MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t))sub_23F375BB8);
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = v9;
  v12 = v10;
  sub_23F35D2E8(&qword_256E6FCA0);
  if ((sub_23F61CA18() & 1) == 0)
    goto LABEL_5;
  v13 = sub_23F37568C(a2, a3, (uint64_t)MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t))sub_23F375BB8);
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_9:
    result = (_OWORD *)sub_23F61CC94();
    __break(1u);
    return result;
  }
  v11 = v13;
LABEL_5:
  v15 = *v4;
  if ((v12 & 1) != 0)
  {
    v16 = (_OWORD *)(v15[7] + 32 * v11);
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v16);
    return sub_23F382A70(a1, v16);
  }
  else
  {
    sub_23F37F8D4(v11, a2, a3, a1, v15);
    return (_OWORD *)sub_23F617BA0();
  }
}

void sub_23F37EECC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  _QWORD *v18;

  sub_23F383988();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  sub_23F37568C(v3, v1, (uint64_t)MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t))sub_23F375BB8);
  sub_23F3835BC();
  if (v9)
  {
    __break(1u);
LABEL_10:
    sub_23F61CC94();
    __break(1u);
    return;
  }
  v10 = v7;
  v11 = v8;
  sub_23F35D2E8(&qword_256E6FC90);
  if ((sub_23F384938() & 1) != 0)
  {
    sub_23F37568C(v4, v2, (uint64_t)MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t))sub_23F375BB8);
    sub_23F384050();
    if (!v13)
      goto LABEL_10;
    v10 = v12;
  }
  if ((v11 & 1) != 0)
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)v0 + 56) + v10) = v6 & 1;
    sub_23F383568();
  }
  else
  {
    sub_23F384920();
    sub_23F37F93C(v14, v15, v16, v17, v18);
    sub_23F617BA0();
  }
}

uint64_t sub_23F37EFC8(uint64_t a1, uint64_t *a2)
{
  _QWORD *v2;
  _QWORD **v3;
  _QWORD *v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  uint64_t result;
  char v12;
  _QWORD *v13;

  v3 = (_QWORD **)v2;
  v6 = (_QWORD *)*v2;
  v7 = sub_23F3754E8(a2);
  if (__OFADD__(v6[2], (v8 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v9 = v7;
  v10 = v8;
  sub_23F35D2E8(&qword_256E70050);
  result = sub_23F61CA18();
  if ((result & 1) == 0)
    goto LABEL_5;
  result = sub_23F3754E8(a2);
  if ((v10 & 1) != (v12 & 1))
  {
LABEL_9:
    result = sub_23F61CC94();
    __break(1u);
    return result;
  }
  v9 = result;
LABEL_5:
  v13 = *v3;
  if ((v10 & 1) != 0)
  {
    *(_QWORD *)(v13[7] + 8 * v9) = a1;
  }
  else
  {
    sub_23F37F984(v9, (uint64_t)a2, a1, v13);
    return sub_23F382BDC((uint64_t)a2);
  }
  return result;
}

void sub_23F37F0C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  _QWORD *v15;
  uint64_t v16;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v9 = sub_23F37568C(a2, a3, (uint64_t)MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t))sub_23F375BB8);
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = v9;
  v12 = v10;
  sub_23F35D2E8(&qword_256E6FE80);
  if ((sub_23F61CA18() & 1) == 0)
    goto LABEL_5;
  v13 = sub_23F37568C(a2, a3, (uint64_t)MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t))sub_23F375BB8);
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_9:
    sub_23F61CC94();
    __break(1u);
    return;
  }
  v11 = v13;
LABEL_5:
  v15 = *v4;
  if ((v12 & 1) != 0)
  {
    v16 = v15[7];

    *(_QWORD *)(v16 + 8 * v11) = a1;
  }
  else
  {
    sub_23F37F6B0(v11, a2, a3, a1, v15);
    sub_23F617BA0();
  }
}

void sub_23F37F1F8()
{
  uint64_t *v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  char v13;
  char v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_23F362ABC();
  v3 = v2;
  v5 = v4;
  v22 = v6;
  v21 = sub_23F384B4C(v6, v4, v7, v8);
  sub_23F384A64();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v20 - v10;
  v3(v5);
  sub_23F3835BC();
  if (v14)
  {
    __break(1u);
    goto LABEL_9;
  }
  v15 = v12;
  v16 = v13;
  sub_23F384838();
  if ((sub_23F61CA18() & 1) == 0)
    goto LABEL_5;
  v17 = ((uint64_t (*)(uint64_t))v3)(v5);
  if ((v16 & 1) != (v18 & 1))
  {
LABEL_9:
    sub_23F61CC94();
    __break(1u);
    return;
  }
  v15 = v17;
LABEL_5:
  v19 = *v0;
  if ((v16 & 1) != 0)
  {
    sub_23F383690(*(_QWORD *)(v19 + 56) + *(_QWORD *)(v1 + 72) * v15, v22, v21, *(uint64_t (**)(void))(v1 + 40));
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v11, v5, v21);
    sub_23F37F9DC(v15, (uint64_t)v11, v22, v19);
    sub_23F362948();
  }
}

uint64_t sub_23F37F314()
{
  return sub_23F37E724();
}

void sub_23F37F328(uint64_t a1, double a2)
{
  _QWORD *v2;
  _QWORD **v3;
  uint64_t DecorationCacheKey;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  char v15;
  _QWORD *v16;
  uint64_t v17;

  v3 = (_QWORD **)v2;
  DecorationCacheKey = type metadata accessor for QueryDecorationCacheKey(0);
  MEMORY[0x24BDAC7A8](DecorationCacheKey);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (_QWORD *)*v2;
  v10 = sub_23F375A5C(a1);
  if (__OFADD__(v9[2], (v11 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v12 = v10;
  v13 = v11;
  sub_23F35D2E8(&qword_256E6FF60);
  if ((sub_23F61CA18() & 1) == 0)
    goto LABEL_5;
  v14 = sub_23F375A5C(a1);
  if ((v13 & 1) != (v15 & 1))
  {
LABEL_9:
    sub_23F61CC94();
    __break(1u);
    return;
  }
  v12 = v14;
LABEL_5:
  v16 = *v3;
  if ((v13 & 1) != 0)
  {
    *(double *)(v16[7] + 8 * v12) = a2;
  }
  else
  {
    sub_23F362600(a1, (uint64_t)v8, type metadata accessor for QueryDecorationCacheKey);
    sub_23F37FA40(v12, (uint64_t)v8, v16, a2);
  }
}

void sub_23F37F464(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD **v3;
  uint64_t DecorationCacheKey;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  char v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t DecorationCacheValue;
  uint64_t v19;

  v3 = (_QWORD **)v2;
  DecorationCacheKey = type metadata accessor for QueryDecorationCacheKey(0);
  MEMORY[0x24BDAC7A8](DecorationCacheKey);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (_QWORD *)*v2;
  v10 = sub_23F375A5C(a2);
  if (__OFADD__(v9[2], (v11 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  v12 = v10;
  v13 = v11;
  sub_23F35D2E8(&qword_256E6FF88);
  if ((sub_23F61CA18() & 1) == 0)
    goto LABEL_5;
  v14 = sub_23F375A5C(a2);
  if ((v13 & 1) != (v15 & 1))
  {
LABEL_10:
    sub_23F61CC94();
    __break(1u);
    return;
  }
  v12 = v14;
LABEL_5:
  v16 = *v3;
  if ((v13 & 1) != 0)
  {
    v17 = v16[7];
    DecorationCacheValue = type metadata accessor for QueryDecorationCacheValue(0);
    sub_23F382D60(a1, v17 + *(_QWORD *)(*(_QWORD *)(DecorationCacheValue - 8) + 72) * v12, type metadata accessor for QueryDecorationCacheValue);
  }
  else
  {
    sub_23F362600(a2, (uint64_t)v8, type metadata accessor for QueryDecorationCacheKey);
    sub_23F37FAD8(v12, (uint64_t)v8, a1, v16);
  }
}

void sub_23F37F5C0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  sub_23F38478C();
  v3 = sub_23F3839CC(v2, v1 + 8 * (v2 >> 6));
  v5 = *(_QWORD *)(v4 + 48) + 40 * v3;
  v7 = *(_OWORD *)(v6 + 16);
  *(_OWORD *)v5 = *(_OWORD *)v6;
  *(_OWORD *)(v5 + 16) = v7;
  *(_QWORD *)(v5 + 32) = *(_QWORD *)(v6 + 32);
  v8 = sub_23F6188FC();
  sub_23F383F94(v8);
  sub_23F38427C();
  if (v10)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v0 + 16) = v9;
    sub_23F362B80();
  }
}

uint64_t sub_23F37F628(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  result = sub_23F3839CC(a1, a6 + 8 * (a1 >> 6));
  v8 = (_QWORD *)(v7[6] + 16 * result);
  *v8 = v9;
  v8[1] = v10;
  v11 = (_QWORD *)(v7[7] + 16 * result);
  *v11 = v12;
  v11[1] = v13;
  v14 = v7[2];
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    v7[2] = v16;
  return result;
}

unint64_t sub_23F37F66C(unint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  a4[(result >> 6) + 8] |= 1 << result;
  *(_QWORD *)(a4[6] + 8 * result) = a2;
  *(_QWORD *)(a4[7] + 8 * result) = a3;
  v4 = a4[2];
  v5 = __OFADD__(v4, 1);
  v6 = v4 + 1;
  if (v5)
    __break(1u);
  else
    a4[2] = v6;
  return result;
}

unint64_t sub_23F37F6B0(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

void sub_23F37F6F8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  sub_23F383924(a1, a2, a3, a4);
  v8 = *(_QWORD *)(v7 + 48);
  sub_23F384040();
  sub_23F383770();
  sub_23F3847A8(v8 + v9 * v6, v10);
  *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v6) = v5;
  sub_23F38427C();
  if (v12)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v4 + 16) = v11;
    sub_23F383488();
  }
}

void sub_23F37F744(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  sub_23F3846DC(a1, a2, a3, (uint64_t)a4, a5);
  sub_23F383770();
  (*(void (**)(unint64_t, uint64_t))(v10 + 32))(v8 + v9 * a1, a2);
  v11 = a4[7];
  sub_23F3846D4();
  sub_23F383770();
  sub_23F3847A8(v11 + v12 * a1, v13);
  sub_23F38427C();
  if (v15)
  {
    __break(1u);
  }
  else
  {
    a4[2] = v14;
    sub_23F383488();
  }
}

void sub_23F37F7D0(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_23F61B92C();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  v10 = a4[7];
  v11 = type metadata accessor for DialogValuesResolver.CollectedValue(0);
  sub_23F36262C(a3, v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, type metadata accessor for DialogValuesResolver.CollectedValue);
  v12 = a4[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a4[2] = v14;
}

unint64_t sub_23F37F888(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a6[(result >> 6) + 8] |= 1 << result;
  v6 = (_QWORD *)(a6[6] + 16 * result);
  *v6 = a2;
  v6[1] = a3;
  v7 = (_QWORD *)(a6[7] + 16 * result);
  *v7 = a4;
  v7[1] = a5;
  v8 = a6[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a6[2] = v10;
  return result;
}

_OWORD *sub_23F37F8D4(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_23F382A70(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

unint64_t sub_23F37F93C(unint64_t result, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_BYTE *)(a5[7] + result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

unint64_t sub_23F37F984(unint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(result >> 6) + 8] |= 1 << result;
  v4 = a4[6] + 40 * result;
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 16) = v5;
  *(_QWORD *)(v4 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a4[7] + 8 * result) = a3;
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

void sub_23F37F9DC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v8 = sub_23F383924(a1, a2, a3, a4);
  v10 = *(_QWORD *)(v9 + 48);
  sub_23F3846DC(v8, v11, v12, v9, v13);
  sub_23F38380C();
  v15 = v14 * v7;
  sub_23F384480(v10 + v15, v6);
  sub_23F384480(*(_QWORD *)(v4 + 56) + v15, v5);
  sub_23F38427C();
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v4 + 16) = v16;
    sub_23F383488();
  }
}

void sub_23F37FA40(unint64_t a1, uint64_t a2, _QWORD *a3, double a4)
{
  uint64_t v8;
  uint64_t DecorationCacheKey;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a3[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a3[6];
  DecorationCacheKey = type metadata accessor for QueryDecorationCacheKey(0);
  sub_23F36262C(a2, v8 + *(_QWORD *)(*(_QWORD *)(DecorationCacheKey - 8) + 72) * a1, type metadata accessor for QueryDecorationCacheKey);
  *(double *)(a3[7] + 8 * a1) = a4;
  v10 = a3[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a3[2] = v12;
}

void sub_23F37FAD8(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t DecorationCacheKey;
  uint64_t v10;
  uint64_t DecorationCacheValue;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  DecorationCacheKey = type metadata accessor for QueryDecorationCacheKey(0);
  sub_23F36262C(a2, v8 + *(_QWORD *)(*(_QWORD *)(DecorationCacheKey - 8) + 72) * a1, type metadata accessor for QueryDecorationCacheKey);
  v10 = a4[7];
  DecorationCacheValue = type metadata accessor for QueryDecorationCacheValue(0);
  sub_23F36262C(a3, v10 + *(_QWORD *)(*(_QWORD *)(DecorationCacheValue - 8) + 72) * a1, type metadata accessor for QueryDecorationCacheValue);
  v12 = a4[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a4[2] = v14;
}

void sub_23F37FB90(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t v13;
  char v14;

  v6 = sub_23F3839CC(a1, a5 + 8 * (a1 >> 6));
  v8 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v6);
  *v8 = v9;
  v8[1] = v10;
  v12 = v11(0);
  sub_23F383F94(v12);
  sub_23F38427C();
  if (v14)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a5 + 16) = v13;
    sub_23F362B80();
  }
}

void sub_23F37FBEC(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6[2];

  v2 = *(_QWORD *)(sub_23F61B92C() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_23F3BCF00();
    v3 = v4;
  }
  v5 = *(_QWORD *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v5;
  sub_23F380990(v6);
  *a1 = v3;
}

uint64_t sub_23F37FC6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  sub_23F35D2E8(&qword_256E6FAF0);
  v4 = a2 + *(int *)(sub_23F35D2E8(&qword_256E70360) + 48);
  return sub_23F5E1AF8(a2, v4, a1);
}

uint64_t sub_23F37FCC8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t result;
  char *v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _BOOL8 v30;
  char v31;
  _QWORD *v32;
  unint64_t v33;
  char v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  char *v39;
  char *v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  _QWORD v45[2];
  char *v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  char *v51;
  uint64_t v52;
  _QWORD *v53;

  v53 = a5;
  v9 = sub_23F61B404();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v47 = (char *)v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v46 = (char *)v45 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v51 = (char *)v45 - v15;
  v50 = sub_23F61A1D4();
  v48 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v17 = (char *)v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23F35D2E8(&qword_256E70388);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F5E2968(&v52, a1, a2, a3);
  v45[1] = a1;
  sub_23F617BA0();
  v45[0] = a3;
  swift_retain();
  sub_23F5E29A8();
  v21 = sub_23F35D2E8(&qword_256E70390);
  if (sub_23F36195C((uint64_t)v20, 1, v21) == 1)
  {
LABEL_2:
    swift_release();
    swift_bridgeObjectRelease();
    sub_23F382E18();
    return swift_release();
  }
  else
  {
    v49 = *(void (**)(char *, char *, uint64_t))(v48 + 32);
    while (1)
    {
      v23 = &v20[*(int *)(v21 + 48)];
      v49(v17, v20, v50);
      v24 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v24(v51, v23, v9);
      v25 = *v53;
      sub_23F375614();
      v28 = v27;
      v29 = *(_QWORD *)(v25 + 16);
      v30 = (v26 & 1) == 0;
      if (__OFADD__(v29, v30))
        break;
      v31 = v26;
      if (*(_QWORD *)(v25 + 24) >= v29 + v30)
      {
        if ((a4 & 1) != 0)
        {
          v32 = v53;
        }
        else
        {
          sub_23F35D2E8(&qword_256E6FB50);
          v32 = v53;
          sub_23F61CA24();
        }
      }
      else
      {
        v32 = v53;
        sub_23F513968();
        sub_23F375614();
        if ((v31 & 1) != (v34 & 1))
          goto LABEL_19;
        v28 = v33;
      }
      v35 = (_QWORD *)*v32;
      if ((v31 & 1) != 0)
      {
        v36 = v35[7];
        v37 = *(_QWORD *)(v10 + 72) * v28;
        v38 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
        v39 = v47;
        v38(v47, v36 + v37, v9);
        v40 = v46;
        v38(v46, (uint64_t)v39, v9);
        v41 = *(void (**)(char *, uint64_t))(v10 + 8);
        v41(v39, v9);
        v41(v51, v9);
        (*(void (**)(char *, uint64_t))(v48 + 8))(v17, v50);
        (*(void (**)(uint64_t, char *, uint64_t))(v10 + 40))(*(_QWORD *)(*v32 + 56) + v37, v40, v9);
      }
      else
      {
        v35[(v28 >> 6) + 8] |= 1 << v28;
        v49((char *)(v35[6] + *(_QWORD *)(v48 + 72) * v28), v17, v50);
        v24((char *)(v35[7] + *(_QWORD *)(v10 + 72) * v28), v51, v9);
        v42 = v35[2];
        v43 = __OFADD__(v42, 1);
        v44 = v42 + 1;
        if (v43)
          goto LABEL_18;
        v35[2] = v44;
      }
      sub_23F5E29A8();
      v21 = sub_23F35D2E8(&qword_256E70390);
      a4 = 1;
      if (sub_23F36195C((uint64_t)v20, 1, v21) == 1)
        goto LABEL_2;
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    result = sub_23F61CC94();
    __break(1u);
  }
  return result;
}

uint64_t sub_23F3800A4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, char *, uint64_t);
  char *v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  char v29;
  unint64_t v30;
  char v31;
  char *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t result;
  _QWORD v39[3];
  char *v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;

  v46 = a5;
  v44 = sub_23F61B404();
  v9 = *(_QWORD *)(v44 - 8);
  v10 = MEMORY[0x24BDAC7A8](v44);
  v40 = (char *)v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v39 - v12;
  v43 = sub_23F61A1D4();
  v41 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v15 = (char *)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23F35D2E8(&qword_256E70388);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F5E2968(&v45, a1, a2, a3);
  v39[2] = a1;
  sub_23F617BA0();
  v39[1] = a3;
  swift_retain();
  sub_23F5E29A8();
  v19 = sub_23F35D2E8(&qword_256E70390);
  if (sub_23F36195C((uint64_t)v18, 1, v19) == 1)
  {
LABEL_15:
    swift_release();
    swift_bridgeObjectRelease();
    sub_23F382E18();
    return swift_release();
  }
  v42 = *(void (**)(char *, char *, uint64_t))(v41 + 32);
  while (1)
  {
    v20 = &v18[*(int *)(v19 + 48)];
    v42(v15, v18, v43);
    v21 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v22 = v13;
    v21(v13, v20, v44);
    v23 = *v46;
    sub_23F375614();
    v26 = v25;
    v27 = *(_QWORD *)(v23 + 16);
    v28 = (v24 & 1) == 0;
    if (__OFADD__(v27, v28))
      break;
    v29 = v24;
    if (*(_QWORD *)(v23 + 24) >= v27 + v28)
    {
      if ((a4 & 1) != 0)
      {
        if ((v24 & 1) != 0)
          goto LABEL_10;
      }
      else
      {
        sub_23F35D2E8(&qword_256E6FB50);
        sub_23F61CA24();
        if ((v29 & 1) != 0)
          goto LABEL_10;
      }
    }
    else
    {
      sub_23F513968();
      sub_23F375614();
      if ((v29 & 1) != (v31 & 1))
        goto LABEL_18;
      v26 = v30;
      if ((v29 & 1) != 0)
      {
LABEL_10:
        v32 = v40;
        v13 = v22;
        v33 = v44;
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v40, v22, v44);
        (*(void (**)(char *, uint64_t))(v9 + 8))(v22, v33);
        (*(void (**)(char *, uint64_t))(v41 + 8))(v15, v43);
        (*(void (**)(unint64_t, char *, uint64_t))(v9 + 40))(*(_QWORD *)(*v46 + 56) + *(_QWORD *)(v9 + 72) * v26, v32, v33);
        goto LABEL_14;
      }
    }
    v34 = (_QWORD *)*v46;
    *(_QWORD *)(*v46 + 8 * (v26 >> 6) + 64) |= 1 << v26;
    v42((char *)(v34[6] + *(_QWORD *)(v41 + 72) * v26), v15, v43);
    v13 = v22;
    v21((char *)(v34[7] + *(_QWORD *)(v9 + 72) * v26), v22, v44);
    v35 = v34[2];
    v36 = __OFADD__(v35, 1);
    v37 = v35 + 1;
    if (v36)
      goto LABEL_17;
    v34[2] = v37;
LABEL_14:
    sub_23F5E29A8();
    v19 = sub_23F35D2E8(&qword_256E70390);
    a4 = 1;
    if (sub_23F36195C((uint64_t)v18, 1, v19) == 1)
      goto LABEL_15;
  }
  __break(1u);
LABEL_17:
  __break(1u);
LABEL_18:
  result = sub_23F61CC94();
  __break(1u);
  return result;
}

void sub_23F380440(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  _QWORD *v30;
  char v31;
  unint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  char v35;
  unint64_t v36;
  char v37;
  _QWORD *v38;
  unint64_t v39;
  uint64_t v40;
  void *v41;
  void (*v42)(char *, uint64_t);
  unint64_t v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  void *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  id v63;

  v59 = a5;
  v9 = sub_23F61B404();
  v56 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v49 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v49 - v16;
  v50 = type metadata accessor for ActionResolver.Parameter(0);
  v53 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v58 = (uint64_t)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_23F35D2E8(&qword_256E70368);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F5E2968(&v62, a1, a2, a3);
  v52 = a1;
  sub_23F617BA0();
  v51 = a3;
  swift_retain();
  sub_23F5E2B70();
  v22 = sub_23F35D2E8(&qword_256E70360);
  if (sub_23F36195C((uint64_t)v21, 1, v22) == 1)
  {
LABEL_2:
    swift_release();
    swift_bridgeObjectRelease();
    sub_23F382E18();
    swift_release();
    return;
  }
  v57 = v17;
  v23 = v56;
  v54 = v21;
  while (1)
  {
    v24 = v15;
    v25 = v12;
    v26 = &v21[*(int *)(v22 + 48)];
    v27 = v58;
    sub_23F36262C((uint64_t)v21, v58, type metadata accessor for ActionResolver.Parameter);
    v28 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v29 = v9;
    v28(v57, v26, v9);
    v30 = *(_QWORD **)v59;
    v32 = sub_23F37559C(v27);
    v33 = v30[2];
    v34 = (v31 & 1) == 0;
    if (__OFADD__(v33, v34))
    {
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      sub_23F61CC94();
      __break(1u);
      goto LABEL_22;
    }
    v35 = v31;
    if (v30[3] >= v33 + v34)
    {
      v12 = v25;
      if ((a4 & 1) == 0)
      {
        sub_23F35D2E8(&qword_256E6FB30);
        sub_23F61CA24();
      }
    }
    else
    {
      sub_23F513B34();
      v36 = sub_23F37559C(v58);
      if ((v35 & 1) != (v37 & 1))
        goto LABEL_21;
      v32 = v36;
      v12 = v25;
    }
    v15 = v24;
    v38 = *(_QWORD **)v59;
    if ((v35 & 1) != 0)
      break;
    v38[(v32 >> 6) + 8] |= 1 << v32;
    sub_23F36262C(v58, v38[6] + *(_QWORD *)(v53 + 72) * v32, type metadata accessor for ActionResolver.Parameter);
    v43 = v38[7] + *(_QWORD *)(v56 + 72) * v32;
    v9 = v29;
    v28((char *)v43, v57, v29);
    v44 = v38[2];
    v45 = __OFADD__(v44, 1);
    v46 = v44 + 1;
    if (v45)
      goto LABEL_20;
    v38[2] = v46;
    v23 = v56;
LABEL_15:
    v21 = v54;
    sub_23F5E2B70();
    v22 = sub_23F35D2E8(&qword_256E70360);
    a4 = 1;
    if (sub_23F36195C((uint64_t)v21, 1, v22) == 1)
      goto LABEL_2;
  }
  v23 = v56;
  v39 = *(_QWORD *)(v56 + 72) * v32;
  v9 = v29;
  (*(void (**)(char *, unint64_t, uint64_t))(v56 + 16))(v12, v38[7] + v39, v29);
  v40 = (uint64_t)v57;
  v41 = v55;
  sub_23F3733D0((uint64_t)v12, (uint64_t)v57);
  if (!v41)
  {
    v55 = 0;
    v42 = *(void (**)(char *, uint64_t))(v23 + 8);
    v42(v12, v29);
    v42((char *)v40, v29);
    sub_23F382F88(v58, type metadata accessor for ActionResolver.Parameter);
    (*(void (**)(unint64_t, char *, uint64_t))(v23 + 40))(*(_QWORD *)(*(_QWORD *)v59 + 56) + v39, v24, v29);
    goto LABEL_15;
  }
  v47 = *(void (**)(char *, uint64_t))(v23 + 8);
  v47(v12, v29);
  v63 = v41;
  v48 = v41;
  sub_23F35D2E8(&qword_256E70370);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    v47((char *)v40, v29);
    sub_23F382F88(v58, type metadata accessor for ActionResolver.Parameter);
    sub_23F382E18();
    swift_release();

    return;
  }
LABEL_22:
  v60 = 0;
  v61 = 0xE000000000000000;
  sub_23F61C8E0();
  sub_23F61C280();
  sub_23F61CA00();
  sub_23F61C280();
  sub_23F61CA60();
  __break(1u);
}

void sub_23F380990(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  BOOL v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t, uint64_t);
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v78;
  void (*v79)(char *, uint64_t);
  uint64_t v80;
  char *v81;
  void (*v82)(char *, uint64_t, uint64_t);
  uint64_t v83;
  char *v84;
  void (*v85)(char *, uint64_t);
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  char *v89;
  char *v90;
  char *v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  BOOL v103;
  unint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  BOOL v113;
  uint64_t v114;
  char v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  BOOL v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  unint64_t v140;
  unint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  unint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  char *v153;
  char *v154;
  char *v155;
  uint64_t v156;
  char *v157;
  char *v158;
  unint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  void (*v163)(char *, uint64_t, uint64_t);
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t *v172;
  _QWORD *v173;

  v2 = v1;
  v4 = sub_23F61B92C();
  v173 = *(_QWORD **)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v157 = (char *)&v148 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v169 = (char *)&v148 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v148 - v10;
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v148 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v161 = (char *)&v148 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v160 = (char *)&v148 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v154 = (char *)&v148 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v153 = (char *)&v148 - v21;
  v172 = a1;
  v22 = a1[1];
  v23 = sub_23F61CC04();
  if (v23 >= v22)
  {
    if ((v22 & 0x8000000000000000) == 0)
    {
      if (v22)
        sub_23F3814F4(0, v22, 1, v172);
      return;
    }
    goto LABEL_157;
  }
  v24 = v23;
  sub_23F387EF0(v22 / 2);
  v150 = v25;
  v151 = v22;
  v159 = v26;
  if (v22 <= 0)
  {
LABEL_121:
    v28 = (char *)MEMORY[0x24BEE4AF8];
    v88 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_122:
    if (v88 < 2)
    {
LABEL_133:
      swift_bridgeObjectRelease();
      if (v151 >= -1)
        goto LABEL_134;
      goto LABEL_161;
    }
    v139 = *v172;
    v140 = v159;
    while (1)
    {
      v141 = v88 - 2;
      if (v88 < 2)
        break;
      if (!v139)
        goto LABEL_165;
      v142 = v28;
      v143 = v28 + 32;
      v144 = *(_QWORD *)&v28[16 * v141 + 32];
      v145 = *(_QWORD *)&v28[16 * v88 + 24];
      sub_23F3817C8(v139 + v173[9] * v144, v139 + v173[9] * *(_QWORD *)&v143[16 * v88 - 16], v139 + v173[9] * v145, v140);
      if (v2)
        goto LABEL_119;
      if (v145 < v144)
        goto LABEL_152;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v142 = sub_23F3BC9E8();
      if (v141 >= *((_QWORD *)v142 + 2))
        goto LABEL_153;
      v146 = &v142[16 * v141 + 32];
      *(_QWORD *)v146 = v144;
      *((_QWORD *)v146 + 1) = v145;
      v147 = *((_QWORD *)v142 + 2);
      if (v88 > v147)
        goto LABEL_154;
      v28 = v142;
      memmove(&v142[16 * v88 + 16], &v142[16 * v88 + 32], 16 * (v147 - v88));
      *((_QWORD *)v142 + 2) = v147 - 1;
      v88 = v147 - 1;
      if (v147 <= 2)
        goto LABEL_133;
    }
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
LABEL_154:
    __break(1u);
LABEL_155:
    __break(1u);
LABEL_156:
    __break(1u);
LABEL_157:
    __break(1u);
LABEL_158:
    __break(1u);
LABEL_159:
    __break(1u);
LABEL_160:
    __break(1u);
LABEL_161:
    __break(1u);
LABEL_162:
    __break(1u);
LABEL_163:
    __break(1u);
LABEL_164:
    __break(1u);
LABEL_165:
    __break(1u);
    return;
  }
  v149 = v24;
  v164 = v11;
  v167 = v4;
  v27 = 0;
  v28 = (char *)MEMORY[0x24BEE4AF8];
  v29 = v22;
  v155 = v14;
  while (1)
  {
    v30 = (uint64_t)v27;
    v31 = v27 + 1;
    v158 = v27;
    if ((uint64_t)(v27 + 1) >= v29)
    {
      v41 = (uint64_t)(v27 + 1);
      v42 = v167;
    }
    else
    {
      v170 = v29;
      v152 = v28;
      v32 = *v172;
      v33 = v173[9];
      v34 = (void (*)(char *, uint64_t, uint64_t))v173[2];
      v35 = v167;
      v34(v153, *v172 + v33 * (_QWORD)v31, v167);
      v165 = v32;
      v171 = v33;
      v34(v154, v32 + v33 * v30, v35);
      v36 = sub_23F61B8F0();
      v38 = v37;
      if (v36 == sub_23F61B8F0() && v38 == v39)
        LODWORD(v168) = 0;
      else
        LODWORD(v168) = sub_23F61CC64();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v43 = (void (*)(char *, uint64_t))v173[1];
      v42 = v167;
      v43(v154, v167);
      v43(v153, v42);
      v30 = (uint64_t)v158;
      v41 = (uint64_t)(v158 + 2);
      if ((uint64_t)(v158 + 2) < v170)
      {
        v162 = v2;
        v166 = v171 * (_QWORD)v31;
        v44 = v165;
        v45 = v171 * v41;
        while (1)
        {
          v46 = v41;
          v34(v160, v44 + v45, v42);
          v34(v161, v44 + v166, v42);
          v47 = sub_23F61B8F0();
          v49 = v48;
          v51 = v47 == sub_23F61B8F0() && v49 == v50;
          v52 = v51 ? 0 : sub_23F61CC64();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v42 = v167;
          v43(v161, v167);
          v43(v160, v42);
          if (((v168 ^ v52) & 1) != 0)
            break;
          ++v41;
          v44 += v171;
          if (v46 + 1 >= v170)
          {
            v29 = v170;
            v41 = v170;
            v2 = v162;
            v14 = v155;
            v30 = (uint64_t)v158;
            goto LABEL_25;
          }
        }
        v2 = v162;
        v14 = v155;
        v30 = (uint64_t)v158;
      }
      v29 = v170;
LABEL_25:
      v28 = v152;
      if ((v168 & 1) != 0)
      {
        if (v41 < v30)
          goto LABEL_158;
        if (v30 < v41)
        {
          v162 = v2;
          v53 = 0;
          v54 = v171 * (v41 - 1);
          v55 = v30;
          v56 = v41 * v171;
          v57 = v55;
          v58 = v55 * v171;
          do
          {
            if (v57 != v41 + v53 - 1)
            {
              v59 = v165;
              if (!v165)
                goto LABEL_164;
              v60 = v165 + v58;
              v166 = v165 + v54;
              v42 = v167;
              v168 = (char *)v173[4];
              ((void (*)(char *, uint64_t, uint64_t))v168)(v157, v165 + v58, v167);
              if (v58 < v54 || v60 >= v59 + v56)
              {
                v62 = v166;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                v62 = v166;
                if (v58 != v54)
                  swift_arrayInitWithTakeBackToFront();
              }
              ((void (*)(uint64_t, char *, uint64_t))v168)(v62, v157, v42);
              v14 = v155;
            }
            ++v57;
            --v53;
            v54 -= v171;
            v56 -= v171;
            v58 += v171;
          }
          while (v57 < v41 + v53);
          v28 = v152;
          v2 = v162;
          v30 = (uint64_t)v158;
          v29 = v170;
        }
      }
    }
    if (v41 < v29)
    {
      if (__OFSUB__(v41, v30))
        goto LABEL_156;
      if (v41 - v30 < v149)
      {
        if (__OFADD__(v30, v149))
          goto LABEL_159;
        if (v30 + v149 >= v29)
          v63 = v29;
        else
          v63 = v30 + v149;
        if (v63 < v30)
          goto LABEL_160;
        if (v41 != v63)
        {
          v152 = v28;
          v64 = v173[9];
          v65 = (void (*)(char *, uint64_t, uint64_t))v173[2];
          v162 = v2;
          v163 = v65;
          v66 = v64 * (v41 - 1);
          v165 = v64;
          v171 = v41 * v64;
          v156 = v63;
          do
          {
            v67 = 0;
            v168 = (char *)v41;
            v166 = v66;
            while (1)
            {
              v170 = v30;
              v68 = *v172;
              v69 = v163;
              v163(v14, v171 + v67 + *v172, v42);
              v70 = v66 + v67 + v68;
              v71 = v14;
              v72 = v164;
              v69(v164, v70, v42);
              v73 = sub_23F61B8F0();
              v75 = v74;
              if (v73 == sub_23F61B8F0() && v75 == v76)
                break;
              v78 = sub_23F61CC64();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v79 = (void (*)(char *, uint64_t))v173[1];
              v79(v72, v42);
              v79(v71, v42);
              v14 = v71;
              if ((v78 & 1) == 0)
                goto LABEL_62;
              v80 = *v172;
              v66 = v166;
              if (!*v172)
                goto LABEL_162;
              v81 = (char *)(v80 + v166 + v67);
              v82 = (void (*)(char *, uint64_t, uint64_t))v173[4];
              v83 = v167;
              v82(v169, v80 + v171 + v67, v167);
              swift_arrayInitWithTakeFrontToBack();
              v82(v81, (uint64_t)v169, v83);
              v67 -= v165;
              v30 = v170 + 1;
              v84 = v168;
              v42 = v83;
              if (v168 == (char *)(v170 + 1))
                goto LABEL_63;
            }
            swift_bridgeObjectRelease_n();
            v85 = (void (*)(char *, uint64_t))v173[1];
            v85(v72, v42);
            v85(v71, v42);
            v14 = v71;
LABEL_62:
            v84 = v168;
            v66 = v166;
LABEL_63:
            v41 = (uint64_t)(v84 + 1);
            v66 += v165;
            v171 += v165;
            v30 = (uint64_t)v158;
          }
          while (v41 != v156);
          v41 = v156;
          v2 = v162;
          v28 = v152;
        }
      }
    }
    if (v41 < v30)
      goto LABEL_155;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v28 = sub_23F3BC8F8(0, *((_QWORD *)v28 + 2) + 1, 1, v28);
    v87 = *((_QWORD *)v28 + 2);
    v86 = *((_QWORD *)v28 + 3);
    v88 = v87 + 1;
    v162 = v2;
    v168 = (char *)v41;
    if (v87 >= v86 >> 1)
      v28 = sub_23F3BC8F8((char *)(v86 > 1), v87 + 1, 1, v28);
    *((_QWORD *)v28 + 2) = v88;
    v89 = v28 + 32;
    v90 = &v28[16 * v87 + 32];
    v91 = v168;
    *(_QWORD *)v90 = v30;
    *((_QWORD *)v90 + 1) = v91;
    if (v87)
      break;
    v88 = 1;
LABEL_113:
    v29 = v172[1];
    v27 = v168;
    v2 = v162;
    if ((uint64_t)v168 >= v29)
      goto LABEL_122;
  }
  while (1)
  {
    v92 = v88 - 1;
    if (v88 >= 4)
    {
      v97 = &v89[16 * v88];
      v98 = *((_QWORD *)v97 - 8);
      v99 = *((_QWORD *)v97 - 7);
      v103 = __OFSUB__(v99, v98);
      v100 = v99 - v98;
      if (v103)
        goto LABEL_140;
      v102 = *((_QWORD *)v97 - 6);
      v101 = *((_QWORD *)v97 - 5);
      v103 = __OFSUB__(v101, v102);
      v95 = v101 - v102;
      v96 = v103;
      if (v103)
        goto LABEL_141;
      v104 = v88 - 2;
      v105 = &v89[16 * v88 - 32];
      v107 = *(_QWORD *)v105;
      v106 = *((_QWORD *)v105 + 1);
      v103 = __OFSUB__(v106, v107);
      v108 = v106 - v107;
      if (v103)
        goto LABEL_142;
      v103 = __OFADD__(v95, v108);
      v109 = v95 + v108;
      if (v103)
        goto LABEL_144;
      if (v109 >= v100)
      {
        v127 = &v89[16 * v92];
        v129 = *(_QWORD *)v127;
        v128 = *((_QWORD *)v127 + 1);
        v103 = __OFSUB__(v128, v129);
        v130 = v128 - v129;
        if (v103)
          goto LABEL_150;
        v120 = v95 < v130;
        goto LABEL_102;
      }
    }
    else
    {
      if (v88 != 3)
      {
        v121 = *((_QWORD *)v28 + 4);
        v122 = *((_QWORD *)v28 + 5);
        v103 = __OFSUB__(v122, v121);
        v114 = v122 - v121;
        v115 = v103;
        goto LABEL_96;
      }
      v94 = *((_QWORD *)v28 + 4);
      v93 = *((_QWORD *)v28 + 5);
      v103 = __OFSUB__(v93, v94);
      v95 = v93 - v94;
      v96 = v103;
    }
    if ((v96 & 1) != 0)
      goto LABEL_143;
    v104 = v88 - 2;
    v110 = &v89[16 * v88 - 32];
    v112 = *(_QWORD *)v110;
    v111 = *((_QWORD *)v110 + 1);
    v113 = __OFSUB__(v111, v112);
    v114 = v111 - v112;
    v115 = v113;
    if (v113)
      goto LABEL_145;
    v116 = &v89[16 * v92];
    v118 = *(_QWORD *)v116;
    v117 = *((_QWORD *)v116 + 1);
    v103 = __OFSUB__(v117, v118);
    v119 = v117 - v118;
    if (v103)
      goto LABEL_147;
    if (__OFADD__(v114, v119))
      goto LABEL_149;
    if (v114 + v119 >= v95)
    {
      v120 = v95 < v119;
LABEL_102:
      if (v120)
        v92 = v104;
      goto LABEL_104;
    }
LABEL_96:
    if ((v115 & 1) != 0)
      goto LABEL_146;
    v123 = &v89[16 * v92];
    v125 = *(_QWORD *)v123;
    v124 = *((_QWORD *)v123 + 1);
    v103 = __OFSUB__(v124, v125);
    v126 = v124 - v125;
    if (v103)
      goto LABEL_148;
    if (v126 < v114)
      goto LABEL_113;
LABEL_104:
    v131 = v92 - 1;
    if (v92 - 1 >= v88)
    {
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
      goto LABEL_151;
    }
    if (!*v172)
      goto LABEL_163;
    v132 = v28;
    v133 = &v89[16 * v131];
    v134 = *(_QWORD *)v133;
    v135 = &v89[16 * v92];
    v136 = *((_QWORD *)v135 + 1);
    v137 = v162;
    sub_23F3817C8(*v172 + v173[9] * *(_QWORD *)v133, *v172 + v173[9] * *(_QWORD *)v135, *v172 + v173[9] * v136, v159);
    v162 = v137;
    if (v137)
      break;
    if (v136 < v134)
      goto LABEL_137;
    if (v92 > *((_QWORD *)v132 + 2))
      goto LABEL_138;
    *(_QWORD *)v133 = v134;
    *(_QWORD *)&v89[16 * v131 + 8] = v136;
    v138 = *((_QWORD *)v132 + 2);
    if (v92 >= v138)
      goto LABEL_139;
    v28 = v132;
    v88 = v138 - 1;
    memmove(&v89[16 * v92], v135 + 16, 16 * (v138 - 1 - v92));
    *((_QWORD *)v132 + 2) = v138 - 1;
    if (v138 <= 2)
      goto LABEL_113;
  }
  v2 = v162;
LABEL_119:
  swift_bridgeObjectRelease();
  if (v151 < -1)
  {
    __break(1u);
    goto LABEL_121;
  }
LABEL_134:
  *(_QWORD *)(v150 + 16) = 0;
  swift_bridgeObjectRelease();
}

uint64_t sub_23F3814F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;

  v41 = a4;
  v34 = a1;
  v37 = sub_23F61B92C();
  v42 = *(_QWORD **)(v37 - 8);
  v6 = MEMORY[0x24BDAC7A8](v37);
  v39 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v32 - v9;
  result = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v32 - v12;
  v38 = a3;
  v33 = a2;
  if (a3 != a2)
  {
    v14 = v42[9];
    v35 = (void (*)(char *, uint64_t, uint64_t))v42[2];
    v36 = v14;
    v44 = v14 * (v38 - 1);
    v43 = v14 * v38;
    while (2)
    {
      v15 = 0;
      v16 = v34;
      v17 = v37;
      while (1)
      {
        v18 = *v41;
        v40 = v43 + v15;
        v19 = v35;
        v35(v13, v43 + v15 + v18, v17);
        v19(v10, v44 + v15 + v18, v17);
        v20 = sub_23F61B8F0();
        v21 = v10;
        v23 = v22;
        if (v20 == sub_23F61B8F0() && v23 == v24)
          break;
        v26 = sub_23F61CC64();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v27 = (void (*)(char *, uint64_t))v42[1];
        v27(v21, v17);
        result = ((uint64_t (*)(char *, uint64_t))v27)(v13, v17);
        v10 = v21;
        if ((v26 & 1) != 0)
        {
          v28 = *v41;
          if (!*v41)
          {
            __break(1u);
            return result;
          }
          v29 = v28 + v44 + v15;
          v30 = (void (*)(char *, uint64_t, uint64_t))v42[4];
          v17 = v37;
          v30(v39, v28 + v43 + v15, v37);
          swift_arrayInitWithTakeFrontToBack();
          result = ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(v29, v39, v17);
          v15 -= v36;
          ++v16;
          v10 = v21;
          if (v38 != v16)
            continue;
        }
        goto LABEL_13;
      }
      swift_bridgeObjectRelease_n();
      v31 = (void (*)(char *, uint64_t))v42[1];
      v31(v21, v17);
      result = ((uint64_t (*)(char *, uint64_t))v31)(v13, v17);
      v10 = v21;
LABEL_13:
      v44 += v36;
      v43 += v36;
      if (++v38 != v33)
        continue;
      break;
    }
  }
  return result;
}

void sub_23F3817C8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  int64_t v21;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int64_t v28;
  uint64_t v30;
  void (*v31)(uint64_t, unint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  char v39;
  void (*v40)(uint64_t, uint64_t);
  unint64_t v41;
  BOOL v42;
  unint64_t v43;
  void (*v44)(uint64_t, uint64_t);
  BOOL v45;
  BOOL v46;
  void (*v47)(char *, unint64_t, uint64_t);
  unint64_t v48;
  uint64_t v49;
  void (*v50)(char *, unint64_t, uint64_t);
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v57;
  void (*v58)(char *, uint64_t);
  unint64_t v59;
  BOOL v60;
  BOOL v61;
  unint64_t v62;
  uint64_t v64;
  unint64_t v65;
  void (*v66)(char *, unint64_t, uint64_t);
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  unint64_t v74;

  v8 = sub_23F61B92C();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v72 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v71 = (char *)&v64 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v64 - v15;
  v73 = v17;
  v18 = *(_QWORD *)(v17 + 72);
  if (!v18)
  {
    __break(1u);
LABEL_91:
    __break(1u);
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  v19 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v18 == -1)
    goto LABEL_91;
  v21 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v18 == -1)
    goto LABEL_92;
  v69 = v14;
  v70 = v18;
  v23 = v19 / v18;
  v24 = v21 / v18;
  if (v19 / v18 >= v21 / v18)
  {
    sub_23F37AD04(a2, v21 / v18);
    v25 = a4 + v24 * v18;
    if (v24 * v18 < 1 || a1 >= a2)
      goto LABEL_22;
    v69 = -v18;
    v47 = *(void (**)(char *, unint64_t, uint64_t))(v73 + 16);
    v65 = a4;
    v66 = v47;
    v67 = a1;
    while (1)
    {
      v48 = a3;
      v74 = v25;
      v49 = v69;
      v68 = v25 + v69;
      v50 = v66;
      ((void (*)(char *))v66)(v71);
      v51 = a2 + v49;
      v50(v72, a2 + v49, v8);
      v52 = sub_23F61B8F0();
      v54 = v53;
      if (v52 == sub_23F61B8F0() && v54 == v55)
        v57 = 0;
      else
        v57 = sub_23F61CC64();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a3 = v48 + v69;
      v58 = *(void (**)(char *, uint64_t))(v73 + 8);
      v58(v72, v8);
      v58(v71, v8);
      v59 = v67;
      if ((v57 & 1) != 0)
      {
        v60 = v48 < a2 || a3 >= a2;
        v18 = v70;
        if (v60)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v48 != a2)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        a2 = v51;
        a4 = v65;
        v25 = v74;
        goto LABEL_84;
      }
      v61 = v48 < v74 || a3 >= v74;
      v18 = v70;
      if (v61)
      {
        v62 = v68;
        swift_arrayInitWithTakeFrontToBack();
      }
      else
      {
        if (v48 == v74)
        {
          v25 = v68;
          goto LABEL_83;
        }
        v62 = v68;
        swift_arrayInitWithTakeBackToFront();
      }
      v25 = v62;
LABEL_83:
      a4 = v65;
LABEL_84:
      if (v25 <= a4 || a2 <= v59)
        goto LABEL_22;
    }
  }
  sub_23F37AD04(a1, v19 / v18);
  v25 = a4 + v23 * v18;
  if (v23 * v18 >= 1 && a2 < a3)
  {
    v71 = *(char **)(v73 + 16);
    v72 = v16;
    v30 = v69;
    v74 = a4 + v23 * v18;
    v68 = a3;
    while (1)
    {
      v31 = (void (*)(uint64_t, unint64_t, uint64_t))v71;
      ((void (*)(char *, unint64_t, uint64_t))v71)(v16, a2, v8);
      v31(v30, a4, v8);
      v32 = v8;
      v33 = sub_23F61B8F0();
      v35 = v34;
      if (v33 == sub_23F61B8F0() && v35 == v36)
        break;
      v38 = v30;
      v39 = sub_23F61CC64();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v40 = *(void (**)(uint64_t, uint64_t))(v73 + 8);
      v40(v38, v32);
      v40((uint64_t)v16, v32);
      v8 = v32;
      if ((v39 & 1) == 0)
        goto LABEL_39;
      v18 = v70;
      v41 = a2 + v70;
      v42 = a1 < a2 || a1 >= v41;
      v43 = v68;
      if (!v42)
      {
        v30 = v69;
        if (a1 != a2)
          swift_arrayInitWithTakeBackToFront();
        v25 = v74;
        goto LABEL_49;
      }
      swift_arrayInitWithTakeFrontToBack();
LABEL_48:
      v25 = v74;
      v30 = v69;
LABEL_49:
      a1 += v18;
      v46 = a4 >= v25 || v41 >= v43;
      a2 = v41;
      if (v46)
        goto LABEL_22;
    }
    swift_bridgeObjectRelease_n();
    v44 = *(void (**)(uint64_t, uint64_t))(v73 + 8);
    v44(v30, v32);
    v44((uint64_t)v16, v32);
    v8 = v32;
LABEL_39:
    v18 = v70;
    v45 = a1 < a4 || a1 >= a4 + v70;
    v43 = v68;
    if (v45)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a1 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v41 = a2;
    a4 += v18;
    goto LABEL_48;
  }
LABEL_22:
  v28 = v25 - a4;
  if (v18 != -1 || v28 != 0x8000000000000000)
  {
    sub_23F37AD04(a4, v28 / v18);
    return;
  }
LABEL_93:
  __break(1u);
}

char *sub_23F381CF8(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v3;
  char v7;
  unsigned int v8;
  unint64_t v9;
  uint64_t isStackAllocationSafe;
  unint64_t *v11;
  char *v12;
  unint64_t *v13;
  _QWORD v15[2];

  v15[1] = *MEMORY[0x24BDAC8D0];
  v7 = *(_BYTE *)(a1 + 32);
  v8 = v7 & 0x3F;
  v9 = (unint64_t)((1 << v7) + 63) >> 6;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v8 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    v11 = (_QWORD *)((char *)v15 - ((8 * v9 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_23F51394C(0, v9, v11);
    sub_23F617BA0();
    v12 = sub_23F381EC8(v11, v9, (_QWORD *)a1, (uint64_t)a2, a3);
    if (v3)
      swift_willThrow();
    else
      a2 = v12;
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v13 = (unint64_t *)swift_slowAlloc();
    sub_23F51394C(0, v9, v13);
    sub_23F617BA0();
    a2 = sub_23F381EC8(v13, v9, (_QWORD *)a1, (uint64_t)a2, a3);
    MEMORY[0x242670B70](v13, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRelease();
  return a2;
}

char *sub_23F381EC8(unint64_t *a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *result;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  _QWORD *v29;
  void (*v30)(void);
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  char v47;
  void (*v48)(char *, uint64_t);
  char *v49;
  void (*v50)(char *, uint64_t);
  char *v51;
  uint64_t v52;
  BOOL v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t *v58;
  uint64_t v59;
  _QWORD *v60;
  int64_t v61;
  char *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  int64_t v73;
  uint64_t v74;
  uint64_t v75;

  v57 = a2;
  v70 = a5;
  v68 = a4;
  v58 = a1;
  v67 = sub_23F35D2E8(&qword_256E6FAF8);
  v6 = MEMORY[0x24BDAC7A8](v67);
  v66 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v64 = (char *)&v56 - v8;
  v9 = sub_23F61B404();
  v75 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_23F61A1D4();
  v74 = *(_QWORD *)(v65 - 8);
  MEMORY[0x24BDAC7A8](v65);
  result = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = 0;
  v15 = 0;
  v69 = a3;
  v18 = a3[8];
  v17 = a3 + 8;
  v16 = v18;
  v19 = 1 << *((_BYTE *)v17 - 32);
  v20 = -1;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  v21 = v20 & v16;
  v60 = v17;
  v61 = (unint64_t)(v19 + 63) >> 6;
  v62 = v11;
  v63 = result;
  v22 = v65;
LABEL_4:
  v59 = v14;
  while (1)
  {
    if (v21)
    {
      v72 = (v21 - 1) & v21;
      v73 = v15;
      v23 = __clz(__rbit64(v21)) | (v15 << 6);
      v24 = v75;
      goto LABEL_21;
    }
    v25 = v15 + 1;
    v24 = v75;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v25 >= v61)
      goto LABEL_31;
    v26 = v60[v25];
    v27 = v15 + 1;
    if (!v26)
    {
      v27 = v15 + 2;
      if (v15 + 2 >= v61)
        goto LABEL_31;
      v26 = v60[v27];
      if (!v26)
      {
        v27 = v15 + 3;
        if (v15 + 3 >= v61)
          goto LABEL_31;
        v26 = v60[v27];
        if (!v26)
          break;
      }
    }
LABEL_20:
    v72 = (v26 - 1) & v26;
    v73 = v27;
    v23 = __clz(__rbit64(v26)) + (v27 << 6);
LABEL_21:
    v29 = v69;
    v30 = *(void (**)(void))(v74 + 16);
    v31 = result;
    v30();
    v32 = v29[7];
    v33 = *(_QWORD *)(v24 + 72);
    v71 = v23;
    v34 = v32 + v33 * v23;
    v35 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
    v35(v11, v34, v9);
    v36 = v11;
    v37 = v67;
    v38 = (uint64_t)v64;
    v39 = &v64[*(int *)(v67 + 48)];
    ((void (*)(char *, char *, uint64_t))v30)(v64, v31, v22);
    v35(v39, (uint64_t)v36, v9);
    v40 = v66;
    v41 = &v66[*(int *)(v37 + 48)];
    ((void (*)(char *, uint64_t, uint64_t))v30)(v66, v38, v22);
    v35(v41, (uint64_t)v39, v9);
    v42 = sub_23F61A1C8();
    v44 = v43;
    v45 = *(void (**)(char *, uint64_t))(v74 + 8);
    v45(v40, v22);
    if (v42 == v68 && v44 == v70)
    {
      swift_bridgeObjectRelease();
      sub_23F3625D8(v38, &qword_256E6FAF8);
      v50 = *(void (**)(char *, uint64_t))(v75 + 8);
      v50(v41, v9);
      v11 = v62;
      v50(v62, v9);
      v51 = v63;
      v45(v63, v22);
      result = v51;
      v21 = v72;
      v15 = v73;
LABEL_28:
      v52 = v59;
      *(unint64_t *)((char *)v58 + ((v71 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v71;
      v53 = __OFADD__(v52, 1);
      v14 = v52 + 1;
      if (!v53)
        goto LABEL_4;
      __break(1u);
LABEL_31:
      sub_23F575780(v58, v57, v59, v69);
      v55 = v54;
      swift_bridgeObjectRelease();
      return (char *)v55;
    }
    v47 = sub_23F61CC64();
    swift_bridgeObjectRelease();
    sub_23F3625D8(v38, &qword_256E6FAF8);
    v48 = *(void (**)(char *, uint64_t))(v75 + 8);
    v48(v41, v9);
    v11 = v62;
    v48(v62, v9);
    v49 = v63;
    v45(v63, v22);
    result = v49;
    v21 = v72;
    v15 = v73;
    if ((v47 & 1) != 0)
      goto LABEL_28;
  }
  v28 = v15 + 4;
  if (v15 + 4 >= v61)
    goto LABEL_31;
  v26 = v60[v28];
  if (v26)
  {
    v27 = v15 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    v27 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v27 >= v61)
      goto LABEL_31;
    v26 = v60[v27];
    ++v28;
    if (v26)
      goto LABEL_20;
  }
LABEL_33:
  __break(1u);
  return result;
}

void sub_23F382320()
{
  sub_23F3612C0(&qword_256E6FB38, type metadata accessor for ActionResolver.Parameter, (uint64_t)&unk_23F61E780);
}

void sub_23F38234C(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  *a2 = sub_23F373854(*a1);
  sub_23F362928();
}

uint64_t sub_23F382374@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_23F3749D8(a1, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), a2, a3);
}

uint64_t sub_23F382390@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v2 = -1;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  *a2 = a1;
  v6 = *(_QWORD *)(a1 + 64);
  result = a1 + 64;
  v5 = v6;
  if (-v3 < 64)
    v2 = ~(-1 << -(char)v3);
  a2[1] = result;
  a2[2] = ~v3;
  a2[3] = 0;
  a2[4] = v2 & v5;
  return result;
}

uint64_t sub_23F3823CC(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
    return sub_23F617BA0();
LABEL_8:
  __break(1u);
  return result;
}

void sub_23F382420(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((a1 & 0x8000000000000000) != 0 || (sub_23F384958(), v9 <= v4))
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(v7 + ((a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(v7 + 36) == (_DWORD)v5)
  {
    v10 = *(_QWORD *)(v7 + 48);
    sub_23F3846DC(v4, v5, v6, v7, v8);
    sub_23F383770();
    (*(void (**)(uint64_t, unint64_t))(v12 + 16))(a2, v10 + v11 * a1);
    return;
  }
LABEL_8:
  __break(1u);
}

uint64_t sub_23F3824A4(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
  {
    v4 = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * result);
    sub_23F617BA0();
    return v4;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_23F382520(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  uint64_t i;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v2 = 64;
  for (i = 10; i - 8 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    v1 = *(_QWORD *)(a1 + 8 * i);
    v2 += 64;
    if (v1)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_23F3825A0(uint64_t result, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (a3 < 0 || 1 << *(_BYTE *)(a6 + 32) <= a3)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a6 + (((unint64_t)a3 >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> a3) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a6 + 36) == a4)
  {
    v9 = result;
    v10 = *(_QWORD *)(a6 + 48);
    v11 = sub_23F61A1D4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a3, v11);
    v12 = *(_QWORD *)(a6 + 56);
    v13 = sub_23F61B404();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a2, v12 + *(_QWORD *)(*(_QWORD *)(v13 - 8) + 72) * a3, v13);
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ActionResolverRequestEvaluator(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F61B32C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(_OWORD *)((char *)a2 + v8 + 24);
    *(_OWORD *)((char *)a1 + v8 + 24) = v9;
    (**(void (***)(void))(v9 - 8))();
  }
  return a1;
}

uint64_t destroy for ActionResolverRequestEvaluator(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + *(int *)(a2 + 20));
}

uint64_t initializeWithCopy for ActionResolverRequestEvaluator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  v6 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(_OWORD *)(a2 + v7 + 24);
  *(_OWORD *)(a1 + v7 + 24) = v8;
  (**(void (***)(void))(v8 - 8))();
  return a1;
}

uint64_t assignWithCopy for ActionResolverRequestEvaluator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  sub_23F361AD0((uint64_t *)(a1 + *(int *)(a3 + 20)), (uint64_t *)(a2 + *(int *)(a3 + 20)));
  return a1;
}

uint64_t initializeWithTake for ActionResolverRequestEvaluator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  v6 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  return a1;
}

uint64_t assignWithTake for ActionResolverRequestEvaluator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  v6 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + v7);
  v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionResolverRequestEvaluator()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F382914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = sub_23F384B34();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return sub_23F36195C(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 24);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ActionResolverRequestEvaluator()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F382998(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = sub_23F384B34();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    sub_23F38370C(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
    sub_23F362B80();
  }
}

uint64_t sub_23F3829FC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F61B32C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_OWORD *sub_23F382A70(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void sub_23F382A80(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  void (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((a2 & 0x8000000000000000) != 0 || (sub_23F384958(), v8 <= v7))
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(v5 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(v5 + 36) == v4)
  {
    v9 = v3;
    v10 = *(_QWORD *)(v5 + 56);
    v6(0);
    sub_23F383770();
    (*(void (**)(uint64_t, unint64_t))(v12 + 16))(v9, v10 + v11 * a2);
    sub_23F362CDC();
    return;
  }
LABEL_8:
  __break(1u);
}

unint64_t sub_23F382B28()
{
  unint64_t result;

  result = qword_256E6FD68;
  if (!qword_256E6FD68)
  {
    result = MEMORY[0x242670A44](&unk_23F62BC94, &type metadata for PromptString.TaggedRange);
    atomic_store(result, (unint64_t *)&qword_256E6FD68);
  }
  return result;
}

uint64_t sub_23F382B64(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_23F382BA0()
{
  unint64_t result;

  result = qword_256E6FE98;
  if (!qword_256E6FE98)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for JointResolution.Candidate, &type metadata for JointResolution.Candidate);
    atomic_store(result, (unint64_t *)&qword_256E6FE98);
  }
  return result;
}

uint64_t sub_23F382BDC(uint64_t a1)
{
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  return a1;
}

void sub_23F382C20(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t DecorationCacheKey;

  if (a1 < 0 || 1 << *(_BYTE *)(a3 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a3 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> a1) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a3 + 36) == a2)
  {
    v6 = *(_QWORD *)(a3 + 48);
    DecorationCacheKey = type metadata accessor for QueryDecorationCacheKey(0);
    sub_23F362600(v6 + *(_QWORD *)(*(_QWORD *)(DecorationCacheKey - 8) + 72) * a1, a4, type metadata accessor for QueryDecorationCacheKey);
    return;
  }
LABEL_8:
  __break(1u);
}

uint64_t sub_23F382CB8(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  uint64_t i;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 80);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v1 = *(_QWORD *)(a1 + 88);
  if (v1)
  {
    v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  v2 = 192;
  for (i = 12; i - 8 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    v1 = *(_QWORD *)(a1 + 8 * i);
    v2 += 64;
    if (v1)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

void sub_23F382D60(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = sub_23F362BC4(a1, a2, a3);
  sub_23F362D20(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40));
  sub_23F362928();
}

uint64_t sub_23F382D8C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_23F382DD0()
{
  unint64_t result;

  result = qword_256E701D8;
  if (!qword_256E701D8)
  {
    result = MEMORY[0x242670A44](MEMORY[0x24BE55900], MEMORY[0x24BE558F8]);
    atomic_store(result, (unint64_t *)&qword_256E701D8);
  }
  return result;
}

uint64_t sub_23F382E0C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_23F382E18()
{
  return swift_release();
}

uint64_t sub_23F382E20@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23F374D30(a1, a2);
}

void sub_23F382E38()
{
  sub_23F3612C0((unint64_t *)&qword_256E6FA98, (uint64_t (*)(uint64_t))MEMORY[0x24BE55070], MEMORY[0x24BE55080]);
}

void sub_23F382E64(uint64_t *a1@<X8>)
{
  *a1 = sub_23F366918();
  sub_23F362928();
}

uint64_t sub_23F382E88()
{
  uint64_t v0;

  v0 = sub_23F384048();
  sub_23F384274(*(_QWORD *)(v0 - 8));
  sub_23F3840BC();
  return swift_deallocObject();
}

uint64_t sub_23F382EDC()
{
  return sub_23F374E34() & 1;
}

void sub_23F382EF8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_23F384504(a1, a2, a3);
  sub_23F362D20(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  sub_23F362928();
}

uint64_t sub_23F382F24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23F375170(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_23F382F40(uint64_t a1, uint64_t *a2)
{
  return sub_23F375230(a1, a2);
}

#error "23F382F70: call analysis failed (funcsize=12)"

void sub_23F382F88(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = sub_23F3846F4(a1, a2);
  sub_23F362B6C(v2);
  sub_23F362928();
}

uint64_t sub_23F382FAC()
{
  return sub_23F3752F0();
}

void sub_23F382FC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v2;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v2 - 8))(a2, a1);
  sub_23F362928();
}

void sub_23F383004(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_23F384504(a1, a2, a3);
  sub_23F362D20(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  sub_23F362928();
}

unint64_t sub_23F383030()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256E70570;
  if (!qword_256E70570)
  {
    v1 = sub_23F35EB74(&qword_256E70238);
    sub_23F3612C0(&qword_256E70528, (uint64_t (*)(uint64_t))MEMORY[0x24BEB8FE0], MEMORY[0x24BEB8FF8]);
    v3 = v2;
    result = MEMORY[0x242670A44](MEMORY[0x24BEE4AB0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256E70570);
  }
  return result;
}

uint64_t sub_23F3830AC()
{
  return sub_23F382EDC() & 1;
}

uint64_t sub_23F3830C4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)(v2 - 88) = a1;
  v3 = v1[77];
  *(_QWORD *)(v2 - 256) = v1[78];
  *(_QWORD *)(v2 - 248) = v3;
  v4 = v1[74];
  *(_QWORD *)(v2 - 240) = v1[76];
  *(_QWORD *)(v2 - 232) = v4;
  v5 = v1[68];
  *(_QWORD *)(v2 - 224) = v1[71];
  *(_QWORD *)(v2 - 216) = v5;
  v6 = v1[66];
  *(_QWORD *)(v2 - 208) = v1[67];
  *(_QWORD *)(v2 - 200) = v6;
  v7 = v1[63];
  *(_QWORD *)(v2 - 192) = v1[65];
  *(_QWORD *)(v2 - 184) = v7;
  v8 = v1[61];
  *(_QWORD *)(v2 - 176) = v1[62];
  *(_QWORD *)(v2 - 168) = v8;
  v9 = v1[58];
  *(_QWORD *)(v2 - 160) = v1[60];
  *(_QWORD *)(v2 - 152) = v9;
  v10 = v1[54];
  *(_QWORD *)(v2 - 144) = v1[57];
  *(_QWORD *)(v2 - 136) = v10;
  v11 = v1[50];
  *(_QWORD *)(v2 - 128) = v1[51];
  *(_QWORD *)(v2 - 120) = v11;
  v12 = v1[46];
  *(_QWORD *)(v2 - 112) = v1[47];
  *(_QWORD *)(v2 - 104) = v12;
  *(_QWORD *)(v2 - 96) = v1[43];
  return swift_task_dealloc();
}

uint64_t sub_23F383288()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 1288);
}

uint64_t sub_23F3833D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = v0[76];
  *(_QWORD *)(v1 - 256) = v0[77];
  *(_QWORD *)(v1 - 248) = v2;
  v3 = v0[71];
  *(_QWORD *)(v1 - 240) = v0[74];
  *(_QWORD *)(v1 - 232) = v3;
  v4 = v0[67];
  *(_QWORD *)(v1 - 224) = v0[68];
  *(_QWORD *)(v1 - 216) = v4;
  v5 = v0[65];
  *(_QWORD *)(v1 - 208) = v0[66];
  *(_QWORD *)(v1 - 200) = v5;
  v6 = v0[62];
  *(_QWORD *)(v1 - 192) = v0[63];
  *(_QWORD *)(v1 - 184) = v6;
  v7 = v0[60];
  *(_QWORD *)(v1 - 176) = v0[61];
  *(_QWORD *)(v1 - 168) = v7;
  v8 = v0[57];
  *(_QWORD *)(v1 - 160) = v0[58];
  *(_QWORD *)(v1 - 152) = v8;
  v9 = v0[51];
  *(_QWORD *)(v1 - 144) = v0[54];
  *(_QWORD *)(v1 - 136) = v9;
  v10 = v0[47];
  *(_QWORD *)(v1 - 128) = v0[50];
  *(_QWORD *)(v1 - 120) = v10;
  v11 = v0[43];
  *(_QWORD *)(v1 - 112) = v0[46];
  *(_QWORD *)(v1 - 104) = v11;
  return swift_task_dealloc();
}

uint64_t sub_23F38346C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23F383498()
{
  return sub_23F61CA9C();
}

void *sub_23F3834B0@<X0>(void *__dst@<X2>, const void *a2@<X8>)
{
  size_t v2;

  return memmove(__dst, a2, v2);
}

uint64_t sub_23F3834E4()
{
  return sub_23F61CA9C();
}

uint64_t sub_23F3834F0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = v0[74];
  *(_QWORD *)(v1 - 256) = v0[76];
  *(_QWORD *)(v1 - 248) = v2;
  v3 = v0[68];
  *(_QWORD *)(v1 - 240) = v0[71];
  *(_QWORD *)(v1 - 232) = v3;
  v4 = v0[66];
  *(_QWORD *)(v1 - 224) = v0[67];
  *(_QWORD *)(v1 - 216) = v4;
  v5 = v0[63];
  *(_QWORD *)(v1 - 208) = v0[65];
  *(_QWORD *)(v1 - 200) = v5;
  v6 = v0[61];
  *(_QWORD *)(v1 - 192) = v0[62];
  *(_QWORD *)(v1 - 184) = v6;
  v7 = v0[58];
  *(_QWORD *)(v1 - 176) = v0[60];
  *(_QWORD *)(v1 - 168) = v7;
  v8 = v0[54];
  *(_QWORD *)(v1 - 160) = v0[57];
  *(_QWORD *)(v1 - 152) = v8;
  v9 = v0[50];
  *(_QWORD *)(v1 - 144) = v0[51];
  *(_QWORD *)(v1 - 136) = v9;
  v10 = v0[46];
  *(_QWORD *)(v1 - 128) = v0[47];
  *(_QWORD *)(v1 - 120) = v10;
  *(_QWORD *)(v1 - 112) = v0[43];
  return swift_task_dealloc();
}

uint64_t sub_23F383594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  return sub_23F35D2E8(a5);
}

uint64_t sub_23F38359C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23F36196C(a1, a2, a3, a4);
}

uint64_t sub_23F3835D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v4)(_QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v5;

  return v4(0, v5, a3, v3);
}

uint64_t sub_23F3835F4()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_23F383608()
{
  return sub_23F375F64();
}

uint64_t sub_23F383618()
{
  return sub_23F61C040();
}

void sub_23F383644(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = 2 * (a1 / v1);
}

uint64_t sub_23F383654()
{
  return 0;
}

uint64_t sub_23F383690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t sub_23F3836A8()
{
  return sub_23F617BA0();
}

uint64_t sub_23F3836C0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F3836D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23F36196C(a1, a2, a3, a4);
}

uint64_t sub_23F38370C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23F36196C(a1, a2, a3, a4);
}

uint64_t sub_23F383718()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F38372C()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v0 + 32, v2);
}

uint64_t sub_23F383738()
{
  return sub_23F617BA0();
}

uint64_t sub_23F383740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F36195C(a1, a2, a3);
}

void sub_23F383754(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = 2 * a1;
}

uint64_t sub_23F38378C()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = 0x8000000000000000;
  return v1;
}

uint64_t sub_23F3837B0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F3837B8()
{
  return swift_bridgeObjectRelease();
}

size_t sub_23F3837E8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  size_t result;

  result = j__malloc_size(a1);
  a1[2] = v1;
  a1[3] = 2 * ((uint64_t)(result - 32) / v2);
  return result;
}

void sub_23F383838(uint64_t a1)
{
  uint64_t *v1;

  sub_23F3625D8(a1, v1);
}

uint64_t sub_23F383850()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

uint64_t sub_23F383858()
{
  return 0;
}

uint64_t sub_23F383868()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383870()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383878()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383880()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383888()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383890()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383898()
{
  return swift_task_dealloc();
}

void sub_23F3838A0()
{
  void *v0;

}

uint64_t sub_23F3838CC@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_23F3838D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23F36196C(a1, 1, 1, a4);
}

uint64_t sub_23F3838F0()
{
  return sub_23F61B404();
}

uint64_t sub_23F3838F8()
{
  return sub_23F61CC94();
}

uint64_t sub_23F383914()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

unint64_t sub_23F383924(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(_QWORD *)(a4 + 8 * (result >> 6) + 64) |= 1 << result;
  return result;
}

void sub_23F383954()
{
  _QWORD *v0;

  *v0 = 0x8000000000000000;
}

uint64_t sub_23F383970()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383978()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383980()
{
  return swift_task_dealloc();
}

void sub_23F38399C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = *(_QWORD *)(v0 + 120);
}

uint64_t sub_23F3839CC@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 + 64) |= 1 << result;
  return result;
}

void sub_23F383A00()
{
  _QWORD *v0;

  *v0 = 0x8000000000000000;
}

uint64_t sub_23F383A1C()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_23F383A54()
{
  return 0;
}

uint64_t sub_23F383A70()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t sub_23F383AB4()
{
  return 0;
}

BOOL sub_23F383AC4(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_23F383AD4()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383ADC()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383AE4()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383AEC()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383AF4()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383AFC()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383B04()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383B0C()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383B14()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383B1C()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383B24()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383B2C()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383B34()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383B3C()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383B44()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383B4C()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383B54()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383B5C()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383B64()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383B6C()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383B74()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383B7C()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383B84()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383B8C()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383B94()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383B9C()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383BA4()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383BAC()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383BB4()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383BBC()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383BC4()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383BCC()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383BD4()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383BDC()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383BE4()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383BEC()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383BF4()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383BFC()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383C04()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383C0C()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383C14()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383C1C()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383C24()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383C2C()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383C34()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383C3C()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383C44()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383C4C()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383C54()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383C5C()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383C64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_23F383C6C()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383C74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  return sub_23F37568C(v5, v4, a3, a4);
}

uint64_t sub_23F383C80()
{
  return sub_23F61CA18();
}

uint64_t sub_23F383C94()
{
  return sub_23F61CA18();
}

uint64_t sub_23F383CA8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_23F383CB0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F383CC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23F36196C(a1, a2, 1, v2);
}

uint64_t sub_23F383CD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23F36196C(a1, a2, 1, v2);
}

uint64_t sub_23F383CDC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F383CF0()
{
  return swift_allocObject();
}

uint64_t sub_23F383D28()
{
  return swift_allocObject();
}

uint64_t sub_23F383D4C()
{
  return 0;
}

void sub_23F383D60(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  os_log_type_t v4;
  uint8_t *v5;
  NSObject *v6;

  _os_log_impl(a1, v6, v4, a4, v5, 2u);
}

uint64_t sub_23F383D74@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

unint64_t sub_23F383D7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = v0;
  return v3
       + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
       + *(_QWORD *)(v1 + 72) * v2;
}

uint64_t sub_23F383DB4()
{
  uint64_t v0;

  return v0 + 32;
}

uint64_t sub_23F383DC4()
{
  return swift_task_dealloc();
}

uint64_t sub_23F383DCC()
{
  return swift_task_dealloc();
}

void sub_23F383E14(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = 2 * (a1 / v3);
}

uint64_t sub_23F383E24()
{
  return 0;
}

uint64_t sub_23F383E3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v3 = *(_QWORD *)(v2 - 72);
  v4 = *(_OWORD *)(v2 - 88);
  *(_OWORD *)a2 = *(_OWORD *)(v2 - 104);
  *(_OWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 32) = v3;
  return swift_willThrow();
}

uint64_t sub_23F383E5C()
{
  return sub_23F617BA0();
}

uint64_t sub_23F383E64@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_23F383E7C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 - 256) = result;
  return result;
}

uint64_t sub_23F383E88@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_23F383E90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v3 + *(_QWORD *)(*(_QWORD *)(a1 - 8) + 72) * v2, a1);
}

uint64_t sub_23F383EB0()
{
  return sub_23F617BA0();
}

uint64_t sub_23F383EDC()
{
  return swift_release();
}

uint64_t sub_23F383EE4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F383EF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t *v10;
  uint64_t result;

  result = *v10;
  *v10 = a10;
  return result;
}

uint64_t sub_23F383F00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_23F383F08()
{
  return swift_task_switch();
}

uint64_t sub_23F383F38()
{
  return swift_arrayInitWithTakeBackToFront();
}

uint64_t sub_23F383F48()
{
  return swift_arrayInitWithTakeFrontToBack();
}

uint64_t sub_23F383F74()
{
  uint64_t v0;

  return v0 + 32;
}

uint64_t sub_23F383F80@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_23F383F88()
{
  return sub_23F61CD30();
}

uint64_t sub_23F383F94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v3 + *(_QWORD *)(*(_QWORD *)(a1 - 8) + 72) * v2, v1, a1);
}

void sub_23F383FB0(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v3)(uint64_t);

  sub_23F3612C0(a1, v3, a3);
}

uint64_t sub_23F383FB8()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = 0x8000000000000000;
  return v1;
}

uint64_t sub_23F383FDC()
{
  return swift_task_dealloc();
}

void sub_23F383FE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;

  sub_23F362600(v4 + *(_QWORD *)(*(_QWORD *)(a1 - 8) + 72) * v3, v1, v2);
}

uint64_t sub_23F384000()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 16) = v2;
  return v0;
}

uint64_t sub_23F384040()
{
  return sub_23F617D08();
}

uint64_t sub_23F384048()
{
  return sub_23F61B92C();
}

uint64_t sub_23F384060()
{
  return sub_23F619094();
}

uint64_t sub_23F38409C()
{
  return swift_task_dealloc();
}

uint64_t sub_23F3840A4()
{
  return sub_23F61A78C();
}

uint64_t sub_23F3840BC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F3840E0()
{
  return sub_23F61CA30();
}

void sub_23F3840F8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F36195C(v1, 1, v2);
  sub_23F3625D8(v1, v0);
}

uint64_t sub_23F384120()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F384128()
{
  return 0;
}

uint64_t sub_23F384148(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  return v1 + ((v2 + 32) & ~v2);
}

uint64_t sub_23F384188(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  return result;
}

uint64_t sub_23F3841C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, _QWORD)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, *(_QWORD *)(v3 - 256));
}

uint64_t sub_23F3841CC@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 256));
}

uint64_t sub_23F3841D4()
{
  return sub_23F61CA18();
}

uint64_t sub_23F3841E0()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_23F3841EC()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[70] + 8))(v0[71], v0[69]);
}

uint64_t sub_23F384200()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F384220()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F38422C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F384238()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t sub_23F384244()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v2, v1, v0);
}

uint64_t sub_23F384258()
{
  return sub_23F61CA18();
}

uint64_t sub_23F38426C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_23F384274@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8))();
}

void sub_23F384288()
{
  uint64_t v0;
  uint64_t *v1;

  sub_23F3625D8(v0, v1);
}

uint64_t sub_23F384294(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_23F3842B0()
{
  uint64_t v0;
  _QWORD *v1;

  *v1 = v0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F3842BC(uint64_t a1, uint64_t a2)
{
  return sub_23F382B64(a1, a2);
}

uint64_t sub_23F3842C4()
{
  return swift_arrayInitWithCopy();
}

uint64_t sub_23F3842D8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F3842E4()
{
  return 0;
}

uint64_t sub_23F38431C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_23F384324()
{
  return sub_23F617BA0();
}

uint64_t sub_23F38432C()
{
  return swift_bridgeObjectRelease();
}

void sub_23F384334()
{
  sub_23F376F10();
}

void sub_23F384348()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 + 16) = v3;
  v5 = v2 + 16 * v4;
  *(_QWORD *)(v5 + 32) = v0;
  *(_QWORD *)(v5 + 40) = v1;
}

uint64_t sub_23F384364()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F38436C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F3843B0()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

uint64_t sub_23F3843E4(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 - 112))(a1, *(_QWORD *)(v1 - 120));
}

void sub_23F384408(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F382F88(*(_QWORD *)(v2 - 136), a2);
}

uint64_t sub_23F384410()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F38443C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F384444()
{
  uint64_t v0;

  return v0 + 32;
}

uint64_t sub_23F384450()
{
  return swift_bridgeObjectRelease();
}

BOOL sub_23F384458(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_23F384468()
{
  return 0;
}

uint64_t sub_23F384480(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_23F384488(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

void sub_23F384490(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F382F88(v2, a2);
}

uint64_t sub_23F3844A8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 200);
}

uint64_t sub_23F3844D0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F3844F0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 - 184))();
}

uint64_t sub_23F384504(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_23F35D2E8(a3);
}

uint64_t sub_23F384514@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return sub_23F61B3EC();
}

uint64_t sub_23F384524@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return sub_23F61B3A4();
}

BOOL sub_23F384534(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_23F384544()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_23F38455C()
{
  return swift_arrayInitWithCopy();
}

uint64_t sub_23F38456C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_23F38458C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F3845B4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = v0;
  return 0;
}

uint64_t sub_23F3845E4()
{
  return 0;
}

uint64_t sub_23F384614(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_23F38461C()
{
  uint64_t v0;

  return v0;
}

void sub_23F38462C()
{
  sub_23F376F10();
}

void sub_23F38463C()
{
  sub_23F376F10();
}

uint64_t sub_23F38464C()
{
  uint64_t v0;

  return v0;
}

void sub_23F38465C(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F382F88(v2, a2);
}

uint64_t sub_23F384664()
{
  uint64_t v0;

  return v0;
}

void sub_23F384670(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F362600(a1, a2, v2);
}

uint64_t sub_23F384678()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F384690()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F3846CC()
{
  return sub_23F61811C();
}

uint64_t sub_23F3846D4()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

uint64_t sub_23F3846DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  return a5(0);
}

uint64_t sub_23F3846E4()
{
  return sub_23F617000();
}

uint64_t sub_23F3846EC()
{
  return sub_23F618134();
}

uint64_t sub_23F3846F4(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  return a2(0);
}

uint64_t sub_23F3846FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

void sub_23F384704()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = v0;
}

void sub_23F38471C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = v0;
}

void sub_23F384734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 - 120) = a3;
  *(_QWORD *)(v4 - 112) = a4;
}

uint64_t sub_23F38474C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F384760()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t sub_23F38476C()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

void sub_23F384778(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F382F88(*(_QWORD *)(v2 - 144), a2);
}

uint64_t sub_23F384798()
{
  return swift_release();
}

uint64_t sub_23F3847A0(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_23F3847A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(a1, v2);
}

uint64_t sub_23F38480C()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_23F384838()
{
  uint64_t *v0;

  return sub_23F35D2E8(v0);
}

uint64_t sub_23F384840@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_23F384848(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

void sub_23F384850(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_23F382F88(a1, v1);
}

void sub_23F38485C(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, a2, a3, a4, a5, 0xCu);
}

uint64_t sub_23F384870()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 1288);
}

uint64_t sub_23F384884()
{
  return sub_23F61B17C();
}

uint64_t sub_23F3848A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_23F3848A8()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_23F3848C0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F3848CC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F3848D8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F3848E4()
{
  return sub_23F37E444();
}

uint64_t sub_23F3848F0()
{
  uint64_t v0;

  return v0;
}

void sub_23F3848FC()
{
  uint64_t v0;
  uint64_t *v1;

  sub_23F3625D8(v0, v1);
}

uint64_t sub_23F384908()
{
  return swift_task_alloc();
}

void sub_23F384910(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F362600(a1, a2, v2);
}

uint64_t sub_23F384918@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_23F38492C(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, v1, v3);
}

uint64_t sub_23F384938()
{
  return sub_23F61CA18();
}

uint64_t sub_23F384964()
{
  return sub_23F61AA08();
}

uint64_t sub_23F38496C()
{
  return swift_release();
}

uint64_t sub_23F384974()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F384980()
{
  uint64_t *v0;

  return sub_23F35D2E8(v0);
}

uint64_t sub_23F384988()
{
  return sub_23F61C61C();
}

void sub_23F384990(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
}

uint64_t sub_23F3849B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 - 104) = a4;
  return sub_23F35D2E8(a4);
}

uint64_t sub_23F3849BC(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, _QWORD);
  uint64_t v2;

  return v1(a1, *(_QWORD *)(v2 - 144));
}

void sub_23F3849C4(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F382F88(v2, a2);
}

uint64_t sub_23F3849CC()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_23F3849D4()
{
  return sub_23F37E378();
}

uint64_t sub_23F3849E0()
{
  return sub_23F37E1EC();
}

uint64_t sub_23F384A00()
{
  return sub_23F617BA0();
}

void sub_23F384A08()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F3625D8(v0, *(uint64_t **)(v1 - 104));
}

uint64_t sub_23F384A14()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F384A38()
{
  return 0;
}

uint64_t sub_23F384A44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v1, v2);
}

uint64_t sub_23F384A78()
{
  return swift_release();
}

uint64_t sub_23F384A80()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_23F384A88()
{
  return sub_23F61A024();
}

void sub_23F384A94(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F382F88(v2, a2);
}

void sub_23F384AA8()
{
  sub_23F375614();
}

uint64_t sub_23F384AB4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F384AC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t sub_23F384ACC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F384AF8()
{
  return swift_release();
}

uint64_t sub_23F384B00()
{
  return sub_23F617BA0();
}

uint64_t sub_23F384B34()
{
  return sub_23F61B32C();
}

uint64_t sub_23F384B3C()
{
  return type metadata accessor for QueryDecorationCacheKey(0);
}

uint64_t sub_23F384B44()
{
  return sub_23F61B5D8();
}

uint64_t sub_23F384B4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;

  *(_QWORD *)(v4 - 104) = a4;
  return a4(0);
}

uint64_t sub_23F384B58()
{
  return type metadata accessor for InterpreterError();
}

uint64_t sub_23F384B60()
{
  return sub_23F61CA54();
}

void sub_23F384B78(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 64) |= v1;
}

uint64_t sub_23F384B8C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v17;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = MEMORY[0x24BEE4AF8];
  if (v3)
  {
    v17 = MEMORY[0x24BEE4AF8];
    sub_23F37B47C();
    v4 = v17;
    sub_23F6174EC();
    sub_23F383D14();
    v7 = a1 + v6;
    v9 = *(_QWORD *)(v8 + 72);
    do
    {
      v10 = a3();
      v12 = v11;
      v13 = *(_QWORD *)(v17 + 16);
      if (v13 >= *(_QWORD *)(v17 + 24) >> 1)
        sub_23F37B47C();
      *(_QWORD *)(v17 + 16) = v13 + 1;
      v14 = v17 + 16 * v13;
      *(_QWORD *)(v14 + 32) = v10;
      *(_QWORD *)(v14 + 40) = v12;
      v7 += v9;
      --v3;
    }
    while (v3);
  }
  return v4;
}

char *SmithWatermanTokenAligner.AlignmentResult.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t (*v8)(void);
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46[8];
  char v47[8];
  char v48[16];
  char *v49;
  unint64_t v50;

  v1 = *v0;
  v2 = v0[2];
  v45 = v0[6];
  v44 = v0[7];
  sub_23F35D2E8(&qword_256E700E8);
  v3 = sub_23F36682C();
  *(_OWORD *)(v3 + 16) = xmmword_23F61E8A0;
  sub_23F389FDC();
  sub_23F389D0C();
  sub_23F389E60((uint64_t)"Tokenized Utterance: \"");
  sub_23F35D2E8(&qword_256E70580);
  sub_23F389844((unint64_t *)&qword_256E70588, &qword_256E70580, MEMORY[0x24BEE12B0]);
  sub_23F38995C();
  sub_23F389C2C();
  sub_23F38432C();
  sub_23F389B44();
  *(_QWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0xE000000000000000;
  sub_23F389FDC();
  sub_23F389D0C();
  sub_23F389E60((uint64_t)"Tokenized Predicted: \"");
  sub_23F38995C();
  sub_23F389C2C();
  sub_23F38432C();
  sub_23F389B44();
  *(_QWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 56) = 0xE000000000000000;
  v49 = 0;
  v50 = 0xE000000000000000;
  sub_23F389FDC();
  sub_23F389D0C();
  sub_23F389E60((uint64_t)"Tokenized Alignment: \"");
  sub_23F384B8C(v1, (uint64_t)v48, MEMORY[0x24BE69078]);
  sub_23F38995C();
  v4 = v2;
  swift_bridgeObjectRelease();
  sub_23F61C280();
  swift_bridgeObjectRelease();
  sub_23F389B44();
  v5 = v50;
  *(_QWORD *)(v3 + 64) = v49;
  *(_QWORD *)(v3 + 72) = v5;
  *(_QWORD *)(v3 + 80) = 0;
  *(_QWORD *)(v3 + 88) = 0xE000000000000000;
  *(_QWORD *)(v3 + 96) = 0;
  *(_QWORD *)(v3 + 104) = 0xE000000000000000;
  v49 = (char *)v3;
  v41 = sub_23F61C088();
  v7 = v6;
  sub_23F3837B0();
  v8 = MEMORY[0x24BE69058];
  sub_23F384B8C(v44, (uint64_t)v47, MEMORY[0x24BE69058]);
  v49 = (char *)&unk_250FD0828;
  sub_23F385EB0();
  v9 = v49;
  sub_23F384B8C(v45, (uint64_t)v46, v8);
  v49 = (char *)&unk_250FD0858;
  sub_23F385EB0();
  v10 = v49;
  v11 = *(_QWORD *)(v4 + 16);
  v42 = v9;
  if (v11)
  {
    sub_23F384324();
    v12 = 0;
    v13 = MEMORY[0x24BEE4AF8];
    do
    {
      v14 = *(_QWORD *)(v4 + 8 * v12 + 32);
      v15 = *(_QWORD *)(v14 + 16);
      v16 = *(_QWORD *)(v13 + 16);
      if (__OFADD__(v16, v15))
      {
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
        JUMPOUT(0x23F385A78);
      }
      sub_23F617BA0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v16 + v15 > *(_QWORD *)(v13 + 24) >> 1)
      {
        sub_23F376CA4();
        v13 = v17;
      }
      if (*(_QWORD *)(v14 + 16))
      {
        v18 = *(_QWORD *)(v13 + 16);
        if ((*(_QWORD *)(v13 + 24) >> 1) - v18 < v15)
          goto LABEL_43;
        v19 = (void *)(v13 + 8 * v18 + 32);
        if (v14 + 32 < (unint64_t)v19 + 8 * v15 && (unint64_t)v19 < v14 + 32 + 8 * v15)
        {
          sub_23F3833BC();
          sub_23F61CA9C();
          __break(1u);
          JUMPOUT(0x23F385AD4);
        }
        memcpy(v19, (const void *)(v14 + 32), 8 * v15);
        if (v15)
        {
          v21 = *(_QWORD *)(v13 + 16);
          v22 = __OFADD__(v21, v15);
          v23 = v21 + v15;
          if (v22)
            goto LABEL_44;
          *(_QWORD *)(v13 + 16) = v23;
        }
      }
      else if (v15)
      {
        goto LABEL_42;
      }
      swift_bridgeObjectRelease();
      ++v12;
    }
    while (v11 != v12);
    sub_23F38432C();
    v9 = v42;
  }
  else
  {
    v13 = MEMORY[0x24BEE4AF8];
  }
  v24 = sub_23F385AE4(v13);
  v26 = v25;
  sub_23F362D18();
  if ((v26 & 1) == 0)
  {
    sub_23F35D2E8(&qword_256E70590);
    v27 = sub_23F36682C();
    v28 = MEMORY[0x24BEE13C8];
    *(_OWORD *)(v27 + 16) = xmmword_23F61E7E0;
    v29 = MEMORY[0x24BEE1448];
    *(_QWORD *)(v27 + 56) = v28;
    *(_QWORD *)(v27 + 64) = v29;
    *(_QWORD *)(v27 + 32) = v24;
    v49 = (char *)sub_23F61C130();
    v50 = v30;
    sub_23F389B44();
    sub_23F389B44();
    v31 = sub_23F61C238();
    swift_bridgeObjectRelease();
    v32 = *((_QWORD *)v9 + 2);
    if (v32)
    {
      v33 = v32 - 1;
      if (v32 == 1)
      {
        sub_23F389CDC();
      }
      else
      {
        sub_23F362CDC();
        sub_23F389CDC();
        v35 = v9 + 56;
        do
        {
          sub_23F384324();
          sub_23F61C238();
          sub_23F61C238();
          v35 += 16;
          swift_bridgeObjectRelease();
          --v33;
        }
        while (v33);
        sub_23F3837B0();
      }
      v34 = sub_23F61C238();
      sub_23F362D08();
    }
    else
    {
      v34 = 0;
    }
    v36 = *((_QWORD *)v10 + 2);
    if (v36)
    {
      v37 = v36 - 1;
      if (v36 == 1)
      {
        sub_23F362CDC();
      }
      else
      {
        sub_23F384B00();
        sub_23F362CDC();
        v39 = v10 + 56;
        do
        {
          sub_23F384B00();
          sub_23F61C238();
          sub_23F61C238();
          v39 += 16;
          swift_bridgeObjectRelease();
          --v37;
        }
        while (v37);
        sub_23F384364();
      }
      v38 = sub_23F61C238();
      sub_23F362C60();
    }
    else
    {
      v38 = 0;
    }
    v43 = sub_23F385DE0(v31, v34, v38, MEMORY[0x24BEE4AF8]);
    *(_OWORD *)(sub_23F36682C() + 16) = xmmword_23F61D990;
    if (!__OFADD__(v43, 2))
      sub_23F389DD8();
    __break(1u);
    JUMPOUT(0x23F385A8CLL);
  }
  sub_23F384364();
  sub_23F362C60();
  v49 = (char *)v41;
  v50 = v7;
  sub_23F617BA0();
  sub_23F389C2C();
  swift_bridgeObjectRelease();
  return v49;
}

uint64_t sub_23F385AE4(uint64_t a1)
{
  uint64_t v1;
  double v2;
  uint64_t v3;
  double *v4;
  double v5;
  double v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  v2 = *(double *)(a1 + 32);
  v3 = v1 - 1;
  if (v1 != 1)
  {
    v4 = (double *)(a1 + 40);
    do
    {
      v5 = *v4++;
      v6 = v5;
      if (v2 < v5)
        v2 = v6;
      --v3;
    }
    while (v3);
  }
  return *(_QWORD *)&v2;
}

uint64_t sub_23F385B28(_QWORD *a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v1 = a1[2];
  if (!v1)
    return 0;
  result = a1[4];
  v4 = v1 - 1;
  if (v1 != 1)
  {
    v5 = a1 + 5;
    do
    {
      v7 = *v5++;
      v6 = v7;
      if (result <= v7)
        result = v6;
      --v4;
    }
    while (v4);
  }
  return result;
}

uint64_t sub_23F385B6C(uint64_t a1)
{
  uint64_t result;
  unint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;

  result = sub_23F38231C(a1, &v17);
  if (v21)
  {
    v2 = (v21 - 1) & v21;
    v3 = __clz(__rbit64(v21)) | (v20 << 6);
    v4 = (unint64_t)(v19 + 64) >> 6;
    v5 = v20;
    goto LABEL_3;
  }
  v14 = v20 + 1;
  if (__OFADD__(v20, 1))
  {
LABEL_45:
    __break(1u);
    return result;
  }
  v4 = (unint64_t)(v19 + 64) >> 6;
  if (v14 < v4)
  {
    v15 = *(_QWORD *)(v18 + 8 * v14);
    v5 = v20 + 1;
    if (v15)
    {
LABEL_29:
      v2 = (v15 - 1) & v15;
      v3 = __clz(__rbit64(v15)) + (v5 << 6);
LABEL_3:
      v6 = *(_QWORD *)(v17 + 56);
      v7 = *(_QWORD *)(v6 + 8 * v3);
      if (!v2)
        goto LABEL_5;
LABEL_4:
      v8 = __clz(__rbit64(v2));
      v2 &= v2 - 1;
      v9 = v8 | (v5 << 6);
      while (1)
      {
        if (v7 <= *(_QWORD *)(v6 + 8 * v9))
          v7 = *(_QWORD *)(v6 + 8 * v9);
        if (v2)
          goto LABEL_4;
LABEL_5:
        v10 = v5 + 1;
        if (__OFADD__(v5, 1))
          break;
        if (v10 >= v4)
          goto LABEL_25;
        v11 = *(_QWORD *)(v18 + 8 * v10);
        v12 = v5 + 1;
        if (!v11)
        {
          v12 = v5 + 2;
          if (v5 + 2 >= v4)
            goto LABEL_25;
          v11 = *(_QWORD *)(v18 + 8 * v12);
          if (!v11)
          {
            v12 = v5 + 3;
            if (v5 + 3 >= v4)
              goto LABEL_25;
            v11 = *(_QWORD *)(v18 + 8 * v12);
            if (!v11)
            {
              v12 = v5 + 4;
              if (v5 + 4 >= v4)
                goto LABEL_25;
              v11 = *(_QWORD *)(v18 + 8 * v12);
              if (!v11)
              {
                v12 = v5 + 5;
                if (v5 + 5 >= v4)
                  goto LABEL_25;
                v11 = *(_QWORD *)(v18 + 8 * v12);
                if (!v11)
                {
                  v13 = v5 + 6;
                  while (v13 < v4)
                  {
                    v11 = *(_QWORD *)(v18 + 8 * v13++);
                    if (v11)
                    {
                      v12 = v13 - 1;
                      goto LABEL_20;
                    }
                  }
LABEL_25:
                  sub_23F3668F4();
                  swift_release();
                  return v7;
                }
              }
            }
          }
        }
LABEL_20:
        v2 = (v11 - 1) & v11;
        v9 = __clz(__rbit64(v11)) + (v12 << 6);
        v5 = v12;
      }
      __break(1u);
      goto LABEL_45;
    }
    v5 = v20 + 2;
    if (v20 + 2 < v4)
    {
      v15 = *(_QWORD *)(v18 + 8 * v5);
      if (v15)
        goto LABEL_29;
      v5 = v20 + 3;
      if (v20 + 3 < v4)
      {
        v15 = *(_QWORD *)(v18 + 8 * v5);
        if (v15)
          goto LABEL_29;
        v5 = v20 + 4;
        if (v20 + 4 < v4)
        {
          v15 = *(_QWORD *)(v18 + 8 * v5);
          if (v15)
            goto LABEL_29;
          v5 = v20 + 5;
          if (v20 + 5 < v4)
          {
            v15 = *(_QWORD *)(v18 + 8 * v5);
            if (v15)
              goto LABEL_29;
            v16 = v20 + 6;
            while (v16 < v4)
            {
              v15 = *(_QWORD *)(v18 + 8 * v16++);
              if (v15)
              {
                v5 = v16 - 1;
                goto LABEL_29;
              }
            }
          }
        }
      }
    }
  }
  sub_23F3668F4();
  sub_23F38981C((uint64_t)&v17);
  return 0;
}

unint64_t sub_23F385D88(uint64_t a1)
{
  uint64_t v1;
  float v2;
  uint64_t v3;
  float *v4;
  float v5;
  float v6;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = *(float *)(a1 + 32);
    v3 = v1 - 1;
    if (v1 != 1)
    {
      v4 = (float *)(a1 + 36);
      do
      {
        v5 = *v4++;
        v6 = v5;
        if (v2 < v5)
          v2 = v6;
        --v3;
      }
      while (v3);
    }
    v7 = LODWORD(v2);
  }
  else
  {
    v7 = 0;
  }
  return v7 | ((unint64_t)(v1 == 0) << 32);
}

uint64_t sub_23F385DE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;

  if (a2 <= a1)
    v4 = a1;
  else
    v4 = a2;
  if (v4 <= a3)
    result = a3;
  else
    result = v4;
  v6 = *(_QWORD *)(a4 + 16);
  if (v6)
  {
    v7 = (uint64_t *)(a4 + 32);
    do
    {
      v9 = *v7++;
      v8 = v9;
      if (v9 > result)
        result = v8;
      --v6;
    }
    while (v6);
  }
  return result;
}

void sub_23F385E18()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F3898C8();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_23F3898DC() || (sub_23F389B38(), !(v6 ^ v4 | v5)))
  {
    sub_23F3899A0();
    sub_23F376C6C();
    v2 = v7;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  sub_23F3898B4();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_23F389910();
  sub_23F3C1830();
  if (!v3)
  {
LABEL_11:
    sub_23F362D18();
    *v1 = v2;
    sub_23F383488();
    return;
  }
  sub_23F389A80();
  if (!v4)
  {
    *(_QWORD *)(v2 + 16) = v8;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_23F385EB0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F3898C8();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_23F3898DC() || (sub_23F389B38(), !(v6 ^ v4 | v5)))
  {
    sub_23F3899A0();
    sub_23F376C88();
    v2 = v7;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  sub_23F3898B4();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_23F389910();
  sub_23F3C179C();
  if (!v3)
  {
LABEL_11:
    sub_23F362D18();
    *v1 = v2;
    sub_23F383488();
    return;
  }
  sub_23F389A80();
  if (!v4)
  {
    *(_QWORD *)(v2 + 16) = v8;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_23F385F44()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  int v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  sub_23F362ABC();
  v7 = v6;
  sub_23F61A1D4();
  sub_23F389AF8();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F3899EC(v9, v65);
  sub_23F35D2E8(&qword_256E705D8);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F389880();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F389A6C();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F389C34();
  if (v13)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v14 = sub_23F389D28();
  *v1 = v4;
  if (!v14 || *(_QWORD *)(v4 + 24) >> 1 < v5)
  {
    sub_23F38A070();
    v4 = v15;
    sub_23F389990(v15);
  }
  sub_23F389AD0();
  v16 = (_QWORD *)sub_23F389E90();
  v20 = sub_23F38842C(v16, v17, v18, v19);
  if (v20 < v0)
    goto LABEL_12;
  if (v20)
  {
    v21 = *(_QWORD *)(v4 + 16);
    v13 = __OFADD__(v21, v20);
    v22 = v21 + v20;
    if (v13)
    {
      __break(1u);
LABEL_57:
      sub_23F389F9C();
LABEL_58:
      sub_23F38A0D4();
      sub_23F389C74();
      sub_23F362948();
      return;
    }
    *(_QWORD *)(v4 + 16) = v22;
  }
  if (v20 != v5)
  {
    sub_23F389A8C();
    sub_23F38989C();
    return;
  }
LABEL_13:
  sub_23F389E48();
  if (v23)
  {
    sub_23F389CF0(v23);
    goto LABEL_15;
  }
  if (!__OFADD__(v24, 1))
  {
    sub_23F389B80();
    if (v31 != v13)
    {
      sub_23F389FE4();
      if (v52)
        goto LABEL_63;
      sub_23F389B98();
      if (v31 == v13)
      {
LABEL_83:
        v67 = v53;
        goto LABEL_84;
      }
      if (!*(_QWORD *)(v55 + 8 * v54))
        goto LABEL_69;
      goto LABEL_67;
    }
    v26 = 1;
LABEL_16:
    v27 = sub_23F389BC0(v25, v26);
    sub_23F389C9C(v27, v28, &qword_256E705D8);
    v29 = v7;
    sub_23F389920(v0);
    if (v30)
      goto LABEL_58;
    v7 = (char *)&qword_256E705D8;
    v0 = v68;
    while (1)
    {
      sub_23F389C0C(v0);
      sub_23F389D34();
      if (v31 != v13)
      {
        sub_23F38A070();
        sub_23F389F38(v50);
      }
      v0 = v69;
      sub_23F389CB4(v2, v3);
      sub_23F389920(v3);
      if (!v30)
        break;
LABEL_22:
      sub_23F389C0C(v3);
LABEL_53:
      sub_23F389B4C();
      sub_23F389920(v0);
      if (v30)
        goto LABEL_57;
    }
    sub_23F38A0E0();
    while (1)
    {
      sub_23F389F28();
      if (v5 >= v66)
      {
        sub_23F389EAC();
        goto LABEL_53;
      }
      sub_23F389C0C(v2);
      sub_23F389DB8();
      sub_23F389F50();
      if (v32)
      {
        sub_23F389E20();
      }
      else
      {
        if (__OFADD__(v29, 1))
        {
          __break(1u);
LABEL_69:
          sub_23F389B8C();
          if (v31 != v13)
          {
            if (*(_QWORD *)(v58 + 8 * v57))
            {
              v51 = v57;
              goto LABEL_63;
            }
            sub_23F389B74();
            if (v31 == v13)
            {
              v67 = v59;
              goto LABEL_84;
            }
            if (!*(_QWORD *)(v60 + 8 * v54))
            {
              sub_23F389B68();
              if (v31 == v13)
                goto LABEL_85;
              if (!*(_QWORD *)(v62 + 8 * v51))
              {
                v53 = v61 - 1;
                v63 = v67 + 6;
                while (v63 < v61)
                {
                  if (*(_QWORD *)(v62 + 8 * v63++))
                  {
                    v51 = v63 - 1;
                    goto LABEL_63;
                  }
                }
                goto LABEL_83;
              }
LABEL_63:
              sub_23F389B08(v51);
LABEL_15:
              v25 = sub_23F389BF4();
              v26 = 0;
              goto LABEL_16;
            }
LABEL_67:
            v51 = v54;
            goto LABEL_63;
          }
LABEL_85:
          v67 = v56;
LABEL_84:
          sub_23F389F88();
          goto LABEL_16;
        }
        sub_23F389B80();
        if (v31 == v13)
        {
          v34 = 1;
          goto LABEL_32;
        }
        if (!*(_QWORD *)(v36 + 8 * v35))
        {
          sub_23F389B98();
          if (v31 == v13)
            goto LABEL_36;
          if (!*(_QWORD *)(v40 + 8 * v39))
          {
            sub_23F389B8C();
            if (v31 == v13)
              goto LABEL_39;
            if (!*(_QWORD *)(v42 + 8 * v41))
            {
              sub_23F389B74();
              if (v31 == v13)
              {
                v34 = 1;
                v29 = v44;
                goto LABEL_32;
              }
              if (!*(_QWORD *)(v45 + 8 * v43))
              {
                sub_23F389B68();
                if (v31 == v13)
                {
LABEL_39:
                  sub_23F389C54();
                  goto LABEL_32;
                }
                if (!*(_QWORD *)(v67 + 8 * v46))
                {
                  v48 = v29 + 6;
                  while ((uint64_t)v48 < v47)
                  {
                    sub_23F38A020();
                    if (v49)
                      goto LABEL_31;
                  }
LABEL_36:
                  sub_23F389C64();
                  goto LABEL_32;
                }
              }
            }
          }
        }
LABEL_31:
        sub_23F389D64();
      }
      v33 = sub_23F389BA4();
      v34 = 0;
LABEL_32:
      v37 = sub_23F3899AC(v33, v34);
      v7 = (char *)&qword_256E705D8;
      sub_23F389CB4(v37, v38);
      sub_23F38A040();
      v0 = v69;
      if (v30)
        goto LABEL_22;
    }
  }
  __break(1u);
}

void sub_23F38631C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  sub_23F3898C8();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_23F3898DC() || (sub_23F389B38(), !(v6 ^ v4 | v5)))
  {
    sub_23F3899A0();
    sub_23F377378();
    v2 = v7;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  sub_23F3898B4();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = sub_23F389910();
  sub_23F3C1BB0(v8, v9, v10);
  if (!v3)
  {
LABEL_11:
    sub_23F362D18();
    *v1 = v2;
    sub_23F383488();
    return;
  }
  sub_23F389A80();
  if (!v4)
  {
    *(_QWORD *)(v2 + 16) = v11;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

uint64_t sub_23F3863B4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  __int128 v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  int64_t v35;
  unint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[2];
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v5 = a1;
  if (!swift_isUniquelyReferenced_nonNull_native() || (v6 = *(_QWORD *)(v3 + 24) >> 1, v6 < v4 + v2))
  {
    sub_23F377378();
    v3 = v7;
    v6 = *(_QWORD *)(v7 + 24) >> 1;
  }
  v8 = *(_QWORD *)(v3 + 16);
  v9 = v6 - v8;
  result = (uint64_t)sub_23F3886F4(v50, v3 + 24 * v8 + 32, v6 - v8, v5);
  if (result < v2)
    goto LABEL_12;
  if (result)
  {
    v14 = *(_QWORD *)(v3 + 16);
    v15 = __OFADD__(v14, result);
    v16 = v14 + result;
    if (v15)
    {
      __break(1u);
      goto LABEL_42;
    }
    *(_QWORD *)(v3 + 16) = v16;
  }
  if (result != v9)
  {
LABEL_10:
    result = sub_23F382E18();
    *v1 = v3;
    return result;
  }
LABEL_13:
  v5 = *(_QWORD *)(v3 + 16);
  result = v50[0];
  v11 = v50[1];
  v12 = v51;
  v13 = v52;
  if (!v53)
  {
LABEL_42:
    v35 = v13 + 1;
    if (__OFADD__(v13, 1))
      goto LABEL_60;
    v19 = (unint64_t)(v12 + 64) >> 6;
    if (v35 >= v19)
      goto LABEL_10;
    v36 = *(_QWORD *)(v11 + 8 * v35);
    v37 = v13 + 1;
    if (!v36)
    {
      if (v13 + 2 >= v19)
        goto LABEL_10;
      result = sub_23F389A58();
      if (!v36)
      {
        if (v38 + 2 >= v19)
          goto LABEL_10;
        result = sub_23F389A58();
        if (!v36)
        {
          if (v39 + 3 >= v19)
            goto LABEL_10;
          result = sub_23F389A58();
          if (!v36)
          {
            if (v40 + 4 >= v19)
              goto LABEL_10;
            result = sub_23F389A58();
            if (!v36)
            {
              v45 = v41 + 6;
              do
              {
                if (v45 >= v19)
                  goto LABEL_10;
                v36 = *(_QWORD *)(v43 + 8 * v45++);
              }
              while (!v36);
              v37 = v45 - 1;
              v12 = v42;
              v11 = v43;
              result = v44;
            }
          }
        }
      }
    }
    v17 = (v36 - 1) & v36;
    v18 = __clz(__rbit64(v36)) + (v37 << 6);
    v13 = v37;
    goto LABEL_15;
  }
  v17 = (v53 - 1) & v53;
  v18 = __clz(__rbit64(v53)) | (v52 << 6);
  v19 = (unint64_t)(v51 + 64) >> 6;
LABEL_15:
  v20 = *(_QWORD *)(result + 48) + 24 * v18;
  v21 = *(_OWORD *)v20;
  v22 = *(_BYTE *)(v20 + 16);
  while (1)
  {
    v23 = *(_QWORD *)(v3 + 24) >> 1;
    if (v23 < v5 + 1)
    {
      v48 = v11;
      v49 = result;
      v47 = v12;
      v32 = v13;
      v33 = v17;
      v46 = v21;
      sub_23F377378();
      v21 = v46;
      v17 = v33;
      v13 = v32;
      v12 = v47;
      v11 = v48;
      v3 = v34;
      result = v49;
      v23 = *(_QWORD *)(v3 + 24) >> 1;
    }
    if (v5 < v23)
      break;
LABEL_38:
    *(_QWORD *)(v3 + 16) = v5;
  }
  while (1)
  {
    v24 = v3 + 32 + 24 * v5;
    *(_OWORD *)v24 = v21;
    *(_BYTE *)(v24 + 16) = v22;
    ++v5;
    if (v17)
    {
      v25 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v26 = v25 | (v13 << 6);
      goto LABEL_37;
    }
    v27 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v27 >= v19)
      goto LABEL_39;
    v28 = *(_QWORD *)(v11 + 8 * v27);
    v29 = v13 + 1;
    if (!v28)
    {
      v29 = v13 + 2;
      if (v13 + 2 >= v19)
        goto LABEL_39;
      v28 = *(_QWORD *)(v11 + 8 * v29);
      if (!v28)
      {
        v29 = v13 + 3;
        if (v13 + 3 >= v19)
          goto LABEL_39;
        v28 = *(_QWORD *)(v11 + 8 * v29);
        if (!v28)
        {
          v29 = v13 + 4;
          if (v13 + 4 >= v19)
            goto LABEL_39;
          v28 = *(_QWORD *)(v11 + 8 * v29);
          if (!v28)
          {
            v29 = v13 + 5;
            if (v13 + 5 >= v19)
              goto LABEL_39;
            v28 = *(_QWORD *)(v11 + 8 * v29);
            if (!v28)
            {
              v30 = v13 + 6;
              while (v30 < v19)
              {
                v28 = *(_QWORD *)(v11 + 8 * v30++);
                if (v28)
                {
                  v29 = v30 - 1;
                  goto LABEL_36;
                }
              }
LABEL_39:
              *(_QWORD *)(v3 + 16) = v5;
              goto LABEL_10;
            }
          }
        }
      }
    }
LABEL_36:
    v17 = (v28 - 1) & v28;
    v26 = __clz(__rbit64(v28)) + (v29 << 6);
    v13 = v29;
LABEL_37:
    v31 = *(_QWORD *)(result + 48) + 24 * v26;
    v21 = *(_OWORD *)v31;
    v22 = *(_BYTE *)(v31 + 16);
    if (v5 >= v23)
      goto LABEL_38;
  }
  __break(1u);
LABEL_60:
  __break(1u);
  return result;
}

void sub_23F386734()
{
  sub_23F387E04();
}

void sub_23F386750()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_23F3898C8();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_23F3898DC() || (sub_23F389B38(), !(v6 ^ v4 | v5)))
  {
    sub_23F3899A0();
    sub_23F377678();
    v2 = v7;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  sub_23F3898B4();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = sub_23F389910();
  sub_23F3C1F74(v8, v9);
  if (!v3)
  {
LABEL_11:
    sub_23F362D18();
    *v1 = v2;
    sub_23F383488();
    return;
  }
  sub_23F389A80();
  if (!v4)
  {
    *(_QWORD *)(v2 + 16) = v10;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_23F3867E4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  sub_23F362ABC();
  v7 = v6;
  sub_23F61B9EC();
  sub_23F389AF8();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F3899EC(v9, v61);
  sub_23F35D2E8(&qword_256E702C8);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F389880();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F389A6C();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F389C34();
  if (v13)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v14 = sub_23F389D28();
  *v1 = v4;
  if (!v14 || *(_QWORD *)(v4 + 24) >> 1 < v5)
  {
    sub_23F38A064();
    v4 = v15;
    sub_23F389990(v15);
  }
  sub_23F389AD0();
  sub_23F389E90();
  sub_23F3894F4();
  if (v16 < v0)
    goto LABEL_12;
  if (v16)
  {
    v17 = *(_QWORD *)(v4 + 16);
    v13 = __OFADD__(v17, v16);
    v18 = v17 + v16;
    if (v13)
    {
      __break(1u);
LABEL_57:
      sub_23F389F9C();
LABEL_58:
      sub_23F38A0D4();
      sub_23F389C74();
      sub_23F362948();
      return;
    }
    *(_QWORD *)(v4 + 16) = v18;
  }
  if (v16 != v5)
  {
    sub_23F389A8C();
    sub_23F38989C();
    return;
  }
LABEL_13:
  sub_23F389E48();
  if (v19)
  {
    sub_23F389CF0(v19);
    goto LABEL_15;
  }
  if (!__OFADD__(v20, 1))
  {
    sub_23F389B80();
    if (v27 != v13)
    {
      sub_23F389FE4();
      if (v48)
        goto LABEL_63;
      sub_23F389B98();
      if (v27 == v13)
      {
LABEL_83:
        v63 = v49;
        goto LABEL_84;
      }
      if (!*(_QWORD *)(v51 + 8 * v50))
        goto LABEL_69;
      goto LABEL_67;
    }
    v22 = 1;
LABEL_16:
    v23 = sub_23F389BC0(v21, v22);
    sub_23F389C9C(v23, v24, &qword_256E702C8);
    v25 = v7;
    sub_23F389920(v0);
    if (v26)
      goto LABEL_58;
    v7 = (char *)&qword_256E702C8;
    v0 = v64;
    while (1)
    {
      sub_23F389C0C(v0);
      sub_23F389D34();
      if (v27 != v13)
      {
        sub_23F38A064();
        sub_23F389F38(v46);
      }
      v0 = v65;
      sub_23F389CB4(v2, v3);
      sub_23F389920(v3);
      if (!v26)
        break;
LABEL_22:
      sub_23F389C0C(v3);
LABEL_53:
      sub_23F389B4C();
      sub_23F389920(v0);
      if (v26)
        goto LABEL_57;
    }
    sub_23F38A0E0();
    while (1)
    {
      sub_23F389F28();
      if (v5 >= v62)
      {
        sub_23F389EAC();
        goto LABEL_53;
      }
      sub_23F389C0C(v2);
      sub_23F389DB8();
      sub_23F389F50();
      if (v28)
      {
        sub_23F389E20();
      }
      else
      {
        if (__OFADD__(v25, 1))
        {
          __break(1u);
LABEL_69:
          sub_23F389B8C();
          if (v27 != v13)
          {
            if (*(_QWORD *)(v54 + 8 * v53))
            {
              v47 = v53;
              goto LABEL_63;
            }
            sub_23F389B74();
            if (v27 == v13)
            {
              v63 = v55;
              goto LABEL_84;
            }
            if (!*(_QWORD *)(v56 + 8 * v50))
            {
              sub_23F389B68();
              if (v27 == v13)
                goto LABEL_85;
              if (!*(_QWORD *)(v58 + 8 * v47))
              {
                v49 = v57 - 1;
                v59 = v63 + 6;
                while (v59 < v57)
                {
                  if (*(_QWORD *)(v58 + 8 * v59++))
                  {
                    v47 = v59 - 1;
                    goto LABEL_63;
                  }
                }
                goto LABEL_83;
              }
LABEL_63:
              sub_23F389B08(v47);
LABEL_15:
              v21 = sub_23F389BF4();
              v22 = 0;
              goto LABEL_16;
            }
LABEL_67:
            v47 = v50;
            goto LABEL_63;
          }
LABEL_85:
          v63 = v52;
LABEL_84:
          sub_23F389F88();
          goto LABEL_16;
        }
        sub_23F389B80();
        if (v27 == v13)
        {
          v30 = 1;
          goto LABEL_32;
        }
        if (!*(_QWORD *)(v32 + 8 * v31))
        {
          sub_23F389B98();
          if (v27 == v13)
            goto LABEL_36;
          if (!*(_QWORD *)(v36 + 8 * v35))
          {
            sub_23F389B8C();
            if (v27 == v13)
              goto LABEL_39;
            if (!*(_QWORD *)(v38 + 8 * v37))
            {
              sub_23F389B74();
              if (v27 == v13)
              {
                v30 = 1;
                v25 = v40;
                goto LABEL_32;
              }
              if (!*(_QWORD *)(v41 + 8 * v39))
              {
                sub_23F389B68();
                if (v27 == v13)
                {
LABEL_39:
                  sub_23F389C54();
                  goto LABEL_32;
                }
                if (!*(_QWORD *)(v63 + 8 * v42))
                {
                  v44 = v25 + 6;
                  while ((uint64_t)v44 < v43)
                  {
                    sub_23F38A020();
                    if (v45)
                      goto LABEL_31;
                  }
LABEL_36:
                  sub_23F389C64();
                  goto LABEL_32;
                }
              }
            }
          }
        }
LABEL_31:
        sub_23F389D64();
      }
      v29 = sub_23F389BA4();
      v30 = 0;
LABEL_32:
      v33 = sub_23F3899AC(v29, v30);
      v7 = (char *)&qword_256E702C8;
      sub_23F389CB4(v33, v34);
      sub_23F38A040();
      v0 = v65;
      if (v26)
        goto LABEL_22;
    }
  }
  __break(1u);
}

void sub_23F386BC4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F3898C8();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_23F3898DC() || (sub_23F389B38(), !(v6 ^ v4 | v5)))
  {
    sub_23F3899A0();
    sub_23F377438();
    v2 = v7;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  sub_23F3898B4();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_23F389910();
  sub_23F3C1E20();
  if (!v3)
  {
LABEL_11:
    sub_23F362D18();
    *v1 = v2;
    sub_23F383488();
    return;
  }
  sub_23F389A80();
  if (!v4)
  {
    *(_QWORD *)(v2 + 16) = v8;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_23F386C5C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_23F3898C8();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_23F3898DC() || (sub_23F389B38(), !(v6 ^ v4 | v5)))
  {
    sub_23F3899A0();
    sub_23F377800();
    v2 = v7;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  sub_23F3898B4();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = sub_23F389910();
  sub_23F3C1FA4(v8, v9);
  if (!v3)
  {
LABEL_11:
    sub_23F362D18();
    *v1 = v2;
    sub_23F383488();
    return;
  }
  sub_23F389A80();
  if (!v4)
  {
    *(_QWORD *)(v2 + 16) = v10;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_23F386CF4()
{
  sub_23F387E04();
}

void sub_23F386D10()
{
  sub_23F387E04();
}

void sub_23F386D2C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F3898C8();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_23F3898DC() || (sub_23F389B38(), !(v6 ^ v4 | v5)))
  {
    sub_23F3899A0();
    sub_23F377ABC();
    v2 = v7;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  sub_23F3898B4();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_23F389910();
  sub_23F3C1EB0();
  if (!v3)
  {
LABEL_11:
    sub_23F362D18();
    *v1 = v2;
    sub_23F383488();
    return;
  }
  sub_23F389A80();
  if (!v4)
  {
    *(_QWORD *)(v2 + 16) = v8;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

uint64_t sub_23F386DC0(unint64_t a1)
{
  return sub_23F387490(a1, (unint64_t *)sub_23F3C21F4, &qword_256E705A8, &qword_256E705A0, (uint64_t *)sub_23F4261AC);
}

void sub_23F386DE4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  int v16;
  int64_t v17;
  uint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  int64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  int64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;

  sub_23F362ABC();
  v3 = v2;
  v4 = sub_23F35D2E8(&qword_256E6FE30);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  sub_23F3899EC(v6, v99);
  sub_23F35D2E8(&qword_256E705B0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F389880();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F389A6C();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v99 - v10;
  v12 = *(_QWORD *)(v3 + 16);
  v13 = *v0;
  v14 = *(_QWORD *)(*v0 + 16);
  v15 = v14 + v12;
  if (__OFADD__(v14, v12))
  {
    __break(1u);
LABEL_12:
    __break(1u);
LABEL_13:
    v19 = v110;
    v28 = v111;
    v106 = *(_QWORD *)(v13 + 16);
    v107 = v112;
    v105 = v113;
    if (v114)
    {
      sub_23F389A18();
      v104 = v29;
      v32 = v30 | (v31 << 6);
LABEL_15:
      sub_23F61B92C();
      sub_23F383770();
      sub_23F38A0BC(v33);
      v34 = *(_QWORD *)(v19 + 56);
      v35 = type metadata accessor for DialogValuesResolver.CollectedValue(0);
      sub_23F362600(v34 + *(_QWORD *)(*(_QWORD *)(v35 - 8) + 72) * v32, (uint64_t)&v11[*(int *)(v4 + 48)], type metadata accessor for DialogValuesResolver.CollectedValue);
      v37 = 0;
      goto LABEL_16;
    }
    if (__OFADD__(v113, 1))
    {
      __break(1u);
      return;
    }
    sub_23F389B80();
    if (v60 == v26)
    {
      v104 = 0;
      v37 = 1;
      goto LABEL_16;
    }
    if (*(_QWORD *)(v28 + 8 * v83))
    {
LABEL_71:
      sub_23F384818();
      v104 = v85;
      v105 = v84;
      v32 = v86 + (v84 << 6);
      v28 = v87;
      goto LABEL_15;
    }
    sub_23F389B98();
    if (v60 != v26)
    {
      if (!*(_QWORD *)(v90 + 8 * v89))
      {
        sub_23F389B8C();
        if (v60 == v26)
          goto LABEL_93;
        if (!*(_QWORD *)(v90 + 8 * v92))
          goto LABEL_81;
      }
      goto LABEL_71;
    }
LABEL_91:
    v104 = 0;
    v105 = v88;
    goto LABEL_92;
  }
  v16 = sub_23F389D28();
  *v0 = v13;
  if (!v16 || (v17 = *(_QWORD *)(v13 + 24) >> 1, v17 < v15))
  {
    sub_23F377C10();
    v13 = v18;
    sub_23F389990(v18);
  }
  v15 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v5 = *(_QWORD *)(v5 + 72);
  v19 = v17 - *(_QWORD *)(v13 + 16);
  v20 = (_QWORD *)sub_23F389E90();
  sub_23F388934(v20, v21, v22, v23);
  if (v24 < v12)
    goto LABEL_12;
  if (!v24)
    goto LABEL_9;
  v25 = *(_QWORD *)(v13 + 16);
  v26 = __OFADD__(v25, v24);
  v27 = v25 + v24;
  if (!v26)
  {
    *(_QWORD *)(v13 + 16) = v27;
LABEL_9:
    if (v24 != v19)
    {
      sub_23F389A8C();
      sub_23F38989C();
      return;
    }
    goto LABEL_13;
  }
  __break(1u);
  while (2)
  {
    v40 = v108;
    v41 = v106;
    while (1)
    {
      v102 = v19;
      sub_23F3625D8(v40, &qword_256E705B0);
      v42 = *v0;
      v43 = *(_QWORD *)(*v0 + 24);
      v106 = v41;
      v101 = v43 >> 1;
      if ((uint64_t)(v43 >> 1) < v41 + 1)
      {
        sub_23F377C10();
        v42 = v81;
        sub_23F389990(v81);
        v101 = v82;
      }
      v44 = v109;
      sub_23F382EF8((uint64_t)v11, v1, &qword_256E705B0);
      sub_23F383740(v1, 1, v4);
      if (!v39)
        break;
      v103 = v13;
      v19 = v102;
      v48 = v106;
LABEL_63:
      sub_23F3625D8(v1, &qword_256E705B0);
LABEL_64:
      *(_QWORD *)(*v0 + 16) = v48;
      v41 = v48;
      v40 = v108;
      sub_23F382EF8((uint64_t)v11, v108, &qword_256E705B0);
      sub_23F383740(v40, 1, v4);
      v13 = v103;
      if (v39)
        goto LABEL_19;
    }
    v100 = v42 + v15;
    v45 = sub_23F389F14();
    sub_23F389FF8(v45, v46);
    v47 = v101;
    v48 = v106;
    while (1)
    {
      if (v48 >= v47)
      {
        v103 = v13;
        sub_23F3625D8(v44, &qword_256E6FE30);
        v19 = v102;
        goto LABEL_64;
      }
      sub_23F3625D8((uint64_t)v11, &qword_256E705B0);
      sub_23F389FF8(v44, v100 + v48 * v5);
      v19 = v110;
      v13 = v111;
      v107 = v112;
      if (v114)
      {
        v105 = v113;
        v106 = v48;
        sub_23F389A18();
        v103 = v13;
        v104 = v49;
        v52 = v50 | (v51 << 6);
        goto LABEL_30;
      }
      if (__OFADD__(v113, 1))
        break;
      sub_23F389B80();
      if (v60 != v26)
      {
        if (*(_QWORD *)(v13 + 8 * v58))
        {
          v106 = v48;
          goto LABEL_37;
        }
        sub_23F389B98();
        if (v60 != v26)
        {
          if (*(_QWORD *)(v13 + 8 * v67))
          {
            v106 = v48;
            goto LABEL_37;
          }
          sub_23F389B8C();
          if (v60 != v26)
          {
            v70 = *(_QWORD *)(v13 + 8 * v69);
            v106 = v48;
            if (v70)
              goto LABEL_37;
            sub_23F389B74();
            if (v60 == v26)
            {
              v104 = 0;
              v105 = v72;
              v57 = 1;
              v44 = v109;
              v19 = v73;
              goto LABEL_31;
            }
            v74 = v13;
            if (*(_QWORD *)(v13 + 8 * v71))
            {
LABEL_51:
              v19 = v73;
              v13 = v74;
              goto LABEL_37;
            }
            sub_23F389B68();
            if (v60 == v26)
            {
              v104 = 0;
              v105 = v77;
LABEL_59:
              v57 = 1;
              v44 = v109;
              v19 = v73;
              v13 = v74;
              goto LABEL_31;
            }
            v13 = v74;
            v19 = v73;
            if (!*(_QWORD *)(v74 + 8 * v75))
            {
              v79 = v78 + 6;
              while (v79 < v76)
              {
                if (*(_QWORD *)(v74 + 8 * v79++))
                  goto LABEL_51;
              }
              v104 = 0;
              v105 = v76 - 1;
              goto LABEL_59;
            }
LABEL_37:
            sub_23F384818();
            v103 = v13;
            v104 = v61;
            v52 = v63 + (v62 << 6);
            v105 = v62;
LABEL_30:
            sub_23F61B92C();
            sub_23F383770();
            sub_23F38A0BC(v53);
            v54 = *(_QWORD *)(v19 + 56);
            v55 = type metadata accessor for DialogValuesResolver.CollectedValue(0);
            sub_23F362600(v54 + *(_QWORD *)(*(_QWORD *)(v55 - 8) + 72) * v52, (uint64_t)&v11[*(int *)(v4 + 48)], type metadata accessor for DialogValuesResolver.CollectedValue);
            v57 = 0;
            v44 = v109;
            v13 = v103;
LABEL_31:
            v48 = v106;
            goto LABEL_39;
          }
          v104 = 0;
          v105 = v68;
        }
        else
        {
          v104 = 0;
          v105 = v66;
        }
      }
      else
      {
        v104 = 0;
        v105 = v59;
      }
      v57 = 1;
LABEL_39:
      ++v48;
      sub_23F389F68(v56, v57);
      v110 = v19;
      v111 = v13;
      sub_23F38A108();
      sub_23F382EF8((uint64_t)v11, v1, &qword_256E705B0);
      sub_23F383740(v1, 1, v4);
      if (v39)
      {
        v103 = v13;
        goto LABEL_63;
      }
      v102 = v19;
      v64 = sub_23F389F14();
      sub_23F389FF8(v64, v65);
      v47 = v101;
    }
    __break(1u);
LABEL_81:
    sub_23F389B74();
    if (v60 == v26)
    {
      v104 = 0;
      v105 = v94;
      goto LABEL_92;
    }
    if (*(_QWORD *)(v90 + 8 * v93))
      goto LABEL_71;
    sub_23F389B68();
    if (v60 != v26)
    {
      if (*(_QWORD *)(v90 + 8 * v95))
        goto LABEL_71;
      v88 = v96 - 1;
      v97 = v105 + 6;
      while (v97 < v96)
      {
        if (*(_QWORD *)(v90 + 8 * v97++))
          goto LABEL_71;
      }
      goto LABEL_91;
    }
LABEL_93:
    v104 = 0;
    v105 = v91;
LABEL_92:
    v37 = 1;
    v28 = v90;
LABEL_16:
    sub_23F389F68(v36, v37);
    v110 = v19;
    v111 = v28;
    v13 = v28;
    v38 = v108;
    sub_23F38A108();
    sub_23F382EF8((uint64_t)v11, v38, &qword_256E705B0);
    sub_23F383740(v38, 1, v4);
    if (!v39)
      continue;
    break;
  }
  v40 = v108;
LABEL_19:
  sub_23F3625D8((uint64_t)v11, &qword_256E705B0);
  sub_23F382E18();
  sub_23F3625D8(v40, &qword_256E705B0);
  sub_23F362948();
}

void sub_23F387450()
{
  sub_23F387E04();
}

uint64_t sub_23F38746C(unint64_t a1)
{
  return sub_23F387490(a1, (unint64_t *)sub_23F3C2670, &qword_256E705D0, &qword_256E705C8, (uint64_t *)sub_23F4261E0);
}

uint64_t sub_23F387490(unint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  unint64_t *v5;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;

  if (a1 >> 62)
  {
    sub_23F617BA0();
    v11 = sub_23F61CA6C();
    sub_23F384120();
  }
  else
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v12 = *v5;
  if (*v5 >> 62)
  {
    sub_23F384B00();
    v13 = sub_23F61CA6C();
    sub_23F384364();
  }
  else
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v14 = v13 + v11;
  if (__OFADD__(v13, v11))
  {
    __break(1u);
    goto LABEL_24;
  }
  v12 = *v5;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v5 = v12;
  v13 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v12 & 0x8000000000000000) == 0
    && (v12 & 0x4000000000000000) == 0)
  {
    v16 = v12 & 0xFFFFFFFFFFFFFF8;
    if (v14 <= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_16;
    v13 = 1;
  }
  v23 = v11;
  v11 = (uint64_t)a2;
  a2 = a3;
  a3 = (unint64_t *)a4;
  a4 = a5;
  if (v12 >> 62)
    goto LABEL_25;
  v17 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v17 <= v14)
      v17 = v14;
    sub_23F384B00();
    v12 = MEMORY[0x24266FE20](v13, v17, 1, v12);
    swift_bridgeObjectRelease();
    *v5 = v12;
    v16 = v12 & 0xFFFFFFFFFFFFFF8;
    a5 = a4;
    a4 = (uint64_t *)a3;
    a3 = a2;
    a2 = (unint64_t *)v11;
    v11 = v23;
LABEL_16:
    result = sub_23F389698(v16 + 8 * *(_QWORD *)(v16 + 16) + 32, (*(_QWORD *)(v16 + 24) >> 1) - *(_QWORD *)(v16 + 16), a1, (void (*)(uint64_t, _QWORD, uint64_t))a2, a3, a4, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))a5);
    if (v19 >= v11)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    sub_23F384B00();
    v17 = sub_23F61CA6C();
    sub_23F384364();
  }
  if (v19 < 1)
    goto LABEL_20;
  v20 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v21 = __OFADD__(v20, v19);
  v22 = v20 + v19;
  if (!v21)
  {
    *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) = v22;
LABEL_20:
    swift_bridgeObjectRelease();
    return sub_23F61C3F4();
  }
  __break(1u);
  return result;
}

void sub_23F387684()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F3898C8();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_23F3898DC() || (sub_23F389B38(), !(v6 ^ v4 | v5)))
  {
    sub_23F3899A0();
    sub_23F377D2C();
    v2 = v7;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  sub_23F3898B4();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_23F389910();
  sub_23F3C27D8();
  if (!v3)
  {
LABEL_11:
    sub_23F362D18();
    *v1 = v2;
    sub_23F383488();
    return;
  }
  sub_23F389A80();
  if (!v4)
  {
    *(_QWORD *)(v2 + 16) = v8;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_23F387718()
{
  sub_23F387E04();
}

void sub_23F387734()
{
  sub_23F38783C();
}

void sub_23F387750()
{
  sub_23F387E04();
}

void sub_23F38776C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F3898C8();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_23F3898DC() || (sub_23F389B38(), !(v6 ^ v4 | v5)))
  {
    sub_23F3899A0();
    sub_23F376E0C();
    v2 = v7;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  sub_23F3898B4();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_23F389910();
  sub_23F3C195C();
  if (!v3)
  {
LABEL_11:
    sub_23F362D18();
    *v1 = v2;
    sub_23F383488();
    return;
  }
  sub_23F389A80();
  if (!v4)
  {
    *(_QWORD *)(v2 + 16) = v8;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_23F387804()
{
  sub_23F387E04();
}

void sub_23F387820()
{
  sub_23F38783C();
}

void sub_23F38783C()
{
  uint64_t *v0;
  uint64_t (*v1)(void);
  uint64_t *v2;
  uint64_t *v3;
  uint64_t (*v4)(_QWORD);
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  int isUniquelyReferenced_nonNull_native;
  int64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t (*v87)(void);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;

  sub_23F362ABC();
  v87 = v1;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v85 = v4(0);
  v8 = *(_QWORD *)(v85 - 8);
  MEMORY[0x24BDAC7A8](v85);
  v84 = (char *)&v77 - v9;
  v86 = v3;
  sub_23F35D2E8(v3);
  sub_23F3834C0();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  sub_23F389A6C();
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v77 - v16;
  v18 = *(_QWORD *)(v7 + 16);
  v19 = *v0;
  v20 = *(_QWORD *)(*v0 + 16);
  v21 = v20 + v18;
  if (__OFADD__(v20, v18))
  {
    __break(1u);
  }
  else
  {
    v83 = v15;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v0 = v19;
    if (!isUniquelyReferenced_nonNull_native || (v23 = *(_QWORD *)(v19 + 24) >> 1, v23 < v21))
    {
      sub_23F3899A0();
      v19 = v87();
      sub_23F389990(v19);
    }
    v21 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v20 = *(_QWORD *)(v8 + 72);
    v24 = v23 - *(_QWORD *)(v19 + 16);
    sub_23F388214();
    if (v25 >= v18)
    {
      if (!v25)
        goto LABEL_9;
      v26 = *(_QWORD *)(v19 + 16);
      v27 = __OFADD__(v26, v25);
      v28 = v26 + v25;
      if (!v27)
      {
        *(_QWORD *)(v19 + 16) = v28;
LABEL_9:
        if (v25 != v24)
        {
          sub_23F389A8C();
          sub_23F38989C();
          return;
        }
        goto LABEL_13;
      }
      __break(1u);
LABEL_21:
      v33 = v83;
      while (1)
      {
        sub_23F389F20(v33);
        v34 = *v0;
        v35 = *(_QWORD *)(*v0 + 24);
        v78 = v35 >> 1;
        if ((uint64_t)(v35 >> 1) < v24 + 1)
        {
          v34 = ((uint64_t (*)(BOOL))v87)(v35 > 1);
          sub_23F389990(v34);
          v78 = v61;
        }
        v33 = (uint64_t)v84;
        sub_23F389F78();
        sub_23F383740((uint64_t)v13, 1, v85);
        if (v32)
        {
LABEL_26:
          sub_23F389F20((uint64_t)v13);
        }
        else
        {
          v77 = v34 + v21;
          sub_23F389CE4((uint64_t)v13);
          v36 = v81;
          while (v24 < v78)
          {
            sub_23F3625D8((uint64_t)v17, v86);
            sub_23F36262C(v33, v77 + v24 * v20, v5);
            v37 = v88;
            v81 = v90;
            v82 = v89;
            if (v92)
            {
              sub_23F389A18();
              v79 = v38;
              v80 = v39;
            }
            else
            {
              if (__OFADD__(v91, 1))
              {
                __break(1u);
LABEL_80:
                sub_23F389B74();
                if (v42 == v27)
                {
                  v79 = 0;
                  v80 = v71;
                  goto LABEL_91;
                }
                sub_23F389FD0();
                if (v72)
                  goto LABEL_74;
                sub_23F389B68();
                if (v42 != v27)
                {
                  sub_23F389FC4();
                  if (!v74)
                  {
                    v65 = v73 - 1;
                    v75 = v80 + 6;
                    while (v75 < v73)
                    {
                      sub_23F38A020();
                      if (v76)
                      {
                        v62 = v75 - 1;
                        goto LABEL_70;
                      }
                    }
                    goto LABEL_90;
                  }
LABEL_70:
                  sub_23F389D80(v62);
                  v29 = v64;
LABEL_15:
                  sub_23F389EBC(*(_QWORD *)(v29 + 48));
                  v31 = 0;
                  goto LABEL_16;
                }
LABEL_92:
                v79 = 0;
                v80 = v69;
LABEL_91:
                v31 = 1;
                v29 = v66;
LABEL_16:
                sub_23F36196C((uint64_t)v17, v31, 1, v85);
                v88 = v29;
                v89 = v82;
                v90 = v81;
                v91 = v80;
                v92 = v79;
                sub_23F389DEC();
                sub_23F383740(v29, 1, v85);
                if (v32)
                {
                  v33 = v83;
LABEL_19:
                  sub_23F389F20((uint64_t)v17);
                  sub_23F382E18();
                  sub_23F389F20(v33);
                  sub_23F362948();
                  return;
                }
                goto LABEL_21;
              }
              sub_23F389B80();
              if (v42 == v27)
              {
                v79 = 0;
                v80 = v41;
LABEL_36:
                v40 = 1;
                goto LABEL_37;
              }
              sub_23F389FC4();
              if (!v44)
              {
                sub_23F389B98();
                if (v42 == v27)
                {
                  v79 = 0;
                  v80 = v45;
                  goto LABEL_36;
                }
                sub_23F389FD0();
                if (v47)
                {
                  v43 = v46;
                }
                else
                {
                  sub_23F389B8C();
                  if (v42 == v27)
                  {
                    v79 = 0;
                    v80 = v48;
                    goto LABEL_36;
                  }
                  if (*(_QWORD *)(v82 + 8 * v49))
                  {
                    v43 = v49;
                  }
                  else
                  {
                    sub_23F389B74();
                    if (v42 == v27)
                    {
                      v79 = 0;
                      v80 = v50;
LABEL_53:
                      v40 = 1;
                      v37 = v51;
                      goto LABEL_37;
                    }
                    sub_23F389FD0();
                    if (v53)
                    {
                      v43 = v52;
LABEL_52:
                      v37 = v51;
                    }
                    else
                    {
                      sub_23F389B68();
                      if (v42 == v27)
                      {
                        v79 = 0;
                        v80 = v54;
                        goto LABEL_53;
                      }
                      sub_23F389FC4();
                      v37 = v51;
                      if (!v57)
                      {
                        v58 = v55 - 1;
                        v59 = v56 + 6;
                        while (v59 < v55)
                        {
                          sub_23F38A020();
                          if (v60)
                          {
                            v43 = v59 - 1;
                            goto LABEL_52;
                          }
                        }
                        v79 = 0;
                        v80 = v58;
                        goto LABEL_53;
                      }
                    }
                  }
                }
              }
              sub_23F389D80(v43);
            }
            sub_23F389EBC(*(_QWORD *)(v37 + 48));
            v40 = 0;
LABEL_37:
            ++v24;
            v33 = v85;
            sub_23F36196C((uint64_t)v17, v40, 1, v85);
            v88 = v37;
            v89 = v82;
            v36 = v81;
            v90 = v81;
            v91 = v80;
            v92 = v79;
            sub_23F389F78();
            sub_23F383740((uint64_t)v13, 1, v33);
            if (v32)
              goto LABEL_26;
            v33 = (uint64_t)v84;
            sub_23F389CE4((uint64_t)v13);
          }
          v81 = v36;
          sub_23F3663AC(v33, v5);
        }
        *(_QWORD *)(*v0 + 16) = v24;
        sub_23F389DEC();
        sub_23F383740(v33, 1, v85);
        if (v32)
          goto LABEL_19;
      }
    }
  }
  __break(1u);
LABEL_13:
  v24 = *(_QWORD *)(v19 + 16);
  v29 = v88;
  v81 = v90;
  v82 = v89;
  v80 = v91;
  if (v92)
  {
    sub_23F389A18();
    v79 = v30;
    goto LABEL_15;
  }
  if (!__OFADD__(v91, 1))
  {
    sub_23F389B80();
    if (v42 == v27)
    {
      v79 = 0;
      v31 = 1;
      goto LABEL_16;
    }
    sub_23F389FC4();
    if (!v63)
    {
      sub_23F389B98();
      if (v42 == v27)
      {
LABEL_90:
        v79 = 0;
        v80 = v65;
        goto LABEL_91;
      }
      sub_23F389FD0();
      if (v68)
      {
LABEL_74:
        v62 = v67;
      }
      else
      {
        sub_23F389B8C();
        if (v42 == v27)
          goto LABEL_92;
        if (!*(_QWORD *)(v82 + 8 * v70))
          goto LABEL_80;
        v62 = v70;
      }
    }
    goto LABEL_70;
  }
  __break(1u);
}

void sub_23F387DCC()
{
  sub_23F387E04();
}

void sub_23F387DE8()
{
  sub_23F387E04();
}

void sub_23F387E04()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t (*v2)(void);
  void (*v3)(uint64_t, uint64_t, uint64_t);
  void (*v4)(_QWORD);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(_QWORD);
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v11)(void);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  sub_23F362ABC();
  v6 = *(_QWORD *)(v5 + 16);
  v7 = *v1;
  v8 = *(_QWORD *)(*v1 + 16);
  if (__OFADD__(v8, v6))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v9 = v4;
  v10 = v3;
  v11 = v2;
  if (!sub_23F3898DC() || v8 + v6 > *(_QWORD *)(v7 + 24) >> 1)
  {
    sub_23F3899A0();
    v7 = v11();
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v6)
      goto LABEL_11;
    goto LABEL_13;
  }
  v12 = *(_QWORD *)(v7 + 16);
  v13 = (*(_QWORD *)(v7 + 24) >> 1) - v12;
  v9(0);
  if (v13 < v6)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_23F383D14();
  v10(v0 + v15, v6, v7 + v15 + *(_QWORD *)(v14 + 72) * v12);
  if (!v6)
  {
LABEL_11:
    sub_23F362D18();
    *v1 = v7;
    sub_23F362948();
    return;
  }
  sub_23F389A80();
  if (!v17)
  {
    *(_QWORD *)(v7 + 16) = v16;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_23F387ED8(uint64_t a1)
{
  sub_23F387F08(a1);
}

void sub_23F387EE4(uint64_t a1)
{
  sub_23F388018(a1, (void (*)(_QWORD))type metadata accessor for LocationEvent);
}

void sub_23F387EF0(uint64_t a1)
{
  sub_23F388018(a1, (void (*)(_QWORD))MEMORY[0x24BEB9A18]);
}

void sub_23F387EFC(uint64_t a1)
{
  sub_23F387F08(a1);
}

void sub_23F387F08(uint64_t a1)
{
  if (a1 < 0)
  {
    sub_23F3833BC();
    sub_23F3898F8();
    __break(1u);
  }
  else
  {
    if (a1)
      *(_QWORD *)(sub_23F61C418() + 16) = a1;
    sub_23F38A084();
  }
}

void sub_23F387F70(uint64_t a1)
{
  sub_23F388018(a1, (void (*)(_QWORD))MEMORY[0x24BEBA368]);
}

void sub_23F387F7C(uint64_t a1)
{
  sub_23F3880BC(a1, &qword_256E70498);
}

void sub_23F387F88(uint64_t a1)
{
  sub_23F388018(a1, (void (*)(_QWORD))MEMORY[0x24BE562C8]);
}

void sub_23F387F94(uint64_t a1)
{
  if (a1 < 0)
  {
    sub_23F3833BC();
    sub_23F3898F8();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      sub_23F35D2E8(&qword_256E70558);
      *(_QWORD *)(sub_23F61C418() + 16) = a1;
    }
    sub_23F38A084();
  }
}

void sub_23F38800C(uint64_t a1)
{
  sub_23F388018(a1, (void (*)(_QWORD))type metadata accessor for DependencyId);
}

void sub_23F388018(uint64_t a1, void (*a2)(_QWORD))
{
  if (a1 < 0)
  {
    sub_23F3833BC();
    sub_23F3898F8();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      a2(0);
      *(_QWORD *)(sub_23F38A0C8() + 16) = a1;
    }
    a2(0);
    sub_23F389D9C();
    sub_23F383F28();
  }
}

void sub_23F388098(uint64_t a1)
{
  sub_23F3880BC(a1, &qword_256E70288);
}

void sub_23F3880A4(uint64_t a1)
{
  sub_23F3880BC(a1, &qword_256E6FF50);
}

void sub_23F3880B0(uint64_t a1)
{
  sub_23F3880BC(a1, &qword_256E6FF40);
}

void sub_23F3880BC(uint64_t a1, uint64_t *a2)
{
  if (a1 < 0)
  {
    sub_23F3833BC();
    sub_23F3898F8();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      sub_23F35D2E8(a2);
      *(_QWORD *)(sub_23F38A0C8() + 16) = a1;
    }
    sub_23F35D2E8(a2);
    sub_23F389D9C();
    sub_23F383F28();
  }
}

unint64_t sub_23F38813C()
{
  unint64_t result;

  result = qword_256E70598;
  if (!qword_256E70598)
  {
    result = MEMORY[0x242670A44](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_256E70598);
  }
  return result;
}

_QWORD *sub_23F388178(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  BOOL v7;

  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
LABEL_6:
    v5 = a4;
LABEL_7:
    *result = a4;
    result[1] = a5;
    result[2] = v5;
    return (_QWORD *)a3;
  }
  if (a3 < 0)
  {
    __break(1u);
  }
  else
  {
    if (a5 == a4)
    {
LABEL_5:
      a3 = 0;
      goto LABEL_6;
    }
    if (a5 >= a4)
    {
      if (a5 <= a4)
      {
LABEL_17:
        __break(1u);
LABEL_18:
        v5 = a5;
        a3 = a5 - a4;
      }
      else
      {
        v6 = a3 - 1;
        v5 = a4 + 1;
        while (1)
        {
          *a2 = v5 - 1;
          if (!v6)
            break;
          if (a5 == v5)
            goto LABEL_18;
          ++a2;
          --v6;
          v7 = v5 >= a4 && v5 < a5;
          ++v5;
          if (!v7)
            goto LABEL_17;
        }
      }
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

void sub_23F3881FC()
{
  sub_23F388214();
}

void sub_23F388208()
{
  sub_23F388214();
}

void sub_23F388214()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(_QWORD);
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_23F362ABC();
  v6 = (uint64_t (*)(_QWORD))v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v5(0);
  sub_23F389AF8();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F389880();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F389EE4();
  v25 = v8;
  sub_23F38993C();
  if (v12 && v10)
  {
    if (v10 < 0)
    {
LABEL_31:
      __break(1u);
    }
    else
    {
      v23 = v15;
      v16 = 0;
      sub_23F38A0F4();
      v24 = v17;
      if (!v3)
        goto LABEL_6;
LABEL_5:
      sub_23F389AB8();
      while (1)
      {
        ++v0;
        v20 = *(_QWORD *)(v4 + 72);
        sub_23F362600(*(_QWORD *)(v26 + 48) + v20 * v18, v1, v6);
        sub_23F389CE4(v1);
        sub_23F36262C(v2, v12, v6);
        if (v0 == v10)
        {
LABEL_28:
          v15 = v23;
          goto LABEL_29;
        }
        v12 += v20;
        if (v3)
          goto LABEL_5;
LABEL_6:
        v19 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
          __break(1u);
          goto LABEL_31;
        }
        if (v19 >= v24)
          goto LABEL_28;
        if (!*(_QWORD *)(v25 + 8 * v19))
        {
          v16 += 2;
          if (v19 + 1 >= v24)
            goto LABEL_28;
          if (!*(_QWORD *)(v25 + 8 * v16))
          {
            if (v19 + 2 >= v24)
              goto LABEL_28;
            if (!*(_QWORD *)(v25 + 8 * (v19 + 2)))
            {
              v16 = v19 + 3;
              if (v19 + 3 >= v24)
                goto LABEL_28;
              if (!*(_QWORD *)(v25 + 8 * v16))
              {
                v21 = v19 + 4;
                if (v19 + 4 >= v24)
                  goto LABEL_28;
                if (!*(_QWORD *)(v25 + 8 * v21))
                  break;
              }
            }
          }
        }
LABEL_14:
        sub_23F389974();
      }
      while (!__OFADD__(v21, 1))
      {
        if (v21 + 1 >= v24)
          goto LABEL_28;
        sub_23F389EA0();
        if (v22)
          goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_29:
    sub_23F389AA0(~v15);
    sub_23F362948();
  }
}

void sub_23F388420()
{
  sub_23F3894F4();
}

uint64_t sub_23F38842C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  _QWORD *v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v8 = sub_23F61A1D4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v32 - v14;
  v39 = a4;
  v18 = *(_QWORD *)(a4 + 64);
  v17 = a4 + 64;
  v16 = v18;
  v37 = v17;
  v19 = -1 << *(_BYTE *)(v17 - 32);
  if (-v19 < 64)
    v20 = ~(-1 << -(char)v19);
  else
    v20 = -1;
  v21 = v20 & v16;
  if (!a2)
  {
    v22 = 0;
    a3 = 0;
LABEL_38:
    v31 = v37;
    *a1 = v39;
    a1[1] = v31;
    a1[2] = ~v19;
    a1[3] = v22;
    a1[4] = v21;
    return a3;
  }
  if (!a3)
  {
    v22 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v34 = -1 << *(_BYTE *)(v17 - 32);
  v35 = a1;
  v22 = 0;
  v23 = 0;
  v36 = (unint64_t)(63 - v19) >> 6;
  v33 = v36 - 1;
  v38 = a3;
  if (!v21)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  v25 = v24 | (v22 << 6);
  while (1)
  {
    ++v23;
    v29 = *(_QWORD *)(v9 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v12, *(_QWORD *)(v39 + 48) + v29 * v25, v8);
    v30 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v30(v15, v12, v8);
    result = ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(a2, v15, v8);
    a3 = v38;
    if (v23 == v38)
      goto LABEL_37;
    a2 += v29;
    if (v21)
      goto LABEL_8;
LABEL_9:
    v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v26 >= v36)
      goto LABEL_32;
    v27 = *(_QWORD *)(v37 + 8 * v26);
    if (!v27)
      break;
LABEL_18:
    v21 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v22 = v26;
  }
  v22 += 2;
  if (v26 + 1 >= v36)
  {
    v21 = 0;
    v22 = v26;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v37 + 8 * v22);
  if (v27)
    goto LABEL_14;
  v28 = v26 + 2;
  if (v26 + 2 >= v36)
    goto LABEL_32;
  v27 = *(_QWORD *)(v37 + 8 * v28);
  if (v27)
    goto LABEL_17;
  v22 = v26 + 3;
  if (v26 + 3 >= v36)
  {
    v21 = 0;
    v22 = v26 + 2;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v37 + 8 * v22);
  if (v27)
  {
LABEL_14:
    v26 = v22;
    goto LABEL_18;
  }
  v28 = v26 + 4;
  if (v26 + 4 >= v36)
  {
LABEL_32:
    v21 = 0;
LABEL_36:
    a3 = v23;
LABEL_37:
    v19 = v34;
    a1 = v35;
    goto LABEL_38;
  }
  v27 = *(_QWORD *)(v37 + 8 * v28);
  if (v27)
  {
LABEL_17:
    v26 = v28;
    goto LABEL_18;
  }
  while (1)
  {
    v26 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v26 >= v36)
    {
      v21 = 0;
      v22 = v33;
      goto LABEL_36;
    }
    v27 = *(_QWORD *)(v37 + 8 * v26);
    ++v28;
    if (v27)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_23F3886F4(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;

  v4 = a4 + 56;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_36:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_36;
  }
  if (a3 < 0)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_19:
    ++v9;
    v17 = *(_QWORD *)(a4 + 48) + 24 * v12;
    v18 = *(_BYTE *)(v17 + 16);
    *(_OWORD *)a2 = *(_OWORD *)v17;
    *(_BYTE *)(a2 + 16) = v18;
    a2 += 24;
    if (v9 == a3)
      goto LABEL_36;
  }
  v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v13 >= v10)
    goto LABEL_31;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  if (v14)
    goto LABEL_18;
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    v7 = 0;
    v8 = v13;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_14:
    v13 = v8;
LABEL_18:
    v16 = __clz(__rbit64(v14));
    v7 = (v14 - 1) & v14;
    v12 = v16 + (v13 << 6);
    v8 = v13;
    goto LABEL_19;
  }
  v15 = v13 + 2;
  if (v13 + 2 >= v10)
    goto LABEL_31;
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_17:
    v13 = v15;
    goto LABEL_18;
  }
  v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    v7 = 0;
    v8 = v13 + 2;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
    goto LABEL_14;
  v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_31:
    v7 = 0;
LABEL_35:
    a3 = v9;
    goto LABEL_36;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
    goto LABEL_17;
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_35;
    }
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_18;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_23F38889C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  BOOL v9;

  if (!a2)
  {
    v7 = 0;
    a3 = 0;
    goto LABEL_14;
  }
  if (!a3)
  {
    v7 = 0;
LABEL_14:
    v8 = a4;
LABEL_15:
    *(_QWORD *)result = a4;
    *(_QWORD *)(result + 8) = a5;
    *(_QWORD *)(result + 16) = v8;
    *(_BYTE *)(result + 24) = v7;
    return a3;
  }
  if (a3 < 0)
    goto LABEL_17;
  v5 = 0;
  v6 = a4;
  while (1)
  {
    v7 = v6 == a5;
    if (v6 != a5)
      break;
    v8 = 0;
LABEL_8:
    *(_QWORD *)(a2 + 8 * v5) = v6;
    if (a3 - 1 == v5)
      goto LABEL_15;
    ++v5;
    v9 = v6 == a5;
    v6 = v8;
    if (v9)
    {
      v7 = 1;
      a3 = v5;
      goto LABEL_15;
    }
  }
  v8 = v6 + 1;
  if (!__OFADD__(v6, 1))
    goto LABEL_8;
  __break(1u);
LABEL_17:
  __break(1u);
  return result;
}

void sub_23F388928()
{
  sub_23F3894F4();
}

void sub_23F388934(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  _QWORD *v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v8 = sub_23F35D2E8(&qword_256E6FE30);
  v37 = *(_QWORD *)(v8 - 8);
  v38 = v8;
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v31 - v12;
  v14 = *(_QWORD *)(a4 + 64);
  v36 = a4 + 64;
  v15 = -1 << *(_BYTE *)(a4 + 32);
  if (-v15 < 64)
    v16 = ~(-1 << -(char)v15);
  else
    v16 = -1;
  v17 = v16 & v14;
  if (!a2)
  {
    v18 = 0;
LABEL_38:
    v30 = v36;
    *a1 = a4;
    a1[1] = v30;
    a1[2] = ~v15;
    a1[3] = v18;
    a1[4] = v17;
    return;
  }
  if (!a3)
  {
    v18 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v33 = -1 << *(_BYTE *)(a4 + 32);
  v34 = a1;
  v18 = 0;
  v19 = 0;
  v35 = (unint64_t)(63 - v15) >> 6;
  v32 = v35 - 1;
  v20 = a3;
  if (!v17)
    goto LABEL_9;
LABEL_8:
  v21 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  v22 = v21 | (v18 << 6);
  while (1)
  {
    ++v19;
    v26 = *(_QWORD *)(a4 + 48);
    v27 = sub_23F61B92C();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v11, v26 + *(_QWORD *)(*(_QWORD *)(v27 - 8) + 72) * v22, v27);
    v28 = *(_QWORD *)(a4 + 56);
    v29 = type metadata accessor for DialogValuesResolver.CollectedValue(0);
    sub_23F362600(v28 + *(_QWORD *)(*(_QWORD *)(v29 - 8) + 72) * v22, (uint64_t)&v11[*(int *)(v38 + 48)], type metadata accessor for DialogValuesResolver.CollectedValue);
    sub_23F383004((uint64_t)v11, (uint64_t)v13, &qword_256E6FE30);
    sub_23F383004((uint64_t)v13, a2, &qword_256E6FE30);
    if (v19 == v20)
      goto LABEL_37;
    a2 += *(_QWORD *)(v37 + 72);
    if (v17)
      goto LABEL_8;
LABEL_9:
    v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v23 >= v35)
      goto LABEL_33;
    v24 = *(_QWORD *)(v36 + 8 * v23);
    if (!v24)
      break;
LABEL_18:
    v17 = (v24 - 1) & v24;
    v22 = __clz(__rbit64(v24)) + (v23 << 6);
    v18 = v23;
  }
  v18 += 2;
  if (v23 + 1 >= v35)
  {
    v17 = 0;
    v18 = v23;
    goto LABEL_37;
  }
  v24 = *(_QWORD *)(v36 + 8 * v18);
  if (v24)
    goto LABEL_14;
  v25 = v23 + 2;
  if (v23 + 2 >= v35)
    goto LABEL_33;
  v24 = *(_QWORD *)(v36 + 8 * v25);
  if (v24)
    goto LABEL_17;
  v18 = v23 + 3;
  if (v23 + 3 >= v35)
  {
    v17 = 0;
    v18 = v23 + 2;
    goto LABEL_37;
  }
  v24 = *(_QWORD *)(v36 + 8 * v18);
  if (v24)
  {
LABEL_14:
    v23 = v18;
    goto LABEL_18;
  }
  v25 = v23 + 4;
  if (v23 + 4 >= v35)
  {
LABEL_33:
    v17 = 0;
LABEL_37:
    v15 = v33;
    a1 = v34;
    goto LABEL_38;
  }
  v24 = *(_QWORD *)(v36 + 8 * v25);
  if (v24)
  {
LABEL_17:
    v23 = v25;
    goto LABEL_18;
  }
  while (1)
  {
    v23 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v23 >= v35)
    {
      v17 = 0;
      v18 = v32;
      goto LABEL_37;
    }
    v24 = *(_QWORD *)(v36 + 8 * v23);
    ++v25;
    if (v24)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
}

void sub_23F388C44()
{
  sub_23F388214();
}

void sub_23F388C50()
{
  sub_23F3894F4();
}

void sub_23F388C5C()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  sub_23F362ABC();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v11 = sub_23F35D2E8(&qword_256E70288);
  v12 = sub_23F38A090(v11);
  MEMORY[0x24BDAC7A8](v12);
  sub_23F389880();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F389ECC();
  v36 = v14;
  sub_23F389CBC();
  v18 = v17 & v16;
  if (!v8)
  {
    v19 = 0;
LABEL_34:
    *v10 = v4;
    v10[1] = v36;
    v10[2] = ~v15;
    v10[3] = v19;
    v10[4] = v18;
    sub_23F362948();
    return;
  }
  if (!v6)
  {
    v19 = 0;
    goto LABEL_34;
  }
  if (v6 < 0)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v33 = v15;
  v34 = v10;
  v19 = 0;
  sub_23F38A0F4();
  v35 = v20;
  v32 = v20 - 1;
  v37 = v6;
  if (!v18)
    goto LABEL_6;
LABEL_5:
  v21 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  v22 = v21 | (v19 << 6);
  while (1)
  {
    ++v0;
    v26 = *(_QWORD *)(v4 + 56);
    v27 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v22);
    sub_23F61B404();
    sub_23F383770();
    (*(void (**)(char *, unint64_t))(v29 + 16))(&v1[*(int *)(v39 + 48)], v26 + v28 * v22);
    *(_QWORD *)v1 = v27;
    v30 = sub_23F389F14();
    sub_23F383004(v30, v31, &qword_256E70288);
    sub_23F383004(v2, v8, &qword_256E70288);
    if (v0 == v37)
      goto LABEL_33;
    v8 += *(_QWORD *)(v38 + 72);
    if (v18)
      goto LABEL_5;
LABEL_6:
    v23 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v23 >= v35)
      goto LABEL_29;
    v24 = *(_QWORD *)(v36 + 8 * v23);
    if (!v24)
      break;
LABEL_15:
    v18 = (v24 - 1) & v24;
    v22 = __clz(__rbit64(v24)) + (v23 << 6);
    v19 = v23;
  }
  v19 += 2;
  if (v23 + 1 >= v35)
  {
    v18 = 0;
    v19 = v23;
    goto LABEL_33;
  }
  v24 = *(_QWORD *)(v36 + 8 * v19);
  if (v24)
    goto LABEL_11;
  v25 = v23 + 2;
  if (v23 + 2 >= v35)
    goto LABEL_29;
  v24 = *(_QWORD *)(v36 + 8 * v25);
  if (v24)
    goto LABEL_14;
  v19 = v23 + 3;
  if (v23 + 3 >= v35)
  {
    v18 = 0;
    v19 = v23 + 2;
    goto LABEL_33;
  }
  v24 = *(_QWORD *)(v36 + 8 * v19);
  if (v24)
  {
LABEL_11:
    v23 = v19;
    goto LABEL_15;
  }
  v25 = v23 + 4;
  if (v23 + 4 >= v35)
  {
LABEL_29:
    v18 = 0;
LABEL_33:
    v15 = v33;
    v10 = v34;
    goto LABEL_34;
  }
  v24 = *(_QWORD *)(v36 + 8 * v25);
  if (v24)
  {
LABEL_14:
    v23 = v25;
    goto LABEL_15;
  }
  while (!__OFADD__(v25, 1))
  {
    if (v25 + 1 >= v35)
    {
      v18 = 0;
      v19 = v32;
      goto LABEL_33;
    }
    sub_23F389EA0();
    if (v24)
      goto LABEL_15;
  }
LABEL_37:
  __break(1u);
}

void sub_23F388EC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  char v25;
  unint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t DecorationCacheKey;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_23F362ABC();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = sub_23F35D2E8(&qword_256E6FF50);
  v11 = sub_23F38A090(v10);
  MEMORY[0x24BDAC7A8](v11);
  sub_23F389880();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F389ECC();
  v36 = v13;
  sub_23F389CBC();
  v17 = v16 & v15;
  if (!v7)
  {
    v18 = 0;
LABEL_38:
    *v9 = v3;
    v9[1] = v36;
    v9[2] = ~v14;
    v9[3] = v18;
    v9[4] = v17;
    sub_23F362948();
    return;
  }
  if (!v5)
  {
    v18 = 0;
    goto LABEL_38;
  }
  if (v5 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v33 = v14;
  v34 = v9;
  v18 = 0;
  v19 = 0;
  v35 = (unint64_t)(63 - v14) >> 6;
  v20 = v5;
  if (!v17)
    goto LABEL_6;
LABEL_5:
  v21 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  v22 = v21 | (v18 << 6);
  while (1)
  {
    ++v19;
    v29 = *(_QWORD *)(v3 + 48);
    DecorationCacheKey = type metadata accessor for QueryDecorationCacheKey(0);
    sub_23F362600(v29 + *(_QWORD *)(*(_QWORD *)(DecorationCacheKey - 8) + 72) * v22, v0, type metadata accessor for QueryDecorationCacheKey);
    *(_QWORD *)(v0 + *(int *)(v38 + 48)) = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v22);
    v31 = sub_23F389F14();
    sub_23F383004(v31, v32, &qword_256E6FF50);
    sub_23F383004(v1, v7, &qword_256E6FF50);
    if (v19 == v20)
      goto LABEL_37;
    v7 += *(_QWORD *)(v37 + 72);
    if (v17)
      goto LABEL_5;
LABEL_6:
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    sub_23F389DCC();
    if (v24 == v25)
      goto LABEL_34;
    v26 = *(_QWORD *)(v36 + 8 * v23);
    if (!v26)
      break;
LABEL_17:
    v17 = (v26 - 1) & v26;
    v22 = __clz(__rbit64(v26)) + (v23 << 6);
    v18 = v23;
  }
  v18 = v23 + 1;
  if (v23 + 1 >= v35)
  {
    v17 = 0;
    v18 = v23;
    goto LABEL_37;
  }
  v26 = *(_QWORD *)(v36 + 8 * v18);
  if (v26)
    goto LABEL_12;
  sub_23F389E80();
  if (v24 == v25)
    goto LABEL_34;
  v26 = *(_QWORD *)(v36 + 8 * v28);
  if (v26)
    goto LABEL_16;
  v18 = v27 + 3;
  if (v27 + 3 >= v35)
  {
    v17 = 0;
    v18 = v28;
    goto LABEL_37;
  }
  v26 = *(_QWORD *)(v36 + 8 * v18);
  if (v26)
  {
LABEL_12:
    v23 = v18;
    goto LABEL_17;
  }
  sub_23F389E38();
  if (v24 == v25)
  {
LABEL_34:
    v17 = 0;
LABEL_37:
    v14 = v33;
    v9 = v34;
    goto LABEL_38;
  }
  v26 = *(_QWORD *)(v36 + 8 * v28);
  if (v26)
  {
LABEL_16:
    v23 = v28;
    goto LABEL_17;
  }
  while (!__OFADD__(v28, 1))
  {
    sub_23F389DCC();
    if (v24 == v25)
    {
      v17 = 0;
      v18 = v35 - 1;
      goto LABEL_37;
    }
    sub_23F389EA0();
    if (v26)
      goto LABEL_17;
  }
LABEL_41:
  __break(1u);
}

void sub_23F389138()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_23F362ABC();
  sub_23F389EFC();
  sub_23F618D28();
  sub_23F389AF8();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F389880();
  MEMORY[0x24BDAC7A8](v7);
  v22 = v0;
  v8 = v0 + 64;
  v20 = v8;
  sub_23F38993C();
  if (v3 && v5)
  {
    if (v5 < 0)
    {
LABEL_37:
      __break(1u);
    }
    else
    {
      sub_23F389A2C();
      if (!v4)
        goto LABEL_6;
LABEL_5:
      sub_23F389AB8();
      while (1)
      {
        ++v2;
        sub_23F389C14(*(_QWORD *)(v22 + 56));
        sub_23F389D14();
        sub_23F389E70();
        if (v2 == v21)
        {
LABEL_34:
          v9 = v19;
          goto LABEL_35;
        }
        v3 += v1;
        if (v4)
          goto LABEL_5;
LABEL_6:
        if (__OFADD__(v8, 1))
        {
          __break(1u);
          goto LABEL_37;
        }
        sub_23F389DCC();
        if (v11 == v12)
          goto LABEL_34;
        if (!*(_QWORD *)(v20 + 8 * v10))
        {
          v8 = v10 + 1;
          sub_23F38A0B0();
          if (v11 == v12)
            goto LABEL_34;
          sub_23F38A000();
          if (!v13)
          {
            sub_23F389E80();
            if (v11 == v12)
              goto LABEL_34;
            if (!*(_QWORD *)(v20 + 8 * v15))
            {
              v8 = v14 + 3;
              sub_23F38A0B0();
              if (v11 == v12)
                goto LABEL_34;
              sub_23F38A000();
              if (!v16)
              {
                sub_23F389E38();
                if (v11 == v12)
                  goto LABEL_34;
                if (!*(_QWORD *)(v20 + 8 * v17))
                  break;
              }
            }
          }
        }
LABEL_17:
        sub_23F389974();
      }
      while (!__OFADD__(v17, 1))
      {
        sub_23F389DCC();
        if (v11 == v12)
          goto LABEL_34;
        sub_23F389EA0();
        if (v18)
          goto LABEL_17;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_35:
    sub_23F389AA0(~v9);
    sub_23F362948();
  }
}

uint64_t sub_23F3892EC(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      sub_23F617BA0();
      goto LABEL_38;
    }
    v11 += 2;
    result = sub_23F617BA0();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

void sub_23F3894E8()
{
  sub_23F3894F4();
}

void sub_23F3894F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_23F362ABC();
  v6 = sub_23F389EFC();
  v7(v6);
  sub_23F389AF8();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F389880();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F389EE4();
  v21 = v0;
  sub_23F38993C();
  if (v3 && v5)
  {
    if (v5 < 0)
    {
LABEL_37:
      __break(1u);
    }
    else
    {
      sub_23F389A2C();
      if (!v4)
        goto LABEL_6;
LABEL_5:
      sub_23F389AB8();
      while (1)
      {
        ++v2;
        sub_23F389C14(*(_QWORD *)(v23 + 48));
        sub_23F389D14();
        sub_23F389E70();
        if (v2 == v22)
        {
LABEL_34:
          v10 = v20;
          goto LABEL_35;
        }
        v3 += v1;
        if (v4)
          goto LABEL_5;
LABEL_6:
        if (__OFADD__(v0, 1))
        {
          __break(1u);
          goto LABEL_37;
        }
        sub_23F389DCC();
        if (v12 == v13)
          goto LABEL_34;
        if (!*(_QWORD *)(v21 + 8 * v11))
        {
          v0 = v11 + 1;
          sub_23F38A0B0();
          if (v12 == v13)
            goto LABEL_34;
          sub_23F38A000();
          if (!v14)
          {
            sub_23F389E80();
            if (v12 == v13)
              goto LABEL_34;
            if (!*(_QWORD *)(v21 + 8 * v16))
            {
              v0 = v15 + 3;
              sub_23F38A0B0();
              if (v12 == v13)
                goto LABEL_34;
              sub_23F38A000();
              if (!v17)
              {
                sub_23F389E38();
                if (v12 == v13)
                  goto LABEL_34;
                if (!*(_QWORD *)(v21 + 8 * v18))
                  break;
              }
            }
          }
        }
LABEL_17:
        sub_23F389974();
      }
      while (!__OFADD__(v18, 1))
      {
        sub_23F389DCC();
        if (v12 == v13)
          goto LABEL_34;
        sub_23F389EA0();
        if (v19)
          goto LABEL_17;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_35:
    sub_23F389AA0(~v10);
    sub_23F362948();
  }
}

uint64_t sub_23F389698(uint64_t result, uint64_t a2, unint64_t a3, void (*a4)(uint64_t, _QWORD, uint64_t), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t i;
  uint64_t v20;
  void (*v21)(_BYTE *, _QWORD);
  id *v22;
  id v23;
  _BYTE v24[32];

  v13 = result;
  v14 = a3 >> 62;
  if (a3 >> 62)
  {
    sub_23F3668F4();
    v15 = sub_23F61CA6C();
    result = sub_23F362D18();
    if (!v15)
      return a3;
  }
  else
  {
    v15 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
      return a3;
  }
  if (v13)
  {
    if (v14)
    {
      sub_23F3668F4();
      v16 = sub_23F61CA6C();
      result = sub_23F362D18();
      if (v16 <= a2)
      {
        if (v15 >= 1)
        {
          sub_23F389844(a5, a6, MEMORY[0x24BEE12E0]);
          v18 = v17;
          sub_23F3668F4();
          for (i = 0; i != v15; ++i)
          {
            v20 = sub_23F35D2E8(a6);
            v21 = (void (*)(_BYTE *, _QWORD))a7(v24, i, a3, v20, v18);
            v23 = *v22;
            v21(v24, 0);
            *(_QWORD *)(v13 + 8 * i) = v23;
          }
          sub_23F362D18();
          return a3;
        }
        goto LABEL_16;
      }
    }
    else
    {
      if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
      {
        a4((a3 & 0xFFFFFFFFFFFFFF8) + 32, *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10), v13);
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_23F38981C(uint64_t a1)
{
  swift_release();
  return a1;
}

void sub_23F389844(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;

  if (!*a1)
  {
    v5 = sub_23F35EB74(a2);
    atomic_store(MEMORY[0x242670A44](a3, v5), a1);
  }
  sub_23F362928();
}

uint64_t sub_23F38989C()
{
  return sub_23F382E18();
}

uint64_t sub_23F3898DC()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_23F3898E8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 - 112);
  *(_QWORD *)(v0 - 120) = *(_QWORD *)(v0 - 120);
  *(_QWORD *)(v0 - 112) = v1;
  return sub_23F617BA0();
}

uint64_t sub_23F3898F8()
{
  return sub_23F61CA54();
}

uint64_t sub_23F389910()
{
  uint64_t v0;

  return v0 + 32;
}

uint64_t sub_23F389920(uint64_t a1)
{
  uint64_t v1;

  return sub_23F36195C(a1, 1, v1);
}

uint64_t sub_23F38995C()
{
  return sub_23F61C088();
}

uint64_t sub_23F389990(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t sub_23F3899AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F36196C(v4, a2, 1, v3);
  v8 = *(_QWORD *)(v7 - 152);
  *(_QWORD *)(v7 - 120) = v2;
  *(_QWORD *)(v7 - 112) = v8;
  *(_QWORD *)(v7 - 104) = *(_QWORD *)(v7 - 168);
  *(_QWORD *)(v7 - 96) = v6;
  *(_QWORD *)(v7 - 88) = v5;
  return v4;
}

void sub_23F3899EC(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 128) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_23F389A08()
{
  return 8492258;
}

void sub_23F389A2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  *(_QWORD *)(v3 - 128) = v0;
  *(_QWORD *)(v3 - 120) = v1;
  v4 = (unint64_t)(63 - v0) >> 6;
  *(_QWORD *)(v3 - 112) = v4;
  *(_QWORD *)(v3 - 136) = v4 - 1;
  *(_QWORD *)(v3 - 96) = v2;
}

uint64_t sub_23F389A58()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F389A8C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 120);
}

uint64_t sub_23F389AA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  *v4 = v2;
  v4[1] = v1;
  v4[2] = a1;
  v4[3] = v3;
  v4[4] = v5;
  return v6;
}

void sub_23F389AD0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 144) = (*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
}

void sub_23F389B08(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 160) = (v1 - 1) & v1;
  *(_QWORD *)(v2 - 152) = a1;
}

uint64_t sub_23F389B30()
{
  return sub_23F61C280();
}

uint64_t sub_23F389B44()
{
  return sub_23F61C280();
}

void sub_23F389B4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(*(_QWORD *)v0 + 16) = v3;
  sub_23F382EF8(v1, *(_QWORD *)(v4 - 136), v2);
}

uint64_t sub_23F389BA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, *(_QWORD *)(v1 + 48) + v0 * v3, v2);
}

uint64_t sub_23F389BC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  *(_QWORD *)(v7 - 168) = v5;
  result = sub_23F36196C(v4, a2, 1, v3);
  *(_QWORD *)(v7 - 120) = v2;
  *(_QWORD *)(v7 - 112) = v6;
  v9 = *(_QWORD *)(v7 - 152);
  *(_QWORD *)(v7 - 104) = v5;
  *(_QWORD *)(v7 - 96) = v9;
  *(_QWORD *)(v7 - 88) = *(_QWORD *)(v7 - 160);
  return result;
}

uint64_t sub_23F389BF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, *(_QWORD *)(v1 + 48) + v0 * v3, v2);
}

void sub_23F389C0C(uint64_t a1)
{
  uint64_t *v1;

  sub_23F3625D8(a1, v1);
}

uint64_t sub_23F389C14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, a1 + *(_QWORD *)(v4 + 72) * v1, v2);
}

uint64_t sub_23F389C2C()
{
  return sub_23F61C280();
}

void sub_23F389C74()
{
  uint64_t *v0;
  uint64_t v1;

  sub_23F382E18();
  sub_23F3625D8(*(_QWORD *)(v1 - 136), v0);
}

void sub_23F389C9C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_23F382EF8(v3, *(_QWORD *)(v4 - 136), a3);
}

void sub_23F389CB4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23F382EF8(a1, a2, v2);
}

uint64_t sub_23F389CDC()
{
  return sub_23F617BA0();
}

void sub_23F389CE4(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  sub_23F36262C(a1, v2, v1);
}

void sub_23F389CF0(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 160) = (a1 - 1) & a1;
}

uint64_t sub_23F389D0C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F389D14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v2, v1, v0);
}

uint64_t sub_23F389D28()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 136) = v0;
  return swift_isUniquelyReferenced_nonNull_native();
}

void sub_23F389D34()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 176) = *(_QWORD *)(*(_QWORD *)v0 + 24) >> 1;
}

uint64_t sub_23F389D50()
{
  return sub_23F61C280();
}

void sub_23F389D80(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 192) = (v1 - 1) & v1;
  *(_QWORD *)(v2 - 184) = a1;
}

uint64_t sub_23F389D9C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F389DB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;

  return v3(*(_QWORD *)(v5 - 184) + v4 * v2, v0, v1);
}

void sub_23F389DD8()
{
  JUMPOUT(0x24266F838);
}

void sub_23F389DEC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  sub_23F382EF8(v0, *(_QWORD *)(v2 - 160), v1);
}

uint64_t sub_23F389E00()
{
  return 0x208394E220;
}

uint64_t sub_23F389E18()
{
  return sub_23F61C280();
}

void sub_23F389E48()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 152) = *(_QWORD *)(v0 - 96);
}

void sub_23F389E60(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 120) = v1;
  *(_QWORD *)(v2 - 112) = (a1 - 32) | 0x8000000000000000;
}

uint64_t sub_23F389E70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v0, v2, v1);
}

uint64_t sub_23F389E90()
{
  uint64_t v0;

  return v0 - 120;
}

uint64_t sub_23F389EAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

void sub_23F389EBC(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;

  sub_23F362600(a1 + v1 * v3, v4, v2);
}

void sub_23F389EE4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = v0;
}

uint64_t sub_23F389EFC()
{
  return 0;
}

uint64_t sub_23F389F14()
{
  uint64_t v0;

  return v0;
}

void sub_23F389F20(uint64_t a1)
{
  uint64_t *v1;

  sub_23F3625D8(a1, v1);
}

uint64_t sub_23F389F28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v0, v2, v1);
}

uint64_t sub_23F389F38(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;

  *v1 = result;
  *(_QWORD *)(v2 - 176) = *(_QWORD *)(result + 24) >> 1;
  return result;
}

void sub_23F389F50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 - 112);
  v3 = *(_QWORD *)(v1 - 104);
  *(_QWORD *)(v1 - 160) = v0;
  *(_QWORD *)(v1 - 152) = v2;
  *(_QWORD *)(v1 - 168) = v3;
}

uint64_t sub_23F389F68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return sub_23F36196C(v3, a2, 1, v2);
}

void sub_23F389F78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F382EF8(v0, v1, *(uint64_t **)(v2 - 136));
}

void sub_23F389F9C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 - 96);
  *(_QWORD *)(v0 - 160) = *(_QWORD *)(v0 - 88);
  *(_QWORD *)(v0 - 152) = v1;
}

BOOL sub_23F389FB0@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_23F389FDC()
{
  return sub_23F61C8E0();
}

void sub_23F389FF8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_23F383004(a1, a2, v2);
}

uint64_t sub_23F38A00C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  return a29;
}

void sub_23F38A02C()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 192) = 32;
  *(_QWORD *)(v0 - 184) = 0xE100000000000000;
}

uint64_t sub_23F38A040()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F36195C(v1, 1, v0);
}

void sub_23F38A064()
{
  sub_23F3778B8();
}

void sub_23F38A070()
{
  sub_23F37733C();
}

uint64_t sub_23F38A07C()
{
  return sub_23F61C280();
}

uint64_t sub_23F38A090(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = *(_QWORD *)(result - 8);
  *(_QWORD *)(v1 - 88) = result;
  return result;
}

uint64_t sub_23F38A0A4()
{
  return sub_23F61C088();
}

uint64_t sub_23F38A0BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 16))(v1);
}

uint64_t sub_23F38A0C8()
{
  return sub_23F61C418();
}

void sub_23F38A0D4()
{
  uint64_t *v0;
  uint64_t v1;

  sub_23F3625D8(v1, v0);
}

void sub_23F38A0E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = v0 + *(_QWORD *)(v2 - 144);
  *(_QWORD *)(v2 - 192) = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v2 - 184) = v3;
}

void sub_23F38A108()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 - 160);
  *(_QWORD *)(v1 - 104) = v0;
  *(_QWORD *)(v1 - 96) = v2;
  *(_QWORD *)(v1 - 88) = *(_QWORD *)(v1 - 168);
}

uint64_t *sub_23F38A11C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  int v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  _OWORD *v52;
  _OWORD *v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  int v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  uint64_t v80;
  char *v81;
  char *v82;
  int v83;
  __int128 v84;
  __int128 v85;
  uint64_t v86;
  id v87;
  uint64_t v88;
  char *v89;
  char *v90;
  int v91;
  __int128 v92;
  __int128 v93;
  uint64_t v94;
  id v95;
  uint64_t v96;
  char *v97;
  char *v98;
  int v99;
  __int128 v100;
  __int128 v101;
  uint64_t v102;
  id v103;
  uint64_t v104;
  char *v105;
  char *v106;
  int v107;
  __int128 v108;
  __int128 v109;
  uint64_t v110;
  id v111;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23F6170CC();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    sub_23F617BA0();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = (char *)v4 + v13;
    v15 = (char *)a2 + v13;
    v16 = sub_23F61B32C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = a3[7];
    v18 = (char *)v4 + v17;
    v19 = (char *)a2 + v17;
    v20 = sub_23F61B104();
    if (sub_23F36195C((uint64_t)v19, 1, v20))
    {
      v21 = sub_23F35D2E8(&qword_256E705E0);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
      sub_23F36196C((uint64_t)v18, 0, 1, v20);
    }
    v23 = a3[8];
    v24 = (char *)v4 + v23;
    v25 = (char *)a2 + v23;
    v26 = *(uint64_t *)((char *)a2 + v23 + 24);
    if (v26)
    {
      v27 = *((_QWORD *)v25 + 4);
      *((_QWORD *)v24 + 3) = v26;
      *((_QWORD *)v24 + 4) = v27;
      (**(void (***)(void))(v26 - 8))();
    }
    else
    {
      v28 = *((_OWORD *)v25 + 1);
      *(_OWORD *)v24 = *(_OWORD *)v25;
      *((_OWORD *)v24 + 1) = v28;
      *((_QWORD *)v24 + 4) = *((_QWORD *)v25 + 4);
    }
    v29 = a3[9];
    v30 = (char *)v4 + v29;
    v31 = (char *)a2 + v29;
    v32 = *((unsigned __int8 *)a2 + v29 + 40);
    if (v32 == 255)
    {
      v33 = *((_OWORD *)v31 + 1);
      *(_OWORD *)v30 = *(_OWORD *)v31;
      *((_OWORD *)v30 + 1) = v33;
      *(_OWORD *)(v30 + 25) = *(_OWORD *)(v31 + 25);
    }
    else if ((v32 & 1) != 0)
    {
      v35 = *(_QWORD *)v31;
      v36 = *(id *)v31;
      *(_QWORD *)v30 = v35;
      v30[40] = 1;
    }
    else
    {
      v34 = *(_OWORD *)(v31 + 24);
      *(_OWORD *)(v30 + 24) = v34;
      (**(void (***)(char *))(v34 - 8))(v30);
      v30[40] = 0;
    }
    v37 = a3[10];
    v38 = (char *)v4 + v37;
    v39 = (char *)a2 + v37;
    v40 = *(uint64_t *)((char *)a2 + v37 + 24);
    if (v40)
    {
      v41 = *((_QWORD *)v39 + 4);
      *((_QWORD *)v38 + 3) = v40;
      *((_QWORD *)v38 + 4) = v41;
      (**(void (***)(char *, char *))(v40 - 8))(v38, v39);
      v42 = *((_OWORD *)v39 + 4);
      *((_OWORD *)v38 + 4) = v42;
      (**(void (***)(uint64_t, uint64_t))(v42 - 8))((uint64_t)(v38 + 40), (uint64_t)(v39 + 40));
      v43 = *(_OWORD *)(v39 + 104);
      *(_OWORD *)(v38 + 104) = v43;
      (**(void (***)(uint64_t, uint64_t))(v43 - 8))((uint64_t)(v38 + 80), (uint64_t)(v39 + 80));
      v44 = *((_OWORD *)v39 + 9);
      *((_OWORD *)v38 + 9) = v44;
      (**(void (***)(uint64_t, uint64_t))(v44 - 8))((uint64_t)(v38 + 120), (uint64_t)(v39 + 120));
      v45 = *(_OWORD *)(v39 + 184);
      *(_OWORD *)(v38 + 184) = v45;
      (**(void (***)(uint64_t, uint64_t))(v45 - 8))((uint64_t)(v38 + 160), (uint64_t)(v39 + 160));
    }
    else
    {
      memcpy((char *)v4 + v37, (char *)a2 + v37, 0xC8uLL);
    }
    v46 = a3[11];
    v47 = (char *)v4 + v46;
    v48 = (char *)a2 + v46;
    if (*(uint64_t *)((char *)a2 + v46 + 104))
    {
      v49 = *((_QWORD *)v48 + 3);
      if (v49)
      {
        v50 = *((_QWORD *)v48 + 4);
        *((_QWORD *)v47 + 3) = v49;
        *((_QWORD *)v47 + 4) = v50;
        (**(void (***)(void *, const void *))(v49 - 8))(v47, v48);
      }
      else
      {
        v51 = *((_OWORD *)v48 + 1);
        *(_OWORD *)v47 = *(_OWORD *)v48;
        *((_OWORD *)v47 + 1) = v51;
        *((_QWORD *)v47 + 4) = *((_QWORD *)v48 + 4);
      }
      v52 = v47 + 40;
      v53 = v48 + 40;
      v54 = *((_QWORD *)v48 + 8);
      if (v54)
      {
        v55 = *((_QWORD *)v48 + 9);
        *((_QWORD *)v47 + 8) = v54;
        *((_QWORD *)v47 + 9) = v55;
        (**(void (***)(_OWORD *, _OWORD *))(v54 - 8))(v52, v53);
      }
      else
      {
        v56 = *(_OWORD *)(v48 + 56);
        *v52 = *v53;
        *(_OWORD *)(v47 + 56) = v56;
        *((_QWORD *)v47 + 9) = *((_QWORD *)v48 + 9);
      }
      v57 = *(_OWORD *)(v48 + 104);
      *(_OWORD *)(v47 + 104) = v57;
      (**(void (***)(uint64_t, uint64_t))(v57 - 8))((uint64_t)(v47 + 80), (uint64_t)(v48 + 80));
      v58 = *((_OWORD *)v48 + 9);
      *((_OWORD *)v47 + 9) = v58;
      (**(void (***)(uint64_t, uint64_t))(v58 - 8))((uint64_t)(v47 + 120), (uint64_t)(v48 + 120));
      v59 = *(_OWORD *)(v48 + 184);
      *(_OWORD *)(v47 + 184) = v59;
      (**(void (***)(uint64_t, uint64_t))(v59 - 8))((uint64_t)(v47 + 160), (uint64_t)(v48 + 160));
      v60 = *((_OWORD *)v48 + 14);
      *((_OWORD *)v47 + 14) = v60;
      (**(void (***)(uint64_t, uint64_t))(v60 - 8))((uint64_t)(v47 + 200), (uint64_t)(v48 + 200));
      v61 = *((_QWORD *)v48 + 33);
      v62 = *((_QWORD *)v48 + 34);
      *((_QWORD *)v47 + 33) = v61;
      *((_QWORD *)v47 + 34) = v62;
      (**(void (***)(uint64_t, uint64_t))(v61 - 8))((uint64_t)(v47 + 240), (uint64_t)(v48 + 240));
      v63 = *((_OWORD *)v48 + 19);
      *((_OWORD *)v47 + 19) = v63;
      (**(void (***)(uint64_t, uint64_t))(v63 - 8))((uint64_t)(v47 + 280), (uint64_t)(v48 + 280));
      v64 = *((_QWORD *)v48 + 43);
      v65 = *((_QWORD *)v48 + 44);
      *((_QWORD *)v47 + 43) = v64;
      *((_QWORD *)v47 + 44) = v65;
      (**(void (***)(uint64_t, uint64_t))(v64 - 8))((uint64_t)(v47 + 320), (uint64_t)(v48 + 320));
    }
    else
    {
      memcpy(v47, v48, 0x168uLL);
    }
    v66 = a3[12];
    v67 = (char *)v4 + v66;
    v68 = (char *)a2 + v66;
    v69 = *((unsigned __int8 *)a2 + v66 + 40);
    if (v69 == 255)
    {
      v70 = *((_OWORD *)v68 + 1);
      *(_OWORD *)v67 = *(_OWORD *)v68;
      *((_OWORD *)v67 + 1) = v70;
      *(_OWORD *)(v67 + 25) = *(_OWORD *)(v68 + 25);
    }
    else if ((v69 & 1) != 0)
    {
      v72 = *(_QWORD *)v68;
      v73 = *(id *)v68;
      *(_QWORD *)v67 = v72;
      v67[40] = 1;
    }
    else
    {
      v71 = *(_OWORD *)(v68 + 24);
      *(_OWORD *)(v67 + 24) = v71;
      (**(void (***)(char *))(v71 - 8))(v67);
      v67[40] = 0;
    }
    v74 = a3[13];
    v75 = (char *)v4 + v74;
    v76 = (char *)a2 + v74;
    v77 = *(uint64_t *)((char *)a2 + v74 + 24);
    if (v77)
    {
      v78 = *((_QWORD *)v76 + 4);
      *((_QWORD *)v75 + 3) = v77;
      *((_QWORD *)v75 + 4) = v78;
      (**(void (***)(void))(v77 - 8))();
    }
    else
    {
      v79 = *((_OWORD *)v76 + 1);
      *(_OWORD *)v75 = *(_OWORD *)v76;
      *((_OWORD *)v75 + 1) = v79;
      *((_QWORD *)v75 + 4) = *((_QWORD *)v76 + 4);
    }
    v80 = a3[14];
    v81 = (char *)v4 + v80;
    v82 = (char *)a2 + v80;
    v83 = *((unsigned __int8 *)a2 + v80 + 40);
    if (v83 == 255)
    {
      v84 = *((_OWORD *)v82 + 1);
      *(_OWORD *)v81 = *(_OWORD *)v82;
      *((_OWORD *)v81 + 1) = v84;
      *(_OWORD *)(v81 + 25) = *(_OWORD *)(v82 + 25);
    }
    else if ((v83 & 1) != 0)
    {
      v86 = *(_QWORD *)v82;
      v87 = *(id *)v82;
      *(_QWORD *)v81 = v86;
      v81[40] = 1;
    }
    else
    {
      v85 = *(_OWORD *)(v82 + 24);
      *(_OWORD *)(v81 + 24) = v85;
      (**(void (***)(char *))(v85 - 8))(v81);
      v81[40] = 0;
    }
    v88 = a3[15];
    v89 = (char *)v4 + v88;
    v90 = (char *)a2 + v88;
    v91 = *((unsigned __int8 *)a2 + v88 + 40);
    if (v91 == 255)
    {
      v92 = *((_OWORD *)v90 + 1);
      *(_OWORD *)v89 = *(_OWORD *)v90;
      *((_OWORD *)v89 + 1) = v92;
      *(_OWORD *)(v89 + 25) = *(_OWORD *)(v90 + 25);
    }
    else if ((v91 & 1) != 0)
    {
      v94 = *(_QWORD *)v90;
      v95 = *(id *)v90;
      *(_QWORD *)v89 = v94;
      v89[40] = 1;
    }
    else
    {
      v93 = *(_OWORD *)(v90 + 24);
      *(_OWORD *)(v89 + 24) = v93;
      (**(void (***)(char *))(v93 - 8))(v89);
      v89[40] = 0;
    }
    v96 = a3[16];
    v97 = (char *)v4 + v96;
    v98 = (char *)a2 + v96;
    v99 = *((unsigned __int8 *)a2 + v96 + 40);
    if (v99 == 255)
    {
      v100 = *((_OWORD *)v98 + 1);
      *(_OWORD *)v97 = *(_OWORD *)v98;
      *((_OWORD *)v97 + 1) = v100;
      *(_OWORD *)(v97 + 25) = *(_OWORD *)(v98 + 25);
    }
    else if ((v99 & 1) != 0)
    {
      v102 = *(_QWORD *)v98;
      v103 = *(id *)v98;
      *(_QWORD *)v97 = v102;
      v97[40] = 1;
    }
    else
    {
      v101 = *(_OWORD *)(v98 + 24);
      *(_OWORD *)(v97 + 24) = v101;
      (**(void (***)(char *))(v101 - 8))(v97);
      v97[40] = 0;
    }
    v104 = a3[17];
    v105 = (char *)v4 + v104;
    v106 = (char *)a2 + v104;
    v107 = *((unsigned __int8 *)a2 + v104 + 40);
    if (v107 == 255)
    {
      v108 = *((_OWORD *)v106 + 1);
      *(_OWORD *)v105 = *(_OWORD *)v106;
      *((_OWORD *)v105 + 1) = v108;
      *(_OWORD *)(v105 + 25) = *(_OWORD *)(v106 + 25);
    }
    else if ((v107 & 1) != 0)
    {
      v110 = *(_QWORD *)v106;
      v111 = *(id *)v106;
      *(_QWORD *)v105 = v110;
      v105[40] = 1;
    }
    else
    {
      v109 = *(_OWORD *)(v106 + 24);
      *(_OWORD *)(v105 + 24) = v109;
      (**(void (***)(char *))(v109 - 8))(v105);
      v105[40] = 0;
    }
  }
  return v4;
}

void sub_23F38A7A4(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  int v25;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_23F6170CC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[6];
  v7 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = a1 + a2[7];
  v9 = sub_23F61B104();
  if (!sub_23F36195C(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = a1 + a2[8];
  if (*(_QWORD *)(v10 + 24))
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v10);
  v11 = a1 + a2[9];
  v12 = *(unsigned __int8 *)(v11 + 40);
  if (v12 != 255)
  {
    if ((v12 & 1) != 0)

    else
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v11);
  }
  v13 = a1 + a2[10];
  if (*(_QWORD *)(v13 + 24))
  {
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + a2[10]);
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v13 + 40);
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v13 + 80);
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v13 + 120);
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v13 + 160);
  }
  v14 = (_QWORD *)(a1 + a2[11]);
  if (v14[13])
  {
    if (v14[3])
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + a2[11]);
    if (v14[8])
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)(v14 + 5));
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)(v14 + 10));
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)(v14 + 15));
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)(v14 + 20));
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)(v14 + 25));
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)(v14 + 30));
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)(v14 + 35));
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)(v14 + 40));
  }
  v15 = a1 + a2[12];
  v16 = *(unsigned __int8 *)(v15 + 40);
  if (v16 != 255)
  {
    if ((v16 & 1) != 0)

    else
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v15);
  }
  v17 = a1 + a2[13];
  if (*(_QWORD *)(v17 + 24))
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v17);
  v18 = a1 + a2[14];
  v19 = *(unsigned __int8 *)(v18 + 40);
  if (v19 != 255)
  {
    if ((v19 & 1) != 0)

    else
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v18);
  }
  v20 = a1 + a2[15];
  v21 = *(unsigned __int8 *)(v20 + 40);
  if (v21 != 255)
  {
    if ((v21 & 1) != 0)

    else
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v20);
  }
  v22 = a1 + a2[16];
  v23 = *(unsigned __int8 *)(v22 + 40);
  if (v23 != 255)
  {
    if ((v23 & 1) != 0)

    else
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v22);
  }
  v24 = a1 + a2[17];
  v25 = *(unsigned __int8 *)(v24 + 40);
  if (v25 != 255)
  {
    if ((v25 & 1) != 0)

    else
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v24);
  }
}

_QWORD *sub_23F38AA24(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  char *v28;
  char *v29;
  int v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  _OWORD *v50;
  _OWORD *v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  int v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  uint64_t v78;
  char *v79;
  char *v80;
  int v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  char *v87;
  char *v88;
  int v89;
  __int128 v90;
  __int128 v91;
  uint64_t v92;
  id v93;
  uint64_t v94;
  char *v95;
  char *v96;
  int v97;
  __int128 v98;
  __int128 v99;
  uint64_t v100;
  id v101;
  uint64_t v102;
  char *v103;
  char *v104;
  int v105;
  __int128 v106;
  __int128 v107;
  uint64_t v108;
  id v109;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23F6170CC();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  sub_23F617BA0();
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_23F61B32C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v16 = a3[7];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_23F61B104();
  if (sub_23F36195C((uint64_t)v18, 1, v19))
  {
    v20 = sub_23F35D2E8(&qword_256E705E0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    sub_23F36196C((uint64_t)v17, 0, 1, v19);
  }
  v21 = a3[8];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = *(_QWORD *)((char *)a2 + v21 + 24);
  if (v24)
  {
    v25 = *((_QWORD *)v23 + 4);
    *((_QWORD *)v22 + 3) = v24;
    *((_QWORD *)v22 + 4) = v25;
    (**(void (***)(void))(v24 - 8))();
  }
  else
  {
    v26 = *((_OWORD *)v23 + 1);
    *(_OWORD *)v22 = *(_OWORD *)v23;
    *((_OWORD *)v22 + 1) = v26;
    *((_QWORD *)v22 + 4) = *((_QWORD *)v23 + 4);
  }
  v27 = a3[9];
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  v30 = *((unsigned __int8 *)a2 + v27 + 40);
  if (v30 == 255)
  {
    v31 = *((_OWORD *)v29 + 1);
    *(_OWORD *)v28 = *(_OWORD *)v29;
    *((_OWORD *)v28 + 1) = v31;
    *(_OWORD *)(v28 + 25) = *(_OWORD *)(v29 + 25);
  }
  else if ((v30 & 1) != 0)
  {
    v33 = *(_QWORD *)v29;
    v34 = *(id *)v29;
    *(_QWORD *)v28 = v33;
    v28[40] = 1;
  }
  else
  {
    v32 = *(_OWORD *)(v29 + 24);
    *(_OWORD *)(v28 + 24) = v32;
    (**(void (***)(char *))(v32 - 8))(v28);
    v28[40] = 0;
  }
  v35 = a3[10];
  v36 = (char *)a1 + v35;
  v37 = (char *)a2 + v35;
  v38 = *(_QWORD *)((char *)a2 + v35 + 24);
  if (v38)
  {
    v39 = *((_QWORD *)v37 + 4);
    *((_QWORD *)v36 + 3) = v38;
    *((_QWORD *)v36 + 4) = v39;
    (**(void (***)(char *, char *))(v38 - 8))(v36, v37);
    v40 = *((_OWORD *)v37 + 4);
    *((_OWORD *)v36 + 4) = v40;
    (**(void (***)(uint64_t, uint64_t))(v40 - 8))((uint64_t)(v36 + 40), (uint64_t)(v37 + 40));
    v41 = *(_OWORD *)(v37 + 104);
    *(_OWORD *)(v36 + 104) = v41;
    (**(void (***)(uint64_t, uint64_t))(v41 - 8))((uint64_t)(v36 + 80), (uint64_t)(v37 + 80));
    v42 = *((_OWORD *)v37 + 9);
    *((_OWORD *)v36 + 9) = v42;
    (**(void (***)(uint64_t, uint64_t))(v42 - 8))((uint64_t)(v36 + 120), (uint64_t)(v37 + 120));
    v43 = *(_OWORD *)(v37 + 184);
    *(_OWORD *)(v36 + 184) = v43;
    (**(void (***)(uint64_t, uint64_t))(v43 - 8))((uint64_t)(v36 + 160), (uint64_t)(v37 + 160));
  }
  else
  {
    memcpy((char *)a1 + v35, (char *)a2 + v35, 0xC8uLL);
  }
  v44 = a3[11];
  v45 = (char *)a1 + v44;
  v46 = (char *)a2 + v44;
  if (*(_QWORD *)((char *)a2 + v44 + 104))
  {
    v47 = *((_QWORD *)v46 + 3);
    if (v47)
    {
      v48 = *((_QWORD *)v46 + 4);
      *((_QWORD *)v45 + 3) = v47;
      *((_QWORD *)v45 + 4) = v48;
      (**(void (***)(void *, const void *))(v47 - 8))(v45, v46);
    }
    else
    {
      v49 = *((_OWORD *)v46 + 1);
      *(_OWORD *)v45 = *(_OWORD *)v46;
      *((_OWORD *)v45 + 1) = v49;
      *((_QWORD *)v45 + 4) = *((_QWORD *)v46 + 4);
    }
    v50 = v45 + 40;
    v51 = v46 + 40;
    v52 = *((_QWORD *)v46 + 8);
    if (v52)
    {
      v53 = *((_QWORD *)v46 + 9);
      *((_QWORD *)v45 + 8) = v52;
      *((_QWORD *)v45 + 9) = v53;
      (**(void (***)(_OWORD *, _OWORD *))(v52 - 8))(v50, v51);
    }
    else
    {
      v54 = *(_OWORD *)(v46 + 56);
      *v50 = *v51;
      *(_OWORD *)(v45 + 56) = v54;
      *((_QWORD *)v45 + 9) = *((_QWORD *)v46 + 9);
    }
    v55 = *(_OWORD *)(v46 + 104);
    *(_OWORD *)(v45 + 104) = v55;
    (**(void (***)(uint64_t, uint64_t))(v55 - 8))((uint64_t)(v45 + 80), (uint64_t)(v46 + 80));
    v56 = *((_OWORD *)v46 + 9);
    *((_OWORD *)v45 + 9) = v56;
    (**(void (***)(uint64_t, uint64_t))(v56 - 8))((uint64_t)(v45 + 120), (uint64_t)(v46 + 120));
    v57 = *(_OWORD *)(v46 + 184);
    *(_OWORD *)(v45 + 184) = v57;
    (**(void (***)(uint64_t, uint64_t))(v57 - 8))((uint64_t)(v45 + 160), (uint64_t)(v46 + 160));
    v58 = *((_OWORD *)v46 + 14);
    *((_OWORD *)v45 + 14) = v58;
    (**(void (***)(uint64_t, uint64_t))(v58 - 8))((uint64_t)(v45 + 200), (uint64_t)(v46 + 200));
    v59 = *((_QWORD *)v46 + 33);
    v60 = *((_QWORD *)v46 + 34);
    *((_QWORD *)v45 + 33) = v59;
    *((_QWORD *)v45 + 34) = v60;
    (**(void (***)(uint64_t, uint64_t))(v59 - 8))((uint64_t)(v45 + 240), (uint64_t)(v46 + 240));
    v61 = *((_OWORD *)v46 + 19);
    *((_OWORD *)v45 + 19) = v61;
    (**(void (***)(uint64_t, uint64_t))(v61 - 8))((uint64_t)(v45 + 280), (uint64_t)(v46 + 280));
    v62 = *((_QWORD *)v46 + 43);
    v63 = *((_QWORD *)v46 + 44);
    *((_QWORD *)v45 + 43) = v62;
    *((_QWORD *)v45 + 44) = v63;
    (**(void (***)(uint64_t, uint64_t))(v62 - 8))((uint64_t)(v45 + 320), (uint64_t)(v46 + 320));
  }
  else
  {
    memcpy(v45, v46, 0x168uLL);
  }
  v64 = a3[12];
  v65 = (char *)a1 + v64;
  v66 = (char *)a2 + v64;
  v67 = *((unsigned __int8 *)a2 + v64 + 40);
  if (v67 == 255)
  {
    v68 = *((_OWORD *)v66 + 1);
    *(_OWORD *)v65 = *(_OWORD *)v66;
    *((_OWORD *)v65 + 1) = v68;
    *(_OWORD *)(v65 + 25) = *(_OWORD *)(v66 + 25);
  }
  else if ((v67 & 1) != 0)
  {
    v70 = *(_QWORD *)v66;
    v71 = *(id *)v66;
    *(_QWORD *)v65 = v70;
    v65[40] = 1;
  }
  else
  {
    v69 = *(_OWORD *)(v66 + 24);
    *(_OWORD *)(v65 + 24) = v69;
    (**(void (***)(char *))(v69 - 8))(v65);
    v65[40] = 0;
  }
  v72 = a3[13];
  v73 = (char *)a1 + v72;
  v74 = (char *)a2 + v72;
  v75 = *(_QWORD *)((char *)a2 + v72 + 24);
  if (v75)
  {
    v76 = *((_QWORD *)v74 + 4);
    *((_QWORD *)v73 + 3) = v75;
    *((_QWORD *)v73 + 4) = v76;
    (**(void (***)(void))(v75 - 8))();
  }
  else
  {
    v77 = *((_OWORD *)v74 + 1);
    *(_OWORD *)v73 = *(_OWORD *)v74;
    *((_OWORD *)v73 + 1) = v77;
    *((_QWORD *)v73 + 4) = *((_QWORD *)v74 + 4);
  }
  v78 = a3[14];
  v79 = (char *)a1 + v78;
  v80 = (char *)a2 + v78;
  v81 = *((unsigned __int8 *)a2 + v78 + 40);
  if (v81 == 255)
  {
    v82 = *((_OWORD *)v80 + 1);
    *(_OWORD *)v79 = *(_OWORD *)v80;
    *((_OWORD *)v79 + 1) = v82;
    *(_OWORD *)(v79 + 25) = *(_OWORD *)(v80 + 25);
  }
  else if ((v81 & 1) != 0)
  {
    v84 = *(_QWORD *)v80;
    v85 = *(id *)v80;
    *(_QWORD *)v79 = v84;
    v79[40] = 1;
  }
  else
  {
    v83 = *(_OWORD *)(v80 + 24);
    *(_OWORD *)(v79 + 24) = v83;
    (**(void (***)(char *))(v83 - 8))(v79);
    v79[40] = 0;
  }
  v86 = a3[15];
  v87 = (char *)a1 + v86;
  v88 = (char *)a2 + v86;
  v89 = *((unsigned __int8 *)a2 + v86 + 40);
  if (v89 == 255)
  {
    v90 = *((_OWORD *)v88 + 1);
    *(_OWORD *)v87 = *(_OWORD *)v88;
    *((_OWORD *)v87 + 1) = v90;
    *(_OWORD *)(v87 + 25) = *(_OWORD *)(v88 + 25);
  }
  else if ((v89 & 1) != 0)
  {
    v92 = *(_QWORD *)v88;
    v93 = *(id *)v88;
    *(_QWORD *)v87 = v92;
    v87[40] = 1;
  }
  else
  {
    v91 = *(_OWORD *)(v88 + 24);
    *(_OWORD *)(v87 + 24) = v91;
    (**(void (***)(char *))(v91 - 8))(v87);
    v87[40] = 0;
  }
  v94 = a3[16];
  v95 = (char *)a1 + v94;
  v96 = (char *)a2 + v94;
  v97 = *((unsigned __int8 *)a2 + v94 + 40);
  if (v97 == 255)
  {
    v98 = *((_OWORD *)v96 + 1);
    *(_OWORD *)v95 = *(_OWORD *)v96;
    *((_OWORD *)v95 + 1) = v98;
    *(_OWORD *)(v95 + 25) = *(_OWORD *)(v96 + 25);
  }
  else if ((v97 & 1) != 0)
  {
    v100 = *(_QWORD *)v96;
    v101 = *(id *)v96;
    *(_QWORD *)v95 = v100;
    v95[40] = 1;
  }
  else
  {
    v99 = *(_OWORD *)(v96 + 24);
    *(_OWORD *)(v95 + 24) = v99;
    (**(void (***)(char *))(v99 - 8))(v95);
    v95[40] = 0;
  }
  v102 = a3[17];
  v103 = (char *)a1 + v102;
  v104 = (char *)a2 + v102;
  v105 = *((unsigned __int8 *)a2 + v102 + 40);
  if (v105 == 255)
  {
    v106 = *((_OWORD *)v104 + 1);
    *(_OWORD *)v103 = *(_OWORD *)v104;
    *((_OWORD *)v103 + 1) = v106;
    *(_OWORD *)(v103 + 25) = *(_OWORD *)(v104 + 25);
  }
  else if ((v105 & 1) != 0)
  {
    v108 = *(_QWORD *)v104;
    v109 = *(id *)v104;
    *(_QWORD *)v103 = v108;
    v103[40] = 1;
  }
  else
  {
    v107 = *(_OWORD *)(v104 + 24);
    *(_OWORD *)(v103 + 24) = v107;
    (**(void (***)(char *))(v107 - 8))(v103);
    v103[40] = 0;
  }
  return a1;
}

_QWORD *sub_23F38B080(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  int v31;
  int v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  _OWORD *v58;
  __int128 *v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  int v75;
  int v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  void *v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  __int128 v88;
  __int128 v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  int v93;
  int v94;
  uint64_t v95;
  __int128 v96;
  __int128 v97;
  void *v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  int v103;
  int v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  void *v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  int v115;
  int v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  void *v121;
  id v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  int v127;
  int v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  uint64_t v133;
  id v134;
  uint64_t v135;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F6170CC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_23F61B32C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v14 = a3[7];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_23F61B104();
  v18 = sub_23F36195C((uint64_t)v15, 1, v17);
  v19 = sub_23F36195C((uint64_t)v16, 1, v17);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
      sub_23F36196C((uint64_t)v15, 0, 1, v17);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v20 = *(_QWORD *)(v17 - 8);
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v15, v17);
LABEL_6:
    v21 = sub_23F35D2E8(&qword_256E705E0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 24))(v15, v16, v17);
LABEL_7:
  v22 = a3[8];
  v23 = (uint64_t)a1 + v22;
  v24 = (_QWORD *)((char *)a2 + v22);
  v25 = *(_QWORD *)((char *)a2 + v22 + 24);
  if (*(_QWORD *)((char *)a1 + v22 + 24))
  {
    if (v25)
    {
      sub_23F361AD0((uint64_t *)v23, v24);
      goto LABEL_14;
    }
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v23);
  }
  else if (v25)
  {
    *(_QWORD *)(v23 + 24) = v25;
    *(_QWORD *)(v23 + 32) = v24[4];
    (**(void (***)(uint64_t, char *))(v25 - 8))(v23, (char *)v24);
    goto LABEL_14;
  }
  v26 = *(_OWORD *)v24;
  v27 = *((_OWORD *)v24 + 1);
  *(_QWORD *)(v23 + 32) = v24[4];
  *(_OWORD *)v23 = v26;
  *(_OWORD *)(v23 + 16) = v27;
LABEL_14:
  v28 = a3[9];
  v29 = (uint64_t)a1 + v28;
  v30 = (char *)a2 + v28;
  v31 = *((unsigned __int8 *)a1 + v28 + 40);
  v32 = v30[40];
  if (v31 != 255)
  {
    if (v32 != 255)
    {
      if (a1 == a2)
        goto LABEL_30;
      if ((v31 & 1) != 0)

      else
        _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v29);
      if ((v30[40] & 1) == 0)
        goto LABEL_17;
      goto LABEL_29;
    }
    if ((v31 & 1) != 0)

    else
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v29);
LABEL_26:
    v34 = *(_OWORD *)v30;
    v35 = *((_OWORD *)v30 + 1);
    *(_OWORD *)(v29 + 25) = *(_OWORD *)(v30 + 25);
    *(_OWORD *)v29 = v34;
    *(_OWORD *)(v29 + 16) = v35;
    goto LABEL_30;
  }
  if (v32 == 255)
    goto LABEL_26;
  if ((v32 & 1) == 0)
  {
LABEL_17:
    v33 = *((_QWORD *)v30 + 3);
    *(_QWORD *)(v29 + 24) = v33;
    *(_QWORD *)(v29 + 32) = *((_QWORD *)v30 + 4);
    (**(void (***)(uint64_t, char *))(v33 - 8))(v29, v30);
    *(_BYTE *)(v29 + 40) = 0;
    goto LABEL_30;
  }
LABEL_29:
  v36 = *(void **)v30;
  v37 = v36;
  *(_QWORD *)v29 = v36;
  *(_BYTE *)(v29 + 40) = 1;
LABEL_30:
  v38 = a3[10];
  v39 = (_QWORD *)((char *)a1 + v38);
  v40 = (_QWORD *)((char *)a2 + v38);
  v41 = *(_QWORD *)((char *)a2 + v38 + 24);
  if (*(_QWORD *)((char *)a1 + v38 + 24))
  {
    if (v41)
    {
      sub_23F361AD0(v39, v40);
      sub_23F361AD0(v39 + 5, v40 + 5);
      sub_23F361AD0(v39 + 10, v40 + 10);
      sub_23F361AD0(v39 + 15, v40 + 15);
      sub_23F361AD0(v39 + 20, v40 + 20);
      goto LABEL_37;
    }
    sub_23F38BB88((uint64_t)v39);
  }
  else if (v41)
  {
    v39[3] = v41;
    v39[4] = v40[4];
    (**(void (***)(uint64_t *, uint64_t *))(v41 - 8))(v39, v40);
    v42 = v40[8];
    v39[8] = v42;
    v39[9] = v40[9];
    (**(void (***)(uint64_t, uint64_t))(v42 - 8))((uint64_t)(v39 + 5), (uint64_t)(v40 + 5));
    v43 = v40[13];
    v39[13] = v43;
    v39[14] = v40[14];
    (**(void (***)(uint64_t, uint64_t))(v43 - 8))((uint64_t)(v39 + 10), (uint64_t)(v40 + 10));
    v44 = v40[18];
    v39[18] = v44;
    v39[19] = v40[19];
    (**(void (***)(uint64_t, uint64_t))(v44 - 8))((uint64_t)(v39 + 15), (uint64_t)(v40 + 15));
    v45 = v40[23];
    v39[23] = v45;
    v39[24] = v40[24];
    (**(void (***)(uint64_t, uint64_t))(v45 - 8))((uint64_t)(v39 + 20), (uint64_t)(v40 + 20));
    goto LABEL_37;
  }
  memcpy(v39, v40, 0xC8uLL);
LABEL_37:
  v46 = a3[11];
  v47 = (uint64_t)a1 + v46;
  v48 = (char *)a2 + v46;
  v49 = *(_QWORD *)((char *)a1 + v46 + 104);
  v50 = *(_QWORD *)((char *)a2 + v46 + 104);
  if (v49)
  {
    if (v50)
    {
      v51 = *((_QWORD *)v48 + 3);
      if (*(_QWORD *)(v47 + 24))
      {
        if (v51)
        {
          sub_23F361AD0((uint64_t *)v47, (uint64_t *)v48);
          goto LABEL_51;
        }
        _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v47);
      }
      else if (v51)
      {
        *(_QWORD *)(v47 + 24) = v51;
        *(_QWORD *)(v47 + 32) = *((_QWORD *)v48 + 4);
        (**(void (***)(uint64_t, char *))(v51 - 8))(v47, v48);
        goto LABEL_51;
      }
      v53 = *(_OWORD *)v48;
      v54 = *((_OWORD *)v48 + 1);
      *(_QWORD *)(v47 + 32) = *((_QWORD *)v48 + 4);
      *(_OWORD *)v47 = v53;
      *(_OWORD *)(v47 + 16) = v54;
LABEL_51:
      v55 = *((_QWORD *)v48 + 8);
      if (*(_QWORD *)(v47 + 64))
      {
        if (v55)
        {
          sub_23F361AD0((uint64_t *)(v47 + 40), (uint64_t *)v48 + 5);
LABEL_61:
          sub_23F361AD0((uint64_t *)(v47 + 80), (uint64_t *)v48 + 10);
          sub_23F361AD0((uint64_t *)(v47 + 120), (uint64_t *)v48 + 15);
          sub_23F361AD0((uint64_t *)(v47 + 160), (uint64_t *)v48 + 20);
          sub_23F361AD0((uint64_t *)(v47 + 200), (uint64_t *)v48 + 25);
          sub_23F361AD0((uint64_t *)(v47 + 240), (uint64_t *)v48 + 30);
          sub_23F361AD0((uint64_t *)(v47 + 280), (uint64_t *)v48 + 35);
          sub_23F361AD0((uint64_t *)(v47 + 320), (uint64_t *)v48 + 40);
          goto LABEL_64;
        }
        _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v47 + 40);
      }
      else if (v55)
      {
        *(_QWORD *)(v47 + 64) = v55;
        *(_QWORD *)(v47 + 72) = *((_QWORD *)v48 + 9);
        (**(void (***)(uint64_t, uint64_t))(v55 - 8))(v47 + 40, (uint64_t)(v48 + 40));
        goto LABEL_61;
      }
      v61 = *(_OWORD *)(v48 + 40);
      v62 = *(_OWORD *)(v48 + 56);
      *(_QWORD *)(v47 + 72) = *((_QWORD *)v48 + 9);
      *(_OWORD *)(v47 + 40) = v61;
      *(_OWORD *)(v47 + 56) = v62;
      goto LABEL_61;
    }
    sub_23F38BBBC(v47);
LABEL_46:
    memcpy((void *)v47, v48, 0x168uLL);
    goto LABEL_64;
  }
  if (!v50)
    goto LABEL_46;
  v52 = *((_QWORD *)v48 + 3);
  if (v52)
  {
    *(_QWORD *)(v47 + 24) = v52;
    *(_QWORD *)(v47 + 32) = *((_QWORD *)v48 + 4);
    (**(void (***)(uint64_t, char *))(v52 - 8))(v47, v48);
  }
  else
  {
    v56 = *(_OWORD *)v48;
    v57 = *((_OWORD *)v48 + 1);
    *(_QWORD *)(v47 + 32) = *((_QWORD *)v48 + 4);
    *(_OWORD *)v47 = v56;
    *(_OWORD *)(v47 + 16) = v57;
  }
  v58 = (_OWORD *)(v47 + 40);
  v59 = (__int128 *)(v48 + 40);
  v60 = *((_QWORD *)v48 + 8);
  if (v60)
  {
    *(_QWORD *)(v47 + 64) = v60;
    *(_QWORD *)(v47 + 72) = *((_QWORD *)v48 + 9);
    (**(void (***)(_OWORD *, __int128 *))(v60 - 8))(v58, v59);
  }
  else
  {
    v63 = *v59;
    v64 = *(_OWORD *)(v48 + 56);
    *(_QWORD *)(v47 + 72) = *((_QWORD *)v48 + 9);
    *v58 = v63;
    *(_OWORD *)(v47 + 56) = v64;
  }
  v65 = *((_QWORD *)v48 + 13);
  *(_QWORD *)(v47 + 104) = v65;
  *(_QWORD *)(v47 + 112) = *((_QWORD *)v48 + 14);
  (**(void (***)(uint64_t, uint64_t))(v65 - 8))(v47 + 80, (uint64_t)(v48 + 80));
  v66 = *((_QWORD *)v48 + 18);
  *(_QWORD *)(v47 + 144) = v66;
  *(_QWORD *)(v47 + 152) = *((_QWORD *)v48 + 19);
  (**(void (***)(uint64_t, uint64_t))(v66 - 8))(v47 + 120, (uint64_t)(v48 + 120));
  v67 = *((_QWORD *)v48 + 23);
  *(_QWORD *)(v47 + 184) = v67;
  *(_QWORD *)(v47 + 192) = *((_QWORD *)v48 + 24);
  (**(void (***)(uint64_t, uint64_t))(v67 - 8))(v47 + 160, (uint64_t)(v48 + 160));
  v68 = *((_QWORD *)v48 + 28);
  *(_QWORD *)(v47 + 224) = v68;
  *(_QWORD *)(v47 + 232) = *((_QWORD *)v48 + 29);
  (**(void (***)(uint64_t, uint64_t))(v68 - 8))(v47 + 200, (uint64_t)(v48 + 200));
  v69 = *((_QWORD *)v48 + 33);
  *(_QWORD *)(v47 + 264) = v69;
  *(_QWORD *)(v47 + 272) = *((_QWORD *)v48 + 34);
  (**(void (***)(uint64_t, uint64_t))(v69 - 8))(v47 + 240, (uint64_t)(v48 + 240));
  v70 = *((_QWORD *)v48 + 38);
  *(_QWORD *)(v47 + 304) = v70;
  *(_QWORD *)(v47 + 312) = *((_QWORD *)v48 + 39);
  (**(void (***)(uint64_t, uint64_t))(v70 - 8))(v47 + 280, (uint64_t)(v48 + 280));
  v71 = *((_QWORD *)v48 + 43);
  *(_QWORD *)(v47 + 344) = v71;
  *(_QWORD *)(v47 + 352) = *((_QWORD *)v48 + 44);
  (**(void (***)(uint64_t, uint64_t))(v71 - 8))(v47 + 320, (uint64_t)(v48 + 320));
LABEL_64:
  v72 = a3[12];
  v73 = (uint64_t)a1 + v72;
  v74 = (char *)a2 + v72;
  v75 = *((unsigned __int8 *)a1 + v72 + 40);
  v76 = *((unsigned __int8 *)a2 + v72 + 40);
  if (v75 == 255)
  {
    if (v76 == 255)
    {
      v79 = *(_OWORD *)v74;
      v80 = *((_OWORD *)v74 + 1);
      *(_OWORD *)(v73 + 25) = *(_OWORD *)(v74 + 25);
      *(_OWORD *)v73 = v79;
      *(_OWORD *)(v73 + 16) = v80;
      goto LABEL_74;
    }
    if ((v76 & 1) != 0)
      goto LABEL_71;
LABEL_73:
    v83 = *((_QWORD *)v74 + 3);
    *(_QWORD *)(v73 + 24) = v83;
    *(_QWORD *)(v73 + 32) = *((_QWORD *)v74 + 4);
    (**(void (***)(uint64_t, char *))(v83 - 8))(v73, v74);
    *(_BYTE *)(v73 + 40) = 0;
    goto LABEL_74;
  }
  if (v76 == 255)
  {
    sub_23F3625D8(v73, &qword_256E705E8);
    v77 = *(_OWORD *)(v74 + 25);
    v78 = *((_OWORD *)v74 + 1);
    *(_OWORD *)v73 = *(_OWORD *)v74;
    *(_OWORD *)(v73 + 16) = v78;
    *(_OWORD *)(v73 + 25) = v77;
    goto LABEL_74;
  }
  if (a1 != a2)
  {
    sub_23F3625D8(v73, &qword_256E705E8);
    if ((v74[40] & 1) != 0)
    {
LABEL_71:
      v81 = *(void **)v74;
      v82 = v81;
      *(_QWORD *)v73 = v81;
      *(_BYTE *)(v73 + 40) = 1;
      goto LABEL_74;
    }
    goto LABEL_73;
  }
LABEL_74:
  v84 = a3[13];
  v85 = (uint64_t)a1 + v84;
  v86 = (_QWORD *)((char *)a2 + v84);
  v87 = *(_QWORD *)((char *)a2 + v84 + 24);
  if (*(_QWORD *)((char *)a1 + v84 + 24))
  {
    if (v87)
    {
      sub_23F361AD0((uint64_t *)v85, v86);
      goto LABEL_81;
    }
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v85);
  }
  else if (v87)
  {
    *(_QWORD *)(v85 + 24) = v87;
    *(_QWORD *)(v85 + 32) = v86[4];
    (**(void (***)(uint64_t, char *))(v87 - 8))(v85, (char *)v86);
    goto LABEL_81;
  }
  v88 = *(_OWORD *)v86;
  v89 = *((_OWORD *)v86 + 1);
  *(_QWORD *)(v85 + 32) = v86[4];
  *(_OWORD *)v85 = v88;
  *(_OWORD *)(v85 + 16) = v89;
LABEL_81:
  v90 = a3[14];
  v91 = (uint64_t)a1 + v90;
  v92 = (char *)a2 + v90;
  v93 = *((unsigned __int8 *)a1 + v90 + 40);
  v94 = v92[40];
  if (v93 != 255)
  {
    if (v94 != 255)
    {
      if (a1 == a2)
        goto LABEL_96;
      if ((v93 & 1) != 0)

      else
        _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v91);
      if ((v92[40] & 1) == 0)
        goto LABEL_84;
      goto LABEL_95;
    }
    if ((v93 & 1) != 0)

    else
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v91);
LABEL_92:
    v96 = *(_OWORD *)v92;
    v97 = *((_OWORD *)v92 + 1);
    *(_OWORD *)(v91 + 25) = *(_OWORD *)(v92 + 25);
    *(_OWORD *)v91 = v96;
    *(_OWORD *)(v91 + 16) = v97;
    goto LABEL_96;
  }
  if (v94 == 255)
    goto LABEL_92;
  if ((v94 & 1) == 0)
  {
LABEL_84:
    v95 = *((_QWORD *)v92 + 3);
    *(_QWORD *)(v91 + 24) = v95;
    *(_QWORD *)(v91 + 32) = *((_QWORD *)v92 + 4);
    (**(void (***)(uint64_t, char *))(v95 - 8))(v91, v92);
    *(_BYTE *)(v91 + 40) = 0;
    goto LABEL_96;
  }
LABEL_95:
  v98 = *(void **)v92;
  v99 = v98;
  *(_QWORD *)v91 = v98;
  *(_BYTE *)(v91 + 40) = 1;
LABEL_96:
  v100 = a3[15];
  v101 = (uint64_t)a1 + v100;
  v102 = (char *)a2 + v100;
  v103 = *((unsigned __int8 *)a1 + v100 + 40);
  v104 = *((unsigned __int8 *)a2 + v100 + 40);
  if (v103 == 255)
  {
    if (v104 == 255)
    {
      v107 = *(_OWORD *)v102;
      v108 = *((_OWORD *)v102 + 1);
      *(_OWORD *)(v101 + 25) = *(_OWORD *)(v102 + 25);
      *(_OWORD *)v101 = v107;
      *(_OWORD *)(v101 + 16) = v108;
      goto LABEL_106;
    }
    if ((v104 & 1) != 0)
      goto LABEL_103;
LABEL_105:
    v111 = *((_QWORD *)v102 + 3);
    *(_QWORD *)(v101 + 24) = v111;
    *(_QWORD *)(v101 + 32) = *((_QWORD *)v102 + 4);
    (**(void (***)(uint64_t, char *))(v111 - 8))(v101, v102);
    *(_BYTE *)(v101 + 40) = 0;
    goto LABEL_106;
  }
  if (v104 == 255)
  {
    sub_23F3625D8(v101, &qword_256E705F0);
    v105 = *(_OWORD *)(v102 + 25);
    v106 = *((_OWORD *)v102 + 1);
    *(_OWORD *)v101 = *(_OWORD *)v102;
    *(_OWORD *)(v101 + 16) = v106;
    *(_OWORD *)(v101 + 25) = v105;
    goto LABEL_106;
  }
  if (a1 != a2)
  {
    sub_23F3625D8(v101, &qword_256E705F0);
    if ((v102[40] & 1) != 0)
    {
LABEL_103:
      v109 = *(void **)v102;
      v110 = v109;
      *(_QWORD *)v101 = v109;
      *(_BYTE *)(v101 + 40) = 1;
      goto LABEL_106;
    }
    goto LABEL_105;
  }
LABEL_106:
  v112 = a3[16];
  v113 = (uint64_t)a1 + v112;
  v114 = (char *)a2 + v112;
  v115 = *((unsigned __int8 *)a1 + v112 + 40);
  v116 = *((unsigned __int8 *)a2 + v112 + 40);
  if (v115 == 255)
  {
    if (v116 == 255)
    {
      v119 = *(_OWORD *)v114;
      v120 = *((_OWORD *)v114 + 1);
      *(_OWORD *)(v113 + 25) = *(_OWORD *)(v114 + 25);
      *(_OWORD *)v113 = v119;
      *(_OWORD *)(v113 + 16) = v120;
      goto LABEL_116;
    }
    if ((v116 & 1) != 0)
      goto LABEL_113;
LABEL_115:
    v123 = *((_QWORD *)v114 + 3);
    *(_QWORD *)(v113 + 24) = v123;
    *(_QWORD *)(v113 + 32) = *((_QWORD *)v114 + 4);
    (**(void (***)(uint64_t, char *))(v123 - 8))(v113, v114);
    *(_BYTE *)(v113 + 40) = 0;
    goto LABEL_116;
  }
  if (v116 == 255)
  {
    sub_23F3625D8(v113, &qword_256E705F8);
    v117 = *(_OWORD *)(v114 + 25);
    v118 = *((_OWORD *)v114 + 1);
    *(_OWORD *)v113 = *(_OWORD *)v114;
    *(_OWORD *)(v113 + 16) = v118;
    *(_OWORD *)(v113 + 25) = v117;
    goto LABEL_116;
  }
  if (a1 != a2)
  {
    sub_23F3625D8(v113, &qword_256E705F8);
    if ((v114[40] & 1) != 0)
    {
LABEL_113:
      v121 = *(void **)v114;
      v122 = v121;
      *(_QWORD *)v113 = v121;
      *(_BYTE *)(v113 + 40) = 1;
      goto LABEL_116;
    }
    goto LABEL_115;
  }
LABEL_116:
  v124 = a3[17];
  v125 = (uint64_t)a1 + v124;
  v126 = (char *)a2 + v124;
  v127 = *((unsigned __int8 *)a1 + v124 + 40);
  v128 = *((unsigned __int8 *)a2 + v124 + 40);
  if (v127 == 255)
  {
    if (v128 == 255)
    {
      v131 = *(_OWORD *)v126;
      v132 = *((_OWORD *)v126 + 1);
      *(_OWORD *)(v125 + 25) = *(_OWORD *)(v126 + 25);
      *(_OWORD *)v125 = v131;
      *(_OWORD *)(v125 + 16) = v132;
      return a1;
    }
    if ((v128 & 1) != 0)
    {
LABEL_123:
      v133 = *(_QWORD *)v126;
      v134 = *(id *)v126;
      *(_QWORD *)v125 = v133;
      *(_BYTE *)(v125 + 40) = 1;
      return a1;
    }
LABEL_125:
    v135 = *((_QWORD *)v126 + 3);
    *(_QWORD *)(v125 + 24) = v135;
    *(_QWORD *)(v125 + 32) = *((_QWORD *)v126 + 4);
    (**(void (***)(uint64_t, char *))(v135 - 8))(v125, v126);
    *(_BYTE *)(v125 + 40) = 0;
    return a1;
  }
  if (v128 != 255)
  {
    if (a1 == a2)
      return a1;
    sub_23F3625D8(v125, &qword_256E70600);
    if ((v126[40] & 1) != 0)
      goto LABEL_123;
    goto LABEL_125;
  }
  sub_23F3625D8(v125, &qword_256E70600);
  v129 = *(_OWORD *)(v126 + 25);
  v130 = *((_OWORD *)v126 + 1);
  *(_OWORD *)v125 = *(_OWORD *)v126;
  *(_OWORD *)(v125 + 16) = v130;
  *(_OWORD *)(v125 + 25) = v129;
  return a1;
}

uint64_t sub_23F38BB88(uint64_t a1)
{
  destroy for PromptRenderer(a1);
  return a1;
}

uint64_t sub_23F38BBBC(uint64_t a1)
{
  sub_23F406E98(a1);
  return a1;
}

_OWORD *sub_23F38BBF0(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __int128 v23;
  __int128 v24;
  _OWORD *v25;
  _OWORD *v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD *v30;
  _OWORD *v31;
  __int128 v32;
  char *v33;
  char *v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD *v38;
  _OWORD *v39;
  __int128 v40;
  _OWORD *v41;
  __int128 *v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD *v47;
  _OWORD *v48;
  __int128 v49;
  _OWORD *v50;
  _OWORD *v51;
  __int128 v52;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F6170CC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_23F61B32C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = a3[7];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_23F61B104();
  if (sub_23F36195C((uint64_t)v16, 1, v17))
  {
    v18 = sub_23F35D2E8(&qword_256E705E0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
    sub_23F36196C((uint64_t)v15, 0, 1, v17);
  }
  v19 = a3[8];
  v20 = a3[9];
  v21 = (char *)a1 + v19;
  v22 = (char *)a2 + v19;
  v23 = *(_OWORD *)v22;
  v24 = *((_OWORD *)v22 + 1);
  *((_QWORD *)v21 + 4) = *((_QWORD *)v22 + 4);
  *(_OWORD *)v21 = v23;
  *((_OWORD *)v21 + 1) = v24;
  v25 = (_OWORD *)((char *)a1 + v20);
  v26 = (_OWORD *)((char *)a2 + v20);
  *(_OWORD *)((char *)v25 + 25) = *(_OWORD *)((char *)v26 + 25);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  memcpy((char *)a1 + a3[10], (char *)a2 + a3[10], 0xC8uLL);
  memcpy((char *)a1 + a3[11], (char *)a2 + a3[11], 0x168uLL);
  v28 = a3[12];
  v29 = a3[13];
  v30 = (_OWORD *)((char *)a1 + v28);
  v31 = (_OWORD *)((char *)a2 + v28);
  *(_OWORD *)((char *)v30 + 25) = *(_OWORD *)((char *)v31 + 25);
  v32 = v31[1];
  *v30 = *v31;
  v30[1] = v32;
  v33 = (char *)a1 + v29;
  v34 = (char *)a2 + v29;
  *((_QWORD *)v33 + 4) = *((_QWORD *)v34 + 4);
  v35 = *((_OWORD *)v34 + 1);
  *(_OWORD *)v33 = *(_OWORD *)v34;
  *((_OWORD *)v33 + 1) = v35;
  v36 = a3[14];
  v37 = a3[15];
  v38 = (_OWORD *)((char *)a1 + v36);
  v39 = (_OWORD *)((char *)a2 + v36);
  v40 = v39[1];
  *v38 = *v39;
  v38[1] = v40;
  *(_OWORD *)((char *)v38 + 25) = *(_OWORD *)((char *)v39 + 25);
  v41 = (_OWORD *)((char *)a1 + v37);
  v42 = (_OWORD *)((char *)a2 + v37);
  v43 = *v42;
  v44 = v42[1];
  *(_OWORD *)((char *)v41 + 25) = *(__int128 *)((char *)v42 + 25);
  *v41 = v43;
  v41[1] = v44;
  v45 = a3[16];
  v46 = a3[17];
  v47 = (_OWORD *)((char *)a1 + v45);
  v48 = (_OWORD *)((char *)a2 + v45);
  *(_OWORD *)((char *)v47 + 25) = *(_OWORD *)((char *)v48 + 25);
  v49 = v48[1];
  *v47 = *v48;
  v47[1] = v49;
  v50 = (_OWORD *)((char *)a1 + v46);
  v51 = (_OWORD *)((char *)a2 + v46);
  v52 = v51[1];
  *v50 = *v51;
  v50[1] = v52;
  *(_OWORD *)((char *)v50 + 25) = *(_OWORD *)((char *)v51 + 25);
  return a1;
}

_QWORD *sub_23F38BDFC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  int v30;
  __int128 v31;
  uint64_t v32;
  _OWORD *v33;
  _OWORD *v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  _OWORD *v39;
  _OWORD *v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  _OWORD *v49;
  char *v50;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  int v60;
  __int128 v61;
  uint64_t v62;
  _OWORD *v63;
  char *v64;
  __int128 v66;
  uint64_t v67;
  _OWORD *v68;
  char *v69;
  __int128 v71;
  uint64_t v72;
  _OWORD *v73;
  char *v74;
  __int128 v76;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23F6170CC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_23F61B32C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_23F61B104();
  v19 = sub_23F36195C((uint64_t)v16, 1, v18);
  v20 = sub_23F36195C((uint64_t)v17, 1, v18);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
      sub_23F36196C((uint64_t)v16, 0, 1, v18);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v21 = *(_QWORD *)(v18 - 8);
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v16, v18);
LABEL_6:
    v22 = sub_23F35D2E8(&qword_256E705E0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v21 + 40))(v16, v17, v18);
LABEL_7:
  v23 = a3[8];
  v24 = (uint64_t)a1 + v23;
  v25 = (char *)a2 + v23;
  if (*(_QWORD *)((char *)a1 + v23 + 24))
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v24);
  v26 = *((_OWORD *)v25 + 1);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *(_OWORD *)(v24 + 16) = v26;
  *(_QWORD *)(v24 + 32) = *((_QWORD *)v25 + 4);
  v27 = a3[9];
  v28 = (uint64_t)a1 + v27;
  v29 = (char *)a2 + v27;
  v30 = *((unsigned __int8 *)a1 + v27 + 40);
  if (v30 == 255)
    goto LABEL_15;
  if (v29[40] == 255 || a1 != a2)
  {
    if ((v30 & 1) != 0)

    else
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v28);
LABEL_15:
    v31 = *((_OWORD *)v29 + 1);
    *(_OWORD *)v28 = *(_OWORD *)v29;
    *(_OWORD *)(v28 + 16) = v31;
    *(_OWORD *)(v28 + 25) = *(_OWORD *)(v29 + 25);
  }
  v32 = a3[10];
  v33 = (_OWORD *)((char *)a1 + v32);
  v34 = (_OWORD *)((char *)a2 + v32);
  if (*(_QWORD *)((char *)a1 + v32 + 24))
  {
    if (*((_QWORD *)v34 + 3))
    {
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v33);
      v35 = v34[1];
      *v33 = *v34;
      v33[1] = v35;
      *((_QWORD *)v33 + 4) = *((_QWORD *)v34 + 4);
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v33 + 40);
      *(_OWORD *)((char *)v33 + 40) = *(_OWORD *)((char *)v34 + 40);
      *(_OWORD *)((char *)v33 + 56) = *(_OWORD *)((char *)v34 + 56);
      *((_QWORD *)v33 + 9) = *((_QWORD *)v34 + 9);
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)(v33 + 5));
      v36 = v34[6];
      v33[5] = v34[5];
      v33[6] = v36;
      *((_QWORD *)v33 + 14) = *((_QWORD *)v34 + 14);
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v33 + 120);
      *(_OWORD *)((char *)v33 + 120) = *(_OWORD *)((char *)v34 + 120);
      *(_OWORD *)((char *)v33 + 136) = *(_OWORD *)((char *)v34 + 136);
      *((_QWORD *)v33 + 19) = *((_QWORD *)v34 + 19);
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)(v33 + 10));
      v37 = v34[11];
      v33[10] = v34[10];
      v33[11] = v37;
      *((_QWORD *)v33 + 24) = *((_QWORD *)v34 + 24);
      goto LABEL_21;
    }
    sub_23F38BB88((uint64_t)v33);
  }
  memcpy(v33, v34, 0xC8uLL);
LABEL_21:
  v38 = a3[11];
  v39 = (_OWORD *)((char *)a1 + v38);
  v40 = (_OWORD *)((char *)a2 + v38);
  if (!*(_QWORD *)((char *)a1 + v38 + 104))
  {
LABEL_29:
    memcpy(v39, v40, 0x168uLL);
    goto LABEL_30;
  }
  if (!*((_QWORD *)v40 + 13))
  {
    sub_23F38BBBC((uint64_t)v39);
    goto LABEL_29;
  }
  if (*((_QWORD *)v39 + 3))
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v39);
  v41 = v40[1];
  *v39 = *v40;
  v39[1] = v41;
  *((_QWORD *)v39 + 4) = *((_QWORD *)v40 + 4);
  if (*((_QWORD *)v39 + 8))
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v39 + 40);
  v42 = *(_OWORD *)((char *)v40 + 56);
  *(_OWORD *)((char *)v39 + 40) = *(_OWORD *)((char *)v40 + 40);
  *(_OWORD *)((char *)v39 + 56) = v42;
  *((_QWORD *)v39 + 9) = *((_QWORD *)v40 + 9);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)(v39 + 5));
  v43 = v40[6];
  v39[5] = v40[5];
  v39[6] = v43;
  *((_QWORD *)v39 + 14) = *((_QWORD *)v40 + 14);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v39 + 120);
  *(_OWORD *)((char *)v39 + 120) = *(_OWORD *)((char *)v40 + 120);
  *(_OWORD *)((char *)v39 + 136) = *(_OWORD *)((char *)v40 + 136);
  *((_QWORD *)v39 + 19) = *((_QWORD *)v40 + 19);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)(v39 + 10));
  v44 = v40[11];
  v39[10] = v40[10];
  v39[11] = v44;
  *((_QWORD *)v39 + 24) = *((_QWORD *)v40 + 24);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v39 + 200);
  *(_OWORD *)((char *)v39 + 200) = *(_OWORD *)((char *)v40 + 200);
  *(_OWORD *)((char *)v39 + 216) = *(_OWORD *)((char *)v40 + 216);
  *((_QWORD *)v39 + 29) = *((_QWORD *)v40 + 29);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)(v39 + 15));
  v45 = v40[16];
  v39[15] = v40[15];
  v39[16] = v45;
  *((_QWORD *)v39 + 34) = *((_QWORD *)v40 + 34);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v39 + 280);
  v46 = *(_OWORD *)((char *)v40 + 296);
  *(_OWORD *)((char *)v39 + 280) = *(_OWORD *)((char *)v40 + 280);
  *(_OWORD *)((char *)v39 + 296) = v46;
  *((_QWORD *)v39 + 39) = *((_QWORD *)v40 + 39);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)(v39 + 20));
  v47 = v40[21];
  v39[20] = v40[20];
  v39[21] = v47;
  *((_QWORD *)v39 + 44) = *((_QWORD *)v40 + 44);
LABEL_30:
  v48 = a3[12];
  v49 = (_OWORD *)((char *)a1 + v48);
  v50 = (char *)a2 + v48;
  if (*((unsigned __int8 *)a1 + v48 + 40) == 255)
  {
LABEL_36:
    v52 = *((_OWORD *)v50 + 1);
    *v49 = *(_OWORD *)v50;
    v49[1] = v52;
    *(_OWORD *)((char *)v49 + 25) = *(_OWORD *)(v50 + 25);
    goto LABEL_37;
  }
  if (v50[40] == 255 || a1 != a2)
  {
    sub_23F3625D8((uint64_t)v49, &qword_256E705E8);
    goto LABEL_36;
  }
LABEL_37:
  v53 = a3[13];
  v54 = (uint64_t)a1 + v53;
  v55 = (char *)a2 + v53;
  if (*(_QWORD *)((char *)a1 + v53 + 24))
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v54);
  v56 = *((_OWORD *)v55 + 1);
  *(_OWORD *)v54 = *(_OWORD *)v55;
  *(_OWORD *)(v54 + 16) = v56;
  *(_QWORD *)(v54 + 32) = *((_QWORD *)v55 + 4);
  v57 = a3[14];
  v58 = (uint64_t)a1 + v57;
  v59 = (char *)a2 + v57;
  v60 = *((unsigned __int8 *)a1 + v57 + 40);
  if (v60 == 255)
    goto LABEL_45;
  if (v59[40] == 255 || a1 != a2)
  {
    if ((v60 & 1) != 0)

    else
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v58);
LABEL_45:
    v61 = *((_OWORD *)v59 + 1);
    *(_OWORD *)v58 = *(_OWORD *)v59;
    *(_OWORD *)(v58 + 16) = v61;
    *(_OWORD *)(v58 + 25) = *(_OWORD *)(v59 + 25);
  }
  v62 = a3[15];
  v63 = (_OWORD *)((char *)a1 + v62);
  v64 = (char *)a2 + v62;
  if (*((unsigned __int8 *)a1 + v62 + 40) == 255)
  {
LABEL_52:
    v66 = *((_OWORD *)v64 + 1);
    *v63 = *(_OWORD *)v64;
    v63[1] = v66;
    *(_OWORD *)((char *)v63 + 25) = *(_OWORD *)(v64 + 25);
    goto LABEL_53;
  }
  if (v64[40] == 255 || a1 != a2)
  {
    sub_23F3625D8((uint64_t)v63, &qword_256E705F0);
    goto LABEL_52;
  }
LABEL_53:
  v67 = a3[16];
  v68 = (_OWORD *)((char *)a1 + v67);
  v69 = (char *)a2 + v67;
  if (*((unsigned __int8 *)a1 + v67 + 40) == 255)
  {
LABEL_59:
    v71 = *((_OWORD *)v69 + 1);
    *v68 = *(_OWORD *)v69;
    v68[1] = v71;
    *(_OWORD *)((char *)v68 + 25) = *(_OWORD *)(v69 + 25);
    goto LABEL_60;
  }
  if (v69[40] == 255 || a1 != a2)
  {
    sub_23F3625D8((uint64_t)v68, &qword_256E705F8);
    goto LABEL_59;
  }
LABEL_60:
  v72 = a3[17];
  v73 = (_OWORD *)((char *)a1 + v72);
  v74 = (char *)a2 + v72;
  if (*((unsigned __int8 *)a1 + v72 + 40) == 255)
  {
LABEL_66:
    v76 = *((_OWORD *)v74 + 1);
    *v73 = *(_OWORD *)v74;
    v73[1] = v76;
    *(_OWORD *)((char *)v73 + 25) = *(_OWORD *)(v74 + 25);
    return a1;
  }
  if (v74[40] == 255 || a1 != a2)
  {
    sub_23F3625D8((uint64_t)v73, &qword_256E70600);
    goto LABEL_66;
  }
  return a1;
}

uint64_t sub_23F38C388()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F38C394(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23F38F984();
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == (_DWORD)a2)
    {
      v9 = v8;
      v10 = a3[5];
    }
    else
    {
      v11 = sub_23F384B34();
      if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == (_DWORD)a2)
      {
        v9 = v11;
        v10 = a3[6];
      }
      else
      {
        v9 = sub_23F35D2E8(&qword_256E705E0);
        v10 = a3[7];
      }
    }
    return sub_23F36195C(a1 + v10, a2, v9);
  }
}

uint64_t sub_23F38C44C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F38C458(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_23F38F984();
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = a4[5];
    }
    else
    {
      v11 = sub_23F384B34();
      if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == a3)
      {
        v9 = v11;
        v10 = a4[6];
      }
      else
      {
        v9 = sub_23F35D2E8(&qword_256E705E0);
        v10 = a4[7];
      }
    }
    return sub_23F36196C(v5 + v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s15AlphaComponentsVMa()
{
  uint64_t result;

  result = qword_256E70660;
  if (!qword_256E70660)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23F38C544()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23F6170CC();
  if (v0 <= 0x3F)
  {
    sub_23F61B32C();
    if (v1 <= 0x3F)
    {
      sub_23F38C624();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void sub_23F38C624()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256E70670)
  {
    sub_23F61B104();
    v0 = sub_23F61C730();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256E70670);
  }
}

uint64_t sub_23F38C678()
{
  return MEMORY[0x24BEE0D70];
}

void sub_23F38C684()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  _UNKNOWN **v9;

  v2 = sub_23F38F8E0();
  v3 = v1 + *(int *)(v2 + 32);
  sub_23F38F124(v3, (uint64_t)&v7, &qword_256E70738);
  if (!v8)
  {
    sub_23F3625D8((uint64_t)&v7, &qword_256E70738);
    v8 = type metadata accessor for AlphaAppNameRenderer(0);
    v9 = &off_250FD31D8;
    v4 = sub_23F36145C((uint64_t *)&v7);
    v5 = v1 + *(int *)(v2 + 20);
    v6 = sub_23F38F984();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v4, v5, v6);
    sub_23F36196C((uint64_t)v4, 0, 1, v6);
    sub_23F3625D8(v3, &qword_256E70738);
    sub_23F38FA28((uint64_t)&v7);
  }
  sub_23F362678(&v7, v0);
  sub_23F38F8EC();
}

void sub_23F38C760()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  char v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;

  v3 = v1 + *(int *)(sub_23F38F8E0() + 36);
  sub_23F38FA10();
  if (v13)
  {
    sub_23F38F9FC();
  }
  else if ((v12 & 1) != 0)
  {
    sub_23F38F9D4();
    *(_QWORD *)&v25 = v2;
    v29 = 1;
  }
  else
  {
    sub_23F38F9E0(v4, v5, v6, v7, v8, v9, v10, v11, v25);
    v29 = 0;
  }
  sub_23F38F938();
  if (v13)
  {
    v22 = sub_23F38FA50();
    sub_23F38D278(v22, v23);
    sub_23F38FA10();
    if (!v13)
    {
      if ((v24 & 1) != 0)

      else
        sub_23F38FA48();
    }
    if ((*(_BYTE *)(v0 + 40) & 1) != 0)
    {
      sub_23F38FA30();
      *(_QWORD *)v3 = v0;
      *(_BYTE *)(v3 + 40) = 1;
    }
    else
    {
      sub_23F38FA28(v0);
      *(_BYTE *)(v3 + 40) = 0;
    }
  }
  else
  {
    sub_23F38FA5C(v14, v15, v16, v17, v18, v19, v20, v21, v25, v26, v27, v28, v29);
  }
  sub_23F38F98C();
}

void sub_23F38C814(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint8_t *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t *v44;
  BOOL v45;
  char v46;
  char *v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  _QWORD *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint8_t *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint8_t *v74;
  uint64_t v75;

  v65 = a1;
  v72 = a3;
  v5 = sub_23F619E98();
  v62 = *(_QWORD *)(v5 - 8);
  v63 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v61 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F35D2E8(&qword_256E705E0);
  MEMORY[0x24BDAC7A8](v7);
  v67 = (uint64_t)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = type metadata accessor for FullPlannerGMSClientConfiguration(0);
  v9 = MEMORY[0x24BDAC7A8](v66);
  v68 = (uint64_t)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v69 = (uint64_t)&v58 - v11;
  v12 = sub_23F35D2E8(&qword_256E70760);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = sub_23F616E68();
  v71 = *(_QWORD *)(v75 - 8);
  v15 = MEMORY[0x24BDAC7A8](v75);
  v64 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v70 = (char *)&v58 - v17;
  v18 = type metadata accessor for FullPlannerPreferences();
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256E6EE90 != -1)
    swift_once();
  v21 = sub_23F361498(v18, (uint64_t)qword_256E7FE90);
  swift_beginAccess();
  sub_23F38F530(v21, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  sub_23F35D2E8(&qword_256E6F5A8);
  sub_23F617C48();
  v22 = v73;
  sub_23F3663AC((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  if (v22 == 1)
  {
    v23 = sub_23F35D2E8(&qword_256E70780);
    v24 = v72;
    v72[3] = v23;
    sub_23F389844(&qword_256E70788, &qword_256E70780, (uint64_t)&unk_23F630E08);
    v24[4] = v25;
    return;
  }
  v59 = v3;
  v60 = a2;
  sub_23F38F530(v21, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  sub_23F35D2E8(&qword_256E6F5A0);
  sub_23F617C48();
  sub_23F3663AC((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  sub_23F616E38();
  swift_bridgeObjectRelease();
  v26 = v75;
  if (sub_23F36195C((uint64_t)v14, 1, v75) == 1)
  {
    sub_23F3625D8((uint64_t)v14, &qword_256E70760);
    sub_23F38F04C();
    v27 = swift_allocError();
    *v28 = 0xD000000000000019;
    v28[1] = 0x800000023F634B20;
    swift_willThrow();
LABEL_14:
    v44 = v60;
LABEL_15:
    *v44 = v27;
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v70, v14, v26);
  sub_23F38F530(v21, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  sub_23F617C48();
  v30 = v73;
  v29 = v74;
  sub_23F3663AC((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  v31 = v30 == 0x6E65476E656B6F74 && v29 == (uint8_t *)0xEE00726F74617265;
  if (v31 || (sub_23F61CC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v32 = _s15AlphaComponentsVMa();
    v33 = v67;
    sub_23F38F124(v65 + *(int *)(v32 + 28), v67, &qword_256E705E0);
    sub_23F38F530(v21, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
    sub_23F617C48();
    v34 = v73;
    sub_23F3663AC((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
    sub_23F38F530(v21, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
    sub_23F617C48();
    v35 = v73;
    sub_23F3663AC((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
    v36 = v69;
    sub_23F38F8A4(v33, v69, &qword_256E705E0);
    v37 = v66;
    *(_BYTE *)(v36 + *(int *)(v66 + 20)) = v34;
    *(_BYTE *)(v36 + *(int *)(v37 + 24)) = v35;
    v38 = v68;
    sub_23F38F530(v36, v68, type metadata accessor for FullPlannerGMSClientConfiguration);
    v39 = sub_23F35D2E8(&qword_256E70770);
    v40 = v72;
    v72[3] = v39;
    sub_23F389844(&qword_256E70778, &qword_256E70770, (uint64_t)&unk_23F622390);
    v40[4] = v41;
    v42 = sub_23F36145C(v40);
    v43 = v59;
    sub_23F38D01C(v38, &qword_256E70770, (uint64_t)v42);
    v27 = v43;
    if (v43)
    {
      sub_23F3663AC(v36, type metadata accessor for FullPlannerGMSClientConfiguration);
      (*(void (**)(char *, uint64_t))(v71 + 8))(v70, v75);
      sub_23F38F0AC((uint64_t)v40);
      goto LABEL_14;
    }
    sub_23F3663AC(v36, type metadata accessor for FullPlannerGMSClientConfiguration);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v70, v75);
  }
  else
  {
    v45 = v30 == 0x65696C4370747468 && v29 == (uint8_t *)0xEA0000000000746ELL;
    v44 = v60;
    if (v45)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v46 = sub_23F61CC64();
      swift_bridgeObjectRelease();
      if ((v46 & 1) == 0)
      {
        v47 = v61;
        sub_23F619088();
        v48 = sub_23F619E8C();
        v49 = sub_23F61C628();
        if (os_log_type_enabled(v48, v49))
        {
          v50 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v50 = 0;
          MEMORY[0x242670B70](v50, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v62 + 8))(v47, v63);
        sub_23F38F04C();
        v27 = swift_allocError();
        *v51 = 0;
        v51[1] = 0;
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v71 + 8))(v70, v75);
        goto LABEL_15;
      }
    }
    v52 = v70;
    v53 = (uint64_t)v64;
    (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v64, v70, v75);
    sub_23F38F530(v21, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
    sub_23F617C48();
    v54 = v73;
    v55 = v74;
    sub_23F3663AC((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
    v56 = v72;
    v72[3] = (uint64_t)&type metadata for FullPlannerHTTPClientInterface;
    v56[4] = (uint64_t)&off_256E744C0;
    v57 = swift_allocObject();
    *v56 = v57;
    sub_23F4414E8(v53, v54, v55, v57 + 16);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v52, v75);
  }
}

uint64_t sub_23F38CFE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23F38D01C(a1, &qword_256E70770, a2);
}

uint64_t sub_23F38D000@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23F38D01C(a1, qword_256E707D8, a2);
}

uint64_t sub_23F38D01C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  __int128 v24[2];

  v7 = sub_23F35D2E8(&qword_256E70790);
  MEMORY[0x24BDAC7A8](v7);
  sub_23F38F964();
  v10 = v9 - v8;
  v11 = sub_23F35D2E8(&qword_256E70798);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v23 - v15;
  v17 = a3 + *(int *)(sub_23F35D2E8(a2) + 36);
  sub_23F617A80();
  v18 = sub_23F617A98();
  sub_23F36196C((uint64_t)v16, 0, 1, v18);
  sub_23F38F124((uint64_t)v16, (uint64_t)v14, &qword_256E70798);
  sub_23F617AC8();
  sub_23F617ABC();
  sub_23F617AA4();
  sub_23F617AB0();
  sub_23F3625D8((uint64_t)v16, &qword_256E70798);
  v19 = *MEMORY[0x24BE599E8];
  v20 = sub_23F619D24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v10, v19, v20);
  sub_23F36196C(v10, 0, 1, v20);
  sub_23F43F5CC(a1, v10, (uint64_t)v24);
  sub_23F3663AC(a1, type metadata accessor for FullPlannerGMSClientConfiguration);
  sub_23F3625D8(v10, &qword_256E70790);
  if (!v3)
    return sub_23F362678(v24, a3);
  v21 = sub_23F617AD4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v17, v21);
}

double sub_23F38D278@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  __int128 v3;
  double result;
  uint64_t v5;
  __int128 v6;
  _BYTE v7[25];

  sub_23F38C814(a1, &v5, (uint64_t *)&v6);
  v7[24] = 0;
  v3 = *(_OWORD *)v7;
  *a2 = v6;
  a2[1] = v3;
  result = *(double *)&v7[9];
  *(_OWORD *)((char *)a2 + 25) = *(_OWORD *)&v7[9];
  return result;
}

uint64_t sub_23F38D2E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  char v8;
  __int128 v9[2];
  char v10;

  sub_23F38DF64();
  if ((v8 & 1) != 0)
  {
    v2 = v7;
    sub_23F35D2E8(&qword_256E70370);
    result = swift_willThrowTypedImpl();
    *(_BYTE *)(a1 + 40) = 1;
  }
  else
  {
    sub_23F362678(&v7, (uint64_t)v9);
    v4 = sub_23F35D2E8(&qword_256E707A0);
    sub_23F389844(&qword_256E707A8, &qword_256E707A0, (uint64_t)&unk_23F622690);
    v6 = v5;
    v2 = swift_allocObject();
    sub_23F38E220();
    result = sub_23F362678(v9, v2 + 16);
    v10 = 0;
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = v6;
    *(_BYTE *)(a1 + 40) = 0;
  }
  *(_QWORD *)a1 = v2;
  return result;
}

void sub_23F38D3D8(uint64_t a1@<X0>, void (*a2)(_QWORD *__return_ptr, uint64_t, uint64_t *)@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  _QWORD v7[5];
  char v8;

  a2(v7, a1, &v6);
  v8 = 0;
  sub_23F38F8A4((uint64_t)v7, a4, a3);
}

_OWORD *sub_23F38D448()
{
  _OWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _OWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13[26];

  v2 = sub_23F38F8E0();
  v3 = (_OWORD *)(v1 + *(int *)(v2 + 40));
  sub_23F38F908(v2, v4, &qword_256E707D0, v5, v6, v7, v8, v9, v13[0]);
  if (v13[3])
    return memcpy(v0, v13, 0xC8uLL);
  sub_23F38F900((uint64_t)v13);
  v11 = sub_23F38FA50();
  sub_23F38D4D0(v11, v12);
  sub_23F38F900((uint64_t)v3);
  return sub_23F38F144(v0, v3);
}

uint64_t sub_23F38D4D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  _UNKNOWN **v32;
  __int128 v33;
  void *v34;
  _UNKNOWN **v35;
  __int128 v36;
  void *v37;
  _UNKNOWN **v38;
  __int128 v39;
  uint64_t v40;
  _UNKNOWN **v41;
  __int128 v42;
  _QWORD v43[5];
  uint64_t v44;
  void *v45;
  _UNKNOWN **v46;
  uint64_t v47;
  void *v48;
  _UNKNOWN **v49;
  uint64_t v50[5];
  uint64_t v51;
  void *v52;
  _UNKNOWN **v53;
  ValueMetadata *v54;
  _UNKNOWN **v55;
  uint64_t v56[15];
  uint64_t v57[5];
  _BYTE v58[40];
  _QWORD v59[10];
  _QWORD v60[10];
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  _QWORD v64[5];
  uint64_t v65;
  void *v66;
  _UNKNOWN **v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  _QWORD v71[5];
  uint64_t v72;
  void *v73;
  _UNKNOWN **v74;
  uint64_t v75[5];
  uint64_t v76[5];
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  _BYTE v80[24];
  void *v81;
  _UNKNOWN **v82;
  _BYTE v83[32];
  uint64_t v84;

  v29 = a2;
  v28 = type metadata accessor for AlphaRenderableToolDefinitionPromptRenderer(0);
  MEMORY[0x24BDAC7A8](v28);
  v4 = (uint64_t *)((char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for AlphaTypeIdentifierRenderer(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (uint64_t *)((char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v84 = 0;
  memset(v83, 0, sizeof(v83));
  v81 = &unk_250FD2FC8;
  v82 = &off_250FD31C0;
  sub_23F38C684();
  v7[3] = (uint64_t)&unk_250FD2FA0;
  v7[4] = (uint64_t)&off_250FD31A0;
  v8 = swift_allocObject();
  *v7 = v8;
  sub_23F38F184((uint64_t)v80, v8 + 16);
  v7[8] = (uint64_t)&unk_250FD2F20;
  v7[9] = (uint64_t)&off_250FD3190;
  v9 = swift_allocObject();
  v7[5] = v9;
  sub_23F38F1E8((uint64_t)v83, v9 + 16);
  sub_23F38C684();
  v10 = a1 + *(int *)(_s15AlphaComponentsVMa() + 24);
  v27 = v10;
  v11 = (char *)v7 + *(int *)(v5 + 28);
  v12 = sub_23F61B32C();
  v13 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  v13(v11, v10, v12);
  v76[3] = v5;
  v76[4] = (uint64_t)&off_250FD3170;
  v14 = sub_23F36145C(v76);
  sub_23F38F530((uint64_t)v7, (uint64_t)v14, type metadata accessor for AlphaTypeIdentifierRenderer);
  v77 = 0u;
  v78 = 0u;
  v79 = 0;
  v75[3] = v5;
  v75[4] = (uint64_t)&off_250FD3170;
  v15 = sub_23F36145C(v75);
  sub_23F38F530((uint64_t)v7, (uint64_t)v15, type metadata accessor for AlphaTypeIdentifierRenderer);
  v71[3] = &unk_250FD2EA8;
  v71[4] = &off_250FD3160;
  v73 = &unk_250FD2E80;
  v74 = &off_250FD3140;
  v72 = swift_allocObject();
  sub_23F38F248((uint64_t)v76, v72 + 16);
  v64[3] = &unk_250FD2E80;
  v64[4] = &off_250FD3140;
  v64[0] = swift_allocObject();
  sub_23F38F248((uint64_t)v76, v64[0] + 16);
  v66 = &unk_250FD2E00;
  v67 = &off_250FD3128;
  v65 = swift_allocObject();
  sub_23F38F288((uint64_t)v71, v65 + 16);
  v68 = 0u;
  v69 = 0u;
  v70 = 0;
  v60[3] = &unk_250FD2D78;
  v60[4] = &off_250FD3108;
  v60[0] = swift_allocObject();
  sub_23F38F2C8((uint64_t)v64, v60[0] + 16);
  v60[8] = &unk_250FD2CF8;
  v60[9] = &off_250FD30F0;
  v60[5] = swift_allocObject();
  sub_23F38C684();
  v63 = 0;
  v62 = 0u;
  v61 = 0u;
  v59[3] = &unk_250FD2C70;
  v59[4] = &off_250FD30B8;
  v59[0] = swift_allocObject();
  sub_23F38F360((uint64_t)v60, v59[0] + 16);
  sub_23F38C684();
  sub_23F38C684();
  v4[3] = (uint64_t)&unk_250FD2C70;
  v4[4] = (uint64_t)&off_250FD30B8;
  v16 = swift_allocObject();
  *v4 = v16;
  sub_23F38F360((uint64_t)v60, v16 + 16);
  v4[8] = (uint64_t)&unk_250FD2BF8;
  v4[9] = (uint64_t)&off_250FD3098;
  v4[13] = (uint64_t)&unk_250FD2BD0;
  v4[14] = (uint64_t)&off_250FD3070;
  v17 = swift_allocObject();
  v4[10] = v17;
  sub_23F38F3C0((uint64_t)v59, v17 + 16);
  v4[18] = (uint64_t)&unk_250FD3B00;
  v4[19] = (uint64_t)&off_250FD3B18;
  v18 = swift_allocObject();
  v4[15] = v18;
  sub_23F38F3FC((uint64_t)v58, v18 + 16);
  v19 = v28;
  v13((char *)v4 + *(int *)(v28 + 32), v27, v12);
  v57[3] = v5;
  v57[4] = (uint64_t)&off_250FD3170;
  v20 = sub_23F36145C(v57);
  sub_23F38F530((uint64_t)v7, (uint64_t)v20, type metadata accessor for AlphaTypeIdentifierRenderer);
  v56[3] = v5;
  v56[4] = (uint64_t)&off_250FD3170;
  v21 = sub_23F36145C(v56);
  sub_23F38F530((uint64_t)v7, (uint64_t)v21, type metadata accessor for AlphaTypeIdentifierRenderer);
  v56[8] = (uint64_t)&unk_250FD2B58;
  v56[9] = (uint64_t)&off_250FD3060;
  v56[13] = (uint64_t)&unk_250FD2B38;
  v56[14] = (uint64_t)&off_250FD3050;
  v50[3] = v5;
  v50[4] = (uint64_t)&off_250FD3170;
  v22 = sub_23F36145C(v50);
  sub_23F38F530((uint64_t)v7, (uint64_t)v22, type metadata accessor for AlphaTypeIdentifierRenderer);
  v52 = &unk_250FD2B08;
  v53 = &off_250FD3040;
  v51 = swift_allocObject();
  sub_23F38F43C((uint64_t)v56, v51 + 16);
  v54 = &type metadata for StubToolExecutionSessionWrapper;
  v55 = &off_250FDF7C0;
  v43[3] = &unk_250FD2A80;
  v43[4] = &off_250FD3030;
  v43[0] = swift_allocObject();
  sub_23F38F47C((uint64_t)v50, v43[0] + 16);
  v45 = &unk_250FD2A00;
  v46 = &off_250FD3020;
  v44 = swift_allocObject();
  sub_23F38F4B8((uint64_t)v75, v44 + 16);
  v48 = &unk_250FD2980;
  v49 = &off_250FD3010;
  v47 = swift_allocObject();
  sub_23F38F4F4((uint64_t)v57, v47 + 16);
  sub_23F38C684();
  v40 = v19;
  v41 = &off_250FD2FE8;
  v23 = sub_23F36145C((uint64_t *)&v39);
  sub_23F38F530((uint64_t)v4, (uint64_t)v23, type metadata accessor for AlphaRenderableToolDefinitionPromptRenderer);
  v37 = &unk_250FD28F8;
  v38 = &off_250FD2FD8;
  *(_QWORD *)&v36 = swift_allocObject();
  sub_23F38F580((uint64_t)v43, v36 + 16);
  v34 = &unk_250FD2E00;
  v35 = &off_250FD3128;
  *(_QWORD *)&v33 = swift_allocObject();
  sub_23F38F288((uint64_t)v71, v33 + 16);
  v31 = v5;
  v32 = &off_250FD3170;
  v24 = sub_23F36145C((uint64_t *)&v30);
  sub_23F38F5BC((uint64_t)v7, (uint64_t)v24);
  sub_23F38F600((uint64_t)v43);
  sub_23F38F634((uint64_t)v50);
  sub_23F38F668((uint64_t)v56);
  sub_23F38F69C((uint64_t)v57);
  sub_23F3663AC((uint64_t)v4, type metadata accessor for AlphaRenderableToolDefinitionPromptRenderer);
  sub_23F38F6D0((uint64_t)v58);
  sub_23F38F704((uint64_t)v59);
  sub_23F38F738((uint64_t)v60);
  sub_23F38F76C((uint64_t)v64);
  sub_23F38F7A0((uint64_t)v71);
  sub_23F38F7D4((uint64_t)v75);
  sub_23F38F808((uint64_t)v76);
  sub_23F38F83C((uint64_t)v80);
  sub_23F38F870((uint64_t)v83);
  v25 = v29;
  sub_23F362678(&v42, v29);
  sub_23F362678(&v39, v25 + 40);
  sub_23F362678(&v36, v25 + 80);
  sub_23F362678(&v33, v25 + 120);
  return sub_23F362678(&v30, v25 + 160);
}

void *sub_23F38DC44@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21[2];
  __int128 v22;
  uint64_t v23;
  _UNKNOWN **v24;
  __int128 v25;
  void *v26;
  _UNKNOWN **v27;
  _BYTE v28[32];
  uint64_t v29;
  _BYTE v30[32];
  uint64_t v31;
  _QWORD v32[47];

  v3 = sub_23F384B34();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  sub_23F38F964();
  v7 = v6 - v5;
  v8 = _s15AlphaComponentsVMa();
  v9 = v1 + *(int *)(v8 + 44);
  sub_23F38F124(v9, (uint64_t)v32, &qword_256E707B8);
  if (v32[13])
    return memcpy(a1, v32, 0x168uLL);
  v20 = v9;
  sub_23F3625D8((uint64_t)v32, &qword_256E707B8);
  v31 = 0;
  memset(v30, 0, sizeof(v30));
  v29 = 0;
  memset(v28, 0, sizeof(v28));
  v26 = &unk_250FD4EE0;
  v27 = &off_250FD4F48;
  v11 = sub_23F36682C();
  *(_QWORD *)&v25 = v11;
  *(_QWORD *)(v11 + 40) = &unk_250FD4E68;
  *(_QWORD *)(v11 + 48) = &off_250FD4F38;
  v12 = v1 + *(int *)(v8 + 24);
  v19 = v12;
  v23 = type metadata accessor for AlphaProgramStatementParser();
  v24 = &off_250FD2850;
  v13 = sub_23F36145C((uint64_t *)&v22);
  sub_23F38F9CC((uint64_t)v13, v12);
  sub_23F38F9CC(v7, v12);
  sub_23F38D448();
  sub_23F382FC4((uint64_t)&v32[5], (uint64_t)v21);
  sub_23F38BB88((uint64_t)v32);
  a1[18] = (uint64_t)&type metadata for AlphaPlanParser;
  a1[19] = (uint64_t)&off_250FD2840;
  v14 = (uint64_t *)sub_23F36682C();
  a1[15] = (uint64_t)v14;
  v15 = type metadata accessor for AlphaExpressionParser(0);
  v14[10] = v15;
  v14[11] = (uint64_t)&off_250FD26C0;
  v16 = sub_23F36145C(v14 + 7);
  sub_23F38C684();
  *(_BYTE *)v16 = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))((char *)v16 + *(int *)(v15 + 20), v7, v3);
  sub_23F362678(v21, (uint64_t)v16 + *(int *)(v15 + 24));
  sub_23F362678(&v22, (uint64_t)(v14 + 2));
  a1[23] = type metadata accessor for AlphaStatementResultParser();
  a1[24] = (uint64_t)&off_250FD3308;
  v17 = sub_23F36145C(a1 + 20);
  sub_23F38F9CC((uint64_t)v17, v19);
  sub_23F38FA1C();
  a1[28] = (uint64_t)&unk_250FD4E48;
  a1[29] = (uint64_t)&off_250FD4F28;
  a1[33] = (uint64_t)&unk_250FD4E28;
  a1[34] = (uint64_t)&off_250FD4F18;
  a1[38] = type metadata accessor for AlphaExternalAgentOutcomeParser();
  a1[39] = (uint64_t)&off_250FD4F08;
  v18 = sub_23F36145C(a1 + 35);
  sub_23F38F9CC((uint64_t)v18, v19);
  sub_23F38FA1C();
  a1[43] = (uint64_t)&unk_250FD4E08;
  a1[44] = (uint64_t)&off_250FD4EF8;
  sub_23F38F8A4((uint64_t)v30, (uint64_t)a1, &qword_256E707C0);
  sub_23F38F8A4((uint64_t)v28, (uint64_t)(a1 + 5), &qword_256E707C8);
  sub_23F362678(&v25, (uint64_t)(a1 + 10));
  sub_23F3625D8(v20, &qword_256E707B8);
  return (void *)sub_23F38F0E8((uint64_t)a1, v20);
}

void sub_23F38DF64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18[6];

  v1 = sub_23F38F8E0();
  v2 = v0 + *(int *)(v1 + 48);
  sub_23F38F908(v1, v3, &qword_256E707B0, v4, v5, v6, v7, v8, v18[0]);
  sub_23F38F938();
  if (v16)
  {
    sub_23F38F900((uint64_t)v18);
    sub_23F38F9BC(v17, (void (*)(_QWORD *__return_ptr, uint64_t, uint64_t *))sub_23F38DFE4);
    sub_23F38F900(v2);
    sub_23F38F99C();
  }
  else
  {
    sub_23F38F914(v9, v10, &qword_256E705E8, v11, v12, v13, v14, v15, v18[0]);
  }
  sub_23F38F8EC();
}

uint64_t sub_23F38DFE4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(void);
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  int *v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  __int128 v27;
  uint64_t v28;
  _UNKNOWN **v29;
  _BYTE v30[200];
  uint64_t v31[46];
  uint64_t v32;

  v21 = a3;
  v22 = a2;
  v4 = sub_23F6170CC();
  v23 = *(_QWORD *)(v4 - 8);
  v24 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F61B32C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = _s15AlphaComponentsVMa();
  v12 = a1 + *(int *)(v11 + 24);
  v32 = v8;
  v13 = *(void (**)(void))(v8 + 16);
  v26 = v10;
  ((void (*)(char *, uint64_t, uint64_t))v13)(v10, v12, v7);
  sub_23F38DC44(v31);
  sub_23F38D448();
  v28 = type metadata accessor for AlphaToolRenderer();
  v29 = &off_250FD3328;
  sub_23F36145C((uint64_t *)&v27);
  v13();
  sub_23F38D448();
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v6, a1 + *(int *)(v11 + 20), v24);
  sub_23F617510();
  swift_allocObject();
  v14 = v25;
  v15 = sub_23F617504();
  if (v14)
  {
    sub_23F38BB88((uint64_t)v30);
    sub_23F38BBBC((uint64_t)v31);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v26, v7);
    result = _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v27);
    *v22 = v14;
  }
  else
  {
    v17 = v15;
    v18 = (int *)type metadata accessor for ConversationParser();
    v19 = v21;
    v21[3] = (uint64_t)v18;
    v19[4] = (uint64_t)&off_250FD4C58;
    v20 = sub_23F36145C(v19);
    (*(void (**)(uint64_t *, char *, uint64_t))(v32 + 32))(v20, v26, v7);
    memcpy((char *)v20 + v18[5], v31, 0x168uLL);
    memcpy((char *)v20 + v18[6], v30, 0xC8uLL);
    result = sub_23F362678(&v27, (uint64_t)v20 + v18[7]);
    *(uint64_t *)((char *)v20 + v18[8]) = v17;
  }
  return result;
}

void sub_23F38E220()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _UNKNOWN **v6;

  v2 = v1 + *(int *)(sub_23F38F8E0() + 52);
  if (*(_QWORD *)(v2 + 24))
  {
    sub_23F382FC4(v2, (uint64_t)&v4);
  }
  else
  {
    v3 = *(_OWORD *)(v2 + 16);
    v4 = *(_OWORD *)v2;
    v5 = v3;
    v6 = *(_UNKNOWN ***)(v2 + 32);
  }
  if (!*((_QWORD *)&v5 + 1))
  {
    *((_QWORD *)&v5 + 1) = &unk_250FD46E0;
    v6 = &off_256E71E38;
    if (*(_QWORD *)(v2 + 24))
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v2);
    sub_23F382FC4((uint64_t)&v4, v2);
  }
  sub_23F362678(&v4, v0);
  sub_23F38FA3C();
}

void sub_23F38E2B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;

  v3 = v1 + *(int *)(sub_23F38F8E0() + 56);
  sub_23F38FA10();
  if (v13)
  {
    sub_23F38F9FC();
  }
  else if ((v12 & 1) != 0)
  {
    sub_23F38F9D4();
    *(_QWORD *)&v24 = v2;
    v28 = 1;
  }
  else
  {
    sub_23F38F9E0(v4, v5, v6, v7, v8, v9, v10, v11, v24);
    v28 = 0;
  }
  sub_23F38F938();
  if (v13)
  {
    sub_23F38FA50();
    sub_23F38D2E0(v22);
    sub_23F38FA10();
    if (!v13)
    {
      if ((v23 & 1) != 0)

      else
        sub_23F38FA48();
    }
    if ((*(_BYTE *)(v0 + 40) & 1) != 0)
    {
      sub_23F38FA30();
      *(_QWORD *)v3 = v0;
      *(_BYTE *)(v3 + 40) = 1;
    }
    else
    {
      sub_23F38FA28(v0);
      *(_BYTE *)(v3 + 40) = 0;
    }
  }
  else
  {
    sub_23F38FA5C(v14, v15, v16, v17, v18, v19, v20, v21, v24, v25, v26, v27, v28);
  }
  sub_23F38F98C();
}

void sub_23F38E364()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13[6];

  v2 = v1 + *(int *)(sub_23F38F8E0() + 60);
  sub_23F38F124(v2, (uint64_t)v13, &qword_256E70740);
  sub_23F38F938();
  if (v10)
  {
    sub_23F3625D8((uint64_t)v13, &qword_256E70740);
    if (qword_256E6EE60 != -1)
      swift_once();
    v11 = sub_23F617BA0();
    v12 = sub_23F38ED40(v11);
    *(_QWORD *)(v0 + 24) = &type metadata for FullPlannerResponseParser;
    *(_QWORD *)(v0 + 32) = &off_250FD6EC8;
    *(_QWORD *)v0 = v12;
    *(_BYTE *)(v0 + 40) = 0;
    sub_23F3625D8(v2, &qword_256E70740);
    sub_23F38F124(v0, v2, &qword_256E705F0);
  }
  else
  {
    sub_23F38F914(v3, v4, &qword_256E705F0, v5, v6, v7, v8, v9, v13[0]);
  }
  sub_23F38FA3C();
}

void sub_23F38E43C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20[6];

  v2 = sub_23F38F8E0();
  v3 = v1 + *(int *)(v2 + 64);
  sub_23F38F908(v2, v4, &qword_256E70730, v5, v6, v7, v8, v9, v20[0]);
  sub_23F38F938();
  if (v17)
  {
    sub_23F38F900((uint64_t)v20);
    v18 = sub_23F38FA50();
    sub_23F38E4CC(v18, v19);
    *(_BYTE *)(v0 + 40) = 0;
    sub_23F38F900(v3);
    sub_23F38F124(v0, v3, &qword_256E705F8);
  }
  else
  {
    sub_23F38F914(v10, v11, &qword_256E705F8, v12, v13, v14, v15, v16, v20[0]);
  }
  sub_23F38F8EC();
}

uint64_t sub_23F38E4CC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v10[288];

  v4 = sub_23F61B32C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23F38D448();
  memset(&v10[48], 0, 32);
  sub_23F38C684();
  v8 = _s15AlphaComponentsVMa();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, a1 + *(int *)(v8 + 24), v4);
  a2[3] = (uint64_t)&type metadata for PromptMapperResolver;
  a2[4] = (uint64_t)&off_250FDB498;
  *a2 = swift_allocObject();
  return sub_23F51CF9C();
}

void sub_23F38E5C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18[6];

  v1 = sub_23F38F8E0();
  v2 = v0 + *(int *)(v1 + 68);
  sub_23F38F908(v1, v3, &qword_256E70720, v4, v5, v6, v7, v8, v18[0]);
  sub_23F38F938();
  if (v16)
  {
    sub_23F38F900((uint64_t)v18);
    sub_23F38F9BC(v17, (void (*)(_QWORD *__return_ptr, uint64_t, uint64_t *))sub_23F38E644);
    sub_23F38F900(v2);
    sub_23F38F99C();
  }
  else
  {
    sub_23F38F914(v9, v10, &qword_256E70600, v11, v12, v13, v14, v15, v18[0]);
  }
  sub_23F38F8EC();
}

uint64_t sub_23F38E644@<X0>(_QWORD *a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD v18[5];
  _QWORD v19[5];
  _QWORD v20[5];
  __int128 v21[2];
  char v22;
  _BYTE v23[48];
  uint64_t v24;

  sub_23F38E2B0();
  if ((v22 & 1) != 0)
  {
    v4 = *(_QWORD *)&v21[0];
    v20[0] = *(_QWORD *)&v21[0];
    sub_23F35D2E8(&qword_256E70370);
    result = swift_willThrowTypedImpl();
LABEL_11:
    *a1 = v4;
    return result;
  }
  sub_23F362678(v21, (uint64_t)v23);
  sub_23F38C760();
  if ((v22 & 1) != 0)
  {
    v4 = *(_QWORD *)&v21[0];
    v19[0] = *(_QWORD *)&v21[0];
    sub_23F35D2E8(&qword_256E70370);
    swift_willThrowTypedImpl();
LABEL_10:
    result = _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v23);
    goto LABEL_11;
  }
  sub_23F362678(v21, (uint64_t)v20);
  sub_23F38E364();
  if ((v22 & 1) != 0)
  {
    v4 = *(_QWORD *)&v21[0];
    v18[0] = *(_QWORD *)&v21[0];
    sub_23F35D2E8(&qword_256E70370);
    swift_willThrowTypedImpl();
LABEL_9:
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v20);
    goto LABEL_10;
  }
  sub_23F362678(v21, (uint64_t)v19);
  sub_23F38E43C();
  if ((v22 & 1) != 0)
  {
    v4 = *(_QWORD *)&v21[0];
    v24 = *(_QWORD *)&v21[0];
    sub_23F35D2E8(&qword_256E70370);
    swift_willThrowTypedImpl();
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v19);
    goto LABEL_9;
  }
  sub_23F362678(v21, (uint64_t)v18);
  v6 = sub_23F35D2E8(&qword_256E70728);
  v7 = (_QWORD *)swift_allocObject();
  v8 = sub_23F38EB10((uint64_t)v19, v19[3]);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (_QWORD *)((char *)&v18[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v11 + 16))(v10);
  v12 = sub_23F38EB10((uint64_t)v18, v18[3]);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v18[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v15 + 16))(v14);
  v16 = sub_23F38EEF0((uint64_t)v23, (uint64_t)v20, *v10, v14, v7);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v18);
  result = _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v19);
  a2[3] = v6;
  a2[4] = &off_250FD6288;
  *a2 = v16;
  return result;
}

void sub_23F38E8EC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, _OWORD *a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int *v20;
  char *v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  void (*v24)(char *, uint64_t);
  _OWORD *v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  _OWORD *v29;
  __int128 v30;

  *a9 = 0x6168706C41;
  a9[1] = 0xE500000000000000;
  v20 = (int *)_s15AlphaComponentsVMa();
  v21 = (char *)a9 + v20[5];
  sub_23F38F984();
  sub_23F38F974();
  v22(v21, a1);
  v23 = (char *)a9 + v20[6];
  sub_23F384B34();
  sub_23F38F974();
  v24(v23, a2);
  sub_23F38F8A4(a3, (uint64_t)a9 + v20[7], &qword_256E705E0);
  sub_23F38F8A4(a4, (uint64_t)a9 + v20[8], &qword_256E70738);
  v25 = (_OWORD *)((char *)a9 + v20[9]);
  v26 = a5[1];
  *v25 = *a5;
  v25[1] = v26;
  *(_OWORD *)((char *)v25 + 25) = *(_OWORD *)((char *)a5 + 25);
  sub_23F38F8A4(a6, (uint64_t)a9 + v20[10], &qword_256E707D0);
  sub_23F38F8A4(a7, (uint64_t)a9 + v20[11], &qword_256E707B8);
  sub_23F38F8A4(a8, (uint64_t)a9 + v20[12], &qword_256E707B0);
  v27 = (uint64_t)a9 + v20[13];
  if (*(_QWORD *)(a10 + 24))
  {
    sub_23F362678((__int128 *)a10, v27);
  }
  else
  {
    v28 = *(_OWORD *)(a10 + 16);
    *(_OWORD *)v27 = *(_OWORD *)a10;
    *(_OWORD *)(v27 + 16) = v28;
    *(_QWORD *)(v27 + 32) = *(_QWORD *)(a10 + 32);
  }
  v29 = (_OWORD *)((char *)a9 + v20[14]);
  v30 = a11[1];
  *v29 = *a11;
  v29[1] = v30;
  *(_OWORD *)((char *)v29 + 25) = *(_OWORD *)((char *)a11 + 25);
  sub_23F38F8A4(a12, (uint64_t)a9 + v20[15], &qword_256E70740);
  sub_23F38F8A4(a13, (uint64_t)a9 + v20[16], &qword_256E70730);
  sub_23F38F8A4(a14, (uint64_t)a9 + v20[17], &qword_256E70720);
}

uint64_t sub_23F38EADC()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_23F617BA0();
  return v1;
}

uint64_t sub_23F38EB10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_23F38EB38(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  sub_23F617BA0();
  swift_retain();
  v5 = sub_23F61C2A4();
  if (v6)
  {
    v7 = v6;
    do
    {
      v8 = sub_23F38EC0C(v5, v7);
      swift_bridgeObjectRelease();
      swift_release();
      v5 = sub_23F61C2A4();
      v7 = v9;
    }
    while (v9);
  }
  else
  {
    v8 = v2;
  }
  swift_bridgeObjectRelease();
  v8[3] = a1;
  v8[4] = a2;
  sub_23F617BA0();
  swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_23F38EC0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;
  uint64_t v9;

  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 16);
  if (*(_QWORD *)(v5 + 16) && (v6 = sub_23F375678(a1, a2), (v7 & 1) != 0))
  {
    v8 = *(_QWORD **)(*(_QWORD *)(v5 + 56) + 8 * v6);
    swift_retain();
  }
  else
  {
    sub_23F35D2E8(&qword_256E70758);
    swift_allocObject();
    v8 = sub_23F38ECF8();
    swift_beginAccess();
    sub_23F617BA0();
    v9 = swift_retain();
    sub_23F37E1A8(v9, a1, a2);
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  return v8;
}

_QWORD *sub_23F38ECF8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_23F35D2E8(&qword_256E70758);
  v1 = sub_23F61BFEC();
  v0[3] = 0;
  v0[4] = 0;
  v0[2] = v1;
  return v0;
}

_QWORD *sub_23F38ED40(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15[3];
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  _OWORD v21[2];
  uint64_t v22;

  v19 = sub_23F35D2E8(&qword_256E70748);
  sub_23F389844(&qword_256E70750, &qword_256E70748, MEMORY[0x24BEE0310]);
  v20 = v2;
  v18[0] = a1;
  sub_23F35D2E8(&qword_256E70758);
  sub_23F36682C();
  v3 = sub_23F38ECF8();
  v4 = sub_23F35EA9C(v18, v19);
  MEMORY[0x24BDAC7A8](v4);
  sub_23F38F964();
  v7 = (uint64_t *)(v6 - v5);
  (*(void (**)(uint64_t))(v8 + 16))(v6 - v5);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v9 = sub_23F36145C(v15);
  sub_23F38231C(*v7, v21);
  v10 = v22;
  v11 = v21[1];
  *(_OWORD *)v9 = v21[0];
  *((_OWORD *)v9 + 1) = v11;
  v9[4] = v10;
  swift_retain();
  while (1)
  {
    sub_23F38EB10((uint64_t)v15, AssociatedTypeWitness);
    sub_23F61C784();
    if (!v14)
      break;
    sub_23F38EB38(v13, v14);
    swift_bridgeObjectRelease();
  }
  swift_release();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v15);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v18);
  return v3;
}

_QWORD *sub_23F38EEF0(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4, _QWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  ValueMetadata *v13;
  _UNKNOWN **v14;
  __int128 v15;
  ValueMetadata *v16;
  _UNKNOWN **v17;

  *(_QWORD *)&v15 = a3;
  v16 = &type metadata for FullPlannerResponseParser;
  v17 = &off_250FD6EC8;
  v13 = &type metadata for PromptMapperResolver;
  v14 = &off_250FDB498;
  *(_QWORD *)&v12 = sub_23F36682C();
  memcpy((void *)(v12 + 16), a4, 0x118uLL);
  sub_23F382FC4(a1, (uint64_t)(a5 + 2));
  sub_23F382FC4(a2, (uint64_t)(a5 + 7));
  v9 = a5[10];
  v10 = a5[11];
  sub_23F35EA9C(a5 + 7, v9);
  (*(void (**)(uint64_t, uint64_t))(v10 + 16))(v9, v10);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a2);
  sub_23F38FA48();
  sub_23F362678(&v15, (uint64_t)(a5 + 12));
  sub_23F362678(&v12, (uint64_t)(a5 + 17));
  return a5;
}

uint64_t sub_23F38EFF0()
{
  uint64_t v0;

  sub_23F38F944();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 136);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 176);
  swift_release();
  if (*(_QWORD *)(v0 + 224))
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 256);
  return swift_deallocObject();
}

unint64_t sub_23F38F04C()
{
  unint64_t result;

  result = qword_256E70768;
  if (!qword_256E70768)
  {
    result = MEMORY[0x242670A44](&unk_23F623190, &type metadata for FullPlannerVersionHandlerError);
    atomic_store(result, (unint64_t *)&qword_256E70768);
  }
  return result;
}

uint64_t sub_23F38F088()
{
  swift_release();
  swift_bridgeObjectRelease();
  sub_23F38F9AC();
  return swift_deallocObject();
}

uint64_t sub_23F38F0AC(uint64_t result)
{
  if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(result + 24) - 8) + 80) & 0x20000) != 0)
    JUMPOUT(0x242670B70);
  return result;
}

uint64_t sub_23F38F0E8(uint64_t a1, uint64_t a2)
{
  sub_23F406F08(a2, a1);
  return a2;
}

void sub_23F38F124(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_23F384504(a1, a2, a3);
  sub_23F38F920(v3);
  sub_23F362928();
}

_OWORD *sub_23F38F144(_OWORD *a1, _OWORD *a2)
{
  initializeWithCopy for PromptRenderer(a2, a1);
  return a2;
}

uint64_t sub_23F38F184(uint64_t a1, uint64_t a2)
{
  sub_23F3AF44C(a2, a1);
  return a2;
}

uint64_t sub_23F38F1C0()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
    sub_23F38F9F4();
  return swift_deallocObject();
}

uint64_t sub_23F38F1E8(uint64_t a1, uint64_t a2)
{
  sub_23F3AF950(a2, a1);
  return a2;
}

uint64_t sub_23F38F224()
{
  uint64_t v0;

  sub_23F38F9F4();
  if (*(_QWORD *)(v0 + 80))
    sub_23F38F9EC();
  sub_23F38F9AC();
  return swift_deallocObject();
}

uint64_t sub_23F38F248(uint64_t a1, uint64_t a2)
{
  sub_23F3AF7B4(a2, a1);
  return a2;
}

uint64_t sub_23F38F288(uint64_t a1, uint64_t a2)
{
  sub_23F3AF44C(a2, a1);
  return a2;
}

uint64_t sub_23F38F2C8(uint64_t a1, uint64_t a2)
{
  sub_23F3AF478(a2, a1);
  return a2;
}

uint64_t sub_23F38F304()
{
  sub_23F38F9F4();
  return swift_deallocObject();
}

uint64_t sub_23F38F328()
{
  uint64_t v0;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  sub_23F38F9EC();
  if (*(_QWORD *)(v0 + 120))
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 96);
  return swift_deallocObject();
}

uint64_t sub_23F38F360(uint64_t a1, uint64_t a2)
{
  sub_23F3AF478(a2, a1);
  return a2;
}

uint64_t sub_23F38F3A0()
{
  uint64_t v0;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  sub_23F38F9EC();
  sub_23F38F9AC();
  return swift_deallocObject();
}

uint64_t sub_23F38F3C0(uint64_t a1, uint64_t a2)
{
  sub_23F3AF44C(a2, a1);
  return a2;
}

uint64_t sub_23F38F3FC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for AnyActionRequirementEvaluating(a2, a1);
  return a2;
}

uint64_t sub_23F38F43C(uint64_t a1, uint64_t a2)
{
  sub_23F3AF2EC(a2, a1);
  return a2;
}

uint64_t sub_23F38F47C(uint64_t a1, uint64_t a2)
{
  sub_23F3AF2EC(a2, a1);
  return a2;
}

uint64_t sub_23F38F4B8(uint64_t a1, uint64_t a2)
{
  j__s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwcp(a2, a1);
  return a2;
}

uint64_t sub_23F38F4F4(uint64_t a1, uint64_t a2)
{
  j__s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwcp(a2, a1);
  return a2;
}

void sub_23F38F530(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = a3(0);
  sub_23F38F920(v3);
  sub_23F362928();
}

uint64_t sub_23F38F560()
{
  sub_23F38F944();
  return swift_deallocObject();
}

uint64_t sub_23F38F580(uint64_t a1, uint64_t a2)
{
  sub_23F3AF2EC(a2, a1);
  return a2;
}

uint64_t sub_23F38F5BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AlphaTypeIdentifierRenderer(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F38F600(uint64_t a1)
{
  sub_23F3AF2E8();
  return a1;
}

uint64_t sub_23F38F634(uint64_t a1)
{
  sub_23F3AF2E8();
  return a1;
}

uint64_t sub_23F38F668(uint64_t a1)
{
  sub_23F3AF2E8();
  return a1;
}

uint64_t sub_23F38F69C(uint64_t a1)
{
  destroy for AnyActionRequirementEvaluating();
  return a1;
}

uint64_t sub_23F38F6D0(uint64_t a1)
{
  destroy for AnyActionRequirementEvaluating();
  return a1;
}

uint64_t sub_23F38F704(uint64_t a1)
{
  destroy for AlphaPlanParser(a1);
  return a1;
}

uint64_t sub_23F38F738(uint64_t a1)
{
  sub_23F3AF474();
  return a1;
}

uint64_t sub_23F38F76C(uint64_t a1)
{
  sub_23F3AF474();
  return a1;
}

uint64_t sub_23F38F7A0(uint64_t a1)
{
  j__s30IntelligenceFlowPlannerRuntime15AlphaPlanParserVwxx();
  return a1;
}

uint64_t sub_23F38F7D4(uint64_t a1)
{
  destroy for AnyActionRequirementEvaluating();
  return a1;
}

uint64_t sub_23F38F808(uint64_t a1)
{
  sub_23F3AF77C(a1);
  return a1;
}

uint64_t sub_23F38F83C(uint64_t a1)
{
  j__s30IntelligenceFlowPlannerRuntime15AlphaPlanParserVwxx();
  return a1;
}

uint64_t sub_23F38F870(uint64_t a1)
{
  sub_23F3AF940(a1);
  return a1;
}

void sub_23F38F8A4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  sub_23F384504(a1, a2, a3);
  sub_23F38F974();
  v5(v3, v4);
  sub_23F362928();
}

uint64_t sub_23F38F8E0()
{
  return _s15AlphaComponentsVMa();
}

void sub_23F38F900(uint64_t a1)
{
  uint64_t *v1;

  sub_23F3625D8(a1, v1);
}

void sub_23F38F908(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_23F38F124(v9, (uint64_t)&a9, a3);
}

void sub_23F38F914(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_23F38F8A4((uint64_t)&a9, v9, a3);
}

uint64_t sub_23F38F920(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

uint64_t sub_23F38F944()
{
  uint64_t v0;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 56);
  return _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 96);
}

uint64_t sub_23F38F984()
{
  return sub_23F6170CC();
}

void sub_23F38F99C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  sub_23F38F124(v0, v1, v2);
}

uint64_t sub_23F38F9AC()
{
  uint64_t v0;

  return v0;
}

void sub_23F38F9BC(uint64_t a1, void (*a2)(_QWORD *__return_ptr, uint64_t, uint64_t *))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  sub_23F38D3D8(v3, a2, v4, v2);
}

uint64_t sub_23F38F9CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

id sub_23F38F9D4()
{
  id *v0;

  return *v0;
}

void sub_23F38F9E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_23F382FC4(v9, (uint64_t)&a9);
}

uint64_t sub_23F38F9EC()
{
  uint64_t v0;

  return _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 56);
}

uint64_t sub_23F38F9F4()
{
  uint64_t v0;

  return _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 16);
}

__n128 sub_23F38F9FC()
{
  uint64_t v0;

  return *(__n128 *)(v0 + 25);
}

_OWORD *sub_23F38FA1C()
{
  return sub_23F38D448();
}

void sub_23F38FA28(uint64_t a1)
{
  uint64_t v1;

  sub_23F382FC4(a1, v1);
}

id sub_23F38FA30()
{
  id *v0;

  return *v0;
}

uint64_t sub_23F38FA48()
{
  uint64_t v0;

  return _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0);
}

uint64_t sub_23F38FA50()
{
  uint64_t v0;

  return v0;
}

__n128 sub_23F38FA5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  _OWORD *v13;
  __n128 result;
  _BYTE v15[25];

  v15[24] = a13;
  *(_QWORD *)&v15[16] = a12;
  *(_QWORD *)&v15[8] = a11;
  *(_QWORD *)v15 = a10;
  *v13 = a9;
  v13[1] = *(_OWORD *)v15;
  result = *(__n128 *)&v15[9];
  *(_OWORD *)((char *)v13 + 25) = *(_OWORD *)&v15[9];
  return result;
}

uint64_t *sub_23F38FA70(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_23F61B32C();
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = a3[6];
    v12 = *(_OWORD *)((char *)a2 + v11 + 24);
    *(_OWORD *)((char *)v4 + v11 + 24) = v12;
    (**(void (***)(void))(v12 - 8))();
    v13 = a3[7];
    v14 = *(_OWORD *)((char *)a2 + v13 + 24);
    *(_OWORD *)((char *)v4 + v13 + 24) = v14;
    (**(void (***)(void))(v14 - 8))();
  }
  return v4;
}

uint64_t sub_23F38FB50(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + a2[5];
  v5 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + a2[6]);
  return _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + a2[7]);
}

_BYTE *sub_23F38FBB0(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_23F61B32C();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = a3[6];
  v11 = *(_OWORD *)&a2[v10 + 24];
  *(_OWORD *)&a1[v10 + 24] = v11;
  (**(void (***)(void))(v11 - 8))();
  v12 = a3[7];
  v13 = *(_OWORD *)&a2[v12 + 24];
  *(_OWORD *)&a1[v12 + 24] = v13;
  (**(void (***)(void))(v13 - 8))();
  return a1;
}

_BYTE *sub_23F38FC64(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_23F61B32C();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  sub_23F361AD0((uint64_t *)&a1[a3[6]], (uint64_t *)&a2[a3[6]]);
  sub_23F361AD0((uint64_t *)&a1[a3[7]], (uint64_t *)&a2[a3[7]]);
  return a1;
}

_BYTE *sub_23F38FCF0(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  __int128 v14;
  _BYTE *v15;
  _BYTE *v16;
  __int128 v17;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_23F61B32C();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = a3[7];
  v12 = &a1[v10];
  v13 = &a2[v10];
  v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  *((_QWORD *)v12 + 4) = *((_QWORD *)v13 + 4);
  v15 = &a1[v11];
  v16 = &a2[v11];
  v17 = *((_OWORD *)v16 + 1);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v17;
  *((_QWORD *)v15 + 4) = *((_QWORD *)v16 + 4);
  return a1;
}

_BYTE *sub_23F38FD90(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  __int128 v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  __int128 v17;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_23F61B32C();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&a1[v10]);
  v13 = *((_OWORD *)v12 + 1);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v13;
  *((_QWORD *)v11 + 4) = *((_QWORD *)v12 + 4);
  v14 = a3[7];
  v15 = &a1[v14];
  v16 = &a2[v14];
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&a1[v14]);
  v17 = *((_OWORD *)v16 + 1);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v17;
  *((_QWORD *)v15 + 4) = *((_QWORD *)v16 + 4);
  return a1;
}

uint64_t sub_23F38FE44()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F38FE54()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for AlphaExpressionParser(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E70838);
}

uint64_t sub_23F38FE78()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F61B32C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23F38FEF8(uint64_t a1, uint64_t (*a2)(_QWORD, _QWORD, char *))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v15;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = MEMORY[0x24BEE4AF8];
  if (v3)
  {
    v15 = MEMORY[0x24BEE4AF8];
    sub_23F37B9F4();
    v4 = v15;
    v6 = sub_23F35D2E8(&qword_256E70498);
    v7 = *(_QWORD *)(v6 - 8);
    v8 = (char *)(a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)));
    v13 = *(_QWORD *)(v7 + 72);
    while (1)
    {
      v9 = a2(*(_QWORD *)v8, *((_QWORD *)v8 + 1), &v8[*(int *)(v6 + 48)]);
      if (v2)
        break;
      v10 = v9;
      v11 = *(_QWORD *)(v15 + 16);
      if (v11 >= *(_QWORD *)(v15 + 24) >> 1)
        sub_23F37B9F4();
      v8 += v13;
      *(_QWORD *)(v15 + 16) = v11 + 1;
      *(_QWORD *)(v15 + 8 * v11 + 32) = v10;
      if (!--v3)
        return v4;
    }
    swift_release();
  }
  return v4;
}

uint64_t sub_23F390024(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = MEMORY[0x24BEE4AF8];
  if (v5)
  {
    v18 = MEMORY[0x24BEE4AF8];
    sub_23F37B9F4();
    v6 = v18;
    v8 = *(_QWORD *)(sub_23F61AE70() - 8);
    v9 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v17 = *((_QWORD *)a3 + 3);
    v10 = *(_QWORD *)(v8 + 72);
    while (1)
    {
      v11 = sub_23F398528(v9, v17);
      if (v3)
        break;
      v12 = v11;
      v13 = *(_QWORD *)(v18 + 16);
      if (v13 >= *(_QWORD *)(v18 + 24) >> 1)
        sub_23F37B9F4();
      *(_QWORD *)(v18 + 16) = v13 + 1;
      *(_QWORD *)(v18 + 8 * v13 + 32) = v12;
      v9 += v10;
      if (!--v5)
        goto LABEL_9;
    }
    swift_release();
    v24 = *a3;
    v14 = *((_QWORD *)a3 + 2);
    sub_23F39B9B0((uint64_t)&v24);
    v25 = v14;
    sub_23F39B968((uint64_t)&v25);
    swift_bridgeObjectRelease();
    v23 = *((_QWORD *)a3 + 4);
    sub_23F39B968((uint64_t)&v23);
  }
  else
  {
LABEL_9:
    v22 = *a3;
    v15 = *((_QWORD *)a3 + 2);
    sub_23F39B9B0((uint64_t)&v22);
    v21 = v15;
    sub_23F39B968((uint64_t)&v21);
    v20 = *((_QWORD *)a3 + 3);
    sub_23F39B968((uint64_t)&v20);
    v19 = *((_QWORD *)a3 + 4);
    sub_23F39B968((uint64_t)&v19);
  }
  return v6;
}

uint64_t sub_23F3901C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  char v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v56;
  uint64_t v57;
  _BYTE *v58;
  uint64_t result;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;

  v3 = v2;
  v6 = sub_23F619FAC();
  v69 = *(_QWORD *)(v6 - 8);
  v70 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v64 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v68 = (char *)&v60 - v9;
  v10 = *(_QWORD *)(a1 + 16);
  if (v10)
  {
    v62 = sub_23F617D08();
    v11 = *(_QWORD *)(v62 - 8);
    v12 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v63 = type metadata accessor for AlphaExpressionParser.StatefulExpressionParser(0);
    v71 = *(int *)(v63 + 36);
    v60 = a1;
    v61 = v11;
    v67 = *(_QWORD *)(v11 + 72);
    sub_23F617BA0();
    v13 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      v14 = *(_QWORD *)(a2 + v71);
      if (*(_QWORD *)(v14 + 16) && (sub_23F3756E8(), (v16 & 1) != 0))
      {
        v17 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v15);
        sub_23F617BA0();
      }
      else
      {
        v18 = *(_QWORD *)(a2 + *(int *)(v63 + 40));
        if (!*(_QWORD *)(v18 + 16) || (sub_23F3756E8(), (v20 & 1) == 0))
        {
          sub_23F39B904();
          swift_allocError();
          *v58 = 3;
          swift_willThrow();
LABEL_38:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v13;
        }
        v66 = v10;
        v21 = *(_QWORD *)(v18 + 56);
        v23 = v69;
        v22 = v70;
        v24 = v64;
        (*(void (**)(char *, uint64_t, uint64_t))(v69 + 16))(v64, v21 + *(_QWORD *)(v69 + 72) * v19, v70);
        v25 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
        v26 = v68;
        v25(v68, v24, v22);
        v27 = sub_23F392754(v26);
        if (v3)
        {
          (*(void (**)(char *, uint64_t))(v69 + 8))(v68, v70);
          goto LABEL_38;
        }
        v17 = v27;
        v65 = v13;
        sub_23F617BA0();
        v28 = v71;
        swift_isUniquelyReferenced_nonNull_native();
        v72 = *(_QWORD **)(a2 + v28);
        v29 = v72;
        *(_QWORD *)(a2 + v28) = 0x8000000000000000;
        sub_23F3756E8();
        if (__OFADD__(v29[2], (v31 & 1) == 0))
          goto LABEL_42;
        v32 = v30;
        v33 = v31;
        sub_23F35D2E8(&qword_256E70488);
        if ((sub_23F61CA18() & 1) != 0)
        {
          sub_23F3756E8();
          if ((v33 & 1) != (v35 & 1))
            goto LABEL_47;
          v32 = v34;
        }
        v36 = v72;
        if ((v33 & 1) != 0)
        {
          v37 = v72[7];
          swift_bridgeObjectRelease();
          *(_QWORD *)(v37 + 8 * v32) = v17;
        }
        else
        {
          v72[(v32 >> 6) + 8] |= 1 << v32;
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v61 + 16))(v36[6] + v32 * v67, v12, v62);
          *(_QWORD *)(v36[7] + 8 * v32) = v17;
          v38 = v36[2];
          v39 = __OFADD__(v38, 1);
          v40 = v38 + 1;
          if (v39)
            goto LABEL_45;
          v36[2] = v40;
        }
        *(_QWORD *)(a2 + v71) = v36;
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v69 + 8))(v68, v70);
        v3 = 0;
        v13 = v65;
        v10 = v66;
      }
      v41 = *(_QWORD *)(v17 + 16);
      v42 = *(_QWORD *)(v13 + 16);
      if (__OFADD__(v42, v41))
        break;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0 || v42 + v41 > *(_QWORD *)(v13 + 24) >> 1)
      {
        sub_23F377664();
        v13 = v43;
      }
      if (*(_QWORD *)(v17 + 16))
      {
        v44 = *(_QWORD *)(v13 + 16);
        v45 = (*(_QWORD *)(v13 + 24) >> 1) - v44;
        v46 = type metadata accessor for StatementSegment(0);
        if (v45 < v41)
          goto LABEL_43;
        v47 = *(_QWORD *)(v46 - 8);
        v48 = (*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
        v49 = *(_QWORD *)(v47 + 72);
        v50 = v13 + v48 + v49 * v44;
        v51 = v17 + v48;
        v52 = v49 * v41;
        v53 = v50 + v52;
        v54 = v51 + v52;
        if (v51 < v53 && v50 < v54)
          goto LABEL_46;
        swift_arrayInitWithCopy();
        if (v41)
        {
          v56 = *(_QWORD *)(v13 + 16);
          v39 = __OFADD__(v56, v41);
          v57 = v56 + v41;
          if (v39)
            goto LABEL_44;
          *(_QWORD *)(v13 + 16) = v57;
        }
      }
      else if (v41)
      {
        goto LABEL_41;
      }
      swift_bridgeObjectRelease();
      v12 += v67;
      if (!--v10)
      {
        swift_bridgeObjectRelease();
        return v13;
      }
    }
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    sub_23F61CA9C();
    __break(1u);
LABEL_47:
    result = sub_23F61CC94();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

void sub_23F39066C(uint64_t a1, void (*a2)(uint64_t, uint64_t, char *))
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t, char *);
  _QWORD v44[5];
  int64_t v45;

  v43 = a2;
  v3 = sub_23F35D2E8(&qword_256E708B8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_23F35D2E8(&qword_256E70498);
  v36 = *(_QWORD *)(v42 - 8);
  v6 = MEMORY[0x24BDAC7A8](v42);
  v37 = (uint64_t)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v35 = (uint64_t)&v34 - v8;
  v41 = sub_23F35D2E8(&qword_256E708C0);
  MEMORY[0x24BDAC7A8](v41);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F38231C(a1, v44);
  v11 = v44[0];
  v45 = v44[3];
  v12 = v44[4];
  v39 = v44[1];
  v40 = (unint64_t)(v44[2] + 64) >> 6;
  sub_23F617BA0();
  v38 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    if (v12)
    {
      v13 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v14 = v13 | (v45 << 6);
      goto LABEL_20;
    }
    v15 = v45 + 1;
    if (__OFADD__(v45, 1))
      break;
    if (v15 >= v40)
      goto LABEL_27;
    v16 = *(_QWORD *)(v39 + 8 * v15);
    v17 = v45 + 1;
    if (!v16)
    {
      v17 = v45 + 2;
      if (v45 + 2 >= v40)
        goto LABEL_27;
      v16 = *(_QWORD *)(v39 + 8 * v17);
      if (!v16)
      {
        v17 = v45 + 3;
        if (v45 + 3 >= v40)
          goto LABEL_27;
        v16 = *(_QWORD *)(v39 + 8 * v17);
        if (!v16)
        {
          v17 = v45 + 4;
          if (v45 + 4 >= v40)
            goto LABEL_27;
          v16 = *(_QWORD *)(v39 + 8 * v17);
          if (!v16)
          {
            v17 = v45 + 5;
            if (v45 + 5 >= v40)
              goto LABEL_27;
            v16 = *(_QWORD *)(v39 + 8 * v17);
            if (!v16)
            {
              v18 = v45 + 6;
              while (v18 < v40)
              {
                v16 = *(_QWORD *)(v39 + 8 * v18++);
                if (v16)
                {
                  v17 = v18 - 1;
                  goto LABEL_19;
                }
              }
LABEL_27:
              swift_release();
              return;
            }
          }
        }
      }
    }
LABEL_19:
    v12 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v17 << 6);
    v45 = v17;
LABEL_20:
    v19 = *(_QWORD *)(v11 + 56);
    v20 = (uint64_t *)(*(_QWORD *)(v11 + 48) + 16 * v14);
    v22 = *v20;
    v21 = v20[1];
    v23 = sub_23F617D08();
    v24 = *(_QWORD *)(v23 - 8);
    v25 = v19 + *(_QWORD *)(v24 + 72) * v14;
    v26 = v41;
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(&v10[*(int *)(v41 + 48)], v25, v23);
    *(_QWORD *)v10 = v22;
    *((_QWORD *)v10 + 1) = v21;
    v27 = &v10[*(int *)(v26 + 48)];
    sub_23F617BA0();
    v43(v22, v21, v27);
    sub_23F3625D8((uint64_t)v10, &qword_256E708C0);
    if (sub_23F36195C((uint64_t)v5, 1, v42) == 1)
    {
      sub_23F3625D8((uint64_t)v5, &qword_256E708B8);
    }
    else
    {
      v28 = v35;
      sub_23F383004((uint64_t)v5, v35, &qword_256E70498);
      sub_23F383004(v28, v37, &qword_256E70498);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F37768C();
        v38 = v32;
      }
      v29 = *(_QWORD *)(v38 + 16);
      if (v29 >= *(_QWORD *)(v38 + 24) >> 1)
      {
        sub_23F37768C();
        v38 = v33;
      }
      v30 = v37;
      v31 = v38;
      *(_QWORD *)(v38 + 16) = v29 + 1;
      sub_23F383004(v30, v31+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(_QWORD *)(v36 + 72) * v29, &qword_256E70498);
    }
  }
  __break(1u);
}

uint64_t sub_23F390A3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t result;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;

  v3 = v2;
  v6 = sub_23F619FAC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v50 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v54 = (char *)&v45 - v10;
  v11 = *(_QWORD *)(a1 + 16);
  if (!v11)
    return MEMORY[0x24BEE4AF8];
  v47 = sub_23F617D08();
  v12 = *(_QWORD *)(v47 - 8);
  v13 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  v49 = type metadata accessor for AlphaExpressionParser.StatefulExpressionParser(0);
  v56 = *(int *)(v49 + 36);
  v45 = a1;
  v46 = v12;
  v53 = *(_QWORD *)(v12 + 72);
  sub_23F617BA0();
  v14 = MEMORY[0x24BEE4AF8];
  v48 = v6;
  while (1)
  {
    v15 = *(_QWORD *)(a2 + v56);
    v16 = *(_QWORD *)(v15 + 16);
    v55 = v11;
    if (v16)
    {
      sub_23F3756E8();
      if ((v18 & 1) != 0)
      {
        v19 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v17);
        sub_23F617BA0();
        goto LABEL_18;
      }
    }
    v20 = *(_QWORD *)(a2 + *(int *)(v49 + 40));
    if (!*(_QWORD *)(v20 + 16) || (sub_23F3756E8(), (v22 & 1) == 0))
    {
      sub_23F39B904();
      swift_allocError();
      *v43 = 3;
      swift_willThrow();
LABEL_27:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v14;
    }
    v23 = v50;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v50, *(_QWORD *)(v20 + 56) + *(_QWORD *)(v7 + 72) * v21, v6);
    v24 = v54;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v54, v23, v6);
    v25 = sub_23F392754(v24);
    if (v3)
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v54, v6);
      goto LABEL_27;
    }
    v19 = v25;
    v51 = v14;
    v52 = 0;
    sub_23F617BA0();
    v26 = v56;
    swift_isUniquelyReferenced_nonNull_native();
    v57 = *(_QWORD **)(a2 + v26);
    v27 = v57;
    v28 = a2;
    *(_QWORD *)(a2 + v26) = 0x8000000000000000;
    sub_23F3756E8();
    if (__OFADD__(v27[2], (v30 & 1) == 0))
      break;
    v31 = v29;
    v32 = v30;
    sub_23F35D2E8(&qword_256E70488);
    if ((sub_23F61CA18() & 1) != 0)
    {
      sub_23F3756E8();
      if ((v32 & 1) != (v34 & 1))
        goto LABEL_31;
      v31 = v33;
    }
    v35 = v57;
    if ((v32 & 1) != 0)
    {
      v36 = v57[7];
      swift_bridgeObjectRelease();
      *(_QWORD *)(v36 + 8 * v31) = v19;
    }
    else
    {
      v57[(v31 >> 6) + 8] |= 1 << v31;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v46 + 16))(v35[6] + v31 * v53, v13, v47);
      *(_QWORD *)(v35[7] + 8 * v31) = v19;
      v37 = v35[2];
      v38 = __OFADD__(v37, 1);
      v39 = v37 + 1;
      if (v38)
        goto LABEL_30;
      v35[2] = v39;
    }
    a2 = v28;
    *(_QWORD *)(v28 + v56) = v35;
    swift_bridgeObjectRelease();
    v6 = v48;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v54, v48);
    v14 = v51;
    v3 = v52;
LABEL_18:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23F377678();
      v14 = v41;
    }
    v40 = *(_QWORD *)(v14 + 16);
    if (v40 >= *(_QWORD *)(v14 + 24) >> 1)
    {
      sub_23F377678();
      v14 = v42;
    }
    *(_QWORD *)(v14 + 16) = v40 + 1;
    *(_QWORD *)(v14 + 8 * v40 + 32) = v19;
    v13 += v53;
    v11 = v55 - 1;
    if (v55 == 1)
    {
      swift_bridgeObjectRelease();
      return v14;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  result = sub_23F61CC94();
  __break(1u);
  return result;
}

uint64_t sub_23F390E1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return MEMORY[0x24BEE4AF8];
  v20 = sub_23F617BA0();
  v5 = (uint64_t *)(v20 + 40);
  v6 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    v7 = *v5;
    v18 = *(v5 - 1);
    v19 = v7;
    sub_23F617BA0();
    sub_23F3987BC(a2, &v16);
    if (v2)
      break;
    swift_bridgeObjectRelease();
    if ((_QWORD)v17)
    {
      v15 = v17;
      v8 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F377438();
        v6 = v12;
      }
      v9 = *(_QWORD *)(v6 + 16);
      v10 = v15;
      if (v9 >= *(_QWORD *)(v6 + 24) >> 1)
      {
        sub_23F377438();
        v10 = v15;
        v6 = v13;
      }
      *(_QWORD *)(v6 + 16) = v9 + 1;
      v11 = v6 + 24 * v9;
      *(_QWORD *)(v11 + 32) = v8;
      *(_OWORD *)(v11 + 40) = v10;
    }
    v5 += 2;
    if (!--v3)
    {
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_23F390F88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v3 = sub_23F617D08();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F35D2E8(&qword_256E6FFA0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F382EF8(a1, (uint64_t)v9, &qword_256E6FFA0);
  if (sub_23F36195C((uint64_t)v9, 1, v3) == 1)
    return 0;
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v9, v3);
  v10 = sub_23F39257C(v6);
  if (!v1)
    a1 = v10;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return a1;
}

uint64_t sub_23F3910C4(uint64_t a1, uint64_t (**isUniquelyReferenced_nonNull_native)(uint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  int v50;
  void (*v51)(char *, uint64_t, uint64_t);
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (**v63)(uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (**v67)(uint64_t, uint64_t);
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v83;
  BOOL v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  uint64_t (**v95)(uint64_t, uint64_t);
  unint64_t v96;
  char v97;
  unint64_t v98;
  char v99;
  unint64_t v100;
  char v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  _BYTE *v107;
  char v108;
  int *v109;
  _BYTE *v110;
  int *v111;
  _BYTE *v112;
  _BYTE *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  NSObject *v123;
  os_log_type_t v124;
  uint64_t v125;
  uint8_t *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t result;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void *v138;
  uint64_t v139;
  uint64_t v140;
  _BYTE *v141;
  uint64_t v142;
  uint64_t v143;
  _BYTE *v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t (**v151)(uint64_t, uint64_t);
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  int v155;
  void (*v156)(uint64_t, unint64_t, uint64_t);
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  _QWORD *v169;

  v143 = a1;
  v134 = sub_23F619E98();
  v133 = *(_QWORD *)(v134 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F36285C();
  v136 = v7;
  sub_23F39C56C();
  v150 = sub_23F617D08();
  v147 = *(_QWORD *)(v150 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F3834D0();
  v135 = v9;
  MEMORY[0x24BDAC7A8](v10);
  v161 = (uint64_t)&v132 - v11;
  sub_23F39C56C();
  v149 = sub_23F619FAC();
  v148 = *(_QWORD *)(v149 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F36285C();
  v163 = v13;
  sub_23F39C56C();
  v14 = sub_23F61A24C();
  v153 = *(_QWORD *)(v14 - 8);
  v154 = v14;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F36285C();
  v152 = v16;
  sub_23F39C56C();
  v162 = sub_23F61A684();
  v166 = *(_QWORD *)(v162 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F36285C();
  v159 = v18;
  v19 = sub_23F39C56C();
  v140 = type metadata accessor for AlphaExpressionParser.StatefulExpressionParser(v19);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F36285C();
  v144 = v21;
  sub_23F39C56C();
  v22 = sub_23F61B2C0();
  v151 = *(uint64_t (***)(uint64_t, uint64_t))(v22 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F38F964();
  v26 = v25 - v24;
  sub_23F35D2E8(&qword_256E70878);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F38F964();
  v30 = v29 - v28;
  v31 = sub_23F61B1E8();
  v165 = *(_QWORD *)(v31 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v32);
  sub_23F3834D0();
  v160 = v33;
  v35 = MEMORY[0x24BDAC7A8](v34);
  v146 = (char *)&v132 - v36;
  MEMORY[0x24BDAC7A8](v35);
  v145 = (uint64_t)&v132 - v37;
  sub_23F39C56C();
  v167 = sub_23F61B2E4();
  v38 = *(_QWORD *)(v167 - 8);
  MEMORY[0x24BDAC7A8](v167);
  sub_23F38F964();
  v41 = v40 - v39;
  v142 = a4;
  sub_23F50F25C();
  v139 = sub_23F39B57C(v42);
  sub_23F362984();
  v43 = sub_23F617BA0();
  v44 = sub_23F391C58(v43);
  sub_23F392030(v44);
  v137 = v45;
  v138 = 0;
  sub_23F362984();
  v46 = sub_23F61B14C();
  v47 = *(_QWORD *)(v46 + 16);
  if (v47)
  {
    v48 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
    v132 = v46;
    v49 = v46 + v48;
    v157 = *(_QWORD *)(v38 + 72);
    v156 = *(void (**)(uint64_t, unint64_t, uint64_t))(v38 + 16);
    v155 = *MEMORY[0x24BE56AC8];
    v164 = MEMORY[0x24BEE4AF8];
    isUniquelyReferenced_nonNull_native = v151;
    v158 = v38;
    do
    {
      v156(v41, v49, v167);
      sub_23F61B2CC();
      v50 = isUniquelyReferenced_nonNull_native[11](v26, v22);
      if (v50 == v155)
      {
        sub_23F39C578(isUniquelyReferenced_nonNull_native[12]);
        v51 = *(void (**)(char *, uint64_t, uint64_t))(v165 + 32);
        v52 = v146;
        v51(v146, v26, v31);
        v51((char *)v30, (uint64_t)v52, v31);
        v38 = v158;
        v53 = 0;
      }
      else
      {
        sub_23F39C578(isUniquelyReferenced_nonNull_native[1]);
        v53 = 1;
      }
      sub_23F36196C(v30, v53, 1, v31);
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v41, v167);
      if (sub_23F36195C(v30, 1, v31) == 1)
      {
        sub_23F3625D8(v30, &qword_256E70878);
      }
      else
      {
        v54 = v145;
        sub_23F39C590(v145, v30);
        sub_23F39C590(v160, v54);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        {
          v55 = v164;
        }
        else
        {
          sub_23F3777EC();
          v55 = v60;
        }
        v56 = *(_QWORD *)(v55 + 16);
        if (v56 >= *(_QWORD *)(v55 + 24) >> 1)
        {
          sub_23F3777EC();
          v55 = v61;
        }
        *(_QWORD *)(v55 + 16) = v56 + 1;
        sub_23F383E04();
        v164 = v57;
        sub_23F39C590(v57 + v58 + *(_QWORD *)(v59 + 72) * v56, v160);
        isUniquelyReferenced_nonNull_native = v151;
        v38 = v158;
      }
      v49 += v157;
      --v47;
    }
    while (v47);
    swift_bridgeObjectRelease();
    v62 = v164;
  }
  else
  {
    swift_bridgeObjectRelease();
    v62 = MEMORY[0x24BEE4AF8];
  }
  v63 = *(uint64_t (***)(uint64_t, uint64_t))(v62 + 16);
  v64 = v150;
  v66 = v162;
  v65 = v163;
  if (v63)
  {
    sub_23F383E04();
    v69 = (char *)v67 + v68;
    v71 = *(_QWORD *)(v70 + 72);
    isUniquelyReferenced_nonNull_native = v67;
    sub_23F617BA0();
    v72 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      v73 = sub_23F61B1B8();
      v74 = *(_QWORD *)(v73 + 16);
      v75 = *(_QWORD *)(v72 + 16);
      if (__OFADD__(v75, v74))
        break;
      v76 = v73;
      if (!swift_isUniquelyReferenced_nonNull_native() || v75 + v74 > *(_QWORD *)(v72 + 24) >> 1)
      {
        sub_23F3777D8();
        v72 = v77;
      }
      v66 = v162;
      v65 = v163;
      if (*(_QWORD *)(v76 + 16))
      {
        v78 = *(_QWORD *)(v72 + 16);
        if ((*(_QWORD *)(v72 + 24) >> 1) - v78 < v74)
          goto LABEL_61;
        v79 = (*(unsigned __int8 *)(v166 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v166 + 80);
        v80 = *(_QWORD *)(v166 + 72);
        v81 = v72 + v79 + v80 * v78;
        if (v76 + v79 < v81 + v80 * v74 && v81 < v76 + v79 + v80 * v74)
          goto LABEL_65;
        swift_arrayInitWithCopy();
        if (v74)
        {
          v83 = *(_QWORD *)(v72 + 16);
          v84 = __OFADD__(v83, v74);
          v85 = v83 + v74;
          if (v84)
            goto LABEL_63;
          *(_QWORD *)(v72 + 16) = v85;
        }
      }
      else if (v74)
      {
        goto LABEL_60;
      }
      swift_bridgeObjectRelease();
      v69 += v71;
      v63 = (uint64_t (**)(uint64_t, uint64_t))((char *)v63 - 1);
      if (!v63)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_37;
      }
    }
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    sub_23F61CA9C();
    __break(1u);
LABEL_66:
    result = sub_23F61CC94();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    v72 = MEMORY[0x24BEE4AF8];
LABEL_37:
    v86 = *(_QWORD *)(v72 + 16);
    sub_23F39C598();
    if (v86)
    {
      sub_23F383E04();
      v88 = v72 + v87;
      LODWORD(v167) = *MEMORY[0x24BE54CD8];
      v90 = *(_QWORD *)(v89 + 16);
      v164 = *(_QWORD *)(v89 + 72);
      v165 = v90;
      sub_23F617BA0();
      v91 = (_QWORD *)MEMORY[0x24BEE4B00];
      v92 = v159;
      do
      {
        ((void (*)(uint64_t, uint64_t, uint64_t))v165)(v92, v88, v66);
        sub_23F61A63C();
        v93 = v63[11](v65, (uint64_t)isUniquelyReferenced_nonNull_native);
        if (v93 == (_DWORD)v167)
        {
          sub_23F39C584(v63[12]);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v153 + 32))(v152, v65, v154);
          sub_23F61A660();
          v94 = sub_23F61A240();
          v63 = v95;
          isUniquelyReferenced_nonNull_native = (uint64_t (**)(uint64_t, uint64_t))swift_isUniquelyReferenced_nonNull_native();
          v169 = v91;
          sub_23F3756E8();
          if (__OFADD__(v91[2], (v97 & 1) == 0))
            goto LABEL_62;
          v98 = v96;
          v99 = v97;
          sub_23F35D2E8(&qword_256E70880);
          if ((sub_23F61CA18() & 1) != 0)
          {
            sub_23F3756E8();
            if ((v99 & 1) != (v101 & 1))
              goto LABEL_66;
            v98 = v100;
          }
          v91 = v169;
          if ((v99 & 1) != 0)
          {
            v102 = (uint64_t *)(v169[7] + 16 * v98);
            swift_bridgeObjectRelease();
            *v102 = v94;
            v102[1] = (uint64_t)v63;
            v64 = v150;
            v103 = v147;
          }
          else
          {
            v169[(v98 >> 6) + 8] |= 1 << v98;
            v103 = v147;
            v64 = v150;
            (*(void (**)(unint64_t, uint64_t, uint64_t))(v147 + 16))(v91[6] + *(_QWORD *)(v147 + 72) * v98, v161, v150);
            v104 = (uint64_t *)(v91[7] + 16 * v98);
            *v104 = v94;
            v104[1] = (uint64_t)v63;
            v105 = v91[2];
            v84 = __OFADD__(v105, 1);
            v106 = v105 + 1;
            if (v84)
              goto LABEL_64;
            v91[2] = v106;
          }
          swift_bridgeObjectRelease();
          sub_23F38456C(v161, *(uint64_t (**)(uint64_t, uint64_t))(v103 + 8));
          (*(void (**)(uint64_t, uint64_t))(v153 + 8))(v152, v154);
          sub_23F39C598();
          v66 = v162;
          v65 = v163;
        }
        else
        {
          sub_23F39C584(v63[1]);
        }
        v92 = v159;
        (*(void (**)(uint64_t, uint64_t))(v166 + 8))(v159, v66);
        v88 += v164;
        --v86;
      }
      while (v86);
      swift_bridgeObjectRelease();
    }
    else
    {
      v91 = (_QWORD *)MEMORY[0x24BEE4B00];
    }
    swift_bridgeObjectRelease();
    v107 = v141;
    v108 = *v141;
    v109 = (int *)type metadata accessor for AlphaExpressionParser(0);
    v110 = &v107[v109[5]];
    v111 = (int *)v140;
    v112 = v144;
    v113 = &v144[*(int *)(v140 + 20)];
    v114 = sub_23F384B34();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v114 - 8) + 16))(v113, v110, v114);
    sub_23F382FC4((uint64_t)&v107[v109[6]], (uint64_t)&v112[v111[6]]);
    sub_23F382FC4((uint64_t)&v107[v109[7]], (uint64_t)&v112[v111[7]]);
    v115 = *(_QWORD *)(v142 + 56);
    *v112 = v108;
    *(_QWORD *)&v112[v111[8]] = v115;
    *(_QWORD *)&v112[v111[9]] = v139;
    *(_QWORD *)&v112[v111[10]] = v137;
    *(_QWORD *)&v112[v111[11]] = v91;
    swift_retain();
    v116 = v143;
    v117 = v138;
    v118 = sub_23F39257C(v143);
    if (v117)
    {
      v119 = v136;
      sub_23F619088();
      v120 = v147;
      v121 = v116;
      v122 = v135;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v147 + 16))(v135, v121, v64);
      v123 = sub_23F619E8C();
      v124 = sub_23F61C628();
      if (os_log_type_enabled(v123, v124))
      {
        v125 = v122;
        v126 = (uint8_t *)swift_slowAlloc();
        v169 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v126 = 136315138;
        v167 = (uint64_t)(v126 + 4);
        sub_23F3612C0((unint64_t *)&qword_256E6FB60, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52170]);
        v127 = sub_23F61CC1C();
        sub_23F37AE00(v127, v128, (uint64_t *)&v169);
        v168 = v129;
        sub_23F61C790();
        sub_23F362984();
        sub_23F38456C(v125, *(uint64_t (**)(uint64_t, uint64_t))(v120 + 8));
        _os_log_impl(&dword_23F35A000, v123, v124, "Failed to render Expression in Plan with StatementID: %s", v126, 0xCu);
        swift_arrayDestroy();
        sub_23F366530();
      }
      sub_23F38456C(v122, *(uint64_t (**)(uint64_t, uint64_t))(v120 + 8));

      (*(void (**)(uint64_t, uint64_t))(v133 + 8))(v119, v134);
      v130 = (char *)MEMORY[0x24BEE4AF8];
    }
    else
    {
      v130 = v118;
    }
    sub_23F3663AC((uint64_t)v112, type metadata accessor for AlphaExpressionParser.StatefulExpressionParser);
    return (uint64_t)v130;
  }
  return result;
}

uint64_t sub_23F391C58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  char v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t result;
  _QWORD v38[3];
  char *v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t);
  char *v49;
  char *v50;
  uint64_t v51;
  _QWORD *v52;

  v3 = sub_23F617D08();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_23F61A684();
  v7 = *(_QWORD *)(v51 - 8);
  v8 = MEMORY[0x24BDAC7A8](v51);
  v49 = (char *)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v50 = (char *)v38 - v10;
  v52 = (_QWORD *)MEMORY[0x24BEE4B00];
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    v38[1] = a1;
    v38[2] = v1;
    v12 = *(unsigned __int8 *)(v7 + 80);
    v13 = (v12 + 32) & ~v12;
    v14 = a1 + v13;
    v15 = *(_QWORD *)(v7 + 72);
    v47 = v13;
    v41 = v12 | 7;
    v42 = v15 + v13;
    v16 = (_QWORD *)MEMORY[0x24BEE4B00];
    v48 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v40 = xmmword_23F61E7E0;
    v44 = v4;
    v45 = v3;
    v39 = v6;
    v43 = v7;
    v46 = v15;
    while (1)
    {
      v48(v50, v14, v51);
      sub_23F61A660();
      sub_23F3756E8();
      v19 = v18;
      v20 = v16[2];
      v21 = (v17 & 1) == 0;
      if (__OFADD__(v20, v21))
        break;
      v22 = v17;
      if (v16[3] < v20 + v21)
      {
        sub_23F514398();
        v16 = v52;
        sub_23F3756E8();
        if ((v22 & 1) != (v24 & 1))
          goto LABEL_21;
        v19 = v23;
      }
      if ((v22 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        v16 = v52;
        v25 = v52[7];
        v26 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
        v26(v49, v50, v51);
        v27 = *(_QWORD *)(v25 + 8 * v19);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v25 + 8 * v19) = v27;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_23F3777D8();
          v27 = v35;
          *(_QWORD *)(v25 + 8 * v19) = v35;
        }
        v29 = *(_QWORD *)(v27 + 16);
        if (v29 >= *(_QWORD *)(v27 + 24) >> 1)
        {
          sub_23F3777D8();
          v27 = v36;
          *(_QWORD *)(v25 + 8 * v19) = v36;
        }
        v6 = v39;
        *(_QWORD *)(v27 + 16) = v29 + 1;
        v30 = v46;
        v26((char *)(v27 + v47 + v29 * v46), v49, v51);
        v4 = v44;
        v3 = v45;
        v7 = v43;
      }
      else
      {
        sub_23F35D2E8(&qword_256E6FFD8);
        v31 = swift_allocObject();
        *(_OWORD *)(v31 + 16) = v40;
        (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v31 + v47, v50, v51);
        v16[(v19 >> 6) + 8] |= 1 << v19;
        (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v16[6] + *(_QWORD *)(v4 + 72) * v19, v6, v3);
        *(_QWORD *)(v16[7] + 8 * v19) = v31;
        v32 = v16[2];
        v33 = __OFADD__(v32, 1);
        v34 = v32 + 1;
        if (v33)
          goto LABEL_20;
        v16[2] = v34;
        v30 = v46;
      }
      v14 += v30;
      if (!--v11)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v16;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    result = sub_23F61CC94();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

uint64_t sub_23F391FB4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = sub_23F619FAC();
  MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_23F61A648();
}

void sub_23F392030(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char v40;
  unint64_t v41;
  BOOL v42;
  uint64_t v43;
  _QWORD v44[2];
  char *i;
  char *v46;
  uint64_t v47;
  int64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  int64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD v60[2];
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;

  v2 = sub_23F35D2E8(&qword_256E70888);
  MEMORY[0x24BDAC7A8](v2);
  v53 = (char *)v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_23F619FAC();
  v50 = *(_QWORD *)(v58 - 8);
  v4 = MEMORY[0x24BDAC7A8](v58);
  v49 = (char *)v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v46 = (char *)v44 - v6;
  v52 = sub_23F35D2E8(&qword_256E708E8);
  v7 = MEMORY[0x24BDAC7A8](v52);
  v57 = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v44 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v51 = (char *)v44 - v12;
  v64 = MEMORY[0x24BEE4B00];
  sub_23F38231C(a1, v60);
  v47 = v60[1];
  v54 = v60[0];
  v55 = v62;
  v13 = v63;
  v44[1] = v61;
  v48 = (unint64_t)(v61 + 64) >> 6;
  sub_23F617BA0();
  for (i = v11; ; v11 = i)
  {
    while (1)
    {
      if (v13)
      {
        v14 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v15 = v14 | (v55 << 6);
      }
      else
      {
        v16 = v55 + 1;
        if (__OFADD__(v55, 1))
          goto LABEL_36;
        if (v16 >= v48)
          goto LABEL_34;
        v17 = *(_QWORD *)(v47 + 8 * v16);
        v18 = v55 + 1;
        if (!v17)
        {
          v18 = v55 + 2;
          if (v55 + 2 >= v48)
            goto LABEL_34;
          v17 = *(_QWORD *)(v47 + 8 * v18);
          if (!v17)
          {
            v18 = v55 + 3;
            if (v55 + 3 >= v48)
              goto LABEL_34;
            v17 = *(_QWORD *)(v47 + 8 * v18);
            if (!v17)
            {
              v18 = v55 + 4;
              if (v55 + 4 >= v48)
                goto LABEL_34;
              v17 = *(_QWORD *)(v47 + 8 * v18);
              if (!v17)
              {
                v18 = v55 + 5;
                if (v55 + 5 >= v48)
                  goto LABEL_34;
                v17 = *(_QWORD *)(v47 + 8 * v18);
                if (!v17)
                {
                  v19 = v55 + 6;
                  while (v19 < v48)
                  {
                    v17 = *(_QWORD *)(v47 + 8 * v19++);
                    if (v17)
                    {
                      v18 = v19 - 1;
                      goto LABEL_19;
                    }
                  }
LABEL_34:
                  sub_23F382E18();
                  return;
                }
              }
            }
          }
        }
LABEL_19:
        v13 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v18 << 6);
        v55 = v18;
      }
      v20 = v54;
      v21 = *(_QWORD *)(v54 + 48);
      v22 = sub_23F617D08();
      v23 = *(_QWORD *)(v22 - 8);
      v56 = *(_QWORD *)(v23 + 72);
      v24 = (uint64_t)v51;
      (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))(v51, v21 + v56 * v15, v22);
      v25 = v52;
      *(_QWORD *)(v24 + *(int *)(v52 + 48)) = *(_QWORD *)(*(_QWORD *)(v20 + 56) + 8 * v15);
      sub_23F383004(v24, (uint64_t)v11, &qword_256E708E8);
      v26 = *(int *)(v25 + 48);
      swift_getKeyPath();
      v59 = *(_QWORD *)&v11[v26];
      sub_23F617BA0();
      sub_23F617BA0();
      v27 = (uint64_t)v53;
      swift_getAtKeyPath();
      swift_release();
      swift_bridgeObjectRelease();
      v28 = v58;
      if (sub_23F36195C(v27, 1, v58) != 1)
        break;
      sub_23F3625D8((uint64_t)v11, &qword_256E708E8);
      sub_23F3625D8(v27, &qword_256E70888);
    }
    v29 = *(void (**)(char *, uint64_t, uint64_t))(v50 + 32);
    v30 = v46;
    v29(v46, v27, v28);
    v31 = v28;
    v32 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v32(v57, v11, v22);
    v29(v49, (uint64_t)v30, v31);
    v33 = v64;
    if (*(_QWORD *)(v64 + 24) <= *(_QWORD *)(v64 + 16))
    {
      sub_23F5141CC();
      v33 = v64;
    }
    sub_23F3612C0(&qword_256E6FFB0, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52158]);
    v34 = sub_23F61C040();
    v35 = v33 + 64;
    v36 = -1 << *(_BYTE *)(v33 + 32);
    v37 = v34 & ~v36;
    v38 = v37 >> 6;
    if (((-1 << v37) & ~*(_QWORD *)(v33 + 64 + 8 * (v37 >> 6))) == 0)
      break;
    v39 = __clz(__rbit64((-1 << v37) & ~*(_QWORD *)(v33 + 64 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
LABEL_33:
    *(_QWORD *)(v35 + ((v39 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v39;
    v32((char *)(*(_QWORD *)(v33 + 48) + v39 * v56), v57, v22);
    v29((char *)(*(_QWORD *)(v33 + 56) + *(_QWORD *)(v50 + 72) * v39), (uint64_t)v49, v58);
    ++*(_QWORD *)(v33 + 16);
    swift_bridgeObjectRelease();
  }
  v40 = 0;
  v41 = (unint64_t)(63 - v36) >> 6;
  while (++v38 != v41 || (v40 & 1) == 0)
  {
    v42 = v38 == v41;
    if (v38 == v41)
      v38 = 0;
    v40 |= v42;
    v43 = *(_QWORD *)(v35 + 8 * v38);
    if (v43 != -1)
    {
      v39 = __clz(__rbit64(~v43)) + (v38 << 6);
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_36:
  __break(1u);
}

char *sub_23F39257C(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _BYTE *v16;
  uint64_t v17;
  char *v18;
  _QWORD v20[2];

  v2 = v1;
  v4 = sub_23F35D2E8(&qword_256E70888);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F619FAC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for AlphaExpressionParser.StatefulExpressionParser(0);
  v12 = &v1[*(int *)(v11 + 36)];
  v13 = *(_QWORD *)v12;
  if (*(_QWORD *)(*(_QWORD *)v12 + 16) && (sub_23F3756E8(), (v15 & 1) != 0))
  {
    v2 = *(char **)(*(_QWORD *)(v13 + 56) + 8 * v14);
    sub_23F617BA0();
  }
  else
  {
    sub_23F3685E0(a1, *(_QWORD *)&v2[*(int *)(v11 + 40)]);
    if (sub_23F36195C((uint64_t)v6, 1, v7) == 1)
    {
      sub_23F3625D8((uint64_t)v6, &qword_256E70888);
      sub_23F39B904();
      swift_allocError();
      *v16 = 3;
      swift_willThrow();
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
      v17 = v20[1];
      v18 = sub_23F392754((uint64_t)v10);
      if (!v17)
      {
        v2 = v18;
        sub_23F617BA0();
        sub_23F37E1B4();
      }
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
  }
  return v2;
}

char *sub_23F392754(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  int64_t v64;
  int v65;
  unint64_t v66;
  int v67;
  unint64_t v68;
  uint64_t *v69;
  BOOL v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t);
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  unint64_t v102;
  char *v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t *v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  unint64_t v147;
  unint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  unint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  unint64_t v165;
  uint64_t v166;
  uint64_t v167;
  _QWORD *v168;
  uint64_t v169;
  unint64_t v170;
  unint64_t *v171;
  _BYTE *v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  unint64_t v177;
  uint64_t v178;
  uint64_t v179;
  _QWORD *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  _QWORD *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  _QWORD *v194;
  uint64_t v195;
  char *v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  char *v203;
  uint64_t v204;
  unint64_t v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  _BYTE *v209;
  uint64_t v210;
  uint64_t v211;
  _QWORD *v212;
  char *v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  _QWORD *v220;
  char *v221;
  uint64_t v222;
  unint64_t v223;
  uint64_t v224;
  char *v225;
  uint64_t v226;
  unint64_t v227;
  uint64_t v228;
  char *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  _QWORD *v235;
  uint64_t v236;
  unint64_t v237;
  uint64_t v238;
  char *v239;
  char *v240;
  uint64_t v241;
  uint64_t v242;
  char *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  int64_t v247;
  uint64_t v248;
  int64_t v249;
  uint64_t v250;
  uint64_t v251;
  char *v252;
  uint64_t v254;
  BOOL v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  char *v262;
  uint64_t v263;
  unint64_t v264;
  char *v265;
  uint64_t v266;
  unint64_t v267;
  uint64_t v268;
  uint64_t v269;
  _QWORD *v270;
  uint64_t v271;
  unint64_t v272;
  uint64_t v273;
  uint64_t v274;
  char *v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  _QWORD *v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  unint64_t v288;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  _QWORD *v293;
  uint64_t v294;
  uint64_t v295;
  char *v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  char *v300;
  char *v301;
  char *v302;
  uint64_t v303;
  uint64_t v304;
  _QWORD *v305;
  uint64_t v306;
  uint64_t v307;
  _QWORD *v308;
  char *v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  _QWORD *v315;
  uint64_t v316;
  unint64_t v317;
  uint64_t v318;
  char *v319;
  char *v320;
  uint64_t v321;
  uint64_t v322;
  _QWORD *v323;
  uint64_t v324;
  char *v325;
  unint64_t v326;
  uint64_t v327;
  _QWORD *v328;
  uint64_t v329;
  unint64_t v330;
  uint64_t v331;
  char *v332;
  uint64_t v333;
  uint64_t v334;
  _QWORD *v335;
  _QWORD *v336;
  uint64_t v337;
  unint64_t v338;
  uint64_t v339;
  char *v340;
  char *v341;
  unint64_t v342;
  uint64_t v343;
  uint64_t *v344;
  unint64_t v345;
  unint64_t v346;
  uint64_t v347;
  unint64_t v348;
  unint64_t v349;
  uint64_t v350;
  char *v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  unint64_t v358;
  unint64_t v359;
  char *v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  char *v367;
  unint64_t v368;
  char *v369;
  uint64_t v370;
  unint64_t v371;
  uint64_t v372;
  _QWORD *v373;
  uint64_t v374;
  unint64_t v375;
  uint64_t v376;
  char *v377;
  char *v378;
  char *v379;
  uint64_t v380;
  uint64_t v381;
  _QWORD *v382;
  unint64_t v383;
  unint64_t v384;
  unint64_t v385;
  unint64_t v386;
  uint64_t v387;
  uint64_t v388;
  unint64_t v389;
  unint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  unint64_t v394;
  unint64_t v395;
  uint64_t v396;
  uint64_t v397;
  unint64_t v398;
  uint64_t v399;
  unint64_t v400;
  uint64_t v401;
  _QWORD *v402;
  uint64_t v403;
  unint64_t v404;
  uint64_t v405;
  char *v406;
  char *v407;
  uint64_t v408;
  uint64_t v409;
  _QWORD *v410;
  uint64_t v411;
  uint64_t v412;
  _QWORD *v413;
  unint64_t v414;
  char *v415;
  uint64_t v416;
  unint64_t v417;
  uint64_t v418;
  uint64_t v419;
  _QWORD *v420;
  unint64_t v421;
  char *v422;
  _BYTE *v423;
  uint64_t v424;
  char *v425;
  char *v426;
  uint64_t v427;
  uint64_t v428;
  char *v429;
  char *v430;
  uint64_t v431;
  uint64_t v432;
  char *v433;
  char *v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  char *v438;
  uint64_t v439;
  uint64_t v440;
  char *v441;
  char *v442;
  char *v443;
  uint64_t v444;
  uint64_t v445;
  char *v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  char *v451;
  char *v452;
  char *v453;
  char *v454;
  uint64_t v455;
  uint64_t v456;
  char *v457;
  uint64_t v458;
  uint64_t v459;
  char *v460;
  uint64_t v461;
  uint64_t v462;
  char *v463;
  uint64_t v464;
  uint64_t v465;
  _QWORD *v466;
  char *v467;
  char *v468;
  uint64_t v469;
  char *v470;
  uint64_t v471;
  char *v472;
  char *v473;
  uint64_t v474;
  uint64_t v475;
  char *v476;
  char *v477;
  uint64_t v478;
  uint64_t v479;
  char *v480;
  char *v481;
  uint64_t v482;
  uint64_t v483;
  char *v484;
  uint64_t v485;
  uint64_t v486;
  char *v487;
  char *v488;
  uint64_t v489;
  __int128 v490;
  uint64_t v491;
  __int128 v492;
  uint64_t v493;
  __int128 v494;
  uint64_t v495;
  __int128 v496;
  char *v497;
  uint64_t v498;
  __int128 v499;
  char *v500;
  char v501;
  uint64_t v502;
  unint64_t v503;
  char *v504;
  uint64_t v505;
  unint64_t v506;
  __int128 v507;
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  uint64_t v513;

  *(_QWORD *)&v499 = a1;
  v428 = sub_23F61A264();
  v427 = *(_QWORD *)(v428 - 8);
  MEMORY[0x24BDAC7A8](v428);
  v426 = (char *)&v424 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v432 = sub_23F61A5AC();
  v431 = *(_QWORD *)(v432 - 8);
  MEMORY[0x24BDAC7A8](v432);
  v430 = (char *)&v424 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v436 = sub_23F61A6FC();
  v435 = *(_QWORD *)(v436 - 8);
  MEMORY[0x24BDAC7A8](v436);
  v434 = (char *)&v424 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23F35D2E8(&qword_256E6FFA0);
  MEMORY[0x24BDAC7A8](v4);
  v437 = (uint64_t)&v424 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v440 = sub_23F61A3D8();
  v439 = *(_QWORD *)(v440 - 8);
  MEMORY[0x24BDAC7A8](v440);
  v438 = (char *)&v424 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v445 = sub_23F61AB28();
  v444 = *(_QWORD *)(v445 - 8);
  MEMORY[0x24BDAC7A8](v445);
  v443 = (char *)&v424 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v450 = sub_23F61A780();
  v449 = *(_QWORD *)(v450 - 8);
  MEMORY[0x24BDAC7A8](v450);
  v442 = (char *)&v424 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v448 = sub_23F61A738();
  v447 = *(_QWORD *)(v448 - 8);
  MEMORY[0x24BDAC7A8](v448);
  v446 = (char *)&v424 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v456 = sub_23F61A75C();
  v455 = *(_QWORD *)(v456 - 8);
  MEMORY[0x24BDAC7A8](v456);
  v452 = (char *)&v424 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v459 = sub_23F61A2C4();
  v458 = *(_QWORD *)(v459 - 8);
  MEMORY[0x24BDAC7A8](v459);
  v457 = (char *)&v424 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v462 = sub_23F61A204();
  v461 = *(_QWORD *)(v462 - 8);
  MEMORY[0x24BDAC7A8](v462);
  v460 = (char *)&v424 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v471 = sub_23F61AE94();
  v469 = *(_QWORD *)(v471 - 8);
  MEMORY[0x24BDAC7A8](v471);
  v470 = (char *)&v424 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v475 = sub_23F61A42C();
  v474 = *(_QWORD *)(v475 - 8);
  MEMORY[0x24BDAC7A8](v475);
  v473 = (char *)&v424 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v483 = sub_23F61A180();
  v482 = *(_QWORD *)(v483 - 8);
  MEMORY[0x24BDAC7A8](v483);
  v481 = (char *)&v424 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v479 = sub_23F61A438();
  v478 = *(_QWORD *)(v479 - 8);
  MEMORY[0x24BDAC7A8](v479);
  v477 = (char *)&v424 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v486 = sub_23F61A468();
  v485 = *(_QWORD *)(v486 - 8);
  MEMORY[0x24BDAC7A8](v486);
  v484 = (char *)&v424 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v490 = sub_23F61A60C();
  v489 = *(_QWORD *)(v490 - 8);
  MEMORY[0x24BDAC7A8](v490);
  v488 = (char *)&v424 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v493 = sub_23F61A630();
  *(_QWORD *)&v492 = *(_QWORD *)(v493 - 8);
  MEMORY[0x24BDAC7A8](v493);
  v491 = (uint64_t)&v424 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v465 = sub_23F61A24C();
  v464 = *(_QWORD *)(v465 - 8);
  MEMORY[0x24BDAC7A8](v465);
  v463 = (char *)&v424 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v496 = sub_23F617D08();
  *(_QWORD *)&v494 = *(_QWORD *)(v496 - 8);
  v21 = MEMORY[0x24BDAC7A8](v496);
  v425 = (char *)&v424 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v429 = (char *)&v424 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v433 = (char *)&v424 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v441 = (char *)&v424 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v451 = (char *)&v424 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v454 = (char *)&v424 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v453 = (char *)&v424 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v468 = (char *)&v424 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  v467 = (char *)&v424 - v38;
  v39 = MEMORY[0x24BDAC7A8](v37);
  v472 = (char *)&v424 - v40;
  v41 = MEMORY[0x24BDAC7A8](v39);
  v480 = (char *)&v424 - v42;
  v43 = MEMORY[0x24BDAC7A8](v41);
  v476 = (char *)&v424 - v44;
  v45 = MEMORY[0x24BDAC7A8](v43);
  v47 = (char *)&v424 - v46;
  v48 = MEMORY[0x24BDAC7A8](v45);
  v487 = (char *)&v424 - v49;
  MEMORY[0x24BDAC7A8](v48);
  v51 = (char *)&v424 - v50;
  v498 = type metadata accessor for StatementSegment(0);
  v497 = *(char **)(v498 - 8);
  MEMORY[0x24BDAC7A8](v498);
  v466 = (uint64_t *)((char *)&v424 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0));
  v53 = sub_23F61A570();
  v54 = *(_QWORD *)(v53 - 8);
  v55 = MEMORY[0x24BDAC7A8](v53);
  v57 = (uint64_t *)((char *)&v424 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v55);
  v59 = (char *)&v424 - v58;
  v60 = sub_23F619FAC();
  v61 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60);
  v63 = (char *)&v424 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v61 + 16))(v63, v499, v60);
  LODWORD(v64) = (*(uint64_t (**)(char *, uint64_t))(v61 + 88))(v63, v60);
  if ((_DWORD)v64 == *MEMORY[0x24BE54D08])
  {
    (*(void (**)(char *, uint64_t))(v61 + 96))(v63, v60);
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v59, v63, v53);
    (*(void (**)(uint64_t *, char *, uint64_t))(v54 + 16))(v57, v59, v53);
    v65 = (*(uint64_t (**)(uint64_t *, uint64_t))(v54 + 88))(v57, v53);
    v66 = (unint64_t)v59;
    if (v65 == *MEMORY[0x24BE55690])
    {
      (*(void (**)(uint64_t *, uint64_t))(v54 + 96))(v57, v53);
      v67 = *(unsigned __int8 *)v57;
      sub_23F35D2E8(&qword_256E704B8);
      v68 = (v497[80] + 32) & ~(unint64_t)v497[80];
      v59 = (char *)swift_allocObject();
      *((_OWORD *)v59 + 1) = xmmword_23F61E7E0;
      v69 = (uint64_t *)&v59[v68];
      v70 = v67 == 0;
      if (v67)
        v71 = 1702195796;
      else
        v71 = 0x65736C6146;
      if (v70)
        v72 = 0xE500000000000000;
      else
        v72 = 0xE400000000000000;
      sub_23F617BA0();
      v73 = sub_23F3B60F0(MEMORY[0x24BEE4B08], v71, v72);
      sub_23F369004(v73);
      *v69 = v71;
      v69[1] = v72;
      v69[2] = v74;
      swift_storeEnumTagMultiPayload();
      v75 = *(void (**)(char *, uint64_t))(v54 + 8);
      goto LABEL_34;
    }
    v82 = v500;
    if (v65 == *MEMORY[0x24BE55688])
    {
      (*(void (**)(uint64_t *, uint64_t))(v54 + 96))(v57, v53);
      *(_QWORD *)&v499 = v59;
      v83 = v54;
      v84 = *v57;
      sub_23F35D2E8(&qword_256E704B8);
      v85 = (v497[80] + 32) & ~(unint64_t)v497[80];
      v59 = (char *)swift_allocObject();
      *((_OWORD *)v59 + 1) = xmmword_23F61E7E0;
      v86 = &v59[v85];
      v505 = MEMORY[0x24BEE4B08];
      sub_23F35D2E8(&qword_256E70898);
      sub_23F61C55C();
      sub_23F61C55C();
      v87 = v505;
      v505 = 0;
      v506 = 0xE000000000000000;
      v502 = v84;
      sub_23F61CC1C();
      sub_23F61C280();
      swift_bridgeObjectRelease();
      v88 = v506;
      *(_QWORD *)v86 = v505;
      *((_QWORD *)v86 + 1) = v88;
      *((_QWORD *)v86 + 2) = v87;
      swift_storeEnumTagMultiPayload();
      v75 = *(void (**)(char *, uint64_t))(v83 + 8);
      v80 = (char *)v499;
LABEL_35:
      v81 = v53;
      goto LABEL_43;
    }
    if (v65 == *MEMORY[0x24BE556A8])
    {
      (*(void (**)(uint64_t *, uint64_t))(v54 + 96))(v57, v53);
      sub_23F35D2E8(&qword_256E704B8);
      v102 = (v497[80] + 32) & ~(unint64_t)v497[80];
      v59 = (char *)swift_allocObject();
      *((_OWORD *)v59 + 1) = xmmword_23F61E7E0;
      v103 = &v59[v102];
      v505 = MEMORY[0x24BEE4B08];
      sub_23F35D2E8(&qword_256E70898);
      sub_23F61C55C();
      sub_23F61C55C();
      v89 = v54;
      v104 = v505;
      v505 = 0;
      v506 = 0xE000000000000000;
      sub_23F61C4F0();
      sub_23F61C280();
      swift_bridgeObjectRelease();
      v105 = v506;
      *(_QWORD *)v103 = v505;
      *((_QWORD *)v103 + 1) = v105;
      *((_QWORD *)v103 + 2) = v104;
      swift_storeEnumTagMultiPayload();
LABEL_33:
      v75 = *(void (**)(char *, uint64_t))(v89 + 8);
      goto LABEL_34;
    }
    if (v65 == *MEMORY[0x24BE556B0])
    {
      (*(void (**)(uint64_t *, uint64_t))(v54 + 96))(v57, v53);
      *(_QWORD *)&v496 = v54;
      sub_23F35D2E8(&qword_256E704B8);
      v111 = (v497[80] + 32) & ~(unint64_t)v497[80];
      v59 = (char *)swift_allocObject();
      *((_OWORD *)v59 + 1) = xmmword_23F61E7E0;
      v112 = (uint64_t *)&v59[v111];
      v505 = 34;
      v506 = 0xE100000000000000;
      sub_23F61C280();
      swift_bridgeObjectRelease();
      sub_23F61C280();
      v113 = v505;
      v114 = v506;
      sub_23F3E3A60((uint64_t)&unk_250FD08F8);
      v116 = v115;
      sub_23F617BA0();
      v117 = sub_23F3B60F0(v116, v113, v114);
      swift_bridgeObjectRelease();
      sub_23F369004(v117);
      *v112 = v113;
      v112[1] = v114;
      v112[2] = v118;
      swift_storeEnumTagMultiPayload();
      v75 = *(void (**)(char *, uint64_t))(v496 + 8);
LABEL_34:
      v80 = (char *)v66;
      goto LABEL_35;
    }
    if (v65 == *MEMORY[0x24BE556A0])
    {
      (*(void (**)(uint64_t *, uint64_t))(v54 + 96))(v57, v53);
      v125 = sub_23F3901C8(*v57, v495);
      if (v82)
      {
        (*(void (**)(char *, uint64_t))(v54 + 8))(v59, v53);
        swift_bridgeObjectRelease();
        return v59;
      }
      v176 = v125;
      swift_bridgeObjectRelease();
      v495 = sub_23F35D2E8(&qword_256E704B8);
      v177 = (v497[80] + 32) & ~(unint64_t)v497[80];
      *(_QWORD *)&v496 = v54;
      v178 = swift_allocObject();
      v497 = (char *)v53;
      v179 = v178;
      v494 = xmmword_23F61E7E0;
      *(_OWORD *)(v178 + 16) = xmmword_23F61E7E0;
      v180 = (_QWORD *)(v178 + v177);
      *v180 = 91;
      v180[1] = 0xE100000000000000;
      v500 = 0;
      *(_QWORD *)&v499 = v66;
      v181 = MEMORY[0x24BEE4B08];
      v180[2] = MEMORY[0x24BEE4B08];
      v182 = v181;
      swift_storeEnumTagMultiPayload();
      v505 = v176;
      v183 = (uint64_t)v466;
      *v466 = 8236;
      *(_QWORD *)(v183 + 8) = 0xE200000000000000;
      *(_QWORD *)(v183 + 16) = v182;
      swift_storeEnumTagMultiPayload();
      sub_23F35D2E8(&qword_256E704A8);
      sub_23F39BBFC(&qword_256E708B0, &qword_256E704A8);
      sub_23F61C598();
      sub_23F3663AC(v183, type metadata accessor for StatementSegment);
      swift_bridgeObjectRelease();
      v505 = v179;
      sub_23F386734();
      v184 = v505;
      v185 = swift_allocObject();
      *(_OWORD *)(v185 + 16) = v494;
      v186 = (_QWORD *)(v185 + v177);
      *v186 = 93;
      v186[1] = 0xE100000000000000;
      v186[2] = MEMORY[0x24BEE4B08];
      swift_storeEnumTagMultiPayload();
      v505 = v184;
      sub_23F386734();
      v59 = (char *)v505;
      v75 = *(void (**)(char *, uint64_t))(v496 + 8);
      v80 = (char *)v499;
      v171 = (unint64_t *)&v513;
LABEL_58:
      v81 = *(v171 - 32);
      goto LABEL_43;
    }
    if (v65 == *MEMORY[0x24BE556B8])
    {
      (*(void (**)(uint64_t *, uint64_t))(v54 + 96))(v57, v53);
      *(_QWORD *)&v499 = *v57;
      sub_23F35D2E8(&qword_256E704B8);
      v147 = (v497[80] + 32) & ~(unint64_t)v497[80];
      v59 = (char *)swift_allocObject();
      *((_OWORD *)v59 + 1) = xmmword_23F61E7E0;
      v148 = v66;
      v149 = v54;
      v150 = &v59[v147];
      v505 = MEMORY[0x24BEE4B08];
      sub_23F35D2E8(&qword_256E70898);
      sub_23F61C55C();
      sub_23F61C55C();
      v151 = v505;
      v505 = 0;
      v506 = 0xE000000000000000;
      sub_23F617BA0();
      sub_23F61C280();
      swift_bridgeObjectRelease_n();
      v152 = v506;
      *(_QWORD *)v150 = v505;
      *((_QWORD *)v150 + 1) = v152;
      *((_QWORD *)v150 + 2) = v151;
      swift_storeEnumTagMultiPayload();
      v75 = *(void (**)(char *, uint64_t))(v149 + 8);
      v80 = (char *)v148;
      goto LABEL_35;
    }
    if (v65 != *MEMORY[0x24BE55698])
    {
      while (1)
      {
LABEL_177:
        sub_23F61CC58();
        __break(1u);
        swift_release();
        __break(1u);
      }
    }
    sub_23F39B904();
    swift_allocError();
    *v172 = 7;
    swift_willThrow();
    v75 = *(void (**)(char *, uint64_t))(v54 + 8);
    goto LABEL_19;
  }
  if ((_DWORD)v64 == *MEMORY[0x24BE54CA0])
  {
    (*(void (**)(char *, uint64_t))(v61 + 96))(v63, v60);
    v76 = v494;
    v77 = v496;
    (*(void (**)(char *, char *, _QWORD))(v494 + 32))(v51, v63, v496);
    v78 = v500;
    v79 = sub_23F39257C(v51);
    if (v78)
    {
      v75 = *(void (**)(char *, uint64_t))(v76 + 8);
      v80 = v51;
LABEL_13:
      v81 = v77;
LABEL_43:
      v75(v80, v81);
      return v59;
    }
    v59 = (char *)v79;
    v75 = *(void (**)(char *, uint64_t))(v76 + 8);
    v80 = v51;
    goto LABEL_26;
  }
  if ((_DWORD)v64 == *MEMORY[0x24BE54D18])
  {
    (*(void (**)(char *, uint64_t))(v61 + 96))(v63, v60);
    v89 = v492;
    v66 = v491;
    v53 = v493;
    (*(void (**)(uint64_t, char *, uint64_t))(v492 + 32))(v491, v63, v493);
    sub_23F35D2E8(&qword_256E704B8);
    v90 = (v497[80] + 32) & ~(unint64_t)v497[80];
    v91 = swift_allocObject();
    *(_OWORD *)(v91 + 16) = xmmword_23F61E7E0;
    v92 = (uint64_t *)(v91 + v90);
    v93 = v488;
    sub_23F61A45C();
    sub_23F428B04();
    v95 = v94;
    v97 = v96;
    (*(void (**)(char *, _QWORD))(v489 + 8))(v93, v490);
    sub_23F617BA0();
    v98 = v500;
    v99 = sub_23F3B60F0(MEMORY[0x24BEE4B08], v95, v97);
    sub_23F369004(v99);
    *v92 = v95;
    v92[1] = v97;
    v92[2] = v100;
    swift_storeEnumTagMultiPayload();
    v101 = v487;
    sub_23F61A618();
    sub_23F39257C(v101);
    if (!v98)
    {
      (*(void (**)(char *, _QWORD))(v494 + 8))(v101, v496);
      v505 = v91;
      sub_23F386734();
      v59 = (char *)v505;
      goto LABEL_33;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, _QWORD))(v494 + 8))(v101, v496);
    v75 = *(void (**)(char *, uint64_t))(v89 + 8);
LABEL_19:
    v80 = (char *)v66;
    v81 = v53;
    goto LABEL_43;
  }
  if ((_DWORD)v64 != *MEMORY[0x24BE54D00])
  {
    v119 = v495;
    if ((_DWORD)v64 == *MEMORY[0x24BE54CC8])
    {
      (*(void (**)(char *, uint64_t))(v61 + 96))(v63, v60);
      v120 = v482;
      v59 = v481;
      v77 = v483;
      v121 = (*(uint64_t (**)(char *, char *, uint64_t))(v482 + 32))(v481, v63, v483);
      v122 = v480;
      MEMORY[0x24266D678](v121);
      v123 = v500;
      v124 = sub_23F39257C(v122);
      if (!v123)
      {
        v164 = v124;
        (*(void (**)(char *, _QWORD))(v494 + 8))(v122, v496);
        sub_23F35D2E8(&qword_256E704B8);
        v165 = (v497[80] + 32) & ~(unint64_t)v497[80];
        v166 = swift_allocObject();
        *(_OWORD *)(v166 + 16) = xmmword_23F61E7E0;
        v167 = v120;
        v168 = (_QWORD *)(v166 + v165);
        v505 = MEMORY[0x24BEE4B08];
        sub_23F35D2E8(&qword_256E70898);
        sub_23F61C55C();
        sub_23F61C55C();
        v169 = v505;
        v505 = 0;
        v506 = 0xE000000000000000;
        sub_23F61C280();
        sub_23F61A174();
        sub_23F61C280();
        swift_bridgeObjectRelease();
        v170 = v506;
        *v168 = v505;
        v168[1] = v170;
        v168[2] = v169;
        swift_storeEnumTagMultiPayload();
        v505 = v164;
        sub_23F386734();
        v80 = v59;
        v59 = (char *)v505;
        v75 = *(void (**)(char *, uint64_t))(v167 + 8);
        v171 = (unint64_t *)&v501;
        goto LABEL_58;
      }
      (*(void (**)(char *, _QWORD))(v494 + 8))(v122, v496);
      v75 = *(void (**)(char *, uint64_t))(v120 + 8);
      v80 = v59;
      goto LABEL_13;
    }
    if ((_DWORD)v64 == *MEMORY[0x24BE54CF8])
    {
      (*(void (**)(char *, uint64_t))(v61 + 96))(v63, v60);
      v126 = v474;
      v127 = v473;
      v128 = v475;
      v129 = (*(uint64_t (**)(char *, char *, uint64_t))(v474 + 32))(v473, v63, v475);
      v130 = v472;
      MEMORY[0x24266D924](v129);
      v131 = v500;
      v132 = sub_23F39257C(v130);
      if (v131)
      {
        (*(void (**)(char *, _QWORD))(v494 + 8))(v130, v496);
        (*(void (**)(char *, uint64_t))(v126 + 8))(v127, v128);
        return v59;
      }
      v187 = v132;
      v188 = v496;
      *(_QWORD *)&v499 = *(_QWORD *)(v494 + 8);
      ((void (*)(char *, _QWORD))v499)(v130, v496);
      v189 = sub_23F35D2E8(&qword_256E704B8);
      v190 = *((_QWORD *)v497 + 9);
      v191 = v497[80];
      v192 = (v191 + 32) & ~v191;
      v497 = (char *)v189;
      *(_QWORD *)&v494 = v192 + v190;
      v493 = v191 | 7;
      v193 = swift_allocObject();
      v492 = xmmword_23F61E7E0;
      *(_OWORD *)(v193 + 16) = xmmword_23F61E7E0;
      v194 = (_QWORD *)(v193 + v192);
      *v194 = 91;
      v194[1] = 0xE100000000000000;
      v194[2] = MEMORY[0x24BEE4B08];
      swift_storeEnumTagMultiPayload();
      v505 = v187;
      sub_23F386734();
      v195 = v505;
      v196 = v467;
      sub_23F61A420();
      sub_23F39257C(v196);
      v500 = 0;
      ((void (*)(char *, uint64_t))v499)(v196, v188);
      v505 = v195;
      sub_23F386734();
      v210 = v505;
      v211 = swift_allocObject();
      *(_OWORD *)(v211 + 16) = v492;
      v212 = (_QWORD *)(v211 + v192);
      *v212 = 93;
      v212[1] = 0xE100000000000000;
      v212[2] = MEMORY[0x24BEE4B08];
      swift_storeEnumTagMultiPayload();
      v505 = v210;
      sub_23F386734();
      v59 = (char *)v505;
      v75 = *(void (**)(char *, uint64_t))(v474 + 8);
      v80 = v473;
      v213 = (char *)&v499 + 8;
LABEL_64:
      v81 = *((_QWORD *)v213 - 32);
      goto LABEL_43;
    }
    if ((_DWORD)v64 == *MEMORY[0x24BE54CC0])
    {
      (*(void (**)(char *, uint64_t))(v61 + 96))(v63, v60);
      v153 = v469;
      v154 = v470;
      v155 = v471;
      (*(void (**)(char *, char *, uint64_t))(v469 + 32))(v470, v63, v471);
      v156 = *(_QWORD *)(v119
                       + *(int *)(type metadata accessor for AlphaExpressionParser.StatefulExpressionParser(0) + 44));
      v157 = sub_23F617BA0();
      v158 = (uint64_t)v468;
      MEMORY[0x24266E38C](v157);
      sub_23F368594(v158, v156);
      v160 = v159;
      v162 = v161;
      swift_bridgeObjectRelease();
      v59 = *(char **)(v494 + 8);
      ((void (*)(uint64_t, _QWORD))v59)(v158, v496);
      v163 = v500;
      if (!v162)
      {
        sub_23F39B904();
        swift_allocError();
        *v209 = 6;
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v153 + 8))(v154, v155);
        return v59;
      }
      sub_23F396D7C(v160, v162, (uint64_t *)&v507);
      if (v163)
      {
        (*(void (**)(char *, uint64_t))(v153 + 8))(v154, v155);
        swift_bridgeObjectRelease();
        return v59;
      }
      swift_bridgeObjectRelease();
      v505 = sub_23F61AE88();
      sub_23F617BA0();
      sub_23F399084(&v505);
      swift_bridgeObjectRelease();
      v226 = v505;
      v227 = *((_QWORD *)&v507 + 1);
      v491 = v507;
      v228 = v508;
      v511 = v510;
      v512 = v509;
      sub_23F617BA0();
      sub_23F617BA0();
      sub_23F39B940((uint64_t)&v512);
      sub_23F39B940((uint64_t)&v511);
      sub_23F390024(v226, v119, &v507);
      *(_QWORD *)&v499 = v228;
      swift_release();
      v258 = v511;
      v259 = *(_QWORD *)(v511 + 16);
      v500 = 0;
      v488 = v59;
      if (v259)
      {
        sub_23F35D2E8(&qword_256E70490);
        v260 = swift_allocObject();
        *(_OWORD *)(v260 + 16) = xmmword_23F61E7E0;
        *(_QWORD *)(v260 + 32) = v258;
        sub_23F617BA0();
      }
      else
      {
        v260 = MEMORY[0x24BEE4AF8];
      }
      v276 = v499;
      v505 = v260;
      sub_23F386750();
      v250 = sub_23F35D2E8(&qword_256E704B8);
      v277 = v497[80];
      v278 = (v277 + 32) & ~v277;
      *(_QWORD *)&v492 = *((_QWORD *)v497 + 9);
      v497 = (char *)(v278 + v492);
      v489 = v277 | 7;
      v279 = swift_allocObject();
      v490 = xmmword_23F61E7E0;
      *(_OWORD *)(v279 + 16) = xmmword_23F61E7E0;
      v280 = (_QWORD *)(v279 + v278);
      *v280 = 8236;
      v280[1] = 0xE200000000000000;
      v280[2] = MEMORY[0x24BEE4B08];
      swift_storeEnumTagMultiPayload();
      v502 = v279;
      sub_23F35D2E8(&qword_256E708A0);
      sub_23F39BBFC(&qword_256E708A8, &qword_256E708A0);
      v281 = sub_23F61C598();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v494 = *(_QWORD *)(v281 + 16);
      if (!(_QWORD)v494)
      {
LABEL_120:
        v487 = (char *)v250;
        swift_bridgeObjectRelease();
        v292 = swift_allocObject();
        *(_OWORD *)(v292 + 16) = v490;
        v293 = (_QWORD *)(v292 + v278);
        sub_23F528350(v491, v227, v276, 0x28uLL, 0xE100000000000000, MEMORY[0x24BEE4B08]);
        v295 = v294;
        v59 = v296;
        v298 = v297;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_23F39B968((uint64_t)&v512);
        sub_23F39B968((uint64_t)&v511);
        *v293 = v295;
        v293[1] = v59;
        v293[2] = v298;
        v299 = swift_storeEnumTagMultiPayload();
        v300 = v453;
        v301 = v470;
        MEMORY[0x24266E38C](v299);
        v302 = v500;
        sub_23F39257C(v300);
        v500 = v302;
        if (v302)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          ((void (*)(char *, _QWORD))v488)(v300, v496);
          (*(void (**)(char *, uint64_t))(v469 + 8))(v301, v471);
          return v59;
        }
        ((void (*)(char *, _QWORD))v488)(v300, v496);
        v505 = v292;
        sub_23F386734();
        v303 = v505;
        v304 = swift_allocObject();
        *(_OWORD *)(v304 + 16) = v490;
        v305 = (_QWORD *)(v304 + v278);
        *v305 = 8236;
        v305[1] = 0xE200000000000000;
        v305[2] = MEMORY[0x24BEE4B08];
        swift_storeEnumTagMultiPayload();
        v505 = v303;
        sub_23F386734();
        sub_23F386734();
        v306 = v505;
        v307 = swift_allocObject();
        *(_OWORD *)(v307 + 16) = v490;
        v308 = (_QWORD *)(v307 + v278);
        *v308 = 41;
        v308[1] = 0xE100000000000000;
        v308[2] = MEMORY[0x24BEE4B08];
        swift_storeEnumTagMultiPayload();
        v505 = v306;
        sub_23F386734();
        v59 = (char *)v505;
        v75 = *(void (**)(char *, uint64_t))(v469 + 8);
        v80 = v301;
        v213 = (char *)&v496 + 8;
        goto LABEL_64;
      }
      v493 = v278;
      sub_23F617BA0();
      v282 = 0;
      v249 = MEMORY[0x24BEE4AF8];
      while (1)
      {
        v283 = v250;
        v250 = v227;
        v284 = v281;
        v59 = *(char **)(v281 + 8 * v282 + 32);
        v285 = *((_QWORD *)v59 + 2);
        v286 = *(_QWORD *)(v249 + 16);
        if (__OFADD__(v286, v285))
          goto LABEL_158;
        sub_23F617BA0();
        LODWORD(v64) = swift_isUniquelyReferenced_nonNull_native();
        if (!(_DWORD)v64 || v286 + v285 > *(_QWORD *)(v249 + 24) >> 1)
        {
          sub_23F377664();
          v249 = v64;
        }
        v276 = v499;
        v250 = v283;
        if (*((_QWORD *)v59 + 2))
        {
          v287 = *(_QWORD *)(v249 + 16);
          if ((*(_QWORD *)(v249 + 24) >> 1) - v287 < v285)
            goto LABEL_162;
          v288 = v249 + v493 + v287 * v492;
          if ((unint64_t)&v59[v493] < v288 + v285 * (_QWORD)v492
            && v288 < (unint64_t)&v59[v493 + v285 * v492])
          {
            goto LABEL_176;
          }
          LODWORD(v64) = swift_arrayInitWithCopy();
          if (v285)
          {
            v290 = *(_QWORD *)(v249 + 16);
            v255 = __OFADD__(v290, v285);
            v291 = v290 + v285;
            if (v255)
              goto LABEL_167;
            *(_QWORD *)(v249 + 16) = v291;
          }
        }
        else if (v285)
        {
          goto LABEL_159;
        }
        swift_bridgeObjectRelease();
        ++v282;
        v281 = v284;
        if ((_QWORD)v494 == v282)
        {
          swift_bridgeObjectRelease();
          v278 = v493;
          goto LABEL_120;
        }
      }
    }
    v59 = v500;
    if ((_DWORD)v64 == *MEMORY[0x24BE54CD8])
    {
      (*(void (**)(char *, uint64_t))(v61 + 96))(v63, v60);
      v173 = v464;
      v174 = v463;
      v77 = v465;
      (*(void (**)(char *, char *, uint64_t))(v464 + 32))(v463, v63, v465);
      v175 = sub_23F396820();
      if (v59)
      {
        v75 = *(void (**)(char *, uint64_t))(v173 + 8);
        v80 = v174;
        goto LABEL_13;
      }
      v59 = (char *)v175;
      v75 = *(void (**)(char *, uint64_t))(v173 + 8);
      v80 = v174;
LABEL_26:
      v81 = v77;
      goto LABEL_43;
    }
    if ((_DWORD)v64 == *MEMORY[0x24BE54CD0])
    {
      (*(void (**)(char *, uint64_t))(v61 + 96))(v63, v60);
      v197 = v460;
      (*(void (**)(char *, char *, uint64_t))(v461 + 32))(v460, v63, v462);
      v198 = sub_23F35D2E8(&qword_256E704B8);
      v199 = v497[80];
      v59 = (char *)((v199 + 32) & ~v199);
      *(_QWORD *)&v499 = *((_QWORD *)v497 + 9);
      v200 = v199 | 7;
      *(_QWORD *)&v494 = v198;
      v497 = &v59[v499];
      v201 = swift_allocObject();
      v496 = xmmword_23F61E7E0;
      *(_OWORD *)(v201 + 16) = xmmword_23F61E7E0;
      v202 = &v59[v201];
      v505 = MEMORY[0x24BEE4B08];
      sub_23F35D2E8(&qword_256E70898);
      sub_23F61C55C();
      v203 = v197;
      sub_23F61C55C();
      v204 = v505;
      v505 = 0;
      v506 = 0xE000000000000000;
      sub_23F61C280();
      sub_23F61C280();
      v205 = v506;
      *(_QWORD *)v202 = v505;
      *((_QWORD *)v202 + 1) = v205;
      *((_QWORD *)v202 + 2) = v204;
      swift_storeEnumTagMultiPayload();
      v206 = sub_23F61A1F8();
      v207 = v500;
      v208 = sub_23F390A3C(v206, v119);
      v500 = v207;
      if (v207)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v461 + 8))(v203, v462);
        return v59;
      }
      v241 = v208;
      v493 = v201;
      swift_bridgeObjectRelease();
      v505 = v241;
      v495 = v200;
      v242 = swift_allocObject();
      *(_OWORD *)(v242 + 16) = v496;
      v243 = &v59[v242];
      *(_QWORD *)v243 = 8236;
      *((_QWORD *)v243 + 1) = 0xE200000000000000;
      *((_QWORD *)v243 + 2) = MEMORY[0x24BEE4B08];
      swift_storeEnumTagMultiPayload();
      v502 = v242;
      sub_23F35D2E8(&qword_256E708A0);
      sub_23F39BBFC(&qword_256E708A8, &qword_256E708A0);
      v244 = sub_23F61C598();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v245 = *(_QWORD *)(v244 + 16);
      if (!v245)
      {
        v257 = v462;
LABEL_99:
        swift_bridgeObjectRelease();
        v505 = v493;
        sub_23F386734();
        v273 = v505;
        v274 = swift_allocObject();
        *(_OWORD *)(v274 + 16) = v496;
        v275 = &v59[v274];
        *(_QWORD *)v275 = 41;
        *((_QWORD *)v275 + 1) = 0xE100000000000000;
        *((_QWORD *)v275 + 2) = MEMORY[0x24BEE4B08];
        swift_storeEnumTagMultiPayload();
        v505 = v273;
        sub_23F386734();
        v59 = (char *)v505;
        (*(void (**)(char *, uint64_t))(v461 + 8))(v460, v257);
        return v59;
      }
      sub_23F617BA0();
      v246 = 0;
      v247 = MEMORY[0x24BEE4AF8];
      while (1)
      {
        v248 = *(_QWORD *)(v244 + 8 * v246 + 32);
        v249 = *(_QWORD *)(v248 + 16);
        v250 = *(_QWORD *)(v247 + 16);
        if (__OFADD__(v250, v249))
          break;
        sub_23F617BA0();
        LODWORD(v64) = swift_isUniquelyReferenced_nonNull_native();
        if (!(_DWORD)v64 || v250 + v249 > *(_QWORD *)(v247 + 24) >> 1)
        {
          sub_23F377664();
          v247 = v64;
        }
        v250 = v498;
        if (*(_QWORD *)(v248 + 16))
        {
          v251 = *(_QWORD *)(v247 + 16);
          if ((*(_QWORD *)(v247 + 24) >> 1) - v251 < v249)
          {
            __break(1u);
LABEL_162:
            __break(1u);
            goto LABEL_163;
          }
          v252 = &v59[v247 + v251 * v499];
          if (&v59[v248] < &v252[v249 * (_QWORD)v499] && v252 < &v59[v248 + v249 * (_QWORD)v499])
          {
LABEL_176:
            sub_23F61CA9C();
            __break(1u);
            goto LABEL_177;
          }
          LODWORD(v64) = swift_arrayInitWithCopy();
          if (v249)
          {
            v254 = *(_QWORD *)(v247 + 16);
            v255 = __OFADD__(v254, v249);
            v256 = v254 + v249;
            if (v255)
            {
              __break(1u);
LABEL_167:
              __break(1u);
              goto LABEL_168;
            }
            *(_QWORD *)(v247 + 16) = v256;
          }
        }
        else if (v249)
        {
          goto LABEL_157;
        }
        swift_bridgeObjectRelease();
        if (v245 == ++v246)
        {
          swift_bridgeObjectRelease();
          v257 = v462;
          goto LABEL_99;
        }
      }
      __break(1u);
LABEL_157:
      __break(1u);
LABEL_158:
      __break(1u);
LABEL_159:
      __break(1u);
      goto LABEL_160;
    }
    if ((_DWORD)v64 == *MEMORY[0x24BE54CE8])
    {
      (*(void (**)(char *, uint64_t))(v61 + 96))(v63, v60);
      v214 = v457;
      (*(void (**)(char *, char *, uint64_t))(v458 + 32))(v457, v63, v459);
      v215 = sub_23F35D2E8(&qword_256E704B8);
      v216 = *((_QWORD *)v497 + 9);
      v217 = v497[80];
      v218 = (v217 + 32) & ~v217;
      *(_QWORD *)&v499 = v215;
      v497 = (char *)(v218 + v216);
      v493 = v217 | 7;
      v219 = swift_allocObject();
      v492 = xmmword_23F61E7E0;
      *(_OWORD *)(v219 + 16) = xmmword_23F61E7E0;
      v220 = (_QWORD *)(v219 + v218);
      v505 = MEMORY[0x24BEE4B08];
      sub_23F35D2E8(&qword_256E70898);
      sub_23F61C55C();
      sub_23F61C55C();
      v221 = v59;
      v222 = v505;
      v505 = 0;
      v506 = 0xE000000000000000;
      sub_23F61C280();
      sub_23F61C280();
      v223 = v506;
      *v220 = v505;
      v220[1] = v223;
      v220[2] = v222;
      v59 = v214;
      v224 = swift_storeEnumTagMultiPayload();
      v225 = v454;
      MEMORY[0x24266D7B0](v224);
      sub_23F39257C(v225);
      v500 = v221;
      if (v221)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, _QWORD))(v494 + 8))(v225, v496);
        (*(void (**)(char *, uint64_t))(v458 + 8))(v59, v459);
        return v59;
      }
      (*(void (**)(char *, _QWORD))(v494 + 8))(v225, v496);
      v505 = v219;
      sub_23F386734();
      v268 = v505;
      v269 = swift_allocObject();
      *(_OWORD *)(v269 + 16) = v492;
      v270 = (_QWORD *)(v269 + v218);
      v505 = MEMORY[0x24BEE4B08];
      sub_23F61C55C();
      sub_23F61C55C();
      v271 = v505;
      v505 = 0;
      v506 = 0xE000000000000000;
      sub_23F61C280();
      v502 = sub_23F61A2B8();
      sub_23F61CC1C();
      sub_23F61C280();
      swift_bridgeObjectRelease();
      sub_23F61C280();
      v272 = v506;
      *v270 = v505;
      v270[1] = v272;
      v270[2] = v271;
      swift_storeEnumTagMultiPayload();
      v505 = v268;
      sub_23F386734();
      v80 = v59;
      v59 = (char *)v505;
      v75 = *(void (**)(char *, uint64_t))(v458 + 8);
      v213 = (char *)&v490 + 8;
      goto LABEL_64;
    }
    if ((_DWORD)v64 == *MEMORY[0x24BE54D30])
    {
      (*(void (**)(char *, uint64_t))(v61 + 96))(v63, v60);
      v229 = v452;
      (*(void (**)(char *, char *, uint64_t))(v455 + 32))(v452, v63, v456);
      v230 = sub_23F35D2E8(&qword_256E704B8);
      v231 = *((_QWORD *)v497 + 9);
      v232 = v497[80];
      v233 = (v232 + 32) & ~v232;
      *(_QWORD *)&v499 = v230;
      v497 = (char *)(v233 + v231);
      v493 = v232 | 7;
      v234 = swift_allocObject();
      v492 = xmmword_23F61E7E0;
      *(_OWORD *)(v234 + 16) = xmmword_23F61E7E0;
      v235 = (_QWORD *)(v234 + v233);
      v505 = MEMORY[0x24BEE4B08];
      sub_23F35D2E8(&qword_256E70898);
      sub_23F61C55C();
      sub_23F61C55C();
      v236 = v505;
      v505 = 0;
      v506 = 0xE000000000000000;
      sub_23F61C280();
      sub_23F61C280();
      v237 = v506;
      *v235 = v505;
      v235[1] = v237;
      v235[2] = v236;
      v59 = (char *)v498;
      v238 = swift_storeEnumTagMultiPayload();
      v239 = v451;
      MEMORY[0x24266DC54](v238);
      v240 = v500;
      sub_23F39257C(v239);
      if (v240)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, _QWORD))(v494 + 8))(v239, v496);
      }
      else
      {
        (*(void (**)(char *, _QWORD))(v494 + 8))(v239, v496);
        v505 = v234;
        sub_23F386734();
        v321 = v505;
        v322 = swift_allocObject();
        *(_OWORD *)(v322 + 16) = v492;
        v323 = (_QWORD *)(v322 + v233);
        *v323 = 41;
        v323[1] = 0xE100000000000000;
        v323[2] = MEMORY[0x24BEE4B08];
        swift_storeEnumTagMultiPayload();
        v505 = v321;
        sub_23F386734();
        v59 = (char *)v505;
      }
      (*(void (**)(char *, uint64_t))(v455 + 8))(v229, v456);
      return v59;
    }
    if ((_DWORD)v64 == *MEMORY[0x24BE54D28])
    {
      (*(void (**)(char *, uint64_t))(v61 + 96))(v63, v60);
      v261 = v447;
      v262 = v446;
      v263 = v448;
      (*(void (**)(char *, char *, uint64_t))(v447 + 32))(v446, v63, v448);
      sub_23F35D2E8(&qword_256E704B8);
      v264 = (v497[80] + 32) & ~(unint64_t)v497[80];
      v59 = (char *)swift_allocObject();
      *((_OWORD *)v59 + 1) = xmmword_23F61E7E0;
      v265 = &v59[v264];
      v505 = MEMORY[0x24BEE4B08];
      sub_23F35D2E8(&qword_256E70898);
      sub_23F61C55C();
      sub_23F61C55C();
      v266 = v505;
      v505 = 0;
      v506 = 0xE000000000000000;
      sub_23F61C280();
      sub_23F61C280();
      sub_23F61A720();
      sub_23F61C280();
      swift_bridgeObjectRelease();
      sub_23F61C280();
      v267 = v506;
      *(_QWORD *)v265 = v505;
      *((_QWORD *)v265 + 1) = v267;
      *((_QWORD *)v265 + 2) = v266;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, uint64_t))(v261 + 8))(v262, v263);
      return v59;
    }
    if ((_DWORD)v64 == *MEMORY[0x24BE54D38])
    {
      (*(void (**)(char *, uint64_t))(v61 + 96))(v63, v60);
      v309 = v442;
      (*(void (**)(char *, char *, uint64_t))(v449 + 32))(v442, v63, v450);
      v310 = sub_23F35D2E8(&qword_256E704B8);
      v311 = *((_QWORD *)v497 + 9);
      v312 = v497[80];
      v313 = (v312 + 32) & ~v312;
      *(_QWORD *)&v499 = v310;
      v497 = (char *)(v313 + v311);
      v493 = v312 | 7;
      v314 = swift_allocObject();
      v492 = xmmword_23F61E7E0;
      *(_OWORD *)(v314 + 16) = xmmword_23F61E7E0;
      v315 = (_QWORD *)(v314 + v313);
      v505 = MEMORY[0x24BEE4B08];
      sub_23F35D2E8(&qword_256E70898);
      sub_23F61C55C();
      sub_23F61C55C();
      v316 = v505;
      v505 = 0;
      v506 = 0xE000000000000000;
      sub_23F61C280();
      sub_23F61C280();
      v317 = v506;
      *v315 = v505;
      v315[1] = v317;
      v315[2] = v316;
      v59 = (char *)v498;
      v318 = swift_storeEnumTagMultiPayload();
      v319 = v441;
      MEMORY[0x24266DC78](v318);
      v320 = v500;
      sub_23F39257C(v319);
      if (v320)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, _QWORD))(v494 + 8))(v319, v496);
      }
      else
      {
        (*(void (**)(char *, _QWORD))(v494 + 8))(v319, v496);
        v505 = v314;
        sub_23F386734();
        v333 = v505;
        v334 = swift_allocObject();
        *(_OWORD *)(v334 + 16) = v492;
        v335 = (_QWORD *)(v334 + v313);
        *v335 = 41;
        v335[1] = 0xE100000000000000;
        v335[2] = MEMORY[0x24BEE4B08];
        swift_storeEnumTagMultiPayload();
        v505 = v333;
        sub_23F386734();
        v59 = (char *)v505;
      }
      (*(void (**)(char *, uint64_t))(v449 + 8))(v309, v450);
      return v59;
    }
    if ((_DWORD)v64 == *MEMORY[0x24BE54C98])
    {
      (*(void (**)(char *, uint64_t))(v61 + 96))(v63, v60);
      (*(void (**)(char *, char *, uint64_t))(v444 + 32))(v443, v63, v445);
      v324 = sub_23F61A1F8();
      v325 = v500;
      *(_QWORD *)&v494 = sub_23F390E1C(v324, v119);
      v500 = v325;
      if (v325)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v444 + 8))(v443, v445);
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_23F35D2E8(&qword_256E704B8);
        v342 = (v497[80] + 32) & ~(unint64_t)v497[80];
        v343 = swift_allocObject();
        *(_OWORD *)(v343 + 16) = xmmword_23F61E7E0;
        v493 = v343;
        *(_QWORD *)&v492 = v343 + v342;
        v505 = MEMORY[0x24BEE4B08];
        sub_23F35D2E8(&qword_256E70898);
        sub_23F61C55C();
        sub_23F61C55C();
        v491 = v505;
        v505 = 0;
        v506 = 0xE000000000000000;
        sub_23F61C280();
        sub_23F61C280();
        *(_QWORD *)&v499 = *(_QWORD *)(v494 + 16);
        if ((_QWORD)v499)
        {
          v504 = (char *)MEMORY[0x24BEE4AF8];
          sub_23F37B910();
          v497 = v504;
          v344 = (uint64_t *)(v494 + 48);
          do
          {
            v345 = *(v344 - 2);
            v346 = *(v344 - 1);
            v347 = *v344;
            v502 = 34;
            v503 = 0xE100000000000000;
            sub_23F617BA0();
            sub_23F617BA0();
            sub_23F61C280();
            v349 = v502;
            v348 = v503;
            sub_23F617BA0();
            sub_23F617BA0();
            sub_23F617BA0();
            v350 = MEMORY[0x24BEE4B08];
            v351 = v500;
            sub_23F3B62BC(v347, 0x22uLL, 0xE100000000000000, MEMORY[0x24BEE4B08], v345, v346, v347, v349, v348);
            sub_23F377378();
            v502 = v352;
            sub_23F3863B4(v350);
            sub_23F38631C();
            sub_23F369004(v502);
            v354 = v353;
            v355 = sub_23F3B60F0(MEMORY[0x24BEE4B08], 34, 0xE100000000000000);
            v500 = v351;
            sub_23F369004(v355);
            v357 = v356;
            v502 = v349;
            v503 = v348;
            sub_23F617BA0();
            sub_23F61C280();
            v358 = v502;
            v359 = v503;
            swift_bridgeObjectRetain_n();
            sub_23F617BA0();
            sub_23F617BA0();
            sub_23F617BA0();
            v495 = v359;
            *(_QWORD *)&v496 = v358;
            v360 = v500;
            sub_23F3B62BC(v357, v349, v348, v354, 0x22uLL, 0xE100000000000000, v357, v358, v359);
            v362 = v361;
            v500 = v360;
            swift_bridgeObjectRelease();
            v363 = sub_23F617BA0();
            v364 = sub_23F3BBC3C(v363, v362);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_23F369004(v364);
            v366 = v365;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v367 = v497;
            v504 = v497;
            v368 = *((_QWORD *)v497 + 2);
            if (v368 >= *((_QWORD *)v497 + 3) >> 1)
            {
              sub_23F37B910();
              v367 = v504;
            }
            v497 = v367;
            *((_QWORD *)v367 + 2) = v368 + 1;
            v369 = &v367[24 * v368];
            v370 = v495;
            *((_QWORD *)v369 + 4) = v496;
            *((_QWORD *)v369 + 5) = v370;
            *((_QWORD *)v369 + 6) = v366;
            v344 += 3;
            *(_QWORD *)&v499 = v499 - 1;
          }
          while ((_QWORD)v499);
          v379 = v497;
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          v379 = (char *)MEMORY[0x24BEE4AF8];
        }
        sub_23F3B79EC(0x202CuLL, 0xE200000000000000, v379);
        v384 = v383;
        v386 = v385;
        v388 = v387;
        swift_bridgeObjectRelease();
        v389 = v505;
        v390 = v506;
        sub_23F617BA0();
        v391 = v491;
        sub_23F617BA0();
        sub_23F528350(v389, v390, v391, v384, v386, v388);
        v393 = v392;
        v395 = v394;
        v397 = v396;
        swift_bridgeObjectRelease();
        sub_23F617BA0();
        swift_bridgeObjectRelease_n();
        v505 = v393;
        v506 = v395;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_23F61C280();
        v398 = v506;
        v399 = v492;
        *(_QWORD *)v492 = v505;
        *(_QWORD *)(v399 + 8) = v398;
        *(_QWORD *)(v399 + 16) = v397;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, uint64_t))(v444 + 8))(v443, v445);
        return (char *)v493;
      }
      return v59;
    }
    if ((_DWORD)v64 == *MEMORY[0x24BE54CF0])
    {
      (*(void (**)(char *, uint64_t))(v61 + 96))(v63, v60);
      v59 = v438;
      (*(void (**)(char *, char *, uint64_t))(v439 + 32))(v438, v63, v440);
      sub_23F35D2E8(&qword_256E704B8);
      v326 = (v497[80] + 32) & ~(unint64_t)v497[80];
      v327 = swift_allocObject();
      v499 = xmmword_23F61E7E0;
      *(_OWORD *)(v327 + 16) = xmmword_23F61E7E0;
      v328 = (_QWORD *)(v327 + v326);
      v505 = MEMORY[0x24BEE4B08];
      sub_23F35D2E8(&qword_256E70898);
      sub_23F61C55C();
      sub_23F61C55C();
      v329 = v505;
      v505 = 0;
      v506 = 0xE000000000000000;
      sub_23F61C280();
      sub_23F61C280();
      v330 = v506;
      *v328 = v505;
      v328[1] = v330;
      v328[2] = v329;
      swift_storeEnumTagMultiPayload();
      v331 = v437;
      sub_23F61A3C0();
      v332 = v500;
      sub_23F390F88(v331);
      if (v332)
      {
        swift_bridgeObjectRelease();
        sub_23F3625D8(v437, &qword_256E6FFA0);
      }
      else
      {
        sub_23F3625D8(v437, &qword_256E6FFA0);
        v505 = v327;
        sub_23F386734();
        v380 = v505;
        v381 = swift_allocObject();
        *(_OWORD *)(v381 + 16) = v499;
        v382 = (_QWORD *)(v381 + v326);
        *v382 = 41;
        v382[1] = 0xE100000000000000;
        v382[2] = MEMORY[0x24BEE4B08];
        swift_storeEnumTagMultiPayload();
        v505 = v380;
        sub_23F386734();
        v59 = (char *)v505;
      }
      (*(void (**)(char *, uint64_t))(v439 + 8))(v438, v440);
      return v59;
    }
    if ((_DWORD)v64 == *MEMORY[0x24BE54D20])
    {
      (*(void (**)(char *, uint64_t))(v61 + 96))(v63, v60);
      v59 = v434;
      (*(void (**)(char *, char *, uint64_t))(v435 + 32))(v434, v63, v436);
      sub_23F35D2E8(&qword_256E704B8);
      v249 = (v497[80] + 32) & ~(unint64_t)v497[80];
      v250 = swift_allocObject();
      v499 = xmmword_23F61E7E0;
      *(_OWORD *)(v250 + 16) = xmmword_23F61E7E0;
      v336 = (_QWORD *)(v250 + v249);
      v505 = MEMORY[0x24BEE4B08];
      sub_23F35D2E8(&qword_256E70898);
      sub_23F61C55C();
      sub_23F61C55C();
      v337 = v505;
      v505 = 0;
      v506 = 0xE000000000000000;
      sub_23F61C280();
      sub_23F61C280();
      v338 = v506;
      *v336 = v505;
      v336[1] = v338;
      v336[2] = v337;
      v339 = swift_storeEnumTagMultiPayload();
      v340 = v433;
      MEMORY[0x24266DC00](v339);
      v341 = v500;
      sub_23F39257C(v340);
      if (v341)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, _QWORD))(v494 + 8))(v433, v496);
        (*(void (**)(char *, uint64_t))(v435 + 8))(v434, v436);
        return v59;
      }
LABEL_160:
      (*(void (**)(char *, _QWORD))(v494 + 8))(v433, v496);
      v505 = v250;
      sub_23F386734();
      v408 = v505;
      v409 = swift_allocObject();
      *(_OWORD *)(v409 + 16) = v499;
      v410 = (_QWORD *)(v409 + v249);
      *v410 = 41;
      v410[1] = 0xE100000000000000;
      v410[2] = MEMORY[0x24BEE4B08];
      swift_storeEnumTagMultiPayload();
      v505 = v408;
      sub_23F386734();
      v59 = (char *)v505;
      (*(void (**)(char *, uint64_t))(v435 + 8))(v434, v436);
      return v59;
    }
    if ((_DWORD)v64 == *MEMORY[0x24BE54D10])
    {
      (*(void (**)(char *, uint64_t))(v61 + 96))(v63, v60);
      v59 = v430;
      (*(void (**)(char *, char *, uint64_t))(v431 + 32))(v430, v63, v432);
      sub_23F35D2E8(&qword_256E704B8);
      v371 = (v497[80] + 32) & ~(unint64_t)v497[80];
      v372 = swift_allocObject();
      v499 = xmmword_23F61E7E0;
      *(_OWORD *)(v372 + 16) = xmmword_23F61E7E0;
      v373 = (_QWORD *)(v372 + v371);
      v505 = MEMORY[0x24BEE4B08];
      sub_23F35D2E8(&qword_256E70898);
      sub_23F61C55C();
      sub_23F61C55C();
      v374 = v505;
      v505 = 0;
      v506 = 0xE000000000000000;
      sub_23F61C280();
      sub_23F61C280();
      v375 = v506;
      *v373 = v505;
      v373[1] = v375;
      v373[2] = v374;
      v376 = swift_storeEnumTagMultiPayload();
      v377 = v429;
      MEMORY[0x24266DAB0](v376);
      v378 = v500;
      sub_23F39257C(v377);
      if (v378)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, _QWORD))(v494 + 8))(v429, v496);
      }
      else
      {
        (*(void (**)(char *, _QWORD))(v494 + 8))(v429, v496);
        v505 = v372;
        sub_23F386734();
        v411 = v505;
        v412 = swift_allocObject();
        *(_OWORD *)(v412 + 16) = v499;
        v413 = (_QWORD *)(v412 + v371);
        *v413 = 41;
        v413[1] = 0xE100000000000000;
        v413[2] = MEMORY[0x24BEE4B08];
        swift_storeEnumTagMultiPayload();
        v505 = v411;
        sub_23F386734();
        v59 = (char *)v505;
      }
      (*(void (**)(char *, uint64_t))(v431 + 8))(v430, v432);
      return v59;
    }
    if ((_DWORD)v64 == *MEMORY[0x24BE54CE0])
    {
      (*(void (**)(char *, uint64_t))(v61 + 96))(v63, v60);
      v59 = v426;
      (*(void (**)(char *, char *, uint64_t))(v427 + 32))(v426, v63, v428);
      sub_23F35D2E8(&qword_256E704B8);
      v400 = (v497[80] + 32) & ~(unint64_t)v497[80];
      v401 = swift_allocObject();
      v499 = xmmword_23F61E7E0;
      *(_OWORD *)(v401 + 16) = xmmword_23F61E7E0;
      v402 = (_QWORD *)(v401 + v400);
      v505 = MEMORY[0x24BEE4B08];
      sub_23F35D2E8(&qword_256E70898);
      sub_23F61C55C();
      sub_23F61C55C();
      v403 = v505;
      v505 = 0;
      v506 = 0xE000000000000000;
      sub_23F61C280();
      sub_23F61C280();
      v404 = v506;
      *v402 = v505;
      v402[1] = v404;
      v402[2] = v403;
      v405 = swift_storeEnumTagMultiPayload();
      v406 = v425;
      MEMORY[0x24266D768](v405);
      v407 = v500;
      sub_23F39257C(v406);
      if (v407)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, _QWORD))(v494 + 8))(v425, v496);
      }
      else
      {
        (*(void (**)(char *, _QWORD))(v494 + 8))(v425, v496);
        v505 = v401;
        sub_23F386734();
        v418 = v505;
        v419 = swift_allocObject();
        *(_OWORD *)(v419 + 16) = v499;
        v420 = (_QWORD *)(v419 + v400);
        *v420 = 41;
        v420[1] = 0xE100000000000000;
        v420[2] = MEMORY[0x24BEE4B08];
        swift_storeEnumTagMultiPayload();
        v505 = v418;
        sub_23F386734();
        v59 = (char *)v505;
      }
      (*(void (**)(char *, uint64_t))(v427 + 8))(v426, v428);
      return v59;
    }
LABEL_163:
    if ((_DWORD)v64 != *MEMORY[0x24BE54CB8])
    {
LABEL_168:
      if ((_DWORD)v64 != *MEMORY[0x24BE54CA8])
      {
        if ((_DWORD)v64 != *MEMORY[0x24BE54CB0])
        {
          if ((_DWORD)v64 != *MEMORY[0x24BE54D40])
            goto LABEL_177;
          sub_23F39B904();
          swift_allocError();
          *v423 = 7;
          swift_willThrow();
          return v59;
        }
        sub_23F35D2E8(&qword_256E704B8);
        v421 = (v497[80] + 32) & ~(unint64_t)v497[80];
        v59 = (char *)swift_allocObject();
        *((_OWORD *)v59 + 1) = xmmword_23F61E7E0;
        v422 = &v59[v421];
        *(_QWORD *)v422 = 59;
        *((_QWORD *)v422 + 1) = 0xE100000000000000;
        *((_QWORD *)v422 + 2) = MEMORY[0x24BEE4B08];
LABEL_170:
        swift_storeEnumTagMultiPayload();
        return v59;
      }
    }
    sub_23F35D2E8(&qword_256E704B8);
    v414 = (v497[80] + 32) & ~(unint64_t)v497[80];
    v59 = (char *)swift_allocObject();
    *((_OWORD *)v59 + 1) = xmmword_23F61E7E0;
    v415 = &v59[v414];
    v505 = MEMORY[0x24BEE4B08];
    sub_23F35D2E8(&qword_256E70898);
    sub_23F61C55C();
    sub_23F61C55C();
    v416 = v505;
    v505 = 0;
    v506 = 0xE000000000000000;
    sub_23F61C280();
    sub_23F61C280();
    v417 = v506;
    *(_QWORD *)v415 = v505;
    *((_QWORD *)v415 + 1) = v417;
    *((_QWORD *)v415 + 2) = v416;
    goto LABEL_170;
  }
  (*(void (**)(char *, uint64_t))(v61 + 96))(v63, v60);
  v106 = v485;
  v107 = v484;
  v108 = v486;
  (*(void (**)(char *, char *, uint64_t))(v485 + 32))(v484, v63, v486);
  sub_23F61A444();
  v109 = v500;
  v110 = sub_23F39257C(v47);
  if (!v109)
  {
    v133 = v110;
    v500 = *(char **)(v494 + 8);
    ((void (*)(char *, _QWORD))v500)(v47, v496);
    sub_23F35D2E8(&qword_256E704B8);
    v134 = (v497[80] + 32) & ~(unint64_t)v497[80];
    v135 = swift_allocObject();
    *(_OWORD *)(v135 + 16) = xmmword_23F61E7E0;
    v136 = (uint64_t *)(v135 + v134);
    v137 = v477;
    sub_23F61A45C();
    sub_23F428B9C();
    v139 = v138;
    v141 = v140;
    (*(void (**)(char *, uint64_t))(v478 + 8))(v137, v479);
    sub_23F617BA0();
    v142 = sub_23F3B60F0(MEMORY[0x24BEE4B08], v139, v141);
    sub_23F369004(v142);
    *v136 = v139;
    v136[1] = v141;
    v136[2] = v143;
    swift_storeEnumTagMultiPayload();
    v505 = v133;
    sub_23F386734();
    v144 = v505;
    v145 = v476;
    sub_23F61A450();
    sub_23F39257C(v145);
    ((void (*)(char *, _QWORD))v500)(v145, v496);
    v505 = v144;
    sub_23F386734();
    v59 = (char *)v505;
    v75 = *(void (**)(char *, uint64_t))(v485 + 8);
    v80 = v107;
    v171 = &v503;
    goto LABEL_58;
  }
  (*(void (**)(char *, _QWORD))(v494 + 8))(v47, v496);
  (*(void (**)(char *, uint64_t))(v106 + 8))(v107, v108);
  return v59;
}

uint64_t sub_23F396820()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  unint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v1 = sub_23F61A240();
  sub_23F396D7C(v1, v2, (uint64_t *)&v40);
  if (v0)
    return swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = sub_23F61A228();
  v5 = MEMORY[0x24BDAC7A8](v4);
  sub_23F39066C(v5, (void (*)(uint64_t, uint64_t, char *))sub_23F39B990);
  v7 = v6;
  swift_bridgeObjectRelease();
  v39 = v7;
  sub_23F617BA0();
  sub_23F399000(&v39);
  v8 = swift_bridgeObjectRelease();
  v9 = v39;
  MEMORY[0x24BDAC7A8](v8);
  sub_23F38FEF8(v9, (uint64_t (*)(_QWORD, _QWORD, char *))sub_23F39B998);
  swift_release();
  v10 = v43;
  v45 = v43;
  if (*(_QWORD *)(v43 + 16))
  {
    sub_23F35D2E8(&qword_256E70490);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_23F61E7E0;
    *(_QWORD *)(v11 + 32) = v10;
    sub_23F617BA0();
  }
  else
  {
    v11 = MEMORY[0x24BEE4AF8];
  }
  v39 = v11;
  sub_23F386750();
  sub_23F35D2E8(&qword_256E704B8);
  v12 = *(_QWORD *)(type metadata accessor for StatementSegment(0) - 8);
  v13 = *(_QWORD *)(v12 + 72);
  v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_23F61E7E0;
  v38 = v14;
  v16 = (_QWORD *)(v15 + v14);
  *v16 = 8236;
  v16[1] = 0xE200000000000000;
  v16[2] = MEMORY[0x24BEE4B08];
  swift_storeEnumTagMultiPayload();
  sub_23F35D2E8(&qword_256E708A0);
  sub_23F39BBFC(&qword_256E708A8, &qword_256E708A0);
  v17 = sub_23F61C598();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(v17 + 16);
  if (v18)
  {
    sub_23F617BA0();
    v19 = 0;
    v20 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      v21 = *(_QWORD *)(v17 + 8 * v19 + 32);
      v22 = *(_QWORD *)(v21 + 16);
      v23 = *(_QWORD *)(v20 + 16);
      if (__OFADD__(v23, v22))
        break;
      sub_23F617BA0();
      if (!swift_isUniquelyReferenced_nonNull_native() || v23 + v22 > *(_QWORD *)(v20 + 24) >> 1)
      {
        sub_23F377664();
        v20 = v24;
      }
      if (*(_QWORD *)(v21 + 16))
      {
        v25 = *(_QWORD *)(v20 + 16);
        if ((*(_QWORD *)(v20 + 24) >> 1) - v25 < v22)
          goto LABEL_28;
        v26 = v20 + v38 + v25 * v13;
        if (v21 + v38 < v26 + v22 * v13 && v26 < v21 + v38 + v22 * v13)
          goto LABEL_30;
        swift_arrayInitWithCopy();
        if (v22)
        {
          v28 = *(_QWORD *)(v20 + 16);
          v29 = __OFADD__(v28, v22);
          v30 = v28 + v22;
          if (v29)
            goto LABEL_29;
          *(_QWORD *)(v20 + 16) = v30;
        }
      }
      else if (v22)
      {
        goto LABEL_27;
      }
      swift_bridgeObjectRelease();
      if (v18 == ++v19)
      {
        swift_bridgeObjectRelease();
        goto LABEL_25;
      }
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    sub_23F61CA9C();
    __break(1u);
    result = swift_release();
    __break(1u);
  }
  else
  {
LABEL_25:
    swift_bridgeObjectRelease();
    v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_23F61E980;
    v32 = v31 + v38;
    *(_QWORD *)(v32 + 16) = v41;
    *(_OWORD *)v32 = v40;
    swift_storeEnumTagMultiPayload();
    v33 = (_QWORD *)(v31 + v38 + v13);
    *v33 = 40;
    v33[1] = 0xE100000000000000;
    v34 = MEMORY[0x24BEE4B08];
    v33[2] = MEMORY[0x24BEE4B08];
    swift_storeEnumTagMultiPayload();
    v44 = v42;
    sub_23F39B968((uint64_t)&v44);
    sub_23F39B968((uint64_t)&v45);
    v39 = v31;
    sub_23F386734();
    v35 = v39;
    v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_23F61E7E0;
    v37 = (_QWORD *)(v36 + v38);
    *v37 = 41;
    v37[1] = 0xE100000000000000;
    v37[2] = v34;
    swift_storeEnumTagMultiPayload();
    v39 = v35;
    sub_23F386734();
    return v39;
  }
  return result;
}

uint64_t sub_23F396D7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  _BYTE *v30;
  uint64_t result;
  int v32;
  BOOL v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  void (*v39)(char *);
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  int64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  _BYTE *v60;
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  char *v63;
  uint64_t v64;
  void (*v65)(_QWORD, _QWORD, _QWORD);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int64_t v69;
  _BYTE *v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _BYTE *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  unint64_t v115;
  int64_t v116;
  char *v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  int64_t v121;
  uint64_t v122;
  uint64_t *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  _QWORD *v129;
  uint64_t v130;
  _QWORD *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  _QWORD *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char v150;
  unint64_t v151;
  char v152;
  uint64_t v153;
  char v154;
  _QWORD *v155;
  uint64_t *v156;
  _QWORD *v157;
  uint64_t v158;
  BOOL v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t *v165;
  _BYTE *v166;
  int64_t v167;
  _BYTE *v168;
  _QWORD *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char v190;
  uint64_t v191;
  uint64_t v192;
  char v193;
  _BYTE *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  _QWORD *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t *v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  char *v218;
  uint64_t v219;
  int64_t v220;
  uint64_t v221;
  _QWORD *v222;
  char *v223;
  _QWORD *v224;
  _QWORD *v225;
  __int128 v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  _BYTE *v233;
  uint64_t v234;
  uint64_t v235;
  _QWORD *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  unsigned __int8 v245;
  uint64_t v246;
  _QWORD v247[5];
  uint64_t v248;

  v234 = a1;
  v235 = a2;
  v213 = a3;
  v212 = sub_23F61BCE0();
  v211 = *(_QWORD *)(v212 - 8);
  MEMORY[0x24BDAC7A8](v212);
  v210 = (uint64_t *)((char *)&v202 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v215 = sub_23F61B518();
  v219 = *(_QWORD *)(v215 - 8);
  MEMORY[0x24BDAC7A8](v215);
  v214 = (char *)&v202 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v229 = sub_23F61BBA8();
  v228 = *(_QWORD *)(v229 - 8);
  MEMORY[0x24BDAC7A8](v229);
  v227 = (uint64_t)&v202 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v226 = sub_23F35D2E8(&qword_256E708C8);
  v7 = MEMORY[0x24BDAC7A8](v226);
  v225 = (uint64_t *)((char *)&v202 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = MEMORY[0x24BDAC7A8](v7);
  v224 = (uint64_t *)((char *)&v202 - v10);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v248 = (uint64_t)&v202 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v223 = (char *)&v202 - v13;
  v207 = sub_23F61BB3C();
  v206 = *(_QWORD *)(v207 - 8);
  MEMORY[0x24BDAC7A8](v207);
  v208 = (uint64_t)&v202 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v231 = type metadata accessor for RenderableTool();
  MEMORY[0x24BDAC7A8](v231);
  v232 = (uint64_t)&v202 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23F61B4F4();
  v222 = *(_QWORD **)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v202 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v221 = sub_23F61B5D8();
  v230 = *(_QWORD *)(v221 - 8);
  MEMORY[0x24BDAC7A8](v221);
  v217 = (char *)&v202 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_23F35D2E8(&qword_256E70220);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v202 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_23F61B308();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v202 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v202 - v28;
  v220 = type metadata accessor for AlphaExpressionParser.StatefulExpressionParser(0);
  v233 = v3;
  sub_23F61B314();
  if (sub_23F36195C((uint64_t)v22, 1, v23) == 1)
  {
    sub_23F3625D8((uint64_t)v22, &qword_256E70220);
    sub_23F39B904();
    swift_allocError();
    *v30 = 5;
    return swift_willThrow();
  }
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v29, v22, v23);
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v27, v29, v23);
  v32 = (*(uint64_t (**)(char *, uint64_t))(v24 + 88))(v27, v23);
  v33 = v32 == *MEMORY[0x24BE56D38];
  v218 = v29;
  v209 = v23;
  if (v33)
  {
    v205 = v24;
    (*(void (**)(char *, uint64_t))(v24 + 96))(v27, v23);
    v34 = v230;
    v35 = v217;
    v36 = v221;
    (*(void (**)(char *, char *, uint64_t))(v230 + 32))(v217, v27, v221);
    v37 = v233;
    if (*v233 == 1)
    {
      v38 = sub_23F61B554();
      v39 = (void (*)(char *))v222[13];
      LODWORD(v234) = *MEMORY[0x24BEB8EC0];
      v235 = (uint64_t)v39;
      v39(v18);
      v40 = *(_QWORD *)(v38 + 16);
      if (v40)
      {
        v41 = v38 + ((*((unsigned __int8 *)v222 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v222 + 80));
        v42 = v222[9];
        sub_23F3612C0(&qword_256E708D8, (uint64_t (*)(uint64_t))MEMORY[0x24BEB8ED8], MEMORY[0x24BEB8EF0]);
        while ((sub_23F61C0A0() & 1) == 0)
        {
          v41 += v42;
          if (!--v40)
            goto LABEL_10;
        }
        ((void (*)(char *, uint64_t))v222[1])(v18, v16);
        swift_bridgeObjectRelease();
        v167 = v220;
        v168 = v233;
        v169 = &v233[*(int *)(v220 + 24)];
        v170 = v169[3];
        v171 = v169[4];
        v248 = (uint64_t)sub_23F35EA9C(v169, v170);
        v229 = *(int *)(sub_23F35D2E8(&qword_256E708E0) + 48);
        v172 = v232;
        ((void (*)(uint64_t, _QWORD, uint64_t))v235)(v232, v234, v16);
        sub_23F35D2E8(&qword_256E6FDC8);
        v173 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
        v174 = swift_allocObject();
        v226 = xmmword_23F61E7E0;
        *(_OWORD *)(v174 + 16) = xmmword_23F61E7E0;
        (*(void (**)(unint64_t, char *, uint64_t))(v34 + 16))(v174 + v173, v217, v221);
        *(_QWORD *)(v172 + v229) = v174;
        swift_storeEnumTagMultiPayload();
        v235 = *(int *)(v167 + 32);
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD, uint64_t, uint64_t))(v171 + 32))(&v237, v172, *(_QWORD *)&v168[v235], v170, v171);
        sub_23F3663AC(v172, (uint64_t (*)(_QWORD))type metadata accessor for RenderableTool);
        v175 = v237;
        v176 = v238;
        v177 = v239;
        v178 = v240;
        v180 = v241;
        v179 = v242;
        v182 = v243;
        v181 = v244;
        LODWORD(v170) = v245;
        v234 = v246;
        sub_23F39B9D8(v237, v238, v239, v240, v241, v242, v243, v244, v245);
        LODWORD(v248) = v170;
        v202 = v175;
        v212 = v176;
        v215 = v177;
        v232 = v178;
        v231 = v180;
        v229 = v179;
        v228 = v182;
        v227 = v181;
        sub_23F39BA98(v175, v176, v177, v178, v180, v179, v182, v181, v170);
        swift_bridgeObjectRelease();
        v183 = *(_QWORD *)&v233[v235];
        sub_23F524D24();
        v184 = sub_23F61BB18();
        v186 = v185;
        v187 = sub_23F61BB30();
        v189 = v188;
        swift_beginAccess();
        if (*(_QWORD *)(*(_QWORD *)(v183 + 16) + 16))
        {
          sub_23F617BA0();
          sub_23F3754D4(v184, v186);
          if ((v190 & 1) != 0)
          {
            swift_endAccess();
            sub_23F617BA0();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_61:
            swift_bridgeObjectRelease();
            (*(void (**)(uint64_t, uint64_t))(v206 + 8))(v208, v207);
            sub_23F61C1D8();
            swift_bridgeObjectRelease();
            v192 = sub_23F61C1F0();
            swift_bridgeObjectRelease();
            if ((v248 & 1) == 0)
            {
              v162 = v212;
              sub_23F617BA0();
              v195 = v215;
              sub_23F617BA0();
              v196 = sub_23F61BFEC();
              v248 = v192;
              v113 = (_QWORD *)v196;
              sub_23F35D2E8(&qword_256E704B8);
              v197 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for StatementSegment(0) - 8) + 80);
              v198 = (v197 + 32) & ~v197;
              v164 = swift_allocObject();
              *(_OWORD *)(v164 + 16) = v226;
              v199 = (_QWORD *)(v164 + v198);
              v237 = MEMORY[0x24BEE4B08];
              sub_23F35D2E8(&qword_256E70898);
              sub_23F61C55C();
              sub_23F61C55C();
              v200 = v237;
              v237 = 0;
              v238 = 0xE000000000000000;
              sub_23F61C280();
              sub_23F617BA0();
              sub_23F61C280();
              swift_bridgeObjectRelease_n();
              v201 = v238;
              *v199 = v237;
              v199[1] = v201;
              v199[2] = v200;
              v163 = v195;
              swift_storeEnumTagMultiPayload();
              v161 = v202;
              sub_23F39BA98(v202, v162, v195, v232, v231, v229, v228, v227, 0);
              (*(void (**)(char *, uint64_t))(v230 + 8))(v217, v221);
              result = (*(uint64_t (**)(char *, uint64_t))(v205 + 8))(v218, v209);
LABEL_53:
              v165 = v213;
              *v213 = v161;
              v165[1] = v162;
              v165[2] = v163;
              v165[3] = (uint64_t)v113;
              v165[4] = v164;
              return result;
            }
            v193 = v202;
            LOBYTE(v237) = v202;
            sub_23F39BB58();
            swift_willThrowTypedImpl();
            sub_23F39B904();
            swift_allocError();
            *v194 = v193;
            swift_willThrow();
            swift_bridgeObjectRelease();
            goto LABEL_13;
          }
          swift_bridgeObjectRelease();
        }
        swift_endAccess();
        swift_beginAccess();
        sub_23F617BA0();
        sub_23F471708();
        swift_endAccess();
        swift_bridgeObjectRelease();
        swift_beginAccess();
        sub_23F617BA0();
        sub_23F3AF11C(v187, v189, v184, v186);
        swift_endAccess();
        swift_bridgeObjectRelease();
        goto LABEL_61;
      }
LABEL_10:
      ((void (*)(char *, uint64_t))v222[1])(v18, v16);
      swift_bridgeObjectRelease();
      v36 = v221;
      v35 = v217;
      v37 = v233;
    }
    v43 = v220;
    v44 = &v37[*(int *)(v220 + 24)];
    v45 = v44[3];
    v46 = v44[4];
    v222 = v44;
    sub_23F35EA9C(v44, v45);
    v47 = v232;
    v219 = *(_QWORD *)(v34 + 16);
    ((void (*)(uint64_t, char *, uint64_t))v219)(v232, v35, v36);
    v48 = *MEMORY[0x24BE57550];
    v49 = sub_23F618BB4();
    v50 = *(uint64_t **)(*(_QWORD *)(v49 - 8) + 104);
    LODWORD(v214) = v48;
    v211 = v49;
    v210 = v50;
    ((void (*)(uint64_t, uint64_t))v50)(v47, v48);
    swift_storeEnumTagMultiPayload();
    v234 = *(int *)(v43 + 32);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD, uint64_t, uint64_t))(v46 + 32))(&v237, v47, *(_QWORD *)&v37[v234], v45, v46);
    sub_23F3663AC(v47, (uint64_t (*)(_QWORD))type metadata accessor for RenderableTool);
    v51 = v237;
    v52 = v238;
    v53 = v239;
    v54 = v240;
    v56 = v241;
    v55 = v242;
    v58 = v243;
    v57 = v244;
    LODWORD(v45) = v245;
    v235 = v246;
    sub_23F39B9D8(v237, v238, v239, v240, v241, v242, v243, v244, v245);
    v212 = v52;
    v215 = v53;
    v208 = v54;
    v207 = v56;
    v206 = v55;
    v204 = v58;
    v203 = v57;
    sub_23F39BA98(v51, v52, v53, v54, v56, v55, v58, v57, v45);
    swift_bridgeObjectRelease();
    if ((_DWORD)v45 != 1)
    {
      v202 = v51;
      v89 = v222[3];
      v90 = v222[4];
      sub_23F35EA9C(v222, v89);
      v91 = v232;
      ((void (*)(uint64_t, char *, uint64_t))v219)(v232, v217, v221);
      ((void (*)(uint64_t, _QWORD, uint64_t))v210)(v91, v214, v211);
      swift_storeEnumTagMultiPayload();
      sub_23F617BA0();
      sub_23F617BA0();
      v92 = v216;
      sub_23F510924();
      sub_23F5156E0(v93, v94, v95, v96, v97, v98, v99, v100, v202, v203, v204, v205, v206, v207, v208, v209, (uint64_t)v210, v211, v212,
        (uint64_t)v213);
      v102 = v101;
      v216 = v92;
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v90 + 16))(&v237, v91, v102, *(_QWORD *)&v233[v234], v89, v90);
      swift_release();
      sub_23F3663AC(v91, (uint64_t (*)(_QWORD))type metadata accessor for RenderableTool);
      v104 = v237;
      v103 = v238;
      v105 = v239;
      v106 = v240;
      v107 = v241;
      v108 = v242;
      v109 = v243;
      v110 = v244;
      LOBYTE(v90) = v245;
      v111 = v246;
      sub_23F617BA0();
      sub_23F39BA98(v104, v103, v105, v106, v107, v108, v109, v110, v90);
      swift_bridgeObjectRelease();
      sub_23F38231C(v111, v247);
      v222 = (_QWORD *)v247[0];
      v219 = v247[1];
      v231 = v247[3];
      v112 = v247[4];
      v220 = (unint64_t)(v247[2] + 64) >> 6;
      v214 = (char *)v111;
      sub_23F617BA0();
      v113 = (_QWORD *)MEMORY[0x24BEE4B00];
      v114 = v230;
      while (1)
      {
        v235 = (uint64_t)v113;
        if (v112)
        {
          v233 = (_BYTE *)((v112 - 1) & v112);
          v115 = __clz(__rbit64(v112)) | (v231 << 6);
        }
        else
        {
          v116 = v231 + 1;
          v117 = v218;
          v118 = v221;
          if (__OFADD__(v231, 1))
            goto LABEL_66;
          if (v116 >= v220)
            goto LABEL_52;
          v119 = *(_QWORD *)(v219 + 8 * v116);
          v120 = v231 + 1;
          if (!v119)
          {
            v120 = v231 + 2;
            if (v231 + 2 >= v220)
              goto LABEL_52;
            v119 = *(_QWORD *)(v219 + 8 * v120);
            if (!v119)
            {
              v120 = v231 + 3;
              if (v231 + 3 >= v220)
                goto LABEL_52;
              v119 = *(_QWORD *)(v219 + 8 * v120);
              if (!v119)
              {
                v120 = v231 + 4;
                if (v231 + 4 >= v220)
                  goto LABEL_52;
                v119 = *(_QWORD *)(v219 + 8 * v120);
                if (!v119)
                {
                  v120 = v231 + 5;
                  if (v231 + 5 >= v220)
                    goto LABEL_52;
                  v119 = *(_QWORD *)(v219 + 8 * v120);
                  if (!v119)
                  {
                    v120 = v231 + 6;
                    if (v231 + 6 >= v220)
                      goto LABEL_52;
                    v119 = *(_QWORD *)(v219 + 8 * v120);
                    if (!v119)
                    {
                      v121 = v231 + 7;
                      while (v121 < v220)
                      {
                        v119 = *(_QWORD *)(v219 + 8 * v121++);
                        if (v119)
                        {
                          v120 = v121 - 1;
                          goto LABEL_42;
                        }
                      }
LABEL_52:
                      swift_release();
                      swift_bridgeObjectRelease();
                      v161 = v202;
                      v162 = v212;
                      v163 = v215;
                      sub_23F39BA98(v202, v212, v215, v208, v207, v206, v204, v203, 0);
                      (*(void (**)(char *, uint64_t))(v114 + 8))(v217, v118);
                      result = (*(uint64_t (**)(char *, uint64_t))(v205 + 8))(v117, v209);
                      v164 = MEMORY[0x24BEE4AF8];
                      goto LABEL_53;
                    }
                  }
                }
              }
            }
          }
LABEL_42:
          v233 = (_BYTE *)((v119 - 1) & v119);
          v115 = __clz(__rbit64(v119)) + (v120 << 6);
          v231 = v120;
        }
        v122 = v222[7];
        v123 = (uint64_t *)(v222[6] + 16 * v115);
        v125 = *v123;
        v124 = v123[1];
        v126 = v122 + *(_QWORD *)(*(_QWORD *)(type metadata accessor for ParameterPromptMap(0) - 8) + 72) * v115;
        v127 = v226;
        v128 = v223;
        sub_23F39BB94(v126, (uint64_t)&v223[*(int *)(v226 + 48)]);
        *v128 = v125;
        v128[1] = v124;
        v129 = (_QWORD *)v248;
        sub_23F383004((uint64_t)v128, v248, &qword_256E708C8);
        v130 = *(int *)(v127 + 48);
        v131 = v224;
        v132 = (uint64_t)v224 + v130;
        v133 = (uint64_t)v129 + v130;
        v134 = v129[1];
        *v224 = *v129;
        v131[1] = v134;
        sub_23F39BB94((uint64_t)v129 + v130, v132);
        v135 = v228;
        v136 = v227;
        v137 = v229;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v228 + 16))(v227, v132, v229);
        sub_23F617BA0();
        sub_23F3663AC(v132, type metadata accessor for ParameterPromptMap);
        v138 = sub_23F61BB78();
        v234 = v139;
        (*(void (**)(uint64_t, uint64_t))(v135 + 8))(v136, v137);
        v140 = *(int *)(v127 + 48);
        v141 = v225;
        v142 = (uint64_t)v225 + v140;
        v144 = *v129;
        v143 = v129[1];
        *v225 = *v129;
        v141[1] = v143;
        v232 = (uint64_t)v141 + v140;
        sub_23F39BB94(v133, v142);
        sub_23F617BA0();
        v145 = v235;
        swift_isUniquelyReferenced_nonNull_native();
        v236 = (_QWORD *)v145;
        v146 = v138;
        v147 = v138;
        v148 = v234;
        v149 = sub_23F3754D4(v147, v234);
        if (__OFADD__(*(_QWORD *)(v145 + 16), (v150 & 1) == 0))
          break;
        v151 = v149;
        v152 = v150;
        sub_23F35D2E8(&qword_256E6FCB0);
        if ((sub_23F61CA18() & 1) != 0)
        {
          v153 = sub_23F3754D4(v146, v148);
          if ((v152 & 1) != (v154 & 1))
            goto LABEL_67;
          v151 = v153;
        }
        v113 = v236;
        if ((v152 & 1) != 0)
        {
          v155 = (_QWORD *)(v236[7] + 16 * v151);
          swift_bridgeObjectRelease();
          *v155 = v144;
          v155[1] = v143;
        }
        else
        {
          v236[(v151 >> 6) + 8] |= 1 << v151;
          v156 = (uint64_t *)(v113[6] + 16 * v151);
          *v156 = v146;
          v156[1] = v148;
          v157 = (_QWORD *)(v113[7] + 16 * v151);
          *v157 = v144;
          v157[1] = v143;
          v158 = v113[2];
          v159 = __OFADD__(v158, 1);
          v160 = v158 + 1;
          if (v159)
            goto LABEL_65;
          v113[2] = v160;
          sub_23F617BA0();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_23F3663AC(v232, type metadata accessor for ParameterPromptMap);
        sub_23F3625D8(v248, &qword_256E708C8);
        v114 = v230;
        v112 = (unint64_t)v233;
      }
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      sub_23F61CC94();
      __break(1u);
LABEL_68:
      result = sub_23F61CC58();
      __break(1u);
      return result;
    }
    LOBYTE(v237) = v51;
    sub_23F39BB58();
    swift_willThrowTypedImpl();
    sub_23F39B904();
    swift_allocError();
    *v59 = v51;
    swift_willThrow();
LABEL_13:
    (*(void (**)(char *, uint64_t))(v230 + 8))(v217, v221);
    return (*(uint64_t (**)(char *, uint64_t))(v205 + 8))(v218, v209);
  }
  if (v32 == *MEMORY[0x24BE56D28])
  {
    sub_23F39B904();
    swift_allocError();
    *v60 = 5;
    swift_willThrow();
    v61 = *(void (**)(char *, uint64_t))(v24 + 8);
    v62 = v209;
    v61(v29, v209);
    return ((uint64_t (*)(char *, uint64_t))v61)(v27, v62);
  }
  if (v32 != *MEMORY[0x24BE56D30])
    goto LABEL_68;
  v205 = v24;
  (*(void (**)(char *, uint64_t))(v24 + 96))(v27, v209);
  v63 = v214;
  v64 = v215;
  (*(void (**)(void))(v219 + 32))();
  v65 = (void (*)(_QWORD, _QWORD, _QWORD))v210;
  sub_23F61B500();
  v66 = sub_23F61B2F0();
  (*(void (**)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t))(v211 + 8))(v65, v212);
  v67 = v232;
  if (v66)
  {
    v68 = *(_QWORD *)(v66 + 16);
    swift_bridgeObjectRelease();
    if (v68)
    {
      v69 = v220;
      v70 = v233;
      v71 = &v233[*(int *)(v220 + 24)];
      v72 = v71[3];
      v73 = v71[4];
      sub_23F35EA9C(v71, v72);
      sub_23F61B500();
      v74 = *MEMORY[0x24BE57558];
      v75 = sub_23F618BB4();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 104))(v67, v74, v75);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD, uint64_t, uint64_t))(v73 + 32))(&v237, v67, *(_QWORD *)&v70[*(int *)(v69 + 32)], v72, v73);
      sub_23F3663AC(v67, (uint64_t (*)(_QWORD))type metadata accessor for RenderableTool);
      v77 = v237;
      v76 = v238;
      v78 = v239;
      v79 = v240;
      v80 = v241;
      v81 = v242;
      v82 = v243;
      v83 = v244;
      LOBYTE(v70) = v245;
      v248 = v246;
      sub_23F39B9D8(v237, v238, v239, v240, v241, v242, v243, v244, v245);
      v212 = v76;
      v84 = v76;
      v85 = v78;
      v235 = v79;
      v86 = v79;
      v87 = v80;
      sub_23F39BA98(v77, v84, v78, v86, v80, v81, v82, v83, (char)v70);
      swift_bridgeObjectRelease();
      if ((v70 & 1) != 0)
      {
        LOBYTE(v237) = v77;
        sub_23F39BB58();
        swift_willThrowTypedImpl();
        sub_23F39B904();
        swift_allocError();
        *v88 = v77;
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v219 + 8))(v214, v215);
        return (*(uint64_t (**)(char *, uint64_t))(v205 + 8))(v218, v209);
      }
      v191 = v212;
      sub_23F617BA0();
      sub_23F617BA0();
      v161 = v77;
      v164 = MEMORY[0x24BEE4AF8];
      v113 = (_QWORD *)sub_23F61BFEC();
      sub_23F39BA98(v161, v191, v85, v235, v87, v81, v82, v83, 0);
      (*(void (**)(char *, uint64_t))(v219 + 8))(v214, v215);
      result = (*(uint64_t (**)(char *, uint64_t))(v205 + 8))(v218, v209);
      v162 = v191;
      v163 = v85;
      goto LABEL_53;
    }
  }
  sub_23F39B904();
  swift_allocError();
  *v166 = 5;
  swift_willThrow();
  (*(void (**)(char *, uint64_t))(v219 + 8))(v63, v64);
  return (*(uint64_t (**)(char *, uint64_t))(v205 + 8))(v29, v209);
}

uint64_t sub_23F398528(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;

  v30 = sub_23F617D08();
  v3 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F61AE34();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F61AE40();
  sub_23F368538(v10, v11, a2);
  v13 = v12;
  v15 = v14;
  swift_bridgeObjectRelease();
  if (v15)
  {
    v32 = v13;
    v33 = v15;
    sub_23F61AE58();
    v16 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
    v17 = *MEMORY[0x24BE56290];
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    if (v16 == v17)
      sub_23F61C280();
    sub_23F61C280();
    sub_23F35D2E8(&qword_256E704B8);
    v18 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for StatementSegment(0) - 8) + 80);
    v19 = (v18 + 32) & ~v18;
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_23F61E7E0;
    v21 = (uint64_t *)(v20 + v19);
    v22 = v32;
    v23 = v33;
    sub_23F617BA0();
    v24 = v29;
    v25 = sub_23F3B60F0(MEMORY[0x24BEE4B08], v22, v23);
    sub_23F369004(v25);
    *v21 = v22;
    v21[1] = v23;
    v21[2] = v26;
    swift_storeEnumTagMultiPayload();
    sub_23F61AE64();
    sub_23F39257C(v5);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v30);
    if (v24)
    {
      return swift_bridgeObjectRelease();
    }
    else
    {
      v31 = v20;
      sub_23F386734();
      return v31;
    }
  }
  else
  {
    sub_23F39B904();
    swift_allocError();
    *v28 = 4;
    return swift_willThrow();
  }
}

void sub_23F3987BC(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  void (*v48)(char *, uint64_t);
  uint64_t *v49;
  uint64_t *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  _QWORD v72[3];
  uint64_t v73;
  uint64_t v74;
  char v75;

  v59 = a2;
  v61 = a1;
  v53 = type metadata accessor for RenderableTool();
  MEMORY[0x24BDAC7A8](v53);
  v54 = (uint64_t)&v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_23F61B5D8();
  v55 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v57 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23F61B32C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F35D2E8(&qword_256E70220);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F61B308();
  v58 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v60 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v51 - v14;
  v16 = type metadata accessor for AlphaExpressionParser.StatefulExpressionParser(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v61 + *(int *)(v16 + 20), v4);
  sub_23F61B314();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (sub_23F36195C((uint64_t)v10, 1, v11) == 1)
  {
    sub_23F3625D8((uint64_t)v10, &qword_256E70220);
LABEL_7:
    v49 = v59;
    *v59 = 0;
    v49[1] = 0;
    v49[2] = 0;
    return;
  }
  v17 = v61;
  v18 = v57;
  v19 = v58;
  v20 = v55;
  v21 = v56;
  (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v15, v10, v11);
  v22 = (uint64_t)v60;
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v60, v15, v11);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v19 + 88))(v22, v11) != *MEMORY[0x24BE56D38])
  {
    v48 = *(void (**)(char *, uint64_t))(v19 + 8);
    v48(v15, v11);
    v48(v60, v11);
    goto LABEL_7;
  }
  v51 = v15;
  v23 = *(void (**)(uint64_t, uint64_t))(v19 + 96);
  v24 = (uint64_t)v60;
  v52 = v11;
  v23((uint64_t)v60, v11);
  v25 = v18;
  v26 = v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 32))(v18, v24, v21);
  v27 = v16;
  sub_23F382FC4(v17 + *(int *)(v16 + 24), (uint64_t)v72);
  v28 = v73;
  v29 = v74;
  sub_23F35EA9C(v72, v73);
  v30 = v54;
  (*(void (**)(uint64_t, char *, uint64_t))(v20 + 16))(v54, v25, v26);
  v31 = *MEMORY[0x24BE57550];
  v32 = sub_23F618BB4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v30, v31, v32);
  swift_storeEnumTagMultiPayload();
  v33 = *(_QWORD *)(v17 + *(int *)(v27 + 32));
  v34 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 32);
  swift_retain();
  v34(&v62, v30, v33, v28, v29);
  swift_release();
  sub_23F3663AC(v30, (uint64_t (*)(_QWORD))type metadata accessor for RenderableTool);
  v35 = v62;
  v36 = v63;
  v37 = v64;
  v38 = v65;
  v39 = v66;
  v40 = v67;
  v42 = v68;
  v41 = v69;
  LOBYTE(v27) = v70;
  v61 = v71;
  sub_23F39B9D8(v62, v63, v64, v65, v66, v67, v68, v69, v70);
  v53 = v38;
  v43 = v38;
  v44 = v39;
  v60 = (char *)v42;
  v54 = v41;
  sub_23F39BA98(v35, v36, v37, v43, v39, v40, v42, v41, v27);
  v45 = v56;
  v46 = v55;
  swift_bridgeObjectRelease();
  if ((v27 & 1) != 0)
  {
    v75 = v35;
    sub_23F39BB58();
    swift_willThrowTypedImpl();
    sub_23F39B904();
    swift_allocError();
    *v47 = v35;
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v57, v45);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v51, v52);
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v72);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v46 + 8))(v57, v45);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v51, v52);
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v72);
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F39BA98(v35, v36, v37, v53, v44, v40, (uint64_t)v60, v54, 0);
    v50 = v59;
    *v59 = v35;
    v50[1] = v36;
    v50[2] = v37;
  }
}

uint64_t sub_23F398D2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v6;
  uint64_t v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = *(_QWORD *)(a4 + 24);
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_5;
  sub_23F617BA0();
  v10 = sub_23F3754D4(a1, a2);
  if ((v11 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    v20 = sub_23F35D2E8(&qword_256E70498);
    v18 = (uint64_t)a5;
    v19 = 1;
    return sub_23F36196C(v18, v19, 1, v20);
  }
  v12 = (uint64_t *)(*(_QWORD *)(v6 + 56) + 16 * v10);
  v14 = *v12;
  v13 = v12[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  v15 = sub_23F35D2E8(&qword_256E70498);
  v16 = (char *)a5 + *(int *)(v15 + 48);
  *a5 = v14;
  a5[1] = v13;
  v17 = sub_23F617D08();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v16, a3, v17);
  v18 = (uint64_t)a5;
  v19 = 0;
  v20 = v15;
  return sub_23F36196C(v18, v19, 1, v20);
}

uint64_t sub_23F398E18(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  result = sub_23F39257C(a3);
  if (!v3)
  {
    sub_23F35D2E8(&qword_256E704B8);
    v7 = *(_QWORD *)(type metadata accessor for StatementSegment(0) - 8);
    v8 = *(_QWORD *)(v7 + 72);
    v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_23F61E980;
    v11 = (uint64_t *)(v10 + v9);
    swift_bridgeObjectRetain_n();
    v12 = MEMORY[0x24BEE4B08];
    v13 = sub_23F3B60F0(MEMORY[0x24BEE4B08], a1, a2);
    sub_23F369004(v13);
    *v11 = a1;
    v11[1] = a2;
    v11[2] = v14;
    swift_storeEnumTagMultiPayload();
    v15 = (uint64_t *)((char *)v11 + v8);
    *v15 = 61;
    v15[1] = 0xE100000000000000;
    v15[2] = v12;
    swift_storeEnumTagMultiPayload();
    sub_23F386734();
    return v10;
  }
  return result;
}

uint64_t sub_23F398F54(char a1)
{
  if ((a1 - 3) >= 5u)
    return 5;
  else
    return (a1 - 3);
}

uint64_t sub_23F398F6C()
{
  sub_23F39C530();
  return sub_23F61CCAC();
}

uint64_t sub_23F398F94()
{
  sub_23F39C530();
  return sub_23F61CCA0();
}

unint64_t sub_23F398FC4()
{
  return 0xD000000000000018;
}

uint64_t sub_23F398FE0()
{
  char *v0;

  return sub_23F398F54(*v0);
}

uint64_t type metadata accessor for AlphaExpressionParser.StatefulExpressionParser(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E70960);
}

void sub_23F399000(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6[2];

  v2 = *(_QWORD *)(sub_23F35D2E8(&qword_256E70498) - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_23F3BCF44();
    v3 = v4;
  }
  v5 = *(_QWORD *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v5;
  sub_23F399104(v6);
  *a1 = v3;
}

void sub_23F399084(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6[2];

  v2 = *(_QWORD *)(sub_23F61AE70() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_23F3BCF54();
    v3 = v4;
  }
  v5 = *(_QWORD *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v5;
  sub_23F399B58(v6);
  *a1 = v3;
}

void sub_23F399104(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  BOOL v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  char v63;
  uint64_t v64;
  uint64_t v65;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  BOOL v85;
  unint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  BOOL v95;
  uint64_t v96;
  char v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  BOOL v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  unint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  unint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  _QWORD *v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t *v148;

  v2 = v1;
  v141 = sub_23F35D2E8(&qword_256E70498);
  v4 = *(_QWORD *)(v141 - 8);
  v5 = MEMORY[0x24BDAC7A8](v141);
  v135 = (uint64_t)&v127 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v145 = (uint64_t)&v127 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v127 - v10;
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v127 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v138 = (char **)((char *)&v127 - v16);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v137 = (char **)((char *)&v127 - v18);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v133 = (char **)((char *)&v127 - v20);
  MEMORY[0x24BDAC7A8](v19);
  v132 = (char **)((char *)&v127 - v21);
  v148 = a1;
  v22 = a1[1];
  v23 = sub_23F61CC04();
  if (v23 >= v22)
  {
    if ((v22 & 0x8000000000000000) == 0)
    {
      if (v22)
        sub_23F39A6BC(0, v22, 1, v148);
      return;
    }
    goto LABEL_159;
  }
  v24 = v23;
  sub_23F387F7C(v22 / 2);
  v129 = v25;
  v130 = v22;
  v139 = v26;
  v140 = v4;
  if (v22 <= 0)
  {
LABEL_123:
    v28 = (char *)MEMORY[0x24BEE4AF8];
    v69 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_124:
    if (v69 < 2)
    {
LABEL_135:
      swift_bridgeObjectRelease();
      if (v130 >= -1)
        goto LABEL_136;
      goto LABEL_163;
    }
    v120 = *v148;
    while (1)
    {
      v121 = v69 - 2;
      if (v69 < 2)
        break;
      if (!v120)
        goto LABEL_167;
      v122 = v28;
      v123 = *(_QWORD *)&v28[16 * v121 + 32];
      v124 = *(_QWORD *)&v28[16 * v69 + 24];
      sub_23F39ABF0(v120 + *(_QWORD *)(v140 + 72) * v123, v120 + *(_QWORD *)(v140 + 72) * *(_QWORD *)&v28[16 * v69 + 16], v120 + *(_QWORD *)(v140 + 72) * v124, v139);
      if (v2)
        goto LABEL_121;
      if (v124 < v123)
        goto LABEL_154;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v122 = sub_23F3BC9E8();
      if (v121 >= *((_QWORD *)v122 + 2))
        goto LABEL_155;
      v125 = &v122[16 * v121 + 32];
      *(_QWORD *)v125 = v123;
      *((_QWORD *)v125 + 1) = v124;
      v126 = *((_QWORD *)v122 + 2);
      if (v69 > v126)
        goto LABEL_156;
      memmove(&v122[16 * v69 + 16], &v122[16 * v69 + 32], 16 * (v126 - v69));
      *((_QWORD *)v122 + 2) = v126 - 1;
      v69 = v126 - 1;
      v28 = v122;
      if (v126 <= 2)
        goto LABEL_135;
    }
LABEL_153:
    __break(1u);
LABEL_154:
    __break(1u);
LABEL_155:
    __break(1u);
LABEL_156:
    __break(1u);
LABEL_157:
    __break(1u);
LABEL_158:
    __break(1u);
LABEL_159:
    __break(1u);
LABEL_160:
    __break(1u);
LABEL_161:
    __break(1u);
LABEL_162:
    __break(1u);
LABEL_163:
    __break(1u);
LABEL_164:
    __break(1u);
LABEL_165:
    __break(1u);
LABEL_166:
    __break(1u);
LABEL_167:
    __break(1u);
    return;
  }
  v128 = v24;
  v27 = 0;
  v28 = (char *)MEMORY[0x24BEE4AF8];
  v29 = v22;
  v144 = v11;
  v142 = v14;
  while (1)
  {
    v30 = v27;
    v31 = v27 + 1;
    v136 = v27;
    if (v27 + 1 >= v29)
    {
      v39 = v27 + 1;
    }
    else
    {
      v131 = v2;
      v32 = *v148;
      v33 = *(_QWORD *)(v4 + 72);
      v34 = v132;
      v35 = v27;
      sub_23F382EF8(*v148 + v33 * v31, (uint64_t)v132, &qword_256E70498);
      v143 = v32;
      v147 = v33;
      v36 = v32 + v33 * v35;
      v37 = v133;
      sub_23F382EF8(v36, (uint64_t)v133, &qword_256E70498);
      v38 = *v34 == *v37 && v34[1] == v37[1];
      LODWORD(v146) = v38 ? 0 : sub_23F61CC64();
      sub_23F3625D8((uint64_t)v133, &qword_256E70498);
      sub_23F3625D8((uint64_t)v132, &qword_256E70498);
      v30 = v136;
      v4 = v140;
      if (v136 + 2 >= v29)
      {
        v42 = v136 + 2;
      }
      else
      {
        v40 = v147 * v31;
        v41 = v143;
        v42 = v136 + 2;
        v43 = v147 * (v136 + 2);
        while (1)
        {
          v44 = v137;
          sub_23F382EF8(v41 + v43, (uint64_t)v137, &qword_256E70498);
          v45 = v138;
          sub_23F382EF8(v41 + v40, (uint64_t)v138, &qword_256E70498);
          v46 = *v44 == *v45 && v44[1] == v45[1];
          v47 = v46 ? 0 : sub_23F61CC64();
          sub_23F3625D8((uint64_t)v138, &qword_256E70498);
          sub_23F3625D8((uint64_t)v137, &qword_256E70498);
          if (((v146 ^ v47) & 1) != 0)
            break;
          v41 += v147;
          ++v42;
          v11 = v144;
          if (v42 >= v29)
          {
            v42 = v29;
            v4 = v140;
            goto LABEL_25;
          }
        }
        v4 = v140;
        v11 = v144;
LABEL_25:
        v30 = v136;
      }
      if ((v146 & 1) != 0)
      {
        if (v42 < v30)
          goto LABEL_160;
        v39 = v42;
        if (v30 < v42)
        {
          v146 = v29;
          v127 = v28;
          v48 = 0;
          v49 = v147 * (v42 - 1);
          v50 = v42 * v147;
          v51 = v30;
          v52 = v30 * v147;
          do
          {
            if (v51 != v39 + v48 - 1)
            {
              v53 = v143;
              if (!v143)
                goto LABEL_166;
              v54 = v143 + v52;
              sub_23F383004(v143 + v52, v135, &qword_256E70498);
              if (v52 < v49 || v54 >= v53 + v50)
              {
                swift_arrayInitWithTakeFrontToBack();
              }
              else if (v52 != v49)
              {
                swift_arrayInitWithTakeBackToFront();
              }
              sub_23F383004(v135, v53 + v49, &qword_256E70498);
              v11 = v144;
              v39 = v42;
            }
            ++v51;
            --v48;
            v49 -= v147;
            v50 -= v147;
            v52 += v147;
          }
          while (v51 < v39 + v48);
          v2 = v131;
          v4 = v140;
          v28 = v127;
          v30 = v136;
          v29 = v146;
          goto LABEL_45;
        }
      }
      else
      {
        v39 = v42;
      }
      v2 = v131;
    }
LABEL_45:
    if (v39 < v29)
    {
      if (__OFSUB__(v39, v30))
        goto LABEL_158;
      if (v39 - v30 < v128)
      {
        if (__OFADD__(v30, v128))
          goto LABEL_161;
        if (v30 + v128 >= v29)
          v56 = v29;
        else
          v56 = v30 + v128;
        if (v56 < v30)
          goto LABEL_162;
        if (v39 != v56)
        {
          v57 = v11;
          v127 = v28;
          v131 = v2;
          v143 = *(_QWORD *)(v4 + 72);
          v146 = v39 * v143;
          v147 = v143 * (v39 - 1);
          v134 = v56;
          do
          {
            v58 = 0;
            v59 = v136;
            while (1)
            {
              v60 = *v148;
              v61 = v142;
              sub_23F382EF8(v146 + v58 + *v148, (uint64_t)v142, &qword_256E70498);
              sub_23F382EF8(v147 + v58 + v60, (uint64_t)v57, &qword_256E70498);
              if (*v61 == *(_QWORD *)v57 && v61[1] == *((_QWORD *)v57 + 1))
                break;
              v63 = sub_23F61CC64();
              sub_23F3625D8((uint64_t)v57, &qword_256E70498);
              sub_23F3625D8((uint64_t)v61, &qword_256E70498);
              if ((v63 & 1) == 0)
                goto LABEL_65;
              v64 = *v148;
              if (!*v148)
                goto LABEL_164;
              v65 = v64 + v147 + v58;
              sub_23F383004(v64 + v146 + v58, v145, &qword_256E70498);
              swift_arrayInitWithTakeFrontToBack();
              sub_23F383004(v145, v65, &qword_256E70498);
              v57 = v144;
              v58 -= v143;
              if (v39 == ++v59)
                goto LABEL_65;
            }
            sub_23F3625D8((uint64_t)v57, &qword_256E70498);
            sub_23F3625D8((uint64_t)v61, &qword_256E70498);
LABEL_65:
            ++v39;
            v147 += v143;
            v146 += v143;
          }
          while (v39 != v134);
          v39 = v134;
          v2 = v131;
          v28 = v127;
          v11 = v57;
          v30 = v136;
        }
      }
    }
    if (v39 < v30)
      goto LABEL_157;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v147 = v39;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v28 = sub_23F3BC8F8(0, *((_QWORD *)v28 + 2) + 1, 1, v28);
    v68 = *((_QWORD *)v28 + 2);
    v67 = *((_QWORD *)v28 + 3);
    v69 = v68 + 1;
    if (v68 >= v67 >> 1)
      v28 = sub_23F3BC8F8((char *)(v67 > 1), v68 + 1, 1, v28);
    v70 = v2;
    *((_QWORD *)v28 + 2) = v69;
    v71 = v28 + 32;
    v72 = &v28[16 * v68 + 32];
    v73 = v147;
    *(_QWORD *)v72 = v136;
    *((_QWORD *)v72 + 1) = v73;
    if (v68)
      break;
    v69 = 1;
LABEL_115:
    v29 = v148[1];
    v27 = v147;
    v2 = v70;
    v4 = v140;
    if (v147 >= v29)
      goto LABEL_124;
  }
  while (1)
  {
    v74 = v69 - 1;
    if (v69 >= 4)
    {
      v79 = &v71[16 * v69];
      v80 = *((_QWORD *)v79 - 8);
      v81 = *((_QWORD *)v79 - 7);
      v85 = __OFSUB__(v81, v80);
      v82 = v81 - v80;
      if (v85)
        goto LABEL_142;
      v84 = *((_QWORD *)v79 - 6);
      v83 = *((_QWORD *)v79 - 5);
      v85 = __OFSUB__(v83, v84);
      v77 = v83 - v84;
      v78 = v85;
      if (v85)
        goto LABEL_143;
      v86 = v69 - 2;
      v87 = &v71[16 * v69 - 32];
      v89 = *(_QWORD *)v87;
      v88 = *((_QWORD *)v87 + 1);
      v85 = __OFSUB__(v88, v89);
      v90 = v88 - v89;
      if (v85)
        goto LABEL_144;
      v85 = __OFADD__(v77, v90);
      v91 = v77 + v90;
      if (v85)
        goto LABEL_146;
      if (v91 >= v82)
      {
        v109 = &v71[16 * v74];
        v111 = *(_QWORD *)v109;
        v110 = *((_QWORD *)v109 + 1);
        v85 = __OFSUB__(v110, v111);
        v112 = v110 - v111;
        if (v85)
          goto LABEL_152;
        v102 = v77 < v112;
        goto LABEL_104;
      }
    }
    else
    {
      if (v69 != 3)
      {
        v103 = *((_QWORD *)v28 + 4);
        v104 = *((_QWORD *)v28 + 5);
        v85 = __OFSUB__(v104, v103);
        v96 = v104 - v103;
        v97 = v85;
        goto LABEL_98;
      }
      v76 = *((_QWORD *)v28 + 4);
      v75 = *((_QWORD *)v28 + 5);
      v85 = __OFSUB__(v75, v76);
      v77 = v75 - v76;
      v78 = v85;
    }
    if ((v78 & 1) != 0)
      goto LABEL_145;
    v86 = v69 - 2;
    v92 = &v71[16 * v69 - 32];
    v94 = *(_QWORD *)v92;
    v93 = *((_QWORD *)v92 + 1);
    v95 = __OFSUB__(v93, v94);
    v96 = v93 - v94;
    v97 = v95;
    if (v95)
      goto LABEL_147;
    v98 = &v71[16 * v74];
    v100 = *(_QWORD *)v98;
    v99 = *((_QWORD *)v98 + 1);
    v85 = __OFSUB__(v99, v100);
    v101 = v99 - v100;
    if (v85)
      goto LABEL_149;
    if (__OFADD__(v96, v101))
      goto LABEL_151;
    if (v96 + v101 >= v77)
    {
      v102 = v77 < v101;
LABEL_104:
      if (v102)
        v74 = v86;
      goto LABEL_106;
    }
LABEL_98:
    if ((v97 & 1) != 0)
      goto LABEL_148;
    v105 = &v71[16 * v74];
    v107 = *(_QWORD *)v105;
    v106 = *((_QWORD *)v105 + 1);
    v85 = __OFSUB__(v106, v107);
    v108 = v106 - v107;
    if (v85)
      goto LABEL_150;
    if (v108 < v96)
      goto LABEL_115;
LABEL_106:
    v113 = v74 - 1;
    if (v74 - 1 >= v69)
    {
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      __break(1u);
      goto LABEL_153;
    }
    if (!*v148)
      goto LABEL_165;
    v114 = v28;
    v115 = &v71[16 * v113];
    v116 = *(_QWORD *)v115;
    v117 = &v71[16 * v74];
    v118 = *((_QWORD *)v117 + 1);
    sub_23F39ABF0(*v148 + *(_QWORD *)(v140 + 72) * *(_QWORD *)v115, *v148 + *(_QWORD *)(v140 + 72) * *(_QWORD *)v117, *v148 + *(_QWORD *)(v140 + 72) * v118, v139);
    if (v70)
      break;
    if (v118 < v116)
      goto LABEL_139;
    if (v74 > *((_QWORD *)v114 + 2))
      goto LABEL_140;
    *(_QWORD *)v115 = v116;
    *(_QWORD *)&v71[16 * v113 + 8] = v118;
    v119 = *((_QWORD *)v114 + 2);
    if (v74 >= v119)
      goto LABEL_141;
    v28 = v114;
    v69 = v119 - 1;
    memmove(&v71[16 * v74], v117 + 16, 16 * (v119 - 1 - v74));
    *((_QWORD *)v114 + 2) = v119 - 1;
    v11 = v144;
    if (v119 <= 2)
      goto LABEL_115;
  }
  v2 = v70;
LABEL_121:
  swift_bridgeObjectRelease();
  if (v130 < -1)
  {
    __break(1u);
    goto LABEL_123;
  }
LABEL_136:
  *(_QWORD *)(v129 + 16) = 0;
  swift_bridgeObjectRelease();
}

void sub_23F399B58(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  BOOL v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t, uint64_t);
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v78;
  void (*v79)(char *, uint64_t);
  uint64_t v80;
  char *v81;
  void (*v82)(char *, uint64_t, uint64_t);
  uint64_t v83;
  char *v84;
  void (*v85)(char *, uint64_t);
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  char *v89;
  char *v90;
  char *v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  BOOL v103;
  unint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  BOOL v113;
  uint64_t v114;
  char v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  BOOL v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  unint64_t v140;
  unint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  unint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  char *v153;
  char *v154;
  char *v155;
  uint64_t v156;
  char *v157;
  char *v158;
  unint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  void (*v163)(char *, uint64_t, uint64_t);
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t *v172;
  _QWORD *v173;

  v2 = v1;
  v4 = sub_23F61AE70();
  v173 = *(_QWORD **)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v157 = (char *)&v148 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v169 = (char *)&v148 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v148 - v10;
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v148 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v161 = (char *)&v148 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v160 = (char *)&v148 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v154 = (char *)&v148 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v153 = (char *)&v148 - v21;
  v172 = a1;
  v22 = a1[1];
  v23 = sub_23F61CC04();
  if (v23 >= v22)
  {
    if ((v22 & 0x8000000000000000) == 0)
    {
      if (v22)
        sub_23F39A91C(0, v22, 1, v172);
      return;
    }
    goto LABEL_157;
  }
  v24 = v23;
  sub_23F387F88(v22 / 2);
  v150 = v25;
  v151 = v22;
  v159 = v26;
  if (v22 <= 0)
  {
LABEL_121:
    v28 = (char *)MEMORY[0x24BEE4AF8];
    v88 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_122:
    if (v88 < 2)
    {
LABEL_133:
      swift_bridgeObjectRelease();
      if (v151 >= -1)
        goto LABEL_134;
      goto LABEL_161;
    }
    v139 = *v172;
    v140 = v159;
    while (1)
    {
      v141 = v88 - 2;
      if (v88 < 2)
        break;
      if (!v139)
        goto LABEL_165;
      v142 = v28;
      v143 = v28 + 32;
      v144 = *(_QWORD *)&v28[16 * v141 + 32];
      v145 = *(_QWORD *)&v28[16 * v88 + 24];
      sub_23F39B05C(v139 + v173[9] * v144, v139 + v173[9] * *(_QWORD *)&v143[16 * v88 - 16], v139 + v173[9] * v145, v140);
      if (v2)
        goto LABEL_119;
      if (v145 < v144)
        goto LABEL_152;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v142 = sub_23F3BC9E8();
      if (v141 >= *((_QWORD *)v142 + 2))
        goto LABEL_153;
      v146 = &v142[16 * v141 + 32];
      *(_QWORD *)v146 = v144;
      *((_QWORD *)v146 + 1) = v145;
      v147 = *((_QWORD *)v142 + 2);
      if (v88 > v147)
        goto LABEL_154;
      v28 = v142;
      memmove(&v142[16 * v88 + 16], &v142[16 * v88 + 32], 16 * (v147 - v88));
      *((_QWORD *)v142 + 2) = v147 - 1;
      v88 = v147 - 1;
      if (v147 <= 2)
        goto LABEL_133;
    }
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
LABEL_154:
    __break(1u);
LABEL_155:
    __break(1u);
LABEL_156:
    __break(1u);
LABEL_157:
    __break(1u);
LABEL_158:
    __break(1u);
LABEL_159:
    __break(1u);
LABEL_160:
    __break(1u);
LABEL_161:
    __break(1u);
LABEL_162:
    __break(1u);
LABEL_163:
    __break(1u);
LABEL_164:
    __break(1u);
LABEL_165:
    __break(1u);
    return;
  }
  v149 = v24;
  v164 = v11;
  v167 = v4;
  v27 = 0;
  v28 = (char *)MEMORY[0x24BEE4AF8];
  v29 = v22;
  v155 = v14;
  while (1)
  {
    v30 = (uint64_t)v27;
    v31 = v27 + 1;
    v158 = v27;
    if ((uint64_t)(v27 + 1) >= v29)
    {
      v41 = (uint64_t)(v27 + 1);
      v42 = v167;
    }
    else
    {
      v170 = v29;
      v152 = v28;
      v32 = *v172;
      v33 = v173[9];
      v34 = (void (*)(char *, uint64_t, uint64_t))v173[2];
      v35 = v167;
      v34(v153, *v172 + v33 * (_QWORD)v31, v167);
      v165 = v32;
      v171 = v33;
      v34(v154, v32 + v33 * v30, v35);
      v36 = sub_23F61AE40();
      v38 = v37;
      if (v36 == sub_23F61AE40() && v38 == v39)
        LODWORD(v168) = 0;
      else
        LODWORD(v168) = sub_23F61CC64();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v43 = (void (*)(char *, uint64_t))v173[1];
      v42 = v167;
      v43(v154, v167);
      v43(v153, v42);
      v30 = (uint64_t)v158;
      v41 = (uint64_t)(v158 + 2);
      if ((uint64_t)(v158 + 2) < v170)
      {
        v162 = v2;
        v166 = v171 * (_QWORD)v31;
        v44 = v165;
        v45 = v171 * v41;
        while (1)
        {
          v46 = v41;
          v34(v160, v44 + v45, v42);
          v34(v161, v44 + v166, v42);
          v47 = sub_23F61AE40();
          v49 = v48;
          v51 = v47 == sub_23F61AE40() && v49 == v50;
          v52 = v51 ? 0 : sub_23F61CC64();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v42 = v167;
          v43(v161, v167);
          v43(v160, v42);
          if (((v168 ^ v52) & 1) != 0)
            break;
          ++v41;
          v44 += v171;
          if (v46 + 1 >= v170)
          {
            v29 = v170;
            v41 = v170;
            v2 = v162;
            v14 = v155;
            v30 = (uint64_t)v158;
            goto LABEL_25;
          }
        }
        v2 = v162;
        v14 = v155;
        v30 = (uint64_t)v158;
      }
      v29 = v170;
LABEL_25:
      v28 = v152;
      if ((v168 & 1) != 0)
      {
        if (v41 < v30)
          goto LABEL_158;
        if (v30 < v41)
        {
          v162 = v2;
          v53 = 0;
          v54 = v171 * (v41 - 1);
          v55 = v30;
          v56 = v41 * v171;
          v57 = v55;
          v58 = v55 * v171;
          do
          {
            if (v57 != v41 + v53 - 1)
            {
              v59 = v165;
              if (!v165)
                goto LABEL_164;
              v60 = v165 + v58;
              v166 = v165 + v54;
              v42 = v167;
              v168 = (char *)v173[4];
              ((void (*)(char *, uint64_t, uint64_t))v168)(v157, v165 + v58, v167);
              if (v58 < v54 || v60 >= v59 + v56)
              {
                v62 = v166;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                v62 = v166;
                if (v58 != v54)
                  swift_arrayInitWithTakeBackToFront();
              }
              ((void (*)(uint64_t, char *, uint64_t))v168)(v62, v157, v42);
              v14 = v155;
            }
            ++v57;
            --v53;
            v54 -= v171;
            v56 -= v171;
            v58 += v171;
          }
          while (v57 < v41 + v53);
          v28 = v152;
          v2 = v162;
          v30 = (uint64_t)v158;
          v29 = v170;
        }
      }
    }
    if (v41 < v29)
    {
      if (__OFSUB__(v41, v30))
        goto LABEL_156;
      if (v41 - v30 < v149)
      {
        if (__OFADD__(v30, v149))
          goto LABEL_159;
        if (v30 + v149 >= v29)
          v63 = v29;
        else
          v63 = v30 + v149;
        if (v63 < v30)
          goto LABEL_160;
        if (v41 != v63)
        {
          v152 = v28;
          v64 = v173[9];
          v65 = (void (*)(char *, uint64_t, uint64_t))v173[2];
          v162 = v2;
          v163 = v65;
          v66 = v64 * (v41 - 1);
          v165 = v64;
          v171 = v41 * v64;
          v156 = v63;
          do
          {
            v67 = 0;
            v168 = (char *)v41;
            v166 = v66;
            while (1)
            {
              v170 = v30;
              v68 = *v172;
              v69 = v163;
              v163(v14, v171 + v67 + *v172, v42);
              v70 = v66 + v67 + v68;
              v71 = v14;
              v72 = v164;
              v69(v164, v70, v42);
              v73 = sub_23F61AE40();
              v75 = v74;
              if (v73 == sub_23F61AE40() && v75 == v76)
                break;
              v78 = sub_23F61CC64();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v79 = (void (*)(char *, uint64_t))v173[1];
              v79(v72, v42);
              v79(v71, v42);
              v14 = v71;
              if ((v78 & 1) == 0)
                goto LABEL_62;
              v80 = *v172;
              v66 = v166;
              if (!*v172)
                goto LABEL_162;
              v81 = (char *)(v80 + v166 + v67);
              v82 = (void (*)(char *, uint64_t, uint64_t))v173[4];
              v83 = v167;
              v82(v169, v80 + v171 + v67, v167);
              swift_arrayInitWithTakeFrontToBack();
              v82(v81, (uint64_t)v169, v83);
              v67 -= v165;
              v30 = v170 + 1;
              v84 = v168;
              v42 = v83;
              if (v168 == (char *)(v170 + 1))
                goto LABEL_63;
            }
            swift_bridgeObjectRelease_n();
            v85 = (void (*)(char *, uint64_t))v173[1];
            v85(v72, v42);
            v85(v71, v42);
            v14 = v71;
LABEL_62:
            v84 = v168;
            v66 = v166;
LABEL_63:
            v41 = (uint64_t)(v84 + 1);
            v66 += v165;
            v171 += v165;
            v30 = (uint64_t)v158;
          }
          while (v41 != v156);
          v41 = v156;
          v2 = v162;
          v28 = v152;
        }
      }
    }
    if (v41 < v30)
      goto LABEL_155;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v28 = sub_23F3BC8F8(0, *((_QWORD *)v28 + 2) + 1, 1, v28);
    v87 = *((_QWORD *)v28 + 2);
    v86 = *((_QWORD *)v28 + 3);
    v88 = v87 + 1;
    v162 = v2;
    v168 = (char *)v41;
    if (v87 >= v86 >> 1)
      v28 = sub_23F3BC8F8((char *)(v86 > 1), v87 + 1, 1, v28);
    *((_QWORD *)v28 + 2) = v88;
    v89 = v28 + 32;
    v90 = &v28[16 * v87 + 32];
    v91 = v168;
    *(_QWORD *)v90 = v30;
    *((_QWORD *)v90 + 1) = v91;
    if (v87)
      break;
    v88 = 1;
LABEL_113:
    v29 = v172[1];
    v27 = v168;
    v2 = v162;
    if ((uint64_t)v168 >= v29)
      goto LABEL_122;
  }
  while (1)
  {
    v92 = v88 - 1;
    if (v88 >= 4)
    {
      v97 = &v89[16 * v88];
      v98 = *((_QWORD *)v97 - 8);
      v99 = *((_QWORD *)v97 - 7);
      v103 = __OFSUB__(v99, v98);
      v100 = v99 - v98;
      if (v103)
        goto LABEL_140;
      v102 = *((_QWORD *)v97 - 6);
      v101 = *((_QWORD *)v97 - 5);
      v103 = __OFSUB__(v101, v102);
      v95 = v101 - v102;
      v96 = v103;
      if (v103)
        goto LABEL_141;
      v104 = v88 - 2;
      v105 = &v89[16 * v88 - 32];
      v107 = *(_QWORD *)v105;
      v106 = *((_QWORD *)v105 + 1);
      v103 = __OFSUB__(v106, v107);
      v108 = v106 - v107;
      if (v103)
        goto LABEL_142;
      v103 = __OFADD__(v95, v108);
      v109 = v95 + v108;
      if (v103)
        goto LABEL_144;
      if (v109 >= v100)
      {
        v127 = &v89[16 * v92];
        v129 = *(_QWORD *)v127;
        v128 = *((_QWORD *)v127 + 1);
        v103 = __OFSUB__(v128, v129);
        v130 = v128 - v129;
        if (v103)
          goto LABEL_150;
        v120 = v95 < v130;
        goto LABEL_102;
      }
    }
    else
    {
      if (v88 != 3)
      {
        v121 = *((_QWORD *)v28 + 4);
        v122 = *((_QWORD *)v28 + 5);
        v103 = __OFSUB__(v122, v121);
        v114 = v122 - v121;
        v115 = v103;
        goto LABEL_96;
      }
      v94 = *((_QWORD *)v28 + 4);
      v93 = *((_QWORD *)v28 + 5);
      v103 = __OFSUB__(v93, v94);
      v95 = v93 - v94;
      v96 = v103;
    }
    if ((v96 & 1) != 0)
      goto LABEL_143;
    v104 = v88 - 2;
    v110 = &v89[16 * v88 - 32];
    v112 = *(_QWORD *)v110;
    v111 = *((_QWORD *)v110 + 1);
    v113 = __OFSUB__(v111, v112);
    v114 = v111 - v112;
    v115 = v113;
    if (v113)
      goto LABEL_145;
    v116 = &v89[16 * v92];
    v118 = *(_QWORD *)v116;
    v117 = *((_QWORD *)v116 + 1);
    v103 = __OFSUB__(v117, v118);
    v119 = v117 - v118;
    if (v103)
      goto LABEL_147;
    if (__OFADD__(v114, v119))
      goto LABEL_149;
    if (v114 + v119 >= v95)
    {
      v120 = v95 < v119;
LABEL_102:
      if (v120)
        v92 = v104;
      goto LABEL_104;
    }
LABEL_96:
    if ((v115 & 1) != 0)
      goto LABEL_146;
    v123 = &v89[16 * v92];
    v125 = *(_QWORD *)v123;
    v124 = *((_QWORD *)v123 + 1);
    v103 = __OFSUB__(v124, v125);
    v126 = v124 - v125;
    if (v103)
      goto LABEL_148;
    if (v126 < v114)
      goto LABEL_113;
LABEL_104:
    v131 = v92 - 1;
    if (v92 - 1 >= v88)
    {
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
      goto LABEL_151;
    }
    if (!*v172)
      goto LABEL_163;
    v132 = v28;
    v133 = &v89[16 * v131];
    v134 = *(_QWORD *)v133;
    v135 = &v89[16 * v92];
    v136 = *((_QWORD *)v135 + 1);
    v137 = v162;
    sub_23F39B05C(*v172 + v173[9] * *(_QWORD *)v133, *v172 + v173[9] * *(_QWORD *)v135, *v172 + v173[9] * v136, v159);
    v162 = v137;
    if (v137)
      break;
    if (v136 < v134)
      goto LABEL_137;
    if (v92 > *((_QWORD *)v132 + 2))
      goto LABEL_138;
    *(_QWORD *)v133 = v134;
    *(_QWORD *)&v89[16 * v131 + 8] = v136;
    v138 = *((_QWORD *)v132 + 2);
    if (v92 >= v138)
      goto LABEL_139;
    v28 = v132;
    v88 = v138 - 1;
    memmove(&v89[16 * v92], v135 + 16, 16 * (v138 - 1 - v92));
    *((_QWORD *)v132 + 2) = v138 - 1;
    if (v138 <= 2)
      goto LABEL_113;
  }
  v2 = v162;
LABEL_119:
  swift_bridgeObjectRelease();
  if (v151 < -1)
  {
    __break(1u);
    goto LABEL_121;
  }
LABEL_134:
  *(_QWORD *)(v150 + 16) = 0;
  swift_bridgeObjectRelease();
}

void sub_23F39A6BC(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v30 = a1;
  v31 = sub_23F35D2E8(&qword_256E70498);
  v7 = MEMORY[0x24BDAC7A8](v31);
  v35 = (uint64_t)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (uint64_t *)((char *)&v28 - v10);
  MEMORY[0x24BDAC7A8](v9);
  v14 = (uint64_t *)((char *)&v28 - v13);
  v34 = a3;
  v29 = a2;
  if (a3 != a2)
  {
    v15 = *(_QWORD *)(v12 + 72);
    v37 = v15 * (v34 - 1);
    v32 = (char *)&v28 - v13;
    v33 = v15;
    v36 = v15 * v34;
    v16 = &qword_256E70498;
    while (2)
    {
      v17 = 0;
      v18 = v30;
      while (1)
      {
        v19 = *a4;
        sub_23F382EF8(v36 + v17 + *a4, (uint64_t)v14, v16);
        sub_23F382EF8(v37 + v17 + v19, (uint64_t)v11, v16);
        if (*v14 == *v11 && v14[1] == v11[1])
          break;
        v21 = sub_23F61CC64();
        sub_23F3625D8((uint64_t)v11, v16);
        sub_23F3625D8((uint64_t)v14, v16);
        if ((v21 & 1) != 0)
        {
          v22 = *a4;
          if (!*a4)
          {
            __break(1u);
            return;
          }
          v23 = v11;
          v24 = v16;
          v25 = a4;
          v26 = v22 + v37 + v17;
          v27 = v24;
          sub_23F383004(v22 + v36 + v17, v35, v24);
          swift_arrayInitWithTakeFrontToBack();
          sub_23F383004(v35, v26, v27);
          v17 -= v33;
          ++v18;
          a4 = v25;
          v16 = v27;
          v11 = v23;
          v14 = v32;
          if (v34 != v18)
            continue;
        }
        goto LABEL_13;
      }
      sub_23F3625D8((uint64_t)v11, v16);
      sub_23F3625D8((uint64_t)v14, v16);
LABEL_13:
      v37 += v33;
      v36 += v33;
      if (++v34 != v29)
        continue;
      break;
    }
  }
}

uint64_t sub_23F39A91C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;

  v41 = a4;
  v34 = a1;
  v37 = sub_23F61AE70();
  v42 = *(_QWORD **)(v37 - 8);
  v6 = MEMORY[0x24BDAC7A8](v37);
  v39 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v32 - v9;
  result = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v32 - v12;
  v38 = a3;
  v33 = a2;
  if (a3 != a2)
  {
    v14 = v42[9];
    v35 = (void (*)(char *, uint64_t, uint64_t))v42[2];
    v36 = v14;
    v44 = v14 * (v38 - 1);
    v43 = v14 * v38;
    while (2)
    {
      v15 = 0;
      v16 = v34;
      v17 = v37;
      while (1)
      {
        v18 = *v41;
        v40 = v43 + v15;
        v19 = v35;
        v35(v13, v43 + v15 + v18, v17);
        v19(v10, v44 + v15 + v18, v17);
        v20 = sub_23F61AE40();
        v21 = v10;
        v23 = v22;
        if (v20 == sub_23F61AE40() && v23 == v24)
          break;
        v26 = sub_23F61CC64();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v27 = (void (*)(char *, uint64_t))v42[1];
        v27(v21, v17);
        result = ((uint64_t (*)(char *, uint64_t))v27)(v13, v17);
        v10 = v21;
        if ((v26 & 1) != 0)
        {
          v28 = *v41;
          if (!*v41)
          {
            __break(1u);
            return result;
          }
          v29 = v28 + v44 + v15;
          v30 = (void (*)(char *, uint64_t, uint64_t))v42[4];
          v17 = v37;
          v30(v39, v28 + v43 + v15, v37);
          swift_arrayInitWithTakeFrontToBack();
          result = ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(v29, v39, v17);
          v15 -= v36;
          ++v16;
          v10 = v21;
          if (v38 != v16)
            continue;
        }
        goto LABEL_13;
      }
      swift_bridgeObjectRelease_n();
      v31 = (void (*)(char *, uint64_t))v42[1];
      v31(v21, v17);
      result = ((uint64_t (*)(char *, uint64_t))v31)(v13, v17);
      v10 = v21;
LABEL_13:
      v44 += v36;
      v43 += v36;
      if (++v38 != v33)
        continue;
      break;
    }
  }
  return result;
}

void sub_23F39ABF0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  int64_t v18;
  int64_t v20;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v33;
  BOOL v35;
  unint64_t v36;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  unint64_t v43;
  char v45;
  int64_t v49;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;

  v52 = a4;
  v54 = a3;
  v53 = sub_23F35D2E8(&qword_256E70498);
  v6 = MEMORY[0x24BDAC7A8](v53);
  v8 = (uint64_t *)((char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = MEMORY[0x24BDAC7A8](v6);
  v57 = (uint64_t *)((char *)&v51 - v10);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (uint64_t *)((char *)&v51 - v12);
  MEMORY[0x24BDAC7A8](v11);
  v16 = (uint64_t *)((char *)&v51 - v15);
  v17 = *(_QWORD *)(v14 + 72);
  if (!v17)
  {
    __break(1u);
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
    goto LABEL_90;
  }
  v18 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v17 == -1)
    goto LABEL_88;
  v20 = v54 - a2;
  if (v54 - a2 == 0x8000000000000000 && v17 == -1)
    goto LABEL_89;
  v22 = v18 / v17;
  v23 = v20 / v17;
  v56 = *(_QWORD *)(v14 + 72);
  if (v18 / v17 >= v20 / v17)
  {
    v36 = v52;
    sub_23F37A914(a2, v20 / v17);
    v26 = v36 + v23 * v17;
    if (v23 * v17 < 1 || a1 >= a2)
    {
      v24 = v52;
    }
    else
    {
      v55 = -v17;
      v38 = v54;
      do
      {
        v39 = v38;
        v54 = v26;
        v40 = v55;
        v41 = v26 + v55;
        v42 = v57;
        sub_23F382EF8(v26 + v55, (uint64_t)v57, &qword_256E70498);
        v43 = a2 + v40;
        sub_23F382EF8(a2 + v40, (uint64_t)v8, &qword_256E70498);
        if (*v42 == *v8 && v42[1] == v8[1])
          v45 = 0;
        else
          v45 = sub_23F61CC64();
        v38 = v39 + v55;
        sub_23F3625D8((uint64_t)v8, &qword_256E70498);
        sub_23F3625D8((uint64_t)v57, &qword_256E70498);
        if ((v45 & 1) != 0)
        {
          if (v39 < a2 || v38 >= a2)
          {
            swift_arrayInitWithTakeFrontToBack();
            a2 = v43;
            v26 = v54;
          }
          else
          {
            if (v39 != a2)
              swift_arrayInitWithTakeBackToFront();
            a2 = v43;
            v26 = v54;
          }
        }
        else if (v39 < v54 || v38 >= v54)
        {
          swift_arrayInitWithTakeFrontToBack();
          v26 = v41;
        }
        else
        {
          if (v39 != v54)
            swift_arrayInitWithTakeBackToFront();
          v26 = v41;
        }
      }
      while (v26 > v52 && a2 > a1);
      v24 = v52;
    }
  }
  else
  {
    v24 = v52;
    sub_23F37A914(a1, v18 / v17);
    v25 = v22 * v17;
    v26 = v24 + v22 * v17;
    if (v25 >= 1 && a2 < v54)
    {
      while (1)
      {
        sub_23F382EF8(a2, (uint64_t)v16, &qword_256E70498);
        sub_23F382EF8(v24, (uint64_t)v13, &qword_256E70498);
        if (*v16 == *v13 && v16[1] == v13[1])
          break;
        v29 = sub_23F61CC64();
        sub_23F3625D8((uint64_t)v13, &qword_256E70498);
        sub_23F3625D8((uint64_t)v16, &qword_256E70498);
        if ((v29 & 1) == 0)
          goto LABEL_27;
        v30 = v56;
        v31 = a2 + v56;
        if (a1 < a2 || a1 >= v31)
        {
          swift_arrayInitWithTakeFrontToBack();
LABEL_39:
          v30 = v56;
          goto LABEL_40;
        }
        if (a1 != a2)
        {
          swift_arrayInitWithTakeBackToFront();
          goto LABEL_39;
        }
LABEL_40:
        a1 += v30;
        v35 = v24 >= v26 || v31 >= v54;
        a2 = v31;
        if (v35)
          goto LABEL_82;
      }
      sub_23F3625D8((uint64_t)v13, &qword_256E70498);
      sub_23F3625D8((uint64_t)v16, &qword_256E70498);
LABEL_27:
      v30 = v56;
      v33 = v24 + v56;
      if (a1 < v24 || a1 >= v33)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else
      {
        if (a1 == v24)
        {
LABEL_36:
          v31 = a2;
          v24 = v33;
          goto LABEL_40;
        }
        swift_arrayInitWithTakeBackToFront();
      }
      v30 = v56;
      goto LABEL_36;
    }
  }
LABEL_82:
  v49 = v26 - v24;
  if (v56 != -1 || v49 != 0x8000000000000000)
  {
    sub_23F37A914(v24, v49 / v56);
    return;
  }
LABEL_90:
  __break(1u);
}

void sub_23F39B05C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  int64_t v21;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int64_t v28;
  uint64_t v30;
  void (*v31)(uint64_t, unint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  char v39;
  void (*v40)(uint64_t, uint64_t);
  unint64_t v41;
  BOOL v42;
  unint64_t v43;
  void (*v44)(uint64_t, uint64_t);
  BOOL v45;
  BOOL v46;
  void (*v47)(char *, unint64_t, uint64_t);
  unint64_t v48;
  uint64_t v49;
  void (*v50)(char *, unint64_t, uint64_t);
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v57;
  void (*v58)(char *, uint64_t);
  unint64_t v59;
  BOOL v60;
  BOOL v61;
  unint64_t v62;
  uint64_t v64;
  unint64_t v65;
  void (*v66)(char *, unint64_t, uint64_t);
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  unint64_t v74;

  v8 = sub_23F61AE70();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v72 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v71 = (char *)&v64 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v64 - v15;
  v73 = v17;
  v18 = *(_QWORD *)(v17 + 72);
  if (!v18)
  {
    __break(1u);
LABEL_91:
    __break(1u);
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  v19 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v18 == -1)
    goto LABEL_91;
  v21 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v18 == -1)
    goto LABEL_92;
  v69 = v14;
  v70 = v18;
  v23 = v19 / v18;
  v24 = v21 / v18;
  if (v19 / v18 >= v21 / v18)
  {
    sub_23F37A920(a2, v21 / v18);
    v25 = a4 + v24 * v18;
    if (v24 * v18 < 1 || a1 >= a2)
      goto LABEL_22;
    v69 = -v18;
    v47 = *(void (**)(char *, unint64_t, uint64_t))(v73 + 16);
    v65 = a4;
    v66 = v47;
    v67 = a1;
    while (1)
    {
      v48 = a3;
      v74 = v25;
      v49 = v69;
      v68 = v25 + v69;
      v50 = v66;
      ((void (*)(char *))v66)(v71);
      v51 = a2 + v49;
      v50(v72, a2 + v49, v8);
      v52 = sub_23F61AE40();
      v54 = v53;
      if (v52 == sub_23F61AE40() && v54 == v55)
        v57 = 0;
      else
        v57 = sub_23F61CC64();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a3 = v48 + v69;
      v58 = *(void (**)(char *, uint64_t))(v73 + 8);
      v58(v72, v8);
      v58(v71, v8);
      v59 = v67;
      if ((v57 & 1) != 0)
      {
        v60 = v48 < a2 || a3 >= a2;
        v18 = v70;
        if (v60)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v48 != a2)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        a2 = v51;
        a4 = v65;
        v25 = v74;
        goto LABEL_84;
      }
      v61 = v48 < v74 || a3 >= v74;
      v18 = v70;
      if (v61)
      {
        v62 = v68;
        swift_arrayInitWithTakeFrontToBack();
      }
      else
      {
        if (v48 == v74)
        {
          v25 = v68;
          goto LABEL_83;
        }
        v62 = v68;
        swift_arrayInitWithTakeBackToFront();
      }
      v25 = v62;
LABEL_83:
      a4 = v65;
LABEL_84:
      if (v25 <= a4 || a2 <= v59)
        goto LABEL_22;
    }
  }
  sub_23F37A920(a1, v19 / v18);
  v25 = a4 + v23 * v18;
  if (v23 * v18 >= 1 && a2 < a3)
  {
    v71 = *(char **)(v73 + 16);
    v72 = v16;
    v30 = v69;
    v74 = a4 + v23 * v18;
    v68 = a3;
    while (1)
    {
      v31 = (void (*)(uint64_t, unint64_t, uint64_t))v71;
      ((void (*)(char *, unint64_t, uint64_t))v71)(v16, a2, v8);
      v31(v30, a4, v8);
      v32 = v8;
      v33 = sub_23F61AE40();
      v35 = v34;
      if (v33 == sub_23F61AE40() && v35 == v36)
        break;
      v38 = v30;
      v39 = sub_23F61CC64();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v40 = *(void (**)(uint64_t, uint64_t))(v73 + 8);
      v40(v38, v32);
      v40((uint64_t)v16, v32);
      v8 = v32;
      if ((v39 & 1) == 0)
        goto LABEL_39;
      v18 = v70;
      v41 = a2 + v70;
      v42 = a1 < a2 || a1 >= v41;
      v43 = v68;
      if (!v42)
      {
        v30 = v69;
        if (a1 != a2)
          swift_arrayInitWithTakeBackToFront();
        v25 = v74;
        goto LABEL_49;
      }
      swift_arrayInitWithTakeFrontToBack();
LABEL_48:
      v25 = v74;
      v30 = v69;
LABEL_49:
      a1 += v18;
      v46 = a4 >= v25 || v41 >= v43;
      a2 = v41;
      if (v46)
        goto LABEL_22;
    }
    swift_bridgeObjectRelease_n();
    v44 = *(void (**)(uint64_t, uint64_t))(v73 + 8);
    v44(v30, v32);
    v44((uint64_t)v16, v32);
    v8 = v32;
LABEL_39:
    v18 = v70;
    v45 = a1 < a4 || a1 >= a4 + v70;
    v43 = v68;
    if (v45)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a1 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v41 = a2;
    a4 += v18;
    goto LABEL_48;
  }
LABEL_22:
  v28 = v25 - a4;
  if (v18 != -1 || v28 != 0x8000000000000000)
  {
    sub_23F37A920(a4, v28 / v18);
    return;
  }
LABEL_93:
  __break(1u);
}

uint64_t sub_23F39B57C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t i;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, unint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  __int128 v40;
  uint64_t v41;
  _QWORD *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int64_t v51;
  void (*v52)(char *, char *, uint64_t);
  unint64_t v53;
  char *v54;

  v2 = sub_23F617000();
  v47 = *(_QWORD *)(v2 - 8);
  v48 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v46 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23F617D08();
  v44 = *(_QWORD *)(v4 - 8);
  v45 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v54 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v43 = (char *)&v37 - v7;
  sub_23F35D2E8(qword_256E70900);
  result = sub_23F61CA78();
  v9 = (_QWORD *)result;
  v10 = 0;
  v49 = a1;
  v13 = *(_QWORD *)(a1 + 64);
  v12 = a1 + 64;
  v11 = v13;
  v14 = 1 << *(_BYTE *)(v12 - 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v11;
  v38 = v12;
  v39 = (unint64_t)(v14 + 63) >> 6;
  v41 = result + 64;
  v40 = xmmword_23F61E7E0;
  v42 = (_QWORD *)result;
  v17 = v45;
  v18 = v46;
  v19 = v47;
  if (!v16)
    goto LABEL_5;
LABEL_4:
  v50 = (v16 - 1) & v16;
  v51 = v10;
  for (i = __clz(__rbit64(v16)) | (v10 << 6); ; i = __clz(__rbit64(v22)) + (v23 << 6))
  {
    v25 = v49;
    v26 = *(_QWORD *)(v49 + 48);
    v28 = v43;
    v27 = v44;
    v53 = *(_QWORD *)(v44 + 72) * i;
    (*(void (**)(char *, unint64_t, uint64_t))(v44 + 16))(v43, v26 + v53, v17);
    v29 = *(void (**)(char *, unint64_t, uint64_t))(v19 + 16);
    v30 = v48;
    v29(v18, *(_QWORD *)(v25 + 56) + *(_QWORD *)(v19 + 72) * i, v48);
    v52 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
    v52(v54, v28, v17);
    sub_23F35D2E8(&qword_256E704B8);
    v31 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for StatementSegment(0) - 8) + 80);
    v32 = (v31 + 32) & ~v31;
    v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = v40;
    v29((char *)(v33 + v32), (unint64_t)v18, v30);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v30);
    v9 = v42;
    *(_QWORD *)(v41 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v52)(v9[6] + v53, v54, v17);
    *(_QWORD *)(v9[7] + 8 * i) = v33;
    v34 = v9[2];
    v35 = __OFADD__(v34, 1);
    v36 = v34 + 1;
    if (v35)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v9[2] = v36;
    v16 = v50;
    v10 = v51;
    if (v50)
      goto LABEL_4;
LABEL_5:
    v21 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_24;
    if (v21 >= v39)
      return (uint64_t)v9;
    v22 = *(_QWORD *)(v38 + 8 * v21);
    v23 = v10 + 1;
    if (!v22)
    {
      v23 = v10 + 2;
      if (v10 + 2 >= v39)
        return (uint64_t)v9;
      v22 = *(_QWORD *)(v38 + 8 * v23);
      if (!v22)
      {
        v23 = v10 + 3;
        if (v10 + 3 >= v39)
          return (uint64_t)v9;
        v22 = *(_QWORD *)(v38 + 8 * v23);
        if (!v22)
          break;
      }
    }
LABEL_18:
    v50 = (v22 - 1) & v22;
    v51 = v23;
  }
  v24 = v10 + 4;
  if (v10 + 4 >= v39)
    return (uint64_t)v9;
  v22 = *(_QWORD *)(v38 + 8 * v24);
  if (v22)
  {
    v23 = v10 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    v23 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v23 >= v39)
      return (uint64_t)v9;
    v22 = *(_QWORD *)(v38 + 8 * v23);
    ++v24;
    if (v22)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

unint64_t sub_23F39B904()
{
  unint64_t result;

  result = qword_256E70890;
  if (!qword_256E70890)
  {
    result = MEMORY[0x242670A44](&unk_23F61EAFC, &type metadata for AlphaExpressionParser.ExpressionRenderingError);
    atomic_store(result, (unint64_t *)&qword_256E70890);
  }
  return result;
}

uint64_t sub_23F39B940(uint64_t a1)
{
  sub_23F617BA0();
  return a1;
}

uint64_t sub_23F39B968(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23F39B990@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;

  return sub_23F398D2C(a1, a2, a3, *(_QWORD *)(v4 + 16), a4);
}

uint64_t sub_23F39B998(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_23F398E18(a1, a2, a3);
}

uint64_t sub_23F39B9B0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

void sub_23F39B9D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if ((a9 & 1) == 0)
  {
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F39BA5C(a5, a6);
  }
}

uint64_t sub_23F39BA5C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_retain();
    sub_23F617BA0();
    return sub_23F617BA0();
  }
  return result;
}

void sub_23F39BA98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if ((a9 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23F39BB1C(a5, a6);
  }
}

uint64_t sub_23F39BB1C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

unint64_t sub_23F39BB58()
{
  unint64_t result;

  result = qword_256E708D0;
  if (!qword_256E708D0)
  {
    result = MEMORY[0x242670A44](&unk_23F632970, &unk_250FE08C0);
    atomic_store(result, (unint64_t *)&qword_256E708D0);
  }
  return result;
}

uint64_t sub_23F39BB94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ParameterPromptMap(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_23F39BBD8()
{
  sub_23F39BBFC(&qword_256E708F0, &qword_256E708F8);
}

void sub_23F39BBFC(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  if (!*a1)
  {
    v3 = sub_23F35EB74(a2);
    atomic_store(MEMORY[0x242670A44](MEMORY[0x24BEE12E0], v3), a1);
  }
  sub_23F362928();
}

uint64_t sub_23F39BC38@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23F36FDA4(*a1, a2);
}

uint64_t sub_23F39BC40()
{
  return sub_23F61A63C();
}

uint64_t getEnumTagSinglePayload for AlphaExpressionParser.ExpressionRenderingError(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
  {
    v6 = *a1;
    if (v6 >= 3)
      v7 = v6 - 2;
    else
      v7 = 0;
    if (v7 >= 6)
      return v7 - 5;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 7;
    if (a2 + 7 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_23F39BCB4 + 4 * byte_23F61E990[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for AlphaExpressionParser.ExpressionRenderingError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 7;
  if (a3 + 7 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xF9)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_23F39BD60 + 4 * byte_23F61E99A[v5]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_23F39BD94 + 4 * byte_23F61E995[v5]))();
}

uint64_t sub_23F39BD94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F39BD9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F39BDA4);
  return result;
}

uint64_t sub_23F39BDB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F39BDB8);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_23F39BDBC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F39BDC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F39BDD0(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 >= 3)
    return v1 - 2;
  else
    return 0;
}

_BYTE *sub_23F39BDE4(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 2;
  return result;
}

ValueMetadata *type metadata accessor for AlphaExpressionParser.ExpressionRenderingError()
{
  return &type metadata for AlphaExpressionParser.ExpressionRenderingError;
}

uint64_t *sub_23F39BE04(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_23F61B32C();
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = a3[6];
    v12 = *(_OWORD *)((char *)a2 + v11 + 24);
    *(_OWORD *)((char *)v4 + v11 + 24) = v12;
    (**(void (***)(void))(v12 - 8))();
    v13 = a3[7];
    v14 = *(_OWORD *)((char *)a2 + v13 + 24);
    *(_OWORD *)((char *)v4 + v13 + 24) = v14;
    (**(void (***)(void))(v14 - 8))();
    v15 = a3[9];
    *(uint64_t *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    *(uint64_t *)((char *)v4 + v15) = *(uint64_t *)((char *)a2 + v15);
    v16 = a3[11];
    *(uint64_t *)((char *)v4 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    *(uint64_t *)((char *)v4 + v16) = *(uint64_t *)((char *)a2 + v16);
    swift_retain();
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F617BA0();
  }
  return v4;
}

uint64_t sub_23F39BF28(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + a2[5];
  v5 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + a2[6]);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + a2[7]);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_BYTE *sub_23F39BFB8(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_23F61B32C();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = a3[6];
  v11 = *(_OWORD *)&a2[v10 + 24];
  *(_OWORD *)&a1[v10 + 24] = v11;
  (**(void (***)(void))(v11 - 8))();
  v12 = a3[7];
  v13 = *(_OWORD *)&a2[v12 + 24];
  *(_OWORD *)&a1[v12 + 24] = v13;
  (**(void (***)(void))(v13 - 8))();
  v14 = a3[9];
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  *(_QWORD *)&a1[v14] = *(_QWORD *)&a2[v14];
  v15 = a3[11];
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  *(_QWORD *)&a1[v15] = *(_QWORD *)&a2[v15];
  swift_retain();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F617BA0();
  return a1;
}

_BYTE *sub_23F39C0B0(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_23F61B32C();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  sub_23F361AD0((uint64_t *)&a1[a3[6]], (uint64_t *)&a2[a3[6]]);
  sub_23F361AD0((uint64_t *)&a1[a3[7]], (uint64_t *)&a2[a3[7]]);
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  swift_retain();
  swift_release();
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[11]] = *(_QWORD *)&a2[a3[11]];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  return a1;
}

_BYTE *sub_23F39C1AC(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  __int128 v14;
  _BYTE *v15;
  _BYTE *v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_23F61B32C();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = a3[7];
  v12 = &a1[v10];
  v13 = &a2[v10];
  v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  *((_QWORD *)v12 + 4) = *((_QWORD *)v13 + 4);
  v15 = &a1[v11];
  v16 = &a2[v11];
  v17 = *((_OWORD *)v16 + 1);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v17;
  *((_QWORD *)v15 + 4) = *((_QWORD *)v16 + 4);
  v18 = a3[9];
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  *(_QWORD *)&a1[v18] = *(_QWORD *)&a2[v18];
  v19 = a3[11];
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  *(_QWORD *)&a1[v19] = *(_QWORD *)&a2[v19];
  return a1;
}

_BYTE *sub_23F39C274(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  __int128 v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  __int128 v17;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_23F61B32C();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&a1[v10]);
  v13 = *((_OWORD *)v12 + 1);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v13;
  *((_QWORD *)v11 + 4) = *((_QWORD *)v12 + 4);
  v14 = a3[7];
  v15 = &a1[v14];
  v16 = &a2[v14];
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&a1[v14]);
  v17 = *((_OWORD *)v16 + 1);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v17;
  *((_QWORD *)v15 + 4) = *((_QWORD *)v16 + 4);
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  swift_release();
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[11]] = *(_QWORD *)&a2[a3[11]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23F39C378()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F39C388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = sub_23F384B34();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return sub_23F36195C(a1 + *(int *)(a3 + 20), a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 24);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_23F39C404()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F39C414(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = sub_23F384B34();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return sub_23F36196C(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 24) = (a2 - 1);
  return result;
}

uint64_t sub_23F39C48C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F61B32C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_23F39C530()
{
  unint64_t result;

  result = qword_256E709B0;
  if (!qword_256E709B0)
  {
    result = MEMORY[0x242670A44](&unk_23F61EABC, &type metadata for AlphaExpressionParser.ExpressionRenderingError);
    atomic_store(result, (unint64_t *)&qword_256E709B0);
  }
  return result;
}

uint64_t sub_23F39C56C()
{
  return 0;
}

uint64_t sub_23F39C578@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_23F39C584@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_23F39C590(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t destroy for AlphaPlanParser(uint64_t a1)
{
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  return _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 40);
}

uint64_t initializeWithCopy for AlphaPlanParser(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  return a1;
}

uint64_t *assignWithCopy for AlphaPlanParser(uint64_t *a1, uint64_t *a2)
{
  sub_23F361AD0(a1, a2);
  sub_23F361AD0(a1 + 5, a2 + 5);
  return a1;
}

void *initializeWithTake for AlphaPlanParser(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x50uLL);
}

uint64_t assignWithTake for AlphaPlanParser(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for AlphaPlanParser(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 80))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AlphaPlanParser(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AlphaPlanParser()
{
  return &type metadata for AlphaPlanParser;
}

uint64_t sub_23F39C764(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F61B32C();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_23F39C7A0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F61B32C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_23F39C7D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_23F39C818(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_23F39C85C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_23F39C8A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_23F39C8E4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F39C8F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23F39E554();
  return sub_23F36195C(v1, v0, v2);
}

uint64_t sub_23F39C918()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F39C924()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23F39E554();
  return sub_23F36196C(v1, v0, v0, v2);
}

uint64_t type metadata accessor for AlphaProgramStatementParser()
{
  uint64_t result;

  result = qword_256E70A10;
  if (!qword_256E70A10)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F39C988()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F61B32C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_23F39C9F0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (**v37)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  void *v51;
  char v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  BOOL v113;
  void (*v114)(uint64_t, char *, uint64_t);
  uint64_t v115;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v117;
  unint64_t v118;
  BOOL v119;
  _QWORD *v120;
  uint64_t v121;
  BOOL v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void (*v132)(uint64_t, uint64_t);
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t *v160;
  char *v161;
  _QWORD v162[4];
  void *v163;

  v160 = a3;
  v157 = a2;
  v156 = sub_23F617D08();
  v141 = *(_QWORD *)(v156 - 8);
  sub_23F362850();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v134 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v134 - v8;
  v140 = sub_23F61A2C4();
  v10 = *(_QWORD *)(v140 - 8);
  MEMORY[0x24BDAC7A8](v140);
  sub_23F38F964();
  v13 = v12 - v11;
  v144 = sub_23F61B95C();
  v159 = *(_QWORD *)(v144 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F36285C();
  v154 = v15;
  sub_23F39C56C();
  v158 = sub_23F61BBA8();
  v152 = *(_QWORD *)(v158 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F3834D0();
  v153 = v17;
  MEMORY[0x24BDAC7A8](v18);
  v161 = (char *)&v134 - v19;
  sub_23F39C56C();
  v137 = sub_23F617000();
  v136 = *(_QWORD *)(v137 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F36285C();
  v138 = v21;
  sub_23F39C56C();
  v148 = sub_23F61B5D8();
  v145 = *(_QWORD *)(v148 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F36285C();
  v139 = v23;
  sub_23F35D2E8(&qword_256E70238);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F3834D0();
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F39E564();
  MEMORY[0x24BDAC7A8](v27);
  v147 = (uint64_t)&v134 - v28;
  sub_23F35D2E8(&qword_256E6FFA0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F38F964();
  v32 = v31 - v30;
  v33 = sub_23F61A24C();
  v150 = *(_QWORD *)(v33 - 8);
  v151 = v33;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v34);
  sub_23F36285C();
  v149 = v35;
  sub_23F39C56C();
  v36 = sub_23F619FAC();
  v37 = *(uint64_t (***)(uint64_t, uint64_t))(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  sub_23F38F964();
  v40 = v39 - v38;
  v155 = a1;
  sub_23F61A63C();
  v41 = v37[11](v40, v36);
  if (v41 == *MEMORY[0x24BE54CC0])
  {
LABEL_2:
    sub_23F39E548(v37[1]);
LABEL_3:
    v42 = v157;
    sub_23F617BA0();
    sub_23F39E53C();
    sub_23F36196C(v32, 0, 1, v156);
    type metadata accessor for AssistantTurnItem(0);
    swift_allocObject();
    v43 = sub_23F3F6FB4(2, v42);
    swift_retain();
    v44 = v160;
    sub_23F376970();
    sub_23F39E5B8(*v44);
    sub_23F4053A4(v10, v43, v44);
    v45 = *v44;
    swift_release();
    *v44 = v45;
    return;
  }
  if (v41 != *MEMORY[0x24BE54CD8])
  {
    if (v41 != *MEMORY[0x24BE54CD0])
    {
      if (v41 == *MEMORY[0x24BE54CE8])
      {
        sub_23F39E548(v37[12]);
        v58 = v140;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v13, v40, v140);
        v59 = sub_23F61A2B8();
        v60 = sub_23F61A660();
        MEMORY[0x24266D7B0](v60);
        sub_23F39D9A4(v59, v157, (uint64_t)v9, (uint64_t)v7, v160);
        v61 = *(void (**)(char *, uint64_t))(v141 + 8);
        v62 = v156;
        v61(v7, v156);
        v61(v9, v62);
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v13, v58);
        return;
      }
      if (v41 == *MEMORY[0x24BE54D30])
        goto LABEL_2;
      if (v41 != *MEMORY[0x24BE54D28])
      {
        if (v41 == *MEMORY[0x24BE54D38] || v41 == *MEMORY[0x24BE54C98])
          goto LABEL_2;
        if (v41 != *MEMORY[0x24BE54CF0])
        {
          if (v41 == *MEMORY[0x24BE54D20] || v41 == *MEMORY[0x24BE54D10])
            goto LABEL_2;
          if (v41 == *MEMORY[0x24BE54CA8])
            goto LABEL_3;
        }
      }
      type metadata accessor for PlanGenerationAssistantTurnItem(0);
      v64 = v157;
      sub_23F617BA0();
      sub_23F39E53C();
      v65 = sub_23F39E588();
      sub_23F3F5E68(v65, v64, v32);
      v67 = v66;
      swift_retain();
      v68 = v160;
      sub_23F376970();
      v69 = *(_QWORD *)(*v68 + 16);
      sub_23F376B68(v69);
      sub_23F405390(v69, v67, v68);
      v70 = *v68;
      swift_release();
      *v68 = v70;
    }
    v37[1](v40, v36);
    return;
  }
  sub_23F39E548(v37[12]);
  v47 = v149;
  v46 = v150;
  v48 = v151;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v150 + 32))(v149, v40, v151);
  v50 = sub_23F61A240() == 0x6570735F69726973 && v49 == 0xEA00000000006B61;
  v51 = v163;
  if (v50)
  {
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v52 = sub_23F61CC64();
  swift_bridgeObjectRelease();
  if ((v52 & 1) != 0)
  {
LABEL_15:
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v47, v48);
    return;
  }
  type metadata accessor for PlanGenerationAssistantTurnItem(0);
  v53 = v157;
  sub_23F617BA0();
  sub_23F39E53C();
  v54 = sub_23F39E588();
  sub_23F3F5E68(v54, v53, v32);
  v155 = v55;
  sub_23F61B2FC();
  sub_23F35EA9C(v162, v162[3]);
  sub_23F61A240();
  v56 = v147;
  sub_23F61A024();
  if (v51)
  {

    swift_bridgeObjectRelease();
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v162);
    v57 = v148;
    sub_23F36196C(v56, 1, 1, v148);
  }
  else
  {
    v71 = v148;
    sub_23F36196C(v56, 0, 1, v148);
    v57 = v71;
    swift_bridgeObjectRelease();
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v162);
  }
  v72 = v159;
  v73 = v152;
  v74 = v142;
  sub_23F39E478(v56, v142, &qword_256E70238);
  v75 = sub_23F36195C(v74, 1, v57);
  v76 = MEMORY[0x24BEE4B00];
  v77 = v155;
  if (v75 == 1)
  {
    sub_23F39E4B8(v74, &qword_256E70238);
    v78 = 0;
LABEL_34:
    v84 = v160;
    goto LABEL_35;
  }
  v79 = sub_23F61B530();
  v80 = sub_23F39E574();
  v81(v80, v57);
  v162[0] = v76;
  v82 = *(_QWORD *)(v79 + 16);
  if (!v82)
  {
    sub_23F362984();
    v78 = MEMORY[0x24BEE4B00];
    goto LABEL_34;
  }
  v57 = v79 + ((*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80));
  v83 = *(_QWORD *)(v73 + 72);
  sub_23F617BA0();
  v84 = v160;
  do
  {
    sub_23F39D6E8((uint64_t)v162, v57);
    v57 += v83;
    --v82;
  }
  while (v82);
  swift_bridgeObjectRelease_n();
  v78 = v162[0];
  v72 = v159;
LABEL_35:
  swift_retain();
  sub_23F376970();
  sub_23F39E5B8(*v84);
  sub_23F405390(v57, v77, v84);
  if (v78)
    v85 = v78;
  else
    v85 = v76;
  v84[2] = sub_23F5198CC(v85, v84[2]);
  v86 = v147;
  v87 = v143;
  sub_23F39E478(v147, v143, &qword_256E70238);
  v88 = v148;
  if (sub_23F36195C(v87, 1, v148) == 1)
  {
    swift_release();
    sub_23F39E4B8(v86, &qword_256E70238);
    (*(void (**)(uint64_t, uint64_t))(v150 + 8))(v149, v151);
    sub_23F39E4B8(v87, &qword_256E70238);
    return;
  }
  v89 = v145;
  v90 = v139;
  sub_23F38426C(v139, v87, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v145 + 32));
  v91 = v138;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v136 + 16))(v138, v77 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime17AssistantTurnItem_id, v137);
  v92 = v135;
  sub_23F38426C(v135, v90, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v89 + 16));
  sub_23F36196C(v92, 0, 1, v88);
  sub_23F372824(v92, v91, v93, v94, v95, v96, v97, v98, v134, v135, v136, v137, v138, v139, v140, v141, v142, v143);
  v99 = sub_23F61B530();
  v100 = MEMORY[0x24BEE4AF8];
  v162[0] = MEMORY[0x24BEE4AF8];
  v157 = *(_QWORD *)(v99 + 16);
  if (!v157)
  {
    v123 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_78:
    swift_bridgeObjectRelease();
    v162[0] = v100;
    v124 = v123[2];
    if (v124)
    {
      v125 = (uint64_t)v123
           + ((*(unsigned __int8 *)(v152 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v152 + 80));
      v126 = v72;
      v127 = *(_QWORD *)(v152 + 72);
      v163 = v123;
      v128 = swift_retain();
      do
      {
        MEMORY[0x24266F0AC](v128);
        sub_23F61B938();
        sub_23F39E5AC(*(uint64_t (**)(uint64_t, uint64_t))(v126 + 8));
        sub_23F3867E4();
        v125 += v127;
        --v124;
      }
      while (v124);
      v129 = swift_release_n();
      v130 = v162[0];
      v72 = v126;
    }
    else
    {
      v129 = swift_release();
      v130 = MEMORY[0x24BEE4AF8];
    }
    MEMORY[0x24266EA34](v129);
    sub_23F61B938();
    sub_23F39E5AC(*(uint64_t (**)(uint64_t, uint64_t))(v72 + 8));
    v162[0] = v130;
    sub_23F3867E4();
    sub_23F35FEEC();
    swift_release();
    v131 = sub_23F39E574();
    v132(v131, v148);
    sub_23F39E4B8(v147, &qword_256E70238);
    (*(void (**)(uint64_t, uint64_t))(v150 + 8))(v149, v151);
    return;
  }
  v163 = 0;
  v101 = 0;
  v102 = v152;
  v103 = v158;
  v104 = (uint64_t)v161;
  v156 = v99;
  while (1)
  {
    if (v101 >= *(_QWORD *)(v99 + 16))
    {
      __break(1u);
      goto LABEL_91;
    }
    v105 = (*(unsigned __int8 *)(v102 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80);
    v106 = *(_QWORD *)(v102 + 72);
    sub_23F38426C(v104, v99 + v105 + v106 * v101, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v102 + 16));
    if (qword_256E6EE48 != -1)
      swift_once();
    v107 = (_QWORD *)qword_256E7FD98;
    sub_23F617BA0();
    v108 = sub_23F61BB78();
    v110 = v109;
    v111 = v107[2];
    if (!v111)
    {
      sub_23F384120();
LABEL_53:
      sub_23F362984();
      v114 = *(void (**)(uint64_t, char *, uint64_t))(v102 + 32);
      v114((uint64_t)v153, v161, v103);
      v115 = v162[0];
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v72 = v159;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_23F37B758();
        v115 = v162[0];
      }
      v117 = *(_QWORD *)(v115 + 16);
      if (v117 >= *(_QWORD *)(v115 + 24) >> 1)
      {
        sub_23F37B758();
        v115 = v162[0];
      }
      *(_QWORD *)(v115 + 16) = v117 + 1;
      v118 = v115 + v105 + v117 * v106;
      v103 = v158;
      v114(v118, v153, v158);
      v162[0] = v115;
      v104 = (uint64_t)v161;
      goto LABEL_58;
    }
    v112 = v108;
    v113 = v107[4] == v108 && v107[5] == v109;
    if (!v113 && (sub_23F39E52C() & 1) == 0)
    {
      if (v111 == 1)
        goto LABEL_61;
      v119 = v107[6] == v112 && v107[7] == v110;
      if (!v119 && (sub_23F39E52C() & 1) == 0)
        break;
    }
LABEL_51:
    sub_23F384120();
    sub_23F362984();
    v102 = v152;
    v104 = (uint64_t)v161;
    v103 = v158;
    (*(void (**)(char *, uint64_t))(v152 + 8))(v161, v158);
    v72 = v159;
LABEL_58:
    ++v101;
    v99 = v156;
    if (v101 == v157)
    {
      v123 = (_QWORD *)v162[0];
      v100 = MEMORY[0x24BEE4AF8];
      goto LABEL_78;
    }
  }
  if (v111 == 2)
  {
LABEL_61:
    sub_23F384120();
    v102 = v152;
    v103 = v158;
    goto LABEL_53;
  }
  v120 = v107 + 9;
  v121 = 2;
  while (!__OFADD__(v121, 1))
  {
    v146 = v121 + 1;
    v122 = *(v120 - 1) == v112 && *v120 == v110;
    if (v122 || (sub_23F39E52C() & 1) != 0)
      goto LABEL_51;
    v120 += 2;
    ++v121;
    if (v146 == v111)
      goto LABEL_61;
  }
LABEL_91:
  __break(1u);
  sub_23F362984();
  swift_bridgeObjectRelease();
  __break(1u);
}

uint64_t sub_23F39D6E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(void);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  void (*v31)(uint64_t, _QWORD *, uint64_t);
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(_QWORD *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;

  v48 = a1;
  v52 = a2;
  v2 = sub_23F35D2E8(&qword_256E6FD18);
  MEMORY[0x24BDAC7A8](v2);
  v47 = (uint64_t)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23F6184B8();
  v44 = *(_QWORD *)(v4 - 8);
  v5 = v44;
  v6 = MEMORY[0x24BDAC7A8](v4);
  v46 = (uint64_t)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v45 = (uint64_t *)((char *)&v43 - v9);
  MEMORY[0x24BDAC7A8](v8);
  v50 = (uint64_t *)((char *)&v43 - v10);
  v11 = sub_23F35D2E8(&qword_256E70A48);
  v43 = swift_allocBox();
  v13 = v12;
  v14 = (uint64_t *)((char *)v12 + *(int *)(v11 + 48));
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_23F616FDC();
  *(_QWORD *)(v15 + 24) = v16;
  *v13 = v15;
  v17 = *MEMORY[0x24BE54960];
  v18 = *(void (**)(void))(v5 + 104);
  ((void (*)(uint64_t *, uint64_t, uint64_t))v18)(v13, v17, v4);
  sub_23F61BB78();
  v19 = sub_23F61C1FC();
  v21 = v20;
  swift_bridgeObjectRelease();
  *v14 = v19;
  v14[1] = v21;
  *v50 = v43;
  v22 = *MEMORY[0x24BE54938];
  v18();
  v43 = swift_allocBox();
  v24 = v23;
  v25 = (uint64_t *)((char *)v23 + *(int *)(v11 + 48));
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = sub_23F616FDC();
  *(_QWORD *)(v26 + 24) = v27;
  *v24 = v26;
  ((void (*)(uint64_t *, uint64_t, uint64_t))v18)(v24, v17, v4);
  *v25 = sub_23F61BB78();
  v25[1] = v28;
  v29 = v45;
  *v45 = v43;
  ((void (*)(_QWORD *, uint64_t, uint64_t))v18)(v29, v22, v4);
  v30 = v44;
  v31 = *(void (**)(uint64_t, _QWORD *, uint64_t))(v44 + 16);
  v32 = v46;
  v33 = v50;
  v31(v46, v50, v4);
  v34 = v47;
  v31(v47, v29, v4);
  sub_23F36196C(v34, 0, 1, v4);
  sub_23F372914(v34, v32, v35, v36, v37, v38, v39, v40, v43, v44, (uint64_t)v45, v46, v47, v48, v49, (uint64_t)v50, v51, v52);
  v41 = *(void (**)(_QWORD *, uint64_t))(v30 + 8);
  v41(v29, v4);
  return ((uint64_t (*)(_QWORD *, uint64_t))v41)(v33, v4);
}

uint64_t sub_23F39D9A4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  void (*v47)(char *, uint64_t);
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v60;
  NSObject *v61;
  os_log_type_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  NSObject *v71;
  os_log_type_t v72;
  uint8_t *v73;
  uint64_t v74;
  uint64_t v75;
  NSObject *v76;
  os_log_type_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  char *v86;
  char *v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  char *v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  __int128 v102;
  uint64_t v103;
  uint64_t v104;
  __int128 v105;
  __int128 v106;
  uint64_t v107;
  uint64_t v108;

  v98 = a4;
  v83 = a3;
  v84 = a2;
  v88 = a1;
  v90 = sub_23F619E98();
  v89 = *(_QWORD *)(v90 - 8);
  v6 = MEMORY[0x24BDAC7A8](v90);
  v87 = (char *)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v86 = (char *)&v81 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v93 = (char *)&v81 - v10;
  v11 = sub_23F617D08();
  v100 = *(_QWORD *)(v11 - 8);
  v101 = v11;
  v12 = MEMORY[0x24BDAC7A8](v11);
  v92 = (char *)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v94 = (char *)&v81 - v14;
  v97 = sub_23F35D2E8(&qword_256E70A50);
  MEMORY[0x24BDAC7A8](v97);
  v99 = (uint64_t)&v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23F35D2E8(&qword_256E6FFA0);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v82 = (char *)&v81 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v96 = (uint64_t)&v81 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v81 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v81 - v24;
  v85 = a5;
  v26 = *a5;
  v27 = *(_QWORD *)(*a5 + 16);
  v91 = *a5;
  if (!v27)
  {
    sub_23F617BA0();
LABEL_13:
    v107 = 0;
    v105 = 0u;
    v106 = 0u;
    goto LABEL_15;
  }
  v28 = v26 + 32;
  sub_23F617BA0();
  v29 = &qword_256E6FFA0;
  while (1)
  {
    sub_23F361418(v28, (uint64_t)&v102);
    v30 = (uint64_t)v25;
    v31 = v29;
    v32 = v103;
    v33 = v104;
    sub_23F35EA9C(&v102, v103);
    v34 = *(void (**)(uint64_t, uint64_t))(v33 + 32);
    v35 = v32;
    v36 = v33;
    v29 = v31;
    v37 = v100;
    v38 = v101;
    v34(v35, v36);
    (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v23, v98, v38);
    sub_23F36196C((uint64_t)v23, 0, 1, v38);
    v39 = v99;
    v40 = v99 + *(int *)(v97 + 48);
    sub_23F39E478((uint64_t)v25, v99, v31);
    sub_23F39E478((uint64_t)v23, v40, v31);
    if (sub_23F36195C(v39, 1, v38) == 1)
      break;
    v41 = v39;
    v42 = v39;
    v43 = v96;
    sub_23F39E478(v41, v96, v31);
    if (sub_23F36195C(v40, 1, v101) == 1)
    {
      sub_23F39E4B8((uint64_t)v23, v31);
      sub_23F39E4B8((uint64_t)v25, v31);
      (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v43, v101);
      v39 = v42;
      goto LABEL_8;
    }
    v44 = v100;
    v45 = v101;
    v46 = v94;
    (*(void (**)(char *, uint64_t, uint64_t))(v100 + 32))(v94, v40, v101);
    sub_23F39E4F0((unint64_t *)&qword_256E701E8, MEMORY[0x24BE52160]);
    v95 = sub_23F61C0A0();
    v47 = *(void (**)(char *, uint64_t))(v44 + 8);
    v29 = v31;
    v48 = v46;
    v25 = (char *)v30;
    v47(v48, v45);
    sub_23F39E4B8((uint64_t)v23, v31);
    sub_23F39E4B8(v30, v31);
    v47((char *)v43, v45);
    sub_23F39E4B8(v99, v31);
    if ((v95 & 1) != 0)
      goto LABEL_14;
LABEL_10:
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v102);
    v28 += 40;
    if (!--v27)
      goto LABEL_13;
  }
  sub_23F39E4B8((uint64_t)v23, v31);
  sub_23F39E4B8((uint64_t)v25, v31);
  if (sub_23F36195C(v40, 1, v101) != 1)
  {
LABEL_8:
    sub_23F39E4B8(v39, &qword_256E70A50);
    goto LABEL_10;
  }
  sub_23F39E4B8(v39, &qword_256E6FFA0);
LABEL_14:
  sub_23F362678(&v102, (uint64_t)&v105);
LABEL_15:
  swift_bridgeObjectRelease();
  v49 = v93;
  v50 = v92;
  if (*((_QWORD *)&v106 + 1))
  {
    sub_23F362678(&v105, (uint64_t)&v108);
    sub_23F361418((uint64_t)&v108, (uint64_t)&v105);
    sub_23F35D2E8(&qword_256E70420);
    type metadata accessor for EvaluationListResultTurnItem(0);
    if (swift_dynamicCast())
    {
      v51 = v102;
      if ((v88 & 0x8000000000000000) == 0
        && *(_QWORD *)(*(_QWORD *)(v102
                                 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime28EvaluationListResultTurnItem_listStatementSegmentIndices)
                     + 16) > v88)
      {
        v52 = v85;
        sub_23F50F6F8();
        v53 = v101;
        v54 = (uint64_t)v82;
        (*(void (**)(char *, uint64_t, uint64_t))(v100 + 16))(v82, v83, v101);
        sub_23F36196C(v54, 0, 1, v53);
        type metadata accessor for AssistantTurnItem(0);
        swift_allocObject();
        v55 = v84;
        sub_23F617BA0();
        v56 = sub_23F3F6FB4(2, v55);
        swift_retain();
        sub_23F376970();
        v57 = *(_QWORD *)(*v52 + 16);
        sub_23F376B68(v57);
        sub_23F4053A4(v57, v56, v52);
        v58 = *v52;
        swift_release();
        *v52 = v58;
        _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v108);
        return swift_release();
      }
      sub_23F619088();
      swift_retain();
      v76 = sub_23F619E8C();
      v77 = sub_23F61C628();
      if (os_log_type_enabled(v76, v77))
      {
        v78 = swift_slowAlloc();
        v79 = swift_slowAlloc();
        *(_QWORD *)&v105 = v79;
        *(_DWORD *)v78 = 136315650;
        sub_23F37AE00(0xD00000000000005CLL, 0x800000023F634B80, (uint64_t *)&v105);
        *(_QWORD *)&v102 = v80;
        sub_23F61C790();
        *(_WORD *)(v78 + 12) = 2048;
        *(_QWORD *)&v102 = v88;
        sub_23F61C790();
        *(_WORD *)(v78 + 22) = 2048;
        *(_QWORD *)&v102 = *(_QWORD *)(*(_QWORD *)(v51
                                                 + OBJC_IVAR____TtC30IntelligenceFlowPlannerRuntime28EvaluationListResultTurnItem_listStatementSegmentIndices)
                                     + 16);
        sub_23F61C790();
        swift_release();
        _os_log_impl(&dword_23F35A000, v76, v77, "[%s] Pick index %ld out of range: %ld items", (uint8_t *)v78, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x242670B70](v79, -1, -1);
        MEMORY[0x242670B70](v78, -1, -1);
        swift_release();
      }
      else
      {
        swift_release_n();
      }

      (*(void (**)(char *, uint64_t))(v89 + 8))(v49, v90);
    }
    else
    {
      v70 = v86;
      sub_23F619088();
      v71 = sub_23F619E8C();
      v72 = sub_23F61C628();
      if (os_log_type_enabled(v71, v72))
      {
        v73 = (uint8_t *)swift_slowAlloc();
        v74 = swift_slowAlloc();
        *(_QWORD *)&v105 = v74;
        *(_DWORD *)v73 = 136315138;
        sub_23F37AE00(0xD00000000000005CLL, 0x800000023F634B80, (uint64_t *)&v105);
        *(_QWORD *)&v102 = v75;
        sub_23F61C790();
        _os_log_impl(&dword_23F35A000, v71, v72, "[%s] Can only support related disambiguation entries", v73, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x242670B70](v74, -1, -1);
        MEMORY[0x242670B70](v73, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v89 + 8))(v70, v90);
    }
    return _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v108);
  }
  else
  {
    sub_23F39E4B8((uint64_t)&v105, &qword_256E70A58);
    v60 = v87;
    sub_23F619088();
    (*(void (**)(char *, uint64_t, uint64_t))(v100 + 16))(v50, v98, v101);
    v61 = sub_23F619E8C();
    v62 = sub_23F61C628();
    if (os_log_type_enabled(v61, v62))
    {
      v63 = swift_slowAlloc();
      v64 = swift_slowAlloc();
      v108 = v64;
      *(_DWORD *)v63 = 136315394;
      sub_23F37AE00(0xD00000000000005CLL, 0x800000023F634B80, &v108);
      *(_QWORD *)&v105 = v65;
      sub_23F61C790();
      *(_WORD *)(v63 + 12) = 2080;
      sub_23F39E4F0((unint64_t *)&qword_256E6FB60, MEMORY[0x24BE52170]);
      v66 = v101;
      v67 = sub_23F61CC1C();
      sub_23F37AE00(v67, v68, &v108);
      *(_QWORD *)&v105 = v69;
      sub_23F61C790();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v100 + 8))(v50, v66);
      _os_log_impl(&dword_23F35A000, v61, v62, "[%s] Could not find the conversation item with StatementId %s", (uint8_t *)v63, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x242670B70](v64, -1, -1);
      MEMORY[0x242670B70](v63, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v100 + 8))(v50, v101);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v89 + 8))(v60, v90);
  }
}

uint64_t sub_23F39E454()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_23F39E478(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_23F35D2E8(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  sub_23F362928();
}

void sub_23F39E4B8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_23F35D2E8(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  sub_23F362928();
}

void sub_23F39E4F0(unint64_t *a1, uint64_t a2)
{
  uint64_t v4;

  if (!*a1)
  {
    v4 = sub_23F617D08();
    atomic_store(MEMORY[0x242670A44](a2, v4), a1);
  }
  sub_23F362928();
}

uint64_t sub_23F39E52C()
{
  return sub_23F61CC64();
}

uint64_t sub_23F39E53C()
{
  return sub_23F61A660();
}

uint64_t sub_23F39E548@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_23F39E554()
{
  return sub_23F61B32C();
}

void sub_23F39E564()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = v0;
}

uint64_t sub_23F39E574()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F39E588()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F36196C(v0, 0, 1, *(_QWORD *)(v1 - 176));
  return 1;
}

uint64_t sub_23F39E5AC@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_23F39E5B8@<X0>(uint64_t a1@<X8>)
{
  return sub_23F376B68(*(_QWORD *)(a1 + 16));
}

void sub_23F39E5C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v7 = MEMORY[0x24BEE4AF8];
    sub_23F3B1D18();
    v4 = a1 + 40;
    do
    {
      sub_23F384324();
      sub_23F61C1FC();
      sub_23F3B1D2C();
      swift_bridgeObjectRelease();
      v5 = *(_QWORD *)(v7 + 16);
      if (v5 >= *(_QWORD *)(v7 + 24) >> 1)
        sub_23F37B47C();
      v4 += 16;
      *(_QWORD *)(v7 + 16) = v5 + 1;
      v6 = v7 + 16 * v5;
      *(_QWORD *)(v6 + 32) = a1;
      *(_QWORD *)(v6 + 40) = v1;
      --v2;
    }
    while (v2);
  }
  sub_23F3B1AAC();
}

uint64_t sub_23F39E688(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;

  v33 = sub_23F35D2E8(&qword_256E70500);
  v3 = *(_QWORD *)(v33 - 8);
  v4 = MEMORY[0x24BDAC7A8](v33);
  v31 = (uint64_t *)((char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v4);
  v32 = (char *)&v26 - v6;
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (v7)
  {
    v26 = v1;
    v34 = MEMORY[0x24BEE4AF8];
    sub_23F37B47C();
    v9 = (uint64_t *)(a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
    v30 = *(_QWORD *)(v3 + 72);
    v10 = sub_23F61BBA8();
    v28 = *(_QWORD *)(v10 - 8);
    v29 = v10;
    v27 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
    v11 = v10;
    do
    {
      v12 = v33;
      v13 = *(int *)(v33 + 64);
      v14 = &v32[v13];
      v15 = *v9;
      v16 = v9[1];
      v18 = v9[2];
      v17 = v9[3];
      v27(&v32[v13], (char *)v9 + v13, v11);
      v19 = *(int *)(v12 + 64);
      v20 = v15;
      v21 = v31;
      v22 = (char *)v31 + v19;
      *v31 = v20;
      v21[1] = v16;
      v21[2] = v18;
      v21[3] = v17;
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v22, v14, v11);
      sub_23F617BA0();
      swift_bridgeObjectRetain_n();
      sub_23F617BA0();
      sub_23F3625D8((uint64_t)v21, &qword_256E70500);
      v8 = v34;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F37B47C();
        v8 = v34;
      }
      v23 = *(_QWORD *)(v8 + 16);
      if (v23 >= *(_QWORD *)(v8 + 24) >> 1)
      {
        sub_23F37B47C();
        v8 = v34;
      }
      v9 = (uint64_t *)((char *)v9 + v30);
      *(_QWORD *)(v8 + 16) = v23 + 1;
      v24 = v8 + 16 * v23;
      *(_QWORD *)(v24 + 32) = v20;
      *(_QWORD *)(v24 + 40) = v16;
      --v7;
    }
    while (v7);
  }
  return v8;
}

void sub_23F39E898(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v9 = MEMORY[0x24BEE4AF8];
    sub_23F3B1D18();
    v3 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v3 - 1);
      v4 = *v3;
      v7 = *(_QWORD *)(v9 + 16);
      v6 = *(_QWORD *)(v9 + 24);
      sub_23F383E5C();
      if (v7 >= v6 >> 1)
        sub_23F37B47C();
      v3 += 8;
      *(_QWORD *)(v9 + 16) = v7 + 1;
      v8 = v9 + 16 * v7;
      *(_QWORD *)(v8 + 32) = v5;
      *(_QWORD *)(v8 + 40) = v4;
      --v1;
    }
    while (v1);
  }
  sub_23F3B1AAC();
}

uint64_t sub_23F39E944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  unint64_t v20;
  void (*v21)(char *, unint64_t, uint64_t);
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  _QWORD v40[2];
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;

  v45 = a4;
  v56 = a3;
  v7 = sub_23F35D2E8(&qword_256E70520);
  v43 = *(_QWORD *)(v7 - 8);
  v44 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v42 = (uint64_t)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F61BBA8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v41 = (char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v40 - v14;
  result = MEMORY[0x24BDAC7A8](v13);
  v59 = (char *)v40 - v17;
  v60 = MEMORY[0x24BEE4AF8];
  v55 = *(_QWORD *)(a1 + 16);
  if (!v55)
  {
    v39 = MEMORY[0x24BEE4AF8];
LABEL_22:
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    return v39;
  }
  v40[1] = v4;
  v18 = 0;
  v51 = a2 + 32;
  v52 = a2 + 16;
  v53 = a1;
  v54 = a2;
  v19 = v59;
  while (v18 < *(_QWORD *)(a1 + 16))
  {
    v20 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v58 = *(_QWORD *)(v10 + 72);
    v21 = *(void (**)(char *, unint64_t, uint64_t))(v10 + 16);
    v21(v19, a1 + v20 + v58 * v18, v9);
    v57 = v20;
    v22 = v56 + v20;
    v23 = *(_QWORD *)(v56 + 16);
    if (a2)
    {
      swift_retain();
      sub_23F3BDB68();
      v25 = v24;
      v27 = v26;
      result = swift_release();
      if ((v27 & 1) != 0)
        goto LABEL_18;
      if ((v25 & 0x8000000000000000) != 0)
        goto LABEL_24;
    }
    else
    {
      if (!v23)
        goto LABEL_18;
      v25 = 0;
      while (1)
      {
        v21(v15, v22, v9);
        sub_23F3B121C(&qword_256E70D30, (void (*)(uint64_t))MEMORY[0x24BEBA368]);
        v38 = sub_23F61C0A0();
        result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
        if ((v38 & 1) != 0)
          break;
        ++v25;
        v22 += v58;
        if (v23 == v25)
          goto LABEL_18;
      }
    }
    if (v25 >= *(_QWORD *)(v45 + 16))
      goto LABEL_25;
    v28 = v42;
    sub_23F382EF8(v45+ ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))+ *(_QWORD *)(v43 + 72) * v25, v42, &qword_256E70520);
    v29 = *(_QWORD *)v28;
    v30 = *(_QWORD *)(v28 + 8);
    v31 = *(_QWORD *)(v28 + 16);
    v32 = *(_QWORD *)(v28 + 24);
    v49 = *(_QWORD *)(v28 + 32);
    v50 = v29;
    v33 = *(_QWORD *)(v28 + 40);
    v47 = *(_QWORD *)(v28 + 48);
    v48 = v33;
    v46 = *(_QWORD *)(v28 + 56);
    v34 = *(_BYTE *)(v28 + 64);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v28 + *(int *)(v44 + 48), v9);
    if ((v34 & 1) == 0)
    {
      sub_23F39BA98(v50, v30, v31, v32, v49, v48, v47, v46, 0);
      v35 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v35(v41, v59, v9);
      v36 = v60;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F37B758();
        v36 = v60;
      }
      v37 = *(_QWORD *)(v36 + 16);
      if (v37 >= *(_QWORD *)(v36 + 24) >> 1)
      {
        sub_23F37B758();
        v36 = v60;
      }
      *(_QWORD *)(v36 + 16) = v37 + 1;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v35)(v36 + v57 + v37 * v58, v41, v9);
      v60 = v36;
      v19 = v59;
      goto LABEL_19;
    }
LABEL_18:
    v19 = v59;
    result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v59, v9);
LABEL_19:
    ++v18;
    a2 = v54;
    a1 = v53;
    if (v18 == v55)
    {
      v39 = v60;
      goto LABEL_22;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

void sub_23F39ED30()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(_QWORD);
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  int v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  __n128 v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  __n128 v38;
  __int128 v39;
  __int128 v40;
  _BYTE v41[48];
  uint64_t v42;
  uint64_t v43;
  char v44;

  sub_23F362ABC();
  v5 = v4;
  *(_QWORD *)&v40 = v6;
  v8 = v7;
  v35 = *(_QWORD *)(sub_23F618C68() - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F36285C();
  v34 = v10;
  v37 = sub_23F3B21A0();
  v11 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  sub_23F3B17BC();
  *(_QWORD *)&v39 = sub_23F61B5D8();
  v12 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v13 = sub_23F3B18D8();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F3B1590();
  sub_23F3B21EC(v15, v16, v17);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23F35D2E8(&qword_256E708E0);
    swift_bridgeObjectRelease();
    sub_23F61B4F4();
    v18 = sub_23F3B2118();
LABEL_3:
    v19(v18);
    sub_23F3B15D4();
    v20 = sub_23F61BFEC();
    sub_23F3B1614(v20);
LABEL_10:
    sub_23F362948();
    return;
  }
  v33 = v5;
  v21 = *(_QWORD *)(sub_23F618BB4() - 8);
  v22 = sub_23F3B1CF8();
  v24 = v23(v22);
  if (v24 == *MEMORY[0x24BE57550])
  {
    sub_23F383CA8(v1, *(uint64_t (**)(uint64_t, uint64_t))(v21 + 96));
    sub_23F3B1A0C();
    v25 = sub_23F3B1888();
    (*(void (**)(uint64_t, _QWORD, _BYTE *, uint64_t, uint64_t, uint64_t, double))(v13 + 16))(v2, v40, v41, v33, v1, v13, v25);
LABEL_6:
    sub_23F383CA8(v2, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
    goto LABEL_10;
  }
  if (v24 == *MEMORY[0x24BE57558])
  {
    sub_23F383CA8(v1, *(uint64_t (**)(uint64_t, uint64_t))(v21 + 96));
    sub_23F384840(v3, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 32));
    v26 = v0[8];
    sub_23F3B1424(v0 + 5, v26);
    sub_23F3B20BC(v3, v26);
    v36 = sub_23F3B20A8();
    v27 = v42;
    v28 = v43;
    v29 = v44;
    sub_23F3B15D4();
    v30 = sub_23F61BFEC();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v3, v37);
    *(_OWORD *)v8 = v40;
    *(_OWORD *)(v8 + 16) = v39;
    v31 = v36;
LABEL_9:
    *(__n128 *)(v8 + 32) = v31;
    *(_QWORD *)(v8 + 48) = v27;
    *(_QWORD *)(v8 + 56) = v28;
    *(_BYTE *)(v8 + 64) = v29;
    *(_QWORD *)(v8 + 72) = v30;
    goto LABEL_10;
  }
  if (v24 == *MEMORY[0x24BE57548])
  {
    v18 = sub_23F3B1CF8();
    goto LABEL_3;
  }
  if (v24 == *MEMORY[0x24BE57540])
  {
    sub_23F383CA8(v1, *(uint64_t (**)(uint64_t, uint64_t))(v21 + 96));
    sub_23F3B1A0C();
    v32 = sub_23F3B1888();
    (*(void (**)(uint64_t, _QWORD, uint64_t, _BYTE *, uint64_t, uint64_t, uint64_t, double))(v13 + 24))(v2, v40, 1, v41, v33, v1, v13, v32);
    goto LABEL_6;
  }
  if (v24 == *MEMORY[0x24BE57568])
  {
    sub_23F383CA8(v1, *(uint64_t (**)(uint64_t, uint64_t))(v21 + 96));
    sub_23F38431C(v34, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35 + 32));
    sub_23F3B1424(v0 + 15, v0[18]);
    sub_23F3D73D4((uint64_t)v41);
    v38 = sub_23F3B20A8();
    v27 = v42;
    v28 = v43;
    v29 = v44;
    sub_23F3B15D4();
    v30 = sub_23F61BFEC();
    sub_23F383D74(v34, *(uint64_t (**)(uint64_t, uint64_t))(v35 + 8));
    *(_OWORD *)v8 = v40;
    *(_OWORD *)(v8 + 16) = v39;
    v31 = v38;
    goto LABEL_9;
  }
  sub_23F61CC58();
  __break(1u);
}

void sub_23F39F0DC()
{
  uint64_t v0;

  sub_23F3B15D4();
  v0 = sub_23F61BFEC();
  sub_23F3B1614(v0);
  sub_23F362928();
}

void sub_23F39F11C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(_QWORD);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (**v20)(uint64_t, uint64_t);
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  char v41;

  sub_23F362ABC();
  v35 = v6;
  v8 = v7;
  v34 = *(_QWORD *)(sub_23F618C68() - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F36285C();
  v33 = v10;
  sub_23F3B21A0();
  sub_23F3B19A8();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F383A54();
  sub_23F61B5D8();
  sub_23F3B1E38();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F3B18D8();
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F3B17BC();
  v14 = sub_23F3B1E60();
  sub_23F362600(v14, v15, v16);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23F35D2E8(&qword_256E708E0);
    swift_bridgeObjectRelease();
    v17 = sub_23F61B4F4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v5, v17);
LABEL_3:
    sub_23F3B15D4();
    v18 = sub_23F61BFEC();
    *(_OWORD *)v8 = 0u;
    *(_OWORD *)(v8 + 16) = 0u;
    *(_OWORD *)(v8 + 32) = 0u;
    *(_OWORD *)(v8 + 48) = 0u;
    *(_BYTE *)(v8 + 64) = 1;
    *(_QWORD *)(v8 + 72) = v18;
LABEL_9:
    sub_23F362948();
    return;
  }
  v32 = v8;
  v19 = sub_23F618BB4();
  v20 = *(uint64_t (***)(uint64_t, uint64_t))(v19 - 8);
  v21 = v20[11](v5, v19);
  if (v21 == *MEMORY[0x24BE57550])
  {
    sub_23F362A28(v5, v20[12]);
    sub_23F38431C(v3, v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32));
    v22 = v1[3];
    v23 = v1[4];
    sub_23F3B1424(v1, v22);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 40))(v3, v35, v22, v23);
LABEL_6:
    sub_23F383D74(v3, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    goto LABEL_9;
  }
  if (v21 == *MEMORY[0x24BE57558])
  {
    sub_23F362A28(v5, v20[12]);
    sub_23F38431C(v4, v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 32));
    v24 = v1[8];
    sub_23F3B1424(v1 + 5, v24);
    sub_23F3B20BC(v4, v24);
    sub_23F3B15D4();
    v25 = sub_23F61BFEC();
    sub_23F383D74(v4, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
    *(_OWORD *)v32 = v36;
    *(_OWORD *)(v32 + 16) = v37;
    *(_OWORD *)(v32 + 32) = v38;
    *(_QWORD *)(v32 + 48) = v39;
    *(_QWORD *)(v32 + 56) = v40;
    *(_BYTE *)(v32 + 64) = v41;
    *(_QWORD *)(v32 + 72) = v25;
    goto LABEL_9;
  }
  if (v21 == *MEMORY[0x24BE57548])
  {
    sub_23F362A28(v5, v20[1]);
    v8 = v32;
    goto LABEL_3;
  }
  if (v21 == *MEMORY[0x24BE57540])
  {
    sub_23F362A28(v5, v20[12]);
    sub_23F38431C(v3, v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32));
    v26 = v1[3];
    v27 = v1[4];
    sub_23F3B1424(v1, v26);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 48))(v3, 1, v35, v26, v27);
    goto LABEL_6;
  }
  if (v21 == *MEMORY[0x24BE57568])
  {
    sub_23F362A28(v5, v20[12]);
    sub_23F38426C(v33, v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 32));
    v28 = sub_23F35EA9C(v1 + 15, v1[18]);
    sub_23F35EA9C(v28, v28[3]);
    sub_23F618C44();
    sub_23F3A2898();
    sub_23F3B20F8();
    sub_23F362C60();
    sub_23F61C1FC();
    sub_23F362984();
    sub_23F3B1DE8();
    sub_23F362C60();
    sub_23F61C280();
    sub_23F618C50();
    sub_23F61C1FC();
    sub_23F362984();
    sub_23F3B1DE8();
    sub_23F362C60();
    sub_23F362CDC();
    v29 = sub_23F3B13CC(MEMORY[0x24BEE4B08], 0, 0xE000000000000000);
    sub_23F369004(v29);
    sub_23F3B15D4();
    v30 = sub_23F61BFEC();
    sub_23F383E88(v33, *(uint64_t (**)(uint64_t, uint64_t))(v34 + 8));
    sub_23F3B1B28(v32);
    *(_QWORD *)(v31 + 72) = v30;
    goto LABEL_9;
  }
  sub_23F61CC58();
  __break(1u);
}

void sub_23F39F598(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_23F382FC4(v1, a1);
}

void sub_23F39F5B8()
{
  sub_23F39F0DC();
}

void sub_23F39F5D0()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8[3];
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  sub_23F3B20E0();
  sub_23F61BCD4();
  v1 = sub_23F61C1FC();
  v3 = v2;
  sub_23F362D08();
  sub_23F383E5C();
  v4 = sub_23F3B13CC(MEMORY[0x24BEE4B08], v1, v3);
  sub_23F369004(v4);
  v8[0] = v1;
  v8[1] = v3;
  v8[2] = v5;
  v9 = 0u;
  v10 = 0u;
  v11 = 0;
  sub_23F39F6E4(v8, v0);
  *(_BYTE *)(v0 + 64) = 0;
  swift_bridgeObjectRelease();
  sub_23F362D08();
  sub_23F3837B0();
  sub_23F36679C();
  sub_23F39BB1C(v6, v7);
  sub_23F3B1B14();
}

void sub_23F39F67C(uint64_t *a1@<X8>)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F61BCD4();
  v2 = sub_23F61C1FC();
  v4 = v3;
  sub_23F362984();
  sub_23F383E5C();
  v5 = sub_23F3B13CC(MEMORY[0x24BEE4B08], v2, v4);
  sub_23F369004(v5);
  *a1 = v2;
  a1[1] = v4;
  sub_23F3B1438(v6);
  sub_23F3B16F4();
}

double sub_23F39F6E4@<D0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double result;
  uint64_t v27;

  v3 = *a1;
  v4 = a1[1];
  v5 = a1[2];
  sub_23F61BCD4();
  sub_23F61C1FC();
  swift_bridgeObjectRelease();
  sub_23F38813C();
  sub_23F61C7CC();
  swift_bridgeObjectRelease();
  sub_23F35D2E8(&qword_256E6FD50);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23F61EBC0;
  *(_QWORD *)(inited + 32) = 0x6F636F746F727040;
  *(_QWORD *)(inited + 40) = 0xE90000000000006CLL;
  v7 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(inited + 48) = MEMORY[0x24BEE4B08];
  v27 = v7;
  sub_23F35D2E8(&qword_256E70898);
  sub_23F61C55C();
  sub_23F61C55C();
  sub_23F61C280();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F528350(0, 0xE000000000000000, v27, v3, v4, v5);
  v9 = v8;
  v11 = v10;
  v13 = v12;
  swift_bridgeObjectRelease();
  sub_23F617BA0();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23F61C280();
  *(_QWORD *)(inited + 56) = v9;
  *(_QWORD *)(inited + 64) = v11;
  *(_QWORD *)(inited + 72) = v13;
  sub_23F61C280();
  swift_bridgeObjectRelease();
  sub_23F61C280();
  v14 = sub_23F61C220();
  v16 = v15;
  swift_bridgeObjectRelease();
  sub_23F617BA0();
  v17 = sub_23F3B60F0(MEMORY[0x24BEE4B08], v14, v16);
  sub_23F369004(v17);
  *(_QWORD *)(inited + 80) = v14;
  *(_QWORD *)(inited + 88) = v16;
  *(_QWORD *)(inited + 96) = v18;
  sub_23F3B79EC(0xAuLL, 0xE100000000000000, (_QWORD *)inited);
  v20 = v19;
  v22 = v21;
  v24 = v23;
  swift_setDeallocating();
  sub_23F5135A8();
  v25 = MEMORY[0x24BEE4B00];
  *(_QWORD *)a2 = v20;
  *(_QWORD *)(a2 + 8) = v22;
  *(_QWORD *)(a2 + 16) = v24;
  *(_QWORD *)(a2 + 24) = v25;
  result = 0.0;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)(a2 + 48) = 0u;
  return result;
}

uint64_t sub_23F39F9A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[4];
  _QWORD v16[6];
  _BYTE v17[48];
  uint64_t v18[6];

  sub_23F383004(a1, (uint64_t)v16, &qword_256E70CD8);
  v6 = v16[0];
  v7 = v16[1];
  v8 = v16[2];
  v9 = v16[3];
  v10 = v16[4];
  sub_23F383004(a1, (uint64_t)v17, &qword_256E70CD8);
  if ((v17[40] & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return v6;
  }
  else
  {
    v18[0] = v6;
    v18[1] = v7;
    v18[2] = v8;
    v18[3] = v9;
    v18[4] = v10;
    MEMORY[0x24BDAC7A8](v11);
    v15[2] = a2;
    v15[3] = a3;
    swift_unknownObjectRetain();
    sub_23F617BA0();
    sub_23F3A59B4(v18, (void (*)(char *, char *, char *, uint64_t, uint64_t))sub_23F3B0D60, (uint64_t)v15);
    v12 = v13;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  return v12;
}

uint64_t sub_23F39FABC@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = result;
  if ((a4 & 1) != 0)
  {
    *(_QWORD *)a5 = result;
    *(_OWORD *)(a5 + 8) = 0u;
    *(_OWORD *)(a5 + 24) = 0u;
    *(_OWORD *)(a5 + 40) = 0u;
    *(_QWORD *)(a5 + 56) = 0;
  }
  else
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v10 = sub_23F3B60F0(MEMORY[0x24BEE4B08], v6, a2);
    sub_23F369004(v10);
    v12 = v11;
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    *(_QWORD *)a5 = v6;
    *(_QWORD *)(a5 + 8) = a2;
    *(_QWORD *)(a5 + 16) = v12;
    *(_QWORD *)(a5 + 24) = a3;
    *(_OWORD *)(a5 + 32) = 0u;
    *(_OWORD *)(a5 + 48) = 0u;
  }
  *(_BYTE *)(a5 + 64) = a4 & 1;
  return result;
}

void sub_23F39FB88(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD v9[5];
  _BYTE v10[32];
  char v11;

  sub_23F383004(a1, (uint64_t)v9, &qword_256E70D10);
  v5 = v9[0];
  v4 = v9[1];
  v7 = v9[2];
  v6 = v9[3];
  sub_23F383004(a1, (uint64_t)v10, &qword_256E70D10);
  v8 = v11;
  if ((v11 & 1) != 0)
  {
    *(_QWORD *)a2 = v5;
    *(_OWORD *)(a2 + 8) = 0u;
    *(_OWORD *)(a2 + 24) = 0u;
    *(_OWORD *)(a2 + 40) = 0u;
    *(_QWORD *)(a2 + 56) = 0;
  }
  else
  {
    *(_QWORD *)a2 = v5;
    *(_QWORD *)(a2 + 8) = v4;
    *(_QWORD *)(a2 + 16) = v7;
    *(_QWORD *)(a2 + 24) = v6;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F617BA0();
  }
  *(_BYTE *)(a2 + 64) = v8;
}

void sub_23F39FC50()
{
  sub_23F39FC90();
}

void sub_23F39FC90()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  objc_class *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  _QWORD *v54;
  Class v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  int v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t *v137;
  _QWORD *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  unint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  _QWORD *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  unint64_t v182;
  unint64_t v183;
  _QWORD *v184;
  _QWORD *v185;
  _QWORD *v186;
  uint64_t v187;
  unint64_t *v188;
  unint64_t *v189;
  unint64_t v190;
  unint64_t v191;
  BOOL v192;
  unint64_t v193;
  uint64_t v194;
  char v195;
  unint64_t v196;
  unint64_t v197;
  unint64_t *v198;
  unint64_t v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  unint64_t v206;
  unint64_t v207;
  uint64_t v208;
  uint64_t v209;
  _OWORD *v210;
  uint64_t v211;
  unint64_t v212;
  uint64_t v213;
  unint64_t v214;
  unint64_t *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  unint64_t v219;
  _QWORD *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  unint64_t *v226;
  uint64_t v227;
  uint64_t *v228;
  int v229;
  uint64_t v230;
  unint64_t v231;
  uint64_t v232;
  _QWORD *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  unint64_t v243;
  unint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  _QWORD *v249;
  unint64_t v250;
  unint64_t v251;
  uint64_t v252;
  uint64_t v253;
  _QWORD *v254;
  uint64_t v255;
  uint64_t v256;
  _QWORD *v257;
  uint64_t v258;
  uint64_t v259;
  char *v260;
  char *v261;
  uint64_t v262;
  uint64_t v263;
  char *v264;
  char *v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  void (*v270)(char *, char *, uint64_t);
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  char *v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  void (*v280)(uint64_t, char *, uint64_t);
  uint64_t v281;
  unint64_t *v282;
  char *v283;
  uint64_t v284;
  char v285;
  unint64_t v286;
  char v287;
  uint64_t v288;
  char v289;
  unint64_t *v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  char **v294;
  uint64_t v295;
  uint64_t v296;
  unint64_t v297;
  BOOL v298;
  unint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  _QWORD *v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  char v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t *v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  char v325[12];
  int v326;
  uint64_t *v327;
  int v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  Class v341;
  uint64_t v342;
  Class isa;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  unint64_t v349;
  _QWORD *v350;
  uint64_t v351;
  uint64_t v352;
  unint64_t *v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  char *v364;
  char *v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t *v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t *v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  void (*v375)(uint64_t);
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  _QWORD *v379;
  uint64_t v380;
  uint64_t v381;
  char *v382;
  uint64_t v383;
  unint64_t v384;
  uint64_t v385;
  uint64_t v386;
  _QWORD v387[3];
  unint64_t *v388;
  uint64_t v389;
  uint64_t *v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  unsigned __int8 v396;
  uint64_t v397[3];
  uint64_t *v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  NSObject v402;
  uint64_t v403;
  uint64_t v404;
  _QWORD v405[13];

  sub_23F362ABC();
  v4 = v0;
  v345 = v5;
  v7 = v6;
  v326 = v8;
  v385 = v9;
  v11 = v10;
  v327 = v12;
  v373 = sub_23F3B15D4();
  v363 = *(_QWORD *)(v373 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F3834D0();
  v367 = v14;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F383780();
  v366 = v16;
  sub_23F39C56C();
  v17 = sub_23F61BA94();
  v336 = *(_QWORD *)(v17 - 8);
  v337 = v17;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F36285C();
  v335 = v19;
  sub_23F39C56C();
  v20 = sub_23F61B95C();
  v333 = *(_QWORD *)(v20 - 8);
  v334 = v20;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F36285C();
  v332 = v22;
  sub_23F39C56C();
  v23 = sub_23F61BBA8();
  v386 = *(_QWORD *)(v23 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v24);
  sub_23F36285C();
  v360 = v25;
  sub_23F35D2E8(&qword_256E70D18);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v26);
  sub_23F3B1F34();
  v383 = sub_23F35D2E8(&qword_256E70500);
  v358 = *(_QWORD *)(v383 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F3834D0();
  v365 = v28;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F3838E4();
  v364 = v30;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v31);
  sub_23F3838E4();
  v372 = v32;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v33);
  sub_23F383780();
  v357 = v34;
  v374 = sub_23F35D2E8(&qword_256E70520);
  v338 = *(_QWORD *)(v374 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v35);
  sub_23F3834D0();
  v359 = v36;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v37);
  sub_23F3838E4();
  v356 = v38;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v39);
  sub_23F3838E4();
  v371 = v40;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F383780();
  v384 = v42;
  sub_23F39C56C();
  v43 = sub_23F61B5D8();
  v329 = *(_QWORD *)(v43 - 8);
  v330 = v43;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v44);
  sub_23F3B164C();
  v382 = (char *)sub_23F619E98();
  v45 = *((_QWORD *)v382 - 1);
  MEMORY[0x24BDAC7A8](v382);
  sub_23F3B17BC();
  v46 = *(unint64_t **)v7;
  v47 = *(_QWORD *)(v7 + 8);
  v348 = *(_QWORD *)(v7 + 16);
  v349 = v47;
  v48 = *(_QWORD *)(v7 + 24);
  v346 = *(_QWORD *)(v7 + 32);
  v347 = v48;
  v352 = *(_QWORD *)(v7 + 40);
  v353 = v46;
  v351 = *(_QWORD *)(v7 + 48);
  v49 = *(_QWORD *)(v7 + 56);
  v354 = v11;
  v355 = v49;
  v328 = *(unsigned __int8 *)(v7 + 64);
  v50 = (objc_class *)sub_23F61B530();
  v350 = v4;
  v387[2] = v4;
  v402.isa = v50;
  sub_23F617BA0();
  sub_23F3ACED0((uint64_t (*)(char *, unint64_t))sub_23F3B1120, (uint64_t)v387);
  sub_23F362C60();
  isa = v402.isa;
  sub_23F619088();
  sub_23F3B1D6C();
  v51 = sub_23F3B1A04();
  if (os_log_type_enabled(&v402, v51))
  {
    v52 = (uint8_t *)sub_23F366668();
    *(_WORD *)v52 = 0;
    _os_log_impl(&dword_23F35A000, &v402, v51, "Tool definition renderer: using alphabetically sorted parameters in the tool definitions", v52, 2u);
    sub_23F366530();
  }

  v53 = (*(uint64_t (**)(uint64_t, char *))(v45 + 8))(v3, v382);
  MEMORY[0x24BDAC7A8](v53);
  v54 = v350;
  *(_QWORD *)&v325[-32] = v354;
  *(_QWORD *)&v325[-24] = v54;
  v323 = v385;
  v324 = v345;
  v55 = isa;
  sub_23F3672F4();
  v57 = v56;
  v402.isa = 0;
  v403 = MEMORY[0x24BEE4AF8];
  v404 = MEMORY[0x24BEE4AF8];
  sub_23F3B2060();
  sub_23F383E5C();
  v58 = v57;
  sub_23F3AE8EC((uint64_t)v55, v57, (void (*)(uint64_t))sub_23F3AE77C, 0, &v402);
  v341 = v402.isa;
  v342 = 0;
  v339 = v404;
  v340 = v403;
  v59 = *(_QWORD *)(v57 + 16);
  v60 = v374;
  v344 = v58;
  v331 = v59;
  if (v59)
  {
    sub_23F383E04();
    v62 = (char *)(v58 + v61);
    v369 = *(_QWORD *)(v63 + 72);
    sub_23F383738();
    v64 = MEMORY[0x24BEE4AF8];
    v370 = v2;
    v368 = v1;
    do
    {
      v381 = v59;
      v382 = v62;
      v385 = v64;
      v65 = v384;
      sub_23F382EF8((uint64_t)v62, v384, &qword_256E70520);
      v66 = *(int *)(v60 + 48);
      v67 = v371;
      v68 = (uint64_t)v371 + v66;
      v69 = v65 + v66;
      v70 = *(_QWORD *)v65;
      v71 = *(_QWORD *)(v65 + 8);
      v73 = *(_QWORD *)(v65 + 16);
      v72 = *(_QWORD *)(v65 + 24);
      v74 = *(_QWORD *)(v65 + 32);
      v75 = *(_QWORD *)(v65 + 40);
      v76 = *(_QWORD *)(v65 + 48);
      v77 = *(_QWORD *)(v65 + 56);
      LOBYTE(v65) = *(_BYTE *)(v65 + 64);
      v376 = v70;
      v377 = v69;
      *v371 = v70;
      v67[1] = v71;
      v67[2] = v73;
      v67[3] = v72;
      v78 = v74;
      v67[4] = v74;
      v67[5] = v75;
      v379 = (_QWORD *)v77;
      v380 = v76;
      v67[6] = v76;
      v67[7] = v77;
      *((_BYTE *)v67 + 64) = v65;
      v79 = v386;
      v375 = *(void (**)(uint64_t))(v386 + 16);
      v375(v68);
      if ((v65 & 1) != 0)
      {
        sub_23F3B1CC8(v68, *(uint64_t (**)(uint64_t, uint64_t))(v79 + 8));
        v80 = 1;
        v81 = v383;
        v82 = v368;
        v60 = v374;
      }
      else
      {
        sub_23F384B00();
        sub_23F362CDC();
        sub_23F3B1EA4();
        v361 = v78;
        sub_23F39BA5C(v78, v75);
        sub_23F3B1CC8(v68, *(uint64_t (**)(uint64_t, uint64_t))(v79 + 8));
        v81 = v383;
        v82 = v368;
        v362 = (uint64_t)v368 + *(int *)(v383 + 64);
        v83 = v376;
        *v368 = v376;
        v82[1] = v71;
        v82[2] = v73;
        v82[3] = v72;
        sub_23F362CDC();
        sub_23F3B1EA4();
        sub_23F384B00();
        sub_23F39BA98(v83, v71, v73, v72, v361, v75, v380, (uint64_t)v379, 0);
        v84 = v374;
        v85 = v356 + *(int *)(v374 + 48);
        ((void (*)(uint64_t, uint64_t, uint64_t))v375)(v85, v377, v23);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v79 + 32))(v362, v85, v23);
        v80 = 0;
        v60 = v84;
      }
      sub_23F36196C((uint64_t)v82, v80, 1, v81);
      sub_23F3625D8(v384, &qword_256E70520);
      sub_23F383740((uint64_t)v82, 1, v81);
      v64 = v385;
      v2 = v370;
      v86 = v382;
      if (v192)
      {
        sub_23F3625D8((uint64_t)v82, &qword_256E70D18);
      }
      else
      {
        v87 = v357;
        sub_23F383004((uint64_t)v82, v357, &qword_256E70500);
        sub_23F383004(v87, v372, &qword_256E70500);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_23F3B2204();
          v64 = v93;
        }
        v90 = *(_QWORD *)(v64 + 16);
        v89 = *(_QWORD *)(v64 + 24);
        if (v90 >= v89 >> 1)
        {
          sub_23F3B1A80(v89);
          sub_23F3B2204();
          v64 = v94;
        }
        *(_QWORD *)(v64 + 16) = v90 + 1;
        sub_23F383E04();
        sub_23F383004(v372, v64 + v91 + *(_QWORD *)(v92 + 72) * v90, &qword_256E70500);
      }
      v62 = &v86[v369];
      v59 = v381 - 1;
    }
    while (v381 != 1);
    swift_bridgeObjectRelease();
  }
  else
  {
    v64 = MEMORY[0x24BEE4AF8];
  }
  v385 = v64;
  sub_23F38F360((uint64_t)v350, (uint64_t)&v402);
  v95 = v329;
  sub_23F38431C(v2, v354, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v329 + 16));
  if (v328 == 255)
  {
    sub_23F35EA9C(v405, v405[3]);
    sub_23F3A2544();
    v96 = v95;
    v98 = v97;
    v100 = v99;
    sub_23F617BA0();
    v101 = v342;
    v102 = sub_23F3B60F0(MEMORY[0x24BEE4B08], v98, v100);
    v342 = v101;
    sub_23F369004(v102);
    v104 = v103;
    sub_23F61BFEC();
    LOBYTE(v388) = 0;
    sub_23F383D74(v2, *(uint64_t (**)(uint64_t, uint64_t))(v96 + 8));
    sub_23F38F738((uint64_t)&v402);
    v105 = v388;
    LOBYTE(v323) = (_BYTE)v388;
    sub_23F3B1A24();
    sub_23F39B9D8(v106, v107, v108, v109, v110, v111, v112, v113, v323);
    LODWORD(v376) = v105;
    LOBYTE(v323) = v105;
    v353 = (unint64_t *)v98;
    v348 = v104;
    v349 = v100;
    sub_23F3B1A24();
    sub_23F39BA98(v114, v115, v116, v117, v118, v119, v120, v121, v323);
    sub_23F362984();
    v346 = 0;
    v347 = 0;
    v351 = 0;
    v352 = 0;
    v355 = 0;
  }
  else
  {
    LODWORD(v376) = v328 & 1;
    LOBYTE(v323) = v328 & 1;
    v122 = sub_23F3B1EAC();
    sub_23F39B9D8(v122, v123, v124, v125, v126, v127, v128, v129, v323);
    sub_23F383D74(v2, *(uint64_t (**)(uint64_t, uint64_t))(v95 + 8));
    sub_23F38F738((uint64_t)&v402);
  }
  v130 = v359;
  v378 = v23;
  v131 = v331;
  if (v331)
  {
    sub_23F383E04();
    v133 = v344 + v132;
    v135 = *(_QWORD *)(v134 + 72);
    sub_23F617BA0();
    v384 = MEMORY[0x24BEE4AF8];
    do
    {
      sub_23F382EF8(v133, v130, &qword_256E70520);
      if ((*(_BYTE *)(v130 + 64) & 1) != 0)
      {
        v136 = sub_23F3B1E60();
        sub_23F3625D8(v136, v137);
      }
      else
      {
        v138 = (_QWORD *)v130;
        v139 = *(_QWORD *)(v130 + 32);
        v140 = v138[5];
        v141 = v138[6];
        v142 = v138[7];
        sub_23F39BA5C(v139, v140);
        sub_23F3625D8((uint64_t)v138, &qword_256E70520);
        if (v140)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_23F377598();
            v384 = v147;
          }
          v144 = *(_QWORD *)(v384 + 16);
          v143 = *(_QWORD *)(v384 + 24);
          if (v144 >= v143 >> 1)
          {
            sub_23F3B2138(v143);
            sub_23F377598();
            v384 = v148;
          }
          v145 = v384;
          *(_QWORD *)(v384 + 16) = v144 + 1;
          v146 = (_QWORD *)(v145 + 32 * v144);
          v146[4] = v139;
          v146[5] = v140;
          v146[6] = v141;
          v146[7] = v142;
          v23 = v378;
          v130 = v359;
        }
        else
        {
          v130 = v359;
        }
      }
      v133 += v135;
      --v131;
    }
    while (v131);
    sub_23F362D08();
  }
  else
  {
    v384 = MEMORY[0x24BEE4AF8];
  }
  sub_23F362D08();
  if ((v376 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v371 = 0;
    v372 = 0;
    v374 = v353;
    v375 = 0;
  }
  else
  {
    v388 = v353;
    v389 = v349;
    v390 = (uint64_t *)v348;
    v391 = v347;
    v392 = v346;
    v393 = v352;
    v394 = v351;
    v395 = v355;
    v149 = sub_23F3B192C();
    sub_23F39B9D8(v149, v150, v151, v152, v153, v154, v155, v156, v325[0]);
    sub_23F3A1C98((uint64_t *)&v388, (uint64_t)v350, v384, v397);
    v157 = sub_23F3B192C();
    sub_23F39BA98(v157, v158, v159, v160, v161, v162, v163, v355, (char)v327);
    sub_23F362984();
    v374 = v397[0];
    v375 = (void (*)(uint64_t))v397[1];
    v371 = v398;
    v372 = v397[2];
  }
  v164 = v360;
  v165 = (uint64_t)v341;
  swift_retain();
  v166 = v340;
  sub_23F3B2060();
  v167 = v339;
  swift_retain();
  v168 = *(_QWORD *)(sub_23F39E944((uint64_t)isa, v165, v166, v167) + 16);
  if (v168)
  {
    sub_23F383E04();
    v171 = v169 + v170;
    v384 = *(_QWORD *)(v172 + 72);
    v173 = *(char **)(v172 + 16);
    v381 = v169;
    v382 = v173;
    v174 = (_QWORD *)MEMORY[0x24BEE4AF8];
    do
    {
      ((void (*)(uint64_t, uint64_t, uint64_t))v382)(v164, v171, v23);
      v175 = sub_23F61BB60();
      if (v176)
      {
        v177 = v175;
        v178 = v176;
        v179 = sub_23F61BB78();
        v181 = v180;
        sub_23F3B1B80();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F3B1E10();
          sub_23F3774F4();
          v174 = v185;
        }
        v183 = v174[2];
        v182 = v174[3];
        if (v183 >= v182 >> 1)
        {
          sub_23F3B2138(v182);
          sub_23F3774F4();
          v174 = v186;
        }
        v174[2] = v183 + 1;
        v184 = &v174[4 * v183];
        v184[4] = v179;
        v184[5] = v181;
        v184[6] = v177;
        v184[7] = v178;
        v23 = v378;
        v164 = v360;
      }
      else
      {
        sub_23F3B1B80();
      }
      v171 += v384;
      --v168;
    }
    while (v168);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v174 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v187 = v174[2];
  v188 = (unint64_t *)MEMORY[0x24BEE4AF8];
  if (v187)
  {
    v189 = v174 + 7;
    do
    {
      v190 = *(v189 - 1);
      v191 = *v189;
      if (v190)
        v192 = 0;
      else
        v192 = v191 == 0xE000000000000000;
      if (!v192)
      {
        v194 = *(v189 - 3);
        v193 = *(v189 - 2);
        sub_23F3848F0();
        if ((sub_23F3B1DD8() & 1) == 0)
        {
          sub_23F384324();
          sub_23F383EB0();
          v195 = sub_23F3B1CDC();
          v388 = v188;
          v384 = v194;
          if ((v195 & 1) == 0)
          {
            sub_23F37B994();
            v188 = v388;
          }
          v197 = v188[2];
          v196 = v188[3];
          if (v197 >= v196 >> 1)
          {
            sub_23F3B1A80(v196);
            sub_23F37B994();
            v188 = v388;
          }
          v188[2] = v197 + 1;
          v198 = &v188[4 * v197];
          v198[4] = v384;
          v198[5] = v193;
          v198[6] = v190;
          v198[7] = v191;
        }
      }
      v189 += 4;
      --v187;
    }
    while (v187);
  }
  sub_23F362D08();
  v199 = v188[2];
  if (v199)
  {
    v397[0] = MEMORY[0x24BEE4AF8];
    sub_23F37B47C();
    v200 = v397[0];
    v201 = (char *)(v188 + 7);
    do
    {
      sub_23F384B00();
      sub_23F384A00();
      v388 = (unint64_t *)sub_23F61C1FC();
      v389 = v202;
      sub_23F61C280();
      sub_23F61C280();
      v203 = sub_23F61C220();
      v205 = v204;
      swift_bridgeObjectRelease();
      sub_23F384364();
      sub_23F362984();
      v397[0] = v200;
      v207 = *(_QWORD *)(v200 + 16);
      v206 = *(_QWORD *)(v200 + 24);
      if (v207 >= v206 >> 1)
      {
        sub_23F3B1A80(v206);
        sub_23F37B47C();
        v200 = v397[0];
      }
      v201 += 32;
      *(_QWORD *)(v200 + 16) = v207 + 1;
      v208 = v200 + 16 * v207;
      *(_QWORD *)(v208 + 32) = v203;
      *(_QWORD *)(v208 + 40) = v205;
      --v199;
    }
    while (v199);
    sub_23F38496C();
  }
  else
  {
    sub_23F366748();
    v200 = MEMORY[0x24BEE4AF8];
  }
  v209 = v386;
  if (*(_QWORD *)(v200 + 16))
  {
    v388 = (unint64_t *)&unk_250FD0888;
    sub_23F385EB0();
  }
  else
  {
    sub_23F3837B0();
  }
  sub_23F35D2E8(&qword_256E700E8);
  v210 = (_OWORD *)sub_23F36682C();
  v210[1] = xmmword_23F61E7E0;
  v211 = sub_23F61B584();
  if (v212)
    v213 = v211;
  else
    v213 = 0;
  v214 = 0xE000000000000000;
  if (v212)
    v214 = v212;
  *((_QWORD *)v210 + 4) = v213;
  *((_QWORD *)v210 + 5) = v214;
  v388 = (unint64_t *)v210;
  sub_23F385EB0();
  v215 = v388;
  sub_23F389CDC();
  sub_23F3B1CE4();
  sub_23F3B1B50(&qword_256E70588);
  sub_23F3B2034();
  v216 = sub_23F3B20C4();
  v218 = v217;
  sub_23F362D08();
  v400 = v216;
  v401 = v218;
  v219 = v215[2];
  sub_23F362D08();
  if (v219 >= 2)
  {
    sub_23F3B2034();
    sub_23F61C280();
  }
  v220 = sub_23F35EA9C(v350, v350[3]);
  sub_23F382FC4((uint64_t)v220, (uint64_t)v397);
  v221 = (uint64_t)v398;
  v222 = v399;
  sub_23F35EA9C(v397, (uint64_t)v398);
  v223 = v332;
  MEMORY[0x24266EA34]();
  v225 = v335;
  v224 = v336;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v336 + 104))(v335, *MEMORY[0x24BEB9F40], v337);
  (*(void (**)(unint64_t **__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v222 + 24))(&v388, v223, v225, v345, v221, v222);
  sub_23F383D74(v225, *(uint64_t (**)(uint64_t, uint64_t))(v224 + 8));
  (*(void (**)(uint64_t, uint64_t))(v333 + 8))(v223, v334);
  v226 = v388;
  v227 = v389;
  v228 = v390;
  v361 = v392;
  v362 = v391;
  v359 = v394;
  v360 = v393;
  v357 = v395;
  v229 = v396;
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v397);
  LODWORD(v356) = v229;
  if ((v229 & 1) != 0)
  {
    v230 = MEMORY[0x24BEE4B08];
    v231 = 0xE400000000000000;
  }
  else
  {
    sub_23F389CDC();
    v230 = sub_23F362CDC();
    v231 = v227;
  }
  v369 = v227;
  v370 = (uint64_t)v226;
  v368 = v228;
  if ((v376 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    sub_23F3837B0();
    v232 = 0;
    v233 = 0;
    v234 = v353;
    v235 = v385;
  }
  else
  {
    v384 = v231;
    v236 = (uint64_t)v353;
    v388 = v353;
    v238 = v348;
    v237 = v349;
    v389 = v349;
    v390 = (uint64_t *)v348;
    v240 = v346;
    v239 = v347;
    v391 = v347;
    v392 = v346;
    v393 = v352;
    v394 = v351;
    v395 = v355;
    LOBYTE(v327) = 0;
    v241 = v230;
    v242 = sub_23F3848F0();
    v244 = v243;
    sub_23F39B9D8(v242, v245, v238, v239, v240, v246, v247, v248, (char)v327);
    v235 = v385;
    sub_23F3A1E44((unint64_t *)&v388, v385, v244, v384, v241, v397);
    sub_23F39BA98(v236, v237, v238, v239, v240, v352, v351, v355, 0);
    sub_23F362C60();
    sub_23F362984();
    v249 = (_QWORD *)v397[0];
    v250 = sub_23F3B2034();
    sub_23F3B79EC(v250, v251, v249);
    v234 = v252;
    v232 = v253;
    v233 = v254;
    sub_23F362984();
  }
  v350 = v233;
  v354 = v234;
  v255 = *(_QWORD *)(v235 + 16);
  if (v255)
  {
    v345 = v232;
    sub_23F383E04();
    v257 = (_QWORD *)(v235 + v256);
    v377 = *(_QWORD *)(v258 + 72);
    sub_23F389CDC();
    v384 = MEMORY[0x24BEE4B00];
    while (1)
    {
      v380 = v255;
      v259 = v383;
      v260 = (char *)v257 + *(int *)(v383 + 64);
      sub_23F61BB78();
      v261 = (char *)sub_23F61C1FC();
      v381 = v262;
      v382 = v261;
      sub_23F38432C();
      v263 = *(int *)(v259 + 64);
      v264 = (char *)v364;
      v265 = (char *)v364 + v263;
      v267 = *v257;
      v266 = v257[1];
      v268 = v257[2];
      *v364 = *v257;
      *((_QWORD *)v264 + 1) = v266;
      *((_QWORD *)v264 + 2) = v268;
      v379 = v257;
      v269 = v257[3];
      *((_QWORD *)v264 + 3) = v269;
      v270 = *(void (**)(char *, char *, uint64_t))(v209 + 16);
      v271 = v378;
      v270(&v264[v263], v260, v378);
      v272 = *(int *)(v259 + 64);
      v273 = v271;
      v274 = (char *)v365;
      v275 = (uint64_t)v365 + v272;
      *v365 = v267;
      *((_QWORD *)v274 + 1) = v266;
      *((_QWORD *)v274 + 2) = v268;
      *((_QWORD *)v274 + 3) = v269;
      v276 = v381;
      v270(&v274[v272], v260, v273);
      v277 = v269 ? v269 : MEMORY[0x24BEE4B00];
      sub_23F384B00();
      v278 = v386;
      sub_23F3B1CC8(v275, *(uint64_t (**)(uint64_t, uint64_t))(v386 + 8));
      v279 = v278;
      v280 = *(void (**)(uint64_t, char *, uint64_t))(v278 + 32);
      v281 = v366;
      v280(v366, v265, v273);
      *(_QWORD *)(v281 + *(int *)(v373 + 20)) = v277;
      sub_23F36262C(v281, v367, type metadata accessor for ParameterPromptMap);
      v282 = (unint64_t *)v384;
      sub_23F3B1CDC();
      v388 = v282;
      v283 = v382;
      v284 = sub_23F3754D4((uint64_t)v382, v276);
      if (__OFADD__(v282[2], (v285 & 1) == 0))
        break;
      v286 = v284;
      v287 = v285;
      sub_23F35D2E8(&qword_256E70D20);
      if ((sub_23F61CA18() & 1) != 0)
      {
        v288 = sub_23F3754D4((uint64_t)v283, v276);
        if ((v287 & 1) != (v289 & 1))
          goto LABEL_109;
        v286 = v288;
      }
      v290 = v388;
      v384 = (unint64_t)v388;
      if ((v287 & 1) != 0)
      {
        v291 = sub_23F3B1D88();
        sub_23F3B11D8(v291, v292);
      }
      else
      {
        sub_23F384B78((uint64_t)&v388[v286 >> 6]);
        v294 = (char **)(v293 + 16 * v286);
        *v294 = v283;
        v294[1] = (char *)v276;
        v295 = sub_23F3B1D88();
        sub_23F36262C(v295, v296, type metadata accessor for ParameterPromptMap);
        v297 = v290[2];
        v298 = __OFADD__(v297, 1);
        v299 = v297 + 1;
        if (v298)
          goto LABEL_108;
        v290[2] = v299;
        sub_23F383EB0();
      }
      sub_23F384120();
      swift_bridgeObjectRelease();
      v257 = (_QWORD *)((char *)v379 + v377);
      v255 = v380 - 1;
      v209 = v279;
      if (v380 == 1)
      {
        sub_23F362D08();
        v232 = v345;
        goto LABEL_103;
      }
    }
    __break(1u);
LABEL_108:
    __break(1u);
LABEL_109:
    sub_23F61CC94();
    __break(1u);
    swift_release();
    __break(1u);
  }
  else
  {
    v384 = MEMORY[0x24BEE4B00];
LABEL_103:
    sub_23F362D08();
    v300 = v374;
    v302 = (uint64_t)v371;
    v301 = v372;
    if ((_DWORD)v376)
    {
      swift_release();
      sub_23F3B2274();
      v385 = 0;
      v386 = 0;
      v303 = 0;
      v304 = 0;
      v383 = 0;
      v305 = 0;
      v306 = 0;
      v307 = v354;
      v308 = (uint64_t)v375;
    }
    else
    {
      v308 = (uint64_t)v375;
      sub_23F3B1C2C(v374);
      sub_23F3B1C2C(v300);
      sub_23F384324();
      v304 = v350;
      sub_23F384A00();
      swift_release();
      sub_23F3B2274();
      v385 = v300;
      v386 = MEMORY[0x24BEE4B00];
      v383 = v308;
      v305 = v301;
      v306 = v302;
      v303 = v232;
      v307 = v354;
    }
    swift_release();
    sub_23F39BA98(v370, v369, (uint64_t)v368, v362, v361, v360, v359, v357, v356);
    v309 = v308;
    v310 = v376;
    sub_23F3B115C(v300, v309, v301, v302, v376);
    LOBYTE(v327) = v310;
    v311 = sub_23F3B1EAC();
    sub_23F39BA98(v311, v312, v313, v314, v315, v316, v317, v318, (char)v327);
    v319 = v385;
    v320 = v383;
    sub_23F3B1168(v307, v303, (uint64_t)v304, v385, v383, v305, v306, v310);
    v321 = v327;
    *v327 = v307;
    v321[1] = v303;
    v322 = v386;
    v321[2] = (uint64_t)v304;
    v321[3] = v322;
    v321[4] = v319;
    v321[5] = v320;
    v321[6] = v305;
    v321[7] = v306;
    *((_BYTE *)v321 + 64) = v310;
    v321[9] = v384;
    swift_bridgeObjectRelease();
    sub_23F362948();
  }
}

uint64_t sub_23F3A1064()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;

  sub_23F61BB78();
  v0 = sub_23F61C1FC();
  v2 = v1;
  swift_bridgeObjectRelease();
  sub_23F61BB78();
  v3 = sub_23F61C1FC();
  v5 = v4;
  swift_bridgeObjectRelease();
  if (v0 == v3 && v2 == v5)
    v7 = 0;
  else
    v7 = sub_23F61CC64();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_23F3A1120@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, _QWORD *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v43 = a3;
  v44 = a4;
  v42 = a2;
  v45 = a5;
  v6 = sub_23F619E98();
  v40 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v39 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23F61BBA8();
  v47 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v46 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F61B4F4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23F61B554();
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x24BEB8EB8], v10);
  v15 = *(_QWORD *)(v14 + 16);
  v49 = a1;
  v48 = v8;
  v41 = v6;
  if (v15)
  {
    v16 = v14 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v17 = *(_QWORD *)(v11 + 72);
    sub_23F3B121C(&qword_256E708D8, (void (*)(uint64_t))MEMORY[0x24BEB8ED8]);
    v18 = v15 - 1;
    do
    {
      v19 = v18;
      LOBYTE(v15) = sub_23F61C0A0();
      if ((v15 & 1) != 0)
        break;
      v18 = v19 - 1;
      v16 += v17;
    }
    while (v19);
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  swift_bridgeObjectRelease();
  v21 = v46;
  v20 = v47;
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v47 + 16);
  v23 = v49;
  v24 = v48;
  v22(v46, v49, v48);
  if ((v15 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v24);
    goto LABEL_13;
  }
  if (sub_23F61BB78() != 7368801 || v25 != 0xE300000000000000)
  {
    v27 = sub_23F61CC64();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v24);
    if ((v27 & 1) != 0)
      goto LABEL_15;
LABEL_13:
    v28 = sub_23F35D2E8(&qword_256E70520);
    v29 = (char *)v45 + *(int *)(v28 + 48);
    sub_23F35EA9C(v42, v42[3]);
    sub_23F3A2AB0();
    v30 = v29;
    return ((uint64_t (*)(char *, uint64_t, uint64_t))v22)(v30, v23, v24);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v24);
LABEL_15:
  v31 = v39;
  sub_23F619088();
  v32 = sub_23F619E8C();
  v33 = sub_23F61C640();
  if (os_log_type_enabled(v32, v33))
  {
    v34 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v34 = 0;
    _os_log_impl(&dword_23F35A000, v32, v33, "Skipping app parameter for system framework intent", v34, 2u);
    MEMORY[0x242670B70](v34, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v40 + 8))(v31, v41);
  v35 = sub_23F35D2E8(&qword_256E70520);
  v36 = v45;
  v30 = (char *)v45 + *(int *)(v35 + 48);
  *v45 = 1;
  *(_OWORD *)(v36 + 1) = 0u;
  *(_OWORD *)(v36 + 3) = 0u;
  *(_OWORD *)(v36 + 5) = 0u;
  v36[7] = 0;
  *((_BYTE *)v36 + 64) = 1;
  return ((uint64_t (*)(char *, uint64_t, uint64_t))v22)(v30, v23, v24);
}

void sub_23F3A14A8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  os_log_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 v38;
  uint64_t v39;
  void (*v40)(void);
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  int v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint8_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _DWORD *v103;
  uint64_t *v104;
  void (*v105)(char *, uint64_t, uint64_t);
  os_log_t v106;
  uint64_t v107;
  uint64_t v108;
  uint8_t *v109;
  void (*v110)(void);
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;

  v117 = a3;
  v5 = sub_23F35D2E8(&qword_256E70520);
  v122 = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v97 = (uint64_t *)((char *)&v94 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = MEMORY[0x24BDAC7A8](v6);
  v114 = (uint64_t)&v94 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v119 = (uint64_t)&v94 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v120 = (uint64_t)&v94 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v94 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v94 - v18;
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)&v94 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v94 - v23;
  v25 = sub_23F619E98();
  v115 = *(_QWORD *)(v25 - 8);
  v116 = v25;
  MEMORY[0x24BDAC7A8](v25);
  v121 = (char *)&v94 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F619088();
  v27 = *(int *)(v5 + 48);
  v28 = &v24[v27];
  v29 = a2 + v27;
  v30 = *(_QWORD *)a2;
  v108 = *(_QWORD *)(a2 + 8);
  v31 = v108;
  v109 = (uint8_t *)v30;
  v32 = *(_QWORD *)(a2 + 16);
  v106 = *(os_log_t *)(a2 + 24);
  v33 = v106;
  v107 = v32;
  v34 = *(void (**)(char *, uint64_t, uint64_t))(a2 + 32);
  v104 = *(uint64_t **)(a2 + 40);
  v35 = (uint64_t)v104;
  v105 = v34;
  v103 = *(_DWORD **)(a2 + 48);
  v36 = (uint64_t)v103;
  v102 = *(_QWORD *)(a2 + 56);
  v37 = v102;
  v118 = a2;
  v38 = *(_BYTE *)(a2 + 64);
  LODWORD(v101) = v38;
  *(_QWORD *)v24 = v30;
  *((_QWORD *)v24 + 1) = v31;
  *((_QWORD *)v24 + 2) = v32;
  *((_QWORD *)v24 + 3) = v33;
  *((_QWORD *)v24 + 4) = v34;
  *((_QWORD *)v24 + 5) = v35;
  *((_QWORD *)v24 + 6) = v36;
  *((_QWORD *)v24 + 7) = v37;
  v24[64] = v38;
  v39 = sub_23F61BBA8();
  v96 = *(_QWORD *)(v39 - 8);
  v40 = *(void (**)(void))(v96 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v40)(v28, v29, v39);
  v113 = v22;
  sub_23F382EF8((uint64_t)v24, (uint64_t)v22, &qword_256E70520);
  v112 = v19;
  sub_23F383004((uint64_t)v24, (uint64_t)v19, &qword_256E70520);
  v41 = *(int *)(v122 + 48);
  v42 = &v16[v41];
  v43 = a1 + v41;
  v45 = *(_QWORD *)a1;
  v100 = *(_QWORD *)(a1 + 8);
  v44 = v100;
  v46 = *(_QWORD *)(a1 + 16);
  v47 = *(_QWORD *)(a1 + 24);
  v49 = *(_QWORD *)(a1 + 32);
  v99 = *(_QWORD *)(a1 + 40);
  v48 = v99;
  v51 = *(_QWORD *)(a1 + 48);
  v98 = *(_QWORD *)(a1 + 56);
  v50 = v98;
  LOBYTE(a1) = *(_BYTE *)(a1 + 64);
  *(_QWORD *)v16 = v45;
  *((_QWORD *)v16 + 1) = v44;
  *((_QWORD *)v16 + 2) = v46;
  *((_QWORD *)v16 + 3) = v47;
  *((_QWORD *)v16 + 4) = v49;
  *((_QWORD *)v16 + 5) = v48;
  *((_QWORD *)v16 + 6) = v51;
  *((_QWORD *)v16 + 7) = v50;
  v16[64] = a1;
  v110 = v40;
  v111 = v39;
  ((void (*)(char *, uint64_t, uint64_t))v40)(v42, v43, v39);
  sub_23F382EF8((uint64_t)v16, v120, &qword_256E70520);
  sub_23F383004((uint64_t)v16, v119, &qword_256E70520);
  sub_23F39B9D8((uint64_t)v109, v108, v107, (uint64_t)v106, (uint64_t)v105, (uint64_t)v104, (uint64_t)v103, v102, v101);
  sub_23F39B9D8(v45, v100, v46, v47, v49, v99, v51, v98, a1);
  v52 = sub_23F619E8C();
  v53 = sub_23F61C628();
  v54 = v53;
  if (os_log_type_enabled(v52, v53))
  {
    v55 = (uint8_t *)swift_slowAlloc();
    v108 = swift_slowAlloc();
    v125 = v108;
    v109 = v55;
    *(_DWORD *)v55 = 136643075;
    v103 = v55 + 4;
    v56 = *(int *)(v122 + 48);
    v57 = v122;
    LODWORD(v107) = v54;
    v100 = v114 + v56;
    v58 = (uint64_t)v113;
    v60 = *((_QWORD *)v113 + 1);
    v104 = *(uint64_t **)v113;
    v59 = (uint64_t)v104;
    v102 = v60;
    v61 = *((_QWORD *)v113 + 3);
    v95 = *((_QWORD *)v113 + 2);
    v101 = v61;
    v62 = *((_QWORD *)v113 + 4);
    v98 = *((_QWORD *)v113 + 5);
    v63 = *((_QWORD *)v113 + 6);
    v99 = *((_QWORD *)v113 + 7);
    v106 = v52;
    v64 = v113[64];
    v65 = v111;
    v110();
    v66 = *(int *)(v57 + 48);
    v67 = v97;
    v68 = (char *)v97 + v66;
    *v97 = v59;
    v67[1] = v60;
    v69 = v95;
    v67[2] = v95;
    v67[3] = v61;
    v67[4] = v62;
    v70 = v62;
    v71 = v98;
    v67[5] = v98;
    v67[6] = v63;
    v72 = v99;
    v67[7] = v99;
    *((_BYTE *)v67 + 64) = v64;
    v105 = *(void (**)(char *, uint64_t, uint64_t))(v96 + 32);
    v105(v68, v100, v65);
    sub_23F39B9D8((uint64_t)v104, v102, v69, v101, v70, v71, v63, v72, v64);
    v73 = v122;
    v74 = sub_23F61C16C();
    sub_23F37AE00(v74, v75, &v125);
    v76 = (uint64_t)v109;
    v123 = v77;
    v104 = &v124;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    sub_23F3625D8((uint64_t)v112, &qword_256E70520);
    sub_23F3625D8(v58, &qword_256E70520);
    *(_WORD *)(v76 + 12) = 2085;
    v113 = (char *)(v76 + 14);
    v102 = v114 + *(int *)(v73 + 48);
    v78 = v120;
    v79 = *(_QWORD *)(v120 + 8);
    v98 = *(_QWORD *)v120;
    v114 = v79;
    v80 = *(_QWORD *)(v120 + 24);
    v101 = *(_QWORD *)(v120 + 16);
    v103 = (_DWORD *)v80;
    v81 = *(_QWORD *)(v120 + 40);
    v100 = *(_QWORD *)(v120 + 32);
    v112 = (char *)v81;
    v82 = *(_QWORD *)(v120 + 56);
    v99 = *(_QWORD *)(v120 + 48);
    LOBYTE(v70) = *(_BYTE *)(v120 + 64);
    v83 = v111;
    v110();
    v84 = (char *)v67 + *(int *)(v73 + 48);
    v85 = v98;
    *v67 = v98;
    v67[1] = v79;
    v86 = v101;
    v67[2] = v101;
    v67[3] = v80;
    v87 = v100;
    v67[4] = v100;
    v67[5] = v81;
    v88 = v99;
    v67[6] = v99;
    v67[7] = v82;
    *((_BYTE *)v67 + 64) = v70;
    v105(v84, v102, v83);
    sub_23F39B9D8(v85, v114, v86, (uint64_t)v103, v87, (uint64_t)v112, v88, v82, v70);
    v89 = sub_23F61C16C();
    sub_23F37AE00(v89, v90, &v125);
    v91 = v109;
    v123 = v92;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    sub_23F3625D8(v119, &qword_256E70520);
    sub_23F3625D8(v78, &qword_256E70520);
    v52 = v106;
    _os_log_impl(&dword_23F35A000, v106, (os_log_type_t)v107, "❗️ Folding parameters, but parameter key has already been seen.\nTaking new value: %{sensitive}s\nover old value: %{sensitive}s", v91, 0x16u);
    v93 = v108;
    swift_arrayDestroy();
    MEMORY[0x242670B70](v93, -1, -1);
    MEMORY[0x242670B70](v91, -1, -1);
  }
  else
  {
    sub_23F3625D8((uint64_t)v112, &qword_256E70520);
    sub_23F3625D8((uint64_t)v113, &qword_256E70520);
    sub_23F3625D8(v119, &qword_256E70520);
    sub_23F3625D8(v120, &qword_256E70520);
  }

  (*(void (**)(char *, uint64_t))(v115 + 8))(v121, v116);
  sub_23F382EF8(v118, v117, &qword_256E70520);
}

void sub_23F3A1BF8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  sub_23F35EA9C((_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 64));
  sub_23F3A2544();
  sub_23F3B20EC();
  sub_23F617BA0();
  v4 = sub_23F3B13CC(MEMORY[0x24BEE4B08], v2, a2);
  sub_23F369004(v4);
  sub_23F3B15D4();
  v5 = sub_23F61BFEC();
  sub_23F3B1A8C(v5);
  sub_23F3B16F4();
}

double sub_23F3A1C98@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  double result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27[3];
  uint64_t v28[3];
  uint64_t v29;

  v6 = *a1;
  v7 = a1[1];
  sub_23F382EF8(a2 + 80, (uint64_t)v28, &qword_256E70D28);
  if (v29)
  {
    sub_23F35EA9C(v28, v29);
    sub_23F41477C(v6, v7, a3, v27);
    v8 = v27[0];
    v9 = v27[1];
    v26 = v27[0];
    v10 = v27[2];
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v28);
    sub_23F35D2E8(&qword_256E70310);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_23F61E7E0;
    *(_QWORD *)(inited + 32) = v8;
    *(_QWORD *)(inited + 40) = v9;
    v25 = v10;
    *(_QWORD *)(inited + 48) = v10;
    v28[0] = inited;
    swift_retain();
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F385E18();
    sub_23F5159BC(v28[0]);
    sub_23F51078C(v12, v13, v14);
    v16 = sub_23F510D3C(1, v15);
    v18 = v17;
    v20 = v19;
    v22 = v21;
    sub_23F617BA0();
    swift_retain();
    v23 = sub_23F510678(v16, v18, v20, v22);
    swift_release();
    swift_release();
    swift_release();
    *a4 = v26;
    a4[1] = v9;
    a4[2] = v25;
    a4[3] = v23;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23F3625D8((uint64_t)v28, &qword_256E70D28);
    result = 0.0;
    *(_OWORD *)a4 = 0u;
    *((_OWORD *)a4 + 1) = 0u;
  }
  return result;
}

void sub_23F3A1E44(unint64_t *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v32;

  v9 = *a1;
  v8 = a1[1];
  v10 = a1[2];
  sub_23F35D2E8(&qword_256E6FD50);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_23F61E980;
  v32 = MEMORY[0x24BEE4B08];
  sub_23F35D2E8(&qword_256E70898);
  sub_23F61C55C();
  sub_23F61C55C();
  sub_23F61C280();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F528350(0, 0xE000000000000000, v32, v9, v8, v10);
  v13 = v12;
  v15 = v14;
  v17 = v16;
  swift_bridgeObjectRelease();
  sub_23F617BA0();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23F61C280();
  sub_23F39E688(a2);
  sub_23F35D2E8(&qword_256E70580);
  sub_23F3B0CC8(&qword_256E70588, &qword_256E70580);
  sub_23F61C088();
  swift_bridgeObjectRelease();
  sub_23F617BA0();
  sub_23F61C280();
  swift_bridgeObjectRelease_n();
  sub_23F61C280();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F528350(v13, v15, v17, a3, a4, a5);
  v19 = v18;
  v21 = v20;
  v23 = v22;
  swift_bridgeObjectRelease();
  sub_23F617BA0();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23F61C280();
  *(_QWORD *)(v11 + 32) = v19;
  *(_QWORD *)(v11 + 40) = v21;
  *(_QWORD *)(v11 + 48) = v23;
  sub_23F617BA0();
  sub_23F61C280();
  swift_bridgeObjectRelease();
  sub_23F61C280();
  v24 = sub_23F61C1E4();
  v26 = v25;
  swift_bridgeObjectRelease();
  sub_23F617BA0();
  v27 = sub_23F3B60F0(MEMORY[0x24BEE4B08], v24, v26);
  sub_23F369004(v27);
  *(_QWORD *)(v11 + 56) = v24;
  *(_QWORD *)(v11 + 64) = v26;
  *(_QWORD *)(v11 + 72) = v28;
  *a6 = v11;
}

uint64_t sub_23F3A2164(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;

  v5 = a3;
  if ((a5 & 1) != 0)
    return a3;
  if ((a2 & 1) != 0)
    return a1;
  sub_23F3B0D44(a3, a4, 0);
  sub_23F3B0D54(a1, 0);
  return v5;
}

void sub_23F3A21EC(uint64_t a1)
{
  sub_23F3A1BF8(a1, 0);
}

void sub_23F3A2200()
{
  sub_23F39F0DC();
}

void sub_23F3A2220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[8];
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v7 = v3[3];
  v6 = v3[4];
  sub_23F35EA9C(v3, v7);
  sub_23F3840BC();
  sub_23F3A2314();
  sub_23F39B9D8(v11, v12, v13, v14, v15, v16, v17, v18, v19);
  sub_23F3B1668();
  sub_23F362984();
  v9[0] = v11;
  v9[1] = v12;
  v9[2] = v13;
  v9[3] = v14;
  v9[4] = v15;
  v9[5] = v16;
  v9[6] = v17;
  v9[7] = v18;
  v10 = v19;
  (*(void (**)(uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t))(v6 + 16))(a1, a2, v9, a3, v7);
  sub_23F3B1668();
}

void sub_23F3A2314()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_23F362ABC();
  v2 = v1;
  sub_23F3B20E0();
  v16 = sub_23F61BB3C();
  v3 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  sub_23F362930();
  sub_23F524D24();
  sub_23F61BB18();
  v4 = sub_23F3B1FDC();
  v6 = v5;
  sub_23F3B1450();
  v7 = *(_QWORD *)(v2 + 16);
  if (!*(_QWORD *)(v7 + 16))
    goto LABEL_5;
  sub_23F384B00();
  v8 = sub_23F3B2054();
  if ((v9 & 1) == 0)
  {
    sub_23F384364();
LABEL_5:
    sub_23F3B1F1C();
    sub_23F3B1450();
    sub_23F384324();
    sub_23F471708();
    sub_23F3B1F1C();
    swift_bridgeObjectRelease();
    sub_23F3B1450();
    sub_23F384324();
    sub_23F3B1F6C(v4, v6);
    sub_23F3B1F1C();
    sub_23F384364();
    goto LABEL_6;
  }
  v10 = (uint64_t *)(*(_QWORD *)(v7 + 56) + 16 * v8);
  v4 = *v10;
  v11 = v10[1];
  sub_23F3B1F1C();
  sub_23F383738();
  sub_23F38432C();
  sub_23F384364();
  v6 = v11;
LABEL_6:
  sub_23F384364();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v16);
  sub_23F35D2E8(&qword_256E700E8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23F61EBC0;
  *(_QWORD *)(inited + 32) = 0x657461647075;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  *(_QWORD *)(inited + 48) = v4;
  *(_QWORD *)(inited + 56) = v6;
  *(_QWORD *)(inited + 64) = sub_23F61B5B4();
  *(_QWORD *)(inited + 72) = v13;
  sub_23F3B2070();
  swift_setDeallocating();
  sub_23F513580();
  sub_23F3B1CE4();
  sub_23F3B1B50(&qword_256E70588);
  sub_23F3B20C4();
  sub_23F3B20EC();
  sub_23F3837B0();
  sub_23F362CDC();
  v14 = sub_23F3B1B44(MEMORY[0x24BEE4B08]);
  sub_23F369004(v14);
  sub_23F3B15D4();
  v15 = sub_23F61BFEC();
  sub_23F3B1A8C(v15);
  sub_23F362948();
}

void sub_23F3A2544()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  sub_23F362ABC();
  v5 = v4;
  v18 = v6;
  sub_23F3B20D4();
  sub_23F3B19A8();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F3B1C84();
  sub_23F524D24();
  sub_23F61BB18();
  sub_23F3B1FDC();
  sub_23F3B1D2C();
  sub_23F3B1450();
  v8 = *(_QWORD *)(v5 + 16);
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_5;
  sub_23F384B00();
  v9 = sub_23F3B2054();
  if ((v10 & 1) == 0)
  {
    sub_23F384364();
LABEL_5:
    sub_23F3B14B0();
    sub_23F3B1450();
    sub_23F383EB0();
    sub_23F471708();
    sub_23F3B14B0();
    sub_23F389D0C();
    sub_23F3B1450();
    sub_23F383EB0();
    sub_23F3B1F6C(v1, v2);
    sub_23F3B14B0();
    sub_23F384364();
    goto LABEL_6;
  }
  v11 = (uint64_t *)(*(_QWORD *)(v8 + 56) + 16 * v9);
  v1 = *v11;
  v12 = v11[1];
  sub_23F3B14B0();
  sub_23F383738();
  sub_23F384120();
  sub_23F384364();
  v2 = v12;
LABEL_6:
  sub_23F384364();
  sub_23F362A28(v3, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  if ((v18 & 1) != 0)
    goto LABEL_11;
  v13 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v13 = v1 & 0xFFFFFFFFFFFFLL;
  if (!v13)
  {
LABEL_11:
    sub_23F384120();
    sub_23F35D2E8(&qword_256E700E8);
    v16 = sub_23F36682C();
    *(_OWORD *)(v16 + 16) = xmmword_23F61E7E0;
    *(_QWORD *)(v16 + 32) = sub_23F61B5B4();
    *(_QWORD *)(v16 + 40) = v17;
  }
  else
  {
    sub_23F35D2E8(&qword_256E700E8);
    v14 = sub_23F36682C();
    *(_OWORD *)(v14 + 16) = xmmword_23F61E980;
    *(_QWORD *)(v14 + 32) = v1;
    *(_QWORD *)(v14 + 40) = v2;
    *(_QWORD *)(v14 + 48) = sub_23F61B5B4();
    *(_QWORD *)(v14 + 56) = v15;
  }
  sub_23F3B2070();
  sub_23F362C60();
  sub_23F3B1CE4();
  sub_23F3B1B50(&qword_256E70588);
  sub_23F61C088();
  sub_23F3B20F8();
  sub_23F362D18();
  sub_23F38422C();
  sub_23F362948();
}

void sub_23F3A2750()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  sub_23F362ABC();
  v3 = v2;
  sub_23F3B20D4();
  sub_23F389AF8();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F3B1C4C();
  sub_23F524D24();
  v5 = sub_23F61BB18();
  v7 = v6;
  v8 = sub_23F61BB30();
  v10 = v9;
  sub_23F3B1450();
  if (!*(_QWORD *)(*(_QWORD *)(v3 + 16) + 16))
    goto LABEL_5;
  sub_23F383E5C();
  sub_23F3754D4(v5, v7);
  if ((v11 & 1) == 0)
  {
    sub_23F3837B0();
LABEL_5:
    sub_23F3B14B0();
    sub_23F3B1450();
    sub_23F383EB0();
    sub_23F471708();
    sub_23F3B14B0();
    sub_23F389D0C();
    sub_23F3B1450();
    sub_23F383EB0();
    sub_23F3AF11C(v8, v10, v5, v7);
    sub_23F3B14B0();
    sub_23F3837B0();
    goto LABEL_6;
  }
  sub_23F3B14B0();
  sub_23F383738();
  sub_23F384120();
  sub_23F3837B0();
LABEL_6:
  sub_23F3837B0();
  sub_23F383E88(v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F362948();
}

void sub_23F3A2898()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  sub_23F362ABC();
  v5 = v4;
  v7 = v6;
  v9 = v8;
  sub_23F35D2E8(&qword_256E70A60);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F3B1630();
  v11 = sub_23F6170CC();
  sub_23F389AF8();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F3B17A4();
  sub_23F3B1450();
  if (!*(_QWORD *)(*(_QWORD *)(v5 + 16) + 16))
  {
LABEL_5:
    sub_23F3B14B0();
    sub_23F382EF8(v0, v2, &qword_256E70A60);
    sub_23F383740(v2, 1, v11);
    if (v14)
    {
      sub_23F3625D8(v2, &qword_256E70A60);
      goto LABEL_16;
    }
    sub_23F362D94(v1, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
    v15 = sub_23F5F62C4(v1, v9, v7);
    v17 = v16;
    if (v16)
    {
      v18 = v15;
      sub_23F3B1450();
      if (*(_QWORD *)(*(_QWORD *)(v5 + 16) + 16))
      {
        sub_23F3668F4();
        sub_23F3B21F8();
        if ((v19 & 1) != 0)
        {
          sub_23F3B14B0();
          sub_23F383738();
          sub_23F384364();
          sub_23F362D18();
          goto LABEL_15;
        }
        sub_23F362D18();
      }
      sub_23F3B14B0();
      sub_23F3B1450();
      sub_23F384B00();
      sub_23F471708();
      sub_23F3B14B0();
      sub_23F389D0C();
      sub_23F3B1450();
      sub_23F384B00();
      sub_23F3AF11C(v18, v17, v9, v7);
      sub_23F3B14B0();
      sub_23F362D18();
    }
LABEL_15:
    sub_23F383E64(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    goto LABEL_16;
  }
  sub_23F3668F4();
  sub_23F3B21F8();
  if ((v13 & 1) == 0)
  {
    sub_23F362D18();
    goto LABEL_5;
  }
  sub_23F384B00();
  sub_23F3B14B0();
  sub_23F362D18();
LABEL_16:
  sub_23F362948();
}

void sub_23F3A2AB0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t *v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  char v34;
  void *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  os_log_type_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD v76[2];
  char *v77;
  uint64_t v78;
  void (*v79)(uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t *v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;

  sub_23F362ABC();
  v86 = v0;
  v87 = v4;
  v83 = v5;
  v79 = v6;
  v8 = v7;
  v9 = sub_23F61BA94();
  v84 = *(_QWORD *)(v9 - 8);
  v85 = v9;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F36285C();
  v82 = v11;
  v12 = sub_23F3B1728();
  v80 = *(_QWORD *)(v12 - 8);
  v81 = v12;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v13);
  v77 = (char *)v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F383780();
  sub_23F384990(v16);
  sub_23F35D2E8(&qword_256E70D58);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F3B164C();
  v18 = sub_23F61B95C();
  sub_23F389AF8();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F3834D0();
  v78 = v20;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)v76 - v22;
  v24 = type metadata accessor for DynamicEnumeration(0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F362930();
  if (qword_256E6EE48 != -1)
    swift_once();
  v26 = qword_256E7FD98;
  sub_23F3668F4();
  v27 = sub_23F61BB78();
  v29 = sub_23F5A04F0(v27, v28, v26);
  sub_23F362D18();
  v30 = sub_23F362984();
  if ((v29 & 1) != 0)
  {
    v31 = v87;
    *v87 = 1;
    *(_OWORD *)(v31 + 1) = 0u;
    *(_OWORD *)(v31 + 3) = 0u;
    *(_OWORD *)(v31 + 5) = 0u;
    v31[7] = 0;
    *((_BYTE *)v31 + 64) = 1;
  }
  else
  {
    v76[0] = v8;
    MEMORY[0x24266F0AC](v30);
    sub_23F5E6DB4((uint64_t)v79, v2);
    v32 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    v33 = v18;
    sub_23F3B224C((uint64_t)v23);
    sub_23F383740(v2, 1, v24);
    if (v34)
    {
      v79 = v32;
      sub_23F3625D8(v2, &qword_256E70D58);
      v35 = v77;
      sub_23F619088();
      sub_23F619E8C();
      v36 = sub_23F3B1A04();
      if (sub_23F384458(v36))
      {
        *(_WORD *)sub_23F366668() = 0;
        sub_23F366530();
      }

      sub_23F3B1E28();
      sub_23F35EA9C(v86, v86[3]);
      v39 = v78;
      MEMORY[0x24266F0AC]();
      v40 = v84;
      v41 = v82;
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v84 + 104))(v82, *MEMORY[0x24BEB9F48], v85);
      sub_23F3B207C(v39, v41, v83);
      sub_23F383CA8(v41, *(uint64_t (**)(uint64_t, uint64_t))(v40 + 8));
      v79(v39, v33);
    }
    else
    {
      sub_23F36262C(v2, v1, type metadata accessor for DynamicEnumeration);
      v42 = (void *)v76[1];
      sub_23F619088();
      sub_23F619E8C();
      v43 = sub_23F3B1A04();
      if (sub_23F384458(v43))
      {
        *(_WORD *)sub_23F366668() = 0;
        sub_23F366530();
      }

      sub_23F3B1E28();
      sub_23F3B1424(v86 + 5, v86[8]);
      v47 = v84;
      v48 = v82;
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v84 + 104))(v82, *MEMORY[0x24BEB9F48], v85);
      sub_23F3B207C(v1, v48, v83);
      sub_23F362A28(v48, *(uint64_t (**)(uint64_t, uint64_t))(v47 + 8));
      sub_23F3663AC(v1, type metadata accessor for DynamicEnumeration);
    }
    v49 = v88;
    v50 = (unint64_t)v89;
    v51 = v90;
    v52 = v91;
    v54 = v92;
    v53 = v93;
    v55 = v94;
    v56 = v95;
    if ((v96 & 1) != 0)
    {
      v57 = v87;
      *v87 = v88;
      v57[1] = v50;
      v57[2] = v51;
      v57[3] = v52;
      v57[4] = v54;
      v57[5] = v53;
      v57[6] = v55;
      v57[7] = v56;
      *((_BYTE *)v57 + 64) = 1;
    }
    else
    {
      v82 = v95;
      v84 = v88;
      v85 = v90;
      v86 = v89;
      sub_23F384A00();
      sub_23F383738();
      sub_23F389CDC();
      sub_23F3B1BDC();
      v88 = sub_23F3A2FC4(v49, v50, v51);
      v89 = v58;
      v90 = v59;
      v91 = v52;
      v83 = v52;
      v92 = v54;
      v93 = v53;
      v94 = v55;
      v95 = v56;
      MEMORY[0x24BDAC7A8](v52);
      sub_23F617BA0();
      sub_23F3B1BDC();
      v60 = v87;
      sub_23F5E5C10((void (*)(__int128 *__return_ptr, _QWORD *))sub_23F3B1250, (uint64_t)v87);
      swift_bridgeObjectRelease();
      sub_23F362D18();
      sub_23F362984();
      v61 = sub_23F3B1CF8();
      sub_23F39BB1C(v61, v62);
      *((_BYTE *)v60 + 64) = 0;
      v64 = v84;
      v63 = v85;
      v65 = v86;
      sub_23F3B19D8(v84, (uint64_t)v86, v85, v66, v67, v68, v69, v70, 0);
      sub_23F3B19D8(v64, (uint64_t)v65, v63, v71, v72, v73, v74, v75, 0);
    }
  }
  sub_23F362948();
}

uint64_t sub_23F3A2FC4(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v9 = MEMORY[0x24BEE4B08];
  sub_23F35D2E8(&qword_256E70898);
  sub_23F61C55C();
  sub_23F61C55C();
  sub_23F61BB78();
  sub_23F61C1FC();
  swift_bridgeObjectRelease();
  sub_23F617BA0();
  sub_23F61C280();
  swift_bridgeObjectRelease_n();
  sub_23F61C280();
  sub_23F528350(0, 0xE000000000000000, v9, a1, a2, a3);
  v7 = v6;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

void sub_23F3A30F4(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15[4];
  _QWORD v16[4];
  _QWORD v17[3];
  uint64_t v18;

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v7 = a1[3];
  sub_23F382EF8(a2 + 80, (uint64_t)v17, &qword_256E70D60);
  if (v18)
  {
    sub_23F35EA9C(v17, v18);
    sub_23F61BB78();
    v8 = sub_23F61C1FC();
    v10 = v9;
    swift_bridgeObjectRelease();
    v15[0] = v4;
    v15[1] = v5;
    v15[2] = v6;
    v15[3] = v7;
    sub_23F4145E0(v8, v10, v15, v16);
    swift_bridgeObjectRelease();
    v11 = v16[0];
    v12 = v16[1];
    v13 = v16[2];
    v14 = v16[3];
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v17);
  }
  else
  {
    sub_23F3625D8((uint64_t)v17, &qword_256E70D60);
    v11 = 0;
    v12 = 0;
    v13 = 0;
    v14 = 0;
  }
  *a3 = v11;
  a3[1] = v12;
  a3[2] = v13;
  a3[3] = v14;
}

void sub_23F3A31EC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  sub_23F362ABC();
  v27 = v4;
  v28 = v5;
  v7 = v6;
  v29 = v8;
  v9 = sub_23F61B95C();
  sub_23F3B19A8();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F389880();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v26 - v12;
  v14 = sub_23F3B1690();
  sub_23F3B1748();
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F384488(v3, v7);
  v18 = sub_23F3B2240(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 88));
  if (v18 == *MEMORY[0x24BEB9A88])
    goto LABEL_7;
  if (v18 == *MEMORY[0x24BEB9A50] || v18 == *MEMORY[0x24BEB9AA0])
    goto LABEL_9;
  if (v18 != *MEMORY[0x24BEB9A58])
  {
    if (v18 != *MEMORY[0x24BEB9A98])
    {
      sub_23F3B1708((__n128)0);
      v24 = *(void (**)(char *, uint64_t))(v0 + 8);
      v25 = (char *)v3;
      goto LABEL_10;
    }
LABEL_9:
    sub_23F383CA8(v3, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 96));
    v23 = swift_projectBox();
    sub_23F384488((uint64_t)v13, v23);
    swift_release();
    sub_23F3A31EC(v13, v27, v28);
    v24 = *(void (**)(char *, uint64_t))(v0 + 8);
    v25 = v13;
LABEL_10:
    v24(v25, v9);
    goto LABEL_11;
  }
LABEL_7:
  sub_23F383CA8(v3, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 96));
  v20 = sub_23F3B2028();
  sub_23F384840((uint64_t)v17, v20, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  swift_release();
  v21 = v1[3];
  v22 = v1[4];
  sub_23F3B1424(v1, v21);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 8))(v17, v27, v28, v21, v22);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v17, v14);
LABEL_11:
  sub_23F362948();
}

double sub_23F3A33C0@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 64) = 1;
  return result;
}

void sub_23F3A33D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t *v26;
  uint64_t v27;
  NSObject *v28;
  NSObject *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  NSObject *v50;
  uint64_t v51;
  uint64_t (**v52)(uint64_t, uint64_t);
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unsigned __int8 v67;
  unint64_t *v68;
  uint64_t (**v69)(uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  os_log_type_t v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t (*v96)(uint64_t, _QWORD);
  uint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  unint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unsigned __int8 v124;

  sub_23F362ABC();
  a19 = v23;
  a20 = v24;
  v106 = v26;
  v107 = v25;
  v105 = v27;
  v29 = v28;
  v30 = sub_23F3B1728();
  sub_23F383E7C(v30, (uint64_t)&a15);
  v100 = v31;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v32);
  sub_23F36285C();
  sub_23F3B1FF8(v33);
  v34 = sub_23F3B1690();
  sub_23F389AF8();
  MEMORY[0x24BDAC7A8](v35);
  sub_23F3B1C68();
  v36 = sub_23F61B95C();
  MEMORY[0x24BDAC7A8](v36);
  sub_23F3834D0();
  v99 = v37;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v38);
  sub_23F3838E4();
  v98 = (uint64_t *)v39;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v40);
  sub_23F3838E4();
  v104 = v41;
  sub_23F383588();
  v43 = MEMORY[0x24BDAC7A8](v42);
  v45 = (char *)&v97 - v44;
  MEMORY[0x24BDAC7A8](v43);
  v47 = (char *)&v97 - v46;
  v49 = *(void (**)(char *, uint64_t, uint64_t))(v48 + 16);
  v50 = v29;
  v51 = (uint64_t)v29;
  v52 = (uint64_t (**)(uint64_t, uint64_t))v48;
  sub_23F384488((uint64_t)&v97 - v46, v51);
  v53 = sub_23F3B2240(v52[11]);
  if (v53 == *MEMORY[0x24BEB9A88])
  {
    sub_23F383CA8((uint64_t)v47, v52[12]);
    v54 = sub_23F3B1810();
    sub_23F362D94(v21, v54, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 16));
    v55 = v20[3];
    v56 = v20[4];
    v57 = v20;
LABEL_3:
    sub_23F3B1424(v57, v55);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 24))(v21, v105, v107, v55, v56);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v34);
LABEL_16:
    swift_release();
    goto LABEL_17;
  }
  v103 = v36;
  if (v53 == *MEMORY[0x24BEB9A50])
  {
    v58 = v103;
    sub_23F383E64((uint64_t)v47, v52[12]);
    v59 = sub_23F3B2028();
    v49(v45, v59, v58);
    sub_23F3A33D8(v45, v105, v107);
    v60 = v117;
    v61 = v118;
    v62 = v119;
    v64 = v120;
    v63 = v121;
    v66 = v122;
    v65 = v123;
    v67 = v124;
    if ((v124 & 1) != 0)
    {
      v68 = v106;
      *v106 = v116;
      v68[1] = v60;
      v68[2] = v61;
      v68[3] = v62;
      v68[4] = v64;
      v68[5] = v63;
      v68[6] = v66;
      v68[7] = v65;
    }
    else
    {
      v102 = v116;
      v76 = v121;
      v104 = v117;
      v101 = v118;
      LODWORD(v105) = v124;
      v77 = sub_23F3A3A30(v116, v117, v118);
      v98 = &v97;
      v108 = v77;
      v109 = v78;
      v110 = v79;
      v111 = v62;
      v100 = v64;
      v112 = v64;
      v113 = v76;
      v99 = v76;
      v114 = v66;
      v115 = v65;
      MEMORY[0x24BDAC7A8](v77);
      v107 = v36;
      sub_23F3B1EA4();
      sub_23F39BA5C(v64, v76);
      v68 = v106;
      sub_23F5E5C10((void (*)(__int128 *__return_ptr, _QWORD *))sub_23F3B0D8C, (uint64_t)v106);
      v80 = v112;
      v97 = v66;
      v81 = v113;
      v98 = (uint64_t *)v65;
      swift_bridgeObjectRelease();
      sub_23F362984();
      sub_23F362D08();
      sub_23F39BB1C(v80, v81);
      sub_23F39BA98(v102, v104, v101, v62, v100, v99, v97, (uint64_t)v98, 0);
      v67 = v105;
    }
    *((_BYTE *)v68 + 64) = v67;
    sub_23F383E64((uint64_t)v45, v52[1]);
    goto LABEL_16;
  }
  v69 = v52;
  v70 = v103;
  v71 = v107;
  if (v53 == *MEMORY[0x24BEB9AA0])
  {
    sub_23F3B18BC();
    v72 = sub_23F3B1810();
    sub_23F3B1A68(v72);
    v73 = v105;
    v74 = v34;
    v75 = v71;
LABEL_15:
    sub_23F3A33D8(v74, v73, v75);
    v69[1](v34, v70);
    goto LABEL_16;
  }
  if (v53 == *MEMORY[0x24BEB9A58])
  {
    sub_23F3B18BC();
    v82 = sub_23F3B1810();
    sub_23F362D94(v21, v82, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 16));
    v57 = v20;
    v55 = v20[3];
    v56 = v20[4];
    goto LABEL_3;
  }
  if (v53 == *MEMORY[0x24BEB9A98])
  {
    sub_23F3B18BC();
    v83 = sub_23F3B1810();
    sub_23F3B1A68(v83);
    v73 = v105;
    v74 = v34;
    v75 = v107;
    goto LABEL_15;
  }
  sub_23F619088();
  v84 = (uint64_t)v98;
  sub_23F3B1BCC((uint64_t)v98, (uint64_t)v50);
  v85 = v99;
  sub_23F3B1BCC(v99, (uint64_t)v50);
  sub_23F619E8C();
  v86 = sub_23F3B1BD4();
  v87 = v86;
  if (os_log_type_enabled(v50, v86))
  {
    v88 = sub_23F366668();
    v107 = sub_23F366668();
    v116 = v107;
    *(_DWORD *)v88 = 136315394;
    LODWORD(v105) = v87;
    sub_23F3B1BCC(v104, v84);
    v89 = sub_23F61C16C();
    sub_23F37AE00(v89, v90, (uint64_t *)&v116);
    v108 = v91;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    v69[1](v84, v103);
    *(_WORD *)(v88 + 12) = 2080;
    v92 = sub_23F61B944();
    sub_23F37AE00(v92, v93, (uint64_t *)&v116);
    v108 = v94;
    sub_23F61C790();
    sub_23F362984();
    sub_23F3B1E08(v85);
    _os_log_impl(&dword_23F35A000, v50, (os_log_type_t)v105, "%s: Unsupported type in action: %s", (uint8_t *)v88, 0x16u);
    swift_arrayDestroy();
    sub_23F366530();
  }
  sub_23F3B1E08(v84);
  sub_23F3B1E08(v85);

  v95 = sub_23F3B2118();
  sub_23F3841CC(v95, v96);
  sub_23F3B1E08((uint64_t)v47);
  sub_23F3B1708((__n128)0);
LABEL_17:
  sub_23F362948();
}

uint64_t sub_23F3A3A30(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v9 = MEMORY[0x24BEE4B08];
  sub_23F35D2E8(&qword_256E70898);
  sub_23F61C55C();
  sub_23F61C55C();
  sub_23F61C280();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F528350(0, 0xE000000000000000, v9, a1, a2, a3);
  v7 = v6;
  swift_bridgeObjectRelease();
  sub_23F617BA0();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23F61C280();
  return v7;
}

void sub_23F3A3B58(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12[4];
  _QWORD v13[4];
  _QWORD v14[3];
  uint64_t v15;

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v7 = a1[3];
  sub_23F382EF8(a2 + 40, (uint64_t)v14, &qword_256E70CF0);
  if (v15)
  {
    sub_23F35EA9C(v14, v15);
    v12[0] = v4;
    v12[1] = v5;
    v12[2] = v6;
    v12[3] = v7;
    sub_23F41550C(v12, v13);
    v8 = v13[0];
    v9 = v13[1];
    v10 = v13[2];
    v11 = v13[3];
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v14);
  }
  else
  {
    sub_23F3625D8((uint64_t)v14, &qword_256E70CF0);
    v8 = 0;
    v9 = 0;
    v10 = 0;
    v11 = 0;
  }
  *a3 = v8;
  a3[1] = v9;
  a3[2] = v10;
  a3[3] = v11;
}

double sub_23F3A3C14@<D0>(uint64_t a1@<X8>)
{
  return sub_23F3A33C0(a1);
}

void sub_23F3A3C2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  _QWORD *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t (*v75)(uint64_t);
  int v76;
  os_log_type_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t (*v99)(uint64_t, _QWORD);
  os_log_type_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void (*v109)(uint64_t, uint64_t);
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t *v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  void (*v124)(uint64_t, uint64_t, uint64_t);
  char *v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD v142[2];

  sub_23F362ABC();
  a19 = v24;
  a20 = v25;
  v115 = v26;
  v137 = v27;
  v127 = v28;
  v29 = type metadata accessor for AlphaTypeIdentifierRenderer(0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v30);
  v125 = (char *)&v110 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v32);
  sub_23F3838E4();
  v113 = v33;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v34);
  sub_23F383780();
  v116 = v35;
  v119 = sub_23F3B1728();
  v118 = *(_QWORD *)(v119 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v36);
  v133 = (char *)&v110 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v38);
  sub_23F383780();
  v117 = v39;
  v40 = sub_23F3B1690();
  sub_23F3B1748();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F36285C();
  v135 = v42;
  v43 = sub_23F3B1C40();
  sub_23F383E7C(v43, (uint64_t)&v141);
  v111 = v44;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v45);
  sub_23F3B15A8(v46, v110);
  v47 = sub_23F35D2E8(&qword_256E70A68);
  v130 = *(_QWORD *)(v47 - 8);
  v131 = v47;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v48);
  sub_23F3B1C68();
  v49 = sub_23F61BBD8();
  v132 = *(_QWORD *)(v49 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v50);
  sub_23F3B1CA0();
  MEMORY[0x24BDAC7A8](v51);
  sub_23F35D2E8(&qword_256E70A70);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v52);
  v54 = (char *)&v110 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = sub_23F61B998();
  sub_23F3B1FF8(*(_QWORD *)(v136 - 8));
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v55);
  sub_23F3834D0();
  v121 = v56;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v57);
  sub_23F383780();
  sub_23F384990(v58);
  v114 = v29;
  v123 = v20;
  sub_23F3B2210();
  v129 = v142[0];
  v128 = sub_23F3B21E4(&v139);
  sub_23F61BBB4();
  swift_getKeyPath();
  v59 = swift_allocBox();
  v134 = v21;
  v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16);
  v126 = v40;
  v61 = v40;
  v62 = v49;
  v124 = v60;
  v60(v63, v137, v61);
  *v22 = v59;
  v65 = v130;
  v64 = v131;
  sub_23F362D94((uint64_t)v22, *MEMORY[0x24BEB8F00], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v130 + 104));
  sub_23F3B121C(&qword_256E70A78, (void (*)(uint64_t))MEMORY[0x24BEBA3A8]);
  sub_23F3B0CC8(&qword_256E70A80, &qword_256E70A68);
  sub_23F61B6A4();
  swift_release();
  sub_23F383E64((uint64_t)v22, *(uint64_t (**)(uint64_t, uint64_t))(v65 + 8));
  (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v23, v62);
  sub_23F3B2040();
  if (v64)
  {
    sub_23F3B2230();
    sub_23F3B2104();
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v139);
    sub_23F36196C((uint64_t)v54, 1, 1, v136);
LABEL_5:
    v69 = (uint64_t)v125;
    v70 = v126;
    v71 = v135;
    v72 = (uint64_t)v133;
    sub_23F3625D8((uint64_t)v54, &qword_256E70A70);
    goto LABEL_6;
  }
  v66 = v121;
  v22 = v120;
  v67 = v122;
  sub_23F3B2104();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)&v139);
  sub_23F383740((uint64_t)v54, 1, v136);
  if (v68)
    goto LABEL_5;
  v92 = (uint64_t)v54;
  v93 = v136;
  sub_23F38426C((uint64_t)v22, v92, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v67 + 32));
  sub_23F38426C(v66, (uint64_t)v22, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v67 + 16));
  v94 = (*(uint64_t (**)(uint64_t, uint64_t))(v67 + 88))(v66, v93);
  v69 = (uint64_t)v125;
  v70 = v126;
  v71 = v135;
  v72 = (uint64_t)v133;
  if (v94 == *MEMORY[0x24BEB9B20])
  {
    v95 = v136;
    (*(void (**)(uint64_t, uint64_t))(v67 + 96))(v66, v136);
    v96 = v111;
    v97 = v112;
    sub_23F3B15C8(v112, v66, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v111 + 32));
    sub_23F3B1424(v123, v123[3]);
    sub_23F3B1F24(v97);
    sub_23F362A28(v97, *(uint64_t (**)(uint64_t, uint64_t))(v96 + 8));
    (*(void (**)(uint64_t *, uint64_t))(v67 + 8))(v22, v95);
    goto LABEL_21;
  }
  v54 = *(char **)(v67 + 8);
  sub_23F3B1F64((uint64_t)v22);
  sub_23F3B1F64(v66);
LABEL_6:
  v73 = v127;
  v124(v71, v137, v70);
  v74 = sub_23F3B1E60();
  v76 = v75(v74);
  if (v76 == *MEMORY[0x24BEB9D18])
  {
    sub_23F3B1950();
    swift_release();
LABEL_16:
    sub_23F3B1F04();
    goto LABEL_21;
  }
  if (v76 == *MEMORY[0x24BEB9D00])
  {
    sub_23F3B1950();
    swift_release();
    sub_23F3B1AD0();
    sub_23F3B1F8C((uint64_t)v123, type metadata accessor for AlphaTypeIdentifierRenderer, (uint64_t)&a10);
    sub_23F3B1D6C();
    v77 = sub_23F3B1BD4();
    if (sub_23F3B1604(v77))
    {
      sub_23F366668();
      v78 = sub_23F366668();
      sub_23F3B2158(v78);
      sub_23F3B1988(4.8149e-34);
      sub_23F3B1804((uint64_t)v22, type metadata accessor for AlphaTypeIdentifierRenderer, (uint64_t)v142);
      v79 = sub_23F3B1D80();
      sub_23F3B184C(v79, v80);
      sub_23F3B152C(v81);
      sub_23F384364();
      sub_23F3663AC((uint64_t)v22, type metadata accessor for AlphaTypeIdentifierRenderer);
      sub_23F3B14F0(&dword_23F35A000, v82, v83, "%s .builtin: Unsupported type in action");
      sub_23F3B16C0();
      sub_23F366530();
    }
    sub_23F3663AC((uint64_t)v22, type metadata accessor for AlphaTypeIdentifierRenderer);

    v98 = sub_23F3B1DA0();
    sub_23F3841CC(v98, v99);
    goto LABEL_16;
  }
  if (v76 == *MEMORY[0x24BEB9CF8])
  {
    sub_23F3B1950();
    sub_23F3B21AC((uint64_t)v123);
    sub_23F3B1FBC();
    v84 = sub_23F3B204C();
    v86 = v85;
    sub_23F362984();
    v139 = v84;
    v140 = v86;
    sub_23F384324();
    sub_23F3B1CBC();
    sub_23F38432C();
    v87 = v139;
    v88 = v140;
    sub_23F362CDC();
    v89 = sub_23F3B1B44(MEMORY[0x24BEE4B08]);
    sub_23F369004(v89);
    v91 = v90;
    sub_23F3668FC();
    *(_QWORD *)v73 = v87;
    *(_QWORD *)(v73 + 8) = v88;
    *(_QWORD *)(v73 + 16) = v91;
    *(_OWORD *)(v73 + 24) = 0u;
    *(_OWORD *)(v73 + 40) = 0u;
    *(_OWORD *)(v73 + 49) = 0u;
  }
  else
  {
    sub_23F3B2130();
    sub_23F362600((uint64_t)v123, v69, type metadata accessor for AlphaTypeIdentifierRenderer);
    sub_23F619E8C();
    v100 = sub_23F3B1BD4();
    if (sub_23F3B1604(v100))
    {
      sub_23F366668();
      v101 = sub_23F366668();
      sub_23F3B2158(v101);
      sub_23F3B1988(4.8149e-34);
      sub_23F3B1804(v69, type metadata accessor for AlphaTypeIdentifierRenderer, (uint64_t)v142);
      v102 = sub_23F3B1D80();
      sub_23F3B184C(v102, v103);
      v138 = v104;
      sub_23F61C790();
      sub_23F384364();
      sub_23F3663AC(v69, type metadata accessor for AlphaTypeIdentifierRenderer);
      sub_23F3B14F0(&dword_23F35A000, v105, v106, "%s unknown: Unsupported type in action");
      sub_23F3B16C0();
      sub_23F366530();
    }
    sub_23F3663AC(v69, type metadata accessor for AlphaTypeIdentifierRenderer);

    sub_23F3841CC(v72, *(uint64_t (**)(uint64_t, _QWORD))(v118 + 8));
    sub_23F3B1F04();
    v107 = sub_23F3B1E60();
    v109(v107, v108);
  }
LABEL_21:
  sub_23F362948();
}

void sub_23F3A4430()
{
  sub_23F61BBC0();
  sub_23F362928();
}

void sub_23F3A444C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = sub_23F35D2E8(&qword_256E70A68);
  MEMORY[0x24BDAC7A8](v3);
  sub_23F3B1590();
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v1, a1);
  sub_23F61BBCC();
  sub_23F362B80();
}

void sub_23F3A44B4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (**v46)(uint64_t, _QWORD);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(uint64_t, uint64_t, _QWORD);
  uint64_t v60;
  void *v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  os_log_type_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t (*v80)(uint64_t, _QWORD);
  uint64_t v81;
  os_log_type_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t (*v89)(uint64_t, _QWORD);
  uint64_t v90;
  _QWORD v91[4];
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t (*v102)(uint64_t, uint64_t, uint64_t);
  void *v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _BYTE v119[16];
  _QWORD v120[6];

  sub_23F362ABC();
  v97 = v4;
  v117 = v5;
  v115 = v6;
  v7 = type metadata accessor for AlphaTypeIdentifierRenderer(0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F3834D0();
  v112 = v9;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F3838E4();
  v91[0] = v11;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F383780();
  v91[2] = v13;
  v96 = sub_23F3B1728();
  v95 = *(_QWORD *)(v96 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F3834D0();
  v116 = v15;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F3B13F0((uint64_t)v91 - v17);
  v100 = sub_23F61B9BC();
  v99 = *(_QWORD *)(v100 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F36285C();
  v98 = v19;
  v20 = sub_23F3B1690();
  v118 = *(_QWORD *)(v20 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v21);
  sub_23F36285C();
  v114 = v22;
  v94 = sub_23F3B1C40();
  v93 = *(_QWORD *)(v94 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v23);
  sub_23F3B13F0((uint64_t)v91 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v109 = sub_23F61B998();
  v101 = *(_QWORD *)(v109 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F3834D0();
  v110 = v26;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v27);
  sub_23F383780();
  v111 = v28;
  v106 = sub_23F35D2E8(&qword_256E70A68);
  sub_23F389AF8();
  MEMORY[0x24BDAC7A8](v29);
  v30 = sub_23F3B18F4();
  v107 = *(_QWORD *)(v30 - 8);
  v108 = v30;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v31);
  sub_23F389880();
  MEMORY[0x24BDAC7A8](v32);
  v34 = (char *)v91 - v33;
  sub_23F35D2E8(&qword_256E70A70);
  sub_23F362850();
  v36 = MEMORY[0x24BDAC7A8](v35);
  v38 = (char *)v91 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v36);
  v40 = (char *)v91 - v39;
  v91[1] = v7;
  v113 = v0;
  sub_23F3B2210();
  v105 = v120[4];
  v104 = sub_23F35EA9C(v120, v120[3]);
  sub_23F61BBB4();
  swift_getKeyPath();
  v41 = swift_allocBox();
  v42 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v118 + 16);
  v103 = (void *)v20;
  v102 = v42;
  v42(v43, v117, v20);
  *v2 = v41;
  sub_23F362D94((uint64_t)v2, *MEMORY[0x24BEB8F00], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 104));
  sub_23F3B121C(&qword_256E70A78, (void (*)(uint64_t))MEMORY[0x24BEBA3A8]);
  sub_23F3B0CC8(&qword_256E70A80, &qword_256E70A68);
  sub_23F61B6A4();
  sub_23F38496C();
  sub_23F383E64((uint64_t)v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_23F3B21DC(v1);
  sub_23F61A018();
  sub_23F3B21DC((uint64_t)v34);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v120);
  v44 = v109;
  sub_23F382EF8((uint64_t)v40, (uint64_t)v38, &qword_256E70A70);
  sub_23F383740((uint64_t)v38, 1, v44);
  v45 = v114;
  v46 = (uint64_t (**)(uint64_t, _QWORD))v118;
  v47 = v116;
  v48 = v111;
  v49 = v112;
  v50 = v110;
  if (v51)
  {
    sub_23F3625D8((uint64_t)v38, &qword_256E70A70);
  }
  else
  {
    v52 = sub_23F3840BC();
    v54 = v53;
    sub_23F38431C(v52, v55, v56);
    sub_23F38431C(v50, v48, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v54 + 16));
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v54 + 88))(v50, v44) == *MEMORY[0x24BEB9B20])
    {
      sub_23F383D74(v50, *(uint64_t (**)(uint64_t, uint64_t))(v54 + 96));
      sub_23F3B1D74();
      v57 = v50;
      v58 = v92;
      sub_23F3B15C8(v92, v57, v59);
      sub_23F35EA9C(v113, v113[3]);
      sub_23F3B1F24(v58);
      sub_23F362A28(v58, *(uint64_t (**)(uint64_t, uint64_t))(v47 + 8));
      v60 = sub_23F383D74(v48, *(uint64_t (**)(uint64_t, uint64_t))(v54 + 8));
      sub_23F3B1B6C(v60, &qword_256E70A70);
      goto LABEL_18;
    }
    sub_23F3B1F64(v48);
    sub_23F3B1F64(v50);
  }
  v61 = v103;
  sub_23F38426C(v45, v117, v102);
  v62 = ((uint64_t (**)(uint64_t, void *))v46)[11](v45, v61);
  if (v62 == *MEMORY[0x24BEB9D18])
  {
    sub_23F383E88(v45, v46[12]);
    v63 = sub_23F3B1858();
    v64 = v99;
    v65 = v98;
    sub_23F362D94(v98, v63, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v99 + 16));
    sub_23F3B1424(v113 + 5, v113[8]);
    sub_23F3A883C(v65, v115);
    v66 = sub_23F383E64(v65, *(uint64_t (**)(uint64_t, uint64_t))(v64 + 8));
    sub_23F3B1B6C(v66, &qword_256E70A70);
    sub_23F3668FC();
  }
  else if (v62 == *MEMORY[0x24BEB9D00])
  {
    sub_23F383E88(v45, v46[12]);
    swift_release();
    sub_23F3B1AD0();
    sub_23F3B1F8C((uint64_t)v113, type metadata accessor for AlphaTypeIdentifierRenderer, (uint64_t)v120);
    sub_23F3B1D6C();
    v67 = sub_23F3B1BD4();
    if (sub_23F3B1604(v67))
    {
      sub_23F366668();
      v68 = sub_23F366668();
      sub_23F3B2158(v68);
      sub_23F3B1988(4.8149e-34);
      sub_23F3B1804(v50, type metadata accessor for AlphaTypeIdentifierRenderer, (uint64_t)v119);
      v69 = sub_23F3B1D80();
      sub_23F3B184C(v69, v70);
      sub_23F3B152C(v71);
      sub_23F384364();
      sub_23F3663AC(v50, type metadata accessor for AlphaTypeIdentifierRenderer);
      sub_23F3B14F0(&dword_23F35A000, v72, v73, "%s .builtin: Unsupported type in action");
      sub_23F3B16C0();
      sub_23F366530();
    }

    sub_23F3663AC(v50, type metadata accessor for AlphaTypeIdentifierRenderer);
    v79 = sub_23F3B1DA0();
    v81 = sub_23F3841CC(v79, v80);
    sub_23F3B1B6C(v81, &qword_256E70A70);
    sub_23F3B1708((__n128)0);
  }
  else if (v62 == *MEMORY[0x24BEB9CF8])
  {
    sub_23F383E88(v45, v46[12]);
    sub_23F3B21AC((uint64_t)v113);
    sub_23F3B1FBC();
    v74 = sub_23F3B204C();
    v76 = v75;
    sub_23F362984();
    sub_23F3848F0();
    sub_23F61C1D8();
    sub_23F3B1D2C();
    v120[0] = v74;
    v120[1] = v76;
    sub_23F384324();
    sub_23F3B1CBC();
    sub_23F38432C();
    sub_23F384120();
    sub_23F362CDC();
    v77 = sub_23F3B1B44(MEMORY[0x24BEE4B08]);
    sub_23F369004(v77);
    sub_23F3B1B6C(v78, &qword_256E70A70);
    sub_23F3668FC();
    sub_23F3B1B28(v115);
  }
  else
  {
    sub_23F619088();
    sub_23F362600((uint64_t)v113, v49, type metadata accessor for AlphaTypeIdentifierRenderer);
    sub_23F619E8C();
    v82 = sub_23F3B1BD4();
    if (sub_23F3B1604(v82))
    {
      sub_23F366668();
      v83 = sub_23F366668();
      sub_23F3B2158(v83);
      sub_23F3B1988(4.8149e-34);
      sub_23F3B1804(v49, type metadata accessor for AlphaTypeIdentifierRenderer, (uint64_t)v119);
      v84 = sub_23F3B1D80();
      sub_23F3B184C(v84, v85);
      sub_23F3B152C(v86);
      sub_23F384364();
      sub_23F3663AC(v49, type metadata accessor for AlphaTypeIdentifierRenderer);
      sub_23F3B14F0(&dword_23F35A000, v87, v88, "%s unknown: Unsupported type in action");
      sub_23F3B16C0();
      sub_23F366530();
    }

    sub_23F3663AC(v49, type metadata accessor for AlphaTypeIdentifierRenderer);
    sub_23F384430();
    v90 = sub_23F3841CC(v47, v89);
    sub_23F3B1B6C(v90, &qword_256E70A70);
    sub_23F3B1708((__n128)0);
    sub_23F3841CC(v45, v46[1]);
  }
LABEL_18:
  sub_23F362948();
}

void sub_23F3A4DC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  int64_t v54;
  uint64_t v55;
  void (*v56)(_BYTE *, unint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  int v61;
  int64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(uint64_t, _QWORD);
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  _BOOL8 v91;
  uint64_t v92;
  char v93;
  char v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char v118;
  _BYTE v119[4];
  int v120;
  os_log_t v121;
  unint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _BYTE *v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  _BYTE *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  unsigned __int8 v153;
  uint64_t v154[3];
  unint64_t v155;
  uint64_t v156;

  sub_23F362ABC();
  a19 = v23;
  a20 = v24;
  v141 = v20;
  v142 = v25;
  v27 = v26;
  v128 = v28;
  v29 = sub_23F61BD10();
  sub_23F383E7C(v29, (uint64_t)&a11);
  v136 = v30;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v31);
  sub_23F3B13F0((uint64_t)&v119[-((v32 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  v126 = sub_23F61BD28();
  v125 = *(_QWORD *)(v126 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v33);
  sub_23F3B13F0((uint64_t)&v119[-((v34 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  v133 = sub_23F61BC8C();
  sub_23F3B1748();
  MEMORY[0x24BDAC7A8](v35);
  sub_23F3834D0();
  v139 = (_BYTE *)v36;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v37);
  v130 = &v119[-v38];
  v129 = sub_23F3B1728();
  v127 = *(_QWORD *)(v129 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v39);
  sub_23F36285C();
  v41 = (uint64_t *)sub_23F3B1E50(v40);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v42);
  sub_23F362930();
  if (qword_256E6EE90 != -1)
    goto LABEL_35;
  while (1)
  {
    v43 = sub_23F361498((uint64_t)v41, (uint64_t)qword_256E7FE90);
    sub_23F3B1450();
    sub_23F362600(v43, v22, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
    sub_23F35D2E8(&qword_256E70CB8);
    sub_23F617C48();
    v44 = v145;
    sub_23F3663AC(v22, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
    v45 = MEMORY[0x24266F190]();
    v46 = sub_23F3EEE7C(v44, v45);
    v48 = v47;
    v50 = v49;
    v52 = v51;
    v53 = *(_QWORD *)(MEMORY[0x24266F190]() + 16);
    swift_bridgeObjectRelease();
    v54 = v52 >> 1;
    v137 = v52 >> 1;
    v131 = v46;
    v132 = v52;
    if (v44 < v53)
    {
      v55 = v140;
      sub_23F3B2130();
      v56 = *(void (**)(_BYTE *, unint64_t, uint64_t))(v21 + 16);
      v57 = (uint64_t)v130;
      v58 = v133;
      v56(v130, v27, v133);
      v124 = v21;
      v59 = (uint64_t)v139;
      v56(v139, v27, v58);
      swift_unknownObjectRetain_n();
      v60 = sub_23F619E8C();
      v61 = sub_23F61C610();
      if (os_log_type_enabled(v60, (os_log_type_t)v61))
      {
        v120 = v61;
        v121 = v60;
        v122 = v27;
        v62 = v54;
        v63 = sub_23F366668();
        v145 = sub_23F366668();
        *(_DWORD *)v63 = 136315650;
        v123 = v63 + 4;
        sub_23F61BC74();
        sub_23F61BD1C();
        v64 = sub_23F3B2118();
        sub_23F3841CC(v64, v65);
        v66 = sub_23F3840BC();
        sub_23F37AE00(v66, v67, v68);
        v154[0] = v69;
        sub_23F61C790();
        sub_23F362D18();
        v70 = *(void (**)(uint64_t, uint64_t))(v124 + 8);
        v70(v57, v58);
        *(_WORD *)(v63 + 12) = 2048;
        sub_23F3B1B74();
        if (!__OFSUB__(v62, v50))
        {
          v154[0] = v62 - v50;
          sub_23F61C790();
          v71 = sub_23F3B1B74();
          *(_WORD *)(v63 + 22) = 2048;
          v72 = (uint64_t)v139;
          v73 = *(_QWORD *)(MEMORY[0x24266F190](v71) + 16);
          swift_bridgeObjectRelease();
          v70(v72, v58);
          v154[0] = v73;
          sub_23F61C790();
          _os_log_impl(&dword_23F35A000, v121, (os_log_type_t)v120, "Enum cases for \"%s\" truncated to first %ld out of %ld cases", (uint8_t *)v63, 0x20u);
          sub_23F3B17D4();
          sub_23F366530();
        }
        goto LABEL_38;
      }
      sub_23F3B224C(v59);
      v21 = v131;
      swift_unknownObjectRelease();
      sub_23F3B224C(v57);

      swift_unknownObjectRelease();
      sub_23F3841CC(v55, *(uint64_t (**)(uint64_t, _QWORD))(v127 + 8));
      v52 = v132;
      v46 = v21;
    }
    v74 = v141;
    v129 = sub_23F3A575C();
    v130 = v75;
    sub_23F382FC4(v74, (uint64_t)v154);
    v77 = v54 - v50;
    if (__OFSUB__(v54, v50))
    {
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
      return;
    }
    v41 = (uint64_t *)MEMORY[0x24BEE4AF8];
    if (!v77)
      break;
    v143 = MEMORY[0x24BEE4AF8];
    v41 = &v143;
    sub_23F3B2254(v76, v77 & ~(v77 >> 63));
    if (v77 < 0)
      goto LABEL_37;
    v22 = 0;
    v134 = v48;
    v138 = v50;
    v133 = v54 - v50;
    while (1)
    {
      v78 = v22 + 1;
      if (__OFADD__(v22, 1))
        break;
      if (v50 + v22 >= v54 || v22 >= v77)
        goto LABEL_34;
      v80 = v136;
      v81 = v48 + *(_QWORD *)(v136 + 72) * (v50 + v22);
      v82 = v135;
      sub_23F362D94(v135, v81, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v136 + 16));
      v83 = v155;
      sub_23F3B1424(v154, v155);
      sub_23F3B20BC(v82, v83);
      sub_23F383E64(v82, *(uint64_t (**)(uint64_t, uint64_t))(v80 + 8));
      v84 = v145;
      v85 = v146;
      v27 = v148;
      v142 = v147;
      v87 = v149;
      v86 = v150;
      sub_23F3B1FF8(v151);
      v140 = v152;
      LODWORD(v139) = v153;
      v41 = (uint64_t *)v143;
      if ((sub_23F3B1CDC() & 1) == 0)
      {
        sub_23F3B1F7C(0, v41[2] + 1);
        v41 = (uint64_t *)v143;
      }
      v21 = v41[2];
      v88 = v41[3];
      if (v21 >= v88 >> 1)
      {
        v91 = sub_23F3B1A80(v88);
        sub_23F3B1F7C(v91, v21 + 1);
        v41 = (uint64_t *)v143;
      }
      v41[2] = v21 + 1;
      v89 = &v41[9 * v21];
      v89[4] = v84;
      v89[5] = v85;
      v89[6] = v142;
      v89[7] = v27;
      v89[8] = v87;
      v89[9] = v86;
      v90 = v140;
      v89[10] = v141;
      v89[11] = v90;
      *((_BYTE *)v89 + 96) = (_BYTE)v139;
      ++v22;
      v77 = v133;
      v48 = v134;
      v50 = v138;
      v54 = v137;
      if (v78 == v133)
      {
        v46 = v131;
        v52 = v132;
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    swift_once();
  }
LABEL_23:
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v154);
  v92 = sub_23F5250A0((uint64_t)v41);
  v94 = v93;
  sub_23F362984();
  v95 = v94 & 1;
  if ((v94 & 1) != 0)
  {
    v48 = 0;
    v50 = 0;
    v52 = 0;
    v96 = 0;
    v97 = v92;
  }
  else
  {
    v98 = sub_23F3668F4();
    sub_23F39E898(v98);
    v96 = v99;
    swift_unknownObjectRetain();
    sub_23F3B0CFC(v92, 0);
    sub_23F3B1860();
    v97 = v46;
  }
  v145 = v97;
  v146 = v48;
  v147 = v50;
  v148 = v52;
  v149 = v96;
  LOBYTE(v150) = v95 != 0;
  v100 = (uint64_t)v130;
  sub_23F3668F4();
  v101 = sub_23F39F9A4((uint64_t)&v145, v129, v100);
  LODWORD(v142) = v102 & 1;
  if ((v102 & 1) != 0)
    sub_23F3B1FF8(v101);
  else
    v141 = sub_23F3A6DBC(v101);
  v140 = v96;
  v132 = v52;
  v138 = v50;
  v139 = (_BYTE *)v97;
  if ((v94 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v103 = 0;
    v104 = v97;
  }
  else
  {
    v154[0] = v97;
    v154[1] = v48;
    v154[2] = v50;
    v155 = v52;
    v156 = v96;
    sub_23F3A5F68(v154);
    sub_23F35D2E8(&qword_256E700E8);
    v105 = sub_23F36682C();
    *(_OWORD *)(v105 + 16) = xmmword_23F61E7E0;
    v143 = 0x207373616C63;
    v144 = 0xE600000000000000;
    sub_23F61C280();
    sub_23F61C280();
    v106 = v144;
    *(_QWORD *)(v105 + 32) = v143;
    *(_QWORD *)(v105 + 40) = v106;
    v143 = v105;
    sub_23F389CDC();
    sub_23F385EB0();
    sub_23F35D2E8(&qword_256E70580);
    sub_23F3B0CC8(&qword_256E70588, &qword_256E70580);
    sub_23F3B2034();
    v104 = sub_23F61C088();
    v103 = v107;
    sub_23F362D08();
    swift_bridgeObjectRelease();
    sub_23F384364();
  }
  v108 = v141;
  v109 = v142;
  sub_23F3A2164(v141, v142, v104, v103, v95);
  sub_23F3B0CFC(v108, v109);
  sub_23F3B0D08(v104, v103, v95);
  v110 = sub_23F3B221C();
  sub_23F39FABC(v110, v111, v112, v113, v114);
  sub_23F3B0D18((uint64_t)v139, v48, v138, v132, v140, v95);
  sub_23F3B1B74();
  v115 = sub_23F3B221C();
  sub_23F3B1080(v115, v116, v117, v118);
  sub_23F362948();
}

uint64_t sub_23F3A575C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[5];

  sub_23F3B1690();
  sub_23F3B1DC8();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F362930();
  sub_23F382FC4(v0 + 40, (uint64_t)v8);
  sub_23F35EA9C(v8, v8[3]);
  sub_23F61BC68();
  sub_23F61B9A4();
  sub_23F362A28(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F3A2898();
  sub_23F3B20F8();
  sub_23F38432C();
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v8);
  v4 = sub_23F3B204C();
  v6 = v5;
  sub_23F362984();
  sub_23F3A6F58();
  sub_23F61C1D8();
  sub_23F3B1D2C();
  sub_23F362D18();
  v8[0] = v4;
  v8[1] = v6;
  sub_23F362CDC();
  sub_23F3B1CBC();
  sub_23F362C60();
  sub_23F384120();
  return v8[0];
}

uint64_t sub_23F3A5874(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v24)(uint64_t *, uint64_t, uint64_t);

  v13 = sub_23F35D2E8(&qword_256E70A48);
  v14 = swift_allocBox();
  v16 = v15;
  v17 = (uint64_t *)((char *)v15 + *(int *)(v13 + 48));
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a6;
  *(_QWORD *)(v18 + 24) = a7;
  *v16 = v18;
  v19 = *MEMORY[0x24BE54960];
  v20 = sub_23F6184B8();
  v24 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104);
  v24(v16, v19, v20);
  *v17 = a4;
  v17[1] = a5;
  *a1 = v14;
  v24(a1, *MEMORY[0x24BE54938], v20);
  v21 = swift_allocObject();
  sub_23F617BA0();
  sub_23F617BA0();
  *(_QWORD *)(v21 + 16) = sub_23F61BD04();
  *(_QWORD *)(v21 + 24) = v22;
  *a2 = v21;
  return ((uint64_t (*)(uint64_t *, uint64_t, uint64_t))v24)(a2, v19, v20);
}

void sub_23F3A59B4(uint64_t *a1, void (*a2)(char *, char *, char *, uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  BOOL v22;
  int64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  uint64_t *v37;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  unint64_t v54;
  _QWORD v56[3];
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, char *, char *, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char v74;
  uint64_t v75;

  v66 = a2;
  v67 = a3;
  v5 = sub_23F35D2E8(&qword_256E704E0);
  v64 = *(_QWORD *)(v5 - 8);
  v65 = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v61 = (uint64_t)v56 - v9;
  v73 = sub_23F61BD10();
  v10 = *(_QWORD *)(v73 - 8);
  v11 = MEMORY[0x24BDAC7A8](v73);
  v72 = (char *)v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v56 - v13;
  v63 = sub_23F35D2E8(&qword_256E70CD0);
  v15 = MEMORY[0x24BDAC7A8](v63);
  v17 = (char *)v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v59 = (char *)v56 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v58 = (uint64_t)v56 - v20;
  v21 = (char *)((unint64_t)a1[3] >> 1);
  v69 = (char *)a1[2];
  v70 = v21;
  v22 = __OFSUB__(v21, v69);
  v23 = v21 - v69;
  if (v22)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  v24 = *a1;
  v68 = a1[1];
  v71 = a1[4];
  if (*(_QWORD *)(v71 + 16) >= v23)
    v25 = v23;
  else
    v25 = *(_QWORD *)(v71 + 16);
  v75 = MEMORY[0x24BEE4AF8];
  sub_23F37BA90();
  v74 = 0;
  if ((v25 & 0x8000000000000000) == 0)
  {
    v56[1] = v24;
    v56[2] = v3;
    v60 = v14;
    if (v25)
    {
      swift_unknownObjectRetain();
      v26 = sub_23F617BA0();
      v27 = 0;
      v62 = (char *)(v69 - v70);
      v28 = (uint64_t *)(v26 + 40);
      do
      {
        if (v25 == v27)
        {
          __break(1u);
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          goto LABEL_45;
        }
        if ((v74 & 1) != 0)
          goto LABEL_42;
        if (!&v62[v27])
          goto LABEL_50;
        if ((uint64_t)&v69[v27] >= (uint64_t)v70)
          goto LABEL_43;
        (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v72, v68 + *(_QWORD *)(v10 + 72) * (_QWORD)&v69[v27], v73);
        v29 = *(_QWORD *)(v71 + 16);
        if (v27 == v29)
          goto LABEL_49;
        if (v27 >= v29)
          goto LABEL_44;
        v31 = *(v28 - 1);
        v30 = *v28;
        v32 = &v17[*(int *)(v63 + 48)];
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v17, v72, v73);
        *(_QWORD *)v32 = v31;
        *((_QWORD *)v32 + 1) = v30;
        v33 = &v8[*(int *)(v65 + 48)];
        sub_23F617BA0();
        v66(v8, v33, v17, v31, v30);
        sub_23F3625D8((uint64_t)v17, &qword_256E70CD0);
        v34 = v75;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F37BA90();
          v34 = v75;
        }
        v35 = *(_QWORD *)(v34 + 16);
        if (v35 >= *(_QWORD *)(v34 + 24) >> 1)
        {
          sub_23F37BA90();
          v34 = v75;
        }
        ++v27;
        *(_QWORD *)(v34 + 16) = v35 + 1;
        sub_23F383004((uint64_t)v8, v34+ ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80))+ *(_QWORD *)(v64 + 72) * v35, &qword_256E704E0);
        v28 += 2;
      }
      while (v25 != v27);
      v72 = &v69[v27];
      v14 = v60;
      if ((v74 & 1) == 0)
        goto LABEL_22;
      goto LABEL_40;
    }
    swift_unknownObjectRetain();
    sub_23F617BA0();
    v72 = v69;
LABEL_22:
    if (v72 == v70)
    {
LABEL_40:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      return;
    }
    v36 = v72;
    v37 = (uint64_t *)(v71 + 16 * v25 + 40);
    v62 = v70 - 1;
    v57 = v10;
    while ((uint64_t)v72 >= (uint64_t)v69 && (uint64_t)v36 < (uint64_t)v70)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v14, v68 + *(_QWORD *)(v10 + 72) * (_QWORD)v36, v73);
      v39 = *(_QWORD *)(v71 + 16);
      if (v25 == v39)
      {
        (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v73);
        goto LABEL_40;
      }
      if (v25 >= v39)
        goto LABEL_46;
      v41 = *(v37 - 1);
      v40 = *v37;
      v42 = v14;
      v43 = v63;
      v44 = v59;
      v45 = &v59[*(int *)(v63 + 48)];
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v59, v42, v73);
      *(_QWORD *)v45 = v41;
      *((_QWORD *)v45 + 1) = v40;
      v46 = (uint64_t)v44;
      v47 = v58;
      sub_23F383004(v46, v58, &qword_256E70CD0);
      v48 = (uint64_t *)(v47 + *(int *)(v43 + 48));
      v49 = *v48;
      v50 = v48[1];
      v51 = v61;
      v52 = (char *)(v61 + *(int *)(v65 + 48));
      sub_23F617BA0();
      v66((char *)v51, v52, (char *)v47, v49, v50);
      sub_23F3625D8(v47, &qword_256E70CD0);
      v53 = v75;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F37BA90();
        v53 = v75;
      }
      v54 = *(_QWORD *)(v53 + 16);
      v14 = v60;
      v10 = v57;
      if (v54 >= *(_QWORD *)(v53 + 24) >> 1)
      {
        sub_23F37BA90();
        v53 = v75;
      }
      *(_QWORD *)(v53 + 16) = v54 + 1;
      sub_23F383004(v61, v53+ ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80))+ *(_QWORD *)(v64 + 72) * v54, &qword_256E704E0);
      if ((v74 & 1) == 0)
      {
        v37 += 2;
        ++v25;
        if (v62 != v36++)
          continue;
      }
      goto LABEL_40;
    }
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
LABEL_48:
  __break(1u);
LABEL_49:
  (*(void (**)(char *, uint64_t))(v10 + 8))(v72, v73);
LABEL_50:
  __break(1u);
}

void sub_23F3A5F68(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  BOOL v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  char *v32;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _QWORD v47[2];
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  uint64_t v64;

  v3 = sub_23F61BD10();
  v60 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v59 = (char *)v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v47 - v6;
  v55 = sub_23F35D2E8(&qword_256E70CD0);
  v8 = MEMORY[0x24BDAC7A8](v55);
  v10 = (char *)v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v50 = (char *)v47 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v49 = (uint64_t)v47 - v13;
  v14 = (char *)((unint64_t)a1[3] >> 1);
  v57 = (char *)a1[2];
  v58 = v14;
  v15 = __OFSUB__(v14, v57);
  v16 = (char *)(v14 - v57);
  if (v15)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  v17 = *a1;
  v56 = a1[1];
  v18 = a1[4];
  if (*(_QWORD *)(v18 + 16) >= (uint64_t)v16)
    v19 = v16;
  else
    v19 = *(char **)(v18 + 16);
  v64 = MEMORY[0x24BEE4AF8];
  sub_23F37B47C();
  v63 = 0;
  if (((unint64_t)v19 & 0x8000000000000000) == 0)
  {
    v47[0] = v17;
    v47[1] = v1;
    v53 = v18;
    v54 = v3;
    v51 = v7;
    if (v19)
    {
      swift_unknownObjectRetain();
      sub_23F617BA0();
      v20 = 0;
      v52 = (char *)(v57 - v58);
      v21 = (uint64_t *)(v18 + 40);
      do
      {
        if (v19 == v20)
        {
          __break(1u);
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          goto LABEL_45;
        }
        if ((v63 & 1) != 0)
          goto LABEL_42;
        if (!&v20[(_QWORD)v52])
          goto LABEL_50;
        if ((uint64_t)&v20[(_QWORD)v57] >= (uint64_t)v58)
          goto LABEL_43;
        (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v59, v56 + *(_QWORD *)(v60 + 72) * (uint64_t)&v20[(_QWORD)v57], v3);
        v22 = *(char **)(v18 + 16);
        if (v20 == v22)
          goto LABEL_49;
        if (v20 >= v22)
          goto LABEL_44;
        v23 = *(v21 - 1);
        v24 = *v21;
        v25 = &v10[*(int *)(v55 + 48)];
        (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v10, v59, v3);
        *(_QWORD *)v25 = v23;
        *((_QWORD *)v25 + 1) = v24;
        v61 = 538976288;
        v62 = 0xE400000000000000;
        sub_23F617BA0();
        sub_23F61C280();
        sub_23F61C280();
        sub_23F61BCEC();
        sub_23F61C280();
        swift_bridgeObjectRelease();
        sub_23F61C280();
        v27 = v61;
        v26 = v62;
        sub_23F3625D8((uint64_t)v10, &qword_256E70CD0);
        v28 = v64;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F37B47C();
          v28 = v64;
        }
        v29 = *(_QWORD *)(v28 + 16);
        if (v29 >= *(_QWORD *)(v28 + 24) >> 1)
        {
          sub_23F37B47C();
          v28 = v64;
        }
        ++v20;
        *(_QWORD *)(v28 + 16) = v29 + 1;
        v30 = v28 + 16 * v29;
        *(_QWORD *)(v30 + 32) = v27;
        *(_QWORD *)(v30 + 40) = v26;
        v21 += 2;
        v18 = v53;
        v3 = v54;
      }
      while (v19 != v20);
      v52 = &v20[(_QWORD)v57];
      v7 = v51;
      if ((v63 & 1) == 0)
        goto LABEL_22;
      goto LABEL_40;
    }
    swift_unknownObjectRetain();
    sub_23F617BA0();
    v52 = v57;
LABEL_22:
    if (v52 == v58)
    {
LABEL_40:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      return;
    }
    v31 = (uint64_t *)(v18 + 16 * (_QWORD)v19 + 40);
    v48 = v58 - 1;
    v32 = v52;
    while ((uint64_t)v52 >= (uint64_t)v57 && (uint64_t)v32 < (uint64_t)v58)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v7, v56 + *(_QWORD *)(v60 + 72) * (_QWORD)v32, v3);
      v34 = *(char **)(v18 + 16);
      if (v19 == v34)
      {
        (*(void (**)(char *, uint64_t))(v60 + 8))(v7, v3);
        goto LABEL_40;
      }
      if (v19 >= v34)
        goto LABEL_46;
      v59 = v19;
      v35 = *(v31 - 1);
      v36 = *v31;
      v37 = v50;
      v38 = &v50[*(int *)(v55 + 48)];
      (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v50, v7, v3);
      *(_QWORD *)v38 = v35;
      *((_QWORD *)v38 + 1) = v36;
      v39 = (uint64_t)v37;
      v40 = v49;
      sub_23F383004(v39, v49, &qword_256E70CD0);
      v61 = 538976288;
      v62 = 0xE400000000000000;
      sub_23F617BA0();
      sub_23F61C280();
      sub_23F61C280();
      sub_23F61BCEC();
      sub_23F61C280();
      swift_bridgeObjectRelease();
      sub_23F61C280();
      v41 = v61;
      v42 = v62;
      sub_23F3625D8(v40, &qword_256E70CD0);
      v43 = v64;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F37B47C();
        v43 = v64;
      }
      v44 = *(_QWORD *)(v43 + 16);
      v18 = v53;
      if (v44 >= *(_QWORD *)(v43 + 24) >> 1)
      {
        sub_23F37B47C();
        v43 = v64;
      }
      *(_QWORD *)(v43 + 16) = v44 + 1;
      v45 = v43 + 16 * v44;
      *(_QWORD *)(v45 + 32) = v41;
      *(_QWORD *)(v45 + 40) = v42;
      v3 = v54;
      v7 = v51;
      if ((v63 & 1) == 0)
      {
        v31 += 2;
        v19 = v59 + 1;
        if (v48 != v32++)
          continue;
      }
      goto LABEL_40;
    }
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
LABEL_48:
  __break(1u);
LABEL_49:
  (*(void (**)(char *, uint64_t))(v60 + 8))(v59, v3);
LABEL_50:
  __break(1u);
}

void sub_23F3A64F8(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char **v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  char *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  unint64_t v60;
  _QWORD *v61;
  unint64_t v62;
  _QWORD v63[3];
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  unint64_t v85;
  char *v86;
  _QWORD *v87;
  char **v88;
  uint64_t v89;
  char *v90;
  char v91;
  uint64_t v92;

  v75 = sub_23F35D2E8(&qword_256E704F0);
  v68 = *(_QWORD *)(v75 - 8);
  MEMORY[0x24BDAC7A8](v75);
  v87 = (_QWORD *)((char *)v63 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v67 = type metadata accessor for DynamicEnumeration.Case(0);
  v77 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67);
  v4 = (char *)v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23F35D2E8(&qword_256E70D00);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v64 = (uint64_t)v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v74 = (uint64_t)v63 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v73 = (uint64_t)v63 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v72 = (uint64_t)v63 - v12;
  v71 = sub_23F35D2E8(&qword_256E70D08);
  v13 = MEMORY[0x24BDAC7A8](v71);
  v70 = (char *)v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v69 = (_QWORD *)((char *)v63 - v16);
  MEMORY[0x24BDAC7A8](v15);
  v88 = (char **)((char *)v63 - v17);
  v92 = MEMORY[0x24BEE4AF8];
  sub_23F37BAC4();
  v18 = *a1;
  v76 = a1[1];
  v20 = a1[2];
  v19 = a1[3];
  v21 = a1[4];
  v91 = 0;
  v22 = v19 >> 1;
  v63[1] = v18;
  swift_unknownObjectRetain();
  sub_23F617BA0();
  v23 = 0;
  v24 = (_QWORD *)(v21 + 40);
  v78 = v22;
  v79 = v20;
  v80 = v22 - v20;
  v81 = v21;
  v66 = v4;
  v65 = v5;
  while (1)
  {
    if (v80 == v23)
      goto LABEL_14;
    if ((uint64_t)(v79 + v23) >= v78)
      break;
    sub_23F362600(v76 + *(_QWORD *)(v77 + 72) * (v79 + v23), (uint64_t)v4, type metadata accessor for DynamicEnumeration.Case);
    v25 = *(_QWORD *)(v81 + 16);
    if (v23 == v25)
    {
      sub_23F3663AC((uint64_t)v4, type metadata accessor for DynamicEnumeration.Case);
LABEL_14:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      return;
    }
    if (v23 >= v25)
      goto LABEL_16;
    v26 = *(v24 - 1);
    v27 = *v24;
    v84 = v24;
    v28 = v23;
    v29 = v73;
    v30 = v88;
    v31 = (_QWORD *)(v73 + *(int *)(v5 + 48));
    sub_23F36262C((uint64_t)v4, v73, type metadata accessor for DynamicEnumeration.Case);
    *v31 = v26;
    v31[1] = v27;
    v32 = v72;
    sub_23F383004(v29, v72, &qword_256E70D00);
    v33 = v71;
    v34 = (uint64_t)&v70[*(int *)(v71 + 48)];
    sub_23F383004(v32, v34, &qword_256E70D00);
    v35 = (uint64_t)v69;
    v36 = (uint64_t)v69 + *(int *)(v33 + 48);
    v85 = v28;
    *v69 = v28;
    sub_23F383004(v34, v36, &qword_256E70D00);
    sub_23F383004(v35, (uint64_t)v30, &qword_256E70D08);
    v86 = *v30;
    v37 = (uint64_t)v30 + *(int *)(v33 + 48);
    v38 = *(int *)(v5 + 48);
    v40 = *(_QWORD *)(v37 + v38);
    v39 = *(_QWORD *)(v37 + v38 + 8);
    v41 = v74;
    v42 = *(int *)(v75 + 64);
    v43 = (uint64_t *)(v74 + v38);
    sub_23F362600(v37, v74, type metadata accessor for DynamicEnumeration.Case);
    v89 = v40;
    *v43 = v40;
    v43[1] = v39;
    v44 = v86 + 1;
    if (__OFADD__(v86, 1))
      goto LABEL_17;
    v45 = v87;
    v86 = (char *)v87 + v42;
    v90 = v44;
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F61CC1C();
    sub_23F3A7268();
    v82 = v47;
    v83 = v46;
    swift_bridgeObjectRelease();
    v48 = v41;
    v49 = v64;
    v50 = (_QWORD *)(v64 + *(int *)(v5 + 48));
    sub_23F362600(v48, v64, type metadata accessor for DynamicEnumeration.Case);
    *v50 = v89;
    v50[1] = v39;
    sub_23F617BA0();
    sub_23F3663AC(v49, type metadata accessor for DynamicEnumeration.Case);
    v51 = (_QWORD *)(v49 + *(int *)(v5 + 48));
    sub_23F36262C(v48, v49, type metadata accessor for DynamicEnumeration.Case);
    v52 = *v43;
    v53 = v43[1];
    swift_bridgeObjectRelease();
    *v51 = v52;
    v51[1] = v53;
    v54 = v49 + *(int *)(v67 + 20);
    v55 = sub_23F617D08();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v86, v54, v55);
    sub_23F3663AC(v49, type metadata accessor for DynamicEnumeration.Case);
    v56 = v82;
    *v45 = v83;
    v45[1] = v56;
    v57 = (uint64_t)v88;
    v45[2] = v89;
    v45[3] = v39;
    sub_23F3625D8(v57, &qword_256E70D08);
    v58 = v92;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23F37BAC4();
      v58 = v92;
    }
    v59 = v66;
    v61 = v84;
    v60 = v85;
    v62 = *(_QWORD *)(v58 + 16);
    v5 = v65;
    if (v62 >= *(_QWORD *)(v58 + 24) >> 1)
    {
      sub_23F37BAC4();
      v58 = v92;
    }
    *(_QWORD *)(v58 + 16) = v62 + 1;
    sub_23F383004((uint64_t)v87, v58+ ((*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80))+ *(_QWORD *)(v68 + 72) * v62, &qword_256E704F0);
    v24 = v61 + 2;
    v23 = v60 + 1;
    v4 = v59;
    if ((v91 & 1) != 0)
      goto LABEL_14;
  }
  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  __break(1u);
}

uint64_t sub_23F3A6AB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, uint64_t, uint64_t);
  NSObject *v16;
  os_log_type_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  os_log_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  _QWORD v33[2];
  os_log_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v6 = sub_23F6184B8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v33 - v11;
  v41 = sub_23F619E98();
  v39 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v14 = (char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F619088();
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v15(v12, a2, v6);
  v40 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v15;
  v15(v10, a1, v6);
  v16 = sub_23F619E8C();
  v17 = sub_23F61C628();
  v18 = v17;
  if (os_log_type_enabled(v16, v17))
  {
    v19 = swift_slowAlloc();
    v38 = a2;
    v20 = v19;
    v36 = swift_slowAlloc();
    v43 = v36;
    *(_DWORD *)v20 = 136315394;
    v33[1] = v20 + 4;
    sub_23F3B121C(&qword_256E70CC8, (void (*)(uint64_t))MEMORY[0x24BE549B8]);
    v37 = a3;
    v35 = v18;
    v21 = sub_23F61CC1C();
    sub_23F37AE00(v21, v22, &v43);
    v42 = v23;
    v34 = v16;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    v24 = *(void (**)(char *, uint64_t))(v7 + 8);
    v24(v12, v6);
    *(_WORD *)(v20 + 12) = 2080;
    a3 = v37;
    v25 = sub_23F61CC1C();
    sub_23F37AE00(v25, v26, &v43);
    v42 = v27;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    v24(v10, v6);
    v28 = v34;
    _os_log_impl(&dword_23F35A000, v34, (os_log_type_t)v35, "❗️ Folding enum cases, but identifier has already been seen.\nTaking new value: %s\nover old value: %s", (uint8_t *)v20, 0x16u);
    v29 = v36;
    swift_arrayDestroy();
    MEMORY[0x242670B70](v29, -1, -1);
    v30 = v20;
    a2 = v38;
    MEMORY[0x242670B70](v30, -1, -1);

  }
  else
  {
    v31 = *(void (**)(char *, uint64_t))(v7 + 8);
    v31(v12, v6);
    v31(v10, v6);

  }
  (*(void (**)(char *, uint64_t))(v39 + 8))(v14, v41);
  return v40(a3, a2, v6);
}

uint64_t sub_23F3A6DBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  if (*(_QWORD *)(a1 + 16))
  {
    sub_23F35D2E8(&qword_256E70CC0);
    v3 = sub_23F61CA90();
  }
  else
  {
    v3 = MEMORY[0x24BEE4B00];
  }
  v6 = v3;
  sub_23F3ACF68(a1, 1, (uint64_t)&v6);
  v4 = v6;
  if (v1)
    swift_release();
  return v4;
}

uint64_t sub_23F3A6E48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;

  v2 = sub_23F3A575C();
  v4 = v3;
  v5 = sub_23F3B1AC4();
  sub_23F3A4DC4(v5, v6, v7, v8, v9, v10, v11, v12, v16, v17, v18, v19, v20, v21, v23, v25, v27, v29, v31, v33);
  if ((v36 & 1) != 0)
  {
    result = sub_23F362C60();
    *(_QWORD *)a1 = v22;
    *(_QWORD *)(a1 + 8) = v24;
    *(_QWORD *)(a1 + 16) = v26;
    *(_QWORD *)(a1 + 24) = v28;
    *(_QWORD *)(a1 + 32) = v30;
    *(_QWORD *)(a1 + 40) = v32;
    *(_QWORD *)(a1 + 48) = v34;
    *(_QWORD *)(a1 + 56) = v35;
    *(_BYTE *)(a1 + 64) = 1;
  }
  else
  {
    sub_23F384B00();
    swift_bridgeObjectRetain_n();
    v14 = sub_23F3B13CC(MEMORY[0x24BEE4B08], v2, v4);
    sub_23F369004(v14);
    *(_QWORD *)a1 = v2;
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = v15;
    *(_QWORD *)(a1 + 24) = v28;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_BYTE *)(a1 + 64) = 0;
    sub_23F39BA98(v22, v24, v26, v28, v30, v32, v34, v35, 0);
    return sub_23F362C60();
  }
  return result;
}

uint64_t sub_23F3A6F58()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int v11;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  os_log_type_t v19;
  uint8_t *v20;
  os_log_t v22;
  uint64_t v23;

  v23 = sub_23F619E98();
  v0 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v2 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23F61BD28();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F61B9EC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F61BC68();
  v11 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v10, v7);
  if (v11 == *MEMORY[0x24BEB9D18] || v11 == *MEMORY[0x24BEB9D00])
  {
    (*(void (**)(char *, uint64_t))(v8 + 96))(v10, v7);
    swift_release();
    sub_23F61BC74();
    v13 = sub_23F61BD1C();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else if (v11 == *MEMORY[0x24BEB9CF8])
  {
    (*(void (**)(char *, uint64_t))(v8 + 96))(v10, v7);
    v13 = *(_QWORD *)(*(_QWORD *)v10 + 32);
    sub_23F617BA0();
    swift_release();
  }
  else
  {
    sub_23F619088();
    v14 = sub_23F619E8C();
    v15 = sub_23F61C628();
    v22 = v14;
    v16 = v14;
    v17 = v15;
    if (os_log_type_enabled(v16, v15))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      v19 = v17;
      v20 = v18;
      _os_log_impl(&dword_23F35A000, v22, v19, "Unsupported EnumerationDefinition.identifier type found", v18, 2u);
      MEMORY[0x242670B70](v20, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v0 + 8))(v2, v23);
    sub_23F61BC74();
    v13 = sub_23F61BD1C();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return v13;
}

void sub_23F3A71E8(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F61BD04();
  sub_23F61C1D8();
  sub_23F362984();
  sub_23F3A7268();
  v3 = v2;
  v5 = v4;
  sub_23F362C60();
  sub_23F383E5C();
  v6 = sub_23F3B13CC(MEMORY[0x24BEE4B08], v3, v5);
  sub_23F369004(v6);
  *a1 = v3;
  a1[1] = v5;
  sub_23F3B1438(v7);
  sub_23F3B16F4();
}

void sub_23F3A7268()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  sub_23F362ABC();
  sub_23F3B1CE4();
  sub_23F389AF8();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F3B1F34();
  sub_23F35D2E8(&qword_256E70C98);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F383EC4();
  sub_23F3668F4();
  sub_23F3EEEA4(1);
  sub_23F6186B0();
  sub_23F3B0C8C();
  sub_23F3B1B50(&qword_256E70CA8);
  sub_23F61C058();
  sub_23F383CA8(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  swift_bridgeObjectRelease();
  v5 = sub_23F35D2E8(&qword_256E70CB0);
  v6 = sub_23F36195C(v0, 1, v5);
  sub_23F3625D8(v0, &qword_256E70C98);
  if (v6 == 1)
    sub_23F3668F4();
  else
    sub_23F61C280();
  sub_23F362948();
}

void sub_23F3A73D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  int v49;
  _BOOL8 v50;
  _DWORD *v51;
  _DWORD *v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(uint64_t, _QWORD);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  _BOOL8 v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void (*v102)(uint64_t *, _QWORD, uint64_t);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t (*v110)(uint64_t, uint64_t, uint64_t);
  uint64_t *v111;
  uint64_t v112;
  unint64_t v113;
  char v114;
  uint64_t v115;
  _BOOL8 v116;
  unint64_t v117;
  char v118;
  char v119;
  unint64_t v120;
  char v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  BOOL v125;
  uint64_t v126;
  uint64_t (*v127)(uint64_t, _QWORD);
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t *v163;
  _QWORD *v164;
  uint64_t *v165;
  uint64_t v166;
  uint64_t *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  unint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char v182;
  uint64_t *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  unsigned __int8 v191;
  uint64_t v192[2];
  uint64_t v193;
  uint64_t v194;
  uint64_t v195[3];
  uint64_t v196;
  uint64_t v197;

  sub_23F362ABC();
  v180 = v0;
  v179 = v3;
  v178 = v4;
  v6 = v5;
  v152 = v7;
  v8 = sub_23F6184B8();
  sub_23F383E7C(v8, (uint64_t)&v196);
  v149 = v9;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F3834D0();
  v166 = v11;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v12);
  v165 = (uint64_t *)((char *)&v149 - v13);
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v14);
  sub_23F383780();
  sub_23F384990(v15);
  v16 = sub_23F35D2E8(&qword_256E704F0);
  sub_23F383E7C(v16, (uint64_t)&v194);
  v153 = v17;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v18);
  sub_23F3834D0();
  v164 = v19;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F3838E4();
  v163 = v21;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v22);
  sub_23F383780();
  v24 = sub_23F3B13F0(v23);
  v172 = *(_QWORD *)(type metadata accessor for DynamicEnumeration.Case(v24) - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v25);
  sub_23F36285C();
  v27 = sub_23F3B13F0(v26);
  v28 = type metadata accessor for DynamicEnumeration(v27);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v29);
  sub_23F3B1590();
  v30 = sub_23F3B1728();
  sub_23F383E7C(v30, (uint64_t)&v193);
  v162 = v31;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v32);
  v34 = (uint64_t *)sub_23F3B1E50((uint64_t)&v149 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v35);
  sub_23F3B17A4();
  if (qword_256E6EE90 != -1)
    goto LABEL_49;
  while (1)
  {
    v36 = sub_23F361498((uint64_t)v34, (uint64_t)qword_256E7FE90);
    sub_23F3B1450();
    sub_23F362600(v36, v2, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
    sub_23F35D2E8(&qword_256E70CB8);
    sub_23F617C48();
    v37 = (uint64_t)v183;
    sub_23F3663AC(v2, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
    v38 = *(_QWORD *)&v6[*(int *)(v28 + 20)];
    v2 = sub_23F3EEE90(v37, v38);
    v175 = v39;
    v41 = v40;
    v43 = v42;
    v44 = *(_QWORD *)(v38 + 16);
    sub_23F384324();
    v45 = v43 >> 1;
    v176 = v43 >> 1;
    if (v37 < v44)
    {
      v46 = sub_23F3B1AD0();
      sub_23F3B21EC(v46, v47, type metadata accessor for DynamicEnumeration);
      swift_unknownObjectRetain();
      v48 = sub_23F3B1D6C();
      v49 = sub_23F61C610();
      v50 = os_log_type_enabled(v48, (os_log_type_t)v49);
      if (v50)
      {
        v51 = (_DWORD *)sub_23F366668();
        *v51 = 134218240;
        if (!__OFSUB__(v176, v41))
        {
          v52 = v51;
          v183 = (uint64_t *)(v176 - v41);
          LODWORD(v161) = v49;
          sub_23F61C790();
          v53 = sub_23F3B2068();
          *((_WORD *)v52 + 6) = 2048;
          v160 = (uint64_t)v52 + 14;
          v54 = *(_QWORD *)(v1 + *(int *)(v28 + 20));
          v55 = v48;
          v56 = *(_QWORD *)(v54 + 16);
          sub_23F3B1960(v53, type metadata accessor for DynamicEnumeration);
          v183 = (uint64_t *)v56;
          sub_23F61C790();
          _os_log_impl(&dword_23F35A000, v55, (os_log_type_t)v161, "Enum cases for dynamic enumeration truncated to first %ld out of %ld cases", (uint8_t *)v52, 0x16u);
          sub_23F366530();
        }
        goto LABEL_52;
      }
      sub_23F3B1960(v50, type metadata accessor for DynamicEnumeration);

      sub_23F3B2068();
      v57 = sub_23F3B1DA0();
      sub_23F3841CC(v57, v58);
      v45 = v176;
    }
    v150 = v43;
    v59 = v180;
    v60 = *(_QWORD *)(v180 + 64);
    v61 = *(_QWORD *)(v180 + 72);
    sub_23F3B1424((_QWORD *)(v180 + 40), v60);
    (*(void (**)(uint64_t **__return_ptr, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 24))(&v183, v6, v178, v179, v60, v61);
    v62 = (uint64_t)v183;
    v160 = v184;
    v159 = v185;
    v158 = v186;
    v157 = v187;
    v156 = v188;
    v155 = v189;
    v154 = v190;
    LODWORD(v162) = v191;
    sub_23F382FC4(v59, (uint64_t)v195);
    v1 = v45 - v41;
    if (__OFSUB__(v45, v41))
      break;
    v34 = (uint64_t *)MEMORY[0x24BEE4AF8];
    v161 = v2;
    v151 = v62;
    if (v1)
    {
      v192[0] = MEMORY[0x24BEE4AF8];
      v34 = v192;
      sub_23F3B2254(v63, v1 & ~(v1 >> 63));
      if (v1 < 0)
        goto LABEL_51;
      v6 = 0;
      v169 = v41;
      v168 = v45 - v41;
      while (1)
      {
        v64 = v6 + 1;
        if (__OFADD__(v6, 1))
          break;
        if ((uint64_t)&v6[v41] >= v45 || (uint64_t)v6 >= v1)
          goto LABEL_46;
        v66 = v171;
        sub_23F362600(v175 + *(_QWORD *)(v172 + 72) * (_QWORD)&v6[v41], v171, type metadata accessor for DynamicEnumeration.Case);
        v67 = v196;
        v68 = v197;
        sub_23F3B1424(v195, v196);
        (*(void (**)(uint64_t **__return_ptr, uint64_t, uint64_t, uint64_t))(v68 + 8))(&v183, v66, v67, v68);
        sub_23F3663AC(v66, type metadata accessor for DynamicEnumeration.Case);
        v28 = (uint64_t)v183;
        v69 = v184;
        v2 = v185;
        v70 = v187;
        v180 = v186;
        v71 = v188;
        v179 = v189;
        v178 = v190;
        LODWORD(v177) = v191;
        v34 = (uint64_t *)v192[0];
        if ((sub_23F3B1CDC() & 1) == 0)
        {
          sub_23F3B1F7C(0, v34[2] + 1);
          v34 = (uint64_t *)v192[0];
        }
        v73 = v34[2];
        v72 = v34[3];
        if (v73 >= v72 >> 1)
        {
          v77 = sub_23F3B1A80(v72);
          sub_23F3B1F7C(v77, v73 + 1);
          v34 = (uint64_t *)v192[0];
        }
        v34[2] = v73 + 1;
        v74 = &v34[9 * v73];
        v74[4] = v28;
        v74[5] = v69;
        v75 = v180;
        v74[6] = v2;
        v74[7] = v75;
        v74[8] = v70;
        v74[9] = v71;
        v76 = v178;
        v74[10] = v179;
        v74[11] = v76;
        *((_BYTE *)v74 + 96) = v177;
        ++v6;
        v1 = v168;
        v41 = v169;
        v45 = v176;
        if (v64 == (char *)v168)
        {
          v2 = v161;
          v62 = v151;
          goto LABEL_23;
        }
      }
      __break(1u);
LABEL_46:
      __break(1u);
    }
    else
    {
LABEL_23:
      v78 = v153;
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v195);
      v79 = sub_23F5250A0((uint64_t)v34);
      v81 = v80;
      v82 = sub_23F362984();
      if ((v81 & 1) != 0)
      {
        v79 = v79;
        v180 = v79;
        goto LABEL_38;
      }
      v83 = sub_23F3668F4();
      sub_23F39E898(v83);
      v195[0] = v2;
      v195[1] = v175;
      v195[2] = v41;
      v196 = v150;
      v197 = v84;
      swift_unknownObjectRetain();
      sub_23F3A64F8(v195);
      v86 = v85;
      sub_23F362984();
      sub_23F3B2068();
      sub_23F3B0CFC(v79, 0);
      sub_23F3B1860();
      sub_23F3B121C(&qword_256E6FCF0, (void (*)(uint64_t))MEMORY[0x24BE549B8]);
      v180 = sub_23F61BFEC();
      v87 = *(_QWORD *)(v86 + 16);
      if (!v87)
      {
LABEL_37:
        v183 = (uint64_t *)v86;
        sub_23F3A80F0((uint64_t *)&v183, v192);
        v82 = sub_23F362D08();
        v79 = v192[0];
LABEL_38:
        if ((v162 & 1) != 0)
        {
          v82 = sub_23F3B0CFC(v79, v81 & 1);
          v128 = 0;
          v129 = 0;
          v130 = v62;
          goto LABEL_42;
        }
        v183 = (uint64_t *)v62;
        v184 = v160;
        v185 = v159;
        v186 = v158;
        v187 = v157;
        v188 = v156;
        v189 = v155;
        v190 = v154;
        if ((v81 & 1) != 0)
        {
          v128 = 0;
          v129 = 0;
          v130 = v79;
LABEL_42:
          v131 = 1;
        }
        else
        {
          v181 = v79;
          v132 = sub_23F3B17DC();
          sub_23F39B9D8(v132, v133, v134, v135, v136, v137, v138, v139, v149);
          sub_23F3B0D54(v79, 0);
          sub_23F3A8368((unint64_t *)&v183, v192);
          sub_23F3B1860();
          v140 = sub_23F3B17DC();
          sub_23F39BA98(v140, v141, v142, v143, v144, v145, v146, v147, v151);
          v82 = sub_23F3B1860();
          v131 = 0;
          v130 = v192[0];
          v128 = v192[1];
          v129 = v193;
        }
        v148 = v180;
        v181 = v180;
        v182 = v81 & 1;
        MEMORY[0x24BDAC7A8](v82);
        sub_23F3A8518((void (*)(_OWORD *__return_ptr, _QWORD *))sub_23F3B1078, v130, v128, v129, v131, (uint64_t)v192);
        sub_23F3B0CFC(v148, v81 & 1);
        sub_23F3B1080(v130, v128, v129, v131);
        sub_23F39FB88((uint64_t)v192, v152);
        sub_23F39BA98(v62, v160, v159, v158, v157, v156, v155, v154, v162);
        swift_unknownObjectRelease();
        sub_23F3B10B0((uint64_t)v192);
        sub_23F362948();
        return;
      }
      LODWORD(v153) = v81;
      v88 = v86 + ((*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80));
      LODWORD(v171) = *MEMORY[0x24BE54960];
      LODWORD(v169) = *MEMORY[0x24BE54918];
      v168 = *(_QWORD *)(v78 + 72);
      v150 = v86;
      sub_23F389CDC();
      v89 = v149;
      v1 = v173;
      v90 = v167;
      while (1)
      {
        v176 = v87;
        v175 = v88;
        sub_23F382EF8(v88, (uint64_t)v90, &qword_256E704F0);
        v91 = sub_23F36682C();
        v92 = *(int *)(v170 + 64);
        v93 = v163;
        v94 = (uint64_t)v163 + v92;
        v95 = (_QWORD *)v1;
        v96 = (uint64_t)v90 + v92;
        v177 = (uint64_t)v90 + v92;
        v97 = *v90;
        v98 = v90[1];
        *v163 = *v90;
        v93[1] = v98;
        v179 = v90[2];
        v178 = v90[3];
        v99 = v178;
        v93[2] = v179;
        v93[3] = v99;
        v100 = sub_23F617D08();
        v101 = *(_QWORD *)(v100 - 8);
        v172 = v94;
        sub_23F3B1E9C(v94, v96);
        *(_QWORD *)(v91 + 16) = v97;
        *(_QWORD *)(v91 + 24) = v98;
        *v95 = v91;
        v102 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v89 + 104);
        v102(v95, v171, v174);
        v103 = swift_allocBox();
        v105 = v104;
        v106 = v164;
        v107 = (uint64_t)v164 + *(int *)(v170 + 64);
        *v164 = v97;
        v106[1] = v98;
        v108 = v178;
        v106[2] = v179;
        v106[3] = v108;
        v109 = v174;
        sub_23F3B1E9C(v107, v177);
        v178 = v101;
        v110 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v101 + 32);
        v2 = v109;
        v179 = v100;
        sub_23F384840(v105, v107, v110);
        v111 = v165;
        *v165 = v103;
        v102(v111, v169, v2);
        v6 = *(char **)(v89 + 32);
        v112 = v166;
        ((void (*)(uint64_t, uint64_t *, uint64_t))v6)(v166, v111, v2);
        sub_23F383EB0();
        v34 = (uint64_t *)v180;
        v1 = sub_23F3B1CDC();
        v183 = v34;
        sub_23F375424();
        v115 = v34[2];
        v116 = (v114 & 1) == 0;
        v28 = v115 + v116;
        if (__OFADD__(v115, v116))
          break;
        v117 = v113;
        v118 = v114;
        sub_23F35D2E8(&qword_256E70428);
        v119 = sub_23F61CA18();
        v1 = v173;
        if ((v119 & 1) != 0)
        {
          sub_23F375424();
          if ((v118 & 1) != (v121 & 1))
            goto LABEL_53;
          v117 = v120;
        }
        v34 = v183;
        if ((v118 & 1) != 0)
        {
          sub_23F384918(v183[7] + *(_QWORD *)(v89 + 72) * v117, v112, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v89 + 40));
        }
        else
        {
          sub_23F384B78((uint64_t)&v183[v117 >> 6]);
          v122 = *(_QWORD *)(v89 + 72) * v117;
          sub_23F384918(v123 + v122, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v89 + 16));
          ((void (*)(uint64_t, uint64_t, uint64_t))v6)(v34[7] + v122, v112, v2);
          v124 = v34[2];
          v125 = __OFADD__(v124, 1);
          v126 = v124 + 1;
          if (v125)
            goto LABEL_48;
          v34[2] = v126;
        }
        v180 = (uint64_t)v183;
        swift_bridgeObjectRelease();
        sub_23F362A28(v1, *(uint64_t (**)(uint64_t, uint64_t))(v89 + 8));
        sub_23F384430();
        sub_23F3841CC(v172, v127);
        v90 = v167;
        sub_23F3625D8((uint64_t)v167, &qword_256E704F0);
        v88 = v175 + v168;
        v87 = v176 - 1;
        if (v176 == 1)
        {
          v86 = v150;
          sub_23F362D08();
          v62 = v151;
          LOBYTE(v81) = v153;
          goto LABEL_37;
        }
      }
    }
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    swift_once();
  }
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  sub_23F61CC94();
  __break(1u);
}

uint64_t sub_23F3A80F0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t result;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  _QWORD *v32;

  v4 = sub_23F35D2E8(&qword_256E704F0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  v9 = *(_QWORD *)(*a1 + 16);
  v10 = MEMORY[0x24BEE4AF8];
  if (v9)
  {
    v28 = a2;
    v32 = (_QWORD *)MEMORY[0x24BEE4AF8];
    sub_23F37B47C();
    v11 = v8 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v29 = *(_QWORD *)(v5 + 72);
    v12 = v32;
    do
    {
      sub_23F382EF8(v11, (uint64_t)v7, &qword_256E704F0);
      v30 = 538976288;
      v31 = 0xE400000000000000;
      sub_23F61C280();
      sub_23F61C280();
      sub_23F61C280();
      sub_23F61C280();
      v13 = v30;
      v14 = v31;
      sub_23F3625D8((uint64_t)v7, &qword_256E704F0);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F37B47C();
        v12 = v32;
      }
      v15 = v12[2];
      v16 = v15 + 1;
      if (v15 >= v12[3] >> 1)
      {
        sub_23F37B47C();
        v12 = v32;
      }
      v12[2] = v16;
      v17 = &v12[2 * v15];
      v17[4] = v13;
      v17[5] = v14;
      v11 += v29;
      --v9;
    }
    while (v9);
    v10 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v16 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
    if (!v16)
    {
      v18 = MEMORY[0x24BEE4AF8];
      result = swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    v28 = a2;
    v12 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v30 = v10;
  sub_23F37B910();
  v18 = v30;
  v19 = v12 + 5;
  v20 = MEMORY[0x24BEE4B08];
  do
  {
    v22 = *(v19 - 1);
    v21 = *v19;
    v30 = v18;
    v24 = *(_QWORD *)(v18 + 16);
    v23 = *(_QWORD *)(v18 + 24);
    sub_23F617BA0();
    if (v24 >= v23 >> 1)
    {
      sub_23F37B910();
      v18 = v30;
    }
    v19 += 2;
    *(_QWORD *)(v18 + 16) = v24 + 1;
    v25 = (_QWORD *)(v18 + 24 * v24);
    v25[4] = v22;
    v25[5] = v21;
    v25[6] = v20;
    --v16;
  }
  while (v16);
  result = swift_bridgeObjectRelease();
  a2 = v28;
LABEL_16:
  *a2 = v18;
  return result;
}

uint64_t sub_23F3A8368@<X0>(unint64_t *a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t inited;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;

  sub_23F35D2E8(&qword_256E6FD50);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23F61E7E0;
  v21 = MEMORY[0x24BEE4B08];
  sub_23F35D2E8(&qword_256E70898);
  sub_23F61C55C();
  sub_23F61C55C();
  sub_23F61C280();
  v5 = *a1;
  v6 = a1[1];
  v7 = a1[2];
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F528350(0, 0xE000000000000000, v21, v5, v6, v7);
  v9 = v8;
  v11 = v10;
  v13 = v12;
  swift_bridgeObjectRelease();
  sub_23F617BA0();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23F61C280();
  *(_QWORD *)(inited + 32) = v9;
  *(_QWORD *)(inited + 40) = v11;
  *(_QWORD *)(inited + 48) = v13;
  sub_23F617BA0();
  sub_23F386BC4();
  sub_23F3B79EC(0xAuLL, 0xE100000000000000, (_QWORD *)inited);
  v15 = v14;
  v17 = v16;
  v19 = v18;
  result = swift_bridgeObjectRelease();
  *a2 = v15;
  a2[1] = v17;
  a2[2] = v19;
  return result;
}

void sub_23F3A8518(void (*a1)(_OWORD *__return_ptr, _QWORD *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, char a5@<W5>, uint64_t a6@<X8>)
{
  __int128 v8;
  __int128 v9;
  char v10;
  _QWORD v11[3];
  _OWORD v12[2];
  char v13;

  if ((a5 & 1) != 0)
  {
    v8 = 0uLL;
    v9 = a2;
    v10 = 1;
  }
  else
  {
    v11[0] = a2;
    v11[1] = a3;
    v11[2] = a4;
    sub_23F617BA0();
    sub_23F362CDC();
    a1(v12, v11);
    sub_23F362C60();
    sub_23F362D08();
    v9 = v12[0];
    v8 = v12[1];
    v10 = v13;
  }
  *(_OWORD *)a6 = v9;
  *(_OWORD *)(a6 + 16) = v8;
  *(_BYTE *)(a6 + 32) = v10;
  sub_23F3B1B14();
}

_QWORD *sub_23F3A85A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *result;
  _BYTE v10[136];
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_23F3B1424((_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 64));
  v3 = sub_23F3B2088();
  v4(v3);
  v5 = v12;
  v6 = v13;
  sub_23F3B2088();
  sub_23F3A73D8();
  v7 = v14;
  if ((v19 & 1) != 0)
  {
    sub_23F39BA98(v11, v12, v13, v14, v15, v16, v17, v18, v19);
    v10[0] = v11;
    sub_23F3B0DA4((uint64_t)v10);
    sub_23F383004((uint64_t)v10, (uint64_t)&v11, &qword_256E70CF8);
    sub_23F3B0DB0((uint64_t)&v11);
    sub_23F383004((uint64_t)&v11, (uint64_t)v10, &qword_256E70CF8);
    result = (_QWORD *)nullsub_1(v10, v8);
    *(_QWORD *)a1 = *(unsigned __int8 *)result;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_QWORD *)(a1 + 56) = 0;
    *(_BYTE *)(a1 + 64) = 1;
  }
  else
  {
    v19 = v11;
    v20 = v12;
    v21 = v13;
    v22 = v14;
    v23 = v15;
    v24 = v16;
    v25 = v17;
    v26 = v18;
    *(_QWORD *)a1 = v11;
    *(_QWORD *)(a1 + 8) = v5;
    *(_QWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 24) = v7;
    *(_BYTE *)(a1 + 64) = 0;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    sub_23F617BA0();
    sub_23F3B1EA4();
    sub_23F384A00();
    return sub_23F3B0F00(&v11);
  }
  return result;
}

double sub_23F3A876C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;

  sub_23F3B20E0();
  sub_23F35D2E8(&qword_256E70CE8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F3B1C4C();
  sub_23F61B77C();
  v5 = sub_23F3B1F5C();
  v6 = sub_23F383740(v2, 1, v5);
  if (v7)
  {
    sub_23F3B2238(v6, &qword_256E70CE8);
    v1 = 0;
    v3 = 0xE000000000000000;
  }
  else
  {
    sub_23F3B1E00();
    sub_23F3B20EC();
    v8 = sub_23F3B2118();
    sub_23F383CA8(v8, v9);
  }
  sub_23F362CDC();
  v10 = sub_23F3B13CC(MEMORY[0x24BEE4B08], v1, v3);
  sub_23F369004(v10);
  *v0 = v1;
  v0[1] = v3;
  return sub_23F3B1438(v11);
}

void sub_23F3A883C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[4];
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;

  sub_23F3A8984();
  v5 = v23[0];
  v6 = v23[2];
  v7 = v24;
  v17 = v25;
  v18 = v26;
  v19 = v27;
  v20 = v28;
  v21 = v23[1];
  v8 = v29;
  sub_23F382EF8(v2, (uint64_t)v23, &qword_256E70CE0);
  if (v24)
  {
    sub_23F35EA9C(v23, v24);
    sub_23F415994(a1, v22);
    v10 = v22[0];
    v9 = v22[1];
    v12 = v22[2];
    v11 = v22[3];
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v23);
  }
  else
  {
    sub_23F3625D8((uint64_t)v23, &qword_256E70CE0);
    v10 = 0;
    v9 = 0;
    v12 = 0;
    v11 = 0;
  }
  v13 = v5;
  if ((v8 & 1) != 0)
  {
    sub_23F39BB1C(v10, v9);
    v10 = v17;
    v9 = v18;
    v12 = v19;
    v11 = v20;
    v14 = v21;
  }
  else
  {
    sub_23F383E5C();
    v14 = v21;
    sub_23F389CDC();
    sub_23F362CDC();
    v15 = sub_23F38422C();
    sub_23F39BA98(v15, v16, v6, v7, v17, v18, v19, v20, 0);
  }
  *(_QWORD *)a2 = v13;
  *(_QWORD *)(a2 + 8) = v14;
  *(_QWORD *)(a2 + 16) = v6;
  *(_QWORD *)(a2 + 24) = v7;
  *(_QWORD *)(a2 + 32) = v10;
  *(_QWORD *)(a2 + 40) = v9;
  *(_QWORD *)(a2 + 48) = v12;
  *(_QWORD *)(a2 + 56) = v11;
  *(_BYTE *)(a2 + 64) = v8;
}

void sub_23F3A8984()
{
  uint64_t v0;
  unsigned __int8 *v1;
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[48];

  sub_23F362ABC();
  v6 = v5;
  v8 = v7;
  sub_23F3B1728();
  sub_23F3B2164();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F3B1630();
  v10 = sub_23F61B9BC();
  sub_23F3B1DC8();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F362930();
  sub_23F362D94((uint64_t)v1, v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  v12 = (*(uint64_t (**)(unsigned __int8 *, uint64_t))(v3 + 88))(v1, v10);
  if (v12 == *MEMORY[0x24BEB9C48])
  {
    sub_23F383E64((uint64_t)v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 96));
    v13 = *v1;
    if (v13 != 22)
    {
      sub_23F61C8E0();
      swift_bridgeObjectRelease();
      LOBYTE(v37) = v13;
      sub_23F61C16C();
      sub_23F61C280();
      sub_23F362D08();
      sub_23F362CDC();
      v18 = sub_23F3B13CC(MEMORY[0x24BEE4B08], 0x6D6572757361654DLL, 0xEF74696E55746E65);
      sub_23F369004(v18);
      *v8 = 0x6D6572757361654DLL;
      v8[1] = 0xEF74696E55746E65;
LABEL_36:
      sub_23F3B1438(v15);
      goto LABEL_37;
    }
    v14 = sub_23F3B13CC(MEMORY[0x24BEE4B08], 0x6D6572757361654DLL, 0xEB00000000746E65);
    sub_23F369004(v14);
    v16 = xmmword_23F61EC80;
LABEL_35:
    *(_OWORD *)v8 = v16;
    goto LABEL_36;
  }
  if (v12 == *MEMORY[0x24BEB9CA8])
  {
    v17 = sub_23F3B13CC(MEMORY[0x24BEE4B08], 1701736270, 0xE400000000000000);
    sub_23F369004(v17);
    v16 = xmmword_23F61EC70;
    goto LABEL_35;
  }
  if (v12 == *MEMORY[0x24BEB9C90])
  {
    v19 = sub_23F3B13CC(MEMORY[0x24BEE4B08], 1819242338, 0xE400000000000000);
    sub_23F369004(v19);
    v16 = xmmword_23F61EC60;
    goto LABEL_35;
  }
  if (v12 == *MEMORY[0x24BEB9C80])
  {
    v20 = sub_23F3B13CC(MEMORY[0x24BEE4B08], 7630441, 0xE300000000000000);
    sub_23F369004(v20);
    v16 = xmmword_23F61EC50;
    goto LABEL_35;
  }
  if (v12 == *MEMORY[0x24BEB9CB0] || v12 == *MEMORY[0x24BEB9CC8])
  {
    v22 = sub_23F3B13CC(MEMORY[0x24BEE4B08], 0x74616F6C66, 0xE500000000000000);
    sub_23F369004(v22);
    v16 = xmmword_23F61EC40;
    goto LABEL_35;
  }
  if (v12 == *MEMORY[0x24BEB9CC0])
    goto LABEL_18;
  if (v12 == *MEMORY[0x24BEB9C98])
  {
    v24 = sub_23F3B13CC(MEMORY[0x24BEE4B08], 1702125892, 0xE400000000000000);
    sub_23F369004(v24);
    v16 = xmmword_23F61EC20;
    goto LABEL_35;
  }
  if (v12 == *MEMORY[0x24BEB9C60])
  {
    v25 = sub_23F3B13CC(MEMORY[0x24BEE4B08], 0x706D6F4365746144, 0xEE0073746E656E6FLL);
    sub_23F369004(v25);
    v16 = xmmword_23F61EC10;
    goto LABEL_35;
  }
  if (v12 == *MEMORY[0x24BEB9C88])
  {
    v26 = sub_23F3B13CC(MEMORY[0x24BEE4B08], 5001813, 0xE300000000000000);
    sub_23F369004(v26);
    v16 = xmmword_23F61EC00;
    goto LABEL_35;
  }
  if (v12 == *MEMORY[0x24BEB9C70] || v12 == *MEMORY[0x24BEB9C58])
  {
LABEL_18:
    v23 = sub_23F3B13CC(MEMORY[0x24BEE4B08], 7500915, 0xE300000000000000);
    sub_23F369004(v23);
    v16 = xmmword_23F61EC30;
    goto LABEL_35;
  }
  if (v12 == *MEMORY[0x24BEB9CD0])
  {
    v28 = sub_23F3B13CC(MEMORY[0x24BEE4B08], 0x6D6563616C504C43, 0xEB000000006B7261);
    sub_23F369004(v28);
    v16 = xmmword_23F61EBF0;
    goto LABEL_35;
  }
  if (v12 == *MEMORY[0x24BEB9CB8])
  {
    v29 = sub_23F3B13CC(MEMORY[0x24BEE4B08], 0x6550746E65746E49, 0xEC0000006E6F7372);
    sub_23F369004(v29);
    v16 = xmmword_23F61EBE0;
    goto LABEL_35;
  }
  if (v12 == *MEMORY[0x24BEB9CA0])
  {
    v30 = sub_23F3B13CC(MEMORY[0x24BEE4B08], 0x6946746E65746E49, 0xEA0000000000656CLL);
    sub_23F369004(v30);
    v16 = xmmword_23F61EBD0;
    goto LABEL_35;
  }
  if (v12 == *MEMORY[0x24BEB9C78])
  {
    v31 = sub_23F3B13CC(MEMORY[0x24BEE4B08], 0xD000000000000011, 0x800000023F634BE0);
    sub_23F369004(v31);
    *v8 = 0xD000000000000011;
    v8[1] = 0x800000023F634BE0;
    goto LABEL_36;
  }
  sub_23F619088();
  sub_23F38F1E8(v0, (uint64_t)v39);
  sub_23F619E8C();
  v32 = sub_23F3B1A04();
  if (os_log_type_enabled(v2, v32))
  {
    v33 = (uint8_t *)sub_23F366668();
    v38 = sub_23F366668();
    *(_DWORD *)v33 = 136315138;
    sub_23F38F1E8((uint64_t)v39, (uint64_t)&v37);
    v34 = sub_23F61C16C();
    sub_23F37AE00(v34, v35, &v38);
    v37 = v36;
    sub_23F61C790();
    sub_23F362984();
    sub_23F38F870((uint64_t)v39);
    sub_23F38485C(&dword_23F35A000, v2, v32, "%s unknown: Unsupported type in action", v33);
    sub_23F3B17D4();
    sub_23F366530();
  }
  sub_23F38F870((uint64_t)v39);

  sub_23F362A28((uint64_t)v2, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_23F3B1EEC();
  sub_23F383E64((uint64_t)v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
LABEL_37:
  sub_23F362948();
}

void sub_23F3A8FF8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;

  sub_23F362ABC();
  v27 = v3;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = sub_23F3B1690();
  sub_23F3B1748();
  MEMORY[0x24BDAC7A8](v11);
  v13 = &v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23F3B1ADC();
  MEMORY[0x24266ECB0](v14);
  sub_23F3B16D0();
  sub_23F383D74((uint64_t)v13, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F3B1DB0();
  if ((v2 & 1) != 0)
  {
    sub_23F3B1FC8(v15);
  }
  else
  {
    *(_QWORD *)v9 = sub_23F3B186C((void (*)(void))MEMORY[0x24BEB97B0], (uint64_t)&unk_250FD0A30, v15);
    *(_QWORD *)(v9 + 8) = v16;
    *(_QWORD *)(v9 + 16) = v17;
    *(_QWORD *)(v9 + 24) = v13;
    *(_QWORD *)(v9 + 32) = v10;
    *(_QWORD *)(v9 + 40) = v5;
    *(_QWORD *)(v9 + 48) = v7;
    *(_QWORD *)(v9 + 56) = v0;
    sub_23F384324();
    v18 = sub_23F3B1D04();
    sub_23F3B1698(v18, v19, v20, v21, v22, v23, v24, v25, v26);
  }
  *(_BYTE *)(v9 + 64) = v2;
  sub_23F362948();
}

uint64_t sub_23F3A90B8()
{
  uint64_t v0;

  sub_23F3A8FF8();
  return sub_23F3B12EC(*(uint64_t (**)(void))(v0 + 8));
}

void sub_23F3A90FC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;

  sub_23F362ABC();
  v27 = v3;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = sub_23F3B1690();
  sub_23F3B1748();
  MEMORY[0x24BDAC7A8](v11);
  v13 = &v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23F3B1ADC();
  MEMORY[0x24266EC44](v14);
  sub_23F3B16D0();
  sub_23F383D74((uint64_t)v13, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F3B1DB0();
  if ((v2 & 1) != 0)
  {
    sub_23F3B1FC8(v15);
  }
  else
  {
    *(_QWORD *)v9 = sub_23F3B186C((void (*)(void))MEMORY[0x24BEB9748], (uint64_t)&unk_250FD0A58, v15);
    *(_QWORD *)(v9 + 8) = v16;
    *(_QWORD *)(v9 + 16) = v17;
    *(_QWORD *)(v9 + 24) = v13;
    *(_QWORD *)(v9 + 32) = v10;
    *(_QWORD *)(v9 + 40) = v5;
    *(_QWORD *)(v9 + 48) = v7;
    *(_QWORD *)(v9 + 56) = v0;
    sub_23F384324();
    v18 = sub_23F3B1D04();
    sub_23F3B1698(v18, v19, v20, v21, v22, v23, v24, v25, v26);
  }
  *(_BYTE *)(v9 + 64) = v2;
  sub_23F362948();
}

uint64_t sub_23F3A91BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  sub_23F35D2E8(&qword_256E70CE8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F3B1C84();
  a5();
  v11 = sub_23F61BC5C();
  if (sub_23F36195C(v6, 1, v11) == 1)
  {
    sub_23F3625D8(v6, &qword_256E70CE8);
    sub_23F35D2E8(&qword_256E70898);
    sub_23F61C55C();
    sub_23F61C55C();
    sub_23F383738();
    sub_23F3B1910();
    sub_23F3B1D2C();
    sub_23F3B1CD0();
    v29 = a2;
  }
  else
  {
    sub_23F61BC2C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v6, v11);
    v12 = sub_23F61C1F0();
    v14 = v13;
    swift_bridgeObjectRelease();
    sub_23F3E3A60(a6);
    v16 = v15;
    sub_23F384324();
    v17 = sub_23F3B60F0(v16, v12, v14);
    swift_bridgeObjectRelease();
    sub_23F369004(v17);
    v19 = v18;
    sub_23F35D2E8(&qword_256E70898);
    sub_23F61C55C();
    sub_23F61C55C();
    sub_23F383738();
    sub_23F3B1910();
    v21 = v20;
    v23 = v22;
    v25 = v24;
    sub_23F3B1CD0();
    sub_23F61C280();
    sub_23F383E5C();
    sub_23F383738();
    sub_23F528350(v21, v23, v25, v12, v14, v19);
    v27 = v26;
    swift_bridgeObjectRelease();
    sub_23F384B00();
    sub_23F3B1CD0();
    v29 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_23F61C280();
  return v29;
}

uint64_t sub_23F3A944C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)(v6 + 184) = a5;
  *(_QWORD *)(v6 + 192) = v5;
  *(_QWORD *)(v6 + 168) = a2;
  *(_QWORD *)(v6 + 176) = a4;
  *(_BYTE *)(v6 + 480) = a3;
  *(_QWORD *)(v6 + 160) = a1;
  v7 = sub_23F3B1728();
  *(_QWORD *)(v6 + 200) = v7;
  *(_QWORD *)(v6 + 208) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 216) = sub_23F366654();
  *(_QWORD *)(v6 + 224) = sub_23F3666CC();
  v8 = sub_23F61B7C4();
  *(_QWORD *)(v6 + 232) = v8;
  *(_QWORD *)(v6 + 240) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v6 + 248) = sub_23F366578();
  v9 = sub_23F61B6E0();
  *(_QWORD *)(v6 + 256) = v9;
  *(_QWORD *)(v6 + 264) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v6 + 272) = sub_23F366578();
  v10 = sub_23F61B710();
  *(_QWORD *)(v6 + 280) = v10;
  *(_QWORD *)(v6 + 288) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v6 + 296) = sub_23F366578();
  v11 = sub_23F3B1690();
  *(_QWORD *)(v6 + 304) = v11;
  *(_QWORD *)(v6 + 312) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v6 + 320) = sub_23F366578();
  v12 = sub_23F61B8A8();
  *(_QWORD *)(v6 + 328) = v12;
  *(_QWORD *)(v6 + 336) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v6 + 344) = sub_23F366654();
  *(_QWORD *)(v6 + 352) = sub_23F3666CC();
  v13 = sub_23F61B92C();
  *(_QWORD *)(v6 + 360) = v13;
  *(_QWORD *)(v6 + 368) = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v6 + 376) = sub_23F366654();
  *(_QWORD *)(v6 + 384) = sub_23F3666CC();
  sub_23F36679C();
  return sub_23F3B15DC();
}

void sub_23F3A9558()
{
  _QWORD *v0;
  os_log_type_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  int v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  NSObject *v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  _BOOL4 v68;
  uint64_t v69;
  uint64_t v70;
  uint8_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v81;
  BOOL v82;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  NSObject *v88;
  os_log_type_t v89;
  _BOOL4 v90;
  uint64_t v91;
  uint8_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  BOOL v105;
  BOOL v106;
  int v108;
  void (*v109)(uint64_t, uint64_t);
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void (*v118)(uint64_t);
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unsigned __int8 v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  void (*v161)(_QWORD, _QWORD);
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  int v188;
  __int128 v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  unint64_t __dst[18];

  v2 = (uint64_t *)v0[48];
  sub_23F38426C((uint64_t)v2, v0[21], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0[46] + 16));
  v3 = sub_23F3840BC();
  v5 = v4(v3);
  if (v5 == *MEMORY[0x24BEB9A00])
  {
    sub_23F3B1CEC();
    v7 = v0[43];
    v6 = (void (*)(uint64_t, uint64_t))v0[44];
    v8 = v0[41];
    v9 = v0[42];
    v10 = v0[24];
    sub_23F3B13E4(v11);
    v177 = *v2;
    v12 = swift_projectBox();
    sub_23F3B1E9C((uint64_t)v6, v12);
    sub_23F3B1424((_QWORD *)(v10 + 40), *(_QWORD *)(v10 + 64));
    sub_23F3AA92C((uint64_t)v6, v13, v14, v15, v16, v17, v18, v19, v157, v158, v160, v162, v163, v165, v167, v170, (uint64_t)(v0 + 44), v177, v178,
      v180);
    v183 = __dst[2];
    v186 = __dst[0];
    v20 = __dst[4];
    v179 = __dst[3];
    v181 = __dst[1];
    v188 = LOBYTE(__dst[8]);
    sub_23F3B1E9C(v7, (uint64_t)v6);
    v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 88))(v7, v8);
    if (v21 == *MEMORY[0x24BEB9928])
    {
      sub_23F3B21D0();
      v22 = __dst[7];
      v23 = __dst[6];
      v24 = __dst[5];
      v25 = __dst[4];
      v26 = __dst[2];
LABEL_17:
      v53 = v173;
LABEL_18:
      v6(*v53, v0[41]);
      v54 = __dst[3];
LABEL_19:
      v55 = v0[20];
      swift_release();
      *(_QWORD *)v55 = __dst[0];
      *(_QWORD *)(v55 + 8) = v181;
      *(_QWORD *)(v55 + 16) = v26;
      *(_QWORD *)(v55 + 24) = v54;
      *(_QWORD *)(v55 + 32) = v25;
      *(_QWORD *)(v55 + 40) = v24;
      *(_QWORD *)(v55 + 48) = v23;
      *(_QWORD *)(v55 + 56) = v22;
      *(_BYTE *)(v55 + 64) = v188;
      goto LABEL_20;
    }
    v48 = v21;
    v22 = __dst[7];
    v25 = __dst[4];
    v26 = __dst[2];
    if (v21 == *MEMORY[0x24BEB9918])
    {
      sub_23F3B21D0();
      v23 = __dst[6];
LABEL_16:
      v24 = __dst[5];
      goto LABEL_17;
    }
    v23 = __dst[6];
    if (v21 == *MEMORY[0x24BEB9948])
    {
      sub_23F3B21D0();
      goto LABEL_16;
    }
    v24 = __dst[5];
    if (v21 == *MEMORY[0x24BEB9960])
    {
      sub_23F3B21D0();
      goto LABEL_17;
    }
    if (v21 == *MEMORY[0x24BEB9958])
    {
      sub_23F3B13E4(v0[42]);
      swift_bridgeObjectRelease();
      v73 = v0[20];
      if ((__dst[8] & 1) != 0)
      {
        v74 = __dst[3];
        v75 = __dst[1];
        *(_QWORD *)v73 = __dst[0];
        *(_QWORD *)(v73 + 8) = v181;
        *(_QWORD *)(v73 + 16) = v183;
        *(_QWORD *)(v73 + 24) = v179;
        *(_QWORD *)(v73 + 32) = v20;
        *(_QWORD *)(v73 + 40) = v24;
        *(_QWORD *)(v73 + 48) = v23;
        *(_QWORD *)(v73 + 56) = v22;
        *(_BYTE *)(v73 + 64) = 1;
      }
      else
      {
        v75 = __dst[1];
        sub_23F383EB0();
        sub_23F384324();
        v94 = sub_23F528430(__dst[0], __dst[1], __dst[2]);
        v96 = v95;
        v175 = v97;
        sub_23F38432C();
        sub_23F384120();
        *(_QWORD *)v73 = v94;
        *(_QWORD *)(v73 + 8) = v96;
        v74 = v179;
        *(_QWORD *)(v73 + 16) = v175;
        *(_QWORD *)(v73 + 24) = v179;
        *(_QWORD *)(v73 + 32) = v25;
        *(_QWORD *)(v73 + 40) = v24;
        *(_QWORD *)(v73 + 48) = v23;
        *(_QWORD *)(v73 + 56) = v22;
        *(_BYTE *)(v73 + 64) = 0;
        sub_23F383E5C();
        sub_23F3B1BF0();
      }
      sub_23F384274(v0[42]);
      sub_23F3B1400(v186, v75, v183, v74, v98, v99, v100, v101, v188);
      goto LABEL_13;
    }
    v82 = v21 == *MEMORY[0x24BEB9930] || v21 == *MEMORY[0x24BEB9900];
    if (!v82 && v21 != *MEMORY[0x24BEB9920])
    {
      v53 = v0 + 43;
      if (v21 == *MEMORY[0x24BEB9908])
      {
LABEL_54:
        v102 = v0[44];
        v103 = v0[41];
        v104 = v0[42];
LABEL_55:
        v6 = *(void (**)(uint64_t, uint64_t))(v104 + 8);
        v6(v102, v103);
        goto LABEL_18;
      }
      if (v21 != *MEMORY[0x24BEB98E8])
      {
        if (v21 == *MEMORY[0x24BEB98F8] || v21 == *MEMORY[0x24BEB98F0])
          goto LABEL_54;
        v105 = v21 == *MEMORY[0x24BEB9968] || v21 == *MEMORY[0x24BEB9950];
        v106 = v105 || v21 == *MEMORY[0x24BEB9938];
        if (!v106 && v21 != *MEMORY[0x24BEB9910])
        {
          v102 = v0[44];
          v103 = v0[41];
          v104 = v0[42];
          if (v48 == *MEMORY[0x24BEB98E0])
            goto LABEL_55;
          v108 = *MEMORY[0x24BEB9940];
          v109 = *(void (**)(uint64_t, uint64_t))(v104 + 8);
          v109(v102, v103);
          v82 = v48 == v108;
          v54 = __dst[3];
          if (v82)
            goto LABEL_19;
          v114 = v0[43];
          v115 = v0[41];
          v116 = v0[20];
          sub_23F3B1400(__dst[0], __dst[1], __dst[2], __dst[3], v110, v111, v112, v113, __dst[8]);
          *(_OWORD *)(v116 + 32) = 0u;
          *(_OWORD *)(v116 + 48) = 0u;
          *(_OWORD *)v116 = 0u;
          *(_OWORD *)(v116 + 16) = 0u;
          *(_BYTE *)(v116 + 64) = 1;
          v109(v114, v115);
LABEL_13:
          swift_release();
          goto LABEL_20;
        }
      }
    }
    v161 = *(void (**)(_QWORD, _QWORD))(v0[42] + 8);
    v161(v0[43], v0[41]);
    v84 = __dst[0];
    v85 = __dst[1];
    v174 = __dst[2];
    if ((__dst[8] & 1) == 0)
    {
      v86 = HIBYTE(__dst[1]) & 0xF;
      if ((__dst[1] & 0x2000000000000000) == 0)
        v86 = __dst[0] & 0xFFFFFFFFFFFFLL;
      if (v86)
      {
        sub_23F528430(__dst[0], __dst[1], __dst[2]);
        sub_23F3B1D2C();
        v174 = v87;
      }
      else
      {
        sub_23F383738();
        sub_23F384324();
        v84 = __dst[0];
        v85 = __dst[1];
        v174 = __dst[2];
      }
      sub_23F617BA0();
      sub_23F3B1BF0();
    }
    v159 = v85;
    v171 = v84;
    v121 = v0[39];
    v122 = v0[40];
    v123 = (_QWORD *)v0[24];
    v166 = v0[23];
    v168 = v0[38];
    v164 = v0[22];
    v125 = v123[3];
    v124 = v123[4];
    sub_23F35EA9C(v123, v125);
    sub_23F61B8CC();
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v124 + 24))(&v192, v122, v164, v166, v125, v124);
    (*(void (**)(uint64_t, uint64_t))(v121 + 8))(v122, v168);
    v130 = v192;
    if ((v200 & 1) != 0)
    {
      v131 = v179;
      v132 = v183;
    }
    else
    {
      v133 = v193;
      v134 = v194;
      v135 = v195;
      v136 = v196;
      v137 = v197;
      v138 = v198;
      v139 = v199;
      v131 = v179;
      v132 = v183;
      if (!v188)
      {
        v169 = v0[20];
        v0[2] = v192;
        v0[3] = v133;
        v0[4] = v134;
        v0[5] = v135;
        v0[6] = v136;
        v0[7] = v137;
        v0[8] = v138;
        v0[9] = v139;
        v0[10] = v171;
        v0[11] = v159;
        v0[12] = v174;
        v0[13] = v179;
        v0[14] = v25;
        v0[15] = v24;
        v0[16] = v23;
        v0[17] = v22;
        memcpy(__dst, v0 + 2, 0x80uLL);
        v145 = sub_23F3B1CF8();
        sub_23F39B9D8(v145, v146, v174, v179, v25, v24, v23, v22, 0);
        sub_23F3AA530(__dst, &__dst[8], v169);
        *(_BYTE *)(v169 + 64) = 0;
        sub_23F3B1400(v186, v181, v183, v179, v147, v148, v149, v150, 0);
        v151 = sub_23F3B1CF8();
        sub_23F3B1400(v151, v152, v174, v179, v153, v154, v155, v156, 0);
        sub_23F3B0F00(v0 + 2);
        goto LABEL_81;
      }
      sub_23F39BA98(v192, v193, v194, v195, v196, v197, v198, v199, 0);
      v130 = v171;
    }
    v140 = v0[20];
    sub_23F3B1400(v186, v181, v132, v131, v126, v127, v128, v129, v188);
    sub_23F3B1400(v171, v159, v174, v131, v141, v142, v143, v144, v188);
    *(_QWORD *)v140 = v130;
    *(_OWORD *)(v140 + 8) = 0u;
    *(_OWORD *)(v140 + 24) = 0u;
    *(_OWORD *)(v140 + 40) = 0u;
    *(_QWORD *)(v140 + 56) = 0;
    *(_BYTE *)(v140 + 64) = 1;
LABEL_81:
    v161(v0[44], v0[41]);
    goto LABEL_13;
  }
  if (v5 == *MEMORY[0x24BEB9990])
  {
    sub_23F3B1CEC();
    v28 = v0[39];
    v27 = v0[40];
    v29 = v0[37];
    v187 = v0[38];
    v30 = v0[36];
    v32 = v0[23];
    v31 = (_QWORD *)v0[24];
    v33 = v0[22];
    sub_23F3B13E4(v34);
    v35 = swift_projectBox();
    sub_23F38431C(v29, v35, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 16));
    v36 = v31[3];
    v37 = v31[4];
    sub_23F3B21E4(v31);
    MEMORY[0x24266EC14]();
    (*(void (**)(unint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 24))(__dst, v27, v33, v32, v36, v37);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v187);
    v38 = __dst[0];
    v39 = __dst[1];
    v40 = __dst[2];
    v41 = __dst[3];
    v42 = __dst[4];
    v43 = __dst[5];
    v45 = __dst[6];
    v44 = __dst[7];
    v46 = __dst[8];
    if ((__dst[8] & 1) != 0)
    {
      v47 = v0[20];
      *(_QWORD *)v47 = __dst[0];
      *(_QWORD *)(v47 + 8) = v39;
      *(_QWORD *)(v47 + 16) = v40;
      *(_QWORD *)(v47 + 24) = v41;
      *(_QWORD *)(v47 + 32) = v42;
      *(_QWORD *)(v47 + 40) = v43;
      *(_QWORD *)(v47 + 48) = v45;
      *(_QWORD *)(v47 + 56) = v44;
      *(_BYTE *)(v47 + 64) = 1;
    }
    else
    {
      v184 = __dst[8];
      v50 = v0[20];
      v38 = __dst[0];
      v39 = __dst[1];
      v40 = __dst[2];
      v44 = __dst[7];
      *(_QWORD *)v50 = sub_23F3AA6DC(__dst[0], __dst[1], __dst[2]);
      *(_QWORD *)(v50 + 8) = v51;
      *(_QWORD *)(v50 + 16) = v52;
      *(_QWORD *)(v50 + 24) = v41;
      *(_QWORD *)(v50 + 32) = v42;
      *(_QWORD *)(v50 + 40) = v43;
      *(_QWORD *)(v50 + 48) = v45;
      *(_QWORD *)(v50 + 56) = v44;
      *(_BYTE *)(v50 + 64) = 0;
      v46 = v184;
      sub_23F384324();
      sub_23F39BA5C(v42, v43);
    }
    sub_23F384274(v0[36]);
    sub_23F39BA98(v38, v39, v40, v41, v42, v43, v45, v44, v46);
    goto LABEL_13;
  }
  if (v5 == *MEMORY[0x24BEB99E0])
  {
LABEL_10:
    sub_23F3B1CEC();
    sub_23F3B13E4(v49);
    swift_release();
    sub_23F3B1EEC();
    goto LABEL_20;
  }
  if (v5 == *MEMORY[0x24BEB9988])
  {
    sub_23F3B1CEC();
    v57 = v0[24];
    v58 = v0[60] & 1;
    v189 = *((_OWORD *)v0 + 11);
    (*(void (**)(uint64_t *))(v59 + 96))(v2);
    v0[49] = *v2;
    v60 = swift_projectBox();
    sub_23F3B1518(v60);
    v0[50] = sub_23F3B1FF0();
    v61 = sub_23F3B20CC();
    v0[51] = v61;
    *(_QWORD *)(v61 + 16) = v57;
    *(_BYTE *)(v61 + 24) = v58;
    *(_OWORD *)(v61 + 32) = v189;
    v62 = (_QWORD *)sub_23F3B1C04();
    v0[52] = v62;
    *v62 = v0;
    v62[1] = sub_23F3AA184;
    sub_23F3B2178((uint64_t)&unk_256E70D78);
    sub_23F3B1EC4();
    __asm { BR              X3 }
  }
  if (v5 == *MEMORY[0x24BEB99D8])
    goto LABEL_26;
  if (v5 == *MEMORY[0x24BEB99E8])
  {
    sub_23F3B1CEC();
    v76 = v0[24];
    sub_23F3B13E4(v77);
    v0[55] = *v2;
    v78 = swift_projectBox();
    sub_23F3B1518(v78);
    sub_23F3B1424((_QWORD *)(v76 + 80), *(_QWORD *)(v76 + 104));
    v79 = (_QWORD *)sub_23F3B1C04();
    v0[56] = v79;
    *v79 = v0;
    v79[1] = sub_23F3AA274;
    sub_23F3B1EC4();
    __asm { BR              X4 }
  }
  if (v5 == *MEMORY[0x24BEB99B0])
    goto LABEL_10;
  if (v5 == *MEMORY[0x24BEB9A08])
  {
LABEL_26:
    sub_23F3B1CEC();
    v64 = v0[28];
    sub_23F3B13E4(v65);
    swift_release();
    sub_23F619088();
    v66 = v64;
    sub_23F619E8C();
    v67 = sub_23F3B1A04();
    v68 = sub_23F3B1E8C(v67);
    v69 = v0[28];
    v70 = v0[26];
    if (v68)
    {
      v71 = (uint8_t *)sub_23F366668();
      __dst[0] = sub_23F366668();
      *(_DWORD *)v71 = 136315138;
      sub_23F3B1970((uint64_t)"reference(_:detailLevel:direction:renderingState:)", v157, v158, v160, v162, v163, v165, v167, v170, v172, v176, v178, v180, v182, v185, v69, v191, v192, v193,
        v194,
        v195,
        v196,
        v197,
        v198,
        v199,
        v200,
        __dst[0]);
      v0[19] = v72;
      sub_23F61C790();
      sub_23F38485C(&dword_23F35A000, v66, v1, "[%s] Unsupported type: skipping event", v71);
      sub_23F3B17D4();
      sub_23F366530();
    }

    sub_23F383CA8(v69, *(uint64_t (**)(uint64_t, uint64_t))(v70 + 8));
    v81 = v0[20];
    *(_OWORD *)(v81 + 32) = 0u;
    *(_OWORD *)(v81 + 48) = 0u;
    *(_OWORD *)v81 = 0u;
    *(_OWORD *)(v81 + 16) = 0u;
    *(_BYTE *)(v81 + 64) = 1;
  }
  else
  {
    v88 = v0[27];
    sub_23F3B2130();
    sub_23F619E8C();
    v89 = sub_23F3B1A04();
    v90 = sub_23F3B1E8C(v89);
    v91 = v0[25];
    if (v90)
    {
      v190 = v0[27];
      v92 = (uint8_t *)sub_23F366668();
      __dst[0] = sub_23F366668();
      *(_DWORD *)v92 = 136315138;
      sub_23F3B1970((uint64_t)"reference(_:detailLevel:direction:renderingState:)", v157, v158, v160, v162, v163, v165, v167, v170, v172, v176, v178, v180, v182, v91, v190, v191, v192, v193,
        v194,
        v195,
        v196,
        v197,
        v198,
        v199,
        v200,
        __dst[0]);
      v0[18] = v93;
      sub_23F61C790();
      sub_23F38485C(&dword_23F35A000, v88, v1, "[%s] Unsupported type: skipping event", v92);
      sub_23F3B17D4();
      sub_23F366530();
    }

    v117 = sub_23F3B1CF8();
    v118(v117);
    v119 = v0[46];
    v120 = v0[20];
    *(_OWORD *)(v120 + 32) = 0u;
    *(_OWORD *)(v120 + 48) = 0u;
    *(_OWORD *)v120 = 0u;
    *(_OWORD *)(v120 + 16) = 0u;
    *(_BYTE *)(v120 + 64) = 1;
    sub_23F384274(v119);
  }
LABEL_20:
  sub_23F3B1458();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F384760();
  sub_23F3B1EC4();
  __asm { BR              X0 }
}

uint64_t sub_23F3AA184()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  sub_23F3B19F0();
  sub_23F3B2010(v3);
  *(_QWORD *)(v2 + 424) = v1;
  swift_task_dealloc();
  sub_23F362D08();
  if (!v1)
    *(_QWORD *)(v2 + 432) = v0;
  swift_task_dealloc();
  sub_23F36679C();
  return sub_23F3B13D4();
}

uint64_t sub_23F3AA1EC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  v2 = v0[33];
  v1 = v0[34];
  sub_23F5255BC(v0[54], v0[20]);
  sub_23F362984();
  sub_23F383CA8(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F3668FC();
  sub_23F3B1458();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  v3 = (uint64_t (*)(void))sub_23F384760();
  return sub_23F38346C(v3);
}

uint64_t sub_23F3AA274()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v6 = *v1;
  v2 = v6;
  sub_23F3B2010(&v6);
  *(_QWORD *)(v2 + 456) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_23F36679C();
    return swift_task_switch();
  }
  else
  {
    v4 = *(unsigned __int8 *)(v2 + 480);
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v2 + 464) = v5;
    *v5 = v1;
    v5[1] = sub_23F3AA310;
    return sub_23F3A944C(*(_QWORD *)(v2 + 160), *(_QWORD *)(v2 + 376), v4 & 1, *(_QWORD *)(v2 + 176), *(_QWORD *)(v2 + 184));
  }
}

uint64_t sub_23F3AA310()
{
  uint64_t v0;
  uint64_t v1;

  sub_23F3B1998();
  sub_23F3B201C();
  *(_QWORD *)(v1 + 472) = v0;
  swift_task_dealloc();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F3AA35C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  v2 = v0[30];
  v1 = v0[31];
  sub_23F384274(v0[46]);
  sub_23F383E64(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F366748();
  sub_23F3B1458();
  sub_23F362CC8();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  v3 = (uint64_t (*)(void))sub_23F384760();
  return sub_23F38346C(v3);
}

uint64_t sub_23F3AA3DC()
{
  uint64_t v0;

  sub_23F3B1D38();
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 264) + 8))(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 256));
  sub_23F3668FC();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3666C4();
  sub_23F362CC8();
  sub_23F3668E4();
  sub_23F3668DC();
  return sub_23F366630(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F3AA46C()
{
  uint64_t v0;

  sub_23F3B1D38();
  sub_23F3B1478();
  sub_23F3668FC();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3666C4();
  sub_23F3668E4();
  sub_23F3668DC();
  return sub_23F366630(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F3AA4C8()
{
  uint64_t v0;

  sub_23F3B1D38();
  sub_23F384274(*(_QWORD *)(v0 + 368));
  sub_23F3B1478();
  sub_23F3668FC();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3666C4();
  sub_23F3668E4();
  sub_23F3668DC();
  return sub_23F366630(*(uint64_t (**)(void))(v0 + 8));
}

double sub_23F3AA530@<D0>(unint64_t *a1@<X0>, unint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double result;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;

  v4 = a1[2];
  v26 = a1[1];
  v27 = *a1;
  v5 = a1[3];
  v6 = *a2;
  v7 = a2[1];
  v9 = a2[2];
  v8 = a2[3];
  v28 = MEMORY[0x24BEE4B08];
  sub_23F35D2E8(&qword_256E70898);
  sub_23F61C55C();
  sub_23F61C55C();
  sub_23F61C280();
  sub_23F617BA0();
  sub_23F617BA0();
  sub_23F528350(0, 0xE000000000000000, v28, v6, v7, v9);
  v11 = v10;
  v13 = v12;
  v15 = v14;
  swift_bridgeObjectRelease();
  sub_23F617BA0();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23F61C280();
  sub_23F528350(v27, v26, v4, v11, v13, v15);
  v17 = v16;
  v19 = v18;
  v21 = v20;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v5)
    v22 = v5;
  else
    v22 = MEMORY[0x24BEE4B00];
  if (v8)
    v23 = v8;
  else
    v23 = MEMORY[0x24BEE4B00];
  sub_23F617BA0();
  sub_23F617BA0();
  v24 = sub_23F5198CC(v23, v22);
  *(_QWORD *)a3 = v17;
  *(_QWORD *)(a3 + 8) = v19;
  *(_QWORD *)(a3 + 16) = v21;
  *(_QWORD *)(a3 + 24) = v24;
  result = 0.0;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  return result;
}

uint64_t sub_23F3AA6DC(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v9 = MEMORY[0x24BEE4B08];
  sub_23F35D2E8(&qword_256E70898);
  sub_23F61C55C();
  sub_23F61C55C();
  sub_23F617BA0();
  sub_23F528350(0, 0xE000000000000000, v9, a1, a2, a3);
  v7 = v6;
  swift_bridgeObjectRelease_n();
  sub_23F61C280();
  sub_23F61B6EC();
  sub_23F61C1D8();
  swift_bridgeObjectRelease();
  sub_23F3A7268();
  swift_bridgeObjectRelease();
  sub_23F617BA0();
  sub_23F61C280();
  swift_bridgeObjectRelease_n();
  return v7;
}

uint64_t sub_23F3AA824(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  char v11;
  _QWORD *v12;

  v11 = a4 & 1;
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v12;
  *v12 = v6;
  v12[1] = sub_23F3609AC;
  return sub_23F3A944C(a1, a2, v11, a5, a6);
}

uint64_t sub_23F3AA8AC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  char v10;
  _QWORD *v11;

  v10 = a3 & 1;
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_23F362820;
  return sub_23F3A944C(a1, a2, v10, a4, a5);
}

void sub_23F3AA92C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  __objc2_ivar *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  __objc2_ivar *v71;
  uint64_t v72;
  __objc2_ivar *v73;
  __objc2_ivar *v74;
  __objc2_ivar *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  BOOL v79;
  uint64_t *v80;
  id v81;
  __objc2_ivar *v82;
  uint64_t v83;
  void (*v84)(uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t (*v89)(uint64_t, uint64_t, _QWORD);
  __objc2_ivar *v90;
  uint64_t v91;
  uint64_t v92;
  __objc2_ivar *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t (*v97)(uint64_t, uint64_t, _QWORD);
  __objc2_ivar *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t (*v101)(uint64_t, uint64_t, _QWORD);
  uint64_t v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t (*v107)(uint64_t, uint64_t, _QWORD);
  uint64_t v108;
  uint64_t v109;
  __objc2_ivar *v110;
  uint64_t v111;
  void (*v112)(uint64_t);
  void *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t (*v117)(uint64_t, _QWORD);
  __objc2_ivar *v118;
  uint64_t v119;
  id v120;
  uint64_t v121;
  uint64_t v122;
  void *v123;
  id v124;
  unint64_t v125;
  unint64_t v126;
  uint64_t v127;
  id v128;
  uint64_t v129;
  void (*v130)(uint64_t);
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  __objc2_ivar *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  __objc2_ivar *v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167[8];
  BOOL v168;

  sub_23F362ABC();
  a19 = v28;
  a20 = v29;
  v147 = v21;
  v163 = v30;
  v164 = v31;
  v32 = sub_23F61B83C();
  sub_23F383E7C(v32, (uint64_t)&v166);
  v138 = v33;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v34);
  sub_23F36285C();
  sub_23F3B13F0(v35);
  v36 = sub_23F61B854();
  sub_23F383E7C(v36, (uint64_t)&v165);
  v144 = v37;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v38);
  sub_23F36285C();
  sub_23F3B13F0(v39);
  v40 = sub_23F61B878();
  sub_23F383E7C(v40, (uint64_t)v167);
  v143 = v41;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v42);
  sub_23F36285C();
  sub_23F3B13F0(v43);
  v154 = sub_23F61B89C();
  v152 = *(_QWORD *)(v154 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v44);
  sub_23F36285C();
  sub_23F3B13F0(v45);
  v151 = sub_23F61B7DC();
  v150 = *(_QWORD *)(v151 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v46);
  sub_23F384990((uint64_t)&v136 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23F35D2E8(&qword_256E70CE8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v48);
  sub_23F3834D0();
  v137 = v49;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v50);
  v148 = (char *)&v136 - v51;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v52);
  sub_23F3B13F0((uint64_t)&v136 - v53);
  v157 = sub_23F61B80C();
  v156 = *(_QWORD *)(v157 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v54);
  sub_23F3B15A8(v55, v136);
  v159 = sub_23F35D2E8(qword_256E70D80);
  v158 = *(_QWORD *)(v159 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v56);
  sub_23F3B1630();
  v57 = sub_23F616E68();
  sub_23F389AF8();
  MEMORY[0x24BDAC7A8](v58);
  sub_23F383A54();
  v59 = sub_23F616D00();
  sub_23F383E7C(v59, (uint64_t)&a12);
  v161 = v60;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v61);
  sub_23F36285C();
  sub_23F3B13F0(v62);
  v63 = sub_23F616FC4();
  sub_23F3B1E38();
  MEMORY[0x24BDAC7A8](v64);
  sub_23F3B164C();
  v65 = sub_23F61B8A8();
  sub_23F3B19A8();
  MEMORY[0x24BDAC7A8](v66);
  sub_23F3B1590();
  ((void (*)(uint64_t, uint64_t, uint64_t))v20->type)(v22, v163, v65);
  v67 = sub_23F3B1DF8(v22, *(uint64_t (**)(uint64_t, uint64_t))&v20[2].align);
  if (v67 == *MEMORY[0x24BEB9928])
  {
    sub_23F3B13A0();
    if (*(_BYTE *)v22 == 1)
    {
      v27 = 1702195796;
      v68 = MEMORY[0x24BEE4B08];
      v65 = 0xE400000000000000;
      v69 = 1702195796;
      v70 = 0xE400000000000000;
    }
    else
    {
      v27 = 0x65736C6146;
      v68 = MEMORY[0x24BEE4B08];
      v65 = 0xE500000000000000;
      v69 = 0x65736C6146;
      v70 = 0xE500000000000000;
    }
    v72 = sub_23F3B13CC(v68, v69, v70);
    goto LABEL_15;
  }
  if (v67 == *MEMORY[0x24BEB9918])
  {
    sub_23F3B13A0();
    v167[0] = *(_QWORD *)v22;
    v65 = (uint64_t)v167;
    sub_23F61CC1C();
    sub_23F3B1F98();
    sub_23F3E3A60((uint64_t)&unk_250FD0A80);
    v20 = v71;
    sub_23F383738();
LABEL_14:
    v76 = sub_23F3B13CC((uint64_t)v20, v27, v65);
    sub_23F362D18();
    v72 = v76;
LABEL_15:
    sub_23F369004(v72);
    v78 = v77;
LABEL_16:
    sub_23F3B1730();
    v79 = 0;
    goto LABEL_17;
  }
  if (v67 == *MEMORY[0x24BEB9948])
  {
    sub_23F3B13A0();
    sub_23F61C4F0();
    sub_23F3B1F98();
    sub_23F3E3A60((uint64_t)&unk_250FD0AA8);
    v20 = v73;
    sub_23F383738();
    goto LABEL_14;
  }
  if (v67 == *MEMORY[0x24BEB9960])
  {
    sub_23F3B13A0();
    sub_23F61C70C();
    sub_23F3B1F98();
    sub_23F3E3A60((uint64_t)&unk_250FD0AD0);
    v20 = v74;
    sub_23F383738();
    goto LABEL_14;
  }
  if (v67 == *MEMORY[0x24BEB9958])
  {
    sub_23F3B13A0();
    v27 = *(_QWORD *)v22;
    v65 = *(_QWORD *)(v22 + 8);
    sub_23F3E3A60((uint64_t)&unk_250FD0AF8);
    v20 = v75;
    sub_23F383738();
    goto LABEL_14;
  }
  if (v67 == *MEMORY[0x24BEB9930])
  {
    sub_23F3B13A0();
    sub_23F384918(v25, v22, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 32));
    if (qword_256E6EEB0 != -1)
      swift_once();
    v65 = sub_23F616F58();
    v81 = sub_23F3B209C(v65, sel_stringFromDate_);

    sub_23F61C10C();
    sub_23F3B1FA4();
    sub_23F3E3A60((uint64_t)&unk_250FD0B20);
    v20 = v82;
    sub_23F383738();
    sub_23F3B13CC((uint64_t)v20, v27, v65);
    sub_23F362D18();
    sub_23F3B1968();
    v78 = v83;
    v84 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
    v85 = v25;
    goto LABEL_22;
  }
  if (v67 == *MEMORY[0x24BEB9900])
  {
    sub_23F3B13A0();
    sub_23F3B1D74();
    v24 = v160;
    v87 = sub_23F3B1AC4();
    sub_23F3B15C8(v87, v88, v89);
    if (qword_256E6EEB8 != -1)
      swift_once();
    v65 = sub_23F616C34();
    v20 = (__objc2_ivar *)sub_23F3B209C(v65, sel_stringFromDateComponents_);

    v79 = v20 == 0;
    if (v20)
    {
      sub_23F61C10C();
      sub_23F3B1FA4();
      sub_23F383738();
      sub_23F3E3A60((uint64_t)&unk_250FD0B48);
      v20 = v90;
      sub_23F383738();
      sub_23F3B13CC((uint64_t)v20, v27, v65);
      sub_23F362D18();
      sub_23F3B1968();
      v78 = v91;
      sub_23F362984();
    }
    else
    {
      v65 = 0;
      v78 = 0;
      v27 = 2;
    }
    sub_23F362A28(v24, *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
    sub_23F3B1730();
    goto LABEL_17;
  }
  if (v67 == *MEMORY[0x24BEB9920])
  {
    sub_23F3B13A0();
    sub_23F384840(v26, v22, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 32));
    v63 = sub_23F616DD8();
    v65 = v92;
    sub_23F3E3A60((uint64_t)&unk_250FD0B70);
    v20 = v93;
    sub_23F383738();
    sub_23F3B13CC((uint64_t)v20, v63, v65);
    sub_23F362D18();
    sub_23F3B1968();
    v78 = v94;
    v84 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
    v27 = v63;
    v85 = v26;
LABEL_31:
    v86 = v57;
    goto LABEL_23;
  }
  if (v67 == *MEMORY[0x24BEB9908])
    goto LABEL_33;
  if (v67 == *MEMORY[0x24BEB98E8])
  {
    sub_23F3B13A0();
    sub_23F3B1D74();
    v95 = sub_23F3B1AC4();
    sub_23F3B15C8(v95, v96, v97);
    v65 = v24;
    MEMORY[0x24266A048](v63);
    sub_23F3B1F98();
    sub_23F3E3A60((uint64_t)&unk_250FD0B98);
    v20 = v98;
    sub_23F383738();
LABEL_53:
    sub_23F3B13CC((uint64_t)v20, v27, v65);
    sub_23F362D18();
    sub_23F3B1968();
    v78 = v119;
    v84 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
    v85 = v24;
LABEL_22:
    v86 = v63;
LABEL_23:
    v84(v85, v86);
    goto LABEL_16;
  }
  if (v67 == *MEMORY[0x24BEB98F8])
  {
    sub_23F3B13A0();
    sub_23F3B1D74();
    v24 = v155;
    v99 = sub_23F3B1AC4();
    sub_23F3B15C8(v99, v100, v101);
    v65 = v24;
    sub_23F61B7F4();
    v102 = sub_23F3B1F5C();
    v103 = sub_23F3B1780(v102);
    if (v104)
    {
      sub_23F3B2238(v103, &qword_256E70CE8);
      sub_23F3B2268();
    }
    else
    {
      sub_23F3B1E00();
      sub_23F3B14D4();
    }
    sub_23F3E3A60((uint64_t)&unk_250FD0BC0);
    v20 = v110;
    sub_23F383738();
    goto LABEL_53;
  }
  if (v67 == *MEMORY[0x24BEB98F0])
  {
    sub_23F3B13A0();
    sub_23F3B1D74();
    v24 = v149;
    v105 = sub_23F3B1AC4();
    sub_23F3B15C8(v105, v106, v107);
    v65 = v24;
    sub_23F61B7D0();
    v108 = sub_23F3B1F5C();
    v109 = sub_23F3B1780(v108);
    if (v104)
    {
      sub_23F3B2238(v109, &qword_256E70CE8);
      sub_23F3B2268();
    }
    else
    {
      sub_23F3B1E00();
      sub_23F3B14D4();
    }
    sub_23F3E3A60((uint64_t)&unk_250FD0BE8);
    v20 = v118;
    sub_23F383738();
    goto LABEL_53;
  }
  if (v67 != *MEMORY[0x24BEB9968])
  {
    if (v67 == *MEMORY[0x24BEB9950])
    {
      sub_23F3B13A0();
      v57 = v143;
      v63 = v145;
      v20 = v146;
      sub_23F38426C(v145, v22, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v143 + 32));
      v65 = v63;
      v23 = sub_23F61B86C();
      v120 = objc_msgSend((id)v23, sel_displayName);
      sub_23F61C10C();
      sub_23F3B1FB0();
      sub_23F3E3A60((uint64_t)&unk_250FD0C38);
      v24 = v121;
      sub_23F383738();
      sub_23F3B13CC(v24, v27, v63);
      sub_23F384120();
      sub_23F3B1968();
      v78 = v122;

      (*(void (**)(uint64_t, __objc2_ivar *))(v57 + 8))(v63, v20);
      goto LABEL_16;
    }
    v24 = v141;
    v63 = v139;
    v23 = v142;
    v57 = v140;
    if (v67 == *MEMORY[0x24BEB9938])
    {
      sub_23F3B13A0();
      sub_23F384840(v63, v22, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v144 + 32));
      v123 = (void *)sub_23F61B848();
      v20 = &stru_250FE6000;
      v124 = objc_msgSend(v123, sel_filename);

      v65 = sub_23F61C10C();
      v126 = v125;

      sub_23F3837B0();
      v127 = HIBYTE(v126) & 0xF;
      if ((v126 & 0x2000000000000000) == 0)
        v127 = v65 & 0xFFFFFFFFFFFFLL;
      if (v127)
      {
        v65 = sub_23F61B848();
        v128 = objc_msgSend((id)v65, sel_filename);

        sub_23F61C10C();
        sub_23F3B1FB0();
      }
      else
      {
        sub_23F3B2268();
      }
      sub_23F3E3A60((uint64_t)&unk_250FD0C60);
      v23 = v132;
      sub_23F383738();
      sub_23F3B13CC(v23, v27, v65);
      sub_23F3837B0();
      sub_23F3B1968();
      v78 = v133;
      sub_23F384430();
      v85 = v63;
      goto LABEL_31;
    }
    if (v67 == *MEMORY[0x24BEB9910])
    {
      sub_23F3B13A0();
      v65 = v24;
      v129 = sub_23F3B1AC4();
      v130(v129);
      sub_23F61B830();
      v131 = sub_23F3B1F5C();
      sub_23F3B1780(v131);
      if (v104)
      {
        sub_23F3625D8(v137, &qword_256E70CE8);
        sub_23F3B2268();
      }
      else
      {
        sub_23F3B1E00();
        sub_23F3B14D4();
      }
      sub_23F3E3A60((uint64_t)&unk_250FD0C88);
      v20 = v134;
      sub_23F383738();
      sub_23F3B13CC((uint64_t)v20, v27, v24);
      sub_23F362D18();
      sub_23F3B1968();
      v78 = v135;
      sub_23F384430();
      v85 = v24;
      v86 = v23;
      goto LABEL_23;
    }
    if (v67 != *MEMORY[0x24BEB98E0] && v67 == *MEMORY[0x24BEB9940])
    {
LABEL_34:
      v27 = 0;
      v65 = 0;
      v78 = 0;
      sub_23F3B1730();
      v79 = 1;
      goto LABEL_17;
    }
LABEL_33:
    ((void (*)(uint64_t, uint64_t))v20->name)(v22, v65);
    goto LABEL_34;
  }
  sub_23F3B13A0();
  v111 = sub_23F38422C();
  v112(v111);
  sub_23F35EA9C((_QWORD *)(v147 + 40), *(_QWORD *)(v147 + 64));
  v113 = (void *)sub_23F61B890();
  sub_23F3AC618();

  v27 = v167[0];
  v65 = v167[1];
  v78 = v167[2];
  v20 = (__objc2_ivar *)v167[3];
  v23 = v167[4];
  v24 = v167[5];
  v57 = v167[6];
  v63 = v167[7];
  v79 = v168;
  if (!v168)
  {
    v163 = sub_23F528950((uint64_t)&unk_250FD0C10, v167[0]);
    v162 = v114;
    v116 = v115;
    sub_23F3668F4();
    sub_23F39BA5C(v23, v24);
    sub_23F39BA98(v27, v65, v78, (uint64_t)v20, v23, v24, v57, v63, 0);
    v27 = v163;
    v65 = v162;
    v78 = v116;
  }
  sub_23F384430();
  sub_23F3841CC(v153, v117);
LABEL_17:
  v80 = v164;
  *v164 = v27;
  v80[1] = v65;
  v80[2] = v78;
  v80[3] = (uint64_t)v20;
  v80[4] = v23;
  v80[5] = v24;
  v80[6] = v57;
  v80[7] = v63;
  *((_BYTE *)v80 + 64) = v79;
  sub_23F362948();
}

uint64_t sub_23F3AB5E0(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v5 + 32) = a4;
  *(_QWORD *)(v5 + 40) = v4;
  *(_BYTE *)(v5 + 416) = a3;
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v6 = sub_23F61B92C();
  *(_QWORD *)(v5 + 48) = v6;
  *(_QWORD *)(v5 + 56) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 64) = sub_23F366578();
  v7 = sub_23F61B740();
  *(_QWORD *)(v5 + 72) = v7;
  *(_QWORD *)(v5 + 80) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v5 + 88) = sub_23F366578();
  v8 = sub_23F61BA94();
  *(_QWORD *)(v5 + 96) = v8;
  *(_QWORD *)(v5 + 104) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v5 + 112) = sub_23F366654();
  *(_QWORD *)(v5 + 120) = sub_23F3666CC();
  *(_QWORD *)(v5 + 128) = sub_23F3666CC();
  *(_QWORD *)(v5 + 136) = sub_23F3666CC();
  v9 = sub_23F61B7AC();
  *(_QWORD *)(v5 + 144) = v9;
  *(_QWORD *)(v5 + 152) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v5 + 160) = sub_23F366654();
  *(_QWORD *)(v5 + 168) = sub_23F3666CC();
  v10 = sub_23F61B6E0();
  *(_QWORD *)(v5 + 176) = v10;
  *(_QWORD *)(v5 + 184) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v5 + 192) = sub_23F366654();
  *(_QWORD *)(v5 + 200) = sub_23F3666CC();
  *(_QWORD *)(v5 + 208) = type metadata accessor for DirectionalTypedValue();
  *(_QWORD *)(v5 + 216) = sub_23F366654();
  *(_QWORD *)(v5 + 224) = sub_23F3666CC();
  *(_QWORD *)(v5 + 232) = sub_23F3666CC();
  *(_QWORD *)(v5 + 240) = sub_23F3666CC();
  sub_23F36679C();
  return sub_23F3B15DC();
}

uint64_t sub_23F3AB6F8()
{
  uint64_t v0;
  uint64_t v1;
  int EnumCaseMultiPayload;
  uint64_t v3;
  uint64_t v4;
  int v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t);
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  void *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int *v62;
  _QWORD *v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t (*v67)(void);
  void (*v68)(uint64_t, _QWORD);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t (*v80)(uint64_t);
  char v81;
  uint64_t (*v82)(uint64_t);
  uint64_t v83;

  sub_23F3B14B8();
  v1 = *(_QWORD *)(v0 + 56);
  sub_23F362600(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 240), (uint64_t (*)(_QWORD))type metadata accessor for DirectionalTypedValue);
  sub_23F3840BC();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v3 = *(_QWORD *)(v0 + 240);
  if (EnumCaseMultiPayload != 1)
  {
    v19 = *(_QWORD *)(v0 + 232);
    sub_23F362600(v3, v19, (uint64_t (*)(_QWORD))type metadata accessor for DirectionalTypedValue);
    v20 = sub_23F3B1DF8(v19, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 88));
    if (v20 == *MEMORY[0x24BEB99E0])
    {
      v21 = *(_QWORD **)(v0 + 232);
      v22 = *(_QWORD *)(v0 + 168);
      v23 = *(_QWORD *)(v0 + 152);
      v24 = *(_QWORD **)(v0 + 40);
      v25 = *(_BYTE *)(v0 + 416);
      sub_23F3B13E4(*(_QWORD *)(v0 + 56));
      *(_QWORD *)(v0 + 296) = *v21;
      v26 = swift_projectBox();
      sub_23F362D94(v22, v26, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 16));
      v12 = v24[8];
      v13 = v24[9];
      v27 = sub_23F3B1424(v24 + 5, v12);
      sub_23F3B1F4C((uint64_t)v27, *MEMORY[0x24BEB9F48]);
      v28 = (_QWORD *)sub_23F3B1504();
      *(_QWORD *)(v0 + 304) = v28;
      *v28 = v0;
      v28[1] = sub_23F3ABD94;
      v16 = v25 & 1;
      v17 = *(_QWORD *)(v0 + 168);
      v18 = *(_QWORD *)(v0 + 136);
      goto LABEL_6;
    }
    if (v20 == *MEMORY[0x24BEB9988])
    {
      v42 = *(_QWORD **)(v0 + 232);
      v44 = *(_QWORD *)(v0 + 32);
      v43 = *(_QWORD *)(v0 + 40);
      v45 = *(_BYTE *)(v0 + 416) & 1;
      sub_23F3B13E4(*(_QWORD *)(v0 + 56));
      *(_QWORD *)(v0 + 248) = *v42;
      v46 = swift_projectBox();
      sub_23F3B1518(v46);
      *(_QWORD *)(v0 + 256) = sub_23F3B1FF0();
      v47 = sub_23F3B20CC();
      *(_QWORD *)(v0 + 264) = v47;
      *(_QWORD *)(v47 + 16) = v43;
      *(_BYTE *)(v47 + 24) = v45;
      *(_QWORD *)(v47 + 32) = v44;
      v48 = (_QWORD *)sub_23F3B1504();
      *(_QWORD *)(v0 + 272) = v48;
      *v48 = v0;
      v48[1] = sub_23F3ABC98;
      v41 = &unk_256E70C88;
      goto LABEL_11;
    }
    v51 = *(_QWORD *)(v0 + 232);
    if (v20 == *MEMORY[0x24BEB99B0])
    {
      v52 = *(_QWORD *)(v0 + 128);
      v54 = *(_QWORD *)(v0 + 96);
      v53 = *(_QWORD *)(v0 + 104);
      v56 = *(_QWORD *)(v0 + 80);
      v55 = *(_QWORD *)(v0 + 88);
      v63 = *(_QWORD **)(v0 + 40);
      v83 = *(_QWORD *)(v0 + 32);
      v78 = *(_QWORD *)(v0 + 72);
      sub_23F3B13E4(*(_QWORD *)(v0 + 56));
      v64 = sub_23F3B1858();
      sub_23F3B1C18(v64);
      v65 = v63 + 10;
      v61 = v63[13];
      v60 = v63[14];
      sub_23F3B1424(v65, v61);
      v62 = (unsigned int *)MEMORY[0x24BEB9F48];
      goto LABEL_16;
    }
LABEL_17:
    v68 = *(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 56) + 8);
    v68(v51, *(_QWORD *)(v0 + 48));
    *(_QWORD *)(v0 + 392) = v68;
    v69 = *(_QWORD *)(v0 + 216);
    v70 = *(_QWORD *)(v0 + 104);
    v79 = *(_QWORD *)(v0 + 112);
    v71 = *(_QWORD *)(v0 + 56);
    v72 = *(_QWORD *)(v0 + 64);
    v73 = *(_QWORD **)(v0 + 40);
    v81 = *(_BYTE *)(v0 + 416);
    v74 = *(_QWORD *)(v0 + 24);
    v75 = v73[3];
    v76 = v73[4];
    sub_23F35EA9C(v73, v75);
    sub_23F362600(v74, v69, (uint64_t (*)(_QWORD))type metadata accessor for DirectionalTypedValue);
    sub_23F38431C(v72, v69, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v71 + 32));
    sub_23F362D94(v79, *MEMORY[0x24BEB9F40], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v70 + 104));
    v80 = (uint64_t (*)(uint64_t))(**(int **)(v76 + 8) + *(_QWORD *)(v76 + 8));
    v77 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 400) = v77;
    *v77 = v0;
    v77[1] = sub_23F3AC058;
    v16 = v81 & 1;
    v18 = *(_QWORD *)(v0 + 112);
    v17 = *(_QWORD *)(v0 + 64);
    v29 = *(_QWORD *)(v0 + 32);
    v30 = *(_QWORD *)(v0 + 16);
    v31 = v75;
    v32 = v76;
    v33 = v80;
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v33)(v30, v17, v16, v18, v29, v31, v32);
  }
  v4 = *(_QWORD *)(v0 + 224);
  sub_23F362600(v3, v4, (uint64_t (*)(_QWORD))type metadata accessor for DirectionalTypedValue);
  v5 = sub_23F3B1DF8(v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 88));
  if (v5 != *MEMORY[0x24BEB99E0])
  {
    if (v5 == *MEMORY[0x24BEB9988])
    {
      v34 = *(_QWORD **)(v0 + 224);
      v36 = *(_QWORD *)(v0 + 32);
      v35 = *(_QWORD *)(v0 + 40);
      v37 = *(_BYTE *)(v0 + 416) & 1;
      sub_23F3B13E4(*(_QWORD *)(v0 + 56));
      *(_QWORD *)(v0 + 320) = *v34;
      v38 = swift_projectBox();
      sub_23F3B1518(v38);
      *(_QWORD *)(v0 + 328) = sub_23F3B1FF0();
      v39 = sub_23F3B20CC();
      *(_QWORD *)(v0 + 336) = v39;
      *(_QWORD *)(v39 + 16) = v35;
      *(_BYTE *)(v39 + 24) = v37;
      *(_QWORD *)(v39 + 32) = v36;
      v40 = (_QWORD *)sub_23F3B1504();
      *(_QWORD *)(v0 + 344) = v40;
      *v40 = v0;
      v40[1] = sub_23F3ABE78;
      v41 = &unk_256E70C78;
LABEL_11:
      v49 = sub_23F3B2178((uint64_t)v41);
      return v82(v49);
    }
    v51 = *(_QWORD *)(v0 + 224);
    if (v5 == *MEMORY[0x24BEB99B0])
    {
      v52 = *(_QWORD *)(v0 + 128);
      v54 = *(_QWORD *)(v0 + 96);
      v53 = *(_QWORD *)(v0 + 104);
      v56 = *(_QWORD *)(v0 + 80);
      v55 = *(_QWORD *)(v0 + 88);
      v57 = *(_QWORD **)(v0 + 40);
      v83 = *(_QWORD *)(v0 + 32);
      v78 = *(_QWORD *)(v0 + 72);
      sub_23F3B13E4(*(_QWORD *)(v0 + 56));
      v58 = sub_23F3B1858();
      sub_23F3B1C18(v58);
      v59 = v57 + 10;
      v61 = v57[13];
      v60 = v57[14];
      sub_23F3B1424(v59, v61);
      v62 = (unsigned int *)MEMORY[0x24BEB9F40];
LABEL_16:
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v53 + 104))(v52, *v62, v54);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 8))(v55, v52, v83, v61, v60);
      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v52, v54);
      (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v55, v78);
      sub_23F3668FC();
      sub_23F3B131C();
      sub_23F3B1778(v66, (uint64_t (*)(_QWORD))type metadata accessor for DirectionalTypedValue);
      sub_23F3666DC();
      sub_23F3666C4();
      sub_23F3666EC();
      sub_23F366708();
      sub_23F3666E4();
      sub_23F366698();
      sub_23F3666D4();
      sub_23F3666A0();
      sub_23F362CC8();
      sub_23F3668E4();
      sub_23F3668DC();
      sub_23F3668D4();
      sub_23F383980();
      sub_23F3667E0();
      v67 = (uint64_t (*)(void))sub_23F384760();
      return sub_23F3B1350(v67);
    }
    goto LABEL_17;
  }
  v6 = *(_QWORD **)(v0 + 224);
  v8 = *(_QWORD *)(v0 + 152);
  v7 = *(_QWORD *)(v0 + 160);
  v9 = *(_QWORD **)(v0 + 40);
  v10 = *(_BYTE *)(v0 + 416);
  sub_23F3B13E4(*(_QWORD *)(v0 + 56));
  *(_QWORD *)(v0 + 368) = *v6;
  v11 = swift_projectBox();
  sub_23F362D94(v7, v11, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16));
  v12 = v9[8];
  v13 = v9[9];
  v14 = sub_23F3B1424(v9 + 5, v12);
  sub_23F3B1F4C((uint64_t)v14, *MEMORY[0x24BEB9F40]);
  v15 = (_QWORD *)sub_23F3B1504();
  *(_QWORD *)(v0 + 376) = v15;
  *v15 = v0;
  v15[1] = sub_23F3ABF74;
  v16 = v10 & 1;
  v17 = *(_QWORD *)(v0 + 160);
  v18 = *(_QWORD *)(v0 + 120);
LABEL_6:
  v29 = *(_QWORD *)(v0 + 32);
  v30 = *(_QWORD *)(v0 + 16);
  v31 = v12;
  v32 = v13;
  v33 = v82;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v33)(v30, v17, v16, v18, v29, v31, v32);
}

uint64_t sub_23F3ABC98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  sub_23F3B19F0();
  sub_23F3B2010(v3);
  *(_QWORD *)(v2 + 280) = v1;
  swift_task_dealloc();
  sub_23F362D08();
  if (!v1)
    *(_QWORD *)(v2 + 288) = v0;
  swift_task_dealloc();
  sub_23F36679C();
  return sub_23F3B13D4();
}

uint64_t sub_23F3ABD00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_23F3B14B8();
  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 184);
  sub_23F3B214C();
  sub_23F362984();
  sub_23F383CA8(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F3668FC();
  sub_23F3B131C();
  sub_23F3B1778(v3, (uint64_t (*)(_QWORD))type metadata accessor for DirectionalTypedValue);
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3668E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  v4 = (uint64_t (*)(void))sub_23F384760();
  return sub_23F3B1350(v4);
}

uint64_t sub_23F3ABD94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F3B1998();
  v2 = *(_QWORD *)(v1 + 136);
  v3 = *(_QWORD *)(v1 + 104);
  sub_23F3B201C();
  *(_QWORD *)(v4 + 312) = v0;
  swift_task_dealloc();
  sub_23F383E64(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_23F36679C();
  return sub_23F3B13D4();
}

uint64_t sub_23F3ABDF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  sub_23F3B14B8();
  sub_23F384274(*(_QWORD *)(v0 + 152));
  sub_23F366748();
  sub_23F3B131C();
  sub_23F3B1778(v1, (uint64_t (*)(_QWORD))type metadata accessor for DirectionalTypedValue);
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3668E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  v2 = (uint64_t (*)(void))sub_23F384760();
  return sub_23F3B1350(v2);
}

uint64_t sub_23F3ABE78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  sub_23F3B19F0();
  sub_23F3B2010(v3);
  *(_QWORD *)(v2 + 352) = v1;
  swift_task_dealloc();
  sub_23F362D08();
  if (!v1)
    *(_QWORD *)(v2 + 360) = v0;
  swift_task_dealloc();
  sub_23F36679C();
  return sub_23F3B13D4();
}

uint64_t sub_23F3ABEE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_23F3B14B8();
  v2 = *(_QWORD *)(v0 + 184);
  v1 = *(_QWORD *)(v0 + 192);
  sub_23F3B214C();
  sub_23F362984();
  sub_23F383CA8(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F3668FC();
  sub_23F3B131C();
  sub_23F3B1778(v3, (uint64_t (*)(_QWORD))type metadata accessor for DirectionalTypedValue);
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3668E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  v4 = (uint64_t (*)(void))sub_23F384760();
  return sub_23F3B1350(v4);
}

uint64_t sub_23F3ABF74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F3B1998();
  v2 = *(_QWORD *)(v1 + 120);
  v3 = *(_QWORD *)(v1 + 104);
  sub_23F3B201C();
  *(_QWORD *)(v4 + 384) = v0;
  swift_task_dealloc();
  sub_23F383E64(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_23F36679C();
  return sub_23F3B13D4();
}

uint64_t sub_23F3ABFD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  sub_23F3B14B8();
  sub_23F384274(*(_QWORD *)(v0 + 152));
  sub_23F366748();
  sub_23F3B131C();
  sub_23F3B1778(v1, (uint64_t (*)(_QWORD))type metadata accessor for DirectionalTypedValue);
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3668E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  v2 = (uint64_t (*)(void))sub_23F384760();
  return sub_23F3B1350(v2);
}

uint64_t sub_23F3AC058()
{
  uint64_t v0;
  _QWORD *v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F3B1998();
  v2 = (void (*)(uint64_t))v1[49];
  v4 = v1[13];
  v3 = v1[14];
  sub_23F3B201C();
  *(_QWORD *)(v5 + 408) = v0;
  swift_task_dealloc();
  sub_23F383E64(v3, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  v6 = sub_23F3848F0();
  v2(v6);
  sub_23F36679C();
  return swift_task_switch();
}

uint64_t sub_23F3AC0E8()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  sub_23F3B14B8();
  sub_23F3B131C();
  sub_23F3B1778(v0, (uint64_t (*)(_QWORD))type metadata accessor for DirectionalTypedValue);
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F3668E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  v1 = (uint64_t (*)(void))sub_23F384760();
  return sub_23F3B1350(v1);
}

uint64_t sub_23F3AC154()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  sub_23F3B15E8();
  sub_23F384274(*(_QWORD *)(v0 + 184));
  sub_23F366748();
  sub_23F3B136C();
  sub_23F3B1960(v1, (uint64_t (*)(_QWORD))type metadata accessor for DirectionalTypedValue);
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3666DC();
  sub_23F362CC8();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  v2 = (uint64_t (*)(void))sub_23F3B1EE0();
  return sub_23F3B13B0(v2);
}

uint64_t sub_23F3AC1D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  sub_23F3B15E8();
  sub_23F384274(*(_QWORD *)(v0 + 152));
  sub_23F366748();
  sub_23F3B136C();
  sub_23F3B1960(v1, (uint64_t (*)(_QWORD))type metadata accessor for DirectionalTypedValue);
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3666DC();
  sub_23F362CC8();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  v2 = (uint64_t (*)(void))sub_23F3B1EE0();
  return sub_23F3B13B0(v2);
}

uint64_t sub_23F3AC25C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  sub_23F3B15E8();
  sub_23F384274(*(_QWORD *)(v0 + 184));
  sub_23F366748();
  sub_23F3B136C();
  sub_23F3B1960(v1, (uint64_t (*)(_QWORD))type metadata accessor for DirectionalTypedValue);
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3666DC();
  sub_23F362CC8();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  v2 = (uint64_t (*)(void))sub_23F3B1EE0();
  return sub_23F3B13B0(v2);
}

uint64_t sub_23F3AC2E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  sub_23F3B15E8();
  sub_23F384274(*(_QWORD *)(v0 + 152));
  sub_23F366748();
  sub_23F3B136C();
  sub_23F3B1960(v1, (uint64_t (*)(_QWORD))type metadata accessor for DirectionalTypedValue);
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3666DC();
  sub_23F362CC8();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  v2 = (uint64_t (*)(void))sub_23F3B1EE0();
  return sub_23F3B13B0(v2);
}

uint64_t sub_23F3AC364()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  sub_23F3B15E8();
  sub_23F3B136C();
  sub_23F3B1960(v0, (uint64_t (*)(_QWORD))type metadata accessor for DirectionalTypedValue);
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3666DC();
  sub_23F362CC8();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  v1 = (uint64_t (*)(void))sub_23F3B1EE0();
  return sub_23F3B13B0(v1);
}

uint64_t sub_23F3AC3D4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;

  *(_BYTE *)(v5 + 80) = a4;
  *(_QWORD *)(v5 + 32) = a3;
  *(_QWORD *)(v5 + 40) = a5;
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  *(_QWORD *)(v5 + 48) = type metadata accessor for DirectionalTypedValue();
  *(_QWORD *)(v5 + 56) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F3AC438()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v1 = sub_23F3B1B94();
  sub_23F3B1A50(v1);
  sub_23F3840BC();
  swift_storeEnumTagMultiPayload();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v2;
  v3 = sub_23F3B1BB0(v2);
  return sub_23F3B181C(v3, v4, v5, v6);
}

uint64_t sub_23F3AC48C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23F3B1758();
  sub_23F3B1778(v2, (uint64_t (*)(_QWORD))type metadata accessor for DirectionalTypedValue);
  if (v0)
  {
    sub_23F36679C();
    return sub_23F3B183C();
  }
  else
  {
    swift_task_dealloc();
    return sub_23F3B182C(*(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t sub_23F3AC4E0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;

  *(_BYTE *)(v5 + 80) = a4;
  *(_QWORD *)(v5 + 32) = a3;
  *(_QWORD *)(v5 + 40) = a5;
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  *(_QWORD *)(v5 + 48) = type metadata accessor for DirectionalTypedValue();
  *(_QWORD *)(v5 + 56) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F3AC544()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v1 = sub_23F3B1B94();
  sub_23F3B1A50(v1);
  sub_23F3840BC();
  swift_storeEnumTagMultiPayload();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v2;
  v3 = sub_23F3B1BB0(v2);
  return sub_23F3B181C(v3, v4, v5, v6);
}

uint64_t sub_23F3AC598()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23F3B1758();
  sub_23F3B1778(v2, (uint64_t (*)(_QWORD))type metadata accessor for DirectionalTypedValue);
  if (v0)
  {
    sub_23F36679C();
    return sub_23F3B183C();
  }
  else
  {
    swift_task_dealloc();
    return sub_23F3B182C(*(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t sub_23F3AC5EC()
{
  uint64_t v0;

  swift_task_dealloc();
  return sub_23F362888(*(uint64_t (**)(void))(v0 + 8));
}

double sub_23F3AC618()
{
  uint64_t *v0;
  void *v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  __int128 v24;
  unint64_t v25;
  unint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v44;
  __int128 v45;

  sub_23F3B20E0();
  sub_23F35D2E8(&qword_256E6FE78);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23F61EC90;
  *(_QWORD *)(inited + 32) = sub_23F3B0FC0(v1);
  *(_QWORD *)(inited + 40) = v4;
  v5 = sub_23F3B171C();
  v6 = v5;
  if (v5)
  {
    v7 = sub_23F3B1E6C((uint64_t)v5, sel_street);
    sub_23F3B1E48();
    sub_23F3B1F84();
    sub_23F3B18CC();
  }
  else
  {
    v2 = 0;
  }
  *(_QWORD *)(inited + 48) = v6;
  *(_QWORD *)(inited + 56) = v2;
  v8 = sub_23F3B171C();
  v9 = v8;
  if (v8)
  {
    v10 = sub_23F3B1E6C((uint64_t)v8, sel_city);
    sub_23F3B1E48();
    sub_23F3B1F84();
    sub_23F3B18CC();
  }
  else
  {
    v2 = 0;
  }
  *(_QWORD *)(inited + 64) = v9;
  *(_QWORD *)(inited + 72) = v2;
  v11 = sub_23F3B171C();
  v12 = v11;
  if (v11)
  {
    v13 = sub_23F3B1E6C((uint64_t)v11, sel_state);
    sub_23F3B1E48();
    sub_23F3B1F84();
    sub_23F3B18CC();
  }
  else
  {
    v2 = 0;
  }
  *(_QWORD *)(inited + 80) = v12;
  *(_QWORD *)(inited + 88) = v2;
  v14 = sub_23F3B171C();
  v15 = v14;
  if (v14)
  {
    v16 = sub_23F3B1E6C((uint64_t)v14, sel_postalCode);
    sub_23F3B1E48();
    sub_23F3B1F84();
    sub_23F3B18CC();
  }
  else
  {
    v2 = 0;
  }
  *(_QWORD *)(inited + 96) = v15;
  *(_QWORD *)(inited + 104) = v2;
  v17 = sub_23F3B171C();
  v18 = v17;
  if (v17)
  {
    v19 = objc_msgSend(v17, sel_country);

    sub_23F61C10C();
    sub_23F3B20EC();

  }
  else
  {
    v15 = 0;
  }
  *(_QWORD *)(inited + 112) = v18;
  *(_QWORD *)(inited + 120) = v15;
  v20 = 32;
  v21 = (_QWORD *)MEMORY[0x24BEE4AF8];
  do
  {
    v22 = *(_QWORD *)(inited + v20 + 8);
    if (v22)
    {
      if (*(_QWORD *)(inited + v20))
        v23 = 0;
      else
        v23 = v22 == 0xE000000000000000;
      if (v23)
        goto LABEL_30;
      v44 = *(_OWORD *)(inited + v20);
      if ((sub_23F3B1DD8() & 1) != 0)
        goto LABEL_30;
    }
    else
    {
      v44 = *(_OWORD *)(inited + v20);
    }
    sub_23F383738();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_23F37BAF8();
    v24 = v44;
    v26 = v21[2];
    v25 = v21[3];
    if (v26 >= v25 >> 1)
    {
      sub_23F3B1A80(v25);
      v45 = v27;
      sub_23F37BAF8();
      v24 = v45;
    }
    v21[2] = v26 + 1;
    *(_OWORD *)&v21[2 * v26 + 4] = v24;
LABEL_30:
    v20 += 16;
  }
  while (v20 != 128);
  swift_setDeallocating();
  sub_23F5135D0();
  v28 = v21[2];
  if (v28)
  {
    sub_23F3B2060();
    v29 = v21 + 5;
    v30 = MEMORY[0x24BEE4AF8];
    do
    {
      v31 = *v29;
      if (*v29)
      {
        v32 = *(v29 - 1);
        sub_23F383738();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F3B1E10();
          sub_23F376C88();
          v30 = v36;
        }
        v34 = *(_QWORD *)(v30 + 16);
        v33 = *(_QWORD *)(v30 + 24);
        if (v34 >= v33 >> 1)
        {
          sub_23F3B1A80(v33);
          sub_23F376C88();
          v30 = v37;
        }
        *(_QWORD *)(v30 + 16) = v34 + 1;
        v35 = v30 + 16 * v34;
        *(_QWORD *)(v35 + 32) = v32;
        *(_QWORD *)(v35 + 40) = v31;
      }
      v29 += 2;
      --v28;
    }
    while (v28);
    sub_23F38496C();
  }
  sub_23F38496C();
  sub_23F3B1CE4();
  sub_23F3B1B50(&qword_256E70588);
  v38 = sub_23F3B20C4();
  v40 = v39;
  sub_23F362D08();
  sub_23F362CDC();
  v41 = sub_23F3B13CC(MEMORY[0x24BEE4B08], v38, v40);
  sub_23F369004(v41);
  *v0 = v38;
  v0[1] = v40;
  return sub_23F3B1438(v42);
}

void sub_23F3AC9C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[5];

  sub_23F362ABC();
  v35 = v0;
  v5 = sub_23F35D2E8(&qword_256E70A68);
  sub_23F3B1E38();
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_23F3B18F4();
  v8 = *(_QWORD *)(v7 - 8);
  v36 = v7;
  v37 = v8;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F3B1CA0();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v28 - v11;
  sub_23F35D2E8(&qword_256E70A70);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F3B17A4();
  v14 = sub_23F61B998();
  v31 = *(_QWORD *)(v14 - 8);
  v32 = v14;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v15);
  v30 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F383780();
  v29 = v18;
  sub_23F61B2FC();
  v34 = v38[4];
  v33 = sub_23F3B21E4(v38);
  sub_23F61BBB4();
  swift_getKeyPath();
  v19 = sub_23F3B1690();
  v20 = swift_allocBox();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v21, v35, v19);
  *v3 = v20;
  sub_23F362D94((uint64_t)v3, *MEMORY[0x24BEB8F00], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 104));
  sub_23F3B121C(&qword_256E70A78, (void (*)(uint64_t))MEMORY[0x24BEBA3A8]);
  sub_23F3B0CC8(&qword_256E70A80, &qword_256E70A68);
  sub_23F61B6A4();
  swift_release();
  sub_23F383E64((uint64_t)v3, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F3B2110(v4);
  sub_23F3B2040();
  if (v5)
  {
    sub_23F3B2230();
    sub_23F3B2110((uint64_t)v12);
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v38);
    sub_23F36196C(v1, 1, 1, v32);
LABEL_5:
    sub_23F3625D8(v1, &qword_256E70A70);
    goto LABEL_6;
  }
  v23 = v29;
  v22 = (uint64_t)v30;
  v24 = v31;
  sub_23F3B2110((uint64_t)v12);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v38);
  v25 = v32;
  sub_23F383740(v1, 1, v32);
  if (v26)
    goto LABEL_5;
  v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32);
  v27(v23, v1, v25);
  v27(v22, v23, v25);
  sub_23F3B1DF8(v22, *(uint64_t (**)(uint64_t, uint64_t))(v24 + 88));
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v25);
LABEL_6:
  sub_23F362948();
}

void sub_23F3ACCA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t (*v40)(uint64_t);
  int v41;
  uint64_t v43;
  uint64_t v44;

  sub_23F362ABC();
  a19 = v25;
  a20 = v26;
  v27 = v20;
  v29 = v28;
  v30 = sub_23F61B95C();
  sub_23F3B1DC8();
  v32 = MEMORY[0x24BDAC7A8](v31);
  v34 = (char *)&a9 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v32);
  v36 = (char *)&a9 - v35;
  sub_23F3B1690();
  sub_23F3B2164();
  MEMORY[0x24BDAC7A8](v37);
  sub_23F383EC4();
  v38 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
  v38(v34, v27, v30);
  v39 = sub_23F38422C();
  v41 = v40(v39);
  if (v41 == *MEMORY[0x24BEB9A88])
  {
LABEL_9:
    sub_23F383E64((uint64_t)v34, *(uint64_t (**)(uint64_t, uint64_t))(v23 + 96));
    v44 = sub_23F3B2004();
    sub_23F384918(v22, v44, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 16));
    sub_23F366748();
    sub_23F3AC9C8();
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v21);
    goto LABEL_10;
  }
  if (v41 != *MEMORY[0x24BEB9A50] && v41 != *MEMORY[0x24BEB9AA0])
  {
    if (v41 != *MEMORY[0x24BEB9A58])
    {
      sub_23F383E64((uint64_t)v34, *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  sub_23F383E64((uint64_t)v34, *(uint64_t (**)(uint64_t, uint64_t))(v23 + 96));
  v43 = sub_23F3B2004();
  v38(v36, v43, v30);
  sub_23F366748();
  sub_23F3ACCA0(v29);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v36, v30);
LABEL_10:
  sub_23F362948();
}

void sub_23F3ACE38()
{
  qword_256E7FD98 = (uint64_t)&unk_250FD09F0;
}

uint64_t sub_23F3ACE4C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v7 = a4;
  if ((a5 & 1) != 0)
  {
    v9 = 0;
    v10 = 0;
    v11 = a4;
    v7 = 0;
  }
  else
  {
    v10 = a3;
    v9 = a2;
    v11 = result;
    sub_23F617BA0();
    sub_23F617BA0();
    result = sub_23F3B0D54(v7, 0);
  }
  *(_QWORD *)a6 = v11;
  *(_QWORD *)(a6 + 8) = v9;
  *(_QWORD *)(a6 + 16) = v10;
  *(_QWORD *)(a6 + 24) = v7;
  *(_BYTE *)(a6 + 32) = a5 & 1;
  return result;
}

void sub_23F3ACED0(uint64_t (*a1)(char *, unint64_t), uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;

  sub_23F61BBA8();
  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_23F3BCF34();
    v5 = v6;
  }
  sub_23F3AD418(a1, a2);
  *v2 = v5;
}

void sub_23F3ACF68(uint64_t a1, char a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  char v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _BOOL8 v35;
  char v36;
  unint64_t v37;
  char v38;
  _QWORD *v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t);
  id v53;
  _QWORD v54[2];
  char *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  id v67;

  v4 = v3;
  v64 = a3;
  v7 = sub_23F6184B8();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)v54 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)v54 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v63 = (char *)v54 - v18;
  v19 = sub_23F35D2E8(&qword_256E704E0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    swift_bridgeObjectRelease();
    return;
  }
  v61 = *(_QWORD *)(a1 + 16);
  v62 = v7;
  v56 = v14;
  v57 = v11;
  v59 = &v23[*(int *)(v20 + 48)];
  v60 = v4;
  v24 = a1 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
  v58 = *(_QWORD *)(v21 + 72);
  v54[1] = a1;
  sub_23F617BA0();
  v25 = (uint64_t)v23;
  v55 = v23;
  while (1)
  {
    sub_23F382EF8(v24, v25, &qword_256E704E0);
    v26 = v8;
    v27 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 32);
    v28 = v62;
    v27(v63, v25, v62);
    v29 = (uint64_t)v17;
    v27(v17, (uint64_t)v59, v28);
    v30 = *(_QWORD **)v64;
    sub_23F375424();
    v33 = v32;
    v34 = v30[2];
    v35 = (v31 & 1) == 0;
    if (__OFADD__(v34, v35))
    {
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      sub_23F61CC94();
      __break(1u);
      goto LABEL_22;
    }
    v36 = v31;
    if (v30[3] >= v34 + v35)
    {
      if ((a2 & 1) == 0)
      {
        sub_23F35D2E8(&qword_256E70428);
        sub_23F61CA24();
      }
    }
    else
    {
      sub_23F513EC4();
      sub_23F375424();
      if ((v36 & 1) != (v38 & 1))
        goto LABEL_21;
      v33 = v37;
    }
    v39 = *(_QWORD **)v64;
    if ((v36 & 1) != 0)
      break;
    v39[(v33 >> 6) + 8] |= 1 << v33;
    v47 = *(_QWORD *)(v26 + 72) * v33;
    v48 = v62;
    v27((char *)(v39[6] + v47), (uint64_t)v63, v62);
    v17 = (char *)v29;
    v27((char *)(v39[7] + v47), v29, v48);
    v49 = v39[2];
    v50 = __OFADD__(v49, 1);
    v51 = v49 + 1;
    if (v50)
      goto LABEL_20;
    v39[2] = v51;
    v8 = v26;
LABEL_14:
    v24 += v58;
    a2 = 1;
    if (!--v61)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  v8 = v26;
  v40 = *(_QWORD *)(v26 + 72) * v33;
  v41 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
  v42 = (uint64_t)v57;
  v43 = v62;
  v41(v57, v39[7] + v40, v62);
  v44 = (uint64_t)v56;
  v17 = (char *)v29;
  v45 = v60;
  sub_23F3A6AB8(v42, v29, (uint64_t)v56);
  if (!v45)
  {
    v60 = 0;
    v46 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v46(v42, v43);
    v46(v29, v43);
    v46((uint64_t)v63, v43);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40))(*(_QWORD *)(*(_QWORD *)v64 + 56) + v40, v44, v43);
    v25 = (uint64_t)v55;
    goto LABEL_14;
  }
  v52 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v52(v42, v43);
  v67 = v45;
  v53 = v45;
  sub_23F35D2E8(&qword_256E70370);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    v52(v29, v43);
    v52((uint64_t)v63, v43);
    swift_bridgeObjectRelease();

    return;
  }
LABEL_22:
  v65 = 0;
  v66 = 0xE000000000000000;
  sub_23F61C8E0();
  sub_23F61C280();
  sub_23F61CA00();
  sub_23F61C280();
  sub_23F61CA60();
  __break(1u);
}

void sub_23F3AD418(uint64_t (*a1)(char *, unint64_t), uint64_t a2)
{
  char **v2;
  char *v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  _QWORD *v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  _QWORD *v41;
  char *v42;
  unint64_t v43;
  char *v44;
  char *v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  unint64_t v58;
  char *v59;
  uint64_t v61;
  char *v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  char *v66;
  char *v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  BOOL v79;
  unint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  BOOL v89;
  uint64_t v90;
  char v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  BOOL v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  char *v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  unint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(unint64_t, char *, char *);
  char *v120;
  char v121;
  char v122;
  void (*v123)(unint64_t, char *);
  char *v124;
  char *v125;
  void (*v126)(char *, char *, uint64_t);
  char *v127;
  char *v128;
  char *v129;
  char *v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  char *v135;
  char *v136;
  unint64_t v137;
  void (*v138)(unint64_t, char *);
  uint64_t v139;
  void (*v140)(unint64_t, uint64_t);
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  char *v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  char *v153;
  char *v154;
  char *v155;
  void (*v156)(char *, char *, uint64_t, char *);
  char *v157;
  uint64_t v158;
  char *v159;
  char *v160;
  unint64_t v161;
  uint64_t v162;
  char **v163;
  _QWORD *v164;
  uint64_t (*v165)(char *, char *);
  uint64_t v166;

  v166 = a2;
  v165 = (uint64_t (*)(char *, char *))a1;
  v5 = sub_23F61BBA8();
  v6 = *(_QWORD **)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v154 = (char *)&v141 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v159 = (char *)&v141 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v141 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v141 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v144 = (char *)&v141 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v141 - v20;
  v22 = MEMORY[0x24BDAC7A8](v19);
  v146 = (char *)&v141 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v145 = (char *)&v141 - v24;
  v163 = v2;
  v25 = (uint64_t)v2[1];
  v26 = sub_23F61CC04();
  if (v26 >= v25)
  {
    if (v25 < 0)
      goto LABEL_146;
    if (v25)
      sub_23F3ADF64(0, v25, 1, v165, v166);
    return;
  }
  v141 = v26;
  sub_23F387F70(v25 / 2);
  v143 = v27;
  v161 = v28;
  if (v25 > 0)
  {
    v148 = v21;
    v152 = v16;
    v162 = v5;
    v29 = 0;
    v30 = (char *)MEMORY[0x24BEE4AF8];
    v31 = v25;
    v32 = v6;
    v164 = v6;
    v155 = v13;
    v33 = v3;
    v151 = v25;
    while (1)
    {
      v34 = (char *)(v29 + 1);
      v153 = v30;
      if (v29 + 1 >= v31)
        goto LABEL_30;
      v157 = (char *)v31;
      v35 = *v163;
      v36 = v32[9];
      v150 = v29 + 1;
      v37 = &v35[v36 * (_QWORD)v34];
      v38 = (char *)v32[2];
      v39 = v145;
      v40 = v162;
      v41 = v32;
      ((void (*)(char *, char *, uint64_t))v38)(v145, v37, v162);
      v147 = v35;
      v158 = v36;
      v42 = &v35[v36 * v29];
      v43 = (unint64_t)v146;
      v160 = v38;
      ((void (*)(char *, char *, uint64_t))v38)(v146, v42, v40);
      LODWORD(v156) = v165(v39, (char *)v43);
      if (v33)
      {
        v140 = (void (*)(unint64_t, uint64_t))v41[1];
        v140(v43, v40);
        v140((unint64_t)v39, v40);
LABEL_122:
        swift_bridgeObjectRelease();
        v139 = v151;
        goto LABEL_123;
      }
      v4 = (char *)v41[1];
      ((void (*)(unint64_t, uint64_t))v4)(v43, v40);
      ((void (*)(char *, uint64_t))v4)(v39, v40);
      v142 = v29;
      v34 = (char *)(v29 + 2);
      v31 = (uint64_t)v157;
      if (v29 + 2 >= (uint64_t)v157)
      {
        v32 = v164;
      }
      else
      {
        v44 = v147;
        v45 = (char *)(v29 + 2);
        v149 = v158 * (_QWORD)v34;
        v150 *= v158;
        v46 = (unint64_t)v144;
        while (1)
        {
          v47 = v148;
          v48 = v162;
          v49 = v160;
          ((void (*)(char *, char *, uint64_t))v160)(v148, &v44[v149], v162);
          ((void (*)(unint64_t, char *, uint64_t))v49)(v46, &v44[v150], v48);
          LODWORD(v49) = v165(v47, (char *)v46);
          ((void (*)(unint64_t, uint64_t))v4)(v46, v48);
          ((void (*)(char *, uint64_t))v4)(v47, v48);
          if (((v156 ^ v49) & 1) != 0)
            break;
          v44 += v158;
          if ((uint64_t)++v45 >= (uint64_t)v157)
          {
            v31 = (uint64_t)v157;
            v34 = v157;
            v32 = v164;
            v13 = v155;
            goto LABEL_13;
          }
        }
        v32 = v164;
        v13 = v155;
        v34 = v45;
        v31 = (uint64_t)v157;
      }
LABEL_13:
      v50 = v153;
      v29 = v142;
      if ((v156 & 1) != 0)
      {
        if ((uint64_t)v34 < v142)
          goto LABEL_151;
        v51 = (char *)v162;
        if (v142 < (uint64_t)v34)
        {
          v52 = 0;
          v4 = (char *)(v158 * (_QWORD)(v34 - 1));
          v53 = (_QWORD)v34 * v158;
          v54 = v34;
          v55 = (char *)v142;
          v56 = v142 * v158;
          v160 = v54;
          do
          {
            if (v55 != &v54[v52 - 1])
            {
              v57 = v147;
              if (!v147)
                goto LABEL_155;
              v58 = (unint64_t)&v147[v56];
              v150 = (uint64_t)&v4[(_QWORD)v147];
              v59 = (char *)v162;
              v156 = (void (*)(char *, char *, uint64_t, char *))v164[4];
              v156(v154, &v147[v56], v162, v50);
              if (v56 < (uint64_t)v4 || v58 >= (unint64_t)&v57[v53])
              {
                v61 = v150;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                v61 = v150;
                if ((char *)v56 != v4)
                  swift_arrayInitWithTakeBackToFront();
              }
              ((void (*)(uint64_t, char *, char *))v156)(v61, v154, v59);
              v50 = v153;
              v51 = v59;
              v13 = v155;
            }
            ++v55;
            --v52;
            v54 = v160;
            v4 -= v158;
            v53 -= v158;
            v56 += v158;
          }
          while ((uint64_t)v55 < (uint64_t)&v160[v52]);
          v32 = v164;
          v34 = v160;
          v29 = v142;
          v31 = (uint64_t)v157;
        }
      }
      else
      {
LABEL_30:
        v51 = (char *)v162;
      }
      if ((uint64_t)v34 < v31)
      {
        if (__OFSUB__(v34, v29))
          goto LABEL_148;
        if ((uint64_t)&v34[-v29] < v141)
        {
          if (__OFADD__(v29, v141))
            goto LABEL_149;
          if (v29 + v141 >= v31)
            v62 = (char *)v31;
          else
            v62 = (char *)(v29 + v141);
          if ((uint64_t)v62 < v29)
          {
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
LABEL_155:
            __break(1u);
            return;
          }
          if (v34 != v62)
          {
            v113 = (char *)v32[2];
            v149 = v32[9];
            v150 = (uint64_t)v113;
            v157 = v33;
            v158 = v149 * (_QWORD)(v34 - 1);
            v114 = (_QWORD)v34 * v149;
            v142 = v29;
            v147 = v62;
            do
            {
              v115 = 0;
              v160 = v34;
              while (1)
              {
                v156 = (void (*)(char *, char *, uint64_t, char *))v29;
                v116 = *v163;
                v65 = (unint64_t)v13;
                v117 = v114;
                v118 = (uint64_t)&(*v163)[v114 + v115];
                v33 = v152;
                v4 = v51;
                v119 = (void (*)(unint64_t, char *, char *))v150;
                ((void (*)(char *, uint64_t))v150)(v152, v118);
                v119(v65, &v116[v158 + v115], v4);
                v120 = v157;
                v121 = v165(v33, (char *)v65);
                v157 = v120;
                if (v120)
                  goto LABEL_121;
                v122 = v121;
                v123 = (void (*)(unint64_t, char *))v164[1];
                v123(v65, v4);
                v123((unint64_t)v33, v4);
                if ((v122 & 1) == 0)
                  break;
                v124 = *v163;
                if (!*v163)
                  goto LABEL_153;
                v114 = v117;
                v125 = &v124[v158 + v115];
                v126 = (void (*)(char *, char *, uint64_t))v164[4];
                v127 = &v124[v117 + v115];
                v128 = (char *)v162;
                v126(v159, v127, v162);
                swift_arrayInitWithTakeFrontToBack();
                v126(v125, v159, (uint64_t)v128);
                v115 -= v149;
                v29 = (uint64_t)v156 + 1;
                v129 = v160;
                v51 = v128;
                v13 = v155;
                if (v160 == (char *)v156 + 1)
                  goto LABEL_98;
              }
              v129 = v160;
              v114 = v117;
              v13 = (char *)v65;
              v51 = v4;
LABEL_98:
              v34 = v129 + 1;
              v158 += v149;
              v114 += v149;
              v29 = v142;
            }
            while (v34 != v147);
            v34 = v147;
            v33 = v157;
          }
        }
      }
      if ((uint64_t)v34 < v29)
        goto LABEL_145;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        v30 = v153;
      else
        v30 = sub_23F3BC8F8(0, *((_QWORD *)v153 + 2) + 1, 1, v153);
      v64 = *((_QWORD *)v30 + 2);
      v63 = *((_QWORD *)v30 + 3);
      v65 = v64 + 1;
      if (v64 >= v63 >> 1)
        v30 = sub_23F3BC8F8((char *)(v63 > 1), v64 + 1, 1, v30);
      *((_QWORD *)v30 + 2) = v65;
      v66 = v30 + 32;
      v67 = &v30[16 * v64 + 32];
      *(_QWORD *)v67 = v29;
      *((_QWORD *)v67 + 1) = v34;
      v160 = v34;
      if (v64)
      {
        while (1)
        {
          v68 = v65 - 1;
          if (v65 >= 4)
          {
            v73 = &v66[16 * v65];
            v74 = *((_QWORD *)v73 - 8);
            v75 = *((_QWORD *)v73 - 7);
            v79 = __OFSUB__(v75, v74);
            v76 = v75 - v74;
            if (v79)
              goto LABEL_130;
            v78 = *((_QWORD *)v73 - 6);
            v77 = *((_QWORD *)v73 - 5);
            v79 = __OFSUB__(v77, v78);
            v71 = v77 - v78;
            v72 = v79;
            if (v79)
              goto LABEL_131;
            v80 = v65 - 2;
            v81 = &v66[16 * v65 - 32];
            v83 = *(_QWORD *)v81;
            v82 = *((_QWORD *)v81 + 1);
            v79 = __OFSUB__(v82, v83);
            v84 = v82 - v83;
            if (v79)
              goto LABEL_132;
            v79 = __OFADD__(v71, v84);
            v85 = v71 + v84;
            if (v79)
              goto LABEL_134;
            if (v85 >= v76)
            {
              v103 = &v66[16 * v68];
              v105 = *(_QWORD *)v103;
              v104 = *((_QWORD *)v103 + 1);
              v79 = __OFSUB__(v104, v105);
              v106 = v104 - v105;
              if (v79)
                goto LABEL_144;
              v96 = v71 < v106;
              goto LABEL_77;
            }
          }
          else
          {
            if (v65 != 3)
            {
              v97 = *((_QWORD *)v30 + 4);
              v98 = *((_QWORD *)v30 + 5);
              v79 = __OFSUB__(v98, v97);
              v90 = v98 - v97;
              v91 = v79;
              goto LABEL_71;
            }
            v70 = *((_QWORD *)v30 + 4);
            v69 = *((_QWORD *)v30 + 5);
            v79 = __OFSUB__(v69, v70);
            v71 = v69 - v70;
            v72 = v79;
          }
          if ((v72 & 1) != 0)
            goto LABEL_133;
          v80 = v65 - 2;
          v86 = &v66[16 * v65 - 32];
          v88 = *(_QWORD *)v86;
          v87 = *((_QWORD *)v86 + 1);
          v89 = __OFSUB__(v87, v88);
          v90 = v87 - v88;
          v91 = v89;
          if (v89)
            goto LABEL_135;
          v92 = &v66[16 * v68];
          v94 = *(_QWORD *)v92;
          v93 = *((_QWORD *)v92 + 1);
          v79 = __OFSUB__(v93, v94);
          v95 = v93 - v94;
          if (v79)
            goto LABEL_137;
          if (__OFADD__(v90, v95))
            goto LABEL_139;
          if (v90 + v95 >= v71)
          {
            v96 = v71 < v95;
LABEL_77:
            if (v96)
              v68 = v80;
            goto LABEL_79;
          }
LABEL_71:
          if ((v91 & 1) != 0)
            goto LABEL_136;
          v99 = &v66[16 * v68];
          v101 = *(_QWORD *)v99;
          v100 = *((_QWORD *)v99 + 1);
          v79 = __OFSUB__(v100, v101);
          v102 = v100 - v101;
          if (v79)
            goto LABEL_138;
          if (v102 < v90)
            goto LABEL_88;
LABEL_79:
          v107 = v68 - 1;
          if (v68 - 1 >= v65)
          {
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
            goto LABEL_150;
          }
          if (!*v163)
            goto LABEL_152;
          v4 = v30;
          v108 = &v66[16 * v107];
          v109 = *(_QWORD *)v108;
          v110 = &v66[16 * v68];
          v111 = *((_QWORD *)v110 + 1);
          sub_23F3AE208((unint64_t)&(*v163)[v164[9] * *(_QWORD *)v108], (unint64_t)&(*v163)[v164[9] * *(_QWORD *)v110], (unint64_t)&(*v163)[v164[9] * v111], v161, (uint64_t (*)(char *, unint64_t))v165, v166);
          if (v33)
            goto LABEL_122;
          if (v111 < v109)
            goto LABEL_127;
          if (v68 > *((_QWORD *)v4 + 2))
            goto LABEL_128;
          *(_QWORD *)v108 = v109;
          *(_QWORD *)&v66[16 * v107 + 8] = v111;
          v112 = *((_QWORD *)v4 + 2);
          if (v68 >= v112)
            goto LABEL_129;
          v65 = v112 - 1;
          memmove(&v66[16 * v68], v110 + 16, 16 * (v112 - 1 - v68));
          v30 = v4;
          *((_QWORD *)v4 + 2) = v112 - 1;
          if (v112 <= 2)
            goto LABEL_88;
        }
      }
      v65 = 1;
LABEL_88:
      v32 = v164;
      v31 = (uint64_t)v163[1];
      v29 = (uint64_t)v160;
      v13 = v155;
      v25 = v151;
      if ((uint64_t)v160 >= v31)
        goto LABEL_105;
    }
  }
  v30 = (char *)MEMORY[0x24BEE4AF8];
  v65 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
  v33 = v3;
  v32 = v6;
LABEL_105:
  if (v65 >= 2)
  {
    v130 = *v163;
    v151 = v25;
    do
    {
      v131 = v65 - 2;
      if (v65 < 2)
        goto LABEL_140;
      if (!v130)
        goto LABEL_154;
      v4 = v30;
      v132 = *(_QWORD *)&v30[16 * v131 + 32];
      v133 = *(_QWORD *)&v30[16 * v65 + 24];
      v134 = v32;
      v135 = v130;
      sub_23F3AE208((unint64_t)&v130[v32[9] * v132], (unint64_t)&v130[v32[9] * *(_QWORD *)&v30[16 * v65 + 16]], (unint64_t)&v130[v32[9] * v133], v161, (uint64_t (*)(char *, unint64_t))v165, v166);
      if (v33)
        goto LABEL_122;
      if (v133 < v132)
        goto LABEL_141;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v4 = sub_23F3BC9E8();
      if (v131 >= *((_QWORD *)v4 + 2))
        goto LABEL_142;
      v136 = &v4[16 * v131 + 32];
      *(_QWORD *)v136 = v132;
      *((_QWORD *)v136 + 1) = v133;
      v137 = *((_QWORD *)v4 + 2);
      if (v65 > v137)
        goto LABEL_143;
      memmove(&v4[16 * v65 + 16], &v4[16 * v65 + 32], 16 * (v137 - v65));
      v30 = v4;
      *((_QWORD *)v4 + 2) = v137 - 1;
      v65 = v137 - 1;
      v32 = v134;
      v25 = v151;
      v130 = v135;
    }
    while (v137 > 2);
  }
  swift_bridgeObjectRelease();
  if (v25 < -1)
  {
    __break(1u);
LABEL_121:
    v138 = (void (*)(unint64_t, char *))v164[1];
    v138(v65, v4);
    v138((unint64_t)v33, v4);
    swift_bridgeObjectRelease();
    v139 = v151;
LABEL_123:
    if (v139 < -1)
      goto LABEL_147;
  }
  *(_QWORD *)(v143 + 16) = 0;
  swift_bridgeObjectRelease();
}

uint64_t sub_23F3ADF64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *, char *), uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  char v27;
  char v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t (*v43)(char *, char *);
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v43 = a4;
  v44 = a5;
  v8 = sub_23F61BBA8();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v46 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v41 = (char *)&v35 - v12;
  result = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v35 - v14;
  v37 = a2;
  if (a3 != a2)
  {
    v17 = *(_QWORD *)(v15 + 72);
    v47 = v15;
    v18 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    v39 = v17;
    v40 = v18;
    v49 = v17 * a3;
    v50 = v17 * (a3 - 1);
    v19 = v41;
    v36 = a1;
    v38 = (char *)&v35 - v14;
    while (2)
    {
      v20 = 0;
      v21 = a1;
      v22 = v51;
      v42 = a3;
      while (1)
      {
        v45 = v21;
        v23 = *v48;
        v24 = v8;
        v25 = v8;
        v26 = v40;
        v40(v16, v49 + v20 + *v48, v24);
        v26(v19, v50 + v20 + v23, v25);
        v27 = v43(v16, v19);
        v51 = v22;
        if (v22)
        {
          v34 = *(void (**)(char *, uint64_t))(v47 + 8);
          v34(v19, v25);
          return ((uint64_t (*)(char *, uint64_t))v34)(v16, v25);
        }
        v28 = v27;
        v29 = *(void (**)(char *, uint64_t))(v47 + 8);
        v29(v19, v25);
        result = ((uint64_t (*)(char *, uint64_t))v29)(v16, v25);
        v8 = v25;
        if ((v28 & 1) == 0)
          break;
        v22 = v51;
        v30 = *v48;
        if (!*v48)
        {
          __break(1u);
          return result;
        }
        v31 = v30 + v50 + v20;
        v32 = *(void (**)(char *, uint64_t, uint64_t))(v47 + 32);
        v32(v46, v30 + v49 + v20, v25);
        swift_arrayInitWithTakeFrontToBack();
        result = ((uint64_t (*)(uint64_t, char *, uint64_t))v32)(v31, v46, v25);
        v16 = v38;
        v20 -= v39;
        v21 = v45 + 1;
        v19 = v41;
        v33 = v42;
        if (v42 == v45 + 1)
          goto LABEL_10;
      }
      v33 = v42;
      v22 = v51;
      v16 = v38;
LABEL_10:
      v51 = v22;
      a3 = v33 + 1;
      v50 += v39;
      v49 += v39;
      a1 = v36;
      if (a3 != v37)
        continue;
      break;
    }
  }
  return result;
}

void sub_23F3AE208(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t (*a5)(char *, unint64_t), uint64_t a6)
{
  void (*v6)(unint64_t, unint64_t, uint64_t);
  void (*v7)(unint64_t, unint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  int64_t v26;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v33;
  unint64_t v34;
  int64_t v36;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  void (*v42)(unint64_t, unint64_t, uint64_t);
  char *v43;
  unint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  unint64_t v48;
  void (*v49)(unint64_t, uint64_t);
  unint64_t v50;
  BOOL v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char *v57;
  void (*v58)(char *, unint64_t, uint64_t);
  char *v59;
  char v60;
  char v61;
  char *v62;
  unint64_t v63;
  unint64_t v64;
  void (*v65)(char *, uint64_t);
  unint64_t v68;
  unint64_t v69;
  void (*v70)(unint64_t, uint64_t);
  int64_t v71;
  void (*v73)(char *, uint64_t);
  int64_t v74;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  void (*v80)(char *, unint64_t, uint64_t);
  char *v81;
  char *v82;
  unint64_t v83;
  void (*v84)(unint64_t, unint64_t, uint64_t);
  unint64_t v85;
  uint64_t v86;
  uint64_t (*v87)(char *, unint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;

  v7 = v6;
  v87 = a5;
  v88 = a6;
  v92 = a3;
  v11 = sub_23F61BBA8();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v82 = (char *)&v76 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v76 - v20;
  v90 = v22;
  v23 = *(_QWORD *)(v22 + 72);
  if (!v23)
  {
    __break(1u);
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    return;
  }
  v24 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v23 == -1)
    goto LABEL_87;
  v26 = v92 - a2;
  if (v92 - a2 == 0x8000000000000000 && v23 == -1)
    goto LABEL_88;
  v89 = v18;
  v28 = a2;
  v29 = v24 / v23;
  v30 = v26 / v23;
  v86 = v23;
  if (v24 / v23 < v26 / v23)
  {
    v85 = v19;
    sub_23F37A694(a1, v24 / v23);
    v31 = a4 + v29 * v23;
    if (v29 * v23 >= 1 && v28 < v92)
    {
      v40 = v28;
      v41 = v89;
      v84 = *(void (**)(unint64_t, unint64_t, uint64_t))(v90 + 16);
      v91 = a4 + v29 * v23;
      while (1)
      {
        v42 = v84;
        v84((unint64_t)v21, v40, v41);
        v43 = v21;
        v44 = v85;
        v42(v85, a4, v41);
        v45 = v87(v43, v44);
        if (v6)
          break;
        v46 = v45;
        v47 = v41;
        v48 = v40;
        v49 = *(void (**)(unint64_t, uint64_t))(v90 + 8);
        v49(v44, v47);
        v49((unint64_t)v43, v47);
        v23 = v86;
        v21 = v43;
        if ((v46 & 1) != 0)
        {
          v50 = v48;
          v40 = v48 + v86;
          if (a1 < v48 || a1 >= v40)
          {
            v41 = v89;
            swift_arrayInitWithTakeFrontToBack();
          }
          else
          {
            v41 = v89;
            if (a1 != v50)
              swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          v52 = a1 < a4 || a1 >= a4 + v86;
          v40 = v48;
          if (v52)
          {
            v41 = v89;
            swift_arrayInitWithTakeFrontToBack();
          }
          else
          {
            v41 = v89;
            if (a1 != a4)
              swift_arrayInitWithTakeBackToFront();
          }
          a4 += v23;
        }
        a1 += v23;
        v31 = v91;
        if (a4 >= v91 || v40 >= v92)
          goto LABEL_22;
      }
      v70 = *(void (**)(unint64_t, uint64_t))(v90 + 8);
      v70(v44, v41);
      v70((unint64_t)v43, v41);
      v71 = v91 - a4;
      if (v86 != -1 || v71 != 0x8000000000000000)
      {
        v38 = v71 / v86;
        v39 = a4;
        goto LABEL_27;
      }
      goto LABEL_90;
    }
    goto LABEL_22;
  }
  sub_23F37A694(v28, v26 / v23);
  v33 = v30 * v23;
  v34 = v28;
  v31 = a4 + v33;
  if (v33 < 1 || a1 >= v28)
  {
LABEL_22:
    v36 = v31 - a4;
    if (v23 != -1 || v36 != 0x8000000000000000)
    {
      v38 = v36 / v23;
      v39 = a4;
      goto LABEL_27;
    }
    goto LABEL_89;
  }
  v53 = -v23;
  v54 = v89;
  v80 = *(void (**)(char *, unint64_t, uint64_t))(v90 + 16);
  v81 = v14;
  v78 = a1;
  v79 = a4;
  v77 = -v23;
  while (1)
  {
    v55 = a4;
    v91 = v31;
    v56 = v31 + v53;
    v57 = v82;
    v58 = v80;
    v80(v82, v31 + v53, v54);
    v85 = v34;
    v34 += v53;
    v59 = v81;
    v58(v81, v34, v54);
    v60 = v87(v57, (unint64_t)v59);
    if (v7)
      break;
    v61 = v60;
    v83 = v56;
    v84 = 0;
    v62 = v57;
    v63 = v92;
    v64 = v92 + v53;
    v65 = *(void (**)(char *, uint64_t))(v90 + 8);
    v65(v59, v54);
    v65(v62, v54);
    if ((v61 & 1) != 0)
    {
      if (v63 >= v85 && v64 < v85)
      {
        v7 = v84;
        if (v63 == v85)
        {
          a4 = v79;
          v54 = v89;
        }
        else
        {
          v54 = v89;
          swift_arrayInitWithTakeBackToFront();
LABEL_66:
          a4 = v79;
        }
        v31 = v91;
        goto LABEL_71;
      }
      v54 = v89;
      swift_arrayInitWithTakeFrontToBack();
      v7 = v84;
      goto LABEL_66;
    }
    if (v63 < v91 || v64 >= v91)
    {
      v68 = v83;
      v54 = v89;
      swift_arrayInitWithTakeFrontToBack();
      v31 = v68;
      v7 = v84;
      v34 = v85;
LABEL_70:
      a4 = v79;
      goto LABEL_71;
    }
    v7 = v84;
    v34 = v85;
    v69 = v83;
    if (v63 != v91)
    {
      v54 = v89;
      swift_arrayInitWithTakeBackToFront();
      v31 = v69;
      goto LABEL_70;
    }
    v31 = v83;
    a4 = v79;
    v54 = v89;
LABEL_71:
    v53 = v77;
    v23 = v86;
    if (v31 > a4)
    {
      v92 = v64;
      if (v34 > v78)
        continue;
    }
    goto LABEL_22;
  }
  v73 = *(void (**)(char *, uint64_t))(v90 + 8);
  v73(v59, v54);
  v73(v57, v54);
  v74 = v91 - v55;
  if (v86 == -1 && v74 == 0x8000000000000000)
    goto LABEL_91;
  v39 = v55;
  v38 = v74 / v86;
LABEL_27:
  sub_23F37A694(v39, v38);
}

void sub_23F3AE77C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  char *v17;
  uint64_t v18;

  v4 = sub_23F35D2E8(&qword_256E70D38);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v17 - v8;
  v18 = a2 + *(int *)(sub_23F35D2E8(&qword_256E70D40) + 48);
  v10 = *(int *)(v4 + 48);
  v11 = (uint64_t)&v9[v10];
  v17 = &v9[v10];
  v12 = a1 + v10;
  v13 = sub_23F61BBA8();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v15(v9, a1, v13);
  sub_23F382EF8(v12, v11, &qword_256E70520);
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(a2, v9, v13);
  v16 = (uint64_t)&v7[*(int *)(v4 + 48)];
  v15(v7, a1, v13);
  sub_23F382EF8(v12, v16, &qword_256E70520);
  sub_23F383004(v16, v18, &qword_256E70520);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v7, v13);
  sub_23F3625D8((uint64_t)v17, &qword_256E70520);
}

void sub_23F3AE8EC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  unint64_t v39;
  char *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  char v64;
  char v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t, uint64_t);
  char v68;
  _QWORD *v69;
  uint64_t v70;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v72;
  unint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  void (*v87)(uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  int v102;
  char *v103;
  uint64_t v104;

  v6 = v5;
  v87 = a3;
  v11 = sub_23F35D2E8(&qword_256E70520);
  v94 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v95 = (uint64_t)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v83 = (uint64_t)&v81 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v81 - v16;
  v97 = sub_23F35D2E8(&qword_256E70D38);
  MEMORY[0x24BDAC7A8](v97);
  v86 = (uint64_t)&v81 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_23F61BBA8();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v81 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v21);
  v103 = (char *)&v81 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v82 = (char *)&v81 - v26;
  v27 = sub_23F35D2E8(&qword_256E70D48);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v100 = (uint64_t)&v81 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v96 = (uint64_t)&v81 - v30;
  v31 = sub_23F35D2E8(&qword_256E70D50);
  v32 = MEMORY[0x24BDAC7A8](v31);
  v99 = (uint64_t)&v81 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v32);
  v93 = (uint64_t)&v81 - v34;
  v101 = a5;
  v35 = a5 + 2;
  v36 = a5[2];
  v98 = v35;
  v90 = a1;
  sub_23F617BA0();
  v84 = a2;
  sub_23F617BA0();
  v88 = a4;
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_23F3BCF24();
    v36 = v37;
  }
  v85 = 0;
  v91 = v17;
  v92 = 0;
  v101[2] = v36;
  v104 = v20;
  v38 = v103;
LABEL_4:
  v39 = *(_QWORD *)(v90 + 16);
  if (v92 != v39)
  {
    v40 = v82;
    if (v92 >= v39)
      goto LABEL_41;
    v41 = v92 + 1;
    (*(void (**)(char *, unint64_t, uint64_t))(v20 + 16))(v82, v90+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(_QWORD *)(v20 + 72) * v92, v19);
    v42 = *(_QWORD *)(v84 + 16);
    if (v85 == v42)
    {
      (*(void (**)(char *, uint64_t))(v20 + 8))(v40, v19);
      v43 = 1;
    }
    else
    {
      if (v85 >= v42)
        goto LABEL_42;
      v44 = v85 + 1;
      v45 = v84
          + ((*(unsigned __int8 *)(v94 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80))
          + *(_QWORD *)(v94 + 72) * v85;
      v46 = v96 + *(int *)(v97 + 48);
      (*(void (**)(void))(v20 + 32))();
      sub_23F382EF8(v45, v46, &qword_256E70520);
      v43 = 0;
      v85 = v44;
      v38 = v103;
    }
    v92 = v41;
    goto LABEL_12;
  }
  while (1)
  {
    v43 = 1;
LABEL_12:
    v47 = 1;
    v49 = v96;
    v48 = v97;
    v102 = v43;
    sub_23F36196C(v96, v43, 1, v97);
    v50 = v49;
    v51 = v100;
    sub_23F383004(v50, v100, &qword_256E70D48);
    if (sub_23F36195C(v51, 1, v48) != 1)
    {
      v52 = v86;
      sub_23F383004(v100, v86, &qword_256E70D38);
      v87(v52);
      sub_23F3625D8(v52, &qword_256E70D38);
      v47 = 0;
    }
    v53 = sub_23F35D2E8(&qword_256E70D40);
    v54 = v99;
    sub_23F36196C(v99, v47, 1, v53);
    v55 = v54;
    v56 = v93;
    sub_23F383004(v55, v93, &qword_256E70D50);
    v57 = sub_23F35D2E8(&qword_256E70D40);
    if (sub_23F36195C(v56, 1, v57) == 1)
    {
      swift_release_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      return;
    }
    v58 = v56 + *(int *)(v57 + 48);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 32))(v38, v56, v19);
    sub_23F383004(v58, (uint64_t)v17, &qword_256E70520);
    v59 = v101[1];
    v60 = v59 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
    v61 = *(_QWORD *)(v59 + 16);
    if (*v101)
    {
      swift_retain();
      swift_retain();
      sub_23F3BDB68();
      v63 = v62;
      v65 = v64;
      swift_release();
      swift_release();
      if ((v65 & 1) != 0)
      {
        v17 = v91;
        v20 = v104;
LABEL_23:
        v69 = v101;
        sub_23F3BCB6C();
        sub_23F382EF8((uint64_t)v17, v95, &qword_256E70520);
        v70 = v69[2];
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v69[2] = v70;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v72 = v98;
          sub_23F37B9C0();
          v70 = *v72;
        }
        v73 = *(_QWORD *)(v70 + 16);
        if (v73 >= *(_QWORD *)(v70 + 24) >> 1)
        {
          v80 = v98;
          sub_23F37B9C0();
          v70 = *v80;
        }
        *(_QWORD *)(v70 + 16) = v73 + 1;
        sub_23F383004(v95, v70+ ((*(unsigned __int8 *)(v94 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80))+ *(_QWORD *)(v94 + 72) * v73, &qword_256E70520);
        *v98 = v70;
        v38 = v103;
        goto LABEL_35;
      }
    }
    else
    {
      v89 = v6;
      swift_retain();
      if (!v61)
      {
LABEL_22:
        swift_release();
        v6 = v89;
        v17 = v91;
        v20 = v104;
        goto LABEL_23;
      }
      v63 = 0;
      v66 = *(_QWORD *)(v104 + 72);
      v67 = *(void (**)(char *, uint64_t, uint64_t))(v104 + 16);
      while (1)
      {
        v67(v23, v60, v19);
        sub_23F3B121C(&qword_256E70D30, (void (*)(uint64_t))MEMORY[0x24BEBA368]);
        v68 = sub_23F61C0A0();
        (*(void (**)(char *, uint64_t))(v104 + 8))(v23, v19);
        if ((v68 & 1) != 0)
          break;
        ++v63;
        v60 += v66;
        if (v61 == v63)
          goto LABEL_22;
      }
      swift_release();
      v6 = v89;
      v38 = v103;
    }
    v74 = v98;
    v75 = *v98;
    v76 = swift_isUniquelyReferenced_nonNull_native();
    *v74 = v75;
    if ((v76 & 1) == 0)
    {
      sub_23F3BCF24();
      v75 = v77;
      *v74 = v77;
    }
    v78 = v83;
    if ((v63 & 0x8000000000000000) != 0)
      break;
    if (v63 >= *(_QWORD *)(v75 + 16))
      goto LABEL_40;
    v79 = v75
        + ((*(unsigned __int8 *)(v94 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80))
        + *(_QWORD *)(v94 + 72) * v63;
    v17 = v91;
    sub_23F3A14A8(v79, (uint64_t)v91, v83);
    if (v6)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *v98 = v75;
      sub_23F3625D8((uint64_t)v17, &qword_256E70520);
      (*(void (**)(char *, uint64_t))(v104 + 8))(v38, v19);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    sub_23F3625D8(v79, &qword_256E70520);
    sub_23F383004(v78, v79, &qword_256E70520);
    v20 = v104;
LABEL_35:
    sub_23F3625D8((uint64_t)v17, &qword_256E70520);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v38, v19);
    if ((v102 & 1) == 0)
      goto LABEL_4;
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
}

uint64_t sub_23F3AF11C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v10;

  swift_isUniquelyReferenced_nonNull_native();
  v10 = *v4;
  *v4 = 0x8000000000000000;
  sub_23F3AF1AC(a1, a2, a3, a4);
  sub_23F3B20F8();
  *v4 = v10;
  swift_bridgeObjectRelease();
  return sub_23F38422C();
}

uint64_t sub_23F3AF1AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t result;

  v5 = v4;
  v10 = *v4;
  v11 = sub_23F3754D4(a3, a4);
  if (__OFADD__(*(_QWORD *)(v10 + 16), (v12 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v13 = v11;
  v14 = v12;
  sub_23F35D2E8(&qword_256E6FCB0);
  if ((sub_23F61CA18() & 1) == 0)
    goto LABEL_5;
  v15 = sub_23F3754D4(a3, a4);
  if ((v14 & 1) != (v16 & 1))
  {
LABEL_9:
    result = sub_23F61CC94();
    __break(1u);
    return result;
  }
  v13 = v15;
LABEL_5:
  v17 = *v5;
  if ((v14 & 1) != 0)
  {
    v18 = (uint64_t *)(*(_QWORD *)(v17 + 56) + 16 * v13);
    result = *v18;
    *v18 = a1;
    v18[1] = a2;
  }
  else
  {
    sub_23F37F628(v13, a3, a4, a1, a2, v17);
    sub_23F617BA0();
    return 0;
  }
  return result;
}

void sub_23F3AF2C8()
{
  sub_23F61BBC0();
  sub_23F362928();
}

void *initializeWithTake for EchoToolDefinitionRenderer(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x78uLL);
}

void type metadata accessor for AlphaDirectionalTypedValuePromptRenderer()
{
  sub_23F362C18();
}

void type metadata accessor for AlphaEntityIdentifierValuePromptRenderer()
{
  sub_23F362C18();
}

void type metadata accessor for AlphaEntityValuePromptRenderer()
{
  sub_23F362C18();
}

void type metadata accessor for AlphaTypedValueRenderer()
{
  sub_23F362C18();
}

uint64_t sub_23F3AF340(uint64_t a1)
{
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  sub_23F3B2260();
  return sub_23F3B1BA8(a1 + 80);
}

void sub_23F3AF364(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;

  v4 = *(_OWORD *)((char *)a2 + 24);
  *(_OWORD *)((char *)a1 + 24) = v4;
  sub_23F3B1414(*(double *)&v4);
  v5 = a2[4];
  a1[4] = v5;
  sub_23F3B1414(*(double *)&v5);
  v6 = *(_OWORD *)((char *)a2 + 104);
  *(_OWORD *)((char *)a1 + 104) = v6;
  sub_23F3B1414(*(double *)&v6);
  sub_23F362928();
}

void sub_23F3AF3B8(uint64_t *a1, uint64_t *a2)
{
  sub_23F361AD0(a1, a2);
  sub_23F361AD0(a1 + 5, a2 + 5);
  sub_23F361AD0(a1 + 10, a2 + 10);
  sub_23F362928();
}

void sub_23F3AF3F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  sub_23F3B1548(a1, a2);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v3 + 80);
  v4 = *(_OWORD *)(v2 + 96);
  *(_OWORD *)(v3 + 80) = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v3 + 96) = v4;
  *(_QWORD *)(v3 + 112) = *(_QWORD *)(v2 + 112);
  sub_23F362928();
}

void type metadata accessor for AlphaPrimitiveValueRenderer()
{
  sub_23F362C18();
}

void type metadata accessor for AlphaINPersonRenderer()
{
  sub_23F362C18();
}

void type metadata accessor for AlphaCLPlacemarkPromptRenderer()
{
  sub_23F362C18();
}

void type metadata accessor for AlphaEntitySetterRenderer()
{
  sub_23F362C18();
}

void type metadata accessor for AlphaAssistantSchemaIdentifierRenderer()
{
  sub_23F362C18();
}

void type metadata accessor for AlphaToolDefinitionRenderer()
{
  sub_23F362C18();
}

uint64_t sub_23F3AF490(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return sub_23F3B1FE8(-1);
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
  {
    LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
  }
  else
  {
    v2 = *(_QWORD *)(a1 + 24);
    if (v2 >= 0xFFFFFFFF)
      LODWORD(v2) = -1;
  }
  return sub_23F3B1FE8(v2);
}

uint64_t sub_23F3AF4CC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
      return sub_23F3B1B08(result, a2);
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      return sub_23F3B1B08(result, a2);
  }
  return result;
}

void type metadata accessor for AlphaToolNameRenderer()
{
  sub_23F362C18();
}

void sub_23F3AF518(uint64_t a1)
{
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  sub_23F3B2260();
  if (*(_QWORD *)(a1 + 104))
    sub_23F3B1BA8(a1 + 80);
  else
    sub_23F362928();
}

void sub_23F3AF54C(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  _OWORD *v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  sub_23F3B1414(*(double *)&v4);
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  sub_23F3B1414(*(double *)&v5);
  v6 = (_OWORD *)(a1 + 80);
  v7 = (_OWORD *)(a2 + 80);
  v8 = *(_QWORD *)(a2 + 104);
  if (v8)
  {
    v9 = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 104) = v8;
    *(_QWORD *)(a1 + 112) = v9;
    (**(void (***)(_OWORD *, _OWORD *))(v8 - 8))(v6, v7);
  }
  else
  {
    v10 = *(_OWORD *)(a2 + 96);
    *v6 = *v7;
    *(_OWORD *)(a1 + 96) = v10;
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  }
  sub_23F362928();
}

void sub_23F3AF5C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  __int128 v7;
  __int128 v8;

  sub_23F361AD0((uint64_t *)a1, (uint64_t *)a2);
  sub_23F361AD0((uint64_t *)(a1 + 40), (uint64_t *)(a2 + 40));
  v4 = *(_QWORD *)(a2 + 104);
  if (!*(_QWORD *)(a1 + 104))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 104) = v4;
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 80, a2 + 80);
      goto LABEL_8;
    }
LABEL_7:
    v7 = *(_OWORD *)(a2 + 80);
    v8 = *(_OWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 80) = v7;
    *(_OWORD *)(a1 + 96) = v8;
    goto LABEL_8;
  }
  if (!v4)
  {
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 80);
    goto LABEL_7;
  }
  v5 = (uint64_t *)sub_23F38422C();
  sub_23F361AD0(v5, v6);
LABEL_8:
  sub_23F362B80();
}

void sub_23F3AF65C(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  sub_23F3B2260();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  if (*(_QWORD *)(a1 + 104))
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 80);
  v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  sub_23F362B80();
}

uint64_t sub_23F3AF6D4(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return sub_23F3B1FE8(-1);
  if (a2 < 0 && *(_BYTE *)(a1 + 120))
  {
    LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
  }
  else
  {
    v2 = *(_QWORD *)(a1 + 24);
    if (v2 >= 0xFFFFFFFF)
      LODWORD(v2) = -1;
  }
  return sub_23F3B1FE8(v2);
}

uint64_t sub_23F3AF710(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
      return sub_23F3B1B08(result, a2);
    }
    *(_BYTE *)(result + 120) = 0;
    if (a2)
      return sub_23F3B1B08(result, a2);
  }
  return result;
}

void type metadata accessor for AlphaParameterDefinitionRenderer()
{
  sub_23F362C18();
}

void type metadata accessor for AlphaDynamicEnumerationRenderer()
{
  sub_23F362C18();
}

uint64_t sub_23F3AF77C(uint64_t a1)
{
  uint64_t result;

  result = _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  if (*(_QWORD *)(a1 + 64))
    return _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 40);
  return result;
}

uint64_t sub_23F3AF7B4(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  _OWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = (_OWORD *)(a1 + 40);
  v6 = (_OWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 64);
  if (v7)
  {
    v8 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v7;
    *(_QWORD *)(a1 + 72) = v8;
    (**(void (***)(_OWORD *, _OWORD *))(v7 - 8))(v5, v6);
  }
  else
  {
    v9 = *(_OWORD *)(a2 + 56);
    *v5 = *v6;
    *(_OWORD *)(a1 + 56) = v9;
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  }
  return a1;
}

uint64_t sub_23F3AF828(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  sub_23F361AD0((uint64_t *)a1, (uint64_t *)a2);
  v4 = *(_QWORD *)(a2 + 64);
  if (!*(_QWORD *)(a1 + 64))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 64) = v4;
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 40, a2 + 40);
      return a1;
    }
LABEL_7:
    v5 = *(_OWORD *)(a2 + 40);
    v6 = *(_OWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 40) = v5;
    *(_OWORD *)(a1 + 56) = v6;
    return a1;
  }
  if (!v4)
  {
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 40);
    goto LABEL_7;
  }
  sub_23F361AD0((uint64_t *)(a1 + 40), (uint64_t *)(a2 + 40));
  return a1;
}

uint64_t sub_23F3AF8C0(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 64))
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 40);
  v5 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

void type metadata accessor for AlphaTypeInstanceRenderer()
{
  sub_23F362C18();
}

void type metadata accessor for AlphaDynamicEnumerationCaseRenderer()
{
  sub_23F362C18();
}

uint64_t sub_23F3AF940(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 24))
    return _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  return a1;
}

uint64_t sub_23F3AF950(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v5;

  v3 = *(_QWORD *)(a2 + 24);
  if (v3)
  {
    v4 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v3;
    *(_QWORD *)(a1 + 32) = v4;
    (**(void (***)(uint64_t))(v3 - 8))(a1);
  }
  else
  {
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  return a1;
}

uint64_t sub_23F3AF9A4(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  v4 = *((_QWORD *)a2 + 3);
  if (!*(_QWORD *)(a1 + 24))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 24) = v4;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v4 - 8))(a1, a2);
      return a1;
    }
LABEL_7:
    v5 = *a2;
    v6 = a2[1];
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }
  if (!v4)
  {
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
    goto LABEL_7;
  }
  sub_23F361AD0((uint64_t *)a1, (uint64_t *)a2);
  return a1;
}

uint64_t sub_23F3AFA24(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  if (*(_QWORD *)(a1 + 24))
    _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t sub_23F3AFA68(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 40))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 24);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_23F3AFABC(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

void type metadata accessor for AlphaPrimitiveTypeIdentifierRenderer()
{
  sub_23F362C18();
}

void sub_23F3AFB24(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  sub_23F3B1414(*(double *)&v4);
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  sub_23F3B1414(*(double *)&v5);
  sub_23F362928();
}

void sub_23F3AFB64(uint64_t a1, uint64_t a2)
{
  sub_23F3B1548(a1, a2);
  sub_23F362928();
}

uint64_t sub_23F3AFB80(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return sub_23F3B1FE8(-1);
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
  {
    LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
  }
  else
  {
    v2 = *(_QWORD *)(a1 + 24);
    if (v2 >= 0xFFFFFFFF)
      LODWORD(v2) = -1;
  }
  return sub_23F3B1FE8(v2);
}

uint64_t sub_23F3AFBBC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
      return sub_23F3B1B08(result, a2);
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      return sub_23F3B1B08(result, a2);
  }
  return result;
}

void type metadata accessor for AlphaEnumerationDefinitionPromptRenderer()
{
  sub_23F362C18();
}

void type metadata accessor for AlphaEnumerationCaseDefinitionRenderer()
{
  sub_23F362C18();
}

uint64_t sub_23F3AFC20(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(v4 + 64) = v8;
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(v4 + 40, (uint64_t)(a2 + 5));
    v9 = *(_OWORD *)(a2 + 13);
    *(_OWORD *)(v4 + 104) = v9;
    (**(void (***)(uint64_t, uint64_t))(v9 - 8))(v4 + 80, (uint64_t)(a2 + 10));
    v10 = *(int *)(a3 + 28);
    v11 = v4 + v10;
    v12 = (uint64_t)a2 + v10;
    v13 = sub_23F61B32C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  }
  return v4;
}

uint64_t sub_23F3AFD08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 40);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 80);
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_23F61B32C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_OWORD *sub_23F3AFD5C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = *(_OWORD *)((char *)a2 + 24);
  *(_OWORD *)((char *)a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = a2[4];
  a1[4] = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))((uint64_t)a1 + 40, (uint64_t)a2 + 40);
  v8 = *(_OWORD *)((char *)a2 + 104);
  *(_OWORD *)((char *)a1 + 104) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))((uint64_t)(a1 + 5), (uint64_t)(a2 + 5));
  v9 = *(int *)(a3 + 28);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_23F61B32C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

uint64_t *sub_23F3AFE10(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  sub_23F361AD0(a1, a2);
  sub_23F361AD0(a1 + 5, a2 + 5);
  sub_23F361AD0(a1 + 10, a2 + 10);
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F61B32C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_23F3AFE88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  v5 = *(_OWORD *)(a2 + 96);
  v6 = *(int *)(a3 + 28);
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  v9 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  return a1;
}

uint64_t sub_23F3AFF14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 80);
  v7 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v7;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  v8 = *(int *)(a3 + 28);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_23F3AFFBC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F3AFFC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_23F3B1D54();
    sub_23F362B80();
  }
  else
  {
    v6 = sub_23F384B34();
    sub_23F3B1A44(a1 + *(int *)(a3 + 28), a2, v6);
  }
}

uint64_t sub_23F3B0018()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F3B0024()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F3B218C();
  if (v3)
  {
    *(_QWORD *)(v1 + 24) = (v0 - 1);
    sub_23F362B80();
  }
  else
  {
    v4 = v2;
    v5 = sub_23F384B34();
    sub_23F38370C(v1 + *(int *)(v4 + 28), v0, v0, v5);
  }
}

uint64_t type metadata accessor for AlphaTypeIdentifierRenderer(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E70AE0);
}

uint64_t sub_23F3B0084()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F61B32C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23F3B00FC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(v4 + 64) = v8;
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(v4 + 40, (uint64_t)(a2 + 5));
    v9 = *(_OWORD *)(a2 + 13);
    *(_OWORD *)(v4 + 104) = v9;
    (**(void (***)(uint64_t, uint64_t))(v9 - 8))(v4 + 80, (uint64_t)(a2 + 10));
    v10 = *((_OWORD *)a2 + 9);
    *(_OWORD *)(v4 + 144) = v10;
    (**(void (***)(uint64_t, uint64_t))(v10 - 8))(v4 + 120, (uint64_t)(a2 + 15));
    v11 = *(int *)(a3 + 32);
    v12 = v4 + v11;
    v13 = (uint64_t)a2 + v11;
    v14 = sub_23F61B32C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return v4;
}

uint64_t sub_23F3B0204(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 40);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 80);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 120);
  v4 = a1 + *(int *)(a2 + 32);
  v5 = sub_23F61B32C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_OWORD *sub_23F3B0260(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v6 = *(_OWORD *)((char *)a2 + 24);
  *(_OWORD *)((char *)a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = a2[4];
  a1[4] = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))((uint64_t)a1 + 40, (uint64_t)a2 + 40);
  v8 = *(_OWORD *)((char *)a2 + 104);
  *(_OWORD *)((char *)a1 + 104) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))((uint64_t)(a1 + 5), (uint64_t)(a2 + 5));
  v9 = a2[9];
  a1[9] = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))((uint64_t)a1 + 120, (uint64_t)a2 + 120);
  v10 = *(int *)(a3 + 32);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_23F61B32C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  return a1;
}

uint64_t *sub_23F3B0334(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  sub_23F361AD0(a1, a2);
  sub_23F361AD0(a1 + 5, a2 + 5);
  sub_23F361AD0(a1 + 10, a2 + 10);
  sub_23F361AD0(a1 + 15, a2 + 15);
  v6 = *(int *)(a3 + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23F61B32C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_23F3B03B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  v6 = *(int *)(a3 + 32);
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  v9 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  return a1;
}

uint64_t sub_23F3B045C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 80);
  v7 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v7;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 120);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  v8 = *(int *)(a3 + 32);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_23F3B0524()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F3B0530(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_23F3B1D54();
    sub_23F362B80();
  }
  else
  {
    v6 = sub_23F384B34();
    sub_23F3B1A44(a1 + *(int *)(a3 + 32), a2, v6);
  }
}

uint64_t sub_23F3B0580()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F3B058C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F3B218C();
  if (v3)
  {
    *(_QWORD *)(v1 + 24) = (v0 - 1);
    sub_23F362B80();
  }
  else
  {
    v4 = v2;
    v5 = sub_23F384B34();
    sub_23F38370C(v1 + *(int *)(v4 + 32), v0, v0, v5);
  }
}

uint64_t type metadata accessor for AlphaRenderableToolDefinitionPromptRenderer(uint64_t a1)
{
  return sub_23F365C34(a1, qword_256E70B78);
}

uint64_t sub_23F3B05EC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F61B32C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23F3B0664(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(sub_23F35D2E8(&qword_256E70A60) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = sub_23F6170CC();
    if (sub_23F36195C((uint64_t)a2, 1, v6))
    {
      memcpy(a1, a2, *(_QWORD *)(v4 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      sub_23F36196C((uint64_t)a1, 0, 1, v6);
    }
  }
  return a1;
}

uint64_t sub_23F3B0728(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_23F6170CC();
  result = sub_23F36195C(a1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return result;
}

void *sub_23F3B0780(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_23F6170CC();
  if (sub_23F36195C((uint64_t)a2, 1, v4))
  {
    v5 = sub_23F35D2E8(&qword_256E70A60);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    sub_23F36196C((uint64_t)a1, 0, 1, v4);
  }
  return a1;
}

void *sub_23F3B081C(void *a1, const void *a2)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_23F6170CC();
  v5 = sub_23F36195C((uint64_t)a1, 1, v4);
  v6 = sub_23F36195C((uint64_t)a2, 1, v4);
  if (!v5)
  {
    v7 = *(_QWORD *)(v4 - 8);
    if (!v6)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 24))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v6)
  {
LABEL_6:
    v8 = sub_23F35D2E8(&qword_256E70A60);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  sub_23F36196C((uint64_t)a1, 0, 1, v4);
  return a1;
}

void *sub_23F3B0900(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_23F6170CC();
  if (sub_23F36195C((uint64_t)a2, 1, v4))
  {
    v5 = sub_23F35D2E8(&qword_256E70A60);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
    sub_23F36196C((uint64_t)a1, 0, 1, v4);
  }
  return a1;
}

void *sub_23F3B099C(void *a1, const void *a2)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_23F6170CC();
  v5 = sub_23F36195C((uint64_t)a1, 1, v4);
  v6 = sub_23F36195C((uint64_t)a2, 1, v4);
  if (!v5)
  {
    v7 = *(_QWORD *)(v4 - 8);
    if (!v6)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 40))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v6)
  {
LABEL_6:
    v8 = sub_23F35D2E8(&qword_256E70A60);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  sub_23F36196C((uint64_t)a1, 0, 1, v4);
  return a1;
}

uint64_t sub_23F3B0A80()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F3B0A8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E70A60);
  return sub_23F36195C(a1, a2, v4);
}

uint64_t sub_23F3B0AC4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F3B0AD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E70A60);
  return sub_23F36196C(a1, a2, a2, v4);
}

uint64_t type metadata accessor for AlphaAppNameRenderer(uint64_t a1)
{
  return sub_23F365C34(a1, (uint64_t *)&unk_256E70C18);
}

void sub_23F3B0B20()
{
  unint64_t v0;

  sub_23F3B0B88();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_23F3B0B88()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256E70C28[0])
  {
    sub_23F6170CC();
    v0 = sub_23F61C730();
    if (!v1)
      atomic_store(v0, qword_256E70C28);
  }
}

uint64_t sub_23F3B0BDC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  sub_23F3B1E74();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_23F3B19B8(v1);
  return sub_23F3AC4E0(v2, v3, v4, v5, v6);
}

uint64_t sub_23F3B0C34()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  sub_23F3B1E74();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_23F3B19B8(v1);
  return sub_23F3AC3D4(v2, v3, v4, v5, v6);
}

unint64_t sub_23F3B0C8C()
{
  unint64_t result;

  result = qword_256E70CA0;
  if (!qword_256E70CA0)
  {
    result = MEMORY[0x242670A44](MEMORY[0x24BEE1E18], MEMORY[0x24BEE1E08]);
    atomic_store(result, (unint64_t *)&qword_256E70CA0);
  }
  return result;
}

void sub_23F3B0CC8(_QWORD *a1, uint64_t *a2)
{
  if (!*a1)
  {
    sub_23F35EB74(a2);
    sub_23F3B2124();
  }
  sub_23F362928();
}

uint64_t sub_23F3B0CFC(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_23F3B0D08(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) == 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_23F3B0D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t result;

  if ((a6 & 1) == 0)
  {
    swift_unknownObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23F3B0D44(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) == 0)
    return sub_23F617BA0();
  return result;
}

uint64_t sub_23F3B0D54(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return sub_23F617BA0();
  return result;
}

uint64_t sub_23F3B0D60(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  return sub_23F3A5874(a1, a2, a3, a4, a5, *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24));
}

uint64_t sub_23F3B0D68()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_23F3B0D8C(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_23F3A3B58(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_23F3B0DA4(uint64_t result)
{
  *(_BYTE *)(result + 128) = 1;
  return result;
}

uint64_t sub_23F3B0DB0(uint64_t a1)
{
  sub_23F3B0E10(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_BYTE *)(a1 + 128));
  return a1;
}

uint64_t sub_23F3B0E10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  uint64_t result;

  if ((a17 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23F39BB1C(a5, a6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_23F39BB1C(a13, a14);
  }
  return result;
}

_QWORD *sub_23F3B0F00(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[4];
  v3 = a1[5];
  v5 = a1[13];
  v6 = a1[12];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23F39BB1C(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23F39BB1C(v6, v5);
  return a1;
}

uint64_t sub_23F3B0FC0(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_name);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_23F61C10C();

  return v3;
}

void sub_23F3B1020(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _BYTE v4[40];

  sub_23F3ACE4C(*a1, a1[1], a1[2], *(_QWORD *)a2, *(_BYTE *)(a2 + 8), (uint64_t)v4);
  sub_23F383004((uint64_t)v4, a3, &qword_256E70D10);
}

void sub_23F3B1078(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_23F3B1020(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_23F3B1080(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if ((a4 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23F3B10B0(uint64_t a1)
{
  sub_23F3B10E4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  return a1;
}

uint64_t sub_23F3B10E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if ((a5 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23F3B1120()
{
  return sub_23F3A1064() & 1;
}

uint64_t sub_23F3B113C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_23F3A1120(a1, *(_QWORD **)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), a2);
}

uint64_t sub_23F3B115C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) == 0)
    return sub_23F39BB1C(a1, a2);
  return a1;
}

uint64_t sub_23F3B1168(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t result;

  if ((a8 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_23F39BB1C(a4, a5);
  }
  return result;
}

uint64_t sub_23F3B11CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) == 0)
    return sub_23F39BA5C(a1, a2);
  return a1;
}

uint64_t sub_23F3B11D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ParameterPromptMap(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_23F3B121C(_QWORD *a1, void (*a2)(uint64_t))
{
  if (!*a1)
  {
    a2(255);
    sub_23F3B2124();
  }
  sub_23F362928();
}

void sub_23F3B1250(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_23F3A30F4(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_23F3B1268(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = *(_BYTE *)(v2 + 24);
  v9 = *(_QWORD *)(v2 + 32);
  v8 = *(_QWORD *)(v2 + 40);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v10;
  *v10 = v3;
  v10[1] = sub_23F3609AC;
  return sub_23F3AA824(a1, a2, v6, v7, v9, v8);
}

uint64_t sub_23F3B12EC(uint64_t (*a1)(void))
{
  return a1();
}

void type metadata accessor for AlphaUTTypeRenderer()
{
  sub_23F362C18();
}

uint64_t sub_23F3B1350(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23F3B13A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 96))(v2, v1);
}

uint64_t sub_23F3B13B0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23F3B13CC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_23F3B60F0(a1, a2, a3);
}

uint64_t sub_23F3B13D4()
{
  return swift_task_switch();
}

uint64_t sub_23F3B13E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 96))(v1);
}

uint64_t sub_23F3B13F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return 0;
}

void sub_23F3B1400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_23F39BA98(a1, a2, a3, a4, v12, v9, v10, v11, a9);
}

uint64_t sub_23F3B1414(double a1)
{
  return (**(uint64_t (***)(void))(*(_QWORD *)&a1 - 8))();
}

_QWORD *sub_23F3B1424(_QWORD *a1, uint64_t a2)
{
  return sub_23F35EA9C(a1, a2);
}

double sub_23F3B1438(uint64_t a1)
{
  uint64_t v1;
  double result;

  *(_QWORD *)(v1 + 16) = a1;
  result = 0.0;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 49) = 0u;
  return result;
}

uint64_t sub_23F3B1450()
{
  return swift_beginAccess();
}

uint64_t sub_23F3B1458()
{
  return swift_task_dealloc();
}

uint64_t sub_23F3B1478()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[30] + 8))(v0[31], v0[29]);
}

uint64_t sub_23F3B14B0()
{
  return swift_endAccess();
}

uint64_t sub_23F3B14D4()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 8))(v1, v0);
}

void sub_23F3B14F0(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t sub_23F3B1504()
{
  return swift_task_alloc();
}

uint64_t sub_23F3B1518(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, a1, v2);
}

uint64_t sub_23F3B152C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 144) = a1;
  return sub_23F61C790();
}

__n128 sub_23F3B1548(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __n128 result;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  result = *(__n128 *)(a2 + 56);
  *(__n128 *)(a1 + 56) = result;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return result;
}

void sub_23F3B15A8(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 368) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_23F3B15C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, _QWORD)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, *(_QWORD *)(v3 - 256));
}

uint64_t sub_23F3B15D4()
{
  return type metadata accessor for ParameterPromptMap(0);
}

uint64_t sub_23F3B15DC()
{
  return swift_task_switch();
}

BOOL sub_23F3B1604(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

double sub_23F3B1614(uint64_t a1)
{
  uint64_t v1;
  double result;

  result = 0.0;
  *(_OWORD *)v1 = 0u;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 48) = 0u;
  *(_BYTE *)(v1 + 64) = 1;
  *(_QWORD *)(v1 + 72) = a1;
  return result;
}

uint64_t sub_23F3B1630()
{
  return 0;
}

uint64_t sub_23F3B164C()
{
  return 0;
}

void sub_23F3B1668()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F39BA98(v6, v7, v8, v4, v5, v0, v1, v2, v3);
}

uint64_t sub_23F3B1690()
{
  return sub_23F61B9EC();
}

void sub_23F3B1698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_23F39BA98(v15, v14, *(_QWORD *)(v16 - 168), v13, v12, v11, v10, v9, a9);
}

uint64_t sub_23F3B16C0()
{
  return swift_arrayDestroy();
}

uint64_t sub_23F3B16D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 24))(v1, v0, *(_QWORD *)(v4 - 168), v2, v3);
}

void sub_23F3B1708(__n128 a1)
{
  __n128 *v1;

  v1[2] = a1;
  v1[3] = a1;
  *v1 = a1;
  v1[1] = a1;
  v1[4].n128_u8[0] = 1;
}

id sub_23F3B171C()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, (SEL)(v1 + 3420));
}

uint64_t sub_23F3B1728()
{
  return sub_23F619E98();
}

uint64_t sub_23F3B1758()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 72) = v0;
  return swift_task_dealloc();
}

void sub_23F3B1778(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F3663AC(v2, a2);
}

uint64_t sub_23F3B1780(uint64_t a1)
{
  uint64_t v1;

  return sub_23F36195C(v1, 1, a1);
}

uint64_t sub_23F3B17D4()
{
  return swift_arrayDestroy();
}

uint64_t sub_23F3B17DC()
{
  uint64_t v0;

  return v0;
}

void sub_23F3B1804(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X2>, uint64_t a3@<X8>)
{
  sub_23F362600(a1, *(_QWORD *)(a3 - 256), a2);
}

uint64_t sub_23F3B1810()
{
  return swift_projectBox();
}

uint64_t sub_23F3B181C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_23F3AB5E0(a1, a2, a3, a4);
}

uint64_t sub_23F3B182C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23F3B183C()
{
  return swift_task_switch();
}

void sub_23F3B184C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23F37AE00(a1, a2, (uint64_t *)(v2 - 128));
}

uint64_t sub_23F3B1858()
{
  return swift_projectBox();
}

uint64_t sub_23F3B1860()
{
  uint64_t v0;

  return sub_23F3B0CFC(v0, 0);
}

uint64_t sub_23F3B186C@<X0>(void (*a1)(void)@<X4>, uint64_t a2@<X5>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 168) = a3;
  return sub_23F3A91BC(v4, v3, a3, *(_QWORD *)(v5 - 176), a1, a2);
}

double sub_23F3B1888()
{
  _QWORD *v0;
  uint64_t v1;
  double result;

  sub_23F35EA9C(v0, v0[3]);
  result = 0.0;
  *(_OWORD *)(v1 - 128) = 0u;
  *(_OWORD *)(v1 - 112) = 0u;
  *(_OWORD *)(v1 - 160) = 0u;
  *(_OWORD *)(v1 - 144) = 0u;
  *(_BYTE *)(v1 - 96) = -1;
  return result;
}

uint64_t sub_23F3B18BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 96))(v0, v1);
}

void sub_23F3B18CC()
{
  void *v0;

}

uint64_t sub_23F3B18D8()
{
  return type metadata accessor for RenderableTool();
}

uint64_t sub_23F3B18F4()
{
  return sub_23F61BBD8();
}

void sub_23F3B1910()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_23F528350(0, 0xE000000000000000, v0, v3, v2, v1);
}

uint64_t sub_23F3B192C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F3B1950()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 96))(v0, v2);
}

void sub_23F3B1960(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23F3663AC(v2, a2);
}

void sub_23F3B1968()
{
  uint64_t v0;

  sub_23F369004(v0);
}

void sub_23F3B1970(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  sub_23F37AE00(0xD000000000000032, (a1 - 32) | 0x8000000000000000, &a27);
}

void sub_23F3B1988(float a1)
{
  float *v1;

  *v1 = a1;
}

void sub_23F3B1998()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t sub_23F3B19B8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

void sub_23F3B19D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_23F39BA98(a1, a2, a3, v9, v13, v10, v12, v11, a9);
}

void sub_23F3B19F0()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t sub_23F3B1A04()
{
  return sub_23F61C61C();
}

uint64_t sub_23F3B1A0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v1 + 32))(v2, v0, *(_QWORD *)(v3 - 192));
}

uint64_t sub_23F3B1A44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F36195C(a1, a2, a3);
}

uint64_t sub_23F3B1A50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

uint64_t sub_23F3B1A68(uint64_t a1)
{
  uint64_t (*v1)(_QWORD, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(*(_QWORD *)(v3 - 264), a1, v2);
}

BOOL sub_23F3B1A80@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

double sub_23F3B1A8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double result;

  *(_QWORD *)v1 = v2;
  *(_QWORD *)(v1 + 8) = v4;
  *(_QWORD *)(v1 + 16) = v3;
  result = 0.0;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 49) = 0u;
  *(_QWORD *)(v1 + 72) = a1;
  return result;
}

uint64_t sub_23F3B1AC4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F3B1AD0()
{
  return sub_23F619088();
}

_QWORD *sub_23F3B1ADC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *result;

  result = sub_23F35EA9C(v0, v0[3]);
  *(_QWORD *)(v2 - 176) = v1;
  return result;
}

uint64_t sub_23F3B1B08(uint64_t result, int a2)
{
  *(_QWORD *)(result + 24) = (a2 - 1);
  return result;
}

double sub_23F3B1B28@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double result;

  *(_QWORD *)a1 = v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v2;
  result = 0.0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 49) = 0u;
  return result;
}

uint64_t sub_23F3B1B44(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;

  return sub_23F3B60F0(a1, v1, v2);
}

void sub_23F3B1B50(_QWORD *a1)
{
  uint64_t *v1;

  sub_23F3B0CC8(a1, v1);
}

void sub_23F3B1B58(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint8_t *v4;
  NSObject *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v5, v6, a4, v4, 2u);
}

void sub_23F3B1B6C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_23F3625D8(v2, a2);
}

uint64_t sub_23F3B1B74()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_23F3B1B80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 488) + 8))(v1, v2);
}

uint64_t sub_23F3B1B94()
{
  return sub_23F61B92C();
}

uint64_t sub_23F3B1BA8(uint64_t a1)
{
  return _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
}

uint64_t sub_23F3B1BB0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 16);
}

uint64_t sub_23F3B1BCC(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_23F3B1BD4()
{
  return sub_23F61C61C();
}

uint64_t sub_23F3B1BDC()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F39BA5C(v1, v0);
}

uint64_t sub_23F3B1BF0()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F39BA5C(v1, v0);
}

uint64_t sub_23F3B1C04()
{
  return swift_task_alloc();
}

uint64_t sub_23F3B1C18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, a1, v3);
}

uint64_t sub_23F3B1C2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_23F3B11CC(a1, v2, v1, v3, 0);
}

uint64_t sub_23F3B1C40()
{
  return sub_23F61BC8C();
}

uint64_t sub_23F3B1C68()
{
  return 0;
}

uint64_t sub_23F3B1CBC()
{
  return sub_23F61C280();
}

uint64_t sub_23F3B1CC8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_23F3B1CD0()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_23F3B1CDC()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_23F3B1CE4()
{
  uint64_t *v0;

  return sub_23F35D2E8(v0);
}

uint64_t sub_23F3B1CF8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F3B1D04()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F39BA5C(v1, v0);
}

void sub_23F3B1D18()
{
  sub_23F37B47C();
}

uint64_t sub_23F3B1D54()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t sub_23F3B1D6C()
{
  return sub_23F619E8C();
}

uint64_t sub_23F3B1D80()
{
  return sub_23F61C16C();
}

uint64_t sub_23F3B1D88()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F3B1DA0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F3B1DD8()
{
  return sub_23F61CC64();
}

uint64_t sub_23F3B1DE8()
{
  return sub_23F61C280();
}

uint64_t sub_23F3B1DF8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_23F3B1E00()
{
  return sub_23F61BC2C();
}

uint64_t sub_23F3B1E08(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_23F3B1E10()
{
  return 0;
}

uint64_t sub_23F3B1E28()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 232) + 8))(v0, *(_QWORD *)(v1 - 224));
}

void sub_23F3B1E48()
{
  void *v0;

}

uint64_t sub_23F3B1E50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for FullPlannerPreferences();
}

uint64_t sub_23F3B1E60()
{
  uint64_t v0;

  return v0;
}

id sub_23F3B1E6C(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

BOOL sub_23F3B1E8C(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_23F3B1E9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_23F3B1EA4()
{
  return sub_23F617BA0();
}

uint64_t sub_23F3B1EAC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 224);
}

uint64_t sub_23F3B1EE0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

double sub_23F3B1EEC()
{
  uint64_t v0;
  double result;

  result = 0.0;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)v0 = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_BYTE *)(v0 + 64) = 1;
  return result;
}

double sub_23F3B1F04()
{
  uint64_t v0;
  double result;

  result = 0.0;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)v0 = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_BYTE *)(v0 + 64) = 1;
  return result;
}

uint64_t sub_23F3B1F1C()
{
  return swift_endAccess();
}

uint64_t sub_23F3B1F24(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return v1(a1, *(_QWORD *)(v2 - 256), v3, v4);
}

uint64_t sub_23F3B1F4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 104))(v2, a2, v3);
}

uint64_t sub_23F3B1F5C()
{
  return sub_23F61BC5C();
}

uint64_t sub_23F3B1F64(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_23F3B1F6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return sub_23F3AF11C(a1, a2, v3, v2);
}

uint64_t sub_23F3B1F7C(uint64_t a1, int64_t a2)
{
  return sub_23F37B860(a1, a2, 1);
}

uint64_t sub_23F3B1F84()
{
  return sub_23F61C10C();
}

void sub_23F3B1F8C(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X2>, uint64_t a3@<X8>)
{
  sub_23F362600(a1, *(_QWORD *)(a3 - 256), a2);
}

void sub_23F3B1FA4()
{
  void *v0;

}

void sub_23F3B1FB0()
{
  void *v0;

}

void sub_23F3B1FBC()
{
  sub_23F3A2898();
}

void sub_23F3B1FC8(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *v1 = v8;
  v1[1] = v7;
  v1[2] = a1;
  v1[3] = v6;
  v1[4] = v5;
  v1[5] = v4;
  v1[6] = v3;
  v1[7] = v2;
}

uint64_t sub_23F3B1FDC()
{
  return sub_23F61BB30();
}

uint64_t sub_23F3B1FE8@<X0>(int a1@<W8>)
{
  return (a1 + 1);
}

uint64_t sub_23F3B1FF0()
{
  return sub_23F61B6D4();
}

void sub_23F3B1FF8(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 280) = a1;
}

uint64_t sub_23F3B2004()
{
  return swift_projectBox();
}

void sub_23F3B2010(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

void sub_23F3B201C()
{
  _QWORD *v0;
  _QWORD *v1;

  *v0 = *v1;
}

uint64_t sub_23F3B2028()
{
  return swift_projectBox();
}

uint64_t sub_23F3B2034()
{
  return 10;
}

uint64_t sub_23F3B2040()
{
  return sub_23F61A018();
}

uint64_t sub_23F3B204C()
{
  return sub_23F61C1D8();
}

uint64_t sub_23F3B2054()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F3754D4(v1, v0);
}

uint64_t sub_23F3B2060()
{
  return swift_retain();
}

uint64_t sub_23F3B2068()
{
  return swift_unknownObjectRelease();
}

void sub_23F3B2070()
{
  uint64_t v0;

  sub_23F39E5C4(v0);
}

uint64_t sub_23F3B207C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;

  return v3(a1, a2, a3, v4, v5);
}

uint64_t sub_23F3B2088()
{
  uint64_t v0;

  return v0;
}

id sub_23F3B209C(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

__n128 sub_23F3B20A8()
{
  uint64_t v0;
  __int128 v1;

  v1 = *(_OWORD *)(v0 - 160);
  *(_OWORD *)(v0 - 192) = *(_OWORD *)(v0 - 144);
  *(_OWORD *)(v0 - 176) = v1;
  return *(__n128 *)(v0 - 128);
}

uint64_t sub_23F3B20BC(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_23F3B20C4()
{
  return sub_23F61C088();
}

uint64_t sub_23F3B20CC()
{
  return swift_task_alloc();
}

uint64_t sub_23F3B20D4()
{
  return sub_23F61BB3C();
}

uint64_t sub_23F3B2104()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v2, v0);
}

uint64_t sub_23F3B2110(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_23F3B2118()
{
  uint64_t v0;

  return v0;
}

void sub_23F3B2124()
{
  JUMPOUT(0x242670A44);
}

uint64_t sub_23F3B2130()
{
  return sub_23F619088();
}

BOOL sub_23F3B2138@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_23F3B214C()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F5255BC(v0, *(_QWORD *)(v1 + 16));
}

uint64_t sub_23F3B2158(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 128) = result;
  return result;
}

uint64_t sub_23F3B2178@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t sub_23F3B21A0()
{
  return sub_23F61BCE0();
}

uint64_t sub_23F3B21AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_23F35EA9C((_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 104));
  return v1;
}

uint64_t sub_23F3B21DC(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

_QWORD *sub_23F3B21E4(_QWORD *a1)
{
  uint64_t v1;

  return sub_23F35EA9C(a1, v1);
}

void sub_23F3B21EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_23F362600(v4, v3, a3);
}

uint64_t sub_23F3B21F8()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F3754D4(v1, v0);
}

void sub_23F3B2204()
{
  sub_23F377650();
}

uint64_t sub_23F3B2210()
{
  return sub_23F61B2FC();
}

uint64_t sub_23F3B221C()
{
  uint64_t v0;

  return v0;
}

void sub_23F3B2230()
{
  void *v0;

}

void sub_23F3B2238(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_23F3625D8(v2, a2);
}

uint64_t sub_23F3B2240@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_23F3B224C(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_23F3B2254(uint64_t a1, int64_t a2)
{
  return sub_23F37B860(0, a2, 0);
}

uint64_t sub_23F3B2260()
{
  uint64_t v0;

  return _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 40);
}

uint64_t sub_23F3B2274()
{
  return swift_release();
}

char *sub_23F3B227C(char *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = (char *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23F61B32C();
    (*(void (**)(char *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = &a1[v8];
    v10 = (_OWORD *)((char *)a2 + v8);
    v11 = *(_OWORD *)((char *)v10 + 24);
    *(_OWORD *)&a1[v8 + 24] = v11;
    (**(void (***)(char *, _OWORD *))(v11 - 8))(&a1[v8], v10);
    v12 = v10[4];
    *((_OWORD *)v9 + 4) = v12;
    (**(void (***)(uint64_t, uint64_t))(v12 - 8))((uint64_t)(v9 + 40), (uint64_t)v10 + 40);
    v13 = *(_OWORD *)((char *)v10 + 104);
    *(_OWORD *)(v9 + 104) = v13;
    (**(void (***)(uint64_t, uint64_t))(v13 - 8))((uint64_t)(v9 + 80), (uint64_t)(v10 + 5));
    v14 = v10[9];
    *((_OWORD *)v9 + 9) = v14;
    (**(void (***)(uint64_t, uint64_t))(v14 - 8))((uint64_t)(v9 + 120), (uint64_t)v10 + 120);
    v15 = *(_OWORD *)((char *)v10 + 184);
    *(_OWORD *)(v9 + 184) = v15;
    (**(void (***)(uint64_t, uint64_t))(v15 - 8))((uint64_t)(v9 + 160), (uint64_t)(v10 + 10));
  }
  return a1;
}

uint64_t sub_23F3B23A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v5);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v5 + 40);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v5 + 80);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v5 + 120);
  return _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v5 + 160);
}

uint64_t sub_23F3B240C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v6 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = *(_OWORD *)((char *)v9 + 24);
  *(_OWORD *)(a1 + v7 + 24) = v10;
  (**(void (***)(uint64_t, _OWORD *))(v10 - 8))(a1 + v7, v9);
  v11 = v9[4];
  v8[4] = v11;
  (**(void (***)(uint64_t, uint64_t))(v11 - 8))((uint64_t)v8 + 40, (uint64_t)v9 + 40);
  v12 = *(_OWORD *)((char *)v9 + 104);
  *(_OWORD *)((char *)v8 + 104) = v12;
  (**(void (***)(uint64_t, uint64_t))(v12 - 8))((uint64_t)(v8 + 5), (uint64_t)(v9 + 5));
  v13 = v9[9];
  v8[9] = v13;
  (**(void (***)(uint64_t, uint64_t))(v13 - 8))((uint64_t)v8 + 120, (uint64_t)v9 + 120);
  v14 = *(_OWORD *)((char *)v9 + 184);
  *(_OWORD *)((char *)v8 + 184) = v14;
  (**(void (***)(uint64_t, uint64_t))(v14 - 8))((uint64_t)(v8 + 10), (uint64_t)(v9 + 10));
  return a1;
}

uint64_t sub_23F3B2508(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;

  v6 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  sub_23F361AD0((uint64_t *)(a1 + v7), v9);
  sub_23F361AD0(v8 + 5, v9 + 5);
  sub_23F361AD0(v8 + 10, v9 + 10);
  sub_23F361AD0(v8 + 15, v9 + 15);
  sub_23F361AD0(v8 + 20, v9 + 20);
  return a1;
}

uint64_t sub_23F3B25A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  memcpy((void *)(a1 + *(int *)(a3 + 20)), (const void *)(a2 + *(int *)(a3 + 20)), 0xC8uLL);
  return a1;
}

uint64_t sub_23F3B2604(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v6 = sub_23F61B32C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1 + v7);
  v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v8 + 40);
  *(_OWORD *)(v8 + 40) = *(_OWORD *)(v9 + 40);
  *(_OWORD *)(v8 + 56) = *(_OWORD *)(v9 + 56);
  *(_QWORD *)(v8 + 72) = *(_QWORD *)(v9 + 72);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v8 + 80);
  v11 = *(_OWORD *)(v9 + 96);
  *(_OWORD *)(v8 + 80) = *(_OWORD *)(v9 + 80);
  *(_OWORD *)(v8 + 96) = v11;
  *(_QWORD *)(v8 + 112) = *(_QWORD *)(v9 + 112);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v8 + 120);
  *(_OWORD *)(v8 + 120) = *(_OWORD *)(v9 + 120);
  *(_OWORD *)(v8 + 136) = *(_OWORD *)(v9 + 136);
  *(_QWORD *)(v8 + 152) = *(_QWORD *)(v9 + 152);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v8 + 160);
  v12 = *(_OWORD *)(v9 + 176);
  *(_OWORD *)(v8 + 160) = *(_OWORD *)(v9 + 160);
  *(_OWORD *)(v8 + 176) = v12;
  *(_QWORD *)(v8 + 192) = *(_QWORD *)(v9 + 192);
  return a1;
}

uint64_t sub_23F3B26E8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F3B26F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = sub_23F61B32C();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return sub_23F36195C(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 24);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_23F3B2770()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F3B277C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = sub_23F61B32C();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return sub_23F36196C(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for AlphaStatementResultParser()
{
  uint64_t result;

  result = qword_256E70DE0;
  if (!qword_256E70DE0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F3B282C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F61B32C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23F3B289C(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;

  v18 = a2;
  v19 = a3;
  v4 = type metadata accessor for StatementSegment(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BEE4AF8];
  sub_23F37BB60();
  v8 = v20;
  v9 = *(_QWORD *)(a1 + 16);
  sub_23F617BA0();
  v17 = a1;
  if (v9)
  {
    v10 = 0;
    v11 = (uint64_t *)(a1 + 48);
    do
    {
      v12 = *(v11 - 1);
      v13 = *v11;
      v14 = *(v11 - 2);
      sub_23F617BA0();
      sub_23F617BA0();
      v18(v10, v14, v12, v13);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v20 = v8;
      v15 = *(_QWORD *)(v8 + 16);
      if (v15 >= *(_QWORD *)(v8 + 24) >> 1)
      {
        sub_23F37BB60();
        v8 = v20;
      }
      ++v10;
      v11 += 3;
      *(_QWORD *)(v8 + 16) = v15 + 1;
      sub_23F3B5AD4((uint64_t)v7, v8+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v15);
    }
    while (v9 != v10);
  }
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_23F3B2A1C(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)(v5 + 536) = v4;
  *(_QWORD *)(v5 + 528) = a4;
  *(_QWORD *)(v5 + 520) = a3;
  *(_BYTE *)(v5 + 193) = a2;
  *(_QWORD *)(v5 + 512) = a1;
  v6 = sub_23F61A504();
  *(_QWORD *)(v5 + 544) = v6;
  *(_QWORD *)(v5 + 552) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 560) = sub_23F3666CC();
  *(_QWORD *)(v5 + 568) = sub_23F3666CC();
  *(_QWORD *)(v5 + 576) = sub_23F3666CC();
  *(_QWORD *)(v5 + 584) = sub_23F3666CC();
  v7 = sub_23F618284();
  *(_QWORD *)(v5 + 592) = v7;
  *(_QWORD *)(v5 + 600) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v5 + 608) = sub_23F366578();
  v8 = sub_23F61820C();
  *(_QWORD *)(v5 + 616) = v8;
  *(_QWORD *)(v5 + 624) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v5 + 632) = sub_23F366578();
  v9 = sub_23F618350();
  *(_QWORD *)(v5 + 640) = v9;
  *(_QWORD *)(v5 + 648) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v5 + 656) = sub_23F366578();
  v10 = sub_23F618230();
  *(_QWORD *)(v5 + 664) = v10;
  *(_QWORD *)(v5 + 672) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v5 + 680) = sub_23F366578();
  v11 = sub_23F6182F0();
  *(_QWORD *)(v5 + 688) = v11;
  *(_QWORD *)(v5 + 696) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v5 + 704) = sub_23F366578();
  v12 = sub_23F619E98();
  *(_QWORD *)(v5 + 712) = v12;
  *(_QWORD *)(v5 + 720) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v5 + 728) = sub_23F3666CC();
  *(_QWORD *)(v5 + 736) = sub_23F3666CC();
  *(_QWORD *)(v5 + 744) = sub_23F3666CC();
  *(_QWORD *)(v5 + 752) = sub_23F3666CC();
  *(_QWORD *)(v5 + 760) = type metadata accessor for DirectionalTypedValue();
  *(_QWORD *)(v5 + 768) = sub_23F366578();
  v13 = sub_23F617DD4();
  *(_QWORD *)(v5 + 776) = v13;
  *(_QWORD *)(v5 + 784) = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v5 + 792) = sub_23F366578();
  v14 = sub_23F618134();
  *(_QWORD *)(v5 + 800) = v14;
  *(_QWORD *)(v5 + 808) = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v5 + 816) = sub_23F366578();
  v15 = sub_23F61ACA8();
  *(_QWORD *)(v5 + 824) = v15;
  *(_QWORD *)(v5 + 832) = *(_QWORD *)(v15 - 8);
  *(_QWORD *)(v5 + 840) = sub_23F366578();
  v16 = type metadata accessor for StatementSegment(0);
  *(_QWORD *)(v5 + 848) = v16;
  *(_QWORD *)(v5 + 856) = *(_QWORD *)(v16 - 8);
  *(_QWORD *)(v5 + 864) = sub_23F3666CC();
  *(_QWORD *)(v5 + 872) = sub_23F3666CC();
  v17 = sub_23F617D08();
  *(_QWORD *)(v5 + 880) = v17;
  *(_QWORD *)(v5 + 888) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(v5 + 896) = sub_23F366578();
  sub_23F35D2E8(&qword_256E6FB20);
  *(_QWORD *)(v5 + 904) = sub_23F366578();
  v18 = sub_23F617000();
  *(_QWORD *)(v5 + 912) = v18;
  *(_QWORD *)(v5 + 920) = *(_QWORD *)(v18 - 8);
  *(_QWORD *)(v5 + 928) = sub_23F366578();
  sub_23F36679C();
  return swift_task_switch();
}

uint64_t sub_23F3B2C58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  NSObject *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  int8x16_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int8x16_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  uint64_t *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  int8x16_t *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  int8x16_t v147;
  _QWORD *v148;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  int8x16_t *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  int8x16_t v166;
  _QWORD *v167;
  uint64_t v169;
  void (*v170)(uint64_t);
  uint64_t v171;
  NSObject *v172;
  os_log_type_t v173;
  _BOOL4 v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  void (*v196)(uint64_t);
  uint64_t v197;
  NSObject *v198;
  os_log_type_t v199;
  _BOOL4 v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  void (*v230)(char *, uint64_t, uint64_t);
  uint64_t v231;
  os_log_t log;
  NSObject *loga;
  os_log_t logb;
  os_log_t logc;
  os_log_t logd;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  void (*v257)(uint64_t, uint64_t);
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;

  v1 = *(_QWORD *)(v0 + 912);
  v2 = *(_QWORD *)(v0 + 904);
  v3 = *(_QWORD *)(v0 + 896);
  v4 = *(_QWORD *)(v0 + 888);
  v5 = *(_QWORD *)(v0 + 880);
  v6 = *(uint64_t **)(v0 + 528);
  sub_23F61A480();
  v7 = *v6;
  sub_23F617BA0();
  sub_23F5F658C(v3, v7, v2);
  swift_bridgeObjectRelease();
  v8 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  *(_QWORD *)(v0 + 936) = v8;
  v8(v3, v5);
  if (sub_23F36195C(v2, 1, v1) == 1)
  {
    sub_23F3B5DEC();
    sub_23F3B5A28(v9, &qword_256E6FB20);
    sub_23F3B2130();
    v10 = sub_23F3B5E78();
    v11(v10);
    v12 = sub_23F619E8C();
    v13 = sub_23F61C628();
    if (os_log_type_enabled(v12, v13))
    {
      loga = v12;
      v14 = *(_QWORD *)(v0 + 896);
      v15 = *(_QWORD *)(v0 + 880);
      v229 = *(_QWORD *)(v0 + 560);
      v241 = *(_QWORD *)(v0 + 552);
      v254 = *(_QWORD *)(v0 + 544);
      v16 = (uint8_t *)sub_23F366668();
      v280 = sub_23F366668();
      *(_DWORD *)v16 = 136315138;
      sub_23F61A480();
      sub_23F3B57DC();
      v17 = sub_23F61CC1C();
      v19 = v18;
      v8(v14, v15);
      sub_23F37AE00(v17, v19, &v280);
      *(_QWORD *)(v0 + 440) = v20;
      sub_23F61C790();
      sub_23F3B5F04();
      (*(void (**)(uint64_t, uint64_t))(v241 + 8))(v229, v254);
      _os_log_impl(&dword_23F35A000, loga, v13, "Could not find xN reference variable for statementId \"%s\"", v16, 0xCu);
      swift_arrayDestroy();
      sub_23F366530();
    }
    v50 = *(_QWORD *)(v0 + 728);
    v51 = *(_QWORD *)(v0 + 720);
    v52 = *(_QWORD *)(v0 + 712);
    sub_23F384274(*(_QWORD *)(v0 + 552));

    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v50, v52);
    goto LABEL_10;
  }
  v248 = v0 + 448;
  v255 = (uint64_t)v8;
  v21 = *(_QWORD *)(v0 + 928);
  v22 = *(_QWORD *)(v0 + 920);
  v23 = *(_QWORD *)(v0 + 912);
  v24 = *(_QWORD *)(v0 + 872);
  v25 = *(_QWORD *)(v0 + 840);
  v26 = *(_QWORD *)(v0 + 832);
  v27 = *(_QWORD *)(v0 + 816);
  v262 = *(_QWORD *)(v0 + 824);
  v270 = *(_QWORD *)(v0 + 808);
  v276 = *(_QWORD *)(v0 + 800);
  sub_23F38426C(v21, *(_QWORD *)(v0 + 904), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 32));
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16);
  v28(v24, v21, v23);
  swift_storeEnumTagMultiPayload();
  sub_23F61A4F8();
  sub_23F61AC78();
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v262);
  v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v270 + 88))(v27, v276);
  if (v29 != *MEMORY[0x24BE53328])
  {
    if (v29 == *MEMORY[0x24BE532D8])
    {
      v230 = (void (*)(char *, uint64_t, uint64_t))v28;
      v53 = *(_QWORD *)(v0 + 928);
      v54 = *(_QWORD *)(v0 + 912);
      v243 = *(_QWORD *)(v0 + 896);
      v249 = *(_QWORD *)(v0 + 872);
      v256 = *(_QWORD *)(v0 + 920);
      v55 = *(_QWORD *)(v0 + 856);
      v264 = *(_QWORD *)(v0 + 808);
      v271 = *(_QWORD *)(v0 + 800);
      v277 = *(_QWORD *)(v0 + 816);
      v56 = *(uint64_t **)(v0 + 528);
      sub_23F35D2E8(&qword_256E704B8);
      v57 = *(_QWORD *)(v55 + 72);
      v58 = (*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
      v59 = sub_23F3B5CC4();
      *(_OWORD *)(v59 + 16) = xmmword_23F61EBC0;
      v60 = (char *)(v59 + v58);
      *(_QWORD *)v60 = 0xD000000000000013;
      *((_QWORD *)v60 + 1) = 0x800000023F634C80;
      v61 = MEMORY[0x24BEE4B08];
      *((_QWORD *)v60 + 2) = MEMORY[0x24BEE4B08];
      sub_23F3B5C30();
      v230(&v60[v57], v53, v54);
      swift_storeEnumTagMultiPayload();
      sub_23F3B5EB0(&v60[2 * v57])[2] = v61;
      sub_23F3B5C30();
      sub_23F3B5DBC();
      sub_23F61A498();
      sub_23F3F5EF8(v59, v243);
      sub_23F3B5F18();
      sub_23F376970();
      v62 = *(_QWORD *)(*v56 + 16);
      sub_23F376B68(v62);
      sub_23F4053B8(v62, v59, v56);
      sub_23F3B596C(v249, type metadata accessor for StatementSegment);
      (*(void (**)(uint64_t, uint64_t))(v256 + 8))(v53, v54);
      sub_23F3668FC();
      (*(void (**)(uint64_t, uint64_t))(v264 + 8))(v277, v271);
      goto LABEL_10;
    }
    if (v29 == *MEMORY[0x24BE532E0])
    {
      v265 = *(_QWORD *)(v0 + 912);
      v272 = *(_QWORD *)(v0 + 928);
      v64 = *(_QWORD *)(v0 + 896);
      v244 = *(_QWORD *)(v0 + 880);
      v250 = *(_QWORD *)(v0 + 920);
      v65 = *(_QWORD *)(v0 + 872);
      v66 = *(_QWORD *)(v0 + 856);
      v67 = *(_QWORD *)(v0 + 816);
      sub_23F3B5CAC();
      v68 = *(_QWORD *)(v0 + 632);
      v69 = *(_QWORD *)(v0 + 624);
      logb = v70;
      v238 = *(_QWORD *)(v0 + 616);
      v231 = *(_QWORD *)(v0 + 512);
      sub_23F3B5D64(v71);
      sub_23F38431C(v68, v67, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v69 + 32));
      sub_23F35D2E8(&qword_256E704B8);
      v72 = *(_QWORD *)(v66 + 72);
      v73 = (*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
      v74 = sub_23F3B5CC4();
      *(_OWORD *)(v74 + 16) = xmmword_23F61E980;
      sub_23F3B581C(v65, v74 + v73);
      v75 = (_QWORD *)(v74 + v73 + v72);
      *v75 = 1886413102;
      v75[1] = 0xE400000000000000;
      v75[2] = MEMORY[0x24BEE4B08];
      v76 = sub_23F3B5C30();
      v77 = MEMORY[0x24266B710](v76);
      v78 = (int8x16_t *)sub_23F384908();
      sub_23F3B5E3C(v78, v79, v80, v81, v82, v83, v84, v85, v221, v222, v223, v226, v231, (uint64_t)logb, v238, v244, v250, v255, v265,
        v272,
        v86);
      sub_23F367598((uint64_t)sub_23F3B58B8, (uint64_t)v78, v77);
      v88 = v87;
      sub_23F362984();
      sub_23F3666DC();
      sub_23F61A498();
      sub_23F3B4CAC(v74, v88, v64);
      sub_23F3B5F04();
      sub_23F362D08();
      v257(v64, v245);
      sub_23F3B5EF4();
      sub_23F362984();
      sub_23F386C5C();
      (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v68, v239);
      sub_23F3B596C(v65, type metadata accessor for StatementSegment);
      (*(void (**)(uint64_t, uint64_t))(v251 + 8))(v273, v266);
      goto LABEL_10;
    }
    if (v29 == *MEMORY[0x24BE532E8])
    {
      sub_23F3B5CE4();
      v89 = *(_QWORD *)(v0 + 816);
      sub_23F3B5CAC();
      v90 = *(_QWORD *)(v0 + 680);
      v91 = *(_QWORD *)(v0 + 672);
      v258 = v91;
      v267 = v92;
      v246 = *(_QWORD *)(v0 + 664);
      sub_23F3B13E4(v93);
      v224 = v90;
      sub_23F384840(v90, v89, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v91 + 32));
      sub_23F35D2E8(&qword_256E704B8);
      v94 = sub_23F3B5C78();
      *(_OWORD *)(v94 + 16) = xmmword_23F61E8A0;
      v95 = v94 + v89;
      strcpy((char *)(v94 + v89), "needs_value(");
      *(_BYTE *)(v95 + 13) = 0;
      *(_WORD *)(v95 + 14) = -5120;
      *(_QWORD *)(v95 + 16) = MEMORY[0x24BEE4B08];
      sub_23F3B5C30();
      sub_23F3B581C(v24, v94 + v89 + v21);
      sub_23F3B5DC4((_QWORD *)(v94 + v89 + 2 * v21));
      sub_23F3B5C30();
      v96 = (uint64_t *)(v94 + v89 + 3 * v21);
      sub_23F618224();
      v97 = sub_23F61C1FC();
      v99 = v98;
      sub_23F362984();
      sub_23F617BA0();
      v100 = sub_23F3B60F0(v24, v97, v99);
      sub_23F369004(v100);
      *v96 = v97;
      v96[1] = v99;
      v96[2] = v101;
      sub_23F3B5C30();
      sub_23F3B5F2C((_QWORD *)(v94 + v89 + 4 * v21));
      sub_23F3B5C30();
      sub_23F3B5DBC();
      sub_23F61A498();
      sub_23F3B5F20(v94);
      sub_23F3B5F18();
      sub_23F376970();
      sub_23F3B5DA8();
      sub_23F3B5E2C();
      (*(void (**)(uint64_t, uint64_t))(v258 + 8))(v224, v246);
      v102 = v24;
LABEL_17:
      sub_23F3B596C(v102, type metadata accessor for StatementSegment);
      (*(void (**)(uint64_t, uint64_t))(v267 + 8))(v276, v270);
      sub_23F3668FC();
      goto LABEL_10;
    }
    if (v29 == *MEMORY[0x24BE53300])
    {
      sub_23F3B5CE4();
      v103 = *(_QWORD *)(v0 + 816);
      sub_23F3B5CAC();
      v104 = *(_QWORD *)(v0 + 704);
      v105 = *(_QWORD *)(v0 + 696);
      v259 = v105;
      v267 = v106;
      v252 = *(_QWORD *)(v0 + 688);
      sub_23F3B13E4(v107);
      sub_23F384840(v104, v103, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v105 + 32));
      sub_23F35D2E8(&qword_256E704B8);
      v227 = sub_23F3B5C78();
      *(_OWORD *)(v227 + 16) = xmmword_23F61E8A0;
      v108 = (_QWORD *)(v227 + v103);
      *v108 = 0xD000000000000013;
      v108[1] = 0x800000023F634C80;
      v108[2] = MEMORY[0x24BEE4B08];
      sub_23F3B5C30();
      sub_23F3B581C(v24, v227 + v103 + v21);
      sub_23F3B5DC4((_QWORD *)(v227 + v103 + 2 * v21));
      sub_23F3B5C30();
      v109 = (uint64_t *)(v227 + v103 + 3 * v21);
      sub_23F618224();
      v110 = sub_23F61C1FC();
      v112 = v111;
      sub_23F362984();
      sub_23F384A00();
      v113 = sub_23F3B5ED4();
      v116 = sub_23F3B60F0(v113, v114, v115);
      sub_23F369004(v116);
      *v109 = v110;
      v109[1] = v112;
      v109[2] = v117;
      sub_23F3B5C30();
      sub_23F3B5F2C((_QWORD *)(v227 + v103 + 4 * v21));
      sub_23F3B5C30();
      sub_23F3B5DBC();
      sub_23F61A498();
      sub_23F3B5F20(v227);
      sub_23F3B5F18();
      sub_23F376970();
      sub_23F3B5DA8();
      sub_23F3B5E2C();
      (*(void (**)(uint64_t, uint64_t))(v259 + 8))(v104, v252);
      v102 = v24;
      goto LABEL_17;
    }
    if (v29 == *MEMORY[0x24BE53308])
    {
      v118 = *(_QWORD *)(v0 + 872);
      v119 = *(_QWORD *)(v0 + 856);
      v120 = *(_QWORD *)(v0 + 816);
      sub_23F3B5CAC();
      v121 = *(_QWORD *)(v0 + 656);
      v122 = *(_QWORD *)(v0 + 648);
      (*(void (**)(uint64_t))(v123 + 96))(v120);
      sub_23F384840(v121, v120, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v122 + 32));
      sub_23F35D2E8(&qword_256E704B8);
      v124 = *(_QWORD *)(v119 + 72);
      v125 = (*(unsigned __int8 *)(v119 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v119 + 80);
      v126 = sub_23F3B5CC4();
      *(_QWORD *)(v0 + 1000) = v126;
      *(_OWORD *)(v126 + 16) = xmmword_23F61EBC0;
      v127 = v126 + v125;
      sub_23F3B581C(v118, v127);
      v128 = (_QWORD *)(v127 + v124);
      *v128 = 46;
      v128[1] = 0xE100000000000000;
      v128[2] = MEMORY[0x24BEE4B08];
      sub_23F3B5C30();
      v129 = (uint64_t *)(v127 + 2 * v124);
      sub_23F61832C();
      v130 = sub_23F61C1FC();
      v132 = v131;
      swift_bridgeObjectRelease();
      sub_23F384A00();
      v133 = sub_23F3B5ED4();
      v136 = sub_23F3B60F0(v133, v134, v135);
      sub_23F369004(v136);
      *v129 = v130;
      v129[1] = v132;
      v129[2] = v137;
      v138 = sub_23F3B5C30();
      *(_QWORD *)(v0 + 1008) = MEMORY[0x24266B854](v138);
      v139 = (int8x16_t *)sub_23F384908();
      *(_QWORD *)(v0 + 1016) = v139;
      sub_23F3B5E3C(v139, v140, v141, v142, v143, v144, v145, v146, v221, v222, v223, v226, v228, (uint64_t)log, v237, v240, v248, v255, v262,
        v270,
        v147);
      v148 = (_QWORD *)sub_23F3B5D78();
      *(_QWORD *)(v0 + 1024) = v148;
      *v148 = v0;
      v148[1] = sub_23F3B455C;
      goto LABEL_29;
    }
    if (v29 == *MEMORY[0x24BE532F0] || v29 == *MEMORY[0x24BE53310] || v29 == *MEMORY[0x24BE532D0])
      goto LABEL_31;
    if (v29 == *MEMORY[0x24BE532F8])
    {
      v151 = *(_QWORD *)(v0 + 872);
      v152 = *(_QWORD *)(v0 + 864);
      v153 = *(_QWORD *)(v0 + 816);
      sub_23F3B5CAC();
      v154 = *(_QWORD *)(v0 + 608);
      v155 = *(_QWORD *)(v0 + 600);
      sub_23F3B5D64(v156);
      sub_23F38431C(v154, v153, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v155 + 32));
      v157 = sub_23F3B581C(v151, v152);
      *(_QWORD *)(v0 + 1048) = MEMORY[0x24266B788](v157);
      v158 = (int8x16_t *)sub_23F384908();
      *(_QWORD *)(v0 + 1056) = v158;
      sub_23F3B5E3C(v158, v159, v160, v161, v162, v163, v164, v165, v221, v222, v223, v226, v228, (uint64_t)log, v237, v240, v248, v255, v262,
        v270,
        v166);
      v167 = (_QWORD *)sub_23F3B5D78();
      *(_QWORD *)(v0 + 1064) = v167;
      *v167 = v0;
      v167[1] = sub_23F3B471C;
LABEL_29:
      sub_23F3B5E5C();
      __asm { BR              X3 }
    }
    if (v29 == *MEMORY[0x24BE53320])
    {
LABEL_31:
      sub_23F3B5CAC();
      sub_23F3B5DEC();
      sub_23F384274(v169);
      sub_23F3B2130();
      v170 = *(void (**)(uint64_t))(v25 + 16);
      v171 = sub_23F3B5E78();
      v170(v171);
      v172 = sub_23F619E8C();
      v173 = sub_23F61C61C();
      v174 = os_log_type_enabled(v172, v173);
      v175 = *(_QWORD *)(v0 + 928);
      v176 = *(_QWORD *)(v0 + 920);
      v177 = *(_QWORD *)(v0 + 872);
      v274 = *(_QWORD *)(v0 + 744);
      v278 = *(_QWORD *)(v0 + 912);
      v260 = *(_QWORD *)(v0 + 720);
      v268 = *(_QWORD *)(v0 + 712);
      v178 = *(_QWORD *)(v0 + 584);
      if (v174)
      {
        v179 = *(_QWORD *)(v0 + 576);
        logc = *(os_log_t *)(v0 + 552);
        v180 = *(_QWORD *)(v0 + 544);
        v181 = sub_23F366668();
        v280 = sub_23F366668();
        *(_DWORD *)v181 = 136315395;
        sub_23F3B5EA8(0xD00000000000003CLL, 0x800000023F634C40);
        *(_QWORD *)(v0 + 480) = v182;
        sub_23F61C790();
        *(_WORD *)(v181 + 12) = 2085;
        ((void (*)(uint64_t, uint64_t, uint64_t))v170)(v179, v178, v180);
        v183 = sub_23F61C16C();
        sub_23F3B5EA8(v183, v184);
        *(_QWORD *)(v0 + 472) = v185;
        sub_23F61C790();
        swift_bridgeObjectRelease();
        sub_23F383E64(v178, (uint64_t (*)(uint64_t, uint64_t))logc[1].isa);
        sub_23F3B5F0C(&dword_23F35A000, v172, v173, "[%s] Unsupported StatementOutcome - (safely) skipping: %{sensitive}s");
        sub_23F3B5EE8();
        sub_23F366530();
      }
      v186 = *(_QWORD *)(v0 + 552);
      v187 = *(_QWORD *)(v0 + 544);

      v188 = (*(uint64_t (**)(uint64_t, uint64_t))(v186 + 8))(v178, v187);
      sub_23F3B5E98(v188, v189, v190, v191, v192, v193, v194, v195, v221, v222, v223, v226, v228, (uint64_t)log, v237, v240, v248, v260, v268,
        v274);
      sub_23F3B596C(v177, type metadata accessor for StatementSegment);
      (*(void (**)(uint64_t, uint64_t))(v176 + 8))(v175, v278);
    }
    else
    {
      sub_23F3B5DEC();
      sub_23F3B2130();
      v196 = *(void (**)(uint64_t))(v25 + 16);
      v197 = sub_23F3B5E78();
      v196(v197);
      v198 = sub_23F619E8C();
      v199 = sub_23F61C628();
      v200 = os_log_type_enabled(v198, v199);
      v201 = *(_QWORD *)(v0 + 928);
      v275 = *(_QWORD *)(v0 + 920);
      v279 = *(_QWORD *)(v0 + 912);
      v261 = *(_QWORD *)(v0 + 736);
      v269 = *(_QWORD *)(v0 + 872);
      v247 = *(_QWORD *)(v0 + 720);
      v253 = *(_QWORD *)(v0 + 712);
      if (v200)
      {
        v202 = *(_QWORD *)(v0 + 576);
        v225 = *(_QWORD *)(v0 + 568);
        logd = *(os_log_t *)(v0 + 552);
        v203 = *(_QWORD *)(v0 + 544);
        v204 = sub_23F366668();
        v280 = sub_23F366668();
        *(_DWORD *)v204 = 136315395;
        sub_23F3B5EA8(0xD00000000000003CLL, 0x800000023F634C40);
        *(_QWORD *)(v0 + 496) = v205;
        sub_23F61C790();
        *(_WORD *)(v204 + 12) = 2085;
        ((void (*)(uint64_t, uint64_t, uint64_t))v196)(v202, v225, v203);
        v206 = sub_23F61C16C();
        sub_23F3B5EA8(v206, v207);
        *(_QWORD *)(v0 + 488) = v208;
        sub_23F61C790();
        swift_bridgeObjectRelease();
        sub_23F383E64(v225, (uint64_t (*)(uint64_t, uint64_t))logd[1].isa);
        sub_23F3B5F0C(&dword_23F35A000, v198, v199, "[%s] ❗️ Unsupported StatementOutcome. Please file a radar on Full Planner Runtime: %{sensitive}s");
        sub_23F3B5EE8();
        sub_23F366530();
      }
      v209 = *(_QWORD *)(v0 + 552);

      v210 = sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(v209 + 8));
      sub_23F3B5E4C(v210, v211, v212, v213, v214, v215, v216, v217, v221, v222, v223, v226, v228, (uint64_t)log, v237, v247, v253, v261);
      sub_23F3B596C(v269, type metadata accessor for StatementSegment);
      (*(void (**)(uint64_t, uint64_t))(v275 + 8))(v201, v279);
      sub_23F3B5CAC();
      (*(void (**)(uint64_t, uint64_t))(v218 + 8))(v219, v220);
    }
LABEL_10:
    swift_task_dealloc();
    sub_23F3666DC();
    sub_23F3666C4();
    sub_23F3666EC();
    sub_23F366708();
    sub_23F3666E4();
    sub_23F366698();
    sub_23F3666D4();
    sub_23F3666A0();
    sub_23F362CC8();
    sub_23F3668DC();
    sub_23F3668D4();
    sub_23F383980();
    sub_23F3667E0();
    sub_23F383898();
    sub_23F383978();
    sub_23F383970();
    sub_23F383890();
    sub_23F383888();
    sub_23F383880();
    sub_23F383878();
    swift_task_dealloc();
    sub_23F384760();
    sub_23F3B5E5C();
    __asm { BR              X0 }
  }
  v30 = *(_QWORD *)(v0 + 896);
  v31 = *(_QWORD *)(v0 + 872);
  v32 = *(_QWORD *)(v0 + 856);
  v33 = *(_QWORD *)(v0 + 816);
  sub_23F3B5CAC();
  v34 = *(_QWORD *)(v0 + 792);
  v35 = *(_QWORD *)(v0 + 784);
  v242 = *(_QWORD *)(v0 + 536);
  v263 = *(_QWORD *)(v0 + 528);
  (*(void (**)(uint64_t))(v36 + 96))(v33);
  sub_23F38426C(v34, v33, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35 + 32));
  *(_QWORD *)(v0 + 944) = sub_23F35D2E8(&qword_256E704B8);
  v37 = *(_QWORD *)(v32 + 72);
  *(_QWORD *)(v0 + 952) = v37;
  v38 = *(_DWORD *)(v32 + 80);
  *(_DWORD *)(v0 + 196) = v38;
  v39 = (v38 + 32) & ~(unint64_t)v38;
  v40 = sub_23F3B5CC4();
  *(_OWORD *)(v40 + 16) = xmmword_23F61EBC0;
  v41 = (_QWORD *)(v40 + v39);
  *v41 = 0x2873736563637573;
  v41[1] = 0xE800000000000000;
  v42 = MEMORY[0x24BEE4B08];
  v41[2] = MEMORY[0x24BEE4B08];
  sub_23F3B5C30();
  sub_23F3B581C(v31, (uint64_t)v41 + v37);
  sub_23F3B5EB0((_QWORD *)((char *)v41 + 2 * v37))[2] = v42;
  sub_23F3B5C30();
  *(_QWORD *)(v0 + 960) = sub_23F3B5DBC();
  sub_23F61A498();
  *(_QWORD *)(v0 + 968) = sub_23F3F5EF8(v40, v30);
  v43 = type metadata accessor for AlphaStatementResultParser();
  sub_23F35EA9C((_QWORD *)(v242 + *(int *)(v43 + 20) + 80), *(_QWORD *)(v242 + *(int *)(v43 + 20) + 104));
  sub_23F617DA4();
  sub_23F3B5C30();
  *(_QWORD *)(v0 + 976) = *(_QWORD *)(v263 + 56);
  swift_retain();
  v44 = (_QWORD *)sub_23F3B5ECC();
  *(_QWORD *)(v0 + 984) = v44;
  *v44 = v0;
  v44[1] = sub_23F3B3F2C;
  sub_23F3B5E5C();
  return sub_23F3AB5E0(v45, v46, v47, v48);
}

uint64_t sub_23F3B3F2C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 992) = v0;
  swift_task_dealloc();
  sub_23F3B596C(*(_QWORD *)(v2 + 768), (uint64_t (*)(_QWORD))type metadata accessor for DirectionalTypedValue);
  sub_23F3668FC();
  sub_23F36679C();
  return sub_23F3B183C();
}

uint64_t sub_23F3B3FA0()
{
  uint64_t v0;
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t inited;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(void);
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v1 = (__int128 *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 136);
  v50 = (__int128 *)(v0 + 240);
  v51 = v0 + 400;
  v52 = v0 + 320;
  v4 = *(_QWORD *)(v0 + 144);
  v43 = *(_QWORD *)(v0 + 152);
  v48 = *(_QWORD *)(v0 + 168);
  v49 = *(_QWORD *)(v0 + 160);
  v46 = *(_QWORD *)(v0 + 184);
  v47 = *(_QWORD *)(v0 + 176);
  v5 = *(_BYTE *)(v0 + 192);
  *(_QWORD *)(v0 + 392) = 0;
  *(_OWORD *)(v0 + 360) = 0u;
  *(_OWORD *)(v0 + 376) = 0u;
  v41 = v5;
  v44 = v3;
  v45 = v2;
  v42 = v4;
  if ((v5 & 1) != 0)
  {
    sub_23F3B2130();
    v6 = sub_23F619E8C();
    v7 = sub_23F61C610();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)sub_23F366668();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_23F35A000, v6, v7, "[StatementResult] Unable to find a prompt reference for success.returnValue", v8, 2u);
      sub_23F366530();
    }
    v9 = *(_QWORD *)(v0 + 752);
    v10 = *(_QWORD *)(v0 + 720);

    sub_23F383E64(v9, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 960);
    v12 = *(_QWORD *)(v0 + 896);
    v13 = (*(unsigned __int8 *)(v0 + 196) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 196);
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_23F61E7E0;
    v15 = (uint64_t *)(v14 + v13);
    *v15 = v2;
    v15[1] = v3;
    v15[2] = v4;
    sub_23F3B5C30();
    sub_23F617BA0();
    sub_23F384A00();
    sub_23F61A498();
    v16 = v12;
    v1 = (__int128 *)(v0 + 200);
    v17 = sub_23F3F5EF8(v14, v16);
    *(_QWORD *)(v0 + 304) = v11;
    *(_QWORD *)(v0 + 312) = &off_250FD4990;
    *(_QWORD *)(v0 + 280) = v17;
    sub_23F3B5A28(v0 + 360, &qword_256E70A58);
    sub_23F3B59E0(v0 + 280, v0 + 360);
  }
  v18 = *(_QWORD *)(v0 + 968);
  v19 = *(_QWORD *)(v0 + 960);
  sub_23F35D2E8(&qword_256E70E40);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23F61E980;
  *(_QWORD *)(inited + 32) = v18;
  v21 = inited + 32;
  *(_QWORD *)(inited + 56) = v19;
  *(_QWORD *)(inited + 64) = &off_250FD4990;
  sub_23F3B5998(v0 + 360, inited + 72);
  v54 = MEMORY[0x24BEE4AF8];
  sub_23F3B5EFC();
  v22 = 0;
  v23 = 0;
  do
  {
    v24 = v22;
    sub_23F3B5998(v21 + 40 * v23, v51);
    sub_23F3B59E0(v51, (uint64_t)v1);
    if (*(_QWORD *)(v0 + 224))
    {
      sub_23F362678(v1, (uint64_t)v50);
      sub_23F362678(v50, v52);
      v25 = v54;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F3B5EC0();
        v25 = v32;
        v54 = v32;
      }
      v26 = *(_QWORD *)(v25 + 16);
      if (v26 >= *(_QWORD *)(v25 + 24) >> 1)
      {
        sub_23F3B5EC0();
        v54 = v33;
      }
      v27 = *(_QWORD *)(v0 + 344);
      v28 = *(_QWORD *)(v0 + 352);
      v29 = sub_23F38EB10(v52, v27);
      v30 = *(_QWORD *)(v27 - 8);
      v31 = swift_task_alloc();
      sub_23F38426C(v31, v29, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 16));
      sub_23F3B5A54(v26, v31, &v54, v27, v28);
      _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v52);
      sub_23F366698();
      v1 = (__int128 *)(v0 + 200);
    }
    else
    {
      sub_23F3B5A28((uint64_t)v1, &qword_256E70A58);
    }
    v22 = 1;
    v23 = 1;
  }
  while ((v24 & 1) == 0);
  v53 = *(_QWORD *)(v0 + 928);
  v34 = *(_QWORD *)(v0 + 920);
  v35 = *(_QWORD *)(v0 + 872);
  v36 = *(_QWORD *)(v0 + 792);
  v37 = *(_QWORD *)(v0 + 784);
  v38 = *(_QWORD *)(v0 + 776);
  swift_setDeallocating();
  sub_23F5135DC();
  sub_23F386C5C();
  sub_23F39BA98(v45, v44, v42, v43, v49, v48, v47, v46, v41);
  sub_23F3668FC();
  sub_23F3B5A28(v0 + 360, &qword_256E70A58);
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v36, v38);
  sub_23F3B596C(v35, type metadata accessor for StatementSegment);
  sub_23F383E64(v53, *(uint64_t (**)(uint64_t, uint64_t))(v34 + 8));
  swift_task_dealloc();
  sub_23F3666DC();
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F362CC8();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383878();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v39 = (uint64_t (*)(void))sub_23F384760();
  return v39();
}

uint64_t sub_23F3B4498()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F3B5C38();
  v1 = *(_QWORD *)(v0 + 920);
  v2 = *(_QWORD *)(v0 + 784);
  swift_release();
  v3 = sub_23F3838CC(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23F3B5E24(v3, type metadata accessor for StatementSegment);
  sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F3B5B24(*(_QWORD *)(v0 + 992));
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3666DC();
  sub_23F362CC8();
  sub_23F3668E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383878();
  return sub_23F3B5B9C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F3B455C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 1032) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    sub_23F362D08();
  }
  else
  {
    sub_23F362D08();
    *(_QWORD *)(v4 + 1040) = a1;
  }
  sub_23F3666DC();
  sub_23F36679C();
  return swift_task_switch();
}

#error "23F3B46B0: call analysis failed (funcsize=73)"

uint64_t sub_23F3B471C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 1072) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v1)
    *(_QWORD *)(v4 + 1080) = a1;
  sub_23F3666DC();
  sub_23F36679C();
  return swift_task_switch();
}

#error "23F3B48B4: call analysis failed (funcsize=94)"

uint64_t sub_23F3B4920()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F3B5C38();
  v1 = *(_QWORD *)(v0 + 920);
  v2 = sub_23F384274(*(_QWORD *)(v0 + 648));
  sub_23F3B5E24(v2, type metadata accessor for StatementSegment);
  sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F3B5B24(*(_QWORD *)(v0 + 1032));
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3666DC();
  sub_23F362CC8();
  sub_23F3668E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383878();
  return sub_23F3B5B9C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F3B49D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F3B5C38();
  v1 = *(_QWORD *)(v0 + 920);
  v2 = *(_QWORD *)(v0 + 872);
  v3 = *(_QWORD *)(v0 + 600);
  sub_23F3B596C(*(_QWORD *)(v0 + 864), type metadata accessor for StatementSegment);
  sub_23F3838CC(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_23F3B596C(v2, type metadata accessor for StatementSegment);
  sub_23F3B5CB8(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F3B5B24(*(_QWORD *)(v0 + 1072));
  sub_23F3666C4();
  sub_23F3666EC();
  sub_23F366708();
  sub_23F3666E4();
  sub_23F366698();
  sub_23F3666D4();
  sub_23F3666A0();
  sub_23F3666DC();
  sub_23F362CC8();
  sub_23F3668E4();
  sub_23F3668DC();
  sub_23F3668D4();
  sub_23F383980();
  sub_23F3667E0();
  sub_23F383898();
  sub_23F383978();
  sub_23F383970();
  sub_23F383890();
  sub_23F383888();
  sub_23F383880();
  sub_23F383878();
  return sub_23F3B5B9C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F3B4AA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[13] = a3;
  v4[14] = a4;
  v4[11] = a1;
  v4[12] = a2;
  v4[15] = type metadata accessor for DirectionalTypedValue();
  v4[16] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F3B4B08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v2 = sub_23F3B5CCC();
  v3 = sub_23F3B5D3C(v2);
  sub_23F3B5D24(v3);
  sub_23F3B5C30();
  *(_QWORD *)(v0 + 136) = *(_QWORD *)(v1 + 56);
  sub_23F3B5EFC();
  v4 = (_QWORD *)sub_23F3B5ECC();
  *(_QWORD *)(v0 + 144) = v4;
  v5 = sub_23F3B5D04(v4);
  return sub_23F3B5C98(v5, v6, v7, v8);
}

uint64_t sub_23F3B4B70()
{
  uint64_t v0;

  v0 = sub_23F3B5C54();
  sub_23F3B5E24(v0, (uint64_t (*)(_QWORD))type metadata accessor for DirectionalTypedValue);
  sub_23F3668FC();
  sub_23F36679C();
  return sub_23F3B183C();
}

uint64_t sub_23F3B4BC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t (*v10)(void);

  if ((*(_BYTE *)(v0 + 80) & 1) != 0)
  {
    v1 = 0;
    v2 = MEMORY[0x24BEE4B08];
    v3 = 0xE000000000000000;
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 64);
    v4 = *(_QWORD *)(v0 + 72);
    v7 = *(_QWORD *)(v0 + 48);
    v6 = *(_QWORD *)(v0 + 56);
    v2 = *(_QWORD *)(v0 + 32);
    v8 = *(_QWORD *)(v0 + 40);
    v1 = *(_QWORD *)(v0 + 16);
    v3 = *(_QWORD *)(v0 + 24);
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F39BA98(v1, v3, v2, v8, v7, v6, v5, v4, 0);
  }
  v9 = *(uint64_t **)(v0 + 88);
  *v9 = v1;
  v9[1] = v3;
  v9[2] = v2;
  swift_task_dealloc();
  v10 = (uint64_t (*)(void))sub_23F384760();
  return v10();
}

uint64_t sub_23F3B4C80()
{
  uint64_t v0;

  swift_task_dealloc();
  return sub_23F362888(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23F3B4CAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v38[2];
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  char v46[16];
  uint64_t v47;
  uint64_t v48;

  v44 = a3;
  v39 = a2;
  v41 = a1;
  v3 = sub_23F617168();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F617D08();
  v42 = *(char **)(v7 - 8);
  v43 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F35D2E8(&qword_256E704B8);
  v11 = *(_QWORD *)(type metadata accessor for StatementSegment(0) - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v38[0] = v12 + *(_QWORD *)(v11 + 72);
  v38[1] = v10;
  v13 = swift_allocObject();
  v45 = xmmword_23F61E7E0;
  *(_OWORD *)(v13 + 16) = xmmword_23F61E7E0;
  v14 = v13 + v12;
  strcpy((char *)(v13 + v12), "disambiguate(");
  *(_WORD *)(v14 + 14) = -4864;
  *(_QWORD *)(v14 + 16) = MEMORY[0x24BEE4B08];
  sub_23F3B5C30();
  v48 = v13;
  sub_23F617BA0();
  sub_23F386734();
  v15 = v48;
  v16 = swift_allocObject();
  v17 = (_QWORD *)sub_23F3B5E14(v16);
  sub_23F3B5EB0(v17)[2] = MEMORY[0x24BEE4B08];
  sub_23F3B5C30();
  v48 = v15;
  sub_23F386734();
  v18 = v48;
  sub_23F3B5DBC();
  v40 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v42 + 2);
  v40(v9, v44, v43);
  v42 = v9;
  v41 = sub_23F3F5EF8(v18, v9);
  v47 = v39;
  v19 = sub_23F617BA0();
  v20 = sub_23F3B289C(v19, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_23F3B5ACC, (uint64_t)v46);
  swift_bridgeObjectRelease();
  v21 = sub_23F3B5E88();
  v22 = (_QWORD *)sub_23F3B5E14(v21);
  *v22 = 123;
  v22[1] = 0xE100000000000000;
  v22[2] = MEMORY[0x24BEE4B08];
  sub_23F3B5C30();
  v48 = v21;
  sub_23F617BA0();
  sub_23F386734();
  v23 = v48;
  v24 = sub_23F3B5E88();
  v25 = (_QWORD *)sub_23F3B5E14(v24);
  *v25 = 32010;
  v25[1] = 0xE200000000000000;
  v25[2] = MEMORY[0x24BEE4B08];
  sub_23F3B5C30();
  v48 = v23;
  sub_23F386734();
  v26 = v48;
  v27 = *(_QWORD *)(v20 + 16);
  sub_23F362D08();
  sub_23F471064(1, v27 + 1);
  v29 = *(_QWORD *)(v28 + 16);
  if (v29)
  {
    v48 = MEMORY[0x24BEE4AF8];
    sub_23F37BB2C();
    v30 = 0;
    v31 = v48;
    do
    {
      sub_23F61715C();
      v48 = v31;
      v32 = *(_QWORD *)(v31 + 16);
      if (v32 >= *(_QWORD *)(v31 + 24) >> 1)
      {
        sub_23F37BB2C();
        v31 = v48;
      }
      ++v30;
      *(_QWORD *)(v31 + 16) = v32 + 1;
      sub_23F38431C(v31+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v32, (uint64_t)v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32));
    }
    while (v29 != v30);
    swift_release();
  }
  else
  {
    swift_release();
    v31 = MEMORY[0x24BEE4AF8];
  }
  v34 = v41;
  v33 = v42;
  v40(v42, v44, v43);
  type metadata accessor for EvaluationListResultTurnItem(0);
  swift_allocObject();
  v35 = sub_23F3F787C(v31, v26, v33);
  sub_23F35D2E8(&qword_256E70E48);
  v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_23F61F1B0;
  *(_QWORD *)(v36 + 32) = v34;
  *(_QWORD *)(v36 + 40) = v35;
  v48 = v36;
  sub_23F61C3F4();
  return v48;
}

uint64_t sub_23F3B50B8@<X0>(uint64_t a1@<X2>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t result;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;

  v20 = a2;
  v19 = sub_23F61BB3C();
  v3 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 56);
  swift_retain();
  sub_23F524D24();
  v7 = sub_23F61BB18();
  v9 = v8;
  v10 = sub_23F61BB30();
  v12 = v11;
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)(v6 + 16) + 16))
    goto LABEL_5;
  sub_23F617BA0();
  sub_23F3754D4(v7, v9);
  if ((v13 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    swift_endAccess();
    swift_beginAccess();
    sub_23F617BA0();
    sub_23F471708();
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    sub_23F617BA0();
    sub_23F3AF11C(v10, v12, v7, v9);
    swift_endAccess();
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  swift_endAccess();
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_6:
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v19);
  swift_release();
  v21 = MEMORY[0x24BEE4B08];
  sub_23F35D2E8(&qword_256E70898);
  sub_23F61C55C();
  sub_23F61C55C();
  v14 = v21;
  v21 = 0;
  v22 = 0xE000000000000000;
  sub_23F61C280();
  sub_23F61C1F0();
  swift_bridgeObjectRelease();
  sub_23F617BA0();
  sub_23F61C280();
  swift_bridgeObjectRelease_n();
  result = sub_23F61C280();
  v16 = v22;
  v17 = v20;
  *v20 = v21;
  v17[1] = v16;
  v17[2] = v14;
  return result;
}

uint64_t sub_23F3B534C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[13] = a3;
  v4[14] = a4;
  v4[11] = a1;
  v4[12] = a2;
  v4[15] = type metadata accessor for DirectionalTypedValue();
  v4[16] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23F3B53AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v2 = sub_23F3B5CCC();
  v3 = sub_23F3B5D3C(v2);
  sub_23F3B5D24(v3);
  sub_23F3B5C30();
  *(_QWORD *)(v0 + 136) = *(_QWORD *)(v1 + 56);
  sub_23F3B5EFC();
  v4 = (_QWORD *)sub_23F3B5ECC();
  *(_QWORD *)(v0 + 144) = v4;
  v5 = sub_23F3B5D04(v4);
  return sub_23F3B5C98(v5, v6, v7, v8);
}

uint64_t sub_23F3B5414()
{
  uint64_t v0;

  v0 = sub_23F3B5C54();
  sub_23F3B5E24(v0, (uint64_t (*)(_QWORD))type metadata accessor for DirectionalTypedValue);
  sub_23F3668FC();
  sub_23F36679C();
  return sub_23F3B183C();
}

uint64_t sub_23F3B5464@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;

  v10 = MEMORY[0x24BEE4B08];
  v38 = MEMORY[0x24BEE4B08];
  if (*(_QWORD *)(a5 + 16) - 1 <= a1)
  {
    sub_23F35D2E8(&qword_256E70898);
    sub_23F61C55C();
    sub_23F61C55C();
    sub_23F61CC1C();
    sub_23F61C280();
    swift_bridgeObjectRelease();
    sub_23F61C280();
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F528350(0, 0xE000000000000000, v38, a2, a3, a4);
    v25 = v24;
    v27 = v26;
    v29 = v28;
    swift_bridgeObjectRelease();
    sub_23F617BA0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v18 = sub_23F61C1E4();
    v20 = v30;
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F617BA0();
    v21 = sub_23F52481C(v29, v25, v27, v29, v18, v20);
  }
  else
  {
    sub_23F35D2E8(&qword_256E70898);
    sub_23F61C55C();
    sub_23F61C55C();
    sub_23F61CC1C();
    sub_23F61C280();
    swift_bridgeObjectRelease();
    sub_23F61C280();
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F528350(0, 0xE000000000000000, v38, a2, a3, a4);
    v12 = v11;
    v14 = v13;
    v16 = v15;
    swift_bridgeObjectRelease();
    sub_23F617BA0();
    swift_bridgeObjectRelease_n();
    v39 = v14;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23F61C280();
    v17 = v12;
    v18 = sub_23F61C1E4();
    v20 = v19;
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F617BA0();
    v21 = sub_23F52481C(v16, v17, v39, v16, v18, v20);
  }
  sub_23F369004(v21);
  v23 = v22;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23F528350(0xAuLL, 0xE100000000000000, v10, v18, v20, v23);
  v32 = v31;
  v34 = v33;
  v36 = v35;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a6 = v32;
  a6[1] = v34;
  a6[2] = v36;
  type metadata accessor for StatementSegment(0);
  return swift_storeEnumTagMultiPayload();
}

unint64_t sub_23F3B57DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256E6FB60;
  if (!qword_256E6FB60)
  {
    v1 = sub_23F617D08();
    result = MEMORY[0x242670A44](MEMORY[0x24BE52170], v1);
    atomic_store(result, (unint64_t *)&qword_256E6FB60);
  }
  return result;
}

uint64_t sub_23F3B581C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StatementSegment(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F3B5860()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_23F3B5D8C(v1);
  return sub_23F3B534C(v2, v3, v4, v5);
}

uint64_t sub_23F3B58B8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_23F3B50B8(*(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_23F3B58D4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_23F3B5D8C(v1);
  return sub_23F3B4AA8(v2, v3, v4, v5);
}

uint64_t sub_23F3B592C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return sub_23F362888(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_23F3B596C(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  sub_23F362B6C(v3);
  return a1;
}

uint64_t sub_23F3B5998(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E70A58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F3B59E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E70A58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F3B5A28(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_23F35D2E8(a2);
  sub_23F362B6C(v3);
  return a1;
}

uint64_t sub_23F3B5A54(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v9;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  v9 = sub_23F36145C((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(v9, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_23F362678(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_23F3B5ACC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;

  return sub_23F3B5464(a1, a2, a3, a4, *(_QWORD *)(v5 + 16), a5);
}

uint64_t sub_23F3B5AD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StatementSegment(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F3B5B24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 80) = a1;
  return swift_task_dealloc();
}

uint64_t sub_23F3B5B9C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23F3B5BB8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 80) = *(_QWORD *)(v0 + 560);
  return swift_task_dealloc();
}

uint64_t sub_23F3B5C30()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23F3B5C54()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 152) = v0;
  return swift_task_dealloc();
}

uint64_t sub_23F3B5C78()
{
  return swift_allocObject();
}

uint64_t sub_23F3B5C98(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_23F3AB5E0(a1, a2, a3, a4);
}

uint64_t sub_23F3B5CB8@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_23F3B5CC4()
{
  return swift_allocObject();
}

uint64_t sub_23F3B5CCC()
{
  return type metadata accessor for AlphaStatementResultParser();
}

uint64_t sub_23F3B5D04(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_23F3B5D24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

uint64_t sub_23F3B5D3C(uint64_t a1)
{
  uint64_t v1;

  sub_23F35EA9C((_QWORD *)(v1 + *(int *)(a1 + 20) + 80), *(_QWORD *)(v1 + *(int *)(a1 + 20) + 104));
  return sub_23F61B92C();
}

uint64_t sub_23F3B5D64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 96))(v1);
}

uint64_t sub_23F3B5D78()
{
  return swift_task_alloc();
}

uint64_t sub_23F3B5D8C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_23F3B5DA8()
{
  uint64_t v0;

  return sub_23F376B68(*(_QWORD *)(*(_QWORD *)v0 + 16));
}

uint64_t sub_23F3B5DBC()
{
  return type metadata accessor for EvaluationResultTurnItem(0);
}

_QWORD *sub_23F3B5DC4(_QWORD *result)
{
  uint64_t v1;

  *result = 46;
  result[1] = 0xE100000000000000;
  result[2] = v1;
  return result;
}

uint64_t sub_23F3B5DDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;

  return (*(uint64_t (**)(_QWORD, uint64_t))(a19 + 8))(*(_QWORD *)(v20 - 80), a20);
}

void sub_23F3B5DFC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 80) = *(_QWORD *)(v0 + 928);
}

uint64_t sub_23F3B5E14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v2 - 144);
  return a1 + v1;
}

uint64_t sub_23F3B5E24(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  return sub_23F3B596C(v2, a2);
}

uint64_t sub_23F3B5E2C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  return sub_23F4053B8(v2, v0, v1);
}

int8x16_t sub_23F3B5E3C(int8x16_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int8x16_t a21)
{
  int8x16_t result;

  result = vextq_s8(a21, a21, 8uLL);
  a1[1] = result;
  return result;
}

uint64_t sub_23F3B5E4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a16 + 8))(a18, a17);
}

uint64_t sub_23F3B5E78()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F3B5E88()
{
  return swift_allocObject();
}

uint64_t sub_23F3B5E98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a18 + 8))(a20, a19);
}

void sub_23F3B5EA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23F37AE00(a1, a2, (uint64_t *)(v2 - 88));
}

_QWORD *sub_23F3B5EB0(_QWORD *result)
{
  *result = 41;
  result[1] = 0xE100000000000000;
  return result;
}

void sub_23F3B5EC0()
{
  sub_23F377800();
}

uint64_t sub_23F3B5ECC()
{
  return swift_task_alloc();
}

uint64_t sub_23F3B5ED4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F3B5EE8()
{
  return swift_arrayDestroy();
}

void sub_23F3B5EF4()
{
  sub_23F51BBF8();
}

uint64_t sub_23F3B5EFC()
{
  return swift_retain();
}

uint64_t sub_23F3B5F04()
{
  return swift_bridgeObjectRelease();
}

void sub_23F3B5F0C(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0x16u);
}

uint64_t sub_23F3B5F18()
{
  return swift_retain();
}

uint64_t sub_23F3B5F20(uint64_t a1)
{
  uint64_t v1;

  return sub_23F3F5EF8(a1, v1);
}

_QWORD *sub_23F3B5F2C(_QWORD *result)
{
  uint64_t v1;

  *result = 41;
  result[1] = 0xE100000000000000;
  result[2] = v1;
  return result;
}

uint64_t sub_23F3B5F40()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F3B5F4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  unint64_t v8;

  sub_23F3C090C();
  v6 = sub_23F61B32C();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return sub_23F36195C(v3, a2, v6);
  v8 = *(_QWORD *)(v3 + *(int *)(a3 + 20) + 24);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_23F3B5FC4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F3B5FD0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = sub_23F61B32C();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return sub_23F36196C(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for AlphaToolRenderer()
{
  uint64_t result;

  result = qword_256E70EA8;
  if (!qword_256E70EA8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23F3B6080()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23F61B32C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23F3B60F0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  int64_t v3;
  uint64_t v7;
  uint64_t result;
  int64_t v9;
  int v10;
  int v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v23 = MEMORY[0x24BEE4AF8];
    sub_23F37B828(0, v3, 0);
    v7 = v23;
    result = sub_23F3C037C(a1);
    v9 = result;
    v11 = v10;
    v13 = v12 & 1;
    v14 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0)
      v14 = a2;
    v15 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v15 = 11;
    v22 = v15 | (v14 << 16);
    while ((v9 & 0x8000000000000000) == 0 && v9 < 1 << *(_BYTE *)(a1 + 32))
    {
      if (((*(_QWORD *)(a1 + 56 + (((unint64_t)v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_18;
      if (*(_DWORD *)(a1 + 36) != v11)
        goto LABEL_19;
      v16 = *(_BYTE *)(*(_QWORD *)(a1 + 48) + v9);
      v18 = *(_QWORD *)(v23 + 16);
      v17 = *(_QWORD *)(v23 + 24);
      if (v18 >= v17 >> 1)
        sub_23F3C092C((char *)(v17 > 1));
      *(_QWORD *)(v23 + 16) = v18 + 1;
      v19 = v23 + 24 * v18;
      *(_QWORD *)(v19 + 32) = 15;
      *(_QWORD *)(v19 + 40) = v22;
      *(_BYTE *)(v19 + 48) = v16;
      result = sub_23F3C0294(v9, v11, v13 & 1, a1);
      v9 = result;
      v11 = v20;
      v13 = v21 & 1;
      if (!--v3)
      {
        sub_23F382E0C(result, v20, v21 & 1);
        swift_bridgeObjectRelease();
        return v7;
      }
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

void sub_23F3B62BC(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8, unint64_t a9)
{
  int64_t v10;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  int64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  int64_t v39;
  char v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v44;
  uint64_t v45;
  char v48;
  int v49;
  int64_t v50;
  uint64_t v51;

  v10 = *(_QWORD *)(a1 + 16);
  if (v10)
  {
    v12 = a1;
    v51 = MEMORY[0x24BEE4AF8];
    v13 = (char *)sub_23F3C08E0();
    sub_23F37B828(v13, v10, 0);
    v15 = sub_23F3C037C(v12);
    v17 = v16 & 1;
    v18 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0)
      v18 = a2;
    v19 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v19 = 11;
    v44 = v19 | (v18 << 16);
    v45 = v12 + 56;
    v41 = v12;
    v42 = a2;
    while ((v15 & 0x8000000000000000) == 0 && v15 < 1 << *(_BYTE *)(v12 + 32))
    {
      if (((*(_QWORD *)(v45 + (((unint64_t)v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
        goto LABEL_20;
      if (*(_DWORD *)(v12 + 36) != (_DWORD)v14)
        goto LABEL_21;
      v48 = v17;
      v49 = v14;
      v50 = v10;
      v20 = *(_QWORD *)(v12 + 48) + 24 * v15;
      v21 = *(_QWORD *)v20;
      v22 = *(_QWORD *)(v20 + 8);
      v23 = *(_BYTE *)(v20 + 16);
      v24 = a3;
      sub_23F3BB828(0xFuLL, v44, a2, a3);
      v26 = v25;
      sub_23F3BB828(0xFuLL, v21, a5, a6);
      v28 = v27;
      sub_23F3BB828(0xFuLL, v22, a5, a6);
      if (__OFADD__(v26, v28))
        goto LABEL_22;
      v30 = v29;
      sub_23F3BBA4C(0xFuLL, v26 + v28, a8, a9);
      if (__OFADD__(v26, v30))
        goto LABEL_23;
      v32 = v31;
      sub_23F3BBA4C(0xFuLL, v26 + v30, a8, a9);
      if (v33 >> 14 < v32 >> 14)
        goto LABEL_24;
      v34 = v33;
      v35 = v24;
      v36 = *(_QWORD *)(v51 + 16);
      v37 = *(_QWORD *)(v51 + 24);
      if (v36 >= v37 >> 1)
        sub_23F3C092C((char *)(v37 > 1));
      *(_QWORD *)(v51 + 16) = v36 + 1;
      v38 = v51 + 24 * v36;
      *(_QWORD *)(v38 + 32) = v32;
      *(_QWORD *)(v38 + 40) = v34;
      *(_BYTE *)(v38 + 48) = v23;
      v12 = v41;
      v39 = sub_23F3C0294(v15, v49, v48 & 1, v41);
      v15 = v39;
      v17 = v40 & 1;
      v10 = v50 - 1;
      a3 = v35;
      a2 = v42;
      if (v50 == 1)
      {
        sub_23F382E0C(v39, v14, v17);
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
  }
  else
  {
LABEL_18:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void sub_23F3B6578(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  unint64_t v13;
  uint64_t v14;
  _QWORD v15[2];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v17 = type metadata accessor for RenderableTool();
  v3 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    v15[1] = v1;
    v18 = MEMORY[0x24BEE4AF8];
    sub_23F3C08E0();
    sub_23F37BC90();
    v7 = v18;
    v16 = sub_23F618BB4();
    sub_23F383D14();
    v9 = a1 + v8;
    v11 = *(_QWORD *)(v10 + 72);
    v12 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    do
    {
      v12(v5, v9, v16);
      swift_storeEnumTagMultiPayload();
      v18 = v7;
      v13 = *(_QWORD *)(v7 + 16);
      if (v13 >= *(_QWORD *)(v7 + 24) >> 1)
      {
        sub_23F37BC90();
        v7 = v18;
      }
      *(_QWORD *)(v7 + 16) = v13 + 1;
      sub_23F383EB8();
      sub_23F3C04DC((uint64_t)v5, v7 + v14 + *(_QWORD *)(v3 + 72) * v13, (uint64_t (*)(_QWORD))type metadata accessor for RenderableTool);
      v9 += v11;
      --v6;
    }
    while (v6);
  }
  sub_23F362870();
}

uint64_t sub_23F3B66C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v2 = *(_QWORD *)(a2 + 16);
  v3 = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v14 = MEMORY[0x24BEE4AF8];
    sub_23F37B47C();
    v3 = v14;
    v5 = *(_QWORD *)(type metadata accessor for PromptToolData(0) - 8);
    v6 = *(_QWORD *)(v5 + 72);
    v7 = (uint64_t *)(((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
                   + a2
                   + 24);
    do
    {
      v9 = *(v7 - 1);
      v8 = *v7;
      v11 = *(_QWORD *)(v14 + 16);
      v10 = *(_QWORD *)(v14 + 24);
      sub_23F617BA0();
      if (v11 >= v10 >> 1)
        sub_23F37B47C();
      *(_QWORD *)(v14 + 16) = v11 + 1;
      v12 = v14 + 16 * v11;
      *(_QWORD *)(v12 + 32) = v9;
      *(_QWORD *)(v12 + 40) = v8;
      v7 = (uint64_t *)((char *)v7 + v6);
      --v2;
    }
    while (v2);
  }
  return v3;
}

void sub_23F3B67B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v3 = type metadata accessor for ToolPromptMap(0);
  v25 = *(_QWORD *)(v3 - 8);
  v26 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v24 = (uint64_t)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v23 = (uint64_t)v21 - v6;
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    v21[1] = v1;
    v28 = MEMORY[0x24BEE4AF8];
    sub_23F37BC28();
    v8 = sub_23F3823C8(a1);
    if ((v10 & 1) == 0)
    {
      v11 = v8;
      v12 = a1 + 64;
      v13 = v7 - 1;
      v22 = a1 + 64;
      if ((v8 & 0x8000000000000000) == 0)
      {
        while (v11 < 1 << *(_BYTE *)(a1 + 32))
        {
          if ((*(_QWORD *)(v12 + 8 * ((unint64_t)v11 >> 6)) & (1 << v11)) == 0)
            goto LABEL_19;
          if ((_DWORD)v9 != *(_DWORD *)(a1 + 36))
            goto LABEL_20;
          v27 = v9;
          v14 = v23;
          sub_23F3C050C(*(_QWORD *)(a1 + 56) + *(_QWORD *)(v25 + 72) * v11, v23, type metadata accessor for ToolPromptMap);
          v15 = v14;
          v16 = v24;
          sub_23F3C04DC(v15, v24, type metadata accessor for ToolPromptMap);
          v17 = *(_QWORD *)(v16 + *(int *)(v26 + 24));
          sub_23F617BA0();
          sub_23F3C053C();
          v18 = v28;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_23F37BC28();
            v18 = v28;
          }
          v19 = *(_QWORD *)(v18 + 16);
          if (v19 >= *(_QWORD *)(v18 + 24) >> 1)
          {
            sub_23F37BC28();
            v18 = v28;
          }
          *(_QWORD *)(v18 + 16) = v19 + 1;
          *(_QWORD *)(v18 + 8 * v19 + 32) = v17;
          if (v11 >= -(-1 << *(_BYTE *)(a1 + 32)))
            goto LABEL_21;
          v12 = v22;
          if ((*(_QWORD *)(v22 + 8 * ((unint64_t)v11 >> 6)) & (1 << v11)) == 0)
            goto LABEL_22;
          if ((_DWORD)v27 != *(_DWORD *)(a1 + 36))
            goto LABEL_23;
          v20 = sub_23F61C868();
          if (!v13)
            return;
          v11 = v20;
          v9 = *(unsigned int *)(a1 + 36);
          --v13;
          if (v20 < 0)
            break;
        }
      }
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
    }
    __break(1u);
  }
}

void sub_23F3B6A30(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), void (*a4)(uint64_t, uint64_t, _QWORD), void (*a5)(_QWORD), void (*a6)(void))
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD v23[2];
  uint64_t v24;
  void (*v25)(void);
  uint64_t v26;

  v25 = a6;
  v24 = a3(0);
  v10 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v12 = (char *)v23 - v11;
  v13 = *(_QWORD *)(a1 + 16);
  if (v13)
  {
    v23[0] = a4;
    v23[1] = v6;
    v26 = MEMORY[0x24BEE4AF8];
    v14 = sub_23F3C08E0();
    a4(v14, v13, 0);
    v15 = v26;
    a5(0);
    sub_23F383D14();
    v17 = a1 + v16;
    v19 = *(_QWORD *)(v18 + 72);
    do
    {
      v25();
      v26 = v15;
      v21 = *(_QWORD *)(v15 + 16);
      v20 = *(_QWORD *)(v15 + 24);
      if (v21 >= v20 >> 1)
      {
        ((void (*)(BOOL, unint64_t, uint64_t))v23[0])(v20 > 1, v21 + 1, 1);
        v15 = v26;
      }
      *(_QWORD *)(v15 + 16) = v21 + 1;
      sub_23F383EB8();
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v15 + v22 + *(_QWORD *)(v10 + 72) * v21, v12, v24);
      v17 += v19;
      --v13;
    }
    while (v13);
  }
  sub_23F362870();
}

uint64_t sub_23F3B6B70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD v40[2];
  uint64_t v41;
  uint64_t v42;
  char *v43;
  _QWORD *v44;
  char *v45;
  char *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;

  v48 = sub_23F35D2E8(&qword_256E708C8);
  v3 = MEMORY[0x24BDAC7A8](v48);
  v47 = (_QWORD *)((char *)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = MEMORY[0x24BDAC7A8](v3);
  v46 = (char *)v40 - v6;
  v7 = MEMORY[0x24BDAC7A8](v5);
  v45 = (char *)v40 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v44 = (_QWORD *)((char *)v40 - v10);
  MEMORY[0x24BDAC7A8](v9);
  v43 = (char *)v40 - v11;
  v54 = sub_23F61BBA8();
  v56 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v55 = (char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 16);
  v14 = MEMORY[0x24BEE4AF8];
  if (!v13)
    return v14;
  v40[1] = v1;
  v57 = MEMORY[0x24BEE4AF8];
  sub_23F37B758();
  result = sub_23F3823C8(a1);
  if (result < 0 || (v18 = result, result >= 1 << *(_BYTE *)(a1 + 32)))
  {
LABEL_20:
    __break(1u);
  }
  else
  {
    v19 = a1 + 64;
    v20 = v17 & 1;
    v41 = a1 + 64;
    v42 = a1;
    v21 = (uint64_t *)v45;
    while ((*(_QWORD *)(v19 + 8 * (v18 >> 6)) & (1 << v18)) != 0)
    {
      if ((_DWORD)v16 != *(_DWORD *)(a1 + 36))
        goto LABEL_22;
      v50 = 1 << v18;
      v51 = v18 >> 6;
      v53 = v20;
      v49 = v16;
      v52 = v13;
      v22 = v48;
      v23 = v43;
      v24 = (uint64_t)&v43[*(int *)(v48 + 48)];
      v25 = *(_QWORD *)(a1 + 56);
      v26 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v18);
      v27 = *v26;
      v28 = v26[1];
      v29 = type metadata accessor for ParameterPromptMap(0);
      sub_23F3C050C(v25 + *(_QWORD *)(*(_QWORD *)(v29 - 8) + 72) * v18, v24, type metadata accessor for ParameterPromptMap);
      *v23 = v27;
      v23[1] = v28;
      v30 = (uint64_t)v44;
      *v44 = v27;
      *(_QWORD *)(v30 + 8) = v28;
      sub_23F3C050C(v24, v30 + *(int *)(v22 + 48), type metadata accessor for ParameterPromptMap);
      sub_23F3C0494(v30, (uint64_t)v21);
      swift_bridgeObjectRetain_n();
      sub_23F3625D8((uint64_t)v23, &qword_256E708C8);
      v31 = *(int *)(v22 + 48);
      v32 = (uint64_t)&v46[v31];
      v33 = *v21;
      v34 = v21[1];
      sub_23F3C050C((uint64_t)v21 + v31, (uint64_t)&v46[v31], type metadata accessor for ParameterPromptMap);
      v35 = *(int *)(v22 + 48);
      v36 = (uint64_t)v47;
      v37 = (char *)v47 + v35;
      *v47 = v33;
      *(_QWORD *)(v36 + 8) = v34;
      sub_23F3C04DC(v32, v36 + v35, type metadata accessor for ParameterPromptMap);
      (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v55, v37, v54);
      sub_23F617BA0();
      sub_23F3625D8(v36, &qword_256E708C8);
      sub_23F3625D8((uint64_t)v21, &qword_256E708C8);
      v14 = v57;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F37B758();
        v14 = v57;
      }
      v38 = *(_QWORD *)(v14 + 16);
      if (v38 >= *(_QWORD *)(v14 + 24) >> 1)
      {
        sub_23F37B758();
        v14 = v57;
      }
      *(_QWORD *)(v14 + 16) = v38 + 1;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v56 + 32))(v14+ ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80))+ *(_QWORD *)(v56 + 72) * v38, v55, v54);
      v57 = v14;
      if ((v53 & 1) != 0)
        goto LABEL_26;
      v19 = v41;
      a1 = v42;
      v39 = v52;
      if ((uint64_t)v18 >= -(-1 << *(_BYTE *)(v42 + 32)))
        goto LABEL_23;
      if ((*(_QWORD *)(v41 + 8 * v51) & v50) == 0)
        goto LABEL_24;
      if ((_DWORD)v49 != *(_DWORD *)(v42 + 36))
        goto LABEL_25;
      result = sub_23F61C868();
      v13 = v39 - 1;
      if (!v13)
        return v14;
      v18 = result;
      if ((result & 0x8000000000000000) == 0)
      {
        v20 = 0;
        v16 = *(unsigned int *)(a1 + 36);
        if (result < 1 << *(_BYTE *)(a1 + 32))
          continue;
      }
      goto LABEL_20;
    }
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_23F3B6F8C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  result = MEMORY[0x24BEE4AF8];
  v8 = MEMORY[0x24BEE4AF8];
  v3 = *(_QWORD *)(a2 + 16);
  if (v3)
  {
    v4 = *(_QWORD *)(type metadata accessor for PromptToolData(0) - 8);
    v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v6 = *(_QWORD *)(v4 + 72);
    swift_retain();
    swift_retain();
    v7 = v5 + 32;
    do
    {
      sub_23F617BA0();
      sub_23F3867E4();
      v7 += v6;
      --v3;
    }
    while (v3);
    swift_release();
    swift_release();
    return v8;
  }
  return result;
}

uint64_t sub_23F3B7040(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, char *, uint64_t);
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];
  char *v22;
  uint64_t v23;
  char *v24;

  v3 = sub_23F35D2E8(&qword_256E70238);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23F61B5D8();
  v23 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v24 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v22 = (char *)v21 - v9;
  v10 = *(_QWORD *)(a1 + 16);
  if (!v10)
    return MEMORY[0x24BEE4AF8];
  v21[1] = v1;
  v11 = *(_QWORD *)(sub_23F618BB4() - 8);
  v12 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  v13 = *(_QWORD *)(v11 + 72);
  v21[0] = a1;
  sub_23F617BA0();
  v14 = MEMORY[0x24BEE4AF8];
  do
  {
    sub_23F618B9C();
    if (sub_23F36195C((uint64_t)v5, 1, v6) == 1)
    {
      sub_23F3625D8((uint64_t)v5, &qword_256E70238);
    }
    else
    {
      v15 = v22;
      v16 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
      v16(v22, v5, v6);
      v16(v24, v15, v6);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F37796C();
        v14 = v18;
      }
      v17 = *(_QWORD *)(v14 + 16);
      if (v17 >= *(_QWORD *)(v14 + 24) >> 1)
      {
        sub_23F37796C();
        v14 = v19;
      }
      *(_QWORD *)(v14 + 16) = v17 + 1;
      v16((char *)(v14+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(_QWORD *)(v23 + 72) * v17), v24, v6);
    }
    v12 += v13;
    --v10;
  }
  while (v10);
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_23F3B7274(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t result;
  _QWORD v38[2];
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  _QWORD *v48;

  v5 = type metadata accessor for PromptToolData(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v46 = (uint64_t)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v47 = (_QWORD *)((char *)v38 - v9);
  v48 = (_QWORD *)MEMORY[0x24BEE4B00];
  v45 = *(_QWORD *)(a2 + 16);
  if (v45)
  {
    v38[0] = a1;
    v38[1] = v2;
    v10 = 0;
    v11 = *(unsigned __int8 *)(v6 + 80);
    v43 = (v11 + 32) & ~v11;
    v44 = a2 + v43;
    v12 = (_QWORD *)MEMORY[0x24BEE4B00];
    v40 = v11 | 7;
    v39 = xmmword_23F61E7E0;
    v41 = a2;
    v42 = v6;
    while (v10 < *(_QWORD *)(a2 + 16))
    {
      v13 = *(_QWORD *)(v6 + 72);
      v14 = v47;
      sub_23F3C050C(v44 + v13 * v10, (uint64_t)v47, type metadata accessor for PromptToolData);
      v16 = *v14;
      v15 = v14[1];
      sub_23F617BA0();
      v18 = sub_23F3754D4(v16, v15);
      v19 = v12[2];
      v20 = (v17 & 1) == 0;
      if (__OFADD__(v19, v20))
        goto LABEL_21;
      v21 = v17;
      if (v12[3] < v19 + v20)
      {
        sub_23F51467C();
        v12 = v48;
        v22 = sub_23F3754D4(v16, v15);
        if ((v21 & 1) != (v23 & 1))
          goto LABEL_23;
        v18 = v22;
      }
      if ((v21 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v24 = v12[7];
        sub_23F3C04DC((uint64_t)v47, v46, type metadata accessor for PromptToolData);
        v25 = *(_QWORD *)(v24 + 8 * v18);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v24 + 8 * v18) = v25;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_23F377994();
          v25 = v35;
          *(_QWORD *)(v24 + 8 * v18) = v35;
        }
        v27 = *(_QWORD *)(v25 + 16);
        if (v27 >= *(_QWORD *)(v25 + 24) >> 1)
        {
          sub_23F377994();
          v25 = v36;
          *(_QWORD *)(v24 + 8 * v18) = v36;
        }
        v6 = v42;
        v28 = v43;
        *(_QWORD *)(v25 + 16) = v27 + 1;
        sub_23F3C04DC(v46, v25 + v28 + v27 * v13, type metadata accessor for PromptToolData);
        a2 = v41;
      }
      else
      {
        sub_23F35D2E8(&qword_256E6FD90);
        v29 = v43;
        v30 = swift_allocObject();
        *(_OWORD *)(v30 + 16) = v39;
        sub_23F3C04DC((uint64_t)v47, v30 + v29, type metadata accessor for PromptToolData);
        v12[(v18 >> 6) + 8] |= 1 << v18;
        v31 = (uint64_t *)(v12[6] + 16 * v18);
        *v31 = v16;
        v31[1] = v15;
        *(_QWORD *)(v12[7] + 8 * v18) = v30;
        v32 = v12[2];
        v33 = __OFADD__(v32, 1);
        v34 = v32 + 1;
        if (v33)
          goto LABEL_22;
        v12[2] = v34;
        v6 = v42;
      }
      if (v45 == ++v10)
      {
        swift_release();
        swift_release();
        return (uint64_t)v12;
      }
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    result = sub_23F61CC94();
    __break(1u);
  }
  else
  {
    swift_release();
    swift_release();
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

void sub_23F3B75B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  _QWORD v37[2];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  int64_t v44;
  uint64_t v45;
  _QWORD v46[2];
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  _QWORD *v50;

  v2 = sub_23F35D2E8(&qword_256E70EF0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolPromptMap(0);
  v38 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v41 = (uint64_t)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v40 = (uint64_t)v37 - v8;
  v42 = (_QWORD *)MEMORY[0x24BEE4B00];
  v50 = (_QWORD *)MEMORY[0x24BEE4B00];
  sub_23F38231C(a1, v46);
  v9 = v46[0];
  v43 = v46[1];
  v10 = v48;
  v11 = v49;
  v37[0] = v47;
  v44 = (unint64_t)(v47 + 64) >> 6;
  sub_23F617BA0();
  v39 = v5;
  while (1)
  {
    while (1)
    {
      if (v11)
      {
        v12 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v13 = v12 | (v10 << 6);
      }
      else
      {
        v14 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
          __break(1u);
          goto LABEL_36;
        }
        if (v14 >= v44)
          goto LABEL_34;
        v15 = *(_QWORD *)(v43 + 8 * v14);
        v16 = v10 + 1;
        if (!v15)
        {
          v16 = v10 + 2;
          if (v10 + 2 >= v44)
            goto LABEL_34;
          v15 = *(_QWORD *)(v43 + 8 * v16);
          if (!v15)
          {
            v16 = v10 + 3;
            if (v10 + 3 >= v44)
              goto LABEL_34;
            v15 = *(_QWORD *)(v43 + 8 * v16);
            if (!v15)
            {
              v16 = v10 + 4;
              if (v10 + 4 >= v44)
                goto LABEL_34;
              v15 = *(_QWORD *)(v43 + 8 * v16);
              if (!v15)
              {
                v16 = v10 + 5;
                if (v10 + 5 >= v44)
                  goto LABEL_34;
                v15 = *(_QWORD *)(v43 + 8 * v16);
                if (!v15)
                {
                  v17 = v10 + 6;
                  while (v17 < v44)
                  {
                    v15 = *(_QWORD *)(v43 + 8 * v17++);
                    if (v15)
                    {
                      v16 = v17 - 1;
                      goto LABEL_19;
                    }
                  }
LABEL_34:
                  sub_23F382E18();
                  return;
                }
              }
            }
          }
        }
LABEL_19:
        v11 = (v15 - 1) & v15;
        v13 = __clz(__rbit64(v15)) + (v16 << 6);
        v10 = v16;
      }
      v18 = (uint64_t *)(*(_QWORD *)(v9 + 48) + 16 * v13);
      v20 = *v18;
      v19 = v18[1];
      v21 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v13);
      swift_getKeyPath();
      v45 = v21;
      sub_23F617BA0();
      sub_23F617BA0();
      swift_getAtKeyPath();
      swift_release();
      if (sub_23F36195C((uint64_t)v4, 1, v5) != 1)
        break;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23F3625D8((uint64_t)v4, &qword_256E70EF0);
    }
    v22 = v40;
    sub_23F3C04DC((uint64_t)v4, v40, type metadata accessor for ToolPromptMap);
    sub_23F3C04DC(v22, v41, type metadata accessor for ToolPromptMap);
    v23 = v42;
    if (v42[3] <= v42[2])
    {
      sub_23F514668();
      v23 = v50;
    }
    sub_23F61CD30();
    sub_23F61C22C();
    v24 = sub_23F61CD60();
    v25 = v23 + 8;
    v42 = v23;
    v26 = -1 << *((_BYTE *)v23 + 32);
    v27 = v24 & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~v23[(v27 >> 6) + 8]) == 0)
      break;
    v29 = __clz(__rbit64((-1 << v27) & ~v23[(v27 >> 6) + 8])) | v27 & 0x7FFFFFFFFFFFFFC0;
    v5 = v39;
LABEL_33:
    *(_QWORD *)((char *)v25 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
    v34 = v41;
    v35 = v42;
    v36 = (_QWORD *)(v42[6] + 16 * v29);
    *v36 = v20;
    v36[1] = v19;
    sub_23F3C04DC(v34, v35[7] + *(_QWORD *)(v38 + 72) * v29, type metadata accessor for ToolPromptMap);
    ++v35[2];
    swift_bridgeObjectRelease();
  }
  v30 = 0;
  v31 = (unint64_t)(63 - v26) >> 6;
  v5 = v39;
  while (++v28 != v31 || (v30 & 1) == 0)
  {
    v32 = v28 == v31;
    if (v28 == v31)
      v28 = 0;
    v30 |= v32;
    v33 = v25[v28];
    if (v33 != -1)
    {
      v29 = __clz(__rbit64(~v33)) + (v28 << 6);
      goto LABEL_33;
    }
  }
LABEL_36:
  __break(1u);
}

void sub_23F3B79EC(unint64_t a1, unint64_t a2, _QWORD *a3)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  if (a3[2])
  {
    v5 = a3[4];
    v4 = a3[5];
    v6 = a3[6];
    sub_23F510D3C(1, (uint64_t)a3);
    v34 = v9;
    if (v7 == v8 >> 1)
    {
      sub_23F3668F4();
      sub_23F3B1EA4();
      sub_23F383738();
LABEL_25:
      swift_unknownObjectRelease();
    }
    else
    {
      v10 = v7;
      v33 = v8 >> 1;
      if (v7 < (uint64_t)(v8 >> 1))
      {
        sub_23F3668F4();
        sub_23F3B1EA4();
        sub_23F383738();
        v32 = a1;
        while (1)
        {
          v11 = (unint64_t *)(v34 + 24 * v10);
          v12 = v11[1];
          v35 = v10;
          v36 = *v11;
          v13 = v11[2];
          swift_bridgeObjectRetain_n();
          v37 = v12;
          sub_23F383E5C();
          v38 = v13;
          sub_23F362CDC();
          v14 = sub_23F3B60F0(MEMORY[0x24BEE4B08], a1, a2);
          sub_23F382B28();
          v15 = sub_23F61C550();
          v42 = v15;
          v16 = *(_QWORD *)(v14 + 16);
          if (v16)
          {
            v17 = v14 + 48;
            do
            {
              v17 += 24;
              sub_23F3C07A4();
              --v16;
            }
            while (v16);
            sub_23F362C60();
            v18 = v42;
          }
          else
          {
            v18 = v15;
            sub_23F362C60();
          }
          sub_23F3668F4();
          sub_23F61C280();
          sub_23F384B00();
          sub_23F3668F4();
          sub_23F3B1EA4();
          sub_23F384324();
          sub_23F383E5C();
          sub_23F3B62BC(v18, v5, v4, v6, a1, a2, v18, v5, v4);
          if (__OFADD__(*(_QWORD *)(v19 + 16), *(_QWORD *)(v6 + 16)))
            break;
          sub_23F3B1EA4();
          sub_23F377378();
          v40 = v20;
          v21 = sub_23F3B1EA4();
          sub_23F3863B4(v21);
          sub_23F383EB0();
          sub_23F38631C();
          sub_23F384120();
          swift_bridgeObjectRelease();
          v22 = sub_23F61C550();
          v43 = v22;
          v23 = *(_QWORD *)(v40 + 16);
          if (v23)
          {
            v24 = v40 + 48;
            do
            {
              v24 += 24;
              sub_23F3C07A4();
              --v23;
            }
            while (v23);
            swift_bridgeObjectRelease();
            sub_23F384120();
            v25 = v43;
          }
          else
          {
            v25 = v22;
            swift_bridgeObjectRelease();
            sub_23F384120();
          }
          swift_bridgeObjectRelease();
          sub_23F362D18();
          swift_bridgeObjectRelease();
          sub_23F383E5C();
          sub_23F61C280();
          sub_23F384324();
          sub_23F383738();
          sub_23F383E5C();
          sub_23F384A00();
          sub_23F3668F4();
          sub_23F3B62BC(v38, v5, v4, v25, v36, v37, v38, v5, v4);
          if (__OFADD__(*(_QWORD *)(v26 + 16), *(_QWORD *)(v25 + 16)))
            goto LABEL_27;
          sub_23F384A00();
          sub_23F377378();
          v41 = v27;
          v28 = sub_23F384A00();
          sub_23F3863B4(v28);
          sub_23F362CDC();
          sub_23F38631C();
          sub_23F362C60();
          sub_23F38458C();
          v29 = sub_23F61C550();
          v44 = v29;
          v30 = *(_QWORD *)(v41 + 16);
          if (v30)
          {
            v31 = v41 + 48;
            do
            {
              v31 += 24;
              sub_23F3C07A4();
              --v30;
            }
            while (v30);
            swift_bridgeObjectRelease();
            sub_23F362C60();
            v6 = v44;
          }
          else
          {
            v6 = v29;
            swift_bridgeObjectRelease();
            sub_23F362C60();
          }
          v10 = v35 + 1;
          sub_23F38458C();
          sub_23F3837B0();
          swift_bridgeObjectRelease();
          a1 = v32;
          if (v35 + 1 == v33)
            goto LABEL_25;
        }
        __break(1u);
LABEL_27:
        __break(1u);
      }
      __break(1u);
    }
  }
}

uint64_t sub_23F3B7DF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  void (*v16)(char *, unint64_t, uint64_t);
  char *v17;
  int v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  unint64_t v21;
  BOOL v22;
  BOOL v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  int v26;
  int v27;
  int v28;
  int v29;
  char *v30;
  char *v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;

  v3 = sub_23F618BB4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v25 - v9;
  result = MEMORY[0x24BDAC7A8](v8);
  v36 = (char *)&v25 - v12;
  v13 = MEMORY[0x24BEE4AF8];
  v37 = MEMORY[0x24BEE4AF8];
  v34 = *(_QWORD *)(a1 + 16);
  if (v34)
  {
    v25 = v1;
    v14 = 0;
    v33 = *MEMORY[0x24BE57550];
    v29 = *MEMORY[0x24BE57558];
    v28 = *MEMORY[0x24BE57548];
    v27 = *MEMORY[0x24BE57540];
    v26 = *MEMORY[0x24BE57568];
    v30 = v10;
    v31 = v7;
    v32 = a1;
    while (v14 < *(_QWORD *)(a1 + 16))
    {
      v15 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      v35 = *(_QWORD *)(v4 + 72);
      v16 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
      v17 = v36;
      v16(v36, a1 + v15 + v35 * v14, v3);
      v16(v10, (unint64_t)v17, v3);
      v18 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v10, v3);
      if (v18 == v33
        || v18 != v29 && (v18 != v28 ? (v22 = v18 == v27) : (v22 = 1), !v22 ? (v23 = v18 == v26) : (v23 = 1), v23))
      {
        (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v3);
        v19 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
        v19(v7, v36, v3);
        v20 = v37;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F37BBC0();
          v20 = v37;
        }
        v21 = *(_QWORD *)(v20 + 16);
        if (v21 >= *(_QWORD *)(v20 + 24) >> 1)
        {
          sub_23F37BBC0();
          v20 = v37;
        }
        *(_QWORD *)(v20 + 16) = v21 + 1;
        v7 = v31;
        result = ((uint64_t (*)(unint64_t, char *, uint64_t))v19)(v20 + v15 + v21 * v35, v31, v3);
        v37 = v20;
        a1 = v32;
        v10 = v30;
      }
      else
      {
        v24 = *(void (**)(char *, uint64_t))(v4 + 8);
        v24(v10, v3);
        result = ((uint64_t (*)(char *, uint64_t))v24)(v36, v3);
      }
      if (v34 == ++v14)
      {
        v13 = v37;
        goto LABEL_21;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_21:
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

uint64_t sub_23F3B80B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, unint64_t, uint64_t);
  char *v17;
  char *v18;
  void (*v19)(char *, uint64_t);
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  unint64_t v22;
  _QWORD v23[2];
  uint64_t v24;
  int v25;
  uint64_t v26;
  char *v27;
  char *v28;
  unint64_t v29;
  uint64_t v30;

  v3 = sub_23F618BB4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v28 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v27 = (char *)v23 - v8;
  result = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v23 - v10;
  v12 = MEMORY[0x24BEE4AF8];
  v30 = MEMORY[0x24BEE4AF8];
  v26 = *(_QWORD *)(a1 + 16);
  if (v26)
  {
    v23[1] = v1;
    v13 = 0;
    v25 = *MEMORY[0x24BE57558];
    v24 = a1;
    while (v13 < *(_QWORD *)(a1 + 16))
    {
      v14 = *(_QWORD *)(v4 + 72);
      v15 = a1;
      v29 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      v16 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
      v16(v11, a1 + v29 + v14 * v13, v3);
      v17 = v11;
      v18 = v27;
      v16(v27, (unint64_t)v17, v3);
      LODWORD(v16) = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v18, v3);
      v19 = *(void (**)(char *, uint64_t))(v4 + 8);
      v19(v18, v3);
      if ((_DWORD)v16 == v25)
      {
        v20 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
        v20(v28, v17, v3);
        v21 = v30;
        v11 = v17;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F37BBC0();
          v21 = v30;
        }
        v22 = *(_QWORD *)(v21 + 16);
        if (v22 >= *(_QWORD *)(v21 + 24) >> 1)
        {
          sub_23F37BBC0();
          v21 = v30;
        }
        *(_QWORD *)(v21 + 16) = v22 + 1;
        result = ((uint64_t (*)(unint64_t, char *, uint64_t))v20)(v21 + v29 + v22 * v14, v28, v3);
        v30 = v21;
        a1 = v24;
      }
      else
      {
        result = ((uint64_t (*)(char *, uint64_t))v19)(v17, v3);
        v11 = v17;
        a1 = v15;
      }
      if (v26 == ++v13)
      {
        v12 = v30;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return v12;
  }
  return result;
}

void sub_23F3B830C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_QWORD *)(a3 + 16);
  v17 = MEMORY[0x24BEE4AF8];
  sub_23F37B910();
  if (v5)
  {
    v6 = *(_QWORD *)(a2 + 16);
    v7 = a3 + 32;
    swift_retain();
    swift_retain();
    swift_retain();
    v8 = a2 + 40;
    while (v6)
    {
      sub_23F3668F4();
      sub_23F362CDC();
      sub_23F529638();
      v16 = v9;
      v11 = v10;
      v13 = v12;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = *(_QWORD *)(v17 + 16);
      if (v14 >= *(_QWORD *)(v17 + 24) >> 1)
        sub_23F37B910();
      *(_QWORD *)(v17 + 16) = v14 + 1;
      v15 = (_QWORD *)(v17 + 24 * v14);
      v15[4] = v16;
      v15[5] = v11;
      v15[6] = v13;
      --v6;
      v8 += 16;
      v7 += 8;
      if (!--v5)
        goto LABEL_9;
    }
    __break(1u);
  }
  else
  {
    swift_retain();
    swift_retain();
    swift_retain();
LABEL_9:
    swift_release();
    swift_release();
    swift_release();
  }
}

uint64_t sub_23F3B8498()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD v82[14];
  uint64_t v83;
  uint64_t v84;

  sub_23F362ABC();
  v83 = v3;
  v84 = v4;
  v77 = v0;
  v6 = v5;
  v7 = sub_23F619E98();
  v78 = *(_QWORD *)(v7 - 8);
  v79 = v7;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F36285C();
  v81 = v9;
  sub_23F39C56C();
  v10 = sub_23F61A3A8();
  v65 = *(_QWORD *)(v10 - 8);
  v66 = v10;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F36285C();
  v64 = v12;
  sub_23F35D2E8(&qword_256E70F38);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F36285C();
  v68 = v14;
  sub_23F39C56C();
  v70 = sub_23F619064();
  v63 = *(_QWORD *)(v70 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v15);
  sub_23F36285C();
  v62 = v16;
  sub_23F39C56C();
  v69 = sub_23F61AAD4();
  v72 = *(_QWORD *)(v69 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F36285C();
  v71 = v18;
  sub_23F39C56C();
  v80 = sub_23F61B2C0();
  sub_23F383DA4();
  MEMORY[0x24BDAC7A8](v19);
  sub_23F3834D0();
  v67 = v20;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v21);
  v75 = (char *)&v62 - v22;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v62 - v24;
  v26 = sub_23F61ABB8();
  v73 = *(_QWORD *)(v26 - 8);
  v74 = v26;
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v62 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F35D2E8(&qword_256E702E0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v30);
  sub_23F362B98();
  v31 = sub_23F61B2E4();
  v32 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v34 = (char *)&v62 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = v6;
  v82[2] = sub_23F61B14C();
  sub_23F35D2E8(&qword_256E70F10);
  sub_23F3B0CC8(&qword_256E70F18, &qword_256E70F10);
  sub_23F61ACB4();
  sub_23F3837B0();
  if (sub_23F36195C(v1, 1, v31) == 1)
  {
    v35 = &qword_256E702E0;
    v36 = v1;
LABEL_3:
    sub_23F3625D8(v36, v35);
LABEL_4:
    v37 = MEMORY[0x24BEE4AF8];
    goto LABEL_14;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v34, v1, v31);
  sub_23F61B2CC();
  if ((*(unsigned int (**)(char *, uint64_t))(v2 + 88))(v25, v80) == *MEMORY[0x24BE56B38])
  {
    sub_23F3C06DC();
    v39 = v73;
    v38 = v74;
    (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v29, v25, v74);
    sub_23F529CF0();
    v37 = sub_23F3C0920();
    sub_23F362C60();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v29, v38);
    v40 = *(uint64_t (**)(uint64_t, uint64_t))(v32 + 8);
  }
  else
  {
    v74 = v32;
    sub_23F3C075C();
    v41 = v75;
    sub_23F3C0880();
    if (sub_23F3C0870() != *MEMORY[0x24BE56C10])
    {
      sub_23F3C075C();
      v47 = v67;
      sub_23F3C0880();
      if (sub_23F3C0870() == *MEMORY[0x24BE56B30])
      {
        sub_23F3C06DC();
        v48 = v64;
        v49 = v65;
        v50 = v66;
        sub_23F384840(v64, v47, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v65 + 32));
        sub_23F35D2E8(&qword_256E6FDA0);
        sub_23F3C090C();
        v51 = sub_23F618BB4();
        v52 = *(_QWORD *)(v51 - 8);
        v53 = (*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
        v37 = swift_allocObject();
        *(_OWORD *)(v37 + 16) = xmmword_23F61E7E0;
        sub_23F61A390();
        (*(void (**)(unint64_t, _QWORD, uint64_t))(v52 + 104))(v37 + v53, *MEMORY[0x24BE57550], v51);
        (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v48, v50);
        (*(void (**)(char *, uint64_t))(v74 + 8))(v34, v31);
        return v37;
      }
      sub_23F3C0784(*(uint64_t (**)(uint64_t, uint64_t))(v74 + 8));
      sub_23F3C075C();
      goto LABEL_4;
    }
    sub_23F3C06DC();
    v43 = v71;
    v42 = v72;
    v44 = v69;
    (*(void (**)(uint64_t, char *, uint64_t))(v72 + 32))(v71, v41, v69);
    v45 = v68;
    sub_23F61AAA4();
    v46 = v70;
    if (sub_23F36195C(v45, 1, v70) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v43, v44);
      sub_23F3C0784(*(uint64_t (**)(uint64_t, uint64_t))(v74 + 8));
      v35 = &qword_256E70F38;
      v36 = v45;
      goto LABEL_3;
    }
    v54 = v63;
    v55 = v62;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 32))(v62, v45, v46);
    v56 = sub_23F619040();
    sub_23F3B6A30(v56, (uint64_t)v82, (uint64_t (*)(_QWORD))MEMORY[0x24BE57570], (void (*)(uint64_t, uint64_t, _QWORD))sub_23F37BBC0, (void (*)(_QWORD))MEMORY[0x24BE57608], (void (*)(void))MEMORY[0x24BE575A8]);
    sub_23F362D18();
    v37 = sub_23F3C0920();
    sub_23F362C60();
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v55, v46);
    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v71, v44);
    v40 = *(uint64_t (**)(uint64_t, uint64_t))(v74 + 8);
  }
  sub_23F3C0784(v40);
LABEL_14:
  v57 = v81;
  if (!*(_QWORD *)(v37 + 16))
  {
    sub_23F619088();
    v58 = sub_23F619E8C();
    v59 = sub_23F61C610();
    if (os_log_type_enabled(v58, v59))
    {
      v60 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v60 = 0;
      _os_log_impl(&dword_23F35A000, v58, v59, "No tools provided. Proceeding with no tools.", v60, 2u);
      MEMORY[0x242670B70](v60, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v57, v79);
  }
  return v37;
}

uint64_t sub_23F3B8A8C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  void (*v48)(char *, char *, uint64_t);
  void (*v49)(char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  char *v60;
  uint64_t v61;
  void (*v62)(_QWORD, _QWORD, _QWORD);

  v3 = sub_23F619E98();
  v56 = *(_QWORD *)(v3 - 8);
  v57 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v55 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v54 = (char *)&v51 - v6;
  v7 = sub_23F618BB4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23F35D2E8(&qword_256E70238);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23F61B5D8();
  v58 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v53 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v60 = (char *)&v51 - v17;
  v62 = (void (*)(_QWORD, _QWORD, _QWORD))sub_23F61B14C();
  sub_23F35D2E8(&qword_256E70F10);
  sub_23F3B0CC8(&qword_256E70F18, &qword_256E70F10);
  v18 = sub_23F61AD2C();
  v20 = v19;
  swift_bridgeObjectRelease();
  if (v20)
  {
    sub_23F3BA64C(v18, v20, (uint64_t)v13);
    swift_bridgeObjectRelease();
    if (sub_23F36195C((uint64_t)v13, 1, v14) == 1)
    {
      sub_23F3625D8((uint64_t)v13, &qword_256E70238);
      v21 = v55;
      sub_23F619088();
      v22 = sub_23F619E8C();
      v23 = sub_23F61C610();
      v24 = a2;
      if (os_log_type_enabled(v22, v23))
      {
        v25 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v25 = 0;
        _os_log_impl(&dword_23F35A000, v22, v23, "Could not find the MRU tool in the latest plan or toolbox", v25, 2u);
        MEMORY[0x242670B70](v25, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v56 + 8))(v21, v57);
LABEL_15:
      sub_23F617BA0();
      return v24;
    }
    v26 = v14;
    v27 = v58;
    v28 = v60;
    (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v60, v13, v14);
    v59 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
    v59(v10, v28, v14);
    v29 = *MEMORY[0x24BE57550];
    v55 = *(char **)(v8 + 104);
    ((void (*)(char *, uint64_t, uint64_t))v55)(v10, v29, v7);
    v30 = *(_QWORD *)(a2 + 16);
    if (v30)
    {
      v52 = v26;
      v31 = a2 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
      v32 = *(_QWORD *)(v8 + 72);
      sub_23F3B121C(&qword_256E70F40, (void (*)(uint64_t))MEMORY[0x24BE57570]);
      sub_23F617BA0();
      while ((sub_23F61C0A0() & 1) == 0)
      {
        v31 += v32;
        if (!--v30)
        {
          swift_bridgeObjectRelease();
          v26 = v52;
          goto LABEL_12;
        }
      }
      v24 = a2;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      (*(void (**)(char *, uint64_t))(v58 + 8))(v60, v52);
      goto LABEL_15;
    }
LABEL_12:
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    sub_23F35D2E8(&qword_256E6FDA0);
    v33 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_23F61E7E0;
    v35 = v34 + v33;
    v36 = v59;
    v37 = v60;
    v59((char *)v35, v60, v26);
    ((void (*)(unint64_t, uint64_t, uint64_t))v55)(v35, v29, v7);
    v62 = (void (*)(_QWORD, _QWORD, _QWORD))v34;
    sub_23F617BA0();
    sub_23F386CF4();
    v38 = v26;
    v24 = (uint64_t)v62;
    v39 = v54;
    sub_23F619088();
    v40 = v53;
    v36(v53, v37, v38);
    v41 = sub_23F619E8C();
    v42 = sub_23F61C610();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      v59 = (void (*)(char *, char *, uint64_t))swift_slowAlloc();
      v62 = (void (*)(_QWORD, _QWORD, _QWORD))v59;
      *(_DWORD *)v43 = 136315138;
      v44 = sub_23F61B5B4();
      sub_23F37AE00(v44, v45, (uint64_t *)&v62);
      v61 = v46;
      sub_23F61C790();
      swift_bridgeObjectRelease();
      v47 = *(void (**)(char *, uint64_t))(v58 + 8);
      v47(v40, v38);
      _os_log_impl(&dword_23F35A000, v41, v42, "Inserted tool from last plan to the list of tools to be used in the prompt: %s", v43, 0xCu);
      v48 = v59;
      swift_arrayDestroy();
      MEMORY[0x242670B70](v48, -1, -1);
      MEMORY[0x242670B70](v43, -1, -1);

      (*(void (**)(char *, uint64_t))(v56 + 8))(v39, v57);
      v47(v60, v38);
    }
    else
    {

      v49 = *(void (**)(char *, uint64_t))(v58 + 8);
      v49(v40, v38);
      (*(void (**)(char *, uint64_t))(v56 + 8))(v39, v57);
      v49(v37, v38);
    }
  }
  else
  {
    sub_23F617BA0();
    return a2;
  }
  return v24;
}

void sub_23F3B9098()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t vars0;
  uint64_t vars8;

  sub_23F35D2E8(&qword_256E70F08);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F362B98();
  v4 = sub_23F61AAD4();
  sub_23F383DA4();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F3B17A4();
  v23 = sub_23F61B14C();
  sub_23F35D2E8(&qword_256E70F10);
  sub_23F3B0CC8(&qword_256E70F18, &qword_256E70F10);
  sub_23F61AD08();
  sub_23F3837B0();
  if (sub_23F36195C(v0, 1, v4) == 1)
  {
    sub_23F3625D8(v0, &qword_256E70F08);
    sub_23F510924();
    sub_23F5156E0(v6, v7, v8, v9, v10, v11, v12, v13, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, vars0, vars8);
    sub_23F362D18();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v1, v0, v4);
    sub_23F61AAB0();
    sub_23F510924();
    sub_23F5156E0(v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, vars0,
      vars8);
    sub_23F3837B0();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v4);
  }
  sub_23F383568();
}

void sub_23F3B91E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  _QWORD *v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v54;
  uint64_t v55;
  char v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  _BOOL8 v60;
  char v61;
  unint64_t v62;
  char v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  void (*v70)(uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t inited;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  uint64_t v147;
  char v148[8];
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  _QWORD *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  _QWORD *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179[7];
  _QWORD *v180;

  sub_23F362ABC();
  v160 = v2;
  v4 = v3;
  v163 = v3;
  v6 = v5;
  v157 = v7;
  v8 = sub_23F6184B8();
  v159 = *(_QWORD *)(v8 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F3834D0();
  v170 = v10;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v11);
  v171 = (uint64_t)&v152 - v12;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v152 - v14;
  sub_23F35D2E8(&qword_256E70EE0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v16);
  sub_23F3B17A4();
  v17 = sub_23F384B00();
  v18 = 0;
  v19 = sub_23F3B7DF8(v17);
  sub_23F3B6578(v19);
  sub_23F38458C();
  v20 = *(int *)(type metadata accessor for AlphaToolRenderer() + 20);
  v154 = v0;
  v21 = v0 + v20;
  v175 = v0 + v20;
  v176 = v4;
  v22 = v160;
  v177 = v160;
  sub_23F36F420();
  v169 = v23;
  sub_23F384120();
  v24 = sub_23F384B00();
  v158 = v6;
  v25 = sub_23F3B80B8(v24);
  sub_23F3B6578(v25);
  sub_23F362984();
  v172 = v21;
  v173 = v163;
  v174 = v22;
  sub_23F36F420();
  v27 = v26;
  sub_23F384120();
  v179[0] = v27;
  sub_23F386D10();
  sub_23F3B9EA4(v179[0]);
  v161 = v29;
  v162 = v28;
  v30 = sub_23F3B66C4(v28, v29);
  v31 = *(_QWORD *)(v30 + 16);
  if (v31)
  {
    v167 = 0;
    v179[0] = MEMORY[0x24BEE4AF8];
    sub_23F37B910();
    v32 = v179[0];
    v166 = v30;
    v33 = (uint64_t *)(v30 + 40);
    do
    {
      v34 = (_QWORD *)*(v33 - 1);
      v168 = *v33;
      v169 = v34;
      v179[0] = v32;
      v36 = *(_QWORD *)(v32 + 16);
      v35 = *(_QWORD *)(v32 + 24);
      v37 = v32;
      sub_23F617BA0();
      v32 = v37;
      if (v36 >= v35 >> 1)
      {
        sub_23F37B910();
        v32 = v179[0];
      }
      v33 += 2;
      *(_QWORD *)(v32 + 16) = v36 + 1;
      v38 = (_QWORD *)(v32 + 24 * v36);
      v39 = v168;
      v38[4] = v169;
      v38[5] = v39;
      v38[6] = MEMORY[0x24BEE4B08];
      --v31;
    }
    while (v31);
    v155 = v32;
    swift_bridgeObjectRelease();
    v18 = v167;
  }
  else
  {
    sub_23F384120();
    v155 = MEMORY[0x24BEE4AF8];
  }
  v40 = v162;
  swift_retain();
  v41 = v161;
  swift_retain();
  v42 = sub_23F3B7274(v40, v41);
  sub_23F3B75B0(v42);
  v44 = v43;
  sub_23F362984();
  v45 = sub_23F383EB0();
  sub_23F3B67B8(v45);
  v47 = v46;
  v156 = v44;
  sub_23F384120();
  v48 = v159;
  v168 = *(_QWORD *)(v47 + 16);
  if (v168)
  {
    v152 = v47;
    v153 = v18;
    v49 = v47 + 32;
    sub_23F383738();
    v50 = 0;
    v51 = (_QWORD *)MEMORY[0x24BEE4B00];
    v169 = (_QWORD *)MEMORY[0x24BEE4B00];
    v167 = v47 + 32;
    while (1)
    {
      v52 = *(_QWORD *)(v49 + 8 * v50);
      swift_bridgeObjectRetain_n();
      sub_23F383EB0();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v180 = v51;
      sub_23F5E2968(v179, v52, sub_23F522E68, 0);
      sub_23F384B00();
      sub_23F3C0900();
      v54 = sub_23F35D2E8(&qword_256E704E0);
      if (sub_23F36195C(v1, 1, v54) != 1)
        break;
LABEL_25:
      ++v50;
      sub_23F384364();
      sub_23F382E18();
      sub_23F3C0918();
      swift_bridgeObjectRelease();
      sub_23F384120();
      sub_23F384364();
      v51 = v169;
      v49 = v167;
      if (v50 == v168)
      {
        swift_bridgeObjectRelease_n();
        v18 = v153;
        goto LABEL_28;
      }
    }
    v164 = v52;
    v165 = v51;
    v166 = v50;
    while (1)
    {
      v55 = v1 + *(int *)(v54 + 48);
      sub_23F3C077C((uint64_t)v15, v1);
      sub_23F3C077C(v171, v55);
      sub_23F3C08A0();
      v58 = v57;
      v59 = *(_QWORD *)(v55 + 16);
      v60 = (v56 & 1) == 0;
      if (__OFADD__(v59, v60))
      {
        __break(1u);
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
LABEL_69:
        __break(1u);
LABEL_70:
        sub_23F61CC94();
        __break(1u);
LABEL_71:
        LODWORD(v150) = 0;
        v149 = 1092;
        v148[0] = 2;
        sub_23F61CA9C();
        __break(1u);
        goto LABEL_72;
      }
      v61 = v56;
      if (*(_QWORD *)(v55 + 24) >= v59 + v60)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          if ((v56 & 1) != 0)
            goto LABEL_19;
        }
        else
        {
          sub_23F35D2E8(&qword_256E70428);
          sub_23F61CA24();
          if ((v61 & 1) != 0)
            goto LABEL_19;
        }
      }
      else
      {
        sub_23F513EC4();
        sub_23F3C08A0();
        if ((v61 & 1) != (v63 & 1))
          goto LABEL_70;
        v58 = v62;
        if ((v61 & 1) != 0)
        {
LABEL_19:
          v64 = v170;
          sub_23F3C077C(v170, v171);
          (*(void (**)(char *, uint64_t))(v48 + 8))(v15, v8);
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v48 + 40))(v180[7] + *(_QWORD *)(v48 + 72) * v58, v64, v8);
          goto LABEL_23;
        }
      }
      v65 = v180;
      v180[(v58 >> 6) + 8] |= 1 << v58;
      v66 = *(_QWORD *)(v48 + 72) * v58;
      sub_23F3C077C(v65[6] + v66, (uint64_t)v15);
      sub_23F3C077C(v65[7] + v66, v171);
      v67 = v65[2];
      v68 = __OFADD__(v67, 1);
      v69 = v67 + 1;
      if (v68)
        goto LABEL_65;
      v65[2] = v69;
LABEL_23:
      sub_23F3C0900();
      v54 = sub_23F35D2E8(&qword_256E704E0);
      isUniquelyReferenced_nonNull_native = 1;
      if (sub_23F36195C(v1, 1, v54) == 1)
      {
        v169 = v180;
        v50 = v166;
        goto LABEL_25;
      }
    }
  }
  sub_23F362984();
  v169 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_28:
  sub_23F617000();
  v70 = (void (*)(uint64_t))MEMORY[0x24BDCEA58];
  v71 = sub_23F61B5D8();
  sub_23F3B121C(&qword_256E70430, v70);
  v171 = sub_23F61BFEC();
  v72 = sub_23F3B7040(v158);
  v73 = *(_QWORD *)(v72 + 16);
  if (v73)
  {
    v74 = *(_QWORD *)(v71 - 8);
    v75 = v72 + ((*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80));
    v76 = *(_QWORD *)(v74 + 72);
    v170 = v72;
    sub_23F617BA0();
    v77 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      v78 = sub_23F61B530();
      v79 = *(_QWORD *)(v78 + 16);
      v80 = *(_QWORD *)(v77 + 16);
      if (__OFADD__(v80, v79))
        goto LABEL_66;
      v81 = v78;
      if (!swift_isUniquelyReferenced_nonNull_native() || v80 + v79 > *(_QWORD *)(v77 + 24) >> 1)
      {
        sub_23F3779A8();
        v77 = v82;
      }
      if (*(_QWORD *)(v81 + 16))
      {
        v83 = *(_QWORD *)(v77 + 16);
        v84 = (*(_QWORD *)(v77 + 24) >> 1) - v83;
        sub_23F61BBA8();
        if (v84 < v79)
          goto LABEL_68;
        sub_23F383D14();
        v87 = *(_QWORD *)(v86 + 72);
        v88 = v77 + v85 + v87 * v83;
        v89 = v81 + v85;
        v90 = v87 * v79;
        v91 = v88 + v90;
        v92 = v89 + v90;
        if (v89 < v91 && v88 < v92)
          goto LABEL_71;
        swift_arrayInitWithCopy();
        if (v79)
        {
          v94 = *(_QWORD *)(v77 + 16);
          v68 = __OFADD__(v94, v79);
          v95 = v94 + v79;
          if (v68)
            goto LABEL_69;
          *(_QWORD *)(v77 + 16) = v95;
        }
      }
      else if (v79)
      {
        goto LABEL_67;
      }
      sub_23F384120();
      v75 += v76;
      if (!--v73)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_48;
      }
    }
  }
  swift_bridgeObjectRelease();
  v77 = MEMORY[0x24BEE4AF8];
LABEL_48:
  sub_23F3B6A30(v77, (uint64_t)&v178, (uint64_t (*)(_QWORD))MEMORY[0x24BEB9AB8], (void (*)(uint64_t, uint64_t, _QWORD))sub_23F37BBF4, (void (*)(_QWORD))MEMORY[0x24BEBA368], (void (*)(void))MEMORY[0x24BEBA360]);
  v97 = v96;
  v98 = sub_23F362C60();
  MEMORY[0x24BDAC7A8](v98);
  v99 = v154;
  sub_23F3DDC68((uint64_t (*)(_QWORD))sub_23F3C03FC, (uint64_t)v148, v97);
  v101 = v100;
  MEMORY[0x24BDAC7A8](v100);
  v102 = v160;
  sub_23F36F454((void (*)(uint64_t))sub_23F3C0430, (uint64_t)v148, v101);
  v170 = v103;
  v104 = sub_23F362C60();
  MEMORY[0x24BDAC7A8](v104);
  v150 = v99;
  v151 = v102;
  sub_23F383E5C();
  sub_23F367680();
  v106 = v105;
  v107 = *(_QWORD *)(v105 + 16);
  if (v107)
  {
    v168 = v18;
    sub_23F362CDC();
    v167 = v106;
    v108 = (uint64_t *)(v106 + 48);
    v109 = MEMORY[0x24BEE4AF8];
    do
    {
      if ((v108[6] & 1) == 0)
      {
        v111 = *(v108 - 1);
        v110 = *v108;
        v112 = *(v108 - 2);
        sub_23F384324();
        sub_23F383EB0();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23F3C0670();
          sub_23F377438();
          v109 = v115;
        }
        v113 = *(_QWORD *)(v109 + 16);
        if (v113 >= *(_QWORD *)(v109 + 24) >> 1)
        {
          sub_23F377438();
          v109 = v116;
        }
        *(_QWORD *)(v109 + 16) = v113 + 1;
        v114 = (_QWORD *)(v109 + 24 * v113);
        v114[4] = v112;
        v114[5] = v111;
        v114[6] = v110;
      }
      v108 += 9;
      --v107;
    }
    while (v107);
    swift_bridgeObjectRelease();
    sub_23F362C60();
    v18 = v168;
  }
  else
  {
    sub_23F3837B0();
    v109 = MEMORY[0x24BEE4AF8];
  }
  sub_23F362C60();
  v179[0] = v109;
  sub_23F383E5C();
  sub_23F3BBF3C(v179);
  if (v18)
  {
LABEL_72:
    swift_release();
    __break(1u);
  }
  else
  {
    sub_23F3837B0();
    v117 = sub_23F383E5C();
    sub_23F3BE1CC(v117);
    sub_23F3B830C(v118, v119, v120);
    v122 = v121;
    swift_release();
    swift_release();
    sub_23F383EDC();
    swift_release();
    v123 = sub_23F383738();
    sub_23F3BE1CC(v123);
    sub_23F3B830C(v124, v125, v126);
    sub_23F362984();
    sub_23F383EDC();
    swift_release();
    swift_release();
    v179[0] = v122;
    sub_23F386BC4();
    sub_23F386BC4();
    v127 = (_QWORD *)v179[0];
    if (*(_QWORD *)(v179[0] + 16))
    {
      sub_23F35D2E8(&qword_256E6FD50);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_23F61EBC0;
      *(_QWORD *)(inited + 32) = 0x6F68747970606060;
      *(_QWORD *)(inited + 40) = 0xE90000000000006ELL;
      v129 = MEMORY[0x24BEE4B08];
      *(_QWORD *)(inited + 48) = MEMORY[0x24BEE4B08];
      sub_23F3B79EC(0xA0AuLL, 0xE200000000000000, v127);
      v131 = v130;
      v133 = v132;
      v135 = v134;
      sub_23F362984();
      *(_QWORD *)(inited + 56) = v131;
      *(_QWORD *)(inited + 64) = v133;
      *(_QWORD *)(inited + 72) = v135;
      *(_QWORD *)(inited + 80) = 6316128;
      *(_QWORD *)(inited + 88) = 0xE300000000000000;
      *(_QWORD *)(inited + 96) = v129;
      sub_23F3B79EC(0xAuLL, 0xE100000000000000, (_QWORD *)inited);
      v137 = v136;
      v139 = v138;
      v141 = v140;
      swift_setDeallocating();
      sub_23F5135A8();
    }
    else
    {
      sub_23F362984();
      v137 = 0;
      v141 = MEMORY[0x24BEE4B08];
      v139 = 0xE000000000000000;
    }
    v142 = v157;
    v143 = sub_23F3B6F8C(v162, v161);
    v144 = MEMORY[0x24BEE4AF8];
    v145 = sub_23F61BFEC();
    swift_release();
    swift_release();
    *(_QWORD *)v142 = v137;
    *(_QWORD *)(v142 + 8) = v139;
    *(_QWORD *)(v142 + 16) = v141;
    *(_QWORD *)(v142 + 24) = v145;
    v146 = v169;
    *(_QWORD *)(v142 + 32) = v156;
    *(_QWORD *)(v142 + 40) = v146;
    v147 = v171;
    *(_QWORD *)(v142 + 48) = v144;
    *(_QWORD *)(v142 + 56) = v147;
    *(_QWORD *)(v142 + 64) = v143;
    *(_OWORD *)(v142 + 72) = 0u;
    *(_OWORD *)(v142 + 88) = 0u;
    *(_QWORD *)(v142 + 104) = v144;
    sub_23F362948();
  }
}

void sub_23F3B9CE4()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  sub_23F362ABC();
  v5 = v4;
  sub_23F6191A8();
  sub_23F383DA4();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F3C05DC();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F3BE648();
  v8 = (unint64_t *)sub_23F3C0838();
  sub_23F3BE650(v8, v9, v10, v11, v12);
  sub_23F3C08B8();
  if (v14)
    goto LABEL_17;
  if ((v0 & 0x8000000000000000) != 0)
    goto LABEL_19;
  if (v13 >= v0)
  {
    v15 = sub_23F3C064C();
    sub_23F3C0850(v15, v16, v17, v18, (void (*)(uint64_t, uint64_t, uint64_t, unint64_t))sub_23F470F9C);
    v20 = v19;
    v22 = sub_23F3C08F4(v19, v21, (void (*)(_QWORD))MEMORY[0x24BEE63B8]);
    v29 = v23;
    v24 = v3;
    if (v26 == v25 >> 1)
    {
      swift_unknownObjectRelease();
      sub_23F384364();
LABEL_17:
      sub_23F362948();
      return;
    }
    sub_23F3C0724(v22);
    v28 = v20;
    while (1)
    {
      if (v3 >= v20)
      {
        __break(1u);
LABEL_19:
        __break(1u);
        break;
      }
      v27 = *(_QWORD *)(v2 + 72);
      sub_23F3C062C(v29);
      sub_23F3C088C();
      if (v20)
      {
        sub_23F3C06A8();
        sub_23F3BD908();
        sub_23F3C0698();
        if ((v27 & 1) == 0)
          goto LABEL_15;
      }
      else
      {
        for (; v5; --v5)
        {
          sub_23F3C0690(v1, v24);
          sub_23F3B121C(&qword_256E70F58, (void (*)(uint64_t))MEMORY[0x24BEE63B8]);
          sub_23F3C0598();
          sub_23F3C060C();
          v24 += v27;
        }
        v24 = 0;
      }
      sub_23F3C07F8();
      sub_23F3BCD58();
LABEL_15:
      sub_23F3C05F8();
      v20 = v28;
      if (v3 == v28)
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        sub_23F3C0918();
        goto LABEL_17;
      }
    }
  }
  __break(1u);
}

void sub_23F3B9EA4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18[3];

  v2 = sub_23F3BE648();
  sub_23F3BEA20(v18, a1, 0, 1, v2);
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 16);
  v6 = v18[0];
  if (v18[0] != v5)
  {
    if ((v18[0] & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v5 >= v18[0])
    {
      type metadata accessor for PromptToolData(0);
      sub_23F383EB8();
      v8 = a1 + v7;
      v9 = sub_23F3668F4();
      sub_23F3BF614(v9, v8, 0, (2 * v6) | 1, (void (*)(uint64_t, uint64_t, uint64_t, unint64_t))sub_23F471108);
      v18[1] = v4;
      v18[2] = v10;
      v11 = sub_23F3BB7B8(v6, a1, (void (*)(_QWORD))type metadata accessor for PromptToolData);
      v13 = v12;
      v15 = v14;
      v17 = v16;
      swift_retain();
      sub_23F3BB154(v11, v13, v15, v17);
      swift_unknownObjectRelease();
      sub_23F362D18();
      swift_release();
      return;
    }
    __break(1u);
  }
}

void sub_23F3B9FCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;

  sub_23F362ABC();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  sub_23F3C090C();
  sub_23F618C20();
  sub_23F383DA4();
  MEMORY[0x24BDAC7A8](v9);
  sub_23F3C05DC();
  MEMORY[0x24BDAC7A8](v10);
  v11 = sub_23F3BE648();
  sub_23F3BEE28(&v31, v0, v8, v6, v4, 0, 1, v11);
  v13 = v12;
  v14 = v31;
  if (v31 == v4 >> 1)
  {
    v15 = swift_unknownObjectRetain();
    sub_23F3BF614(v15, v8, v6, v4, (void (*)(uint64_t, uint64_t, uint64_t, unint64_t))sub_23F47137C);
    swift_unknownObjectRelease();
LABEL_17:
    sub_23F362948();
    return;
  }
  if (v31 < v6)
    goto LABEL_19;
  v16 = sub_23F3C0860(v6, v31, v0);
  sub_23F3BF614(v16, v17, v18, v19, (void (*)(uint64_t, uint64_t, uint64_t, unint64_t))sub_23F47137C);
  v32 = v13;
  v33 = v20;
  if ((uint64_t)(v4 >> 1) >= v14)
  {
    sub_23F3C0860(v14, v4 >> 1, v0);
    v30 = v23;
    if (v21 == v22 >> 1)
    {
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      goto LABEL_17;
    }
    v24 = v21;
    v25 = v22 >> 1;
    swift_retain();
    v29 = v25;
    while (1)
    {
      if (v24 >= v25)
      {
        __break(1u);
LABEL_19:
        __break(1u);
        break;
      }
      v26 = *(_QWORD *)(v2 + 72);
      sub_23F3C062C(v30);
      v27 = v33 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
      v28 = *(_QWORD *)(v33 + 16);
      if (v32)
      {
        sub_23F3C06A8();
        sub_23F3C070C();
        sub_23F3C0698();
        if ((v26 & 1) == 0)
          goto LABEL_15;
      }
      else
      {
        for (; v28; --v28)
        {
          sub_23F3C0690(v1, v27);
          sub_23F3B121C(&qword_256E70F30, (void (*)(uint64_t))MEMORY[0x24BE57608]);
          sub_23F3C0598();
          sub_23F3C060C();
          v27 += v26;
        }
      }
      sub_23F3C07F8();
      sub_23F3BCD58();
LABEL_15:
      sub_23F3C05F8();
      v25 = v29;
      if (v24 == v29)
      {
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_release();
        goto LABEL_17;
      }
    }
  }
  __break(1u);
}

void sub_23F3BA224()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  sub_23F362ABC();
  v5 = v4;
  sub_23F618C20();
  sub_23F383DA4();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F3C05DC();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F3BE648();
  v8 = (unint64_t *)sub_23F3C0838();
  sub_23F3BF238(v8, v9, v10, v11, v12);
  sub_23F3C08B8();
  if (v14)
    goto LABEL_17;
  if ((v0 & 0x8000000000000000) != 0)
    goto LABEL_19;
  if (v13 >= v0)
  {
    v15 = sub_23F3C064C();
    sub_23F3C0850(v15, v16, v17, v18, (void (*)(uint64_t, uint64_t, uint64_t, unint64_t))sub_23F47137C);
    v20 = v19;
    v22 = sub_23F3C08F4(v19, v21, (void (*)(_QWORD))MEMORY[0x24BE57608]);
    v29 = v23;
    v24 = v3;
    if (v26 == v25 >> 1)
    {
      swift_unknownObjectRelease();
      sub_23F384364();
LABEL_17:
      sub_23F362948();
      return;
    }
    sub_23F3C0724(v22);
    v28 = v20;
    while (1)
    {
      if (v3 >= v20)
      {
        __break(1u);
LABEL_19:
        __break(1u);
        break;
      }
      v27 = *(_QWORD *)(v2 + 72);
      sub_23F3C062C(v29);
      sub_23F3C088C();
      if (v20)
      {
        sub_23F3C06A8();
        sub_23F3C070C();
        sub_23F3C0698();
        if ((v27 & 1) == 0)
          goto LABEL_15;
      }
      else
      {
        for (; v5; --v5)
        {
          sub_23F3C0690(v1, v24);
          sub_23F3B121C(&qword_256E70F30, (void (*)(uint64_t))MEMORY[0x24BE57608]);
          sub_23F3C0598();
          sub_23F3C060C();
          v24 += v27;
        }
        v24 = 0;
      }
      sub_23F3C07F8();
      sub_23F3BCD58();
LABEL_15:
      sub_23F3C05F8();
      v20 = v28;
      if (v3 == v28)
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        sub_23F3C0918();
        goto LABEL_17;
      }
    }
  }
  __break(1u);
}

uint64_t sub_23F3BA3D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  _QWORD v21[8];
  char v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;

  v6 = sub_23F61BA94();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AlphaToolRenderer();
  sub_23F5E5D40((uint64_t)v23);
  v10 = v24;
  v11 = v25;
  sub_23F35EA9C(v23, v24);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BEB9F40], v6);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, char *, uint64_t, uint64_t, uint64_t))(v11 + 8))(v21, a1, v9, a2, v10, v11);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v12 = 0;
  v13 = 0;
  v14 = 0;
  if ((v22 & 1) == 0)
  {
    v16 = v21[6];
    v15 = v21[7];
    v18 = v21[4];
    v17 = v21[5];
    v14 = v21[2];
    v19 = v21[3];
    v12 = v21[0];
    v13 = v21[1];
    sub_23F617BA0();
    sub_23F617BA0();
    sub_23F39BA98(v12, v13, v14, v19, v18, v17, v16, v15, 0);
  }
  result = _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v23);
  *a3 = v12;
  a3[1] = v13;
  a3[2] = v14;
  return result;
}

uint64_t sub_23F3BA54C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v6 = sub_23F61BA94();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (_QWORD *)(a2 + *(int *)(type metadata accessor for AlphaToolRenderer() + 20));
  v11 = v10[18];
  v12 = v10[19];
  sub_23F35EA9C(v10 + 15, v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BEB9F40], v6);
  (*(void (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t))(v12 + 8))(a1, v9, a3, v11, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_23F3BA64C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[4];

  v24 = a3;
  v5 = sub_23F619E98();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = sub_23F35D2E8(&qword_256E70238);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23F61B5D8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23F61B14C();
  sub_23F617BA0();
  v22 = a1;
  v23 = a2;
  v15 = sub_23F57DD58(v14, a1, a2);
  swift_bridgeObjectRelease();
  sub_23F3F1334(v15, (uint64_t)v9);
  swift_bridgeObjectRelease();
  if (sub_23F36195C((uint64_t)v9, 1, v10) == 1)
  {
    v20[1] = v6;
    v21 = v10;
    sub_23F3625D8((uint64_t)v9, &qword_256E70238);
    sub_23F61B2FC();
    sub_23F35EA9C(v25, v25[3]);
    v16 = v24;
    sub_23F61A024();
    sub_23F36196C(v16, 0, 1, v21);
    return _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0((uint64_t)v25);
  }
  else
  {
    v17 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v17(v13, v9, v10);
    v18 = v24;
    v17((char *)v24, v13, v10);
    return sub_23F36196C(v18, 0, 1, v10);
  }
}

uint64_t sub_23F3BAA90@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(void (**__return_ptr)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  _OWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  void (*v98)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  uint64_t v107;

  v97 = a5;
  v94 = sub_23F61B95C();
  v9 = *(_QWORD *)(v94 - 8);
  MEMORY[0x24BDAC7A8](v94);
  v11 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23F35D2E8(&qword_256E70238);
  MEMORY[0x24BDAC7A8](v12);
  v93 = (uint64_t)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a2[8];
  v14 = a2[9];
  sub_23F35EA9C(a2 + 5, v15);
  v16 = *(void (**)(void (**__return_ptr)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 16);
  v95 = a1;
  v16(&v98, a1, a3, a4, v15, v14);
  v17 = (uint64_t)v101;
  if ((v106 & 1) != 0)
  {
    sub_23F39BA98((uint64_t)v98, v99, v100, (uint64_t)v101, v102, v103, v104, v105, 1);
LABEL_7:
    swift_bridgeObjectRelease();
    v41 = (uint64_t)v97;
    v42 = type metadata accessor for PromptToolData(0);
    return sub_23F36196C(v41, 1, 1, v42);
  }
  if (!v101)
  {
    sub_23F39BA98((uint64_t)v98, v99, v100, 0, v102, v103, v104, v105, 0);
    goto LABEL_7;
  }
  v75 = v9;
  v91 = v105;
  v92 = v107;
  v18 = a2[9];
  v90 = a2[8];
  v19 = (uint64_t)v98;
  v20 = a2 + 5;
  v21 = v99;
  v22 = v104;
  v23 = v103;
  v24 = v102;
  v81 = a4;
  v25 = v100;
  v80 = sub_23F35EA9C(v20, v90);
  v83 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 32);
  v84 = v19;
  v82 = v21;
  v85 = v25;
  v86 = v24;
  v87 = v23;
  v88 = v22;
  sub_23F39B9D8(v19, v21, v25, v17, v24, v23, v22, v91, 0);
  v89 = v17;
  sub_23F617BA0();
  v83(&v98, v95, v81, v90, v18);
  v27 = v98;
  v26 = v99;
  v28 = v101;
  v90 = v100;
  v29 = v102;
  v30 = v103;
  v32 = v104;
  v31 = v105;
  LOBYTE(v21) = v106;
  v81 = v107;
  sub_23F39B9D8((uint64_t)v98, v99, v100, (uint64_t)v101, v102, v103, v104, v105, v106);
  v83 = v27;
  v74 = v26;
  v80 = v28;
  v79 = v29;
  v78 = v30;
  v77 = v32;
  v76 = v31;
  sub_23F39BA98((uint64_t)v27, v26, v90, (uint64_t)v28, v29, v30, v32, v31, v21);
  swift_bridgeObjectRelease();
  if ((v21 & 1) != 0)
  {
    v33 = v89;
    swift_bridgeObjectRelease();
    v34 = v84;
    v35 = v82;
    v36 = v85;
    v37 = v86;
    v39 = v87;
    v38 = v88;
    v40 = v91;
    sub_23F39BA98(v84, v82, v85, v33, v86, v87, v88, v91, 0);
    sub_23F39BA98(v34, v35, v36, v33, v37, v39, v38, v40, 0);
    goto LABEL_7;
  }
  v44 = sub_23F617BA0();
  v45 = v96;
  v46 = sub_23F3B6B70(v44);
  swift_bridgeObjectRelease();
  v98 = (void (*)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE4AF8];
  v47 = *(_QWORD *)(v46 + 16);
  v48 = v75;
  v96 = v45;
  if (v47)
  {
    v49 = *(_QWORD *)(sub_23F61BBA8() - 8);
    v50 = v46 + ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80));
    v51 = *(_QWORD *)(v49 + 72);
    v52 = sub_23F617BA0();
    v53 = v94;
    do
    {
      MEMORY[0x24266F0AC](v52);
      sub_23F61B938();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v11, v53);
      sub_23F3867E4();
      v50 += v51;
      --v47;
    }
    while (v47);
    swift_bridgeObjectRelease_n();
    v54 = v53;
  }
  else
  {
    swift_bridgeObjectRelease();
    v54 = v94;
  }
  v55 = v93;
  sub_23F5E5DC8(v93);
  v56 = sub_23F61B5D8();
  if (sub_23F36195C(v55, 1, v56) == 1)
  {
    sub_23F3625D8(v55, &qword_256E70238);
  }
  else
  {
    MEMORY[0x24266EA34]();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 8))(v55, v56);
    sub_23F61B938();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v11, v54);
  }
  sub_23F617BA0();
  v57 = v74;
  sub_23F617BA0();
  v58 = v82;
  sub_23F617BA0();
  sub_23F369084();
  sub_23F5278BC();
  v94 = v59;
  v60 = v84;
  v61 = v85;
  v62 = v88;
  v63 = v89;
  v64 = v86;
  v65 = v87;
  v66 = v91;
  sub_23F39BA98(v84, v58, v85, v89, v86, v87, v88, v91, 0);
  sub_23F39BA98((uint64_t)v83, v57, v90, (uint64_t)v80, v79, v78, v77, v76, 0);
  sub_23F39BA98(v60, v58, v61, v63, v64, v65, v62, v66, 0);
  v67 = v92;
  swift_bridgeObjectRelease();
  v68 = type metadata accessor for PromptToolData(0);
  v69 = v97;
  v70 = (uint64_t)v97 + *(int *)(v68 + 28);
  sub_23F3C050C(v95, v70, (uint64_t (*)(_QWORD))type metadata accessor for RenderableTool);
  v71 = type metadata accessor for ToolPromptMap(0);
  *(_QWORD *)(v70 + *(int *)(v71 + 20)) = v67;
  *(_QWORD *)(v70 + *(int *)(v71 + 24)) = v63;
  *v69 = v83;
  v69[1] = v57;
  v69[2] = v60;
  v69[3] = v58;
  v69[4] = v94;
  v72 = (_OWORD *)((char *)v69 + *(int *)(v68 + 32));
  *v72 = 0u;
  v72[1] = 0u;
  return sub_23F36196C((uint64_t)v69, 0, 1, v68);
}

void sub_23F3BB13C()
{
  sub_23F3B9098();
}

void sub_23F3BB154(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  char v48;
  char v50;
  char v51;
  uint64_t v52;
  _QWORD *v53;
  char *v54;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  char v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  char v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  char v86;

  v9 = type metadata accessor for PromptToolData(0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (uint64_t *)((char *)&v63 - v13);
  MEMORY[0x24BDAC7A8](v12);
  v16 = MEMORY[0x24BDAC7A8]((char *)&v63 - v15);
  v18 = (char *)&v63 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (uint64_t *)((char *)&v63 - v20);
  v22 = MEMORY[0x24BDAC7A8](v19);
  v27 = (uint64_t *)((char *)&v63 - v26);
  v28 = a4 >> 1;
  if (a4 >> 1 != a3)
  {
    v63 = v22;
    v73 = v25;
    v74 = v24;
    v67 = v23;
    swift_unknownObjectRetain();
    v69 = v4;
    v65 = a2;
    v72 = v14;
    v64 = a4 >> 1;
    v66 = a1;
    while (1)
    {
      if (a3 >= v28)
      {
        __break(1u);
LABEL_44:
        __break(1u);
        return;
      }
      v29 = *(_QWORD *)(v67 + 72);
      v71 = a3;
      v30 = v67;
      sub_23F3C050C(a2 + v29 * a3, (uint64_t)v27, type metadata accessor for PromptToolData);
      v32 = *v69;
      v31 = v69[1];
      v33 = v31 + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80));
      if (!*v69)
      {
        v52 = *(_QWORD *)(v31 + 16);
        if (!v52)
          goto LABEL_36;
        while (2)
        {
          v53 = v21;
          v54 = v18;
          sub_23F3C050C(v33, (uint64_t)v14, type metadata accessor for PromptToolData);
          if (*v14 == *v27 && v14[1] == v27[1])
          {
            v60 = (uint64_t)v14;
            v58 = v73;
            sub_23F3C050C(v60, v73, type metadata accessor for PromptToolData);
            v59 = v74;
            sub_23F3C050C((uint64_t)v27, v74, type metadata accessor for PromptToolData);
          }
          else
          {
            v56 = sub_23F61CC64();
            v57 = (uint64_t)v14;
            v58 = v73;
            sub_23F3C050C(v57, v73, type metadata accessor for PromptToolData);
            v59 = v74;
            sub_23F3C050C((uint64_t)v27, v74, type metadata accessor for PromptToolData);
            if ((v56 & 1) == 0)
            {
              sub_23F3C053C();
              sub_23F3C053C();
              v14 = v72;
              sub_23F3C053C();
              v18 = v54;
              v21 = v53;
              goto LABEL_35;
            }
          }
          if (*(_QWORD *)(v58 + 16) == *(_QWORD *)(v59 + 16) && *(_QWORD *)(v58 + 24) == *(_QWORD *)(v59 + 24))
          {
            sub_23F3C053C();
            sub_23F3C053C();
            v14 = v72;
            sub_23F3C053C();
            v18 = v54;
            v21 = v53;
            goto LABEL_40;
          }
          v62 = sub_23F61CC64();
          sub_23F3C053C();
          sub_23F3C053C();
          v14 = v72;
          sub_23F3C053C();
          v18 = v54;
          v21 = v53;
          if ((v62 & 1) != 0)
            goto LABEL_40;
LABEL_35:
          v33 += v29;
          if (!--v52)
            goto LABEL_36;
          continue;
        }
      }
      v34 = v32 + 16;
      sub_23F61CD30();
      v68 = *v27;
      v70 = v32;
      swift_retain();
      sub_23F617BA0();
      sub_23F61C22C();
      swift_bridgeObjectRelease();
      sub_23F617BA0();
      sub_23F61C22C();
      swift_bridgeObjectRelease();
      v35 = sub_23F61CD60();
      v36 = 1 << *(_QWORD *)(v32 + 16);
      v37 = __OFSUB__(v36, 1);
      v38 = v36 - 1;
      if (v37)
        goto LABEL_44;
      v39 = v70 + 32;
      v40 = v38 & v35;
      v41 = sub_23F618740();
      *(_QWORD *)&v83 = v34;
      *((_QWORD *)&v83 + 1) = v39;
      *(_QWORD *)&v84 = v40;
      *((_QWORD *)&v84 + 1) = v41;
      *(_QWORD *)&v85 = v42;
      *((_QWORD *)&v85 + 1) = v43;
      v86 = 0;
      v44 = sub_23F618758();
      v75 = v83;
      v76 = v84;
      v77 = v85;
      v78 = v86;
      if ((v45 & 1) != 0)
      {
LABEL_21:
        swift_release();
LABEL_36:
        sub_23F3BCB90((uint64_t)v27);
        goto LABEL_40;
      }
      v46 = v63;
      while (1)
      {
        sub_23F3C050C(v33 + v44 * v29, (uint64_t)v21, type metadata accessor for PromptToolData);
        if (*v21 == *v27 && v21[1] == v27[1])
        {
          sub_23F3C050C((uint64_t)v21, (uint64_t)v18, type metadata accessor for PromptToolData);
          sub_23F3C050C((uint64_t)v27, v46, type metadata accessor for PromptToolData);
        }
        else
        {
          v48 = sub_23F61CC64();
          sub_23F3C050C((uint64_t)v21, (uint64_t)v18, type metadata accessor for PromptToolData);
          sub_23F3C050C((uint64_t)v27, v46, type metadata accessor for PromptToolData);
          if ((v48 & 1) == 0)
          {
            sub_23F3C053C();
            sub_23F3C053C();
            sub_23F3C053C();
            goto LABEL_20;
          }
        }
        if (*((_QWORD *)v18 + 2) == *(_QWORD *)(v46 + 16) && *((_QWORD *)v18 + 3) == *(_QWORD *)(v46 + 24))
          break;
        v50 = sub_23F61CC64();
        sub_23F3C053C();
        sub_23F3C053C();
        sub_23F3C053C();
        if ((v50 & 1) != 0)
          goto LABEL_38;
LABEL_20:
        sub_23F618770();
        v79 = v75;
        v80 = v76;
        v81 = v77;
        v82 = v78;
        v44 = sub_23F618758();
        if ((v51 & 1) != 0)
          goto LABEL_21;
      }
      sub_23F3C053C();
      sub_23F3C053C();
      sub_23F3C053C();
LABEL_38:
      swift_release();
LABEL_40:
      a3 = v71 + 1;
      sub_23F3C053C();
      v28 = v64;
      a2 = v65;
      if (a3 == v64)
      {
        swift_unknownObjectRelease();
        return;
      }
    }
  }
}

unint64_t sub_23F3BB76C(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;

  v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v3 = a2 & 0xFFFFFFFFFFFFLL;
  if (4 * v3 >= result >> 14)
    return sub_23F61C34C();
  __break(1u);
  return result;
}

uint64_t sub_23F3BB7B8(uint64_t result, uint64_t a2, void (*a3)(_QWORD))
{
  if (*(_QWORD *)(a2 + 16) < result)
  {
    __break(1u);
  }
  else if ((result & 0x8000000000000000) == 0)
  {
    a3(0);
    sub_23F383EB8();
    return sub_23F383738();
  }
  __break(1u);
  return result;
}

void sub_23F3BB828(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t i;
  unint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  unsigned int v16;
  uint64_t v17;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;

  sub_23F3BBCBC(a1, a3, a4);
  v8 = v7;
  sub_23F3BBCBC(a2, a3, a4);
  v10 = v9 >> 14;
  if (v8 >> 14 >= v9 >> 14)
  {
    if (v10 >= v8 >> 14)
      return;
    v17 = 0;
    while (1)
    {
      if (__OFSUB__(v17--, 1))
        goto LABEL_38;
      if ((a4 & 0x1000000000000000) == 0)
        break;
      v8 = sub_23F61C1C0();
LABEL_34:
      if (v10 >= v8 >> 14)
        return;
    }
    v19 = v8 >> 16;
    if ((a4 & 0x2000000000000000) != 0)
    {
      v25 = a3;
      v26 = a4 & 0xFFFFFFFFFFFFFFLL;
      if ((*((_BYTE *)&v25 + (v8 >> 16) - 1) & 0xC0) == 0x80)
      {
        v21 = 0;
        do
          v23 = *((_BYTE *)&v25 + v19 + v21-- - 2) & 0xC0;
        while (v23 == 128);
        goto LABEL_31;
      }
    }
    else
    {
      v20 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
      if ((a3 & 0x1000000000000000) == 0)
        v20 = sub_23F61C934();
      if ((*(_BYTE *)(v20 + (v8 >> 16) - 1) & 0xC0) == 0x80)
      {
        v21 = 0;
        do
          v22 = *(_BYTE *)(v20 + v19 - 2 + v21--) & 0xC0;
        while (v22 == 128);
LABEL_31:
        v24 = 1 - v21;
LABEL_33:
        v8 = (v8 - (v24 << 16)) & 0xFFFFFFFFFFFF0000 | 5;
        goto LABEL_34;
      }
    }
    v24 = 1;
    goto LABEL_33;
  }
  for (i = 0; !__OFADD__(i, 1); ++i)
  {
    if ((a4 & 0x1000000000000000) != 0)
    {
      v8 = sub_23F61C1B4();
    }
    else
    {
      v12 = v8 >> 16;
      if ((a4 & 0x2000000000000000) != 0)
      {
        v25 = a3;
        v26 = a4 & 0xFFFFFFFFFFFFFFLL;
        v14 = *((unsigned __int8 *)&v25 + v12);
      }
      else
      {
        v13 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if ((a3 & 0x1000000000000000) == 0)
          v13 = sub_23F61C934();
        v14 = *(unsigned __int8 *)(v13 + v12);
      }
      v15 = (char)v14;
      v16 = __clz(v14 ^ 0xFF) - 24;
      if (v15 >= 0)
        LOBYTE(v16) = 1;
      v8 = ((v12 + v16) << 16) | 5;
    }
    if (v10 <= v8 >> 14)
      return;
  }
  __break(1u);
LABEL_38:
  __break(1u);
}

void sub_23F3BBA4C(unint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  unsigned int v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;

  sub_23F3BBCBC(a1, a3, a4);
  if (a2 < 0)
  {
    v14 = 0;
    while (1)
    {
      if (v7 < 0x10000)
        goto LABEL_39;
      if ((a4 & 0x1000000000000000) == 0)
        break;
      v7 = sub_23F61C1C0();
LABEL_36:
      if (--v14 <= a2)
        return;
    }
    v15 = v7 >> 16;
    if ((a4 & 0x2000000000000000) != 0)
    {
      v21 = a3;
      v22 = a4 & 0xFFFFFFFFFFFFFFLL;
      if ((*((_BYTE *)&v21 + v15 - 1) & 0xC0) == 0x80)
      {
        v17 = 0;
        do
          v19 = *((_BYTE *)&v21 + v15 + v17-- - 2) & 0xC0;
        while (v19 == 128);
        goto LABEL_33;
      }
    }
    else
    {
      v16 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
      if ((a3 & 0x1000000000000000) == 0)
        v16 = sub_23F61C934();
      if ((*(_BYTE *)(v15 + v16 - 1) & 0xC0) == 0x80)
      {
        v17 = 0;
        do
          v18 = *(_BYTE *)(v16 + v15 - 2 + v17--) & 0xC0;
        while (v18 == 128);
LABEL_33:
        v20 = 1 - v17;
LABEL_35:
        v7 = ((v15 - v20) << 16) | 5;
        goto LABEL_36;
      }
    }
    v20 = 1;
    goto LABEL_35;
  }
  if (a2)
  {
    if ((a4 & 0x2000000000000000) != 0)
      v8 = HIBYTE(a4) & 0xF;
    else
      v8 = a3 & 0xFFFFFFFFFFFFLL;
    while (1)
    {
      v9 = v7 >> 16;
      if (v7 >> 16 >= v8)
        break;
      if ((a4 & 0x1000000000000000) != 0)
      {
        v7 = sub_23F61C1B4();
      }
      else
      {
        if ((a4 & 0x2000000000000000) != 0)
        {
          v21 = a3;
          v22 = a4 & 0xFFFFFFFFFFFFFFLL;
          v11 = *((unsigned __int8 *)&v21 + v9);
        }
        else
        {
          v10 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((a3 & 0x1000000000000000) == 0)
            v10 = sub_23F61C934();
          v11 = *(unsigned __int8 *)(v10 + v9);
        }
        v12 = (char)v11;
        v13 = __clz(v11 ^ 0xFF) - 24;
        if (v12 >= 0)
          LOBYTE(v13) = 1;
        v7 = ((v9 + v13) << 16) | 5;
      }
      if (!--a2)
        return;
    }
    __break(1u);
LABEL_39:
    __break(1u);
  }
}

uint64_t sub_23F3BBC3C(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (__OFADD__(*(_QWORD *)(a2 + 16), *(_QWORD *)(result + 16)))
  {
    __break(1u);
  }
  else
  {
    sub_23F377378();
    v4 = v2;
    v3 = sub_23F617BA0();
    sub_23F3863B4(v3);
    sub_23F3668F4();
    sub_23F38631C();
    return v4;
  }
  return result;
}

void sub_23F3BBCBC(unint64_t a1, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((a1 & 1) == 0 || (a1 & 0xC) == 4 << v5)
    goto LABEL_9;
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 < a1 >> 16)
  {
    __break(1u);
LABEL_9:
    sub_23F3BBD58(a1, a2, a3);
    if ((v7 & 1) == 0)
      sub_23F3BBDC4(v7, a2, a3);
  }
}

void sub_23F3BBD58(unint64_t a1, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((a1 & 0xC) == 4 << v5)
    sub_23F3BBECC(a1, a2, a3);
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 < a1 >> 16)
    __break(1u);
}

unint64_t sub_23F3BBDC4(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  _QWORD v13[4];

  if ((result & 0xC000) != 0 || result < 0x10000)
  {
    result &= 0xFFFFFFFFFFFF0000;
  }
  else
  {
    v5 = result >> 16;
    if ((a3 & 0x1000000000000000) == 0)
    {
      v13[2] = v3;
      v13[3] = v4;
      if ((a3 & 0x2000000000000000) != 0)
      {
        v13[0] = a2;
        v13[1] = a3 & 0xFFFFFFFFFFFFFFLL;
        if (v5 != (HIBYTE(a3) & 0xF) && (*((_BYTE *)v13 + v5) & 0xC0) == 0x80)
        {
          do
          {
            v8 = v5 - 1;
            v11 = *((_BYTE *)&v12 + v5-- + 7) & 0xC0;
          }
          while (v11 == 128);
          return v8 << 16;
        }
      }
      else
      {
        if ((a2 & 0x1000000000000000) != 0)
        {
          v6 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
          v7 = a2 & 0xFFFFFFFFFFFFLL;
        }
        else
        {
          v12 = result >> 16;
          v6 = sub_23F61C934();
          v5 = v12;
        }
        if (v5 != v7 && (*(_BYTE *)(v6 + v5) & 0xC0) == 0x80)
        {
          do
          {
            v8 = v5 - 1;
            v9 = *(_BYTE *)(v6 - 1 + v5--) & 0xC0;
          }
          while (v9 == 128);
          return v8 << 16;
        }
      }
      v8 = v5;
      return v8 << 16;
    }
    v10 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0)
      v10 = a2 & 0xFFFFFFFFFFFFLL;
    if (v5 != v10)
      return sub_23F61C8C8();
  }
  return result;
}

void sub_23F3BBECC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v4 = sub_23F61C304();
    sub_23F3C0808(v4);
  }
  else
  {
    v3 = MEMORY[0x24266F7D8](15, a1 >> 16);
    sub_23F3C0808(v3);
  }
  sub_23F362928();
}

uint64_t sub_23F3BBF20@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_23F3BAA90(a1, *(_QWORD **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

void sub_23F3BBF3C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_23F3BCF74();
    v2 = v3;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v4;
  sub_23F3BBFA4(v5);
  *a1 = v2;
}

void sub_23F3BBFA4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  int v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  __int128 v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  char *v45;
  char *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  unint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  char v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  BOOL v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  unint64_t v92;
  char *v93;
  uint64_t v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;

  v3 = a1[1];
  v4 = sub_23F61CC04();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_23F3BC660(0, v3, 1, a1);
      return;
    }
    goto LABEL_144;
  }
  v5 = v4;
  sub_23F387EFC(v3 / 2);
  v105 = v6;
  v106 = v3;
  v108 = v7;
  v103 = a1;
  if (v3 <= 0)
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
    v44 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_110:
    v93 = v10;
    if (v44 < 2)
    {
LABEL_121:
      swift_bridgeObjectRelease();
      if (v106 >= -1)
      {
        *(_QWORD *)(v105 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_149;
    }
    v94 = *v103;
    while (1)
    {
      v95 = v44 - 2;
      if (v44 < 2)
        break;
      if (!v94)
        goto LABEL_153;
      v96 = v93;
      v97 = *(_QWORD *)&v93[16 * v95 + 32];
      v98 = *(_QWORD *)&v93[16 * v44 + 24];
      sub_23F3BC73C((char *)(v94 + 24 * v97), (char *)(v94 + 24 * *(_QWORD *)&v93[16 * v44 + 16]), v94 + 24 * v98, v108);
      if (v1)
        goto LABEL_106;
      if (v98 < v97)
        goto LABEL_139;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v96 = sub_23F3BC9E8();
      if (v95 >= *((_QWORD *)v96 + 2))
        goto LABEL_140;
      v99 = &v96[16 * v95 + 32];
      *(_QWORD *)v99 = v97;
      *((_QWORD *)v99 + 1) = v98;
      v100 = *((_QWORD *)v96 + 2);
      if (v44 > v100)
        goto LABEL_141;
      memmove(&v96[16 * v44 + 16], &v96[16 * v44 + 32], 16 * (v100 - v44));
      v93 = v96;
      *((_QWORD *)v96 + 2) = v100 - 1;
      v44 = v100 - 1;
      if (v100 <= 2)
        goto LABEL_121;
    }
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
    return;
  }
  v104 = v5;
  v8 = 0;
  v9 = *a1;
  v101 = *a1 - 24;
  v102 = *a1 + 8;
  v10 = (char *)MEMORY[0x24BEE4AF8];
  v107 = v9;
  while (1)
  {
    v11 = v8++;
    if (v8 >= v3)
      goto LABEL_32;
    v12 = (uint64_t *)(v9 + 24 * v8);
    v13 = *v12;
    v14 = v12[1];
    v15 = (_QWORD *)(v9 + 24 * v11);
    if (v13 == *v15 && v14 == v15[1])
    {
      v18 = v11 + 2;
      if (v11 + 2 >= v106)
        goto LABEL_31;
      v17 = 0;
    }
    else
    {
      v17 = sub_23F61CC64();
      v18 = v11 + 2;
      if (v11 + 2 >= v106)
        goto LABEL_23;
    }
    v19 = (_QWORD *)(v102 + 24 * v18);
    do
    {
      v20 = (_QWORD *)(v9 + 24 * v8);
      if (*(v19 - 1) == *v20 && *v19 == v20[1])
      {
        if ((v17 & 1) != 0)
          goto LABEL_24;
      }
      else if (((v17 ^ sub_23F61CC64()) & 1) != 0)
      {
        goto LABEL_23;
      }
      v19 += 3;
      v22 = v18 + 1;
      v8 = v18;
      v18 = v22;
    }
    while (v22 < v106);
    v18 = v22;
LABEL_23:
    v8 = v18;
    if ((v17 & 1) != 0)
    {
LABEL_24:
      if (v18 < v11)
        goto LABEL_148;
      if (v11 < v18)
      {
        v23 = 24 * v18;
        v24 = 24 * v11;
        v25 = v18;
        v26 = v11;
        do
        {
          if (v26 != --v25)
          {
            if (!v9)
              goto LABEL_152;
            v27 = v9 + v24;
            v28 = v9 + v23;
            v29 = *(_QWORD *)(v9 + v24);
            v30 = *(_OWORD *)(v9 + v24 + 8);
            v31 = *(_OWORD *)(v9 + v23 - 24);
            *(_QWORD *)(v27 + 16) = *(_QWORD *)(v9 + v23 - 8);
            *(_OWORD *)v27 = v31;
            *(_QWORD *)(v28 - 24) = v29;
            *(_OWORD *)(v28 - 16) = v30;
          }
          ++v26;
          v23 -= 24;
          v24 += 24;
        }
        while (v26 < v25);
      }
LABEL_31:
      v8 = v18;
    }
LABEL_32:
    if (v8 < v106)
    {
      if (__OFSUB__(v8, v11))
        goto LABEL_143;
      if (v8 - v11 < v104)
      {
        if (__OFADD__(v11, v104))
          goto LABEL_146;
        if (v11 + v104 >= v106)
          v32 = v106;
        else
          v32 = v11 + v104;
        if (v32 < v11)
          goto LABEL_147;
        if (v8 != v32)
        {
          v33 = v101 + 24 * v8;
          do
          {
            v34 = (uint64_t *)(v9 + 24 * v8);
            v35 = *v34;
            v36 = v34[1];
            v37 = v11;
            v38 = v33;
            do
            {
              v39 = v35 == *(_QWORD *)v38 && v36 == *(_QWORD *)(v38 + 8);
              if (v39 || (sub_23F61CC64() & 1) == 0)
                break;
              if (!v9)
                goto LABEL_150;
              v40 = *(_OWORD *)(v38 + 32);
              v41 = *(_QWORD *)(v38 + 16);
              v35 = *(_QWORD *)(v38 + 24);
              *(_OWORD *)(v38 + 24) = *(_OWORD *)v38;
              *(_QWORD *)(v38 + 40) = v41;
              *(_QWORD *)v38 = v35;
              *(_OWORD *)(v38 + 8) = v40;
              v36 = v40;
              v38 -= 24;
              ++v37;
            }
            while (v8 != v37);
            ++v8;
            v33 += 24;
          }
          while (v8 != v32);
          v8 = v32;
        }
      }
    }
    if (v8 < v11)
      goto LABEL_142;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_23F3BC8F8(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v43 = *((_QWORD *)v10 + 2);
    v42 = *((_QWORD *)v10 + 3);
    v44 = v43 + 1;
    if (v43 >= v42 >> 1)
      v10 = sub_23F3BC8F8((char *)(v42 > 1), v43 + 1, 1, v10);
    *((_QWORD *)v10 + 2) = v44;
    v45 = v10 + 32;
    v46 = &v10[16 * v43 + 32];
    *(_QWORD *)v46 = v11;
    *((_QWORD *)v46 + 1) = v8;
    if (v43)
      break;
    v44 = 1;
    v9 = v107;
LABEL_101:
    v3 = v106;
    if (v8 >= v106)
      goto LABEL_110;
  }
  v9 = v107;
  while (1)
  {
    v47 = v44 - 1;
    if (v44 >= 4)
    {
      v52 = &v45[16 * v44];
      v53 = *((_QWORD *)v52 - 8);
      v54 = *((_QWORD *)v52 - 7);
      v58 = __OFSUB__(v54, v53);
      v55 = v54 - v53;
      if (v58)
        goto LABEL_127;
      v57 = *((_QWORD *)v52 - 6);
      v56 = *((_QWORD *)v52 - 5);
      v58 = __OFSUB__(v56, v57);
      v50 = v56 - v57;
      v51 = v58;
      if (v58)
        goto LABEL_128;
      v59 = v44 - 2;
      v60 = &v45[16 * v44 - 32];
      v62 = *(_QWORD *)v60;
      v61 = *((_QWORD *)v60 + 1);
      v58 = __OFSUB__(v61, v62);
      v63 = v61 - v62;
      if (v58)
        goto LABEL_129;
      v58 = __OFADD__(v50, v63);
      v64 = v50 + v63;
      if (v58)
        goto LABEL_131;
      if (v64 >= v55)
      {
        v82 = &v45[16 * v47];
        v84 = *(_QWORD *)v82;
        v83 = *((_QWORD *)v82 + 1);
        v58 = __OFSUB__(v83, v84);
        v85 = v83 - v84;
        if (v58)
          goto LABEL_137;
        v75 = v50 < v85;
        goto LABEL_90;
      }
    }
    else
    {
      if (v44 != 3)
      {
        v76 = *((_QWORD *)v10 + 4);
        v77 = *((_QWORD *)v10 + 5);
        v58 = __OFSUB__(v77, v76);
        v69 = v77 - v76;
        v70 = v58;
        goto LABEL_84;
      }
      v49 = *((_QWORD *)v10 + 4);
      v48 = *((_QWORD *)v10 + 5);
      v58 = __OFSUB__(v48, v49);
      v50 = v48 - v49;
      v51 = v58;
    }
    if ((v51 & 1) != 0)
      goto LABEL_130;
    v59 = v44 - 2;
    v65 = &v45[16 * v44 - 32];
    v67 = *(_QWORD *)v65;
    v66 = *((_QWORD *)v65 + 1);
    v68 = __OFSUB__(v66, v67);
    v69 = v66 - v67;
    v70 = v68;
    if (v68)
      goto LABEL_132;
    v71 = &v45[16 * v47];
    v73 = *(_QWORD *)v71;
    v72 = *((_QWORD *)v71 + 1);
    v58 = __OFSUB__(v72, v73);
    v74 = v72 - v73;
    if (v58)
      goto LABEL_134;
    if (__OFADD__(v69, v74))
      goto LABEL_136;
    if (v69 + v74 >= v50)
    {
      v75 = v50 < v74;
LABEL_90:
      if (v75)
        v47 = v59;
      goto LABEL_92;
    }
LABEL_84:
    if ((v70 & 1) != 0)
      goto LABEL_133;
    v78 = &v45[16 * v47];
    v80 = *(_QWORD *)v78;
    v79 = *((_QWORD *)v78 + 1);
    v58 = __OFSUB__(v79, v80);
    v81 = v79 - v80;
    if (v58)
      goto LABEL_135;
    if (v81 < v69)
      goto LABEL_101;
LABEL_92:
    v86 = v47 - 1;
    if (v47 - 1 >= v44)
    {
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
      goto LABEL_138;
    }
    if (!v9)
      goto LABEL_151;
    v87 = v9;
    v88 = &v45[16 * v86];
    v89 = *(_QWORD *)v88;
    v90 = &v45[16 * v47];
    v91 = *((_QWORD *)v90 + 1);
    sub_23F3BC73C((char *)(v87 + 24 * *(_QWORD *)v88), (char *)(v87 + 24 * *(_QWORD *)v90), v87 + 24 * v91, v108);
    if (v1)
      break;
    if (v91 < v89)
      goto LABEL_124;
    if (v47 > *((_QWORD *)v10 + 2))
      goto LABEL_125;
    *(_QWORD *)v88 = v89;
    *(_QWORD *)&v45[16 * v86 + 8] = v91;
    v92 = *((_QWORD *)v10 + 2);
    if (v47 >= v92)
      goto LABEL_126;
    v44 = v92 - 1;
    memmove(&v45[16 * v47], v90 + 16, 16 * (v92 - 1 - v47));
    *((_QWORD *)v10 + 2) = v92 - 1;
    v75 = v92 > 2;
    v9 = v107;
    if (!v75)
      goto LABEL_101;
  }
LABEL_106:
  swift_bridgeObjectRelease();
  if (v106 < -1)
    goto LABEL_145;
  *(_QWORD *)(v105 + 16) = 0;
  swift_bridgeObjectRelease();
}

uint64_t sub_23F3BC660(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  uint64_t v15;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 24 * a3 - 24;
    while (2)
    {
      v9 = (uint64_t *)(v7 + 24 * v4);
      result = *v9;
      v10 = v9[1];
      v11 = v6;
      v12 = v8;
      do
      {
        if (result == *(_QWORD *)v12 && v10 == *(_QWORD *)(v12 + 8))
          break;
        result = sub_23F61CC64();
        if ((result & 1) == 0)
          break;
        if (!v7)
        {
          __break(1u);
          return result;
        }
        v14 = *(_OWORD *)(v12 + 32);
        v15 = *(_QWORD *)(v12 + 16);
        result = *(_QWORD *)(v12 + 24);
        *(_OWORD *)(v12 + 24) = *(_OWORD *)v12;
        *(_QWORD *)(v12 + 40) = v15;
        *(_QWORD *)v12 = result;
        *(_OWORD *)(v12 + 8) = v14;
        v10 = v14;
        v12 -= 24;
        ++v11;
      }
      while (v4 != v11);
      ++v4;
      v8 += 24;
      if (v4 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_23F3BC73C(char *a1, char *a2, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  BOOL v14;
  char *v15;
  __int128 v16;
  unint64_t v19;
  char *v20;
  char *v21;
  BOOL v22;
  BOOL v23;
  BOOL v24;
  __int128 v25;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = a2 - a1;
  v9 = (a2 - a1) / 24;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 24;
  if (v9 >= v11)
  {
    sub_23F37A830(a2, (uint64_t)(a3 - (_QWORD)a2) / 24, a4);
    v12 = &v4[24 * v11];
    if (v7 >= v6 || v10 < 24)
      goto LABEL_47;
    v19 = a3 - 24;
    while (1)
    {
      v20 = (char *)(v19 + 24);
      v21 = v12 - 24;
      v22 = *((_QWORD *)v12 - 3) == *((_QWORD *)v6 - 3) && *((_QWORD *)v12 - 2) == *((_QWORD *)v6 - 2);
      if (v22 || (sub_23F61CC64() & 1) == 0)
      {
        v24 = v20 != v12 || v19 >= (unint64_t)v12;
        v12 -= 24;
        if (!v24)
          goto LABEL_43;
      }
      else
      {
        v23 = v20 != v6 || v19 >= (unint64_t)v6;
        v21 = v6 - 24;
        v6 -= 24;
        if (!v23)
          goto LABEL_43;
      }
      v25 = *(_OWORD *)v21;
      *(_QWORD *)(v19 + 16) = *((_QWORD *)v21 + 2);
      *(_OWORD *)v19 = v25;
LABEL_43:
      v19 -= 24;
      if (v6 <= v7 || v12 <= v4)
        goto LABEL_47;
    }
  }
  sub_23F37A830(a1, (a2 - a1) / 24, a4);
  v12 = &v4[24 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 24)
  {
    while (1)
    {
      v14 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
      if (!v14 && (sub_23F61CC64() & 1) != 0)
        break;
      v15 = v4;
      v14 = v7 == v4;
      v4 += 24;
      if (!v14)
        goto LABEL_15;
LABEL_16:
      v7 += 24;
      if (v4 >= v12 || (unint64_t)v6 >= a3)
        goto LABEL_21;
    }
    v15 = v6;
    v14 = v7 == v6;
    v6 += 24;
    if (v14)
      goto LABEL_16;
LABEL_15:
    v16 = *(_OWORD *)v15;
    *((_QWORD *)v7 + 2) = *((_QWORD *)v15 + 2);
    *(_OWORD *)v7 = v16;
    goto LABEL_16;
  }
LABEL_21:
  v6 = v7;
LABEL_47:
  sub_23F37A830(v4, (v12 - v4) / 24, v6);
  return 1;
}

char *sub_23F3BC8F8(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_23F35D2E8(&qword_256E70EE8);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || &v13[16 * v8] <= v12)
      memmove(v12, v13, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 16 * v8);
  }
  sub_23F362D18();
  return v10;
}

char *sub_23F3BC9E8()
{
  char *v0;
  int64_t v1;
  char v2;
  char *v3;

  v0 = (char *)sub_23F3C0584();
  return sub_23F3BC8F8(v0, v1, v2, v3);
}

void sub_23F3BC9F8()
{
  sub_23F3BCD58();
}

void sub_23F3BCA1C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v3 = v2;
  v8 = v2[1];
  v6 = v2 + 1;
  v7 = v8;
  sub_23F617BA0();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v6 = v8;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_23F3C0670();
    sub_23F37B47C();
    v7 = *v6;
  }
  v10 = *(_QWORD *)(v7 + 16);
  if (v10 >= *(_QWORD *)(v7 + 24) >> 1)
  {
    sub_23F37B47C();
    v7 = *v6;
  }
  *(_QWORD *)(v7 + 16) = v10 + 1;
  v11 = v7 + 16 * v10;
  *(_QWORD *)(v11 + 32) = a1;
  *(_QWORD *)(v11 + 40) = a2;
  v3[1] = v7;
  v12 = *(_QWORD *)(v7 + 16);
  v13 = *v3;
  if (*v3)
  {
    sub_23F3C08CC();
    if (MEMORY[0x24266BC8C](*(_QWORD *)(v13 + 16) & 0x3FLL) < (uint64_t)v12)
    {
      if (v12 <= 0xF && (*(_QWORD *)(v13 + 24) & 0x3FLL) == 0)
      {
        swift_release();
        *v3 = 0;
        return;
      }
      goto LABEL_14;
    }
    sub_23F3BCFF4();
    if (*v3)
      sub_23F3C08AC();
    else
      __break(1u);
  }
  else if (v12 > 0xF)
  {
LABEL_14:
    MEMORY[0x24266BCA4](v12);
    sub_23F3BD094();
  }
}

void sub_23F3BCB6C()
{
  sub_23F3BCD58();
}

void sub_23F3BCB90(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  uint64_t *v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = v1;
  v4 = type metadata accessor for PromptToolData(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F3C050C(a1, (uint64_t)v7, v8);
  v9 = v2 + 1;
  v10 = v2[1];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v2[1] = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_23F37BC5C();
    v10 = *v9;
  }
  v12 = *(_QWORD *)(v10 + 16);
  if (v12 >= *(_QWORD *)(v10 + 24) >> 1)
  {
    sub_23F37BC5C();
    v10 = *v9;
  }
  *(_QWORD *)(v10 + 16) = v12 + 1;
  sub_23F3C04DC((uint64_t)v7, v10+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v12, type metadata accessor for PromptToolData);
  v2[1] = v10;
  v13 = *(_QWORD *)(v10 + 16);
  v14 = *v2;
  if (*v2)
  {
    swift_beginAccess();
    if (MEMORY[0x24266BC8C](*(_QWORD *)(v14 + 16) & 0x3FLL) < (uint64_t)v13)
    {
      if (v13 <= 0xF && (*(_QWORD *)(v14 + 24) & 0x3FLL) == 0)
      {
        swift_release();
        *v2 = 0;
        return;
      }
      goto LABEL_11;
    }
    sub_23F3BCFF4();
    if (*v2)
      sub_23F3BD030();
    else
      __break(1u);
  }
  else if (v13 > 0xF)
  {
LABEL_11:
    MEMORY[0x24266BCA4](v13);
    sub_23F3BD094();
  }
}

void sub_23F3BCD58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  void (*v6)(uint64_t);
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t *v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD v24[8];

  sub_23F362ABC();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v7 = (uint64_t *)v0;
  v24[1] = v8;
  v11 = sub_23F3C0798(v9, v8, v10);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v24 - v13;
  sub_23F384840((uint64_t)v24 - v13, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 16));
  v15 = (uint64_t *)(v0 + 8);
  v16 = v7[1];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v15 = v16;
  v24[2] = v4;
  v24[3] = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v18 = sub_23F3C0670();
    v6(v18);
    v16 = *v15;
  }
  v20 = *(_QWORD *)(v16 + 16);
  v19 = *(_QWORD *)(v16 + 24);
  if (v20 >= v19 >> 1)
  {
    ((void (*)(BOOL, unint64_t, uint64_t))v6)(v19 > 1, v20 + 1, 1);
    v16 = *v15;
  }
  *(_QWORD *)(v16 + 16) = v20 + 1;
  sub_23F383EB8();
  sub_23F384840(v16 + v21 + *(_QWORD *)(v12 + 72) * v20, (uint64_t)v14, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 32));
  v7[1] = v16;
  v22 = *(_QWORD *)(v16 + 16);
  v23 = *v7;
  if (!*v7)
  {
    if (v22 <= 0xF)
      goto LABEL_14;
    goto LABEL_11;
  }
  sub_23F3C08CC();
  if (MEMORY[0x24266BC8C](*(_QWORD *)(v23 + 16) & 0x3FLL) < (uint64_t)v22)
  {
    if (v22 <= 0xF && (*(_QWORD *)(v23 + 24) & 0x3FLL) == 0)
    {
      sub_23F383EDC();
      *v7 = 0;
LABEL_14:
      sub_23F362948();
      return;
    }
LABEL_11:
    MEMORY[0x24266BCA4](v22);
    sub_23F3BD0B8();
    goto LABEL_14;
  }
  sub_23F3BCFF4();
  if (*v7)
  {
    sub_23F3C08AC();
    goto LABEL_14;
  }
  __break(1u);
}

void sub_23F3BCEF0()
{
  sub_23F3C0584();
  sub_23F37C77C();
}

void sub_23F3BCF00()
{
  sub_23F3C0584();
  sub_23F37CB58();
}

void sub_23F3BCF10()
{
  sub_23F37CEC0();
}

void sub_23F3BCF24()
{
  sub_23F3C0584();
  sub_23F37CF78();
}

void sub_23F3BCF34()
{
  sub_23F3C0584();
  sub_23F37CB3C();
}

void sub_23F3BCF44()
{
  sub_23F3C0584();
  sub_23F37CF94();
}

void sub_23F3BCF54()
{
  sub_23F3C0584();
  sub_23F37D074();
}

void sub_23F3BCF64()
{
  sub_23F3C0584();
  sub_23F37D090();
}

void sub_23F3BCF74()
{
  sub_23F3C0584();
  sub_23F37CE24();
}

void sub_23F3BCF84()
{
  sub_23F3C0584();
  sub_23F37D1E8();
}

void sub_23F3BCF94()
{
  sub_23F3C0584();
  sub_23F37D2A4();
}

void sub_23F3BCFA4()
{
  sub_23F3C0584();
  sub_23F37D35C();
}

void sub_23F3BCFB4()
{
  sub_23F3C0584();
  sub_23F37D378();
}

void sub_23F3BCFC4()
{
  sub_23F3C0584();
  sub_23F37D47C();
}

void sub_23F3BCFD4()
{
  sub_23F3C0584();
  sub_23F37D498();
}

void sub_23F3BCFE4()
{
  sub_23F3C0584();
  sub_23F37C760();
}

void sub_23F3BCFF4()
{
  uint64_t v0;
  _QWORD *v1;

  if (!*v1 || swift_isUniquelyReferenced_native())
    goto LABEL_5;
  if (*v1)
  {
    sub_23F618788();
    sub_23F3C07E0();
    *v1 = v0;
LABEL_5:
    sub_23F362928();
    return;
  }
  __break(1u);
}

uint64_t sub_23F3BD030()
{
  return sub_23F61874C();
}

void sub_23F3BD094()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);

  v2 = sub_23F3C073C();
  sub_23F3BD1BC(v2, v3, v4, v5, v6);
  sub_23F3C07E0();
  *v1 = v0;
  sub_23F362928();
}

void sub_23F3BD0B8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  _QWORD *v7;

  v2 = sub_23F3C073C();
  sub_23F3BD11C(v2, v3, v4, v5, v6, v7);
  sub_23F3C07E0();
  *v1 = v0;
  sub_23F362928();
}

void sub_23F3BD0E4(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_23F3BD11C(a1, a2, a3, a4, (void (*)(uint64_t))MEMORY[0x24BEE63B8], &qword_256E70F50);
}

void sub_23F3BD100(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_23F3BD11C(a1, a2, a3, a4, (void (*)(uint64_t))MEMORY[0x24BE57608], &qword_256E70090);
}

void sub_23F3BD11C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, void (*a5)(uint64_t), _QWORD *a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v12 = MEMORY[0x24266BCA4](*(_QWORD *)(a1 + 16));
  if ((a3 & 1) != 0)
    v13 = 0;
  else
    v13 = a2;
  if (v13 <= v12)
    v13 = v12;
  if (v13 <= a4)
    v14 = a4;
  else
    v14 = v13;
  if (v14 >= 5)
  {
    v15 = MEMORY[0x24266BCB0]();
    sub_23F3BD354(a1, v15 + 16, v15 + 32, a5, a6);
  }
  sub_23F383568();
}

uint64_t sub_23F3BD1B0(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_23F3BD1BC(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t))sub_23F3BD60C);
}

uint64_t sub_23F3BD1BC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v10 = MEMORY[0x24266BCA4](*(_QWORD *)(a1 + 16));
  v11 = 0;
  if ((a3 & 1) != 0)
    v12 = 0;
  else
    v12 = a2;
  if (v12 <= v10)
    v12 = v10;
  if (v12 <= a4)
    v13 = a4;
  else
    v13 = v12;
  if (v13 >= 5)
  {
    v11 = MEMORY[0x24266BCB0]();
    a5(a1, v11 + 16, v11 + 32);
  }
  return v11;
}

uint64_t sub_23F3BD244(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(result + 16);
  if (v2)
  {
    v4 = 0;
    while (1)
    {
      sub_23F61CD30();
      sub_23F617BA0();
      sub_23F61C22C();
      result = sub_23F61CD60();
      if (__OFSUB__(1 << *a2, 1))
        break;
      v5 = sub_23F618740();
      swift_bridgeObjectRelease();
      if (v5)
      {
        while (1)
          sub_23F618770();
      }
      result = sub_23F618764();
      if (++v4 == v2)
        return result;
    }
    __break(1u);
  }
  return result;
}

void sub_23F3BD354(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), _QWORD *a5)
{
  uint64_t v5;
  uint64_t v8;
  char v9;

  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    a4(0);
    sub_23F383D14();
    sub_23F3B121C(a5, a4);
    v8 = 0;
    while (1)
    {
      sub_23F61C040();
      sub_23F3C0680();
      if (v9)
        break;
      if (sub_23F618740())
      {
        while (1)
          sub_23F618770();
      }
      sub_23F618764();
      if (++v8 == v5)
        return;
    }
    __break(1u);
  }
}

uint64_t sub_23F3BD460(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v6 = type metadata accessor for PromptToolData(0);
  result = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = *(_QWORD *)(a1 + 16);
  if (v24)
  {
    v11 = 0;
    v23 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v12 = *(_QWORD *)(v8 + 72);
    while (1)
    {
      sub_23F3C050C(v23 + v12 * v11, (uint64_t)v10, type metadata accessor for PromptToolData);
      sub_23F61CD30();
      sub_23F617BA0();
      sub_23F61C22C();
      swift_bridgeObjectRelease();
      sub_23F617BA0();
      sub_23F61C22C();
      swift_bridgeObjectRelease();
      result = sub_23F61CD60();
      v13 = 1 << *a2;
      v14 = __OFSUB__(v13, 1);
      v15 = v13 - 1;
      if (v14)
        break;
      v16 = v15 & result;
      v17 = sub_23F618740();
      v19 = v18;
      v21 = v20;
      sub_23F3C053C();
      v25 = a2;
      v26 = a3;
      v27 = v16;
      v28 = v17;
      v29 = v19;
      v30 = v21;
      v31 = 0;
      while (v28)
        sub_23F618770();
      result = sub_23F618764();
      if (++v11 == v24)
        return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_23F3BD60C(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void (*v24)(char *, unint64_t, uint64_t);
  void (*v25)(uint64_t);
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;

  v42 = a3;
  v5 = sub_23F618D40();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23F618BB4();
  v44 = *(_QWORD *)(v9 - 8);
  v45 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v43 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for LooselyComparableRetrievedTool();
  result = MEMORY[0x24BDAC7A8](v11);
  v48 = (uint64_t)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = *(_QWORD *)(a1 + 16);
  if (v41)
  {
    v15 = 0;
    v40 = a1 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v16 = *(_QWORD *)(v13 + 72);
    v38 = a2;
    v39 = v16;
    while (1)
    {
      v47 = v15;
      sub_23F3C050C(v40 + v39 * v15, v48, (uint64_t (*)(_QWORD))type metadata accessor for LooselyComparableRetrievedTool);
      sub_23F61CD30();
      v17 = v43;
      sub_23F618BCC();
      sub_23F3B121C(&qword_256E70F20, (void (*)(uint64_t))MEMORY[0x24BE57570]);
      v18 = v45;
      sub_23F61C04C();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v17, v18);
      v19 = sub_23F618BE4();
      sub_23F61CD3C();
      v20 = *(_QWORD *)(v19 + 16);
      if (v20)
      {
        v21 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
        v46 = v19;
        v22 = v19 + v21;
        v23 = *(_QWORD *)(v6 + 72);
        v24 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
        v25 = (void (*)(uint64_t))MEMORY[0x24BE577F0];
        do
        {
          v24(v8, v22, v5);
          sub_23F3B121C(&qword_256E70F28, v25);
          sub_23F61C04C();
          (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
          v22 += v23;
          --v20;
        }
        while (v20);
        swift_bridgeObjectRelease();
        a2 = v38;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      result = sub_23F61CD60();
      v26 = 1 << *a2;
      v27 = __OFSUB__(v26, 1);
      v28 = v26 - 1;
      if (v27)
        break;
      v29 = v28 & result;
      v30 = v42;
      v31 = sub_23F618740();
      v33 = v32;
      v35 = v34;
      sub_23F3C053C();
      v49 = a2;
      v50 = v30;
      v51 = v29;
      v52 = v31;
      v53 = v33;
      v54 = v35;
      v55 = 0;
      while (v52)
        sub_23F618770();
      v36 = v47 + 1;
      result = sub_23F618764();
      v15 = v36;
      if (v36 == v41)
        return result;
    }
    __break(1u);
  }
  return result;
}

void sub_23F3BD908()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  char v13;

  sub_23F362ABC();
  sub_23F3C0820();
  v3 = sub_23F6191A8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  sub_23F3C07B0();
  sub_23F3B121C(&qword_256E70F50, v5);
  sub_23F3C07CC();
  sub_23F3C0680();
  if (v6)
  {
    __break(1u);
  }
  else
  {
    v7 = sub_23F3C0768();
    sub_23F3C06F4(v7, v8, v9);
    sub_23F3C06B8();
    if ((v10 & 1) == 0)
    {
      v11 = *(_QWORD *)(v4 + 72);
      do
      {
        sub_23F3C0690(v1, v0 + v11 * v2);
        sub_23F3B121C(&qword_256E70F58, (void (*)(uint64_t))MEMORY[0x24BEE63B8]);
        v12 = sub_23F3C0620();
        sub_23F3C0640(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
        if ((v12 & 1) != 0)
          break;
        sub_23F618770();
        v2 = sub_23F3C05B0();
      }
      while ((v13 & 1) == 0);
    }
    sub_23F362948();
  }
}

void sub_23F3BDA10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;
  uint64_t v11;
  char v12;
  _QWORD *v13;

  sub_23F61CD30();
  sub_23F61C22C();
  sub_23F61CD60();
  sub_23F3C0680();
  if (v6)
  {
    __break(1u);
  }
  else
  {
    sub_23F618740();
    v7 = sub_23F618758();
    if ((v8 & 1) == 0)
    {
      v9 = (_QWORD *)(a3 + 16 * v7);
      if (*v9 != a1 || v9[1] != a2)
      {
        do
        {
          if ((sub_23F61CC64() & 1) != 0)
            break;
          sub_23F618770();
          v11 = sub_23F618758();
          if ((v12 & 1) != 0)
            break;
          v13 = (_QWORD *)(a3 + 16 * v11);
        }
        while (*v13 != a1 || v13[1] != a2);
      }
    }
  }
}

void sub_23F3BDB68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  char v13;

  sub_23F362ABC();
  sub_23F3C0820();
  v3 = sub_23F61BBA8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  sub_23F3C07B0();
  sub_23F3B121C(&qword_256E70F48, v5);
  sub_23F3C07CC();
  sub_23F3C0680();
  if (v6)
  {
    __break(1u);
  }
  else
  {
    v7 = sub_23F3C0768();
    sub_23F3C06F4(v7, v8, v9);
    sub_23F3C06B8();
    if ((v10 & 1) == 0)
    {
      v11 = *(_QWORD *)(v4 + 72);
      do
      {
        sub_23F3C0690(v1, v0 + v11 * v2);
        sub_23F3B121C(&qword_256E70D30, (void (*)(uint64_t))MEMORY[0x24BEBA368]);
        v12 = sub_23F3C0620();
        sub_23F3C0640(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
        if ((v12 & 1) != 0)
          break;
        sub_23F618770();
        v2 = sub_23F3C05B0();
      }
      while ((v13 & 1) == 0);
    }
    sub_23F362948();
  }
}

uint64_t sub_23F3BDC70(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(uint64_t);
  uint64_t result;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  char v25;
  char v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  char v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  char v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  char v39;

  v8 = sub_23F618C20();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F3B121C(&qword_256E70090, v12);
  result = sub_23F61C040();
  v14 = 1 << *a4;
  v15 = __OFSUB__(v14, 1);
  v16 = v14 - 1;
  if (v15)
  {
    __break(1u);
  }
  else
  {
    v17 = v16 & result;
    v18 = sub_23F618740();
    *(_QWORD *)&v36 = a4;
    *((_QWORD *)&v36 + 1) = a5;
    *(_QWORD *)&v37 = v17;
    *((_QWORD *)&v37 + 1) = v18;
    *(_QWORD *)&v38 = v19;
    *((_QWORD *)&v38 + 1) = v20;
    v39 = 0;
    v21 = sub_23F618758();
    v28 = v36;
    v29 = v37;
    v30 = v38;
    v31 = v39;
    if ((v22 & 1) == 0)
    {
      v23 = *(_QWORD *)(v9 + 72);
      v24 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
      do
      {
        v24(v11, a2 + v23 * v21, v8);
        sub_23F3B121C(&qword_256E70F30, (void (*)(uint64_t))MEMORY[0x24BE57608]);
        v25 = sub_23F61C0A0();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
        if ((v25 & 1) != 0)
          break;
        sub_23F618770();
        v32 = v28;
        v33 = v29;
        v34 = v30;
        v35 = v31;
        v21 = sub_23F618758();
      }
      while ((v26 & 1) == 0);
    }
    return v21;
  }
  return result;
}

void sub_23F3BDE4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  char v37;
  char v38;
  char v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  char v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  char v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  char v58;

  sub_23F362ABC();
  v1 = v0;
  v3 = v2;
  v46 = v4;
  v6 = v5;
  v41 = *(_QWORD *)(type metadata accessor for LooselyComparableRetrievedTool() - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F3834D0();
  v44 = v8;
  sub_23F383588();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v40 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v40 - v13;
  v15 = sub_23F618BB4();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v40 - v20;
  sub_23F61CD30();
  sub_23F618BCC();
  sub_23F3B121C(&qword_256E70F20, (void (*)(uint64_t))MEMORY[0x24BE57570]);
  sub_23F61C04C();
  v22 = *(void (**)(char *, uint64_t))(v16 + 8);
  v43 = v15;
  v42 = v22;
  v22(v21, v15);
  v45 = v6;
  v23 = sub_23F618BE4();
  sub_23F3C7C74((uint64_t)&v51, v23);
  sub_23F362984();
  sub_23F61CD60();
  sub_23F3C0680();
  if (v26)
  {
    __break(1u);
  }
  else
  {
    v27 = v25 & v24;
    v28 = sub_23F618740();
    *(_QWORD *)&v51 = v3;
    *((_QWORD *)&v51 + 1) = v1;
    *(_QWORD *)&v52 = v27;
    *((_QWORD *)&v52 + 1) = v28;
    *(_QWORD *)&v53 = v29;
    *((_QWORD *)&v53 + 1) = v30;
    v54 = 0;
    v31 = sub_23F618758();
    v47 = v51;
    v48 = v52;
    v49 = v53;
    v50 = v54;
    if ((v32 & 1) == 0)
    {
      v41 = *(_QWORD *)(v41 + 72);
      v40 = v12;
      do
      {
        sub_23F3C08D8(v46 + v41 * v31, (uint64_t)v14);
        sub_23F618BCC();
        v33 = v45;
        sub_23F618BCC();
        v34 = sub_23F618BA8();
        v35 = v43;
        v36 = v42;
        v42(v19, v43);
        v36(v21, v35);
        sub_23F3C08D8((uint64_t)v14, (uint64_t)v12);
        sub_23F3C08D8(v33, v44);
        if ((v34 & 1) != 0)
        {
          sub_23F618BE4();
          sub_23F618BE4();
          sub_23F3C5184();
          v38 = v37;
          swift_bridgeObjectRelease();
          sub_23F362984();
          sub_23F3C06EC();
          sub_23F3C06EC();
          sub_23F3C06EC();
          if ((v38 & 1) != 0)
            break;
        }
        else
        {
          sub_23F3C06EC();
          sub_23F3C06EC();
          sub_23F3C06EC();
        }
        sub_23F618770();
        v55 = v47;
        v56 = v48;
        v57 = v49;
        v58 = v50;
        v31 = sub_23F618758();
        v12 = v40;
      }
      while ((v39 & 1) == 0);
    }
    sub_23F362948();
  }
}

void sub_23F3BE1CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  BOOL v28;
  BOOL v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;

  v1 = a1;
  v2 = MEMORY[0x24BEE4AF8];
  v42 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v40 = *(_QWORD *)(a1 + 16);
  if (!v40)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v39 = a1 + 32;
  sub_23F383E5C();
  v3 = 0;
  v38 = v1;
  while (v3 < *(_QWORD *)(v1 + 16))
  {
    v4 = (uint64_t *)(v39 + 24 * v3);
    v5 = *v4;
    v6 = v4[1];
    v7 = v4[2];
    v8 = v42[2];
    if (!v8)
      goto LABEL_21;
    v9 = v42[4] == v5 && v42[5] == v6;
    if (v9 || (sub_23F3C0574() & 1) != 0)
    {
      v41 = v5;
      v10 = 0;
    }
    else
    {
      if (v8 == 1)
        goto LABEL_21;
      v28 = v42[6] == v5 && v42[7] == v6;
      if (v28 || (sub_23F3C0574() & 1) != 0)
      {
        v41 = v5;
        v10 = 1;
      }
      else
      {
        if (v8 == 2)
          goto LABEL_21;
        v29 = v42[8] == v5 && v42[9] == v6;
        if (v29 || (sub_23F3C0574() & 1) != 0)
        {
          v41 = v5;
          v10 = 2;
        }
        else
        {
          if (v8 == 3)
            goto LABEL_21;
          v30 = v42[10] == v5 && v42[11] == v6;
          v41 = v5;
          if (!v30 && (sub_23F3C0574() & 1) == 0)
          {
            v35 = v42 + 13;
            v36 = 4;
            while (1)
            {
              v5 = v41;
              if (v8 == v36)
                break;
              if (*(v35 - 1) == v41 && *v35 == v6)
              {
                v10 = v36;
                goto LABEL_11;
              }
              v10 = v36++;
              v35 += 2;
              if ((sub_23F3C0574() & 1) != 0)
                goto LABEL_11;
            }
LABEL_21:
            sub_23F3C07EC();
            v11 = v7;
            sub_23F383EB0();
            sub_23F3BCA1C(v5, v6);
            v20 = v5;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_23F3C08E0();
              sub_23F37B960();
            }
            v21 = *(_QWORD *)(v2 + 16);
            if (v21 >= *(_QWORD *)(v2 + 24) >> 1)
              sub_23F37B960();
            *(_QWORD *)(v2 + 16) = v21 + 1;
            v22 = v2 + 32;
            v23 = MEMORY[0x24BEE4AF8];
            *(_QWORD *)(v2 + 32 + 8 * v21) = MEMORY[0x24BEE4AF8];
            sub_23F384A00();
            sub_23F3B1EA4();
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *(_QWORD *)(v2 + 32 + 8 * v21) = v23;
            v25 = v23;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_23F3C0670();
              sub_23F377438();
              v25 = v33;
              *(_QWORD *)(v22 + 8 * v21) = v33;
            }
            v26 = *(_QWORD *)(v25 + 16);
            if (v26 >= *(_QWORD *)(v25 + 24) >> 1)
            {
              sub_23F377438();
              v25 = v34;
              *(_QWORD *)(v22 + 8 * v21) = v34;
            }
            *(_QWORD *)(v25 + 16) = v26 + 1;
            v27 = (_QWORD *)(v25 + 24 * v26);
            v27[4] = v20;
            v27[5] = v6;
            v19 = v27 + 6;
            v1 = v38;
            goto LABEL_30;
          }
          v10 = 3;
        }
      }
    }
LABEL_11:
    sub_23F3C07EC();
    v11 = v7;
    sub_23F383EB0();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23F3BCF10();
      v2 = v12;
    }
    if ((v10 & 0x8000000000000000) != 0)
      goto LABEL_63;
    if (v10 >= *(_QWORD *)(v2 + 16))
      goto LABEL_64;
    v13 = v2 + 32;
    v14 = *(_QWORD *)(v2 + 32 + 8 * v10);
    sub_23F384A00();
    sub_23F3B1EA4();
    v15 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v2 + 32 + 8 * v10) = v14;
    v16 = v6;
    if ((v15 & 1) == 0)
    {
      sub_23F3C0670();
      sub_23F377438();
      v14 = v31;
      *(_QWORD *)(v13 + 8 * v10) = v31;
    }
    v17 = *(_QWORD *)(v14 + 16);
    if (v17 >= *(_QWORD *)(v14 + 24) >> 1)
    {
      sub_23F377438();
      v14 = v32;
      *(_QWORD *)(v13 + 8 * v10) = v32;
    }
    v1 = v38;
    *(_QWORD *)(v14 + 16) = v17 + 1;
    v18 = (_QWORD *)(v14 + 24 * v17);
    v18[4] = v41;
    v18[5] = v16;
    v19 = v18 + 6;
LABEL_30:
    ++v3;
    *v19 = v11;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    if (v3 == v40)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
}

uint64_t sub_23F3BE648()
{
  return 0;
}

void sub_23F3BE650(unint64_t *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  uint64_t v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t *v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t);
  uint64_t v51;
  unint64_t v52;

  v10 = sub_23F6191A8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v47 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v41 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v41 - v17;
  v19 = *(_QWORD *)(a2 + 16);
  v20 = MEMORY[0x24266BCA4](v19);
  if ((a4 & 1) != 0)
    v21 = 0;
  else
    v21 = a3;
  if (v21 <= v20)
    v21 = v20;
  if (v21 <= a5)
    v22 = a5;
  else
    v22 = v21;
  if (v22 > 4)
  {
    v23 = MEMORY[0x24266BCB0]();
    sub_23F3BF6E8(&v52, a2, (_QWORD *)(v23 + 16));
    *a1 = v52;
    return;
  }
  if (v19 < 2)
  {
LABEL_11:
    *a1 = v19;
    return;
  }
  sub_23F377328();
  v25 = v24;
  v26 = 0;
  v27 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v45 = v19;
  v46 = a2 + v27;
  v28 = *(_QWORD *)(v11 + 72);
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v49 = v27;
  v50 = v29;
  v51 = v28;
  v42 = a1;
  v43 = v28 + v27;
  v30 = v47;
  v41 = v11;
  while (1)
  {
    if (v26 == v19)
      goto LABEL_35;
    v29(v18, v46 + v51 * v26, v10);
    v31 = *(_QWORD *)(v25 + 16);
    if (!v31)
      goto LABEL_25;
    v29(v16, v25 + v49, v10);
    sub_23F3B121C(&qword_256E70F58, (void (*)(uint64_t))MEMORY[0x24BEE63B8]);
    v48 = v25;
    sub_23F617BA0();
    v32 = sub_23F61C0A0();
    v33 = *(void (**)(char *, uint64_t))(v11 + 8);
    v33(v16, v10);
    if ((v32 & 1) != 0)
      break;
    if (v31 != 1)
    {
      v44 = v26;
      v34 = v48 + v43;
      v35 = 1;
      while (1)
      {
        v50(v16, v34, v10);
        v36 = v35 + 1;
        if (__OFADD__(v35, 1))
          break;
        v37 = sub_23F61C0A0();
        v33(v16, v10);
        if ((v37 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          a1 = v42;
          v26 = v44;
          goto LABEL_32;
        }
        ++v35;
        v34 += v51;
        if (v36 == v31)
        {
          v25 = v48;
          swift_bridgeObjectRelease();
          v11 = v41;
          a1 = v42;
          v30 = v47;
          v26 = v44;
          goto LABEL_24;
        }
      }
      __break(1u);
LABEL_35:
      __break(1u);
      return;
    }
    v25 = v48;
    swift_bridgeObjectRelease();
    v30 = v47;
LABEL_24:
    v29 = v50;
LABEL_25:
    v29(v30, (uint64_t)v18, v10);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23F377328();
      v25 = v39;
    }
    v38 = *(_QWORD *)(v25 + 16);
    if (v38 >= *(_QWORD *)(v25 + 24) >> 1)
    {
      sub_23F377328();
      v25 = v40;
    }
    ++v26;
    *(_QWORD *)(v25 + 16) = v38 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v25 + v49 + v38 * v51, v30, v10);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v18, v10);
    v19 = v45;
    v29 = v50;
    if (v26 == v45)
    {
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
  }
  swift_bridgeObjectRelease();
LABEL_32:
  v33(v18, v10);
  swift_bridgeObjectRelease();
  *a1 = v26;
}

void sub_23F3BEA20(unint64_t *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v38;
  char v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t *v51;
  unint64_t v52;

  v51 = a1;
  v9 = type metadata accessor for PromptToolData(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v50 = (uint64_t)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v45 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v45 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (uint64_t *)((char *)&v45 - v20);
  MEMORY[0x24BDAC7A8](v19);
  v23 = (uint64_t *)((char *)&v45 - v22);
  v24 = *(_QWORD *)(a2 + 16);
  v25 = MEMORY[0x24266BCA4](v24);
  if ((a4 & 1) != 0)
    v26 = 0;
  else
    v26 = a3;
  if (v26 <= v25)
    v26 = v25;
  if (v26 <= a5)
    v27 = a5;
  else
    v27 = v26;
  if (v27 > 4)
  {
    v29 = MEMORY[0x24266BCB0]();
    sub_23F3BF8F4(&v52, a2, (_QWORD *)(v29 + 16), v29 + 32);
    *v51 = v52;
    return;
  }
  v28 = v51;
  if (v24 < 2)
  {
LABEL_11:
    *v28 = v24;
    return;
  }
  sub_23F377994();
  v31 = v30;
  v32 = 0;
  v49 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v48 = a2 + v49;
  v33 = *(_QWORD *)(v10 + 72);
  v46 = v24;
  while (1)
  {
    if (v32 == v24)
    {
      __break(1u);
      return;
    }
    sub_23F3C050C(v48 + v33 * v32, (uint64_t)v23, type metadata accessor for PromptToolData);
    v34 = *(_QWORD *)(v31 + 16);
    if (v34)
      break;
LABEL_31:
    sub_23F3C050C((uint64_t)v23, v50, type metadata accessor for PromptToolData);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23F377994();
      v31 = v43;
    }
    v24 = v46;
    v41 = *(_QWORD *)(v31 + 16);
    v42 = v31;
    if (v41 >= *(_QWORD *)(v31 + 24) >> 1)
    {
      sub_23F377994();
      v42 = v44;
    }
    ++v32;
    *(_QWORD *)(v42 + 16) = v41 + 1;
    v31 = v42;
    sub_23F3C04DC(v50, v42 + v49 + v41 * v33, type metadata accessor for PromptToolData);
    sub_23F3C053C();
    if (v32 == v24)
    {
      swift_bridgeObjectRelease();
      v28 = v51;
      goto LABEL_11;
    }
  }
  v35 = v31;
  v36 = v31 + v49;
  v47 = v35;
  sub_23F617BA0();
  while (1)
  {
    sub_23F3C050C(v36, (uint64_t)v21, type metadata accessor for PromptToolData);
    if (*v21 == *v23 && v21[1] == v23[1])
    {
      sub_23F3C050C((uint64_t)v21, (uint64_t)v18, type metadata accessor for PromptToolData);
      sub_23F3C050C((uint64_t)v23, (uint64_t)v15, type metadata accessor for PromptToolData);
    }
    else
    {
      v38 = sub_23F61CC64();
      sub_23F3C050C((uint64_t)v21, (uint64_t)v18, type metadata accessor for PromptToolData);
      sub_23F3C050C((uint64_t)v23, (uint64_t)v15, type metadata accessor for PromptToolData);
      if ((v38 & 1) == 0)
      {
        sub_23F3C053C();
        sub_23F3C053C();
        sub_23F3C053C();
        goto LABEL_29;
      }
    }
    if (*((_QWORD *)v18 + 2) == *((_QWORD *)v15 + 2) && *((_QWORD *)v18 + 3) == *((_QWORD *)v15 + 3))
      break;
    v40 = sub_23F61CC64();
    sub_23F3C053C();
    sub_23F3C053C();
    sub_23F3C053C();
    if ((v40 & 1) != 0)
      goto LABEL_38;
LABEL_29:
    v36 += v33;
    if (!--v34)
    {
      v31 = v47;
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
  }
  sub_23F3C053C();
  sub_23F3C053C();
  sub_23F3C053C();
LABEL_38:
  swift_bridgeObjectRelease();
  sub_23F3C053C();
  swift_bridgeObjectRelease();
  *v51 = v32;
}

void sub_23F3BEE28(int64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  unint64_t v37;
  char v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  int64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int64_t v53;
  char *v54;
  int64_t v55;
  uint64_t v56;
  char *v57;
  int64_t v58;

  v56 = a2;
  v15 = sub_23F618C20();
  v52 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v54 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v49 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v57 = (char *)&v49 - v21;
  v55 = a5 >> 1;
  if (__OFSUB__(a5 >> 1, a4))
  {
LABEL_40:
    __break(1u);
  }
  else
  {
    v22 = MEMORY[0x24266BCA4]((a5 >> 1) - a4);
    if ((a7 & 1) != 0)
      v23 = 0;
    else
      v23 = a6;
    if (v23 <= v22)
      v23 = v22;
    if (v23 <= a8)
      v24 = a8;
    else
      v24 = v23;
    if (v24 > 4)
    {
      v26 = MEMORY[0x24266BCB0]();
      sub_23F3BFD50(&v58, v56, a3, a4, a5, (_QWORD *)(v26 + 16), v26 + 32);
      v25 = v58;
      goto LABEL_14;
    }
    if ((uint64_t)((a5 >> 1) - a4) < 2)
    {
      v25 = v55;
LABEL_14:
      *a1 = v25;
      return;
    }
    sub_23F377E30();
    v28 = v55;
    if (v55 < a4)
      goto LABEL_42;
    v29 = v27;
    if (v55 == a4)
    {
LABEL_18:
      swift_bridgeObjectRelease();
      *a1 = v28;
      return;
    }
    v49 = a1;
    v50 = a3;
    v30 = v52;
    v31 = v57;
    v32 = v54;
    while (a4 < v28)
    {
      v33 = *(_QWORD *)(v30 + 72);
      v53 = a4;
      v56 = v33;
      v34 = a3 + v33 * a4;
      v35 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 16);
      v35(v31, v34, v15);
      v36 = *(_QWORD *)(v29 + 16);
      if (v36)
      {
        v37 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
        v35(v20, v29 + v37, v15);
        sub_23F3B121C(&qword_256E70F30, (void (*)(uint64_t))MEMORY[0x24BE57608]);
        v51 = v29;
        sub_23F617BA0();
        v38 = sub_23F61C0A0();
        v39 = *(void (**)(char *, uint64_t))(v30 + 8);
        v39(v20, v15);
        if ((v38 & 1) != 0)
        {
          swift_bridgeObjectRelease();
LABEL_37:
          v39(v57, v15);
          swift_bridgeObjectRelease();
          v25 = v53;
          goto LABEL_14;
        }
        if (v36 != 1)
        {
          v40 = v51 + v56 + v37;
          v41 = 1;
          while (1)
          {
            v35(v20, v40, v15);
            v42 = v41 + 1;
            if (__OFADD__(v41, 1))
              break;
            v43 = sub_23F61C0A0();
            v39(v20, v15);
            if ((v43 & 1) != 0)
            {
              swift_bridgeObjectRelease();
              a1 = v49;
              goto LABEL_37;
            }
            ++v41;
            v40 += v56;
            if (v42 == v36)
            {
              v29 = v51;
              swift_bridgeObjectRelease();
              a1 = v49;
              v30 = v52;
              goto LABEL_29;
            }
          }
          __break(1u);
          goto LABEL_40;
        }
        v29 = v51;
        swift_bridgeObjectRelease();
LABEL_29:
        v31 = v57;
        v32 = v54;
      }
      v35(v32, (uint64_t)v31, v15);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F377E30();
        v29 = v47;
      }
      v44 = v53;
      v28 = v55;
      v45 = *(_QWORD *)(v29 + 16);
      v46 = v29;
      if (v45 >= *(_QWORD *)(v29 + 24) >> 1)
      {
        sub_23F377E30();
        v46 = v48;
      }
      a4 = v44 + 1;
      *(_QWORD *)(v46 + 16) = v45 + 1;
      v29 = v46;
      (*(void (**)(unint64_t, char *, uint64_t))(v30 + 32))(v46 + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80)) + v45 * v56, v32, v15);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v15);
      a3 = v50;
      if (a4 == v28)
        goto LABEL_18;
    }
  }
  __break(1u);
LABEL_42:
  __break(1u);
}

void sub_23F3BF238(unint64_t *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  uint64_t v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t *v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t);
  uint64_t v51;
  unint64_t v52;

  v10 = sub_23F618C20();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v47 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v41 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v41 - v17;
  v19 = *(_QWORD *)(a2 + 16);
  v20 = MEMORY[0x24266BCA4](v19);
  if ((a4 & 1) != 0)
    v21 = 0;
  else
    v21 = a3;
  if (v21 <= v20)
    v21 = v20;
  if (v21 <= a5)
    v22 = a5;
  else
    v22 = v21;
  if (v22 > 4)
  {
    v23 = MEMORY[0x24266BCB0]();
    sub_23F3C0084(&v52, a2, (_QWORD *)(v23 + 16));
    *a1 = v52;
    return;
  }
  if (v19 < 2)
  {
LABEL_11:
    *a1 = v19;
    return;
  }
  sub_23F377E30();
  v25 = v24;
  v26 = 0;
  v27 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v45 = v19;
  v46 = a2 + v27;
  v28 = *(_QWORD *)(v11 + 72);
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v49 = v27;
  v50 = v29;
  v51 = v28;
  v42 = a1;
  v43 = v28 + v27;
  v30 = v47;
  v41 = v11;
  while (1)
  {
    if (v26 == v19)
      goto LABEL_35;
    v29(v18, v46 + v51 * v26, v10);
    v31 = *(_QWORD *)(v25 + 16);
    if (!v31)
      goto LABEL_25;
    v29(v16, v25 + v49, v10);
    sub_23F3B121C(&qword_256E70F30, (void (*)(uint64_t))MEMORY[0x24BE57608]);
    v48 = v25;
    sub_23F617BA0();
    v32 = sub_23F61C0A0();
    v33 = *(void (**)(char *, uint64_t))(v11 + 8);
    v33(v16, v10);
    if ((v32 & 1) != 0)
      break;
    if (v31 != 1)
    {
      v44 = v26;
      v34 = v48 + v43;
      v35 = 1;
      while (1)
      {
        v50(v16, v34, v10);
        v36 = v35 + 1;
        if (__OFADD__(v35, 1))
          break;
        v37 = sub_23F61C0A0();
        v33(v16, v10);
        if ((v37 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          a1 = v42;
          v26 = v44;
          goto LABEL_32;
        }
        ++v35;
        v34 += v51;
        if (v36 == v31)
        {
          v25 = v48;
          swift_bridgeObjectRelease();
          v11 = v41;
          a1 = v42;
          v30 = v47;
          v26 = v44;
          goto LABEL_24;
        }
      }
      __break(1u);
LABEL_35:
      __break(1u);
      return;
    }
    v25 = v48;
    swift_bridgeObjectRelease();
    v30 = v47;
LABEL_24:
    v29 = v50;
LABEL_25:
    v29(v30, (uint64_t)v18, v10);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23F377E30();
      v25 = v39;
    }
    v38 = *(_QWORD *)(v25 + 16);
    if (v38 >= *(_QWORD *)(v25 + 24) >> 1)
    {
      sub_23F377E30();
      v25 = v40;
    }
    ++v26;
    *(_QWORD *)(v25 + 16) = v38 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v25 + v49 + v38 * v51, v30, v10);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v18, v10);
    v19 = v45;
    v29 = v50;
    if (v26 == v45)
    {
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
  }
  swift_bridgeObjectRelease();
LABEL_32:
  v33(v18, v10);
  swift_bridgeObjectRelease();
  *a1 = v26;
}

void sub_23F3BF608(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  sub_23F3BF614(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t, unint64_t))sub_23F47137C);
}

void sub_23F3BF614(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, unint64_t))
{
  uint64_t v10;
  uint64_t v11;

  if ((a4 & 1) == 0)
    goto LABEL_2;
  sub_23F61CC70();
  swift_unknownObjectRetain_n();
  v10 = swift_dynamicCastClass();
  if (!v10)
  {
    sub_23F3C08EC();
    v10 = MEMORY[0x24BEE4AF8];
  }
  v11 = *(_QWORD *)(v10 + 16);
  swift_release();
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v11 != (a4 >> 1) - a3)
  {
LABEL_11:
    swift_unknownObjectRelease();
LABEL_2:
    a5(a1, a2, a3, a4);
    goto LABEL_9;
  }
  if (!swift_dynamicCastClass())
    sub_23F3C08EC();
LABEL_9:
  sub_23F3C08EC();
  sub_23F383568();
}

unint64_t sub_23F3BF6E8(unint64_t *a1, uint64_t a2, _QWORD *a3)
{
  unint64_t v3;
  void (*v5)(uint64_t);
  unint64_t v6;
  unint64_t result;
  char v8;
  _QWORD *v10;
  unint64_t v11;

  v3 = *(_QWORD *)(a2 + 16);
  if (!v3)
  {
LABEL_10:
    *a1 = v3;
    return 1;
  }
  sub_23F6191A8();
  v5 = (void (*)(uint64_t))MEMORY[0x24BEE63B8];
  sub_23F3B121C(&qword_256E70F50, (void (*)(uint64_t))MEMORY[0x24BEE63B8]);
  v6 = 0;
  v10 = a3;
  while (2)
  {
    v11 = v6;
    result = sub_23F61C040();
    if (!__OFSUB__(1 << *a3, 1))
    {
      sub_23F618740();
      while (1)
      {
        result = sub_23F618758();
        if ((v8 & 1) != 0)
          break;
        if (result >= v3)
        {
          __break(1u);
          goto LABEL_14;
        }
        sub_23F3B121C(&qword_256E70F58, v5);
        if ((sub_23F61C0A0() & 1) != 0)
        {
          result = 0;
          *a1 = v11;
          return result;
        }
        sub_23F618770();
      }
      sub_23F618764();
      v6 = v11 + 1;
      a3 = v10;
      if (v11 + 1 != v3)
        continue;
      goto LABEL_10;
    }
    break;
  }
LABEL_14:
  __break(1u);
  return result;
}

unint64_t sub_23F3BF8F4(unint64_t *a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t result;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  BOOL v38;
  char v39;
  char v41;
  char v42;
  unint64_t v43;
  char *v44;
  _QWORD *v45;
  unint64_t *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  char v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  char v61;

  v49 = a4;
  v46 = a1;
  v6 = type metadata accessor for PromptToolData(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v44 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char **)((char *)&v44 - v14);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char **)((char *)&v44 - v17);
  MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&v44 - v20;
  v22 = *(_QWORD *)(a2 + 16);
  if (!v22)
  {
LABEL_21:
    *v46 = v22;
    return 1;
  }
  v23 = 0;
  v24 = a2 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
  v53 = *(_QWORD *)(v19 + 72);
  v45 = a3;
  v44 = (char *)&v44 - v20;
  v48 = v22;
  v47 = v24;
  while (1)
  {
    v50 = v23;
    v52 = v24 + v53 * v23;
    sub_23F3C050C(v52, (uint64_t)v21, type metadata accessor for PromptToolData);
    sub_23F61CD30();
    sub_23F617BA0();
    sub_23F61C22C();
    swift_bridgeObjectRelease();
    sub_23F617BA0();
    sub_23F61C22C();
    swift_bridgeObjectRelease();
    result = sub_23F61CD60();
    v26 = 1 << *a3;
    v27 = __OFSUB__(v26, 1);
    v28 = v26 - 1;
    if (v27)
      goto LABEL_26;
    v29 = v28 & result;
    v30 = v49;
    v51 = sub_23F618740();
    v32 = v31;
    v34 = v33;
    sub_23F3C053C();
    *(_QWORD *)&v54 = a3;
    *((_QWORD *)&v54 + 1) = v30;
    *(_QWORD *)&v55 = v29;
    *((_QWORD *)&v55 + 1) = v51;
    *(_QWORD *)&v56 = v32;
    *((_QWORD *)&v56 + 1) = v34;
    v22 = v48;
    v57 = 0;
    v61 = 0;
    v58 = v54;
    v59 = v55;
    v60 = v56;
    result = sub_23F618758();
    v24 = v47;
    v35 = v53;
    v36 = v52;
    if ((v37 & 1) == 0)
      break;
LABEL_19:
    v43 = v50 + 1;
    sub_23F618764();
    v23 = v43;
    v38 = v43 == v22;
    a3 = v45;
    v21 = v44;
    if (v38)
      goto LABEL_21;
  }
  while (result < v22)
  {
    sub_23F3C050C(v24 + result * v35, (uint64_t)v18, type metadata accessor for PromptToolData);
    sub_23F3C050C(v36, (uint64_t)v15, type metadata accessor for PromptToolData);
    v38 = *v18 == *v15 && v18[1] == v15[1];
    if (v38)
    {
      sub_23F3C050C((uint64_t)v18, (uint64_t)v12, type metadata accessor for PromptToolData);
      sub_23F3C050C((uint64_t)v15, (uint64_t)v9, type metadata accessor for PromptToolData);
    }
    else
    {
      v39 = sub_23F61CC64();
      sub_23F3C050C((uint64_t)v18, (uint64_t)v12, type metadata accessor for PromptToolData);
      sub_23F3C050C((uint64_t)v15, (uint64_t)v9, type metadata accessor for PromptToolData);
      if ((v39 & 1) == 0)
      {
        sub_23F3C053C();
        sub_23F3C053C();
        sub_23F3C053C();
        sub_23F3C053C();
        goto LABEL_18;
      }
    }
    if (*((_QWORD *)v12 + 2) == *((_QWORD *)v9 + 2) && *((_QWORD *)v12 + 3) == *((_QWORD *)v9 + 3))
    {
      sub_23F3C053C();
      sub_23F3C053C();
      sub_23F3C053C();
      sub_23F3C053C();
LABEL_23:
      result = 0;
      *v46 = v50;
      return result;
    }
    v41 = sub_23F61CC64();
    sub_23F3C053C();
    sub_23F3C053C();
    sub_23F3C053C();
    sub_23F3C053C();
    if ((v41 & 1) != 0)
      goto LABEL_23;
LABEL_18:
    sub_23F618770();
    v58 = v54;
    v59 = v55;
    v60 = v56;
    v61 = v57;
    result = sub_23F618758();
    if ((v42 & 1) != 0)
      goto LABEL_19;
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_23F3BFD50(int64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, _QWORD *a6, uint64_t a7)
{
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char v38;
  char v39;
  uint64_t v40;
  BOOL v41;
  _QWORD *v42;
  _QWORD *v43;
  int64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  char v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  char v62;

  v47 = a7;
  v44 = a1;
  v11 = sub_23F618C20();
  v12 = *(_QWORD **)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v42 - v17;
  v53 = a5 >> 1;
  if ((uint64_t)(a5 >> 1) >= a4)
  {
    if (a5 >> 1 == a4)
    {
LABEL_4:
      *v44 = v53;
      return 1;
    }
    v19 = 0;
    v20 = a4;
    v43 = a6;
    v46 = a3;
    v42 = v12;
    v45 = a4;
    while (v20 < v53)
    {
      v48 = v19;
      v49 = v20;
      v54 = v12[9];
      v21 = a3 + v54 * v20;
      v22 = (void (*)(char *, uint64_t, uint64_t))v12[2];
      v22(v18, v21, v11);
      sub_23F3B121C(&qword_256E70090, (void (*)(uint64_t))MEMORY[0x24BE57608]);
      result = sub_23F61C040();
      v23 = 1 << *a6;
      v24 = __OFSUB__(v23, 1);
      v25 = v23 - 1;
      if (v24)
        goto LABEL_25;
      v26 = v25 & result;
      v27 = v47;
      v28 = sub_23F618740();
      v51 = v29;
      v52 = v28;
      v50 = v30;
      v31 = a6;
      v32 = (void (*)(char *, uint64_t))v12[1];
      v32(v18, v11);
      *(_QWORD *)&v55 = v31;
      *((_QWORD *)&v55 + 1) = v27;
      a3 = v46;
      v33 = v45;
      *(_QWORD *)&v56 = v26;
      *((_QWORD *)&v56 + 1) = v52;
      *(_QWORD *)&v57 = v51;
      *((_QWORD *)&v57 + 1) = v50;
      v58 = 0;
      v62 = 0;
      v59 = v55;
      v60 = v56;
      v61 = v57;
      result = sub_23F618758();
      v34 = v53;
      if ((v35 & 1) == 0)
      {
        while (1)
        {
          v36 = v33 + result;
          if (__OFADD__(v33, result))
            break;
          if (v36 < v33 || v36 >= v34)
            goto LABEL_23;
          v22(v18, a3 + v36 * v54, v11);
          v22(v15, v21, v11);
          sub_23F3B121C(&qword_256E70F30, (void (*)(uint64_t))MEMORY[0x24BE57608]);
          v38 = sub_23F61C0A0();
          v32(v15, v11);
          v32(v18, v11);
          if ((v38 & 1) != 0)
          {
            result = 0;
            *v44 = v49;
            return result;
          }
          sub_23F618770();
          v59 = v55;
          v60 = v56;
          v61 = v57;
          v62 = v58;
          result = sub_23F618758();
          if ((v39 & 1) != 0)
            goto LABEL_16;
        }
        __break(1u);
LABEL_23:
        __break(1u);
        break;
      }
LABEL_16:
      v40 = v48;
      result = sub_23F618764();
      v24 = __OFADD__(v40, 1);
      v19 = v40 + 1;
      if (v24)
        goto LABEL_26;
      v20 = v49 + 1;
      v41 = v49 + 1 == v34;
      a6 = v43;
      v12 = v42;
      if (v41)
        goto LABEL_4;
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_23F3C0084(unint64_t *a1, uint64_t a2, _QWORD *a3)
{
  unint64_t v3;
  void (*v5)(uint64_t);
  unint64_t v6;
  unint64_t result;
  char v8;
  _QWORD *v10;
  unint64_t v11;

  v3 = *(_QWORD *)(a2 + 16);
  if (!v3)
  {
LABEL_10:
    *a1 = v3;
    return 1;
  }
  sub_23F618C20();
  v5 = (void (*)(uint64_t))MEMORY[0x24BE57608];
  sub_23F3B121C(&qword_256E70090, (void (*)(uint64_t))MEMORY[0x24BE57608]);
  v6 = 0;
  v10 = a3;
  while (2)
  {
    v11 = v6;
    result = sub_23F61C040();
    if (!__OFSUB__(1 << *a3, 1))
    {
      sub_23F618740();
      while (1)
      {
        result = sub_23F618758();
        if ((v8 & 1) != 0)
          break;
        if (result >= v3)
        {
          __break(1u);
          goto LABEL_14;
        }
        sub_23F3B121C(&qword_256E70F30, v5);
        if ((sub_23F61C0A0() & 1) != 0)
        {
          result = 0;
          *a1 = v11;
          return result;
        }
        sub_23F618770();
      }
      sub_23F618764();
      v6 = v11 + 1;
      a3 = v10;
      if (v11 + 1 != v3)
        continue;
      goto LABEL_10;
    }
    break;
  }
LABEL_14:
  __break(1u);
  return result;
}

int64_t sub_23F3C0294(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  if (v5 + 1 < (unint64_t)(result + 63) >> 6)
  {
    v10 = *(_QWORD *)(v6 + 8 * v9);
    if (v10)
      return __clz(__rbit64(v10)) + (v9 << 6);
    v11 = (unint64_t)(result + 63) >> 6;
    v9 = v5 + 2;
    if (v5 + 2 < v11)
    {
      v10 = *(_QWORD *)(v6 + 8 * v9);
      if (v10)
        return __clz(__rbit64(v10)) + (v9 << 6);
      while (v5 + 3 < v11)
      {
        v10 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v10)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v10)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_23F3C037C(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  uint64_t i;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v2 = 64;
  for (i = 9; i - 7 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    v1 = *(_QWORD *)(a1 + 8 * i);
    v2 += 64;
    if (v1)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

#error "23F3C0418: call analysis failed (funcsize=13)"

uint64_t sub_23F3C0430@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_23F3BA3D4(a1, *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_23F3C0448(uint64_t a1)
{
  uint64_t v1;

  return sub_23F3BA54C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_23F3C0464()
{
  sub_23F3B0CC8(&qword_256E70EF8, &qword_256E70F00);
}

uint64_t sub_23F3C0494(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E708C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_23F3C04DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = sub_23F3C0798(a1, a2, a3);
  sub_23F362D20(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  sub_23F362928();
}

void sub_23F3C050C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = sub_23F3C0798(a1, a2, a3);
  sub_23F362D20(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  sub_23F362928();
}

void sub_23F3C053C()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  v0 = sub_23F3C090C();
  v2 = v1(v0);
  sub_23F362B6C(v2);
  sub_23F362928();
}

uint64_t sub_23F3C0560@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_23F3BBF20(a1, a2);
}

uint64_t sub_23F3C0574()
{
  return sub_23F61CC64();
}

uint64_t sub_23F3C0584()
{
  return 0;
}

uint64_t sub_23F3C0598()
{
  return sub_23F61C0A0();
}

uint64_t sub_23F3C05B0()
{
  uint64_t v0;
  __int128 v1;

  v1 = *(_OWORD *)(v0 - 256);
  *(_OWORD *)(v0 - 208) = *(_OWORD *)(v0 - 272);
  *(_OWORD *)(v0 - 192) = v1;
  *(_OWORD *)(v0 - 176) = *(_OWORD *)(v0 - 240);
  *(_BYTE *)(v0 - 160) = *(_BYTE *)(v0 - 224);
  return sub_23F618758();
}

uint64_t sub_23F3C05F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_23F3C060C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_23F3C0620()
{
  return sub_23F61C0A0();
}

uint64_t sub_23F3C062C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, a1 + v1 * v5, v2);
}

uint64_t sub_23F3C0640@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_23F3C064C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 112) = (*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
  return sub_23F617BA0();
}

uint64_t sub_23F3C0670()
{
  return 0;
}

uint64_t sub_23F3C0690(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_23F3C0698()
{
  return swift_release();
}

uint64_t sub_23F3C06A8()
{
  return swift_retain();
}

__n128 sub_23F3C06B8()
{
  uint64_t v0;
  __int128 v1;
  __n128 result;

  v1 = *(_OWORD *)(v0 - 128);
  *(_OWORD *)(v0 - 272) = *(_OWORD *)(v0 - 144);
  result = *(__n128 *)(v0 - 112);
  *(_OWORD *)(v0 - 256) = v1;
  *(__n128 *)(v0 - 240) = result;
  *(_BYTE *)(v0 - 224) = *(_BYTE *)(v0 - 96);
  return result;
}

uint64_t sub_23F3C06DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 96))(v1, v0);
}

void sub_23F3C06EC()
{
  sub_23F3C053C();
}

uint64_t sub_23F3C06F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 - 144) = v5;
  *(_QWORD *)(v6 - 136) = v3;
  *(_QWORD *)(v6 - 128) = v4;
  *(_QWORD *)(v6 - 120) = a1;
  *(_QWORD *)(v6 - 112) = a2;
  *(_QWORD *)(v6 - 104) = a3;
  *(_BYTE *)(v6 - 96) = 0;
  return sub_23F618758();
}

uint64_t sub_23F3C070C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  return sub_23F3BDC70(v2, v0, v3, v4, v1);
}

uint64_t sub_23F3C0724(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 152) = a1;
  *(_QWORD *)(v3 - 144) = v1;
  *(_QWORD *)(v3 - 136) = v2;
  return swift_retain();
}

uint64_t sub_23F3C073C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t sub_23F3C075C()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v2, v1);
}

uint64_t sub_23F3C0768()
{
  return sub_23F618740();
}

uint64_t sub_23F3C077C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_23F3C0784@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_23F3C0790()
{
  return sub_23F36FDB0();
}

uint64_t sub_23F3C0798(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  return a3(0);
}

void sub_23F3C07A4()
{
  sub_23F471B2C();
}

uint64_t sub_23F3C07CC()
{
  return sub_23F61C040();
}

uint64_t sub_23F3C07E0()
{
  return swift_release();
}

uint64_t sub_23F3C07EC()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_23F3C07F8()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_23F3C0808(uint64_t a1)
{
  char v1;

  return a1 & 0xFFFFFFFFFFFFFFFCLL | v1 & 3;
}

uint64_t sub_23F3C0820()
{
  return 0;
}

uint64_t sub_23F3C0838()
{
  uint64_t v0;

  return v0 - 104;
}

void sub_23F3C0850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, unint64_t))
{
  uint64_t v5;
  unint64_t v6;

  sub_23F3BF614(a1, v5, 0, v6, a5);
}

uint64_t sub_23F3C0860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  return sub_23F362460(a1, a2, a3, v5, v4, v3);
}

uint64_t sub_23F3C0870()
{
  uint64_t (*v0)(uint64_t, _QWORD);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, *(_QWORD *)(v2 - 128));
}

uint64_t sub_23F3C0880()
{
  return sub_23F61B2CC();
}

void sub_23F3C08A0()
{
  sub_23F375424();
}

uint64_t sub_23F3C08AC()
{
  return sub_23F3BD030();
}

uint64_t sub_23F3C08CC()
{
  return swift_beginAccess();
}

void sub_23F3C08D8(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23F3C050C(a1, a2, v2);
}

uint64_t sub_23F3C08E0()
{
  return 0;
}

uint64_t sub_23F3C08EC()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_23F3C08F4(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  return sub_23F3BB7B8(v3, v4, a3);
}

void sub_23F3C0900()
{
  sub_23F5E2D50();
}

uint64_t sub_23F3C090C()
{
  return 0;
}

uint64_t sub_23F3C0918()
{
  return swift_release();
}

uint64_t sub_23F3C0920()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F3B8A8C(*(_QWORD *)(v1 - 160), v0);
}

char *sub_23F3C092C(char *a1)
{
  int64_t v1;

  return sub_23F37B828(a1, v1, 1);
}

void sub_23F3C0938(uint64_t a1)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  int64_t v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[5];
  uint64_t v19;

  sub_23F38231C(a1, v18);
  v1 = v18[1];
  v2 = v18[3];
  v3 = v18[4];
  v4 = (unint64_t)(v18[2] + 64) >> 6;
  sub_23F617BA0();
  v19 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    if (v3)
    {
      v3 &= v3 - 1;
      goto LABEL_20;
    }
    v5 = v2 + 1;
    if (__OFADD__(v2, 1))
      break;
    if (v5 >= v4)
      goto LABEL_26;
    v6 = *(_QWORD *)(v1 + 8 * v5);
    v7 = v2 + 1;
    if (!v6)
    {
      v7 = v2 + 2;
      if (v2 + 2 >= v4)
        goto LABEL_26;
      v6 = *(_QWORD *)(v1 + 8 * v7);
      if (!v6)
      {
        v7 = v2 + 3;
        if (v2 + 3 >= v4)
          goto LABEL_26;
        v6 = *(_QWORD *)(v1 + 8 * v7);
        if (!v6)
        {
          v7 = v2 + 4;
          if (v2 + 4 >= v4)
            goto LABEL_26;
          v6 = *(_QWORD *)(v1 + 8 * v7);
          if (!v6)
          {
            v7 = v2 + 5;
            if (v2 + 5 >= v4)
              goto LABEL_26;
            v6 = *(_QWORD *)(v1 + 8 * v7);
            if (!v6)
            {
              v8 = v2 + 6;
              while (v8 < v4)
              {
                v6 = *(_QWORD *)(v1 + 8 * v8++);
                if (v6)
                {
                  v7 = v8 - 1;
                  goto LABEL_19;
                }
              }
LABEL_26:
              swift_release();
              return;
            }
          }
        }
      }
    }
LABEL_19:
    v3 = (v6 - 1) & v6;
    v2 = v7;
LABEL_20:
    swift_getKeyPath();
    sub_23F617BA0();
    sub_23F617BA0();
    swift_getAtKeyPath();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    if (v15)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23F377598();
        v19 = v12;
      }
      v9 = *(_QWORD *)(v19 + 16);
      if (v9 >= *(_QWORD *)(v19 + 24) >> 1)
      {
        sub_23F377598();
        v19 = v13;
      }
      v10 = v19;
      *(_QWORD *)(v19 + 16) = v9 + 1;
      v11 = (_QWORD *)(v10 + 32 * v9);
      v11[4] = v14;
      v11[5] = v15;
      v11[6] = v16;
      v11[7] = v17;
    }
  }
  __break(1u);
}

uint64_t sub_23F3C0B74(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;

  v1 = (_QWORD *)MEMORY[0x24BEE4B00];
  v31 = (_QWORD *)MEMORY[0x24BEE4B00];
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v3 = (uint64_t *)(a1 + 56);
    while (1)
    {
      v5 = *(v3 - 3);
      v4 = *(v3 - 2);
      v6 = *(v3 - 1);
      v7 = *v3;
      swift_retain();
      sub_23F617BA0();
      swift_bridgeObjectRetain_n();
      v9 = sub_23F3754D4(v5, v4);
      v10 = v1[2];
      v11 = (v8 & 1) == 0;
      if (__OFADD__(v10, v11))
        break;
      v12 = v8;
      if (v1[3] < v10 + v11)
      {
        sub_23F514688();
        v1 = v31;
        v13 = sub_23F3754D4(v5, v4);
        if ((v12 & 1) != (v14 & 1))
          goto LABEL_19;
        v9 = v13;
      }
      if ((v12 & 1) != 0)
      {
        v29 = v6;
        swift_bridgeObjectRelease();
        v15 = v1[7];
        v16 = *(_QWORD *)(v15 + 8 * v9);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v15 + 8 * v9) = v16;
        v30 = v2;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_23F377598();
          v16 = v26;
          *(_QWORD *)(v15 + 8 * v9) = v26;
        }
        v18 = *(_QWORD *)(v16 + 16);
        v19 = v18 + 1;
        if (v18 >= *(_QWORD *)(v16 + 24) >> 1)
        {
          sub_23F377598();
          v19 = v18 + 1;
          v16 = v27;
          *(_QWORD *)(v15 + 8 * v9) = v27;
        }
        *(_QWORD *)(v16 + 16) = v19;
        v20 = (_QWORD *)(v16 + 32 * v18);
        v20[4] = v5;
        v20[5] = v4;
        v20[6] = v29;
        v20[7] = v7;
        v2 = v30;
      }
      else
      {
        sub_23F35D2E8(&qword_256E70198);
        v21 = swift_allocObject();
        *(_OWORD *)(v21 + 16) = xmmword_23F61E7E0;
        *(_QWORD *)(v21 + 32) = v5;
        *(_QWORD *)(v21 + 40) = v4;
        *(_QWORD *)(v21 + 48) = v6;
        *(_QWORD *)(v21 + 56) = v7;
        v1[(v9 >> 6) + 8] |= 1 << v9;
        v22 = (uint64_t *)(v1[6] + 16 * v9);
        *v22 = v5;
        v22[1] = v4;
        *(_QWORD *)(v1[7] + 8 * v9) = v21;
        v23 = v1[2];
        v24 = __OFADD__(v23, 1);
        v25 = v23 + 1;
        if (v24)
          goto LABEL_18;
        v1[2] = v25;
      }
      v3 += 4;
      if (!--v2)
        goto LABEL_16;
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    result = sub_23F61CC94();
    __break(1u);
  }
  else
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return (uint64_t)v1;
  }
  return result;
}

uint64_t AssistantSchemaGrammarGenerator.init(promptRenderer:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v5[2];

  sub_23F361418(a1 + 40, (uint64_t)v5);
  sub_23F38BB88(a1);
  return sub_23F362678(v5, a2);
}

void AssistantSchemaGrammarGenerator.makeGrammar(from:identifier:renderingState:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t inited;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  _QWORD *v54;
  _QWORD v55[4];
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;

  v60 = a2;
  v61 = a5;
  v64 = *MEMORY[0x24BDAC8D0];
  v10 = sub_23F35D2E8(&qword_256E70F60);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    sub_23F3C2C38();
    sub_23F362D64();
    *v28 = 1;
    swift_willThrow();
    goto LABEL_41;
  }
  MEMORY[0x24BDAC7A8](v12);
  v55[2] = v5;
  v55[3] = a4;
  v15 = sub_23F367958((uint64_t)sub_23F3C18C0, (uint64_t)v55, a1);
  if (v6)
  {
LABEL_41:
    sub_23F362870();
    return;
  }
  v16 = sub_23F3C0B74(v15);
  sub_23F3C0938(v16);
  v18 = v17;
  v58 = 0;
  swift_bridgeObjectRelease();
  v63 = v18;
  swift_getKeyPath();
  sub_23F616D54();
  sub_23F35D2E8(&qword_256E70F68);
  sub_23F3C2F04(&qword_256E70F70, &qword_256E70F68, MEMORY[0x24BEE12C8]);
  sub_23F3C2F04(&qword_256E70F78, &qword_256E70F60, MEMORY[0x24BDCC6C8]);
  v19 = sub_23F61C358();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  swift_bridgeObjectRelease();
  v20 = *(_QWORD *)(v19 + 16);
  v21 = MEMORY[0x24BEE4AF8];
  v59 = v19;
  if (v20)
  {
    v63 = MEMORY[0x24BEE4AF8];
    sub_23F37B92C();
    v21 = v63;
    v22 = (uint64_t *)(v19 + 40);
    do
    {
      v24 = *(v22 - 1);
      v23 = *v22;
      v25 = sub_23F36682C();
      *(_QWORD *)(v25 + 16) = v24;
      *(_QWORD *)(v25 + 24) = v23;
      v63 = v21;
      v27 = *(_QWORD *)(v21 + 16);
      v26 = *(_QWORD *)(v21 + 24);
      sub_23F383738();
      if (v27 >= v26 >> 1)
      {
        sub_23F37B92C();
        v21 = v63;
      }
      v22 += 4;
      *(_QWORD *)(v21 + 16) = v27 + 1;
      *(_QWORD *)(v21 + 8 * v27 + 32) = v25 | 0x4000000000000000;
      --v20;
    }
    while (v20);
    v19 = v59;
  }
  v29 = sub_23F36682C();
  v30 = v29;
  *(_QWORD *)(v29 + 16) = v21;
  v31 = *(_QWORD *)(v19 + 16);
  if (!v31)
  {
    sub_23F617BA0();
    v32 = MEMORY[0x24BEE4AF8];
LABEL_40:
    sub_23F362984();
    v54 = v61;
    *v61 = v60;
    v54[1] = a3;
    v54[2] = v30 | 0x8000000000000000;
    v54[3] = v32;
    goto LABEL_41;
  }
  v56 = v29;
  v57 = a3;
  sub_23F617BA0();
  sub_23F383738();
  v32 = MEMORY[0x24BEE4AF8];
  v33 = (uint64_t *)(v19 + 56);
  v62 = xmmword_23F61E7E0;
  while (1)
  {
    v34 = *(v33 - 3);
    v35 = *(v33 - 2);
    v37 = *(v33 - 1);
    v36 = *v33;
    sub_23F35D2E8(&qword_256E70310);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = v62;
    v39 = (_QWORD *)(inited + 16);
    *(_QWORD *)(inited + 32) = v34;
    *(_QWORD *)(inited + 40) = v35;
    *(_QWORD *)(inited + 48) = v37;
    v40 = *(_QWORD *)(v36 + 16);
    sub_23F617BA0();
    swift_retain();
    sub_23F383738();
    if (!v40)
      goto LABEL_13;
    sub_23F376C6C();
    if (!*(_QWORD *)(v36 + 16))
      break;
    inited = v50;
    v51 = *(_QWORD *)(v50 + 16);
    if ((*(_QWORD *)(v50 + 24) >> 1) - v51 < v40)
      goto LABEL_46;
    v52 = v50 + 24 * v51 + 32;
    if (v36 + 32 < v52 + 24 * v40 && v52 < v36 + 32 + 24 * v40)
      goto LABEL_49;
    v39 = (_QWORD *)(inited + 16);
    swift_arrayInitWithCopy();
    if (__OFADD__(*(_QWORD *)(inited + 16), v40))
      goto LABEL_47;
    *v39 = *(_QWORD *)(inited + 16) + v40;
LABEL_13:
    sub_23F362984();
    v41 = *(_QWORD *)(inited + 16);
    v42 = *(_QWORD *)(v32 + 16);
    if (__OFADD__(v42, v41))
    {
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
    }
    if (!swift_isUniquelyReferenced_nonNull_native() || v42 + v41 > *(_QWORD *)(v32 + 24) >> 1)
    {
      sub_23F376C6C();
      v32 = v43;
    }
    if (*v39)
    {
      v44 = *(_QWORD *)(v32 + 16);
      if ((*(_QWORD *)(v32 + 24) >> 1) - v44 < v41)
        goto LABEL_44;
      v45 = v32 + 24 * v44 + 32;
      if (inited + 32 < v45 + 24 * v41 && v45 < inited + 32 + 24 * v41)
        goto LABEL_49;
      swift_arrayInitWithCopy();
      if (v41)
      {
        v47 = *(_QWORD *)(v32 + 16);
        v48 = __OFADD__(v47, v41);
        v49 = v47 + v41;
        if (v48)
          goto LABEL_45;
        *(_QWORD *)(v32 + 16) = v49;
      }
    }
    else if (v41)
    {
      goto LABEL_43;
    }
    swift_bridgeObjectRelease();
    v33 += 4;
    if (!--v31)
    {
      sub_23F362984();
      v30 = v56;
      a3 = v57;
      goto LABEL_40;
    }
  }
  __break(1u);
LABEL_49:
  sub_23F3833BC();
  sub_23F383DE4();
  sub_23F61CA9C();
  __break(1u);
}

void sub_23F3C1320(uint64_t a1@<X0>, uint64_t a2@<X2>, _QWORD *a3@<X3>, unint64_t *a4@<X8>)
{
  uint64_t v4;

  AssistantSchemaGrammarGenerator.makeGrammar(from:renderingState:)(a1, a2, a4);
  if (v4)
    *a3 = v4;
}

void AssistantSchemaGrammarGenerator.makeGrammar(from:renderingState:)(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;

  v7 = type metadata accessor for RenderableTool();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v3[3];
  v11 = v3[4];
  sub_23F35EA9C(v3, v10);
  v12 = sub_23F61BCE0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, a1, v12);
  v13 = *MEMORY[0x24BE57558];
  v14 = sub_23F618BB4();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v9, v13, v14);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(unint64_t *__return_ptr, char *, uint64_t, uint64_t, uint64_t))(v11 + 32))(&v45, v9, a2, v10, v11);
  sub_23F3C2C74((uint64_t)v9);
  v15 = v45;
  v16 = v46;
  v17 = v47;
  v18 = v48;
  v19 = v49;
  v20 = v50;
  v55 = v51;
  v44 = v52;
  v21 = v54;
  if ((v53 & 1) != 0)
  {
    sub_23F3C2C38();
    sub_23F362D64();
    *v22 = 0;
    swift_willThrow();
    sub_23F3C3078(v15, v16, v17, v18, v19, v20, v23, v24, 1);
    swift_bridgeObjectRelease();
  }
  else
  {
    v45 = 0;
    v46 = 0xE000000000000000;
    sub_23F617BA0();
    sub_23F61C8E0();
    swift_bridgeObjectRelease();
    v45 = 0xD000000000000011;
    v46 = 0x800000023F634CA0;
    sub_23F61C280();
    v42 = v46;
    v43 = v45;
    v25 = sub_23F36682C();
    v41 = v21;
    v26 = v25;
    sub_23F35D2E8(&qword_256E70070);
    v27 = sub_23F36682C();
    v39 = v17;
    v40 = v19;
    v28 = v27;
    *(_OWORD *)(v27 + 16) = xmmword_23F61E980;
    v29 = sub_23F36682C();
    *(_QWORD *)(v29 + 16) = 0x766E695F6C6F6F74;
    *(_QWORD *)(v29 + 24) = 0xEF6E6F697461636FLL;
    *(_QWORD *)(v28 + 32) = v29 | 0x4000000000000000;
    v30 = v20;
    v31 = v18;
    v32 = sub_23F36682C();
    v45 = v15;
    v46 = v16;
    sub_23F61C280();
    v33 = v46;
    *(_QWORD *)(v32 + 16) = v45;
    *(_QWORD *)(v32 + 24) = v33;
    *(_QWORD *)(v28 + 40) = v32;
    *(_QWORD *)(v26 + 16) = v28;
    sub_23F3C3078(v15, v16, v39, v31, v40, v30, v34, v35, 0);
    swift_bridgeObjectRelease();
    v36 = v42;
    *a3 = v43;
    a3[1] = v36;
    v37 = MEMORY[0x24BEE4AF8];
    a3[2] = v26 | 0xC000000000000000;
    a3[3] = v37;
  }
  sub_23F362870();
}

double sub_23F3C163C@<D0>(_QWORD **a1@<X0>, _OWORD *a2@<X8>)
{
  double result;
  __int128 v4;
  _OWORD v5[2];

  sub_23F36FDBC(*a1, v5);
  result = *(double *)v5;
  v4 = v5[1];
  *a2 = v5[0];
  a2[1] = v4;
  return result;
}

uint64_t sub_23F3C1674(char a1)
{
  return a1 & 1;
}

BOOL sub_23F3C167C(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_23F3C168C()
{
  return sub_23F61CD3C();
}

uint64_t sub_23F3C16B0()
{
  sub_23F61CD30();
  sub_23F61CD3C();
  return sub_23F61CD60();
}

BOOL sub_23F3C16F4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_23F3C167C(*a1, *a2);
}

uint64_t sub_23F3C1700()
{
  return sub_23F3C16B0();
}

uint64_t sub_23F3C1708()
{
  return sub_23F3C168C();
}

uint64_t sub_23F3C1710()
{
  sub_23F3C2E64();
  return sub_23F61CCAC();
}

uint64_t sub_23F3C1738()
{
  sub_23F3C2E64();
  return sub_23F61CCA0();
}

unint64_t sub_23F3C1760()
{
  return 0xD00000000000002ELL;
}

uint64_t sub_23F3C177C()
{
  char *v0;

  return sub_23F3C1674(*v0);
}

void sub_23F3C1784(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  AssistantSchemaGrammarGenerator.makeGrammar(from:identifier:renderingState:)(*a1, a2, a3, a4, a5);
}

uint64_t sub_23F3C179C()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  sub_23F3C2F7C();
  if (v3 < 0)
  {
    sub_23F3833BC();
    sub_23F383DF4();
  }
  else
  {
    if (v2 + 16 * v1 <= v0 || v0 + 16 * v1 <= v2)
      return sub_23F3C2F58();
    sub_23F3833BC();
    sub_23F383DE4();
  }
  result = sub_23F3834E4();
  __break(1u);
  return result;
}

uint64_t sub_23F3C1830()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_23F3C2F7C();
  if (v0 < 0)
  {
    sub_23F3833BC();
    sub_23F383DF4();
  }
  else
  {
    sub_23F3C2FC4();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_23F3C2F58();
    sub_23F3833BC();
    sub_23F383DE4();
  }
  result = sub_23F3834E4();
  __break(1u);
  return result;
}

void sub_23F3C18C0(uint64_t a1@<X0>, _QWORD *a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v3;

  sub_23F3C1320(a1, *(_QWORD *)(v3 + 24), a2, a3);
}

void *sub_23F3C18DC()
{
  uint64_t v0;
  const void *v1;
  size_t v2;
  void *v3;
  void *v4;
  BOOL v5;
  BOOL v6;
  void *result;

  sub_23F3C2F7C();
  if (v0 < 0)
  {
    sub_23F3833BC();
    sub_23F383DF4();
  }
  else
  {
    sub_23F3C3084();
    if (!v6 && v5)
    {
      v5 = v4 >= v3;
      v6 = v4 == v3;
    }
    else
    {
      v5 = 0;
      v6 = 0;
    }
    if (v6 || !v5)
      return sub_23F3C2F74(v3, v1, v2);
    sub_23F3833BC();
    sub_23F383DE4();
  }
  result = (void *)sub_23F3834E4();
  __break(1u);
  return result;
}

uint64_t sub_23F3C195C()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_23F3C2F7C();
  if (v0 < 0)
  {
    sub_23F3833BC();
    sub_23F383DF4();
  }
  else
  {
    sub_23F3C2FC4();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_23F3C2F58();
    sub_23F3833BC();
    sub_23F383DE4();
  }
  result = sub_23F3834E4();
  __break(1u);
  return result;
}

uint64_t sub_23F3C19EC(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2B68(a1, a2);
}

void *sub_23F3C19F8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  void *v6;
  const void *v7;
  size_t v8;
  void *result;

  if (a2 < 0)
  {
    sub_23F3833BC();
    sub_23F383DF4();
  }
  else
  {
    v3 = a1 + 8 * a2;
    if (a3 + 8 * a2 > a1)
    {
      v4 = v3 >= a3;
      v5 = v3 == a3;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      v6 = (void *)sub_23F3C304C();
      return sub_23F3C2F74(v6, v7, v8);
    }
    sub_23F3833BC();
    sub_23F383DE4();
  }
  result = (void *)sub_23F3834E4();
  __break(1u);
  return result;
}

uint64_t sub_23F3C1A88(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2ACC(a1, a2);
}

uint64_t sub_23F3C1A94(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2B68(a1, a2);
}

uint64_t sub_23F3C1AA0(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2ACC(a1, a2);
}

void *sub_23F3C1AAC(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  char v4;
  char v5;
  BOOL v6;
  void *v7;
  const void *v8;
  size_t v9;
  void *result;

  if (a2 < 0)
  {
    sub_23F3833BC();
    sub_23F383DF4();
  }
  else
  {
    sub_23F3C3058();
    if (!v5 & v4)
      v6 = v3 > v2;
    else
      v6 = 0;
    if (!v6)
    {
      v7 = (void *)sub_23F3C304C();
      return sub_23F3C2F74(v7, v8, v9);
    }
    sub_23F3833BC();
    sub_23F383DE4();
  }
  result = (void *)sub_23F3834E4();
  __break(1u);
  return result;
}

uint64_t sub_23F3C1B2C(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2B68(a1, a2);
}

uint64_t sub_23F3C1B38(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2ACC(a1, a2);
}

uint64_t sub_23F3C1B44(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2B68(a1, a2);
}

uint64_t sub_23F3C1B50(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2ACC(a1, a2);
}

uint64_t sub_23F3C1B5C(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2B68(a1, a2);
}

uint64_t sub_23F3C1B68(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2ACC(a1, a2);
}

uint64_t sub_23F3C1B74(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2ACC(a1, a2);
}

uint64_t sub_23F3C1B80(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2ACC(a1, a2);
}

uint64_t sub_23F3C1B8C(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2B68(a1, a2);
}

uint64_t sub_23F3C1B98(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2B68(a1, a2);
}

uint64_t sub_23F3C1BA4(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2ACC(a1, a2);
}

void *sub_23F3C1BB0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  void *v6;
  const void *v7;
  size_t v8;
  void *result;

  if (a2 < 0)
  {
    sub_23F3833BC();
    sub_23F383DF4();
  }
  else
  {
    v3 = a1 + 24 * a2;
    if (a3 + 24 * a2 > a1)
    {
      v4 = v3 >= a3;
      v5 = v3 == a3;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      v6 = (void *)sub_23F3C304C();
      return sub_23F3C2F74(v6, v7, v8);
    }
    sub_23F3833BC();
    sub_23F383DE4();
  }
  result = (void *)sub_23F3834E4();
  __break(1u);
  return result;
}

uint64_t sub_23F3C1C44(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2ACC(a1, a2);
}

uint64_t sub_23F3C1C50()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  sub_23F3C2F7C();
  if (v3 < 0)
  {
    sub_23F3833BC();
    sub_23F383DF4();
  }
  else
  {
    if (v2 + (v1 << 6) <= v0 || v0 + (v1 << 6) <= v2)
      return sub_23F3C2F58();
    sub_23F3833BC();
    sub_23F383DE4();
  }
  result = sub_23F3834E4();
  __break(1u);
  return result;
}

uint64_t sub_23F3C1CE4(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;

  if (a2 < 0)
  {
    sub_23F3833BC();
    sub_23F383DF4();
  }
  else
  {
    sub_23F3C303C();
    if (v4 + 72 * v3 <= v2 || v2 + 72 * v3 <= v4)
    {
      sub_23F35D2E8(&qword_256E70470);
      sub_23F3C2F60();
      return sub_23F3C2F48();
    }
    sub_23F3833BC();
    sub_23F383DE4();
  }
  result = sub_23F3834E4();
  __break(1u);
  return result;
}

uint64_t sub_23F3C1D84(uint64_t a1, uint64_t a2)
{
  return sub_23F3C237C(a1, a2);
}

uint64_t sub_23F3C1D90(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    sub_23F3833BC();
    sub_23F383DF4();
  }
  else
  {
    sub_23F3C2F88();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      sub_23F35D2E8(&qword_256E71048);
      sub_23F3C2F60();
      return sub_23F3C2F48();
    }
    sub_23F3833BC();
    sub_23F383DE4();
  }
  result = sub_23F3834E4();
  __break(1u);
  return result;
}

uint64_t sub_23F3C1E20()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_23F3C2F7C();
  if (v0 < 0)
  {
    sub_23F3833BC();
    sub_23F383DF4();
  }
  else
  {
    sub_23F3C2FC4();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_23F3C2F58();
    sub_23F3833BC();
    sub_23F383DE4();
  }
  result = sub_23F3834E4();
  __break(1u);
  return result;
}

uint64_t sub_23F3C1EB0()
{
  return sub_23F3C25CC();
}

uint64_t sub_23F3C1EBC(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2B68(a1, a2);
}

uint64_t sub_23F3C1EC8(uint64_t a1, uint64_t a2)
{
  return sub_23F3C237C(a1, a2);
}

uint64_t sub_23F3C1ED4()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_23F3C2F7C();
  if (v0 < 0)
  {
    sub_23F3833BC();
    sub_23F383DF4();
  }
  else
  {
    sub_23F3C2FD4();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_23F3C2F58();
    sub_23F3833BC();
    sub_23F383DE4();
  }
  result = sub_23F3834E4();
  __break(1u);
  return result;
}

uint64_t sub_23F3C1F5C(uint64_t a1, uint64_t a2)
{
  return sub_23F3C29C8(a1, a2);
}

uint64_t sub_23F3C1F68(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2ACC(a1, a2);
}

uint64_t sub_23F3C1F74(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2B68(a1, a2);
}

uint64_t sub_23F3C1F80(uint64_t a1, uint64_t a2)
{
  return sub_23F3C29C8(a1, a2);
}

uint64_t sub_23F3C1F8C(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2ACC(a1, a2);
}

uint64_t sub_23F3C1F98(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2ACC(a1, a2);
}

uint64_t sub_23F3C1FA4(uint64_t a1, uint64_t a2)
{
  return sub_23F3C216C(a1, a2);
}

uint64_t sub_23F3C1FB0(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2B68(a1, a2);
}

uint64_t sub_23F3C1FBC(uint64_t a1, uint64_t a2)
{
  return sub_23F3C29C8(a1, a2);
}

uint64_t sub_23F3C1FC8(uint64_t a1, uint64_t a2)
{
  return sub_23F3C29C8(a1, a2);
}

uint64_t sub_23F3C1FD4(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    sub_23F3833BC();
    sub_23F383DF4();
  }
  else
  {
    sub_23F3C2F88();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      sub_23F35D2E8(&qword_256E70FD8);
      sub_23F3C2F60();
      return sub_23F3C2F48();
    }
    sub_23F3833BC();
    sub_23F383DE4();
  }
  result = sub_23F3834E4();
  __break(1u);
  return result;
}

uint64_t sub_23F3C2064(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2ACC(a1, a2);
}

uint64_t sub_23F3C2070(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2ACC(a1, a2);
}

uint64_t sub_23F3C207C(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2ACC(a1, a2);
}

uint64_t sub_23F3C2088(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2ACC(a1, a2);
}

uint64_t sub_23F3C2094(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2ACC(a1, a2);
}

uint64_t sub_23F3C20A0(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2B68(a1, a2);
}

uint64_t sub_23F3C20AC(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2ACC(a1, a2);
}

uint64_t sub_23F3C20B8(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2ACC(a1, a2);
}

uint64_t sub_23F3C20C4(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    sub_23F3833BC();
    sub_23F383DF4();
  }
  else
  {
    sub_23F3C2FA4();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      sub_23F35D2E8(&qword_256E70558);
      sub_23F3C2F60();
      return sub_23F3C2F48();
    }
    sub_23F3833BC();
    sub_23F383DE4();
  }
  result = sub_23F3834E4();
  __break(1u);
  return result;
}

uint64_t sub_23F3C2154(uint64_t a1, uint64_t a2)
{
  return sub_23F3C29C8(a1, a2);
}

uint64_t sub_23F3C2160(uint64_t a1, uint64_t a2)
{
  return sub_23F3C216C(a1, a2);
}

uint64_t sub_23F3C216C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  BOOL v7;
  BOOL v8;
  uint64_t result;

  if (a2 < 0)
  {
    sub_23F3833BC();
    sub_23F383DF4();
  }
  else
  {
    sub_23F3C2FA4();
    if (!v8 && v7)
    {
      v7 = v6 >= v4;
      v8 = v6 == v4;
    }
    else
    {
      v7 = 0;
      v8 = 0;
    }
    if (v8 || !v7)
    {
      sub_23F3C3070(v2, v3, v4, v5);
      sub_23F3C2F60();
      return sub_23F3C2F48();
    }
    sub_23F3833BC();
    sub_23F383DE4();
  }
  result = sub_23F3834E4();
  __break(1u);
  return result;
}

uint64_t sub_23F3C21F4(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2684(a1, a2);
}

uint64_t sub_23F3C2208(uint64_t a1, uint64_t a2)
{
  return sub_23F3C29C8(a1, a2);
}

uint64_t sub_23F3C2214(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2B68(a1, a2);
}

uint64_t sub_23F3C2220(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2ACC(a1, a2);
}

uint64_t sub_23F3C222C(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2ACC(a1, a2);
}

uint64_t sub_23F3C2238(uint64_t a1, uint64_t a2)
{
  return sub_23F3C29C8(a1, a2);
}

uint64_t sub_23F3C2244(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    sub_23F3833BC();
    sub_23F383DF4();
  }
  else
  {
    sub_23F3C2F88();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      sub_23F35D2E8(&qword_256E70410);
      sub_23F3C2F60();
      return sub_23F3C2F48();
    }
    sub_23F3833BC();
    sub_23F383DE4();
  }
  result = sub_23F3834E4();
  __break(1u);
  return result;
}

uint64_t sub_23F3C22D4(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2ACC(a1, a2);
}

void *sub_23F3C22E0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  void *v6;
  const void *v7;
  size_t v8;
  void *result;

  if (a2 < 0)
  {
    sub_23F3833BC();
    sub_23F383DF4();
  }
  else
  {
    v3 = a1 + 16 * a2;
    if (a3 + 16 * a2 > a1)
    {
      v4 = v3 >= a3;
      v5 = v3 == a3;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      v6 = (void *)sub_23F3C304C();
      return sub_23F3C2F74(v6, v7, v8);
    }
    sub_23F3833BC();
    sub_23F383DE4();
  }
  result = (void *)sub_23F3834E4();
  __break(1u);
  return result;
}

uint64_t sub_23F3C2370(uint64_t a1, uint64_t a2)
{
  return sub_23F3C237C(a1, a2);
}

uint64_t sub_23F3C237C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  BOOL v7;
  BOOL v8;
  uint64_t result;

  if (a2 < 0)
  {
    sub_23F3833BC();
    sub_23F383DF4();
  }
  else
  {
    sub_23F3C2FE8();
    if (!v8 && v7)
    {
      v7 = v6 >= v4;
      v8 = v6 == v4;
    }
    else
    {
      v7 = 0;
      v8 = 0;
    }
    if (v8 || !v7)
    {
      sub_23F3C3070(v2, v3, v4, v5);
      sub_23F3C2F60();
      return sub_23F3C2F48();
    }
    sub_23F3833BC();
    sub_23F383DE4();
  }
  result = sub_23F3834E4();
  __break(1u);
  return result;
}

uint64_t sub_23F3C2404()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_23F3C2F7C();
  if (v0 < 0)
  {
    sub_23F3833BC();
    sub_23F383DF4();
  }
  else
  {
    sub_23F3C2FD4();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_23F3C2F58();
    sub_23F3833BC();
    sub_23F383DE4();
  }
  result = sub_23F3834E4();
  __break(1u);
  return result;
}

uint64_t sub_23F3C248C()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_23F3C2F7C();
  if (v0 < 0)
  {
    sub_23F3833BC();
    sub_23F383DF4();
  }
  else
  {
    sub_23F3C2FD4();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_23F3C2F58();
    sub_23F3833BC();
    sub_23F383DE4();
  }
  result = sub_23F3834E4();
  __break(1u);
  return result;
}

uint64_t sub_23F3C2518(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2ACC(a1, a2);
}

uint64_t sub_23F3C2524(uint64_t a1, uint64_t a2)
{
  return sub_23F3C29C8(a1, a2);
}

uint64_t sub_23F3C2530()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_23F3C2F7C();
  if (v0 < 0)
  {
    sub_23F3833BC();
    sub_23F383DF4();
  }
  else
  {
    sub_23F3C2FC4();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_23F3C2F58();
    sub_23F3833BC();
    sub_23F383DE4();
  }
  result = sub_23F3834E4();
  __break(1u);
  return result;
}

uint64_t sub_23F3C25C0()
{
  return sub_23F3C25CC();
}

uint64_t sub_23F3C25CC()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_23F3C2F7C();
  if (v0 < 0)
  {
    sub_23F3833BC();
    sub_23F383DF4();
  }
  else
  {
    sub_23F3C3098();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_23F3C2F58();
    sub_23F3833BC();
    sub_23F383DE4();
  }
  result = sub_23F3834E4();
  __break(1u);
  return result;
}

uint64_t sub_23F3C264C(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2ACC(a1, a2);
}

uint64_t sub_23F3C2658(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2ACC(a1, a2);
}

uint64_t sub_23F3C2664(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2ACC(a1, a2);
}

uint64_t sub_23F3C2670(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2684(a1, a2);
}

uint64_t sub_23F3C2684(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t *v3;
  unint64_t v4;
  BOOL v5;
  BOOL v6;
  uint64_t result;

  if (a2 < 0)
  {
    sub_23F3833BC();
    sub_23F383DF4();
  }
  else
  {
    sub_23F3C3004();
    if (!v6 && v5)
    {
      v5 = v4 >= v2;
      v6 = v4 == v2;
    }
    else
    {
      v5 = 0;
      v6 = 0;
    }
    if (v6 || !v5)
    {
      sub_23F3C2EA0(0, v3);
      sub_23F3C2F60();
      return sub_23F3C2F48();
    }
    sub_23F3833BC();
    sub_23F383DE4();
  }
  result = sub_23F3834E4();
  __break(1u);
  return result;
}

uint64_t sub_23F3C2718(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2ACC(a1, a2);
}

uint64_t sub_23F3C2724(uint64_t a1, uint64_t a2)
{
  return sub_23F3C29C8(a1, a2);
}

uint64_t sub_23F3C2730(uint64_t a1, uint64_t a2)
{
  return sub_23F3C29C8(a1, a2);
}

uint64_t sub_23F3C273C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    sub_23F3833BC();
    sub_23F383DF4();
  }
  else
  {
    sub_23F3C2FE8();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      sub_23F35D2E8(&qword_256E70FC0);
      sub_23F3C2F60();
      return sub_23F3C2F48();
    }
    sub_23F3833BC();
    sub_23F383DE4();
  }
  result = sub_23F3834E4();
  __break(1u);
  return result;
}

uint64_t sub_23F3C27CC(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2ACC(a1, a2);
}

uint64_t sub_23F3C27D8()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_23F3C2F7C();
  if (v0 < 0)
  {
    sub_23F3833BC();
    sub_23F383DF4();
  }
  else
  {
    sub_23F3C3098();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_23F3C2F58();
    sub_23F3833BC();
    sub_23F383DE4();
  }
  result = sub_23F3834E4();
  __break(1u);
  return result;
}

uint64_t sub_23F3C2860(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2ACC(a1, a2);
}

uint64_t sub_23F3C286C(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2ACC(a1, a2);
}

uint64_t sub_23F3C2878(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2ACC(a1, a2);
}

uint64_t sub_23F3C2884(uint64_t a1, uint64_t a2)
{
  return sub_23F3C29C8(a1, a2);
}

uint64_t sub_23F3C2890(uint64_t a1, uint64_t a2)
{
  return sub_23F3C29C8(a1, a2);
}

uint64_t sub_23F3C289C(uint64_t a1, uint64_t a2)
{
  return sub_23F3C29C8(a1, a2);
}

uint64_t sub_23F3C28A8(uint64_t a1, uint64_t a2)
{
  return sub_23F3C29C8(a1, a2);
}

uint64_t sub_23F3C28B4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    sub_23F3833BC();
    sub_23F383DF4();
  }
  else
  {
    v3 = a1 + 80 * a2;
    if (a3 + 80 * a2 > a1)
    {
      v4 = v3 >= a3;
      v5 = v3 == a3;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      sub_23F35D2E8(&qword_256E70FF0);
      sub_23F3C2F60();
      return sub_23F3C2F48();
    }
    sub_23F3833BC();
    sub_23F383DE4();
  }
  result = sub_23F3834E4();
  __break(1u);
  return result;
}

uint64_t sub_23F3C295C(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2ACC(a1, a2);
}

uint64_t sub_23F3C2968(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2ACC(a1, a2);
}

uint64_t sub_23F3C2974(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2ACC(a1, a2);
}

uint64_t sub_23F3C2980(uint64_t a1, uint64_t a2)
{
  return sub_23F3C29C8(a1, a2);
}

uint64_t sub_23F3C298C(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2ACC(a1, a2);
}

uint64_t sub_23F3C2998(uint64_t a1, uint64_t a2)
{
  return sub_23F3C29C8(a1, a2);
}

uint64_t sub_23F3C29A4(uint64_t a1, uint64_t a2)
{
  return sub_23F3C29C8(a1, a2);
}

uint64_t sub_23F3C29B0(uint64_t a1, uint64_t a2)
{
  return sub_23F3C29C8(a1, a2);
}

uint64_t sub_23F3C29BC(uint64_t a1, uint64_t a2)
{
  return sub_23F3C29C8(a1, a2);
}

uint64_t sub_23F3C29C8(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  char v8;
  char v9;
  BOOL v10;
  uint64_t result;

  if (a2 < 0)
  {
    sub_23F3833BC();
    sub_23F383DF4();
  }
  else
  {
    sub_23F3C303C();
    sub_23F3C3070(v3, v4, v5, v6);
    sub_23F3C3020();
    if (!v9 & v8)
      v10 = v7 > v2;
    else
      v10 = 0;
    if (!v10)
    {
      sub_23F3C2F60();
      return sub_23F3C2F48();
    }
    sub_23F3833BC();
    sub_23F383DE4();
  }
  result = sub_23F3834E4();
  __break(1u);
  return result;
}

uint64_t sub_23F3C2A54(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2ACC(a1, a2);
}

uint64_t sub_23F3C2A60(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2ACC(a1, a2);
}

uint64_t sub_23F3C2A6C(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2ACC(a1, a2);
}

uint64_t sub_23F3C2A78(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2ACC(a1, a2);
}

uint64_t sub_23F3C2A84(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2ACC(a1, a2);
}

uint64_t sub_23F3C2A90(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2ACC(a1, a2);
}

uint64_t sub_23F3C2A9C(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2ACC(a1, a2);
}

uint64_t sub_23F3C2AA8(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2ACC(a1, a2);
}

uint64_t sub_23F3C2AB4(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2ACC(a1, a2);
}

uint64_t sub_23F3C2AC0(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2ACC(a1, a2);
}

uint64_t sub_23F3C2ACC(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  void (*v3)(_QWORD);
  unint64_t v4;
  char v5;
  char v6;
  BOOL v7;
  uint64_t result;

  if (a2 < 0)
  {
    sub_23F3833BC();
    sub_23F383DF4();
  }
  else
  {
    sub_23F3C303C();
    v3(0);
    sub_23F3C3020();
    if (!v6 & v5)
      v7 = v4 > v2;
    else
      v7 = 0;
    if (!v7)
    {
      sub_23F3C2F60();
      return sub_23F3C2F48();
    }
    sub_23F3833BC();
    sub_23F383DE4();
  }
  result = sub_23F3834E4();
  __break(1u);
  return result;
}

uint64_t sub_23F3C2B5C(uint64_t a1, uint64_t a2)
{
  return sub_23F3C2B68(a1, a2);
}

uint64_t sub_23F3C2B68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  BOOL v7;
  BOOL v8;
  uint64_t result;

  if (a2 < 0)
  {
    sub_23F3833BC();
    sub_23F383DF4();
  }
  else
  {
    sub_23F3C3004();
    if (!v8 && v7)
    {
      v7 = v6 >= v4;
      v8 = v6 == v4;
    }
    else
    {
      v7 = 0;
      v8 = 0;
    }
    if (v8 || !v7)
    {
      sub_23F3C3070(v2, v3, v4, v5);
      sub_23F3C2F60();
      return sub_23F3C2F48();
    }
    sub_23F3833BC();
    sub_23F383DE4();
  }
  result = sub_23F3834E4();
  __break(1u);
  return result;
}

uint64_t sub_23F3C2BF0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23F3C2C14()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_23F3C2C38()
{
  unint64_t result;

  result = qword_256E70F80;
  if (!qword_256E70F80)
  {
    result = MEMORY[0x242670A44](&unk_23F61F3C8, &type metadata for AssistantSchemaGrammarGenerator.GeneratorError);
    atomic_store(result, (unint64_t *)&qword_256E70F80);
  }
  return result;
}

uint64_t sub_23F3C2C74(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RenderableTool();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for AssistantSchemaGrammarGenerator()
{
  return &type metadata for AssistantSchemaGrammarGenerator;
}

uint64_t getEnumTagSinglePayload for AssistantSchemaGrammarGenerator.GeneratorError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 1) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v5 = v6 - 2;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for AssistantSchemaGrammarGenerator.GeneratorError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23F3C2D94 + 4 * byte_23F61F2A5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23F3C2DC8 + 4 * byte_23F61F2A0[v4]))();
}

uint64_t sub_23F3C2DC8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F3C2DD0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23F3C2DD8);
  return result;
}

uint64_t sub_23F3C2DE4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23F3C2DECLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23F3C2DF0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23F3C2DF8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_23F3C2E04(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for AssistantSchemaGrammarGenerator.GeneratorError()
{
  return &type metadata for AssistantSchemaGrammarGenerator.GeneratorError;
}

unint64_t sub_23F3C2E28()
{
  unint64_t result;

  result = qword_256E70FA0;
  if (!qword_256E70FA0)
  {
    result = MEMORY[0x242670A44](&unk_23F61F3A0, &type metadata for AssistantSchemaGrammarGenerator.GeneratorError);
    atomic_store(result, (unint64_t *)&qword_256E70FA0);
  }
  return result;
}

unint64_t sub_23F3C2E64()
{
  unint64_t result;

  result = qword_256E70FA8;
  if (!qword_256E70FA8)
  {
    result = MEMORY[0x242670A44](&unk_23F61F320, &type metadata for AssistantSchemaGrammarGenerator.GeneratorError);
    atomic_store(result, (unint64_t *)&qword_256E70FA8);
  }
  return result;
}

uint64_t sub_23F3C2EA0(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_23F3C2ED8()
{
  return sub_23F3C2F04(&qword_256E71010, &qword_256E70F68, MEMORY[0x24BEE12E0]);
}

uint64_t sub_23F3C2F04(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_23F35EB74(a2);
    result = MEMORY[0x242670A44](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23F3C2F48()
{
  return swift_arrayInitWithCopy();
}

uint64_t sub_23F3C2F58()
{
  return swift_arrayInitWithCopy();
}

uint64_t sub_23F3C2F60()
{
  uint64_t v0;

  return v0;
}

void *sub_23F3C2F74(void *__dst, const void *__src, size_t __n)
{
  return memcpy(__dst, __src, __n);
}

uint64_t sub_23F3C304C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F3C3070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  return sub_23F35D2E8(a4);
}

void sub_23F3C3078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v9;

  sub_23F39BA98(a1, a2, a3, a4, a5, a6, *(_QWORD *)(v9 - 72), *(_QWORD *)(v9 - 168), a9);
}

uint64_t AuthenticationRequirementEvaluator.__allocating_init(deviceState:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = sub_23F38EB10(a1, v3);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v7);
  v9 = sub_23F3C3C08((uint64_t)v7, v1, v3, v4);
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(a1);
  return v9;
}

uint64_t AuthenticationRequirementEvaluator.init(deviceState:)(__int128 *a1)
{
  uint64_t v1;

  swift_defaultActor_initialize();
  sub_23F362678(a1, v1 + 112);
  return v1;
}

uint64_t sub_23F3C3180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  v5 = sub_23F61B5D8();
  v4[7] = v5;
  v4[8] = *(_QWORD *)(v5 - 8);
  v4[9] = sub_23F366578();
  v6 = sub_23F619E98();
  v4[10] = v6;
  v4[11] = *(_QWORD *)(v6 - 8);
  v4[12] = sub_23F366578();
  v7 = sub_23F61B644();
  v4[13] = v7;
  v4[14] = *(_QWORD *)(v7 - 8);
  v4[15] = sub_23F366578();
  sub_23F35D2E8(&qword_256E71058);
  v4[16] = sub_23F366578();
  v8 = sub_23F3C3D8C();
  v4[17] = v8;
  v4[18] = *(_QWORD *)(v8 - 8);
  v4[19] = sub_23F366578();
  return swift_task_switch();
}

uint64_t sub_23F3C3240()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(_QWORD, _QWORD, _QWORD);
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = *(_QWORD **)(v0 + 48);
  v2 = v1[17];
  v3 = v1[18];
  sub_23F35EA9C(v1 + 14, v2);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3) & 1) != 0)
    goto LABEL_4;
  v5 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 112);
  v6 = *(_QWORD *)(v0 + 120);
  v8 = *(_QWORD *)(v0 + 104);
  v9 = *(_QWORD *)(v0 + 40);
  sub_23F61B59C();
  sub_23F3C357C(v9, v5);
  v10 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v10(v6, v8);
  if (sub_23F36195C(v5, 1, v4) == 1)
  {
    sub_23F3C3D2C(*(_QWORD *)(v0 + 128), &qword_256E71058);
LABEL_4:
    type metadata accessor for RequirementStatus();
    goto LABEL_8;
  }
  v12 = *(_QWORD *)(v0 + 64);
  v11 = *(_QWORD *)(v0 + 72);
  v13 = *(_QWORD *)(v0 + 56);
  v14 = *(_QWORD *)(v0 + 32);
  v15 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 32);
  v15(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136));
  sub_23F619094();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v11, v14, v13);
  v16 = sub_23F619E8C();
  v17 = sub_23F61C640();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = *(_QWORD *)(v0 + 120);
    v31 = *(_QWORD *)(v0 + 104);
    v30 = *(_QWORD *)(v0 + 72);
    v32 = *(_QWORD *)(v0 + 64);
    v33 = *(_QWORD *)(v0 + 56);
    v19 = (uint8_t *)sub_23F366668();
    v34 = sub_23F366668();
    *(_DWORD *)v19 = 136315138;
    sub_23F61B59C();
    v20 = sub_23F61B638();
    v22 = v21;
    v10(v18, v31);
    sub_23F37AE00(v20, v22, &v34);
    *(_QWORD *)(v0 + 16) = v23;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v33);
    _os_log_impl(&dword_23F35A000, v16, v17, "AuthenticationRequirementEvaluator: Authentication requirements not satisfied %s.", v19, 0xCu);
    swift_arrayDestroy();
    sub_23F366530();
  }
  v25 = *(_QWORD *)(v0 + 88);
  v24 = *(_QWORD *)(v0 + 96);
  v26 = *(_QWORD *)(v0 + 80);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 56));

  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
  v15(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 136));
  v27 = sub_23F6181DC();
  sub_23F3C3D60(v27);
  v28 = sub_23F61814C();
  sub_23F3C3D60(v28);
  type metadata accessor for RequirementStatus();
LABEL_8:
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23F3C357C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, uint64_t, uint64_t);
  int v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char v57;
  unsigned int *v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v76 = a1;
  v77 = a2;
  v75 = sub_23F6181B8();
  v69 = *(_QWORD *)(v75 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v3);
  sub_23F36285C();
  v70 = v4;
  v5 = sub_23F619E98();
  v72 = *(_QWORD *)(v5 - 8);
  v73 = v5;
  sub_23F362850();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v74 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v65 = (char *)&v59 - v9;
  sub_23F35D2E8(&qword_256E702E0);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F36285C();
  v71 = v11;
  v68 = sub_23F61B2C0();
  v66 = *(_QWORD *)(v68 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v12);
  sub_23F36285C();
  v67 = v13;
  v14 = sub_23F61AA14();
  v15 = *(char **)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23F61B644();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v20);
  v25 = (char *)&v59 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v59 - v26;
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  v28((char *)&v59 - v26, v2, v18);
  v29 = (*(uint64_t (**)(char *, uint64_t))(v19 + 88))(v27, v18);
  if (v29 == *MEMORY[0x24BEB9400] || v29 == *MEMORY[0x24BEB93F0])
    goto LABEL_6;
  v62 = v27;
  v63 = v22;
  v60 = v15;
  v61 = v25;
  v59 = v17;
  v64 = v19;
  v34 = v2;
  v35 = v75;
  v36 = *MEMORY[0x24BEB93E0];
  if (v29 == *MEMORY[0x24BEB93E8] || v29 == (_DWORD)v36)
  {
    v38 = sub_23F61B14C();
    v39 = v71;
    sub_23F3F1328(v38, v71);
    swift_bridgeObjectRelease();
    v40 = sub_23F61B2E4();
    if (sub_23F36195C(v39, 1, v40) == 1)
    {
      sub_23F3C3D2C(v39, &qword_256E702E0);
LABEL_23:
      sub_23F3C3D94();
LABEL_24:
      (*(void (**)(char *, uint64_t, uint64_t))(v35 + 104))(v22, v36, v18);
      v57 = sub_23F489B78(v34, (uint64_t)v22);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v22, v18);
      v58 = (unsigned int *)MEMORY[0x24BE53540];
      if ((v57 & 1) == 0)
        v58 = (unsigned int *)MEMORY[0x24BE53538];
      (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v15, *v58, v40);
      sub_23F6181C4();
      v31 = sub_23F3C3D8C();
      v32 = v38;
      v33 = 0;
      return sub_23F36196C(v32, v33, 1, v31);
    }
    v15 = v67;
    sub_23F61B2CC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v39, v40);
    v38 = v66;
    if ((*(unsigned int (**)(char *, uint64_t))(v66 + 88))(v15, v68) != *MEMORY[0x24BE56C58])
    {
      sub_23F3C3DBC(*(uint64_t (**)(uint64_t, uint64_t))(v38 + 8));
      goto LABEL_23;
    }
    LODWORD(v76) = v36;
    sub_23F3C3DBC(*(uint64_t (**)(uint64_t, uint64_t))(v38 + 96));
    v49 = (uint64_t)v59;
    v22 = v60;
    (*((void (**)(char *, char *, uint64_t))v60 + 4))(v59, v15, v14);
    v38 = v49;
    if ((sub_23F61A984() & 1) == 0)
    {
      sub_23F3C3DAC();
      sub_23F3C3D94();
      v36 = v76;
      goto LABEL_24;
    }
    sub_23F619094();
    v50 = sub_23F619E8C();
    v51 = sub_23F61C640();
    if (os_log_type_enabled(v50, v51))
    {
      v52 = (uint8_t *)sub_23F366668();
      *(_WORD *)v52 = 0;
      _os_log_impl(&dword_23F35A000, v50, v51, "AuthenticationRequirementEvaluator: Authentication requirement was reported as satisfied by the client.", v52, 2u);
      sub_23F366530();
    }

    sub_23F3C3DC8(v72);
    sub_23F3C3DAC();
LABEL_6:
    v31 = sub_23F3C3D8C();
    v32 = v77;
    v33 = 1;
    return sub_23F36196C(v32, v33, 1, v31);
  }
  v41 = v74;
  sub_23F619094();
  v28(v63, v2, v18);
  v42 = sub_23F619E8C();
  v43 = sub_23F61C628();
  if (os_log_type_enabled(v42, v43))
  {
    v45 = (uint8_t *)sub_23F366668();
    v79 = sub_23F366668();
    *(_DWORD *)v45 = 136315138;
    v46 = sub_23F61B638();
    sub_23F37AE00(v46, v47, &v79);
    v78 = v48;
    sub_23F61C790();
    swift_bridgeObjectRelease();
    sub_23F3C3D78();
    _os_log_impl(&dword_23F35A000, v42, v43, "AuthenticationRequirementEvaluator: Unexpected ToolAuthenticationPolicy type %s. Considering authentication requirement satisfied", v45, 0xCu);
    swift_arrayDestroy();
    sub_23F366530();
  }
  sub_23F3C3D78();

  (*(void (**)(char *, uint64_t))(v72 + 8))(v41, v73);
  v53 = v77;
  v54 = v62;
  v55 = sub_23F3C3D8C();
  sub_23F36196C(v53, 1, 1, v55);
  return ((uint64_t (*)(char *, uint64_t))v25)(v54, v18);
}

uint64_t AuthenticationRequirementEvaluator.deinit()
{
  uint64_t v0;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 112);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t AuthenticationRequirementEvaluator.__deallocating_deinit()
{
  uint64_t v0;

  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v0 + 112);
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t AuthenticationRequirementEvaluator.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F3C3B84()
{
  return AuthenticationRequirementEvaluator.unownedExecutor.getter();
}

uint64_t sub_23F3C3B9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23F3609AC;
  return sub_23F3C3180(a1, a2, a3);
}

uint64_t sub_23F3C3C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v6;
  uint64_t v7;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;

  v10 = a3;
  v11 = a4;
  v6 = sub_23F36145C((uint64_t *)&v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(v6, a1, a3);
  type metadata accessor for AuthenticationRequirementEvaluator();
  v7 = swift_allocObject();
  swift_defaultActor_initialize();
  sub_23F362678(&v9, v7 + 112);
  return v7;
}

uint64_t type metadata accessor for AuthenticationRequirementEvaluator()
{
  return objc_opt_self();
}

uint64_t method lookup function for AuthenticationRequirementEvaluator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AuthenticationRequirementEvaluator.__allocating_init(deviceState:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of AuthenticationRequirementEvaluator.evaluate(tool:transcript:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v3 + 104)
                                                          + *(_QWORD *)(*(_QWORD *)v3 + 104));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_23F3609AC;
  return v10(a1, a2, a3);
}

uint64_t sub_23F3C3D2C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_23F35D2E8(a2);
  sub_23F3C3DC8(*(_QWORD *)(v3 - 8));
  return a1;
}

uint64_t sub_23F3C3D60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 104))(v2, v1, a1);
}

uint64_t sub_23F3C3D78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 216) + 8))(v1, v0);
}

uint64_t sub_23F3C3D8C()
{
  return sub_23F6181D0();
}

uint64_t sub_23F3C3DAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t sub_23F3C3DBC@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_23F3C3DC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

void sub_23F3C3DD4(uint64_t a1)
{
  uint64_t v2;

  sub_23F35D2E8(&qword_256E70C90);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F36285C();
  if (*(_QWORD *)(a1 + 16))
  {
    sub_23F3C86BC();
    __asm { BR              X10 }
  }
  sub_23F362870();
}

void sub_23F3C4078(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_23F35D2E8(&qword_256E70C90);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v2);
  sub_23F36285C();
  if (*(_QWORD *)(a1 + 16))
  {
    sub_23F3C86BC();
    v3 = *(_QWORD *)(a1 + 48);
    sub_23F3C870C();
    sub_23F617BA0();
    sub_23F61C280();
    sub_23F362C60();
    sub_23F389B44();
    __asm { BR              X9 }
  }
  sub_23F362870();
}

uint64_t BNFGrammarRule.init(identifier:component:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;

  v4 = *a3;
  *a4 = result;
  a4[1] = a2;
  a4[2] = v4;
  return result;
}

uint64_t RootedBNFGrammar.rules.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = *v0;
  v1 = v0[1];
  v3 = v0[2];
  sub_23F35D2E8(&qword_256E70310);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_23F61E7E0;
  *(_QWORD *)(v4 + 32) = v2;
  *(_QWORD *)(v4 + 40) = v1;
  *(_QWORD *)(v4 + 48) = v3;
  v6 = v4;
  swift_retain();
  sub_23F389CDC();
  sub_23F3668F4();
  sub_23F385E18();
  return v6;
}

__n128 RootedBNFGrammar.init(rootRule:subRules:)@<Q0>(__n128 *a1@<X0>, unint64_t a2@<X1>, __n128 *a3@<X8>)
{
  __n128 result;
  unint64_t v4;

  result = *a1;
  v4 = a1[1].n128_u64[0];
  *a3 = *a1;
  a3[1].n128_u64[0] = v4;
  a3[1].n128_u64[1] = a2;
  return result;
}

void BNFGrammarRuleExpression.description.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  BNFGrammarRenderer.renderComponent(component:)((uint64_t)&v1);
}

void BNFGrammarRenderer.renderComponent(component:)(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23F35D2E8(&qword_256E70C90);
  MEMORY[0x24BDAC7A8](v2);
  sub_23F3B17A4();
  __asm { BR              X11 }
}

void sub_23F3C44A8(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(v2 - 80) = 34;
  *(_QWORD *)(v2 - 72) = 0xE100000000000000;
  *(_QWORD *)(v2 - 96) = v3;
  *(_QWORD *)(v2 - 88) = v4;
  *(_QWORD *)(v2 - 112) = 10;
  *(_QWORD *)(v2 - 104) = 0xE100000000000000;
  *(_QWORD *)(v2 - 128) = 4091452;
  *(_QWORD *)(v2 - 120) = 0xE300000000000000;
  sub_23F38813C();
  sub_23F3C8938();
  *(_QWORD *)(v2 - 112) = sub_23F61C7CC();
  *(_QWORD *)(v2 - 104) = v5;
  sub_23F3C8550();
  sub_23F6186B0();
  sub_23F3C75A4();
  sub_23F3C75E0();
  sub_23F3B0CC8(&qword_256E70CA8, &qword_256E70C90);
  sub_23F3C895C();
  sub_23F3C89D4(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F3C8954();
  sub_23F61C280();
  sub_23F362D18();
  sub_23F61C280();
  sub_23F3C85C0();
  sub_23F383568();
}

void static BNFGrammarRuleExpression.== infix(_:_:)(uint64_t a1)
{
  __asm { BR              X12 }
}

void sub_23F3C46D4(unint64_t a1@<X8>)
{
  uint64_t v1;
  BOOL v2;

  if (a1 >> 62
    || (*(_QWORD *)(v1 + 16) == *(_QWORD *)(a1 + 16) ? (v2 = *(_QWORD *)(v1 + 24) == *(_QWORD *)(a1 + 24)) : (v2 = 0), v2))
  {
    sub_23F362B80();
  }
  else
  {
    sub_23F61CC64();
  }
}

void sub_23F3C4788()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  BOOL v11;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_23F362ABC();
  v3 = v2;
  v5 = v4;
  type metadata accessor for ContextRule();
  sub_23F3C85D4();
  MEMORY[0x24BDAC7A8](v6);
  sub_23F3C87AC();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F3C87E8();
  v9 = *(_QWORD *)(v5 + 16);
  if (v9 == *(_QWORD *)(v3 + 16) && v9 && v5 != v3)
  {
    v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v15 = *(_QWORD *)(v8 + 72);
    v14 = v5;
    while (1)
    {
      sub_23F3C87D0(v5 + v10, (uint64_t)v1);
      sub_23F3C87D0(v3 + v10, (uint64_t)v0);
      v11 = *v1 == *v0 && v1[1] == v0[1];
      if (!v11 && (sub_23F3C8510() & 1) == 0)
        break;
      sub_23F618AE8();
      sub_23F3B121C(&qword_256E71188, (void (*)(uint64_t))MEMORY[0x24BE57320]);
      sub_23F3C88F8();
      sub_23F3C88F8();
      if (v18 == v16 && v19 == v17)
      {
        sub_23F384A80();
        sub_23F3C8638((uint64_t)v0);
        sub_23F3C8638((uint64_t)v1);
      }
      else
      {
        v13 = sub_23F3C8510();
        sub_23F362984();
        swift_bridgeObjectRelease();
        sub_23F3C8638((uint64_t)v0);
        sub_23F3C8638((uint64_t)v1);
        if ((v13 & 1) == 0)
          goto LABEL_20;
      }
      v10 += v15;
      --v9;
      v5 = v14;
      if (!v9)
        goto LABEL_20;
    }
    sub_23F3C8574((uint64_t)v0);
    sub_23F3C8574((uint64_t)v1);
  }
LABEL_20:
  sub_23F362948();
}

uint64_t sub_23F3C4944()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  uint64_t v17;
  uint64_t v18;

  sub_23F3C885C();
  if (v13)
  {
    if (!v0)
      return 1;
    v3 = v2;
    if (v1 == v2)
      return 1;
    v4 = 0;
    v17 = v1;
    v18 = v2;
    while (1)
    {
      v5 = *(_QWORD *)(v1 + v4 + 48);
      v6 = *(_QWORD *)(v1 + v4 + 56);
      v7 = *(_QWORD *)(v1 + v4 + 64);
      v8 = *(_QWORD *)(v1 + v4 + 72);
      v9 = *(_QWORD *)(v3 + v4 + 48);
      v10 = *(_QWORD *)(v3 + v4 + 56);
      v11 = *(_QWORD *)(v3 + v4 + 64);
      v12 = *(_QWORD *)(v3 + v4 + 72);
      v13 = *(_QWORD *)(v1 + v4 + 32) == *(_QWORD *)(v3 + v4 + 32)
         && *(_QWORD *)(v1 + v4 + 40) == *(_QWORD *)(v3 + v4 + 40);
      if (!v13 && (sub_23F3C8510() & 1) == 0)
        break;
      v14 = v5 == v9 && v6 == v10;
      if (!v14 && (sub_23F3C8510() & 1) == 0)
        break;
      v15 = v7 == v11 && v8 == v12;
      if (!v15 && (sub_23F3C8510() & 1) == 0)
        break;
      v4 += 48;
      --v0;
      v1 = v17;
      v3 = v18;
      if (!v0)
        return 1;
    }
  }
  return 0;
}

void sub_23F3C4A3C(_QWORD *a1, _QWORD *a2)
{
  unint64_t v2;
  BOOL v5;
  _QWORD *v6;
  _QWORD *v7;
  unint64_t v8;
  BOOL v9;

  v2 = a1[2];
  if (v2 == a2[2]
    && v2
    && a1 != a2
    && (a1[4] == a2[4] ? (v5 = a1[5] == a2[5]) : (v5 = 0), (v5 || (sub_23F3C8510() & 1) != 0) && v2 != 1))
  {
    v6 = a2 + 7;
    v7 = a1 + 7;
    v8 = 1;
    while (v8 < v2)
    {
      v9 = *(v7 - 1) == *(v6 - 1) && *v7 == *v6;
      if (v9 || (sub_23F3C8510() & 1) != 0)
      {
        ++v8;
        v6 += 2;
        v7 += 2;
        if (v2 != v8)
          continue;
      }
      goto LABEL_18;
    }
    __break(1u);
  }
  else
  {
LABEL_18:
    sub_23F362B80();
  }
}

void sub_23F3C4AF8()
{
  sub_23F3C51A0();
}

uint64_t sub_23F3C4B14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2)
  {
    if (a1 != a2)
    {
      v3 = a1 + 32;
      sub_23F3C88CC();
      __asm { BR              X10 }
    }
  }
  return 1;
}

void sub_23F3C4CF0()
{
  sub_23F3C6094();
}

void sub_23F3C4D04()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;

  sub_23F362ABC();
  v2 = v1;
  v4 = v3;
  type metadata accessor for ResponseGenerationOverrides_StringPredicate(0);
  sub_23F3C85D4();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F3C8884();
  v8 = v6 - v7;
  MEMORY[0x24BDAC7A8](v9);
  sub_23F3C87E8();
  v11 = *(_QWORD *)(v4 + 16);
  if (v11 == *(_QWORD *)(v2 + 16) && v11 && v4 != v2)
  {
    v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v16 = *(_QWORD *)(v10 + 72);
    v17 = v8;
    while (1)
    {
      sub_23F3C87D0(v4 + v12, (uint64_t)v0);
      sub_23F3C87D0(v2 + v12, v8);
      v13 = *v0;
      v14 = *(_QWORD *)v8;
      if (*(_BYTE *)(v8 + 8) == 1)
      {
        if (v14)
        {
          if (v14 == 1)
          {
            if (v13 != 1)
              break;
          }
          else if (v13 != 2)
          {
            break;
          }
        }
        else if (v13)
        {
          break;
        }
      }
      else if (v13 != v14)
      {
        break;
      }
      v15 = v0[2] == *(_QWORD *)(v8 + 16) && v0[3] == *(_QWORD *)(v8 + 24);
      if (!v15 && (sub_23F3C8510() & 1) == 0)
        break;
      sub_23F3C8624();
      sub_23F3B121C(&qword_256E71168, (void (*)(uint64_t))MEMORY[0x24BE5BF10]);
      v8 = v17;
      if ((sub_23F3C862C() & 1) == 0)
        break;
      sub_23F3C8638(v17);
      sub_23F3C8638((uint64_t)v0);
      v12 += v16;
      if (!--v11)
        goto LABEL_24;
    }
    sub_23F3C8574(v8);
    sub_23F3C8574((uint64_t)v0);
  }
LABEL_24:
  sub_23F362948();
}

void sub_23F3C4ED4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;

  sub_23F362ABC();
  v1 = v0;
  v3 = v2;
  type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate(0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v4);
  sub_23F38F964();
  v7 = v6 - v5;
  sub_23F35D2E8(&qword_256E71158);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v8);
  sub_23F38F964();
  v11 = v10 - v9;
  v12 = sub_23F35D2E8(&qword_256E71160);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v13);
  sub_23F38F964();
  v16 = v15 - v14;
  type metadata accessor for ResponseGenerationOverrides_Rule.Predicate(0);
  sub_23F3C85D4();
  MEMORY[0x24BDAC7A8](v17);
  sub_23F3C8884();
  v20 = v18 - v19;
  v22 = MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v33 - v24;
  v26 = *(_QWORD *)(v3 + 16);
  if (v26 != *(_QWORD *)(v1 + 16) || !v26 || v3 == v1)
    goto LABEL_19;
  v33 = v7;
  v27 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v34 = *(_QWORD *)(v23 + 72);
  v35 = v22;
  v28 = v26 - 1;
  while (1)
  {
    v38 = v28;
    sub_23F3C8834(v3 + v27, (uint64_t)v25);
    sub_23F3C8834(v1 + v27, v20);
    v29 = v16 + *(int *)(v12 + 48);
    sub_23F3C8390((uint64_t)v25, v16);
    sub_23F3C87C8(v20);
    sub_23F389920(v16);
    v37 = v27;
    if (!v30)
      break;
    sub_23F389920(v29);
    if (!v30)
      goto LABEL_17;
    sub_23F3625D8(v16, &qword_256E71158);
LABEL_12:
    v36 = &v25[*(int *)(v35 + 20)];
    sub_23F3C8624();
    sub_23F3B121C(&qword_256E71168, (void (*)(uint64_t))MEMORY[0x24BE5BF10]);
    v32 = sub_23F3C862C();
    sub_23F3C859C(v20);
    sub_23F3C859C((uint64_t)v25);
    v28 = v38 - 1;
    if ((v32 & 1) != 0)
    {
      v27 = v37 + v34;
      if (v38)
        continue;
    }
    goto LABEL_19;
  }
  sub_23F3C8674(v16);
  sub_23F389920(v29);
  if (!v30)
  {
    sub_23F3C83D8(v29, v33);
    sub_23F3C85B4();
    v31 = sub_23F3C8818();
    sub_23F3C859C(v31);
    sub_23F3C859C(v11);
    sub_23F3625D8(v16, &qword_256E71158);
    if ((v29 & 1) == 0)
      goto LABEL_18;
    goto LABEL_12;
  }
  sub_23F3663AC(v11, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
LABEL_17:
  sub_23F3625D8(v16, &qword_256E71160);
LABEL_18:
  sub_23F3C8574(v20);
  sub_23F3C8574((uint64_t)v25);
LABEL_19:
  sub_23F362948();
}

void sub_23F3C5184()
{
  sub_23F3C51A0();
}

void sub_23F3C51A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  void (*v6)(uint64_t);
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, unint64_t, uint64_t);
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  char v25;
  void (*v26)(uint64_t, uint64_t);
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, unint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t);

  sub_23F362ABC();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v10 = sub_23F3C88AC(v8, v9, (uint64_t (*)(_QWORD))v6);
  MEMORY[0x24BDAC7A8](v10);
  sub_23F362AAC();
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v29 - v14;
  v16 = *(_QWORD *)(v1 + 16);
  if (v16 == *(_QWORD *)(v0 + 16) && v16 && v1 != v0)
  {
    v32 = v13;
    v33 = v12;
    v34 = v7;
    v17 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v29 = *(_QWORD *)(v12 + 72);
    v30 = v1;
    v31 = *(void (**)(uint64_t, unint64_t, uint64_t))(v12 + 16);
    v18 = v16 - 1;
    v19 = v13;
    do
    {
      v20 = v31;
      v31((uint64_t)v15, v1 + v17, v10);
      v21 = v0;
      v20(v19, v0 + v17, v10);
      v22 = v5;
      v23 = v5;
      v24 = v3;
      sub_23F3B121C(v23, v34);
      v25 = sub_23F3C862C();
      v26 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
      v26(v19, v10);
      v26((uint64_t)v15, v10);
      v28 = v18-- != 0;
      if ((v25 & 1) == 0)
        break;
      v17 += v29;
      v3 = v24;
      v5 = v22;
      v0 = v21;
      v1 = v30;
    }
    while (v28);
  }
  sub_23F362948();
}

void sub_23F3C530C()
{
  sub_23F3C51A0();
}

uint64_t sub_23F3C5328(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  BOOL v19;
  __n128 v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      v17 = 1;
    }
    else
    {
      v5 = 0;
      v6 = v2 - 1;
      do
      {
        v28 = sub_23F3C883C((__n128 *)(a1 + v5));
        v29 = v7;
        v30 = *(_OWORD *)(v8 + 56);
        v31 = v9;
        v32 = v10;
        v33 = *(_OWORD *)(v8 + 96);
        v34 = v11;
        v21 = sub_23F3C883C((__n128 *)(a2 + v5));
        v22 = v12;
        v23 = *(_OWORD *)(v13 + 56);
        v24 = v14;
        v25 = v15;
        v26 = *(_OWORD *)(v13 + 96);
        v27 = v16;
        sub_23F48C5D0((uint64_t *)&v28, (uint64_t *)&v21);
        v19 = v6-- != 0;
        if ((v17 & 1) == 0)
          break;
        v5 += 88;
      }
      while (v19);
    }
  }
  else
  {
    v17 = 0;
  }
  return v17 & 1;
}

void sub_23F3C5414()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  sub_23F362ABC();
  v2 = *(_QWORD *)(v0 + 16);
  if (v2 == *(_QWORD *)(v1 + 16) && v2 && v0 != v1)
  {
    v3 = v1 + 64;
    v4 = v0 + 64;
    do
    {
      v5 = *(_QWORD *)(v4 - 16);
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v3 - 16);
      v8 = *(_QWORD *)(v3 - 8);
      v9 = *(_QWORD *)(v4 - 32) == *(_QWORD *)(v3 - 32) && *(_QWORD *)(v4 - 24) == *(_QWORD *)(v3 - 24);
      if (!v9 && (sub_23F3C8510() & 1) == 0)
        break;
      v10 = v5 == v7 && v6 == v8;
      if (!v10 && (sub_23F3C8510() & 1) == 0)
        break;
      v11 = sub_23F3C85C0();
      sub_23F4903B0(v11, v12);
      if ((v13 & 1) == 0)
        break;
      v3 += 40;
      v4 += 40;
      --v2;
    }
    while (v2);
  }
  sub_23F362948();
}

void sub_23F3C54CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  void (*v31)(char *, unint64_t, uint64_t);
  char v32;
  void (*v33)(uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_23F362ABC();
  v1 = v0;
  v3 = v2;
  v4 = sub_23F61B9EC();
  v41 = *(_QWORD *)(v4 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F362AAC();
  v8 = (char *)(v6 - v7);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v35 - v10;
  v12 = *(_QWORD *)(v3 + 16);
  if (v12 == *(_QWORD *)(v1 + 16) && v12 && v3 != v1)
  {
    v13 = 0;
    v14 = v3 + 32;
    v15 = v1 + 32;
    v36 = v3 + 32;
    v37 = v12;
    v35 = v15;
    do
    {
      v16 = (uint64_t *)(v14 + 24 * v13);
      v17 = *v16;
      v18 = v16[1];
      v19 = v16[2];
      v20 = (uint64_t *)(v15 + 24 * v13);
      v21 = *v20;
      v22 = v20[1];
      v42 = v20[2];
      if (v17 != v21 || v18 != v22)
      {
        v24 = v18;
        v25 = sub_23F3C8510();
        v18 = v24;
        if ((v25 & 1) == 0)
          break;
      }
      v26 = *(_QWORD *)(v19 + 16);
      if (v26 != *(_QWORD *)(v42 + 16))
        break;
      if (v26 && v19 != v42)
      {
        v38 = v13;
        v39 = v18;
        v27 = v41;
        v28 = v22;
        v29 = (*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
        sub_23F617BA0();
        sub_23F617BA0();
        v40 = v28;
        sub_23F383EB0();
        sub_23F617BA0();
        v30 = *(_QWORD *)(v27 + 72);
        v31 = *(void (**)(char *, unint64_t, uint64_t))(v27 + 16);
        while (1)
        {
          v31(v11, v19 + v29, v4);
          v31(v8, v42 + v29, v4);
          sub_23F3B121C(&qword_256E70168, (void (*)(uint64_t))MEMORY[0x24BEB9D20]);
          v32 = sub_23F61C0A0();
          v33 = *(void (**)(uint64_t))(v41 + 8);
          v34 = sub_23F3C85C0();
          v33(v34);
          ((void (*)(char *, uint64_t))v33)(v11, v4);
          if ((v32 & 1) == 0)
            break;
          v29 += v30;
          if (!--v26)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_23F3C8894();
            sub_23F3C8954();
            v12 = v37;
            v13 = v38;
            v15 = v35;
            v14 = v36;
            goto LABEL_17;
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_23F3C8894();
        sub_23F3C8954();
        break;
      }
LABEL_17:
      ++v13;
    }
    while (v13 != v12);
  }
  sub_23F362948();
}

void sub_23F3C56F8()
{
  sub_23F3C51A0();
}

uint64_t sub_23F3C5714(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v24 = *(_QWORD *)(a1 + 16);
  if (v24 == *(_QWORD *)(a2 + 16))
  {
    if (!v24 || a1 == a2)
      return 1;
    v2 = a2 + 56;
    for (i = a1 + 56; ; i += 32)
    {
      v4 = *(_QWORD *)(i - 16);
      v5 = *(_QWORD *)(i - 8);
      v7 = *(_QWORD *)(v2 - 24);
      v6 = *(_QWORD *)(v2 - 16);
      v25 = *(_QWORD *)(i - 24);
      v26 = *(_QWORD *)(v2 - 8);
      if ((v5 & 0x2000000000000000) != 0)
        break;
      if ((v26 & 0x2000000000000000) != 0)
        goto LABEL_23;
      if (v25 == v7 && v4 == v6)
      {
        sub_23F3C856C(v25, v4, v26);
        v14 = sub_23F3C88D8();
        sub_23F3C8438(v14, v15, v16);
        v17 = sub_23F3C88D8();
        sub_23F3C8470(v17, v18, v19);
        sub_23F3C8594(v25, v4, v26);
      }
      else
      {
        v23 = sub_23F3C8510();
        v9 = sub_23F3C8904();
        sub_23F3C8438(v9, v10, v11);
        sub_23F3C856C(v25, v4, v5);
        sub_23F3C8594(v25, v4, v5);
        v12 = sub_23F3C8904();
        sub_23F3C8470(v12, v20, v21);
        if ((v23 & 1) == 0)
          return 0;
      }
      v2 += 32;
      if (!--v24)
        return 1;
    }
    if ((v26 & 0x2000000000000000) != 0)
    {
      v13 = v25 == v7 && v4 == v6;
      if (v13 || (sub_23F3C8510() & 1) != 0)
        __asm { BR              X11 }
    }
LABEL_23:
    sub_23F3C856C(v7, v6, v26);
    sub_23F3C8518(v25);
    sub_23F3C8528();
    sub_23F3C8470(v7, v6, v26);
  }
  return 0;
}

void sub_23F3C5C38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  BOOL v24;

  sub_23F362ABC();
  v19 = v12[2];
  if (v19 == v13[2]
    && v19
    && v12 != v13
    && ((v20 = v12 + 6, v21 = v12[4], v22 = *v20, v23 = v13[4], v21 == v23) ? (v24 = *(v20 - 1) == v13[5]) : (v24 = 0),
        v24 || (v21 = sub_23F3C8510(), (v21 & 1) != 0)))
  {
    ((void (*)(uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_23F3C5CC4 + 4 * byte_23F61F500[v22 >> 62]))(v21, v13, v23, v14, v15, v16, v17, v18, a9, a10, a11, a12);
  }
  else
  {
    sub_23F362948();
  }
}

uint64_t sub_23F3C5D8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2)
  {
    if (a1 != a2)
      __asm { BR              X11 }
  }
  return 1;
}

uint64_t sub_23F3C5EB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v9;
  _BYTE v10[192];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      v7 = 1;
    }
    else
    {
      v3 = (char *)(a1 + 32);
      v4 = (char *)(a2 + 32);
      v5 = v2 - 1;
      do
      {
        v6 = v5;
        sub_23F3C887C(v10, v3);
        sub_23F3C887C(&v9, v4);
        v7 = static Statement.== infix(_:_:)((uint64_t)v10);
        if ((v7 & 1) == 0)
          break;
        v5 = v6 - 1;
        v4 += 192;
        v3 += 192;
      }
      while (v6);
    }
  }
  else
  {
    v7 = 0;
  }
  return v7 & 1;
}

uint64_t sub_23F3C5F58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  unsigned __int8 *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  BOOL v11;
  char v12;

  sub_23F3C885C();
  if (!v11)
    return 0;
  if (v0 && v1 != v2)
  {
    v3 = (_BYTE *)(v1 + 56);
    v4 = (unsigned __int8 *)(v2 + 56);
    do
    {
      v5 = *((_QWORD *)v3 - 2);
      v6 = *((_QWORD *)v3 - 1);
      v7 = *v3;
      v8 = *((_QWORD *)v4 - 2);
      v9 = *((_QWORD *)v4 - 1);
      v10 = *v4;
      if (v5)
      {
        if (!v8)
          return 0;
        v11 = *((_QWORD *)v3 - 3) == *((_QWORD *)v4 - 3) && v5 == v8;
        if (!v11 && (sub_23F3C8510() & 1) == 0)
          return 0;
      }
      else if (v8)
      {
        return 0;
      }
      if ((v7 & 1) != 0)
      {
        if (!v10)
          return 0;
      }
      else
      {
        if (v6 == v9)
          v12 = v10;
        else
          v12 = 1;
        if ((v12 & 1) != 0)
          return 0;
      }
      v4 += 32;
      v3 += 32;
      --v0;
    }
    while (v0);
  }
  return 1;
}

void sub_23F3C6014()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  BOOL v5;

  sub_23F3C885C();
  if (v5 && v0 && v1 != v2)
  {
    v3 = (_QWORD *)(v1 + 40);
    v4 = (_QWORD *)(v2 + 40);
    do
    {
      v5 = *(v3 - 1) == *(v4 - 1) && *v3 == *v4;
      if (!v5 && (sub_23F3C8510() & 1) == 0)
        break;
      v3 += 2;
      v4 += 2;
      --v0;
    }
    while (v0);
  }
  sub_23F362B80();
}

void sub_23F3C6080()
{
  sub_23F3C6094();
}

void sub_23F3C6094()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t (*v6)(_QWORD);
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  BOOL v19;

  sub_23F362ABC();
  v5 = v4;
  v7 = v6;
  sub_23F3C88AC(v8, v9, v6);
  sub_23F3C85D4();
  MEMORY[0x24BDAC7A8](v10);
  sub_23F3C87AC();
  MEMORY[0x24BDAC7A8](v11);
  sub_23F3C87E8();
  v13 = *(_QWORD *)(v1 + 16);
  if (v13 == *(_QWORD *)(v0 + 16) && v13 && v1 != v0)
  {
    v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v15 = *(_QWORD *)(v12 + 72);
    v16 = v13 - 1;
    do
    {
      sub_23F3C8834(v1 + v14, v3);
      sub_23F3C8834(v0 + v14, v2);
      v17 = v5(v3, v2);
      sub_23F3663AC(v2, v7);
      sub_23F3663AC(v3, v7);
      v19 = v16-- != 0;
      if ((v17 & 1) == 0)
        break;
      v14 += v15;
    }
    while (v19);
  }
  sub_23F362948();
}

void sub_23F3C617C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t *v135;
  _QWORD *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;

  sub_23F362ABC();
  v1 = v0;
  v3 = v2;
  v4 = type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate(0);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v5);
  sub_23F36285C();
  v138 = v6;
  sub_23F35D2E8(&qword_256E71158);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v7);
  sub_23F362AAC();
  v10 = v8 - v9;
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v114 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v114 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v114 - v18;
  v144 = sub_23F35D2E8(&qword_256E71160);
  sub_23F3834C0();
  MEMORY[0x24BDAC7A8](v20);
  sub_23F362AAC();
  v23 = v21 - v22;
  v25 = MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v114 - v26;
  v28 = MEMORY[0x24BDAC7A8](v25);
  v30 = (char *)&v114 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v137 = (char *)&v114 - v31;
  v143 = type metadata accessor for ResponseGenerationOverrides_Rule.Predicate(0);
  v130 = *(_QWORD *)(v143 - 8);
  sub_23F362850();
  MEMORY[0x24BDAC7A8](v32);
  sub_23F362AAC();
  v133 = v33 - v34;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v35);
  sub_23F3838E4();
  v131 = v36;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v37);
  sub_23F3838E4();
  v134 = v38;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v39);
  sub_23F3838E4();
  v132 = v40;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v41);
  sub_23F3838E4();
  v139 = v42;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v43);
  sub_23F3838E4();
  v140 = v44;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v45);
  sub_23F3838E4();
  v142 = v46;
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v47);
  v145 = (char *)&v114 - v48;
  v129 = type metadata accessor for ResponseGenerationOverrides_Rule(0);
  sub_23F3C85D4();
  MEMORY[0x24BDAC7A8](v49);
  sub_23F3C8884();
  v136 = (_QWORD *)(v50 - v51);
  sub_23F383588();
  MEMORY[0x24BDAC7A8](v52);
  v135 = (uint64_t *)((char *)&v114 - v54);
  v55 = *(_QWORD *)(v3 + 16);
  if (v55 != *(_QWORD *)(v1 + 16) || !v55 || v3 == v1)
  {
LABEL_83:
    sub_23F362948();
    return;
  }
  v127 = v30;
  v124 = v27;
  v122 = v17;
  v121 = v14;
  v120 = v10;
  v125 = v19;
  v56 = 0;
  v57 = (*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
  v58 = v3 + v57;
  v59 = v1 + v57;
  v60 = *(_QWORD *)(v53 + 72);
  v141 = v23;
  v61 = (uint64_t)v145;
  v126 = v4;
  v118 = v55;
  v117 = v58;
  v116 = v59;
  v115 = v60;
  while (1)
  {
    v119 = v56;
    v62 = v60 * v56;
    v63 = v135;
    sub_23F3C84B4(v58 + v60 * v56, (uint64_t)v135, (void (*)(_QWORD))type metadata accessor for ResponseGenerationOverrides_Rule);
    v64 = v59 + v62;
    v65 = (uint64_t)v136;
    sub_23F3C84B4(v64, (uint64_t)v136, (void (*)(_QWORD))type metadata accessor for ResponseGenerationOverrides_Rule);
    v66 = *v63;
    v67 = *(_QWORD *)v65;
    v68 = *(_QWORD *)(v66 + 16);
    if (v68 != *(_QWORD *)(*(_QWORD *)v65 + 16))
    {
LABEL_82:
      sub_23F3C8574((uint64_t)v136);
      sub_23F3C8574((uint64_t)v135);
      goto LABEL_83;
    }
    if (v68 && v66 != v67)
    {
      sub_23F3C86D4();
      while (1)
      {
        sub_23F3C876C(v66 + v59, v61);
        sub_23F3C8994();
        if (v69)
          break;
        v70 = v142;
        sub_23F3C876C(v67 + v59, v142);
        sub_23F3C8988();
        v71 = (uint64_t)v137;
        v73 = (uint64_t)&v137[v72];
        sub_23F3C8674(v61);
        sub_23F3C87C8(v70);
        sub_23F3C84F4(v71);
        if (v79)
        {
          sub_23F3C84F4(v73);
          if (!v79)
            goto LABEL_80;
          sub_23F3625D8(v71, &qword_256E71158);
        }
        else
        {
          v74 = v68;
          v75 = v66;
          v76 = v71;
          v77 = v71;
          v78 = (uint64_t)v125;
          sub_23F3C8674(v76);
          sub_23F3C84F4(v73);
          if (v79)
          {
            v61 = (uint64_t)v145;
LABEL_79:
            sub_23F3663AC(v78, type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate);
            v71 = (uint64_t)v137;
LABEL_80:
            sub_23F3625D8(v71, &qword_256E71160);
LABEL_81:
            sub_23F3C8574(v142);
            sub_23F3C8574(v61);
            goto LABEL_82;
          }
          sub_23F3C85A4();
          sub_23F3C85B4();
          v80 = sub_23F3C8818();
          sub_23F3C859C(v80);
          sub_23F3C859C(v78);
          sub_23F3625D8(v77, &qword_256E71158);
          v66 = v75;
          v68 = v74;
          v61 = (uint64_t)v145;
          if ((v73 & 1) == 0)
            goto LABEL_81;
        }
        v81 = v142;
        sub_23F3C8624();
        sub_23F3B121C(&qword_256E71168, (void (*)(uint64_t))MEMORY[0x24BE5BF10]);
        v65 = sub_23F3C862C();
        v82 = v81;
        v61 = (uint64_t)v145;
        sub_23F3C85CC(v82);
        sub_23F3C85CC(v61);
        v23 = v141;
        if ((v65 & 1) == 0)
          goto LABEL_82;
        sub_23F3C8968();
        if (v79)
          goto LABEL_20;
      }
      __break(1u);
      goto LABEL_87;
    }
LABEL_20:
    v83 = v135[1];
    v84 = v136[1];
    v85 = *(_QWORD *)(v83 + 16);
    if (v85 != *(_QWORD *)(v84 + 16))
      goto LABEL_82;
    if (v85 && v83 != v84)
    {
      sub_23F3C86D4();
      while (1)
      {
        v86 = v140;
        sub_23F3C876C(v83 + v59, v140);
        sub_23F3C8994();
        if (v69)
          break;
        v87 = v86;
        v88 = v139;
        sub_23F3C84B4(v84 + v59, v139, (void (*)(_QWORD))type metadata accessor for ResponseGenerationOverrides_Rule.Predicate);
        sub_23F3C8988();
        v89 = (uint64_t)v127;
        v91 = (uint64_t)&v127[v90];
        sub_23F3C8390(v87, (uint64_t)v127);
        sub_23F3C87C8(v88);
        sub_23F3C84F4(v89);
        if (v79)
        {
          sub_23F3C84F4(v91);
          if (!v79)
          {
            v71 = v89;
            v61 = v140;
            v142 = v139;
            goto LABEL_80;
          }
          sub_23F3625D8(v89, &qword_256E71158);
          v92 = v140;
        }
        else
        {
          v78 = (uint64_t)v122;
          sub_23F3C8674(v89);
          sub_23F3C84F4(v91);
          if (v93)
          {
            v137 = (char *)v89;
            v61 = v140;
            v142 = v139;
            goto LABEL_79;
          }
          sub_23F3C85A4();
          sub_23F3C85B4();
          v94 = sub_23F3C8818();
          sub_23F3C8574(v94);
          sub_23F3C8574(v78);
          sub_23F3625D8(v89, &qword_256E71158);
          v92 = v140;
          if ((v91 & 1) == 0)
          {
            v142 = v139;
            v61 = v140;
            goto LABEL_81;
          }
        }
        v95 = v139;
        sub_23F3C8624();
        sub_23F3B121C(&qword_256E71168, (void (*)(uint64_t))MEMORY[0x24BE5BF10]);
        v65 = sub_23F3C857C();
        sub_23F3C85CC(v95);
        sub_23F3C85CC(v92);
        v23 = v141;
        v61 = (uint64_t)v145;
        if ((v65 & 1) == 0)
          goto LABEL_82;
        sub_23F3C8968();
        if (v79)
          goto LABEL_35;
      }
LABEL_87:
      __break(1u);
LABEL_88:
      __break(1u);
      goto LABEL_89;
    }
LABEL_35:
    v96 = v136[2];
    sub_23F3C8774();
    if (!v79)
      goto LABEL_82;
    if (v128 && v123 != v96)
    {
      sub_23F3C8640();
      do
      {
        v97 = v132;
        sub_23F3C876C(v123 + v59, v132);
        sub_23F3C8994();
        if (v69)
          goto LABEL_88;
        v98 = v134;
        sub_23F3C84B4(v96 + v59, v134, (void (*)(_QWORD))type metadata accessor for ResponseGenerationOverrides_Rule.Predicate);
        sub_23F3C8988();
        v99 = (uint64_t)v124;
        sub_23F3C8824();
        sub_23F3C87C8(v98);
        sub_23F3C84F4(v99);
        if (v79)
        {
          sub_23F3C84F4(v65);
          if (!v79)
          {
            v71 = v99;
            v111 = v134;
LABEL_76:
            v142 = v111;
            v61 = v97;
            goto LABEL_80;
          }
          sub_23F3625D8(v99, &qword_256E71158);
        }
        else
        {
          v78 = (uint64_t)v121;
          sub_23F3C8674(v99);
          sub_23F3C84F4(v65);
          if (v100)
          {
            v137 = (char *)v99;
            v112 = v134;
LABEL_78:
            v142 = v112;
            v61 = v97;
            goto LABEL_79;
          }
          sub_23F3C85A4();
          sub_23F3C85B4();
          v101 = sub_23F3C8818();
          sub_23F3C859C(v101);
          sub_23F3C859C(v78);
          sub_23F3625D8(v99, &qword_256E71158);
          v61 = (uint64_t)v145;
          if ((v65 & 1) == 0)
          {
            v113 = v134;
LABEL_85:
            v142 = v113;
            v61 = v97;
            goto LABEL_81;
          }
        }
        v102 = v134;
        sub_23F3C8624();
        sub_23F3B121C(&qword_256E71168, (void (*)(uint64_t))MEMORY[0x24BE5BF10]);
        v65 = sub_23F3C857C();
        sub_23F3C85CC(v102);
        sub_23F3C85CC(v97);
        v23 = v141;
        if ((v65 & 1) == 0)
          goto LABEL_82;
        sub_23F3C8790();
      }
      while (!v79);
    }
    v103 = v136[3];
    sub_23F3C8774();
    if (!v79)
      goto LABEL_82;
    if (v128 && v123 != v103)
      break;
LABEL_67:
    v109 = (uint64_t)v135;
    v108 = v136;
    sub_23F3C8624();
    sub_23F3B121C(&qword_256E71168, (void (*)(uint64_t))MEMORY[0x24BE5BF10]);
    v110 = sub_23F3C857C();
    sub_23F3663AC((uint64_t)v108, type metadata accessor for ResponseGenerationOverrides_Rule);
    sub_23F3663AC(v109, type metadata accessor for ResponseGenerationOverrides_Rule);
    if ((v110 & 1) != 0)
    {
      v56 = v119 + 1;
      v23 = v141;
      v58 = v117;
      v59 = v116;
      v60 = v115;
      if (v119 + 1 != v118)
        continue;
    }
    goto LABEL_83;
  }
  sub_23F3C8640();
  while (1)
  {
    v97 = v131;
    sub_23F3C876C(v123 + v59, v131);
    sub_23F3C8994();
    if (v69)
      break;
    v104 = v133;
    sub_23F3C84B4(v103 + v59, v133, (void (*)(_QWORD))type metadata accessor for ResponseGenerationOverrides_Rule.Predicate);
    sub_23F3C8988();
    sub_23F3C8824();
    sub_23F3C87C8(v104);
    sub_23F3C84F4(v23);
    if (v79)
    {
      sub_23F3C84F4(v65);
      if (!v79)
      {
        v71 = v23;
        v111 = v133;
        goto LABEL_76;
      }
      sub_23F3625D8(v23, &qword_256E71158);
    }
    else
    {
      v78 = v120;
      sub_23F3C8674(v23);
      sub_23F3C84F4(v65);
      if (v105)
      {
        v137 = (char *)v23;
        v112 = v133;
        goto LABEL_78;
      }
      sub_23F3C85A4();
      sub_23F3C85B4();
      v106 = sub_23F3C8818();
      sub_23F3C859C(v106);
      sub_23F3C859C(v78);
      sub_23F3625D8(v141, &qword_256E71158);
      if ((v65 & 1) == 0)
      {
        v113 = v133;
        goto LABEL_85;
      }
    }
    v107 = v133;
    sub_23F3C8624();
    sub_23F3B121C(&qword_256E71168, (void (*)(uint64_t))MEMORY[0x24BE5BF10]);
    v23 = v141;
    v65 = sub_23F61C0A0();
    sub_23F3C85CC(v107);
    sub_23F3C85CC(v97);
    if ((v65 & 1) == 0)
      goto LABEL_82;
    sub_23F3C8790();
    if (v79)
      goto LABEL_67;
  }
LABEL_89:
  __break(1u);
}

void BNFGrammarRuleExpression.hash(into:)()
{
  __asm { BR              X11 }
}

uint64_t sub_23F3C6C64()
{
  sub_23F3C8764();
  return sub_23F61C22C();
}

void BNFGrammarRuleExpression.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_23F61CD30();
  __asm { BR              X10 }
}

uint64_t sub_23F3C6D08()
{
  sub_23F61CD3C();
  sub_23F3C8800();
  return sub_23F61CD60();
}

void sub_23F3C6D8C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_23F61CD30();
  __asm { BR              X10 }
}

uint64_t sub_23F3C6DC8()
{
  sub_23F61CD3C();
  sub_23F61C22C();
  return sub_23F61CD60();
}

uint64_t BNFGrammarRule.identifier.getter()
{
  sub_23F617BA0();
  return sub_23F3C85C0();
}

uint64_t BNFGrammarRule.component.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 16);
  return swift_retain();
}

uint64_t BNFGrammarRule.component.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = swift_release();
  *(_QWORD *)(v1 + 16) = v2;
  return result;
}

uint64_t (*BNFGrammarRule.component.modify())()
{
  return nullsub_1;
}

uint64_t BNFGrammarRule.description.getter()
{
  __int128 *v0;
  uint64_t v1;
  __int128 v3;
  uint64_t v4;

  v1 = *((_QWORD *)v0 + 2);
  v3 = *v0;
  v4 = v1;
  return BNFGrammarRenderer.renderRule(rule:)((uint64_t)&v3);
}

uint64_t BNFGrammarRenderer.renderRule(rule:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v1 = *(_QWORD *)(a1 + 16);
  v4 = 0xE100000000000000;
  sub_23F389CDC();
  sub_23F3C886C();
  sub_23F362D08();
  sub_23F61C280();
  v3 = v1;
  BNFGrammarRenderer.renderComponent(component:)((uint64_t)&v3);
  v3 = 60;
  v4 = 0xE100000000000000;
  sub_23F3C8918();
  sub_23F61C280();
  sub_23F3C886C();
  sub_23F362D08();
  return v3;
}

uint64_t static BNFGrammarRule.== infix(_:_:)(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;

  v3 = *a1;
  v4 = a1[2];
  v5 = a2[2];
  v6 = v3 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_23F3C8510(), v3 = 0, (v7 & 1) != 0))
    sub_23F3C89C8(v3, v5, v4);
  return v3 & 1;
}

void BNFGrammarRule.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_23F617BA0();
  sub_23F3C88BC();
  swift_bridgeObjectRelease();
  __asm { BR              X10 }
}

uint64_t sub_23F3C7030()
{
  sub_23F3C894C();
  swift_retain();
  sub_23F3C88BC();
  return swift_release();
}

uint64_t BNFGrammarRule.hashValue.getter()
{
  sub_23F61CD30();
  BNFGrammarRule.hash(into:)();
  return sub_23F61CD60();
}

uint64_t sub_23F3C7118()
{
  sub_23F61CD30();
  BNFGrammarRule.hash(into:)();
  return sub_23F61CD60();
}

uint64_t RootedBNFGrammar.rootRule.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1[1];
  v3 = v1[2];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v3;
  swift_retain();
  return sub_23F617BA0();
}

uint64_t RootedBNFGrammar.subRules.getter()
{
  return sub_23F617BA0();
}

uint64_t RootedBNFGrammar.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = *v0;
  v1 = v0[1];
  v3 = v0[2];
  sub_23F35D2E8(&qword_256E70310);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23F61E7E0;
  *(_QWORD *)(inited + 32) = v2;
  *(_QWORD *)(inited + 40) = v1;
  *(_QWORD *)(inited + 48) = v3;
  v16 = inited;
  swift_retain();
  sub_23F389CDC();
  sub_23F3668F4();
  sub_23F3C88EC();
  sub_23F3C873C(v5, v6, v7, v8, v9, v10, v11, v12, v14, v15, v16);
  sub_23F362D18();
  sub_23F3C87F8();
  sub_23F3C8854(&qword_256E70588);
  sub_23F3C86F4();
  sub_23F362D08();
  return sub_23F3C85C0();
}

uint64_t BNFGrammarRenderer.renderGrammar(grammar:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = *a1;
  v1 = a1[1];
  v3 = a1[2];
  sub_23F35D2E8(&qword_256E70310);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23F61E7E0;
  *(_QWORD *)(inited + 32) = v2;
  *(_QWORD *)(inited + 40) = v1;
  *(_QWORD *)(inited + 48) = v3;
  v16 = inited;
  swift_retain();
  sub_23F389CDC();
  sub_23F3668F4();
  sub_23F3C88EC();
  sub_23F3C873C(v5, v6, v7, v8, v9, v10, v11, v12, v14, v15, v16);
  sub_23F362D18();
  sub_23F3C87F8();
  sub_23F3C8854(&qword_256E70588);
  sub_23F3C86F4();
  sub_23F362D08();
  return sub_23F3C85C0();
}

void static RootedBNFGrammar.== infix(_:_:)(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v13 = *a1;
  v14 = a1[2];
  v15 = a2[2];
  v16 = v13 == *a2 && a1[1] == a2[1];
  if (v16 || (v13 = sub_23F3C8510(), (v13 & 1) != 0))
  {
    sub_23F3C89C8(v13, v15, v14);
    if ((v17 & 1) != 0)
    {
      v18 = sub_23F3C85C0();
      sub_23F3C5C38(v18, v19, v20, v21, v22, v23, v24, v25, a9, a10, a11, a12);
    }
  }
}

void static BNFGrammarRenderer.escapeString(content:)()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_23F35D2E8(&qword_256E70C90);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  sub_23F3B17A4();
  sub_23F38813C();
  sub_23F3C8938();
  sub_23F61C7CC();
  sub_23F3C8550();
  sub_23F6186B0();
  sub_23F3C75A4();
  sub_23F3C75E0();
  sub_23F3B0CC8(&qword_256E70CA8, &qword_256E70C90);
  sub_23F3C895C();
  sub_23F3C89D4(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23F3C8894();
  sub_23F383568();
}

uint64_t sub_23F3C74EC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_23F35D2E8(&qword_256E70CB0);
  sub_23F61871C();
  MEMORY[0x24266F6AC]();
  sub_23F61C280();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a1 = 92;
  a1[1] = v3;
  return result;
}

uint64_t sub_23F3C7580(uint64_t *a1)
{
  return BNFGrammarRenderer.renderGrammar(grammar:)(a1);
}

unint64_t sub_23F3C75A4()
{
  unint64_t result;

  result = qword_256E71120;
  if (!qword_256E71120)
  {
    result = MEMORY[0x242670A44](MEMORY[0x24BEE0D48], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_256E71120);
  }
  return result;
}

unint64_t sub_23F3C75E0()
{
  unint64_t result;

  result = qword_256E71128;
  if (!qword_256E71128)
  {
    result = MEMORY[0x242670A44](MEMORY[0x24BEE0D40], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_256E71128);
  }
  return result;
}

uint64_t sub_23F3C761C()
{
  uint64_t v0;
  uint64_t result;

  result = sub_23F3C853C();
  if (v0)
  {
    sub_23F3C88CC();
    __asm { BR              X9 }
  }
  return result;
}

void sub_23F3C7740()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_23F362ABC();
  v2 = v1;
  v4 = v3;
  v5 = sub_23F61B9EC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  sub_23F3B17A4();
  v7 = *(_QWORD *)(v2 + 16);
  sub_23F61CD3C();
  v17 = v7;
  if (v7)
  {
    v8 = 0;
    v16 = v2 + 32;
    do
    {
      v9 = *(_QWORD *)(v16 + 24 * v8 + 16);
      sub_23F3668F4();
      sub_23F617BA0();
      sub_23F61C22C();
      sub_23F61CD3C();
      v10 = v9;
      v11 = *(_QWORD *)(v9 + 16);
      if (v11)
      {
        v18 = v8;
        v12 = v10 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
        sub_23F617BA0();
        v13 = *(_QWORD *)(v6 + 72);
        v14 = v4;
        v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
        do
        {
          v15(v0, v12, v5);
          sub_23F3B121C(&qword_256E6FDB0, (void (*)(uint64_t))MEMORY[0x24BEB9D20]);
          sub_23F61C04C();
          (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0, v5);
          v12 += v13;
          --v11;
        }
        while (v11);
        sub_23F3C8894();
        sub_23F362984();
        v8 = v18;
        v4 = v14;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      ++v8;
      swift_bridgeObjectRelease();
    }
    while (v8 != v17);
  }
  sub_23F362948();
}

void sub_23F3C78C0(uint64_t a1, uint64_t a2)
{
  sub_23F3C7BDC(a1, a2, (void (*)(uint64_t))MEMORY[0x24BEB9D20], &qword_256E6FDB0);
}

uint64_t sub_23F3C78DC(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  _BYTE v7[192];

  v3 = a2[2];
  result = sub_23F3C8764();
  if (v3)
  {
    sub_23F3C887C(v7, a2 + 4);
    result = sub_23F3C897C();
    v5 = v3 - 1;
    if (v5)
    {
      v6 = (char *)(a2 + 28);
      do
      {
        sub_23F3C887C(v7, v6);
        result = sub_23F3C897C();
        v6 += 192;
        --v5;
      }
      while (v5);
    }
  }
  return result;
}

void sub_23F3C7954()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 *v2;
  int v3;

  sub_23F3C853C();
  if (v0)
  {
    v2 = (unsigned __int8 *)(v1 + 56);
    do
    {
      v3 = *v2;
      if (*((_QWORD *)v2 - 2))
      {
        sub_23F61CD48();
        sub_23F389CDC();
        sub_23F3C8800();
        if (!v3)
          goto LABEL_7;
      }
      else
      {
        sub_23F61CD48();
        if (!v3)
        {
LABEL_7:
          sub_23F61CD48();
          sub_23F61CD3C();
          goto LABEL_8;
        }
      }
      sub_23F61CD48();
LABEL_8:
      sub_23F362D08();
      v2 += 32;
      --v0;
    }
    while (v0);
  }
  sub_23F383568();
}

void sub_23F3C79E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F3C853C();
  if (v0)
  {
    v2 = v1 + 40;
    do
    {
      sub_23F3C892C();
      sub_23F3C8664();
      sub_23F362C60();
      v2 += 16;
      --v0;
    }
    while (v0);
  }
  sub_23F383488();
}

void sub_23F3C7A24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23F362ABC();
  sub_23F3C853C();
  if (v0)
  {
    v2 = v1 + 72;
    do
    {
      swift_bridgeObjectRetain_n();
      sub_23F383EB0();
      sub_23F384B00();
      sub_23F3C8664();
      sub_23F362C60();
      sub_23F383EB0();
      sub_23F61C22C();
      swift_bridgeObjectRelease();
      sub_23F384B00();
      sub_23F61C22C();
      swift_bridgeObjectRelease();
      sub_23F362C60();
      sub_23F384A80();
      v2 += 48;
      --v0;
    }
    while (v0);
  }
  sub_23F362948();
}

void sub_23F3C7AC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F362ABC();
  v2 = v1;
  v3 = type metadata accessor for ContextRule();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  sub_23F3B17A4();
  v5 = *(_QWORD *)(v2 + 16);
  sub_23F3C8764();
  if (v5)
  {
    v6 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v7 = *(_QWORD *)(v4 + 72);
    do
    {
      sub_23F3C87D0(v6, v0);
      sub_23F384B00();
      sub_23F3C85C0();
      sub_23F61C22C();
      swift_bridgeObjectRelease();
      sub_23F618AE8();
      sub_23F3B121C(qword_256E71198, (void (*)(uint64_t))MEMORY[0x24BE57320]);
      sub_23F61C04C();
      sub_23F3C8638(v0);
      v6 += v7;
      --v5;
    }
    while (v5);
  }
  sub_23F362948();
}

void sub_23F3C7BC0(uint64_t a1, uint64_t a2)
{
  sub_23F3C7BDC(a1, a2, (void (*)(uint64_t))MEMORY[0x24BE557B8], &qword_256E71190);
}

void sub_23F3C7BDC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7 = *(_QWORD *)(a2 + 16);
  sub_23F3C8764();
  if (v7)
  {
    v8 = *(_QWORD *)(((uint64_t (*)(_QWORD))a3)(0) - 8);
    v9 = a2 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v10 = *(_QWORD *)(v8 + 72);
    sub_23F3B121C(a4, a3);
    do
    {
      sub_23F61C04C();
      v9 += v10;
      --v7;
    }
    while (v7);
  }
  sub_23F383568();
}

void sub_23F3C7C74(uint64_t a1, uint64_t a2)
{
  sub_23F3C7BDC(a1, a2, (void (*)(uint64_t))MEMORY[0x24BE577F0], &qword_256E70F28);
}

uint64_t sub_23F3C7C90(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_23F61CD3C();
  if (v3)
    __asm { BR              X9 }
  return result;
}

unint64_t sub_23F3C7D9C()
{
  unint64_t result;

  result = qword_256E71130;
  if (!qword_256E71130)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for BNFGrammarRuleExpression, &type metadata for BNFGrammarRuleExpression);
    atomic_store(result, (unint64_t *)&qword_256E71130);
  }
  return result;
}

unint64_t sub_23F3C7DDC()
{
  unint64_t result;

  result = qword_256E71138;
  if (!qword_256E71138)
  {
    result = MEMORY[0x242670A44](&protocol conformance descriptor for BNFGrammarRule, &type metadata for BNFGrammarRule);
    atomic_store(result, (unint64_t *)&qword_256E71138);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for BNFGrammarRuleExpression(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t destroy for BNFGrammarRuleExpression()
{
  return swift_release();
}

_QWORD *assignWithCopy for BNFGrammarRuleExpression(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *initializeWithTake for BNFGrammarRuleExpression(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

_QWORD *assignWithTake for BNFGrammarRuleExpression(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for BNFGrammarRuleExpression(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x7D && *(_BYTE *)(a1 + 8))
    {
      v2 = *(_DWORD *)a1 + 124;
    }
    else
    {
      v2 = (((*(_QWORD *)a1 >> 57) >> 5) | (4 * ((*(_QWORD *)a1 >> 57) & 0x18 | *(_QWORD *)a1 & 7))) ^ 0x7F;
      if (v2 >= 0x7C)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for BNFGrammarRuleExpression(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7C)
  {
    *(_QWORD *)result = a2 - 125;
    if (a3 >= 0x7D)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7D)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_23F3C7F78(_QWORD *a1)
{
  return *a1 >> 62;
}

_QWORD *sub_23F3C7F84(_QWORD *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t *sub_23F3C7F94(uint64_t *result, uint64_t a2)
{
  *result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  return result;
}

void type metadata accessor for BNFGrammarRuleExpression()
{
  sub_23F362C18();
}

uint64_t destroy for BNFGrammarRule()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

void _s30IntelligenceFlowPlannerRuntime14BNFGrammarRuleVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  sub_23F617BA0();
  swift_retain();
  sub_23F362928();
}

_QWORD *assignWithCopy for BNFGrammarRule(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for BNFGrammarRule(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

_QWORD *assignWithTake for BNFGrammarRule(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for BNFGrammarRule(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BNFGrammarRule(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for BNFGrammarRule()
{
  sub_23F362C18();
}

uint64_t destroy for RootedBNFGrammar()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for RootedBNFGrammar(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  sub_23F617BA0();
  swift_retain();
  sub_23F617BA0();
  return a1;
}

_QWORD *assignWithCopy for RootedBNFGrammar(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  sub_23F617BA0();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for RootedBNFGrammar(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_QWORD *assignWithTake for RootedBNFGrammar(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RootedBNFGrammar(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RootedBNFGrammar(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for RootedBNFGrammar()
{
  sub_23F362C18();
}

uint64_t dispatch thunk of GrammarRenderer.renderGrammar(grammar:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

void type metadata accessor for BNFGrammarRenderer()
{
  sub_23F362C18();
}

uint64_t sub_23F3C8390(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F35D2E8(&qword_256E71158);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23F3C83D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ResponseGenerationOverrides_Rule.Predicate.OneOf_Predicate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_23F3C841C(uint64_t a1, uint64_t a2)
{
  sub_23F3C7BDC(a1, a2, (void (*)(uint64_t))MEMORY[0x24BEB8FE0], &qword_256E70528);
}

uint64_t sub_23F3C8438(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((a3 & 0x2000000000000000) != 0)
  {
    swift_retain();
    sub_23F617BA0();
  }
  return sub_23F617BA0();
}

uint64_t sub_23F3C8470(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  if ((a3 & 0x2000000000000000) != 0)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

void sub_23F3C84B4(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  uint64_t v3;
  void (*v4)(uint64_t);

  a3(0);
  v3 = sub_23F3C85C0();
  v4(v3);
  sub_23F362928();
}

uint64_t sub_23F3C84F4(uint64_t a1)
{
  uint64_t v1;

  return sub_23F36195C(a1, 1, v1);
}

uint64_t sub_23F3C8510()
{
  return sub_23F61CC64();
}

uint64_t sub_23F3C8518(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return sub_23F3C8438(a1, v1, v2);
}

uint64_t sub_23F3C8528()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_23F3C8470(v0, v1, v2);
}

uint64_t sub_23F3C853C()
{
  return sub_23F61CD3C();
}

uint64_t sub_23F3C8550()
{
  return 0x2F5D5C5C225C5B2FLL;
}

uint64_t sub_23F3C856C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F3C8438(a1, a2, a3);
}

void sub_23F3C8574(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_23F3663AC(a1, v1);
}

uint64_t sub_23F3C857C()
{
  return sub_23F61C0A0();
}

uint64_t sub_23F3C8594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F3C8470(a1, a2, a3);
}

void sub_23F3C859C(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_23F3663AC(a1, v1);
}

uint64_t sub_23F3C85A4()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F3C83D8(v0, *(_QWORD *)(v1 - 152));
}

void sub_23F3C85B4()
{
  sub_23F4B22F0();
}

uint64_t sub_23F3C85C0()
{
  uint64_t v0;

  return v0;
}

void sub_23F3C85CC(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_23F3663AC(a1, v1);
}

uint64_t sub_23F3C85E4()
{
  return sub_23F61C7CC();
}

unint64_t sub_23F3C8604()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 128) = 10;
  *(_QWORD *)(v0 - 144) = 4091452;
  *(_QWORD *)(v0 - 136) = 0xE300000000000000;
  return sub_23F38813C();
}

uint64_t sub_23F3C8624()
{
  return sub_23F618974();
}

uint64_t sub_23F3C862C()
{
  return sub_23F61C0A0();
}

void sub_23F3C8638(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_23F3663AC(a1, v1);
}

void sub_23F3C8640()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 288) = *(_QWORD *)(*(_QWORD *)(v0 - 216) + 72);
}

uint64_t sub_23F3C8664()
{
  return sub_23F61C22C();
}

uint64_t sub_23F3C8674(uint64_t a1)
{
  uint64_t v1;

  return sub_23F3C8390(a1, v1);
}

uint64_t sub_23F3C867C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F3C869C()
{
  uint64_t v0;

  return v0 - 128;
}

void sub_23F3C86BC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = v0;
  sub_23F37B47C();
}

void sub_23F3C86D4()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 232) = *(_QWORD *)(*(_QWORD *)(v0 - 216) + 72);
}

uint64_t sub_23F3C86F4()
{
  return sub_23F61C088();
}

void sub_23F3C870C()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 96) = 60;
  *(_QWORD *)(v0 - 88) = 0xE100000000000000;
}

uint64_t sub_23F3C8720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  return a15;
}

void sub_23F3C873C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  sub_23F3C4078(a11);
}

uint64_t sub_23F3C8750()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_23F3C8438(v2, v1, v0);
}

uint64_t sub_23F3C8764()
{
  return sub_23F61CD3C();
}

void sub_23F3C876C(uint64_t a1, uint64_t a2)
{
  void (*v2)(_QWORD);

  sub_23F3C84B4(a1, a2, v2);
}

void sub_23F3C8774()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 272) = v0;
  *(_QWORD *)(v1 - 232) = *(_QWORD *)(v0 + 16);
}

uint64_t sub_23F3C87C8(uint64_t a1)
{
  uint64_t v1;

  return sub_23F3C8390(a1, v1);
}

void sub_23F3C87D0(uint64_t a1, uint64_t a2)
{
  void (*v2)(_QWORD);

  sub_23F3C84B4(a1, a2, v2);
}

uint64_t sub_23F3C87D8()
{
  return sub_23F61C280();
}

uint64_t sub_23F3C87F8()
{
  uint64_t *v0;

  return sub_23F35D2E8(v0);
}

uint64_t sub_23F3C8800()
{
  return sub_23F61C22C();
}

uint64_t sub_23F3C8808()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F3C8818()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F3C8824()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23F3C8390(v1, v0);
}

void sub_23F3C8834(uint64_t a1, uint64_t a2)
{
  void (*v2)(_QWORD);

  sub_23F3C84B4(a1, a2, v2);
}

__n128 sub_23F3C883C@<Q0>(__n128 *a1@<X8>)
{
  return a1[2];
}

void sub_23F3C8854(_QWORD *a1)
{
  uint64_t *v1;

  sub_23F3B0CC8(a1, v1);
}

uint64_t sub_23F3C886C()
{
  return sub_23F61C280();
}

void *sub_23F3C887C(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xB9uLL);
}

uint64_t sub_23F3C8894()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F3C889C()
{
  return 2128928;
}

uint64_t sub_23F3C88AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  return a3(0);
}

uint64_t sub_23F3C88BC()
{
  return sub_23F61C22C();
}

uint64_t sub_23F3C88D8()
{
  uint64_t v0;

  return v0;
}

void sub_23F3C88EC()
{
  sub_23F385E18();
}

uint64_t sub_23F3C88F8()
{
  return sub_23F61C388();
}

uint64_t sub_23F3C8904()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23F3C8918()
{
  return 0x203D3A3A20;
}

uint64_t sub_23F3C892C()
{
  return sub_23F617BA0();
}

uint64_t sub_23F3C894C()
{
  return sub_23F61CD3C();
}

uint64_t sub_23F3C8954()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23F3C895C()
{
  return sub_23F61C5D4();
}

uint64_t sub_23F3C897C()
{
  uint64_t v0;

  return Statement.hash(into:)(v0);
}

uint64_t sub_23F3C89A0()
{
  return 32;
}

uint64_t sub_23F3C89C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23F3C8438(a1, a2, a3);
}

void sub_23F3C89C8(uint64_t a1, ...)
{
  va_list va;

  va_start(va, a1);
  static BNFGrammarRuleExpression.== infix(_:_:)((uint64_t)va);
}

uint64_t sub_23F3C89D4@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

double sub_23F3C89E0@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  __int128 v3;
  double result;
  uint64_t v5;
  __int128 v6;
  _BYTE v7[25];

  sub_23F3C92C8(a1, &v5, (uint64_t *)&v6);
  v7[24] = 0;
  v3 = *(_OWORD *)v7;
  *a2 = v6;
  a2[1] = v3;
  result = *(double *)&v7[9];
  *(_OWORD *)((char *)a2 + 25) = *(_OWORD *)&v7[9];
  return result;
}

uint64_t sub_23F3C8A48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  char v8;
  __int128 v9[2];
  char v10;

  sub_23F3CA7F8();
  if ((v8 & 1) != 0)
  {
    v2 = v7;
    sub_23F35D2E8(&qword_256E70370);
    result = swift_willThrowTypedImpl();
    *(_BYTE *)(a1 + 40) = 1;
  }
  else
  {
    sub_23F362678(&v7, (uint64_t)v9);
    v4 = sub_23F35D2E8(&qword_256E707A0);
    sub_23F389844(&qword_256E707A8, &qword_256E707A0, (uint64_t)&unk_23F622690);
    v6 = v5;
    v2 = swift_allocObject();
    sub_23F3CAB14();
    result = sub_23F362678(v9, v2 + 16);
    v10 = 0;
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = v6;
    *(_BYTE *)(a1 + 40) = 0;
  }
  *(_QWORD *)a1 = v2;
  return result;
}

void sub_23F3C8B40(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[9];
  uint64_t v17;
  _QWORD v18[5];
  char v19;

  v4 = sub_23F61B32C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23F3C9A94();
  v8 = _s15BravoComponentsVMa();
  v9 = a1 + *(int *)(v8 + 32);
  v10 = *(void **)v9;
  if ((*(_BYTE *)(v9 + 32) & 1) != 0)
  {
    v16[0] = *(_QWORD *)v9;
    v11 = v10;
    sub_23F35D2E8(&qword_256E70370);
    swift_willThrowTypedImpl();
    sub_23F38BB88((uint64_t)&v17);
    *(_QWORD *)a2 = v10;
    *(_BYTE *)(a2 + 40) = 1;
  }
  else
  {
    v12 = v8;
    v13 = *(_QWORD *)(v9 + 8);
    v14 = *(_QWORD *)(v9 + 16);
    v15 = *(_QWORD *)(v9 + 24);
    v16[5] = *(_QWORD *)v9;
    v16[6] = v13;
    v16[7] = v14;
    v16[8] = v15;
    sub_23F3CB7DC((uint64_t)v10);
    sub_23F3C8D34((uint64_t)v16);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1 + *(int *)(v12 + 24), v4);
    v18[3] = &type metadata for PromptMapperResolver;
    v18[4] = &off_250FDB498;
    v18[0] = swift_allocObject();
    sub_23F51CF9C();
    v19 = 0;
    sub_23F3CD9FC((uint64_t)v18, a2, &qword_256E705F8);
  }
}

void sub_23F3C8CC4(uint64_t a1@<X0>, void (*a2)(_QWORD *__return_ptr, uint64_t, uint64_t *)@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  _QWORD v7[5];
  char v8;

  a2(v7, a1, &v6);
  v8 = 0;
  sub_23F3CD9FC((uint64_t)v7, a4, a3);
}

uint64_t sub_23F3C8D34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;
  uint64_t v10;
  _UNKNOWN **v11;

  v3 = _s15BravoComponentsVMa();
  v4 = v1 + *(int *)(v3 + 40);
  sub_23F38F124(v4, (uint64_t)&v9, &qword_256E70738);
  if (!v10)
  {
    sub_23F3625D8((uint64_t)&v9, &qword_256E70738);
    v10 = type metadata accessor for AlphaAppNameRenderer(0);
    v11 = &off_250FD31D8;
    v5 = sub_23F36145C((uint64_t *)&v9);
    v6 = v1 + *(int *)(v3 + 20);
    v7 = sub_23F6170CC();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
    sub_23F36196C((uint64_t)v5, 0, 1, v7);
    sub_23F3625D8(v4, &qword_256E70738);
    sub_23F382FC4((uint64_t)&v9, v4);
  }
  return sub_23F362678(&v9, a1);
}

void sub_23F3C8E30(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  int *v9;
  __int128 v10;
  uint64_t v11;
  char *v12;
  __n128 v13;
  uint64_t v14;
  __n128 *v15;
  __n128 v16;
  __n128 v17;
  __n128 v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  _QWORD v35[5];

  *a5 = 0x6F76617242;
  a5[1] = 0xE500000000000000;
  v9 = (int *)_s15BravoComponentsVMa();
  *(double *)&v10 = sub_23F3CDAA8(v9[10]);
  v12 = (char *)a5 + *(int *)(v11 + 44);
  *((_QWORD *)v12 + 4) = 0;
  *(_OWORD *)v12 = v10;
  *((_OWORD *)v12 + 1) = v10;
  v12[40] = -1;
  bzero((char *)a5 + *(int *)(v11 + 48), 0xC8uLL);
  bzero((char *)a5 + v9[13], 0x168uLL);
  v13.n128_f64[0] = sub_23F3CDAA8(v9[14]);
  *(_BYTE *)(v14 + 40) = -1;
  v15 = (__n128 *)((char *)a5 + v9[15]);
  v15[2].n128_u64[0] = 0;
  *v15 = v13;
  v15[1] = v13;
  sub_23F3CDA48(v9[16], v13);
  sub_23F3CDA48(v9[17], v16);
  sub_23F3CDA48(v9[18], v17);
  sub_23F3CDA48(v9[19], v18);
  v19 = (char *)a5 + v9[5];
  v20 = sub_23F38F984();
  v29 = *(_QWORD *)(v20 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v19, a1, v20);
  v21 = (char *)a5 + v9[6];
  v22 = sub_23F384B34();
  v23 = *(_QWORD *)(v22 - 8);
  v31 = a2;
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v21, a2, v22);
  v30 = a3;
  sub_23F382FC4(a3, (uint64_t)a5 + v9[7]);
  v32 = a1;
  sub_23F3C905C(a1, &v34, (uint64_t)v35);
  v25 = v35[0];
  v24 = v35[1];
  v26 = v35[2];
  v27 = v35[3];
  _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v30);
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v31, v22);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v32, v20);
  v28 = (char *)a5 + v9[8];
  *(_QWORD *)v28 = v25;
  *((_QWORD *)v28 + 1) = v24;
  *((_QWORD *)v28 + 2) = v26;
  *((_QWORD *)v28 + 3) = v27;
  v28[32] = 0;
  sub_23F3CD9FC(a4, (uint64_t)a5 + v9[9], &qword_256E705E0);
}

uint64_t _s15BravoComponentsVMa()
{
  uint64_t result;

  result = qword_256E711F8;
  if (!qword_256E711F8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23F3C905C(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v16 = a2;
  v17 = a1;
  v5 = sub_23F6170CC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FullPlannerPreferences();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256E6EE90 != -1)
    swift_once();
  v12 = sub_23F361498(v9, (uint64_t)qword_256E7FE90);
  swift_beginAccess();
  sub_23F38F530(v12, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  sub_23F35D2E8(&qword_256E6F5A8);
  sub_23F617C48();
  v13 = v18;
  sub_23F3663AC((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  if (v13 == 1)
  {
    v21 = 0;
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v17, v5);
    StringExprsAreQuotesRequirement.init(aligner:locale:)(&v21, (uint64_t)v8, (uint64_t *)&v18);
    if (v3)
    {
      *v16 = v3;
    }
    else
    {
      v14 = v19;
      v15 = v20;
      *(_OWORD *)a3 = v18;
      *(_QWORD *)(a3 + 16) = v14;
      *(_QWORD *)(a3 + 24) = v15;
    }
  }
  else
  {
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
}

void sub_23F3C9214()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  char v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;

  v3 = v1 + *(int *)(sub_23F3CDA3C() + 44);
  sub_23F38FA10();
  if (v13)
  {
    sub_23F38F9FC();
  }
  else if ((v12 & 1) != 0)
  {
    sub_23F38F9D4();
    *(_QWORD *)&v25 = v2;
    v29 = 1;
  }
  else
  {
    sub_23F38F9E0(v4, v5, v6, v7, v8, v9, v10, v11, v25);
    v29 = 0;
  }
  sub_23F38F938();
  if (v13)
  {
    v22 = sub_23F38FA50();
    sub_23F3C89E0(v22, v23);
    sub_23F38FA10();
    if (!v13)
    {
      if ((v24 & 1) != 0)

      else
        _s30IntelligenceFlowPlannerRuntime30AnyActionRequirementEvaluatingVwxx_0(v3);
    }
    if ((*(_BYTE *)(v0 + 40) & 1) != 0)
    {
      sub_23F38FA30();
      *(_QWORD *)v3 = v0;
      *(_BYTE *)(v3 + 40) = 1;
    }
    else
    {
      sub_23F3CDA9C();
      *(_BYTE *)(v3 + 40) = 0;
    }
  }
  else
  {
    sub_23F38FA5C(v14, v15, v16, v17, v18, v19, v20, v21, v25, v26, v27, v28, v29);
  }
  sub_23F38F98C();
}

void sub_23F3C92C8(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint8_t *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t *v44;
  BOOL v45;
  char v46;
  char *v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  _QWORD *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint8_t *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint8_t *v74;
  uint64_t v75;

  v65 = a1;
  v72 = a3;
  v5 = sub_23F619E98();
  v62 = *(_QWORD *)(v5 - 8);
  v63 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v61 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23F35D2E8(&qword_256E705E0);
  MEMORY[0x24BDAC7A8](v7);
  v67 = (uint64_t)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = type metadata accessor for FullPlannerGMSClientConfiguration(0);
  v9 = MEMORY[0x24BDAC7A8](v66);
  v68 = (uint64_t)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v69 = (uint64_t)&v58 - v11;
  v12 = sub_23F35D2E8(&qword_256E70760);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = sub_23F616E68();
  v71 = *(_QWORD *)(v75 - 8);
  v15 = MEMORY[0x24BDAC7A8](v75);
  v64 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v70 = (char *)&v58 - v17;
  v18 = type metadata accessor for FullPlannerPreferences();
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256E6EE90 != -1)
    swift_once();
  v21 = sub_23F361498(v18, (uint64_t)qword_256E7FE90);
  swift_beginAccess();
  sub_23F38F530(v21, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  sub_23F35D2E8(&qword_256E6F5A8);
  sub_23F617C48();
  v22 = v73;
  sub_23F3663AC((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  if (v22 == 1)
  {
    v23 = sub_23F35D2E8(&qword_256E70780);
    v24 = v72;
    v72[3] = v23;
    sub_23F389844(&qword_256E70788, &qword_256E70780, (uint64_t)&unk_23F630E08);
    v24[4] = v25;
    return;
  }
  v59 = v3;
  v60 = a2;
  sub_23F38F530(v21, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  sub_23F35D2E8(&qword_256E6F5A0);
  sub_23F617C48();
  sub_23F3663AC((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  sub_23F616E38();
  swift_bridgeObjectRelease();
  v26 = v75;
  if (sub_23F36195C((uint64_t)v14, 1, v75) == 1)
  {
    sub_23F3625D8((uint64_t)v14, &qword_256E70760);
    sub_23F38F04C();
    v27 = swift_allocError();
    *v28 = 0xD000000000000019;
    v28[1] = 0x800000023F634B20;
    swift_willThrow();
LABEL_14:
    v44 = v60;
LABEL_15:
    *v44 = v27;
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v70, v14, v26);
  sub_23F38F530(v21, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  sub_23F617C48();
  v30 = v73;
  v29 = v74;
  sub_23F3663AC((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
  v31 = v30 == 0x6E65476E656B6F74 && v29 == (uint8_t *)0xEE00726F74617265;
  if (v31 || (sub_23F61CC64() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v32 = _s15BravoComponentsVMa();
    v33 = v67;
    sub_23F38F124(v65 + *(int *)(v32 + 36), v67, &qword_256E705E0);
    sub_23F38F530(v21, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
    sub_23F617C48();
    v34 = v73;
    sub_23F3663AC((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
    sub_23F38F530(v21, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
    sub_23F617C48();
    v35 = v73;
    sub_23F3663AC((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
    v36 = v69;
    sub_23F3CD9FC(v33, v69, &qword_256E705E0);
    v37 = v66;
    *(_BYTE *)(v36 + *(int *)(v66 + 20)) = v34;
    *(_BYTE *)(v36 + *(int *)(v37 + 24)) = v35;
    v38 = v68;
    sub_23F38F530(v36, v68, type metadata accessor for FullPlannerGMSClientConfiguration);
    v39 = sub_23F35D2E8(&qword_256E70770);
    v40 = v72;
    v72[3] = v39;
    sub_23F389844(&qword_256E70778, &qword_256E70770, (uint64_t)&unk_23F622390);
    v40[4] = v41;
    v42 = sub_23F36145C(v40);
    v43 = v59;
    sub_23F38CFE4(v38, (uint64_t)v42);
    v27 = v43;
    if (v43)
    {
      sub_23F3663AC(v36, type metadata accessor for FullPlannerGMSClientConfiguration);
      (*(void (**)(char *, uint64_t))(v71 + 8))(v70, v75);
      sub_23F38F0AC((uint64_t)v40);
      goto LABEL_14;
    }
    sub_23F3663AC(v36, type metadata accessor for FullPlannerGMSClientConfiguration);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v70, v75);
  }
  else
  {
    v45 = v30 == 0x65696C4370747468 && v29 == (uint8_t *)0xEA0000000000746ELL;
    v44 = v60;
    if (v45)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v46 = sub_23F61CC64();
      swift_bridgeObjectRelease();
      if ((v46 & 1) == 0)
      {
        v47 = v61;
        sub_23F619088();
        v48 = sub_23F619E8C();
        v49 = sub_23F61C628();
        if (os_log_type_enabled(v48, v49))
        {
          v50 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v50 = 0;
          MEMORY[0x242670B70](v50, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v62 + 8))(v47, v63);
        sub_23F38F04C();
        v27 = swift_allocError();
        *v51 = 0;
        v51[1] = 0;
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v71 + 8))(v70, v75);
        goto LABEL_15;
      }
    }
    v52 = v70;
    v53 = (uint64_t)v64;
    (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v64, v70, v75);
    sub_23F38F530(v21, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
    sub_23F617C48();
    v54 = v73;
    v55 = v74;
    sub_23F3663AC((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FullPlannerPreferences);
    v56 = v72;
    v72[3] = (uint64_t)&type metadata for FullPlannerHTTPClientInterface;
    v56[4] = (uint64_t)&off_256E744C0;
    v57 = swift_allocObject();
    *v56 = v57;
    sub_23F4414E8(v53, v54, v55, v57 + 16);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v52, v75);
  }
}

